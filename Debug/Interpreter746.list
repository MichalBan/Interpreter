
Interpreter746.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00027374  080001d0  080001d0  000101d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000012f4  08027548  08027548  00037548  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0802883c  0802883c  000401e8  2**0
                  CONTENTS
  4 .ARM          00000008  0802883c  0802883c  0003883c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08028844  08028844  000401e8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   0000003c  08028844  08028844  00038844  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   0000003c  08028880  08028880  00038880  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001e8  20000000  080288bc  00040000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000006e8  200001e8  08028aa4  000401e8  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200008d0  08028aa4  000408d0  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000401e8  2**0
                  CONTENTS, READONLY
 12 .debug_info   0030e7bd  00000000  00000000  00040218  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000116fb  00000000  00000000  0034e9d5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00010af8  00000000  00000000  003600d0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00010950  00000000  00000000  00370bc8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0003202e  00000000  00000000  00381518  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00064787  00000000  00000000  003b3546  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    001f8af1  00000000  00000000  00417ccd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  006107be  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00052268  00000000  00000000  00610814  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	; (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	; (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	; (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	200001e8 	.word	0x200001e8
 80001ec:	00000000 	.word	0x00000000
 80001f0:	0802752c 	.word	0x0802752c

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	; (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	; (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	; (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	200001ec 	.word	0x200001ec
 800020c:	0802752c 	.word	0x0802752c

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <strlen>:
 80002b0:	4603      	mov	r3, r0
 80002b2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80002b6:	2a00      	cmp	r2, #0
 80002b8:	d1fb      	bne.n	80002b2 <strlen+0x2>
 80002ba:	1a18      	subs	r0, r3, r0
 80002bc:	3801      	subs	r0, #1
 80002be:	4770      	bx	lr

080002c0 <__aeabi_drsub>:
 80002c0:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80002c4:	e002      	b.n	80002cc <__adddf3>
 80002c6:	bf00      	nop

080002c8 <__aeabi_dsub>:
 80002c8:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080002cc <__adddf3>:
 80002cc:	b530      	push	{r4, r5, lr}
 80002ce:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002d2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002d6:	ea94 0f05 	teq	r4, r5
 80002da:	bf08      	it	eq
 80002dc:	ea90 0f02 	teqeq	r0, r2
 80002e0:	bf1f      	itttt	ne
 80002e2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002e6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ea:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ee:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002f2:	f000 80e2 	beq.w	80004ba <__adddf3+0x1ee>
 80002f6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002fa:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002fe:	bfb8      	it	lt
 8000300:	426d      	neglt	r5, r5
 8000302:	dd0c      	ble.n	800031e <__adddf3+0x52>
 8000304:	442c      	add	r4, r5
 8000306:	ea80 0202 	eor.w	r2, r0, r2
 800030a:	ea81 0303 	eor.w	r3, r1, r3
 800030e:	ea82 0000 	eor.w	r0, r2, r0
 8000312:	ea83 0101 	eor.w	r1, r3, r1
 8000316:	ea80 0202 	eor.w	r2, r0, r2
 800031a:	ea81 0303 	eor.w	r3, r1, r3
 800031e:	2d36      	cmp	r5, #54	; 0x36
 8000320:	bf88      	it	hi
 8000322:	bd30      	pophi	{r4, r5, pc}
 8000324:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000328:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800032c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000330:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000334:	d002      	beq.n	800033c <__adddf3+0x70>
 8000336:	4240      	negs	r0, r0
 8000338:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800033c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000340:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000344:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000348:	d002      	beq.n	8000350 <__adddf3+0x84>
 800034a:	4252      	negs	r2, r2
 800034c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000350:	ea94 0f05 	teq	r4, r5
 8000354:	f000 80a7 	beq.w	80004a6 <__adddf3+0x1da>
 8000358:	f1a4 0401 	sub.w	r4, r4, #1
 800035c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000360:	db0d      	blt.n	800037e <__adddf3+0xb2>
 8000362:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000366:	fa22 f205 	lsr.w	r2, r2, r5
 800036a:	1880      	adds	r0, r0, r2
 800036c:	f141 0100 	adc.w	r1, r1, #0
 8000370:	fa03 f20e 	lsl.w	r2, r3, lr
 8000374:	1880      	adds	r0, r0, r2
 8000376:	fa43 f305 	asr.w	r3, r3, r5
 800037a:	4159      	adcs	r1, r3
 800037c:	e00e      	b.n	800039c <__adddf3+0xd0>
 800037e:	f1a5 0520 	sub.w	r5, r5, #32
 8000382:	f10e 0e20 	add.w	lr, lr, #32
 8000386:	2a01      	cmp	r2, #1
 8000388:	fa03 fc0e 	lsl.w	ip, r3, lr
 800038c:	bf28      	it	cs
 800038e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000392:	fa43 f305 	asr.w	r3, r3, r5
 8000396:	18c0      	adds	r0, r0, r3
 8000398:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800039c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80003a0:	d507      	bpl.n	80003b2 <__adddf3+0xe6>
 80003a2:	f04f 0e00 	mov.w	lr, #0
 80003a6:	f1dc 0c00 	rsbs	ip, ip, #0
 80003aa:	eb7e 0000 	sbcs.w	r0, lr, r0
 80003ae:	eb6e 0101 	sbc.w	r1, lr, r1
 80003b2:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 80003b6:	d31b      	bcc.n	80003f0 <__adddf3+0x124>
 80003b8:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80003bc:	d30c      	bcc.n	80003d8 <__adddf3+0x10c>
 80003be:	0849      	lsrs	r1, r1, #1
 80003c0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003c4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003c8:	f104 0401 	add.w	r4, r4, #1
 80003cc:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003d0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003d4:	f080 809a 	bcs.w	800050c <__adddf3+0x240>
 80003d8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003dc:	bf08      	it	eq
 80003de:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003e2:	f150 0000 	adcs.w	r0, r0, #0
 80003e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ea:	ea41 0105 	orr.w	r1, r1, r5
 80003ee:	bd30      	pop	{r4, r5, pc}
 80003f0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003f4:	4140      	adcs	r0, r0
 80003f6:	eb41 0101 	adc.w	r1, r1, r1
 80003fa:	3c01      	subs	r4, #1
 80003fc:	bf28      	it	cs
 80003fe:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 8000402:	d2e9      	bcs.n	80003d8 <__adddf3+0x10c>
 8000404:	f091 0f00 	teq	r1, #0
 8000408:	bf04      	itt	eq
 800040a:	4601      	moveq	r1, r0
 800040c:	2000      	moveq	r0, #0
 800040e:	fab1 f381 	clz	r3, r1
 8000412:	bf08      	it	eq
 8000414:	3320      	addeq	r3, #32
 8000416:	f1a3 030b 	sub.w	r3, r3, #11
 800041a:	f1b3 0220 	subs.w	r2, r3, #32
 800041e:	da0c      	bge.n	800043a <__adddf3+0x16e>
 8000420:	320c      	adds	r2, #12
 8000422:	dd08      	ble.n	8000436 <__adddf3+0x16a>
 8000424:	f102 0c14 	add.w	ip, r2, #20
 8000428:	f1c2 020c 	rsb	r2, r2, #12
 800042c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000430:	fa21 f102 	lsr.w	r1, r1, r2
 8000434:	e00c      	b.n	8000450 <__adddf3+0x184>
 8000436:	f102 0214 	add.w	r2, r2, #20
 800043a:	bfd8      	it	le
 800043c:	f1c2 0c20 	rsble	ip, r2, #32
 8000440:	fa01 f102 	lsl.w	r1, r1, r2
 8000444:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000448:	bfdc      	itt	le
 800044a:	ea41 010c 	orrle.w	r1, r1, ip
 800044e:	4090      	lslle	r0, r2
 8000450:	1ae4      	subs	r4, r4, r3
 8000452:	bfa2      	ittt	ge
 8000454:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000458:	4329      	orrge	r1, r5
 800045a:	bd30      	popge	{r4, r5, pc}
 800045c:	ea6f 0404 	mvn.w	r4, r4
 8000460:	3c1f      	subs	r4, #31
 8000462:	da1c      	bge.n	800049e <__adddf3+0x1d2>
 8000464:	340c      	adds	r4, #12
 8000466:	dc0e      	bgt.n	8000486 <__adddf3+0x1ba>
 8000468:	f104 0414 	add.w	r4, r4, #20
 800046c:	f1c4 0220 	rsb	r2, r4, #32
 8000470:	fa20 f004 	lsr.w	r0, r0, r4
 8000474:	fa01 f302 	lsl.w	r3, r1, r2
 8000478:	ea40 0003 	orr.w	r0, r0, r3
 800047c:	fa21 f304 	lsr.w	r3, r1, r4
 8000480:	ea45 0103 	orr.w	r1, r5, r3
 8000484:	bd30      	pop	{r4, r5, pc}
 8000486:	f1c4 040c 	rsb	r4, r4, #12
 800048a:	f1c4 0220 	rsb	r2, r4, #32
 800048e:	fa20 f002 	lsr.w	r0, r0, r2
 8000492:	fa01 f304 	lsl.w	r3, r1, r4
 8000496:	ea40 0003 	orr.w	r0, r0, r3
 800049a:	4629      	mov	r1, r5
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	fa21 f004 	lsr.w	r0, r1, r4
 80004a2:	4629      	mov	r1, r5
 80004a4:	bd30      	pop	{r4, r5, pc}
 80004a6:	f094 0f00 	teq	r4, #0
 80004aa:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 80004ae:	bf06      	itte	eq
 80004b0:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 80004b4:	3401      	addeq	r4, #1
 80004b6:	3d01      	subne	r5, #1
 80004b8:	e74e      	b.n	8000358 <__adddf3+0x8c>
 80004ba:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004be:	bf18      	it	ne
 80004c0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004c4:	d029      	beq.n	800051a <__adddf3+0x24e>
 80004c6:	ea94 0f05 	teq	r4, r5
 80004ca:	bf08      	it	eq
 80004cc:	ea90 0f02 	teqeq	r0, r2
 80004d0:	d005      	beq.n	80004de <__adddf3+0x212>
 80004d2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004d6:	bf04      	itt	eq
 80004d8:	4619      	moveq	r1, r3
 80004da:	4610      	moveq	r0, r2
 80004dc:	bd30      	pop	{r4, r5, pc}
 80004de:	ea91 0f03 	teq	r1, r3
 80004e2:	bf1e      	ittt	ne
 80004e4:	2100      	movne	r1, #0
 80004e6:	2000      	movne	r0, #0
 80004e8:	bd30      	popne	{r4, r5, pc}
 80004ea:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ee:	d105      	bne.n	80004fc <__adddf3+0x230>
 80004f0:	0040      	lsls	r0, r0, #1
 80004f2:	4149      	adcs	r1, r1
 80004f4:	bf28      	it	cs
 80004f6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004fa:	bd30      	pop	{r4, r5, pc}
 80004fc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8000500:	bf3c      	itt	cc
 8000502:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8000506:	bd30      	popcc	{r4, r5, pc}
 8000508:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 800050c:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000510:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000514:	f04f 0000 	mov.w	r0, #0
 8000518:	bd30      	pop	{r4, r5, pc}
 800051a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800051e:	bf1a      	itte	ne
 8000520:	4619      	movne	r1, r3
 8000522:	4610      	movne	r0, r2
 8000524:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000528:	bf1c      	itt	ne
 800052a:	460b      	movne	r3, r1
 800052c:	4602      	movne	r2, r0
 800052e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000532:	bf06      	itte	eq
 8000534:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000538:	ea91 0f03 	teqeq	r1, r3
 800053c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000540:	bd30      	pop	{r4, r5, pc}
 8000542:	bf00      	nop

08000544 <__aeabi_ui2d>:
 8000544:	f090 0f00 	teq	r0, #0
 8000548:	bf04      	itt	eq
 800054a:	2100      	moveq	r1, #0
 800054c:	4770      	bxeq	lr
 800054e:	b530      	push	{r4, r5, lr}
 8000550:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000554:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000558:	f04f 0500 	mov.w	r5, #0
 800055c:	f04f 0100 	mov.w	r1, #0
 8000560:	e750      	b.n	8000404 <__adddf3+0x138>
 8000562:	bf00      	nop

08000564 <__aeabi_i2d>:
 8000564:	f090 0f00 	teq	r0, #0
 8000568:	bf04      	itt	eq
 800056a:	2100      	moveq	r1, #0
 800056c:	4770      	bxeq	lr
 800056e:	b530      	push	{r4, r5, lr}
 8000570:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000574:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000578:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800057c:	bf48      	it	mi
 800057e:	4240      	negmi	r0, r0
 8000580:	f04f 0100 	mov.w	r1, #0
 8000584:	e73e      	b.n	8000404 <__adddf3+0x138>
 8000586:	bf00      	nop

08000588 <__aeabi_f2d>:
 8000588:	0042      	lsls	r2, r0, #1
 800058a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800058e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000592:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000596:	bf1f      	itttt	ne
 8000598:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800059c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80005a0:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80005a4:	4770      	bxne	lr
 80005a6:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 80005aa:	bf08      	it	eq
 80005ac:	4770      	bxeq	lr
 80005ae:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 80005b2:	bf04      	itt	eq
 80005b4:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 80005b8:	4770      	bxeq	lr
 80005ba:	b530      	push	{r4, r5, lr}
 80005bc:	f44f 7460 	mov.w	r4, #896	; 0x380
 80005c0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80005c4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80005c8:	e71c      	b.n	8000404 <__adddf3+0x138>
 80005ca:	bf00      	nop

080005cc <__aeabi_ul2d>:
 80005cc:	ea50 0201 	orrs.w	r2, r0, r1
 80005d0:	bf08      	it	eq
 80005d2:	4770      	bxeq	lr
 80005d4:	b530      	push	{r4, r5, lr}
 80005d6:	f04f 0500 	mov.w	r5, #0
 80005da:	e00a      	b.n	80005f2 <__aeabi_l2d+0x16>

080005dc <__aeabi_l2d>:
 80005dc:	ea50 0201 	orrs.w	r2, r0, r1
 80005e0:	bf08      	it	eq
 80005e2:	4770      	bxeq	lr
 80005e4:	b530      	push	{r4, r5, lr}
 80005e6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005ea:	d502      	bpl.n	80005f2 <__aeabi_l2d+0x16>
 80005ec:	4240      	negs	r0, r0
 80005ee:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005f2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005f6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005fa:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005fe:	f43f aed8 	beq.w	80003b2 <__adddf3+0xe6>
 8000602:	f04f 0203 	mov.w	r2, #3
 8000606:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800060a:	bf18      	it	ne
 800060c:	3203      	addne	r2, #3
 800060e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000612:	bf18      	it	ne
 8000614:	3203      	addne	r2, #3
 8000616:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800061a:	f1c2 0320 	rsb	r3, r2, #32
 800061e:	fa00 fc03 	lsl.w	ip, r0, r3
 8000622:	fa20 f002 	lsr.w	r0, r0, r2
 8000626:	fa01 fe03 	lsl.w	lr, r1, r3
 800062a:	ea40 000e 	orr.w	r0, r0, lr
 800062e:	fa21 f102 	lsr.w	r1, r1, r2
 8000632:	4414      	add	r4, r2
 8000634:	e6bd      	b.n	80003b2 <__adddf3+0xe6>
 8000636:	bf00      	nop

08000638 <__aeabi_dmul>:
 8000638:	b570      	push	{r4, r5, r6, lr}
 800063a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800063e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000642:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000646:	bf1d      	ittte	ne
 8000648:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800064c:	ea94 0f0c 	teqne	r4, ip
 8000650:	ea95 0f0c 	teqne	r5, ip
 8000654:	f000 f8de 	bleq	8000814 <__aeabi_dmul+0x1dc>
 8000658:	442c      	add	r4, r5
 800065a:	ea81 0603 	eor.w	r6, r1, r3
 800065e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000662:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000666:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800066a:	bf18      	it	ne
 800066c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000670:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000674:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000678:	d038      	beq.n	80006ec <__aeabi_dmul+0xb4>
 800067a:	fba0 ce02 	umull	ip, lr, r0, r2
 800067e:	f04f 0500 	mov.w	r5, #0
 8000682:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000686:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800068a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800068e:	f04f 0600 	mov.w	r6, #0
 8000692:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000696:	f09c 0f00 	teq	ip, #0
 800069a:	bf18      	it	ne
 800069c:	f04e 0e01 	orrne.w	lr, lr, #1
 80006a0:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 80006a4:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 80006a8:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 80006ac:	d204      	bcs.n	80006b8 <__aeabi_dmul+0x80>
 80006ae:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80006b2:	416d      	adcs	r5, r5
 80006b4:	eb46 0606 	adc.w	r6, r6, r6
 80006b8:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80006bc:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006c0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006c4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006c8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006cc:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006d0:	bf88      	it	hi
 80006d2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006d6:	d81e      	bhi.n	8000716 <__aeabi_dmul+0xde>
 80006d8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006dc:	bf08      	it	eq
 80006de:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006e2:	f150 0000 	adcs.w	r0, r0, #0
 80006e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ea:	bd70      	pop	{r4, r5, r6, pc}
 80006ec:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006f0:	ea46 0101 	orr.w	r1, r6, r1
 80006f4:	ea40 0002 	orr.w	r0, r0, r2
 80006f8:	ea81 0103 	eor.w	r1, r1, r3
 80006fc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000700:	bfc2      	ittt	gt
 8000702:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000706:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800070a:	bd70      	popgt	{r4, r5, r6, pc}
 800070c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000710:	f04f 0e00 	mov.w	lr, #0
 8000714:	3c01      	subs	r4, #1
 8000716:	f300 80ab 	bgt.w	8000870 <__aeabi_dmul+0x238>
 800071a:	f114 0f36 	cmn.w	r4, #54	; 0x36
 800071e:	bfde      	ittt	le
 8000720:	2000      	movle	r0, #0
 8000722:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 8000726:	bd70      	pople	{r4, r5, r6, pc}
 8000728:	f1c4 0400 	rsb	r4, r4, #0
 800072c:	3c20      	subs	r4, #32
 800072e:	da35      	bge.n	800079c <__aeabi_dmul+0x164>
 8000730:	340c      	adds	r4, #12
 8000732:	dc1b      	bgt.n	800076c <__aeabi_dmul+0x134>
 8000734:	f104 0414 	add.w	r4, r4, #20
 8000738:	f1c4 0520 	rsb	r5, r4, #32
 800073c:	fa00 f305 	lsl.w	r3, r0, r5
 8000740:	fa20 f004 	lsr.w	r0, r0, r4
 8000744:	fa01 f205 	lsl.w	r2, r1, r5
 8000748:	ea40 0002 	orr.w	r0, r0, r2
 800074c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000750:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000754:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000758:	fa21 f604 	lsr.w	r6, r1, r4
 800075c:	eb42 0106 	adc.w	r1, r2, r6
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 040c 	rsb	r4, r4, #12
 8000770:	f1c4 0520 	rsb	r5, r4, #32
 8000774:	fa00 f304 	lsl.w	r3, r0, r4
 8000778:	fa20 f005 	lsr.w	r0, r0, r5
 800077c:	fa01 f204 	lsl.w	r2, r1, r4
 8000780:	ea40 0002 	orr.w	r0, r0, r2
 8000784:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000788:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800078c:	f141 0100 	adc.w	r1, r1, #0
 8000790:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000794:	bf08      	it	eq
 8000796:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800079a:	bd70      	pop	{r4, r5, r6, pc}
 800079c:	f1c4 0520 	rsb	r5, r4, #32
 80007a0:	fa00 f205 	lsl.w	r2, r0, r5
 80007a4:	ea4e 0e02 	orr.w	lr, lr, r2
 80007a8:	fa20 f304 	lsr.w	r3, r0, r4
 80007ac:	fa01 f205 	lsl.w	r2, r1, r5
 80007b0:	ea43 0302 	orr.w	r3, r3, r2
 80007b4:	fa21 f004 	lsr.w	r0, r1, r4
 80007b8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007bc:	fa21 f204 	lsr.w	r2, r1, r4
 80007c0:	ea20 0002 	bic.w	r0, r0, r2
 80007c4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007c8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007cc:	bf08      	it	eq
 80007ce:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007d2:	bd70      	pop	{r4, r5, r6, pc}
 80007d4:	f094 0f00 	teq	r4, #0
 80007d8:	d10f      	bne.n	80007fa <__aeabi_dmul+0x1c2>
 80007da:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007de:	0040      	lsls	r0, r0, #1
 80007e0:	eb41 0101 	adc.w	r1, r1, r1
 80007e4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007e8:	bf08      	it	eq
 80007ea:	3c01      	subeq	r4, #1
 80007ec:	d0f7      	beq.n	80007de <__aeabi_dmul+0x1a6>
 80007ee:	ea41 0106 	orr.w	r1, r1, r6
 80007f2:	f095 0f00 	teq	r5, #0
 80007f6:	bf18      	it	ne
 80007f8:	4770      	bxne	lr
 80007fa:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007fe:	0052      	lsls	r2, r2, #1
 8000800:	eb43 0303 	adc.w	r3, r3, r3
 8000804:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000808:	bf08      	it	eq
 800080a:	3d01      	subeq	r5, #1
 800080c:	d0f7      	beq.n	80007fe <__aeabi_dmul+0x1c6>
 800080e:	ea43 0306 	orr.w	r3, r3, r6
 8000812:	4770      	bx	lr
 8000814:	ea94 0f0c 	teq	r4, ip
 8000818:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800081c:	bf18      	it	ne
 800081e:	ea95 0f0c 	teqne	r5, ip
 8000822:	d00c      	beq.n	800083e <__aeabi_dmul+0x206>
 8000824:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000828:	bf18      	it	ne
 800082a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800082e:	d1d1      	bne.n	80007d4 <__aeabi_dmul+0x19c>
 8000830:	ea81 0103 	eor.w	r1, r1, r3
 8000834:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000838:	f04f 0000 	mov.w	r0, #0
 800083c:	bd70      	pop	{r4, r5, r6, pc}
 800083e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000842:	bf06      	itte	eq
 8000844:	4610      	moveq	r0, r2
 8000846:	4619      	moveq	r1, r3
 8000848:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800084c:	d019      	beq.n	8000882 <__aeabi_dmul+0x24a>
 800084e:	ea94 0f0c 	teq	r4, ip
 8000852:	d102      	bne.n	800085a <__aeabi_dmul+0x222>
 8000854:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000858:	d113      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800085a:	ea95 0f0c 	teq	r5, ip
 800085e:	d105      	bne.n	800086c <__aeabi_dmul+0x234>
 8000860:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000864:	bf1c      	itt	ne
 8000866:	4610      	movne	r0, r2
 8000868:	4619      	movne	r1, r3
 800086a:	d10a      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800086c:	ea81 0103 	eor.w	r1, r1, r3
 8000870:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000874:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000878:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800087c:	f04f 0000 	mov.w	r0, #0
 8000880:	bd70      	pop	{r4, r5, r6, pc}
 8000882:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000886:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800088a:	bd70      	pop	{r4, r5, r6, pc}

0800088c <__aeabi_ddiv>:
 800088c:	b570      	push	{r4, r5, r6, lr}
 800088e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000892:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000896:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800089a:	bf1d      	ittte	ne
 800089c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80008a0:	ea94 0f0c 	teqne	r4, ip
 80008a4:	ea95 0f0c 	teqne	r5, ip
 80008a8:	f000 f8a7 	bleq	80009fa <__aeabi_ddiv+0x16e>
 80008ac:	eba4 0405 	sub.w	r4, r4, r5
 80008b0:	ea81 0e03 	eor.w	lr, r1, r3
 80008b4:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008b8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80008bc:	f000 8088 	beq.w	80009d0 <__aeabi_ddiv+0x144>
 80008c0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008c4:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 80008c8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008cc:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008d0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008d4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008d8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008dc:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008e0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008e4:	429d      	cmp	r5, r3
 80008e6:	bf08      	it	eq
 80008e8:	4296      	cmpeq	r6, r2
 80008ea:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008ee:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008f2:	d202      	bcs.n	80008fa <__aeabi_ddiv+0x6e>
 80008f4:	085b      	lsrs	r3, r3, #1
 80008f6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fa:	1ab6      	subs	r6, r6, r2
 80008fc:	eb65 0503 	sbc.w	r5, r5, r3
 8000900:	085b      	lsrs	r3, r3, #1
 8000902:	ea4f 0232 	mov.w	r2, r2, rrx
 8000906:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 800090a:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000938:	085b      	lsrs	r3, r3, #1
 800093a:	ea4f 0232 	mov.w	r2, r2, rrx
 800093e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000942:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000946:	bf22      	ittt	cs
 8000948:	1ab6      	subcs	r6, r6, r2
 800094a:	4675      	movcs	r5, lr
 800094c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000950:	085b      	lsrs	r3, r3, #1
 8000952:	ea4f 0232 	mov.w	r2, r2, rrx
 8000956:	ebb6 0e02 	subs.w	lr, r6, r2
 800095a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800095e:	bf22      	ittt	cs
 8000960:	1ab6      	subcs	r6, r6, r2
 8000962:	4675      	movcs	r5, lr
 8000964:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000968:	ea55 0e06 	orrs.w	lr, r5, r6
 800096c:	d018      	beq.n	80009a0 <__aeabi_ddiv+0x114>
 800096e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000972:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000976:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800097a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800097e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000982:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000986:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800098a:	d1c0      	bne.n	800090e <__aeabi_ddiv+0x82>
 800098c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000990:	d10b      	bne.n	80009aa <__aeabi_ddiv+0x11e>
 8000992:	ea41 0100 	orr.w	r1, r1, r0
 8000996:	f04f 0000 	mov.w	r0, #0
 800099a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800099e:	e7b6      	b.n	800090e <__aeabi_ddiv+0x82>
 80009a0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80009a4:	bf04      	itt	eq
 80009a6:	4301      	orreq	r1, r0
 80009a8:	2000      	moveq	r0, #0
 80009aa:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80009ae:	bf88      	it	hi
 80009b0:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80009b4:	f63f aeaf 	bhi.w	8000716 <__aeabi_dmul+0xde>
 80009b8:	ebb5 0c03 	subs.w	ip, r5, r3
 80009bc:	bf04      	itt	eq
 80009be:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009c2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009c6:	f150 0000 	adcs.w	r0, r0, #0
 80009ca:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009ce:	bd70      	pop	{r4, r5, r6, pc}
 80009d0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009d4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009d8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009dc:	bfc2      	ittt	gt
 80009de:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009e2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009e6:	bd70      	popgt	{r4, r5, r6, pc}
 80009e8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009ec:	f04f 0e00 	mov.w	lr, #0
 80009f0:	3c01      	subs	r4, #1
 80009f2:	e690      	b.n	8000716 <__aeabi_dmul+0xde>
 80009f4:	ea45 0e06 	orr.w	lr, r5, r6
 80009f8:	e68d      	b.n	8000716 <__aeabi_dmul+0xde>
 80009fa:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009fe:	ea94 0f0c 	teq	r4, ip
 8000a02:	bf08      	it	eq
 8000a04:	ea95 0f0c 	teqeq	r5, ip
 8000a08:	f43f af3b 	beq.w	8000882 <__aeabi_dmul+0x24a>
 8000a0c:	ea94 0f0c 	teq	r4, ip
 8000a10:	d10a      	bne.n	8000a28 <__aeabi_ddiv+0x19c>
 8000a12:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000a16:	f47f af34 	bne.w	8000882 <__aeabi_dmul+0x24a>
 8000a1a:	ea95 0f0c 	teq	r5, ip
 8000a1e:	f47f af25 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a22:	4610      	mov	r0, r2
 8000a24:	4619      	mov	r1, r3
 8000a26:	e72c      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a28:	ea95 0f0c 	teq	r5, ip
 8000a2c:	d106      	bne.n	8000a3c <__aeabi_ddiv+0x1b0>
 8000a2e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a32:	f43f aefd 	beq.w	8000830 <__aeabi_dmul+0x1f8>
 8000a36:	4610      	mov	r0, r2
 8000a38:	4619      	mov	r1, r3
 8000a3a:	e722      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a3c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a40:	bf18      	it	ne
 8000a42:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a46:	f47f aec5 	bne.w	80007d4 <__aeabi_dmul+0x19c>
 8000a4a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a4e:	f47f af0d 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a52:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a56:	f47f aeeb 	bne.w	8000830 <__aeabi_dmul+0x1f8>
 8000a5a:	e712      	b.n	8000882 <__aeabi_dmul+0x24a>

08000a5c <__gedf2>:
 8000a5c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a60:	e006      	b.n	8000a70 <__cmpdf2+0x4>
 8000a62:	bf00      	nop

08000a64 <__ledf2>:
 8000a64:	f04f 0c01 	mov.w	ip, #1
 8000a68:	e002      	b.n	8000a70 <__cmpdf2+0x4>
 8000a6a:	bf00      	nop

08000a6c <__cmpdf2>:
 8000a6c:	f04f 0c01 	mov.w	ip, #1
 8000a70:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a74:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a78:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a7c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a80:	bf18      	it	ne
 8000a82:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a86:	d01b      	beq.n	8000ac0 <__cmpdf2+0x54>
 8000a88:	b001      	add	sp, #4
 8000a8a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a8e:	bf0c      	ite	eq
 8000a90:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a94:	ea91 0f03 	teqne	r1, r3
 8000a98:	bf02      	ittt	eq
 8000a9a:	ea90 0f02 	teqeq	r0, r2
 8000a9e:	2000      	moveq	r0, #0
 8000aa0:	4770      	bxeq	lr
 8000aa2:	f110 0f00 	cmn.w	r0, #0
 8000aa6:	ea91 0f03 	teq	r1, r3
 8000aaa:	bf58      	it	pl
 8000aac:	4299      	cmppl	r1, r3
 8000aae:	bf08      	it	eq
 8000ab0:	4290      	cmpeq	r0, r2
 8000ab2:	bf2c      	ite	cs
 8000ab4:	17d8      	asrcs	r0, r3, #31
 8000ab6:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000aba:	f040 0001 	orr.w	r0, r0, #1
 8000abe:	4770      	bx	lr
 8000ac0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000ac4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ac8:	d102      	bne.n	8000ad0 <__cmpdf2+0x64>
 8000aca:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000ace:	d107      	bne.n	8000ae0 <__cmpdf2+0x74>
 8000ad0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ad4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ad8:	d1d6      	bne.n	8000a88 <__cmpdf2+0x1c>
 8000ada:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000ade:	d0d3      	beq.n	8000a88 <__cmpdf2+0x1c>
 8000ae0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ae4:	4770      	bx	lr
 8000ae6:	bf00      	nop

08000ae8 <__aeabi_cdrcmple>:
 8000ae8:	4684      	mov	ip, r0
 8000aea:	4610      	mov	r0, r2
 8000aec:	4662      	mov	r2, ip
 8000aee:	468c      	mov	ip, r1
 8000af0:	4619      	mov	r1, r3
 8000af2:	4663      	mov	r3, ip
 8000af4:	e000      	b.n	8000af8 <__aeabi_cdcmpeq>
 8000af6:	bf00      	nop

08000af8 <__aeabi_cdcmpeq>:
 8000af8:	b501      	push	{r0, lr}
 8000afa:	f7ff ffb7 	bl	8000a6c <__cmpdf2>
 8000afe:	2800      	cmp	r0, #0
 8000b00:	bf48      	it	mi
 8000b02:	f110 0f00 	cmnmi.w	r0, #0
 8000b06:	bd01      	pop	{r0, pc}

08000b08 <__aeabi_dcmpeq>:
 8000b08:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b0c:	f7ff fff4 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b10:	bf0c      	ite	eq
 8000b12:	2001      	moveq	r0, #1
 8000b14:	2000      	movne	r0, #0
 8000b16:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b1a:	bf00      	nop

08000b1c <__aeabi_dcmplt>:
 8000b1c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b20:	f7ff ffea 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b24:	bf34      	ite	cc
 8000b26:	2001      	movcc	r0, #1
 8000b28:	2000      	movcs	r0, #0
 8000b2a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2e:	bf00      	nop

08000b30 <__aeabi_dcmple>:
 8000b30:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b34:	f7ff ffe0 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b38:	bf94      	ite	ls
 8000b3a:	2001      	movls	r0, #1
 8000b3c:	2000      	movhi	r0, #0
 8000b3e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b42:	bf00      	nop

08000b44 <__aeabi_dcmpge>:
 8000b44:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b48:	f7ff ffce 	bl	8000ae8 <__aeabi_cdrcmple>
 8000b4c:	bf94      	ite	ls
 8000b4e:	2001      	movls	r0, #1
 8000b50:	2000      	movhi	r0, #0
 8000b52:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b56:	bf00      	nop

08000b58 <__aeabi_dcmpgt>:
 8000b58:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b5c:	f7ff ffc4 	bl	8000ae8 <__aeabi_cdrcmple>
 8000b60:	bf34      	ite	cc
 8000b62:	2001      	movcc	r0, #1
 8000b64:	2000      	movcs	r0, #0
 8000b66:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b6a:	bf00      	nop

08000b6c <__aeabi_dcmpun>:
 8000b6c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b70:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b74:	d102      	bne.n	8000b7c <__aeabi_dcmpun+0x10>
 8000b76:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b7a:	d10a      	bne.n	8000b92 <__aeabi_dcmpun+0x26>
 8000b7c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b80:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b84:	d102      	bne.n	8000b8c <__aeabi_dcmpun+0x20>
 8000b86:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b8a:	d102      	bne.n	8000b92 <__aeabi_dcmpun+0x26>
 8000b8c:	f04f 0000 	mov.w	r0, #0
 8000b90:	4770      	bx	lr
 8000b92:	f04f 0001 	mov.w	r0, #1
 8000b96:	4770      	bx	lr

08000b98 <__aeabi_d2iz>:
 8000b98:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b9c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000ba0:	d215      	bcs.n	8000bce <__aeabi_d2iz+0x36>
 8000ba2:	d511      	bpl.n	8000bc8 <__aeabi_d2iz+0x30>
 8000ba4:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000ba8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bac:	d912      	bls.n	8000bd4 <__aeabi_d2iz+0x3c>
 8000bae:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bb2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000bb6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bba:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000bbe:	fa23 f002 	lsr.w	r0, r3, r2
 8000bc2:	bf18      	it	ne
 8000bc4:	4240      	negne	r0, r0
 8000bc6:	4770      	bx	lr
 8000bc8:	f04f 0000 	mov.w	r0, #0
 8000bcc:	4770      	bx	lr
 8000bce:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bd2:	d105      	bne.n	8000be0 <__aeabi_d2iz+0x48>
 8000bd4:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000bd8:	bf08      	it	eq
 8000bda:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000bde:	4770      	bx	lr
 8000be0:	f04f 0000 	mov.w	r0, #0
 8000be4:	4770      	bx	lr
 8000be6:	bf00      	nop

08000be8 <__aeabi_d2uiz>:
 8000be8:	004a      	lsls	r2, r1, #1
 8000bea:	d211      	bcs.n	8000c10 <__aeabi_d2uiz+0x28>
 8000bec:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000bf0:	d211      	bcs.n	8000c16 <__aeabi_d2uiz+0x2e>
 8000bf2:	d50d      	bpl.n	8000c10 <__aeabi_d2uiz+0x28>
 8000bf4:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000bf8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bfc:	d40e      	bmi.n	8000c1c <__aeabi_d2uiz+0x34>
 8000bfe:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c02:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000c06:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000c0a:	fa23 f002 	lsr.w	r0, r3, r2
 8000c0e:	4770      	bx	lr
 8000c10:	f04f 0000 	mov.w	r0, #0
 8000c14:	4770      	bx	lr
 8000c16:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000c1a:	d102      	bne.n	8000c22 <__aeabi_d2uiz+0x3a>
 8000c1c:	f04f 30ff 	mov.w	r0, #4294967295
 8000c20:	4770      	bx	lr
 8000c22:	f04f 0000 	mov.w	r0, #0
 8000c26:	4770      	bx	lr

08000c28 <__aeabi_d2f>:
 8000c28:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000c2c:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000c30:	bf24      	itt	cs
 8000c32:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000c36:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000c3a:	d90d      	bls.n	8000c58 <__aeabi_d2f+0x30>
 8000c3c:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000c40:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000c44:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000c48:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000c4c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000c50:	bf08      	it	eq
 8000c52:	f020 0001 	biceq.w	r0, r0, #1
 8000c56:	4770      	bx	lr
 8000c58:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000c5c:	d121      	bne.n	8000ca2 <__aeabi_d2f+0x7a>
 8000c5e:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000c62:	bfbc      	itt	lt
 8000c64:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000c68:	4770      	bxlt	lr
 8000c6a:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000c6e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c72:	f1c2 0218 	rsb	r2, r2, #24
 8000c76:	f1c2 0c20 	rsb	ip, r2, #32
 8000c7a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c7e:	fa20 f002 	lsr.w	r0, r0, r2
 8000c82:	bf18      	it	ne
 8000c84:	f040 0001 	orrne.w	r0, r0, #1
 8000c88:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c8c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c90:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c94:	ea40 000c 	orr.w	r0, r0, ip
 8000c98:	fa23 f302 	lsr.w	r3, r3, r2
 8000c9c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000ca0:	e7cc      	b.n	8000c3c <__aeabi_d2f+0x14>
 8000ca2:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000ca6:	d107      	bne.n	8000cb8 <__aeabi_d2f+0x90>
 8000ca8:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000cac:	bf1e      	ittt	ne
 8000cae:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000cb2:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000cb6:	4770      	bxne	lr
 8000cb8:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000cbc:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000cc0:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000cc4:	4770      	bx	lr
 8000cc6:	bf00      	nop

08000cc8 <__aeabi_uldivmod>:
 8000cc8:	b953      	cbnz	r3, 8000ce0 <__aeabi_uldivmod+0x18>
 8000cca:	b94a      	cbnz	r2, 8000ce0 <__aeabi_uldivmod+0x18>
 8000ccc:	2900      	cmp	r1, #0
 8000cce:	bf08      	it	eq
 8000cd0:	2800      	cmpeq	r0, #0
 8000cd2:	bf1c      	itt	ne
 8000cd4:	f04f 31ff 	movne.w	r1, #4294967295
 8000cd8:	f04f 30ff 	movne.w	r0, #4294967295
 8000cdc:	f000 b9a4 	b.w	8001028 <__aeabi_idiv0>
 8000ce0:	f1ad 0c08 	sub.w	ip, sp, #8
 8000ce4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000ce8:	f000 f83c 	bl	8000d64 <__udivmoddi4>
 8000cec:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000cf0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000cf4:	b004      	add	sp, #16
 8000cf6:	4770      	bx	lr

08000cf8 <__aeabi_d2lz>:
 8000cf8:	b538      	push	{r3, r4, r5, lr}
 8000cfa:	2200      	movs	r2, #0
 8000cfc:	2300      	movs	r3, #0
 8000cfe:	4604      	mov	r4, r0
 8000d00:	460d      	mov	r5, r1
 8000d02:	f7ff ff0b 	bl	8000b1c <__aeabi_dcmplt>
 8000d06:	b928      	cbnz	r0, 8000d14 <__aeabi_d2lz+0x1c>
 8000d08:	4620      	mov	r0, r4
 8000d0a:	4629      	mov	r1, r5
 8000d0c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000d10:	f000 b80a 	b.w	8000d28 <__aeabi_d2ulz>
 8000d14:	4620      	mov	r0, r4
 8000d16:	f105 4100 	add.w	r1, r5, #2147483648	; 0x80000000
 8000d1a:	f000 f805 	bl	8000d28 <__aeabi_d2ulz>
 8000d1e:	4240      	negs	r0, r0
 8000d20:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000d24:	bd38      	pop	{r3, r4, r5, pc}
 8000d26:	bf00      	nop

08000d28 <__aeabi_d2ulz>:
 8000d28:	b5d0      	push	{r4, r6, r7, lr}
 8000d2a:	4b0c      	ldr	r3, [pc, #48]	; (8000d5c <__aeabi_d2ulz+0x34>)
 8000d2c:	2200      	movs	r2, #0
 8000d2e:	4606      	mov	r6, r0
 8000d30:	460f      	mov	r7, r1
 8000d32:	f7ff fc81 	bl	8000638 <__aeabi_dmul>
 8000d36:	f7ff ff57 	bl	8000be8 <__aeabi_d2uiz>
 8000d3a:	4604      	mov	r4, r0
 8000d3c:	f7ff fc02 	bl	8000544 <__aeabi_ui2d>
 8000d40:	4b07      	ldr	r3, [pc, #28]	; (8000d60 <__aeabi_d2ulz+0x38>)
 8000d42:	2200      	movs	r2, #0
 8000d44:	f7ff fc78 	bl	8000638 <__aeabi_dmul>
 8000d48:	4602      	mov	r2, r0
 8000d4a:	460b      	mov	r3, r1
 8000d4c:	4630      	mov	r0, r6
 8000d4e:	4639      	mov	r1, r7
 8000d50:	f7ff faba 	bl	80002c8 <__aeabi_dsub>
 8000d54:	f7ff ff48 	bl	8000be8 <__aeabi_d2uiz>
 8000d58:	4621      	mov	r1, r4
 8000d5a:	bdd0      	pop	{r4, r6, r7, pc}
 8000d5c:	3df00000 	.word	0x3df00000
 8000d60:	41f00000 	.word	0x41f00000

08000d64 <__udivmoddi4>:
 8000d64:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000d68:	9d08      	ldr	r5, [sp, #32]
 8000d6a:	4604      	mov	r4, r0
 8000d6c:	468c      	mov	ip, r1
 8000d6e:	2b00      	cmp	r3, #0
 8000d70:	f040 8083 	bne.w	8000e7a <__udivmoddi4+0x116>
 8000d74:	428a      	cmp	r2, r1
 8000d76:	4617      	mov	r7, r2
 8000d78:	d947      	bls.n	8000e0a <__udivmoddi4+0xa6>
 8000d7a:	fab2 f282 	clz	r2, r2
 8000d7e:	b142      	cbz	r2, 8000d92 <__udivmoddi4+0x2e>
 8000d80:	f1c2 0020 	rsb	r0, r2, #32
 8000d84:	fa24 f000 	lsr.w	r0, r4, r0
 8000d88:	4091      	lsls	r1, r2
 8000d8a:	4097      	lsls	r7, r2
 8000d8c:	ea40 0c01 	orr.w	ip, r0, r1
 8000d90:	4094      	lsls	r4, r2
 8000d92:	ea4f 4817 	mov.w	r8, r7, lsr #16
 8000d96:	0c23      	lsrs	r3, r4, #16
 8000d98:	fbbc f6f8 	udiv	r6, ip, r8
 8000d9c:	fa1f fe87 	uxth.w	lr, r7
 8000da0:	fb08 c116 	mls	r1, r8, r6, ip
 8000da4:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000da8:	fb06 f10e 	mul.w	r1, r6, lr
 8000dac:	4299      	cmp	r1, r3
 8000dae:	d909      	bls.n	8000dc4 <__udivmoddi4+0x60>
 8000db0:	18fb      	adds	r3, r7, r3
 8000db2:	f106 30ff 	add.w	r0, r6, #4294967295
 8000db6:	f080 8119 	bcs.w	8000fec <__udivmoddi4+0x288>
 8000dba:	4299      	cmp	r1, r3
 8000dbc:	f240 8116 	bls.w	8000fec <__udivmoddi4+0x288>
 8000dc0:	3e02      	subs	r6, #2
 8000dc2:	443b      	add	r3, r7
 8000dc4:	1a5b      	subs	r3, r3, r1
 8000dc6:	b2a4      	uxth	r4, r4
 8000dc8:	fbb3 f0f8 	udiv	r0, r3, r8
 8000dcc:	fb08 3310 	mls	r3, r8, r0, r3
 8000dd0:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000dd4:	fb00 fe0e 	mul.w	lr, r0, lr
 8000dd8:	45a6      	cmp	lr, r4
 8000dda:	d909      	bls.n	8000df0 <__udivmoddi4+0x8c>
 8000ddc:	193c      	adds	r4, r7, r4
 8000dde:	f100 33ff 	add.w	r3, r0, #4294967295
 8000de2:	f080 8105 	bcs.w	8000ff0 <__udivmoddi4+0x28c>
 8000de6:	45a6      	cmp	lr, r4
 8000de8:	f240 8102 	bls.w	8000ff0 <__udivmoddi4+0x28c>
 8000dec:	3802      	subs	r0, #2
 8000dee:	443c      	add	r4, r7
 8000df0:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000df4:	eba4 040e 	sub.w	r4, r4, lr
 8000df8:	2600      	movs	r6, #0
 8000dfa:	b11d      	cbz	r5, 8000e04 <__udivmoddi4+0xa0>
 8000dfc:	40d4      	lsrs	r4, r2
 8000dfe:	2300      	movs	r3, #0
 8000e00:	e9c5 4300 	strd	r4, r3, [r5]
 8000e04:	4631      	mov	r1, r6
 8000e06:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000e0a:	b902      	cbnz	r2, 8000e0e <__udivmoddi4+0xaa>
 8000e0c:	deff      	udf	#255	; 0xff
 8000e0e:	fab2 f282 	clz	r2, r2
 8000e12:	2a00      	cmp	r2, #0
 8000e14:	d150      	bne.n	8000eb8 <__udivmoddi4+0x154>
 8000e16:	1bcb      	subs	r3, r1, r7
 8000e18:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000e1c:	fa1f f887 	uxth.w	r8, r7
 8000e20:	2601      	movs	r6, #1
 8000e22:	fbb3 fcfe 	udiv	ip, r3, lr
 8000e26:	0c21      	lsrs	r1, r4, #16
 8000e28:	fb0e 331c 	mls	r3, lr, ip, r3
 8000e2c:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000e30:	fb08 f30c 	mul.w	r3, r8, ip
 8000e34:	428b      	cmp	r3, r1
 8000e36:	d907      	bls.n	8000e48 <__udivmoddi4+0xe4>
 8000e38:	1879      	adds	r1, r7, r1
 8000e3a:	f10c 30ff 	add.w	r0, ip, #4294967295
 8000e3e:	d202      	bcs.n	8000e46 <__udivmoddi4+0xe2>
 8000e40:	428b      	cmp	r3, r1
 8000e42:	f200 80e9 	bhi.w	8001018 <__udivmoddi4+0x2b4>
 8000e46:	4684      	mov	ip, r0
 8000e48:	1ac9      	subs	r1, r1, r3
 8000e4a:	b2a3      	uxth	r3, r4
 8000e4c:	fbb1 f0fe 	udiv	r0, r1, lr
 8000e50:	fb0e 1110 	mls	r1, lr, r0, r1
 8000e54:	ea43 4401 	orr.w	r4, r3, r1, lsl #16
 8000e58:	fb08 f800 	mul.w	r8, r8, r0
 8000e5c:	45a0      	cmp	r8, r4
 8000e5e:	d907      	bls.n	8000e70 <__udivmoddi4+0x10c>
 8000e60:	193c      	adds	r4, r7, r4
 8000e62:	f100 33ff 	add.w	r3, r0, #4294967295
 8000e66:	d202      	bcs.n	8000e6e <__udivmoddi4+0x10a>
 8000e68:	45a0      	cmp	r8, r4
 8000e6a:	f200 80d9 	bhi.w	8001020 <__udivmoddi4+0x2bc>
 8000e6e:	4618      	mov	r0, r3
 8000e70:	eba4 0408 	sub.w	r4, r4, r8
 8000e74:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 8000e78:	e7bf      	b.n	8000dfa <__udivmoddi4+0x96>
 8000e7a:	428b      	cmp	r3, r1
 8000e7c:	d909      	bls.n	8000e92 <__udivmoddi4+0x12e>
 8000e7e:	2d00      	cmp	r5, #0
 8000e80:	f000 80b1 	beq.w	8000fe6 <__udivmoddi4+0x282>
 8000e84:	2600      	movs	r6, #0
 8000e86:	e9c5 0100 	strd	r0, r1, [r5]
 8000e8a:	4630      	mov	r0, r6
 8000e8c:	4631      	mov	r1, r6
 8000e8e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000e92:	fab3 f683 	clz	r6, r3
 8000e96:	2e00      	cmp	r6, #0
 8000e98:	d14a      	bne.n	8000f30 <__udivmoddi4+0x1cc>
 8000e9a:	428b      	cmp	r3, r1
 8000e9c:	d302      	bcc.n	8000ea4 <__udivmoddi4+0x140>
 8000e9e:	4282      	cmp	r2, r0
 8000ea0:	f200 80b8 	bhi.w	8001014 <__udivmoddi4+0x2b0>
 8000ea4:	1a84      	subs	r4, r0, r2
 8000ea6:	eb61 0103 	sbc.w	r1, r1, r3
 8000eaa:	2001      	movs	r0, #1
 8000eac:	468c      	mov	ip, r1
 8000eae:	2d00      	cmp	r5, #0
 8000eb0:	d0a8      	beq.n	8000e04 <__udivmoddi4+0xa0>
 8000eb2:	e9c5 4c00 	strd	r4, ip, [r5]
 8000eb6:	e7a5      	b.n	8000e04 <__udivmoddi4+0xa0>
 8000eb8:	f1c2 0320 	rsb	r3, r2, #32
 8000ebc:	fa20 f603 	lsr.w	r6, r0, r3
 8000ec0:	4097      	lsls	r7, r2
 8000ec2:	fa01 f002 	lsl.w	r0, r1, r2
 8000ec6:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000eca:	40d9      	lsrs	r1, r3
 8000ecc:	4330      	orrs	r0, r6
 8000ece:	0c03      	lsrs	r3, r0, #16
 8000ed0:	fbb1 f6fe 	udiv	r6, r1, lr
 8000ed4:	fa1f f887 	uxth.w	r8, r7
 8000ed8:	fb0e 1116 	mls	r1, lr, r6, r1
 8000edc:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000ee0:	fb06 f108 	mul.w	r1, r6, r8
 8000ee4:	4299      	cmp	r1, r3
 8000ee6:	fa04 f402 	lsl.w	r4, r4, r2
 8000eea:	d909      	bls.n	8000f00 <__udivmoddi4+0x19c>
 8000eec:	18fb      	adds	r3, r7, r3
 8000eee:	f106 3cff 	add.w	ip, r6, #4294967295
 8000ef2:	f080 808d 	bcs.w	8001010 <__udivmoddi4+0x2ac>
 8000ef6:	4299      	cmp	r1, r3
 8000ef8:	f240 808a 	bls.w	8001010 <__udivmoddi4+0x2ac>
 8000efc:	3e02      	subs	r6, #2
 8000efe:	443b      	add	r3, r7
 8000f00:	1a5b      	subs	r3, r3, r1
 8000f02:	b281      	uxth	r1, r0
 8000f04:	fbb3 f0fe 	udiv	r0, r3, lr
 8000f08:	fb0e 3310 	mls	r3, lr, r0, r3
 8000f0c:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000f10:	fb00 f308 	mul.w	r3, r0, r8
 8000f14:	428b      	cmp	r3, r1
 8000f16:	d907      	bls.n	8000f28 <__udivmoddi4+0x1c4>
 8000f18:	1879      	adds	r1, r7, r1
 8000f1a:	f100 3cff 	add.w	ip, r0, #4294967295
 8000f1e:	d273      	bcs.n	8001008 <__udivmoddi4+0x2a4>
 8000f20:	428b      	cmp	r3, r1
 8000f22:	d971      	bls.n	8001008 <__udivmoddi4+0x2a4>
 8000f24:	3802      	subs	r0, #2
 8000f26:	4439      	add	r1, r7
 8000f28:	1acb      	subs	r3, r1, r3
 8000f2a:	ea40 4606 	orr.w	r6, r0, r6, lsl #16
 8000f2e:	e778      	b.n	8000e22 <__udivmoddi4+0xbe>
 8000f30:	f1c6 0c20 	rsb	ip, r6, #32
 8000f34:	fa03 f406 	lsl.w	r4, r3, r6
 8000f38:	fa22 f30c 	lsr.w	r3, r2, ip
 8000f3c:	431c      	orrs	r4, r3
 8000f3e:	fa20 f70c 	lsr.w	r7, r0, ip
 8000f42:	fa01 f306 	lsl.w	r3, r1, r6
 8000f46:	ea4f 4e14 	mov.w	lr, r4, lsr #16
 8000f4a:	fa21 f10c 	lsr.w	r1, r1, ip
 8000f4e:	431f      	orrs	r7, r3
 8000f50:	0c3b      	lsrs	r3, r7, #16
 8000f52:	fbb1 f9fe 	udiv	r9, r1, lr
 8000f56:	fa1f f884 	uxth.w	r8, r4
 8000f5a:	fb0e 1119 	mls	r1, lr, r9, r1
 8000f5e:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
 8000f62:	fb09 fa08 	mul.w	sl, r9, r8
 8000f66:	458a      	cmp	sl, r1
 8000f68:	fa02 f206 	lsl.w	r2, r2, r6
 8000f6c:	fa00 f306 	lsl.w	r3, r0, r6
 8000f70:	d908      	bls.n	8000f84 <__udivmoddi4+0x220>
 8000f72:	1861      	adds	r1, r4, r1
 8000f74:	f109 30ff 	add.w	r0, r9, #4294967295
 8000f78:	d248      	bcs.n	800100c <__udivmoddi4+0x2a8>
 8000f7a:	458a      	cmp	sl, r1
 8000f7c:	d946      	bls.n	800100c <__udivmoddi4+0x2a8>
 8000f7e:	f1a9 0902 	sub.w	r9, r9, #2
 8000f82:	4421      	add	r1, r4
 8000f84:	eba1 010a 	sub.w	r1, r1, sl
 8000f88:	b2bf      	uxth	r7, r7
 8000f8a:	fbb1 f0fe 	udiv	r0, r1, lr
 8000f8e:	fb0e 1110 	mls	r1, lr, r0, r1
 8000f92:	ea47 4701 	orr.w	r7, r7, r1, lsl #16
 8000f96:	fb00 f808 	mul.w	r8, r0, r8
 8000f9a:	45b8      	cmp	r8, r7
 8000f9c:	d907      	bls.n	8000fae <__udivmoddi4+0x24a>
 8000f9e:	19e7      	adds	r7, r4, r7
 8000fa0:	f100 31ff 	add.w	r1, r0, #4294967295
 8000fa4:	d22e      	bcs.n	8001004 <__udivmoddi4+0x2a0>
 8000fa6:	45b8      	cmp	r8, r7
 8000fa8:	d92c      	bls.n	8001004 <__udivmoddi4+0x2a0>
 8000faa:	3802      	subs	r0, #2
 8000fac:	4427      	add	r7, r4
 8000fae:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 8000fb2:	eba7 0708 	sub.w	r7, r7, r8
 8000fb6:	fba0 8902 	umull	r8, r9, r0, r2
 8000fba:	454f      	cmp	r7, r9
 8000fbc:	46c6      	mov	lr, r8
 8000fbe:	4649      	mov	r1, r9
 8000fc0:	d31a      	bcc.n	8000ff8 <__udivmoddi4+0x294>
 8000fc2:	d017      	beq.n	8000ff4 <__udivmoddi4+0x290>
 8000fc4:	b15d      	cbz	r5, 8000fde <__udivmoddi4+0x27a>
 8000fc6:	ebb3 020e 	subs.w	r2, r3, lr
 8000fca:	eb67 0701 	sbc.w	r7, r7, r1
 8000fce:	fa07 fc0c 	lsl.w	ip, r7, ip
 8000fd2:	40f2      	lsrs	r2, r6
 8000fd4:	ea4c 0202 	orr.w	r2, ip, r2
 8000fd8:	40f7      	lsrs	r7, r6
 8000fda:	e9c5 2700 	strd	r2, r7, [r5]
 8000fde:	2600      	movs	r6, #0
 8000fe0:	4631      	mov	r1, r6
 8000fe2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000fe6:	462e      	mov	r6, r5
 8000fe8:	4628      	mov	r0, r5
 8000fea:	e70b      	b.n	8000e04 <__udivmoddi4+0xa0>
 8000fec:	4606      	mov	r6, r0
 8000fee:	e6e9      	b.n	8000dc4 <__udivmoddi4+0x60>
 8000ff0:	4618      	mov	r0, r3
 8000ff2:	e6fd      	b.n	8000df0 <__udivmoddi4+0x8c>
 8000ff4:	4543      	cmp	r3, r8
 8000ff6:	d2e5      	bcs.n	8000fc4 <__udivmoddi4+0x260>
 8000ff8:	ebb8 0e02 	subs.w	lr, r8, r2
 8000ffc:	eb69 0104 	sbc.w	r1, r9, r4
 8001000:	3801      	subs	r0, #1
 8001002:	e7df      	b.n	8000fc4 <__udivmoddi4+0x260>
 8001004:	4608      	mov	r0, r1
 8001006:	e7d2      	b.n	8000fae <__udivmoddi4+0x24a>
 8001008:	4660      	mov	r0, ip
 800100a:	e78d      	b.n	8000f28 <__udivmoddi4+0x1c4>
 800100c:	4681      	mov	r9, r0
 800100e:	e7b9      	b.n	8000f84 <__udivmoddi4+0x220>
 8001010:	4666      	mov	r6, ip
 8001012:	e775      	b.n	8000f00 <__udivmoddi4+0x19c>
 8001014:	4630      	mov	r0, r6
 8001016:	e74a      	b.n	8000eae <__udivmoddi4+0x14a>
 8001018:	f1ac 0c02 	sub.w	ip, ip, #2
 800101c:	4439      	add	r1, r7
 800101e:	e713      	b.n	8000e48 <__udivmoddi4+0xe4>
 8001020:	3802      	subs	r0, #2
 8001022:	443c      	add	r4, r7
 8001024:	e724      	b.n	8000e70 <__udivmoddi4+0x10c>
 8001026:	bf00      	nop

08001028 <__aeabi_idiv0>:
 8001028:	4770      	bx	lr
 800102a:	bf00      	nop

0800102c <_ZNSt11char_traitsIcE6lengthEPKc>:
#endif
	return __builtin_memcmp(__s1, __s2, __n);
      }

      static _GLIBCXX17_CONSTEXPR size_t
      length(const char_type* __s)
 800102c:	b580      	push	{r7, lr}
 800102e:	b084      	sub	sp, #16
 8001030:	af00      	add	r7, sp, #0
 8001032:	6078      	str	r0, [r7, #4]
 8001034:	687b      	ldr	r3, [r7, #4]
 8001036:	60fb      	str	r3, [r7, #12]
      return __builtin_is_constant_evaluated();
 8001038:	2300      	movs	r3, #0
      {
#if __cplusplus >= 201703L
	if (__constant_string_p(__s))
 800103a:	2b00      	cmp	r3, #0
 800103c:	d004      	beq.n	8001048 <_ZNSt11char_traitsIcE6lengthEPKc+0x1c>
	  return __gnu_cxx::char_traits<char_type>::length(__s);
 800103e:	6878      	ldr	r0, [r7, #4]
 8001040:	f000 fd36 	bl	8001ab0 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>
 8001044:	4603      	mov	r3, r0
 8001046:	e004      	b.n	8001052 <_ZNSt11char_traitsIcE6lengthEPKc+0x26>
#endif
	return __builtin_strlen(__s);
 8001048:	6878      	ldr	r0, [r7, #4]
 800104a:	f7ff f931 	bl	80002b0 <strlen>
 800104e:	4603      	mov	r3, r0
 8001050:	bf00      	nop
      }
 8001052:	4618      	mov	r0, r3
 8001054:	3710      	adds	r7, #16
 8001056:	46bd      	mov	sp, r7
 8001058:	bd80      	pop	{r7, pc}

0800105a <_ZnwjPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
_GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
 800105a:	b480      	push	{r7}
 800105c:	b083      	sub	sp, #12
 800105e:	af00      	add	r7, sp, #0
 8001060:	6078      	str	r0, [r7, #4]
 8001062:	6039      	str	r1, [r7, #0]
 8001064:	683b      	ldr	r3, [r7, #0]
 8001066:	4618      	mov	r0, r3
 8001068:	370c      	adds	r7, #12
 800106a:	46bd      	mov	sp, r7
 800106c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001070:	4770      	bx	lr

08001072 <_ZSt26__throw_bad_variant_accessPKc>:
    friend void __throw_bad_variant_access(const char* __what);
  };

  inline void
  __throw_bad_variant_access(const char* __what)
  { _GLIBCXX_THROW_OR_ABORT(bad_variant_access(__what)); }
 8001072:	b580      	push	{r7, lr}
 8001074:	b082      	sub	sp, #8
 8001076:	af00      	add	r7, sp, #0
 8001078:	6078      	str	r0, [r7, #4]
 800107a:	f023 f803 	bl	8024084 <abort>

0800107e <_ZNSt15_Rb_tree_headerC1Ev>:
  struct _Rb_tree_header
  {
    _Rb_tree_node_base	_M_header;
    size_t		_M_node_count; // Keeps track of size of tree.

    _Rb_tree_header() _GLIBCXX_NOEXCEPT
 800107e:	b580      	push	{r7, lr}
 8001080:	b082      	sub	sp, #8
 8001082:	af00      	add	r7, sp, #0
 8001084:	6078      	str	r0, [r7, #4]
    {
      _M_header._M_color = _S_red;
 8001086:	687b      	ldr	r3, [r7, #4]
 8001088:	2200      	movs	r2, #0
 800108a:	701a      	strb	r2, [r3, #0]
      _M_reset();
 800108c:	6878      	ldr	r0, [r7, #4]
 800108e:	f000 f805 	bl	800109c <_ZNSt15_Rb_tree_header8_M_resetEv>
    }
 8001092:	687b      	ldr	r3, [r7, #4]
 8001094:	4618      	mov	r0, r3
 8001096:	3708      	adds	r7, #8
 8001098:	46bd      	mov	sp, r7
 800109a:	bd80      	pop	{r7, pc}

0800109c <_ZNSt15_Rb_tree_header8_M_resetEv>:

      __from._M_reset();
    }

    void
    _M_reset()
 800109c:	b480      	push	{r7}
 800109e:	b083      	sub	sp, #12
 80010a0:	af00      	add	r7, sp, #0
 80010a2:	6078      	str	r0, [r7, #4]
    {
      _M_header._M_parent = 0;
 80010a4:	687b      	ldr	r3, [r7, #4]
 80010a6:	2200      	movs	r2, #0
 80010a8:	605a      	str	r2, [r3, #4]
      _M_header._M_left = &_M_header;
 80010aa:	687a      	ldr	r2, [r7, #4]
 80010ac:	687b      	ldr	r3, [r7, #4]
 80010ae:	609a      	str	r2, [r3, #8]
      _M_header._M_right = &_M_header;
 80010b0:	687a      	ldr	r2, [r7, #4]
 80010b2:	687b      	ldr	r3, [r7, #4]
 80010b4:	60da      	str	r2, [r3, #12]
      _M_node_count = 0;
 80010b6:	687b      	ldr	r3, [r7, #4]
 80010b8:	2200      	movs	r2, #0
 80010ba:	611a      	str	r2, [r3, #16]
    }
 80010bc:	bf00      	nop
 80010be:	370c      	adds	r7, #12
 80010c0:	46bd      	mov	sp, r7
 80010c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010c6:	4770      	bx	lr

080010c8 <_ZSt7forwardI10token_typeEOT_RNSt16remove_referenceIS1_E4typeE>:
   *
   *  This function is used to implement "perfect forwarding".
   */
  template<typename _Tp>
    constexpr _Tp&&
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80010c8:	b480      	push	{r7}
 80010ca:	b083      	sub	sp, #12
 80010cc:	af00      	add	r7, sp, #0
 80010ce:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80010d0:	687b      	ldr	r3, [r7, #4]
 80010d2:	4618      	mov	r0, r3
 80010d4:	370c      	adds	r7, #12
 80010d6:	46bd      	mov	sp, r7
 80010d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010dc:	4770      	bx	lr

080010de <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>:
   *
   *  @tparam _T1  Type of first object.
   *  @tparam _T2  Type of second object.
   */
  template<typename _T1, typename _T2>
    struct pair
 80010de:	b580      	push	{r7, lr}
 80010e0:	b082      	sub	sp, #8
 80010e2:	af00      	add	r7, sp, #0
 80010e4:	6078      	str	r0, [r7, #4]
 80010e6:	687b      	ldr	r3, [r7, #4]
 80010e8:	4618      	mov	r0, r3
 80010ea:	f021 fe3e 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80010ee:	687b      	ldr	r3, [r7, #4]
 80010f0:	4618      	mov	r0, r3
 80010f2:	3708      	adds	r7, #8
 80010f4:	46bd      	mov	sp, r7
 80010f6:	bd80      	pop	{r7, pc}

080010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>:
	       enable_if<_PCCP::template
			   _MoveConstructiblePair<_U1, _U2>()
			  && _PCCP::template
			   _ImplicitlyMoveConvertiblePair<_U1, _U2>(),
                         bool>::type=true>
	constexpr pair(_U1&& __x, _U2&& __y)
 80010f8:	b5b0      	push	{r4, r5, r7, lr}
 80010fa:	b086      	sub	sp, #24
 80010fc:	af00      	add	r7, sp, #0
 80010fe:	60f8      	str	r0, [r7, #12]
 8001100:	60b9      	str	r1, [r7, #8]
 8001102:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 8001104:	68fc      	ldr	r4, [r7, #12]
 8001106:	68b8      	ldr	r0, [r7, #8]
 8001108:	f000 fd3a 	bl	8001b80 <_ZSt7forwardIRA5_KcEOT_RNSt16remove_referenceIS3_E4typeE>
 800110c:	4605      	mov	r5, r0
 800110e:	f107 0314 	add.w	r3, r7, #20
 8001112:	4618      	mov	r0, r3
 8001114:	f021 fb98 	bl	8022848 <_ZNSaIcEC1Ev>
 8001118:	f107 0314 	add.w	r3, r7, #20
 800111c:	461a      	mov	r2, r3
 800111e:	4629      	mov	r1, r5
 8001120:	4620      	mov	r0, r4
 8001122:	f000 fd38 	bl	8001b96 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8001126:	f107 0314 	add.w	r3, r7, #20
 800112a:	4618      	mov	r0, r3
 800112c:	f021 fb8d 	bl	802284a <_ZNSaIcED1Ev>
 8001130:	6878      	ldr	r0, [r7, #4]
 8001132:	f7ff ffc9 	bl	80010c8 <_ZSt7forwardI10token_typeEOT_RNSt16remove_referenceIS1_E4typeE>
 8001136:	4603      	mov	r3, r0
 8001138:	781a      	ldrb	r2, [r3, #0]
 800113a:	68fb      	ldr	r3, [r7, #12]
 800113c:	761a      	strb	r2, [r3, #24]
 800113e:	68fb      	ldr	r3, [r7, #12]
 8001140:	4618      	mov	r0, r3
 8001142:	3718      	adds	r7, #24
 8001144:	46bd      	mov	sp, r7
 8001146:	bdb0      	pop	{r4, r5, r7, pc}

08001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 8001148:	b5b0      	push	{r4, r5, r7, lr}
 800114a:	b086      	sub	sp, #24
 800114c:	af00      	add	r7, sp, #0
 800114e:	60f8      	str	r0, [r7, #12]
 8001150:	60b9      	str	r1, [r7, #8]
 8001152:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 8001154:	68fc      	ldr	r4, [r7, #12]
 8001156:	68b8      	ldr	r0, [r7, #8]
 8001158:	f000 fd43 	bl	8001be2 <_ZSt7forwardIRA6_KcEOT_RNSt16remove_referenceIS3_E4typeE>
 800115c:	4605      	mov	r5, r0
 800115e:	f107 0314 	add.w	r3, r7, #20
 8001162:	4618      	mov	r0, r3
 8001164:	f021 fb70 	bl	8022848 <_ZNSaIcEC1Ev>
 8001168:	f107 0314 	add.w	r3, r7, #20
 800116c:	461a      	mov	r2, r3
 800116e:	4629      	mov	r1, r5
 8001170:	4620      	mov	r0, r4
 8001172:	f000 fd10 	bl	8001b96 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8001176:	f107 0314 	add.w	r3, r7, #20
 800117a:	4618      	mov	r0, r3
 800117c:	f021 fb65 	bl	802284a <_ZNSaIcED1Ev>
 8001180:	6878      	ldr	r0, [r7, #4]
 8001182:	f7ff ffa1 	bl	80010c8 <_ZSt7forwardI10token_typeEOT_RNSt16remove_referenceIS1_E4typeE>
 8001186:	4603      	mov	r3, r0
 8001188:	781a      	ldrb	r2, [r3, #0]
 800118a:	68fb      	ldr	r3, [r7, #12]
 800118c:	761a      	strb	r2, [r3, #24]
 800118e:	68fb      	ldr	r3, [r7, #12]
 8001190:	4618      	mov	r0, r3
 8001192:	3718      	adds	r7, #24
 8001194:	46bd      	mov	sp, r7
 8001196:	bdb0      	pop	{r4, r5, r7, pc}

08001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 8001198:	b5b0      	push	{r4, r5, r7, lr}
 800119a:	b086      	sub	sp, #24
 800119c:	af00      	add	r7, sp, #0
 800119e:	60f8      	str	r0, [r7, #12]
 80011a0:	60b9      	str	r1, [r7, #8]
 80011a2:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 80011a4:	68fc      	ldr	r4, [r7, #12]
 80011a6:	68b8      	ldr	r0, [r7, #8]
 80011a8:	f000 fd26 	bl	8001bf8 <_ZSt7forwardIRA7_KcEOT_RNSt16remove_referenceIS3_E4typeE>
 80011ac:	4605      	mov	r5, r0
 80011ae:	f107 0314 	add.w	r3, r7, #20
 80011b2:	4618      	mov	r0, r3
 80011b4:	f021 fb48 	bl	8022848 <_ZNSaIcEC1Ev>
 80011b8:	f107 0314 	add.w	r3, r7, #20
 80011bc:	461a      	mov	r2, r3
 80011be:	4629      	mov	r1, r5
 80011c0:	4620      	mov	r0, r4
 80011c2:	f000 fce8 	bl	8001b96 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 80011c6:	f107 0314 	add.w	r3, r7, #20
 80011ca:	4618      	mov	r0, r3
 80011cc:	f021 fb3d 	bl	802284a <_ZNSaIcED1Ev>
 80011d0:	6878      	ldr	r0, [r7, #4]
 80011d2:	f7ff ff79 	bl	80010c8 <_ZSt7forwardI10token_typeEOT_RNSt16remove_referenceIS1_E4typeE>
 80011d6:	4603      	mov	r3, r0
 80011d8:	781a      	ldrb	r2, [r3, #0]
 80011da:	68fb      	ldr	r3, [r7, #12]
 80011dc:	761a      	strb	r2, [r3, #24]
 80011de:	68fb      	ldr	r3, [r7, #12]
 80011e0:	4618      	mov	r0, r3
 80011e2:	3718      	adds	r7, #24
 80011e4:	46bd      	mov	sp, r7
 80011e6:	bdb0      	pop	{r4, r5, r7, pc}

080011e8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 80011e8:	b5b0      	push	{r4, r5, r7, lr}
 80011ea:	b086      	sub	sp, #24
 80011ec:	af00      	add	r7, sp, #0
 80011ee:	60f8      	str	r0, [r7, #12]
 80011f0:	60b9      	str	r1, [r7, #8]
 80011f2:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 80011f4:	68fc      	ldr	r4, [r7, #12]
 80011f6:	68b8      	ldr	r0, [r7, #8]
 80011f8:	f000 fd09 	bl	8001c0e <_ZSt7forwardIRA3_KcEOT_RNSt16remove_referenceIS3_E4typeE>
 80011fc:	4605      	mov	r5, r0
 80011fe:	f107 0314 	add.w	r3, r7, #20
 8001202:	4618      	mov	r0, r3
 8001204:	f021 fb20 	bl	8022848 <_ZNSaIcEC1Ev>
 8001208:	f107 0314 	add.w	r3, r7, #20
 800120c:	461a      	mov	r2, r3
 800120e:	4629      	mov	r1, r5
 8001210:	4620      	mov	r0, r4
 8001212:	f000 fcc0 	bl	8001b96 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8001216:	f107 0314 	add.w	r3, r7, #20
 800121a:	4618      	mov	r0, r3
 800121c:	f021 fb15 	bl	802284a <_ZNSaIcED1Ev>
 8001220:	6878      	ldr	r0, [r7, #4]
 8001222:	f7ff ff51 	bl	80010c8 <_ZSt7forwardI10token_typeEOT_RNSt16remove_referenceIS1_E4typeE>
 8001226:	4603      	mov	r3, r0
 8001228:	781a      	ldrb	r2, [r3, #0]
 800122a:	68fb      	ldr	r3, [r7, #12]
 800122c:	761a      	strb	r2, [r3, #24]
 800122e:	68fb      	ldr	r3, [r7, #12]
 8001230:	4618      	mov	r0, r3
 8001232:	3718      	adds	r7, #24
 8001234:	46bd      	mov	sp, r7
 8001236:	bdb0      	pop	{r4, r5, r7, pc}

08001238 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 8001238:	b5b0      	push	{r4, r5, r7, lr}
 800123a:	b086      	sub	sp, #24
 800123c:	af00      	add	r7, sp, #0
 800123e:	60f8      	str	r0, [r7, #12]
 8001240:	60b9      	str	r1, [r7, #8]
 8001242:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 8001244:	68fc      	ldr	r4, [r7, #12]
 8001246:	68b8      	ldr	r0, [r7, #8]
 8001248:	f000 fcec 	bl	8001c24 <_ZSt7forwardIRA4_KcEOT_RNSt16remove_referenceIS3_E4typeE>
 800124c:	4605      	mov	r5, r0
 800124e:	f107 0314 	add.w	r3, r7, #20
 8001252:	4618      	mov	r0, r3
 8001254:	f021 faf8 	bl	8022848 <_ZNSaIcEC1Ev>
 8001258:	f107 0314 	add.w	r3, r7, #20
 800125c:	461a      	mov	r2, r3
 800125e:	4629      	mov	r1, r5
 8001260:	4620      	mov	r0, r4
 8001262:	f000 fc98 	bl	8001b96 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8001266:	f107 0314 	add.w	r3, r7, #20
 800126a:	4618      	mov	r0, r3
 800126c:	f021 faed 	bl	802284a <_ZNSaIcED1Ev>
 8001270:	6878      	ldr	r0, [r7, #4]
 8001272:	f7ff ff29 	bl	80010c8 <_ZSt7forwardI10token_typeEOT_RNSt16remove_referenceIS1_E4typeE>
 8001276:	4603      	mov	r3, r0
 8001278:	781a      	ldrb	r2, [r3, #0]
 800127a:	68fb      	ldr	r3, [r7, #12]
 800127c:	761a      	strb	r2, [r3, #24]
 800127e:	68fb      	ldr	r3, [r7, #12]
 8001280:	4618      	mov	r0, r3
 8001282:	3718      	adds	r7, #24
 8001284:	46bd      	mov	sp, r7
 8001286:	bdb0      	pop	{r4, r5, r7, pc}

08001288 <_ZN9__gnu_cxx14__alloc_traitsISaI6SymbolES1_E15_S_always_equalEv>:
    { return _Base_type::propagate_on_container_move_assignment::value; }

    static constexpr bool _S_propagate_on_swap()
    { return _Base_type::propagate_on_container_swap::value; }

    static constexpr bool _S_always_equal()
 8001288:	b480      	push	{r7}
 800128a:	af00      	add	r7, sp, #0
    { return _Base_type::is_always_equal::value; }
 800128c:	2301      	movs	r3, #1
 800128e:	4618      	mov	r0, r3
 8001290:	46bd      	mov	sp, r7
 8001292:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001296:	4770      	bx	lr

08001298 <_ZN8ExecutorC1Ev>:
#include <Executor.h>

Executor::Executor()
 8001298:	b480      	push	{r7}
 800129a:	b083      	sub	sp, #12
 800129c:	af00      	add	r7, sp, #0
 800129e:	6078      	str	r0, [r7, #4]
{

}
 80012a0:	687b      	ldr	r3, [r7, #4]
 80012a2:	4618      	mov	r0, r3
 80012a4:	370c      	adds	r7, #12
 80012a6:	46bd      	mov	sp, r7
 80012a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80012ac:	4770      	bx	lr
	...

080012b0 <_ZN8Executor12get_instanceEv>:

Executor& Executor::get_instance()
{
 80012b0:	b580      	push	{r7, lr}
 80012b2:	af00      	add	r7, sp, #0
	static Executor instance;
 80012b4:	4b10      	ldr	r3, [pc, #64]	; (80012f8 <_ZN8Executor12get_instanceEv+0x48>)
 80012b6:	781b      	ldrb	r3, [r3, #0]
 80012b8:	f3bf 8f5b 	dmb	ish
 80012bc:	b2db      	uxtb	r3, r3
 80012be:	f003 0301 	and.w	r3, r3, #1
 80012c2:	2b00      	cmp	r3, #0
 80012c4:	bf0c      	ite	eq
 80012c6:	2301      	moveq	r3, #1
 80012c8:	2300      	movne	r3, #0
 80012ca:	b2db      	uxtb	r3, r3
 80012cc:	2b00      	cmp	r3, #0
 80012ce:	d010      	beq.n	80012f2 <_ZN8Executor12get_instanceEv+0x42>
 80012d0:	4809      	ldr	r0, [pc, #36]	; (80012f8 <_ZN8Executor12get_instanceEv+0x48>)
 80012d2:	f021 fa99 	bl	8022808 <__cxa_guard_acquire>
 80012d6:	4603      	mov	r3, r0
 80012d8:	2b00      	cmp	r3, #0
 80012da:	bf14      	ite	ne
 80012dc:	2301      	movne	r3, #1
 80012de:	2300      	moveq	r3, #0
 80012e0:	b2db      	uxtb	r3, r3
 80012e2:	2b00      	cmp	r3, #0
 80012e4:	d005      	beq.n	80012f2 <_ZN8Executor12get_instanceEv+0x42>
 80012e6:	4805      	ldr	r0, [pc, #20]	; (80012fc <_ZN8Executor12get_instanceEv+0x4c>)
 80012e8:	f7ff ffd6 	bl	8001298 <_ZN8ExecutorC1Ev>
 80012ec:	4802      	ldr	r0, [pc, #8]	; (80012f8 <_ZN8Executor12get_instanceEv+0x48>)
 80012ee:	f021 fa97 	bl	8022820 <__cxa_guard_release>
	return instance;
 80012f2:	4b02      	ldr	r3, [pc, #8]	; (80012fc <_ZN8Executor12get_instanceEv+0x4c>)
}
 80012f4:	4618      	mov	r0, r3
 80012f6:	bd80      	pop	{r7, pc}
 80012f8:	20000250 	.word	0x20000250
 80012fc:	2000024c 	.word	0x2000024c

08001300 <_ZN8Executor7executeEP7Program>:

void Executor::execute(Program* p)
{
 8001300:	b580      	push	{r7, lr}
 8001302:	b082      	sub	sp, #8
 8001304:	af00      	add	r7, sp, #0
 8001306:	6078      	str	r0, [r7, #4]
 8001308:	6039      	str	r1, [r7, #0]
	this->p = p;
 800130a:	687b      	ldr	r3, [r7, #4]
 800130c:	683a      	ldr	r2, [r7, #0]
 800130e:	601a      	str	r2, [r3, #0]
	execute(p->setup);
 8001310:	683b      	ldr	r3, [r7, #0]
 8001312:	681b      	ldr	r3, [r3, #0]
 8001314:	4619      	mov	r1, r3
 8001316:	6878      	ldr	r0, [r7, #4]
 8001318:	f000 f810 	bl	800133c <_ZN8Executor7executeEP4Body>
	execute(p->loop);
 800131c:	683b      	ldr	r3, [r7, #0]
 800131e:	685b      	ldr	r3, [r3, #4]
 8001320:	4619      	mov	r1, r3
 8001322:	6878      	ldr	r0, [r7, #4]
 8001324:	f000 f80a 	bl	800133c <_ZN8Executor7executeEP4Body>
	execute(p->finish);
 8001328:	683b      	ldr	r3, [r7, #0]
 800132a:	689b      	ldr	r3, [r3, #8]
 800132c:	4619      	mov	r1, r3
 800132e:	6878      	ldr	r0, [r7, #4]
 8001330:	f000 f804 	bl	800133c <_ZN8Executor7executeEP4Body>
}
 8001334:	bf00      	nop
 8001336:	3708      	adds	r7, #8
 8001338:	46bd      	mov	sp, r7
 800133a:	bd80      	pop	{r7, pc}

0800133c <_ZN8Executor7executeEP4Body>:


void Executor::execute(Body* bod)
{
 800133c:	b580      	push	{r7, lr}
 800133e:	b086      	sub	sp, #24
 8001340:	af00      	add	r7, sp, #0
 8001342:	6078      	str	r0, [r7, #4]
 8001344:	6039      	str	r1, [r7, #0]
	for(Statement* s : bod->statements)
 8001346:	683b      	ldr	r3, [r7, #0]
 8001348:	617b      	str	r3, [r7, #20]
 800134a:	6978      	ldr	r0, [r7, #20]
 800134c:	f000 fd05 	bl	8001d5a <_ZNSt6vectorIP9StatementSaIS1_EE5beginEv>
 8001350:	4603      	mov	r3, r0
 8001352:	60fb      	str	r3, [r7, #12]
 8001354:	6978      	ldr	r0, [r7, #20]
 8001356:	f000 fd10 	bl	8001d7a <_ZNSt6vectorIP9StatementSaIS1_EE3endEv>
 800135a:	4603      	mov	r3, r0
 800135c:	60bb      	str	r3, [r7, #8]
 800135e:	f107 0208 	add.w	r2, r7, #8
 8001362:	f107 030c 	add.w	r3, r7, #12
 8001366:	4611      	mov	r1, r2
 8001368:	4618      	mov	r0, r3
 800136a:	f000 fd17 	bl	8001d9c <_ZN9__gnu_cxxneIPP9StatementSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
 800136e:	4603      	mov	r3, r0
 8001370:	2b00      	cmp	r3, #0
 8001372:	d011      	beq.n	8001398 <_ZN8Executor7executeEP4Body+0x5c>
 8001374:	f107 030c 	add.w	r3, r7, #12
 8001378:	4618      	mov	r0, r3
 800137a:	f000 fd37 	bl	8001dec <_ZNK9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEEdeEv>
 800137e:	4603      	mov	r3, r0
 8001380:	681b      	ldr	r3, [r3, #0]
 8001382:	613b      	str	r3, [r7, #16]
	{
		execute(s);
 8001384:	6939      	ldr	r1, [r7, #16]
 8001386:	6878      	ldr	r0, [r7, #4]
 8001388:	f000 f80a 	bl	80013a0 <_ZN8Executor7executeEP9Statement>
	for(Statement* s : bod->statements)
 800138c:	f107 030c 	add.w	r3, r7, #12
 8001390:	4618      	mov	r0, r3
 8001392:	f000 fd1b 	bl	8001dcc <_ZN9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEEppEv>
 8001396:	e7e2      	b.n	800135e <_ZN8Executor7executeEP4Body+0x22>
	}
}
 8001398:	bf00      	nop
 800139a:	3718      	adds	r7, #24
 800139c:	46bd      	mov	sp, r7
 800139e:	bd80      	pop	{r7, pc}

080013a0 <_ZN8Executor7executeEP9Statement>:

void Executor::execute(Statement* stat)
{
 80013a0:	b580      	push	{r7, lr}
 80013a2:	b082      	sub	sp, #8
 80013a4:	af00      	add	r7, sp, #0
 80013a6:	6078      	str	r0, [r7, #4]
 80013a8:	6039      	str	r1, [r7, #0]
	switch(stat->type)
 80013aa:	683b      	ldr	r3, [r7, #0]
 80013ac:	781b      	ldrb	r3, [r3, #0]
 80013ae:	2b04      	cmp	r3, #4
 80013b0:	d848      	bhi.n	8001444 <_ZN8Executor7executeEP9Statement+0xa4>
 80013b2:	a201      	add	r2, pc, #4	; (adr r2, 80013b8 <_ZN8Executor7executeEP9Statement+0x18>)
 80013b4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80013b8:	080013cd 	.word	0x080013cd
 80013bc:	080013e5 	.word	0x080013e5
 80013c0:	080013fd 	.word	0x080013fd
 80013c4:	08001415 	.word	0x08001415
 80013c8:	0800142d 	.word	0x0800142d
	{
	case STATEMENT_ASSIGNMENT:
		execute(std::get<Assignment*>(stat->content));
 80013cc:	683b      	ldr	r3, [r7, #0]
 80013ce:	3304      	adds	r3, #4
 80013d0:	4618      	mov	r0, r3
 80013d2:	f000 fd17 	bl	8001e04 <_ZSt3getIP10AssignmentJS1_P13Function_callP11Method_callP15While_statementP12If_statementEERT_RSt7variantIJDpT0_EE>
 80013d6:	4603      	mov	r3, r0
 80013d8:	681b      	ldr	r3, [r3, #0]
 80013da:	4619      	mov	r1, r3
 80013dc:	6878      	ldr	r0, [r7, #4]
 80013de:	f000 fa2f 	bl	8001840 <_ZN8Executor7executeEP10Assignment>
		break;
 80013e2:	e02f      	b.n	8001444 <_ZN8Executor7executeEP9Statement+0xa4>
	case STATEMENT_FUNCTION_CALL:
		execute(std::get<Function_call*>(stat->content));
 80013e4:	683b      	ldr	r3, [r7, #0]
 80013e6:	3304      	adds	r3, #4
 80013e8:	4618      	mov	r0, r3
 80013ea:	f000 fd17 	bl	8001e1c <_ZSt3getIP13Function_callJP10AssignmentS1_P11Method_callP15While_statementP12If_statementEERT_RSt7variantIJDpT0_EE>
 80013ee:	4603      	mov	r3, r0
 80013f0:	681b      	ldr	r3, [r3, #0]
 80013f2:	4619      	mov	r1, r3
 80013f4:	6878      	ldr	r0, [r7, #4]
 80013f6:	f000 f9af 	bl	8001758 <_ZN8Executor7executeEP13Function_call>
		break;
 80013fa:	e023      	b.n	8001444 <_ZN8Executor7executeEP9Statement+0xa4>
	case STATEMENT_METHOD_CALL:
		execute(std::get<Method_call*>(stat->content));
 80013fc:	683b      	ldr	r3, [r7, #0]
 80013fe:	3304      	adds	r3, #4
 8001400:	4618      	mov	r0, r3
 8001402:	f000 fd17 	bl	8001e34 <_ZSt3getIP11Method_callJP10AssignmentP13Function_callS1_P15While_statementP12If_statementEERT_RSt7variantIJDpT0_EE>
 8001406:	4603      	mov	r3, r0
 8001408:	681b      	ldr	r3, [r3, #0]
 800140a:	4619      	mov	r1, r3
 800140c:	6878      	ldr	r0, [r7, #4]
 800140e:	f000 f997 	bl	8001740 <_ZN8Executor7executeEP11Method_call>
		break;
 8001412:	e017      	b.n	8001444 <_ZN8Executor7executeEP9Statement+0xa4>
	case STATEMENT_WHILE:
		execute(std::get<While_statement*>(stat->content));
 8001414:	683b      	ldr	r3, [r7, #0]
 8001416:	3304      	adds	r3, #4
 8001418:	4618      	mov	r0, r3
 800141a:	f000 fd17 	bl	8001e4c <_ZSt3getIP15While_statementJP10AssignmentP13Function_callP11Method_callS1_P12If_statementEERT_RSt7variantIJDpT0_EE>
 800141e:	4603      	mov	r3, r0
 8001420:	681b      	ldr	r3, [r3, #0]
 8001422:	4619      	mov	r1, r3
 8001424:	6878      	ldr	r0, [r7, #4]
 8001426:	f000 f95b 	bl	80016e0 <_ZN8Executor7executeEP15While_statement>
		break;
 800142a:	e00b      	b.n	8001444 <_ZN8Executor7executeEP9Statement+0xa4>
	case STATEMENT_IF:
		execute(std::get<If_statement*>(stat->content));
 800142c:	683b      	ldr	r3, [r7, #0]
 800142e:	3304      	adds	r3, #4
 8001430:	4618      	mov	r0, r3
 8001432:	f000 fd17 	bl	8001e64 <_ZSt3getIP12If_statementJP10AssignmentP13Function_callP11Method_callP15While_statementS1_EERT_RSt7variantIJDpT0_EE>
 8001436:	4603      	mov	r3, r0
 8001438:	681b      	ldr	r3, [r3, #0]
 800143a:	4619      	mov	r1, r3
 800143c:	6878      	ldr	r0, [r7, #4]
 800143e:	f000 f8e3 	bl	8001608 <_ZN8Executor7executeEP12If_statement>
		break;
 8001442:	bf00      	nop
	}
}
 8001444:	bf00      	nop
 8001446:	3708      	adds	r7, #8
 8001448:	46bd      	mov	sp, r7
 800144a:	bd80      	pop	{r7, pc}

0800144c <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEED1Ev>:
    struct _Copy_ctor_base : _Variant_storage_alias<_Types...>
 800144c:	b580      	push	{r7, lr}
 800144e:	b082      	sub	sp, #8
 8001450:	af00      	add	r7, sp, #0
 8001452:	6078      	str	r0, [r7, #4]
 8001454:	687b      	ldr	r3, [r7, #4]
 8001456:	4618      	mov	r0, r3
 8001458:	f000 fd30 	bl	8001ebc <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEED1Ev>
 800145c:	687b      	ldr	r3, [r7, #4]
 800145e:	4618      	mov	r0, r3
 8001460:	3708      	adds	r7, #8
 8001462:	46bd      	mov	sp, r7
 8001464:	bd80      	pop	{r7, pc}

08001466 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEED1Ev>:
    struct _Move_ctor_base : _Copy_ctor_alias<_Types...>
 8001466:	b580      	push	{r7, lr}
 8001468:	b082      	sub	sp, #8
 800146a:	af00      	add	r7, sp, #0
 800146c:	6078      	str	r0, [r7, #4]
 800146e:	687b      	ldr	r3, [r7, #4]
 8001470:	4618      	mov	r0, r3
 8001472:	f7ff ffeb 	bl	800144c <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEED1Ev>
 8001476:	687b      	ldr	r3, [r7, #4]
 8001478:	4618      	mov	r0, r3
 800147a:	3708      	adds	r7, #8
 800147c:	46bd      	mov	sp, r7
 800147e:	bd80      	pop	{r7, pc}

08001480 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEED1Ev>:
    struct _Copy_assign_base : _Move_ctor_alias<_Types...>
 8001480:	b580      	push	{r7, lr}
 8001482:	b082      	sub	sp, #8
 8001484:	af00      	add	r7, sp, #0
 8001486:	6078      	str	r0, [r7, #4]
 8001488:	687b      	ldr	r3, [r7, #4]
 800148a:	4618      	mov	r0, r3
 800148c:	f7ff ffeb 	bl	8001466 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEED1Ev>
 8001490:	687b      	ldr	r3, [r7, #4]
 8001492:	4618      	mov	r0, r3
 8001494:	3708      	adds	r7, #8
 8001496:	46bd      	mov	sp, r7
 8001498:	bd80      	pop	{r7, pc}

0800149a <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEED1Ev>:
    struct _Move_assign_base : _Copy_assign_alias<_Types...>
 800149a:	b580      	push	{r7, lr}
 800149c:	b082      	sub	sp, #8
 800149e:	af00      	add	r7, sp, #0
 80014a0:	6078      	str	r0, [r7, #4]
 80014a2:	687b      	ldr	r3, [r7, #4]
 80014a4:	4618      	mov	r0, r3
 80014a6:	f7ff ffeb 	bl	8001480 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEED1Ev>
 80014aa:	687b      	ldr	r3, [r7, #4]
 80014ac:	4618      	mov	r0, r3
 80014ae:	3708      	adds	r7, #8
 80014b0:	46bd      	mov	sp, r7
 80014b2:	bd80      	pop	{r7, pc}

080014b4 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEED1Ev>:
    struct _Variant_base : _Move_assign_alias<_Types...>
 80014b4:	b580      	push	{r7, lr}
 80014b6:	b082      	sub	sp, #8
 80014b8:	af00      	add	r7, sp, #0
 80014ba:	6078      	str	r0, [r7, #4]
 80014bc:	687b      	ldr	r3, [r7, #4]
 80014be:	4618      	mov	r0, r3
 80014c0:	f7ff ffeb 	bl	800149a <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEED1Ev>
 80014c4:	687b      	ldr	r3, [r7, #4]
 80014c6:	4618      	mov	r0, r3
 80014c8:	3708      	adds	r7, #8
 80014ca:	46bd      	mov	sp, r7
 80014cc:	bd80      	pop	{r7, pc}

080014ce <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEED1Ev>:
      variant() = default;
      variant(const variant& __rhs) = default;
      variant(variant&&) = default;
      variant& operator=(const variant&) = default;
      variant& operator=(variant&&) = default;
      ~variant() = default;
 80014ce:	b580      	push	{r7, lr}
 80014d0:	b082      	sub	sp, #8
 80014d2:	af00      	add	r7, sp, #0
 80014d4:	6078      	str	r0, [r7, #4]
 80014d6:	687b      	ldr	r3, [r7, #4]
 80014d8:	4618      	mov	r0, r3
 80014da:	f7ff ffeb 	bl	80014b4 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEED1Ev>
 80014de:	687b      	ldr	r3, [r7, #4]
 80014e0:	4618      	mov	r0, r3
 80014e2:	3708      	adds	r7, #8
 80014e4:	46bd      	mov	sp, r7
 80014e6:	bd80      	pop	{r7, pc}

080014e8 <_ZN6SymbolD1Ev>:
typedef enum
{
	SYMBOL_INT, SYMBOL_FLOAT, SYMBOL_BOOL, SYMBOL_STRING, SYMBOL_CONTAINER,
} symbol_type;

class Symbol
 80014e8:	b580      	push	{r7, lr}
 80014ea:	b082      	sub	sp, #8
 80014ec:	af00      	add	r7, sp, #0
 80014ee:	6078      	str	r0, [r7, #4]
 80014f0:	687b      	ldr	r3, [r7, #4]
 80014f2:	3304      	adds	r3, #4
 80014f4:	4618      	mov	r0, r3
 80014f6:	f7ff ffea 	bl	80014ce <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEED1Ev>
 80014fa:	687b      	ldr	r3, [r7, #4]
 80014fc:	4618      	mov	r0, r3
 80014fe:	3708      	adds	r7, #8
 8001500:	46bd      	mov	sp, r7
 8001502:	bd80      	pop	{r7, pc}

08001504 <_ZSt3getIbJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 8001504:	b580      	push	{r7, lr}
 8001506:	b082      	sub	sp, #8
 8001508:	af00      	add	r7, sp, #0
 800150a:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 800150c:	6878      	ldr	r0, [r7, #4]
 800150e:	f000 f85f 	bl	80015d0 <_ZSt3getILj2EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8001512:	4603      	mov	r3, r0
    }
 8001514:	4618      	mov	r0, r3
 8001516:	3708      	adds	r7, #8
 8001518:	46bd      	mov	sp, r7
 800151a:	bd80      	pop	{r7, pc}

0800151c <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv>:
	}

      constexpr bool valueless_by_exception() const noexcept
      { return !this->_M_valid(); }

      constexpr size_t index() const noexcept
 800151c:	b480      	push	{r7}
 800151e:	b083      	sub	sp, #12
 8001520:	af00      	add	r7, sp, #0
 8001522:	6078      	str	r0, [r7, #4]
      {
	if (this->_M_index ==
 8001524:	687b      	ldr	r3, [r7, #4]
 8001526:	7e1b      	ldrb	r3, [r3, #24]
 8001528:	2bff      	cmp	r3, #255	; 0xff
 800152a:	d102      	bne.n	8001532 <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv+0x16>
	    typename _Base::__index_type(variant_npos))
	  return variant_npos;
 800152c:	f04f 33ff 	mov.w	r3, #4294967295
 8001530:	e001      	b.n	8001536 <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv+0x1a>
	return this->_M_index;
 8001532:	687b      	ldr	r3, [r7, #4]
 8001534:	7e1b      	ldrb	r3, [r3, #24]
      }
 8001536:	4618      	mov	r0, r3
 8001538:	370c      	adds	r7, #12
 800153a:	46bd      	mov	sp, r7
 800153c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001540:	4770      	bx	lr

08001542 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8001542:	b580      	push	{r7, lr}
 8001544:	b082      	sub	sp, #8
 8001546:	af00      	add	r7, sp, #0
 8001548:	7138      	strb	r0, [r7, #4]
 800154a:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 800154c:	6838      	ldr	r0, [r7, #0]
 800154e:	f000 fce2 	bl	8001f16 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8001552:	4603      	mov	r3, r0
 8001554:	4618      	mov	r0, r3
 8001556:	f000 fce9 	bl	8001f2c <_ZNRSt8__detail9__variant14_UninitializedIbLb1EE6_M_getEv>
 800155a:	4603      	mov	r3, r0
 800155c:	4618      	mov	r0, r3
 800155e:	3708      	adds	r7, #8
 8001560:	46bd      	mov	sp, r7
 8001562:	bd80      	pop	{r7, pc}

08001564 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8001564:	b590      	push	{r4, r7, lr}
 8001566:	b083      	sub	sp, #12
 8001568:	af00      	add	r7, sp, #0
 800156a:	7138      	strb	r0, [r7, #4]
 800156c:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800156e:	6838      	ldr	r0, [r7, #0]
 8001570:	f000 fcc6 	bl	8001f00 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8001574:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8001576:	4619      	mov	r1, r3
 8001578:	4620      	mov	r0, r4
 800157a:	f7ff ffe2 	bl	8001542 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 800157e:	4603      	mov	r3, r0
    }
 8001580:	4618      	mov	r0, r3
 8001582:	370c      	adds	r7, #12
 8001584:	46bd      	mov	sp, r7
 8001586:	bd90      	pop	{r4, r7, pc}

08001588 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8001588:	b590      	push	{r4, r7, lr}
 800158a:	b083      	sub	sp, #12
 800158c:	af00      	add	r7, sp, #0
 800158e:	7138      	strb	r0, [r7, #4]
 8001590:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8001592:	6838      	ldr	r0, [r7, #0]
 8001594:	f000 fca9 	bl	8001eea <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8001598:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800159a:	4619      	mov	r1, r3
 800159c:	4620      	mov	r0, r4
 800159e:	f7ff ffe1 	bl	8001564 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80015a2:	4603      	mov	r3, r0
    }
 80015a4:	4618      	mov	r0, r3
 80015a6:	370c      	adds	r7, #12
 80015a8:	46bd      	mov	sp, r7
 80015aa:	bd90      	pop	{r4, r7, pc}

080015ac <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 80015ac:	b590      	push	{r4, r7, lr}
 80015ae:	b083      	sub	sp, #12
 80015b0:	af00      	add	r7, sp, #0
 80015b2:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 80015b4:	6878      	ldr	r0, [r7, #4]
 80015b6:	f000 fc8d 	bl	8001ed4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 80015ba:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 80015bc:	4619      	mov	r1, r3
 80015be:	4620      	mov	r0, r4
 80015c0:	f7ff ffe2 	bl	8001588 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80015c4:	4603      	mov	r3, r0
    }
 80015c6:	4618      	mov	r0, r3
 80015c8:	370c      	adds	r7, #12
 80015ca:	46bd      	mov	sp, r7
 80015cc:	bd90      	pop	{r4, r7, pc}
	...

080015d0 <_ZSt3getILj2EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
#undef _VARIANT_RELATION_FUNCTION_TEMPLATE
    };

  template<size_t _Np, typename... _Types>
    constexpr variant_alternative_t<_Np, variant<_Types...>>&
    get(variant<_Types...>& __v)
 80015d0:	b580      	push	{r7, lr}
 80015d2:	b082      	sub	sp, #8
 80015d4:	af00      	add	r7, sp, #0
 80015d6:	6078      	str	r0, [r7, #4]
    {
      static_assert(_Np < sizeof...(_Types),
		    "The index should be in [0, number of alternatives)");
      if (__v.index() != _Np)
 80015d8:	6878      	ldr	r0, [r7, #4]
 80015da:	f7ff ff9f 	bl	800151c <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv>
 80015de:	4603      	mov	r3, r0
 80015e0:	2b02      	cmp	r3, #2
 80015e2:	bf14      	ite	ne
 80015e4:	2301      	movne	r3, #1
 80015e6:	2300      	moveq	r3, #0
 80015e8:	b2db      	uxtb	r3, r3
 80015ea:	2b00      	cmp	r3, #0
 80015ec:	d002      	beq.n	80015f4 <_ZSt3getILj2EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 80015ee:	4805      	ldr	r0, [pc, #20]	; (8001604 <_ZSt3getILj2EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 80015f0:	f7ff fd3f 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 80015f4:	6878      	ldr	r0, [r7, #4]
 80015f6:	f7ff ffd9 	bl	80015ac <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 80015fa:	4603      	mov	r3, r0
    }
 80015fc:	4618      	mov	r0, r3
 80015fe:	3708      	adds	r7, #8
 8001600:	46bd      	mov	sp, r7
 8001602:	bd80      	pop	{r7, pc}
 8001604:	08027548 	.word	0x08027548

08001608 <_ZN8Executor7executeEP12If_statement>:

void Executor::execute(If_statement* ifst)
{
 8001608:	b590      	push	{r4, r7, lr}
 800160a:	b08d      	sub	sp, #52	; 0x34
 800160c:	af00      	add	r7, sp, #0
 800160e:	6078      	str	r0, [r7, #4]
 8001610:	6039      	str	r1, [r7, #0]
	for(unsigned int i = 0; i < ifst->conditions.size(); ++i)
 8001612:	2300      	movs	r3, #0
 8001614:	62fb      	str	r3, [r7, #44]	; 0x2c
 8001616:	683b      	ldr	r3, [r7, #0]
 8001618:	4618      	mov	r0, r3
 800161a:	f000 fc2f 	bl	8001e7c <_ZNKSt6vectorIP10ExpressionSaIS1_EE4sizeEv>
 800161e:	4602      	mov	r2, r0
 8001620:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8001622:	4293      	cmp	r3, r2
 8001624:	bf34      	ite	cc
 8001626:	2301      	movcc	r3, #1
 8001628:	2300      	movcs	r3, #0
 800162a:	b2db      	uxtb	r3, r3
 800162c:	2b00      	cmp	r3, #0
 800162e:	d037      	beq.n	80016a0 <_ZN8Executor7executeEP12If_statement+0x98>
	{
		Symbol condition_symbol = EVALUATE(ifst->conditions[i]);
 8001630:	f00a fc30 	bl	800be94 <_ZN21Expression_calculator12get_instanceEv>
 8001634:	4604      	mov	r4, r0
 8001636:	683b      	ldr	r3, [r7, #0]
 8001638:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800163a:	4618      	mov	r0, r3
 800163c:	f000 fc2e 	bl	8001e9c <_ZNSt6vectorIP10ExpressionSaIS1_EEixEj>
 8001640:	4603      	mov	r3, r0
 8001642:	681a      	ldr	r2, [r3, #0]
 8001644:	f107 0308 	add.w	r3, r7, #8
 8001648:	4621      	mov	r1, r4
 800164a:	4618      	mov	r0, r3
 800164c:	f00a fcb6 	bl	800bfbc <_ZN21Expression_calculator8evaluateEP10Expression>
		bool condition = std::get<bool>(condition_symbol.value);
 8001650:	f107 0308 	add.w	r3, r7, #8
 8001654:	3304      	adds	r3, #4
 8001656:	4618      	mov	r0, r3
 8001658:	f7ff ff54 	bl	8001504 <_ZSt3getIbJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 800165c:	4603      	mov	r3, r0
 800165e:	781b      	ldrb	r3, [r3, #0]
 8001660:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
		if(condition)
 8001664:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
 8001668:	2b00      	cmp	r3, #0
 800166a:	d00d      	beq.n	8001688 <_ZN8Executor7executeEP12If_statement+0x80>
		{
			execute(ifst->if_bodies[i]);
 800166c:	683b      	ldr	r3, [r7, #0]
 800166e:	330c      	adds	r3, #12
 8001670:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8001672:	4618      	mov	r0, r3
 8001674:	f000 fc65 	bl	8001f42 <_ZNSt6vectorIP4BodySaIS1_EEixEj>
 8001678:	4603      	mov	r3, r0
 800167a:	681b      	ldr	r3, [r3, #0]
 800167c:	4619      	mov	r1, r3
 800167e:	6878      	ldr	r0, [r7, #4]
 8001680:	f7ff fe5c 	bl	800133c <_ZN8Executor7executeEP4Body>
 8001684:	2400      	movs	r4, #0
			return;
 8001686:	e000      	b.n	800168a <_ZN8Executor7executeEP12If_statement+0x82>
		Symbol condition_symbol = EVALUATE(ifst->conditions[i]);
 8001688:	2401      	movs	r4, #1
 800168a:	f107 0308 	add.w	r3, r7, #8
 800168e:	4618      	mov	r0, r3
 8001690:	f7ff ff2a 	bl	80014e8 <_ZN6SymbolD1Ev>
 8001694:	2c01      	cmp	r4, #1
 8001696:	d120      	bne.n	80016da <_ZN8Executor7executeEP12If_statement+0xd2>
	for(unsigned int i = 0; i < ifst->conditions.size(); ++i)
 8001698:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800169a:	3301      	adds	r3, #1
 800169c:	62fb      	str	r3, [r7, #44]	; 0x2c
 800169e:	e7ba      	b.n	8001616 <_ZN8Executor7executeEP12If_statement+0xe>
		}
	}

	if(ifst->conditions.size() < ifst->if_bodies.size())
 80016a0:	683b      	ldr	r3, [r7, #0]
 80016a2:	4618      	mov	r0, r3
 80016a4:	f000 fbea 	bl	8001e7c <_ZNKSt6vectorIP10ExpressionSaIS1_EE4sizeEv>
 80016a8:	4604      	mov	r4, r0
 80016aa:	683b      	ldr	r3, [r7, #0]
 80016ac:	330c      	adds	r3, #12
 80016ae:	4618      	mov	r0, r3
 80016b0:	f000 fc57 	bl	8001f62 <_ZNKSt6vectorIP4BodySaIS1_EE4sizeEv>
 80016b4:	4603      	mov	r3, r0
 80016b6:	429c      	cmp	r4, r3
 80016b8:	bf34      	ite	cc
 80016ba:	2301      	movcc	r3, #1
 80016bc:	2300      	movcs	r3, #0
 80016be:	b2db      	uxtb	r3, r3
 80016c0:	2b00      	cmp	r3, #0
 80016c2:	d00a      	beq.n	80016da <_ZN8Executor7executeEP12If_statement+0xd2>
	{
		execute(ifst->if_bodies.back());
 80016c4:	683b      	ldr	r3, [r7, #0]
 80016c6:	330c      	adds	r3, #12
 80016c8:	4618      	mov	r0, r3
 80016ca:	f000 fc5a 	bl	8001f82 <_ZNSt6vectorIP4BodySaIS1_EE4backEv>
 80016ce:	4603      	mov	r3, r0
 80016d0:	681b      	ldr	r3, [r3, #0]
 80016d2:	4619      	mov	r1, r3
 80016d4:	6878      	ldr	r0, [r7, #4]
 80016d6:	f7ff fe31 	bl	800133c <_ZN8Executor7executeEP4Body>
	}
}
 80016da:	3734      	adds	r7, #52	; 0x34
 80016dc:	46bd      	mov	sp, r7
 80016de:	bd90      	pop	{r4, r7, pc}

080016e0 <_ZN8Executor7executeEP15While_statement>:

void Executor::execute(While_statement* whist)
{
 80016e0:	b580      	push	{r7, lr}
 80016e2:	b08c      	sub	sp, #48	; 0x30
 80016e4:	af00      	add	r7, sp, #0
 80016e6:	6078      	str	r0, [r7, #4]
 80016e8:	6039      	str	r1, [r7, #0]
	bool condition = true;
 80016ea:	2301      	movs	r3, #1
 80016ec:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
	while(condition)
 80016f0:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 80016f4:	2b00      	cmp	r3, #0
 80016f6:	d01f      	beq.n	8001738 <_ZN8Executor7executeEP15While_statement+0x58>
	{
		execute(whist->while_body);
 80016f8:	683b      	ldr	r3, [r7, #0]
 80016fa:	685b      	ldr	r3, [r3, #4]
 80016fc:	4619      	mov	r1, r3
 80016fe:	6878      	ldr	r0, [r7, #4]
 8001700:	f7ff fe1c 	bl	800133c <_ZN8Executor7executeEP4Body>
		Symbol condition_symbol = EVALUATE(whist->condition);
 8001704:	f00a fbc6 	bl	800be94 <_ZN21Expression_calculator12get_instanceEv>
 8001708:	4601      	mov	r1, r0
 800170a:	683b      	ldr	r3, [r7, #0]
 800170c:	681a      	ldr	r2, [r3, #0]
 800170e:	f107 030c 	add.w	r3, r7, #12
 8001712:	4618      	mov	r0, r3
 8001714:	f00a fc52 	bl	800bfbc <_ZN21Expression_calculator8evaluateEP10Expression>
		condition = std::get<bool>(condition_symbol.value);
 8001718:	f107 030c 	add.w	r3, r7, #12
 800171c:	3304      	adds	r3, #4
 800171e:	4618      	mov	r0, r3
 8001720:	f7ff fef0 	bl	8001504 <_ZSt3getIbJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8001724:	4603      	mov	r3, r0
 8001726:	781b      	ldrb	r3, [r3, #0]
 8001728:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
		Symbol condition_symbol = EVALUATE(whist->condition);
 800172c:	f107 030c 	add.w	r3, r7, #12
 8001730:	4618      	mov	r0, r3
 8001732:	f7ff fed9 	bl	80014e8 <_ZN6SymbolD1Ev>
	while(condition)
 8001736:	e7db      	b.n	80016f0 <_ZN8Executor7executeEP15While_statement+0x10>
	}
}
 8001738:	bf00      	nop
 800173a:	3730      	adds	r7, #48	; 0x30
 800173c:	46bd      	mov	sp, r7
 800173e:	bd80      	pop	{r7, pc}

08001740 <_ZN8Executor7executeEP11Method_call>:

void Executor::execute(Method_call* mcall)
{
 8001740:	b580      	push	{r7, lr}
 8001742:	b082      	sub	sp, #8
 8001744:	af00      	add	r7, sp, #0
 8001746:	6078      	str	r0, [r7, #4]
 8001748:	6039      	str	r1, [r7, #0]
	Method_handler::run_method(mcall);
 800174a:	6838      	ldr	r0, [r7, #0]
 800174c:	f010 fb24 	bl	8011d98 <_ZN14Method_handler10run_methodEP11Method_call>
}
 8001750:	bf00      	nop
 8001752:	3708      	adds	r7, #8
 8001754:	46bd      	mov	sp, r7
 8001756:	bd80      	pop	{r7, pc}

08001758 <_ZN8Executor7executeEP13Function_call>:

void Executor::execute(Function_call* fcall)
{
 8001758:	b580      	push	{r7, lr}
 800175a:	b08a      	sub	sp, #40	; 0x28
 800175c:	af00      	add	r7, sp, #0
 800175e:	6078      	str	r0, [r7, #4]
 8001760:	6039      	str	r1, [r7, #0]
	Function_handler::run_function(fcall);
 8001762:	f107 0308 	add.w	r3, r7, #8
 8001766:	6839      	ldr	r1, [r7, #0]
 8001768:	4618      	mov	r0, r3
 800176a:	f00c fb63 	bl	800de34 <_ZN16Function_handler12run_functionEP13Function_call>
 800176e:	f107 0308 	add.w	r3, r7, #8
 8001772:	4618      	mov	r0, r3
 8001774:	f7ff feb8 	bl	80014e8 <_ZN6SymbolD1Ev>
}
 8001778:	bf00      	nop
 800177a:	3728      	adds	r7, #40	; 0x28
 800177c:	46bd      	mov	sp, r7
 800177e:	bd80      	pop	{r7, pc}

08001780 <_ZN8VariableC1ERKS_>:
	VARIABLE_LOCAL,
	VARIABLE_ARG,
	VARIABLE_PAR,
}variable_type;

class Variable
 8001780:	b580      	push	{r7, lr}
 8001782:	b082      	sub	sp, #8
 8001784:	af00      	add	r7, sp, #0
 8001786:	6078      	str	r0, [r7, #4]
 8001788:	6039      	str	r1, [r7, #0]
 800178a:	683b      	ldr	r3, [r7, #0]
 800178c:	781a      	ldrb	r2, [r3, #0]
 800178e:	687b      	ldr	r3, [r7, #4]
 8001790:	701a      	strb	r2, [r3, #0]
 8001792:	687b      	ldr	r3, [r7, #4]
 8001794:	1d1a      	adds	r2, r3, #4
 8001796:	683b      	ldr	r3, [r7, #0]
 8001798:	3304      	adds	r3, #4
 800179a:	4619      	mov	r1, r3
 800179c:	4610      	mov	r0, r2
 800179e:	f021 fca5 	bl	80230ec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 80017a2:	683b      	ldr	r3, [r7, #0]
 80017a4:	69da      	ldr	r2, [r3, #28]
 80017a6:	687b      	ldr	r3, [r7, #4]
 80017a8:	61da      	str	r2, [r3, #28]
 80017aa:	687b      	ldr	r3, [r7, #4]
 80017ac:	4618      	mov	r0, r3
 80017ae:	3708      	adds	r7, #8
 80017b0:	46bd      	mov	sp, r7
 80017b2:	bd80      	pop	{r7, pc}

080017b4 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_>:
    struct _Move_assign_base : _Copy_assign_alias<_Types...>
 80017b4:	b580      	push	{r7, lr}
 80017b6:	b082      	sub	sp, #8
 80017b8:	af00      	add	r7, sp, #0
 80017ba:	6078      	str	r0, [r7, #4]
 80017bc:	6039      	str	r1, [r7, #0]
 80017be:	687b      	ldr	r3, [r7, #4]
 80017c0:	683a      	ldr	r2, [r7, #0]
 80017c2:	4611      	mov	r1, r2
 80017c4:	4618      	mov	r0, r3
 80017c6:	f000 ff4f 	bl	8002668 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_>
 80017ca:	687b      	ldr	r3, [r7, #4]
 80017cc:	4618      	mov	r0, r3
 80017ce:	3708      	adds	r7, #8
 80017d0:	46bd      	mov	sp, r7
 80017d2:	bd80      	pop	{r7, pc}

080017d4 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_>:
    struct _Variant_base : _Move_assign_alias<_Types...>
 80017d4:	b580      	push	{r7, lr}
 80017d6:	b082      	sub	sp, #8
 80017d8:	af00      	add	r7, sp, #0
 80017da:	6078      	str	r0, [r7, #4]
 80017dc:	6039      	str	r1, [r7, #0]
 80017de:	687b      	ldr	r3, [r7, #4]
 80017e0:	683a      	ldr	r2, [r7, #0]
 80017e2:	4611      	mov	r1, r2
 80017e4:	4618      	mov	r0, r3
 80017e6:	f7ff ffe5 	bl	80017b4 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_>
 80017ea:	687b      	ldr	r3, [r7, #4]
 80017ec:	4618      	mov	r0, r3
 80017ee:	3708      	adds	r7, #8
 80017f0:	46bd      	mov	sp, r7
 80017f2:	bd80      	pop	{r7, pc}

080017f4 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSERKSA_>:
    class variant
 80017f4:	b580      	push	{r7, lr}
 80017f6:	b082      	sub	sp, #8
 80017f8:	af00      	add	r7, sp, #0
 80017fa:	6078      	str	r0, [r7, #4]
 80017fc:	6039      	str	r1, [r7, #0]
 80017fe:	687b      	ldr	r3, [r7, #4]
 8001800:	683a      	ldr	r2, [r7, #0]
 8001802:	4611      	mov	r1, r2
 8001804:	4618      	mov	r0, r3
 8001806:	f7ff ffe5 	bl	80017d4 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_>
 800180a:	687b      	ldr	r3, [r7, #4]
 800180c:	4618      	mov	r0, r3
 800180e:	3708      	adds	r7, #8
 8001810:	46bd      	mov	sp, r7
 8001812:	bd80      	pop	{r7, pc}

08001814 <_ZN6SymbolaSERKS_>:
 8001814:	b580      	push	{r7, lr}
 8001816:	b082      	sub	sp, #8
 8001818:	af00      	add	r7, sp, #0
 800181a:	6078      	str	r0, [r7, #4]
 800181c:	6039      	str	r1, [r7, #0]
 800181e:	683b      	ldr	r3, [r7, #0]
 8001820:	781a      	ldrb	r2, [r3, #0]
 8001822:	687b      	ldr	r3, [r7, #4]
 8001824:	701a      	strb	r2, [r3, #0]
 8001826:	683b      	ldr	r3, [r7, #0]
 8001828:	1d1a      	adds	r2, r3, #4
 800182a:	687b      	ldr	r3, [r7, #4]
 800182c:	3304      	adds	r3, #4
 800182e:	4611      	mov	r1, r2
 8001830:	4618      	mov	r0, r3
 8001832:	f7ff ffdf 	bl	80017f4 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSERKSA_>
 8001836:	687b      	ldr	r3, [r7, #4]
 8001838:	4618      	mov	r0, r3
 800183a:	3708      	adds	r7, #8
 800183c:	46bd      	mov	sp, r7
 800183e:	bd80      	pop	{r7, pc}

08001840 <_ZN8Executor7executeEP10Assignment>:

void Executor::execute(Assignment* assign)
{
 8001840:	b590      	push	{r4, r7, lr}
 8001842:	b09d      	sub	sp, #116	; 0x74
 8001844:	af00      	add	r7, sp, #0
 8001846:	6078      	str	r0, [r7, #4]
 8001848:	6039      	str	r1, [r7, #0]
	Symbol& variable = Variable_handler::get_instance().get_symbol(*assign->var);
 800184a:	f016 ff87 	bl	801875c <_ZN16Variable_handler12get_instanceEv>
 800184e:	4604      	mov	r4, r0
 8001850:	683b      	ldr	r3, [r7, #0]
 8001852:	681a      	ldr	r2, [r3, #0]
 8001854:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8001858:	4611      	mov	r1, r2
 800185a:	4618      	mov	r0, r3
 800185c:	f7ff ff90 	bl	8001780 <_ZN8VariableC1ERKS_>
 8001860:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8001864:	4619      	mov	r1, r3
 8001866:	4620      	mov	r0, r4
 8001868:	f017 f84d 	bl	8018906 <_ZN16Variable_handler10get_symbolE8Variable>
 800186c:	66f8      	str	r0, [r7, #108]	; 0x6c
 800186e:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8001872:	4618      	mov	r0, r3
 8001874:	f014 fe64 	bl	8016540 <_ZN8VariableD1Ev>
	Symbol value = EVALUATE(assign->value);
 8001878:	f00a fb0c 	bl	800be94 <_ZN21Expression_calculator12get_instanceEv>
 800187c:	4601      	mov	r1, r0
 800187e:	683b      	ldr	r3, [r7, #0]
 8001880:	685a      	ldr	r2, [r3, #4]
 8001882:	f107 0308 	add.w	r3, r7, #8
 8001886:	4618      	mov	r0, r3
 8001888:	f00a fb98 	bl	800bfbc <_ZN21Expression_calculator8evaluateEP10Expression>

	if(assign->var->index)
 800188c:	683b      	ldr	r3, [r7, #0]
 800188e:	681b      	ldr	r3, [r3, #0]
 8001890:	69db      	ldr	r3, [r3, #28]
 8001892:	2b00      	cmp	r3, #0
 8001894:	d029      	beq.n	80018ea <_ZN8Executor7executeEP10Assignment+0xaa>
	{
		variable.type = SYMBOL_CONTAINER;
 8001896:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8001898:	2204      	movs	r2, #4
 800189a:	701a      	strb	r2, [r3, #0]
		int idx = check_index(assign->var->index);
 800189c:	683b      	ldr	r3, [r7, #0]
 800189e:	681b      	ldr	r3, [r3, #0]
 80018a0:	69db      	ldr	r3, [r3, #28]
 80018a2:	4619      	mov	r1, r3
 80018a4:	6878      	ldr	r0, [r7, #4]
 80018a6:	f000 f879 	bl	800199c <_ZN8Executor11check_indexEP10Expression>
 80018aa:	66b8      	str	r0, [r7, #104]	; 0x68
		variable.resize(idx + 1);
 80018ac:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 80018ae:	3301      	adds	r3, #1
 80018b0:	4619      	mov	r1, r3
 80018b2:	6ef8      	ldr	r0, [r7, #108]	; 0x6c
 80018b4:	f015 ffec 	bl	8017890 <_ZN6Symbol6resizeEi>
		variable[idx] = value;
 80018b8:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80018bc:	6eb9      	ldr	r1, [r7, #104]	; 0x68
 80018be:	4618      	mov	r0, r3
 80018c0:	f015 f86c 	bl	801699c <_ZN6SymbolC1Ei>
 80018c4:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80018c8:	4619      	mov	r1, r3
 80018ca:	6ef8      	ldr	r0, [r7, #108]	; 0x6c
 80018cc:	f015 f8cc 	bl	8016a68 <_ZN6SymbolixES_>
 80018d0:	4602      	mov	r2, r0
 80018d2:	f107 0308 	add.w	r3, r7, #8
 80018d6:	4619      	mov	r1, r3
 80018d8:	4610      	mov	r0, r2
 80018da:	f7ff ff9b 	bl	8001814 <_ZN6SymbolaSERKS_>
 80018de:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80018e2:	4618      	mov	r0, r3
 80018e4:	f7ff fe00 	bl	80014e8 <_ZN6SymbolD1Ev>
 80018e8:	e005      	b.n	80018f6 <_ZN8Executor7executeEP10Assignment+0xb6>
	}
	else
	{
		variable = value;
 80018ea:	f107 0308 	add.w	r3, r7, #8
 80018ee:	4619      	mov	r1, r3
 80018f0:	6ef8      	ldr	r0, [r7, #108]	; 0x6c
 80018f2:	f7ff ff8f 	bl	8001814 <_ZN6SymbolaSERKS_>
	Symbol value = EVALUATE(assign->value);
 80018f6:	f107 0308 	add.w	r3, r7, #8
 80018fa:	4618      	mov	r0, r3
 80018fc:	f7ff fdf4 	bl	80014e8 <_ZN6SymbolD1Ev>
	}
}
 8001900:	bf00      	nop
 8001902:	3774      	adds	r7, #116	; 0x74
 8001904:	46bd      	mov	sp, r7
 8001906:	bd90      	pop	{r4, r7, pc}

08001908 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 8001908:	b580      	push	{r7, lr}
 800190a:	b082      	sub	sp, #8
 800190c:	af00      	add	r7, sp, #0
 800190e:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 8001910:	6878      	ldr	r0, [r7, #4]
 8001912:	f000 f827 	bl	8001964 <_ZSt3getILj0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8001916:	4603      	mov	r3, r0
    }
 8001918:	4618      	mov	r0, r3
 800191a:	3708      	adds	r7, #8
 800191c:	46bd      	mov	sp, r7
 800191e:	bd80      	pop	{r7, pc}

08001920 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8001920:	b580      	push	{r7, lr}
 8001922:	b082      	sub	sp, #8
 8001924:	af00      	add	r7, sp, #0
 8001926:	7138      	strb	r0, [r7, #4]
 8001928:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 800192a:	6838      	ldr	r0, [r7, #0]
 800192c:	f000 fadd 	bl	8001eea <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8001930:	4603      	mov	r3, r0
 8001932:	4618      	mov	r0, r3
 8001934:	f000 feae 	bl	8002694 <_ZNRSt8__detail9__variant14_UninitializedIiLb1EE6_M_getEv>
 8001938:	4603      	mov	r3, r0
 800193a:	4618      	mov	r0, r3
 800193c:	3708      	adds	r7, #8
 800193e:	46bd      	mov	sp, r7
 8001940:	bd80      	pop	{r7, pc}

08001942 <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8001942:	b590      	push	{r4, r7, lr}
 8001944:	b083      	sub	sp, #12
 8001946:	af00      	add	r7, sp, #0
 8001948:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800194a:	6878      	ldr	r0, [r7, #4]
 800194c:	f000 fac2 	bl	8001ed4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8001950:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8001952:	4619      	mov	r1, r3
 8001954:	4620      	mov	r0, r4
 8001956:	f7ff ffe3 	bl	8001920 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 800195a:	4603      	mov	r3, r0
    }
 800195c:	4618      	mov	r0, r3
 800195e:	370c      	adds	r7, #12
 8001960:	46bd      	mov	sp, r7
 8001962:	bd90      	pop	{r4, r7, pc}

08001964 <_ZSt3getILj0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
    get(variant<_Types...>& __v)
 8001964:	b580      	push	{r7, lr}
 8001966:	b082      	sub	sp, #8
 8001968:	af00      	add	r7, sp, #0
 800196a:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 800196c:	6878      	ldr	r0, [r7, #4]
 800196e:	f7ff fdd5 	bl	800151c <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv>
 8001972:	4603      	mov	r3, r0
 8001974:	2b00      	cmp	r3, #0
 8001976:	bf14      	ite	ne
 8001978:	2301      	movne	r3, #1
 800197a:	2300      	moveq	r3, #0
 800197c:	b2db      	uxtb	r3, r3
 800197e:	2b00      	cmp	r3, #0
 8001980:	d002      	beq.n	8001988 <_ZSt3getILj0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 8001982:	4805      	ldr	r0, [pc, #20]	; (8001998 <_ZSt3getILj0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 8001984:	f7ff fb75 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 8001988:	6878      	ldr	r0, [r7, #4]
 800198a:	f7ff ffda 	bl	8001942 <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 800198e:	4603      	mov	r3, r0
    }
 8001990:	4618      	mov	r0, r3
 8001992:	3708      	adds	r7, #8
 8001994:	46bd      	mov	sp, r7
 8001996:	bd80      	pop	{r7, pc}
 8001998:	08027548 	.word	0x08027548

0800199c <_ZN8Executor11check_indexEP10Expression>:

int Executor::check_index(Expression* exp)
{
 800199c:	b590      	push	{r4, r7, lr}
 800199e:	b093      	sub	sp, #76	; 0x4c
 80019a0:	af00      	add	r7, sp, #0
 80019a2:	6078      	str	r0, [r7, #4]
 80019a4:	6039      	str	r1, [r7, #0]
	Symbol idx_symbol = EVALUATE(exp);
 80019a6:	f00a fa75 	bl	800be94 <_ZN21Expression_calculator12get_instanceEv>
 80019aa:	4601      	mov	r1, r0
 80019ac:	f107 0308 	add.w	r3, r7, #8
 80019b0:	683a      	ldr	r2, [r7, #0]
 80019b2:	4618      	mov	r0, r3
 80019b4:	f00a fb02 	bl	800bfbc <_ZN21Expression_calculator8evaluateEP10Expression>
	int i = std::get<int>(idx_symbol.value);
 80019b8:	f107 0308 	add.w	r3, r7, #8
 80019bc:	3304      	adds	r3, #4
 80019be:	4618      	mov	r0, r3
 80019c0:	f7ff ffa2 	bl	8001908 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 80019c4:	4603      	mov	r3, r0
 80019c6:	681b      	ldr	r3, [r3, #0]
 80019c8:	647b      	str	r3, [r7, #68]	; 0x44
	if(i < 0)
 80019ca:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 80019cc:	2b00      	cmp	r3, #0
 80019ce:	da1b      	bge.n	8001a08 <_ZN8Executor11check_indexEP10Expression+0x6c>
	{
		Transmitter::report_error("index can not be negative");
 80019d0:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80019d4:	4618      	mov	r0, r3
 80019d6:	f020 ff37 	bl	8022848 <_ZNSaIcEC1Ev>
 80019da:	f107 0240 	add.w	r2, r7, #64	; 0x40
 80019de:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80019e2:	490f      	ldr	r1, [pc, #60]	; (8001a20 <_ZN8Executor11check_indexEP10Expression+0x84>)
 80019e4:	4618      	mov	r0, r3
 80019e6:	f000 f8d6 	bl	8001b96 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 80019ea:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80019ee:	4618      	mov	r0, r3
 80019f0:	f016 fb96 	bl	8018120 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 80019f4:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80019f8:	4618      	mov	r0, r3
 80019fa:	f021 f9b6 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80019fe:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8001a02:	4618      	mov	r0, r3
 8001a04:	f020 ff21 	bl	802284a <_ZNSaIcED1Ev>
	}
	return i;
 8001a08:	6c7c      	ldr	r4, [r7, #68]	; 0x44
	Symbol idx_symbol = EVALUATE(exp);
 8001a0a:	f107 0308 	add.w	r3, r7, #8
 8001a0e:	4618      	mov	r0, r3
 8001a10:	f7ff fd6a 	bl	80014e8 <_ZN6SymbolD1Ev>
	return i;
 8001a14:	4623      	mov	r3, r4
}
 8001a16:	4618      	mov	r0, r3
 8001a18:	374c      	adds	r7, #76	; 0x4c
 8001a1a:	46bd      	mov	sp, r7
 8001a1c:	bd90      	pop	{r4, r7, pc}
 8001a1e:	bf00      	nop
 8001a20:	0802755c 	.word	0x0802755c

08001a24 <_ZN8Executor5abortEv>:

void Executor::abort()
{
 8001a24:	b580      	push	{r7, lr}
 8001a26:	b08a      	sub	sp, #40	; 0x28
 8001a28:	af00      	add	r7, sp, #0
 8001a2a:	6078      	str	r0, [r7, #4]
	if(p)
 8001a2c:	687b      	ldr	r3, [r7, #4]
 8001a2e:	681b      	ldr	r3, [r3, #0]
 8001a30:	2b00      	cmp	r3, #0
 8001a32:	d006      	beq.n	8001a42 <_ZN8Executor5abortEv+0x1e>
	{
		execute(p->finish);
 8001a34:	687b      	ldr	r3, [r7, #4]
 8001a36:	681b      	ldr	r3, [r3, #0]
 8001a38:	689b      	ldr	r3, [r3, #8]
 8001a3a:	4619      	mov	r1, r3
 8001a3c:	6878      	ldr	r0, [r7, #4]
 8001a3e:	f7ff fc7d 	bl	800133c <_ZN8Executor7executeEP4Body>
	}
	Transmitter::report_error("aborted by user");
 8001a42:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8001a46:	4618      	mov	r0, r3
 8001a48:	f020 fefe 	bl	8022848 <_ZNSaIcEC1Ev>
 8001a4c:	f107 0224 	add.w	r2, r7, #36	; 0x24
 8001a50:	f107 030c 	add.w	r3, r7, #12
 8001a54:	490b      	ldr	r1, [pc, #44]	; (8001a84 <_ZN8Executor5abortEv+0x60>)
 8001a56:	4618      	mov	r0, r3
 8001a58:	f000 f89d 	bl	8001b96 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8001a5c:	f107 030c 	add.w	r3, r7, #12
 8001a60:	4618      	mov	r0, r3
 8001a62:	f016 fb5d 	bl	8018120 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8001a66:	f107 030c 	add.w	r3, r7, #12
 8001a6a:	4618      	mov	r0, r3
 8001a6c:	f021 f97d 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8001a70:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8001a74:	4618      	mov	r0, r3
 8001a76:	f020 fee8 	bl	802284a <_ZNSaIcED1Ev>
}
 8001a7a:	bf00      	nop
 8001a7c:	3728      	adds	r7, #40	; 0x28
 8001a7e:	46bd      	mov	sp, r7
 8001a80:	bd80      	pop	{r7, pc}
 8001a82:	bf00      	nop
 8001a84:	08027578 	.word	0x08027578

08001a88 <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>:
      eq(const char_type& __c1, const char_type& __c2)
 8001a88:	b480      	push	{r7}
 8001a8a:	b083      	sub	sp, #12
 8001a8c:	af00      	add	r7, sp, #0
 8001a8e:	6078      	str	r0, [r7, #4]
 8001a90:	6039      	str	r1, [r7, #0]
      { return __c1 == __c2; }
 8001a92:	687b      	ldr	r3, [r7, #4]
 8001a94:	781a      	ldrb	r2, [r3, #0]
 8001a96:	683b      	ldr	r3, [r7, #0]
 8001a98:	781b      	ldrb	r3, [r3, #0]
 8001a9a:	429a      	cmp	r2, r3
 8001a9c:	bf0c      	ite	eq
 8001a9e:	2301      	moveq	r3, #1
 8001aa0:	2300      	movne	r3, #0
 8001aa2:	b2db      	uxtb	r3, r3
 8001aa4:	4618      	mov	r0, r3
 8001aa6:	370c      	adds	r7, #12
 8001aa8:	46bd      	mov	sp, r7
 8001aaa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001aae:	4770      	bx	lr

08001ab0 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>:
    char_traits<_CharT>::
 8001ab0:	b580      	push	{r7, lr}
 8001ab2:	b084      	sub	sp, #16
 8001ab4:	af00      	add	r7, sp, #0
 8001ab6:	6078      	str	r0, [r7, #4]
      std::size_t __i = 0;
 8001ab8:	2300      	movs	r3, #0
 8001aba:	60fb      	str	r3, [r7, #12]
      while (!eq(__p[__i], char_type()))
 8001abc:	687a      	ldr	r2, [r7, #4]
 8001abe:	68fb      	ldr	r3, [r7, #12]
 8001ac0:	4413      	add	r3, r2
 8001ac2:	2200      	movs	r2, #0
 8001ac4:	72fa      	strb	r2, [r7, #11]
 8001ac6:	f107 020b 	add.w	r2, r7, #11
 8001aca:	4611      	mov	r1, r2
 8001acc:	4618      	mov	r0, r3
 8001ace:	f7ff ffdb 	bl	8001a88 <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>
 8001ad2:	4603      	mov	r3, r0
 8001ad4:	f083 0301 	eor.w	r3, r3, #1
 8001ad8:	b2db      	uxtb	r3, r3
 8001ada:	2b00      	cmp	r3, #0
 8001adc:	d003      	beq.n	8001ae6 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0x36>
        ++__i;
 8001ade:	68fb      	ldr	r3, [r7, #12]
 8001ae0:	3301      	adds	r3, #1
 8001ae2:	60fb      	str	r3, [r7, #12]
      while (!eq(__p[__i], char_type()))
 8001ae4:	e7ea      	b.n	8001abc <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0xc>
      return __i;
 8001ae6:	68fb      	ldr	r3, [r7, #12]
    }
 8001ae8:	4618      	mov	r0, r3
 8001aea:	3710      	adds	r7, #16
 8001aec:	46bd      	mov	sp, r7
 8001aee:	bd80      	pop	{r7, pc}

08001af0 <_ZNSaISt4pairIKc10token_typeEEC1Ev>:
#endif

      // _GLIBCXX_RESOLVE_LIB_DEFECTS
      // 3035. std::allocator's constructors should be constexpr
      _GLIBCXX20_CONSTEXPR
      allocator() _GLIBCXX_NOTHROW { }
 8001af0:	b580      	push	{r7, lr}
 8001af2:	b082      	sub	sp, #8
 8001af4:	af00      	add	r7, sp, #0
 8001af6:	6078      	str	r0, [r7, #4]
 8001af8:	6878      	ldr	r0, [r7, #4]
 8001afa:	f000 fde5 	bl	80026c8 <_ZN9__gnu_cxx13new_allocatorISt4pairIKc10token_typeEEC1Ev>
 8001afe:	687b      	ldr	r3, [r7, #4]
 8001b00:	4618      	mov	r0, r3
 8001b02:	3708      	adds	r7, #8
 8001b04:	46bd      	mov	sp, r7
 8001b06:	bd80      	pop	{r7, pc}

08001b08 <_ZNSaISt4pairIKc10token_typeEED1Ev>:

      template<typename _Tp1>
	_GLIBCXX20_CONSTEXPR
	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }

      ~allocator() _GLIBCXX_NOTHROW { }
 8001b08:	b580      	push	{r7, lr}
 8001b0a:	b082      	sub	sp, #8
 8001b0c:	af00      	add	r7, sp, #0
 8001b0e:	6078      	str	r0, [r7, #4]
 8001b10:	6878      	ldr	r0, [r7, #4]
 8001b12:	f000 fde4 	bl	80026de <_ZN9__gnu_cxx13new_allocatorISt4pairIKc10token_typeEED1Ev>
 8001b16:	687b      	ldr	r3, [r7, #4]
 8001b18:	4618      	mov	r0, r3
 8001b1a:	3708      	adds	r7, #8
 8001b1c:	46bd      	mov	sp, r7
 8001b1e:	bd80      	pop	{r7, pc}

08001b20 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>:
       *  Create a %map consisting of copies of the elements in the
       *  initializer_list @a __l.
       *  This is linear in N if the range is already sorted, and NlogN
       *  otherwise (where N is @a __l.size()).
       */
      map(initializer_list<value_type> __l,
 8001b20:	b5b0      	push	{r4, r5, r7, lr}
 8001b22:	b086      	sub	sp, #24
 8001b24:	af00      	add	r7, sp, #0
 8001b26:	60f8      	str	r0, [r7, #12]
 8001b28:	1d38      	adds	r0, r7, #4
 8001b2a:	e880 0006 	stmia.w	r0, {r1, r2}
 8001b2e:	603b      	str	r3, [r7, #0]
	  const _Compare& __comp = _Compare(),
	  const allocator_type& __a = allocator_type())
      : _M_t(__comp, _Pair_alloc_type(__a))
 8001b30:	68fc      	ldr	r4, [r7, #12]
 8001b32:	f107 0314 	add.w	r3, r7, #20
 8001b36:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8001b38:	4618      	mov	r0, r3
 8001b3a:	f000 fddb 	bl	80026f4 <_ZNSaISt4pairIKc10token_typeEEC1ERKS3_>
 8001b3e:	f107 0314 	add.w	r3, r7, #20
 8001b42:	461a      	mov	r2, r3
 8001b44:	6839      	ldr	r1, [r7, #0]
 8001b46:	4620      	mov	r0, r4
 8001b48:	f000 fdee 	bl	8002728 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EEC1ERKS7_RKS8_>
 8001b4c:	f107 0314 	add.w	r3, r7, #20
 8001b50:	4618      	mov	r0, r3
 8001b52:	f7ff ffd9 	bl	8001b08 <_ZNSaISt4pairIKc10token_typeEED1Ev>
      { _M_t._M_insert_range_unique(__l.begin(), __l.end()); }
 8001b56:	68fc      	ldr	r4, [r7, #12]
 8001b58:	1d3b      	adds	r3, r7, #4
 8001b5a:	4618      	mov	r0, r3
 8001b5c:	f000 fe17 	bl	800278e <_ZNKSt16initializer_listISt4pairIKc10token_typeEE5beginEv>
 8001b60:	4605      	mov	r5, r0
 8001b62:	1d3b      	adds	r3, r7, #4
 8001b64:	4618      	mov	r0, r3
 8001b66:	f000 fe1e 	bl	80027a6 <_ZNKSt16initializer_listISt4pairIKc10token_typeEE3endEv>
 8001b6a:	4603      	mov	r3, r0
 8001b6c:	461a      	mov	r2, r3
 8001b6e:	4629      	mov	r1, r5
 8001b70:	4620      	mov	r0, r4
 8001b72:	f000 fe2a 	bl	80027ca <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE22_M_insert_range_uniqueIPKS3_EENSt9enable_ifIXsrSt7is_sameIS3_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESG_SG_>
 8001b76:	68fb      	ldr	r3, [r7, #12]
 8001b78:	4618      	mov	r0, r3
 8001b7a:	3718      	adds	r7, #24
 8001b7c:	46bd      	mov	sp, r7
 8001b7e:	bdb0      	pop	{r4, r5, r7, pc}

08001b80 <_ZSt7forwardIRA5_KcEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8001b80:	b480      	push	{r7}
 8001b82:	b083      	sub	sp, #12
 8001b84:	af00      	add	r7, sp, #0
 8001b86:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8001b88:	687b      	ldr	r3, [r7, #4]
 8001b8a:	4618      	mov	r0, r3
 8001b8c:	370c      	adds	r7, #12
 8001b8e:	46bd      	mov	sp, r7
 8001b90:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b94:	4770      	bx	lr

08001b96 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>:
#if __cpp_deduction_guides && ! defined _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
      // _GLIBCXX_RESOLVE_LIB_DEFECTS
      // 3076. basic_string CTAD ambiguity
      template<typename = _RequireAllocator<_Alloc>>
#endif
      basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
 8001b96:	b590      	push	{r4, r7, lr}
 8001b98:	b085      	sub	sp, #20
 8001b9a:	af00      	add	r7, sp, #0
 8001b9c:	60f8      	str	r0, [r7, #12]
 8001b9e:	60b9      	str	r1, [r7, #8]
 8001ba0:	607a      	str	r2, [r7, #4]
      : _M_dataplus(_M_local_data(), __a)
 8001ba2:	68fc      	ldr	r4, [r7, #12]
 8001ba4:	68f8      	ldr	r0, [r7, #12]
 8001ba6:	f020 ffcf 	bl	8022b48 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv>
 8001baa:	4603      	mov	r3, r0
 8001bac:	687a      	ldr	r2, [r7, #4]
 8001bae:	4619      	mov	r1, r3
 8001bb0:	4620      	mov	r0, r4
 8001bb2:	f021 fa99 	bl	80230e8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_>
      { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
 8001bb6:	68bb      	ldr	r3, [r7, #8]
 8001bb8:	2b00      	cmp	r3, #0
 8001bba:	d006      	beq.n	8001bca <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x34>
 8001bbc:	68b8      	ldr	r0, [r7, #8]
 8001bbe:	f7ff fa35 	bl	800102c <_ZNSt11char_traitsIcE6lengthEPKc>
 8001bc2:	4602      	mov	r2, r0
 8001bc4:	68bb      	ldr	r3, [r7, #8]
 8001bc6:	4413      	add	r3, r2
 8001bc8:	e001      	b.n	8001bce <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x38>
 8001bca:	68bb      	ldr	r3, [r7, #8]
 8001bcc:	3b01      	subs	r3, #1
 8001bce:	461a      	mov	r2, r3
 8001bd0:	68b9      	ldr	r1, [r7, #8]
 8001bd2:	68f8      	ldr	r0, [r7, #12]
 8001bd4:	f000 fd69 	bl	80026aa <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_>
 8001bd8:	68fb      	ldr	r3, [r7, #12]
 8001bda:	4618      	mov	r0, r3
 8001bdc:	3714      	adds	r7, #20
 8001bde:	46bd      	mov	sp, r7
 8001be0:	bd90      	pop	{r4, r7, pc}

08001be2 <_ZSt7forwardIRA6_KcEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8001be2:	b480      	push	{r7}
 8001be4:	b083      	sub	sp, #12
 8001be6:	af00      	add	r7, sp, #0
 8001be8:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8001bea:	687b      	ldr	r3, [r7, #4]
 8001bec:	4618      	mov	r0, r3
 8001bee:	370c      	adds	r7, #12
 8001bf0:	46bd      	mov	sp, r7
 8001bf2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001bf6:	4770      	bx	lr

08001bf8 <_ZSt7forwardIRA7_KcEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8001bf8:	b480      	push	{r7}
 8001bfa:	b083      	sub	sp, #12
 8001bfc:	af00      	add	r7, sp, #0
 8001bfe:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8001c00:	687b      	ldr	r3, [r7, #4]
 8001c02:	4618      	mov	r0, r3
 8001c04:	370c      	adds	r7, #12
 8001c06:	46bd      	mov	sp, r7
 8001c08:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c0c:	4770      	bx	lr

08001c0e <_ZSt7forwardIRA3_KcEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8001c0e:	b480      	push	{r7}
 8001c10:	b083      	sub	sp, #12
 8001c12:	af00      	add	r7, sp, #0
 8001c14:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8001c16:	687b      	ldr	r3, [r7, #4]
 8001c18:	4618      	mov	r0, r3
 8001c1a:	370c      	adds	r7, #12
 8001c1c:	46bd      	mov	sp, r7
 8001c1e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c22:	4770      	bx	lr

08001c24 <_ZSt7forwardIRA4_KcEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8001c24:	b480      	push	{r7}
 8001c26:	b083      	sub	sp, #12
 8001c28:	af00      	add	r7, sp, #0
 8001c2a:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8001c2c:	687b      	ldr	r3, [r7, #4]
 8001c2e:	4618      	mov	r0, r3
 8001c30:	370c      	adds	r7, #12
 8001c32:	46bd      	mov	sp, r7
 8001c34:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c38:	4770      	bx	lr

08001c3a <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
 8001c3a:	b580      	push	{r7, lr}
 8001c3c:	b082      	sub	sp, #8
 8001c3e:	af00      	add	r7, sp, #0
 8001c40:	6078      	str	r0, [r7, #4]
 8001c42:	6878      	ldr	r0, [r7, #4]
 8001c44:	f000 fded 	bl	8002822 <_ZN9__gnu_cxx13new_allocatorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 8001c48:	687b      	ldr	r3, [r7, #4]
 8001c4a:	4618      	mov	r0, r3
 8001c4c:	3708      	adds	r7, #8
 8001c4e:	46bd      	mov	sp, r7
 8001c50:	bd80      	pop	{r7, pc}

08001c52 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
 8001c52:	b580      	push	{r7, lr}
 8001c54:	b082      	sub	sp, #8
 8001c56:	af00      	add	r7, sp, #0
 8001c58:	6078      	str	r0, [r7, #4]
 8001c5a:	6878      	ldr	r0, [r7, #4]
 8001c5c:	f000 fdec 	bl	8002838 <_ZN9__gnu_cxx13new_allocatorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 8001c60:	687b      	ldr	r3, [r7, #4]
 8001c62:	4618      	mov	r0, r3
 8001c64:	3708      	adds	r7, #8
 8001c66:	46bd      	mov	sp, r7
 8001c68:	bd80      	pop	{r7, pc}

08001c6a <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>:
      map(initializer_list<value_type> __l,
 8001c6a:	b5b0      	push	{r4, r5, r7, lr}
 8001c6c:	b086      	sub	sp, #24
 8001c6e:	af00      	add	r7, sp, #0
 8001c70:	60f8      	str	r0, [r7, #12]
 8001c72:	1d38      	adds	r0, r7, #4
 8001c74:	e880 0006 	stmia.w	r0, {r1, r2}
 8001c78:	603b      	str	r3, [r7, #0]
      : _M_t(__comp, _Pair_alloc_type(__a))
 8001c7a:	68fc      	ldr	r4, [r7, #12]
 8001c7c:	f107 0314 	add.w	r3, r7, #20
 8001c80:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8001c82:	4618      	mov	r0, r3
 8001c84:	f000 fde3 	bl	800284e <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1ERKS9_>
 8001c88:	f107 0314 	add.w	r3, r7, #20
 8001c8c:	461a      	mov	r2, r3
 8001c8e:	6839      	ldr	r1, [r7, #0]
 8001c90:	4620      	mov	r0, r4
 8001c92:	f000 fdf6 	bl	8002882 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EEC1ERKSD_RKSE_>
 8001c96:	f107 0314 	add.w	r3, r7, #20
 8001c9a:	4618      	mov	r0, r3
 8001c9c:	f7ff ffd9 	bl	8001c52 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
      { _M_t._M_insert_range_unique(__l.begin(), __l.end()); }
 8001ca0:	68fc      	ldr	r4, [r7, #12]
 8001ca2:	1d3b      	adds	r3, r7, #4
 8001ca4:	4618      	mov	r0, r3
 8001ca6:	f000 fe1f 	bl	80028e8 <_ZNKSt16initializer_listISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE5beginEv>
 8001caa:	4605      	mov	r5, r0
 8001cac:	1d3b      	adds	r3, r7, #4
 8001cae:	4618      	mov	r0, r3
 8001cb0:	f000 fe26 	bl	8002900 <_ZNKSt16initializer_listISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE3endEv>
 8001cb4:	4603      	mov	r3, r0
 8001cb6:	461a      	mov	r2, r3
 8001cb8:	4629      	mov	r1, r5
 8001cba:	4620      	mov	r0, r4
 8001cbc:	f000 fe35 	bl	800292a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE22_M_insert_range_uniqueIPKS9_EENSt9enable_ifIXsrSt7is_sameIS9_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESM_SM_>
 8001cc0:	68fb      	ldr	r3, [r7, #12]
 8001cc2:	4618      	mov	r0, r3
 8001cc4:	3718      	adds	r7, #24
 8001cc6:	46bd      	mov	sp, r7
 8001cc8:	bdb0      	pop	{r4, r5, r7, pc}

08001cca <_ZNSaISt4pairIKc12double_tokenEEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
 8001cca:	b580      	push	{r7, lr}
 8001ccc:	b082      	sub	sp, #8
 8001cce:	af00      	add	r7, sp, #0
 8001cd0:	6078      	str	r0, [r7, #4]
 8001cd2:	6878      	ldr	r0, [r7, #4]
 8001cd4:	f000 fe55 	bl	8002982 <_ZN9__gnu_cxx13new_allocatorISt4pairIKc12double_tokenEEC1Ev>
 8001cd8:	687b      	ldr	r3, [r7, #4]
 8001cda:	4618      	mov	r0, r3
 8001cdc:	3708      	adds	r7, #8
 8001cde:	46bd      	mov	sp, r7
 8001ce0:	bd80      	pop	{r7, pc}

08001ce2 <_ZNSaISt4pairIKc12double_tokenEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
 8001ce2:	b580      	push	{r7, lr}
 8001ce4:	b082      	sub	sp, #8
 8001ce6:	af00      	add	r7, sp, #0
 8001ce8:	6078      	str	r0, [r7, #4]
 8001cea:	6878      	ldr	r0, [r7, #4]
 8001cec:	f000 fe54 	bl	8002998 <_ZN9__gnu_cxx13new_allocatorISt4pairIKc12double_tokenEED1Ev>
 8001cf0:	687b      	ldr	r3, [r7, #4]
 8001cf2:	4618      	mov	r0, r3
 8001cf4:	3708      	adds	r7, #8
 8001cf6:	46bd      	mov	sp, r7
 8001cf8:	bd80      	pop	{r7, pc}

08001cfa <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>:
      map(initializer_list<value_type> __l,
 8001cfa:	b5b0      	push	{r4, r5, r7, lr}
 8001cfc:	b086      	sub	sp, #24
 8001cfe:	af00      	add	r7, sp, #0
 8001d00:	60f8      	str	r0, [r7, #12]
 8001d02:	1d38      	adds	r0, r7, #4
 8001d04:	e880 0006 	stmia.w	r0, {r1, r2}
 8001d08:	603b      	str	r3, [r7, #0]
      : _M_t(__comp, _Pair_alloc_type(__a))
 8001d0a:	68fc      	ldr	r4, [r7, #12]
 8001d0c:	f107 0314 	add.w	r3, r7, #20
 8001d10:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8001d12:	4618      	mov	r0, r3
 8001d14:	f000 fe4b 	bl	80029ae <_ZNSaISt4pairIKc12double_tokenEEC1ERKS3_>
 8001d18:	f107 0314 	add.w	r3, r7, #20
 8001d1c:	461a      	mov	r2, r3
 8001d1e:	6839      	ldr	r1, [r7, #0]
 8001d20:	4620      	mov	r0, r4
 8001d22:	f000 fe5e 	bl	80029e2 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EEC1ERKS7_RKS8_>
 8001d26:	f107 0314 	add.w	r3, r7, #20
 8001d2a:	4618      	mov	r0, r3
 8001d2c:	f7ff ffd9 	bl	8001ce2 <_ZNSaISt4pairIKc12double_tokenEED1Ev>
      { _M_t._M_insert_range_unique(__l.begin(), __l.end()); }
 8001d30:	68fc      	ldr	r4, [r7, #12]
 8001d32:	1d3b      	adds	r3, r7, #4
 8001d34:	4618      	mov	r0, r3
 8001d36:	f000 fe87 	bl	8002a48 <_ZNKSt16initializer_listISt4pairIKc12double_tokenEE5beginEv>
 8001d3a:	4605      	mov	r5, r0
 8001d3c:	1d3b      	adds	r3, r7, #4
 8001d3e:	4618      	mov	r0, r3
 8001d40:	f000 fe8e 	bl	8002a60 <_ZNKSt16initializer_listISt4pairIKc12double_tokenEE3endEv>
 8001d44:	4603      	mov	r3, r0
 8001d46:	461a      	mov	r2, r3
 8001d48:	4629      	mov	r1, r5
 8001d4a:	4620      	mov	r0, r4
 8001d4c:	f000 fe9c 	bl	8002a88 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE22_M_insert_range_uniqueIPKS3_EENSt9enable_ifIXsrSt7is_sameIS3_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESG_SG_>
 8001d50:	68fb      	ldr	r3, [r7, #12]
 8001d52:	4618      	mov	r0, r3
 8001d54:	3718      	adds	r7, #24
 8001d56:	46bd      	mov	sp, r7
 8001d58:	bdb0      	pop	{r4, r5, r7, pc}

08001d5a <_ZNSt6vectorIP9StatementSaIS1_EE5beginEv>:
       *  Returns a read/write iterator that points to the first
       *  element in the %vector.  Iteration is done in ordinary
       *  element order.
       */
      iterator
      begin() _GLIBCXX_NOEXCEPT
 8001d5a:	b580      	push	{r7, lr}
 8001d5c:	b084      	sub	sp, #16
 8001d5e:	af00      	add	r7, sp, #0
 8001d60:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_start); }
 8001d62:	687a      	ldr	r2, [r7, #4]
 8001d64:	f107 030c 	add.w	r3, r7, #12
 8001d68:	4611      	mov	r1, r2
 8001d6a:	4618      	mov	r0, r3
 8001d6c:	f000 feb8 	bl	8002ae0 <_ZN9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 8001d70:	68fb      	ldr	r3, [r7, #12]
 8001d72:	4618      	mov	r0, r3
 8001d74:	3710      	adds	r7, #16
 8001d76:	46bd      	mov	sp, r7
 8001d78:	bd80      	pop	{r7, pc}

08001d7a <_ZNSt6vectorIP9StatementSaIS1_EE3endEv>:
       *  Returns a read/write iterator that points one past the last
       *  element in the %vector.  Iteration is done in ordinary
       *  element order.
       */
      iterator
      end() _GLIBCXX_NOEXCEPT
 8001d7a:	b580      	push	{r7, lr}
 8001d7c:	b084      	sub	sp, #16
 8001d7e:	af00      	add	r7, sp, #0
 8001d80:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_finish); }
 8001d82:	687b      	ldr	r3, [r7, #4]
 8001d84:	1d1a      	adds	r2, r3, #4
 8001d86:	f107 030c 	add.w	r3, r7, #12
 8001d8a:	4611      	mov	r1, r2
 8001d8c:	4618      	mov	r0, r3
 8001d8e:	f000 fea7 	bl	8002ae0 <_ZN9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 8001d92:	68fb      	ldr	r3, [r7, #12]
 8001d94:	4618      	mov	r0, r3
 8001d96:	3710      	adds	r7, #16
 8001d98:	46bd      	mov	sp, r7
 8001d9a:	bd80      	pop	{r7, pc}

08001d9c <_ZN9__gnu_cxxneIPP9StatementSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() != __rhs.base(); }

  template<typename _Iterator, typename _Container>
    inline bool
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
 8001d9c:	b590      	push	{r4, r7, lr}
 8001d9e:	b083      	sub	sp, #12
 8001da0:	af00      	add	r7, sp, #0
 8001da2:	6078      	str	r0, [r7, #4]
 8001da4:	6039      	str	r1, [r7, #0]
	       const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() != __rhs.base(); }
 8001da6:	6878      	ldr	r0, [r7, #4]
 8001da8:	f000 feaa 	bl	8002b00 <_ZNK9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEE4baseEv>
 8001dac:	4603      	mov	r3, r0
 8001dae:	681c      	ldr	r4, [r3, #0]
 8001db0:	6838      	ldr	r0, [r7, #0]
 8001db2:	f000 fea5 	bl	8002b00 <_ZNK9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEE4baseEv>
 8001db6:	4603      	mov	r3, r0
 8001db8:	681b      	ldr	r3, [r3, #0]
 8001dba:	429c      	cmp	r4, r3
 8001dbc:	bf14      	ite	ne
 8001dbe:	2301      	movne	r3, #1
 8001dc0:	2300      	moveq	r3, #0
 8001dc2:	b2db      	uxtb	r3, r3
 8001dc4:	4618      	mov	r0, r3
 8001dc6:	370c      	adds	r7, #12
 8001dc8:	46bd      	mov	sp, r7
 8001dca:	bd90      	pop	{r4, r7, pc}

08001dcc <_ZN9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
 8001dcc:	b480      	push	{r7}
 8001dce:	b083      	sub	sp, #12
 8001dd0:	af00      	add	r7, sp, #0
 8001dd2:	6078      	str	r0, [r7, #4]
	++_M_current;
 8001dd4:	687b      	ldr	r3, [r7, #4]
 8001dd6:	681b      	ldr	r3, [r3, #0]
 8001dd8:	1d1a      	adds	r2, r3, #4
 8001dda:	687b      	ldr	r3, [r7, #4]
 8001ddc:	601a      	str	r2, [r3, #0]
	return *this;
 8001dde:	687b      	ldr	r3, [r7, #4]
      }
 8001de0:	4618      	mov	r0, r3
 8001de2:	370c      	adds	r7, #12
 8001de4:	46bd      	mov	sp, r7
 8001de6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001dea:	4770      	bx	lr

08001dec <_ZNK9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
 8001dec:	b480      	push	{r7}
 8001dee:	b083      	sub	sp, #12
 8001df0:	af00      	add	r7, sp, #0
 8001df2:	6078      	str	r0, [r7, #4]
      { return *_M_current; }
 8001df4:	687b      	ldr	r3, [r7, #4]
 8001df6:	681b      	ldr	r3, [r3, #0]
 8001df8:	4618      	mov	r0, r3
 8001dfa:	370c      	adds	r7, #12
 8001dfc:	46bd      	mov	sp, r7
 8001dfe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e02:	4770      	bx	lr

08001e04 <_ZSt3getIP10AssignmentJS1_P13Function_callP11Method_callP15While_statementP12If_statementEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 8001e04:	b580      	push	{r7, lr}
 8001e06:	b082      	sub	sp, #8
 8001e08:	af00      	add	r7, sp, #0
 8001e0a:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 8001e0c:	6878      	ldr	r0, [r7, #4]
 8001e0e:	f000 feb7 	bl	8002b80 <_ZSt3getILj0EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8001e12:	4603      	mov	r3, r0
    }
 8001e14:	4618      	mov	r0, r3
 8001e16:	3708      	adds	r7, #8
 8001e18:	46bd      	mov	sp, r7
 8001e1a:	bd80      	pop	{r7, pc}

08001e1c <_ZSt3getIP13Function_callJP10AssignmentS1_P11Method_callP15While_statementP12If_statementEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 8001e1c:	b580      	push	{r7, lr}
 8001e1e:	b082      	sub	sp, #8
 8001e20:	af00      	add	r7, sp, #0
 8001e22:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 8001e24:	6878      	ldr	r0, [r7, #4]
 8001e26:	f000 fefb 	bl	8002c20 <_ZSt3getILj1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8001e2a:	4603      	mov	r3, r0
    }
 8001e2c:	4618      	mov	r0, r3
 8001e2e:	3708      	adds	r7, #8
 8001e30:	46bd      	mov	sp, r7
 8001e32:	bd80      	pop	{r7, pc}

08001e34 <_ZSt3getIP11Method_callJP10AssignmentP13Function_callS1_P15While_statementP12If_statementEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 8001e34:	b580      	push	{r7, lr}
 8001e36:	b082      	sub	sp, #8
 8001e38:	af00      	add	r7, sp, #0
 8001e3a:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 8001e3c:	6878      	ldr	r0, [r7, #4]
 8001e3e:	f000 ff51 	bl	8002ce4 <_ZSt3getILj2EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8001e42:	4603      	mov	r3, r0
    }
 8001e44:	4618      	mov	r0, r3
 8001e46:	3708      	adds	r7, #8
 8001e48:	46bd      	mov	sp, r7
 8001e4a:	bd80      	pop	{r7, pc}

08001e4c <_ZSt3getIP15While_statementJP10AssignmentP13Function_callP11Method_callS1_P12If_statementEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 8001e4c:	b580      	push	{r7, lr}
 8001e4e:	b082      	sub	sp, #8
 8001e50:	af00      	add	r7, sp, #0
 8001e52:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 8001e54:	6878      	ldr	r0, [r7, #4]
 8001e56:	f000 ffb9 	bl	8002dcc <_ZSt3getILj3EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8001e5a:	4603      	mov	r3, r0
    }
 8001e5c:	4618      	mov	r0, r3
 8001e5e:	3708      	adds	r7, #8
 8001e60:	46bd      	mov	sp, r7
 8001e62:	bd80      	pop	{r7, pc}

08001e64 <_ZSt3getIP12If_statementJP10AssignmentP13Function_callP11Method_callP15While_statementS1_EERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 8001e64:	b580      	push	{r7, lr}
 8001e66:	b082      	sub	sp, #8
 8001e68:	af00      	add	r7, sp, #0
 8001e6a:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 8001e6c:	6878      	ldr	r0, [r7, #4]
 8001e6e:	f001 f833 	bl	8002ed8 <_ZSt3getILj4EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8001e72:	4603      	mov	r3, r0
    }
 8001e74:	4618      	mov	r0, r3
 8001e76:	3708      	adds	r7, #8
 8001e78:	46bd      	mov	sp, r7
 8001e7a:	bd80      	pop	{r7, pc}

08001e7c <_ZNKSt6vectorIP10ExpressionSaIS1_EE4sizeEv>:
#endif

      // [23.2.4.2] capacity
      /**  Returns the number of elements in the %vector.  */
      size_type
      size() const _GLIBCXX_NOEXCEPT
 8001e7c:	b480      	push	{r7}
 8001e7e:	b083      	sub	sp, #12
 8001e80:	af00      	add	r7, sp, #0
 8001e82:	6078      	str	r0, [r7, #4]
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 8001e84:	687b      	ldr	r3, [r7, #4]
 8001e86:	685a      	ldr	r2, [r3, #4]
 8001e88:	687b      	ldr	r3, [r7, #4]
 8001e8a:	681b      	ldr	r3, [r3, #0]
 8001e8c:	1ad3      	subs	r3, r2, r3
 8001e8e:	109b      	asrs	r3, r3, #2
 8001e90:	4618      	mov	r0, r3
 8001e92:	370c      	adds	r7, #12
 8001e94:	46bd      	mov	sp, r7
 8001e96:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e9a:	4770      	bx	lr

08001e9c <_ZNSt6vectorIP10ExpressionSaIS1_EEixEj>:
       *  Note that data access with this operator is unchecked and
       *  out_of_range lookups are not defined. (For checked lookups
       *  see at().)
       */
      reference
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
 8001e9c:	b480      	push	{r7}
 8001e9e:	b083      	sub	sp, #12
 8001ea0:	af00      	add	r7, sp, #0
 8001ea2:	6078      	str	r0, [r7, #4]
 8001ea4:	6039      	str	r1, [r7, #0]
      {
	__glibcxx_requires_subscript(__n);
	return *(this->_M_impl._M_start + __n);
 8001ea6:	687b      	ldr	r3, [r7, #4]
 8001ea8:	681a      	ldr	r2, [r3, #0]
 8001eaa:	683b      	ldr	r3, [r7, #0]
 8001eac:	009b      	lsls	r3, r3, #2
 8001eae:	4413      	add	r3, r2
      }
 8001eb0:	4618      	mov	r0, r3
 8001eb2:	370c      	adds	r7, #12
 8001eb4:	46bd      	mov	sp, r7
 8001eb6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001eba:	4770      	bx	lr

08001ebc <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEED1Ev>:
      ~_Variant_storage()
 8001ebc:	b580      	push	{r7, lr}
 8001ebe:	b082      	sub	sp, #8
 8001ec0:	af00      	add	r7, sp, #0
 8001ec2:	6078      	str	r0, [r7, #4]
      { _M_reset(); }
 8001ec4:	6878      	ldr	r0, [r7, #4]
 8001ec6:	f001 f823 	bl	8002f10 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE8_M_resetEv>
 8001eca:	687b      	ldr	r3, [r7, #4]
 8001ecc:	4618      	mov	r0, r3
 8001ece:	3708      	adds	r7, #8
 8001ed0:	46bd      	mov	sp, r7
 8001ed2:	bd80      	pop	{r7, pc}

08001ed4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8001ed4:	b480      	push	{r7}
 8001ed6:	b083      	sub	sp, #12
 8001ed8:	af00      	add	r7, sp, #0
 8001eda:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8001edc:	687b      	ldr	r3, [r7, #4]
 8001ede:	4618      	mov	r0, r3
 8001ee0:	370c      	adds	r7, #12
 8001ee2:	46bd      	mov	sp, r7
 8001ee4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ee8:	4770      	bx	lr

08001eea <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8001eea:	b480      	push	{r7}
 8001eec:	b083      	sub	sp, #12
 8001eee:	af00      	add	r7, sp, #0
 8001ef0:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8001ef2:	687b      	ldr	r3, [r7, #4]
 8001ef4:	4618      	mov	r0, r3
 8001ef6:	370c      	adds	r7, #12
 8001ef8:	46bd      	mov	sp, r7
 8001efa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001efe:	4770      	bx	lr

08001f00 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8001f00:	b480      	push	{r7}
 8001f02:	b083      	sub	sp, #12
 8001f04:	af00      	add	r7, sp, #0
 8001f06:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8001f08:	687b      	ldr	r3, [r7, #4]
 8001f0a:	4618      	mov	r0, r3
 8001f0c:	370c      	adds	r7, #12
 8001f0e:	46bd      	mov	sp, r7
 8001f10:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f14:	4770      	bx	lr

08001f16 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8001f16:	b480      	push	{r7}
 8001f18:	b083      	sub	sp, #12
 8001f1a:	af00      	add	r7, sp, #0
 8001f1c:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8001f1e:	687b      	ldr	r3, [r7, #4]
 8001f20:	4618      	mov	r0, r3
 8001f22:	370c      	adds	r7, #12
 8001f24:	46bd      	mov	sp, r7
 8001f26:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f2a:	4770      	bx	lr

08001f2c <_ZNRSt8__detail9__variant14_UninitializedIbLb1EE6_M_getEv>:
      constexpr _Type& _M_get() & noexcept
 8001f2c:	b480      	push	{r7}
 8001f2e:	b083      	sub	sp, #12
 8001f30:	af00      	add	r7, sp, #0
 8001f32:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 8001f34:	687b      	ldr	r3, [r7, #4]
 8001f36:	4618      	mov	r0, r3
 8001f38:	370c      	adds	r7, #12
 8001f3a:	46bd      	mov	sp, r7
 8001f3c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f40:	4770      	bx	lr

08001f42 <_ZNSt6vectorIP4BodySaIS1_EEixEj>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
 8001f42:	b480      	push	{r7}
 8001f44:	b083      	sub	sp, #12
 8001f46:	af00      	add	r7, sp, #0
 8001f48:	6078      	str	r0, [r7, #4]
 8001f4a:	6039      	str	r1, [r7, #0]
	return *(this->_M_impl._M_start + __n);
 8001f4c:	687b      	ldr	r3, [r7, #4]
 8001f4e:	681a      	ldr	r2, [r3, #0]
 8001f50:	683b      	ldr	r3, [r7, #0]
 8001f52:	009b      	lsls	r3, r3, #2
 8001f54:	4413      	add	r3, r2
      }
 8001f56:	4618      	mov	r0, r3
 8001f58:	370c      	adds	r7, #12
 8001f5a:	46bd      	mov	sp, r7
 8001f5c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f60:	4770      	bx	lr

08001f62 <_ZNKSt6vectorIP4BodySaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 8001f62:	b480      	push	{r7}
 8001f64:	b083      	sub	sp, #12
 8001f66:	af00      	add	r7, sp, #0
 8001f68:	6078      	str	r0, [r7, #4]
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 8001f6a:	687b      	ldr	r3, [r7, #4]
 8001f6c:	685a      	ldr	r2, [r3, #4]
 8001f6e:	687b      	ldr	r3, [r7, #4]
 8001f70:	681b      	ldr	r3, [r3, #0]
 8001f72:	1ad3      	subs	r3, r2, r3
 8001f74:	109b      	asrs	r3, r3, #2
 8001f76:	4618      	mov	r0, r3
 8001f78:	370c      	adds	r7, #12
 8001f7a:	46bd      	mov	sp, r7
 8001f7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f80:	4770      	bx	lr

08001f82 <_ZNSt6vectorIP4BodySaIS1_EE4backEv>:
      /**
       *  Returns a read/write reference to the data at the last
       *  element of the %vector.
       */
      reference
      back() _GLIBCXX_NOEXCEPT
 8001f82:	b580      	push	{r7, lr}
 8001f84:	b084      	sub	sp, #16
 8001f86:	af00      	add	r7, sp, #0
 8001f88:	6078      	str	r0, [r7, #4]
      {
	__glibcxx_requires_nonempty();
	return *(end() - 1);
 8001f8a:	6878      	ldr	r0, [r7, #4]
 8001f8c:	f000 ffce 	bl	8002f2c <_ZNSt6vectorIP4BodySaIS1_EE3endEv>
 8001f90:	4603      	mov	r3, r0
 8001f92:	60fb      	str	r3, [r7, #12]
 8001f94:	f107 030c 	add.w	r3, r7, #12
 8001f98:	2101      	movs	r1, #1
 8001f9a:	4618      	mov	r0, r3
 8001f9c:	f000 ffd7 	bl	8002f4e <_ZNK9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEEmiEi>
 8001fa0:	4603      	mov	r3, r0
 8001fa2:	60bb      	str	r3, [r7, #8]
 8001fa4:	f107 0308 	add.w	r3, r7, #8
 8001fa8:	4618      	mov	r0, r3
 8001faa:	f000 ffe9 	bl	8002f80 <_ZNK9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEEdeEv>
 8001fae:	4603      	mov	r3, r0
      }
 8001fb0:	4618      	mov	r0, r3
 8001fb2:	3710      	adds	r7, #16
 8001fb4:	46bd      	mov	sp, r7
 8001fb6:	bd80      	pop	{r7, pc}

08001fb8 <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEERKNSt8__detail9__variant17_Copy_assign_baseILb0EJifbS5_S9_EEEEDcOT0_>:
    __variant_cast(_Tp&& __rhs)
 8001fb8:	b480      	push	{r7}
 8001fba:	b083      	sub	sp, #12
 8001fbc:	af00      	add	r7, sp, #0
 8001fbe:	6078      	str	r0, [r7, #4]
	    return static_cast<const variant<_Types...>&>(__rhs);
 8001fc0:	687b      	ldr	r3, [r7, #4]
    }
 8001fc2:	4618      	mov	r0, r3
 8001fc4:	370c      	adds	r7, #12
 8001fc6:	46bd      	mov	sp, r7
 8001fc8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001fcc:	4770      	bx	lr

08001fce <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8001fce:	b580      	push	{r7, lr}
 8001fd0:	b082      	sub	sp, #8
 8001fd2:	af00      	add	r7, sp, #0
 8001fd4:	7138      	strb	r0, [r7, #4]
 8001fd6:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8001fd8:	6838      	ldr	r0, [r7, #0]
 8001fda:	f000 fff3 	bl	8002fc4 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>
 8001fde:	4603      	mov	r3, r0
 8001fe0:	4618      	mov	r0, r3
 8001fe2:	f000 fffa 	bl	8002fda <_ZNKRSt8__detail9__variant14_UninitializedIiLb1EE6_M_getEv>
 8001fe6:	4603      	mov	r3, r0
 8001fe8:	4618      	mov	r0, r3
 8001fea:	3708      	adds	r7, #8
 8001fec:	46bd      	mov	sp, r7
 8001fee:	bd80      	pop	{r7, pc}

08001ff0 <_ZNSt8__detail9__variant5__getILj0ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8001ff0:	b590      	push	{r4, r7, lr}
 8001ff2:	b083      	sub	sp, #12
 8001ff4:	af00      	add	r7, sp, #0
 8001ff6:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8001ff8:	6878      	ldr	r0, [r7, #4]
 8001ffa:	f000 ffd8 	bl	8002fae <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8001ffe:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8002000:	4619      	mov	r1, r3
 8002002:	4620      	mov	r0, r4
 8002004:	f7ff ffe3 	bl	8001fce <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 8002008:	4603      	mov	r3, r0
    }
 800200a:	4618      	mov	r0, r3
 800200c:	370c      	adds	r7, #12
 800200e:	46bd      	mov	sp, r7
 8002010:	bd90      	pop	{r4, r7, pc}

08002012 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESQ_EEDcOSK_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8002012:	b580      	push	{r7, lr}
 8002014:	b082      	sub	sp, #8
 8002016:	af00      	add	r7, sp, #0
 8002018:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 800201a:	6878      	ldr	r0, [r7, #4]
 800201c:	f000 ffc7 	bl	8002fae <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8002020:	4603      	mov	r3, r0
 8002022:	4618      	mov	r0, r3
 8002024:	f7ff ffe4 	bl	8001ff0 <_ZNSt8__detail9__variant5__getILj0ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8002028:	4603      	mov	r3, r0
	}
 800202a:	4618      	mov	r0, r3
 800202c:	3708      	adds	r7, #8
 800202e:	46bd      	mov	sp, r7
 8002030:	bd80      	pop	{r7, pc}

08002032 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESM_SQ_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8002032:	b5b0      	push	{r4, r5, r7, lr}
 8002034:	b084      	sub	sp, #16
 8002036:	af00      	add	r7, sp, #0
 8002038:	6078      	str	r0, [r7, #4]
 800203a:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 800203c:	6878      	ldr	r0, [r7, #4]
 800203e:	f000 ffab 	bl	8002f98 <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8002042:	4604      	mov	r4, r0
 8002044:	6838      	ldr	r0, [r7, #0]
 8002046:	f000 ffb2 	bl	8002fae <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800204a:	4603      	mov	r3, r0
 800204c:	4618      	mov	r0, r3
 800204e:	f7ff ffe0 	bl	8002012 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESQ_EEDcOSK_>
 8002052:	4601      	mov	r1, r0
 8002054:	f107 030c 	add.w	r3, r7, #12
 8002058:	461a      	mov	r2, r3
 800205a:	4620      	mov	r0, r4
 800205c:	f000 ffc8 	bl	8002ff0 <_ZSt8__invokeIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_JRKiSt17integral_constantIjLj0EEEENSt15__invoke_resultISG_JDpT0_EE4typeESH_DpOSP_>
	      integral_constant<size_t, __indices>()...);
 8002060:	462b      	mov	r3, r5
      }
 8002062:	4618      	mov	r0, r3
 8002064:	3710      	adds	r7, #16
 8002066:	46bd      	mov	sp, r7
 8002068:	bdb0      	pop	{r4, r5, r7, pc}

0800206a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESM_SQ_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800206a:	b5b0      	push	{r4, r5, r7, lr}
 800206c:	b082      	sub	sp, #8
 800206e:	af00      	add	r7, sp, #0
 8002070:	6078      	str	r0, [r7, #4]
 8002072:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8002074:	6878      	ldr	r0, [r7, #4]
 8002076:	f000 ff8f 	bl	8002f98 <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 800207a:	4604      	mov	r4, r0
 800207c:	6838      	ldr	r0, [r7, #0]
 800207e:	f000 ff96 	bl	8002fae <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8002082:	4603      	mov	r3, r0
 8002084:	4619      	mov	r1, r3
 8002086:	4620      	mov	r0, r4
 8002088:	f7ff ffd3 	bl	8002032 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESM_SQ_>
				   std::forward<_Variants>(__vars)...);
 800208c:	462b      	mov	r3, r5
      }
 800208e:	4618      	mov	r0, r3
 8002090:	3708      	adds	r7, #8
 8002092:	46bd      	mov	sp, r7
 8002094:	bdb0      	pop	{r4, r5, r7, pc}

08002096 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj0EEEE14__visit_invokeESM_SQ_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8002096:	b5b0      	push	{r4, r5, r7, lr}
 8002098:	b082      	sub	sp, #8
 800209a:	af00      	add	r7, sp, #0
 800209c:	6078      	str	r0, [r7, #4]
 800209e:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 80020a0:	6878      	ldr	r0, [r7, #4]
 80020a2:	f000 ff79 	bl	8002f98 <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 80020a6:	4604      	mov	r4, r0
 80020a8:	6838      	ldr	r0, [r7, #0]
 80020aa:	f000 ff80 	bl	8002fae <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 80020ae:	4603      	mov	r3, r0
 80020b0:	4619      	mov	r1, r3
 80020b2:	4620      	mov	r0, r4
 80020b4:	f7ff ffd9 	bl	800206a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESM_SQ_>
				   std::forward<_Variants>(__vars)...);
 80020b8:	462b      	mov	r3, r5
      }
 80020ba:	4618      	mov	r0, r3
 80020bc:	3708      	adds	r7, #8
 80020be:	46bd      	mov	sp, r7
 80020c0:	bdb0      	pop	{r4, r5, r7, pc}

080020c2 <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 80020c2:	b580      	push	{r7, lr}
 80020c4:	b082      	sub	sp, #8
 80020c6:	af00      	add	r7, sp, #0
 80020c8:	7138      	strb	r0, [r7, #4]
 80020ca:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 80020cc:	6838      	ldr	r0, [r7, #0]
 80020ce:	f000 ffad 	bl	800302c <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>
 80020d2:	4603      	mov	r3, r0
 80020d4:	4618      	mov	r0, r3
 80020d6:	f000 ffb4 	bl	8003042 <_ZNKRSt8__detail9__variant14_UninitializedIfLb1EE6_M_getEv>
 80020da:	4603      	mov	r3, r0
 80020dc:	4618      	mov	r0, r3
 80020de:	3708      	adds	r7, #8
 80020e0:	46bd      	mov	sp, r7
 80020e2:	bd80      	pop	{r7, pc}

080020e4 <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 80020e4:	b590      	push	{r4, r7, lr}
 80020e6:	b083      	sub	sp, #12
 80020e8:	af00      	add	r7, sp, #0
 80020ea:	7138      	strb	r0, [r7, #4]
 80020ec:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 80020ee:	6838      	ldr	r0, [r7, #0]
 80020f0:	f000 ff68 	bl	8002fc4 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>
 80020f4:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 80020f6:	4619      	mov	r1, r3
 80020f8:	4620      	mov	r0, r4
 80020fa:	f7ff ffe2 	bl	80020c2 <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 80020fe:	4603      	mov	r3, r0
    }
 8002100:	4618      	mov	r0, r3
 8002102:	370c      	adds	r7, #12
 8002104:	46bd      	mov	sp, r7
 8002106:	bd90      	pop	{r4, r7, pc}

08002108 <_ZNSt8__detail9__variant5__getILj1ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8002108:	b590      	push	{r4, r7, lr}
 800210a:	b083      	sub	sp, #12
 800210c:	af00      	add	r7, sp, #0
 800210e:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8002110:	6878      	ldr	r0, [r7, #4]
 8002112:	f000 ff4c 	bl	8002fae <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8002116:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8002118:	4619      	mov	r1, r3
 800211a:	4620      	mov	r0, r4
 800211c:	f7ff ffe2 	bl	80020e4 <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8002120:	4603      	mov	r3, r0
    }
 8002122:	4618      	mov	r0, r3
 8002124:	370c      	adds	r7, #12
 8002126:	46bd      	mov	sp, r7
 8002128:	bd90      	pop	{r4, r7, pc}

0800212a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESQ_EEDcOSK_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 800212a:	b580      	push	{r7, lr}
 800212c:	b082      	sub	sp, #8
 800212e:	af00      	add	r7, sp, #0
 8002130:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8002132:	6878      	ldr	r0, [r7, #4]
 8002134:	f000 ff3b 	bl	8002fae <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8002138:	4603      	mov	r3, r0
 800213a:	4618      	mov	r0, r3
 800213c:	f7ff ffe4 	bl	8002108 <_ZNSt8__detail9__variant5__getILj1ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8002140:	4603      	mov	r3, r0
	}
 8002142:	4618      	mov	r0, r3
 8002144:	3708      	adds	r7, #8
 8002146:	46bd      	mov	sp, r7
 8002148:	bd80      	pop	{r7, pc}

0800214a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESM_SQ_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 800214a:	b5b0      	push	{r4, r5, r7, lr}
 800214c:	b084      	sub	sp, #16
 800214e:	af00      	add	r7, sp, #0
 8002150:	6078      	str	r0, [r7, #4]
 8002152:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8002154:	6878      	ldr	r0, [r7, #4]
 8002156:	f000 ff1f 	bl	8002f98 <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 800215a:	4604      	mov	r4, r0
 800215c:	6838      	ldr	r0, [r7, #0]
 800215e:	f000 ff26 	bl	8002fae <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8002162:	4603      	mov	r3, r0
 8002164:	4618      	mov	r0, r3
 8002166:	f7ff ffe0 	bl	800212a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESQ_EEDcOSK_>
 800216a:	4601      	mov	r1, r0
 800216c:	f107 030c 	add.w	r3, r7, #12
 8002170:	461a      	mov	r2, r3
 8002172:	4620      	mov	r0, r4
 8002174:	f000 ff70 	bl	8003058 <_ZSt8__invokeIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_JRKfSt17integral_constantIjLj1EEEENSt15__invoke_resultISG_JDpT0_EE4typeESH_DpOSP_>
	      integral_constant<size_t, __indices>()...);
 8002178:	462b      	mov	r3, r5
      }
 800217a:	4618      	mov	r0, r3
 800217c:	3710      	adds	r7, #16
 800217e:	46bd      	mov	sp, r7
 8002180:	bdb0      	pop	{r4, r5, r7, pc}

08002182 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESM_SQ_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8002182:	b5b0      	push	{r4, r5, r7, lr}
 8002184:	b082      	sub	sp, #8
 8002186:	af00      	add	r7, sp, #0
 8002188:	6078      	str	r0, [r7, #4]
 800218a:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 800218c:	6878      	ldr	r0, [r7, #4]
 800218e:	f000 ff03 	bl	8002f98 <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8002192:	4604      	mov	r4, r0
 8002194:	6838      	ldr	r0, [r7, #0]
 8002196:	f000 ff0a 	bl	8002fae <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800219a:	4603      	mov	r3, r0
 800219c:	4619      	mov	r1, r3
 800219e:	4620      	mov	r0, r4
 80021a0:	f7ff ffd3 	bl	800214a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESM_SQ_>
				   std::forward<_Variants>(__vars)...);
 80021a4:	462b      	mov	r3, r5
      }
 80021a6:	4618      	mov	r0, r3
 80021a8:	3708      	adds	r7, #8
 80021aa:	46bd      	mov	sp, r7
 80021ac:	bdb0      	pop	{r4, r5, r7, pc}

080021ae <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj1EEEE14__visit_invokeESM_SQ_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80021ae:	b5b0      	push	{r4, r5, r7, lr}
 80021b0:	b082      	sub	sp, #8
 80021b2:	af00      	add	r7, sp, #0
 80021b4:	6078      	str	r0, [r7, #4]
 80021b6:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 80021b8:	6878      	ldr	r0, [r7, #4]
 80021ba:	f000 feed 	bl	8002f98 <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 80021be:	4604      	mov	r4, r0
 80021c0:	6838      	ldr	r0, [r7, #0]
 80021c2:	f000 fef4 	bl	8002fae <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 80021c6:	4603      	mov	r3, r0
 80021c8:	4619      	mov	r1, r3
 80021ca:	4620      	mov	r0, r4
 80021cc:	f7ff ffd9 	bl	8002182 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESM_SQ_>
				   std::forward<_Variants>(__vars)...);
 80021d0:	462b      	mov	r3, r5
      }
 80021d2:	4618      	mov	r0, r3
 80021d4:	3708      	adds	r7, #8
 80021d6:	46bd      	mov	sp, r7
 80021d8:	bdb0      	pop	{r4, r5, r7, pc}

080021da <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 80021da:	b580      	push	{r7, lr}
 80021dc:	b082      	sub	sp, #8
 80021de:	af00      	add	r7, sp, #0
 80021e0:	7138      	strb	r0, [r7, #4]
 80021e2:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 80021e4:	6838      	ldr	r0, [r7, #0]
 80021e6:	f000 ff55 	bl	8003094 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>
 80021ea:	4603      	mov	r3, r0
 80021ec:	4618      	mov	r0, r3
 80021ee:	f000 ff5c 	bl	80030aa <_ZNKRSt8__detail9__variant14_UninitializedIbLb1EE6_M_getEv>
 80021f2:	4603      	mov	r3, r0
 80021f4:	4618      	mov	r0, r3
 80021f6:	3708      	adds	r7, #8
 80021f8:	46bd      	mov	sp, r7
 80021fa:	bd80      	pop	{r7, pc}

080021fc <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 80021fc:	b590      	push	{r4, r7, lr}
 80021fe:	b083      	sub	sp, #12
 8002200:	af00      	add	r7, sp, #0
 8002202:	7138      	strb	r0, [r7, #4]
 8002204:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8002206:	6838      	ldr	r0, [r7, #0]
 8002208:	f000 ff10 	bl	800302c <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>
 800220c:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800220e:	4619      	mov	r1, r3
 8002210:	4620      	mov	r0, r4
 8002212:	f7ff ffe2 	bl	80021da <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 8002216:	4603      	mov	r3, r0
    }
 8002218:	4618      	mov	r0, r3
 800221a:	370c      	adds	r7, #12
 800221c:	46bd      	mov	sp, r7
 800221e:	bd90      	pop	{r4, r7, pc}

08002220 <_ZNSt8__detail9__variant5__getILj2ERKNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8002220:	b590      	push	{r4, r7, lr}
 8002222:	b083      	sub	sp, #12
 8002224:	af00      	add	r7, sp, #0
 8002226:	7138      	strb	r0, [r7, #4]
 8002228:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800222a:	6838      	ldr	r0, [r7, #0]
 800222c:	f000 feca 	bl	8002fc4 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>
 8002230:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8002232:	4619      	mov	r1, r3
 8002234:	4620      	mov	r0, r4
 8002236:	f7ff ffe1 	bl	80021fc <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800223a:	4603      	mov	r3, r0
    }
 800223c:	4618      	mov	r0, r3
 800223e:	370c      	adds	r7, #12
 8002240:	46bd      	mov	sp, r7
 8002242:	bd90      	pop	{r4, r7, pc}

08002244 <_ZNSt8__detail9__variant5__getILj2ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8002244:	b590      	push	{r4, r7, lr}
 8002246:	b083      	sub	sp, #12
 8002248:	af00      	add	r7, sp, #0
 800224a:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800224c:	6878      	ldr	r0, [r7, #4]
 800224e:	f000 feae 	bl	8002fae <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8002252:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8002254:	4619      	mov	r1, r3
 8002256:	4620      	mov	r0, r4
 8002258:	f7ff ffe2 	bl	8002220 <_ZNSt8__detail9__variant5__getILj2ERKNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800225c:	4603      	mov	r3, r0
    }
 800225e:	4618      	mov	r0, r3
 8002260:	370c      	adds	r7, #12
 8002262:	46bd      	mov	sp, r7
 8002264:	bd90      	pop	{r4, r7, pc}

08002266 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESQ_EEDcOSK_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8002266:	b580      	push	{r7, lr}
 8002268:	b082      	sub	sp, #8
 800226a:	af00      	add	r7, sp, #0
 800226c:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 800226e:	6878      	ldr	r0, [r7, #4]
 8002270:	f000 fe9d 	bl	8002fae <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8002274:	4603      	mov	r3, r0
 8002276:	4618      	mov	r0, r3
 8002278:	f7ff ffe4 	bl	8002244 <_ZNSt8__detail9__variant5__getILj2ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 800227c:	4603      	mov	r3, r0
	}
 800227e:	4618      	mov	r0, r3
 8002280:	3708      	adds	r7, #8
 8002282:	46bd      	mov	sp, r7
 8002284:	bd80      	pop	{r7, pc}

08002286 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESM_SQ_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8002286:	b5b0      	push	{r4, r5, r7, lr}
 8002288:	b084      	sub	sp, #16
 800228a:	af00      	add	r7, sp, #0
 800228c:	6078      	str	r0, [r7, #4]
 800228e:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8002290:	6878      	ldr	r0, [r7, #4]
 8002292:	f000 fe81 	bl	8002f98 <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8002296:	4604      	mov	r4, r0
 8002298:	6838      	ldr	r0, [r7, #0]
 800229a:	f000 fe88 	bl	8002fae <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800229e:	4603      	mov	r3, r0
 80022a0:	4618      	mov	r0, r3
 80022a2:	f7ff ffe0 	bl	8002266 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESQ_EEDcOSK_>
 80022a6:	4601      	mov	r1, r0
 80022a8:	f107 030c 	add.w	r3, r7, #12
 80022ac:	461a      	mov	r2, r3
 80022ae:	4620      	mov	r0, r4
 80022b0:	f000 ff06 	bl	80030c0 <_ZSt8__invokeIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_JRKbSt17integral_constantIjLj2EEEENSt15__invoke_resultISG_JDpT0_EE4typeESH_DpOSP_>
	      integral_constant<size_t, __indices>()...);
 80022b4:	462b      	mov	r3, r5
      }
 80022b6:	4618      	mov	r0, r3
 80022b8:	3710      	adds	r7, #16
 80022ba:	46bd      	mov	sp, r7
 80022bc:	bdb0      	pop	{r4, r5, r7, pc}

080022be <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESM_SQ_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80022be:	b5b0      	push	{r4, r5, r7, lr}
 80022c0:	b082      	sub	sp, #8
 80022c2:	af00      	add	r7, sp, #0
 80022c4:	6078      	str	r0, [r7, #4]
 80022c6:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 80022c8:	6878      	ldr	r0, [r7, #4]
 80022ca:	f000 fe65 	bl	8002f98 <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 80022ce:	4604      	mov	r4, r0
 80022d0:	6838      	ldr	r0, [r7, #0]
 80022d2:	f000 fe6c 	bl	8002fae <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 80022d6:	4603      	mov	r3, r0
 80022d8:	4619      	mov	r1, r3
 80022da:	4620      	mov	r0, r4
 80022dc:	f7ff ffd3 	bl	8002286 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESM_SQ_>
				   std::forward<_Variants>(__vars)...);
 80022e0:	462b      	mov	r3, r5
      }
 80022e2:	4618      	mov	r0, r3
 80022e4:	3708      	adds	r7, #8
 80022e6:	46bd      	mov	sp, r7
 80022e8:	bdb0      	pop	{r4, r5, r7, pc}

080022ea <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj2EEEE14__visit_invokeESM_SQ_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80022ea:	b5b0      	push	{r4, r5, r7, lr}
 80022ec:	b082      	sub	sp, #8
 80022ee:	af00      	add	r7, sp, #0
 80022f0:	6078      	str	r0, [r7, #4]
 80022f2:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 80022f4:	6878      	ldr	r0, [r7, #4]
 80022f6:	f000 fe4f 	bl	8002f98 <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 80022fa:	4604      	mov	r4, r0
 80022fc:	6838      	ldr	r0, [r7, #0]
 80022fe:	f000 fe56 	bl	8002fae <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8002302:	4603      	mov	r3, r0
 8002304:	4619      	mov	r1, r3
 8002306:	4620      	mov	r0, r4
 8002308:	f7ff ffd9 	bl	80022be <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESM_SQ_>
				   std::forward<_Variants>(__vars)...);
 800230c:	462b      	mov	r3, r5
      }
 800230e:	4618      	mov	r0, r3
 8002310:	3708      	adds	r7, #8
 8002312:	46bd      	mov	sp, r7
 8002314:	bdb0      	pop	{r4, r5, r7, pc}

08002316 <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8002316:	b580      	push	{r7, lr}
 8002318:	b082      	sub	sp, #8
 800231a:	af00      	add	r7, sp, #0
 800231c:	7138      	strb	r0, [r7, #4]
 800231e:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8002320:	6838      	ldr	r0, [r7, #0]
 8002322:	f000 feeb 	bl	80030fc <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>
 8002326:	4603      	mov	r3, r0
 8002328:	4618      	mov	r0, r3
 800232a:	f000 fef2 	bl	8003112 <_ZNKRSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE6_M_getEv>
 800232e:	4603      	mov	r3, r0
 8002330:	4618      	mov	r0, r3
 8002332:	3708      	adds	r7, #8
 8002334:	46bd      	mov	sp, r7
 8002336:	bd80      	pop	{r7, pc}

08002338 <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8002338:	b590      	push	{r4, r7, lr}
 800233a:	b083      	sub	sp, #12
 800233c:	af00      	add	r7, sp, #0
 800233e:	7138      	strb	r0, [r7, #4]
 8002340:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8002342:	6838      	ldr	r0, [r7, #0]
 8002344:	f000 fea6 	bl	8003094 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>
 8002348:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800234a:	4619      	mov	r1, r3
 800234c:	4620      	mov	r0, r4
 800234e:	f7ff ffe2 	bl	8002316 <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 8002352:	4603      	mov	r3, r0
    }
 8002354:	4618      	mov	r0, r3
 8002356:	370c      	adds	r7, #12
 8002358:	46bd      	mov	sp, r7
 800235a:	bd90      	pop	{r4, r7, pc}

0800235c <_ZNSt8__detail9__variant5__getILj2ERKNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800235c:	b590      	push	{r4, r7, lr}
 800235e:	b083      	sub	sp, #12
 8002360:	af00      	add	r7, sp, #0
 8002362:	7138      	strb	r0, [r7, #4]
 8002364:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8002366:	6838      	ldr	r0, [r7, #0]
 8002368:	f000 fe60 	bl	800302c <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>
 800236c:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800236e:	4619      	mov	r1, r3
 8002370:	4620      	mov	r0, r4
 8002372:	f7ff ffe1 	bl	8002338 <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8002376:	4603      	mov	r3, r0
    }
 8002378:	4618      	mov	r0, r3
 800237a:	370c      	adds	r7, #12
 800237c:	46bd      	mov	sp, r7
 800237e:	bd90      	pop	{r4, r7, pc}

08002380 <_ZNSt8__detail9__variant5__getILj3ERKNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8002380:	b590      	push	{r4, r7, lr}
 8002382:	b083      	sub	sp, #12
 8002384:	af00      	add	r7, sp, #0
 8002386:	7138      	strb	r0, [r7, #4]
 8002388:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800238a:	6838      	ldr	r0, [r7, #0]
 800238c:	f000 fe1a 	bl	8002fc4 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>
 8002390:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8002392:	4619      	mov	r1, r3
 8002394:	4620      	mov	r0, r4
 8002396:	f7ff ffe1 	bl	800235c <_ZNSt8__detail9__variant5__getILj2ERKNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800239a:	4603      	mov	r3, r0
    }
 800239c:	4618      	mov	r0, r3
 800239e:	370c      	adds	r7, #12
 80023a0:	46bd      	mov	sp, r7
 80023a2:	bd90      	pop	{r4, r7, pc}

080023a4 <_ZNSt8__detail9__variant5__getILj3ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 80023a4:	b590      	push	{r4, r7, lr}
 80023a6:	b083      	sub	sp, #12
 80023a8:	af00      	add	r7, sp, #0
 80023aa:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 80023ac:	6878      	ldr	r0, [r7, #4]
 80023ae:	f000 fdfe 	bl	8002fae <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 80023b2:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 80023b4:	4619      	mov	r1, r3
 80023b6:	4620      	mov	r0, r4
 80023b8:	f7ff ffe2 	bl	8002380 <_ZNSt8__detail9__variant5__getILj3ERKNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80023bc:	4603      	mov	r3, r0
    }
 80023be:	4618      	mov	r0, r3
 80023c0:	370c      	adds	r7, #12
 80023c2:	46bd      	mov	sp, r7
 80023c4:	bd90      	pop	{r4, r7, pc}

080023c6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESQ_EEDcOSK_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 80023c6:	b580      	push	{r7, lr}
 80023c8:	b082      	sub	sp, #8
 80023ca:	af00      	add	r7, sp, #0
 80023cc:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 80023ce:	6878      	ldr	r0, [r7, #4]
 80023d0:	f000 fded 	bl	8002fae <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 80023d4:	4603      	mov	r3, r0
 80023d6:	4618      	mov	r0, r3
 80023d8:	f7ff ffe4 	bl	80023a4 <_ZNSt8__detail9__variant5__getILj3ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 80023dc:	4603      	mov	r3, r0
	}
 80023de:	4618      	mov	r0, r3
 80023e0:	3708      	adds	r7, #8
 80023e2:	46bd      	mov	sp, r7
 80023e4:	bd80      	pop	{r7, pc}

080023e6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESM_SQ_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 80023e6:	b5b0      	push	{r4, r5, r7, lr}
 80023e8:	b084      	sub	sp, #16
 80023ea:	af00      	add	r7, sp, #0
 80023ec:	6078      	str	r0, [r7, #4]
 80023ee:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 80023f0:	6878      	ldr	r0, [r7, #4]
 80023f2:	f000 fdd1 	bl	8002f98 <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 80023f6:	4604      	mov	r4, r0
 80023f8:	6838      	ldr	r0, [r7, #0]
 80023fa:	f000 fdd8 	bl	8002fae <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 80023fe:	4603      	mov	r3, r0
 8002400:	4618      	mov	r0, r3
 8002402:	f7ff ffe0 	bl	80023c6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESQ_EEDcOSK_>
 8002406:	4601      	mov	r1, r0
 8002408:	f107 030c 	add.w	r3, r7, #12
 800240c:	461a      	mov	r2, r3
 800240e:	4620      	mov	r0, r4
 8002410:	f000 fe8c 	bl	800312c <_ZSt8__invokeIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_JRKS8_St17integral_constantIjLj3EEEENSt15__invoke_resultISG_JDpT0_EE4typeESH_DpOSP_>
	      integral_constant<size_t, __indices>()...);
 8002414:	462b      	mov	r3, r5
      }
 8002416:	4618      	mov	r0, r3
 8002418:	3710      	adds	r7, #16
 800241a:	46bd      	mov	sp, r7
 800241c:	bdb0      	pop	{r4, r5, r7, pc}

0800241e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESM_SQ_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800241e:	b5b0      	push	{r4, r5, r7, lr}
 8002420:	b082      	sub	sp, #8
 8002422:	af00      	add	r7, sp, #0
 8002424:	6078      	str	r0, [r7, #4]
 8002426:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8002428:	6878      	ldr	r0, [r7, #4]
 800242a:	f000 fdb5 	bl	8002f98 <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 800242e:	4604      	mov	r4, r0
 8002430:	6838      	ldr	r0, [r7, #0]
 8002432:	f000 fdbc 	bl	8002fae <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8002436:	4603      	mov	r3, r0
 8002438:	4619      	mov	r1, r3
 800243a:	4620      	mov	r0, r4
 800243c:	f7ff ffd3 	bl	80023e6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESM_SQ_>
				   std::forward<_Variants>(__vars)...);
 8002440:	462b      	mov	r3, r5
      }
 8002442:	4618      	mov	r0, r3
 8002444:	3708      	adds	r7, #8
 8002446:	46bd      	mov	sp, r7
 8002448:	bdb0      	pop	{r4, r5, r7, pc}

0800244a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj3EEEE14__visit_invokeESM_SQ_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800244a:	b5b0      	push	{r4, r5, r7, lr}
 800244c:	b082      	sub	sp, #8
 800244e:	af00      	add	r7, sp, #0
 8002450:	6078      	str	r0, [r7, #4]
 8002452:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8002454:	6878      	ldr	r0, [r7, #4]
 8002456:	f000 fd9f 	bl	8002f98 <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 800245a:	4604      	mov	r4, r0
 800245c:	6838      	ldr	r0, [r7, #0]
 800245e:	f000 fda6 	bl	8002fae <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8002462:	4603      	mov	r3, r0
 8002464:	4619      	mov	r1, r3
 8002466:	4620      	mov	r0, r4
 8002468:	f7ff ffd9 	bl	800241e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESM_SQ_>
				   std::forward<_Variants>(__vars)...);
 800246c:	462b      	mov	r3, r5
      }
 800246e:	4618      	mov	r0, r3
 8002470:	3708      	adds	r7, #8
 8002472:	46bd      	mov	sp, r7
 8002474:	bdb0      	pop	{r4, r5, r7, pc}

08002476 <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJSt6vectorI6SymbolSaIS4_EEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8002476:	b580      	push	{r7, lr}
 8002478:	b082      	sub	sp, #8
 800247a:	af00      	add	r7, sp, #0
 800247c:	7138      	strb	r0, [r7, #4]
 800247e:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8002480:	6838      	ldr	r0, [r7, #0]
 8002482:	f000 fe71 	bl	8003168 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJSt6vectorI6SymbolSaIS4_EEEEEEOT_RNSt16remove_referenceISA_E4typeE>
 8002486:	4603      	mov	r3, r0
 8002488:	4618      	mov	r0, r3
 800248a:	f000 fe78 	bl	800317e <_ZNKRSt8__detail9__variant14_UninitializedISt6vectorI6SymbolSaIS3_EELb0EE6_M_getEv>
 800248e:	4603      	mov	r3, r0
 8002490:	4618      	mov	r0, r3
 8002492:	3708      	adds	r7, #8
 8002494:	46bd      	mov	sp, r7
 8002496:	bd80      	pop	{r7, pc}

08002498 <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8002498:	b590      	push	{r4, r7, lr}
 800249a:	b083      	sub	sp, #12
 800249c:	af00      	add	r7, sp, #0
 800249e:	7138      	strb	r0, [r7, #4]
 80024a0:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 80024a2:	6838      	ldr	r0, [r7, #0]
 80024a4:	f000 fe2a 	bl	80030fc <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>
 80024a8:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 80024aa:	4619      	mov	r1, r3
 80024ac:	4620      	mov	r0, r4
 80024ae:	f7ff ffe2 	bl	8002476 <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJSt6vectorI6SymbolSaIS4_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 80024b2:	4603      	mov	r3, r0
    }
 80024b4:	4618      	mov	r0, r3
 80024b6:	370c      	adds	r7, #12
 80024b8:	46bd      	mov	sp, r7
 80024ba:	bd90      	pop	{r4, r7, pc}

080024bc <_ZNSt8__detail9__variant5__getILj2ERKNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 80024bc:	b590      	push	{r4, r7, lr}
 80024be:	b083      	sub	sp, #12
 80024c0:	af00      	add	r7, sp, #0
 80024c2:	7138      	strb	r0, [r7, #4]
 80024c4:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 80024c6:	6838      	ldr	r0, [r7, #0]
 80024c8:	f000 fde4 	bl	8003094 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>
 80024cc:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 80024ce:	4619      	mov	r1, r3
 80024d0:	4620      	mov	r0, r4
 80024d2:	f7ff ffe1 	bl	8002498 <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80024d6:	4603      	mov	r3, r0
    }
 80024d8:	4618      	mov	r0, r3
 80024da:	370c      	adds	r7, #12
 80024dc:	46bd      	mov	sp, r7
 80024de:	bd90      	pop	{r4, r7, pc}

080024e0 <_ZNSt8__detail9__variant5__getILj3ERKNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 80024e0:	b590      	push	{r4, r7, lr}
 80024e2:	b083      	sub	sp, #12
 80024e4:	af00      	add	r7, sp, #0
 80024e6:	7138      	strb	r0, [r7, #4]
 80024e8:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 80024ea:	6838      	ldr	r0, [r7, #0]
 80024ec:	f000 fd9e 	bl	800302c <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>
 80024f0:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 80024f2:	4619      	mov	r1, r3
 80024f4:	4620      	mov	r0, r4
 80024f6:	f7ff ffe1 	bl	80024bc <_ZNSt8__detail9__variant5__getILj2ERKNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80024fa:	4603      	mov	r3, r0
    }
 80024fc:	4618      	mov	r0, r3
 80024fe:	370c      	adds	r7, #12
 8002500:	46bd      	mov	sp, r7
 8002502:	bd90      	pop	{r4, r7, pc}

08002504 <_ZNSt8__detail9__variant5__getILj4ERKNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8002504:	b590      	push	{r4, r7, lr}
 8002506:	b083      	sub	sp, #12
 8002508:	af00      	add	r7, sp, #0
 800250a:	7138      	strb	r0, [r7, #4]
 800250c:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800250e:	6838      	ldr	r0, [r7, #0]
 8002510:	f000 fd58 	bl	8002fc4 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>
 8002514:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8002516:	4619      	mov	r1, r3
 8002518:	4620      	mov	r0, r4
 800251a:	f7ff ffe1 	bl	80024e0 <_ZNSt8__detail9__variant5__getILj3ERKNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800251e:	4603      	mov	r3, r0
    }
 8002520:	4618      	mov	r0, r3
 8002522:	370c      	adds	r7, #12
 8002524:	46bd      	mov	sp, r7
 8002526:	bd90      	pop	{r4, r7, pc}

08002528 <_ZNSt8__detail9__variant5__getILj4ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8002528:	b590      	push	{r4, r7, lr}
 800252a:	b083      	sub	sp, #12
 800252c:	af00      	add	r7, sp, #0
 800252e:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8002530:	6878      	ldr	r0, [r7, #4]
 8002532:	f000 fd3c 	bl	8002fae <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8002536:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8002538:	4619      	mov	r1, r3
 800253a:	4620      	mov	r0, r4
 800253c:	f7ff ffe2 	bl	8002504 <_ZNSt8__detail9__variant5__getILj4ERKNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8002540:	4603      	mov	r3, r0
    }
 8002542:	4618      	mov	r0, r3
 8002544:	370c      	adds	r7, #12
 8002546:	46bd      	mov	sp, r7
 8002548:	bd90      	pop	{r4, r7, pc}

0800254a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj4EEEE28__element_by_index_or_cookieILj4ESQ_EEDcOSK_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 800254a:	b580      	push	{r7, lr}
 800254c:	b082      	sub	sp, #8
 800254e:	af00      	add	r7, sp, #0
 8002550:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8002552:	6878      	ldr	r0, [r7, #4]
 8002554:	f000 fd2b 	bl	8002fae <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8002558:	4603      	mov	r3, r0
 800255a:	4618      	mov	r0, r3
 800255c:	f7ff ffe4 	bl	8002528 <_ZNSt8__detail9__variant5__getILj4ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8002560:	4603      	mov	r3, r0
	}
 8002562:	4618      	mov	r0, r3
 8002564:	3708      	adds	r7, #8
 8002566:	46bd      	mov	sp, r7
 8002568:	bd80      	pop	{r7, pc}

0800256a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj4EEEE19__visit_invoke_implESM_SQ_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 800256a:	b5b0      	push	{r4, r5, r7, lr}
 800256c:	b084      	sub	sp, #16
 800256e:	af00      	add	r7, sp, #0
 8002570:	6078      	str	r0, [r7, #4]
 8002572:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8002574:	6878      	ldr	r0, [r7, #4]
 8002576:	f000 fd0f 	bl	8002f98 <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 800257a:	4604      	mov	r4, r0
 800257c:	6838      	ldr	r0, [r7, #0]
 800257e:	f000 fd16 	bl	8002fae <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8002582:	4603      	mov	r3, r0
 8002584:	4618      	mov	r0, r3
 8002586:	f7ff ffe0 	bl	800254a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj4EEEE28__element_by_index_or_cookieILj4ESQ_EEDcOSK_>
 800258a:	4601      	mov	r1, r0
 800258c:	f107 030c 	add.w	r3, r7, #12
 8002590:	461a      	mov	r2, r3
 8002592:	4620      	mov	r0, r4
 8002594:	f000 fe00 	bl	8003198 <_ZSt8__invokeIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_JRKSC_St17integral_constantIjLj4EEEENSt15__invoke_resultISG_JDpT0_EE4typeESH_DpOSP_>
	      integral_constant<size_t, __indices>()...);
 8002598:	462b      	mov	r3, r5
      }
 800259a:	4618      	mov	r0, r3
 800259c:	3710      	adds	r7, #16
 800259e:	46bd      	mov	sp, r7
 80025a0:	bdb0      	pop	{r4, r5, r7, pc}

080025a2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj4EEEE17__do_visit_invokeESM_SQ_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80025a2:	b5b0      	push	{r4, r5, r7, lr}
 80025a4:	b082      	sub	sp, #8
 80025a6:	af00      	add	r7, sp, #0
 80025a8:	6078      	str	r0, [r7, #4]
 80025aa:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 80025ac:	6878      	ldr	r0, [r7, #4]
 80025ae:	f000 fcf3 	bl	8002f98 <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 80025b2:	4604      	mov	r4, r0
 80025b4:	6838      	ldr	r0, [r7, #0]
 80025b6:	f000 fcfa 	bl	8002fae <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 80025ba:	4603      	mov	r3, r0
 80025bc:	4619      	mov	r1, r3
 80025be:	4620      	mov	r0, r4
 80025c0:	f7ff ffd3 	bl	800256a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj4EEEE19__visit_invoke_implESM_SQ_>
				   std::forward<_Variants>(__vars)...);
 80025c4:	462b      	mov	r3, r5
      }
 80025c6:	4618      	mov	r0, r3
 80025c8:	3708      	adds	r7, #8
 80025ca:	46bd      	mov	sp, r7
 80025cc:	bdb0      	pop	{r4, r5, r7, pc}

080025ce <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj4EEEE14__visit_invokeESM_SQ_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80025ce:	b5b0      	push	{r4, r5, r7, lr}
 80025d0:	b082      	sub	sp, #8
 80025d2:	af00      	add	r7, sp, #0
 80025d4:	6078      	str	r0, [r7, #4]
 80025d6:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 80025d8:	6878      	ldr	r0, [r7, #4]
 80025da:	f000 fcdd 	bl	8002f98 <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 80025de:	4604      	mov	r4, r0
 80025e0:	6838      	ldr	r0, [r7, #0]
 80025e2:	f000 fce4 	bl	8002fae <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 80025e6:	4603      	mov	r3, r0
 80025e8:	4619      	mov	r1, r3
 80025ea:	4620      	mov	r0, r4
 80025ec:	f7ff ffd9 	bl	80025a2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj4EEEE17__do_visit_invokeESM_SQ_>
				   std::forward<_Variants>(__vars)...);
 80025f0:	462b      	mov	r3, r5
      }
 80025f2:	4618      	mov	r0, r3
 80025f4:	3708      	adds	r7, #8
 80025f6:	46bd      	mov	sp, r7
 80025f8:	bdb0      	pop	{r4, r5, r7, pc}

080025fa <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSERKSE_EUlOT_T0_E_RKSt7variantIJifbS9_SD_EEEJLj5EEE9_M_accessIJEEERKSR_jDpT_>:
	_M_access(size_t __first_index, _Args... __rest_indices) const
 80025fa:	b580      	push	{r7, lr}
 80025fc:	b082      	sub	sp, #8
 80025fe:	af00      	add	r7, sp, #0
 8002600:	6078      	str	r0, [r7, #4]
 8002602:	6039      	str	r1, [r7, #0]
	    ._M_access(__rest_indices...);
 8002604:	683b      	ldr	r3, [r7, #0]
 8002606:	009b      	lsls	r3, r3, #2
 8002608:	687a      	ldr	r2, [r7, #4]
 800260a:	4413      	add	r3, r2
 800260c:	4618      	mov	r0, r3
 800260e:	f000 fde1 	bl	80031d4 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSERKSE_EUlOT_T0_E_RKSt7variantIJifbS9_SD_EEEJEE9_M_accessEv>
 8002612:	4603      	mov	r3, r0
	}
 8002614:	4618      	mov	r0, r3
 8002616:	3708      	adds	r7, #8
 8002618:	46bd      	mov	sp, r7
 800261a:	bd80      	pop	{r7, pc}

0800261c <_ZSt10__do_visitILb1ELb1EZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_JRKSt7variantIJifbS8_SC_EEEEDcOT1_DpOT2_>:

  template<bool __use_index,
	   bool __same_return_types,
	   typename _Visitor, typename... _Variants>
    constexpr decltype(auto)
    __do_visit(_Visitor&& __visitor, _Variants&&... __variants)
 800261c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800261e:	b085      	sub	sp, #20
 8002620:	af00      	add	r7, sp, #0
 8002622:	6078      	str	r0, [r7, #4]
 8002624:	6039      	str	r1, [r7, #0]

      using _Result_type = typename std::conditional_t<__use_index,
	__detail::__variant::__variant_idx_cookie,
	_Deduced_type>::type;

      constexpr auto& __vtable = __detail::__variant::__gen_vtable<
 8002626:	4b0f      	ldr	r3, [pc, #60]	; (8002664 <_ZSt10__do_visitILb1ELb1EZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_JRKSt7variantIJifbS8_SC_EEEEDcOT1_DpOT2_+0x48>)
 8002628:	60fb      	str	r3, [r7, #12]
	__same_return_types,
	_Result_type, _Visitor&&, _Variants&&...>::_S_vtable;

      auto __func_ptr = __vtable._M_access(__variants.index()...);
 800262a:	6838      	ldr	r0, [r7, #0]
 800262c:	f7fe ff76 	bl	800151c <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv>
 8002630:	4603      	mov	r3, r0
 8002632:	4619      	mov	r1, r3
 8002634:	68f8      	ldr	r0, [r7, #12]
 8002636:	f7ff ffe0 	bl	80025fa <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSERKSE_EUlOT_T0_E_RKSt7variantIJifbS9_SD_EEEJLj5EEE9_M_accessIJEEERKSR_jDpT_>
 800263a:	4603      	mov	r3, r0
 800263c:	681b      	ldr	r3, [r3, #0]
 800263e:	60bb      	str	r3, [r7, #8]
      return (*__func_ptr)(std::forward<_Visitor>(__visitor),
 8002640:	68bc      	ldr	r4, [r7, #8]
 8002642:	6878      	ldr	r0, [r7, #4]
 8002644:	f000 fdd1 	bl	80031ea <_ZSt7forwardIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8002648:	4605      	mov	r5, r0
 800264a:	6838      	ldr	r0, [r7, #0]
 800264c:	f000 fcaf 	bl	8002fae <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8002650:	4603      	mov	r3, r0
 8002652:	4619      	mov	r1, r3
 8002654:	4628      	mov	r0, r5
 8002656:	47a0      	blx	r4
			   std::forward<_Variants>(__variants)...);
 8002658:	4633      	mov	r3, r6
    }
 800265a:	4618      	mov	r0, r3
 800265c:	3714      	adds	r7, #20
 800265e:	46bd      	mov	sp, r7
 8002660:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002662:	bf00      	nop
 8002664:	080281d0 	.word	0x080281d0

08002668 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_>:
      operator=(const _Copy_assign_base& __rhs)
 8002668:	b580      	push	{r7, lr}
 800266a:	b084      	sub	sp, #16
 800266c:	af00      	add	r7, sp, #0
 800266e:	6078      	str	r0, [r7, #4]
 8002670:	6039      	str	r1, [r7, #0]
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8002672:	687b      	ldr	r3, [r7, #4]
 8002674:	60fb      	str	r3, [r7, #12]
 8002676:	6838      	ldr	r0, [r7, #0]
 8002678:	f7ff fc9e 	bl	8001fb8 <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEERKNSt8__detail9__variant17_Copy_assign_baseILb0EJifbS5_S9_EEEEDcOT0_>
 800267c:	4602      	mov	r2, r0
 800267e:	f107 030c 	add.w	r3, r7, #12
 8002682:	4611      	mov	r1, r2
 8002684:	4618      	mov	r0, r3
 8002686:	f7ff ffc9 	bl	800261c <_ZSt10__do_visitILb1ELb1EZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_JRKSt7variantIJifbS8_SC_EEEEDcOT1_DpOT2_>
	return *this;
 800268a:	687b      	ldr	r3, [r7, #4]
      }
 800268c:	4618      	mov	r0, r3
 800268e:	3710      	adds	r7, #16
 8002690:	46bd      	mov	sp, r7
 8002692:	bd80      	pop	{r7, pc}

08002694 <_ZNRSt8__detail9__variant14_UninitializedIiLb1EE6_M_getEv>:
      constexpr _Type& _M_get() & noexcept
 8002694:	b480      	push	{r7}
 8002696:	b083      	sub	sp, #12
 8002698:	af00      	add	r7, sp, #0
 800269a:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 800269c:	687b      	ldr	r3, [r7, #4]
 800269e:	4618      	mov	r0, r3
 80026a0:	370c      	adds	r7, #12
 80026a2:	46bd      	mov	sp, r7
 80026a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80026a8:	4770      	bx	lr

080026aa <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_>:
        _M_construct(_InIterator __beg, _InIterator __end)
 80026aa:	b580      	push	{r7, lr}
 80026ac:	b084      	sub	sp, #16
 80026ae:	af00      	add	r7, sp, #0
 80026b0:	60f8      	str	r0, [r7, #12]
 80026b2:	60b9      	str	r1, [r7, #8]
 80026b4:	607a      	str	r2, [r7, #4]
	  _M_construct_aux(__beg, __end, _Integral());
 80026b6:	687a      	ldr	r2, [r7, #4]
 80026b8:	68b9      	ldr	r1, [r7, #8]
 80026ba:	68f8      	ldr	r0, [r7, #12]
 80026bc:	f000 fda0 	bl	8003200 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_construct_auxIPKcEEvT_S8_St12__false_type>
        }
 80026c0:	bf00      	nop
 80026c2:	3710      	adds	r7, #16
 80026c4:	46bd      	mov	sp, r7
 80026c6:	bd80      	pop	{r7, pc}

080026c8 <_ZN9__gnu_cxx13new_allocatorISt4pairIKc10token_typeEEC1Ev>:
      // 2103. propagate_on_container_move_assignment
      typedef std::true_type propagate_on_container_move_assignment;
#endif

      _GLIBCXX20_CONSTEXPR
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 80026c8:	b480      	push	{r7}
 80026ca:	b083      	sub	sp, #12
 80026cc:	af00      	add	r7, sp, #0
 80026ce:	6078      	str	r0, [r7, #4]
 80026d0:	687b      	ldr	r3, [r7, #4]
 80026d2:	4618      	mov	r0, r3
 80026d4:	370c      	adds	r7, #12
 80026d6:	46bd      	mov	sp, r7
 80026d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80026dc:	4770      	bx	lr

080026de <_ZN9__gnu_cxx13new_allocatorISt4pairIKc10token_typeEED1Ev>:

      template<typename _Tp1>
	_GLIBCXX20_CONSTEXPR
	new_allocator(const new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }

      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 80026de:	b480      	push	{r7}
 80026e0:	b083      	sub	sp, #12
 80026e2:	af00      	add	r7, sp, #0
 80026e4:	6078      	str	r0, [r7, #4]
 80026e6:	687b      	ldr	r3, [r7, #4]
 80026e8:	4618      	mov	r0, r3
 80026ea:	370c      	adds	r7, #12
 80026ec:	46bd      	mov	sp, r7
 80026ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80026f2:	4770      	bx	lr

080026f4 <_ZNSaISt4pairIKc10token_typeEEC1ERKS3_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
 80026f4:	b580      	push	{r7, lr}
 80026f6:	b082      	sub	sp, #8
 80026f8:	af00      	add	r7, sp, #0
 80026fa:	6078      	str	r0, [r7, #4]
 80026fc:	6039      	str	r1, [r7, #0]
      : __allocator_base<_Tp>(__a) { }
 80026fe:	6839      	ldr	r1, [r7, #0]
 8002700:	6878      	ldr	r0, [r7, #4]
 8002702:	f000 fd8e 	bl	8003222 <_ZN9__gnu_cxx13new_allocatorISt4pairIKc10token_typeEEC1ERKS5_>
 8002706:	687b      	ldr	r3, [r7, #4]
 8002708:	4618      	mov	r0, r3
 800270a:	3708      	adds	r7, #8
 800270c:	46bd      	mov	sp, r7
 800270e:	bd80      	pop	{r7, pc}

08002710 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE13_Rb_tree_implIS7_Lb1EED1Ev>:
#else
      // Unused _Is_pod_comparator is kept as it is part of mangled name.
      template<typename _Key_compare,
	       bool /* _Is_pod_comparator */ = __is_pod(_Key_compare)>
#endif
	struct _Rb_tree_impl
 8002710:	b580      	push	{r7, lr}
 8002712:	b082      	sub	sp, #8
 8002714:	af00      	add	r7, sp, #0
 8002716:	6078      	str	r0, [r7, #4]
 8002718:	6878      	ldr	r0, [r7, #4]
 800271a:	f000 fd9b 	bl	8003254 <_ZNSaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEED1Ev>
 800271e:	687b      	ldr	r3, [r7, #4]
 8002720:	4618      	mov	r0, r3
 8002722:	3708      	adds	r7, #8
 8002724:	46bd      	mov	sp, r7
 8002726:	bd80      	pop	{r7, pc}

08002728 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EEC1ERKS7_RKS8_>:
      _Rb_tree() { }
#else
      _Rb_tree() = default;
#endif

      _Rb_tree(const _Compare& __comp,
 8002728:	b590      	push	{r4, r7, lr}
 800272a:	b087      	sub	sp, #28
 800272c:	af00      	add	r7, sp, #0
 800272e:	60f8      	str	r0, [r7, #12]
 8002730:	60b9      	str	r1, [r7, #8]
 8002732:	607a      	str	r2, [r7, #4]
	       const allocator_type& __a = allocator_type())
      : _M_impl(__comp, _Node_allocator(__a)) { }
 8002734:	68fc      	ldr	r4, [r7, #12]
 8002736:	f107 0314 	add.w	r3, r7, #20
 800273a:	6879      	ldr	r1, [r7, #4]
 800273c:	4618      	mov	r0, r3
 800273e:	f000 fd7c 	bl	800323a <_ZNSaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEC1IS3_EERKSaIT_E>
 8002742:	f107 0314 	add.w	r3, r7, #20
 8002746:	461a      	mov	r2, r3
 8002748:	68b9      	ldr	r1, [r7, #8]
 800274a:	4620      	mov	r0, r4
 800274c:	f000 fd8e 	bl	800326c <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE13_Rb_tree_implIS7_Lb1EEC1ERKS7_OSaISt13_Rb_tree_nodeIS3_EE>
 8002750:	f107 0314 	add.w	r3, r7, #20
 8002754:	4618      	mov	r0, r3
 8002756:	f000 fd7d 	bl	8003254 <_ZNSaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEED1Ev>
 800275a:	68fb      	ldr	r3, [r7, #12]
 800275c:	4618      	mov	r0, r3
 800275e:	371c      	adds	r7, #28
 8002760:	46bd      	mov	sp, r7
 8002762:	bd90      	pop	{r4, r7, pc}

08002764 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EED1Ev>:
      : _Rb_tree(std::move(__x), std::move(__a),
		 typename _Alloc_traits::is_always_equal{})
      { }
#endif

      ~_Rb_tree() _GLIBCXX_NOEXCEPT
 8002764:	b580      	push	{r7, lr}
 8002766:	b082      	sub	sp, #8
 8002768:	af00      	add	r7, sp, #0
 800276a:	6078      	str	r0, [r7, #4]
      { _M_erase(_M_begin()); }
 800276c:	6878      	ldr	r0, [r7, #4]
 800276e:	f000 fdb9 	bl	80032e4 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_beginEv>
 8002772:	4603      	mov	r3, r0
 8002774:	4619      	mov	r1, r3
 8002776:	6878      	ldr	r0, [r7, #4]
 8002778:	f000 fd95 	bl	80032a6 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E>
 800277c:	687b      	ldr	r3, [r7, #4]
 800277e:	4618      	mov	r0, r3
 8002780:	f7ff ffc6 	bl	8002710 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE13_Rb_tree_implIS7_Lb1EED1Ev>
 8002784:	687b      	ldr	r3, [r7, #4]
 8002786:	4618      	mov	r0, r3
 8002788:	3708      	adds	r7, #8
 800278a:	46bd      	mov	sp, r7
 800278c:	bd80      	pop	{r7, pc}

0800278e <_ZNKSt16initializer_listISt4pairIKc10token_typeEE5beginEv>:
      constexpr size_type
      size() const noexcept { return _M_len; }

      // First element.
      constexpr const_iterator
      begin() const noexcept { return _M_array; }
 800278e:	b480      	push	{r7}
 8002790:	b083      	sub	sp, #12
 8002792:	af00      	add	r7, sp, #0
 8002794:	6078      	str	r0, [r7, #4]
 8002796:	687b      	ldr	r3, [r7, #4]
 8002798:	681b      	ldr	r3, [r3, #0]
 800279a:	4618      	mov	r0, r3
 800279c:	370c      	adds	r7, #12
 800279e:	46bd      	mov	sp, r7
 80027a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80027a4:	4770      	bx	lr

080027a6 <_ZNKSt16initializer_listISt4pairIKc10token_typeEE3endEv>:

      // One past the last element.
      constexpr const_iterator
      end() const noexcept { return begin() + size(); }
 80027a6:	b590      	push	{r4, r7, lr}
 80027a8:	b083      	sub	sp, #12
 80027aa:	af00      	add	r7, sp, #0
 80027ac:	6078      	str	r0, [r7, #4]
 80027ae:	6878      	ldr	r0, [r7, #4]
 80027b0:	f7ff ffed 	bl	800278e <_ZNKSt16initializer_listISt4pairIKc10token_typeEE5beginEv>
 80027b4:	4604      	mov	r4, r0
 80027b6:	6878      	ldr	r0, [r7, #4]
 80027b8:	f000 fda0 	bl	80032fc <_ZNKSt16initializer_listISt4pairIKc10token_typeEE4sizeEv>
 80027bc:	4603      	mov	r3, r0
 80027be:	005b      	lsls	r3, r3, #1
 80027c0:	4423      	add	r3, r4
 80027c2:	4618      	mov	r0, r3
 80027c4:	370c      	adds	r7, #12
 80027c6:	46bd      	mov	sp, r7
 80027c8:	bd90      	pop	{r4, r7, pc}

080027ca <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE22_M_insert_range_uniqueIPKS3_EENSt9enable_ifIXsrSt7is_sameIS3_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESG_SG_>:
	using __same_value_type
	  = is_same<value_type, typename iterator_traits<_Iter>::value_type>;

      template<typename _InputIterator>
	__enable_if_t<__same_value_type<_InputIterator>::value>
	_M_insert_range_unique(_InputIterator __first, _InputIterator __last)
 80027ca:	b580      	push	{r7, lr}
 80027cc:	b088      	sub	sp, #32
 80027ce:	af00      	add	r7, sp, #0
 80027d0:	60f8      	str	r0, [r7, #12]
 80027d2:	60b9      	str	r1, [r7, #8]
 80027d4:	607a      	str	r2, [r7, #4]
	{
	  _Alloc_node __an(*this);
 80027d6:	f107 0314 	add.w	r3, r7, #20
 80027da:	68f9      	ldr	r1, [r7, #12]
 80027dc:	4618      	mov	r0, r3
 80027de:	f000 fd99 	bl	8003314 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_Alloc_nodeC1ERS9_>
	  for (; __first != __last; ++__first)
 80027e2:	68ba      	ldr	r2, [r7, #8]
 80027e4:	687b      	ldr	r3, [r7, #4]
 80027e6:	429a      	cmp	r2, r3
 80027e8:	d017      	beq.n	800281a <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE22_M_insert_range_uniqueIPKS3_EENSt9enable_ifIXsrSt7is_sameIS3_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESG_SG_+0x50>
	    _M_insert_unique_(end(), *__first, __an);
 80027ea:	68f8      	ldr	r0, [r7, #12]
 80027ec:	f000 fda1 	bl	8003332 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE3endEv>
 80027f0:	4603      	mov	r3, r0
 80027f2:	61fb      	str	r3, [r7, #28]
 80027f4:	f107 021c 	add.w	r2, r7, #28
 80027f8:	f107 0318 	add.w	r3, r7, #24
 80027fc:	4611      	mov	r1, r2
 80027fe:	4618      	mov	r0, r3
 8002800:	f000 fda8 	bl	8003354 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKc10token_typeEEC1ERKSt17_Rb_tree_iteratorIS3_E>
 8002804:	f107 0314 	add.w	r3, r7, #20
 8002808:	68ba      	ldr	r2, [r7, #8]
 800280a:	69b9      	ldr	r1, [r7, #24]
 800280c:	68f8      	ldr	r0, [r7, #12]
 800280e:	f000 fdb1 	bl	8003374 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE17_M_insert_unique_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_ESt23_Rb_tree_const_iteratorIS3_EOT_RT0_>
	  for (; __first != __last; ++__first)
 8002812:	68bb      	ldr	r3, [r7, #8]
 8002814:	3302      	adds	r3, #2
 8002816:	60bb      	str	r3, [r7, #8]
 8002818:	e7e3      	b.n	80027e2 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE22_M_insert_range_uniqueIPKS3_EENSt9enable_ifIXsrSt7is_sameIS3_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESG_SG_+0x18>
	}
 800281a:	bf00      	nop
 800281c:	3720      	adds	r7, #32
 800281e:	46bd      	mov	sp, r7
 8002820:	bd80      	pop	{r7, pc}

08002822 <_ZN9__gnu_cxx13new_allocatorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>:
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 8002822:	b480      	push	{r7}
 8002824:	b083      	sub	sp, #12
 8002826:	af00      	add	r7, sp, #0
 8002828:	6078      	str	r0, [r7, #4]
 800282a:	687b      	ldr	r3, [r7, #4]
 800282c:	4618      	mov	r0, r3
 800282e:	370c      	adds	r7, #12
 8002830:	46bd      	mov	sp, r7
 8002832:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002836:	4770      	bx	lr

08002838 <_ZN9__gnu_cxx13new_allocatorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>:
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 8002838:	b480      	push	{r7}
 800283a:	b083      	sub	sp, #12
 800283c:	af00      	add	r7, sp, #0
 800283e:	6078      	str	r0, [r7, #4]
 8002840:	687b      	ldr	r3, [r7, #4]
 8002842:	4618      	mov	r0, r3
 8002844:	370c      	adds	r7, #12
 8002846:	46bd      	mov	sp, r7
 8002848:	f85d 7b04 	ldr.w	r7, [sp], #4
 800284c:	4770      	bx	lr

0800284e <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1ERKS9_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
 800284e:	b580      	push	{r7, lr}
 8002850:	b082      	sub	sp, #8
 8002852:	af00      	add	r7, sp, #0
 8002854:	6078      	str	r0, [r7, #4]
 8002856:	6039      	str	r1, [r7, #0]
      : __allocator_base<_Tp>(__a) { }
 8002858:	6839      	ldr	r1, [r7, #0]
 800285a:	6878      	ldr	r0, [r7, #4]
 800285c:	f000 fdbd 	bl	80033da <_ZN9__gnu_cxx13new_allocatorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1ERKSB_>
 8002860:	687b      	ldr	r3, [r7, #4]
 8002862:	4618      	mov	r0, r3
 8002864:	3708      	adds	r7, #8
 8002866:	46bd      	mov	sp, r7
 8002868:	bd80      	pop	{r7, pc}

0800286a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE13_Rb_tree_implISD_Lb1EED1Ev>:
	struct _Rb_tree_impl
 800286a:	b580      	push	{r7, lr}
 800286c:	b082      	sub	sp, #8
 800286e:	af00      	add	r7, sp, #0
 8002870:	6078      	str	r0, [r7, #4]
 8002872:	6878      	ldr	r0, [r7, #4]
 8002874:	f000 fdca 	bl	800340c <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEED1Ev>
 8002878:	687b      	ldr	r3, [r7, #4]
 800287a:	4618      	mov	r0, r3
 800287c:	3708      	adds	r7, #8
 800287e:	46bd      	mov	sp, r7
 8002880:	bd80      	pop	{r7, pc}

08002882 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EEC1ERKSD_RKSE_>:
      _Rb_tree(const _Compare& __comp,
 8002882:	b590      	push	{r4, r7, lr}
 8002884:	b087      	sub	sp, #28
 8002886:	af00      	add	r7, sp, #0
 8002888:	60f8      	str	r0, [r7, #12]
 800288a:	60b9      	str	r1, [r7, #8]
 800288c:	607a      	str	r2, [r7, #4]
      : _M_impl(__comp, _Node_allocator(__a)) { }
 800288e:	68fc      	ldr	r4, [r7, #12]
 8002890:	f107 0314 	add.w	r3, r7, #20
 8002894:	6879      	ldr	r1, [r7, #4]
 8002896:	4618      	mov	r0, r3
 8002898:	f000 fdab 	bl	80033f2 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEC1IS9_EERKSaIT_E>
 800289c:	f107 0314 	add.w	r3, r7, #20
 80028a0:	461a      	mov	r2, r3
 80028a2:	68b9      	ldr	r1, [r7, #8]
 80028a4:	4620      	mov	r0, r4
 80028a6:	f000 fdbd 	bl	8003424 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE13_Rb_tree_implISD_Lb1EEC1ERKSD_OSaISt13_Rb_tree_nodeIS9_EE>
 80028aa:	f107 0314 	add.w	r3, r7, #20
 80028ae:	4618      	mov	r0, r3
 80028b0:	f000 fdac 	bl	800340c <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEED1Ev>
 80028b4:	68fb      	ldr	r3, [r7, #12]
 80028b6:	4618      	mov	r0, r3
 80028b8:	371c      	adds	r7, #28
 80028ba:	46bd      	mov	sp, r7
 80028bc:	bd90      	pop	{r4, r7, pc}

080028be <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EED1Ev>:
      ~_Rb_tree() _GLIBCXX_NOEXCEPT
 80028be:	b580      	push	{r7, lr}
 80028c0:	b082      	sub	sp, #8
 80028c2:	af00      	add	r7, sp, #0
 80028c4:	6078      	str	r0, [r7, #4]
      { _M_erase(_M_begin()); }
 80028c6:	6878      	ldr	r0, [r7, #4]
 80028c8:	f000 fde8 	bl	800349c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_beginEv>
 80028cc:	4603      	mov	r3, r0
 80028ce:	4619      	mov	r1, r3
 80028d0:	6878      	ldr	r0, [r7, #4]
 80028d2:	f000 fdc4 	bl	800345e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_eraseEPSt13_Rb_tree_nodeIS9_E>
 80028d6:	687b      	ldr	r3, [r7, #4]
 80028d8:	4618      	mov	r0, r3
 80028da:	f7ff ffc6 	bl	800286a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE13_Rb_tree_implISD_Lb1EED1Ev>
 80028de:	687b      	ldr	r3, [r7, #4]
 80028e0:	4618      	mov	r0, r3
 80028e2:	3708      	adds	r7, #8
 80028e4:	46bd      	mov	sp, r7
 80028e6:	bd80      	pop	{r7, pc}

080028e8 <_ZNKSt16initializer_listISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE5beginEv>:
      begin() const noexcept { return _M_array; }
 80028e8:	b480      	push	{r7}
 80028ea:	b083      	sub	sp, #12
 80028ec:	af00      	add	r7, sp, #0
 80028ee:	6078      	str	r0, [r7, #4]
 80028f0:	687b      	ldr	r3, [r7, #4]
 80028f2:	681b      	ldr	r3, [r3, #0]
 80028f4:	4618      	mov	r0, r3
 80028f6:	370c      	adds	r7, #12
 80028f8:	46bd      	mov	sp, r7
 80028fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80028fe:	4770      	bx	lr

08002900 <_ZNKSt16initializer_listISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE3endEv>:
      end() const noexcept { return begin() + size(); }
 8002900:	b590      	push	{r4, r7, lr}
 8002902:	b083      	sub	sp, #12
 8002904:	af00      	add	r7, sp, #0
 8002906:	6078      	str	r0, [r7, #4]
 8002908:	6878      	ldr	r0, [r7, #4]
 800290a:	f7ff ffed 	bl	80028e8 <_ZNKSt16initializer_listISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE5beginEv>
 800290e:	4604      	mov	r4, r0
 8002910:	6878      	ldr	r0, [r7, #4]
 8002912:	f000 fdcf 	bl	80034b4 <_ZNKSt16initializer_listISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE4sizeEv>
 8002916:	4602      	mov	r2, r0
 8002918:	4613      	mov	r3, r2
 800291a:	00db      	lsls	r3, r3, #3
 800291c:	1a9b      	subs	r3, r3, r2
 800291e:	009b      	lsls	r3, r3, #2
 8002920:	4423      	add	r3, r4
 8002922:	4618      	mov	r0, r3
 8002924:	370c      	adds	r7, #12
 8002926:	46bd      	mov	sp, r7
 8002928:	bd90      	pop	{r4, r7, pc}

0800292a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE22_M_insert_range_uniqueIPKS9_EENSt9enable_ifIXsrSt7is_sameIS9_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESM_SM_>:
	_M_insert_range_unique(_InputIterator __first, _InputIterator __last)
 800292a:	b580      	push	{r7, lr}
 800292c:	b088      	sub	sp, #32
 800292e:	af00      	add	r7, sp, #0
 8002930:	60f8      	str	r0, [r7, #12]
 8002932:	60b9      	str	r1, [r7, #8]
 8002934:	607a      	str	r2, [r7, #4]
	  _Alloc_node __an(*this);
 8002936:	f107 0314 	add.w	r3, r7, #20
 800293a:	68f9      	ldr	r1, [r7, #12]
 800293c:	4618      	mov	r0, r3
 800293e:	f000 fdc5 	bl	80034cc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_Alloc_nodeC1ERSF_>
	  for (; __first != __last; ++__first)
 8002942:	68ba      	ldr	r2, [r7, #8]
 8002944:	687b      	ldr	r3, [r7, #4]
 8002946:	429a      	cmp	r2, r3
 8002948:	d017      	beq.n	800297a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE22_M_insert_range_uniqueIPKS9_EENSt9enable_ifIXsrSt7is_sameIS9_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESM_SM_+0x50>
	    _M_insert_unique_(end(), *__first, __an);
 800294a:	68f8      	ldr	r0, [r7, #12]
 800294c:	f000 fdcd 	bl	80034ea <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE3endEv>
 8002950:	4603      	mov	r3, r0
 8002952:	61fb      	str	r3, [r7, #28]
 8002954:	f107 021c 	add.w	r2, r7, #28
 8002958:	f107 0318 	add.w	r3, r7, #24
 800295c:	4611      	mov	r1, r2
 800295e:	4618      	mov	r0, r3
 8002960:	f000 fdd4 	bl	800350c <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1ERKSt17_Rb_tree_iteratorIS9_E>
 8002964:	f107 0314 	add.w	r3, r7, #20
 8002968:	68ba      	ldr	r2, [r7, #8]
 800296a:	69b9      	ldr	r1, [r7, #24]
 800296c:	68f8      	ldr	r0, [r7, #12]
 800296e:	f000 fddd 	bl	800352c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE17_M_insert_unique_IRKS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_ESt23_Rb_tree_const_iteratorIS9_EOT_RT0_>
	  for (; __first != __last; ++__first)
 8002972:	68bb      	ldr	r3, [r7, #8]
 8002974:	331c      	adds	r3, #28
 8002976:	60bb      	str	r3, [r7, #8]
 8002978:	e7e3      	b.n	8002942 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE22_M_insert_range_uniqueIPKS9_EENSt9enable_ifIXsrSt7is_sameIS9_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESM_SM_+0x18>
	}
 800297a:	bf00      	nop
 800297c:	3720      	adds	r7, #32
 800297e:	46bd      	mov	sp, r7
 8002980:	bd80      	pop	{r7, pc}

08002982 <_ZN9__gnu_cxx13new_allocatorISt4pairIKc12double_tokenEEC1Ev>:
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 8002982:	b480      	push	{r7}
 8002984:	b083      	sub	sp, #12
 8002986:	af00      	add	r7, sp, #0
 8002988:	6078      	str	r0, [r7, #4]
 800298a:	687b      	ldr	r3, [r7, #4]
 800298c:	4618      	mov	r0, r3
 800298e:	370c      	adds	r7, #12
 8002990:	46bd      	mov	sp, r7
 8002992:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002996:	4770      	bx	lr

08002998 <_ZN9__gnu_cxx13new_allocatorISt4pairIKc12double_tokenEED1Ev>:
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 8002998:	b480      	push	{r7}
 800299a:	b083      	sub	sp, #12
 800299c:	af00      	add	r7, sp, #0
 800299e:	6078      	str	r0, [r7, #4]
 80029a0:	687b      	ldr	r3, [r7, #4]
 80029a2:	4618      	mov	r0, r3
 80029a4:	370c      	adds	r7, #12
 80029a6:	46bd      	mov	sp, r7
 80029a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80029ac:	4770      	bx	lr

080029ae <_ZNSaISt4pairIKc12double_tokenEEC1ERKS3_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
 80029ae:	b580      	push	{r7, lr}
 80029b0:	b082      	sub	sp, #8
 80029b2:	af00      	add	r7, sp, #0
 80029b4:	6078      	str	r0, [r7, #4]
 80029b6:	6039      	str	r1, [r7, #0]
      : __allocator_base<_Tp>(__a) { }
 80029b8:	6839      	ldr	r1, [r7, #0]
 80029ba:	6878      	ldr	r0, [r7, #4]
 80029bc:	f000 fde9 	bl	8003592 <_ZN9__gnu_cxx13new_allocatorISt4pairIKc12double_tokenEEC1ERKS5_>
 80029c0:	687b      	ldr	r3, [r7, #4]
 80029c2:	4618      	mov	r0, r3
 80029c4:	3708      	adds	r7, #8
 80029c6:	46bd      	mov	sp, r7
 80029c8:	bd80      	pop	{r7, pc}

080029ca <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE13_Rb_tree_implIS7_Lb1EED1Ev>:
	struct _Rb_tree_impl
 80029ca:	b580      	push	{r7, lr}
 80029cc:	b082      	sub	sp, #8
 80029ce:	af00      	add	r7, sp, #0
 80029d0:	6078      	str	r0, [r7, #4]
 80029d2:	6878      	ldr	r0, [r7, #4]
 80029d4:	f000 fdf6 	bl	80035c4 <_ZNSaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEED1Ev>
 80029d8:	687b      	ldr	r3, [r7, #4]
 80029da:	4618      	mov	r0, r3
 80029dc:	3708      	adds	r7, #8
 80029de:	46bd      	mov	sp, r7
 80029e0:	bd80      	pop	{r7, pc}

080029e2 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EEC1ERKS7_RKS8_>:
      _Rb_tree(const _Compare& __comp,
 80029e2:	b590      	push	{r4, r7, lr}
 80029e4:	b087      	sub	sp, #28
 80029e6:	af00      	add	r7, sp, #0
 80029e8:	60f8      	str	r0, [r7, #12]
 80029ea:	60b9      	str	r1, [r7, #8]
 80029ec:	607a      	str	r2, [r7, #4]
      : _M_impl(__comp, _Node_allocator(__a)) { }
 80029ee:	68fc      	ldr	r4, [r7, #12]
 80029f0:	f107 0314 	add.w	r3, r7, #20
 80029f4:	6879      	ldr	r1, [r7, #4]
 80029f6:	4618      	mov	r0, r3
 80029f8:	f000 fdd7 	bl	80035aa <_ZNSaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEC1IS3_EERKSaIT_E>
 80029fc:	f107 0314 	add.w	r3, r7, #20
 8002a00:	461a      	mov	r2, r3
 8002a02:	68b9      	ldr	r1, [r7, #8]
 8002a04:	4620      	mov	r0, r4
 8002a06:	f000 fde9 	bl	80035dc <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE13_Rb_tree_implIS7_Lb1EEC1ERKS7_OSaISt13_Rb_tree_nodeIS3_EE>
 8002a0a:	f107 0314 	add.w	r3, r7, #20
 8002a0e:	4618      	mov	r0, r3
 8002a10:	f000 fdd8 	bl	80035c4 <_ZNSaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEED1Ev>
 8002a14:	68fb      	ldr	r3, [r7, #12]
 8002a16:	4618      	mov	r0, r3
 8002a18:	371c      	adds	r7, #28
 8002a1a:	46bd      	mov	sp, r7
 8002a1c:	bd90      	pop	{r4, r7, pc}

08002a1e <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EED1Ev>:
      ~_Rb_tree() _GLIBCXX_NOEXCEPT
 8002a1e:	b580      	push	{r7, lr}
 8002a20:	b082      	sub	sp, #8
 8002a22:	af00      	add	r7, sp, #0
 8002a24:	6078      	str	r0, [r7, #4]
      { _M_erase(_M_begin()); }
 8002a26:	6878      	ldr	r0, [r7, #4]
 8002a28:	f000 fe14 	bl	8003654 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_beginEv>
 8002a2c:	4603      	mov	r3, r0
 8002a2e:	4619      	mov	r1, r3
 8002a30:	6878      	ldr	r0, [r7, #4]
 8002a32:	f000 fdf0 	bl	8003616 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E>
 8002a36:	687b      	ldr	r3, [r7, #4]
 8002a38:	4618      	mov	r0, r3
 8002a3a:	f7ff ffc6 	bl	80029ca <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE13_Rb_tree_implIS7_Lb1EED1Ev>
 8002a3e:	687b      	ldr	r3, [r7, #4]
 8002a40:	4618      	mov	r0, r3
 8002a42:	3708      	adds	r7, #8
 8002a44:	46bd      	mov	sp, r7
 8002a46:	bd80      	pop	{r7, pc}

08002a48 <_ZNKSt16initializer_listISt4pairIKc12double_tokenEE5beginEv>:
      begin() const noexcept { return _M_array; }
 8002a48:	b480      	push	{r7}
 8002a4a:	b083      	sub	sp, #12
 8002a4c:	af00      	add	r7, sp, #0
 8002a4e:	6078      	str	r0, [r7, #4]
 8002a50:	687b      	ldr	r3, [r7, #4]
 8002a52:	681b      	ldr	r3, [r3, #0]
 8002a54:	4618      	mov	r0, r3
 8002a56:	370c      	adds	r7, #12
 8002a58:	46bd      	mov	sp, r7
 8002a5a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002a5e:	4770      	bx	lr

08002a60 <_ZNKSt16initializer_listISt4pairIKc12double_tokenEE3endEv>:
      end() const noexcept { return begin() + size(); }
 8002a60:	b590      	push	{r4, r7, lr}
 8002a62:	b083      	sub	sp, #12
 8002a64:	af00      	add	r7, sp, #0
 8002a66:	6078      	str	r0, [r7, #4]
 8002a68:	6878      	ldr	r0, [r7, #4]
 8002a6a:	f7ff ffed 	bl	8002a48 <_ZNKSt16initializer_listISt4pairIKc12double_tokenEE5beginEv>
 8002a6e:	4604      	mov	r4, r0
 8002a70:	6878      	ldr	r0, [r7, #4]
 8002a72:	f000 fdfb 	bl	800366c <_ZNKSt16initializer_listISt4pairIKc12double_tokenEE4sizeEv>
 8002a76:	4602      	mov	r2, r0
 8002a78:	4613      	mov	r3, r2
 8002a7a:	005b      	lsls	r3, r3, #1
 8002a7c:	4413      	add	r3, r2
 8002a7e:	4423      	add	r3, r4
 8002a80:	4618      	mov	r0, r3
 8002a82:	370c      	adds	r7, #12
 8002a84:	46bd      	mov	sp, r7
 8002a86:	bd90      	pop	{r4, r7, pc}

08002a88 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE22_M_insert_range_uniqueIPKS3_EENSt9enable_ifIXsrSt7is_sameIS3_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESG_SG_>:
	_M_insert_range_unique(_InputIterator __first, _InputIterator __last)
 8002a88:	b580      	push	{r7, lr}
 8002a8a:	b088      	sub	sp, #32
 8002a8c:	af00      	add	r7, sp, #0
 8002a8e:	60f8      	str	r0, [r7, #12]
 8002a90:	60b9      	str	r1, [r7, #8]
 8002a92:	607a      	str	r2, [r7, #4]
	  _Alloc_node __an(*this);
 8002a94:	f107 0314 	add.w	r3, r7, #20
 8002a98:	68f9      	ldr	r1, [r7, #12]
 8002a9a:	4618      	mov	r0, r3
 8002a9c:	f000 fdf2 	bl	8003684 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_Alloc_nodeC1ERS9_>
	  for (; __first != __last; ++__first)
 8002aa0:	68ba      	ldr	r2, [r7, #8]
 8002aa2:	687b      	ldr	r3, [r7, #4]
 8002aa4:	429a      	cmp	r2, r3
 8002aa6:	d017      	beq.n	8002ad8 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE22_M_insert_range_uniqueIPKS3_EENSt9enable_ifIXsrSt7is_sameIS3_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESG_SG_+0x50>
	    _M_insert_unique_(end(), *__first, __an);
 8002aa8:	68f8      	ldr	r0, [r7, #12]
 8002aaa:	f000 fdfa 	bl	80036a2 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE3endEv>
 8002aae:	4603      	mov	r3, r0
 8002ab0:	61fb      	str	r3, [r7, #28]
 8002ab2:	f107 021c 	add.w	r2, r7, #28
 8002ab6:	f107 0318 	add.w	r3, r7, #24
 8002aba:	4611      	mov	r1, r2
 8002abc:	4618      	mov	r0, r3
 8002abe:	f000 fe01 	bl	80036c4 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEEC1ERKSt17_Rb_tree_iteratorIS3_E>
 8002ac2:	f107 0314 	add.w	r3, r7, #20
 8002ac6:	68ba      	ldr	r2, [r7, #8]
 8002ac8:	69b9      	ldr	r1, [r7, #24]
 8002aca:	68f8      	ldr	r0, [r7, #12]
 8002acc:	f000 fe0a 	bl	80036e4 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE17_M_insert_unique_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_ESt23_Rb_tree_const_iteratorIS3_EOT_RT0_>
	  for (; __first != __last; ++__first)
 8002ad0:	68bb      	ldr	r3, [r7, #8]
 8002ad2:	3303      	adds	r3, #3
 8002ad4:	60bb      	str	r3, [r7, #8]
 8002ad6:	e7e3      	b.n	8002aa0 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE22_M_insert_range_uniqueIPKS3_EENSt9enable_ifIXsrSt7is_sameIS3_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESG_SG_+0x18>
	}
 8002ad8:	bf00      	nop
 8002ada:	3720      	adds	r7, #32
 8002adc:	46bd      	mov	sp, r7
 8002ade:	bd80      	pop	{r7, pc}

08002ae0 <_ZN9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 8002ae0:	b480      	push	{r7}
 8002ae2:	b083      	sub	sp, #12
 8002ae4:	af00      	add	r7, sp, #0
 8002ae6:	6078      	str	r0, [r7, #4]
 8002ae8:	6039      	str	r1, [r7, #0]
      : _M_current(__i) { }
 8002aea:	683b      	ldr	r3, [r7, #0]
 8002aec:	681a      	ldr	r2, [r3, #0]
 8002aee:	687b      	ldr	r3, [r7, #4]
 8002af0:	601a      	str	r2, [r3, #0]
 8002af2:	687b      	ldr	r3, [r7, #4]
 8002af4:	4618      	mov	r0, r3
 8002af6:	370c      	adds	r7, #12
 8002af8:	46bd      	mov	sp, r7
 8002afa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002afe:	4770      	bx	lr

08002b00 <_ZNK9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
 8002b00:	b480      	push	{r7}
 8002b02:	b083      	sub	sp, #12
 8002b04:	af00      	add	r7, sp, #0
 8002b06:	6078      	str	r0, [r7, #4]
      { return _M_current; }
 8002b08:	687b      	ldr	r3, [r7, #4]
 8002b0a:	4618      	mov	r0, r3
 8002b0c:	370c      	adds	r7, #12
 8002b0e:	46bd      	mov	sp, r7
 8002b10:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b14:	4770      	bx	lr

08002b16 <_ZNKSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE5indexEv>:
      constexpr size_t index() const noexcept
 8002b16:	b480      	push	{r7}
 8002b18:	b083      	sub	sp, #12
 8002b1a:	af00      	add	r7, sp, #0
 8002b1c:	6078      	str	r0, [r7, #4]
	if (this->_M_index ==
 8002b1e:	687b      	ldr	r3, [r7, #4]
 8002b20:	791b      	ldrb	r3, [r3, #4]
 8002b22:	2bff      	cmp	r3, #255	; 0xff
 8002b24:	d102      	bne.n	8002b2c <_ZNKSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE5indexEv+0x16>
	  return variant_npos;
 8002b26:	f04f 33ff 	mov.w	r3, #4294967295
 8002b2a:	e001      	b.n	8002b30 <_ZNKSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE5indexEv+0x1a>
	return this->_M_index;
 8002b2c:	687b      	ldr	r3, [r7, #4]
 8002b2e:	791b      	ldrb	r3, [r3, #4]
      }
 8002b30:	4618      	mov	r0, r3
 8002b32:	370c      	adds	r7, #12
 8002b34:	46bd      	mov	sp, r7
 8002b36:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b3a:	4770      	bx	lr

08002b3c <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8002b3c:	b580      	push	{r7, lr}
 8002b3e:	b082      	sub	sp, #8
 8002b40:	af00      	add	r7, sp, #0
 8002b42:	7138      	strb	r0, [r7, #4]
 8002b44:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8002b46:	6838      	ldr	r0, [r7, #0]
 8002b48:	f000 fe0a 	bl	8003760 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8002b4c:	4603      	mov	r3, r0
 8002b4e:	4618      	mov	r0, r3
 8002b50:	f000 fe11 	bl	8003776 <_ZNRSt8__detail9__variant14_UninitializedIP10AssignmentLb1EE6_M_getEv>
 8002b54:	4603      	mov	r3, r0
 8002b56:	4618      	mov	r0, r3
 8002b58:	3708      	adds	r7, #8
 8002b5a:	46bd      	mov	sp, r7
 8002b5c:	bd80      	pop	{r7, pc}

08002b5e <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8002b5e:	b590      	push	{r4, r7, lr}
 8002b60:	b083      	sub	sp, #12
 8002b62:	af00      	add	r7, sp, #0
 8002b64:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8002b66:	6878      	ldr	r0, [r7, #4]
 8002b68:	f000 fdef 	bl	800374a <_ZSt7forwardIRSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEOT_RNSt16remove_referenceISD_E4typeE>
 8002b6c:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8002b6e:	4619      	mov	r1, r3
 8002b70:	4620      	mov	r0, r4
 8002b72:	f7ff ffe3 	bl	8002b3c <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tILj0EEOT_>
 8002b76:	4603      	mov	r3, r0
    }
 8002b78:	4618      	mov	r0, r3
 8002b7a:	370c      	adds	r7, #12
 8002b7c:	46bd      	mov	sp, r7
 8002b7e:	bd90      	pop	{r4, r7, pc}

08002b80 <_ZSt3getILj0EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
    get(variant<_Types...>& __v)
 8002b80:	b580      	push	{r7, lr}
 8002b82:	b082      	sub	sp, #8
 8002b84:	af00      	add	r7, sp, #0
 8002b86:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 8002b88:	6878      	ldr	r0, [r7, #4]
 8002b8a:	f7ff ffc4 	bl	8002b16 <_ZNKSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE5indexEv>
 8002b8e:	4603      	mov	r3, r0
 8002b90:	2b00      	cmp	r3, #0
 8002b92:	bf14      	ite	ne
 8002b94:	2301      	movne	r3, #1
 8002b96:	2300      	moveq	r3, #0
 8002b98:	b2db      	uxtb	r3, r3
 8002b9a:	2b00      	cmp	r3, #0
 8002b9c:	d002      	beq.n	8002ba4 <_ZSt3getILj0EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 8002b9e:	4805      	ldr	r0, [pc, #20]	; (8002bb4 <_ZSt3getILj0EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 8002ba0:	f7fe fa67 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 8002ba4:	6878      	ldr	r0, [r7, #4]
 8002ba6:	f7ff ffda 	bl	8002b5e <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>
 8002baa:	4603      	mov	r3, r0
    }
 8002bac:	4618      	mov	r0, r3
 8002bae:	3708      	adds	r7, #8
 8002bb0:	46bd      	mov	sp, r7
 8002bb2:	bd80      	pop	{r7, pc}
 8002bb4:	08027548 	.word	0x08027548

08002bb8 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8002bb8:	b580      	push	{r7, lr}
 8002bba:	b082      	sub	sp, #8
 8002bbc:	af00      	add	r7, sp, #0
 8002bbe:	7138      	strb	r0, [r7, #4]
 8002bc0:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8002bc2:	6838      	ldr	r0, [r7, #0]
 8002bc4:	f000 fde2 	bl	800378c <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP13Function_callP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8002bc8:	4603      	mov	r3, r0
 8002bca:	4618      	mov	r0, r3
 8002bcc:	f000 fde9 	bl	80037a2 <_ZNRSt8__detail9__variant14_UninitializedIP13Function_callLb1EE6_M_getEv>
 8002bd0:	4603      	mov	r3, r0
 8002bd2:	4618      	mov	r0, r3
 8002bd4:	3708      	adds	r7, #8
 8002bd6:	46bd      	mov	sp, r7
 8002bd8:	bd80      	pop	{r7, pc}

08002bda <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8002bda:	b590      	push	{r4, r7, lr}
 8002bdc:	b083      	sub	sp, #12
 8002bde:	af00      	add	r7, sp, #0
 8002be0:	7138      	strb	r0, [r7, #4]
 8002be2:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8002be4:	6838      	ldr	r0, [r7, #0]
 8002be6:	f000 fdbb 	bl	8003760 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8002bea:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8002bec:	4619      	mov	r1, r3
 8002bee:	4620      	mov	r0, r4
 8002bf0:	f7ff ffe2 	bl	8002bb8 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tILj0EEOT_>
 8002bf4:	4603      	mov	r3, r0
    }
 8002bf6:	4618      	mov	r0, r3
 8002bf8:	370c      	adds	r7, #12
 8002bfa:	46bd      	mov	sp, r7
 8002bfc:	bd90      	pop	{r4, r7, pc}

08002bfe <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8002bfe:	b590      	push	{r4, r7, lr}
 8002c00:	b083      	sub	sp, #12
 8002c02:	af00      	add	r7, sp, #0
 8002c04:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8002c06:	6878      	ldr	r0, [r7, #4]
 8002c08:	f000 fd9f 	bl	800374a <_ZSt7forwardIRSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEOT_RNSt16remove_referenceISD_E4typeE>
 8002c0c:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8002c0e:	4619      	mov	r1, r3
 8002c10:	4620      	mov	r0, r4
 8002c12:	f7ff ffe2 	bl	8002bda <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8002c16:	4603      	mov	r3, r0
    }
 8002c18:	4618      	mov	r0, r3
 8002c1a:	370c      	adds	r7, #12
 8002c1c:	46bd      	mov	sp, r7
 8002c1e:	bd90      	pop	{r4, r7, pc}

08002c20 <_ZSt3getILj1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
    get(variant<_Types...>& __v)
 8002c20:	b580      	push	{r7, lr}
 8002c22:	b082      	sub	sp, #8
 8002c24:	af00      	add	r7, sp, #0
 8002c26:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 8002c28:	6878      	ldr	r0, [r7, #4]
 8002c2a:	f7ff ff74 	bl	8002b16 <_ZNKSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE5indexEv>
 8002c2e:	4603      	mov	r3, r0
 8002c30:	2b01      	cmp	r3, #1
 8002c32:	bf14      	ite	ne
 8002c34:	2301      	movne	r3, #1
 8002c36:	2300      	moveq	r3, #0
 8002c38:	b2db      	uxtb	r3, r3
 8002c3a:	2b00      	cmp	r3, #0
 8002c3c:	d002      	beq.n	8002c44 <_ZSt3getILj1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 8002c3e:	4805      	ldr	r0, [pc, #20]	; (8002c54 <_ZSt3getILj1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 8002c40:	f7fe fa17 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 8002c44:	6878      	ldr	r0, [r7, #4]
 8002c46:	f7ff ffda 	bl	8002bfe <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>
 8002c4a:	4603      	mov	r3, r0
    }
 8002c4c:	4618      	mov	r0, r3
 8002c4e:	3708      	adds	r7, #8
 8002c50:	46bd      	mov	sp, r7
 8002c52:	bd80      	pop	{r7, pc}
 8002c54:	08027548 	.word	0x08027548

08002c58 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8002c58:	b580      	push	{r7, lr}
 8002c5a:	b082      	sub	sp, #8
 8002c5c:	af00      	add	r7, sp, #0
 8002c5e:	7138      	strb	r0, [r7, #4]
 8002c60:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8002c62:	6838      	ldr	r0, [r7, #0]
 8002c64:	f000 fda8 	bl	80037b8 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISB_E4typeE>
 8002c68:	4603      	mov	r3, r0
 8002c6a:	4618      	mov	r0, r3
 8002c6c:	f000 fdaf 	bl	80037ce <_ZNRSt8__detail9__variant14_UninitializedIP11Method_callLb1EE6_M_getEv>
 8002c70:	4603      	mov	r3, r0
 8002c72:	4618      	mov	r0, r3
 8002c74:	3708      	adds	r7, #8
 8002c76:	46bd      	mov	sp, r7
 8002c78:	bd80      	pop	{r7, pc}

08002c7a <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8002c7a:	b590      	push	{r4, r7, lr}
 8002c7c:	b083      	sub	sp, #12
 8002c7e:	af00      	add	r7, sp, #0
 8002c80:	7138      	strb	r0, [r7, #4]
 8002c82:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8002c84:	6838      	ldr	r0, [r7, #0]
 8002c86:	f000 fd81 	bl	800378c <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP13Function_callP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8002c8a:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8002c8c:	4619      	mov	r1, r3
 8002c8e:	4620      	mov	r0, r4
 8002c90:	f7ff ffe2 	bl	8002c58 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tILj0EEOT_>
 8002c94:	4603      	mov	r3, r0
    }
 8002c96:	4618      	mov	r0, r3
 8002c98:	370c      	adds	r7, #12
 8002c9a:	46bd      	mov	sp, r7
 8002c9c:	bd90      	pop	{r4, r7, pc}

08002c9e <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8002c9e:	b590      	push	{r4, r7, lr}
 8002ca0:	b083      	sub	sp, #12
 8002ca2:	af00      	add	r7, sp, #0
 8002ca4:	7138      	strb	r0, [r7, #4]
 8002ca6:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8002ca8:	6838      	ldr	r0, [r7, #0]
 8002caa:	f000 fd59 	bl	8003760 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8002cae:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8002cb0:	4619      	mov	r1, r3
 8002cb2:	4620      	mov	r0, r4
 8002cb4:	f7ff ffe1 	bl	8002c7a <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8002cb8:	4603      	mov	r3, r0
    }
 8002cba:	4618      	mov	r0, r3
 8002cbc:	370c      	adds	r7, #12
 8002cbe:	46bd      	mov	sp, r7
 8002cc0:	bd90      	pop	{r4, r7, pc}

08002cc2 <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8002cc2:	b590      	push	{r4, r7, lr}
 8002cc4:	b083      	sub	sp, #12
 8002cc6:	af00      	add	r7, sp, #0
 8002cc8:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8002cca:	6878      	ldr	r0, [r7, #4]
 8002ccc:	f000 fd3d 	bl	800374a <_ZSt7forwardIRSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEOT_RNSt16remove_referenceISD_E4typeE>
 8002cd0:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8002cd2:	4619      	mov	r1, r3
 8002cd4:	4620      	mov	r0, r4
 8002cd6:	f7ff ffe2 	bl	8002c9e <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8002cda:	4603      	mov	r3, r0
    }
 8002cdc:	4618      	mov	r0, r3
 8002cde:	370c      	adds	r7, #12
 8002ce0:	46bd      	mov	sp, r7
 8002ce2:	bd90      	pop	{r4, r7, pc}

08002ce4 <_ZSt3getILj2EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
    get(variant<_Types...>& __v)
 8002ce4:	b580      	push	{r7, lr}
 8002ce6:	b082      	sub	sp, #8
 8002ce8:	af00      	add	r7, sp, #0
 8002cea:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 8002cec:	6878      	ldr	r0, [r7, #4]
 8002cee:	f7ff ff12 	bl	8002b16 <_ZNKSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE5indexEv>
 8002cf2:	4603      	mov	r3, r0
 8002cf4:	2b02      	cmp	r3, #2
 8002cf6:	bf14      	ite	ne
 8002cf8:	2301      	movne	r3, #1
 8002cfa:	2300      	moveq	r3, #0
 8002cfc:	b2db      	uxtb	r3, r3
 8002cfe:	2b00      	cmp	r3, #0
 8002d00:	d002      	beq.n	8002d08 <_ZSt3getILj2EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 8002d02:	4805      	ldr	r0, [pc, #20]	; (8002d18 <_ZSt3getILj2EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 8002d04:	f7fe f9b5 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 8002d08:	6878      	ldr	r0, [r7, #4]
 8002d0a:	f7ff ffda 	bl	8002cc2 <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>
 8002d0e:	4603      	mov	r3, r0
    }
 8002d10:	4618      	mov	r0, r3
 8002d12:	3708      	adds	r7, #8
 8002d14:	46bd      	mov	sp, r7
 8002d16:	bd80      	pop	{r7, pc}
 8002d18:	08027548 	.word	0x08027548

08002d1c <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP15While_statementP12If_statementEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8002d1c:	b580      	push	{r7, lr}
 8002d1e:	b082      	sub	sp, #8
 8002d20:	af00      	add	r7, sp, #0
 8002d22:	7138      	strb	r0, [r7, #4]
 8002d24:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8002d26:	6838      	ldr	r0, [r7, #0]
 8002d28:	f000 fd5c 	bl	80037e4 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8002d2c:	4603      	mov	r3, r0
 8002d2e:	4618      	mov	r0, r3
 8002d30:	f000 fd63 	bl	80037fa <_ZNRSt8__detail9__variant14_UninitializedIP15While_statementLb1EE6_M_getEv>
 8002d34:	4603      	mov	r3, r0
 8002d36:	4618      	mov	r0, r3
 8002d38:	3708      	adds	r7, #8
 8002d3a:	46bd      	mov	sp, r7
 8002d3c:	bd80      	pop	{r7, pc}

08002d3e <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8002d3e:	b590      	push	{r4, r7, lr}
 8002d40:	b083      	sub	sp, #12
 8002d42:	af00      	add	r7, sp, #0
 8002d44:	7138      	strb	r0, [r7, #4]
 8002d46:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8002d48:	6838      	ldr	r0, [r7, #0]
 8002d4a:	f000 fd35 	bl	80037b8 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISB_E4typeE>
 8002d4e:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8002d50:	4619      	mov	r1, r3
 8002d52:	4620      	mov	r0, r4
 8002d54:	f7ff ffe2 	bl	8002d1c <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP15While_statementP12If_statementEEEEEDcSt16in_place_index_tILj0EEOT_>
 8002d58:	4603      	mov	r3, r0
    }
 8002d5a:	4618      	mov	r0, r3
 8002d5c:	370c      	adds	r7, #12
 8002d5e:	46bd      	mov	sp, r7
 8002d60:	bd90      	pop	{r4, r7, pc}

08002d62 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8002d62:	b590      	push	{r4, r7, lr}
 8002d64:	b083      	sub	sp, #12
 8002d66:	af00      	add	r7, sp, #0
 8002d68:	7138      	strb	r0, [r7, #4]
 8002d6a:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8002d6c:	6838      	ldr	r0, [r7, #0]
 8002d6e:	f000 fd0d 	bl	800378c <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP13Function_callP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8002d72:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8002d74:	4619      	mov	r1, r3
 8002d76:	4620      	mov	r0, r4
 8002d78:	f7ff ffe1 	bl	8002d3e <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8002d7c:	4603      	mov	r3, r0
    }
 8002d7e:	4618      	mov	r0, r3
 8002d80:	370c      	adds	r7, #12
 8002d82:	46bd      	mov	sp, r7
 8002d84:	bd90      	pop	{r4, r7, pc}

08002d86 <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8002d86:	b590      	push	{r4, r7, lr}
 8002d88:	b083      	sub	sp, #12
 8002d8a:	af00      	add	r7, sp, #0
 8002d8c:	7138      	strb	r0, [r7, #4]
 8002d8e:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8002d90:	6838      	ldr	r0, [r7, #0]
 8002d92:	f000 fce5 	bl	8003760 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8002d96:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8002d98:	4619      	mov	r1, r3
 8002d9a:	4620      	mov	r0, r4
 8002d9c:	f7ff ffe1 	bl	8002d62 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8002da0:	4603      	mov	r3, r0
    }
 8002da2:	4618      	mov	r0, r3
 8002da4:	370c      	adds	r7, #12
 8002da6:	46bd      	mov	sp, r7
 8002da8:	bd90      	pop	{r4, r7, pc}

08002daa <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8002daa:	b590      	push	{r4, r7, lr}
 8002dac:	b083      	sub	sp, #12
 8002dae:	af00      	add	r7, sp, #0
 8002db0:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8002db2:	6878      	ldr	r0, [r7, #4]
 8002db4:	f000 fcc9 	bl	800374a <_ZSt7forwardIRSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEOT_RNSt16remove_referenceISD_E4typeE>
 8002db8:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8002dba:	4619      	mov	r1, r3
 8002dbc:	4620      	mov	r0, r4
 8002dbe:	f7ff ffe2 	bl	8002d86 <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8002dc2:	4603      	mov	r3, r0
    }
 8002dc4:	4618      	mov	r0, r3
 8002dc6:	370c      	adds	r7, #12
 8002dc8:	46bd      	mov	sp, r7
 8002dca:	bd90      	pop	{r4, r7, pc}

08002dcc <_ZSt3getILj3EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
    get(variant<_Types...>& __v)
 8002dcc:	b580      	push	{r7, lr}
 8002dce:	b082      	sub	sp, #8
 8002dd0:	af00      	add	r7, sp, #0
 8002dd2:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 8002dd4:	6878      	ldr	r0, [r7, #4]
 8002dd6:	f7ff fe9e 	bl	8002b16 <_ZNKSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE5indexEv>
 8002dda:	4603      	mov	r3, r0
 8002ddc:	2b03      	cmp	r3, #3
 8002dde:	bf14      	ite	ne
 8002de0:	2301      	movne	r3, #1
 8002de2:	2300      	moveq	r3, #0
 8002de4:	b2db      	uxtb	r3, r3
 8002de6:	2b00      	cmp	r3, #0
 8002de8:	d002      	beq.n	8002df0 <_ZSt3getILj3EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 8002dea:	4805      	ldr	r0, [pc, #20]	; (8002e00 <_ZSt3getILj3EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 8002dec:	f7fe f941 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 8002df0:	6878      	ldr	r0, [r7, #4]
 8002df2:	f7ff ffda 	bl	8002daa <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>
 8002df6:	4603      	mov	r3, r0
    }
 8002df8:	4618      	mov	r0, r3
 8002dfa:	3708      	adds	r7, #8
 8002dfc:	46bd      	mov	sp, r7
 8002dfe:	bd80      	pop	{r7, pc}
 8002e00:	08027548 	.word	0x08027548

08002e04 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP12If_statementEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8002e04:	b580      	push	{r7, lr}
 8002e06:	b082      	sub	sp, #8
 8002e08:	af00      	add	r7, sp, #0
 8002e0a:	7138      	strb	r0, [r7, #4]
 8002e0c:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8002e0e:	6838      	ldr	r0, [r7, #0]
 8002e10:	f000 fcfe 	bl	8003810 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP12If_statementEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 8002e14:	4603      	mov	r3, r0
 8002e16:	4618      	mov	r0, r3
 8002e18:	f000 fd05 	bl	8003826 <_ZNRSt8__detail9__variant14_UninitializedIP12If_statementLb1EE6_M_getEv>
 8002e1c:	4603      	mov	r3, r0
 8002e1e:	4618      	mov	r0, r3
 8002e20:	3708      	adds	r7, #8
 8002e22:	46bd      	mov	sp, r7
 8002e24:	bd80      	pop	{r7, pc}

08002e26 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8002e26:	b590      	push	{r4, r7, lr}
 8002e28:	b083      	sub	sp, #12
 8002e2a:	af00      	add	r7, sp, #0
 8002e2c:	7138      	strb	r0, [r7, #4]
 8002e2e:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8002e30:	6838      	ldr	r0, [r7, #0]
 8002e32:	f000 fcd7 	bl	80037e4 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8002e36:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8002e38:	4619      	mov	r1, r3
 8002e3a:	4620      	mov	r0, r4
 8002e3c:	f7ff ffe2 	bl	8002e04 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP12If_statementEEEEEDcSt16in_place_index_tILj0EEOT_>
 8002e40:	4603      	mov	r3, r0
    }
 8002e42:	4618      	mov	r0, r3
 8002e44:	370c      	adds	r7, #12
 8002e46:	46bd      	mov	sp, r7
 8002e48:	bd90      	pop	{r4, r7, pc}

08002e4a <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8002e4a:	b590      	push	{r4, r7, lr}
 8002e4c:	b083      	sub	sp, #12
 8002e4e:	af00      	add	r7, sp, #0
 8002e50:	7138      	strb	r0, [r7, #4]
 8002e52:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8002e54:	6838      	ldr	r0, [r7, #0]
 8002e56:	f000 fcaf 	bl	80037b8 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISB_E4typeE>
 8002e5a:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8002e5c:	4619      	mov	r1, r3
 8002e5e:	4620      	mov	r0, r4
 8002e60:	f7ff ffe1 	bl	8002e26 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8002e64:	4603      	mov	r3, r0
    }
 8002e66:	4618      	mov	r0, r3
 8002e68:	370c      	adds	r7, #12
 8002e6a:	46bd      	mov	sp, r7
 8002e6c:	bd90      	pop	{r4, r7, pc}

08002e6e <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8002e6e:	b590      	push	{r4, r7, lr}
 8002e70:	b083      	sub	sp, #12
 8002e72:	af00      	add	r7, sp, #0
 8002e74:	7138      	strb	r0, [r7, #4]
 8002e76:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8002e78:	6838      	ldr	r0, [r7, #0]
 8002e7a:	f000 fc87 	bl	800378c <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP13Function_callP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8002e7e:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8002e80:	4619      	mov	r1, r3
 8002e82:	4620      	mov	r0, r4
 8002e84:	f7ff ffe1 	bl	8002e4a <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8002e88:	4603      	mov	r3, r0
    }
 8002e8a:	4618      	mov	r0, r3
 8002e8c:	370c      	adds	r7, #12
 8002e8e:	46bd      	mov	sp, r7
 8002e90:	bd90      	pop	{r4, r7, pc}

08002e92 <_ZNSt8__detail9__variant5__getILj4ERNS0_15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8002e92:	b590      	push	{r4, r7, lr}
 8002e94:	b083      	sub	sp, #12
 8002e96:	af00      	add	r7, sp, #0
 8002e98:	7138      	strb	r0, [r7, #4]
 8002e9a:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8002e9c:	6838      	ldr	r0, [r7, #0]
 8002e9e:	f000 fc5f 	bl	8003760 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8002ea2:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8002ea4:	4619      	mov	r1, r3
 8002ea6:	4620      	mov	r0, r4
 8002ea8:	f7ff ffe1 	bl	8002e6e <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8002eac:	4603      	mov	r3, r0
    }
 8002eae:	4618      	mov	r0, r3
 8002eb0:	370c      	adds	r7, #12
 8002eb2:	46bd      	mov	sp, r7
 8002eb4:	bd90      	pop	{r4, r7, pc}

08002eb6 <_ZNSt8__detail9__variant5__getILj4ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8002eb6:	b590      	push	{r4, r7, lr}
 8002eb8:	b083      	sub	sp, #12
 8002eba:	af00      	add	r7, sp, #0
 8002ebc:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8002ebe:	6878      	ldr	r0, [r7, #4]
 8002ec0:	f000 fc43 	bl	800374a <_ZSt7forwardIRSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEOT_RNSt16remove_referenceISD_E4typeE>
 8002ec4:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8002ec6:	4619      	mov	r1, r3
 8002ec8:	4620      	mov	r0, r4
 8002eca:	f7ff ffe2 	bl	8002e92 <_ZNSt8__detail9__variant5__getILj4ERNS0_15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8002ece:	4603      	mov	r3, r0
    }
 8002ed0:	4618      	mov	r0, r3
 8002ed2:	370c      	adds	r7, #12
 8002ed4:	46bd      	mov	sp, r7
 8002ed6:	bd90      	pop	{r4, r7, pc}

08002ed8 <_ZSt3getILj4EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
    get(variant<_Types...>& __v)
 8002ed8:	b580      	push	{r7, lr}
 8002eda:	b082      	sub	sp, #8
 8002edc:	af00      	add	r7, sp, #0
 8002ede:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 8002ee0:	6878      	ldr	r0, [r7, #4]
 8002ee2:	f7ff fe18 	bl	8002b16 <_ZNKSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE5indexEv>
 8002ee6:	4603      	mov	r3, r0
 8002ee8:	2b04      	cmp	r3, #4
 8002eea:	bf14      	ite	ne
 8002eec:	2301      	movne	r3, #1
 8002eee:	2300      	moveq	r3, #0
 8002ef0:	b2db      	uxtb	r3, r3
 8002ef2:	2b00      	cmp	r3, #0
 8002ef4:	d002      	beq.n	8002efc <_ZSt3getILj4EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 8002ef6:	4805      	ldr	r0, [pc, #20]	; (8002f0c <_ZSt3getILj4EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 8002ef8:	f7fe f8bb 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 8002efc:	6878      	ldr	r0, [r7, #4]
 8002efe:	f7ff ffda 	bl	8002eb6 <_ZNSt8__detail9__variant5__getILj4ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>
 8002f02:	4603      	mov	r3, r0
    }
 8002f04:	4618      	mov	r0, r3
 8002f06:	3708      	adds	r7, #8
 8002f08:	46bd      	mov	sp, r7
 8002f0a:	bd80      	pop	{r7, pc}
 8002f0c:	08027548 	.word	0x08027548

08002f10 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE8_M_resetEv>:
      void _M_reset()
 8002f10:	b580      	push	{r7, lr}
 8002f12:	b082      	sub	sp, #8
 8002f14:	af00      	add	r7, sp, #0
 8002f16:	6078      	str	r0, [r7, #4]
	_M_reset_impl();
 8002f18:	6878      	ldr	r0, [r7, #4]
 8002f1a:	f000 ff75 	bl	8003e08 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE13_M_reset_implEv>
	_M_index = variant_npos;
 8002f1e:	687b      	ldr	r3, [r7, #4]
 8002f20:	22ff      	movs	r2, #255	; 0xff
 8002f22:	761a      	strb	r2, [r3, #24]
      }
 8002f24:	bf00      	nop
 8002f26:	3708      	adds	r7, #8
 8002f28:	46bd      	mov	sp, r7
 8002f2a:	bd80      	pop	{r7, pc}

08002f2c <_ZNSt6vectorIP4BodySaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 8002f2c:	b580      	push	{r7, lr}
 8002f2e:	b084      	sub	sp, #16
 8002f30:	af00      	add	r7, sp, #0
 8002f32:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_finish); }
 8002f34:	687b      	ldr	r3, [r7, #4]
 8002f36:	1d1a      	adds	r2, r3, #4
 8002f38:	f107 030c 	add.w	r3, r7, #12
 8002f3c:	4611      	mov	r1, r2
 8002f3e:	4618      	mov	r0, r3
 8002f40:	f000 ff74 	bl	8003e2c <_ZN9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEEC1ERKS3_>
 8002f44:	68fb      	ldr	r3, [r7, #12]
 8002f46:	4618      	mov	r0, r3
 8002f48:	3710      	adds	r7, #16
 8002f4a:	46bd      	mov	sp, r7
 8002f4c:	bd80      	pop	{r7, pc}

08002f4e <_ZNK9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEEmiEi>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
 8002f4e:	b580      	push	{r7, lr}
 8002f50:	b084      	sub	sp, #16
 8002f52:	af00      	add	r7, sp, #0
 8002f54:	6078      	str	r0, [r7, #4]
 8002f56:	6039      	str	r1, [r7, #0]
      { return __normal_iterator(_M_current - __n); }
 8002f58:	687b      	ldr	r3, [r7, #4]
 8002f5a:	681a      	ldr	r2, [r3, #0]
 8002f5c:	683b      	ldr	r3, [r7, #0]
 8002f5e:	009b      	lsls	r3, r3, #2
 8002f60:	425b      	negs	r3, r3
 8002f62:	4413      	add	r3, r2
 8002f64:	60fb      	str	r3, [r7, #12]
 8002f66:	f107 020c 	add.w	r2, r7, #12
 8002f6a:	f107 0308 	add.w	r3, r7, #8
 8002f6e:	4611      	mov	r1, r2
 8002f70:	4618      	mov	r0, r3
 8002f72:	f000 ff5b 	bl	8003e2c <_ZN9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEEC1ERKS3_>
 8002f76:	68bb      	ldr	r3, [r7, #8]
 8002f78:	4618      	mov	r0, r3
 8002f7a:	3710      	adds	r7, #16
 8002f7c:	46bd      	mov	sp, r7
 8002f7e:	bd80      	pop	{r7, pc}

08002f80 <_ZNK9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
 8002f80:	b480      	push	{r7}
 8002f82:	b083      	sub	sp, #12
 8002f84:	af00      	add	r7, sp, #0
 8002f86:	6078      	str	r0, [r7, #4]
      { return *_M_current; }
 8002f88:	687b      	ldr	r3, [r7, #4]
 8002f8a:	681b      	ldr	r3, [r3, #0]
 8002f8c:	4618      	mov	r0, r3
 8002f8e:	370c      	adds	r7, #12
 8002f90:	46bd      	mov	sp, r7
 8002f92:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f96:	4770      	bx	lr

08002f98 <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8002f98:	b480      	push	{r7}
 8002f9a:	b083      	sub	sp, #12
 8002f9c:	af00      	add	r7, sp, #0
 8002f9e:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8002fa0:	687b      	ldr	r3, [r7, #4]
 8002fa2:	4618      	mov	r0, r3
 8002fa4:	370c      	adds	r7, #12
 8002fa6:	46bd      	mov	sp, r7
 8002fa8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002fac:	4770      	bx	lr

08002fae <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8002fae:	b480      	push	{r7}
 8002fb0:	b083      	sub	sp, #12
 8002fb2:	af00      	add	r7, sp, #0
 8002fb4:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8002fb6:	687b      	ldr	r3, [r7, #4]
 8002fb8:	4618      	mov	r0, r3
 8002fba:	370c      	adds	r7, #12
 8002fbc:	46bd      	mov	sp, r7
 8002fbe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002fc2:	4770      	bx	lr

08002fc4 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8002fc4:	b480      	push	{r7}
 8002fc6:	b083      	sub	sp, #12
 8002fc8:	af00      	add	r7, sp, #0
 8002fca:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8002fcc:	687b      	ldr	r3, [r7, #4]
 8002fce:	4618      	mov	r0, r3
 8002fd0:	370c      	adds	r7, #12
 8002fd2:	46bd      	mov	sp, r7
 8002fd4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002fd8:	4770      	bx	lr

08002fda <_ZNKRSt8__detail9__variant14_UninitializedIiLb1EE6_M_getEv>:
      constexpr const _Type& _M_get() const & noexcept
 8002fda:	b480      	push	{r7}
 8002fdc:	b083      	sub	sp, #12
 8002fde:	af00      	add	r7, sp, #0
 8002fe0:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 8002fe2:	687b      	ldr	r3, [r7, #4]
 8002fe4:	4618      	mov	r0, r3
 8002fe6:	370c      	adds	r7, #12
 8002fe8:	46bd      	mov	sp, r7
 8002fea:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002fee:	4770      	bx	lr

08002ff0 <_ZSt8__invokeIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_JRKiSt17integral_constantIjLj0EEEENSt15__invoke_resultISG_JDpT0_EE4typeESH_DpOSP_>:
    { return (*std::forward<_Tp>(__t)).*__f; }

  /// Invoke a callable object.
  template<typename _Callable, typename... _Args>
    constexpr typename __invoke_result<_Callable, _Args...>::type
    __invoke(_Callable&& __fn, _Args&&... __args)
 8002ff0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002ff4:	b084      	sub	sp, #16
 8002ff6:	af00      	add	r7, sp, #0
 8002ff8:	60f8      	str	r0, [r7, #12]
 8002ffa:	60b9      	str	r1, [r7, #8]
 8002ffc:	607a      	str	r2, [r7, #4]
    noexcept(__is_nothrow_invocable<_Callable, _Args...>::value)
    {
      using __result = __invoke_result<_Callable, _Args...>;
      using __type = typename __result::type;
      using __tag = typename __result::__invoke_type;
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8002ffe:	68f8      	ldr	r0, [r7, #12]
 8003000:	f000 f8f3 	bl	80031ea <_ZSt7forwardIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8003004:	4604      	mov	r4, r0
 8003006:	68b8      	ldr	r0, [r7, #8]
 8003008:	f000 ff20 	bl	8003e4c <_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE>
 800300c:	4605      	mov	r5, r0
 800300e:	6878      	ldr	r0, [r7, #4]
 8003010:	f000 ff27 	bl	8003e62 <_ZSt7forwardISt17integral_constantIjLj0EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8003014:	4603      	mov	r3, r0
 8003016:	462a      	mov	r2, r5
 8003018:	4621      	mov	r1, r4
 800301a:	4630      	mov	r0, r6
 800301c:	f000 ff2c 	bl	8003e78 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSERKSE_EUlOT_T0_E_JRKiSt17integral_constantIjLj0EEEESH_St14__invoke_otherOSJ_DpOT1_>
					std::forward<_Args>(__args)...);
 8003020:	4643      	mov	r3, r8
    }
 8003022:	4618      	mov	r0, r3
 8003024:	3710      	adds	r7, #16
 8003026:	46bd      	mov	sp, r7
 8003028:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800302c <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800302c:	b480      	push	{r7}
 800302e:	b083      	sub	sp, #12
 8003030:	af00      	add	r7, sp, #0
 8003032:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8003034:	687b      	ldr	r3, [r7, #4]
 8003036:	4618      	mov	r0, r3
 8003038:	370c      	adds	r7, #12
 800303a:	46bd      	mov	sp, r7
 800303c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003040:	4770      	bx	lr

08003042 <_ZNKRSt8__detail9__variant14_UninitializedIfLb1EE6_M_getEv>:
      constexpr const _Type& _M_get() const & noexcept
 8003042:	b480      	push	{r7}
 8003044:	b083      	sub	sp, #12
 8003046:	af00      	add	r7, sp, #0
 8003048:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 800304a:	687b      	ldr	r3, [r7, #4]
 800304c:	4618      	mov	r0, r3
 800304e:	370c      	adds	r7, #12
 8003050:	46bd      	mov	sp, r7
 8003052:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003056:	4770      	bx	lr

08003058 <_ZSt8__invokeIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_JRKfSt17integral_constantIjLj1EEEENSt15__invoke_resultISG_JDpT0_EE4typeESH_DpOSP_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8003058:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800305c:	b084      	sub	sp, #16
 800305e:	af00      	add	r7, sp, #0
 8003060:	60f8      	str	r0, [r7, #12]
 8003062:	60b9      	str	r1, [r7, #8]
 8003064:	607a      	str	r2, [r7, #4]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8003066:	68f8      	ldr	r0, [r7, #12]
 8003068:	f000 f8bf 	bl	80031ea <_ZSt7forwardIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 800306c:	4604      	mov	r4, r0
 800306e:	68b8      	ldr	r0, [r7, #8]
 8003070:	f000 ff20 	bl	8003eb4 <_ZSt7forwardIRKfEOT_RNSt16remove_referenceIS2_E4typeE>
 8003074:	4605      	mov	r5, r0
 8003076:	6878      	ldr	r0, [r7, #4]
 8003078:	f000 ff27 	bl	8003eca <_ZSt7forwardISt17integral_constantIjLj1EEEOT_RNSt16remove_referenceIS2_E4typeE>
 800307c:	4603      	mov	r3, r0
 800307e:	462a      	mov	r2, r5
 8003080:	4621      	mov	r1, r4
 8003082:	4630      	mov	r0, r6
 8003084:	f000 ff2c 	bl	8003ee0 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSERKSE_EUlOT_T0_E_JRKfSt17integral_constantIjLj1EEEESH_St14__invoke_otherOSJ_DpOT1_>
					std::forward<_Args>(__args)...);
 8003088:	4643      	mov	r3, r8
    }
 800308a:	4618      	mov	r0, r3
 800308c:	3710      	adds	r7, #16
 800308e:	46bd      	mov	sp, r7
 8003090:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08003094 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8003094:	b480      	push	{r7}
 8003096:	b083      	sub	sp, #12
 8003098:	af00      	add	r7, sp, #0
 800309a:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800309c:	687b      	ldr	r3, [r7, #4]
 800309e:	4618      	mov	r0, r3
 80030a0:	370c      	adds	r7, #12
 80030a2:	46bd      	mov	sp, r7
 80030a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80030a8:	4770      	bx	lr

080030aa <_ZNKRSt8__detail9__variant14_UninitializedIbLb1EE6_M_getEv>:
      constexpr const _Type& _M_get() const & noexcept
 80030aa:	b480      	push	{r7}
 80030ac:	b083      	sub	sp, #12
 80030ae:	af00      	add	r7, sp, #0
 80030b0:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 80030b2:	687b      	ldr	r3, [r7, #4]
 80030b4:	4618      	mov	r0, r3
 80030b6:	370c      	adds	r7, #12
 80030b8:	46bd      	mov	sp, r7
 80030ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80030be:	4770      	bx	lr

080030c0 <_ZSt8__invokeIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_JRKbSt17integral_constantIjLj2EEEENSt15__invoke_resultISG_JDpT0_EE4typeESH_DpOSP_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 80030c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80030c4:	b084      	sub	sp, #16
 80030c6:	af00      	add	r7, sp, #0
 80030c8:	60f8      	str	r0, [r7, #12]
 80030ca:	60b9      	str	r1, [r7, #8]
 80030cc:	607a      	str	r2, [r7, #4]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 80030ce:	68f8      	ldr	r0, [r7, #12]
 80030d0:	f000 f88b 	bl	80031ea <_ZSt7forwardIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 80030d4:	4604      	mov	r4, r0
 80030d6:	68b8      	ldr	r0, [r7, #8]
 80030d8:	f000 ff20 	bl	8003f1c <_ZSt7forwardIRKbEOT_RNSt16remove_referenceIS2_E4typeE>
 80030dc:	4605      	mov	r5, r0
 80030de:	6878      	ldr	r0, [r7, #4]
 80030e0:	f000 ff27 	bl	8003f32 <_ZSt7forwardISt17integral_constantIjLj2EEEOT_RNSt16remove_referenceIS2_E4typeE>
 80030e4:	4603      	mov	r3, r0
 80030e6:	462a      	mov	r2, r5
 80030e8:	4621      	mov	r1, r4
 80030ea:	4630      	mov	r0, r6
 80030ec:	f000 ff2c 	bl	8003f48 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSERKSE_EUlOT_T0_E_JRKbSt17integral_constantIjLj2EEEESH_St14__invoke_otherOSJ_DpOT1_>
					std::forward<_Args>(__args)...);
 80030f0:	4643      	mov	r3, r8
    }
 80030f2:	4618      	mov	r0, r3
 80030f4:	3710      	adds	r7, #16
 80030f6:	46bd      	mov	sp, r7
 80030f8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080030fc <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80030fc:	b480      	push	{r7}
 80030fe:	b083      	sub	sp, #12
 8003100:	af00      	add	r7, sp, #0
 8003102:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8003104:	687b      	ldr	r3, [r7, #4]
 8003106:	4618      	mov	r0, r3
 8003108:	370c      	adds	r7, #12
 800310a:	46bd      	mov	sp, r7
 800310c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003110:	4770      	bx	lr

08003112 <_ZNKRSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE6_M_getEv>:
      const _Type& _M_get() const & noexcept
 8003112:	b580      	push	{r7, lr}
 8003114:	b082      	sub	sp, #8
 8003116:	af00      	add	r7, sp, #0
 8003118:	6078      	str	r0, [r7, #4]
      { return *_M_storage._M_ptr(); }
 800311a:	687b      	ldr	r3, [r7, #4]
 800311c:	4618      	mov	r0, r3
 800311e:	f000 ff31 	bl	8003f84 <_ZNK9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE6_M_ptrEv>
 8003122:	4603      	mov	r3, r0
 8003124:	4618      	mov	r0, r3
 8003126:	3708      	adds	r7, #8
 8003128:	46bd      	mov	sp, r7
 800312a:	bd80      	pop	{r7, pc}

0800312c <_ZSt8__invokeIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_JRKS8_St17integral_constantIjLj3EEEENSt15__invoke_resultISG_JDpT0_EE4typeESH_DpOSP_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 800312c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003130:	b084      	sub	sp, #16
 8003132:	af00      	add	r7, sp, #0
 8003134:	60f8      	str	r0, [r7, #12]
 8003136:	60b9      	str	r1, [r7, #8]
 8003138:	607a      	str	r2, [r7, #4]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 800313a:	68f8      	ldr	r0, [r7, #12]
 800313c:	f000 f855 	bl	80031ea <_ZSt7forwardIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8003140:	4604      	mov	r4, r0
 8003142:	68b8      	ldr	r0, [r7, #8]
 8003144:	f000 ff2a 	bl	8003f9c <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 8003148:	4605      	mov	r5, r0
 800314a:	6878      	ldr	r0, [r7, #4]
 800314c:	f000 ff31 	bl	8003fb2 <_ZSt7forwardISt17integral_constantIjLj3EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8003150:	4603      	mov	r3, r0
 8003152:	462a      	mov	r2, r5
 8003154:	4621      	mov	r1, r4
 8003156:	4630      	mov	r0, r6
 8003158:	f000 ff36 	bl	8003fc8 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSERKSE_EUlOT_T0_E_JRKS9_St17integral_constantIjLj3EEEESH_St14__invoke_otherOSJ_DpOT1_>
					std::forward<_Args>(__args)...);
 800315c:	4643      	mov	r3, r8
    }
 800315e:	4618      	mov	r0, r3
 8003160:	3710      	adds	r7, #16
 8003162:	46bd      	mov	sp, r7
 8003164:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08003168 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJSt6vectorI6SymbolSaIS4_EEEEEEOT_RNSt16remove_referenceISA_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8003168:	b480      	push	{r7}
 800316a:	b083      	sub	sp, #12
 800316c:	af00      	add	r7, sp, #0
 800316e:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8003170:	687b      	ldr	r3, [r7, #4]
 8003172:	4618      	mov	r0, r3
 8003174:	370c      	adds	r7, #12
 8003176:	46bd      	mov	sp, r7
 8003178:	f85d 7b04 	ldr.w	r7, [sp], #4
 800317c:	4770      	bx	lr

0800317e <_ZNKRSt8__detail9__variant14_UninitializedISt6vectorI6SymbolSaIS3_EELb0EE6_M_getEv>:
      const _Type& _M_get() const & noexcept
 800317e:	b580      	push	{r7, lr}
 8003180:	b082      	sub	sp, #8
 8003182:	af00      	add	r7, sp, #0
 8003184:	6078      	str	r0, [r7, #4]
      { return *_M_storage._M_ptr(); }
 8003186:	687b      	ldr	r3, [r7, #4]
 8003188:	4618      	mov	r0, r3
 800318a:	f000 ff3b 	bl	8004004 <_ZNK9__gnu_cxx16__aligned_membufISt6vectorI6SymbolSaIS2_EEE6_M_ptrEv>
 800318e:	4603      	mov	r3, r0
 8003190:	4618      	mov	r0, r3
 8003192:	3708      	adds	r7, #8
 8003194:	46bd      	mov	sp, r7
 8003196:	bd80      	pop	{r7, pc}

08003198 <_ZSt8__invokeIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_JRKSC_St17integral_constantIjLj4EEEENSt15__invoke_resultISG_JDpT0_EE4typeESH_DpOSP_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8003198:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800319c:	b084      	sub	sp, #16
 800319e:	af00      	add	r7, sp, #0
 80031a0:	60f8      	str	r0, [r7, #12]
 80031a2:	60b9      	str	r1, [r7, #8]
 80031a4:	607a      	str	r2, [r7, #4]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 80031a6:	68f8      	ldr	r0, [r7, #12]
 80031a8:	f000 f81f 	bl	80031ea <_ZSt7forwardIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 80031ac:	4604      	mov	r4, r0
 80031ae:	68b8      	ldr	r0, [r7, #8]
 80031b0:	f000 ff34 	bl	800401c <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>
 80031b4:	4605      	mov	r5, r0
 80031b6:	6878      	ldr	r0, [r7, #4]
 80031b8:	f000 ff3b 	bl	8004032 <_ZSt7forwardISt17integral_constantIjLj4EEEOT_RNSt16remove_referenceIS2_E4typeE>
 80031bc:	4603      	mov	r3, r0
 80031be:	462a      	mov	r2, r5
 80031c0:	4621      	mov	r1, r4
 80031c2:	4630      	mov	r0, r6
 80031c4:	f000 ff40 	bl	8004048 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSERKSE_EUlOT_T0_E_JRKSD_St17integral_constantIjLj4EEEESH_St14__invoke_otherOSJ_DpOT1_>
					std::forward<_Args>(__args)...);
 80031c8:	4643      	mov	r3, r8
    }
 80031ca:	4618      	mov	r0, r3
 80031cc:	3710      	adds	r7, #16
 80031ce:	46bd      	mov	sp, r7
 80031d0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080031d4 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSERKSE_EUlOT_T0_E_RKSt7variantIJifbS9_SD_EEEJEE9_M_accessEv>:
      _M_access() const
 80031d4:	b480      	push	{r7}
 80031d6:	b083      	sub	sp, #12
 80031d8:	af00      	add	r7, sp, #0
 80031da:	6078      	str	r0, [r7, #4]
      { return _M_data; }
 80031dc:	687b      	ldr	r3, [r7, #4]
 80031de:	4618      	mov	r0, r3
 80031e0:	370c      	adds	r7, #12
 80031e2:	46bd      	mov	sp, r7
 80031e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80031e8:	4770      	bx	lr

080031ea <_ZSt7forwardIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80031ea:	b480      	push	{r7}
 80031ec:	b083      	sub	sp, #12
 80031ee:	af00      	add	r7, sp, #0
 80031f0:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80031f2:	687b      	ldr	r3, [r7, #4]
 80031f4:	4618      	mov	r0, r3
 80031f6:	370c      	adds	r7, #12
 80031f8:	46bd      	mov	sp, r7
 80031fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80031fe:	4770      	bx	lr

08003200 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_construct_auxIPKcEEvT_S8_St12__false_type>:
        _M_construct_aux(_InIterator __beg, _InIterator __end,
 8003200:	b590      	push	{r4, r7, lr}
 8003202:	b087      	sub	sp, #28
 8003204:	af00      	add	r7, sp, #0
 8003206:	60f8      	str	r0, [r7, #12]
 8003208:	60b9      	str	r1, [r7, #8]
 800320a:	607a      	str	r2, [r7, #4]
 800320c:	703b      	strb	r3, [r7, #0]
          _M_construct(__beg, __end, _Tag());
 800320e:	4623      	mov	r3, r4
 8003210:	687a      	ldr	r2, [r7, #4]
 8003212:	68b9      	ldr	r1, [r7, #8]
 8003214:	68f8      	ldr	r0, [r7, #12]
 8003216:	f000 ff49 	bl	80040ac <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
	}
 800321a:	bf00      	nop
 800321c:	371c      	adds	r7, #28
 800321e:	46bd      	mov	sp, r7
 8003220:	bd90      	pop	{r4, r7, pc}

08003222 <_ZN9__gnu_cxx13new_allocatorISt4pairIKc10token_typeEEC1ERKS5_>:
      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
 8003222:	b480      	push	{r7}
 8003224:	b083      	sub	sp, #12
 8003226:	af00      	add	r7, sp, #0
 8003228:	6078      	str	r0, [r7, #4]
 800322a:	6039      	str	r1, [r7, #0]
 800322c:	687b      	ldr	r3, [r7, #4]
 800322e:	4618      	mov	r0, r3
 8003230:	370c      	adds	r7, #12
 8003232:	46bd      	mov	sp, r7
 8003234:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003238:	4770      	bx	lr

0800323a <_ZNSaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEC1IS3_EERKSaIT_E>:
	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }
 800323a:	b580      	push	{r7, lr}
 800323c:	b082      	sub	sp, #8
 800323e:	af00      	add	r7, sp, #0
 8003240:	6078      	str	r0, [r7, #4]
 8003242:	6039      	str	r1, [r7, #0]
 8003244:	6878      	ldr	r0, [r7, #4]
 8003246:	f000 ff79 	bl	800413c <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEC1Ev>
 800324a:	687b      	ldr	r3, [r7, #4]
 800324c:	4618      	mov	r0, r3
 800324e:	3708      	adds	r7, #8
 8003250:	46bd      	mov	sp, r7
 8003252:	bd80      	pop	{r7, pc}

08003254 <_ZNSaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
 8003254:	b580      	push	{r7, lr}
 8003256:	b082      	sub	sp, #8
 8003258:	af00      	add	r7, sp, #0
 800325a:	6078      	str	r0, [r7, #4]
 800325c:	6878      	ldr	r0, [r7, #4]
 800325e:	f000 ff78 	bl	8004152 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEED1Ev>
 8003262:	687b      	ldr	r3, [r7, #4]
 8003264:	4618      	mov	r0, r3
 8003266:	3708      	adds	r7, #8
 8003268:	46bd      	mov	sp, r7
 800326a:	bd80      	pop	{r7, pc}

0800326c <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE13_Rb_tree_implIS7_Lb1EEC1ERKS7_OSaISt13_Rb_tree_nodeIS3_EE>:
	  _Rb_tree_impl(const _Key_compare& __comp, _Node_allocator&& __a)
 800326c:	b580      	push	{r7, lr}
 800326e:	b084      	sub	sp, #16
 8003270:	af00      	add	r7, sp, #0
 8003272:	60f8      	str	r0, [r7, #12]
 8003274:	60b9      	str	r1, [r7, #8]
 8003276:	607a      	str	r2, [r7, #4]
	  : _Node_allocator(std::move(__a)), _Base_key_compare(__comp)
 8003278:	6878      	ldr	r0, [r7, #4]
 800327a:	f000 ff75 	bl	8004168 <_ZSt4moveIRSaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEEONSt16remove_referenceIT_E4typeEOS9_>
 800327e:	4603      	mov	r3, r0
 8003280:	4619      	mov	r1, r3
 8003282:	68f8      	ldr	r0, [r7, #12]
 8003284:	f000 ff7b 	bl	800417e <_ZNSaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEC1ERKS5_>
 8003288:	68fb      	ldr	r3, [r7, #12]
 800328a:	68b9      	ldr	r1, [r7, #8]
 800328c:	4618      	mov	r0, r3
 800328e:	f000 ff84 	bl	800419a <_ZNSt20_Rb_tree_key_compareISt4lessIcEEC1ERKS1_>
 8003292:	68fb      	ldr	r3, [r7, #12]
 8003294:	3304      	adds	r3, #4
 8003296:	4618      	mov	r0, r3
 8003298:	f7fd fef1 	bl	800107e <_ZNSt15_Rb_tree_headerC1Ev>
	  { }
 800329c:	68fb      	ldr	r3, [r7, #12]
 800329e:	4618      	mov	r0, r3
 80032a0:	3710      	adds	r7, #16
 80032a2:	46bd      	mov	sp, r7
 80032a4:	bd80      	pop	{r7, pc}

080032a6 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E>:
      }

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    void
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 80032a6:	b580      	push	{r7, lr}
 80032a8:	b084      	sub	sp, #16
 80032aa:	af00      	add	r7, sp, #0
 80032ac:	6078      	str	r0, [r7, #4]
 80032ae:	6039      	str	r1, [r7, #0]
    _M_erase(_Link_type __x)
    {
      // Erase without rebalancing.
      while (__x != 0)
 80032b0:	683b      	ldr	r3, [r7, #0]
 80032b2:	2b00      	cmp	r3, #0
 80032b4:	d012      	beq.n	80032dc <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E+0x36>
	{
	  _M_erase(_S_right(__x));
 80032b6:	6838      	ldr	r0, [r7, #0]
 80032b8:	f000 ff7b 	bl	80041b2 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base>
 80032bc:	4603      	mov	r3, r0
 80032be:	4619      	mov	r1, r3
 80032c0:	6878      	ldr	r0, [r7, #4]
 80032c2:	f7ff fff0 	bl	80032a6 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E>
	  _Link_type __y = _S_left(__x);
 80032c6:	6838      	ldr	r0, [r7, #0]
 80032c8:	f000 ff7f 	bl	80041ca <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE7_S_leftEPSt18_Rb_tree_node_base>
 80032cc:	60f8      	str	r0, [r7, #12]
	  _M_drop_node(__x);
 80032ce:	6839      	ldr	r1, [r7, #0]
 80032d0:	6878      	ldr	r0, [r7, #4]
 80032d2:	f000 ff86 	bl	80041e2 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS3_E>
	  __x = __y;
 80032d6:	68fb      	ldr	r3, [r7, #12]
 80032d8:	603b      	str	r3, [r7, #0]
      while (__x != 0)
 80032da:	e7e9      	b.n	80032b0 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E+0xa>
	}
    }
 80032dc:	bf00      	nop
 80032de:	3710      	adds	r7, #16
 80032e0:	46bd      	mov	sp, r7
 80032e2:	bd80      	pop	{r7, pc}

080032e4 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_beginEv>:
      _M_begin() _GLIBCXX_NOEXCEPT
 80032e4:	b480      	push	{r7}
 80032e6:	b083      	sub	sp, #12
 80032e8:	af00      	add	r7, sp, #0
 80032ea:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
 80032ec:	687b      	ldr	r3, [r7, #4]
 80032ee:	689b      	ldr	r3, [r3, #8]
 80032f0:	4618      	mov	r0, r3
 80032f2:	370c      	adds	r7, #12
 80032f4:	46bd      	mov	sp, r7
 80032f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80032fa:	4770      	bx	lr

080032fc <_ZNKSt16initializer_listISt4pairIKc10token_typeEE4sizeEv>:
      size() const noexcept { return _M_len; }
 80032fc:	b480      	push	{r7}
 80032fe:	b083      	sub	sp, #12
 8003300:	af00      	add	r7, sp, #0
 8003302:	6078      	str	r0, [r7, #4]
 8003304:	687b      	ldr	r3, [r7, #4]
 8003306:	685b      	ldr	r3, [r3, #4]
 8003308:	4618      	mov	r0, r3
 800330a:	370c      	adds	r7, #12
 800330c:	46bd      	mov	sp, r7
 800330e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003312:	4770      	bx	lr

08003314 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_Alloc_nodeC1ERS9_>:
	_Alloc_node(_Rb_tree& __t)
 8003314:	b480      	push	{r7}
 8003316:	b083      	sub	sp, #12
 8003318:	af00      	add	r7, sp, #0
 800331a:	6078      	str	r0, [r7, #4]
 800331c:	6039      	str	r1, [r7, #0]
	: _M_t(__t) { }
 800331e:	687b      	ldr	r3, [r7, #4]
 8003320:	683a      	ldr	r2, [r7, #0]
 8003322:	601a      	str	r2, [r3, #0]
 8003324:	687b      	ldr	r3, [r7, #4]
 8003326:	4618      	mov	r0, r3
 8003328:	370c      	adds	r7, #12
 800332a:	46bd      	mov	sp, r7
 800332c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003330:	4770      	bx	lr

08003332 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 8003332:	b580      	push	{r7, lr}
 8003334:	b084      	sub	sp, #16
 8003336:	af00      	add	r7, sp, #0
 8003338:	6078      	str	r0, [r7, #4]
      { return iterator(&this->_M_impl._M_header); }
 800333a:	687b      	ldr	r3, [r7, #4]
 800333c:	1d1a      	adds	r2, r3, #4
 800333e:	f107 030c 	add.w	r3, r7, #12
 8003342:	4611      	mov	r1, r2
 8003344:	4618      	mov	r0, r3
 8003346:	f000 ff5d 	bl	8004204 <_ZNSt17_Rb_tree_iteratorISt4pairIKc10token_typeEEC1EPSt18_Rb_tree_node_base>
 800334a:	68fb      	ldr	r3, [r7, #12]
 800334c:	4618      	mov	r0, r3
 800334e:	3710      	adds	r7, #16
 8003350:	46bd      	mov	sp, r7
 8003352:	bd80      	pop	{r7, pc}

08003354 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKc10token_typeEEC1ERKSt17_Rb_tree_iteratorIS3_E>:
      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
 8003354:	b480      	push	{r7}
 8003356:	b083      	sub	sp, #12
 8003358:	af00      	add	r7, sp, #0
 800335a:	6078      	str	r0, [r7, #4]
 800335c:	6039      	str	r1, [r7, #0]
      : _M_node(__it._M_node) { }
 800335e:	683b      	ldr	r3, [r7, #0]
 8003360:	681a      	ldr	r2, [r3, #0]
 8003362:	687b      	ldr	r3, [r7, #4]
 8003364:	601a      	str	r2, [r3, #0]
 8003366:	687b      	ldr	r3, [r7, #4]
 8003368:	4618      	mov	r0, r3
 800336a:	370c      	adds	r7, #12
 800336c:	46bd      	mov	sp, r7
 800336e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003372:	4770      	bx	lr

08003374 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE17_M_insert_unique_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_ESt23_Rb_tree_const_iteratorIS3_EOT_RT0_>:
    template<typename _Arg, typename _NodeGen>
#else
    template<typename _NodeGen>
#endif
      typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8003374:	b5b0      	push	{r4, r5, r7, lr}
 8003376:	b08a      	sub	sp, #40	; 0x28
 8003378:	af02      	add	r7, sp, #8
 800337a:	60f8      	str	r0, [r7, #12]
 800337c:	60b9      	str	r1, [r7, #8]
 800337e:	607a      	str	r2, [r7, #4]
 8003380:	603b      	str	r3, [r7, #0]
			const _Val& __v,
#endif
			_NodeGen& __node_gen)
    {
      pair<_Base_ptr, _Base_ptr> __res
	= _M_get_insert_hint_unique_pos(__position, _KeyOfValue()(__v));
 8003382:	f107 0318 	add.w	r3, r7, #24
 8003386:	6879      	ldr	r1, [r7, #4]
 8003388:	4618      	mov	r0, r3
 800338a:	f001 f86d 	bl	8004468 <_ZNKSt10_Select1stISt4pairIKc10token_typeEEclERKS3_>
 800338e:	4603      	mov	r3, r0
      pair<_Base_ptr, _Base_ptr> __res
 8003390:	f107 0010 	add.w	r0, r7, #16
 8003394:	68ba      	ldr	r2, [r7, #8]
 8003396:	68f9      	ldr	r1, [r7, #12]
 8003398:	f000 ff43 	bl	8004222 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_>

      if (__res.second)
 800339c:	697b      	ldr	r3, [r7, #20]
 800339e:	2b00      	cmp	r3, #0
 80033a0:	d00f      	beq.n	80033c2 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE17_M_insert_unique_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_ESt23_Rb_tree_const_iteratorIS3_EOT_RT0_+0x4e>
	return _M_insert_(__res.first, __res.second,
			  _GLIBCXX_FORWARD(_Arg, __v),
			  __node_gen);
 80033a2:	693c      	ldr	r4, [r7, #16]
 80033a4:	697d      	ldr	r5, [r7, #20]
 80033a6:	6878      	ldr	r0, [r7, #4]
 80033a8:	f001 f86a 	bl	8004480 <_ZSt7forwardIRKSt4pairIKc10token_typeEEOT_RNSt16remove_referenceIS6_E4typeE>
 80033ac:	4602      	mov	r2, r0
 80033ae:	683b      	ldr	r3, [r7, #0]
 80033b0:	9300      	str	r3, [sp, #0]
 80033b2:	4613      	mov	r3, r2
 80033b4:	462a      	mov	r2, r5
 80033b6:	4621      	mov	r1, r4
 80033b8:	68f8      	ldr	r0, [r7, #12]
 80033ba:	f001 f86c 	bl	8004496 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_>
 80033be:	4603      	mov	r3, r0
 80033c0:	e007      	b.n	80033d2 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE17_M_insert_unique_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_ESt23_Rb_tree_const_iteratorIS3_EOT_RT0_+0x5e>
      return iterator(__res.first);
 80033c2:	693a      	ldr	r2, [r7, #16]
 80033c4:	f107 031c 	add.w	r3, r7, #28
 80033c8:	4611      	mov	r1, r2
 80033ca:	4618      	mov	r0, r3
 80033cc:	f000 ff1a 	bl	8004204 <_ZNSt17_Rb_tree_iteratorISt4pairIKc10token_typeEEC1EPSt18_Rb_tree_node_base>
 80033d0:	69fb      	ldr	r3, [r7, #28]
    }
 80033d2:	4618      	mov	r0, r3
 80033d4:	3720      	adds	r7, #32
 80033d6:	46bd      	mov	sp, r7
 80033d8:	bdb0      	pop	{r4, r5, r7, pc}

080033da <_ZN9__gnu_cxx13new_allocatorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1ERKSB_>:
 80033da:	b480      	push	{r7}
 80033dc:	b083      	sub	sp, #12
 80033de:	af00      	add	r7, sp, #0
 80033e0:	6078      	str	r0, [r7, #4]
 80033e2:	6039      	str	r1, [r7, #0]
 80033e4:	687b      	ldr	r3, [r7, #4]
 80033e6:	4618      	mov	r0, r3
 80033e8:	370c      	adds	r7, #12
 80033ea:	46bd      	mov	sp, r7
 80033ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80033f0:	4770      	bx	lr

080033f2 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEC1IS9_EERKSaIT_E>:
	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }
 80033f2:	b580      	push	{r7, lr}
 80033f4:	b082      	sub	sp, #8
 80033f6:	af00      	add	r7, sp, #0
 80033f8:	6078      	str	r0, [r7, #4]
 80033fa:	6039      	str	r1, [r7, #0]
 80033fc:	6878      	ldr	r0, [r7, #4]
 80033fe:	f001 f893 	bl	8004528 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEC1Ev>
 8003402:	687b      	ldr	r3, [r7, #4]
 8003404:	4618      	mov	r0, r3
 8003406:	3708      	adds	r7, #8
 8003408:	46bd      	mov	sp, r7
 800340a:	bd80      	pop	{r7, pc}

0800340c <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
 800340c:	b580      	push	{r7, lr}
 800340e:	b082      	sub	sp, #8
 8003410:	af00      	add	r7, sp, #0
 8003412:	6078      	str	r0, [r7, #4]
 8003414:	6878      	ldr	r0, [r7, #4]
 8003416:	f001 f892 	bl	800453e <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEED1Ev>
 800341a:	687b      	ldr	r3, [r7, #4]
 800341c:	4618      	mov	r0, r3
 800341e:	3708      	adds	r7, #8
 8003420:	46bd      	mov	sp, r7
 8003422:	bd80      	pop	{r7, pc}

08003424 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE13_Rb_tree_implISD_Lb1EEC1ERKSD_OSaISt13_Rb_tree_nodeIS9_EE>:
	  _Rb_tree_impl(const _Key_compare& __comp, _Node_allocator&& __a)
 8003424:	b580      	push	{r7, lr}
 8003426:	b084      	sub	sp, #16
 8003428:	af00      	add	r7, sp, #0
 800342a:	60f8      	str	r0, [r7, #12]
 800342c:	60b9      	str	r1, [r7, #8]
 800342e:	607a      	str	r2, [r7, #4]
	  : _Node_allocator(std::move(__a)), _Base_key_compare(__comp)
 8003430:	6878      	ldr	r0, [r7, #4]
 8003432:	f001 f88f 	bl	8004554 <_ZSt4moveIRSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEEONSt16remove_referenceIT_E4typeEOSF_>
 8003436:	4603      	mov	r3, r0
 8003438:	4619      	mov	r1, r3
 800343a:	68f8      	ldr	r0, [r7, #12]
 800343c:	f001 f895 	bl	800456a <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEC1ERKSB_>
 8003440:	68fb      	ldr	r3, [r7, #12]
 8003442:	68b9      	ldr	r1, [r7, #8]
 8003444:	4618      	mov	r0, r3
 8003446:	f001 f89e 	bl	8004586 <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1ERKS7_>
 800344a:	68fb      	ldr	r3, [r7, #12]
 800344c:	3304      	adds	r3, #4
 800344e:	4618      	mov	r0, r3
 8003450:	f7fd fe15 	bl	800107e <_ZNSt15_Rb_tree_headerC1Ev>
	  { }
 8003454:	68fb      	ldr	r3, [r7, #12]
 8003456:	4618      	mov	r0, r3
 8003458:	3710      	adds	r7, #16
 800345a:	46bd      	mov	sp, r7
 800345c:	bd80      	pop	{r7, pc}

0800345e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_eraseEPSt13_Rb_tree_nodeIS9_E>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 800345e:	b580      	push	{r7, lr}
 8003460:	b084      	sub	sp, #16
 8003462:	af00      	add	r7, sp, #0
 8003464:	6078      	str	r0, [r7, #4]
 8003466:	6039      	str	r1, [r7, #0]
      while (__x != 0)
 8003468:	683b      	ldr	r3, [r7, #0]
 800346a:	2b00      	cmp	r3, #0
 800346c:	d012      	beq.n	8003494 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_eraseEPSt13_Rb_tree_nodeIS9_E+0x36>
	  _M_erase(_S_right(__x));
 800346e:	6838      	ldr	r0, [r7, #0]
 8003470:	f001 f895 	bl	800459e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_S_rightEPSt18_Rb_tree_node_base>
 8003474:	4603      	mov	r3, r0
 8003476:	4619      	mov	r1, r3
 8003478:	6878      	ldr	r0, [r7, #4]
 800347a:	f7ff fff0 	bl	800345e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_eraseEPSt13_Rb_tree_nodeIS9_E>
	  _Link_type __y = _S_left(__x);
 800347e:	6838      	ldr	r0, [r7, #0]
 8003480:	f001 f899 	bl	80045b6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE7_S_leftEPSt18_Rb_tree_node_base>
 8003484:	60f8      	str	r0, [r7, #12]
	  _M_drop_node(__x);
 8003486:	6839      	ldr	r1, [r7, #0]
 8003488:	6878      	ldr	r0, [r7, #4]
 800348a:	f001 f8a0 	bl	80045ce <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS9_E>
	  __x = __y;
 800348e:	68fb      	ldr	r3, [r7, #12]
 8003490:	603b      	str	r3, [r7, #0]
      while (__x != 0)
 8003492:	e7e9      	b.n	8003468 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_eraseEPSt13_Rb_tree_nodeIS9_E+0xa>
    }
 8003494:	bf00      	nop
 8003496:	3710      	adds	r7, #16
 8003498:	46bd      	mov	sp, r7
 800349a:	bd80      	pop	{r7, pc}

0800349c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_beginEv>:
      _M_begin() _GLIBCXX_NOEXCEPT
 800349c:	b480      	push	{r7}
 800349e:	b083      	sub	sp, #12
 80034a0:	af00      	add	r7, sp, #0
 80034a2:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
 80034a4:	687b      	ldr	r3, [r7, #4]
 80034a6:	689b      	ldr	r3, [r3, #8]
 80034a8:	4618      	mov	r0, r3
 80034aa:	370c      	adds	r7, #12
 80034ac:	46bd      	mov	sp, r7
 80034ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80034b2:	4770      	bx	lr

080034b4 <_ZNKSt16initializer_listISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE4sizeEv>:
 80034b4:	b480      	push	{r7}
 80034b6:	b083      	sub	sp, #12
 80034b8:	af00      	add	r7, sp, #0
 80034ba:	6078      	str	r0, [r7, #4]
 80034bc:	687b      	ldr	r3, [r7, #4]
 80034be:	685b      	ldr	r3, [r3, #4]
 80034c0:	4618      	mov	r0, r3
 80034c2:	370c      	adds	r7, #12
 80034c4:	46bd      	mov	sp, r7
 80034c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80034ca:	4770      	bx	lr

080034cc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_Alloc_nodeC1ERSF_>:
	_Alloc_node(_Rb_tree& __t)
 80034cc:	b480      	push	{r7}
 80034ce:	b083      	sub	sp, #12
 80034d0:	af00      	add	r7, sp, #0
 80034d2:	6078      	str	r0, [r7, #4]
 80034d4:	6039      	str	r1, [r7, #0]
	: _M_t(__t) { }
 80034d6:	687b      	ldr	r3, [r7, #4]
 80034d8:	683a      	ldr	r2, [r7, #0]
 80034da:	601a      	str	r2, [r3, #0]
 80034dc:	687b      	ldr	r3, [r7, #4]
 80034de:	4618      	mov	r0, r3
 80034e0:	370c      	adds	r7, #12
 80034e2:	46bd      	mov	sp, r7
 80034e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80034e8:	4770      	bx	lr

080034ea <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 80034ea:	b580      	push	{r7, lr}
 80034ec:	b084      	sub	sp, #16
 80034ee:	af00      	add	r7, sp, #0
 80034f0:	6078      	str	r0, [r7, #4]
      { return iterator(&this->_M_impl._M_header); }
 80034f2:	687b      	ldr	r3, [r7, #4]
 80034f4:	1d1a      	adds	r2, r3, #4
 80034f6:	f107 030c 	add.w	r3, r7, #12
 80034fa:	4611      	mov	r1, r2
 80034fc:	4618      	mov	r0, r3
 80034fe:	f001 f877 	bl	80045f0 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1EPSt18_Rb_tree_node_base>
 8003502:	68fb      	ldr	r3, [r7, #12]
 8003504:	4618      	mov	r0, r3
 8003506:	3710      	adds	r7, #16
 8003508:	46bd      	mov	sp, r7
 800350a:	bd80      	pop	{r7, pc}

0800350c <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1ERKSt17_Rb_tree_iteratorIS9_E>:
      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
 800350c:	b480      	push	{r7}
 800350e:	b083      	sub	sp, #12
 8003510:	af00      	add	r7, sp, #0
 8003512:	6078      	str	r0, [r7, #4]
 8003514:	6039      	str	r1, [r7, #0]
      : _M_node(__it._M_node) { }
 8003516:	683b      	ldr	r3, [r7, #0]
 8003518:	681a      	ldr	r2, [r3, #0]
 800351a:	687b      	ldr	r3, [r7, #4]
 800351c:	601a      	str	r2, [r3, #0]
 800351e:	687b      	ldr	r3, [r7, #4]
 8003520:	4618      	mov	r0, r3
 8003522:	370c      	adds	r7, #12
 8003524:	46bd      	mov	sp, r7
 8003526:	f85d 7b04 	ldr.w	r7, [sp], #4
 800352a:	4770      	bx	lr

0800352c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE17_M_insert_unique_IRKS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_ESt23_Rb_tree_const_iteratorIS9_EOT_RT0_>:
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 800352c:	b5b0      	push	{r4, r5, r7, lr}
 800352e:	b08a      	sub	sp, #40	; 0x28
 8003530:	af02      	add	r7, sp, #8
 8003532:	60f8      	str	r0, [r7, #12]
 8003534:	60b9      	str	r1, [r7, #8]
 8003536:	607a      	str	r2, [r7, #4]
 8003538:	603b      	str	r3, [r7, #0]
	= _M_get_insert_hint_unique_pos(__position, _KeyOfValue()(__v));
 800353a:	f107 0318 	add.w	r3, r7, #24
 800353e:	6879      	ldr	r1, [r7, #4]
 8003540:	4618      	mov	r0, r3
 8003542:	f001 f987 	bl	8004854 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEclERKS9_>
 8003546:	4603      	mov	r3, r0
      pair<_Base_ptr, _Base_ptr> __res
 8003548:	f107 0010 	add.w	r0, r7, #16
 800354c:	68ba      	ldr	r2, [r7, #8]
 800354e:	68f9      	ldr	r1, [r7, #12]
 8003550:	f001 f85d 	bl	800460e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_>
      if (__res.second)
 8003554:	697b      	ldr	r3, [r7, #20]
 8003556:	2b00      	cmp	r3, #0
 8003558:	d00f      	beq.n	800357a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE17_M_insert_unique_IRKS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_ESt23_Rb_tree_const_iteratorIS9_EOT_RT0_+0x4e>
			  __node_gen);
 800355a:	693c      	ldr	r4, [r7, #16]
 800355c:	697d      	ldr	r5, [r7, #20]
 800355e:	6878      	ldr	r0, [r7, #4]
 8003560:	f001 f984 	bl	800486c <_ZSt7forwardIRKSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEOT_RNSt16remove_referenceISC_E4typeE>
 8003564:	4602      	mov	r2, r0
 8003566:	683b      	ldr	r3, [r7, #0]
 8003568:	9300      	str	r3, [sp, #0]
 800356a:	4613      	mov	r3, r2
 800356c:	462a      	mov	r2, r5
 800356e:	4621      	mov	r1, r4
 8003570:	68f8      	ldr	r0, [r7, #12]
 8003572:	f001 f986 	bl	8004882 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE10_M_insert_IRKS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_EPSt18_Rb_tree_node_baseSN_OT_RT0_>
 8003576:	4603      	mov	r3, r0
 8003578:	e007      	b.n	800358a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE17_M_insert_unique_IRKS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_ESt23_Rb_tree_const_iteratorIS9_EOT_RT0_+0x5e>
      return iterator(__res.first);
 800357a:	693a      	ldr	r2, [r7, #16]
 800357c:	f107 031c 	add.w	r3, r7, #28
 8003580:	4611      	mov	r1, r2
 8003582:	4618      	mov	r0, r3
 8003584:	f001 f834 	bl	80045f0 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1EPSt18_Rb_tree_node_base>
 8003588:	69fb      	ldr	r3, [r7, #28]
    }
 800358a:	4618      	mov	r0, r3
 800358c:	3720      	adds	r7, #32
 800358e:	46bd      	mov	sp, r7
 8003590:	bdb0      	pop	{r4, r5, r7, pc}

08003592 <_ZN9__gnu_cxx13new_allocatorISt4pairIKc12double_tokenEEC1ERKS5_>:
 8003592:	b480      	push	{r7}
 8003594:	b083      	sub	sp, #12
 8003596:	af00      	add	r7, sp, #0
 8003598:	6078      	str	r0, [r7, #4]
 800359a:	6039      	str	r1, [r7, #0]
 800359c:	687b      	ldr	r3, [r7, #4]
 800359e:	4618      	mov	r0, r3
 80035a0:	370c      	adds	r7, #12
 80035a2:	46bd      	mov	sp, r7
 80035a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80035a8:	4770      	bx	lr

080035aa <_ZNSaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEC1IS3_EERKSaIT_E>:
	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }
 80035aa:	b580      	push	{r7, lr}
 80035ac:	b082      	sub	sp, #8
 80035ae:	af00      	add	r7, sp, #0
 80035b0:	6078      	str	r0, [r7, #4]
 80035b2:	6039      	str	r1, [r7, #0]
 80035b4:	6878      	ldr	r0, [r7, #4]
 80035b6:	f001 f9ad 	bl	8004914 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEC1Ev>
 80035ba:	687b      	ldr	r3, [r7, #4]
 80035bc:	4618      	mov	r0, r3
 80035be:	3708      	adds	r7, #8
 80035c0:	46bd      	mov	sp, r7
 80035c2:	bd80      	pop	{r7, pc}

080035c4 <_ZNSaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
 80035c4:	b580      	push	{r7, lr}
 80035c6:	b082      	sub	sp, #8
 80035c8:	af00      	add	r7, sp, #0
 80035ca:	6078      	str	r0, [r7, #4]
 80035cc:	6878      	ldr	r0, [r7, #4]
 80035ce:	f001 f9ac 	bl	800492a <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEED1Ev>
 80035d2:	687b      	ldr	r3, [r7, #4]
 80035d4:	4618      	mov	r0, r3
 80035d6:	3708      	adds	r7, #8
 80035d8:	46bd      	mov	sp, r7
 80035da:	bd80      	pop	{r7, pc}

080035dc <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE13_Rb_tree_implIS7_Lb1EEC1ERKS7_OSaISt13_Rb_tree_nodeIS3_EE>:
	  _Rb_tree_impl(const _Key_compare& __comp, _Node_allocator&& __a)
 80035dc:	b580      	push	{r7, lr}
 80035de:	b084      	sub	sp, #16
 80035e0:	af00      	add	r7, sp, #0
 80035e2:	60f8      	str	r0, [r7, #12]
 80035e4:	60b9      	str	r1, [r7, #8]
 80035e6:	607a      	str	r2, [r7, #4]
	  : _Node_allocator(std::move(__a)), _Base_key_compare(__comp)
 80035e8:	6878      	ldr	r0, [r7, #4]
 80035ea:	f001 f9a9 	bl	8004940 <_ZSt4moveIRSaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEEONSt16remove_referenceIT_E4typeEOS9_>
 80035ee:	4603      	mov	r3, r0
 80035f0:	4619      	mov	r1, r3
 80035f2:	68f8      	ldr	r0, [r7, #12]
 80035f4:	f001 f9af 	bl	8004956 <_ZNSaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEC1ERKS5_>
 80035f8:	68fb      	ldr	r3, [r7, #12]
 80035fa:	68b9      	ldr	r1, [r7, #8]
 80035fc:	4618      	mov	r0, r3
 80035fe:	f000 fdcc 	bl	800419a <_ZNSt20_Rb_tree_key_compareISt4lessIcEEC1ERKS1_>
 8003602:	68fb      	ldr	r3, [r7, #12]
 8003604:	3304      	adds	r3, #4
 8003606:	4618      	mov	r0, r3
 8003608:	f7fd fd39 	bl	800107e <_ZNSt15_Rb_tree_headerC1Ev>
	  { }
 800360c:	68fb      	ldr	r3, [r7, #12]
 800360e:	4618      	mov	r0, r3
 8003610:	3710      	adds	r7, #16
 8003612:	46bd      	mov	sp, r7
 8003614:	bd80      	pop	{r7, pc}

08003616 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8003616:	b580      	push	{r7, lr}
 8003618:	b084      	sub	sp, #16
 800361a:	af00      	add	r7, sp, #0
 800361c:	6078      	str	r0, [r7, #4]
 800361e:	6039      	str	r1, [r7, #0]
      while (__x != 0)
 8003620:	683b      	ldr	r3, [r7, #0]
 8003622:	2b00      	cmp	r3, #0
 8003624:	d012      	beq.n	800364c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E+0x36>
	  _M_erase(_S_right(__x));
 8003626:	6838      	ldr	r0, [r7, #0]
 8003628:	f001 f9a3 	bl	8004972 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base>
 800362c:	4603      	mov	r3, r0
 800362e:	4619      	mov	r1, r3
 8003630:	6878      	ldr	r0, [r7, #4]
 8003632:	f7ff fff0 	bl	8003616 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E>
	  _Link_type __y = _S_left(__x);
 8003636:	6838      	ldr	r0, [r7, #0]
 8003638:	f001 f9a7 	bl	800498a <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE7_S_leftEPSt18_Rb_tree_node_base>
 800363c:	60f8      	str	r0, [r7, #12]
	  _M_drop_node(__x);
 800363e:	6839      	ldr	r1, [r7, #0]
 8003640:	6878      	ldr	r0, [r7, #4]
 8003642:	f001 f9ae 	bl	80049a2 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS3_E>
	  __x = __y;
 8003646:	68fb      	ldr	r3, [r7, #12]
 8003648:	603b      	str	r3, [r7, #0]
      while (__x != 0)
 800364a:	e7e9      	b.n	8003620 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E+0xa>
    }
 800364c:	bf00      	nop
 800364e:	3710      	adds	r7, #16
 8003650:	46bd      	mov	sp, r7
 8003652:	bd80      	pop	{r7, pc}

08003654 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_beginEv>:
      _M_begin() _GLIBCXX_NOEXCEPT
 8003654:	b480      	push	{r7}
 8003656:	b083      	sub	sp, #12
 8003658:	af00      	add	r7, sp, #0
 800365a:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
 800365c:	687b      	ldr	r3, [r7, #4]
 800365e:	689b      	ldr	r3, [r3, #8]
 8003660:	4618      	mov	r0, r3
 8003662:	370c      	adds	r7, #12
 8003664:	46bd      	mov	sp, r7
 8003666:	f85d 7b04 	ldr.w	r7, [sp], #4
 800366a:	4770      	bx	lr

0800366c <_ZNKSt16initializer_listISt4pairIKc12double_tokenEE4sizeEv>:
 800366c:	b480      	push	{r7}
 800366e:	b083      	sub	sp, #12
 8003670:	af00      	add	r7, sp, #0
 8003672:	6078      	str	r0, [r7, #4]
 8003674:	687b      	ldr	r3, [r7, #4]
 8003676:	685b      	ldr	r3, [r3, #4]
 8003678:	4618      	mov	r0, r3
 800367a:	370c      	adds	r7, #12
 800367c:	46bd      	mov	sp, r7
 800367e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003682:	4770      	bx	lr

08003684 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_Alloc_nodeC1ERS9_>:
	_Alloc_node(_Rb_tree& __t)
 8003684:	b480      	push	{r7}
 8003686:	b083      	sub	sp, #12
 8003688:	af00      	add	r7, sp, #0
 800368a:	6078      	str	r0, [r7, #4]
 800368c:	6039      	str	r1, [r7, #0]
	: _M_t(__t) { }
 800368e:	687b      	ldr	r3, [r7, #4]
 8003690:	683a      	ldr	r2, [r7, #0]
 8003692:	601a      	str	r2, [r3, #0]
 8003694:	687b      	ldr	r3, [r7, #4]
 8003696:	4618      	mov	r0, r3
 8003698:	370c      	adds	r7, #12
 800369a:	46bd      	mov	sp, r7
 800369c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80036a0:	4770      	bx	lr

080036a2 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 80036a2:	b580      	push	{r7, lr}
 80036a4:	b084      	sub	sp, #16
 80036a6:	af00      	add	r7, sp, #0
 80036a8:	6078      	str	r0, [r7, #4]
      { return iterator(&this->_M_impl._M_header); }
 80036aa:	687b      	ldr	r3, [r7, #4]
 80036ac:	1d1a      	adds	r2, r3, #4
 80036ae:	f107 030c 	add.w	r3, r7, #12
 80036b2:	4611      	mov	r1, r2
 80036b4:	4618      	mov	r0, r3
 80036b6:	f001 f985 	bl	80049c4 <_ZNSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEEC1EPSt18_Rb_tree_node_base>
 80036ba:	68fb      	ldr	r3, [r7, #12]
 80036bc:	4618      	mov	r0, r3
 80036be:	3710      	adds	r7, #16
 80036c0:	46bd      	mov	sp, r7
 80036c2:	bd80      	pop	{r7, pc}

080036c4 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEEC1ERKSt17_Rb_tree_iteratorIS3_E>:
      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
 80036c4:	b480      	push	{r7}
 80036c6:	b083      	sub	sp, #12
 80036c8:	af00      	add	r7, sp, #0
 80036ca:	6078      	str	r0, [r7, #4]
 80036cc:	6039      	str	r1, [r7, #0]
      : _M_node(__it._M_node) { }
 80036ce:	683b      	ldr	r3, [r7, #0]
 80036d0:	681a      	ldr	r2, [r3, #0]
 80036d2:	687b      	ldr	r3, [r7, #4]
 80036d4:	601a      	str	r2, [r3, #0]
 80036d6:	687b      	ldr	r3, [r7, #4]
 80036d8:	4618      	mov	r0, r3
 80036da:	370c      	adds	r7, #12
 80036dc:	46bd      	mov	sp, r7
 80036de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80036e2:	4770      	bx	lr

080036e4 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE17_M_insert_unique_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_ESt23_Rb_tree_const_iteratorIS3_EOT_RT0_>:
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 80036e4:	b5b0      	push	{r4, r5, r7, lr}
 80036e6:	b08a      	sub	sp, #40	; 0x28
 80036e8:	af02      	add	r7, sp, #8
 80036ea:	60f8      	str	r0, [r7, #12]
 80036ec:	60b9      	str	r1, [r7, #8]
 80036ee:	607a      	str	r2, [r7, #4]
 80036f0:	603b      	str	r3, [r7, #0]
	= _M_get_insert_hint_unique_pos(__position, _KeyOfValue()(__v));
 80036f2:	f107 0318 	add.w	r3, r7, #24
 80036f6:	6879      	ldr	r1, [r7, #4]
 80036f8:	4618      	mov	r0, r3
 80036fa:	f001 fa95 	bl	8004c28 <_ZNKSt10_Select1stISt4pairIKc12double_tokenEEclERKS3_>
 80036fe:	4603      	mov	r3, r0
      pair<_Base_ptr, _Base_ptr> __res
 8003700:	f107 0010 	add.w	r0, r7, #16
 8003704:	68ba      	ldr	r2, [r7, #8]
 8003706:	68f9      	ldr	r1, [r7, #12]
 8003708:	f001 f96b 	bl	80049e2 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_>
      if (__res.second)
 800370c:	697b      	ldr	r3, [r7, #20]
 800370e:	2b00      	cmp	r3, #0
 8003710:	d00f      	beq.n	8003732 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE17_M_insert_unique_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_ESt23_Rb_tree_const_iteratorIS3_EOT_RT0_+0x4e>
			  __node_gen);
 8003712:	693c      	ldr	r4, [r7, #16]
 8003714:	697d      	ldr	r5, [r7, #20]
 8003716:	6878      	ldr	r0, [r7, #4]
 8003718:	f001 fa92 	bl	8004c40 <_ZSt7forwardIRKSt4pairIKc12double_tokenEEOT_RNSt16remove_referenceIS6_E4typeE>
 800371c:	4602      	mov	r2, r0
 800371e:	683b      	ldr	r3, [r7, #0]
 8003720:	9300      	str	r3, [sp, #0]
 8003722:	4613      	mov	r3, r2
 8003724:	462a      	mov	r2, r5
 8003726:	4621      	mov	r1, r4
 8003728:	68f8      	ldr	r0, [r7, #12]
 800372a:	f001 fa94 	bl	8004c56 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_>
 800372e:	4603      	mov	r3, r0
 8003730:	e007      	b.n	8003742 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE17_M_insert_unique_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_ESt23_Rb_tree_const_iteratorIS3_EOT_RT0_+0x5e>
      return iterator(__res.first);
 8003732:	693a      	ldr	r2, [r7, #16]
 8003734:	f107 031c 	add.w	r3, r7, #28
 8003738:	4611      	mov	r1, r2
 800373a:	4618      	mov	r0, r3
 800373c:	f001 f942 	bl	80049c4 <_ZNSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEEC1EPSt18_Rb_tree_node_base>
 8003740:	69fb      	ldr	r3, [r7, #28]
    }
 8003742:	4618      	mov	r0, r3
 8003744:	3720      	adds	r7, #32
 8003746:	46bd      	mov	sp, r7
 8003748:	bdb0      	pop	{r4, r5, r7, pc}

0800374a <_ZSt7forwardIRSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEOT_RNSt16remove_referenceISD_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800374a:	b480      	push	{r7}
 800374c:	b083      	sub	sp, #12
 800374e:	af00      	add	r7, sp, #0
 8003750:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8003752:	687b      	ldr	r3, [r7, #4]
 8003754:	4618      	mov	r0, r3
 8003756:	370c      	adds	r7, #12
 8003758:	46bd      	mov	sp, r7
 800375a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800375e:	4770      	bx	lr

08003760 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISF_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8003760:	b480      	push	{r7}
 8003762:	b083      	sub	sp, #12
 8003764:	af00      	add	r7, sp, #0
 8003766:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8003768:	687b      	ldr	r3, [r7, #4]
 800376a:	4618      	mov	r0, r3
 800376c:	370c      	adds	r7, #12
 800376e:	46bd      	mov	sp, r7
 8003770:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003774:	4770      	bx	lr

08003776 <_ZNRSt8__detail9__variant14_UninitializedIP10AssignmentLb1EE6_M_getEv>:
      constexpr _Type& _M_get() & noexcept
 8003776:	b480      	push	{r7}
 8003778:	b083      	sub	sp, #12
 800377a:	af00      	add	r7, sp, #0
 800377c:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 800377e:	687b      	ldr	r3, [r7, #4]
 8003780:	4618      	mov	r0, r3
 8003782:	370c      	adds	r7, #12
 8003784:	46bd      	mov	sp, r7
 8003786:	f85d 7b04 	ldr.w	r7, [sp], #4
 800378a:	4770      	bx	lr

0800378c <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP13Function_callP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISD_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800378c:	b480      	push	{r7}
 800378e:	b083      	sub	sp, #12
 8003790:	af00      	add	r7, sp, #0
 8003792:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8003794:	687b      	ldr	r3, [r7, #4]
 8003796:	4618      	mov	r0, r3
 8003798:	370c      	adds	r7, #12
 800379a:	46bd      	mov	sp, r7
 800379c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80037a0:	4770      	bx	lr

080037a2 <_ZNRSt8__detail9__variant14_UninitializedIP13Function_callLb1EE6_M_getEv>:
      constexpr _Type& _M_get() & noexcept
 80037a2:	b480      	push	{r7}
 80037a4:	b083      	sub	sp, #12
 80037a6:	af00      	add	r7, sp, #0
 80037a8:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 80037aa:	687b      	ldr	r3, [r7, #4]
 80037ac:	4618      	mov	r0, r3
 80037ae:	370c      	adds	r7, #12
 80037b0:	46bd      	mov	sp, r7
 80037b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80037b6:	4770      	bx	lr

080037b8 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISB_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80037b8:	b480      	push	{r7}
 80037ba:	b083      	sub	sp, #12
 80037bc:	af00      	add	r7, sp, #0
 80037be:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80037c0:	687b      	ldr	r3, [r7, #4]
 80037c2:	4618      	mov	r0, r3
 80037c4:	370c      	adds	r7, #12
 80037c6:	46bd      	mov	sp, r7
 80037c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80037cc:	4770      	bx	lr

080037ce <_ZNRSt8__detail9__variant14_UninitializedIP11Method_callLb1EE6_M_getEv>:
      constexpr _Type& _M_get() & noexcept
 80037ce:	b480      	push	{r7}
 80037d0:	b083      	sub	sp, #12
 80037d2:	af00      	add	r7, sp, #0
 80037d4:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 80037d6:	687b      	ldr	r3, [r7, #4]
 80037d8:	4618      	mov	r0, r3
 80037da:	370c      	adds	r7, #12
 80037dc:	46bd      	mov	sp, r7
 80037de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80037e2:	4770      	bx	lr

080037e4 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceIS9_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80037e4:	b480      	push	{r7}
 80037e6:	b083      	sub	sp, #12
 80037e8:	af00      	add	r7, sp, #0
 80037ea:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80037ec:	687b      	ldr	r3, [r7, #4]
 80037ee:	4618      	mov	r0, r3
 80037f0:	370c      	adds	r7, #12
 80037f2:	46bd      	mov	sp, r7
 80037f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80037f8:	4770      	bx	lr

080037fa <_ZNRSt8__detail9__variant14_UninitializedIP15While_statementLb1EE6_M_getEv>:
      constexpr _Type& _M_get() & noexcept
 80037fa:	b480      	push	{r7}
 80037fc:	b083      	sub	sp, #12
 80037fe:	af00      	add	r7, sp, #0
 8003800:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 8003802:	687b      	ldr	r3, [r7, #4]
 8003804:	4618      	mov	r0, r3
 8003806:	370c      	adds	r7, #12
 8003808:	46bd      	mov	sp, r7
 800380a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800380e:	4770      	bx	lr

08003810 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP12If_statementEEEEOT_RNSt16remove_referenceIS7_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8003810:	b480      	push	{r7}
 8003812:	b083      	sub	sp, #12
 8003814:	af00      	add	r7, sp, #0
 8003816:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8003818:	687b      	ldr	r3, [r7, #4]
 800381a:	4618      	mov	r0, r3
 800381c:	370c      	adds	r7, #12
 800381e:	46bd      	mov	sp, r7
 8003820:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003824:	4770      	bx	lr

08003826 <_ZNRSt8__detail9__variant14_UninitializedIP12If_statementLb1EE6_M_getEv>:
      constexpr _Type& _M_get() & noexcept
 8003826:	b480      	push	{r7}
 8003828:	b083      	sub	sp, #12
 800382a:	af00      	add	r7, sp, #0
 800382c:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 800382e:	687b      	ldr	r3, [r7, #4]
 8003830:	4618      	mov	r0, r3
 8003832:	370c      	adds	r7, #12
 8003834:	46bd      	mov	sp, r7
 8003836:	f85d 7b04 	ldr.w	r7, [sp], #4
 800383a:	4770      	bx	lr

0800383c <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEERNSt8__detail9__variant16_Variant_storageILb0EJifbS5_S9_EEEEDcOT0_>:
    __variant_cast(_Tp&& __rhs)
 800383c:	b480      	push	{r7}
 800383e:	b083      	sub	sp, #12
 8003840:	af00      	add	r7, sp, #0
 8003842:	6078      	str	r0, [r7, #4]
	    return static_cast<variant<_Types...>&>(__rhs);
 8003844:	687b      	ldr	r3, [r7, #4]
    }
 8003846:	4618      	mov	r0, r3
 8003848:	370c      	adds	r7, #12
 800384a:	46bd      	mov	sp, r7
 800384c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003850:	4770      	bx	lr

08003852 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESM_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8003852:	b580      	push	{r7, lr}
 8003854:	b082      	sub	sp, #8
 8003856:	af00      	add	r7, sp, #0
 8003858:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 800385a:	6878      	ldr	r0, [r7, #4]
 800385c:	f7fe fb3a 	bl	8001ed4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8003860:	4603      	mov	r3, r0
 8003862:	4618      	mov	r0, r3
 8003864:	f7fe f86d 	bl	8001942 <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8003868:	4603      	mov	r3, r0
	}
 800386a:	4618      	mov	r0, r3
 800386c:	3708      	adds	r7, #8
 800386e:	46bd      	mov	sp, r7
 8003870:	bd80      	pop	{r7, pc}

08003872 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESJ_SM_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8003872:	b5b0      	push	{r4, r5, r7, lr}
 8003874:	b082      	sub	sp, #8
 8003876:	af00      	add	r7, sp, #0
 8003878:	6078      	str	r0, [r7, #4]
 800387a:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 800387c:	6878      	ldr	r0, [r7, #4]
 800387e:	f001 fa33 	bl	8004ce8 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8003882:	4604      	mov	r4, r0
 8003884:	6838      	ldr	r0, [r7, #0]
 8003886:	f7fe fb25 	bl	8001ed4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800388a:	4603      	mov	r3, r0
 800388c:	4618      	mov	r0, r3
 800388e:	f7ff ffe0 	bl	8003852 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESM_EEDcOT0_>
 8003892:	4603      	mov	r3, r0
 8003894:	4619      	mov	r1, r3
 8003896:	4620      	mov	r0, r4
 8003898:	f001 fa31 	bl	8004cfe <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_JRiEENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>
		std::forward<_Variants>(__vars))...);
 800389c:	462b      	mov	r3, r5
      }
 800389e:	4618      	mov	r0, r3
 80038a0:	3708      	adds	r7, #8
 80038a2:	46bd      	mov	sp, r7
 80038a4:	bdb0      	pop	{r4, r5, r7, pc}

080038a6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESJ_SM_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80038a6:	b5b0      	push	{r4, r5, r7, lr}
 80038a8:	b082      	sub	sp, #8
 80038aa:	af00      	add	r7, sp, #0
 80038ac:	6078      	str	r0, [r7, #4]
 80038ae:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 80038b0:	6878      	ldr	r0, [r7, #4]
 80038b2:	f001 fa19 	bl	8004ce8 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 80038b6:	4604      	mov	r4, r0
 80038b8:	6838      	ldr	r0, [r7, #0]
 80038ba:	f7fe fb0b 	bl	8001ed4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 80038be:	4603      	mov	r3, r0
 80038c0:	4619      	mov	r1, r3
 80038c2:	4620      	mov	r0, r4
 80038c4:	f7ff ffd5 	bl	8003872 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 80038c8:	462b      	mov	r3, r5
      }
 80038ca:	4618      	mov	r0, r3
 80038cc:	3708      	adds	r7, #8
 80038ce:	46bd      	mov	sp, r7
 80038d0:	bdb0      	pop	{r4, r5, r7, pc}

080038d2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj0EEEE14__visit_invokeESJ_SM_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80038d2:	b5b0      	push	{r4, r5, r7, lr}
 80038d4:	b082      	sub	sp, #8
 80038d6:	af00      	add	r7, sp, #0
 80038d8:	6078      	str	r0, [r7, #4]
 80038da:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 80038dc:	6878      	ldr	r0, [r7, #4]
 80038de:	f001 fa03 	bl	8004ce8 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 80038e2:	4604      	mov	r4, r0
 80038e4:	6838      	ldr	r0, [r7, #0]
 80038e6:	f7fe faf5 	bl	8001ed4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 80038ea:	4603      	mov	r3, r0
 80038ec:	4619      	mov	r1, r3
 80038ee:	4620      	mov	r0, r4
 80038f0:	f7ff ffd9 	bl	80038a6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 80038f4:	462b      	mov	r3, r5
      }
 80038f6:	4618      	mov	r0, r3
 80038f8:	3708      	adds	r7, #8
 80038fa:	46bd      	mov	sp, r7
 80038fc:	bdb0      	pop	{r4, r5, r7, pc}

080038fe <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 80038fe:	b580      	push	{r7, lr}
 8003900:	b082      	sub	sp, #8
 8003902:	af00      	add	r7, sp, #0
 8003904:	7138      	strb	r0, [r7, #4]
 8003906:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8003908:	6838      	ldr	r0, [r7, #0]
 800390a:	f7fe faf9 	bl	8001f00 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800390e:	4603      	mov	r3, r0
 8003910:	4618      	mov	r0, r3
 8003912:	f001 fa0b 	bl	8004d2c <_ZNRSt8__detail9__variant14_UninitializedIfLb1EE6_M_getEv>
 8003916:	4603      	mov	r3, r0
 8003918:	4618      	mov	r0, r3
 800391a:	3708      	adds	r7, #8
 800391c:	46bd      	mov	sp, r7
 800391e:	bd80      	pop	{r7, pc}

08003920 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8003920:	b590      	push	{r4, r7, lr}
 8003922:	b083      	sub	sp, #12
 8003924:	af00      	add	r7, sp, #0
 8003926:	7138      	strb	r0, [r7, #4]
 8003928:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800392a:	6838      	ldr	r0, [r7, #0]
 800392c:	f7fe fadd 	bl	8001eea <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8003930:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8003932:	4619      	mov	r1, r3
 8003934:	4620      	mov	r0, r4
 8003936:	f7ff ffe2 	bl	80038fe <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 800393a:	4603      	mov	r3, r0
    }
 800393c:	4618      	mov	r0, r3
 800393e:	370c      	adds	r7, #12
 8003940:	46bd      	mov	sp, r7
 8003942:	bd90      	pop	{r4, r7, pc}

08003944 <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8003944:	b590      	push	{r4, r7, lr}
 8003946:	b083      	sub	sp, #12
 8003948:	af00      	add	r7, sp, #0
 800394a:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800394c:	6878      	ldr	r0, [r7, #4]
 800394e:	f7fe fac1 	bl	8001ed4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8003952:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8003954:	4619      	mov	r1, r3
 8003956:	4620      	mov	r0, r4
 8003958:	f7ff ffe2 	bl	8003920 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800395c:	4603      	mov	r3, r0
    }
 800395e:	4618      	mov	r0, r3
 8003960:	370c      	adds	r7, #12
 8003962:	46bd      	mov	sp, r7
 8003964:	bd90      	pop	{r4, r7, pc}

08003966 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESM_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8003966:	b580      	push	{r7, lr}
 8003968:	b082      	sub	sp, #8
 800396a:	af00      	add	r7, sp, #0
 800396c:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 800396e:	6878      	ldr	r0, [r7, #4]
 8003970:	f7fe fab0 	bl	8001ed4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8003974:	4603      	mov	r3, r0
 8003976:	4618      	mov	r0, r3
 8003978:	f7ff ffe4 	bl	8003944 <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 800397c:	4603      	mov	r3, r0
	}
 800397e:	4618      	mov	r0, r3
 8003980:	3708      	adds	r7, #8
 8003982:	46bd      	mov	sp, r7
 8003984:	bd80      	pop	{r7, pc}

08003986 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESJ_SM_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8003986:	b5b0      	push	{r4, r5, r7, lr}
 8003988:	b082      	sub	sp, #8
 800398a:	af00      	add	r7, sp, #0
 800398c:	6078      	str	r0, [r7, #4]
 800398e:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8003990:	6878      	ldr	r0, [r7, #4]
 8003992:	f001 f9a9 	bl	8004ce8 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8003996:	4604      	mov	r4, r0
 8003998:	6838      	ldr	r0, [r7, #0]
 800399a:	f7fe fa9b 	bl	8001ed4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800399e:	4603      	mov	r3, r0
 80039a0:	4618      	mov	r0, r3
 80039a2:	f7ff ffe0 	bl	8003966 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESM_EEDcOT0_>
 80039a6:	4603      	mov	r3, r0
 80039a8:	4619      	mov	r1, r3
 80039aa:	4620      	mov	r0, r4
 80039ac:	f001 f9c9 	bl	8004d42 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_JRfEENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>
		std::forward<_Variants>(__vars))...);
 80039b0:	462b      	mov	r3, r5
      }
 80039b2:	4618      	mov	r0, r3
 80039b4:	3708      	adds	r7, #8
 80039b6:	46bd      	mov	sp, r7
 80039b8:	bdb0      	pop	{r4, r5, r7, pc}

080039ba <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESJ_SM_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80039ba:	b5b0      	push	{r4, r5, r7, lr}
 80039bc:	b082      	sub	sp, #8
 80039be:	af00      	add	r7, sp, #0
 80039c0:	6078      	str	r0, [r7, #4]
 80039c2:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 80039c4:	6878      	ldr	r0, [r7, #4]
 80039c6:	f001 f98f 	bl	8004ce8 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 80039ca:	4604      	mov	r4, r0
 80039cc:	6838      	ldr	r0, [r7, #0]
 80039ce:	f7fe fa81 	bl	8001ed4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 80039d2:	4603      	mov	r3, r0
 80039d4:	4619      	mov	r1, r3
 80039d6:	4620      	mov	r0, r4
 80039d8:	f7ff ffd5 	bl	8003986 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 80039dc:	462b      	mov	r3, r5
      }
 80039de:	4618      	mov	r0, r3
 80039e0:	3708      	adds	r7, #8
 80039e2:	46bd      	mov	sp, r7
 80039e4:	bdb0      	pop	{r4, r5, r7, pc}

080039e6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj1EEEE14__visit_invokeESJ_SM_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80039e6:	b5b0      	push	{r4, r5, r7, lr}
 80039e8:	b082      	sub	sp, #8
 80039ea:	af00      	add	r7, sp, #0
 80039ec:	6078      	str	r0, [r7, #4]
 80039ee:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 80039f0:	6878      	ldr	r0, [r7, #4]
 80039f2:	f001 f979 	bl	8004ce8 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 80039f6:	4604      	mov	r4, r0
 80039f8:	6838      	ldr	r0, [r7, #0]
 80039fa:	f7fe fa6b 	bl	8001ed4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 80039fe:	4603      	mov	r3, r0
 8003a00:	4619      	mov	r1, r3
 8003a02:	4620      	mov	r0, r4
 8003a04:	f7ff ffd9 	bl	80039ba <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 8003a08:	462b      	mov	r3, r5
      }
 8003a0a:	4618      	mov	r0, r3
 8003a0c:	3708      	adds	r7, #8
 8003a0e:	46bd      	mov	sp, r7
 8003a10:	bdb0      	pop	{r4, r5, r7, pc}

08003a12 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESM_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8003a12:	b580      	push	{r7, lr}
 8003a14:	b082      	sub	sp, #8
 8003a16:	af00      	add	r7, sp, #0
 8003a18:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8003a1a:	6878      	ldr	r0, [r7, #4]
 8003a1c:	f7fe fa5a 	bl	8001ed4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8003a20:	4603      	mov	r3, r0
 8003a22:	4618      	mov	r0, r3
 8003a24:	f7fd fdc2 	bl	80015ac <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8003a28:	4603      	mov	r3, r0
	}
 8003a2a:	4618      	mov	r0, r3
 8003a2c:	3708      	adds	r7, #8
 8003a2e:	46bd      	mov	sp, r7
 8003a30:	bd80      	pop	{r7, pc}

08003a32 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESJ_SM_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8003a32:	b5b0      	push	{r4, r5, r7, lr}
 8003a34:	b082      	sub	sp, #8
 8003a36:	af00      	add	r7, sp, #0
 8003a38:	6078      	str	r0, [r7, #4]
 8003a3a:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8003a3c:	6878      	ldr	r0, [r7, #4]
 8003a3e:	f001 f953 	bl	8004ce8 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8003a42:	4604      	mov	r4, r0
 8003a44:	6838      	ldr	r0, [r7, #0]
 8003a46:	f7fe fa45 	bl	8001ed4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8003a4a:	4603      	mov	r3, r0
 8003a4c:	4618      	mov	r0, r3
 8003a4e:	f7ff ffe0 	bl	8003a12 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESM_EEDcOT0_>
 8003a52:	4603      	mov	r3, r0
 8003a54:	4619      	mov	r1, r3
 8003a56:	4620      	mov	r0, r4
 8003a58:	f001 f98a 	bl	8004d70 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_JRbEENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>
		std::forward<_Variants>(__vars))...);
 8003a5c:	462b      	mov	r3, r5
      }
 8003a5e:	4618      	mov	r0, r3
 8003a60:	3708      	adds	r7, #8
 8003a62:	46bd      	mov	sp, r7
 8003a64:	bdb0      	pop	{r4, r5, r7, pc}

08003a66 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESJ_SM_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8003a66:	b5b0      	push	{r4, r5, r7, lr}
 8003a68:	b082      	sub	sp, #8
 8003a6a:	af00      	add	r7, sp, #0
 8003a6c:	6078      	str	r0, [r7, #4]
 8003a6e:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8003a70:	6878      	ldr	r0, [r7, #4]
 8003a72:	f001 f939 	bl	8004ce8 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8003a76:	4604      	mov	r4, r0
 8003a78:	6838      	ldr	r0, [r7, #0]
 8003a7a:	f7fe fa2b 	bl	8001ed4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8003a7e:	4603      	mov	r3, r0
 8003a80:	4619      	mov	r1, r3
 8003a82:	4620      	mov	r0, r4
 8003a84:	f7ff ffd5 	bl	8003a32 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 8003a88:	462b      	mov	r3, r5
      }
 8003a8a:	4618      	mov	r0, r3
 8003a8c:	3708      	adds	r7, #8
 8003a8e:	46bd      	mov	sp, r7
 8003a90:	bdb0      	pop	{r4, r5, r7, pc}

08003a92 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj2EEEE14__visit_invokeESJ_SM_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8003a92:	b5b0      	push	{r4, r5, r7, lr}
 8003a94:	b082      	sub	sp, #8
 8003a96:	af00      	add	r7, sp, #0
 8003a98:	6078      	str	r0, [r7, #4]
 8003a9a:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8003a9c:	6878      	ldr	r0, [r7, #4]
 8003a9e:	f001 f923 	bl	8004ce8 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8003aa2:	4604      	mov	r4, r0
 8003aa4:	6838      	ldr	r0, [r7, #0]
 8003aa6:	f7fe fa15 	bl	8001ed4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8003aaa:	4603      	mov	r3, r0
 8003aac:	4619      	mov	r1, r3
 8003aae:	4620      	mov	r0, r4
 8003ab0:	f7ff ffd9 	bl	8003a66 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 8003ab4:	462b      	mov	r3, r5
      }
 8003ab6:	4618      	mov	r0, r3
 8003ab8:	3708      	adds	r7, #8
 8003aba:	46bd      	mov	sp, r7
 8003abc:	bdb0      	pop	{r4, r5, r7, pc}

08003abe <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8003abe:	b580      	push	{r7, lr}
 8003ac0:	b082      	sub	sp, #8
 8003ac2:	af00      	add	r7, sp, #0
 8003ac4:	7138      	strb	r0, [r7, #4]
 8003ac6:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8003ac8:	6838      	ldr	r0, [r7, #0]
 8003aca:	f001 f968 	bl	8004d9e <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8003ace:	4603      	mov	r3, r0
 8003ad0:	4618      	mov	r0, r3
 8003ad2:	f001 f96f 	bl	8004db4 <_ZNRSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE6_M_getEv>
 8003ad6:	4603      	mov	r3, r0
 8003ad8:	4618      	mov	r0, r3
 8003ada:	3708      	adds	r7, #8
 8003adc:	46bd      	mov	sp, r7
 8003ade:	bd80      	pop	{r7, pc}

08003ae0 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8003ae0:	b590      	push	{r4, r7, lr}
 8003ae2:	b083      	sub	sp, #12
 8003ae4:	af00      	add	r7, sp, #0
 8003ae6:	7138      	strb	r0, [r7, #4]
 8003ae8:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8003aea:	6838      	ldr	r0, [r7, #0]
 8003aec:	f7fe fa13 	bl	8001f16 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8003af0:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8003af2:	4619      	mov	r1, r3
 8003af4:	4620      	mov	r0, r4
 8003af6:	f7ff ffe2 	bl	8003abe <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 8003afa:	4603      	mov	r3, r0
    }
 8003afc:	4618      	mov	r0, r3
 8003afe:	370c      	adds	r7, #12
 8003b00:	46bd      	mov	sp, r7
 8003b02:	bd90      	pop	{r4, r7, pc}

08003b04 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8003b04:	b590      	push	{r4, r7, lr}
 8003b06:	b083      	sub	sp, #12
 8003b08:	af00      	add	r7, sp, #0
 8003b0a:	7138      	strb	r0, [r7, #4]
 8003b0c:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8003b0e:	6838      	ldr	r0, [r7, #0]
 8003b10:	f7fe f9f6 	bl	8001f00 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8003b14:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8003b16:	4619      	mov	r1, r3
 8003b18:	4620      	mov	r0, r4
 8003b1a:	f7ff ffe1 	bl	8003ae0 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8003b1e:	4603      	mov	r3, r0
    }
 8003b20:	4618      	mov	r0, r3
 8003b22:	370c      	adds	r7, #12
 8003b24:	46bd      	mov	sp, r7
 8003b26:	bd90      	pop	{r4, r7, pc}

08003b28 <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8003b28:	b590      	push	{r4, r7, lr}
 8003b2a:	b083      	sub	sp, #12
 8003b2c:	af00      	add	r7, sp, #0
 8003b2e:	7138      	strb	r0, [r7, #4]
 8003b30:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8003b32:	6838      	ldr	r0, [r7, #0]
 8003b34:	f7fe f9d9 	bl	8001eea <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8003b38:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8003b3a:	4619      	mov	r1, r3
 8003b3c:	4620      	mov	r0, r4
 8003b3e:	f7ff ffe1 	bl	8003b04 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8003b42:	4603      	mov	r3, r0
    }
 8003b44:	4618      	mov	r0, r3
 8003b46:	370c      	adds	r7, #12
 8003b48:	46bd      	mov	sp, r7
 8003b4a:	bd90      	pop	{r4, r7, pc}

08003b4c <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8003b4c:	b590      	push	{r4, r7, lr}
 8003b4e:	b083      	sub	sp, #12
 8003b50:	af00      	add	r7, sp, #0
 8003b52:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8003b54:	6878      	ldr	r0, [r7, #4]
 8003b56:	f7fe f9bd 	bl	8001ed4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8003b5a:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8003b5c:	4619      	mov	r1, r3
 8003b5e:	4620      	mov	r0, r4
 8003b60:	f7ff ffe2 	bl	8003b28 <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8003b64:	4603      	mov	r3, r0
    }
 8003b66:	4618      	mov	r0, r3
 8003b68:	370c      	adds	r7, #12
 8003b6a:	46bd      	mov	sp, r7
 8003b6c:	bd90      	pop	{r4, r7, pc}

08003b6e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESM_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8003b6e:	b580      	push	{r7, lr}
 8003b70:	b082      	sub	sp, #8
 8003b72:	af00      	add	r7, sp, #0
 8003b74:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8003b76:	6878      	ldr	r0, [r7, #4]
 8003b78:	f7fe f9ac 	bl	8001ed4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8003b7c:	4603      	mov	r3, r0
 8003b7e:	4618      	mov	r0, r3
 8003b80:	f7ff ffe4 	bl	8003b4c <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8003b84:	4603      	mov	r3, r0
	}
 8003b86:	4618      	mov	r0, r3
 8003b88:	3708      	adds	r7, #8
 8003b8a:	46bd      	mov	sp, r7
 8003b8c:	bd80      	pop	{r7, pc}

08003b8e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESJ_SM_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8003b8e:	b5b0      	push	{r4, r5, r7, lr}
 8003b90:	b082      	sub	sp, #8
 8003b92:	af00      	add	r7, sp, #0
 8003b94:	6078      	str	r0, [r7, #4]
 8003b96:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8003b98:	6878      	ldr	r0, [r7, #4]
 8003b9a:	f001 f8a5 	bl	8004ce8 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8003b9e:	4604      	mov	r4, r0
 8003ba0:	6838      	ldr	r0, [r7, #0]
 8003ba2:	f7fe f997 	bl	8001ed4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8003ba6:	4603      	mov	r3, r0
 8003ba8:	4618      	mov	r0, r3
 8003baa:	f7ff ffe0 	bl	8003b6e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESM_EEDcOT0_>
 8003bae:	4603      	mov	r3, r0
 8003bb0:	4619      	mov	r1, r3
 8003bb2:	4620      	mov	r0, r4
 8003bb4:	f001 f90b 	bl	8004dce <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_JRS8_EENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>
		std::forward<_Variants>(__vars))...);
 8003bb8:	462b      	mov	r3, r5
      }
 8003bba:	4618      	mov	r0, r3
 8003bbc:	3708      	adds	r7, #8
 8003bbe:	46bd      	mov	sp, r7
 8003bc0:	bdb0      	pop	{r4, r5, r7, pc}

08003bc2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESJ_SM_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8003bc2:	b5b0      	push	{r4, r5, r7, lr}
 8003bc4:	b082      	sub	sp, #8
 8003bc6:	af00      	add	r7, sp, #0
 8003bc8:	6078      	str	r0, [r7, #4]
 8003bca:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8003bcc:	6878      	ldr	r0, [r7, #4]
 8003bce:	f001 f88b 	bl	8004ce8 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8003bd2:	4604      	mov	r4, r0
 8003bd4:	6838      	ldr	r0, [r7, #0]
 8003bd6:	f7fe f97d 	bl	8001ed4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8003bda:	4603      	mov	r3, r0
 8003bdc:	4619      	mov	r1, r3
 8003bde:	4620      	mov	r0, r4
 8003be0:	f7ff ffd5 	bl	8003b8e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 8003be4:	462b      	mov	r3, r5
      }
 8003be6:	4618      	mov	r0, r3
 8003be8:	3708      	adds	r7, #8
 8003bea:	46bd      	mov	sp, r7
 8003bec:	bdb0      	pop	{r4, r5, r7, pc}

08003bee <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj3EEEE14__visit_invokeESJ_SM_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8003bee:	b5b0      	push	{r4, r5, r7, lr}
 8003bf0:	b082      	sub	sp, #8
 8003bf2:	af00      	add	r7, sp, #0
 8003bf4:	6078      	str	r0, [r7, #4]
 8003bf6:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8003bf8:	6878      	ldr	r0, [r7, #4]
 8003bfa:	f001 f875 	bl	8004ce8 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8003bfe:	4604      	mov	r4, r0
 8003c00:	6838      	ldr	r0, [r7, #0]
 8003c02:	f7fe f967 	bl	8001ed4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8003c06:	4603      	mov	r3, r0
 8003c08:	4619      	mov	r1, r3
 8003c0a:	4620      	mov	r0, r4
 8003c0c:	f7ff ffd9 	bl	8003bc2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 8003c10:	462b      	mov	r3, r5
      }
 8003c12:	4618      	mov	r0, r3
 8003c14:	3708      	adds	r7, #8
 8003c16:	46bd      	mov	sp, r7
 8003c18:	bdb0      	pop	{r4, r5, r7, pc}

08003c1a <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJSt6vectorI6SymbolSaIS4_EEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8003c1a:	b580      	push	{r7, lr}
 8003c1c:	b082      	sub	sp, #8
 8003c1e:	af00      	add	r7, sp, #0
 8003c20:	7138      	strb	r0, [r7, #4]
 8003c22:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8003c24:	6838      	ldr	r0, [r7, #0]
 8003c26:	f001 f8e9 	bl	8004dfc <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJSt6vectorI6SymbolSaIS4_EEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8003c2a:	4603      	mov	r3, r0
 8003c2c:	4618      	mov	r0, r3
 8003c2e:	f001 f8f0 	bl	8004e12 <_ZNRSt8__detail9__variant14_UninitializedISt6vectorI6SymbolSaIS3_EELb0EE6_M_getEv>
 8003c32:	4603      	mov	r3, r0
 8003c34:	4618      	mov	r0, r3
 8003c36:	3708      	adds	r7, #8
 8003c38:	46bd      	mov	sp, r7
 8003c3a:	bd80      	pop	{r7, pc}

08003c3c <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8003c3c:	b590      	push	{r4, r7, lr}
 8003c3e:	b083      	sub	sp, #12
 8003c40:	af00      	add	r7, sp, #0
 8003c42:	7138      	strb	r0, [r7, #4]
 8003c44:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8003c46:	6838      	ldr	r0, [r7, #0]
 8003c48:	f001 f8a9 	bl	8004d9e <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8003c4c:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8003c4e:	4619      	mov	r1, r3
 8003c50:	4620      	mov	r0, r4
 8003c52:	f7ff ffe2 	bl	8003c1a <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJSt6vectorI6SymbolSaIS4_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 8003c56:	4603      	mov	r3, r0
    }
 8003c58:	4618      	mov	r0, r3
 8003c5a:	370c      	adds	r7, #12
 8003c5c:	46bd      	mov	sp, r7
 8003c5e:	bd90      	pop	{r4, r7, pc}

08003c60 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8003c60:	b590      	push	{r4, r7, lr}
 8003c62:	b083      	sub	sp, #12
 8003c64:	af00      	add	r7, sp, #0
 8003c66:	7138      	strb	r0, [r7, #4]
 8003c68:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8003c6a:	6838      	ldr	r0, [r7, #0]
 8003c6c:	f7fe f953 	bl	8001f16 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8003c70:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8003c72:	4619      	mov	r1, r3
 8003c74:	4620      	mov	r0, r4
 8003c76:	f7ff ffe1 	bl	8003c3c <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8003c7a:	4603      	mov	r3, r0
    }
 8003c7c:	4618      	mov	r0, r3
 8003c7e:	370c      	adds	r7, #12
 8003c80:	46bd      	mov	sp, r7
 8003c82:	bd90      	pop	{r4, r7, pc}

08003c84 <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8003c84:	b590      	push	{r4, r7, lr}
 8003c86:	b083      	sub	sp, #12
 8003c88:	af00      	add	r7, sp, #0
 8003c8a:	7138      	strb	r0, [r7, #4]
 8003c8c:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8003c8e:	6838      	ldr	r0, [r7, #0]
 8003c90:	f7fe f936 	bl	8001f00 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8003c94:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8003c96:	4619      	mov	r1, r3
 8003c98:	4620      	mov	r0, r4
 8003c9a:	f7ff ffe1 	bl	8003c60 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8003c9e:	4603      	mov	r3, r0
    }
 8003ca0:	4618      	mov	r0, r3
 8003ca2:	370c      	adds	r7, #12
 8003ca4:	46bd      	mov	sp, r7
 8003ca6:	bd90      	pop	{r4, r7, pc}

08003ca8 <_ZNSt8__detail9__variant5__getILj4ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8003ca8:	b590      	push	{r4, r7, lr}
 8003caa:	b083      	sub	sp, #12
 8003cac:	af00      	add	r7, sp, #0
 8003cae:	7138      	strb	r0, [r7, #4]
 8003cb0:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8003cb2:	6838      	ldr	r0, [r7, #0]
 8003cb4:	f7fe f919 	bl	8001eea <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8003cb8:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8003cba:	4619      	mov	r1, r3
 8003cbc:	4620      	mov	r0, r4
 8003cbe:	f7ff ffe1 	bl	8003c84 <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8003cc2:	4603      	mov	r3, r0
    }
 8003cc4:	4618      	mov	r0, r3
 8003cc6:	370c      	adds	r7, #12
 8003cc8:	46bd      	mov	sp, r7
 8003cca:	bd90      	pop	{r4, r7, pc}

08003ccc <_ZNSt8__detail9__variant5__getILj4ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8003ccc:	b590      	push	{r4, r7, lr}
 8003cce:	b083      	sub	sp, #12
 8003cd0:	af00      	add	r7, sp, #0
 8003cd2:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8003cd4:	6878      	ldr	r0, [r7, #4]
 8003cd6:	f7fe f8fd 	bl	8001ed4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8003cda:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8003cdc:	4619      	mov	r1, r3
 8003cde:	4620      	mov	r0, r4
 8003ce0:	f7ff ffe2 	bl	8003ca8 <_ZNSt8__detail9__variant5__getILj4ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8003ce4:	4603      	mov	r3, r0
    }
 8003ce6:	4618      	mov	r0, r3
 8003ce8:	370c      	adds	r7, #12
 8003cea:	46bd      	mov	sp, r7
 8003cec:	bd90      	pop	{r4, r7, pc}

08003cee <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj4EEEE28__element_by_index_or_cookieILj4ESM_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8003cee:	b580      	push	{r7, lr}
 8003cf0:	b082      	sub	sp, #8
 8003cf2:	af00      	add	r7, sp, #0
 8003cf4:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8003cf6:	6878      	ldr	r0, [r7, #4]
 8003cf8:	f7fe f8ec 	bl	8001ed4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8003cfc:	4603      	mov	r3, r0
 8003cfe:	4618      	mov	r0, r3
 8003d00:	f7ff ffe4 	bl	8003ccc <_ZNSt8__detail9__variant5__getILj4ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8003d04:	4603      	mov	r3, r0
	}
 8003d06:	4618      	mov	r0, r3
 8003d08:	3708      	adds	r7, #8
 8003d0a:	46bd      	mov	sp, r7
 8003d0c:	bd80      	pop	{r7, pc}

08003d0e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj4EEEE19__visit_invoke_implESJ_SM_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8003d0e:	b5b0      	push	{r4, r5, r7, lr}
 8003d10:	b082      	sub	sp, #8
 8003d12:	af00      	add	r7, sp, #0
 8003d14:	6078      	str	r0, [r7, #4]
 8003d16:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8003d18:	6878      	ldr	r0, [r7, #4]
 8003d1a:	f000 ffe5 	bl	8004ce8 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8003d1e:	4604      	mov	r4, r0
 8003d20:	6838      	ldr	r0, [r7, #0]
 8003d22:	f7fe f8d7 	bl	8001ed4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8003d26:	4603      	mov	r3, r0
 8003d28:	4618      	mov	r0, r3
 8003d2a:	f7ff ffe0 	bl	8003cee <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj4EEEE28__element_by_index_or_cookieILj4ESM_EEDcOT0_>
 8003d2e:	4603      	mov	r3, r0
 8003d30:	4619      	mov	r1, r3
 8003d32:	4620      	mov	r0, r4
 8003d34:	f001 f87a 	bl	8004e2c <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_JRSC_EENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>
		std::forward<_Variants>(__vars))...);
 8003d38:	462b      	mov	r3, r5
      }
 8003d3a:	4618      	mov	r0, r3
 8003d3c:	3708      	adds	r7, #8
 8003d3e:	46bd      	mov	sp, r7
 8003d40:	bdb0      	pop	{r4, r5, r7, pc}

08003d42 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj4EEEE17__do_visit_invokeESJ_SM_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8003d42:	b5b0      	push	{r4, r5, r7, lr}
 8003d44:	b082      	sub	sp, #8
 8003d46:	af00      	add	r7, sp, #0
 8003d48:	6078      	str	r0, [r7, #4]
 8003d4a:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8003d4c:	6878      	ldr	r0, [r7, #4]
 8003d4e:	f000 ffcb 	bl	8004ce8 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8003d52:	4604      	mov	r4, r0
 8003d54:	6838      	ldr	r0, [r7, #0]
 8003d56:	f7fe f8bd 	bl	8001ed4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8003d5a:	4603      	mov	r3, r0
 8003d5c:	4619      	mov	r1, r3
 8003d5e:	4620      	mov	r0, r4
 8003d60:	f7ff ffd5 	bl	8003d0e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj4EEEE19__visit_invoke_implESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 8003d64:	462b      	mov	r3, r5
      }
 8003d66:	4618      	mov	r0, r3
 8003d68:	3708      	adds	r7, #8
 8003d6a:	46bd      	mov	sp, r7
 8003d6c:	bdb0      	pop	{r4, r5, r7, pc}

08003d6e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj4EEEE14__visit_invokeESJ_SM_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8003d6e:	b5b0      	push	{r4, r5, r7, lr}
 8003d70:	b082      	sub	sp, #8
 8003d72:	af00      	add	r7, sp, #0
 8003d74:	6078      	str	r0, [r7, #4]
 8003d76:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8003d78:	6878      	ldr	r0, [r7, #4]
 8003d7a:	f000 ffb5 	bl	8004ce8 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8003d7e:	4604      	mov	r4, r0
 8003d80:	6838      	ldr	r0, [r7, #0]
 8003d82:	f7fe f8a7 	bl	8001ed4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8003d86:	4603      	mov	r3, r0
 8003d88:	4619      	mov	r1, r3
 8003d8a:	4620      	mov	r0, r4
 8003d8c:	f7ff ffd9 	bl	8003d42 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj4EEEE17__do_visit_invokeESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 8003d90:	462b      	mov	r3, r5
      }
 8003d92:	4618      	mov	r0, r3
 8003d94:	3708      	adds	r7, #8
 8003d96:	46bd      	mov	sp, r7
 8003d98:	bdb0      	pop	{r4, r5, r7, pc}

08003d9a <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbS9_SD_EEEJLj5EEE9_M_accessIJEEERKSN_jDpT_>:
	_M_access(size_t __first_index, _Args... __rest_indices) const
 8003d9a:	b580      	push	{r7, lr}
 8003d9c:	b082      	sub	sp, #8
 8003d9e:	af00      	add	r7, sp, #0
 8003da0:	6078      	str	r0, [r7, #4]
 8003da2:	6039      	str	r1, [r7, #0]
	    ._M_access(__rest_indices...);
 8003da4:	683b      	ldr	r3, [r7, #0]
 8003da6:	009b      	lsls	r3, r3, #2
 8003da8:	687a      	ldr	r2, [r7, #4]
 8003daa:	4413      	add	r3, r2
 8003dac:	4618      	mov	r0, r3
 8003dae:	f001 f854 	bl	8004e5a <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbS9_SD_EEEJEE9_M_accessEv>
 8003db2:	4603      	mov	r3, r0
	}
 8003db4:	4618      	mov	r0, r3
 8003db6:	3708      	adds	r7, #8
 8003db8:	46bd      	mov	sp, r7
 8003dba:	bd80      	pop	{r7, pc}

08003dbc <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_JRSt7variantIJifbS8_SC_EEEEDcOT1_DpOT2_>:
    __do_visit(_Visitor&& __visitor, _Variants&&... __variants)
 8003dbc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003dbe:	b085      	sub	sp, #20
 8003dc0:	af00      	add	r7, sp, #0
 8003dc2:	6078      	str	r0, [r7, #4]
 8003dc4:	6039      	str	r1, [r7, #0]
      constexpr auto& __vtable = __detail::__variant::__gen_vtable<
 8003dc6:	4b0f      	ldr	r3, [pc, #60]	; (8003e04 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_JRSt7variantIJifbS8_SC_EEEEDcOT1_DpOT2_+0x48>)
 8003dc8:	60fb      	str	r3, [r7, #12]
      auto __func_ptr = __vtable._M_access(__variants.index()...);
 8003dca:	6838      	ldr	r0, [r7, #0]
 8003dcc:	f7fd fba6 	bl	800151c <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv>
 8003dd0:	4603      	mov	r3, r0
 8003dd2:	4619      	mov	r1, r3
 8003dd4:	68f8      	ldr	r0, [r7, #12]
 8003dd6:	f7ff ffe0 	bl	8003d9a <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbS9_SD_EEEJLj5EEE9_M_accessIJEEERKSN_jDpT_>
 8003dda:	4603      	mov	r3, r0
 8003ddc:	681b      	ldr	r3, [r3, #0]
 8003dde:	60bb      	str	r3, [r7, #8]
      return (*__func_ptr)(std::forward<_Visitor>(__visitor),
 8003de0:	68bc      	ldr	r4, [r7, #8]
 8003de2:	6878      	ldr	r0, [r7, #4]
 8003de4:	f001 f844 	bl	8004e70 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8003de8:	4605      	mov	r5, r0
 8003dea:	6838      	ldr	r0, [r7, #0]
 8003dec:	f7fe f872 	bl	8001ed4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8003df0:	4603      	mov	r3, r0
 8003df2:	4619      	mov	r1, r3
 8003df4:	4628      	mov	r0, r5
 8003df6:	47a0      	blx	r4
			   std::forward<_Variants>(__variants)...);
 8003df8:	4633      	mov	r3, r6
    }
 8003dfa:	4618      	mov	r0, r3
 8003dfc:	3714      	adds	r7, #20
 8003dfe:	46bd      	mov	sp, r7
 8003e00:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003e02:	bf00      	nop
 8003e04:	080281e4 	.word	0x080281e4

08003e08 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE13_M_reset_implEv>:
      constexpr void _M_reset_impl()
 8003e08:	b580      	push	{r7, lr}
 8003e0a:	b084      	sub	sp, #16
 8003e0c:	af00      	add	r7, sp, #0
 8003e0e:	6078      	str	r0, [r7, #4]
	__do_visit([](auto&& __this_mem) mutable
 8003e10:	6878      	ldr	r0, [r7, #4]
 8003e12:	f7ff fd13 	bl	800383c <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEERNSt8__detail9__variant16_Variant_storageILb0EJifbS5_S9_EEEEDcOT0_>
 8003e16:	4602      	mov	r2, r0
 8003e18:	f107 030c 	add.w	r3, r7, #12
 8003e1c:	4611      	mov	r1, r2
 8003e1e:	4618      	mov	r0, r3
 8003e20:	f7ff ffcc 	bl	8003dbc <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_JRSt7variantIJifbS8_SC_EEEEDcOT1_DpOT2_>
      }
 8003e24:	bf00      	nop
 8003e26:	3710      	adds	r7, #16
 8003e28:	46bd      	mov	sp, r7
 8003e2a:	bd80      	pop	{r7, pc}

08003e2c <_ZN9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 8003e2c:	b480      	push	{r7}
 8003e2e:	b083      	sub	sp, #12
 8003e30:	af00      	add	r7, sp, #0
 8003e32:	6078      	str	r0, [r7, #4]
 8003e34:	6039      	str	r1, [r7, #0]
      : _M_current(__i) { }
 8003e36:	683b      	ldr	r3, [r7, #0]
 8003e38:	681a      	ldr	r2, [r3, #0]
 8003e3a:	687b      	ldr	r3, [r7, #4]
 8003e3c:	601a      	str	r2, [r3, #0]
 8003e3e:	687b      	ldr	r3, [r7, #4]
 8003e40:	4618      	mov	r0, r3
 8003e42:	370c      	adds	r7, #12
 8003e44:	46bd      	mov	sp, r7
 8003e46:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003e4a:	4770      	bx	lr

08003e4c <_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8003e4c:	b480      	push	{r7}
 8003e4e:	b083      	sub	sp, #12
 8003e50:	af00      	add	r7, sp, #0
 8003e52:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8003e54:	687b      	ldr	r3, [r7, #4]
 8003e56:	4618      	mov	r0, r3
 8003e58:	370c      	adds	r7, #12
 8003e5a:	46bd      	mov	sp, r7
 8003e5c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003e60:	4770      	bx	lr

08003e62 <_ZSt7forwardISt17integral_constantIjLj0EEEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8003e62:	b480      	push	{r7}
 8003e64:	b083      	sub	sp, #12
 8003e66:	af00      	add	r7, sp, #0
 8003e68:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8003e6a:	687b      	ldr	r3, [r7, #4]
 8003e6c:	4618      	mov	r0, r3
 8003e6e:	370c      	adds	r7, #12
 8003e70:	46bd      	mov	sp, r7
 8003e72:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003e76:	4770      	bx	lr

08003e78 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSERKSE_EUlOT_T0_E_JRKiSt17integral_constantIjLj0EEEESH_St14__invoke_otherOSJ_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8003e78:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003e7c:	b084      	sub	sp, #16
 8003e7e:	af00      	add	r7, sp, #0
 8003e80:	7338      	strb	r0, [r7, #12]
 8003e82:	60b9      	str	r1, [r7, #8]
 8003e84:	607a      	str	r2, [r7, #4]
 8003e86:	603b      	str	r3, [r7, #0]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8003e88:	68b8      	ldr	r0, [r7, #8]
 8003e8a:	f7ff f9ae 	bl	80031ea <_ZSt7forwardIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8003e8e:	4604      	mov	r4, r0
 8003e90:	6878      	ldr	r0, [r7, #4]
 8003e92:	f7ff ffdb 	bl	8003e4c <_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE>
 8003e96:	4605      	mov	r5, r0
 8003e98:	6838      	ldr	r0, [r7, #0]
 8003e9a:	f7ff ffe2 	bl	8003e62 <_ZSt7forwardISt17integral_constantIjLj0EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8003e9e:	4632      	mov	r2, r6
 8003ea0:	4629      	mov	r1, r5
 8003ea2:	4620      	mov	r0, r4
 8003ea4:	f000 ffef 	bl	8004e86 <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_ENUlOT_T0_E_clIRKiSt17integral_constantIjLj0EEEENS0_20__variant_idx_cookieESG_SH_>
 8003ea8:	4643      	mov	r3, r8
 8003eaa:	4618      	mov	r0, r3
 8003eac:	3710      	adds	r7, #16
 8003eae:	46bd      	mov	sp, r7
 8003eb0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08003eb4 <_ZSt7forwardIRKfEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8003eb4:	b480      	push	{r7}
 8003eb6:	b083      	sub	sp, #12
 8003eb8:	af00      	add	r7, sp, #0
 8003eba:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8003ebc:	687b      	ldr	r3, [r7, #4]
 8003ebe:	4618      	mov	r0, r3
 8003ec0:	370c      	adds	r7, #12
 8003ec2:	46bd      	mov	sp, r7
 8003ec4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003ec8:	4770      	bx	lr

08003eca <_ZSt7forwardISt17integral_constantIjLj1EEEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8003eca:	b480      	push	{r7}
 8003ecc:	b083      	sub	sp, #12
 8003ece:	af00      	add	r7, sp, #0
 8003ed0:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8003ed2:	687b      	ldr	r3, [r7, #4]
 8003ed4:	4618      	mov	r0, r3
 8003ed6:	370c      	adds	r7, #12
 8003ed8:	46bd      	mov	sp, r7
 8003eda:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003ede:	4770      	bx	lr

08003ee0 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSERKSE_EUlOT_T0_E_JRKfSt17integral_constantIjLj1EEEESH_St14__invoke_otherOSJ_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8003ee0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003ee4:	b084      	sub	sp, #16
 8003ee6:	af00      	add	r7, sp, #0
 8003ee8:	7338      	strb	r0, [r7, #12]
 8003eea:	60b9      	str	r1, [r7, #8]
 8003eec:	607a      	str	r2, [r7, #4]
 8003eee:	603b      	str	r3, [r7, #0]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8003ef0:	68b8      	ldr	r0, [r7, #8]
 8003ef2:	f7ff f97a 	bl	80031ea <_ZSt7forwardIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8003ef6:	4604      	mov	r4, r0
 8003ef8:	6878      	ldr	r0, [r7, #4]
 8003efa:	f7ff ffdb 	bl	8003eb4 <_ZSt7forwardIRKfEOT_RNSt16remove_referenceIS2_E4typeE>
 8003efe:	4605      	mov	r5, r0
 8003f00:	6838      	ldr	r0, [r7, #0]
 8003f02:	f7ff ffe2 	bl	8003eca <_ZSt7forwardISt17integral_constantIjLj1EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8003f06:	4632      	mov	r2, r6
 8003f08:	4629      	mov	r1, r5
 8003f0a:	4620      	mov	r0, r4
 8003f0c:	f001 f80a 	bl	8004f24 <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_ENUlOT_T0_E_clIRKfSt17integral_constantIjLj1EEEENS0_20__variant_idx_cookieESG_SH_>
 8003f10:	4643      	mov	r3, r8
 8003f12:	4618      	mov	r0, r3
 8003f14:	3710      	adds	r7, #16
 8003f16:	46bd      	mov	sp, r7
 8003f18:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08003f1c <_ZSt7forwardIRKbEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8003f1c:	b480      	push	{r7}
 8003f1e:	b083      	sub	sp, #12
 8003f20:	af00      	add	r7, sp, #0
 8003f22:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8003f24:	687b      	ldr	r3, [r7, #4]
 8003f26:	4618      	mov	r0, r3
 8003f28:	370c      	adds	r7, #12
 8003f2a:	46bd      	mov	sp, r7
 8003f2c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f30:	4770      	bx	lr

08003f32 <_ZSt7forwardISt17integral_constantIjLj2EEEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8003f32:	b480      	push	{r7}
 8003f34:	b083      	sub	sp, #12
 8003f36:	af00      	add	r7, sp, #0
 8003f38:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8003f3a:	687b      	ldr	r3, [r7, #4]
 8003f3c:	4618      	mov	r0, r3
 8003f3e:	370c      	adds	r7, #12
 8003f40:	46bd      	mov	sp, r7
 8003f42:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f46:	4770      	bx	lr

08003f48 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSERKSE_EUlOT_T0_E_JRKbSt17integral_constantIjLj2EEEESH_St14__invoke_otherOSJ_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8003f48:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003f4c:	b084      	sub	sp, #16
 8003f4e:	af00      	add	r7, sp, #0
 8003f50:	7338      	strb	r0, [r7, #12]
 8003f52:	60b9      	str	r1, [r7, #8]
 8003f54:	607a      	str	r2, [r7, #4]
 8003f56:	603b      	str	r3, [r7, #0]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8003f58:	68b8      	ldr	r0, [r7, #8]
 8003f5a:	f7ff f946 	bl	80031ea <_ZSt7forwardIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8003f5e:	4604      	mov	r4, r0
 8003f60:	6878      	ldr	r0, [r7, #4]
 8003f62:	f7ff ffdb 	bl	8003f1c <_ZSt7forwardIRKbEOT_RNSt16remove_referenceIS2_E4typeE>
 8003f66:	4605      	mov	r5, r0
 8003f68:	6838      	ldr	r0, [r7, #0]
 8003f6a:	f7ff ffe2 	bl	8003f32 <_ZSt7forwardISt17integral_constantIjLj2EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8003f6e:	4632      	mov	r2, r6
 8003f70:	4629      	mov	r1, r5
 8003f72:	4620      	mov	r0, r4
 8003f74:	f001 f825 	bl	8004fc2 <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_ENUlOT_T0_E_clIRKbSt17integral_constantIjLj2EEEENS0_20__variant_idx_cookieESG_SH_>
 8003f78:	4643      	mov	r3, r8
 8003f7a:	4618      	mov	r0, r3
 8003f7c:	3710      	adds	r7, #16
 8003f7e:	46bd      	mov	sp, r7
 8003f80:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08003f84 <_ZNK9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE6_M_ptrEv>:
      _Tp*
      _M_ptr() noexcept
      { return static_cast<_Tp*>(_M_addr()); }

      const _Tp*
      _M_ptr() const noexcept
 8003f84:	b580      	push	{r7, lr}
 8003f86:	b082      	sub	sp, #8
 8003f88:	af00      	add	r7, sp, #0
 8003f8a:	6078      	str	r0, [r7, #4]
      { return static_cast<const _Tp*>(_M_addr()); }
 8003f8c:	6878      	ldr	r0, [r7, #4]
 8003f8e:	f001 f868 	bl	8005062 <_ZNK9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7_M_addrEv>
 8003f92:	4603      	mov	r3, r0
 8003f94:	4618      	mov	r0, r3
 8003f96:	3708      	adds	r7, #8
 8003f98:	46bd      	mov	sp, r7
 8003f9a:	bd80      	pop	{r7, pc}

08003f9c <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8003f9c:	b480      	push	{r7}
 8003f9e:	b083      	sub	sp, #12
 8003fa0:	af00      	add	r7, sp, #0
 8003fa2:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8003fa4:	687b      	ldr	r3, [r7, #4]
 8003fa6:	4618      	mov	r0, r3
 8003fa8:	370c      	adds	r7, #12
 8003faa:	46bd      	mov	sp, r7
 8003fac:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003fb0:	4770      	bx	lr

08003fb2 <_ZSt7forwardISt17integral_constantIjLj3EEEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8003fb2:	b480      	push	{r7}
 8003fb4:	b083      	sub	sp, #12
 8003fb6:	af00      	add	r7, sp, #0
 8003fb8:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8003fba:	687b      	ldr	r3, [r7, #4]
 8003fbc:	4618      	mov	r0, r3
 8003fbe:	370c      	adds	r7, #12
 8003fc0:	46bd      	mov	sp, r7
 8003fc2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003fc6:	4770      	bx	lr

08003fc8 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSERKSE_EUlOT_T0_E_JRKS9_St17integral_constantIjLj3EEEESH_St14__invoke_otherOSJ_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8003fc8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003fcc:	b084      	sub	sp, #16
 8003fce:	af00      	add	r7, sp, #0
 8003fd0:	7338      	strb	r0, [r7, #12]
 8003fd2:	60b9      	str	r1, [r7, #8]
 8003fd4:	607a      	str	r2, [r7, #4]
 8003fd6:	603b      	str	r3, [r7, #0]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8003fd8:	68b8      	ldr	r0, [r7, #8]
 8003fda:	f7ff f906 	bl	80031ea <_ZSt7forwardIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8003fde:	4604      	mov	r4, r0
 8003fe0:	6878      	ldr	r0, [r7, #4]
 8003fe2:	f7ff ffdb 	bl	8003f9c <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 8003fe6:	4605      	mov	r5, r0
 8003fe8:	6838      	ldr	r0, [r7, #0]
 8003fea:	f7ff ffe2 	bl	8003fb2 <_ZSt7forwardISt17integral_constantIjLj3EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8003fee:	4632      	mov	r2, r6
 8003ff0:	4629      	mov	r1, r5
 8003ff2:	4620      	mov	r0, r4
 8003ff4:	f001 f840 	bl	8005078 <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_ENUlOT_T0_E_clIRKS7_St17integral_constantIjLj3EEEENS0_20__variant_idx_cookieESG_SH_>
 8003ff8:	4643      	mov	r3, r8
 8003ffa:	4618      	mov	r0, r3
 8003ffc:	3710      	adds	r7, #16
 8003ffe:	46bd      	mov	sp, r7
 8004000:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08004004 <_ZNK9__gnu_cxx16__aligned_membufISt6vectorI6SymbolSaIS2_EEE6_M_ptrEv>:
      _M_ptr() const noexcept
 8004004:	b580      	push	{r7, lr}
 8004006:	b082      	sub	sp, #8
 8004008:	af00      	add	r7, sp, #0
 800400a:	6078      	str	r0, [r7, #4]
      { return static_cast<const _Tp*>(_M_addr()); }
 800400c:	6878      	ldr	r0, [r7, #4]
 800400e:	f001 f8b7 	bl	8005180 <_ZNK9__gnu_cxx16__aligned_membufISt6vectorI6SymbolSaIS2_EEE7_M_addrEv>
 8004012:	4603      	mov	r3, r0
 8004014:	4618      	mov	r0, r3
 8004016:	3708      	adds	r7, #8
 8004018:	46bd      	mov	sp, r7
 800401a:	bd80      	pop	{r7, pc}

0800401c <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800401c:	b480      	push	{r7}
 800401e:	b083      	sub	sp, #12
 8004020:	af00      	add	r7, sp, #0
 8004022:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8004024:	687b      	ldr	r3, [r7, #4]
 8004026:	4618      	mov	r0, r3
 8004028:	370c      	adds	r7, #12
 800402a:	46bd      	mov	sp, r7
 800402c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004030:	4770      	bx	lr

08004032 <_ZSt7forwardISt17integral_constantIjLj4EEEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8004032:	b480      	push	{r7}
 8004034:	b083      	sub	sp, #12
 8004036:	af00      	add	r7, sp, #0
 8004038:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800403a:	687b      	ldr	r3, [r7, #4]
 800403c:	4618      	mov	r0, r3
 800403e:	370c      	adds	r7, #12
 8004040:	46bd      	mov	sp, r7
 8004042:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004046:	4770      	bx	lr

08004048 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSERKSE_EUlOT_T0_E_JRKSD_St17integral_constantIjLj4EEEESH_St14__invoke_otherOSJ_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8004048:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800404c:	b084      	sub	sp, #16
 800404e:	af00      	add	r7, sp, #0
 8004050:	7338      	strb	r0, [r7, #12]
 8004052:	60b9      	str	r1, [r7, #8]
 8004054:	607a      	str	r2, [r7, #4]
 8004056:	603b      	str	r3, [r7, #0]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8004058:	68b8      	ldr	r0, [r7, #8]
 800405a:	f7ff f8c6 	bl	80031ea <_ZSt7forwardIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 800405e:	4604      	mov	r4, r0
 8004060:	6878      	ldr	r0, [r7, #4]
 8004062:	f7ff ffdb 	bl	800401c <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>
 8004066:	4605      	mov	r5, r0
 8004068:	6838      	ldr	r0, [r7, #0]
 800406a:	f7ff ffe2 	bl	8004032 <_ZSt7forwardISt17integral_constantIjLj4EEEOT_RNSt16remove_referenceIS2_E4typeE>
 800406e:	4632      	mov	r2, r6
 8004070:	4629      	mov	r1, r5
 8004072:	4620      	mov	r0, r4
 8004074:	f001 f88f 	bl	8005196 <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_ENUlOT_T0_E_clIRKSB_St17integral_constantIjLj4EEEENS0_20__variant_idx_cookieESG_SH_>
 8004078:	4643      	mov	r3, r8
 800407a:	4618      	mov	r0, r3
 800407c:	3710      	adds	r7, #16
 800407e:	46bd      	mov	sp, r7
 8004080:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08004084 <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_>:
   *  and are constant time.  For other %iterator classes they are linear time.
  */
  template<typename _InputIterator>
    inline _GLIBCXX17_CONSTEXPR
    typename iterator_traits<_InputIterator>::difference_type
    distance(_InputIterator __first, _InputIterator __last)
 8004084:	b5b0      	push	{r4, r5, r7, lr}
 8004086:	b082      	sub	sp, #8
 8004088:	af00      	add	r7, sp, #0
 800408a:	6078      	str	r0, [r7, #4]
 800408c:	6039      	str	r1, [r7, #0]
    {
      // concept requirements -- taken care of in __distance
      return std::__distance(__first, __last,
 800408e:	687c      	ldr	r4, [r7, #4]
			     std::__iterator_category(__first));
 8004090:	1d3b      	adds	r3, r7, #4
 8004092:	4618      	mov	r0, r3
 8004094:	f001 f8e8 	bl	8005268 <_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__distance(__first, __last,
 8004098:	462a      	mov	r2, r5
 800409a:	6839      	ldr	r1, [r7, #0]
 800409c:	4620      	mov	r0, r4
 800409e:	f001 f8ed 	bl	800527c <_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>
 80040a2:	4603      	mov	r3, r0
    }
 80040a4:	4618      	mov	r0, r3
 80040a6:	3708      	adds	r7, #8
 80040a8:	46bd      	mov	sp, r7
 80040aa:	bdb0      	pop	{r4, r5, r7, pc}

080040ac <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>:
      }

  template<typename _CharT, typename _Traits, typename _Alloc>
    template<typename _InIterator>
      void
      basic_string<_CharT, _Traits, _Alloc>::
 80040ac:	b580      	push	{r7, lr}
 80040ae:	b086      	sub	sp, #24
 80040b0:	af00      	add	r7, sp, #0
 80040b2:	60f8      	str	r0, [r7, #12]
 80040b4:	60b9      	str	r1, [r7, #8]
 80040b6:	607a      	str	r2, [r7, #4]
 80040b8:	703b      	strb	r3, [r7, #0]
      _M_construct(_InIterator __beg, _InIterator __end,
		   std::forward_iterator_tag)
      {
	// NB: Not required, but considered best practice.
	if (__gnu_cxx::__is_null_pointer(__beg) && __beg != __end)
 80040ba:	68b8      	ldr	r0, [r7, #8]
 80040bc:	f001 f8c4 	bl	8005248 <_ZN9__gnu_cxx17__is_null_pointerIKcEEbPT_>
 80040c0:	4603      	mov	r3, r0
 80040c2:	2b00      	cmp	r3, #0
 80040c4:	d005      	beq.n	80040d2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x26>
 80040c6:	68ba      	ldr	r2, [r7, #8]
 80040c8:	687b      	ldr	r3, [r7, #4]
 80040ca:	429a      	cmp	r2, r3
 80040cc:	d001      	beq.n	80040d2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x26>
 80040ce:	2301      	movs	r3, #1
 80040d0:	e000      	b.n	80040d4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x28>
 80040d2:	2300      	movs	r3, #0
 80040d4:	2b00      	cmp	r3, #0
 80040d6:	d002      	beq.n	80040de <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x32>
	  std::__throw_logic_error(__N("basic_string::"
 80040d8:	4817      	ldr	r0, [pc, #92]	; (8004138 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x8c>)
 80040da:	f01e fc6c 	bl	80229b6 <_ZSt19__throw_logic_errorPKc>
				       "_M_construct null not valid"));

	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
 80040de:	6879      	ldr	r1, [r7, #4]
 80040e0:	68b8      	ldr	r0, [r7, #8]
 80040e2:	f7ff ffcf 	bl	8004084 <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_>
 80040e6:	4603      	mov	r3, r0
 80040e8:	617b      	str	r3, [r7, #20]

	if (__dnew > size_type(_S_local_capacity))
 80040ea:	697b      	ldr	r3, [r7, #20]
 80040ec:	2b0f      	cmp	r3, #15
 80040ee:	d910      	bls.n	8004112 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x66>
	  {
	    _M_data(_M_create(__dnew, size_type(0)));
 80040f0:	f107 0314 	add.w	r3, r7, #20
 80040f4:	2200      	movs	r2, #0
 80040f6:	4619      	mov	r1, r3
 80040f8:	68f8      	ldr	r0, [r7, #12]
 80040fa:	f01e fd2f 	bl	8022b5c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>
 80040fe:	4603      	mov	r3, r0
 8004100:	4619      	mov	r1, r3
 8004102:	68f8      	ldr	r0, [r7, #12]
 8004104:	f01e fd1c 	bl	8022b40 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc>
	    _M_capacity(__dnew);
 8004108:	697b      	ldr	r3, [r7, #20]
 800410a:	4619      	mov	r1, r3
 800410c:	68f8      	ldr	r0, [r7, #12]
 800410e:	f01e fd1d 	bl	8022b4c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEj>
	  }

	// Check for out_of_range and length_error exceptions.
	__try
	  { this->_S_copy_chars(_M_data(), __beg, __end); }
 8004112:	68f8      	ldr	r0, [r7, #12]
 8004114:	f01e fd16 	bl	8022b44 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
 8004118:	4603      	mov	r3, r0
 800411a:	687a      	ldr	r2, [r7, #4]
 800411c:	68b9      	ldr	r1, [r7, #8]
 800411e:	4618      	mov	r0, r3
 8004120:	f01e fd86 	bl	8022c30 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_>
	  {
	    _M_dispose();
	    __throw_exception_again;
	  }

	_M_set_length(__dnew);
 8004124:	697b      	ldr	r3, [r7, #20]
 8004126:	4619      	mov	r1, r3
 8004128:	68f8      	ldr	r0, [r7, #12]
 800412a:	f01e fd11 	bl	8022b50 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEj>
      }
 800412e:	bf00      	nop
 8004130:	3718      	adds	r7, #24
 8004132:	46bd      	mov	sp, r7
 8004134:	bd80      	pop	{r7, pc}
 8004136:	bf00      	nop
 8004138:	08027588 	.word	0x08027588

0800413c <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEC1Ev>:
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 800413c:	b480      	push	{r7}
 800413e:	b083      	sub	sp, #12
 8004140:	af00      	add	r7, sp, #0
 8004142:	6078      	str	r0, [r7, #4]
 8004144:	687b      	ldr	r3, [r7, #4]
 8004146:	4618      	mov	r0, r3
 8004148:	370c      	adds	r7, #12
 800414a:	46bd      	mov	sp, r7
 800414c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004150:	4770      	bx	lr

08004152 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEED1Ev>:
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 8004152:	b480      	push	{r7}
 8004154:	b083      	sub	sp, #12
 8004156:	af00      	add	r7, sp, #0
 8004158:	6078      	str	r0, [r7, #4]
 800415a:	687b      	ldr	r3, [r7, #4]
 800415c:	4618      	mov	r0, r3
 800415e:	370c      	adds	r7, #12
 8004160:	46bd      	mov	sp, r7
 8004162:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004166:	4770      	bx	lr

08004168 <_ZSt4moveIRSaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEEONSt16remove_referenceIT_E4typeEOS9_>:
   *  @param  __t  A thing of arbitrary type.
   *  @return The parameter cast to an rvalue-reference to allow moving it.
  */
  template<typename _Tp>
    constexpr typename std::remove_reference<_Tp>::type&&
    move(_Tp&& __t) noexcept
 8004168:	b480      	push	{r7}
 800416a:	b083      	sub	sp, #12
 800416c:	af00      	add	r7, sp, #0
 800416e:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 8004170:	687b      	ldr	r3, [r7, #4]
 8004172:	4618      	mov	r0, r3
 8004174:	370c      	adds	r7, #12
 8004176:	46bd      	mov	sp, r7
 8004178:	f85d 7b04 	ldr.w	r7, [sp], #4
 800417c:	4770      	bx	lr

0800417e <_ZNSaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEC1ERKS5_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
 800417e:	b580      	push	{r7, lr}
 8004180:	b082      	sub	sp, #8
 8004182:	af00      	add	r7, sp, #0
 8004184:	6078      	str	r0, [r7, #4]
 8004186:	6039      	str	r1, [r7, #0]
      : __allocator_base<_Tp>(__a) { }
 8004188:	6839      	ldr	r1, [r7, #0]
 800418a:	6878      	ldr	r0, [r7, #4]
 800418c:	f001 f885 	bl	800529a <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEC1ERKS7_>
 8004190:	687b      	ldr	r3, [r7, #4]
 8004192:	4618      	mov	r0, r3
 8004194:	3708      	adds	r7, #8
 8004196:	46bd      	mov	sp, r7
 8004198:	bd80      	pop	{r7, pc}

0800419a <_ZNSt20_Rb_tree_key_compareISt4lessIcEEC1ERKS1_>:
      _Rb_tree_key_compare(const _Key_compare& __comp)
 800419a:	b480      	push	{r7}
 800419c:	b083      	sub	sp, #12
 800419e:	af00      	add	r7, sp, #0
 80041a0:	6078      	str	r0, [r7, #4]
 80041a2:	6039      	str	r1, [r7, #0]
      { }
 80041a4:	687b      	ldr	r3, [r7, #4]
 80041a6:	4618      	mov	r0, r3
 80041a8:	370c      	adds	r7, #12
 80041aa:	46bd      	mov	sp, r7
 80041ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80041b0:	4770      	bx	lr

080041b2 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base>:
      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 80041b2:	b480      	push	{r7}
 80041b4:	b083      	sub	sp, #12
 80041b6:	af00      	add	r7, sp, #0
 80041b8:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(__x->_M_right); }
 80041ba:	687b      	ldr	r3, [r7, #4]
 80041bc:	68db      	ldr	r3, [r3, #12]
 80041be:	4618      	mov	r0, r3
 80041c0:	370c      	adds	r7, #12
 80041c2:	46bd      	mov	sp, r7
 80041c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80041c8:	4770      	bx	lr

080041ca <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE7_S_leftEPSt18_Rb_tree_node_base>:
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 80041ca:	b480      	push	{r7}
 80041cc:	b083      	sub	sp, #12
 80041ce:	af00      	add	r7, sp, #0
 80041d0:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(__x->_M_left); }
 80041d2:	687b      	ldr	r3, [r7, #4]
 80041d4:	689b      	ldr	r3, [r3, #8]
 80041d6:	4618      	mov	r0, r3
 80041d8:	370c      	adds	r7, #12
 80041da:	46bd      	mov	sp, r7
 80041dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80041e0:	4770      	bx	lr

080041e2 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS3_E>:
      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 80041e2:	b580      	push	{r7, lr}
 80041e4:	b082      	sub	sp, #8
 80041e6:	af00      	add	r7, sp, #0
 80041e8:	6078      	str	r0, [r7, #4]
 80041ea:	6039      	str	r1, [r7, #0]
	_M_destroy_node(__p);
 80041ec:	6839      	ldr	r1, [r7, #0]
 80041ee:	6878      	ldr	r0, [r7, #4]
 80041f0:	f001 f85f 	bl	80052b2 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS3_E>
	_M_put_node(__p);
 80041f4:	6839      	ldr	r1, [r7, #0]
 80041f6:	6878      	ldr	r0, [r7, #4]
 80041f8:	f001 f870 	bl	80052dc <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS3_E>
      }
 80041fc:	bf00      	nop
 80041fe:	3708      	adds	r7, #8
 8004200:	46bd      	mov	sp, r7
 8004202:	bd80      	pop	{r7, pc}

08004204 <_ZNSt17_Rb_tree_iteratorISt4pairIKc10token_typeEEC1EPSt18_Rb_tree_node_base>:
      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 8004204:	b480      	push	{r7}
 8004206:	b083      	sub	sp, #12
 8004208:	af00      	add	r7, sp, #0
 800420a:	6078      	str	r0, [r7, #4]
 800420c:	6039      	str	r1, [r7, #0]
      : _M_node(__x) { }
 800420e:	687b      	ldr	r3, [r7, #4]
 8004210:	683a      	ldr	r2, [r7, #0]
 8004212:	601a      	str	r2, [r3, #0]
 8004214:	687b      	ldr	r3, [r7, #4]
 8004216:	4618      	mov	r0, r3
 8004218:	370c      	adds	r7, #12
 800421a:	46bd      	mov	sp, r7
 800421c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004220:	4770      	bx	lr

08004222 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8004222:	b590      	push	{r4, r7, lr}
 8004224:	b08d      	sub	sp, #52	; 0x34
 8004226:	af00      	add	r7, sp, #0
 8004228:	60f8      	str	r0, [r7, #12]
 800422a:	60b9      	str	r1, [r7, #8]
 800422c:	607a      	str	r2, [r7, #4]
 800422e:	603b      	str	r3, [r7, #0]
      iterator __pos = __position._M_const_cast();
 8004230:	1d3b      	adds	r3, r7, #4
 8004232:	4618      	mov	r0, r3
 8004234:	f001 f864 	bl	8005300 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKc10token_typeEE13_M_const_castEv>
 8004238:	4603      	mov	r3, r0
 800423a:	61bb      	str	r3, [r7, #24]
      if (__pos._M_node == _M_end())
 800423c:	69bc      	ldr	r4, [r7, #24]
 800423e:	68b8      	ldr	r0, [r7, #8]
 8004240:	f001 f86f 	bl	8005322 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_M_endEv>
 8004244:	4603      	mov	r3, r0
 8004246:	429c      	cmp	r4, r3
 8004248:	bf0c      	ite	eq
 800424a:	2301      	moveq	r3, #1
 800424c:	2300      	movne	r3, #0
 800424e:	b2db      	uxtb	r3, r3
 8004250:	2b00      	cmp	r3, #0
 8004252:	d030      	beq.n	80042b6 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x94>
	  if (size() > 0
 8004254:	68b8      	ldr	r0, [r7, #8]
 8004256:	f001 f870 	bl	800533a <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE4sizeEv>
 800425a:	4603      	mov	r3, r0
	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
 800425c:	2b00      	cmp	r3, #0
 800425e:	d013      	beq.n	8004288 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x66>
 8004260:	68bc      	ldr	r4, [r7, #8]
 8004262:	68b8      	ldr	r0, [r7, #8]
 8004264:	f001 f875 	bl	8005352 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_rightmostEv>
 8004268:	4603      	mov	r3, r0
 800426a:	681b      	ldr	r3, [r3, #0]
 800426c:	4618      	mov	r0, r3
 800426e:	f001 f87c 	bl	800536a <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8004272:	4603      	mov	r3, r0
 8004274:	683a      	ldr	r2, [r7, #0]
 8004276:	4619      	mov	r1, r3
 8004278:	4620      	mov	r0, r4
 800427a:	f001 f882 	bl	8005382 <_ZNKSt4lessIcEclERKcS2_>
 800427e:	4603      	mov	r3, r0
 8004280:	2b00      	cmp	r3, #0
 8004282:	d001      	beq.n	8004288 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x66>
 8004284:	2301      	movs	r3, #1
 8004286:	e000      	b.n	800428a <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x68>
 8004288:	2300      	movs	r3, #0
	  if (size() > 0
 800428a:	2b00      	cmp	r3, #0
 800428c:	d00c      	beq.n	80042a8 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x86>
	    return _Res(0, _M_rightmost());
 800428e:	2300      	movs	r3, #0
 8004290:	61fb      	str	r3, [r7, #28]
 8004292:	68b8      	ldr	r0, [r7, #8]
 8004294:	f001 f85d 	bl	8005352 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_rightmostEv>
 8004298:	4602      	mov	r2, r0
 800429a:	f107 031c 	add.w	r3, r7, #28
 800429e:	4619      	mov	r1, r3
 80042a0:	68f8      	ldr	r0, [r7, #12]
 80042a2:	f001 f883 	bl	80053ac <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 80042a6:	e0db      	b.n	8004460 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
	    return _M_get_insert_unique_pos(__k);
 80042a8:	68fb      	ldr	r3, [r7, #12]
 80042aa:	683a      	ldr	r2, [r7, #0]
 80042ac:	68b9      	ldr	r1, [r7, #8]
 80042ae:	4618      	mov	r0, r3
 80042b0:	f001 f892 	bl	80053d8 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_>
 80042b4:	e0d4      	b.n	8004460 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
      else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
 80042b6:	68bc      	ldr	r4, [r7, #8]
 80042b8:	69bb      	ldr	r3, [r7, #24]
 80042ba:	4618      	mov	r0, r3
 80042bc:	f001 f855 	bl	800536a <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 80042c0:	4603      	mov	r3, r0
 80042c2:	461a      	mov	r2, r3
 80042c4:	6839      	ldr	r1, [r7, #0]
 80042c6:	4620      	mov	r0, r4
 80042c8:	f001 f85b 	bl	8005382 <_ZNKSt4lessIcEclERKcS2_>
 80042cc:	4603      	mov	r3, r0
 80042ce:	2b00      	cmp	r3, #0
 80042d0:	d057      	beq.n	8004382 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x160>
	  iterator __before = __pos;
 80042d2:	69bb      	ldr	r3, [r7, #24]
 80042d4:	617b      	str	r3, [r7, #20]
	  if (__pos._M_node == _M_leftmost()) // begin()
 80042d6:	69bc      	ldr	r4, [r7, #24]
 80042d8:	68b8      	ldr	r0, [r7, #8]
 80042da:	f001 f902 	bl	80054e2 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_leftmostEv>
 80042de:	4603      	mov	r3, r0
 80042e0:	681b      	ldr	r3, [r3, #0]
 80042e2:	429c      	cmp	r4, r3
 80042e4:	bf0c      	ite	eq
 80042e6:	2301      	moveq	r3, #1
 80042e8:	2300      	movne	r3, #0
 80042ea:	b2db      	uxtb	r3, r3
 80042ec:	2b00      	cmp	r3, #0
 80042ee:	d00d      	beq.n	800430c <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0xea>
	    return _Res(_M_leftmost(), _M_leftmost());
 80042f0:	68b8      	ldr	r0, [r7, #8]
 80042f2:	f001 f8f6 	bl	80054e2 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_leftmostEv>
 80042f6:	4604      	mov	r4, r0
 80042f8:	68b8      	ldr	r0, [r7, #8]
 80042fa:	f001 f8f2 	bl	80054e2 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_leftmostEv>
 80042fe:	4603      	mov	r3, r0
 8004300:	461a      	mov	r2, r3
 8004302:	4621      	mov	r1, r4
 8004304:	68f8      	ldr	r0, [r7, #12]
 8004306:	f001 f8f8 	bl	80054fa <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
 800430a:	e0a9      	b.n	8004460 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
 800430c:	68bc      	ldr	r4, [r7, #8]
 800430e:	f107 0314 	add.w	r3, r7, #20
 8004312:	4618      	mov	r0, r3
 8004314:	f001 f90a 	bl	800552c <_ZNSt17_Rb_tree_iteratorISt4pairIKc10token_typeEEmmEv>
 8004318:	4603      	mov	r3, r0
 800431a:	681b      	ldr	r3, [r3, #0]
 800431c:	4618      	mov	r0, r3
 800431e:	f001 f824 	bl	800536a <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8004322:	4603      	mov	r3, r0
 8004324:	683a      	ldr	r2, [r7, #0]
 8004326:	4619      	mov	r1, r3
 8004328:	4620      	mov	r0, r4
 800432a:	f001 f82a 	bl	8005382 <_ZNKSt4lessIcEclERKcS2_>
 800432e:	4603      	mov	r3, r0
 8004330:	2b00      	cmp	r3, #0
 8004332:	d01f      	beq.n	8004374 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x152>
	      if (_S_right(__before._M_node) == 0)
 8004334:	697b      	ldr	r3, [r7, #20]
 8004336:	4618      	mov	r0, r3
 8004338:	f7ff ff3b 	bl	80041b2 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base>
 800433c:	4603      	mov	r3, r0
 800433e:	2b00      	cmp	r3, #0
 8004340:	bf0c      	ite	eq
 8004342:	2301      	moveq	r3, #1
 8004344:	2300      	movne	r3, #0
 8004346:	b2db      	uxtb	r3, r3
 8004348:	2b00      	cmp	r3, #0
 800434a:	d00a      	beq.n	8004362 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x140>
		return _Res(0, __before._M_node);
 800434c:	2300      	movs	r3, #0
 800434e:	623b      	str	r3, [r7, #32]
 8004350:	f107 0214 	add.w	r2, r7, #20
 8004354:	f107 0320 	add.w	r3, r7, #32
 8004358:	4619      	mov	r1, r3
 800435a:	68f8      	ldr	r0, [r7, #12]
 800435c:	f001 f826 	bl	80053ac <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 8004360:	e07e      	b.n	8004460 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
		return _Res(__pos._M_node, __pos._M_node);
 8004362:	f107 0218 	add.w	r2, r7, #24
 8004366:	f107 0318 	add.w	r3, r7, #24
 800436a:	4619      	mov	r1, r3
 800436c:	68f8      	ldr	r0, [r7, #12]
 800436e:	f001 f8c4 	bl	80054fa <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
 8004372:	e075      	b.n	8004460 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
	    return _M_get_insert_unique_pos(__k);
 8004374:	68fb      	ldr	r3, [r7, #12]
 8004376:	683a      	ldr	r2, [r7, #0]
 8004378:	68b9      	ldr	r1, [r7, #8]
 800437a:	4618      	mov	r0, r3
 800437c:	f001 f82c 	bl	80053d8 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_>
 8004380:	e06e      	b.n	8004460 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
      else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
 8004382:	68bc      	ldr	r4, [r7, #8]
 8004384:	69bb      	ldr	r3, [r7, #24]
 8004386:	4618      	mov	r0, r3
 8004388:	f000 ffef 	bl	800536a <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 800438c:	4603      	mov	r3, r0
 800438e:	683a      	ldr	r2, [r7, #0]
 8004390:	4619      	mov	r1, r3
 8004392:	4620      	mov	r0, r4
 8004394:	f000 fff5 	bl	8005382 <_ZNKSt4lessIcEclERKcS2_>
 8004398:	4603      	mov	r3, r0
 800439a:	2b00      	cmp	r3, #0
 800439c:	d056      	beq.n	800444c <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x22a>
	  iterator __after = __pos;
 800439e:	69bb      	ldr	r3, [r7, #24]
 80043a0:	613b      	str	r3, [r7, #16]
	  if (__pos._M_node == _M_rightmost())
 80043a2:	69bc      	ldr	r4, [r7, #24]
 80043a4:	68b8      	ldr	r0, [r7, #8]
 80043a6:	f000 ffd4 	bl	8005352 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_rightmostEv>
 80043aa:	4603      	mov	r3, r0
 80043ac:	681b      	ldr	r3, [r3, #0]
 80043ae:	429c      	cmp	r4, r3
 80043b0:	bf0c      	ite	eq
 80043b2:	2301      	moveq	r3, #1
 80043b4:	2300      	movne	r3, #0
 80043b6:	b2db      	uxtb	r3, r3
 80043b8:	2b00      	cmp	r3, #0
 80043ba:	d00c      	beq.n	80043d6 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x1b4>
	    return _Res(0, _M_rightmost());
 80043bc:	2300      	movs	r3, #0
 80043be:	627b      	str	r3, [r7, #36]	; 0x24
 80043c0:	68b8      	ldr	r0, [r7, #8]
 80043c2:	f000 ffc6 	bl	8005352 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_rightmostEv>
 80043c6:	4602      	mov	r2, r0
 80043c8:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80043cc:	4619      	mov	r1, r3
 80043ce:	68f8      	ldr	r0, [r7, #12]
 80043d0:	f000 ffec 	bl	80053ac <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 80043d4:	e044      	b.n	8004460 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
 80043d6:	68bc      	ldr	r4, [r7, #8]
 80043d8:	f107 0310 	add.w	r3, r7, #16
 80043dc:	4618      	mov	r0, r3
 80043de:	f001 f8b6 	bl	800554e <_ZNSt17_Rb_tree_iteratorISt4pairIKc10token_typeEEppEv>
 80043e2:	4603      	mov	r3, r0
 80043e4:	681b      	ldr	r3, [r3, #0]
 80043e6:	4618      	mov	r0, r3
 80043e8:	f000 ffbf 	bl	800536a <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 80043ec:	4603      	mov	r3, r0
 80043ee:	461a      	mov	r2, r3
 80043f0:	6839      	ldr	r1, [r7, #0]
 80043f2:	4620      	mov	r0, r4
 80043f4:	f000 ffc5 	bl	8005382 <_ZNKSt4lessIcEclERKcS2_>
 80043f8:	4603      	mov	r3, r0
 80043fa:	2b00      	cmp	r3, #0
 80043fc:	d01f      	beq.n	800443e <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x21c>
	      if (_S_right(__pos._M_node) == 0)
 80043fe:	69bb      	ldr	r3, [r7, #24]
 8004400:	4618      	mov	r0, r3
 8004402:	f7ff fed6 	bl	80041b2 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base>
 8004406:	4603      	mov	r3, r0
 8004408:	2b00      	cmp	r3, #0
 800440a:	bf0c      	ite	eq
 800440c:	2301      	moveq	r3, #1
 800440e:	2300      	movne	r3, #0
 8004410:	b2db      	uxtb	r3, r3
 8004412:	2b00      	cmp	r3, #0
 8004414:	d00a      	beq.n	800442c <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x20a>
		return _Res(0, __pos._M_node);
 8004416:	2300      	movs	r3, #0
 8004418:	62bb      	str	r3, [r7, #40]	; 0x28
 800441a:	f107 0218 	add.w	r2, r7, #24
 800441e:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8004422:	4619      	mov	r1, r3
 8004424:	68f8      	ldr	r0, [r7, #12]
 8004426:	f000 ffc1 	bl	80053ac <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 800442a:	e019      	b.n	8004460 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
		return _Res(__after._M_node, __after._M_node);
 800442c:	f107 0210 	add.w	r2, r7, #16
 8004430:	f107 0310 	add.w	r3, r7, #16
 8004434:	4619      	mov	r1, r3
 8004436:	68f8      	ldr	r0, [r7, #12]
 8004438:	f001 f85f 	bl	80054fa <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
 800443c:	e010      	b.n	8004460 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
	    return _M_get_insert_unique_pos(__k);
 800443e:	68fb      	ldr	r3, [r7, #12]
 8004440:	683a      	ldr	r2, [r7, #0]
 8004442:	68b9      	ldr	r1, [r7, #8]
 8004444:	4618      	mov	r0, r3
 8004446:	f000 ffc7 	bl	80053d8 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_>
 800444a:	e009      	b.n	8004460 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
	return _Res(__pos._M_node, 0);
 800444c:	2300      	movs	r3, #0
 800444e:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004450:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 8004454:	f107 0318 	add.w	r3, r7, #24
 8004458:	4619      	mov	r1, r3
 800445a:	68f8      	ldr	r0, [r7, #12]
 800445c:	f001 f888 	bl	8005570 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_>
    }
 8004460:	68f8      	ldr	r0, [r7, #12]
 8004462:	3734      	adds	r7, #52	; 0x34
 8004464:	46bd      	mov	sp, r7
 8004466:	bd90      	pop	{r4, r7, pc}

08004468 <_ZNKSt10_Select1stISt4pairIKc10token_typeEEclERKS3_>:
      typename _Pair::first_type&
      operator()(_Pair& __x) const
      { return __x.first; }

      const typename _Pair::first_type&
      operator()(const _Pair& __x) const
 8004468:	b480      	push	{r7}
 800446a:	b083      	sub	sp, #12
 800446c:	af00      	add	r7, sp, #0
 800446e:	6078      	str	r0, [r7, #4]
 8004470:	6039      	str	r1, [r7, #0]
      { return __x.first; }
 8004472:	683b      	ldr	r3, [r7, #0]
 8004474:	4618      	mov	r0, r3
 8004476:	370c      	adds	r7, #12
 8004478:	46bd      	mov	sp, r7
 800447a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800447e:	4770      	bx	lr

08004480 <_ZSt7forwardIRKSt4pairIKc10token_typeEEOT_RNSt16remove_referenceIS6_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8004480:	b480      	push	{r7}
 8004482:	b083      	sub	sp, #12
 8004484:	af00      	add	r7, sp, #0
 8004486:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8004488:	687b      	ldr	r3, [r7, #4]
 800448a:	4618      	mov	r0, r3
 800448c:	370c      	adds	r7, #12
 800448e:	46bd      	mov	sp, r7
 8004490:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004494:	4770      	bx	lr

08004496 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_>:
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8004496:	b5b0      	push	{r4, r5, r7, lr}
 8004498:	b088      	sub	sp, #32
 800449a:	af00      	add	r7, sp, #0
 800449c:	60f8      	str	r0, [r7, #12]
 800449e:	60b9      	str	r1, [r7, #8]
 80044a0:	607a      	str	r2, [r7, #4]
 80044a2:	603b      	str	r3, [r7, #0]
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
 80044a4:	68bb      	ldr	r3, [r7, #8]
 80044a6:	2b00      	cmp	r3, #0
 80044a8:	d11a      	bne.n	80044e0 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_+0x4a>
	bool __insert_left = (__x != 0 || __p == _M_end()
 80044aa:	68f8      	ldr	r0, [r7, #12]
 80044ac:	f000 ff39 	bl	8005322 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_M_endEv>
 80044b0:	4602      	mov	r2, r0
 80044b2:	687b      	ldr	r3, [r7, #4]
 80044b4:	4293      	cmp	r3, r2
 80044b6:	d013      	beq.n	80044e0 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_+0x4a>
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
 80044b8:	68fc      	ldr	r4, [r7, #12]
 80044ba:	f107 0310 	add.w	r3, r7, #16
 80044be:	6839      	ldr	r1, [r7, #0]
 80044c0:	4618      	mov	r0, r3
 80044c2:	f7ff ffd1 	bl	8004468 <_ZNKSt10_Select1stISt4pairIKc10token_typeEEclERKS3_>
 80044c6:	4605      	mov	r5, r0
 80044c8:	6878      	ldr	r0, [r7, #4]
 80044ca:	f000 ff4e 	bl	800536a <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 80044ce:	4603      	mov	r3, r0
 80044d0:	461a      	mov	r2, r3
 80044d2:	4629      	mov	r1, r5
 80044d4:	4620      	mov	r0, r4
 80044d6:	f000 ff54 	bl	8005382 <_ZNKSt4lessIcEclERKcS2_>
 80044da:	4603      	mov	r3, r0
 80044dc:	2b00      	cmp	r3, #0
 80044de:	d001      	beq.n	80044e4 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_+0x4e>
 80044e0:	2301      	movs	r3, #1
 80044e2:	e000      	b.n	80044e6 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_+0x50>
 80044e4:	2300      	movs	r3, #0
	bool __insert_left = (__x != 0 || __p == _M_end()
 80044e6:	77fb      	strb	r3, [r7, #31]
	_Link_type __z = __node_gen(_GLIBCXX_FORWARD(_Arg, __v));
 80044e8:	6838      	ldr	r0, [r7, #0]
 80044ea:	f7ff ffc9 	bl	8004480 <_ZSt7forwardIRKSt4pairIKc10token_typeEEOT_RNSt16remove_referenceIS6_E4typeE>
 80044ee:	4603      	mov	r3, r0
 80044f0:	4619      	mov	r1, r3
 80044f2:	6b38      	ldr	r0, [r7, #48]	; 0x30
 80044f4:	f001 f852 	bl	800559c <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_Alloc_nodeclIRKS3_EEPSt13_Rb_tree_nodeIS3_EOT_>
 80044f8:	61b8      	str	r0, [r7, #24]
				      this->_M_impl._M_header);
 80044fa:	68fb      	ldr	r3, [r7, #12]
 80044fc:	3304      	adds	r3, #4
	_Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
 80044fe:	7ff8      	ldrb	r0, [r7, #31]
 8004500:	687a      	ldr	r2, [r7, #4]
 8004502:	69b9      	ldr	r1, [r7, #24]
 8004504:	f01e f9f8 	bl	80228f8 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
	++_M_impl._M_node_count;
 8004508:	68fb      	ldr	r3, [r7, #12]
 800450a:	695b      	ldr	r3, [r3, #20]
 800450c:	1c5a      	adds	r2, r3, #1
 800450e:	68fb      	ldr	r3, [r7, #12]
 8004510:	615a      	str	r2, [r3, #20]
	return iterator(__z);
 8004512:	f107 0314 	add.w	r3, r7, #20
 8004516:	69b9      	ldr	r1, [r7, #24]
 8004518:	4618      	mov	r0, r3
 800451a:	f7ff fe73 	bl	8004204 <_ZNSt17_Rb_tree_iteratorISt4pairIKc10token_typeEEC1EPSt18_Rb_tree_node_base>
 800451e:	697b      	ldr	r3, [r7, #20]
      }
 8004520:	4618      	mov	r0, r3
 8004522:	3720      	adds	r7, #32
 8004524:	46bd      	mov	sp, r7
 8004526:	bdb0      	pop	{r4, r5, r7, pc}

08004528 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEC1Ev>:
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 8004528:	b480      	push	{r7}
 800452a:	b083      	sub	sp, #12
 800452c:	af00      	add	r7, sp, #0
 800452e:	6078      	str	r0, [r7, #4]
 8004530:	687b      	ldr	r3, [r7, #4]
 8004532:	4618      	mov	r0, r3
 8004534:	370c      	adds	r7, #12
 8004536:	46bd      	mov	sp, r7
 8004538:	f85d 7b04 	ldr.w	r7, [sp], #4
 800453c:	4770      	bx	lr

0800453e <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEED1Ev>:
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 800453e:	b480      	push	{r7}
 8004540:	b083      	sub	sp, #12
 8004542:	af00      	add	r7, sp, #0
 8004544:	6078      	str	r0, [r7, #4]
 8004546:	687b      	ldr	r3, [r7, #4]
 8004548:	4618      	mov	r0, r3
 800454a:	370c      	adds	r7, #12
 800454c:	46bd      	mov	sp, r7
 800454e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004552:	4770      	bx	lr

08004554 <_ZSt4moveIRSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEEONSt16remove_referenceIT_E4typeEOSF_>:
    move(_Tp&& __t) noexcept
 8004554:	b480      	push	{r7}
 8004556:	b083      	sub	sp, #12
 8004558:	af00      	add	r7, sp, #0
 800455a:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 800455c:	687b      	ldr	r3, [r7, #4]
 800455e:	4618      	mov	r0, r3
 8004560:	370c      	adds	r7, #12
 8004562:	46bd      	mov	sp, r7
 8004564:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004568:	4770      	bx	lr

0800456a <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEC1ERKSB_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
 800456a:	b580      	push	{r7, lr}
 800456c:	b082      	sub	sp, #8
 800456e:	af00      	add	r7, sp, #0
 8004570:	6078      	str	r0, [r7, #4]
 8004572:	6039      	str	r1, [r7, #0]
      : __allocator_base<_Tp>(__a) { }
 8004574:	6839      	ldr	r1, [r7, #0]
 8004576:	6878      	ldr	r0, [r7, #4]
 8004578:	f001 f824 	bl	80055c4 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEC1ERKSD_>
 800457c:	687b      	ldr	r3, [r7, #4]
 800457e:	4618      	mov	r0, r3
 8004580:	3708      	adds	r7, #8
 8004582:	46bd      	mov	sp, r7
 8004584:	bd80      	pop	{r7, pc}

08004586 <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1ERKS7_>:
      _Rb_tree_key_compare(const _Key_compare& __comp)
 8004586:	b480      	push	{r7}
 8004588:	b083      	sub	sp, #12
 800458a:	af00      	add	r7, sp, #0
 800458c:	6078      	str	r0, [r7, #4]
 800458e:	6039      	str	r1, [r7, #0]
      { }
 8004590:	687b      	ldr	r3, [r7, #4]
 8004592:	4618      	mov	r0, r3
 8004594:	370c      	adds	r7, #12
 8004596:	46bd      	mov	sp, r7
 8004598:	f85d 7b04 	ldr.w	r7, [sp], #4
 800459c:	4770      	bx	lr

0800459e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_S_rightEPSt18_Rb_tree_node_base>:
      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 800459e:	b480      	push	{r7}
 80045a0:	b083      	sub	sp, #12
 80045a2:	af00      	add	r7, sp, #0
 80045a4:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(__x->_M_right); }
 80045a6:	687b      	ldr	r3, [r7, #4]
 80045a8:	68db      	ldr	r3, [r3, #12]
 80045aa:	4618      	mov	r0, r3
 80045ac:	370c      	adds	r7, #12
 80045ae:	46bd      	mov	sp, r7
 80045b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80045b4:	4770      	bx	lr

080045b6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE7_S_leftEPSt18_Rb_tree_node_base>:
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 80045b6:	b480      	push	{r7}
 80045b8:	b083      	sub	sp, #12
 80045ba:	af00      	add	r7, sp, #0
 80045bc:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(__x->_M_left); }
 80045be:	687b      	ldr	r3, [r7, #4]
 80045c0:	689b      	ldr	r3, [r3, #8]
 80045c2:	4618      	mov	r0, r3
 80045c4:	370c      	adds	r7, #12
 80045c6:	46bd      	mov	sp, r7
 80045c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80045cc:	4770      	bx	lr

080045ce <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS9_E>:
      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 80045ce:	b580      	push	{r7, lr}
 80045d0:	b082      	sub	sp, #8
 80045d2:	af00      	add	r7, sp, #0
 80045d4:	6078      	str	r0, [r7, #4]
 80045d6:	6039      	str	r1, [r7, #0]
	_M_destroy_node(__p);
 80045d8:	6839      	ldr	r1, [r7, #0]
 80045da:	6878      	ldr	r0, [r7, #4]
 80045dc:	f000 fffe 	bl	80055dc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS9_E>
	_M_put_node(__p);
 80045e0:	6839      	ldr	r1, [r7, #0]
 80045e2:	6878      	ldr	r0, [r7, #4]
 80045e4:	f001 f80f 	bl	8005606 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS9_E>
      }
 80045e8:	bf00      	nop
 80045ea:	3708      	adds	r7, #8
 80045ec:	46bd      	mov	sp, r7
 80045ee:	bd80      	pop	{r7, pc}

080045f0 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1EPSt18_Rb_tree_node_base>:
      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 80045f0:	b480      	push	{r7}
 80045f2:	b083      	sub	sp, #12
 80045f4:	af00      	add	r7, sp, #0
 80045f6:	6078      	str	r0, [r7, #4]
 80045f8:	6039      	str	r1, [r7, #0]
      : _M_node(__x) { }
 80045fa:	687b      	ldr	r3, [r7, #4]
 80045fc:	683a      	ldr	r2, [r7, #0]
 80045fe:	601a      	str	r2, [r3, #0]
 8004600:	687b      	ldr	r3, [r7, #4]
 8004602:	4618      	mov	r0, r3
 8004604:	370c      	adds	r7, #12
 8004606:	46bd      	mov	sp, r7
 8004608:	f85d 7b04 	ldr.w	r7, [sp], #4
 800460c:	4770      	bx	lr

0800460e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 800460e:	b590      	push	{r4, r7, lr}
 8004610:	b08d      	sub	sp, #52	; 0x34
 8004612:	af00      	add	r7, sp, #0
 8004614:	60f8      	str	r0, [r7, #12]
 8004616:	60b9      	str	r1, [r7, #8]
 8004618:	607a      	str	r2, [r7, #4]
 800461a:	603b      	str	r3, [r7, #0]
      iterator __pos = __position._M_const_cast();
 800461c:	1d3b      	adds	r3, r7, #4
 800461e:	4618      	mov	r0, r3
 8004620:	f001 f803 	bl	800562a <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE13_M_const_castEv>
 8004624:	4603      	mov	r3, r0
 8004626:	61bb      	str	r3, [r7, #24]
      if (__pos._M_node == _M_end())
 8004628:	69bc      	ldr	r4, [r7, #24]
 800462a:	68b8      	ldr	r0, [r7, #8]
 800462c:	f001 f80e 	bl	800564c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_M_endEv>
 8004630:	4603      	mov	r3, r0
 8004632:	429c      	cmp	r4, r3
 8004634:	bf0c      	ite	eq
 8004636:	2301      	moveq	r3, #1
 8004638:	2300      	movne	r3, #0
 800463a:	b2db      	uxtb	r3, r3
 800463c:	2b00      	cmp	r3, #0
 800463e:	d030      	beq.n	80046a2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x94>
	  if (size() > 0
 8004640:	68b8      	ldr	r0, [r7, #8]
 8004642:	f001 f80f 	bl	8005664 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE4sizeEv>
 8004646:	4603      	mov	r3, r0
	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
 8004648:	2b00      	cmp	r3, #0
 800464a:	d013      	beq.n	8004674 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x66>
 800464c:	68bc      	ldr	r4, [r7, #8]
 800464e:	68b8      	ldr	r0, [r7, #8]
 8004650:	f001 f814 	bl	800567c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_rightmostEv>
 8004654:	4603      	mov	r3, r0
 8004656:	681b      	ldr	r3, [r3, #0]
 8004658:	4618      	mov	r0, r3
 800465a:	f001 f81b 	bl	8005694 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 800465e:	4603      	mov	r3, r0
 8004660:	683a      	ldr	r2, [r7, #0]
 8004662:	4619      	mov	r1, r3
 8004664:	4620      	mov	r0, r4
 8004666:	f001 f821 	bl	80056ac <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 800466a:	4603      	mov	r3, r0
 800466c:	2b00      	cmp	r3, #0
 800466e:	d001      	beq.n	8004674 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x66>
 8004670:	2301      	movs	r3, #1
 8004672:	e000      	b.n	8004676 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x68>
 8004674:	2300      	movs	r3, #0
	  if (size() > 0
 8004676:	2b00      	cmp	r3, #0
 8004678:	d00c      	beq.n	8004694 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x86>
	    return _Res(0, _M_rightmost());
 800467a:	2300      	movs	r3, #0
 800467c:	61fb      	str	r3, [r7, #28]
 800467e:	68b8      	ldr	r0, [r7, #8]
 8004680:	f000 fffc 	bl	800567c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_rightmostEv>
 8004684:	4602      	mov	r2, r0
 8004686:	f107 031c 	add.w	r3, r7, #28
 800468a:	4619      	mov	r1, r3
 800468c:	68f8      	ldr	r0, [r7, #12]
 800468e:	f000 fe8d 	bl	80053ac <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 8004692:	e0db      	b.n	800484c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
	    return _M_get_insert_unique_pos(__k);
 8004694:	68fb      	ldr	r3, [r7, #12]
 8004696:	683a      	ldr	r2, [r7, #0]
 8004698:	68b9      	ldr	r1, [r7, #8]
 800469a:	4618      	mov	r0, r3
 800469c:	f001 f815 	bl	80056ca <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_>
 80046a0:	e0d4      	b.n	800484c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
      else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
 80046a2:	68bc      	ldr	r4, [r7, #8]
 80046a4:	69bb      	ldr	r3, [r7, #24]
 80046a6:	4618      	mov	r0, r3
 80046a8:	f000 fff4 	bl	8005694 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 80046ac:	4603      	mov	r3, r0
 80046ae:	461a      	mov	r2, r3
 80046b0:	6839      	ldr	r1, [r7, #0]
 80046b2:	4620      	mov	r0, r4
 80046b4:	f000 fffa 	bl	80056ac <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 80046b8:	4603      	mov	r3, r0
 80046ba:	2b00      	cmp	r3, #0
 80046bc:	d057      	beq.n	800476e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x160>
	  iterator __before = __pos;
 80046be:	69bb      	ldr	r3, [r7, #24]
 80046c0:	617b      	str	r3, [r7, #20]
	  if (__pos._M_node == _M_leftmost()) // begin()
 80046c2:	69bc      	ldr	r4, [r7, #24]
 80046c4:	68b8      	ldr	r0, [r7, #8]
 80046c6:	f001 f885 	bl	80057d4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_leftmostEv>
 80046ca:	4603      	mov	r3, r0
 80046cc:	681b      	ldr	r3, [r3, #0]
 80046ce:	429c      	cmp	r4, r3
 80046d0:	bf0c      	ite	eq
 80046d2:	2301      	moveq	r3, #1
 80046d4:	2300      	movne	r3, #0
 80046d6:	b2db      	uxtb	r3, r3
 80046d8:	2b00      	cmp	r3, #0
 80046da:	d00d      	beq.n	80046f8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0xea>
	    return _Res(_M_leftmost(), _M_leftmost());
 80046dc:	68b8      	ldr	r0, [r7, #8]
 80046de:	f001 f879 	bl	80057d4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_leftmostEv>
 80046e2:	4604      	mov	r4, r0
 80046e4:	68b8      	ldr	r0, [r7, #8]
 80046e6:	f001 f875 	bl	80057d4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_leftmostEv>
 80046ea:	4603      	mov	r3, r0
 80046ec:	461a      	mov	r2, r3
 80046ee:	4621      	mov	r1, r4
 80046f0:	68f8      	ldr	r0, [r7, #12]
 80046f2:	f000 ff02 	bl	80054fa <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
 80046f6:	e0a9      	b.n	800484c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
 80046f8:	68bc      	ldr	r4, [r7, #8]
 80046fa:	f107 0314 	add.w	r3, r7, #20
 80046fe:	4618      	mov	r0, r3
 8004700:	f001 f874 	bl	80057ec <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEmmEv>
 8004704:	4603      	mov	r3, r0
 8004706:	681b      	ldr	r3, [r3, #0]
 8004708:	4618      	mov	r0, r3
 800470a:	f000 ffc3 	bl	8005694 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 800470e:	4603      	mov	r3, r0
 8004710:	683a      	ldr	r2, [r7, #0]
 8004712:	4619      	mov	r1, r3
 8004714:	4620      	mov	r0, r4
 8004716:	f000 ffc9 	bl	80056ac <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 800471a:	4603      	mov	r3, r0
 800471c:	2b00      	cmp	r3, #0
 800471e:	d01f      	beq.n	8004760 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x152>
	      if (_S_right(__before._M_node) == 0)
 8004720:	697b      	ldr	r3, [r7, #20]
 8004722:	4618      	mov	r0, r3
 8004724:	f7ff ff3b 	bl	800459e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_S_rightEPSt18_Rb_tree_node_base>
 8004728:	4603      	mov	r3, r0
 800472a:	2b00      	cmp	r3, #0
 800472c:	bf0c      	ite	eq
 800472e:	2301      	moveq	r3, #1
 8004730:	2300      	movne	r3, #0
 8004732:	b2db      	uxtb	r3, r3
 8004734:	2b00      	cmp	r3, #0
 8004736:	d00a      	beq.n	800474e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x140>
		return _Res(0, __before._M_node);
 8004738:	2300      	movs	r3, #0
 800473a:	623b      	str	r3, [r7, #32]
 800473c:	f107 0214 	add.w	r2, r7, #20
 8004740:	f107 0320 	add.w	r3, r7, #32
 8004744:	4619      	mov	r1, r3
 8004746:	68f8      	ldr	r0, [r7, #12]
 8004748:	f000 fe30 	bl	80053ac <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 800474c:	e07e      	b.n	800484c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
		return _Res(__pos._M_node, __pos._M_node);
 800474e:	f107 0218 	add.w	r2, r7, #24
 8004752:	f107 0318 	add.w	r3, r7, #24
 8004756:	4619      	mov	r1, r3
 8004758:	68f8      	ldr	r0, [r7, #12]
 800475a:	f000 fece 	bl	80054fa <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
 800475e:	e075      	b.n	800484c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
	    return _M_get_insert_unique_pos(__k);
 8004760:	68fb      	ldr	r3, [r7, #12]
 8004762:	683a      	ldr	r2, [r7, #0]
 8004764:	68b9      	ldr	r1, [r7, #8]
 8004766:	4618      	mov	r0, r3
 8004768:	f000 ffaf 	bl	80056ca <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_>
 800476c:	e06e      	b.n	800484c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
      else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
 800476e:	68bc      	ldr	r4, [r7, #8]
 8004770:	69bb      	ldr	r3, [r7, #24]
 8004772:	4618      	mov	r0, r3
 8004774:	f000 ff8e 	bl	8005694 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8004778:	4603      	mov	r3, r0
 800477a:	683a      	ldr	r2, [r7, #0]
 800477c:	4619      	mov	r1, r3
 800477e:	4620      	mov	r0, r4
 8004780:	f000 ff94 	bl	80056ac <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8004784:	4603      	mov	r3, r0
 8004786:	2b00      	cmp	r3, #0
 8004788:	d056      	beq.n	8004838 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x22a>
	  iterator __after = __pos;
 800478a:	69bb      	ldr	r3, [r7, #24]
 800478c:	613b      	str	r3, [r7, #16]
	  if (__pos._M_node == _M_rightmost())
 800478e:	69bc      	ldr	r4, [r7, #24]
 8004790:	68b8      	ldr	r0, [r7, #8]
 8004792:	f000 ff73 	bl	800567c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_rightmostEv>
 8004796:	4603      	mov	r3, r0
 8004798:	681b      	ldr	r3, [r3, #0]
 800479a:	429c      	cmp	r4, r3
 800479c:	bf0c      	ite	eq
 800479e:	2301      	moveq	r3, #1
 80047a0:	2300      	movne	r3, #0
 80047a2:	b2db      	uxtb	r3, r3
 80047a4:	2b00      	cmp	r3, #0
 80047a6:	d00c      	beq.n	80047c2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x1b4>
	    return _Res(0, _M_rightmost());
 80047a8:	2300      	movs	r3, #0
 80047aa:	627b      	str	r3, [r7, #36]	; 0x24
 80047ac:	68b8      	ldr	r0, [r7, #8]
 80047ae:	f000 ff65 	bl	800567c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_rightmostEv>
 80047b2:	4602      	mov	r2, r0
 80047b4:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80047b8:	4619      	mov	r1, r3
 80047ba:	68f8      	ldr	r0, [r7, #12]
 80047bc:	f000 fdf6 	bl	80053ac <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 80047c0:	e044      	b.n	800484c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
 80047c2:	68bc      	ldr	r4, [r7, #8]
 80047c4:	f107 0310 	add.w	r3, r7, #16
 80047c8:	4618      	mov	r0, r3
 80047ca:	f001 f820 	bl	800580e <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEppEv>
 80047ce:	4603      	mov	r3, r0
 80047d0:	681b      	ldr	r3, [r3, #0]
 80047d2:	4618      	mov	r0, r3
 80047d4:	f000 ff5e 	bl	8005694 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 80047d8:	4603      	mov	r3, r0
 80047da:	461a      	mov	r2, r3
 80047dc:	6839      	ldr	r1, [r7, #0]
 80047de:	4620      	mov	r0, r4
 80047e0:	f000 ff64 	bl	80056ac <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 80047e4:	4603      	mov	r3, r0
 80047e6:	2b00      	cmp	r3, #0
 80047e8:	d01f      	beq.n	800482a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x21c>
	      if (_S_right(__pos._M_node) == 0)
 80047ea:	69bb      	ldr	r3, [r7, #24]
 80047ec:	4618      	mov	r0, r3
 80047ee:	f7ff fed6 	bl	800459e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_S_rightEPSt18_Rb_tree_node_base>
 80047f2:	4603      	mov	r3, r0
 80047f4:	2b00      	cmp	r3, #0
 80047f6:	bf0c      	ite	eq
 80047f8:	2301      	moveq	r3, #1
 80047fa:	2300      	movne	r3, #0
 80047fc:	b2db      	uxtb	r3, r3
 80047fe:	2b00      	cmp	r3, #0
 8004800:	d00a      	beq.n	8004818 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x20a>
		return _Res(0, __pos._M_node);
 8004802:	2300      	movs	r3, #0
 8004804:	62bb      	str	r3, [r7, #40]	; 0x28
 8004806:	f107 0218 	add.w	r2, r7, #24
 800480a:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800480e:	4619      	mov	r1, r3
 8004810:	68f8      	ldr	r0, [r7, #12]
 8004812:	f000 fdcb 	bl	80053ac <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 8004816:	e019      	b.n	800484c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
		return _Res(__after._M_node, __after._M_node);
 8004818:	f107 0210 	add.w	r2, r7, #16
 800481c:	f107 0310 	add.w	r3, r7, #16
 8004820:	4619      	mov	r1, r3
 8004822:	68f8      	ldr	r0, [r7, #12]
 8004824:	f000 fe69 	bl	80054fa <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
 8004828:	e010      	b.n	800484c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
	    return _M_get_insert_unique_pos(__k);
 800482a:	68fb      	ldr	r3, [r7, #12]
 800482c:	683a      	ldr	r2, [r7, #0]
 800482e:	68b9      	ldr	r1, [r7, #8]
 8004830:	4618      	mov	r0, r3
 8004832:	f000 ff4a 	bl	80056ca <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_>
 8004836:	e009      	b.n	800484c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
	return _Res(__pos._M_node, 0);
 8004838:	2300      	movs	r3, #0
 800483a:	62fb      	str	r3, [r7, #44]	; 0x2c
 800483c:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 8004840:	f107 0318 	add.w	r3, r7, #24
 8004844:	4619      	mov	r1, r3
 8004846:	68f8      	ldr	r0, [r7, #12]
 8004848:	f000 fe92 	bl	8005570 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_>
    }
 800484c:	68f8      	ldr	r0, [r7, #12]
 800484e:	3734      	adds	r7, #52	; 0x34
 8004850:	46bd      	mov	sp, r7
 8004852:	bd90      	pop	{r4, r7, pc}

08004854 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEclERKS9_>:
      operator()(const _Pair& __x) const
 8004854:	b480      	push	{r7}
 8004856:	b083      	sub	sp, #12
 8004858:	af00      	add	r7, sp, #0
 800485a:	6078      	str	r0, [r7, #4]
 800485c:	6039      	str	r1, [r7, #0]
      { return __x.first; }
 800485e:	683b      	ldr	r3, [r7, #0]
 8004860:	4618      	mov	r0, r3
 8004862:	370c      	adds	r7, #12
 8004864:	46bd      	mov	sp, r7
 8004866:	f85d 7b04 	ldr.w	r7, [sp], #4
 800486a:	4770      	bx	lr

0800486c <_ZSt7forwardIRKSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEOT_RNSt16remove_referenceISC_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800486c:	b480      	push	{r7}
 800486e:	b083      	sub	sp, #12
 8004870:	af00      	add	r7, sp, #0
 8004872:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8004874:	687b      	ldr	r3, [r7, #4]
 8004876:	4618      	mov	r0, r3
 8004878:	370c      	adds	r7, #12
 800487a:	46bd      	mov	sp, r7
 800487c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004880:	4770      	bx	lr

08004882 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE10_M_insert_IRKS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_EPSt18_Rb_tree_node_baseSN_OT_RT0_>:
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8004882:	b5b0      	push	{r4, r5, r7, lr}
 8004884:	b088      	sub	sp, #32
 8004886:	af00      	add	r7, sp, #0
 8004888:	60f8      	str	r0, [r7, #12]
 800488a:	60b9      	str	r1, [r7, #8]
 800488c:	607a      	str	r2, [r7, #4]
 800488e:	603b      	str	r3, [r7, #0]
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
 8004890:	68bb      	ldr	r3, [r7, #8]
 8004892:	2b00      	cmp	r3, #0
 8004894:	d11a      	bne.n	80048cc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE10_M_insert_IRKS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_EPSt18_Rb_tree_node_baseSN_OT_RT0_+0x4a>
	bool __insert_left = (__x != 0 || __p == _M_end()
 8004896:	68f8      	ldr	r0, [r7, #12]
 8004898:	f000 fed8 	bl	800564c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_M_endEv>
 800489c:	4602      	mov	r2, r0
 800489e:	687b      	ldr	r3, [r7, #4]
 80048a0:	4293      	cmp	r3, r2
 80048a2:	d013      	beq.n	80048cc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE10_M_insert_IRKS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_EPSt18_Rb_tree_node_baseSN_OT_RT0_+0x4a>
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
 80048a4:	68fc      	ldr	r4, [r7, #12]
 80048a6:	f107 0310 	add.w	r3, r7, #16
 80048aa:	6839      	ldr	r1, [r7, #0]
 80048ac:	4618      	mov	r0, r3
 80048ae:	f7ff ffd1 	bl	8004854 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEclERKS9_>
 80048b2:	4605      	mov	r5, r0
 80048b4:	6878      	ldr	r0, [r7, #4]
 80048b6:	f000 feed 	bl	8005694 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 80048ba:	4603      	mov	r3, r0
 80048bc:	461a      	mov	r2, r3
 80048be:	4629      	mov	r1, r5
 80048c0:	4620      	mov	r0, r4
 80048c2:	f000 fef3 	bl	80056ac <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 80048c6:	4603      	mov	r3, r0
 80048c8:	2b00      	cmp	r3, #0
 80048ca:	d001      	beq.n	80048d0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE10_M_insert_IRKS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_EPSt18_Rb_tree_node_baseSN_OT_RT0_+0x4e>
 80048cc:	2301      	movs	r3, #1
 80048ce:	e000      	b.n	80048d2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE10_M_insert_IRKS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_EPSt18_Rb_tree_node_baseSN_OT_RT0_+0x50>
 80048d0:	2300      	movs	r3, #0
	bool __insert_left = (__x != 0 || __p == _M_end()
 80048d2:	77fb      	strb	r3, [r7, #31]
	_Link_type __z = __node_gen(_GLIBCXX_FORWARD(_Arg, __v));
 80048d4:	6838      	ldr	r0, [r7, #0]
 80048d6:	f7ff ffc9 	bl	800486c <_ZSt7forwardIRKSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEOT_RNSt16remove_referenceISC_E4typeE>
 80048da:	4603      	mov	r3, r0
 80048dc:	4619      	mov	r1, r3
 80048de:	6b38      	ldr	r0, [r7, #48]	; 0x30
 80048e0:	f000 ffa6 	bl	8005830 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_Alloc_nodeclIRKS9_EEPSt13_Rb_tree_nodeIS9_EOT_>
 80048e4:	61b8      	str	r0, [r7, #24]
				      this->_M_impl._M_header);
 80048e6:	68fb      	ldr	r3, [r7, #12]
 80048e8:	3304      	adds	r3, #4
	_Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
 80048ea:	7ff8      	ldrb	r0, [r7, #31]
 80048ec:	687a      	ldr	r2, [r7, #4]
 80048ee:	69b9      	ldr	r1, [r7, #24]
 80048f0:	f01e f802 	bl	80228f8 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
	++_M_impl._M_node_count;
 80048f4:	68fb      	ldr	r3, [r7, #12]
 80048f6:	695b      	ldr	r3, [r3, #20]
 80048f8:	1c5a      	adds	r2, r3, #1
 80048fa:	68fb      	ldr	r3, [r7, #12]
 80048fc:	615a      	str	r2, [r3, #20]
	return iterator(__z);
 80048fe:	f107 0314 	add.w	r3, r7, #20
 8004902:	69b9      	ldr	r1, [r7, #24]
 8004904:	4618      	mov	r0, r3
 8004906:	f7ff fe73 	bl	80045f0 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1EPSt18_Rb_tree_node_base>
 800490a:	697b      	ldr	r3, [r7, #20]
      }
 800490c:	4618      	mov	r0, r3
 800490e:	3720      	adds	r7, #32
 8004910:	46bd      	mov	sp, r7
 8004912:	bdb0      	pop	{r4, r5, r7, pc}

08004914 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEC1Ev>:
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 8004914:	b480      	push	{r7}
 8004916:	b083      	sub	sp, #12
 8004918:	af00      	add	r7, sp, #0
 800491a:	6078      	str	r0, [r7, #4]
 800491c:	687b      	ldr	r3, [r7, #4]
 800491e:	4618      	mov	r0, r3
 8004920:	370c      	adds	r7, #12
 8004922:	46bd      	mov	sp, r7
 8004924:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004928:	4770      	bx	lr

0800492a <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEED1Ev>:
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 800492a:	b480      	push	{r7}
 800492c:	b083      	sub	sp, #12
 800492e:	af00      	add	r7, sp, #0
 8004930:	6078      	str	r0, [r7, #4]
 8004932:	687b      	ldr	r3, [r7, #4]
 8004934:	4618      	mov	r0, r3
 8004936:	370c      	adds	r7, #12
 8004938:	46bd      	mov	sp, r7
 800493a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800493e:	4770      	bx	lr

08004940 <_ZSt4moveIRSaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEEONSt16remove_referenceIT_E4typeEOS9_>:
    move(_Tp&& __t) noexcept
 8004940:	b480      	push	{r7}
 8004942:	b083      	sub	sp, #12
 8004944:	af00      	add	r7, sp, #0
 8004946:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 8004948:	687b      	ldr	r3, [r7, #4]
 800494a:	4618      	mov	r0, r3
 800494c:	370c      	adds	r7, #12
 800494e:	46bd      	mov	sp, r7
 8004950:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004954:	4770      	bx	lr

08004956 <_ZNSaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEC1ERKS5_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
 8004956:	b580      	push	{r7, lr}
 8004958:	b082      	sub	sp, #8
 800495a:	af00      	add	r7, sp, #0
 800495c:	6078      	str	r0, [r7, #4]
 800495e:	6039      	str	r1, [r7, #0]
      : __allocator_base<_Tp>(__a) { }
 8004960:	6839      	ldr	r1, [r7, #0]
 8004962:	6878      	ldr	r0, [r7, #4]
 8004964:	f000 ff78 	bl	8005858 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEC1ERKS7_>
 8004968:	687b      	ldr	r3, [r7, #4]
 800496a:	4618      	mov	r0, r3
 800496c:	3708      	adds	r7, #8
 800496e:	46bd      	mov	sp, r7
 8004970:	bd80      	pop	{r7, pc}

08004972 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base>:
      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 8004972:	b480      	push	{r7}
 8004974:	b083      	sub	sp, #12
 8004976:	af00      	add	r7, sp, #0
 8004978:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(__x->_M_right); }
 800497a:	687b      	ldr	r3, [r7, #4]
 800497c:	68db      	ldr	r3, [r3, #12]
 800497e:	4618      	mov	r0, r3
 8004980:	370c      	adds	r7, #12
 8004982:	46bd      	mov	sp, r7
 8004984:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004988:	4770      	bx	lr

0800498a <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE7_S_leftEPSt18_Rb_tree_node_base>:
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 800498a:	b480      	push	{r7}
 800498c:	b083      	sub	sp, #12
 800498e:	af00      	add	r7, sp, #0
 8004990:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(__x->_M_left); }
 8004992:	687b      	ldr	r3, [r7, #4]
 8004994:	689b      	ldr	r3, [r3, #8]
 8004996:	4618      	mov	r0, r3
 8004998:	370c      	adds	r7, #12
 800499a:	46bd      	mov	sp, r7
 800499c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80049a0:	4770      	bx	lr

080049a2 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS3_E>:
      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 80049a2:	b580      	push	{r7, lr}
 80049a4:	b082      	sub	sp, #8
 80049a6:	af00      	add	r7, sp, #0
 80049a8:	6078      	str	r0, [r7, #4]
 80049aa:	6039      	str	r1, [r7, #0]
	_M_destroy_node(__p);
 80049ac:	6839      	ldr	r1, [r7, #0]
 80049ae:	6878      	ldr	r0, [r7, #4]
 80049b0:	f000 ff5e 	bl	8005870 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS3_E>
	_M_put_node(__p);
 80049b4:	6839      	ldr	r1, [r7, #0]
 80049b6:	6878      	ldr	r0, [r7, #4]
 80049b8:	f000 ff6f 	bl	800589a <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS3_E>
      }
 80049bc:	bf00      	nop
 80049be:	3708      	adds	r7, #8
 80049c0:	46bd      	mov	sp, r7
 80049c2:	bd80      	pop	{r7, pc}

080049c4 <_ZNSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEEC1EPSt18_Rb_tree_node_base>:
      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 80049c4:	b480      	push	{r7}
 80049c6:	b083      	sub	sp, #12
 80049c8:	af00      	add	r7, sp, #0
 80049ca:	6078      	str	r0, [r7, #4]
 80049cc:	6039      	str	r1, [r7, #0]
      : _M_node(__x) { }
 80049ce:	687b      	ldr	r3, [r7, #4]
 80049d0:	683a      	ldr	r2, [r7, #0]
 80049d2:	601a      	str	r2, [r3, #0]
 80049d4:	687b      	ldr	r3, [r7, #4]
 80049d6:	4618      	mov	r0, r3
 80049d8:	370c      	adds	r7, #12
 80049da:	46bd      	mov	sp, r7
 80049dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80049e0:	4770      	bx	lr

080049e2 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 80049e2:	b590      	push	{r4, r7, lr}
 80049e4:	b08d      	sub	sp, #52	; 0x34
 80049e6:	af00      	add	r7, sp, #0
 80049e8:	60f8      	str	r0, [r7, #12]
 80049ea:	60b9      	str	r1, [r7, #8]
 80049ec:	607a      	str	r2, [r7, #4]
 80049ee:	603b      	str	r3, [r7, #0]
      iterator __pos = __position._M_const_cast();
 80049f0:	1d3b      	adds	r3, r7, #4
 80049f2:	4618      	mov	r0, r3
 80049f4:	f000 ff63 	bl	80058be <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEE13_M_const_castEv>
 80049f8:	4603      	mov	r3, r0
 80049fa:	61bb      	str	r3, [r7, #24]
      if (__pos._M_node == _M_end())
 80049fc:	69bc      	ldr	r4, [r7, #24]
 80049fe:	68b8      	ldr	r0, [r7, #8]
 8004a00:	f000 ff6e 	bl	80058e0 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_M_endEv>
 8004a04:	4603      	mov	r3, r0
 8004a06:	429c      	cmp	r4, r3
 8004a08:	bf0c      	ite	eq
 8004a0a:	2301      	moveq	r3, #1
 8004a0c:	2300      	movne	r3, #0
 8004a0e:	b2db      	uxtb	r3, r3
 8004a10:	2b00      	cmp	r3, #0
 8004a12:	d030      	beq.n	8004a76 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x94>
	  if (size() > 0
 8004a14:	68b8      	ldr	r0, [r7, #8]
 8004a16:	f000 ff6f 	bl	80058f8 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE4sizeEv>
 8004a1a:	4603      	mov	r3, r0
	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
 8004a1c:	2b00      	cmp	r3, #0
 8004a1e:	d013      	beq.n	8004a48 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x66>
 8004a20:	68bc      	ldr	r4, [r7, #8]
 8004a22:	68b8      	ldr	r0, [r7, #8]
 8004a24:	f000 ff74 	bl	8005910 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_rightmostEv>
 8004a28:	4603      	mov	r3, r0
 8004a2a:	681b      	ldr	r3, [r3, #0]
 8004a2c:	4618      	mov	r0, r3
 8004a2e:	f000 ff7b 	bl	8005928 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8004a32:	4603      	mov	r3, r0
 8004a34:	683a      	ldr	r2, [r7, #0]
 8004a36:	4619      	mov	r1, r3
 8004a38:	4620      	mov	r0, r4
 8004a3a:	f000 fca2 	bl	8005382 <_ZNKSt4lessIcEclERKcS2_>
 8004a3e:	4603      	mov	r3, r0
 8004a40:	2b00      	cmp	r3, #0
 8004a42:	d001      	beq.n	8004a48 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x66>
 8004a44:	2301      	movs	r3, #1
 8004a46:	e000      	b.n	8004a4a <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x68>
 8004a48:	2300      	movs	r3, #0
	  if (size() > 0
 8004a4a:	2b00      	cmp	r3, #0
 8004a4c:	d00c      	beq.n	8004a68 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x86>
	    return _Res(0, _M_rightmost());
 8004a4e:	2300      	movs	r3, #0
 8004a50:	61fb      	str	r3, [r7, #28]
 8004a52:	68b8      	ldr	r0, [r7, #8]
 8004a54:	f000 ff5c 	bl	8005910 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_rightmostEv>
 8004a58:	4602      	mov	r2, r0
 8004a5a:	f107 031c 	add.w	r3, r7, #28
 8004a5e:	4619      	mov	r1, r3
 8004a60:	68f8      	ldr	r0, [r7, #12]
 8004a62:	f000 fca3 	bl	80053ac <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 8004a66:	e0db      	b.n	8004c20 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
	    return _M_get_insert_unique_pos(__k);
 8004a68:	68fb      	ldr	r3, [r7, #12]
 8004a6a:	683a      	ldr	r2, [r7, #0]
 8004a6c:	68b9      	ldr	r1, [r7, #8]
 8004a6e:	4618      	mov	r0, r3
 8004a70:	f000 ff66 	bl	8005940 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_>
 8004a74:	e0d4      	b.n	8004c20 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
      else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
 8004a76:	68bc      	ldr	r4, [r7, #8]
 8004a78:	69bb      	ldr	r3, [r7, #24]
 8004a7a:	4618      	mov	r0, r3
 8004a7c:	f000 ff54 	bl	8005928 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8004a80:	4603      	mov	r3, r0
 8004a82:	461a      	mov	r2, r3
 8004a84:	6839      	ldr	r1, [r7, #0]
 8004a86:	4620      	mov	r0, r4
 8004a88:	f000 fc7b 	bl	8005382 <_ZNKSt4lessIcEclERKcS2_>
 8004a8c:	4603      	mov	r3, r0
 8004a8e:	2b00      	cmp	r3, #0
 8004a90:	d057      	beq.n	8004b42 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x160>
	  iterator __before = __pos;
 8004a92:	69bb      	ldr	r3, [r7, #24]
 8004a94:	617b      	str	r3, [r7, #20]
	  if (__pos._M_node == _M_leftmost()) // begin()
 8004a96:	69bc      	ldr	r4, [r7, #24]
 8004a98:	68b8      	ldr	r0, [r7, #8]
 8004a9a:	f000 ffd6 	bl	8005a4a <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_leftmostEv>
 8004a9e:	4603      	mov	r3, r0
 8004aa0:	681b      	ldr	r3, [r3, #0]
 8004aa2:	429c      	cmp	r4, r3
 8004aa4:	bf0c      	ite	eq
 8004aa6:	2301      	moveq	r3, #1
 8004aa8:	2300      	movne	r3, #0
 8004aaa:	b2db      	uxtb	r3, r3
 8004aac:	2b00      	cmp	r3, #0
 8004aae:	d00d      	beq.n	8004acc <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0xea>
	    return _Res(_M_leftmost(), _M_leftmost());
 8004ab0:	68b8      	ldr	r0, [r7, #8]
 8004ab2:	f000 ffca 	bl	8005a4a <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_leftmostEv>
 8004ab6:	4604      	mov	r4, r0
 8004ab8:	68b8      	ldr	r0, [r7, #8]
 8004aba:	f000 ffc6 	bl	8005a4a <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_leftmostEv>
 8004abe:	4603      	mov	r3, r0
 8004ac0:	461a      	mov	r2, r3
 8004ac2:	4621      	mov	r1, r4
 8004ac4:	68f8      	ldr	r0, [r7, #12]
 8004ac6:	f000 fd18 	bl	80054fa <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
 8004aca:	e0a9      	b.n	8004c20 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
 8004acc:	68bc      	ldr	r4, [r7, #8]
 8004ace:	f107 0314 	add.w	r3, r7, #20
 8004ad2:	4618      	mov	r0, r3
 8004ad4:	f000 ffc5 	bl	8005a62 <_ZNSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEEmmEv>
 8004ad8:	4603      	mov	r3, r0
 8004ada:	681b      	ldr	r3, [r3, #0]
 8004adc:	4618      	mov	r0, r3
 8004ade:	f000 ff23 	bl	8005928 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8004ae2:	4603      	mov	r3, r0
 8004ae4:	683a      	ldr	r2, [r7, #0]
 8004ae6:	4619      	mov	r1, r3
 8004ae8:	4620      	mov	r0, r4
 8004aea:	f000 fc4a 	bl	8005382 <_ZNKSt4lessIcEclERKcS2_>
 8004aee:	4603      	mov	r3, r0
 8004af0:	2b00      	cmp	r3, #0
 8004af2:	d01f      	beq.n	8004b34 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x152>
	      if (_S_right(__before._M_node) == 0)
 8004af4:	697b      	ldr	r3, [r7, #20]
 8004af6:	4618      	mov	r0, r3
 8004af8:	f7ff ff3b 	bl	8004972 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base>
 8004afc:	4603      	mov	r3, r0
 8004afe:	2b00      	cmp	r3, #0
 8004b00:	bf0c      	ite	eq
 8004b02:	2301      	moveq	r3, #1
 8004b04:	2300      	movne	r3, #0
 8004b06:	b2db      	uxtb	r3, r3
 8004b08:	2b00      	cmp	r3, #0
 8004b0a:	d00a      	beq.n	8004b22 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x140>
		return _Res(0, __before._M_node);
 8004b0c:	2300      	movs	r3, #0
 8004b0e:	623b      	str	r3, [r7, #32]
 8004b10:	f107 0214 	add.w	r2, r7, #20
 8004b14:	f107 0320 	add.w	r3, r7, #32
 8004b18:	4619      	mov	r1, r3
 8004b1a:	68f8      	ldr	r0, [r7, #12]
 8004b1c:	f000 fc46 	bl	80053ac <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 8004b20:	e07e      	b.n	8004c20 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
		return _Res(__pos._M_node, __pos._M_node);
 8004b22:	f107 0218 	add.w	r2, r7, #24
 8004b26:	f107 0318 	add.w	r3, r7, #24
 8004b2a:	4619      	mov	r1, r3
 8004b2c:	68f8      	ldr	r0, [r7, #12]
 8004b2e:	f000 fce4 	bl	80054fa <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
 8004b32:	e075      	b.n	8004c20 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
	    return _M_get_insert_unique_pos(__k);
 8004b34:	68fb      	ldr	r3, [r7, #12]
 8004b36:	683a      	ldr	r2, [r7, #0]
 8004b38:	68b9      	ldr	r1, [r7, #8]
 8004b3a:	4618      	mov	r0, r3
 8004b3c:	f000 ff00 	bl	8005940 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_>
 8004b40:	e06e      	b.n	8004c20 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
      else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
 8004b42:	68bc      	ldr	r4, [r7, #8]
 8004b44:	69bb      	ldr	r3, [r7, #24]
 8004b46:	4618      	mov	r0, r3
 8004b48:	f000 feee 	bl	8005928 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8004b4c:	4603      	mov	r3, r0
 8004b4e:	683a      	ldr	r2, [r7, #0]
 8004b50:	4619      	mov	r1, r3
 8004b52:	4620      	mov	r0, r4
 8004b54:	f000 fc15 	bl	8005382 <_ZNKSt4lessIcEclERKcS2_>
 8004b58:	4603      	mov	r3, r0
 8004b5a:	2b00      	cmp	r3, #0
 8004b5c:	d056      	beq.n	8004c0c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x22a>
	  iterator __after = __pos;
 8004b5e:	69bb      	ldr	r3, [r7, #24]
 8004b60:	613b      	str	r3, [r7, #16]
	  if (__pos._M_node == _M_rightmost())
 8004b62:	69bc      	ldr	r4, [r7, #24]
 8004b64:	68b8      	ldr	r0, [r7, #8]
 8004b66:	f000 fed3 	bl	8005910 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_rightmostEv>
 8004b6a:	4603      	mov	r3, r0
 8004b6c:	681b      	ldr	r3, [r3, #0]
 8004b6e:	429c      	cmp	r4, r3
 8004b70:	bf0c      	ite	eq
 8004b72:	2301      	moveq	r3, #1
 8004b74:	2300      	movne	r3, #0
 8004b76:	b2db      	uxtb	r3, r3
 8004b78:	2b00      	cmp	r3, #0
 8004b7a:	d00c      	beq.n	8004b96 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x1b4>
	    return _Res(0, _M_rightmost());
 8004b7c:	2300      	movs	r3, #0
 8004b7e:	627b      	str	r3, [r7, #36]	; 0x24
 8004b80:	68b8      	ldr	r0, [r7, #8]
 8004b82:	f000 fec5 	bl	8005910 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_rightmostEv>
 8004b86:	4602      	mov	r2, r0
 8004b88:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8004b8c:	4619      	mov	r1, r3
 8004b8e:	68f8      	ldr	r0, [r7, #12]
 8004b90:	f000 fc0c 	bl	80053ac <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 8004b94:	e044      	b.n	8004c20 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
 8004b96:	68bc      	ldr	r4, [r7, #8]
 8004b98:	f107 0310 	add.w	r3, r7, #16
 8004b9c:	4618      	mov	r0, r3
 8004b9e:	f000 ff71 	bl	8005a84 <_ZNSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEEppEv>
 8004ba2:	4603      	mov	r3, r0
 8004ba4:	681b      	ldr	r3, [r3, #0]
 8004ba6:	4618      	mov	r0, r3
 8004ba8:	f000 febe 	bl	8005928 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8004bac:	4603      	mov	r3, r0
 8004bae:	461a      	mov	r2, r3
 8004bb0:	6839      	ldr	r1, [r7, #0]
 8004bb2:	4620      	mov	r0, r4
 8004bb4:	f000 fbe5 	bl	8005382 <_ZNKSt4lessIcEclERKcS2_>
 8004bb8:	4603      	mov	r3, r0
 8004bba:	2b00      	cmp	r3, #0
 8004bbc:	d01f      	beq.n	8004bfe <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x21c>
	      if (_S_right(__pos._M_node) == 0)
 8004bbe:	69bb      	ldr	r3, [r7, #24]
 8004bc0:	4618      	mov	r0, r3
 8004bc2:	f7ff fed6 	bl	8004972 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base>
 8004bc6:	4603      	mov	r3, r0
 8004bc8:	2b00      	cmp	r3, #0
 8004bca:	bf0c      	ite	eq
 8004bcc:	2301      	moveq	r3, #1
 8004bce:	2300      	movne	r3, #0
 8004bd0:	b2db      	uxtb	r3, r3
 8004bd2:	2b00      	cmp	r3, #0
 8004bd4:	d00a      	beq.n	8004bec <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x20a>
		return _Res(0, __pos._M_node);
 8004bd6:	2300      	movs	r3, #0
 8004bd8:	62bb      	str	r3, [r7, #40]	; 0x28
 8004bda:	f107 0218 	add.w	r2, r7, #24
 8004bde:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8004be2:	4619      	mov	r1, r3
 8004be4:	68f8      	ldr	r0, [r7, #12]
 8004be6:	f000 fbe1 	bl	80053ac <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 8004bea:	e019      	b.n	8004c20 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
		return _Res(__after._M_node, __after._M_node);
 8004bec:	f107 0210 	add.w	r2, r7, #16
 8004bf0:	f107 0310 	add.w	r3, r7, #16
 8004bf4:	4619      	mov	r1, r3
 8004bf6:	68f8      	ldr	r0, [r7, #12]
 8004bf8:	f000 fc7f 	bl	80054fa <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
 8004bfc:	e010      	b.n	8004c20 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
	    return _M_get_insert_unique_pos(__k);
 8004bfe:	68fb      	ldr	r3, [r7, #12]
 8004c00:	683a      	ldr	r2, [r7, #0]
 8004c02:	68b9      	ldr	r1, [r7, #8]
 8004c04:	4618      	mov	r0, r3
 8004c06:	f000 fe9b 	bl	8005940 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_>
 8004c0a:	e009      	b.n	8004c20 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
	return _Res(__pos._M_node, 0);
 8004c0c:	2300      	movs	r3, #0
 8004c0e:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004c10:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 8004c14:	f107 0318 	add.w	r3, r7, #24
 8004c18:	4619      	mov	r1, r3
 8004c1a:	68f8      	ldr	r0, [r7, #12]
 8004c1c:	f000 fca8 	bl	8005570 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_>
    }
 8004c20:	68f8      	ldr	r0, [r7, #12]
 8004c22:	3734      	adds	r7, #52	; 0x34
 8004c24:	46bd      	mov	sp, r7
 8004c26:	bd90      	pop	{r4, r7, pc}

08004c28 <_ZNKSt10_Select1stISt4pairIKc12double_tokenEEclERKS3_>:
      operator()(const _Pair& __x) const
 8004c28:	b480      	push	{r7}
 8004c2a:	b083      	sub	sp, #12
 8004c2c:	af00      	add	r7, sp, #0
 8004c2e:	6078      	str	r0, [r7, #4]
 8004c30:	6039      	str	r1, [r7, #0]
      { return __x.first; }
 8004c32:	683b      	ldr	r3, [r7, #0]
 8004c34:	4618      	mov	r0, r3
 8004c36:	370c      	adds	r7, #12
 8004c38:	46bd      	mov	sp, r7
 8004c3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004c3e:	4770      	bx	lr

08004c40 <_ZSt7forwardIRKSt4pairIKc12double_tokenEEOT_RNSt16remove_referenceIS6_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8004c40:	b480      	push	{r7}
 8004c42:	b083      	sub	sp, #12
 8004c44:	af00      	add	r7, sp, #0
 8004c46:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8004c48:	687b      	ldr	r3, [r7, #4]
 8004c4a:	4618      	mov	r0, r3
 8004c4c:	370c      	adds	r7, #12
 8004c4e:	46bd      	mov	sp, r7
 8004c50:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004c54:	4770      	bx	lr

08004c56 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_>:
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8004c56:	b5b0      	push	{r4, r5, r7, lr}
 8004c58:	b088      	sub	sp, #32
 8004c5a:	af00      	add	r7, sp, #0
 8004c5c:	60f8      	str	r0, [r7, #12]
 8004c5e:	60b9      	str	r1, [r7, #8]
 8004c60:	607a      	str	r2, [r7, #4]
 8004c62:	603b      	str	r3, [r7, #0]
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
 8004c64:	68bb      	ldr	r3, [r7, #8]
 8004c66:	2b00      	cmp	r3, #0
 8004c68:	d11a      	bne.n	8004ca0 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_+0x4a>
	bool __insert_left = (__x != 0 || __p == _M_end()
 8004c6a:	68f8      	ldr	r0, [r7, #12]
 8004c6c:	f000 fe38 	bl	80058e0 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_M_endEv>
 8004c70:	4602      	mov	r2, r0
 8004c72:	687b      	ldr	r3, [r7, #4]
 8004c74:	4293      	cmp	r3, r2
 8004c76:	d013      	beq.n	8004ca0 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_+0x4a>
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
 8004c78:	68fc      	ldr	r4, [r7, #12]
 8004c7a:	f107 0310 	add.w	r3, r7, #16
 8004c7e:	6839      	ldr	r1, [r7, #0]
 8004c80:	4618      	mov	r0, r3
 8004c82:	f7ff ffd1 	bl	8004c28 <_ZNKSt10_Select1stISt4pairIKc12double_tokenEEclERKS3_>
 8004c86:	4605      	mov	r5, r0
 8004c88:	6878      	ldr	r0, [r7, #4]
 8004c8a:	f000 fe4d 	bl	8005928 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8004c8e:	4603      	mov	r3, r0
 8004c90:	461a      	mov	r2, r3
 8004c92:	4629      	mov	r1, r5
 8004c94:	4620      	mov	r0, r4
 8004c96:	f000 fb74 	bl	8005382 <_ZNKSt4lessIcEclERKcS2_>
 8004c9a:	4603      	mov	r3, r0
 8004c9c:	2b00      	cmp	r3, #0
 8004c9e:	d001      	beq.n	8004ca4 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_+0x4e>
 8004ca0:	2301      	movs	r3, #1
 8004ca2:	e000      	b.n	8004ca6 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_+0x50>
 8004ca4:	2300      	movs	r3, #0
	bool __insert_left = (__x != 0 || __p == _M_end()
 8004ca6:	77fb      	strb	r3, [r7, #31]
	_Link_type __z = __node_gen(_GLIBCXX_FORWARD(_Arg, __v));
 8004ca8:	6838      	ldr	r0, [r7, #0]
 8004caa:	f7ff ffc9 	bl	8004c40 <_ZSt7forwardIRKSt4pairIKc12double_tokenEEOT_RNSt16remove_referenceIS6_E4typeE>
 8004cae:	4603      	mov	r3, r0
 8004cb0:	4619      	mov	r1, r3
 8004cb2:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8004cb4:	f000 fef7 	bl	8005aa6 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_Alloc_nodeclIRKS3_EEPSt13_Rb_tree_nodeIS3_EOT_>
 8004cb8:	61b8      	str	r0, [r7, #24]
				      this->_M_impl._M_header);
 8004cba:	68fb      	ldr	r3, [r7, #12]
 8004cbc:	3304      	adds	r3, #4
	_Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
 8004cbe:	7ff8      	ldrb	r0, [r7, #31]
 8004cc0:	687a      	ldr	r2, [r7, #4]
 8004cc2:	69b9      	ldr	r1, [r7, #24]
 8004cc4:	f01d fe18 	bl	80228f8 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
	++_M_impl._M_node_count;
 8004cc8:	68fb      	ldr	r3, [r7, #12]
 8004cca:	695b      	ldr	r3, [r3, #20]
 8004ccc:	1c5a      	adds	r2, r3, #1
 8004cce:	68fb      	ldr	r3, [r7, #12]
 8004cd0:	615a      	str	r2, [r3, #20]
	return iterator(__z);
 8004cd2:	f107 0314 	add.w	r3, r7, #20
 8004cd6:	69b9      	ldr	r1, [r7, #24]
 8004cd8:	4618      	mov	r0, r3
 8004cda:	f7ff fe73 	bl	80049c4 <_ZNSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEEC1EPSt18_Rb_tree_node_base>
 8004cde:	697b      	ldr	r3, [r7, #20]
      }
 8004ce0:	4618      	mov	r0, r3
 8004ce2:	3720      	adds	r7, #32
 8004ce4:	46bd      	mov	sp, r7
 8004ce6:	bdb0      	pop	{r4, r5, r7, pc}

08004ce8 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8004ce8:	b480      	push	{r7}
 8004cea:	b083      	sub	sp, #12
 8004cec:	af00      	add	r7, sp, #0
 8004cee:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8004cf0:	687b      	ldr	r3, [r7, #4]
 8004cf2:	4618      	mov	r0, r3
 8004cf4:	370c      	adds	r7, #12
 8004cf6:	46bd      	mov	sp, r7
 8004cf8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004cfc:	4770      	bx	lr

08004cfe <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_JRiEENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8004cfe:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004d00:	b083      	sub	sp, #12
 8004d02:	af00      	add	r7, sp, #0
 8004d04:	6078      	str	r0, [r7, #4]
 8004d06:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8004d08:	6878      	ldr	r0, [r7, #4]
 8004d0a:	f000 f8b1 	bl	8004e70 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8004d0e:	4604      	mov	r4, r0
 8004d10:	6838      	ldr	r0, [r7, #0]
 8004d12:	f000 fedc 	bl	8005ace <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 8004d16:	4603      	mov	r3, r0
 8004d18:	461a      	mov	r2, r3
 8004d1a:	4621      	mov	r1, r4
 8004d1c:	4628      	mov	r0, r5
 8004d1e:	f000 fee1 	bl	8005ae4 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEE13_M_reset_implEvEUlOT_E_JRiEESF_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 8004d22:	4633      	mov	r3, r6
    }
 8004d24:	4618      	mov	r0, r3
 8004d26:	370c      	adds	r7, #12
 8004d28:	46bd      	mov	sp, r7
 8004d2a:	bdf0      	pop	{r4, r5, r6, r7, pc}

08004d2c <_ZNRSt8__detail9__variant14_UninitializedIfLb1EE6_M_getEv>:
      constexpr _Type& _M_get() & noexcept
 8004d2c:	b480      	push	{r7}
 8004d2e:	b083      	sub	sp, #12
 8004d30:	af00      	add	r7, sp, #0
 8004d32:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 8004d34:	687b      	ldr	r3, [r7, #4]
 8004d36:	4618      	mov	r0, r3
 8004d38:	370c      	adds	r7, #12
 8004d3a:	46bd      	mov	sp, r7
 8004d3c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004d40:	4770      	bx	lr

08004d42 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_JRfEENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8004d42:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004d44:	b083      	sub	sp, #12
 8004d46:	af00      	add	r7, sp, #0
 8004d48:	6078      	str	r0, [r7, #4]
 8004d4a:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8004d4c:	6878      	ldr	r0, [r7, #4]
 8004d4e:	f000 f88f 	bl	8004e70 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8004d52:	4604      	mov	r4, r0
 8004d54:	6838      	ldr	r0, [r7, #0]
 8004d56:	f000 fedc 	bl	8005b12 <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 8004d5a:	4603      	mov	r3, r0
 8004d5c:	461a      	mov	r2, r3
 8004d5e:	4621      	mov	r1, r4
 8004d60:	4628      	mov	r0, r5
 8004d62:	f000 fee1 	bl	8005b28 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEE13_M_reset_implEvEUlOT_E_JRfEESF_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 8004d66:	4633      	mov	r3, r6
    }
 8004d68:	4618      	mov	r0, r3
 8004d6a:	370c      	adds	r7, #12
 8004d6c:	46bd      	mov	sp, r7
 8004d6e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08004d70 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_JRbEENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8004d70:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004d72:	b083      	sub	sp, #12
 8004d74:	af00      	add	r7, sp, #0
 8004d76:	6078      	str	r0, [r7, #4]
 8004d78:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8004d7a:	6878      	ldr	r0, [r7, #4]
 8004d7c:	f000 f878 	bl	8004e70 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8004d80:	4604      	mov	r4, r0
 8004d82:	6838      	ldr	r0, [r7, #0]
 8004d84:	f000 fee7 	bl	8005b56 <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
 8004d88:	4603      	mov	r3, r0
 8004d8a:	461a      	mov	r2, r3
 8004d8c:	4621      	mov	r1, r4
 8004d8e:	4628      	mov	r0, r5
 8004d90:	f000 feec 	bl	8005b6c <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEE13_M_reset_implEvEUlOT_E_JRbEESF_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 8004d94:	4633      	mov	r3, r6
    }
 8004d96:	4618      	mov	r0, r3
 8004d98:	370c      	adds	r7, #12
 8004d9a:	46bd      	mov	sp, r7
 8004d9c:	bdf0      	pop	{r4, r5, r6, r7, pc}

08004d9e <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8004d9e:	b480      	push	{r7}
 8004da0:	b083      	sub	sp, #12
 8004da2:	af00      	add	r7, sp, #0
 8004da4:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8004da6:	687b      	ldr	r3, [r7, #4]
 8004da8:	4618      	mov	r0, r3
 8004daa:	370c      	adds	r7, #12
 8004dac:	46bd      	mov	sp, r7
 8004dae:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004db2:	4770      	bx	lr

08004db4 <_ZNRSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE6_M_getEv>:
      _Type& _M_get() & noexcept
 8004db4:	b580      	push	{r7, lr}
 8004db6:	b082      	sub	sp, #8
 8004db8:	af00      	add	r7, sp, #0
 8004dba:	6078      	str	r0, [r7, #4]
      { return *_M_storage._M_ptr(); }
 8004dbc:	687b      	ldr	r3, [r7, #4]
 8004dbe:	4618      	mov	r0, r3
 8004dc0:	f000 feeb 	bl	8005b9a <_ZN9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE6_M_ptrEv>
 8004dc4:	4603      	mov	r3, r0
 8004dc6:	4618      	mov	r0, r3
 8004dc8:	3708      	adds	r7, #8
 8004dca:	46bd      	mov	sp, r7
 8004dcc:	bd80      	pop	{r7, pc}

08004dce <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_JRS8_EENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8004dce:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004dd0:	b083      	sub	sp, #12
 8004dd2:	af00      	add	r7, sp, #0
 8004dd4:	6078      	str	r0, [r7, #4]
 8004dd6:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8004dd8:	6878      	ldr	r0, [r7, #4]
 8004dda:	f000 f849 	bl	8004e70 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8004dde:	4604      	mov	r4, r0
 8004de0:	6838      	ldr	r0, [r7, #0]
 8004de2:	f000 fee6 	bl	8005bb2 <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 8004de6:	4603      	mov	r3, r0
 8004de8:	461a      	mov	r2, r3
 8004dea:	4621      	mov	r1, r4
 8004dec:	4628      	mov	r0, r5
 8004dee:	f000 feeb 	bl	8005bc8 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEE13_M_reset_implEvEUlOT_E_JRS9_EESF_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 8004df2:	4633      	mov	r3, r6
    }
 8004df4:	4618      	mov	r0, r3
 8004df6:	370c      	adds	r7, #12
 8004df8:	46bd      	mov	sp, r7
 8004dfa:	bdf0      	pop	{r4, r5, r6, r7, pc}

08004dfc <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJSt6vectorI6SymbolSaIS4_EEEEEEOT_RNSt16remove_referenceIS9_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8004dfc:	b480      	push	{r7}
 8004dfe:	b083      	sub	sp, #12
 8004e00:	af00      	add	r7, sp, #0
 8004e02:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8004e04:	687b      	ldr	r3, [r7, #4]
 8004e06:	4618      	mov	r0, r3
 8004e08:	370c      	adds	r7, #12
 8004e0a:	46bd      	mov	sp, r7
 8004e0c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004e10:	4770      	bx	lr

08004e12 <_ZNRSt8__detail9__variant14_UninitializedISt6vectorI6SymbolSaIS3_EELb0EE6_M_getEv>:
      _Type& _M_get() & noexcept
 8004e12:	b580      	push	{r7, lr}
 8004e14:	b082      	sub	sp, #8
 8004e16:	af00      	add	r7, sp, #0
 8004e18:	6078      	str	r0, [r7, #4]
      { return *_M_storage._M_ptr(); }
 8004e1a:	687b      	ldr	r3, [r7, #4]
 8004e1c:	4618      	mov	r0, r3
 8004e1e:	f000 feea 	bl	8005bf6 <_ZN9__gnu_cxx16__aligned_membufISt6vectorI6SymbolSaIS2_EEE6_M_ptrEv>
 8004e22:	4603      	mov	r3, r0
 8004e24:	4618      	mov	r0, r3
 8004e26:	3708      	adds	r7, #8
 8004e28:	46bd      	mov	sp, r7
 8004e2a:	bd80      	pop	{r7, pc}

08004e2c <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_JRSC_EENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8004e2c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004e2e:	b083      	sub	sp, #12
 8004e30:	af00      	add	r7, sp, #0
 8004e32:	6078      	str	r0, [r7, #4]
 8004e34:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8004e36:	6878      	ldr	r0, [r7, #4]
 8004e38:	f000 f81a 	bl	8004e70 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8004e3c:	4604      	mov	r4, r0
 8004e3e:	6838      	ldr	r0, [r7, #0]
 8004e40:	f000 fee5 	bl	8005c0e <_ZSt7forwardIRSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS5_E4typeE>
 8004e44:	4603      	mov	r3, r0
 8004e46:	461a      	mov	r2, r3
 8004e48:	4621      	mov	r1, r4
 8004e4a:	4628      	mov	r0, r5
 8004e4c:	f000 feea 	bl	8005c24 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEE13_M_reset_implEvEUlOT_E_JRSD_EESF_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 8004e50:	4633      	mov	r3, r6
    }
 8004e52:	4618      	mov	r0, r3
 8004e54:	370c      	adds	r7, #12
 8004e56:	46bd      	mov	sp, r7
 8004e58:	bdf0      	pop	{r4, r5, r6, r7, pc}

08004e5a <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbS9_SD_EEEJEE9_M_accessEv>:
      _M_access() const
 8004e5a:	b480      	push	{r7}
 8004e5c:	b083      	sub	sp, #12
 8004e5e:	af00      	add	r7, sp, #0
 8004e60:	6078      	str	r0, [r7, #4]
      { return _M_data; }
 8004e62:	687b      	ldr	r3, [r7, #4]
 8004e64:	4618      	mov	r0, r3
 8004e66:	370c      	adds	r7, #12
 8004e68:	46bd      	mov	sp, r7
 8004e6a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004e6e:	4770      	bx	lr

08004e70 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8004e70:	b480      	push	{r7}
 8004e72:	b083      	sub	sp, #12
 8004e74:	af00      	add	r7, sp, #0
 8004e76:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8004e78:	687b      	ldr	r3, [r7, #4]
 8004e7a:	4618      	mov	r0, r3
 8004e7c:	370c      	adds	r7, #12
 8004e7e:	46bd      	mov	sp, r7
 8004e80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004e84:	4770      	bx	lr

08004e86 <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_ENUlOT_T0_E_clIRKiSt17integral_constantIjLj0EEEENS0_20__variant_idx_cookieESG_SH_>:
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8004e86:	b5b0      	push	{r4, r5, r7, lr}
 8004e88:	b084      	sub	sp, #16
 8004e8a:	af00      	add	r7, sp, #0
 8004e8c:	60f8      	str	r0, [r7, #12]
 8004e8e:	60b9      	str	r1, [r7, #8]
 8004e90:	713a      	strb	r2, [r7, #4]
 8004e92:	68fb      	ldr	r3, [r7, #12]
 8004e94:	681b      	ldr	r3, [r3, #0]
		if (this->_M_index == __rhs_index)
 8004e96:	7e1b      	ldrb	r3, [r3, #24]
 8004e98:	461c      	mov	r4, r3
 8004e9a:	1d3b      	adds	r3, r7, #4
 8004e9c:	4618      	mov	r0, r3
 8004e9e:	f000 f825 	bl	8004eec <_ZNKSt17integral_constantIjLj0EEcvjEv>
 8004ea2:	4603      	mov	r3, r0
 8004ea4:	429c      	cmp	r4, r3
 8004ea6:	bf0c      	ite	eq
 8004ea8:	2301      	moveq	r3, #1
 8004eaa:	2300      	movne	r3, #0
 8004eac:	b2db      	uxtb	r3, r3
 8004eae:	2b00      	cmp	r3, #0
 8004eb0:	d009      	beq.n	8004ec6 <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_ENUlOT_T0_E_clIRKiSt17integral_constantIjLj0EEEENS0_20__variant_idx_cookieESG_SH_+0x40>
		  __variant::__get<__rhs_index>(*this) = __rhs_mem;
 8004eb2:	68bb      	ldr	r3, [r7, #8]
 8004eb4:	681c      	ldr	r4, [r3, #0]
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8004eb6:	68fb      	ldr	r3, [r7, #12]
 8004eb8:	681b      	ldr	r3, [r3, #0]
		  __variant::__get<__rhs_index>(*this) = __rhs_mem;
 8004eba:	4618      	mov	r0, r3
 8004ebc:	f000 f821 	bl	8004f02 <_ZNSt8__detail9__variant5__getILj0ERNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcOT0_>
 8004ec0:	4603      	mov	r3, r0
 8004ec2:	601c      	str	r4, [r3, #0]
	    return {};
 8004ec4:	e00d      	b.n	8004ee2 <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_ENUlOT_T0_E_clIRKiSt17integral_constantIjLj0EEEENS0_20__variant_idx_cookieESG_SH_+0x5c>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8004ec6:	68fb      	ldr	r3, [r7, #12]
 8004ec8:	681b      	ldr	r3, [r3, #0]
		      this->_M_destructive_copy(__rhs_index, __rhs_mem);
 8004eca:	461c      	mov	r4, r3
 8004ecc:	1d3b      	adds	r3, r7, #4
 8004ece:	4618      	mov	r0, r3
 8004ed0:	f000 f80c 	bl	8004eec <_ZNKSt17integral_constantIjLj0EEcvjEv>
 8004ed4:	4603      	mov	r3, r0
 8004ed6:	b29b      	uxth	r3, r3
 8004ed8:	68ba      	ldr	r2, [r7, #8]
 8004eda:	4619      	mov	r1, r3
 8004edc:	4620      	mov	r0, r4
 8004ede:	f000 fec3 	bl	8005c68 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE19_M_destructive_copyIiEEvtRKT_>
	    return {};
 8004ee2:	462b      	mov	r3, r5
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8004ee4:	4618      	mov	r0, r3
 8004ee6:	3710      	adds	r7, #16
 8004ee8:	46bd      	mov	sp, r7
 8004eea:	bdb0      	pop	{r4, r5, r7, pc}

08004eec <_ZNKSt17integral_constantIjLj0EEcvjEv>:
    struct integral_constant
    {
      static constexpr _Tp                  value = __v;
      typedef _Tp                           value_type;
      typedef integral_constant<_Tp, __v>   type;
      constexpr operator value_type() const noexcept { return value; }
 8004eec:	b480      	push	{r7}
 8004eee:	b083      	sub	sp, #12
 8004ef0:	af00      	add	r7, sp, #0
 8004ef2:	6078      	str	r0, [r7, #4]
 8004ef4:	2300      	movs	r3, #0
 8004ef6:	4618      	mov	r0, r3
 8004ef8:	370c      	adds	r7, #12
 8004efa:	46bd      	mov	sp, r7
 8004efc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004f00:	4770      	bx	lr

08004f02 <_ZNSt8__detail9__variant5__getILj0ERNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8004f02:	b590      	push	{r4, r7, lr}
 8004f04:	b083      	sub	sp, #12
 8004f06:	af00      	add	r7, sp, #0
 8004f08:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8004f0a:	6878      	ldr	r0, [r7, #4]
 8004f0c:	f000 fea1 	bl	8005c52 <_ZSt7forwardIRNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8004f10:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8004f12:	4619      	mov	r1, r3
 8004f14:	4620      	mov	r0, r4
 8004f16:	f7fc fd03 	bl	8001920 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 8004f1a:	4603      	mov	r3, r0
    }
 8004f1c:	4618      	mov	r0, r3
 8004f1e:	370c      	adds	r7, #12
 8004f20:	46bd      	mov	sp, r7
 8004f22:	bd90      	pop	{r4, r7, pc}

08004f24 <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_ENUlOT_T0_E_clIRKfSt17integral_constantIjLj1EEEENS0_20__variant_idx_cookieESG_SH_>:
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8004f24:	b5b0      	push	{r4, r5, r7, lr}
 8004f26:	b084      	sub	sp, #16
 8004f28:	af00      	add	r7, sp, #0
 8004f2a:	60f8      	str	r0, [r7, #12]
 8004f2c:	60b9      	str	r1, [r7, #8]
 8004f2e:	713a      	strb	r2, [r7, #4]
 8004f30:	68fb      	ldr	r3, [r7, #12]
 8004f32:	681b      	ldr	r3, [r3, #0]
		if (this->_M_index == __rhs_index)
 8004f34:	7e1b      	ldrb	r3, [r3, #24]
 8004f36:	461c      	mov	r4, r3
 8004f38:	1d3b      	adds	r3, r7, #4
 8004f3a:	4618      	mov	r0, r3
 8004f3c:	f000 f825 	bl	8004f8a <_ZNKSt17integral_constantIjLj1EEcvjEv>
 8004f40:	4603      	mov	r3, r0
 8004f42:	429c      	cmp	r4, r3
 8004f44:	bf0c      	ite	eq
 8004f46:	2301      	moveq	r3, #1
 8004f48:	2300      	movne	r3, #0
 8004f4a:	b2db      	uxtb	r3, r3
 8004f4c:	2b00      	cmp	r3, #0
 8004f4e:	d009      	beq.n	8004f64 <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_ENUlOT_T0_E_clIRKfSt17integral_constantIjLj1EEEENS0_20__variant_idx_cookieESG_SH_+0x40>
		  __variant::__get<__rhs_index>(*this) = __rhs_mem;
 8004f50:	68bb      	ldr	r3, [r7, #8]
 8004f52:	681c      	ldr	r4, [r3, #0]
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8004f54:	68fb      	ldr	r3, [r7, #12]
 8004f56:	681b      	ldr	r3, [r3, #0]
		  __variant::__get<__rhs_index>(*this) = __rhs_mem;
 8004f58:	4618      	mov	r0, r3
 8004f5a:	f000 f821 	bl	8004fa0 <_ZNSt8__detail9__variant5__getILj1ERNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcOT0_>
 8004f5e:	4603      	mov	r3, r0
 8004f60:	601c      	str	r4, [r3, #0]
	    return {};
 8004f62:	e00d      	b.n	8004f80 <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_ENUlOT_T0_E_clIRKfSt17integral_constantIjLj1EEEENS0_20__variant_idx_cookieESG_SH_+0x5c>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8004f64:	68fb      	ldr	r3, [r7, #12]
 8004f66:	681b      	ldr	r3, [r3, #0]
		      this->_M_destructive_copy(__rhs_index, __rhs_mem);
 8004f68:	461c      	mov	r4, r3
 8004f6a:	1d3b      	adds	r3, r7, #4
 8004f6c:	4618      	mov	r0, r3
 8004f6e:	f000 f80c 	bl	8004f8a <_ZNKSt17integral_constantIjLj1EEcvjEv>
 8004f72:	4603      	mov	r3, r0
 8004f74:	b29b      	uxth	r3, r3
 8004f76:	68ba      	ldr	r2, [r7, #8]
 8004f78:	4619      	mov	r1, r3
 8004f7a:	4620      	mov	r0, r4
 8004f7c:	f000 fe8b 	bl	8005c96 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE19_M_destructive_copyIfEEvtRKT_>
	    return {};
 8004f80:	462b      	mov	r3, r5
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8004f82:	4618      	mov	r0, r3
 8004f84:	3710      	adds	r7, #16
 8004f86:	46bd      	mov	sp, r7
 8004f88:	bdb0      	pop	{r4, r5, r7, pc}

08004f8a <_ZNKSt17integral_constantIjLj1EEcvjEv>:
 8004f8a:	b480      	push	{r7}
 8004f8c:	b083      	sub	sp, #12
 8004f8e:	af00      	add	r7, sp, #0
 8004f90:	6078      	str	r0, [r7, #4]
 8004f92:	2301      	movs	r3, #1
 8004f94:	4618      	mov	r0, r3
 8004f96:	370c      	adds	r7, #12
 8004f98:	46bd      	mov	sp, r7
 8004f9a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004f9e:	4770      	bx	lr

08004fa0 <_ZNSt8__detail9__variant5__getILj1ERNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8004fa0:	b590      	push	{r4, r7, lr}
 8004fa2:	b083      	sub	sp, #12
 8004fa4:	af00      	add	r7, sp, #0
 8004fa6:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8004fa8:	6878      	ldr	r0, [r7, #4]
 8004faa:	f000 fe52 	bl	8005c52 <_ZSt7forwardIRNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8004fae:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8004fb0:	4619      	mov	r1, r3
 8004fb2:	4620      	mov	r0, r4
 8004fb4:	f7fe fcb4 	bl	8003920 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8004fb8:	4603      	mov	r3, r0
    }
 8004fba:	4618      	mov	r0, r3
 8004fbc:	370c      	adds	r7, #12
 8004fbe:	46bd      	mov	sp, r7
 8004fc0:	bd90      	pop	{r4, r7, pc}

08004fc2 <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_ENUlOT_T0_E_clIRKbSt17integral_constantIjLj2EEEENS0_20__variant_idx_cookieESG_SH_>:
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8004fc2:	b5b0      	push	{r4, r5, r7, lr}
 8004fc4:	b084      	sub	sp, #16
 8004fc6:	af00      	add	r7, sp, #0
 8004fc8:	60f8      	str	r0, [r7, #12]
 8004fca:	60b9      	str	r1, [r7, #8]
 8004fcc:	713a      	strb	r2, [r7, #4]
 8004fce:	68fb      	ldr	r3, [r7, #12]
 8004fd0:	681b      	ldr	r3, [r3, #0]
		if (this->_M_index == __rhs_index)
 8004fd2:	7e1b      	ldrb	r3, [r3, #24]
 8004fd4:	461c      	mov	r4, r3
 8004fd6:	1d3b      	adds	r3, r7, #4
 8004fd8:	4618      	mov	r0, r3
 8004fda:	f000 f826 	bl	800502a <_ZNKSt17integral_constantIjLj2EEcvjEv>
 8004fde:	4603      	mov	r3, r0
 8004fe0:	429c      	cmp	r4, r3
 8004fe2:	bf0c      	ite	eq
 8004fe4:	2301      	moveq	r3, #1
 8004fe6:	2300      	movne	r3, #0
 8004fe8:	b2db      	uxtb	r3, r3
 8004fea:	2b00      	cmp	r3, #0
 8004fec:	d00a      	beq.n	8005004 <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_ENUlOT_T0_E_clIRKbSt17integral_constantIjLj2EEEENS0_20__variant_idx_cookieESG_SH_+0x42>
		  __variant::__get<__rhs_index>(*this) = __rhs_mem;
 8004fee:	68bb      	ldr	r3, [r7, #8]
 8004ff0:	781c      	ldrb	r4, [r3, #0]
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8004ff2:	68fb      	ldr	r3, [r7, #12]
 8004ff4:	681b      	ldr	r3, [r3, #0]
		  __variant::__get<__rhs_index>(*this) = __rhs_mem;
 8004ff6:	4618      	mov	r0, r3
 8004ff8:	f000 f822 	bl	8005040 <_ZNSt8__detail9__variant5__getILj2ERNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcOT0_>
 8004ffc:	4603      	mov	r3, r0
 8004ffe:	4622      	mov	r2, r4
 8005000:	701a      	strb	r2, [r3, #0]
	    return {};
 8005002:	e00d      	b.n	8005020 <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_ENUlOT_T0_E_clIRKbSt17integral_constantIjLj2EEEENS0_20__variant_idx_cookieESG_SH_+0x5e>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8005004:	68fb      	ldr	r3, [r7, #12]
 8005006:	681b      	ldr	r3, [r3, #0]
		      this->_M_destructive_copy(__rhs_index, __rhs_mem);
 8005008:	461c      	mov	r4, r3
 800500a:	1d3b      	adds	r3, r7, #4
 800500c:	4618      	mov	r0, r3
 800500e:	f000 f80c 	bl	800502a <_ZNKSt17integral_constantIjLj2EEcvjEv>
 8005012:	4603      	mov	r3, r0
 8005014:	b29b      	uxth	r3, r3
 8005016:	68ba      	ldr	r2, [r7, #8]
 8005018:	4619      	mov	r1, r3
 800501a:	4620      	mov	r0, r4
 800501c:	f000 fe52 	bl	8005cc4 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE19_M_destructive_copyIbEEvtRKT_>
	    return {};
 8005020:	462b      	mov	r3, r5
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8005022:	4618      	mov	r0, r3
 8005024:	3710      	adds	r7, #16
 8005026:	46bd      	mov	sp, r7
 8005028:	bdb0      	pop	{r4, r5, r7, pc}

0800502a <_ZNKSt17integral_constantIjLj2EEcvjEv>:
 800502a:	b480      	push	{r7}
 800502c:	b083      	sub	sp, #12
 800502e:	af00      	add	r7, sp, #0
 8005030:	6078      	str	r0, [r7, #4]
 8005032:	2302      	movs	r3, #2
 8005034:	4618      	mov	r0, r3
 8005036:	370c      	adds	r7, #12
 8005038:	46bd      	mov	sp, r7
 800503a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800503e:	4770      	bx	lr

08005040 <_ZNSt8__detail9__variant5__getILj2ERNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8005040:	b590      	push	{r4, r7, lr}
 8005042:	b083      	sub	sp, #12
 8005044:	af00      	add	r7, sp, #0
 8005046:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8005048:	6878      	ldr	r0, [r7, #4]
 800504a:	f000 fe02 	bl	8005c52 <_ZSt7forwardIRNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800504e:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8005050:	4619      	mov	r1, r3
 8005052:	4620      	mov	r0, r4
 8005054:	f7fc fa98 	bl	8001588 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8005058:	4603      	mov	r3, r0
    }
 800505a:	4618      	mov	r0, r3
 800505c:	370c      	adds	r7, #12
 800505e:	46bd      	mov	sp, r7
 8005060:	bd90      	pop	{r4, r7, pc}

08005062 <_ZNK9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7_M_addrEv>:
      _M_addr() const noexcept
 8005062:	b480      	push	{r7}
 8005064:	b083      	sub	sp, #12
 8005066:	af00      	add	r7, sp, #0
 8005068:	6078      	str	r0, [r7, #4]
      { return static_cast<const void*>(&_M_storage); }
 800506a:	687b      	ldr	r3, [r7, #4]
 800506c:	4618      	mov	r0, r3
 800506e:	370c      	adds	r7, #12
 8005070:	46bd      	mov	sp, r7
 8005072:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005076:	4770      	bx	lr

08005078 <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_ENUlOT_T0_E_clIRKS7_St17integral_constantIjLj3EEEENS0_20__variant_idx_cookieESG_SH_>:
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8005078:	b5b0      	push	{r4, r5, r7, lr}
 800507a:	b08c      	sub	sp, #48	; 0x30
 800507c:	af00      	add	r7, sp, #0
 800507e:	60f8      	str	r0, [r7, #12]
 8005080:	60b9      	str	r1, [r7, #8]
 8005082:	713a      	strb	r2, [r7, #4]
 8005084:	68fb      	ldr	r3, [r7, #12]
 8005086:	681b      	ldr	r3, [r3, #0]
		if (this->_M_index == __rhs_index)
 8005088:	7e1b      	ldrb	r3, [r3, #24]
 800508a:	461c      	mov	r4, r3
 800508c:	1d3b      	adds	r3, r7, #4
 800508e:	4618      	mov	r0, r3
 8005090:	f000 f82f 	bl	80050f2 <_ZNKSt17integral_constantIjLj3EEcvjEv>
 8005094:	4603      	mov	r3, r0
 8005096:	429c      	cmp	r4, r3
 8005098:	bf0c      	ite	eq
 800509a:	2301      	moveq	r3, #1
 800509c:	2300      	movne	r3, #0
 800509e:	b2db      	uxtb	r3, r3
 80050a0:	2b00      	cmp	r3, #0
 80050a2:	d00a      	beq.n	80050ba <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_ENUlOT_T0_E_clIRKS7_St17integral_constantIjLj3EEEENS0_20__variant_idx_cookieESG_SH_+0x42>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 80050a4:	68fb      	ldr	r3, [r7, #12]
 80050a6:	681b      	ldr	r3, [r3, #0]
		  __variant::__get<__rhs_index>(*this) = __rhs_mem;
 80050a8:	4618      	mov	r0, r3
 80050aa:	f000 f82d 	bl	8005108 <_ZNSt8__detail9__variant5__getILj3ERNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcOT0_>
 80050ae:	4603      	mov	r3, r0
 80050b0:	68b9      	ldr	r1, [r7, #8]
 80050b2:	4618      	mov	r0, r3
 80050b4:	f01d fe5f 	bl	8022d76 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_>
	    return {};
 80050b8:	e016      	b.n	80050e8 <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_ENUlOT_T0_E_clIRKS7_St17integral_constantIjLj3EEEENS0_20__variant_idx_cookieESG_SH_+0x70>
			= variant<_Types...>(__rhs_mem);
 80050ba:	f107 0314 	add.w	r3, r7, #20
 80050be:	68b9      	ldr	r1, [r7, #8]
 80050c0:	4618      	mov	r0, r3
 80050c2:	f000 fe2f 	bl	8005d24 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1IRKS5_vvS5_vEEOT_>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 80050c6:	68fb      	ldr	r3, [r7, #12]
 80050c8:	681b      	ldr	r3, [r3, #0]
		      __variant_cast<_Types...>(*this)
 80050ca:	4618      	mov	r0, r3
 80050cc:	f000 f82d 	bl	800512a <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEERNSt8__detail9__variant17_Copy_assign_baseILb0EJifbS5_S9_EEEEDcOT0_>
 80050d0:	4602      	mov	r2, r0
			= variant<_Types...>(__rhs_mem);
 80050d2:	f107 0314 	add.w	r3, r7, #20
 80050d6:	4619      	mov	r1, r3
 80050d8:	4610      	mov	r0, r2
 80050da:	f000 f841 	bl	8005160 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSEOSA_>
 80050de:	f107 0314 	add.w	r3, r7, #20
 80050e2:	4618      	mov	r0, r3
 80050e4:	f7fc f9f3 	bl	80014ce <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEED1Ev>
	    return {};
 80050e8:	462b      	mov	r3, r5
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 80050ea:	4618      	mov	r0, r3
 80050ec:	3730      	adds	r7, #48	; 0x30
 80050ee:	46bd      	mov	sp, r7
 80050f0:	bdb0      	pop	{r4, r5, r7, pc}

080050f2 <_ZNKSt17integral_constantIjLj3EEcvjEv>:
 80050f2:	b480      	push	{r7}
 80050f4:	b083      	sub	sp, #12
 80050f6:	af00      	add	r7, sp, #0
 80050f8:	6078      	str	r0, [r7, #4]
 80050fa:	2303      	movs	r3, #3
 80050fc:	4618      	mov	r0, r3
 80050fe:	370c      	adds	r7, #12
 8005100:	46bd      	mov	sp, r7
 8005102:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005106:	4770      	bx	lr

08005108 <_ZNSt8__detail9__variant5__getILj3ERNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8005108:	b590      	push	{r4, r7, lr}
 800510a:	b083      	sub	sp, #12
 800510c:	af00      	add	r7, sp, #0
 800510e:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8005110:	6878      	ldr	r0, [r7, #4]
 8005112:	f000 fd9e 	bl	8005c52 <_ZSt7forwardIRNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8005116:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8005118:	4619      	mov	r1, r3
 800511a:	4620      	mov	r0, r4
 800511c:	f7fe fd04 	bl	8003b28 <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8005120:	4603      	mov	r3, r0
    }
 8005122:	4618      	mov	r0, r3
 8005124:	370c      	adds	r7, #12
 8005126:	46bd      	mov	sp, r7
 8005128:	bd90      	pop	{r4, r7, pc}

0800512a <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEERNSt8__detail9__variant17_Copy_assign_baseILb0EJifbS5_S9_EEEEDcOT0_>:
    __variant_cast(_Tp&& __rhs)
 800512a:	b480      	push	{r7}
 800512c:	b083      	sub	sp, #12
 800512e:	af00      	add	r7, sp, #0
 8005130:	6078      	str	r0, [r7, #4]
	    return static_cast<variant<_Types...>&>(__rhs);
 8005132:	687b      	ldr	r3, [r7, #4]
    }
 8005134:	4618      	mov	r0, r3
 8005136:	370c      	adds	r7, #12
 8005138:	46bd      	mov	sp, r7
 800513a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800513e:	4770      	bx	lr

08005140 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_>:
    struct _Variant_base : _Move_assign_alias<_Types...>
 8005140:	b580      	push	{r7, lr}
 8005142:	b082      	sub	sp, #8
 8005144:	af00      	add	r7, sp, #0
 8005146:	6078      	str	r0, [r7, #4]
 8005148:	6039      	str	r1, [r7, #0]
 800514a:	687b      	ldr	r3, [r7, #4]
 800514c:	683a      	ldr	r2, [r7, #0]
 800514e:	4611      	mov	r1, r2
 8005150:	4618      	mov	r0, r3
 8005152:	f000 fff5 	bl	8006140 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_>
 8005156:	687b      	ldr	r3, [r7, #4]
 8005158:	4618      	mov	r0, r3
 800515a:	3708      	adds	r7, #8
 800515c:	46bd      	mov	sp, r7
 800515e:	bd80      	pop	{r7, pc}

08005160 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSEOSA_>:
    class variant
 8005160:	b580      	push	{r7, lr}
 8005162:	b082      	sub	sp, #8
 8005164:	af00      	add	r7, sp, #0
 8005166:	6078      	str	r0, [r7, #4]
 8005168:	6039      	str	r1, [r7, #0]
 800516a:	687b      	ldr	r3, [r7, #4]
 800516c:	683a      	ldr	r2, [r7, #0]
 800516e:	4611      	mov	r1, r2
 8005170:	4618      	mov	r0, r3
 8005172:	f7ff ffe5 	bl	8005140 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_>
 8005176:	687b      	ldr	r3, [r7, #4]
 8005178:	4618      	mov	r0, r3
 800517a:	3708      	adds	r7, #8
 800517c:	46bd      	mov	sp, r7
 800517e:	bd80      	pop	{r7, pc}

08005180 <_ZNK9__gnu_cxx16__aligned_membufISt6vectorI6SymbolSaIS2_EEE7_M_addrEv>:
      _M_addr() const noexcept
 8005180:	b480      	push	{r7}
 8005182:	b083      	sub	sp, #12
 8005184:	af00      	add	r7, sp, #0
 8005186:	6078      	str	r0, [r7, #4]
      { return static_cast<const void*>(&_M_storage); }
 8005188:	687b      	ldr	r3, [r7, #4]
 800518a:	4618      	mov	r0, r3
 800518c:	370c      	adds	r7, #12
 800518e:	46bd      	mov	sp, r7
 8005190:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005194:	4770      	bx	lr

08005196 <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_ENUlOT_T0_E_clIRKSB_St17integral_constantIjLj4EEEENS0_20__variant_idx_cookieESG_SH_>:
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8005196:	b5b0      	push	{r4, r5, r7, lr}
 8005198:	b08c      	sub	sp, #48	; 0x30
 800519a:	af00      	add	r7, sp, #0
 800519c:	60f8      	str	r0, [r7, #12]
 800519e:	60b9      	str	r1, [r7, #8]
 80051a0:	713a      	strb	r2, [r7, #4]
 80051a2:	68fb      	ldr	r3, [r7, #12]
 80051a4:	681b      	ldr	r3, [r3, #0]
		if (this->_M_index == __rhs_index)
 80051a6:	7e1b      	ldrb	r3, [r3, #24]
 80051a8:	461c      	mov	r4, r3
 80051aa:	1d3b      	adds	r3, r7, #4
 80051ac:	4618      	mov	r0, r3
 80051ae:	f000 f82f 	bl	8005210 <_ZNKSt17integral_constantIjLj4EEcvjEv>
 80051b2:	4603      	mov	r3, r0
 80051b4:	429c      	cmp	r4, r3
 80051b6:	bf0c      	ite	eq
 80051b8:	2301      	moveq	r3, #1
 80051ba:	2300      	movne	r3, #0
 80051bc:	b2db      	uxtb	r3, r3
 80051be:	2b00      	cmp	r3, #0
 80051c0:	d00a      	beq.n	80051d8 <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_ENUlOT_T0_E_clIRKSB_St17integral_constantIjLj4EEEENS0_20__variant_idx_cookieESG_SH_+0x42>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 80051c2:	68fb      	ldr	r3, [r7, #12]
 80051c4:	681b      	ldr	r3, [r3, #0]
		  __variant::__get<__rhs_index>(*this) = __rhs_mem;
 80051c6:	4618      	mov	r0, r3
 80051c8:	f000 f82d 	bl	8005226 <_ZNSt8__detail9__variant5__getILj4ERNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcOT0_>
 80051cc:	4603      	mov	r3, r0
 80051ce:	68b9      	ldr	r1, [r7, #8]
 80051d0:	4618      	mov	r0, r3
 80051d2:	f000 ffd3 	bl	800617c <_ZNSt6vectorI6SymbolSaIS0_EEaSERKS2_>
	    return {};
 80051d6:	e016      	b.n	8005206 <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_ENUlOT_T0_E_clIRKSB_St17integral_constantIjLj4EEEENS0_20__variant_idx_cookieESG_SH_+0x70>
			= variant<_Types...>(__rhs_mem);
 80051d8:	f107 0314 	add.w	r3, r7, #20
 80051dc:	68b9      	ldr	r1, [r7, #8]
 80051de:	4618      	mov	r0, r3
 80051e0:	f001 f8da 	bl	8006398 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1IRKS9_vvS9_vEEOT_>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 80051e4:	68fb      	ldr	r3, [r7, #12]
 80051e6:	681b      	ldr	r3, [r3, #0]
		      __variant_cast<_Types...>(*this)
 80051e8:	4618      	mov	r0, r3
 80051ea:	f7ff ff9e 	bl	800512a <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEERNSt8__detail9__variant17_Copy_assign_baseILb0EJifbS5_S9_EEEEDcOT0_>
 80051ee:	4602      	mov	r2, r0
			= variant<_Types...>(__rhs_mem);
 80051f0:	f107 0314 	add.w	r3, r7, #20
 80051f4:	4619      	mov	r1, r3
 80051f6:	4610      	mov	r0, r2
 80051f8:	f7ff ffb2 	bl	8005160 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSEOSA_>
 80051fc:	f107 0314 	add.w	r3, r7, #20
 8005200:	4618      	mov	r0, r3
 8005202:	f7fc f964 	bl	80014ce <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEED1Ev>
	    return {};
 8005206:	462b      	mov	r3, r5
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8005208:	4618      	mov	r0, r3
 800520a:	3730      	adds	r7, #48	; 0x30
 800520c:	46bd      	mov	sp, r7
 800520e:	bdb0      	pop	{r4, r5, r7, pc}

08005210 <_ZNKSt17integral_constantIjLj4EEcvjEv>:
 8005210:	b480      	push	{r7}
 8005212:	b083      	sub	sp, #12
 8005214:	af00      	add	r7, sp, #0
 8005216:	6078      	str	r0, [r7, #4]
 8005218:	2304      	movs	r3, #4
 800521a:	4618      	mov	r0, r3
 800521c:	370c      	adds	r7, #12
 800521e:	46bd      	mov	sp, r7
 8005220:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005224:	4770      	bx	lr

08005226 <_ZNSt8__detail9__variant5__getILj4ERNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8005226:	b590      	push	{r4, r7, lr}
 8005228:	b083      	sub	sp, #12
 800522a:	af00      	add	r7, sp, #0
 800522c:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800522e:	6878      	ldr	r0, [r7, #4]
 8005230:	f000 fd0f 	bl	8005c52 <_ZSt7forwardIRNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8005234:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8005236:	4619      	mov	r1, r3
 8005238:	4620      	mov	r0, r4
 800523a:	f7fe fd35 	bl	8003ca8 <_ZNSt8__detail9__variant5__getILj4ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800523e:	4603      	mov	r3, r0
    }
 8005240:	4618      	mov	r0, r3
 8005242:	370c      	adds	r7, #12
 8005244:	46bd      	mov	sp, r7
 8005246:	bd90      	pop	{r4, r7, pc}

08005248 <_ZN9__gnu_cxx17__is_null_pointerIKcEEbPT_>:


  // For use in string and vstring.
  template<typename _Type>
    inline bool
    __is_null_pointer(_Type* __ptr)
 8005248:	b480      	push	{r7}
 800524a:	b083      	sub	sp, #12
 800524c:	af00      	add	r7, sp, #0
 800524e:	6078      	str	r0, [r7, #4]
    { return __ptr == 0; }
 8005250:	687b      	ldr	r3, [r7, #4]
 8005252:	2b00      	cmp	r3, #0
 8005254:	bf0c      	ite	eq
 8005256:	2301      	moveq	r3, #1
 8005258:	2300      	movne	r3, #0
 800525a:	b2db      	uxtb	r3, r3
 800525c:	4618      	mov	r0, r3
 800525e:	370c      	adds	r7, #12
 8005260:	46bd      	mov	sp, r7
 8005262:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005266:	4770      	bx	lr

08005268 <_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
   *  sugar for internal library use only.
  */
  template<typename _Iter>
    inline _GLIBCXX_CONSTEXPR
    typename iterator_traits<_Iter>::iterator_category
    __iterator_category(const _Iter&)
 8005268:	b480      	push	{r7}
 800526a:	b083      	sub	sp, #12
 800526c:	af00      	add	r7, sp, #0
 800526e:	6078      	str	r0, [r7, #4]
    { return typename iterator_traits<_Iter>::iterator_category(); }
 8005270:	4618      	mov	r0, r3
 8005272:	370c      	adds	r7, #12
 8005274:	46bd      	mov	sp, r7
 8005276:	f85d 7b04 	ldr.w	r7, [sp], #4
 800527a:	4770      	bx	lr

0800527c <_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
 800527c:	b480      	push	{r7}
 800527e:	b085      	sub	sp, #20
 8005280:	af00      	add	r7, sp, #0
 8005282:	60f8      	str	r0, [r7, #12]
 8005284:	60b9      	str	r1, [r7, #8]
 8005286:	713a      	strb	r2, [r7, #4]
      return __last - __first;
 8005288:	68ba      	ldr	r2, [r7, #8]
 800528a:	68fb      	ldr	r3, [r7, #12]
 800528c:	1ad3      	subs	r3, r2, r3
    }
 800528e:	4618      	mov	r0, r3
 8005290:	3714      	adds	r7, #20
 8005292:	46bd      	mov	sp, r7
 8005294:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005298:	4770      	bx	lr

0800529a <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEC1ERKS7_>:
      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
 800529a:	b480      	push	{r7}
 800529c:	b083      	sub	sp, #12
 800529e:	af00      	add	r7, sp, #0
 80052a0:	6078      	str	r0, [r7, #4]
 80052a2:	6039      	str	r1, [r7, #0]
 80052a4:	687b      	ldr	r3, [r7, #4]
 80052a6:	4618      	mov	r0, r3
 80052a8:	370c      	adds	r7, #12
 80052aa:	46bd      	mov	sp, r7
 80052ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80052b0:	4770      	bx	lr

080052b2 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS3_E>:
      _M_destroy_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 80052b2:	b590      	push	{r4, r7, lr}
 80052b4:	b083      	sub	sp, #12
 80052b6:	af00      	add	r7, sp, #0
 80052b8:	6078      	str	r0, [r7, #4]
 80052ba:	6039      	str	r1, [r7, #0]
	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
 80052bc:	6878      	ldr	r0, [r7, #4]
 80052be:	f001 f87e 	bl	80063be <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE21_M_get_Node_allocatorEv>
 80052c2:	4604      	mov	r4, r0
 80052c4:	6838      	ldr	r0, [r7, #0]
 80052c6:	f001 f885 	bl	80063d4 <_ZNSt13_Rb_tree_nodeISt4pairIKc10token_typeEE9_M_valptrEv>
 80052ca:	4603      	mov	r3, r0
 80052cc:	4619      	mov	r1, r3
 80052ce:	4620      	mov	r0, r4
 80052d0:	f001 f88e 	bl	80063f0 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEE7destroyIS4_EEvRS6_PT_>
      }
 80052d4:	bf00      	nop
 80052d6:	370c      	adds	r7, #12
 80052d8:	46bd      	mov	sp, r7
 80052da:	bd90      	pop	{r4, r7, pc}

080052dc <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS3_E>:
      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 80052dc:	b580      	push	{r7, lr}
 80052de:	b082      	sub	sp, #8
 80052e0:	af00      	add	r7, sp, #0
 80052e2:	6078      	str	r0, [r7, #4]
 80052e4:	6039      	str	r1, [r7, #0]
      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
 80052e6:	6878      	ldr	r0, [r7, #4]
 80052e8:	f001 f869 	bl	80063be <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE21_M_get_Node_allocatorEv>
 80052ec:	4603      	mov	r3, r0
 80052ee:	2201      	movs	r2, #1
 80052f0:	6839      	ldr	r1, [r7, #0]
 80052f2:	4618      	mov	r0, r3
 80052f4:	f001 f889 	bl	800640a <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEE10deallocateERS6_PS5_j>
 80052f8:	bf00      	nop
 80052fa:	3708      	adds	r7, #8
 80052fc:	46bd      	mov	sp, r7
 80052fe:	bd80      	pop	{r7, pc}

08005300 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKc10token_typeEE13_M_const_castEv>:
      _M_const_cast() const _GLIBCXX_NOEXCEPT
 8005300:	b580      	push	{r7, lr}
 8005302:	b084      	sub	sp, #16
 8005304:	af00      	add	r7, sp, #0
 8005306:	6078      	str	r0, [r7, #4]
      { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
 8005308:	687b      	ldr	r3, [r7, #4]
 800530a:	681a      	ldr	r2, [r3, #0]
 800530c:	f107 030c 	add.w	r3, r7, #12
 8005310:	4611      	mov	r1, r2
 8005312:	4618      	mov	r0, r3
 8005314:	f7fe ff76 	bl	8004204 <_ZNSt17_Rb_tree_iteratorISt4pairIKc10token_typeEEC1EPSt18_Rb_tree_node_base>
 8005318:	68fb      	ldr	r3, [r7, #12]
 800531a:	4618      	mov	r0, r3
 800531c:	3710      	adds	r7, #16
 800531e:	46bd      	mov	sp, r7
 8005320:	bd80      	pop	{r7, pc}

08005322 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_M_endEv>:
      _M_end() _GLIBCXX_NOEXCEPT
 8005322:	b480      	push	{r7}
 8005324:	b083      	sub	sp, #12
 8005326:	af00      	add	r7, sp, #0
 8005328:	6078      	str	r0, [r7, #4]
      { return &this->_M_impl._M_header; }
 800532a:	687b      	ldr	r3, [r7, #4]
 800532c:	3304      	adds	r3, #4
 800532e:	4618      	mov	r0, r3
 8005330:	370c      	adds	r7, #12
 8005332:	46bd      	mov	sp, r7
 8005334:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005338:	4770      	bx	lr

0800533a <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 800533a:	b480      	push	{r7}
 800533c:	b083      	sub	sp, #12
 800533e:	af00      	add	r7, sp, #0
 8005340:	6078      	str	r0, [r7, #4]
      { return _M_impl._M_node_count; }
 8005342:	687b      	ldr	r3, [r7, #4]
 8005344:	695b      	ldr	r3, [r3, #20]
 8005346:	4618      	mov	r0, r3
 8005348:	370c      	adds	r7, #12
 800534a:	46bd      	mov	sp, r7
 800534c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005350:	4770      	bx	lr

08005352 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_rightmostEv>:
      _M_rightmost() _GLIBCXX_NOEXCEPT
 8005352:	b480      	push	{r7}
 8005354:	b083      	sub	sp, #12
 8005356:	af00      	add	r7, sp, #0
 8005358:	6078      	str	r0, [r7, #4]
      { return this->_M_impl._M_header._M_right; }
 800535a:	687b      	ldr	r3, [r7, #4]
 800535c:	3310      	adds	r3, #16
 800535e:	4618      	mov	r0, r3
 8005360:	370c      	adds	r7, #12
 8005362:	46bd      	mov	sp, r7
 8005364:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005368:	4770      	bx	lr

0800536a <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>:
      _S_key(_Const_Base_ptr __x)
 800536a:	b580      	push	{r7, lr}
 800536c:	b082      	sub	sp, #8
 800536e:	af00      	add	r7, sp, #0
 8005370:	6078      	str	r0, [r7, #4]
      { return _S_key(static_cast<_Const_Link_type>(__x)); }
 8005372:	6878      	ldr	r0, [r7, #4]
 8005374:	f001 f858 	bl	8006428 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt13_Rb_tree_nodeIS3_E>
 8005378:	4603      	mov	r3, r0
 800537a:	4618      	mov	r0, r3
 800537c:	3708      	adds	r7, #8
 800537e:	46bd      	mov	sp, r7
 8005380:	bd80      	pop	{r7, pc}

08005382 <_ZNKSt4lessIcEclERKcS2_>:
      operator()(const _Tp& __x, const _Tp& __y) const
 8005382:	b480      	push	{r7}
 8005384:	b085      	sub	sp, #20
 8005386:	af00      	add	r7, sp, #0
 8005388:	60f8      	str	r0, [r7, #12]
 800538a:	60b9      	str	r1, [r7, #8]
 800538c:	607a      	str	r2, [r7, #4]
      { return __x < __y; }
 800538e:	68bb      	ldr	r3, [r7, #8]
 8005390:	781a      	ldrb	r2, [r3, #0]
 8005392:	687b      	ldr	r3, [r7, #4]
 8005394:	781b      	ldrb	r3, [r3, #0]
 8005396:	429a      	cmp	r2, r3
 8005398:	bf34      	ite	cc
 800539a:	2301      	movcc	r3, #1
 800539c:	2300      	movcs	r3, #0
 800539e:	b2db      	uxtb	r3, r3
 80053a0:	4618      	mov	r0, r3
 80053a2:	3714      	adds	r7, #20
 80053a4:	46bd      	mov	sp, r7
 80053a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80053aa:	4770      	bx	lr

080053ac <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>:
       constexpr pair(const _T1& __x, _U2&& __y)
 80053ac:	b580      	push	{r7, lr}
 80053ae:	b084      	sub	sp, #16
 80053b0:	af00      	add	r7, sp, #0
 80053b2:	60f8      	str	r0, [r7, #12]
 80053b4:	60b9      	str	r1, [r7, #8]
 80053b6:	607a      	str	r2, [r7, #4]
       : first(__x), second(std::forward<_U2>(__y)) { }
 80053b8:	68bb      	ldr	r3, [r7, #8]
 80053ba:	681a      	ldr	r2, [r3, #0]
 80053bc:	68fb      	ldr	r3, [r7, #12]
 80053be:	601a      	str	r2, [r3, #0]
 80053c0:	6878      	ldr	r0, [r7, #4]
 80053c2:	f001 f844 	bl	800644e <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
 80053c6:	4603      	mov	r3, r0
 80053c8:	681a      	ldr	r2, [r3, #0]
 80053ca:	68fb      	ldr	r3, [r7, #12]
 80053cc:	605a      	str	r2, [r3, #4]
 80053ce:	68fb      	ldr	r3, [r7, #12]
 80053d0:	4618      	mov	r0, r3
 80053d2:	3710      	adds	r7, #16
 80053d4:	46bd      	mov	sp, r7
 80053d6:	bd80      	pop	{r7, pc}

080053d8 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 80053d8:	b590      	push	{r4, r7, lr}
 80053da:	b08b      	sub	sp, #44	; 0x2c
 80053dc:	af00      	add	r7, sp, #0
 80053de:	60f8      	str	r0, [r7, #12]
 80053e0:	60b9      	str	r1, [r7, #8]
 80053e2:	607a      	str	r2, [r7, #4]
      _Link_type __x = _M_begin();
 80053e4:	68b8      	ldr	r0, [r7, #8]
 80053e6:	f7fd ff7d 	bl	80032e4 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_beginEv>
 80053ea:	4603      	mov	r3, r0
 80053ec:	61bb      	str	r3, [r7, #24]
      _Base_ptr __y = _M_end();
 80053ee:	68b8      	ldr	r0, [r7, #8]
 80053f0:	f7ff ff97 	bl	8005322 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_M_endEv>
 80053f4:	4603      	mov	r3, r0
 80053f6:	617b      	str	r3, [r7, #20]
      bool __comp = true;
 80053f8:	2301      	movs	r3, #1
 80053fa:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
      while (__x != 0)
 80053fe:	69bb      	ldr	r3, [r7, #24]
 8005400:	2b00      	cmp	r3, #0
 8005402:	d020      	beq.n	8005446 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0x6e>
	  __y = __x;
 8005404:	69bb      	ldr	r3, [r7, #24]
 8005406:	617b      	str	r3, [r7, #20]
	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
 8005408:	68bc      	ldr	r4, [r7, #8]
 800540a:	69bb      	ldr	r3, [r7, #24]
 800540c:	4618      	mov	r0, r3
 800540e:	f001 f80b 	bl	8006428 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt13_Rb_tree_nodeIS3_E>
 8005412:	4603      	mov	r3, r0
 8005414:	461a      	mov	r2, r3
 8005416:	6879      	ldr	r1, [r7, #4]
 8005418:	4620      	mov	r0, r4
 800541a:	f7ff ffb2 	bl	8005382 <_ZNKSt4lessIcEclERKcS2_>
 800541e:	4603      	mov	r3, r0
 8005420:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
	  __x = __comp ? _S_left(__x) : _S_right(__x);
 8005424:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8005428:	2b00      	cmp	r3, #0
 800542a:	d005      	beq.n	8005438 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0x60>
 800542c:	69bb      	ldr	r3, [r7, #24]
 800542e:	4618      	mov	r0, r3
 8005430:	f7fe fecb 	bl	80041ca <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE7_S_leftEPSt18_Rb_tree_node_base>
 8005434:	4603      	mov	r3, r0
 8005436:	e004      	b.n	8005442 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0x6a>
 8005438:	69bb      	ldr	r3, [r7, #24]
 800543a:	4618      	mov	r0, r3
 800543c:	f7fe feb9 	bl	80041b2 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base>
 8005440:	4603      	mov	r3, r0
 8005442:	61bb      	str	r3, [r7, #24]
      while (__x != 0)
 8005444:	e7db      	b.n	80053fe <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0x26>
      iterator __j = iterator(__y);
 8005446:	697a      	ldr	r2, [r7, #20]
 8005448:	f107 0310 	add.w	r3, r7, #16
 800544c:	4611      	mov	r1, r2
 800544e:	4618      	mov	r0, r3
 8005450:	f7fe fed8 	bl	8004204 <_ZNSt17_Rb_tree_iteratorISt4pairIKc10token_typeEEC1EPSt18_Rb_tree_node_base>
      if (__comp)
 8005454:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8005458:	2b00      	cmp	r3, #0
 800545a:	d01d      	beq.n	8005498 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0xc0>
	  if (__j == begin())
 800545c:	68b8      	ldr	r0, [r7, #8]
 800545e:	f001 f801 	bl	8006464 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE5beginEv>
 8005462:	4603      	mov	r3, r0
 8005464:	61fb      	str	r3, [r7, #28]
 8005466:	f107 021c 	add.w	r2, r7, #28
 800546a:	f107 0310 	add.w	r3, r7, #16
 800546e:	4611      	mov	r1, r2
 8005470:	4618      	mov	r0, r3
 8005472:	f001 f808 	bl	8006486 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKc10token_typeEES6_>
 8005476:	4603      	mov	r3, r0
 8005478:	2b00      	cmp	r3, #0
 800547a:	d008      	beq.n	800548e <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0xb6>
	    return _Res(__x, __y);
 800547c:	f107 0214 	add.w	r2, r7, #20
 8005480:	f107 0318 	add.w	r3, r7, #24
 8005484:	4619      	mov	r1, r3
 8005486:	68f8      	ldr	r0, [r7, #12]
 8005488:	f001 f811 	bl	80064ae <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKc10token_typeEERS1_Lb1EEEOT_OT0_>
 800548c:	e025      	b.n	80054da <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0x102>
	    --__j;
 800548e:	f107 0310 	add.w	r3, r7, #16
 8005492:	4618      	mov	r0, r3
 8005494:	f000 f84a 	bl	800552c <_ZNSt17_Rb_tree_iteratorISt4pairIKc10token_typeEEmmEv>
      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
 8005498:	68bc      	ldr	r4, [r7, #8]
 800549a:	693b      	ldr	r3, [r7, #16]
 800549c:	4618      	mov	r0, r3
 800549e:	f7ff ff64 	bl	800536a <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 80054a2:	4603      	mov	r3, r0
 80054a4:	687a      	ldr	r2, [r7, #4]
 80054a6:	4619      	mov	r1, r3
 80054a8:	4620      	mov	r0, r4
 80054aa:	f7ff ff6a 	bl	8005382 <_ZNKSt4lessIcEclERKcS2_>
 80054ae:	4603      	mov	r3, r0
 80054b0:	2b00      	cmp	r3, #0
 80054b2:	d008      	beq.n	80054c6 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0xee>
	return _Res(__x, __y);
 80054b4:	f107 0214 	add.w	r2, r7, #20
 80054b8:	f107 0318 	add.w	r3, r7, #24
 80054bc:	4619      	mov	r1, r3
 80054be:	68f8      	ldr	r0, [r7, #12]
 80054c0:	f000 fff5 	bl	80064ae <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKc10token_typeEERS1_Lb1EEEOT_OT0_>
 80054c4:	e009      	b.n	80054da <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0x102>
      return _Res(__j._M_node, 0);
 80054c6:	2300      	movs	r3, #0
 80054c8:	623b      	str	r3, [r7, #32]
 80054ca:	f107 0220 	add.w	r2, r7, #32
 80054ce:	f107 0310 	add.w	r3, r7, #16
 80054d2:	4619      	mov	r1, r3
 80054d4:	68f8      	ldr	r0, [r7, #12]
 80054d6:	f000 f84b 	bl	8005570 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_>
    }
 80054da:	68f8      	ldr	r0, [r7, #12]
 80054dc:	372c      	adds	r7, #44	; 0x2c
 80054de:	46bd      	mov	sp, r7
 80054e0:	bd90      	pop	{r4, r7, pc}

080054e2 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_leftmostEv>:
      _M_leftmost() _GLIBCXX_NOEXCEPT
 80054e2:	b480      	push	{r7}
 80054e4:	b083      	sub	sp, #12
 80054e6:	af00      	add	r7, sp, #0
 80054e8:	6078      	str	r0, [r7, #4]
      { return this->_M_impl._M_header._M_left; }
 80054ea:	687b      	ldr	r3, [r7, #4]
 80054ec:	330c      	adds	r3, #12
 80054ee:	4618      	mov	r0, r3
 80054f0:	370c      	adds	r7, #12
 80054f2:	46bd      	mov	sp, r7
 80054f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80054f8:	4770      	bx	lr

080054fa <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 80054fa:	b580      	push	{r7, lr}
 80054fc:	b084      	sub	sp, #16
 80054fe:	af00      	add	r7, sp, #0
 8005500:	60f8      	str	r0, [r7, #12]
 8005502:	60b9      	str	r1, [r7, #8]
 8005504:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 8005506:	68b8      	ldr	r0, [r7, #8]
 8005508:	f000 ffa1 	bl	800644e <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
 800550c:	4603      	mov	r3, r0
 800550e:	681a      	ldr	r2, [r3, #0]
 8005510:	68fb      	ldr	r3, [r7, #12]
 8005512:	601a      	str	r2, [r3, #0]
 8005514:	6878      	ldr	r0, [r7, #4]
 8005516:	f000 ff9a 	bl	800644e <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
 800551a:	4603      	mov	r3, r0
 800551c:	681a      	ldr	r2, [r3, #0]
 800551e:	68fb      	ldr	r3, [r7, #12]
 8005520:	605a      	str	r2, [r3, #4]
 8005522:	68fb      	ldr	r3, [r7, #12]
 8005524:	4618      	mov	r0, r3
 8005526:	3710      	adds	r7, #16
 8005528:	46bd      	mov	sp, r7
 800552a:	bd80      	pop	{r7, pc}

0800552c <_ZNSt17_Rb_tree_iteratorISt4pairIKc10token_typeEEmmEv>:
      operator--() _GLIBCXX_NOEXCEPT
 800552c:	b580      	push	{r7, lr}
 800552e:	b082      	sub	sp, #8
 8005530:	af00      	add	r7, sp, #0
 8005532:	6078      	str	r0, [r7, #4]
	_M_node = _Rb_tree_decrement(_M_node);
 8005534:	687b      	ldr	r3, [r7, #4]
 8005536:	681b      	ldr	r3, [r3, #0]
 8005538:	4618      	mov	r0, r3
 800553a:	f01d f9db 	bl	80228f4 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 800553e:	4602      	mov	r2, r0
 8005540:	687b      	ldr	r3, [r7, #4]
 8005542:	601a      	str	r2, [r3, #0]
	return *this;
 8005544:	687b      	ldr	r3, [r7, #4]
      }
 8005546:	4618      	mov	r0, r3
 8005548:	3708      	adds	r7, #8
 800554a:	46bd      	mov	sp, r7
 800554c:	bd80      	pop	{r7, pc}

0800554e <_ZNSt17_Rb_tree_iteratorISt4pairIKc10token_typeEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
 800554e:	b580      	push	{r7, lr}
 8005550:	b082      	sub	sp, #8
 8005552:	af00      	add	r7, sp, #0
 8005554:	6078      	str	r0, [r7, #4]
	_M_node = _Rb_tree_increment(_M_node);
 8005556:	687b      	ldr	r3, [r7, #4]
 8005558:	681b      	ldr	r3, [r3, #0]
 800555a:	4618      	mov	r0, r3
 800555c:	f01d f9b7 	bl	80228ce <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
 8005560:	4602      	mov	r2, r0
 8005562:	687b      	ldr	r3, [r7, #4]
 8005564:	601a      	str	r2, [r3, #0]
	return *this;
 8005566:	687b      	ldr	r3, [r7, #4]
      }
 8005568:	4618      	mov	r0, r3
 800556a:	3708      	adds	r7, #8
 800556c:	46bd      	mov	sp, r7
 800556e:	bd80      	pop	{r7, pc}

08005570 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_>:
       constexpr pair(_U1&& __x, const _T2& __y)
 8005570:	b580      	push	{r7, lr}
 8005572:	b084      	sub	sp, #16
 8005574:	af00      	add	r7, sp, #0
 8005576:	60f8      	str	r0, [r7, #12]
 8005578:	60b9      	str	r1, [r7, #8]
 800557a:	607a      	str	r2, [r7, #4]
       : first(std::forward<_U1>(__x)), second(__y) { }
 800557c:	68b8      	ldr	r0, [r7, #8]
 800557e:	f000 ff66 	bl	800644e <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
 8005582:	4603      	mov	r3, r0
 8005584:	681a      	ldr	r2, [r3, #0]
 8005586:	68fb      	ldr	r3, [r7, #12]
 8005588:	601a      	str	r2, [r3, #0]
 800558a:	687b      	ldr	r3, [r7, #4]
 800558c:	681a      	ldr	r2, [r3, #0]
 800558e:	68fb      	ldr	r3, [r7, #12]
 8005590:	605a      	str	r2, [r3, #4]
 8005592:	68fb      	ldr	r3, [r7, #12]
 8005594:	4618      	mov	r0, r3
 8005596:	3710      	adds	r7, #16
 8005598:	46bd      	mov	sp, r7
 800559a:	bd80      	pop	{r7, pc}

0800559c <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_Alloc_nodeclIRKS3_EEPSt13_Rb_tree_nodeIS3_EOT_>:
	  operator()(_Arg&& __arg) const
 800559c:	b590      	push	{r4, r7, lr}
 800559e:	b083      	sub	sp, #12
 80055a0:	af00      	add	r7, sp, #0
 80055a2:	6078      	str	r0, [r7, #4]
 80055a4:	6039      	str	r1, [r7, #0]
	  { return _M_t._M_create_node(_GLIBCXX_FORWARD(_Arg, __arg)); }
 80055a6:	687b      	ldr	r3, [r7, #4]
 80055a8:	681c      	ldr	r4, [r3, #0]
 80055aa:	6838      	ldr	r0, [r7, #0]
 80055ac:	f7fe ff68 	bl	8004480 <_ZSt7forwardIRKSt4pairIKc10token_typeEEOT_RNSt16remove_referenceIS6_E4typeE>
 80055b0:	4603      	mov	r3, r0
 80055b2:	4619      	mov	r1, r3
 80055b4:	4620      	mov	r0, r4
 80055b6:	f000 ff93 	bl	80064e0 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_create_nodeIJRKS3_EEEPSt13_Rb_tree_nodeIS3_EDpOT_>
 80055ba:	4603      	mov	r3, r0
 80055bc:	4618      	mov	r0, r3
 80055be:	370c      	adds	r7, #12
 80055c0:	46bd      	mov	sp, r7
 80055c2:	bd90      	pop	{r4, r7, pc}

080055c4 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEC1ERKSD_>:
 80055c4:	b480      	push	{r7}
 80055c6:	b083      	sub	sp, #12
 80055c8:	af00      	add	r7, sp, #0
 80055ca:	6078      	str	r0, [r7, #4]
 80055cc:	6039      	str	r1, [r7, #0]
 80055ce:	687b      	ldr	r3, [r7, #4]
 80055d0:	4618      	mov	r0, r3
 80055d2:	370c      	adds	r7, #12
 80055d4:	46bd      	mov	sp, r7
 80055d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80055da:	4770      	bx	lr

080055dc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS9_E>:
      _M_destroy_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 80055dc:	b590      	push	{r4, r7, lr}
 80055de:	b083      	sub	sp, #12
 80055e0:	af00      	add	r7, sp, #0
 80055e2:	6078      	str	r0, [r7, #4]
 80055e4:	6039      	str	r1, [r7, #0]
	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
 80055e6:	6878      	ldr	r0, [r7, #4]
 80055e8:	f000 ff91 	bl	800650e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE21_M_get_Node_allocatorEv>
 80055ec:	4604      	mov	r4, r0
 80055ee:	6838      	ldr	r0, [r7, #0]
 80055f0:	f000 ff98 	bl	8006524 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE9_M_valptrEv>
 80055f4:	4603      	mov	r3, r0
 80055f6:	4619      	mov	r1, r3
 80055f8:	4620      	mov	r0, r4
 80055fa:	f000 ffa1 	bl	8006540 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEE7destroyISA_EEvRSC_PT_>
      }
 80055fe:	bf00      	nop
 8005600:	370c      	adds	r7, #12
 8005602:	46bd      	mov	sp, r7
 8005604:	bd90      	pop	{r4, r7, pc}

08005606 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS9_E>:
      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 8005606:	b580      	push	{r7, lr}
 8005608:	b082      	sub	sp, #8
 800560a:	af00      	add	r7, sp, #0
 800560c:	6078      	str	r0, [r7, #4]
 800560e:	6039      	str	r1, [r7, #0]
      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
 8005610:	6878      	ldr	r0, [r7, #4]
 8005612:	f000 ff7c 	bl	800650e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE21_M_get_Node_allocatorEv>
 8005616:	4603      	mov	r3, r0
 8005618:	2201      	movs	r2, #1
 800561a:	6839      	ldr	r1, [r7, #0]
 800561c:	4618      	mov	r0, r3
 800561e:	f000 ff9c 	bl	800655a <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEE10deallocateERSC_PSB_j>
 8005622:	bf00      	nop
 8005624:	3708      	adds	r7, #8
 8005626:	46bd      	mov	sp, r7
 8005628:	bd80      	pop	{r7, pc}

0800562a <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE13_M_const_castEv>:
      _M_const_cast() const _GLIBCXX_NOEXCEPT
 800562a:	b580      	push	{r7, lr}
 800562c:	b084      	sub	sp, #16
 800562e:	af00      	add	r7, sp, #0
 8005630:	6078      	str	r0, [r7, #4]
      { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
 8005632:	687b      	ldr	r3, [r7, #4]
 8005634:	681a      	ldr	r2, [r3, #0]
 8005636:	f107 030c 	add.w	r3, r7, #12
 800563a:	4611      	mov	r1, r2
 800563c:	4618      	mov	r0, r3
 800563e:	f7fe ffd7 	bl	80045f0 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1EPSt18_Rb_tree_node_base>
 8005642:	68fb      	ldr	r3, [r7, #12]
 8005644:	4618      	mov	r0, r3
 8005646:	3710      	adds	r7, #16
 8005648:	46bd      	mov	sp, r7
 800564a:	bd80      	pop	{r7, pc}

0800564c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_M_endEv>:
      _M_end() _GLIBCXX_NOEXCEPT
 800564c:	b480      	push	{r7}
 800564e:	b083      	sub	sp, #12
 8005650:	af00      	add	r7, sp, #0
 8005652:	6078      	str	r0, [r7, #4]
      { return &this->_M_impl._M_header; }
 8005654:	687b      	ldr	r3, [r7, #4]
 8005656:	3304      	adds	r3, #4
 8005658:	4618      	mov	r0, r3
 800565a:	370c      	adds	r7, #12
 800565c:	46bd      	mov	sp, r7
 800565e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005662:	4770      	bx	lr

08005664 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 8005664:	b480      	push	{r7}
 8005666:	b083      	sub	sp, #12
 8005668:	af00      	add	r7, sp, #0
 800566a:	6078      	str	r0, [r7, #4]
      { return _M_impl._M_node_count; }
 800566c:	687b      	ldr	r3, [r7, #4]
 800566e:	695b      	ldr	r3, [r3, #20]
 8005670:	4618      	mov	r0, r3
 8005672:	370c      	adds	r7, #12
 8005674:	46bd      	mov	sp, r7
 8005676:	f85d 7b04 	ldr.w	r7, [sp], #4
 800567a:	4770      	bx	lr

0800567c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_rightmostEv>:
      _M_rightmost() _GLIBCXX_NOEXCEPT
 800567c:	b480      	push	{r7}
 800567e:	b083      	sub	sp, #12
 8005680:	af00      	add	r7, sp, #0
 8005682:	6078      	str	r0, [r7, #4]
      { return this->_M_impl._M_header._M_right; }
 8005684:	687b      	ldr	r3, [r7, #4]
 8005686:	3310      	adds	r3, #16
 8005688:	4618      	mov	r0, r3
 800568a:	370c      	adds	r7, #12
 800568c:	46bd      	mov	sp, r7
 800568e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005692:	4770      	bx	lr

08005694 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>:
      _S_key(_Const_Base_ptr __x)
 8005694:	b580      	push	{r7, lr}
 8005696:	b082      	sub	sp, #8
 8005698:	af00      	add	r7, sp, #0
 800569a:	6078      	str	r0, [r7, #4]
      { return _S_key(static_cast<_Const_Link_type>(__x)); }
 800569c:	6878      	ldr	r0, [r7, #4]
 800569e:	f000 ff6b 	bl	8006578 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt13_Rb_tree_nodeIS9_E>
 80056a2:	4603      	mov	r3, r0
 80056a4:	4618      	mov	r0, r3
 80056a6:	3708      	adds	r7, #8
 80056a8:	46bd      	mov	sp, r7
 80056aa:	bd80      	pop	{r7, pc}

080056ac <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>:
      operator()(const _Tp& __x, const _Tp& __y) const
 80056ac:	b580      	push	{r7, lr}
 80056ae:	b084      	sub	sp, #16
 80056b0:	af00      	add	r7, sp, #0
 80056b2:	60f8      	str	r0, [r7, #12]
 80056b4:	60b9      	str	r1, [r7, #8]
 80056b6:	607a      	str	r2, [r7, #4]
      { return __x < __y; }
 80056b8:	6879      	ldr	r1, [r7, #4]
 80056ba:	68b8      	ldr	r0, [r7, #8]
 80056bc:	f000 ff6f 	bl	800659e <_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>
 80056c0:	4603      	mov	r3, r0
 80056c2:	4618      	mov	r0, r3
 80056c4:	3710      	adds	r7, #16
 80056c6:	46bd      	mov	sp, r7
 80056c8:	bd80      	pop	{r7, pc}

080056ca <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 80056ca:	b590      	push	{r4, r7, lr}
 80056cc:	b08b      	sub	sp, #44	; 0x2c
 80056ce:	af00      	add	r7, sp, #0
 80056d0:	60f8      	str	r0, [r7, #12]
 80056d2:	60b9      	str	r1, [r7, #8]
 80056d4:	607a      	str	r2, [r7, #4]
      _Link_type __x = _M_begin();
 80056d6:	68b8      	ldr	r0, [r7, #8]
 80056d8:	f7fd fee0 	bl	800349c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_beginEv>
 80056dc:	4603      	mov	r3, r0
 80056de:	61bb      	str	r3, [r7, #24]
      _Base_ptr __y = _M_end();
 80056e0:	68b8      	ldr	r0, [r7, #8]
 80056e2:	f7ff ffb3 	bl	800564c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_M_endEv>
 80056e6:	4603      	mov	r3, r0
 80056e8:	617b      	str	r3, [r7, #20]
      bool __comp = true;
 80056ea:	2301      	movs	r3, #1
 80056ec:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
      while (__x != 0)
 80056f0:	69bb      	ldr	r3, [r7, #24]
 80056f2:	2b00      	cmp	r3, #0
 80056f4:	d020      	beq.n	8005738 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0x6e>
	  __y = __x;
 80056f6:	69bb      	ldr	r3, [r7, #24]
 80056f8:	617b      	str	r3, [r7, #20]
	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
 80056fa:	68bc      	ldr	r4, [r7, #8]
 80056fc:	69bb      	ldr	r3, [r7, #24]
 80056fe:	4618      	mov	r0, r3
 8005700:	f000 ff3a 	bl	8006578 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt13_Rb_tree_nodeIS9_E>
 8005704:	4603      	mov	r3, r0
 8005706:	461a      	mov	r2, r3
 8005708:	6879      	ldr	r1, [r7, #4]
 800570a:	4620      	mov	r0, r4
 800570c:	f7ff ffce 	bl	80056ac <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8005710:	4603      	mov	r3, r0
 8005712:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
	  __x = __comp ? _S_left(__x) : _S_right(__x);
 8005716:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 800571a:	2b00      	cmp	r3, #0
 800571c:	d005      	beq.n	800572a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0x60>
 800571e:	69bb      	ldr	r3, [r7, #24]
 8005720:	4618      	mov	r0, r3
 8005722:	f7fe ff48 	bl	80045b6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE7_S_leftEPSt18_Rb_tree_node_base>
 8005726:	4603      	mov	r3, r0
 8005728:	e004      	b.n	8005734 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0x6a>
 800572a:	69bb      	ldr	r3, [r7, #24]
 800572c:	4618      	mov	r0, r3
 800572e:	f7fe ff36 	bl	800459e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_S_rightEPSt18_Rb_tree_node_base>
 8005732:	4603      	mov	r3, r0
 8005734:	61bb      	str	r3, [r7, #24]
      while (__x != 0)
 8005736:	e7db      	b.n	80056f0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0x26>
      iterator __j = iterator(__y);
 8005738:	697a      	ldr	r2, [r7, #20]
 800573a:	f107 0310 	add.w	r3, r7, #16
 800573e:	4611      	mov	r1, r2
 8005740:	4618      	mov	r0, r3
 8005742:	f7fe ff55 	bl	80045f0 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1EPSt18_Rb_tree_node_base>
      if (__comp)
 8005746:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 800574a:	2b00      	cmp	r3, #0
 800574c:	d01d      	beq.n	800578a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0xc0>
	  if (__j == begin())
 800574e:	68b8      	ldr	r0, [r7, #8]
 8005750:	f000 ff35 	bl	80065be <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE5beginEv>
 8005754:	4603      	mov	r3, r0
 8005756:	61fb      	str	r3, [r7, #28]
 8005758:	f107 021c 	add.w	r2, r7, #28
 800575c:	f107 0310 	add.w	r3, r7, #16
 8005760:	4611      	mov	r1, r2
 8005762:	4618      	mov	r0, r3
 8005764:	f000 ff3c 	bl	80065e0 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEESC_>
 8005768:	4603      	mov	r3, r0
 800576a:	2b00      	cmp	r3, #0
 800576c:	d008      	beq.n	8005780 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0xb6>
	    return _Res(__x, __y);
 800576e:	f107 0214 	add.w	r2, r7, #20
 8005772:	f107 0318 	add.w	r3, r7, #24
 8005776:	4619      	mov	r1, r3
 8005778:	68f8      	ldr	r0, [r7, #12]
 800577a:	f000 ff45 	bl	8006608 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEERS1_Lb1EEEOT_OT0_>
 800577e:	e025      	b.n	80057cc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0x102>
	    --__j;
 8005780:	f107 0310 	add.w	r3, r7, #16
 8005784:	4618      	mov	r0, r3
 8005786:	f000 f831 	bl	80057ec <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEmmEv>
      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
 800578a:	68bc      	ldr	r4, [r7, #8]
 800578c:	693b      	ldr	r3, [r7, #16]
 800578e:	4618      	mov	r0, r3
 8005790:	f7ff ff80 	bl	8005694 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8005794:	4603      	mov	r3, r0
 8005796:	687a      	ldr	r2, [r7, #4]
 8005798:	4619      	mov	r1, r3
 800579a:	4620      	mov	r0, r4
 800579c:	f7ff ff86 	bl	80056ac <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 80057a0:	4603      	mov	r3, r0
 80057a2:	2b00      	cmp	r3, #0
 80057a4:	d008      	beq.n	80057b8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0xee>
	return _Res(__x, __y);
 80057a6:	f107 0214 	add.w	r2, r7, #20
 80057aa:	f107 0318 	add.w	r3, r7, #24
 80057ae:	4619      	mov	r1, r3
 80057b0:	68f8      	ldr	r0, [r7, #12]
 80057b2:	f000 ff29 	bl	8006608 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEERS1_Lb1EEEOT_OT0_>
 80057b6:	e009      	b.n	80057cc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0x102>
      return _Res(__j._M_node, 0);
 80057b8:	2300      	movs	r3, #0
 80057ba:	623b      	str	r3, [r7, #32]
 80057bc:	f107 0220 	add.w	r2, r7, #32
 80057c0:	f107 0310 	add.w	r3, r7, #16
 80057c4:	4619      	mov	r1, r3
 80057c6:	68f8      	ldr	r0, [r7, #12]
 80057c8:	f7ff fed2 	bl	8005570 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_>
    }
 80057cc:	68f8      	ldr	r0, [r7, #12]
 80057ce:	372c      	adds	r7, #44	; 0x2c
 80057d0:	46bd      	mov	sp, r7
 80057d2:	bd90      	pop	{r4, r7, pc}

080057d4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_leftmostEv>:
      _M_leftmost() _GLIBCXX_NOEXCEPT
 80057d4:	b480      	push	{r7}
 80057d6:	b083      	sub	sp, #12
 80057d8:	af00      	add	r7, sp, #0
 80057da:	6078      	str	r0, [r7, #4]
      { return this->_M_impl._M_header._M_left; }
 80057dc:	687b      	ldr	r3, [r7, #4]
 80057de:	330c      	adds	r3, #12
 80057e0:	4618      	mov	r0, r3
 80057e2:	370c      	adds	r7, #12
 80057e4:	46bd      	mov	sp, r7
 80057e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80057ea:	4770      	bx	lr

080057ec <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEmmEv>:
      operator--() _GLIBCXX_NOEXCEPT
 80057ec:	b580      	push	{r7, lr}
 80057ee:	b082      	sub	sp, #8
 80057f0:	af00      	add	r7, sp, #0
 80057f2:	6078      	str	r0, [r7, #4]
	_M_node = _Rb_tree_decrement(_M_node);
 80057f4:	687b      	ldr	r3, [r7, #4]
 80057f6:	681b      	ldr	r3, [r3, #0]
 80057f8:	4618      	mov	r0, r3
 80057fa:	f01d f87b 	bl	80228f4 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 80057fe:	4602      	mov	r2, r0
 8005800:	687b      	ldr	r3, [r7, #4]
 8005802:	601a      	str	r2, [r3, #0]
	return *this;
 8005804:	687b      	ldr	r3, [r7, #4]
      }
 8005806:	4618      	mov	r0, r3
 8005808:	3708      	adds	r7, #8
 800580a:	46bd      	mov	sp, r7
 800580c:	bd80      	pop	{r7, pc}

0800580e <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
 800580e:	b580      	push	{r7, lr}
 8005810:	b082      	sub	sp, #8
 8005812:	af00      	add	r7, sp, #0
 8005814:	6078      	str	r0, [r7, #4]
	_M_node = _Rb_tree_increment(_M_node);
 8005816:	687b      	ldr	r3, [r7, #4]
 8005818:	681b      	ldr	r3, [r3, #0]
 800581a:	4618      	mov	r0, r3
 800581c:	f01d f857 	bl	80228ce <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
 8005820:	4602      	mov	r2, r0
 8005822:	687b      	ldr	r3, [r7, #4]
 8005824:	601a      	str	r2, [r3, #0]
	return *this;
 8005826:	687b      	ldr	r3, [r7, #4]
      }
 8005828:	4618      	mov	r0, r3
 800582a:	3708      	adds	r7, #8
 800582c:	46bd      	mov	sp, r7
 800582e:	bd80      	pop	{r7, pc}

08005830 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_Alloc_nodeclIRKS9_EEPSt13_Rb_tree_nodeIS9_EOT_>:
	  operator()(_Arg&& __arg) const
 8005830:	b590      	push	{r4, r7, lr}
 8005832:	b083      	sub	sp, #12
 8005834:	af00      	add	r7, sp, #0
 8005836:	6078      	str	r0, [r7, #4]
 8005838:	6039      	str	r1, [r7, #0]
	  { return _M_t._M_create_node(_GLIBCXX_FORWARD(_Arg, __arg)); }
 800583a:	687b      	ldr	r3, [r7, #4]
 800583c:	681c      	ldr	r4, [r3, #0]
 800583e:	6838      	ldr	r0, [r7, #0]
 8005840:	f7ff f814 	bl	800486c <_ZSt7forwardIRKSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEOT_RNSt16remove_referenceISC_E4typeE>
 8005844:	4603      	mov	r3, r0
 8005846:	4619      	mov	r1, r3
 8005848:	4620      	mov	r0, r4
 800584a:	f000 fef6 	bl	800663a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_create_nodeIJRKS9_EEEPSt13_Rb_tree_nodeIS9_EDpOT_>
 800584e:	4603      	mov	r3, r0
 8005850:	4618      	mov	r0, r3
 8005852:	370c      	adds	r7, #12
 8005854:	46bd      	mov	sp, r7
 8005856:	bd90      	pop	{r4, r7, pc}

08005858 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEC1ERKS7_>:
 8005858:	b480      	push	{r7}
 800585a:	b083      	sub	sp, #12
 800585c:	af00      	add	r7, sp, #0
 800585e:	6078      	str	r0, [r7, #4]
 8005860:	6039      	str	r1, [r7, #0]
 8005862:	687b      	ldr	r3, [r7, #4]
 8005864:	4618      	mov	r0, r3
 8005866:	370c      	adds	r7, #12
 8005868:	46bd      	mov	sp, r7
 800586a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800586e:	4770      	bx	lr

08005870 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS3_E>:
      _M_destroy_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 8005870:	b590      	push	{r4, r7, lr}
 8005872:	b083      	sub	sp, #12
 8005874:	af00      	add	r7, sp, #0
 8005876:	6078      	str	r0, [r7, #4]
 8005878:	6039      	str	r1, [r7, #0]
	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
 800587a:	6878      	ldr	r0, [r7, #4]
 800587c:	f000 fef4 	bl	8006668 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE21_M_get_Node_allocatorEv>
 8005880:	4604      	mov	r4, r0
 8005882:	6838      	ldr	r0, [r7, #0]
 8005884:	f000 fefb 	bl	800667e <_ZNSt13_Rb_tree_nodeISt4pairIKc12double_tokenEE9_M_valptrEv>
 8005888:	4603      	mov	r3, r0
 800588a:	4619      	mov	r1, r3
 800588c:	4620      	mov	r0, r4
 800588e:	f000 ff04 	bl	800669a <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEE7destroyIS4_EEvRS6_PT_>
      }
 8005892:	bf00      	nop
 8005894:	370c      	adds	r7, #12
 8005896:	46bd      	mov	sp, r7
 8005898:	bd90      	pop	{r4, r7, pc}

0800589a <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS3_E>:
      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 800589a:	b580      	push	{r7, lr}
 800589c:	b082      	sub	sp, #8
 800589e:	af00      	add	r7, sp, #0
 80058a0:	6078      	str	r0, [r7, #4]
 80058a2:	6039      	str	r1, [r7, #0]
      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
 80058a4:	6878      	ldr	r0, [r7, #4]
 80058a6:	f000 fedf 	bl	8006668 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE21_M_get_Node_allocatorEv>
 80058aa:	4603      	mov	r3, r0
 80058ac:	2201      	movs	r2, #1
 80058ae:	6839      	ldr	r1, [r7, #0]
 80058b0:	4618      	mov	r0, r3
 80058b2:	f000 feff 	bl	80066b4 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEE10deallocateERS6_PS5_j>
 80058b6:	bf00      	nop
 80058b8:	3708      	adds	r7, #8
 80058ba:	46bd      	mov	sp, r7
 80058bc:	bd80      	pop	{r7, pc}

080058be <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEE13_M_const_castEv>:
      _M_const_cast() const _GLIBCXX_NOEXCEPT
 80058be:	b580      	push	{r7, lr}
 80058c0:	b084      	sub	sp, #16
 80058c2:	af00      	add	r7, sp, #0
 80058c4:	6078      	str	r0, [r7, #4]
      { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
 80058c6:	687b      	ldr	r3, [r7, #4]
 80058c8:	681a      	ldr	r2, [r3, #0]
 80058ca:	f107 030c 	add.w	r3, r7, #12
 80058ce:	4611      	mov	r1, r2
 80058d0:	4618      	mov	r0, r3
 80058d2:	f7ff f877 	bl	80049c4 <_ZNSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEEC1EPSt18_Rb_tree_node_base>
 80058d6:	68fb      	ldr	r3, [r7, #12]
 80058d8:	4618      	mov	r0, r3
 80058da:	3710      	adds	r7, #16
 80058dc:	46bd      	mov	sp, r7
 80058de:	bd80      	pop	{r7, pc}

080058e0 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_M_endEv>:
      _M_end() _GLIBCXX_NOEXCEPT
 80058e0:	b480      	push	{r7}
 80058e2:	b083      	sub	sp, #12
 80058e4:	af00      	add	r7, sp, #0
 80058e6:	6078      	str	r0, [r7, #4]
      { return &this->_M_impl._M_header; }
 80058e8:	687b      	ldr	r3, [r7, #4]
 80058ea:	3304      	adds	r3, #4
 80058ec:	4618      	mov	r0, r3
 80058ee:	370c      	adds	r7, #12
 80058f0:	46bd      	mov	sp, r7
 80058f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80058f6:	4770      	bx	lr

080058f8 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 80058f8:	b480      	push	{r7}
 80058fa:	b083      	sub	sp, #12
 80058fc:	af00      	add	r7, sp, #0
 80058fe:	6078      	str	r0, [r7, #4]
      { return _M_impl._M_node_count; }
 8005900:	687b      	ldr	r3, [r7, #4]
 8005902:	695b      	ldr	r3, [r3, #20]
 8005904:	4618      	mov	r0, r3
 8005906:	370c      	adds	r7, #12
 8005908:	46bd      	mov	sp, r7
 800590a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800590e:	4770      	bx	lr

08005910 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_rightmostEv>:
      _M_rightmost() _GLIBCXX_NOEXCEPT
 8005910:	b480      	push	{r7}
 8005912:	b083      	sub	sp, #12
 8005914:	af00      	add	r7, sp, #0
 8005916:	6078      	str	r0, [r7, #4]
      { return this->_M_impl._M_header._M_right; }
 8005918:	687b      	ldr	r3, [r7, #4]
 800591a:	3310      	adds	r3, #16
 800591c:	4618      	mov	r0, r3
 800591e:	370c      	adds	r7, #12
 8005920:	46bd      	mov	sp, r7
 8005922:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005926:	4770      	bx	lr

08005928 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>:
      _S_key(_Const_Base_ptr __x)
 8005928:	b580      	push	{r7, lr}
 800592a:	b082      	sub	sp, #8
 800592c:	af00      	add	r7, sp, #0
 800592e:	6078      	str	r0, [r7, #4]
      { return _S_key(static_cast<_Const_Link_type>(__x)); }
 8005930:	6878      	ldr	r0, [r7, #4]
 8005932:	f000 fece 	bl	80066d2 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt13_Rb_tree_nodeIS3_E>
 8005936:	4603      	mov	r3, r0
 8005938:	4618      	mov	r0, r3
 800593a:	3708      	adds	r7, #8
 800593c:	46bd      	mov	sp, r7
 800593e:	bd80      	pop	{r7, pc}

08005940 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8005940:	b590      	push	{r4, r7, lr}
 8005942:	b08b      	sub	sp, #44	; 0x2c
 8005944:	af00      	add	r7, sp, #0
 8005946:	60f8      	str	r0, [r7, #12]
 8005948:	60b9      	str	r1, [r7, #8]
 800594a:	607a      	str	r2, [r7, #4]
      _Link_type __x = _M_begin();
 800594c:	68b8      	ldr	r0, [r7, #8]
 800594e:	f7fd fe81 	bl	8003654 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_beginEv>
 8005952:	4603      	mov	r3, r0
 8005954:	61bb      	str	r3, [r7, #24]
      _Base_ptr __y = _M_end();
 8005956:	68b8      	ldr	r0, [r7, #8]
 8005958:	f7ff ffc2 	bl	80058e0 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_M_endEv>
 800595c:	4603      	mov	r3, r0
 800595e:	617b      	str	r3, [r7, #20]
      bool __comp = true;
 8005960:	2301      	movs	r3, #1
 8005962:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
      while (__x != 0)
 8005966:	69bb      	ldr	r3, [r7, #24]
 8005968:	2b00      	cmp	r3, #0
 800596a:	d020      	beq.n	80059ae <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0x6e>
	  __y = __x;
 800596c:	69bb      	ldr	r3, [r7, #24]
 800596e:	617b      	str	r3, [r7, #20]
	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
 8005970:	68bc      	ldr	r4, [r7, #8]
 8005972:	69bb      	ldr	r3, [r7, #24]
 8005974:	4618      	mov	r0, r3
 8005976:	f000 feac 	bl	80066d2 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt13_Rb_tree_nodeIS3_E>
 800597a:	4603      	mov	r3, r0
 800597c:	461a      	mov	r2, r3
 800597e:	6879      	ldr	r1, [r7, #4]
 8005980:	4620      	mov	r0, r4
 8005982:	f7ff fcfe 	bl	8005382 <_ZNKSt4lessIcEclERKcS2_>
 8005986:	4603      	mov	r3, r0
 8005988:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
	  __x = __comp ? _S_left(__x) : _S_right(__x);
 800598c:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8005990:	2b00      	cmp	r3, #0
 8005992:	d005      	beq.n	80059a0 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0x60>
 8005994:	69bb      	ldr	r3, [r7, #24]
 8005996:	4618      	mov	r0, r3
 8005998:	f7fe fff7 	bl	800498a <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE7_S_leftEPSt18_Rb_tree_node_base>
 800599c:	4603      	mov	r3, r0
 800599e:	e004      	b.n	80059aa <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0x6a>
 80059a0:	69bb      	ldr	r3, [r7, #24]
 80059a2:	4618      	mov	r0, r3
 80059a4:	f7fe ffe5 	bl	8004972 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base>
 80059a8:	4603      	mov	r3, r0
 80059aa:	61bb      	str	r3, [r7, #24]
      while (__x != 0)
 80059ac:	e7db      	b.n	8005966 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0x26>
      iterator __j = iterator(__y);
 80059ae:	697a      	ldr	r2, [r7, #20]
 80059b0:	f107 0310 	add.w	r3, r7, #16
 80059b4:	4611      	mov	r1, r2
 80059b6:	4618      	mov	r0, r3
 80059b8:	f7ff f804 	bl	80049c4 <_ZNSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEEC1EPSt18_Rb_tree_node_base>
      if (__comp)
 80059bc:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 80059c0:	2b00      	cmp	r3, #0
 80059c2:	d01d      	beq.n	8005a00 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0xc0>
	  if (__j == begin())
 80059c4:	68b8      	ldr	r0, [r7, #8]
 80059c6:	f000 fe97 	bl	80066f8 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE5beginEv>
 80059ca:	4603      	mov	r3, r0
 80059cc:	61fb      	str	r3, [r7, #28]
 80059ce:	f107 021c 	add.w	r2, r7, #28
 80059d2:	f107 0310 	add.w	r3, r7, #16
 80059d6:	4611      	mov	r1, r2
 80059d8:	4618      	mov	r0, r3
 80059da:	f000 fe9e 	bl	800671a <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEES6_>
 80059de:	4603      	mov	r3, r0
 80059e0:	2b00      	cmp	r3, #0
 80059e2:	d008      	beq.n	80059f6 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0xb6>
	    return _Res(__x, __y);
 80059e4:	f107 0214 	add.w	r2, r7, #20
 80059e8:	f107 0318 	add.w	r3, r7, #24
 80059ec:	4619      	mov	r1, r3
 80059ee:	68f8      	ldr	r0, [r7, #12]
 80059f0:	f000 fea7 	bl	8006742 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKc12double_tokenEERS1_Lb1EEEOT_OT0_>
 80059f4:	e025      	b.n	8005a42 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0x102>
	    --__j;
 80059f6:	f107 0310 	add.w	r3, r7, #16
 80059fa:	4618      	mov	r0, r3
 80059fc:	f000 f831 	bl	8005a62 <_ZNSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEEmmEv>
      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
 8005a00:	68bc      	ldr	r4, [r7, #8]
 8005a02:	693b      	ldr	r3, [r7, #16]
 8005a04:	4618      	mov	r0, r3
 8005a06:	f7ff ff8f 	bl	8005928 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8005a0a:	4603      	mov	r3, r0
 8005a0c:	687a      	ldr	r2, [r7, #4]
 8005a0e:	4619      	mov	r1, r3
 8005a10:	4620      	mov	r0, r4
 8005a12:	f7ff fcb6 	bl	8005382 <_ZNKSt4lessIcEclERKcS2_>
 8005a16:	4603      	mov	r3, r0
 8005a18:	2b00      	cmp	r3, #0
 8005a1a:	d008      	beq.n	8005a2e <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0xee>
	return _Res(__x, __y);
 8005a1c:	f107 0214 	add.w	r2, r7, #20
 8005a20:	f107 0318 	add.w	r3, r7, #24
 8005a24:	4619      	mov	r1, r3
 8005a26:	68f8      	ldr	r0, [r7, #12]
 8005a28:	f000 fe8b 	bl	8006742 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKc12double_tokenEERS1_Lb1EEEOT_OT0_>
 8005a2c:	e009      	b.n	8005a42 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0x102>
      return _Res(__j._M_node, 0);
 8005a2e:	2300      	movs	r3, #0
 8005a30:	623b      	str	r3, [r7, #32]
 8005a32:	f107 0220 	add.w	r2, r7, #32
 8005a36:	f107 0310 	add.w	r3, r7, #16
 8005a3a:	4619      	mov	r1, r3
 8005a3c:	68f8      	ldr	r0, [r7, #12]
 8005a3e:	f7ff fd97 	bl	8005570 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_>
    }
 8005a42:	68f8      	ldr	r0, [r7, #12]
 8005a44:	372c      	adds	r7, #44	; 0x2c
 8005a46:	46bd      	mov	sp, r7
 8005a48:	bd90      	pop	{r4, r7, pc}

08005a4a <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_leftmostEv>:
      _M_leftmost() _GLIBCXX_NOEXCEPT
 8005a4a:	b480      	push	{r7}
 8005a4c:	b083      	sub	sp, #12
 8005a4e:	af00      	add	r7, sp, #0
 8005a50:	6078      	str	r0, [r7, #4]
      { return this->_M_impl._M_header._M_left; }
 8005a52:	687b      	ldr	r3, [r7, #4]
 8005a54:	330c      	adds	r3, #12
 8005a56:	4618      	mov	r0, r3
 8005a58:	370c      	adds	r7, #12
 8005a5a:	46bd      	mov	sp, r7
 8005a5c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005a60:	4770      	bx	lr

08005a62 <_ZNSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEEmmEv>:
      operator--() _GLIBCXX_NOEXCEPT
 8005a62:	b580      	push	{r7, lr}
 8005a64:	b082      	sub	sp, #8
 8005a66:	af00      	add	r7, sp, #0
 8005a68:	6078      	str	r0, [r7, #4]
	_M_node = _Rb_tree_decrement(_M_node);
 8005a6a:	687b      	ldr	r3, [r7, #4]
 8005a6c:	681b      	ldr	r3, [r3, #0]
 8005a6e:	4618      	mov	r0, r3
 8005a70:	f01c ff40 	bl	80228f4 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 8005a74:	4602      	mov	r2, r0
 8005a76:	687b      	ldr	r3, [r7, #4]
 8005a78:	601a      	str	r2, [r3, #0]
	return *this;
 8005a7a:	687b      	ldr	r3, [r7, #4]
      }
 8005a7c:	4618      	mov	r0, r3
 8005a7e:	3708      	adds	r7, #8
 8005a80:	46bd      	mov	sp, r7
 8005a82:	bd80      	pop	{r7, pc}

08005a84 <_ZNSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
 8005a84:	b580      	push	{r7, lr}
 8005a86:	b082      	sub	sp, #8
 8005a88:	af00      	add	r7, sp, #0
 8005a8a:	6078      	str	r0, [r7, #4]
	_M_node = _Rb_tree_increment(_M_node);
 8005a8c:	687b      	ldr	r3, [r7, #4]
 8005a8e:	681b      	ldr	r3, [r3, #0]
 8005a90:	4618      	mov	r0, r3
 8005a92:	f01c ff1c 	bl	80228ce <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
 8005a96:	4602      	mov	r2, r0
 8005a98:	687b      	ldr	r3, [r7, #4]
 8005a9a:	601a      	str	r2, [r3, #0]
	return *this;
 8005a9c:	687b      	ldr	r3, [r7, #4]
      }
 8005a9e:	4618      	mov	r0, r3
 8005aa0:	3708      	adds	r7, #8
 8005aa2:	46bd      	mov	sp, r7
 8005aa4:	bd80      	pop	{r7, pc}

08005aa6 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_Alloc_nodeclIRKS3_EEPSt13_Rb_tree_nodeIS3_EOT_>:
	  operator()(_Arg&& __arg) const
 8005aa6:	b590      	push	{r4, r7, lr}
 8005aa8:	b083      	sub	sp, #12
 8005aaa:	af00      	add	r7, sp, #0
 8005aac:	6078      	str	r0, [r7, #4]
 8005aae:	6039      	str	r1, [r7, #0]
	  { return _M_t._M_create_node(_GLIBCXX_FORWARD(_Arg, __arg)); }
 8005ab0:	687b      	ldr	r3, [r7, #4]
 8005ab2:	681c      	ldr	r4, [r3, #0]
 8005ab4:	6838      	ldr	r0, [r7, #0]
 8005ab6:	f7ff f8c3 	bl	8004c40 <_ZSt7forwardIRKSt4pairIKc12double_tokenEEOT_RNSt16remove_referenceIS6_E4typeE>
 8005aba:	4603      	mov	r3, r0
 8005abc:	4619      	mov	r1, r3
 8005abe:	4620      	mov	r0, r4
 8005ac0:	f000 fe58 	bl	8006774 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_create_nodeIJRKS3_EEEPSt13_Rb_tree_nodeIS3_EDpOT_>
 8005ac4:	4603      	mov	r3, r0
 8005ac6:	4618      	mov	r0, r3
 8005ac8:	370c      	adds	r7, #12
 8005aca:	46bd      	mov	sp, r7
 8005acc:	bd90      	pop	{r4, r7, pc}

08005ace <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8005ace:	b480      	push	{r7}
 8005ad0:	b083      	sub	sp, #12
 8005ad2:	af00      	add	r7, sp, #0
 8005ad4:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8005ad6:	687b      	ldr	r3, [r7, #4]
 8005ad8:	4618      	mov	r0, r3
 8005ada:	370c      	adds	r7, #12
 8005adc:	46bd      	mov	sp, r7
 8005ade:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005ae2:	4770      	bx	lr

08005ae4 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEE13_M_reset_implEvEUlOT_E_JRiEESF_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8005ae4:	b5b0      	push	{r4, r5, r7, lr}
 8005ae6:	b084      	sub	sp, #16
 8005ae8:	af00      	add	r7, sp, #0
 8005aea:	7338      	strb	r0, [r7, #12]
 8005aec:	60b9      	str	r1, [r7, #8]
 8005aee:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8005af0:	68b8      	ldr	r0, [r7, #8]
 8005af2:	f7ff f9bd 	bl	8004e70 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8005af6:	4604      	mov	r4, r0
 8005af8:	6878      	ldr	r0, [r7, #4]
 8005afa:	f7ff ffe8 	bl	8005ace <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 8005afe:	4603      	mov	r3, r0
 8005b00:	4619      	mov	r1, r3
 8005b02:	4620      	mov	r0, r4
 8005b04:	f000 fe4d 	bl	80067a2 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE13_M_reset_implEvENUlOT_E_clIRiEENS0_16__variant_cookieESE_>
 8005b08:	462b      	mov	r3, r5
 8005b0a:	4618      	mov	r0, r3
 8005b0c:	3710      	adds	r7, #16
 8005b0e:	46bd      	mov	sp, r7
 8005b10:	bdb0      	pop	{r4, r5, r7, pc}

08005b12 <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8005b12:	b480      	push	{r7}
 8005b14:	b083      	sub	sp, #12
 8005b16:	af00      	add	r7, sp, #0
 8005b18:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8005b1a:	687b      	ldr	r3, [r7, #4]
 8005b1c:	4618      	mov	r0, r3
 8005b1e:	370c      	adds	r7, #12
 8005b20:	46bd      	mov	sp, r7
 8005b22:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005b26:	4770      	bx	lr

08005b28 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEE13_M_reset_implEvEUlOT_E_JRfEESF_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8005b28:	b5b0      	push	{r4, r5, r7, lr}
 8005b2a:	b084      	sub	sp, #16
 8005b2c:	af00      	add	r7, sp, #0
 8005b2e:	7338      	strb	r0, [r7, #12]
 8005b30:	60b9      	str	r1, [r7, #8]
 8005b32:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8005b34:	68b8      	ldr	r0, [r7, #8]
 8005b36:	f7ff f99b 	bl	8004e70 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8005b3a:	4604      	mov	r4, r0
 8005b3c:	6878      	ldr	r0, [r7, #4]
 8005b3e:	f7ff ffe8 	bl	8005b12 <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 8005b42:	4603      	mov	r3, r0
 8005b44:	4619      	mov	r1, r3
 8005b46:	4620      	mov	r0, r4
 8005b48:	f000 fe3c 	bl	80067c4 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE13_M_reset_implEvENUlOT_E_clIRfEENS0_16__variant_cookieESE_>
 8005b4c:	462b      	mov	r3, r5
 8005b4e:	4618      	mov	r0, r3
 8005b50:	3710      	adds	r7, #16
 8005b52:	46bd      	mov	sp, r7
 8005b54:	bdb0      	pop	{r4, r5, r7, pc}

08005b56 <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8005b56:	b480      	push	{r7}
 8005b58:	b083      	sub	sp, #12
 8005b5a:	af00      	add	r7, sp, #0
 8005b5c:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8005b5e:	687b      	ldr	r3, [r7, #4]
 8005b60:	4618      	mov	r0, r3
 8005b62:	370c      	adds	r7, #12
 8005b64:	46bd      	mov	sp, r7
 8005b66:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005b6a:	4770      	bx	lr

08005b6c <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEE13_M_reset_implEvEUlOT_E_JRbEESF_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8005b6c:	b5b0      	push	{r4, r5, r7, lr}
 8005b6e:	b084      	sub	sp, #16
 8005b70:	af00      	add	r7, sp, #0
 8005b72:	7338      	strb	r0, [r7, #12]
 8005b74:	60b9      	str	r1, [r7, #8]
 8005b76:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8005b78:	68b8      	ldr	r0, [r7, #8]
 8005b7a:	f7ff f979 	bl	8004e70 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8005b7e:	4604      	mov	r4, r0
 8005b80:	6878      	ldr	r0, [r7, #4]
 8005b82:	f7ff ffe8 	bl	8005b56 <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
 8005b86:	4603      	mov	r3, r0
 8005b88:	4619      	mov	r1, r3
 8005b8a:	4620      	mov	r0, r4
 8005b8c:	f000 fe2b 	bl	80067e6 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE13_M_reset_implEvENUlOT_E_clIRbEENS0_16__variant_cookieESE_>
 8005b90:	462b      	mov	r3, r5
 8005b92:	4618      	mov	r0, r3
 8005b94:	3710      	adds	r7, #16
 8005b96:	46bd      	mov	sp, r7
 8005b98:	bdb0      	pop	{r4, r5, r7, pc}

08005b9a <_ZN9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE6_M_ptrEv>:
      _M_ptr() noexcept
 8005b9a:	b580      	push	{r7, lr}
 8005b9c:	b082      	sub	sp, #8
 8005b9e:	af00      	add	r7, sp, #0
 8005ba0:	6078      	str	r0, [r7, #4]
      { return static_cast<_Tp*>(_M_addr()); }
 8005ba2:	6878      	ldr	r0, [r7, #4]
 8005ba4:	f000 fe30 	bl	8006808 <_ZN9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7_M_addrEv>
 8005ba8:	4603      	mov	r3, r0
 8005baa:	4618      	mov	r0, r3
 8005bac:	3708      	adds	r7, #8
 8005bae:	46bd      	mov	sp, r7
 8005bb0:	bd80      	pop	{r7, pc}

08005bb2 <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8005bb2:	b480      	push	{r7}
 8005bb4:	b083      	sub	sp, #12
 8005bb6:	af00      	add	r7, sp, #0
 8005bb8:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8005bba:	687b      	ldr	r3, [r7, #4]
 8005bbc:	4618      	mov	r0, r3
 8005bbe:	370c      	adds	r7, #12
 8005bc0:	46bd      	mov	sp, r7
 8005bc2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005bc6:	4770      	bx	lr

08005bc8 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEE13_M_reset_implEvEUlOT_E_JRS9_EESF_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8005bc8:	b5b0      	push	{r4, r5, r7, lr}
 8005bca:	b084      	sub	sp, #16
 8005bcc:	af00      	add	r7, sp, #0
 8005bce:	7338      	strb	r0, [r7, #12]
 8005bd0:	60b9      	str	r1, [r7, #8]
 8005bd2:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8005bd4:	68b8      	ldr	r0, [r7, #8]
 8005bd6:	f7ff f94b 	bl	8004e70 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8005bda:	4604      	mov	r4, r0
 8005bdc:	6878      	ldr	r0, [r7, #4]
 8005bde:	f7ff ffe8 	bl	8005bb2 <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 8005be2:	4603      	mov	r3, r0
 8005be4:	4619      	mov	r1, r3
 8005be6:	4620      	mov	r0, r4
 8005be8:	f000 fe19 	bl	800681e <_ZZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE13_M_reset_implEvENUlOT_E_clIRS7_EENS0_16__variant_cookieESE_>
 8005bec:	462b      	mov	r3, r5
 8005bee:	4618      	mov	r0, r3
 8005bf0:	3710      	adds	r7, #16
 8005bf2:	46bd      	mov	sp, r7
 8005bf4:	bdb0      	pop	{r4, r5, r7, pc}

08005bf6 <_ZN9__gnu_cxx16__aligned_membufISt6vectorI6SymbolSaIS2_EEE6_M_ptrEv>:
      _M_ptr() noexcept
 8005bf6:	b580      	push	{r7, lr}
 8005bf8:	b082      	sub	sp, #8
 8005bfa:	af00      	add	r7, sp, #0
 8005bfc:	6078      	str	r0, [r7, #4]
      { return static_cast<_Tp*>(_M_addr()); }
 8005bfe:	6878      	ldr	r0, [r7, #4]
 8005c00:	f000 fe1e 	bl	8006840 <_ZN9__gnu_cxx16__aligned_membufISt6vectorI6SymbolSaIS2_EEE7_M_addrEv>
 8005c04:	4603      	mov	r3, r0
 8005c06:	4618      	mov	r0, r3
 8005c08:	3708      	adds	r7, #8
 8005c0a:	46bd      	mov	sp, r7
 8005c0c:	bd80      	pop	{r7, pc}

08005c0e <_ZSt7forwardIRSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS5_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8005c0e:	b480      	push	{r7}
 8005c10:	b083      	sub	sp, #12
 8005c12:	af00      	add	r7, sp, #0
 8005c14:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8005c16:	687b      	ldr	r3, [r7, #4]
 8005c18:	4618      	mov	r0, r3
 8005c1a:	370c      	adds	r7, #12
 8005c1c:	46bd      	mov	sp, r7
 8005c1e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005c22:	4770      	bx	lr

08005c24 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEE13_M_reset_implEvEUlOT_E_JRSD_EESF_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8005c24:	b5b0      	push	{r4, r5, r7, lr}
 8005c26:	b084      	sub	sp, #16
 8005c28:	af00      	add	r7, sp, #0
 8005c2a:	7338      	strb	r0, [r7, #12]
 8005c2c:	60b9      	str	r1, [r7, #8]
 8005c2e:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8005c30:	68b8      	ldr	r0, [r7, #8]
 8005c32:	f7ff f91d 	bl	8004e70 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8005c36:	4604      	mov	r4, r0
 8005c38:	6878      	ldr	r0, [r7, #4]
 8005c3a:	f7ff ffe8 	bl	8005c0e <_ZSt7forwardIRSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS5_E4typeE>
 8005c3e:	4603      	mov	r3, r0
 8005c40:	4619      	mov	r1, r3
 8005c42:	4620      	mov	r0, r4
 8005c44:	f000 fe07 	bl	8006856 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE13_M_reset_implEvENUlOT_E_clIRSB_EENS0_16__variant_cookieESE_>
 8005c48:	462b      	mov	r3, r5
 8005c4a:	4618      	mov	r0, r3
 8005c4c:	3710      	adds	r7, #16
 8005c4e:	46bd      	mov	sp, r7
 8005c50:	bdb0      	pop	{r4, r5, r7, pc}

08005c52 <_ZSt7forwardIRNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8005c52:	b480      	push	{r7}
 8005c54:	b083      	sub	sp, #12
 8005c56:	af00      	add	r7, sp, #0
 8005c58:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8005c5a:	687b      	ldr	r3, [r7, #4]
 8005c5c:	4618      	mov	r0, r3
 8005c5e:	370c      	adds	r7, #12
 8005c60:	46bd      	mov	sp, r7
 8005c62:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005c66:	4770      	bx	lr

08005c68 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE19_M_destructive_copyIiEEvtRKT_>:
        void _M_destructive_copy(unsigned short __rhs_index, const _Up& __rhs)
 8005c68:	b580      	push	{r7, lr}
 8005c6a:	b084      	sub	sp, #16
 8005c6c:	af00      	add	r7, sp, #0
 8005c6e:	60f8      	str	r0, [r7, #12]
 8005c70:	460b      	mov	r3, r1
 8005c72:	607a      	str	r2, [r7, #4]
 8005c74:	817b      	strh	r3, [r7, #10]
	  this->_M_reset();
 8005c76:	68fb      	ldr	r3, [r7, #12]
 8005c78:	4618      	mov	r0, r3
 8005c7a:	f7fd f949 	bl	8002f10 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE8_M_resetEv>
	  __variant_construct_single(*this, __rhs);
 8005c7e:	6879      	ldr	r1, [r7, #4]
 8005c80:	68f8      	ldr	r0, [r7, #12]
 8005c82:	f000 fe10 	bl	80068a6 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEERKiEEvOT_OT0_>
	  this->_M_index = __rhs_index;
 8005c86:	897b      	ldrh	r3, [r7, #10]
 8005c88:	b2da      	uxtb	r2, r3
 8005c8a:	68fb      	ldr	r3, [r7, #12]
 8005c8c:	761a      	strb	r2, [r3, #24]
	}
 8005c8e:	bf00      	nop
 8005c90:	3710      	adds	r7, #16
 8005c92:	46bd      	mov	sp, r7
 8005c94:	bd80      	pop	{r7, pc}

08005c96 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE19_M_destructive_copyIfEEvtRKT_>:
        void _M_destructive_copy(unsigned short __rhs_index, const _Up& __rhs)
 8005c96:	b580      	push	{r7, lr}
 8005c98:	b084      	sub	sp, #16
 8005c9a:	af00      	add	r7, sp, #0
 8005c9c:	60f8      	str	r0, [r7, #12]
 8005c9e:	460b      	mov	r3, r1
 8005ca0:	607a      	str	r2, [r7, #4]
 8005ca2:	817b      	strh	r3, [r7, #10]
	  this->_M_reset();
 8005ca4:	68fb      	ldr	r3, [r7, #12]
 8005ca6:	4618      	mov	r0, r3
 8005ca8:	f7fd f932 	bl	8002f10 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE8_M_resetEv>
	  __variant_construct_single(*this, __rhs);
 8005cac:	6879      	ldr	r1, [r7, #4]
 8005cae:	68f8      	ldr	r0, [r7, #12]
 8005cb0:	f000 fe13 	bl	80068da <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEERKfEEvOT_OT0_>
	  this->_M_index = __rhs_index;
 8005cb4:	897b      	ldrh	r3, [r7, #10]
 8005cb6:	b2da      	uxtb	r2, r3
 8005cb8:	68fb      	ldr	r3, [r7, #12]
 8005cba:	761a      	strb	r2, [r3, #24]
	}
 8005cbc:	bf00      	nop
 8005cbe:	3710      	adds	r7, #16
 8005cc0:	46bd      	mov	sp, r7
 8005cc2:	bd80      	pop	{r7, pc}

08005cc4 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE19_M_destructive_copyIbEEvtRKT_>:
        void _M_destructive_copy(unsigned short __rhs_index, const _Up& __rhs)
 8005cc4:	b580      	push	{r7, lr}
 8005cc6:	b084      	sub	sp, #16
 8005cc8:	af00      	add	r7, sp, #0
 8005cca:	60f8      	str	r0, [r7, #12]
 8005ccc:	460b      	mov	r3, r1
 8005cce:	607a      	str	r2, [r7, #4]
 8005cd0:	817b      	strh	r3, [r7, #10]
	  this->_M_reset();
 8005cd2:	68fb      	ldr	r3, [r7, #12]
 8005cd4:	4618      	mov	r0, r3
 8005cd6:	f7fd f91b 	bl	8002f10 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE8_M_resetEv>
	  __variant_construct_single(*this, __rhs);
 8005cda:	6879      	ldr	r1, [r7, #4]
 8005cdc:	68f8      	ldr	r0, [r7, #12]
 8005cde:	f000 fe16 	bl	800690e <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEERKbEEvOT_OT0_>
	  this->_M_index = __rhs_index;
 8005ce2:	897b      	ldrh	r3, [r7, #10]
 8005ce4:	b2da      	uxtb	r2, r3
 8005ce6:	68fb      	ldr	r3, [r7, #12]
 8005ce8:	761a      	strb	r2, [r3, #24]
	}
 8005cea:	bf00      	nop
 8005cec:	3710      	adds	r7, #16
 8005cee:	46bd      	mov	sp, r7
 8005cf0:	bd80      	pop	{r7, pc}

08005cf2 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1ILj3EJRKS5_ES5_vEESt16in_place_index_tIXT_EEDpOT0_>:
	variant(in_place_index_t<_Np>, _Args&&... __args)
 8005cf2:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005cf4:	b085      	sub	sp, #20
 8005cf6:	af00      	add	r7, sp, #0
 8005cf8:	60f8      	str	r0, [r7, #12]
 8005cfa:	7239      	strb	r1, [r7, #8]
 8005cfc:	607a      	str	r2, [r7, #4]
	_Default_ctor_enabler(_Enable_default_constructor_tag{})
 8005cfe:	68fc      	ldr	r4, [r7, #12]
 8005d00:	6878      	ldr	r0, [r7, #4]
 8005d02:	f7fe f94b 	bl	8003f9c <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 8005d06:	4603      	mov	r3, r0
 8005d08:	461a      	mov	r2, r3
 8005d0a:	4631      	mov	r1, r6
 8005d0c:	4620      	mov	r0, r4
 8005d0e:	f000 fe5d 	bl	80069cc <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj3EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>
 8005d12:	4629      	mov	r1, r5
 8005d14:	68f8      	ldr	r0, [r7, #12]
 8005d16:	f000 fe6e 	bl	80069f6 <_ZNSt27_Enable_default_constructorILb1ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEC1ESt31_Enable_default_constructor_tag>
	{ }
 8005d1a:	68fb      	ldr	r3, [r7, #12]
 8005d1c:	4618      	mov	r0, r3
 8005d1e:	3714      	adds	r7, #20
 8005d20:	46bd      	mov	sp, r7
 8005d22:	bdf0      	pop	{r4, r5, r6, r7, pc}

08005d24 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1IRKS5_vvS5_vEEOT_>:
	variant(_Tp&& __t)
 8005d24:	b590      	push	{r4, r7, lr}
 8005d26:	b083      	sub	sp, #12
 8005d28:	af00      	add	r7, sp, #0
 8005d2a:	6078      	str	r0, [r7, #4]
 8005d2c:	6039      	str	r1, [r7, #0]
		  std::forward<_Tp>(__t))
 8005d2e:	6838      	ldr	r0, [r7, #0]
 8005d30:	f7fe f934 	bl	8003f9c <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 8005d34:	4603      	mov	r3, r0
 8005d36:	461a      	mov	r2, r3
 8005d38:	4621      	mov	r1, r4
 8005d3a:	6878      	ldr	r0, [r7, #4]
 8005d3c:	f7ff ffd9 	bl	8005cf2 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1ILj3EJRKS5_ES5_vEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 8005d40:	687b      	ldr	r3, [r7, #4]
 8005d42:	4618      	mov	r0, r3
 8005d44:	370c      	adds	r7, #12
 8005d46:	46bd      	mov	sp, r7
 8005d48:	bd90      	pop	{r4, r7, pc}

08005d4a <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEERNSt8__detail9__variant17_Move_assign_baseILb0EJifbS5_S9_EEEEDcOT0_>:
    __variant_cast(_Tp&& __rhs)
 8005d4a:	b480      	push	{r7}
 8005d4c:	b083      	sub	sp, #12
 8005d4e:	af00      	add	r7, sp, #0
 8005d50:	6078      	str	r0, [r7, #4]
	    return static_cast<variant<_Types...>&>(__rhs);
 8005d52:	687b      	ldr	r3, [r7, #4]
    }
 8005d54:	4618      	mov	r0, r3
 8005d56:	370c      	adds	r7, #12
 8005d58:	46bd      	mov	sp, r7
 8005d5a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005d5e:	4770      	bx	lr

08005d60 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESO_EEDcOSJ_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8005d60:	b580      	push	{r7, lr}
 8005d62:	b082      	sub	sp, #8
 8005d64:	af00      	add	r7, sp, #0
 8005d66:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8005d68:	6878      	ldr	r0, [r7, #4]
 8005d6a:	f7fc f8b3 	bl	8001ed4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8005d6e:	4603      	mov	r3, r0
 8005d70:	4618      	mov	r0, r3
 8005d72:	f7fb fde6 	bl	8001942 <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8005d76:	4603      	mov	r3, r0
	}
 8005d78:	4618      	mov	r0, r3
 8005d7a:	3708      	adds	r7, #8
 8005d7c:	46bd      	mov	sp, r7
 8005d7e:	bd80      	pop	{r7, pc}

08005d80 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESL_SO_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8005d80:	b5b0      	push	{r4, r5, r7, lr}
 8005d82:	b084      	sub	sp, #16
 8005d84:	af00      	add	r7, sp, #0
 8005d86:	6078      	str	r0, [r7, #4]
 8005d88:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8005d8a:	6878      	ldr	r0, [r7, #4]
 8005d8c:	f000 fe3f 	bl	8006a0e <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 8005d90:	4604      	mov	r4, r0
 8005d92:	6838      	ldr	r0, [r7, #0]
 8005d94:	f7fc f89e 	bl	8001ed4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8005d98:	4603      	mov	r3, r0
 8005d9a:	4618      	mov	r0, r3
 8005d9c:	f7ff ffe0 	bl	8005d60 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESO_EEDcOSJ_>
 8005da0:	4601      	mov	r1, r0
 8005da2:	f107 030c 	add.w	r3, r7, #12
 8005da6:	461a      	mov	r2, r3
 8005da8:	4620      	mov	r0, r4
 8005daa:	f000 fe3b 	bl	8006a24 <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_JRiSt17integral_constantIjLj0EEEENSt15__invoke_resultISF_JDpT0_EE4typeESG_DpOSN_>
	      integral_constant<size_t, __indices>()...);
 8005dae:	462b      	mov	r3, r5
      }
 8005db0:	4618      	mov	r0, r3
 8005db2:	3710      	adds	r7, #16
 8005db4:	46bd      	mov	sp, r7
 8005db6:	bdb0      	pop	{r4, r5, r7, pc}

08005db8 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESL_SO_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8005db8:	b5b0      	push	{r4, r5, r7, lr}
 8005dba:	b082      	sub	sp, #8
 8005dbc:	af00      	add	r7, sp, #0
 8005dbe:	6078      	str	r0, [r7, #4]
 8005dc0:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8005dc2:	6878      	ldr	r0, [r7, #4]
 8005dc4:	f000 fe23 	bl	8006a0e <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 8005dc8:	4604      	mov	r4, r0
 8005dca:	6838      	ldr	r0, [r7, #0]
 8005dcc:	f7fc f882 	bl	8001ed4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8005dd0:	4603      	mov	r3, r0
 8005dd2:	4619      	mov	r1, r3
 8005dd4:	4620      	mov	r0, r4
 8005dd6:	f7ff ffd3 	bl	8005d80 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESL_SO_>
				   std::forward<_Variants>(__vars)...);
 8005dda:	462b      	mov	r3, r5
      }
 8005ddc:	4618      	mov	r0, r3
 8005dde:	3708      	adds	r7, #8
 8005de0:	46bd      	mov	sp, r7
 8005de2:	bdb0      	pop	{r4, r5, r7, pc}

08005de4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj0EEEE14__visit_invokeESL_SO_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8005de4:	b5b0      	push	{r4, r5, r7, lr}
 8005de6:	b082      	sub	sp, #8
 8005de8:	af00      	add	r7, sp, #0
 8005dea:	6078      	str	r0, [r7, #4]
 8005dec:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8005dee:	6878      	ldr	r0, [r7, #4]
 8005df0:	f000 fe0d 	bl	8006a0e <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 8005df4:	4604      	mov	r4, r0
 8005df6:	6838      	ldr	r0, [r7, #0]
 8005df8:	f7fc f86c 	bl	8001ed4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8005dfc:	4603      	mov	r3, r0
 8005dfe:	4619      	mov	r1, r3
 8005e00:	4620      	mov	r0, r4
 8005e02:	f7ff ffd9 	bl	8005db8 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESL_SO_>
				   std::forward<_Variants>(__vars)...);
 8005e06:	462b      	mov	r3, r5
      }
 8005e08:	4618      	mov	r0, r3
 8005e0a:	3708      	adds	r7, #8
 8005e0c:	46bd      	mov	sp, r7
 8005e0e:	bdb0      	pop	{r4, r5, r7, pc}

08005e10 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESO_EEDcOSJ_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8005e10:	b580      	push	{r7, lr}
 8005e12:	b082      	sub	sp, #8
 8005e14:	af00      	add	r7, sp, #0
 8005e16:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8005e18:	6878      	ldr	r0, [r7, #4]
 8005e1a:	f7fc f85b 	bl	8001ed4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8005e1e:	4603      	mov	r3, r0
 8005e20:	4618      	mov	r0, r3
 8005e22:	f7fd fd8f 	bl	8003944 <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8005e26:	4603      	mov	r3, r0
	}
 8005e28:	4618      	mov	r0, r3
 8005e2a:	3708      	adds	r7, #8
 8005e2c:	46bd      	mov	sp, r7
 8005e2e:	bd80      	pop	{r7, pc}

08005e30 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESL_SO_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8005e30:	b5b0      	push	{r4, r5, r7, lr}
 8005e32:	b084      	sub	sp, #16
 8005e34:	af00      	add	r7, sp, #0
 8005e36:	6078      	str	r0, [r7, #4]
 8005e38:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8005e3a:	6878      	ldr	r0, [r7, #4]
 8005e3c:	f000 fde7 	bl	8006a0e <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 8005e40:	4604      	mov	r4, r0
 8005e42:	6838      	ldr	r0, [r7, #0]
 8005e44:	f7fc f846 	bl	8001ed4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8005e48:	4603      	mov	r3, r0
 8005e4a:	4618      	mov	r0, r3
 8005e4c:	f7ff ffe0 	bl	8005e10 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESO_EEDcOSJ_>
 8005e50:	4601      	mov	r1, r0
 8005e52:	f107 030c 	add.w	r3, r7, #12
 8005e56:	461a      	mov	r2, r3
 8005e58:	4620      	mov	r0, r4
 8005e5a:	f000 fe01 	bl	8006a60 <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_JRfSt17integral_constantIjLj1EEEENSt15__invoke_resultISF_JDpT0_EE4typeESG_DpOSN_>
	      integral_constant<size_t, __indices>()...);
 8005e5e:	462b      	mov	r3, r5
      }
 8005e60:	4618      	mov	r0, r3
 8005e62:	3710      	adds	r7, #16
 8005e64:	46bd      	mov	sp, r7
 8005e66:	bdb0      	pop	{r4, r5, r7, pc}

08005e68 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESL_SO_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8005e68:	b5b0      	push	{r4, r5, r7, lr}
 8005e6a:	b082      	sub	sp, #8
 8005e6c:	af00      	add	r7, sp, #0
 8005e6e:	6078      	str	r0, [r7, #4]
 8005e70:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8005e72:	6878      	ldr	r0, [r7, #4]
 8005e74:	f000 fdcb 	bl	8006a0e <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 8005e78:	4604      	mov	r4, r0
 8005e7a:	6838      	ldr	r0, [r7, #0]
 8005e7c:	f7fc f82a 	bl	8001ed4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8005e80:	4603      	mov	r3, r0
 8005e82:	4619      	mov	r1, r3
 8005e84:	4620      	mov	r0, r4
 8005e86:	f7ff ffd3 	bl	8005e30 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESL_SO_>
				   std::forward<_Variants>(__vars)...);
 8005e8a:	462b      	mov	r3, r5
      }
 8005e8c:	4618      	mov	r0, r3
 8005e8e:	3708      	adds	r7, #8
 8005e90:	46bd      	mov	sp, r7
 8005e92:	bdb0      	pop	{r4, r5, r7, pc}

08005e94 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj1EEEE14__visit_invokeESL_SO_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8005e94:	b5b0      	push	{r4, r5, r7, lr}
 8005e96:	b082      	sub	sp, #8
 8005e98:	af00      	add	r7, sp, #0
 8005e9a:	6078      	str	r0, [r7, #4]
 8005e9c:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8005e9e:	6878      	ldr	r0, [r7, #4]
 8005ea0:	f000 fdb5 	bl	8006a0e <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 8005ea4:	4604      	mov	r4, r0
 8005ea6:	6838      	ldr	r0, [r7, #0]
 8005ea8:	f7fc f814 	bl	8001ed4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8005eac:	4603      	mov	r3, r0
 8005eae:	4619      	mov	r1, r3
 8005eb0:	4620      	mov	r0, r4
 8005eb2:	f7ff ffd9 	bl	8005e68 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESL_SO_>
				   std::forward<_Variants>(__vars)...);
 8005eb6:	462b      	mov	r3, r5
      }
 8005eb8:	4618      	mov	r0, r3
 8005eba:	3708      	adds	r7, #8
 8005ebc:	46bd      	mov	sp, r7
 8005ebe:	bdb0      	pop	{r4, r5, r7, pc}

08005ec0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESO_EEDcOSJ_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8005ec0:	b580      	push	{r7, lr}
 8005ec2:	b082      	sub	sp, #8
 8005ec4:	af00      	add	r7, sp, #0
 8005ec6:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8005ec8:	6878      	ldr	r0, [r7, #4]
 8005eca:	f7fc f803 	bl	8001ed4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8005ece:	4603      	mov	r3, r0
 8005ed0:	4618      	mov	r0, r3
 8005ed2:	f7fb fb6b 	bl	80015ac <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8005ed6:	4603      	mov	r3, r0
	}
 8005ed8:	4618      	mov	r0, r3
 8005eda:	3708      	adds	r7, #8
 8005edc:	46bd      	mov	sp, r7
 8005ede:	bd80      	pop	{r7, pc}

08005ee0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESL_SO_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8005ee0:	b5b0      	push	{r4, r5, r7, lr}
 8005ee2:	b084      	sub	sp, #16
 8005ee4:	af00      	add	r7, sp, #0
 8005ee6:	6078      	str	r0, [r7, #4]
 8005ee8:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8005eea:	6878      	ldr	r0, [r7, #4]
 8005eec:	f000 fd8f 	bl	8006a0e <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 8005ef0:	4604      	mov	r4, r0
 8005ef2:	6838      	ldr	r0, [r7, #0]
 8005ef4:	f7fb ffee 	bl	8001ed4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8005ef8:	4603      	mov	r3, r0
 8005efa:	4618      	mov	r0, r3
 8005efc:	f7ff ffe0 	bl	8005ec0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESO_EEDcOSJ_>
 8005f00:	4601      	mov	r1, r0
 8005f02:	f107 030c 	add.w	r3, r7, #12
 8005f06:	461a      	mov	r2, r3
 8005f08:	4620      	mov	r0, r4
 8005f0a:	f000 fdc7 	bl	8006a9c <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_JRbSt17integral_constantIjLj2EEEENSt15__invoke_resultISF_JDpT0_EE4typeESG_DpOSN_>
	      integral_constant<size_t, __indices>()...);
 8005f0e:	462b      	mov	r3, r5
      }
 8005f10:	4618      	mov	r0, r3
 8005f12:	3710      	adds	r7, #16
 8005f14:	46bd      	mov	sp, r7
 8005f16:	bdb0      	pop	{r4, r5, r7, pc}

08005f18 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESL_SO_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8005f18:	b5b0      	push	{r4, r5, r7, lr}
 8005f1a:	b082      	sub	sp, #8
 8005f1c:	af00      	add	r7, sp, #0
 8005f1e:	6078      	str	r0, [r7, #4]
 8005f20:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8005f22:	6878      	ldr	r0, [r7, #4]
 8005f24:	f000 fd73 	bl	8006a0e <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 8005f28:	4604      	mov	r4, r0
 8005f2a:	6838      	ldr	r0, [r7, #0]
 8005f2c:	f7fb ffd2 	bl	8001ed4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8005f30:	4603      	mov	r3, r0
 8005f32:	4619      	mov	r1, r3
 8005f34:	4620      	mov	r0, r4
 8005f36:	f7ff ffd3 	bl	8005ee0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESL_SO_>
				   std::forward<_Variants>(__vars)...);
 8005f3a:	462b      	mov	r3, r5
      }
 8005f3c:	4618      	mov	r0, r3
 8005f3e:	3708      	adds	r7, #8
 8005f40:	46bd      	mov	sp, r7
 8005f42:	bdb0      	pop	{r4, r5, r7, pc}

08005f44 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj2EEEE14__visit_invokeESL_SO_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8005f44:	b5b0      	push	{r4, r5, r7, lr}
 8005f46:	b082      	sub	sp, #8
 8005f48:	af00      	add	r7, sp, #0
 8005f4a:	6078      	str	r0, [r7, #4]
 8005f4c:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8005f4e:	6878      	ldr	r0, [r7, #4]
 8005f50:	f000 fd5d 	bl	8006a0e <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 8005f54:	4604      	mov	r4, r0
 8005f56:	6838      	ldr	r0, [r7, #0]
 8005f58:	f7fb ffbc 	bl	8001ed4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8005f5c:	4603      	mov	r3, r0
 8005f5e:	4619      	mov	r1, r3
 8005f60:	4620      	mov	r0, r4
 8005f62:	f7ff ffd9 	bl	8005f18 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESL_SO_>
				   std::forward<_Variants>(__vars)...);
 8005f66:	462b      	mov	r3, r5
      }
 8005f68:	4618      	mov	r0, r3
 8005f6a:	3708      	adds	r7, #8
 8005f6c:	46bd      	mov	sp, r7
 8005f6e:	bdb0      	pop	{r4, r5, r7, pc}

08005f70 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESO_EEDcOSJ_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8005f70:	b580      	push	{r7, lr}
 8005f72:	b082      	sub	sp, #8
 8005f74:	af00      	add	r7, sp, #0
 8005f76:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8005f78:	6878      	ldr	r0, [r7, #4]
 8005f7a:	f7fb ffab 	bl	8001ed4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8005f7e:	4603      	mov	r3, r0
 8005f80:	4618      	mov	r0, r3
 8005f82:	f7fd fde3 	bl	8003b4c <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8005f86:	4603      	mov	r3, r0
	}
 8005f88:	4618      	mov	r0, r3
 8005f8a:	3708      	adds	r7, #8
 8005f8c:	46bd      	mov	sp, r7
 8005f8e:	bd80      	pop	{r7, pc}

08005f90 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESL_SO_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8005f90:	b5b0      	push	{r4, r5, r7, lr}
 8005f92:	b084      	sub	sp, #16
 8005f94:	af00      	add	r7, sp, #0
 8005f96:	6078      	str	r0, [r7, #4]
 8005f98:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8005f9a:	6878      	ldr	r0, [r7, #4]
 8005f9c:	f000 fd37 	bl	8006a0e <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 8005fa0:	4604      	mov	r4, r0
 8005fa2:	6838      	ldr	r0, [r7, #0]
 8005fa4:	f7fb ff96 	bl	8001ed4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8005fa8:	4603      	mov	r3, r0
 8005faa:	4618      	mov	r0, r3
 8005fac:	f7ff ffe0 	bl	8005f70 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESO_EEDcOSJ_>
 8005fb0:	4601      	mov	r1, r0
 8005fb2:	f107 030c 	add.w	r3, r7, #12
 8005fb6:	461a      	mov	r2, r3
 8005fb8:	4620      	mov	r0, r4
 8005fba:	f000 fd8d 	bl	8006ad8 <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_JRS8_St17integral_constantIjLj3EEEENSt15__invoke_resultISF_JDpT0_EE4typeESG_DpOSN_>
	      integral_constant<size_t, __indices>()...);
 8005fbe:	462b      	mov	r3, r5
      }
 8005fc0:	4618      	mov	r0, r3
 8005fc2:	3710      	adds	r7, #16
 8005fc4:	46bd      	mov	sp, r7
 8005fc6:	bdb0      	pop	{r4, r5, r7, pc}

08005fc8 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESL_SO_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8005fc8:	b5b0      	push	{r4, r5, r7, lr}
 8005fca:	b082      	sub	sp, #8
 8005fcc:	af00      	add	r7, sp, #0
 8005fce:	6078      	str	r0, [r7, #4]
 8005fd0:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8005fd2:	6878      	ldr	r0, [r7, #4]
 8005fd4:	f000 fd1b 	bl	8006a0e <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 8005fd8:	4604      	mov	r4, r0
 8005fda:	6838      	ldr	r0, [r7, #0]
 8005fdc:	f7fb ff7a 	bl	8001ed4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8005fe0:	4603      	mov	r3, r0
 8005fe2:	4619      	mov	r1, r3
 8005fe4:	4620      	mov	r0, r4
 8005fe6:	f7ff ffd3 	bl	8005f90 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESL_SO_>
				   std::forward<_Variants>(__vars)...);
 8005fea:	462b      	mov	r3, r5
      }
 8005fec:	4618      	mov	r0, r3
 8005fee:	3708      	adds	r7, #8
 8005ff0:	46bd      	mov	sp, r7
 8005ff2:	bdb0      	pop	{r4, r5, r7, pc}

08005ff4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj3EEEE14__visit_invokeESL_SO_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8005ff4:	b5b0      	push	{r4, r5, r7, lr}
 8005ff6:	b082      	sub	sp, #8
 8005ff8:	af00      	add	r7, sp, #0
 8005ffa:	6078      	str	r0, [r7, #4]
 8005ffc:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8005ffe:	6878      	ldr	r0, [r7, #4]
 8006000:	f000 fd05 	bl	8006a0e <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 8006004:	4604      	mov	r4, r0
 8006006:	6838      	ldr	r0, [r7, #0]
 8006008:	f7fb ff64 	bl	8001ed4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800600c:	4603      	mov	r3, r0
 800600e:	4619      	mov	r1, r3
 8006010:	4620      	mov	r0, r4
 8006012:	f7ff ffd9 	bl	8005fc8 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESL_SO_>
				   std::forward<_Variants>(__vars)...);
 8006016:	462b      	mov	r3, r5
      }
 8006018:	4618      	mov	r0, r3
 800601a:	3708      	adds	r7, #8
 800601c:	46bd      	mov	sp, r7
 800601e:	bdb0      	pop	{r4, r5, r7, pc}

08006020 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj4EEEE28__element_by_index_or_cookieILj4ESO_EEDcOSJ_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8006020:	b580      	push	{r7, lr}
 8006022:	b082      	sub	sp, #8
 8006024:	af00      	add	r7, sp, #0
 8006026:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8006028:	6878      	ldr	r0, [r7, #4]
 800602a:	f7fb ff53 	bl	8001ed4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800602e:	4603      	mov	r3, r0
 8006030:	4618      	mov	r0, r3
 8006032:	f7fd fe4b 	bl	8003ccc <_ZNSt8__detail9__variant5__getILj4ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8006036:	4603      	mov	r3, r0
	}
 8006038:	4618      	mov	r0, r3
 800603a:	3708      	adds	r7, #8
 800603c:	46bd      	mov	sp, r7
 800603e:	bd80      	pop	{r7, pc}

08006040 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj4EEEE19__visit_invoke_implESL_SO_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8006040:	b5b0      	push	{r4, r5, r7, lr}
 8006042:	b084      	sub	sp, #16
 8006044:	af00      	add	r7, sp, #0
 8006046:	6078      	str	r0, [r7, #4]
 8006048:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 800604a:	6878      	ldr	r0, [r7, #4]
 800604c:	f000 fcdf 	bl	8006a0e <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 8006050:	4604      	mov	r4, r0
 8006052:	6838      	ldr	r0, [r7, #0]
 8006054:	f7fb ff3e 	bl	8001ed4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8006058:	4603      	mov	r3, r0
 800605a:	4618      	mov	r0, r3
 800605c:	f7ff ffe0 	bl	8006020 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj4EEEE28__element_by_index_or_cookieILj4ESO_EEDcOSJ_>
 8006060:	4601      	mov	r1, r0
 8006062:	f107 030c 	add.w	r3, r7, #12
 8006066:	461a      	mov	r2, r3
 8006068:	4620      	mov	r0, r4
 800606a:	f000 fd53 	bl	8006b14 <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_JRSC_St17integral_constantIjLj4EEEENSt15__invoke_resultISF_JDpT0_EE4typeESG_DpOSN_>
	      integral_constant<size_t, __indices>()...);
 800606e:	462b      	mov	r3, r5
      }
 8006070:	4618      	mov	r0, r3
 8006072:	3710      	adds	r7, #16
 8006074:	46bd      	mov	sp, r7
 8006076:	bdb0      	pop	{r4, r5, r7, pc}

08006078 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj4EEEE17__do_visit_invokeESL_SO_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8006078:	b5b0      	push	{r4, r5, r7, lr}
 800607a:	b082      	sub	sp, #8
 800607c:	af00      	add	r7, sp, #0
 800607e:	6078      	str	r0, [r7, #4]
 8006080:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8006082:	6878      	ldr	r0, [r7, #4]
 8006084:	f000 fcc3 	bl	8006a0e <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 8006088:	4604      	mov	r4, r0
 800608a:	6838      	ldr	r0, [r7, #0]
 800608c:	f7fb ff22 	bl	8001ed4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8006090:	4603      	mov	r3, r0
 8006092:	4619      	mov	r1, r3
 8006094:	4620      	mov	r0, r4
 8006096:	f7ff ffd3 	bl	8006040 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj4EEEE19__visit_invoke_implESL_SO_>
				   std::forward<_Variants>(__vars)...);
 800609a:	462b      	mov	r3, r5
      }
 800609c:	4618      	mov	r0, r3
 800609e:	3708      	adds	r7, #8
 80060a0:	46bd      	mov	sp, r7
 80060a2:	bdb0      	pop	{r4, r5, r7, pc}

080060a4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj4EEEE14__visit_invokeESL_SO_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80060a4:	b5b0      	push	{r4, r5, r7, lr}
 80060a6:	b082      	sub	sp, #8
 80060a8:	af00      	add	r7, sp, #0
 80060aa:	6078      	str	r0, [r7, #4]
 80060ac:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 80060ae:	6878      	ldr	r0, [r7, #4]
 80060b0:	f000 fcad 	bl	8006a0e <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 80060b4:	4604      	mov	r4, r0
 80060b6:	6838      	ldr	r0, [r7, #0]
 80060b8:	f7fb ff0c 	bl	8001ed4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 80060bc:	4603      	mov	r3, r0
 80060be:	4619      	mov	r1, r3
 80060c0:	4620      	mov	r0, r4
 80060c2:	f7ff ffd9 	bl	8006078 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj4EEEE17__do_visit_invokeESL_SO_>
				   std::forward<_Variants>(__vars)...);
 80060c6:	462b      	mov	r3, r5
      }
 80060c8:	4618      	mov	r0, r3
 80060ca:	3708      	adds	r7, #8
 80060cc:	46bd      	mov	sp, r7
 80060ce:	bdb0      	pop	{r4, r5, r7, pc}

080060d0 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSEOSE_EUlOT_T0_E_RSt7variantIJifbS9_SD_EEEJLj5EEE9_M_accessIJEEERKSP_jDpT_>:
	_M_access(size_t __first_index, _Args... __rest_indices) const
 80060d0:	b580      	push	{r7, lr}
 80060d2:	b082      	sub	sp, #8
 80060d4:	af00      	add	r7, sp, #0
 80060d6:	6078      	str	r0, [r7, #4]
 80060d8:	6039      	str	r1, [r7, #0]
	    ._M_access(__rest_indices...);
 80060da:	683b      	ldr	r3, [r7, #0]
 80060dc:	009b      	lsls	r3, r3, #2
 80060de:	687a      	ldr	r2, [r7, #4]
 80060e0:	4413      	add	r3, r2
 80060e2:	4618      	mov	r0, r3
 80060e4:	f000 fd34 	bl	8006b50 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSEOSE_EUlOT_T0_E_RSt7variantIJifbS9_SD_EEEJEE9_M_accessEv>
 80060e8:	4603      	mov	r3, r0
	}
 80060ea:	4618      	mov	r0, r3
 80060ec:	3708      	adds	r7, #8
 80060ee:	46bd      	mov	sp, r7
 80060f0:	bd80      	pop	{r7, pc}
	...

080060f4 <_ZSt10__do_visitILb1ELb1EZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_JRSt7variantIJifbS8_SC_EEEEDcOT1_DpOT2_>:
    __do_visit(_Visitor&& __visitor, _Variants&&... __variants)
 80060f4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80060f6:	b085      	sub	sp, #20
 80060f8:	af00      	add	r7, sp, #0
 80060fa:	6078      	str	r0, [r7, #4]
 80060fc:	6039      	str	r1, [r7, #0]
      constexpr auto& __vtable = __detail::__variant::__gen_vtable<
 80060fe:	4b0f      	ldr	r3, [pc, #60]	; (800613c <_ZSt10__do_visitILb1ELb1EZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_JRSt7variantIJifbS8_SC_EEEEDcOT1_DpOT2_+0x48>)
 8006100:	60fb      	str	r3, [r7, #12]
      auto __func_ptr = __vtable._M_access(__variants.index()...);
 8006102:	6838      	ldr	r0, [r7, #0]
 8006104:	f7fb fa0a 	bl	800151c <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv>
 8006108:	4603      	mov	r3, r0
 800610a:	4619      	mov	r1, r3
 800610c:	68f8      	ldr	r0, [r7, #12]
 800610e:	f7ff ffdf 	bl	80060d0 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSEOSE_EUlOT_T0_E_RSt7variantIJifbS9_SD_EEEJLj5EEE9_M_accessIJEEERKSP_jDpT_>
 8006112:	4603      	mov	r3, r0
 8006114:	681b      	ldr	r3, [r3, #0]
 8006116:	60bb      	str	r3, [r7, #8]
      return (*__func_ptr)(std::forward<_Visitor>(__visitor),
 8006118:	68bc      	ldr	r4, [r7, #8]
 800611a:	6878      	ldr	r0, [r7, #4]
 800611c:	f000 fd23 	bl	8006b66 <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 8006120:	4605      	mov	r5, r0
 8006122:	6838      	ldr	r0, [r7, #0]
 8006124:	f7fb fed6 	bl	8001ed4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8006128:	4603      	mov	r3, r0
 800612a:	4619      	mov	r1, r3
 800612c:	4628      	mov	r0, r5
 800612e:	47a0      	blx	r4
			   std::forward<_Variants>(__variants)...);
 8006130:	4633      	mov	r3, r6
    }
 8006132:	4618      	mov	r0, r3
 8006134:	3714      	adds	r7, #20
 8006136:	46bd      	mov	sp, r7
 8006138:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800613a:	bf00      	nop
 800613c:	080281f8 	.word	0x080281f8

08006140 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_>:
      operator=(_Move_assign_base&& __rhs)
 8006140:	b580      	push	{r7, lr}
 8006142:	b084      	sub	sp, #16
 8006144:	af00      	add	r7, sp, #0
 8006146:	6078      	str	r0, [r7, #4]
 8006148:	6039      	str	r1, [r7, #0]
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800614a:	687b      	ldr	r3, [r7, #4]
 800614c:	60fb      	str	r3, [r7, #12]
 800614e:	6838      	ldr	r0, [r7, #0]
 8006150:	f7ff fdfb 	bl	8005d4a <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEERNSt8__detail9__variant17_Move_assign_baseILb0EJifbS5_S9_EEEEDcOT0_>
 8006154:	4602      	mov	r2, r0
 8006156:	f107 030c 	add.w	r3, r7, #12
 800615a:	4611      	mov	r1, r2
 800615c:	4618      	mov	r0, r3
 800615e:	f7ff ffc9 	bl	80060f4 <_ZSt10__do_visitILb1ELb1EZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_JRSt7variantIJifbS8_SC_EEEEDcOT1_DpOT2_>
	return *this;
 8006162:	687b      	ldr	r3, [r7, #4]
      }
 8006164:	4618      	mov	r0, r3
 8006166:	3710      	adds	r7, #16
 8006168:	46bd      	mov	sp, r7
 800616a:	bd80      	pop	{r7, pc}

0800616c <_ZN9__gnu_cxx14__alloc_traitsISaI6SymbolES1_E27_S_propagate_on_copy_assignEv>:
    static constexpr bool _S_propagate_on_copy_assign()
 800616c:	b480      	push	{r7}
 800616e:	af00      	add	r7, sp, #0
    { return _Base_type::propagate_on_container_copy_assignment::value; }
 8006170:	2300      	movs	r3, #0
 8006172:	4618      	mov	r0, r3
 8006174:	46bd      	mov	sp, r7
 8006176:	f85d 7b04 	ldr.w	r7, [sp], #4
 800617a:	4770      	bx	lr

0800617c <_ZNSt6vectorI6SymbolSaIS0_EEaSERKS2_>:
      return __first;
    }

  template<typename _Tp, typename _Alloc>
    vector<_Tp, _Alloc>&
    vector<_Tp, _Alloc>::
 800617c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800617e:	b085      	sub	sp, #20
 8006180:	af00      	add	r7, sp, #0
 8006182:	6078      	str	r0, [r7, #4]
 8006184:	6039      	str	r1, [r7, #0]
    operator=(const vector<_Tp, _Alloc>& __x)
    {
      if (&__x != this)
 8006186:	683a      	ldr	r2, [r7, #0]
 8006188:	687b      	ldr	r3, [r7, #4]
 800618a:	429a      	cmp	r2, r3
 800618c:	f000 80e6 	beq.w	800635c <_ZNSt6vectorI6SymbolSaIS0_EEaSERKS2_+0x1e0>
	{
	  _GLIBCXX_ASAN_ANNOTATE_REINIT;
#if __cplusplus >= 201103L
	  if (_Alloc_traits::_S_propagate_on_copy_assign())
 8006190:	f7ff ffec 	bl	800616c <_ZN9__gnu_cxx14__alloc_traitsISaI6SymbolES1_E27_S_propagate_on_copy_assignEv>
 8006194:	4603      	mov	r3, r0
 8006196:	2b00      	cmp	r3, #0
 8006198:	d043      	beq.n	8006222 <_ZNSt6vectorI6SymbolSaIS0_EEaSERKS2_+0xa6>
	    {
	      if (!_Alloc_traits::_S_always_equal()
 800619a:	f7fb f875 	bl	8001288 <_ZN9__gnu_cxx14__alloc_traitsISaI6SymbolES1_E15_S_always_equalEv>
 800619e:	4603      	mov	r3, r0
 80061a0:	f083 0301 	eor.w	r3, r3, #1
 80061a4:	b2db      	uxtb	r3, r3
	          && _M_get_Tp_allocator() != __x._M_get_Tp_allocator())
 80061a6:	2b00      	cmp	r3, #0
 80061a8:	d012      	beq.n	80061d0 <_ZNSt6vectorI6SymbolSaIS0_EEaSERKS2_+0x54>
 80061aa:	687b      	ldr	r3, [r7, #4]
 80061ac:	4618      	mov	r0, r3
 80061ae:	f000 fce5 	bl	8006b7c <_ZNSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 80061b2:	4604      	mov	r4, r0
 80061b4:	683b      	ldr	r3, [r7, #0]
 80061b6:	4618      	mov	r0, r3
 80061b8:	f000 fceb 	bl	8006b92 <_ZNKSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 80061bc:	4603      	mov	r3, r0
 80061be:	4619      	mov	r1, r3
 80061c0:	4620      	mov	r0, r4
 80061c2:	f000 fcf1 	bl	8006ba8 <_ZStneRKSaI6SymbolES2_>
 80061c6:	4603      	mov	r3, r0
 80061c8:	2b00      	cmp	r3, #0
 80061ca:	d001      	beq.n	80061d0 <_ZNSt6vectorI6SymbolSaIS0_EEaSERKS2_+0x54>
 80061cc:	2301      	movs	r3, #1
 80061ce:	e000      	b.n	80061d2 <_ZNSt6vectorI6SymbolSaIS0_EEaSERKS2_+0x56>
 80061d0:	2300      	movs	r3, #0
	      if (!_Alloc_traits::_S_always_equal()
 80061d2:	2b00      	cmp	r3, #0
 80061d4:	d017      	beq.n	8006206 <_ZNSt6vectorI6SymbolSaIS0_EEaSERKS2_+0x8a>
	        {
		  // replacement allocator cannot free existing storage
		  this->clear();
 80061d6:	6878      	ldr	r0, [r7, #4]
 80061d8:	f000 fcf2 	bl	8006bc0 <_ZNSt6vectorI6SymbolSaIS0_EE5clearEv>
		  _M_deallocate(this->_M_impl._M_start,
 80061dc:	6878      	ldr	r0, [r7, #4]
 80061de:	687b      	ldr	r3, [r7, #4]
 80061e0:	6819      	ldr	r1, [r3, #0]
				this->_M_impl._M_end_of_storage
 80061e2:	687b      	ldr	r3, [r7, #4]
 80061e4:	689a      	ldr	r2, [r3, #8]
				- this->_M_impl._M_start);
 80061e6:	687b      	ldr	r3, [r7, #4]
 80061e8:	681b      	ldr	r3, [r3, #0]
 80061ea:	1ad3      	subs	r3, r2, r3
 80061ec:	115b      	asrs	r3, r3, #5
		  _M_deallocate(this->_M_impl._M_start,
 80061ee:	461a      	mov	r2, r3
 80061f0:	f000 fcf4 	bl	8006bdc <_ZNSt12_Vector_baseI6SymbolSaIS0_EE13_M_deallocateEPS0_j>
		  this->_M_impl._M_start = nullptr;
 80061f4:	687b      	ldr	r3, [r7, #4]
 80061f6:	2200      	movs	r2, #0
 80061f8:	601a      	str	r2, [r3, #0]
		  this->_M_impl._M_finish = nullptr;
 80061fa:	687b      	ldr	r3, [r7, #4]
 80061fc:	2200      	movs	r2, #0
 80061fe:	605a      	str	r2, [r3, #4]
		  this->_M_impl._M_end_of_storage = nullptr;
 8006200:	687b      	ldr	r3, [r7, #4]
 8006202:	2200      	movs	r2, #0
 8006204:	609a      	str	r2, [r3, #8]
		}
	      std::__alloc_on_copy(_M_get_Tp_allocator(),
 8006206:	687b      	ldr	r3, [r7, #4]
 8006208:	4618      	mov	r0, r3
 800620a:	f000 fcb7 	bl	8006b7c <_ZNSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 800620e:	4604      	mov	r4, r0
 8006210:	683b      	ldr	r3, [r7, #0]
 8006212:	4618      	mov	r0, r3
 8006214:	f000 fcbd 	bl	8006b92 <_ZNKSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 8006218:	4603      	mov	r3, r0
 800621a:	4619      	mov	r1, r3
 800621c:	4620      	mov	r0, r4
 800621e:	f000 fcf0 	bl	8006c02 <_ZSt15__alloc_on_copyISaI6SymbolEEvRT_RKS2_>
				   __x._M_get_Tp_allocator());
	    }
#endif
	  const size_type __xlen = __x.size();
 8006222:	6838      	ldr	r0, [r7, #0]
 8006224:	f000 fcfb 	bl	8006c1e <_ZNKSt6vectorI6SymbolSaIS0_EE4sizeEv>
 8006228:	60f8      	str	r0, [r7, #12]
	  if (__xlen > capacity())
 800622a:	6878      	ldr	r0, [r7, #4]
 800622c:	f000 fd07 	bl	8006c3e <_ZNKSt6vectorI6SymbolSaIS0_EE8capacityEv>
 8006230:	4602      	mov	r2, r0
 8006232:	68fb      	ldr	r3, [r7, #12]
 8006234:	4293      	cmp	r3, r2
 8006236:	bf8c      	ite	hi
 8006238:	2301      	movhi	r3, #1
 800623a:	2300      	movls	r3, #0
 800623c:	b2db      	uxtb	r3, r3
 800623e:	2b00      	cmp	r3, #0
 8006240:	d032      	beq.n	80062a8 <_ZNSt6vectorI6SymbolSaIS0_EEaSERKS2_+0x12c>
	    {
	      pointer __tmp = _M_allocate_and_copy(__xlen, __x.begin(),
 8006242:	6838      	ldr	r0, [r7, #0]
 8006244:	f000 fd0b 	bl	8006c5e <_ZNKSt6vectorI6SymbolSaIS0_EE5beginEv>
 8006248:	4604      	mov	r4, r0
 800624a:	6838      	ldr	r0, [r7, #0]
 800624c:	f000 fd1b 	bl	8006c86 <_ZNKSt6vectorI6SymbolSaIS0_EE3endEv>
 8006250:	4603      	mov	r3, r0
 8006252:	4622      	mov	r2, r4
 8006254:	68f9      	ldr	r1, [r7, #12]
 8006256:	6878      	ldr	r0, [r7, #4]
 8006258:	f000 fd29 	bl	8006cae <_ZNSt6vectorI6SymbolSaIS0_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS0_S2_EEEEPS0_jT_SA_>
 800625c:	60b8      	str	r0, [r7, #8]
						   __x.end());
	      std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 800625e:	687b      	ldr	r3, [r7, #4]
 8006260:	681c      	ldr	r4, [r3, #0]
 8006262:	687b      	ldr	r3, [r7, #4]
 8006264:	685d      	ldr	r5, [r3, #4]
			    _M_get_Tp_allocator());
 8006266:	687b      	ldr	r3, [r7, #4]
 8006268:	4618      	mov	r0, r3
 800626a:	f000 fc87 	bl	8006b7c <_ZNSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 800626e:	4603      	mov	r3, r0
	      std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 8006270:	461a      	mov	r2, r3
 8006272:	4629      	mov	r1, r5
 8006274:	4620      	mov	r0, r4
 8006276:	f000 fd36 	bl	8006ce6 <_ZSt8_DestroyIP6SymbolS0_EvT_S2_RSaIT0_E>
	      _M_deallocate(this->_M_impl._M_start,
 800627a:	6878      	ldr	r0, [r7, #4]
 800627c:	687b      	ldr	r3, [r7, #4]
 800627e:	6819      	ldr	r1, [r3, #0]
			    this->_M_impl._M_end_of_storage
 8006280:	687b      	ldr	r3, [r7, #4]
 8006282:	689a      	ldr	r2, [r3, #8]
			    - this->_M_impl._M_start);
 8006284:	687b      	ldr	r3, [r7, #4]
 8006286:	681b      	ldr	r3, [r3, #0]
 8006288:	1ad3      	subs	r3, r2, r3
 800628a:	115b      	asrs	r3, r3, #5
	      _M_deallocate(this->_M_impl._M_start,
 800628c:	461a      	mov	r2, r3
 800628e:	f000 fca5 	bl	8006bdc <_ZNSt12_Vector_baseI6SymbolSaIS0_EE13_M_deallocateEPS0_j>
	      this->_M_impl._M_start = __tmp;
 8006292:	687b      	ldr	r3, [r7, #4]
 8006294:	68ba      	ldr	r2, [r7, #8]
 8006296:	601a      	str	r2, [r3, #0]
	      this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __xlen;
 8006298:	687b      	ldr	r3, [r7, #4]
 800629a:	681a      	ldr	r2, [r3, #0]
 800629c:	68fb      	ldr	r3, [r7, #12]
 800629e:	015b      	lsls	r3, r3, #5
 80062a0:	441a      	add	r2, r3
 80062a2:	687b      	ldr	r3, [r7, #4]
 80062a4:	609a      	str	r2, [r3, #8]
 80062a6:	e052      	b.n	800634e <_ZNSt6vectorI6SymbolSaIS0_EEaSERKS2_+0x1d2>
	    }
	  else if (size() >= __xlen)
 80062a8:	6878      	ldr	r0, [r7, #4]
 80062aa:	f000 fcb8 	bl	8006c1e <_ZNKSt6vectorI6SymbolSaIS0_EE4sizeEv>
 80062ae:	4602      	mov	r2, r0
 80062b0:	68fb      	ldr	r3, [r7, #12]
 80062b2:	4293      	cmp	r3, r2
 80062b4:	bf94      	ite	ls
 80062b6:	2301      	movls	r3, #1
 80062b8:	2300      	movhi	r3, #0
 80062ba:	b2db      	uxtb	r3, r3
 80062bc:	2b00      	cmp	r3, #0
 80062be:	d020      	beq.n	8006302 <_ZNSt6vectorI6SymbolSaIS0_EEaSERKS2_+0x186>
	    {
	      std::_Destroy(std::copy(__x.begin(), __x.end(), begin()),
 80062c0:	6838      	ldr	r0, [r7, #0]
 80062c2:	f000 fccc 	bl	8006c5e <_ZNKSt6vectorI6SymbolSaIS0_EE5beginEv>
 80062c6:	4604      	mov	r4, r0
 80062c8:	6838      	ldr	r0, [r7, #0]
 80062ca:	f000 fcdc 	bl	8006c86 <_ZNKSt6vectorI6SymbolSaIS0_EE3endEv>
 80062ce:	4605      	mov	r5, r0
 80062d0:	6878      	ldr	r0, [r7, #4]
 80062d2:	f000 fd16 	bl	8006d02 <_ZNSt6vectorI6SymbolSaIS0_EE5beginEv>
 80062d6:	4603      	mov	r3, r0
 80062d8:	461a      	mov	r2, r3
 80062da:	4629      	mov	r1, r5
 80062dc:	4620      	mov	r0, r4
 80062de:	f000 fd20 	bl	8006d22 <_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET0_T_SC_SB_>
 80062e2:	4604      	mov	r4, r0
 80062e4:	6878      	ldr	r0, [r7, #4]
 80062e6:	f000 fd34 	bl	8006d52 <_ZNSt6vectorI6SymbolSaIS0_EE3endEv>
 80062ea:	4605      	mov	r5, r0
			    end(), _M_get_Tp_allocator());
 80062ec:	687b      	ldr	r3, [r7, #4]
 80062ee:	4618      	mov	r0, r3
 80062f0:	f000 fc44 	bl	8006b7c <_ZNSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 80062f4:	4603      	mov	r3, r0
	      std::_Destroy(std::copy(__x.begin(), __x.end(), begin()),
 80062f6:	461a      	mov	r2, r3
 80062f8:	4629      	mov	r1, r5
 80062fa:	4620      	mov	r0, r4
 80062fc:	f000 fd3a 	bl	8006d74 <_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS2_SaIS2_EEEES2_EvT_S8_RSaIT0_E>
 8006300:	e025      	b.n	800634e <_ZNSt6vectorI6SymbolSaIS0_EEaSERKS2_+0x1d2>
	    }
	  else
	    {
	      std::copy(__x._M_impl._M_start, __x._M_impl._M_start + size(),
 8006302:	683b      	ldr	r3, [r7, #0]
 8006304:	681d      	ldr	r5, [r3, #0]
 8006306:	683b      	ldr	r3, [r7, #0]
 8006308:	681c      	ldr	r4, [r3, #0]
 800630a:	6878      	ldr	r0, [r7, #4]
 800630c:	f000 fc87 	bl	8006c1e <_ZNKSt6vectorI6SymbolSaIS0_EE4sizeEv>
 8006310:	4603      	mov	r3, r0
 8006312:	015b      	lsls	r3, r3, #5
 8006314:	18e1      	adds	r1, r4, r3
 8006316:	687b      	ldr	r3, [r7, #4]
 8006318:	681b      	ldr	r3, [r3, #0]
 800631a:	461a      	mov	r2, r3
 800631c:	4628      	mov	r0, r5
 800631e:	f000 fd37 	bl	8006d90 <_ZSt4copyIP6SymbolS1_ET0_T_S3_S2_>
			this->_M_impl._M_start);
	      std::__uninitialized_copy_a(__x._M_impl._M_start + size(),
 8006322:	683b      	ldr	r3, [r7, #0]
 8006324:	681c      	ldr	r4, [r3, #0]
 8006326:	6878      	ldr	r0, [r7, #4]
 8006328:	f000 fc79 	bl	8006c1e <_ZNKSt6vectorI6SymbolSaIS0_EE4sizeEv>
 800632c:	4603      	mov	r3, r0
 800632e:	015b      	lsls	r3, r3, #5
 8006330:	441c      	add	r4, r3
					  __x._M_impl._M_finish,
 8006332:	683b      	ldr	r3, [r7, #0]
 8006334:	685d      	ldr	r5, [r3, #4]
	      std::__uninitialized_copy_a(__x._M_impl._M_start + size(),
 8006336:	687b      	ldr	r3, [r7, #4]
 8006338:	685e      	ldr	r6, [r3, #4]
					  this->_M_impl._M_finish,
					  _M_get_Tp_allocator());
 800633a:	687b      	ldr	r3, [r7, #4]
 800633c:	4618      	mov	r0, r3
 800633e:	f000 fc1d 	bl	8006b7c <_ZNSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 8006342:	4603      	mov	r3, r0
	      std::__uninitialized_copy_a(__x._M_impl._M_start + size(),
 8006344:	4632      	mov	r2, r6
 8006346:	4629      	mov	r1, r5
 8006348:	4620      	mov	r0, r4
 800634a:	f000 fd39 	bl	8006dc0 <_ZSt22__uninitialized_copy_aIP6SymbolS1_S0_ET0_T_S3_S2_RSaIT1_E>
	    }
	  this->_M_impl._M_finish = this->_M_impl._M_start + __xlen;
 800634e:	687b      	ldr	r3, [r7, #4]
 8006350:	681a      	ldr	r2, [r3, #0]
 8006352:	68fb      	ldr	r3, [r7, #12]
 8006354:	015b      	lsls	r3, r3, #5
 8006356:	441a      	add	r2, r3
 8006358:	687b      	ldr	r3, [r7, #4]
 800635a:	605a      	str	r2, [r3, #4]
	}
      return *this;
 800635c:	687b      	ldr	r3, [r7, #4]
    }
 800635e:	4618      	mov	r0, r3
 8006360:	3714      	adds	r7, #20
 8006362:	46bd      	mov	sp, r7
 8006364:	bdf0      	pop	{r4, r5, r6, r7, pc}

08006366 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1ILj4EJRKS9_ES9_vEESt16in_place_index_tIXT_EEDpOT0_>:
	variant(in_place_index_t<_Np>, _Args&&... __args)
 8006366:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006368:	b085      	sub	sp, #20
 800636a:	af00      	add	r7, sp, #0
 800636c:	60f8      	str	r0, [r7, #12]
 800636e:	7239      	strb	r1, [r7, #8]
 8006370:	607a      	str	r2, [r7, #4]
	_Default_ctor_enabler(_Enable_default_constructor_tag{})
 8006372:	68fc      	ldr	r4, [r7, #12]
 8006374:	6878      	ldr	r0, [r7, #4]
 8006376:	f7fd fe51 	bl	800401c <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>
 800637a:	4603      	mov	r3, r0
 800637c:	461a      	mov	r2, r3
 800637e:	4631      	mov	r1, r6
 8006380:	4620      	mov	r0, r4
 8006382:	f000 fd72 	bl	8006e6a <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj4EJRKSB_EEESt16in_place_index_tIXT_EEDpOT0_>
 8006386:	4629      	mov	r1, r5
 8006388:	68f8      	ldr	r0, [r7, #12]
 800638a:	f000 fb34 	bl	80069f6 <_ZNSt27_Enable_default_constructorILb1ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEC1ESt31_Enable_default_constructor_tag>
	{ }
 800638e:	68fb      	ldr	r3, [r7, #12]
 8006390:	4618      	mov	r0, r3
 8006392:	3714      	adds	r7, #20
 8006394:	46bd      	mov	sp, r7
 8006396:	bdf0      	pop	{r4, r5, r6, r7, pc}

08006398 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1IRKS9_vvS9_vEEOT_>:
	variant(_Tp&& __t)
 8006398:	b590      	push	{r4, r7, lr}
 800639a:	b083      	sub	sp, #12
 800639c:	af00      	add	r7, sp, #0
 800639e:	6078      	str	r0, [r7, #4]
 80063a0:	6039      	str	r1, [r7, #0]
		  std::forward<_Tp>(__t))
 80063a2:	6838      	ldr	r0, [r7, #0]
 80063a4:	f7fd fe3a 	bl	800401c <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>
 80063a8:	4603      	mov	r3, r0
 80063aa:	461a      	mov	r2, r3
 80063ac:	4621      	mov	r1, r4
 80063ae:	6878      	ldr	r0, [r7, #4]
 80063b0:	f7ff ffd9 	bl	8006366 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1ILj4EJRKS9_ES9_vEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 80063b4:	687b      	ldr	r3, [r7, #4]
 80063b6:	4618      	mov	r0, r3
 80063b8:	370c      	adds	r7, #12
 80063ba:	46bd      	mov	sp, r7
 80063bc:	bd90      	pop	{r4, r7, pc}

080063be <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE21_M_get_Node_allocatorEv>:
      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
 80063be:	b480      	push	{r7}
 80063c0:	b083      	sub	sp, #12
 80063c2:	af00      	add	r7, sp, #0
 80063c4:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 80063c6:	687b      	ldr	r3, [r7, #4]
 80063c8:	4618      	mov	r0, r3
 80063ca:	370c      	adds	r7, #12
 80063cc:	46bd      	mov	sp, r7
 80063ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80063d2:	4770      	bx	lr

080063d4 <_ZNSt13_Rb_tree_nodeISt4pairIKc10token_typeEE9_M_valptrEv>:
      _M_valptr()
 80063d4:	b580      	push	{r7, lr}
 80063d6:	b082      	sub	sp, #8
 80063d8:	af00      	add	r7, sp, #0
 80063da:	6078      	str	r0, [r7, #4]
      { return _M_storage._M_ptr(); }
 80063dc:	687b      	ldr	r3, [r7, #4]
 80063de:	3310      	adds	r3, #16
 80063e0:	4618      	mov	r0, r3
 80063e2:	f000 fd57 	bl	8006e94 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKc10token_typeEE6_M_ptrEv>
 80063e6:	4603      	mov	r3, r0
 80063e8:	4618      	mov	r0, r3
 80063ea:	3708      	adds	r7, #8
 80063ec:	46bd      	mov	sp, r7
 80063ee:	bd80      	pop	{r7, pc}

080063f0 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEE7destroyIS4_EEvRS6_PT_>:
       *
       *  Calls @c __a.destroy(__p).
      */
      template<typename _Up>
	static void
	destroy(allocator_type& __a, _Up* __p)
 80063f0:	b580      	push	{r7, lr}
 80063f2:	b082      	sub	sp, #8
 80063f4:	af00      	add	r7, sp, #0
 80063f6:	6078      	str	r0, [r7, #4]
 80063f8:	6039      	str	r1, [r7, #0]
	noexcept(noexcept(__a.destroy(__p)))
	{ __a.destroy(__p); }
 80063fa:	6839      	ldr	r1, [r7, #0]
 80063fc:	6878      	ldr	r0, [r7, #4]
 80063fe:	f000 fd55 	bl	8006eac <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEE7destroyIS5_EEvPT_>
 8006402:	bf00      	nop
 8006404:	3708      	adds	r7, #8
 8006406:	46bd      	mov	sp, r7
 8006408:	bd80      	pop	{r7, pc}

0800640a <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEE10deallocateERS6_PS5_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 800640a:	b580      	push	{r7, lr}
 800640c:	b084      	sub	sp, #16
 800640e:	af00      	add	r7, sp, #0
 8006410:	60f8      	str	r0, [r7, #12]
 8006412:	60b9      	str	r1, [r7, #8]
 8006414:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 8006416:	687a      	ldr	r2, [r7, #4]
 8006418:	68b9      	ldr	r1, [r7, #8]
 800641a:	68f8      	ldr	r0, [r7, #12]
 800641c:	f000 fd51 	bl	8006ec2 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEE10deallocateEPS6_j>
 8006420:	bf00      	nop
 8006422:	3710      	adds	r7, #16
 8006424:	46bd      	mov	sp, r7
 8006426:	bd80      	pop	{r7, pc}

08006428 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt13_Rb_tree_nodeIS3_E>:
      _S_key(_Const_Link_type __x)
 8006428:	b580      	push	{r7, lr}
 800642a:	b084      	sub	sp, #16
 800642c:	af00      	add	r7, sp, #0
 800642e:	6078      	str	r0, [r7, #4]
	return _KeyOfValue()(*__x->_M_valptr());
 8006430:	6878      	ldr	r0, [r7, #4]
 8006432:	f000 fd52 	bl	8006eda <_ZNKSt13_Rb_tree_nodeISt4pairIKc10token_typeEE9_M_valptrEv>
 8006436:	4602      	mov	r2, r0
 8006438:	f107 030c 	add.w	r3, r7, #12
 800643c:	4611      	mov	r1, r2
 800643e:	4618      	mov	r0, r3
 8006440:	f7fe f812 	bl	8004468 <_ZNKSt10_Select1stISt4pairIKc10token_typeEEclERKS3_>
 8006444:	4603      	mov	r3, r0
      }
 8006446:	4618      	mov	r0, r3
 8006448:	3710      	adds	r7, #16
 800644a:	46bd      	mov	sp, r7
 800644c:	bd80      	pop	{r7, pc}

0800644e <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800644e:	b480      	push	{r7}
 8006450:	b083      	sub	sp, #12
 8006452:	af00      	add	r7, sp, #0
 8006454:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8006456:	687b      	ldr	r3, [r7, #4]
 8006458:	4618      	mov	r0, r3
 800645a:	370c      	adds	r7, #12
 800645c:	46bd      	mov	sp, r7
 800645e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006462:	4770      	bx	lr

08006464 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 8006464:	b580      	push	{r7, lr}
 8006466:	b084      	sub	sp, #16
 8006468:	af00      	add	r7, sp, #0
 800646a:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_header._M_left); }
 800646c:	687b      	ldr	r3, [r7, #4]
 800646e:	68da      	ldr	r2, [r3, #12]
 8006470:	f107 030c 	add.w	r3, r7, #12
 8006474:	4611      	mov	r1, r2
 8006476:	4618      	mov	r0, r3
 8006478:	f7fd fec4 	bl	8004204 <_ZNSt17_Rb_tree_iteratorISt4pairIKc10token_typeEEC1EPSt18_Rb_tree_node_base>
 800647c:	68fb      	ldr	r3, [r7, #12]
 800647e:	4618      	mov	r0, r3
 8006480:	3710      	adds	r7, #16
 8006482:	46bd      	mov	sp, r7
 8006484:	bd80      	pop	{r7, pc}

08006486 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKc10token_typeEES6_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 8006486:	b480      	push	{r7}
 8006488:	b083      	sub	sp, #12
 800648a:	af00      	add	r7, sp, #0
 800648c:	6078      	str	r0, [r7, #4]
 800648e:	6039      	str	r1, [r7, #0]
      { return __x._M_node == __y._M_node; }
 8006490:	687b      	ldr	r3, [r7, #4]
 8006492:	681a      	ldr	r2, [r3, #0]
 8006494:	683b      	ldr	r3, [r7, #0]
 8006496:	681b      	ldr	r3, [r3, #0]
 8006498:	429a      	cmp	r2, r3
 800649a:	bf0c      	ite	eq
 800649c:	2301      	moveq	r3, #1
 800649e:	2300      	movne	r3, #0
 80064a0:	b2db      	uxtb	r3, r3
 80064a2:	4618      	mov	r0, r3
 80064a4:	370c      	adds	r7, #12
 80064a6:	46bd      	mov	sp, r7
 80064a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80064ac:	4770      	bx	lr

080064ae <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKc10token_typeEERS1_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 80064ae:	b580      	push	{r7, lr}
 80064b0:	b084      	sub	sp, #16
 80064b2:	af00      	add	r7, sp, #0
 80064b4:	60f8      	str	r0, [r7, #12]
 80064b6:	60b9      	str	r1, [r7, #8]
 80064b8:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 80064ba:	68b8      	ldr	r0, [r7, #8]
 80064bc:	f000 fd1b 	bl	8006ef6 <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKc10token_typeEEEOT_RNSt16remove_referenceIS8_E4typeE>
 80064c0:	4603      	mov	r3, r0
 80064c2:	681a      	ldr	r2, [r3, #0]
 80064c4:	68fb      	ldr	r3, [r7, #12]
 80064c6:	601a      	str	r2, [r3, #0]
 80064c8:	6878      	ldr	r0, [r7, #4]
 80064ca:	f7ff ffc0 	bl	800644e <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
 80064ce:	4603      	mov	r3, r0
 80064d0:	681a      	ldr	r2, [r3, #0]
 80064d2:	68fb      	ldr	r3, [r7, #12]
 80064d4:	605a      	str	r2, [r3, #4]
 80064d6:	68fb      	ldr	r3, [r7, #12]
 80064d8:	4618      	mov	r0, r3
 80064da:	3710      	adds	r7, #16
 80064dc:	46bd      	mov	sp, r7
 80064de:	bd80      	pop	{r7, pc}

080064e0 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_create_nodeIJRKS3_EEEPSt13_Rb_tree_nodeIS3_EDpOT_>:
	_M_create_node(_Args&&... __args)
 80064e0:	b580      	push	{r7, lr}
 80064e2:	b084      	sub	sp, #16
 80064e4:	af00      	add	r7, sp, #0
 80064e6:	6078      	str	r0, [r7, #4]
 80064e8:	6039      	str	r1, [r7, #0]
	  _Link_type __tmp = _M_get_node();
 80064ea:	6878      	ldr	r0, [r7, #4]
 80064ec:	f000 fd0e 	bl	8006f0c <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_get_nodeEv>
 80064f0:	60f8      	str	r0, [r7, #12]
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
 80064f2:	6838      	ldr	r0, [r7, #0]
 80064f4:	f7fd ffc4 	bl	8004480 <_ZSt7forwardIRKSt4pairIKc10token_typeEEOT_RNSt16remove_referenceIS6_E4typeE>
 80064f8:	4603      	mov	r3, r0
 80064fa:	461a      	mov	r2, r3
 80064fc:	68f9      	ldr	r1, [r7, #12]
 80064fe:	6878      	ldr	r0, [r7, #4]
 8006500:	f000 fd15 	bl	8006f2e <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE17_M_construct_nodeIJRKS3_EEEvPSt13_Rb_tree_nodeIS3_EDpOT_>
	  return __tmp;
 8006504:	68fb      	ldr	r3, [r7, #12]
	}
 8006506:	4618      	mov	r0, r3
 8006508:	3710      	adds	r7, #16
 800650a:	46bd      	mov	sp, r7
 800650c:	bd80      	pop	{r7, pc}

0800650e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE21_M_get_Node_allocatorEv>:
      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
 800650e:	b480      	push	{r7}
 8006510:	b083      	sub	sp, #12
 8006512:	af00      	add	r7, sp, #0
 8006514:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 8006516:	687b      	ldr	r3, [r7, #4]
 8006518:	4618      	mov	r0, r3
 800651a:	370c      	adds	r7, #12
 800651c:	46bd      	mov	sp, r7
 800651e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006522:	4770      	bx	lr

08006524 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE9_M_valptrEv>:
      _M_valptr()
 8006524:	b580      	push	{r7, lr}
 8006526:	b082      	sub	sp, #8
 8006528:	af00      	add	r7, sp, #0
 800652a:	6078      	str	r0, [r7, #4]
      { return _M_storage._M_ptr(); }
 800652c:	687b      	ldr	r3, [r7, #4]
 800652e:	3310      	adds	r3, #16
 8006530:	4618      	mov	r0, r3
 8006532:	f000 fd1c 	bl	8006f6e <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE6_M_ptrEv>
 8006536:	4603      	mov	r3, r0
 8006538:	4618      	mov	r0, r3
 800653a:	3708      	adds	r7, #8
 800653c:	46bd      	mov	sp, r7
 800653e:	bd80      	pop	{r7, pc}

08006540 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEE7destroyISA_EEvRSC_PT_>:
	destroy(allocator_type& __a, _Up* __p)
 8006540:	b580      	push	{r7, lr}
 8006542:	b082      	sub	sp, #8
 8006544:	af00      	add	r7, sp, #0
 8006546:	6078      	str	r0, [r7, #4]
 8006548:	6039      	str	r1, [r7, #0]
	{ __a.destroy(__p); }
 800654a:	6839      	ldr	r1, [r7, #0]
 800654c:	6878      	ldr	r0, [r7, #4]
 800654e:	f000 fd1a 	bl	8006f86 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEE7destroyISB_EEvPT_>
 8006552:	bf00      	nop
 8006554:	3708      	adds	r7, #8
 8006556:	46bd      	mov	sp, r7
 8006558:	bd80      	pop	{r7, pc}

0800655a <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEE10deallocateERSC_PSB_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 800655a:	b580      	push	{r7, lr}
 800655c:	b084      	sub	sp, #16
 800655e:	af00      	add	r7, sp, #0
 8006560:	60f8      	str	r0, [r7, #12]
 8006562:	60b9      	str	r1, [r7, #8]
 8006564:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 8006566:	687a      	ldr	r2, [r7, #4]
 8006568:	68b9      	ldr	r1, [r7, #8]
 800656a:	68f8      	ldr	r0, [r7, #12]
 800656c:	f000 fd17 	bl	8006f9e <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEE10deallocateEPSC_j>
 8006570:	bf00      	nop
 8006572:	3710      	adds	r7, #16
 8006574:	46bd      	mov	sp, r7
 8006576:	bd80      	pop	{r7, pc}

08006578 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt13_Rb_tree_nodeIS9_E>:
      _S_key(_Const_Link_type __x)
 8006578:	b580      	push	{r7, lr}
 800657a:	b084      	sub	sp, #16
 800657c:	af00      	add	r7, sp, #0
 800657e:	6078      	str	r0, [r7, #4]
	return _KeyOfValue()(*__x->_M_valptr());
 8006580:	6878      	ldr	r0, [r7, #4]
 8006582:	f000 fd18 	bl	8006fb6 <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE9_M_valptrEv>
 8006586:	4602      	mov	r2, r0
 8006588:	f107 030c 	add.w	r3, r7, #12
 800658c:	4611      	mov	r1, r2
 800658e:	4618      	mov	r0, r3
 8006590:	f7fe f960 	bl	8004854 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEclERKS9_>
 8006594:	4603      	mov	r3, r0
      }
 8006596:	4618      	mov	r0, r3
 8006598:	3710      	adds	r7, #16
 800659a:	46bd      	mov	sp, r7
 800659c:	bd80      	pop	{r7, pc}

0800659e <_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>:
   *  @param __rhs  Second string.
   *  @return  True if @a __lhs precedes @a __rhs.  False otherwise.
   */
  template<typename _CharT, typename _Traits, typename _Alloc>
    inline bool
    operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
 800659e:	b580      	push	{r7, lr}
 80065a0:	b082      	sub	sp, #8
 80065a2:	af00      	add	r7, sp, #0
 80065a4:	6078      	str	r0, [r7, #4]
 80065a6:	6039      	str	r1, [r7, #0]
	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.compare(__rhs) < 0; }
 80065a8:	6839      	ldr	r1, [r7, #0]
 80065aa:	6878      	ldr	r0, [r7, #4]
 80065ac:	f01c fd7a 	bl	80230a4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_>
 80065b0:	4603      	mov	r3, r0
 80065b2:	0fdb      	lsrs	r3, r3, #31
 80065b4:	b2db      	uxtb	r3, r3
 80065b6:	4618      	mov	r0, r3
 80065b8:	3708      	adds	r7, #8
 80065ba:	46bd      	mov	sp, r7
 80065bc:	bd80      	pop	{r7, pc}

080065be <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 80065be:	b580      	push	{r7, lr}
 80065c0:	b084      	sub	sp, #16
 80065c2:	af00      	add	r7, sp, #0
 80065c4:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_header._M_left); }
 80065c6:	687b      	ldr	r3, [r7, #4]
 80065c8:	68da      	ldr	r2, [r3, #12]
 80065ca:	f107 030c 	add.w	r3, r7, #12
 80065ce:	4611      	mov	r1, r2
 80065d0:	4618      	mov	r0, r3
 80065d2:	f7fe f80d 	bl	80045f0 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1EPSt18_Rb_tree_node_base>
 80065d6:	68fb      	ldr	r3, [r7, #12]
 80065d8:	4618      	mov	r0, r3
 80065da:	3710      	adds	r7, #16
 80065dc:	46bd      	mov	sp, r7
 80065de:	bd80      	pop	{r7, pc}

080065e0 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEESC_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 80065e0:	b480      	push	{r7}
 80065e2:	b083      	sub	sp, #12
 80065e4:	af00      	add	r7, sp, #0
 80065e6:	6078      	str	r0, [r7, #4]
 80065e8:	6039      	str	r1, [r7, #0]
      { return __x._M_node == __y._M_node; }
 80065ea:	687b      	ldr	r3, [r7, #4]
 80065ec:	681a      	ldr	r2, [r3, #0]
 80065ee:	683b      	ldr	r3, [r7, #0]
 80065f0:	681b      	ldr	r3, [r3, #0]
 80065f2:	429a      	cmp	r2, r3
 80065f4:	bf0c      	ite	eq
 80065f6:	2301      	moveq	r3, #1
 80065f8:	2300      	movne	r3, #0
 80065fa:	b2db      	uxtb	r3, r3
 80065fc:	4618      	mov	r0, r3
 80065fe:	370c      	adds	r7, #12
 8006600:	46bd      	mov	sp, r7
 8006602:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006606:	4770      	bx	lr

08006608 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEERS1_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 8006608:	b580      	push	{r7, lr}
 800660a:	b084      	sub	sp, #16
 800660c:	af00      	add	r7, sp, #0
 800660e:	60f8      	str	r0, [r7, #12]
 8006610:	60b9      	str	r1, [r7, #8]
 8006612:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 8006614:	68b8      	ldr	r0, [r7, #8]
 8006616:	f000 fcdc 	bl	8006fd2 <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEOT_RNSt16remove_referenceISE_E4typeE>
 800661a:	4603      	mov	r3, r0
 800661c:	681a      	ldr	r2, [r3, #0]
 800661e:	68fb      	ldr	r3, [r7, #12]
 8006620:	601a      	str	r2, [r3, #0]
 8006622:	6878      	ldr	r0, [r7, #4]
 8006624:	f7ff ff13 	bl	800644e <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
 8006628:	4603      	mov	r3, r0
 800662a:	681a      	ldr	r2, [r3, #0]
 800662c:	68fb      	ldr	r3, [r7, #12]
 800662e:	605a      	str	r2, [r3, #4]
 8006630:	68fb      	ldr	r3, [r7, #12]
 8006632:	4618      	mov	r0, r3
 8006634:	3710      	adds	r7, #16
 8006636:	46bd      	mov	sp, r7
 8006638:	bd80      	pop	{r7, pc}

0800663a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_create_nodeIJRKS9_EEEPSt13_Rb_tree_nodeIS9_EDpOT_>:
	_M_create_node(_Args&&... __args)
 800663a:	b580      	push	{r7, lr}
 800663c:	b084      	sub	sp, #16
 800663e:	af00      	add	r7, sp, #0
 8006640:	6078      	str	r0, [r7, #4]
 8006642:	6039      	str	r1, [r7, #0]
	  _Link_type __tmp = _M_get_node();
 8006644:	6878      	ldr	r0, [r7, #4]
 8006646:	f000 fccf 	bl	8006fe8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_get_nodeEv>
 800664a:	60f8      	str	r0, [r7, #12]
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
 800664c:	6838      	ldr	r0, [r7, #0]
 800664e:	f7fe f90d 	bl	800486c <_ZSt7forwardIRKSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEOT_RNSt16remove_referenceISC_E4typeE>
 8006652:	4603      	mov	r3, r0
 8006654:	461a      	mov	r2, r3
 8006656:	68f9      	ldr	r1, [r7, #12]
 8006658:	6878      	ldr	r0, [r7, #4]
 800665a:	f000 fcd6 	bl	800700a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE17_M_construct_nodeIJRKS9_EEEvPSt13_Rb_tree_nodeIS9_EDpOT_>
	  return __tmp;
 800665e:	68fb      	ldr	r3, [r7, #12]
	}
 8006660:	4618      	mov	r0, r3
 8006662:	3710      	adds	r7, #16
 8006664:	46bd      	mov	sp, r7
 8006666:	bd80      	pop	{r7, pc}

08006668 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE21_M_get_Node_allocatorEv>:
      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
 8006668:	b480      	push	{r7}
 800666a:	b083      	sub	sp, #12
 800666c:	af00      	add	r7, sp, #0
 800666e:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 8006670:	687b      	ldr	r3, [r7, #4]
 8006672:	4618      	mov	r0, r3
 8006674:	370c      	adds	r7, #12
 8006676:	46bd      	mov	sp, r7
 8006678:	f85d 7b04 	ldr.w	r7, [sp], #4
 800667c:	4770      	bx	lr

0800667e <_ZNSt13_Rb_tree_nodeISt4pairIKc12double_tokenEE9_M_valptrEv>:
      _M_valptr()
 800667e:	b580      	push	{r7, lr}
 8006680:	b082      	sub	sp, #8
 8006682:	af00      	add	r7, sp, #0
 8006684:	6078      	str	r0, [r7, #4]
      { return _M_storage._M_ptr(); }
 8006686:	687b      	ldr	r3, [r7, #4]
 8006688:	3310      	adds	r3, #16
 800668a:	4618      	mov	r0, r3
 800668c:	f000 fcdd 	bl	800704a <_ZN9__gnu_cxx16__aligned_membufISt4pairIKc12double_tokenEE6_M_ptrEv>
 8006690:	4603      	mov	r3, r0
 8006692:	4618      	mov	r0, r3
 8006694:	3708      	adds	r7, #8
 8006696:	46bd      	mov	sp, r7
 8006698:	bd80      	pop	{r7, pc}

0800669a <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEE7destroyIS4_EEvRS6_PT_>:
	destroy(allocator_type& __a, _Up* __p)
 800669a:	b580      	push	{r7, lr}
 800669c:	b082      	sub	sp, #8
 800669e:	af00      	add	r7, sp, #0
 80066a0:	6078      	str	r0, [r7, #4]
 80066a2:	6039      	str	r1, [r7, #0]
	{ __a.destroy(__p); }
 80066a4:	6839      	ldr	r1, [r7, #0]
 80066a6:	6878      	ldr	r0, [r7, #4]
 80066a8:	f000 fcdb 	bl	8007062 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEE7destroyIS5_EEvPT_>
 80066ac:	bf00      	nop
 80066ae:	3708      	adds	r7, #8
 80066b0:	46bd      	mov	sp, r7
 80066b2:	bd80      	pop	{r7, pc}

080066b4 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEE10deallocateERS6_PS5_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 80066b4:	b580      	push	{r7, lr}
 80066b6:	b084      	sub	sp, #16
 80066b8:	af00      	add	r7, sp, #0
 80066ba:	60f8      	str	r0, [r7, #12]
 80066bc:	60b9      	str	r1, [r7, #8]
 80066be:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 80066c0:	687a      	ldr	r2, [r7, #4]
 80066c2:	68b9      	ldr	r1, [r7, #8]
 80066c4:	68f8      	ldr	r0, [r7, #12]
 80066c6:	f000 fcd7 	bl	8007078 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEE10deallocateEPS6_j>
 80066ca:	bf00      	nop
 80066cc:	3710      	adds	r7, #16
 80066ce:	46bd      	mov	sp, r7
 80066d0:	bd80      	pop	{r7, pc}

080066d2 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt13_Rb_tree_nodeIS3_E>:
      _S_key(_Const_Link_type __x)
 80066d2:	b580      	push	{r7, lr}
 80066d4:	b084      	sub	sp, #16
 80066d6:	af00      	add	r7, sp, #0
 80066d8:	6078      	str	r0, [r7, #4]
	return _KeyOfValue()(*__x->_M_valptr());
 80066da:	6878      	ldr	r0, [r7, #4]
 80066dc:	f000 fcd8 	bl	8007090 <_ZNKSt13_Rb_tree_nodeISt4pairIKc12double_tokenEE9_M_valptrEv>
 80066e0:	4602      	mov	r2, r0
 80066e2:	f107 030c 	add.w	r3, r7, #12
 80066e6:	4611      	mov	r1, r2
 80066e8:	4618      	mov	r0, r3
 80066ea:	f7fe fa9d 	bl	8004c28 <_ZNKSt10_Select1stISt4pairIKc12double_tokenEEclERKS3_>
 80066ee:	4603      	mov	r3, r0
      }
 80066f0:	4618      	mov	r0, r3
 80066f2:	3710      	adds	r7, #16
 80066f4:	46bd      	mov	sp, r7
 80066f6:	bd80      	pop	{r7, pc}

080066f8 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 80066f8:	b580      	push	{r7, lr}
 80066fa:	b084      	sub	sp, #16
 80066fc:	af00      	add	r7, sp, #0
 80066fe:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_header._M_left); }
 8006700:	687b      	ldr	r3, [r7, #4]
 8006702:	68da      	ldr	r2, [r3, #12]
 8006704:	f107 030c 	add.w	r3, r7, #12
 8006708:	4611      	mov	r1, r2
 800670a:	4618      	mov	r0, r3
 800670c:	f7fe f95a 	bl	80049c4 <_ZNSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEEC1EPSt18_Rb_tree_node_base>
 8006710:	68fb      	ldr	r3, [r7, #12]
 8006712:	4618      	mov	r0, r3
 8006714:	3710      	adds	r7, #16
 8006716:	46bd      	mov	sp, r7
 8006718:	bd80      	pop	{r7, pc}

0800671a <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEES6_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 800671a:	b480      	push	{r7}
 800671c:	b083      	sub	sp, #12
 800671e:	af00      	add	r7, sp, #0
 8006720:	6078      	str	r0, [r7, #4]
 8006722:	6039      	str	r1, [r7, #0]
      { return __x._M_node == __y._M_node; }
 8006724:	687b      	ldr	r3, [r7, #4]
 8006726:	681a      	ldr	r2, [r3, #0]
 8006728:	683b      	ldr	r3, [r7, #0]
 800672a:	681b      	ldr	r3, [r3, #0]
 800672c:	429a      	cmp	r2, r3
 800672e:	bf0c      	ite	eq
 8006730:	2301      	moveq	r3, #1
 8006732:	2300      	movne	r3, #0
 8006734:	b2db      	uxtb	r3, r3
 8006736:	4618      	mov	r0, r3
 8006738:	370c      	adds	r7, #12
 800673a:	46bd      	mov	sp, r7
 800673c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006740:	4770      	bx	lr

08006742 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKc12double_tokenEERS1_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 8006742:	b580      	push	{r7, lr}
 8006744:	b084      	sub	sp, #16
 8006746:	af00      	add	r7, sp, #0
 8006748:	60f8      	str	r0, [r7, #12]
 800674a:	60b9      	str	r1, [r7, #8]
 800674c:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 800674e:	68b8      	ldr	r0, [r7, #8]
 8006750:	f000 fcac 	bl	80070ac <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEOT_RNSt16remove_referenceIS8_E4typeE>
 8006754:	4603      	mov	r3, r0
 8006756:	681a      	ldr	r2, [r3, #0]
 8006758:	68fb      	ldr	r3, [r7, #12]
 800675a:	601a      	str	r2, [r3, #0]
 800675c:	6878      	ldr	r0, [r7, #4]
 800675e:	f7ff fe76 	bl	800644e <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
 8006762:	4603      	mov	r3, r0
 8006764:	681a      	ldr	r2, [r3, #0]
 8006766:	68fb      	ldr	r3, [r7, #12]
 8006768:	605a      	str	r2, [r3, #4]
 800676a:	68fb      	ldr	r3, [r7, #12]
 800676c:	4618      	mov	r0, r3
 800676e:	3710      	adds	r7, #16
 8006770:	46bd      	mov	sp, r7
 8006772:	bd80      	pop	{r7, pc}

08006774 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_create_nodeIJRKS3_EEEPSt13_Rb_tree_nodeIS3_EDpOT_>:
	_M_create_node(_Args&&... __args)
 8006774:	b580      	push	{r7, lr}
 8006776:	b084      	sub	sp, #16
 8006778:	af00      	add	r7, sp, #0
 800677a:	6078      	str	r0, [r7, #4]
 800677c:	6039      	str	r1, [r7, #0]
	  _Link_type __tmp = _M_get_node();
 800677e:	6878      	ldr	r0, [r7, #4]
 8006780:	f000 fc9f 	bl	80070c2 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_get_nodeEv>
 8006784:	60f8      	str	r0, [r7, #12]
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
 8006786:	6838      	ldr	r0, [r7, #0]
 8006788:	f7fe fa5a 	bl	8004c40 <_ZSt7forwardIRKSt4pairIKc12double_tokenEEOT_RNSt16remove_referenceIS6_E4typeE>
 800678c:	4603      	mov	r3, r0
 800678e:	461a      	mov	r2, r3
 8006790:	68f9      	ldr	r1, [r7, #12]
 8006792:	6878      	ldr	r0, [r7, #4]
 8006794:	f000 fca6 	bl	80070e4 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE17_M_construct_nodeIJRKS3_EEEvPSt13_Rb_tree_nodeIS3_EDpOT_>
	  return __tmp;
 8006798:	68fb      	ldr	r3, [r7, #12]
	}
 800679a:	4618      	mov	r0, r3
 800679c:	3710      	adds	r7, #16
 800679e:	46bd      	mov	sp, r7
 80067a0:	bd80      	pop	{r7, pc}

080067a2 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE13_M_reset_implEvENUlOT_E_clIRiEENS0_16__variant_cookieESE_>:
	__do_visit([](auto&& __this_mem) mutable
 80067a2:	b590      	push	{r4, r7, lr}
 80067a4:	b083      	sub	sp, #12
 80067a6:	af00      	add	r7, sp, #0
 80067a8:	6078      	str	r0, [r7, #4]
 80067aa:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 80067ac:	6838      	ldr	r0, [r7, #0]
 80067ae:	f000 fcb9 	bl	8007124 <_ZSt11__addressofIiEPT_RS0_>
 80067b2:	4603      	mov	r3, r0
 80067b4:	4618      	mov	r0, r3
 80067b6:	f000 fcc0 	bl	800713a <_ZSt8_DestroyIiEvPT_>
	    return {};
 80067ba:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 80067bc:	4618      	mov	r0, r3
 80067be:	370c      	adds	r7, #12
 80067c0:	46bd      	mov	sp, r7
 80067c2:	bd90      	pop	{r4, r7, pc}

080067c4 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE13_M_reset_implEvENUlOT_E_clIRfEENS0_16__variant_cookieESE_>:
 80067c4:	b590      	push	{r4, r7, lr}
 80067c6:	b083      	sub	sp, #12
 80067c8:	af00      	add	r7, sp, #0
 80067ca:	6078      	str	r0, [r7, #4]
 80067cc:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 80067ce:	6838      	ldr	r0, [r7, #0]
 80067d0:	f000 fcbd 	bl	800714e <_ZSt11__addressofIfEPT_RS0_>
 80067d4:	4603      	mov	r3, r0
 80067d6:	4618      	mov	r0, r3
 80067d8:	f000 fcc4 	bl	8007164 <_ZSt8_DestroyIfEvPT_>
	    return {};
 80067dc:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 80067de:	4618      	mov	r0, r3
 80067e0:	370c      	adds	r7, #12
 80067e2:	46bd      	mov	sp, r7
 80067e4:	bd90      	pop	{r4, r7, pc}

080067e6 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE13_M_reset_implEvENUlOT_E_clIRbEENS0_16__variant_cookieESE_>:
 80067e6:	b590      	push	{r4, r7, lr}
 80067e8:	b083      	sub	sp, #12
 80067ea:	af00      	add	r7, sp, #0
 80067ec:	6078      	str	r0, [r7, #4]
 80067ee:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 80067f0:	6838      	ldr	r0, [r7, #0]
 80067f2:	f000 fcc1 	bl	8007178 <_ZSt11__addressofIbEPT_RS0_>
 80067f6:	4603      	mov	r3, r0
 80067f8:	4618      	mov	r0, r3
 80067fa:	f000 fcc8 	bl	800718e <_ZSt8_DestroyIbEvPT_>
	    return {};
 80067fe:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 8006800:	4618      	mov	r0, r3
 8006802:	370c      	adds	r7, #12
 8006804:	46bd      	mov	sp, r7
 8006806:	bd90      	pop	{r4, r7, pc}

08006808 <_ZN9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7_M_addrEv>:
      _M_addr() noexcept
 8006808:	b480      	push	{r7}
 800680a:	b083      	sub	sp, #12
 800680c:	af00      	add	r7, sp, #0
 800680e:	6078      	str	r0, [r7, #4]
      { return static_cast<void*>(&_M_storage); }
 8006810:	687b      	ldr	r3, [r7, #4]
 8006812:	4618      	mov	r0, r3
 8006814:	370c      	adds	r7, #12
 8006816:	46bd      	mov	sp, r7
 8006818:	f85d 7b04 	ldr.w	r7, [sp], #4
 800681c:	4770      	bx	lr

0800681e <_ZZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE13_M_reset_implEvENUlOT_E_clIRS7_EENS0_16__variant_cookieESE_>:
 800681e:	b590      	push	{r4, r7, lr}
 8006820:	b083      	sub	sp, #12
 8006822:	af00      	add	r7, sp, #0
 8006824:	6078      	str	r0, [r7, #4]
 8006826:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 8006828:	6838      	ldr	r0, [r7, #0]
 800682a:	f000 fcba 	bl	80071a2 <_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_>
 800682e:	4603      	mov	r3, r0
 8006830:	4618      	mov	r0, r3
 8006832:	f000 fcc1 	bl	80071b8 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_>
	    return {};
 8006836:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 8006838:	4618      	mov	r0, r3
 800683a:	370c      	adds	r7, #12
 800683c:	46bd      	mov	sp, r7
 800683e:	bd90      	pop	{r4, r7, pc}

08006840 <_ZN9__gnu_cxx16__aligned_membufISt6vectorI6SymbolSaIS2_EEE7_M_addrEv>:
      _M_addr() noexcept
 8006840:	b480      	push	{r7}
 8006842:	b083      	sub	sp, #12
 8006844:	af00      	add	r7, sp, #0
 8006846:	6078      	str	r0, [r7, #4]
      { return static_cast<void*>(&_M_storage); }
 8006848:	687b      	ldr	r3, [r7, #4]
 800684a:	4618      	mov	r0, r3
 800684c:	370c      	adds	r7, #12
 800684e:	46bd      	mov	sp, r7
 8006850:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006854:	4770      	bx	lr

08006856 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE13_M_reset_implEvENUlOT_E_clIRSB_EENS0_16__variant_cookieESE_>:
 8006856:	b590      	push	{r4, r7, lr}
 8006858:	b083      	sub	sp, #12
 800685a:	af00      	add	r7, sp, #0
 800685c:	6078      	str	r0, [r7, #4]
 800685e:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 8006860:	6838      	ldr	r0, [r7, #0]
 8006862:	f000 fcb4 	bl	80071ce <_ZSt11__addressofISt6vectorI6SymbolSaIS1_EEEPT_RS4_>
 8006866:	4603      	mov	r3, r0
 8006868:	4618      	mov	r0, r3
 800686a:	f000 fcbb 	bl	80071e4 <_ZSt8_DestroyISt6vectorI6SymbolSaIS1_EEEvPT_>
	    return {};
 800686e:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 8006870:	4618      	mov	r0, r3
 8006872:	370c      	adds	r7, #12
 8006874:	46bd      	mov	sp, r7
 8006876:	bd90      	pop	{r4, r7, pc}

08006878 <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEPT_RSE_>:
   *  @param  __r  Reference to an object or function.
   *  @return   The actual address.
  */
  template<typename _Tp>
    inline _GLIBCXX17_CONSTEXPR _Tp*
    addressof(_Tp& __r) noexcept
 8006878:	b580      	push	{r7, lr}
 800687a:	b082      	sub	sp, #8
 800687c:	af00      	add	r7, sp, #0
 800687e:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 8006880:	6878      	ldr	r0, [r7, #4]
 8006882:	f000 f805 	bl	8006890 <_ZSt11__addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEPT_RSE_>
 8006886:	4603      	mov	r3, r0
 8006888:	4618      	mov	r0, r3
 800688a:	3708      	adds	r7, #8
 800688c:	46bd      	mov	sp, r7
 800688e:	bd80      	pop	{r7, pc}

08006890 <_ZSt11__addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEPT_RSE_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 8006890:	b480      	push	{r7}
 8006892:	b083      	sub	sp, #12
 8006894:	af00      	add	r7, sp, #0
 8006896:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 8006898:	687b      	ldr	r3, [r7, #4]
 800689a:	4618      	mov	r0, r3
 800689c:	370c      	adds	r7, #12
 800689e:	46bd      	mov	sp, r7
 80068a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80068a4:	4770      	bx	lr

080068a6 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEERKiEEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 80068a6:	b590      	push	{r4, r7, lr}
 80068a8:	b085      	sub	sp, #20
 80068aa:	af00      	add	r7, sp, #0
 80068ac:	6078      	str	r0, [r7, #4]
 80068ae:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 80068b0:	687b      	ldr	r3, [r7, #4]
 80068b2:	4618      	mov	r0, r3
 80068b4:	f7ff ffe0 	bl	8006878 <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEPT_RSE_>
 80068b8:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 80068ba:	6838      	ldr	r0, [r7, #0]
 80068bc:	f7fd fac6 	bl	8003e4c <_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE>
 80068c0:	4603      	mov	r3, r0
        ::new (__storage)
 80068c2:	681c      	ldr	r4, [r3, #0]
 80068c4:	68fb      	ldr	r3, [r7, #12]
 80068c6:	4619      	mov	r1, r3
 80068c8:	2004      	movs	r0, #4
 80068ca:	f7fa fbc6 	bl	800105a <_ZnwjPv>
 80068ce:	4603      	mov	r3, r0
 80068d0:	601c      	str	r4, [r3, #0]
    }
 80068d2:	bf00      	nop
 80068d4:	3714      	adds	r7, #20
 80068d6:	46bd      	mov	sp, r7
 80068d8:	bd90      	pop	{r4, r7, pc}

080068da <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEERKfEEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 80068da:	b590      	push	{r4, r7, lr}
 80068dc:	b085      	sub	sp, #20
 80068de:	af00      	add	r7, sp, #0
 80068e0:	6078      	str	r0, [r7, #4]
 80068e2:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 80068e4:	687b      	ldr	r3, [r7, #4]
 80068e6:	4618      	mov	r0, r3
 80068e8:	f7ff ffc6 	bl	8006878 <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEPT_RSE_>
 80068ec:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 80068ee:	6838      	ldr	r0, [r7, #0]
 80068f0:	f7fd fae0 	bl	8003eb4 <_ZSt7forwardIRKfEOT_RNSt16remove_referenceIS2_E4typeE>
 80068f4:	4603      	mov	r3, r0
        ::new (__storage)
 80068f6:	681c      	ldr	r4, [r3, #0]
 80068f8:	68fb      	ldr	r3, [r7, #12]
 80068fa:	4619      	mov	r1, r3
 80068fc:	2004      	movs	r0, #4
 80068fe:	f7fa fbac 	bl	800105a <_ZnwjPv>
 8006902:	4603      	mov	r3, r0
 8006904:	601c      	str	r4, [r3, #0]
    }
 8006906:	bf00      	nop
 8006908:	3714      	adds	r7, #20
 800690a:	46bd      	mov	sp, r7
 800690c:	bd90      	pop	{r4, r7, pc}

0800690e <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEERKbEEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 800690e:	b590      	push	{r4, r7, lr}
 8006910:	b085      	sub	sp, #20
 8006912:	af00      	add	r7, sp, #0
 8006914:	6078      	str	r0, [r7, #4]
 8006916:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 8006918:	687b      	ldr	r3, [r7, #4]
 800691a:	4618      	mov	r0, r3
 800691c:	f7ff ffac 	bl	8006878 <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEPT_RSE_>
 8006920:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 8006922:	6838      	ldr	r0, [r7, #0]
 8006924:	f7fd fafa 	bl	8003f1c <_ZSt7forwardIRKbEOT_RNSt16remove_referenceIS2_E4typeE>
 8006928:	4603      	mov	r3, r0
        ::new (__storage)
 800692a:	781c      	ldrb	r4, [r3, #0]
 800692c:	68fb      	ldr	r3, [r7, #12]
 800692e:	4619      	mov	r1, r3
 8006930:	2001      	movs	r0, #1
 8006932:	f7fa fb92 	bl	800105a <_ZnwjPv>
 8006936:	4603      	mov	r3, r0
 8006938:	4622      	mov	r2, r4
 800693a:	701a      	strb	r2, [r3, #0]
    }
 800693c:	bf00      	nop
 800693e:	3714      	adds	r7, #20
 8006940:	46bd      	mov	sp, r7
 8006942:	bd90      	pop	{r4, r7, pc}

08006944 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj3EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 8006944:	b590      	push	{r4, r7, lr}
 8006946:	b085      	sub	sp, #20
 8006948:	af00      	add	r7, sp, #0
 800694a:	60f8      	str	r0, [r7, #12]
 800694c:	7239      	strb	r1, [r7, #8]
 800694e:	607a      	str	r2, [r7, #4]
 8006950:	68fb      	ldr	r3, [r7, #12]
 8006952:	687a      	ldr	r2, [r7, #4]
 8006954:	4621      	mov	r1, r4
 8006956:	4618      	mov	r0, r3
 8006958:	f000 fcc0 	bl	80072dc <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj3EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>
 800695c:	68fb      	ldr	r3, [r7, #12]
 800695e:	4618      	mov	r0, r3
 8006960:	3714      	adds	r7, #20
 8006962:	46bd      	mov	sp, r7
 8006964:	bd90      	pop	{r4, r7, pc}

08006966 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj3EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 8006966:	b590      	push	{r4, r7, lr}
 8006968:	b085      	sub	sp, #20
 800696a:	af00      	add	r7, sp, #0
 800696c:	60f8      	str	r0, [r7, #12]
 800696e:	7239      	strb	r1, [r7, #8]
 8006970:	607a      	str	r2, [r7, #4]
 8006972:	68fb      	ldr	r3, [r7, #12]
 8006974:	687a      	ldr	r2, [r7, #4]
 8006976:	4621      	mov	r1, r4
 8006978:	4618      	mov	r0, r3
 800697a:	f7ff ffe3 	bl	8006944 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj3EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>
 800697e:	68fb      	ldr	r3, [r7, #12]
 8006980:	4618      	mov	r0, r3
 8006982:	3714      	adds	r7, #20
 8006984:	46bd      	mov	sp, r7
 8006986:	bd90      	pop	{r4, r7, pc}

08006988 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj3EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 8006988:	b590      	push	{r4, r7, lr}
 800698a:	b085      	sub	sp, #20
 800698c:	af00      	add	r7, sp, #0
 800698e:	60f8      	str	r0, [r7, #12]
 8006990:	7239      	strb	r1, [r7, #8]
 8006992:	607a      	str	r2, [r7, #4]
 8006994:	68fb      	ldr	r3, [r7, #12]
 8006996:	687a      	ldr	r2, [r7, #4]
 8006998:	4621      	mov	r1, r4
 800699a:	4618      	mov	r0, r3
 800699c:	f7ff ffe3 	bl	8006966 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj3EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>
 80069a0:	68fb      	ldr	r3, [r7, #12]
 80069a2:	4618      	mov	r0, r3
 80069a4:	3714      	adds	r7, #20
 80069a6:	46bd      	mov	sp, r7
 80069a8:	bd90      	pop	{r4, r7, pc}

080069aa <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj3EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 80069aa:	b590      	push	{r4, r7, lr}
 80069ac:	b085      	sub	sp, #20
 80069ae:	af00      	add	r7, sp, #0
 80069b0:	60f8      	str	r0, [r7, #12]
 80069b2:	7239      	strb	r1, [r7, #8]
 80069b4:	607a      	str	r2, [r7, #4]
 80069b6:	68fb      	ldr	r3, [r7, #12]
 80069b8:	687a      	ldr	r2, [r7, #4]
 80069ba:	4621      	mov	r1, r4
 80069bc:	4618      	mov	r0, r3
 80069be:	f7ff ffe3 	bl	8006988 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj3EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>
 80069c2:	68fb      	ldr	r3, [r7, #12]
 80069c4:	4618      	mov	r0, r3
 80069c6:	3714      	adds	r7, #20
 80069c8:	46bd      	mov	sp, r7
 80069ca:	bd90      	pop	{r4, r7, pc}

080069cc <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj3EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
	_Variant_base(in_place_index_t<_Np> __i, _Args&&... __args)
 80069cc:	b5b0      	push	{r4, r5, r7, lr}
 80069ce:	b084      	sub	sp, #16
 80069d0:	af00      	add	r7, sp, #0
 80069d2:	60f8      	str	r0, [r7, #12]
 80069d4:	7239      	strb	r1, [r7, #8]
 80069d6:	607a      	str	r2, [r7, #4]
	: _Base(__i, std::forward<_Args>(__args)...)
 80069d8:	68fc      	ldr	r4, [r7, #12]
 80069da:	6878      	ldr	r0, [r7, #4]
 80069dc:	f7fd fade 	bl	8003f9c <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 80069e0:	4603      	mov	r3, r0
 80069e2:	461a      	mov	r2, r3
 80069e4:	4629      	mov	r1, r5
 80069e6:	4620      	mov	r0, r4
 80069e8:	f7ff ffdf 	bl	80069aa <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj3EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 80069ec:	68fb      	ldr	r3, [r7, #12]
 80069ee:	4618      	mov	r0, r3
 80069f0:	3710      	adds	r7, #16
 80069f2:	46bd      	mov	sp, r7
 80069f4:	bdb0      	pop	{r4, r5, r7, pc}

080069f6 <_ZNSt27_Enable_default_constructorILb1ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEC1ESt31_Enable_default_constructor_tag>:
    _Enable_default_constructor&
    operator=(_Enable_default_constructor&&) noexcept = default;

    // Can be used in other ctors.
    constexpr explicit
    _Enable_default_constructor(_Enable_default_constructor_tag) { }
 80069f6:	b480      	push	{r7}
 80069f8:	b083      	sub	sp, #12
 80069fa:	af00      	add	r7, sp, #0
 80069fc:	6078      	str	r0, [r7, #4]
 80069fe:	7039      	strb	r1, [r7, #0]
 8006a00:	687b      	ldr	r3, [r7, #4]
 8006a02:	4618      	mov	r0, r3
 8006a04:	370c      	adds	r7, #12
 8006a06:	46bd      	mov	sp, r7
 8006a08:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006a0c:	4770      	bx	lr

08006a0e <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8006a0e:	b480      	push	{r7}
 8006a10:	b083      	sub	sp, #12
 8006a12:	af00      	add	r7, sp, #0
 8006a14:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8006a16:	687b      	ldr	r3, [r7, #4]
 8006a18:	4618      	mov	r0, r3
 8006a1a:	370c      	adds	r7, #12
 8006a1c:	46bd      	mov	sp, r7
 8006a1e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006a22:	4770      	bx	lr

08006a24 <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_JRiSt17integral_constantIjLj0EEEENSt15__invoke_resultISF_JDpT0_EE4typeESG_DpOSN_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8006a24:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006a28:	b084      	sub	sp, #16
 8006a2a:	af00      	add	r7, sp, #0
 8006a2c:	60f8      	str	r0, [r7, #12]
 8006a2e:	60b9      	str	r1, [r7, #8]
 8006a30:	607a      	str	r2, [r7, #4]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8006a32:	68f8      	ldr	r0, [r7, #12]
 8006a34:	f000 f897 	bl	8006b66 <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 8006a38:	4604      	mov	r4, r0
 8006a3a:	68b8      	ldr	r0, [r7, #8]
 8006a3c:	f7ff f847 	bl	8005ace <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 8006a40:	4605      	mov	r5, r0
 8006a42:	6878      	ldr	r0, [r7, #4]
 8006a44:	f7fd fa0d 	bl	8003e62 <_ZSt7forwardISt17integral_constantIjLj0EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8006a48:	4603      	mov	r3, r0
 8006a4a:	462a      	mov	r2, r5
 8006a4c:	4621      	mov	r1, r4
 8006a4e:	4630      	mov	r0, r6
 8006a50:	f000 fc5c 	bl	800730c <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSEOSE_EUlOT_T0_E_JRiSt17integral_constantIjLj0EEEESG_St14__invoke_otherOSI_DpOT1_>
					std::forward<_Args>(__args)...);
 8006a54:	4643      	mov	r3, r8
    }
 8006a56:	4618      	mov	r0, r3
 8006a58:	3710      	adds	r7, #16
 8006a5a:	46bd      	mov	sp, r7
 8006a5c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08006a60 <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_JRfSt17integral_constantIjLj1EEEENSt15__invoke_resultISF_JDpT0_EE4typeESG_DpOSN_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8006a60:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006a64:	b084      	sub	sp, #16
 8006a66:	af00      	add	r7, sp, #0
 8006a68:	60f8      	str	r0, [r7, #12]
 8006a6a:	60b9      	str	r1, [r7, #8]
 8006a6c:	607a      	str	r2, [r7, #4]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8006a6e:	68f8      	ldr	r0, [r7, #12]
 8006a70:	f000 f879 	bl	8006b66 <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 8006a74:	4604      	mov	r4, r0
 8006a76:	68b8      	ldr	r0, [r7, #8]
 8006a78:	f7ff f84b 	bl	8005b12 <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 8006a7c:	4605      	mov	r5, r0
 8006a7e:	6878      	ldr	r0, [r7, #4]
 8006a80:	f7fd fa23 	bl	8003eca <_ZSt7forwardISt17integral_constantIjLj1EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8006a84:	4603      	mov	r3, r0
 8006a86:	462a      	mov	r2, r5
 8006a88:	4621      	mov	r1, r4
 8006a8a:	4630      	mov	r0, r6
 8006a8c:	f000 fc5c 	bl	8007348 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSEOSE_EUlOT_T0_E_JRfSt17integral_constantIjLj1EEEESG_St14__invoke_otherOSI_DpOT1_>
					std::forward<_Args>(__args)...);
 8006a90:	4643      	mov	r3, r8
    }
 8006a92:	4618      	mov	r0, r3
 8006a94:	3710      	adds	r7, #16
 8006a96:	46bd      	mov	sp, r7
 8006a98:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08006a9c <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_JRbSt17integral_constantIjLj2EEEENSt15__invoke_resultISF_JDpT0_EE4typeESG_DpOSN_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8006a9c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006aa0:	b084      	sub	sp, #16
 8006aa2:	af00      	add	r7, sp, #0
 8006aa4:	60f8      	str	r0, [r7, #12]
 8006aa6:	60b9      	str	r1, [r7, #8]
 8006aa8:	607a      	str	r2, [r7, #4]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8006aaa:	68f8      	ldr	r0, [r7, #12]
 8006aac:	f000 f85b 	bl	8006b66 <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 8006ab0:	4604      	mov	r4, r0
 8006ab2:	68b8      	ldr	r0, [r7, #8]
 8006ab4:	f7ff f84f 	bl	8005b56 <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
 8006ab8:	4605      	mov	r5, r0
 8006aba:	6878      	ldr	r0, [r7, #4]
 8006abc:	f7fd fa39 	bl	8003f32 <_ZSt7forwardISt17integral_constantIjLj2EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8006ac0:	4603      	mov	r3, r0
 8006ac2:	462a      	mov	r2, r5
 8006ac4:	4621      	mov	r1, r4
 8006ac6:	4630      	mov	r0, r6
 8006ac8:	f000 fc5c 	bl	8007384 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSEOSE_EUlOT_T0_E_JRbSt17integral_constantIjLj2EEEESG_St14__invoke_otherOSI_DpOT1_>
					std::forward<_Args>(__args)...);
 8006acc:	4643      	mov	r3, r8
    }
 8006ace:	4618      	mov	r0, r3
 8006ad0:	3710      	adds	r7, #16
 8006ad2:	46bd      	mov	sp, r7
 8006ad4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08006ad8 <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_JRS8_St17integral_constantIjLj3EEEENSt15__invoke_resultISF_JDpT0_EE4typeESG_DpOSN_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8006ad8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006adc:	b084      	sub	sp, #16
 8006ade:	af00      	add	r7, sp, #0
 8006ae0:	60f8      	str	r0, [r7, #12]
 8006ae2:	60b9      	str	r1, [r7, #8]
 8006ae4:	607a      	str	r2, [r7, #4]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8006ae6:	68f8      	ldr	r0, [r7, #12]
 8006ae8:	f000 f83d 	bl	8006b66 <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 8006aec:	4604      	mov	r4, r0
 8006aee:	68b8      	ldr	r0, [r7, #8]
 8006af0:	f7ff f85f 	bl	8005bb2 <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 8006af4:	4605      	mov	r5, r0
 8006af6:	6878      	ldr	r0, [r7, #4]
 8006af8:	f7fd fa5b 	bl	8003fb2 <_ZSt7forwardISt17integral_constantIjLj3EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8006afc:	4603      	mov	r3, r0
 8006afe:	462a      	mov	r2, r5
 8006b00:	4621      	mov	r1, r4
 8006b02:	4630      	mov	r0, r6
 8006b04:	f000 fc5c 	bl	80073c0 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSEOSE_EUlOT_T0_E_JRS9_St17integral_constantIjLj3EEEESG_St14__invoke_otherOSI_DpOT1_>
					std::forward<_Args>(__args)...);
 8006b08:	4643      	mov	r3, r8
    }
 8006b0a:	4618      	mov	r0, r3
 8006b0c:	3710      	adds	r7, #16
 8006b0e:	46bd      	mov	sp, r7
 8006b10:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08006b14 <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_JRSC_St17integral_constantIjLj4EEEENSt15__invoke_resultISF_JDpT0_EE4typeESG_DpOSN_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8006b14:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006b18:	b084      	sub	sp, #16
 8006b1a:	af00      	add	r7, sp, #0
 8006b1c:	60f8      	str	r0, [r7, #12]
 8006b1e:	60b9      	str	r1, [r7, #8]
 8006b20:	607a      	str	r2, [r7, #4]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8006b22:	68f8      	ldr	r0, [r7, #12]
 8006b24:	f000 f81f 	bl	8006b66 <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 8006b28:	4604      	mov	r4, r0
 8006b2a:	68b8      	ldr	r0, [r7, #8]
 8006b2c:	f7ff f86f 	bl	8005c0e <_ZSt7forwardIRSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS5_E4typeE>
 8006b30:	4605      	mov	r5, r0
 8006b32:	6878      	ldr	r0, [r7, #4]
 8006b34:	f7fd fa7d 	bl	8004032 <_ZSt7forwardISt17integral_constantIjLj4EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8006b38:	4603      	mov	r3, r0
 8006b3a:	462a      	mov	r2, r5
 8006b3c:	4621      	mov	r1, r4
 8006b3e:	4630      	mov	r0, r6
 8006b40:	f000 fc5c 	bl	80073fc <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSEOSE_EUlOT_T0_E_JRSD_St17integral_constantIjLj4EEEESG_St14__invoke_otherOSI_DpOT1_>
					std::forward<_Args>(__args)...);
 8006b44:	4643      	mov	r3, r8
    }
 8006b46:	4618      	mov	r0, r3
 8006b48:	3710      	adds	r7, #16
 8006b4a:	46bd      	mov	sp, r7
 8006b4c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08006b50 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSEOSE_EUlOT_T0_E_RSt7variantIJifbS9_SD_EEEJEE9_M_accessEv>:
      _M_access() const
 8006b50:	b480      	push	{r7}
 8006b52:	b083      	sub	sp, #12
 8006b54:	af00      	add	r7, sp, #0
 8006b56:	6078      	str	r0, [r7, #4]
      { return _M_data; }
 8006b58:	687b      	ldr	r3, [r7, #4]
 8006b5a:	4618      	mov	r0, r3
 8006b5c:	370c      	adds	r7, #12
 8006b5e:	46bd      	mov	sp, r7
 8006b60:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006b64:	4770      	bx	lr

08006b66 <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8006b66:	b480      	push	{r7}
 8006b68:	b083      	sub	sp, #12
 8006b6a:	af00      	add	r7, sp, #0
 8006b6c:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8006b6e:	687b      	ldr	r3, [r7, #4]
 8006b70:	4618      	mov	r0, r3
 8006b72:	370c      	adds	r7, #12
 8006b74:	46bd      	mov	sp, r7
 8006b76:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006b7a:	4770      	bx	lr

08006b7c <_ZNSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 8006b7c:	b480      	push	{r7}
 8006b7e:	b083      	sub	sp, #12
 8006b80:	af00      	add	r7, sp, #0
 8006b82:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 8006b84:	687b      	ldr	r3, [r7, #4]
 8006b86:	4618      	mov	r0, r3
 8006b88:	370c      	adds	r7, #12
 8006b8a:	46bd      	mov	sp, r7
 8006b8c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006b90:	4770      	bx	lr

08006b92 <_ZNKSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 8006b92:	b480      	push	{r7}
 8006b94:	b083      	sub	sp, #12
 8006b96:	af00      	add	r7, sp, #0
 8006b98:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 8006b9a:	687b      	ldr	r3, [r7, #4]
 8006b9c:	4618      	mov	r0, r3
 8006b9e:	370c      	adds	r7, #12
 8006ba0:	46bd      	mov	sp, r7
 8006ba2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006ba6:	4770      	bx	lr

08006ba8 <_ZStneRKSaI6SymbolES2_>:
      friend bool
      operator==(const allocator&, const allocator&) _GLIBCXX_NOTHROW
      { return true; }

      friend bool
      operator!=(const allocator&, const allocator&) _GLIBCXX_NOTHROW
 8006ba8:	b480      	push	{r7}
 8006baa:	b083      	sub	sp, #12
 8006bac:	af00      	add	r7, sp, #0
 8006bae:	6078      	str	r0, [r7, #4]
 8006bb0:	6039      	str	r1, [r7, #0]
      { return false; }
 8006bb2:	2300      	movs	r3, #0
 8006bb4:	4618      	mov	r0, r3
 8006bb6:	370c      	adds	r7, #12
 8006bb8:	46bd      	mov	sp, r7
 8006bba:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006bbe:	4770      	bx	lr

08006bc0 <_ZNSt6vectorI6SymbolSaIS0_EE5clearEv>:
       *  elements, and that if the elements themselves are pointers, the
       *  pointed-to memory is not touched in any way.  Managing the pointer is
       *  the user's responsibility.
       */
      void
      clear() _GLIBCXX_NOEXCEPT
 8006bc0:	b580      	push	{r7, lr}
 8006bc2:	b082      	sub	sp, #8
 8006bc4:	af00      	add	r7, sp, #0
 8006bc6:	6078      	str	r0, [r7, #4]
      { _M_erase_at_end(this->_M_impl._M_start); }
 8006bc8:	687b      	ldr	r3, [r7, #4]
 8006bca:	681b      	ldr	r3, [r3, #0]
 8006bcc:	4619      	mov	r1, r3
 8006bce:	6878      	ldr	r0, [r7, #4]
 8006bd0:	f000 fc32 	bl	8007438 <_ZNSt6vectorI6SymbolSaIS0_EE15_M_erase_at_endEPS0_>
 8006bd4:	bf00      	nop
 8006bd6:	3708      	adds	r7, #8
 8006bd8:	46bd      	mov	sp, r7
 8006bda:	bd80      	pop	{r7, pc}

08006bdc <_ZNSt12_Vector_baseI6SymbolSaIS0_EE13_M_deallocateEPS0_j>:
      _M_deallocate(pointer __p, size_t __n)
 8006bdc:	b580      	push	{r7, lr}
 8006bde:	b084      	sub	sp, #16
 8006be0:	af00      	add	r7, sp, #0
 8006be2:	60f8      	str	r0, [r7, #12]
 8006be4:	60b9      	str	r1, [r7, #8]
 8006be6:	607a      	str	r2, [r7, #4]
	if (__p)
 8006be8:	68bb      	ldr	r3, [r7, #8]
 8006bea:	2b00      	cmp	r3, #0
 8006bec:	d005      	beq.n	8006bfa <_ZNSt12_Vector_baseI6SymbolSaIS0_EE13_M_deallocateEPS0_j+0x1e>
	  _Tr::deallocate(_M_impl, __p, __n);
 8006bee:	68fb      	ldr	r3, [r7, #12]
 8006bf0:	687a      	ldr	r2, [r7, #4]
 8006bf2:	68b9      	ldr	r1, [r7, #8]
 8006bf4:	4618      	mov	r0, r3
 8006bf6:	f000 fc40 	bl	800747a <_ZNSt16allocator_traitsISaI6SymbolEE10deallocateERS1_PS0_j>
      }
 8006bfa:	bf00      	nop
 8006bfc:	3710      	adds	r7, #16
 8006bfe:	46bd      	mov	sp, r7
 8006c00:	bd80      	pop	{r7, pc}

08006c02 <_ZSt15__alloc_on_copyISaI6SymbolEEvRT_RKS2_>:
    inline void
    __do_alloc_on_copy(_Alloc&, const _Alloc&, false_type)
    { }

  template<typename _Alloc>
    inline void __alloc_on_copy(_Alloc& __one, const _Alloc& __two)
 8006c02:	b580      	push	{r7, lr}
 8006c04:	b084      	sub	sp, #16
 8006c06:	af00      	add	r7, sp, #0
 8006c08:	6078      	str	r0, [r7, #4]
 8006c0a:	6039      	str	r1, [r7, #0]
    {
      typedef allocator_traits<_Alloc> __traits;
      typedef typename __traits::propagate_on_container_copy_assignment __pocca;
      __do_alloc_on_copy(__one, __two, __pocca());
 8006c0c:	461a      	mov	r2, r3
 8006c0e:	6839      	ldr	r1, [r7, #0]
 8006c10:	6878      	ldr	r0, [r7, #4]
 8006c12:	f000 fc41 	bl	8007498 <_ZSt18__do_alloc_on_copyISaI6SymbolEEvRT_RKS2_St17integral_constantIbLb0EE>
    }
 8006c16:	bf00      	nop
 8006c18:	3710      	adds	r7, #16
 8006c1a:	46bd      	mov	sp, r7
 8006c1c:	bd80      	pop	{r7, pc}

08006c1e <_ZNKSt6vectorI6SymbolSaIS0_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 8006c1e:	b480      	push	{r7}
 8006c20:	b083      	sub	sp, #12
 8006c22:	af00      	add	r7, sp, #0
 8006c24:	6078      	str	r0, [r7, #4]
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 8006c26:	687b      	ldr	r3, [r7, #4]
 8006c28:	685a      	ldr	r2, [r3, #4]
 8006c2a:	687b      	ldr	r3, [r7, #4]
 8006c2c:	681b      	ldr	r3, [r3, #0]
 8006c2e:	1ad3      	subs	r3, r2, r3
 8006c30:	115b      	asrs	r3, r3, #5
 8006c32:	4618      	mov	r0, r3
 8006c34:	370c      	adds	r7, #12
 8006c36:	46bd      	mov	sp, r7
 8006c38:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006c3c:	4770      	bx	lr

08006c3e <_ZNKSt6vectorI6SymbolSaIS0_EE8capacityEv>:
      capacity() const _GLIBCXX_NOEXCEPT
 8006c3e:	b480      	push	{r7}
 8006c40:	b083      	sub	sp, #12
 8006c42:	af00      	add	r7, sp, #0
 8006c44:	6078      	str	r0, [r7, #4]
      { return size_type(this->_M_impl._M_end_of_storage
 8006c46:	687b      	ldr	r3, [r7, #4]
 8006c48:	689a      	ldr	r2, [r3, #8]
			 - this->_M_impl._M_start); }
 8006c4a:	687b      	ldr	r3, [r7, #4]
 8006c4c:	681b      	ldr	r3, [r3, #0]
 8006c4e:	1ad3      	subs	r3, r2, r3
 8006c50:	115b      	asrs	r3, r3, #5
 8006c52:	4618      	mov	r0, r3
 8006c54:	370c      	adds	r7, #12
 8006c56:	46bd      	mov	sp, r7
 8006c58:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006c5c:	4770      	bx	lr

08006c5e <_ZNKSt6vectorI6SymbolSaIS0_EE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
 8006c5e:	b580      	push	{r7, lr}
 8006c60:	b084      	sub	sp, #16
 8006c62:	af00      	add	r7, sp, #0
 8006c64:	6078      	str	r0, [r7, #4]
      { return const_iterator(this->_M_impl._M_start); }
 8006c66:	687b      	ldr	r3, [r7, #4]
 8006c68:	681b      	ldr	r3, [r3, #0]
 8006c6a:	60fb      	str	r3, [r7, #12]
 8006c6c:	f107 020c 	add.w	r2, r7, #12
 8006c70:	f107 0308 	add.w	r3, r7, #8
 8006c74:	4611      	mov	r1, r2
 8006c76:	4618      	mov	r0, r3
 8006c78:	f000 fc1a 	bl	80074b0 <_ZN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS1_SaIS1_EEEC1ERKS3_>
 8006c7c:	68bb      	ldr	r3, [r7, #8]
 8006c7e:	4618      	mov	r0, r3
 8006c80:	3710      	adds	r7, #16
 8006c82:	46bd      	mov	sp, r7
 8006c84:	bd80      	pop	{r7, pc}

08006c86 <_ZNKSt6vectorI6SymbolSaIS0_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
 8006c86:	b580      	push	{r7, lr}
 8006c88:	b084      	sub	sp, #16
 8006c8a:	af00      	add	r7, sp, #0
 8006c8c:	6078      	str	r0, [r7, #4]
      { return const_iterator(this->_M_impl._M_finish); }
 8006c8e:	687b      	ldr	r3, [r7, #4]
 8006c90:	685b      	ldr	r3, [r3, #4]
 8006c92:	60fb      	str	r3, [r7, #12]
 8006c94:	f107 020c 	add.w	r2, r7, #12
 8006c98:	f107 0308 	add.w	r3, r7, #8
 8006c9c:	4611      	mov	r1, r2
 8006c9e:	4618      	mov	r0, r3
 8006ca0:	f000 fc06 	bl	80074b0 <_ZN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS1_SaIS1_EEEC1ERKS3_>
 8006ca4:	68bb      	ldr	r3, [r7, #8]
 8006ca6:	4618      	mov	r0, r3
 8006ca8:	3710      	adds	r7, #16
 8006caa:	46bd      	mov	sp, r7
 8006cac:	bd80      	pop	{r7, pc}

08006cae <_ZNSt6vectorI6SymbolSaIS0_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS0_S2_EEEEPS0_jT_SA_>:
       *  Memory expansion handler.  Uses the member allocation function to
       *  obtain @a n bytes of memory, and then copies [first,last) into it.
       */
      template<typename _ForwardIterator>
	pointer
	_M_allocate_and_copy(size_type __n,
 8006cae:	b580      	push	{r7, lr}
 8006cb0:	b086      	sub	sp, #24
 8006cb2:	af00      	add	r7, sp, #0
 8006cb4:	60f8      	str	r0, [r7, #12]
 8006cb6:	60b9      	str	r1, [r7, #8]
 8006cb8:	607a      	str	r2, [r7, #4]
 8006cba:	603b      	str	r3, [r7, #0]
			     _ForwardIterator __first, _ForwardIterator __last)
	{
	  pointer __result = this->_M_allocate(__n);
 8006cbc:	68fb      	ldr	r3, [r7, #12]
 8006cbe:	68b9      	ldr	r1, [r7, #8]
 8006cc0:	4618      	mov	r0, r3
 8006cc2:	f000 fc05 	bl	80074d0 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE11_M_allocateEj>
 8006cc6:	6178      	str	r0, [r7, #20]
	  __try
	    {
	      std::__uninitialized_copy_a(__first, __last, __result,
					  _M_get_Tp_allocator());
 8006cc8:	68fb      	ldr	r3, [r7, #12]
 8006cca:	4618      	mov	r0, r3
 8006ccc:	f7ff ff56 	bl	8006b7c <_ZNSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 8006cd0:	4603      	mov	r3, r0
	      std::__uninitialized_copy_a(__first, __last, __result,
 8006cd2:	697a      	ldr	r2, [r7, #20]
 8006cd4:	6839      	ldr	r1, [r7, #0]
 8006cd6:	6878      	ldr	r0, [r7, #4]
 8006cd8:	f000 fc0e 	bl	80074f8 <_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS2_SaIS2_EEEEPS2_S2_ET0_T_SB_SA_RSaIT1_E>
	      return __result;
 8006cdc:	697b      	ldr	r3, [r7, #20]
	  __catch(...)
	    {
	      _M_deallocate(__result, __n);
	      __throw_exception_again;
	    }
	}
 8006cde:	4618      	mov	r0, r3
 8006ce0:	3718      	adds	r7, #24
 8006ce2:	46bd      	mov	sp, r7
 8006ce4:	bd80      	pop	{r7, pc}

08006ce6 <_ZSt8_DestroyIP6SymbolS0_EvT_S2_RSaIT0_E>:
	__traits::destroy(__alloc, std::__addressof(*__first));
    }

  template<typename _ForwardIterator, typename _Tp>
    inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 8006ce6:	b580      	push	{r7, lr}
 8006ce8:	b084      	sub	sp, #16
 8006cea:	af00      	add	r7, sp, #0
 8006cec:	60f8      	str	r0, [r7, #12]
 8006cee:	60b9      	str	r1, [r7, #8]
 8006cf0:	607a      	str	r2, [r7, #4]
	     allocator<_Tp>&)
    {
      _Destroy(__first, __last);
 8006cf2:	68b9      	ldr	r1, [r7, #8]
 8006cf4:	68f8      	ldr	r0, [r7, #12]
 8006cf6:	f000 fc10 	bl	800751a <_ZSt8_DestroyIP6SymbolEvT_S2_>
    }
 8006cfa:	bf00      	nop
 8006cfc:	3710      	adds	r7, #16
 8006cfe:	46bd      	mov	sp, r7
 8006d00:	bd80      	pop	{r7, pc}

08006d02 <_ZNSt6vectorI6SymbolSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 8006d02:	b580      	push	{r7, lr}
 8006d04:	b084      	sub	sp, #16
 8006d06:	af00      	add	r7, sp, #0
 8006d08:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_start); }
 8006d0a:	687a      	ldr	r2, [r7, #4]
 8006d0c:	f107 030c 	add.w	r3, r7, #12
 8006d10:	4611      	mov	r1, r2
 8006d12:	4618      	mov	r0, r3
 8006d14:	f000 fc0e 	bl	8007534 <_ZN9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS1_SaIS1_EEEC1ERKS2_>
 8006d18:	68fb      	ldr	r3, [r7, #12]
 8006d1a:	4618      	mov	r0, r3
 8006d1c:	3710      	adds	r7, #16
 8006d1e:	46bd      	mov	sp, r7
 8006d20:	bd80      	pop	{r7, pc}

08006d22 <_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET0_T_SC_SB_>:
   *  Note that the end of the output range is permitted to be contained
   *  within [first,last).
  */
  template<typename _II, typename _OI>
    inline _OI
    copy(_II __first, _II __last, _OI __result)
 8006d22:	b590      	push	{r4, r7, lr}
 8006d24:	b085      	sub	sp, #20
 8006d26:	af00      	add	r7, sp, #0
 8006d28:	60f8      	str	r0, [r7, #12]
 8006d2a:	60b9      	str	r1, [r7, #8]
 8006d2c:	607a      	str	r2, [r7, #4]
      __glibcxx_function_requires(_OutputIteratorConcept<_OI,
	    typename iterator_traits<_II>::value_type>)
      __glibcxx_requires_can_increment_range(__first, __last, __result);

      return std::__copy_move_a2<__is_move_iterator<_II>::__value>
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
 8006d2e:	68f8      	ldr	r0, [r7, #12]
 8006d30:	f000 fc10 	bl	8007554 <_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS2_SaIS2_EEEEET_S9_>
 8006d34:	4604      	mov	r4, r0
 8006d36:	68b8      	ldr	r0, [r7, #8]
 8006d38:	f000 fc0c 	bl	8007554 <_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS2_SaIS2_EEEEET_S9_>
 8006d3c:	4603      	mov	r3, r0
 8006d3e:	687a      	ldr	r2, [r7, #4]
 8006d40:	4619      	mov	r1, r3
 8006d42:	4620      	mov	r0, r4
 8006d44:	f000 fc11 	bl	800756a <_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET1_T0_SC_SB_>
 8006d48:	4603      	mov	r3, r0
    }
 8006d4a:	4618      	mov	r0, r3
 8006d4c:	3714      	adds	r7, #20
 8006d4e:	46bd      	mov	sp, r7
 8006d50:	bd90      	pop	{r4, r7, pc}

08006d52 <_ZNSt6vectorI6SymbolSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 8006d52:	b580      	push	{r7, lr}
 8006d54:	b084      	sub	sp, #16
 8006d56:	af00      	add	r7, sp, #0
 8006d58:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_finish); }
 8006d5a:	687b      	ldr	r3, [r7, #4]
 8006d5c:	1d1a      	adds	r2, r3, #4
 8006d5e:	f107 030c 	add.w	r3, r7, #12
 8006d62:	4611      	mov	r1, r2
 8006d64:	4618      	mov	r0, r3
 8006d66:	f000 fbe5 	bl	8007534 <_ZN9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS1_SaIS1_EEEC1ERKS2_>
 8006d6a:	68fb      	ldr	r3, [r7, #12]
 8006d6c:	4618      	mov	r0, r3
 8006d6e:	3710      	adds	r7, #16
 8006d70:	46bd      	mov	sp, r7
 8006d72:	bd80      	pop	{r7, pc}

08006d74 <_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS2_SaIS2_EEEES2_EvT_S8_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 8006d74:	b580      	push	{r7, lr}
 8006d76:	b084      	sub	sp, #16
 8006d78:	af00      	add	r7, sp, #0
 8006d7a:	60f8      	str	r0, [r7, #12]
 8006d7c:	60b9      	str	r1, [r7, #8]
 8006d7e:	607a      	str	r2, [r7, #4]
      _Destroy(__first, __last);
 8006d80:	68b9      	ldr	r1, [r7, #8]
 8006d82:	68f8      	ldr	r0, [r7, #12]
 8006d84:	f000 fc12 	bl	80075ac <_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS2_SaIS2_EEEEEvT_S8_>
    }
 8006d88:	bf00      	nop
 8006d8a:	3710      	adds	r7, #16
 8006d8c:	46bd      	mov	sp, r7
 8006d8e:	bd80      	pop	{r7, pc}

08006d90 <_ZSt4copyIP6SymbolS1_ET0_T_S3_S2_>:
    copy(_II __first, _II __last, _OI __result)
 8006d90:	b590      	push	{r4, r7, lr}
 8006d92:	b085      	sub	sp, #20
 8006d94:	af00      	add	r7, sp, #0
 8006d96:	60f8      	str	r0, [r7, #12]
 8006d98:	60b9      	str	r1, [r7, #8]
 8006d9a:	607a      	str	r2, [r7, #4]
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
 8006d9c:	68f8      	ldr	r0, [r7, #12]
 8006d9e:	f000 fc12 	bl	80075c6 <_ZSt12__miter_baseIP6SymbolET_S2_>
 8006da2:	4604      	mov	r4, r0
 8006da4:	68b8      	ldr	r0, [r7, #8]
 8006da6:	f000 fc0e 	bl	80075c6 <_ZSt12__miter_baseIP6SymbolET_S2_>
 8006daa:	4603      	mov	r3, r0
 8006dac:	687a      	ldr	r2, [r7, #4]
 8006dae:	4619      	mov	r1, r3
 8006db0:	4620      	mov	r0, r4
 8006db2:	f000 fc13 	bl	80075dc <_ZSt14__copy_move_a2ILb0EP6SymbolS1_ET1_T0_S3_S2_>
 8006db6:	4603      	mov	r3, r0
    }
 8006db8:	4618      	mov	r0, r3
 8006dba:	3714      	adds	r7, #20
 8006dbc:	46bd      	mov	sp, r7
 8006dbe:	bd90      	pop	{r4, r7, pc}

08006dc0 <_ZSt22__uninitialized_copy_aIP6SymbolS1_S0_ET0_T_S3_S2_RSaIT1_E>:
	}
    }

  template<typename _InputIterator, typename _ForwardIterator, typename _Tp>
    inline _ForwardIterator
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
 8006dc0:	b580      	push	{r7, lr}
 8006dc2:	b084      	sub	sp, #16
 8006dc4:	af00      	add	r7, sp, #0
 8006dc6:	60f8      	str	r0, [r7, #12]
 8006dc8:	60b9      	str	r1, [r7, #8]
 8006dca:	607a      	str	r2, [r7, #4]
 8006dcc:	603b      	str	r3, [r7, #0]
			   _ForwardIterator __result, allocator<_Tp>&)
    { return std::uninitialized_copy(__first, __last, __result); }
 8006dce:	687a      	ldr	r2, [r7, #4]
 8006dd0:	68b9      	ldr	r1, [r7, #8]
 8006dd2:	68f8      	ldr	r0, [r7, #12]
 8006dd4:	f000 fc25 	bl	8007622 <_ZSt18uninitialized_copyIP6SymbolS1_ET0_T_S3_S2_>
 8006dd8:	4603      	mov	r3, r0
 8006dda:	4618      	mov	r0, r3
 8006ddc:	3710      	adds	r7, #16
 8006dde:	46bd      	mov	sp, r7
 8006de0:	bd80      	pop	{r7, pc}

08006de2 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj4EJRKSB_EEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 8006de2:	b590      	push	{r4, r7, lr}
 8006de4:	b085      	sub	sp, #20
 8006de6:	af00      	add	r7, sp, #0
 8006de8:	60f8      	str	r0, [r7, #12]
 8006dea:	7239      	strb	r1, [r7, #8]
 8006dec:	607a      	str	r2, [r7, #4]
 8006dee:	68fb      	ldr	r3, [r7, #12]
 8006df0:	687a      	ldr	r2, [r7, #4]
 8006df2:	4621      	mov	r1, r4
 8006df4:	4618      	mov	r0, r3
 8006df6:	f000 fcac 	bl	8007752 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj4EJRKSB_EEESt16in_place_index_tIXT_EEDpOT0_>
 8006dfa:	68fb      	ldr	r3, [r7, #12]
 8006dfc:	4618      	mov	r0, r3
 8006dfe:	3714      	adds	r7, #20
 8006e00:	46bd      	mov	sp, r7
 8006e02:	bd90      	pop	{r4, r7, pc}

08006e04 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj4EJRKSB_EEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 8006e04:	b590      	push	{r4, r7, lr}
 8006e06:	b085      	sub	sp, #20
 8006e08:	af00      	add	r7, sp, #0
 8006e0a:	60f8      	str	r0, [r7, #12]
 8006e0c:	7239      	strb	r1, [r7, #8]
 8006e0e:	607a      	str	r2, [r7, #4]
 8006e10:	68fb      	ldr	r3, [r7, #12]
 8006e12:	687a      	ldr	r2, [r7, #4]
 8006e14:	4621      	mov	r1, r4
 8006e16:	4618      	mov	r0, r3
 8006e18:	f7ff ffe3 	bl	8006de2 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj4EJRKSB_EEESt16in_place_index_tIXT_EEDpOT0_>
 8006e1c:	68fb      	ldr	r3, [r7, #12]
 8006e1e:	4618      	mov	r0, r3
 8006e20:	3714      	adds	r7, #20
 8006e22:	46bd      	mov	sp, r7
 8006e24:	bd90      	pop	{r4, r7, pc}

08006e26 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj4EJRKSB_EEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 8006e26:	b590      	push	{r4, r7, lr}
 8006e28:	b085      	sub	sp, #20
 8006e2a:	af00      	add	r7, sp, #0
 8006e2c:	60f8      	str	r0, [r7, #12]
 8006e2e:	7239      	strb	r1, [r7, #8]
 8006e30:	607a      	str	r2, [r7, #4]
 8006e32:	68fb      	ldr	r3, [r7, #12]
 8006e34:	687a      	ldr	r2, [r7, #4]
 8006e36:	4621      	mov	r1, r4
 8006e38:	4618      	mov	r0, r3
 8006e3a:	f7ff ffe3 	bl	8006e04 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj4EJRKSB_EEESt16in_place_index_tIXT_EEDpOT0_>
 8006e3e:	68fb      	ldr	r3, [r7, #12]
 8006e40:	4618      	mov	r0, r3
 8006e42:	3714      	adds	r7, #20
 8006e44:	46bd      	mov	sp, r7
 8006e46:	bd90      	pop	{r4, r7, pc}

08006e48 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj4EJRKSB_EEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 8006e48:	b590      	push	{r4, r7, lr}
 8006e4a:	b085      	sub	sp, #20
 8006e4c:	af00      	add	r7, sp, #0
 8006e4e:	60f8      	str	r0, [r7, #12]
 8006e50:	7239      	strb	r1, [r7, #8]
 8006e52:	607a      	str	r2, [r7, #4]
 8006e54:	68fb      	ldr	r3, [r7, #12]
 8006e56:	687a      	ldr	r2, [r7, #4]
 8006e58:	4621      	mov	r1, r4
 8006e5a:	4618      	mov	r0, r3
 8006e5c:	f7ff ffe3 	bl	8006e26 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj4EJRKSB_EEESt16in_place_index_tIXT_EEDpOT0_>
 8006e60:	68fb      	ldr	r3, [r7, #12]
 8006e62:	4618      	mov	r0, r3
 8006e64:	3714      	adds	r7, #20
 8006e66:	46bd      	mov	sp, r7
 8006e68:	bd90      	pop	{r4, r7, pc}

08006e6a <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj4EJRKSB_EEESt16in_place_index_tIXT_EEDpOT0_>:
	_Variant_base(in_place_index_t<_Np> __i, _Args&&... __args)
 8006e6a:	b5b0      	push	{r4, r5, r7, lr}
 8006e6c:	b084      	sub	sp, #16
 8006e6e:	af00      	add	r7, sp, #0
 8006e70:	60f8      	str	r0, [r7, #12]
 8006e72:	7239      	strb	r1, [r7, #8]
 8006e74:	607a      	str	r2, [r7, #4]
	: _Base(__i, std::forward<_Args>(__args)...)
 8006e76:	68fc      	ldr	r4, [r7, #12]
 8006e78:	6878      	ldr	r0, [r7, #4]
 8006e7a:	f7fd f8cf 	bl	800401c <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>
 8006e7e:	4603      	mov	r3, r0
 8006e80:	461a      	mov	r2, r3
 8006e82:	4629      	mov	r1, r5
 8006e84:	4620      	mov	r0, r4
 8006e86:	f7ff ffdf 	bl	8006e48 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj4EJRKSB_EEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 8006e8a:	68fb      	ldr	r3, [r7, #12]
 8006e8c:	4618      	mov	r0, r3
 8006e8e:	3710      	adds	r7, #16
 8006e90:	46bd      	mov	sp, r7
 8006e92:	bdb0      	pop	{r4, r5, r7, pc}

08006e94 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKc10token_typeEE6_M_ptrEv>:
      _M_ptr() noexcept
 8006e94:	b580      	push	{r7, lr}
 8006e96:	b082      	sub	sp, #8
 8006e98:	af00      	add	r7, sp, #0
 8006e9a:	6078      	str	r0, [r7, #4]
      { return static_cast<_Tp*>(_M_addr()); }
 8006e9c:	6878      	ldr	r0, [r7, #4]
 8006e9e:	f000 fc70 	bl	8007782 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKc10token_typeEE7_M_addrEv>
 8006ea2:	4603      	mov	r3, r0
 8006ea4:	4618      	mov	r0, r3
 8006ea6:	3708      	adds	r7, #8
 8006ea8:	46bd      	mov	sp, r7
 8006eaa:	bd80      	pop	{r7, pc}

08006eac <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEE7destroyIS5_EEvPT_>:
			    _Up(std::forward<_Args>(__args)...)))
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }

      template<typename _Up>
	void
	destroy(_Up* __p)
 8006eac:	b480      	push	{r7}
 8006eae:	b083      	sub	sp, #12
 8006eb0:	af00      	add	r7, sp, #0
 8006eb2:	6078      	str	r0, [r7, #4]
 8006eb4:	6039      	str	r1, [r7, #0]
	noexcept(noexcept( __p->~_Up()))
	{ __p->~_Up(); }
 8006eb6:	bf00      	nop
 8006eb8:	370c      	adds	r7, #12
 8006eba:	46bd      	mov	sp, r7
 8006ebc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006ec0:	4770      	bx	lr

08006ec2 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEE10deallocateEPS6_j>:
      deallocate(pointer __p, size_type)
 8006ec2:	b580      	push	{r7, lr}
 8006ec4:	b084      	sub	sp, #16
 8006ec6:	af00      	add	r7, sp, #0
 8006ec8:	60f8      	str	r0, [r7, #12]
 8006eca:	60b9      	str	r1, [r7, #8]
 8006ecc:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 8006ece:	68b8      	ldr	r0, [r7, #8]
 8006ed0:	f01b fc96 	bl	8022800 <_ZdlPv>
      }
 8006ed4:	3710      	adds	r7, #16
 8006ed6:	46bd      	mov	sp, r7
 8006ed8:	bd80      	pop	{r7, pc}

08006eda <_ZNKSt13_Rb_tree_nodeISt4pairIKc10token_typeEE9_M_valptrEv>:
      _M_valptr() const
 8006eda:	b580      	push	{r7, lr}
 8006edc:	b082      	sub	sp, #8
 8006ede:	af00      	add	r7, sp, #0
 8006ee0:	6078      	str	r0, [r7, #4]
      { return _M_storage._M_ptr(); }
 8006ee2:	687b      	ldr	r3, [r7, #4]
 8006ee4:	3310      	adds	r3, #16
 8006ee6:	4618      	mov	r0, r3
 8006ee8:	f000 fc56 	bl	8007798 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKc10token_typeEE6_M_ptrEv>
 8006eec:	4603      	mov	r3, r0
 8006eee:	4618      	mov	r0, r3
 8006ef0:	3708      	adds	r7, #8
 8006ef2:	46bd      	mov	sp, r7
 8006ef4:	bd80      	pop	{r7, pc}

08006ef6 <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKc10token_typeEEEOT_RNSt16remove_referenceIS8_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8006ef6:	b480      	push	{r7}
 8006ef8:	b083      	sub	sp, #12
 8006efa:	af00      	add	r7, sp, #0
 8006efc:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8006efe:	687b      	ldr	r3, [r7, #4]
 8006f00:	4618      	mov	r0, r3
 8006f02:	370c      	adds	r7, #12
 8006f04:	46bd      	mov	sp, r7
 8006f06:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006f0a:	4770      	bx	lr

08006f0c <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_get_nodeEv>:
      _M_get_node()
 8006f0c:	b580      	push	{r7, lr}
 8006f0e:	b082      	sub	sp, #8
 8006f10:	af00      	add	r7, sp, #0
 8006f12:	6078      	str	r0, [r7, #4]
      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
 8006f14:	6878      	ldr	r0, [r7, #4]
 8006f16:	f7ff fa52 	bl	80063be <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE21_M_get_Node_allocatorEv>
 8006f1a:	4603      	mov	r3, r0
 8006f1c:	2101      	movs	r1, #1
 8006f1e:	4618      	mov	r0, r3
 8006f20:	f000 fc46 	bl	80077b0 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEE8allocateERS6_j>
 8006f24:	4603      	mov	r3, r0
 8006f26:	4618      	mov	r0, r3
 8006f28:	3708      	adds	r7, #8
 8006f2a:	46bd      	mov	sp, r7
 8006f2c:	bd80      	pop	{r7, pc}

08006f2e <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE17_M_construct_nodeIJRKS3_EEEvPSt13_Rb_tree_nodeIS3_EDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
 8006f2e:	b5b0      	push	{r4, r5, r7, lr}
 8006f30:	b084      	sub	sp, #16
 8006f32:	af00      	add	r7, sp, #0
 8006f34:	60f8      	str	r0, [r7, #12]
 8006f36:	60b9      	str	r1, [r7, #8]
 8006f38:	607a      	str	r2, [r7, #4]
	      ::new(__node) _Rb_tree_node<_Val>;
 8006f3a:	68bb      	ldr	r3, [r7, #8]
 8006f3c:	4619      	mov	r1, r3
 8006f3e:	2014      	movs	r0, #20
 8006f40:	f7fa f88b 	bl	800105a <_ZnwjPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
 8006f44:	68f8      	ldr	r0, [r7, #12]
 8006f46:	f7ff fa3a 	bl	80063be <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE21_M_get_Node_allocatorEv>
 8006f4a:	4604      	mov	r4, r0
 8006f4c:	68b8      	ldr	r0, [r7, #8]
 8006f4e:	f7ff fa41 	bl	80063d4 <_ZNSt13_Rb_tree_nodeISt4pairIKc10token_typeEE9_M_valptrEv>
 8006f52:	4605      	mov	r5, r0
 8006f54:	6878      	ldr	r0, [r7, #4]
 8006f56:	f7fd fa93 	bl	8004480 <_ZSt7forwardIRKSt4pairIKc10token_typeEEOT_RNSt16remove_referenceIS6_E4typeE>
 8006f5a:	4603      	mov	r3, r0
 8006f5c:	461a      	mov	r2, r3
 8006f5e:	4629      	mov	r1, r5
 8006f60:	4620      	mov	r0, r4
 8006f62:	f000 fc34 	bl	80077ce <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEE9constructIS4_JRKS4_EEEvRS6_PT_DpOT0_>
	}
 8006f66:	bf00      	nop
 8006f68:	3710      	adds	r7, #16
 8006f6a:	46bd      	mov	sp, r7
 8006f6c:	bdb0      	pop	{r4, r5, r7, pc}

08006f6e <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE6_M_ptrEv>:
      _M_ptr() noexcept
 8006f6e:	b580      	push	{r7, lr}
 8006f70:	b082      	sub	sp, #8
 8006f72:	af00      	add	r7, sp, #0
 8006f74:	6078      	str	r0, [r7, #4]
      { return static_cast<_Tp*>(_M_addr()); }
 8006f76:	6878      	ldr	r0, [r7, #4]
 8006f78:	f000 fc3c 	bl	80077f4 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE7_M_addrEv>
 8006f7c:	4603      	mov	r3, r0
 8006f7e:	4618      	mov	r0, r3
 8006f80:	3708      	adds	r7, #8
 8006f82:	46bd      	mov	sp, r7
 8006f84:	bd80      	pop	{r7, pc}

08006f86 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEE7destroyISB_EEvPT_>:
	destroy(_Up* __p)
 8006f86:	b580      	push	{r7, lr}
 8006f88:	b082      	sub	sp, #8
 8006f8a:	af00      	add	r7, sp, #0
 8006f8c:	6078      	str	r0, [r7, #4]
 8006f8e:	6039      	str	r1, [r7, #0]
	{ __p->~_Up(); }
 8006f90:	6838      	ldr	r0, [r7, #0]
 8006f92:	f7fa f8a4 	bl	80010de <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 8006f96:	bf00      	nop
 8006f98:	3708      	adds	r7, #8
 8006f9a:	46bd      	mov	sp, r7
 8006f9c:	bd80      	pop	{r7, pc}

08006f9e <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEE10deallocateEPSC_j>:
      deallocate(pointer __p, size_type)
 8006f9e:	b580      	push	{r7, lr}
 8006fa0:	b084      	sub	sp, #16
 8006fa2:	af00      	add	r7, sp, #0
 8006fa4:	60f8      	str	r0, [r7, #12]
 8006fa6:	60b9      	str	r1, [r7, #8]
 8006fa8:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 8006faa:	68b8      	ldr	r0, [r7, #8]
 8006fac:	f01b fc28 	bl	8022800 <_ZdlPv>
      }
 8006fb0:	3710      	adds	r7, #16
 8006fb2:	46bd      	mov	sp, r7
 8006fb4:	bd80      	pop	{r7, pc}

08006fb6 <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE9_M_valptrEv>:
      _M_valptr() const
 8006fb6:	b580      	push	{r7, lr}
 8006fb8:	b082      	sub	sp, #8
 8006fba:	af00      	add	r7, sp, #0
 8006fbc:	6078      	str	r0, [r7, #4]
      { return _M_storage._M_ptr(); }
 8006fbe:	687b      	ldr	r3, [r7, #4]
 8006fc0:	3310      	adds	r3, #16
 8006fc2:	4618      	mov	r0, r3
 8006fc4:	f000 fc21 	bl	800780a <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE6_M_ptrEv>
 8006fc8:	4603      	mov	r3, r0
 8006fca:	4618      	mov	r0, r3
 8006fcc:	3708      	adds	r7, #8
 8006fce:	46bd      	mov	sp, r7
 8006fd0:	bd80      	pop	{r7, pc}

08006fd2 <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEOT_RNSt16remove_referenceISE_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8006fd2:	b480      	push	{r7}
 8006fd4:	b083      	sub	sp, #12
 8006fd6:	af00      	add	r7, sp, #0
 8006fd8:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8006fda:	687b      	ldr	r3, [r7, #4]
 8006fdc:	4618      	mov	r0, r3
 8006fde:	370c      	adds	r7, #12
 8006fe0:	46bd      	mov	sp, r7
 8006fe2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006fe6:	4770      	bx	lr

08006fe8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_get_nodeEv>:
      _M_get_node()
 8006fe8:	b580      	push	{r7, lr}
 8006fea:	b082      	sub	sp, #8
 8006fec:	af00      	add	r7, sp, #0
 8006fee:	6078      	str	r0, [r7, #4]
      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
 8006ff0:	6878      	ldr	r0, [r7, #4]
 8006ff2:	f7ff fa8c 	bl	800650e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE21_M_get_Node_allocatorEv>
 8006ff6:	4603      	mov	r3, r0
 8006ff8:	2101      	movs	r1, #1
 8006ffa:	4618      	mov	r0, r3
 8006ffc:	f000 fc11 	bl	8007822 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEE8allocateERSC_j>
 8007000:	4603      	mov	r3, r0
 8007002:	4618      	mov	r0, r3
 8007004:	3708      	adds	r7, #8
 8007006:	46bd      	mov	sp, r7
 8007008:	bd80      	pop	{r7, pc}

0800700a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE17_M_construct_nodeIJRKS9_EEEvPSt13_Rb_tree_nodeIS9_EDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
 800700a:	b5b0      	push	{r4, r5, r7, lr}
 800700c:	b084      	sub	sp, #16
 800700e:	af00      	add	r7, sp, #0
 8007010:	60f8      	str	r0, [r7, #12]
 8007012:	60b9      	str	r1, [r7, #8]
 8007014:	607a      	str	r2, [r7, #4]
	      ::new(__node) _Rb_tree_node<_Val>;
 8007016:	68bb      	ldr	r3, [r7, #8]
 8007018:	4619      	mov	r1, r3
 800701a:	202c      	movs	r0, #44	; 0x2c
 800701c:	f7fa f81d 	bl	800105a <_ZnwjPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
 8007020:	68f8      	ldr	r0, [r7, #12]
 8007022:	f7ff fa74 	bl	800650e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE21_M_get_Node_allocatorEv>
 8007026:	4604      	mov	r4, r0
 8007028:	68b8      	ldr	r0, [r7, #8]
 800702a:	f7ff fa7b 	bl	8006524 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE9_M_valptrEv>
 800702e:	4605      	mov	r5, r0
 8007030:	6878      	ldr	r0, [r7, #4]
 8007032:	f7fd fc1b 	bl	800486c <_ZSt7forwardIRKSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEOT_RNSt16remove_referenceISC_E4typeE>
 8007036:	4603      	mov	r3, r0
 8007038:	461a      	mov	r2, r3
 800703a:	4629      	mov	r1, r5
 800703c:	4620      	mov	r0, r4
 800703e:	f000 fbff 	bl	8007840 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEE9constructISA_JRKSA_EEEvRSC_PT_DpOT0_>
	}
 8007042:	bf00      	nop
 8007044:	3710      	adds	r7, #16
 8007046:	46bd      	mov	sp, r7
 8007048:	bdb0      	pop	{r4, r5, r7, pc}

0800704a <_ZN9__gnu_cxx16__aligned_membufISt4pairIKc12double_tokenEE6_M_ptrEv>:
      _M_ptr() noexcept
 800704a:	b580      	push	{r7, lr}
 800704c:	b082      	sub	sp, #8
 800704e:	af00      	add	r7, sp, #0
 8007050:	6078      	str	r0, [r7, #4]
      { return static_cast<_Tp*>(_M_addr()); }
 8007052:	6878      	ldr	r0, [r7, #4]
 8007054:	f000 fc07 	bl	8007866 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKc12double_tokenEE7_M_addrEv>
 8007058:	4603      	mov	r3, r0
 800705a:	4618      	mov	r0, r3
 800705c:	3708      	adds	r7, #8
 800705e:	46bd      	mov	sp, r7
 8007060:	bd80      	pop	{r7, pc}

08007062 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEE7destroyIS5_EEvPT_>:
	destroy(_Up* __p)
 8007062:	b480      	push	{r7}
 8007064:	b083      	sub	sp, #12
 8007066:	af00      	add	r7, sp, #0
 8007068:	6078      	str	r0, [r7, #4]
 800706a:	6039      	str	r1, [r7, #0]
	{ __p->~_Up(); }
 800706c:	bf00      	nop
 800706e:	370c      	adds	r7, #12
 8007070:	46bd      	mov	sp, r7
 8007072:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007076:	4770      	bx	lr

08007078 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEE10deallocateEPS6_j>:
      deallocate(pointer __p, size_type)
 8007078:	b580      	push	{r7, lr}
 800707a:	b084      	sub	sp, #16
 800707c:	af00      	add	r7, sp, #0
 800707e:	60f8      	str	r0, [r7, #12]
 8007080:	60b9      	str	r1, [r7, #8]
 8007082:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 8007084:	68b8      	ldr	r0, [r7, #8]
 8007086:	f01b fbbb 	bl	8022800 <_ZdlPv>
      }
 800708a:	3710      	adds	r7, #16
 800708c:	46bd      	mov	sp, r7
 800708e:	bd80      	pop	{r7, pc}

08007090 <_ZNKSt13_Rb_tree_nodeISt4pairIKc12double_tokenEE9_M_valptrEv>:
      _M_valptr() const
 8007090:	b580      	push	{r7, lr}
 8007092:	b082      	sub	sp, #8
 8007094:	af00      	add	r7, sp, #0
 8007096:	6078      	str	r0, [r7, #4]
      { return _M_storage._M_ptr(); }
 8007098:	687b      	ldr	r3, [r7, #4]
 800709a:	3310      	adds	r3, #16
 800709c:	4618      	mov	r0, r3
 800709e:	f000 fbed 	bl	800787c <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKc12double_tokenEE6_M_ptrEv>
 80070a2:	4603      	mov	r3, r0
 80070a4:	4618      	mov	r0, r3
 80070a6:	3708      	adds	r7, #8
 80070a8:	46bd      	mov	sp, r7
 80070aa:	bd80      	pop	{r7, pc}

080070ac <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEOT_RNSt16remove_referenceIS8_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80070ac:	b480      	push	{r7}
 80070ae:	b083      	sub	sp, #12
 80070b0:	af00      	add	r7, sp, #0
 80070b2:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80070b4:	687b      	ldr	r3, [r7, #4]
 80070b6:	4618      	mov	r0, r3
 80070b8:	370c      	adds	r7, #12
 80070ba:	46bd      	mov	sp, r7
 80070bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80070c0:	4770      	bx	lr

080070c2 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_get_nodeEv>:
      _M_get_node()
 80070c2:	b580      	push	{r7, lr}
 80070c4:	b082      	sub	sp, #8
 80070c6:	af00      	add	r7, sp, #0
 80070c8:	6078      	str	r0, [r7, #4]
      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
 80070ca:	6878      	ldr	r0, [r7, #4]
 80070cc:	f7ff facc 	bl	8006668 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE21_M_get_Node_allocatorEv>
 80070d0:	4603      	mov	r3, r0
 80070d2:	2101      	movs	r1, #1
 80070d4:	4618      	mov	r0, r3
 80070d6:	f000 fbdd 	bl	8007894 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEE8allocateERS6_j>
 80070da:	4603      	mov	r3, r0
 80070dc:	4618      	mov	r0, r3
 80070de:	3708      	adds	r7, #8
 80070e0:	46bd      	mov	sp, r7
 80070e2:	bd80      	pop	{r7, pc}

080070e4 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE17_M_construct_nodeIJRKS3_EEEvPSt13_Rb_tree_nodeIS3_EDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
 80070e4:	b5b0      	push	{r4, r5, r7, lr}
 80070e6:	b084      	sub	sp, #16
 80070e8:	af00      	add	r7, sp, #0
 80070ea:	60f8      	str	r0, [r7, #12]
 80070ec:	60b9      	str	r1, [r7, #8]
 80070ee:	607a      	str	r2, [r7, #4]
	      ::new(__node) _Rb_tree_node<_Val>;
 80070f0:	68bb      	ldr	r3, [r7, #8]
 80070f2:	4619      	mov	r1, r3
 80070f4:	2014      	movs	r0, #20
 80070f6:	f7f9 ffb0 	bl	800105a <_ZnwjPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
 80070fa:	68f8      	ldr	r0, [r7, #12]
 80070fc:	f7ff fab4 	bl	8006668 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE21_M_get_Node_allocatorEv>
 8007100:	4604      	mov	r4, r0
 8007102:	68b8      	ldr	r0, [r7, #8]
 8007104:	f7ff fabb 	bl	800667e <_ZNSt13_Rb_tree_nodeISt4pairIKc12double_tokenEE9_M_valptrEv>
 8007108:	4605      	mov	r5, r0
 800710a:	6878      	ldr	r0, [r7, #4]
 800710c:	f7fd fd98 	bl	8004c40 <_ZSt7forwardIRKSt4pairIKc12double_tokenEEOT_RNSt16remove_referenceIS6_E4typeE>
 8007110:	4603      	mov	r3, r0
 8007112:	461a      	mov	r2, r3
 8007114:	4629      	mov	r1, r5
 8007116:	4620      	mov	r0, r4
 8007118:	f000 fbcb 	bl	80078b2 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEE9constructIS4_JRKS4_EEEvRS6_PT_DpOT0_>
	}
 800711c:	bf00      	nop
 800711e:	3710      	adds	r7, #16
 8007120:	46bd      	mov	sp, r7
 8007122:	bdb0      	pop	{r4, r5, r7, pc}

08007124 <_ZSt11__addressofIiEPT_RS0_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 8007124:	b480      	push	{r7}
 8007126:	b083      	sub	sp, #12
 8007128:	af00      	add	r7, sp, #0
 800712a:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 800712c:	687b      	ldr	r3, [r7, #4]
 800712e:	4618      	mov	r0, r3
 8007130:	370c      	adds	r7, #12
 8007132:	46bd      	mov	sp, r7
 8007134:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007138:	4770      	bx	lr

0800713a <_ZSt8_DestroyIiEvPT_>:
    _Destroy(_Tp* __pointer)
 800713a:	b480      	push	{r7}
 800713c:	b083      	sub	sp, #12
 800713e:	af00      	add	r7, sp, #0
 8007140:	6078      	str	r0, [r7, #4]
    { __pointer->~_Tp(); }
 8007142:	bf00      	nop
 8007144:	370c      	adds	r7, #12
 8007146:	46bd      	mov	sp, r7
 8007148:	f85d 7b04 	ldr.w	r7, [sp], #4
 800714c:	4770      	bx	lr

0800714e <_ZSt11__addressofIfEPT_RS0_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 800714e:	b480      	push	{r7}
 8007150:	b083      	sub	sp, #12
 8007152:	af00      	add	r7, sp, #0
 8007154:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 8007156:	687b      	ldr	r3, [r7, #4]
 8007158:	4618      	mov	r0, r3
 800715a:	370c      	adds	r7, #12
 800715c:	46bd      	mov	sp, r7
 800715e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007162:	4770      	bx	lr

08007164 <_ZSt8_DestroyIfEvPT_>:
    _Destroy(_Tp* __pointer)
 8007164:	b480      	push	{r7}
 8007166:	b083      	sub	sp, #12
 8007168:	af00      	add	r7, sp, #0
 800716a:	6078      	str	r0, [r7, #4]
    { __pointer->~_Tp(); }
 800716c:	bf00      	nop
 800716e:	370c      	adds	r7, #12
 8007170:	46bd      	mov	sp, r7
 8007172:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007176:	4770      	bx	lr

08007178 <_ZSt11__addressofIbEPT_RS0_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 8007178:	b480      	push	{r7}
 800717a:	b083      	sub	sp, #12
 800717c:	af00      	add	r7, sp, #0
 800717e:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 8007180:	687b      	ldr	r3, [r7, #4]
 8007182:	4618      	mov	r0, r3
 8007184:	370c      	adds	r7, #12
 8007186:	46bd      	mov	sp, r7
 8007188:	f85d 7b04 	ldr.w	r7, [sp], #4
 800718c:	4770      	bx	lr

0800718e <_ZSt8_DestroyIbEvPT_>:
    _Destroy(_Tp* __pointer)
 800718e:	b480      	push	{r7}
 8007190:	b083      	sub	sp, #12
 8007192:	af00      	add	r7, sp, #0
 8007194:	6078      	str	r0, [r7, #4]
    { __pointer->~_Tp(); }
 8007196:	bf00      	nop
 8007198:	370c      	adds	r7, #12
 800719a:	46bd      	mov	sp, r7
 800719c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80071a0:	4770      	bx	lr

080071a2 <_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 80071a2:	b480      	push	{r7}
 80071a4:	b083      	sub	sp, #12
 80071a6:	af00      	add	r7, sp, #0
 80071a8:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 80071aa:	687b      	ldr	r3, [r7, #4]
 80071ac:	4618      	mov	r0, r3
 80071ae:	370c      	adds	r7, #12
 80071b0:	46bd      	mov	sp, r7
 80071b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80071b6:	4770      	bx	lr

080071b8 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_>:
    _Destroy(_Tp* __pointer)
 80071b8:	b580      	push	{r7, lr}
 80071ba:	b082      	sub	sp, #8
 80071bc:	af00      	add	r7, sp, #0
 80071be:	6078      	str	r0, [r7, #4]
    { __pointer->~_Tp(); }
 80071c0:	6878      	ldr	r0, [r7, #4]
 80071c2:	f01b fdd2 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80071c6:	bf00      	nop
 80071c8:	3708      	adds	r7, #8
 80071ca:	46bd      	mov	sp, r7
 80071cc:	bd80      	pop	{r7, pc}

080071ce <_ZSt11__addressofISt6vectorI6SymbolSaIS1_EEEPT_RS4_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 80071ce:	b480      	push	{r7}
 80071d0:	b083      	sub	sp, #12
 80071d2:	af00      	add	r7, sp, #0
 80071d4:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 80071d6:	687b      	ldr	r3, [r7, #4]
 80071d8:	4618      	mov	r0, r3
 80071da:	370c      	adds	r7, #12
 80071dc:	46bd      	mov	sp, r7
 80071de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80071e2:	4770      	bx	lr

080071e4 <_ZSt8_DestroyISt6vectorI6SymbolSaIS1_EEEvPT_>:
    _Destroy(_Tp* __pointer)
 80071e4:	b580      	push	{r7, lr}
 80071e6:	b082      	sub	sp, #8
 80071e8:	af00      	add	r7, sp, #0
 80071ea:	6078      	str	r0, [r7, #4]
    { __pointer->~_Tp(); }
 80071ec:	6878      	ldr	r0, [r7, #4]
 80071ee:	f000 fb73 	bl	80078d8 <_ZNSt6vectorI6SymbolSaIS0_EED1Ev>
 80071f2:	bf00      	nop
 80071f4:	3708      	adds	r7, #8
 80071f6:	46bd      	mov	sp, r7
 80071f8:	bd80      	pop	{r7, pc}

080071fa <_ZNSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IJRKS7_EEESt16in_place_index_tILj0EEDpOT_>:
	_Uninitialized(in_place_index_t<0>, _Args&&... __args)
 80071fa:	b590      	push	{r4, r7, lr}
 80071fc:	b085      	sub	sp, #20
 80071fe:	af00      	add	r7, sp, #0
 8007200:	60f8      	str	r0, [r7, #12]
 8007202:	7239      	strb	r1, [r7, #8]
 8007204:	607a      	str	r2, [r7, #4]
	    _Type(std::forward<_Args>(__args)...);
 8007206:	6878      	ldr	r0, [r7, #4]
 8007208:	f7fc fec8 	bl	8003f9c <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 800720c:	4604      	mov	r4, r0
	  ::new ((void*)std::addressof(_M_storage))
 800720e:	68fb      	ldr	r3, [r7, #12]
 8007210:	4618      	mov	r0, r3
 8007212:	f000 fb7c 	bl	800790e <_ZSt9addressofIN9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEPT_RS9_>
 8007216:	4603      	mov	r3, r0
 8007218:	4619      	mov	r1, r3
 800721a:	2018      	movs	r0, #24
 800721c:	f7f9 ff1d 	bl	800105a <_ZnwjPv>
 8007220:	4603      	mov	r3, r0
 8007222:	4621      	mov	r1, r4
 8007224:	4618      	mov	r0, r3
 8007226:	f01b ff61 	bl	80230ec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
	}
 800722a:	68fb      	ldr	r3, [r7, #12]
 800722c:	4618      	mov	r0, r3
 800722e:	3714      	adds	r7, #20
 8007230:	46bd      	mov	sp, r7
 8007232:	bd90      	pop	{r4, r7, pc}

08007234 <_ZNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1IJRKS7_EEESt16in_place_index_tILj0EEDpOT_>:
	constexpr _Variadic_union(in_place_index_t<0>, _Args&&... __args)
 8007234:	b5b0      	push	{r4, r5, r7, lr}
 8007236:	b084      	sub	sp, #16
 8007238:	af00      	add	r7, sp, #0
 800723a:	60f8      	str	r0, [r7, #12]
 800723c:	7239      	strb	r1, [r7, #8]
 800723e:	607a      	str	r2, [r7, #4]
	: _M_first(in_place_index<0>, std::forward<_Args>(__args)...)
 8007240:	68fc      	ldr	r4, [r7, #12]
 8007242:	6878      	ldr	r0, [r7, #4]
 8007244:	f7fc feaa 	bl	8003f9c <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 8007248:	4603      	mov	r3, r0
 800724a:	461a      	mov	r2, r3
 800724c:	4629      	mov	r1, r5
 800724e:	4620      	mov	r0, r4
 8007250:	f7ff ffd3 	bl	80071fa <_ZNSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IJRKS7_EEESt16in_place_index_tILj0EEDpOT_>
	{ }
 8007254:	68fb      	ldr	r3, [r7, #12]
 8007256:	4618      	mov	r0, r3
 8007258:	3710      	adds	r7, #16
 800725a:	46bd      	mov	sp, r7
 800725c:	bdb0      	pop	{r4, r5, r7, pc}

0800725e <_ZNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj1EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variadic_union(in_place_index_t<_Np>, _Args&&... __args)
 800725e:	b5b0      	push	{r4, r5, r7, lr}
 8007260:	b084      	sub	sp, #16
 8007262:	af00      	add	r7, sp, #0
 8007264:	60f8      	str	r0, [r7, #12]
 8007266:	7239      	strb	r1, [r7, #8]
 8007268:	607a      	str	r2, [r7, #4]
	: _M_rest(in_place_index<_Np-1>, std::forward<_Args>(__args)...)
 800726a:	68fc      	ldr	r4, [r7, #12]
 800726c:	6878      	ldr	r0, [r7, #4]
 800726e:	f7fc fe95 	bl	8003f9c <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 8007272:	4603      	mov	r3, r0
 8007274:	461a      	mov	r2, r3
 8007276:	4629      	mov	r1, r5
 8007278:	4620      	mov	r0, r4
 800727a:	f7ff ffdb 	bl	8007234 <_ZNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1IJRKS7_EEESt16in_place_index_tILj0EEDpOT_>
	{ }
 800727e:	68fb      	ldr	r3, [r7, #12]
 8007280:	4618      	mov	r0, r3
 8007282:	3710      	adds	r7, #16
 8007284:	46bd      	mov	sp, r7
 8007286:	bdb0      	pop	{r4, r5, r7, pc}

08007288 <_ZNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj2EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variadic_union(in_place_index_t<_Np>, _Args&&... __args)
 8007288:	b5b0      	push	{r4, r5, r7, lr}
 800728a:	b084      	sub	sp, #16
 800728c:	af00      	add	r7, sp, #0
 800728e:	60f8      	str	r0, [r7, #12]
 8007290:	7239      	strb	r1, [r7, #8]
 8007292:	607a      	str	r2, [r7, #4]
	: _M_rest(in_place_index<_Np-1>, std::forward<_Args>(__args)...)
 8007294:	68fc      	ldr	r4, [r7, #12]
 8007296:	6878      	ldr	r0, [r7, #4]
 8007298:	f7fc fe80 	bl	8003f9c <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 800729c:	4603      	mov	r3, r0
 800729e:	461a      	mov	r2, r3
 80072a0:	4629      	mov	r1, r5
 80072a2:	4620      	mov	r0, r4
 80072a4:	f7ff ffdb 	bl	800725e <_ZNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj1EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 80072a8:	68fb      	ldr	r3, [r7, #12]
 80072aa:	4618      	mov	r0, r3
 80072ac:	3710      	adds	r7, #16
 80072ae:	46bd      	mov	sp, r7
 80072b0:	bdb0      	pop	{r4, r5, r7, pc}

080072b2 <_ZNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj3EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variadic_union(in_place_index_t<_Np>, _Args&&... __args)
 80072b2:	b5b0      	push	{r4, r5, r7, lr}
 80072b4:	b084      	sub	sp, #16
 80072b6:	af00      	add	r7, sp, #0
 80072b8:	60f8      	str	r0, [r7, #12]
 80072ba:	7239      	strb	r1, [r7, #8]
 80072bc:	607a      	str	r2, [r7, #4]
	: _M_rest(in_place_index<_Np-1>, std::forward<_Args>(__args)...)
 80072be:	68fc      	ldr	r4, [r7, #12]
 80072c0:	6878      	ldr	r0, [r7, #4]
 80072c2:	f7fc fe6b 	bl	8003f9c <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 80072c6:	4603      	mov	r3, r0
 80072c8:	461a      	mov	r2, r3
 80072ca:	4629      	mov	r1, r5
 80072cc:	4620      	mov	r0, r4
 80072ce:	f7ff ffdb 	bl	8007288 <_ZNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj2EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 80072d2:	68fb      	ldr	r3, [r7, #12]
 80072d4:	4618      	mov	r0, r3
 80072d6:	3710      	adds	r7, #16
 80072d8:	46bd      	mov	sp, r7
 80072da:	bdb0      	pop	{r4, r5, r7, pc}

080072dc <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj3EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variant_storage(in_place_index_t<_Np>, _Args&&... __args)
 80072dc:	b5b0      	push	{r4, r5, r7, lr}
 80072de:	b084      	sub	sp, #16
 80072e0:	af00      	add	r7, sp, #0
 80072e2:	60f8      	str	r0, [r7, #12]
 80072e4:	7239      	strb	r1, [r7, #8]
 80072e6:	607a      	str	r2, [r7, #4]
	_M_index(_Np)
 80072e8:	68fc      	ldr	r4, [r7, #12]
 80072ea:	6878      	ldr	r0, [r7, #4]
 80072ec:	f7fc fe56 	bl	8003f9c <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 80072f0:	4603      	mov	r3, r0
 80072f2:	461a      	mov	r2, r3
 80072f4:	4629      	mov	r1, r5
 80072f6:	4620      	mov	r0, r4
 80072f8:	f7ff ffdb 	bl	80072b2 <_ZNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj3EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>
 80072fc:	68fb      	ldr	r3, [r7, #12]
 80072fe:	2203      	movs	r2, #3
 8007300:	761a      	strb	r2, [r3, #24]
	{ }
 8007302:	68fb      	ldr	r3, [r7, #12]
 8007304:	4618      	mov	r0, r3
 8007306:	3710      	adds	r7, #16
 8007308:	46bd      	mov	sp, r7
 800730a:	bdb0      	pop	{r4, r5, r7, pc}

0800730c <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSEOSE_EUlOT_T0_E_JRiSt17integral_constantIjLj0EEEESG_St14__invoke_otherOSI_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800730c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007310:	b084      	sub	sp, #16
 8007312:	af00      	add	r7, sp, #0
 8007314:	7338      	strb	r0, [r7, #12]
 8007316:	60b9      	str	r1, [r7, #8]
 8007318:	607a      	str	r2, [r7, #4]
 800731a:	603b      	str	r3, [r7, #0]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800731c:	68b8      	ldr	r0, [r7, #8]
 800731e:	f7ff fc22 	bl	8006b66 <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 8007322:	4604      	mov	r4, r0
 8007324:	6878      	ldr	r0, [r7, #4]
 8007326:	f7fe fbd2 	bl	8005ace <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 800732a:	4605      	mov	r5, r0
 800732c:	6838      	ldr	r0, [r7, #0]
 800732e:	f7fc fd98 	bl	8003e62 <_ZSt7forwardISt17integral_constantIjLj0EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8007332:	4632      	mov	r2, r6
 8007334:	4629      	mov	r1, r5
 8007336:	4620      	mov	r0, r4
 8007338:	f000 faf5 	bl	8007926 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_ENUlOT_T0_E_clIRiSt17integral_constantIjLj0EEEENS0_20__variant_idx_cookieESF_SG_>
 800733c:	4643      	mov	r3, r8
 800733e:	4618      	mov	r0, r3
 8007340:	3710      	adds	r7, #16
 8007342:	46bd      	mov	sp, r7
 8007344:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08007348 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSEOSE_EUlOT_T0_E_JRfSt17integral_constantIjLj1EEEESG_St14__invoke_otherOSI_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8007348:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800734c:	b084      	sub	sp, #16
 800734e:	af00      	add	r7, sp, #0
 8007350:	7338      	strb	r0, [r7, #12]
 8007352:	60b9      	str	r1, [r7, #8]
 8007354:	607a      	str	r2, [r7, #4]
 8007356:	603b      	str	r3, [r7, #0]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8007358:	68b8      	ldr	r0, [r7, #8]
 800735a:	f7ff fc04 	bl	8006b66 <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 800735e:	4604      	mov	r4, r0
 8007360:	6878      	ldr	r0, [r7, #4]
 8007362:	f7fe fbd6 	bl	8005b12 <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 8007366:	4605      	mov	r5, r0
 8007368:	6838      	ldr	r0, [r7, #0]
 800736a:	f7fc fdae 	bl	8003eca <_ZSt7forwardISt17integral_constantIjLj1EEEOT_RNSt16remove_referenceIS2_E4typeE>
 800736e:	4632      	mov	r2, r6
 8007370:	4629      	mov	r1, r5
 8007372:	4620      	mov	r0, r4
 8007374:	f000 fb1e 	bl	80079b4 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_ENUlOT_T0_E_clIRfSt17integral_constantIjLj1EEEENS0_20__variant_idx_cookieESF_SG_>
 8007378:	4643      	mov	r3, r8
 800737a:	4618      	mov	r0, r3
 800737c:	3710      	adds	r7, #16
 800737e:	46bd      	mov	sp, r7
 8007380:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08007384 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSEOSE_EUlOT_T0_E_JRbSt17integral_constantIjLj2EEEESG_St14__invoke_otherOSI_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8007384:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007388:	b084      	sub	sp, #16
 800738a:	af00      	add	r7, sp, #0
 800738c:	7338      	strb	r0, [r7, #12]
 800738e:	60b9      	str	r1, [r7, #8]
 8007390:	607a      	str	r2, [r7, #4]
 8007392:	603b      	str	r3, [r7, #0]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8007394:	68b8      	ldr	r0, [r7, #8]
 8007396:	f7ff fbe6 	bl	8006b66 <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 800739a:	4604      	mov	r4, r0
 800739c:	6878      	ldr	r0, [r7, #4]
 800739e:	f7fe fbda 	bl	8005b56 <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
 80073a2:	4605      	mov	r5, r0
 80073a4:	6838      	ldr	r0, [r7, #0]
 80073a6:	f7fc fdc4 	bl	8003f32 <_ZSt7forwardISt17integral_constantIjLj2EEEOT_RNSt16remove_referenceIS2_E4typeE>
 80073aa:	4632      	mov	r2, r6
 80073ac:	4629      	mov	r1, r5
 80073ae:	4620      	mov	r0, r4
 80073b0:	f000 fb47 	bl	8007a42 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_ENUlOT_T0_E_clIRbSt17integral_constantIjLj2EEEENS0_20__variant_idx_cookieESF_SG_>
 80073b4:	4643      	mov	r3, r8
 80073b6:	4618      	mov	r0, r3
 80073b8:	3710      	adds	r7, #16
 80073ba:	46bd      	mov	sp, r7
 80073bc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080073c0 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSEOSE_EUlOT_T0_E_JRS9_St17integral_constantIjLj3EEEESG_St14__invoke_otherOSI_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 80073c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80073c4:	b084      	sub	sp, #16
 80073c6:	af00      	add	r7, sp, #0
 80073c8:	7338      	strb	r0, [r7, #12]
 80073ca:	60b9      	str	r1, [r7, #8]
 80073cc:	607a      	str	r2, [r7, #4]
 80073ce:	603b      	str	r3, [r7, #0]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 80073d0:	68b8      	ldr	r0, [r7, #8]
 80073d2:	f7ff fbc8 	bl	8006b66 <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 80073d6:	4604      	mov	r4, r0
 80073d8:	6878      	ldr	r0, [r7, #4]
 80073da:	f7fe fbea 	bl	8005bb2 <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 80073de:	4605      	mov	r5, r0
 80073e0:	6838      	ldr	r0, [r7, #0]
 80073e2:	f7fc fde6 	bl	8003fb2 <_ZSt7forwardISt17integral_constantIjLj3EEEOT_RNSt16remove_referenceIS2_E4typeE>
 80073e6:	4632      	mov	r2, r6
 80073e8:	4629      	mov	r1, r5
 80073ea:	4620      	mov	r0, r4
 80073ec:	f000 fb71 	bl	8007ad2 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_ENUlOT_T0_E_clIRS7_St17integral_constantIjLj3EEEENS0_20__variant_idx_cookieESF_SG_>
 80073f0:	4643      	mov	r3, r8
 80073f2:	4618      	mov	r0, r3
 80073f4:	3710      	adds	r7, #16
 80073f6:	46bd      	mov	sp, r7
 80073f8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080073fc <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSEOSE_EUlOT_T0_E_JRSD_St17integral_constantIjLj4EEEESG_St14__invoke_otherOSI_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 80073fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007400:	b084      	sub	sp, #16
 8007402:	af00      	add	r7, sp, #0
 8007404:	7338      	strb	r0, [r7, #12]
 8007406:	60b9      	str	r1, [r7, #8]
 8007408:	607a      	str	r2, [r7, #4]
 800740a:	603b      	str	r3, [r7, #0]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800740c:	68b8      	ldr	r0, [r7, #8]
 800740e:	f7ff fbaa 	bl	8006b66 <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 8007412:	4604      	mov	r4, r0
 8007414:	6878      	ldr	r0, [r7, #4]
 8007416:	f7fe fbfa 	bl	8005c0e <_ZSt7forwardIRSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS5_E4typeE>
 800741a:	4605      	mov	r5, r0
 800741c:	6838      	ldr	r0, [r7, #0]
 800741e:	f7fc fe08 	bl	8004032 <_ZSt7forwardISt17integral_constantIjLj4EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8007422:	4632      	mov	r2, r6
 8007424:	4629      	mov	r1, r5
 8007426:	4620      	mov	r0, r4
 8007428:	f000 fb9c 	bl	8007b64 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_ENUlOT_T0_E_clIRSB_St17integral_constantIjLj4EEEENS0_20__variant_idx_cookieESF_SG_>
 800742c:	4643      	mov	r3, r8
 800742e:	4618      	mov	r0, r3
 8007430:	3710      	adds	r7, #16
 8007432:	46bd      	mov	sp, r7
 8007434:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08007438 <_ZNSt6vectorI6SymbolSaIS0_EE15_M_erase_at_endEPS0_>:
      // Internal erase functions follow.

      // Called by erase(q1,q2), clear(), resize(), _M_fill_assign,
      // _M_assign_aux.
      void
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
 8007438:	b590      	push	{r4, r7, lr}
 800743a:	b085      	sub	sp, #20
 800743c:	af00      	add	r7, sp, #0
 800743e:	6078      	str	r0, [r7, #4]
 8007440:	6039      	str	r1, [r7, #0]
      {
	if (size_type __n = this->_M_impl._M_finish - __pos)
 8007442:	687b      	ldr	r3, [r7, #4]
 8007444:	685a      	ldr	r2, [r3, #4]
 8007446:	683b      	ldr	r3, [r7, #0]
 8007448:	1ad3      	subs	r3, r2, r3
 800744a:	115b      	asrs	r3, r3, #5
 800744c:	60fb      	str	r3, [r7, #12]
 800744e:	68fb      	ldr	r3, [r7, #12]
 8007450:	2b00      	cmp	r3, #0
 8007452:	d00e      	beq.n	8007472 <_ZNSt6vectorI6SymbolSaIS0_EE15_M_erase_at_endEPS0_+0x3a>
	  {
	    std::_Destroy(__pos, this->_M_impl._M_finish,
 8007454:	687b      	ldr	r3, [r7, #4]
 8007456:	685c      	ldr	r4, [r3, #4]
			  _M_get_Tp_allocator());
 8007458:	687b      	ldr	r3, [r7, #4]
 800745a:	4618      	mov	r0, r3
 800745c:	f7ff fb8e 	bl	8006b7c <_ZNSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 8007460:	4603      	mov	r3, r0
	    std::_Destroy(__pos, this->_M_impl._M_finish,
 8007462:	461a      	mov	r2, r3
 8007464:	4621      	mov	r1, r4
 8007466:	6838      	ldr	r0, [r7, #0]
 8007468:	f7ff fc3d 	bl	8006ce6 <_ZSt8_DestroyIP6SymbolS0_EvT_S2_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
 800746c:	687b      	ldr	r3, [r7, #4]
 800746e:	683a      	ldr	r2, [r7, #0]
 8007470:	605a      	str	r2, [r3, #4]
	    _GLIBCXX_ASAN_ANNOTATE_SHRINK(__n);
	  }
      }
 8007472:	bf00      	nop
 8007474:	3714      	adds	r7, #20
 8007476:	46bd      	mov	sp, r7
 8007478:	bd90      	pop	{r4, r7, pc}

0800747a <_ZNSt16allocator_traitsISaI6SymbolEE10deallocateERS1_PS0_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 800747a:	b580      	push	{r7, lr}
 800747c:	b084      	sub	sp, #16
 800747e:	af00      	add	r7, sp, #0
 8007480:	60f8      	str	r0, [r7, #12]
 8007482:	60b9      	str	r1, [r7, #8]
 8007484:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 8007486:	687a      	ldr	r2, [r7, #4]
 8007488:	68b9      	ldr	r1, [r7, #8]
 800748a:	68f8      	ldr	r0, [r7, #12]
 800748c:	f000 fbb3 	bl	8007bf6 <_ZN9__gnu_cxx13new_allocatorI6SymbolE10deallocateEPS1_j>
 8007490:	bf00      	nop
 8007492:	3710      	adds	r7, #16
 8007494:	46bd      	mov	sp, r7
 8007496:	bd80      	pop	{r7, pc}

08007498 <_ZSt18__do_alloc_on_copyISaI6SymbolEEvRT_RKS2_St17integral_constantIbLb0EE>:
    __do_alloc_on_copy(_Alloc&, const _Alloc&, false_type)
 8007498:	b480      	push	{r7}
 800749a:	b085      	sub	sp, #20
 800749c:	af00      	add	r7, sp, #0
 800749e:	60f8      	str	r0, [r7, #12]
 80074a0:	60b9      	str	r1, [r7, #8]
 80074a2:	713a      	strb	r2, [r7, #4]
    { }
 80074a4:	bf00      	nop
 80074a6:	3714      	adds	r7, #20
 80074a8:	46bd      	mov	sp, r7
 80074aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80074ae:	4770      	bx	lr

080074b0 <_ZN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS1_SaIS1_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 80074b0:	b480      	push	{r7}
 80074b2:	b083      	sub	sp, #12
 80074b4:	af00      	add	r7, sp, #0
 80074b6:	6078      	str	r0, [r7, #4]
 80074b8:	6039      	str	r1, [r7, #0]
      : _M_current(__i) { }
 80074ba:	683b      	ldr	r3, [r7, #0]
 80074bc:	681a      	ldr	r2, [r3, #0]
 80074be:	687b      	ldr	r3, [r7, #4]
 80074c0:	601a      	str	r2, [r3, #0]
 80074c2:	687b      	ldr	r3, [r7, #4]
 80074c4:	4618      	mov	r0, r3
 80074c6:	370c      	adds	r7, #12
 80074c8:	46bd      	mov	sp, r7
 80074ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80074ce:	4770      	bx	lr

080074d0 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE11_M_allocateEj>:
      _M_allocate(size_t __n)
 80074d0:	b580      	push	{r7, lr}
 80074d2:	b082      	sub	sp, #8
 80074d4:	af00      	add	r7, sp, #0
 80074d6:	6078      	str	r0, [r7, #4]
 80074d8:	6039      	str	r1, [r7, #0]
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 80074da:	683b      	ldr	r3, [r7, #0]
 80074dc:	2b00      	cmp	r3, #0
 80074de:	d006      	beq.n	80074ee <_ZNSt12_Vector_baseI6SymbolSaIS0_EE11_M_allocateEj+0x1e>
 80074e0:	687b      	ldr	r3, [r7, #4]
 80074e2:	6839      	ldr	r1, [r7, #0]
 80074e4:	4618      	mov	r0, r3
 80074e6:	f000 fb92 	bl	8007c0e <_ZNSt16allocator_traitsISaI6SymbolEE8allocateERS1_j>
 80074ea:	4603      	mov	r3, r0
 80074ec:	e000      	b.n	80074f0 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE11_M_allocateEj+0x20>
 80074ee:	2300      	movs	r3, #0
      }
 80074f0:	4618      	mov	r0, r3
 80074f2:	3708      	adds	r7, #8
 80074f4:	46bd      	mov	sp, r7
 80074f6:	bd80      	pop	{r7, pc}

080074f8 <_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS2_SaIS2_EEEEPS2_S2_ET0_T_SB_SA_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
 80074f8:	b580      	push	{r7, lr}
 80074fa:	b084      	sub	sp, #16
 80074fc:	af00      	add	r7, sp, #0
 80074fe:	60f8      	str	r0, [r7, #12]
 8007500:	60b9      	str	r1, [r7, #8]
 8007502:	607a      	str	r2, [r7, #4]
 8007504:	603b      	str	r3, [r7, #0]
    { return std::uninitialized_copy(__first, __last, __result); }
 8007506:	687a      	ldr	r2, [r7, #4]
 8007508:	68b9      	ldr	r1, [r7, #8]
 800750a:	68f8      	ldr	r0, [r7, #12]
 800750c:	f000 fb8e 	bl	8007c2c <_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_>
 8007510:	4603      	mov	r3, r0
 8007512:	4618      	mov	r0, r3
 8007514:	3710      	adds	r7, #16
 8007516:	46bd      	mov	sp, r7
 8007518:	bd80      	pop	{r7, pc}

0800751a <_ZSt8_DestroyIP6SymbolEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 800751a:	b580      	push	{r7, lr}
 800751c:	b082      	sub	sp, #8
 800751e:	af00      	add	r7, sp, #0
 8007520:	6078      	str	r0, [r7, #4]
 8007522:	6039      	str	r1, [r7, #0]
	__destroy(__first, __last);
 8007524:	6839      	ldr	r1, [r7, #0]
 8007526:	6878      	ldr	r0, [r7, #4]
 8007528:	f000 fb92 	bl	8007c50 <_ZNSt12_Destroy_auxILb0EE9__destroyIP6SymbolEEvT_S4_>
    }
 800752c:	bf00      	nop
 800752e:	3708      	adds	r7, #8
 8007530:	46bd      	mov	sp, r7
 8007532:	bd80      	pop	{r7, pc}

08007534 <_ZN9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 8007534:	b480      	push	{r7}
 8007536:	b083      	sub	sp, #12
 8007538:	af00      	add	r7, sp, #0
 800753a:	6078      	str	r0, [r7, #4]
 800753c:	6039      	str	r1, [r7, #0]
      : _M_current(__i) { }
 800753e:	683b      	ldr	r3, [r7, #0]
 8007540:	681a      	ldr	r2, [r3, #0]
 8007542:	687b      	ldr	r3, [r7, #4]
 8007544:	601a      	str	r2, [r3, #0]
 8007546:	687b      	ldr	r3, [r7, #4]
 8007548:	4618      	mov	r0, r3
 800754a:	370c      	adds	r7, #12
 800754c:	46bd      	mov	sp, r7
 800754e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007552:	4770      	bx	lr

08007554 <_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS2_SaIS2_EEEEET_S9_>:

  // Fallback implementation of the function in bits/stl_iterator.h used to
  // remove the move_iterator wrapper.
  template<typename _Iterator>
    inline _Iterator
    __miter_base(_Iterator __it)
 8007554:	b480      	push	{r7}
 8007556:	b083      	sub	sp, #12
 8007558:	af00      	add	r7, sp, #0
 800755a:	6078      	str	r0, [r7, #4]
    { return __it; }
 800755c:	687b      	ldr	r3, [r7, #4]
 800755e:	4618      	mov	r0, r3
 8007560:	370c      	adds	r7, #12
 8007562:	46bd      	mov	sp, r7
 8007564:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007568:	4770      	bx	lr

0800756a <_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET1_T0_SC_SB_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
 800756a:	b5b0      	push	{r4, r5, r7, lr}
 800756c:	b084      	sub	sp, #16
 800756e:	af00      	add	r7, sp, #0
 8007570:	60f8      	str	r0, [r7, #12]
 8007572:	60b9      	str	r1, [r7, #8]
 8007574:	607a      	str	r2, [r7, #4]
      return std::__niter_wrap(__result,
 8007576:	68f8      	ldr	r0, [r7, #12]
 8007578:	f000 fb82 	bl	8007c80 <_ZSt12__niter_baseIPK6SymbolSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE>
 800757c:	4604      	mov	r4, r0
 800757e:	68b8      	ldr	r0, [r7, #8]
 8007580:	f000 fb7e 	bl	8007c80 <_ZSt12__niter_baseIPK6SymbolSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE>
 8007584:	4605      	mov	r5, r0
 8007586:	6878      	ldr	r0, [r7, #4]
 8007588:	f000 fb88 	bl	8007c9c <_ZSt12__niter_baseIP6SymbolSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE>
 800758c:	4603      	mov	r3, r0
 800758e:	461a      	mov	r2, r3
 8007590:	4629      	mov	r1, r5
 8007592:	4620      	mov	r0, r4
 8007594:	f000 fb90 	bl	8007cb8 <_ZSt13__copy_move_aILb0EPK6SymbolPS0_ET1_T0_S5_S4_>
 8007598:	4603      	mov	r3, r0
 800759a:	4619      	mov	r1, r3
 800759c:	6878      	ldr	r0, [r7, #4]
 800759e:	f000 fb9d 	bl	8007cdc <_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS2_SaIS2_EEEES3_ET_S8_T0_>
 80075a2:	4603      	mov	r3, r0
    }
 80075a4:	4618      	mov	r0, r3
 80075a6:	3710      	adds	r7, #16
 80075a8:	46bd      	mov	sp, r7
 80075aa:	bdb0      	pop	{r4, r5, r7, pc}

080075ac <_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS2_SaIS2_EEEEEvT_S8_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 80075ac:	b580      	push	{r7, lr}
 80075ae:	b082      	sub	sp, #8
 80075b0:	af00      	add	r7, sp, #0
 80075b2:	6078      	str	r0, [r7, #4]
 80075b4:	6039      	str	r1, [r7, #0]
	__destroy(__first, __last);
 80075b6:	6839      	ldr	r1, [r7, #0]
 80075b8:	6878      	ldr	r0, [r7, #4]
 80075ba:	f000 fba6 	bl	8007d0a <_ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS4_SaIS4_EEEEEEvT_SA_>
    }
 80075be:	bf00      	nop
 80075c0:	3708      	adds	r7, #8
 80075c2:	46bd      	mov	sp, r7
 80075c4:	bd80      	pop	{r7, pc}

080075c6 <_ZSt12__miter_baseIP6SymbolET_S2_>:
    __miter_base(_Iterator __it)
 80075c6:	b480      	push	{r7}
 80075c8:	b083      	sub	sp, #12
 80075ca:	af00      	add	r7, sp, #0
 80075cc:	6078      	str	r0, [r7, #4]
    { return __it; }
 80075ce:	687b      	ldr	r3, [r7, #4]
 80075d0:	4618      	mov	r0, r3
 80075d2:	370c      	adds	r7, #12
 80075d4:	46bd      	mov	sp, r7
 80075d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80075da:	4770      	bx	lr

080075dc <_ZSt14__copy_move_a2ILb0EP6SymbolS1_ET1_T0_S3_S2_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
 80075dc:	b5b0      	push	{r4, r5, r7, lr}
 80075de:	b084      	sub	sp, #16
 80075e0:	af00      	add	r7, sp, #0
 80075e2:	60f8      	str	r0, [r7, #12]
 80075e4:	60b9      	str	r1, [r7, #8]
 80075e6:	607a      	str	r2, [r7, #4]
      return std::__niter_wrap(__result,
 80075e8:	68f8      	ldr	r0, [r7, #12]
 80075ea:	f000 fbb1 	bl	8007d50 <_ZSt12__niter_baseIP6SymbolET_S2_>
 80075ee:	4604      	mov	r4, r0
 80075f0:	68b8      	ldr	r0, [r7, #8]
 80075f2:	f000 fbad 	bl	8007d50 <_ZSt12__niter_baseIP6SymbolET_S2_>
 80075f6:	4605      	mov	r5, r0
 80075f8:	687b      	ldr	r3, [r7, #4]
 80075fa:	4618      	mov	r0, r3
 80075fc:	f000 fba8 	bl	8007d50 <_ZSt12__niter_baseIP6SymbolET_S2_>
 8007600:	4603      	mov	r3, r0
 8007602:	461a      	mov	r2, r3
 8007604:	4629      	mov	r1, r5
 8007606:	4620      	mov	r0, r4
 8007608:	f000 fbad 	bl	8007d66 <_ZSt13__copy_move_aILb0EP6SymbolS1_ET1_T0_S3_S2_>
 800760c:	4602      	mov	r2, r0
 800760e:	1d3b      	adds	r3, r7, #4
 8007610:	4611      	mov	r1, r2
 8007612:	4618      	mov	r0, r3
 8007614:	f000 fbb9 	bl	8007d8a <_ZSt12__niter_wrapIP6SymbolET_RKS2_S2_>
 8007618:	4603      	mov	r3, r0
    }
 800761a:	4618      	mov	r0, r3
 800761c:	3710      	adds	r7, #16
 800761e:	46bd      	mov	sp, r7
 8007620:	bdb0      	pop	{r4, r5, r7, pc}

08007622 <_ZSt18uninitialized_copyIP6SymbolS1_ET0_T_S3_S2_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
 8007622:	b580      	push	{r7, lr}
 8007624:	b086      	sub	sp, #24
 8007626:	af00      	add	r7, sp, #0
 8007628:	60f8      	str	r0, [r7, #12]
 800762a:	60b9      	str	r1, [r7, #8]
 800762c:	607a      	str	r2, [r7, #4]
      const bool __assignable = is_assignable<_RefType2, _RefType1>::value;
 800762e:	2301      	movs	r3, #1
 8007630:	75fb      	strb	r3, [r7, #23]
	__uninit_copy(__first, __last, __result);
 8007632:	687a      	ldr	r2, [r7, #4]
 8007634:	68b9      	ldr	r1, [r7, #8]
 8007636:	68f8      	ldr	r0, [r7, #12]
 8007638:	f000 fbb3 	bl	8007da2 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIP6SymbolS3_EET0_T_S5_S4_>
 800763c:	4603      	mov	r3, r0
    }
 800763e:	4618      	mov	r0, r3
 8007640:	3718      	adds	r7, #24
 8007642:	46bd      	mov	sp, r7
 8007644:	bd80      	pop	{r7, pc}

08007646 <_ZNSt8__detail9__variant14_UninitializedISt6vectorI6SymbolSaIS3_EELb0EEC1IJRKS5_EEESt16in_place_index_tILj0EEDpOT_>:
	_Uninitialized(in_place_index_t<0>, _Args&&... __args)
 8007646:	b590      	push	{r4, r7, lr}
 8007648:	b085      	sub	sp, #20
 800764a:	af00      	add	r7, sp, #0
 800764c:	60f8      	str	r0, [r7, #12]
 800764e:	7239      	strb	r1, [r7, #8]
 8007650:	607a      	str	r2, [r7, #4]
	    _Type(std::forward<_Args>(__args)...);
 8007652:	6878      	ldr	r0, [r7, #4]
 8007654:	f7fc fce2 	bl	800401c <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>
 8007658:	4604      	mov	r4, r0
	  ::new ((void*)std::addressof(_M_storage))
 800765a:	68fb      	ldr	r3, [r7, #12]
 800765c:	4618      	mov	r0, r3
 800765e:	f000 fbc0 	bl	8007de2 <_ZSt9addressofIN9__gnu_cxx16__aligned_membufISt6vectorI6SymbolSaIS3_EEEEEPT_RS7_>
 8007662:	4603      	mov	r3, r0
 8007664:	4619      	mov	r1, r3
 8007666:	200c      	movs	r0, #12
 8007668:	f7f9 fcf7 	bl	800105a <_ZnwjPv>
 800766c:	4603      	mov	r3, r0
 800766e:	4621      	mov	r1, r4
 8007670:	4618      	mov	r0, r3
 8007672:	f000 fbc2 	bl	8007dfa <_ZNSt6vectorI6SymbolSaIS0_EEC1ERKS2_>
	}
 8007676:	68fb      	ldr	r3, [r7, #12]
 8007678:	4618      	mov	r0, r3
 800767a:	3714      	adds	r7, #20
 800767c:	46bd      	mov	sp, r7
 800767e:	bd90      	pop	{r4, r7, pc}

08007680 <_ZNSt8__detail9__variant15_Variadic_unionIJSt6vectorI6SymbolSaIS3_EEEEC1IJRKS5_EEESt16in_place_index_tILj0EEDpOT_>:
	constexpr _Variadic_union(in_place_index_t<0>, _Args&&... __args)
 8007680:	b5b0      	push	{r4, r5, r7, lr}
 8007682:	b084      	sub	sp, #16
 8007684:	af00      	add	r7, sp, #0
 8007686:	60f8      	str	r0, [r7, #12]
 8007688:	7239      	strb	r1, [r7, #8]
 800768a:	607a      	str	r2, [r7, #4]
	: _M_first(in_place_index<0>, std::forward<_Args>(__args)...)
 800768c:	68fc      	ldr	r4, [r7, #12]
 800768e:	6878      	ldr	r0, [r7, #4]
 8007690:	f7fc fcc4 	bl	800401c <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>
 8007694:	4603      	mov	r3, r0
 8007696:	461a      	mov	r2, r3
 8007698:	4629      	mov	r1, r5
 800769a:	4620      	mov	r0, r4
 800769c:	f7ff ffd3 	bl	8007646 <_ZNSt8__detail9__variant14_UninitializedISt6vectorI6SymbolSaIS3_EELb0EEC1IJRKS5_EEESt16in_place_index_tILj0EEDpOT_>
	{ }
 80076a0:	68fb      	ldr	r3, [r7, #12]
 80076a2:	4618      	mov	r0, r3
 80076a4:	3710      	adds	r7, #16
 80076a6:	46bd      	mov	sp, r7
 80076a8:	bdb0      	pop	{r4, r5, r7, pc}

080076aa <_ZNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj1EJRKSB_EEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variadic_union(in_place_index_t<_Np>, _Args&&... __args)
 80076aa:	b5b0      	push	{r4, r5, r7, lr}
 80076ac:	b084      	sub	sp, #16
 80076ae:	af00      	add	r7, sp, #0
 80076b0:	60f8      	str	r0, [r7, #12]
 80076b2:	7239      	strb	r1, [r7, #8]
 80076b4:	607a      	str	r2, [r7, #4]
	: _M_rest(in_place_index<_Np-1>, std::forward<_Args>(__args)...)
 80076b6:	68fc      	ldr	r4, [r7, #12]
 80076b8:	6878      	ldr	r0, [r7, #4]
 80076ba:	f7fc fcaf 	bl	800401c <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>
 80076be:	4603      	mov	r3, r0
 80076c0:	461a      	mov	r2, r3
 80076c2:	4629      	mov	r1, r5
 80076c4:	4620      	mov	r0, r4
 80076c6:	f7ff ffdb 	bl	8007680 <_ZNSt8__detail9__variant15_Variadic_unionIJSt6vectorI6SymbolSaIS3_EEEEC1IJRKS5_EEESt16in_place_index_tILj0EEDpOT_>
	{ }
 80076ca:	68fb      	ldr	r3, [r7, #12]
 80076cc:	4618      	mov	r0, r3
 80076ce:	3710      	adds	r7, #16
 80076d0:	46bd      	mov	sp, r7
 80076d2:	bdb0      	pop	{r4, r5, r7, pc}

080076d4 <_ZNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj2EJRKSB_EEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variadic_union(in_place_index_t<_Np>, _Args&&... __args)
 80076d4:	b5b0      	push	{r4, r5, r7, lr}
 80076d6:	b084      	sub	sp, #16
 80076d8:	af00      	add	r7, sp, #0
 80076da:	60f8      	str	r0, [r7, #12]
 80076dc:	7239      	strb	r1, [r7, #8]
 80076de:	607a      	str	r2, [r7, #4]
	: _M_rest(in_place_index<_Np-1>, std::forward<_Args>(__args)...)
 80076e0:	68fc      	ldr	r4, [r7, #12]
 80076e2:	6878      	ldr	r0, [r7, #4]
 80076e4:	f7fc fc9a 	bl	800401c <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>
 80076e8:	4603      	mov	r3, r0
 80076ea:	461a      	mov	r2, r3
 80076ec:	4629      	mov	r1, r5
 80076ee:	4620      	mov	r0, r4
 80076f0:	f7ff ffdb 	bl	80076aa <_ZNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj1EJRKSB_EEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 80076f4:	68fb      	ldr	r3, [r7, #12]
 80076f6:	4618      	mov	r0, r3
 80076f8:	3710      	adds	r7, #16
 80076fa:	46bd      	mov	sp, r7
 80076fc:	bdb0      	pop	{r4, r5, r7, pc}

080076fe <_ZNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj3EJRKSB_EEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variadic_union(in_place_index_t<_Np>, _Args&&... __args)
 80076fe:	b5b0      	push	{r4, r5, r7, lr}
 8007700:	b084      	sub	sp, #16
 8007702:	af00      	add	r7, sp, #0
 8007704:	60f8      	str	r0, [r7, #12]
 8007706:	7239      	strb	r1, [r7, #8]
 8007708:	607a      	str	r2, [r7, #4]
	: _M_rest(in_place_index<_Np-1>, std::forward<_Args>(__args)...)
 800770a:	68fc      	ldr	r4, [r7, #12]
 800770c:	6878      	ldr	r0, [r7, #4]
 800770e:	f7fc fc85 	bl	800401c <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>
 8007712:	4603      	mov	r3, r0
 8007714:	461a      	mov	r2, r3
 8007716:	4629      	mov	r1, r5
 8007718:	4620      	mov	r0, r4
 800771a:	f7ff ffdb 	bl	80076d4 <_ZNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj2EJRKSB_EEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 800771e:	68fb      	ldr	r3, [r7, #12]
 8007720:	4618      	mov	r0, r3
 8007722:	3710      	adds	r7, #16
 8007724:	46bd      	mov	sp, r7
 8007726:	bdb0      	pop	{r4, r5, r7, pc}

08007728 <_ZNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj4EJRKSB_EEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variadic_union(in_place_index_t<_Np>, _Args&&... __args)
 8007728:	b5b0      	push	{r4, r5, r7, lr}
 800772a:	b084      	sub	sp, #16
 800772c:	af00      	add	r7, sp, #0
 800772e:	60f8      	str	r0, [r7, #12]
 8007730:	7239      	strb	r1, [r7, #8]
 8007732:	607a      	str	r2, [r7, #4]
	: _M_rest(in_place_index<_Np-1>, std::forward<_Args>(__args)...)
 8007734:	68fc      	ldr	r4, [r7, #12]
 8007736:	6878      	ldr	r0, [r7, #4]
 8007738:	f7fc fc70 	bl	800401c <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>
 800773c:	4603      	mov	r3, r0
 800773e:	461a      	mov	r2, r3
 8007740:	4629      	mov	r1, r5
 8007742:	4620      	mov	r0, r4
 8007744:	f7ff ffdb 	bl	80076fe <_ZNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj3EJRKSB_EEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 8007748:	68fb      	ldr	r3, [r7, #12]
 800774a:	4618      	mov	r0, r3
 800774c:	3710      	adds	r7, #16
 800774e:	46bd      	mov	sp, r7
 8007750:	bdb0      	pop	{r4, r5, r7, pc}

08007752 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj4EJRKSB_EEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variant_storage(in_place_index_t<_Np>, _Args&&... __args)
 8007752:	b5b0      	push	{r4, r5, r7, lr}
 8007754:	b084      	sub	sp, #16
 8007756:	af00      	add	r7, sp, #0
 8007758:	60f8      	str	r0, [r7, #12]
 800775a:	7239      	strb	r1, [r7, #8]
 800775c:	607a      	str	r2, [r7, #4]
	_M_index(_Np)
 800775e:	68fc      	ldr	r4, [r7, #12]
 8007760:	6878      	ldr	r0, [r7, #4]
 8007762:	f7fc fc5b 	bl	800401c <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>
 8007766:	4603      	mov	r3, r0
 8007768:	461a      	mov	r2, r3
 800776a:	4629      	mov	r1, r5
 800776c:	4620      	mov	r0, r4
 800776e:	f7ff ffdb 	bl	8007728 <_ZNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj4EJRKSB_EEESt16in_place_index_tIXT_EEDpOT0_>
 8007772:	68fb      	ldr	r3, [r7, #12]
 8007774:	2204      	movs	r2, #4
 8007776:	761a      	strb	r2, [r3, #24]
	{ }
 8007778:	68fb      	ldr	r3, [r7, #12]
 800777a:	4618      	mov	r0, r3
 800777c:	3710      	adds	r7, #16
 800777e:	46bd      	mov	sp, r7
 8007780:	bdb0      	pop	{r4, r5, r7, pc}

08007782 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKc10token_typeEE7_M_addrEv>:
      _M_addr() noexcept
 8007782:	b480      	push	{r7}
 8007784:	b083      	sub	sp, #12
 8007786:	af00      	add	r7, sp, #0
 8007788:	6078      	str	r0, [r7, #4]
      { return static_cast<void*>(&_M_storage); }
 800778a:	687b      	ldr	r3, [r7, #4]
 800778c:	4618      	mov	r0, r3
 800778e:	370c      	adds	r7, #12
 8007790:	46bd      	mov	sp, r7
 8007792:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007796:	4770      	bx	lr

08007798 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKc10token_typeEE6_M_ptrEv>:
      _M_ptr() const noexcept
 8007798:	b580      	push	{r7, lr}
 800779a:	b082      	sub	sp, #8
 800779c:	af00      	add	r7, sp, #0
 800779e:	6078      	str	r0, [r7, #4]
      { return static_cast<const _Tp*>(_M_addr()); }
 80077a0:	6878      	ldr	r0, [r7, #4]
 80077a2:	f000 fb67 	bl	8007e74 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKc10token_typeEE7_M_addrEv>
 80077a6:	4603      	mov	r3, r0
 80077a8:	4618      	mov	r0, r3
 80077aa:	3708      	adds	r7, #8
 80077ac:	46bd      	mov	sp, r7
 80077ae:	bd80      	pop	{r7, pc}

080077b0 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEE8allocateERS6_j>:
      allocate(allocator_type& __a, size_type __n)
 80077b0:	b580      	push	{r7, lr}
 80077b2:	b082      	sub	sp, #8
 80077b4:	af00      	add	r7, sp, #0
 80077b6:	6078      	str	r0, [r7, #4]
 80077b8:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 80077ba:	2200      	movs	r2, #0
 80077bc:	6839      	ldr	r1, [r7, #0]
 80077be:	6878      	ldr	r0, [r7, #4]
 80077c0:	f000 fb63 	bl	8007e8a <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEE8allocateEjPKv>
 80077c4:	4603      	mov	r3, r0
 80077c6:	4618      	mov	r0, r3
 80077c8:	3708      	adds	r7, #8
 80077ca:	46bd      	mov	sp, r7
 80077cc:	bd80      	pop	{r7, pc}

080077ce <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEE9constructIS4_JRKS4_EEEvRS6_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 80077ce:	b580      	push	{r7, lr}
 80077d0:	b084      	sub	sp, #16
 80077d2:	af00      	add	r7, sp, #0
 80077d4:	60f8      	str	r0, [r7, #12]
 80077d6:	60b9      	str	r1, [r7, #8]
 80077d8:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 80077da:	6878      	ldr	r0, [r7, #4]
 80077dc:	f7fc fe50 	bl	8004480 <_ZSt7forwardIRKSt4pairIKc10token_typeEEOT_RNSt16remove_referenceIS6_E4typeE>
 80077e0:	4603      	mov	r3, r0
 80077e2:	461a      	mov	r2, r3
 80077e4:	68b9      	ldr	r1, [r7, #8]
 80077e6:	68f8      	ldr	r0, [r7, #12]
 80077e8:	f000 fb71 	bl	8007ece <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEE9constructIS5_JRKS5_EEEvPT_DpOT0_>
 80077ec:	bf00      	nop
 80077ee:	3710      	adds	r7, #16
 80077f0:	46bd      	mov	sp, r7
 80077f2:	bd80      	pop	{r7, pc}

080077f4 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE7_M_addrEv>:
      _M_addr() noexcept
 80077f4:	b480      	push	{r7}
 80077f6:	b083      	sub	sp, #12
 80077f8:	af00      	add	r7, sp, #0
 80077fa:	6078      	str	r0, [r7, #4]
      { return static_cast<void*>(&_M_storage); }
 80077fc:	687b      	ldr	r3, [r7, #4]
 80077fe:	4618      	mov	r0, r3
 8007800:	370c      	adds	r7, #12
 8007802:	46bd      	mov	sp, r7
 8007804:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007808:	4770      	bx	lr

0800780a <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE6_M_ptrEv>:
      _M_ptr() const noexcept
 800780a:	b580      	push	{r7, lr}
 800780c:	b082      	sub	sp, #8
 800780e:	af00      	add	r7, sp, #0
 8007810:	6078      	str	r0, [r7, #4]
      { return static_cast<const _Tp*>(_M_addr()); }
 8007812:	6878      	ldr	r0, [r7, #4]
 8007814:	f000 fb73 	bl	8007efe <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE7_M_addrEv>
 8007818:	4603      	mov	r3, r0
 800781a:	4618      	mov	r0, r3
 800781c:	3708      	adds	r7, #8
 800781e:	46bd      	mov	sp, r7
 8007820:	bd80      	pop	{r7, pc}

08007822 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEE8allocateERSC_j>:
      allocate(allocator_type& __a, size_type __n)
 8007822:	b580      	push	{r7, lr}
 8007824:	b082      	sub	sp, #8
 8007826:	af00      	add	r7, sp, #0
 8007828:	6078      	str	r0, [r7, #4]
 800782a:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 800782c:	2200      	movs	r2, #0
 800782e:	6839      	ldr	r1, [r7, #0]
 8007830:	6878      	ldr	r0, [r7, #4]
 8007832:	f000 fb6f 	bl	8007f14 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEE8allocateEjPKv>
 8007836:	4603      	mov	r3, r0
 8007838:	4618      	mov	r0, r3
 800783a:	3708      	adds	r7, #8
 800783c:	46bd      	mov	sp, r7
 800783e:	bd80      	pop	{r7, pc}

08007840 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEE9constructISA_JRKSA_EEEvRSC_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 8007840:	b580      	push	{r7, lr}
 8007842:	b084      	sub	sp, #16
 8007844:	af00      	add	r7, sp, #0
 8007846:	60f8      	str	r0, [r7, #12]
 8007848:	60b9      	str	r1, [r7, #8]
 800784a:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 800784c:	6878      	ldr	r0, [r7, #4]
 800784e:	f7fd f80d 	bl	800486c <_ZSt7forwardIRKSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEOT_RNSt16remove_referenceISC_E4typeE>
 8007852:	4603      	mov	r3, r0
 8007854:	461a      	mov	r2, r3
 8007856:	68b9      	ldr	r1, [r7, #8]
 8007858:	68f8      	ldr	r0, [r7, #12]
 800785a:	f000 fb90 	bl	8007f7e <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEE9constructISB_JRKSB_EEEvPT_DpOT0_>
 800785e:	bf00      	nop
 8007860:	3710      	adds	r7, #16
 8007862:	46bd      	mov	sp, r7
 8007864:	bd80      	pop	{r7, pc}

08007866 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKc12double_tokenEE7_M_addrEv>:
      _M_addr() noexcept
 8007866:	b480      	push	{r7}
 8007868:	b083      	sub	sp, #12
 800786a:	af00      	add	r7, sp, #0
 800786c:	6078      	str	r0, [r7, #4]
      { return static_cast<void*>(&_M_storage); }
 800786e:	687b      	ldr	r3, [r7, #4]
 8007870:	4618      	mov	r0, r3
 8007872:	370c      	adds	r7, #12
 8007874:	46bd      	mov	sp, r7
 8007876:	f85d 7b04 	ldr.w	r7, [sp], #4
 800787a:	4770      	bx	lr

0800787c <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKc12double_tokenEE6_M_ptrEv>:
      _M_ptr() const noexcept
 800787c:	b580      	push	{r7, lr}
 800787e:	b082      	sub	sp, #8
 8007880:	af00      	add	r7, sp, #0
 8007882:	6078      	str	r0, [r7, #4]
      { return static_cast<const _Tp*>(_M_addr()); }
 8007884:	6878      	ldr	r0, [r7, #4]
 8007886:	f000 fb92 	bl	8007fae <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKc12double_tokenEE7_M_addrEv>
 800788a:	4603      	mov	r3, r0
 800788c:	4618      	mov	r0, r3
 800788e:	3708      	adds	r7, #8
 8007890:	46bd      	mov	sp, r7
 8007892:	bd80      	pop	{r7, pc}

08007894 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEE8allocateERS6_j>:
      allocate(allocator_type& __a, size_type __n)
 8007894:	b580      	push	{r7, lr}
 8007896:	b082      	sub	sp, #8
 8007898:	af00      	add	r7, sp, #0
 800789a:	6078      	str	r0, [r7, #4]
 800789c:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 800789e:	2200      	movs	r2, #0
 80078a0:	6839      	ldr	r1, [r7, #0]
 80078a2:	6878      	ldr	r0, [r7, #4]
 80078a4:	f000 fb8e 	bl	8007fc4 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEE8allocateEjPKv>
 80078a8:	4603      	mov	r3, r0
 80078aa:	4618      	mov	r0, r3
 80078ac:	3708      	adds	r7, #8
 80078ae:	46bd      	mov	sp, r7
 80078b0:	bd80      	pop	{r7, pc}

080078b2 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEE9constructIS4_JRKS4_EEEvRS6_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 80078b2:	b580      	push	{r7, lr}
 80078b4:	b084      	sub	sp, #16
 80078b6:	af00      	add	r7, sp, #0
 80078b8:	60f8      	str	r0, [r7, #12]
 80078ba:	60b9      	str	r1, [r7, #8]
 80078bc:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 80078be:	6878      	ldr	r0, [r7, #4]
 80078c0:	f7fd f9be 	bl	8004c40 <_ZSt7forwardIRKSt4pairIKc12double_tokenEEOT_RNSt16remove_referenceIS6_E4typeE>
 80078c4:	4603      	mov	r3, r0
 80078c6:	461a      	mov	r2, r3
 80078c8:	68b9      	ldr	r1, [r7, #8]
 80078ca:	68f8      	ldr	r0, [r7, #12]
 80078cc:	f000 fb9c 	bl	8008008 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEE9constructIS5_JRKS5_EEEvPT_DpOT0_>
 80078d0:	bf00      	nop
 80078d2:	3710      	adds	r7, #16
 80078d4:	46bd      	mov	sp, r7
 80078d6:	bd80      	pop	{r7, pc}

080078d8 <_ZNSt6vectorI6SymbolSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
 80078d8:	b5b0      	push	{r4, r5, r7, lr}
 80078da:	b082      	sub	sp, #8
 80078dc:	af00      	add	r7, sp, #0
 80078de:	6078      	str	r0, [r7, #4]
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 80078e0:	687b      	ldr	r3, [r7, #4]
 80078e2:	681c      	ldr	r4, [r3, #0]
 80078e4:	687b      	ldr	r3, [r7, #4]
 80078e6:	685d      	ldr	r5, [r3, #4]
		      _M_get_Tp_allocator());
 80078e8:	687b      	ldr	r3, [r7, #4]
 80078ea:	4618      	mov	r0, r3
 80078ec:	f7ff f946 	bl	8006b7c <_ZNSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 80078f0:	4603      	mov	r3, r0
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 80078f2:	461a      	mov	r2, r3
 80078f4:	4629      	mov	r1, r5
 80078f6:	4620      	mov	r0, r4
 80078f8:	f7ff f9f5 	bl	8006ce6 <_ZSt8_DestroyIP6SymbolS0_EvT_S2_RSaIT0_E>
      }
 80078fc:	687b      	ldr	r3, [r7, #4]
 80078fe:	4618      	mov	r0, r3
 8007900:	f000 fba7 	bl	8008052 <_ZNSt12_Vector_baseI6SymbolSaIS0_EED1Ev>
 8007904:	687b      	ldr	r3, [r7, #4]
 8007906:	4618      	mov	r0, r3
 8007908:	3708      	adds	r7, #8
 800790a:	46bd      	mov	sp, r7
 800790c:	bdb0      	pop	{r4, r5, r7, pc}

0800790e <_ZSt9addressofIN9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEPT_RS9_>:
    addressof(_Tp& __r) noexcept
 800790e:	b580      	push	{r7, lr}
 8007910:	b082      	sub	sp, #8
 8007912:	af00      	add	r7, sp, #0
 8007914:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 8007916:	6878      	ldr	r0, [r7, #4]
 8007918:	f000 fbb4 	bl	8008084 <_ZSt11__addressofIN9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEPT_RS9_>
 800791c:	4603      	mov	r3, r0
 800791e:	4618      	mov	r0, r3
 8007920:	3708      	adds	r7, #8
 8007922:	46bd      	mov	sp, r7
 8007924:	bd80      	pop	{r7, pc}

08007926 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_ENUlOT_T0_E_clIRiSt17integral_constantIjLj0EEEENS0_20__variant_idx_cookieESF_SG_>:
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8007926:	b5b0      	push	{r4, r5, r7, lr}
 8007928:	b084      	sub	sp, #16
 800792a:	af00      	add	r7, sp, #0
 800792c:	60f8      	str	r0, [r7, #12]
 800792e:	60b9      	str	r1, [r7, #8]
 8007930:	713a      	strb	r2, [r7, #4]
 8007932:	68fb      	ldr	r3, [r7, #12]
 8007934:	681b      	ldr	r3, [r3, #0]
		if (this->_M_index == __rhs_index)
 8007936:	7e1b      	ldrb	r3, [r3, #24]
 8007938:	461c      	mov	r4, r3
 800793a:	1d3b      	adds	r3, r7, #4
 800793c:	4618      	mov	r0, r3
 800793e:	f7fd fad5 	bl	8004eec <_ZNKSt17integral_constantIjLj0EEcvjEv>
 8007942:	4603      	mov	r3, r0
 8007944:	429c      	cmp	r4, r3
 8007946:	bf0c      	ite	eq
 8007948:	2301      	moveq	r3, #1
 800794a:	2300      	movne	r3, #0
 800794c:	b2db      	uxtb	r3, r3
 800794e:	2b00      	cmp	r3, #0
 8007950:	d00c      	beq.n	800796c <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_ENUlOT_T0_E_clIRiSt17integral_constantIjLj0EEEENS0_20__variant_idx_cookieESF_SG_+0x46>
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 8007952:	68b8      	ldr	r0, [r7, #8]
 8007954:	f000 fbac 	bl	80080b0 <_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_>
 8007958:	4603      	mov	r3, r0
 800795a:	681c      	ldr	r4, [r3, #0]
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800795c:	68fb      	ldr	r3, [r7, #12]
 800795e:	681b      	ldr	r3, [r3, #0]
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 8007960:	4618      	mov	r0, r3
 8007962:	f000 f816 	bl	8007992 <_ZNSt8__detail9__variant5__getILj0ERNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcOT0_>
 8007966:	4603      	mov	r3, r0
 8007968:	601c      	str	r4, [r3, #0]
	    return {};
 800796a:	e00d      	b.n	8007988 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_ENUlOT_T0_E_clIRiSt17integral_constantIjLj0EEEENS0_20__variant_idx_cookieESF_SG_+0x62>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800796c:	68fb      	ldr	r3, [r7, #12]
 800796e:	681b      	ldr	r3, [r3, #0]
		  __variant_cast<_Types...>(*this)
 8007970:	4618      	mov	r0, r3
 8007972:	f7fe f9ea 	bl	8005d4a <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEERNSt8__detail9__variant17_Move_assign_baseILb0EJifbS5_S9_EEEEDcOT0_>
 8007976:	4604      	mov	r4, r0
		    .template emplace<__rhs_index>(std::move(__rhs_mem));
 8007978:	68b8      	ldr	r0, [r7, #8]
 800797a:	f000 fb99 	bl	80080b0 <_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_>
 800797e:	4603      	mov	r3, r0
		  __variant_cast<_Types...>(*this)
 8007980:	4619      	mov	r1, r3
 8007982:	4620      	mov	r0, r4
 8007984:	f000 fb9f 	bl	80080c6 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE7emplaceILj0EJiEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	    return {};
 8007988:	462b      	mov	r3, r5
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800798a:	4618      	mov	r0, r3
 800798c:	3710      	adds	r7, #16
 800798e:	46bd      	mov	sp, r7
 8007990:	bdb0      	pop	{r4, r5, r7, pc}

08007992 <_ZNSt8__detail9__variant5__getILj0ERNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8007992:	b590      	push	{r4, r7, lr}
 8007994:	b083      	sub	sp, #12
 8007996:	af00      	add	r7, sp, #0
 8007998:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800799a:	6878      	ldr	r0, [r7, #4]
 800799c:	f000 fb7d 	bl	800809a <_ZSt7forwardIRNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 80079a0:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 80079a2:	4619      	mov	r1, r3
 80079a4:	4620      	mov	r0, r4
 80079a6:	f7f9 ffbb 	bl	8001920 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 80079aa:	4603      	mov	r3, r0
    }
 80079ac:	4618      	mov	r0, r3
 80079ae:	370c      	adds	r7, #12
 80079b0:	46bd      	mov	sp, r7
 80079b2:	bd90      	pop	{r4, r7, pc}

080079b4 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_ENUlOT_T0_E_clIRfSt17integral_constantIjLj1EEEENS0_20__variant_idx_cookieESF_SG_>:
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 80079b4:	b5b0      	push	{r4, r5, r7, lr}
 80079b6:	b084      	sub	sp, #16
 80079b8:	af00      	add	r7, sp, #0
 80079ba:	60f8      	str	r0, [r7, #12]
 80079bc:	60b9      	str	r1, [r7, #8]
 80079be:	713a      	strb	r2, [r7, #4]
 80079c0:	68fb      	ldr	r3, [r7, #12]
 80079c2:	681b      	ldr	r3, [r3, #0]
		if (this->_M_index == __rhs_index)
 80079c4:	7e1b      	ldrb	r3, [r3, #24]
 80079c6:	461c      	mov	r4, r3
 80079c8:	1d3b      	adds	r3, r7, #4
 80079ca:	4618      	mov	r0, r3
 80079cc:	f7fd fadd 	bl	8004f8a <_ZNKSt17integral_constantIjLj1EEcvjEv>
 80079d0:	4603      	mov	r3, r0
 80079d2:	429c      	cmp	r4, r3
 80079d4:	bf0c      	ite	eq
 80079d6:	2301      	moveq	r3, #1
 80079d8:	2300      	movne	r3, #0
 80079da:	b2db      	uxtb	r3, r3
 80079dc:	2b00      	cmp	r3, #0
 80079de:	d00c      	beq.n	80079fa <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_ENUlOT_T0_E_clIRfSt17integral_constantIjLj1EEEENS0_20__variant_idx_cookieESF_SG_+0x46>
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 80079e0:	68b8      	ldr	r0, [r7, #8]
 80079e2:	f000 fb89 	bl	80080f8 <_ZSt4moveIRfEONSt16remove_referenceIT_E4typeEOS2_>
 80079e6:	4603      	mov	r3, r0
 80079e8:	681c      	ldr	r4, [r3, #0]
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 80079ea:	68fb      	ldr	r3, [r7, #12]
 80079ec:	681b      	ldr	r3, [r3, #0]
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 80079ee:	4618      	mov	r0, r3
 80079f0:	f000 f816 	bl	8007a20 <_ZNSt8__detail9__variant5__getILj1ERNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcOT0_>
 80079f4:	4603      	mov	r3, r0
 80079f6:	601c      	str	r4, [r3, #0]
	    return {};
 80079f8:	e00d      	b.n	8007a16 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_ENUlOT_T0_E_clIRfSt17integral_constantIjLj1EEEENS0_20__variant_idx_cookieESF_SG_+0x62>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 80079fa:	68fb      	ldr	r3, [r7, #12]
 80079fc:	681b      	ldr	r3, [r3, #0]
		  __variant_cast<_Types...>(*this)
 80079fe:	4618      	mov	r0, r3
 8007a00:	f7fe f9a3 	bl	8005d4a <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEERNSt8__detail9__variant17_Move_assign_baseILb0EJifbS5_S9_EEEEDcOT0_>
 8007a04:	4604      	mov	r4, r0
		    .template emplace<__rhs_index>(std::move(__rhs_mem));
 8007a06:	68b8      	ldr	r0, [r7, #8]
 8007a08:	f000 fb76 	bl	80080f8 <_ZSt4moveIRfEONSt16remove_referenceIT_E4typeEOS2_>
 8007a0c:	4603      	mov	r3, r0
		  __variant_cast<_Types...>(*this)
 8007a0e:	4619      	mov	r1, r3
 8007a10:	4620      	mov	r0, r4
 8007a12:	f000 fb7c 	bl	800810e <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE7emplaceILj1EJfEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	    return {};
 8007a16:	462b      	mov	r3, r5
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8007a18:	4618      	mov	r0, r3
 8007a1a:	3710      	adds	r7, #16
 8007a1c:	46bd      	mov	sp, r7
 8007a1e:	bdb0      	pop	{r4, r5, r7, pc}

08007a20 <_ZNSt8__detail9__variant5__getILj1ERNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8007a20:	b590      	push	{r4, r7, lr}
 8007a22:	b083      	sub	sp, #12
 8007a24:	af00      	add	r7, sp, #0
 8007a26:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8007a28:	6878      	ldr	r0, [r7, #4]
 8007a2a:	f000 fb36 	bl	800809a <_ZSt7forwardIRNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8007a2e:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8007a30:	4619      	mov	r1, r3
 8007a32:	4620      	mov	r0, r4
 8007a34:	f7fb ff74 	bl	8003920 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8007a38:	4603      	mov	r3, r0
    }
 8007a3a:	4618      	mov	r0, r3
 8007a3c:	370c      	adds	r7, #12
 8007a3e:	46bd      	mov	sp, r7
 8007a40:	bd90      	pop	{r4, r7, pc}

08007a42 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_ENUlOT_T0_E_clIRbSt17integral_constantIjLj2EEEENS0_20__variant_idx_cookieESF_SG_>:
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8007a42:	b5b0      	push	{r4, r5, r7, lr}
 8007a44:	b084      	sub	sp, #16
 8007a46:	af00      	add	r7, sp, #0
 8007a48:	60f8      	str	r0, [r7, #12]
 8007a4a:	60b9      	str	r1, [r7, #8]
 8007a4c:	713a      	strb	r2, [r7, #4]
 8007a4e:	68fb      	ldr	r3, [r7, #12]
 8007a50:	681b      	ldr	r3, [r3, #0]
		if (this->_M_index == __rhs_index)
 8007a52:	7e1b      	ldrb	r3, [r3, #24]
 8007a54:	461c      	mov	r4, r3
 8007a56:	1d3b      	adds	r3, r7, #4
 8007a58:	4618      	mov	r0, r3
 8007a5a:	f7fd fae6 	bl	800502a <_ZNKSt17integral_constantIjLj2EEcvjEv>
 8007a5e:	4603      	mov	r3, r0
 8007a60:	429c      	cmp	r4, r3
 8007a62:	bf0c      	ite	eq
 8007a64:	2301      	moveq	r3, #1
 8007a66:	2300      	movne	r3, #0
 8007a68:	b2db      	uxtb	r3, r3
 8007a6a:	2b00      	cmp	r3, #0
 8007a6c:	d00d      	beq.n	8007a8a <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_ENUlOT_T0_E_clIRbSt17integral_constantIjLj2EEEENS0_20__variant_idx_cookieESF_SG_+0x48>
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 8007a6e:	68b8      	ldr	r0, [r7, #8]
 8007a70:	f000 fb66 	bl	8008140 <_ZSt4moveIRbEONSt16remove_referenceIT_E4typeEOS2_>
 8007a74:	4603      	mov	r3, r0
 8007a76:	781c      	ldrb	r4, [r3, #0]
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8007a78:	68fb      	ldr	r3, [r7, #12]
 8007a7a:	681b      	ldr	r3, [r3, #0]
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 8007a7c:	4618      	mov	r0, r3
 8007a7e:	f000 f817 	bl	8007ab0 <_ZNSt8__detail9__variant5__getILj2ERNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcOT0_>
 8007a82:	4603      	mov	r3, r0
 8007a84:	4622      	mov	r2, r4
 8007a86:	701a      	strb	r2, [r3, #0]
	    return {};
 8007a88:	e00d      	b.n	8007aa6 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_ENUlOT_T0_E_clIRbSt17integral_constantIjLj2EEEENS0_20__variant_idx_cookieESF_SG_+0x64>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8007a8a:	68fb      	ldr	r3, [r7, #12]
 8007a8c:	681b      	ldr	r3, [r3, #0]
		  __variant_cast<_Types...>(*this)
 8007a8e:	4618      	mov	r0, r3
 8007a90:	f7fe f95b 	bl	8005d4a <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEERNSt8__detail9__variant17_Move_assign_baseILb0EJifbS5_S9_EEEEDcOT0_>
 8007a94:	4604      	mov	r4, r0
		    .template emplace<__rhs_index>(std::move(__rhs_mem));
 8007a96:	68b8      	ldr	r0, [r7, #8]
 8007a98:	f000 fb52 	bl	8008140 <_ZSt4moveIRbEONSt16remove_referenceIT_E4typeEOS2_>
 8007a9c:	4603      	mov	r3, r0
		  __variant_cast<_Types...>(*this)
 8007a9e:	4619      	mov	r1, r3
 8007aa0:	4620      	mov	r0, r4
 8007aa2:	f000 fb58 	bl	8008156 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE7emplaceILj2EJbEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	    return {};
 8007aa6:	462b      	mov	r3, r5
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8007aa8:	4618      	mov	r0, r3
 8007aaa:	3710      	adds	r7, #16
 8007aac:	46bd      	mov	sp, r7
 8007aae:	bdb0      	pop	{r4, r5, r7, pc}

08007ab0 <_ZNSt8__detail9__variant5__getILj2ERNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8007ab0:	b590      	push	{r4, r7, lr}
 8007ab2:	b083      	sub	sp, #12
 8007ab4:	af00      	add	r7, sp, #0
 8007ab6:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8007ab8:	6878      	ldr	r0, [r7, #4]
 8007aba:	f000 faee 	bl	800809a <_ZSt7forwardIRNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8007abe:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8007ac0:	4619      	mov	r1, r3
 8007ac2:	4620      	mov	r0, r4
 8007ac4:	f7f9 fd60 	bl	8001588 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8007ac8:	4603      	mov	r3, r0
    }
 8007aca:	4618      	mov	r0, r3
 8007acc:	370c      	adds	r7, #12
 8007ace:	46bd      	mov	sp, r7
 8007ad0:	bd90      	pop	{r4, r7, pc}

08007ad2 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_ENUlOT_T0_E_clIRS7_St17integral_constantIjLj3EEEENS0_20__variant_idx_cookieESF_SG_>:
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8007ad2:	b5b0      	push	{r4, r5, r7, lr}
 8007ad4:	b084      	sub	sp, #16
 8007ad6:	af00      	add	r7, sp, #0
 8007ad8:	60f8      	str	r0, [r7, #12]
 8007ada:	60b9      	str	r1, [r7, #8]
 8007adc:	713a      	strb	r2, [r7, #4]
 8007ade:	68fb      	ldr	r3, [r7, #12]
 8007ae0:	681b      	ldr	r3, [r3, #0]
		if (this->_M_index == __rhs_index)
 8007ae2:	7e1b      	ldrb	r3, [r3, #24]
 8007ae4:	461c      	mov	r4, r3
 8007ae6:	1d3b      	adds	r3, r7, #4
 8007ae8:	4618      	mov	r0, r3
 8007aea:	f7fd fb02 	bl	80050f2 <_ZNKSt17integral_constantIjLj3EEcvjEv>
 8007aee:	4603      	mov	r3, r0
 8007af0:	429c      	cmp	r4, r3
 8007af2:	bf0c      	ite	eq
 8007af4:	2301      	moveq	r3, #1
 8007af6:	2300      	movne	r3, #0
 8007af8:	b2db      	uxtb	r3, r3
 8007afa:	2b00      	cmp	r3, #0
 8007afc:	d00e      	beq.n	8007b1c <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_ENUlOT_T0_E_clIRS7_St17integral_constantIjLj3EEEENS0_20__variant_idx_cookieESF_SG_+0x4a>
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 8007afe:	68b8      	ldr	r0, [r7, #8]
 8007b00:	f000 fb42 	bl	8008188 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
 8007b04:	4604      	mov	r4, r0
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8007b06:	68fb      	ldr	r3, [r7, #12]
 8007b08:	681b      	ldr	r3, [r3, #0]
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 8007b0a:	4618      	mov	r0, r3
 8007b0c:	f000 f819 	bl	8007b42 <_ZNSt8__detail9__variant5__getILj3ERNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcOT0_>
 8007b10:	4603      	mov	r3, r0
 8007b12:	4621      	mov	r1, r4
 8007b14:	4618      	mov	r0, r3
 8007b16:	f01b f934 	bl	8022d82 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>
	    return {};
 8007b1a:	e00d      	b.n	8007b38 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_ENUlOT_T0_E_clIRS7_St17integral_constantIjLj3EEEENS0_20__variant_idx_cookieESF_SG_+0x66>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8007b1c:	68fb      	ldr	r3, [r7, #12]
 8007b1e:	681b      	ldr	r3, [r3, #0]
		  __variant_cast<_Types...>(*this)
 8007b20:	4618      	mov	r0, r3
 8007b22:	f7fe f912 	bl	8005d4a <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEERNSt8__detail9__variant17_Move_assign_baseILb0EJifbS5_S9_EEEEDcOT0_>
 8007b26:	4604      	mov	r4, r0
		    .template emplace<__rhs_index>(std::move(__rhs_mem));
 8007b28:	68b8      	ldr	r0, [r7, #8]
 8007b2a:	f000 fb2d 	bl	8008188 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
 8007b2e:	4603      	mov	r3, r0
		  __variant_cast<_Types...>(*this)
 8007b30:	4619      	mov	r1, r3
 8007b32:	4620      	mov	r0, r4
 8007b34:	f000 fb33 	bl	800819e <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE7emplaceILj3EJS5_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	    return {};
 8007b38:	462b      	mov	r3, r5
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8007b3a:	4618      	mov	r0, r3
 8007b3c:	3710      	adds	r7, #16
 8007b3e:	46bd      	mov	sp, r7
 8007b40:	bdb0      	pop	{r4, r5, r7, pc}

08007b42 <_ZNSt8__detail9__variant5__getILj3ERNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8007b42:	b590      	push	{r4, r7, lr}
 8007b44:	b083      	sub	sp, #12
 8007b46:	af00      	add	r7, sp, #0
 8007b48:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8007b4a:	6878      	ldr	r0, [r7, #4]
 8007b4c:	f000 faa5 	bl	800809a <_ZSt7forwardIRNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8007b50:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8007b52:	4619      	mov	r1, r3
 8007b54:	4620      	mov	r0, r4
 8007b56:	f7fb ffe7 	bl	8003b28 <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8007b5a:	4603      	mov	r3, r0
    }
 8007b5c:	4618      	mov	r0, r3
 8007b5e:	370c      	adds	r7, #12
 8007b60:	46bd      	mov	sp, r7
 8007b62:	bd90      	pop	{r4, r7, pc}

08007b64 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_ENUlOT_T0_E_clIRSB_St17integral_constantIjLj4EEEENS0_20__variant_idx_cookieESF_SG_>:
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8007b64:	b5b0      	push	{r4, r5, r7, lr}
 8007b66:	b084      	sub	sp, #16
 8007b68:	af00      	add	r7, sp, #0
 8007b6a:	60f8      	str	r0, [r7, #12]
 8007b6c:	60b9      	str	r1, [r7, #8]
 8007b6e:	713a      	strb	r2, [r7, #4]
 8007b70:	68fb      	ldr	r3, [r7, #12]
 8007b72:	681b      	ldr	r3, [r3, #0]
		if (this->_M_index == __rhs_index)
 8007b74:	7e1b      	ldrb	r3, [r3, #24]
 8007b76:	461c      	mov	r4, r3
 8007b78:	1d3b      	adds	r3, r7, #4
 8007b7a:	4618      	mov	r0, r3
 8007b7c:	f7fd fb48 	bl	8005210 <_ZNKSt17integral_constantIjLj4EEcvjEv>
 8007b80:	4603      	mov	r3, r0
 8007b82:	429c      	cmp	r4, r3
 8007b84:	bf0c      	ite	eq
 8007b86:	2301      	moveq	r3, #1
 8007b88:	2300      	movne	r3, #0
 8007b8a:	b2db      	uxtb	r3, r3
 8007b8c:	2b00      	cmp	r3, #0
 8007b8e:	d00e      	beq.n	8007bae <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_ENUlOT_T0_E_clIRSB_St17integral_constantIjLj4EEEENS0_20__variant_idx_cookieESF_SG_+0x4a>
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 8007b90:	68b8      	ldr	r0, [r7, #8]
 8007b92:	f000 fb1d 	bl	80081d0 <_ZSt4moveIRSt6vectorI6SymbolSaIS1_EEEONSt16remove_referenceIT_E4typeEOS6_>
 8007b96:	4604      	mov	r4, r0
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8007b98:	68fb      	ldr	r3, [r7, #12]
 8007b9a:	681b      	ldr	r3, [r3, #0]
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 8007b9c:	4618      	mov	r0, r3
 8007b9e:	f000 f819 	bl	8007bd4 <_ZNSt8__detail9__variant5__getILj4ERNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcOT0_>
 8007ba2:	4603      	mov	r3, r0
 8007ba4:	4621      	mov	r1, r4
 8007ba6:	4618      	mov	r0, r3
 8007ba8:	f000 fb1d 	bl	80081e6 <_ZNSt6vectorI6SymbolSaIS0_EEaSEOS2_>
	    return {};
 8007bac:	e00d      	b.n	8007bca <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_ENUlOT_T0_E_clIRSB_St17integral_constantIjLj4EEEENS0_20__variant_idx_cookieESF_SG_+0x66>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8007bae:	68fb      	ldr	r3, [r7, #12]
 8007bb0:	681b      	ldr	r3, [r3, #0]
		  __variant_cast<_Types...>(*this)
 8007bb2:	4618      	mov	r0, r3
 8007bb4:	f7fe f8c9 	bl	8005d4a <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEERNSt8__detail9__variant17_Move_assign_baseILb0EJifbS5_S9_EEEEDcOT0_>
 8007bb8:	4604      	mov	r4, r0
		    .template emplace<__rhs_index>(std::move(__rhs_mem));
 8007bba:	68b8      	ldr	r0, [r7, #8]
 8007bbc:	f000 fb08 	bl	80081d0 <_ZSt4moveIRSt6vectorI6SymbolSaIS1_EEEONSt16remove_referenceIT_E4typeEOS6_>
 8007bc0:	4603      	mov	r3, r0
		  __variant_cast<_Types...>(*this)
 8007bc2:	4619      	mov	r1, r3
 8007bc4:	4620      	mov	r0, r4
 8007bc6:	f000 fb23 	bl	8008210 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE7emplaceILj4EJS9_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	    return {};
 8007bca:	462b      	mov	r3, r5
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8007bcc:	4618      	mov	r0, r3
 8007bce:	3710      	adds	r7, #16
 8007bd0:	46bd      	mov	sp, r7
 8007bd2:	bdb0      	pop	{r4, r5, r7, pc}

08007bd4 <_ZNSt8__detail9__variant5__getILj4ERNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8007bd4:	b590      	push	{r4, r7, lr}
 8007bd6:	b083      	sub	sp, #12
 8007bd8:	af00      	add	r7, sp, #0
 8007bda:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8007bdc:	6878      	ldr	r0, [r7, #4]
 8007bde:	f000 fa5c 	bl	800809a <_ZSt7forwardIRNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8007be2:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8007be4:	4619      	mov	r1, r3
 8007be6:	4620      	mov	r0, r4
 8007be8:	f7fc f85e 	bl	8003ca8 <_ZNSt8__detail9__variant5__getILj4ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8007bec:	4603      	mov	r3, r0
    }
 8007bee:	4618      	mov	r0, r3
 8007bf0:	370c      	adds	r7, #12
 8007bf2:	46bd      	mov	sp, r7
 8007bf4:	bd90      	pop	{r4, r7, pc}

08007bf6 <_ZN9__gnu_cxx13new_allocatorI6SymbolE10deallocateEPS1_j>:
      deallocate(pointer __p, size_type)
 8007bf6:	b580      	push	{r7, lr}
 8007bf8:	b084      	sub	sp, #16
 8007bfa:	af00      	add	r7, sp, #0
 8007bfc:	60f8      	str	r0, [r7, #12]
 8007bfe:	60b9      	str	r1, [r7, #8]
 8007c00:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 8007c02:	68b8      	ldr	r0, [r7, #8]
 8007c04:	f01a fdfc 	bl	8022800 <_ZdlPv>
      }
 8007c08:	3710      	adds	r7, #16
 8007c0a:	46bd      	mov	sp, r7
 8007c0c:	bd80      	pop	{r7, pc}

08007c0e <_ZNSt16allocator_traitsISaI6SymbolEE8allocateERS1_j>:
      allocate(allocator_type& __a, size_type __n)
 8007c0e:	b580      	push	{r7, lr}
 8007c10:	b082      	sub	sp, #8
 8007c12:	af00      	add	r7, sp, #0
 8007c14:	6078      	str	r0, [r7, #4]
 8007c16:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 8007c18:	2200      	movs	r2, #0
 8007c1a:	6839      	ldr	r1, [r7, #0]
 8007c1c:	6878      	ldr	r0, [r7, #4]
 8007c1e:	f000 fb10 	bl	8008242 <_ZN9__gnu_cxx13new_allocatorI6SymbolE8allocateEjPKv>
 8007c22:	4603      	mov	r3, r0
 8007c24:	4618      	mov	r0, r3
 8007c26:	3708      	adds	r7, #8
 8007c28:	46bd      	mov	sp, r7
 8007c2a:	bd80      	pop	{r7, pc}

08007c2c <_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
 8007c2c:	b580      	push	{r7, lr}
 8007c2e:	b086      	sub	sp, #24
 8007c30:	af00      	add	r7, sp, #0
 8007c32:	60f8      	str	r0, [r7, #12]
 8007c34:	60b9      	str	r1, [r7, #8]
 8007c36:	607a      	str	r2, [r7, #4]
      const bool __assignable = is_assignable<_RefType2, _RefType1>::value;
 8007c38:	2301      	movs	r3, #1
 8007c3a:	75fb      	strb	r3, [r7, #23]
	__uninit_copy(__first, __last, __result);
 8007c3c:	687a      	ldr	r2, [r7, #4]
 8007c3e:	68b9      	ldr	r1, [r7, #8]
 8007c40:	68f8      	ldr	r0, [r7, #12]
 8007c42:	f000 fb1d 	bl	8008280 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_>
 8007c46:	4603      	mov	r3, r0
    }
 8007c48:	4618      	mov	r0, r3
 8007c4a:	3718      	adds	r7, #24
 8007c4c:	46bd      	mov	sp, r7
 8007c4e:	bd80      	pop	{r7, pc}

08007c50 <_ZNSt12_Destroy_auxILb0EE9__destroyIP6SymbolEEvT_S4_>:
        __destroy(_ForwardIterator __first, _ForwardIterator __last)
 8007c50:	b580      	push	{r7, lr}
 8007c52:	b082      	sub	sp, #8
 8007c54:	af00      	add	r7, sp, #0
 8007c56:	6078      	str	r0, [r7, #4]
 8007c58:	6039      	str	r1, [r7, #0]
	  for (; __first != __last; ++__first)
 8007c5a:	687a      	ldr	r2, [r7, #4]
 8007c5c:	683b      	ldr	r3, [r7, #0]
 8007c5e:	429a      	cmp	r2, r3
 8007c60:	d00a      	beq.n	8007c78 <_ZNSt12_Destroy_auxILb0EE9__destroyIP6SymbolEEvT_S4_+0x28>
	    std::_Destroy(std::__addressof(*__first));
 8007c62:	6878      	ldr	r0, [r7, #4]
 8007c64:	f000 fb3b 	bl	80082de <_ZSt11__addressofI6SymbolEPT_RS1_>
 8007c68:	4603      	mov	r3, r0
 8007c6a:	4618      	mov	r0, r3
 8007c6c:	f000 fb42 	bl	80082f4 <_ZSt8_DestroyI6SymbolEvPT_>
	  for (; __first != __last; ++__first)
 8007c70:	687b      	ldr	r3, [r7, #4]
 8007c72:	3320      	adds	r3, #32
 8007c74:	607b      	str	r3, [r7, #4]
 8007c76:	e7f0      	b.n	8007c5a <_ZNSt12_Destroy_auxILb0EE9__destroyIP6SymbolEEvT_S4_+0xa>
	}
 8007c78:	bf00      	nop
 8007c7a:	3708      	adds	r7, #8
 8007c7c:	46bd      	mov	sp, r7
 8007c7e:	bd80      	pop	{r7, pc}

08007c80 <_ZSt12__niter_baseIPK6SymbolSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE>:
{
_GLIBCXX_BEGIN_NAMESPACE_VERSION

  template<typename _Iterator, typename _Container>
    _Iterator
    __niter_base(__gnu_cxx::__normal_iterator<_Iterator, _Container> __it)
 8007c80:	b580      	push	{r7, lr}
 8007c82:	b082      	sub	sp, #8
 8007c84:	af00      	add	r7, sp, #0
 8007c86:	6078      	str	r0, [r7, #4]
    _GLIBCXX_NOEXCEPT_IF(std::is_nothrow_copy_constructible<_Iterator>::value)
    { return __it.base(); }
 8007c88:	1d3b      	adds	r3, r7, #4
 8007c8a:	4618      	mov	r0, r3
 8007c8c:	f000 fb3d 	bl	800830a <_ZNK9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS1_SaIS1_EEE4baseEv>
 8007c90:	4603      	mov	r3, r0
 8007c92:	681b      	ldr	r3, [r3, #0]
 8007c94:	4618      	mov	r0, r3
 8007c96:	3708      	adds	r7, #8
 8007c98:	46bd      	mov	sp, r7
 8007c9a:	bd80      	pop	{r7, pc}

08007c9c <_ZSt12__niter_baseIP6SymbolSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE>:
    __niter_base(__gnu_cxx::__normal_iterator<_Iterator, _Container> __it)
 8007c9c:	b580      	push	{r7, lr}
 8007c9e:	b082      	sub	sp, #8
 8007ca0:	af00      	add	r7, sp, #0
 8007ca2:	6078      	str	r0, [r7, #4]
    { return __it.base(); }
 8007ca4:	1d3b      	adds	r3, r7, #4
 8007ca6:	4618      	mov	r0, r3
 8007ca8:	f000 fb3a 	bl	8008320 <_ZNK9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS1_SaIS1_EEE4baseEv>
 8007cac:	4603      	mov	r3, r0
 8007cae:	681b      	ldr	r3, [r3, #0]
 8007cb0:	4618      	mov	r0, r3
 8007cb2:	3708      	adds	r7, #8
 8007cb4:	46bd      	mov	sp, r7
 8007cb6:	bd80      	pop	{r7, pc}

08007cb8 <_ZSt13__copy_move_aILb0EPK6SymbolPS0_ET1_T0_S5_S4_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
 8007cb8:	b580      	push	{r7, lr}
 8007cba:	b086      	sub	sp, #24
 8007cbc:	af00      	add	r7, sp, #0
 8007cbe:	60f8      	str	r0, [r7, #12]
 8007cc0:	60b9      	str	r1, [r7, #8]
 8007cc2:	607a      	str	r2, [r7, #4]
      const bool __simple = (__is_trivially_copyable(_ValueTypeI)
 8007cc4:	2300      	movs	r3, #0
 8007cc6:	75fb      	strb	r3, [r7, #23]
			      _Category>::__copy_m(__first, __last, __result);
 8007cc8:	687a      	ldr	r2, [r7, #4]
 8007cca:	68b9      	ldr	r1, [r7, #8]
 8007ccc:	68f8      	ldr	r0, [r7, #12]
 8007cce:	f000 fb32 	bl	8008336 <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPK6SymbolPS3_EET0_T_S8_S7_>
 8007cd2:	4603      	mov	r3, r0
    }
 8007cd4:	4618      	mov	r0, r3
 8007cd6:	3718      	adds	r7, #24
 8007cd8:	46bd      	mov	sp, r7
 8007cda:	bd80      	pop	{r7, pc}

08007cdc <_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS2_SaIS2_EEEES3_ET_S8_T0_>:
    __niter_wrap(_From __from, _To __res)
 8007cdc:	b580      	push	{r7, lr}
 8007cde:	b082      	sub	sp, #8
 8007ce0:	af00      	add	r7, sp, #0
 8007ce2:	6078      	str	r0, [r7, #4]
 8007ce4:	6039      	str	r1, [r7, #0]
    { return __from + (__res - std::__niter_base(__from)); }
 8007ce6:	6878      	ldr	r0, [r7, #4]
 8007ce8:	f7ff ffd8 	bl	8007c9c <_ZSt12__niter_baseIP6SymbolSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE>
 8007cec:	4602      	mov	r2, r0
 8007cee:	683b      	ldr	r3, [r7, #0]
 8007cf0:	1a9b      	subs	r3, r3, r2
 8007cf2:	115b      	asrs	r3, r3, #5
 8007cf4:	461a      	mov	r2, r3
 8007cf6:	1d3b      	adds	r3, r7, #4
 8007cf8:	4611      	mov	r1, r2
 8007cfa:	4618      	mov	r0, r3
 8007cfc:	f000 fb3c 	bl	8008378 <_ZNK9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS1_SaIS1_EEEplEi>
 8007d00:	4603      	mov	r3, r0
 8007d02:	4618      	mov	r0, r3
 8007d04:	3708      	adds	r7, #8
 8007d06:	46bd      	mov	sp, r7
 8007d08:	bd80      	pop	{r7, pc}

08007d0a <_ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS4_SaIS4_EEEEEEvT_SA_>:
        __destroy(_ForwardIterator __first, _ForwardIterator __last)
 8007d0a:	b580      	push	{r7, lr}
 8007d0c:	b082      	sub	sp, #8
 8007d0e:	af00      	add	r7, sp, #0
 8007d10:	6078      	str	r0, [r7, #4]
 8007d12:	6039      	str	r1, [r7, #0]
	  for (; __first != __last; ++__first)
 8007d14:	463a      	mov	r2, r7
 8007d16:	1d3b      	adds	r3, r7, #4
 8007d18:	4611      	mov	r1, r2
 8007d1a:	4618      	mov	r0, r3
 8007d1c:	f000 fb44 	bl	80083a8 <_ZN9__gnu_cxxneIP6SymbolSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
 8007d20:	4603      	mov	r3, r0
 8007d22:	2b00      	cmp	r3, #0
 8007d24:	d010      	beq.n	8007d48 <_ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS4_SaIS4_EEEEEEvT_SA_+0x3e>
	    std::_Destroy(std::__addressof(*__first));
 8007d26:	1d3b      	adds	r3, r7, #4
 8007d28:	4618      	mov	r0, r3
 8007d2a:	f000 fb66 	bl	80083fa <_ZNK9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS1_SaIS1_EEEdeEv>
 8007d2e:	4603      	mov	r3, r0
 8007d30:	4618      	mov	r0, r3
 8007d32:	f000 fad4 	bl	80082de <_ZSt11__addressofI6SymbolEPT_RS1_>
 8007d36:	4603      	mov	r3, r0
 8007d38:	4618      	mov	r0, r3
 8007d3a:	f000 fadb 	bl	80082f4 <_ZSt8_DestroyI6SymbolEvPT_>
	  for (; __first != __last; ++__first)
 8007d3e:	1d3b      	adds	r3, r7, #4
 8007d40:	4618      	mov	r0, r3
 8007d42:	f000 fb49 	bl	80083d8 <_ZN9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS1_SaIS1_EEEppEv>
 8007d46:	e7e5      	b.n	8007d14 <_ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS4_SaIS4_EEEEEEvT_SA_+0xa>
	}
 8007d48:	bf00      	nop
 8007d4a:	3708      	adds	r7, #8
 8007d4c:	46bd      	mov	sp, r7
 8007d4e:	bd80      	pop	{r7, pc}

08007d50 <_ZSt12__niter_baseIP6SymbolET_S2_>:
    __niter_base(_Iterator __it)
 8007d50:	b480      	push	{r7}
 8007d52:	b083      	sub	sp, #12
 8007d54:	af00      	add	r7, sp, #0
 8007d56:	6078      	str	r0, [r7, #4]
    { return __it; }
 8007d58:	687b      	ldr	r3, [r7, #4]
 8007d5a:	4618      	mov	r0, r3
 8007d5c:	370c      	adds	r7, #12
 8007d5e:	46bd      	mov	sp, r7
 8007d60:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007d64:	4770      	bx	lr

08007d66 <_ZSt13__copy_move_aILb0EP6SymbolS1_ET1_T0_S3_S2_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
 8007d66:	b580      	push	{r7, lr}
 8007d68:	b086      	sub	sp, #24
 8007d6a:	af00      	add	r7, sp, #0
 8007d6c:	60f8      	str	r0, [r7, #12]
 8007d6e:	60b9      	str	r1, [r7, #8]
 8007d70:	607a      	str	r2, [r7, #4]
      const bool __simple = (__is_trivially_copyable(_ValueTypeI)
 8007d72:	2300      	movs	r3, #0
 8007d74:	75fb      	strb	r3, [r7, #23]
			      _Category>::__copy_m(__first, __last, __result);
 8007d76:	687a      	ldr	r2, [r7, #4]
 8007d78:	68b9      	ldr	r1, [r7, #8]
 8007d7a:	68f8      	ldr	r0, [r7, #12]
 8007d7c:	f000 fb49 	bl	8008412 <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIP6SymbolS4_EET0_T_S6_S5_>
 8007d80:	4603      	mov	r3, r0
    }
 8007d82:	4618      	mov	r0, r3
 8007d84:	3718      	adds	r7, #24
 8007d86:	46bd      	mov	sp, r7
 8007d88:	bd80      	pop	{r7, pc}

08007d8a <_ZSt12__niter_wrapIP6SymbolET_RKS2_S2_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
 8007d8a:	b480      	push	{r7}
 8007d8c:	b083      	sub	sp, #12
 8007d8e:	af00      	add	r7, sp, #0
 8007d90:	6078      	str	r0, [r7, #4]
 8007d92:	6039      	str	r1, [r7, #0]
    { return __res; }
 8007d94:	683b      	ldr	r3, [r7, #0]
 8007d96:	4618      	mov	r0, r3
 8007d98:	370c      	adds	r7, #12
 8007d9a:	46bd      	mov	sp, r7
 8007d9c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007da0:	4770      	bx	lr

08007da2 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIP6SymbolS3_EET0_T_S5_S4_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
 8007da2:	b580      	push	{r7, lr}
 8007da4:	b086      	sub	sp, #24
 8007da6:	af00      	add	r7, sp, #0
 8007da8:	60f8      	str	r0, [r7, #12]
 8007daa:	60b9      	str	r1, [r7, #8]
 8007dac:	607a      	str	r2, [r7, #4]
	  _ForwardIterator __cur = __result;
 8007dae:	687b      	ldr	r3, [r7, #4]
 8007db0:	617b      	str	r3, [r7, #20]
	      for (; __first != __last; ++__first, (void)++__cur)
 8007db2:	68fa      	ldr	r2, [r7, #12]
 8007db4:	68bb      	ldr	r3, [r7, #8]
 8007db6:	429a      	cmp	r2, r3
 8007db8:	d00e      	beq.n	8007dd8 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIP6SymbolS3_EET0_T_S5_S4_+0x36>
		std::_Construct(std::__addressof(*__cur), *__first);
 8007dba:	6978      	ldr	r0, [r7, #20]
 8007dbc:	f000 fa8f 	bl	80082de <_ZSt11__addressofI6SymbolEPT_RS1_>
 8007dc0:	4603      	mov	r3, r0
 8007dc2:	68f9      	ldr	r1, [r7, #12]
 8007dc4:	4618      	mov	r0, r3
 8007dc6:	f000 fbab 	bl	8008520 <_ZSt10_ConstructI6SymbolJRS0_EEvPT_DpOT0_>
	      for (; __first != __last; ++__first, (void)++__cur)
 8007dca:	68fb      	ldr	r3, [r7, #12]
 8007dcc:	3320      	adds	r3, #32
 8007dce:	60fb      	str	r3, [r7, #12]
 8007dd0:	697b      	ldr	r3, [r7, #20]
 8007dd2:	3320      	adds	r3, #32
 8007dd4:	617b      	str	r3, [r7, #20]
 8007dd6:	e7ec      	b.n	8007db2 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIP6SymbolS3_EET0_T_S5_S4_+0x10>
	      return __cur;
 8007dd8:	697b      	ldr	r3, [r7, #20]
	}
 8007dda:	4618      	mov	r0, r3
 8007ddc:	3718      	adds	r7, #24
 8007dde:	46bd      	mov	sp, r7
 8007de0:	bd80      	pop	{r7, pc}

08007de2 <_ZSt9addressofIN9__gnu_cxx16__aligned_membufISt6vectorI6SymbolSaIS3_EEEEEPT_RS7_>:
    addressof(_Tp& __r) noexcept
 8007de2:	b580      	push	{r7, lr}
 8007de4:	b082      	sub	sp, #8
 8007de6:	af00      	add	r7, sp, #0
 8007de8:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 8007dea:	6878      	ldr	r0, [r7, #4]
 8007dec:	f000 fbaf 	bl	800854e <_ZSt11__addressofIN9__gnu_cxx16__aligned_membufISt6vectorI6SymbolSaIS3_EEEEEPT_RS7_>
 8007df0:	4603      	mov	r3, r0
 8007df2:	4618      	mov	r0, r3
 8007df4:	3708      	adds	r7, #8
 8007df6:	46bd      	mov	sp, r7
 8007df8:	bd80      	pop	{r7, pc}

08007dfa <_ZNSt6vectorI6SymbolSaIS0_EEC1ERKS2_>:
      vector(const vector& __x)
 8007dfa:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007dfc:	b085      	sub	sp, #20
 8007dfe:	af00      	add	r7, sp, #0
 8007e00:	6078      	str	r0, [r7, #4]
 8007e02:	6039      	str	r1, [r7, #0]
	_Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()))
 8007e04:	687c      	ldr	r4, [r7, #4]
 8007e06:	6838      	ldr	r0, [r7, #0]
 8007e08:	f7fe ff09 	bl	8006c1e <_ZNKSt6vectorI6SymbolSaIS0_EE4sizeEv>
 8007e0c:	4605      	mov	r5, r0
 8007e0e:	683b      	ldr	r3, [r7, #0]
 8007e10:	4618      	mov	r0, r3
 8007e12:	f7fe febe 	bl	8006b92 <_ZNKSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 8007e16:	4602      	mov	r2, r0
 8007e18:	f107 030c 	add.w	r3, r7, #12
 8007e1c:	4611      	mov	r1, r2
 8007e1e:	4618      	mov	r0, r3
 8007e20:	f000 fba0 	bl	8008564 <_ZN9__gnu_cxx14__alloc_traitsISaI6SymbolES1_E17_S_select_on_copyERKS2_>
 8007e24:	f107 030c 	add.w	r3, r7, #12
 8007e28:	461a      	mov	r2, r3
 8007e2a:	4629      	mov	r1, r5
 8007e2c:	4620      	mov	r0, r4
 8007e2e:	f000 fbb3 	bl	8008598 <_ZNSt12_Vector_baseI6SymbolSaIS0_EEC1EjRKS1_>
 8007e32:	f107 030c 	add.w	r3, r7, #12
 8007e36:	4618      	mov	r0, r3
 8007e38:	f000 fba2 	bl	8008580 <_ZNSaI6SymbolED1Ev>
	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 8007e3c:	6838      	ldr	r0, [r7, #0]
 8007e3e:	f7fe ff0e 	bl	8006c5e <_ZNKSt6vectorI6SymbolSaIS0_EE5beginEv>
 8007e42:	4605      	mov	r5, r0
 8007e44:	6838      	ldr	r0, [r7, #0]
 8007e46:	f7fe ff1e 	bl	8006c86 <_ZNKSt6vectorI6SymbolSaIS0_EE3endEv>
 8007e4a:	4606      	mov	r6, r0
 8007e4c:	687b      	ldr	r3, [r7, #4]
 8007e4e:	681c      	ldr	r4, [r3, #0]
				      _M_get_Tp_allocator());
 8007e50:	687b      	ldr	r3, [r7, #4]
 8007e52:	4618      	mov	r0, r3
 8007e54:	f7fe fe92 	bl	8006b7c <_ZNSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 8007e58:	4603      	mov	r3, r0
	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 8007e5a:	4622      	mov	r2, r4
 8007e5c:	4631      	mov	r1, r6
 8007e5e:	4628      	mov	r0, r5
 8007e60:	f7ff fb4a 	bl	80074f8 <_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS2_SaIS2_EEEEPS2_S2_ET0_T_SB_SA_RSaIT1_E>
 8007e64:	4602      	mov	r2, r0
	this->_M_impl._M_finish =
 8007e66:	687b      	ldr	r3, [r7, #4]
 8007e68:	605a      	str	r2, [r3, #4]
      }
 8007e6a:	687b      	ldr	r3, [r7, #4]
 8007e6c:	4618      	mov	r0, r3
 8007e6e:	3714      	adds	r7, #20
 8007e70:	46bd      	mov	sp, r7
 8007e72:	bdf0      	pop	{r4, r5, r6, r7, pc}

08007e74 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKc10token_typeEE7_M_addrEv>:
      _M_addr() const noexcept
 8007e74:	b480      	push	{r7}
 8007e76:	b083      	sub	sp, #12
 8007e78:	af00      	add	r7, sp, #0
 8007e7a:	6078      	str	r0, [r7, #4]
      { return static_cast<const void*>(&_M_storage); }
 8007e7c:	687b      	ldr	r3, [r7, #4]
 8007e7e:	4618      	mov	r0, r3
 8007e80:	370c      	adds	r7, #12
 8007e82:	46bd      	mov	sp, r7
 8007e84:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007e88:	4770      	bx	lr

08007e8a <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 8007e8a:	b580      	push	{r7, lr}
 8007e8c:	b084      	sub	sp, #16
 8007e8e:	af00      	add	r7, sp, #0
 8007e90:	60f8      	str	r0, [r7, #12]
 8007e92:	60b9      	str	r1, [r7, #8]
 8007e94:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 8007e96:	68f8      	ldr	r0, [r7, #12]
 8007e98:	f000 fb92 	bl	80085c0 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEE8max_sizeEv>
 8007e9c:	4602      	mov	r2, r0
 8007e9e:	68bb      	ldr	r3, [r7, #8]
 8007ea0:	4293      	cmp	r3, r2
 8007ea2:	bf8c      	ite	hi
 8007ea4:	2301      	movhi	r3, #1
 8007ea6:	2300      	movls	r3, #0
 8007ea8:	b2db      	uxtb	r3, r3
 8007eaa:	2b00      	cmp	r3, #0
 8007eac:	d001      	beq.n	8007eb2 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 8007eae:	f01a fd7f 	bl	80229b0 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 8007eb2:	68ba      	ldr	r2, [r7, #8]
 8007eb4:	4613      	mov	r3, r2
 8007eb6:	009b      	lsls	r3, r3, #2
 8007eb8:	4413      	add	r3, r2
 8007eba:	009b      	lsls	r3, r3, #2
 8007ebc:	4618      	mov	r0, r3
 8007ebe:	f01a fcb2 	bl	8022826 <_Znwj>
 8007ec2:	4603      	mov	r3, r0
 8007ec4:	bf00      	nop
      }
 8007ec6:	4618      	mov	r0, r3
 8007ec8:	3710      	adds	r7, #16
 8007eca:	46bd      	mov	sp, r7
 8007ecc:	bd80      	pop	{r7, pc}

08007ece <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEE9constructIS5_JRKS5_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 8007ece:	b590      	push	{r4, r7, lr}
 8007ed0:	b085      	sub	sp, #20
 8007ed2:	af00      	add	r7, sp, #0
 8007ed4:	60f8      	str	r0, [r7, #12]
 8007ed6:	60b9      	str	r1, [r7, #8]
 8007ed8:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 8007eda:	6878      	ldr	r0, [r7, #4]
 8007edc:	f7fc fad0 	bl	8004480 <_ZSt7forwardIRKSt4pairIKc10token_typeEEOT_RNSt16remove_referenceIS6_E4typeE>
 8007ee0:	4604      	mov	r4, r0
 8007ee2:	68bb      	ldr	r3, [r7, #8]
 8007ee4:	4619      	mov	r1, r3
 8007ee6:	2002      	movs	r0, #2
 8007ee8:	f7f9 f8b7 	bl	800105a <_ZnwjPv>
 8007eec:	4603      	mov	r3, r0
 8007eee:	461a      	mov	r2, r3
 8007ef0:	4623      	mov	r3, r4
 8007ef2:	881b      	ldrh	r3, [r3, #0]
 8007ef4:	8013      	strh	r3, [r2, #0]
 8007ef6:	bf00      	nop
 8007ef8:	3714      	adds	r7, #20
 8007efa:	46bd      	mov	sp, r7
 8007efc:	bd90      	pop	{r4, r7, pc}

08007efe <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE7_M_addrEv>:
      _M_addr() const noexcept
 8007efe:	b480      	push	{r7}
 8007f00:	b083      	sub	sp, #12
 8007f02:	af00      	add	r7, sp, #0
 8007f04:	6078      	str	r0, [r7, #4]
      { return static_cast<const void*>(&_M_storage); }
 8007f06:	687b      	ldr	r3, [r7, #4]
 8007f08:	4618      	mov	r0, r3
 8007f0a:	370c      	adds	r7, #12
 8007f0c:	46bd      	mov	sp, r7
 8007f0e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007f12:	4770      	bx	lr

08007f14 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 8007f14:	b580      	push	{r7, lr}
 8007f16:	b084      	sub	sp, #16
 8007f18:	af00      	add	r7, sp, #0
 8007f1a:	60f8      	str	r0, [r7, #12]
 8007f1c:	60b9      	str	r1, [r7, #8]
 8007f1e:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 8007f20:	68f8      	ldr	r0, [r7, #12]
 8007f22:	f000 fb5b 	bl	80085dc <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEE8max_sizeEv>
 8007f26:	4602      	mov	r2, r0
 8007f28:	68bb      	ldr	r3, [r7, #8]
 8007f2a:	4293      	cmp	r3, r2
 8007f2c:	bf8c      	ite	hi
 8007f2e:	2301      	movhi	r3, #1
 8007f30:	2300      	movls	r3, #0
 8007f32:	b2db      	uxtb	r3, r3
 8007f34:	2b00      	cmp	r3, #0
 8007f36:	d001      	beq.n	8007f3c <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 8007f38:	f01a fd3a 	bl	80229b0 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 8007f3c:	68bb      	ldr	r3, [r7, #8]
 8007f3e:	222c      	movs	r2, #44	; 0x2c
 8007f40:	fb02 f303 	mul.w	r3, r2, r3
 8007f44:	4618      	mov	r0, r3
 8007f46:	f01a fc6e 	bl	8022826 <_Znwj>
 8007f4a:	4603      	mov	r3, r0
 8007f4c:	bf00      	nop
      }
 8007f4e:	4618      	mov	r0, r3
 8007f50:	3710      	adds	r7, #16
 8007f52:	46bd      	mov	sp, r7
 8007f54:	bd80      	pop	{r7, pc}

08007f56 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1ERKS8_>:
      constexpr pair(const pair&) = default;
 8007f56:	b580      	push	{r7, lr}
 8007f58:	b082      	sub	sp, #8
 8007f5a:	af00      	add	r7, sp, #0
 8007f5c:	6078      	str	r0, [r7, #4]
 8007f5e:	6039      	str	r1, [r7, #0]
 8007f60:	687b      	ldr	r3, [r7, #4]
 8007f62:	683a      	ldr	r2, [r7, #0]
 8007f64:	4611      	mov	r1, r2
 8007f66:	4618      	mov	r0, r3
 8007f68:	f01b f8c0 	bl	80230ec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 8007f6c:	683b      	ldr	r3, [r7, #0]
 8007f6e:	7e1a      	ldrb	r2, [r3, #24]
 8007f70:	687b      	ldr	r3, [r7, #4]
 8007f72:	761a      	strb	r2, [r3, #24]
 8007f74:	687b      	ldr	r3, [r7, #4]
 8007f76:	4618      	mov	r0, r3
 8007f78:	3708      	adds	r7, #8
 8007f7a:	46bd      	mov	sp, r7
 8007f7c:	bd80      	pop	{r7, pc}

08007f7e <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEE9constructISB_JRKSB_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 8007f7e:	b590      	push	{r4, r7, lr}
 8007f80:	b085      	sub	sp, #20
 8007f82:	af00      	add	r7, sp, #0
 8007f84:	60f8      	str	r0, [r7, #12]
 8007f86:	60b9      	str	r1, [r7, #8]
 8007f88:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 8007f8a:	6878      	ldr	r0, [r7, #4]
 8007f8c:	f7fc fc6e 	bl	800486c <_ZSt7forwardIRKSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEOT_RNSt16remove_referenceISC_E4typeE>
 8007f90:	4604      	mov	r4, r0
 8007f92:	68bb      	ldr	r3, [r7, #8]
 8007f94:	4619      	mov	r1, r3
 8007f96:	201c      	movs	r0, #28
 8007f98:	f7f9 f85f 	bl	800105a <_ZnwjPv>
 8007f9c:	4603      	mov	r3, r0
 8007f9e:	4621      	mov	r1, r4
 8007fa0:	4618      	mov	r0, r3
 8007fa2:	f7ff ffd8 	bl	8007f56 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1ERKS8_>
 8007fa6:	bf00      	nop
 8007fa8:	3714      	adds	r7, #20
 8007faa:	46bd      	mov	sp, r7
 8007fac:	bd90      	pop	{r4, r7, pc}

08007fae <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKc12double_tokenEE7_M_addrEv>:
      _M_addr() const noexcept
 8007fae:	b480      	push	{r7}
 8007fb0:	b083      	sub	sp, #12
 8007fb2:	af00      	add	r7, sp, #0
 8007fb4:	6078      	str	r0, [r7, #4]
      { return static_cast<const void*>(&_M_storage); }
 8007fb6:	687b      	ldr	r3, [r7, #4]
 8007fb8:	4618      	mov	r0, r3
 8007fba:	370c      	adds	r7, #12
 8007fbc:	46bd      	mov	sp, r7
 8007fbe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007fc2:	4770      	bx	lr

08007fc4 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 8007fc4:	b580      	push	{r7, lr}
 8007fc6:	b084      	sub	sp, #16
 8007fc8:	af00      	add	r7, sp, #0
 8007fca:	60f8      	str	r0, [r7, #12]
 8007fcc:	60b9      	str	r1, [r7, #8]
 8007fce:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 8007fd0:	68f8      	ldr	r0, [r7, #12]
 8007fd2:	f000 fb11 	bl	80085f8 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEE8max_sizeEv>
 8007fd6:	4602      	mov	r2, r0
 8007fd8:	68bb      	ldr	r3, [r7, #8]
 8007fda:	4293      	cmp	r3, r2
 8007fdc:	bf8c      	ite	hi
 8007fde:	2301      	movhi	r3, #1
 8007fe0:	2300      	movls	r3, #0
 8007fe2:	b2db      	uxtb	r3, r3
 8007fe4:	2b00      	cmp	r3, #0
 8007fe6:	d001      	beq.n	8007fec <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 8007fe8:	f01a fce2 	bl	80229b0 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 8007fec:	68ba      	ldr	r2, [r7, #8]
 8007fee:	4613      	mov	r3, r2
 8007ff0:	009b      	lsls	r3, r3, #2
 8007ff2:	4413      	add	r3, r2
 8007ff4:	009b      	lsls	r3, r3, #2
 8007ff6:	4618      	mov	r0, r3
 8007ff8:	f01a fc15 	bl	8022826 <_Znwj>
 8007ffc:	4603      	mov	r3, r0
 8007ffe:	bf00      	nop
      }
 8008000:	4618      	mov	r0, r3
 8008002:	3710      	adds	r7, #16
 8008004:	46bd      	mov	sp, r7
 8008006:	bd80      	pop	{r7, pc}

08008008 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEE9constructIS5_JRKS5_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 8008008:	b590      	push	{r4, r7, lr}
 800800a:	b085      	sub	sp, #20
 800800c:	af00      	add	r7, sp, #0
 800800e:	60f8      	str	r0, [r7, #12]
 8008010:	60b9      	str	r1, [r7, #8]
 8008012:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 8008014:	6878      	ldr	r0, [r7, #4]
 8008016:	f7fc fe13 	bl	8004c40 <_ZSt7forwardIRKSt4pairIKc12double_tokenEEOT_RNSt16remove_referenceIS6_E4typeE>
 800801a:	4604      	mov	r4, r0
 800801c:	68bb      	ldr	r3, [r7, #8]
 800801e:	4619      	mov	r1, r3
 8008020:	2003      	movs	r0, #3
 8008022:	f7f9 f81a 	bl	800105a <_ZnwjPv>
 8008026:	4603      	mov	r3, r0
 8008028:	4622      	mov	r2, r4
 800802a:	8811      	ldrh	r1, [r2, #0]
 800802c:	7892      	ldrb	r2, [r2, #2]
 800802e:	8019      	strh	r1, [r3, #0]
 8008030:	709a      	strb	r2, [r3, #2]
 8008032:	bf00      	nop
 8008034:	3714      	adds	r7, #20
 8008036:	46bd      	mov	sp, r7
 8008038:	bd90      	pop	{r4, r7, pc}

0800803a <_ZNSt12_Vector_baseI6SymbolSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
 800803a:	b580      	push	{r7, lr}
 800803c:	b082      	sub	sp, #8
 800803e:	af00      	add	r7, sp, #0
 8008040:	6078      	str	r0, [r7, #4]
 8008042:	6878      	ldr	r0, [r7, #4]
 8008044:	f000 fa9c 	bl	8008580 <_ZNSaI6SymbolED1Ev>
 8008048:	687b      	ldr	r3, [r7, #4]
 800804a:	4618      	mov	r0, r3
 800804c:	3708      	adds	r7, #8
 800804e:	46bd      	mov	sp, r7
 8008050:	bd80      	pop	{r7, pc}

08008052 <_ZNSt12_Vector_baseI6SymbolSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
 8008052:	b580      	push	{r7, lr}
 8008054:	b082      	sub	sp, #8
 8008056:	af00      	add	r7, sp, #0
 8008058:	6078      	str	r0, [r7, #4]
	_M_deallocate(_M_impl._M_start,
 800805a:	687b      	ldr	r3, [r7, #4]
 800805c:	6819      	ldr	r1, [r3, #0]
		      _M_impl._M_end_of_storage - _M_impl._M_start);
 800805e:	687b      	ldr	r3, [r7, #4]
 8008060:	689a      	ldr	r2, [r3, #8]
 8008062:	687b      	ldr	r3, [r7, #4]
 8008064:	681b      	ldr	r3, [r3, #0]
 8008066:	1ad3      	subs	r3, r2, r3
 8008068:	115b      	asrs	r3, r3, #5
	_M_deallocate(_M_impl._M_start,
 800806a:	461a      	mov	r2, r3
 800806c:	6878      	ldr	r0, [r7, #4]
 800806e:	f7fe fdb5 	bl	8006bdc <_ZNSt12_Vector_baseI6SymbolSaIS0_EE13_M_deallocateEPS0_j>
      }
 8008072:	687b      	ldr	r3, [r7, #4]
 8008074:	4618      	mov	r0, r3
 8008076:	f7ff ffe0 	bl	800803a <_ZNSt12_Vector_baseI6SymbolSaIS0_EE12_Vector_implD1Ev>
 800807a:	687b      	ldr	r3, [r7, #4]
 800807c:	4618      	mov	r0, r3
 800807e:	3708      	adds	r7, #8
 8008080:	46bd      	mov	sp, r7
 8008082:	bd80      	pop	{r7, pc}

08008084 <_ZSt11__addressofIN9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEPT_RS9_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 8008084:	b480      	push	{r7}
 8008086:	b083      	sub	sp, #12
 8008088:	af00      	add	r7, sp, #0
 800808a:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 800808c:	687b      	ldr	r3, [r7, #4]
 800808e:	4618      	mov	r0, r3
 8008090:	370c      	adds	r7, #12
 8008092:	46bd      	mov	sp, r7
 8008094:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008098:	4770      	bx	lr

0800809a <_ZSt7forwardIRNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800809a:	b480      	push	{r7}
 800809c:	b083      	sub	sp, #12
 800809e:	af00      	add	r7, sp, #0
 80080a0:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80080a2:	687b      	ldr	r3, [r7, #4]
 80080a4:	4618      	mov	r0, r3
 80080a6:	370c      	adds	r7, #12
 80080a8:	46bd      	mov	sp, r7
 80080aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80080ae:	4770      	bx	lr

080080b0 <_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_>:
    move(_Tp&& __t) noexcept
 80080b0:	b480      	push	{r7}
 80080b2:	b083      	sub	sp, #12
 80080b4:	af00      	add	r7, sp, #0
 80080b6:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 80080b8:	687b      	ldr	r3, [r7, #4]
 80080ba:	4618      	mov	r0, r3
 80080bc:	370c      	adds	r7, #12
 80080be:	46bd      	mov	sp, r7
 80080c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80080c4:	4770      	bx	lr

080080c6 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE7emplaceILj0EJiEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>:
	emplace(_Args&&... __args)
 80080c6:	b580      	push	{r7, lr}
 80080c8:	b082      	sub	sp, #8
 80080ca:	af00      	add	r7, sp, #0
 80080cc:	6078      	str	r0, [r7, #4]
 80080ce:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 80080d0:	687b      	ldr	r3, [r7, #4]
 80080d2:	4618      	mov	r0, r3
 80080d4:	f7fa ff1c 	bl	8002f10 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 80080d8:	6838      	ldr	r0, [r7, #0]
 80080da:	f000 fa9b 	bl	8008614 <_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE>
 80080de:	4603      	mov	r3, r0
 80080e0:	4619      	mov	r1, r3
 80080e2:	6878      	ldr	r0, [r7, #4]
 80080e4:	f000 faa1 	bl	800862a <_ZSt28__variant_construct_by_indexILj0ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEJiEEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 80080e8:	6878      	ldr	r0, [r7, #4]
 80080ea:	f7f9 fc3b 	bl	8001964 <_ZSt3getILj0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 80080ee:	4603      	mov	r3, r0
	}
 80080f0:	4618      	mov	r0, r3
 80080f2:	3708      	adds	r7, #8
 80080f4:	46bd      	mov	sp, r7
 80080f6:	bd80      	pop	{r7, pc}

080080f8 <_ZSt4moveIRfEONSt16remove_referenceIT_E4typeEOS2_>:
    move(_Tp&& __t) noexcept
 80080f8:	b480      	push	{r7}
 80080fa:	b083      	sub	sp, #12
 80080fc:	af00      	add	r7, sp, #0
 80080fe:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 8008100:	687b      	ldr	r3, [r7, #4]
 8008102:	4618      	mov	r0, r3
 8008104:	370c      	adds	r7, #12
 8008106:	46bd      	mov	sp, r7
 8008108:	f85d 7b04 	ldr.w	r7, [sp], #4
 800810c:	4770      	bx	lr

0800810e <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE7emplaceILj1EJfEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>:
	emplace(_Args&&... __args)
 800810e:	b580      	push	{r7, lr}
 8008110:	b082      	sub	sp, #8
 8008112:	af00      	add	r7, sp, #0
 8008114:	6078      	str	r0, [r7, #4]
 8008116:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 8008118:	687b      	ldr	r3, [r7, #4]
 800811a:	4618      	mov	r0, r3
 800811c:	f7fa fef8 	bl	8002f10 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 8008120:	6838      	ldr	r0, [r7, #0]
 8008122:	f000 faa1 	bl	8008668 <_ZSt7forwardIfEOT_RNSt16remove_referenceIS0_E4typeE>
 8008126:	4603      	mov	r3, r0
 8008128:	4619      	mov	r1, r3
 800812a:	6878      	ldr	r0, [r7, #4]
 800812c:	f000 faa7 	bl	800867e <_ZSt28__variant_construct_by_indexILj1ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEJfEEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 8008130:	6878      	ldr	r0, [r7, #4]
 8008132:	f000 fac3 	bl	80086bc <_ZSt3getILj1EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8008136:	4603      	mov	r3, r0
	}
 8008138:	4618      	mov	r0, r3
 800813a:	3708      	adds	r7, #8
 800813c:	46bd      	mov	sp, r7
 800813e:	bd80      	pop	{r7, pc}

08008140 <_ZSt4moveIRbEONSt16remove_referenceIT_E4typeEOS2_>:
    move(_Tp&& __t) noexcept
 8008140:	b480      	push	{r7}
 8008142:	b083      	sub	sp, #12
 8008144:	af00      	add	r7, sp, #0
 8008146:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 8008148:	687b      	ldr	r3, [r7, #4]
 800814a:	4618      	mov	r0, r3
 800814c:	370c      	adds	r7, #12
 800814e:	46bd      	mov	sp, r7
 8008150:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008154:	4770      	bx	lr

08008156 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE7emplaceILj2EJbEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>:
	emplace(_Args&&... __args)
 8008156:	b580      	push	{r7, lr}
 8008158:	b082      	sub	sp, #8
 800815a:	af00      	add	r7, sp, #0
 800815c:	6078      	str	r0, [r7, #4]
 800815e:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 8008160:	687b      	ldr	r3, [r7, #4]
 8008162:	4618      	mov	r0, r3
 8008164:	f7fa fed4 	bl	8002f10 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 8008168:	6838      	ldr	r0, [r7, #0]
 800816a:	f000 fac3 	bl	80086f4 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
 800816e:	4603      	mov	r3, r0
 8008170:	4619      	mov	r1, r3
 8008172:	6878      	ldr	r0, [r7, #4]
 8008174:	f000 fac9 	bl	800870a <_ZSt28__variant_construct_by_indexILj2ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEJbEEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 8008178:	6878      	ldr	r0, [r7, #4]
 800817a:	f7f9 fa29 	bl	80015d0 <_ZSt3getILj2EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 800817e:	4603      	mov	r3, r0
	}
 8008180:	4618      	mov	r0, r3
 8008182:	3708      	adds	r7, #8
 8008184:	46bd      	mov	sp, r7
 8008186:	bd80      	pop	{r7, pc}

08008188 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>:
    move(_Tp&& __t) noexcept
 8008188:	b480      	push	{r7}
 800818a:	b083      	sub	sp, #12
 800818c:	af00      	add	r7, sp, #0
 800818e:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 8008190:	687b      	ldr	r3, [r7, #4]
 8008192:	4618      	mov	r0, r3
 8008194:	370c      	adds	r7, #12
 8008196:	46bd      	mov	sp, r7
 8008198:	f85d 7b04 	ldr.w	r7, [sp], #4
 800819c:	4770      	bx	lr

0800819e <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE7emplaceILj3EJS5_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>:
	emplace(_Args&&... __args)
 800819e:	b580      	push	{r7, lr}
 80081a0:	b082      	sub	sp, #8
 80081a2:	af00      	add	r7, sp, #0
 80081a4:	6078      	str	r0, [r7, #4]
 80081a6:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 80081a8:	687b      	ldr	r3, [r7, #4]
 80081aa:	4618      	mov	r0, r3
 80081ac:	f7fa feb0 	bl	8002f10 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 80081b0:	6838      	ldr	r0, [r7, #0]
 80081b2:	f000 faca 	bl	800874a <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 80081b6:	4603      	mov	r3, r0
 80081b8:	4619      	mov	r1, r3
 80081ba:	6878      	ldr	r0, [r7, #4]
 80081bc:	f000 fad0 	bl	8008760 <_ZSt28__variant_construct_by_indexILj3ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEJS6_EEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 80081c0:	6878      	ldr	r0, [r7, #4]
 80081c2:	f000 faef 	bl	80087a4 <_ZSt3getILj3EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 80081c6:	4603      	mov	r3, r0
	}
 80081c8:	4618      	mov	r0, r3
 80081ca:	3708      	adds	r7, #8
 80081cc:	46bd      	mov	sp, r7
 80081ce:	bd80      	pop	{r7, pc}

080081d0 <_ZSt4moveIRSt6vectorI6SymbolSaIS1_EEEONSt16remove_referenceIT_E4typeEOS6_>:
    move(_Tp&& __t) noexcept
 80081d0:	b480      	push	{r7}
 80081d2:	b083      	sub	sp, #12
 80081d4:	af00      	add	r7, sp, #0
 80081d6:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 80081d8:	687b      	ldr	r3, [r7, #4]
 80081da:	4618      	mov	r0, r3
 80081dc:	370c      	adds	r7, #12
 80081de:	46bd      	mov	sp, r7
 80081e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80081e4:	4770      	bx	lr

080081e6 <_ZNSt6vectorI6SymbolSaIS0_EEaSEOS2_>:
      operator=(vector&& __x) noexcept(_Alloc_traits::_S_nothrow_move())
 80081e6:	b590      	push	{r4, r7, lr}
 80081e8:	b085      	sub	sp, #20
 80081ea:	af00      	add	r7, sp, #0
 80081ec:	6078      	str	r0, [r7, #4]
 80081ee:	6039      	str	r1, [r7, #0]
	constexpr bool __move_storage =
 80081f0:	2301      	movs	r3, #1
 80081f2:	73fb      	strb	r3, [r7, #15]
	_M_move_assign(std::move(__x), __bool_constant<__move_storage>());
 80081f4:	6838      	ldr	r0, [r7, #0]
 80081f6:	f7ff ffeb 	bl	80081d0 <_ZSt4moveIRSt6vectorI6SymbolSaIS1_EEEONSt16remove_referenceIT_E4typeEOS6_>
 80081fa:	4603      	mov	r3, r0
 80081fc:	4622      	mov	r2, r4
 80081fe:	4619      	mov	r1, r3
 8008200:	6878      	ldr	r0, [r7, #4]
 8008202:	f000 faeb 	bl	80087dc <_ZNSt6vectorI6SymbolSaIS0_EE14_M_move_assignEOS2_St17integral_constantIbLb1EE>
	return *this;
 8008206:	687b      	ldr	r3, [r7, #4]
      }
 8008208:	4618      	mov	r0, r3
 800820a:	3714      	adds	r7, #20
 800820c:	46bd      	mov	sp, r7
 800820e:	bd90      	pop	{r4, r7, pc}

08008210 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE7emplaceILj4EJS9_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>:
	emplace(_Args&&... __args)
 8008210:	b580      	push	{r7, lr}
 8008212:	b082      	sub	sp, #8
 8008214:	af00      	add	r7, sp, #0
 8008216:	6078      	str	r0, [r7, #4]
 8008218:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 800821a:	687b      	ldr	r3, [r7, #4]
 800821c:	4618      	mov	r0, r3
 800821e:	f7fa fe77 	bl	8002f10 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 8008222:	6838      	ldr	r0, [r7, #0]
 8008224:	f000 fb18 	bl	8008858 <_ZSt7forwardISt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS4_E4typeE>
 8008228:	4603      	mov	r3, r0
 800822a:	4619      	mov	r1, r3
 800822c:	6878      	ldr	r0, [r7, #4]
 800822e:	f000 fb3e 	bl	80088ae <_ZSt28__variant_construct_by_indexILj4ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEJSA_EEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 8008232:	6878      	ldr	r0, [r7, #4]
 8008234:	f000 fb5c 	bl	80088f0 <_ZSt3getILj4EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8008238:	4603      	mov	r3, r0
	}
 800823a:	4618      	mov	r0, r3
 800823c:	3708      	adds	r7, #8
 800823e:	46bd      	mov	sp, r7
 8008240:	bd80      	pop	{r7, pc}

08008242 <_ZN9__gnu_cxx13new_allocatorI6SymbolE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 8008242:	b580      	push	{r7, lr}
 8008244:	b084      	sub	sp, #16
 8008246:	af00      	add	r7, sp, #0
 8008248:	60f8      	str	r0, [r7, #12]
 800824a:	60b9      	str	r1, [r7, #8]
 800824c:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 800824e:	68f8      	ldr	r0, [r7, #12]
 8008250:	f000 fb6a 	bl	8008928 <_ZNK9__gnu_cxx13new_allocatorI6SymbolE8max_sizeEv>
 8008254:	4602      	mov	r2, r0
 8008256:	68bb      	ldr	r3, [r7, #8]
 8008258:	4293      	cmp	r3, r2
 800825a:	bf8c      	ite	hi
 800825c:	2301      	movhi	r3, #1
 800825e:	2300      	movls	r3, #0
 8008260:	b2db      	uxtb	r3, r3
 8008262:	2b00      	cmp	r3, #0
 8008264:	d001      	beq.n	800826a <_ZN9__gnu_cxx13new_allocatorI6SymbolE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 8008266:	f01a fba3 	bl	80229b0 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 800826a:	68bb      	ldr	r3, [r7, #8]
 800826c:	015b      	lsls	r3, r3, #5
 800826e:	4618      	mov	r0, r3
 8008270:	f01a fad9 	bl	8022826 <_Znwj>
 8008274:	4603      	mov	r3, r0
 8008276:	bf00      	nop
      }
 8008278:	4618      	mov	r0, r3
 800827a:	3710      	adds	r7, #16
 800827c:	46bd      	mov	sp, r7
 800827e:	bd80      	pop	{r7, pc}

08008280 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
 8008280:	b590      	push	{r4, r7, lr}
 8008282:	b087      	sub	sp, #28
 8008284:	af00      	add	r7, sp, #0
 8008286:	60f8      	str	r0, [r7, #12]
 8008288:	60b9      	str	r1, [r7, #8]
 800828a:	607a      	str	r2, [r7, #4]
	  _ForwardIterator __cur = __result;
 800828c:	687b      	ldr	r3, [r7, #4]
 800828e:	617b      	str	r3, [r7, #20]
	      for (; __first != __last; ++__first, (void)++__cur)
 8008290:	f107 0208 	add.w	r2, r7, #8
 8008294:	f107 030c 	add.w	r3, r7, #12
 8008298:	4611      	mov	r1, r2
 800829a:	4618      	mov	r0, r3
 800829c:	f000 fb50 	bl	8008940 <_ZN9__gnu_cxxneIPK6SymbolSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
 80082a0:	4603      	mov	r3, r0
 80082a2:	2b00      	cmp	r3, #0
 80082a4:	d016      	beq.n	80082d4 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_+0x54>
		std::_Construct(std::__addressof(*__cur), *__first);
 80082a6:	6978      	ldr	r0, [r7, #20]
 80082a8:	f000 f819 	bl	80082de <_ZSt11__addressofI6SymbolEPT_RS1_>
 80082ac:	4604      	mov	r4, r0
 80082ae:	f107 030c 	add.w	r3, r7, #12
 80082b2:	4618      	mov	r0, r3
 80082b4:	f000 fb6d 	bl	8008992 <_ZNK9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS1_SaIS1_EEEdeEv>
 80082b8:	4603      	mov	r3, r0
 80082ba:	4619      	mov	r1, r3
 80082bc:	4620      	mov	r0, r4
 80082be:	f000 fb74 	bl	80089aa <_ZSt10_ConstructI6SymbolJRKS0_EEvPT_DpOT0_>
	      for (; __first != __last; ++__first, (void)++__cur)
 80082c2:	f107 030c 	add.w	r3, r7, #12
 80082c6:	4618      	mov	r0, r3
 80082c8:	f000 fb52 	bl	8008970 <_ZN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS1_SaIS1_EEEppEv>
 80082cc:	697b      	ldr	r3, [r7, #20]
 80082ce:	3320      	adds	r3, #32
 80082d0:	617b      	str	r3, [r7, #20]
 80082d2:	e7dd      	b.n	8008290 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_+0x10>
	      return __cur;
 80082d4:	697b      	ldr	r3, [r7, #20]
	}
 80082d6:	4618      	mov	r0, r3
 80082d8:	371c      	adds	r7, #28
 80082da:	46bd      	mov	sp, r7
 80082dc:	bd90      	pop	{r4, r7, pc}

080082de <_ZSt11__addressofI6SymbolEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 80082de:	b480      	push	{r7}
 80082e0:	b083      	sub	sp, #12
 80082e2:	af00      	add	r7, sp, #0
 80082e4:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 80082e6:	687b      	ldr	r3, [r7, #4]
 80082e8:	4618      	mov	r0, r3
 80082ea:	370c      	adds	r7, #12
 80082ec:	46bd      	mov	sp, r7
 80082ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80082f2:	4770      	bx	lr

080082f4 <_ZSt8_DestroyI6SymbolEvPT_>:
    _Destroy(_Tp* __pointer)
 80082f4:	b580      	push	{r7, lr}
 80082f6:	b082      	sub	sp, #8
 80082f8:	af00      	add	r7, sp, #0
 80082fa:	6078      	str	r0, [r7, #4]
    { __pointer->~_Tp(); }
 80082fc:	6878      	ldr	r0, [r7, #4]
 80082fe:	f7f9 f8f3 	bl	80014e8 <_ZN6SymbolD1Ev>
 8008302:	bf00      	nop
 8008304:	3708      	adds	r7, #8
 8008306:	46bd      	mov	sp, r7
 8008308:	bd80      	pop	{r7, pc}

0800830a <_ZNK9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
 800830a:	b480      	push	{r7}
 800830c:	b083      	sub	sp, #12
 800830e:	af00      	add	r7, sp, #0
 8008310:	6078      	str	r0, [r7, #4]
      { return _M_current; }
 8008312:	687b      	ldr	r3, [r7, #4]
 8008314:	4618      	mov	r0, r3
 8008316:	370c      	adds	r7, #12
 8008318:	46bd      	mov	sp, r7
 800831a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800831e:	4770      	bx	lr

08008320 <_ZNK9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
 8008320:	b480      	push	{r7}
 8008322:	b083      	sub	sp, #12
 8008324:	af00      	add	r7, sp, #0
 8008326:	6078      	str	r0, [r7, #4]
      { return _M_current; }
 8008328:	687b      	ldr	r3, [r7, #4]
 800832a:	4618      	mov	r0, r3
 800832c:	370c      	adds	r7, #12
 800832e:	46bd      	mov	sp, r7
 8008330:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008334:	4770      	bx	lr

08008336 <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPK6SymbolPS3_EET0_T_S8_S7_>:
	__copy_m(_II __first, _II __last, _OI __result)
 8008336:	b580      	push	{r7, lr}
 8008338:	b086      	sub	sp, #24
 800833a:	af00      	add	r7, sp, #0
 800833c:	60f8      	str	r0, [r7, #12]
 800833e:	60b9      	str	r1, [r7, #8]
 8008340:	607a      	str	r2, [r7, #4]
	  for(_Distance __n = __last - __first; __n > 0; --__n)
 8008342:	68ba      	ldr	r2, [r7, #8]
 8008344:	68fb      	ldr	r3, [r7, #12]
 8008346:	1ad3      	subs	r3, r2, r3
 8008348:	115b      	asrs	r3, r3, #5
 800834a:	617b      	str	r3, [r7, #20]
 800834c:	697b      	ldr	r3, [r7, #20]
 800834e:	2b00      	cmp	r3, #0
 8008350:	dd0d      	ble.n	800836e <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPK6SymbolPS3_EET0_T_S8_S7_+0x38>
	      *__result = *__first;
 8008352:	68f9      	ldr	r1, [r7, #12]
 8008354:	6878      	ldr	r0, [r7, #4]
 8008356:	f7f9 fa5d 	bl	8001814 <_ZN6SymbolaSERKS_>
	      ++__first;
 800835a:	68fb      	ldr	r3, [r7, #12]
 800835c:	3320      	adds	r3, #32
 800835e:	60fb      	str	r3, [r7, #12]
	      ++__result;
 8008360:	687b      	ldr	r3, [r7, #4]
 8008362:	3320      	adds	r3, #32
 8008364:	607b      	str	r3, [r7, #4]
	  for(_Distance __n = __last - __first; __n > 0; --__n)
 8008366:	697b      	ldr	r3, [r7, #20]
 8008368:	3b01      	subs	r3, #1
 800836a:	617b      	str	r3, [r7, #20]
 800836c:	e7ee      	b.n	800834c <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPK6SymbolPS3_EET0_T_S8_S7_+0x16>
	  return __result;
 800836e:	687b      	ldr	r3, [r7, #4]
	}
 8008370:	4618      	mov	r0, r3
 8008372:	3718      	adds	r7, #24
 8008374:	46bd      	mov	sp, r7
 8008376:	bd80      	pop	{r7, pc}

08008378 <_ZNK9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS1_SaIS1_EEEplEi>:
      operator+(difference_type __n) const _GLIBCXX_NOEXCEPT
 8008378:	b580      	push	{r7, lr}
 800837a:	b084      	sub	sp, #16
 800837c:	af00      	add	r7, sp, #0
 800837e:	6078      	str	r0, [r7, #4]
 8008380:	6039      	str	r1, [r7, #0]
      { return __normal_iterator(_M_current + __n); }
 8008382:	687b      	ldr	r3, [r7, #4]
 8008384:	681a      	ldr	r2, [r3, #0]
 8008386:	683b      	ldr	r3, [r7, #0]
 8008388:	015b      	lsls	r3, r3, #5
 800838a:	4413      	add	r3, r2
 800838c:	60fb      	str	r3, [r7, #12]
 800838e:	f107 020c 	add.w	r2, r7, #12
 8008392:	f107 0308 	add.w	r3, r7, #8
 8008396:	4611      	mov	r1, r2
 8008398:	4618      	mov	r0, r3
 800839a:	f7ff f8cb 	bl	8007534 <_ZN9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS1_SaIS1_EEEC1ERKS2_>
 800839e:	68bb      	ldr	r3, [r7, #8]
 80083a0:	4618      	mov	r0, r3
 80083a2:	3710      	adds	r7, #16
 80083a4:	46bd      	mov	sp, r7
 80083a6:	bd80      	pop	{r7, pc}

080083a8 <_ZN9__gnu_cxxneIP6SymbolSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
 80083a8:	b590      	push	{r4, r7, lr}
 80083aa:	b083      	sub	sp, #12
 80083ac:	af00      	add	r7, sp, #0
 80083ae:	6078      	str	r0, [r7, #4]
 80083b0:	6039      	str	r1, [r7, #0]
    { return __lhs.base() != __rhs.base(); }
 80083b2:	6878      	ldr	r0, [r7, #4]
 80083b4:	f7ff ffb4 	bl	8008320 <_ZNK9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS1_SaIS1_EEE4baseEv>
 80083b8:	4603      	mov	r3, r0
 80083ba:	681c      	ldr	r4, [r3, #0]
 80083bc:	6838      	ldr	r0, [r7, #0]
 80083be:	f7ff ffaf 	bl	8008320 <_ZNK9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS1_SaIS1_EEE4baseEv>
 80083c2:	4603      	mov	r3, r0
 80083c4:	681b      	ldr	r3, [r3, #0]
 80083c6:	429c      	cmp	r4, r3
 80083c8:	bf14      	ite	ne
 80083ca:	2301      	movne	r3, #1
 80083cc:	2300      	moveq	r3, #0
 80083ce:	b2db      	uxtb	r3, r3
 80083d0:	4618      	mov	r0, r3
 80083d2:	370c      	adds	r7, #12
 80083d4:	46bd      	mov	sp, r7
 80083d6:	bd90      	pop	{r4, r7, pc}

080083d8 <_ZN9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
 80083d8:	b480      	push	{r7}
 80083da:	b083      	sub	sp, #12
 80083dc:	af00      	add	r7, sp, #0
 80083de:	6078      	str	r0, [r7, #4]
	++_M_current;
 80083e0:	687b      	ldr	r3, [r7, #4]
 80083e2:	681b      	ldr	r3, [r3, #0]
 80083e4:	f103 0220 	add.w	r2, r3, #32
 80083e8:	687b      	ldr	r3, [r7, #4]
 80083ea:	601a      	str	r2, [r3, #0]
	return *this;
 80083ec:	687b      	ldr	r3, [r7, #4]
      }
 80083ee:	4618      	mov	r0, r3
 80083f0:	370c      	adds	r7, #12
 80083f2:	46bd      	mov	sp, r7
 80083f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80083f8:	4770      	bx	lr

080083fa <_ZNK9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
 80083fa:	b480      	push	{r7}
 80083fc:	b083      	sub	sp, #12
 80083fe:	af00      	add	r7, sp, #0
 8008400:	6078      	str	r0, [r7, #4]
      { return *_M_current; }
 8008402:	687b      	ldr	r3, [r7, #4]
 8008404:	681b      	ldr	r3, [r3, #0]
 8008406:	4618      	mov	r0, r3
 8008408:	370c      	adds	r7, #12
 800840a:	46bd      	mov	sp, r7
 800840c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008410:	4770      	bx	lr

08008412 <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIP6SymbolS4_EET0_T_S6_S5_>:
	__copy_m(_II __first, _II __last, _OI __result)
 8008412:	b580      	push	{r7, lr}
 8008414:	b086      	sub	sp, #24
 8008416:	af00      	add	r7, sp, #0
 8008418:	60f8      	str	r0, [r7, #12]
 800841a:	60b9      	str	r1, [r7, #8]
 800841c:	607a      	str	r2, [r7, #4]
	  for(_Distance __n = __last - __first; __n > 0; --__n)
 800841e:	68ba      	ldr	r2, [r7, #8]
 8008420:	68fb      	ldr	r3, [r7, #12]
 8008422:	1ad3      	subs	r3, r2, r3
 8008424:	115b      	asrs	r3, r3, #5
 8008426:	617b      	str	r3, [r7, #20]
 8008428:	697b      	ldr	r3, [r7, #20]
 800842a:	2b00      	cmp	r3, #0
 800842c:	dd0d      	ble.n	800844a <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIP6SymbolS4_EET0_T_S6_S5_+0x38>
	      *__result = *__first;
 800842e:	68f9      	ldr	r1, [r7, #12]
 8008430:	6878      	ldr	r0, [r7, #4]
 8008432:	f7f9 f9ef 	bl	8001814 <_ZN6SymbolaSERKS_>
	      ++__first;
 8008436:	68fb      	ldr	r3, [r7, #12]
 8008438:	3320      	adds	r3, #32
 800843a:	60fb      	str	r3, [r7, #12]
	      ++__result;
 800843c:	687b      	ldr	r3, [r7, #4]
 800843e:	3320      	adds	r3, #32
 8008440:	607b      	str	r3, [r7, #4]
	  for(_Distance __n = __last - __first; __n > 0; --__n)
 8008442:	697b      	ldr	r3, [r7, #20]
 8008444:	3b01      	subs	r3, #1
 8008446:	617b      	str	r3, [r7, #20]
 8008448:	e7ee      	b.n	8008428 <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIP6SymbolS4_EET0_T_S6_S5_+0x16>
	  return __result;
 800844a:	687b      	ldr	r3, [r7, #4]
	}
 800844c:	4618      	mov	r0, r3
 800844e:	3718      	adds	r7, #24
 8008450:	46bd      	mov	sp, r7
 8008452:	bd80      	pop	{r7, pc}

08008454 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ERKSC_>:
      _Move_ctor_base(const _Move_ctor_base&) = default;
 8008454:	b580      	push	{r7, lr}
 8008456:	b082      	sub	sp, #8
 8008458:	af00      	add	r7, sp, #0
 800845a:	6078      	str	r0, [r7, #4]
 800845c:	6039      	str	r1, [r7, #0]
 800845e:	687b      	ldr	r3, [r7, #4]
 8008460:	683a      	ldr	r2, [r7, #0]
 8008462:	4611      	mov	r1, r2
 8008464:	4618      	mov	r0, r3
 8008466:	f000 fac2 	bl	80089ee <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ERKSC_>
 800846a:	687b      	ldr	r3, [r7, #4]
 800846c:	4618      	mov	r0, r3
 800846e:	3708      	adds	r7, #8
 8008470:	46bd      	mov	sp, r7
 8008472:	bd80      	pop	{r7, pc}

08008474 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ERKSC_>:
      _Copy_assign_base(const _Copy_assign_base&) = default;
 8008474:	b580      	push	{r7, lr}
 8008476:	b082      	sub	sp, #8
 8008478:	af00      	add	r7, sp, #0
 800847a:	6078      	str	r0, [r7, #4]
 800847c:	6039      	str	r1, [r7, #0]
 800847e:	687b      	ldr	r3, [r7, #4]
 8008480:	683a      	ldr	r2, [r7, #0]
 8008482:	4611      	mov	r1, r2
 8008484:	4618      	mov	r0, r3
 8008486:	f7ff ffe5 	bl	8008454 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ERKSC_>
 800848a:	687b      	ldr	r3, [r7, #4]
 800848c:	4618      	mov	r0, r3
 800848e:	3708      	adds	r7, #8
 8008490:	46bd      	mov	sp, r7
 8008492:	bd80      	pop	{r7, pc}

08008494 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ERKSC_>:
      _Move_assign_base(const _Move_assign_base&) = default;
 8008494:	b580      	push	{r7, lr}
 8008496:	b082      	sub	sp, #8
 8008498:	af00      	add	r7, sp, #0
 800849a:	6078      	str	r0, [r7, #4]
 800849c:	6039      	str	r1, [r7, #0]
 800849e:	687b      	ldr	r3, [r7, #4]
 80084a0:	683a      	ldr	r2, [r7, #0]
 80084a2:	4611      	mov	r1, r2
 80084a4:	4618      	mov	r0, r3
 80084a6:	f7ff ffe5 	bl	8008474 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ERKSC_>
 80084aa:	687b      	ldr	r3, [r7, #4]
 80084ac:	4618      	mov	r0, r3
 80084ae:	3708      	adds	r7, #8
 80084b0:	46bd      	mov	sp, r7
 80084b2:	bd80      	pop	{r7, pc}

080084b4 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ERKSC_>:
      _Variant_base(const _Variant_base&) = default;
 80084b4:	b580      	push	{r7, lr}
 80084b6:	b082      	sub	sp, #8
 80084b8:	af00      	add	r7, sp, #0
 80084ba:	6078      	str	r0, [r7, #4]
 80084bc:	6039      	str	r1, [r7, #0]
 80084be:	687b      	ldr	r3, [r7, #4]
 80084c0:	683a      	ldr	r2, [r7, #0]
 80084c2:	4611      	mov	r1, r2
 80084c4:	4618      	mov	r0, r3
 80084c6:	f7ff ffe5 	bl	8008494 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ERKSC_>
 80084ca:	687b      	ldr	r3, [r7, #4]
 80084cc:	4618      	mov	r0, r3
 80084ce:	3708      	adds	r7, #8
 80084d0:	46bd      	mov	sp, r7
 80084d2:	bd80      	pop	{r7, pc}

080084d4 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1ERKSA_>:
      variant(const variant& __rhs) = default;
 80084d4:	b580      	push	{r7, lr}
 80084d6:	b082      	sub	sp, #8
 80084d8:	af00      	add	r7, sp, #0
 80084da:	6078      	str	r0, [r7, #4]
 80084dc:	6039      	str	r1, [r7, #0]
 80084de:	687b      	ldr	r3, [r7, #4]
 80084e0:	683a      	ldr	r2, [r7, #0]
 80084e2:	4611      	mov	r1, r2
 80084e4:	4618      	mov	r0, r3
 80084e6:	f7ff ffe5 	bl	80084b4 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ERKSC_>
 80084ea:	687b      	ldr	r3, [r7, #4]
 80084ec:	4618      	mov	r0, r3
 80084ee:	3708      	adds	r7, #8
 80084f0:	46bd      	mov	sp, r7
 80084f2:	bd80      	pop	{r7, pc}

080084f4 <_ZN6SymbolC1ERKS_>:
 80084f4:	b580      	push	{r7, lr}
 80084f6:	b082      	sub	sp, #8
 80084f8:	af00      	add	r7, sp, #0
 80084fa:	6078      	str	r0, [r7, #4]
 80084fc:	6039      	str	r1, [r7, #0]
 80084fe:	683b      	ldr	r3, [r7, #0]
 8008500:	781a      	ldrb	r2, [r3, #0]
 8008502:	687b      	ldr	r3, [r7, #4]
 8008504:	701a      	strb	r2, [r3, #0]
 8008506:	687b      	ldr	r3, [r7, #4]
 8008508:	1d1a      	adds	r2, r3, #4
 800850a:	683b      	ldr	r3, [r7, #0]
 800850c:	3304      	adds	r3, #4
 800850e:	4619      	mov	r1, r3
 8008510:	4610      	mov	r0, r2
 8008512:	f7ff ffdf 	bl	80084d4 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1ERKSA_>
 8008516:	687b      	ldr	r3, [r7, #4]
 8008518:	4618      	mov	r0, r3
 800851a:	3708      	adds	r7, #8
 800851c:	46bd      	mov	sp, r7
 800851e:	bd80      	pop	{r7, pc}

08008520 <_ZSt10_ConstructI6SymbolJRS0_EEvPT_DpOT0_>:
    _Construct(_T1* __p, _Args&&... __args)
 8008520:	b590      	push	{r4, r7, lr}
 8008522:	b083      	sub	sp, #12
 8008524:	af00      	add	r7, sp, #0
 8008526:	6078      	str	r0, [r7, #4]
 8008528:	6039      	str	r1, [r7, #0]
    { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
 800852a:	6838      	ldr	r0, [r7, #0]
 800852c:	f000 fa54 	bl	80089d8 <_ZSt7forwardIR6SymbolEOT_RNSt16remove_referenceIS2_E4typeE>
 8008530:	4604      	mov	r4, r0
 8008532:	687b      	ldr	r3, [r7, #4]
 8008534:	4619      	mov	r1, r3
 8008536:	2020      	movs	r0, #32
 8008538:	f7f8 fd8f 	bl	800105a <_ZnwjPv>
 800853c:	4603      	mov	r3, r0
 800853e:	4621      	mov	r1, r4
 8008540:	4618      	mov	r0, r3
 8008542:	f7ff ffd7 	bl	80084f4 <_ZN6SymbolC1ERKS_>
 8008546:	bf00      	nop
 8008548:	370c      	adds	r7, #12
 800854a:	46bd      	mov	sp, r7
 800854c:	bd90      	pop	{r4, r7, pc}

0800854e <_ZSt11__addressofIN9__gnu_cxx16__aligned_membufISt6vectorI6SymbolSaIS3_EEEEEPT_RS7_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 800854e:	b480      	push	{r7}
 8008550:	b083      	sub	sp, #12
 8008552:	af00      	add	r7, sp, #0
 8008554:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 8008556:	687b      	ldr	r3, [r7, #4]
 8008558:	4618      	mov	r0, r3
 800855a:	370c      	adds	r7, #12
 800855c:	46bd      	mov	sp, r7
 800855e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008562:	4770      	bx	lr

08008564 <_ZN9__gnu_cxx14__alloc_traitsISaI6SymbolES1_E17_S_select_on_copyERKS2_>:
    static _Alloc _S_select_on_copy(const _Alloc& __a)
 8008564:	b580      	push	{r7, lr}
 8008566:	b082      	sub	sp, #8
 8008568:	af00      	add	r7, sp, #0
 800856a:	6078      	str	r0, [r7, #4]
 800856c:	6039      	str	r1, [r7, #0]
    { return _Base_type::select_on_container_copy_construction(__a); }
 800856e:	687b      	ldr	r3, [r7, #4]
 8008570:	6839      	ldr	r1, [r7, #0]
 8008572:	4618      	mov	r0, r3
 8008574:	f000 fa4d 	bl	8008a12 <_ZNSt16allocator_traitsISaI6SymbolEE37select_on_container_copy_constructionERKS1_>
 8008578:	6878      	ldr	r0, [r7, #4]
 800857a:	3708      	adds	r7, #8
 800857c:	46bd      	mov	sp, r7
 800857e:	bd80      	pop	{r7, pc}

08008580 <_ZNSaI6SymbolED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
 8008580:	b580      	push	{r7, lr}
 8008582:	b082      	sub	sp, #8
 8008584:	af00      	add	r7, sp, #0
 8008586:	6078      	str	r0, [r7, #4]
 8008588:	6878      	ldr	r0, [r7, #4]
 800858a:	f000 fa4f 	bl	8008a2c <_ZN9__gnu_cxx13new_allocatorI6SymbolED1Ev>
 800858e:	687b      	ldr	r3, [r7, #4]
 8008590:	4618      	mov	r0, r3
 8008592:	3708      	adds	r7, #8
 8008594:	46bd      	mov	sp, r7
 8008596:	bd80      	pop	{r7, pc}

08008598 <_ZNSt12_Vector_baseI6SymbolSaIS0_EEC1EjRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
 8008598:	b580      	push	{r7, lr}
 800859a:	b084      	sub	sp, #16
 800859c:	af00      	add	r7, sp, #0
 800859e:	60f8      	str	r0, [r7, #12]
 80085a0:	60b9      	str	r1, [r7, #8]
 80085a2:	607a      	str	r2, [r7, #4]
      : _M_impl(__a)
 80085a4:	68fb      	ldr	r3, [r7, #12]
 80085a6:	6879      	ldr	r1, [r7, #4]
 80085a8:	4618      	mov	r0, r3
 80085aa:	f000 fa4a 	bl	8008a42 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
 80085ae:	68b9      	ldr	r1, [r7, #8]
 80085b0:	68f8      	ldr	r0, [r7, #12]
 80085b2:	f000 fa58 	bl	8008a66 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE17_M_create_storageEj>
 80085b6:	68fb      	ldr	r3, [r7, #12]
 80085b8:	4618      	mov	r0, r3
 80085ba:	3710      	adds	r7, #16
 80085bc:	46bd      	mov	sp, r7
 80085be:	bd80      	pop	{r7, pc}

080085c0 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 80085c0:	b480      	push	{r7}
 80085c2:	b083      	sub	sp, #12
 80085c4:	af00      	add	r7, sp, #0
 80085c6:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 80085c8:	4b03      	ldr	r3, [pc, #12]	; (80085d8 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEE8max_sizeEv+0x18>)
      }
 80085ca:	4618      	mov	r0, r3
 80085cc:	370c      	adds	r7, #12
 80085ce:	46bd      	mov	sp, r7
 80085d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80085d4:	4770      	bx	lr
 80085d6:	bf00      	nop
 80085d8:	06666666 	.word	0x06666666

080085dc <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 80085dc:	b480      	push	{r7}
 80085de:	b083      	sub	sp, #12
 80085e0:	af00      	add	r7, sp, #0
 80085e2:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 80085e4:	4b03      	ldr	r3, [pc, #12]	; (80085f4 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEE8max_sizeEv+0x18>)
      }
 80085e6:	4618      	mov	r0, r3
 80085e8:	370c      	adds	r7, #12
 80085ea:	46bd      	mov	sp, r7
 80085ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80085f0:	4770      	bx	lr
 80085f2:	bf00      	nop
 80085f4:	02e8ba2e 	.word	0x02e8ba2e

080085f8 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 80085f8:	b480      	push	{r7}
 80085fa:	b083      	sub	sp, #12
 80085fc:	af00      	add	r7, sp, #0
 80085fe:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 8008600:	4b03      	ldr	r3, [pc, #12]	; (8008610 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEE8max_sizeEv+0x18>)
      }
 8008602:	4618      	mov	r0, r3
 8008604:	370c      	adds	r7, #12
 8008606:	46bd      	mov	sp, r7
 8008608:	f85d 7b04 	ldr.w	r7, [sp], #4
 800860c:	4770      	bx	lr
 800860e:	bf00      	nop
 8008610:	06666666 	.word	0x06666666

08008614 <_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8008614:	b480      	push	{r7}
 8008616:	b083      	sub	sp, #12
 8008618:	af00      	add	r7, sp, #0
 800861a:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800861c:	687b      	ldr	r3, [r7, #4]
 800861e:	4618      	mov	r0, r3
 8008620:	370c      	adds	r7, #12
 8008622:	46bd      	mov	sp, r7
 8008624:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008628:	4770      	bx	lr

0800862a <_ZSt28__variant_construct_by_indexILj0ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEJiEEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 800862a:	b590      	push	{r4, r7, lr}
 800862c:	b085      	sub	sp, #20
 800862e:	af00      	add	r7, sp, #0
 8008630:	6078      	str	r0, [r7, #4]
 8008632:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 8008634:	687b      	ldr	r3, [r7, #4]
 8008636:	2200      	movs	r2, #0
 8008638:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 800863a:	6878      	ldr	r0, [r7, #4]
 800863c:	f7f9 f981 	bl	8001942 <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8008640:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 8008642:	6838      	ldr	r0, [r7, #0]
 8008644:	f7ff ffe6 	bl	8008614 <_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE>
 8008648:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 800864a:	681c      	ldr	r4, [r3, #0]
 800864c:	68f8      	ldr	r0, [r7, #12]
 800864e:	f000 fa25 	bl	8008a9c <_ZSt9addressofIiEPT_RS0_>
 8008652:	4603      	mov	r3, r0
 8008654:	4619      	mov	r1, r3
 8008656:	2004      	movs	r0, #4
 8008658:	f7f8 fcff 	bl	800105a <_ZnwjPv>
 800865c:	4603      	mov	r3, r0
 800865e:	601c      	str	r4, [r3, #0]
    }
 8008660:	bf00      	nop
 8008662:	3714      	adds	r7, #20
 8008664:	46bd      	mov	sp, r7
 8008666:	bd90      	pop	{r4, r7, pc}

08008668 <_ZSt7forwardIfEOT_RNSt16remove_referenceIS0_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8008668:	b480      	push	{r7}
 800866a:	b083      	sub	sp, #12
 800866c:	af00      	add	r7, sp, #0
 800866e:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8008670:	687b      	ldr	r3, [r7, #4]
 8008672:	4618      	mov	r0, r3
 8008674:	370c      	adds	r7, #12
 8008676:	46bd      	mov	sp, r7
 8008678:	f85d 7b04 	ldr.w	r7, [sp], #4
 800867c:	4770      	bx	lr

0800867e <_ZSt28__variant_construct_by_indexILj1ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEJfEEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 800867e:	b590      	push	{r4, r7, lr}
 8008680:	b085      	sub	sp, #20
 8008682:	af00      	add	r7, sp, #0
 8008684:	6078      	str	r0, [r7, #4]
 8008686:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 8008688:	687b      	ldr	r3, [r7, #4]
 800868a:	2201      	movs	r2, #1
 800868c:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 800868e:	6878      	ldr	r0, [r7, #4]
 8008690:	f7fb f958 	bl	8003944 <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8008694:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 8008696:	6838      	ldr	r0, [r7, #0]
 8008698:	f7ff ffe6 	bl	8008668 <_ZSt7forwardIfEOT_RNSt16remove_referenceIS0_E4typeE>
 800869c:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 800869e:	681c      	ldr	r4, [r3, #0]
 80086a0:	68f8      	ldr	r0, [r7, #12]
 80086a2:	f000 fa07 	bl	8008ab4 <_ZSt9addressofIfEPT_RS0_>
 80086a6:	4603      	mov	r3, r0
 80086a8:	4619      	mov	r1, r3
 80086aa:	2004      	movs	r0, #4
 80086ac:	f7f8 fcd5 	bl	800105a <_ZnwjPv>
 80086b0:	4603      	mov	r3, r0
 80086b2:	601c      	str	r4, [r3, #0]
    }
 80086b4:	bf00      	nop
 80086b6:	3714      	adds	r7, #20
 80086b8:	46bd      	mov	sp, r7
 80086ba:	bd90      	pop	{r4, r7, pc}

080086bc <_ZSt3getILj1EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
    get(variant<_Types...>& __v)
 80086bc:	b580      	push	{r7, lr}
 80086be:	b082      	sub	sp, #8
 80086c0:	af00      	add	r7, sp, #0
 80086c2:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 80086c4:	6878      	ldr	r0, [r7, #4]
 80086c6:	f7f8 ff29 	bl	800151c <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv>
 80086ca:	4603      	mov	r3, r0
 80086cc:	2b01      	cmp	r3, #1
 80086ce:	bf14      	ite	ne
 80086d0:	2301      	movne	r3, #1
 80086d2:	2300      	moveq	r3, #0
 80086d4:	b2db      	uxtb	r3, r3
 80086d6:	2b00      	cmp	r3, #0
 80086d8:	d002      	beq.n	80086e0 <_ZSt3getILj1EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 80086da:	4805      	ldr	r0, [pc, #20]	; (80086f0 <_ZSt3getILj1EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 80086dc:	f7f8 fcc9 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 80086e0:	6878      	ldr	r0, [r7, #4]
 80086e2:	f7fb f92f 	bl	8003944 <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 80086e6:	4603      	mov	r3, r0
    }
 80086e8:	4618      	mov	r0, r3
 80086ea:	3708      	adds	r7, #8
 80086ec:	46bd      	mov	sp, r7
 80086ee:	bd80      	pop	{r7, pc}
 80086f0:	08027548 	.word	0x08027548

080086f4 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80086f4:	b480      	push	{r7}
 80086f6:	b083      	sub	sp, #12
 80086f8:	af00      	add	r7, sp, #0
 80086fa:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80086fc:	687b      	ldr	r3, [r7, #4]
 80086fe:	4618      	mov	r0, r3
 8008700:	370c      	adds	r7, #12
 8008702:	46bd      	mov	sp, r7
 8008704:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008708:	4770      	bx	lr

0800870a <_ZSt28__variant_construct_by_indexILj2ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEJbEEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 800870a:	b590      	push	{r4, r7, lr}
 800870c:	b085      	sub	sp, #20
 800870e:	af00      	add	r7, sp, #0
 8008710:	6078      	str	r0, [r7, #4]
 8008712:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 8008714:	687b      	ldr	r3, [r7, #4]
 8008716:	2202      	movs	r2, #2
 8008718:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 800871a:	6878      	ldr	r0, [r7, #4]
 800871c:	f7f8 ff46 	bl	80015ac <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8008720:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 8008722:	6838      	ldr	r0, [r7, #0]
 8008724:	f7ff ffe6 	bl	80086f4 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
 8008728:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 800872a:	781c      	ldrb	r4, [r3, #0]
 800872c:	68f8      	ldr	r0, [r7, #12]
 800872e:	f000 f9cd 	bl	8008acc <_ZSt9addressofIbEPT_RS0_>
 8008732:	4603      	mov	r3, r0
 8008734:	4619      	mov	r1, r3
 8008736:	2001      	movs	r0, #1
 8008738:	f7f8 fc8f 	bl	800105a <_ZnwjPv>
 800873c:	4603      	mov	r3, r0
 800873e:	4622      	mov	r2, r4
 8008740:	701a      	strb	r2, [r3, #0]
    }
 8008742:	bf00      	nop
 8008744:	3714      	adds	r7, #20
 8008746:	46bd      	mov	sp, r7
 8008748:	bd90      	pop	{r4, r7, pc}

0800874a <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800874a:	b480      	push	{r7}
 800874c:	b083      	sub	sp, #12
 800874e:	af00      	add	r7, sp, #0
 8008750:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8008752:	687b      	ldr	r3, [r7, #4]
 8008754:	4618      	mov	r0, r3
 8008756:	370c      	adds	r7, #12
 8008758:	46bd      	mov	sp, r7
 800875a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800875e:	4770      	bx	lr

08008760 <_ZSt28__variant_construct_by_indexILj3ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEJS6_EEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 8008760:	b590      	push	{r4, r7, lr}
 8008762:	b085      	sub	sp, #20
 8008764:	af00      	add	r7, sp, #0
 8008766:	6078      	str	r0, [r7, #4]
 8008768:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 800876a:	687b      	ldr	r3, [r7, #4]
 800876c:	2203      	movs	r2, #3
 800876e:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 8008770:	6878      	ldr	r0, [r7, #4]
 8008772:	f7fb f9eb 	bl	8003b4c <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8008776:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 8008778:	6838      	ldr	r0, [r7, #0]
 800877a:	f7ff ffe6 	bl	800874a <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 800877e:	4604      	mov	r4, r0
      ::new ((void*)std::addressof(__storage))
 8008780:	68f8      	ldr	r0, [r7, #12]
 8008782:	f000 f9af 	bl	8008ae4 <_ZSt9addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_>
 8008786:	4603      	mov	r3, r0
 8008788:	4619      	mov	r1, r3
 800878a:	2018      	movs	r0, #24
 800878c:	f7f8 fc65 	bl	800105a <_ZnwjPv>
 8008790:	4603      	mov	r3, r0
 8008792:	4621      	mov	r1, r4
 8008794:	4618      	mov	r0, r3
 8008796:	f01a face 	bl	8022d36 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_>
    }
 800879a:	bf00      	nop
 800879c:	3714      	adds	r7, #20
 800879e:	46bd      	mov	sp, r7
 80087a0:	bd90      	pop	{r4, r7, pc}
	...

080087a4 <_ZSt3getILj3EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
    get(variant<_Types...>& __v)
 80087a4:	b580      	push	{r7, lr}
 80087a6:	b082      	sub	sp, #8
 80087a8:	af00      	add	r7, sp, #0
 80087aa:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 80087ac:	6878      	ldr	r0, [r7, #4]
 80087ae:	f7f8 feb5 	bl	800151c <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv>
 80087b2:	4603      	mov	r3, r0
 80087b4:	2b03      	cmp	r3, #3
 80087b6:	bf14      	ite	ne
 80087b8:	2301      	movne	r3, #1
 80087ba:	2300      	moveq	r3, #0
 80087bc:	b2db      	uxtb	r3, r3
 80087be:	2b00      	cmp	r3, #0
 80087c0:	d002      	beq.n	80087c8 <_ZSt3getILj3EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 80087c2:	4805      	ldr	r0, [pc, #20]	; (80087d8 <_ZSt3getILj3EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 80087c4:	f7f8 fc55 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 80087c8:	6878      	ldr	r0, [r7, #4]
 80087ca:	f7fb f9bf 	bl	8003b4c <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 80087ce:	4603      	mov	r3, r0
    }
 80087d0:	4618      	mov	r0, r3
 80087d2:	3708      	adds	r7, #8
 80087d4:	46bd      	mov	sp, r7
 80087d6:	bd80      	pop	{r7, pc}
 80087d8:	08027548 	.word	0x08027548

080087dc <_ZNSt6vectorI6SymbolSaIS0_EE14_M_move_assignEOS2_St17integral_constantIbLb1EE>:
    private:
      // Constant-time move assignment when source object's memory can be
      // moved, either because the source's allocator will move too
      // or because the allocators are equal.
      void
      _M_move_assign(vector&& __x, true_type) noexcept
 80087dc:	b590      	push	{r4, r7, lr}
 80087de:	b089      	sub	sp, #36	; 0x24
 80087e0:	af00      	add	r7, sp, #0
 80087e2:	60f8      	str	r0, [r7, #12]
 80087e4:	60b9      	str	r1, [r7, #8]
 80087e6:	713a      	strb	r2, [r7, #4]
      {
	vector __tmp(get_allocator());
 80087e8:	68fa      	ldr	r2, [r7, #12]
 80087ea:	f107 031c 	add.w	r3, r7, #28
 80087ee:	4611      	mov	r1, r2
 80087f0:	4618      	mov	r0, r3
 80087f2:	f000 f983 	bl	8008afc <_ZNKSt12_Vector_baseI6SymbolSaIS0_EE13get_allocatorEv>
 80087f6:	f107 021c 	add.w	r2, r7, #28
 80087fa:	f107 0310 	add.w	r3, r7, #16
 80087fe:	4611      	mov	r1, r2
 8008800:	4618      	mov	r0, r3
 8008802:	f000 f98c 	bl	8008b1e <_ZNSt6vectorI6SymbolSaIS0_EEC1ERKS1_>
 8008806:	f107 031c 	add.w	r3, r7, #28
 800880a:	4618      	mov	r0, r3
 800880c:	f7ff feb8 	bl	8008580 <_ZNSaI6SymbolED1Ev>
	this->_M_impl._M_swap_data(__x._M_impl);
 8008810:	68fb      	ldr	r3, [r7, #12]
 8008812:	68ba      	ldr	r2, [r7, #8]
 8008814:	4611      	mov	r1, r2
 8008816:	4618      	mov	r0, r3
 8008818:	f000 f990 	bl	8008b3c <_ZNSt12_Vector_baseI6SymbolSaIS0_EE17_Vector_impl_data12_M_swap_dataERS3_>
	__tmp._M_impl._M_swap_data(__x._M_impl);
 800881c:	68ba      	ldr	r2, [r7, #8]
 800881e:	f107 0310 	add.w	r3, r7, #16
 8008822:	4611      	mov	r1, r2
 8008824:	4618      	mov	r0, r3
 8008826:	f000 f989 	bl	8008b3c <_ZNSt12_Vector_baseI6SymbolSaIS0_EE17_Vector_impl_data12_M_swap_dataERS3_>
	std::__alloc_on_move(_M_get_Tp_allocator(), __x._M_get_Tp_allocator());
 800882a:	68fb      	ldr	r3, [r7, #12]
 800882c:	4618      	mov	r0, r3
 800882e:	f7fe f9a5 	bl	8006b7c <_ZNSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 8008832:	4604      	mov	r4, r0
 8008834:	68bb      	ldr	r3, [r7, #8]
 8008836:	4618      	mov	r0, r3
 8008838:	f7fe f9a0 	bl	8006b7c <_ZNSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 800883c:	4603      	mov	r3, r0
 800883e:	4619      	mov	r1, r3
 8008840:	4620      	mov	r0, r4
 8008842:	f000 f999 	bl	8008b78 <_ZSt15__alloc_on_moveISaI6SymbolEEvRT_S3_>
	vector __tmp(get_allocator());
 8008846:	f107 0310 	add.w	r3, r7, #16
 800884a:	4618      	mov	r0, r3
 800884c:	f7ff f844 	bl	80078d8 <_ZNSt6vectorI6SymbolSaIS0_EED1Ev>
      }
 8008850:	bf00      	nop
 8008852:	3724      	adds	r7, #36	; 0x24
 8008854:	46bd      	mov	sp, r7
 8008856:	bd90      	pop	{r4, r7, pc}

08008858 <_ZSt7forwardISt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS4_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8008858:	b480      	push	{r7}
 800885a:	b083      	sub	sp, #12
 800885c:	af00      	add	r7, sp, #0
 800885e:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8008860:	687b      	ldr	r3, [r7, #4]
 8008862:	4618      	mov	r0, r3
 8008864:	370c      	adds	r7, #12
 8008866:	46bd      	mov	sp, r7
 8008868:	f85d 7b04 	ldr.w	r7, [sp], #4
 800886c:	4770      	bx	lr

0800886e <_ZNSt12_Vector_baseI6SymbolSaIS0_EEC1EOS2_>:
      _Vector_base(_Vector_base&&) = default;
 800886e:	b580      	push	{r7, lr}
 8008870:	b082      	sub	sp, #8
 8008872:	af00      	add	r7, sp, #0
 8008874:	6078      	str	r0, [r7, #4]
 8008876:	6039      	str	r1, [r7, #0]
 8008878:	687b      	ldr	r3, [r7, #4]
 800887a:	683a      	ldr	r2, [r7, #0]
 800887c:	4611      	mov	r1, r2
 800887e:	4618      	mov	r0, r3
 8008880:	f000 f994 	bl	8008bac <_ZNSt12_Vector_baseI6SymbolSaIS0_EE12_Vector_implC1EOS3_>
 8008884:	687b      	ldr	r3, [r7, #4]
 8008886:	4618      	mov	r0, r3
 8008888:	3708      	adds	r7, #8
 800888a:	46bd      	mov	sp, r7
 800888c:	bd80      	pop	{r7, pc}

0800888e <_ZNSt6vectorI6SymbolSaIS0_EEC1EOS2_>:
      vector(vector&&) noexcept = default;
 800888e:	b580      	push	{r7, lr}
 8008890:	b082      	sub	sp, #8
 8008892:	af00      	add	r7, sp, #0
 8008894:	6078      	str	r0, [r7, #4]
 8008896:	6039      	str	r1, [r7, #0]
 8008898:	687b      	ldr	r3, [r7, #4]
 800889a:	683a      	ldr	r2, [r7, #0]
 800889c:	4611      	mov	r1, r2
 800889e:	4618      	mov	r0, r3
 80088a0:	f7ff ffe5 	bl	800886e <_ZNSt12_Vector_baseI6SymbolSaIS0_EEC1EOS2_>
 80088a4:	687b      	ldr	r3, [r7, #4]
 80088a6:	4618      	mov	r0, r3
 80088a8:	3708      	adds	r7, #8
 80088aa:	46bd      	mov	sp, r7
 80088ac:	bd80      	pop	{r7, pc}

080088ae <_ZSt28__variant_construct_by_indexILj4ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEJSA_EEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 80088ae:	b590      	push	{r4, r7, lr}
 80088b0:	b085      	sub	sp, #20
 80088b2:	af00      	add	r7, sp, #0
 80088b4:	6078      	str	r0, [r7, #4]
 80088b6:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 80088b8:	687b      	ldr	r3, [r7, #4]
 80088ba:	2204      	movs	r2, #4
 80088bc:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 80088be:	6878      	ldr	r0, [r7, #4]
 80088c0:	f7fb fa04 	bl	8003ccc <_ZNSt8__detail9__variant5__getILj4ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 80088c4:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 80088c6:	6838      	ldr	r0, [r7, #0]
 80088c8:	f7ff ffc6 	bl	8008858 <_ZSt7forwardISt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS4_E4typeE>
 80088cc:	4604      	mov	r4, r0
      ::new ((void*)std::addressof(__storage))
 80088ce:	68f8      	ldr	r0, [r7, #12]
 80088d0:	f000 f960 	bl	8008b94 <_ZSt9addressofISt6vectorI6SymbolSaIS1_EEEPT_RS4_>
 80088d4:	4603      	mov	r3, r0
 80088d6:	4619      	mov	r1, r3
 80088d8:	200c      	movs	r0, #12
 80088da:	f7f8 fbbe 	bl	800105a <_ZnwjPv>
 80088de:	4603      	mov	r3, r0
 80088e0:	4621      	mov	r1, r4
 80088e2:	4618      	mov	r0, r3
 80088e4:	f7ff ffd3 	bl	800888e <_ZNSt6vectorI6SymbolSaIS0_EEC1EOS2_>
    }
 80088e8:	bf00      	nop
 80088ea:	3714      	adds	r7, #20
 80088ec:	46bd      	mov	sp, r7
 80088ee:	bd90      	pop	{r4, r7, pc}

080088f0 <_ZSt3getILj4EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
    get(variant<_Types...>& __v)
 80088f0:	b580      	push	{r7, lr}
 80088f2:	b082      	sub	sp, #8
 80088f4:	af00      	add	r7, sp, #0
 80088f6:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 80088f8:	6878      	ldr	r0, [r7, #4]
 80088fa:	f7f8 fe0f 	bl	800151c <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv>
 80088fe:	4603      	mov	r3, r0
 8008900:	2b04      	cmp	r3, #4
 8008902:	bf14      	ite	ne
 8008904:	2301      	movne	r3, #1
 8008906:	2300      	moveq	r3, #0
 8008908:	b2db      	uxtb	r3, r3
 800890a:	2b00      	cmp	r3, #0
 800890c:	d002      	beq.n	8008914 <_ZSt3getILj4EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 800890e:	4805      	ldr	r0, [pc, #20]	; (8008924 <_ZSt3getILj4EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 8008910:	f7f8 fbaf 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 8008914:	6878      	ldr	r0, [r7, #4]
 8008916:	f7fb f9d9 	bl	8003ccc <_ZNSt8__detail9__variant5__getILj4ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 800891a:	4603      	mov	r3, r0
    }
 800891c:	4618      	mov	r0, r3
 800891e:	3708      	adds	r7, #8
 8008920:	46bd      	mov	sp, r7
 8008922:	bd80      	pop	{r7, pc}
 8008924:	08027548 	.word	0x08027548

08008928 <_ZNK9__gnu_cxx13new_allocatorI6SymbolE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 8008928:	b480      	push	{r7}
 800892a:	b083      	sub	sp, #12
 800892c:	af00      	add	r7, sp, #0
 800892e:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 8008930:	f06f 437c 	mvn.w	r3, #4227858432	; 0xfc000000
      }
 8008934:	4618      	mov	r0, r3
 8008936:	370c      	adds	r7, #12
 8008938:	46bd      	mov	sp, r7
 800893a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800893e:	4770      	bx	lr

08008940 <_ZN9__gnu_cxxneIPK6SymbolSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
 8008940:	b590      	push	{r4, r7, lr}
 8008942:	b083      	sub	sp, #12
 8008944:	af00      	add	r7, sp, #0
 8008946:	6078      	str	r0, [r7, #4]
 8008948:	6039      	str	r1, [r7, #0]
    { return __lhs.base() != __rhs.base(); }
 800894a:	6878      	ldr	r0, [r7, #4]
 800894c:	f7ff fcdd 	bl	800830a <_ZNK9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS1_SaIS1_EEE4baseEv>
 8008950:	4603      	mov	r3, r0
 8008952:	681c      	ldr	r4, [r3, #0]
 8008954:	6838      	ldr	r0, [r7, #0]
 8008956:	f7ff fcd8 	bl	800830a <_ZNK9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS1_SaIS1_EEE4baseEv>
 800895a:	4603      	mov	r3, r0
 800895c:	681b      	ldr	r3, [r3, #0]
 800895e:	429c      	cmp	r4, r3
 8008960:	bf14      	ite	ne
 8008962:	2301      	movne	r3, #1
 8008964:	2300      	moveq	r3, #0
 8008966:	b2db      	uxtb	r3, r3
 8008968:	4618      	mov	r0, r3
 800896a:	370c      	adds	r7, #12
 800896c:	46bd      	mov	sp, r7
 800896e:	bd90      	pop	{r4, r7, pc}

08008970 <_ZN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
 8008970:	b480      	push	{r7}
 8008972:	b083      	sub	sp, #12
 8008974:	af00      	add	r7, sp, #0
 8008976:	6078      	str	r0, [r7, #4]
	++_M_current;
 8008978:	687b      	ldr	r3, [r7, #4]
 800897a:	681b      	ldr	r3, [r3, #0]
 800897c:	f103 0220 	add.w	r2, r3, #32
 8008980:	687b      	ldr	r3, [r7, #4]
 8008982:	601a      	str	r2, [r3, #0]
	return *this;
 8008984:	687b      	ldr	r3, [r7, #4]
      }
 8008986:	4618      	mov	r0, r3
 8008988:	370c      	adds	r7, #12
 800898a:	46bd      	mov	sp, r7
 800898c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008990:	4770      	bx	lr

08008992 <_ZNK9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
 8008992:	b480      	push	{r7}
 8008994:	b083      	sub	sp, #12
 8008996:	af00      	add	r7, sp, #0
 8008998:	6078      	str	r0, [r7, #4]
      { return *_M_current; }
 800899a:	687b      	ldr	r3, [r7, #4]
 800899c:	681b      	ldr	r3, [r3, #0]
 800899e:	4618      	mov	r0, r3
 80089a0:	370c      	adds	r7, #12
 80089a2:	46bd      	mov	sp, r7
 80089a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80089a8:	4770      	bx	lr

080089aa <_ZSt10_ConstructI6SymbolJRKS0_EEvPT_DpOT0_>:
    _Construct(_T1* __p, _Args&&... __args)
 80089aa:	b590      	push	{r4, r7, lr}
 80089ac:	b083      	sub	sp, #12
 80089ae:	af00      	add	r7, sp, #0
 80089b0:	6078      	str	r0, [r7, #4]
 80089b2:	6039      	str	r1, [r7, #0]
    { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
 80089b4:	6838      	ldr	r0, [r7, #0]
 80089b6:	f000 f914 	bl	8008be2 <_ZSt7forwardIRK6SymbolEOT_RNSt16remove_referenceIS3_E4typeE>
 80089ba:	4604      	mov	r4, r0
 80089bc:	687b      	ldr	r3, [r7, #4]
 80089be:	4619      	mov	r1, r3
 80089c0:	2020      	movs	r0, #32
 80089c2:	f7f8 fb4a 	bl	800105a <_ZnwjPv>
 80089c6:	4603      	mov	r3, r0
 80089c8:	4621      	mov	r1, r4
 80089ca:	4618      	mov	r0, r3
 80089cc:	f7ff fd92 	bl	80084f4 <_ZN6SymbolC1ERKS_>
 80089d0:	bf00      	nop
 80089d2:	370c      	adds	r7, #12
 80089d4:	46bd      	mov	sp, r7
 80089d6:	bd90      	pop	{r4, r7, pc}

080089d8 <_ZSt7forwardIR6SymbolEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80089d8:	b480      	push	{r7}
 80089da:	b083      	sub	sp, #12
 80089dc:	af00      	add	r7, sp, #0
 80089de:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80089e0:	687b      	ldr	r3, [r7, #4]
 80089e2:	4618      	mov	r0, r3
 80089e4:	370c      	adds	r7, #12
 80089e6:	46bd      	mov	sp, r7
 80089e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80089ec:	4770      	bx	lr

080089ee <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ERKSC_>:
      _Copy_ctor_base(const _Copy_ctor_base& __rhs)
 80089ee:	b580      	push	{r7, lr}
 80089f0:	b082      	sub	sp, #8
 80089f2:	af00      	add	r7, sp, #0
 80089f4:	6078      	str	r0, [r7, #4]
 80089f6:	6039      	str	r1, [r7, #0]
      {
 80089f8:	687b      	ldr	r3, [r7, #4]
 80089fa:	4618      	mov	r0, r3
 80089fc:	f000 f909 	bl	8008c12 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1Ev>
	__variant_construct<_Types...>(*this, __rhs);
 8008a00:	6839      	ldr	r1, [r7, #0]
 8008a02:	6878      	ldr	r0, [r7, #4]
 8008a04:	f000 fb06 	bl	8009014 <_ZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Copy_ctor_baseILb0EJifbS7_SB_EEERKSD_EEvOT0_OT1_>
      }
 8008a08:	687b      	ldr	r3, [r7, #4]
 8008a0a:	4618      	mov	r0, r3
 8008a0c:	3708      	adds	r7, #8
 8008a0e:	46bd      	mov	sp, r7
 8008a10:	bd80      	pop	{r7, pc}

08008a12 <_ZNSt16allocator_traitsISaI6SymbolEE37select_on_container_copy_constructionERKS1_>:
      select_on_container_copy_construction(const allocator_type& __rhs)
 8008a12:	b580      	push	{r7, lr}
 8008a14:	b082      	sub	sp, #8
 8008a16:	af00      	add	r7, sp, #0
 8008a18:	6078      	str	r0, [r7, #4]
 8008a1a:	6039      	str	r1, [r7, #0]
      { return __rhs; }
 8008a1c:	6839      	ldr	r1, [r7, #0]
 8008a1e:	6878      	ldr	r0, [r7, #4]
 8008a20:	f000 fb15 	bl	800904e <_ZNSaI6SymbolEC1ERKS0_>
 8008a24:	6878      	ldr	r0, [r7, #4]
 8008a26:	3708      	adds	r7, #8
 8008a28:	46bd      	mov	sp, r7
 8008a2a:	bd80      	pop	{r7, pc}

08008a2c <_ZN9__gnu_cxx13new_allocatorI6SymbolED1Ev>:
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 8008a2c:	b480      	push	{r7}
 8008a2e:	b083      	sub	sp, #12
 8008a30:	af00      	add	r7, sp, #0
 8008a32:	6078      	str	r0, [r7, #4]
 8008a34:	687b      	ldr	r3, [r7, #4]
 8008a36:	4618      	mov	r0, r3
 8008a38:	370c      	adds	r7, #12
 8008a3a:	46bd      	mov	sp, r7
 8008a3c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008a40:	4770      	bx	lr

08008a42 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
 8008a42:	b580      	push	{r7, lr}
 8008a44:	b082      	sub	sp, #8
 8008a46:	af00      	add	r7, sp, #0
 8008a48:	6078      	str	r0, [r7, #4]
 8008a4a:	6039      	str	r1, [r7, #0]
	: _Tp_alloc_type(__a)
 8008a4c:	6839      	ldr	r1, [r7, #0]
 8008a4e:	6878      	ldr	r0, [r7, #4]
 8008a50:	f000 fafd 	bl	800904e <_ZNSaI6SymbolEC1ERKS0_>
 8008a54:	687b      	ldr	r3, [r7, #4]
 8008a56:	4618      	mov	r0, r3
 8008a58:	f000 fb07 	bl	800906a <_ZNSt12_Vector_baseI6SymbolSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
 8008a5c:	687b      	ldr	r3, [r7, #4]
 8008a5e:	4618      	mov	r0, r3
 8008a60:	3708      	adds	r7, #8
 8008a62:	46bd      	mov	sp, r7
 8008a64:	bd80      	pop	{r7, pc}

08008a66 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE17_M_create_storageEj>:
      _M_create_storage(size_t __n)
 8008a66:	b580      	push	{r7, lr}
 8008a68:	b082      	sub	sp, #8
 8008a6a:	af00      	add	r7, sp, #0
 8008a6c:	6078      	str	r0, [r7, #4]
 8008a6e:	6039      	str	r1, [r7, #0]
	this->_M_impl._M_start = this->_M_allocate(__n);
 8008a70:	6839      	ldr	r1, [r7, #0]
 8008a72:	6878      	ldr	r0, [r7, #4]
 8008a74:	f7fe fd2c 	bl	80074d0 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE11_M_allocateEj>
 8008a78:	4602      	mov	r2, r0
 8008a7a:	687b      	ldr	r3, [r7, #4]
 8008a7c:	601a      	str	r2, [r3, #0]
	this->_M_impl._M_finish = this->_M_impl._M_start;
 8008a7e:	687b      	ldr	r3, [r7, #4]
 8008a80:	681a      	ldr	r2, [r3, #0]
 8008a82:	687b      	ldr	r3, [r7, #4]
 8008a84:	605a      	str	r2, [r3, #4]
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 8008a86:	687b      	ldr	r3, [r7, #4]
 8008a88:	681a      	ldr	r2, [r3, #0]
 8008a8a:	683b      	ldr	r3, [r7, #0]
 8008a8c:	015b      	lsls	r3, r3, #5
 8008a8e:	441a      	add	r2, r3
 8008a90:	687b      	ldr	r3, [r7, #4]
 8008a92:	609a      	str	r2, [r3, #8]
      }
 8008a94:	bf00      	nop
 8008a96:	3708      	adds	r7, #8
 8008a98:	46bd      	mov	sp, r7
 8008a9a:	bd80      	pop	{r7, pc}

08008a9c <_ZSt9addressofIiEPT_RS0_>:
    addressof(_Tp& __r) noexcept
 8008a9c:	b580      	push	{r7, lr}
 8008a9e:	b082      	sub	sp, #8
 8008aa0:	af00      	add	r7, sp, #0
 8008aa2:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 8008aa4:	6878      	ldr	r0, [r7, #4]
 8008aa6:	f7fe fb3d 	bl	8007124 <_ZSt11__addressofIiEPT_RS0_>
 8008aaa:	4603      	mov	r3, r0
 8008aac:	4618      	mov	r0, r3
 8008aae:	3708      	adds	r7, #8
 8008ab0:	46bd      	mov	sp, r7
 8008ab2:	bd80      	pop	{r7, pc}

08008ab4 <_ZSt9addressofIfEPT_RS0_>:
    addressof(_Tp& __r) noexcept
 8008ab4:	b580      	push	{r7, lr}
 8008ab6:	b082      	sub	sp, #8
 8008ab8:	af00      	add	r7, sp, #0
 8008aba:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 8008abc:	6878      	ldr	r0, [r7, #4]
 8008abe:	f7fe fb46 	bl	800714e <_ZSt11__addressofIfEPT_RS0_>
 8008ac2:	4603      	mov	r3, r0
 8008ac4:	4618      	mov	r0, r3
 8008ac6:	3708      	adds	r7, #8
 8008ac8:	46bd      	mov	sp, r7
 8008aca:	bd80      	pop	{r7, pc}

08008acc <_ZSt9addressofIbEPT_RS0_>:
    addressof(_Tp& __r) noexcept
 8008acc:	b580      	push	{r7, lr}
 8008ace:	b082      	sub	sp, #8
 8008ad0:	af00      	add	r7, sp, #0
 8008ad2:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 8008ad4:	6878      	ldr	r0, [r7, #4]
 8008ad6:	f7fe fb4f 	bl	8007178 <_ZSt11__addressofIbEPT_RS0_>
 8008ada:	4603      	mov	r3, r0
 8008adc:	4618      	mov	r0, r3
 8008ade:	3708      	adds	r7, #8
 8008ae0:	46bd      	mov	sp, r7
 8008ae2:	bd80      	pop	{r7, pc}

08008ae4 <_ZSt9addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_>:
    addressof(_Tp& __r) noexcept
 8008ae4:	b580      	push	{r7, lr}
 8008ae6:	b082      	sub	sp, #8
 8008ae8:	af00      	add	r7, sp, #0
 8008aea:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 8008aec:	6878      	ldr	r0, [r7, #4]
 8008aee:	f7fe fb58 	bl	80071a2 <_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_>
 8008af2:	4603      	mov	r3, r0
 8008af4:	4618      	mov	r0, r3
 8008af6:	3708      	adds	r7, #8
 8008af8:	46bd      	mov	sp, r7
 8008afa:	bd80      	pop	{r7, pc}

08008afc <_ZNKSt12_Vector_baseI6SymbolSaIS0_EE13get_allocatorEv>:
      get_allocator() const _GLIBCXX_NOEXCEPT
 8008afc:	b580      	push	{r7, lr}
 8008afe:	b082      	sub	sp, #8
 8008b00:	af00      	add	r7, sp, #0
 8008b02:	6078      	str	r0, [r7, #4]
 8008b04:	6039      	str	r1, [r7, #0]
      { return allocator_type(_M_get_Tp_allocator()); }
 8008b06:	6838      	ldr	r0, [r7, #0]
 8008b08:	f7fe f843 	bl	8006b92 <_ZNKSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 8008b0c:	4603      	mov	r3, r0
 8008b0e:	4619      	mov	r1, r3
 8008b10:	6878      	ldr	r0, [r7, #4]
 8008b12:	f000 fa9c 	bl	800904e <_ZNSaI6SymbolEC1ERKS0_>
 8008b16:	6878      	ldr	r0, [r7, #4]
 8008b18:	3708      	adds	r7, #8
 8008b1a:	46bd      	mov	sp, r7
 8008b1c:	bd80      	pop	{r7, pc}

08008b1e <_ZNSt6vectorI6SymbolSaIS0_EEC1ERKS1_>:
      vector(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 8008b1e:	b580      	push	{r7, lr}
 8008b20:	b082      	sub	sp, #8
 8008b22:	af00      	add	r7, sp, #0
 8008b24:	6078      	str	r0, [r7, #4]
 8008b26:	6039      	str	r1, [r7, #0]
      : _Base(__a) { }
 8008b28:	687b      	ldr	r3, [r7, #4]
 8008b2a:	6839      	ldr	r1, [r7, #0]
 8008b2c:	4618      	mov	r0, r3
 8008b2e:	f000 fab0 	bl	8009092 <_ZNSt12_Vector_baseI6SymbolSaIS0_EEC1ERKS1_>
 8008b32:	687b      	ldr	r3, [r7, #4]
 8008b34:	4618      	mov	r0, r3
 8008b36:	3708      	adds	r7, #8
 8008b38:	46bd      	mov	sp, r7
 8008b3a:	bd80      	pop	{r7, pc}

08008b3c <_ZNSt12_Vector_baseI6SymbolSaIS0_EE17_Vector_impl_data12_M_swap_dataERS3_>:
	_M_swap_data(_Vector_impl_data& __x) _GLIBCXX_NOEXCEPT
 8008b3c:	b580      	push	{r7, lr}
 8008b3e:	b086      	sub	sp, #24
 8008b40:	af00      	add	r7, sp, #0
 8008b42:	6078      	str	r0, [r7, #4]
 8008b44:	6039      	str	r1, [r7, #0]
	  _Vector_impl_data __tmp;
 8008b46:	f107 030c 	add.w	r3, r7, #12
 8008b4a:	4618      	mov	r0, r3
 8008b4c:	f000 fa8d 	bl	800906a <_ZNSt12_Vector_baseI6SymbolSaIS0_EE17_Vector_impl_dataC1Ev>
	  __tmp._M_copy_data(*this);
 8008b50:	f107 030c 	add.w	r3, r7, #12
 8008b54:	6879      	ldr	r1, [r7, #4]
 8008b56:	4618      	mov	r0, r3
 8008b58:	f000 faaa 	bl	80090b0 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE17_Vector_impl_data12_M_copy_dataERKS3_>
	  _M_copy_data(__x);
 8008b5c:	6839      	ldr	r1, [r7, #0]
 8008b5e:	6878      	ldr	r0, [r7, #4]
 8008b60:	f000 faa6 	bl	80090b0 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE17_Vector_impl_data12_M_copy_dataERKS3_>
	  __x._M_copy_data(__tmp);
 8008b64:	f107 030c 	add.w	r3, r7, #12
 8008b68:	4619      	mov	r1, r3
 8008b6a:	6838      	ldr	r0, [r7, #0]
 8008b6c:	f000 faa0 	bl	80090b0 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE17_Vector_impl_data12_M_copy_dataERKS3_>
	}
 8008b70:	bf00      	nop
 8008b72:	3718      	adds	r7, #24
 8008b74:	46bd      	mov	sp, r7
 8008b76:	bd80      	pop	{r7, pc}

08008b78 <_ZSt15__alloc_on_moveISaI6SymbolEEvRT_S3_>:
  template<typename _Alloc>
    inline void __do_alloc_on_move(_Alloc&, _Alloc&, false_type)
    { }

  template<typename _Alloc>
    inline void __alloc_on_move(_Alloc& __one, _Alloc& __two)
 8008b78:	b580      	push	{r7, lr}
 8008b7a:	b084      	sub	sp, #16
 8008b7c:	af00      	add	r7, sp, #0
 8008b7e:	6078      	str	r0, [r7, #4]
 8008b80:	6039      	str	r1, [r7, #0]
    {
      typedef allocator_traits<_Alloc> __traits;
      typedef typename __traits::propagate_on_container_move_assignment __pocma;
      __do_alloc_on_move(__one, __two, __pocma());
 8008b82:	461a      	mov	r2, r3
 8008b84:	6839      	ldr	r1, [r7, #0]
 8008b86:	6878      	ldr	r0, [r7, #4]
 8008b88:	f000 faa9 	bl	80090de <_ZSt18__do_alloc_on_moveISaI6SymbolEEvRT_S3_St17integral_constantIbLb1EE>
    }
 8008b8c:	bf00      	nop
 8008b8e:	3710      	adds	r7, #16
 8008b90:	46bd      	mov	sp, r7
 8008b92:	bd80      	pop	{r7, pc}

08008b94 <_ZSt9addressofISt6vectorI6SymbolSaIS1_EEEPT_RS4_>:
    addressof(_Tp& __r) noexcept
 8008b94:	b580      	push	{r7, lr}
 8008b96:	b082      	sub	sp, #8
 8008b98:	af00      	add	r7, sp, #0
 8008b9a:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 8008b9c:	6878      	ldr	r0, [r7, #4]
 8008b9e:	f7fe fb16 	bl	80071ce <_ZSt11__addressofISt6vectorI6SymbolSaIS1_EEEPT_RS4_>
 8008ba2:	4603      	mov	r3, r0
 8008ba4:	4618      	mov	r0, r3
 8008ba6:	3708      	adds	r7, #8
 8008ba8:	46bd      	mov	sp, r7
 8008baa:	bd80      	pop	{r7, pc}

08008bac <_ZNSt12_Vector_baseI6SymbolSaIS0_EE12_Vector_implC1EOS3_>:
	_Vector_impl(_Vector_impl&& __x) noexcept
 8008bac:	b590      	push	{r4, r7, lr}
 8008bae:	b083      	sub	sp, #12
 8008bb0:	af00      	add	r7, sp, #0
 8008bb2:	6078      	str	r0, [r7, #4]
 8008bb4:	6039      	str	r1, [r7, #0]
	: _Tp_alloc_type(std::move(__x)), _Vector_impl_data(std::move(__x))
 8008bb6:	6838      	ldr	r0, [r7, #0]
 8008bb8:	f000 fa9e 	bl	80090f8 <_ZSt4moveIRNSt12_Vector_baseI6SymbolSaIS1_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS7_>
 8008bbc:	4603      	mov	r3, r0
 8008bbe:	4619      	mov	r1, r3
 8008bc0:	6878      	ldr	r0, [r7, #4]
 8008bc2:	f000 fa44 	bl	800904e <_ZNSaI6SymbolEC1ERKS0_>
 8008bc6:	687c      	ldr	r4, [r7, #4]
 8008bc8:	6838      	ldr	r0, [r7, #0]
 8008bca:	f000 fa95 	bl	80090f8 <_ZSt4moveIRNSt12_Vector_baseI6SymbolSaIS1_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS7_>
 8008bce:	4603      	mov	r3, r0
 8008bd0:	4619      	mov	r1, r3
 8008bd2:	4620      	mov	r0, r4
 8008bd4:	f000 fa9b 	bl	800910e <_ZNSt12_Vector_baseI6SymbolSaIS0_EE17_Vector_impl_dataC1EOS3_>
	{ }
 8008bd8:	687b      	ldr	r3, [r7, #4]
 8008bda:	4618      	mov	r0, r3
 8008bdc:	370c      	adds	r7, #12
 8008bde:	46bd      	mov	sp, r7
 8008be0:	bd90      	pop	{r4, r7, pc}

08008be2 <_ZSt7forwardIRK6SymbolEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8008be2:	b480      	push	{r7}
 8008be4:	b083      	sub	sp, #12
 8008be6:	af00      	add	r7, sp, #0
 8008be8:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8008bea:	687b      	ldr	r3, [r7, #4]
 8008bec:	4618      	mov	r0, r3
 8008bee:	370c      	adds	r7, #12
 8008bf0:	46bd      	mov	sp, r7
 8008bf2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008bf6:	4770      	bx	lr

08008bf8 <_ZNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1Ev>:
      constexpr _Variadic_union() : _M_rest() { }
 8008bf8:	b580      	push	{r7, lr}
 8008bfa:	b082      	sub	sp, #8
 8008bfc:	af00      	add	r7, sp, #0
 8008bfe:	6078      	str	r0, [r7, #4]
 8008c00:	687b      	ldr	r3, [r7, #4]
 8008c02:	4618      	mov	r0, r3
 8008c04:	f000 faa6 	bl	8009154 <_ZNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1Ev>
 8008c08:	687b      	ldr	r3, [r7, #4]
 8008c0a:	4618      	mov	r0, r3
 8008c0c:	3708      	adds	r7, #8
 8008c0e:	46bd      	mov	sp, r7
 8008c10:	bd80      	pop	{r7, pc}

08008c12 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1Ev>:
      constexpr _Variant_storage() : _M_index(variant_npos) { }
 8008c12:	b580      	push	{r7, lr}
 8008c14:	b082      	sub	sp, #8
 8008c16:	af00      	add	r7, sp, #0
 8008c18:	6078      	str	r0, [r7, #4]
 8008c1a:	687b      	ldr	r3, [r7, #4]
 8008c1c:	4618      	mov	r0, r3
 8008c1e:	f7ff ffeb 	bl	8008bf8 <_ZNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1Ev>
 8008c22:	687b      	ldr	r3, [r7, #4]
 8008c24:	22ff      	movs	r2, #255	; 0xff
 8008c26:	761a      	strb	r2, [r3, #24]
 8008c28:	687b      	ldr	r3, [r7, #4]
 8008c2a:	4618      	mov	r0, r3
 8008c2c:	3708      	adds	r7, #8
 8008c2e:	46bd      	mov	sp, r7
 8008c30:	bd80      	pop	{r7, pc}

08008c32 <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEERKNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbS5_S9_EEEEDcOT0_>:
    __variant_cast(_Tp&& __rhs)
 8008c32:	b480      	push	{r7}
 8008c34:	b083      	sub	sp, #12
 8008c36:	af00      	add	r7, sp, #0
 8008c38:	6078      	str	r0, [r7, #4]
	    return static_cast<const variant<_Types...>&>(__rhs);
 8008c3a:	687b      	ldr	r3, [r7, #4]
    }
 8008c3c:	4618      	mov	r0, r3
 8008c3e:	370c      	adds	r7, #12
 8008c40:	46bd      	mov	sp, r7
 8008c42:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008c46:	4770      	bx	lr

08008c48 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESV_EEDcSL_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8008c48:	b580      	push	{r7, lr}
 8008c4a:	b082      	sub	sp, #8
 8008c4c:	af00      	add	r7, sp, #0
 8008c4e:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8008c50:	6878      	ldr	r0, [r7, #4]
 8008c52:	f7fa f9ac 	bl	8002fae <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8008c56:	4603      	mov	r3, r0
 8008c58:	4618      	mov	r0, r3
 8008c5a:	f7f9 f9c9 	bl	8001ff0 <_ZNSt8__detail9__variant5__getILj0ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8008c5e:	4603      	mov	r3, r0
	}
 8008c60:	4618      	mov	r0, r3
 8008c62:	3708      	adds	r7, #8
 8008c64:	46bd      	mov	sp, r7
 8008c66:	bd80      	pop	{r7, pc}

08008c68 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESR_SV_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8008c68:	b5b0      	push	{r4, r5, r7, lr}
 8008c6a:	b082      	sub	sp, #8
 8008c6c:	af00      	add	r7, sp, #0
 8008c6e:	6078      	str	r0, [r7, #4]
 8008c70:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8008c72:	6878      	ldr	r0, [r7, #4]
 8008c74:	f000 fa86 	bl	8009184 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8008c78:	4604      	mov	r4, r0
 8008c7a:	6838      	ldr	r0, [r7, #0]
 8008c7c:	f7fa f997 	bl	8002fae <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8008c80:	4603      	mov	r3, r0
 8008c82:	4618      	mov	r0, r3
 8008c84:	f7ff ffe0 	bl	8008c48 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESV_EEDcSL_>
 8008c88:	4603      	mov	r3, r0
 8008c8a:	4619      	mov	r1, r3
 8008c8c:	4620      	mov	r0, r4
 8008c8e:	f000 fa84 	bl	800919a <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_JRKiEENSt15__invoke_resultISM_JDpT0_EE4typeESN_DpOSS_>
		std::forward<_Variants>(__vars))...);
 8008c92:	462b      	mov	r3, r5
      }
 8008c94:	4618      	mov	r0, r3
 8008c96:	3708      	adds	r7, #8
 8008c98:	46bd      	mov	sp, r7
 8008c9a:	bdb0      	pop	{r4, r5, r7, pc}

08008c9c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESR_SV_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8008c9c:	b5b0      	push	{r4, r5, r7, lr}
 8008c9e:	b082      	sub	sp, #8
 8008ca0:	af00      	add	r7, sp, #0
 8008ca2:	6078      	str	r0, [r7, #4]
 8008ca4:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8008ca6:	6878      	ldr	r0, [r7, #4]
 8008ca8:	f000 fa6c 	bl	8009184 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8008cac:	4604      	mov	r4, r0
 8008cae:	6838      	ldr	r0, [r7, #0]
 8008cb0:	f7fa f97d 	bl	8002fae <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8008cb4:	4603      	mov	r3, r0
 8008cb6:	4619      	mov	r1, r3
 8008cb8:	4620      	mov	r0, r4
 8008cba:	f7ff ffd5 	bl	8008c68 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESR_SV_>
				   std::forward<_Variants>(__vars)...);
 8008cbe:	462b      	mov	r3, r5
      }
 8008cc0:	4618      	mov	r0, r3
 8008cc2:	3708      	adds	r7, #8
 8008cc4:	46bd      	mov	sp, r7
 8008cc6:	bdb0      	pop	{r4, r5, r7, pc}

08008cc8 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj0EEEE14__visit_invokeESR_SV_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8008cc8:	b5b0      	push	{r4, r5, r7, lr}
 8008cca:	b082      	sub	sp, #8
 8008ccc:	af00      	add	r7, sp, #0
 8008cce:	6078      	str	r0, [r7, #4]
 8008cd0:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8008cd2:	6878      	ldr	r0, [r7, #4]
 8008cd4:	f000 fa56 	bl	8009184 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8008cd8:	4604      	mov	r4, r0
 8008cda:	6838      	ldr	r0, [r7, #0]
 8008cdc:	f7fa f967 	bl	8002fae <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8008ce0:	4603      	mov	r3, r0
 8008ce2:	4619      	mov	r1, r3
 8008ce4:	4620      	mov	r0, r4
 8008ce6:	f7ff ffd9 	bl	8008c9c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESR_SV_>
				   std::forward<_Variants>(__vars)...);
 8008cea:	462b      	mov	r3, r5
      }
 8008cec:	4618      	mov	r0, r3
 8008cee:	3708      	adds	r7, #8
 8008cf0:	46bd      	mov	sp, r7
 8008cf2:	bdb0      	pop	{r4, r5, r7, pc}

08008cf4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESV_EEDcSL_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8008cf4:	b580      	push	{r7, lr}
 8008cf6:	b082      	sub	sp, #8
 8008cf8:	af00      	add	r7, sp, #0
 8008cfa:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8008cfc:	6878      	ldr	r0, [r7, #4]
 8008cfe:	f7fa f956 	bl	8002fae <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8008d02:	4603      	mov	r3, r0
 8008d04:	4618      	mov	r0, r3
 8008d06:	f7f9 f9ff 	bl	8002108 <_ZNSt8__detail9__variant5__getILj1ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8008d0a:	4603      	mov	r3, r0
	}
 8008d0c:	4618      	mov	r0, r3
 8008d0e:	3708      	adds	r7, #8
 8008d10:	46bd      	mov	sp, r7
 8008d12:	bd80      	pop	{r7, pc}

08008d14 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESR_SV_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8008d14:	b5b0      	push	{r4, r5, r7, lr}
 8008d16:	b082      	sub	sp, #8
 8008d18:	af00      	add	r7, sp, #0
 8008d1a:	6078      	str	r0, [r7, #4]
 8008d1c:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8008d1e:	6878      	ldr	r0, [r7, #4]
 8008d20:	f000 fa30 	bl	8009184 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8008d24:	4604      	mov	r4, r0
 8008d26:	6838      	ldr	r0, [r7, #0]
 8008d28:	f7fa f941 	bl	8002fae <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8008d2c:	4603      	mov	r3, r0
 8008d2e:	4618      	mov	r0, r3
 8008d30:	f7ff ffe0 	bl	8008cf4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESV_EEDcSL_>
 8008d34:	4603      	mov	r3, r0
 8008d36:	4619      	mov	r1, r3
 8008d38:	4620      	mov	r0, r4
 8008d3a:	f000 fa45 	bl	80091c8 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_JRKfEENSt15__invoke_resultISM_JDpT0_EE4typeESN_DpOSS_>
		std::forward<_Variants>(__vars))...);
 8008d3e:	462b      	mov	r3, r5
      }
 8008d40:	4618      	mov	r0, r3
 8008d42:	3708      	adds	r7, #8
 8008d44:	46bd      	mov	sp, r7
 8008d46:	bdb0      	pop	{r4, r5, r7, pc}

08008d48 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESR_SV_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8008d48:	b5b0      	push	{r4, r5, r7, lr}
 8008d4a:	b082      	sub	sp, #8
 8008d4c:	af00      	add	r7, sp, #0
 8008d4e:	6078      	str	r0, [r7, #4]
 8008d50:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8008d52:	6878      	ldr	r0, [r7, #4]
 8008d54:	f000 fa16 	bl	8009184 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8008d58:	4604      	mov	r4, r0
 8008d5a:	6838      	ldr	r0, [r7, #0]
 8008d5c:	f7fa f927 	bl	8002fae <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8008d60:	4603      	mov	r3, r0
 8008d62:	4619      	mov	r1, r3
 8008d64:	4620      	mov	r0, r4
 8008d66:	f7ff ffd5 	bl	8008d14 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESR_SV_>
				   std::forward<_Variants>(__vars)...);
 8008d6a:	462b      	mov	r3, r5
      }
 8008d6c:	4618      	mov	r0, r3
 8008d6e:	3708      	adds	r7, #8
 8008d70:	46bd      	mov	sp, r7
 8008d72:	bdb0      	pop	{r4, r5, r7, pc}

08008d74 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj1EEEE14__visit_invokeESR_SV_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8008d74:	b5b0      	push	{r4, r5, r7, lr}
 8008d76:	b082      	sub	sp, #8
 8008d78:	af00      	add	r7, sp, #0
 8008d7a:	6078      	str	r0, [r7, #4]
 8008d7c:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8008d7e:	6878      	ldr	r0, [r7, #4]
 8008d80:	f000 fa00 	bl	8009184 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8008d84:	4604      	mov	r4, r0
 8008d86:	6838      	ldr	r0, [r7, #0]
 8008d88:	f7fa f911 	bl	8002fae <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8008d8c:	4603      	mov	r3, r0
 8008d8e:	4619      	mov	r1, r3
 8008d90:	4620      	mov	r0, r4
 8008d92:	f7ff ffd9 	bl	8008d48 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESR_SV_>
				   std::forward<_Variants>(__vars)...);
 8008d96:	462b      	mov	r3, r5
      }
 8008d98:	4618      	mov	r0, r3
 8008d9a:	3708      	adds	r7, #8
 8008d9c:	46bd      	mov	sp, r7
 8008d9e:	bdb0      	pop	{r4, r5, r7, pc}

08008da0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESV_EEDcSL_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8008da0:	b580      	push	{r7, lr}
 8008da2:	b082      	sub	sp, #8
 8008da4:	af00      	add	r7, sp, #0
 8008da6:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8008da8:	6878      	ldr	r0, [r7, #4]
 8008daa:	f7fa f900 	bl	8002fae <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8008dae:	4603      	mov	r3, r0
 8008db0:	4618      	mov	r0, r3
 8008db2:	f7f9 fa47 	bl	8002244 <_ZNSt8__detail9__variant5__getILj2ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8008db6:	4603      	mov	r3, r0
	}
 8008db8:	4618      	mov	r0, r3
 8008dba:	3708      	adds	r7, #8
 8008dbc:	46bd      	mov	sp, r7
 8008dbe:	bd80      	pop	{r7, pc}

08008dc0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESR_SV_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8008dc0:	b5b0      	push	{r4, r5, r7, lr}
 8008dc2:	b082      	sub	sp, #8
 8008dc4:	af00      	add	r7, sp, #0
 8008dc6:	6078      	str	r0, [r7, #4]
 8008dc8:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8008dca:	6878      	ldr	r0, [r7, #4]
 8008dcc:	f000 f9da 	bl	8009184 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8008dd0:	4604      	mov	r4, r0
 8008dd2:	6838      	ldr	r0, [r7, #0]
 8008dd4:	f7fa f8eb 	bl	8002fae <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8008dd8:	4603      	mov	r3, r0
 8008dda:	4618      	mov	r0, r3
 8008ddc:	f7ff ffe0 	bl	8008da0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESV_EEDcSL_>
 8008de0:	4603      	mov	r3, r0
 8008de2:	4619      	mov	r1, r3
 8008de4:	4620      	mov	r0, r4
 8008de6:	f000 fa06 	bl	80091f6 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_JRKbEENSt15__invoke_resultISM_JDpT0_EE4typeESN_DpOSS_>
		std::forward<_Variants>(__vars))...);
 8008dea:	462b      	mov	r3, r5
      }
 8008dec:	4618      	mov	r0, r3
 8008dee:	3708      	adds	r7, #8
 8008df0:	46bd      	mov	sp, r7
 8008df2:	bdb0      	pop	{r4, r5, r7, pc}

08008df4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESR_SV_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8008df4:	b5b0      	push	{r4, r5, r7, lr}
 8008df6:	b082      	sub	sp, #8
 8008df8:	af00      	add	r7, sp, #0
 8008dfa:	6078      	str	r0, [r7, #4]
 8008dfc:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8008dfe:	6878      	ldr	r0, [r7, #4]
 8008e00:	f000 f9c0 	bl	8009184 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8008e04:	4604      	mov	r4, r0
 8008e06:	6838      	ldr	r0, [r7, #0]
 8008e08:	f7fa f8d1 	bl	8002fae <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8008e0c:	4603      	mov	r3, r0
 8008e0e:	4619      	mov	r1, r3
 8008e10:	4620      	mov	r0, r4
 8008e12:	f7ff ffd5 	bl	8008dc0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESR_SV_>
				   std::forward<_Variants>(__vars)...);
 8008e16:	462b      	mov	r3, r5
      }
 8008e18:	4618      	mov	r0, r3
 8008e1a:	3708      	adds	r7, #8
 8008e1c:	46bd      	mov	sp, r7
 8008e1e:	bdb0      	pop	{r4, r5, r7, pc}

08008e20 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj2EEEE14__visit_invokeESR_SV_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8008e20:	b5b0      	push	{r4, r5, r7, lr}
 8008e22:	b082      	sub	sp, #8
 8008e24:	af00      	add	r7, sp, #0
 8008e26:	6078      	str	r0, [r7, #4]
 8008e28:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8008e2a:	6878      	ldr	r0, [r7, #4]
 8008e2c:	f000 f9aa 	bl	8009184 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8008e30:	4604      	mov	r4, r0
 8008e32:	6838      	ldr	r0, [r7, #0]
 8008e34:	f7fa f8bb 	bl	8002fae <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8008e38:	4603      	mov	r3, r0
 8008e3a:	4619      	mov	r1, r3
 8008e3c:	4620      	mov	r0, r4
 8008e3e:	f7ff ffd9 	bl	8008df4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESR_SV_>
				   std::forward<_Variants>(__vars)...);
 8008e42:	462b      	mov	r3, r5
      }
 8008e44:	4618      	mov	r0, r3
 8008e46:	3708      	adds	r7, #8
 8008e48:	46bd      	mov	sp, r7
 8008e4a:	bdb0      	pop	{r4, r5, r7, pc}

08008e4c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESV_EEDcSL_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8008e4c:	b580      	push	{r7, lr}
 8008e4e:	b082      	sub	sp, #8
 8008e50:	af00      	add	r7, sp, #0
 8008e52:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8008e54:	6878      	ldr	r0, [r7, #4]
 8008e56:	f7fa f8aa 	bl	8002fae <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8008e5a:	4603      	mov	r3, r0
 8008e5c:	4618      	mov	r0, r3
 8008e5e:	f7f9 faa1 	bl	80023a4 <_ZNSt8__detail9__variant5__getILj3ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8008e62:	4603      	mov	r3, r0
	}
 8008e64:	4618      	mov	r0, r3
 8008e66:	3708      	adds	r7, #8
 8008e68:	46bd      	mov	sp, r7
 8008e6a:	bd80      	pop	{r7, pc}

08008e6c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESR_SV_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8008e6c:	b5b0      	push	{r4, r5, r7, lr}
 8008e6e:	b082      	sub	sp, #8
 8008e70:	af00      	add	r7, sp, #0
 8008e72:	6078      	str	r0, [r7, #4]
 8008e74:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8008e76:	6878      	ldr	r0, [r7, #4]
 8008e78:	f000 f984 	bl	8009184 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8008e7c:	4604      	mov	r4, r0
 8008e7e:	6838      	ldr	r0, [r7, #0]
 8008e80:	f7fa f895 	bl	8002fae <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8008e84:	4603      	mov	r3, r0
 8008e86:	4618      	mov	r0, r3
 8008e88:	f7ff ffe0 	bl	8008e4c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESV_EEDcSL_>
 8008e8c:	4603      	mov	r3, r0
 8008e8e:	4619      	mov	r1, r3
 8008e90:	4620      	mov	r0, r4
 8008e92:	f000 f9c7 	bl	8009224 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_JRKS8_EENSt15__invoke_resultISM_JDpT0_EE4typeESN_DpOSS_>
		std::forward<_Variants>(__vars))...);
 8008e96:	462b      	mov	r3, r5
      }
 8008e98:	4618      	mov	r0, r3
 8008e9a:	3708      	adds	r7, #8
 8008e9c:	46bd      	mov	sp, r7
 8008e9e:	bdb0      	pop	{r4, r5, r7, pc}

08008ea0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESR_SV_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8008ea0:	b5b0      	push	{r4, r5, r7, lr}
 8008ea2:	b082      	sub	sp, #8
 8008ea4:	af00      	add	r7, sp, #0
 8008ea6:	6078      	str	r0, [r7, #4]
 8008ea8:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8008eaa:	6878      	ldr	r0, [r7, #4]
 8008eac:	f000 f96a 	bl	8009184 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8008eb0:	4604      	mov	r4, r0
 8008eb2:	6838      	ldr	r0, [r7, #0]
 8008eb4:	f7fa f87b 	bl	8002fae <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8008eb8:	4603      	mov	r3, r0
 8008eba:	4619      	mov	r1, r3
 8008ebc:	4620      	mov	r0, r4
 8008ebe:	f7ff ffd5 	bl	8008e6c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESR_SV_>
				   std::forward<_Variants>(__vars)...);
 8008ec2:	462b      	mov	r3, r5
      }
 8008ec4:	4618      	mov	r0, r3
 8008ec6:	3708      	adds	r7, #8
 8008ec8:	46bd      	mov	sp, r7
 8008eca:	bdb0      	pop	{r4, r5, r7, pc}

08008ecc <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj3EEEE14__visit_invokeESR_SV_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8008ecc:	b5b0      	push	{r4, r5, r7, lr}
 8008ece:	b082      	sub	sp, #8
 8008ed0:	af00      	add	r7, sp, #0
 8008ed2:	6078      	str	r0, [r7, #4]
 8008ed4:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8008ed6:	6878      	ldr	r0, [r7, #4]
 8008ed8:	f000 f954 	bl	8009184 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8008edc:	4604      	mov	r4, r0
 8008ede:	6838      	ldr	r0, [r7, #0]
 8008ee0:	f7fa f865 	bl	8002fae <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8008ee4:	4603      	mov	r3, r0
 8008ee6:	4619      	mov	r1, r3
 8008ee8:	4620      	mov	r0, r4
 8008eea:	f7ff ffd9 	bl	8008ea0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESR_SV_>
				   std::forward<_Variants>(__vars)...);
 8008eee:	462b      	mov	r3, r5
      }
 8008ef0:	4618      	mov	r0, r3
 8008ef2:	3708      	adds	r7, #8
 8008ef4:	46bd      	mov	sp, r7
 8008ef6:	bdb0      	pop	{r4, r5, r7, pc}

08008ef8 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj4EEEE28__element_by_index_or_cookieILj4ESV_EEDcSL_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8008ef8:	b580      	push	{r7, lr}
 8008efa:	b082      	sub	sp, #8
 8008efc:	af00      	add	r7, sp, #0
 8008efe:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8008f00:	6878      	ldr	r0, [r7, #4]
 8008f02:	f7fa f854 	bl	8002fae <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8008f06:	4603      	mov	r3, r0
 8008f08:	4618      	mov	r0, r3
 8008f0a:	f7f9 fb0d 	bl	8002528 <_ZNSt8__detail9__variant5__getILj4ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8008f0e:	4603      	mov	r3, r0
	}
 8008f10:	4618      	mov	r0, r3
 8008f12:	3708      	adds	r7, #8
 8008f14:	46bd      	mov	sp, r7
 8008f16:	bd80      	pop	{r7, pc}

08008f18 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj4EEEE19__visit_invoke_implESR_SV_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8008f18:	b5b0      	push	{r4, r5, r7, lr}
 8008f1a:	b082      	sub	sp, #8
 8008f1c:	af00      	add	r7, sp, #0
 8008f1e:	6078      	str	r0, [r7, #4]
 8008f20:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8008f22:	6878      	ldr	r0, [r7, #4]
 8008f24:	f000 f92e 	bl	8009184 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8008f28:	4604      	mov	r4, r0
 8008f2a:	6838      	ldr	r0, [r7, #0]
 8008f2c:	f7fa f83f 	bl	8002fae <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8008f30:	4603      	mov	r3, r0
 8008f32:	4618      	mov	r0, r3
 8008f34:	f7ff ffe0 	bl	8008ef8 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj4EEEE28__element_by_index_or_cookieILj4ESV_EEDcSL_>
 8008f38:	4603      	mov	r3, r0
 8008f3a:	4619      	mov	r1, r3
 8008f3c:	4620      	mov	r0, r4
 8008f3e:	f000 f988 	bl	8009252 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_JRKSC_EENSt15__invoke_resultISM_JDpT0_EE4typeESN_DpOSS_>
		std::forward<_Variants>(__vars))...);
 8008f42:	462b      	mov	r3, r5
      }
 8008f44:	4618      	mov	r0, r3
 8008f46:	3708      	adds	r7, #8
 8008f48:	46bd      	mov	sp, r7
 8008f4a:	bdb0      	pop	{r4, r5, r7, pc}

08008f4c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj4EEEE17__do_visit_invokeESR_SV_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8008f4c:	b5b0      	push	{r4, r5, r7, lr}
 8008f4e:	b082      	sub	sp, #8
 8008f50:	af00      	add	r7, sp, #0
 8008f52:	6078      	str	r0, [r7, #4]
 8008f54:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8008f56:	6878      	ldr	r0, [r7, #4]
 8008f58:	f000 f914 	bl	8009184 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8008f5c:	4604      	mov	r4, r0
 8008f5e:	6838      	ldr	r0, [r7, #0]
 8008f60:	f7fa f825 	bl	8002fae <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8008f64:	4603      	mov	r3, r0
 8008f66:	4619      	mov	r1, r3
 8008f68:	4620      	mov	r0, r4
 8008f6a:	f7ff ffd5 	bl	8008f18 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj4EEEE19__visit_invoke_implESR_SV_>
				   std::forward<_Variants>(__vars)...);
 8008f6e:	462b      	mov	r3, r5
      }
 8008f70:	4618      	mov	r0, r3
 8008f72:	3708      	adds	r7, #8
 8008f74:	46bd      	mov	sp, r7
 8008f76:	bdb0      	pop	{r4, r5, r7, pc}

08008f78 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj4EEEE14__visit_invokeESR_SV_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8008f78:	b5b0      	push	{r4, r5, r7, lr}
 8008f7a:	b082      	sub	sp, #8
 8008f7c:	af00      	add	r7, sp, #0
 8008f7e:	6078      	str	r0, [r7, #4]
 8008f80:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8008f82:	6878      	ldr	r0, [r7, #4]
 8008f84:	f000 f8fe 	bl	8009184 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8008f88:	4604      	mov	r4, r0
 8008f8a:	6838      	ldr	r0, [r7, #0]
 8008f8c:	f7fa f80f 	bl	8002fae <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8008f90:	4603      	mov	r3, r0
 8008f92:	4619      	mov	r1, r3
 8008f94:	4620      	mov	r0, r4
 8008f96:	f7ff ffd9 	bl	8008f4c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj4EEEE17__do_visit_invokeESR_SV_>
				   std::forward<_Variants>(__vars)...);
 8008f9a:	462b      	mov	r3, r5
      }
 8008f9c:	4618      	mov	r0, r3
 8008f9e:	3708      	adds	r7, #8
 8008fa0:	46bd      	mov	sp, r7
 8008fa2:	bdb0      	pop	{r4, r5, r7, pc}

08008fa4 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS0_15_Copy_ctor_baseILb0EJifbS9_SD_EEERKSF_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbS9_SD_EEEJLj5EEE9_M_accessIJEEERKSW_jDpT_>:
	_M_access(size_t __first_index, _Args... __rest_indices) const
 8008fa4:	b580      	push	{r7, lr}
 8008fa6:	b082      	sub	sp, #8
 8008fa8:	af00      	add	r7, sp, #0
 8008faa:	6078      	str	r0, [r7, #4]
 8008fac:	6039      	str	r1, [r7, #0]
	    ._M_access(__rest_indices...);
 8008fae:	683b      	ldr	r3, [r7, #0]
 8008fb0:	009b      	lsls	r3, r3, #2
 8008fb2:	687a      	ldr	r2, [r7, #4]
 8008fb4:	4413      	add	r3, r2
 8008fb6:	4618      	mov	r0, r3
 8008fb8:	f000 f962 	bl	8009280 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS0_15_Copy_ctor_baseILb0EJifbS9_SD_EEERKSF_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbS9_SD_EEEJEE9_M_accessEv>
 8008fbc:	4603      	mov	r3, r0
	}
 8008fbe:	4618      	mov	r0, r3
 8008fc0:	3708      	adds	r7, #8
 8008fc2:	46bd      	mov	sp, r7
 8008fc4:	bd80      	pop	{r7, pc}
	...

08008fc8 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_JRKSt7variantIJifbS8_SC_EEEEDcSL_DpOT2_>:
    __do_visit(_Visitor&& __visitor, _Variants&&... __variants)
 8008fc8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008fca:	b085      	sub	sp, #20
 8008fcc:	af00      	add	r7, sp, #0
 8008fce:	6078      	str	r0, [r7, #4]
 8008fd0:	6039      	str	r1, [r7, #0]
      constexpr auto& __vtable = __detail::__variant::__gen_vtable<
 8008fd2:	4b0f      	ldr	r3, [pc, #60]	; (8009010 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_JRKSt7variantIJifbS8_SC_EEEEDcSL_DpOT2_+0x48>)
 8008fd4:	60fb      	str	r3, [r7, #12]
      auto __func_ptr = __vtable._M_access(__variants.index()...);
 8008fd6:	6838      	ldr	r0, [r7, #0]
 8008fd8:	f7f8 faa0 	bl	800151c <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv>
 8008fdc:	4603      	mov	r3, r0
 8008fde:	4619      	mov	r1, r3
 8008fe0:	68f8      	ldr	r0, [r7, #12]
 8008fe2:	f7ff ffdf 	bl	8008fa4 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS0_15_Copy_ctor_baseILb0EJifbS9_SD_EEERKSF_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbS9_SD_EEEJLj5EEE9_M_accessIJEEERKSW_jDpT_>
 8008fe6:	4603      	mov	r3, r0
 8008fe8:	681b      	ldr	r3, [r3, #0]
 8008fea:	60bb      	str	r3, [r7, #8]
      return (*__func_ptr)(std::forward<_Visitor>(__visitor),
 8008fec:	68bc      	ldr	r4, [r7, #8]
 8008fee:	6878      	ldr	r0, [r7, #4]
 8008ff0:	f000 f951 	bl	8009296 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8008ff4:	4605      	mov	r5, r0
 8008ff6:	6838      	ldr	r0, [r7, #0]
 8008ff8:	f7f9 ffd9 	bl	8002fae <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8008ffc:	4603      	mov	r3, r0
 8008ffe:	4619      	mov	r1, r3
 8009000:	4628      	mov	r0, r5
 8009002:	47a0      	blx	r4
			   std::forward<_Variants>(__variants)...);
 8009004:	4633      	mov	r3, r6
    }
 8009006:	4618      	mov	r0, r3
 8009008:	3714      	adds	r7, #20
 800900a:	46bd      	mov	sp, r7
 800900c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800900e:	bf00      	nop
 8009010:	0802820c 	.word	0x0802820c

08009014 <_ZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Copy_ctor_baseILb0EJifbS7_SB_EEERKSD_EEvOT0_OT1_>:
    void __variant_construct(_Tp&& __lhs, _Up&& __rhs)
 8009014:	b580      	push	{r7, lr}
 8009016:	b084      	sub	sp, #16
 8009018:	af00      	add	r7, sp, #0
 800901a:	6078      	str	r0, [r7, #4]
 800901c:	6039      	str	r1, [r7, #0]
      __lhs._M_index = __rhs._M_index;
 800901e:	683b      	ldr	r3, [r7, #0]
 8009020:	7e1a      	ldrb	r2, [r3, #24]
 8009022:	687b      	ldr	r3, [r7, #4]
 8009024:	761a      	strb	r2, [r3, #24]
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 8009026:	687b      	ldr	r3, [r7, #4]
 8009028:	60fb      	str	r3, [r7, #12]
 800902a:	6838      	ldr	r0, [r7, #0]
 800902c:	f000 f89f 	bl	800916e <_ZSt7forwardIRKNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>
 8009030:	4603      	mov	r3, r0
 8009032:	4618      	mov	r0, r3
 8009034:	f7ff fdfd 	bl	8008c32 <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEERKNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbS5_S9_EEEEDcOT0_>
 8009038:	4602      	mov	r2, r0
 800903a:	f107 030c 	add.w	r3, r7, #12
 800903e:	4611      	mov	r1, r2
 8009040:	4618      	mov	r0, r3
 8009042:	f7ff ffc1 	bl	8008fc8 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_JRKSt7variantIJifbS8_SC_EEEEDcSL_DpOT2_>
    }
 8009046:	bf00      	nop
 8009048:	3710      	adds	r7, #16
 800904a:	46bd      	mov	sp, r7
 800904c:	bd80      	pop	{r7, pc}

0800904e <_ZNSaI6SymbolEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
 800904e:	b580      	push	{r7, lr}
 8009050:	b082      	sub	sp, #8
 8009052:	af00      	add	r7, sp, #0
 8009054:	6078      	str	r0, [r7, #4]
 8009056:	6039      	str	r1, [r7, #0]
      : __allocator_base<_Tp>(__a) { }
 8009058:	6839      	ldr	r1, [r7, #0]
 800905a:	6878      	ldr	r0, [r7, #4]
 800905c:	f000 f926 	bl	80092ac <_ZN9__gnu_cxx13new_allocatorI6SymbolEC1ERKS2_>
 8009060:	687b      	ldr	r3, [r7, #4]
 8009062:	4618      	mov	r0, r3
 8009064:	3708      	adds	r7, #8
 8009066:	46bd      	mov	sp, r7
 8009068:	bd80      	pop	{r7, pc}

0800906a <_ZNSt12_Vector_baseI6SymbolSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
 800906a:	b480      	push	{r7}
 800906c:	b083      	sub	sp, #12
 800906e:	af00      	add	r7, sp, #0
 8009070:	6078      	str	r0, [r7, #4]
	: _M_start(), _M_finish(), _M_end_of_storage()
 8009072:	687b      	ldr	r3, [r7, #4]
 8009074:	2200      	movs	r2, #0
 8009076:	601a      	str	r2, [r3, #0]
 8009078:	687b      	ldr	r3, [r7, #4]
 800907a:	2200      	movs	r2, #0
 800907c:	605a      	str	r2, [r3, #4]
 800907e:	687b      	ldr	r3, [r7, #4]
 8009080:	2200      	movs	r2, #0
 8009082:	609a      	str	r2, [r3, #8]
	{ }
 8009084:	687b      	ldr	r3, [r7, #4]
 8009086:	4618      	mov	r0, r3
 8009088:	370c      	adds	r7, #12
 800908a:	46bd      	mov	sp, r7
 800908c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009090:	4770      	bx	lr

08009092 <_ZNSt12_Vector_baseI6SymbolSaIS0_EEC1ERKS1_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 8009092:	b580      	push	{r7, lr}
 8009094:	b082      	sub	sp, #8
 8009096:	af00      	add	r7, sp, #0
 8009098:	6078      	str	r0, [r7, #4]
 800909a:	6039      	str	r1, [r7, #0]
      : _M_impl(__a) { }
 800909c:	687b      	ldr	r3, [r7, #4]
 800909e:	6839      	ldr	r1, [r7, #0]
 80090a0:	4618      	mov	r0, r3
 80090a2:	f7ff fcce 	bl	8008a42 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE12_Vector_implC1ERKS1_>
 80090a6:	687b      	ldr	r3, [r7, #4]
 80090a8:	4618      	mov	r0, r3
 80090aa:	3708      	adds	r7, #8
 80090ac:	46bd      	mov	sp, r7
 80090ae:	bd80      	pop	{r7, pc}

080090b0 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE17_Vector_impl_data12_M_copy_dataERKS3_>:
	_M_copy_data(_Vector_impl_data const& __x) _GLIBCXX_NOEXCEPT
 80090b0:	b480      	push	{r7}
 80090b2:	b083      	sub	sp, #12
 80090b4:	af00      	add	r7, sp, #0
 80090b6:	6078      	str	r0, [r7, #4]
 80090b8:	6039      	str	r1, [r7, #0]
	  _M_start = __x._M_start;
 80090ba:	683b      	ldr	r3, [r7, #0]
 80090bc:	681a      	ldr	r2, [r3, #0]
 80090be:	687b      	ldr	r3, [r7, #4]
 80090c0:	601a      	str	r2, [r3, #0]
	  _M_finish = __x._M_finish;
 80090c2:	683b      	ldr	r3, [r7, #0]
 80090c4:	685a      	ldr	r2, [r3, #4]
 80090c6:	687b      	ldr	r3, [r7, #4]
 80090c8:	605a      	str	r2, [r3, #4]
	  _M_end_of_storage = __x._M_end_of_storage;
 80090ca:	683b      	ldr	r3, [r7, #0]
 80090cc:	689a      	ldr	r2, [r3, #8]
 80090ce:	687b      	ldr	r3, [r7, #4]
 80090d0:	609a      	str	r2, [r3, #8]
	}
 80090d2:	bf00      	nop
 80090d4:	370c      	adds	r7, #12
 80090d6:	46bd      	mov	sp, r7
 80090d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80090dc:	4770      	bx	lr

080090de <_ZSt18__do_alloc_on_moveISaI6SymbolEEvRT_S3_St17integral_constantIbLb1EE>:
    inline void __do_alloc_on_move(_Alloc& __one, _Alloc& __two, true_type)
 80090de:	b580      	push	{r7, lr}
 80090e0:	b084      	sub	sp, #16
 80090e2:	af00      	add	r7, sp, #0
 80090e4:	60f8      	str	r0, [r7, #12]
 80090e6:	60b9      	str	r1, [r7, #8]
 80090e8:	713a      	strb	r2, [r7, #4]
    { __one = std::move(__two); }
 80090ea:	68b8      	ldr	r0, [r7, #8]
 80090ec:	f000 f8ea 	bl	80092c4 <_ZSt4moveIRSaI6SymbolEEONSt16remove_referenceIT_E4typeEOS4_>
 80090f0:	bf00      	nop
 80090f2:	3710      	adds	r7, #16
 80090f4:	46bd      	mov	sp, r7
 80090f6:	bd80      	pop	{r7, pc}

080090f8 <_ZSt4moveIRNSt12_Vector_baseI6SymbolSaIS1_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS7_>:
    move(_Tp&& __t) noexcept
 80090f8:	b480      	push	{r7}
 80090fa:	b083      	sub	sp, #12
 80090fc:	af00      	add	r7, sp, #0
 80090fe:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 8009100:	687b      	ldr	r3, [r7, #4]
 8009102:	4618      	mov	r0, r3
 8009104:	370c      	adds	r7, #12
 8009106:	46bd      	mov	sp, r7
 8009108:	f85d 7b04 	ldr.w	r7, [sp], #4
 800910c:	4770      	bx	lr

0800910e <_ZNSt12_Vector_baseI6SymbolSaIS0_EE17_Vector_impl_dataC1EOS3_>:
	_Vector_impl_data(_Vector_impl_data&& __x) noexcept
 800910e:	b480      	push	{r7}
 8009110:	b083      	sub	sp, #12
 8009112:	af00      	add	r7, sp, #0
 8009114:	6078      	str	r0, [r7, #4]
 8009116:	6039      	str	r1, [r7, #0]
	: _M_start(__x._M_start), _M_finish(__x._M_finish),
 8009118:	683b      	ldr	r3, [r7, #0]
 800911a:	681a      	ldr	r2, [r3, #0]
	  _M_end_of_storage(__x._M_end_of_storage)
 800911c:	687b      	ldr	r3, [r7, #4]
 800911e:	601a      	str	r2, [r3, #0]
	: _M_start(__x._M_start), _M_finish(__x._M_finish),
 8009120:	683b      	ldr	r3, [r7, #0]
 8009122:	685a      	ldr	r2, [r3, #4]
	  _M_end_of_storage(__x._M_end_of_storage)
 8009124:	687b      	ldr	r3, [r7, #4]
 8009126:	605a      	str	r2, [r3, #4]
 8009128:	683b      	ldr	r3, [r7, #0]
 800912a:	689a      	ldr	r2, [r3, #8]
 800912c:	687b      	ldr	r3, [r7, #4]
 800912e:	609a      	str	r2, [r3, #8]
	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 8009130:	683b      	ldr	r3, [r7, #0]
 8009132:	2200      	movs	r2, #0
 8009134:	609a      	str	r2, [r3, #8]
 8009136:	683b      	ldr	r3, [r7, #0]
 8009138:	689a      	ldr	r2, [r3, #8]
 800913a:	683b      	ldr	r3, [r7, #0]
 800913c:	605a      	str	r2, [r3, #4]
 800913e:	683b      	ldr	r3, [r7, #0]
 8009140:	685a      	ldr	r2, [r3, #4]
 8009142:	683b      	ldr	r3, [r7, #0]
 8009144:	601a      	str	r2, [r3, #0]
 8009146:	687b      	ldr	r3, [r7, #4]
 8009148:	4618      	mov	r0, r3
 800914a:	370c      	adds	r7, #12
 800914c:	46bd      	mov	sp, r7
 800914e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009152:	4770      	bx	lr

08009154 <_ZNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1Ev>:
      constexpr _Variadic_union() : _M_rest() { }
 8009154:	b580      	push	{r7, lr}
 8009156:	b082      	sub	sp, #8
 8009158:	af00      	add	r7, sp, #0
 800915a:	6078      	str	r0, [r7, #4]
 800915c:	687b      	ldr	r3, [r7, #4]
 800915e:	4618      	mov	r0, r3
 8009160:	f000 f8bb 	bl	80092da <_ZNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1Ev>
 8009164:	687b      	ldr	r3, [r7, #4]
 8009166:	4618      	mov	r0, r3
 8009168:	3708      	adds	r7, #8
 800916a:	46bd      	mov	sp, r7
 800916c:	bd80      	pop	{r7, pc}

0800916e <_ZSt7forwardIRKNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800916e:	b480      	push	{r7}
 8009170:	b083      	sub	sp, #12
 8009172:	af00      	add	r7, sp, #0
 8009174:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8009176:	687b      	ldr	r3, [r7, #4]
 8009178:	4618      	mov	r0, r3
 800917a:	370c      	adds	r7, #12
 800917c:	46bd      	mov	sp, r7
 800917e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009182:	4770      	bx	lr

08009184 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8009184:	b480      	push	{r7}
 8009186:	b083      	sub	sp, #12
 8009188:	af00      	add	r7, sp, #0
 800918a:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800918c:	687b      	ldr	r3, [r7, #4]
 800918e:	4618      	mov	r0, r3
 8009190:	370c      	adds	r7, #12
 8009192:	46bd      	mov	sp, r7
 8009194:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009198:	4770      	bx	lr

0800919a <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_JRKiEENSt15__invoke_resultISM_JDpT0_EE4typeESN_DpOSS_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 800919a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800919c:	b083      	sub	sp, #12
 800919e:	af00      	add	r7, sp, #0
 80091a0:	6078      	str	r0, [r7, #4]
 80091a2:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 80091a4:	6878      	ldr	r0, [r7, #4]
 80091a6:	f000 f876 	bl	8009296 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 80091aa:	4604      	mov	r4, r0
 80091ac:	6838      	ldr	r0, [r7, #0]
 80091ae:	f7fa fe4d 	bl	8003e4c <_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE>
 80091b2:	4603      	mov	r3, r0
 80091b4:	461a      	mov	r2, r3
 80091b6:	4621      	mov	r1, r4
 80091b8:	4628      	mov	r0, r5
 80091ba:	f000 f89b 	bl	80092f4 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS1_15_Copy_ctor_baseILb0EJifbS9_SD_EEERKSF_EEvOT0_OT1_EUlOT_E_JRKiEESN_St14__invoke_otherSK_DpOT1_>
					std::forward<_Args>(__args)...);
 80091be:	4633      	mov	r3, r6
    }
 80091c0:	4618      	mov	r0, r3
 80091c2:	370c      	adds	r7, #12
 80091c4:	46bd      	mov	sp, r7
 80091c6:	bdf0      	pop	{r4, r5, r6, r7, pc}

080091c8 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_JRKfEENSt15__invoke_resultISM_JDpT0_EE4typeESN_DpOSS_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 80091c8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80091ca:	b083      	sub	sp, #12
 80091cc:	af00      	add	r7, sp, #0
 80091ce:	6078      	str	r0, [r7, #4]
 80091d0:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 80091d2:	6878      	ldr	r0, [r7, #4]
 80091d4:	f000 f85f 	bl	8009296 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 80091d8:	4604      	mov	r4, r0
 80091da:	6838      	ldr	r0, [r7, #0]
 80091dc:	f7fa fe6a 	bl	8003eb4 <_ZSt7forwardIRKfEOT_RNSt16remove_referenceIS2_E4typeE>
 80091e0:	4603      	mov	r3, r0
 80091e2:	461a      	mov	r2, r3
 80091e4:	4621      	mov	r1, r4
 80091e6:	4628      	mov	r0, r5
 80091e8:	f000 f89b 	bl	8009322 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS1_15_Copy_ctor_baseILb0EJifbS9_SD_EEERKSF_EEvOT0_OT1_EUlOT_E_JRKfEESN_St14__invoke_otherSK_DpOT1_>
					std::forward<_Args>(__args)...);
 80091ec:	4633      	mov	r3, r6
    }
 80091ee:	4618      	mov	r0, r3
 80091f0:	370c      	adds	r7, #12
 80091f2:	46bd      	mov	sp, r7
 80091f4:	bdf0      	pop	{r4, r5, r6, r7, pc}

080091f6 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_JRKbEENSt15__invoke_resultISM_JDpT0_EE4typeESN_DpOSS_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 80091f6:	b5f0      	push	{r4, r5, r6, r7, lr}
 80091f8:	b083      	sub	sp, #12
 80091fa:	af00      	add	r7, sp, #0
 80091fc:	6078      	str	r0, [r7, #4]
 80091fe:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8009200:	6878      	ldr	r0, [r7, #4]
 8009202:	f000 f848 	bl	8009296 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8009206:	4604      	mov	r4, r0
 8009208:	6838      	ldr	r0, [r7, #0]
 800920a:	f7fa fe87 	bl	8003f1c <_ZSt7forwardIRKbEOT_RNSt16remove_referenceIS2_E4typeE>
 800920e:	4603      	mov	r3, r0
 8009210:	461a      	mov	r2, r3
 8009212:	4621      	mov	r1, r4
 8009214:	4628      	mov	r0, r5
 8009216:	f000 f89b 	bl	8009350 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS1_15_Copy_ctor_baseILb0EJifbS9_SD_EEERKSF_EEvOT0_OT1_EUlOT_E_JRKbEESN_St14__invoke_otherSK_DpOT1_>
					std::forward<_Args>(__args)...);
 800921a:	4633      	mov	r3, r6
    }
 800921c:	4618      	mov	r0, r3
 800921e:	370c      	adds	r7, #12
 8009220:	46bd      	mov	sp, r7
 8009222:	bdf0      	pop	{r4, r5, r6, r7, pc}

08009224 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_JRKS8_EENSt15__invoke_resultISM_JDpT0_EE4typeESN_DpOSS_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8009224:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009226:	b083      	sub	sp, #12
 8009228:	af00      	add	r7, sp, #0
 800922a:	6078      	str	r0, [r7, #4]
 800922c:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 800922e:	6878      	ldr	r0, [r7, #4]
 8009230:	f000 f831 	bl	8009296 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8009234:	4604      	mov	r4, r0
 8009236:	6838      	ldr	r0, [r7, #0]
 8009238:	f7fa feb0 	bl	8003f9c <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 800923c:	4603      	mov	r3, r0
 800923e:	461a      	mov	r2, r3
 8009240:	4621      	mov	r1, r4
 8009242:	4628      	mov	r0, r5
 8009244:	f000 f89b 	bl	800937e <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS1_15_Copy_ctor_baseILb0EJifbS9_SD_EEERKSF_EEvOT0_OT1_EUlOT_E_JRKS9_EESN_St14__invoke_otherSK_DpOT1_>
					std::forward<_Args>(__args)...);
 8009248:	4633      	mov	r3, r6
    }
 800924a:	4618      	mov	r0, r3
 800924c:	370c      	adds	r7, #12
 800924e:	46bd      	mov	sp, r7
 8009250:	bdf0      	pop	{r4, r5, r6, r7, pc}

08009252 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_JRKSC_EENSt15__invoke_resultISM_JDpT0_EE4typeESN_DpOSS_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8009252:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009254:	b083      	sub	sp, #12
 8009256:	af00      	add	r7, sp, #0
 8009258:	6078      	str	r0, [r7, #4]
 800925a:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 800925c:	6878      	ldr	r0, [r7, #4]
 800925e:	f000 f81a 	bl	8009296 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8009262:	4604      	mov	r4, r0
 8009264:	6838      	ldr	r0, [r7, #0]
 8009266:	f7fa fed9 	bl	800401c <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>
 800926a:	4603      	mov	r3, r0
 800926c:	461a      	mov	r2, r3
 800926e:	4621      	mov	r1, r4
 8009270:	4628      	mov	r0, r5
 8009272:	f000 f89b 	bl	80093ac <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS1_15_Copy_ctor_baseILb0EJifbS9_SD_EEERKSF_EEvOT0_OT1_EUlOT_E_JRKSD_EESN_St14__invoke_otherSK_DpOT1_>
					std::forward<_Args>(__args)...);
 8009276:	4633      	mov	r3, r6
    }
 8009278:	4618      	mov	r0, r3
 800927a:	370c      	adds	r7, #12
 800927c:	46bd      	mov	sp, r7
 800927e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08009280 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS0_15_Copy_ctor_baseILb0EJifbS9_SD_EEERKSF_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbS9_SD_EEEJEE9_M_accessEv>:
      _M_access() const
 8009280:	b480      	push	{r7}
 8009282:	b083      	sub	sp, #12
 8009284:	af00      	add	r7, sp, #0
 8009286:	6078      	str	r0, [r7, #4]
      { return _M_data; }
 8009288:	687b      	ldr	r3, [r7, #4]
 800928a:	4618      	mov	r0, r3
 800928c:	370c      	adds	r7, #12
 800928e:	46bd      	mov	sp, r7
 8009290:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009294:	4770      	bx	lr

08009296 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8009296:	b480      	push	{r7}
 8009298:	b083      	sub	sp, #12
 800929a:	af00      	add	r7, sp, #0
 800929c:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800929e:	687b      	ldr	r3, [r7, #4]
 80092a0:	4618      	mov	r0, r3
 80092a2:	370c      	adds	r7, #12
 80092a4:	46bd      	mov	sp, r7
 80092a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80092aa:	4770      	bx	lr

080092ac <_ZN9__gnu_cxx13new_allocatorI6SymbolEC1ERKS2_>:
      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
 80092ac:	b480      	push	{r7}
 80092ae:	b083      	sub	sp, #12
 80092b0:	af00      	add	r7, sp, #0
 80092b2:	6078      	str	r0, [r7, #4]
 80092b4:	6039      	str	r1, [r7, #0]
 80092b6:	687b      	ldr	r3, [r7, #4]
 80092b8:	4618      	mov	r0, r3
 80092ba:	370c      	adds	r7, #12
 80092bc:	46bd      	mov	sp, r7
 80092be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80092c2:	4770      	bx	lr

080092c4 <_ZSt4moveIRSaI6SymbolEEONSt16remove_referenceIT_E4typeEOS4_>:
    move(_Tp&& __t) noexcept
 80092c4:	b480      	push	{r7}
 80092c6:	b083      	sub	sp, #12
 80092c8:	af00      	add	r7, sp, #0
 80092ca:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 80092cc:	687b      	ldr	r3, [r7, #4]
 80092ce:	4618      	mov	r0, r3
 80092d0:	370c      	adds	r7, #12
 80092d2:	46bd      	mov	sp, r7
 80092d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80092d8:	4770      	bx	lr

080092da <_ZNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1Ev>:
      constexpr _Variadic_union() : _M_rest() { }
 80092da:	b580      	push	{r7, lr}
 80092dc:	b082      	sub	sp, #8
 80092de:	af00      	add	r7, sp, #0
 80092e0:	6078      	str	r0, [r7, #4]
 80092e2:	687b      	ldr	r3, [r7, #4]
 80092e4:	4618      	mov	r0, r3
 80092e6:	f000 f878 	bl	80093da <_ZNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1Ev>
 80092ea:	687b      	ldr	r3, [r7, #4]
 80092ec:	4618      	mov	r0, r3
 80092ee:	3708      	adds	r7, #8
 80092f0:	46bd      	mov	sp, r7
 80092f2:	bd80      	pop	{r7, pc}

080092f4 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS1_15_Copy_ctor_baseILb0EJifbS9_SD_EEERKSF_EEvOT0_OT1_EUlOT_E_JRKiEESN_St14__invoke_otherSK_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 80092f4:	b5b0      	push	{r4, r5, r7, lr}
 80092f6:	b084      	sub	sp, #16
 80092f8:	af00      	add	r7, sp, #0
 80092fa:	7338      	strb	r0, [r7, #12]
 80092fc:	60b9      	str	r1, [r7, #8]
 80092fe:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8009300:	68b8      	ldr	r0, [r7, #8]
 8009302:	f7ff ffc8 	bl	8009296 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8009306:	4604      	mov	r4, r0
 8009308:	6878      	ldr	r0, [r7, #4]
 800930a:	f7fa fd9f 	bl	8003e4c <_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE>
 800930e:	4603      	mov	r3, r0
 8009310:	4619      	mov	r1, r3
 8009312:	4620      	mov	r0, r4
 8009314:	f000 f86e 	bl	80093f4 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Copy_ctor_baseILb0EJifbS7_SB_EEERKSD_EEvOT0_OT1_ENUlOT_E_clIRKiEENS0_16__variant_cookieESM_>
 8009318:	462b      	mov	r3, r5
 800931a:	4618      	mov	r0, r3
 800931c:	3710      	adds	r7, #16
 800931e:	46bd      	mov	sp, r7
 8009320:	bdb0      	pop	{r4, r5, r7, pc}

08009322 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS1_15_Copy_ctor_baseILb0EJifbS9_SD_EEERKSF_EEvOT0_OT1_EUlOT_E_JRKfEESN_St14__invoke_otherSK_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8009322:	b5b0      	push	{r4, r5, r7, lr}
 8009324:	b084      	sub	sp, #16
 8009326:	af00      	add	r7, sp, #0
 8009328:	7338      	strb	r0, [r7, #12]
 800932a:	60b9      	str	r1, [r7, #8]
 800932c:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800932e:	68b8      	ldr	r0, [r7, #8]
 8009330:	f7ff ffb1 	bl	8009296 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8009334:	4604      	mov	r4, r0
 8009336:	6878      	ldr	r0, [r7, #4]
 8009338:	f7fa fdbc 	bl	8003eb4 <_ZSt7forwardIRKfEOT_RNSt16remove_referenceIS2_E4typeE>
 800933c:	4603      	mov	r3, r0
 800933e:	4619      	mov	r1, r3
 8009340:	4620      	mov	r0, r4
 8009342:	f000 f86f 	bl	8009424 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Copy_ctor_baseILb0EJifbS7_SB_EEERKSD_EEvOT0_OT1_ENUlOT_E_clIRKfEENS0_16__variant_cookieESM_>
 8009346:	462b      	mov	r3, r5
 8009348:	4618      	mov	r0, r3
 800934a:	3710      	adds	r7, #16
 800934c:	46bd      	mov	sp, r7
 800934e:	bdb0      	pop	{r4, r5, r7, pc}

08009350 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS1_15_Copy_ctor_baseILb0EJifbS9_SD_EEERKSF_EEvOT0_OT1_EUlOT_E_JRKbEESN_St14__invoke_otherSK_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8009350:	b5b0      	push	{r4, r5, r7, lr}
 8009352:	b084      	sub	sp, #16
 8009354:	af00      	add	r7, sp, #0
 8009356:	7338      	strb	r0, [r7, #12]
 8009358:	60b9      	str	r1, [r7, #8]
 800935a:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800935c:	68b8      	ldr	r0, [r7, #8]
 800935e:	f7ff ff9a 	bl	8009296 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8009362:	4604      	mov	r4, r0
 8009364:	6878      	ldr	r0, [r7, #4]
 8009366:	f7fa fdd9 	bl	8003f1c <_ZSt7forwardIRKbEOT_RNSt16remove_referenceIS2_E4typeE>
 800936a:	4603      	mov	r3, r0
 800936c:	4619      	mov	r1, r3
 800936e:	4620      	mov	r0, r4
 8009370:	f000 f870 	bl	8009454 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Copy_ctor_baseILb0EJifbS7_SB_EEERKSD_EEvOT0_OT1_ENUlOT_E_clIRKbEENS0_16__variant_cookieESM_>
 8009374:	462b      	mov	r3, r5
 8009376:	4618      	mov	r0, r3
 8009378:	3710      	adds	r7, #16
 800937a:	46bd      	mov	sp, r7
 800937c:	bdb0      	pop	{r4, r5, r7, pc}

0800937e <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS1_15_Copy_ctor_baseILb0EJifbS9_SD_EEERKSF_EEvOT0_OT1_EUlOT_E_JRKS9_EESN_St14__invoke_otherSK_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800937e:	b5b0      	push	{r4, r5, r7, lr}
 8009380:	b084      	sub	sp, #16
 8009382:	af00      	add	r7, sp, #0
 8009384:	7338      	strb	r0, [r7, #12]
 8009386:	60b9      	str	r1, [r7, #8]
 8009388:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800938a:	68b8      	ldr	r0, [r7, #8]
 800938c:	f7ff ff83 	bl	8009296 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8009390:	4604      	mov	r4, r0
 8009392:	6878      	ldr	r0, [r7, #4]
 8009394:	f7fa fe02 	bl	8003f9c <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 8009398:	4603      	mov	r3, r0
 800939a:	4619      	mov	r1, r3
 800939c:	4620      	mov	r0, r4
 800939e:	f000 f871 	bl	8009484 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Copy_ctor_baseILb0EJifbS7_SB_EEERKSD_EEvOT0_OT1_ENUlOT_E_clIRKS7_EENS0_16__variant_cookieESM_>
 80093a2:	462b      	mov	r3, r5
 80093a4:	4618      	mov	r0, r3
 80093a6:	3710      	adds	r7, #16
 80093a8:	46bd      	mov	sp, r7
 80093aa:	bdb0      	pop	{r4, r5, r7, pc}

080093ac <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS1_15_Copy_ctor_baseILb0EJifbS9_SD_EEERKSF_EEvOT0_OT1_EUlOT_E_JRKSD_EESN_St14__invoke_otherSK_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 80093ac:	b5b0      	push	{r4, r5, r7, lr}
 80093ae:	b084      	sub	sp, #16
 80093b0:	af00      	add	r7, sp, #0
 80093b2:	7338      	strb	r0, [r7, #12]
 80093b4:	60b9      	str	r1, [r7, #8]
 80093b6:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 80093b8:	68b8      	ldr	r0, [r7, #8]
 80093ba:	f7ff ff6c 	bl	8009296 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 80093be:	4604      	mov	r4, r0
 80093c0:	6878      	ldr	r0, [r7, #4]
 80093c2:	f7fa fe2b 	bl	800401c <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>
 80093c6:	4603      	mov	r3, r0
 80093c8:	4619      	mov	r1, r3
 80093ca:	4620      	mov	r0, r4
 80093cc:	f000 f872 	bl	80094b4 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Copy_ctor_baseILb0EJifbS7_SB_EEERKSD_EEvOT0_OT1_ENUlOT_E_clIRKSB_EENS0_16__variant_cookieESM_>
 80093d0:	462b      	mov	r3, r5
 80093d2:	4618      	mov	r0, r3
 80093d4:	3710      	adds	r7, #16
 80093d6:	46bd      	mov	sp, r7
 80093d8:	bdb0      	pop	{r4, r5, r7, pc}

080093da <_ZNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1Ev>:
 80093da:	b580      	push	{r7, lr}
 80093dc:	b082      	sub	sp, #8
 80093de:	af00      	add	r7, sp, #0
 80093e0:	6078      	str	r0, [r7, #4]
 80093e2:	687b      	ldr	r3, [r7, #4]
 80093e4:	4618      	mov	r0, r3
 80093e6:	f000 f87d 	bl	80094e4 <_ZNSt8__detail9__variant15_Variadic_unionIJSt6vectorI6SymbolSaIS3_EEEEC1Ev>
 80093ea:	687b      	ldr	r3, [r7, #4]
 80093ec:	4618      	mov	r0, r3
 80093ee:	3708      	adds	r7, #8
 80093f0:	46bd      	mov	sp, r7
 80093f2:	bd80      	pop	{r7, pc}

080093f4 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Copy_ctor_baseILb0EJifbS7_SB_EEERKSD_EEvOT0_OT1_ENUlOT_E_clIRKiEENS0_16__variant_cookieESM_>:
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 80093f4:	b5b0      	push	{r4, r5, r7, lr}
 80093f6:	b082      	sub	sp, #8
 80093f8:	af00      	add	r7, sp, #0
 80093fa:	6078      	str	r0, [r7, #4]
 80093fc:	6039      	str	r1, [r7, #0]
 80093fe:	687b      	ldr	r3, [r7, #4]
 8009400:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 8009402:	4618      	mov	r0, r3
 8009404:	f000 f879 	bl	80094fa <_ZSt7forwardIRNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8009408:	4604      	mov	r4, r0
 800940a:	6838      	ldr	r0, [r7, #0]
 800940c:	f7fa fd1e 	bl	8003e4c <_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE>
 8009410:	4603      	mov	r3, r0
 8009412:	4619      	mov	r1, r3
 8009414:	4620      	mov	r0, r4
 8009416:	f000 f87b 	bl	8009510 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEERKiEEvOT_OT0_>
	  return {};
 800941a:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 800941c:	4618      	mov	r0, r3
 800941e:	3708      	adds	r7, #8
 8009420:	46bd      	mov	sp, r7
 8009422:	bdb0      	pop	{r4, r5, r7, pc}

08009424 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Copy_ctor_baseILb0EJifbS7_SB_EEERKSD_EEvOT0_OT1_ENUlOT_E_clIRKfEENS0_16__variant_cookieESM_>:
 8009424:	b5b0      	push	{r4, r5, r7, lr}
 8009426:	b082      	sub	sp, #8
 8009428:	af00      	add	r7, sp, #0
 800942a:	6078      	str	r0, [r7, #4]
 800942c:	6039      	str	r1, [r7, #0]
 800942e:	687b      	ldr	r3, [r7, #4]
 8009430:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 8009432:	4618      	mov	r0, r3
 8009434:	f000 f861 	bl	80094fa <_ZSt7forwardIRNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8009438:	4604      	mov	r4, r0
 800943a:	6838      	ldr	r0, [r7, #0]
 800943c:	f7fa fd3a 	bl	8003eb4 <_ZSt7forwardIRKfEOT_RNSt16remove_referenceIS2_E4typeE>
 8009440:	4603      	mov	r3, r0
 8009442:	4619      	mov	r1, r3
 8009444:	4620      	mov	r0, r4
 8009446:	f000 f87d 	bl	8009544 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEERKfEEvOT_OT0_>
	  return {};
 800944a:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 800944c:	4618      	mov	r0, r3
 800944e:	3708      	adds	r7, #8
 8009450:	46bd      	mov	sp, r7
 8009452:	bdb0      	pop	{r4, r5, r7, pc}

08009454 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Copy_ctor_baseILb0EJifbS7_SB_EEERKSD_EEvOT0_OT1_ENUlOT_E_clIRKbEENS0_16__variant_cookieESM_>:
 8009454:	b5b0      	push	{r4, r5, r7, lr}
 8009456:	b082      	sub	sp, #8
 8009458:	af00      	add	r7, sp, #0
 800945a:	6078      	str	r0, [r7, #4]
 800945c:	6039      	str	r1, [r7, #0]
 800945e:	687b      	ldr	r3, [r7, #4]
 8009460:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 8009462:	4618      	mov	r0, r3
 8009464:	f000 f849 	bl	80094fa <_ZSt7forwardIRNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8009468:	4604      	mov	r4, r0
 800946a:	6838      	ldr	r0, [r7, #0]
 800946c:	f7fa fd56 	bl	8003f1c <_ZSt7forwardIRKbEOT_RNSt16remove_referenceIS2_E4typeE>
 8009470:	4603      	mov	r3, r0
 8009472:	4619      	mov	r1, r3
 8009474:	4620      	mov	r0, r4
 8009476:	f000 f87f 	bl	8009578 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEERKbEEvOT_OT0_>
	  return {};
 800947a:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 800947c:	4618      	mov	r0, r3
 800947e:	3708      	adds	r7, #8
 8009480:	46bd      	mov	sp, r7
 8009482:	bdb0      	pop	{r4, r5, r7, pc}

08009484 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Copy_ctor_baseILb0EJifbS7_SB_EEERKSD_EEvOT0_OT1_ENUlOT_E_clIRKS7_EENS0_16__variant_cookieESM_>:
 8009484:	b5b0      	push	{r4, r5, r7, lr}
 8009486:	b082      	sub	sp, #8
 8009488:	af00      	add	r7, sp, #0
 800948a:	6078      	str	r0, [r7, #4]
 800948c:	6039      	str	r1, [r7, #0]
 800948e:	687b      	ldr	r3, [r7, #4]
 8009490:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 8009492:	4618      	mov	r0, r3
 8009494:	f000 f831 	bl	80094fa <_ZSt7forwardIRNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8009498:	4604      	mov	r4, r0
 800949a:	6838      	ldr	r0, [r7, #0]
 800949c:	f7fa fd7e 	bl	8003f9c <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 80094a0:	4603      	mov	r3, r0
 80094a2:	4619      	mov	r1, r3
 80094a4:	4620      	mov	r0, r4
 80094a6:	f000 f882 	bl	80095ae <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEERKS8_EEvOT_OT0_>
	  return {};
 80094aa:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 80094ac:	4618      	mov	r0, r3
 80094ae:	3708      	adds	r7, #8
 80094b0:	46bd      	mov	sp, r7
 80094b2:	bdb0      	pop	{r4, r5, r7, pc}

080094b4 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Copy_ctor_baseILb0EJifbS7_SB_EEERKSD_EEvOT0_OT1_ENUlOT_E_clIRKSB_EENS0_16__variant_cookieESM_>:
 80094b4:	b5b0      	push	{r4, r5, r7, lr}
 80094b6:	b082      	sub	sp, #8
 80094b8:	af00      	add	r7, sp, #0
 80094ba:	6078      	str	r0, [r7, #4]
 80094bc:	6039      	str	r1, [r7, #0]
 80094be:	687b      	ldr	r3, [r7, #4]
 80094c0:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 80094c2:	4618      	mov	r0, r3
 80094c4:	f000 f819 	bl	80094fa <_ZSt7forwardIRNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 80094c8:	4604      	mov	r4, r0
 80094ca:	6838      	ldr	r0, [r7, #0]
 80094cc:	f7fa fda6 	bl	800401c <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>
 80094d0:	4603      	mov	r3, r0
 80094d2:	4619      	mov	r1, r3
 80094d4:	4620      	mov	r0, r4
 80094d6:	f000 f886 	bl	80095e6 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEERKSC_EEvOT_OT0_>
	  return {};
 80094da:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 80094dc:	4618      	mov	r0, r3
 80094de:	3708      	adds	r7, #8
 80094e0:	46bd      	mov	sp, r7
 80094e2:	bdb0      	pop	{r4, r5, r7, pc}

080094e4 <_ZNSt8__detail9__variant15_Variadic_unionIJSt6vectorI6SymbolSaIS3_EEEEC1Ev>:
      constexpr _Variadic_union() : _M_rest() { }
 80094e4:	b480      	push	{r7}
 80094e6:	b083      	sub	sp, #12
 80094e8:	af00      	add	r7, sp, #0
 80094ea:	6078      	str	r0, [r7, #4]
 80094ec:	687b      	ldr	r3, [r7, #4]
 80094ee:	4618      	mov	r0, r3
 80094f0:	370c      	adds	r7, #12
 80094f2:	46bd      	mov	sp, r7
 80094f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80094f8:	4770      	bx	lr

080094fa <_ZSt7forwardIRNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80094fa:	b480      	push	{r7}
 80094fc:	b083      	sub	sp, #12
 80094fe:	af00      	add	r7, sp, #0
 8009500:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8009502:	687b      	ldr	r3, [r7, #4]
 8009504:	4618      	mov	r0, r3
 8009506:	370c      	adds	r7, #12
 8009508:	46bd      	mov	sp, r7
 800950a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800950e:	4770      	bx	lr

08009510 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEERKiEEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 8009510:	b590      	push	{r4, r7, lr}
 8009512:	b085      	sub	sp, #20
 8009514:	af00      	add	r7, sp, #0
 8009516:	6078      	str	r0, [r7, #4]
 8009518:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 800951a:	687b      	ldr	r3, [r7, #4]
 800951c:	4618      	mov	r0, r3
 800951e:	f7fd f9ab 	bl	8006878 <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEPT_RSE_>
 8009522:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 8009524:	6838      	ldr	r0, [r7, #0]
 8009526:	f7fa fc91 	bl	8003e4c <_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE>
 800952a:	4603      	mov	r3, r0
        ::new (__storage)
 800952c:	681c      	ldr	r4, [r3, #0]
 800952e:	68fb      	ldr	r3, [r7, #12]
 8009530:	4619      	mov	r1, r3
 8009532:	2004      	movs	r0, #4
 8009534:	f7f7 fd91 	bl	800105a <_ZnwjPv>
 8009538:	4603      	mov	r3, r0
 800953a:	601c      	str	r4, [r3, #0]
    }
 800953c:	bf00      	nop
 800953e:	3714      	adds	r7, #20
 8009540:	46bd      	mov	sp, r7
 8009542:	bd90      	pop	{r4, r7, pc}

08009544 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEERKfEEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 8009544:	b590      	push	{r4, r7, lr}
 8009546:	b085      	sub	sp, #20
 8009548:	af00      	add	r7, sp, #0
 800954a:	6078      	str	r0, [r7, #4]
 800954c:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 800954e:	687b      	ldr	r3, [r7, #4]
 8009550:	4618      	mov	r0, r3
 8009552:	f7fd f991 	bl	8006878 <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEPT_RSE_>
 8009556:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 8009558:	6838      	ldr	r0, [r7, #0]
 800955a:	f7fa fcab 	bl	8003eb4 <_ZSt7forwardIRKfEOT_RNSt16remove_referenceIS2_E4typeE>
 800955e:	4603      	mov	r3, r0
        ::new (__storage)
 8009560:	681c      	ldr	r4, [r3, #0]
 8009562:	68fb      	ldr	r3, [r7, #12]
 8009564:	4619      	mov	r1, r3
 8009566:	2004      	movs	r0, #4
 8009568:	f7f7 fd77 	bl	800105a <_ZnwjPv>
 800956c:	4603      	mov	r3, r0
 800956e:	601c      	str	r4, [r3, #0]
    }
 8009570:	bf00      	nop
 8009572:	3714      	adds	r7, #20
 8009574:	46bd      	mov	sp, r7
 8009576:	bd90      	pop	{r4, r7, pc}

08009578 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEERKbEEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 8009578:	b590      	push	{r4, r7, lr}
 800957a:	b085      	sub	sp, #20
 800957c:	af00      	add	r7, sp, #0
 800957e:	6078      	str	r0, [r7, #4]
 8009580:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 8009582:	687b      	ldr	r3, [r7, #4]
 8009584:	4618      	mov	r0, r3
 8009586:	f7fd f977 	bl	8006878 <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEPT_RSE_>
 800958a:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 800958c:	6838      	ldr	r0, [r7, #0]
 800958e:	f7fa fcc5 	bl	8003f1c <_ZSt7forwardIRKbEOT_RNSt16remove_referenceIS2_E4typeE>
 8009592:	4603      	mov	r3, r0
        ::new (__storage)
 8009594:	781c      	ldrb	r4, [r3, #0]
 8009596:	68fb      	ldr	r3, [r7, #12]
 8009598:	4619      	mov	r1, r3
 800959a:	2001      	movs	r0, #1
 800959c:	f7f7 fd5d 	bl	800105a <_ZnwjPv>
 80095a0:	4603      	mov	r3, r0
 80095a2:	4622      	mov	r2, r4
 80095a4:	701a      	strb	r2, [r3, #0]
    }
 80095a6:	bf00      	nop
 80095a8:	3714      	adds	r7, #20
 80095aa:	46bd      	mov	sp, r7
 80095ac:	bd90      	pop	{r4, r7, pc}

080095ae <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEERKS8_EEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 80095ae:	b590      	push	{r4, r7, lr}
 80095b0:	b085      	sub	sp, #20
 80095b2:	af00      	add	r7, sp, #0
 80095b4:	6078      	str	r0, [r7, #4]
 80095b6:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 80095b8:	687b      	ldr	r3, [r7, #4]
 80095ba:	4618      	mov	r0, r3
 80095bc:	f7fd f95c 	bl	8006878 <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEPT_RSE_>
 80095c0:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 80095c2:	6838      	ldr	r0, [r7, #0]
 80095c4:	f7fa fcea 	bl	8003f9c <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 80095c8:	4604      	mov	r4, r0
        ::new (__storage)
 80095ca:	68fb      	ldr	r3, [r7, #12]
 80095cc:	4619      	mov	r1, r3
 80095ce:	2018      	movs	r0, #24
 80095d0:	f7f7 fd43 	bl	800105a <_ZnwjPv>
 80095d4:	4603      	mov	r3, r0
 80095d6:	4621      	mov	r1, r4
 80095d8:	4618      	mov	r0, r3
 80095da:	f019 fd87 	bl	80230ec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
    }
 80095de:	bf00      	nop
 80095e0:	3714      	adds	r7, #20
 80095e2:	46bd      	mov	sp, r7
 80095e4:	bd90      	pop	{r4, r7, pc}

080095e6 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEERKSC_EEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 80095e6:	b590      	push	{r4, r7, lr}
 80095e8:	b085      	sub	sp, #20
 80095ea:	af00      	add	r7, sp, #0
 80095ec:	6078      	str	r0, [r7, #4]
 80095ee:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 80095f0:	687b      	ldr	r3, [r7, #4]
 80095f2:	4618      	mov	r0, r3
 80095f4:	f7fd f940 	bl	8006878 <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEPT_RSE_>
 80095f8:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 80095fa:	6838      	ldr	r0, [r7, #0]
 80095fc:	f7fa fd0e 	bl	800401c <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>
 8009600:	4604      	mov	r4, r0
        ::new (__storage)
 8009602:	68fb      	ldr	r3, [r7, #12]
 8009604:	4619      	mov	r1, r3
 8009606:	200c      	movs	r0, #12
 8009608:	f7f7 fd27 	bl	800105a <_ZnwjPv>
 800960c:	4603      	mov	r3, r0
 800960e:	4621      	mov	r1, r4
 8009610:	4618      	mov	r0, r3
 8009612:	f7fe fbf2 	bl	8007dfa <_ZNSt6vectorI6SymbolSaIS0_EEC1ERKS2_>
    }
 8009616:	bf00      	nop
 8009618:	3714      	adds	r7, #20
 800961a:	46bd      	mov	sp, r7
 800961c:	bd90      	pop	{r4, r7, pc}

0800961e <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>:
      /**
       *  The dtor only erases the elements, and note that if the elements
       *  themselves are pointers, the pointed-to memory is not touched in any
       *  way.  Managing the pointer is the user's responsibility.
       */
      ~map() = default;
 800961e:	b580      	push	{r7, lr}
 8009620:	b082      	sub	sp, #8
 8009622:	af00      	add	r7, sp, #0
 8009624:	6078      	str	r0, [r7, #4]
 8009626:	687b      	ldr	r3, [r7, #4]
 8009628:	4618      	mov	r0, r3
 800962a:	f7f9 f9f8 	bl	8002a1e <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EED1Ev>
 800962e:	687b      	ldr	r3, [r7, #4]
 8009630:	4618      	mov	r0, r3
 8009632:	3708      	adds	r7, #8
 8009634:	46bd      	mov	sp, r7
 8009636:	bd80      	pop	{r7, pc}

08009638 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>:
 8009638:	b580      	push	{r7, lr}
 800963a:	b082      	sub	sp, #8
 800963c:	af00      	add	r7, sp, #0
 800963e:	6078      	str	r0, [r7, #4]
 8009640:	687b      	ldr	r3, [r7, #4]
 8009642:	4618      	mov	r0, r3
 8009644:	f7f9 f93b 	bl	80028be <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EED1Ev>
 8009648:	687b      	ldr	r3, [r7, #4]
 800964a:	4618      	mov	r0, r3
 800964c:	3708      	adds	r7, #8
 800964e:	46bd      	mov	sp, r7
 8009650:	bd80      	pop	{r7, pc}

08009652 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>:
 8009652:	b580      	push	{r7, lr}
 8009654:	b082      	sub	sp, #8
 8009656:	af00      	add	r7, sp, #0
 8009658:	6078      	str	r0, [r7, #4]
 800965a:	687b      	ldr	r3, [r7, #4]
 800965c:	4618      	mov	r0, r3
 800965e:	f7f9 f881 	bl	8002764 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EED1Ev>
 8009662:	687b      	ldr	r3, [r7, #4]
 8009664:	4618      	mov	r0, r3
 8009666:	3708      	adds	r7, #8
 8009668:	46bd      	mov	sp, r7
 800966a:	bd80      	pop	{r7, pc}

0800966c <_Z41__static_initialization_and_destruction_0ii>:
 800966c:	b590      	push	{r4, r7, lr}
 800966e:	b0e7      	sub	sp, #412	; 0x19c
 8009670:	af02      	add	r7, sp, #8
 8009672:	1d3b      	adds	r3, r7, #4
 8009674:	6018      	str	r0, [r3, #0]
 8009676:	463b      	mov	r3, r7
 8009678:	6019      	str	r1, [r3, #0]
 800967a:	1d3b      	adds	r3, r7, #4
 800967c:	681b      	ldr	r3, [r3, #0]
 800967e:	2b01      	cmp	r3, #1
 8009680:	f040 819d 	bne.w	80099be <_Z41__static_initialization_and_destruction_0ii+0x352>
 8009684:	463b      	mov	r3, r7
 8009686:	681b      	ldr	r3, [r3, #0]
 8009688:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800968c:	4293      	cmp	r3, r2
 800968e:	f040 8196 	bne.w	80099be <_Z41__static_initialization_and_destruction_0ii+0x352>
	{'^', TOKEN_POWER},
	{'%', TOKEN_MODULO},
	{'(', TOKEN_LEFT_BRACKET},
	{')', TOKEN_RIGHT_BRACKET},
	{'\0', TOKEN_END_OF_FILE},
};
 8009692:	f107 0314 	add.w	r3, r7, #20
 8009696:	4618      	mov	r0, r3
 8009698:	2322      	movs	r3, #34	; 0x22
 800969a:	461a      	mov	r2, r3
 800969c:	2100      	movs	r1, #0
 800969e:	f01a fda1 	bl	80241e4 <memset>
 80096a2:	f107 0314 	add.w	r3, r7, #20
 80096a6:	223a      	movs	r2, #58	; 0x3a
 80096a8:	701a      	strb	r2, [r3, #0]
 80096aa:	f107 0314 	add.w	r3, r7, #20
 80096ae:	2201      	movs	r2, #1
 80096b0:	705a      	strb	r2, [r3, #1]
 80096b2:	f107 0314 	add.w	r3, r7, #20
 80096b6:	220a      	movs	r2, #10
 80096b8:	709a      	strb	r2, [r3, #2]
 80096ba:	f107 0314 	add.w	r3, r7, #20
 80096be:	220a      	movs	r2, #10
 80096c0:	70da      	strb	r2, [r3, #3]
 80096c2:	f107 0314 	add.w	r3, r7, #20
 80096c6:	222c      	movs	r2, #44	; 0x2c
 80096c8:	711a      	strb	r2, [r3, #4]
 80096ca:	f107 0314 	add.w	r3, r7, #20
 80096ce:	220c      	movs	r2, #12
 80096d0:	715a      	strb	r2, [r3, #5]
 80096d2:	f107 0314 	add.w	r3, r7, #20
 80096d6:	222e      	movs	r2, #46	; 0x2e
 80096d8:	719a      	strb	r2, [r3, #6]
 80096da:	f107 0314 	add.w	r3, r7, #20
 80096de:	220b      	movs	r2, #11
 80096e0:	71da      	strb	r2, [r3, #7]
 80096e2:	f107 0314 	add.w	r3, r7, #20
 80096e6:	225b      	movs	r2, #91	; 0x5b
 80096e8:	721a      	strb	r2, [r3, #8]
 80096ea:	f107 0314 	add.w	r3, r7, #20
 80096ee:	220d      	movs	r2, #13
 80096f0:	725a      	strb	r2, [r3, #9]
 80096f2:	f107 0314 	add.w	r3, r7, #20
 80096f6:	225d      	movs	r2, #93	; 0x5d
 80096f8:	729a      	strb	r2, [r3, #10]
 80096fa:	f107 0314 	add.w	r3, r7, #20
 80096fe:	220e      	movs	r2, #14
 8009700:	72da      	strb	r2, [r3, #11]
 8009702:	f107 0314 	add.w	r3, r7, #20
 8009706:	227c      	movs	r2, #124	; 0x7c
 8009708:	731a      	strb	r2, [r3, #12]
 800970a:	f107 0314 	add.w	r3, r7, #20
 800970e:	2215      	movs	r2, #21
 8009710:	735a      	strb	r2, [r3, #13]
 8009712:	f107 0314 	add.w	r3, r7, #20
 8009716:	2226      	movs	r2, #38	; 0x26
 8009718:	739a      	strb	r2, [r3, #14]
 800971a:	f107 0314 	add.w	r3, r7, #20
 800971e:	2216      	movs	r2, #22
 8009720:	73da      	strb	r2, [r3, #15]
 8009722:	f107 0314 	add.w	r3, r7, #20
 8009726:	222b      	movs	r2, #43	; 0x2b
 8009728:	741a      	strb	r2, [r3, #16]
 800972a:	f107 0314 	add.w	r3, r7, #20
 800972e:	221f      	movs	r2, #31
 8009730:	745a      	strb	r2, [r3, #17]
 8009732:	f107 0314 	add.w	r3, r7, #20
 8009736:	222d      	movs	r2, #45	; 0x2d
 8009738:	749a      	strb	r2, [r3, #18]
 800973a:	f107 0314 	add.w	r3, r7, #20
 800973e:	2220      	movs	r2, #32
 8009740:	74da      	strb	r2, [r3, #19]
 8009742:	f107 0314 	add.w	r3, r7, #20
 8009746:	222a      	movs	r2, #42	; 0x2a
 8009748:	751a      	strb	r2, [r3, #20]
 800974a:	f107 0314 	add.w	r3, r7, #20
 800974e:	2221      	movs	r2, #33	; 0x21
 8009750:	755a      	strb	r2, [r3, #21]
 8009752:	f107 0314 	add.w	r3, r7, #20
 8009756:	222f      	movs	r2, #47	; 0x2f
 8009758:	759a      	strb	r2, [r3, #22]
 800975a:	f107 0314 	add.w	r3, r7, #20
 800975e:	2222      	movs	r2, #34	; 0x22
 8009760:	75da      	strb	r2, [r3, #23]
 8009762:	f107 0314 	add.w	r3, r7, #20
 8009766:	225e      	movs	r2, #94	; 0x5e
 8009768:	761a      	strb	r2, [r3, #24]
 800976a:	f107 0314 	add.w	r3, r7, #20
 800976e:	2223      	movs	r2, #35	; 0x23
 8009770:	765a      	strb	r2, [r3, #25]
 8009772:	f107 0314 	add.w	r3, r7, #20
 8009776:	2225      	movs	r2, #37	; 0x25
 8009778:	769a      	strb	r2, [r3, #26]
 800977a:	f107 0314 	add.w	r3, r7, #20
 800977e:	2224      	movs	r2, #36	; 0x24
 8009780:	76da      	strb	r2, [r3, #27]
 8009782:	f107 0314 	add.w	r3, r7, #20
 8009786:	2228      	movs	r2, #40	; 0x28
 8009788:	771a      	strb	r2, [r3, #28]
 800978a:	f107 0314 	add.w	r3, r7, #20
 800978e:	2226      	movs	r2, #38	; 0x26
 8009790:	775a      	strb	r2, [r3, #29]
 8009792:	f107 0314 	add.w	r3, r7, #20
 8009796:	2229      	movs	r2, #41	; 0x29
 8009798:	779a      	strb	r2, [r3, #30]
 800979a:	f107 0314 	add.w	r3, r7, #20
 800979e:	2227      	movs	r2, #39	; 0x27
 80097a0:	77da      	strb	r2, [r3, #31]
 80097a2:	f107 0314 	add.w	r3, r7, #20
 80097a6:	2225      	movs	r2, #37	; 0x25
 80097a8:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 80097ac:	f107 030c 	add.w	r3, r7, #12
 80097b0:	f107 0214 	add.w	r2, r7, #20
 80097b4:	601a      	str	r2, [r3, #0]
 80097b6:	f107 030c 	add.w	r3, r7, #12
 80097ba:	2211      	movs	r2, #17
 80097bc:	605a      	str	r2, [r3, #4]
 80097be:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 80097c2:	4618      	mov	r0, r3
 80097c4:	f7f8 f994 	bl	8001af0 <_ZNSaISt4pairIKc10token_typeEEC1Ev>
 80097c8:	f107 0138 	add.w	r1, r7, #56	; 0x38
 80097cc:	f107 020c 	add.w	r2, r7, #12
 80097d0:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 80097d4:	9300      	str	r3, [sp, #0]
 80097d6:	460b      	mov	r3, r1
 80097d8:	ca06      	ldmia	r2, {r1, r2}
 80097da:	4885      	ldr	r0, [pc, #532]	; (80099f0 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 80097dc:	f7f8 f9a0 	bl	8001b20 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 80097e0:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 80097e4:	4618      	mov	r0, r3
 80097e6:	f7f8 f98f 	bl	8001b08 <_ZNSaISt4pairIKc10token_typeEED1Ev>

static const std::map<std::string, token_type> token_strings
{
	{"true", TOKEN_TRUE},
 80097ea:	2305      	movs	r3, #5
 80097ec:	f887 3162 	strb.w	r3, [r7, #354]	; 0x162
	{"if", TOKEN_IF},
	{"elseif", TOKEN_ELSEIF},
	{"else", TOKEN_ELSE},
	{"while", TOKEN_WHILE},
	{"end", TOKEN_END},
};
 80097f0:	f507 72b1 	add.w	r2, r7, #354	; 0x162
 80097f4:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80097f8:	497e      	ldr	r1, [pc, #504]	; (80099f4 <_Z41__static_initialization_and_destruction_0ii+0x388>)
 80097fa:	4618      	mov	r0, r3
 80097fc:	f7f7 fc7c 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"false", TOKEN_FALSE},
 8009800:	2306      	movs	r3, #6
 8009802:	f887 3163 	strb.w	r3, [r7, #355]	; 0x163
};
 8009806:	f207 1263 	addw	r2, r7, #355	; 0x163
 800980a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800980e:	331c      	adds	r3, #28
 8009810:	4979      	ldr	r1, [pc, #484]	; (80099f8 <_Z41__static_initialization_and_destruction_0ii+0x38c>)
 8009812:	4618      	mov	r0, r3
 8009814:	f7f7 fc98 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"setup", TOKEN_SETUP},
 8009818:	2307      	movs	r3, #7
 800981a:	f887 3164 	strb.w	r3, [r7, #356]	; 0x164
};
 800981e:	f507 72b2 	add.w	r2, r7, #356	; 0x164
 8009822:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8009826:	3338      	adds	r3, #56	; 0x38
 8009828:	4974      	ldr	r1, [pc, #464]	; (80099fc <_Z41__static_initialization_and_destruction_0ii+0x390>)
 800982a:	4618      	mov	r0, r3
 800982c:	f7f7 fc8c 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"loop", TOKEN_LOOP},
 8009830:	2308      	movs	r3, #8
 8009832:	f887 3165 	strb.w	r3, [r7, #357]	; 0x165
};
 8009836:	f207 1265 	addw	r2, r7, #357	; 0x165
 800983a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800983e:	3354      	adds	r3, #84	; 0x54
 8009840:	496f      	ldr	r1, [pc, #444]	; (8009a00 <_Z41__static_initialization_and_destruction_0ii+0x394>)
 8009842:	4618      	mov	r0, r3
 8009844:	f7f7 fc58 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"finish", TOKEN_FINISH},
 8009848:	2309      	movs	r3, #9
 800984a:	f887 3166 	strb.w	r3, [r7, #358]	; 0x166
};
 800984e:	f507 72b3 	add.w	r2, r7, #358	; 0x166
 8009852:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8009856:	3370      	adds	r3, #112	; 0x70
 8009858:	496a      	ldr	r1, [pc, #424]	; (8009a04 <_Z41__static_initialization_and_destruction_0ii+0x398>)
 800985a:	4618      	mov	r0, r3
 800985c:	f7f7 fc9c 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"if", TOKEN_IF},
 8009860:	2310      	movs	r3, #16
 8009862:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167
};
 8009866:	f207 1267 	addw	r2, r7, #359	; 0x167
 800986a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800986e:	338c      	adds	r3, #140	; 0x8c
 8009870:	4965      	ldr	r1, [pc, #404]	; (8009a08 <_Z41__static_initialization_and_destruction_0ii+0x39c>)
 8009872:	4618      	mov	r0, r3
 8009874:	f7f7 fcb8 	bl	80011e8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>
	{"elseif", TOKEN_ELSEIF},
 8009878:	2311      	movs	r3, #17
 800987a:	f887 3168 	strb.w	r3, [r7, #360]	; 0x168
};
 800987e:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 8009882:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8009886:	33a8      	adds	r3, #168	; 0xa8
 8009888:	4960      	ldr	r1, [pc, #384]	; (8009a0c <_Z41__static_initialization_and_destruction_0ii+0x3a0>)
 800988a:	4618      	mov	r0, r3
 800988c:	f7f7 fc84 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"else", TOKEN_ELSE},
 8009890:	2312      	movs	r3, #18
 8009892:	f887 3169 	strb.w	r3, [r7, #361]	; 0x169
};
 8009896:	f207 1269 	addw	r2, r7, #361	; 0x169
 800989a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800989e:	33c4      	adds	r3, #196	; 0xc4
 80098a0:	495b      	ldr	r1, [pc, #364]	; (8009a10 <_Z41__static_initialization_and_destruction_0ii+0x3a4>)
 80098a2:	4618      	mov	r0, r3
 80098a4:	f7f7 fc28 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"while", TOKEN_WHILE},
 80098a8:	2313      	movs	r3, #19
 80098aa:	f887 316a 	strb.w	r3, [r7, #362]	; 0x16a
};
 80098ae:	f507 72b5 	add.w	r2, r7, #362	; 0x16a
 80098b2:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80098b6:	33e0      	adds	r3, #224	; 0xe0
 80098b8:	4956      	ldr	r1, [pc, #344]	; (8009a14 <_Z41__static_initialization_and_destruction_0ii+0x3a8>)
 80098ba:	4618      	mov	r0, r3
 80098bc:	f7f7 fc44 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"end", TOKEN_END},
 80098c0:	2314      	movs	r3, #20
 80098c2:	f887 316b 	strb.w	r3, [r7, #363]	; 0x16b
};
 80098c6:	f207 126b 	addw	r2, r7, #363	; 0x16b
 80098ca:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80098ce:	33fc      	adds	r3, #252	; 0xfc
 80098d0:	4951      	ldr	r1, [pc, #324]	; (8009a18 <_Z41__static_initialization_and_destruction_0ii+0x3ac>)
 80098d2:	4618      	mov	r0, r3
 80098d4:	f7f7 fcb0 	bl	8001238 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>
 80098d8:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80098dc:	f107 0248 	add.w	r2, r7, #72	; 0x48
 80098e0:	601a      	str	r2, [r3, #0]
 80098e2:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80098e6:	220a      	movs	r2, #10
 80098e8:	605a      	str	r2, [r3, #4]
 80098ea:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 80098ee:	4618      	mov	r0, r3
 80098f0:	f7f8 f9a3 	bl	8001c3a <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 80098f4:	f507 71b6 	add.w	r1, r7, #364	; 0x16c
 80098f8:	f107 0240 	add.w	r2, r7, #64	; 0x40
 80098fc:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8009900:	9300      	str	r3, [sp, #0]
 8009902:	460b      	mov	r3, r1
 8009904:	ca06      	ldmia	r2, {r1, r2}
 8009906:	4845      	ldr	r0, [pc, #276]	; (8009a1c <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 8009908:	f7f8 f9af 	bl	8001c6a <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>
 800990c:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8009910:	4618      	mov	r0, r3
 8009912:	f7f8 f99e 	bl	8001c52 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 8009916:	f107 0448 	add.w	r4, r7, #72	; 0x48
 800991a:	f504 748c 	add.w	r4, r4, #280	; 0x118
 800991e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8009922:	429c      	cmp	r4, r3
 8009924:	d004      	beq.n	8009930 <_Z41__static_initialization_and_destruction_0ii+0x2c4>
 8009926:	3c1c      	subs	r4, #28
 8009928:	4620      	mov	r0, r4
 800992a:	f7f7 fbd8 	bl	80010de <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 800992e:	e7f6      	b.n	800991e <_Z41__static_initialization_and_destruction_0ii+0x2b2>
{
	{'<', {TOKEN_SMALLER_THAN, TOKEN_SMALLER_OR_EQUAL}},
	{'>', {TOKEN_GREATER_THAN, TOKEN_GREATER_OR_EQUAL}},
	{'=', {TOKEN_ASSIGN, TOKEN_EQUALS}},
	{'!', {TOKEN_EXCLAMATION, TOKEN_NOT_EQUAL}},
};
 8009930:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 8009934:	2200      	movs	r2, #0
 8009936:	601a      	str	r2, [r3, #0]
 8009938:	605a      	str	r2, [r3, #4]
 800993a:	609a      	str	r2, [r3, #8]
 800993c:	233c      	movs	r3, #60	; 0x3c
 800993e:	f887 317c 	strb.w	r3, [r7, #380]	; 0x17c
 8009942:	231b      	movs	r3, #27
 8009944:	f887 317d 	strb.w	r3, [r7, #381]	; 0x17d
 8009948:	231c      	movs	r3, #28
 800994a:	f887 317e 	strb.w	r3, [r7, #382]	; 0x17e
 800994e:	233e      	movs	r3, #62	; 0x3e
 8009950:	f887 317f 	strb.w	r3, [r7, #383]	; 0x17f
 8009954:	2319      	movs	r3, #25
 8009956:	f887 3180 	strb.w	r3, [r7, #384]	; 0x180
 800995a:	231a      	movs	r3, #26
 800995c:	f887 3181 	strb.w	r3, [r7, #385]	; 0x181
 8009960:	233d      	movs	r3, #61	; 0x3d
 8009962:	f887 3182 	strb.w	r3, [r7, #386]	; 0x182
 8009966:	2318      	movs	r3, #24
 8009968:	f887 3183 	strb.w	r3, [r7, #387]	; 0x183
 800996c:	231d      	movs	r3, #29
 800996e:	f887 3184 	strb.w	r3, [r7, #388]	; 0x184
 8009972:	2321      	movs	r3, #33	; 0x21
 8009974:	f887 3185 	strb.w	r3, [r7, #389]	; 0x185
 8009978:	2317      	movs	r3, #23
 800997a:	f887 3186 	strb.w	r3, [r7, #390]	; 0x186
 800997e:	231e      	movs	r3, #30
 8009980:	f887 3187 	strb.w	r3, [r7, #391]	; 0x187
 8009984:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 8009988:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 800998c:	2304      	movs	r3, #4
 800998e:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 8009992:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 8009996:	4618      	mov	r0, r3
 8009998:	f7f8 f997 	bl	8001cca <_ZNSaISt4pairIKc12double_tokenEEC1Ev>
 800999c:	f507 72c4 	add.w	r2, r7, #392	; 0x188
 80099a0:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 80099a4:	9300      	str	r3, [sp, #0]
 80099a6:	4613      	mov	r3, r2
 80099a8:	f507 72ba 	add.w	r2, r7, #372	; 0x174
 80099ac:	ca06      	ldmia	r2, {r1, r2}
 80099ae:	481c      	ldr	r0, [pc, #112]	; (8009a20 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 80099b0:	f7f8 f9a3 	bl	8001cfa <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 80099b4:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 80099b8:	4618      	mov	r0, r3
 80099ba:	f7f8 f992 	bl	8001ce2 <_ZNSaISt4pairIKc12double_tokenEED1Ev>
static const std::map<char, double_token> token_double_chars
 80099be:	1d3b      	adds	r3, r7, #4
 80099c0:	681b      	ldr	r3, [r3, #0]
 80099c2:	2b00      	cmp	r3, #0
 80099c4:	d10e      	bne.n	80099e4 <_Z41__static_initialization_and_destruction_0ii+0x378>
 80099c6:	463b      	mov	r3, r7
 80099c8:	681b      	ldr	r3, [r3, #0]
 80099ca:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80099ce:	4293      	cmp	r3, r2
 80099d0:	d108      	bne.n	80099e4 <_Z41__static_initialization_and_destruction_0ii+0x378>
 80099d2:	4813      	ldr	r0, [pc, #76]	; (8009a20 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 80099d4:	f7ff fe23 	bl	800961e <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>
static const std::map<std::string, token_type> token_strings
 80099d8:	4810      	ldr	r0, [pc, #64]	; (8009a1c <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 80099da:	f7ff fe2d 	bl	8009638 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
static const std::map<char, token_type> token_chars
 80099de:	4804      	ldr	r0, [pc, #16]	; (80099f0 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 80099e0:	f7ff fe37 	bl	8009652 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>
 80099e4:	bf00      	nop
 80099e6:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 80099ea:	46bd      	mov	sp, r7
 80099ec:	bd90      	pop	{r4, r7, pc}
 80099ee:	bf00      	nop
 80099f0:	20000204 	.word	0x20000204
 80099f4:	080275b4 	.word	0x080275b4
 80099f8:	080275bc 	.word	0x080275bc
 80099fc:	080275c4 	.word	0x080275c4
 8009a00:	080275cc 	.word	0x080275cc
 8009a04:	080275d4 	.word	0x080275d4
 8009a08:	080275dc 	.word	0x080275dc
 8009a0c:	080275e0 	.word	0x080275e0
 8009a10:	080275e8 	.word	0x080275e8
 8009a14:	080275f0 	.word	0x080275f0
 8009a18:	080275f8 	.word	0x080275f8
 8009a1c:	2000021c 	.word	0x2000021c
 8009a20:	20000234 	.word	0x20000234

08009a24 <_GLOBAL__sub_I__ZN8ExecutorC2Ev>:
 8009a24:	b580      	push	{r7, lr}
 8009a26:	af00      	add	r7, sp, #0
 8009a28:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8009a2c:	2001      	movs	r0, #1
 8009a2e:	f7ff fe1d 	bl	800966c <_Z41__static_initialization_and_destruction_0ii>
 8009a32:	bd80      	pop	{r7, pc}

08009a34 <_GLOBAL__sub_D__ZN8ExecutorC2Ev>:
 8009a34:	b580      	push	{r7, lr}
 8009a36:	af00      	add	r7, sp, #0
 8009a38:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8009a3c:	2000      	movs	r0, #0
 8009a3e:	f7ff fe15 	bl	800966c <_Z41__static_initialization_and_destruction_0ii>
 8009a42:	bd80      	pop	{r7, pc}

08009a44 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>:
    struct _Copy_ctor_base : _Variant_storage_alias<_Types...>
 8009a44:	b580      	push	{r7, lr}
 8009a46:	b082      	sub	sp, #8
 8009a48:	af00      	add	r7, sp, #0
 8009a4a:	6078      	str	r0, [r7, #4]
 8009a4c:	687b      	ldr	r3, [r7, #4]
 8009a4e:	4618      	mov	r0, r3
 8009a50:	f000 fa21 	bl	8009e96 <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>
 8009a54:	687b      	ldr	r3, [r7, #4]
 8009a56:	4618      	mov	r0, r3
 8009a58:	3708      	adds	r7, #8
 8009a5a:	46bd      	mov	sp, r7
 8009a5c:	bd80      	pop	{r7, pc}

08009a5e <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>:
    struct _Move_ctor_base : _Copy_ctor_alias<_Types...>
 8009a5e:	b580      	push	{r7, lr}
 8009a60:	b082      	sub	sp, #8
 8009a62:	af00      	add	r7, sp, #0
 8009a64:	6078      	str	r0, [r7, #4]
 8009a66:	687b      	ldr	r3, [r7, #4]
 8009a68:	4618      	mov	r0, r3
 8009a6a:	f7ff ffeb 	bl	8009a44 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>
 8009a6e:	687b      	ldr	r3, [r7, #4]
 8009a70:	4618      	mov	r0, r3
 8009a72:	3708      	adds	r7, #8
 8009a74:	46bd      	mov	sp, r7
 8009a76:	bd80      	pop	{r7, pc}

08009a78 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>:
    struct _Copy_assign_base : _Move_ctor_alias<_Types...>
 8009a78:	b580      	push	{r7, lr}
 8009a7a:	b082      	sub	sp, #8
 8009a7c:	af00      	add	r7, sp, #0
 8009a7e:	6078      	str	r0, [r7, #4]
 8009a80:	687b      	ldr	r3, [r7, #4]
 8009a82:	4618      	mov	r0, r3
 8009a84:	f7ff ffeb 	bl	8009a5e <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>
 8009a88:	687b      	ldr	r3, [r7, #4]
 8009a8a:	4618      	mov	r0, r3
 8009a8c:	3708      	adds	r7, #8
 8009a8e:	46bd      	mov	sp, r7
 8009a90:	bd80      	pop	{r7, pc}

08009a92 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>:
    struct _Move_assign_base : _Copy_assign_alias<_Types...>
 8009a92:	b580      	push	{r7, lr}
 8009a94:	b082      	sub	sp, #8
 8009a96:	af00      	add	r7, sp, #0
 8009a98:	6078      	str	r0, [r7, #4]
 8009a9a:	687b      	ldr	r3, [r7, #4]
 8009a9c:	4618      	mov	r0, r3
 8009a9e:	f7ff ffeb 	bl	8009a78 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>
 8009aa2:	687b      	ldr	r3, [r7, #4]
 8009aa4:	4618      	mov	r0, r3
 8009aa6:	3708      	adds	r7, #8
 8009aa8:	46bd      	mov	sp, r7
 8009aaa:	bd80      	pop	{r7, pc}

08009aac <_ZNSt8__detail9__variant13_Variant_baseIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>:
    struct _Variant_base : _Move_assign_alias<_Types...>
 8009aac:	b580      	push	{r7, lr}
 8009aae:	b082      	sub	sp, #8
 8009ab0:	af00      	add	r7, sp, #0
 8009ab2:	6078      	str	r0, [r7, #4]
 8009ab4:	687b      	ldr	r3, [r7, #4]
 8009ab6:	4618      	mov	r0, r3
 8009ab8:	f7ff ffeb 	bl	8009a92 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>
 8009abc:	687b      	ldr	r3, [r7, #4]
 8009abe:	4618      	mov	r0, r3
 8009ac0:	3708      	adds	r7, #8
 8009ac2:	46bd      	mov	sp, r7
 8009ac4:	bd80      	pop	{r7, pc}

08009ac6 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>:
      ~variant() = default;
 8009ac6:	b580      	push	{r7, lr}
 8009ac8:	b082      	sub	sp, #8
 8009aca:	af00      	add	r7, sp, #0
 8009acc:	6078      	str	r0, [r7, #4]
 8009ace:	687b      	ldr	r3, [r7, #4]
 8009ad0:	4618      	mov	r0, r3
 8009ad2:	f7ff ffeb 	bl	8009aac <_ZNSt8__detail9__variant13_Variant_baseIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>
 8009ad6:	687b      	ldr	r3, [r7, #4]
 8009ad8:	4618      	mov	r0, r3
 8009ada:	3708      	adds	r7, #8
 8009adc:	46bd      	mov	sp, r7
 8009ade:	bd80      	pop	{r7, pc}

08009ae0 <_ZN17Primal_expressionD1Ev>:
#include <Expression.h>

Primal_expression::~Primal_expression()
 8009ae0:	b590      	push	{r4, r7, lr}
 8009ae2:	b083      	sub	sp, #12
 8009ae4:	af00      	add	r7, sp, #0
 8009ae6:	6078      	str	r0, [r7, #4]
{
	if(std::holds_alternative<Variable*>(content))
 8009ae8:	687b      	ldr	r3, [r7, #4]
 8009aea:	3304      	adds	r3, #4
 8009aec:	4618      	mov	r0, r3
 8009aee:	f000 f9f1 	bl	8009ed4 <_ZSt17holds_alternativeIP8VariableJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES1_P13Function_callEEbRKSt7variantIJDpT0_EE>
 8009af2:	4603      	mov	r3, r0
 8009af4:	2b00      	cmp	r3, #0
 8009af6:	d010      	beq.n	8009b1a <_ZN17Primal_expressionD1Ev+0x3a>
	{
		delete std::get<Variable*>(content);
 8009af8:	687b      	ldr	r3, [r7, #4]
 8009afa:	3304      	adds	r3, #4
 8009afc:	4618      	mov	r0, r3
 8009afe:	f000 f9fa 	bl	8009ef6 <_ZSt3getIP8VariableJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES1_P13Function_callEERT_RSt7variantIJDpT0_EE>
 8009b02:	4603      	mov	r3, r0
 8009b04:	681c      	ldr	r4, [r3, #0]
 8009b06:	2c00      	cmp	r4, #0
 8009b08:	d01f      	beq.n	8009b4a <_ZN17Primal_expressionD1Ev+0x6a>
 8009b0a:	4620      	mov	r0, r4
 8009b0c:	f00c fd18 	bl	8016540 <_ZN8VariableD1Ev>
 8009b10:	2120      	movs	r1, #32
 8009b12:	4620      	mov	r0, r4
 8009b14:	f018 fe76 	bl	8022804 <_ZdlPvj>
 8009b18:	e017      	b.n	8009b4a <_ZN17Primal_expressionD1Ev+0x6a>
	}
	else if(std::holds_alternative<Function_call*>(content))
 8009b1a:	687b      	ldr	r3, [r7, #4]
 8009b1c:	3304      	adds	r3, #4
 8009b1e:	4618      	mov	r0, r3
 8009b20:	f000 f9f5 	bl	8009f0e <_ZSt17holds_alternativeIP13Function_callJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableS1_EEbRKSt7variantIJDpT0_EE>
 8009b24:	4603      	mov	r3, r0
 8009b26:	2b00      	cmp	r3, #0
 8009b28:	d00f      	beq.n	8009b4a <_ZN17Primal_expressionD1Ev+0x6a>
	{
		delete std::get<Function_call*>(content);
 8009b2a:	687b      	ldr	r3, [r7, #4]
 8009b2c:	3304      	adds	r3, #4
 8009b2e:	4618      	mov	r0, r3
 8009b30:	f000 f9fe 	bl	8009f30 <_ZSt3getIP13Function_callJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableS1_EERT_RSt7variantIJDpT0_EE>
 8009b34:	4603      	mov	r3, r0
 8009b36:	681c      	ldr	r4, [r3, #0]
 8009b38:	2c00      	cmp	r4, #0
 8009b3a:	d006      	beq.n	8009b4a <_ZN17Primal_expressionD1Ev+0x6a>
 8009b3c:	4620      	mov	r0, r4
 8009b3e:	f00c fcbc 	bl	80164ba <_ZN13Function_callD1Ev>
 8009b42:	212c      	movs	r1, #44	; 0x2c
 8009b44:	4620      	mov	r0, r4
 8009b46:	f018 fe5d 	bl	8022804 <_ZdlPvj>
Primal_expression::~Primal_expression()
 8009b4a:	687b      	ldr	r3, [r7, #4]
 8009b4c:	3304      	adds	r3, #4
 8009b4e:	4618      	mov	r0, r3
 8009b50:	f7ff ffb9 	bl	8009ac6 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>
	}
}
 8009b54:	687b      	ldr	r3, [r7, #4]
 8009b56:	4618      	mov	r0, r3
 8009b58:	370c      	adds	r7, #12
 8009b5a:	46bd      	mov	sp, r7
 8009b5c:	bd90      	pop	{r4, r7, pc}

08009b5e <_ZN19Priority_expressionD1Ev>:

Priority_expression::~Priority_expression()
 8009b5e:	b590      	push	{r4, r7, lr}
 8009b60:	b083      	sub	sp, #12
 8009b62:	af00      	add	r7, sp, #0
 8009b64:	6078      	str	r0, [r7, #4]
{
	if(std::holds_alternative<Expression*>(exp))
 8009b66:	687b      	ldr	r3, [r7, #4]
 8009b68:	4618      	mov	r0, r3
 8009b6a:	f000 fa00 	bl	8009f6e <_ZSt17holds_alternativeIP10ExpressionJP17Primal_expressionS1_EEbRKSt7variantIJDpT0_EE>
 8009b6e:	4603      	mov	r3, r0
 8009b70:	2b00      	cmp	r3, #0
 8009b72:	d00f      	beq.n	8009b94 <_ZN19Priority_expressionD1Ev+0x36>
	{
		delete std::get<Expression*>(exp);
 8009b74:	687b      	ldr	r3, [r7, #4]
 8009b76:	4618      	mov	r0, r3
 8009b78:	f000 fa0a 	bl	8009f90 <_ZSt3getIP10ExpressionJP17Primal_expressionS1_EERT_RSt7variantIJDpT0_EE>
 8009b7c:	4603      	mov	r3, r0
 8009b7e:	681c      	ldr	r4, [r3, #0]
 8009b80:	2c00      	cmp	r4, #0
 8009b82:	d016      	beq.n	8009bb2 <_ZN19Priority_expressionD1Ev+0x54>
 8009b84:	4620      	mov	r0, r4
 8009b86:	f000 f948 	bl	8009e1a <_ZN10ExpressionD1Ev>
 8009b8a:	2114      	movs	r1, #20
 8009b8c:	4620      	mov	r0, r4
 8009b8e:	f018 fe39 	bl	8022804 <_ZdlPvj>
 8009b92:	e00e      	b.n	8009bb2 <_ZN19Priority_expressionD1Ev+0x54>
	}
	else
	{
		delete std::get<Primal_expression*>(exp);
 8009b94:	687b      	ldr	r3, [r7, #4]
 8009b96:	4618      	mov	r0, r3
 8009b98:	f000 fa06 	bl	8009fa8 <_ZSt3getIP17Primal_expressionJS1_P10ExpressionEERT_RSt7variantIJDpT0_EE>
 8009b9c:	4603      	mov	r3, r0
 8009b9e:	681c      	ldr	r4, [r3, #0]
 8009ba0:	2c00      	cmp	r4, #0
 8009ba2:	d006      	beq.n	8009bb2 <_ZN19Priority_expressionD1Ev+0x54>
 8009ba4:	4620      	mov	r0, r4
 8009ba6:	f7ff ff9b 	bl	8009ae0 <_ZN17Primal_expressionD1Ev>
 8009baa:	2120      	movs	r1, #32
 8009bac:	4620      	mov	r0, r4
 8009bae:	f018 fe29 	bl	8022804 <_ZdlPvj>
	}
}
 8009bb2:	687b      	ldr	r3, [r7, #4]
 8009bb4:	4618      	mov	r0, r3
 8009bb6:	370c      	adds	r7, #12
 8009bb8:	46bd      	mov	sp, r7
 8009bba:	bd90      	pop	{r4, r7, pc}

08009bbc <_ZN16Unary_expressionD1Ev>:

Unary_expression::~Unary_expression()
 8009bbc:	b590      	push	{r4, r7, lr}
 8009bbe:	b083      	sub	sp, #12
 8009bc0:	af00      	add	r7, sp, #0
 8009bc2:	6078      	str	r0, [r7, #4]
{
	delete prior_exp;
 8009bc4:	687b      	ldr	r3, [r7, #4]
 8009bc6:	681c      	ldr	r4, [r3, #0]
 8009bc8:	2c00      	cmp	r4, #0
 8009bca:	d006      	beq.n	8009bda <_ZN16Unary_expressionD1Ev+0x1e>
 8009bcc:	4620      	mov	r0, r4
 8009bce:	f7ff ffc6 	bl	8009b5e <_ZN19Priority_expressionD1Ev>
 8009bd2:	2108      	movs	r1, #8
 8009bd4:	4620      	mov	r0, r4
 8009bd6:	f018 fe15 	bl	8022804 <_ZdlPvj>
}
 8009bda:	687b      	ldr	r3, [r7, #4]
 8009bdc:	4618      	mov	r0, r3
 8009bde:	370c      	adds	r7, #12
 8009be0:	46bd      	mov	sp, r7
 8009be2:	bd90      	pop	{r4, r7, pc}

08009be4 <_ZN16Power_expressionD1Ev>:

Power_expression::~Power_expression()
 8009be4:	b590      	push	{r4, r7, lr}
 8009be6:	b083      	sub	sp, #12
 8009be8:	af00      	add	r7, sp, #0
 8009bea:	6078      	str	r0, [r7, #4]
{
	delete left_un_exp;
 8009bec:	687b      	ldr	r3, [r7, #4]
 8009bee:	681c      	ldr	r4, [r3, #0]
 8009bf0:	2c00      	cmp	r4, #0
 8009bf2:	d006      	beq.n	8009c02 <_ZN16Power_expressionD1Ev+0x1e>
 8009bf4:	4620      	mov	r0, r4
 8009bf6:	f7ff ffe1 	bl	8009bbc <_ZN16Unary_expressionD1Ev>
 8009bfa:	2108      	movs	r1, #8
 8009bfc:	4620      	mov	r0, r4
 8009bfe:	f018 fe01 	bl	8022804 <_ZdlPvj>
	delete right_un_exp;
 8009c02:	687b      	ldr	r3, [r7, #4]
 8009c04:	685c      	ldr	r4, [r3, #4]
 8009c06:	2c00      	cmp	r4, #0
 8009c08:	d006      	beq.n	8009c18 <_ZN16Power_expressionD1Ev+0x34>
 8009c0a:	4620      	mov	r0, r4
 8009c0c:	f7ff ffd6 	bl	8009bbc <_ZN16Unary_expressionD1Ev>
 8009c10:	2108      	movs	r1, #8
 8009c12:	4620      	mov	r0, r4
 8009c14:	f018 fdf6 	bl	8022804 <_ZdlPvj>
}
 8009c18:	687b      	ldr	r3, [r7, #4]
 8009c1a:	4618      	mov	r0, r3
 8009c1c:	370c      	adds	r7, #12
 8009c1e:	46bd      	mov	sp, r7
 8009c20:	bd90      	pop	{r4, r7, pc}

08009c22 <_ZN19Multiply_expressionD1Ev>:

Multiply_expression::~Multiply_expression()
 8009c22:	b590      	push	{r4, r7, lr}
 8009c24:	b087      	sub	sp, #28
 8009c26:	af00      	add	r7, sp, #0
 8009c28:	6078      	str	r0, [r7, #4]
{
	for(Power_expression* exp : pow_exps)
 8009c2a:	687b      	ldr	r3, [r7, #4]
 8009c2c:	617b      	str	r3, [r7, #20]
 8009c2e:	6978      	ldr	r0, [r7, #20]
 8009c30:	f000 f9fc 	bl	800a02c <_ZNSt6vectorIP16Power_expressionSaIS1_EE5beginEv>
 8009c34:	4603      	mov	r3, r0
 8009c36:	60fb      	str	r3, [r7, #12]
 8009c38:	6978      	ldr	r0, [r7, #20]
 8009c3a:	f000 fa07 	bl	800a04c <_ZNSt6vectorIP16Power_expressionSaIS1_EE3endEv>
 8009c3e:	4603      	mov	r3, r0
 8009c40:	60bb      	str	r3, [r7, #8]
 8009c42:	f107 0208 	add.w	r2, r7, #8
 8009c46:	f107 030c 	add.w	r3, r7, #12
 8009c4a:	4611      	mov	r1, r2
 8009c4c:	4618      	mov	r0, r3
 8009c4e:	f000 fa0e 	bl	800a06e <_ZN9__gnu_cxxneIPP16Power_expressionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
 8009c52:	4603      	mov	r3, r0
 8009c54:	2b00      	cmp	r3, #0
 8009c56:	d017      	beq.n	8009c88 <_ZN19Multiply_expressionD1Ev+0x66>
 8009c58:	f107 030c 	add.w	r3, r7, #12
 8009c5c:	4618      	mov	r0, r3
 8009c5e:	f000 fa2e 	bl	800a0be <_ZNK9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEEdeEv>
 8009c62:	4603      	mov	r3, r0
 8009c64:	681b      	ldr	r3, [r3, #0]
 8009c66:	613b      	str	r3, [r7, #16]
	{
		delete exp;
 8009c68:	693c      	ldr	r4, [r7, #16]
 8009c6a:	2c00      	cmp	r4, #0
 8009c6c:	d006      	beq.n	8009c7c <_ZN19Multiply_expressionD1Ev+0x5a>
 8009c6e:	4620      	mov	r0, r4
 8009c70:	f7ff ffb8 	bl	8009be4 <_ZN16Power_expressionD1Ev>
 8009c74:	2108      	movs	r1, #8
 8009c76:	4620      	mov	r0, r4
 8009c78:	f018 fdc4 	bl	8022804 <_ZdlPvj>
	for(Power_expression* exp : pow_exps)
 8009c7c:	f107 030c 	add.w	r3, r7, #12
 8009c80:	4618      	mov	r0, r3
 8009c82:	f000 fa0c 	bl	800a09e <_ZN9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEEppEv>
 8009c86:	e7dc      	b.n	8009c42 <_ZN19Multiply_expressionD1Ev+0x20>
Multiply_expression::~Multiply_expression()
 8009c88:	687b      	ldr	r3, [r7, #4]
 8009c8a:	330c      	adds	r3, #12
 8009c8c:	4618      	mov	r0, r3
 8009c8e:	f000 f9b2 	bl	8009ff6 <_ZNSt6vectorI13mult_operatorSaIS0_EED1Ev>
 8009c92:	687b      	ldr	r3, [r7, #4]
 8009c94:	4618      	mov	r0, r3
 8009c96:	f000 f993 	bl	8009fc0 <_ZNSt6vectorIP16Power_expressionSaIS1_EED1Ev>
	}
}
 8009c9a:	687b      	ldr	r3, [r7, #4]
 8009c9c:	4618      	mov	r0, r3
 8009c9e:	371c      	adds	r7, #28
 8009ca0:	46bd      	mov	sp, r7
 8009ca2:	bd90      	pop	{r4, r7, pc}

08009ca4 <_ZN14Sum_expressionD1Ev>:

Sum_expression::~Sum_expression()
 8009ca4:	b590      	push	{r4, r7, lr}
 8009ca6:	b087      	sub	sp, #28
 8009ca8:	af00      	add	r7, sp, #0
 8009caa:	6078      	str	r0, [r7, #4]
{
	for(Multiply_expression* exp : mult_exps)
 8009cac:	687b      	ldr	r3, [r7, #4]
 8009cae:	617b      	str	r3, [r7, #20]
 8009cb0:	6978      	ldr	r0, [r7, #20]
 8009cb2:	f000 fa46 	bl	800a142 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE5beginEv>
 8009cb6:	4603      	mov	r3, r0
 8009cb8:	60fb      	str	r3, [r7, #12]
 8009cba:	6978      	ldr	r0, [r7, #20]
 8009cbc:	f000 fa51 	bl	800a162 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE3endEv>
 8009cc0:	4603      	mov	r3, r0
 8009cc2:	60bb      	str	r3, [r7, #8]
 8009cc4:	f107 0208 	add.w	r2, r7, #8
 8009cc8:	f107 030c 	add.w	r3, r7, #12
 8009ccc:	4611      	mov	r1, r2
 8009cce:	4618      	mov	r0, r3
 8009cd0:	f000 fa58 	bl	800a184 <_ZN9__gnu_cxxneIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
 8009cd4:	4603      	mov	r3, r0
 8009cd6:	2b00      	cmp	r3, #0
 8009cd8:	d017      	beq.n	8009d0a <_ZN14Sum_expressionD1Ev+0x66>
 8009cda:	f107 030c 	add.w	r3, r7, #12
 8009cde:	4618      	mov	r0, r3
 8009ce0:	f000 fa78 	bl	800a1d4 <_ZNK9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEdeEv>
 8009ce4:	4603      	mov	r3, r0
 8009ce6:	681b      	ldr	r3, [r3, #0]
 8009ce8:	613b      	str	r3, [r7, #16]
	{
		delete exp;
 8009cea:	693c      	ldr	r4, [r7, #16]
 8009cec:	2c00      	cmp	r4, #0
 8009cee:	d006      	beq.n	8009cfe <_ZN14Sum_expressionD1Ev+0x5a>
 8009cf0:	4620      	mov	r0, r4
 8009cf2:	f7ff ff96 	bl	8009c22 <_ZN19Multiply_expressionD1Ev>
 8009cf6:	2118      	movs	r1, #24
 8009cf8:	4620      	mov	r0, r4
 8009cfa:	f018 fd83 	bl	8022804 <_ZdlPvj>
	for(Multiply_expression* exp : mult_exps)
 8009cfe:	f107 030c 	add.w	r3, r7, #12
 8009d02:	4618      	mov	r0, r3
 8009d04:	f000 fa56 	bl	800a1b4 <_ZN9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEppEv>
 8009d08:	e7dc      	b.n	8009cc4 <_ZN14Sum_expressionD1Ev+0x20>
Sum_expression::~Sum_expression()
 8009d0a:	687b      	ldr	r3, [r7, #4]
 8009d0c:	330c      	adds	r3, #12
 8009d0e:	4618      	mov	r0, r3
 8009d10:	f000 f9fc 	bl	800a10c <_ZNSt6vectorI12sum_operatorSaIS0_EED1Ev>
 8009d14:	687b      	ldr	r3, [r7, #4]
 8009d16:	4618      	mov	r0, r3
 8009d18:	f000 f9dd 	bl	800a0d6 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EED1Ev>
	}
}
 8009d1c:	687b      	ldr	r3, [r7, #4]
 8009d1e:	4618      	mov	r0, r3
 8009d20:	371c      	adds	r7, #28
 8009d22:	46bd      	mov	sp, r7
 8009d24:	bd90      	pop	{r4, r7, pc}

08009d26 <_ZN19Relation_expressionD1Ev>:

Relation_expression::~Relation_expression()
 8009d26:	b590      	push	{r4, r7, lr}
 8009d28:	b083      	sub	sp, #12
 8009d2a:	af00      	add	r7, sp, #0
 8009d2c:	6078      	str	r0, [r7, #4]
{
	delete left_sum_exp;
 8009d2e:	687b      	ldr	r3, [r7, #4]
 8009d30:	681c      	ldr	r4, [r3, #0]
 8009d32:	2c00      	cmp	r4, #0
 8009d34:	d006      	beq.n	8009d44 <_ZN19Relation_expressionD1Ev+0x1e>
 8009d36:	4620      	mov	r0, r4
 8009d38:	f7ff ffb4 	bl	8009ca4 <_ZN14Sum_expressionD1Ev>
 8009d3c:	2118      	movs	r1, #24
 8009d3e:	4620      	mov	r0, r4
 8009d40:	f018 fd60 	bl	8022804 <_ZdlPvj>
	delete right_sum_exp;
 8009d44:	687b      	ldr	r3, [r7, #4]
 8009d46:	685c      	ldr	r4, [r3, #4]
 8009d48:	2c00      	cmp	r4, #0
 8009d4a:	d006      	beq.n	8009d5a <_ZN19Relation_expressionD1Ev+0x34>
 8009d4c:	4620      	mov	r0, r4
 8009d4e:	f7ff ffa9 	bl	8009ca4 <_ZN14Sum_expressionD1Ev>
 8009d52:	2118      	movs	r1, #24
 8009d54:	4620      	mov	r0, r4
 8009d56:	f018 fd55 	bl	8022804 <_ZdlPvj>
}
 8009d5a:	687b      	ldr	r3, [r7, #4]
 8009d5c:	4618      	mov	r0, r3
 8009d5e:	370c      	adds	r7, #12
 8009d60:	46bd      	mov	sp, r7
 8009d62:	bd90      	pop	{r4, r7, pc}

08009d64 <_ZN18Compare_expressionD1Ev>:

Compare_expression::~Compare_expression()
 8009d64:	b590      	push	{r4, r7, lr}
 8009d66:	b083      	sub	sp, #12
 8009d68:	af00      	add	r7, sp, #0
 8009d6a:	6078      	str	r0, [r7, #4]
{
	delete left_rel_exp;
 8009d6c:	687b      	ldr	r3, [r7, #4]
 8009d6e:	681c      	ldr	r4, [r3, #0]
 8009d70:	2c00      	cmp	r4, #0
 8009d72:	d006      	beq.n	8009d82 <_ZN18Compare_expressionD1Ev+0x1e>
 8009d74:	4620      	mov	r0, r4
 8009d76:	f7ff ffd6 	bl	8009d26 <_ZN19Relation_expressionD1Ev>
 8009d7a:	210c      	movs	r1, #12
 8009d7c:	4620      	mov	r0, r4
 8009d7e:	f018 fd41 	bl	8022804 <_ZdlPvj>
	delete right_rel_exp;
 8009d82:	687b      	ldr	r3, [r7, #4]
 8009d84:	685c      	ldr	r4, [r3, #4]
 8009d86:	2c00      	cmp	r4, #0
 8009d88:	d006      	beq.n	8009d98 <_ZN18Compare_expressionD1Ev+0x34>
 8009d8a:	4620      	mov	r0, r4
 8009d8c:	f7ff ffcb 	bl	8009d26 <_ZN19Relation_expressionD1Ev>
 8009d90:	210c      	movs	r1, #12
 8009d92:	4620      	mov	r0, r4
 8009d94:	f018 fd36 	bl	8022804 <_ZdlPvj>
}
 8009d98:	687b      	ldr	r3, [r7, #4]
 8009d9a:	4618      	mov	r0, r3
 8009d9c:	370c      	adds	r7, #12
 8009d9e:	46bd      	mov	sp, r7
 8009da0:	bd90      	pop	{r4, r7, pc}

08009da2 <_ZN14And_expressionD1Ev>:

And_expression::~And_expression()
 8009da2:	b590      	push	{r4, r7, lr}
 8009da4:	b087      	sub	sp, #28
 8009da6:	af00      	add	r7, sp, #0
 8009da8:	6078      	str	r0, [r7, #4]
{
	for(Compare_expression* exp : comp_exps)
 8009daa:	687b      	ldr	r3, [r7, #4]
 8009dac:	617b      	str	r3, [r7, #20]
 8009dae:	6978      	ldr	r0, [r7, #20]
 8009db0:	f000 fa37 	bl	800a222 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE5beginEv>
 8009db4:	4603      	mov	r3, r0
 8009db6:	60fb      	str	r3, [r7, #12]
 8009db8:	6978      	ldr	r0, [r7, #20]
 8009dba:	f000 fa42 	bl	800a242 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE3endEv>
 8009dbe:	4603      	mov	r3, r0
 8009dc0:	60bb      	str	r3, [r7, #8]
 8009dc2:	f107 0208 	add.w	r2, r7, #8
 8009dc6:	f107 030c 	add.w	r3, r7, #12
 8009dca:	4611      	mov	r1, r2
 8009dcc:	4618      	mov	r0, r3
 8009dce:	f000 fa49 	bl	800a264 <_ZN9__gnu_cxxneIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
 8009dd2:	4603      	mov	r3, r0
 8009dd4:	2b00      	cmp	r3, #0
 8009dd6:	d017      	beq.n	8009e08 <_ZN14And_expressionD1Ev+0x66>
 8009dd8:	f107 030c 	add.w	r3, r7, #12
 8009ddc:	4618      	mov	r0, r3
 8009dde:	f000 fa69 	bl	800a2b4 <_ZNK9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEdeEv>
 8009de2:	4603      	mov	r3, r0
 8009de4:	681b      	ldr	r3, [r3, #0]
 8009de6:	613b      	str	r3, [r7, #16]
	{
		delete exp;
 8009de8:	693c      	ldr	r4, [r7, #16]
 8009dea:	2c00      	cmp	r4, #0
 8009dec:	d006      	beq.n	8009dfc <_ZN14And_expressionD1Ev+0x5a>
 8009dee:	4620      	mov	r0, r4
 8009df0:	f7ff ffb8 	bl	8009d64 <_ZN18Compare_expressionD1Ev>
 8009df4:	210c      	movs	r1, #12
 8009df6:	4620      	mov	r0, r4
 8009df8:	f018 fd04 	bl	8022804 <_ZdlPvj>
	for(Compare_expression* exp : comp_exps)
 8009dfc:	f107 030c 	add.w	r3, r7, #12
 8009e00:	4618      	mov	r0, r3
 8009e02:	f000 fa47 	bl	800a294 <_ZN9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEppEv>
 8009e06:	e7dc      	b.n	8009dc2 <_ZN14And_expressionD1Ev+0x20>
And_expression::~And_expression()
 8009e08:	687b      	ldr	r3, [r7, #4]
 8009e0a:	4618      	mov	r0, r3
 8009e0c:	f000 f9ee 	bl	800a1ec <_ZNSt6vectorIP18Compare_expressionSaIS1_EED1Ev>
	}
}
 8009e10:	687b      	ldr	r3, [r7, #4]
 8009e12:	4618      	mov	r0, r3
 8009e14:	371c      	adds	r7, #28
 8009e16:	46bd      	mov	sp, r7
 8009e18:	bd90      	pop	{r4, r7, pc}

08009e1a <_ZN10ExpressionD1Ev>:

Expression::~Expression()
 8009e1a:	b590      	push	{r4, r7, lr}
 8009e1c:	b087      	sub	sp, #28
 8009e1e:	af00      	add	r7, sp, #0
 8009e20:	6078      	str	r0, [r7, #4]
{
	for(And_expression* exp : and_exps)
 8009e22:	687b      	ldr	r3, [r7, #4]
 8009e24:	3308      	adds	r3, #8
 8009e26:	617b      	str	r3, [r7, #20]
 8009e28:	6978      	ldr	r0, [r7, #20]
 8009e2a:	f000 fa6a 	bl	800a302 <_ZNSt6vectorIP14And_expressionSaIS1_EE5beginEv>
 8009e2e:	4603      	mov	r3, r0
 8009e30:	60fb      	str	r3, [r7, #12]
 8009e32:	6978      	ldr	r0, [r7, #20]
 8009e34:	f000 fa75 	bl	800a322 <_ZNSt6vectorIP14And_expressionSaIS1_EE3endEv>
 8009e38:	4603      	mov	r3, r0
 8009e3a:	60bb      	str	r3, [r7, #8]
 8009e3c:	f107 0208 	add.w	r2, r7, #8
 8009e40:	f107 030c 	add.w	r3, r7, #12
 8009e44:	4611      	mov	r1, r2
 8009e46:	4618      	mov	r0, r3
 8009e48:	f000 fa7c 	bl	800a344 <_ZN9__gnu_cxxneIPP14And_expressionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
 8009e4c:	4603      	mov	r3, r0
 8009e4e:	2b00      	cmp	r3, #0
 8009e50:	d017      	beq.n	8009e82 <_ZN10ExpressionD1Ev+0x68>
 8009e52:	f107 030c 	add.w	r3, r7, #12
 8009e56:	4618      	mov	r0, r3
 8009e58:	f000 fa9c 	bl	800a394 <_ZNK9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEEdeEv>
 8009e5c:	4603      	mov	r3, r0
 8009e5e:	681b      	ldr	r3, [r3, #0]
 8009e60:	613b      	str	r3, [r7, #16]
	{
		delete exp;
 8009e62:	693c      	ldr	r4, [r7, #16]
 8009e64:	2c00      	cmp	r4, #0
 8009e66:	d006      	beq.n	8009e76 <_ZN10ExpressionD1Ev+0x5c>
 8009e68:	4620      	mov	r0, r4
 8009e6a:	f7ff ff9a 	bl	8009da2 <_ZN14And_expressionD1Ev>
 8009e6e:	210c      	movs	r1, #12
 8009e70:	4620      	mov	r0, r4
 8009e72:	f018 fcc7 	bl	8022804 <_ZdlPvj>
	for(And_expression* exp : and_exps)
 8009e76:	f107 030c 	add.w	r3, r7, #12
 8009e7a:	4618      	mov	r0, r3
 8009e7c:	f000 fa7a 	bl	800a374 <_ZN9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEEppEv>
 8009e80:	e7dc      	b.n	8009e3c <_ZN10ExpressionD1Ev+0x22>
Expression::~Expression()
 8009e82:	687b      	ldr	r3, [r7, #4]
 8009e84:	3308      	adds	r3, #8
 8009e86:	4618      	mov	r0, r3
 8009e88:	f000 fa20 	bl	800a2cc <_ZNSt6vectorIP14And_expressionSaIS1_EED1Ev>
	}
}
 8009e8c:	687b      	ldr	r3, [r7, #4]
 8009e8e:	4618      	mov	r0, r3
 8009e90:	371c      	adds	r7, #28
 8009e92:	46bd      	mov	sp, r7
 8009e94:	bd90      	pop	{r4, r7, pc}

08009e96 <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>:
      ~_Variant_storage()
 8009e96:	b580      	push	{r7, lr}
 8009e98:	b082      	sub	sp, #8
 8009e9a:	af00      	add	r7, sp, #0
 8009e9c:	6078      	str	r0, [r7, #4]
      { _M_reset(); }
 8009e9e:	6878      	ldr	r0, [r7, #4]
 8009ea0:	f000 fa84 	bl	800a3ac <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE8_M_resetEv>
 8009ea4:	687b      	ldr	r3, [r7, #4]
 8009ea6:	4618      	mov	r0, r3
 8009ea8:	3708      	adds	r7, #8
 8009eaa:	46bd      	mov	sp, r7
 8009eac:	bd80      	pop	{r7, pc}

08009eae <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>:
      constexpr size_t index() const noexcept
 8009eae:	b480      	push	{r7}
 8009eb0:	b083      	sub	sp, #12
 8009eb2:	af00      	add	r7, sp, #0
 8009eb4:	6078      	str	r0, [r7, #4]
	if (this->_M_index ==
 8009eb6:	687b      	ldr	r3, [r7, #4]
 8009eb8:	7e1b      	ldrb	r3, [r3, #24]
 8009eba:	2bff      	cmp	r3, #255	; 0xff
 8009ebc:	d102      	bne.n	8009ec4 <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv+0x16>
	  return variant_npos;
 8009ebe:	f04f 33ff 	mov.w	r3, #4294967295
 8009ec2:	e001      	b.n	8009ec8 <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv+0x1a>
	return this->_M_index;
 8009ec4:	687b      	ldr	r3, [r7, #4]
 8009ec6:	7e1b      	ldrb	r3, [r3, #24]
      }
 8009ec8:	4618      	mov	r0, r3
 8009eca:	370c      	adds	r7, #12
 8009ecc:	46bd      	mov	sp, r7
 8009ece:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009ed2:	4770      	bx	lr

08009ed4 <_ZSt17holds_alternativeIP8VariableJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES1_P13Function_callEEbRKSt7variantIJDpT0_EE>:
    holds_alternative(const variant<_Types...>& __v) noexcept
 8009ed4:	b580      	push	{r7, lr}
 8009ed6:	b082      	sub	sp, #8
 8009ed8:	af00      	add	r7, sp, #0
 8009eda:	6078      	str	r0, [r7, #4]
      return __v.index() == __detail::__variant::__index_of_v<_Tp, _Types...>;
 8009edc:	6878      	ldr	r0, [r7, #4]
 8009ede:	f7ff ffe6 	bl	8009eae <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 8009ee2:	4603      	mov	r3, r0
 8009ee4:	2b04      	cmp	r3, #4
 8009ee6:	bf0c      	ite	eq
 8009ee8:	2301      	moveq	r3, #1
 8009eea:	2300      	movne	r3, #0
 8009eec:	b2db      	uxtb	r3, r3
    }
 8009eee:	4618      	mov	r0, r3
 8009ef0:	3708      	adds	r7, #8
 8009ef2:	46bd      	mov	sp, r7
 8009ef4:	bd80      	pop	{r7, pc}

08009ef6 <_ZSt3getIP8VariableJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES1_P13Function_callEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 8009ef6:	b580      	push	{r7, lr}
 8009ef8:	b082      	sub	sp, #8
 8009efa:	af00      	add	r7, sp, #0
 8009efc:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 8009efe:	6878      	ldr	r0, [r7, #4]
 8009f00:	f000 facc 	bl	800a49c <_ZSt3getILj4EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8009f04:	4603      	mov	r3, r0
    }
 8009f06:	4618      	mov	r0, r3
 8009f08:	3708      	adds	r7, #8
 8009f0a:	46bd      	mov	sp, r7
 8009f0c:	bd80      	pop	{r7, pc}

08009f0e <_ZSt17holds_alternativeIP13Function_callJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableS1_EEbRKSt7variantIJDpT0_EE>:
    holds_alternative(const variant<_Types...>& __v) noexcept
 8009f0e:	b580      	push	{r7, lr}
 8009f10:	b082      	sub	sp, #8
 8009f12:	af00      	add	r7, sp, #0
 8009f14:	6078      	str	r0, [r7, #4]
      return __v.index() == __detail::__variant::__index_of_v<_Tp, _Types...>;
 8009f16:	6878      	ldr	r0, [r7, #4]
 8009f18:	f7ff ffc9 	bl	8009eae <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 8009f1c:	4603      	mov	r3, r0
 8009f1e:	2b05      	cmp	r3, #5
 8009f20:	bf0c      	ite	eq
 8009f22:	2301      	moveq	r3, #1
 8009f24:	2300      	movne	r3, #0
 8009f26:	b2db      	uxtb	r3, r3
    }
 8009f28:	4618      	mov	r0, r3
 8009f2a:	3708      	adds	r7, #8
 8009f2c:	46bd      	mov	sp, r7
 8009f2e:	bd80      	pop	{r7, pc}

08009f30 <_ZSt3getIP13Function_callJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableS1_EERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 8009f30:	b580      	push	{r7, lr}
 8009f32:	b082      	sub	sp, #8
 8009f34:	af00      	add	r7, sp, #0
 8009f36:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 8009f38:	6878      	ldr	r0, [r7, #4]
 8009f3a:	f000 fb47 	bl	800a5cc <_ZSt3getILj5EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8009f3e:	4603      	mov	r3, r0
    }
 8009f40:	4618      	mov	r0, r3
 8009f42:	3708      	adds	r7, #8
 8009f44:	46bd      	mov	sp, r7
 8009f46:	bd80      	pop	{r7, pc}

08009f48 <_ZNKSt7variantIJP17Primal_expressionP10ExpressionEE5indexEv>:
      constexpr size_t index() const noexcept
 8009f48:	b480      	push	{r7}
 8009f4a:	b083      	sub	sp, #12
 8009f4c:	af00      	add	r7, sp, #0
 8009f4e:	6078      	str	r0, [r7, #4]
	if (this->_M_index ==
 8009f50:	687b      	ldr	r3, [r7, #4]
 8009f52:	791b      	ldrb	r3, [r3, #4]
 8009f54:	2bff      	cmp	r3, #255	; 0xff
 8009f56:	d102      	bne.n	8009f5e <_ZNKSt7variantIJP17Primal_expressionP10ExpressionEE5indexEv+0x16>
	  return variant_npos;
 8009f58:	f04f 33ff 	mov.w	r3, #4294967295
 8009f5c:	e001      	b.n	8009f62 <_ZNKSt7variantIJP17Primal_expressionP10ExpressionEE5indexEv+0x1a>
	return this->_M_index;
 8009f5e:	687b      	ldr	r3, [r7, #4]
 8009f60:	791b      	ldrb	r3, [r3, #4]
      }
 8009f62:	4618      	mov	r0, r3
 8009f64:	370c      	adds	r7, #12
 8009f66:	46bd      	mov	sp, r7
 8009f68:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009f6c:	4770      	bx	lr

08009f6e <_ZSt17holds_alternativeIP10ExpressionJP17Primal_expressionS1_EEbRKSt7variantIJDpT0_EE>:
    holds_alternative(const variant<_Types...>& __v) noexcept
 8009f6e:	b580      	push	{r7, lr}
 8009f70:	b082      	sub	sp, #8
 8009f72:	af00      	add	r7, sp, #0
 8009f74:	6078      	str	r0, [r7, #4]
      return __v.index() == __detail::__variant::__index_of_v<_Tp, _Types...>;
 8009f76:	6878      	ldr	r0, [r7, #4]
 8009f78:	f7ff ffe6 	bl	8009f48 <_ZNKSt7variantIJP17Primal_expressionP10ExpressionEE5indexEv>
 8009f7c:	4603      	mov	r3, r0
 8009f7e:	2b01      	cmp	r3, #1
 8009f80:	bf0c      	ite	eq
 8009f82:	2301      	moveq	r3, #1
 8009f84:	2300      	movne	r3, #0
 8009f86:	b2db      	uxtb	r3, r3
    }
 8009f88:	4618      	mov	r0, r3
 8009f8a:	3708      	adds	r7, #8
 8009f8c:	46bd      	mov	sp, r7
 8009f8e:	bd80      	pop	{r7, pc}

08009f90 <_ZSt3getIP10ExpressionJP17Primal_expressionS1_EERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 8009f90:	b580      	push	{r7, lr}
 8009f92:	b082      	sub	sp, #8
 8009f94:	af00      	add	r7, sp, #0
 8009f96:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 8009f98:	6878      	ldr	r0, [r7, #4]
 8009f9a:	f000 fb67 	bl	800a66c <_ZSt3getILj1EJP17Primal_expressionP10ExpressionEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERS8_>
 8009f9e:	4603      	mov	r3, r0
    }
 8009fa0:	4618      	mov	r0, r3
 8009fa2:	3708      	adds	r7, #8
 8009fa4:	46bd      	mov	sp, r7
 8009fa6:	bd80      	pop	{r7, pc}

08009fa8 <_ZSt3getIP17Primal_expressionJS1_P10ExpressionEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 8009fa8:	b580      	push	{r7, lr}
 8009faa:	b082      	sub	sp, #8
 8009fac:	af00      	add	r7, sp, #0
 8009fae:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 8009fb0:	6878      	ldr	r0, [r7, #4]
 8009fb2:	f000 fb99 	bl	800a6e8 <_ZSt3getILj0EJP17Primal_expressionP10ExpressionEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERS8_>
 8009fb6:	4603      	mov	r3, r0
    }
 8009fb8:	4618      	mov	r0, r3
 8009fba:	3708      	adds	r7, #8
 8009fbc:	46bd      	mov	sp, r7
 8009fbe:	bd80      	pop	{r7, pc}

08009fc0 <_ZNSt6vectorIP16Power_expressionSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
 8009fc0:	b5b0      	push	{r4, r5, r7, lr}
 8009fc2:	b082      	sub	sp, #8
 8009fc4:	af00      	add	r7, sp, #0
 8009fc6:	6078      	str	r0, [r7, #4]
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 8009fc8:	687b      	ldr	r3, [r7, #4]
 8009fca:	681c      	ldr	r4, [r3, #0]
 8009fcc:	687b      	ldr	r3, [r7, #4]
 8009fce:	685d      	ldr	r5, [r3, #4]
		      _M_get_Tp_allocator());
 8009fd0:	687b      	ldr	r3, [r7, #4]
 8009fd2:	4618      	mov	r0, r3
 8009fd4:	f000 fbc9 	bl	800a76a <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 8009fd8:	4603      	mov	r3, r0
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 8009fda:	461a      	mov	r2, r3
 8009fdc:	4629      	mov	r1, r5
 8009fde:	4620      	mov	r0, r4
 8009fe0:	f000 fbce 	bl	800a780 <_ZSt8_DestroyIPP16Power_expressionS1_EvT_S3_RSaIT0_E>
      }
 8009fe4:	687b      	ldr	r3, [r7, #4]
 8009fe6:	4618      	mov	r0, r3
 8009fe8:	f000 fba6 	bl	800a738 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EED1Ev>
 8009fec:	687b      	ldr	r3, [r7, #4]
 8009fee:	4618      	mov	r0, r3
 8009ff0:	3708      	adds	r7, #8
 8009ff2:	46bd      	mov	sp, r7
 8009ff4:	bdb0      	pop	{r4, r5, r7, pc}

08009ff6 <_ZNSt6vectorI13mult_operatorSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
 8009ff6:	b5b0      	push	{r4, r5, r7, lr}
 8009ff8:	b082      	sub	sp, #8
 8009ffa:	af00      	add	r7, sp, #0
 8009ffc:	6078      	str	r0, [r7, #4]
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 8009ffe:	687b      	ldr	r3, [r7, #4]
 800a000:	681c      	ldr	r4, [r3, #0]
 800a002:	687b      	ldr	r3, [r7, #4]
 800a004:	685d      	ldr	r5, [r3, #4]
		      _M_get_Tp_allocator());
 800a006:	687b      	ldr	r3, [r7, #4]
 800a008:	4618      	mov	r0, r3
 800a00a:	f000 fbeb 	bl	800a7e4 <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE19_M_get_Tp_allocatorEv>
 800a00e:	4603      	mov	r3, r0
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 800a010:	461a      	mov	r2, r3
 800a012:	4629      	mov	r1, r5
 800a014:	4620      	mov	r0, r4
 800a016:	f000 fbf0 	bl	800a7fa <_ZSt8_DestroyIP13mult_operatorS0_EvT_S2_RSaIT0_E>
      }
 800a01a:	687b      	ldr	r3, [r7, #4]
 800a01c:	4618      	mov	r0, r3
 800a01e:	f000 fbc9 	bl	800a7b4 <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EED1Ev>
 800a022:	687b      	ldr	r3, [r7, #4]
 800a024:	4618      	mov	r0, r3
 800a026:	3708      	adds	r7, #8
 800a028:	46bd      	mov	sp, r7
 800a02a:	bdb0      	pop	{r4, r5, r7, pc}

0800a02c <_ZNSt6vectorIP16Power_expressionSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 800a02c:	b580      	push	{r7, lr}
 800a02e:	b084      	sub	sp, #16
 800a030:	af00      	add	r7, sp, #0
 800a032:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_start); }
 800a034:	687a      	ldr	r2, [r7, #4]
 800a036:	f107 030c 	add.w	r3, r7, #12
 800a03a:	4611      	mov	r1, r2
 800a03c:	4618      	mov	r0, r3
 800a03e:	f000 fbea 	bl	800a816 <_ZN9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 800a042:	68fb      	ldr	r3, [r7, #12]
 800a044:	4618      	mov	r0, r3
 800a046:	3710      	adds	r7, #16
 800a048:	46bd      	mov	sp, r7
 800a04a:	bd80      	pop	{r7, pc}

0800a04c <_ZNSt6vectorIP16Power_expressionSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 800a04c:	b580      	push	{r7, lr}
 800a04e:	b084      	sub	sp, #16
 800a050:	af00      	add	r7, sp, #0
 800a052:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_finish); }
 800a054:	687b      	ldr	r3, [r7, #4]
 800a056:	1d1a      	adds	r2, r3, #4
 800a058:	f107 030c 	add.w	r3, r7, #12
 800a05c:	4611      	mov	r1, r2
 800a05e:	4618      	mov	r0, r3
 800a060:	f000 fbd9 	bl	800a816 <_ZN9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 800a064:	68fb      	ldr	r3, [r7, #12]
 800a066:	4618      	mov	r0, r3
 800a068:	3710      	adds	r7, #16
 800a06a:	46bd      	mov	sp, r7
 800a06c:	bd80      	pop	{r7, pc}

0800a06e <_ZN9__gnu_cxxneIPP16Power_expressionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
 800a06e:	b590      	push	{r4, r7, lr}
 800a070:	b083      	sub	sp, #12
 800a072:	af00      	add	r7, sp, #0
 800a074:	6078      	str	r0, [r7, #4]
 800a076:	6039      	str	r1, [r7, #0]
    { return __lhs.base() != __rhs.base(); }
 800a078:	6878      	ldr	r0, [r7, #4]
 800a07a:	f000 fbdc 	bl	800a836 <_ZNK9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 800a07e:	4603      	mov	r3, r0
 800a080:	681c      	ldr	r4, [r3, #0]
 800a082:	6838      	ldr	r0, [r7, #0]
 800a084:	f000 fbd7 	bl	800a836 <_ZNK9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 800a088:	4603      	mov	r3, r0
 800a08a:	681b      	ldr	r3, [r3, #0]
 800a08c:	429c      	cmp	r4, r3
 800a08e:	bf14      	ite	ne
 800a090:	2301      	movne	r3, #1
 800a092:	2300      	moveq	r3, #0
 800a094:	b2db      	uxtb	r3, r3
 800a096:	4618      	mov	r0, r3
 800a098:	370c      	adds	r7, #12
 800a09a:	46bd      	mov	sp, r7
 800a09c:	bd90      	pop	{r4, r7, pc}

0800a09e <_ZN9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
 800a09e:	b480      	push	{r7}
 800a0a0:	b083      	sub	sp, #12
 800a0a2:	af00      	add	r7, sp, #0
 800a0a4:	6078      	str	r0, [r7, #4]
	++_M_current;
 800a0a6:	687b      	ldr	r3, [r7, #4]
 800a0a8:	681b      	ldr	r3, [r3, #0]
 800a0aa:	1d1a      	adds	r2, r3, #4
 800a0ac:	687b      	ldr	r3, [r7, #4]
 800a0ae:	601a      	str	r2, [r3, #0]
	return *this;
 800a0b0:	687b      	ldr	r3, [r7, #4]
      }
 800a0b2:	4618      	mov	r0, r3
 800a0b4:	370c      	adds	r7, #12
 800a0b6:	46bd      	mov	sp, r7
 800a0b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a0bc:	4770      	bx	lr

0800a0be <_ZNK9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
 800a0be:	b480      	push	{r7}
 800a0c0:	b083      	sub	sp, #12
 800a0c2:	af00      	add	r7, sp, #0
 800a0c4:	6078      	str	r0, [r7, #4]
      { return *_M_current; }
 800a0c6:	687b      	ldr	r3, [r7, #4]
 800a0c8:	681b      	ldr	r3, [r3, #0]
 800a0ca:	4618      	mov	r0, r3
 800a0cc:	370c      	adds	r7, #12
 800a0ce:	46bd      	mov	sp, r7
 800a0d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a0d4:	4770      	bx	lr

0800a0d6 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
 800a0d6:	b5b0      	push	{r4, r5, r7, lr}
 800a0d8:	b082      	sub	sp, #8
 800a0da:	af00      	add	r7, sp, #0
 800a0dc:	6078      	str	r0, [r7, #4]
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 800a0de:	687b      	ldr	r3, [r7, #4]
 800a0e0:	681c      	ldr	r4, [r3, #0]
 800a0e2:	687b      	ldr	r3, [r7, #4]
 800a0e4:	685d      	ldr	r5, [r3, #4]
		      _M_get_Tp_allocator());
 800a0e6:	687b      	ldr	r3, [r7, #4]
 800a0e8:	4618      	mov	r0, r3
 800a0ea:	f000 fbd4 	bl	800a896 <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 800a0ee:	4603      	mov	r3, r0
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 800a0f0:	461a      	mov	r2, r3
 800a0f2:	4629      	mov	r1, r5
 800a0f4:	4620      	mov	r0, r4
 800a0f6:	f000 fbd9 	bl	800a8ac <_ZSt8_DestroyIPP19Multiply_expressionS1_EvT_S3_RSaIT0_E>
      }
 800a0fa:	687b      	ldr	r3, [r7, #4]
 800a0fc:	4618      	mov	r0, r3
 800a0fe:	f000 fbb1 	bl	800a864 <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EED1Ev>
 800a102:	687b      	ldr	r3, [r7, #4]
 800a104:	4618      	mov	r0, r3
 800a106:	3708      	adds	r7, #8
 800a108:	46bd      	mov	sp, r7
 800a10a:	bdb0      	pop	{r4, r5, r7, pc}

0800a10c <_ZNSt6vectorI12sum_operatorSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
 800a10c:	b5b0      	push	{r4, r5, r7, lr}
 800a10e:	b082      	sub	sp, #8
 800a110:	af00      	add	r7, sp, #0
 800a112:	6078      	str	r0, [r7, #4]
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 800a114:	687b      	ldr	r3, [r7, #4]
 800a116:	681c      	ldr	r4, [r3, #0]
 800a118:	687b      	ldr	r3, [r7, #4]
 800a11a:	685d      	ldr	r5, [r3, #4]
		      _M_get_Tp_allocator());
 800a11c:	687b      	ldr	r3, [r7, #4]
 800a11e:	4618      	mov	r0, r3
 800a120:	f000 fbf6 	bl	800a910 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE19_M_get_Tp_allocatorEv>
 800a124:	4603      	mov	r3, r0
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 800a126:	461a      	mov	r2, r3
 800a128:	4629      	mov	r1, r5
 800a12a:	4620      	mov	r0, r4
 800a12c:	f000 fbfb 	bl	800a926 <_ZSt8_DestroyIP12sum_operatorS0_EvT_S2_RSaIT0_E>
      }
 800a130:	687b      	ldr	r3, [r7, #4]
 800a132:	4618      	mov	r0, r3
 800a134:	f000 fbd4 	bl	800a8e0 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EED1Ev>
 800a138:	687b      	ldr	r3, [r7, #4]
 800a13a:	4618      	mov	r0, r3
 800a13c:	3708      	adds	r7, #8
 800a13e:	46bd      	mov	sp, r7
 800a140:	bdb0      	pop	{r4, r5, r7, pc}

0800a142 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 800a142:	b580      	push	{r7, lr}
 800a144:	b084      	sub	sp, #16
 800a146:	af00      	add	r7, sp, #0
 800a148:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_start); }
 800a14a:	687a      	ldr	r2, [r7, #4]
 800a14c:	f107 030c 	add.w	r3, r7, #12
 800a150:	4611      	mov	r1, r2
 800a152:	4618      	mov	r0, r3
 800a154:	f000 fbf5 	bl	800a942 <_ZN9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 800a158:	68fb      	ldr	r3, [r7, #12]
 800a15a:	4618      	mov	r0, r3
 800a15c:	3710      	adds	r7, #16
 800a15e:	46bd      	mov	sp, r7
 800a160:	bd80      	pop	{r7, pc}

0800a162 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 800a162:	b580      	push	{r7, lr}
 800a164:	b084      	sub	sp, #16
 800a166:	af00      	add	r7, sp, #0
 800a168:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_finish); }
 800a16a:	687b      	ldr	r3, [r7, #4]
 800a16c:	1d1a      	adds	r2, r3, #4
 800a16e:	f107 030c 	add.w	r3, r7, #12
 800a172:	4611      	mov	r1, r2
 800a174:	4618      	mov	r0, r3
 800a176:	f000 fbe4 	bl	800a942 <_ZN9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 800a17a:	68fb      	ldr	r3, [r7, #12]
 800a17c:	4618      	mov	r0, r3
 800a17e:	3710      	adds	r7, #16
 800a180:	46bd      	mov	sp, r7
 800a182:	bd80      	pop	{r7, pc}

0800a184 <_ZN9__gnu_cxxneIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
 800a184:	b590      	push	{r4, r7, lr}
 800a186:	b083      	sub	sp, #12
 800a188:	af00      	add	r7, sp, #0
 800a18a:	6078      	str	r0, [r7, #4]
 800a18c:	6039      	str	r1, [r7, #0]
    { return __lhs.base() != __rhs.base(); }
 800a18e:	6878      	ldr	r0, [r7, #4]
 800a190:	f000 fbe7 	bl	800a962 <_ZNK9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 800a194:	4603      	mov	r3, r0
 800a196:	681c      	ldr	r4, [r3, #0]
 800a198:	6838      	ldr	r0, [r7, #0]
 800a19a:	f000 fbe2 	bl	800a962 <_ZNK9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 800a19e:	4603      	mov	r3, r0
 800a1a0:	681b      	ldr	r3, [r3, #0]
 800a1a2:	429c      	cmp	r4, r3
 800a1a4:	bf14      	ite	ne
 800a1a6:	2301      	movne	r3, #1
 800a1a8:	2300      	moveq	r3, #0
 800a1aa:	b2db      	uxtb	r3, r3
 800a1ac:	4618      	mov	r0, r3
 800a1ae:	370c      	adds	r7, #12
 800a1b0:	46bd      	mov	sp, r7
 800a1b2:	bd90      	pop	{r4, r7, pc}

0800a1b4 <_ZN9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
 800a1b4:	b480      	push	{r7}
 800a1b6:	b083      	sub	sp, #12
 800a1b8:	af00      	add	r7, sp, #0
 800a1ba:	6078      	str	r0, [r7, #4]
	++_M_current;
 800a1bc:	687b      	ldr	r3, [r7, #4]
 800a1be:	681b      	ldr	r3, [r3, #0]
 800a1c0:	1d1a      	adds	r2, r3, #4
 800a1c2:	687b      	ldr	r3, [r7, #4]
 800a1c4:	601a      	str	r2, [r3, #0]
	return *this;
 800a1c6:	687b      	ldr	r3, [r7, #4]
      }
 800a1c8:	4618      	mov	r0, r3
 800a1ca:	370c      	adds	r7, #12
 800a1cc:	46bd      	mov	sp, r7
 800a1ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a1d2:	4770      	bx	lr

0800a1d4 <_ZNK9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
 800a1d4:	b480      	push	{r7}
 800a1d6:	b083      	sub	sp, #12
 800a1d8:	af00      	add	r7, sp, #0
 800a1da:	6078      	str	r0, [r7, #4]
      { return *_M_current; }
 800a1dc:	687b      	ldr	r3, [r7, #4]
 800a1de:	681b      	ldr	r3, [r3, #0]
 800a1e0:	4618      	mov	r0, r3
 800a1e2:	370c      	adds	r7, #12
 800a1e4:	46bd      	mov	sp, r7
 800a1e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a1ea:	4770      	bx	lr

0800a1ec <_ZNSt6vectorIP18Compare_expressionSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
 800a1ec:	b5b0      	push	{r4, r5, r7, lr}
 800a1ee:	b082      	sub	sp, #8
 800a1f0:	af00      	add	r7, sp, #0
 800a1f2:	6078      	str	r0, [r7, #4]
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 800a1f4:	687b      	ldr	r3, [r7, #4]
 800a1f6:	681c      	ldr	r4, [r3, #0]
 800a1f8:	687b      	ldr	r3, [r7, #4]
 800a1fa:	685d      	ldr	r5, [r3, #4]
		      _M_get_Tp_allocator());
 800a1fc:	687b      	ldr	r3, [r7, #4]
 800a1fe:	4618      	mov	r0, r3
 800a200:	f000 fbdf 	bl	800a9c2 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 800a204:	4603      	mov	r3, r0
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 800a206:	461a      	mov	r2, r3
 800a208:	4629      	mov	r1, r5
 800a20a:	4620      	mov	r0, r4
 800a20c:	f000 fbe4 	bl	800a9d8 <_ZSt8_DestroyIPP18Compare_expressionS1_EvT_S3_RSaIT0_E>
      }
 800a210:	687b      	ldr	r3, [r7, #4]
 800a212:	4618      	mov	r0, r3
 800a214:	f000 fbbc 	bl	800a990 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EED1Ev>
 800a218:	687b      	ldr	r3, [r7, #4]
 800a21a:	4618      	mov	r0, r3
 800a21c:	3708      	adds	r7, #8
 800a21e:	46bd      	mov	sp, r7
 800a220:	bdb0      	pop	{r4, r5, r7, pc}

0800a222 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 800a222:	b580      	push	{r7, lr}
 800a224:	b084      	sub	sp, #16
 800a226:	af00      	add	r7, sp, #0
 800a228:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_start); }
 800a22a:	687a      	ldr	r2, [r7, #4]
 800a22c:	f107 030c 	add.w	r3, r7, #12
 800a230:	4611      	mov	r1, r2
 800a232:	4618      	mov	r0, r3
 800a234:	f000 fbde 	bl	800a9f4 <_ZN9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 800a238:	68fb      	ldr	r3, [r7, #12]
 800a23a:	4618      	mov	r0, r3
 800a23c:	3710      	adds	r7, #16
 800a23e:	46bd      	mov	sp, r7
 800a240:	bd80      	pop	{r7, pc}

0800a242 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 800a242:	b580      	push	{r7, lr}
 800a244:	b084      	sub	sp, #16
 800a246:	af00      	add	r7, sp, #0
 800a248:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_finish); }
 800a24a:	687b      	ldr	r3, [r7, #4]
 800a24c:	1d1a      	adds	r2, r3, #4
 800a24e:	f107 030c 	add.w	r3, r7, #12
 800a252:	4611      	mov	r1, r2
 800a254:	4618      	mov	r0, r3
 800a256:	f000 fbcd 	bl	800a9f4 <_ZN9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 800a25a:	68fb      	ldr	r3, [r7, #12]
 800a25c:	4618      	mov	r0, r3
 800a25e:	3710      	adds	r7, #16
 800a260:	46bd      	mov	sp, r7
 800a262:	bd80      	pop	{r7, pc}

0800a264 <_ZN9__gnu_cxxneIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
 800a264:	b590      	push	{r4, r7, lr}
 800a266:	b083      	sub	sp, #12
 800a268:	af00      	add	r7, sp, #0
 800a26a:	6078      	str	r0, [r7, #4]
 800a26c:	6039      	str	r1, [r7, #0]
    { return __lhs.base() != __rhs.base(); }
 800a26e:	6878      	ldr	r0, [r7, #4]
 800a270:	f000 fbd0 	bl	800aa14 <_ZNK9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 800a274:	4603      	mov	r3, r0
 800a276:	681c      	ldr	r4, [r3, #0]
 800a278:	6838      	ldr	r0, [r7, #0]
 800a27a:	f000 fbcb 	bl	800aa14 <_ZNK9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 800a27e:	4603      	mov	r3, r0
 800a280:	681b      	ldr	r3, [r3, #0]
 800a282:	429c      	cmp	r4, r3
 800a284:	bf14      	ite	ne
 800a286:	2301      	movne	r3, #1
 800a288:	2300      	moveq	r3, #0
 800a28a:	b2db      	uxtb	r3, r3
 800a28c:	4618      	mov	r0, r3
 800a28e:	370c      	adds	r7, #12
 800a290:	46bd      	mov	sp, r7
 800a292:	bd90      	pop	{r4, r7, pc}

0800a294 <_ZN9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
 800a294:	b480      	push	{r7}
 800a296:	b083      	sub	sp, #12
 800a298:	af00      	add	r7, sp, #0
 800a29a:	6078      	str	r0, [r7, #4]
	++_M_current;
 800a29c:	687b      	ldr	r3, [r7, #4]
 800a29e:	681b      	ldr	r3, [r3, #0]
 800a2a0:	1d1a      	adds	r2, r3, #4
 800a2a2:	687b      	ldr	r3, [r7, #4]
 800a2a4:	601a      	str	r2, [r3, #0]
	return *this;
 800a2a6:	687b      	ldr	r3, [r7, #4]
      }
 800a2a8:	4618      	mov	r0, r3
 800a2aa:	370c      	adds	r7, #12
 800a2ac:	46bd      	mov	sp, r7
 800a2ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a2b2:	4770      	bx	lr

0800a2b4 <_ZNK9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
 800a2b4:	b480      	push	{r7}
 800a2b6:	b083      	sub	sp, #12
 800a2b8:	af00      	add	r7, sp, #0
 800a2ba:	6078      	str	r0, [r7, #4]
      { return *_M_current; }
 800a2bc:	687b      	ldr	r3, [r7, #4]
 800a2be:	681b      	ldr	r3, [r3, #0]
 800a2c0:	4618      	mov	r0, r3
 800a2c2:	370c      	adds	r7, #12
 800a2c4:	46bd      	mov	sp, r7
 800a2c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a2ca:	4770      	bx	lr

0800a2cc <_ZNSt6vectorIP14And_expressionSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
 800a2cc:	b5b0      	push	{r4, r5, r7, lr}
 800a2ce:	b082      	sub	sp, #8
 800a2d0:	af00      	add	r7, sp, #0
 800a2d2:	6078      	str	r0, [r7, #4]
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 800a2d4:	687b      	ldr	r3, [r7, #4]
 800a2d6:	681c      	ldr	r4, [r3, #0]
 800a2d8:	687b      	ldr	r3, [r7, #4]
 800a2da:	685d      	ldr	r5, [r3, #4]
		      _M_get_Tp_allocator());
 800a2dc:	687b      	ldr	r3, [r7, #4]
 800a2de:	4618      	mov	r0, r3
 800a2e0:	f000 fbc8 	bl	800aa74 <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 800a2e4:	4603      	mov	r3, r0
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 800a2e6:	461a      	mov	r2, r3
 800a2e8:	4629      	mov	r1, r5
 800a2ea:	4620      	mov	r0, r4
 800a2ec:	f000 fbcd 	bl	800aa8a <_ZSt8_DestroyIPP14And_expressionS1_EvT_S3_RSaIT0_E>
      }
 800a2f0:	687b      	ldr	r3, [r7, #4]
 800a2f2:	4618      	mov	r0, r3
 800a2f4:	f000 fba5 	bl	800aa42 <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EED1Ev>
 800a2f8:	687b      	ldr	r3, [r7, #4]
 800a2fa:	4618      	mov	r0, r3
 800a2fc:	3708      	adds	r7, #8
 800a2fe:	46bd      	mov	sp, r7
 800a300:	bdb0      	pop	{r4, r5, r7, pc}

0800a302 <_ZNSt6vectorIP14And_expressionSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 800a302:	b580      	push	{r7, lr}
 800a304:	b084      	sub	sp, #16
 800a306:	af00      	add	r7, sp, #0
 800a308:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_start); }
 800a30a:	687a      	ldr	r2, [r7, #4]
 800a30c:	f107 030c 	add.w	r3, r7, #12
 800a310:	4611      	mov	r1, r2
 800a312:	4618      	mov	r0, r3
 800a314:	f000 fbc7 	bl	800aaa6 <_ZN9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 800a318:	68fb      	ldr	r3, [r7, #12]
 800a31a:	4618      	mov	r0, r3
 800a31c:	3710      	adds	r7, #16
 800a31e:	46bd      	mov	sp, r7
 800a320:	bd80      	pop	{r7, pc}

0800a322 <_ZNSt6vectorIP14And_expressionSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 800a322:	b580      	push	{r7, lr}
 800a324:	b084      	sub	sp, #16
 800a326:	af00      	add	r7, sp, #0
 800a328:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_finish); }
 800a32a:	687b      	ldr	r3, [r7, #4]
 800a32c:	1d1a      	adds	r2, r3, #4
 800a32e:	f107 030c 	add.w	r3, r7, #12
 800a332:	4611      	mov	r1, r2
 800a334:	4618      	mov	r0, r3
 800a336:	f000 fbb6 	bl	800aaa6 <_ZN9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 800a33a:	68fb      	ldr	r3, [r7, #12]
 800a33c:	4618      	mov	r0, r3
 800a33e:	3710      	adds	r7, #16
 800a340:	46bd      	mov	sp, r7
 800a342:	bd80      	pop	{r7, pc}

0800a344 <_ZN9__gnu_cxxneIPP14And_expressionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
 800a344:	b590      	push	{r4, r7, lr}
 800a346:	b083      	sub	sp, #12
 800a348:	af00      	add	r7, sp, #0
 800a34a:	6078      	str	r0, [r7, #4]
 800a34c:	6039      	str	r1, [r7, #0]
    { return __lhs.base() != __rhs.base(); }
 800a34e:	6878      	ldr	r0, [r7, #4]
 800a350:	f000 fbb9 	bl	800aac6 <_ZNK9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 800a354:	4603      	mov	r3, r0
 800a356:	681c      	ldr	r4, [r3, #0]
 800a358:	6838      	ldr	r0, [r7, #0]
 800a35a:	f000 fbb4 	bl	800aac6 <_ZNK9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 800a35e:	4603      	mov	r3, r0
 800a360:	681b      	ldr	r3, [r3, #0]
 800a362:	429c      	cmp	r4, r3
 800a364:	bf14      	ite	ne
 800a366:	2301      	movne	r3, #1
 800a368:	2300      	moveq	r3, #0
 800a36a:	b2db      	uxtb	r3, r3
 800a36c:	4618      	mov	r0, r3
 800a36e:	370c      	adds	r7, #12
 800a370:	46bd      	mov	sp, r7
 800a372:	bd90      	pop	{r4, r7, pc}

0800a374 <_ZN9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
 800a374:	b480      	push	{r7}
 800a376:	b083      	sub	sp, #12
 800a378:	af00      	add	r7, sp, #0
 800a37a:	6078      	str	r0, [r7, #4]
	++_M_current;
 800a37c:	687b      	ldr	r3, [r7, #4]
 800a37e:	681b      	ldr	r3, [r3, #0]
 800a380:	1d1a      	adds	r2, r3, #4
 800a382:	687b      	ldr	r3, [r7, #4]
 800a384:	601a      	str	r2, [r3, #0]
	return *this;
 800a386:	687b      	ldr	r3, [r7, #4]
      }
 800a388:	4618      	mov	r0, r3
 800a38a:	370c      	adds	r7, #12
 800a38c:	46bd      	mov	sp, r7
 800a38e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a392:	4770      	bx	lr

0800a394 <_ZNK9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
 800a394:	b480      	push	{r7}
 800a396:	b083      	sub	sp, #12
 800a398:	af00      	add	r7, sp, #0
 800a39a:	6078      	str	r0, [r7, #4]
      { return *_M_current; }
 800a39c:	687b      	ldr	r3, [r7, #4]
 800a39e:	681b      	ldr	r3, [r3, #0]
 800a3a0:	4618      	mov	r0, r3
 800a3a2:	370c      	adds	r7, #12
 800a3a4:	46bd      	mov	sp, r7
 800a3a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a3aa:	4770      	bx	lr

0800a3ac <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE8_M_resetEv>:
      void _M_reset()
 800a3ac:	b580      	push	{r7, lr}
 800a3ae:	b082      	sub	sp, #8
 800a3b0:	af00      	add	r7, sp, #0
 800a3b2:	6078      	str	r0, [r7, #4]
	_M_reset_impl();
 800a3b4:	6878      	ldr	r0, [r7, #4]
 800a3b6:	f000 fecb 	bl	800b150 <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEv>
	_M_index = variant_npos;
 800a3ba:	687b      	ldr	r3, [r7, #4]
 800a3bc:	22ff      	movs	r2, #255	; 0xff
 800a3be:	761a      	strb	r2, [r3, #24]
      }
 800a3c0:	bf00      	nop
 800a3c2:	3708      	adds	r7, #8
 800a3c4:	46bd      	mov	sp, r7
 800a3c6:	bd80      	pop	{r7, pc}

0800a3c8 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP8VariableP13Function_callEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 800a3c8:	b580      	push	{r7, lr}
 800a3ca:	b082      	sub	sp, #8
 800a3cc:	af00      	add	r7, sp, #0
 800a3ce:	7138      	strb	r0, [r7, #4]
 800a3d0:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 800a3d2:	6838      	ldr	r0, [r7, #0]
 800a3d4:	f000 ff05 	bl	800b1e2 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP8VariableP13Function_callEEEEOT_RNSt16remove_referenceIS9_E4typeE>
 800a3d8:	4603      	mov	r3, r0
 800a3da:	4618      	mov	r0, r3
 800a3dc:	f000 ff0c 	bl	800b1f8 <_ZNRSt8__detail9__variant14_UninitializedIP8VariableLb1EE6_M_getEv>
 800a3e0:	4603      	mov	r3, r0
 800a3e2:	4618      	mov	r0, r3
 800a3e4:	3708      	adds	r7, #8
 800a3e6:	46bd      	mov	sp, r7
 800a3e8:	bd80      	pop	{r7, pc}

0800a3ea <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800a3ea:	b590      	push	{r4, r7, lr}
 800a3ec:	b083      	sub	sp, #12
 800a3ee:	af00      	add	r7, sp, #0
 800a3f0:	7138      	strb	r0, [r7, #4]
 800a3f2:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800a3f4:	6838      	ldr	r0, [r7, #0]
 800a3f6:	f000 fee9 	bl	800b1cc <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800a3fa:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800a3fc:	4619      	mov	r1, r3
 800a3fe:	4620      	mov	r0, r4
 800a400:	f7ff ffe2 	bl	800a3c8 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP8VariableP13Function_callEEEEEDcSt16in_place_index_tILj0EEOT_>
 800a404:	4603      	mov	r3, r0
    }
 800a406:	4618      	mov	r0, r3
 800a408:	370c      	adds	r7, #12
 800a40a:	46bd      	mov	sp, r7
 800a40c:	bd90      	pop	{r4, r7, pc}

0800a40e <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJfNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800a40e:	b590      	push	{r4, r7, lr}
 800a410:	b083      	sub	sp, #12
 800a412:	af00      	add	r7, sp, #0
 800a414:	7138      	strb	r0, [r7, #4]
 800a416:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800a418:	6838      	ldr	r0, [r7, #0]
 800a41a:	f000 fecc 	bl	800b1b6 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800a41e:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800a420:	4619      	mov	r1, r3
 800a422:	4620      	mov	r0, r4
 800a424:	f7ff ffe1 	bl	800a3ea <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800a428:	4603      	mov	r3, r0
    }
 800a42a:	4618      	mov	r0, r3
 800a42c:	370c      	adds	r7, #12
 800a42e:	46bd      	mov	sp, r7
 800a430:	bd90      	pop	{r4, r7, pc}

0800a432 <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800a432:	b590      	push	{r4, r7, lr}
 800a434:	b083      	sub	sp, #12
 800a436:	af00      	add	r7, sp, #0
 800a438:	7138      	strb	r0, [r7, #4]
 800a43a:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800a43c:	6838      	ldr	r0, [r7, #0]
 800a43e:	f000 feaf 	bl	800b1a0 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800a442:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800a444:	4619      	mov	r1, r3
 800a446:	4620      	mov	r0, r4
 800a448:	f7ff ffe1 	bl	800a40e <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJfNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800a44c:	4603      	mov	r3, r0
    }
 800a44e:	4618      	mov	r0, r3
 800a450:	370c      	adds	r7, #12
 800a452:	46bd      	mov	sp, r7
 800a454:	bd90      	pop	{r4, r7, pc}

0800a456 <_ZNSt8__detail9__variant5__getILj4ERNS0_15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800a456:	b590      	push	{r4, r7, lr}
 800a458:	b083      	sub	sp, #12
 800a45a:	af00      	add	r7, sp, #0
 800a45c:	7138      	strb	r0, [r7, #4]
 800a45e:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800a460:	6838      	ldr	r0, [r7, #0]
 800a462:	f000 fe92 	bl	800b18a <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800a466:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800a468:	4619      	mov	r1, r3
 800a46a:	4620      	mov	r0, r4
 800a46c:	f7ff ffe1 	bl	800a432 <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800a470:	4603      	mov	r3, r0
    }
 800a472:	4618      	mov	r0, r3
 800a474:	370c      	adds	r7, #12
 800a476:	46bd      	mov	sp, r7
 800a478:	bd90      	pop	{r4, r7, pc}

0800a47a <_ZNSt8__detail9__variant5__getILj4ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800a47a:	b590      	push	{r4, r7, lr}
 800a47c:	b083      	sub	sp, #12
 800a47e:	af00      	add	r7, sp, #0
 800a480:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800a482:	6878      	ldr	r0, [r7, #4]
 800a484:	f000 fe76 	bl	800b174 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800a488:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800a48a:	4619      	mov	r1, r3
 800a48c:	4620      	mov	r0, r4
 800a48e:	f7ff ffe2 	bl	800a456 <_ZNSt8__detail9__variant5__getILj4ERNS0_15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800a492:	4603      	mov	r3, r0
    }
 800a494:	4618      	mov	r0, r3
 800a496:	370c      	adds	r7, #12
 800a498:	46bd      	mov	sp, r7
 800a49a:	bd90      	pop	{r4, r7, pc}

0800a49c <_ZSt3getILj4EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
    get(variant<_Types...>& __v)
 800a49c:	b580      	push	{r7, lr}
 800a49e:	b082      	sub	sp, #8
 800a4a0:	af00      	add	r7, sp, #0
 800a4a2:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 800a4a4:	6878      	ldr	r0, [r7, #4]
 800a4a6:	f7ff fd02 	bl	8009eae <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 800a4aa:	4603      	mov	r3, r0
 800a4ac:	2b04      	cmp	r3, #4
 800a4ae:	bf14      	ite	ne
 800a4b0:	2301      	movne	r3, #1
 800a4b2:	2300      	moveq	r3, #0
 800a4b4:	b2db      	uxtb	r3, r3
 800a4b6:	2b00      	cmp	r3, #0
 800a4b8:	d002      	beq.n	800a4c0 <_ZSt3getILj4EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 800a4ba:	4805      	ldr	r0, [pc, #20]	; (800a4d0 <_ZSt3getILj4EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 800a4bc:	f7f6 fdd9 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 800a4c0:	6878      	ldr	r0, [r7, #4]
 800a4c2:	f7ff ffda 	bl	800a47a <_ZNSt8__detail9__variant5__getILj4ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 800a4c6:	4603      	mov	r3, r0
    }
 800a4c8:	4618      	mov	r0, r3
 800a4ca:	3708      	adds	r7, #8
 800a4cc:	46bd      	mov	sp, r7
 800a4ce:	bd80      	pop	{r7, pc}
 800a4d0:	080275fc 	.word	0x080275fc

0800a4d4 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP13Function_callEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 800a4d4:	b580      	push	{r7, lr}
 800a4d6:	b082      	sub	sp, #8
 800a4d8:	af00      	add	r7, sp, #0
 800a4da:	7138      	strb	r0, [r7, #4]
 800a4dc:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 800a4de:	6838      	ldr	r0, [r7, #0]
 800a4e0:	f000 fe95 	bl	800b20e <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP13Function_callEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 800a4e4:	4603      	mov	r3, r0
 800a4e6:	4618      	mov	r0, r3
 800a4e8:	f7f9 f95b 	bl	80037a2 <_ZNRSt8__detail9__variant14_UninitializedIP13Function_callLb1EE6_M_getEv>
 800a4ec:	4603      	mov	r3, r0
 800a4ee:	4618      	mov	r0, r3
 800a4f0:	3708      	adds	r7, #8
 800a4f2:	46bd      	mov	sp, r7
 800a4f4:	bd80      	pop	{r7, pc}

0800a4f6 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800a4f6:	b590      	push	{r4, r7, lr}
 800a4f8:	b083      	sub	sp, #12
 800a4fa:	af00      	add	r7, sp, #0
 800a4fc:	7138      	strb	r0, [r7, #4]
 800a4fe:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800a500:	6838      	ldr	r0, [r7, #0]
 800a502:	f000 fe6e 	bl	800b1e2 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP8VariableP13Function_callEEEEOT_RNSt16remove_referenceIS9_E4typeE>
 800a506:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800a508:	4619      	mov	r1, r3
 800a50a:	4620      	mov	r0, r4
 800a50c:	f7ff ffe2 	bl	800a4d4 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP13Function_callEEEEEDcSt16in_place_index_tILj0EEOT_>
 800a510:	4603      	mov	r3, r0
    }
 800a512:	4618      	mov	r0, r3
 800a514:	370c      	adds	r7, #12
 800a516:	46bd      	mov	sp, r7
 800a518:	bd90      	pop	{r4, r7, pc}

0800a51a <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800a51a:	b590      	push	{r4, r7, lr}
 800a51c:	b083      	sub	sp, #12
 800a51e:	af00      	add	r7, sp, #0
 800a520:	7138      	strb	r0, [r7, #4]
 800a522:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800a524:	6838      	ldr	r0, [r7, #0]
 800a526:	f000 fe51 	bl	800b1cc <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800a52a:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800a52c:	4619      	mov	r1, r3
 800a52e:	4620      	mov	r0, r4
 800a530:	f7ff ffe1 	bl	800a4f6 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800a534:	4603      	mov	r3, r0
    }
 800a536:	4618      	mov	r0, r3
 800a538:	370c      	adds	r7, #12
 800a53a:	46bd      	mov	sp, r7
 800a53c:	bd90      	pop	{r4, r7, pc}

0800a53e <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJfNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800a53e:	b590      	push	{r4, r7, lr}
 800a540:	b083      	sub	sp, #12
 800a542:	af00      	add	r7, sp, #0
 800a544:	7138      	strb	r0, [r7, #4]
 800a546:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800a548:	6838      	ldr	r0, [r7, #0]
 800a54a:	f000 fe34 	bl	800b1b6 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800a54e:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800a550:	4619      	mov	r1, r3
 800a552:	4620      	mov	r0, r4
 800a554:	f7ff ffe1 	bl	800a51a <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800a558:	4603      	mov	r3, r0
    }
 800a55a:	4618      	mov	r0, r3
 800a55c:	370c      	adds	r7, #12
 800a55e:	46bd      	mov	sp, r7
 800a560:	bd90      	pop	{r4, r7, pc}

0800a562 <_ZNSt8__detail9__variant5__getILj4ERNS0_15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800a562:	b590      	push	{r4, r7, lr}
 800a564:	b083      	sub	sp, #12
 800a566:	af00      	add	r7, sp, #0
 800a568:	7138      	strb	r0, [r7, #4]
 800a56a:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800a56c:	6838      	ldr	r0, [r7, #0]
 800a56e:	f000 fe17 	bl	800b1a0 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800a572:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800a574:	4619      	mov	r1, r3
 800a576:	4620      	mov	r0, r4
 800a578:	f7ff ffe1 	bl	800a53e <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJfNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800a57c:	4603      	mov	r3, r0
    }
 800a57e:	4618      	mov	r0, r3
 800a580:	370c      	adds	r7, #12
 800a582:	46bd      	mov	sp, r7
 800a584:	bd90      	pop	{r4, r7, pc}

0800a586 <_ZNSt8__detail9__variant5__getILj5ERNS0_15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800a586:	b590      	push	{r4, r7, lr}
 800a588:	b083      	sub	sp, #12
 800a58a:	af00      	add	r7, sp, #0
 800a58c:	7138      	strb	r0, [r7, #4]
 800a58e:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800a590:	6838      	ldr	r0, [r7, #0]
 800a592:	f000 fdfa 	bl	800b18a <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800a596:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800a598:	4619      	mov	r1, r3
 800a59a:	4620      	mov	r0, r4
 800a59c:	f7ff ffe1 	bl	800a562 <_ZNSt8__detail9__variant5__getILj4ERNS0_15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800a5a0:	4603      	mov	r3, r0
    }
 800a5a2:	4618      	mov	r0, r3
 800a5a4:	370c      	adds	r7, #12
 800a5a6:	46bd      	mov	sp, r7
 800a5a8:	bd90      	pop	{r4, r7, pc}

0800a5aa <_ZNSt8__detail9__variant5__getILj5ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800a5aa:	b590      	push	{r4, r7, lr}
 800a5ac:	b083      	sub	sp, #12
 800a5ae:	af00      	add	r7, sp, #0
 800a5b0:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800a5b2:	6878      	ldr	r0, [r7, #4]
 800a5b4:	f000 fdde 	bl	800b174 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800a5b8:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800a5ba:	4619      	mov	r1, r3
 800a5bc:	4620      	mov	r0, r4
 800a5be:	f7ff ffe2 	bl	800a586 <_ZNSt8__detail9__variant5__getILj5ERNS0_15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800a5c2:	4603      	mov	r3, r0
    }
 800a5c4:	4618      	mov	r0, r3
 800a5c6:	370c      	adds	r7, #12
 800a5c8:	46bd      	mov	sp, r7
 800a5ca:	bd90      	pop	{r4, r7, pc}

0800a5cc <_ZSt3getILj5EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
    get(variant<_Types...>& __v)
 800a5cc:	b580      	push	{r7, lr}
 800a5ce:	b082      	sub	sp, #8
 800a5d0:	af00      	add	r7, sp, #0
 800a5d2:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 800a5d4:	6878      	ldr	r0, [r7, #4]
 800a5d6:	f7ff fc6a 	bl	8009eae <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 800a5da:	4603      	mov	r3, r0
 800a5dc:	2b05      	cmp	r3, #5
 800a5de:	bf14      	ite	ne
 800a5e0:	2301      	movne	r3, #1
 800a5e2:	2300      	moveq	r3, #0
 800a5e4:	b2db      	uxtb	r3, r3
 800a5e6:	2b00      	cmp	r3, #0
 800a5e8:	d002      	beq.n	800a5f0 <_ZSt3getILj5EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 800a5ea:	4805      	ldr	r0, [pc, #20]	; (800a600 <_ZSt3getILj5EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 800a5ec:	f7f6 fd41 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 800a5f0:	6878      	ldr	r0, [r7, #4]
 800a5f2:	f7ff ffda 	bl	800a5aa <_ZNSt8__detail9__variant5__getILj5ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 800a5f6:	4603      	mov	r3, r0
    }
 800a5f8:	4618      	mov	r0, r3
 800a5fa:	3708      	adds	r7, #8
 800a5fc:	46bd      	mov	sp, r7
 800a5fe:	bd80      	pop	{r7, pc}
 800a600:	080275fc 	.word	0x080275fc

0800a604 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP10ExpressionEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 800a604:	b580      	push	{r7, lr}
 800a606:	b082      	sub	sp, #8
 800a608:	af00      	add	r7, sp, #0
 800a60a:	7138      	strb	r0, [r7, #4]
 800a60c:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 800a60e:	6838      	ldr	r0, [r7, #0]
 800a610:	f000 fe1e 	bl	800b250 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP10ExpressionEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 800a614:	4603      	mov	r3, r0
 800a616:	4618      	mov	r0, r3
 800a618:	f000 fe25 	bl	800b266 <_ZNRSt8__detail9__variant14_UninitializedIP10ExpressionLb1EE6_M_getEv>
 800a61c:	4603      	mov	r3, r0
 800a61e:	4618      	mov	r0, r3
 800a620:	3708      	adds	r7, #8
 800a622:	46bd      	mov	sp, r7
 800a624:	bd80      	pop	{r7, pc}

0800a626 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJP17Primal_expressionP10ExpressionEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800a626:	b590      	push	{r4, r7, lr}
 800a628:	b083      	sub	sp, #12
 800a62a:	af00      	add	r7, sp, #0
 800a62c:	7138      	strb	r0, [r7, #4]
 800a62e:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800a630:	6838      	ldr	r0, [r7, #0]
 800a632:	f000 fe02 	bl	800b23a <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP17Primal_expressionP10ExpressionEEEEOT_RNSt16remove_referenceIS9_E4typeE>
 800a636:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800a638:	4619      	mov	r1, r3
 800a63a:	4620      	mov	r0, r4
 800a63c:	f7ff ffe2 	bl	800a604 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP10ExpressionEEEEEDcSt16in_place_index_tILj0EEOT_>
 800a640:	4603      	mov	r3, r0
    }
 800a642:	4618      	mov	r0, r3
 800a644:	370c      	adds	r7, #12
 800a646:	46bd      	mov	sp, r7
 800a648:	bd90      	pop	{r4, r7, pc}

0800a64a <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJP17Primal_expressionP10ExpressionEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800a64a:	b590      	push	{r4, r7, lr}
 800a64c:	b083      	sub	sp, #12
 800a64e:	af00      	add	r7, sp, #0
 800a650:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800a652:	6878      	ldr	r0, [r7, #4]
 800a654:	f000 fde6 	bl	800b224 <_ZSt7forwardIRSt7variantIJP17Primal_expressionP10ExpressionEEEOT_RNSt16remove_referenceIS7_E4typeE>
 800a658:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800a65a:	4619      	mov	r1, r3
 800a65c:	4620      	mov	r0, r4
 800a65e:	f7ff ffe2 	bl	800a626 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJP17Primal_expressionP10ExpressionEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800a662:	4603      	mov	r3, r0
    }
 800a664:	4618      	mov	r0, r3
 800a666:	370c      	adds	r7, #12
 800a668:	46bd      	mov	sp, r7
 800a66a:	bd90      	pop	{r4, r7, pc}

0800a66c <_ZSt3getILj1EJP17Primal_expressionP10ExpressionEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERS8_>:
    get(variant<_Types...>& __v)
 800a66c:	b580      	push	{r7, lr}
 800a66e:	b082      	sub	sp, #8
 800a670:	af00      	add	r7, sp, #0
 800a672:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 800a674:	6878      	ldr	r0, [r7, #4]
 800a676:	f7ff fc67 	bl	8009f48 <_ZNKSt7variantIJP17Primal_expressionP10ExpressionEE5indexEv>
 800a67a:	4603      	mov	r3, r0
 800a67c:	2b01      	cmp	r3, #1
 800a67e:	bf14      	ite	ne
 800a680:	2301      	movne	r3, #1
 800a682:	2300      	moveq	r3, #0
 800a684:	b2db      	uxtb	r3, r3
 800a686:	2b00      	cmp	r3, #0
 800a688:	d002      	beq.n	800a690 <_ZSt3getILj1EJP17Primal_expressionP10ExpressionEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERS8_+0x24>
	__throw_bad_variant_access("Unexpected index");
 800a68a:	4805      	ldr	r0, [pc, #20]	; (800a6a0 <_ZSt3getILj1EJP17Primal_expressionP10ExpressionEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERS8_+0x34>)
 800a68c:	f7f6 fcf1 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 800a690:	6878      	ldr	r0, [r7, #4]
 800a692:	f7ff ffda 	bl	800a64a <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJP17Primal_expressionP10ExpressionEEEEDcOT0_>
 800a696:	4603      	mov	r3, r0
    }
 800a698:	4618      	mov	r0, r3
 800a69a:	3708      	adds	r7, #8
 800a69c:	46bd      	mov	sp, r7
 800a69e:	bd80      	pop	{r7, pc}
 800a6a0:	080275fc 	.word	0x080275fc

0800a6a4 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP17Primal_expressionP10ExpressionEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 800a6a4:	b580      	push	{r7, lr}
 800a6a6:	b082      	sub	sp, #8
 800a6a8:	af00      	add	r7, sp, #0
 800a6aa:	7138      	strb	r0, [r7, #4]
 800a6ac:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 800a6ae:	6838      	ldr	r0, [r7, #0]
 800a6b0:	f000 fdc3 	bl	800b23a <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP17Primal_expressionP10ExpressionEEEEOT_RNSt16remove_referenceIS9_E4typeE>
 800a6b4:	4603      	mov	r3, r0
 800a6b6:	4618      	mov	r0, r3
 800a6b8:	f000 fde0 	bl	800b27c <_ZNRSt8__detail9__variant14_UninitializedIP17Primal_expressionLb1EE6_M_getEv>
 800a6bc:	4603      	mov	r3, r0
 800a6be:	4618      	mov	r0, r3
 800a6c0:	3708      	adds	r7, #8
 800a6c2:	46bd      	mov	sp, r7
 800a6c4:	bd80      	pop	{r7, pc}

0800a6c6 <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJP17Primal_expressionP10ExpressionEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800a6c6:	b590      	push	{r4, r7, lr}
 800a6c8:	b083      	sub	sp, #12
 800a6ca:	af00      	add	r7, sp, #0
 800a6cc:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800a6ce:	6878      	ldr	r0, [r7, #4]
 800a6d0:	f000 fda8 	bl	800b224 <_ZSt7forwardIRSt7variantIJP17Primal_expressionP10ExpressionEEEOT_RNSt16remove_referenceIS7_E4typeE>
 800a6d4:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800a6d6:	4619      	mov	r1, r3
 800a6d8:	4620      	mov	r0, r4
 800a6da:	f7ff ffe3 	bl	800a6a4 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP17Primal_expressionP10ExpressionEEEEEDcSt16in_place_index_tILj0EEOT_>
 800a6de:	4603      	mov	r3, r0
    }
 800a6e0:	4618      	mov	r0, r3
 800a6e2:	370c      	adds	r7, #12
 800a6e4:	46bd      	mov	sp, r7
 800a6e6:	bd90      	pop	{r4, r7, pc}

0800a6e8 <_ZSt3getILj0EJP17Primal_expressionP10ExpressionEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERS8_>:
    get(variant<_Types...>& __v)
 800a6e8:	b580      	push	{r7, lr}
 800a6ea:	b082      	sub	sp, #8
 800a6ec:	af00      	add	r7, sp, #0
 800a6ee:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 800a6f0:	6878      	ldr	r0, [r7, #4]
 800a6f2:	f7ff fc29 	bl	8009f48 <_ZNKSt7variantIJP17Primal_expressionP10ExpressionEE5indexEv>
 800a6f6:	4603      	mov	r3, r0
 800a6f8:	2b00      	cmp	r3, #0
 800a6fa:	bf14      	ite	ne
 800a6fc:	2301      	movne	r3, #1
 800a6fe:	2300      	moveq	r3, #0
 800a700:	b2db      	uxtb	r3, r3
 800a702:	2b00      	cmp	r3, #0
 800a704:	d002      	beq.n	800a70c <_ZSt3getILj0EJP17Primal_expressionP10ExpressionEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERS8_+0x24>
	__throw_bad_variant_access("Unexpected index");
 800a706:	4805      	ldr	r0, [pc, #20]	; (800a71c <_ZSt3getILj0EJP17Primal_expressionP10ExpressionEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERS8_+0x34>)
 800a708:	f7f6 fcb3 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 800a70c:	6878      	ldr	r0, [r7, #4]
 800a70e:	f7ff ffda 	bl	800a6c6 <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJP17Primal_expressionP10ExpressionEEEEDcOT0_>
 800a712:	4603      	mov	r3, r0
    }
 800a714:	4618      	mov	r0, r3
 800a716:	3708      	adds	r7, #8
 800a718:	46bd      	mov	sp, r7
 800a71a:	bd80      	pop	{r7, pc}
 800a71c:	080275fc 	.word	0x080275fc

0800a720 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
 800a720:	b580      	push	{r7, lr}
 800a722:	b082      	sub	sp, #8
 800a724:	af00      	add	r7, sp, #0
 800a726:	6078      	str	r0, [r7, #4]
 800a728:	6878      	ldr	r0, [r7, #4]
 800a72a:	f000 fdb2 	bl	800b292 <_ZNSaIP16Power_expressionED1Ev>
 800a72e:	687b      	ldr	r3, [r7, #4]
 800a730:	4618      	mov	r0, r3
 800a732:	3708      	adds	r7, #8
 800a734:	46bd      	mov	sp, r7
 800a736:	bd80      	pop	{r7, pc}

0800a738 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
 800a738:	b580      	push	{r7, lr}
 800a73a:	b082      	sub	sp, #8
 800a73c:	af00      	add	r7, sp, #0
 800a73e:	6078      	str	r0, [r7, #4]
	_M_deallocate(_M_impl._M_start,
 800a740:	687b      	ldr	r3, [r7, #4]
 800a742:	6819      	ldr	r1, [r3, #0]
		      _M_impl._M_end_of_storage - _M_impl._M_start);
 800a744:	687b      	ldr	r3, [r7, #4]
 800a746:	689a      	ldr	r2, [r3, #8]
 800a748:	687b      	ldr	r3, [r7, #4]
 800a74a:	681b      	ldr	r3, [r3, #0]
 800a74c:	1ad3      	subs	r3, r2, r3
 800a74e:	109b      	asrs	r3, r3, #2
	_M_deallocate(_M_impl._M_start,
 800a750:	461a      	mov	r2, r3
 800a752:	6878      	ldr	r0, [r7, #4]
 800a754:	f000 fda9 	bl	800b2aa <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE13_M_deallocateEPS1_j>
      }
 800a758:	687b      	ldr	r3, [r7, #4]
 800a75a:	4618      	mov	r0, r3
 800a75c:	f7ff ffe0 	bl	800a720 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE12_Vector_implD1Ev>
 800a760:	687b      	ldr	r3, [r7, #4]
 800a762:	4618      	mov	r0, r3
 800a764:	3708      	adds	r7, #8
 800a766:	46bd      	mov	sp, r7
 800a768:	bd80      	pop	{r7, pc}

0800a76a <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 800a76a:	b480      	push	{r7}
 800a76c:	b083      	sub	sp, #12
 800a76e:	af00      	add	r7, sp, #0
 800a770:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 800a772:	687b      	ldr	r3, [r7, #4]
 800a774:	4618      	mov	r0, r3
 800a776:	370c      	adds	r7, #12
 800a778:	46bd      	mov	sp, r7
 800a77a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a77e:	4770      	bx	lr

0800a780 <_ZSt8_DestroyIPP16Power_expressionS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 800a780:	b580      	push	{r7, lr}
 800a782:	b084      	sub	sp, #16
 800a784:	af00      	add	r7, sp, #0
 800a786:	60f8      	str	r0, [r7, #12]
 800a788:	60b9      	str	r1, [r7, #8]
 800a78a:	607a      	str	r2, [r7, #4]
      _Destroy(__first, __last);
 800a78c:	68b9      	ldr	r1, [r7, #8]
 800a78e:	68f8      	ldr	r0, [r7, #12]
 800a790:	f000 fd9e 	bl	800b2d0 <_ZSt8_DestroyIPP16Power_expressionEvT_S3_>
    }
 800a794:	bf00      	nop
 800a796:	3710      	adds	r7, #16
 800a798:	46bd      	mov	sp, r7
 800a79a:	bd80      	pop	{r7, pc}

0800a79c <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
 800a79c:	b580      	push	{r7, lr}
 800a79e:	b082      	sub	sp, #8
 800a7a0:	af00      	add	r7, sp, #0
 800a7a2:	6078      	str	r0, [r7, #4]
 800a7a4:	6878      	ldr	r0, [r7, #4]
 800a7a6:	f000 fda0 	bl	800b2ea <_ZNSaI13mult_operatorED1Ev>
 800a7aa:	687b      	ldr	r3, [r7, #4]
 800a7ac:	4618      	mov	r0, r3
 800a7ae:	3708      	adds	r7, #8
 800a7b0:	46bd      	mov	sp, r7
 800a7b2:	bd80      	pop	{r7, pc}

0800a7b4 <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
 800a7b4:	b580      	push	{r7, lr}
 800a7b6:	b082      	sub	sp, #8
 800a7b8:	af00      	add	r7, sp, #0
 800a7ba:	6078      	str	r0, [r7, #4]
	_M_deallocate(_M_impl._M_start,
 800a7bc:	687b      	ldr	r3, [r7, #4]
 800a7be:	6819      	ldr	r1, [r3, #0]
		      _M_impl._M_end_of_storage - _M_impl._M_start);
 800a7c0:	687b      	ldr	r3, [r7, #4]
 800a7c2:	689a      	ldr	r2, [r3, #8]
 800a7c4:	687b      	ldr	r3, [r7, #4]
 800a7c6:	681b      	ldr	r3, [r3, #0]
 800a7c8:	1ad3      	subs	r3, r2, r3
	_M_deallocate(_M_impl._M_start,
 800a7ca:	461a      	mov	r2, r3
 800a7cc:	6878      	ldr	r0, [r7, #4]
 800a7ce:	f000 fd98 	bl	800b302 <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE13_M_deallocateEPS0_j>
      }
 800a7d2:	687b      	ldr	r3, [r7, #4]
 800a7d4:	4618      	mov	r0, r3
 800a7d6:	f7ff ffe1 	bl	800a79c <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE12_Vector_implD1Ev>
 800a7da:	687b      	ldr	r3, [r7, #4]
 800a7dc:	4618      	mov	r0, r3
 800a7de:	3708      	adds	r7, #8
 800a7e0:	46bd      	mov	sp, r7
 800a7e2:	bd80      	pop	{r7, pc}

0800a7e4 <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 800a7e4:	b480      	push	{r7}
 800a7e6:	b083      	sub	sp, #12
 800a7e8:	af00      	add	r7, sp, #0
 800a7ea:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 800a7ec:	687b      	ldr	r3, [r7, #4]
 800a7ee:	4618      	mov	r0, r3
 800a7f0:	370c      	adds	r7, #12
 800a7f2:	46bd      	mov	sp, r7
 800a7f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a7f8:	4770      	bx	lr

0800a7fa <_ZSt8_DestroyIP13mult_operatorS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 800a7fa:	b580      	push	{r7, lr}
 800a7fc:	b084      	sub	sp, #16
 800a7fe:	af00      	add	r7, sp, #0
 800a800:	60f8      	str	r0, [r7, #12]
 800a802:	60b9      	str	r1, [r7, #8]
 800a804:	607a      	str	r2, [r7, #4]
      _Destroy(__first, __last);
 800a806:	68b9      	ldr	r1, [r7, #8]
 800a808:	68f8      	ldr	r0, [r7, #12]
 800a80a:	f000 fd8d 	bl	800b328 <_ZSt8_DestroyIP13mult_operatorEvT_S2_>
    }
 800a80e:	bf00      	nop
 800a810:	3710      	adds	r7, #16
 800a812:	46bd      	mov	sp, r7
 800a814:	bd80      	pop	{r7, pc}

0800a816 <_ZN9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 800a816:	b480      	push	{r7}
 800a818:	b083      	sub	sp, #12
 800a81a:	af00      	add	r7, sp, #0
 800a81c:	6078      	str	r0, [r7, #4]
 800a81e:	6039      	str	r1, [r7, #0]
      : _M_current(__i) { }
 800a820:	683b      	ldr	r3, [r7, #0]
 800a822:	681a      	ldr	r2, [r3, #0]
 800a824:	687b      	ldr	r3, [r7, #4]
 800a826:	601a      	str	r2, [r3, #0]
 800a828:	687b      	ldr	r3, [r7, #4]
 800a82a:	4618      	mov	r0, r3
 800a82c:	370c      	adds	r7, #12
 800a82e:	46bd      	mov	sp, r7
 800a830:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a834:	4770      	bx	lr

0800a836 <_ZNK9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
 800a836:	b480      	push	{r7}
 800a838:	b083      	sub	sp, #12
 800a83a:	af00      	add	r7, sp, #0
 800a83c:	6078      	str	r0, [r7, #4]
      { return _M_current; }
 800a83e:	687b      	ldr	r3, [r7, #4]
 800a840:	4618      	mov	r0, r3
 800a842:	370c      	adds	r7, #12
 800a844:	46bd      	mov	sp, r7
 800a846:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a84a:	4770      	bx	lr

0800a84c <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
 800a84c:	b580      	push	{r7, lr}
 800a84e:	b082      	sub	sp, #8
 800a850:	af00      	add	r7, sp, #0
 800a852:	6078      	str	r0, [r7, #4]
 800a854:	6878      	ldr	r0, [r7, #4]
 800a856:	f000 fd74 	bl	800b342 <_ZNSaIP19Multiply_expressionED1Ev>
 800a85a:	687b      	ldr	r3, [r7, #4]
 800a85c:	4618      	mov	r0, r3
 800a85e:	3708      	adds	r7, #8
 800a860:	46bd      	mov	sp, r7
 800a862:	bd80      	pop	{r7, pc}

0800a864 <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
 800a864:	b580      	push	{r7, lr}
 800a866:	b082      	sub	sp, #8
 800a868:	af00      	add	r7, sp, #0
 800a86a:	6078      	str	r0, [r7, #4]
	_M_deallocate(_M_impl._M_start,
 800a86c:	687b      	ldr	r3, [r7, #4]
 800a86e:	6819      	ldr	r1, [r3, #0]
		      _M_impl._M_end_of_storage - _M_impl._M_start);
 800a870:	687b      	ldr	r3, [r7, #4]
 800a872:	689a      	ldr	r2, [r3, #8]
 800a874:	687b      	ldr	r3, [r7, #4]
 800a876:	681b      	ldr	r3, [r3, #0]
 800a878:	1ad3      	subs	r3, r2, r3
 800a87a:	109b      	asrs	r3, r3, #2
	_M_deallocate(_M_impl._M_start,
 800a87c:	461a      	mov	r2, r3
 800a87e:	6878      	ldr	r0, [r7, #4]
 800a880:	f000 fd6b 	bl	800b35a <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE13_M_deallocateEPS1_j>
      }
 800a884:	687b      	ldr	r3, [r7, #4]
 800a886:	4618      	mov	r0, r3
 800a888:	f7ff ffe0 	bl	800a84c <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE12_Vector_implD1Ev>
 800a88c:	687b      	ldr	r3, [r7, #4]
 800a88e:	4618      	mov	r0, r3
 800a890:	3708      	adds	r7, #8
 800a892:	46bd      	mov	sp, r7
 800a894:	bd80      	pop	{r7, pc}

0800a896 <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 800a896:	b480      	push	{r7}
 800a898:	b083      	sub	sp, #12
 800a89a:	af00      	add	r7, sp, #0
 800a89c:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 800a89e:	687b      	ldr	r3, [r7, #4]
 800a8a0:	4618      	mov	r0, r3
 800a8a2:	370c      	adds	r7, #12
 800a8a4:	46bd      	mov	sp, r7
 800a8a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a8aa:	4770      	bx	lr

0800a8ac <_ZSt8_DestroyIPP19Multiply_expressionS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 800a8ac:	b580      	push	{r7, lr}
 800a8ae:	b084      	sub	sp, #16
 800a8b0:	af00      	add	r7, sp, #0
 800a8b2:	60f8      	str	r0, [r7, #12]
 800a8b4:	60b9      	str	r1, [r7, #8]
 800a8b6:	607a      	str	r2, [r7, #4]
      _Destroy(__first, __last);
 800a8b8:	68b9      	ldr	r1, [r7, #8]
 800a8ba:	68f8      	ldr	r0, [r7, #12]
 800a8bc:	f000 fd60 	bl	800b380 <_ZSt8_DestroyIPP19Multiply_expressionEvT_S3_>
    }
 800a8c0:	bf00      	nop
 800a8c2:	3710      	adds	r7, #16
 800a8c4:	46bd      	mov	sp, r7
 800a8c6:	bd80      	pop	{r7, pc}

0800a8c8 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
 800a8c8:	b580      	push	{r7, lr}
 800a8ca:	b082      	sub	sp, #8
 800a8cc:	af00      	add	r7, sp, #0
 800a8ce:	6078      	str	r0, [r7, #4]
 800a8d0:	6878      	ldr	r0, [r7, #4]
 800a8d2:	f000 fd62 	bl	800b39a <_ZNSaI12sum_operatorED1Ev>
 800a8d6:	687b      	ldr	r3, [r7, #4]
 800a8d8:	4618      	mov	r0, r3
 800a8da:	3708      	adds	r7, #8
 800a8dc:	46bd      	mov	sp, r7
 800a8de:	bd80      	pop	{r7, pc}

0800a8e0 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
 800a8e0:	b580      	push	{r7, lr}
 800a8e2:	b082      	sub	sp, #8
 800a8e4:	af00      	add	r7, sp, #0
 800a8e6:	6078      	str	r0, [r7, #4]
	_M_deallocate(_M_impl._M_start,
 800a8e8:	687b      	ldr	r3, [r7, #4]
 800a8ea:	6819      	ldr	r1, [r3, #0]
		      _M_impl._M_end_of_storage - _M_impl._M_start);
 800a8ec:	687b      	ldr	r3, [r7, #4]
 800a8ee:	689a      	ldr	r2, [r3, #8]
 800a8f0:	687b      	ldr	r3, [r7, #4]
 800a8f2:	681b      	ldr	r3, [r3, #0]
 800a8f4:	1ad3      	subs	r3, r2, r3
	_M_deallocate(_M_impl._M_start,
 800a8f6:	461a      	mov	r2, r3
 800a8f8:	6878      	ldr	r0, [r7, #4]
 800a8fa:	f000 fd5a 	bl	800b3b2 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE13_M_deallocateEPS0_j>
      }
 800a8fe:	687b      	ldr	r3, [r7, #4]
 800a900:	4618      	mov	r0, r3
 800a902:	f7ff ffe1 	bl	800a8c8 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE12_Vector_implD1Ev>
 800a906:	687b      	ldr	r3, [r7, #4]
 800a908:	4618      	mov	r0, r3
 800a90a:	3708      	adds	r7, #8
 800a90c:	46bd      	mov	sp, r7
 800a90e:	bd80      	pop	{r7, pc}

0800a910 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 800a910:	b480      	push	{r7}
 800a912:	b083      	sub	sp, #12
 800a914:	af00      	add	r7, sp, #0
 800a916:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 800a918:	687b      	ldr	r3, [r7, #4]
 800a91a:	4618      	mov	r0, r3
 800a91c:	370c      	adds	r7, #12
 800a91e:	46bd      	mov	sp, r7
 800a920:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a924:	4770      	bx	lr

0800a926 <_ZSt8_DestroyIP12sum_operatorS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 800a926:	b580      	push	{r7, lr}
 800a928:	b084      	sub	sp, #16
 800a92a:	af00      	add	r7, sp, #0
 800a92c:	60f8      	str	r0, [r7, #12]
 800a92e:	60b9      	str	r1, [r7, #8]
 800a930:	607a      	str	r2, [r7, #4]
      _Destroy(__first, __last);
 800a932:	68b9      	ldr	r1, [r7, #8]
 800a934:	68f8      	ldr	r0, [r7, #12]
 800a936:	f000 fd4f 	bl	800b3d8 <_ZSt8_DestroyIP12sum_operatorEvT_S2_>
    }
 800a93a:	bf00      	nop
 800a93c:	3710      	adds	r7, #16
 800a93e:	46bd      	mov	sp, r7
 800a940:	bd80      	pop	{r7, pc}

0800a942 <_ZN9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 800a942:	b480      	push	{r7}
 800a944:	b083      	sub	sp, #12
 800a946:	af00      	add	r7, sp, #0
 800a948:	6078      	str	r0, [r7, #4]
 800a94a:	6039      	str	r1, [r7, #0]
      : _M_current(__i) { }
 800a94c:	683b      	ldr	r3, [r7, #0]
 800a94e:	681a      	ldr	r2, [r3, #0]
 800a950:	687b      	ldr	r3, [r7, #4]
 800a952:	601a      	str	r2, [r3, #0]
 800a954:	687b      	ldr	r3, [r7, #4]
 800a956:	4618      	mov	r0, r3
 800a958:	370c      	adds	r7, #12
 800a95a:	46bd      	mov	sp, r7
 800a95c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a960:	4770      	bx	lr

0800a962 <_ZNK9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
 800a962:	b480      	push	{r7}
 800a964:	b083      	sub	sp, #12
 800a966:	af00      	add	r7, sp, #0
 800a968:	6078      	str	r0, [r7, #4]
      { return _M_current; }
 800a96a:	687b      	ldr	r3, [r7, #4]
 800a96c:	4618      	mov	r0, r3
 800a96e:	370c      	adds	r7, #12
 800a970:	46bd      	mov	sp, r7
 800a972:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a976:	4770      	bx	lr

0800a978 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
 800a978:	b580      	push	{r7, lr}
 800a97a:	b082      	sub	sp, #8
 800a97c:	af00      	add	r7, sp, #0
 800a97e:	6078      	str	r0, [r7, #4]
 800a980:	6878      	ldr	r0, [r7, #4]
 800a982:	f000 fd36 	bl	800b3f2 <_ZNSaIP18Compare_expressionED1Ev>
 800a986:	687b      	ldr	r3, [r7, #4]
 800a988:	4618      	mov	r0, r3
 800a98a:	3708      	adds	r7, #8
 800a98c:	46bd      	mov	sp, r7
 800a98e:	bd80      	pop	{r7, pc}

0800a990 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
 800a990:	b580      	push	{r7, lr}
 800a992:	b082      	sub	sp, #8
 800a994:	af00      	add	r7, sp, #0
 800a996:	6078      	str	r0, [r7, #4]
	_M_deallocate(_M_impl._M_start,
 800a998:	687b      	ldr	r3, [r7, #4]
 800a99a:	6819      	ldr	r1, [r3, #0]
		      _M_impl._M_end_of_storage - _M_impl._M_start);
 800a99c:	687b      	ldr	r3, [r7, #4]
 800a99e:	689a      	ldr	r2, [r3, #8]
 800a9a0:	687b      	ldr	r3, [r7, #4]
 800a9a2:	681b      	ldr	r3, [r3, #0]
 800a9a4:	1ad3      	subs	r3, r2, r3
 800a9a6:	109b      	asrs	r3, r3, #2
	_M_deallocate(_M_impl._M_start,
 800a9a8:	461a      	mov	r2, r3
 800a9aa:	6878      	ldr	r0, [r7, #4]
 800a9ac:	f000 fd2d 	bl	800b40a <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE13_M_deallocateEPS1_j>
      }
 800a9b0:	687b      	ldr	r3, [r7, #4]
 800a9b2:	4618      	mov	r0, r3
 800a9b4:	f7ff ffe0 	bl	800a978 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE12_Vector_implD1Ev>
 800a9b8:	687b      	ldr	r3, [r7, #4]
 800a9ba:	4618      	mov	r0, r3
 800a9bc:	3708      	adds	r7, #8
 800a9be:	46bd      	mov	sp, r7
 800a9c0:	bd80      	pop	{r7, pc}

0800a9c2 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 800a9c2:	b480      	push	{r7}
 800a9c4:	b083      	sub	sp, #12
 800a9c6:	af00      	add	r7, sp, #0
 800a9c8:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 800a9ca:	687b      	ldr	r3, [r7, #4]
 800a9cc:	4618      	mov	r0, r3
 800a9ce:	370c      	adds	r7, #12
 800a9d0:	46bd      	mov	sp, r7
 800a9d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a9d6:	4770      	bx	lr

0800a9d8 <_ZSt8_DestroyIPP18Compare_expressionS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 800a9d8:	b580      	push	{r7, lr}
 800a9da:	b084      	sub	sp, #16
 800a9dc:	af00      	add	r7, sp, #0
 800a9de:	60f8      	str	r0, [r7, #12]
 800a9e0:	60b9      	str	r1, [r7, #8]
 800a9e2:	607a      	str	r2, [r7, #4]
      _Destroy(__first, __last);
 800a9e4:	68b9      	ldr	r1, [r7, #8]
 800a9e6:	68f8      	ldr	r0, [r7, #12]
 800a9e8:	f000 fd22 	bl	800b430 <_ZSt8_DestroyIPP18Compare_expressionEvT_S3_>
    }
 800a9ec:	bf00      	nop
 800a9ee:	3710      	adds	r7, #16
 800a9f0:	46bd      	mov	sp, r7
 800a9f2:	bd80      	pop	{r7, pc}

0800a9f4 <_ZN9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 800a9f4:	b480      	push	{r7}
 800a9f6:	b083      	sub	sp, #12
 800a9f8:	af00      	add	r7, sp, #0
 800a9fa:	6078      	str	r0, [r7, #4]
 800a9fc:	6039      	str	r1, [r7, #0]
      : _M_current(__i) { }
 800a9fe:	683b      	ldr	r3, [r7, #0]
 800aa00:	681a      	ldr	r2, [r3, #0]
 800aa02:	687b      	ldr	r3, [r7, #4]
 800aa04:	601a      	str	r2, [r3, #0]
 800aa06:	687b      	ldr	r3, [r7, #4]
 800aa08:	4618      	mov	r0, r3
 800aa0a:	370c      	adds	r7, #12
 800aa0c:	46bd      	mov	sp, r7
 800aa0e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aa12:	4770      	bx	lr

0800aa14 <_ZNK9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
 800aa14:	b480      	push	{r7}
 800aa16:	b083      	sub	sp, #12
 800aa18:	af00      	add	r7, sp, #0
 800aa1a:	6078      	str	r0, [r7, #4]
      { return _M_current; }
 800aa1c:	687b      	ldr	r3, [r7, #4]
 800aa1e:	4618      	mov	r0, r3
 800aa20:	370c      	adds	r7, #12
 800aa22:	46bd      	mov	sp, r7
 800aa24:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aa28:	4770      	bx	lr

0800aa2a <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
 800aa2a:	b580      	push	{r7, lr}
 800aa2c:	b082      	sub	sp, #8
 800aa2e:	af00      	add	r7, sp, #0
 800aa30:	6078      	str	r0, [r7, #4]
 800aa32:	6878      	ldr	r0, [r7, #4]
 800aa34:	f000 fd09 	bl	800b44a <_ZNSaIP14And_expressionED1Ev>
 800aa38:	687b      	ldr	r3, [r7, #4]
 800aa3a:	4618      	mov	r0, r3
 800aa3c:	3708      	adds	r7, #8
 800aa3e:	46bd      	mov	sp, r7
 800aa40:	bd80      	pop	{r7, pc}

0800aa42 <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
 800aa42:	b580      	push	{r7, lr}
 800aa44:	b082      	sub	sp, #8
 800aa46:	af00      	add	r7, sp, #0
 800aa48:	6078      	str	r0, [r7, #4]
	_M_deallocate(_M_impl._M_start,
 800aa4a:	687b      	ldr	r3, [r7, #4]
 800aa4c:	6819      	ldr	r1, [r3, #0]
		      _M_impl._M_end_of_storage - _M_impl._M_start);
 800aa4e:	687b      	ldr	r3, [r7, #4]
 800aa50:	689a      	ldr	r2, [r3, #8]
 800aa52:	687b      	ldr	r3, [r7, #4]
 800aa54:	681b      	ldr	r3, [r3, #0]
 800aa56:	1ad3      	subs	r3, r2, r3
 800aa58:	109b      	asrs	r3, r3, #2
	_M_deallocate(_M_impl._M_start,
 800aa5a:	461a      	mov	r2, r3
 800aa5c:	6878      	ldr	r0, [r7, #4]
 800aa5e:	f000 fd00 	bl	800b462 <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE13_M_deallocateEPS1_j>
      }
 800aa62:	687b      	ldr	r3, [r7, #4]
 800aa64:	4618      	mov	r0, r3
 800aa66:	f7ff ffe0 	bl	800aa2a <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE12_Vector_implD1Ev>
 800aa6a:	687b      	ldr	r3, [r7, #4]
 800aa6c:	4618      	mov	r0, r3
 800aa6e:	3708      	adds	r7, #8
 800aa70:	46bd      	mov	sp, r7
 800aa72:	bd80      	pop	{r7, pc}

0800aa74 <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 800aa74:	b480      	push	{r7}
 800aa76:	b083      	sub	sp, #12
 800aa78:	af00      	add	r7, sp, #0
 800aa7a:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 800aa7c:	687b      	ldr	r3, [r7, #4]
 800aa7e:	4618      	mov	r0, r3
 800aa80:	370c      	adds	r7, #12
 800aa82:	46bd      	mov	sp, r7
 800aa84:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aa88:	4770      	bx	lr

0800aa8a <_ZSt8_DestroyIPP14And_expressionS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 800aa8a:	b580      	push	{r7, lr}
 800aa8c:	b084      	sub	sp, #16
 800aa8e:	af00      	add	r7, sp, #0
 800aa90:	60f8      	str	r0, [r7, #12]
 800aa92:	60b9      	str	r1, [r7, #8]
 800aa94:	607a      	str	r2, [r7, #4]
      _Destroy(__first, __last);
 800aa96:	68b9      	ldr	r1, [r7, #8]
 800aa98:	68f8      	ldr	r0, [r7, #12]
 800aa9a:	f000 fcf5 	bl	800b488 <_ZSt8_DestroyIPP14And_expressionEvT_S3_>
    }
 800aa9e:	bf00      	nop
 800aaa0:	3710      	adds	r7, #16
 800aaa2:	46bd      	mov	sp, r7
 800aaa4:	bd80      	pop	{r7, pc}

0800aaa6 <_ZN9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 800aaa6:	b480      	push	{r7}
 800aaa8:	b083      	sub	sp, #12
 800aaaa:	af00      	add	r7, sp, #0
 800aaac:	6078      	str	r0, [r7, #4]
 800aaae:	6039      	str	r1, [r7, #0]
      : _M_current(__i) { }
 800aab0:	683b      	ldr	r3, [r7, #0]
 800aab2:	681a      	ldr	r2, [r3, #0]
 800aab4:	687b      	ldr	r3, [r7, #4]
 800aab6:	601a      	str	r2, [r3, #0]
 800aab8:	687b      	ldr	r3, [r7, #4]
 800aaba:	4618      	mov	r0, r3
 800aabc:	370c      	adds	r7, #12
 800aabe:	46bd      	mov	sp, r7
 800aac0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aac4:	4770      	bx	lr

0800aac6 <_ZNK9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
 800aac6:	b480      	push	{r7}
 800aac8:	b083      	sub	sp, #12
 800aaca:	af00      	add	r7, sp, #0
 800aacc:	6078      	str	r0, [r7, #4]
      { return _M_current; }
 800aace:	687b      	ldr	r3, [r7, #4]
 800aad0:	4618      	mov	r0, r3
 800aad2:	370c      	adds	r7, #12
 800aad4:	46bd      	mov	sp, r7
 800aad6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aada:	4770      	bx	lr

0800aadc <_ZSt14__variant_castIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callERNSt8__detail9__variant16_Variant_storageILb0EJbifS5_S7_S9_EEEEDcOT0_>:
    __variant_cast(_Tp&& __rhs)
 800aadc:	b480      	push	{r7}
 800aade:	b083      	sub	sp, #12
 800aae0:	af00      	add	r7, sp, #0
 800aae2:	6078      	str	r0, [r7, #4]
	    return static_cast<variant<_Types...>&>(__rhs);
 800aae4:	687b      	ldr	r3, [r7, #4]
    }
 800aae6:	4618      	mov	r0, r3
 800aae8:	370c      	adds	r7, #12
 800aaea:	46bd      	mov	sp, r7
 800aaec:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aaf0:	4770      	bx	lr

0800aaf2 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 800aaf2:	b580      	push	{r7, lr}
 800aaf4:	b082      	sub	sp, #8
 800aaf6:	af00      	add	r7, sp, #0
 800aaf8:	7138      	strb	r0, [r7, #4]
 800aafa:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 800aafc:	6838      	ldr	r0, [r7, #0]
 800aafe:	f000 fb44 	bl	800b18a <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800ab02:	4603      	mov	r3, r0
 800ab04:	4618      	mov	r0, r3
 800ab06:	f7f7 fa11 	bl	8001f2c <_ZNRSt8__detail9__variant14_UninitializedIbLb1EE6_M_getEv>
 800ab0a:	4603      	mov	r3, r0
 800ab0c:	4618      	mov	r0, r3
 800ab0e:	3708      	adds	r7, #8
 800ab10:	46bd      	mov	sp, r7
 800ab12:	bd80      	pop	{r7, pc}

0800ab14 <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800ab14:	b590      	push	{r4, r7, lr}
 800ab16:	b083      	sub	sp, #12
 800ab18:	af00      	add	r7, sp, #0
 800ab1a:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800ab1c:	6878      	ldr	r0, [r7, #4]
 800ab1e:	f000 fb29 	bl	800b174 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800ab22:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800ab24:	4619      	mov	r1, r3
 800ab26:	4620      	mov	r0, r4
 800ab28:	f7ff ffe3 	bl	800aaf2 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tILj0EEOT_>
 800ab2c:	4603      	mov	r3, r0
    }
 800ab2e:	4618      	mov	r0, r3
 800ab30:	370c      	adds	r7, #12
 800ab32:	46bd      	mov	sp, r7
 800ab34:	bd90      	pop	{r4, r7, pc}

0800ab36 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESM_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 800ab36:	b580      	push	{r7, lr}
 800ab38:	b082      	sub	sp, #8
 800ab3a:	af00      	add	r7, sp, #0
 800ab3c:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 800ab3e:	6878      	ldr	r0, [r7, #4]
 800ab40:	f000 fb18 	bl	800b174 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800ab44:	4603      	mov	r3, r0
 800ab46:	4618      	mov	r0, r3
 800ab48:	f7ff ffe4 	bl	800ab14 <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 800ab4c:	4603      	mov	r3, r0
	}
 800ab4e:	4618      	mov	r0, r3
 800ab50:	3708      	adds	r7, #8
 800ab52:	46bd      	mov	sp, r7
 800ab54:	bd80      	pop	{r7, pc}

0800ab56 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESJ_SM_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 800ab56:	b5b0      	push	{r4, r5, r7, lr}
 800ab58:	b082      	sub	sp, #8
 800ab5a:	af00      	add	r7, sp, #0
 800ab5c:	6078      	str	r0, [r7, #4]
 800ab5e:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 800ab60:	6878      	ldr	r0, [r7, #4]
 800ab62:	f000 fc9e 	bl	800b4a2 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800ab66:	4604      	mov	r4, r0
 800ab68:	6838      	ldr	r0, [r7, #0]
 800ab6a:	f000 fb03 	bl	800b174 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800ab6e:	4603      	mov	r3, r0
 800ab70:	4618      	mov	r0, r3
 800ab72:	f7ff ffe0 	bl	800ab36 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESM_EEDcOT0_>
 800ab76:	4603      	mov	r3, r0
 800ab78:	4619      	mov	r1, r3
 800ab7a:	4620      	mov	r0, r4
 800ab7c:	f000 fc9c 	bl	800b4b8 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRbEENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>
		std::forward<_Variants>(__vars))...);
 800ab80:	462b      	mov	r3, r5
      }
 800ab82:	4618      	mov	r0, r3
 800ab84:	3708      	adds	r7, #8
 800ab86:	46bd      	mov	sp, r7
 800ab88:	bdb0      	pop	{r4, r5, r7, pc}

0800ab8a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESJ_SM_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800ab8a:	b5b0      	push	{r4, r5, r7, lr}
 800ab8c:	b082      	sub	sp, #8
 800ab8e:	af00      	add	r7, sp, #0
 800ab90:	6078      	str	r0, [r7, #4]
 800ab92:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 800ab94:	6878      	ldr	r0, [r7, #4]
 800ab96:	f000 fc84 	bl	800b4a2 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800ab9a:	4604      	mov	r4, r0
 800ab9c:	6838      	ldr	r0, [r7, #0]
 800ab9e:	f000 fae9 	bl	800b174 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800aba2:	4603      	mov	r3, r0
 800aba4:	4619      	mov	r1, r3
 800aba6:	4620      	mov	r0, r4
 800aba8:	f7ff ffd5 	bl	800ab56 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 800abac:	462b      	mov	r3, r5
      }
 800abae:	4618      	mov	r0, r3
 800abb0:	3708      	adds	r7, #8
 800abb2:	46bd      	mov	sp, r7
 800abb4:	bdb0      	pop	{r4, r5, r7, pc}

0800abb6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj0EEEE14__visit_invokeESJ_SM_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800abb6:	b5b0      	push	{r4, r5, r7, lr}
 800abb8:	b082      	sub	sp, #8
 800abba:	af00      	add	r7, sp, #0
 800abbc:	6078      	str	r0, [r7, #4]
 800abbe:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 800abc0:	6878      	ldr	r0, [r7, #4]
 800abc2:	f000 fc6e 	bl	800b4a2 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800abc6:	4604      	mov	r4, r0
 800abc8:	6838      	ldr	r0, [r7, #0]
 800abca:	f000 fad3 	bl	800b174 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800abce:	4603      	mov	r3, r0
 800abd0:	4619      	mov	r1, r3
 800abd2:	4620      	mov	r0, r4
 800abd4:	f7ff ffd9 	bl	800ab8a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 800abd8:	462b      	mov	r3, r5
      }
 800abda:	4618      	mov	r0, r3
 800abdc:	3708      	adds	r7, #8
 800abde:	46bd      	mov	sp, r7
 800abe0:	bdb0      	pop	{r4, r5, r7, pc}

0800abe2 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 800abe2:	b580      	push	{r7, lr}
 800abe4:	b082      	sub	sp, #8
 800abe6:	af00      	add	r7, sp, #0
 800abe8:	7138      	strb	r0, [r7, #4]
 800abea:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 800abec:	6838      	ldr	r0, [r7, #0]
 800abee:	f000 fad7 	bl	800b1a0 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800abf2:	4603      	mov	r3, r0
 800abf4:	4618      	mov	r0, r3
 800abf6:	f7f7 fd4d 	bl	8002694 <_ZNRSt8__detail9__variant14_UninitializedIiLb1EE6_M_getEv>
 800abfa:	4603      	mov	r3, r0
 800abfc:	4618      	mov	r0, r3
 800abfe:	3708      	adds	r7, #8
 800ac00:	46bd      	mov	sp, r7
 800ac02:	bd80      	pop	{r7, pc}

0800ac04 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800ac04:	b590      	push	{r4, r7, lr}
 800ac06:	b083      	sub	sp, #12
 800ac08:	af00      	add	r7, sp, #0
 800ac0a:	7138      	strb	r0, [r7, #4]
 800ac0c:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800ac0e:	6838      	ldr	r0, [r7, #0]
 800ac10:	f000 fabb 	bl	800b18a <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800ac14:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800ac16:	4619      	mov	r1, r3
 800ac18:	4620      	mov	r0, r4
 800ac1a:	f7ff ffe2 	bl	800abe2 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tILj0EEOT_>
 800ac1e:	4603      	mov	r3, r0
    }
 800ac20:	4618      	mov	r0, r3
 800ac22:	370c      	adds	r7, #12
 800ac24:	46bd      	mov	sp, r7
 800ac26:	bd90      	pop	{r4, r7, pc}

0800ac28 <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800ac28:	b590      	push	{r4, r7, lr}
 800ac2a:	b083      	sub	sp, #12
 800ac2c:	af00      	add	r7, sp, #0
 800ac2e:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800ac30:	6878      	ldr	r0, [r7, #4]
 800ac32:	f000 fa9f 	bl	800b174 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800ac36:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800ac38:	4619      	mov	r1, r3
 800ac3a:	4620      	mov	r0, r4
 800ac3c:	f7ff ffe2 	bl	800ac04 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800ac40:	4603      	mov	r3, r0
    }
 800ac42:	4618      	mov	r0, r3
 800ac44:	370c      	adds	r7, #12
 800ac46:	46bd      	mov	sp, r7
 800ac48:	bd90      	pop	{r4, r7, pc}

0800ac4a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESM_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 800ac4a:	b580      	push	{r7, lr}
 800ac4c:	b082      	sub	sp, #8
 800ac4e:	af00      	add	r7, sp, #0
 800ac50:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 800ac52:	6878      	ldr	r0, [r7, #4]
 800ac54:	f000 fa8e 	bl	800b174 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800ac58:	4603      	mov	r3, r0
 800ac5a:	4618      	mov	r0, r3
 800ac5c:	f7ff ffe4 	bl	800ac28 <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 800ac60:	4603      	mov	r3, r0
	}
 800ac62:	4618      	mov	r0, r3
 800ac64:	3708      	adds	r7, #8
 800ac66:	46bd      	mov	sp, r7
 800ac68:	bd80      	pop	{r7, pc}

0800ac6a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESJ_SM_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 800ac6a:	b5b0      	push	{r4, r5, r7, lr}
 800ac6c:	b082      	sub	sp, #8
 800ac6e:	af00      	add	r7, sp, #0
 800ac70:	6078      	str	r0, [r7, #4]
 800ac72:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 800ac74:	6878      	ldr	r0, [r7, #4]
 800ac76:	f000 fc14 	bl	800b4a2 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800ac7a:	4604      	mov	r4, r0
 800ac7c:	6838      	ldr	r0, [r7, #0]
 800ac7e:	f000 fa79 	bl	800b174 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800ac82:	4603      	mov	r3, r0
 800ac84:	4618      	mov	r0, r3
 800ac86:	f7ff ffe0 	bl	800ac4a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESM_EEDcOT0_>
 800ac8a:	4603      	mov	r3, r0
 800ac8c:	4619      	mov	r1, r3
 800ac8e:	4620      	mov	r0, r4
 800ac90:	f000 fc29 	bl	800b4e6 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRiEENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>
		std::forward<_Variants>(__vars))...);
 800ac94:	462b      	mov	r3, r5
      }
 800ac96:	4618      	mov	r0, r3
 800ac98:	3708      	adds	r7, #8
 800ac9a:	46bd      	mov	sp, r7
 800ac9c:	bdb0      	pop	{r4, r5, r7, pc}

0800ac9e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESJ_SM_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800ac9e:	b5b0      	push	{r4, r5, r7, lr}
 800aca0:	b082      	sub	sp, #8
 800aca2:	af00      	add	r7, sp, #0
 800aca4:	6078      	str	r0, [r7, #4]
 800aca6:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 800aca8:	6878      	ldr	r0, [r7, #4]
 800acaa:	f000 fbfa 	bl	800b4a2 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800acae:	4604      	mov	r4, r0
 800acb0:	6838      	ldr	r0, [r7, #0]
 800acb2:	f000 fa5f 	bl	800b174 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800acb6:	4603      	mov	r3, r0
 800acb8:	4619      	mov	r1, r3
 800acba:	4620      	mov	r0, r4
 800acbc:	f7ff ffd5 	bl	800ac6a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 800acc0:	462b      	mov	r3, r5
      }
 800acc2:	4618      	mov	r0, r3
 800acc4:	3708      	adds	r7, #8
 800acc6:	46bd      	mov	sp, r7
 800acc8:	bdb0      	pop	{r4, r5, r7, pc}

0800acca <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj1EEEE14__visit_invokeESJ_SM_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800acca:	b5b0      	push	{r4, r5, r7, lr}
 800accc:	b082      	sub	sp, #8
 800acce:	af00      	add	r7, sp, #0
 800acd0:	6078      	str	r0, [r7, #4]
 800acd2:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 800acd4:	6878      	ldr	r0, [r7, #4]
 800acd6:	f000 fbe4 	bl	800b4a2 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800acda:	4604      	mov	r4, r0
 800acdc:	6838      	ldr	r0, [r7, #0]
 800acde:	f000 fa49 	bl	800b174 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800ace2:	4603      	mov	r3, r0
 800ace4:	4619      	mov	r1, r3
 800ace6:	4620      	mov	r0, r4
 800ace8:	f7ff ffd9 	bl	800ac9e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 800acec:	462b      	mov	r3, r5
      }
 800acee:	4618      	mov	r0, r3
 800acf0:	3708      	adds	r7, #8
 800acf2:	46bd      	mov	sp, r7
 800acf4:	bdb0      	pop	{r4, r5, r7, pc}

0800acf6 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJfNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 800acf6:	b580      	push	{r7, lr}
 800acf8:	b082      	sub	sp, #8
 800acfa:	af00      	add	r7, sp, #0
 800acfc:	7138      	strb	r0, [r7, #4]
 800acfe:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 800ad00:	6838      	ldr	r0, [r7, #0]
 800ad02:	f000 fa58 	bl	800b1b6 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800ad06:	4603      	mov	r3, r0
 800ad08:	4618      	mov	r0, r3
 800ad0a:	f7fa f80f 	bl	8004d2c <_ZNRSt8__detail9__variant14_UninitializedIfLb1EE6_M_getEv>
 800ad0e:	4603      	mov	r3, r0
 800ad10:	4618      	mov	r0, r3
 800ad12:	3708      	adds	r7, #8
 800ad14:	46bd      	mov	sp, r7
 800ad16:	bd80      	pop	{r7, pc}

0800ad18 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800ad18:	b590      	push	{r4, r7, lr}
 800ad1a:	b083      	sub	sp, #12
 800ad1c:	af00      	add	r7, sp, #0
 800ad1e:	7138      	strb	r0, [r7, #4]
 800ad20:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800ad22:	6838      	ldr	r0, [r7, #0]
 800ad24:	f000 fa3c 	bl	800b1a0 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800ad28:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800ad2a:	4619      	mov	r1, r3
 800ad2c:	4620      	mov	r0, r4
 800ad2e:	f7ff ffe2 	bl	800acf6 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJfNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tILj0EEOT_>
 800ad32:	4603      	mov	r3, r0
    }
 800ad34:	4618      	mov	r0, r3
 800ad36:	370c      	adds	r7, #12
 800ad38:	46bd      	mov	sp, r7
 800ad3a:	bd90      	pop	{r4, r7, pc}

0800ad3c <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800ad3c:	b590      	push	{r4, r7, lr}
 800ad3e:	b083      	sub	sp, #12
 800ad40:	af00      	add	r7, sp, #0
 800ad42:	7138      	strb	r0, [r7, #4]
 800ad44:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800ad46:	6838      	ldr	r0, [r7, #0]
 800ad48:	f000 fa1f 	bl	800b18a <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800ad4c:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800ad4e:	4619      	mov	r1, r3
 800ad50:	4620      	mov	r0, r4
 800ad52:	f7ff ffe1 	bl	800ad18 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800ad56:	4603      	mov	r3, r0
    }
 800ad58:	4618      	mov	r0, r3
 800ad5a:	370c      	adds	r7, #12
 800ad5c:	46bd      	mov	sp, r7
 800ad5e:	bd90      	pop	{r4, r7, pc}

0800ad60 <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800ad60:	b590      	push	{r4, r7, lr}
 800ad62:	b083      	sub	sp, #12
 800ad64:	af00      	add	r7, sp, #0
 800ad66:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800ad68:	6878      	ldr	r0, [r7, #4]
 800ad6a:	f000 fa03 	bl	800b174 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800ad6e:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800ad70:	4619      	mov	r1, r3
 800ad72:	4620      	mov	r0, r4
 800ad74:	f7ff ffe2 	bl	800ad3c <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800ad78:	4603      	mov	r3, r0
    }
 800ad7a:	4618      	mov	r0, r3
 800ad7c:	370c      	adds	r7, #12
 800ad7e:	46bd      	mov	sp, r7
 800ad80:	bd90      	pop	{r4, r7, pc}

0800ad82 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESM_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 800ad82:	b580      	push	{r7, lr}
 800ad84:	b082      	sub	sp, #8
 800ad86:	af00      	add	r7, sp, #0
 800ad88:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 800ad8a:	6878      	ldr	r0, [r7, #4]
 800ad8c:	f000 f9f2 	bl	800b174 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800ad90:	4603      	mov	r3, r0
 800ad92:	4618      	mov	r0, r3
 800ad94:	f7ff ffe4 	bl	800ad60 <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 800ad98:	4603      	mov	r3, r0
	}
 800ad9a:	4618      	mov	r0, r3
 800ad9c:	3708      	adds	r7, #8
 800ad9e:	46bd      	mov	sp, r7
 800ada0:	bd80      	pop	{r7, pc}

0800ada2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESJ_SM_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 800ada2:	b5b0      	push	{r4, r5, r7, lr}
 800ada4:	b082      	sub	sp, #8
 800ada6:	af00      	add	r7, sp, #0
 800ada8:	6078      	str	r0, [r7, #4]
 800adaa:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 800adac:	6878      	ldr	r0, [r7, #4]
 800adae:	f000 fb78 	bl	800b4a2 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800adb2:	4604      	mov	r4, r0
 800adb4:	6838      	ldr	r0, [r7, #0]
 800adb6:	f000 f9dd 	bl	800b174 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800adba:	4603      	mov	r3, r0
 800adbc:	4618      	mov	r0, r3
 800adbe:	f7ff ffe0 	bl	800ad82 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESM_EEDcOT0_>
 800adc2:	4603      	mov	r3, r0
 800adc4:	4619      	mov	r1, r3
 800adc6:	4620      	mov	r0, r4
 800adc8:	f000 fba4 	bl	800b514 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRfEENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>
		std::forward<_Variants>(__vars))...);
 800adcc:	462b      	mov	r3, r5
      }
 800adce:	4618      	mov	r0, r3
 800add0:	3708      	adds	r7, #8
 800add2:	46bd      	mov	sp, r7
 800add4:	bdb0      	pop	{r4, r5, r7, pc}

0800add6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESJ_SM_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800add6:	b5b0      	push	{r4, r5, r7, lr}
 800add8:	b082      	sub	sp, #8
 800adda:	af00      	add	r7, sp, #0
 800addc:	6078      	str	r0, [r7, #4]
 800adde:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 800ade0:	6878      	ldr	r0, [r7, #4]
 800ade2:	f000 fb5e 	bl	800b4a2 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800ade6:	4604      	mov	r4, r0
 800ade8:	6838      	ldr	r0, [r7, #0]
 800adea:	f000 f9c3 	bl	800b174 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800adee:	4603      	mov	r3, r0
 800adf0:	4619      	mov	r1, r3
 800adf2:	4620      	mov	r0, r4
 800adf4:	f7ff ffd5 	bl	800ada2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 800adf8:	462b      	mov	r3, r5
      }
 800adfa:	4618      	mov	r0, r3
 800adfc:	3708      	adds	r7, #8
 800adfe:	46bd      	mov	sp, r7
 800ae00:	bdb0      	pop	{r4, r5, r7, pc}

0800ae02 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj2EEEE14__visit_invokeESJ_SM_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800ae02:	b5b0      	push	{r4, r5, r7, lr}
 800ae04:	b082      	sub	sp, #8
 800ae06:	af00      	add	r7, sp, #0
 800ae08:	6078      	str	r0, [r7, #4]
 800ae0a:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 800ae0c:	6878      	ldr	r0, [r7, #4]
 800ae0e:	f000 fb48 	bl	800b4a2 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800ae12:	4604      	mov	r4, r0
 800ae14:	6838      	ldr	r0, [r7, #0]
 800ae16:	f000 f9ad 	bl	800b174 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800ae1a:	4603      	mov	r3, r0
 800ae1c:	4619      	mov	r1, r3
 800ae1e:	4620      	mov	r0, r4
 800ae20:	f7ff ffd9 	bl	800add6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 800ae24:	462b      	mov	r3, r5
      }
 800ae26:	4618      	mov	r0, r3
 800ae28:	3708      	adds	r7, #8
 800ae2a:	46bd      	mov	sp, r7
 800ae2c:	bdb0      	pop	{r4, r5, r7, pc}

0800ae2e <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 800ae2e:	b580      	push	{r7, lr}
 800ae30:	b082      	sub	sp, #8
 800ae32:	af00      	add	r7, sp, #0
 800ae34:	7138      	strb	r0, [r7, #4]
 800ae36:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 800ae38:	6838      	ldr	r0, [r7, #0]
 800ae3a:	f000 f9c7 	bl	800b1cc <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800ae3e:	4603      	mov	r3, r0
 800ae40:	4618      	mov	r0, r3
 800ae42:	f7f9 ffb7 	bl	8004db4 <_ZNRSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE6_M_getEv>
 800ae46:	4603      	mov	r3, r0
 800ae48:	4618      	mov	r0, r3
 800ae4a:	3708      	adds	r7, #8
 800ae4c:	46bd      	mov	sp, r7
 800ae4e:	bd80      	pop	{r7, pc}

0800ae50 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJfNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800ae50:	b590      	push	{r4, r7, lr}
 800ae52:	b083      	sub	sp, #12
 800ae54:	af00      	add	r7, sp, #0
 800ae56:	7138      	strb	r0, [r7, #4]
 800ae58:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800ae5a:	6838      	ldr	r0, [r7, #0]
 800ae5c:	f000 f9ab 	bl	800b1b6 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800ae60:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800ae62:	4619      	mov	r1, r3
 800ae64:	4620      	mov	r0, r4
 800ae66:	f7ff ffe2 	bl	800ae2e <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tILj0EEOT_>
 800ae6a:	4603      	mov	r3, r0
    }
 800ae6c:	4618      	mov	r0, r3
 800ae6e:	370c      	adds	r7, #12
 800ae70:	46bd      	mov	sp, r7
 800ae72:	bd90      	pop	{r4, r7, pc}

0800ae74 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800ae74:	b590      	push	{r4, r7, lr}
 800ae76:	b083      	sub	sp, #12
 800ae78:	af00      	add	r7, sp, #0
 800ae7a:	7138      	strb	r0, [r7, #4]
 800ae7c:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800ae7e:	6838      	ldr	r0, [r7, #0]
 800ae80:	f000 f98e 	bl	800b1a0 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800ae84:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800ae86:	4619      	mov	r1, r3
 800ae88:	4620      	mov	r0, r4
 800ae8a:	f7ff ffe1 	bl	800ae50 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJfNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800ae8e:	4603      	mov	r3, r0
    }
 800ae90:	4618      	mov	r0, r3
 800ae92:	370c      	adds	r7, #12
 800ae94:	46bd      	mov	sp, r7
 800ae96:	bd90      	pop	{r4, r7, pc}

0800ae98 <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800ae98:	b590      	push	{r4, r7, lr}
 800ae9a:	b083      	sub	sp, #12
 800ae9c:	af00      	add	r7, sp, #0
 800ae9e:	7138      	strb	r0, [r7, #4]
 800aea0:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800aea2:	6838      	ldr	r0, [r7, #0]
 800aea4:	f000 f971 	bl	800b18a <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800aea8:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800aeaa:	4619      	mov	r1, r3
 800aeac:	4620      	mov	r0, r4
 800aeae:	f7ff ffe1 	bl	800ae74 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800aeb2:	4603      	mov	r3, r0
    }
 800aeb4:	4618      	mov	r0, r3
 800aeb6:	370c      	adds	r7, #12
 800aeb8:	46bd      	mov	sp, r7
 800aeba:	bd90      	pop	{r4, r7, pc}

0800aebc <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800aebc:	b590      	push	{r4, r7, lr}
 800aebe:	b083      	sub	sp, #12
 800aec0:	af00      	add	r7, sp, #0
 800aec2:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800aec4:	6878      	ldr	r0, [r7, #4]
 800aec6:	f000 f955 	bl	800b174 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800aeca:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800aecc:	4619      	mov	r1, r3
 800aece:	4620      	mov	r0, r4
 800aed0:	f7ff ffe2 	bl	800ae98 <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800aed4:	4603      	mov	r3, r0
    }
 800aed6:	4618      	mov	r0, r3
 800aed8:	370c      	adds	r7, #12
 800aeda:	46bd      	mov	sp, r7
 800aedc:	bd90      	pop	{r4, r7, pc}

0800aede <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESM_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 800aede:	b580      	push	{r7, lr}
 800aee0:	b082      	sub	sp, #8
 800aee2:	af00      	add	r7, sp, #0
 800aee4:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 800aee6:	6878      	ldr	r0, [r7, #4]
 800aee8:	f000 f944 	bl	800b174 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800aeec:	4603      	mov	r3, r0
 800aeee:	4618      	mov	r0, r3
 800aef0:	f7ff ffe4 	bl	800aebc <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 800aef4:	4603      	mov	r3, r0
	}
 800aef6:	4618      	mov	r0, r3
 800aef8:	3708      	adds	r7, #8
 800aefa:	46bd      	mov	sp, r7
 800aefc:	bd80      	pop	{r7, pc}

0800aefe <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESJ_SM_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 800aefe:	b5b0      	push	{r4, r5, r7, lr}
 800af00:	b082      	sub	sp, #8
 800af02:	af00      	add	r7, sp, #0
 800af04:	6078      	str	r0, [r7, #4]
 800af06:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 800af08:	6878      	ldr	r0, [r7, #4]
 800af0a:	f000 faca 	bl	800b4a2 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800af0e:	4604      	mov	r4, r0
 800af10:	6838      	ldr	r0, [r7, #0]
 800af12:	f000 f92f 	bl	800b174 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800af16:	4603      	mov	r3, r0
 800af18:	4618      	mov	r0, r3
 800af1a:	f7ff ffe0 	bl	800aede <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESM_EEDcOT0_>
 800af1e:	4603      	mov	r3, r0
 800af20:	4619      	mov	r1, r3
 800af22:	4620      	mov	r0, r4
 800af24:	f000 fb0d 	bl	800b542 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRS8_EENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>
		std::forward<_Variants>(__vars))...);
 800af28:	462b      	mov	r3, r5
      }
 800af2a:	4618      	mov	r0, r3
 800af2c:	3708      	adds	r7, #8
 800af2e:	46bd      	mov	sp, r7
 800af30:	bdb0      	pop	{r4, r5, r7, pc}

0800af32 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESJ_SM_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800af32:	b5b0      	push	{r4, r5, r7, lr}
 800af34:	b082      	sub	sp, #8
 800af36:	af00      	add	r7, sp, #0
 800af38:	6078      	str	r0, [r7, #4]
 800af3a:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 800af3c:	6878      	ldr	r0, [r7, #4]
 800af3e:	f000 fab0 	bl	800b4a2 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800af42:	4604      	mov	r4, r0
 800af44:	6838      	ldr	r0, [r7, #0]
 800af46:	f000 f915 	bl	800b174 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800af4a:	4603      	mov	r3, r0
 800af4c:	4619      	mov	r1, r3
 800af4e:	4620      	mov	r0, r4
 800af50:	f7ff ffd5 	bl	800aefe <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 800af54:	462b      	mov	r3, r5
      }
 800af56:	4618      	mov	r0, r3
 800af58:	3708      	adds	r7, #8
 800af5a:	46bd      	mov	sp, r7
 800af5c:	bdb0      	pop	{r4, r5, r7, pc}

0800af5e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj3EEEE14__visit_invokeESJ_SM_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800af5e:	b5b0      	push	{r4, r5, r7, lr}
 800af60:	b082      	sub	sp, #8
 800af62:	af00      	add	r7, sp, #0
 800af64:	6078      	str	r0, [r7, #4]
 800af66:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 800af68:	6878      	ldr	r0, [r7, #4]
 800af6a:	f000 fa9a 	bl	800b4a2 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800af6e:	4604      	mov	r4, r0
 800af70:	6838      	ldr	r0, [r7, #0]
 800af72:	f000 f8ff 	bl	800b174 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800af76:	4603      	mov	r3, r0
 800af78:	4619      	mov	r1, r3
 800af7a:	4620      	mov	r0, r4
 800af7c:	f7ff ffd9 	bl	800af32 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 800af80:	462b      	mov	r3, r5
      }
 800af82:	4618      	mov	r0, r3
 800af84:	3708      	adds	r7, #8
 800af86:	46bd      	mov	sp, r7
 800af88:	bdb0      	pop	{r4, r5, r7, pc}

0800af8a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj4EEEE28__element_by_index_or_cookieILj4ESM_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 800af8a:	b580      	push	{r7, lr}
 800af8c:	b082      	sub	sp, #8
 800af8e:	af00      	add	r7, sp, #0
 800af90:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 800af92:	6878      	ldr	r0, [r7, #4]
 800af94:	f000 f8ee 	bl	800b174 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800af98:	4603      	mov	r3, r0
 800af9a:	4618      	mov	r0, r3
 800af9c:	f7ff fa6d 	bl	800a47a <_ZNSt8__detail9__variant5__getILj4ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 800afa0:	4603      	mov	r3, r0
	}
 800afa2:	4618      	mov	r0, r3
 800afa4:	3708      	adds	r7, #8
 800afa6:	46bd      	mov	sp, r7
 800afa8:	bd80      	pop	{r7, pc}

0800afaa <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj4EEEE19__visit_invoke_implESJ_SM_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 800afaa:	b5b0      	push	{r4, r5, r7, lr}
 800afac:	b082      	sub	sp, #8
 800afae:	af00      	add	r7, sp, #0
 800afb0:	6078      	str	r0, [r7, #4]
 800afb2:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 800afb4:	6878      	ldr	r0, [r7, #4]
 800afb6:	f000 fa74 	bl	800b4a2 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800afba:	4604      	mov	r4, r0
 800afbc:	6838      	ldr	r0, [r7, #0]
 800afbe:	f000 f8d9 	bl	800b174 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800afc2:	4603      	mov	r3, r0
 800afc4:	4618      	mov	r0, r3
 800afc6:	f7ff ffe0 	bl	800af8a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj4EEEE28__element_by_index_or_cookieILj4ESM_EEDcOT0_>
 800afca:	4603      	mov	r3, r0
 800afcc:	4619      	mov	r1, r3
 800afce:	4620      	mov	r0, r4
 800afd0:	f000 face 	bl	800b570 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRSA_EENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>
		std::forward<_Variants>(__vars))...);
 800afd4:	462b      	mov	r3, r5
      }
 800afd6:	4618      	mov	r0, r3
 800afd8:	3708      	adds	r7, #8
 800afda:	46bd      	mov	sp, r7
 800afdc:	bdb0      	pop	{r4, r5, r7, pc}

0800afde <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj4EEEE17__do_visit_invokeESJ_SM_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800afde:	b5b0      	push	{r4, r5, r7, lr}
 800afe0:	b082      	sub	sp, #8
 800afe2:	af00      	add	r7, sp, #0
 800afe4:	6078      	str	r0, [r7, #4]
 800afe6:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 800afe8:	6878      	ldr	r0, [r7, #4]
 800afea:	f000 fa5a 	bl	800b4a2 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800afee:	4604      	mov	r4, r0
 800aff0:	6838      	ldr	r0, [r7, #0]
 800aff2:	f000 f8bf 	bl	800b174 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800aff6:	4603      	mov	r3, r0
 800aff8:	4619      	mov	r1, r3
 800affa:	4620      	mov	r0, r4
 800affc:	f7ff ffd5 	bl	800afaa <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj4EEEE19__visit_invoke_implESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 800b000:	462b      	mov	r3, r5
      }
 800b002:	4618      	mov	r0, r3
 800b004:	3708      	adds	r7, #8
 800b006:	46bd      	mov	sp, r7
 800b008:	bdb0      	pop	{r4, r5, r7, pc}

0800b00a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj4EEEE14__visit_invokeESJ_SM_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800b00a:	b5b0      	push	{r4, r5, r7, lr}
 800b00c:	b082      	sub	sp, #8
 800b00e:	af00      	add	r7, sp, #0
 800b010:	6078      	str	r0, [r7, #4]
 800b012:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 800b014:	6878      	ldr	r0, [r7, #4]
 800b016:	f000 fa44 	bl	800b4a2 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800b01a:	4604      	mov	r4, r0
 800b01c:	6838      	ldr	r0, [r7, #0]
 800b01e:	f000 f8a9 	bl	800b174 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800b022:	4603      	mov	r3, r0
 800b024:	4619      	mov	r1, r3
 800b026:	4620      	mov	r0, r4
 800b028:	f7ff ffd9 	bl	800afde <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj4EEEE17__do_visit_invokeESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 800b02c:	462b      	mov	r3, r5
      }
 800b02e:	4618      	mov	r0, r3
 800b030:	3708      	adds	r7, #8
 800b032:	46bd      	mov	sp, r7
 800b034:	bdb0      	pop	{r4, r5, r7, pc}

0800b036 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj5EEEE28__element_by_index_or_cookieILj5ESM_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 800b036:	b580      	push	{r7, lr}
 800b038:	b082      	sub	sp, #8
 800b03a:	af00      	add	r7, sp, #0
 800b03c:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 800b03e:	6878      	ldr	r0, [r7, #4]
 800b040:	f000 f898 	bl	800b174 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800b044:	4603      	mov	r3, r0
 800b046:	4618      	mov	r0, r3
 800b048:	f7ff faaf 	bl	800a5aa <_ZNSt8__detail9__variant5__getILj5ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 800b04c:	4603      	mov	r3, r0
	}
 800b04e:	4618      	mov	r0, r3
 800b050:	3708      	adds	r7, #8
 800b052:	46bd      	mov	sp, r7
 800b054:	bd80      	pop	{r7, pc}

0800b056 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj5EEEE19__visit_invoke_implESJ_SM_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 800b056:	b5b0      	push	{r4, r5, r7, lr}
 800b058:	b082      	sub	sp, #8
 800b05a:	af00      	add	r7, sp, #0
 800b05c:	6078      	str	r0, [r7, #4]
 800b05e:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 800b060:	6878      	ldr	r0, [r7, #4]
 800b062:	f000 fa1e 	bl	800b4a2 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800b066:	4604      	mov	r4, r0
 800b068:	6838      	ldr	r0, [r7, #0]
 800b06a:	f000 f883 	bl	800b174 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800b06e:	4603      	mov	r3, r0
 800b070:	4618      	mov	r0, r3
 800b072:	f7ff ffe0 	bl	800b036 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj5EEEE28__element_by_index_or_cookieILj5ESM_EEDcOT0_>
 800b076:	4603      	mov	r3, r0
 800b078:	4619      	mov	r1, r3
 800b07a:	4620      	mov	r0, r4
 800b07c:	f000 fa8f 	bl	800b59e <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRSC_EENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>
		std::forward<_Variants>(__vars))...);
 800b080:	462b      	mov	r3, r5
      }
 800b082:	4618      	mov	r0, r3
 800b084:	3708      	adds	r7, #8
 800b086:	46bd      	mov	sp, r7
 800b088:	bdb0      	pop	{r4, r5, r7, pc}

0800b08a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj5EEEE17__do_visit_invokeESJ_SM_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800b08a:	b5b0      	push	{r4, r5, r7, lr}
 800b08c:	b082      	sub	sp, #8
 800b08e:	af00      	add	r7, sp, #0
 800b090:	6078      	str	r0, [r7, #4]
 800b092:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 800b094:	6878      	ldr	r0, [r7, #4]
 800b096:	f000 fa04 	bl	800b4a2 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800b09a:	4604      	mov	r4, r0
 800b09c:	6838      	ldr	r0, [r7, #0]
 800b09e:	f000 f869 	bl	800b174 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800b0a2:	4603      	mov	r3, r0
 800b0a4:	4619      	mov	r1, r3
 800b0a6:	4620      	mov	r0, r4
 800b0a8:	f7ff ffd5 	bl	800b056 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj5EEEE19__visit_invoke_implESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 800b0ac:	462b      	mov	r3, r5
      }
 800b0ae:	4618      	mov	r0, r3
 800b0b0:	3708      	adds	r7, #8
 800b0b2:	46bd      	mov	sp, r7
 800b0b4:	bdb0      	pop	{r4, r5, r7, pc}

0800b0b6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj5EEEE14__visit_invokeESJ_SM_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800b0b6:	b5b0      	push	{r4, r5, r7, lr}
 800b0b8:	b082      	sub	sp, #8
 800b0ba:	af00      	add	r7, sp, #0
 800b0bc:	6078      	str	r0, [r7, #4]
 800b0be:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 800b0c0:	6878      	ldr	r0, [r7, #4]
 800b0c2:	f000 f9ee 	bl	800b4a2 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800b0c6:	4604      	mov	r4, r0
 800b0c8:	6838      	ldr	r0, [r7, #0]
 800b0ca:	f000 f853 	bl	800b174 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800b0ce:	4603      	mov	r3, r0
 800b0d0:	4619      	mov	r1, r3
 800b0d2:	4620      	mov	r0, r4
 800b0d4:	f7ff ffd9 	bl	800b08a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj5EEEE17__do_visit_invokeESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 800b0d8:	462b      	mov	r3, r5
      }
 800b0da:	4618      	mov	r0, r3
 800b0dc:	3708      	adds	r7, #8
 800b0de:	46bd      	mov	sp, r7
 800b0e0:	bdb0      	pop	{r4, r5, r7, pc}

0800b0e2 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifS9_SB_SD_EEEJLj6EEE9_M_accessIJEEERKSN_jDpT_>:
	_M_access(size_t __first_index, _Args... __rest_indices) const
 800b0e2:	b580      	push	{r7, lr}
 800b0e4:	b082      	sub	sp, #8
 800b0e6:	af00      	add	r7, sp, #0
 800b0e8:	6078      	str	r0, [r7, #4]
 800b0ea:	6039      	str	r1, [r7, #0]
	    ._M_access(__rest_indices...);
 800b0ec:	683b      	ldr	r3, [r7, #0]
 800b0ee:	009b      	lsls	r3, r3, #2
 800b0f0:	687a      	ldr	r2, [r7, #4]
 800b0f2:	4413      	add	r3, r2
 800b0f4:	4618      	mov	r0, r3
 800b0f6:	f000 fa69 	bl	800b5cc <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifS9_SB_SD_EEEJEE9_M_accessEv>
 800b0fa:	4603      	mov	r3, r0
	}
 800b0fc:	4618      	mov	r0, r3
 800b0fe:	3708      	adds	r7, #8
 800b100:	46bd      	mov	sp, r7
 800b102:	bd80      	pop	{r7, pc}

0800b104 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRSt7variantIJbifS8_SA_SC_EEEEDcOT1_DpOT2_>:
    __do_visit(_Visitor&& __visitor, _Variants&&... __variants)
 800b104:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b106:	b085      	sub	sp, #20
 800b108:	af00      	add	r7, sp, #0
 800b10a:	6078      	str	r0, [r7, #4]
 800b10c:	6039      	str	r1, [r7, #0]
      constexpr auto& __vtable = __detail::__variant::__gen_vtable<
 800b10e:	4b0f      	ldr	r3, [pc, #60]	; (800b14c <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRSt7variantIJbifS8_SA_SC_EEEEDcOT1_DpOT2_+0x48>)
 800b110:	60fb      	str	r3, [r7, #12]
      auto __func_ptr = __vtable._M_access(__variants.index()...);
 800b112:	6838      	ldr	r0, [r7, #0]
 800b114:	f7fe fecb 	bl	8009eae <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 800b118:	4603      	mov	r3, r0
 800b11a:	4619      	mov	r1, r3
 800b11c:	68f8      	ldr	r0, [r7, #12]
 800b11e:	f7ff ffe0 	bl	800b0e2 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifS9_SB_SD_EEEJLj6EEE9_M_accessIJEEERKSN_jDpT_>
 800b122:	4603      	mov	r3, r0
 800b124:	681b      	ldr	r3, [r3, #0]
 800b126:	60bb      	str	r3, [r7, #8]
      return (*__func_ptr)(std::forward<_Visitor>(__visitor),
 800b128:	68bc      	ldr	r4, [r7, #8]
 800b12a:	6878      	ldr	r0, [r7, #4]
 800b12c:	f000 fa59 	bl	800b5e2 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800b130:	4605      	mov	r5, r0
 800b132:	6838      	ldr	r0, [r7, #0]
 800b134:	f000 f81e 	bl	800b174 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800b138:	4603      	mov	r3, r0
 800b13a:	4619      	mov	r1, r3
 800b13c:	4628      	mov	r0, r5
 800b13e:	47a0      	blx	r4
			   std::forward<_Variants>(__variants)...);
 800b140:	4633      	mov	r3, r6
    }
 800b142:	4618      	mov	r0, r3
 800b144:	3714      	adds	r7, #20
 800b146:	46bd      	mov	sp, r7
 800b148:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b14a:	bf00      	nop
 800b14c:	08028220 	.word	0x08028220

0800b150 <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEv>:
      constexpr void _M_reset_impl()
 800b150:	b580      	push	{r7, lr}
 800b152:	b084      	sub	sp, #16
 800b154:	af00      	add	r7, sp, #0
 800b156:	6078      	str	r0, [r7, #4]
	__do_visit([](auto&& __this_mem) mutable
 800b158:	6878      	ldr	r0, [r7, #4]
 800b15a:	f7ff fcbf 	bl	800aadc <_ZSt14__variant_castIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callERNSt8__detail9__variant16_Variant_storageILb0EJbifS5_S7_S9_EEEEDcOT0_>
 800b15e:	4602      	mov	r2, r0
 800b160:	f107 030c 	add.w	r3, r7, #12
 800b164:	4611      	mov	r1, r2
 800b166:	4618      	mov	r0, r3
 800b168:	f7ff ffcc 	bl	800b104 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRSt7variantIJbifS8_SA_SC_EEEEDcOT1_DpOT2_>
      }
 800b16c:	bf00      	nop
 800b16e:	3710      	adds	r7, #16
 800b170:	46bd      	mov	sp, r7
 800b172:	bd80      	pop	{r7, pc}

0800b174 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800b174:	b480      	push	{r7}
 800b176:	b083      	sub	sp, #12
 800b178:	af00      	add	r7, sp, #0
 800b17a:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800b17c:	687b      	ldr	r3, [r7, #4]
 800b17e:	4618      	mov	r0, r3
 800b180:	370c      	adds	r7, #12
 800b182:	46bd      	mov	sp, r7
 800b184:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b188:	4770      	bx	lr

0800b18a <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800b18a:	b480      	push	{r7}
 800b18c:	b083      	sub	sp, #12
 800b18e:	af00      	add	r7, sp, #0
 800b190:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800b192:	687b      	ldr	r3, [r7, #4]
 800b194:	4618      	mov	r0, r3
 800b196:	370c      	adds	r7, #12
 800b198:	46bd      	mov	sp, r7
 800b19a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b19e:	4770      	bx	lr

0800b1a0 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800b1a0:	b480      	push	{r7}
 800b1a2:	b083      	sub	sp, #12
 800b1a4:	af00      	add	r7, sp, #0
 800b1a6:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800b1a8:	687b      	ldr	r3, [r7, #4]
 800b1aa:	4618      	mov	r0, r3
 800b1ac:	370c      	adds	r7, #12
 800b1ae:	46bd      	mov	sp, r7
 800b1b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b1b4:	4770      	bx	lr

0800b1b6 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800b1b6:	b480      	push	{r7}
 800b1b8:	b083      	sub	sp, #12
 800b1ba:	af00      	add	r7, sp, #0
 800b1bc:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800b1be:	687b      	ldr	r3, [r7, #4]
 800b1c0:	4618      	mov	r0, r3
 800b1c2:	370c      	adds	r7, #12
 800b1c4:	46bd      	mov	sp, r7
 800b1c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b1ca:	4770      	bx	lr

0800b1cc <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800b1cc:	b480      	push	{r7}
 800b1ce:	b083      	sub	sp, #12
 800b1d0:	af00      	add	r7, sp, #0
 800b1d2:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800b1d4:	687b      	ldr	r3, [r7, #4]
 800b1d6:	4618      	mov	r0, r3
 800b1d8:	370c      	adds	r7, #12
 800b1da:	46bd      	mov	sp, r7
 800b1dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b1e0:	4770      	bx	lr

0800b1e2 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP8VariableP13Function_callEEEEOT_RNSt16remove_referenceIS9_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800b1e2:	b480      	push	{r7}
 800b1e4:	b083      	sub	sp, #12
 800b1e6:	af00      	add	r7, sp, #0
 800b1e8:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800b1ea:	687b      	ldr	r3, [r7, #4]
 800b1ec:	4618      	mov	r0, r3
 800b1ee:	370c      	adds	r7, #12
 800b1f0:	46bd      	mov	sp, r7
 800b1f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b1f6:	4770      	bx	lr

0800b1f8 <_ZNRSt8__detail9__variant14_UninitializedIP8VariableLb1EE6_M_getEv>:
      constexpr _Type& _M_get() & noexcept
 800b1f8:	b480      	push	{r7}
 800b1fa:	b083      	sub	sp, #12
 800b1fc:	af00      	add	r7, sp, #0
 800b1fe:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 800b200:	687b      	ldr	r3, [r7, #4]
 800b202:	4618      	mov	r0, r3
 800b204:	370c      	adds	r7, #12
 800b206:	46bd      	mov	sp, r7
 800b208:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b20c:	4770      	bx	lr

0800b20e <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP13Function_callEEEEOT_RNSt16remove_referenceIS7_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800b20e:	b480      	push	{r7}
 800b210:	b083      	sub	sp, #12
 800b212:	af00      	add	r7, sp, #0
 800b214:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800b216:	687b      	ldr	r3, [r7, #4]
 800b218:	4618      	mov	r0, r3
 800b21a:	370c      	adds	r7, #12
 800b21c:	46bd      	mov	sp, r7
 800b21e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b222:	4770      	bx	lr

0800b224 <_ZSt7forwardIRSt7variantIJP17Primal_expressionP10ExpressionEEEOT_RNSt16remove_referenceIS7_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800b224:	b480      	push	{r7}
 800b226:	b083      	sub	sp, #12
 800b228:	af00      	add	r7, sp, #0
 800b22a:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800b22c:	687b      	ldr	r3, [r7, #4]
 800b22e:	4618      	mov	r0, r3
 800b230:	370c      	adds	r7, #12
 800b232:	46bd      	mov	sp, r7
 800b234:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b238:	4770      	bx	lr

0800b23a <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP17Primal_expressionP10ExpressionEEEEOT_RNSt16remove_referenceIS9_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800b23a:	b480      	push	{r7}
 800b23c:	b083      	sub	sp, #12
 800b23e:	af00      	add	r7, sp, #0
 800b240:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800b242:	687b      	ldr	r3, [r7, #4]
 800b244:	4618      	mov	r0, r3
 800b246:	370c      	adds	r7, #12
 800b248:	46bd      	mov	sp, r7
 800b24a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b24e:	4770      	bx	lr

0800b250 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP10ExpressionEEEEOT_RNSt16remove_referenceIS7_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800b250:	b480      	push	{r7}
 800b252:	b083      	sub	sp, #12
 800b254:	af00      	add	r7, sp, #0
 800b256:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800b258:	687b      	ldr	r3, [r7, #4]
 800b25a:	4618      	mov	r0, r3
 800b25c:	370c      	adds	r7, #12
 800b25e:	46bd      	mov	sp, r7
 800b260:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b264:	4770      	bx	lr

0800b266 <_ZNRSt8__detail9__variant14_UninitializedIP10ExpressionLb1EE6_M_getEv>:
      constexpr _Type& _M_get() & noexcept
 800b266:	b480      	push	{r7}
 800b268:	b083      	sub	sp, #12
 800b26a:	af00      	add	r7, sp, #0
 800b26c:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 800b26e:	687b      	ldr	r3, [r7, #4]
 800b270:	4618      	mov	r0, r3
 800b272:	370c      	adds	r7, #12
 800b274:	46bd      	mov	sp, r7
 800b276:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b27a:	4770      	bx	lr

0800b27c <_ZNRSt8__detail9__variant14_UninitializedIP17Primal_expressionLb1EE6_M_getEv>:
      constexpr _Type& _M_get() & noexcept
 800b27c:	b480      	push	{r7}
 800b27e:	b083      	sub	sp, #12
 800b280:	af00      	add	r7, sp, #0
 800b282:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 800b284:	687b      	ldr	r3, [r7, #4]
 800b286:	4618      	mov	r0, r3
 800b288:	370c      	adds	r7, #12
 800b28a:	46bd      	mov	sp, r7
 800b28c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b290:	4770      	bx	lr

0800b292 <_ZNSaIP16Power_expressionED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
 800b292:	b580      	push	{r7, lr}
 800b294:	b082      	sub	sp, #8
 800b296:	af00      	add	r7, sp, #0
 800b298:	6078      	str	r0, [r7, #4]
 800b29a:	6878      	ldr	r0, [r7, #4]
 800b29c:	f000 f9ac 	bl	800b5f8 <_ZN9__gnu_cxx13new_allocatorIP16Power_expressionED1Ev>
 800b2a0:	687b      	ldr	r3, [r7, #4]
 800b2a2:	4618      	mov	r0, r3
 800b2a4:	3708      	adds	r7, #8
 800b2a6:	46bd      	mov	sp, r7
 800b2a8:	bd80      	pop	{r7, pc}

0800b2aa <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE13_M_deallocateEPS1_j>:
      _M_deallocate(pointer __p, size_t __n)
 800b2aa:	b580      	push	{r7, lr}
 800b2ac:	b084      	sub	sp, #16
 800b2ae:	af00      	add	r7, sp, #0
 800b2b0:	60f8      	str	r0, [r7, #12]
 800b2b2:	60b9      	str	r1, [r7, #8]
 800b2b4:	607a      	str	r2, [r7, #4]
	if (__p)
 800b2b6:	68bb      	ldr	r3, [r7, #8]
 800b2b8:	2b00      	cmp	r3, #0
 800b2ba:	d005      	beq.n	800b2c8 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE13_M_deallocateEPS1_j+0x1e>
	  _Tr::deallocate(_M_impl, __p, __n);
 800b2bc:	68fb      	ldr	r3, [r7, #12]
 800b2be:	687a      	ldr	r2, [r7, #4]
 800b2c0:	68b9      	ldr	r1, [r7, #8]
 800b2c2:	4618      	mov	r0, r3
 800b2c4:	f000 f9a3 	bl	800b60e <_ZNSt16allocator_traitsISaIP16Power_expressionEE10deallocateERS2_PS1_j>
      }
 800b2c8:	bf00      	nop
 800b2ca:	3710      	adds	r7, #16
 800b2cc:	46bd      	mov	sp, r7
 800b2ce:	bd80      	pop	{r7, pc}

0800b2d0 <_ZSt8_DestroyIPP16Power_expressionEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 800b2d0:	b580      	push	{r7, lr}
 800b2d2:	b082      	sub	sp, #8
 800b2d4:	af00      	add	r7, sp, #0
 800b2d6:	6078      	str	r0, [r7, #4]
 800b2d8:	6039      	str	r1, [r7, #0]
	__destroy(__first, __last);
 800b2da:	6839      	ldr	r1, [r7, #0]
 800b2dc:	6878      	ldr	r0, [r7, #4]
 800b2de:	f000 f9a5 	bl	800b62c <_ZNSt12_Destroy_auxILb1EE9__destroyIPP16Power_expressionEEvT_S5_>
    }
 800b2e2:	bf00      	nop
 800b2e4:	3708      	adds	r7, #8
 800b2e6:	46bd      	mov	sp, r7
 800b2e8:	bd80      	pop	{r7, pc}

0800b2ea <_ZNSaI13mult_operatorED1Ev>:
 800b2ea:	b580      	push	{r7, lr}
 800b2ec:	b082      	sub	sp, #8
 800b2ee:	af00      	add	r7, sp, #0
 800b2f0:	6078      	str	r0, [r7, #4]
 800b2f2:	6878      	ldr	r0, [r7, #4]
 800b2f4:	f000 f9a5 	bl	800b642 <_ZN9__gnu_cxx13new_allocatorI13mult_operatorED1Ev>
 800b2f8:	687b      	ldr	r3, [r7, #4]
 800b2fa:	4618      	mov	r0, r3
 800b2fc:	3708      	adds	r7, #8
 800b2fe:	46bd      	mov	sp, r7
 800b300:	bd80      	pop	{r7, pc}

0800b302 <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE13_M_deallocateEPS0_j>:
      _M_deallocate(pointer __p, size_t __n)
 800b302:	b580      	push	{r7, lr}
 800b304:	b084      	sub	sp, #16
 800b306:	af00      	add	r7, sp, #0
 800b308:	60f8      	str	r0, [r7, #12]
 800b30a:	60b9      	str	r1, [r7, #8]
 800b30c:	607a      	str	r2, [r7, #4]
	if (__p)
 800b30e:	68bb      	ldr	r3, [r7, #8]
 800b310:	2b00      	cmp	r3, #0
 800b312:	d005      	beq.n	800b320 <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE13_M_deallocateEPS0_j+0x1e>
	  _Tr::deallocate(_M_impl, __p, __n);
 800b314:	68fb      	ldr	r3, [r7, #12]
 800b316:	687a      	ldr	r2, [r7, #4]
 800b318:	68b9      	ldr	r1, [r7, #8]
 800b31a:	4618      	mov	r0, r3
 800b31c:	f000 f99c 	bl	800b658 <_ZNSt16allocator_traitsISaI13mult_operatorEE10deallocateERS1_PS0_j>
      }
 800b320:	bf00      	nop
 800b322:	3710      	adds	r7, #16
 800b324:	46bd      	mov	sp, r7
 800b326:	bd80      	pop	{r7, pc}

0800b328 <_ZSt8_DestroyIP13mult_operatorEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 800b328:	b580      	push	{r7, lr}
 800b32a:	b082      	sub	sp, #8
 800b32c:	af00      	add	r7, sp, #0
 800b32e:	6078      	str	r0, [r7, #4]
 800b330:	6039      	str	r1, [r7, #0]
	__destroy(__first, __last);
 800b332:	6839      	ldr	r1, [r7, #0]
 800b334:	6878      	ldr	r0, [r7, #4]
 800b336:	f000 f99e 	bl	800b676 <_ZNSt12_Destroy_auxILb1EE9__destroyIP13mult_operatorEEvT_S4_>
    }
 800b33a:	bf00      	nop
 800b33c:	3708      	adds	r7, #8
 800b33e:	46bd      	mov	sp, r7
 800b340:	bd80      	pop	{r7, pc}

0800b342 <_ZNSaIP19Multiply_expressionED1Ev>:
 800b342:	b580      	push	{r7, lr}
 800b344:	b082      	sub	sp, #8
 800b346:	af00      	add	r7, sp, #0
 800b348:	6078      	str	r0, [r7, #4]
 800b34a:	6878      	ldr	r0, [r7, #4]
 800b34c:	f000 f99e 	bl	800b68c <_ZN9__gnu_cxx13new_allocatorIP19Multiply_expressionED1Ev>
 800b350:	687b      	ldr	r3, [r7, #4]
 800b352:	4618      	mov	r0, r3
 800b354:	3708      	adds	r7, #8
 800b356:	46bd      	mov	sp, r7
 800b358:	bd80      	pop	{r7, pc}

0800b35a <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE13_M_deallocateEPS1_j>:
      _M_deallocate(pointer __p, size_t __n)
 800b35a:	b580      	push	{r7, lr}
 800b35c:	b084      	sub	sp, #16
 800b35e:	af00      	add	r7, sp, #0
 800b360:	60f8      	str	r0, [r7, #12]
 800b362:	60b9      	str	r1, [r7, #8]
 800b364:	607a      	str	r2, [r7, #4]
	if (__p)
 800b366:	68bb      	ldr	r3, [r7, #8]
 800b368:	2b00      	cmp	r3, #0
 800b36a:	d005      	beq.n	800b378 <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE13_M_deallocateEPS1_j+0x1e>
	  _Tr::deallocate(_M_impl, __p, __n);
 800b36c:	68fb      	ldr	r3, [r7, #12]
 800b36e:	687a      	ldr	r2, [r7, #4]
 800b370:	68b9      	ldr	r1, [r7, #8]
 800b372:	4618      	mov	r0, r3
 800b374:	f000 f995 	bl	800b6a2 <_ZNSt16allocator_traitsISaIP19Multiply_expressionEE10deallocateERS2_PS1_j>
      }
 800b378:	bf00      	nop
 800b37a:	3710      	adds	r7, #16
 800b37c:	46bd      	mov	sp, r7
 800b37e:	bd80      	pop	{r7, pc}

0800b380 <_ZSt8_DestroyIPP19Multiply_expressionEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 800b380:	b580      	push	{r7, lr}
 800b382:	b082      	sub	sp, #8
 800b384:	af00      	add	r7, sp, #0
 800b386:	6078      	str	r0, [r7, #4]
 800b388:	6039      	str	r1, [r7, #0]
	__destroy(__first, __last);
 800b38a:	6839      	ldr	r1, [r7, #0]
 800b38c:	6878      	ldr	r0, [r7, #4]
 800b38e:	f000 f997 	bl	800b6c0 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP19Multiply_expressionEEvT_S5_>
    }
 800b392:	bf00      	nop
 800b394:	3708      	adds	r7, #8
 800b396:	46bd      	mov	sp, r7
 800b398:	bd80      	pop	{r7, pc}

0800b39a <_ZNSaI12sum_operatorED1Ev>:
 800b39a:	b580      	push	{r7, lr}
 800b39c:	b082      	sub	sp, #8
 800b39e:	af00      	add	r7, sp, #0
 800b3a0:	6078      	str	r0, [r7, #4]
 800b3a2:	6878      	ldr	r0, [r7, #4]
 800b3a4:	f000 f997 	bl	800b6d6 <_ZN9__gnu_cxx13new_allocatorI12sum_operatorED1Ev>
 800b3a8:	687b      	ldr	r3, [r7, #4]
 800b3aa:	4618      	mov	r0, r3
 800b3ac:	3708      	adds	r7, #8
 800b3ae:	46bd      	mov	sp, r7
 800b3b0:	bd80      	pop	{r7, pc}

0800b3b2 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE13_M_deallocateEPS0_j>:
      _M_deallocate(pointer __p, size_t __n)
 800b3b2:	b580      	push	{r7, lr}
 800b3b4:	b084      	sub	sp, #16
 800b3b6:	af00      	add	r7, sp, #0
 800b3b8:	60f8      	str	r0, [r7, #12]
 800b3ba:	60b9      	str	r1, [r7, #8]
 800b3bc:	607a      	str	r2, [r7, #4]
	if (__p)
 800b3be:	68bb      	ldr	r3, [r7, #8]
 800b3c0:	2b00      	cmp	r3, #0
 800b3c2:	d005      	beq.n	800b3d0 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE13_M_deallocateEPS0_j+0x1e>
	  _Tr::deallocate(_M_impl, __p, __n);
 800b3c4:	68fb      	ldr	r3, [r7, #12]
 800b3c6:	687a      	ldr	r2, [r7, #4]
 800b3c8:	68b9      	ldr	r1, [r7, #8]
 800b3ca:	4618      	mov	r0, r3
 800b3cc:	f000 f98e 	bl	800b6ec <_ZNSt16allocator_traitsISaI12sum_operatorEE10deallocateERS1_PS0_j>
      }
 800b3d0:	bf00      	nop
 800b3d2:	3710      	adds	r7, #16
 800b3d4:	46bd      	mov	sp, r7
 800b3d6:	bd80      	pop	{r7, pc}

0800b3d8 <_ZSt8_DestroyIP12sum_operatorEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 800b3d8:	b580      	push	{r7, lr}
 800b3da:	b082      	sub	sp, #8
 800b3dc:	af00      	add	r7, sp, #0
 800b3de:	6078      	str	r0, [r7, #4]
 800b3e0:	6039      	str	r1, [r7, #0]
	__destroy(__first, __last);
 800b3e2:	6839      	ldr	r1, [r7, #0]
 800b3e4:	6878      	ldr	r0, [r7, #4]
 800b3e6:	f000 f990 	bl	800b70a <_ZNSt12_Destroy_auxILb1EE9__destroyIP12sum_operatorEEvT_S4_>
    }
 800b3ea:	bf00      	nop
 800b3ec:	3708      	adds	r7, #8
 800b3ee:	46bd      	mov	sp, r7
 800b3f0:	bd80      	pop	{r7, pc}

0800b3f2 <_ZNSaIP18Compare_expressionED1Ev>:
 800b3f2:	b580      	push	{r7, lr}
 800b3f4:	b082      	sub	sp, #8
 800b3f6:	af00      	add	r7, sp, #0
 800b3f8:	6078      	str	r0, [r7, #4]
 800b3fa:	6878      	ldr	r0, [r7, #4]
 800b3fc:	f000 f990 	bl	800b720 <_ZN9__gnu_cxx13new_allocatorIP18Compare_expressionED1Ev>
 800b400:	687b      	ldr	r3, [r7, #4]
 800b402:	4618      	mov	r0, r3
 800b404:	3708      	adds	r7, #8
 800b406:	46bd      	mov	sp, r7
 800b408:	bd80      	pop	{r7, pc}

0800b40a <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE13_M_deallocateEPS1_j>:
      _M_deallocate(pointer __p, size_t __n)
 800b40a:	b580      	push	{r7, lr}
 800b40c:	b084      	sub	sp, #16
 800b40e:	af00      	add	r7, sp, #0
 800b410:	60f8      	str	r0, [r7, #12]
 800b412:	60b9      	str	r1, [r7, #8]
 800b414:	607a      	str	r2, [r7, #4]
	if (__p)
 800b416:	68bb      	ldr	r3, [r7, #8]
 800b418:	2b00      	cmp	r3, #0
 800b41a:	d005      	beq.n	800b428 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE13_M_deallocateEPS1_j+0x1e>
	  _Tr::deallocate(_M_impl, __p, __n);
 800b41c:	68fb      	ldr	r3, [r7, #12]
 800b41e:	687a      	ldr	r2, [r7, #4]
 800b420:	68b9      	ldr	r1, [r7, #8]
 800b422:	4618      	mov	r0, r3
 800b424:	f000 f987 	bl	800b736 <_ZNSt16allocator_traitsISaIP18Compare_expressionEE10deallocateERS2_PS1_j>
      }
 800b428:	bf00      	nop
 800b42a:	3710      	adds	r7, #16
 800b42c:	46bd      	mov	sp, r7
 800b42e:	bd80      	pop	{r7, pc}

0800b430 <_ZSt8_DestroyIPP18Compare_expressionEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 800b430:	b580      	push	{r7, lr}
 800b432:	b082      	sub	sp, #8
 800b434:	af00      	add	r7, sp, #0
 800b436:	6078      	str	r0, [r7, #4]
 800b438:	6039      	str	r1, [r7, #0]
	__destroy(__first, __last);
 800b43a:	6839      	ldr	r1, [r7, #0]
 800b43c:	6878      	ldr	r0, [r7, #4]
 800b43e:	f000 f989 	bl	800b754 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18Compare_expressionEEvT_S5_>
    }
 800b442:	bf00      	nop
 800b444:	3708      	adds	r7, #8
 800b446:	46bd      	mov	sp, r7
 800b448:	bd80      	pop	{r7, pc}

0800b44a <_ZNSaIP14And_expressionED1Ev>:
 800b44a:	b580      	push	{r7, lr}
 800b44c:	b082      	sub	sp, #8
 800b44e:	af00      	add	r7, sp, #0
 800b450:	6078      	str	r0, [r7, #4]
 800b452:	6878      	ldr	r0, [r7, #4]
 800b454:	f000 f989 	bl	800b76a <_ZN9__gnu_cxx13new_allocatorIP14And_expressionED1Ev>
 800b458:	687b      	ldr	r3, [r7, #4]
 800b45a:	4618      	mov	r0, r3
 800b45c:	3708      	adds	r7, #8
 800b45e:	46bd      	mov	sp, r7
 800b460:	bd80      	pop	{r7, pc}

0800b462 <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE13_M_deallocateEPS1_j>:
      _M_deallocate(pointer __p, size_t __n)
 800b462:	b580      	push	{r7, lr}
 800b464:	b084      	sub	sp, #16
 800b466:	af00      	add	r7, sp, #0
 800b468:	60f8      	str	r0, [r7, #12]
 800b46a:	60b9      	str	r1, [r7, #8]
 800b46c:	607a      	str	r2, [r7, #4]
	if (__p)
 800b46e:	68bb      	ldr	r3, [r7, #8]
 800b470:	2b00      	cmp	r3, #0
 800b472:	d005      	beq.n	800b480 <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE13_M_deallocateEPS1_j+0x1e>
	  _Tr::deallocate(_M_impl, __p, __n);
 800b474:	68fb      	ldr	r3, [r7, #12]
 800b476:	687a      	ldr	r2, [r7, #4]
 800b478:	68b9      	ldr	r1, [r7, #8]
 800b47a:	4618      	mov	r0, r3
 800b47c:	f000 f980 	bl	800b780 <_ZNSt16allocator_traitsISaIP14And_expressionEE10deallocateERS2_PS1_j>
      }
 800b480:	bf00      	nop
 800b482:	3710      	adds	r7, #16
 800b484:	46bd      	mov	sp, r7
 800b486:	bd80      	pop	{r7, pc}

0800b488 <_ZSt8_DestroyIPP14And_expressionEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 800b488:	b580      	push	{r7, lr}
 800b48a:	b082      	sub	sp, #8
 800b48c:	af00      	add	r7, sp, #0
 800b48e:	6078      	str	r0, [r7, #4]
 800b490:	6039      	str	r1, [r7, #0]
	__destroy(__first, __last);
 800b492:	6839      	ldr	r1, [r7, #0]
 800b494:	6878      	ldr	r0, [r7, #4]
 800b496:	f000 f982 	bl	800b79e <_ZNSt12_Destroy_auxILb1EE9__destroyIPP14And_expressionEEvT_S5_>
    }
 800b49a:	bf00      	nop
 800b49c:	3708      	adds	r7, #8
 800b49e:	46bd      	mov	sp, r7
 800b4a0:	bd80      	pop	{r7, pc}

0800b4a2 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800b4a2:	b480      	push	{r7}
 800b4a4:	b083      	sub	sp, #12
 800b4a6:	af00      	add	r7, sp, #0
 800b4a8:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800b4aa:	687b      	ldr	r3, [r7, #4]
 800b4ac:	4618      	mov	r0, r3
 800b4ae:	370c      	adds	r7, #12
 800b4b0:	46bd      	mov	sp, r7
 800b4b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b4b6:	4770      	bx	lr

0800b4b8 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRbEENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 800b4b8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b4ba:	b083      	sub	sp, #12
 800b4bc:	af00      	add	r7, sp, #0
 800b4be:	6078      	str	r0, [r7, #4]
 800b4c0:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 800b4c2:	6878      	ldr	r0, [r7, #4]
 800b4c4:	f000 f88d 	bl	800b5e2 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800b4c8:	4604      	mov	r4, r0
 800b4ca:	6838      	ldr	r0, [r7, #0]
 800b4cc:	f7fa fb43 	bl	8005b56 <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
 800b4d0:	4603      	mov	r3, r0
 800b4d2:	461a      	mov	r2, r3
 800b4d4:	4621      	mov	r1, r4
 800b4d6:	4628      	mov	r0, r5
 800b4d8:	f000 f96c 	bl	800b7b4 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRbEESF_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 800b4dc:	4633      	mov	r3, r6
    }
 800b4de:	4618      	mov	r0, r3
 800b4e0:	370c      	adds	r7, #12
 800b4e2:	46bd      	mov	sp, r7
 800b4e4:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800b4e6 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRiEENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 800b4e6:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b4e8:	b083      	sub	sp, #12
 800b4ea:	af00      	add	r7, sp, #0
 800b4ec:	6078      	str	r0, [r7, #4]
 800b4ee:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 800b4f0:	6878      	ldr	r0, [r7, #4]
 800b4f2:	f000 f876 	bl	800b5e2 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800b4f6:	4604      	mov	r4, r0
 800b4f8:	6838      	ldr	r0, [r7, #0]
 800b4fa:	f7fa fae8 	bl	8005ace <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 800b4fe:	4603      	mov	r3, r0
 800b500:	461a      	mov	r2, r3
 800b502:	4621      	mov	r1, r4
 800b504:	4628      	mov	r0, r5
 800b506:	f000 f96c 	bl	800b7e2 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRiEESF_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 800b50a:	4633      	mov	r3, r6
    }
 800b50c:	4618      	mov	r0, r3
 800b50e:	370c      	adds	r7, #12
 800b510:	46bd      	mov	sp, r7
 800b512:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800b514 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRfEENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 800b514:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b516:	b083      	sub	sp, #12
 800b518:	af00      	add	r7, sp, #0
 800b51a:	6078      	str	r0, [r7, #4]
 800b51c:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 800b51e:	6878      	ldr	r0, [r7, #4]
 800b520:	f000 f85f 	bl	800b5e2 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800b524:	4604      	mov	r4, r0
 800b526:	6838      	ldr	r0, [r7, #0]
 800b528:	f7fa faf3 	bl	8005b12 <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 800b52c:	4603      	mov	r3, r0
 800b52e:	461a      	mov	r2, r3
 800b530:	4621      	mov	r1, r4
 800b532:	4628      	mov	r0, r5
 800b534:	f000 f96c 	bl	800b810 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRfEESF_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 800b538:	4633      	mov	r3, r6
    }
 800b53a:	4618      	mov	r0, r3
 800b53c:	370c      	adds	r7, #12
 800b53e:	46bd      	mov	sp, r7
 800b540:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800b542 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRS8_EENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 800b542:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b544:	b083      	sub	sp, #12
 800b546:	af00      	add	r7, sp, #0
 800b548:	6078      	str	r0, [r7, #4]
 800b54a:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 800b54c:	6878      	ldr	r0, [r7, #4]
 800b54e:	f000 f848 	bl	800b5e2 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800b552:	4604      	mov	r4, r0
 800b554:	6838      	ldr	r0, [r7, #0]
 800b556:	f7fa fb2c 	bl	8005bb2 <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 800b55a:	4603      	mov	r3, r0
 800b55c:	461a      	mov	r2, r3
 800b55e:	4621      	mov	r1, r4
 800b560:	4628      	mov	r0, r5
 800b562:	f000 f96c 	bl	800b83e <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRS9_EESF_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 800b566:	4633      	mov	r3, r6
    }
 800b568:	4618      	mov	r0, r3
 800b56a:	370c      	adds	r7, #12
 800b56c:	46bd      	mov	sp, r7
 800b56e:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800b570 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRSA_EENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 800b570:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b572:	b083      	sub	sp, #12
 800b574:	af00      	add	r7, sp, #0
 800b576:	6078      	str	r0, [r7, #4]
 800b578:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 800b57a:	6878      	ldr	r0, [r7, #4]
 800b57c:	f000 f831 	bl	800b5e2 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800b580:	4604      	mov	r4, r0
 800b582:	6838      	ldr	r0, [r7, #0]
 800b584:	f000 f972 	bl	800b86c <_ZSt7forwardIRP8VariableEOT_RNSt16remove_referenceIS3_E4typeE>
 800b588:	4603      	mov	r3, r0
 800b58a:	461a      	mov	r2, r3
 800b58c:	4621      	mov	r1, r4
 800b58e:	4628      	mov	r0, r5
 800b590:	f000 f977 	bl	800b882 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRSB_EESF_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 800b594:	4633      	mov	r3, r6
    }
 800b596:	4618      	mov	r0, r3
 800b598:	370c      	adds	r7, #12
 800b59a:	46bd      	mov	sp, r7
 800b59c:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800b59e <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRSC_EENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 800b59e:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b5a0:	b083      	sub	sp, #12
 800b5a2:	af00      	add	r7, sp, #0
 800b5a4:	6078      	str	r0, [r7, #4]
 800b5a6:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 800b5a8:	6878      	ldr	r0, [r7, #4]
 800b5aa:	f000 f81a 	bl	800b5e2 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800b5ae:	4604      	mov	r4, r0
 800b5b0:	6838      	ldr	r0, [r7, #0]
 800b5b2:	f000 f97d 	bl	800b8b0 <_ZSt7forwardIRP13Function_callEOT_RNSt16remove_referenceIS3_E4typeE>
 800b5b6:	4603      	mov	r3, r0
 800b5b8:	461a      	mov	r2, r3
 800b5ba:	4621      	mov	r1, r4
 800b5bc:	4628      	mov	r0, r5
 800b5be:	f000 f982 	bl	800b8c6 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRSD_EESF_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 800b5c2:	4633      	mov	r3, r6
    }
 800b5c4:	4618      	mov	r0, r3
 800b5c6:	370c      	adds	r7, #12
 800b5c8:	46bd      	mov	sp, r7
 800b5ca:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800b5cc <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifS9_SB_SD_EEEJEE9_M_accessEv>:
      _M_access() const
 800b5cc:	b480      	push	{r7}
 800b5ce:	b083      	sub	sp, #12
 800b5d0:	af00      	add	r7, sp, #0
 800b5d2:	6078      	str	r0, [r7, #4]
      { return _M_data; }
 800b5d4:	687b      	ldr	r3, [r7, #4]
 800b5d6:	4618      	mov	r0, r3
 800b5d8:	370c      	adds	r7, #12
 800b5da:	46bd      	mov	sp, r7
 800b5dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b5e0:	4770      	bx	lr

0800b5e2 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800b5e2:	b480      	push	{r7}
 800b5e4:	b083      	sub	sp, #12
 800b5e6:	af00      	add	r7, sp, #0
 800b5e8:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800b5ea:	687b      	ldr	r3, [r7, #4]
 800b5ec:	4618      	mov	r0, r3
 800b5ee:	370c      	adds	r7, #12
 800b5f0:	46bd      	mov	sp, r7
 800b5f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b5f6:	4770      	bx	lr

0800b5f8 <_ZN9__gnu_cxx13new_allocatorIP16Power_expressionED1Ev>:
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 800b5f8:	b480      	push	{r7}
 800b5fa:	b083      	sub	sp, #12
 800b5fc:	af00      	add	r7, sp, #0
 800b5fe:	6078      	str	r0, [r7, #4]
 800b600:	687b      	ldr	r3, [r7, #4]
 800b602:	4618      	mov	r0, r3
 800b604:	370c      	adds	r7, #12
 800b606:	46bd      	mov	sp, r7
 800b608:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b60c:	4770      	bx	lr

0800b60e <_ZNSt16allocator_traitsISaIP16Power_expressionEE10deallocateERS2_PS1_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 800b60e:	b580      	push	{r7, lr}
 800b610:	b084      	sub	sp, #16
 800b612:	af00      	add	r7, sp, #0
 800b614:	60f8      	str	r0, [r7, #12]
 800b616:	60b9      	str	r1, [r7, #8]
 800b618:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 800b61a:	687a      	ldr	r2, [r7, #4]
 800b61c:	68b9      	ldr	r1, [r7, #8]
 800b61e:	68f8      	ldr	r0, [r7, #12]
 800b620:	f000 f968 	bl	800b8f4 <_ZN9__gnu_cxx13new_allocatorIP16Power_expressionE10deallocateEPS2_j>
 800b624:	bf00      	nop
 800b626:	3710      	adds	r7, #16
 800b628:	46bd      	mov	sp, r7
 800b62a:	bd80      	pop	{r7, pc}

0800b62c <_ZNSt12_Destroy_auxILb1EE9__destroyIPP16Power_expressionEEvT_S5_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
 800b62c:	b480      	push	{r7}
 800b62e:	b083      	sub	sp, #12
 800b630:	af00      	add	r7, sp, #0
 800b632:	6078      	str	r0, [r7, #4]
 800b634:	6039      	str	r1, [r7, #0]
 800b636:	bf00      	nop
 800b638:	370c      	adds	r7, #12
 800b63a:	46bd      	mov	sp, r7
 800b63c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b640:	4770      	bx	lr

0800b642 <_ZN9__gnu_cxx13new_allocatorI13mult_operatorED1Ev>:
 800b642:	b480      	push	{r7}
 800b644:	b083      	sub	sp, #12
 800b646:	af00      	add	r7, sp, #0
 800b648:	6078      	str	r0, [r7, #4]
 800b64a:	687b      	ldr	r3, [r7, #4]
 800b64c:	4618      	mov	r0, r3
 800b64e:	370c      	adds	r7, #12
 800b650:	46bd      	mov	sp, r7
 800b652:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b656:	4770      	bx	lr

0800b658 <_ZNSt16allocator_traitsISaI13mult_operatorEE10deallocateERS1_PS0_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 800b658:	b580      	push	{r7, lr}
 800b65a:	b084      	sub	sp, #16
 800b65c:	af00      	add	r7, sp, #0
 800b65e:	60f8      	str	r0, [r7, #12]
 800b660:	60b9      	str	r1, [r7, #8]
 800b662:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 800b664:	687a      	ldr	r2, [r7, #4]
 800b666:	68b9      	ldr	r1, [r7, #8]
 800b668:	68f8      	ldr	r0, [r7, #12]
 800b66a:	f000 f94f 	bl	800b90c <_ZN9__gnu_cxx13new_allocatorI13mult_operatorE10deallocateEPS1_j>
 800b66e:	bf00      	nop
 800b670:	3710      	adds	r7, #16
 800b672:	46bd      	mov	sp, r7
 800b674:	bd80      	pop	{r7, pc}

0800b676 <_ZNSt12_Destroy_auxILb1EE9__destroyIP13mult_operatorEEvT_S4_>:
 800b676:	b480      	push	{r7}
 800b678:	b083      	sub	sp, #12
 800b67a:	af00      	add	r7, sp, #0
 800b67c:	6078      	str	r0, [r7, #4]
 800b67e:	6039      	str	r1, [r7, #0]
 800b680:	bf00      	nop
 800b682:	370c      	adds	r7, #12
 800b684:	46bd      	mov	sp, r7
 800b686:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b68a:	4770      	bx	lr

0800b68c <_ZN9__gnu_cxx13new_allocatorIP19Multiply_expressionED1Ev>:
 800b68c:	b480      	push	{r7}
 800b68e:	b083      	sub	sp, #12
 800b690:	af00      	add	r7, sp, #0
 800b692:	6078      	str	r0, [r7, #4]
 800b694:	687b      	ldr	r3, [r7, #4]
 800b696:	4618      	mov	r0, r3
 800b698:	370c      	adds	r7, #12
 800b69a:	46bd      	mov	sp, r7
 800b69c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b6a0:	4770      	bx	lr

0800b6a2 <_ZNSt16allocator_traitsISaIP19Multiply_expressionEE10deallocateERS2_PS1_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 800b6a2:	b580      	push	{r7, lr}
 800b6a4:	b084      	sub	sp, #16
 800b6a6:	af00      	add	r7, sp, #0
 800b6a8:	60f8      	str	r0, [r7, #12]
 800b6aa:	60b9      	str	r1, [r7, #8]
 800b6ac:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 800b6ae:	687a      	ldr	r2, [r7, #4]
 800b6b0:	68b9      	ldr	r1, [r7, #8]
 800b6b2:	68f8      	ldr	r0, [r7, #12]
 800b6b4:	f000 f936 	bl	800b924 <_ZN9__gnu_cxx13new_allocatorIP19Multiply_expressionE10deallocateEPS2_j>
 800b6b8:	bf00      	nop
 800b6ba:	3710      	adds	r7, #16
 800b6bc:	46bd      	mov	sp, r7
 800b6be:	bd80      	pop	{r7, pc}

0800b6c0 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP19Multiply_expressionEEvT_S5_>:
 800b6c0:	b480      	push	{r7}
 800b6c2:	b083      	sub	sp, #12
 800b6c4:	af00      	add	r7, sp, #0
 800b6c6:	6078      	str	r0, [r7, #4]
 800b6c8:	6039      	str	r1, [r7, #0]
 800b6ca:	bf00      	nop
 800b6cc:	370c      	adds	r7, #12
 800b6ce:	46bd      	mov	sp, r7
 800b6d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b6d4:	4770      	bx	lr

0800b6d6 <_ZN9__gnu_cxx13new_allocatorI12sum_operatorED1Ev>:
 800b6d6:	b480      	push	{r7}
 800b6d8:	b083      	sub	sp, #12
 800b6da:	af00      	add	r7, sp, #0
 800b6dc:	6078      	str	r0, [r7, #4]
 800b6de:	687b      	ldr	r3, [r7, #4]
 800b6e0:	4618      	mov	r0, r3
 800b6e2:	370c      	adds	r7, #12
 800b6e4:	46bd      	mov	sp, r7
 800b6e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b6ea:	4770      	bx	lr

0800b6ec <_ZNSt16allocator_traitsISaI12sum_operatorEE10deallocateERS1_PS0_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 800b6ec:	b580      	push	{r7, lr}
 800b6ee:	b084      	sub	sp, #16
 800b6f0:	af00      	add	r7, sp, #0
 800b6f2:	60f8      	str	r0, [r7, #12]
 800b6f4:	60b9      	str	r1, [r7, #8]
 800b6f6:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 800b6f8:	687a      	ldr	r2, [r7, #4]
 800b6fa:	68b9      	ldr	r1, [r7, #8]
 800b6fc:	68f8      	ldr	r0, [r7, #12]
 800b6fe:	f000 f91d 	bl	800b93c <_ZN9__gnu_cxx13new_allocatorI12sum_operatorE10deallocateEPS1_j>
 800b702:	bf00      	nop
 800b704:	3710      	adds	r7, #16
 800b706:	46bd      	mov	sp, r7
 800b708:	bd80      	pop	{r7, pc}

0800b70a <_ZNSt12_Destroy_auxILb1EE9__destroyIP12sum_operatorEEvT_S4_>:
 800b70a:	b480      	push	{r7}
 800b70c:	b083      	sub	sp, #12
 800b70e:	af00      	add	r7, sp, #0
 800b710:	6078      	str	r0, [r7, #4]
 800b712:	6039      	str	r1, [r7, #0]
 800b714:	bf00      	nop
 800b716:	370c      	adds	r7, #12
 800b718:	46bd      	mov	sp, r7
 800b71a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b71e:	4770      	bx	lr

0800b720 <_ZN9__gnu_cxx13new_allocatorIP18Compare_expressionED1Ev>:
 800b720:	b480      	push	{r7}
 800b722:	b083      	sub	sp, #12
 800b724:	af00      	add	r7, sp, #0
 800b726:	6078      	str	r0, [r7, #4]
 800b728:	687b      	ldr	r3, [r7, #4]
 800b72a:	4618      	mov	r0, r3
 800b72c:	370c      	adds	r7, #12
 800b72e:	46bd      	mov	sp, r7
 800b730:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b734:	4770      	bx	lr

0800b736 <_ZNSt16allocator_traitsISaIP18Compare_expressionEE10deallocateERS2_PS1_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 800b736:	b580      	push	{r7, lr}
 800b738:	b084      	sub	sp, #16
 800b73a:	af00      	add	r7, sp, #0
 800b73c:	60f8      	str	r0, [r7, #12]
 800b73e:	60b9      	str	r1, [r7, #8]
 800b740:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 800b742:	687a      	ldr	r2, [r7, #4]
 800b744:	68b9      	ldr	r1, [r7, #8]
 800b746:	68f8      	ldr	r0, [r7, #12]
 800b748:	f000 f904 	bl	800b954 <_ZN9__gnu_cxx13new_allocatorIP18Compare_expressionE10deallocateEPS2_j>
 800b74c:	bf00      	nop
 800b74e:	3710      	adds	r7, #16
 800b750:	46bd      	mov	sp, r7
 800b752:	bd80      	pop	{r7, pc}

0800b754 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18Compare_expressionEEvT_S5_>:
 800b754:	b480      	push	{r7}
 800b756:	b083      	sub	sp, #12
 800b758:	af00      	add	r7, sp, #0
 800b75a:	6078      	str	r0, [r7, #4]
 800b75c:	6039      	str	r1, [r7, #0]
 800b75e:	bf00      	nop
 800b760:	370c      	adds	r7, #12
 800b762:	46bd      	mov	sp, r7
 800b764:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b768:	4770      	bx	lr

0800b76a <_ZN9__gnu_cxx13new_allocatorIP14And_expressionED1Ev>:
 800b76a:	b480      	push	{r7}
 800b76c:	b083      	sub	sp, #12
 800b76e:	af00      	add	r7, sp, #0
 800b770:	6078      	str	r0, [r7, #4]
 800b772:	687b      	ldr	r3, [r7, #4]
 800b774:	4618      	mov	r0, r3
 800b776:	370c      	adds	r7, #12
 800b778:	46bd      	mov	sp, r7
 800b77a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b77e:	4770      	bx	lr

0800b780 <_ZNSt16allocator_traitsISaIP14And_expressionEE10deallocateERS2_PS1_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 800b780:	b580      	push	{r7, lr}
 800b782:	b084      	sub	sp, #16
 800b784:	af00      	add	r7, sp, #0
 800b786:	60f8      	str	r0, [r7, #12]
 800b788:	60b9      	str	r1, [r7, #8]
 800b78a:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 800b78c:	687a      	ldr	r2, [r7, #4]
 800b78e:	68b9      	ldr	r1, [r7, #8]
 800b790:	68f8      	ldr	r0, [r7, #12]
 800b792:	f000 f8eb 	bl	800b96c <_ZN9__gnu_cxx13new_allocatorIP14And_expressionE10deallocateEPS2_j>
 800b796:	bf00      	nop
 800b798:	3710      	adds	r7, #16
 800b79a:	46bd      	mov	sp, r7
 800b79c:	bd80      	pop	{r7, pc}

0800b79e <_ZNSt12_Destroy_auxILb1EE9__destroyIPP14And_expressionEEvT_S5_>:
 800b79e:	b480      	push	{r7}
 800b7a0:	b083      	sub	sp, #12
 800b7a2:	af00      	add	r7, sp, #0
 800b7a4:	6078      	str	r0, [r7, #4]
 800b7a6:	6039      	str	r1, [r7, #0]
 800b7a8:	bf00      	nop
 800b7aa:	370c      	adds	r7, #12
 800b7ac:	46bd      	mov	sp, r7
 800b7ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b7b2:	4770      	bx	lr

0800b7b4 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRbEESF_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800b7b4:	b5b0      	push	{r4, r5, r7, lr}
 800b7b6:	b084      	sub	sp, #16
 800b7b8:	af00      	add	r7, sp, #0
 800b7ba:	7338      	strb	r0, [r7, #12]
 800b7bc:	60b9      	str	r1, [r7, #8]
 800b7be:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800b7c0:	68b8      	ldr	r0, [r7, #8]
 800b7c2:	f7ff ff0e 	bl	800b5e2 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800b7c6:	4604      	mov	r4, r0
 800b7c8:	6878      	ldr	r0, [r7, #4]
 800b7ca:	f7fa f9c4 	bl	8005b56 <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
 800b7ce:	4603      	mov	r3, r0
 800b7d0:	4619      	mov	r1, r3
 800b7d2:	4620      	mov	r0, r4
 800b7d4:	f000 f8d6 	bl	800b984 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvENUlOT_E_clIRbEENS0_16__variant_cookieESE_>
 800b7d8:	462b      	mov	r3, r5
 800b7da:	4618      	mov	r0, r3
 800b7dc:	3710      	adds	r7, #16
 800b7de:	46bd      	mov	sp, r7
 800b7e0:	bdb0      	pop	{r4, r5, r7, pc}

0800b7e2 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRiEESF_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800b7e2:	b5b0      	push	{r4, r5, r7, lr}
 800b7e4:	b084      	sub	sp, #16
 800b7e6:	af00      	add	r7, sp, #0
 800b7e8:	7338      	strb	r0, [r7, #12]
 800b7ea:	60b9      	str	r1, [r7, #8]
 800b7ec:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800b7ee:	68b8      	ldr	r0, [r7, #8]
 800b7f0:	f7ff fef7 	bl	800b5e2 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800b7f4:	4604      	mov	r4, r0
 800b7f6:	6878      	ldr	r0, [r7, #4]
 800b7f8:	f7fa f969 	bl	8005ace <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 800b7fc:	4603      	mov	r3, r0
 800b7fe:	4619      	mov	r1, r3
 800b800:	4620      	mov	r0, r4
 800b802:	f000 f8d0 	bl	800b9a6 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvENUlOT_E_clIRiEENS0_16__variant_cookieESE_>
 800b806:	462b      	mov	r3, r5
 800b808:	4618      	mov	r0, r3
 800b80a:	3710      	adds	r7, #16
 800b80c:	46bd      	mov	sp, r7
 800b80e:	bdb0      	pop	{r4, r5, r7, pc}

0800b810 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRfEESF_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800b810:	b5b0      	push	{r4, r5, r7, lr}
 800b812:	b084      	sub	sp, #16
 800b814:	af00      	add	r7, sp, #0
 800b816:	7338      	strb	r0, [r7, #12]
 800b818:	60b9      	str	r1, [r7, #8]
 800b81a:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800b81c:	68b8      	ldr	r0, [r7, #8]
 800b81e:	f7ff fee0 	bl	800b5e2 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800b822:	4604      	mov	r4, r0
 800b824:	6878      	ldr	r0, [r7, #4]
 800b826:	f7fa f974 	bl	8005b12 <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 800b82a:	4603      	mov	r3, r0
 800b82c:	4619      	mov	r1, r3
 800b82e:	4620      	mov	r0, r4
 800b830:	f000 f8ca 	bl	800b9c8 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvENUlOT_E_clIRfEENS0_16__variant_cookieESE_>
 800b834:	462b      	mov	r3, r5
 800b836:	4618      	mov	r0, r3
 800b838:	3710      	adds	r7, #16
 800b83a:	46bd      	mov	sp, r7
 800b83c:	bdb0      	pop	{r4, r5, r7, pc}

0800b83e <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRS9_EESF_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800b83e:	b5b0      	push	{r4, r5, r7, lr}
 800b840:	b084      	sub	sp, #16
 800b842:	af00      	add	r7, sp, #0
 800b844:	7338      	strb	r0, [r7, #12]
 800b846:	60b9      	str	r1, [r7, #8]
 800b848:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800b84a:	68b8      	ldr	r0, [r7, #8]
 800b84c:	f7ff fec9 	bl	800b5e2 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800b850:	4604      	mov	r4, r0
 800b852:	6878      	ldr	r0, [r7, #4]
 800b854:	f7fa f9ad 	bl	8005bb2 <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 800b858:	4603      	mov	r3, r0
 800b85a:	4619      	mov	r1, r3
 800b85c:	4620      	mov	r0, r4
 800b85e:	f000 f8c4 	bl	800b9ea <_ZZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvENUlOT_E_clIRS7_EENS0_16__variant_cookieESE_>
 800b862:	462b      	mov	r3, r5
 800b864:	4618      	mov	r0, r3
 800b866:	3710      	adds	r7, #16
 800b868:	46bd      	mov	sp, r7
 800b86a:	bdb0      	pop	{r4, r5, r7, pc}

0800b86c <_ZSt7forwardIRP8VariableEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800b86c:	b480      	push	{r7}
 800b86e:	b083      	sub	sp, #12
 800b870:	af00      	add	r7, sp, #0
 800b872:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800b874:	687b      	ldr	r3, [r7, #4]
 800b876:	4618      	mov	r0, r3
 800b878:	370c      	adds	r7, #12
 800b87a:	46bd      	mov	sp, r7
 800b87c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b880:	4770      	bx	lr

0800b882 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRSB_EESF_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800b882:	b5b0      	push	{r4, r5, r7, lr}
 800b884:	b084      	sub	sp, #16
 800b886:	af00      	add	r7, sp, #0
 800b888:	7338      	strb	r0, [r7, #12]
 800b88a:	60b9      	str	r1, [r7, #8]
 800b88c:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800b88e:	68b8      	ldr	r0, [r7, #8]
 800b890:	f7ff fea7 	bl	800b5e2 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800b894:	4604      	mov	r4, r0
 800b896:	6878      	ldr	r0, [r7, #4]
 800b898:	f7ff ffe8 	bl	800b86c <_ZSt7forwardIRP8VariableEOT_RNSt16remove_referenceIS3_E4typeE>
 800b89c:	4603      	mov	r3, r0
 800b89e:	4619      	mov	r1, r3
 800b8a0:	4620      	mov	r0, r4
 800b8a2:	f000 f8b3 	bl	800ba0c <_ZZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvENUlOT_E_clIRS9_EENS0_16__variant_cookieESE_>
 800b8a6:	462b      	mov	r3, r5
 800b8a8:	4618      	mov	r0, r3
 800b8aa:	3710      	adds	r7, #16
 800b8ac:	46bd      	mov	sp, r7
 800b8ae:	bdb0      	pop	{r4, r5, r7, pc}

0800b8b0 <_ZSt7forwardIRP13Function_callEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800b8b0:	b480      	push	{r7}
 800b8b2:	b083      	sub	sp, #12
 800b8b4:	af00      	add	r7, sp, #0
 800b8b6:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800b8b8:	687b      	ldr	r3, [r7, #4]
 800b8ba:	4618      	mov	r0, r3
 800b8bc:	370c      	adds	r7, #12
 800b8be:	46bd      	mov	sp, r7
 800b8c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b8c4:	4770      	bx	lr

0800b8c6 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRSD_EESF_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800b8c6:	b5b0      	push	{r4, r5, r7, lr}
 800b8c8:	b084      	sub	sp, #16
 800b8ca:	af00      	add	r7, sp, #0
 800b8cc:	7338      	strb	r0, [r7, #12]
 800b8ce:	60b9      	str	r1, [r7, #8]
 800b8d0:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800b8d2:	68b8      	ldr	r0, [r7, #8]
 800b8d4:	f7ff fe85 	bl	800b5e2 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800b8d8:	4604      	mov	r4, r0
 800b8da:	6878      	ldr	r0, [r7, #4]
 800b8dc:	f7ff ffe8 	bl	800b8b0 <_ZSt7forwardIRP13Function_callEOT_RNSt16remove_referenceIS3_E4typeE>
 800b8e0:	4603      	mov	r3, r0
 800b8e2:	4619      	mov	r1, r3
 800b8e4:	4620      	mov	r0, r4
 800b8e6:	f000 f8a2 	bl	800ba2e <_ZZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvENUlOT_E_clIRSB_EENS0_16__variant_cookieESE_>
 800b8ea:	462b      	mov	r3, r5
 800b8ec:	4618      	mov	r0, r3
 800b8ee:	3710      	adds	r7, #16
 800b8f0:	46bd      	mov	sp, r7
 800b8f2:	bdb0      	pop	{r4, r5, r7, pc}

0800b8f4 <_ZN9__gnu_cxx13new_allocatorIP16Power_expressionE10deallocateEPS2_j>:
      deallocate(pointer __p, size_type)
 800b8f4:	b580      	push	{r7, lr}
 800b8f6:	b084      	sub	sp, #16
 800b8f8:	af00      	add	r7, sp, #0
 800b8fa:	60f8      	str	r0, [r7, #12]
 800b8fc:	60b9      	str	r1, [r7, #8]
 800b8fe:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 800b900:	68b8      	ldr	r0, [r7, #8]
 800b902:	f016 ff7d 	bl	8022800 <_ZdlPv>
      }
 800b906:	3710      	adds	r7, #16
 800b908:	46bd      	mov	sp, r7
 800b90a:	bd80      	pop	{r7, pc}

0800b90c <_ZN9__gnu_cxx13new_allocatorI13mult_operatorE10deallocateEPS1_j>:
      deallocate(pointer __p, size_type)
 800b90c:	b580      	push	{r7, lr}
 800b90e:	b084      	sub	sp, #16
 800b910:	af00      	add	r7, sp, #0
 800b912:	60f8      	str	r0, [r7, #12]
 800b914:	60b9      	str	r1, [r7, #8]
 800b916:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 800b918:	68b8      	ldr	r0, [r7, #8]
 800b91a:	f016 ff71 	bl	8022800 <_ZdlPv>
      }
 800b91e:	3710      	adds	r7, #16
 800b920:	46bd      	mov	sp, r7
 800b922:	bd80      	pop	{r7, pc}

0800b924 <_ZN9__gnu_cxx13new_allocatorIP19Multiply_expressionE10deallocateEPS2_j>:
      deallocate(pointer __p, size_type)
 800b924:	b580      	push	{r7, lr}
 800b926:	b084      	sub	sp, #16
 800b928:	af00      	add	r7, sp, #0
 800b92a:	60f8      	str	r0, [r7, #12]
 800b92c:	60b9      	str	r1, [r7, #8]
 800b92e:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 800b930:	68b8      	ldr	r0, [r7, #8]
 800b932:	f016 ff65 	bl	8022800 <_ZdlPv>
      }
 800b936:	3710      	adds	r7, #16
 800b938:	46bd      	mov	sp, r7
 800b93a:	bd80      	pop	{r7, pc}

0800b93c <_ZN9__gnu_cxx13new_allocatorI12sum_operatorE10deallocateEPS1_j>:
      deallocate(pointer __p, size_type)
 800b93c:	b580      	push	{r7, lr}
 800b93e:	b084      	sub	sp, #16
 800b940:	af00      	add	r7, sp, #0
 800b942:	60f8      	str	r0, [r7, #12]
 800b944:	60b9      	str	r1, [r7, #8]
 800b946:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 800b948:	68b8      	ldr	r0, [r7, #8]
 800b94a:	f016 ff59 	bl	8022800 <_ZdlPv>
      }
 800b94e:	3710      	adds	r7, #16
 800b950:	46bd      	mov	sp, r7
 800b952:	bd80      	pop	{r7, pc}

0800b954 <_ZN9__gnu_cxx13new_allocatorIP18Compare_expressionE10deallocateEPS2_j>:
      deallocate(pointer __p, size_type)
 800b954:	b580      	push	{r7, lr}
 800b956:	b084      	sub	sp, #16
 800b958:	af00      	add	r7, sp, #0
 800b95a:	60f8      	str	r0, [r7, #12]
 800b95c:	60b9      	str	r1, [r7, #8]
 800b95e:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 800b960:	68b8      	ldr	r0, [r7, #8]
 800b962:	f016 ff4d 	bl	8022800 <_ZdlPv>
      }
 800b966:	3710      	adds	r7, #16
 800b968:	46bd      	mov	sp, r7
 800b96a:	bd80      	pop	{r7, pc}

0800b96c <_ZN9__gnu_cxx13new_allocatorIP14And_expressionE10deallocateEPS2_j>:
      deallocate(pointer __p, size_type)
 800b96c:	b580      	push	{r7, lr}
 800b96e:	b084      	sub	sp, #16
 800b970:	af00      	add	r7, sp, #0
 800b972:	60f8      	str	r0, [r7, #12]
 800b974:	60b9      	str	r1, [r7, #8]
 800b976:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 800b978:	68b8      	ldr	r0, [r7, #8]
 800b97a:	f016 ff41 	bl	8022800 <_ZdlPv>
      }
 800b97e:	3710      	adds	r7, #16
 800b980:	46bd      	mov	sp, r7
 800b982:	bd80      	pop	{r7, pc}

0800b984 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvENUlOT_E_clIRbEENS0_16__variant_cookieESE_>:
	__do_visit([](auto&& __this_mem) mutable
 800b984:	b590      	push	{r4, r7, lr}
 800b986:	b083      	sub	sp, #12
 800b988:	af00      	add	r7, sp, #0
 800b98a:	6078      	str	r0, [r7, #4]
 800b98c:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 800b98e:	6838      	ldr	r0, [r7, #0]
 800b990:	f7fb fbf2 	bl	8007178 <_ZSt11__addressofIbEPT_RS0_>
 800b994:	4603      	mov	r3, r0
 800b996:	4618      	mov	r0, r3
 800b998:	f7fb fbf9 	bl	800718e <_ZSt8_DestroyIbEvPT_>
	    return {};
 800b99c:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 800b99e:	4618      	mov	r0, r3
 800b9a0:	370c      	adds	r7, #12
 800b9a2:	46bd      	mov	sp, r7
 800b9a4:	bd90      	pop	{r4, r7, pc}

0800b9a6 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvENUlOT_E_clIRiEENS0_16__variant_cookieESE_>:
 800b9a6:	b590      	push	{r4, r7, lr}
 800b9a8:	b083      	sub	sp, #12
 800b9aa:	af00      	add	r7, sp, #0
 800b9ac:	6078      	str	r0, [r7, #4]
 800b9ae:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 800b9b0:	6838      	ldr	r0, [r7, #0]
 800b9b2:	f7fb fbb7 	bl	8007124 <_ZSt11__addressofIiEPT_RS0_>
 800b9b6:	4603      	mov	r3, r0
 800b9b8:	4618      	mov	r0, r3
 800b9ba:	f7fb fbbe 	bl	800713a <_ZSt8_DestroyIiEvPT_>
	    return {};
 800b9be:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 800b9c0:	4618      	mov	r0, r3
 800b9c2:	370c      	adds	r7, #12
 800b9c4:	46bd      	mov	sp, r7
 800b9c6:	bd90      	pop	{r4, r7, pc}

0800b9c8 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvENUlOT_E_clIRfEENS0_16__variant_cookieESE_>:
 800b9c8:	b590      	push	{r4, r7, lr}
 800b9ca:	b083      	sub	sp, #12
 800b9cc:	af00      	add	r7, sp, #0
 800b9ce:	6078      	str	r0, [r7, #4]
 800b9d0:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 800b9d2:	6838      	ldr	r0, [r7, #0]
 800b9d4:	f7fb fbbb 	bl	800714e <_ZSt11__addressofIfEPT_RS0_>
 800b9d8:	4603      	mov	r3, r0
 800b9da:	4618      	mov	r0, r3
 800b9dc:	f7fb fbc2 	bl	8007164 <_ZSt8_DestroyIfEvPT_>
	    return {};
 800b9e0:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 800b9e2:	4618      	mov	r0, r3
 800b9e4:	370c      	adds	r7, #12
 800b9e6:	46bd      	mov	sp, r7
 800b9e8:	bd90      	pop	{r4, r7, pc}

0800b9ea <_ZZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvENUlOT_E_clIRS7_EENS0_16__variant_cookieESE_>:
 800b9ea:	b590      	push	{r4, r7, lr}
 800b9ec:	b083      	sub	sp, #12
 800b9ee:	af00      	add	r7, sp, #0
 800b9f0:	6078      	str	r0, [r7, #4]
 800b9f2:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 800b9f4:	6838      	ldr	r0, [r7, #0]
 800b9f6:	f7fb fbd4 	bl	80071a2 <_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_>
 800b9fa:	4603      	mov	r3, r0
 800b9fc:	4618      	mov	r0, r3
 800b9fe:	f7fb fbdb 	bl	80071b8 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_>
	    return {};
 800ba02:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 800ba04:	4618      	mov	r0, r3
 800ba06:	370c      	adds	r7, #12
 800ba08:	46bd      	mov	sp, r7
 800ba0a:	bd90      	pop	{r4, r7, pc}

0800ba0c <_ZZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvENUlOT_E_clIRS9_EENS0_16__variant_cookieESE_>:
 800ba0c:	b590      	push	{r4, r7, lr}
 800ba0e:	b083      	sub	sp, #12
 800ba10:	af00      	add	r7, sp, #0
 800ba12:	6078      	str	r0, [r7, #4]
 800ba14:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 800ba16:	6838      	ldr	r0, [r7, #0]
 800ba18:	f000 f81a 	bl	800ba50 <_ZSt11__addressofIP8VariableEPT_RS2_>
 800ba1c:	4603      	mov	r3, r0
 800ba1e:	4618      	mov	r0, r3
 800ba20:	f000 f821 	bl	800ba66 <_ZSt8_DestroyIP8VariableEvPT_>
	    return {};
 800ba24:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 800ba26:	4618      	mov	r0, r3
 800ba28:	370c      	adds	r7, #12
 800ba2a:	46bd      	mov	sp, r7
 800ba2c:	bd90      	pop	{r4, r7, pc}

0800ba2e <_ZZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvENUlOT_E_clIRSB_EENS0_16__variant_cookieESE_>:
 800ba2e:	b590      	push	{r4, r7, lr}
 800ba30:	b083      	sub	sp, #12
 800ba32:	af00      	add	r7, sp, #0
 800ba34:	6078      	str	r0, [r7, #4]
 800ba36:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 800ba38:	6838      	ldr	r0, [r7, #0]
 800ba3a:	f000 f81e 	bl	800ba7a <_ZSt11__addressofIP13Function_callEPT_RS2_>
 800ba3e:	4603      	mov	r3, r0
 800ba40:	4618      	mov	r0, r3
 800ba42:	f000 f825 	bl	800ba90 <_ZSt8_DestroyIP13Function_callEvPT_>
	    return {};
 800ba46:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 800ba48:	4618      	mov	r0, r3
 800ba4a:	370c      	adds	r7, #12
 800ba4c:	46bd      	mov	sp, r7
 800ba4e:	bd90      	pop	{r4, r7, pc}

0800ba50 <_ZSt11__addressofIP8VariableEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 800ba50:	b480      	push	{r7}
 800ba52:	b083      	sub	sp, #12
 800ba54:	af00      	add	r7, sp, #0
 800ba56:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 800ba58:	687b      	ldr	r3, [r7, #4]
 800ba5a:	4618      	mov	r0, r3
 800ba5c:	370c      	adds	r7, #12
 800ba5e:	46bd      	mov	sp, r7
 800ba60:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ba64:	4770      	bx	lr

0800ba66 <_ZSt8_DestroyIP8VariableEvPT_>:
    _Destroy(_Tp* __pointer)
 800ba66:	b480      	push	{r7}
 800ba68:	b083      	sub	sp, #12
 800ba6a:	af00      	add	r7, sp, #0
 800ba6c:	6078      	str	r0, [r7, #4]
    { __pointer->~_Tp(); }
 800ba6e:	bf00      	nop
 800ba70:	370c      	adds	r7, #12
 800ba72:	46bd      	mov	sp, r7
 800ba74:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ba78:	4770      	bx	lr

0800ba7a <_ZSt11__addressofIP13Function_callEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 800ba7a:	b480      	push	{r7}
 800ba7c:	b083      	sub	sp, #12
 800ba7e:	af00      	add	r7, sp, #0
 800ba80:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 800ba82:	687b      	ldr	r3, [r7, #4]
 800ba84:	4618      	mov	r0, r3
 800ba86:	370c      	adds	r7, #12
 800ba88:	46bd      	mov	sp, r7
 800ba8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ba8e:	4770      	bx	lr

0800ba90 <_ZSt8_DestroyIP13Function_callEvPT_>:
    _Destroy(_Tp* __pointer)
 800ba90:	b480      	push	{r7}
 800ba92:	b083      	sub	sp, #12
 800ba94:	af00      	add	r7, sp, #0
 800ba96:	6078      	str	r0, [r7, #4]
    { __pointer->~_Tp(); }
 800ba98:	bf00      	nop
 800ba9a:	370c      	adds	r7, #12
 800ba9c:	46bd      	mov	sp, r7
 800ba9e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800baa2:	4770      	bx	lr

0800baa4 <_Z41__static_initialization_and_destruction_0ii>:
 800baa4:	b590      	push	{r4, r7, lr}
 800baa6:	b0e7      	sub	sp, #412	; 0x19c
 800baa8:	af02      	add	r7, sp, #8
 800baaa:	1d3b      	adds	r3, r7, #4
 800baac:	6018      	str	r0, [r3, #0]
 800baae:	463b      	mov	r3, r7
 800bab0:	6019      	str	r1, [r3, #0]
 800bab2:	1d3b      	adds	r3, r7, #4
 800bab4:	681b      	ldr	r3, [r3, #0]
 800bab6:	2b01      	cmp	r3, #1
 800bab8:	f040 819d 	bne.w	800bdf6 <_Z41__static_initialization_and_destruction_0ii+0x352>
 800babc:	463b      	mov	r3, r7
 800babe:	681b      	ldr	r3, [r3, #0]
 800bac0:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800bac4:	4293      	cmp	r3, r2
 800bac6:	f040 8196 	bne.w	800bdf6 <_Z41__static_initialization_and_destruction_0ii+0x352>
};
 800baca:	f107 0314 	add.w	r3, r7, #20
 800bace:	4618      	mov	r0, r3
 800bad0:	2322      	movs	r3, #34	; 0x22
 800bad2:	461a      	mov	r2, r3
 800bad4:	2100      	movs	r1, #0
 800bad6:	f018 fb85 	bl	80241e4 <memset>
 800bada:	f107 0314 	add.w	r3, r7, #20
 800bade:	223a      	movs	r2, #58	; 0x3a
 800bae0:	701a      	strb	r2, [r3, #0]
 800bae2:	f107 0314 	add.w	r3, r7, #20
 800bae6:	2201      	movs	r2, #1
 800bae8:	705a      	strb	r2, [r3, #1]
 800baea:	f107 0314 	add.w	r3, r7, #20
 800baee:	220a      	movs	r2, #10
 800baf0:	709a      	strb	r2, [r3, #2]
 800baf2:	f107 0314 	add.w	r3, r7, #20
 800baf6:	220a      	movs	r2, #10
 800baf8:	70da      	strb	r2, [r3, #3]
 800bafa:	f107 0314 	add.w	r3, r7, #20
 800bafe:	222c      	movs	r2, #44	; 0x2c
 800bb00:	711a      	strb	r2, [r3, #4]
 800bb02:	f107 0314 	add.w	r3, r7, #20
 800bb06:	220c      	movs	r2, #12
 800bb08:	715a      	strb	r2, [r3, #5]
 800bb0a:	f107 0314 	add.w	r3, r7, #20
 800bb0e:	222e      	movs	r2, #46	; 0x2e
 800bb10:	719a      	strb	r2, [r3, #6]
 800bb12:	f107 0314 	add.w	r3, r7, #20
 800bb16:	220b      	movs	r2, #11
 800bb18:	71da      	strb	r2, [r3, #7]
 800bb1a:	f107 0314 	add.w	r3, r7, #20
 800bb1e:	225b      	movs	r2, #91	; 0x5b
 800bb20:	721a      	strb	r2, [r3, #8]
 800bb22:	f107 0314 	add.w	r3, r7, #20
 800bb26:	220d      	movs	r2, #13
 800bb28:	725a      	strb	r2, [r3, #9]
 800bb2a:	f107 0314 	add.w	r3, r7, #20
 800bb2e:	225d      	movs	r2, #93	; 0x5d
 800bb30:	729a      	strb	r2, [r3, #10]
 800bb32:	f107 0314 	add.w	r3, r7, #20
 800bb36:	220e      	movs	r2, #14
 800bb38:	72da      	strb	r2, [r3, #11]
 800bb3a:	f107 0314 	add.w	r3, r7, #20
 800bb3e:	227c      	movs	r2, #124	; 0x7c
 800bb40:	731a      	strb	r2, [r3, #12]
 800bb42:	f107 0314 	add.w	r3, r7, #20
 800bb46:	2215      	movs	r2, #21
 800bb48:	735a      	strb	r2, [r3, #13]
 800bb4a:	f107 0314 	add.w	r3, r7, #20
 800bb4e:	2226      	movs	r2, #38	; 0x26
 800bb50:	739a      	strb	r2, [r3, #14]
 800bb52:	f107 0314 	add.w	r3, r7, #20
 800bb56:	2216      	movs	r2, #22
 800bb58:	73da      	strb	r2, [r3, #15]
 800bb5a:	f107 0314 	add.w	r3, r7, #20
 800bb5e:	222b      	movs	r2, #43	; 0x2b
 800bb60:	741a      	strb	r2, [r3, #16]
 800bb62:	f107 0314 	add.w	r3, r7, #20
 800bb66:	221f      	movs	r2, #31
 800bb68:	745a      	strb	r2, [r3, #17]
 800bb6a:	f107 0314 	add.w	r3, r7, #20
 800bb6e:	222d      	movs	r2, #45	; 0x2d
 800bb70:	749a      	strb	r2, [r3, #18]
 800bb72:	f107 0314 	add.w	r3, r7, #20
 800bb76:	2220      	movs	r2, #32
 800bb78:	74da      	strb	r2, [r3, #19]
 800bb7a:	f107 0314 	add.w	r3, r7, #20
 800bb7e:	222a      	movs	r2, #42	; 0x2a
 800bb80:	751a      	strb	r2, [r3, #20]
 800bb82:	f107 0314 	add.w	r3, r7, #20
 800bb86:	2221      	movs	r2, #33	; 0x21
 800bb88:	755a      	strb	r2, [r3, #21]
 800bb8a:	f107 0314 	add.w	r3, r7, #20
 800bb8e:	222f      	movs	r2, #47	; 0x2f
 800bb90:	759a      	strb	r2, [r3, #22]
 800bb92:	f107 0314 	add.w	r3, r7, #20
 800bb96:	2222      	movs	r2, #34	; 0x22
 800bb98:	75da      	strb	r2, [r3, #23]
 800bb9a:	f107 0314 	add.w	r3, r7, #20
 800bb9e:	225e      	movs	r2, #94	; 0x5e
 800bba0:	761a      	strb	r2, [r3, #24]
 800bba2:	f107 0314 	add.w	r3, r7, #20
 800bba6:	2223      	movs	r2, #35	; 0x23
 800bba8:	765a      	strb	r2, [r3, #25]
 800bbaa:	f107 0314 	add.w	r3, r7, #20
 800bbae:	2225      	movs	r2, #37	; 0x25
 800bbb0:	769a      	strb	r2, [r3, #26]
 800bbb2:	f107 0314 	add.w	r3, r7, #20
 800bbb6:	2224      	movs	r2, #36	; 0x24
 800bbb8:	76da      	strb	r2, [r3, #27]
 800bbba:	f107 0314 	add.w	r3, r7, #20
 800bbbe:	2228      	movs	r2, #40	; 0x28
 800bbc0:	771a      	strb	r2, [r3, #28]
 800bbc2:	f107 0314 	add.w	r3, r7, #20
 800bbc6:	2226      	movs	r2, #38	; 0x26
 800bbc8:	775a      	strb	r2, [r3, #29]
 800bbca:	f107 0314 	add.w	r3, r7, #20
 800bbce:	2229      	movs	r2, #41	; 0x29
 800bbd0:	779a      	strb	r2, [r3, #30]
 800bbd2:	f107 0314 	add.w	r3, r7, #20
 800bbd6:	2227      	movs	r2, #39	; 0x27
 800bbd8:	77da      	strb	r2, [r3, #31]
 800bbda:	f107 0314 	add.w	r3, r7, #20
 800bbde:	2225      	movs	r2, #37	; 0x25
 800bbe0:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 800bbe4:	f107 030c 	add.w	r3, r7, #12
 800bbe8:	f107 0214 	add.w	r2, r7, #20
 800bbec:	601a      	str	r2, [r3, #0]
 800bbee:	f107 030c 	add.w	r3, r7, #12
 800bbf2:	2211      	movs	r2, #17
 800bbf4:	605a      	str	r2, [r3, #4]
 800bbf6:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800bbfa:	4618      	mov	r0, r3
 800bbfc:	f7f5 ff78 	bl	8001af0 <_ZNSaISt4pairIKc10token_typeEEC1Ev>
 800bc00:	f107 0138 	add.w	r1, r7, #56	; 0x38
 800bc04:	f107 020c 	add.w	r2, r7, #12
 800bc08:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800bc0c:	9300      	str	r3, [sp, #0]
 800bc0e:	460b      	mov	r3, r1
 800bc10:	ca06      	ldmia	r2, {r1, r2}
 800bc12:	4885      	ldr	r0, [pc, #532]	; (800be28 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 800bc14:	f7f5 ff84 	bl	8001b20 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 800bc18:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800bc1c:	4618      	mov	r0, r3
 800bc1e:	f7f5 ff73 	bl	8001b08 <_ZNSaISt4pairIKc10token_typeEED1Ev>
	{"true", TOKEN_TRUE},
 800bc22:	2305      	movs	r3, #5
 800bc24:	f887 3162 	strb.w	r3, [r7, #354]	; 0x162
};
 800bc28:	f507 72b1 	add.w	r2, r7, #354	; 0x162
 800bc2c:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800bc30:	497e      	ldr	r1, [pc, #504]	; (800be2c <_Z41__static_initialization_and_destruction_0ii+0x388>)
 800bc32:	4618      	mov	r0, r3
 800bc34:	f7f5 fa60 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"false", TOKEN_FALSE},
 800bc38:	2306      	movs	r3, #6
 800bc3a:	f887 3163 	strb.w	r3, [r7, #355]	; 0x163
};
 800bc3e:	f207 1263 	addw	r2, r7, #355	; 0x163
 800bc42:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800bc46:	331c      	adds	r3, #28
 800bc48:	4979      	ldr	r1, [pc, #484]	; (800be30 <_Z41__static_initialization_and_destruction_0ii+0x38c>)
 800bc4a:	4618      	mov	r0, r3
 800bc4c:	f7f5 fa7c 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"setup", TOKEN_SETUP},
 800bc50:	2307      	movs	r3, #7
 800bc52:	f887 3164 	strb.w	r3, [r7, #356]	; 0x164
};
 800bc56:	f507 72b2 	add.w	r2, r7, #356	; 0x164
 800bc5a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800bc5e:	3338      	adds	r3, #56	; 0x38
 800bc60:	4974      	ldr	r1, [pc, #464]	; (800be34 <_Z41__static_initialization_and_destruction_0ii+0x390>)
 800bc62:	4618      	mov	r0, r3
 800bc64:	f7f5 fa70 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"loop", TOKEN_LOOP},
 800bc68:	2308      	movs	r3, #8
 800bc6a:	f887 3165 	strb.w	r3, [r7, #357]	; 0x165
};
 800bc6e:	f207 1265 	addw	r2, r7, #357	; 0x165
 800bc72:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800bc76:	3354      	adds	r3, #84	; 0x54
 800bc78:	496f      	ldr	r1, [pc, #444]	; (800be38 <_Z41__static_initialization_and_destruction_0ii+0x394>)
 800bc7a:	4618      	mov	r0, r3
 800bc7c:	f7f5 fa3c 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"finish", TOKEN_FINISH},
 800bc80:	2309      	movs	r3, #9
 800bc82:	f887 3166 	strb.w	r3, [r7, #358]	; 0x166
};
 800bc86:	f507 72b3 	add.w	r2, r7, #358	; 0x166
 800bc8a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800bc8e:	3370      	adds	r3, #112	; 0x70
 800bc90:	496a      	ldr	r1, [pc, #424]	; (800be3c <_Z41__static_initialization_and_destruction_0ii+0x398>)
 800bc92:	4618      	mov	r0, r3
 800bc94:	f7f5 fa80 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"if", TOKEN_IF},
 800bc98:	2310      	movs	r3, #16
 800bc9a:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167
};
 800bc9e:	f207 1267 	addw	r2, r7, #359	; 0x167
 800bca2:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800bca6:	338c      	adds	r3, #140	; 0x8c
 800bca8:	4965      	ldr	r1, [pc, #404]	; (800be40 <_Z41__static_initialization_and_destruction_0ii+0x39c>)
 800bcaa:	4618      	mov	r0, r3
 800bcac:	f7f5 fa9c 	bl	80011e8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>
	{"elseif", TOKEN_ELSEIF},
 800bcb0:	2311      	movs	r3, #17
 800bcb2:	f887 3168 	strb.w	r3, [r7, #360]	; 0x168
};
 800bcb6:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 800bcba:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800bcbe:	33a8      	adds	r3, #168	; 0xa8
 800bcc0:	4960      	ldr	r1, [pc, #384]	; (800be44 <_Z41__static_initialization_and_destruction_0ii+0x3a0>)
 800bcc2:	4618      	mov	r0, r3
 800bcc4:	f7f5 fa68 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"else", TOKEN_ELSE},
 800bcc8:	2312      	movs	r3, #18
 800bcca:	f887 3169 	strb.w	r3, [r7, #361]	; 0x169
};
 800bcce:	f207 1269 	addw	r2, r7, #361	; 0x169
 800bcd2:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800bcd6:	33c4      	adds	r3, #196	; 0xc4
 800bcd8:	495b      	ldr	r1, [pc, #364]	; (800be48 <_Z41__static_initialization_and_destruction_0ii+0x3a4>)
 800bcda:	4618      	mov	r0, r3
 800bcdc:	f7f5 fa0c 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"while", TOKEN_WHILE},
 800bce0:	2313      	movs	r3, #19
 800bce2:	f887 316a 	strb.w	r3, [r7, #362]	; 0x16a
};
 800bce6:	f507 72b5 	add.w	r2, r7, #362	; 0x16a
 800bcea:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800bcee:	33e0      	adds	r3, #224	; 0xe0
 800bcf0:	4956      	ldr	r1, [pc, #344]	; (800be4c <_Z41__static_initialization_and_destruction_0ii+0x3a8>)
 800bcf2:	4618      	mov	r0, r3
 800bcf4:	f7f5 fa28 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"end", TOKEN_END},
 800bcf8:	2314      	movs	r3, #20
 800bcfa:	f887 316b 	strb.w	r3, [r7, #363]	; 0x16b
};
 800bcfe:	f207 126b 	addw	r2, r7, #363	; 0x16b
 800bd02:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800bd06:	33fc      	adds	r3, #252	; 0xfc
 800bd08:	4951      	ldr	r1, [pc, #324]	; (800be50 <_Z41__static_initialization_and_destruction_0ii+0x3ac>)
 800bd0a:	4618      	mov	r0, r3
 800bd0c:	f7f5 fa94 	bl	8001238 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>
 800bd10:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800bd14:	f107 0248 	add.w	r2, r7, #72	; 0x48
 800bd18:	601a      	str	r2, [r3, #0]
 800bd1a:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800bd1e:	220a      	movs	r2, #10
 800bd20:	605a      	str	r2, [r3, #4]
 800bd22:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800bd26:	4618      	mov	r0, r3
 800bd28:	f7f5 ff87 	bl	8001c3a <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 800bd2c:	f507 71b6 	add.w	r1, r7, #364	; 0x16c
 800bd30:	f107 0240 	add.w	r2, r7, #64	; 0x40
 800bd34:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800bd38:	9300      	str	r3, [sp, #0]
 800bd3a:	460b      	mov	r3, r1
 800bd3c:	ca06      	ldmia	r2, {r1, r2}
 800bd3e:	4845      	ldr	r0, [pc, #276]	; (800be54 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 800bd40:	f7f5 ff93 	bl	8001c6a <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>
 800bd44:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800bd48:	4618      	mov	r0, r3
 800bd4a:	f7f5 ff82 	bl	8001c52 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 800bd4e:	f107 0448 	add.w	r4, r7, #72	; 0x48
 800bd52:	f504 748c 	add.w	r4, r4, #280	; 0x118
 800bd56:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800bd5a:	429c      	cmp	r4, r3
 800bd5c:	d004      	beq.n	800bd68 <_Z41__static_initialization_and_destruction_0ii+0x2c4>
 800bd5e:	3c1c      	subs	r4, #28
 800bd60:	4620      	mov	r0, r4
 800bd62:	f7f5 f9bc 	bl	80010de <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 800bd66:	e7f6      	b.n	800bd56 <_Z41__static_initialization_and_destruction_0ii+0x2b2>
};
 800bd68:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 800bd6c:	2200      	movs	r2, #0
 800bd6e:	601a      	str	r2, [r3, #0]
 800bd70:	605a      	str	r2, [r3, #4]
 800bd72:	609a      	str	r2, [r3, #8]
 800bd74:	233c      	movs	r3, #60	; 0x3c
 800bd76:	f887 317c 	strb.w	r3, [r7, #380]	; 0x17c
 800bd7a:	231b      	movs	r3, #27
 800bd7c:	f887 317d 	strb.w	r3, [r7, #381]	; 0x17d
 800bd80:	231c      	movs	r3, #28
 800bd82:	f887 317e 	strb.w	r3, [r7, #382]	; 0x17e
 800bd86:	233e      	movs	r3, #62	; 0x3e
 800bd88:	f887 317f 	strb.w	r3, [r7, #383]	; 0x17f
 800bd8c:	2319      	movs	r3, #25
 800bd8e:	f887 3180 	strb.w	r3, [r7, #384]	; 0x180
 800bd92:	231a      	movs	r3, #26
 800bd94:	f887 3181 	strb.w	r3, [r7, #385]	; 0x181
 800bd98:	233d      	movs	r3, #61	; 0x3d
 800bd9a:	f887 3182 	strb.w	r3, [r7, #386]	; 0x182
 800bd9e:	2318      	movs	r3, #24
 800bda0:	f887 3183 	strb.w	r3, [r7, #387]	; 0x183
 800bda4:	231d      	movs	r3, #29
 800bda6:	f887 3184 	strb.w	r3, [r7, #388]	; 0x184
 800bdaa:	2321      	movs	r3, #33	; 0x21
 800bdac:	f887 3185 	strb.w	r3, [r7, #389]	; 0x185
 800bdb0:	2317      	movs	r3, #23
 800bdb2:	f887 3186 	strb.w	r3, [r7, #390]	; 0x186
 800bdb6:	231e      	movs	r3, #30
 800bdb8:	f887 3187 	strb.w	r3, [r7, #391]	; 0x187
 800bdbc:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 800bdc0:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 800bdc4:	2304      	movs	r3, #4
 800bdc6:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 800bdca:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 800bdce:	4618      	mov	r0, r3
 800bdd0:	f7f5 ff7b 	bl	8001cca <_ZNSaISt4pairIKc12double_tokenEEC1Ev>
 800bdd4:	f507 72c4 	add.w	r2, r7, #392	; 0x188
 800bdd8:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 800bddc:	9300      	str	r3, [sp, #0]
 800bdde:	4613      	mov	r3, r2
 800bde0:	f507 72ba 	add.w	r2, r7, #372	; 0x174
 800bde4:	ca06      	ldmia	r2, {r1, r2}
 800bde6:	481c      	ldr	r0, [pc, #112]	; (800be58 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 800bde8:	f7f5 ff87 	bl	8001cfa <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 800bdec:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 800bdf0:	4618      	mov	r0, r3
 800bdf2:	f7f5 ff76 	bl	8001ce2 <_ZNSaISt4pairIKc12double_tokenEED1Ev>
static const std::map<char, double_token> token_double_chars
 800bdf6:	1d3b      	adds	r3, r7, #4
 800bdf8:	681b      	ldr	r3, [r3, #0]
 800bdfa:	2b00      	cmp	r3, #0
 800bdfc:	d10e      	bne.n	800be1c <_Z41__static_initialization_and_destruction_0ii+0x378>
 800bdfe:	463b      	mov	r3, r7
 800be00:	681b      	ldr	r3, [r3, #0]
 800be02:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800be06:	4293      	cmp	r3, r2
 800be08:	d108      	bne.n	800be1c <_Z41__static_initialization_and_destruction_0ii+0x378>
 800be0a:	4813      	ldr	r0, [pc, #76]	; (800be58 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 800be0c:	f7fd fc07 	bl	800961e <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>
static const std::map<std::string, token_type> token_strings
 800be10:	4810      	ldr	r0, [pc, #64]	; (800be54 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 800be12:	f7fd fc11 	bl	8009638 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
static const std::map<char, token_type> token_chars
 800be16:	4804      	ldr	r0, [pc, #16]	; (800be28 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 800be18:	f7fd fc1b 	bl	8009652 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>
 800be1c:	bf00      	nop
 800be1e:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 800be22:	46bd      	mov	sp, r7
 800be24:	bd90      	pop	{r4, r7, pc}
 800be26:	bf00      	nop
 800be28:	20000254 	.word	0x20000254
 800be2c:	0802763c 	.word	0x0802763c
 800be30:	08027644 	.word	0x08027644
 800be34:	0802764c 	.word	0x0802764c
 800be38:	08027654 	.word	0x08027654
 800be3c:	0802765c 	.word	0x0802765c
 800be40:	08027664 	.word	0x08027664
 800be44:	08027668 	.word	0x08027668
 800be48:	08027670 	.word	0x08027670
 800be4c:	08027678 	.word	0x08027678
 800be50:	08027680 	.word	0x08027680
 800be54:	2000026c 	.word	0x2000026c
 800be58:	20000284 	.word	0x20000284

0800be5c <_GLOBAL__sub_I__ZN17Primal_expressionD2Ev>:
 800be5c:	b580      	push	{r7, lr}
 800be5e:	af00      	add	r7, sp, #0
 800be60:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800be64:	2001      	movs	r0, #1
 800be66:	f7ff fe1d 	bl	800baa4 <_Z41__static_initialization_and_destruction_0ii>
 800be6a:	bd80      	pop	{r7, pc}

0800be6c <_GLOBAL__sub_D__ZN17Primal_expressionD2Ev>:
 800be6c:	b580      	push	{r7, lr}
 800be6e:	af00      	add	r7, sp, #0
 800be70:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800be74:	2000      	movs	r0, #0
 800be76:	f7ff fe15 	bl	800baa4 <_Z41__static_initialization_and_destruction_0ii>
 800be7a:	bd80      	pop	{r7, pc}

0800be7c <_ZN21Expression_calculatorC1Ev>:
#include <Expression_calculator.h>

Expression_calculator::Expression_calculator()
 800be7c:	b480      	push	{r7}
 800be7e:	b083      	sub	sp, #12
 800be80:	af00      	add	r7, sp, #0
 800be82:	6078      	str	r0, [r7, #4]
{

}
 800be84:	687b      	ldr	r3, [r7, #4]
 800be86:	4618      	mov	r0, r3
 800be88:	370c      	adds	r7, #12
 800be8a:	46bd      	mov	sp, r7
 800be8c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800be90:	4770      	bx	lr
	...

0800be94 <_ZN21Expression_calculator12get_instanceEv>:

Expression_calculator& Expression_calculator::get_instance()
{
 800be94:	b580      	push	{r7, lr}
 800be96:	af00      	add	r7, sp, #0
	static Expression_calculator instance;
 800be98:	4b10      	ldr	r3, [pc, #64]	; (800bedc <_ZN21Expression_calculator12get_instanceEv+0x48>)
 800be9a:	781b      	ldrb	r3, [r3, #0]
 800be9c:	f3bf 8f5b 	dmb	ish
 800bea0:	b2db      	uxtb	r3, r3
 800bea2:	f003 0301 	and.w	r3, r3, #1
 800bea6:	2b00      	cmp	r3, #0
 800bea8:	bf0c      	ite	eq
 800beaa:	2301      	moveq	r3, #1
 800beac:	2300      	movne	r3, #0
 800beae:	b2db      	uxtb	r3, r3
 800beb0:	2b00      	cmp	r3, #0
 800beb2:	d010      	beq.n	800bed6 <_ZN21Expression_calculator12get_instanceEv+0x42>
 800beb4:	4809      	ldr	r0, [pc, #36]	; (800bedc <_ZN21Expression_calculator12get_instanceEv+0x48>)
 800beb6:	f016 fca7 	bl	8022808 <__cxa_guard_acquire>
 800beba:	4603      	mov	r3, r0
 800bebc:	2b00      	cmp	r3, #0
 800bebe:	bf14      	ite	ne
 800bec0:	2301      	movne	r3, #1
 800bec2:	2300      	moveq	r3, #0
 800bec4:	b2db      	uxtb	r3, r3
 800bec6:	2b00      	cmp	r3, #0
 800bec8:	d005      	beq.n	800bed6 <_ZN21Expression_calculator12get_instanceEv+0x42>
 800beca:	4805      	ldr	r0, [pc, #20]	; (800bee0 <_ZN21Expression_calculator12get_instanceEv+0x4c>)
 800becc:	f7ff ffd6 	bl	800be7c <_ZN21Expression_calculatorC1Ev>
 800bed0:	4802      	ldr	r0, [pc, #8]	; (800bedc <_ZN21Expression_calculator12get_instanceEv+0x48>)
 800bed2:	f016 fca5 	bl	8022820 <__cxa_guard_release>
	return instance;
 800bed6:	4b02      	ldr	r3, [pc, #8]	; (800bee0 <_ZN21Expression_calculator12get_instanceEv+0x4c>)
}
 800bed8:	4618      	mov	r0, r3
 800beda:	bd80      	pop	{r7, pc}
 800bedc:	200002e8 	.word	0x200002e8
 800bee0:	200002e4 	.word	0x200002e4

0800bee4 <_ZN6SymbolaSEOS_>:
 800bee4:	b580      	push	{r7, lr}
 800bee6:	b082      	sub	sp, #8
 800bee8:	af00      	add	r7, sp, #0
 800beea:	6078      	str	r0, [r7, #4]
 800beec:	6039      	str	r1, [r7, #0]
 800beee:	683b      	ldr	r3, [r7, #0]
 800bef0:	781a      	ldrb	r2, [r3, #0]
 800bef2:	687b      	ldr	r3, [r7, #4]
 800bef4:	701a      	strb	r2, [r3, #0]
 800bef6:	683b      	ldr	r3, [r7, #0]
 800bef8:	1d1a      	adds	r2, r3, #4
 800befa:	687b      	ldr	r3, [r7, #4]
 800befc:	3304      	adds	r3, #4
 800befe:	4611      	mov	r1, r2
 800bf00:	4618      	mov	r0, r3
 800bf02:	f7f9 f92d 	bl	8005160 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSEOSA_>
 800bf06:	687b      	ldr	r3, [r7, #4]
 800bf08:	4618      	mov	r0, r3
 800bf0a:	3708      	adds	r7, #8
 800bf0c:	46bd      	mov	sp, r7
 800bf0e:	bd80      	pop	{r7, pc}

0800bf10 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1EOSC_>:
      _Copy_assign_base(_Copy_assign_base&&) = default;
 800bf10:	b580      	push	{r7, lr}
 800bf12:	b082      	sub	sp, #8
 800bf14:	af00      	add	r7, sp, #0
 800bf16:	6078      	str	r0, [r7, #4]
 800bf18:	6039      	str	r1, [r7, #0]
 800bf1a:	687b      	ldr	r3, [r7, #4]
 800bf1c:	683a      	ldr	r2, [r7, #0]
 800bf1e:	4611      	mov	r1, r2
 800bf20:	4618      	mov	r0, r3
 800bf22:	f000 fd7d 	bl	800ca20 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1EOSC_>
 800bf26:	687b      	ldr	r3, [r7, #4]
 800bf28:	4618      	mov	r0, r3
 800bf2a:	3708      	adds	r7, #8
 800bf2c:	46bd      	mov	sp, r7
 800bf2e:	bd80      	pop	{r7, pc}

0800bf30 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1EOSC_>:
      _Move_assign_base(_Move_assign_base&&) = default;
 800bf30:	b580      	push	{r7, lr}
 800bf32:	b082      	sub	sp, #8
 800bf34:	af00      	add	r7, sp, #0
 800bf36:	6078      	str	r0, [r7, #4]
 800bf38:	6039      	str	r1, [r7, #0]
 800bf3a:	687b      	ldr	r3, [r7, #4]
 800bf3c:	683a      	ldr	r2, [r7, #0]
 800bf3e:	4611      	mov	r1, r2
 800bf40:	4618      	mov	r0, r3
 800bf42:	f7ff ffe5 	bl	800bf10 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1EOSC_>
 800bf46:	687b      	ldr	r3, [r7, #4]
 800bf48:	4618      	mov	r0, r3
 800bf4a:	3708      	adds	r7, #8
 800bf4c:	46bd      	mov	sp, r7
 800bf4e:	bd80      	pop	{r7, pc}

0800bf50 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1EOSC_>:
      _Variant_base(_Variant_base&&) = default;
 800bf50:	b580      	push	{r7, lr}
 800bf52:	b082      	sub	sp, #8
 800bf54:	af00      	add	r7, sp, #0
 800bf56:	6078      	str	r0, [r7, #4]
 800bf58:	6039      	str	r1, [r7, #0]
 800bf5a:	687b      	ldr	r3, [r7, #4]
 800bf5c:	683a      	ldr	r2, [r7, #0]
 800bf5e:	4611      	mov	r1, r2
 800bf60:	4618      	mov	r0, r3
 800bf62:	f7ff ffe5 	bl	800bf30 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1EOSC_>
 800bf66:	687b      	ldr	r3, [r7, #4]
 800bf68:	4618      	mov	r0, r3
 800bf6a:	3708      	adds	r7, #8
 800bf6c:	46bd      	mov	sp, r7
 800bf6e:	bd80      	pop	{r7, pc}

0800bf70 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1EOSA_>:
      variant(variant&&) = default;
 800bf70:	b580      	push	{r7, lr}
 800bf72:	b082      	sub	sp, #8
 800bf74:	af00      	add	r7, sp, #0
 800bf76:	6078      	str	r0, [r7, #4]
 800bf78:	6039      	str	r1, [r7, #0]
 800bf7a:	687b      	ldr	r3, [r7, #4]
 800bf7c:	683a      	ldr	r2, [r7, #0]
 800bf7e:	4611      	mov	r1, r2
 800bf80:	4618      	mov	r0, r3
 800bf82:	f7ff ffe5 	bl	800bf50 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1EOSC_>
 800bf86:	687b      	ldr	r3, [r7, #4]
 800bf88:	4618      	mov	r0, r3
 800bf8a:	3708      	adds	r7, #8
 800bf8c:	46bd      	mov	sp, r7
 800bf8e:	bd80      	pop	{r7, pc}

0800bf90 <_ZN6SymbolC1EOS_>:
 800bf90:	b580      	push	{r7, lr}
 800bf92:	b082      	sub	sp, #8
 800bf94:	af00      	add	r7, sp, #0
 800bf96:	6078      	str	r0, [r7, #4]
 800bf98:	6039      	str	r1, [r7, #0]
 800bf9a:	683b      	ldr	r3, [r7, #0]
 800bf9c:	781a      	ldrb	r2, [r3, #0]
 800bf9e:	687b      	ldr	r3, [r7, #4]
 800bfa0:	701a      	strb	r2, [r3, #0]
 800bfa2:	687b      	ldr	r3, [r7, #4]
 800bfa4:	1d1a      	adds	r2, r3, #4
 800bfa6:	683b      	ldr	r3, [r7, #0]
 800bfa8:	3304      	adds	r3, #4
 800bfaa:	4619      	mov	r1, r3
 800bfac:	4610      	mov	r0, r2
 800bfae:	f7ff ffdf 	bl	800bf70 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1EOSA_>
 800bfb2:	687b      	ldr	r3, [r7, #4]
 800bfb4:	4618      	mov	r0, r3
 800bfb6:	3708      	adds	r7, #8
 800bfb8:	46bd      	mov	sp, r7
 800bfba:	bd80      	pop	{r7, pc}

0800bfbc <_ZN21Expression_calculator8evaluateEP10Expression>:

Symbol Expression_calculator::evaluate(Expression *exp)
{
 800bfbc:	b590      	push	{r4, r7, lr}
 800bfbe:	b099      	sub	sp, #100	; 0x64
 800bfc0:	af00      	add	r7, sp, #0
 800bfc2:	60f8      	str	r0, [r7, #12]
 800bfc4:	60b9      	str	r1, [r7, #8]
 800bfc6:	607a      	str	r2, [r7, #4]
	Position_counter::get_instance().line = exp->line;
 800bfc8:	687b      	ldr	r3, [r7, #4]
 800bfca:	681c      	ldr	r4, [r3, #0]
 800bfcc:	f00a fa30 	bl	8016430 <_ZN16Position_counter12get_instanceEv>
 800bfd0:	4603      	mov	r3, r0
 800bfd2:	601c      	str	r4, [r3, #0]
	Position_counter::get_instance().position = exp->position;
 800bfd4:	687b      	ldr	r3, [r7, #4]
 800bfd6:	685c      	ldr	r4, [r3, #4]
 800bfd8:	f00a fa2a 	bl	8016430 <_ZN16Position_counter12get_instanceEv>
 800bfdc:	4603      	mov	r3, r0
 800bfde:	605c      	str	r4, [r3, #4]

	Symbol var = false;
 800bfe0:	2100      	movs	r1, #0
 800bfe2:	68f8      	ldr	r0, [r7, #12]
 800bfe4:	f00a fd0d 	bl	8016a02 <_ZN6SymbolC1Eb>
	for (And_expression *and_exp : exp->and_exps)
 800bfe8:	687b      	ldr	r3, [r7, #4]
 800bfea:	3308      	adds	r3, #8
 800bfec:	65fb      	str	r3, [r7, #92]	; 0x5c
 800bfee:	6df8      	ldr	r0, [r7, #92]	; 0x5c
 800bff0:	f7fe f987 	bl	800a302 <_ZNSt6vectorIP14And_expressionSaIS1_EE5beginEv>
 800bff4:	4603      	mov	r3, r0
 800bff6:	617b      	str	r3, [r7, #20]
 800bff8:	6df8      	ldr	r0, [r7, #92]	; 0x5c
 800bffa:	f7fe f992 	bl	800a322 <_ZNSt6vectorIP14And_expressionSaIS1_EE3endEv>
 800bffe:	4603      	mov	r3, r0
 800c000:	613b      	str	r3, [r7, #16]
 800c002:	f107 0210 	add.w	r2, r7, #16
 800c006:	f107 0314 	add.w	r3, r7, #20
 800c00a:	4611      	mov	r1, r2
 800c00c:	4618      	mov	r0, r3
 800c00e:	f7fe f999 	bl	800a344 <_ZN9__gnu_cxxneIPP14And_expressionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
 800c012:	4603      	mov	r3, r0
 800c014:	2b00      	cmp	r3, #0
 800c016:	d02c      	beq.n	800c072 <_ZN21Expression_calculator8evaluateEP10Expression+0xb6>
 800c018:	f107 0314 	add.w	r3, r7, #20
 800c01c:	4618      	mov	r0, r3
 800c01e:	f7fe f9b9 	bl	800a394 <_ZNK9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEEdeEv>
 800c022:	4603      	mov	r3, r0
 800c024:	681b      	ldr	r3, [r3, #0]
 800c026:	65bb      	str	r3, [r7, #88]	; 0x58
	{
		var = var || evaluate(and_exp);
 800c028:	f107 0338 	add.w	r3, r7, #56	; 0x38
 800c02c:	6dba      	ldr	r2, [r7, #88]	; 0x58
 800c02e:	68b9      	ldr	r1, [r7, #8]
 800c030:	4618      	mov	r0, r3
 800c032:	f000 f823 	bl	800c07c <_ZN21Expression_calculator8evaluateEP14And_expression>
 800c036:	f107 0318 	add.w	r3, r7, #24
 800c03a:	f107 0238 	add.w	r2, r7, #56	; 0x38
 800c03e:	68f9      	ldr	r1, [r7, #12]
 800c040:	4618      	mov	r0, r3
 800c042:	f00a fef5 	bl	8016e30 <_ZN6SymbolooES_>
 800c046:	f107 0318 	add.w	r3, r7, #24
 800c04a:	4619      	mov	r1, r3
 800c04c:	68f8      	ldr	r0, [r7, #12]
 800c04e:	f7ff ff49 	bl	800bee4 <_ZN6SymbolaSEOS_>
 800c052:	f107 0318 	add.w	r3, r7, #24
 800c056:	4618      	mov	r0, r3
 800c058:	f7f5 fa46 	bl	80014e8 <_ZN6SymbolD1Ev>
 800c05c:	f107 0338 	add.w	r3, r7, #56	; 0x38
 800c060:	4618      	mov	r0, r3
 800c062:	f7f5 fa41 	bl	80014e8 <_ZN6SymbolD1Ev>
	for (And_expression *and_exp : exp->and_exps)
 800c066:	f107 0314 	add.w	r3, r7, #20
 800c06a:	4618      	mov	r0, r3
 800c06c:	f7fe f982 	bl	800a374 <_ZN9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEEppEv>
 800c070:	e7c7      	b.n	800c002 <_ZN21Expression_calculator8evaluateEP10Expression+0x46>
	}
	return var;
 800c072:	bf00      	nop
}
 800c074:	68f8      	ldr	r0, [r7, #12]
 800c076:	3764      	adds	r7, #100	; 0x64
 800c078:	46bd      	mov	sp, r7
 800c07a:	bd90      	pop	{r4, r7, pc}

0800c07c <_ZN21Expression_calculator8evaluateEP14And_expression>:

Symbol Expression_calculator::evaluate(And_expression *and_exp)
{
 800c07c:	b580      	push	{r7, lr}
 800c07e:	b098      	sub	sp, #96	; 0x60
 800c080:	af00      	add	r7, sp, #0
 800c082:	60f8      	str	r0, [r7, #12]
 800c084:	60b9      	str	r1, [r7, #8]
 800c086:	607a      	str	r2, [r7, #4]
	Symbol var = false;
 800c088:	2100      	movs	r1, #0
 800c08a:	68f8      	ldr	r0, [r7, #12]
 800c08c:	f00a fcb9 	bl	8016a02 <_ZN6SymbolC1Eb>
	for (Compare_expression *comp_exp : and_exp->comp_exps)
 800c090:	687b      	ldr	r3, [r7, #4]
 800c092:	65fb      	str	r3, [r7, #92]	; 0x5c
 800c094:	6df8      	ldr	r0, [r7, #92]	; 0x5c
 800c096:	f7fe f8c4 	bl	800a222 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE5beginEv>
 800c09a:	4603      	mov	r3, r0
 800c09c:	617b      	str	r3, [r7, #20]
 800c09e:	6df8      	ldr	r0, [r7, #92]	; 0x5c
 800c0a0:	f7fe f8cf 	bl	800a242 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE3endEv>
 800c0a4:	4603      	mov	r3, r0
 800c0a6:	613b      	str	r3, [r7, #16]
 800c0a8:	f107 0210 	add.w	r2, r7, #16
 800c0ac:	f107 0314 	add.w	r3, r7, #20
 800c0b0:	4611      	mov	r1, r2
 800c0b2:	4618      	mov	r0, r3
 800c0b4:	f7fe f8d6 	bl	800a264 <_ZN9__gnu_cxxneIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
 800c0b8:	4603      	mov	r3, r0
 800c0ba:	2b00      	cmp	r3, #0
 800c0bc:	d02c      	beq.n	800c118 <_ZN21Expression_calculator8evaluateEP14And_expression+0x9c>
 800c0be:	f107 0314 	add.w	r3, r7, #20
 800c0c2:	4618      	mov	r0, r3
 800c0c4:	f7fe f8f6 	bl	800a2b4 <_ZNK9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEdeEv>
 800c0c8:	4603      	mov	r3, r0
 800c0ca:	681b      	ldr	r3, [r3, #0]
 800c0cc:	65bb      	str	r3, [r7, #88]	; 0x58
	{
		var = var && evaluate(comp_exp);
 800c0ce:	f107 0338 	add.w	r3, r7, #56	; 0x38
 800c0d2:	6dba      	ldr	r2, [r7, #88]	; 0x58
 800c0d4:	68b9      	ldr	r1, [r7, #8]
 800c0d6:	4618      	mov	r0, r3
 800c0d8:	f000 f824 	bl	800c124 <_ZN21Expression_calculator8evaluateEP18Compare_expression>
 800c0dc:	f107 0318 	add.w	r3, r7, #24
 800c0e0:	f107 0238 	add.w	r2, r7, #56	; 0x38
 800c0e4:	68f9      	ldr	r1, [r7, #12]
 800c0e6:	4618      	mov	r0, r3
 800c0e8:	f00a fe58 	bl	8016d9c <_ZN6SymbolaaES_>
 800c0ec:	f107 0318 	add.w	r3, r7, #24
 800c0f0:	4619      	mov	r1, r3
 800c0f2:	68f8      	ldr	r0, [r7, #12]
 800c0f4:	f7ff fef6 	bl	800bee4 <_ZN6SymbolaSEOS_>
 800c0f8:	f107 0318 	add.w	r3, r7, #24
 800c0fc:	4618      	mov	r0, r3
 800c0fe:	f7f5 f9f3 	bl	80014e8 <_ZN6SymbolD1Ev>
 800c102:	f107 0338 	add.w	r3, r7, #56	; 0x38
 800c106:	4618      	mov	r0, r3
 800c108:	f7f5 f9ee 	bl	80014e8 <_ZN6SymbolD1Ev>
	for (Compare_expression *comp_exp : and_exp->comp_exps)
 800c10c:	f107 0314 	add.w	r3, r7, #20
 800c110:	4618      	mov	r0, r3
 800c112:	f7fe f8bf 	bl	800a294 <_ZN9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEppEv>
 800c116:	e7c7      	b.n	800c0a8 <_ZN21Expression_calculator8evaluateEP14And_expression+0x2c>
	}
	return var;
 800c118:	bf00      	nop
}
 800c11a:	68f8      	ldr	r0, [r7, #12]
 800c11c:	3760      	adds	r7, #96	; 0x60
 800c11e:	46bd      	mov	sp, r7
 800c120:	bd80      	pop	{r7, pc}
	...

0800c124 <_ZN21Expression_calculator8evaluateEP18Compare_expression>:

Symbol Expression_calculator::evaluate(Compare_expression *comp_exp)
{
 800c124:	b580      	push	{r7, lr}
 800c126:	b0b4      	sub	sp, #208	; 0xd0
 800c128:	af00      	add	r7, sp, #0
 800c12a:	60f8      	str	r0, [r7, #12]
 800c12c:	60b9      	str	r1, [r7, #8]
 800c12e:	607a      	str	r2, [r7, #4]
	Symbol var = evaluate(comp_exp->left_rel_exp);
 800c130:	687b      	ldr	r3, [r7, #4]
 800c132:	681a      	ldr	r2, [r3, #0]
 800c134:	68fb      	ldr	r3, [r7, #12]
 800c136:	68b9      	ldr	r1, [r7, #8]
 800c138:	4618      	mov	r0, r3
 800c13a:	f000 f87f 	bl	800c23c <_ZN21Expression_calculator8evaluateEP19Relation_expression>
	if (comp_exp->right_rel_exp)
 800c13e:	687b      	ldr	r3, [r7, #4]
 800c140:	685b      	ldr	r3, [r3, #4]
 800c142:	2b00      	cmp	r3, #0
 800c144:	d072      	beq.n	800c22c <_ZN21Expression_calculator8evaluateEP18Compare_expression+0x108>
	{
		switch (comp_exp->op)
 800c146:	687b      	ldr	r3, [r7, #4]
 800c148:	7a1b      	ldrb	r3, [r3, #8]
 800c14a:	2b01      	cmp	r3, #1
 800c14c:	d002      	beq.n	800c154 <_ZN21Expression_calculator8evaluateEP18Compare_expression+0x30>
 800c14e:	2b02      	cmp	r3, #2
 800c150:	d021      	beq.n	800c196 <_ZN21Expression_calculator8evaluateEP18Compare_expression+0x72>
 800c152:	e04e      	b.n	800c1f2 <_ZN21Expression_calculator8evaluateEP18Compare_expression+0xce>
		{
		case COMP_OP_EQUAL:
			var = var == evaluate(comp_exp->right_rel_exp);
 800c154:	687b      	ldr	r3, [r7, #4]
 800c156:	685a      	ldr	r2, [r3, #4]
 800c158:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800c15c:	68b9      	ldr	r1, [r7, #8]
 800c15e:	4618      	mov	r0, r3
 800c160:	f000 f86c 	bl	800c23c <_ZN21Expression_calculator8evaluateEP19Relation_expression>
 800c164:	f107 0314 	add.w	r3, r7, #20
 800c168:	f107 0234 	add.w	r2, r7, #52	; 0x34
 800c16c:	68f9      	ldr	r1, [r7, #12]
 800c16e:	4618      	mov	r0, r3
 800c170:	f00b f8a2 	bl	80172b8 <_ZN6SymboleqES_>
 800c174:	f107 0314 	add.w	r3, r7, #20
 800c178:	4619      	mov	r1, r3
 800c17a:	68f8      	ldr	r0, [r7, #12]
 800c17c:	f7ff feb2 	bl	800bee4 <_ZN6SymbolaSEOS_>
 800c180:	f107 0314 	add.w	r3, r7, #20
 800c184:	4618      	mov	r0, r3
 800c186:	f7f5 f9af 	bl	80014e8 <_ZN6SymbolD1Ev>
 800c18a:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800c18e:	4618      	mov	r0, r3
 800c190:	f7f5 f9aa 	bl	80014e8 <_ZN6SymbolD1Ev>
			break;
 800c194:	e04a      	b.n	800c22c <_ZN21Expression_calculator8evaluateEP18Compare_expression+0x108>
		case COMP_OP_NOT_EQUAL:
			var = !(var == evaluate(comp_exp->right_rel_exp));
 800c196:	687b      	ldr	r3, [r7, #4]
 800c198:	685a      	ldr	r2, [r3, #4]
 800c19a:	f107 0394 	add.w	r3, r7, #148	; 0x94
 800c19e:	68b9      	ldr	r1, [r7, #8]
 800c1a0:	4618      	mov	r0, r3
 800c1a2:	f000 f84b 	bl	800c23c <_ZN21Expression_calculator8evaluateEP19Relation_expression>
 800c1a6:	f107 0374 	add.w	r3, r7, #116	; 0x74
 800c1aa:	f107 0294 	add.w	r2, r7, #148	; 0x94
 800c1ae:	68f9      	ldr	r1, [r7, #12]
 800c1b0:	4618      	mov	r0, r3
 800c1b2:	f00b f881 	bl	80172b8 <_ZN6SymboleqES_>
 800c1b6:	f107 0354 	add.w	r3, r7, #84	; 0x54
 800c1ba:	f107 0274 	add.w	r2, r7, #116	; 0x74
 800c1be:	4611      	mov	r1, r2
 800c1c0:	4618      	mov	r0, r3
 800c1c2:	f00a fe7f 	bl	8016ec4 <_ZN6SymbolntEv>
 800c1c6:	f107 0354 	add.w	r3, r7, #84	; 0x54
 800c1ca:	4619      	mov	r1, r3
 800c1cc:	68f8      	ldr	r0, [r7, #12]
 800c1ce:	f7ff fe89 	bl	800bee4 <_ZN6SymbolaSEOS_>
 800c1d2:	f107 0354 	add.w	r3, r7, #84	; 0x54
 800c1d6:	4618      	mov	r0, r3
 800c1d8:	f7f5 f986 	bl	80014e8 <_ZN6SymbolD1Ev>
 800c1dc:	f107 0374 	add.w	r3, r7, #116	; 0x74
 800c1e0:	4618      	mov	r0, r3
 800c1e2:	f7f5 f981 	bl	80014e8 <_ZN6SymbolD1Ev>
 800c1e6:	f107 0394 	add.w	r3, r7, #148	; 0x94
 800c1ea:	4618      	mov	r0, r3
 800c1ec:	f7f5 f97c 	bl	80014e8 <_ZN6SymbolD1Ev>
			break;
 800c1f0:	e01c      	b.n	800c22c <_ZN21Expression_calculator8evaluateEP18Compare_expression+0x108>
		default:
			Transmitter::report_error("compare operator");
 800c1f2:	f107 03cc 	add.w	r3, r7, #204	; 0xcc
 800c1f6:	4618      	mov	r0, r3
 800c1f8:	f016 fb26 	bl	8022848 <_ZNSaIcEC1Ev>
 800c1fc:	f107 02cc 	add.w	r2, r7, #204	; 0xcc
 800c200:	f107 03b4 	add.w	r3, r7, #180	; 0xb4
 800c204:	490c      	ldr	r1, [pc, #48]	; (800c238 <_ZN21Expression_calculator8evaluateEP18Compare_expression+0x114>)
 800c206:	4618      	mov	r0, r3
 800c208:	f7f5 fcc5 	bl	8001b96 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 800c20c:	f107 03b4 	add.w	r3, r7, #180	; 0xb4
 800c210:	4618      	mov	r0, r3
 800c212:	f00b ff85 	bl	8018120 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 800c216:	f107 03b4 	add.w	r3, r7, #180	; 0xb4
 800c21a:	4618      	mov	r0, r3
 800c21c:	f016 fda5 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800c220:	f107 03cc 	add.w	r3, r7, #204	; 0xcc
 800c224:	4618      	mov	r0, r3
 800c226:	f016 fb10 	bl	802284a <_ZNSaIcED1Ev>
		}
	}

	return var;
 800c22a:	e7ff      	b.n	800c22c <_ZN21Expression_calculator8evaluateEP18Compare_expression+0x108>
 800c22c:	bf00      	nop
}
 800c22e:	68f8      	ldr	r0, [r7, #12]
 800c230:	37d0      	adds	r7, #208	; 0xd0
 800c232:	46bd      	mov	sp, r7
 800c234:	bd80      	pop	{r7, pc}
 800c236:	bf00      	nop
 800c238:	08027684 	.word	0x08027684

0800c23c <_ZN21Expression_calculator8evaluateEP19Relation_expression>:

Symbol Expression_calculator::evaluate(Relation_expression *rel_exp)
{
 800c23c:	b580      	push	{r7, lr}
 800c23e:	b0b4      	sub	sp, #208	; 0xd0
 800c240:	af00      	add	r7, sp, #0
 800c242:	60f8      	str	r0, [r7, #12]
 800c244:	60b9      	str	r1, [r7, #8]
 800c246:	607a      	str	r2, [r7, #4]
	Symbol var = evaluate(rel_exp->left_sum_exp);
 800c248:	687b      	ldr	r3, [r7, #4]
 800c24a:	681a      	ldr	r2, [r3, #0]
 800c24c:	f107 0314 	add.w	r3, r7, #20
 800c250:	68b9      	ldr	r1, [r7, #8]
 800c252:	4618      	mov	r0, r3
 800c254:	f000 f89c 	bl	800c390 <_ZN21Expression_calculator8evaluateEP14Sum_expression>
	if (rel_exp->right_sum_exp)
 800c258:	687b      	ldr	r3, [r7, #4]
 800c25a:	685b      	ldr	r3, [r3, #4]
 800c25c:	2b00      	cmp	r3, #0
 800c25e:	f000 8085 	beq.w	800c36c <_ZN21Expression_calculator8evaluateEP19Relation_expression+0x130>
	{
		switch (rel_exp->op)
 800c262:	687b      	ldr	r3, [r7, #4]
 800c264:	7a1b      	ldrb	r3, [r3, #8]
 800c266:	3b01      	subs	r3, #1
 800c268:	2b03      	cmp	r3, #3
 800c26a:	d863      	bhi.n	800c334 <_ZN21Expression_calculator8evaluateEP19Relation_expression+0xf8>
 800c26c:	a201      	add	r2, pc, #4	; (adr r2, 800c274 <_ZN21Expression_calculator8evaluateEP19Relation_expression+0x38>)
 800c26e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800c272:	bf00      	nop
 800c274:	0800c2dd 	.word	0x0800c2dd
 800c278:	0800c309 	.word	0x0800c309
 800c27c:	0800c285 	.word	0x0800c285
 800c280:	0800c2b1 	.word	0x0800c2b1
		{
		case REL_OP_GREATER:
			return var > evaluate(rel_exp->right_sum_exp);
 800c284:	687b      	ldr	r3, [r7, #4]
 800c286:	685a      	ldr	r2, [r3, #4]
 800c288:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800c28c:	68b9      	ldr	r1, [r7, #8]
 800c28e:	4618      	mov	r0, r3
 800c290:	f000 f87e 	bl	800c390 <_ZN21Expression_calculator8evaluateEP14Sum_expression>
 800c294:	68fb      	ldr	r3, [r7, #12]
 800c296:	f107 0234 	add.w	r2, r7, #52	; 0x34
 800c29a:	f107 0114 	add.w	r1, r7, #20
 800c29e:	4618      	mov	r0, r3
 800c2a0:	f00a fe4a 	bl	8016f38 <_ZN6SymbolgtES_>
 800c2a4:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800c2a8:	4618      	mov	r0, r3
 800c2aa:	f7f5 f91d 	bl	80014e8 <_ZN6SymbolD1Ev>
 800c2ae:	e063      	b.n	800c378 <_ZN21Expression_calculator8evaluateEP19Relation_expression+0x13c>
		case REL_OP_GREATER_EQUAL:
			return var >= evaluate(rel_exp->right_sum_exp);
 800c2b0:	687b      	ldr	r3, [r7, #4]
 800c2b2:	685a      	ldr	r2, [r3, #4]
 800c2b4:	f107 0354 	add.w	r3, r7, #84	; 0x54
 800c2b8:	68b9      	ldr	r1, [r7, #8]
 800c2ba:	4618      	mov	r0, r3
 800c2bc:	f000 f868 	bl	800c390 <_ZN21Expression_calculator8evaluateEP14Sum_expression>
 800c2c0:	68fb      	ldr	r3, [r7, #12]
 800c2c2:	f107 0254 	add.w	r2, r7, #84	; 0x54
 800c2c6:	f107 0114 	add.w	r1, r7, #20
 800c2ca:	4618      	mov	r0, r3
 800c2cc:	f00a fea4 	bl	8017018 <_ZN6SymbolgeES_>
 800c2d0:	f107 0354 	add.w	r3, r7, #84	; 0x54
 800c2d4:	4618      	mov	r0, r3
 800c2d6:	f7f5 f907 	bl	80014e8 <_ZN6SymbolD1Ev>
 800c2da:	e04d      	b.n	800c378 <_ZN21Expression_calculator8evaluateEP19Relation_expression+0x13c>
		case REL_OP_SMALLER:
			return var < evaluate(rel_exp->right_sum_exp);
 800c2dc:	687b      	ldr	r3, [r7, #4]
 800c2de:	685a      	ldr	r2, [r3, #4]
 800c2e0:	f107 0374 	add.w	r3, r7, #116	; 0x74
 800c2e4:	68b9      	ldr	r1, [r7, #8]
 800c2e6:	4618      	mov	r0, r3
 800c2e8:	f000 f852 	bl	800c390 <_ZN21Expression_calculator8evaluateEP14Sum_expression>
 800c2ec:	68fb      	ldr	r3, [r7, #12]
 800c2ee:	f107 0274 	add.w	r2, r7, #116	; 0x74
 800c2f2:	f107 0114 	add.w	r1, r7, #20
 800c2f6:	4618      	mov	r0, r3
 800c2f8:	f00a fefe 	bl	80170f8 <_ZN6SymbolltES_>
 800c2fc:	f107 0374 	add.w	r3, r7, #116	; 0x74
 800c300:	4618      	mov	r0, r3
 800c302:	f7f5 f8f1 	bl	80014e8 <_ZN6SymbolD1Ev>
 800c306:	e037      	b.n	800c378 <_ZN21Expression_calculator8evaluateEP19Relation_expression+0x13c>
		case REL_OP_SMALLER_EQUAL:
			return var <= evaluate(rel_exp->right_sum_exp);
 800c308:	687b      	ldr	r3, [r7, #4]
 800c30a:	685a      	ldr	r2, [r3, #4]
 800c30c:	f107 0394 	add.w	r3, r7, #148	; 0x94
 800c310:	68b9      	ldr	r1, [r7, #8]
 800c312:	4618      	mov	r0, r3
 800c314:	f000 f83c 	bl	800c390 <_ZN21Expression_calculator8evaluateEP14Sum_expression>
 800c318:	68fb      	ldr	r3, [r7, #12]
 800c31a:	f107 0294 	add.w	r2, r7, #148	; 0x94
 800c31e:	f107 0114 	add.w	r1, r7, #20
 800c322:	4618      	mov	r0, r3
 800c324:	f00a ff58 	bl	80171d8 <_ZN6SymbolleES_>
 800c328:	f107 0394 	add.w	r3, r7, #148	; 0x94
 800c32c:	4618      	mov	r0, r3
 800c32e:	f7f5 f8db 	bl	80014e8 <_ZN6SymbolD1Ev>
 800c332:	e021      	b.n	800c378 <_ZN21Expression_calculator8evaluateEP19Relation_expression+0x13c>
		default:
			Transmitter::report_error("relation operator");
 800c334:	f107 03cc 	add.w	r3, r7, #204	; 0xcc
 800c338:	4618      	mov	r0, r3
 800c33a:	f016 fa85 	bl	8022848 <_ZNSaIcEC1Ev>
 800c33e:	f107 02cc 	add.w	r2, r7, #204	; 0xcc
 800c342:	f107 03b4 	add.w	r3, r7, #180	; 0xb4
 800c346:	4911      	ldr	r1, [pc, #68]	; (800c38c <_ZN21Expression_calculator8evaluateEP19Relation_expression+0x150>)
 800c348:	4618      	mov	r0, r3
 800c34a:	f7f5 fc24 	bl	8001b96 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 800c34e:	f107 03b4 	add.w	r3, r7, #180	; 0xb4
 800c352:	4618      	mov	r0, r3
 800c354:	f00b fee4 	bl	8018120 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 800c358:	f107 03b4 	add.w	r3, r7, #180	; 0xb4
 800c35c:	4618      	mov	r0, r3
 800c35e:	f016 fd04 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800c362:	f107 03cc 	add.w	r3, r7, #204	; 0xcc
 800c366:	4618      	mov	r0, r3
 800c368:	f016 fa6f 	bl	802284a <_ZNSaIcED1Ev>
		}
	}

	return var;
 800c36c:	f107 0314 	add.w	r3, r7, #20
 800c370:	4619      	mov	r1, r3
 800c372:	68f8      	ldr	r0, [r7, #12]
 800c374:	f7ff fe0c 	bl	800bf90 <_ZN6SymbolC1EOS_>
	Symbol var = evaluate(rel_exp->left_sum_exp);
 800c378:	f107 0314 	add.w	r3, r7, #20
 800c37c:	4618      	mov	r0, r3
 800c37e:	f7f5 f8b3 	bl	80014e8 <_ZN6SymbolD1Ev>
}
 800c382:	68f8      	ldr	r0, [r7, #12]
 800c384:	37d0      	adds	r7, #208	; 0xd0
 800c386:	46bd      	mov	sp, r7
 800c388:	bd80      	pop	{r7, pc}
 800c38a:	bf00      	nop
 800c38c:	08027698 	.word	0x08027698

0800c390 <_ZN21Expression_calculator8evaluateEP14Sum_expression>:

Symbol Expression_calculator::evaluate(Sum_expression *sum_exp)
{
 800c390:	b580      	push	{r7, lr}
 800c392:	b0a6      	sub	sp, #152	; 0x98
 800c394:	af00      	add	r7, sp, #0
 800c396:	60f8      	str	r0, [r7, #12]
 800c398:	60b9      	str	r1, [r7, #8]
 800c39a:	607a      	str	r2, [r7, #4]
	Symbol var = evaluate(sum_exp->mult_exps[0]);
 800c39c:	687b      	ldr	r3, [r7, #4]
 800c39e:	2100      	movs	r1, #0
 800c3a0:	4618      	mov	r0, r3
 800c3a2:	f000 fb53 	bl	800ca4c <_ZNSt6vectorIP19Multiply_expressionSaIS1_EEixEj>
 800c3a6:	4603      	mov	r3, r0
 800c3a8:	681a      	ldr	r2, [r3, #0]
 800c3aa:	68fb      	ldr	r3, [r7, #12]
 800c3ac:	68b9      	ldr	r1, [r7, #8]
 800c3ae:	4618      	mov	r0, r3
 800c3b0:	f000 f87e 	bl	800c4b0 <_ZN21Expression_calculator8evaluateEP19Multiply_expression>
	for (unsigned int i = 0; i < sum_exp->ops.size(); ++i)
 800c3b4:	2300      	movs	r3, #0
 800c3b6:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 800c3ba:	687b      	ldr	r3, [r7, #4]
 800c3bc:	330c      	adds	r3, #12
 800c3be:	4618      	mov	r0, r3
 800c3c0:	f000 fb54 	bl	800ca6c <_ZNKSt6vectorI12sum_operatorSaIS0_EE4sizeEv>
 800c3c4:	4602      	mov	r2, r0
 800c3c6:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 800c3ca:	4293      	cmp	r3, r2
 800c3cc:	bf34      	ite	cc
 800c3ce:	2301      	movcc	r3, #1
 800c3d0:	2300      	movcs	r3, #0
 800c3d2:	b2db      	uxtb	r3, r3
 800c3d4:	2b00      	cmp	r3, #0
 800c3d6:	d066      	beq.n	800c4a6 <_ZN21Expression_calculator8evaluateEP14Sum_expression+0x116>
	{
		if (sum_exp->ops[i] == SUM_OP_PLUS)
 800c3d8:	687b      	ldr	r3, [r7, #4]
 800c3da:	330c      	adds	r3, #12
 800c3dc:	f8d7 1094 	ldr.w	r1, [r7, #148]	; 0x94
 800c3e0:	4618      	mov	r0, r3
 800c3e2:	f000 fb52 	bl	800ca8a <_ZNSt6vectorI12sum_operatorSaIS0_EEixEj>
 800c3e6:	4603      	mov	r3, r0
 800c3e8:	781b      	ldrb	r3, [r3, #0]
 800c3ea:	2b00      	cmp	r3, #0
 800c3ec:	bf0c      	ite	eq
 800c3ee:	2301      	moveq	r3, #1
 800c3f0:	2300      	movne	r3, #0
 800c3f2:	b2db      	uxtb	r3, r3
 800c3f4:	2b00      	cmp	r3, #0
 800c3f6:	d028      	beq.n	800c44a <_ZN21Expression_calculator8evaluateEP14Sum_expression+0xba>
		{
			var = var + evaluate(sum_exp->mult_exps[i + 1]);
 800c3f8:	687a      	ldr	r2, [r7, #4]
 800c3fa:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 800c3fe:	3301      	adds	r3, #1
 800c400:	4619      	mov	r1, r3
 800c402:	4610      	mov	r0, r2
 800c404:	f000 fb22 	bl	800ca4c <_ZNSt6vectorIP19Multiply_expressionSaIS1_EEixEj>
 800c408:	4603      	mov	r3, r0
 800c40a:	681a      	ldr	r2, [r3, #0]
 800c40c:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800c410:	68b9      	ldr	r1, [r7, #8]
 800c412:	4618      	mov	r0, r3
 800c414:	f000 f84c 	bl	800c4b0 <_ZN21Expression_calculator8evaluateEP19Multiply_expression>
 800c418:	f107 0314 	add.w	r3, r7, #20
 800c41c:	f107 0234 	add.w	r2, r7, #52	; 0x34
 800c420:	68f9      	ldr	r1, [r7, #12]
 800c422:	4618      	mov	r0, r3
 800c424:	f00a fbae 	bl	8016b84 <_ZN6SymbolplES_>
 800c428:	f107 0314 	add.w	r3, r7, #20
 800c42c:	4619      	mov	r1, r3
 800c42e:	68f8      	ldr	r0, [r7, #12]
 800c430:	f7ff fd58 	bl	800bee4 <_ZN6SymbolaSEOS_>
 800c434:	f107 0314 	add.w	r3, r7, #20
 800c438:	4618      	mov	r0, r3
 800c43a:	f7f5 f855 	bl	80014e8 <_ZN6SymbolD1Ev>
 800c43e:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800c442:	4618      	mov	r0, r3
 800c444:	f7f5 f850 	bl	80014e8 <_ZN6SymbolD1Ev>
 800c448:	e027      	b.n	800c49a <_ZN21Expression_calculator8evaluateEP14Sum_expression+0x10a>
		}
		else
		{
			var = var - evaluate(sum_exp->mult_exps[i + 1]);
 800c44a:	687a      	ldr	r2, [r7, #4]
 800c44c:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 800c450:	3301      	adds	r3, #1
 800c452:	4619      	mov	r1, r3
 800c454:	4610      	mov	r0, r2
 800c456:	f000 faf9 	bl	800ca4c <_ZNSt6vectorIP19Multiply_expressionSaIS1_EEixEj>
 800c45a:	4603      	mov	r3, r0
 800c45c:	681a      	ldr	r2, [r3, #0]
 800c45e:	f107 0374 	add.w	r3, r7, #116	; 0x74
 800c462:	68b9      	ldr	r1, [r7, #8]
 800c464:	4618      	mov	r0, r3
 800c466:	f000 f823 	bl	800c4b0 <_ZN21Expression_calculator8evaluateEP19Multiply_expression>
 800c46a:	f107 0354 	add.w	r3, r7, #84	; 0x54
 800c46e:	f107 0274 	add.w	r2, r7, #116	; 0x74
 800c472:	68f9      	ldr	r1, [r7, #12]
 800c474:	4618      	mov	r0, r3
 800c476:	f00a fc29 	bl	8016ccc <_ZN6SymbolmiES_>
 800c47a:	f107 0354 	add.w	r3, r7, #84	; 0x54
 800c47e:	4619      	mov	r1, r3
 800c480:	68f8      	ldr	r0, [r7, #12]
 800c482:	f7ff fd2f 	bl	800bee4 <_ZN6SymbolaSEOS_>
 800c486:	f107 0354 	add.w	r3, r7, #84	; 0x54
 800c48a:	4618      	mov	r0, r3
 800c48c:	f7f5 f82c 	bl	80014e8 <_ZN6SymbolD1Ev>
 800c490:	f107 0374 	add.w	r3, r7, #116	; 0x74
 800c494:	4618      	mov	r0, r3
 800c496:	f7f5 f827 	bl	80014e8 <_ZN6SymbolD1Ev>
	for (unsigned int i = 0; i < sum_exp->ops.size(); ++i)
 800c49a:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 800c49e:	3301      	adds	r3, #1
 800c4a0:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 800c4a4:	e789      	b.n	800c3ba <_ZN21Expression_calculator8evaluateEP14Sum_expression+0x2a>
		}
	}
	return var;
 800c4a6:	bf00      	nop
}
 800c4a8:	68f8      	ldr	r0, [r7, #12]
 800c4aa:	3798      	adds	r7, #152	; 0x98
 800c4ac:	46bd      	mov	sp, r7
 800c4ae:	bd80      	pop	{r7, pc}

0800c4b0 <_ZN21Expression_calculator8evaluateEP19Multiply_expression>:

Symbol Expression_calculator::evaluate(Multiply_expression *mult_exp)
{
 800c4b0:	b580      	push	{r7, lr}
 800c4b2:	b0b6      	sub	sp, #216	; 0xd8
 800c4b4:	af00      	add	r7, sp, #0
 800c4b6:	60f8      	str	r0, [r7, #12]
 800c4b8:	60b9      	str	r1, [r7, #8]
 800c4ba:	607a      	str	r2, [r7, #4]
	Symbol var = evaluate(mult_exp->pow_exps[0]);
 800c4bc:	687b      	ldr	r3, [r7, #4]
 800c4be:	2100      	movs	r1, #0
 800c4c0:	4618      	mov	r0, r3
 800c4c2:	f000 faf1 	bl	800caa8 <_ZNSt6vectorIP16Power_expressionSaIS1_EEixEj>
 800c4c6:	4603      	mov	r3, r0
 800c4c8:	681a      	ldr	r2, [r3, #0]
 800c4ca:	68fb      	ldr	r3, [r7, #12]
 800c4cc:	68b9      	ldr	r1, [r7, #8]
 800c4ce:	4618      	mov	r0, r3
 800c4d0:	f000 f8b8 	bl	800c644 <_ZN21Expression_calculator8evaluateEP16Power_expression>
	for (unsigned int i = 0; i < mult_exp->ops.size(); ++i)
 800c4d4:	2300      	movs	r3, #0
 800c4d6:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 800c4da:	687b      	ldr	r3, [r7, #4]
 800c4dc:	330c      	adds	r3, #12
 800c4de:	4618      	mov	r0, r3
 800c4e0:	f000 faf2 	bl	800cac8 <_ZNKSt6vectorI13mult_operatorSaIS0_EE4sizeEv>
 800c4e4:	4602      	mov	r2, r0
 800c4e6:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 800c4ea:	4293      	cmp	r3, r2
 800c4ec:	bf34      	ite	cc
 800c4ee:	2301      	movcc	r3, #1
 800c4f0:	2300      	movcs	r3, #0
 800c4f2:	b2db      	uxtb	r3, r3
 800c4f4:	2b00      	cmp	r3, #0
 800c4f6:	f000 80a0 	beq.w	800c63a <_ZN21Expression_calculator8evaluateEP19Multiply_expression+0x18a>
	{
		if (mult_exp->ops[i] == MULT_OP_MULTIPLY)
 800c4fa:	687b      	ldr	r3, [r7, #4]
 800c4fc:	330c      	adds	r3, #12
 800c4fe:	f8d7 10d4 	ldr.w	r1, [r7, #212]	; 0xd4
 800c502:	4618      	mov	r0, r3
 800c504:	f000 faef 	bl	800cae6 <_ZNSt6vectorI13mult_operatorSaIS0_EEixEj>
 800c508:	4603      	mov	r3, r0
 800c50a:	781b      	ldrb	r3, [r3, #0]
 800c50c:	2b01      	cmp	r3, #1
 800c50e:	bf0c      	ite	eq
 800c510:	2301      	moveq	r3, #1
 800c512:	2300      	movne	r3, #0
 800c514:	b2db      	uxtb	r3, r3
 800c516:	2b00      	cmp	r3, #0
 800c518:	d028      	beq.n	800c56c <_ZN21Expression_calculator8evaluateEP19Multiply_expression+0xbc>
		{
			var = var * evaluate(mult_exp->pow_exps[i + 1]);
 800c51a:	687a      	ldr	r2, [r7, #4]
 800c51c:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 800c520:	3301      	adds	r3, #1
 800c522:	4619      	mov	r1, r3
 800c524:	4610      	mov	r0, r2
 800c526:	f000 fabf 	bl	800caa8 <_ZNSt6vectorIP16Power_expressionSaIS1_EEixEj>
 800c52a:	4603      	mov	r3, r0
 800c52c:	681a      	ldr	r2, [r3, #0]
 800c52e:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800c532:	68b9      	ldr	r1, [r7, #8]
 800c534:	4618      	mov	r0, r3
 800c536:	f000 f885 	bl	800c644 <_ZN21Expression_calculator8evaluateEP16Power_expression>
 800c53a:	f107 0314 	add.w	r3, r7, #20
 800c53e:	f107 0234 	add.w	r2, r7, #52	; 0x34
 800c542:	68f9      	ldr	r1, [r7, #12]
 800c544:	4618      	mov	r0, r3
 800c546:	f00a ff93 	bl	8017470 <_ZN6SymbolmlES_>
 800c54a:	f107 0314 	add.w	r3, r7, #20
 800c54e:	4619      	mov	r1, r3
 800c550:	68f8      	ldr	r0, [r7, #12]
 800c552:	f7ff fcc7 	bl	800bee4 <_ZN6SymbolaSEOS_>
 800c556:	f107 0314 	add.w	r3, r7, #20
 800c55a:	4618      	mov	r0, r3
 800c55c:	f7f4 ffc4 	bl	80014e8 <_ZN6SymbolD1Ev>
 800c560:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800c564:	4618      	mov	r0, r3
 800c566:	f7f4 ffbf 	bl	80014e8 <_ZN6SymbolD1Ev>
 800c56a:	e060      	b.n	800c62e <_ZN21Expression_calculator8evaluateEP19Multiply_expression+0x17e>
		}
		else if (mult_exp->ops[i] == MULT_OP_DIVIDE)
 800c56c:	687b      	ldr	r3, [r7, #4]
 800c56e:	330c      	adds	r3, #12
 800c570:	f8d7 10d4 	ldr.w	r1, [r7, #212]	; 0xd4
 800c574:	4618      	mov	r0, r3
 800c576:	f000 fab6 	bl	800cae6 <_ZNSt6vectorI13mult_operatorSaIS0_EEixEj>
 800c57a:	4603      	mov	r3, r0
 800c57c:	781b      	ldrb	r3, [r3, #0]
 800c57e:	2b02      	cmp	r3, #2
 800c580:	bf0c      	ite	eq
 800c582:	2301      	moveq	r3, #1
 800c584:	2300      	movne	r3, #0
 800c586:	b2db      	uxtb	r3, r3
 800c588:	2b00      	cmp	r3, #0
 800c58a:	d028      	beq.n	800c5de <_ZN21Expression_calculator8evaluateEP19Multiply_expression+0x12e>
		{
			var = var / evaluate(mult_exp->pow_exps[i + 1]);
 800c58c:	687a      	ldr	r2, [r7, #4]
 800c58e:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 800c592:	3301      	adds	r3, #1
 800c594:	4619      	mov	r1, r3
 800c596:	4610      	mov	r0, r2
 800c598:	f000 fa86 	bl	800caa8 <_ZNSt6vectorIP16Power_expressionSaIS1_EEixEj>
 800c59c:	4603      	mov	r3, r0
 800c59e:	681a      	ldr	r2, [r3, #0]
 800c5a0:	f107 0374 	add.w	r3, r7, #116	; 0x74
 800c5a4:	68b9      	ldr	r1, [r7, #8]
 800c5a6:	4618      	mov	r0, r3
 800c5a8:	f000 f84c 	bl	800c644 <_ZN21Expression_calculator8evaluateEP16Power_expression>
 800c5ac:	f107 0354 	add.w	r3, r7, #84	; 0x54
 800c5b0:	f107 0274 	add.w	r2, r7, #116	; 0x74
 800c5b4:	68f9      	ldr	r1, [r7, #12]
 800c5b6:	4618      	mov	r0, r3
 800c5b8:	f00a ffc2 	bl	8017540 <_ZN6SymboldvES_>
 800c5bc:	f107 0354 	add.w	r3, r7, #84	; 0x54
 800c5c0:	4619      	mov	r1, r3
 800c5c2:	68f8      	ldr	r0, [r7, #12]
 800c5c4:	f7ff fc8e 	bl	800bee4 <_ZN6SymbolaSEOS_>
 800c5c8:	f107 0354 	add.w	r3, r7, #84	; 0x54
 800c5cc:	4618      	mov	r0, r3
 800c5ce:	f7f4 ff8b 	bl	80014e8 <_ZN6SymbolD1Ev>
 800c5d2:	f107 0374 	add.w	r3, r7, #116	; 0x74
 800c5d6:	4618      	mov	r0, r3
 800c5d8:	f7f4 ff86 	bl	80014e8 <_ZN6SymbolD1Ev>
 800c5dc:	e027      	b.n	800c62e <_ZN21Expression_calculator8evaluateEP19Multiply_expression+0x17e>
		}
		else
		{
			var = var % evaluate(mult_exp->pow_exps[i + 1]);
 800c5de:	687a      	ldr	r2, [r7, #4]
 800c5e0:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 800c5e4:	3301      	adds	r3, #1
 800c5e6:	4619      	mov	r1, r3
 800c5e8:	4610      	mov	r0, r2
 800c5ea:	f000 fa5d 	bl	800caa8 <_ZNSt6vectorIP16Power_expressionSaIS1_EEixEj>
 800c5ee:	4603      	mov	r3, r0
 800c5f0:	681a      	ldr	r2, [r3, #0]
 800c5f2:	f107 03b4 	add.w	r3, r7, #180	; 0xb4
 800c5f6:	68b9      	ldr	r1, [r7, #8]
 800c5f8:	4618      	mov	r0, r3
 800c5fa:	f000 f823 	bl	800c644 <_ZN21Expression_calculator8evaluateEP16Power_expression>
 800c5fe:	f107 0394 	add.w	r3, r7, #148	; 0x94
 800c602:	f107 02b4 	add.w	r2, r7, #180	; 0xb4
 800c606:	68f9      	ldr	r1, [r7, #12]
 800c608:	4618      	mov	r0, r3
 800c60a:	f00b f801 	bl	8017610 <_ZN6SymbolrmES_>
 800c60e:	f107 0394 	add.w	r3, r7, #148	; 0x94
 800c612:	4619      	mov	r1, r3
 800c614:	68f8      	ldr	r0, [r7, #12]
 800c616:	f7ff fc65 	bl	800bee4 <_ZN6SymbolaSEOS_>
 800c61a:	f107 0394 	add.w	r3, r7, #148	; 0x94
 800c61e:	4618      	mov	r0, r3
 800c620:	f7f4 ff62 	bl	80014e8 <_ZN6SymbolD1Ev>
 800c624:	f107 03b4 	add.w	r3, r7, #180	; 0xb4
 800c628:	4618      	mov	r0, r3
 800c62a:	f7f4 ff5d 	bl	80014e8 <_ZN6SymbolD1Ev>
	for (unsigned int i = 0; i < mult_exp->ops.size(); ++i)
 800c62e:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 800c632:	3301      	adds	r3, #1
 800c634:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 800c638:	e74f      	b.n	800c4da <_ZN21Expression_calculator8evaluateEP19Multiply_expression+0x2a>
		}
	}
	return var;
 800c63a:	bf00      	nop
}
 800c63c:	68f8      	ldr	r0, [r7, #12]
 800c63e:	37d8      	adds	r7, #216	; 0xd8
 800c640:	46bd      	mov	sp, r7
 800c642:	bd80      	pop	{r7, pc}

0800c644 <_ZN21Expression_calculator8evaluateEP16Power_expression>:

Symbol Expression_calculator::evaluate(Power_expression *pow_exp)
{
 800c644:	b580      	push	{r7, lr}
 800c646:	b09c      	sub	sp, #112	; 0x70
 800c648:	af00      	add	r7, sp, #0
 800c64a:	60f8      	str	r0, [r7, #12]
 800c64c:	60b9      	str	r1, [r7, #8]
 800c64e:	607a      	str	r2, [r7, #4]
	Symbol var = evaluate(pow_exp->left_un_exp);
 800c650:	687b      	ldr	r3, [r7, #4]
 800c652:	681a      	ldr	r2, [r3, #0]
 800c654:	68fb      	ldr	r3, [r7, #12]
 800c656:	68b9      	ldr	r1, [r7, #8]
 800c658:	4618      	mov	r0, r3
 800c65a:	f000 f836 	bl	800c6ca <_ZN21Expression_calculator8evaluateEP16Unary_expression>

	if (pow_exp->right_un_exp)
 800c65e:	687b      	ldr	r3, [r7, #4]
 800c660:	685b      	ldr	r3, [r3, #4]
 800c662:	2b00      	cmp	r3, #0
 800c664:	d02c      	beq.n	800c6c0 <_ZN21Expression_calculator8evaluateEP16Power_expression+0x7c>
	{
		Symbol temp = evaluate(pow_exp->right_un_exp);
 800c666:	687b      	ldr	r3, [r7, #4]
 800c668:	685a      	ldr	r2, [r3, #4]
 800c66a:	f107 0310 	add.w	r3, r7, #16
 800c66e:	68b9      	ldr	r1, [r7, #8]
 800c670:	4618      	mov	r0, r3
 800c672:	f000 f82a 	bl	800c6ca <_ZN21Expression_calculator8evaluateEP16Unary_expression>
		var = var ^ temp;
 800c676:	f107 0210 	add.w	r2, r7, #16
 800c67a:	f107 0350 	add.w	r3, r7, #80	; 0x50
 800c67e:	4611      	mov	r1, r2
 800c680:	4618      	mov	r0, r3
 800c682:	f7fb ff37 	bl	80084f4 <_ZN6SymbolC1ERKS_>
 800c686:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800c68a:	f107 0250 	add.w	r2, r7, #80	; 0x50
 800c68e:	68f9      	ldr	r1, [r7, #12]
 800c690:	4618      	mov	r0, r3
 800c692:	f00b f815 	bl	80176c0 <_ZN6SymboleoES_>
 800c696:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800c69a:	4619      	mov	r1, r3
 800c69c:	68f8      	ldr	r0, [r7, #12]
 800c69e:	f7ff fc21 	bl	800bee4 <_ZN6SymbolaSEOS_>
 800c6a2:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800c6a6:	4618      	mov	r0, r3
 800c6a8:	f7f4 ff1e 	bl	80014e8 <_ZN6SymbolD1Ev>
 800c6ac:	f107 0350 	add.w	r3, r7, #80	; 0x50
 800c6b0:	4618      	mov	r0, r3
 800c6b2:	f7f4 ff19 	bl	80014e8 <_ZN6SymbolD1Ev>
		Symbol temp = evaluate(pow_exp->right_un_exp);
 800c6b6:	f107 0310 	add.w	r3, r7, #16
 800c6ba:	4618      	mov	r0, r3
 800c6bc:	f7f4 ff14 	bl	80014e8 <_ZN6SymbolD1Ev>
	}

	return var;
 800c6c0:	bf00      	nop
}
 800c6c2:	68f8      	ldr	r0, [r7, #12]
 800c6c4:	3770      	adds	r7, #112	; 0x70
 800c6c6:	46bd      	mov	sp, r7
 800c6c8:	bd80      	pop	{r7, pc}

0800c6ca <_ZN21Expression_calculator8evaluateEP16Unary_expression>:

Symbol Expression_calculator::evaluate(Unary_expression *un_exp)
{
 800c6ca:	b580      	push	{r7, lr}
 800c6cc:	b094      	sub	sp, #80	; 0x50
 800c6ce:	af00      	add	r7, sp, #0
 800c6d0:	60f8      	str	r0, [r7, #12]
 800c6d2:	60b9      	str	r1, [r7, #8]
 800c6d4:	607a      	str	r2, [r7, #4]
	switch (un_exp->op)
 800c6d6:	687b      	ldr	r3, [r7, #4]
 800c6d8:	791b      	ldrb	r3, [r3, #4]
 800c6da:	2b00      	cmp	r3, #0
 800c6dc:	d002      	beq.n	800c6e4 <_ZN21Expression_calculator8evaluateEP16Unary_expression+0x1a>
 800c6de:	2b01      	cmp	r3, #1
 800c6e0:	d008      	beq.n	800c6f4 <_ZN21Expression_calculator8evaluateEP16Unary_expression+0x2a>
 800c6e2:	e01c      	b.n	800c71e <_ZN21Expression_calculator8evaluateEP16Unary_expression+0x54>
	{
	case UN_OP_NONE:
		return evaluate(un_exp->prior_exp);
 800c6e4:	687b      	ldr	r3, [r7, #4]
 800c6e6:	681a      	ldr	r2, [r3, #0]
 800c6e8:	68fb      	ldr	r3, [r7, #12]
 800c6ea:	68b9      	ldr	r1, [r7, #8]
 800c6ec:	4618      	mov	r0, r3
 800c6ee:	f000 f82e 	bl	800c74e <_ZN21Expression_calculator8evaluateEP19Priority_expression>
 800c6f2:	e028      	b.n	800c746 <_ZN21Expression_calculator8evaluateEP16Unary_expression+0x7c>
	case UN_OP_MINUS:
		return -evaluate(un_exp->prior_exp);
 800c6f4:	687b      	ldr	r3, [r7, #4]
 800c6f6:	681a      	ldr	r2, [r3, #0]
 800c6f8:	f107 0310 	add.w	r3, r7, #16
 800c6fc:	68b9      	ldr	r1, [r7, #8]
 800c6fe:	4618      	mov	r0, r3
 800c700:	f000 f825 	bl	800c74e <_ZN21Expression_calculator8evaluateEP19Priority_expression>
 800c704:	68fb      	ldr	r3, [r7, #12]
 800c706:	f107 0210 	add.w	r2, r7, #16
 800c70a:	4611      	mov	r1, r2
 800c70c:	4618      	mov	r0, r3
 800c70e:	f00a fe5f 	bl	80173d0 <_ZN6SymbolngEv>
 800c712:	f107 0310 	add.w	r3, r7, #16
 800c716:	4618      	mov	r0, r3
 800c718:	f7f4 fee6 	bl	80014e8 <_ZN6SymbolD1Ev>
 800c71c:	e013      	b.n	800c746 <_ZN21Expression_calculator8evaluateEP16Unary_expression+0x7c>
	default:
		return !evaluate(un_exp->prior_exp);
 800c71e:	687b      	ldr	r3, [r7, #4]
 800c720:	681a      	ldr	r2, [r3, #0]
 800c722:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800c726:	68b9      	ldr	r1, [r7, #8]
 800c728:	4618      	mov	r0, r3
 800c72a:	f000 f810 	bl	800c74e <_ZN21Expression_calculator8evaluateEP19Priority_expression>
 800c72e:	68fb      	ldr	r3, [r7, #12]
 800c730:	f107 0230 	add.w	r2, r7, #48	; 0x30
 800c734:	4611      	mov	r1, r2
 800c736:	4618      	mov	r0, r3
 800c738:	f00a fbc4 	bl	8016ec4 <_ZN6SymbolntEv>
 800c73c:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800c740:	4618      	mov	r0, r3
 800c742:	f7f4 fed1 	bl	80014e8 <_ZN6SymbolD1Ev>
	}
}
 800c746:	68f8      	ldr	r0, [r7, #12]
 800c748:	3750      	adds	r7, #80	; 0x50
 800c74a:	46bd      	mov	sp, r7
 800c74c:	bd80      	pop	{r7, pc}

0800c74e <_ZN21Expression_calculator8evaluateEP19Priority_expression>:

Symbol Expression_calculator::evaluate(Priority_expression *prior_exp)
{
 800c74e:	b580      	push	{r7, lr}
 800c750:	b086      	sub	sp, #24
 800c752:	af00      	add	r7, sp, #0
 800c754:	60f8      	str	r0, [r7, #12]
 800c756:	60b9      	str	r1, [r7, #8]
 800c758:	607a      	str	r2, [r7, #4]
	if (std::holds_alternative<Expression*>(prior_exp->exp))
 800c75a:	687b      	ldr	r3, [r7, #4]
 800c75c:	4618      	mov	r0, r3
 800c75e:	f7fd fc06 	bl	8009f6e <_ZSt17holds_alternativeIP10ExpressionJP17Primal_expressionS1_EEbRKSt7variantIJDpT0_EE>
 800c762:	4603      	mov	r3, r0
 800c764:	2b00      	cmp	r3, #0
 800c766:	d00d      	beq.n	800c784 <_ZN21Expression_calculator8evaluateEP19Priority_expression+0x36>
	{
		Expression *exp = std::get<Expression*>(prior_exp->exp);
 800c768:	687b      	ldr	r3, [r7, #4]
 800c76a:	4618      	mov	r0, r3
 800c76c:	f7fd fc10 	bl	8009f90 <_ZSt3getIP10ExpressionJP17Primal_expressionS1_EERT_RSt7variantIJDpT0_EE>
 800c770:	4603      	mov	r3, r0
 800c772:	681b      	ldr	r3, [r3, #0]
 800c774:	613b      	str	r3, [r7, #16]
		return evaluate(exp);
 800c776:	68fb      	ldr	r3, [r7, #12]
 800c778:	693a      	ldr	r2, [r7, #16]
 800c77a:	68b9      	ldr	r1, [r7, #8]
 800c77c:	4618      	mov	r0, r3
 800c77e:	f7ff fc1d 	bl	800bfbc <_ZN21Expression_calculator8evaluateEP10Expression>
 800c782:	e00c      	b.n	800c79e <_ZN21Expression_calculator8evaluateEP19Priority_expression+0x50>
	}
	else
	{
		Primal_expression *exp = std::get<Primal_expression*>(prior_exp->exp);
 800c784:	687b      	ldr	r3, [r7, #4]
 800c786:	4618      	mov	r0, r3
 800c788:	f7fd fc0e 	bl	8009fa8 <_ZSt3getIP17Primal_expressionJS1_P10ExpressionEERT_RSt7variantIJDpT0_EE>
 800c78c:	4603      	mov	r3, r0
 800c78e:	681b      	ldr	r3, [r3, #0]
 800c790:	617b      	str	r3, [r7, #20]
		return evaluate(exp);
 800c792:	68fb      	ldr	r3, [r7, #12]
 800c794:	697a      	ldr	r2, [r7, #20]
 800c796:	68b9      	ldr	r1, [r7, #8]
 800c798:	4618      	mov	r0, r3
 800c79a:	f000 f805 	bl	800c7a8 <_ZN21Expression_calculator8evaluateEP17Primal_expression>
	}
}
 800c79e:	68f8      	ldr	r0, [r7, #12]
 800c7a0:	3718      	adds	r7, #24
 800c7a2:	46bd      	mov	sp, r7
 800c7a4:	bd80      	pop	{r7, pc}
	...

0800c7a8 <_ZN21Expression_calculator8evaluateEP17Primal_expression>:

Symbol Expression_calculator::evaluate(Primal_expression *primal_exp)
{
 800c7a8:	b580      	push	{r7, lr}
 800c7aa:	b08a      	sub	sp, #40	; 0x28
 800c7ac:	af00      	add	r7, sp, #0
 800c7ae:	60f8      	str	r0, [r7, #12]
 800c7b0:	60b9      	str	r1, [r7, #8]
 800c7b2:	607a      	str	r2, [r7, #4]
	switch (primal_exp->type)
 800c7b4:	687b      	ldr	r3, [r7, #4]
 800c7b6:	781b      	ldrb	r3, [r3, #0]
 800c7b8:	2b05      	cmp	r3, #5
 800c7ba:	d867      	bhi.n	800c88c <_ZN21Expression_calculator8evaluateEP17Primal_expression+0xe4>
 800c7bc:	a201      	add	r2, pc, #4	; (adr r2, 800c7c4 <_ZN21Expression_calculator8evaluateEP17Primal_expression+0x1c>)
 800c7be:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800c7c2:	bf00      	nop
 800c7c4:	0800c841 	.word	0x0800c841
 800c7c8:	0800c7dd 	.word	0x0800c7dd
 800c7cc:	0800c7f5 	.word	0x0800c7f5
 800c7d0:	0800c811 	.word	0x0800c811
 800c7d4:	0800c859 	.word	0x0800c859
 800c7d8:	0800c873 	.word	0x0800c873
	{
	case PRIMAL_INT:
		return std::get<int>(primal_exp->content);
 800c7dc:	687b      	ldr	r3, [r7, #4]
 800c7de:	3304      	adds	r3, #4
 800c7e0:	4618      	mov	r0, r3
 800c7e2:	f000 f98f 	bl	800cb04 <_ZSt3getIiJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERT_RSt7variantIJDpT0_EE>
 800c7e6:	4603      	mov	r3, r0
 800c7e8:	681b      	ldr	r3, [r3, #0]
 800c7ea:	4619      	mov	r1, r3
 800c7ec:	68f8      	ldr	r0, [r7, #12]
 800c7ee:	f00a f8d5 	bl	801699c <_ZN6SymbolC1Ei>
 800c7f2:	e04f      	b.n	800c894 <_ZN21Expression_calculator8evaluateEP17Primal_expression+0xec>
	case PRIMAL_FLOAT:
		return std::get<float>(primal_exp->content);
 800c7f4:	687b      	ldr	r3, [r7, #4]
 800c7f6:	3304      	adds	r3, #4
 800c7f8:	4618      	mov	r0, r3
 800c7fa:	f000 f98f 	bl	800cb1c <_ZSt3getIfJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERT_RSt7variantIJDpT0_EE>
 800c7fe:	4603      	mov	r3, r0
 800c800:	edd3 7a00 	vldr	s15, [r3]
 800c804:	eeb0 0a67 	vmov.f32	s0, s15
 800c808:	68f8      	ldr	r0, [r7, #12]
 800c80a:	f00a f8e0 	bl	80169ce <_ZN6SymbolC1Ef>
 800c80e:	e041      	b.n	800c894 <_ZN21Expression_calculator8evaluateEP17Primal_expression+0xec>
	case PRIMAL_STRING:
		return std::get<std::string>(primal_exp->content);
 800c810:	687b      	ldr	r3, [r7, #4]
 800c812:	3304      	adds	r3, #4
 800c814:	4618      	mov	r0, r3
 800c816:	f000 f98d 	bl	800cb34 <_ZSt3getINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJbifS5_P8VariableP13Function_callEERT_RSt7variantIJDpT0_EE>
 800c81a:	4602      	mov	r2, r0
 800c81c:	f107 0310 	add.w	r3, r7, #16
 800c820:	4611      	mov	r1, r2
 800c822:	4618      	mov	r0, r3
 800c824:	f016 fc62 	bl	80230ec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 800c828:	f107 0310 	add.w	r3, r7, #16
 800c82c:	4619      	mov	r1, r3
 800c82e:	68f8      	ldr	r0, [r7, #12]
 800c830:	f00a f901 	bl	8016a36 <_ZN6SymbolC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 800c834:	f107 0310 	add.w	r3, r7, #16
 800c838:	4618      	mov	r0, r3
 800c83a:	f016 fa96 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800c83e:	e029      	b.n	800c894 <_ZN21Expression_calculator8evaluateEP17Primal_expression+0xec>
	case PRIMAL_BOOL:
		return std::get<bool>(primal_exp->content);
 800c840:	687b      	ldr	r3, [r7, #4]
 800c842:	3304      	adds	r3, #4
 800c844:	4618      	mov	r0, r3
 800c846:	f000 f981 	bl	800cb4c <_ZSt3getIbJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERT_RSt7variantIJDpT0_EE>
 800c84a:	4603      	mov	r3, r0
 800c84c:	781b      	ldrb	r3, [r3, #0]
 800c84e:	4619      	mov	r1, r3
 800c850:	68f8      	ldr	r0, [r7, #12]
 800c852:	f00a f8d6 	bl	8016a02 <_ZN6SymbolC1Eb>
 800c856:	e01d      	b.n	800c894 <_ZN21Expression_calculator8evaluateEP17Primal_expression+0xec>
	case PRIMAL_VARIABLE:
		return evaluate(std::get<Variable*>(primal_exp->content));
 800c858:	687b      	ldr	r3, [r7, #4]
 800c85a:	3304      	adds	r3, #4
 800c85c:	4618      	mov	r0, r3
 800c85e:	f7fd fb4a 	bl	8009ef6 <_ZSt3getIP8VariableJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES1_P13Function_callEERT_RSt7variantIJDpT0_EE>
 800c862:	4603      	mov	r3, r0
 800c864:	681a      	ldr	r2, [r3, #0]
 800c866:	68fb      	ldr	r3, [r7, #12]
 800c868:	68b9      	ldr	r1, [r7, #8]
 800c86a:	4618      	mov	r0, r3
 800c86c:	f000 f831 	bl	800c8d2 <_ZN21Expression_calculator8evaluateEP8Variable>
 800c870:	e010      	b.n	800c894 <_ZN21Expression_calculator8evaluateEP17Primal_expression+0xec>
	case PRIMAL_FUNCTION_CALL:
		return Function_handler::run_function(
				std::get<Function_call*>(primal_exp->content));
 800c872:	687b      	ldr	r3, [r7, #4]
 800c874:	3304      	adds	r3, #4
 800c876:	4618      	mov	r0, r3
 800c878:	f7fd fb5a 	bl	8009f30 <_ZSt3getIP13Function_callJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableS1_EERT_RSt7variantIJDpT0_EE>
 800c87c:	4603      	mov	r3, r0
 800c87e:	681a      	ldr	r2, [r3, #0]
 800c880:	68fb      	ldr	r3, [r7, #12]
 800c882:	4611      	mov	r1, r2
 800c884:	4618      	mov	r0, r3
 800c886:	f001 fad5 	bl	800de34 <_ZN16Function_handler12run_functionEP13Function_call>
 800c88a:	e003      	b.n	800c894 <_ZN21Expression_calculator8evaluateEP17Primal_expression+0xec>
	}
	return 0;
 800c88c:	2100      	movs	r1, #0
 800c88e:	68f8      	ldr	r0, [r7, #12]
 800c890:	f00a f884 	bl	801699c <_ZN6SymbolC1Ei>
}
 800c894:	68f8      	ldr	r0, [r7, #12]
 800c896:	3728      	adds	r7, #40	; 0x28
 800c898:	46bd      	mov	sp, r7
 800c89a:	bd80      	pop	{r7, pc}

0800c89c <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1Ev>:
      variant() = default;
 800c89c:	b580      	push	{r7, lr}
 800c89e:	b082      	sub	sp, #8
 800c8a0:	af00      	add	r7, sp, #0
 800c8a2:	6078      	str	r0, [r7, #4]
 800c8a4:	687b      	ldr	r3, [r7, #4]
 800c8a6:	4618      	mov	r0, r3
 800c8a8:	f000 f9a7 	bl	800cbfa <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1Ev>
 800c8ac:	687b      	ldr	r3, [r7, #4]
 800c8ae:	4618      	mov	r0, r3
 800c8b0:	3708      	adds	r7, #8
 800c8b2:	46bd      	mov	sp, r7
 800c8b4:	bd80      	pop	{r7, pc}

0800c8b6 <_ZN6SymbolC1Ev>:
{
public:
	symbol_type type;
	symbol_value value;

	Symbol() = default;
 800c8b6:	b580      	push	{r7, lr}
 800c8b8:	b082      	sub	sp, #8
 800c8ba:	af00      	add	r7, sp, #0
 800c8bc:	6078      	str	r0, [r7, #4]
 800c8be:	687b      	ldr	r3, [r7, #4]
 800c8c0:	3304      	adds	r3, #4
 800c8c2:	4618      	mov	r0, r3
 800c8c4:	f7ff ffea 	bl	800c89c <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1Ev>
 800c8c8:	687b      	ldr	r3, [r7, #4]
 800c8ca:	4618      	mov	r0, r3
 800c8cc:	3708      	adds	r7, #8
 800c8ce:	46bd      	mov	sp, r7
 800c8d0:	bd80      	pop	{r7, pc}

0800c8d2 <_ZN21Expression_calculator8evaluateEP8Variable>:

Symbol Expression_calculator::evaluate(Variable *var)
{
 800c8d2:	b590      	push	{r4, r7, lr}
 800c8d4:	b0a7      	sub	sp, #156	; 0x9c
 800c8d6:	af00      	add	r7, sp, #0
 800c8d8:	60f8      	str	r0, [r7, #12]
 800c8da:	60b9      	str	r1, [r7, #8]
 800c8dc:	607a      	str	r2, [r7, #4]
	Symbol s;
 800c8de:	f107 0310 	add.w	r3, r7, #16
 800c8e2:	4618      	mov	r0, r3
 800c8e4:	f7ff ffe7 	bl	800c8b6 <_ZN6SymbolC1Ev>

	switch (var->type)
 800c8e8:	687b      	ldr	r3, [r7, #4]
 800c8ea:	781b      	ldrb	r3, [r3, #0]
 800c8ec:	2b00      	cmp	r3, #0
 800c8ee:	d002      	beq.n	800c8f6 <_ZN21Expression_calculator8evaluateEP8Variable+0x24>
 800c8f0:	2b02      	cmp	r3, #2
 800c8f2:	d01e      	beq.n	800c932 <_ZN21Expression_calculator8evaluateEP8Variable+0x60>
 800c8f4:	e03b      	b.n	800c96e <_ZN21Expression_calculator8evaluateEP8Variable+0x9c>
	{
	case VARIABLE_LOCAL:
		s = Variable_handler::get_instance().get_local(var->id);
 800c8f6:	f00b ff31 	bl	801875c <_ZN16Variable_handler12get_instanceEv>
 800c8fa:	4604      	mov	r4, r0
 800c8fc:	687b      	ldr	r3, [r7, #4]
 800c8fe:	1d1a      	adds	r2, r3, #4
 800c900:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800c904:	4611      	mov	r1, r2
 800c906:	4618      	mov	r0, r3
 800c908:	f016 fbf0 	bl	80230ec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 800c90c:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800c910:	4619      	mov	r1, r3
 800c912:	4620      	mov	r0, r4
 800c914:	f00b ffe8 	bl	80188e8 <_ZN16Variable_handler9get_localENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 800c918:	4602      	mov	r2, r0
 800c91a:	f107 0310 	add.w	r3, r7, #16
 800c91e:	4611      	mov	r1, r2
 800c920:	4618      	mov	r0, r3
 800c922:	f7f4 ff77 	bl	8001814 <_ZN6SymbolaSERKS_>
 800c926:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800c92a:	4618      	mov	r0, r3
 800c92c:	f016 fa1d 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
		break;
 800c930:	e03b      	b.n	800c9aa <_ZN21Expression_calculator8evaluateEP8Variable+0xd8>
	case VARIABLE_PAR:
		s = Variable_handler::get_instance().get_par(var->id);
 800c932:	f00b ff13 	bl	801875c <_ZN16Variable_handler12get_instanceEv>
 800c936:	4604      	mov	r4, r0
 800c938:	687b      	ldr	r3, [r7, #4]
 800c93a:	1d1a      	adds	r2, r3, #4
 800c93c:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800c940:	4611      	mov	r1, r2
 800c942:	4618      	mov	r0, r3
 800c944:	f016 fbd2 	bl	80230ec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 800c948:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800c94c:	4619      	mov	r1, r3
 800c94e:	4620      	mov	r0, r4
 800c950:	f00b ff7e 	bl	8018850 <_ZN16Variable_handler7get_parENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 800c954:	4602      	mov	r2, r0
 800c956:	f107 0310 	add.w	r3, r7, #16
 800c95a:	4611      	mov	r1, r2
 800c95c:	4618      	mov	r0, r3
 800c95e:	f7f4 ff59 	bl	8001814 <_ZN6SymbolaSERKS_>
 800c962:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800c966:	4618      	mov	r0, r3
 800c968:	f016 f9ff 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
		break;
 800c96c:	e01d      	b.n	800c9aa <_ZN21Expression_calculator8evaluateEP8Variable+0xd8>
	default:
		s = Variable_handler::get_instance().get_arg(var->id);
 800c96e:	f00b fef5 	bl	801875c <_ZN16Variable_handler12get_instanceEv>
 800c972:	4604      	mov	r4, r0
 800c974:	687b      	ldr	r3, [r7, #4]
 800c976:	1d1a      	adds	r2, r3, #4
 800c978:	f107 0360 	add.w	r3, r7, #96	; 0x60
 800c97c:	4611      	mov	r1, r2
 800c97e:	4618      	mov	r0, r3
 800c980:	f016 fbb4 	bl	80230ec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 800c984:	f107 0360 	add.w	r3, r7, #96	; 0x60
 800c988:	4619      	mov	r1, r3
 800c98a:	4620      	mov	r0, r4
 800c98c:	f00b ff14 	bl	80187b8 <_ZN16Variable_handler7get_argENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 800c990:	4602      	mov	r2, r0
 800c992:	f107 0310 	add.w	r3, r7, #16
 800c996:	4611      	mov	r1, r2
 800c998:	4618      	mov	r0, r3
 800c99a:	f7f4 ff3b 	bl	8001814 <_ZN6SymbolaSERKS_>
 800c99e:	f107 0360 	add.w	r3, r7, #96	; 0x60
 800c9a2:	4618      	mov	r0, r3
 800c9a4:	f016 f9e1 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
		break;
 800c9a8:	bf00      	nop
	}

	if (var->index)
 800c9aa:	687b      	ldr	r3, [r7, #4]
 800c9ac:	69db      	ldr	r3, [r3, #28]
 800c9ae:	2b00      	cmp	r3, #0
 800c9b0:	d01a      	beq.n	800c9e8 <_ZN21Expression_calculator8evaluateEP8Variable+0x116>
	{
		return s[evaluate(var->index)];
 800c9b2:	687b      	ldr	r3, [r7, #4]
 800c9b4:	69da      	ldr	r2, [r3, #28]
 800c9b6:	f107 0378 	add.w	r3, r7, #120	; 0x78
 800c9ba:	68b9      	ldr	r1, [r7, #8]
 800c9bc:	4618      	mov	r0, r3
 800c9be:	f7ff fafd 	bl	800bfbc <_ZN21Expression_calculator8evaluateEP10Expression>
 800c9c2:	f107 0278 	add.w	r2, r7, #120	; 0x78
 800c9c6:	f107 0310 	add.w	r3, r7, #16
 800c9ca:	4611      	mov	r1, r2
 800c9cc:	4618      	mov	r0, r3
 800c9ce:	f00a f84b 	bl	8016a68 <_ZN6SymbolixES_>
 800c9d2:	4603      	mov	r3, r0
 800c9d4:	4619      	mov	r1, r3
 800c9d6:	68f8      	ldr	r0, [r7, #12]
 800c9d8:	f7fb fd8c 	bl	80084f4 <_ZN6SymbolC1ERKS_>
 800c9dc:	f107 0378 	add.w	r3, r7, #120	; 0x78
 800c9e0:	4618      	mov	r0, r3
 800c9e2:	f7f4 fd81 	bl	80014e8 <_ZN6SymbolD1Ev>
 800c9e6:	e005      	b.n	800c9f4 <_ZN21Expression_calculator8evaluateEP8Variable+0x122>
	}

	return s;
 800c9e8:	f107 0310 	add.w	r3, r7, #16
 800c9ec:	4619      	mov	r1, r3
 800c9ee:	68f8      	ldr	r0, [r7, #12]
 800c9f0:	f7ff face 	bl	800bf90 <_ZN6SymbolC1EOS_>
	Symbol s;
 800c9f4:	f107 0310 	add.w	r3, r7, #16
 800c9f8:	4618      	mov	r0, r3
 800c9fa:	f7f4 fd75 	bl	80014e8 <_ZN6SymbolD1Ev>
}
 800c9fe:	68f8      	ldr	r0, [r7, #12]
 800ca00:	379c      	adds	r7, #156	; 0x9c
 800ca02:	46bd      	mov	sp, r7
 800ca04:	bd90      	pop	{r4, r7, pc}

0800ca06 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEEv>:
      using _Base::_Base;
 800ca06:	b580      	push	{r7, lr}
 800ca08:	b082      	sub	sp, #8
 800ca0a:	af00      	add	r7, sp, #0
 800ca0c:	6078      	str	r0, [r7, #4]
 800ca0e:	687b      	ldr	r3, [r7, #4]
 800ca10:	4618      	mov	r0, r3
 800ca12:	f7fc f8fe 	bl	8008c12 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1Ev>
 800ca16:	687b      	ldr	r3, [r7, #4]
 800ca18:	4618      	mov	r0, r3
 800ca1a:	3708      	adds	r7, #8
 800ca1c:	46bd      	mov	sp, r7
 800ca1e:	bd80      	pop	{r7, pc}

0800ca20 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1EOSC_>:
      _Move_ctor_base(_Move_ctor_base&& __rhs)
 800ca20:	b580      	push	{r7, lr}
 800ca22:	b082      	sub	sp, #8
 800ca24:	af00      	add	r7, sp, #0
 800ca26:	6078      	str	r0, [r7, #4]
 800ca28:	6039      	str	r1, [r7, #0]
      {
 800ca2a:	687b      	ldr	r3, [r7, #4]
 800ca2c:	4618      	mov	r0, r3
 800ca2e:	f7ff ffea 	bl	800ca06 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEEv>
	__variant_construct<_Types...>(*this, std::move(__rhs));
 800ca32:	6838      	ldr	r0, [r7, #0]
 800ca34:	f000 f8ee 	bl	800cc14 <_ZSt4moveIRNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEONSt16remove_referenceIT_E4typeEOSG_>
 800ca38:	4603      	mov	r3, r0
 800ca3a:	4619      	mov	r1, r3
 800ca3c:	6878      	ldr	r0, [r7, #4]
 800ca3e:	f000 fc43 	bl	800d2c8 <_ZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Move_ctor_baseILb0EJifbS7_SB_EEESD_EEvOT0_OT1_>
      }
 800ca42:	687b      	ldr	r3, [r7, #4]
 800ca44:	4618      	mov	r0, r3
 800ca46:	3708      	adds	r7, #8
 800ca48:	46bd      	mov	sp, r7
 800ca4a:	bd80      	pop	{r7, pc}

0800ca4c <_ZNSt6vectorIP19Multiply_expressionSaIS1_EEixEj>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
 800ca4c:	b480      	push	{r7}
 800ca4e:	b083      	sub	sp, #12
 800ca50:	af00      	add	r7, sp, #0
 800ca52:	6078      	str	r0, [r7, #4]
 800ca54:	6039      	str	r1, [r7, #0]
	return *(this->_M_impl._M_start + __n);
 800ca56:	687b      	ldr	r3, [r7, #4]
 800ca58:	681a      	ldr	r2, [r3, #0]
 800ca5a:	683b      	ldr	r3, [r7, #0]
 800ca5c:	009b      	lsls	r3, r3, #2
 800ca5e:	4413      	add	r3, r2
      }
 800ca60:	4618      	mov	r0, r3
 800ca62:	370c      	adds	r7, #12
 800ca64:	46bd      	mov	sp, r7
 800ca66:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ca6a:	4770      	bx	lr

0800ca6c <_ZNKSt6vectorI12sum_operatorSaIS0_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 800ca6c:	b480      	push	{r7}
 800ca6e:	b083      	sub	sp, #12
 800ca70:	af00      	add	r7, sp, #0
 800ca72:	6078      	str	r0, [r7, #4]
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 800ca74:	687b      	ldr	r3, [r7, #4]
 800ca76:	685a      	ldr	r2, [r3, #4]
 800ca78:	687b      	ldr	r3, [r7, #4]
 800ca7a:	681b      	ldr	r3, [r3, #0]
 800ca7c:	1ad3      	subs	r3, r2, r3
 800ca7e:	4618      	mov	r0, r3
 800ca80:	370c      	adds	r7, #12
 800ca82:	46bd      	mov	sp, r7
 800ca84:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ca88:	4770      	bx	lr

0800ca8a <_ZNSt6vectorI12sum_operatorSaIS0_EEixEj>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
 800ca8a:	b480      	push	{r7}
 800ca8c:	b083      	sub	sp, #12
 800ca8e:	af00      	add	r7, sp, #0
 800ca90:	6078      	str	r0, [r7, #4]
 800ca92:	6039      	str	r1, [r7, #0]
	return *(this->_M_impl._M_start + __n);
 800ca94:	687b      	ldr	r3, [r7, #4]
 800ca96:	681a      	ldr	r2, [r3, #0]
 800ca98:	683b      	ldr	r3, [r7, #0]
 800ca9a:	4413      	add	r3, r2
      }
 800ca9c:	4618      	mov	r0, r3
 800ca9e:	370c      	adds	r7, #12
 800caa0:	46bd      	mov	sp, r7
 800caa2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800caa6:	4770      	bx	lr

0800caa8 <_ZNSt6vectorIP16Power_expressionSaIS1_EEixEj>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
 800caa8:	b480      	push	{r7}
 800caaa:	b083      	sub	sp, #12
 800caac:	af00      	add	r7, sp, #0
 800caae:	6078      	str	r0, [r7, #4]
 800cab0:	6039      	str	r1, [r7, #0]
	return *(this->_M_impl._M_start + __n);
 800cab2:	687b      	ldr	r3, [r7, #4]
 800cab4:	681a      	ldr	r2, [r3, #0]
 800cab6:	683b      	ldr	r3, [r7, #0]
 800cab8:	009b      	lsls	r3, r3, #2
 800caba:	4413      	add	r3, r2
      }
 800cabc:	4618      	mov	r0, r3
 800cabe:	370c      	adds	r7, #12
 800cac0:	46bd      	mov	sp, r7
 800cac2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cac6:	4770      	bx	lr

0800cac8 <_ZNKSt6vectorI13mult_operatorSaIS0_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 800cac8:	b480      	push	{r7}
 800caca:	b083      	sub	sp, #12
 800cacc:	af00      	add	r7, sp, #0
 800cace:	6078      	str	r0, [r7, #4]
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 800cad0:	687b      	ldr	r3, [r7, #4]
 800cad2:	685a      	ldr	r2, [r3, #4]
 800cad4:	687b      	ldr	r3, [r7, #4]
 800cad6:	681b      	ldr	r3, [r3, #0]
 800cad8:	1ad3      	subs	r3, r2, r3
 800cada:	4618      	mov	r0, r3
 800cadc:	370c      	adds	r7, #12
 800cade:	46bd      	mov	sp, r7
 800cae0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cae4:	4770      	bx	lr

0800cae6 <_ZNSt6vectorI13mult_operatorSaIS0_EEixEj>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
 800cae6:	b480      	push	{r7}
 800cae8:	b083      	sub	sp, #12
 800caea:	af00      	add	r7, sp, #0
 800caec:	6078      	str	r0, [r7, #4]
 800caee:	6039      	str	r1, [r7, #0]
	return *(this->_M_impl._M_start + __n);
 800caf0:	687b      	ldr	r3, [r7, #4]
 800caf2:	681a      	ldr	r2, [r3, #0]
 800caf4:	683b      	ldr	r3, [r7, #0]
 800caf6:	4413      	add	r3, r2
      }
 800caf8:	4618      	mov	r0, r3
 800cafa:	370c      	adds	r7, #12
 800cafc:	46bd      	mov	sp, r7
 800cafe:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cb02:	4770      	bx	lr

0800cb04 <_ZSt3getIiJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 800cb04:	b580      	push	{r7, lr}
 800cb06:	b082      	sub	sp, #8
 800cb08:	af00      	add	r7, sp, #0
 800cb0a:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 800cb0c:	6878      	ldr	r0, [r7, #4]
 800cb0e:	f000 fbf9 	bl	800d304 <_ZSt3getILj1EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 800cb12:	4603      	mov	r3, r0
    }
 800cb14:	4618      	mov	r0, r3
 800cb16:	3708      	adds	r7, #8
 800cb18:	46bd      	mov	sp, r7
 800cb1a:	bd80      	pop	{r7, pc}

0800cb1c <_ZSt3getIfJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 800cb1c:	b580      	push	{r7, lr}
 800cb1e:	b082      	sub	sp, #8
 800cb20:	af00      	add	r7, sp, #0
 800cb22:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 800cb24:	6878      	ldr	r0, [r7, #4]
 800cb26:	f000 fc09 	bl	800d33c <_ZSt3getILj2EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 800cb2a:	4603      	mov	r3, r0
    }
 800cb2c:	4618      	mov	r0, r3
 800cb2e:	3708      	adds	r7, #8
 800cb30:	46bd      	mov	sp, r7
 800cb32:	bd80      	pop	{r7, pc}

0800cb34 <_ZSt3getINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJbifS5_P8VariableP13Function_callEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 800cb34:	b580      	push	{r7, lr}
 800cb36:	b082      	sub	sp, #8
 800cb38:	af00      	add	r7, sp, #0
 800cb3a:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 800cb3c:	6878      	ldr	r0, [r7, #4]
 800cb3e:	f000 fc19 	bl	800d374 <_ZSt3getILj3EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 800cb42:	4603      	mov	r3, r0
    }
 800cb44:	4618      	mov	r0, r3
 800cb46:	3708      	adds	r7, #8
 800cb48:	46bd      	mov	sp, r7
 800cb4a:	bd80      	pop	{r7, pc}

0800cb4c <_ZSt3getIbJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 800cb4c:	b580      	push	{r7, lr}
 800cb4e:	b082      	sub	sp, #8
 800cb50:	af00      	add	r7, sp, #0
 800cb52:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 800cb54:	6878      	ldr	r0, [r7, #4]
 800cb56:	f000 fc29 	bl	800d3ac <_ZSt3getILj0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 800cb5a:	4603      	mov	r3, r0
    }
 800cb5c:	4618      	mov	r0, r3
 800cb5e:	3708      	adds	r7, #8
 800cb60:	46bd      	mov	sp, r7
 800cb62:	bd80      	pop	{r7, pc}

0800cb64 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 800cb64:	b580      	push	{r7, lr}
 800cb66:	b082      	sub	sp, #8
 800cb68:	af00      	add	r7, sp, #0
 800cb6a:	6078      	str	r0, [r7, #4]
 800cb6c:	7039      	strb	r1, [r7, #0]
 800cb6e:	687b      	ldr	r3, [r7, #4]
 800cb70:	4611      	mov	r1, r2
 800cb72:	4618      	mov	r0, r3
 800cb74:	f000 fc54 	bl	800d420 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 800cb78:	687b      	ldr	r3, [r7, #4]
 800cb7a:	4618      	mov	r0, r3
 800cb7c:	3708      	adds	r7, #8
 800cb7e:	46bd      	mov	sp, r7
 800cb80:	bd80      	pop	{r7, pc}

0800cb82 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 800cb82:	b580      	push	{r7, lr}
 800cb84:	b082      	sub	sp, #8
 800cb86:	af00      	add	r7, sp, #0
 800cb88:	6078      	str	r0, [r7, #4]
 800cb8a:	7039      	strb	r1, [r7, #0]
 800cb8c:	687b      	ldr	r3, [r7, #4]
 800cb8e:	4611      	mov	r1, r2
 800cb90:	4618      	mov	r0, r3
 800cb92:	f7ff ffe7 	bl	800cb64 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 800cb96:	687b      	ldr	r3, [r7, #4]
 800cb98:	4618      	mov	r0, r3
 800cb9a:	3708      	adds	r7, #8
 800cb9c:	46bd      	mov	sp, r7
 800cb9e:	bd80      	pop	{r7, pc}

0800cba0 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 800cba0:	b580      	push	{r7, lr}
 800cba2:	b082      	sub	sp, #8
 800cba4:	af00      	add	r7, sp, #0
 800cba6:	6078      	str	r0, [r7, #4]
 800cba8:	7039      	strb	r1, [r7, #0]
 800cbaa:	687b      	ldr	r3, [r7, #4]
 800cbac:	4611      	mov	r1, r2
 800cbae:	4618      	mov	r0, r3
 800cbb0:	f7ff ffe7 	bl	800cb82 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 800cbb4:	687b      	ldr	r3, [r7, #4]
 800cbb6:	4618      	mov	r0, r3
 800cbb8:	3708      	adds	r7, #8
 800cbba:	46bd      	mov	sp, r7
 800cbbc:	bd80      	pop	{r7, pc}

0800cbbe <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 800cbbe:	b580      	push	{r7, lr}
 800cbc0:	b082      	sub	sp, #8
 800cbc2:	af00      	add	r7, sp, #0
 800cbc4:	6078      	str	r0, [r7, #4]
 800cbc6:	7039      	strb	r1, [r7, #0]
 800cbc8:	687b      	ldr	r3, [r7, #4]
 800cbca:	4611      	mov	r1, r2
 800cbcc:	4618      	mov	r0, r3
 800cbce:	f7ff ffe7 	bl	800cba0 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 800cbd2:	687b      	ldr	r3, [r7, #4]
 800cbd4:	4618      	mov	r0, r3
 800cbd6:	3708      	adds	r7, #8
 800cbd8:	46bd      	mov	sp, r7
 800cbda:	bd80      	pop	{r7, pc}

0800cbdc <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
	_Variant_base(in_place_index_t<_Np> __i, _Args&&... __args)
 800cbdc:	b580      	push	{r7, lr}
 800cbde:	b082      	sub	sp, #8
 800cbe0:	af00      	add	r7, sp, #0
 800cbe2:	6078      	str	r0, [r7, #4]
 800cbe4:	7039      	strb	r1, [r7, #0]
	: _Base(__i, std::forward<_Args>(__args)...)
 800cbe6:	687b      	ldr	r3, [r7, #4]
 800cbe8:	4611      	mov	r1, r2
 800cbea:	4618      	mov	r0, r3
 800cbec:	f7ff ffe7 	bl	800cbbe <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 800cbf0:	687b      	ldr	r3, [r7, #4]
 800cbf2:	4618      	mov	r0, r3
 800cbf4:	3708      	adds	r7, #8
 800cbf6:	46bd      	mov	sp, r7
 800cbf8:	bd80      	pop	{r7, pc}

0800cbfa <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1Ev>:
      _Variant_base()
 800cbfa:	b580      	push	{r7, lr}
 800cbfc:	b082      	sub	sp, #8
 800cbfe:	af00      	add	r7, sp, #0
 800cc00:	6078      	str	r0, [r7, #4]
      : _Variant_base(in_place_index<0>) { }
 800cc02:	4619      	mov	r1, r3
 800cc04:	6878      	ldr	r0, [r7, #4]
 800cc06:	f7ff ffe9 	bl	800cbdc <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 800cc0a:	687b      	ldr	r3, [r7, #4]
 800cc0c:	4618      	mov	r0, r3
 800cc0e:	3708      	adds	r7, #8
 800cc10:	46bd      	mov	sp, r7
 800cc12:	bd80      	pop	{r7, pc}

0800cc14 <_ZSt4moveIRNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEONSt16remove_referenceIT_E4typeEOSG_>:
    move(_Tp&& __t) noexcept
 800cc14:	b480      	push	{r7}
 800cc16:	b083      	sub	sp, #12
 800cc18:	af00      	add	r7, sp, #0
 800cc1a:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 800cc1c:	687b      	ldr	r3, [r7, #4]
 800cc1e:	4618      	mov	r0, r3
 800cc20:	370c      	adds	r7, #12
 800cc22:	46bd      	mov	sp, r7
 800cc24:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cc28:	4770      	bx	lr

0800cc2a <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEENSt8__detail9__variant15_Move_ctor_baseILb0EJifbS5_S9_EEEEDcOT0_>:
    __variant_cast(_Tp&& __rhs)
 800cc2a:	b480      	push	{r7}
 800cc2c:	b083      	sub	sp, #12
 800cc2e:	af00      	add	r7, sp, #0
 800cc30:	6078      	str	r0, [r7, #4]
        return static_cast<variant<_Types...>&&>(__rhs);
 800cc32:	687b      	ldr	r3, [r7, #4]
    }
 800cc34:	4618      	mov	r0, r3
 800cc36:	370c      	adds	r7, #12
 800cc38:	46bd      	mov	sp, r7
 800cc3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cc3e:	4770      	bx	lr

0800cc40 <_ZNSt8__detail9__variant5__getINS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 800cc40:	b580      	push	{r7, lr}
 800cc42:	b082      	sub	sp, #8
 800cc44:	af00      	add	r7, sp, #0
 800cc46:	7138      	strb	r0, [r7, #4]
 800cc48:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 800cc4a:	6838      	ldr	r0, [r7, #0]
 800cc4c:	f000 fc26 	bl	800d49c <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800cc50:	4603      	mov	r3, r0
 800cc52:	4618      	mov	r0, r3
 800cc54:	f000 fc2d 	bl	800d4b2 <_ZNOSt8__detail9__variant14_UninitializedIiLb1EE6_M_getEv>
 800cc58:	4603      	mov	r3, r0
 800cc5a:	4618      	mov	r0, r3
 800cc5c:	3708      	adds	r7, #8
 800cc5e:	46bd      	mov	sp, r7
 800cc60:	bd80      	pop	{r7, pc}

0800cc62 <_ZNSt8__detail9__variant5__getILj0ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800cc62:	b590      	push	{r4, r7, lr}
 800cc64:	b083      	sub	sp, #12
 800cc66:	af00      	add	r7, sp, #0
 800cc68:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800cc6a:	6878      	ldr	r0, [r7, #4]
 800cc6c:	f000 fc0b 	bl	800d486 <_ZSt7forwardISt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISC_E4typeE>
 800cc70:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800cc72:	4619      	mov	r1, r3
 800cc74:	4620      	mov	r0, r4
 800cc76:	f7ff ffe3 	bl	800cc40 <_ZNSt8__detail9__variant5__getINS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 800cc7a:	4603      	mov	r3, r0
    }
 800cc7c:	4618      	mov	r0, r3
 800cc7e:	370c      	adds	r7, #12
 800cc80:	46bd      	mov	sp, r7
 800cc82:	bd90      	pop	{r4, r7, pc}

0800cc84 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESR_EEDcSJ_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 800cc84:	b580      	push	{r7, lr}
 800cc86:	b082      	sub	sp, #8
 800cc88:	af00      	add	r7, sp, #0
 800cc8a:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 800cc8c:	6878      	ldr	r0, [r7, #4]
 800cc8e:	f000 fbfa 	bl	800d486 <_ZSt7forwardISt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISC_E4typeE>
 800cc92:	4603      	mov	r3, r0
 800cc94:	4618      	mov	r0, r3
 800cc96:	f7ff ffe4 	bl	800cc62 <_ZNSt8__detail9__variant5__getILj0ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 800cc9a:	4603      	mov	r3, r0
	}
 800cc9c:	4618      	mov	r0, r3
 800cc9e:	3708      	adds	r7, #8
 800cca0:	46bd      	mov	sp, r7
 800cca2:	bd80      	pop	{r7, pc}

0800cca4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESP_SS_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 800cca4:	b5b0      	push	{r4, r5, r7, lr}
 800cca6:	b082      	sub	sp, #8
 800cca8:	af00      	add	r7, sp, #0
 800ccaa:	6078      	str	r0, [r7, #4]
 800ccac:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 800ccae:	6878      	ldr	r0, [r7, #4]
 800ccb0:	f000 fbd3 	bl	800d45a <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800ccb4:	4604      	mov	r4, r0
 800ccb6:	6838      	ldr	r0, [r7, #0]
 800ccb8:	f000 fbda 	bl	800d470 <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800ccbc:	4603      	mov	r3, r0
 800ccbe:	4618      	mov	r0, r3
 800ccc0:	f7ff ffe0 	bl	800cc84 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESR_EEDcSJ_>
 800ccc4:	4603      	mov	r3, r0
 800ccc6:	4619      	mov	r1, r3
 800ccc8:	4620      	mov	r0, r4
 800ccca:	f000 fbff 	bl	800d4cc <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_JiEENSt15__invoke_resultISK_JDpT0_EE4typeESL_DpOSO_>
		std::forward<_Variants>(__vars))...);
 800ccce:	462b      	mov	r3, r5
      }
 800ccd0:	4618      	mov	r0, r3
 800ccd2:	3708      	adds	r7, #8
 800ccd4:	46bd      	mov	sp, r7
 800ccd6:	bdb0      	pop	{r4, r5, r7, pc}

0800ccd8 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESP_SS_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800ccd8:	b5b0      	push	{r4, r5, r7, lr}
 800ccda:	b082      	sub	sp, #8
 800ccdc:	af00      	add	r7, sp, #0
 800ccde:	6078      	str	r0, [r7, #4]
 800cce0:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 800cce2:	6878      	ldr	r0, [r7, #4]
 800cce4:	f000 fbb9 	bl	800d45a <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800cce8:	4604      	mov	r4, r0
 800ccea:	6838      	ldr	r0, [r7, #0]
 800ccec:	f000 fbc0 	bl	800d470 <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800ccf0:	4603      	mov	r3, r0
 800ccf2:	4619      	mov	r1, r3
 800ccf4:	4620      	mov	r0, r4
 800ccf6:	f7ff ffd5 	bl	800cca4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESP_SS_>
				   std::forward<_Variants>(__vars)...);
 800ccfa:	462b      	mov	r3, r5
      }
 800ccfc:	4618      	mov	r0, r3
 800ccfe:	3708      	adds	r7, #8
 800cd00:	46bd      	mov	sp, r7
 800cd02:	bdb0      	pop	{r4, r5, r7, pc}

0800cd04 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj0EEEE14__visit_invokeESP_SS_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800cd04:	b5b0      	push	{r4, r5, r7, lr}
 800cd06:	b082      	sub	sp, #8
 800cd08:	af00      	add	r7, sp, #0
 800cd0a:	6078      	str	r0, [r7, #4]
 800cd0c:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 800cd0e:	6878      	ldr	r0, [r7, #4]
 800cd10:	f000 fba3 	bl	800d45a <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800cd14:	4604      	mov	r4, r0
 800cd16:	6838      	ldr	r0, [r7, #0]
 800cd18:	f000 fbaa 	bl	800d470 <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800cd1c:	4603      	mov	r3, r0
 800cd1e:	4619      	mov	r1, r3
 800cd20:	4620      	mov	r0, r4
 800cd22:	f7ff ffd9 	bl	800ccd8 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESP_SS_>
				   std::forward<_Variants>(__vars)...);
 800cd26:	462b      	mov	r3, r5
      }
 800cd28:	4618      	mov	r0, r3
 800cd2a:	3708      	adds	r7, #8
 800cd2c:	46bd      	mov	sp, r7
 800cd2e:	bdb0      	pop	{r4, r5, r7, pc}

0800cd30 <_ZNSt8__detail9__variant5__getINS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 800cd30:	b580      	push	{r7, lr}
 800cd32:	b082      	sub	sp, #8
 800cd34:	af00      	add	r7, sp, #0
 800cd36:	7138      	strb	r0, [r7, #4]
 800cd38:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 800cd3a:	6838      	ldr	r0, [r7, #0]
 800cd3c:	f000 fbdd 	bl	800d4fa <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800cd40:	4603      	mov	r3, r0
 800cd42:	4618      	mov	r0, r3
 800cd44:	f000 fbe4 	bl	800d510 <_ZNOSt8__detail9__variant14_UninitializedIfLb1EE6_M_getEv>
 800cd48:	4603      	mov	r3, r0
 800cd4a:	4618      	mov	r0, r3
 800cd4c:	3708      	adds	r7, #8
 800cd4e:	46bd      	mov	sp, r7
 800cd50:	bd80      	pop	{r7, pc}

0800cd52 <_ZNSt8__detail9__variant5__getILj1ENS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800cd52:	b590      	push	{r4, r7, lr}
 800cd54:	b083      	sub	sp, #12
 800cd56:	af00      	add	r7, sp, #0
 800cd58:	7138      	strb	r0, [r7, #4]
 800cd5a:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800cd5c:	6838      	ldr	r0, [r7, #0]
 800cd5e:	f000 fb9d 	bl	800d49c <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800cd62:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800cd64:	4619      	mov	r1, r3
 800cd66:	4620      	mov	r0, r4
 800cd68:	f7ff ffe2 	bl	800cd30 <_ZNSt8__detail9__variant5__getINS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 800cd6c:	4603      	mov	r3, r0
    }
 800cd6e:	4618      	mov	r0, r3
 800cd70:	370c      	adds	r7, #12
 800cd72:	46bd      	mov	sp, r7
 800cd74:	bd90      	pop	{r4, r7, pc}

0800cd76 <_ZNSt8__detail9__variant5__getILj1ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800cd76:	b590      	push	{r4, r7, lr}
 800cd78:	b083      	sub	sp, #12
 800cd7a:	af00      	add	r7, sp, #0
 800cd7c:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800cd7e:	6878      	ldr	r0, [r7, #4]
 800cd80:	f000 fb81 	bl	800d486 <_ZSt7forwardISt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISC_E4typeE>
 800cd84:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800cd86:	4619      	mov	r1, r3
 800cd88:	4620      	mov	r0, r4
 800cd8a:	f7ff ffe2 	bl	800cd52 <_ZNSt8__detail9__variant5__getILj1ENS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800cd8e:	4603      	mov	r3, r0
    }
 800cd90:	4618      	mov	r0, r3
 800cd92:	370c      	adds	r7, #12
 800cd94:	46bd      	mov	sp, r7
 800cd96:	bd90      	pop	{r4, r7, pc}

0800cd98 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESR_EEDcSJ_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 800cd98:	b580      	push	{r7, lr}
 800cd9a:	b082      	sub	sp, #8
 800cd9c:	af00      	add	r7, sp, #0
 800cd9e:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 800cda0:	6878      	ldr	r0, [r7, #4]
 800cda2:	f000 fb70 	bl	800d486 <_ZSt7forwardISt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISC_E4typeE>
 800cda6:	4603      	mov	r3, r0
 800cda8:	4618      	mov	r0, r3
 800cdaa:	f7ff ffe4 	bl	800cd76 <_ZNSt8__detail9__variant5__getILj1ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 800cdae:	4603      	mov	r3, r0
	}
 800cdb0:	4618      	mov	r0, r3
 800cdb2:	3708      	adds	r7, #8
 800cdb4:	46bd      	mov	sp, r7
 800cdb6:	bd80      	pop	{r7, pc}

0800cdb8 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESP_SS_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 800cdb8:	b5b0      	push	{r4, r5, r7, lr}
 800cdba:	b082      	sub	sp, #8
 800cdbc:	af00      	add	r7, sp, #0
 800cdbe:	6078      	str	r0, [r7, #4]
 800cdc0:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 800cdc2:	6878      	ldr	r0, [r7, #4]
 800cdc4:	f000 fb49 	bl	800d45a <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800cdc8:	4604      	mov	r4, r0
 800cdca:	6838      	ldr	r0, [r7, #0]
 800cdcc:	f000 fb50 	bl	800d470 <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800cdd0:	4603      	mov	r3, r0
 800cdd2:	4618      	mov	r0, r3
 800cdd4:	f7ff ffe0 	bl	800cd98 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESR_EEDcSJ_>
 800cdd8:	4603      	mov	r3, r0
 800cdda:	4619      	mov	r1, r3
 800cddc:	4620      	mov	r0, r4
 800cdde:	f000 fba4 	bl	800d52a <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_JfEENSt15__invoke_resultISK_JDpT0_EE4typeESL_DpOSO_>
		std::forward<_Variants>(__vars))...);
 800cde2:	462b      	mov	r3, r5
      }
 800cde4:	4618      	mov	r0, r3
 800cde6:	3708      	adds	r7, #8
 800cde8:	46bd      	mov	sp, r7
 800cdea:	bdb0      	pop	{r4, r5, r7, pc}

0800cdec <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESP_SS_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800cdec:	b5b0      	push	{r4, r5, r7, lr}
 800cdee:	b082      	sub	sp, #8
 800cdf0:	af00      	add	r7, sp, #0
 800cdf2:	6078      	str	r0, [r7, #4]
 800cdf4:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 800cdf6:	6878      	ldr	r0, [r7, #4]
 800cdf8:	f000 fb2f 	bl	800d45a <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800cdfc:	4604      	mov	r4, r0
 800cdfe:	6838      	ldr	r0, [r7, #0]
 800ce00:	f000 fb36 	bl	800d470 <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800ce04:	4603      	mov	r3, r0
 800ce06:	4619      	mov	r1, r3
 800ce08:	4620      	mov	r0, r4
 800ce0a:	f7ff ffd5 	bl	800cdb8 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESP_SS_>
				   std::forward<_Variants>(__vars)...);
 800ce0e:	462b      	mov	r3, r5
      }
 800ce10:	4618      	mov	r0, r3
 800ce12:	3708      	adds	r7, #8
 800ce14:	46bd      	mov	sp, r7
 800ce16:	bdb0      	pop	{r4, r5, r7, pc}

0800ce18 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj1EEEE14__visit_invokeESP_SS_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800ce18:	b5b0      	push	{r4, r5, r7, lr}
 800ce1a:	b082      	sub	sp, #8
 800ce1c:	af00      	add	r7, sp, #0
 800ce1e:	6078      	str	r0, [r7, #4]
 800ce20:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 800ce22:	6878      	ldr	r0, [r7, #4]
 800ce24:	f000 fb19 	bl	800d45a <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800ce28:	4604      	mov	r4, r0
 800ce2a:	6838      	ldr	r0, [r7, #0]
 800ce2c:	f000 fb20 	bl	800d470 <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800ce30:	4603      	mov	r3, r0
 800ce32:	4619      	mov	r1, r3
 800ce34:	4620      	mov	r0, r4
 800ce36:	f7ff ffd9 	bl	800cdec <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESP_SS_>
				   std::forward<_Variants>(__vars)...);
 800ce3a:	462b      	mov	r3, r5
      }
 800ce3c:	4618      	mov	r0, r3
 800ce3e:	3708      	adds	r7, #8
 800ce40:	46bd      	mov	sp, r7
 800ce42:	bdb0      	pop	{r4, r5, r7, pc}

0800ce44 <_ZNSt8__detail9__variant5__getINS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 800ce44:	b580      	push	{r7, lr}
 800ce46:	b082      	sub	sp, #8
 800ce48:	af00      	add	r7, sp, #0
 800ce4a:	7138      	strb	r0, [r7, #4]
 800ce4c:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 800ce4e:	6838      	ldr	r0, [r7, #0]
 800ce50:	f000 fb82 	bl	800d558 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800ce54:	4603      	mov	r3, r0
 800ce56:	4618      	mov	r0, r3
 800ce58:	f000 fb89 	bl	800d56e <_ZNOSt8__detail9__variant14_UninitializedIbLb1EE6_M_getEv>
 800ce5c:	4603      	mov	r3, r0
 800ce5e:	4618      	mov	r0, r3
 800ce60:	3708      	adds	r7, #8
 800ce62:	46bd      	mov	sp, r7
 800ce64:	bd80      	pop	{r7, pc}

0800ce66 <_ZNSt8__detail9__variant5__getILj1ENS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800ce66:	b590      	push	{r4, r7, lr}
 800ce68:	b083      	sub	sp, #12
 800ce6a:	af00      	add	r7, sp, #0
 800ce6c:	7138      	strb	r0, [r7, #4]
 800ce6e:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800ce70:	6838      	ldr	r0, [r7, #0]
 800ce72:	f000 fb42 	bl	800d4fa <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800ce76:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800ce78:	4619      	mov	r1, r3
 800ce7a:	4620      	mov	r0, r4
 800ce7c:	f7ff ffe2 	bl	800ce44 <_ZNSt8__detail9__variant5__getINS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 800ce80:	4603      	mov	r3, r0
    }
 800ce82:	4618      	mov	r0, r3
 800ce84:	370c      	adds	r7, #12
 800ce86:	46bd      	mov	sp, r7
 800ce88:	bd90      	pop	{r4, r7, pc}

0800ce8a <_ZNSt8__detail9__variant5__getILj2ENS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800ce8a:	b590      	push	{r4, r7, lr}
 800ce8c:	b083      	sub	sp, #12
 800ce8e:	af00      	add	r7, sp, #0
 800ce90:	7138      	strb	r0, [r7, #4]
 800ce92:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800ce94:	6838      	ldr	r0, [r7, #0]
 800ce96:	f000 fb01 	bl	800d49c <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800ce9a:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800ce9c:	4619      	mov	r1, r3
 800ce9e:	4620      	mov	r0, r4
 800cea0:	f7ff ffe1 	bl	800ce66 <_ZNSt8__detail9__variant5__getILj1ENS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800cea4:	4603      	mov	r3, r0
    }
 800cea6:	4618      	mov	r0, r3
 800cea8:	370c      	adds	r7, #12
 800ceaa:	46bd      	mov	sp, r7
 800ceac:	bd90      	pop	{r4, r7, pc}

0800ceae <_ZNSt8__detail9__variant5__getILj2ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800ceae:	b590      	push	{r4, r7, lr}
 800ceb0:	b083      	sub	sp, #12
 800ceb2:	af00      	add	r7, sp, #0
 800ceb4:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800ceb6:	6878      	ldr	r0, [r7, #4]
 800ceb8:	f000 fae5 	bl	800d486 <_ZSt7forwardISt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISC_E4typeE>
 800cebc:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800cebe:	4619      	mov	r1, r3
 800cec0:	4620      	mov	r0, r4
 800cec2:	f7ff ffe2 	bl	800ce8a <_ZNSt8__detail9__variant5__getILj2ENS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800cec6:	4603      	mov	r3, r0
    }
 800cec8:	4618      	mov	r0, r3
 800ceca:	370c      	adds	r7, #12
 800cecc:	46bd      	mov	sp, r7
 800cece:	bd90      	pop	{r4, r7, pc}

0800ced0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESR_EEDcSJ_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 800ced0:	b580      	push	{r7, lr}
 800ced2:	b082      	sub	sp, #8
 800ced4:	af00      	add	r7, sp, #0
 800ced6:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 800ced8:	6878      	ldr	r0, [r7, #4]
 800ceda:	f000 fad4 	bl	800d486 <_ZSt7forwardISt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISC_E4typeE>
 800cede:	4603      	mov	r3, r0
 800cee0:	4618      	mov	r0, r3
 800cee2:	f7ff ffe4 	bl	800ceae <_ZNSt8__detail9__variant5__getILj2ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 800cee6:	4603      	mov	r3, r0
	}
 800cee8:	4618      	mov	r0, r3
 800ceea:	3708      	adds	r7, #8
 800ceec:	46bd      	mov	sp, r7
 800ceee:	bd80      	pop	{r7, pc}

0800cef0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESP_SS_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 800cef0:	b5b0      	push	{r4, r5, r7, lr}
 800cef2:	b082      	sub	sp, #8
 800cef4:	af00      	add	r7, sp, #0
 800cef6:	6078      	str	r0, [r7, #4]
 800cef8:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 800cefa:	6878      	ldr	r0, [r7, #4]
 800cefc:	f000 faad 	bl	800d45a <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800cf00:	4604      	mov	r4, r0
 800cf02:	6838      	ldr	r0, [r7, #0]
 800cf04:	f000 fab4 	bl	800d470 <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800cf08:	4603      	mov	r3, r0
 800cf0a:	4618      	mov	r0, r3
 800cf0c:	f7ff ffe0 	bl	800ced0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESR_EEDcSJ_>
 800cf10:	4603      	mov	r3, r0
 800cf12:	4619      	mov	r1, r3
 800cf14:	4620      	mov	r0, r4
 800cf16:	f000 fb37 	bl	800d588 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_JbEENSt15__invoke_resultISK_JDpT0_EE4typeESL_DpOSO_>
		std::forward<_Variants>(__vars))...);
 800cf1a:	462b      	mov	r3, r5
      }
 800cf1c:	4618      	mov	r0, r3
 800cf1e:	3708      	adds	r7, #8
 800cf20:	46bd      	mov	sp, r7
 800cf22:	bdb0      	pop	{r4, r5, r7, pc}

0800cf24 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESP_SS_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800cf24:	b5b0      	push	{r4, r5, r7, lr}
 800cf26:	b082      	sub	sp, #8
 800cf28:	af00      	add	r7, sp, #0
 800cf2a:	6078      	str	r0, [r7, #4]
 800cf2c:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 800cf2e:	6878      	ldr	r0, [r7, #4]
 800cf30:	f000 fa93 	bl	800d45a <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800cf34:	4604      	mov	r4, r0
 800cf36:	6838      	ldr	r0, [r7, #0]
 800cf38:	f000 fa9a 	bl	800d470 <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800cf3c:	4603      	mov	r3, r0
 800cf3e:	4619      	mov	r1, r3
 800cf40:	4620      	mov	r0, r4
 800cf42:	f7ff ffd5 	bl	800cef0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESP_SS_>
				   std::forward<_Variants>(__vars)...);
 800cf46:	462b      	mov	r3, r5
      }
 800cf48:	4618      	mov	r0, r3
 800cf4a:	3708      	adds	r7, #8
 800cf4c:	46bd      	mov	sp, r7
 800cf4e:	bdb0      	pop	{r4, r5, r7, pc}

0800cf50 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj2EEEE14__visit_invokeESP_SS_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800cf50:	b5b0      	push	{r4, r5, r7, lr}
 800cf52:	b082      	sub	sp, #8
 800cf54:	af00      	add	r7, sp, #0
 800cf56:	6078      	str	r0, [r7, #4]
 800cf58:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 800cf5a:	6878      	ldr	r0, [r7, #4]
 800cf5c:	f000 fa7d 	bl	800d45a <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800cf60:	4604      	mov	r4, r0
 800cf62:	6838      	ldr	r0, [r7, #0]
 800cf64:	f000 fa84 	bl	800d470 <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800cf68:	4603      	mov	r3, r0
 800cf6a:	4619      	mov	r1, r3
 800cf6c:	4620      	mov	r0, r4
 800cf6e:	f7ff ffd9 	bl	800cf24 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESP_SS_>
				   std::forward<_Variants>(__vars)...);
 800cf72:	462b      	mov	r3, r5
      }
 800cf74:	4618      	mov	r0, r3
 800cf76:	3708      	adds	r7, #8
 800cf78:	46bd      	mov	sp, r7
 800cf7a:	bdb0      	pop	{r4, r5, r7, pc}

0800cf7c <_ZNSt8__detail9__variant5__getINS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 800cf7c:	b580      	push	{r7, lr}
 800cf7e:	b082      	sub	sp, #8
 800cf80:	af00      	add	r7, sp, #0
 800cf82:	7138      	strb	r0, [r7, #4]
 800cf84:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 800cf86:	6838      	ldr	r0, [r7, #0]
 800cf88:	f000 fb15 	bl	800d5b6 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800cf8c:	4603      	mov	r3, r0
 800cf8e:	4618      	mov	r0, r3
 800cf90:	f000 fb1c 	bl	800d5cc <_ZNOSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE6_M_getEv>
 800cf94:	4603      	mov	r3, r0
 800cf96:	4618      	mov	r0, r3
 800cf98:	3708      	adds	r7, #8
 800cf9a:	46bd      	mov	sp, r7
 800cf9c:	bd80      	pop	{r7, pc}

0800cf9e <_ZNSt8__detail9__variant5__getILj1ENS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800cf9e:	b590      	push	{r4, r7, lr}
 800cfa0:	b083      	sub	sp, #12
 800cfa2:	af00      	add	r7, sp, #0
 800cfa4:	7138      	strb	r0, [r7, #4]
 800cfa6:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800cfa8:	6838      	ldr	r0, [r7, #0]
 800cfaa:	f000 fad5 	bl	800d558 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800cfae:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800cfb0:	4619      	mov	r1, r3
 800cfb2:	4620      	mov	r0, r4
 800cfb4:	f7ff ffe2 	bl	800cf7c <_ZNSt8__detail9__variant5__getINS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 800cfb8:	4603      	mov	r3, r0
    }
 800cfba:	4618      	mov	r0, r3
 800cfbc:	370c      	adds	r7, #12
 800cfbe:	46bd      	mov	sp, r7
 800cfc0:	bd90      	pop	{r4, r7, pc}

0800cfc2 <_ZNSt8__detail9__variant5__getILj2ENS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800cfc2:	b590      	push	{r4, r7, lr}
 800cfc4:	b083      	sub	sp, #12
 800cfc6:	af00      	add	r7, sp, #0
 800cfc8:	7138      	strb	r0, [r7, #4]
 800cfca:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800cfcc:	6838      	ldr	r0, [r7, #0]
 800cfce:	f000 fa94 	bl	800d4fa <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800cfd2:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800cfd4:	4619      	mov	r1, r3
 800cfd6:	4620      	mov	r0, r4
 800cfd8:	f7ff ffe1 	bl	800cf9e <_ZNSt8__detail9__variant5__getILj1ENS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800cfdc:	4603      	mov	r3, r0
    }
 800cfde:	4618      	mov	r0, r3
 800cfe0:	370c      	adds	r7, #12
 800cfe2:	46bd      	mov	sp, r7
 800cfe4:	bd90      	pop	{r4, r7, pc}

0800cfe6 <_ZNSt8__detail9__variant5__getILj3ENS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800cfe6:	b590      	push	{r4, r7, lr}
 800cfe8:	b083      	sub	sp, #12
 800cfea:	af00      	add	r7, sp, #0
 800cfec:	7138      	strb	r0, [r7, #4]
 800cfee:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800cff0:	6838      	ldr	r0, [r7, #0]
 800cff2:	f000 fa53 	bl	800d49c <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800cff6:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800cff8:	4619      	mov	r1, r3
 800cffa:	4620      	mov	r0, r4
 800cffc:	f7ff ffe1 	bl	800cfc2 <_ZNSt8__detail9__variant5__getILj2ENS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800d000:	4603      	mov	r3, r0
    }
 800d002:	4618      	mov	r0, r3
 800d004:	370c      	adds	r7, #12
 800d006:	46bd      	mov	sp, r7
 800d008:	bd90      	pop	{r4, r7, pc}

0800d00a <_ZNSt8__detail9__variant5__getILj3ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800d00a:	b590      	push	{r4, r7, lr}
 800d00c:	b083      	sub	sp, #12
 800d00e:	af00      	add	r7, sp, #0
 800d010:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800d012:	6878      	ldr	r0, [r7, #4]
 800d014:	f000 fa37 	bl	800d486 <_ZSt7forwardISt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISC_E4typeE>
 800d018:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800d01a:	4619      	mov	r1, r3
 800d01c:	4620      	mov	r0, r4
 800d01e:	f7ff ffe2 	bl	800cfe6 <_ZNSt8__detail9__variant5__getILj3ENS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800d022:	4603      	mov	r3, r0
    }
 800d024:	4618      	mov	r0, r3
 800d026:	370c      	adds	r7, #12
 800d028:	46bd      	mov	sp, r7
 800d02a:	bd90      	pop	{r4, r7, pc}

0800d02c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESR_EEDcSJ_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 800d02c:	b580      	push	{r7, lr}
 800d02e:	b082      	sub	sp, #8
 800d030:	af00      	add	r7, sp, #0
 800d032:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 800d034:	6878      	ldr	r0, [r7, #4]
 800d036:	f000 fa26 	bl	800d486 <_ZSt7forwardISt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISC_E4typeE>
 800d03a:	4603      	mov	r3, r0
 800d03c:	4618      	mov	r0, r3
 800d03e:	f7ff ffe4 	bl	800d00a <_ZNSt8__detail9__variant5__getILj3ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 800d042:	4603      	mov	r3, r0
	}
 800d044:	4618      	mov	r0, r3
 800d046:	3708      	adds	r7, #8
 800d048:	46bd      	mov	sp, r7
 800d04a:	bd80      	pop	{r7, pc}

0800d04c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESP_SS_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 800d04c:	b5b0      	push	{r4, r5, r7, lr}
 800d04e:	b082      	sub	sp, #8
 800d050:	af00      	add	r7, sp, #0
 800d052:	6078      	str	r0, [r7, #4]
 800d054:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 800d056:	6878      	ldr	r0, [r7, #4]
 800d058:	f000 f9ff 	bl	800d45a <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800d05c:	4604      	mov	r4, r0
 800d05e:	6838      	ldr	r0, [r7, #0]
 800d060:	f000 fa06 	bl	800d470 <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800d064:	4603      	mov	r3, r0
 800d066:	4618      	mov	r0, r3
 800d068:	f7ff ffe0 	bl	800d02c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESR_EEDcSJ_>
 800d06c:	4603      	mov	r3, r0
 800d06e:	4619      	mov	r1, r3
 800d070:	4620      	mov	r0, r4
 800d072:	f000 fabc 	bl	800d5ee <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_JS8_EENSt15__invoke_resultISK_JDpT0_EE4typeESL_DpOSO_>
		std::forward<_Variants>(__vars))...);
 800d076:	462b      	mov	r3, r5
      }
 800d078:	4618      	mov	r0, r3
 800d07a:	3708      	adds	r7, #8
 800d07c:	46bd      	mov	sp, r7
 800d07e:	bdb0      	pop	{r4, r5, r7, pc}

0800d080 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESP_SS_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800d080:	b5b0      	push	{r4, r5, r7, lr}
 800d082:	b082      	sub	sp, #8
 800d084:	af00      	add	r7, sp, #0
 800d086:	6078      	str	r0, [r7, #4]
 800d088:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 800d08a:	6878      	ldr	r0, [r7, #4]
 800d08c:	f000 f9e5 	bl	800d45a <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800d090:	4604      	mov	r4, r0
 800d092:	6838      	ldr	r0, [r7, #0]
 800d094:	f000 f9ec 	bl	800d470 <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800d098:	4603      	mov	r3, r0
 800d09a:	4619      	mov	r1, r3
 800d09c:	4620      	mov	r0, r4
 800d09e:	f7ff ffd5 	bl	800d04c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESP_SS_>
				   std::forward<_Variants>(__vars)...);
 800d0a2:	462b      	mov	r3, r5
      }
 800d0a4:	4618      	mov	r0, r3
 800d0a6:	3708      	adds	r7, #8
 800d0a8:	46bd      	mov	sp, r7
 800d0aa:	bdb0      	pop	{r4, r5, r7, pc}

0800d0ac <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj3EEEE14__visit_invokeESP_SS_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800d0ac:	b5b0      	push	{r4, r5, r7, lr}
 800d0ae:	b082      	sub	sp, #8
 800d0b0:	af00      	add	r7, sp, #0
 800d0b2:	6078      	str	r0, [r7, #4]
 800d0b4:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 800d0b6:	6878      	ldr	r0, [r7, #4]
 800d0b8:	f000 f9cf 	bl	800d45a <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800d0bc:	4604      	mov	r4, r0
 800d0be:	6838      	ldr	r0, [r7, #0]
 800d0c0:	f000 f9d6 	bl	800d470 <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800d0c4:	4603      	mov	r3, r0
 800d0c6:	4619      	mov	r1, r3
 800d0c8:	4620      	mov	r0, r4
 800d0ca:	f7ff ffd9 	bl	800d080 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESP_SS_>
				   std::forward<_Variants>(__vars)...);
 800d0ce:	462b      	mov	r3, r5
      }
 800d0d0:	4618      	mov	r0, r3
 800d0d2:	3708      	adds	r7, #8
 800d0d4:	46bd      	mov	sp, r7
 800d0d6:	bdb0      	pop	{r4, r5, r7, pc}

0800d0d8 <_ZNSt8__detail9__variant5__getINS0_15_Variadic_unionIJSt6vectorI6SymbolSaIS4_EEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 800d0d8:	b580      	push	{r7, lr}
 800d0da:	b082      	sub	sp, #8
 800d0dc:	af00      	add	r7, sp, #0
 800d0de:	7138      	strb	r0, [r7, #4]
 800d0e0:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 800d0e2:	6838      	ldr	r0, [r7, #0]
 800d0e4:	f000 fa9a 	bl	800d61c <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJSt6vectorI6SymbolSaIS4_EEEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 800d0e8:	4603      	mov	r3, r0
 800d0ea:	4618      	mov	r0, r3
 800d0ec:	f000 faa1 	bl	800d632 <_ZNOSt8__detail9__variant14_UninitializedISt6vectorI6SymbolSaIS3_EELb0EE6_M_getEv>
 800d0f0:	4603      	mov	r3, r0
 800d0f2:	4618      	mov	r0, r3
 800d0f4:	3708      	adds	r7, #8
 800d0f6:	46bd      	mov	sp, r7
 800d0f8:	bd80      	pop	{r7, pc}

0800d0fa <_ZNSt8__detail9__variant5__getILj1ENS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800d0fa:	b590      	push	{r4, r7, lr}
 800d0fc:	b083      	sub	sp, #12
 800d0fe:	af00      	add	r7, sp, #0
 800d100:	7138      	strb	r0, [r7, #4]
 800d102:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800d104:	6838      	ldr	r0, [r7, #0]
 800d106:	f000 fa56 	bl	800d5b6 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800d10a:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800d10c:	4619      	mov	r1, r3
 800d10e:	4620      	mov	r0, r4
 800d110:	f7ff ffe2 	bl	800d0d8 <_ZNSt8__detail9__variant5__getINS0_15_Variadic_unionIJSt6vectorI6SymbolSaIS4_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 800d114:	4603      	mov	r3, r0
    }
 800d116:	4618      	mov	r0, r3
 800d118:	370c      	adds	r7, #12
 800d11a:	46bd      	mov	sp, r7
 800d11c:	bd90      	pop	{r4, r7, pc}

0800d11e <_ZNSt8__detail9__variant5__getILj2ENS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800d11e:	b590      	push	{r4, r7, lr}
 800d120:	b083      	sub	sp, #12
 800d122:	af00      	add	r7, sp, #0
 800d124:	7138      	strb	r0, [r7, #4]
 800d126:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800d128:	6838      	ldr	r0, [r7, #0]
 800d12a:	f000 fa15 	bl	800d558 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800d12e:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800d130:	4619      	mov	r1, r3
 800d132:	4620      	mov	r0, r4
 800d134:	f7ff ffe1 	bl	800d0fa <_ZNSt8__detail9__variant5__getILj1ENS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800d138:	4603      	mov	r3, r0
    }
 800d13a:	4618      	mov	r0, r3
 800d13c:	370c      	adds	r7, #12
 800d13e:	46bd      	mov	sp, r7
 800d140:	bd90      	pop	{r4, r7, pc}

0800d142 <_ZNSt8__detail9__variant5__getILj3ENS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800d142:	b590      	push	{r4, r7, lr}
 800d144:	b083      	sub	sp, #12
 800d146:	af00      	add	r7, sp, #0
 800d148:	7138      	strb	r0, [r7, #4]
 800d14a:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800d14c:	6838      	ldr	r0, [r7, #0]
 800d14e:	f000 f9d4 	bl	800d4fa <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800d152:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800d154:	4619      	mov	r1, r3
 800d156:	4620      	mov	r0, r4
 800d158:	f7ff ffe1 	bl	800d11e <_ZNSt8__detail9__variant5__getILj2ENS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800d15c:	4603      	mov	r3, r0
    }
 800d15e:	4618      	mov	r0, r3
 800d160:	370c      	adds	r7, #12
 800d162:	46bd      	mov	sp, r7
 800d164:	bd90      	pop	{r4, r7, pc}

0800d166 <_ZNSt8__detail9__variant5__getILj4ENS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800d166:	b590      	push	{r4, r7, lr}
 800d168:	b083      	sub	sp, #12
 800d16a:	af00      	add	r7, sp, #0
 800d16c:	7138      	strb	r0, [r7, #4]
 800d16e:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800d170:	6838      	ldr	r0, [r7, #0]
 800d172:	f000 f993 	bl	800d49c <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800d176:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800d178:	4619      	mov	r1, r3
 800d17a:	4620      	mov	r0, r4
 800d17c:	f7ff ffe1 	bl	800d142 <_ZNSt8__detail9__variant5__getILj3ENS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800d180:	4603      	mov	r3, r0
    }
 800d182:	4618      	mov	r0, r3
 800d184:	370c      	adds	r7, #12
 800d186:	46bd      	mov	sp, r7
 800d188:	bd90      	pop	{r4, r7, pc}

0800d18a <_ZNSt8__detail9__variant5__getILj4ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800d18a:	b590      	push	{r4, r7, lr}
 800d18c:	b083      	sub	sp, #12
 800d18e:	af00      	add	r7, sp, #0
 800d190:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800d192:	6878      	ldr	r0, [r7, #4]
 800d194:	f000 f977 	bl	800d486 <_ZSt7forwardISt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISC_E4typeE>
 800d198:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800d19a:	4619      	mov	r1, r3
 800d19c:	4620      	mov	r0, r4
 800d19e:	f7ff ffe2 	bl	800d166 <_ZNSt8__detail9__variant5__getILj4ENS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800d1a2:	4603      	mov	r3, r0
    }
 800d1a4:	4618      	mov	r0, r3
 800d1a6:	370c      	adds	r7, #12
 800d1a8:	46bd      	mov	sp, r7
 800d1aa:	bd90      	pop	{r4, r7, pc}

0800d1ac <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj4EEEE28__element_by_index_or_cookieILj4ESR_EEDcSJ_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 800d1ac:	b580      	push	{r7, lr}
 800d1ae:	b082      	sub	sp, #8
 800d1b0:	af00      	add	r7, sp, #0
 800d1b2:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 800d1b4:	6878      	ldr	r0, [r7, #4]
 800d1b6:	f000 f966 	bl	800d486 <_ZSt7forwardISt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISC_E4typeE>
 800d1ba:	4603      	mov	r3, r0
 800d1bc:	4618      	mov	r0, r3
 800d1be:	f7ff ffe4 	bl	800d18a <_ZNSt8__detail9__variant5__getILj4ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 800d1c2:	4603      	mov	r3, r0
	}
 800d1c4:	4618      	mov	r0, r3
 800d1c6:	3708      	adds	r7, #8
 800d1c8:	46bd      	mov	sp, r7
 800d1ca:	bd80      	pop	{r7, pc}

0800d1cc <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj4EEEE19__visit_invoke_implESP_SS_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 800d1cc:	b5b0      	push	{r4, r5, r7, lr}
 800d1ce:	b082      	sub	sp, #8
 800d1d0:	af00      	add	r7, sp, #0
 800d1d2:	6078      	str	r0, [r7, #4]
 800d1d4:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 800d1d6:	6878      	ldr	r0, [r7, #4]
 800d1d8:	f000 f93f 	bl	800d45a <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800d1dc:	4604      	mov	r4, r0
 800d1de:	6838      	ldr	r0, [r7, #0]
 800d1e0:	f000 f946 	bl	800d470 <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800d1e4:	4603      	mov	r3, r0
 800d1e6:	4618      	mov	r0, r3
 800d1e8:	f7ff ffe0 	bl	800d1ac <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj4EEEE28__element_by_index_or_cookieILj4ESR_EEDcSJ_>
 800d1ec:	4603      	mov	r3, r0
 800d1ee:	4619      	mov	r1, r3
 800d1f0:	4620      	mov	r0, r4
 800d1f2:	f000 fa2f 	bl	800d654 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_JSC_EENSt15__invoke_resultISK_JDpT0_EE4typeESL_DpOSO_>
		std::forward<_Variants>(__vars))...);
 800d1f6:	462b      	mov	r3, r5
      }
 800d1f8:	4618      	mov	r0, r3
 800d1fa:	3708      	adds	r7, #8
 800d1fc:	46bd      	mov	sp, r7
 800d1fe:	bdb0      	pop	{r4, r5, r7, pc}

0800d200 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj4EEEE17__do_visit_invokeESP_SS_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800d200:	b5b0      	push	{r4, r5, r7, lr}
 800d202:	b082      	sub	sp, #8
 800d204:	af00      	add	r7, sp, #0
 800d206:	6078      	str	r0, [r7, #4]
 800d208:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 800d20a:	6878      	ldr	r0, [r7, #4]
 800d20c:	f000 f925 	bl	800d45a <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800d210:	4604      	mov	r4, r0
 800d212:	6838      	ldr	r0, [r7, #0]
 800d214:	f000 f92c 	bl	800d470 <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800d218:	4603      	mov	r3, r0
 800d21a:	4619      	mov	r1, r3
 800d21c:	4620      	mov	r0, r4
 800d21e:	f7ff ffd5 	bl	800d1cc <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj4EEEE19__visit_invoke_implESP_SS_>
				   std::forward<_Variants>(__vars)...);
 800d222:	462b      	mov	r3, r5
      }
 800d224:	4618      	mov	r0, r3
 800d226:	3708      	adds	r7, #8
 800d228:	46bd      	mov	sp, r7
 800d22a:	bdb0      	pop	{r4, r5, r7, pc}

0800d22c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj4EEEE14__visit_invokeESP_SS_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800d22c:	b5b0      	push	{r4, r5, r7, lr}
 800d22e:	b082      	sub	sp, #8
 800d230:	af00      	add	r7, sp, #0
 800d232:	6078      	str	r0, [r7, #4]
 800d234:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 800d236:	6878      	ldr	r0, [r7, #4]
 800d238:	f000 f90f 	bl	800d45a <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800d23c:	4604      	mov	r4, r0
 800d23e:	6838      	ldr	r0, [r7, #0]
 800d240:	f000 f916 	bl	800d470 <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800d244:	4603      	mov	r3, r0
 800d246:	4619      	mov	r1, r3
 800d248:	4620      	mov	r0, r4
 800d24a:	f7ff ffd9 	bl	800d200 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj4EEEE17__do_visit_invokeESP_SS_>
				   std::forward<_Variants>(__vars)...);
 800d24e:	462b      	mov	r3, r5
      }
 800d250:	4618      	mov	r0, r3
 800d252:	3708      	adds	r7, #8
 800d254:	46bd      	mov	sp, r7
 800d256:	bdb0      	pop	{r4, r5, r7, pc}

0800d258 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS0_15_Move_ctor_baseILb0EJifbS9_SD_EEESF_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbS9_SD_EEEJLj5EEE9_M_accessIJEEERKST_jDpT_>:
	_M_access(size_t __first_index, _Args... __rest_indices) const
 800d258:	b580      	push	{r7, lr}
 800d25a:	b082      	sub	sp, #8
 800d25c:	af00      	add	r7, sp, #0
 800d25e:	6078      	str	r0, [r7, #4]
 800d260:	6039      	str	r1, [r7, #0]
	    ._M_access(__rest_indices...);
 800d262:	683b      	ldr	r3, [r7, #0]
 800d264:	009b      	lsls	r3, r3, #2
 800d266:	687a      	ldr	r2, [r7, #4]
 800d268:	4413      	add	r3, r2
 800d26a:	4618      	mov	r0, r3
 800d26c:	f000 fa09 	bl	800d682 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS0_15_Move_ctor_baseILb0EJifbS9_SD_EEESF_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbS9_SD_EEEJEE9_M_accessEv>
 800d270:	4603      	mov	r3, r0
	}
 800d272:	4618      	mov	r0, r3
 800d274:	3708      	adds	r7, #8
 800d276:	46bd      	mov	sp, r7
 800d278:	bd80      	pop	{r7, pc}
	...

0800d27c <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_JSt7variantIJifbS8_SC_EEEEDcSJ_DpOT2_>:
    __do_visit(_Visitor&& __visitor, _Variants&&... __variants)
 800d27c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d27e:	b085      	sub	sp, #20
 800d280:	af00      	add	r7, sp, #0
 800d282:	6078      	str	r0, [r7, #4]
 800d284:	6039      	str	r1, [r7, #0]
      constexpr auto& __vtable = __detail::__variant::__gen_vtable<
 800d286:	4b0f      	ldr	r3, [pc, #60]	; (800d2c4 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_JSt7variantIJifbS8_SC_EEEEDcSJ_DpOT2_+0x48>)
 800d288:	60fb      	str	r3, [r7, #12]
      auto __func_ptr = __vtable._M_access(__variants.index()...);
 800d28a:	6838      	ldr	r0, [r7, #0]
 800d28c:	f7f4 f946 	bl	800151c <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv>
 800d290:	4603      	mov	r3, r0
 800d292:	4619      	mov	r1, r3
 800d294:	68f8      	ldr	r0, [r7, #12]
 800d296:	f7ff ffdf 	bl	800d258 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS0_15_Move_ctor_baseILb0EJifbS9_SD_EEESF_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbS9_SD_EEEJLj5EEE9_M_accessIJEEERKST_jDpT_>
 800d29a:	4603      	mov	r3, r0
 800d29c:	681b      	ldr	r3, [r3, #0]
 800d29e:	60bb      	str	r3, [r7, #8]
      return (*__func_ptr)(std::forward<_Visitor>(__visitor),
 800d2a0:	68bc      	ldr	r4, [r7, #8]
 800d2a2:	6878      	ldr	r0, [r7, #4]
 800d2a4:	f000 f9f8 	bl	800d698 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800d2a8:	4605      	mov	r5, r0
 800d2aa:	6838      	ldr	r0, [r7, #0]
 800d2ac:	f000 f8eb 	bl	800d486 <_ZSt7forwardISt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISC_E4typeE>
 800d2b0:	4603      	mov	r3, r0
 800d2b2:	4619      	mov	r1, r3
 800d2b4:	4628      	mov	r0, r5
 800d2b6:	47a0      	blx	r4
			   std::forward<_Variants>(__variants)...);
 800d2b8:	4633      	mov	r3, r6
    }
 800d2ba:	4618      	mov	r0, r3
 800d2bc:	3714      	adds	r7, #20
 800d2be:	46bd      	mov	sp, r7
 800d2c0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d2c2:	bf00      	nop
 800d2c4:	08028238 	.word	0x08028238

0800d2c8 <_ZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Move_ctor_baseILb0EJifbS7_SB_EEESD_EEvOT0_OT1_>:
    void __variant_construct(_Tp&& __lhs, _Up&& __rhs)
 800d2c8:	b580      	push	{r7, lr}
 800d2ca:	b084      	sub	sp, #16
 800d2cc:	af00      	add	r7, sp, #0
 800d2ce:	6078      	str	r0, [r7, #4]
 800d2d0:	6039      	str	r1, [r7, #0]
      __lhs._M_index = __rhs._M_index;
 800d2d2:	683b      	ldr	r3, [r7, #0]
 800d2d4:	7e1a      	ldrb	r2, [r3, #24]
 800d2d6:	687b      	ldr	r3, [r7, #4]
 800d2d8:	761a      	strb	r2, [r3, #24]
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 800d2da:	687b      	ldr	r3, [r7, #4]
 800d2dc:	60fb      	str	r3, [r7, #12]
 800d2de:	6838      	ldr	r0, [r7, #0]
 800d2e0:	f000 f8b0 	bl	800d444 <_ZSt7forwardINSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800d2e4:	4603      	mov	r3, r0
 800d2e6:	4618      	mov	r0, r3
 800d2e8:	f7ff fc9f 	bl	800cc2a <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEENSt8__detail9__variant15_Move_ctor_baseILb0EJifbS5_S9_EEEEDcOT0_>
 800d2ec:	4602      	mov	r2, r0
 800d2ee:	f107 030c 	add.w	r3, r7, #12
 800d2f2:	4611      	mov	r1, r2
 800d2f4:	4618      	mov	r0, r3
 800d2f6:	f7ff ffc1 	bl	800d27c <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_JSt7variantIJifbS8_SC_EEEEDcSJ_DpOT2_>
    }
 800d2fa:	bf00      	nop
 800d2fc:	3710      	adds	r7, #16
 800d2fe:	46bd      	mov	sp, r7
 800d300:	bd80      	pop	{r7, pc}
	...

0800d304 <_ZSt3getILj1EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
    get(variant<_Types...>& __v)
 800d304:	b580      	push	{r7, lr}
 800d306:	b082      	sub	sp, #8
 800d308:	af00      	add	r7, sp, #0
 800d30a:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 800d30c:	6878      	ldr	r0, [r7, #4]
 800d30e:	f7fc fdce 	bl	8009eae <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 800d312:	4603      	mov	r3, r0
 800d314:	2b01      	cmp	r3, #1
 800d316:	bf14      	ite	ne
 800d318:	2301      	movne	r3, #1
 800d31a:	2300      	moveq	r3, #0
 800d31c:	b2db      	uxtb	r3, r3
 800d31e:	2b00      	cmp	r3, #0
 800d320:	d002      	beq.n	800d328 <_ZSt3getILj1EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 800d322:	4805      	ldr	r0, [pc, #20]	; (800d338 <_ZSt3getILj1EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 800d324:	f7f3 fea5 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 800d328:	6878      	ldr	r0, [r7, #4]
 800d32a:	f7fd fc7d 	bl	800ac28 <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 800d32e:	4603      	mov	r3, r0
    }
 800d330:	4618      	mov	r0, r3
 800d332:	3708      	adds	r7, #8
 800d334:	46bd      	mov	sp, r7
 800d336:	bd80      	pop	{r7, pc}
 800d338:	080276ac 	.word	0x080276ac

0800d33c <_ZSt3getILj2EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
    get(variant<_Types...>& __v)
 800d33c:	b580      	push	{r7, lr}
 800d33e:	b082      	sub	sp, #8
 800d340:	af00      	add	r7, sp, #0
 800d342:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 800d344:	6878      	ldr	r0, [r7, #4]
 800d346:	f7fc fdb2 	bl	8009eae <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 800d34a:	4603      	mov	r3, r0
 800d34c:	2b02      	cmp	r3, #2
 800d34e:	bf14      	ite	ne
 800d350:	2301      	movne	r3, #1
 800d352:	2300      	moveq	r3, #0
 800d354:	b2db      	uxtb	r3, r3
 800d356:	2b00      	cmp	r3, #0
 800d358:	d002      	beq.n	800d360 <_ZSt3getILj2EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 800d35a:	4805      	ldr	r0, [pc, #20]	; (800d370 <_ZSt3getILj2EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 800d35c:	f7f3 fe89 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 800d360:	6878      	ldr	r0, [r7, #4]
 800d362:	f7fd fcfd 	bl	800ad60 <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 800d366:	4603      	mov	r3, r0
    }
 800d368:	4618      	mov	r0, r3
 800d36a:	3708      	adds	r7, #8
 800d36c:	46bd      	mov	sp, r7
 800d36e:	bd80      	pop	{r7, pc}
 800d370:	080276ac 	.word	0x080276ac

0800d374 <_ZSt3getILj3EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
    get(variant<_Types...>& __v)
 800d374:	b580      	push	{r7, lr}
 800d376:	b082      	sub	sp, #8
 800d378:	af00      	add	r7, sp, #0
 800d37a:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 800d37c:	6878      	ldr	r0, [r7, #4]
 800d37e:	f7fc fd96 	bl	8009eae <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 800d382:	4603      	mov	r3, r0
 800d384:	2b03      	cmp	r3, #3
 800d386:	bf14      	ite	ne
 800d388:	2301      	movne	r3, #1
 800d38a:	2300      	moveq	r3, #0
 800d38c:	b2db      	uxtb	r3, r3
 800d38e:	2b00      	cmp	r3, #0
 800d390:	d002      	beq.n	800d398 <_ZSt3getILj3EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 800d392:	4805      	ldr	r0, [pc, #20]	; (800d3a8 <_ZSt3getILj3EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 800d394:	f7f3 fe6d 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 800d398:	6878      	ldr	r0, [r7, #4]
 800d39a:	f7fd fd8f 	bl	800aebc <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 800d39e:	4603      	mov	r3, r0
    }
 800d3a0:	4618      	mov	r0, r3
 800d3a2:	3708      	adds	r7, #8
 800d3a4:	46bd      	mov	sp, r7
 800d3a6:	bd80      	pop	{r7, pc}
 800d3a8:	080276ac 	.word	0x080276ac

0800d3ac <_ZSt3getILj0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
    get(variant<_Types...>& __v)
 800d3ac:	b580      	push	{r7, lr}
 800d3ae:	b082      	sub	sp, #8
 800d3b0:	af00      	add	r7, sp, #0
 800d3b2:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 800d3b4:	6878      	ldr	r0, [r7, #4]
 800d3b6:	f7fc fd7a 	bl	8009eae <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 800d3ba:	4603      	mov	r3, r0
 800d3bc:	2b00      	cmp	r3, #0
 800d3be:	bf14      	ite	ne
 800d3c0:	2301      	movne	r3, #1
 800d3c2:	2300      	moveq	r3, #0
 800d3c4:	b2db      	uxtb	r3, r3
 800d3c6:	2b00      	cmp	r3, #0
 800d3c8:	d002      	beq.n	800d3d0 <_ZSt3getILj0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 800d3ca:	4805      	ldr	r0, [pc, #20]	; (800d3e0 <_ZSt3getILj0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 800d3cc:	f7f3 fe51 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 800d3d0:	6878      	ldr	r0, [r7, #4]
 800d3d2:	f7fd fb9f 	bl	800ab14 <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 800d3d6:	4603      	mov	r3, r0
    }
 800d3d8:	4618      	mov	r0, r3
 800d3da:	3708      	adds	r7, #8
 800d3dc:	46bd      	mov	sp, r7
 800d3de:	bd80      	pop	{r7, pc}
 800d3e0:	080276ac 	.word	0x080276ac

0800d3e4 <_ZNSt8__detail9__variant14_UninitializedIiLb1EEC1IJEEESt16in_place_index_tILj0EEDpOT_>:
	_Uninitialized(in_place_index_t<0>, _Args&&... __args)
 800d3e4:	b480      	push	{r7}
 800d3e6:	b083      	sub	sp, #12
 800d3e8:	af00      	add	r7, sp, #0
 800d3ea:	6078      	str	r0, [r7, #4]
 800d3ec:	7039      	strb	r1, [r7, #0]
	: _M_storage(std::forward<_Args>(__args)...)
 800d3ee:	687b      	ldr	r3, [r7, #4]
 800d3f0:	2200      	movs	r2, #0
 800d3f2:	601a      	str	r2, [r3, #0]
	{ }
 800d3f4:	687b      	ldr	r3, [r7, #4]
 800d3f6:	4618      	mov	r0, r3
 800d3f8:	370c      	adds	r7, #12
 800d3fa:	46bd      	mov	sp, r7
 800d3fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d400:	4770      	bx	lr

0800d402 <_ZNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1IJEEESt16in_place_index_tILj0EEDpOT_>:
	constexpr _Variadic_union(in_place_index_t<0>, _Args&&... __args)
 800d402:	b580      	push	{r7, lr}
 800d404:	b082      	sub	sp, #8
 800d406:	af00      	add	r7, sp, #0
 800d408:	6078      	str	r0, [r7, #4]
 800d40a:	7039      	strb	r1, [r7, #0]
	: _M_first(in_place_index<0>, std::forward<_Args>(__args)...)
 800d40c:	687b      	ldr	r3, [r7, #4]
 800d40e:	4611      	mov	r1, r2
 800d410:	4618      	mov	r0, r3
 800d412:	f7ff ffe7 	bl	800d3e4 <_ZNSt8__detail9__variant14_UninitializedIiLb1EEC1IJEEESt16in_place_index_tILj0EEDpOT_>
	{ }
 800d416:	687b      	ldr	r3, [r7, #4]
 800d418:	4618      	mov	r0, r3
 800d41a:	3708      	adds	r7, #8
 800d41c:	46bd      	mov	sp, r7
 800d41e:	bd80      	pop	{r7, pc}

0800d420 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variant_storage(in_place_index_t<_Np>, _Args&&... __args)
 800d420:	b580      	push	{r7, lr}
 800d422:	b082      	sub	sp, #8
 800d424:	af00      	add	r7, sp, #0
 800d426:	6078      	str	r0, [r7, #4]
 800d428:	7039      	strb	r1, [r7, #0]
	_M_index(_Np)
 800d42a:	687b      	ldr	r3, [r7, #4]
 800d42c:	4611      	mov	r1, r2
 800d42e:	4618      	mov	r0, r3
 800d430:	f7ff ffe7 	bl	800d402 <_ZNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1IJEEESt16in_place_index_tILj0EEDpOT_>
 800d434:	687b      	ldr	r3, [r7, #4]
 800d436:	2200      	movs	r2, #0
 800d438:	761a      	strb	r2, [r3, #24]
	{ }
 800d43a:	687b      	ldr	r3, [r7, #4]
 800d43c:	4618      	mov	r0, r3
 800d43e:	3708      	adds	r7, #8
 800d440:	46bd      	mov	sp, r7
 800d442:	bd80      	pop	{r7, pc}

0800d444 <_ZSt7forwardINSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISE_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800d444:	b480      	push	{r7}
 800d446:	b083      	sub	sp, #12
 800d448:	af00      	add	r7, sp, #0
 800d44a:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800d44c:	687b      	ldr	r3, [r7, #4]
 800d44e:	4618      	mov	r0, r3
 800d450:	370c      	adds	r7, #12
 800d452:	46bd      	mov	sp, r7
 800d454:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d458:	4770      	bx	lr

0800d45a <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800d45a:	b480      	push	{r7}
 800d45c:	b083      	sub	sp, #12
 800d45e:	af00      	add	r7, sp, #0
 800d460:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800d462:	687b      	ldr	r3, [r7, #4]
 800d464:	4618      	mov	r0, r3
 800d466:	370c      	adds	r7, #12
 800d468:	46bd      	mov	sp, r7
 800d46a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d46e:	4770      	bx	lr

0800d470 <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800d470:	b480      	push	{r7}
 800d472:	b083      	sub	sp, #12
 800d474:	af00      	add	r7, sp, #0
 800d476:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800d478:	687b      	ldr	r3, [r7, #4]
 800d47a:	4618      	mov	r0, r3
 800d47c:	370c      	adds	r7, #12
 800d47e:	46bd      	mov	sp, r7
 800d480:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d484:	4770      	bx	lr

0800d486 <_ZSt7forwardISt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISC_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800d486:	b480      	push	{r7}
 800d488:	b083      	sub	sp, #12
 800d48a:	af00      	add	r7, sp, #0
 800d48c:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800d48e:	687b      	ldr	r3, [r7, #4]
 800d490:	4618      	mov	r0, r3
 800d492:	370c      	adds	r7, #12
 800d494:	46bd      	mov	sp, r7
 800d496:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d49a:	4770      	bx	lr

0800d49c <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISE_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800d49c:	b480      	push	{r7}
 800d49e:	b083      	sub	sp, #12
 800d4a0:	af00      	add	r7, sp, #0
 800d4a2:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800d4a4:	687b      	ldr	r3, [r7, #4]
 800d4a6:	4618      	mov	r0, r3
 800d4a8:	370c      	adds	r7, #12
 800d4aa:	46bd      	mov	sp, r7
 800d4ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d4b0:	4770      	bx	lr

0800d4b2 <_ZNOSt8__detail9__variant14_UninitializedIiLb1EE6_M_getEv>:
      constexpr _Type&& _M_get() && noexcept
 800d4b2:	b580      	push	{r7, lr}
 800d4b4:	b082      	sub	sp, #8
 800d4b6:	af00      	add	r7, sp, #0
 800d4b8:	6078      	str	r0, [r7, #4]
      { return std::move(_M_storage); }
 800d4ba:	687b      	ldr	r3, [r7, #4]
 800d4bc:	4618      	mov	r0, r3
 800d4be:	f7fa fdf7 	bl	80080b0 <_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_>
 800d4c2:	4603      	mov	r3, r0
 800d4c4:	4618      	mov	r0, r3
 800d4c6:	3708      	adds	r7, #8
 800d4c8:	46bd      	mov	sp, r7
 800d4ca:	bd80      	pop	{r7, pc}

0800d4cc <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_JiEENSt15__invoke_resultISK_JDpT0_EE4typeESL_DpOSO_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 800d4cc:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d4ce:	b083      	sub	sp, #12
 800d4d0:	af00      	add	r7, sp, #0
 800d4d2:	6078      	str	r0, [r7, #4]
 800d4d4:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 800d4d6:	6878      	ldr	r0, [r7, #4]
 800d4d8:	f000 f8de 	bl	800d698 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800d4dc:	4604      	mov	r4, r0
 800d4de:	6838      	ldr	r0, [r7, #0]
 800d4e0:	f7fb f898 	bl	8008614 <_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE>
 800d4e4:	4603      	mov	r3, r0
 800d4e6:	461a      	mov	r2, r3
 800d4e8:	4621      	mov	r1, r4
 800d4ea:	4628      	mov	r0, r5
 800d4ec:	f000 f8df 	bl	800d6ae <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS1_15_Move_ctor_baseILb0EJifbS9_SD_EEESF_EEvOT0_OT1_EUlOT_E_JiEESL_St14__invoke_otherSI_DpOT1_>
					std::forward<_Args>(__args)...);
 800d4f0:	4633      	mov	r3, r6
    }
 800d4f2:	4618      	mov	r0, r3
 800d4f4:	370c      	adds	r7, #12
 800d4f6:	46bd      	mov	sp, r7
 800d4f8:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800d4fa <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISE_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800d4fa:	b480      	push	{r7}
 800d4fc:	b083      	sub	sp, #12
 800d4fe:	af00      	add	r7, sp, #0
 800d500:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800d502:	687b      	ldr	r3, [r7, #4]
 800d504:	4618      	mov	r0, r3
 800d506:	370c      	adds	r7, #12
 800d508:	46bd      	mov	sp, r7
 800d50a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d50e:	4770      	bx	lr

0800d510 <_ZNOSt8__detail9__variant14_UninitializedIfLb1EE6_M_getEv>:
      constexpr _Type&& _M_get() && noexcept
 800d510:	b580      	push	{r7, lr}
 800d512:	b082      	sub	sp, #8
 800d514:	af00      	add	r7, sp, #0
 800d516:	6078      	str	r0, [r7, #4]
      { return std::move(_M_storage); }
 800d518:	687b      	ldr	r3, [r7, #4]
 800d51a:	4618      	mov	r0, r3
 800d51c:	f7fa fdec 	bl	80080f8 <_ZSt4moveIRfEONSt16remove_referenceIT_E4typeEOS2_>
 800d520:	4603      	mov	r3, r0
 800d522:	4618      	mov	r0, r3
 800d524:	3708      	adds	r7, #8
 800d526:	46bd      	mov	sp, r7
 800d528:	bd80      	pop	{r7, pc}

0800d52a <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_JfEENSt15__invoke_resultISK_JDpT0_EE4typeESL_DpOSO_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 800d52a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d52c:	b083      	sub	sp, #12
 800d52e:	af00      	add	r7, sp, #0
 800d530:	6078      	str	r0, [r7, #4]
 800d532:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 800d534:	6878      	ldr	r0, [r7, #4]
 800d536:	f000 f8af 	bl	800d698 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800d53a:	4604      	mov	r4, r0
 800d53c:	6838      	ldr	r0, [r7, #0]
 800d53e:	f7fb f893 	bl	8008668 <_ZSt7forwardIfEOT_RNSt16remove_referenceIS0_E4typeE>
 800d542:	4603      	mov	r3, r0
 800d544:	461a      	mov	r2, r3
 800d546:	4621      	mov	r1, r4
 800d548:	4628      	mov	r0, r5
 800d54a:	f000 f8c7 	bl	800d6dc <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS1_15_Move_ctor_baseILb0EJifbS9_SD_EEESF_EEvOT0_OT1_EUlOT_E_JfEESL_St14__invoke_otherSI_DpOT1_>
					std::forward<_Args>(__args)...);
 800d54e:	4633      	mov	r3, r6
    }
 800d550:	4618      	mov	r0, r3
 800d552:	370c      	adds	r7, #12
 800d554:	46bd      	mov	sp, r7
 800d556:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800d558 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISE_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800d558:	b480      	push	{r7}
 800d55a:	b083      	sub	sp, #12
 800d55c:	af00      	add	r7, sp, #0
 800d55e:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800d560:	687b      	ldr	r3, [r7, #4]
 800d562:	4618      	mov	r0, r3
 800d564:	370c      	adds	r7, #12
 800d566:	46bd      	mov	sp, r7
 800d568:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d56c:	4770      	bx	lr

0800d56e <_ZNOSt8__detail9__variant14_UninitializedIbLb1EE6_M_getEv>:
      constexpr _Type&& _M_get() && noexcept
 800d56e:	b580      	push	{r7, lr}
 800d570:	b082      	sub	sp, #8
 800d572:	af00      	add	r7, sp, #0
 800d574:	6078      	str	r0, [r7, #4]
      { return std::move(_M_storage); }
 800d576:	687b      	ldr	r3, [r7, #4]
 800d578:	4618      	mov	r0, r3
 800d57a:	f7fa fde1 	bl	8008140 <_ZSt4moveIRbEONSt16remove_referenceIT_E4typeEOS2_>
 800d57e:	4603      	mov	r3, r0
 800d580:	4618      	mov	r0, r3
 800d582:	3708      	adds	r7, #8
 800d584:	46bd      	mov	sp, r7
 800d586:	bd80      	pop	{r7, pc}

0800d588 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_JbEENSt15__invoke_resultISK_JDpT0_EE4typeESL_DpOSO_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 800d588:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d58a:	b083      	sub	sp, #12
 800d58c:	af00      	add	r7, sp, #0
 800d58e:	6078      	str	r0, [r7, #4]
 800d590:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 800d592:	6878      	ldr	r0, [r7, #4]
 800d594:	f000 f880 	bl	800d698 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800d598:	4604      	mov	r4, r0
 800d59a:	6838      	ldr	r0, [r7, #0]
 800d59c:	f7fb f8aa 	bl	80086f4 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
 800d5a0:	4603      	mov	r3, r0
 800d5a2:	461a      	mov	r2, r3
 800d5a4:	4621      	mov	r1, r4
 800d5a6:	4628      	mov	r0, r5
 800d5a8:	f000 f8af 	bl	800d70a <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS1_15_Move_ctor_baseILb0EJifbS9_SD_EEESF_EEvOT0_OT1_EUlOT_E_JbEESL_St14__invoke_otherSI_DpOT1_>
					std::forward<_Args>(__args)...);
 800d5ac:	4633      	mov	r3, r6
    }
 800d5ae:	4618      	mov	r0, r3
 800d5b0:	370c      	adds	r7, #12
 800d5b2:	46bd      	mov	sp, r7
 800d5b4:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800d5b6 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISE_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800d5b6:	b480      	push	{r7}
 800d5b8:	b083      	sub	sp, #12
 800d5ba:	af00      	add	r7, sp, #0
 800d5bc:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800d5be:	687b      	ldr	r3, [r7, #4]
 800d5c0:	4618      	mov	r0, r3
 800d5c2:	370c      	adds	r7, #12
 800d5c4:	46bd      	mov	sp, r7
 800d5c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d5ca:	4770      	bx	lr

0800d5cc <_ZNOSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE6_M_getEv>:
      _Type&& _M_get() && noexcept
 800d5cc:	b580      	push	{r7, lr}
 800d5ce:	b082      	sub	sp, #8
 800d5d0:	af00      	add	r7, sp, #0
 800d5d2:	6078      	str	r0, [r7, #4]
      { return std::move(*_M_storage._M_ptr()); }
 800d5d4:	687b      	ldr	r3, [r7, #4]
 800d5d6:	4618      	mov	r0, r3
 800d5d8:	f7f8 fadf 	bl	8005b9a <_ZN9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE6_M_ptrEv>
 800d5dc:	4603      	mov	r3, r0
 800d5de:	4618      	mov	r0, r3
 800d5e0:	f7fa fdd2 	bl	8008188 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
 800d5e4:	4603      	mov	r3, r0
 800d5e6:	4618      	mov	r0, r3
 800d5e8:	3708      	adds	r7, #8
 800d5ea:	46bd      	mov	sp, r7
 800d5ec:	bd80      	pop	{r7, pc}

0800d5ee <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_JS8_EENSt15__invoke_resultISK_JDpT0_EE4typeESL_DpOSO_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 800d5ee:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d5f0:	b083      	sub	sp, #12
 800d5f2:	af00      	add	r7, sp, #0
 800d5f4:	6078      	str	r0, [r7, #4]
 800d5f6:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 800d5f8:	6878      	ldr	r0, [r7, #4]
 800d5fa:	f000 f84d 	bl	800d698 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800d5fe:	4604      	mov	r4, r0
 800d600:	6838      	ldr	r0, [r7, #0]
 800d602:	f7fb f8a2 	bl	800874a <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 800d606:	4603      	mov	r3, r0
 800d608:	461a      	mov	r2, r3
 800d60a:	4621      	mov	r1, r4
 800d60c:	4628      	mov	r0, r5
 800d60e:	f000 f893 	bl	800d738 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS1_15_Move_ctor_baseILb0EJifbS9_SD_EEESF_EEvOT0_OT1_EUlOT_E_JS9_EESL_St14__invoke_otherSI_DpOT1_>
					std::forward<_Args>(__args)...);
 800d612:	4633      	mov	r3, r6
    }
 800d614:	4618      	mov	r0, r3
 800d616:	370c      	adds	r7, #12
 800d618:	46bd      	mov	sp, r7
 800d61a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800d61c <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJSt6vectorI6SymbolSaIS4_EEEEEEOT_RNSt16remove_referenceIS8_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800d61c:	b480      	push	{r7}
 800d61e:	b083      	sub	sp, #12
 800d620:	af00      	add	r7, sp, #0
 800d622:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800d624:	687b      	ldr	r3, [r7, #4]
 800d626:	4618      	mov	r0, r3
 800d628:	370c      	adds	r7, #12
 800d62a:	46bd      	mov	sp, r7
 800d62c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d630:	4770      	bx	lr

0800d632 <_ZNOSt8__detail9__variant14_UninitializedISt6vectorI6SymbolSaIS3_EELb0EE6_M_getEv>:
      _Type&& _M_get() && noexcept
 800d632:	b580      	push	{r7, lr}
 800d634:	b082      	sub	sp, #8
 800d636:	af00      	add	r7, sp, #0
 800d638:	6078      	str	r0, [r7, #4]
      { return std::move(*_M_storage._M_ptr()); }
 800d63a:	687b      	ldr	r3, [r7, #4]
 800d63c:	4618      	mov	r0, r3
 800d63e:	f7f8 fada 	bl	8005bf6 <_ZN9__gnu_cxx16__aligned_membufISt6vectorI6SymbolSaIS2_EEE6_M_ptrEv>
 800d642:	4603      	mov	r3, r0
 800d644:	4618      	mov	r0, r3
 800d646:	f7fa fdc3 	bl	80081d0 <_ZSt4moveIRSt6vectorI6SymbolSaIS1_EEEONSt16remove_referenceIT_E4typeEOS6_>
 800d64a:	4603      	mov	r3, r0
 800d64c:	4618      	mov	r0, r3
 800d64e:	3708      	adds	r7, #8
 800d650:	46bd      	mov	sp, r7
 800d652:	bd80      	pop	{r7, pc}

0800d654 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_JSC_EENSt15__invoke_resultISK_JDpT0_EE4typeESL_DpOSO_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 800d654:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d656:	b083      	sub	sp, #12
 800d658:	af00      	add	r7, sp, #0
 800d65a:	6078      	str	r0, [r7, #4]
 800d65c:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 800d65e:	6878      	ldr	r0, [r7, #4]
 800d660:	f000 f81a 	bl	800d698 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800d664:	4604      	mov	r4, r0
 800d666:	6838      	ldr	r0, [r7, #0]
 800d668:	f7fb f8f6 	bl	8008858 <_ZSt7forwardISt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS4_E4typeE>
 800d66c:	4603      	mov	r3, r0
 800d66e:	461a      	mov	r2, r3
 800d670:	4621      	mov	r1, r4
 800d672:	4628      	mov	r0, r5
 800d674:	f000 f877 	bl	800d766 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS1_15_Move_ctor_baseILb0EJifbS9_SD_EEESF_EEvOT0_OT1_EUlOT_E_JSD_EESL_St14__invoke_otherSI_DpOT1_>
					std::forward<_Args>(__args)...);
 800d678:	4633      	mov	r3, r6
    }
 800d67a:	4618      	mov	r0, r3
 800d67c:	370c      	adds	r7, #12
 800d67e:	46bd      	mov	sp, r7
 800d680:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800d682 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS0_15_Move_ctor_baseILb0EJifbS9_SD_EEESF_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbS9_SD_EEEJEE9_M_accessEv>:
      _M_access() const
 800d682:	b480      	push	{r7}
 800d684:	b083      	sub	sp, #12
 800d686:	af00      	add	r7, sp, #0
 800d688:	6078      	str	r0, [r7, #4]
      { return _M_data; }
 800d68a:	687b      	ldr	r3, [r7, #4]
 800d68c:	4618      	mov	r0, r3
 800d68e:	370c      	adds	r7, #12
 800d690:	46bd      	mov	sp, r7
 800d692:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d696:	4770      	bx	lr

0800d698 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800d698:	b480      	push	{r7}
 800d69a:	b083      	sub	sp, #12
 800d69c:	af00      	add	r7, sp, #0
 800d69e:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800d6a0:	687b      	ldr	r3, [r7, #4]
 800d6a2:	4618      	mov	r0, r3
 800d6a4:	370c      	adds	r7, #12
 800d6a6:	46bd      	mov	sp, r7
 800d6a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d6ac:	4770      	bx	lr

0800d6ae <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS1_15_Move_ctor_baseILb0EJifbS9_SD_EEESF_EEvOT0_OT1_EUlOT_E_JiEESL_St14__invoke_otherSI_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800d6ae:	b5b0      	push	{r4, r5, r7, lr}
 800d6b0:	b084      	sub	sp, #16
 800d6b2:	af00      	add	r7, sp, #0
 800d6b4:	7338      	strb	r0, [r7, #12]
 800d6b6:	60b9      	str	r1, [r7, #8]
 800d6b8:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800d6ba:	68b8      	ldr	r0, [r7, #8]
 800d6bc:	f7ff ffec 	bl	800d698 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800d6c0:	4604      	mov	r4, r0
 800d6c2:	6878      	ldr	r0, [r7, #4]
 800d6c4:	f7fa ffa6 	bl	8008614 <_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE>
 800d6c8:	4603      	mov	r3, r0
 800d6ca:	4619      	mov	r1, r3
 800d6cc:	4620      	mov	r0, r4
 800d6ce:	f000 f861 	bl	800d794 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Move_ctor_baseILb0EJifbS7_SB_EEESD_EEvOT0_OT1_ENUlOT_E_clIiEENS0_16__variant_cookieESK_>
 800d6d2:	462b      	mov	r3, r5
 800d6d4:	4618      	mov	r0, r3
 800d6d6:	3710      	adds	r7, #16
 800d6d8:	46bd      	mov	sp, r7
 800d6da:	bdb0      	pop	{r4, r5, r7, pc}

0800d6dc <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS1_15_Move_ctor_baseILb0EJifbS9_SD_EEESF_EEvOT0_OT1_EUlOT_E_JfEESL_St14__invoke_otherSI_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800d6dc:	b5b0      	push	{r4, r5, r7, lr}
 800d6de:	b084      	sub	sp, #16
 800d6e0:	af00      	add	r7, sp, #0
 800d6e2:	7338      	strb	r0, [r7, #12]
 800d6e4:	60b9      	str	r1, [r7, #8]
 800d6e6:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800d6e8:	68b8      	ldr	r0, [r7, #8]
 800d6ea:	f7ff ffd5 	bl	800d698 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800d6ee:	4604      	mov	r4, r0
 800d6f0:	6878      	ldr	r0, [r7, #4]
 800d6f2:	f7fa ffb9 	bl	8008668 <_ZSt7forwardIfEOT_RNSt16remove_referenceIS0_E4typeE>
 800d6f6:	4603      	mov	r3, r0
 800d6f8:	4619      	mov	r1, r3
 800d6fa:	4620      	mov	r0, r4
 800d6fc:	f000 f862 	bl	800d7c4 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Move_ctor_baseILb0EJifbS7_SB_EEESD_EEvOT0_OT1_ENUlOT_E_clIfEENS0_16__variant_cookieESK_>
 800d700:	462b      	mov	r3, r5
 800d702:	4618      	mov	r0, r3
 800d704:	3710      	adds	r7, #16
 800d706:	46bd      	mov	sp, r7
 800d708:	bdb0      	pop	{r4, r5, r7, pc}

0800d70a <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS1_15_Move_ctor_baseILb0EJifbS9_SD_EEESF_EEvOT0_OT1_EUlOT_E_JbEESL_St14__invoke_otherSI_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800d70a:	b5b0      	push	{r4, r5, r7, lr}
 800d70c:	b084      	sub	sp, #16
 800d70e:	af00      	add	r7, sp, #0
 800d710:	7338      	strb	r0, [r7, #12]
 800d712:	60b9      	str	r1, [r7, #8]
 800d714:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800d716:	68b8      	ldr	r0, [r7, #8]
 800d718:	f7ff ffbe 	bl	800d698 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800d71c:	4604      	mov	r4, r0
 800d71e:	6878      	ldr	r0, [r7, #4]
 800d720:	f7fa ffe8 	bl	80086f4 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
 800d724:	4603      	mov	r3, r0
 800d726:	4619      	mov	r1, r3
 800d728:	4620      	mov	r0, r4
 800d72a:	f000 f863 	bl	800d7f4 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Move_ctor_baseILb0EJifbS7_SB_EEESD_EEvOT0_OT1_ENUlOT_E_clIbEENS0_16__variant_cookieESK_>
 800d72e:	462b      	mov	r3, r5
 800d730:	4618      	mov	r0, r3
 800d732:	3710      	adds	r7, #16
 800d734:	46bd      	mov	sp, r7
 800d736:	bdb0      	pop	{r4, r5, r7, pc}

0800d738 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS1_15_Move_ctor_baseILb0EJifbS9_SD_EEESF_EEvOT0_OT1_EUlOT_E_JS9_EESL_St14__invoke_otherSI_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800d738:	b5b0      	push	{r4, r5, r7, lr}
 800d73a:	b084      	sub	sp, #16
 800d73c:	af00      	add	r7, sp, #0
 800d73e:	7338      	strb	r0, [r7, #12]
 800d740:	60b9      	str	r1, [r7, #8]
 800d742:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800d744:	68b8      	ldr	r0, [r7, #8]
 800d746:	f7ff ffa7 	bl	800d698 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800d74a:	4604      	mov	r4, r0
 800d74c:	6878      	ldr	r0, [r7, #4]
 800d74e:	f7fa fffc 	bl	800874a <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 800d752:	4603      	mov	r3, r0
 800d754:	4619      	mov	r1, r3
 800d756:	4620      	mov	r0, r4
 800d758:	f000 f864 	bl	800d824 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Move_ctor_baseILb0EJifbS7_SB_EEESD_EEvOT0_OT1_ENUlOT_E_clIS7_EENS0_16__variant_cookieESK_>
 800d75c:	462b      	mov	r3, r5
 800d75e:	4618      	mov	r0, r3
 800d760:	3710      	adds	r7, #16
 800d762:	46bd      	mov	sp, r7
 800d764:	bdb0      	pop	{r4, r5, r7, pc}

0800d766 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS1_15_Move_ctor_baseILb0EJifbS9_SD_EEESF_EEvOT0_OT1_EUlOT_E_JSD_EESL_St14__invoke_otherSI_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800d766:	b5b0      	push	{r4, r5, r7, lr}
 800d768:	b084      	sub	sp, #16
 800d76a:	af00      	add	r7, sp, #0
 800d76c:	7338      	strb	r0, [r7, #12]
 800d76e:	60b9      	str	r1, [r7, #8]
 800d770:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800d772:	68b8      	ldr	r0, [r7, #8]
 800d774:	f7ff ff90 	bl	800d698 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800d778:	4604      	mov	r4, r0
 800d77a:	6878      	ldr	r0, [r7, #4]
 800d77c:	f7fb f86c 	bl	8008858 <_ZSt7forwardISt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS4_E4typeE>
 800d780:	4603      	mov	r3, r0
 800d782:	4619      	mov	r1, r3
 800d784:	4620      	mov	r0, r4
 800d786:	f000 f865 	bl	800d854 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Move_ctor_baseILb0EJifbS7_SB_EEESD_EEvOT0_OT1_ENUlOT_E_clISB_EENS0_16__variant_cookieESK_>
 800d78a:	462b      	mov	r3, r5
 800d78c:	4618      	mov	r0, r3
 800d78e:	3710      	adds	r7, #16
 800d790:	46bd      	mov	sp, r7
 800d792:	bdb0      	pop	{r4, r5, r7, pc}

0800d794 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Move_ctor_baseILb0EJifbS7_SB_EEESD_EEvOT0_OT1_ENUlOT_E_clIiEENS0_16__variant_cookieESK_>:
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 800d794:	b5b0      	push	{r4, r5, r7, lr}
 800d796:	b082      	sub	sp, #8
 800d798:	af00      	add	r7, sp, #0
 800d79a:	6078      	str	r0, [r7, #4]
 800d79c:	6039      	str	r1, [r7, #0]
 800d79e:	687b      	ldr	r3, [r7, #4]
 800d7a0:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 800d7a2:	4618      	mov	r0, r3
 800d7a4:	f000 f86e 	bl	800d884 <_ZSt7forwardIRNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800d7a8:	4604      	mov	r4, r0
 800d7aa:	6838      	ldr	r0, [r7, #0]
 800d7ac:	f000 f875 	bl	800d89a <_ZSt7forwardIOiEOT_RNSt16remove_referenceIS1_E4typeE>
 800d7b0:	4603      	mov	r3, r0
 800d7b2:	4619      	mov	r1, r3
 800d7b4:	4620      	mov	r0, r4
 800d7b6:	f000 f87b 	bl	800d8b0 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEiEEvOT_OT0_>
	  return {};
 800d7ba:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 800d7bc:	4618      	mov	r0, r3
 800d7be:	3708      	adds	r7, #8
 800d7c0:	46bd      	mov	sp, r7
 800d7c2:	bdb0      	pop	{r4, r5, r7, pc}

0800d7c4 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Move_ctor_baseILb0EJifbS7_SB_EEESD_EEvOT0_OT1_ENUlOT_E_clIfEENS0_16__variant_cookieESK_>:
 800d7c4:	b5b0      	push	{r4, r5, r7, lr}
 800d7c6:	b082      	sub	sp, #8
 800d7c8:	af00      	add	r7, sp, #0
 800d7ca:	6078      	str	r0, [r7, #4]
 800d7cc:	6039      	str	r1, [r7, #0]
 800d7ce:	687b      	ldr	r3, [r7, #4]
 800d7d0:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 800d7d2:	4618      	mov	r0, r3
 800d7d4:	f000 f856 	bl	800d884 <_ZSt7forwardIRNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800d7d8:	4604      	mov	r4, r0
 800d7da:	6838      	ldr	r0, [r7, #0]
 800d7dc:	f000 f882 	bl	800d8e4 <_ZSt7forwardIOfEOT_RNSt16remove_referenceIS1_E4typeE>
 800d7e0:	4603      	mov	r3, r0
 800d7e2:	4619      	mov	r1, r3
 800d7e4:	4620      	mov	r0, r4
 800d7e6:	f000 f888 	bl	800d8fa <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEfEEvOT_OT0_>
	  return {};
 800d7ea:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 800d7ec:	4618      	mov	r0, r3
 800d7ee:	3708      	adds	r7, #8
 800d7f0:	46bd      	mov	sp, r7
 800d7f2:	bdb0      	pop	{r4, r5, r7, pc}

0800d7f4 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Move_ctor_baseILb0EJifbS7_SB_EEESD_EEvOT0_OT1_ENUlOT_E_clIbEENS0_16__variant_cookieESK_>:
 800d7f4:	b5b0      	push	{r4, r5, r7, lr}
 800d7f6:	b082      	sub	sp, #8
 800d7f8:	af00      	add	r7, sp, #0
 800d7fa:	6078      	str	r0, [r7, #4]
 800d7fc:	6039      	str	r1, [r7, #0]
 800d7fe:	687b      	ldr	r3, [r7, #4]
 800d800:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 800d802:	4618      	mov	r0, r3
 800d804:	f000 f83e 	bl	800d884 <_ZSt7forwardIRNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800d808:	4604      	mov	r4, r0
 800d80a:	6838      	ldr	r0, [r7, #0]
 800d80c:	f000 f88f 	bl	800d92e <_ZSt7forwardIObEOT_RNSt16remove_referenceIS1_E4typeE>
 800d810:	4603      	mov	r3, r0
 800d812:	4619      	mov	r1, r3
 800d814:	4620      	mov	r0, r4
 800d816:	f000 f895 	bl	800d944 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEbEEvOT_OT0_>
	  return {};
 800d81a:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 800d81c:	4618      	mov	r0, r3
 800d81e:	3708      	adds	r7, #8
 800d820:	46bd      	mov	sp, r7
 800d822:	bdb0      	pop	{r4, r5, r7, pc}

0800d824 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Move_ctor_baseILb0EJifbS7_SB_EEESD_EEvOT0_OT1_ENUlOT_E_clIS7_EENS0_16__variant_cookieESK_>:
 800d824:	b5b0      	push	{r4, r5, r7, lr}
 800d826:	b082      	sub	sp, #8
 800d828:	af00      	add	r7, sp, #0
 800d82a:	6078      	str	r0, [r7, #4]
 800d82c:	6039      	str	r1, [r7, #0]
 800d82e:	687b      	ldr	r3, [r7, #4]
 800d830:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 800d832:	4618      	mov	r0, r3
 800d834:	f000 f826 	bl	800d884 <_ZSt7forwardIRNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800d838:	4604      	mov	r4, r0
 800d83a:	6838      	ldr	r0, [r7, #0]
 800d83c:	f000 f89d 	bl	800d97a <_ZSt7forwardIONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 800d840:	4603      	mov	r3, r0
 800d842:	4619      	mov	r1, r3
 800d844:	4620      	mov	r0, r4
 800d846:	f000 f8a3 	bl	800d990 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEES8_EEvOT_OT0_>
	  return {};
 800d84a:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 800d84c:	4618      	mov	r0, r3
 800d84e:	3708      	adds	r7, #8
 800d850:	46bd      	mov	sp, r7
 800d852:	bdb0      	pop	{r4, r5, r7, pc}

0800d854 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Move_ctor_baseILb0EJifbS7_SB_EEESD_EEvOT0_OT1_ENUlOT_E_clISB_EENS0_16__variant_cookieESK_>:
 800d854:	b5b0      	push	{r4, r5, r7, lr}
 800d856:	b082      	sub	sp, #8
 800d858:	af00      	add	r7, sp, #0
 800d85a:	6078      	str	r0, [r7, #4]
 800d85c:	6039      	str	r1, [r7, #0]
 800d85e:	687b      	ldr	r3, [r7, #4]
 800d860:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 800d862:	4618      	mov	r0, r3
 800d864:	f000 f80e 	bl	800d884 <_ZSt7forwardIRNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800d868:	4604      	mov	r4, r0
 800d86a:	6838      	ldr	r0, [r7, #0]
 800d86c:	f000 f8ac 	bl	800d9c8 <_ZSt7forwardIOSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS5_E4typeE>
 800d870:	4603      	mov	r3, r0
 800d872:	4619      	mov	r1, r3
 800d874:	4620      	mov	r0, r4
 800d876:	f000 f8b2 	bl	800d9de <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEESC_EEvOT_OT0_>
	  return {};
 800d87a:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 800d87c:	4618      	mov	r0, r3
 800d87e:	3708      	adds	r7, #8
 800d880:	46bd      	mov	sp, r7
 800d882:	bdb0      	pop	{r4, r5, r7, pc}

0800d884 <_ZSt7forwardIRNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800d884:	b480      	push	{r7}
 800d886:	b083      	sub	sp, #12
 800d888:	af00      	add	r7, sp, #0
 800d88a:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800d88c:	687b      	ldr	r3, [r7, #4]
 800d88e:	4618      	mov	r0, r3
 800d890:	370c      	adds	r7, #12
 800d892:	46bd      	mov	sp, r7
 800d894:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d898:	4770      	bx	lr

0800d89a <_ZSt7forwardIOiEOT_RNSt16remove_referenceIS1_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800d89a:	b480      	push	{r7}
 800d89c:	b083      	sub	sp, #12
 800d89e:	af00      	add	r7, sp, #0
 800d8a0:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800d8a2:	687b      	ldr	r3, [r7, #4]
 800d8a4:	4618      	mov	r0, r3
 800d8a6:	370c      	adds	r7, #12
 800d8a8:	46bd      	mov	sp, r7
 800d8aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d8ae:	4770      	bx	lr

0800d8b0 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEiEEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 800d8b0:	b590      	push	{r4, r7, lr}
 800d8b2:	b085      	sub	sp, #20
 800d8b4:	af00      	add	r7, sp, #0
 800d8b6:	6078      	str	r0, [r7, #4]
 800d8b8:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 800d8ba:	687b      	ldr	r3, [r7, #4]
 800d8bc:	4618      	mov	r0, r3
 800d8be:	f7f8 ffdb 	bl	8006878 <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEPT_RSE_>
 800d8c2:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 800d8c4:	6838      	ldr	r0, [r7, #0]
 800d8c6:	f7ff ffe8 	bl	800d89a <_ZSt7forwardIOiEOT_RNSt16remove_referenceIS1_E4typeE>
 800d8ca:	4603      	mov	r3, r0
        ::new (__storage)
 800d8cc:	681c      	ldr	r4, [r3, #0]
 800d8ce:	68fb      	ldr	r3, [r7, #12]
 800d8d0:	4619      	mov	r1, r3
 800d8d2:	2004      	movs	r0, #4
 800d8d4:	f7f3 fbc1 	bl	800105a <_ZnwjPv>
 800d8d8:	4603      	mov	r3, r0
 800d8da:	601c      	str	r4, [r3, #0]
    }
 800d8dc:	bf00      	nop
 800d8de:	3714      	adds	r7, #20
 800d8e0:	46bd      	mov	sp, r7
 800d8e2:	bd90      	pop	{r4, r7, pc}

0800d8e4 <_ZSt7forwardIOfEOT_RNSt16remove_referenceIS1_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800d8e4:	b480      	push	{r7}
 800d8e6:	b083      	sub	sp, #12
 800d8e8:	af00      	add	r7, sp, #0
 800d8ea:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800d8ec:	687b      	ldr	r3, [r7, #4]
 800d8ee:	4618      	mov	r0, r3
 800d8f0:	370c      	adds	r7, #12
 800d8f2:	46bd      	mov	sp, r7
 800d8f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d8f8:	4770      	bx	lr

0800d8fa <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEfEEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 800d8fa:	b590      	push	{r4, r7, lr}
 800d8fc:	b085      	sub	sp, #20
 800d8fe:	af00      	add	r7, sp, #0
 800d900:	6078      	str	r0, [r7, #4]
 800d902:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 800d904:	687b      	ldr	r3, [r7, #4]
 800d906:	4618      	mov	r0, r3
 800d908:	f7f8 ffb6 	bl	8006878 <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEPT_RSE_>
 800d90c:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 800d90e:	6838      	ldr	r0, [r7, #0]
 800d910:	f7ff ffe8 	bl	800d8e4 <_ZSt7forwardIOfEOT_RNSt16remove_referenceIS1_E4typeE>
 800d914:	4603      	mov	r3, r0
        ::new (__storage)
 800d916:	681c      	ldr	r4, [r3, #0]
 800d918:	68fb      	ldr	r3, [r7, #12]
 800d91a:	4619      	mov	r1, r3
 800d91c:	2004      	movs	r0, #4
 800d91e:	f7f3 fb9c 	bl	800105a <_ZnwjPv>
 800d922:	4603      	mov	r3, r0
 800d924:	601c      	str	r4, [r3, #0]
    }
 800d926:	bf00      	nop
 800d928:	3714      	adds	r7, #20
 800d92a:	46bd      	mov	sp, r7
 800d92c:	bd90      	pop	{r4, r7, pc}

0800d92e <_ZSt7forwardIObEOT_RNSt16remove_referenceIS1_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800d92e:	b480      	push	{r7}
 800d930:	b083      	sub	sp, #12
 800d932:	af00      	add	r7, sp, #0
 800d934:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800d936:	687b      	ldr	r3, [r7, #4]
 800d938:	4618      	mov	r0, r3
 800d93a:	370c      	adds	r7, #12
 800d93c:	46bd      	mov	sp, r7
 800d93e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d942:	4770      	bx	lr

0800d944 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEbEEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 800d944:	b590      	push	{r4, r7, lr}
 800d946:	b085      	sub	sp, #20
 800d948:	af00      	add	r7, sp, #0
 800d94a:	6078      	str	r0, [r7, #4]
 800d94c:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 800d94e:	687b      	ldr	r3, [r7, #4]
 800d950:	4618      	mov	r0, r3
 800d952:	f7f8 ff91 	bl	8006878 <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEPT_RSE_>
 800d956:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 800d958:	6838      	ldr	r0, [r7, #0]
 800d95a:	f7ff ffe8 	bl	800d92e <_ZSt7forwardIObEOT_RNSt16remove_referenceIS1_E4typeE>
 800d95e:	4603      	mov	r3, r0
        ::new (__storage)
 800d960:	781c      	ldrb	r4, [r3, #0]
 800d962:	68fb      	ldr	r3, [r7, #12]
 800d964:	4619      	mov	r1, r3
 800d966:	2001      	movs	r0, #1
 800d968:	f7f3 fb77 	bl	800105a <_ZnwjPv>
 800d96c:	4603      	mov	r3, r0
 800d96e:	4622      	mov	r2, r4
 800d970:	701a      	strb	r2, [r3, #0]
    }
 800d972:	bf00      	nop
 800d974:	3714      	adds	r7, #20
 800d976:	46bd      	mov	sp, r7
 800d978:	bd90      	pop	{r4, r7, pc}

0800d97a <_ZSt7forwardIONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800d97a:	b480      	push	{r7}
 800d97c:	b083      	sub	sp, #12
 800d97e:	af00      	add	r7, sp, #0
 800d980:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800d982:	687b      	ldr	r3, [r7, #4]
 800d984:	4618      	mov	r0, r3
 800d986:	370c      	adds	r7, #12
 800d988:	46bd      	mov	sp, r7
 800d98a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d98e:	4770      	bx	lr

0800d990 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEES8_EEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 800d990:	b590      	push	{r4, r7, lr}
 800d992:	b085      	sub	sp, #20
 800d994:	af00      	add	r7, sp, #0
 800d996:	6078      	str	r0, [r7, #4]
 800d998:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 800d99a:	687b      	ldr	r3, [r7, #4]
 800d99c:	4618      	mov	r0, r3
 800d99e:	f7f8 ff6b 	bl	8006878 <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEPT_RSE_>
 800d9a2:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 800d9a4:	6838      	ldr	r0, [r7, #0]
 800d9a6:	f7ff ffe8 	bl	800d97a <_ZSt7forwardIONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 800d9aa:	4604      	mov	r4, r0
        ::new (__storage)
 800d9ac:	68fb      	ldr	r3, [r7, #12]
 800d9ae:	4619      	mov	r1, r3
 800d9b0:	2018      	movs	r0, #24
 800d9b2:	f7f3 fb52 	bl	800105a <_ZnwjPv>
 800d9b6:	4603      	mov	r3, r0
 800d9b8:	4621      	mov	r1, r4
 800d9ba:	4618      	mov	r0, r3
 800d9bc:	f015 f9bb 	bl	8022d36 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_>
    }
 800d9c0:	bf00      	nop
 800d9c2:	3714      	adds	r7, #20
 800d9c4:	46bd      	mov	sp, r7
 800d9c6:	bd90      	pop	{r4, r7, pc}

0800d9c8 <_ZSt7forwardIOSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS5_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800d9c8:	b480      	push	{r7}
 800d9ca:	b083      	sub	sp, #12
 800d9cc:	af00      	add	r7, sp, #0
 800d9ce:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800d9d0:	687b      	ldr	r3, [r7, #4]
 800d9d2:	4618      	mov	r0, r3
 800d9d4:	370c      	adds	r7, #12
 800d9d6:	46bd      	mov	sp, r7
 800d9d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d9dc:	4770      	bx	lr

0800d9de <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEESC_EEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 800d9de:	b590      	push	{r4, r7, lr}
 800d9e0:	b085      	sub	sp, #20
 800d9e2:	af00      	add	r7, sp, #0
 800d9e4:	6078      	str	r0, [r7, #4]
 800d9e6:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 800d9e8:	687b      	ldr	r3, [r7, #4]
 800d9ea:	4618      	mov	r0, r3
 800d9ec:	f7f8 ff44 	bl	8006878 <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEPT_RSE_>
 800d9f0:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 800d9f2:	6838      	ldr	r0, [r7, #0]
 800d9f4:	f7ff ffe8 	bl	800d9c8 <_ZSt7forwardIOSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS5_E4typeE>
 800d9f8:	4604      	mov	r4, r0
        ::new (__storage)
 800d9fa:	68fb      	ldr	r3, [r7, #12]
 800d9fc:	4619      	mov	r1, r3
 800d9fe:	200c      	movs	r0, #12
 800da00:	f7f3 fb2b 	bl	800105a <_ZnwjPv>
 800da04:	4603      	mov	r3, r0
 800da06:	4621      	mov	r1, r4
 800da08:	4618      	mov	r0, r3
 800da0a:	f7fa ff40 	bl	800888e <_ZNSt6vectorI6SymbolSaIS0_EEC1EOS2_>
    }
 800da0e:	bf00      	nop
 800da10:	3714      	adds	r7, #20
 800da12:	46bd      	mov	sp, r7
 800da14:	bd90      	pop	{r4, r7, pc}
	...

0800da18 <_Z41__static_initialization_and_destruction_0ii>:
 800da18:	b590      	push	{r4, r7, lr}
 800da1a:	b0e7      	sub	sp, #412	; 0x19c
 800da1c:	af02      	add	r7, sp, #8
 800da1e:	1d3b      	adds	r3, r7, #4
 800da20:	6018      	str	r0, [r3, #0]
 800da22:	463b      	mov	r3, r7
 800da24:	6019      	str	r1, [r3, #0]
 800da26:	1d3b      	adds	r3, r7, #4
 800da28:	681b      	ldr	r3, [r3, #0]
 800da2a:	2b01      	cmp	r3, #1
 800da2c:	f040 819d 	bne.w	800dd6a <_Z41__static_initialization_and_destruction_0ii+0x352>
 800da30:	463b      	mov	r3, r7
 800da32:	681b      	ldr	r3, [r3, #0]
 800da34:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800da38:	4293      	cmp	r3, r2
 800da3a:	f040 8196 	bne.w	800dd6a <_Z41__static_initialization_and_destruction_0ii+0x352>
};
 800da3e:	f107 0314 	add.w	r3, r7, #20
 800da42:	4618      	mov	r0, r3
 800da44:	2322      	movs	r3, #34	; 0x22
 800da46:	461a      	mov	r2, r3
 800da48:	2100      	movs	r1, #0
 800da4a:	f016 fbcb 	bl	80241e4 <memset>
 800da4e:	f107 0314 	add.w	r3, r7, #20
 800da52:	223a      	movs	r2, #58	; 0x3a
 800da54:	701a      	strb	r2, [r3, #0]
 800da56:	f107 0314 	add.w	r3, r7, #20
 800da5a:	2201      	movs	r2, #1
 800da5c:	705a      	strb	r2, [r3, #1]
 800da5e:	f107 0314 	add.w	r3, r7, #20
 800da62:	220a      	movs	r2, #10
 800da64:	709a      	strb	r2, [r3, #2]
 800da66:	f107 0314 	add.w	r3, r7, #20
 800da6a:	220a      	movs	r2, #10
 800da6c:	70da      	strb	r2, [r3, #3]
 800da6e:	f107 0314 	add.w	r3, r7, #20
 800da72:	222c      	movs	r2, #44	; 0x2c
 800da74:	711a      	strb	r2, [r3, #4]
 800da76:	f107 0314 	add.w	r3, r7, #20
 800da7a:	220c      	movs	r2, #12
 800da7c:	715a      	strb	r2, [r3, #5]
 800da7e:	f107 0314 	add.w	r3, r7, #20
 800da82:	222e      	movs	r2, #46	; 0x2e
 800da84:	719a      	strb	r2, [r3, #6]
 800da86:	f107 0314 	add.w	r3, r7, #20
 800da8a:	220b      	movs	r2, #11
 800da8c:	71da      	strb	r2, [r3, #7]
 800da8e:	f107 0314 	add.w	r3, r7, #20
 800da92:	225b      	movs	r2, #91	; 0x5b
 800da94:	721a      	strb	r2, [r3, #8]
 800da96:	f107 0314 	add.w	r3, r7, #20
 800da9a:	220d      	movs	r2, #13
 800da9c:	725a      	strb	r2, [r3, #9]
 800da9e:	f107 0314 	add.w	r3, r7, #20
 800daa2:	225d      	movs	r2, #93	; 0x5d
 800daa4:	729a      	strb	r2, [r3, #10]
 800daa6:	f107 0314 	add.w	r3, r7, #20
 800daaa:	220e      	movs	r2, #14
 800daac:	72da      	strb	r2, [r3, #11]
 800daae:	f107 0314 	add.w	r3, r7, #20
 800dab2:	227c      	movs	r2, #124	; 0x7c
 800dab4:	731a      	strb	r2, [r3, #12]
 800dab6:	f107 0314 	add.w	r3, r7, #20
 800daba:	2215      	movs	r2, #21
 800dabc:	735a      	strb	r2, [r3, #13]
 800dabe:	f107 0314 	add.w	r3, r7, #20
 800dac2:	2226      	movs	r2, #38	; 0x26
 800dac4:	739a      	strb	r2, [r3, #14]
 800dac6:	f107 0314 	add.w	r3, r7, #20
 800daca:	2216      	movs	r2, #22
 800dacc:	73da      	strb	r2, [r3, #15]
 800dace:	f107 0314 	add.w	r3, r7, #20
 800dad2:	222b      	movs	r2, #43	; 0x2b
 800dad4:	741a      	strb	r2, [r3, #16]
 800dad6:	f107 0314 	add.w	r3, r7, #20
 800dada:	221f      	movs	r2, #31
 800dadc:	745a      	strb	r2, [r3, #17]
 800dade:	f107 0314 	add.w	r3, r7, #20
 800dae2:	222d      	movs	r2, #45	; 0x2d
 800dae4:	749a      	strb	r2, [r3, #18]
 800dae6:	f107 0314 	add.w	r3, r7, #20
 800daea:	2220      	movs	r2, #32
 800daec:	74da      	strb	r2, [r3, #19]
 800daee:	f107 0314 	add.w	r3, r7, #20
 800daf2:	222a      	movs	r2, #42	; 0x2a
 800daf4:	751a      	strb	r2, [r3, #20]
 800daf6:	f107 0314 	add.w	r3, r7, #20
 800dafa:	2221      	movs	r2, #33	; 0x21
 800dafc:	755a      	strb	r2, [r3, #21]
 800dafe:	f107 0314 	add.w	r3, r7, #20
 800db02:	222f      	movs	r2, #47	; 0x2f
 800db04:	759a      	strb	r2, [r3, #22]
 800db06:	f107 0314 	add.w	r3, r7, #20
 800db0a:	2222      	movs	r2, #34	; 0x22
 800db0c:	75da      	strb	r2, [r3, #23]
 800db0e:	f107 0314 	add.w	r3, r7, #20
 800db12:	225e      	movs	r2, #94	; 0x5e
 800db14:	761a      	strb	r2, [r3, #24]
 800db16:	f107 0314 	add.w	r3, r7, #20
 800db1a:	2223      	movs	r2, #35	; 0x23
 800db1c:	765a      	strb	r2, [r3, #25]
 800db1e:	f107 0314 	add.w	r3, r7, #20
 800db22:	2225      	movs	r2, #37	; 0x25
 800db24:	769a      	strb	r2, [r3, #26]
 800db26:	f107 0314 	add.w	r3, r7, #20
 800db2a:	2224      	movs	r2, #36	; 0x24
 800db2c:	76da      	strb	r2, [r3, #27]
 800db2e:	f107 0314 	add.w	r3, r7, #20
 800db32:	2228      	movs	r2, #40	; 0x28
 800db34:	771a      	strb	r2, [r3, #28]
 800db36:	f107 0314 	add.w	r3, r7, #20
 800db3a:	2226      	movs	r2, #38	; 0x26
 800db3c:	775a      	strb	r2, [r3, #29]
 800db3e:	f107 0314 	add.w	r3, r7, #20
 800db42:	2229      	movs	r2, #41	; 0x29
 800db44:	779a      	strb	r2, [r3, #30]
 800db46:	f107 0314 	add.w	r3, r7, #20
 800db4a:	2227      	movs	r2, #39	; 0x27
 800db4c:	77da      	strb	r2, [r3, #31]
 800db4e:	f107 0314 	add.w	r3, r7, #20
 800db52:	2225      	movs	r2, #37	; 0x25
 800db54:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 800db58:	f107 030c 	add.w	r3, r7, #12
 800db5c:	f107 0214 	add.w	r2, r7, #20
 800db60:	601a      	str	r2, [r3, #0]
 800db62:	f107 030c 	add.w	r3, r7, #12
 800db66:	2211      	movs	r2, #17
 800db68:	605a      	str	r2, [r3, #4]
 800db6a:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800db6e:	4618      	mov	r0, r3
 800db70:	f7f3 ffbe 	bl	8001af0 <_ZNSaISt4pairIKc10token_typeEEC1Ev>
 800db74:	f107 0138 	add.w	r1, r7, #56	; 0x38
 800db78:	f107 020c 	add.w	r2, r7, #12
 800db7c:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800db80:	9300      	str	r3, [sp, #0]
 800db82:	460b      	mov	r3, r1
 800db84:	ca06      	ldmia	r2, {r1, r2}
 800db86:	4885      	ldr	r0, [pc, #532]	; (800dd9c <_Z41__static_initialization_and_destruction_0ii+0x384>)
 800db88:	f7f3 ffca 	bl	8001b20 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 800db8c:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800db90:	4618      	mov	r0, r3
 800db92:	f7f3 ffb9 	bl	8001b08 <_ZNSaISt4pairIKc10token_typeEED1Ev>
	{"true", TOKEN_TRUE},
 800db96:	2305      	movs	r3, #5
 800db98:	f887 3162 	strb.w	r3, [r7, #354]	; 0x162
};
 800db9c:	f507 72b1 	add.w	r2, r7, #354	; 0x162
 800dba0:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800dba4:	497e      	ldr	r1, [pc, #504]	; (800dda0 <_Z41__static_initialization_and_destruction_0ii+0x388>)
 800dba6:	4618      	mov	r0, r3
 800dba8:	f7f3 faa6 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"false", TOKEN_FALSE},
 800dbac:	2306      	movs	r3, #6
 800dbae:	f887 3163 	strb.w	r3, [r7, #355]	; 0x163
};
 800dbb2:	f207 1263 	addw	r2, r7, #355	; 0x163
 800dbb6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800dbba:	331c      	adds	r3, #28
 800dbbc:	4979      	ldr	r1, [pc, #484]	; (800dda4 <_Z41__static_initialization_and_destruction_0ii+0x38c>)
 800dbbe:	4618      	mov	r0, r3
 800dbc0:	f7f3 fac2 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"setup", TOKEN_SETUP},
 800dbc4:	2307      	movs	r3, #7
 800dbc6:	f887 3164 	strb.w	r3, [r7, #356]	; 0x164
};
 800dbca:	f507 72b2 	add.w	r2, r7, #356	; 0x164
 800dbce:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800dbd2:	3338      	adds	r3, #56	; 0x38
 800dbd4:	4974      	ldr	r1, [pc, #464]	; (800dda8 <_Z41__static_initialization_and_destruction_0ii+0x390>)
 800dbd6:	4618      	mov	r0, r3
 800dbd8:	f7f3 fab6 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"loop", TOKEN_LOOP},
 800dbdc:	2308      	movs	r3, #8
 800dbde:	f887 3165 	strb.w	r3, [r7, #357]	; 0x165
};
 800dbe2:	f207 1265 	addw	r2, r7, #357	; 0x165
 800dbe6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800dbea:	3354      	adds	r3, #84	; 0x54
 800dbec:	496f      	ldr	r1, [pc, #444]	; (800ddac <_Z41__static_initialization_and_destruction_0ii+0x394>)
 800dbee:	4618      	mov	r0, r3
 800dbf0:	f7f3 fa82 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"finish", TOKEN_FINISH},
 800dbf4:	2309      	movs	r3, #9
 800dbf6:	f887 3166 	strb.w	r3, [r7, #358]	; 0x166
};
 800dbfa:	f507 72b3 	add.w	r2, r7, #358	; 0x166
 800dbfe:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800dc02:	3370      	adds	r3, #112	; 0x70
 800dc04:	496a      	ldr	r1, [pc, #424]	; (800ddb0 <_Z41__static_initialization_and_destruction_0ii+0x398>)
 800dc06:	4618      	mov	r0, r3
 800dc08:	f7f3 fac6 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"if", TOKEN_IF},
 800dc0c:	2310      	movs	r3, #16
 800dc0e:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167
};
 800dc12:	f207 1267 	addw	r2, r7, #359	; 0x167
 800dc16:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800dc1a:	338c      	adds	r3, #140	; 0x8c
 800dc1c:	4965      	ldr	r1, [pc, #404]	; (800ddb4 <_Z41__static_initialization_and_destruction_0ii+0x39c>)
 800dc1e:	4618      	mov	r0, r3
 800dc20:	f7f3 fae2 	bl	80011e8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>
	{"elseif", TOKEN_ELSEIF},
 800dc24:	2311      	movs	r3, #17
 800dc26:	f887 3168 	strb.w	r3, [r7, #360]	; 0x168
};
 800dc2a:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 800dc2e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800dc32:	33a8      	adds	r3, #168	; 0xa8
 800dc34:	4960      	ldr	r1, [pc, #384]	; (800ddb8 <_Z41__static_initialization_and_destruction_0ii+0x3a0>)
 800dc36:	4618      	mov	r0, r3
 800dc38:	f7f3 faae 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"else", TOKEN_ELSE},
 800dc3c:	2312      	movs	r3, #18
 800dc3e:	f887 3169 	strb.w	r3, [r7, #361]	; 0x169
};
 800dc42:	f207 1269 	addw	r2, r7, #361	; 0x169
 800dc46:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800dc4a:	33c4      	adds	r3, #196	; 0xc4
 800dc4c:	495b      	ldr	r1, [pc, #364]	; (800ddbc <_Z41__static_initialization_and_destruction_0ii+0x3a4>)
 800dc4e:	4618      	mov	r0, r3
 800dc50:	f7f3 fa52 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"while", TOKEN_WHILE},
 800dc54:	2313      	movs	r3, #19
 800dc56:	f887 316a 	strb.w	r3, [r7, #362]	; 0x16a
};
 800dc5a:	f507 72b5 	add.w	r2, r7, #362	; 0x16a
 800dc5e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800dc62:	33e0      	adds	r3, #224	; 0xe0
 800dc64:	4956      	ldr	r1, [pc, #344]	; (800ddc0 <_Z41__static_initialization_and_destruction_0ii+0x3a8>)
 800dc66:	4618      	mov	r0, r3
 800dc68:	f7f3 fa6e 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"end", TOKEN_END},
 800dc6c:	2314      	movs	r3, #20
 800dc6e:	f887 316b 	strb.w	r3, [r7, #363]	; 0x16b
};
 800dc72:	f207 126b 	addw	r2, r7, #363	; 0x16b
 800dc76:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800dc7a:	33fc      	adds	r3, #252	; 0xfc
 800dc7c:	4951      	ldr	r1, [pc, #324]	; (800ddc4 <_Z41__static_initialization_and_destruction_0ii+0x3ac>)
 800dc7e:	4618      	mov	r0, r3
 800dc80:	f7f3 fada 	bl	8001238 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>
 800dc84:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800dc88:	f107 0248 	add.w	r2, r7, #72	; 0x48
 800dc8c:	601a      	str	r2, [r3, #0]
 800dc8e:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800dc92:	220a      	movs	r2, #10
 800dc94:	605a      	str	r2, [r3, #4]
 800dc96:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800dc9a:	4618      	mov	r0, r3
 800dc9c:	f7f3 ffcd 	bl	8001c3a <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 800dca0:	f507 71b6 	add.w	r1, r7, #364	; 0x16c
 800dca4:	f107 0240 	add.w	r2, r7, #64	; 0x40
 800dca8:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800dcac:	9300      	str	r3, [sp, #0]
 800dcae:	460b      	mov	r3, r1
 800dcb0:	ca06      	ldmia	r2, {r1, r2}
 800dcb2:	4845      	ldr	r0, [pc, #276]	; (800ddc8 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 800dcb4:	f7f3 ffd9 	bl	8001c6a <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>
 800dcb8:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800dcbc:	4618      	mov	r0, r3
 800dcbe:	f7f3 ffc8 	bl	8001c52 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 800dcc2:	f107 0448 	add.w	r4, r7, #72	; 0x48
 800dcc6:	f504 748c 	add.w	r4, r4, #280	; 0x118
 800dcca:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800dcce:	429c      	cmp	r4, r3
 800dcd0:	d004      	beq.n	800dcdc <_Z41__static_initialization_and_destruction_0ii+0x2c4>
 800dcd2:	3c1c      	subs	r4, #28
 800dcd4:	4620      	mov	r0, r4
 800dcd6:	f7f3 fa02 	bl	80010de <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 800dcda:	e7f6      	b.n	800dcca <_Z41__static_initialization_and_destruction_0ii+0x2b2>
};
 800dcdc:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 800dce0:	2200      	movs	r2, #0
 800dce2:	601a      	str	r2, [r3, #0]
 800dce4:	605a      	str	r2, [r3, #4]
 800dce6:	609a      	str	r2, [r3, #8]
 800dce8:	233c      	movs	r3, #60	; 0x3c
 800dcea:	f887 317c 	strb.w	r3, [r7, #380]	; 0x17c
 800dcee:	231b      	movs	r3, #27
 800dcf0:	f887 317d 	strb.w	r3, [r7, #381]	; 0x17d
 800dcf4:	231c      	movs	r3, #28
 800dcf6:	f887 317e 	strb.w	r3, [r7, #382]	; 0x17e
 800dcfa:	233e      	movs	r3, #62	; 0x3e
 800dcfc:	f887 317f 	strb.w	r3, [r7, #383]	; 0x17f
 800dd00:	2319      	movs	r3, #25
 800dd02:	f887 3180 	strb.w	r3, [r7, #384]	; 0x180
 800dd06:	231a      	movs	r3, #26
 800dd08:	f887 3181 	strb.w	r3, [r7, #385]	; 0x181
 800dd0c:	233d      	movs	r3, #61	; 0x3d
 800dd0e:	f887 3182 	strb.w	r3, [r7, #386]	; 0x182
 800dd12:	2318      	movs	r3, #24
 800dd14:	f887 3183 	strb.w	r3, [r7, #387]	; 0x183
 800dd18:	231d      	movs	r3, #29
 800dd1a:	f887 3184 	strb.w	r3, [r7, #388]	; 0x184
 800dd1e:	2321      	movs	r3, #33	; 0x21
 800dd20:	f887 3185 	strb.w	r3, [r7, #389]	; 0x185
 800dd24:	2317      	movs	r3, #23
 800dd26:	f887 3186 	strb.w	r3, [r7, #390]	; 0x186
 800dd2a:	231e      	movs	r3, #30
 800dd2c:	f887 3187 	strb.w	r3, [r7, #391]	; 0x187
 800dd30:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 800dd34:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 800dd38:	2304      	movs	r3, #4
 800dd3a:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 800dd3e:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 800dd42:	4618      	mov	r0, r3
 800dd44:	f7f3 ffc1 	bl	8001cca <_ZNSaISt4pairIKc12double_tokenEEC1Ev>
 800dd48:	f507 72c4 	add.w	r2, r7, #392	; 0x188
 800dd4c:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 800dd50:	9300      	str	r3, [sp, #0]
 800dd52:	4613      	mov	r3, r2
 800dd54:	f507 72ba 	add.w	r2, r7, #372	; 0x174
 800dd58:	ca06      	ldmia	r2, {r1, r2}
 800dd5a:	481c      	ldr	r0, [pc, #112]	; (800ddcc <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 800dd5c:	f7f3 ffcd 	bl	8001cfa <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 800dd60:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 800dd64:	4618      	mov	r0, r3
 800dd66:	f7f3 ffbc 	bl	8001ce2 <_ZNSaISt4pairIKc12double_tokenEED1Ev>
static const std::map<char, double_token> token_double_chars
 800dd6a:	1d3b      	adds	r3, r7, #4
 800dd6c:	681b      	ldr	r3, [r3, #0]
 800dd6e:	2b00      	cmp	r3, #0
 800dd70:	d10e      	bne.n	800dd90 <_Z41__static_initialization_and_destruction_0ii+0x378>
 800dd72:	463b      	mov	r3, r7
 800dd74:	681b      	ldr	r3, [r3, #0]
 800dd76:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800dd7a:	4293      	cmp	r3, r2
 800dd7c:	d108      	bne.n	800dd90 <_Z41__static_initialization_and_destruction_0ii+0x378>
 800dd7e:	4813      	ldr	r0, [pc, #76]	; (800ddcc <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 800dd80:	f7fb fc4d 	bl	800961e <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>
static const std::map<std::string, token_type> token_strings
 800dd84:	4810      	ldr	r0, [pc, #64]	; (800ddc8 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 800dd86:	f7fb fc57 	bl	8009638 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
static const std::map<char, token_type> token_chars
 800dd8a:	4804      	ldr	r0, [pc, #16]	; (800dd9c <_Z41__static_initialization_and_destruction_0ii+0x384>)
 800dd8c:	f7fb fc61 	bl	8009652 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>
 800dd90:	bf00      	nop
 800dd92:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 800dd96:	46bd      	mov	sp, r7
 800dd98:	bd90      	pop	{r4, r7, pc}
 800dd9a:	bf00      	nop
 800dd9c:	2000029c 	.word	0x2000029c
 800dda0:	080276ec 	.word	0x080276ec
 800dda4:	080276f4 	.word	0x080276f4
 800dda8:	080276fc 	.word	0x080276fc
 800ddac:	08027704 	.word	0x08027704
 800ddb0:	0802770c 	.word	0x0802770c
 800ddb4:	08027714 	.word	0x08027714
 800ddb8:	08027718 	.word	0x08027718
 800ddbc:	08027720 	.word	0x08027720
 800ddc0:	08027728 	.word	0x08027728
 800ddc4:	08027730 	.word	0x08027730
 800ddc8:	200002b4 	.word	0x200002b4
 800ddcc:	200002cc 	.word	0x200002cc

0800ddd0 <_GLOBAL__sub_I__ZN21Expression_calculatorC2Ev>:
 800ddd0:	b580      	push	{r7, lr}
 800ddd2:	af00      	add	r7, sp, #0
 800ddd4:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800ddd8:	2001      	movs	r0, #1
 800ddda:	f7ff fe1d 	bl	800da18 <_Z41__static_initialization_and_destruction_0ii>
 800ddde:	bd80      	pop	{r7, pc}

0800dde0 <_GLOBAL__sub_D__ZN21Expression_calculatorC2Ev>:
 800dde0:	b580      	push	{r7, lr}
 800dde2:	af00      	add	r7, sp, #0
 800dde4:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800dde8:	2000      	movs	r0, #0
 800ddea:	f7ff fe15 	bl	800da18 <_Z41__static_initialization_and_destruction_0ii>
 800ddee:	bd80      	pop	{r7, pc}

0800ddf0 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaIS9_EEESt4lessIS5_ESaISt4pairIKS5_SD_EEED1Ev>:
 800ddf0:	b580      	push	{r7, lr}
 800ddf2:	b082      	sub	sp, #8
 800ddf4:	af00      	add	r7, sp, #0
 800ddf6:	6078      	str	r0, [r7, #4]
 800ddf8:	687b      	ldr	r3, [r7, #4]
 800ddfa:	4618      	mov	r0, r3
 800ddfc:	f000 f8c8 	bl	800df90 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EED1Ev>
 800de00:	687b      	ldr	r3, [r7, #4]
 800de02:	4618      	mov	r0, r3
 800de04:	3708      	adds	r7, #8
 800de06:	46bd      	mov	sp, r7
 800de08:	bd80      	pop	{r7, pc}

0800de0a <_ZN16Function_handlerD1Ev>:

typedef Symbol (*function_pointer)(arglist);

#define ADD_FUNCTION(x) functions.insert({#x, &x});

class Function_handler
 800de0a:	b580      	push	{r7, lr}
 800de0c:	b082      	sub	sp, #8
 800de0e:	af00      	add	r7, sp, #0
 800de10:	6078      	str	r0, [r7, #4]
 800de12:	687b      	ldr	r3, [r7, #4]
 800de14:	4618      	mov	r0, r3
 800de16:	f7ff ffeb 	bl	800ddf0 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaIS9_EEESt4lessIS5_ESaISt4pairIKS5_SD_EEED1Ev>
 800de1a:	687b      	ldr	r3, [r7, #4]
 800de1c:	4618      	mov	r0, r3
 800de1e:	3708      	adds	r7, #8
 800de20:	46bd      	mov	sp, r7
 800de22:	bd80      	pop	{r7, pc}

0800de24 <__tcf_0>:
#include "Function_handler.h"

Symbol Function_handler::run_function(Function_call *fcall)
{
	static Function_handler instance;
 800de24:	b580      	push	{r7, lr}
 800de26:	af00      	add	r7, sp, #0
 800de28:	4801      	ldr	r0, [pc, #4]	; (800de30 <__tcf_0+0xc>)
 800de2a:	f7ff ffee 	bl	800de0a <_ZN16Function_handlerD1Ev>
 800de2e:	bd80      	pop	{r7, pc}
 800de30:	20000334 	.word	0x20000334

0800de34 <_ZN16Function_handler12run_functionEP13Function_call>:
{
 800de34:	b590      	push	{r4, r7, lr}
 800de36:	b095      	sub	sp, #84	; 0x54
 800de38:	af00      	add	r7, sp, #0
 800de3a:	6078      	str	r0, [r7, #4]
 800de3c:	6039      	str	r1, [r7, #0]
	static Function_handler instance;
 800de3e:	4b49      	ldr	r3, [pc, #292]	; (800df64 <_ZN16Function_handler12run_functionEP13Function_call+0x130>)
 800de40:	781b      	ldrb	r3, [r3, #0]
 800de42:	f3bf 8f5b 	dmb	ish
 800de46:	b2db      	uxtb	r3, r3
 800de48:	f003 0301 	and.w	r3, r3, #1
 800de4c:	2b00      	cmp	r3, #0
 800de4e:	bf0c      	ite	eq
 800de50:	2301      	moveq	r3, #1
 800de52:	2300      	movne	r3, #0
 800de54:	b2db      	uxtb	r3, r3
 800de56:	2b00      	cmp	r3, #0
 800de58:	d013      	beq.n	800de82 <_ZN16Function_handler12run_functionEP13Function_call+0x4e>
 800de5a:	4842      	ldr	r0, [pc, #264]	; (800df64 <_ZN16Function_handler12run_functionEP13Function_call+0x130>)
 800de5c:	f014 fcd4 	bl	8022808 <__cxa_guard_acquire>
 800de60:	4603      	mov	r3, r0
 800de62:	2b00      	cmp	r3, #0
 800de64:	bf14      	ite	ne
 800de66:	2301      	movne	r3, #1
 800de68:	2300      	moveq	r3, #0
 800de6a:	b2db      	uxtb	r3, r3
 800de6c:	2b00      	cmp	r3, #0
 800de6e:	d008      	beq.n	800de82 <_ZN16Function_handler12run_functionEP13Function_call+0x4e>
 800de70:	483d      	ldr	r0, [pc, #244]	; (800df68 <_ZN16Function_handler12run_functionEP13Function_call+0x134>)
 800de72:	f010 fe2b 	bl	801eacc <_ZN16Function_handlerC1Ev>
 800de76:	483b      	ldr	r0, [pc, #236]	; (800df64 <_ZN16Function_handler12run_functionEP13Function_call+0x130>)
 800de78:	f014 fcd2 	bl	8022820 <__cxa_guard_release>
 800de7c:	483b      	ldr	r0, [pc, #236]	; (800df6c <_ZN16Function_handler12run_functionEP13Function_call+0x138>)
 800de7e:	f016 f908 	bl	8024092 <atexit>

	Position_counter::get_instance().line = fcall->line;
 800de82:	683b      	ldr	r3, [r7, #0]
 800de84:	681c      	ldr	r4, [r3, #0]
 800de86:	f008 fad3 	bl	8016430 <_ZN16Position_counter12get_instanceEv>
 800de8a:	4603      	mov	r3, r0
 800de8c:	601c      	str	r4, [r3, #0]
	Position_counter::get_instance().position = fcall->position;
 800de8e:	683b      	ldr	r3, [r7, #0]
 800de90:	685c      	ldr	r4, [r3, #4]
 800de92:	f008 facd 	bl	8016430 <_ZN16Position_counter12get_instanceEv>
 800de96:	4603      	mov	r3, r0
 800de98:	605c      	str	r4, [r3, #4]

	auto search = instance.functions.find(fcall->id);
 800de9a:	683b      	ldr	r3, [r7, #0]
 800de9c:	3308      	adds	r3, #8
 800de9e:	4619      	mov	r1, r3
 800dea0:	4831      	ldr	r0, [pc, #196]	; (800df68 <_ZN16Function_handler12run_functionEP13Function_call+0x134>)
 800dea2:	f000 f88a 	bl	800dfba <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaIS9_EEESt4lessIS5_ESaISt4pairIKS5_SD_EEE4findERSH_>
 800dea6:	4603      	mov	r3, r0
 800dea8:	60bb      	str	r3, [r7, #8]
	if (search != instance.functions.end())
 800deaa:	482f      	ldr	r0, [pc, #188]	; (800df68 <_ZN16Function_handler12run_functionEP13Function_call+0x134>)
 800deac:	f000 f894 	bl	800dfd8 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaIS9_EEESt4lessIS5_ESaISt4pairIKS5_SD_EEE3endEv>
 800deb0:	4603      	mov	r3, r0
 800deb2:	60fb      	str	r3, [r7, #12]
 800deb4:	f107 020c 	add.w	r2, r7, #12
 800deb8:	f107 0308 	add.w	r3, r7, #8
 800debc:	4611      	mov	r1, r2
 800debe:	4618      	mov	r0, r3
 800dec0:	f000 f897 	bl	800dff2 <_ZStneRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEESJ_>
 800dec4:	4603      	mov	r3, r0
 800dec6:	2b00      	cmp	r3, #0
 800dec8:	d01d      	beq.n	800df06 <_ZN16Function_handler12run_functionEP13Function_call+0xd2>
	{
		function_pointer fun = search->second;
 800deca:	f107 0308 	add.w	r3, r7, #8
 800dece:	4618      	mov	r0, r3
 800ded0:	f000 f8a3 	bl	800e01a <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEptEv>
 800ded4:	4603      	mov	r3, r0
 800ded6:	699b      	ldr	r3, [r3, #24]
 800ded8:	64fb      	str	r3, [r7, #76]	; 0x4c
		return fun(fcall->arguments);
 800deda:	6cfc      	ldr	r4, [r7, #76]	; 0x4c
 800dedc:	683b      	ldr	r3, [r7, #0]
 800dede:	f103 0220 	add.w	r2, r3, #32
 800dee2:	f107 0310 	add.w	r3, r7, #16
 800dee6:	4611      	mov	r1, r2
 800dee8:	4618      	mov	r0, r3
 800deea:	f000 f8a4 	bl	800e036 <_ZNSt6vectorIP10ExpressionSaIS1_EEC1ERKS3_>
 800deee:	687b      	ldr	r3, [r7, #4]
 800def0:	f107 0210 	add.w	r2, r7, #16
 800def4:	4611      	mov	r1, r2
 800def6:	4618      	mov	r0, r3
 800def8:	47a0      	blx	r4
 800defa:	f107 0310 	add.w	r3, r7, #16
 800defe:	4618      	mov	r0, r3
 800df00:	f000 f8d6 	bl	800e0b0 <_ZNSt6vectorIP10ExpressionSaIS1_EED1Ev>
 800df04:	e029      	b.n	800df5a <_ZN16Function_handler12run_functionEP13Function_call+0x126>
	}
	else
	{
		Transmitter::report_error(std::string("function " + fcall->id + " not found"));
 800df06:	683b      	ldr	r3, [r7, #0]
 800df08:	f103 0208 	add.w	r2, r3, #8
 800df0c:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800df10:	4917      	ldr	r1, [pc, #92]	; (800df70 <_ZN16Function_handler12run_functionEP13Function_call+0x13c>)
 800df12:	4618      	mov	r0, r3
 800df14:	f000 f8e7 	bl	800e0e6 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>
 800df18:	f107 031c 	add.w	r3, r7, #28
 800df1c:	f107 0134 	add.w	r1, r7, #52	; 0x34
 800df20:	4a14      	ldr	r2, [pc, #80]	; (800df74 <_ZN16Function_handler12run_functionEP13Function_call+0x140>)
 800df22:	4618      	mov	r0, r3
 800df24:	f000 f904 	bl	800e130 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_>
 800df28:	f107 031c 	add.w	r3, r7, #28
 800df2c:	4618      	mov	r0, r3
 800df2e:	f00a f8f7 	bl	8018120 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 800df32:	f107 031c 	add.w	r3, r7, #28
 800df36:	4618      	mov	r0, r3
 800df38:	f014 ff17 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800df3c:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800df40:	4618      	mov	r0, r3
 800df42:	f014 ff12 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
		return {};
 800df46:	687b      	ldr	r3, [r7, #4]
 800df48:	4618      	mov	r0, r3
 800df4a:	2320      	movs	r3, #32
 800df4c:	461a      	mov	r2, r3
 800df4e:	2100      	movs	r1, #0
 800df50:	f016 f948 	bl	80241e4 <memset>
 800df54:	6878      	ldr	r0, [r7, #4]
 800df56:	f7fe fcae 	bl	800c8b6 <_ZN6SymbolC1Ev>
	}
}
 800df5a:	6878      	ldr	r0, [r7, #4]
 800df5c:	3754      	adds	r7, #84	; 0x54
 800df5e:	46bd      	mov	sp, r7
 800df60:	bd90      	pop	{r4, r7, pc}
 800df62:	bf00      	nop
 800df64:	2000034c 	.word	0x2000034c
 800df68:	20000334 	.word	0x20000334
 800df6c:	0800de25 	.word	0x0800de25
 800df70:	08027734 	.word	0x08027734
 800df74:	08027740 	.word	0x08027740

0800df78 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE13_Rb_tree_implISK_Lb1EED1Ev>:
	struct _Rb_tree_impl
 800df78:	b580      	push	{r7, lr}
 800df7a:	b082      	sub	sp, #8
 800df7c:	af00      	add	r7, sp, #0
 800df7e:	6078      	str	r0, [r7, #4]
 800df80:	6878      	ldr	r0, [r7, #4]
 800df82:	f000 f8ec 	bl	800e15e <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEED1Ev>
 800df86:	687b      	ldr	r3, [r7, #4]
 800df88:	4618      	mov	r0, r3
 800df8a:	3708      	adds	r7, #8
 800df8c:	46bd      	mov	sp, r7
 800df8e:	bd80      	pop	{r7, pc}

0800df90 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EED1Ev>:
      ~_Rb_tree() _GLIBCXX_NOEXCEPT
 800df90:	b580      	push	{r7, lr}
 800df92:	b082      	sub	sp, #8
 800df94:	af00      	add	r7, sp, #0
 800df96:	6078      	str	r0, [r7, #4]
      { _M_erase(_M_begin()); }
 800df98:	6878      	ldr	r0, [r7, #4]
 800df9a:	f000 f90b 	bl	800e1b4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_M_beginEv>
 800df9e:	4603      	mov	r3, r0
 800dfa0:	4619      	mov	r1, r3
 800dfa2:	6878      	ldr	r0, [r7, #4]
 800dfa4:	f000 f8e7 	bl	800e176 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_M_eraseEPSt13_Rb_tree_nodeISG_E>
 800dfa8:	687b      	ldr	r3, [r7, #4]
 800dfaa:	4618      	mov	r0, r3
 800dfac:	f7ff ffe4 	bl	800df78 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE13_Rb_tree_implISK_Lb1EED1Ev>
 800dfb0:	687b      	ldr	r3, [r7, #4]
 800dfb2:	4618      	mov	r0, r3
 800dfb4:	3708      	adds	r7, #8
 800dfb6:	46bd      	mov	sp, r7
 800dfb8:	bd80      	pop	{r7, pc}

0800dfba <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaIS9_EEESt4lessIS5_ESaISt4pairIKS5_SD_EEE4findERSH_>:
       *  pointing to the sought after %pair.  If unsuccessful it returns the
       *  past-the-end ( @c end() ) iterator.
       */

      iterator
      find(const key_type& __x)
 800dfba:	b580      	push	{r7, lr}
 800dfbc:	b082      	sub	sp, #8
 800dfbe:	af00      	add	r7, sp, #0
 800dfc0:	6078      	str	r0, [r7, #4]
 800dfc2:	6039      	str	r1, [r7, #0]
      { return _M_t.find(__x); }
 800dfc4:	687b      	ldr	r3, [r7, #4]
 800dfc6:	6839      	ldr	r1, [r7, #0]
 800dfc8:	4618      	mov	r0, r3
 800dfca:	f000 f8ff 	bl	800e1cc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE4findERS7_>
 800dfce:	4603      	mov	r3, r0
 800dfd0:	4618      	mov	r0, r3
 800dfd2:	3708      	adds	r7, #8
 800dfd4:	46bd      	mov	sp, r7
 800dfd6:	bd80      	pop	{r7, pc}

0800dfd8 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaIS9_EEESt4lessIS5_ESaISt4pairIKS5_SD_EEE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 800dfd8:	b580      	push	{r7, lr}
 800dfda:	b082      	sub	sp, #8
 800dfdc:	af00      	add	r7, sp, #0
 800dfde:	6078      	str	r0, [r7, #4]
      { return _M_t.end(); }
 800dfe0:	687b      	ldr	r3, [r7, #4]
 800dfe2:	4618      	mov	r0, r3
 800dfe4:	f000 f92e 	bl	800e244 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE3endEv>
 800dfe8:	4603      	mov	r3, r0
 800dfea:	4618      	mov	r0, r3
 800dfec:	3708      	adds	r7, #8
 800dfee:	46bd      	mov	sp, r7
 800dff0:	bd80      	pop	{r7, pc}

0800dff2 <_ZStneRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEESJ_>:
      operator!=(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 800dff2:	b480      	push	{r7}
 800dff4:	b083      	sub	sp, #12
 800dff6:	af00      	add	r7, sp, #0
 800dff8:	6078      	str	r0, [r7, #4]
 800dffa:	6039      	str	r1, [r7, #0]
      { return __x._M_node != __y._M_node; }
 800dffc:	687b      	ldr	r3, [r7, #4]
 800dffe:	681a      	ldr	r2, [r3, #0]
 800e000:	683b      	ldr	r3, [r7, #0]
 800e002:	681b      	ldr	r3, [r3, #0]
 800e004:	429a      	cmp	r2, r3
 800e006:	bf14      	ite	ne
 800e008:	2301      	movne	r3, #1
 800e00a:	2300      	moveq	r3, #0
 800e00c:	b2db      	uxtb	r3, r3
 800e00e:	4618      	mov	r0, r3
 800e010:	370c      	adds	r7, #12
 800e012:	46bd      	mov	sp, r7
 800e014:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e018:	4770      	bx	lr

0800e01a <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEptEv>:
      operator->() const _GLIBCXX_NOEXCEPT
 800e01a:	b580      	push	{r7, lr}
 800e01c:	b082      	sub	sp, #8
 800e01e:	af00      	add	r7, sp, #0
 800e020:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type> (_M_node)->_M_valptr(); }
 800e022:	687b      	ldr	r3, [r7, #4]
 800e024:	681b      	ldr	r3, [r3, #0]
 800e026:	4618      	mov	r0, r3
 800e028:	f000 f91d 	bl	800e266 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEE9_M_valptrEv>
 800e02c:	4603      	mov	r3, r0
 800e02e:	4618      	mov	r0, r3
 800e030:	3708      	adds	r7, #8
 800e032:	46bd      	mov	sp, r7
 800e034:	bd80      	pop	{r7, pc}

0800e036 <_ZNSt6vectorIP10ExpressionSaIS1_EEC1ERKS3_>:
      vector(const vector& __x)
 800e036:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e038:	b085      	sub	sp, #20
 800e03a:	af00      	add	r7, sp, #0
 800e03c:	6078      	str	r0, [r7, #4]
 800e03e:	6039      	str	r1, [r7, #0]
	_Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()))
 800e040:	687c      	ldr	r4, [r7, #4]
 800e042:	6838      	ldr	r0, [r7, #0]
 800e044:	f7f3 ff1a 	bl	8001e7c <_ZNKSt6vectorIP10ExpressionSaIS1_EE4sizeEv>
 800e048:	4605      	mov	r5, r0
 800e04a:	683b      	ldr	r3, [r7, #0]
 800e04c:	4618      	mov	r0, r3
 800e04e:	f000 f926 	bl	800e29e <_ZNKSt12_Vector_baseIP10ExpressionSaIS1_EE19_M_get_Tp_allocatorEv>
 800e052:	4602      	mov	r2, r0
 800e054:	f107 030c 	add.w	r3, r7, #12
 800e058:	4611      	mov	r1, r2
 800e05a:	4618      	mov	r0, r3
 800e05c:	f000 f911 	bl	800e282 <_ZN9__gnu_cxx14__alloc_traitsISaIP10ExpressionES2_E17_S_select_on_copyERKS3_>
 800e060:	f107 030c 	add.w	r3, r7, #12
 800e064:	461a      	mov	r2, r3
 800e066:	4629      	mov	r1, r5
 800e068:	4620      	mov	r0, r4
 800e06a:	f000 f93b 	bl	800e2e4 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EEC1EjRKS2_>
 800e06e:	f107 030c 	add.w	r3, r7, #12
 800e072:	4618      	mov	r0, r3
 800e074:	f000 f91e 	bl	800e2b4 <_ZNSaIP10ExpressionED1Ev>
	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 800e078:	6838      	ldr	r0, [r7, #0]
 800e07a:	f000 f960 	bl	800e33e <_ZNKSt6vectorIP10ExpressionSaIS1_EE5beginEv>
 800e07e:	4605      	mov	r5, r0
 800e080:	6838      	ldr	r0, [r7, #0]
 800e082:	f000 f970 	bl	800e366 <_ZNKSt6vectorIP10ExpressionSaIS1_EE3endEv>
 800e086:	4606      	mov	r6, r0
 800e088:	687b      	ldr	r3, [r7, #4]
 800e08a:	681c      	ldr	r4, [r3, #0]
				      _M_get_Tp_allocator());
 800e08c:	687b      	ldr	r3, [r7, #4]
 800e08e:	4618      	mov	r0, r3
 800e090:	f000 f97d 	bl	800e38e <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE19_M_get_Tp_allocatorEv>
 800e094:	4603      	mov	r3, r0
	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 800e096:	4622      	mov	r2, r4
 800e098:	4631      	mov	r1, r6
 800e09a:	4628      	mov	r0, r5
 800e09c:	f000 f982 	bl	800e3a4 <_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E>
 800e0a0:	4602      	mov	r2, r0
	this->_M_impl._M_finish =
 800e0a2:	687b      	ldr	r3, [r7, #4]
 800e0a4:	605a      	str	r2, [r3, #4]
      }
 800e0a6:	687b      	ldr	r3, [r7, #4]
 800e0a8:	4618      	mov	r0, r3
 800e0aa:	3714      	adds	r7, #20
 800e0ac:	46bd      	mov	sp, r7
 800e0ae:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800e0b0 <_ZNSt6vectorIP10ExpressionSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
 800e0b0:	b5b0      	push	{r4, r5, r7, lr}
 800e0b2:	b082      	sub	sp, #8
 800e0b4:	af00      	add	r7, sp, #0
 800e0b6:	6078      	str	r0, [r7, #4]
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 800e0b8:	687b      	ldr	r3, [r7, #4]
 800e0ba:	681c      	ldr	r4, [r3, #0]
 800e0bc:	687b      	ldr	r3, [r7, #4]
 800e0be:	685d      	ldr	r5, [r3, #4]
		      _M_get_Tp_allocator());
 800e0c0:	687b      	ldr	r3, [r7, #4]
 800e0c2:	4618      	mov	r0, r3
 800e0c4:	f000 f963 	bl	800e38e <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE19_M_get_Tp_allocatorEv>
 800e0c8:	4603      	mov	r3, r0
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 800e0ca:	461a      	mov	r2, r3
 800e0cc:	4629      	mov	r1, r5
 800e0ce:	4620      	mov	r0, r4
 800e0d0:	f000 f979 	bl	800e3c6 <_ZSt8_DestroyIPP10ExpressionS1_EvT_S3_RSaIT0_E>
      }
 800e0d4:	687b      	ldr	r3, [r7, #4]
 800e0d6:	4618      	mov	r0, r3
 800e0d8:	f000 f918 	bl	800e30c <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EED1Ev>
 800e0dc:	687b      	ldr	r3, [r7, #4]
 800e0de:	4618      	mov	r0, r3
 800e0e0:	3708      	adds	r7, #8
 800e0e2:	46bd      	mov	sp, r7
 800e0e4:	bdb0      	pop	{r4, r5, r7, pc}

0800e0e6 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>:
    }
#endif  // !_GLIBCXX_USE_CXX11_ABI
   
  template<typename _CharT, typename _Traits, typename _Alloc>
    basic_string<_CharT, _Traits, _Alloc>
    operator+(const _CharT* __lhs,
 800e0e6:	b580      	push	{r7, lr}
 800e0e8:	b086      	sub	sp, #24
 800e0ea:	af00      	add	r7, sp, #0
 800e0ec:	60f8      	str	r0, [r7, #12]
 800e0ee:	60b9      	str	r1, [r7, #8]
 800e0f0:	607a      	str	r2, [r7, #4]
	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
    {
      __glibcxx_requires_string(__lhs);
      typedef basic_string<_CharT, _Traits, _Alloc> __string_type;
      typedef typename __string_type::size_type	  __size_type;
      const __size_type __len = _Traits::length(__lhs);
 800e0f2:	68b8      	ldr	r0, [r7, #8]
 800e0f4:	f7f2 ff9a 	bl	800102c <_ZNSt11char_traitsIcE6lengthEPKc>
 800e0f8:	6178      	str	r0, [r7, #20]
      __string_type __str;
 800e0fa:	68f8      	ldr	r0, [r7, #12]
 800e0fc:	f014 fe14 	bl	8022d28 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>
      __str.reserve(__len + __rhs.size());
 800e100:	6878      	ldr	r0, [r7, #4]
 800e102:	f014 fe66 	bl	8022dd2 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
 800e106:	4602      	mov	r2, r0
 800e108:	697b      	ldr	r3, [r7, #20]
 800e10a:	4413      	add	r3, r2
 800e10c:	4619      	mov	r1, r3
 800e10e:	68f8      	ldr	r0, [r7, #12]
 800e110:	f014 fe6b 	bl	8022dea <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj>
      __str.append(__lhs, __len);
 800e114:	697a      	ldr	r2, [r7, #20]
 800e116:	68b9      	ldr	r1, [r7, #8]
 800e118:	68f8      	ldr	r0, [r7, #12]
 800e11a:	f014 ff9b 	bl	8023054 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcj>
      __str.append(__rhs);
 800e11e:	6879      	ldr	r1, [r7, #4]
 800e120:	68f8      	ldr	r0, [r7, #12]
 800e122:	f014 ff91 	bl	8023048 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_>
      return __str;
 800e126:	bf00      	nop
    }
 800e128:	68f8      	ldr	r0, [r7, #12]
 800e12a:	3718      	adds	r7, #24
 800e12c:	46bd      	mov	sp, r7
 800e12e:	bd80      	pop	{r7, pc}

0800e130 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_>:
    operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
 800e130:	b580      	push	{r7, lr}
 800e132:	b084      	sub	sp, #16
 800e134:	af00      	add	r7, sp, #0
 800e136:	60f8      	str	r0, [r7, #12]
 800e138:	60b9      	str	r1, [r7, #8]
 800e13a:	607a      	str	r2, [r7, #4]
    { return std::move(__lhs.append(__rhs)); }
 800e13c:	6879      	ldr	r1, [r7, #4]
 800e13e:	68b8      	ldr	r0, [r7, #8]
 800e140:	f014 ff98 	bl	8023074 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc>
 800e144:	4603      	mov	r3, r0
 800e146:	4618      	mov	r0, r3
 800e148:	f7fa f81e 	bl	8008188 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
 800e14c:	4603      	mov	r3, r0
 800e14e:	4619      	mov	r1, r3
 800e150:	68f8      	ldr	r0, [r7, #12]
 800e152:	f014 fdf0 	bl	8022d36 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_>
 800e156:	68f8      	ldr	r0, [r7, #12]
 800e158:	3710      	adds	r7, #16
 800e15a:	46bd      	mov	sp, r7
 800e15c:	bd80      	pop	{r7, pc}

0800e15e <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEED1Ev>:
 800e15e:	b580      	push	{r7, lr}
 800e160:	b082      	sub	sp, #8
 800e162:	af00      	add	r7, sp, #0
 800e164:	6078      	str	r0, [r7, #4]
 800e166:	6878      	ldr	r0, [r7, #4]
 800e168:	f000 f93b 	bl	800e3e2 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISD_EEEEEED1Ev>
 800e16c:	687b      	ldr	r3, [r7, #4]
 800e16e:	4618      	mov	r0, r3
 800e170:	3708      	adds	r7, #8
 800e172:	46bd      	mov	sp, r7
 800e174:	bd80      	pop	{r7, pc}

0800e176 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_M_eraseEPSt13_Rb_tree_nodeISG_E>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 800e176:	b580      	push	{r7, lr}
 800e178:	b084      	sub	sp, #16
 800e17a:	af00      	add	r7, sp, #0
 800e17c:	6078      	str	r0, [r7, #4]
 800e17e:	6039      	str	r1, [r7, #0]
      while (__x != 0)
 800e180:	683b      	ldr	r3, [r7, #0]
 800e182:	2b00      	cmp	r3, #0
 800e184:	d012      	beq.n	800e1ac <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_M_eraseEPSt13_Rb_tree_nodeISG_E+0x36>
	  _M_erase(_S_right(__x));
 800e186:	6838      	ldr	r0, [r7, #0]
 800e188:	f000 f936 	bl	800e3f8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_S_rightEPSt18_Rb_tree_node_base>
 800e18c:	4603      	mov	r3, r0
 800e18e:	4619      	mov	r1, r3
 800e190:	6878      	ldr	r0, [r7, #4]
 800e192:	f7ff fff0 	bl	800e176 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_M_eraseEPSt13_Rb_tree_nodeISG_E>
	  _Link_type __y = _S_left(__x);
 800e196:	6838      	ldr	r0, [r7, #0]
 800e198:	f000 f93a 	bl	800e410 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE7_S_leftEPSt18_Rb_tree_node_base>
 800e19c:	60f8      	str	r0, [r7, #12]
	  _M_drop_node(__x);
 800e19e:	6839      	ldr	r1, [r7, #0]
 800e1a0:	6878      	ldr	r0, [r7, #4]
 800e1a2:	f000 f941 	bl	800e428 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE12_M_drop_nodeEPSt13_Rb_tree_nodeISG_E>
	  __x = __y;
 800e1a6:	68fb      	ldr	r3, [r7, #12]
 800e1a8:	603b      	str	r3, [r7, #0]
      while (__x != 0)
 800e1aa:	e7e9      	b.n	800e180 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_M_eraseEPSt13_Rb_tree_nodeISG_E+0xa>
    }
 800e1ac:	bf00      	nop
 800e1ae:	3710      	adds	r7, #16
 800e1b0:	46bd      	mov	sp, r7
 800e1b2:	bd80      	pop	{r7, pc}

0800e1b4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_M_beginEv>:
      _M_begin() _GLIBCXX_NOEXCEPT
 800e1b4:	b480      	push	{r7}
 800e1b6:	b083      	sub	sp, #12
 800e1b8:	af00      	add	r7, sp, #0
 800e1ba:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
 800e1bc:	687b      	ldr	r3, [r7, #4]
 800e1be:	689b      	ldr	r3, [r3, #8]
 800e1c0:	4618      	mov	r0, r3
 800e1c2:	370c      	adds	r7, #12
 800e1c4:	46bd      	mov	sp, r7
 800e1c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e1ca:	4770      	bx	lr

0800e1cc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE4findERS7_>:

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    typename _Rb_tree<_Key, _Val, _KeyOfValue,
		      _Compare, _Alloc>::iterator
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 800e1cc:	b590      	push	{r4, r7, lr}
 800e1ce:	b085      	sub	sp, #20
 800e1d0:	af00      	add	r7, sp, #0
 800e1d2:	6078      	str	r0, [r7, #4]
 800e1d4:	6039      	str	r1, [r7, #0]
    find(const _Key& __k)
    {
      iterator __j = _M_lower_bound(_M_begin(), _M_end(), __k);
 800e1d6:	6878      	ldr	r0, [r7, #4]
 800e1d8:	f7ff ffec 	bl	800e1b4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_M_beginEv>
 800e1dc:	4604      	mov	r4, r0
 800e1de:	6878      	ldr	r0, [r7, #4]
 800e1e0:	f000 f933 	bl	800e44a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE6_M_endEv>
 800e1e4:	4602      	mov	r2, r0
 800e1e6:	683b      	ldr	r3, [r7, #0]
 800e1e8:	4621      	mov	r1, r4
 800e1ea:	6878      	ldr	r0, [r7, #4]
 800e1ec:	f000 f939 	bl	800e462 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE14_M_lower_boundEPSt13_Rb_tree_nodeISG_EPSt18_Rb_tree_node_baseRS7_>
 800e1f0:	4603      	mov	r3, r0
 800e1f2:	60bb      	str	r3, [r7, #8]
      return (__j == end()
 800e1f4:	6878      	ldr	r0, [r7, #4]
 800e1f6:	f000 f825 	bl	800e244 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE3endEv>
 800e1fa:	4603      	mov	r3, r0
 800e1fc:	60fb      	str	r3, [r7, #12]
 800e1fe:	f107 020c 	add.w	r2, r7, #12
 800e202:	f107 0308 	add.w	r3, r7, #8
 800e206:	4611      	mov	r1, r2
 800e208:	4618      	mov	r0, r3
 800e20a:	f000 f95b 	bl	800e4c4 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEESJ_>
 800e20e:	4603      	mov	r3, r0
	      || _M_impl._M_key_compare(__k,
					_S_key(__j._M_node))) ? end() : __j;
 800e210:	2b00      	cmp	r3, #0
 800e212:	d10d      	bne.n	800e230 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE4findERS7_+0x64>
	      || _M_impl._M_key_compare(__k,
 800e214:	687c      	ldr	r4, [r7, #4]
					_S_key(__j._M_node))) ? end() : __j;
 800e216:	68bb      	ldr	r3, [r7, #8]
	      || _M_impl._M_key_compare(__k,
 800e218:	4618      	mov	r0, r3
 800e21a:	f000 f967 	bl	800e4ec <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE6_S_keyEPKSt18_Rb_tree_node_base>
 800e21e:	4603      	mov	r3, r0
 800e220:	461a      	mov	r2, r3
 800e222:	6839      	ldr	r1, [r7, #0]
 800e224:	4620      	mov	r0, r4
 800e226:	f7f7 fa41 	bl	80056ac <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 800e22a:	4603      	mov	r3, r0
 800e22c:	2b00      	cmp	r3, #0
 800e22e:	d004      	beq.n	800e23a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE4findERS7_+0x6e>
					_S_key(__j._M_node))) ? end() : __j;
 800e230:	6878      	ldr	r0, [r7, #4]
 800e232:	f000 f807 	bl	800e244 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE3endEv>
 800e236:	4603      	mov	r3, r0
 800e238:	e000      	b.n	800e23c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE4findERS7_+0x70>
 800e23a:	68bb      	ldr	r3, [r7, #8]
    }
 800e23c:	4618      	mov	r0, r3
 800e23e:	3714      	adds	r7, #20
 800e240:	46bd      	mov	sp, r7
 800e242:	bd90      	pop	{r4, r7, pc}

0800e244 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 800e244:	b580      	push	{r7, lr}
 800e246:	b084      	sub	sp, #16
 800e248:	af00      	add	r7, sp, #0
 800e24a:	6078      	str	r0, [r7, #4]
      { return iterator(&this->_M_impl._M_header); }
 800e24c:	687b      	ldr	r3, [r7, #4]
 800e24e:	1d1a      	adds	r2, r3, #4
 800e250:	f107 030c 	add.w	r3, r7, #12
 800e254:	4611      	mov	r1, r2
 800e256:	4618      	mov	r0, r3
 800e258:	f000 f954 	bl	800e504 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEC1EPSt18_Rb_tree_node_base>
 800e25c:	68fb      	ldr	r3, [r7, #12]
 800e25e:	4618      	mov	r0, r3
 800e260:	3710      	adds	r7, #16
 800e262:	46bd      	mov	sp, r7
 800e264:	bd80      	pop	{r7, pc}

0800e266 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEE9_M_valptrEv>:
      _M_valptr()
 800e266:	b580      	push	{r7, lr}
 800e268:	b082      	sub	sp, #8
 800e26a:	af00      	add	r7, sp, #0
 800e26c:	6078      	str	r0, [r7, #4]
      { return _M_storage._M_ptr(); }
 800e26e:	687b      	ldr	r3, [r7, #4]
 800e270:	3310      	adds	r3, #16
 800e272:	4618      	mov	r0, r3
 800e274:	f000 f955 	bl	800e522 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEE6_M_ptrEv>
 800e278:	4603      	mov	r3, r0
 800e27a:	4618      	mov	r0, r3
 800e27c:	3708      	adds	r7, #8
 800e27e:	46bd      	mov	sp, r7
 800e280:	bd80      	pop	{r7, pc}

0800e282 <_ZN9__gnu_cxx14__alloc_traitsISaIP10ExpressionES2_E17_S_select_on_copyERKS3_>:
    static _Alloc _S_select_on_copy(const _Alloc& __a)
 800e282:	b580      	push	{r7, lr}
 800e284:	b082      	sub	sp, #8
 800e286:	af00      	add	r7, sp, #0
 800e288:	6078      	str	r0, [r7, #4]
 800e28a:	6039      	str	r1, [r7, #0]
    { return _Base_type::select_on_container_copy_construction(__a); }
 800e28c:	687b      	ldr	r3, [r7, #4]
 800e28e:	6839      	ldr	r1, [r7, #0]
 800e290:	4618      	mov	r0, r3
 800e292:	f000 f952 	bl	800e53a <_ZNSt16allocator_traitsISaIP10ExpressionEE37select_on_container_copy_constructionERKS2_>
 800e296:	6878      	ldr	r0, [r7, #4]
 800e298:	3708      	adds	r7, #8
 800e29a:	46bd      	mov	sp, r7
 800e29c:	bd80      	pop	{r7, pc}

0800e29e <_ZNKSt12_Vector_baseIP10ExpressionSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 800e29e:	b480      	push	{r7}
 800e2a0:	b083      	sub	sp, #12
 800e2a2:	af00      	add	r7, sp, #0
 800e2a4:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 800e2a6:	687b      	ldr	r3, [r7, #4]
 800e2a8:	4618      	mov	r0, r3
 800e2aa:	370c      	adds	r7, #12
 800e2ac:	46bd      	mov	sp, r7
 800e2ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e2b2:	4770      	bx	lr

0800e2b4 <_ZNSaIP10ExpressionED1Ev>:
 800e2b4:	b580      	push	{r7, lr}
 800e2b6:	b082      	sub	sp, #8
 800e2b8:	af00      	add	r7, sp, #0
 800e2ba:	6078      	str	r0, [r7, #4]
 800e2bc:	6878      	ldr	r0, [r7, #4]
 800e2be:	f000 f949 	bl	800e554 <_ZN9__gnu_cxx13new_allocatorIP10ExpressionED1Ev>
 800e2c2:	687b      	ldr	r3, [r7, #4]
 800e2c4:	4618      	mov	r0, r3
 800e2c6:	3708      	adds	r7, #8
 800e2c8:	46bd      	mov	sp, r7
 800e2ca:	bd80      	pop	{r7, pc}

0800e2cc <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
 800e2cc:	b580      	push	{r7, lr}
 800e2ce:	b082      	sub	sp, #8
 800e2d0:	af00      	add	r7, sp, #0
 800e2d2:	6078      	str	r0, [r7, #4]
 800e2d4:	6878      	ldr	r0, [r7, #4]
 800e2d6:	f7ff ffed 	bl	800e2b4 <_ZNSaIP10ExpressionED1Ev>
 800e2da:	687b      	ldr	r3, [r7, #4]
 800e2dc:	4618      	mov	r0, r3
 800e2de:	3708      	adds	r7, #8
 800e2e0:	46bd      	mov	sp, r7
 800e2e2:	bd80      	pop	{r7, pc}

0800e2e4 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EEC1EjRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
 800e2e4:	b580      	push	{r7, lr}
 800e2e6:	b084      	sub	sp, #16
 800e2e8:	af00      	add	r7, sp, #0
 800e2ea:	60f8      	str	r0, [r7, #12]
 800e2ec:	60b9      	str	r1, [r7, #8]
 800e2ee:	607a      	str	r2, [r7, #4]
      : _M_impl(__a)
 800e2f0:	68fb      	ldr	r3, [r7, #12]
 800e2f2:	6879      	ldr	r1, [r7, #4]
 800e2f4:	4618      	mov	r0, r3
 800e2f6:	f000 f938 	bl	800e56a <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
 800e2fa:	68b9      	ldr	r1, [r7, #8]
 800e2fc:	68f8      	ldr	r0, [r7, #12]
 800e2fe:	f000 f946 	bl	800e58e <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE17_M_create_storageEj>
 800e302:	68fb      	ldr	r3, [r7, #12]
 800e304:	4618      	mov	r0, r3
 800e306:	3710      	adds	r7, #16
 800e308:	46bd      	mov	sp, r7
 800e30a:	bd80      	pop	{r7, pc}

0800e30c <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
 800e30c:	b580      	push	{r7, lr}
 800e30e:	b082      	sub	sp, #8
 800e310:	af00      	add	r7, sp, #0
 800e312:	6078      	str	r0, [r7, #4]
	_M_deallocate(_M_impl._M_start,
 800e314:	687b      	ldr	r3, [r7, #4]
 800e316:	6819      	ldr	r1, [r3, #0]
		      _M_impl._M_end_of_storage - _M_impl._M_start);
 800e318:	687b      	ldr	r3, [r7, #4]
 800e31a:	689a      	ldr	r2, [r3, #8]
 800e31c:	687b      	ldr	r3, [r7, #4]
 800e31e:	681b      	ldr	r3, [r3, #0]
 800e320:	1ad3      	subs	r3, r2, r3
 800e322:	109b      	asrs	r3, r3, #2
	_M_deallocate(_M_impl._M_start,
 800e324:	461a      	mov	r2, r3
 800e326:	6878      	ldr	r0, [r7, #4]
 800e328:	f000 f94c 	bl	800e5c4 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE13_M_deallocateEPS1_j>
      }
 800e32c:	687b      	ldr	r3, [r7, #4]
 800e32e:	4618      	mov	r0, r3
 800e330:	f7ff ffcc 	bl	800e2cc <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE12_Vector_implD1Ev>
 800e334:	687b      	ldr	r3, [r7, #4]
 800e336:	4618      	mov	r0, r3
 800e338:	3708      	adds	r7, #8
 800e33a:	46bd      	mov	sp, r7
 800e33c:	bd80      	pop	{r7, pc}

0800e33e <_ZNKSt6vectorIP10ExpressionSaIS1_EE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
 800e33e:	b580      	push	{r7, lr}
 800e340:	b084      	sub	sp, #16
 800e342:	af00      	add	r7, sp, #0
 800e344:	6078      	str	r0, [r7, #4]
      { return const_iterator(this->_M_impl._M_start); }
 800e346:	687b      	ldr	r3, [r7, #4]
 800e348:	681b      	ldr	r3, [r3, #0]
 800e34a:	60fb      	str	r3, [r7, #12]
 800e34c:	f107 020c 	add.w	r2, r7, #12
 800e350:	f107 0308 	add.w	r3, r7, #8
 800e354:	4611      	mov	r1, r2
 800e356:	4618      	mov	r0, r3
 800e358:	f000 f947 	bl	800e5ea <_ZN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS2_SaIS2_EEEC1ERKS4_>
 800e35c:	68bb      	ldr	r3, [r7, #8]
 800e35e:	4618      	mov	r0, r3
 800e360:	3710      	adds	r7, #16
 800e362:	46bd      	mov	sp, r7
 800e364:	bd80      	pop	{r7, pc}

0800e366 <_ZNKSt6vectorIP10ExpressionSaIS1_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
 800e366:	b580      	push	{r7, lr}
 800e368:	b084      	sub	sp, #16
 800e36a:	af00      	add	r7, sp, #0
 800e36c:	6078      	str	r0, [r7, #4]
      { return const_iterator(this->_M_impl._M_finish); }
 800e36e:	687b      	ldr	r3, [r7, #4]
 800e370:	685b      	ldr	r3, [r3, #4]
 800e372:	60fb      	str	r3, [r7, #12]
 800e374:	f107 020c 	add.w	r2, r7, #12
 800e378:	f107 0308 	add.w	r3, r7, #8
 800e37c:	4611      	mov	r1, r2
 800e37e:	4618      	mov	r0, r3
 800e380:	f000 f933 	bl	800e5ea <_ZN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS2_SaIS2_EEEC1ERKS4_>
 800e384:	68bb      	ldr	r3, [r7, #8]
 800e386:	4618      	mov	r0, r3
 800e388:	3710      	adds	r7, #16
 800e38a:	46bd      	mov	sp, r7
 800e38c:	bd80      	pop	{r7, pc}

0800e38e <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 800e38e:	b480      	push	{r7}
 800e390:	b083      	sub	sp, #12
 800e392:	af00      	add	r7, sp, #0
 800e394:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 800e396:	687b      	ldr	r3, [r7, #4]
 800e398:	4618      	mov	r0, r3
 800e39a:	370c      	adds	r7, #12
 800e39c:	46bd      	mov	sp, r7
 800e39e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e3a2:	4770      	bx	lr

0800e3a4 <_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
 800e3a4:	b580      	push	{r7, lr}
 800e3a6:	b084      	sub	sp, #16
 800e3a8:	af00      	add	r7, sp, #0
 800e3aa:	60f8      	str	r0, [r7, #12]
 800e3ac:	60b9      	str	r1, [r7, #8]
 800e3ae:	607a      	str	r2, [r7, #4]
 800e3b0:	603b      	str	r3, [r7, #0]
    { return std::uninitialized_copy(__first, __last, __result); }
 800e3b2:	687a      	ldr	r2, [r7, #4]
 800e3b4:	68b9      	ldr	r1, [r7, #8]
 800e3b6:	68f8      	ldr	r0, [r7, #12]
 800e3b8:	f000 f927 	bl	800e60a <_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_>
 800e3bc:	4603      	mov	r3, r0
 800e3be:	4618      	mov	r0, r3
 800e3c0:	3710      	adds	r7, #16
 800e3c2:	46bd      	mov	sp, r7
 800e3c4:	bd80      	pop	{r7, pc}

0800e3c6 <_ZSt8_DestroyIPP10ExpressionS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 800e3c6:	b580      	push	{r7, lr}
 800e3c8:	b084      	sub	sp, #16
 800e3ca:	af00      	add	r7, sp, #0
 800e3cc:	60f8      	str	r0, [r7, #12]
 800e3ce:	60b9      	str	r1, [r7, #8]
 800e3d0:	607a      	str	r2, [r7, #4]
      _Destroy(__first, __last);
 800e3d2:	68b9      	ldr	r1, [r7, #8]
 800e3d4:	68f8      	ldr	r0, [r7, #12]
 800e3d6:	f000 f92a 	bl	800e62e <_ZSt8_DestroyIPP10ExpressionEvT_S3_>
    }
 800e3da:	bf00      	nop
 800e3dc:	3710      	adds	r7, #16
 800e3de:	46bd      	mov	sp, r7
 800e3e0:	bd80      	pop	{r7, pc}

0800e3e2 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISD_EEEEEED1Ev>:
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 800e3e2:	b480      	push	{r7}
 800e3e4:	b083      	sub	sp, #12
 800e3e6:	af00      	add	r7, sp, #0
 800e3e8:	6078      	str	r0, [r7, #4]
 800e3ea:	687b      	ldr	r3, [r7, #4]
 800e3ec:	4618      	mov	r0, r3
 800e3ee:	370c      	adds	r7, #12
 800e3f0:	46bd      	mov	sp, r7
 800e3f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e3f6:	4770      	bx	lr

0800e3f8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_S_rightEPSt18_Rb_tree_node_base>:
      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 800e3f8:	b480      	push	{r7}
 800e3fa:	b083      	sub	sp, #12
 800e3fc:	af00      	add	r7, sp, #0
 800e3fe:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(__x->_M_right); }
 800e400:	687b      	ldr	r3, [r7, #4]
 800e402:	68db      	ldr	r3, [r3, #12]
 800e404:	4618      	mov	r0, r3
 800e406:	370c      	adds	r7, #12
 800e408:	46bd      	mov	sp, r7
 800e40a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e40e:	4770      	bx	lr

0800e410 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE7_S_leftEPSt18_Rb_tree_node_base>:
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 800e410:	b480      	push	{r7}
 800e412:	b083      	sub	sp, #12
 800e414:	af00      	add	r7, sp, #0
 800e416:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(__x->_M_left); }
 800e418:	687b      	ldr	r3, [r7, #4]
 800e41a:	689b      	ldr	r3, [r3, #8]
 800e41c:	4618      	mov	r0, r3
 800e41e:	370c      	adds	r7, #12
 800e420:	46bd      	mov	sp, r7
 800e422:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e426:	4770      	bx	lr

0800e428 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE12_M_drop_nodeEPSt13_Rb_tree_nodeISG_E>:
      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 800e428:	b580      	push	{r7, lr}
 800e42a:	b082      	sub	sp, #8
 800e42c:	af00      	add	r7, sp, #0
 800e42e:	6078      	str	r0, [r7, #4]
 800e430:	6039      	str	r1, [r7, #0]
	_M_destroy_node(__p);
 800e432:	6839      	ldr	r1, [r7, #0]
 800e434:	6878      	ldr	r0, [r7, #4]
 800e436:	f000 f907 	bl	800e648 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeISG_E>
	_M_put_node(__p);
 800e43a:	6839      	ldr	r1, [r7, #0]
 800e43c:	6878      	ldr	r0, [r7, #4]
 800e43e:	f000 f918 	bl	800e672 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE11_M_put_nodeEPSt13_Rb_tree_nodeISG_E>
      }
 800e442:	bf00      	nop
 800e444:	3708      	adds	r7, #8
 800e446:	46bd      	mov	sp, r7
 800e448:	bd80      	pop	{r7, pc}

0800e44a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE6_M_endEv>:
      _M_end() _GLIBCXX_NOEXCEPT
 800e44a:	b480      	push	{r7}
 800e44c:	b083      	sub	sp, #12
 800e44e:	af00      	add	r7, sp, #0
 800e450:	6078      	str	r0, [r7, #4]
      { return &this->_M_impl._M_header; }
 800e452:	687b      	ldr	r3, [r7, #4]
 800e454:	3304      	adds	r3, #4
 800e456:	4618      	mov	r0, r3
 800e458:	370c      	adds	r7, #12
 800e45a:	46bd      	mov	sp, r7
 800e45c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e460:	4770      	bx	lr

0800e462 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE14_M_lower_boundEPSt13_Rb_tree_nodeISG_EPSt18_Rb_tree_node_baseRS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 800e462:	b590      	push	{r4, r7, lr}
 800e464:	b087      	sub	sp, #28
 800e466:	af00      	add	r7, sp, #0
 800e468:	60f8      	str	r0, [r7, #12]
 800e46a:	60b9      	str	r1, [r7, #8]
 800e46c:	607a      	str	r2, [r7, #4]
 800e46e:	603b      	str	r3, [r7, #0]
      while (__x != 0)
 800e470:	68bb      	ldr	r3, [r7, #8]
 800e472:	2b00      	cmp	r3, #0
 800e474:	d01b      	beq.n	800e4ae <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE14_M_lower_boundEPSt13_Rb_tree_nodeISG_EPSt18_Rb_tree_node_baseRS7_+0x4c>
	if (!_M_impl._M_key_compare(_S_key(__x), __k))
 800e476:	68fc      	ldr	r4, [r7, #12]
 800e478:	68b8      	ldr	r0, [r7, #8]
 800e47a:	f000 f90c 	bl	800e696 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE6_S_keyEPKSt13_Rb_tree_nodeISG_E>
 800e47e:	4603      	mov	r3, r0
 800e480:	683a      	ldr	r2, [r7, #0]
 800e482:	4619      	mov	r1, r3
 800e484:	4620      	mov	r0, r4
 800e486:	f7f7 f911 	bl	80056ac <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 800e48a:	4603      	mov	r3, r0
 800e48c:	f083 0301 	eor.w	r3, r3, #1
 800e490:	b2db      	uxtb	r3, r3
 800e492:	2b00      	cmp	r3, #0
 800e494:	d006      	beq.n	800e4a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE14_M_lower_boundEPSt13_Rb_tree_nodeISG_EPSt18_Rb_tree_node_baseRS7_+0x42>
	  __y = __x, __x = _S_left(__x);
 800e496:	68bb      	ldr	r3, [r7, #8]
 800e498:	607b      	str	r3, [r7, #4]
 800e49a:	68b8      	ldr	r0, [r7, #8]
 800e49c:	f7ff ffb8 	bl	800e410 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE7_S_leftEPSt18_Rb_tree_node_base>
 800e4a0:	60b8      	str	r0, [r7, #8]
 800e4a2:	e7e5      	b.n	800e470 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE14_M_lower_boundEPSt13_Rb_tree_nodeISG_EPSt18_Rb_tree_node_baseRS7_+0xe>
	  __x = _S_right(__x);
 800e4a4:	68b8      	ldr	r0, [r7, #8]
 800e4a6:	f7ff ffa7 	bl	800e3f8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_S_rightEPSt18_Rb_tree_node_base>
 800e4aa:	60b8      	str	r0, [r7, #8]
      while (__x != 0)
 800e4ac:	e7e0      	b.n	800e470 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE14_M_lower_boundEPSt13_Rb_tree_nodeISG_EPSt18_Rb_tree_node_baseRS7_+0xe>
      return iterator(__y);
 800e4ae:	f107 0314 	add.w	r3, r7, #20
 800e4b2:	6879      	ldr	r1, [r7, #4]
 800e4b4:	4618      	mov	r0, r3
 800e4b6:	f000 f825 	bl	800e504 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEC1EPSt18_Rb_tree_node_base>
 800e4ba:	697b      	ldr	r3, [r7, #20]
    }
 800e4bc:	4618      	mov	r0, r3
 800e4be:	371c      	adds	r7, #28
 800e4c0:	46bd      	mov	sp, r7
 800e4c2:	bd90      	pop	{r4, r7, pc}

0800e4c4 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEESJ_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 800e4c4:	b480      	push	{r7}
 800e4c6:	b083      	sub	sp, #12
 800e4c8:	af00      	add	r7, sp, #0
 800e4ca:	6078      	str	r0, [r7, #4]
 800e4cc:	6039      	str	r1, [r7, #0]
      { return __x._M_node == __y._M_node; }
 800e4ce:	687b      	ldr	r3, [r7, #4]
 800e4d0:	681a      	ldr	r2, [r3, #0]
 800e4d2:	683b      	ldr	r3, [r7, #0]
 800e4d4:	681b      	ldr	r3, [r3, #0]
 800e4d6:	429a      	cmp	r2, r3
 800e4d8:	bf0c      	ite	eq
 800e4da:	2301      	moveq	r3, #1
 800e4dc:	2300      	movne	r3, #0
 800e4de:	b2db      	uxtb	r3, r3
 800e4e0:	4618      	mov	r0, r3
 800e4e2:	370c      	adds	r7, #12
 800e4e4:	46bd      	mov	sp, r7
 800e4e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e4ea:	4770      	bx	lr

0800e4ec <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE6_S_keyEPKSt18_Rb_tree_node_base>:
      _S_key(_Const_Base_ptr __x)
 800e4ec:	b580      	push	{r7, lr}
 800e4ee:	b082      	sub	sp, #8
 800e4f0:	af00      	add	r7, sp, #0
 800e4f2:	6078      	str	r0, [r7, #4]
      { return _S_key(static_cast<_Const_Link_type>(__x)); }
 800e4f4:	6878      	ldr	r0, [r7, #4]
 800e4f6:	f000 f8ce 	bl	800e696 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE6_S_keyEPKSt13_Rb_tree_nodeISG_E>
 800e4fa:	4603      	mov	r3, r0
 800e4fc:	4618      	mov	r0, r3
 800e4fe:	3708      	adds	r7, #8
 800e500:	46bd      	mov	sp, r7
 800e502:	bd80      	pop	{r7, pc}

0800e504 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEC1EPSt18_Rb_tree_node_base>:
      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 800e504:	b480      	push	{r7}
 800e506:	b083      	sub	sp, #12
 800e508:	af00      	add	r7, sp, #0
 800e50a:	6078      	str	r0, [r7, #4]
 800e50c:	6039      	str	r1, [r7, #0]
      : _M_node(__x) { }
 800e50e:	687b      	ldr	r3, [r7, #4]
 800e510:	683a      	ldr	r2, [r7, #0]
 800e512:	601a      	str	r2, [r3, #0]
 800e514:	687b      	ldr	r3, [r7, #4]
 800e516:	4618      	mov	r0, r3
 800e518:	370c      	adds	r7, #12
 800e51a:	46bd      	mov	sp, r7
 800e51c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e520:	4770      	bx	lr

0800e522 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEE6_M_ptrEv>:
      _M_ptr() noexcept
 800e522:	b580      	push	{r7, lr}
 800e524:	b082      	sub	sp, #8
 800e526:	af00      	add	r7, sp, #0
 800e528:	6078      	str	r0, [r7, #4]
      { return static_cast<_Tp*>(_M_addr()); }
 800e52a:	6878      	ldr	r0, [r7, #4]
 800e52c:	f000 f8c6 	bl	800e6bc <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEE7_M_addrEv>
 800e530:	4603      	mov	r3, r0
 800e532:	4618      	mov	r0, r3
 800e534:	3708      	adds	r7, #8
 800e536:	46bd      	mov	sp, r7
 800e538:	bd80      	pop	{r7, pc}

0800e53a <_ZNSt16allocator_traitsISaIP10ExpressionEE37select_on_container_copy_constructionERKS2_>:
      select_on_container_copy_construction(const allocator_type& __rhs)
 800e53a:	b580      	push	{r7, lr}
 800e53c:	b082      	sub	sp, #8
 800e53e:	af00      	add	r7, sp, #0
 800e540:	6078      	str	r0, [r7, #4]
 800e542:	6039      	str	r1, [r7, #0]
      { return __rhs; }
 800e544:	6839      	ldr	r1, [r7, #0]
 800e546:	6878      	ldr	r0, [r7, #4]
 800e548:	f000 f8c3 	bl	800e6d2 <_ZNSaIP10ExpressionEC1ERKS1_>
 800e54c:	6878      	ldr	r0, [r7, #4]
 800e54e:	3708      	adds	r7, #8
 800e550:	46bd      	mov	sp, r7
 800e552:	bd80      	pop	{r7, pc}

0800e554 <_ZN9__gnu_cxx13new_allocatorIP10ExpressionED1Ev>:
 800e554:	b480      	push	{r7}
 800e556:	b083      	sub	sp, #12
 800e558:	af00      	add	r7, sp, #0
 800e55a:	6078      	str	r0, [r7, #4]
 800e55c:	687b      	ldr	r3, [r7, #4]
 800e55e:	4618      	mov	r0, r3
 800e560:	370c      	adds	r7, #12
 800e562:	46bd      	mov	sp, r7
 800e564:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e568:	4770      	bx	lr

0800e56a <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
 800e56a:	b580      	push	{r7, lr}
 800e56c:	b082      	sub	sp, #8
 800e56e:	af00      	add	r7, sp, #0
 800e570:	6078      	str	r0, [r7, #4]
 800e572:	6039      	str	r1, [r7, #0]
	: _Tp_alloc_type(__a)
 800e574:	6839      	ldr	r1, [r7, #0]
 800e576:	6878      	ldr	r0, [r7, #4]
 800e578:	f000 f8ab 	bl	800e6d2 <_ZNSaIP10ExpressionEC1ERKS1_>
 800e57c:	687b      	ldr	r3, [r7, #4]
 800e57e:	4618      	mov	r0, r3
 800e580:	f000 f8b5 	bl	800e6ee <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
 800e584:	687b      	ldr	r3, [r7, #4]
 800e586:	4618      	mov	r0, r3
 800e588:	3708      	adds	r7, #8
 800e58a:	46bd      	mov	sp, r7
 800e58c:	bd80      	pop	{r7, pc}

0800e58e <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE17_M_create_storageEj>:
      _M_create_storage(size_t __n)
 800e58e:	b580      	push	{r7, lr}
 800e590:	b082      	sub	sp, #8
 800e592:	af00      	add	r7, sp, #0
 800e594:	6078      	str	r0, [r7, #4]
 800e596:	6039      	str	r1, [r7, #0]
	this->_M_impl._M_start = this->_M_allocate(__n);
 800e598:	6839      	ldr	r1, [r7, #0]
 800e59a:	6878      	ldr	r0, [r7, #4]
 800e59c:	f000 f8bb 	bl	800e716 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE11_M_allocateEj>
 800e5a0:	4602      	mov	r2, r0
 800e5a2:	687b      	ldr	r3, [r7, #4]
 800e5a4:	601a      	str	r2, [r3, #0]
	this->_M_impl._M_finish = this->_M_impl._M_start;
 800e5a6:	687b      	ldr	r3, [r7, #4]
 800e5a8:	681a      	ldr	r2, [r3, #0]
 800e5aa:	687b      	ldr	r3, [r7, #4]
 800e5ac:	605a      	str	r2, [r3, #4]
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 800e5ae:	687b      	ldr	r3, [r7, #4]
 800e5b0:	681a      	ldr	r2, [r3, #0]
 800e5b2:	683b      	ldr	r3, [r7, #0]
 800e5b4:	009b      	lsls	r3, r3, #2
 800e5b6:	441a      	add	r2, r3
 800e5b8:	687b      	ldr	r3, [r7, #4]
 800e5ba:	609a      	str	r2, [r3, #8]
      }
 800e5bc:	bf00      	nop
 800e5be:	3708      	adds	r7, #8
 800e5c0:	46bd      	mov	sp, r7
 800e5c2:	bd80      	pop	{r7, pc}

0800e5c4 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE13_M_deallocateEPS1_j>:
      _M_deallocate(pointer __p, size_t __n)
 800e5c4:	b580      	push	{r7, lr}
 800e5c6:	b084      	sub	sp, #16
 800e5c8:	af00      	add	r7, sp, #0
 800e5ca:	60f8      	str	r0, [r7, #12]
 800e5cc:	60b9      	str	r1, [r7, #8]
 800e5ce:	607a      	str	r2, [r7, #4]
	if (__p)
 800e5d0:	68bb      	ldr	r3, [r7, #8]
 800e5d2:	2b00      	cmp	r3, #0
 800e5d4:	d005      	beq.n	800e5e2 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE13_M_deallocateEPS1_j+0x1e>
	  _Tr::deallocate(_M_impl, __p, __n);
 800e5d6:	68fb      	ldr	r3, [r7, #12]
 800e5d8:	687a      	ldr	r2, [r7, #4]
 800e5da:	68b9      	ldr	r1, [r7, #8]
 800e5dc:	4618      	mov	r0, r3
 800e5de:	f000 f8ae 	bl	800e73e <_ZNSt16allocator_traitsISaIP10ExpressionEE10deallocateERS2_PS1_j>
      }
 800e5e2:	bf00      	nop
 800e5e4:	3710      	adds	r7, #16
 800e5e6:	46bd      	mov	sp, r7
 800e5e8:	bd80      	pop	{r7, pc}

0800e5ea <_ZN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS2_SaIS2_EEEC1ERKS4_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 800e5ea:	b480      	push	{r7}
 800e5ec:	b083      	sub	sp, #12
 800e5ee:	af00      	add	r7, sp, #0
 800e5f0:	6078      	str	r0, [r7, #4]
 800e5f2:	6039      	str	r1, [r7, #0]
      : _M_current(__i) { }
 800e5f4:	683b      	ldr	r3, [r7, #0]
 800e5f6:	681a      	ldr	r2, [r3, #0]
 800e5f8:	687b      	ldr	r3, [r7, #4]
 800e5fa:	601a      	str	r2, [r3, #0]
 800e5fc:	687b      	ldr	r3, [r7, #4]
 800e5fe:	4618      	mov	r0, r3
 800e600:	370c      	adds	r7, #12
 800e602:	46bd      	mov	sp, r7
 800e604:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e608:	4770      	bx	lr

0800e60a <_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
 800e60a:	b580      	push	{r7, lr}
 800e60c:	b086      	sub	sp, #24
 800e60e:	af00      	add	r7, sp, #0
 800e610:	60f8      	str	r0, [r7, #12]
 800e612:	60b9      	str	r1, [r7, #8]
 800e614:	607a      	str	r2, [r7, #4]
      const bool __assignable = is_assignable<_RefType2, _RefType1>::value;
 800e616:	2301      	movs	r3, #1
 800e618:	75fb      	strb	r3, [r7, #23]
	__uninit_copy(__first, __last, __result);
 800e61a:	687a      	ldr	r2, [r7, #4]
 800e61c:	68b9      	ldr	r1, [r7, #8]
 800e61e:	68f8      	ldr	r0, [r7, #12]
 800e620:	f000 f89c 	bl	800e75c <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_>
 800e624:	4603      	mov	r3, r0
    }
 800e626:	4618      	mov	r0, r3
 800e628:	3718      	adds	r7, #24
 800e62a:	46bd      	mov	sp, r7
 800e62c:	bd80      	pop	{r7, pc}

0800e62e <_ZSt8_DestroyIPP10ExpressionEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 800e62e:	b580      	push	{r7, lr}
 800e630:	b082      	sub	sp, #8
 800e632:	af00      	add	r7, sp, #0
 800e634:	6078      	str	r0, [r7, #4]
 800e636:	6039      	str	r1, [r7, #0]
	__destroy(__first, __last);
 800e638:	6839      	ldr	r1, [r7, #0]
 800e63a:	6878      	ldr	r0, [r7, #4]
 800e63c:	f000 f89e 	bl	800e77c <_ZNSt12_Destroy_auxILb1EE9__destroyIPP10ExpressionEEvT_S5_>
    }
 800e640:	bf00      	nop
 800e642:	3708      	adds	r7, #8
 800e644:	46bd      	mov	sp, r7
 800e646:	bd80      	pop	{r7, pc}

0800e648 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeISG_E>:
      _M_destroy_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 800e648:	b590      	push	{r4, r7, lr}
 800e64a:	b083      	sub	sp, #12
 800e64c:	af00      	add	r7, sp, #0
 800e64e:	6078      	str	r0, [r7, #4]
 800e650:	6039      	str	r1, [r7, #0]
	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
 800e652:	6878      	ldr	r0, [r7, #4]
 800e654:	f000 f89d 	bl	800e792 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE21_M_get_Node_allocatorEv>
 800e658:	4604      	mov	r4, r0
 800e65a:	6838      	ldr	r0, [r7, #0]
 800e65c:	f7ff fe03 	bl	800e266 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEE9_M_valptrEv>
 800e660:	4603      	mov	r3, r0
 800e662:	4619      	mov	r1, r3
 800e664:	4620      	mov	r0, r4
 800e666:	f000 f89f 	bl	800e7a8 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEEEE7destroyISH_EEvRSJ_PT_>
      }
 800e66a:	bf00      	nop
 800e66c:	370c      	adds	r7, #12
 800e66e:	46bd      	mov	sp, r7
 800e670:	bd90      	pop	{r4, r7, pc}

0800e672 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE11_M_put_nodeEPSt13_Rb_tree_nodeISG_E>:
      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 800e672:	b580      	push	{r7, lr}
 800e674:	b082      	sub	sp, #8
 800e676:	af00      	add	r7, sp, #0
 800e678:	6078      	str	r0, [r7, #4]
 800e67a:	6039      	str	r1, [r7, #0]
      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
 800e67c:	6878      	ldr	r0, [r7, #4]
 800e67e:	f000 f888 	bl	800e792 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE21_M_get_Node_allocatorEv>
 800e682:	4603      	mov	r3, r0
 800e684:	2201      	movs	r2, #1
 800e686:	6839      	ldr	r1, [r7, #0]
 800e688:	4618      	mov	r0, r3
 800e68a:	f000 f89a 	bl	800e7c2 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEEEE10deallocateERSJ_PSI_j>
 800e68e:	bf00      	nop
 800e690:	3708      	adds	r7, #8
 800e692:	46bd      	mov	sp, r7
 800e694:	bd80      	pop	{r7, pc}

0800e696 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE6_S_keyEPKSt13_Rb_tree_nodeISG_E>:
      _S_key(_Const_Link_type __x)
 800e696:	b580      	push	{r7, lr}
 800e698:	b084      	sub	sp, #16
 800e69a:	af00      	add	r7, sp, #0
 800e69c:	6078      	str	r0, [r7, #4]
	return _KeyOfValue()(*__x->_M_valptr());
 800e69e:	6878      	ldr	r0, [r7, #4]
 800e6a0:	f000 f89e 	bl	800e7e0 <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEE9_M_valptrEv>
 800e6a4:	4602      	mov	r2, r0
 800e6a6:	f107 030c 	add.w	r3, r7, #12
 800e6aa:	4611      	mov	r1, r2
 800e6ac:	4618      	mov	r0, r3
 800e6ae:	f000 f8a5 	bl	800e7fc <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEclERKSG_>
 800e6b2:	4603      	mov	r3, r0
      }
 800e6b4:	4618      	mov	r0, r3
 800e6b6:	3710      	adds	r7, #16
 800e6b8:	46bd      	mov	sp, r7
 800e6ba:	bd80      	pop	{r7, pc}

0800e6bc <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEE7_M_addrEv>:
      _M_addr() noexcept
 800e6bc:	b480      	push	{r7}
 800e6be:	b083      	sub	sp, #12
 800e6c0:	af00      	add	r7, sp, #0
 800e6c2:	6078      	str	r0, [r7, #4]
      { return static_cast<void*>(&_M_storage); }
 800e6c4:	687b      	ldr	r3, [r7, #4]
 800e6c6:	4618      	mov	r0, r3
 800e6c8:	370c      	adds	r7, #12
 800e6ca:	46bd      	mov	sp, r7
 800e6cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e6d0:	4770      	bx	lr

0800e6d2 <_ZNSaIP10ExpressionEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
 800e6d2:	b580      	push	{r7, lr}
 800e6d4:	b082      	sub	sp, #8
 800e6d6:	af00      	add	r7, sp, #0
 800e6d8:	6078      	str	r0, [r7, #4]
 800e6da:	6039      	str	r1, [r7, #0]
      : __allocator_base<_Tp>(__a) { }
 800e6dc:	6839      	ldr	r1, [r7, #0]
 800e6de:	6878      	ldr	r0, [r7, #4]
 800e6e0:	f000 f898 	bl	800e814 <_ZN9__gnu_cxx13new_allocatorIP10ExpressionEC1ERKS3_>
 800e6e4:	687b      	ldr	r3, [r7, #4]
 800e6e6:	4618      	mov	r0, r3
 800e6e8:	3708      	adds	r7, #8
 800e6ea:	46bd      	mov	sp, r7
 800e6ec:	bd80      	pop	{r7, pc}

0800e6ee <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
 800e6ee:	b480      	push	{r7}
 800e6f0:	b083      	sub	sp, #12
 800e6f2:	af00      	add	r7, sp, #0
 800e6f4:	6078      	str	r0, [r7, #4]
	: _M_start(), _M_finish(), _M_end_of_storage()
 800e6f6:	687b      	ldr	r3, [r7, #4]
 800e6f8:	2200      	movs	r2, #0
 800e6fa:	601a      	str	r2, [r3, #0]
 800e6fc:	687b      	ldr	r3, [r7, #4]
 800e6fe:	2200      	movs	r2, #0
 800e700:	605a      	str	r2, [r3, #4]
 800e702:	687b      	ldr	r3, [r7, #4]
 800e704:	2200      	movs	r2, #0
 800e706:	609a      	str	r2, [r3, #8]
	{ }
 800e708:	687b      	ldr	r3, [r7, #4]
 800e70a:	4618      	mov	r0, r3
 800e70c:	370c      	adds	r7, #12
 800e70e:	46bd      	mov	sp, r7
 800e710:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e714:	4770      	bx	lr

0800e716 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE11_M_allocateEj>:
      _M_allocate(size_t __n)
 800e716:	b580      	push	{r7, lr}
 800e718:	b082      	sub	sp, #8
 800e71a:	af00      	add	r7, sp, #0
 800e71c:	6078      	str	r0, [r7, #4]
 800e71e:	6039      	str	r1, [r7, #0]
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 800e720:	683b      	ldr	r3, [r7, #0]
 800e722:	2b00      	cmp	r3, #0
 800e724:	d006      	beq.n	800e734 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE11_M_allocateEj+0x1e>
 800e726:	687b      	ldr	r3, [r7, #4]
 800e728:	6839      	ldr	r1, [r7, #0]
 800e72a:	4618      	mov	r0, r3
 800e72c:	f000 f87e 	bl	800e82c <_ZNSt16allocator_traitsISaIP10ExpressionEE8allocateERS2_j>
 800e730:	4603      	mov	r3, r0
 800e732:	e000      	b.n	800e736 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE11_M_allocateEj+0x20>
 800e734:	2300      	movs	r3, #0
      }
 800e736:	4618      	mov	r0, r3
 800e738:	3708      	adds	r7, #8
 800e73a:	46bd      	mov	sp, r7
 800e73c:	bd80      	pop	{r7, pc}

0800e73e <_ZNSt16allocator_traitsISaIP10ExpressionEE10deallocateERS2_PS1_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 800e73e:	b580      	push	{r7, lr}
 800e740:	b084      	sub	sp, #16
 800e742:	af00      	add	r7, sp, #0
 800e744:	60f8      	str	r0, [r7, #12]
 800e746:	60b9      	str	r1, [r7, #8]
 800e748:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 800e74a:	687a      	ldr	r2, [r7, #4]
 800e74c:	68b9      	ldr	r1, [r7, #8]
 800e74e:	68f8      	ldr	r0, [r7, #12]
 800e750:	f000 f87b 	bl	800e84a <_ZN9__gnu_cxx13new_allocatorIP10ExpressionE10deallocateEPS2_j>
 800e754:	bf00      	nop
 800e756:	3710      	adds	r7, #16
 800e758:	46bd      	mov	sp, r7
 800e75a:	bd80      	pop	{r7, pc}

0800e75c <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
 800e75c:	b580      	push	{r7, lr}
 800e75e:	b084      	sub	sp, #16
 800e760:	af00      	add	r7, sp, #0
 800e762:	60f8      	str	r0, [r7, #12]
 800e764:	60b9      	str	r1, [r7, #8]
 800e766:	607a      	str	r2, [r7, #4]
        { return std::copy(__first, __last, __result); }
 800e768:	687a      	ldr	r2, [r7, #4]
 800e76a:	68b9      	ldr	r1, [r7, #8]
 800e76c:	68f8      	ldr	r0, [r7, #12]
 800e76e:	f000 f878 	bl	800e862 <_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_>
 800e772:	4603      	mov	r3, r0
 800e774:	4618      	mov	r0, r3
 800e776:	3710      	adds	r7, #16
 800e778:	46bd      	mov	sp, r7
 800e77a:	bd80      	pop	{r7, pc}

0800e77c <_ZNSt12_Destroy_auxILb1EE9__destroyIPP10ExpressionEEvT_S5_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
 800e77c:	b480      	push	{r7}
 800e77e:	b083      	sub	sp, #12
 800e780:	af00      	add	r7, sp, #0
 800e782:	6078      	str	r0, [r7, #4]
 800e784:	6039      	str	r1, [r7, #0]
 800e786:	bf00      	nop
 800e788:	370c      	adds	r7, #12
 800e78a:	46bd      	mov	sp, r7
 800e78c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e790:	4770      	bx	lr

0800e792 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE21_M_get_Node_allocatorEv>:
      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
 800e792:	b480      	push	{r7}
 800e794:	b083      	sub	sp, #12
 800e796:	af00      	add	r7, sp, #0
 800e798:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 800e79a:	687b      	ldr	r3, [r7, #4]
 800e79c:	4618      	mov	r0, r3
 800e79e:	370c      	adds	r7, #12
 800e7a0:	46bd      	mov	sp, r7
 800e7a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e7a6:	4770      	bx	lr

0800e7a8 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEEEE7destroyISH_EEvRSJ_PT_>:
	destroy(allocator_type& __a, _Up* __p)
 800e7a8:	b580      	push	{r7, lr}
 800e7aa:	b082      	sub	sp, #8
 800e7ac:	af00      	add	r7, sp, #0
 800e7ae:	6078      	str	r0, [r7, #4]
 800e7b0:	6039      	str	r1, [r7, #0]
	{ __a.destroy(__p); }
 800e7b2:	6839      	ldr	r1, [r7, #0]
 800e7b4:	6878      	ldr	r0, [r7, #4]
 800e7b6:	f000 f879 	bl	800e8ac <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISD_EEEEEE7destroyISI_EEvPT_>
 800e7ba:	bf00      	nop
 800e7bc:	3708      	adds	r7, #8
 800e7be:	46bd      	mov	sp, r7
 800e7c0:	bd80      	pop	{r7, pc}

0800e7c2 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEEEE10deallocateERSJ_PSI_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 800e7c2:	b580      	push	{r7, lr}
 800e7c4:	b084      	sub	sp, #16
 800e7c6:	af00      	add	r7, sp, #0
 800e7c8:	60f8      	str	r0, [r7, #12]
 800e7ca:	60b9      	str	r1, [r7, #8]
 800e7cc:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 800e7ce:	687a      	ldr	r2, [r7, #4]
 800e7d0:	68b9      	ldr	r1, [r7, #8]
 800e7d2:	68f8      	ldr	r0, [r7, #12]
 800e7d4:	f000 f876 	bl	800e8c4 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISD_EEEEEE10deallocateEPSJ_j>
 800e7d8:	bf00      	nop
 800e7da:	3710      	adds	r7, #16
 800e7dc:	46bd      	mov	sp, r7
 800e7de:	bd80      	pop	{r7, pc}

0800e7e0 <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEE9_M_valptrEv>:
      _M_valptr() const
 800e7e0:	b580      	push	{r7, lr}
 800e7e2:	b082      	sub	sp, #8
 800e7e4:	af00      	add	r7, sp, #0
 800e7e6:	6078      	str	r0, [r7, #4]
      { return _M_storage._M_ptr(); }
 800e7e8:	687b      	ldr	r3, [r7, #4]
 800e7ea:	3310      	adds	r3, #16
 800e7ec:	4618      	mov	r0, r3
 800e7ee:	f000 f875 	bl	800e8dc <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEE6_M_ptrEv>
 800e7f2:	4603      	mov	r3, r0
 800e7f4:	4618      	mov	r0, r3
 800e7f6:	3708      	adds	r7, #8
 800e7f8:	46bd      	mov	sp, r7
 800e7fa:	bd80      	pop	{r7, pc}

0800e7fc <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEclERKSG_>:
      operator()(const _Pair& __x) const
 800e7fc:	b480      	push	{r7}
 800e7fe:	b083      	sub	sp, #12
 800e800:	af00      	add	r7, sp, #0
 800e802:	6078      	str	r0, [r7, #4]
 800e804:	6039      	str	r1, [r7, #0]
      { return __x.first; }
 800e806:	683b      	ldr	r3, [r7, #0]
 800e808:	4618      	mov	r0, r3
 800e80a:	370c      	adds	r7, #12
 800e80c:	46bd      	mov	sp, r7
 800e80e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e812:	4770      	bx	lr

0800e814 <_ZN9__gnu_cxx13new_allocatorIP10ExpressionEC1ERKS3_>:
      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
 800e814:	b480      	push	{r7}
 800e816:	b083      	sub	sp, #12
 800e818:	af00      	add	r7, sp, #0
 800e81a:	6078      	str	r0, [r7, #4]
 800e81c:	6039      	str	r1, [r7, #0]
 800e81e:	687b      	ldr	r3, [r7, #4]
 800e820:	4618      	mov	r0, r3
 800e822:	370c      	adds	r7, #12
 800e824:	46bd      	mov	sp, r7
 800e826:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e82a:	4770      	bx	lr

0800e82c <_ZNSt16allocator_traitsISaIP10ExpressionEE8allocateERS2_j>:
      allocate(allocator_type& __a, size_type __n)
 800e82c:	b580      	push	{r7, lr}
 800e82e:	b082      	sub	sp, #8
 800e830:	af00      	add	r7, sp, #0
 800e832:	6078      	str	r0, [r7, #4]
 800e834:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 800e836:	2200      	movs	r2, #0
 800e838:	6839      	ldr	r1, [r7, #0]
 800e83a:	6878      	ldr	r0, [r7, #4]
 800e83c:	f000 f85a 	bl	800e8f4 <_ZN9__gnu_cxx13new_allocatorIP10ExpressionE8allocateEjPKv>
 800e840:	4603      	mov	r3, r0
 800e842:	4618      	mov	r0, r3
 800e844:	3708      	adds	r7, #8
 800e846:	46bd      	mov	sp, r7
 800e848:	bd80      	pop	{r7, pc}

0800e84a <_ZN9__gnu_cxx13new_allocatorIP10ExpressionE10deallocateEPS2_j>:
      deallocate(pointer __p, size_type)
 800e84a:	b580      	push	{r7, lr}
 800e84c:	b084      	sub	sp, #16
 800e84e:	af00      	add	r7, sp, #0
 800e850:	60f8      	str	r0, [r7, #12]
 800e852:	60b9      	str	r1, [r7, #8]
 800e854:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 800e856:	68b8      	ldr	r0, [r7, #8]
 800e858:	f013 ffd2 	bl	8022800 <_ZdlPv>
      }
 800e85c:	3710      	adds	r7, #16
 800e85e:	46bd      	mov	sp, r7
 800e860:	bd80      	pop	{r7, pc}

0800e862 <_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_>:
    copy(_II __first, _II __last, _OI __result)
 800e862:	b590      	push	{r4, r7, lr}
 800e864:	b085      	sub	sp, #20
 800e866:	af00      	add	r7, sp, #0
 800e868:	60f8      	str	r0, [r7, #12]
 800e86a:	60b9      	str	r1, [r7, #8]
 800e86c:	607a      	str	r2, [r7, #4]
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
 800e86e:	68f8      	ldr	r0, [r7, #12]
 800e870:	f000 f85f 	bl	800e932 <_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS3_SaIS3_EEEEET_SA_>
 800e874:	4604      	mov	r4, r0
 800e876:	68b8      	ldr	r0, [r7, #8]
 800e878:	f000 f85b 	bl	800e932 <_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS3_SaIS3_EEEEET_SA_>
 800e87c:	4603      	mov	r3, r0
 800e87e:	687a      	ldr	r2, [r7, #4]
 800e880:	4619      	mov	r1, r3
 800e882:	4620      	mov	r0, r4
 800e884:	f000 f860 	bl	800e948 <_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS3_SaIS3_EEEEPS3_ET1_T0_SC_SB_>
 800e888:	4603      	mov	r3, r0
    }
 800e88a:	4618      	mov	r0, r3
 800e88c:	3714      	adds	r7, #20
 800e88e:	46bd      	mov	sp, r7
 800e890:	bd90      	pop	{r4, r7, pc}

0800e892 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISA_EEEED1Ev>:
    struct pair
 800e892:	b580      	push	{r7, lr}
 800e894:	b082      	sub	sp, #8
 800e896:	af00      	add	r7, sp, #0
 800e898:	6078      	str	r0, [r7, #4]
 800e89a:	687b      	ldr	r3, [r7, #4]
 800e89c:	4618      	mov	r0, r3
 800e89e:	f014 fa64 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800e8a2:	687b      	ldr	r3, [r7, #4]
 800e8a4:	4618      	mov	r0, r3
 800e8a6:	3708      	adds	r7, #8
 800e8a8:	46bd      	mov	sp, r7
 800e8aa:	bd80      	pop	{r7, pc}

0800e8ac <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISD_EEEEEE7destroyISI_EEvPT_>:
	destroy(_Up* __p)
 800e8ac:	b580      	push	{r7, lr}
 800e8ae:	b082      	sub	sp, #8
 800e8b0:	af00      	add	r7, sp, #0
 800e8b2:	6078      	str	r0, [r7, #4]
 800e8b4:	6039      	str	r1, [r7, #0]
	{ __p->~_Up(); }
 800e8b6:	6838      	ldr	r0, [r7, #0]
 800e8b8:	f7ff ffeb 	bl	800e892 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISA_EEEED1Ev>
 800e8bc:	bf00      	nop
 800e8be:	3708      	adds	r7, #8
 800e8c0:	46bd      	mov	sp, r7
 800e8c2:	bd80      	pop	{r7, pc}

0800e8c4 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISD_EEEEEE10deallocateEPSJ_j>:
      deallocate(pointer __p, size_type)
 800e8c4:	b580      	push	{r7, lr}
 800e8c6:	b084      	sub	sp, #16
 800e8c8:	af00      	add	r7, sp, #0
 800e8ca:	60f8      	str	r0, [r7, #12]
 800e8cc:	60b9      	str	r1, [r7, #8]
 800e8ce:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 800e8d0:	68b8      	ldr	r0, [r7, #8]
 800e8d2:	f013 ff95 	bl	8022800 <_ZdlPv>
      }
 800e8d6:	3710      	adds	r7, #16
 800e8d8:	46bd      	mov	sp, r7
 800e8da:	bd80      	pop	{r7, pc}

0800e8dc <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEE6_M_ptrEv>:
      _M_ptr() const noexcept
 800e8dc:	b580      	push	{r7, lr}
 800e8de:	b082      	sub	sp, #8
 800e8e0:	af00      	add	r7, sp, #0
 800e8e2:	6078      	str	r0, [r7, #4]
      { return static_cast<const _Tp*>(_M_addr()); }
 800e8e4:	6878      	ldr	r0, [r7, #4]
 800e8e6:	f000 f852 	bl	800e98e <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEE7_M_addrEv>
 800e8ea:	4603      	mov	r3, r0
 800e8ec:	4618      	mov	r0, r3
 800e8ee:	3708      	adds	r7, #8
 800e8f0:	46bd      	mov	sp, r7
 800e8f2:	bd80      	pop	{r7, pc}

0800e8f4 <_ZN9__gnu_cxx13new_allocatorIP10ExpressionE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 800e8f4:	b580      	push	{r7, lr}
 800e8f6:	b084      	sub	sp, #16
 800e8f8:	af00      	add	r7, sp, #0
 800e8fa:	60f8      	str	r0, [r7, #12]
 800e8fc:	60b9      	str	r1, [r7, #8]
 800e8fe:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 800e900:	68f8      	ldr	r0, [r7, #12]
 800e902:	f000 f84f 	bl	800e9a4 <_ZNK9__gnu_cxx13new_allocatorIP10ExpressionE8max_sizeEv>
 800e906:	4602      	mov	r2, r0
 800e908:	68bb      	ldr	r3, [r7, #8]
 800e90a:	4293      	cmp	r3, r2
 800e90c:	bf8c      	ite	hi
 800e90e:	2301      	movhi	r3, #1
 800e910:	2300      	movls	r3, #0
 800e912:	b2db      	uxtb	r3, r3
 800e914:	2b00      	cmp	r3, #0
 800e916:	d001      	beq.n	800e91c <_ZN9__gnu_cxx13new_allocatorIP10ExpressionE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 800e918:	f014 f84a 	bl	80229b0 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 800e91c:	68bb      	ldr	r3, [r7, #8]
 800e91e:	009b      	lsls	r3, r3, #2
 800e920:	4618      	mov	r0, r3
 800e922:	f013 ff80 	bl	8022826 <_Znwj>
 800e926:	4603      	mov	r3, r0
 800e928:	bf00      	nop
      }
 800e92a:	4618      	mov	r0, r3
 800e92c:	3710      	adds	r7, #16
 800e92e:	46bd      	mov	sp, r7
 800e930:	bd80      	pop	{r7, pc}

0800e932 <_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS3_SaIS3_EEEEET_SA_>:
    __miter_base(_Iterator __it)
 800e932:	b480      	push	{r7}
 800e934:	b083      	sub	sp, #12
 800e936:	af00      	add	r7, sp, #0
 800e938:	6078      	str	r0, [r7, #4]
    { return __it; }
 800e93a:	687b      	ldr	r3, [r7, #4]
 800e93c:	4618      	mov	r0, r3
 800e93e:	370c      	adds	r7, #12
 800e940:	46bd      	mov	sp, r7
 800e942:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e946:	4770      	bx	lr

0800e948 <_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS3_SaIS3_EEEEPS3_ET1_T0_SC_SB_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
 800e948:	b5b0      	push	{r4, r5, r7, lr}
 800e94a:	b084      	sub	sp, #16
 800e94c:	af00      	add	r7, sp, #0
 800e94e:	60f8      	str	r0, [r7, #12]
 800e950:	60b9      	str	r1, [r7, #8]
 800e952:	607a      	str	r2, [r7, #4]
      return std::__niter_wrap(__result,
 800e954:	68f8      	ldr	r0, [r7, #12]
 800e956:	f000 f831 	bl	800e9bc <_ZSt12__niter_baseIPKP10ExpressionSt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS7_T0_EE>
 800e95a:	4604      	mov	r4, r0
 800e95c:	68b8      	ldr	r0, [r7, #8]
 800e95e:	f000 f82d 	bl	800e9bc <_ZSt12__niter_baseIPKP10ExpressionSt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS7_T0_EE>
 800e962:	4605      	mov	r5, r0
 800e964:	687b      	ldr	r3, [r7, #4]
 800e966:	4618      	mov	r0, r3
 800e968:	f000 f836 	bl	800e9d8 <_ZSt12__niter_baseIPP10ExpressionET_S3_>
 800e96c:	4603      	mov	r3, r0
 800e96e:	461a      	mov	r2, r3
 800e970:	4629      	mov	r1, r5
 800e972:	4620      	mov	r0, r4
 800e974:	f000 f83b 	bl	800e9ee <_ZSt13__copy_move_aILb0EPKP10ExpressionPS1_ET1_T0_S6_S5_>
 800e978:	4602      	mov	r2, r0
 800e97a:	1d3b      	adds	r3, r7, #4
 800e97c:	4611      	mov	r1, r2
 800e97e:	4618      	mov	r0, r3
 800e980:	f000 f847 	bl	800ea12 <_ZSt12__niter_wrapIPP10ExpressionET_RKS3_S3_>
 800e984:	4603      	mov	r3, r0
    }
 800e986:	4618      	mov	r0, r3
 800e988:	3710      	adds	r7, #16
 800e98a:	46bd      	mov	sp, r7
 800e98c:	bdb0      	pop	{r4, r5, r7, pc}

0800e98e <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEE7_M_addrEv>:
      _M_addr() const noexcept
 800e98e:	b480      	push	{r7}
 800e990:	b083      	sub	sp, #12
 800e992:	af00      	add	r7, sp, #0
 800e994:	6078      	str	r0, [r7, #4]
      { return static_cast<const void*>(&_M_storage); }
 800e996:	687b      	ldr	r3, [r7, #4]
 800e998:	4618      	mov	r0, r3
 800e99a:	370c      	adds	r7, #12
 800e99c:	46bd      	mov	sp, r7
 800e99e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e9a2:	4770      	bx	lr

0800e9a4 <_ZNK9__gnu_cxx13new_allocatorIP10ExpressionE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 800e9a4:	b480      	push	{r7}
 800e9a6:	b083      	sub	sp, #12
 800e9a8:	af00      	add	r7, sp, #0
 800e9aa:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 800e9ac:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
      }
 800e9b0:	4618      	mov	r0, r3
 800e9b2:	370c      	adds	r7, #12
 800e9b4:	46bd      	mov	sp, r7
 800e9b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e9ba:	4770      	bx	lr

0800e9bc <_ZSt12__niter_baseIPKP10ExpressionSt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS7_T0_EE>:
    __niter_base(__gnu_cxx::__normal_iterator<_Iterator, _Container> __it)
 800e9bc:	b580      	push	{r7, lr}
 800e9be:	b082      	sub	sp, #8
 800e9c0:	af00      	add	r7, sp, #0
 800e9c2:	6078      	str	r0, [r7, #4]
    { return __it.base(); }
 800e9c4:	1d3b      	adds	r3, r7, #4
 800e9c6:	4618      	mov	r0, r3
 800e9c8:	f000 f82f 	bl	800ea2a <_ZNK9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS2_SaIS2_EEE4baseEv>
 800e9cc:	4603      	mov	r3, r0
 800e9ce:	681b      	ldr	r3, [r3, #0]
 800e9d0:	4618      	mov	r0, r3
 800e9d2:	3708      	adds	r7, #8
 800e9d4:	46bd      	mov	sp, r7
 800e9d6:	bd80      	pop	{r7, pc}

0800e9d8 <_ZSt12__niter_baseIPP10ExpressionET_S3_>:
    __niter_base(_Iterator __it)
 800e9d8:	b480      	push	{r7}
 800e9da:	b083      	sub	sp, #12
 800e9dc:	af00      	add	r7, sp, #0
 800e9de:	6078      	str	r0, [r7, #4]
    { return __it; }
 800e9e0:	687b      	ldr	r3, [r7, #4]
 800e9e2:	4618      	mov	r0, r3
 800e9e4:	370c      	adds	r7, #12
 800e9e6:	46bd      	mov	sp, r7
 800e9e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e9ec:	4770      	bx	lr

0800e9ee <_ZSt13__copy_move_aILb0EPKP10ExpressionPS1_ET1_T0_S6_S5_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
 800e9ee:	b580      	push	{r7, lr}
 800e9f0:	b086      	sub	sp, #24
 800e9f2:	af00      	add	r7, sp, #0
 800e9f4:	60f8      	str	r0, [r7, #12]
 800e9f6:	60b9      	str	r1, [r7, #8]
 800e9f8:	607a      	str	r2, [r7, #4]
      const bool __simple = (__is_trivially_copyable(_ValueTypeI)
 800e9fa:	2301      	movs	r3, #1
 800e9fc:	75fb      	strb	r3, [r7, #23]
			      _Category>::__copy_m(__first, __last, __result);
 800e9fe:	687a      	ldr	r2, [r7, #4]
 800ea00:	68b9      	ldr	r1, [r7, #8]
 800ea02:	68f8      	ldr	r0, [r7, #12]
 800ea04:	f000 f81c 	bl	800ea40 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP10ExpressionEEPT_PKS5_S8_S6_>
 800ea08:	4603      	mov	r3, r0
    }
 800ea0a:	4618      	mov	r0, r3
 800ea0c:	3718      	adds	r7, #24
 800ea0e:	46bd      	mov	sp, r7
 800ea10:	bd80      	pop	{r7, pc}

0800ea12 <_ZSt12__niter_wrapIPP10ExpressionET_RKS3_S3_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
 800ea12:	b480      	push	{r7}
 800ea14:	b083      	sub	sp, #12
 800ea16:	af00      	add	r7, sp, #0
 800ea18:	6078      	str	r0, [r7, #4]
 800ea1a:	6039      	str	r1, [r7, #0]
    { return __res; }
 800ea1c:	683b      	ldr	r3, [r7, #0]
 800ea1e:	4618      	mov	r0, r3
 800ea20:	370c      	adds	r7, #12
 800ea22:	46bd      	mov	sp, r7
 800ea24:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ea28:	4770      	bx	lr

0800ea2a <_ZNK9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
 800ea2a:	b480      	push	{r7}
 800ea2c:	b083      	sub	sp, #12
 800ea2e:	af00      	add	r7, sp, #0
 800ea30:	6078      	str	r0, [r7, #4]
      { return _M_current; }
 800ea32:	687b      	ldr	r3, [r7, #4]
 800ea34:	4618      	mov	r0, r3
 800ea36:	370c      	adds	r7, #12
 800ea38:	46bd      	mov	sp, r7
 800ea3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ea3e:	4770      	bx	lr

0800ea40 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP10ExpressionEEPT_PKS5_S8_S6_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
 800ea40:	b580      	push	{r7, lr}
 800ea42:	b086      	sub	sp, #24
 800ea44:	af00      	add	r7, sp, #0
 800ea46:	60f8      	str	r0, [r7, #12]
 800ea48:	60b9      	str	r1, [r7, #8]
 800ea4a:	607a      	str	r2, [r7, #4]
	  const ptrdiff_t _Num = __last - __first;
 800ea4c:	68ba      	ldr	r2, [r7, #8]
 800ea4e:	68fb      	ldr	r3, [r7, #12]
 800ea50:	1ad3      	subs	r3, r2, r3
 800ea52:	109b      	asrs	r3, r3, #2
 800ea54:	617b      	str	r3, [r7, #20]
	  if (_Num)
 800ea56:	697b      	ldr	r3, [r7, #20]
 800ea58:	2b00      	cmp	r3, #0
 800ea5a:	d006      	beq.n	800ea6a <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP10ExpressionEEPT_PKS5_S8_S6_+0x2a>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 800ea5c:	697b      	ldr	r3, [r7, #20]
 800ea5e:	009b      	lsls	r3, r3, #2
 800ea60:	461a      	mov	r2, r3
 800ea62:	68f9      	ldr	r1, [r7, #12]
 800ea64:	6878      	ldr	r0, [r7, #4]
 800ea66:	f015 fba3 	bl	80241b0 <memmove>
	  return __result + _Num;
 800ea6a:	697b      	ldr	r3, [r7, #20]
 800ea6c:	009b      	lsls	r3, r3, #2
 800ea6e:	687a      	ldr	r2, [r7, #4]
 800ea70:	4413      	add	r3, r2
	}
 800ea72:	4618      	mov	r0, r3
 800ea74:	3718      	adds	r7, #24
 800ea76:	46bd      	mov	sp, r7
 800ea78:	bd80      	pop	{r7, pc}
	...

0800ea7c <_Z41__static_initialization_and_destruction_0ii>:
 800ea7c:	b590      	push	{r4, r7, lr}
 800ea7e:	b0e7      	sub	sp, #412	; 0x19c
 800ea80:	af02      	add	r7, sp, #8
 800ea82:	1d3b      	adds	r3, r7, #4
 800ea84:	6018      	str	r0, [r3, #0]
 800ea86:	463b      	mov	r3, r7
 800ea88:	6019      	str	r1, [r3, #0]
 800ea8a:	1d3b      	adds	r3, r7, #4
 800ea8c:	681b      	ldr	r3, [r3, #0]
 800ea8e:	2b01      	cmp	r3, #1
 800ea90:	f040 819d 	bne.w	800edce <_Z41__static_initialization_and_destruction_0ii+0x352>
 800ea94:	463b      	mov	r3, r7
 800ea96:	681b      	ldr	r3, [r3, #0]
 800ea98:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800ea9c:	4293      	cmp	r3, r2
 800ea9e:	f040 8196 	bne.w	800edce <_Z41__static_initialization_and_destruction_0ii+0x352>
};
 800eaa2:	f107 0314 	add.w	r3, r7, #20
 800eaa6:	4618      	mov	r0, r3
 800eaa8:	2322      	movs	r3, #34	; 0x22
 800eaaa:	461a      	mov	r2, r3
 800eaac:	2100      	movs	r1, #0
 800eaae:	f015 fb99 	bl	80241e4 <memset>
 800eab2:	f107 0314 	add.w	r3, r7, #20
 800eab6:	223a      	movs	r2, #58	; 0x3a
 800eab8:	701a      	strb	r2, [r3, #0]
 800eaba:	f107 0314 	add.w	r3, r7, #20
 800eabe:	2201      	movs	r2, #1
 800eac0:	705a      	strb	r2, [r3, #1]
 800eac2:	f107 0314 	add.w	r3, r7, #20
 800eac6:	220a      	movs	r2, #10
 800eac8:	709a      	strb	r2, [r3, #2]
 800eaca:	f107 0314 	add.w	r3, r7, #20
 800eace:	220a      	movs	r2, #10
 800ead0:	70da      	strb	r2, [r3, #3]
 800ead2:	f107 0314 	add.w	r3, r7, #20
 800ead6:	222c      	movs	r2, #44	; 0x2c
 800ead8:	711a      	strb	r2, [r3, #4]
 800eada:	f107 0314 	add.w	r3, r7, #20
 800eade:	220c      	movs	r2, #12
 800eae0:	715a      	strb	r2, [r3, #5]
 800eae2:	f107 0314 	add.w	r3, r7, #20
 800eae6:	222e      	movs	r2, #46	; 0x2e
 800eae8:	719a      	strb	r2, [r3, #6]
 800eaea:	f107 0314 	add.w	r3, r7, #20
 800eaee:	220b      	movs	r2, #11
 800eaf0:	71da      	strb	r2, [r3, #7]
 800eaf2:	f107 0314 	add.w	r3, r7, #20
 800eaf6:	225b      	movs	r2, #91	; 0x5b
 800eaf8:	721a      	strb	r2, [r3, #8]
 800eafa:	f107 0314 	add.w	r3, r7, #20
 800eafe:	220d      	movs	r2, #13
 800eb00:	725a      	strb	r2, [r3, #9]
 800eb02:	f107 0314 	add.w	r3, r7, #20
 800eb06:	225d      	movs	r2, #93	; 0x5d
 800eb08:	729a      	strb	r2, [r3, #10]
 800eb0a:	f107 0314 	add.w	r3, r7, #20
 800eb0e:	220e      	movs	r2, #14
 800eb10:	72da      	strb	r2, [r3, #11]
 800eb12:	f107 0314 	add.w	r3, r7, #20
 800eb16:	227c      	movs	r2, #124	; 0x7c
 800eb18:	731a      	strb	r2, [r3, #12]
 800eb1a:	f107 0314 	add.w	r3, r7, #20
 800eb1e:	2215      	movs	r2, #21
 800eb20:	735a      	strb	r2, [r3, #13]
 800eb22:	f107 0314 	add.w	r3, r7, #20
 800eb26:	2226      	movs	r2, #38	; 0x26
 800eb28:	739a      	strb	r2, [r3, #14]
 800eb2a:	f107 0314 	add.w	r3, r7, #20
 800eb2e:	2216      	movs	r2, #22
 800eb30:	73da      	strb	r2, [r3, #15]
 800eb32:	f107 0314 	add.w	r3, r7, #20
 800eb36:	222b      	movs	r2, #43	; 0x2b
 800eb38:	741a      	strb	r2, [r3, #16]
 800eb3a:	f107 0314 	add.w	r3, r7, #20
 800eb3e:	221f      	movs	r2, #31
 800eb40:	745a      	strb	r2, [r3, #17]
 800eb42:	f107 0314 	add.w	r3, r7, #20
 800eb46:	222d      	movs	r2, #45	; 0x2d
 800eb48:	749a      	strb	r2, [r3, #18]
 800eb4a:	f107 0314 	add.w	r3, r7, #20
 800eb4e:	2220      	movs	r2, #32
 800eb50:	74da      	strb	r2, [r3, #19]
 800eb52:	f107 0314 	add.w	r3, r7, #20
 800eb56:	222a      	movs	r2, #42	; 0x2a
 800eb58:	751a      	strb	r2, [r3, #20]
 800eb5a:	f107 0314 	add.w	r3, r7, #20
 800eb5e:	2221      	movs	r2, #33	; 0x21
 800eb60:	755a      	strb	r2, [r3, #21]
 800eb62:	f107 0314 	add.w	r3, r7, #20
 800eb66:	222f      	movs	r2, #47	; 0x2f
 800eb68:	759a      	strb	r2, [r3, #22]
 800eb6a:	f107 0314 	add.w	r3, r7, #20
 800eb6e:	2222      	movs	r2, #34	; 0x22
 800eb70:	75da      	strb	r2, [r3, #23]
 800eb72:	f107 0314 	add.w	r3, r7, #20
 800eb76:	225e      	movs	r2, #94	; 0x5e
 800eb78:	761a      	strb	r2, [r3, #24]
 800eb7a:	f107 0314 	add.w	r3, r7, #20
 800eb7e:	2223      	movs	r2, #35	; 0x23
 800eb80:	765a      	strb	r2, [r3, #25]
 800eb82:	f107 0314 	add.w	r3, r7, #20
 800eb86:	2225      	movs	r2, #37	; 0x25
 800eb88:	769a      	strb	r2, [r3, #26]
 800eb8a:	f107 0314 	add.w	r3, r7, #20
 800eb8e:	2224      	movs	r2, #36	; 0x24
 800eb90:	76da      	strb	r2, [r3, #27]
 800eb92:	f107 0314 	add.w	r3, r7, #20
 800eb96:	2228      	movs	r2, #40	; 0x28
 800eb98:	771a      	strb	r2, [r3, #28]
 800eb9a:	f107 0314 	add.w	r3, r7, #20
 800eb9e:	2226      	movs	r2, #38	; 0x26
 800eba0:	775a      	strb	r2, [r3, #29]
 800eba2:	f107 0314 	add.w	r3, r7, #20
 800eba6:	2229      	movs	r2, #41	; 0x29
 800eba8:	779a      	strb	r2, [r3, #30]
 800ebaa:	f107 0314 	add.w	r3, r7, #20
 800ebae:	2227      	movs	r2, #39	; 0x27
 800ebb0:	77da      	strb	r2, [r3, #31]
 800ebb2:	f107 0314 	add.w	r3, r7, #20
 800ebb6:	2225      	movs	r2, #37	; 0x25
 800ebb8:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 800ebbc:	f107 030c 	add.w	r3, r7, #12
 800ebc0:	f107 0214 	add.w	r2, r7, #20
 800ebc4:	601a      	str	r2, [r3, #0]
 800ebc6:	f107 030c 	add.w	r3, r7, #12
 800ebca:	2211      	movs	r2, #17
 800ebcc:	605a      	str	r2, [r3, #4]
 800ebce:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800ebd2:	4618      	mov	r0, r3
 800ebd4:	f7f2 ff8c 	bl	8001af0 <_ZNSaISt4pairIKc10token_typeEEC1Ev>
 800ebd8:	f107 0138 	add.w	r1, r7, #56	; 0x38
 800ebdc:	f107 020c 	add.w	r2, r7, #12
 800ebe0:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800ebe4:	9300      	str	r3, [sp, #0]
 800ebe6:	460b      	mov	r3, r1
 800ebe8:	ca06      	ldmia	r2, {r1, r2}
 800ebea:	4885      	ldr	r0, [pc, #532]	; (800ee00 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 800ebec:	f7f2 ff98 	bl	8001b20 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 800ebf0:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800ebf4:	4618      	mov	r0, r3
 800ebf6:	f7f2 ff87 	bl	8001b08 <_ZNSaISt4pairIKc10token_typeEED1Ev>
	{"true", TOKEN_TRUE},
 800ebfa:	2305      	movs	r3, #5
 800ebfc:	f887 3162 	strb.w	r3, [r7, #354]	; 0x162
};
 800ec00:	f507 72b1 	add.w	r2, r7, #354	; 0x162
 800ec04:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800ec08:	497e      	ldr	r1, [pc, #504]	; (800ee04 <_Z41__static_initialization_and_destruction_0ii+0x388>)
 800ec0a:	4618      	mov	r0, r3
 800ec0c:	f7f2 fa74 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"false", TOKEN_FALSE},
 800ec10:	2306      	movs	r3, #6
 800ec12:	f887 3163 	strb.w	r3, [r7, #355]	; 0x163
};
 800ec16:	f207 1263 	addw	r2, r7, #355	; 0x163
 800ec1a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800ec1e:	331c      	adds	r3, #28
 800ec20:	4979      	ldr	r1, [pc, #484]	; (800ee08 <_Z41__static_initialization_and_destruction_0ii+0x38c>)
 800ec22:	4618      	mov	r0, r3
 800ec24:	f7f2 fa90 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"setup", TOKEN_SETUP},
 800ec28:	2307      	movs	r3, #7
 800ec2a:	f887 3164 	strb.w	r3, [r7, #356]	; 0x164
};
 800ec2e:	f507 72b2 	add.w	r2, r7, #356	; 0x164
 800ec32:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800ec36:	3338      	adds	r3, #56	; 0x38
 800ec38:	4974      	ldr	r1, [pc, #464]	; (800ee0c <_Z41__static_initialization_and_destruction_0ii+0x390>)
 800ec3a:	4618      	mov	r0, r3
 800ec3c:	f7f2 fa84 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"loop", TOKEN_LOOP},
 800ec40:	2308      	movs	r3, #8
 800ec42:	f887 3165 	strb.w	r3, [r7, #357]	; 0x165
};
 800ec46:	f207 1265 	addw	r2, r7, #357	; 0x165
 800ec4a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800ec4e:	3354      	adds	r3, #84	; 0x54
 800ec50:	496f      	ldr	r1, [pc, #444]	; (800ee10 <_Z41__static_initialization_and_destruction_0ii+0x394>)
 800ec52:	4618      	mov	r0, r3
 800ec54:	f7f2 fa50 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"finish", TOKEN_FINISH},
 800ec58:	2309      	movs	r3, #9
 800ec5a:	f887 3166 	strb.w	r3, [r7, #358]	; 0x166
};
 800ec5e:	f507 72b3 	add.w	r2, r7, #358	; 0x166
 800ec62:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800ec66:	3370      	adds	r3, #112	; 0x70
 800ec68:	496a      	ldr	r1, [pc, #424]	; (800ee14 <_Z41__static_initialization_and_destruction_0ii+0x398>)
 800ec6a:	4618      	mov	r0, r3
 800ec6c:	f7f2 fa94 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"if", TOKEN_IF},
 800ec70:	2310      	movs	r3, #16
 800ec72:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167
};
 800ec76:	f207 1267 	addw	r2, r7, #359	; 0x167
 800ec7a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800ec7e:	338c      	adds	r3, #140	; 0x8c
 800ec80:	4965      	ldr	r1, [pc, #404]	; (800ee18 <_Z41__static_initialization_and_destruction_0ii+0x39c>)
 800ec82:	4618      	mov	r0, r3
 800ec84:	f7f2 fab0 	bl	80011e8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>
	{"elseif", TOKEN_ELSEIF},
 800ec88:	2311      	movs	r3, #17
 800ec8a:	f887 3168 	strb.w	r3, [r7, #360]	; 0x168
};
 800ec8e:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 800ec92:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800ec96:	33a8      	adds	r3, #168	; 0xa8
 800ec98:	4960      	ldr	r1, [pc, #384]	; (800ee1c <_Z41__static_initialization_and_destruction_0ii+0x3a0>)
 800ec9a:	4618      	mov	r0, r3
 800ec9c:	f7f2 fa7c 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"else", TOKEN_ELSE},
 800eca0:	2312      	movs	r3, #18
 800eca2:	f887 3169 	strb.w	r3, [r7, #361]	; 0x169
};
 800eca6:	f207 1269 	addw	r2, r7, #361	; 0x169
 800ecaa:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800ecae:	33c4      	adds	r3, #196	; 0xc4
 800ecb0:	495b      	ldr	r1, [pc, #364]	; (800ee20 <_Z41__static_initialization_and_destruction_0ii+0x3a4>)
 800ecb2:	4618      	mov	r0, r3
 800ecb4:	f7f2 fa20 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"while", TOKEN_WHILE},
 800ecb8:	2313      	movs	r3, #19
 800ecba:	f887 316a 	strb.w	r3, [r7, #362]	; 0x16a
};
 800ecbe:	f507 72b5 	add.w	r2, r7, #362	; 0x16a
 800ecc2:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800ecc6:	33e0      	adds	r3, #224	; 0xe0
 800ecc8:	4956      	ldr	r1, [pc, #344]	; (800ee24 <_Z41__static_initialization_and_destruction_0ii+0x3a8>)
 800ecca:	4618      	mov	r0, r3
 800eccc:	f7f2 fa3c 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"end", TOKEN_END},
 800ecd0:	2314      	movs	r3, #20
 800ecd2:	f887 316b 	strb.w	r3, [r7, #363]	; 0x16b
};
 800ecd6:	f207 126b 	addw	r2, r7, #363	; 0x16b
 800ecda:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800ecde:	33fc      	adds	r3, #252	; 0xfc
 800ece0:	4951      	ldr	r1, [pc, #324]	; (800ee28 <_Z41__static_initialization_and_destruction_0ii+0x3ac>)
 800ece2:	4618      	mov	r0, r3
 800ece4:	f7f2 faa8 	bl	8001238 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>
 800ece8:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800ecec:	f107 0248 	add.w	r2, r7, #72	; 0x48
 800ecf0:	601a      	str	r2, [r3, #0]
 800ecf2:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800ecf6:	220a      	movs	r2, #10
 800ecf8:	605a      	str	r2, [r3, #4]
 800ecfa:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800ecfe:	4618      	mov	r0, r3
 800ed00:	f7f2 ff9b 	bl	8001c3a <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 800ed04:	f507 71b6 	add.w	r1, r7, #364	; 0x16c
 800ed08:	f107 0240 	add.w	r2, r7, #64	; 0x40
 800ed0c:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800ed10:	9300      	str	r3, [sp, #0]
 800ed12:	460b      	mov	r3, r1
 800ed14:	ca06      	ldmia	r2, {r1, r2}
 800ed16:	4845      	ldr	r0, [pc, #276]	; (800ee2c <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 800ed18:	f7f2 ffa7 	bl	8001c6a <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>
 800ed1c:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800ed20:	4618      	mov	r0, r3
 800ed22:	f7f2 ff96 	bl	8001c52 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 800ed26:	f107 0448 	add.w	r4, r7, #72	; 0x48
 800ed2a:	f504 748c 	add.w	r4, r4, #280	; 0x118
 800ed2e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800ed32:	429c      	cmp	r4, r3
 800ed34:	d004      	beq.n	800ed40 <_Z41__static_initialization_and_destruction_0ii+0x2c4>
 800ed36:	3c1c      	subs	r4, #28
 800ed38:	4620      	mov	r0, r4
 800ed3a:	f7f2 f9d0 	bl	80010de <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 800ed3e:	e7f6      	b.n	800ed2e <_Z41__static_initialization_and_destruction_0ii+0x2b2>
};
 800ed40:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 800ed44:	2200      	movs	r2, #0
 800ed46:	601a      	str	r2, [r3, #0]
 800ed48:	605a      	str	r2, [r3, #4]
 800ed4a:	609a      	str	r2, [r3, #8]
 800ed4c:	233c      	movs	r3, #60	; 0x3c
 800ed4e:	f887 317c 	strb.w	r3, [r7, #380]	; 0x17c
 800ed52:	231b      	movs	r3, #27
 800ed54:	f887 317d 	strb.w	r3, [r7, #381]	; 0x17d
 800ed58:	231c      	movs	r3, #28
 800ed5a:	f887 317e 	strb.w	r3, [r7, #382]	; 0x17e
 800ed5e:	233e      	movs	r3, #62	; 0x3e
 800ed60:	f887 317f 	strb.w	r3, [r7, #383]	; 0x17f
 800ed64:	2319      	movs	r3, #25
 800ed66:	f887 3180 	strb.w	r3, [r7, #384]	; 0x180
 800ed6a:	231a      	movs	r3, #26
 800ed6c:	f887 3181 	strb.w	r3, [r7, #385]	; 0x181
 800ed70:	233d      	movs	r3, #61	; 0x3d
 800ed72:	f887 3182 	strb.w	r3, [r7, #386]	; 0x182
 800ed76:	2318      	movs	r3, #24
 800ed78:	f887 3183 	strb.w	r3, [r7, #387]	; 0x183
 800ed7c:	231d      	movs	r3, #29
 800ed7e:	f887 3184 	strb.w	r3, [r7, #388]	; 0x184
 800ed82:	2321      	movs	r3, #33	; 0x21
 800ed84:	f887 3185 	strb.w	r3, [r7, #389]	; 0x185
 800ed88:	2317      	movs	r3, #23
 800ed8a:	f887 3186 	strb.w	r3, [r7, #390]	; 0x186
 800ed8e:	231e      	movs	r3, #30
 800ed90:	f887 3187 	strb.w	r3, [r7, #391]	; 0x187
 800ed94:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 800ed98:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 800ed9c:	2304      	movs	r3, #4
 800ed9e:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 800eda2:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 800eda6:	4618      	mov	r0, r3
 800eda8:	f7f2 ff8f 	bl	8001cca <_ZNSaISt4pairIKc12double_tokenEEC1Ev>
 800edac:	f507 72c4 	add.w	r2, r7, #392	; 0x188
 800edb0:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 800edb4:	9300      	str	r3, [sp, #0]
 800edb6:	4613      	mov	r3, r2
 800edb8:	f507 72ba 	add.w	r2, r7, #372	; 0x174
 800edbc:	ca06      	ldmia	r2, {r1, r2}
 800edbe:	481c      	ldr	r0, [pc, #112]	; (800ee30 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 800edc0:	f7f2 ff9b 	bl	8001cfa <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 800edc4:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 800edc8:	4618      	mov	r0, r3
 800edca:	f7f2 ff8a 	bl	8001ce2 <_ZNSaISt4pairIKc12double_tokenEED1Ev>
static const std::map<char, double_token> token_double_chars
 800edce:	1d3b      	adds	r3, r7, #4
 800edd0:	681b      	ldr	r3, [r3, #0]
 800edd2:	2b00      	cmp	r3, #0
 800edd4:	d10e      	bne.n	800edf4 <_Z41__static_initialization_and_destruction_0ii+0x378>
 800edd6:	463b      	mov	r3, r7
 800edd8:	681b      	ldr	r3, [r3, #0]
 800edda:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800edde:	4293      	cmp	r3, r2
 800ede0:	d108      	bne.n	800edf4 <_Z41__static_initialization_and_destruction_0ii+0x378>
 800ede2:	4813      	ldr	r0, [pc, #76]	; (800ee30 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 800ede4:	f7fa fc1b 	bl	800961e <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>
static const std::map<std::string, token_type> token_strings
 800ede8:	4810      	ldr	r0, [pc, #64]	; (800ee2c <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 800edea:	f7fa fc25 	bl	8009638 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
static const std::map<char, token_type> token_chars
 800edee:	4804      	ldr	r0, [pc, #16]	; (800ee00 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 800edf0:	f7fa fc2f 	bl	8009652 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>
 800edf4:	bf00      	nop
 800edf6:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 800edfa:	46bd      	mov	sp, r7
 800edfc:	bd90      	pop	{r4, r7, pc}
 800edfe:	bf00      	nop
 800ee00:	200002ec 	.word	0x200002ec
 800ee04:	08027778 	.word	0x08027778
 800ee08:	08027780 	.word	0x08027780
 800ee0c:	08027788 	.word	0x08027788
 800ee10:	08027790 	.word	0x08027790
 800ee14:	08027798 	.word	0x08027798
 800ee18:	080277a0 	.word	0x080277a0
 800ee1c:	080277a4 	.word	0x080277a4
 800ee20:	080277ac 	.word	0x080277ac
 800ee24:	080277b4 	.word	0x080277b4
 800ee28:	080277bc 	.word	0x080277bc
 800ee2c:	20000304 	.word	0x20000304
 800ee30:	2000031c 	.word	0x2000031c

0800ee34 <_GLOBAL__sub_I__ZN16Function_handler12run_functionEP13Function_call>:
 800ee34:	b580      	push	{r7, lr}
 800ee36:	af00      	add	r7, sp, #0
 800ee38:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800ee3c:	2001      	movs	r0, #1
 800ee3e:	f7ff fe1d 	bl	800ea7c <_Z41__static_initialization_and_destruction_0ii>
 800ee42:	bd80      	pop	{r7, pc}

0800ee44 <_GLOBAL__sub_D__ZN16Function_handler12run_functionEP13Function_call>:
 800ee44:	b580      	push	{r7, lr}
 800ee46:	af00      	add	r7, sp, #0
 800ee48:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800ee4c:	2000      	movs	r0, #0
 800ee4e:	f7ff fe15 	bl	800ea7c <_Z41__static_initialization_and_destruction_0ii>
 800ee52:	bd80      	pop	{r7, pc}

0800ee54 <_ZNSt7__cxx114stoiERKNS_12basic_stringIcSt11char_traitsIcESaIcEEEPji>:

#if _GLIBCXX_USE_C99_STDLIB
  // 21.4 Numeric Conversions [string.conversions].
  inline int
  stoi(const string& __str, size_t* __idx = 0, int __base = 10)
  { return __gnu_cxx::__stoa<long, int>(&std::strtol, "stoi", __str.c_str(),
 800ee54:	b580      	push	{r7, lr}
 800ee56:	b086      	sub	sp, #24
 800ee58:	af02      	add	r7, sp, #8
 800ee5a:	60f8      	str	r0, [r7, #12]
 800ee5c:	60b9      	str	r1, [r7, #8]
 800ee5e:	607a      	str	r2, [r7, #4]
 800ee60:	68f8      	ldr	r0, [r7, #12]
 800ee62:	f014 f91d 	bl	80230a0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
 800ee66:	4602      	mov	r2, r0
 800ee68:	687b      	ldr	r3, [r7, #4]
 800ee6a:	9300      	str	r3, [sp, #0]
 800ee6c:	68bb      	ldr	r3, [r7, #8]
 800ee6e:	4904      	ldr	r1, [pc, #16]	; (800ee80 <_ZNSt7__cxx114stoiERKNS_12basic_stringIcSt11char_traitsIcESaIcEEEPji+0x2c>)
 800ee70:	4804      	ldr	r0, [pc, #16]	; (800ee84 <_ZNSt7__cxx114stoiERKNS_12basic_stringIcSt11char_traitsIcESaIcEEEPji+0x30>)
 800ee72:	f000 fd18 	bl	800f8a6 <_ZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_>
 800ee76:	4603      	mov	r3, r0
					__idx, __base); }
 800ee78:	4618      	mov	r0, r3
 800ee7a:	3710      	adds	r7, #16
 800ee7c:	46bd      	mov	sp, r7
 800ee7e:	bd80      	pop	{r7, pc}
 800ee80:	080277c0 	.word	0x080277c0
 800ee84:	080251f9 	.word	0x080251f9

0800ee88 <_ZNSt7__cxx114stofERKNS_12basic_stringIcSt11char_traitsIcESaIcEEEPj>:
			     __idx, __base); }

  // NB: strtof vs strtod.
  inline float
  stof(const string& __str, size_t* __idx = 0)
  { return __gnu_cxx::__stoa(&std::strtof, "stof", __str.c_str(), __idx); }
 800ee88:	b580      	push	{r7, lr}
 800ee8a:	b082      	sub	sp, #8
 800ee8c:	af00      	add	r7, sp, #0
 800ee8e:	6078      	str	r0, [r7, #4]
 800ee90:	6039      	str	r1, [r7, #0]
 800ee92:	6878      	ldr	r0, [r7, #4]
 800ee94:	f014 f904 	bl	80230a0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
 800ee98:	4602      	mov	r2, r0
 800ee9a:	683b      	ldr	r3, [r7, #0]
 800ee9c:	4905      	ldr	r1, [pc, #20]	; (800eeb4 <_ZNSt7__cxx114stofERKNS_12basic_stringIcSt11char_traitsIcESaIcEEEPj+0x2c>)
 800ee9e:	4806      	ldr	r0, [pc, #24]	; (800eeb8 <_ZNSt7__cxx114stofERKNS_12basic_stringIcSt11char_traitsIcESaIcEEEPj+0x30>)
 800eea0:	f000 fd81 	bl	800f9a6 <_ZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_>
 800eea4:	eef0 7a40 	vmov.f32	s15, s0
 800eea8:	eeb0 0a67 	vmov.f32	s0, s15
 800eeac:	3708      	adds	r7, #8
 800eeae:	46bd      	mov	sp, r7
 800eeb0:	bd80      	pop	{r7, pc}
 800eeb2:	bf00      	nop
 800eeb4:	080277c8 	.word	0x080277c8
 800eeb8:	0802503d 	.word	0x0802503d

0800eebc <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>:
    struct _Copy_ctor_base : _Variant_storage_alias<_Types...>
 800eebc:	b580      	push	{r7, lr}
 800eebe:	b082      	sub	sp, #8
 800eec0:	af00      	add	r7, sp, #0
 800eec2:	6078      	str	r0, [r7, #4]
 800eec4:	687b      	ldr	r3, [r7, #4]
 800eec6:	4618      	mov	r0, r3
 800eec8:	f000 fe0e 	bl	800fae8 <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>
 800eecc:	687b      	ldr	r3, [r7, #4]
 800eece:	4618      	mov	r0, r3
 800eed0:	3708      	adds	r7, #8
 800eed2:	46bd      	mov	sp, r7
 800eed4:	bd80      	pop	{r7, pc}

0800eed6 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>:
    struct _Move_ctor_base : _Copy_ctor_alias<_Types...>
 800eed6:	b580      	push	{r7, lr}
 800eed8:	b082      	sub	sp, #8
 800eeda:	af00      	add	r7, sp, #0
 800eedc:	6078      	str	r0, [r7, #4]
 800eede:	687b      	ldr	r3, [r7, #4]
 800eee0:	4618      	mov	r0, r3
 800eee2:	f7ff ffeb 	bl	800eebc <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>
 800eee6:	687b      	ldr	r3, [r7, #4]
 800eee8:	4618      	mov	r0, r3
 800eeea:	3708      	adds	r7, #8
 800eeec:	46bd      	mov	sp, r7
 800eeee:	bd80      	pop	{r7, pc}

0800eef0 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>:
    struct _Copy_assign_base : _Move_ctor_alias<_Types...>
 800eef0:	b580      	push	{r7, lr}
 800eef2:	b082      	sub	sp, #8
 800eef4:	af00      	add	r7, sp, #0
 800eef6:	6078      	str	r0, [r7, #4]
 800eef8:	687b      	ldr	r3, [r7, #4]
 800eefa:	4618      	mov	r0, r3
 800eefc:	f7ff ffeb 	bl	800eed6 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>
 800ef00:	687b      	ldr	r3, [r7, #4]
 800ef02:	4618      	mov	r0, r3
 800ef04:	3708      	adds	r7, #8
 800ef06:	46bd      	mov	sp, r7
 800ef08:	bd80      	pop	{r7, pc}

0800ef0a <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>:
    struct _Move_assign_base : _Copy_assign_alias<_Types...>
 800ef0a:	b580      	push	{r7, lr}
 800ef0c:	b082      	sub	sp, #8
 800ef0e:	af00      	add	r7, sp, #0
 800ef10:	6078      	str	r0, [r7, #4]
 800ef12:	687b      	ldr	r3, [r7, #4]
 800ef14:	4618      	mov	r0, r3
 800ef16:	f7ff ffeb 	bl	800eef0 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>
 800ef1a:	687b      	ldr	r3, [r7, #4]
 800ef1c:	4618      	mov	r0, r3
 800ef1e:	3708      	adds	r7, #8
 800ef20:	46bd      	mov	sp, r7
 800ef22:	bd80      	pop	{r7, pc}

0800ef24 <_ZNSt8__detail9__variant13_Variant_baseIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>:
    struct _Variant_base : _Move_assign_alias<_Types...>
 800ef24:	b580      	push	{r7, lr}
 800ef26:	b082      	sub	sp, #8
 800ef28:	af00      	add	r7, sp, #0
 800ef2a:	6078      	str	r0, [r7, #4]
 800ef2c:	687b      	ldr	r3, [r7, #4]
 800ef2e:	4618      	mov	r0, r3
 800ef30:	f7ff ffeb 	bl	800ef0a <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>
 800ef34:	687b      	ldr	r3, [r7, #4]
 800ef36:	4618      	mov	r0, r3
 800ef38:	3708      	adds	r7, #8
 800ef3a:	46bd      	mov	sp, r7
 800ef3c:	bd80      	pop	{r7, pc}

0800ef3e <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1Ev>:
      variant() = default;
 800ef3e:	b580      	push	{r7, lr}
 800ef40:	b082      	sub	sp, #8
 800ef42:	af00      	add	r7, sp, #0
 800ef44:	6078      	str	r0, [r7, #4]
 800ef46:	687b      	ldr	r3, [r7, #4]
 800ef48:	4618      	mov	r0, r3
 800ef4a:	f000 fdc0 	bl	800face <_ZNSt8__detail9__variant13_Variant_baseIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1Ev>
 800ef4e:	687b      	ldr	r3, [r7, #4]
 800ef50:	4618      	mov	r0, r3
 800ef52:	3708      	adds	r7, #8
 800ef54:	46bd      	mov	sp, r7
 800ef56:	bd80      	pop	{r7, pc}

0800ef58 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>:
      ~variant() = default;
 800ef58:	b580      	push	{r7, lr}
 800ef5a:	b082      	sub	sp, #8
 800ef5c:	af00      	add	r7, sp, #0
 800ef5e:	6078      	str	r0, [r7, #4]
 800ef60:	687b      	ldr	r3, [r7, #4]
 800ef62:	4618      	mov	r0, r3
 800ef64:	f7ff ffde 	bl	800ef24 <_ZNSt8__detail9__variant13_Variant_baseIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>
 800ef68:	687b      	ldr	r3, [r7, #4]
 800ef6a:	4618      	mov	r0, r3
 800ef6c:	3708      	adds	r7, #8
 800ef6e:	46bd      	mov	sp, r7
 800ef70:	bd80      	pop	{r7, pc}

0800ef72 <_ZN5TokenC1Ev>:
#include <string>
#include "token_types.h"

typedef std::variant<std::string, int, float, bool> token_value;

class Token
 800ef72:	b580      	push	{r7, lr}
 800ef74:	b082      	sub	sp, #8
 800ef76:	af00      	add	r7, sp, #0
 800ef78:	6078      	str	r0, [r7, #4]
 800ef7a:	687b      	ldr	r3, [r7, #4]
 800ef7c:	3304      	adds	r3, #4
 800ef7e:	4618      	mov	r0, r3
 800ef80:	f7ff ffdd 	bl	800ef3e <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1Ev>
 800ef84:	687b      	ldr	r3, [r7, #4]
 800ef86:	4618      	mov	r0, r3
 800ef88:	3708      	adds	r7, #8
 800ef8a:	46bd      	mov	sp, r7
 800ef8c:	bd80      	pop	{r7, pc}

0800ef8e <_ZN5TokenD1Ev>:
 800ef8e:	b580      	push	{r7, lr}
 800ef90:	b082      	sub	sp, #8
 800ef92:	af00      	add	r7, sp, #0
 800ef94:	6078      	str	r0, [r7, #4]
 800ef96:	687b      	ldr	r3, [r7, #4]
 800ef98:	3304      	adds	r3, #4
 800ef9a:	4618      	mov	r0, r3
 800ef9c:	f7ff ffdc 	bl	800ef58 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>
 800efa0:	687b      	ldr	r3, [r7, #4]
 800efa2:	4618      	mov	r0, r3
 800efa4:	3708      	adds	r7, #8
 800efa6:	46bd      	mov	sp, r7
 800efa8:	bd80      	pop	{r7, pc}

0800efaa <_ZN5LexerC1Ev>:
#include <Lexer.h>

Lexer::Lexer()
 800efaa:	b580      	push	{r7, lr}
 800efac:	b082      	sub	sp, #8
 800efae:	af00      	add	r7, sp, #0
 800efb0:	6078      	str	r0, [r7, #4]
 800efb2:	687b      	ldr	r3, [r7, #4]
 800efb4:	3304      	adds	r3, #4
 800efb6:	4618      	mov	r0, r3
 800efb8:	f7ff ffdb 	bl	800ef72 <_ZN5TokenC1Ev>
{
	// needs to start with whitespace in buffer
	char_buffer = ' ';
 800efbc:	687b      	ldr	r3, [r7, #4]
 800efbe:	2220      	movs	r2, #32
 800efc0:	701a      	strb	r2, [r3, #0]
}
 800efc2:	687b      	ldr	r3, [r7, #4]
 800efc4:	4618      	mov	r0, r3
 800efc6:	3708      	adds	r7, #8
 800efc8:	46bd      	mov	sp, r7
 800efca:	bd80      	pop	{r7, pc}

0800efcc <_ZN5Lexer17match_single_charEv>:

bool Lexer::match_single_char()
{
 800efcc:	b580      	push	{r7, lr}
 800efce:	b084      	sub	sp, #16
 800efd0:	af00      	add	r7, sp, #0
 800efd2:	6078      	str	r0, [r7, #4]
	auto result = token_chars.find(char_buffer);
 800efd4:	687b      	ldr	r3, [r7, #4]
 800efd6:	4619      	mov	r1, r3
 800efd8:	4815      	ldr	r0, [pc, #84]	; (800f030 <_ZN5Lexer17match_single_charEv+0x64>)
 800efda:	f000 fd91 	bl	800fb00 <_ZNKSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEE4findERS4_>
 800efde:	4603      	mov	r3, r0
 800efe0:	60bb      	str	r3, [r7, #8]
	if (result != token_chars.end())
 800efe2:	4813      	ldr	r0, [pc, #76]	; (800f030 <_ZN5Lexer17match_single_charEv+0x64>)
 800efe4:	f000 fd9b 	bl	800fb1e <_ZNKSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEE3endEv>
 800efe8:	4603      	mov	r3, r0
 800efea:	60fb      	str	r3, [r7, #12]
 800efec:	f107 020c 	add.w	r2, r7, #12
 800eff0:	f107 0308 	add.w	r3, r7, #8
 800eff4:	4611      	mov	r1, r2
 800eff6:	4618      	mov	r0, r3
 800eff8:	f000 fd9e 	bl	800fb38 <_ZStneRKSt23_Rb_tree_const_iteratorISt4pairIKc10token_typeEES6_>
 800effc:	4603      	mov	r3, r0
 800effe:	2b00      	cmp	r3, #0
 800f000:	d010      	beq.n	800f024 <_ZN5Lexer17match_single_charEv+0x58>
	{
		product.type = result->second;
 800f002:	f107 0308 	add.w	r3, r7, #8
 800f006:	4618      	mov	r0, r3
 800f008:	f000 fdaa 	bl	800fb60 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKc10token_typeEEptEv>
 800f00c:	4603      	mov	r3, r0
 800f00e:	785a      	ldrb	r2, [r3, #1]
 800f010:	687b      	ldr	r3, [r7, #4]
 800f012:	711a      	strb	r2, [r3, #4]
		char_buffer = Transmitter::receive_code_char();
 800f014:	f009 f93a 	bl	801828c <_ZN11Transmitter17receive_code_charEv>
 800f018:	4603      	mov	r3, r0
 800f01a:	461a      	mov	r2, r3
 800f01c:	687b      	ldr	r3, [r7, #4]
 800f01e:	701a      	strb	r2, [r3, #0]
		return true;
 800f020:	2301      	movs	r3, #1
 800f022:	e000      	b.n	800f026 <_ZN5Lexer17match_single_charEv+0x5a>
	}
	return false;
 800f024:	2300      	movs	r3, #0
}
 800f026:	4618      	mov	r0, r3
 800f028:	3710      	adds	r7, #16
 800f02a:	46bd      	mov	sp, r7
 800f02c:	bd80      	pop	{r7, pc}
 800f02e:	bf00      	nop
 800f030:	20000350 	.word	0x20000350

0800f034 <_ZN5Lexer17match_double_charEv>:

bool Lexer::match_double_char()
{
 800f034:	b580      	push	{r7, lr}
 800f036:	b084      	sub	sp, #16
 800f038:	af00      	add	r7, sp, #0
 800f03a:	6078      	str	r0, [r7, #4]
	auto result = token_double_chars.find(char_buffer);
 800f03c:	687b      	ldr	r3, [r7, #4]
 800f03e:	4619      	mov	r1, r3
 800f040:	481f      	ldr	r0, [pc, #124]	; (800f0c0 <_ZN5Lexer17match_double_charEv+0x8c>)
 800f042:	f000 fd9b 	bl	800fb7c <_ZNKSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEE4findERS4_>
 800f046:	4603      	mov	r3, r0
 800f048:	60bb      	str	r3, [r7, #8]
	if (result != token_double_chars.end())
 800f04a:	481d      	ldr	r0, [pc, #116]	; (800f0c0 <_ZN5Lexer17match_double_charEv+0x8c>)
 800f04c:	f000 fda5 	bl	800fb9a <_ZNKSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEE3endEv>
 800f050:	4603      	mov	r3, r0
 800f052:	60fb      	str	r3, [r7, #12]
 800f054:	f107 020c 	add.w	r2, r7, #12
 800f058:	f107 0308 	add.w	r3, r7, #8
 800f05c:	4611      	mov	r1, r2
 800f05e:	4618      	mov	r0, r3
 800f060:	f000 fda8 	bl	800fbb4 <_ZStneRKSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEES6_>
 800f064:	4603      	mov	r3, r0
 800f066:	2b00      	cmp	r3, #0
 800f068:	d024      	beq.n	800f0b4 <_ZN5Lexer17match_double_charEv+0x80>
	{
		char_buffer = Transmitter::receive_code_char();
 800f06a:	f009 f90f 	bl	801828c <_ZN11Transmitter17receive_code_charEv>
 800f06e:	4603      	mov	r3, r0
 800f070:	461a      	mov	r2, r3
 800f072:	687b      	ldr	r3, [r7, #4]
 800f074:	701a      	strb	r2, [r3, #0]
		if (char_buffer == '=')
 800f076:	687b      	ldr	r3, [r7, #4]
 800f078:	781b      	ldrb	r3, [r3, #0]
 800f07a:	2b3d      	cmp	r3, #61	; 0x3d
 800f07c:	d10f      	bne.n	800f09e <_ZN5Lexer17match_double_charEv+0x6a>
		{
			product.type = result->second.double_char;
 800f07e:	f107 0308 	add.w	r3, r7, #8
 800f082:	4618      	mov	r0, r3
 800f084:	f000 fdaa 	bl	800fbdc <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEEptEv>
 800f088:	4603      	mov	r3, r0
 800f08a:	789a      	ldrb	r2, [r3, #2]
 800f08c:	687b      	ldr	r3, [r7, #4]
 800f08e:	711a      	strb	r2, [r3, #4]
			char_buffer = Transmitter::receive_code_char();
 800f090:	f009 f8fc 	bl	801828c <_ZN11Transmitter17receive_code_charEv>
 800f094:	4603      	mov	r3, r0
 800f096:	461a      	mov	r2, r3
 800f098:	687b      	ldr	r3, [r7, #4]
 800f09a:	701a      	strb	r2, [r3, #0]
 800f09c:	e008      	b.n	800f0b0 <_ZN5Lexer17match_double_charEv+0x7c>
		}
		else
		{
			product.type = result->second.single_char;
 800f09e:	f107 0308 	add.w	r3, r7, #8
 800f0a2:	4618      	mov	r0, r3
 800f0a4:	f000 fd9a 	bl	800fbdc <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEEptEv>
 800f0a8:	4603      	mov	r3, r0
 800f0aa:	785a      	ldrb	r2, [r3, #1]
 800f0ac:	687b      	ldr	r3, [r7, #4]
 800f0ae:	711a      	strb	r2, [r3, #4]
		}
		return true;
 800f0b0:	2301      	movs	r3, #1
 800f0b2:	e000      	b.n	800f0b6 <_ZN5Lexer17match_double_charEv+0x82>
	}
	return false;
 800f0b4:	2300      	movs	r3, #0
}
 800f0b6:	4618      	mov	r0, r3
 800f0b8:	3710      	adds	r7, #16
 800f0ba:	46bd      	mov	sp, r7
 800f0bc:	bd80      	pop	{r7, pc}
 800f0be:	bf00      	nop
 800f0c0:	20000380 	.word	0x20000380

0800f0c4 <_ZN5Lexer10build_wordERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void Lexer::build_word(std::string &word)
{
 800f0c4:	b580      	push	{r7, lr}
 800f0c6:	b082      	sub	sp, #8
 800f0c8:	af00      	add	r7, sp, #0
 800f0ca:	6078      	str	r0, [r7, #4]
 800f0cc:	6039      	str	r1, [r7, #0]
	do
	{
		word.push_back(char_buffer);
 800f0ce:	687b      	ldr	r3, [r7, #4]
 800f0d0:	781b      	ldrb	r3, [r3, #0]
 800f0d2:	4619      	mov	r1, r3
 800f0d4:	6838      	ldr	r0, [r7, #0]
 800f0d6:	f013 febf 	bl	8022e58 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc>
		char_buffer = Transmitter::receive_code_char();
 800f0da:	f009 f8d7 	bl	801828c <_ZN11Transmitter17receive_code_charEv>
 800f0de:	4603      	mov	r3, r0
 800f0e0:	461a      	mov	r2, r3
 800f0e2:	687b      	ldr	r3, [r7, #4]
 800f0e4:	701a      	strb	r2, [r3, #0]
	} while (isalnum(char_buffer) || char_buffer == '_');
 800f0e6:	687b      	ldr	r3, [r7, #4]
 800f0e8:	781b      	ldrb	r3, [r3, #0]
 800f0ea:	4618      	mov	r0, r3
 800f0ec:	f015 f802 	bl	80240f4 <isalnum>
 800f0f0:	4603      	mov	r3, r0
 800f0f2:	2b00      	cmp	r3, #0
 800f0f4:	d1eb      	bne.n	800f0ce <_ZN5Lexer10build_wordERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xa>
 800f0f6:	687b      	ldr	r3, [r7, #4]
 800f0f8:	781b      	ldrb	r3, [r3, #0]
 800f0fa:	2b5f      	cmp	r3, #95	; 0x5f
 800f0fc:	d100      	bne.n	800f100 <_ZN5Lexer10build_wordERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x3c>
	do
 800f0fe:	e7e6      	b.n	800f0ce <_ZN5Lexer10build_wordERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xa>
}
 800f100:	bf00      	nop
 800f102:	3708      	adds	r7, #8
 800f104:	46bd      	mov	sp, r7
 800f106:	bd80      	pop	{r7, pc}

0800f108 <_ZN5Lexer19match_keyword_or_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void Lexer::match_keyword_or_id(std::string &word)
{
 800f108:	b580      	push	{r7, lr}
 800f10a:	b08a      	sub	sp, #40	; 0x28
 800f10c:	af00      	add	r7, sp, #0
 800f10e:	6078      	str	r0, [r7, #4]
 800f110:	6039      	str	r1, [r7, #0]
	auto result = token_strings.find(word);
 800f112:	6839      	ldr	r1, [r7, #0]
 800f114:	481c      	ldr	r0, [pc, #112]	; (800f188 <_ZN5Lexer19match_keyword_or_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x80>)
 800f116:	f000 fd6f 	bl	800fbf8 <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEE4findERSA_>
 800f11a:	4603      	mov	r3, r0
 800f11c:	60bb      	str	r3, [r7, #8]
	if (result != token_strings.end())
 800f11e:	481a      	ldr	r0, [pc, #104]	; (800f188 <_ZN5Lexer19match_keyword_or_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x80>)
 800f120:	f000 fd79 	bl	800fc16 <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEE3endEv>
 800f124:	4603      	mov	r3, r0
 800f126:	60fb      	str	r3, [r7, #12]
 800f128:	f107 020c 	add.w	r2, r7, #12
 800f12c:	f107 0308 	add.w	r3, r7, #8
 800f130:	4611      	mov	r1, r2
 800f132:	4618      	mov	r0, r3
 800f134:	f000 fd7c 	bl	800fc30 <_ZStneRKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEESC_>
 800f138:	4603      	mov	r3, r0
 800f13a:	2b00      	cmp	r3, #0
 800f13c:	d009      	beq.n	800f152 <_ZN5Lexer19match_keyword_or_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x4a>
	{
		product.type = result->second;
 800f13e:	f107 0308 	add.w	r3, r7, #8
 800f142:	4618      	mov	r0, r3
 800f144:	f000 fd88 	bl	800fc58 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEptEv>
 800f148:	4603      	mov	r3, r0
 800f14a:	7e1a      	ldrb	r2, [r3, #24]
 800f14c:	687b      	ldr	r3, [r7, #4]
 800f14e:	711a      	strb	r2, [r3, #4]
	else
	{
		product.type = TOKEN_IDENTIFIER;
		product.value = std::string(word);
	}
}
 800f150:	e015      	b.n	800f17e <_ZN5Lexer19match_keyword_or_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x76>
		product.type = TOKEN_IDENTIFIER;
 800f152:	687b      	ldr	r3, [r7, #4]
 800f154:	2202      	movs	r2, #2
 800f156:	711a      	strb	r2, [r3, #4]
		product.value = std::string(word);
 800f158:	f107 0310 	add.w	r3, r7, #16
 800f15c:	6839      	ldr	r1, [r7, #0]
 800f15e:	4618      	mov	r0, r3
 800f160:	f013 ffc4 	bl	80230ec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 800f164:	687b      	ldr	r3, [r7, #4]
 800f166:	3308      	adds	r3, #8
 800f168:	f107 0210 	add.w	r2, r7, #16
 800f16c:	4611      	mov	r1, r2
 800f16e:	4618      	mov	r0, r3
 800f170:	f000 fd93 	bl	800fc9a <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_>
 800f174:	f107 0310 	add.w	r3, r7, #16
 800f178:	4618      	mov	r0, r3
 800f17a:	f013 fdf6 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
}
 800f17e:	bf00      	nop
 800f180:	3728      	adds	r7, #40	; 0x28
 800f182:	46bd      	mov	sp, r7
 800f184:	bd80      	pop	{r7, pc}
 800f186:	bf00      	nop
 800f188:	20000368 	.word	0x20000368

0800f18c <_ZN5Lexer19build_keyword_or_idEv>:

bool Lexer::build_keyword_or_id()
{
 800f18c:	b590      	push	{r4, r7, lr}
 800f18e:	b089      	sub	sp, #36	; 0x24
 800f190:	af00      	add	r7, sp, #0
 800f192:	6078      	str	r0, [r7, #4]
	if (isalpha(char_buffer))
 800f194:	687b      	ldr	r3, [r7, #4]
 800f196:	781b      	ldrb	r3, [r3, #0]
 800f198:	4618      	mov	r0, r3
 800f19a:	f014 ffb3 	bl	8024104 <isalpha>
 800f19e:	4603      	mov	r3, r0
 800f1a0:	2b00      	cmp	r3, #0
 800f1a2:	d017      	beq.n	800f1d4 <_ZN5Lexer19build_keyword_or_idEv+0x48>
	{
		std::string word;
 800f1a4:	f107 0308 	add.w	r3, r7, #8
 800f1a8:	4618      	mov	r0, r3
 800f1aa:	f013 fdbd 	bl	8022d28 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>
		build_word(word);
 800f1ae:	f107 0308 	add.w	r3, r7, #8
 800f1b2:	4619      	mov	r1, r3
 800f1b4:	6878      	ldr	r0, [r7, #4]
 800f1b6:	f7ff ff85 	bl	800f0c4 <_ZN5Lexer10build_wordERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
		match_keyword_or_id(word);
 800f1ba:	f107 0308 	add.w	r3, r7, #8
 800f1be:	4619      	mov	r1, r3
 800f1c0:	6878      	ldr	r0, [r7, #4]
 800f1c2:	f7ff ffa1 	bl	800f108 <_ZN5Lexer19match_keyword_or_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
		return true;
 800f1c6:	2401      	movs	r4, #1
		std::string word;
 800f1c8:	f107 0308 	add.w	r3, r7, #8
 800f1cc:	4618      	mov	r0, r3
 800f1ce:	f013 fdcc 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800f1d2:	e000      	b.n	800f1d6 <_ZN5Lexer19build_keyword_or_idEv+0x4a>
	}
	return false;
 800f1d4:	2400      	movs	r4, #0
 800f1d6:	4623      	mov	r3, r4
}
 800f1d8:	4618      	mov	r0, r3
 800f1da:	3724      	adds	r7, #36	; 0x24
 800f1dc:	46bd      	mov	sp, r7
 800f1de:	bd90      	pop	{r4, r7, pc}

0800f1e0 <_ZN5Lexer9build_intERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void Lexer::build_int(std::string &word)
{
 800f1e0:	b580      	push	{r7, lr}
 800f1e2:	b082      	sub	sp, #8
 800f1e4:	af00      	add	r7, sp, #0
 800f1e6:	6078      	str	r0, [r7, #4]
 800f1e8:	6039      	str	r1, [r7, #0]
	do
	{
		word.push_back(char_buffer);
 800f1ea:	687b      	ldr	r3, [r7, #4]
 800f1ec:	781b      	ldrb	r3, [r3, #0]
 800f1ee:	4619      	mov	r1, r3
 800f1f0:	6838      	ldr	r0, [r7, #0]
 800f1f2:	f013 fe31 	bl	8022e58 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc>
		char_buffer = Transmitter::receive_code_char();
 800f1f6:	f009 f849 	bl	801828c <_ZN11Transmitter17receive_code_charEv>
 800f1fa:	4603      	mov	r3, r0
 800f1fc:	461a      	mov	r2, r3
 800f1fe:	687b      	ldr	r3, [r7, #4]
 800f200:	701a      	strb	r2, [r3, #0]
	} while (isdigit(char_buffer));
 800f202:	687b      	ldr	r3, [r7, #4]
 800f204:	781b      	ldrb	r3, [r3, #0]
 800f206:	3b30      	subs	r3, #48	; 0x30
 800f208:	2b09      	cmp	r3, #9
 800f20a:	bf94      	ite	ls
 800f20c:	2301      	movls	r3, #1
 800f20e:	2300      	movhi	r3, #0
 800f210:	b2db      	uxtb	r3, r3
 800f212:	2b00      	cmp	r3, #0
 800f214:	d000      	beq.n	800f218 <_ZN5Lexer9build_intERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x38>
	do
 800f216:	e7e8      	b.n	800f1ea <_ZN5Lexer9build_intERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xa>
}
 800f218:	bf00      	nop
 800f21a:	3708      	adds	r7, #8
 800f21c:	46bd      	mov	sp, r7
 800f21e:	bd80      	pop	{r7, pc}

0800f220 <_ZN5Lexer18match_int_or_floatERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void Lexer::match_int_or_float(std::string &word)
{
 800f220:	b580      	push	{r7, lr}
 800f222:	b084      	sub	sp, #16
 800f224:	af00      	add	r7, sp, #0
 800f226:	6078      	str	r0, [r7, #4]
 800f228:	6039      	str	r1, [r7, #0]
	if (char_buffer != '.')
 800f22a:	687b      	ldr	r3, [r7, #4]
 800f22c:	781b      	ldrb	r3, [r3, #0]
 800f22e:	2b2e      	cmp	r3, #46	; 0x2e
 800f230:	d012      	beq.n	800f258 <_ZN5Lexer18match_int_or_floatERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x38>
	{
		product.type = TOKEN_INT;
 800f232:	687b      	ldr	r3, [r7, #4]
 800f234:	2203      	movs	r2, #3
 800f236:	711a      	strb	r2, [r3, #4]
		product.value = std::stoi(word);
 800f238:	220a      	movs	r2, #10
 800f23a:	2100      	movs	r1, #0
 800f23c:	6838      	ldr	r0, [r7, #0]
 800f23e:	f7ff fe09 	bl	800ee54 <_ZNSt7__cxx114stoiERKNS_12basic_stringIcSt11char_traitsIcESaIcEEEPji>
 800f242:	4603      	mov	r3, r0
 800f244:	60bb      	str	r3, [r7, #8]
 800f246:	687b      	ldr	r3, [r7, #4]
 800f248:	3308      	adds	r3, #8
 800f24a:	f107 0208 	add.w	r2, r7, #8
 800f24e:	4611      	mov	r1, r2
 800f250:	4618      	mov	r0, r3
 800f252:	f000 fd4e 	bl	800fcf2 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_>
	{
		build_int(word);
		product.type = TOKEN_FLOAT;
		product.value = std::stof(word);
	}
}
 800f256:	e016      	b.n	800f286 <_ZN5Lexer18match_int_or_floatERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x66>
		build_int(word);
 800f258:	6839      	ldr	r1, [r7, #0]
 800f25a:	6878      	ldr	r0, [r7, #4]
 800f25c:	f7ff ffc0 	bl	800f1e0 <_ZN5Lexer9build_intERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
		product.type = TOKEN_FLOAT;
 800f260:	687b      	ldr	r3, [r7, #4]
 800f262:	2204      	movs	r2, #4
 800f264:	711a      	strb	r2, [r3, #4]
		product.value = std::stof(word);
 800f266:	2100      	movs	r1, #0
 800f268:	6838      	ldr	r0, [r7, #0]
 800f26a:	f7ff fe0d 	bl	800ee88 <_ZNSt7__cxx114stofERKNS_12basic_stringIcSt11char_traitsIcESaIcEEEPj>
 800f26e:	eef0 7a40 	vmov.f32	s15, s0
 800f272:	edc7 7a03 	vstr	s15, [r7, #12]
 800f276:	687b      	ldr	r3, [r7, #4]
 800f278:	3308      	adds	r3, #8
 800f27a:	f107 020c 	add.w	r2, r7, #12
 800f27e:	4611      	mov	r1, r2
 800f280:	4618      	mov	r0, r3
 800f282:	f000 fd60 	bl	800fd46 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_>
}
 800f286:	bf00      	nop
 800f288:	3710      	adds	r7, #16
 800f28a:	46bd      	mov	sp, r7
 800f28c:	bd80      	pop	{r7, pc}

0800f28e <_ZN5Lexer18build_int_or_floatEv>:

bool Lexer::build_int_or_float()
{
 800f28e:	b590      	push	{r4, r7, lr}
 800f290:	b089      	sub	sp, #36	; 0x24
 800f292:	af00      	add	r7, sp, #0
 800f294:	6078      	str	r0, [r7, #4]
	if (isdigit(char_buffer) && char_buffer != '0')
 800f296:	687b      	ldr	r3, [r7, #4]
 800f298:	781b      	ldrb	r3, [r3, #0]
 800f29a:	3b30      	subs	r3, #48	; 0x30
 800f29c:	2b09      	cmp	r3, #9
 800f29e:	bf94      	ite	ls
 800f2a0:	2301      	movls	r3, #1
 800f2a2:	2300      	movhi	r3, #0
 800f2a4:	b2db      	uxtb	r3, r3
 800f2a6:	2b00      	cmp	r3, #0
 800f2a8:	d01b      	beq.n	800f2e2 <_ZN5Lexer18build_int_or_floatEv+0x54>
 800f2aa:	687b      	ldr	r3, [r7, #4]
 800f2ac:	781b      	ldrb	r3, [r3, #0]
 800f2ae:	2b30      	cmp	r3, #48	; 0x30
 800f2b0:	d017      	beq.n	800f2e2 <_ZN5Lexer18build_int_or_floatEv+0x54>
	{
		std::string word;
 800f2b2:	f107 0308 	add.w	r3, r7, #8
 800f2b6:	4618      	mov	r0, r3
 800f2b8:	f013 fd36 	bl	8022d28 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>
		build_int(word);
 800f2bc:	f107 0308 	add.w	r3, r7, #8
 800f2c0:	4619      	mov	r1, r3
 800f2c2:	6878      	ldr	r0, [r7, #4]
 800f2c4:	f7ff ff8c 	bl	800f1e0 <_ZN5Lexer9build_intERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
		match_int_or_float(word);
 800f2c8:	f107 0308 	add.w	r3, r7, #8
 800f2cc:	4619      	mov	r1, r3
 800f2ce:	6878      	ldr	r0, [r7, #4]
 800f2d0:	f7ff ffa6 	bl	800f220 <_ZN5Lexer18match_int_or_floatERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
		return true;
 800f2d4:	2401      	movs	r4, #1
		std::string word;
 800f2d6:	f107 0308 	add.w	r3, r7, #8
 800f2da:	4618      	mov	r0, r3
 800f2dc:	f013 fd45 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800f2e0:	e000      	b.n	800f2e4 <_ZN5Lexer18build_int_or_floatEv+0x56>
	}
	return false;
 800f2e2:	2400      	movs	r4, #0
 800f2e4:	4623      	mov	r3, r4
}
 800f2e6:	4618      	mov	r0, r3
 800f2e8:	3724      	adds	r7, #36	; 0x24
 800f2ea:	46bd      	mov	sp, r7
 800f2ec:	bd90      	pop	{r4, r7, pc}

0800f2ee <_ZN5Lexer20build_0_int_or_floatEv>:

bool Lexer::build_0_int_or_float()
{
 800f2ee:	b580      	push	{r7, lr}
 800f2f0:	b08a      	sub	sp, #40	; 0x28
 800f2f2:	af00      	add	r7, sp, #0
 800f2f4:	6078      	str	r0, [r7, #4]
	if (char_buffer == '0')
 800f2f6:	687b      	ldr	r3, [r7, #4]
 800f2f8:	781b      	ldrb	r3, [r3, #0]
 800f2fa:	2b30      	cmp	r3, #48	; 0x30
 800f2fc:	d13e      	bne.n	800f37c <_ZN5Lexer20build_0_int_or_floatEv+0x8e>
	{
		char_buffer = Transmitter::receive_code_char();
 800f2fe:	f008 ffc5 	bl	801828c <_ZN11Transmitter17receive_code_charEv>
 800f302:	4603      	mov	r3, r0
 800f304:	461a      	mov	r2, r3
 800f306:	687b      	ldr	r3, [r7, #4]
 800f308:	701a      	strb	r2, [r3, #0]
		if (char_buffer == '.')
 800f30a:	687b      	ldr	r3, [r7, #4]
 800f30c:	781b      	ldrb	r3, [r3, #0]
 800f30e:	2b2e      	cmp	r3, #46	; 0x2e
 800f310:	d125      	bne.n	800f35e <_ZN5Lexer20build_0_int_or_floatEv+0x70>
		{
			std::string word;
 800f312:	f107 0308 	add.w	r3, r7, #8
 800f316:	4618      	mov	r0, r3
 800f318:	f013 fd06 	bl	8022d28 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>
			build_int(word);
 800f31c:	f107 0308 	add.w	r3, r7, #8
 800f320:	4619      	mov	r1, r3
 800f322:	6878      	ldr	r0, [r7, #4]
 800f324:	f7ff ff5c 	bl	800f1e0 <_ZN5Lexer9build_intERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
			product.type = TOKEN_FLOAT;
 800f328:	687b      	ldr	r3, [r7, #4]
 800f32a:	2204      	movs	r2, #4
 800f32c:	711a      	strb	r2, [r3, #4]
			product.value = std::stof(word);
 800f32e:	f107 0308 	add.w	r3, r7, #8
 800f332:	2100      	movs	r1, #0
 800f334:	4618      	mov	r0, r3
 800f336:	f7ff fda7 	bl	800ee88 <_ZNSt7__cxx114stofERKNS_12basic_stringIcSt11char_traitsIcESaIcEEEPj>
 800f33a:	eef0 7a40 	vmov.f32	s15, s0
 800f33e:	edc7 7a08 	vstr	s15, [r7, #32]
 800f342:	687b      	ldr	r3, [r7, #4]
 800f344:	3308      	adds	r3, #8
 800f346:	f107 0220 	add.w	r2, r7, #32
 800f34a:	4611      	mov	r1, r2
 800f34c:	4618      	mov	r0, r3
 800f34e:	f000 fcfa 	bl	800fd46 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_>
			std::string word;
 800f352:	f107 0308 	add.w	r3, r7, #8
 800f356:	4618      	mov	r0, r3
 800f358:	f013 fd07 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800f35c:	e00c      	b.n	800f378 <_ZN5Lexer20build_0_int_or_floatEv+0x8a>
		}
		else
		{
			product.type = TOKEN_INT;
 800f35e:	687b      	ldr	r3, [r7, #4]
 800f360:	2203      	movs	r2, #3
 800f362:	711a      	strb	r2, [r3, #4]
			product.value = 0;
 800f364:	2300      	movs	r3, #0
 800f366:	627b      	str	r3, [r7, #36]	; 0x24
 800f368:	687b      	ldr	r3, [r7, #4]
 800f36a:	3308      	adds	r3, #8
 800f36c:	f107 0224 	add.w	r2, r7, #36	; 0x24
 800f370:	4611      	mov	r1, r2
 800f372:	4618      	mov	r0, r3
 800f374:	f000 fcbd 	bl	800fcf2 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_>
		}
		return true;
 800f378:	2301      	movs	r3, #1
 800f37a:	e000      	b.n	800f37e <_ZN5Lexer20build_0_int_or_floatEv+0x90>
	}
	return false;
 800f37c:	2300      	movs	r3, #0
}
 800f37e:	4618      	mov	r0, r3
 800f380:	3728      	adds	r7, #40	; 0x28
 800f382:	46bd      	mov	sp, r7
 800f384:	bd80      	pop	{r7, pc}
	...

0800f388 <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void Lexer::match_escape_char(std::string &word)
{
 800f388:	b580      	push	{r7, lr}
 800f38a:	b084      	sub	sp, #16
 800f38c:	af00      	add	r7, sp, #0
 800f38e:	6078      	str	r0, [r7, #4]
 800f390:	6039      	str	r1, [r7, #0]
	char true_char;
	switch (char_buffer)
 800f392:	687b      	ldr	r3, [r7, #4]
 800f394:	781b      	ldrb	r3, [r3, #0]
 800f396:	2b76      	cmp	r3, #118	; 0x76
 800f398:	dc66      	bgt.n	800f468 <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xe0>
 800f39a:	2b5c      	cmp	r3, #92	; 0x5c
 800f39c:	da04      	bge.n	800f3a8 <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x20>
 800f39e:	2b22      	cmp	r3, #34	; 0x22
 800f3a0:	d047      	beq.n	800f432 <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xaa>
 800f3a2:	2b27      	cmp	r3, #39	; 0x27
 800f3a4:	d03f      	beq.n	800f426 <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x9e>
		break;
	case 'v':
		true_char = '\v';
		break;
	default:
		return;
 800f3a6:	e05f      	b.n	800f468 <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xe0>
 800f3a8:	3b5c      	subs	r3, #92	; 0x5c
 800f3aa:	2b1a      	cmp	r3, #26
 800f3ac:	d85c      	bhi.n	800f468 <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xe0>
 800f3ae:	a201      	add	r2, pc, #4	; (adr r2, 800f3b4 <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2c>)
 800f3b0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800f3b4:	0800f42d 	.word	0x0800f42d
 800f3b8:	0800f469 	.word	0x0800f469
 800f3bc:	0800f469 	.word	0x0800f469
 800f3c0:	0800f469 	.word	0x0800f469
 800f3c4:	0800f469 	.word	0x0800f469
 800f3c8:	0800f469 	.word	0x0800f469
 800f3cc:	0800f445 	.word	0x0800f445
 800f3d0:	0800f469 	.word	0x0800f469
 800f3d4:	0800f469 	.word	0x0800f469
 800f3d8:	0800f469 	.word	0x0800f469
 800f3dc:	0800f44b 	.word	0x0800f44b
 800f3e0:	0800f469 	.word	0x0800f469
 800f3e4:	0800f469 	.word	0x0800f469
 800f3e8:	0800f469 	.word	0x0800f469
 800f3ec:	0800f469 	.word	0x0800f469
 800f3f0:	0800f469 	.word	0x0800f469
 800f3f4:	0800f469 	.word	0x0800f469
 800f3f8:	0800f469 	.word	0x0800f469
 800f3fc:	0800f421 	.word	0x0800f421
 800f400:	0800f469 	.word	0x0800f469
 800f404:	0800f469 	.word	0x0800f469
 800f408:	0800f469 	.word	0x0800f469
 800f40c:	0800f439 	.word	0x0800f439
 800f410:	0800f469 	.word	0x0800f469
 800f414:	0800f43f 	.word	0x0800f43f
 800f418:	0800f469 	.word	0x0800f469
 800f41c:	0800f451 	.word	0x0800f451
		true_char = '\n';
 800f420:	230a      	movs	r3, #10
 800f422:	73fb      	strb	r3, [r7, #15]
		break;
 800f424:	e017      	b.n	800f456 <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xce>
		true_char = '\'';
 800f426:	2327      	movs	r3, #39	; 0x27
 800f428:	73fb      	strb	r3, [r7, #15]
		break;
 800f42a:	e014      	b.n	800f456 <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xce>
		true_char = '\\';
 800f42c:	235c      	movs	r3, #92	; 0x5c
 800f42e:	73fb      	strb	r3, [r7, #15]
		break;
 800f430:	e011      	b.n	800f456 <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xce>
		true_char = '\"';
 800f432:	2322      	movs	r3, #34	; 0x22
 800f434:	73fb      	strb	r3, [r7, #15]
		break;
 800f436:	e00e      	b.n	800f456 <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xce>
		true_char = '\r';
 800f438:	230d      	movs	r3, #13
 800f43a:	73fb      	strb	r3, [r7, #15]
		break;
 800f43c:	e00b      	b.n	800f456 <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xce>
		true_char = '\t';
 800f43e:	2309      	movs	r3, #9
 800f440:	73fb      	strb	r3, [r7, #15]
		break;
 800f442:	e008      	b.n	800f456 <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xce>
		true_char = '\b';
 800f444:	2308      	movs	r3, #8
 800f446:	73fb      	strb	r3, [r7, #15]
		break;
 800f448:	e005      	b.n	800f456 <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xce>
		true_char = '\f';
 800f44a:	230c      	movs	r3, #12
 800f44c:	73fb      	strb	r3, [r7, #15]
		break;
 800f44e:	e002      	b.n	800f456 <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xce>
		true_char = '\v';
 800f450:	230b      	movs	r3, #11
 800f452:	73fb      	strb	r3, [r7, #15]
		break;
 800f454:	bf00      	nop
	}
	word.pop_back();
 800f456:	6838      	ldr	r0, [r7, #0]
 800f458:	f013 fd1d 	bl	8022e96 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8pop_backEv>
	word.push_back(true_char);
 800f45c:	7bfb      	ldrb	r3, [r7, #15]
 800f45e:	4619      	mov	r1, r3
 800f460:	6838      	ldr	r0, [r7, #0]
 800f462:	f013 fcf9 	bl	8022e58 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc>
 800f466:	e000      	b.n	800f46a <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xe2>
		return;
 800f468:	bf00      	nop
}
 800f46a:	3710      	adds	r7, #16
 800f46c:	46bd      	mov	sp, r7
 800f46e:	bd80      	pop	{r7, pc}

0800f470 <_ZN5Lexer15add_string_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void Lexer::add_string_char(std::string &word)
{
 800f470:	b580      	push	{r7, lr}
 800f472:	b082      	sub	sp, #8
 800f474:	af00      	add	r7, sp, #0
 800f476:	6078      	str	r0, [r7, #4]
 800f478:	6039      	str	r1, [r7, #0]
	if (word.back() == '\\')
 800f47a:	6838      	ldr	r0, [r7, #0]
 800f47c:	f013 fce7 	bl	8022e4e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4backEv>
 800f480:	4603      	mov	r3, r0
 800f482:	781b      	ldrb	r3, [r3, #0]
 800f484:	2b5c      	cmp	r3, #92	; 0x5c
 800f486:	bf0c      	ite	eq
 800f488:	2301      	moveq	r3, #1
 800f48a:	2300      	movne	r3, #0
 800f48c:	b2db      	uxtb	r3, r3
 800f48e:	2b00      	cmp	r3, #0
 800f490:	d004      	beq.n	800f49c <_ZN5Lexer15add_string_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2c>
	{
		match_escape_char(word);
 800f492:	6839      	ldr	r1, [r7, #0]
 800f494:	6878      	ldr	r0, [r7, #4]
 800f496:	f7ff ff77 	bl	800f388 <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 800f49a:	e005      	b.n	800f4a8 <_ZN5Lexer15add_string_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x38>
	}
	else
	{
		word.push_back(char_buffer);
 800f49c:	687b      	ldr	r3, [r7, #4]
 800f49e:	781b      	ldrb	r3, [r3, #0]
 800f4a0:	4619      	mov	r1, r3
 800f4a2:	6838      	ldr	r0, [r7, #0]
 800f4a4:	f013 fcd8 	bl	8022e58 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc>
	}
	char_buffer = Transmitter::receive_code_char();
 800f4a8:	f008 fef0 	bl	801828c <_ZN11Transmitter17receive_code_charEv>
 800f4ac:	4603      	mov	r3, r0
 800f4ae:	461a      	mov	r2, r3
 800f4b0:	687b      	ldr	r3, [r7, #4]
 800f4b2:	701a      	strb	r2, [r3, #0]
}
 800f4b4:	bf00      	nop
 800f4b6:	3708      	adds	r7, #8
 800f4b8:	46bd      	mov	sp, r7
 800f4ba:	bd80      	pop	{r7, pc}

0800f4bc <_ZN5Lexer20build_string_contentERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void Lexer::build_string_content(std::string &word)
{
 800f4bc:	b580      	push	{r7, lr}
 800f4be:	b082      	sub	sp, #8
 800f4c0:	af00      	add	r7, sp, #0
 800f4c2:	6078      	str	r0, [r7, #4]
 800f4c4:	6039      	str	r1, [r7, #0]
	char_buffer = Transmitter::receive_code_char();
 800f4c6:	f008 fee1 	bl	801828c <_ZN11Transmitter17receive_code_charEv>
 800f4ca:	4603      	mov	r3, r0
 800f4cc:	461a      	mov	r2, r3
 800f4ce:	687b      	ldr	r3, [r7, #4]
 800f4d0:	701a      	strb	r2, [r3, #0]
	while (!(char_buffer == '\"' && word.back() != '\\'))
 800f4d2:	687b      	ldr	r3, [r7, #4]
 800f4d4:	781b      	ldrb	r3, [r3, #0]
 800f4d6:	2b22      	cmp	r3, #34	; 0x22
 800f4d8:	d106      	bne.n	800f4e8 <_ZN5Lexer20build_string_contentERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2c>
 800f4da:	6838      	ldr	r0, [r7, #0]
 800f4dc:	f013 fcb7 	bl	8022e4e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4backEv>
 800f4e0:	4603      	mov	r3, r0
 800f4e2:	781b      	ldrb	r3, [r3, #0]
 800f4e4:	2b5c      	cmp	r3, #92	; 0x5c
 800f4e6:	d101      	bne.n	800f4ec <_ZN5Lexer20build_string_contentERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x30>
 800f4e8:	2301      	movs	r3, #1
 800f4ea:	e000      	b.n	800f4ee <_ZN5Lexer20build_string_contentERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x32>
 800f4ec:	2300      	movs	r3, #0
 800f4ee:	2b00      	cmp	r3, #0
 800f4f0:	d004      	beq.n	800f4fc <_ZN5Lexer20build_string_contentERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x40>
	{
		add_string_char(word);
 800f4f2:	6839      	ldr	r1, [r7, #0]
 800f4f4:	6878      	ldr	r0, [r7, #4]
 800f4f6:	f7ff ffbb 	bl	800f470 <_ZN5Lexer15add_string_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
	while (!(char_buffer == '\"' && word.back() != '\\'))
 800f4fa:	e7ea      	b.n	800f4d2 <_ZN5Lexer20build_string_contentERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x16>
	}
	char_buffer = Transmitter::receive_code_char();
 800f4fc:	f008 fec6 	bl	801828c <_ZN11Transmitter17receive_code_charEv>
 800f500:	4603      	mov	r3, r0
 800f502:	461a      	mov	r2, r3
 800f504:	687b      	ldr	r3, [r7, #4]
 800f506:	701a      	strb	r2, [r3, #0]
}
 800f508:	bf00      	nop
 800f50a:	3708      	adds	r7, #8
 800f50c:	46bd      	mov	sp, r7
 800f50e:	bd80      	pop	{r7, pc}

0800f510 <_ZN5Lexer12build_stringEv>:

bool Lexer::build_string()
{
 800f510:	b590      	push	{r4, r7, lr}
 800f512:	b08f      	sub	sp, #60	; 0x3c
 800f514:	af00      	add	r7, sp, #0
 800f516:	6078      	str	r0, [r7, #4]
	if (char_buffer == '\"')
 800f518:	687b      	ldr	r3, [r7, #4]
 800f51a:	781b      	ldrb	r3, [r3, #0]
 800f51c:	2b22      	cmp	r3, #34	; 0x22
 800f51e:	d129      	bne.n	800f574 <_ZN5Lexer12build_stringEv+0x64>
	{
		std::string word;
 800f520:	f107 0308 	add.w	r3, r7, #8
 800f524:	4618      	mov	r0, r3
 800f526:	f013 fbff 	bl	8022d28 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>
		build_string_content(word);
 800f52a:	f107 0308 	add.w	r3, r7, #8
 800f52e:	4619      	mov	r1, r3
 800f530:	6878      	ldr	r0, [r7, #4]
 800f532:	f7ff ffc3 	bl	800f4bc <_ZN5Lexer20build_string_contentERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
		product.type = TOKEN_STRING;
 800f536:	687b      	ldr	r3, [r7, #4]
 800f538:	220f      	movs	r2, #15
 800f53a:	711a      	strb	r2, [r3, #4]
		product.value = std::string(word);
 800f53c:	f107 0208 	add.w	r2, r7, #8
 800f540:	f107 0320 	add.w	r3, r7, #32
 800f544:	4611      	mov	r1, r2
 800f546:	4618      	mov	r0, r3
 800f548:	f013 fdd0 	bl	80230ec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 800f54c:	687b      	ldr	r3, [r7, #4]
 800f54e:	3308      	adds	r3, #8
 800f550:	f107 0220 	add.w	r2, r7, #32
 800f554:	4611      	mov	r1, r2
 800f556:	4618      	mov	r0, r3
 800f558:	f000 fb9f 	bl	800fc9a <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_>
 800f55c:	f107 0320 	add.w	r3, r7, #32
 800f560:	4618      	mov	r0, r3
 800f562:	f013 fc02 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
		return true;
 800f566:	2401      	movs	r4, #1
		std::string word;
 800f568:	f107 0308 	add.w	r3, r7, #8
 800f56c:	4618      	mov	r0, r3
 800f56e:	f013 fbfc 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800f572:	e000      	b.n	800f576 <_ZN5Lexer12build_stringEv+0x66>
	}
	return false;
 800f574:	2400      	movs	r4, #0
 800f576:	4623      	mov	r3, r4
}
 800f578:	4618      	mov	r0, r3
 800f57a:	373c      	adds	r7, #60	; 0x3c
 800f57c:	46bd      	mov	sp, r7
 800f57e:	bd90      	pop	{r4, r7, pc}

0800f580 <_ZN5Lexer17build_token_valueEv>:

bool Lexer::build_token_value()
{
 800f580:	b580      	push	{r7, lr}
 800f582:	b082      	sub	sp, #8
 800f584:	af00      	add	r7, sp, #0
 800f586:	6078      	str	r0, [r7, #4]
	return match_single_char() || match_double_char() || build_keyword_or_id()
 800f588:	6878      	ldr	r0, [r7, #4]
 800f58a:	f7ff fd1f 	bl	800efcc <_ZN5Lexer17match_single_charEv>
 800f58e:	4603      	mov	r3, r0
			|| build_int_or_float() || build_0_int_or_float() || build_string();
 800f590:	2b00      	cmp	r3, #0
 800f592:	d11d      	bne.n	800f5d0 <_ZN5Lexer17build_token_valueEv+0x50>
	return match_single_char() || match_double_char() || build_keyword_or_id()
 800f594:	6878      	ldr	r0, [r7, #4]
 800f596:	f7ff fd4d 	bl	800f034 <_ZN5Lexer17match_double_charEv>
 800f59a:	4603      	mov	r3, r0
 800f59c:	2b00      	cmp	r3, #0
 800f59e:	d117      	bne.n	800f5d0 <_ZN5Lexer17build_token_valueEv+0x50>
 800f5a0:	6878      	ldr	r0, [r7, #4]
 800f5a2:	f7ff fdf3 	bl	800f18c <_ZN5Lexer19build_keyword_or_idEv>
 800f5a6:	4603      	mov	r3, r0
 800f5a8:	2b00      	cmp	r3, #0
 800f5aa:	d111      	bne.n	800f5d0 <_ZN5Lexer17build_token_valueEv+0x50>
			|| build_int_or_float() || build_0_int_or_float() || build_string();
 800f5ac:	6878      	ldr	r0, [r7, #4]
 800f5ae:	f7ff fe6e 	bl	800f28e <_ZN5Lexer18build_int_or_floatEv>
 800f5b2:	4603      	mov	r3, r0
 800f5b4:	2b00      	cmp	r3, #0
 800f5b6:	d10b      	bne.n	800f5d0 <_ZN5Lexer17build_token_valueEv+0x50>
 800f5b8:	6878      	ldr	r0, [r7, #4]
 800f5ba:	f7ff fe98 	bl	800f2ee <_ZN5Lexer20build_0_int_or_floatEv>
 800f5be:	4603      	mov	r3, r0
 800f5c0:	2b00      	cmp	r3, #0
 800f5c2:	d105      	bne.n	800f5d0 <_ZN5Lexer17build_token_valueEv+0x50>
 800f5c4:	6878      	ldr	r0, [r7, #4]
 800f5c6:	f7ff ffa3 	bl	800f510 <_ZN5Lexer12build_stringEv>
 800f5ca:	4603      	mov	r3, r0
 800f5cc:	2b00      	cmp	r3, #0
 800f5ce:	d001      	beq.n	800f5d4 <_ZN5Lexer17build_token_valueEv+0x54>
 800f5d0:	2301      	movs	r3, #1
 800f5d2:	e000      	b.n	800f5d6 <_ZN5Lexer17build_token_valueEv+0x56>
 800f5d4:	2300      	movs	r3, #0
}
 800f5d6:	4618      	mov	r0, r3
 800f5d8:	3708      	adds	r7, #8
 800f5da:	46bd      	mov	sp, r7
 800f5dc:	bd80      	pop	{r7, pc}

0800f5de <_ZN5LexerD1Ev>:
#define INC_LEXER_H_

#include "Transmitter.h"
#include "Token.h"

class Lexer
 800f5de:	b580      	push	{r7, lr}
 800f5e0:	b082      	sub	sp, #8
 800f5e2:	af00      	add	r7, sp, #0
 800f5e4:	6078      	str	r0, [r7, #4]
 800f5e6:	687b      	ldr	r3, [r7, #4]
 800f5e8:	3304      	adds	r3, #4
 800f5ea:	4618      	mov	r0, r3
 800f5ec:	f7ff fccf 	bl	800ef8e <_ZN5TokenD1Ev>
 800f5f0:	687b      	ldr	r3, [r7, #4]
 800f5f2:	4618      	mov	r0, r3
 800f5f4:	3708      	adds	r7, #8
 800f5f6:	46bd      	mov	sp, r7
 800f5f8:	bd80      	pop	{r7, pc}
	...

0800f5fc <__tcf_0>:

Token Lexer::build_token()
{
	static Lexer lex;
 800f5fc:	b580      	push	{r7, lr}
 800f5fe:	af00      	add	r7, sp, #0
 800f600:	4801      	ldr	r0, [pc, #4]	; (800f608 <__tcf_0+0xc>)
 800f602:	f7ff ffec 	bl	800f5de <_ZN5LexerD1Ev>
 800f606:	bd80      	pop	{r7, pc}
 800f608:	20000398 	.word	0x20000398

0800f60c <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ERKS8_>:
      _Move_ctor_base(const _Move_ctor_base&) = default;
 800f60c:	b580      	push	{r7, lr}
 800f60e:	b082      	sub	sp, #8
 800f610:	af00      	add	r7, sp, #0
 800f612:	6078      	str	r0, [r7, #4]
 800f614:	6039      	str	r1, [r7, #0]
 800f616:	687b      	ldr	r3, [r7, #4]
 800f618:	683a      	ldr	r2, [r7, #0]
 800f61a:	4611      	mov	r1, r2
 800f61c:	4618      	mov	r0, r3
 800f61e:	f000 fbbc 	bl	800fd9a <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ERKS8_>
 800f622:	687b      	ldr	r3, [r7, #4]
 800f624:	4618      	mov	r0, r3
 800f626:	3708      	adds	r7, #8
 800f628:	46bd      	mov	sp, r7
 800f62a:	bd80      	pop	{r7, pc}

0800f62c <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ERKS8_>:
      _Copy_assign_base(const _Copy_assign_base&) = default;
 800f62c:	b580      	push	{r7, lr}
 800f62e:	b082      	sub	sp, #8
 800f630:	af00      	add	r7, sp, #0
 800f632:	6078      	str	r0, [r7, #4]
 800f634:	6039      	str	r1, [r7, #0]
 800f636:	687b      	ldr	r3, [r7, #4]
 800f638:	683a      	ldr	r2, [r7, #0]
 800f63a:	4611      	mov	r1, r2
 800f63c:	4618      	mov	r0, r3
 800f63e:	f7ff ffe5 	bl	800f60c <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ERKS8_>
 800f642:	687b      	ldr	r3, [r7, #4]
 800f644:	4618      	mov	r0, r3
 800f646:	3708      	adds	r7, #8
 800f648:	46bd      	mov	sp, r7
 800f64a:	bd80      	pop	{r7, pc}

0800f64c <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ERKS8_>:
      _Move_assign_base(const _Move_assign_base&) = default;
 800f64c:	b580      	push	{r7, lr}
 800f64e:	b082      	sub	sp, #8
 800f650:	af00      	add	r7, sp, #0
 800f652:	6078      	str	r0, [r7, #4]
 800f654:	6039      	str	r1, [r7, #0]
 800f656:	687b      	ldr	r3, [r7, #4]
 800f658:	683a      	ldr	r2, [r7, #0]
 800f65a:	4611      	mov	r1, r2
 800f65c:	4618      	mov	r0, r3
 800f65e:	f7ff ffe5 	bl	800f62c <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ERKS8_>
 800f662:	687b      	ldr	r3, [r7, #4]
 800f664:	4618      	mov	r0, r3
 800f666:	3708      	adds	r7, #8
 800f668:	46bd      	mov	sp, r7
 800f66a:	bd80      	pop	{r7, pc}

0800f66c <_ZNSt8__detail9__variant13_Variant_baseIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ERKS8_>:
      _Variant_base(const _Variant_base&) = default;
 800f66c:	b580      	push	{r7, lr}
 800f66e:	b082      	sub	sp, #8
 800f670:	af00      	add	r7, sp, #0
 800f672:	6078      	str	r0, [r7, #4]
 800f674:	6039      	str	r1, [r7, #0]
 800f676:	687b      	ldr	r3, [r7, #4]
 800f678:	683a      	ldr	r2, [r7, #0]
 800f67a:	4611      	mov	r1, r2
 800f67c:	4618      	mov	r0, r3
 800f67e:	f7ff ffe5 	bl	800f64c <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ERKS8_>
 800f682:	687b      	ldr	r3, [r7, #4]
 800f684:	4618      	mov	r0, r3
 800f686:	3708      	adds	r7, #8
 800f688:	46bd      	mov	sp, r7
 800f68a:	bd80      	pop	{r7, pc}

0800f68c <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ERKS6_>:
      variant(const variant& __rhs) = default;
 800f68c:	b580      	push	{r7, lr}
 800f68e:	b082      	sub	sp, #8
 800f690:	af00      	add	r7, sp, #0
 800f692:	6078      	str	r0, [r7, #4]
 800f694:	6039      	str	r1, [r7, #0]
 800f696:	687b      	ldr	r3, [r7, #4]
 800f698:	683a      	ldr	r2, [r7, #0]
 800f69a:	4611      	mov	r1, r2
 800f69c:	4618      	mov	r0, r3
 800f69e:	f7ff ffe5 	bl	800f66c <_ZNSt8__detail9__variant13_Variant_baseIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ERKS8_>
 800f6a2:	687b      	ldr	r3, [r7, #4]
 800f6a4:	4618      	mov	r0, r3
 800f6a6:	3708      	adds	r7, #8
 800f6a8:	46bd      	mov	sp, r7
 800f6aa:	bd80      	pop	{r7, pc}

0800f6ac <_ZN5TokenC1ERKS_>:
 800f6ac:	b580      	push	{r7, lr}
 800f6ae:	b082      	sub	sp, #8
 800f6b0:	af00      	add	r7, sp, #0
 800f6b2:	6078      	str	r0, [r7, #4]
 800f6b4:	6039      	str	r1, [r7, #0]
 800f6b6:	683b      	ldr	r3, [r7, #0]
 800f6b8:	781a      	ldrb	r2, [r3, #0]
 800f6ba:	687b      	ldr	r3, [r7, #4]
 800f6bc:	701a      	strb	r2, [r3, #0]
 800f6be:	687b      	ldr	r3, [r7, #4]
 800f6c0:	1d1a      	adds	r2, r3, #4
 800f6c2:	683b      	ldr	r3, [r7, #0]
 800f6c4:	3304      	adds	r3, #4
 800f6c6:	4619      	mov	r1, r3
 800f6c8:	4610      	mov	r0, r2
 800f6ca:	f7ff ffdf 	bl	800f68c <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ERKS6_>
 800f6ce:	687b      	ldr	r3, [r7, #4]
 800f6d0:	4618      	mov	r0, r3
 800f6d2:	3708      	adds	r7, #8
 800f6d4:	46bd      	mov	sp, r7
 800f6d6:	bd80      	pop	{r7, pc}

0800f6d8 <_ZN5Lexer11build_tokenEv>:
{
 800f6d8:	b580      	push	{r7, lr}
 800f6da:	b082      	sub	sp, #8
 800f6dc:	af00      	add	r7, sp, #0
 800f6de:	6078      	str	r0, [r7, #4]
	static Lexer lex;
 800f6e0:	4b1b      	ldr	r3, [pc, #108]	; (800f750 <_ZN5Lexer11build_tokenEv+0x78>)
 800f6e2:	781b      	ldrb	r3, [r3, #0]
 800f6e4:	f3bf 8f5b 	dmb	ish
 800f6e8:	b2db      	uxtb	r3, r3
 800f6ea:	f003 0301 	and.w	r3, r3, #1
 800f6ee:	2b00      	cmp	r3, #0
 800f6f0:	bf0c      	ite	eq
 800f6f2:	2301      	moveq	r3, #1
 800f6f4:	2300      	movne	r3, #0
 800f6f6:	b2db      	uxtb	r3, r3
 800f6f8:	2b00      	cmp	r3, #0
 800f6fa:	d013      	beq.n	800f724 <_ZN5Lexer11build_tokenEv+0x4c>
 800f6fc:	4814      	ldr	r0, [pc, #80]	; (800f750 <_ZN5Lexer11build_tokenEv+0x78>)
 800f6fe:	f013 f883 	bl	8022808 <__cxa_guard_acquire>
 800f702:	4603      	mov	r3, r0
 800f704:	2b00      	cmp	r3, #0
 800f706:	bf14      	ite	ne
 800f708:	2301      	movne	r3, #1
 800f70a:	2300      	moveq	r3, #0
 800f70c:	b2db      	uxtb	r3, r3
 800f70e:	2b00      	cmp	r3, #0
 800f710:	d008      	beq.n	800f724 <_ZN5Lexer11build_tokenEv+0x4c>
 800f712:	4810      	ldr	r0, [pc, #64]	; (800f754 <_ZN5Lexer11build_tokenEv+0x7c>)
 800f714:	f7ff fc49 	bl	800efaa <_ZN5LexerC1Ev>
 800f718:	480d      	ldr	r0, [pc, #52]	; (800f750 <_ZN5Lexer11build_tokenEv+0x78>)
 800f71a:	f013 f881 	bl	8022820 <__cxa_guard_release>
 800f71e:	480e      	ldr	r0, [pc, #56]	; (800f758 <_ZN5Lexer11build_tokenEv+0x80>)
 800f720:	f014 fcb7 	bl	8024092 <atexit>
	lex.get_working_char();
 800f724:	480b      	ldr	r0, [pc, #44]	; (800f754 <_ZN5Lexer11build_tokenEv+0x7c>)
 800f726:	f000 f86f 	bl	800f808 <_ZN5Lexer16get_working_charEv>

	if (lex.build_token_value())
 800f72a:	480a      	ldr	r0, [pc, #40]	; (800f754 <_ZN5Lexer11build_tokenEv+0x7c>)
 800f72c:	f7ff ff28 	bl	800f580 <_ZN5Lexer17build_token_valueEv>
 800f730:	4603      	mov	r3, r0
 800f732:	2b00      	cmp	r3, #0
 800f734:	d004      	beq.n	800f740 <_ZN5Lexer11build_tokenEv+0x68>
	{
		return lex.product;
 800f736:	4909      	ldr	r1, [pc, #36]	; (800f75c <_ZN5Lexer11build_tokenEv+0x84>)
 800f738:	6878      	ldr	r0, [r7, #4]
 800f73a:	f7ff ffb7 	bl	800f6ac <_ZN5TokenC1ERKS_>
 800f73e:	e003      	b.n	800f748 <_ZN5Lexer11build_tokenEv+0x70>
	}

	return lex.product;
 800f740:	4906      	ldr	r1, [pc, #24]	; (800f75c <_ZN5Lexer11build_tokenEv+0x84>)
 800f742:	6878      	ldr	r0, [r7, #4]
 800f744:	f7ff ffb2 	bl	800f6ac <_ZN5TokenC1ERKS_>
}
 800f748:	6878      	ldr	r0, [r7, #4]
 800f74a:	3708      	adds	r7, #8
 800f74c:	46bd      	mov	sp, r7
 800f74e:	bd80      	pop	{r7, pc}
 800f750:	200003bc 	.word	0x200003bc
 800f754:	20000398 	.word	0x20000398
 800f758:	0800f5fd 	.word	0x0800f5fd
 800f75c:	2000039c 	.word	0x2000039c

0800f760 <_ZN5Lexer12skip_commentEv>:

void Lexer::skip_comment()
{
 800f760:	b580      	push	{r7, lr}
 800f762:	b082      	sub	sp, #8
 800f764:	af00      	add	r7, sp, #0
 800f766:	6078      	str	r0, [r7, #4]
	while (char_buffer == '#')
 800f768:	687b      	ldr	r3, [r7, #4]
 800f76a:	781b      	ldrb	r3, [r3, #0]
 800f76c:	2b23      	cmp	r3, #35	; 0x23
 800f76e:	d111      	bne.n	800f794 <_ZN5Lexer12skip_commentEv+0x34>
	{
		while (char_buffer != '\n')
 800f770:	687b      	ldr	r3, [r7, #4]
 800f772:	781b      	ldrb	r3, [r3, #0]
 800f774:	2b0a      	cmp	r3, #10
 800f776:	d006      	beq.n	800f786 <_ZN5Lexer12skip_commentEv+0x26>
		{
			char_buffer = Transmitter::receive_code_char();
 800f778:	f008 fd88 	bl	801828c <_ZN11Transmitter17receive_code_charEv>
 800f77c:	4603      	mov	r3, r0
 800f77e:	461a      	mov	r2, r3
 800f780:	687b      	ldr	r3, [r7, #4]
 800f782:	701a      	strb	r2, [r3, #0]
		while (char_buffer != '\n')
 800f784:	e7f4      	b.n	800f770 <_ZN5Lexer12skip_commentEv+0x10>
		}
		char_buffer = Transmitter::receive_code_char();
 800f786:	f008 fd81 	bl	801828c <_ZN11Transmitter17receive_code_charEv>
 800f78a:	4603      	mov	r3, r0
 800f78c:	461a      	mov	r2, r3
 800f78e:	687b      	ldr	r3, [r7, #4]
 800f790:	701a      	strb	r2, [r3, #0]
	while (char_buffer == '#')
 800f792:	e7e9      	b.n	800f768 <_ZN5Lexer12skip_commentEv+0x8>
	}
}
 800f794:	bf00      	nop
 800f796:	3708      	adds	r7, #8
 800f798:	46bd      	mov	sp, r7
 800f79a:	bd80      	pop	{r7, pc}

0800f79c <_ZN5Lexer15skip_whitespaceEv>:

void Lexer::skip_whitespace()
{
 800f79c:	b580      	push	{r7, lr}
 800f79e:	b082      	sub	sp, #8
 800f7a0:	af00      	add	r7, sp, #0
 800f7a2:	6078      	str	r0, [r7, #4]
	while (isspace(char_buffer) && char_buffer != '\n')
 800f7a4:	687b      	ldr	r3, [r7, #4]
 800f7a6:	781b      	ldrb	r3, [r3, #0]
 800f7a8:	4618      	mov	r0, r3
 800f7aa:	f014 fcb3 	bl	8024114 <isspace>
 800f7ae:	4603      	mov	r3, r0
 800f7b0:	2b00      	cmp	r3, #0
 800f7b2:	d00a      	beq.n	800f7ca <_ZN5Lexer15skip_whitespaceEv+0x2e>
 800f7b4:	687b      	ldr	r3, [r7, #4]
 800f7b6:	781b      	ldrb	r3, [r3, #0]
 800f7b8:	2b0a      	cmp	r3, #10
 800f7ba:	d006      	beq.n	800f7ca <_ZN5Lexer15skip_whitespaceEv+0x2e>
	{
		char_buffer = Transmitter::receive_code_char();
 800f7bc:	f008 fd66 	bl	801828c <_ZN11Transmitter17receive_code_charEv>
 800f7c0:	4603      	mov	r3, r0
 800f7c2:	461a      	mov	r2, r3
 800f7c4:	687b      	ldr	r3, [r7, #4]
 800f7c6:	701a      	strb	r2, [r3, #0]
	while (isspace(char_buffer) && char_buffer != '\n')
 800f7c8:	e7ec      	b.n	800f7a4 <_ZN5Lexer15skip_whitespaceEv+0x8>
	}
}
 800f7ca:	bf00      	nop
 800f7cc:	3708      	adds	r7, #8
 800f7ce:	46bd      	mov	sp, r7
 800f7d0:	bd80      	pop	{r7, pc}

0800f7d2 <_ZN5Lexer15is_invalid_charEv>:

bool Lexer::is_invalid_char()
{
 800f7d2:	b580      	push	{r7, lr}
 800f7d4:	b082      	sub	sp, #8
 800f7d6:	af00      	add	r7, sp, #0
 800f7d8:	6078      	str	r0, [r7, #4]
	return (isspace(char_buffer) && char_buffer != '\n') || char_buffer == '#';
 800f7da:	687b      	ldr	r3, [r7, #4]
 800f7dc:	781b      	ldrb	r3, [r3, #0]
 800f7de:	4618      	mov	r0, r3
 800f7e0:	f014 fc98 	bl	8024114 <isspace>
 800f7e4:	4603      	mov	r3, r0
 800f7e6:	2b00      	cmp	r3, #0
 800f7e8:	d003      	beq.n	800f7f2 <_ZN5Lexer15is_invalid_charEv+0x20>
 800f7ea:	687b      	ldr	r3, [r7, #4]
 800f7ec:	781b      	ldrb	r3, [r3, #0]
 800f7ee:	2b0a      	cmp	r3, #10
 800f7f0:	d103      	bne.n	800f7fa <_ZN5Lexer15is_invalid_charEv+0x28>
 800f7f2:	687b      	ldr	r3, [r7, #4]
 800f7f4:	781b      	ldrb	r3, [r3, #0]
 800f7f6:	2b23      	cmp	r3, #35	; 0x23
 800f7f8:	d101      	bne.n	800f7fe <_ZN5Lexer15is_invalid_charEv+0x2c>
 800f7fa:	2301      	movs	r3, #1
 800f7fc:	e000      	b.n	800f800 <_ZN5Lexer15is_invalid_charEv+0x2e>
 800f7fe:	2300      	movs	r3, #0
}
 800f800:	4618      	mov	r0, r3
 800f802:	3708      	adds	r7, #8
 800f804:	46bd      	mov	sp, r7
 800f806:	bd80      	pop	{r7, pc}

0800f808 <_ZN5Lexer16get_working_charEv>:

void Lexer::get_working_char()
{
 800f808:	b580      	push	{r7, lr}
 800f80a:	b082      	sub	sp, #8
 800f80c:	af00      	add	r7, sp, #0
 800f80e:	6078      	str	r0, [r7, #4]
	while (is_invalid_char())
 800f810:	6878      	ldr	r0, [r7, #4]
 800f812:	f7ff ffde 	bl	800f7d2 <_ZN5Lexer15is_invalid_charEv>
 800f816:	4603      	mov	r3, r0
 800f818:	2b00      	cmp	r3, #0
 800f81a:	d006      	beq.n	800f82a <_ZN5Lexer16get_working_charEv+0x22>
	{
		skip_comment();
 800f81c:	6878      	ldr	r0, [r7, #4]
 800f81e:	f7ff ff9f 	bl	800f760 <_ZN5Lexer12skip_commentEv>
		skip_whitespace();
 800f822:	6878      	ldr	r0, [r7, #4]
 800f824:	f7ff ffba 	bl	800f79c <_ZN5Lexer15skip_whitespaceEv>
	while (is_invalid_char())
 800f828:	e7f2      	b.n	800f810 <_ZN5Lexer16get_working_charEv+0x8>
	}
}
 800f82a:	bf00      	nop
 800f82c:	3708      	adds	r7, #8
 800f82e:	46bd      	mov	sp, r7
 800f830:	bd80      	pop	{r7, pc}

0800f832 <_ZZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN11_Save_errnoC1Ev>:
      _Ret __ret;

      _CharT* __endptr;

      struct _Save_errno {
	_Save_errno() : _M_errno(errno) { errno = 0; }
 800f832:	b580      	push	{r7, lr}
 800f834:	b082      	sub	sp, #8
 800f836:	af00      	add	r7, sp, #0
 800f838:	6078      	str	r0, [r7, #4]
 800f83a:	f014 fc31 	bl	80240a0 <__errno>
 800f83e:	4603      	mov	r3, r0
 800f840:	681a      	ldr	r2, [r3, #0]
 800f842:	687b      	ldr	r3, [r7, #4]
 800f844:	601a      	str	r2, [r3, #0]
 800f846:	f014 fc2b 	bl	80240a0 <__errno>
 800f84a:	4603      	mov	r3, r0
 800f84c:	2200      	movs	r2, #0
 800f84e:	601a      	str	r2, [r3, #0]
 800f850:	687b      	ldr	r3, [r7, #4]
 800f852:	4618      	mov	r0, r3
 800f854:	3708      	adds	r7, #8
 800f856:	46bd      	mov	sp, r7
 800f858:	bd80      	pop	{r7, pc}

0800f85a <_ZZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN11_Save_errnoD1Ev>:
	~_Save_errno() { if (errno == 0) errno = _M_errno; }
 800f85a:	b590      	push	{r4, r7, lr}
 800f85c:	b083      	sub	sp, #12
 800f85e:	af00      	add	r7, sp, #0
 800f860:	6078      	str	r0, [r7, #4]
 800f862:	f014 fc1d 	bl	80240a0 <__errno>
 800f866:	4603      	mov	r3, r0
 800f868:	681b      	ldr	r3, [r3, #0]
 800f86a:	2b00      	cmp	r3, #0
 800f86c:	bf0c      	ite	eq
 800f86e:	2301      	moveq	r3, #1
 800f870:	2300      	movne	r3, #0
 800f872:	b2db      	uxtb	r3, r3
 800f874:	2b00      	cmp	r3, #0
 800f876:	d005      	beq.n	800f884 <_ZZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN11_Save_errnoD1Ev+0x2a>
 800f878:	687b      	ldr	r3, [r7, #4]
 800f87a:	681c      	ldr	r4, [r3, #0]
 800f87c:	f014 fc10 	bl	80240a0 <__errno>
 800f880:	4603      	mov	r3, r0
 800f882:	601c      	str	r4, [r3, #0]
 800f884:	687b      	ldr	r3, [r7, #4]
 800f886:	4618      	mov	r0, r3
 800f888:	370c      	adds	r7, #12
 800f88a:	46bd      	mov	sp, r7
 800f88c:	bd90      	pop	{r4, r7, pc}

0800f88e <_ZZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN10_Range_chk6_S_chkElSt17integral_constantIbLb1EE>:
      struct _Range_chk {
	  static bool
	  _S_chk(_TRet, std::false_type) { return false; }

	  static bool
	  _S_chk(_TRet __val, std::true_type) // only called when _Ret is int
 800f88e:	b480      	push	{r7}
 800f890:	b083      	sub	sp, #12
 800f892:	af00      	add	r7, sp, #0
 800f894:	6078      	str	r0, [r7, #4]
 800f896:	7039      	strb	r1, [r7, #0]
	  {
	    return __val < _TRet(__numeric_traits<int>::__min)
	      || __val > _TRet(__numeric_traits<int>::__max);
 800f898:	2300      	movs	r3, #0
	  }
 800f89a:	4618      	mov	r0, r3
 800f89c:	370c      	adds	r7, #12
 800f89e:	46bd      	mov	sp, r7
 800f8a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f8a4:	4770      	bx	lr

0800f8a6 <_ZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_>:
    __stoa(_TRet (*__convf) (const _CharT*, _CharT**, _Base...),
 800f8a6:	b590      	push	{r4, r7, lr}
 800f8a8:	b08b      	sub	sp, #44	; 0x2c
 800f8aa:	af00      	add	r7, sp, #0
 800f8ac:	60f8      	str	r0, [r7, #12]
 800f8ae:	60b9      	str	r1, [r7, #8]
 800f8b0:	607a      	str	r2, [r7, #4]
 800f8b2:	603b      	str	r3, [r7, #0]
      } const __save_errno;
 800f8b4:	f107 0314 	add.w	r3, r7, #20
 800f8b8:	4618      	mov	r0, r3
 800f8ba:	f7ff ffba 	bl	800f832 <_ZZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN11_Save_errnoC1Ev>
      };

      const _TRet __tmp = __convf(__str, &__endptr, __base...);
 800f8be:	68fb      	ldr	r3, [r7, #12]
 800f8c0:	f107 0118 	add.w	r1, r7, #24
 800f8c4:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800f8c6:	6878      	ldr	r0, [r7, #4]
 800f8c8:	4798      	blx	r3
 800f8ca:	6278      	str	r0, [r7, #36]	; 0x24

      if (__endptr == __str)
 800f8cc:	69bb      	ldr	r3, [r7, #24]
 800f8ce:	687a      	ldr	r2, [r7, #4]
 800f8d0:	429a      	cmp	r2, r3
 800f8d2:	d102      	bne.n	800f8da <_ZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_+0x34>
	std::__throw_invalid_argument(__name);
 800f8d4:	68b8      	ldr	r0, [r7, #8]
 800f8d6:	f013 f871 	bl	80229bc <_ZSt24__throw_invalid_argumentPKc>
      else if (errno == ERANGE
 800f8da:	f014 fbe1 	bl	80240a0 <__errno>
 800f8de:	4603      	mov	r3, r0
 800f8e0:	681b      	ldr	r3, [r3, #0]
	  || _Range_chk::_S_chk(__tmp, std::is_same<_Ret, int>{}))
 800f8e2:	2b22      	cmp	r3, #34	; 0x22
 800f8e4:	d006      	beq.n	800f8f4 <_ZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_+0x4e>
 800f8e6:	4621      	mov	r1, r4
 800f8e8:	6a78      	ldr	r0, [r7, #36]	; 0x24
 800f8ea:	f7ff ffd0 	bl	800f88e <_ZZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN10_Range_chk6_S_chkElSt17integral_constantIbLb1EE>
 800f8ee:	4603      	mov	r3, r0
 800f8f0:	2b00      	cmp	r3, #0
 800f8f2:	d001      	beq.n	800f8f8 <_ZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_+0x52>
 800f8f4:	2301      	movs	r3, #1
 800f8f6:	e000      	b.n	800f8fa <_ZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_+0x54>
 800f8f8:	2300      	movs	r3, #0
      else if (errno == ERANGE
 800f8fa:	2b00      	cmp	r3, #0
 800f8fc:	d002      	beq.n	800f904 <_ZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_+0x5e>
	std::__throw_out_of_range(__name);
 800f8fe:	68b8      	ldr	r0, [r7, #8]
 800f900:	f013 f862 	bl	80229c8 <_ZSt20__throw_out_of_rangePKc>
      else
	__ret = __tmp;
 800f904:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800f906:	623b      	str	r3, [r7, #32]

      if (__idx)
 800f908:	683b      	ldr	r3, [r7, #0]
 800f90a:	2b00      	cmp	r3, #0
 800f90c:	d005      	beq.n	800f91a <_ZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_+0x74>
	*__idx = __endptr - __str;
 800f90e:	69ba      	ldr	r2, [r7, #24]
 800f910:	687b      	ldr	r3, [r7, #4]
 800f912:	1ad3      	subs	r3, r2, r3
 800f914:	461a      	mov	r2, r3
 800f916:	683b      	ldr	r3, [r7, #0]
 800f918:	601a      	str	r2, [r3, #0]

      return __ret;
 800f91a:	6a3c      	ldr	r4, [r7, #32]
      } const __save_errno;
 800f91c:	f107 0314 	add.w	r3, r7, #20
 800f920:	4618      	mov	r0, r3
 800f922:	f7ff ff9a 	bl	800f85a <_ZZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN11_Save_errnoD1Ev>
      return __ret;
 800f926:	4623      	mov	r3, r4
    }
 800f928:	4618      	mov	r0, r3
 800f92a:	372c      	adds	r7, #44	; 0x2c
 800f92c:	46bd      	mov	sp, r7
 800f92e:	bd90      	pop	{r4, r7, pc}

0800f930 <_ZZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN11_Save_errnoC1Ev>:
	_Save_errno() : _M_errno(errno) { errno = 0; }
 800f930:	b580      	push	{r7, lr}
 800f932:	b082      	sub	sp, #8
 800f934:	af00      	add	r7, sp, #0
 800f936:	6078      	str	r0, [r7, #4]
 800f938:	f014 fbb2 	bl	80240a0 <__errno>
 800f93c:	4603      	mov	r3, r0
 800f93e:	681a      	ldr	r2, [r3, #0]
 800f940:	687b      	ldr	r3, [r7, #4]
 800f942:	601a      	str	r2, [r3, #0]
 800f944:	f014 fbac 	bl	80240a0 <__errno>
 800f948:	4603      	mov	r3, r0
 800f94a:	2200      	movs	r2, #0
 800f94c:	601a      	str	r2, [r3, #0]
 800f94e:	687b      	ldr	r3, [r7, #4]
 800f950:	4618      	mov	r0, r3
 800f952:	3708      	adds	r7, #8
 800f954:	46bd      	mov	sp, r7
 800f956:	bd80      	pop	{r7, pc}

0800f958 <_ZZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN11_Save_errnoD1Ev>:
	~_Save_errno() { if (errno == 0) errno = _M_errno; }
 800f958:	b590      	push	{r4, r7, lr}
 800f95a:	b083      	sub	sp, #12
 800f95c:	af00      	add	r7, sp, #0
 800f95e:	6078      	str	r0, [r7, #4]
 800f960:	f014 fb9e 	bl	80240a0 <__errno>
 800f964:	4603      	mov	r3, r0
 800f966:	681b      	ldr	r3, [r3, #0]
 800f968:	2b00      	cmp	r3, #0
 800f96a:	bf0c      	ite	eq
 800f96c:	2301      	moveq	r3, #1
 800f96e:	2300      	movne	r3, #0
 800f970:	b2db      	uxtb	r3, r3
 800f972:	2b00      	cmp	r3, #0
 800f974:	d005      	beq.n	800f982 <_ZZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN11_Save_errnoD1Ev+0x2a>
 800f976:	687b      	ldr	r3, [r7, #4]
 800f978:	681c      	ldr	r4, [r3, #0]
 800f97a:	f014 fb91 	bl	80240a0 <__errno>
 800f97e:	4603      	mov	r3, r0
 800f980:	601c      	str	r4, [r3, #0]
 800f982:	687b      	ldr	r3, [r7, #4]
 800f984:	4618      	mov	r0, r3
 800f986:	370c      	adds	r7, #12
 800f988:	46bd      	mov	sp, r7
 800f98a:	bd90      	pop	{r4, r7, pc}

0800f98c <_ZZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN10_Range_chk6_S_chkEfSt17integral_constantIbLb0EE>:
	  _S_chk(_TRet, std::false_type) { return false; }
 800f98c:	b480      	push	{r7}
 800f98e:	b083      	sub	sp, #12
 800f990:	af00      	add	r7, sp, #0
 800f992:	ed87 0a01 	vstr	s0, [r7, #4]
 800f996:	7038      	strb	r0, [r7, #0]
 800f998:	2300      	movs	r3, #0
 800f99a:	4618      	mov	r0, r3
 800f99c:	370c      	adds	r7, #12
 800f99e:	46bd      	mov	sp, r7
 800f9a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f9a4:	4770      	bx	lr

0800f9a6 <_ZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_>:
    __stoa(_TRet (*__convf) (const _CharT*, _CharT**, _Base...),
 800f9a6:	b590      	push	{r4, r7, lr}
 800f9a8:	b08b      	sub	sp, #44	; 0x2c
 800f9aa:	af00      	add	r7, sp, #0
 800f9ac:	60f8      	str	r0, [r7, #12]
 800f9ae:	60b9      	str	r1, [r7, #8]
 800f9b0:	607a      	str	r2, [r7, #4]
 800f9b2:	603b      	str	r3, [r7, #0]
      } const __save_errno;
 800f9b4:	f107 0314 	add.w	r3, r7, #20
 800f9b8:	4618      	mov	r0, r3
 800f9ba:	f7ff ffb9 	bl	800f930 <_ZZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN11_Save_errnoC1Ev>
      const _TRet __tmp = __convf(__str, &__endptr, __base...);
 800f9be:	68fb      	ldr	r3, [r7, #12]
 800f9c0:	f107 0218 	add.w	r2, r7, #24
 800f9c4:	4611      	mov	r1, r2
 800f9c6:	6878      	ldr	r0, [r7, #4]
 800f9c8:	4798      	blx	r3
 800f9ca:	ed87 0a09 	vstr	s0, [r7, #36]	; 0x24
      if (__endptr == __str)
 800f9ce:	69bb      	ldr	r3, [r7, #24]
 800f9d0:	687a      	ldr	r2, [r7, #4]
 800f9d2:	429a      	cmp	r2, r3
 800f9d4:	d102      	bne.n	800f9dc <_ZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_+0x36>
	std::__throw_invalid_argument(__name);
 800f9d6:	68b8      	ldr	r0, [r7, #8]
 800f9d8:	f012 fff0 	bl	80229bc <_ZSt24__throw_invalid_argumentPKc>
      else if (errno == ERANGE
 800f9dc:	f014 fb60 	bl	80240a0 <__errno>
 800f9e0:	4603      	mov	r3, r0
 800f9e2:	681b      	ldr	r3, [r3, #0]
	  || _Range_chk::_S_chk(__tmp, std::is_same<_Ret, int>{}))
 800f9e4:	2b22      	cmp	r3, #34	; 0x22
 800f9e6:	d007      	beq.n	800f9f8 <_ZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_+0x52>
 800f9e8:	4620      	mov	r0, r4
 800f9ea:	ed97 0a09 	vldr	s0, [r7, #36]	; 0x24
 800f9ee:	f7ff ffcd 	bl	800f98c <_ZZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN10_Range_chk6_S_chkEfSt17integral_constantIbLb0EE>
 800f9f2:	4603      	mov	r3, r0
 800f9f4:	2b00      	cmp	r3, #0
 800f9f6:	d001      	beq.n	800f9fc <_ZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_+0x56>
 800f9f8:	2301      	movs	r3, #1
 800f9fa:	e000      	b.n	800f9fe <_ZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_+0x58>
 800f9fc:	2300      	movs	r3, #0
      else if (errno == ERANGE
 800f9fe:	2b00      	cmp	r3, #0
 800fa00:	d002      	beq.n	800fa08 <_ZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_+0x62>
	std::__throw_out_of_range(__name);
 800fa02:	68b8      	ldr	r0, [r7, #8]
 800fa04:	f012 ffe0 	bl	80229c8 <_ZSt20__throw_out_of_rangePKc>
	__ret = __tmp;
 800fa08:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800fa0a:	623b      	str	r3, [r7, #32]
      if (__idx)
 800fa0c:	683b      	ldr	r3, [r7, #0]
 800fa0e:	2b00      	cmp	r3, #0
 800fa10:	d005      	beq.n	800fa1e <_ZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_+0x78>
	*__idx = __endptr - __str;
 800fa12:	69ba      	ldr	r2, [r7, #24]
 800fa14:	687b      	ldr	r3, [r7, #4]
 800fa16:	1ad3      	subs	r3, r2, r3
 800fa18:	461a      	mov	r2, r3
 800fa1a:	683b      	ldr	r3, [r7, #0]
 800fa1c:	601a      	str	r2, [r3, #0]
      return __ret;
 800fa1e:	6a3c      	ldr	r4, [r7, #32]
      } const __save_errno;
 800fa20:	f107 0314 	add.w	r3, r7, #20
 800fa24:	4618      	mov	r0, r3
 800fa26:	f7ff ff97 	bl	800f958 <_ZZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN11_Save_errnoD1Ev>
      return __ret;
 800fa2a:	ee07 4a90 	vmov	s15, r4
    }
 800fa2e:	eeb0 0a67 	vmov.f32	s0, s15
 800fa32:	372c      	adds	r7, #44	; 0x2c
 800fa34:	46bd      	mov	sp, r7
 800fa36:	bd90      	pop	{r4, r7, pc}

0800fa38 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEECI1NS0_16_Variant_storageILb0EJS7_ifbEEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 800fa38:	b580      	push	{r7, lr}
 800fa3a:	b082      	sub	sp, #8
 800fa3c:	af00      	add	r7, sp, #0
 800fa3e:	6078      	str	r0, [r7, #4]
 800fa40:	7039      	strb	r1, [r7, #0]
 800fa42:	687b      	ldr	r3, [r7, #4]
 800fa44:	4611      	mov	r1, r2
 800fa46:	4618      	mov	r0, r3
 800fa48:	f000 f9df 	bl	800fe0a <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 800fa4c:	687b      	ldr	r3, [r7, #4]
 800fa4e:	4618      	mov	r0, r3
 800fa50:	3708      	adds	r7, #8
 800fa52:	46bd      	mov	sp, r7
 800fa54:	bd80      	pop	{r7, pc}

0800fa56 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEECI1NS0_16_Variant_storageILb0EJS7_ifbEEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 800fa56:	b580      	push	{r7, lr}
 800fa58:	b082      	sub	sp, #8
 800fa5a:	af00      	add	r7, sp, #0
 800fa5c:	6078      	str	r0, [r7, #4]
 800fa5e:	7039      	strb	r1, [r7, #0]
 800fa60:	687b      	ldr	r3, [r7, #4]
 800fa62:	4611      	mov	r1, r2
 800fa64:	4618      	mov	r0, r3
 800fa66:	f7ff ffe7 	bl	800fa38 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEECI1NS0_16_Variant_storageILb0EJS7_ifbEEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 800fa6a:	687b      	ldr	r3, [r7, #4]
 800fa6c:	4618      	mov	r0, r3
 800fa6e:	3708      	adds	r7, #8
 800fa70:	46bd      	mov	sp, r7
 800fa72:	bd80      	pop	{r7, pc}

0800fa74 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEECI1NS0_16_Variant_storageILb0EJS7_ifbEEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 800fa74:	b580      	push	{r7, lr}
 800fa76:	b082      	sub	sp, #8
 800fa78:	af00      	add	r7, sp, #0
 800fa7a:	6078      	str	r0, [r7, #4]
 800fa7c:	7039      	strb	r1, [r7, #0]
 800fa7e:	687b      	ldr	r3, [r7, #4]
 800fa80:	4611      	mov	r1, r2
 800fa82:	4618      	mov	r0, r3
 800fa84:	f7ff ffe7 	bl	800fa56 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEECI1NS0_16_Variant_storageILb0EJS7_ifbEEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 800fa88:	687b      	ldr	r3, [r7, #4]
 800fa8a:	4618      	mov	r0, r3
 800fa8c:	3708      	adds	r7, #8
 800fa8e:	46bd      	mov	sp, r7
 800fa90:	bd80      	pop	{r7, pc}

0800fa92 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEECI1NS0_16_Variant_storageILb0EJS7_ifbEEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 800fa92:	b580      	push	{r7, lr}
 800fa94:	b082      	sub	sp, #8
 800fa96:	af00      	add	r7, sp, #0
 800fa98:	6078      	str	r0, [r7, #4]
 800fa9a:	7039      	strb	r1, [r7, #0]
 800fa9c:	687b      	ldr	r3, [r7, #4]
 800fa9e:	4611      	mov	r1, r2
 800faa0:	4618      	mov	r0, r3
 800faa2:	f7ff ffe7 	bl	800fa74 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEECI1NS0_16_Variant_storageILb0EJS7_ifbEEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 800faa6:	687b      	ldr	r3, [r7, #4]
 800faa8:	4618      	mov	r0, r3
 800faaa:	3708      	adds	r7, #8
 800faac:	46bd      	mov	sp, r7
 800faae:	bd80      	pop	{r7, pc}

0800fab0 <_ZNSt8__detail9__variant13_Variant_baseIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
	_Variant_base(in_place_index_t<_Np> __i, _Args&&... __args)
 800fab0:	b580      	push	{r7, lr}
 800fab2:	b082      	sub	sp, #8
 800fab4:	af00      	add	r7, sp, #0
 800fab6:	6078      	str	r0, [r7, #4]
 800fab8:	7039      	strb	r1, [r7, #0]
	: _Base(__i, std::forward<_Args>(__args)...)
 800faba:	687b      	ldr	r3, [r7, #4]
 800fabc:	4611      	mov	r1, r2
 800fabe:	4618      	mov	r0, r3
 800fac0:	f7ff ffe7 	bl	800fa92 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEECI1NS0_16_Variant_storageILb0EJS7_ifbEEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 800fac4:	687b      	ldr	r3, [r7, #4]
 800fac6:	4618      	mov	r0, r3
 800fac8:	3708      	adds	r7, #8
 800faca:	46bd      	mov	sp, r7
 800facc:	bd80      	pop	{r7, pc}

0800face <_ZNSt8__detail9__variant13_Variant_baseIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1Ev>:
      _Variant_base()
 800face:	b580      	push	{r7, lr}
 800fad0:	b082      	sub	sp, #8
 800fad2:	af00      	add	r7, sp, #0
 800fad4:	6078      	str	r0, [r7, #4]
      : _Variant_base(in_place_index<0>) { }
 800fad6:	4619      	mov	r1, r3
 800fad8:	6878      	ldr	r0, [r7, #4]
 800fada:	f7ff ffe9 	bl	800fab0 <_ZNSt8__detail9__variant13_Variant_baseIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 800fade:	687b      	ldr	r3, [r7, #4]
 800fae0:	4618      	mov	r0, r3
 800fae2:	3708      	adds	r7, #8
 800fae4:	46bd      	mov	sp, r7
 800fae6:	bd80      	pop	{r7, pc}

0800fae8 <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>:
      ~_Variant_storage()
 800fae8:	b580      	push	{r7, lr}
 800faea:	b082      	sub	sp, #8
 800faec:	af00      	add	r7, sp, #0
 800faee:	6078      	str	r0, [r7, #4]
      { _M_reset(); }
 800faf0:	6878      	ldr	r0, [r7, #4]
 800faf2:	f000 f99c 	bl	800fe2e <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE8_M_resetEv>
 800faf6:	687b      	ldr	r3, [r7, #4]
 800faf8:	4618      	mov	r0, r3
 800fafa:	3708      	adds	r7, #8
 800fafc:	46bd      	mov	sp, r7
 800fafe:	bd80      	pop	{r7, pc}

0800fb00 <_ZNKSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEE4findERS4_>:
       *  iterator pointing to the sought after %pair. If unsuccessful it
       *  returns the past-the-end ( @c end() ) iterator.
       */

      const_iterator
      find(const key_type& __x) const
 800fb00:	b580      	push	{r7, lr}
 800fb02:	b082      	sub	sp, #8
 800fb04:	af00      	add	r7, sp, #0
 800fb06:	6078      	str	r0, [r7, #4]
 800fb08:	6039      	str	r1, [r7, #0]
      { return _M_t.find(__x); }
 800fb0a:	687b      	ldr	r3, [r7, #4]
 800fb0c:	6839      	ldr	r1, [r7, #0]
 800fb0e:	4618      	mov	r0, r3
 800fb10:	f000 f99b 	bl	800fe4a <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE4findERS1_>
 800fb14:	4603      	mov	r3, r0
 800fb16:	4618      	mov	r0, r3
 800fb18:	3708      	adds	r7, #8
 800fb1a:	46bd      	mov	sp, r7
 800fb1c:	bd80      	pop	{r7, pc}

0800fb1e <_ZNKSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
 800fb1e:	b580      	push	{r7, lr}
 800fb20:	b082      	sub	sp, #8
 800fb22:	af00      	add	r7, sp, #0
 800fb24:	6078      	str	r0, [r7, #4]
      { return _M_t.end(); }
 800fb26:	687b      	ldr	r3, [r7, #4]
 800fb28:	4618      	mov	r0, r3
 800fb2a:	f000 f9ca 	bl	800fec2 <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE3endEv>
 800fb2e:	4603      	mov	r3, r0
 800fb30:	4618      	mov	r0, r3
 800fb32:	3708      	adds	r7, #8
 800fb34:	46bd      	mov	sp, r7
 800fb36:	bd80      	pop	{r7, pc}

0800fb38 <_ZStneRKSt23_Rb_tree_const_iteratorISt4pairIKc10token_typeEES6_>:
      operator!=(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 800fb38:	b480      	push	{r7}
 800fb3a:	b083      	sub	sp, #12
 800fb3c:	af00      	add	r7, sp, #0
 800fb3e:	6078      	str	r0, [r7, #4]
 800fb40:	6039      	str	r1, [r7, #0]
      { return __x._M_node != __y._M_node; }
 800fb42:	687b      	ldr	r3, [r7, #4]
 800fb44:	681a      	ldr	r2, [r3, #0]
 800fb46:	683b      	ldr	r3, [r7, #0]
 800fb48:	681b      	ldr	r3, [r3, #0]
 800fb4a:	429a      	cmp	r2, r3
 800fb4c:	bf14      	ite	ne
 800fb4e:	2301      	movne	r3, #1
 800fb50:	2300      	moveq	r3, #0
 800fb52:	b2db      	uxtb	r3, r3
 800fb54:	4618      	mov	r0, r3
 800fb56:	370c      	adds	r7, #12
 800fb58:	46bd      	mov	sp, r7
 800fb5a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fb5e:	4770      	bx	lr

0800fb60 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKc10token_typeEEptEv>:
      operator->() const _GLIBCXX_NOEXCEPT
 800fb60:	b580      	push	{r7, lr}
 800fb62:	b082      	sub	sp, #8
 800fb64:	af00      	add	r7, sp, #0
 800fb66:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(_M_node)->_M_valptr(); }
 800fb68:	687b      	ldr	r3, [r7, #4]
 800fb6a:	681b      	ldr	r3, [r3, #0]
 800fb6c:	4618      	mov	r0, r3
 800fb6e:	f7f7 f9b4 	bl	8006eda <_ZNKSt13_Rb_tree_nodeISt4pairIKc10token_typeEE9_M_valptrEv>
 800fb72:	4603      	mov	r3, r0
 800fb74:	4618      	mov	r0, r3
 800fb76:	3708      	adds	r7, #8
 800fb78:	46bd      	mov	sp, r7
 800fb7a:	bd80      	pop	{r7, pc}

0800fb7c <_ZNKSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEE4findERS4_>:
      find(const key_type& __x) const
 800fb7c:	b580      	push	{r7, lr}
 800fb7e:	b082      	sub	sp, #8
 800fb80:	af00      	add	r7, sp, #0
 800fb82:	6078      	str	r0, [r7, #4]
 800fb84:	6039      	str	r1, [r7, #0]
      { return _M_t.find(__x); }
 800fb86:	687b      	ldr	r3, [r7, #4]
 800fb88:	6839      	ldr	r1, [r7, #0]
 800fb8a:	4618      	mov	r0, r3
 800fb8c:	f000 f9aa 	bl	800fee4 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE4findERS1_>
 800fb90:	4603      	mov	r3, r0
 800fb92:	4618      	mov	r0, r3
 800fb94:	3708      	adds	r7, #8
 800fb96:	46bd      	mov	sp, r7
 800fb98:	bd80      	pop	{r7, pc}

0800fb9a <_ZNKSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
 800fb9a:	b580      	push	{r7, lr}
 800fb9c:	b082      	sub	sp, #8
 800fb9e:	af00      	add	r7, sp, #0
 800fba0:	6078      	str	r0, [r7, #4]
      { return _M_t.end(); }
 800fba2:	687b      	ldr	r3, [r7, #4]
 800fba4:	4618      	mov	r0, r3
 800fba6:	f000 f9d9 	bl	800ff5c <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE3endEv>
 800fbaa:	4603      	mov	r3, r0
 800fbac:	4618      	mov	r0, r3
 800fbae:	3708      	adds	r7, #8
 800fbb0:	46bd      	mov	sp, r7
 800fbb2:	bd80      	pop	{r7, pc}

0800fbb4 <_ZStneRKSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEES6_>:
      operator!=(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 800fbb4:	b480      	push	{r7}
 800fbb6:	b083      	sub	sp, #12
 800fbb8:	af00      	add	r7, sp, #0
 800fbba:	6078      	str	r0, [r7, #4]
 800fbbc:	6039      	str	r1, [r7, #0]
      { return __x._M_node != __y._M_node; }
 800fbbe:	687b      	ldr	r3, [r7, #4]
 800fbc0:	681a      	ldr	r2, [r3, #0]
 800fbc2:	683b      	ldr	r3, [r7, #0]
 800fbc4:	681b      	ldr	r3, [r3, #0]
 800fbc6:	429a      	cmp	r2, r3
 800fbc8:	bf14      	ite	ne
 800fbca:	2301      	movne	r3, #1
 800fbcc:	2300      	moveq	r3, #0
 800fbce:	b2db      	uxtb	r3, r3
 800fbd0:	4618      	mov	r0, r3
 800fbd2:	370c      	adds	r7, #12
 800fbd4:	46bd      	mov	sp, r7
 800fbd6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fbda:	4770      	bx	lr

0800fbdc <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEEptEv>:
      operator->() const _GLIBCXX_NOEXCEPT
 800fbdc:	b580      	push	{r7, lr}
 800fbde:	b082      	sub	sp, #8
 800fbe0:	af00      	add	r7, sp, #0
 800fbe2:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(_M_node)->_M_valptr(); }
 800fbe4:	687b      	ldr	r3, [r7, #4]
 800fbe6:	681b      	ldr	r3, [r3, #0]
 800fbe8:	4618      	mov	r0, r3
 800fbea:	f7f7 fa51 	bl	8007090 <_ZNKSt13_Rb_tree_nodeISt4pairIKc12double_tokenEE9_M_valptrEv>
 800fbee:	4603      	mov	r3, r0
 800fbf0:	4618      	mov	r0, r3
 800fbf2:	3708      	adds	r7, #8
 800fbf4:	46bd      	mov	sp, r7
 800fbf6:	bd80      	pop	{r7, pc}

0800fbf8 <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEE4findERSA_>:
      find(const key_type& __x) const
 800fbf8:	b580      	push	{r7, lr}
 800fbfa:	b082      	sub	sp, #8
 800fbfc:	af00      	add	r7, sp, #0
 800fbfe:	6078      	str	r0, [r7, #4]
 800fc00:	6039      	str	r1, [r7, #0]
      { return _M_t.find(__x); }
 800fc02:	687b      	ldr	r3, [r7, #4]
 800fc04:	6839      	ldr	r1, [r7, #0]
 800fc06:	4618      	mov	r0, r3
 800fc08:	f000 f9b9 	bl	800ff7e <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE4findERS7_>
 800fc0c:	4603      	mov	r3, r0
 800fc0e:	4618      	mov	r0, r3
 800fc10:	3708      	adds	r7, #8
 800fc12:	46bd      	mov	sp, r7
 800fc14:	bd80      	pop	{r7, pc}

0800fc16 <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
 800fc16:	b580      	push	{r7, lr}
 800fc18:	b082      	sub	sp, #8
 800fc1a:	af00      	add	r7, sp, #0
 800fc1c:	6078      	str	r0, [r7, #4]
      { return _M_t.end(); }
 800fc1e:	687b      	ldr	r3, [r7, #4]
 800fc20:	4618      	mov	r0, r3
 800fc22:	f000 f9e8 	bl	800fff6 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE3endEv>
 800fc26:	4603      	mov	r3, r0
 800fc28:	4618      	mov	r0, r3
 800fc2a:	3708      	adds	r7, #8
 800fc2c:	46bd      	mov	sp, r7
 800fc2e:	bd80      	pop	{r7, pc}

0800fc30 <_ZStneRKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEESC_>:
      operator!=(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 800fc30:	b480      	push	{r7}
 800fc32:	b083      	sub	sp, #12
 800fc34:	af00      	add	r7, sp, #0
 800fc36:	6078      	str	r0, [r7, #4]
 800fc38:	6039      	str	r1, [r7, #0]
      { return __x._M_node != __y._M_node; }
 800fc3a:	687b      	ldr	r3, [r7, #4]
 800fc3c:	681a      	ldr	r2, [r3, #0]
 800fc3e:	683b      	ldr	r3, [r7, #0]
 800fc40:	681b      	ldr	r3, [r3, #0]
 800fc42:	429a      	cmp	r2, r3
 800fc44:	bf14      	ite	ne
 800fc46:	2301      	movne	r3, #1
 800fc48:	2300      	moveq	r3, #0
 800fc4a:	b2db      	uxtb	r3, r3
 800fc4c:	4618      	mov	r0, r3
 800fc4e:	370c      	adds	r7, #12
 800fc50:	46bd      	mov	sp, r7
 800fc52:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fc56:	4770      	bx	lr

0800fc58 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEptEv>:
      operator->() const _GLIBCXX_NOEXCEPT
 800fc58:	b580      	push	{r7, lr}
 800fc5a:	b082      	sub	sp, #8
 800fc5c:	af00      	add	r7, sp, #0
 800fc5e:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(_M_node)->_M_valptr(); }
 800fc60:	687b      	ldr	r3, [r7, #4]
 800fc62:	681b      	ldr	r3, [r3, #0]
 800fc64:	4618      	mov	r0, r3
 800fc66:	f7f7 f9a6 	bl	8006fb6 <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE9_M_valptrEv>
 800fc6a:	4603      	mov	r3, r0
 800fc6c:	4618      	mov	r0, r3
 800fc6e:	3708      	adds	r7, #8
 800fc70:	46bd      	mov	sp, r7
 800fc72:	bd80      	pop	{r7, pc}

0800fc74 <_ZNKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE5indexEv>:
      constexpr size_t index() const noexcept
 800fc74:	b480      	push	{r7}
 800fc76:	b083      	sub	sp, #12
 800fc78:	af00      	add	r7, sp, #0
 800fc7a:	6078      	str	r0, [r7, #4]
	if (this->_M_index ==
 800fc7c:	687b      	ldr	r3, [r7, #4]
 800fc7e:	7e1b      	ldrb	r3, [r3, #24]
 800fc80:	2bff      	cmp	r3, #255	; 0xff
 800fc82:	d102      	bne.n	800fc8a <_ZNKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE5indexEv+0x16>
	  return variant_npos;
 800fc84:	f04f 33ff 	mov.w	r3, #4294967295
 800fc88:	e001      	b.n	800fc8e <_ZNKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE5indexEv+0x1a>
	return this->_M_index;
 800fc8a:	687b      	ldr	r3, [r7, #4]
 800fc8c:	7e1b      	ldrb	r3, [r3, #24]
      }
 800fc8e:	4618      	mov	r0, r3
 800fc90:	370c      	adds	r7, #12
 800fc92:	46bd      	mov	sp, r7
 800fc94:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fc98:	4770      	bx	lr

0800fc9a <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_>:
	operator=(_Tp&& __rhs)
 800fc9a:	b590      	push	{r4, r7, lr}
 800fc9c:	b085      	sub	sp, #20
 800fc9e:	af00      	add	r7, sp, #0
 800fca0:	6078      	str	r0, [r7, #4]
 800fca2:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 800fca4:	2300      	movs	r3, #0
 800fca6:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 800fca8:	6878      	ldr	r0, [r7, #4]
 800fcaa:	f7ff ffe3 	bl	800fc74 <_ZNKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE5indexEv>
 800fcae:	4603      	mov	r3, r0
 800fcb0:	2b00      	cmp	r3, #0
 800fcb2:	bf0c      	ite	eq
 800fcb4:	2301      	moveq	r3, #1
 800fcb6:	2300      	movne	r3, #0
 800fcb8:	b2db      	uxtb	r3, r3
 800fcba:	2b00      	cmp	r3, #0
 800fcbc:	d00c      	beq.n	800fcd8 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_+0x3e>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 800fcbe:	6838      	ldr	r0, [r7, #0]
 800fcc0:	f7f8 fd43 	bl	800874a <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 800fcc4:	4604      	mov	r4, r0
 800fcc6:	6878      	ldr	r0, [r7, #4]
 800fcc8:	f000 f9c8 	bl	801005c <_ZSt3getILj0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>
 800fccc:	4603      	mov	r3, r0
 800fcce:	4621      	mov	r1, r4
 800fcd0:	4618      	mov	r0, r3
 800fcd2:	f013 f856 	bl	8022d82 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>
 800fcd6:	e007      	b.n	800fce8 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_+0x4e>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 800fcd8:	6838      	ldr	r0, [r7, #0]
 800fcda:	f7f8 fd36 	bl	800874a <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 800fcde:	4603      	mov	r3, r0
 800fce0:	4619      	mov	r1, r3
 800fce2:	6878      	ldr	r0, [r7, #4]
 800fce4:	f000 f9d6 	bl	8010094 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE7emplaceILj0EJS5_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES6_E4typeEDpT0_EERSB_E4typeEDpOSC_>
	  return *this;
 800fce8:	687b      	ldr	r3, [r7, #4]
	}
 800fcea:	4618      	mov	r0, r3
 800fcec:	3714      	adds	r7, #20
 800fcee:	46bd      	mov	sp, r7
 800fcf0:	bd90      	pop	{r4, r7, pc}

0800fcf2 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_>:
	operator=(_Tp&& __rhs)
 800fcf2:	b590      	push	{r4, r7, lr}
 800fcf4:	b085      	sub	sp, #20
 800fcf6:	af00      	add	r7, sp, #0
 800fcf8:	6078      	str	r0, [r7, #4]
 800fcfa:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 800fcfc:	2301      	movs	r3, #1
 800fcfe:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 800fd00:	6878      	ldr	r0, [r7, #4]
 800fd02:	f7ff ffb7 	bl	800fc74 <_ZNKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE5indexEv>
 800fd06:	4603      	mov	r3, r0
 800fd08:	2b01      	cmp	r3, #1
 800fd0a:	bf0c      	ite	eq
 800fd0c:	2301      	moveq	r3, #1
 800fd0e:	2300      	movne	r3, #0
 800fd10:	b2db      	uxtb	r3, r3
 800fd12:	2b00      	cmp	r3, #0
 800fd14:	d00a      	beq.n	800fd2c <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 800fd16:	6838      	ldr	r0, [r7, #0]
 800fd18:	f7f8 fc7c 	bl	8008614 <_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE>
 800fd1c:	4603      	mov	r3, r0
 800fd1e:	681c      	ldr	r4, [r3, #0]
 800fd20:	6878      	ldr	r0, [r7, #4]
 800fd22:	f000 fa05 	bl	8010130 <_ZSt3getILj1EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>
 800fd26:	4603      	mov	r3, r0
 800fd28:	601c      	str	r4, [r3, #0]
 800fd2a:	e007      	b.n	800fd3c <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 800fd2c:	6838      	ldr	r0, [r7, #0]
 800fd2e:	f7f8 fc71 	bl	8008614 <_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE>
 800fd32:	4603      	mov	r3, r0
 800fd34:	4619      	mov	r1, r3
 800fd36:	6878      	ldr	r0, [r7, #4]
 800fd38:	f000 fa16 	bl	8010168 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE7emplaceILj1EJiEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES6_E4typeEDpT0_EERSB_E4typeEDpOSC_>
	  return *this;
 800fd3c:	687b      	ldr	r3, [r7, #4]
	}
 800fd3e:	4618      	mov	r0, r3
 800fd40:	3714      	adds	r7, #20
 800fd42:	46bd      	mov	sp, r7
 800fd44:	bd90      	pop	{r4, r7, pc}

0800fd46 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_>:
	operator=(_Tp&& __rhs)
 800fd46:	b590      	push	{r4, r7, lr}
 800fd48:	b085      	sub	sp, #20
 800fd4a:	af00      	add	r7, sp, #0
 800fd4c:	6078      	str	r0, [r7, #4]
 800fd4e:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 800fd50:	2302      	movs	r3, #2
 800fd52:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 800fd54:	6878      	ldr	r0, [r7, #4]
 800fd56:	f7ff ff8d 	bl	800fc74 <_ZNKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE5indexEv>
 800fd5a:	4603      	mov	r3, r0
 800fd5c:	2b02      	cmp	r3, #2
 800fd5e:	bf0c      	ite	eq
 800fd60:	2301      	moveq	r3, #1
 800fd62:	2300      	movne	r3, #0
 800fd64:	b2db      	uxtb	r3, r3
 800fd66:	2b00      	cmp	r3, #0
 800fd68:	d00a      	beq.n	800fd80 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 800fd6a:	6838      	ldr	r0, [r7, #0]
 800fd6c:	f7f8 fc7c 	bl	8008668 <_ZSt7forwardIfEOT_RNSt16remove_referenceIS0_E4typeE>
 800fd70:	4603      	mov	r3, r0
 800fd72:	681c      	ldr	r4, [r3, #0]
 800fd74:	6878      	ldr	r0, [r7, #4]
 800fd76:	f000 fa57 	bl	8010228 <_ZSt3getILj2EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>
 800fd7a:	4603      	mov	r3, r0
 800fd7c:	601c      	str	r4, [r3, #0]
 800fd7e:	e007      	b.n	800fd90 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 800fd80:	6838      	ldr	r0, [r7, #0]
 800fd82:	f7f8 fc71 	bl	8008668 <_ZSt7forwardIfEOT_RNSt16remove_referenceIS0_E4typeE>
 800fd86:	4603      	mov	r3, r0
 800fd88:	4619      	mov	r1, r3
 800fd8a:	6878      	ldr	r0, [r7, #4]
 800fd8c:	f000 fa68 	bl	8010260 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE7emplaceILj2EJfEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES6_E4typeEDpT0_EERSB_E4typeEDpOSC_>
	  return *this;
 800fd90:	687b      	ldr	r3, [r7, #4]
	}
 800fd92:	4618      	mov	r0, r3
 800fd94:	3714      	adds	r7, #20
 800fd96:	46bd      	mov	sp, r7
 800fd98:	bd90      	pop	{r4, r7, pc}

0800fd9a <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ERKS8_>:
      _Copy_ctor_base(const _Copy_ctor_base& __rhs)
 800fd9a:	b580      	push	{r7, lr}
 800fd9c:	b082      	sub	sp, #8
 800fd9e:	af00      	add	r7, sp, #0
 800fda0:	6078      	str	r0, [r7, #4]
 800fda2:	6039      	str	r1, [r7, #0]
      {
 800fda4:	687b      	ldr	r3, [r7, #4]
 800fda6:	4618      	mov	r0, r3
 800fda8:	f000 fa80 	bl	80102ac <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1Ev>
	__variant_construct<_Types...>(*this, __rhs);
 800fdac:	6839      	ldr	r1, [r7, #0]
 800fdae:	6878      	ldr	r0, [r7, #4]
 800fdb0:	f000 fd1a 	bl	80107e8 <_ZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS7_ifbEEERKS9_EEvOT0_OT1_>
      }
 800fdb4:	687b      	ldr	r3, [r7, #4]
 800fdb6:	4618      	mov	r0, r3
 800fdb8:	3708      	adds	r7, #8
 800fdba:	46bd      	mov	sp, r7
 800fdbc:	bd80      	pop	{r7, pc}

0800fdbe <_ZNSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IJEEESt16in_place_index_tILj0EEDpOT_>:
	_Uninitialized(in_place_index_t<0>, _Args&&... __args)
 800fdbe:	b580      	push	{r7, lr}
 800fdc0:	b082      	sub	sp, #8
 800fdc2:	af00      	add	r7, sp, #0
 800fdc4:	6078      	str	r0, [r7, #4]
 800fdc6:	7039      	strb	r1, [r7, #0]
	  ::new ((void*)std::addressof(_M_storage))
 800fdc8:	687b      	ldr	r3, [r7, #4]
 800fdca:	4618      	mov	r0, r3
 800fdcc:	f7f7 fd9f 	bl	800790e <_ZSt9addressofIN9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEPT_RS9_>
 800fdd0:	4603      	mov	r3, r0
 800fdd2:	4619      	mov	r1, r3
 800fdd4:	2018      	movs	r0, #24
 800fdd6:	f7f1 f940 	bl	800105a <_ZnwjPv>
 800fdda:	4603      	mov	r3, r0
 800fddc:	4618      	mov	r0, r3
 800fdde:	f012 ffa3 	bl	8022d28 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>
	}
 800fde2:	687b      	ldr	r3, [r7, #4]
 800fde4:	4618      	mov	r0, r3
 800fde6:	3708      	adds	r7, #8
 800fde8:	46bd      	mov	sp, r7
 800fdea:	bd80      	pop	{r7, pc}

0800fdec <_ZNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1IJEEESt16in_place_index_tILj0EEDpOT_>:
	constexpr _Variadic_union(in_place_index_t<0>, _Args&&... __args)
 800fdec:	b580      	push	{r7, lr}
 800fdee:	b082      	sub	sp, #8
 800fdf0:	af00      	add	r7, sp, #0
 800fdf2:	6078      	str	r0, [r7, #4]
 800fdf4:	7039      	strb	r1, [r7, #0]
	: _M_first(in_place_index<0>, std::forward<_Args>(__args)...)
 800fdf6:	687b      	ldr	r3, [r7, #4]
 800fdf8:	4611      	mov	r1, r2
 800fdfa:	4618      	mov	r0, r3
 800fdfc:	f7ff ffdf 	bl	800fdbe <_ZNSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IJEEESt16in_place_index_tILj0EEDpOT_>
	{ }
 800fe00:	687b      	ldr	r3, [r7, #4]
 800fe02:	4618      	mov	r0, r3
 800fe04:	3708      	adds	r7, #8
 800fe06:	46bd      	mov	sp, r7
 800fe08:	bd80      	pop	{r7, pc}

0800fe0a <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variant_storage(in_place_index_t<_Np>, _Args&&... __args)
 800fe0a:	b580      	push	{r7, lr}
 800fe0c:	b082      	sub	sp, #8
 800fe0e:	af00      	add	r7, sp, #0
 800fe10:	6078      	str	r0, [r7, #4]
 800fe12:	7039      	strb	r1, [r7, #0]
	_M_index(_Np)
 800fe14:	687b      	ldr	r3, [r7, #4]
 800fe16:	4611      	mov	r1, r2
 800fe18:	4618      	mov	r0, r3
 800fe1a:	f7ff ffe7 	bl	800fdec <_ZNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1IJEEESt16in_place_index_tILj0EEDpOT_>
 800fe1e:	687b      	ldr	r3, [r7, #4]
 800fe20:	2200      	movs	r2, #0
 800fe22:	761a      	strb	r2, [r3, #24]
	{ }
 800fe24:	687b      	ldr	r3, [r7, #4]
 800fe26:	4618      	mov	r0, r3
 800fe28:	3708      	adds	r7, #8
 800fe2a:	46bd      	mov	sp, r7
 800fe2c:	bd80      	pop	{r7, pc}

0800fe2e <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE8_M_resetEv>:
      void _M_reset()
 800fe2e:	b580      	push	{r7, lr}
 800fe30:	b082      	sub	sp, #8
 800fe32:	af00      	add	r7, sp, #0
 800fe34:	6078      	str	r0, [r7, #4]
	_M_reset_impl();
 800fe36:	6878      	ldr	r0, [r7, #4]
 800fe38:	f000 fee6 	bl	8010c08 <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEv>
	_M_index = variant_npos;
 800fe3c:	687b      	ldr	r3, [r7, #4]
 800fe3e:	22ff      	movs	r2, #255	; 0xff
 800fe40:	761a      	strb	r2, [r3, #24]
      }
 800fe42:	bf00      	nop
 800fe44:	3708      	adds	r7, #8
 800fe46:	46bd      	mov	sp, r7
 800fe48:	bd80      	pop	{r7, pc}

0800fe4a <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE4findERS1_>:

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    typename _Rb_tree<_Key, _Val, _KeyOfValue,
		      _Compare, _Alloc>::const_iterator
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 800fe4a:	b590      	push	{r4, r7, lr}
 800fe4c:	b085      	sub	sp, #20
 800fe4e:	af00      	add	r7, sp, #0
 800fe50:	6078      	str	r0, [r7, #4]
 800fe52:	6039      	str	r1, [r7, #0]
    find(const _Key& __k) const
    {
      const_iterator __j = _M_lower_bound(_M_begin(), _M_end(), __k);
 800fe54:	6878      	ldr	r0, [r7, #4]
 800fe56:	f000 fee9 	bl	8010c2c <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_beginEv>
 800fe5a:	4604      	mov	r4, r0
 800fe5c:	6878      	ldr	r0, [r7, #4]
 800fe5e:	f000 fef1 	bl	8010c44 <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_M_endEv>
 800fe62:	4602      	mov	r2, r0
 800fe64:	683b      	ldr	r3, [r7, #0]
 800fe66:	4621      	mov	r1, r4
 800fe68:	6878      	ldr	r0, [r7, #4]
 800fe6a:	f000 fef7 	bl	8010c5c <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS3_EPKSt18_Rb_tree_node_baseRS1_>
 800fe6e:	4603      	mov	r3, r0
 800fe70:	60bb      	str	r3, [r7, #8]
      return (__j == end()
 800fe72:	6878      	ldr	r0, [r7, #4]
 800fe74:	f000 f825 	bl	800fec2 <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE3endEv>
 800fe78:	4603      	mov	r3, r0
 800fe7a:	60fb      	str	r3, [r7, #12]
 800fe7c:	f107 020c 	add.w	r2, r7, #12
 800fe80:	f107 0308 	add.w	r3, r7, #8
 800fe84:	4611      	mov	r1, r2
 800fe86:	4618      	mov	r0, r3
 800fe88:	f000 ff19 	bl	8010cbe <_ZSteqRKSt23_Rb_tree_const_iteratorISt4pairIKc10token_typeEES6_>
 800fe8c:	4603      	mov	r3, r0
	      || _M_impl._M_key_compare(__k,
					_S_key(__j._M_node))) ? end() : __j;
 800fe8e:	2b00      	cmp	r3, #0
 800fe90:	d10d      	bne.n	800feae <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE4findERS1_+0x64>
	      || _M_impl._M_key_compare(__k,
 800fe92:	687c      	ldr	r4, [r7, #4]
 800fe94:	68bb      	ldr	r3, [r7, #8]
 800fe96:	4618      	mov	r0, r3
 800fe98:	f7f5 fa67 	bl	800536a <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 800fe9c:	4603      	mov	r3, r0
 800fe9e:	461a      	mov	r2, r3
 800fea0:	6839      	ldr	r1, [r7, #0]
 800fea2:	4620      	mov	r0, r4
 800fea4:	f7f5 fa6d 	bl	8005382 <_ZNKSt4lessIcEclERKcS2_>
 800fea8:	4603      	mov	r3, r0
 800feaa:	2b00      	cmp	r3, #0
 800feac:	d004      	beq.n	800feb8 <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE4findERS1_+0x6e>
					_S_key(__j._M_node))) ? end() : __j;
 800feae:	6878      	ldr	r0, [r7, #4]
 800feb0:	f000 f807 	bl	800fec2 <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE3endEv>
 800feb4:	4603      	mov	r3, r0
 800feb6:	e000      	b.n	800feba <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE4findERS1_+0x70>
 800feb8:	68bb      	ldr	r3, [r7, #8]
    }
 800feba:	4618      	mov	r0, r3
 800febc:	3714      	adds	r7, #20
 800febe:	46bd      	mov	sp, r7
 800fec0:	bd90      	pop	{r4, r7, pc}

0800fec2 <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
 800fec2:	b580      	push	{r7, lr}
 800fec4:	b084      	sub	sp, #16
 800fec6:	af00      	add	r7, sp, #0
 800fec8:	6078      	str	r0, [r7, #4]
      { return const_iterator(&this->_M_impl._M_header); }
 800feca:	687b      	ldr	r3, [r7, #4]
 800fecc:	1d1a      	adds	r2, r3, #4
 800fece:	f107 030c 	add.w	r3, r7, #12
 800fed2:	4611      	mov	r1, r2
 800fed4:	4618      	mov	r0, r3
 800fed6:	f000 ff06 	bl	8010ce6 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKc10token_typeEEC1EPKSt18_Rb_tree_node_base>
 800feda:	68fb      	ldr	r3, [r7, #12]
 800fedc:	4618      	mov	r0, r3
 800fede:	3710      	adds	r7, #16
 800fee0:	46bd      	mov	sp, r7
 800fee2:	bd80      	pop	{r7, pc}

0800fee4 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE4findERS1_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 800fee4:	b590      	push	{r4, r7, lr}
 800fee6:	b085      	sub	sp, #20
 800fee8:	af00      	add	r7, sp, #0
 800feea:	6078      	str	r0, [r7, #4]
 800feec:	6039      	str	r1, [r7, #0]
      const_iterator __j = _M_lower_bound(_M_begin(), _M_end(), __k);
 800feee:	6878      	ldr	r0, [r7, #4]
 800fef0:	f000 ff08 	bl	8010d04 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_beginEv>
 800fef4:	4604      	mov	r4, r0
 800fef6:	6878      	ldr	r0, [r7, #4]
 800fef8:	f000 ff10 	bl	8010d1c <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_M_endEv>
 800fefc:	4602      	mov	r2, r0
 800fefe:	683b      	ldr	r3, [r7, #0]
 800ff00:	4621      	mov	r1, r4
 800ff02:	6878      	ldr	r0, [r7, #4]
 800ff04:	f000 ff16 	bl	8010d34 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS3_EPKSt18_Rb_tree_node_baseRS1_>
 800ff08:	4603      	mov	r3, r0
 800ff0a:	60bb      	str	r3, [r7, #8]
      return (__j == end()
 800ff0c:	6878      	ldr	r0, [r7, #4]
 800ff0e:	f000 f825 	bl	800ff5c <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE3endEv>
 800ff12:	4603      	mov	r3, r0
 800ff14:	60fb      	str	r3, [r7, #12]
 800ff16:	f107 020c 	add.w	r2, r7, #12
 800ff1a:	f107 0308 	add.w	r3, r7, #8
 800ff1e:	4611      	mov	r1, r2
 800ff20:	4618      	mov	r0, r3
 800ff22:	f000 ff38 	bl	8010d96 <_ZSteqRKSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEES6_>
 800ff26:	4603      	mov	r3, r0
					_S_key(__j._M_node))) ? end() : __j;
 800ff28:	2b00      	cmp	r3, #0
 800ff2a:	d10d      	bne.n	800ff48 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE4findERS1_+0x64>
	      || _M_impl._M_key_compare(__k,
 800ff2c:	687c      	ldr	r4, [r7, #4]
 800ff2e:	68bb      	ldr	r3, [r7, #8]
 800ff30:	4618      	mov	r0, r3
 800ff32:	f7f5 fcf9 	bl	8005928 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 800ff36:	4603      	mov	r3, r0
 800ff38:	461a      	mov	r2, r3
 800ff3a:	6839      	ldr	r1, [r7, #0]
 800ff3c:	4620      	mov	r0, r4
 800ff3e:	f7f5 fa20 	bl	8005382 <_ZNKSt4lessIcEclERKcS2_>
 800ff42:	4603      	mov	r3, r0
 800ff44:	2b00      	cmp	r3, #0
 800ff46:	d004      	beq.n	800ff52 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE4findERS1_+0x6e>
					_S_key(__j._M_node))) ? end() : __j;
 800ff48:	6878      	ldr	r0, [r7, #4]
 800ff4a:	f000 f807 	bl	800ff5c <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE3endEv>
 800ff4e:	4603      	mov	r3, r0
 800ff50:	e000      	b.n	800ff54 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE4findERS1_+0x70>
 800ff52:	68bb      	ldr	r3, [r7, #8]
    }
 800ff54:	4618      	mov	r0, r3
 800ff56:	3714      	adds	r7, #20
 800ff58:	46bd      	mov	sp, r7
 800ff5a:	bd90      	pop	{r4, r7, pc}

0800ff5c <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
 800ff5c:	b580      	push	{r7, lr}
 800ff5e:	b084      	sub	sp, #16
 800ff60:	af00      	add	r7, sp, #0
 800ff62:	6078      	str	r0, [r7, #4]
      { return const_iterator(&this->_M_impl._M_header); }
 800ff64:	687b      	ldr	r3, [r7, #4]
 800ff66:	1d1a      	adds	r2, r3, #4
 800ff68:	f107 030c 	add.w	r3, r7, #12
 800ff6c:	4611      	mov	r1, r2
 800ff6e:	4618      	mov	r0, r3
 800ff70:	f000 ff25 	bl	8010dbe <_ZNSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEEC1EPKSt18_Rb_tree_node_base>
 800ff74:	68fb      	ldr	r3, [r7, #12]
 800ff76:	4618      	mov	r0, r3
 800ff78:	3710      	adds	r7, #16
 800ff7a:	46bd      	mov	sp, r7
 800ff7c:	bd80      	pop	{r7, pc}

0800ff7e <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE4findERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 800ff7e:	b590      	push	{r4, r7, lr}
 800ff80:	b085      	sub	sp, #20
 800ff82:	af00      	add	r7, sp, #0
 800ff84:	6078      	str	r0, [r7, #4]
 800ff86:	6039      	str	r1, [r7, #0]
      const_iterator __j = _M_lower_bound(_M_begin(), _M_end(), __k);
 800ff88:	6878      	ldr	r0, [r7, #4]
 800ff8a:	f000 ff27 	bl	8010ddc <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_beginEv>
 800ff8e:	4604      	mov	r4, r0
 800ff90:	6878      	ldr	r0, [r7, #4]
 800ff92:	f000 ff2f 	bl	8010df4 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_M_endEv>
 800ff96:	4602      	mov	r2, r0
 800ff98:	683b      	ldr	r3, [r7, #0]
 800ff9a:	4621      	mov	r1, r4
 800ff9c:	6878      	ldr	r0, [r7, #4]
 800ff9e:	f000 ff35 	bl	8010e0c <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS9_EPKSt18_Rb_tree_node_baseRS7_>
 800ffa2:	4603      	mov	r3, r0
 800ffa4:	60bb      	str	r3, [r7, #8]
      return (__j == end()
 800ffa6:	6878      	ldr	r0, [r7, #4]
 800ffa8:	f000 f825 	bl	800fff6 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE3endEv>
 800ffac:	4603      	mov	r3, r0
 800ffae:	60fb      	str	r3, [r7, #12]
 800ffb0:	f107 020c 	add.w	r2, r7, #12
 800ffb4:	f107 0308 	add.w	r3, r7, #8
 800ffb8:	4611      	mov	r1, r2
 800ffba:	4618      	mov	r0, r3
 800ffbc:	f000 ff57 	bl	8010e6e <_ZSteqRKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEESC_>
 800ffc0:	4603      	mov	r3, r0
					_S_key(__j._M_node))) ? end() : __j;
 800ffc2:	2b00      	cmp	r3, #0
 800ffc4:	d10d      	bne.n	800ffe2 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE4findERS7_+0x64>
	      || _M_impl._M_key_compare(__k,
 800ffc6:	687c      	ldr	r4, [r7, #4]
 800ffc8:	68bb      	ldr	r3, [r7, #8]
 800ffca:	4618      	mov	r0, r3
 800ffcc:	f7f5 fb62 	bl	8005694 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 800ffd0:	4603      	mov	r3, r0
 800ffd2:	461a      	mov	r2, r3
 800ffd4:	6839      	ldr	r1, [r7, #0]
 800ffd6:	4620      	mov	r0, r4
 800ffd8:	f7f5 fb68 	bl	80056ac <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 800ffdc:	4603      	mov	r3, r0
 800ffde:	2b00      	cmp	r3, #0
 800ffe0:	d004      	beq.n	800ffec <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE4findERS7_+0x6e>
					_S_key(__j._M_node))) ? end() : __j;
 800ffe2:	6878      	ldr	r0, [r7, #4]
 800ffe4:	f000 f807 	bl	800fff6 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE3endEv>
 800ffe8:	4603      	mov	r3, r0
 800ffea:	e000      	b.n	800ffee <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE4findERS7_+0x70>
 800ffec:	68bb      	ldr	r3, [r7, #8]
    }
 800ffee:	4618      	mov	r0, r3
 800fff0:	3714      	adds	r7, #20
 800fff2:	46bd      	mov	sp, r7
 800fff4:	bd90      	pop	{r4, r7, pc}

0800fff6 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
 800fff6:	b580      	push	{r7, lr}
 800fff8:	b084      	sub	sp, #16
 800fffa:	af00      	add	r7, sp, #0
 800fffc:	6078      	str	r0, [r7, #4]
      { return const_iterator(&this->_M_impl._M_header); }
 800fffe:	687b      	ldr	r3, [r7, #4]
 8010000:	1d1a      	adds	r2, r3, #4
 8010002:	f107 030c 	add.w	r3, r7, #12
 8010006:	4611      	mov	r1, r2
 8010008:	4618      	mov	r0, r3
 801000a:	f000 ff44 	bl	8010e96 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1EPKSt18_Rb_tree_node_base>
 801000e:	68fb      	ldr	r3, [r7, #12]
 8010010:	4618      	mov	r0, r3
 8010012:	3710      	adds	r7, #16
 8010014:	46bd      	mov	sp, r7
 8010016:	bd80      	pop	{r7, pc}

08010018 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8010018:	b580      	push	{r7, lr}
 801001a:	b082      	sub	sp, #8
 801001c:	af00      	add	r7, sp, #0
 801001e:	7138      	strb	r0, [r7, #4]
 8010020:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8010022:	6838      	ldr	r0, [r7, #0]
 8010024:	f000 ff51 	bl	8010eca <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>
 8010028:	4603      	mov	r3, r0
 801002a:	4618      	mov	r0, r3
 801002c:	f7f4 fec2 	bl	8004db4 <_ZNRSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE6_M_getEv>
 8010030:	4603      	mov	r3, r0
 8010032:	4618      	mov	r0, r3
 8010034:	3708      	adds	r7, #8
 8010036:	46bd      	mov	sp, r7
 8010038:	bd80      	pop	{r7, pc}

0801003a <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 801003a:	b590      	push	{r4, r7, lr}
 801003c:	b083      	sub	sp, #12
 801003e:	af00      	add	r7, sp, #0
 8010040:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8010042:	6878      	ldr	r0, [r7, #4]
 8010044:	f000 ff36 	bl	8010eb4 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8010048:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 801004a:	4619      	mov	r1, r3
 801004c:	4620      	mov	r0, r4
 801004e:	f7ff ffe3 	bl	8010018 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tILj0EEOT_>
 8010052:	4603      	mov	r3, r0
    }
 8010054:	4618      	mov	r0, r3
 8010056:	370c      	adds	r7, #12
 8010058:	46bd      	mov	sp, r7
 801005a:	bd90      	pop	{r4, r7, pc}

0801005c <_ZSt3getILj0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>:
    get(variant<_Types...>& __v)
 801005c:	b580      	push	{r7, lr}
 801005e:	b082      	sub	sp, #8
 8010060:	af00      	add	r7, sp, #0
 8010062:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 8010064:	6878      	ldr	r0, [r7, #4]
 8010066:	f7ff fe05 	bl	800fc74 <_ZNKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE5indexEv>
 801006a:	4603      	mov	r3, r0
 801006c:	2b00      	cmp	r3, #0
 801006e:	bf14      	ite	ne
 8010070:	2301      	movne	r3, #1
 8010072:	2300      	moveq	r3, #0
 8010074:	b2db      	uxtb	r3, r3
 8010076:	2b00      	cmp	r3, #0
 8010078:	d002      	beq.n	8010080 <_ZSt3getILj0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_+0x24>
	__throw_bad_variant_access("Unexpected index");
 801007a:	4805      	ldr	r0, [pc, #20]	; (8010090 <_ZSt3getILj0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_+0x34>)
 801007c:	f7f0 fff9 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 8010080:	6878      	ldr	r0, [r7, #4]
 8010082:	f7ff ffda 	bl	801003a <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 8010086:	4603      	mov	r3, r0
    }
 8010088:	4618      	mov	r0, r3
 801008a:	3708      	adds	r7, #8
 801008c:	46bd      	mov	sp, r7
 801008e:	bd80      	pop	{r7, pc}
 8010090:	080277d0 	.word	0x080277d0

08010094 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE7emplaceILj0EJS5_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES6_E4typeEDpT0_EERSB_E4typeEDpOSC_>:
	emplace(_Args&&... __args)
 8010094:	b580      	push	{r7, lr}
 8010096:	b082      	sub	sp, #8
 8010098:	af00      	add	r7, sp, #0
 801009a:	6078      	str	r0, [r7, #4]
 801009c:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 801009e:	687b      	ldr	r3, [r7, #4]
 80100a0:	4618      	mov	r0, r3
 80100a2:	f7ff fec4 	bl	800fe2e <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 80100a6:	6838      	ldr	r0, [r7, #0]
 80100a8:	f7f8 fb4f 	bl	800874a <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 80100ac:	4603      	mov	r3, r0
 80100ae:	4619      	mov	r1, r3
 80100b0:	6878      	ldr	r0, [r7, #4]
 80100b2:	f000 ff15 	bl	8010ee0 <_ZSt28__variant_construct_by_indexILj0ESt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEJS6_EEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 80100b6:	6878      	ldr	r0, [r7, #4]
 80100b8:	f7ff ffd0 	bl	801005c <_ZSt3getILj0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>
 80100bc:	4603      	mov	r3, r0
	}
 80100be:	4618      	mov	r0, r3
 80100c0:	3708      	adds	r7, #8
 80100c2:	46bd      	mov	sp, r7
 80100c4:	bd80      	pop	{r7, pc}

080100c6 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJifbEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 80100c6:	b580      	push	{r7, lr}
 80100c8:	b082      	sub	sp, #8
 80100ca:	af00      	add	r7, sp, #0
 80100cc:	7138      	strb	r0, [r7, #4]
 80100ce:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 80100d0:	6838      	ldr	r0, [r7, #0]
 80100d2:	f000 ff26 	bl	8010f22 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifbEEEEOT_RNSt16remove_referenceIS5_E4typeE>
 80100d6:	4603      	mov	r3, r0
 80100d8:	4618      	mov	r0, r3
 80100da:	f7f2 fadb 	bl	8002694 <_ZNRSt8__detail9__variant14_UninitializedIiLb1EE6_M_getEv>
 80100de:	4603      	mov	r3, r0
 80100e0:	4618      	mov	r0, r3
 80100e2:	3708      	adds	r7, #8
 80100e4:	46bd      	mov	sp, r7
 80100e6:	bd80      	pop	{r7, pc}

080100e8 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 80100e8:	b590      	push	{r4, r7, lr}
 80100ea:	b083      	sub	sp, #12
 80100ec:	af00      	add	r7, sp, #0
 80100ee:	7138      	strb	r0, [r7, #4]
 80100f0:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 80100f2:	6838      	ldr	r0, [r7, #0]
 80100f4:	f000 fee9 	bl	8010eca <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>
 80100f8:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 80100fa:	4619      	mov	r1, r3
 80100fc:	4620      	mov	r0, r4
 80100fe:	f7ff ffe2 	bl	80100c6 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJifbEEEEEDcSt16in_place_index_tILj0EEOT_>
 8010102:	4603      	mov	r3, r0
    }
 8010104:	4618      	mov	r0, r3
 8010106:	370c      	adds	r7, #12
 8010108:	46bd      	mov	sp, r7
 801010a:	bd90      	pop	{r4, r7, pc}

0801010c <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 801010c:	b590      	push	{r4, r7, lr}
 801010e:	b083      	sub	sp, #12
 8010110:	af00      	add	r7, sp, #0
 8010112:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8010114:	6878      	ldr	r0, [r7, #4]
 8010116:	f000 fecd 	bl	8010eb4 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 801011a:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 801011c:	4619      	mov	r1, r3
 801011e:	4620      	mov	r0, r4
 8010120:	f7ff ffe2 	bl	80100e8 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8010124:	4603      	mov	r3, r0
    }
 8010126:	4618      	mov	r0, r3
 8010128:	370c      	adds	r7, #12
 801012a:	46bd      	mov	sp, r7
 801012c:	bd90      	pop	{r4, r7, pc}
	...

08010130 <_ZSt3getILj1EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>:
    get(variant<_Types...>& __v)
 8010130:	b580      	push	{r7, lr}
 8010132:	b082      	sub	sp, #8
 8010134:	af00      	add	r7, sp, #0
 8010136:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 8010138:	6878      	ldr	r0, [r7, #4]
 801013a:	f7ff fd9b 	bl	800fc74 <_ZNKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE5indexEv>
 801013e:	4603      	mov	r3, r0
 8010140:	2b01      	cmp	r3, #1
 8010142:	bf14      	ite	ne
 8010144:	2301      	movne	r3, #1
 8010146:	2300      	moveq	r3, #0
 8010148:	b2db      	uxtb	r3, r3
 801014a:	2b00      	cmp	r3, #0
 801014c:	d002      	beq.n	8010154 <_ZSt3getILj1EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_+0x24>
	__throw_bad_variant_access("Unexpected index");
 801014e:	4805      	ldr	r0, [pc, #20]	; (8010164 <_ZSt3getILj1EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_+0x34>)
 8010150:	f7f0 ff8f 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 8010154:	6878      	ldr	r0, [r7, #4]
 8010156:	f7ff ffd9 	bl	801010c <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 801015a:	4603      	mov	r3, r0
    }
 801015c:	4618      	mov	r0, r3
 801015e:	3708      	adds	r7, #8
 8010160:	46bd      	mov	sp, r7
 8010162:	bd80      	pop	{r7, pc}
 8010164:	080277d0 	.word	0x080277d0

08010168 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE7emplaceILj1EJiEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES6_E4typeEDpT0_EERSB_E4typeEDpOSC_>:
	emplace(_Args&&... __args)
 8010168:	b580      	push	{r7, lr}
 801016a:	b082      	sub	sp, #8
 801016c:	af00      	add	r7, sp, #0
 801016e:	6078      	str	r0, [r7, #4]
 8010170:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 8010172:	687b      	ldr	r3, [r7, #4]
 8010174:	4618      	mov	r0, r3
 8010176:	f7ff fe5a 	bl	800fe2e <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 801017a:	6838      	ldr	r0, [r7, #0]
 801017c:	f7f8 fa4a 	bl	8008614 <_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE>
 8010180:	4603      	mov	r3, r0
 8010182:	4619      	mov	r1, r3
 8010184:	6878      	ldr	r0, [r7, #4]
 8010186:	f000 fed7 	bl	8010f38 <_ZSt28__variant_construct_by_indexILj1ESt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEJiEEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 801018a:	6878      	ldr	r0, [r7, #4]
 801018c:	f7ff ffd0 	bl	8010130 <_ZSt3getILj1EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>
 8010190:	4603      	mov	r3, r0
	}
 8010192:	4618      	mov	r0, r3
 8010194:	3708      	adds	r7, #8
 8010196:	46bd      	mov	sp, r7
 8010198:	bd80      	pop	{r7, pc}

0801019a <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJfbEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 801019a:	b580      	push	{r7, lr}
 801019c:	b082      	sub	sp, #8
 801019e:	af00      	add	r7, sp, #0
 80101a0:	7138      	strb	r0, [r7, #4]
 80101a2:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 80101a4:	6838      	ldr	r0, [r7, #0]
 80101a6:	f000 fee6 	bl	8010f76 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfbEEEEOT_RNSt16remove_referenceIS5_E4typeE>
 80101aa:	4603      	mov	r3, r0
 80101ac:	4618      	mov	r0, r3
 80101ae:	f7f4 fdbd 	bl	8004d2c <_ZNRSt8__detail9__variant14_UninitializedIfLb1EE6_M_getEv>
 80101b2:	4603      	mov	r3, r0
 80101b4:	4618      	mov	r0, r3
 80101b6:	3708      	adds	r7, #8
 80101b8:	46bd      	mov	sp, r7
 80101ba:	bd80      	pop	{r7, pc}

080101bc <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 80101bc:	b590      	push	{r4, r7, lr}
 80101be:	b083      	sub	sp, #12
 80101c0:	af00      	add	r7, sp, #0
 80101c2:	7138      	strb	r0, [r7, #4]
 80101c4:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 80101c6:	6838      	ldr	r0, [r7, #0]
 80101c8:	f000 feab 	bl	8010f22 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifbEEEEOT_RNSt16remove_referenceIS5_E4typeE>
 80101cc:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 80101ce:	4619      	mov	r1, r3
 80101d0:	4620      	mov	r0, r4
 80101d2:	f7ff ffe2 	bl	801019a <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJfbEEEEEDcSt16in_place_index_tILj0EEOT_>
 80101d6:	4603      	mov	r3, r0
    }
 80101d8:	4618      	mov	r0, r3
 80101da:	370c      	adds	r7, #12
 80101dc:	46bd      	mov	sp, r7
 80101de:	bd90      	pop	{r4, r7, pc}

080101e0 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 80101e0:	b590      	push	{r4, r7, lr}
 80101e2:	b083      	sub	sp, #12
 80101e4:	af00      	add	r7, sp, #0
 80101e6:	7138      	strb	r0, [r7, #4]
 80101e8:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 80101ea:	6838      	ldr	r0, [r7, #0]
 80101ec:	f000 fe6d 	bl	8010eca <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>
 80101f0:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 80101f2:	4619      	mov	r1, r3
 80101f4:	4620      	mov	r0, r4
 80101f6:	f7ff ffe1 	bl	80101bc <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80101fa:	4603      	mov	r3, r0
    }
 80101fc:	4618      	mov	r0, r3
 80101fe:	370c      	adds	r7, #12
 8010200:	46bd      	mov	sp, r7
 8010202:	bd90      	pop	{r4, r7, pc}

08010204 <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8010204:	b590      	push	{r4, r7, lr}
 8010206:	b083      	sub	sp, #12
 8010208:	af00      	add	r7, sp, #0
 801020a:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 801020c:	6878      	ldr	r0, [r7, #4]
 801020e:	f000 fe51 	bl	8010eb4 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8010212:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8010214:	4619      	mov	r1, r3
 8010216:	4620      	mov	r0, r4
 8010218:	f7ff ffe2 	bl	80101e0 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 801021c:	4603      	mov	r3, r0
    }
 801021e:	4618      	mov	r0, r3
 8010220:	370c      	adds	r7, #12
 8010222:	46bd      	mov	sp, r7
 8010224:	bd90      	pop	{r4, r7, pc}
	...

08010228 <_ZSt3getILj2EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>:
    get(variant<_Types...>& __v)
 8010228:	b580      	push	{r7, lr}
 801022a:	b082      	sub	sp, #8
 801022c:	af00      	add	r7, sp, #0
 801022e:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 8010230:	6878      	ldr	r0, [r7, #4]
 8010232:	f7ff fd1f 	bl	800fc74 <_ZNKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE5indexEv>
 8010236:	4603      	mov	r3, r0
 8010238:	2b02      	cmp	r3, #2
 801023a:	bf14      	ite	ne
 801023c:	2301      	movne	r3, #1
 801023e:	2300      	moveq	r3, #0
 8010240:	b2db      	uxtb	r3, r3
 8010242:	2b00      	cmp	r3, #0
 8010244:	d002      	beq.n	801024c <_ZSt3getILj2EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_+0x24>
	__throw_bad_variant_access("Unexpected index");
 8010246:	4805      	ldr	r0, [pc, #20]	; (801025c <_ZSt3getILj2EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_+0x34>)
 8010248:	f7f0 ff13 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 801024c:	6878      	ldr	r0, [r7, #4]
 801024e:	f7ff ffd9 	bl	8010204 <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 8010252:	4603      	mov	r3, r0
    }
 8010254:	4618      	mov	r0, r3
 8010256:	3708      	adds	r7, #8
 8010258:	46bd      	mov	sp, r7
 801025a:	bd80      	pop	{r7, pc}
 801025c:	080277d0 	.word	0x080277d0

08010260 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE7emplaceILj2EJfEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES6_E4typeEDpT0_EERSB_E4typeEDpOSC_>:
	emplace(_Args&&... __args)
 8010260:	b580      	push	{r7, lr}
 8010262:	b082      	sub	sp, #8
 8010264:	af00      	add	r7, sp, #0
 8010266:	6078      	str	r0, [r7, #4]
 8010268:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 801026a:	687b      	ldr	r3, [r7, #4]
 801026c:	4618      	mov	r0, r3
 801026e:	f7ff fdde 	bl	800fe2e <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 8010272:	6838      	ldr	r0, [r7, #0]
 8010274:	f7f8 f9f8 	bl	8008668 <_ZSt7forwardIfEOT_RNSt16remove_referenceIS0_E4typeE>
 8010278:	4603      	mov	r3, r0
 801027a:	4619      	mov	r1, r3
 801027c:	6878      	ldr	r0, [r7, #4]
 801027e:	f000 fe85 	bl	8010f8c <_ZSt28__variant_construct_by_indexILj2ESt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEJfEEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 8010282:	6878      	ldr	r0, [r7, #4]
 8010284:	f7ff ffd0 	bl	8010228 <_ZSt3getILj2EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>
 8010288:	4603      	mov	r3, r0
	}
 801028a:	4618      	mov	r0, r3
 801028c:	3708      	adds	r7, #8
 801028e:	46bd      	mov	sp, r7
 8010290:	bd80      	pop	{r7, pc}

08010292 <_ZNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1Ev>:
      constexpr _Variadic_union() : _M_rest() { }
 8010292:	b580      	push	{r7, lr}
 8010294:	b082      	sub	sp, #8
 8010296:	af00      	add	r7, sp, #0
 8010298:	6078      	str	r0, [r7, #4]
 801029a:	687b      	ldr	r3, [r7, #4]
 801029c:	4618      	mov	r0, r3
 801029e:	f000 fe94 	bl	8010fca <_ZNSt8__detail9__variant15_Variadic_unionIJifbEEC1Ev>
 80102a2:	687b      	ldr	r3, [r7, #4]
 80102a4:	4618      	mov	r0, r3
 80102a6:	3708      	adds	r7, #8
 80102a8:	46bd      	mov	sp, r7
 80102aa:	bd80      	pop	{r7, pc}

080102ac <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1Ev>:
      constexpr _Variant_storage() : _M_index(variant_npos) { }
 80102ac:	b580      	push	{r7, lr}
 80102ae:	b082      	sub	sp, #8
 80102b0:	af00      	add	r7, sp, #0
 80102b2:	6078      	str	r0, [r7, #4]
 80102b4:	687b      	ldr	r3, [r7, #4]
 80102b6:	4618      	mov	r0, r3
 80102b8:	f7ff ffeb 	bl	8010292 <_ZNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1Ev>
 80102bc:	687b      	ldr	r3, [r7, #4]
 80102be:	22ff      	movs	r2, #255	; 0xff
 80102c0:	761a      	strb	r2, [r3, #24]
 80102c2:	687b      	ldr	r3, [r7, #4]
 80102c4:	4618      	mov	r0, r3
 80102c6:	3708      	adds	r7, #8
 80102c8:	46bd      	mov	sp, r7
 80102ca:	bd80      	pop	{r7, pc}

080102cc <_ZSt14__variant_castIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERKNSt8__detail9__variant15_Copy_ctor_baseILb0EJS5_ifbEEEEDcOT0_>:
    __variant_cast(_Tp&& __rhs)
 80102cc:	b480      	push	{r7}
 80102ce:	b083      	sub	sp, #12
 80102d0:	af00      	add	r7, sp, #0
 80102d2:	6078      	str	r0, [r7, #4]
	    return static_cast<const variant<_Types...>&>(__rhs);
 80102d4:	687b      	ldr	r3, [r7, #4]
    }
 80102d6:	4618      	mov	r0, r3
 80102d8:	370c      	adds	r7, #12
 80102da:	46bd      	mov	sp, r7
 80102dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80102e0:	4770      	bx	lr

080102e2 <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 80102e2:	b580      	push	{r7, lr}
 80102e4:	b082      	sub	sp, #8
 80102e6:	af00      	add	r7, sp, #0
 80102e8:	7138      	strb	r0, [r7, #4]
 80102ea:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 80102ec:	6838      	ldr	r0, [r7, #0]
 80102ee:	f000 fe9a 	bl	8011026 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISC_E4typeE>
 80102f2:	4603      	mov	r3, r0
 80102f4:	4618      	mov	r0, r3
 80102f6:	f7f2 ff0c 	bl	8003112 <_ZNKRSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE6_M_getEv>
 80102fa:	4603      	mov	r3, r0
 80102fc:	4618      	mov	r0, r3
 80102fe:	3708      	adds	r7, #8
 8010300:	46bd      	mov	sp, r7
 8010302:	bd80      	pop	{r7, pc}

08010304 <_ZNSt8__detail9__variant5__getILj0ERKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8010304:	b590      	push	{r4, r7, lr}
 8010306:	b083      	sub	sp, #12
 8010308:	af00      	add	r7, sp, #0
 801030a:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 801030c:	6878      	ldr	r0, [r7, #4]
 801030e:	f000 fe7f 	bl	8011010 <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 8010312:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8010314:	4619      	mov	r1, r3
 8010316:	4620      	mov	r0, r4
 8010318:	f7ff ffe3 	bl	80102e2 <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tILj0EEOT_>
 801031c:	4603      	mov	r3, r0
    }
 801031e:	4618      	mov	r0, r3
 8010320:	370c      	adds	r7, #12
 8010322:	46bd      	mov	sp, r7
 8010324:	bd90      	pop	{r4, r7, pc}

08010326 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESR_EEDcSH_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8010326:	b580      	push	{r7, lr}
 8010328:	b082      	sub	sp, #8
 801032a:	af00      	add	r7, sp, #0
 801032c:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 801032e:	6878      	ldr	r0, [r7, #4]
 8010330:	f000 fe6e 	bl	8011010 <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 8010334:	4603      	mov	r3, r0
 8010336:	4618      	mov	r0, r3
 8010338:	f7ff ffe4 	bl	8010304 <_ZNSt8__detail9__variant5__getILj0ERKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 801033c:	4603      	mov	r3, r0
	}
 801033e:	4618      	mov	r0, r3
 8010340:	3708      	adds	r7, #8
 8010342:	46bd      	mov	sp, r7
 8010344:	bd80      	pop	{r7, pc}

08010346 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESN_SR_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8010346:	b5b0      	push	{r4, r5, r7, lr}
 8010348:	b082      	sub	sp, #8
 801034a:	af00      	add	r7, sp, #0
 801034c:	6078      	str	r0, [r7, #4]
 801034e:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8010350:	6878      	ldr	r0, [r7, #4]
 8010352:	f000 fe52 	bl	8010ffa <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 8010356:	4604      	mov	r4, r0
 8010358:	6838      	ldr	r0, [r7, #0]
 801035a:	f000 fe59 	bl	8011010 <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 801035e:	4603      	mov	r3, r0
 8010360:	4618      	mov	r0, r3
 8010362:	f7ff ffe0 	bl	8010326 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESR_EEDcSH_>
 8010366:	4603      	mov	r3, r0
 8010368:	4619      	mov	r1, r3
 801036a:	4620      	mov	r0, r4
 801036c:	f000 fe66 	bl	801103c <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_JRKS8_EENSt15__invoke_resultISI_JDpT0_EE4typeESJ_DpOSO_>
		std::forward<_Variants>(__vars))...);
 8010370:	462b      	mov	r3, r5
      }
 8010372:	4618      	mov	r0, r3
 8010374:	3708      	adds	r7, #8
 8010376:	46bd      	mov	sp, r7
 8010378:	bdb0      	pop	{r4, r5, r7, pc}

0801037a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESN_SR_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 801037a:	b5b0      	push	{r4, r5, r7, lr}
 801037c:	b082      	sub	sp, #8
 801037e:	af00      	add	r7, sp, #0
 8010380:	6078      	str	r0, [r7, #4]
 8010382:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8010384:	6878      	ldr	r0, [r7, #4]
 8010386:	f000 fe38 	bl	8010ffa <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 801038a:	4604      	mov	r4, r0
 801038c:	6838      	ldr	r0, [r7, #0]
 801038e:	f000 fe3f 	bl	8011010 <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 8010392:	4603      	mov	r3, r0
 8010394:	4619      	mov	r1, r3
 8010396:	4620      	mov	r0, r4
 8010398:	f7ff ffd5 	bl	8010346 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESN_SR_>
				   std::forward<_Variants>(__vars)...);
 801039c:	462b      	mov	r3, r5
      }
 801039e:	4618      	mov	r0, r3
 80103a0:	3708      	adds	r7, #8
 80103a2:	46bd      	mov	sp, r7
 80103a4:	bdb0      	pop	{r4, r5, r7, pc}

080103a6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj0EEEE14__visit_invokeESN_SR_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80103a6:	b5b0      	push	{r4, r5, r7, lr}
 80103a8:	b082      	sub	sp, #8
 80103aa:	af00      	add	r7, sp, #0
 80103ac:	6078      	str	r0, [r7, #4]
 80103ae:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 80103b0:	6878      	ldr	r0, [r7, #4]
 80103b2:	f000 fe22 	bl	8010ffa <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 80103b6:	4604      	mov	r4, r0
 80103b8:	6838      	ldr	r0, [r7, #0]
 80103ba:	f000 fe29 	bl	8011010 <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 80103be:	4603      	mov	r3, r0
 80103c0:	4619      	mov	r1, r3
 80103c2:	4620      	mov	r0, r4
 80103c4:	f7ff ffd9 	bl	801037a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESN_SR_>
				   std::forward<_Variants>(__vars)...);
 80103c8:	462b      	mov	r3, r5
      }
 80103ca:	4618      	mov	r0, r3
 80103cc:	3708      	adds	r7, #8
 80103ce:	46bd      	mov	sp, r7
 80103d0:	bdb0      	pop	{r4, r5, r7, pc}

080103d2 <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJifbEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 80103d2:	b580      	push	{r7, lr}
 80103d4:	b082      	sub	sp, #8
 80103d6:	af00      	add	r7, sp, #0
 80103d8:	7138      	strb	r0, [r7, #4]
 80103da:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 80103dc:	6838      	ldr	r0, [r7, #0]
 80103de:	f000 fe44 	bl	801106a <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJifbEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 80103e2:	4603      	mov	r3, r0
 80103e4:	4618      	mov	r0, r3
 80103e6:	f7f2 fdf8 	bl	8002fda <_ZNKRSt8__detail9__variant14_UninitializedIiLb1EE6_M_getEv>
 80103ea:	4603      	mov	r3, r0
 80103ec:	4618      	mov	r0, r3
 80103ee:	3708      	adds	r7, #8
 80103f0:	46bd      	mov	sp, r7
 80103f2:	bd80      	pop	{r7, pc}

080103f4 <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 80103f4:	b590      	push	{r4, r7, lr}
 80103f6:	b083      	sub	sp, #12
 80103f8:	af00      	add	r7, sp, #0
 80103fa:	7138      	strb	r0, [r7, #4]
 80103fc:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 80103fe:	6838      	ldr	r0, [r7, #0]
 8010400:	f000 fe11 	bl	8011026 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISC_E4typeE>
 8010404:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8010406:	4619      	mov	r1, r3
 8010408:	4620      	mov	r0, r4
 801040a:	f7ff ffe2 	bl	80103d2 <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJifbEEEEEDcSt16in_place_index_tILj0EEOT_>
 801040e:	4603      	mov	r3, r0
    }
 8010410:	4618      	mov	r0, r3
 8010412:	370c      	adds	r7, #12
 8010414:	46bd      	mov	sp, r7
 8010416:	bd90      	pop	{r4, r7, pc}

08010418 <_ZNSt8__detail9__variant5__getILj1ERKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8010418:	b590      	push	{r4, r7, lr}
 801041a:	b083      	sub	sp, #12
 801041c:	af00      	add	r7, sp, #0
 801041e:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8010420:	6878      	ldr	r0, [r7, #4]
 8010422:	f000 fdf5 	bl	8011010 <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 8010426:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8010428:	4619      	mov	r1, r3
 801042a:	4620      	mov	r0, r4
 801042c:	f7ff ffe2 	bl	80103f4 <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8010430:	4603      	mov	r3, r0
    }
 8010432:	4618      	mov	r0, r3
 8010434:	370c      	adds	r7, #12
 8010436:	46bd      	mov	sp, r7
 8010438:	bd90      	pop	{r4, r7, pc}

0801043a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESR_EEDcSH_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 801043a:	b580      	push	{r7, lr}
 801043c:	b082      	sub	sp, #8
 801043e:	af00      	add	r7, sp, #0
 8010440:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8010442:	6878      	ldr	r0, [r7, #4]
 8010444:	f000 fde4 	bl	8011010 <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 8010448:	4603      	mov	r3, r0
 801044a:	4618      	mov	r0, r3
 801044c:	f7ff ffe4 	bl	8010418 <_ZNSt8__detail9__variant5__getILj1ERKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 8010450:	4603      	mov	r3, r0
	}
 8010452:	4618      	mov	r0, r3
 8010454:	3708      	adds	r7, #8
 8010456:	46bd      	mov	sp, r7
 8010458:	bd80      	pop	{r7, pc}

0801045a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESN_SR_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 801045a:	b5b0      	push	{r4, r5, r7, lr}
 801045c:	b082      	sub	sp, #8
 801045e:	af00      	add	r7, sp, #0
 8010460:	6078      	str	r0, [r7, #4]
 8010462:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8010464:	6878      	ldr	r0, [r7, #4]
 8010466:	f000 fdc8 	bl	8010ffa <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 801046a:	4604      	mov	r4, r0
 801046c:	6838      	ldr	r0, [r7, #0]
 801046e:	f000 fdcf 	bl	8011010 <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 8010472:	4603      	mov	r3, r0
 8010474:	4618      	mov	r0, r3
 8010476:	f7ff ffe0 	bl	801043a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESR_EEDcSH_>
 801047a:	4603      	mov	r3, r0
 801047c:	4619      	mov	r1, r3
 801047e:	4620      	mov	r0, r4
 8010480:	f000 fdfe 	bl	8011080 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_JRKiEENSt15__invoke_resultISI_JDpT0_EE4typeESJ_DpOSO_>
		std::forward<_Variants>(__vars))...);
 8010484:	462b      	mov	r3, r5
      }
 8010486:	4618      	mov	r0, r3
 8010488:	3708      	adds	r7, #8
 801048a:	46bd      	mov	sp, r7
 801048c:	bdb0      	pop	{r4, r5, r7, pc}

0801048e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESN_SR_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 801048e:	b5b0      	push	{r4, r5, r7, lr}
 8010490:	b082      	sub	sp, #8
 8010492:	af00      	add	r7, sp, #0
 8010494:	6078      	str	r0, [r7, #4]
 8010496:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8010498:	6878      	ldr	r0, [r7, #4]
 801049a:	f000 fdae 	bl	8010ffa <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 801049e:	4604      	mov	r4, r0
 80104a0:	6838      	ldr	r0, [r7, #0]
 80104a2:	f000 fdb5 	bl	8011010 <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 80104a6:	4603      	mov	r3, r0
 80104a8:	4619      	mov	r1, r3
 80104aa:	4620      	mov	r0, r4
 80104ac:	f7ff ffd5 	bl	801045a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESN_SR_>
				   std::forward<_Variants>(__vars)...);
 80104b0:	462b      	mov	r3, r5
      }
 80104b2:	4618      	mov	r0, r3
 80104b4:	3708      	adds	r7, #8
 80104b6:	46bd      	mov	sp, r7
 80104b8:	bdb0      	pop	{r4, r5, r7, pc}

080104ba <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj1EEEE14__visit_invokeESN_SR_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80104ba:	b5b0      	push	{r4, r5, r7, lr}
 80104bc:	b082      	sub	sp, #8
 80104be:	af00      	add	r7, sp, #0
 80104c0:	6078      	str	r0, [r7, #4]
 80104c2:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 80104c4:	6878      	ldr	r0, [r7, #4]
 80104c6:	f000 fd98 	bl	8010ffa <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 80104ca:	4604      	mov	r4, r0
 80104cc:	6838      	ldr	r0, [r7, #0]
 80104ce:	f000 fd9f 	bl	8011010 <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 80104d2:	4603      	mov	r3, r0
 80104d4:	4619      	mov	r1, r3
 80104d6:	4620      	mov	r0, r4
 80104d8:	f7ff ffd9 	bl	801048e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESN_SR_>
				   std::forward<_Variants>(__vars)...);
 80104dc:	462b      	mov	r3, r5
      }
 80104de:	4618      	mov	r0, r3
 80104e0:	3708      	adds	r7, #8
 80104e2:	46bd      	mov	sp, r7
 80104e4:	bdb0      	pop	{r4, r5, r7, pc}

080104e6 <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJfbEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 80104e6:	b580      	push	{r7, lr}
 80104e8:	b082      	sub	sp, #8
 80104ea:	af00      	add	r7, sp, #0
 80104ec:	7138      	strb	r0, [r7, #4]
 80104ee:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 80104f0:	6838      	ldr	r0, [r7, #0]
 80104f2:	f000 fddc 	bl	80110ae <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJfbEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 80104f6:	4603      	mov	r3, r0
 80104f8:	4618      	mov	r0, r3
 80104fa:	f7f2 fda2 	bl	8003042 <_ZNKRSt8__detail9__variant14_UninitializedIfLb1EE6_M_getEv>
 80104fe:	4603      	mov	r3, r0
 8010500:	4618      	mov	r0, r3
 8010502:	3708      	adds	r7, #8
 8010504:	46bd      	mov	sp, r7
 8010506:	bd80      	pop	{r7, pc}

08010508 <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8010508:	b590      	push	{r4, r7, lr}
 801050a:	b083      	sub	sp, #12
 801050c:	af00      	add	r7, sp, #0
 801050e:	7138      	strb	r0, [r7, #4]
 8010510:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8010512:	6838      	ldr	r0, [r7, #0]
 8010514:	f000 fda9 	bl	801106a <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJifbEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 8010518:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 801051a:	4619      	mov	r1, r3
 801051c:	4620      	mov	r0, r4
 801051e:	f7ff ffe2 	bl	80104e6 <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJfbEEEEEDcSt16in_place_index_tILj0EEOT_>
 8010522:	4603      	mov	r3, r0
    }
 8010524:	4618      	mov	r0, r3
 8010526:	370c      	adds	r7, #12
 8010528:	46bd      	mov	sp, r7
 801052a:	bd90      	pop	{r4, r7, pc}

0801052c <_ZNSt8__detail9__variant5__getILj2ERKNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 801052c:	b590      	push	{r4, r7, lr}
 801052e:	b083      	sub	sp, #12
 8010530:	af00      	add	r7, sp, #0
 8010532:	7138      	strb	r0, [r7, #4]
 8010534:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8010536:	6838      	ldr	r0, [r7, #0]
 8010538:	f000 fd75 	bl	8011026 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISC_E4typeE>
 801053c:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 801053e:	4619      	mov	r1, r3
 8010540:	4620      	mov	r0, r4
 8010542:	f7ff ffe1 	bl	8010508 <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8010546:	4603      	mov	r3, r0
    }
 8010548:	4618      	mov	r0, r3
 801054a:	370c      	adds	r7, #12
 801054c:	46bd      	mov	sp, r7
 801054e:	bd90      	pop	{r4, r7, pc}

08010550 <_ZNSt8__detail9__variant5__getILj2ERKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8010550:	b590      	push	{r4, r7, lr}
 8010552:	b083      	sub	sp, #12
 8010554:	af00      	add	r7, sp, #0
 8010556:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8010558:	6878      	ldr	r0, [r7, #4]
 801055a:	f000 fd59 	bl	8011010 <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 801055e:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8010560:	4619      	mov	r1, r3
 8010562:	4620      	mov	r0, r4
 8010564:	f7ff ffe2 	bl	801052c <_ZNSt8__detail9__variant5__getILj2ERKNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8010568:	4603      	mov	r3, r0
    }
 801056a:	4618      	mov	r0, r3
 801056c:	370c      	adds	r7, #12
 801056e:	46bd      	mov	sp, r7
 8010570:	bd90      	pop	{r4, r7, pc}

08010572 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESR_EEDcSH_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8010572:	b580      	push	{r7, lr}
 8010574:	b082      	sub	sp, #8
 8010576:	af00      	add	r7, sp, #0
 8010578:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 801057a:	6878      	ldr	r0, [r7, #4]
 801057c:	f000 fd48 	bl	8011010 <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 8010580:	4603      	mov	r3, r0
 8010582:	4618      	mov	r0, r3
 8010584:	f7ff ffe4 	bl	8010550 <_ZNSt8__detail9__variant5__getILj2ERKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 8010588:	4603      	mov	r3, r0
	}
 801058a:	4618      	mov	r0, r3
 801058c:	3708      	adds	r7, #8
 801058e:	46bd      	mov	sp, r7
 8010590:	bd80      	pop	{r7, pc}

08010592 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESN_SR_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8010592:	b5b0      	push	{r4, r5, r7, lr}
 8010594:	b082      	sub	sp, #8
 8010596:	af00      	add	r7, sp, #0
 8010598:	6078      	str	r0, [r7, #4]
 801059a:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 801059c:	6878      	ldr	r0, [r7, #4]
 801059e:	f000 fd2c 	bl	8010ffa <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 80105a2:	4604      	mov	r4, r0
 80105a4:	6838      	ldr	r0, [r7, #0]
 80105a6:	f000 fd33 	bl	8011010 <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 80105aa:	4603      	mov	r3, r0
 80105ac:	4618      	mov	r0, r3
 80105ae:	f7ff ffe0 	bl	8010572 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESR_EEDcSH_>
 80105b2:	4603      	mov	r3, r0
 80105b4:	4619      	mov	r1, r3
 80105b6:	4620      	mov	r0, r4
 80105b8:	f000 fd84 	bl	80110c4 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_JRKfEENSt15__invoke_resultISI_JDpT0_EE4typeESJ_DpOSO_>
		std::forward<_Variants>(__vars))...);
 80105bc:	462b      	mov	r3, r5
      }
 80105be:	4618      	mov	r0, r3
 80105c0:	3708      	adds	r7, #8
 80105c2:	46bd      	mov	sp, r7
 80105c4:	bdb0      	pop	{r4, r5, r7, pc}

080105c6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESN_SR_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80105c6:	b5b0      	push	{r4, r5, r7, lr}
 80105c8:	b082      	sub	sp, #8
 80105ca:	af00      	add	r7, sp, #0
 80105cc:	6078      	str	r0, [r7, #4]
 80105ce:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 80105d0:	6878      	ldr	r0, [r7, #4]
 80105d2:	f000 fd12 	bl	8010ffa <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 80105d6:	4604      	mov	r4, r0
 80105d8:	6838      	ldr	r0, [r7, #0]
 80105da:	f000 fd19 	bl	8011010 <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 80105de:	4603      	mov	r3, r0
 80105e0:	4619      	mov	r1, r3
 80105e2:	4620      	mov	r0, r4
 80105e4:	f7ff ffd5 	bl	8010592 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESN_SR_>
				   std::forward<_Variants>(__vars)...);
 80105e8:	462b      	mov	r3, r5
      }
 80105ea:	4618      	mov	r0, r3
 80105ec:	3708      	adds	r7, #8
 80105ee:	46bd      	mov	sp, r7
 80105f0:	bdb0      	pop	{r4, r5, r7, pc}

080105f2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj2EEEE14__visit_invokeESN_SR_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80105f2:	b5b0      	push	{r4, r5, r7, lr}
 80105f4:	b082      	sub	sp, #8
 80105f6:	af00      	add	r7, sp, #0
 80105f8:	6078      	str	r0, [r7, #4]
 80105fa:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 80105fc:	6878      	ldr	r0, [r7, #4]
 80105fe:	f000 fcfc 	bl	8010ffa <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 8010602:	4604      	mov	r4, r0
 8010604:	6838      	ldr	r0, [r7, #0]
 8010606:	f000 fd03 	bl	8011010 <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 801060a:	4603      	mov	r3, r0
 801060c:	4619      	mov	r1, r3
 801060e:	4620      	mov	r0, r4
 8010610:	f7ff ffd9 	bl	80105c6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESN_SR_>
				   std::forward<_Variants>(__vars)...);
 8010614:	462b      	mov	r3, r5
      }
 8010616:	4618      	mov	r0, r3
 8010618:	3708      	adds	r7, #8
 801061a:	46bd      	mov	sp, r7
 801061c:	bdb0      	pop	{r4, r5, r7, pc}

0801061e <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJbEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 801061e:	b580      	push	{r7, lr}
 8010620:	b082      	sub	sp, #8
 8010622:	af00      	add	r7, sp, #0
 8010624:	7138      	strb	r0, [r7, #4]
 8010626:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8010628:	6838      	ldr	r0, [r7, #0]
 801062a:	f000 fd62 	bl	80110f2 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJbEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 801062e:	4603      	mov	r3, r0
 8010630:	4618      	mov	r0, r3
 8010632:	f7f2 fd3a 	bl	80030aa <_ZNKRSt8__detail9__variant14_UninitializedIbLb1EE6_M_getEv>
 8010636:	4603      	mov	r3, r0
 8010638:	4618      	mov	r0, r3
 801063a:	3708      	adds	r7, #8
 801063c:	46bd      	mov	sp, r7
 801063e:	bd80      	pop	{r7, pc}

08010640 <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJfbEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8010640:	b590      	push	{r4, r7, lr}
 8010642:	b083      	sub	sp, #12
 8010644:	af00      	add	r7, sp, #0
 8010646:	7138      	strb	r0, [r7, #4]
 8010648:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 801064a:	6838      	ldr	r0, [r7, #0]
 801064c:	f000 fd2f 	bl	80110ae <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJfbEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 8010650:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8010652:	4619      	mov	r1, r3
 8010654:	4620      	mov	r0, r4
 8010656:	f7ff ffe2 	bl	801061e <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJbEEEEEDcSt16in_place_index_tILj0EEOT_>
 801065a:	4603      	mov	r3, r0
    }
 801065c:	4618      	mov	r0, r3
 801065e:	370c      	adds	r7, #12
 8010660:	46bd      	mov	sp, r7
 8010662:	bd90      	pop	{r4, r7, pc}

08010664 <_ZNSt8__detail9__variant5__getILj2ERKNS0_15_Variadic_unionIJifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8010664:	b590      	push	{r4, r7, lr}
 8010666:	b083      	sub	sp, #12
 8010668:	af00      	add	r7, sp, #0
 801066a:	7138      	strb	r0, [r7, #4]
 801066c:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 801066e:	6838      	ldr	r0, [r7, #0]
 8010670:	f000 fcfb 	bl	801106a <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJifbEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 8010674:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8010676:	4619      	mov	r1, r3
 8010678:	4620      	mov	r0, r4
 801067a:	f7ff ffe1 	bl	8010640 <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJfbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 801067e:	4603      	mov	r3, r0
    }
 8010680:	4618      	mov	r0, r3
 8010682:	370c      	adds	r7, #12
 8010684:	46bd      	mov	sp, r7
 8010686:	bd90      	pop	{r4, r7, pc}

08010688 <_ZNSt8__detail9__variant5__getILj3ERKNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8010688:	b590      	push	{r4, r7, lr}
 801068a:	b083      	sub	sp, #12
 801068c:	af00      	add	r7, sp, #0
 801068e:	7138      	strb	r0, [r7, #4]
 8010690:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8010692:	6838      	ldr	r0, [r7, #0]
 8010694:	f000 fcc7 	bl	8011026 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISC_E4typeE>
 8010698:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 801069a:	4619      	mov	r1, r3
 801069c:	4620      	mov	r0, r4
 801069e:	f7ff ffe1 	bl	8010664 <_ZNSt8__detail9__variant5__getILj2ERKNS0_15_Variadic_unionIJifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80106a2:	4603      	mov	r3, r0
    }
 80106a4:	4618      	mov	r0, r3
 80106a6:	370c      	adds	r7, #12
 80106a8:	46bd      	mov	sp, r7
 80106aa:	bd90      	pop	{r4, r7, pc}

080106ac <_ZNSt8__detail9__variant5__getILj3ERKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 80106ac:	b590      	push	{r4, r7, lr}
 80106ae:	b083      	sub	sp, #12
 80106b0:	af00      	add	r7, sp, #0
 80106b2:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 80106b4:	6878      	ldr	r0, [r7, #4]
 80106b6:	f000 fcab 	bl	8011010 <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 80106ba:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 80106bc:	4619      	mov	r1, r3
 80106be:	4620      	mov	r0, r4
 80106c0:	f7ff ffe2 	bl	8010688 <_ZNSt8__detail9__variant5__getILj3ERKNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80106c4:	4603      	mov	r3, r0
    }
 80106c6:	4618      	mov	r0, r3
 80106c8:	370c      	adds	r7, #12
 80106ca:	46bd      	mov	sp, r7
 80106cc:	bd90      	pop	{r4, r7, pc}

080106ce <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESR_EEDcSH_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 80106ce:	b580      	push	{r7, lr}
 80106d0:	b082      	sub	sp, #8
 80106d2:	af00      	add	r7, sp, #0
 80106d4:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 80106d6:	6878      	ldr	r0, [r7, #4]
 80106d8:	f000 fc9a 	bl	8011010 <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 80106dc:	4603      	mov	r3, r0
 80106de:	4618      	mov	r0, r3
 80106e0:	f7ff ffe4 	bl	80106ac <_ZNSt8__detail9__variant5__getILj3ERKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 80106e4:	4603      	mov	r3, r0
	}
 80106e6:	4618      	mov	r0, r3
 80106e8:	3708      	adds	r7, #8
 80106ea:	46bd      	mov	sp, r7
 80106ec:	bd80      	pop	{r7, pc}

080106ee <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESN_SR_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 80106ee:	b5b0      	push	{r4, r5, r7, lr}
 80106f0:	b082      	sub	sp, #8
 80106f2:	af00      	add	r7, sp, #0
 80106f4:	6078      	str	r0, [r7, #4]
 80106f6:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 80106f8:	6878      	ldr	r0, [r7, #4]
 80106fa:	f000 fc7e 	bl	8010ffa <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 80106fe:	4604      	mov	r4, r0
 8010700:	6838      	ldr	r0, [r7, #0]
 8010702:	f000 fc85 	bl	8011010 <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 8010706:	4603      	mov	r3, r0
 8010708:	4618      	mov	r0, r3
 801070a:	f7ff ffe0 	bl	80106ce <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESR_EEDcSH_>
 801070e:	4603      	mov	r3, r0
 8010710:	4619      	mov	r1, r3
 8010712:	4620      	mov	r0, r4
 8010714:	f000 fcf8 	bl	8011108 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_JRKbEENSt15__invoke_resultISI_JDpT0_EE4typeESJ_DpOSO_>
		std::forward<_Variants>(__vars))...);
 8010718:	462b      	mov	r3, r5
      }
 801071a:	4618      	mov	r0, r3
 801071c:	3708      	adds	r7, #8
 801071e:	46bd      	mov	sp, r7
 8010720:	bdb0      	pop	{r4, r5, r7, pc}

08010722 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESN_SR_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8010722:	b5b0      	push	{r4, r5, r7, lr}
 8010724:	b082      	sub	sp, #8
 8010726:	af00      	add	r7, sp, #0
 8010728:	6078      	str	r0, [r7, #4]
 801072a:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 801072c:	6878      	ldr	r0, [r7, #4]
 801072e:	f000 fc64 	bl	8010ffa <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 8010732:	4604      	mov	r4, r0
 8010734:	6838      	ldr	r0, [r7, #0]
 8010736:	f000 fc6b 	bl	8011010 <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 801073a:	4603      	mov	r3, r0
 801073c:	4619      	mov	r1, r3
 801073e:	4620      	mov	r0, r4
 8010740:	f7ff ffd5 	bl	80106ee <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESN_SR_>
				   std::forward<_Variants>(__vars)...);
 8010744:	462b      	mov	r3, r5
      }
 8010746:	4618      	mov	r0, r3
 8010748:	3708      	adds	r7, #8
 801074a:	46bd      	mov	sp, r7
 801074c:	bdb0      	pop	{r4, r5, r7, pc}

0801074e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj3EEEE14__visit_invokeESN_SR_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 801074e:	b5b0      	push	{r4, r5, r7, lr}
 8010750:	b082      	sub	sp, #8
 8010752:	af00      	add	r7, sp, #0
 8010754:	6078      	str	r0, [r7, #4]
 8010756:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8010758:	6878      	ldr	r0, [r7, #4]
 801075a:	f000 fc4e 	bl	8010ffa <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 801075e:	4604      	mov	r4, r0
 8010760:	6838      	ldr	r0, [r7, #0]
 8010762:	f000 fc55 	bl	8011010 <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 8010766:	4603      	mov	r3, r0
 8010768:	4619      	mov	r1, r3
 801076a:	4620      	mov	r0, r4
 801076c:	f7ff ffd9 	bl	8010722 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESN_SR_>
				   std::forward<_Variants>(__vars)...);
 8010770:	462b      	mov	r3, r5
      }
 8010772:	4618      	mov	r0, r3
 8010774:	3708      	adds	r7, #8
 8010776:	46bd      	mov	sp, r7
 8010778:	bdb0      	pop	{r4, r5, r7, pc}

0801077a <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS9_ifbEEERKSB_EEvOT0_OT1_EUlOT_E_RKSt7variantIJS9_ifbEEEJLj4EEE9_M_accessIJEEERKSS_jDpT_>:
	_M_access(size_t __first_index, _Args... __rest_indices) const
 801077a:	b580      	push	{r7, lr}
 801077c:	b082      	sub	sp, #8
 801077e:	af00      	add	r7, sp, #0
 8010780:	6078      	str	r0, [r7, #4]
 8010782:	6039      	str	r1, [r7, #0]
	    ._M_access(__rest_indices...);
 8010784:	683b      	ldr	r3, [r7, #0]
 8010786:	009b      	lsls	r3, r3, #2
 8010788:	687a      	ldr	r2, [r7, #4]
 801078a:	4413      	add	r3, r2
 801078c:	4618      	mov	r0, r3
 801078e:	f000 fcd2 	bl	8011136 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS9_ifbEEERKSB_EEvOT0_OT1_EUlOT_E_RKSt7variantIJS9_ifbEEEJEE9_M_accessEv>
 8010792:	4603      	mov	r3, r0
	}
 8010794:	4618      	mov	r0, r3
 8010796:	3708      	adds	r7, #8
 8010798:	46bd      	mov	sp, r7
 801079a:	bd80      	pop	{r7, pc}

0801079c <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_JRKSt7variantIJS8_ifbEEEEDcSH_DpOT2_>:
    __do_visit(_Visitor&& __visitor, _Variants&&... __variants)
 801079c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801079e:	b085      	sub	sp, #20
 80107a0:	af00      	add	r7, sp, #0
 80107a2:	6078      	str	r0, [r7, #4]
 80107a4:	6039      	str	r1, [r7, #0]
      constexpr auto& __vtable = __detail::__variant::__gen_vtable<
 80107a6:	4b0f      	ldr	r3, [pc, #60]	; (80107e4 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_JRKSt7variantIJS8_ifbEEEEDcSH_DpOT2_+0x48>)
 80107a8:	60fb      	str	r3, [r7, #12]
      auto __func_ptr = __vtable._M_access(__variants.index()...);
 80107aa:	6838      	ldr	r0, [r7, #0]
 80107ac:	f7ff fa62 	bl	800fc74 <_ZNKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE5indexEv>
 80107b0:	4603      	mov	r3, r0
 80107b2:	4619      	mov	r1, r3
 80107b4:	68f8      	ldr	r0, [r7, #12]
 80107b6:	f7ff ffe0 	bl	801077a <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS9_ifbEEERKSB_EEvOT0_OT1_EUlOT_E_RKSt7variantIJS9_ifbEEEJLj4EEE9_M_accessIJEEERKSS_jDpT_>
 80107ba:	4603      	mov	r3, r0
 80107bc:	681b      	ldr	r3, [r3, #0]
 80107be:	60bb      	str	r3, [r7, #8]
      return (*__func_ptr)(std::forward<_Visitor>(__visitor),
 80107c0:	68bc      	ldr	r4, [r7, #8]
 80107c2:	6878      	ldr	r0, [r7, #4]
 80107c4:	f000 fcc2 	bl	801114c <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 80107c8:	4605      	mov	r5, r0
 80107ca:	6838      	ldr	r0, [r7, #0]
 80107cc:	f000 fc20 	bl	8011010 <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 80107d0:	4603      	mov	r3, r0
 80107d2:	4619      	mov	r1, r3
 80107d4:	4628      	mov	r0, r5
 80107d6:	47a0      	blx	r4
			   std::forward<_Variants>(__variants)...);
 80107d8:	4633      	mov	r3, r6
    }
 80107da:	4618      	mov	r0, r3
 80107dc:	3714      	adds	r7, #20
 80107de:	46bd      	mov	sp, r7
 80107e0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80107e2:	bf00      	nop
 80107e4:	0802824c 	.word	0x0802824c

080107e8 <_ZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS7_ifbEEERKS9_EEvOT0_OT1_>:
    void __variant_construct(_Tp&& __lhs, _Up&& __rhs)
 80107e8:	b580      	push	{r7, lr}
 80107ea:	b084      	sub	sp, #16
 80107ec:	af00      	add	r7, sp, #0
 80107ee:	6078      	str	r0, [r7, #4]
 80107f0:	6039      	str	r1, [r7, #0]
      __lhs._M_index = __rhs._M_index;
 80107f2:	683b      	ldr	r3, [r7, #0]
 80107f4:	7e1a      	ldrb	r2, [r3, #24]
 80107f6:	687b      	ldr	r3, [r7, #4]
 80107f8:	761a      	strb	r2, [r3, #24]
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 80107fa:	687b      	ldr	r3, [r7, #4]
 80107fc:	60fb      	str	r3, [r7, #12]
 80107fe:	6838      	ldr	r0, [r7, #0]
 8010800:	f000 fbf0 	bl	8010fe4 <_ZSt7forwardIRKNSt8__detail9__variant15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISC_E4typeE>
 8010804:	4603      	mov	r3, r0
 8010806:	4618      	mov	r0, r3
 8010808:	f7ff fd60 	bl	80102cc <_ZSt14__variant_castIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERKNSt8__detail9__variant15_Copy_ctor_baseILb0EJS5_ifbEEEEDcOT0_>
 801080c:	4602      	mov	r2, r0
 801080e:	f107 030c 	add.w	r3, r7, #12
 8010812:	4611      	mov	r1, r2
 8010814:	4618      	mov	r0, r3
 8010816:	f7ff ffc1 	bl	801079c <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_JRKSt7variantIJS8_ifbEEEEDcSH_DpOT2_>
    }
 801081a:	bf00      	nop
 801081c:	3710      	adds	r7, #16
 801081e:	46bd      	mov	sp, r7
 8010820:	bd80      	pop	{r7, pc}

08010822 <_ZSt14__variant_castIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNSt8__detail9__variant16_Variant_storageILb0EJS5_ifbEEEEDcOT0_>:
    __variant_cast(_Tp&& __rhs)
 8010822:	b480      	push	{r7}
 8010824:	b083      	sub	sp, #12
 8010826:	af00      	add	r7, sp, #0
 8010828:	6078      	str	r0, [r7, #4]
	    return static_cast<variant<_Types...>&>(__rhs);
 801082a:	687b      	ldr	r3, [r7, #4]
    }
 801082c:	4618      	mov	r0, r3
 801082e:	370c      	adds	r7, #12
 8010830:	46bd      	mov	sp, r7
 8010832:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010836:	4770      	bx	lr

08010838 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESI_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8010838:	b580      	push	{r7, lr}
 801083a:	b082      	sub	sp, #8
 801083c:	af00      	add	r7, sp, #0
 801083e:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8010840:	6878      	ldr	r0, [r7, #4]
 8010842:	f000 fb37 	bl	8010eb4 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8010846:	4603      	mov	r3, r0
 8010848:	4618      	mov	r0, r3
 801084a:	f7ff fbf6 	bl	801003a <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 801084e:	4603      	mov	r3, r0
	}
 8010850:	4618      	mov	r0, r3
 8010852:	3708      	adds	r7, #8
 8010854:	46bd      	mov	sp, r7
 8010856:	bd80      	pop	{r7, pc}

08010858 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESF_SI_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8010858:	b5b0      	push	{r4, r5, r7, lr}
 801085a:	b082      	sub	sp, #8
 801085c:	af00      	add	r7, sp, #0
 801085e:	6078      	str	r0, [r7, #4]
 8010860:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8010862:	6878      	ldr	r0, [r7, #4]
 8010864:	f000 fc7d 	bl	8011162 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8010868:	4604      	mov	r4, r0
 801086a:	6838      	ldr	r0, [r7, #0]
 801086c:	f000 fb22 	bl	8010eb4 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8010870:	4603      	mov	r3, r0
 8010872:	4618      	mov	r0, r3
 8010874:	f7ff ffe0 	bl	8010838 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESI_EEDcOT0_>
 8010878:	4603      	mov	r3, r0
 801087a:	4619      	mov	r1, r3
 801087c:	4620      	mov	r0, r4
 801087e:	f000 fc7b 	bl	8011178 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRS8_EENSt15__invoke_resultISA_JDpT0_EE4typeESB_DpOSF_>
		std::forward<_Variants>(__vars))...);
 8010882:	462b      	mov	r3, r5
      }
 8010884:	4618      	mov	r0, r3
 8010886:	3708      	adds	r7, #8
 8010888:	46bd      	mov	sp, r7
 801088a:	bdb0      	pop	{r4, r5, r7, pc}

0801088c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESF_SI_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 801088c:	b5b0      	push	{r4, r5, r7, lr}
 801088e:	b082      	sub	sp, #8
 8010890:	af00      	add	r7, sp, #0
 8010892:	6078      	str	r0, [r7, #4]
 8010894:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8010896:	6878      	ldr	r0, [r7, #4]
 8010898:	f000 fc63 	bl	8011162 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 801089c:	4604      	mov	r4, r0
 801089e:	6838      	ldr	r0, [r7, #0]
 80108a0:	f000 fb08 	bl	8010eb4 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 80108a4:	4603      	mov	r3, r0
 80108a6:	4619      	mov	r1, r3
 80108a8:	4620      	mov	r0, r4
 80108aa:	f7ff ffd5 	bl	8010858 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESF_SI_>
				   std::forward<_Variants>(__vars)...);
 80108ae:	462b      	mov	r3, r5
      }
 80108b0:	4618      	mov	r0, r3
 80108b2:	3708      	adds	r7, #8
 80108b4:	46bd      	mov	sp, r7
 80108b6:	bdb0      	pop	{r4, r5, r7, pc}

080108b8 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj0EEEE14__visit_invokeESF_SI_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80108b8:	b5b0      	push	{r4, r5, r7, lr}
 80108ba:	b082      	sub	sp, #8
 80108bc:	af00      	add	r7, sp, #0
 80108be:	6078      	str	r0, [r7, #4]
 80108c0:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 80108c2:	6878      	ldr	r0, [r7, #4]
 80108c4:	f000 fc4d 	bl	8011162 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 80108c8:	4604      	mov	r4, r0
 80108ca:	6838      	ldr	r0, [r7, #0]
 80108cc:	f000 faf2 	bl	8010eb4 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 80108d0:	4603      	mov	r3, r0
 80108d2:	4619      	mov	r1, r3
 80108d4:	4620      	mov	r0, r4
 80108d6:	f7ff ffd9 	bl	801088c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESF_SI_>
				   std::forward<_Variants>(__vars)...);
 80108da:	462b      	mov	r3, r5
      }
 80108dc:	4618      	mov	r0, r3
 80108de:	3708      	adds	r7, #8
 80108e0:	46bd      	mov	sp, r7
 80108e2:	bdb0      	pop	{r4, r5, r7, pc}

080108e4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESI_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 80108e4:	b580      	push	{r7, lr}
 80108e6:	b082      	sub	sp, #8
 80108e8:	af00      	add	r7, sp, #0
 80108ea:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 80108ec:	6878      	ldr	r0, [r7, #4]
 80108ee:	f000 fae1 	bl	8010eb4 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 80108f2:	4603      	mov	r3, r0
 80108f4:	4618      	mov	r0, r3
 80108f6:	f7ff fc09 	bl	801010c <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 80108fa:	4603      	mov	r3, r0
	}
 80108fc:	4618      	mov	r0, r3
 80108fe:	3708      	adds	r7, #8
 8010900:	46bd      	mov	sp, r7
 8010902:	bd80      	pop	{r7, pc}

08010904 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESF_SI_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8010904:	b5b0      	push	{r4, r5, r7, lr}
 8010906:	b082      	sub	sp, #8
 8010908:	af00      	add	r7, sp, #0
 801090a:	6078      	str	r0, [r7, #4]
 801090c:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 801090e:	6878      	ldr	r0, [r7, #4]
 8010910:	f000 fc27 	bl	8011162 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8010914:	4604      	mov	r4, r0
 8010916:	6838      	ldr	r0, [r7, #0]
 8010918:	f000 facc 	bl	8010eb4 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 801091c:	4603      	mov	r3, r0
 801091e:	4618      	mov	r0, r3
 8010920:	f7ff ffe0 	bl	80108e4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESI_EEDcOT0_>
 8010924:	4603      	mov	r3, r0
 8010926:	4619      	mov	r1, r3
 8010928:	4620      	mov	r0, r4
 801092a:	f000 fc3c 	bl	80111a6 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRiEENSt15__invoke_resultISA_JDpT0_EE4typeESB_DpOSF_>
		std::forward<_Variants>(__vars))...);
 801092e:	462b      	mov	r3, r5
      }
 8010930:	4618      	mov	r0, r3
 8010932:	3708      	adds	r7, #8
 8010934:	46bd      	mov	sp, r7
 8010936:	bdb0      	pop	{r4, r5, r7, pc}

08010938 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESF_SI_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8010938:	b5b0      	push	{r4, r5, r7, lr}
 801093a:	b082      	sub	sp, #8
 801093c:	af00      	add	r7, sp, #0
 801093e:	6078      	str	r0, [r7, #4]
 8010940:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8010942:	6878      	ldr	r0, [r7, #4]
 8010944:	f000 fc0d 	bl	8011162 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8010948:	4604      	mov	r4, r0
 801094a:	6838      	ldr	r0, [r7, #0]
 801094c:	f000 fab2 	bl	8010eb4 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8010950:	4603      	mov	r3, r0
 8010952:	4619      	mov	r1, r3
 8010954:	4620      	mov	r0, r4
 8010956:	f7ff ffd5 	bl	8010904 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESF_SI_>
				   std::forward<_Variants>(__vars)...);
 801095a:	462b      	mov	r3, r5
      }
 801095c:	4618      	mov	r0, r3
 801095e:	3708      	adds	r7, #8
 8010960:	46bd      	mov	sp, r7
 8010962:	bdb0      	pop	{r4, r5, r7, pc}

08010964 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj1EEEE14__visit_invokeESF_SI_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8010964:	b5b0      	push	{r4, r5, r7, lr}
 8010966:	b082      	sub	sp, #8
 8010968:	af00      	add	r7, sp, #0
 801096a:	6078      	str	r0, [r7, #4]
 801096c:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 801096e:	6878      	ldr	r0, [r7, #4]
 8010970:	f000 fbf7 	bl	8011162 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8010974:	4604      	mov	r4, r0
 8010976:	6838      	ldr	r0, [r7, #0]
 8010978:	f000 fa9c 	bl	8010eb4 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 801097c:	4603      	mov	r3, r0
 801097e:	4619      	mov	r1, r3
 8010980:	4620      	mov	r0, r4
 8010982:	f7ff ffd9 	bl	8010938 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESF_SI_>
				   std::forward<_Variants>(__vars)...);
 8010986:	462b      	mov	r3, r5
      }
 8010988:	4618      	mov	r0, r3
 801098a:	3708      	adds	r7, #8
 801098c:	46bd      	mov	sp, r7
 801098e:	bdb0      	pop	{r4, r5, r7, pc}

08010990 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESI_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8010990:	b580      	push	{r7, lr}
 8010992:	b082      	sub	sp, #8
 8010994:	af00      	add	r7, sp, #0
 8010996:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8010998:	6878      	ldr	r0, [r7, #4]
 801099a:	f000 fa8b 	bl	8010eb4 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 801099e:	4603      	mov	r3, r0
 80109a0:	4618      	mov	r0, r3
 80109a2:	f7ff fc2f 	bl	8010204 <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 80109a6:	4603      	mov	r3, r0
	}
 80109a8:	4618      	mov	r0, r3
 80109aa:	3708      	adds	r7, #8
 80109ac:	46bd      	mov	sp, r7
 80109ae:	bd80      	pop	{r7, pc}

080109b0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESF_SI_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 80109b0:	b5b0      	push	{r4, r5, r7, lr}
 80109b2:	b082      	sub	sp, #8
 80109b4:	af00      	add	r7, sp, #0
 80109b6:	6078      	str	r0, [r7, #4]
 80109b8:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 80109ba:	6878      	ldr	r0, [r7, #4]
 80109bc:	f000 fbd1 	bl	8011162 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 80109c0:	4604      	mov	r4, r0
 80109c2:	6838      	ldr	r0, [r7, #0]
 80109c4:	f000 fa76 	bl	8010eb4 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 80109c8:	4603      	mov	r3, r0
 80109ca:	4618      	mov	r0, r3
 80109cc:	f7ff ffe0 	bl	8010990 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESI_EEDcOT0_>
 80109d0:	4603      	mov	r3, r0
 80109d2:	4619      	mov	r1, r3
 80109d4:	4620      	mov	r0, r4
 80109d6:	f000 fbfd 	bl	80111d4 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRfEENSt15__invoke_resultISA_JDpT0_EE4typeESB_DpOSF_>
		std::forward<_Variants>(__vars))...);
 80109da:	462b      	mov	r3, r5
      }
 80109dc:	4618      	mov	r0, r3
 80109de:	3708      	adds	r7, #8
 80109e0:	46bd      	mov	sp, r7
 80109e2:	bdb0      	pop	{r4, r5, r7, pc}

080109e4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESF_SI_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80109e4:	b5b0      	push	{r4, r5, r7, lr}
 80109e6:	b082      	sub	sp, #8
 80109e8:	af00      	add	r7, sp, #0
 80109ea:	6078      	str	r0, [r7, #4]
 80109ec:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 80109ee:	6878      	ldr	r0, [r7, #4]
 80109f0:	f000 fbb7 	bl	8011162 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 80109f4:	4604      	mov	r4, r0
 80109f6:	6838      	ldr	r0, [r7, #0]
 80109f8:	f000 fa5c 	bl	8010eb4 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 80109fc:	4603      	mov	r3, r0
 80109fe:	4619      	mov	r1, r3
 8010a00:	4620      	mov	r0, r4
 8010a02:	f7ff ffd5 	bl	80109b0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESF_SI_>
				   std::forward<_Variants>(__vars)...);
 8010a06:	462b      	mov	r3, r5
      }
 8010a08:	4618      	mov	r0, r3
 8010a0a:	3708      	adds	r7, #8
 8010a0c:	46bd      	mov	sp, r7
 8010a0e:	bdb0      	pop	{r4, r5, r7, pc}

08010a10 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj2EEEE14__visit_invokeESF_SI_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8010a10:	b5b0      	push	{r4, r5, r7, lr}
 8010a12:	b082      	sub	sp, #8
 8010a14:	af00      	add	r7, sp, #0
 8010a16:	6078      	str	r0, [r7, #4]
 8010a18:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8010a1a:	6878      	ldr	r0, [r7, #4]
 8010a1c:	f000 fba1 	bl	8011162 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8010a20:	4604      	mov	r4, r0
 8010a22:	6838      	ldr	r0, [r7, #0]
 8010a24:	f000 fa46 	bl	8010eb4 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8010a28:	4603      	mov	r3, r0
 8010a2a:	4619      	mov	r1, r3
 8010a2c:	4620      	mov	r0, r4
 8010a2e:	f7ff ffd9 	bl	80109e4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESF_SI_>
				   std::forward<_Variants>(__vars)...);
 8010a32:	462b      	mov	r3, r5
      }
 8010a34:	4618      	mov	r0, r3
 8010a36:	3708      	adds	r7, #8
 8010a38:	46bd      	mov	sp, r7
 8010a3a:	bdb0      	pop	{r4, r5, r7, pc}

08010a3c <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJbEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8010a3c:	b580      	push	{r7, lr}
 8010a3e:	b082      	sub	sp, #8
 8010a40:	af00      	add	r7, sp, #0
 8010a42:	7138      	strb	r0, [r7, #4]
 8010a44:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8010a46:	6838      	ldr	r0, [r7, #0]
 8010a48:	f000 fbdb 	bl	8011202 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbEEEEOT_RNSt16remove_referenceIS5_E4typeE>
 8010a4c:	4603      	mov	r3, r0
 8010a4e:	4618      	mov	r0, r3
 8010a50:	f7f1 fa6c 	bl	8001f2c <_ZNRSt8__detail9__variant14_UninitializedIbLb1EE6_M_getEv>
 8010a54:	4603      	mov	r3, r0
 8010a56:	4618      	mov	r0, r3
 8010a58:	3708      	adds	r7, #8
 8010a5a:	46bd      	mov	sp, r7
 8010a5c:	bd80      	pop	{r7, pc}

08010a5e <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJfbEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8010a5e:	b590      	push	{r4, r7, lr}
 8010a60:	b083      	sub	sp, #12
 8010a62:	af00      	add	r7, sp, #0
 8010a64:	7138      	strb	r0, [r7, #4]
 8010a66:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8010a68:	6838      	ldr	r0, [r7, #0]
 8010a6a:	f000 fa84 	bl	8010f76 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfbEEEEOT_RNSt16remove_referenceIS5_E4typeE>
 8010a6e:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8010a70:	4619      	mov	r1, r3
 8010a72:	4620      	mov	r0, r4
 8010a74:	f7ff ffe2 	bl	8010a3c <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJbEEEEEDcSt16in_place_index_tILj0EEOT_>
 8010a78:	4603      	mov	r3, r0
    }
 8010a7a:	4618      	mov	r0, r3
 8010a7c:	370c      	adds	r7, #12
 8010a7e:	46bd      	mov	sp, r7
 8010a80:	bd90      	pop	{r4, r7, pc}

08010a82 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8010a82:	b590      	push	{r4, r7, lr}
 8010a84:	b083      	sub	sp, #12
 8010a86:	af00      	add	r7, sp, #0
 8010a88:	7138      	strb	r0, [r7, #4]
 8010a8a:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8010a8c:	6838      	ldr	r0, [r7, #0]
 8010a8e:	f000 fa48 	bl	8010f22 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifbEEEEOT_RNSt16remove_referenceIS5_E4typeE>
 8010a92:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8010a94:	4619      	mov	r1, r3
 8010a96:	4620      	mov	r0, r4
 8010a98:	f7ff ffe1 	bl	8010a5e <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJfbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8010a9c:	4603      	mov	r3, r0
    }
 8010a9e:	4618      	mov	r0, r3
 8010aa0:	370c      	adds	r7, #12
 8010aa2:	46bd      	mov	sp, r7
 8010aa4:	bd90      	pop	{r4, r7, pc}

08010aa6 <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8010aa6:	b590      	push	{r4, r7, lr}
 8010aa8:	b083      	sub	sp, #12
 8010aaa:	af00      	add	r7, sp, #0
 8010aac:	7138      	strb	r0, [r7, #4]
 8010aae:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8010ab0:	6838      	ldr	r0, [r7, #0]
 8010ab2:	f000 fa0a 	bl	8010eca <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>
 8010ab6:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8010ab8:	4619      	mov	r1, r3
 8010aba:	4620      	mov	r0, r4
 8010abc:	f7ff ffe1 	bl	8010a82 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8010ac0:	4603      	mov	r3, r0
    }
 8010ac2:	4618      	mov	r0, r3
 8010ac4:	370c      	adds	r7, #12
 8010ac6:	46bd      	mov	sp, r7
 8010ac8:	bd90      	pop	{r4, r7, pc}

08010aca <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8010aca:	b590      	push	{r4, r7, lr}
 8010acc:	b083      	sub	sp, #12
 8010ace:	af00      	add	r7, sp, #0
 8010ad0:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8010ad2:	6878      	ldr	r0, [r7, #4]
 8010ad4:	f000 f9ee 	bl	8010eb4 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8010ad8:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8010ada:	4619      	mov	r1, r3
 8010adc:	4620      	mov	r0, r4
 8010ade:	f7ff ffe2 	bl	8010aa6 <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8010ae2:	4603      	mov	r3, r0
    }
 8010ae4:	4618      	mov	r0, r3
 8010ae6:	370c      	adds	r7, #12
 8010ae8:	46bd      	mov	sp, r7
 8010aea:	bd90      	pop	{r4, r7, pc}

08010aec <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESI_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8010aec:	b580      	push	{r7, lr}
 8010aee:	b082      	sub	sp, #8
 8010af0:	af00      	add	r7, sp, #0
 8010af2:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8010af4:	6878      	ldr	r0, [r7, #4]
 8010af6:	f000 f9dd 	bl	8010eb4 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8010afa:	4603      	mov	r3, r0
 8010afc:	4618      	mov	r0, r3
 8010afe:	f7ff ffe4 	bl	8010aca <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 8010b02:	4603      	mov	r3, r0
	}
 8010b04:	4618      	mov	r0, r3
 8010b06:	3708      	adds	r7, #8
 8010b08:	46bd      	mov	sp, r7
 8010b0a:	bd80      	pop	{r7, pc}

08010b0c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESF_SI_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8010b0c:	b5b0      	push	{r4, r5, r7, lr}
 8010b0e:	b082      	sub	sp, #8
 8010b10:	af00      	add	r7, sp, #0
 8010b12:	6078      	str	r0, [r7, #4]
 8010b14:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8010b16:	6878      	ldr	r0, [r7, #4]
 8010b18:	f000 fb23 	bl	8011162 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8010b1c:	4604      	mov	r4, r0
 8010b1e:	6838      	ldr	r0, [r7, #0]
 8010b20:	f000 f9c8 	bl	8010eb4 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8010b24:	4603      	mov	r3, r0
 8010b26:	4618      	mov	r0, r3
 8010b28:	f7ff ffe0 	bl	8010aec <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESI_EEDcOT0_>
 8010b2c:	4603      	mov	r3, r0
 8010b2e:	4619      	mov	r1, r3
 8010b30:	4620      	mov	r0, r4
 8010b32:	f000 fb71 	bl	8011218 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRbEENSt15__invoke_resultISA_JDpT0_EE4typeESB_DpOSF_>
		std::forward<_Variants>(__vars))...);
 8010b36:	462b      	mov	r3, r5
      }
 8010b38:	4618      	mov	r0, r3
 8010b3a:	3708      	adds	r7, #8
 8010b3c:	46bd      	mov	sp, r7
 8010b3e:	bdb0      	pop	{r4, r5, r7, pc}

08010b40 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESF_SI_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8010b40:	b5b0      	push	{r4, r5, r7, lr}
 8010b42:	b082      	sub	sp, #8
 8010b44:	af00      	add	r7, sp, #0
 8010b46:	6078      	str	r0, [r7, #4]
 8010b48:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8010b4a:	6878      	ldr	r0, [r7, #4]
 8010b4c:	f000 fb09 	bl	8011162 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8010b50:	4604      	mov	r4, r0
 8010b52:	6838      	ldr	r0, [r7, #0]
 8010b54:	f000 f9ae 	bl	8010eb4 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8010b58:	4603      	mov	r3, r0
 8010b5a:	4619      	mov	r1, r3
 8010b5c:	4620      	mov	r0, r4
 8010b5e:	f7ff ffd5 	bl	8010b0c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESF_SI_>
				   std::forward<_Variants>(__vars)...);
 8010b62:	462b      	mov	r3, r5
      }
 8010b64:	4618      	mov	r0, r3
 8010b66:	3708      	adds	r7, #8
 8010b68:	46bd      	mov	sp, r7
 8010b6a:	bdb0      	pop	{r4, r5, r7, pc}

08010b6c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj3EEEE14__visit_invokeESF_SI_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8010b6c:	b5b0      	push	{r4, r5, r7, lr}
 8010b6e:	b082      	sub	sp, #8
 8010b70:	af00      	add	r7, sp, #0
 8010b72:	6078      	str	r0, [r7, #4]
 8010b74:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8010b76:	6878      	ldr	r0, [r7, #4]
 8010b78:	f000 faf3 	bl	8011162 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8010b7c:	4604      	mov	r4, r0
 8010b7e:	6838      	ldr	r0, [r7, #0]
 8010b80:	f000 f998 	bl	8010eb4 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8010b84:	4603      	mov	r3, r0
 8010b86:	4619      	mov	r1, r3
 8010b88:	4620      	mov	r0, r4
 8010b8a:	f7ff ffd9 	bl	8010b40 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESF_SI_>
				   std::forward<_Variants>(__vars)...);
 8010b8e:	462b      	mov	r3, r5
      }
 8010b90:	4618      	mov	r0, r3
 8010b92:	3708      	adds	r7, #8
 8010b94:	46bd      	mov	sp, r7
 8010b96:	bdb0      	pop	{r4, r5, r7, pc}

08010b98 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJS9_ifbEEEJLj4EEE9_M_accessIJEEERKSJ_jDpT_>:
	_M_access(size_t __first_index, _Args... __rest_indices) const
 8010b98:	b580      	push	{r7, lr}
 8010b9a:	b082      	sub	sp, #8
 8010b9c:	af00      	add	r7, sp, #0
 8010b9e:	6078      	str	r0, [r7, #4]
 8010ba0:	6039      	str	r1, [r7, #0]
	    ._M_access(__rest_indices...);
 8010ba2:	683b      	ldr	r3, [r7, #0]
 8010ba4:	009b      	lsls	r3, r3, #2
 8010ba6:	687a      	ldr	r2, [r7, #4]
 8010ba8:	4413      	add	r3, r2
 8010baa:	4618      	mov	r0, r3
 8010bac:	f000 fb4b 	bl	8011246 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJS9_ifbEEEJEE9_M_accessEv>
 8010bb0:	4603      	mov	r3, r0
	}
 8010bb2:	4618      	mov	r0, r3
 8010bb4:	3708      	adds	r7, #8
 8010bb6:	46bd      	mov	sp, r7
 8010bb8:	bd80      	pop	{r7, pc}
	...

08010bbc <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRSt7variantIJS8_ifbEEEEDcOT1_DpOT2_>:
    __do_visit(_Visitor&& __visitor, _Variants&&... __variants)
 8010bbc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010bbe:	b085      	sub	sp, #20
 8010bc0:	af00      	add	r7, sp, #0
 8010bc2:	6078      	str	r0, [r7, #4]
 8010bc4:	6039      	str	r1, [r7, #0]
      constexpr auto& __vtable = __detail::__variant::__gen_vtable<
 8010bc6:	4b0f      	ldr	r3, [pc, #60]	; (8010c04 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRSt7variantIJS8_ifbEEEEDcOT1_DpOT2_+0x48>)
 8010bc8:	60fb      	str	r3, [r7, #12]
      auto __func_ptr = __vtable._M_access(__variants.index()...);
 8010bca:	6838      	ldr	r0, [r7, #0]
 8010bcc:	f7ff f852 	bl	800fc74 <_ZNKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE5indexEv>
 8010bd0:	4603      	mov	r3, r0
 8010bd2:	4619      	mov	r1, r3
 8010bd4:	68f8      	ldr	r0, [r7, #12]
 8010bd6:	f7ff ffdf 	bl	8010b98 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJS9_ifbEEEJLj4EEE9_M_accessIJEEERKSJ_jDpT_>
 8010bda:	4603      	mov	r3, r0
 8010bdc:	681b      	ldr	r3, [r3, #0]
 8010bde:	60bb      	str	r3, [r7, #8]
      return (*__func_ptr)(std::forward<_Visitor>(__visitor),
 8010be0:	68bc      	ldr	r4, [r7, #8]
 8010be2:	6878      	ldr	r0, [r7, #4]
 8010be4:	f000 fb3a 	bl	801125c <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8010be8:	4605      	mov	r5, r0
 8010bea:	6838      	ldr	r0, [r7, #0]
 8010bec:	f000 f962 	bl	8010eb4 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8010bf0:	4603      	mov	r3, r0
 8010bf2:	4619      	mov	r1, r3
 8010bf4:	4628      	mov	r0, r5
 8010bf6:	47a0      	blx	r4
			   std::forward<_Variants>(__variants)...);
 8010bf8:	4633      	mov	r3, r6
    }
 8010bfa:	4618      	mov	r0, r3
 8010bfc:	3714      	adds	r7, #20
 8010bfe:	46bd      	mov	sp, r7
 8010c00:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010c02:	bf00      	nop
 8010c04:	0802825c 	.word	0x0802825c

08010c08 <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEv>:
      constexpr void _M_reset_impl()
 8010c08:	b580      	push	{r7, lr}
 8010c0a:	b084      	sub	sp, #16
 8010c0c:	af00      	add	r7, sp, #0
 8010c0e:	6078      	str	r0, [r7, #4]
	__do_visit([](auto&& __this_mem) mutable
 8010c10:	6878      	ldr	r0, [r7, #4]
 8010c12:	f7ff fe06 	bl	8010822 <_ZSt14__variant_castIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNSt8__detail9__variant16_Variant_storageILb0EJS5_ifbEEEEDcOT0_>
 8010c16:	4602      	mov	r2, r0
 8010c18:	f107 030c 	add.w	r3, r7, #12
 8010c1c:	4611      	mov	r1, r2
 8010c1e:	4618      	mov	r0, r3
 8010c20:	f7ff ffcc 	bl	8010bbc <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRSt7variantIJS8_ifbEEEEDcOT1_DpOT2_>
      }
 8010c24:	bf00      	nop
 8010c26:	3710      	adds	r7, #16
 8010c28:	46bd      	mov	sp, r7
 8010c2a:	bd80      	pop	{r7, pc}

08010c2c <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_beginEv>:
      _M_begin() const _GLIBCXX_NOEXCEPT
 8010c2c:	b480      	push	{r7}
 8010c2e:	b083      	sub	sp, #12
 8010c30:	af00      	add	r7, sp, #0
 8010c32:	6078      	str	r0, [r7, #4]
	  (this->_M_impl._M_header._M_parent);
 8010c34:	687b      	ldr	r3, [r7, #4]
 8010c36:	689b      	ldr	r3, [r3, #8]
      }
 8010c38:	4618      	mov	r0, r3
 8010c3a:	370c      	adds	r7, #12
 8010c3c:	46bd      	mov	sp, r7
 8010c3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010c42:	4770      	bx	lr

08010c44 <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_M_endEv>:
      _M_end() const _GLIBCXX_NOEXCEPT
 8010c44:	b480      	push	{r7}
 8010c46:	b083      	sub	sp, #12
 8010c48:	af00      	add	r7, sp, #0
 8010c4a:	6078      	str	r0, [r7, #4]
      { return &this->_M_impl._M_header; }
 8010c4c:	687b      	ldr	r3, [r7, #4]
 8010c4e:	3304      	adds	r3, #4
 8010c50:	4618      	mov	r0, r3
 8010c52:	370c      	adds	r7, #12
 8010c54:	46bd      	mov	sp, r7
 8010c56:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010c5a:	4770      	bx	lr

08010c5c <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS3_EPKSt18_Rb_tree_node_baseRS1_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8010c5c:	b590      	push	{r4, r7, lr}
 8010c5e:	b087      	sub	sp, #28
 8010c60:	af00      	add	r7, sp, #0
 8010c62:	60f8      	str	r0, [r7, #12]
 8010c64:	60b9      	str	r1, [r7, #8]
 8010c66:	607a      	str	r2, [r7, #4]
 8010c68:	603b      	str	r3, [r7, #0]
      while (__x != 0)
 8010c6a:	68bb      	ldr	r3, [r7, #8]
 8010c6c:	2b00      	cmp	r3, #0
 8010c6e:	d01b      	beq.n	8010ca8 <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS3_EPKSt18_Rb_tree_node_baseRS1_+0x4c>
	if (!_M_impl._M_key_compare(_S_key(__x), __k))
 8010c70:	68fc      	ldr	r4, [r7, #12]
 8010c72:	68b8      	ldr	r0, [r7, #8]
 8010c74:	f7f5 fbd8 	bl	8006428 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt13_Rb_tree_nodeIS3_E>
 8010c78:	4603      	mov	r3, r0
 8010c7a:	683a      	ldr	r2, [r7, #0]
 8010c7c:	4619      	mov	r1, r3
 8010c7e:	4620      	mov	r0, r4
 8010c80:	f7f4 fb7f 	bl	8005382 <_ZNKSt4lessIcEclERKcS2_>
 8010c84:	4603      	mov	r3, r0
 8010c86:	f083 0301 	eor.w	r3, r3, #1
 8010c8a:	b2db      	uxtb	r3, r3
 8010c8c:	2b00      	cmp	r3, #0
 8010c8e:	d006      	beq.n	8010c9e <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS3_EPKSt18_Rb_tree_node_baseRS1_+0x42>
	  __y = __x, __x = _S_left(__x);
 8010c90:	68bb      	ldr	r3, [r7, #8]
 8010c92:	607b      	str	r3, [r7, #4]
 8010c94:	68b8      	ldr	r0, [r7, #8]
 8010c96:	f000 faec 	bl	8011272 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE7_S_leftEPKSt18_Rb_tree_node_base>
 8010c9a:	60b8      	str	r0, [r7, #8]
 8010c9c:	e7e5      	b.n	8010c6a <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS3_EPKSt18_Rb_tree_node_baseRS1_+0xe>
	  __x = _S_right(__x);
 8010c9e:	68b8      	ldr	r0, [r7, #8]
 8010ca0:	f000 faf3 	bl	801128a <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPKSt18_Rb_tree_node_base>
 8010ca4:	60b8      	str	r0, [r7, #8]
      while (__x != 0)
 8010ca6:	e7e0      	b.n	8010c6a <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS3_EPKSt18_Rb_tree_node_baseRS1_+0xe>
      return const_iterator(__y);
 8010ca8:	f107 0314 	add.w	r3, r7, #20
 8010cac:	6879      	ldr	r1, [r7, #4]
 8010cae:	4618      	mov	r0, r3
 8010cb0:	f000 f819 	bl	8010ce6 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKc10token_typeEEC1EPKSt18_Rb_tree_node_base>
 8010cb4:	697b      	ldr	r3, [r7, #20]
    }
 8010cb6:	4618      	mov	r0, r3
 8010cb8:	371c      	adds	r7, #28
 8010cba:	46bd      	mov	sp, r7
 8010cbc:	bd90      	pop	{r4, r7, pc}

08010cbe <_ZSteqRKSt23_Rb_tree_const_iteratorISt4pairIKc10token_typeEES6_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 8010cbe:	b480      	push	{r7}
 8010cc0:	b083      	sub	sp, #12
 8010cc2:	af00      	add	r7, sp, #0
 8010cc4:	6078      	str	r0, [r7, #4]
 8010cc6:	6039      	str	r1, [r7, #0]
      { return __x._M_node == __y._M_node; }
 8010cc8:	687b      	ldr	r3, [r7, #4]
 8010cca:	681a      	ldr	r2, [r3, #0]
 8010ccc:	683b      	ldr	r3, [r7, #0]
 8010cce:	681b      	ldr	r3, [r3, #0]
 8010cd0:	429a      	cmp	r2, r3
 8010cd2:	bf0c      	ite	eq
 8010cd4:	2301      	moveq	r3, #1
 8010cd6:	2300      	movne	r3, #0
 8010cd8:	b2db      	uxtb	r3, r3
 8010cda:	4618      	mov	r0, r3
 8010cdc:	370c      	adds	r7, #12
 8010cde:	46bd      	mov	sp, r7
 8010ce0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010ce4:	4770      	bx	lr

08010ce6 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKc10token_typeEEC1EPKSt18_Rb_tree_node_base>:
      _Rb_tree_const_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 8010ce6:	b480      	push	{r7}
 8010ce8:	b083      	sub	sp, #12
 8010cea:	af00      	add	r7, sp, #0
 8010cec:	6078      	str	r0, [r7, #4]
 8010cee:	6039      	str	r1, [r7, #0]
      : _M_node(__x) { }
 8010cf0:	687b      	ldr	r3, [r7, #4]
 8010cf2:	683a      	ldr	r2, [r7, #0]
 8010cf4:	601a      	str	r2, [r3, #0]
 8010cf6:	687b      	ldr	r3, [r7, #4]
 8010cf8:	4618      	mov	r0, r3
 8010cfa:	370c      	adds	r7, #12
 8010cfc:	46bd      	mov	sp, r7
 8010cfe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010d02:	4770      	bx	lr

08010d04 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_beginEv>:
      _M_begin() const _GLIBCXX_NOEXCEPT
 8010d04:	b480      	push	{r7}
 8010d06:	b083      	sub	sp, #12
 8010d08:	af00      	add	r7, sp, #0
 8010d0a:	6078      	str	r0, [r7, #4]
	  (this->_M_impl._M_header._M_parent);
 8010d0c:	687b      	ldr	r3, [r7, #4]
 8010d0e:	689b      	ldr	r3, [r3, #8]
      }
 8010d10:	4618      	mov	r0, r3
 8010d12:	370c      	adds	r7, #12
 8010d14:	46bd      	mov	sp, r7
 8010d16:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010d1a:	4770      	bx	lr

08010d1c <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_M_endEv>:
      _M_end() const _GLIBCXX_NOEXCEPT
 8010d1c:	b480      	push	{r7}
 8010d1e:	b083      	sub	sp, #12
 8010d20:	af00      	add	r7, sp, #0
 8010d22:	6078      	str	r0, [r7, #4]
      { return &this->_M_impl._M_header; }
 8010d24:	687b      	ldr	r3, [r7, #4]
 8010d26:	3304      	adds	r3, #4
 8010d28:	4618      	mov	r0, r3
 8010d2a:	370c      	adds	r7, #12
 8010d2c:	46bd      	mov	sp, r7
 8010d2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010d32:	4770      	bx	lr

08010d34 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS3_EPKSt18_Rb_tree_node_baseRS1_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8010d34:	b590      	push	{r4, r7, lr}
 8010d36:	b087      	sub	sp, #28
 8010d38:	af00      	add	r7, sp, #0
 8010d3a:	60f8      	str	r0, [r7, #12]
 8010d3c:	60b9      	str	r1, [r7, #8]
 8010d3e:	607a      	str	r2, [r7, #4]
 8010d40:	603b      	str	r3, [r7, #0]
      while (__x != 0)
 8010d42:	68bb      	ldr	r3, [r7, #8]
 8010d44:	2b00      	cmp	r3, #0
 8010d46:	d01b      	beq.n	8010d80 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS3_EPKSt18_Rb_tree_node_baseRS1_+0x4c>
	if (!_M_impl._M_key_compare(_S_key(__x), __k))
 8010d48:	68fc      	ldr	r4, [r7, #12]
 8010d4a:	68b8      	ldr	r0, [r7, #8]
 8010d4c:	f7f5 fcc1 	bl	80066d2 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt13_Rb_tree_nodeIS3_E>
 8010d50:	4603      	mov	r3, r0
 8010d52:	683a      	ldr	r2, [r7, #0]
 8010d54:	4619      	mov	r1, r3
 8010d56:	4620      	mov	r0, r4
 8010d58:	f7f4 fb13 	bl	8005382 <_ZNKSt4lessIcEclERKcS2_>
 8010d5c:	4603      	mov	r3, r0
 8010d5e:	f083 0301 	eor.w	r3, r3, #1
 8010d62:	b2db      	uxtb	r3, r3
 8010d64:	2b00      	cmp	r3, #0
 8010d66:	d006      	beq.n	8010d76 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS3_EPKSt18_Rb_tree_node_baseRS1_+0x42>
	  __y = __x, __x = _S_left(__x);
 8010d68:	68bb      	ldr	r3, [r7, #8]
 8010d6a:	607b      	str	r3, [r7, #4]
 8010d6c:	68b8      	ldr	r0, [r7, #8]
 8010d6e:	f000 fa98 	bl	80112a2 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE7_S_leftEPKSt18_Rb_tree_node_base>
 8010d72:	60b8      	str	r0, [r7, #8]
 8010d74:	e7e5      	b.n	8010d42 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS3_EPKSt18_Rb_tree_node_baseRS1_+0xe>
	  __x = _S_right(__x);
 8010d76:	68b8      	ldr	r0, [r7, #8]
 8010d78:	f000 fa9f 	bl	80112ba <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPKSt18_Rb_tree_node_base>
 8010d7c:	60b8      	str	r0, [r7, #8]
      while (__x != 0)
 8010d7e:	e7e0      	b.n	8010d42 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS3_EPKSt18_Rb_tree_node_baseRS1_+0xe>
      return const_iterator(__y);
 8010d80:	f107 0314 	add.w	r3, r7, #20
 8010d84:	6879      	ldr	r1, [r7, #4]
 8010d86:	4618      	mov	r0, r3
 8010d88:	f000 f819 	bl	8010dbe <_ZNSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEEC1EPKSt18_Rb_tree_node_base>
 8010d8c:	697b      	ldr	r3, [r7, #20]
    }
 8010d8e:	4618      	mov	r0, r3
 8010d90:	371c      	adds	r7, #28
 8010d92:	46bd      	mov	sp, r7
 8010d94:	bd90      	pop	{r4, r7, pc}

08010d96 <_ZSteqRKSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEES6_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 8010d96:	b480      	push	{r7}
 8010d98:	b083      	sub	sp, #12
 8010d9a:	af00      	add	r7, sp, #0
 8010d9c:	6078      	str	r0, [r7, #4]
 8010d9e:	6039      	str	r1, [r7, #0]
      { return __x._M_node == __y._M_node; }
 8010da0:	687b      	ldr	r3, [r7, #4]
 8010da2:	681a      	ldr	r2, [r3, #0]
 8010da4:	683b      	ldr	r3, [r7, #0]
 8010da6:	681b      	ldr	r3, [r3, #0]
 8010da8:	429a      	cmp	r2, r3
 8010daa:	bf0c      	ite	eq
 8010dac:	2301      	moveq	r3, #1
 8010dae:	2300      	movne	r3, #0
 8010db0:	b2db      	uxtb	r3, r3
 8010db2:	4618      	mov	r0, r3
 8010db4:	370c      	adds	r7, #12
 8010db6:	46bd      	mov	sp, r7
 8010db8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010dbc:	4770      	bx	lr

08010dbe <_ZNSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEEC1EPKSt18_Rb_tree_node_base>:
      _Rb_tree_const_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 8010dbe:	b480      	push	{r7}
 8010dc0:	b083      	sub	sp, #12
 8010dc2:	af00      	add	r7, sp, #0
 8010dc4:	6078      	str	r0, [r7, #4]
 8010dc6:	6039      	str	r1, [r7, #0]
      : _M_node(__x) { }
 8010dc8:	687b      	ldr	r3, [r7, #4]
 8010dca:	683a      	ldr	r2, [r7, #0]
 8010dcc:	601a      	str	r2, [r3, #0]
 8010dce:	687b      	ldr	r3, [r7, #4]
 8010dd0:	4618      	mov	r0, r3
 8010dd2:	370c      	adds	r7, #12
 8010dd4:	46bd      	mov	sp, r7
 8010dd6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010dda:	4770      	bx	lr

08010ddc <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_beginEv>:
      _M_begin() const _GLIBCXX_NOEXCEPT
 8010ddc:	b480      	push	{r7}
 8010dde:	b083      	sub	sp, #12
 8010de0:	af00      	add	r7, sp, #0
 8010de2:	6078      	str	r0, [r7, #4]
	  (this->_M_impl._M_header._M_parent);
 8010de4:	687b      	ldr	r3, [r7, #4]
 8010de6:	689b      	ldr	r3, [r3, #8]
      }
 8010de8:	4618      	mov	r0, r3
 8010dea:	370c      	adds	r7, #12
 8010dec:	46bd      	mov	sp, r7
 8010dee:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010df2:	4770      	bx	lr

08010df4 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_M_endEv>:
      _M_end() const _GLIBCXX_NOEXCEPT
 8010df4:	b480      	push	{r7}
 8010df6:	b083      	sub	sp, #12
 8010df8:	af00      	add	r7, sp, #0
 8010dfa:	6078      	str	r0, [r7, #4]
      { return &this->_M_impl._M_header; }
 8010dfc:	687b      	ldr	r3, [r7, #4]
 8010dfe:	3304      	adds	r3, #4
 8010e00:	4618      	mov	r0, r3
 8010e02:	370c      	adds	r7, #12
 8010e04:	46bd      	mov	sp, r7
 8010e06:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010e0a:	4770      	bx	lr

08010e0c <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS9_EPKSt18_Rb_tree_node_baseRS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8010e0c:	b590      	push	{r4, r7, lr}
 8010e0e:	b087      	sub	sp, #28
 8010e10:	af00      	add	r7, sp, #0
 8010e12:	60f8      	str	r0, [r7, #12]
 8010e14:	60b9      	str	r1, [r7, #8]
 8010e16:	607a      	str	r2, [r7, #4]
 8010e18:	603b      	str	r3, [r7, #0]
      while (__x != 0)
 8010e1a:	68bb      	ldr	r3, [r7, #8]
 8010e1c:	2b00      	cmp	r3, #0
 8010e1e:	d01b      	beq.n	8010e58 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS9_EPKSt18_Rb_tree_node_baseRS7_+0x4c>
	if (!_M_impl._M_key_compare(_S_key(__x), __k))
 8010e20:	68fc      	ldr	r4, [r7, #12]
 8010e22:	68b8      	ldr	r0, [r7, #8]
 8010e24:	f7f5 fba8 	bl	8006578 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt13_Rb_tree_nodeIS9_E>
 8010e28:	4603      	mov	r3, r0
 8010e2a:	683a      	ldr	r2, [r7, #0]
 8010e2c:	4619      	mov	r1, r3
 8010e2e:	4620      	mov	r0, r4
 8010e30:	f7f4 fc3c 	bl	80056ac <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8010e34:	4603      	mov	r3, r0
 8010e36:	f083 0301 	eor.w	r3, r3, #1
 8010e3a:	b2db      	uxtb	r3, r3
 8010e3c:	2b00      	cmp	r3, #0
 8010e3e:	d006      	beq.n	8010e4e <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS9_EPKSt18_Rb_tree_node_baseRS7_+0x42>
	  __y = __x, __x = _S_left(__x);
 8010e40:	68bb      	ldr	r3, [r7, #8]
 8010e42:	607b      	str	r3, [r7, #4]
 8010e44:	68b8      	ldr	r0, [r7, #8]
 8010e46:	f000 fa44 	bl	80112d2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE7_S_leftEPKSt18_Rb_tree_node_base>
 8010e4a:	60b8      	str	r0, [r7, #8]
 8010e4c:	e7e5      	b.n	8010e1a <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS9_EPKSt18_Rb_tree_node_baseRS7_+0xe>
	  __x = _S_right(__x);
 8010e4e:	68b8      	ldr	r0, [r7, #8]
 8010e50:	f000 fa4b 	bl	80112ea <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_S_rightEPKSt18_Rb_tree_node_base>
 8010e54:	60b8      	str	r0, [r7, #8]
      while (__x != 0)
 8010e56:	e7e0      	b.n	8010e1a <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS9_EPKSt18_Rb_tree_node_baseRS7_+0xe>
      return const_iterator(__y);
 8010e58:	f107 0314 	add.w	r3, r7, #20
 8010e5c:	6879      	ldr	r1, [r7, #4]
 8010e5e:	4618      	mov	r0, r3
 8010e60:	f000 f819 	bl	8010e96 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1EPKSt18_Rb_tree_node_base>
 8010e64:	697b      	ldr	r3, [r7, #20]
    }
 8010e66:	4618      	mov	r0, r3
 8010e68:	371c      	adds	r7, #28
 8010e6a:	46bd      	mov	sp, r7
 8010e6c:	bd90      	pop	{r4, r7, pc}

08010e6e <_ZSteqRKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEESC_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 8010e6e:	b480      	push	{r7}
 8010e70:	b083      	sub	sp, #12
 8010e72:	af00      	add	r7, sp, #0
 8010e74:	6078      	str	r0, [r7, #4]
 8010e76:	6039      	str	r1, [r7, #0]
      { return __x._M_node == __y._M_node; }
 8010e78:	687b      	ldr	r3, [r7, #4]
 8010e7a:	681a      	ldr	r2, [r3, #0]
 8010e7c:	683b      	ldr	r3, [r7, #0]
 8010e7e:	681b      	ldr	r3, [r3, #0]
 8010e80:	429a      	cmp	r2, r3
 8010e82:	bf0c      	ite	eq
 8010e84:	2301      	moveq	r3, #1
 8010e86:	2300      	movne	r3, #0
 8010e88:	b2db      	uxtb	r3, r3
 8010e8a:	4618      	mov	r0, r3
 8010e8c:	370c      	adds	r7, #12
 8010e8e:	46bd      	mov	sp, r7
 8010e90:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010e94:	4770      	bx	lr

08010e96 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1EPKSt18_Rb_tree_node_base>:
      _Rb_tree_const_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 8010e96:	b480      	push	{r7}
 8010e98:	b083      	sub	sp, #12
 8010e9a:	af00      	add	r7, sp, #0
 8010e9c:	6078      	str	r0, [r7, #4]
 8010e9e:	6039      	str	r1, [r7, #0]
      : _M_node(__x) { }
 8010ea0:	687b      	ldr	r3, [r7, #4]
 8010ea2:	683a      	ldr	r2, [r7, #0]
 8010ea4:	601a      	str	r2, [r3, #0]
 8010ea6:	687b      	ldr	r3, [r7, #4]
 8010ea8:	4618      	mov	r0, r3
 8010eaa:	370c      	adds	r7, #12
 8010eac:	46bd      	mov	sp, r7
 8010eae:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010eb2:	4770      	bx	lr

08010eb4 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8010eb4:	b480      	push	{r7}
 8010eb6:	b083      	sub	sp, #12
 8010eb8:	af00      	add	r7, sp, #0
 8010eba:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8010ebc:	687b      	ldr	r3, [r7, #4]
 8010ebe:	4618      	mov	r0, r3
 8010ec0:	370c      	adds	r7, #12
 8010ec2:	46bd      	mov	sp, r7
 8010ec4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010ec8:	4770      	bx	lr

08010eca <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8010eca:	b480      	push	{r7}
 8010ecc:	b083      	sub	sp, #12
 8010ece:	af00      	add	r7, sp, #0
 8010ed0:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8010ed2:	687b      	ldr	r3, [r7, #4]
 8010ed4:	4618      	mov	r0, r3
 8010ed6:	370c      	adds	r7, #12
 8010ed8:	46bd      	mov	sp, r7
 8010eda:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010ede:	4770      	bx	lr

08010ee0 <_ZSt28__variant_construct_by_indexILj0ESt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEJS6_EEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 8010ee0:	b590      	push	{r4, r7, lr}
 8010ee2:	b085      	sub	sp, #20
 8010ee4:	af00      	add	r7, sp, #0
 8010ee6:	6078      	str	r0, [r7, #4]
 8010ee8:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 8010eea:	687b      	ldr	r3, [r7, #4]
 8010eec:	2200      	movs	r2, #0
 8010eee:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 8010ef0:	6878      	ldr	r0, [r7, #4]
 8010ef2:	f7ff f8a2 	bl	801003a <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 8010ef6:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 8010ef8:	6838      	ldr	r0, [r7, #0]
 8010efa:	f7f7 fc26 	bl	800874a <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 8010efe:	4604      	mov	r4, r0
      ::new ((void*)std::addressof(__storage))
 8010f00:	68f8      	ldr	r0, [r7, #12]
 8010f02:	f7f7 fdef 	bl	8008ae4 <_ZSt9addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_>
 8010f06:	4603      	mov	r3, r0
 8010f08:	4619      	mov	r1, r3
 8010f0a:	2018      	movs	r0, #24
 8010f0c:	f7f0 f8a5 	bl	800105a <_ZnwjPv>
 8010f10:	4603      	mov	r3, r0
 8010f12:	4621      	mov	r1, r4
 8010f14:	4618      	mov	r0, r3
 8010f16:	f011 ff0e 	bl	8022d36 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_>
    }
 8010f1a:	bf00      	nop
 8010f1c:	3714      	adds	r7, #20
 8010f1e:	46bd      	mov	sp, r7
 8010f20:	bd90      	pop	{r4, r7, pc}

08010f22 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifbEEEEOT_RNSt16remove_referenceIS5_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8010f22:	b480      	push	{r7}
 8010f24:	b083      	sub	sp, #12
 8010f26:	af00      	add	r7, sp, #0
 8010f28:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8010f2a:	687b      	ldr	r3, [r7, #4]
 8010f2c:	4618      	mov	r0, r3
 8010f2e:	370c      	adds	r7, #12
 8010f30:	46bd      	mov	sp, r7
 8010f32:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010f36:	4770      	bx	lr

08010f38 <_ZSt28__variant_construct_by_indexILj1ESt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEJiEEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 8010f38:	b590      	push	{r4, r7, lr}
 8010f3a:	b085      	sub	sp, #20
 8010f3c:	af00      	add	r7, sp, #0
 8010f3e:	6078      	str	r0, [r7, #4]
 8010f40:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 8010f42:	687b      	ldr	r3, [r7, #4]
 8010f44:	2201      	movs	r2, #1
 8010f46:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 8010f48:	6878      	ldr	r0, [r7, #4]
 8010f4a:	f7ff f8df 	bl	801010c <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 8010f4e:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 8010f50:	6838      	ldr	r0, [r7, #0]
 8010f52:	f7f7 fb5f 	bl	8008614 <_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE>
 8010f56:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 8010f58:	681c      	ldr	r4, [r3, #0]
 8010f5a:	68f8      	ldr	r0, [r7, #12]
 8010f5c:	f7f7 fd9e 	bl	8008a9c <_ZSt9addressofIiEPT_RS0_>
 8010f60:	4603      	mov	r3, r0
 8010f62:	4619      	mov	r1, r3
 8010f64:	2004      	movs	r0, #4
 8010f66:	f7f0 f878 	bl	800105a <_ZnwjPv>
 8010f6a:	4603      	mov	r3, r0
 8010f6c:	601c      	str	r4, [r3, #0]
    }
 8010f6e:	bf00      	nop
 8010f70:	3714      	adds	r7, #20
 8010f72:	46bd      	mov	sp, r7
 8010f74:	bd90      	pop	{r4, r7, pc}

08010f76 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfbEEEEOT_RNSt16remove_referenceIS5_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8010f76:	b480      	push	{r7}
 8010f78:	b083      	sub	sp, #12
 8010f7a:	af00      	add	r7, sp, #0
 8010f7c:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8010f7e:	687b      	ldr	r3, [r7, #4]
 8010f80:	4618      	mov	r0, r3
 8010f82:	370c      	adds	r7, #12
 8010f84:	46bd      	mov	sp, r7
 8010f86:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010f8a:	4770      	bx	lr

08010f8c <_ZSt28__variant_construct_by_indexILj2ESt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEJfEEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 8010f8c:	b590      	push	{r4, r7, lr}
 8010f8e:	b085      	sub	sp, #20
 8010f90:	af00      	add	r7, sp, #0
 8010f92:	6078      	str	r0, [r7, #4]
 8010f94:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 8010f96:	687b      	ldr	r3, [r7, #4]
 8010f98:	2202      	movs	r2, #2
 8010f9a:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 8010f9c:	6878      	ldr	r0, [r7, #4]
 8010f9e:	f7ff f931 	bl	8010204 <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 8010fa2:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 8010fa4:	6838      	ldr	r0, [r7, #0]
 8010fa6:	f7f7 fb5f 	bl	8008668 <_ZSt7forwardIfEOT_RNSt16remove_referenceIS0_E4typeE>
 8010faa:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 8010fac:	681c      	ldr	r4, [r3, #0]
 8010fae:	68f8      	ldr	r0, [r7, #12]
 8010fb0:	f7f7 fd80 	bl	8008ab4 <_ZSt9addressofIfEPT_RS0_>
 8010fb4:	4603      	mov	r3, r0
 8010fb6:	4619      	mov	r1, r3
 8010fb8:	2004      	movs	r0, #4
 8010fba:	f7f0 f84e 	bl	800105a <_ZnwjPv>
 8010fbe:	4603      	mov	r3, r0
 8010fc0:	601c      	str	r4, [r3, #0]
    }
 8010fc2:	bf00      	nop
 8010fc4:	3714      	adds	r7, #20
 8010fc6:	46bd      	mov	sp, r7
 8010fc8:	bd90      	pop	{r4, r7, pc}

08010fca <_ZNSt8__detail9__variant15_Variadic_unionIJifbEEC1Ev>:
      constexpr _Variadic_union() : _M_rest() { }
 8010fca:	b580      	push	{r7, lr}
 8010fcc:	b082      	sub	sp, #8
 8010fce:	af00      	add	r7, sp, #0
 8010fd0:	6078      	str	r0, [r7, #4]
 8010fd2:	687b      	ldr	r3, [r7, #4]
 8010fd4:	4618      	mov	r0, r3
 8010fd6:	f000 f994 	bl	8011302 <_ZNSt8__detail9__variant15_Variadic_unionIJfbEEC1Ev>
 8010fda:	687b      	ldr	r3, [r7, #4]
 8010fdc:	4618      	mov	r0, r3
 8010fde:	3708      	adds	r7, #8
 8010fe0:	46bd      	mov	sp, r7
 8010fe2:	bd80      	pop	{r7, pc}

08010fe4 <_ZSt7forwardIRKNSt8__detail9__variant15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISC_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8010fe4:	b480      	push	{r7}
 8010fe6:	b083      	sub	sp, #12
 8010fe8:	af00      	add	r7, sp, #0
 8010fea:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8010fec:	687b      	ldr	r3, [r7, #4]
 8010fee:	4618      	mov	r0, r3
 8010ff0:	370c      	adds	r7, #12
 8010ff2:	46bd      	mov	sp, r7
 8010ff4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010ff8:	4770      	bx	lr

08010ffa <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8010ffa:	b480      	push	{r7}
 8010ffc:	b083      	sub	sp, #12
 8010ffe:	af00      	add	r7, sp, #0
 8011000:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8011002:	687b      	ldr	r3, [r7, #4]
 8011004:	4618      	mov	r0, r3
 8011006:	370c      	adds	r7, #12
 8011008:	46bd      	mov	sp, r7
 801100a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801100e:	4770      	bx	lr

08011010 <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8011010:	b480      	push	{r7}
 8011012:	b083      	sub	sp, #12
 8011014:	af00      	add	r7, sp, #0
 8011016:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8011018:	687b      	ldr	r3, [r7, #4]
 801101a:	4618      	mov	r0, r3
 801101c:	370c      	adds	r7, #12
 801101e:	46bd      	mov	sp, r7
 8011020:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011024:	4770      	bx	lr

08011026 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISC_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8011026:	b480      	push	{r7}
 8011028:	b083      	sub	sp, #12
 801102a:	af00      	add	r7, sp, #0
 801102c:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801102e:	687b      	ldr	r3, [r7, #4]
 8011030:	4618      	mov	r0, r3
 8011032:	370c      	adds	r7, #12
 8011034:	46bd      	mov	sp, r7
 8011036:	f85d 7b04 	ldr.w	r7, [sp], #4
 801103a:	4770      	bx	lr

0801103c <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_JRKS8_EENSt15__invoke_resultISI_JDpT0_EE4typeESJ_DpOSO_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 801103c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801103e:	b083      	sub	sp, #12
 8011040:	af00      	add	r7, sp, #0
 8011042:	6078      	str	r0, [r7, #4]
 8011044:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8011046:	6878      	ldr	r0, [r7, #4]
 8011048:	f000 f880 	bl	801114c <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 801104c:	4604      	mov	r4, r0
 801104e:	6838      	ldr	r0, [r7, #0]
 8011050:	f7f2 ffa4 	bl	8003f9c <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 8011054:	4603      	mov	r3, r0
 8011056:	461a      	mov	r2, r3
 8011058:	4621      	mov	r1, r4
 801105a:	4628      	mov	r0, r5
 801105c:	f000 f95e 	bl	801131c <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS9_ifbEEERKSB_EEvOT0_OT1_EUlOT_E_JRKS9_EESJ_St14__invoke_otherSG_DpOT1_>
					std::forward<_Args>(__args)...);
 8011060:	4633      	mov	r3, r6
    }
 8011062:	4618      	mov	r0, r3
 8011064:	370c      	adds	r7, #12
 8011066:	46bd      	mov	sp, r7
 8011068:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801106a <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJifbEEEEOT_RNSt16remove_referenceIS6_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801106a:	b480      	push	{r7}
 801106c:	b083      	sub	sp, #12
 801106e:	af00      	add	r7, sp, #0
 8011070:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8011072:	687b      	ldr	r3, [r7, #4]
 8011074:	4618      	mov	r0, r3
 8011076:	370c      	adds	r7, #12
 8011078:	46bd      	mov	sp, r7
 801107a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801107e:	4770      	bx	lr

08011080 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_JRKiEENSt15__invoke_resultISI_JDpT0_EE4typeESJ_DpOSO_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8011080:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011082:	b083      	sub	sp, #12
 8011084:	af00      	add	r7, sp, #0
 8011086:	6078      	str	r0, [r7, #4]
 8011088:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 801108a:	6878      	ldr	r0, [r7, #4]
 801108c:	f000 f85e 	bl	801114c <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 8011090:	4604      	mov	r4, r0
 8011092:	6838      	ldr	r0, [r7, #0]
 8011094:	f7f2 feda 	bl	8003e4c <_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE>
 8011098:	4603      	mov	r3, r0
 801109a:	461a      	mov	r2, r3
 801109c:	4621      	mov	r1, r4
 801109e:	4628      	mov	r0, r5
 80110a0:	f000 f953 	bl	801134a <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS9_ifbEEERKSB_EEvOT0_OT1_EUlOT_E_JRKiEESJ_St14__invoke_otherSG_DpOT1_>
					std::forward<_Args>(__args)...);
 80110a4:	4633      	mov	r3, r6
    }
 80110a6:	4618      	mov	r0, r3
 80110a8:	370c      	adds	r7, #12
 80110aa:	46bd      	mov	sp, r7
 80110ac:	bdf0      	pop	{r4, r5, r6, r7, pc}

080110ae <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJfbEEEEOT_RNSt16remove_referenceIS6_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80110ae:	b480      	push	{r7}
 80110b0:	b083      	sub	sp, #12
 80110b2:	af00      	add	r7, sp, #0
 80110b4:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80110b6:	687b      	ldr	r3, [r7, #4]
 80110b8:	4618      	mov	r0, r3
 80110ba:	370c      	adds	r7, #12
 80110bc:	46bd      	mov	sp, r7
 80110be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80110c2:	4770      	bx	lr

080110c4 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_JRKfEENSt15__invoke_resultISI_JDpT0_EE4typeESJ_DpOSO_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 80110c4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80110c6:	b083      	sub	sp, #12
 80110c8:	af00      	add	r7, sp, #0
 80110ca:	6078      	str	r0, [r7, #4]
 80110cc:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 80110ce:	6878      	ldr	r0, [r7, #4]
 80110d0:	f000 f83c 	bl	801114c <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 80110d4:	4604      	mov	r4, r0
 80110d6:	6838      	ldr	r0, [r7, #0]
 80110d8:	f7f2 feec 	bl	8003eb4 <_ZSt7forwardIRKfEOT_RNSt16remove_referenceIS2_E4typeE>
 80110dc:	4603      	mov	r3, r0
 80110de:	461a      	mov	r2, r3
 80110e0:	4621      	mov	r1, r4
 80110e2:	4628      	mov	r0, r5
 80110e4:	f000 f948 	bl	8011378 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS9_ifbEEERKSB_EEvOT0_OT1_EUlOT_E_JRKfEESJ_St14__invoke_otherSG_DpOT1_>
					std::forward<_Args>(__args)...);
 80110e8:	4633      	mov	r3, r6
    }
 80110ea:	4618      	mov	r0, r3
 80110ec:	370c      	adds	r7, #12
 80110ee:	46bd      	mov	sp, r7
 80110f0:	bdf0      	pop	{r4, r5, r6, r7, pc}

080110f2 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJbEEEEOT_RNSt16remove_referenceIS6_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80110f2:	b480      	push	{r7}
 80110f4:	b083      	sub	sp, #12
 80110f6:	af00      	add	r7, sp, #0
 80110f8:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80110fa:	687b      	ldr	r3, [r7, #4]
 80110fc:	4618      	mov	r0, r3
 80110fe:	370c      	adds	r7, #12
 8011100:	46bd      	mov	sp, r7
 8011102:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011106:	4770      	bx	lr

08011108 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_JRKbEENSt15__invoke_resultISI_JDpT0_EE4typeESJ_DpOSO_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8011108:	b5f0      	push	{r4, r5, r6, r7, lr}
 801110a:	b083      	sub	sp, #12
 801110c:	af00      	add	r7, sp, #0
 801110e:	6078      	str	r0, [r7, #4]
 8011110:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8011112:	6878      	ldr	r0, [r7, #4]
 8011114:	f000 f81a 	bl	801114c <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 8011118:	4604      	mov	r4, r0
 801111a:	6838      	ldr	r0, [r7, #0]
 801111c:	f7f2 fefe 	bl	8003f1c <_ZSt7forwardIRKbEOT_RNSt16remove_referenceIS2_E4typeE>
 8011120:	4603      	mov	r3, r0
 8011122:	461a      	mov	r2, r3
 8011124:	4621      	mov	r1, r4
 8011126:	4628      	mov	r0, r5
 8011128:	f000 f93d 	bl	80113a6 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS9_ifbEEERKSB_EEvOT0_OT1_EUlOT_E_JRKbEESJ_St14__invoke_otherSG_DpOT1_>
					std::forward<_Args>(__args)...);
 801112c:	4633      	mov	r3, r6
    }
 801112e:	4618      	mov	r0, r3
 8011130:	370c      	adds	r7, #12
 8011132:	46bd      	mov	sp, r7
 8011134:	bdf0      	pop	{r4, r5, r6, r7, pc}

08011136 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS9_ifbEEERKSB_EEvOT0_OT1_EUlOT_E_RKSt7variantIJS9_ifbEEEJEE9_M_accessEv>:
      _M_access() const
 8011136:	b480      	push	{r7}
 8011138:	b083      	sub	sp, #12
 801113a:	af00      	add	r7, sp, #0
 801113c:	6078      	str	r0, [r7, #4]
      { return _M_data; }
 801113e:	687b      	ldr	r3, [r7, #4]
 8011140:	4618      	mov	r0, r3
 8011142:	370c      	adds	r7, #12
 8011144:	46bd      	mov	sp, r7
 8011146:	f85d 7b04 	ldr.w	r7, [sp], #4
 801114a:	4770      	bx	lr

0801114c <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801114c:	b480      	push	{r7}
 801114e:	b083      	sub	sp, #12
 8011150:	af00      	add	r7, sp, #0
 8011152:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8011154:	687b      	ldr	r3, [r7, #4]
 8011156:	4618      	mov	r0, r3
 8011158:	370c      	adds	r7, #12
 801115a:	46bd      	mov	sp, r7
 801115c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011160:	4770      	bx	lr

08011162 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8011162:	b480      	push	{r7}
 8011164:	b083      	sub	sp, #12
 8011166:	af00      	add	r7, sp, #0
 8011168:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801116a:	687b      	ldr	r3, [r7, #4]
 801116c:	4618      	mov	r0, r3
 801116e:	370c      	adds	r7, #12
 8011170:	46bd      	mov	sp, r7
 8011172:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011176:	4770      	bx	lr

08011178 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRS8_EENSt15__invoke_resultISA_JDpT0_EE4typeESB_DpOSF_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8011178:	b5f0      	push	{r4, r5, r6, r7, lr}
 801117a:	b083      	sub	sp, #12
 801117c:	af00      	add	r7, sp, #0
 801117e:	6078      	str	r0, [r7, #4]
 8011180:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8011182:	6878      	ldr	r0, [r7, #4]
 8011184:	f000 f86a 	bl	801125c <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8011188:	4604      	mov	r4, r0
 801118a:	6838      	ldr	r0, [r7, #0]
 801118c:	f7f4 fd11 	bl	8005bb2 <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 8011190:	4603      	mov	r3, r0
 8011192:	461a      	mov	r2, r3
 8011194:	4621      	mov	r1, r4
 8011196:	4628      	mov	r0, r5
 8011198:	f000 f91c 	bl	80113d4 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRS9_EESB_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 801119c:	4633      	mov	r3, r6
    }
 801119e:	4618      	mov	r0, r3
 80111a0:	370c      	adds	r7, #12
 80111a2:	46bd      	mov	sp, r7
 80111a4:	bdf0      	pop	{r4, r5, r6, r7, pc}

080111a6 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRiEENSt15__invoke_resultISA_JDpT0_EE4typeESB_DpOSF_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 80111a6:	b5f0      	push	{r4, r5, r6, r7, lr}
 80111a8:	b083      	sub	sp, #12
 80111aa:	af00      	add	r7, sp, #0
 80111ac:	6078      	str	r0, [r7, #4]
 80111ae:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 80111b0:	6878      	ldr	r0, [r7, #4]
 80111b2:	f000 f853 	bl	801125c <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 80111b6:	4604      	mov	r4, r0
 80111b8:	6838      	ldr	r0, [r7, #0]
 80111ba:	f7f4 fc88 	bl	8005ace <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 80111be:	4603      	mov	r3, r0
 80111c0:	461a      	mov	r2, r3
 80111c2:	4621      	mov	r1, r4
 80111c4:	4628      	mov	r0, r5
 80111c6:	f000 f91c 	bl	8011402 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRiEESB_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 80111ca:	4633      	mov	r3, r6
    }
 80111cc:	4618      	mov	r0, r3
 80111ce:	370c      	adds	r7, #12
 80111d0:	46bd      	mov	sp, r7
 80111d2:	bdf0      	pop	{r4, r5, r6, r7, pc}

080111d4 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRfEENSt15__invoke_resultISA_JDpT0_EE4typeESB_DpOSF_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 80111d4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80111d6:	b083      	sub	sp, #12
 80111d8:	af00      	add	r7, sp, #0
 80111da:	6078      	str	r0, [r7, #4]
 80111dc:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 80111de:	6878      	ldr	r0, [r7, #4]
 80111e0:	f000 f83c 	bl	801125c <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 80111e4:	4604      	mov	r4, r0
 80111e6:	6838      	ldr	r0, [r7, #0]
 80111e8:	f7f4 fc93 	bl	8005b12 <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 80111ec:	4603      	mov	r3, r0
 80111ee:	461a      	mov	r2, r3
 80111f0:	4621      	mov	r1, r4
 80111f2:	4628      	mov	r0, r5
 80111f4:	f000 f91c 	bl	8011430 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRfEESB_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 80111f8:	4633      	mov	r3, r6
    }
 80111fa:	4618      	mov	r0, r3
 80111fc:	370c      	adds	r7, #12
 80111fe:	46bd      	mov	sp, r7
 8011200:	bdf0      	pop	{r4, r5, r6, r7, pc}

08011202 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbEEEEOT_RNSt16remove_referenceIS5_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8011202:	b480      	push	{r7}
 8011204:	b083      	sub	sp, #12
 8011206:	af00      	add	r7, sp, #0
 8011208:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801120a:	687b      	ldr	r3, [r7, #4]
 801120c:	4618      	mov	r0, r3
 801120e:	370c      	adds	r7, #12
 8011210:	46bd      	mov	sp, r7
 8011212:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011216:	4770      	bx	lr

08011218 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRbEENSt15__invoke_resultISA_JDpT0_EE4typeESB_DpOSF_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8011218:	b5f0      	push	{r4, r5, r6, r7, lr}
 801121a:	b083      	sub	sp, #12
 801121c:	af00      	add	r7, sp, #0
 801121e:	6078      	str	r0, [r7, #4]
 8011220:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8011222:	6878      	ldr	r0, [r7, #4]
 8011224:	f000 f81a 	bl	801125c <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8011228:	4604      	mov	r4, r0
 801122a:	6838      	ldr	r0, [r7, #0]
 801122c:	f7f4 fc93 	bl	8005b56 <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
 8011230:	4603      	mov	r3, r0
 8011232:	461a      	mov	r2, r3
 8011234:	4621      	mov	r1, r4
 8011236:	4628      	mov	r0, r5
 8011238:	f000 f911 	bl	801145e <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRbEESB_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 801123c:	4633      	mov	r3, r6
    }
 801123e:	4618      	mov	r0, r3
 8011240:	370c      	adds	r7, #12
 8011242:	46bd      	mov	sp, r7
 8011244:	bdf0      	pop	{r4, r5, r6, r7, pc}

08011246 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJS9_ifbEEEJEE9_M_accessEv>:
      _M_access() const
 8011246:	b480      	push	{r7}
 8011248:	b083      	sub	sp, #12
 801124a:	af00      	add	r7, sp, #0
 801124c:	6078      	str	r0, [r7, #4]
      { return _M_data; }
 801124e:	687b      	ldr	r3, [r7, #4]
 8011250:	4618      	mov	r0, r3
 8011252:	370c      	adds	r7, #12
 8011254:	46bd      	mov	sp, r7
 8011256:	f85d 7b04 	ldr.w	r7, [sp], #4
 801125a:	4770      	bx	lr

0801125c <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801125c:	b480      	push	{r7}
 801125e:	b083      	sub	sp, #12
 8011260:	af00      	add	r7, sp, #0
 8011262:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8011264:	687b      	ldr	r3, [r7, #4]
 8011266:	4618      	mov	r0, r3
 8011268:	370c      	adds	r7, #12
 801126a:	46bd      	mov	sp, r7
 801126c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011270:	4770      	bx	lr

08011272 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE7_S_leftEPKSt18_Rb_tree_node_base>:
      _S_left(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
 8011272:	b480      	push	{r7}
 8011274:	b083      	sub	sp, #12
 8011276:	af00      	add	r7, sp, #0
 8011278:	6078      	str	r0, [r7, #4]
      { return static_cast<_Const_Link_type>(__x->_M_left); }
 801127a:	687b      	ldr	r3, [r7, #4]
 801127c:	689b      	ldr	r3, [r3, #8]
 801127e:	4618      	mov	r0, r3
 8011280:	370c      	adds	r7, #12
 8011282:	46bd      	mov	sp, r7
 8011284:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011288:	4770      	bx	lr

0801128a <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPKSt18_Rb_tree_node_base>:
      _S_right(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
 801128a:	b480      	push	{r7}
 801128c:	b083      	sub	sp, #12
 801128e:	af00      	add	r7, sp, #0
 8011290:	6078      	str	r0, [r7, #4]
      { return static_cast<_Const_Link_type>(__x->_M_right); }
 8011292:	687b      	ldr	r3, [r7, #4]
 8011294:	68db      	ldr	r3, [r3, #12]
 8011296:	4618      	mov	r0, r3
 8011298:	370c      	adds	r7, #12
 801129a:	46bd      	mov	sp, r7
 801129c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80112a0:	4770      	bx	lr

080112a2 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE7_S_leftEPKSt18_Rb_tree_node_base>:
      _S_left(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
 80112a2:	b480      	push	{r7}
 80112a4:	b083      	sub	sp, #12
 80112a6:	af00      	add	r7, sp, #0
 80112a8:	6078      	str	r0, [r7, #4]
      { return static_cast<_Const_Link_type>(__x->_M_left); }
 80112aa:	687b      	ldr	r3, [r7, #4]
 80112ac:	689b      	ldr	r3, [r3, #8]
 80112ae:	4618      	mov	r0, r3
 80112b0:	370c      	adds	r7, #12
 80112b2:	46bd      	mov	sp, r7
 80112b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80112b8:	4770      	bx	lr

080112ba <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPKSt18_Rb_tree_node_base>:
      _S_right(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
 80112ba:	b480      	push	{r7}
 80112bc:	b083      	sub	sp, #12
 80112be:	af00      	add	r7, sp, #0
 80112c0:	6078      	str	r0, [r7, #4]
      { return static_cast<_Const_Link_type>(__x->_M_right); }
 80112c2:	687b      	ldr	r3, [r7, #4]
 80112c4:	68db      	ldr	r3, [r3, #12]
 80112c6:	4618      	mov	r0, r3
 80112c8:	370c      	adds	r7, #12
 80112ca:	46bd      	mov	sp, r7
 80112cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80112d0:	4770      	bx	lr

080112d2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE7_S_leftEPKSt18_Rb_tree_node_base>:
      _S_left(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
 80112d2:	b480      	push	{r7}
 80112d4:	b083      	sub	sp, #12
 80112d6:	af00      	add	r7, sp, #0
 80112d8:	6078      	str	r0, [r7, #4]
      { return static_cast<_Const_Link_type>(__x->_M_left); }
 80112da:	687b      	ldr	r3, [r7, #4]
 80112dc:	689b      	ldr	r3, [r3, #8]
 80112de:	4618      	mov	r0, r3
 80112e0:	370c      	adds	r7, #12
 80112e2:	46bd      	mov	sp, r7
 80112e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80112e8:	4770      	bx	lr

080112ea <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_S_rightEPKSt18_Rb_tree_node_base>:
      _S_right(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
 80112ea:	b480      	push	{r7}
 80112ec:	b083      	sub	sp, #12
 80112ee:	af00      	add	r7, sp, #0
 80112f0:	6078      	str	r0, [r7, #4]
      { return static_cast<_Const_Link_type>(__x->_M_right); }
 80112f2:	687b      	ldr	r3, [r7, #4]
 80112f4:	68db      	ldr	r3, [r3, #12]
 80112f6:	4618      	mov	r0, r3
 80112f8:	370c      	adds	r7, #12
 80112fa:	46bd      	mov	sp, r7
 80112fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011300:	4770      	bx	lr

08011302 <_ZNSt8__detail9__variant15_Variadic_unionIJfbEEC1Ev>:
      constexpr _Variadic_union() : _M_rest() { }
 8011302:	b580      	push	{r7, lr}
 8011304:	b082      	sub	sp, #8
 8011306:	af00      	add	r7, sp, #0
 8011308:	6078      	str	r0, [r7, #4]
 801130a:	687b      	ldr	r3, [r7, #4]
 801130c:	4618      	mov	r0, r3
 801130e:	f000 f8bd 	bl	801148c <_ZNSt8__detail9__variant15_Variadic_unionIJbEEC1Ev>
 8011312:	687b      	ldr	r3, [r7, #4]
 8011314:	4618      	mov	r0, r3
 8011316:	3708      	adds	r7, #8
 8011318:	46bd      	mov	sp, r7
 801131a:	bd80      	pop	{r7, pc}

0801131c <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS9_ifbEEERKSB_EEvOT0_OT1_EUlOT_E_JRKS9_EESJ_St14__invoke_otherSG_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 801131c:	b5b0      	push	{r4, r5, r7, lr}
 801131e:	b084      	sub	sp, #16
 8011320:	af00      	add	r7, sp, #0
 8011322:	7338      	strb	r0, [r7, #12]
 8011324:	60b9      	str	r1, [r7, #8]
 8011326:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8011328:	68b8      	ldr	r0, [r7, #8]
 801132a:	f7ff ff0f 	bl	801114c <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 801132e:	4604      	mov	r4, r0
 8011330:	6878      	ldr	r0, [r7, #4]
 8011332:	f7f2 fe33 	bl	8003f9c <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 8011336:	4603      	mov	r3, r0
 8011338:	4619      	mov	r1, r3
 801133a:	4620      	mov	r0, r4
 801133c:	f000 f8b1 	bl	80114a2 <_ZZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS7_ifbEEERKS9_EEvOT0_OT1_ENUlOT_E_clIRKS7_EENS0_16__variant_cookieESI_>
 8011340:	462b      	mov	r3, r5
 8011342:	4618      	mov	r0, r3
 8011344:	3710      	adds	r7, #16
 8011346:	46bd      	mov	sp, r7
 8011348:	bdb0      	pop	{r4, r5, r7, pc}

0801134a <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS9_ifbEEERKSB_EEvOT0_OT1_EUlOT_E_JRKiEESJ_St14__invoke_otherSG_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 801134a:	b5b0      	push	{r4, r5, r7, lr}
 801134c:	b084      	sub	sp, #16
 801134e:	af00      	add	r7, sp, #0
 8011350:	7338      	strb	r0, [r7, #12]
 8011352:	60b9      	str	r1, [r7, #8]
 8011354:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8011356:	68b8      	ldr	r0, [r7, #8]
 8011358:	f7ff fef8 	bl	801114c <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 801135c:	4604      	mov	r4, r0
 801135e:	6878      	ldr	r0, [r7, #4]
 8011360:	f7f2 fd74 	bl	8003e4c <_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE>
 8011364:	4603      	mov	r3, r0
 8011366:	4619      	mov	r1, r3
 8011368:	4620      	mov	r0, r4
 801136a:	f000 f8b2 	bl	80114d2 <_ZZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS7_ifbEEERKS9_EEvOT0_OT1_ENUlOT_E_clIRKiEENS0_16__variant_cookieESI_>
 801136e:	462b      	mov	r3, r5
 8011370:	4618      	mov	r0, r3
 8011372:	3710      	adds	r7, #16
 8011374:	46bd      	mov	sp, r7
 8011376:	bdb0      	pop	{r4, r5, r7, pc}

08011378 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS9_ifbEEERKSB_EEvOT0_OT1_EUlOT_E_JRKfEESJ_St14__invoke_otherSG_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8011378:	b5b0      	push	{r4, r5, r7, lr}
 801137a:	b084      	sub	sp, #16
 801137c:	af00      	add	r7, sp, #0
 801137e:	7338      	strb	r0, [r7, #12]
 8011380:	60b9      	str	r1, [r7, #8]
 8011382:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8011384:	68b8      	ldr	r0, [r7, #8]
 8011386:	f7ff fee1 	bl	801114c <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 801138a:	4604      	mov	r4, r0
 801138c:	6878      	ldr	r0, [r7, #4]
 801138e:	f7f2 fd91 	bl	8003eb4 <_ZSt7forwardIRKfEOT_RNSt16remove_referenceIS2_E4typeE>
 8011392:	4603      	mov	r3, r0
 8011394:	4619      	mov	r1, r3
 8011396:	4620      	mov	r0, r4
 8011398:	f000 f8b3 	bl	8011502 <_ZZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS7_ifbEEERKS9_EEvOT0_OT1_ENUlOT_E_clIRKfEENS0_16__variant_cookieESI_>
 801139c:	462b      	mov	r3, r5
 801139e:	4618      	mov	r0, r3
 80113a0:	3710      	adds	r7, #16
 80113a2:	46bd      	mov	sp, r7
 80113a4:	bdb0      	pop	{r4, r5, r7, pc}

080113a6 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS9_ifbEEERKSB_EEvOT0_OT1_EUlOT_E_JRKbEESJ_St14__invoke_otherSG_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 80113a6:	b5b0      	push	{r4, r5, r7, lr}
 80113a8:	b084      	sub	sp, #16
 80113aa:	af00      	add	r7, sp, #0
 80113ac:	7338      	strb	r0, [r7, #12]
 80113ae:	60b9      	str	r1, [r7, #8]
 80113b0:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 80113b2:	68b8      	ldr	r0, [r7, #8]
 80113b4:	f7ff feca 	bl	801114c <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 80113b8:	4604      	mov	r4, r0
 80113ba:	6878      	ldr	r0, [r7, #4]
 80113bc:	f7f2 fdae 	bl	8003f1c <_ZSt7forwardIRKbEOT_RNSt16remove_referenceIS2_E4typeE>
 80113c0:	4603      	mov	r3, r0
 80113c2:	4619      	mov	r1, r3
 80113c4:	4620      	mov	r0, r4
 80113c6:	f000 f8b4 	bl	8011532 <_ZZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS7_ifbEEERKS9_EEvOT0_OT1_ENUlOT_E_clIRKbEENS0_16__variant_cookieESI_>
 80113ca:	462b      	mov	r3, r5
 80113cc:	4618      	mov	r0, r3
 80113ce:	3710      	adds	r7, #16
 80113d0:	46bd      	mov	sp, r7
 80113d2:	bdb0      	pop	{r4, r5, r7, pc}

080113d4 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRS9_EESB_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 80113d4:	b5b0      	push	{r4, r5, r7, lr}
 80113d6:	b084      	sub	sp, #16
 80113d8:	af00      	add	r7, sp, #0
 80113da:	7338      	strb	r0, [r7, #12]
 80113dc:	60b9      	str	r1, [r7, #8]
 80113de:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 80113e0:	68b8      	ldr	r0, [r7, #8]
 80113e2:	f7ff ff3b 	bl	801125c <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 80113e6:	4604      	mov	r4, r0
 80113e8:	6878      	ldr	r0, [r7, #4]
 80113ea:	f7f4 fbe2 	bl	8005bb2 <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 80113ee:	4603      	mov	r3, r0
 80113f0:	4619      	mov	r1, r3
 80113f2:	4620      	mov	r0, r4
 80113f4:	f000 f8b5 	bl	8011562 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvENUlOT_E_clIRS7_EENS0_16__variant_cookieESA_>
 80113f8:	462b      	mov	r3, r5
 80113fa:	4618      	mov	r0, r3
 80113fc:	3710      	adds	r7, #16
 80113fe:	46bd      	mov	sp, r7
 8011400:	bdb0      	pop	{r4, r5, r7, pc}

08011402 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRiEESB_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8011402:	b5b0      	push	{r4, r5, r7, lr}
 8011404:	b084      	sub	sp, #16
 8011406:	af00      	add	r7, sp, #0
 8011408:	7338      	strb	r0, [r7, #12]
 801140a:	60b9      	str	r1, [r7, #8]
 801140c:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 801140e:	68b8      	ldr	r0, [r7, #8]
 8011410:	f7ff ff24 	bl	801125c <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8011414:	4604      	mov	r4, r0
 8011416:	6878      	ldr	r0, [r7, #4]
 8011418:	f7f4 fb59 	bl	8005ace <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 801141c:	4603      	mov	r3, r0
 801141e:	4619      	mov	r1, r3
 8011420:	4620      	mov	r0, r4
 8011422:	f000 f8af 	bl	8011584 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvENUlOT_E_clIRiEENS0_16__variant_cookieESA_>
 8011426:	462b      	mov	r3, r5
 8011428:	4618      	mov	r0, r3
 801142a:	3710      	adds	r7, #16
 801142c:	46bd      	mov	sp, r7
 801142e:	bdb0      	pop	{r4, r5, r7, pc}

08011430 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRfEESB_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8011430:	b5b0      	push	{r4, r5, r7, lr}
 8011432:	b084      	sub	sp, #16
 8011434:	af00      	add	r7, sp, #0
 8011436:	7338      	strb	r0, [r7, #12]
 8011438:	60b9      	str	r1, [r7, #8]
 801143a:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 801143c:	68b8      	ldr	r0, [r7, #8]
 801143e:	f7ff ff0d 	bl	801125c <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8011442:	4604      	mov	r4, r0
 8011444:	6878      	ldr	r0, [r7, #4]
 8011446:	f7f4 fb64 	bl	8005b12 <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 801144a:	4603      	mov	r3, r0
 801144c:	4619      	mov	r1, r3
 801144e:	4620      	mov	r0, r4
 8011450:	f000 f8a9 	bl	80115a6 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvENUlOT_E_clIRfEENS0_16__variant_cookieESA_>
 8011454:	462b      	mov	r3, r5
 8011456:	4618      	mov	r0, r3
 8011458:	3710      	adds	r7, #16
 801145a:	46bd      	mov	sp, r7
 801145c:	bdb0      	pop	{r4, r5, r7, pc}

0801145e <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRbEESB_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 801145e:	b5b0      	push	{r4, r5, r7, lr}
 8011460:	b084      	sub	sp, #16
 8011462:	af00      	add	r7, sp, #0
 8011464:	7338      	strb	r0, [r7, #12]
 8011466:	60b9      	str	r1, [r7, #8]
 8011468:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 801146a:	68b8      	ldr	r0, [r7, #8]
 801146c:	f7ff fef6 	bl	801125c <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8011470:	4604      	mov	r4, r0
 8011472:	6878      	ldr	r0, [r7, #4]
 8011474:	f7f4 fb6f 	bl	8005b56 <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
 8011478:	4603      	mov	r3, r0
 801147a:	4619      	mov	r1, r3
 801147c:	4620      	mov	r0, r4
 801147e:	f000 f8a3 	bl	80115c8 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvENUlOT_E_clIRbEENS0_16__variant_cookieESA_>
 8011482:	462b      	mov	r3, r5
 8011484:	4618      	mov	r0, r3
 8011486:	3710      	adds	r7, #16
 8011488:	46bd      	mov	sp, r7
 801148a:	bdb0      	pop	{r4, r5, r7, pc}

0801148c <_ZNSt8__detail9__variant15_Variadic_unionIJbEEC1Ev>:
 801148c:	b480      	push	{r7}
 801148e:	b083      	sub	sp, #12
 8011490:	af00      	add	r7, sp, #0
 8011492:	6078      	str	r0, [r7, #4]
 8011494:	687b      	ldr	r3, [r7, #4]
 8011496:	4618      	mov	r0, r3
 8011498:	370c      	adds	r7, #12
 801149a:	46bd      	mov	sp, r7
 801149c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80114a0:	4770      	bx	lr

080114a2 <_ZZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS7_ifbEEERKS9_EEvOT0_OT1_ENUlOT_E_clIRKS7_EENS0_16__variant_cookieESI_>:
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 80114a2:	b5b0      	push	{r4, r5, r7, lr}
 80114a4:	b082      	sub	sp, #8
 80114a6:	af00      	add	r7, sp, #0
 80114a8:	6078      	str	r0, [r7, #4]
 80114aa:	6039      	str	r1, [r7, #0]
 80114ac:	687b      	ldr	r3, [r7, #4]
 80114ae:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 80114b0:	4618      	mov	r0, r3
 80114b2:	f000 f89a 	bl	80115ea <_ZSt7forwardIRNSt8__detail9__variant15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>
 80114b6:	4604      	mov	r4, r0
 80114b8:	6838      	ldr	r0, [r7, #0]
 80114ba:	f7f2 fd6f 	bl	8003f9c <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 80114be:	4603      	mov	r3, r0
 80114c0:	4619      	mov	r1, r3
 80114c2:	4620      	mov	r0, r4
 80114c4:	f000 f8b3 	bl	801162e <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEERKS8_EEvOT_OT0_>
	  return {};
 80114c8:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 80114ca:	4618      	mov	r0, r3
 80114cc:	3708      	adds	r7, #8
 80114ce:	46bd      	mov	sp, r7
 80114d0:	bdb0      	pop	{r4, r5, r7, pc}

080114d2 <_ZZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS7_ifbEEERKS9_EEvOT0_OT1_ENUlOT_E_clIRKiEENS0_16__variant_cookieESI_>:
 80114d2:	b5b0      	push	{r4, r5, r7, lr}
 80114d4:	b082      	sub	sp, #8
 80114d6:	af00      	add	r7, sp, #0
 80114d8:	6078      	str	r0, [r7, #4]
 80114da:	6039      	str	r1, [r7, #0]
 80114dc:	687b      	ldr	r3, [r7, #4]
 80114de:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 80114e0:	4618      	mov	r0, r3
 80114e2:	f000 f882 	bl	80115ea <_ZSt7forwardIRNSt8__detail9__variant15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>
 80114e6:	4604      	mov	r4, r0
 80114e8:	6838      	ldr	r0, [r7, #0]
 80114ea:	f7f2 fcaf 	bl	8003e4c <_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE>
 80114ee:	4603      	mov	r3, r0
 80114f0:	4619      	mov	r1, r3
 80114f2:	4620      	mov	r0, r4
 80114f4:	f000 f8b7 	bl	8011666 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEERKiEEvOT_OT0_>
	  return {};
 80114f8:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 80114fa:	4618      	mov	r0, r3
 80114fc:	3708      	adds	r7, #8
 80114fe:	46bd      	mov	sp, r7
 8011500:	bdb0      	pop	{r4, r5, r7, pc}

08011502 <_ZZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS7_ifbEEERKS9_EEvOT0_OT1_ENUlOT_E_clIRKfEENS0_16__variant_cookieESI_>:
 8011502:	b5b0      	push	{r4, r5, r7, lr}
 8011504:	b082      	sub	sp, #8
 8011506:	af00      	add	r7, sp, #0
 8011508:	6078      	str	r0, [r7, #4]
 801150a:	6039      	str	r1, [r7, #0]
 801150c:	687b      	ldr	r3, [r7, #4]
 801150e:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 8011510:	4618      	mov	r0, r3
 8011512:	f000 f86a 	bl	80115ea <_ZSt7forwardIRNSt8__detail9__variant15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>
 8011516:	4604      	mov	r4, r0
 8011518:	6838      	ldr	r0, [r7, #0]
 801151a:	f7f2 fccb 	bl	8003eb4 <_ZSt7forwardIRKfEOT_RNSt16remove_referenceIS2_E4typeE>
 801151e:	4603      	mov	r3, r0
 8011520:	4619      	mov	r1, r3
 8011522:	4620      	mov	r0, r4
 8011524:	f000 f8b9 	bl	801169a <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEERKfEEvOT_OT0_>
	  return {};
 8011528:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 801152a:	4618      	mov	r0, r3
 801152c:	3708      	adds	r7, #8
 801152e:	46bd      	mov	sp, r7
 8011530:	bdb0      	pop	{r4, r5, r7, pc}

08011532 <_ZZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS7_ifbEEERKS9_EEvOT0_OT1_ENUlOT_E_clIRKbEENS0_16__variant_cookieESI_>:
 8011532:	b5b0      	push	{r4, r5, r7, lr}
 8011534:	b082      	sub	sp, #8
 8011536:	af00      	add	r7, sp, #0
 8011538:	6078      	str	r0, [r7, #4]
 801153a:	6039      	str	r1, [r7, #0]
 801153c:	687b      	ldr	r3, [r7, #4]
 801153e:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 8011540:	4618      	mov	r0, r3
 8011542:	f000 f852 	bl	80115ea <_ZSt7forwardIRNSt8__detail9__variant15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>
 8011546:	4604      	mov	r4, r0
 8011548:	6838      	ldr	r0, [r7, #0]
 801154a:	f7f2 fce7 	bl	8003f1c <_ZSt7forwardIRKbEOT_RNSt16remove_referenceIS2_E4typeE>
 801154e:	4603      	mov	r3, r0
 8011550:	4619      	mov	r1, r3
 8011552:	4620      	mov	r0, r4
 8011554:	f000 f8bb 	bl	80116ce <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEERKbEEvOT_OT0_>
	  return {};
 8011558:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 801155a:	4618      	mov	r0, r3
 801155c:	3708      	adds	r7, #8
 801155e:	46bd      	mov	sp, r7
 8011560:	bdb0      	pop	{r4, r5, r7, pc}

08011562 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvENUlOT_E_clIRS7_EENS0_16__variant_cookieESA_>:
	__do_visit([](auto&& __this_mem) mutable
 8011562:	b590      	push	{r4, r7, lr}
 8011564:	b083      	sub	sp, #12
 8011566:	af00      	add	r7, sp, #0
 8011568:	6078      	str	r0, [r7, #4]
 801156a:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 801156c:	6838      	ldr	r0, [r7, #0]
 801156e:	f7f5 fe18 	bl	80071a2 <_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_>
 8011572:	4603      	mov	r3, r0
 8011574:	4618      	mov	r0, r3
 8011576:	f7f5 fe1f 	bl	80071b8 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_>
	    return {};
 801157a:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 801157c:	4618      	mov	r0, r3
 801157e:	370c      	adds	r7, #12
 8011580:	46bd      	mov	sp, r7
 8011582:	bd90      	pop	{r4, r7, pc}

08011584 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvENUlOT_E_clIRiEENS0_16__variant_cookieESA_>:
 8011584:	b590      	push	{r4, r7, lr}
 8011586:	b083      	sub	sp, #12
 8011588:	af00      	add	r7, sp, #0
 801158a:	6078      	str	r0, [r7, #4]
 801158c:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 801158e:	6838      	ldr	r0, [r7, #0]
 8011590:	f7f5 fdc8 	bl	8007124 <_ZSt11__addressofIiEPT_RS0_>
 8011594:	4603      	mov	r3, r0
 8011596:	4618      	mov	r0, r3
 8011598:	f7f5 fdcf 	bl	800713a <_ZSt8_DestroyIiEvPT_>
	    return {};
 801159c:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 801159e:	4618      	mov	r0, r3
 80115a0:	370c      	adds	r7, #12
 80115a2:	46bd      	mov	sp, r7
 80115a4:	bd90      	pop	{r4, r7, pc}

080115a6 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvENUlOT_E_clIRfEENS0_16__variant_cookieESA_>:
 80115a6:	b590      	push	{r4, r7, lr}
 80115a8:	b083      	sub	sp, #12
 80115aa:	af00      	add	r7, sp, #0
 80115ac:	6078      	str	r0, [r7, #4]
 80115ae:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 80115b0:	6838      	ldr	r0, [r7, #0]
 80115b2:	f7f5 fdcc 	bl	800714e <_ZSt11__addressofIfEPT_RS0_>
 80115b6:	4603      	mov	r3, r0
 80115b8:	4618      	mov	r0, r3
 80115ba:	f7f5 fdd3 	bl	8007164 <_ZSt8_DestroyIfEvPT_>
	    return {};
 80115be:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 80115c0:	4618      	mov	r0, r3
 80115c2:	370c      	adds	r7, #12
 80115c4:	46bd      	mov	sp, r7
 80115c6:	bd90      	pop	{r4, r7, pc}

080115c8 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvENUlOT_E_clIRbEENS0_16__variant_cookieESA_>:
 80115c8:	b590      	push	{r4, r7, lr}
 80115ca:	b083      	sub	sp, #12
 80115cc:	af00      	add	r7, sp, #0
 80115ce:	6078      	str	r0, [r7, #4]
 80115d0:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 80115d2:	6838      	ldr	r0, [r7, #0]
 80115d4:	f7f5 fdd0 	bl	8007178 <_ZSt11__addressofIbEPT_RS0_>
 80115d8:	4603      	mov	r3, r0
 80115da:	4618      	mov	r0, r3
 80115dc:	f7f5 fdd7 	bl	800718e <_ZSt8_DestroyIbEvPT_>
	    return {};
 80115e0:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 80115e2:	4618      	mov	r0, r3
 80115e4:	370c      	adds	r7, #12
 80115e6:	46bd      	mov	sp, r7
 80115e8:	bd90      	pop	{r4, r7, pc}

080115ea <_ZSt7forwardIRNSt8__detail9__variant15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80115ea:	b480      	push	{r7}
 80115ec:	b083      	sub	sp, #12
 80115ee:	af00      	add	r7, sp, #0
 80115f0:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80115f2:	687b      	ldr	r3, [r7, #4]
 80115f4:	4618      	mov	r0, r3
 80115f6:	370c      	adds	r7, #12
 80115f8:	46bd      	mov	sp, r7
 80115fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80115fe:	4770      	bx	lr

08011600 <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEPT_RSA_>:
    addressof(_Tp& __r) noexcept
 8011600:	b580      	push	{r7, lr}
 8011602:	b082      	sub	sp, #8
 8011604:	af00      	add	r7, sp, #0
 8011606:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 8011608:	6878      	ldr	r0, [r7, #4]
 801160a:	f000 f805 	bl	8011618 <_ZSt11__addressofINSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEPT_RSA_>
 801160e:	4603      	mov	r3, r0
 8011610:	4618      	mov	r0, r3
 8011612:	3708      	adds	r7, #8
 8011614:	46bd      	mov	sp, r7
 8011616:	bd80      	pop	{r7, pc}

08011618 <_ZSt11__addressofINSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEPT_RSA_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 8011618:	b480      	push	{r7}
 801161a:	b083      	sub	sp, #12
 801161c:	af00      	add	r7, sp, #0
 801161e:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 8011620:	687b      	ldr	r3, [r7, #4]
 8011622:	4618      	mov	r0, r3
 8011624:	370c      	adds	r7, #12
 8011626:	46bd      	mov	sp, r7
 8011628:	f85d 7b04 	ldr.w	r7, [sp], #4
 801162c:	4770      	bx	lr

0801162e <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEERKS8_EEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 801162e:	b590      	push	{r4, r7, lr}
 8011630:	b085      	sub	sp, #20
 8011632:	af00      	add	r7, sp, #0
 8011634:	6078      	str	r0, [r7, #4]
 8011636:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 8011638:	687b      	ldr	r3, [r7, #4]
 801163a:	4618      	mov	r0, r3
 801163c:	f7ff ffe0 	bl	8011600 <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEPT_RSA_>
 8011640:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 8011642:	6838      	ldr	r0, [r7, #0]
 8011644:	f7f2 fcaa 	bl	8003f9c <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 8011648:	4604      	mov	r4, r0
        ::new (__storage)
 801164a:	68fb      	ldr	r3, [r7, #12]
 801164c:	4619      	mov	r1, r3
 801164e:	2018      	movs	r0, #24
 8011650:	f7ef fd03 	bl	800105a <_ZnwjPv>
 8011654:	4603      	mov	r3, r0
 8011656:	4621      	mov	r1, r4
 8011658:	4618      	mov	r0, r3
 801165a:	f011 fd47 	bl	80230ec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
    }
 801165e:	bf00      	nop
 8011660:	3714      	adds	r7, #20
 8011662:	46bd      	mov	sp, r7
 8011664:	bd90      	pop	{r4, r7, pc}

08011666 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEERKiEEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 8011666:	b590      	push	{r4, r7, lr}
 8011668:	b085      	sub	sp, #20
 801166a:	af00      	add	r7, sp, #0
 801166c:	6078      	str	r0, [r7, #4]
 801166e:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 8011670:	687b      	ldr	r3, [r7, #4]
 8011672:	4618      	mov	r0, r3
 8011674:	f7ff ffc4 	bl	8011600 <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEPT_RSA_>
 8011678:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 801167a:	6838      	ldr	r0, [r7, #0]
 801167c:	f7f2 fbe6 	bl	8003e4c <_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE>
 8011680:	4603      	mov	r3, r0
        ::new (__storage)
 8011682:	681c      	ldr	r4, [r3, #0]
 8011684:	68fb      	ldr	r3, [r7, #12]
 8011686:	4619      	mov	r1, r3
 8011688:	2004      	movs	r0, #4
 801168a:	f7ef fce6 	bl	800105a <_ZnwjPv>
 801168e:	4603      	mov	r3, r0
 8011690:	601c      	str	r4, [r3, #0]
    }
 8011692:	bf00      	nop
 8011694:	3714      	adds	r7, #20
 8011696:	46bd      	mov	sp, r7
 8011698:	bd90      	pop	{r4, r7, pc}

0801169a <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEERKfEEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 801169a:	b590      	push	{r4, r7, lr}
 801169c:	b085      	sub	sp, #20
 801169e:	af00      	add	r7, sp, #0
 80116a0:	6078      	str	r0, [r7, #4]
 80116a2:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 80116a4:	687b      	ldr	r3, [r7, #4]
 80116a6:	4618      	mov	r0, r3
 80116a8:	f7ff ffaa 	bl	8011600 <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEPT_RSA_>
 80116ac:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 80116ae:	6838      	ldr	r0, [r7, #0]
 80116b0:	f7f2 fc00 	bl	8003eb4 <_ZSt7forwardIRKfEOT_RNSt16remove_referenceIS2_E4typeE>
 80116b4:	4603      	mov	r3, r0
        ::new (__storage)
 80116b6:	681c      	ldr	r4, [r3, #0]
 80116b8:	68fb      	ldr	r3, [r7, #12]
 80116ba:	4619      	mov	r1, r3
 80116bc:	2004      	movs	r0, #4
 80116be:	f7ef fccc 	bl	800105a <_ZnwjPv>
 80116c2:	4603      	mov	r3, r0
 80116c4:	601c      	str	r4, [r3, #0]
    }
 80116c6:	bf00      	nop
 80116c8:	3714      	adds	r7, #20
 80116ca:	46bd      	mov	sp, r7
 80116cc:	bd90      	pop	{r4, r7, pc}

080116ce <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEERKbEEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 80116ce:	b590      	push	{r4, r7, lr}
 80116d0:	b085      	sub	sp, #20
 80116d2:	af00      	add	r7, sp, #0
 80116d4:	6078      	str	r0, [r7, #4]
 80116d6:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 80116d8:	687b      	ldr	r3, [r7, #4]
 80116da:	4618      	mov	r0, r3
 80116dc:	f7ff ff90 	bl	8011600 <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEPT_RSA_>
 80116e0:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 80116e2:	6838      	ldr	r0, [r7, #0]
 80116e4:	f7f2 fc1a 	bl	8003f1c <_ZSt7forwardIRKbEOT_RNSt16remove_referenceIS2_E4typeE>
 80116e8:	4603      	mov	r3, r0
        ::new (__storage)
 80116ea:	781c      	ldrb	r4, [r3, #0]
 80116ec:	68fb      	ldr	r3, [r7, #12]
 80116ee:	4619      	mov	r1, r3
 80116f0:	2001      	movs	r0, #1
 80116f2:	f7ef fcb2 	bl	800105a <_ZnwjPv>
 80116f6:	4603      	mov	r3, r0
 80116f8:	4622      	mov	r2, r4
 80116fa:	701a      	strb	r2, [r3, #0]
    }
 80116fc:	bf00      	nop
 80116fe:	3714      	adds	r7, #20
 8011700:	46bd      	mov	sp, r7
 8011702:	bd90      	pop	{r4, r7, pc}

08011704 <_Z41__static_initialization_and_destruction_0ii>:
 8011704:	b590      	push	{r4, r7, lr}
 8011706:	b0e7      	sub	sp, #412	; 0x19c
 8011708:	af02      	add	r7, sp, #8
 801170a:	1d3b      	adds	r3, r7, #4
 801170c:	6018      	str	r0, [r3, #0]
 801170e:	463b      	mov	r3, r7
 8011710:	6019      	str	r1, [r3, #0]
 8011712:	1d3b      	adds	r3, r7, #4
 8011714:	681b      	ldr	r3, [r3, #0]
 8011716:	2b01      	cmp	r3, #1
 8011718:	f040 819d 	bne.w	8011a56 <_Z41__static_initialization_and_destruction_0ii+0x352>
 801171c:	463b      	mov	r3, r7
 801171e:	681b      	ldr	r3, [r3, #0]
 8011720:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8011724:	4293      	cmp	r3, r2
 8011726:	f040 8196 	bne.w	8011a56 <_Z41__static_initialization_and_destruction_0ii+0x352>
};
 801172a:	f107 0314 	add.w	r3, r7, #20
 801172e:	4618      	mov	r0, r3
 8011730:	2322      	movs	r3, #34	; 0x22
 8011732:	461a      	mov	r2, r3
 8011734:	2100      	movs	r1, #0
 8011736:	f012 fd55 	bl	80241e4 <memset>
 801173a:	f107 0314 	add.w	r3, r7, #20
 801173e:	223a      	movs	r2, #58	; 0x3a
 8011740:	701a      	strb	r2, [r3, #0]
 8011742:	f107 0314 	add.w	r3, r7, #20
 8011746:	2201      	movs	r2, #1
 8011748:	705a      	strb	r2, [r3, #1]
 801174a:	f107 0314 	add.w	r3, r7, #20
 801174e:	220a      	movs	r2, #10
 8011750:	709a      	strb	r2, [r3, #2]
 8011752:	f107 0314 	add.w	r3, r7, #20
 8011756:	220a      	movs	r2, #10
 8011758:	70da      	strb	r2, [r3, #3]
 801175a:	f107 0314 	add.w	r3, r7, #20
 801175e:	222c      	movs	r2, #44	; 0x2c
 8011760:	711a      	strb	r2, [r3, #4]
 8011762:	f107 0314 	add.w	r3, r7, #20
 8011766:	220c      	movs	r2, #12
 8011768:	715a      	strb	r2, [r3, #5]
 801176a:	f107 0314 	add.w	r3, r7, #20
 801176e:	222e      	movs	r2, #46	; 0x2e
 8011770:	719a      	strb	r2, [r3, #6]
 8011772:	f107 0314 	add.w	r3, r7, #20
 8011776:	220b      	movs	r2, #11
 8011778:	71da      	strb	r2, [r3, #7]
 801177a:	f107 0314 	add.w	r3, r7, #20
 801177e:	225b      	movs	r2, #91	; 0x5b
 8011780:	721a      	strb	r2, [r3, #8]
 8011782:	f107 0314 	add.w	r3, r7, #20
 8011786:	220d      	movs	r2, #13
 8011788:	725a      	strb	r2, [r3, #9]
 801178a:	f107 0314 	add.w	r3, r7, #20
 801178e:	225d      	movs	r2, #93	; 0x5d
 8011790:	729a      	strb	r2, [r3, #10]
 8011792:	f107 0314 	add.w	r3, r7, #20
 8011796:	220e      	movs	r2, #14
 8011798:	72da      	strb	r2, [r3, #11]
 801179a:	f107 0314 	add.w	r3, r7, #20
 801179e:	227c      	movs	r2, #124	; 0x7c
 80117a0:	731a      	strb	r2, [r3, #12]
 80117a2:	f107 0314 	add.w	r3, r7, #20
 80117a6:	2215      	movs	r2, #21
 80117a8:	735a      	strb	r2, [r3, #13]
 80117aa:	f107 0314 	add.w	r3, r7, #20
 80117ae:	2226      	movs	r2, #38	; 0x26
 80117b0:	739a      	strb	r2, [r3, #14]
 80117b2:	f107 0314 	add.w	r3, r7, #20
 80117b6:	2216      	movs	r2, #22
 80117b8:	73da      	strb	r2, [r3, #15]
 80117ba:	f107 0314 	add.w	r3, r7, #20
 80117be:	222b      	movs	r2, #43	; 0x2b
 80117c0:	741a      	strb	r2, [r3, #16]
 80117c2:	f107 0314 	add.w	r3, r7, #20
 80117c6:	221f      	movs	r2, #31
 80117c8:	745a      	strb	r2, [r3, #17]
 80117ca:	f107 0314 	add.w	r3, r7, #20
 80117ce:	222d      	movs	r2, #45	; 0x2d
 80117d0:	749a      	strb	r2, [r3, #18]
 80117d2:	f107 0314 	add.w	r3, r7, #20
 80117d6:	2220      	movs	r2, #32
 80117d8:	74da      	strb	r2, [r3, #19]
 80117da:	f107 0314 	add.w	r3, r7, #20
 80117de:	222a      	movs	r2, #42	; 0x2a
 80117e0:	751a      	strb	r2, [r3, #20]
 80117e2:	f107 0314 	add.w	r3, r7, #20
 80117e6:	2221      	movs	r2, #33	; 0x21
 80117e8:	755a      	strb	r2, [r3, #21]
 80117ea:	f107 0314 	add.w	r3, r7, #20
 80117ee:	222f      	movs	r2, #47	; 0x2f
 80117f0:	759a      	strb	r2, [r3, #22]
 80117f2:	f107 0314 	add.w	r3, r7, #20
 80117f6:	2222      	movs	r2, #34	; 0x22
 80117f8:	75da      	strb	r2, [r3, #23]
 80117fa:	f107 0314 	add.w	r3, r7, #20
 80117fe:	225e      	movs	r2, #94	; 0x5e
 8011800:	761a      	strb	r2, [r3, #24]
 8011802:	f107 0314 	add.w	r3, r7, #20
 8011806:	2223      	movs	r2, #35	; 0x23
 8011808:	765a      	strb	r2, [r3, #25]
 801180a:	f107 0314 	add.w	r3, r7, #20
 801180e:	2225      	movs	r2, #37	; 0x25
 8011810:	769a      	strb	r2, [r3, #26]
 8011812:	f107 0314 	add.w	r3, r7, #20
 8011816:	2224      	movs	r2, #36	; 0x24
 8011818:	76da      	strb	r2, [r3, #27]
 801181a:	f107 0314 	add.w	r3, r7, #20
 801181e:	2228      	movs	r2, #40	; 0x28
 8011820:	771a      	strb	r2, [r3, #28]
 8011822:	f107 0314 	add.w	r3, r7, #20
 8011826:	2226      	movs	r2, #38	; 0x26
 8011828:	775a      	strb	r2, [r3, #29]
 801182a:	f107 0314 	add.w	r3, r7, #20
 801182e:	2229      	movs	r2, #41	; 0x29
 8011830:	779a      	strb	r2, [r3, #30]
 8011832:	f107 0314 	add.w	r3, r7, #20
 8011836:	2227      	movs	r2, #39	; 0x27
 8011838:	77da      	strb	r2, [r3, #31]
 801183a:	f107 0314 	add.w	r3, r7, #20
 801183e:	2225      	movs	r2, #37	; 0x25
 8011840:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8011844:	f107 030c 	add.w	r3, r7, #12
 8011848:	f107 0214 	add.w	r2, r7, #20
 801184c:	601a      	str	r2, [r3, #0]
 801184e:	f107 030c 	add.w	r3, r7, #12
 8011852:	2211      	movs	r2, #17
 8011854:	605a      	str	r2, [r3, #4]
 8011856:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801185a:	4618      	mov	r0, r3
 801185c:	f7f0 f948 	bl	8001af0 <_ZNSaISt4pairIKc10token_typeEEC1Ev>
 8011860:	f107 0138 	add.w	r1, r7, #56	; 0x38
 8011864:	f107 020c 	add.w	r2, r7, #12
 8011868:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801186c:	9300      	str	r3, [sp, #0]
 801186e:	460b      	mov	r3, r1
 8011870:	ca06      	ldmia	r2, {r1, r2}
 8011872:	4885      	ldr	r0, [pc, #532]	; (8011a88 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 8011874:	f7f0 f954 	bl	8001b20 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 8011878:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801187c:	4618      	mov	r0, r3
 801187e:	f7f0 f943 	bl	8001b08 <_ZNSaISt4pairIKc10token_typeEED1Ev>
	{"true", TOKEN_TRUE},
 8011882:	2305      	movs	r3, #5
 8011884:	f887 3162 	strb.w	r3, [r7, #354]	; 0x162
};
 8011888:	f507 72b1 	add.w	r2, r7, #354	; 0x162
 801188c:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8011890:	497e      	ldr	r1, [pc, #504]	; (8011a8c <_Z41__static_initialization_and_destruction_0ii+0x388>)
 8011892:	4618      	mov	r0, r3
 8011894:	f7ef fc30 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"false", TOKEN_FALSE},
 8011898:	2306      	movs	r3, #6
 801189a:	f887 3163 	strb.w	r3, [r7, #355]	; 0x163
};
 801189e:	f207 1263 	addw	r2, r7, #355	; 0x163
 80118a2:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80118a6:	331c      	adds	r3, #28
 80118a8:	4979      	ldr	r1, [pc, #484]	; (8011a90 <_Z41__static_initialization_and_destruction_0ii+0x38c>)
 80118aa:	4618      	mov	r0, r3
 80118ac:	f7ef fc4c 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"setup", TOKEN_SETUP},
 80118b0:	2307      	movs	r3, #7
 80118b2:	f887 3164 	strb.w	r3, [r7, #356]	; 0x164
};
 80118b6:	f507 72b2 	add.w	r2, r7, #356	; 0x164
 80118ba:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80118be:	3338      	adds	r3, #56	; 0x38
 80118c0:	4974      	ldr	r1, [pc, #464]	; (8011a94 <_Z41__static_initialization_and_destruction_0ii+0x390>)
 80118c2:	4618      	mov	r0, r3
 80118c4:	f7ef fc40 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"loop", TOKEN_LOOP},
 80118c8:	2308      	movs	r3, #8
 80118ca:	f887 3165 	strb.w	r3, [r7, #357]	; 0x165
};
 80118ce:	f207 1265 	addw	r2, r7, #357	; 0x165
 80118d2:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80118d6:	3354      	adds	r3, #84	; 0x54
 80118d8:	496f      	ldr	r1, [pc, #444]	; (8011a98 <_Z41__static_initialization_and_destruction_0ii+0x394>)
 80118da:	4618      	mov	r0, r3
 80118dc:	f7ef fc0c 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"finish", TOKEN_FINISH},
 80118e0:	2309      	movs	r3, #9
 80118e2:	f887 3166 	strb.w	r3, [r7, #358]	; 0x166
};
 80118e6:	f507 72b3 	add.w	r2, r7, #358	; 0x166
 80118ea:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80118ee:	3370      	adds	r3, #112	; 0x70
 80118f0:	496a      	ldr	r1, [pc, #424]	; (8011a9c <_Z41__static_initialization_and_destruction_0ii+0x398>)
 80118f2:	4618      	mov	r0, r3
 80118f4:	f7ef fc50 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"if", TOKEN_IF},
 80118f8:	2310      	movs	r3, #16
 80118fa:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167
};
 80118fe:	f207 1267 	addw	r2, r7, #359	; 0x167
 8011902:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8011906:	338c      	adds	r3, #140	; 0x8c
 8011908:	4965      	ldr	r1, [pc, #404]	; (8011aa0 <_Z41__static_initialization_and_destruction_0ii+0x39c>)
 801190a:	4618      	mov	r0, r3
 801190c:	f7ef fc6c 	bl	80011e8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>
	{"elseif", TOKEN_ELSEIF},
 8011910:	2311      	movs	r3, #17
 8011912:	f887 3168 	strb.w	r3, [r7, #360]	; 0x168
};
 8011916:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 801191a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801191e:	33a8      	adds	r3, #168	; 0xa8
 8011920:	4960      	ldr	r1, [pc, #384]	; (8011aa4 <_Z41__static_initialization_and_destruction_0ii+0x3a0>)
 8011922:	4618      	mov	r0, r3
 8011924:	f7ef fc38 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"else", TOKEN_ELSE},
 8011928:	2312      	movs	r3, #18
 801192a:	f887 3169 	strb.w	r3, [r7, #361]	; 0x169
};
 801192e:	f207 1269 	addw	r2, r7, #361	; 0x169
 8011932:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8011936:	33c4      	adds	r3, #196	; 0xc4
 8011938:	495b      	ldr	r1, [pc, #364]	; (8011aa8 <_Z41__static_initialization_and_destruction_0ii+0x3a4>)
 801193a:	4618      	mov	r0, r3
 801193c:	f7ef fbdc 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"while", TOKEN_WHILE},
 8011940:	2313      	movs	r3, #19
 8011942:	f887 316a 	strb.w	r3, [r7, #362]	; 0x16a
};
 8011946:	f507 72b5 	add.w	r2, r7, #362	; 0x16a
 801194a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801194e:	33e0      	adds	r3, #224	; 0xe0
 8011950:	4956      	ldr	r1, [pc, #344]	; (8011aac <_Z41__static_initialization_and_destruction_0ii+0x3a8>)
 8011952:	4618      	mov	r0, r3
 8011954:	f7ef fbf8 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"end", TOKEN_END},
 8011958:	2314      	movs	r3, #20
 801195a:	f887 316b 	strb.w	r3, [r7, #363]	; 0x16b
};
 801195e:	f207 126b 	addw	r2, r7, #363	; 0x16b
 8011962:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8011966:	33fc      	adds	r3, #252	; 0xfc
 8011968:	4951      	ldr	r1, [pc, #324]	; (8011ab0 <_Z41__static_initialization_and_destruction_0ii+0x3ac>)
 801196a:	4618      	mov	r0, r3
 801196c:	f7ef fc64 	bl	8001238 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>
 8011970:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8011974:	f107 0248 	add.w	r2, r7, #72	; 0x48
 8011978:	601a      	str	r2, [r3, #0]
 801197a:	f107 0340 	add.w	r3, r7, #64	; 0x40
 801197e:	220a      	movs	r2, #10
 8011980:	605a      	str	r2, [r3, #4]
 8011982:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8011986:	4618      	mov	r0, r3
 8011988:	f7f0 f957 	bl	8001c3a <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 801198c:	f507 71b6 	add.w	r1, r7, #364	; 0x16c
 8011990:	f107 0240 	add.w	r2, r7, #64	; 0x40
 8011994:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8011998:	9300      	str	r3, [sp, #0]
 801199a:	460b      	mov	r3, r1
 801199c:	ca06      	ldmia	r2, {r1, r2}
 801199e:	4845      	ldr	r0, [pc, #276]	; (8011ab4 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 80119a0:	f7f0 f963 	bl	8001c6a <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>
 80119a4:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 80119a8:	4618      	mov	r0, r3
 80119aa:	f7f0 f952 	bl	8001c52 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 80119ae:	f107 0448 	add.w	r4, r7, #72	; 0x48
 80119b2:	f504 748c 	add.w	r4, r4, #280	; 0x118
 80119b6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80119ba:	429c      	cmp	r4, r3
 80119bc:	d004      	beq.n	80119c8 <_Z41__static_initialization_and_destruction_0ii+0x2c4>
 80119be:	3c1c      	subs	r4, #28
 80119c0:	4620      	mov	r0, r4
 80119c2:	f7ef fb8c 	bl	80010de <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 80119c6:	e7f6      	b.n	80119b6 <_Z41__static_initialization_and_destruction_0ii+0x2b2>
};
 80119c8:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 80119cc:	2200      	movs	r2, #0
 80119ce:	601a      	str	r2, [r3, #0]
 80119d0:	605a      	str	r2, [r3, #4]
 80119d2:	609a      	str	r2, [r3, #8]
 80119d4:	233c      	movs	r3, #60	; 0x3c
 80119d6:	f887 317c 	strb.w	r3, [r7, #380]	; 0x17c
 80119da:	231b      	movs	r3, #27
 80119dc:	f887 317d 	strb.w	r3, [r7, #381]	; 0x17d
 80119e0:	231c      	movs	r3, #28
 80119e2:	f887 317e 	strb.w	r3, [r7, #382]	; 0x17e
 80119e6:	233e      	movs	r3, #62	; 0x3e
 80119e8:	f887 317f 	strb.w	r3, [r7, #383]	; 0x17f
 80119ec:	2319      	movs	r3, #25
 80119ee:	f887 3180 	strb.w	r3, [r7, #384]	; 0x180
 80119f2:	231a      	movs	r3, #26
 80119f4:	f887 3181 	strb.w	r3, [r7, #385]	; 0x181
 80119f8:	233d      	movs	r3, #61	; 0x3d
 80119fa:	f887 3182 	strb.w	r3, [r7, #386]	; 0x182
 80119fe:	2318      	movs	r3, #24
 8011a00:	f887 3183 	strb.w	r3, [r7, #387]	; 0x183
 8011a04:	231d      	movs	r3, #29
 8011a06:	f887 3184 	strb.w	r3, [r7, #388]	; 0x184
 8011a0a:	2321      	movs	r3, #33	; 0x21
 8011a0c:	f887 3185 	strb.w	r3, [r7, #389]	; 0x185
 8011a10:	2317      	movs	r3, #23
 8011a12:	f887 3186 	strb.w	r3, [r7, #390]	; 0x186
 8011a16:	231e      	movs	r3, #30
 8011a18:	f887 3187 	strb.w	r3, [r7, #391]	; 0x187
 8011a1c:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 8011a20:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 8011a24:	2304      	movs	r3, #4
 8011a26:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 8011a2a:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 8011a2e:	4618      	mov	r0, r3
 8011a30:	f7f0 f94b 	bl	8001cca <_ZNSaISt4pairIKc12double_tokenEEC1Ev>
 8011a34:	f507 72c4 	add.w	r2, r7, #392	; 0x188
 8011a38:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 8011a3c:	9300      	str	r3, [sp, #0]
 8011a3e:	4613      	mov	r3, r2
 8011a40:	f507 72ba 	add.w	r2, r7, #372	; 0x174
 8011a44:	ca06      	ldmia	r2, {r1, r2}
 8011a46:	481c      	ldr	r0, [pc, #112]	; (8011ab8 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 8011a48:	f7f0 f957 	bl	8001cfa <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 8011a4c:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 8011a50:	4618      	mov	r0, r3
 8011a52:	f7f0 f946 	bl	8001ce2 <_ZNSaISt4pairIKc12double_tokenEED1Ev>
static const std::map<char, double_token> token_double_chars
 8011a56:	1d3b      	adds	r3, r7, #4
 8011a58:	681b      	ldr	r3, [r3, #0]
 8011a5a:	2b00      	cmp	r3, #0
 8011a5c:	d10e      	bne.n	8011a7c <_Z41__static_initialization_and_destruction_0ii+0x378>
 8011a5e:	463b      	mov	r3, r7
 8011a60:	681b      	ldr	r3, [r3, #0]
 8011a62:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8011a66:	4293      	cmp	r3, r2
 8011a68:	d108      	bne.n	8011a7c <_Z41__static_initialization_and_destruction_0ii+0x378>
 8011a6a:	4813      	ldr	r0, [pc, #76]	; (8011ab8 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 8011a6c:	f7f7 fdd7 	bl	800961e <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>
static const std::map<std::string, token_type> token_strings
 8011a70:	4810      	ldr	r0, [pc, #64]	; (8011ab4 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 8011a72:	f7f7 fde1 	bl	8009638 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
static const std::map<char, token_type> token_chars
 8011a76:	4804      	ldr	r0, [pc, #16]	; (8011a88 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 8011a78:	f7f7 fdeb 	bl	8009652 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>
 8011a7c:	bf00      	nop
 8011a7e:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 8011a82:	46bd      	mov	sp, r7
 8011a84:	bd90      	pop	{r4, r7, pc}
 8011a86:	bf00      	nop
 8011a88:	20000350 	.word	0x20000350
 8011a8c:	08027810 	.word	0x08027810
 8011a90:	08027818 	.word	0x08027818
 8011a94:	08027820 	.word	0x08027820
 8011a98:	08027828 	.word	0x08027828
 8011a9c:	08027830 	.word	0x08027830
 8011aa0:	08027838 	.word	0x08027838
 8011aa4:	0802783c 	.word	0x0802783c
 8011aa8:	08027844 	.word	0x08027844
 8011aac:	0802784c 	.word	0x0802784c
 8011ab0:	08027854 	.word	0x08027854
 8011ab4:	20000368 	.word	0x20000368
 8011ab8:	20000380 	.word	0x20000380

08011abc <_GLOBAL__sub_I__ZN5LexerC2Ev>:
 8011abc:	b580      	push	{r7, lr}
 8011abe:	af00      	add	r7, sp, #0
 8011ac0:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8011ac4:	2001      	movs	r0, #1
 8011ac6:	f7ff fe1d 	bl	8011704 <_Z41__static_initialization_and_destruction_0ii>
 8011aca:	bd80      	pop	{r7, pc}

08011acc <_GLOBAL__sub_D__ZN5LexerC2Ev>:
 8011acc:	b580      	push	{r7, lr}
 8011ace:	af00      	add	r7, sp, #0
 8011ad0:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8011ad4:	2000      	movs	r0, #0
 8011ad6:	f7ff fe15 	bl	8011704 <_Z41__static_initialization_and_destruction_0ii>
 8011ada:	bd80      	pop	{r7, pc}

08011adc <_ZNSt7__cxx119to_stringEi>:
  // NB: (v)snprintf vs sprintf.

  // DR 1261.
  inline string
  to_string(int __val)
  { return __gnu_cxx::__to_xstring<string>(&std::vsnprintf, 4 * sizeof(int),
 8011adc:	b580      	push	{r7, lr}
 8011ade:	b084      	sub	sp, #16
 8011ae0:	af02      	add	r7, sp, #8
 8011ae2:	6078      	str	r0, [r7, #4]
 8011ae4:	6039      	str	r1, [r7, #0]
					   "%d", __val); }
 8011ae6:	6878      	ldr	r0, [r7, #4]
 8011ae8:	683b      	ldr	r3, [r7, #0]
 8011aea:	9300      	str	r3, [sp, #0]
 8011aec:	4b04      	ldr	r3, [pc, #16]	; (8011b00 <_ZNSt7__cxx119to_stringEi+0x24>)
 8011aee:	2210      	movs	r2, #16
 8011af0:	4904      	ldr	r1, [pc, #16]	; (8011b04 <_ZNSt7__cxx119to_stringEi+0x28>)
 8011af2:	f000 fa01 	bl	8011ef8 <_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_jPKS8_St9__va_listEjSB_z>
 8011af6:	6878      	ldr	r0, [r7, #4]
 8011af8:	3708      	adds	r7, #8
 8011afa:	46bd      	mov	sp, r7
 8011afc:	bd80      	pop	{r7, pc}
 8011afe:	bf00      	nop
 8011b00:	08027858 	.word	0x08027858
 8011b04:	080252e9 	.word	0x080252e9

08011b08 <_ZNSt7__cxx119to_stringEj>:

  inline string
  to_string(unsigned __val)
  { return __gnu_cxx::__to_xstring<string>(&std::vsnprintf,
 8011b08:	b580      	push	{r7, lr}
 8011b0a:	b084      	sub	sp, #16
 8011b0c:	af02      	add	r7, sp, #8
 8011b0e:	6078      	str	r0, [r7, #4]
 8011b10:	6039      	str	r1, [r7, #0]
					   4 * sizeof(unsigned),
					   "%u", __val); }
 8011b12:	6878      	ldr	r0, [r7, #4]
 8011b14:	683b      	ldr	r3, [r7, #0]
 8011b16:	9300      	str	r3, [sp, #0]
 8011b18:	4b04      	ldr	r3, [pc, #16]	; (8011b2c <_ZNSt7__cxx119to_stringEj+0x24>)
 8011b1a:	2210      	movs	r2, #16
 8011b1c:	4904      	ldr	r1, [pc, #16]	; (8011b30 <_ZNSt7__cxx119to_stringEj+0x28>)
 8011b1e:	f000 f9eb 	bl	8011ef8 <_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_jPKS8_St9__va_listEjSB_z>
 8011b22:	6878      	ldr	r0, [r7, #4]
 8011b24:	3708      	adds	r7, #8
 8011b26:	46bd      	mov	sp, r7
 8011b28:	bd80      	pop	{r7, pc}
 8011b2a:	bf00      	nop
 8011b2c:	0802785c 	.word	0x0802785c
 8011b30:	080252e9 	.word	0x080252e9

08011b34 <_ZN12_GLOBAL__N_116assert_argumentsEiSt6vectorIP10ExpressionSaIS2_EE>:
{
	// todo dober miejsce


	void assert_arguments(int expected, arglist arguments)
	{
 8011b34:	b580      	push	{r7, lr}
 8011b36:	b0a6      	sub	sp, #152	; 0x98
 8011b38:	af00      	add	r7, sp, #0
 8011b3a:	6078      	str	r0, [r7, #4]
 8011b3c:	6039      	str	r1, [r7, #0]
		if(arguments.size() != (unsigned int)expected)
 8011b3e:	6838      	ldr	r0, [r7, #0]
 8011b40:	f7f0 f99c 	bl	8001e7c <_ZNKSt6vectorIP10ExpressionSaIS1_EE4sizeEv>
 8011b44:	4602      	mov	r2, r0
 8011b46:	687b      	ldr	r3, [r7, #4]
 8011b48:	429a      	cmp	r2, r3
 8011b4a:	bf14      	ite	ne
 8011b4c:	2301      	movne	r3, #1
 8011b4e:	2300      	moveq	r3, #0
 8011b50:	b2db      	uxtb	r3, r3
 8011b52:	2b00      	cmp	r3, #0
 8011b54:	d053      	beq.n	8011bfe <_ZN12_GLOBAL__N_116assert_argumentsEiSt6vectorIP10ExpressionSaIS2_EE+0xca>
		{
			Transmitter::report_error(std::string("expected " + std::to_string(expected) + " arguments, found " + std::to_string(arguments.size()) + "\n"));
 8011b56:	f107 0368 	add.w	r3, r7, #104	; 0x68
 8011b5a:	6879      	ldr	r1, [r7, #4]
 8011b5c:	4618      	mov	r0, r3
 8011b5e:	f7ff ffbd 	bl	8011adc <_ZNSt7__cxx119to_stringEi>
 8011b62:	f107 0350 	add.w	r3, r7, #80	; 0x50
 8011b66:	f107 0268 	add.w	r2, r7, #104	; 0x68
 8011b6a:	4927      	ldr	r1, [pc, #156]	; (8011c08 <_ZN12_GLOBAL__N_116assert_argumentsEiSt6vectorIP10ExpressionSaIS2_EE+0xd4>)
 8011b6c:	4618      	mov	r0, r3
 8011b6e:	f000 f9fb 	bl	8011f68 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_>
 8011b72:	f107 0338 	add.w	r3, r7, #56	; 0x38
 8011b76:	f107 0150 	add.w	r1, r7, #80	; 0x50
 8011b7a:	4a24      	ldr	r2, [pc, #144]	; (8011c0c <_ZN12_GLOBAL__N_116assert_argumentsEiSt6vectorIP10ExpressionSaIS2_EE+0xd8>)
 8011b7c:	4618      	mov	r0, r3
 8011b7e:	f7fc fad7 	bl	800e130 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_>
 8011b82:	6838      	ldr	r0, [r7, #0]
 8011b84:	f7f0 f97a 	bl	8001e7c <_ZNKSt6vectorIP10ExpressionSaIS1_EE4sizeEv>
 8011b88:	4602      	mov	r2, r0
 8011b8a:	f107 0380 	add.w	r3, r7, #128	; 0x80
 8011b8e:	4611      	mov	r1, r2
 8011b90:	4618      	mov	r0, r3
 8011b92:	f7ff ffb9 	bl	8011b08 <_ZNSt7__cxx119to_stringEj>
 8011b96:	f107 0320 	add.w	r3, r7, #32
 8011b9a:	f107 0280 	add.w	r2, r7, #128	; 0x80
 8011b9e:	f107 0138 	add.w	r1, r7, #56	; 0x38
 8011ba2:	4618      	mov	r0, r3
 8011ba4:	f000 f9f8 	bl	8011f98 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_>
 8011ba8:	f107 0308 	add.w	r3, r7, #8
 8011bac:	f107 0120 	add.w	r1, r7, #32
 8011bb0:	4a17      	ldr	r2, [pc, #92]	; (8011c10 <_ZN12_GLOBAL__N_116assert_argumentsEiSt6vectorIP10ExpressionSaIS2_EE+0xdc>)
 8011bb2:	4618      	mov	r0, r3
 8011bb4:	f7fc fabc 	bl	800e130 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_>
 8011bb8:	f107 0308 	add.w	r3, r7, #8
 8011bbc:	4618      	mov	r0, r3
 8011bbe:	f006 faaf 	bl	8018120 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8011bc2:	f107 0308 	add.w	r3, r7, #8
 8011bc6:	4618      	mov	r0, r3
 8011bc8:	f011 f8cf 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8011bcc:	f107 0320 	add.w	r3, r7, #32
 8011bd0:	4618      	mov	r0, r3
 8011bd2:	f011 f8ca 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8011bd6:	f107 0380 	add.w	r3, r7, #128	; 0x80
 8011bda:	4618      	mov	r0, r3
 8011bdc:	f011 f8c5 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8011be0:	f107 0338 	add.w	r3, r7, #56	; 0x38
 8011be4:	4618      	mov	r0, r3
 8011be6:	f011 f8c0 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8011bea:	f107 0350 	add.w	r3, r7, #80	; 0x50
 8011bee:	4618      	mov	r0, r3
 8011bf0:	f011 f8bb 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8011bf4:	f107 0368 	add.w	r3, r7, #104	; 0x68
 8011bf8:	4618      	mov	r0, r3
 8011bfa:	f011 f8b6 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
		}
	}
 8011bfe:	bf00      	nop
 8011c00:	3798      	adds	r7, #152	; 0x98
 8011c02:	46bd      	mov	sp, r7
 8011c04:	bd80      	pop	{r7, pc}
 8011c06:	bf00      	nop
 8011c08:	08027860 	.word	0x08027860
 8011c0c:	0802786c 	.word	0x0802786c
 8011c10:	08027880 	.word	0x08027880

08011c14 <_ZN12_GLOBAL__N_16resizeER6SymbolSt6vectorIP10ExpressionSaIS4_EE>:

void resize(Symbol& var, arglist arguments)
{
 8011c14:	b590      	push	{r4, r7, lr}
 8011c16:	b08f      	sub	sp, #60	; 0x3c
 8011c18:	af00      	add	r7, sp, #0
 8011c1a:	6078      	str	r0, [r7, #4]
 8011c1c:	6039      	str	r1, [r7, #0]
	assert_arguments(1, arguments);
 8011c1e:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8011c22:	6839      	ldr	r1, [r7, #0]
 8011c24:	4618      	mov	r0, r3
 8011c26:	f7fc fa06 	bl	800e036 <_ZNSt6vectorIP10ExpressionSaIS1_EEC1ERKS3_>
 8011c2a:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8011c2e:	4619      	mov	r1, r3
 8011c30:	2001      	movs	r0, #1
 8011c32:	f7ff ff7f 	bl	8011b34 <_ZN12_GLOBAL__N_116assert_argumentsEiSt6vectorIP10ExpressionSaIS2_EE>
 8011c36:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8011c3a:	4618      	mov	r0, r3
 8011c3c:	f7fc fa38 	bl	800e0b0 <_ZNSt6vectorIP10ExpressionSaIS1_EED1Ev>
	Symbol size_symbol = EVALUATE(arguments[0]);
 8011c40:	f7fa f928 	bl	800be94 <_ZN21Expression_calculator12get_instanceEv>
 8011c44:	4604      	mov	r4, r0
 8011c46:	2100      	movs	r1, #0
 8011c48:	6838      	ldr	r0, [r7, #0]
 8011c4a:	f7f0 f927 	bl	8001e9c <_ZNSt6vectorIP10ExpressionSaIS1_EEixEj>
 8011c4e:	4603      	mov	r3, r0
 8011c50:	681a      	ldr	r2, [r3, #0]
 8011c52:	f107 0308 	add.w	r3, r7, #8
 8011c56:	4621      	mov	r1, r4
 8011c58:	4618      	mov	r0, r3
 8011c5a:	f7fa f9af 	bl	800bfbc <_ZN21Expression_calculator8evaluateEP10Expression>
	size_symbol.assert_type(SYMBOL_INT);
 8011c5e:	f107 0308 	add.w	r3, r7, #8
 8011c62:	2100      	movs	r1, #0
 8011c64:	4618      	mov	r0, r3
 8011c66:	f005 fde5 	bl	8017834 <_ZN6Symbol11assert_typeE11symbol_type>
	int size = std::get<int>(size_symbol.value);
 8011c6a:	f107 0308 	add.w	r3, r7, #8
 8011c6e:	3304      	adds	r3, #4
 8011c70:	4618      	mov	r0, r3
 8011c72:	f7ef fe49 	bl	8001908 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8011c76:	4603      	mov	r3, r0
 8011c78:	681b      	ldr	r3, [r3, #0]
 8011c7a:	637b      	str	r3, [r7, #52]	; 0x34
	var.resize(size);
 8011c7c:	6b79      	ldr	r1, [r7, #52]	; 0x34
 8011c7e:	6878      	ldr	r0, [r7, #4]
 8011c80:	f005 fe06 	bl	8017890 <_ZN6Symbol6resizeEi>
	Symbol size_symbol = EVALUATE(arguments[0]);
 8011c84:	f107 0308 	add.w	r3, r7, #8
 8011c88:	4618      	mov	r0, r3
 8011c8a:	f7ef fc2d 	bl	80014e8 <_ZN6SymbolD1Ev>
}
 8011c8e:	bf00      	nop
 8011c90:	373c      	adds	r7, #60	; 0x3c
 8011c92:	46bd      	mov	sp, r7
 8011c94:	bd90      	pop	{r4, r7, pc}

08011c96 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE13_Rb_tree_implISL_Lb1EED1Ev>:
	struct _Rb_tree_impl
 8011c96:	b580      	push	{r7, lr}
 8011c98:	b082      	sub	sp, #8
 8011c9a:	af00      	add	r7, sp, #0
 8011c9c:	6078      	str	r0, [r7, #4]
 8011c9e:	6878      	ldr	r0, [r7, #4]
 8011ca0:	f000 f9d0 	bl	8012044 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEED1Ev>
 8011ca4:	687b      	ldr	r3, [r7, #4]
 8011ca6:	4618      	mov	r0, r3
 8011ca8:	3708      	adds	r7, #8
 8011caa:	46bd      	mov	sp, r7
 8011cac:	bd80      	pop	{r7, pc}

08011cae <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EEC1Ev>:
      _Rb_tree() = default;
 8011cae:	b580      	push	{r7, lr}
 8011cb0:	b082      	sub	sp, #8
 8011cb2:	af00      	add	r7, sp, #0
 8011cb4:	6078      	str	r0, [r7, #4]
 8011cb6:	687b      	ldr	r3, [r7, #4]
 8011cb8:	4618      	mov	r0, r3
 8011cba:	f000 f9ae 	bl	801201a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE13_Rb_tree_implISL_Lb1EEC1Ev>
 8011cbe:	687b      	ldr	r3, [r7, #4]
 8011cc0:	4618      	mov	r0, r3
 8011cc2:	3708      	adds	r7, #8
 8011cc4:	46bd      	mov	sp, r7
 8011cc6:	bd80      	pop	{r7, pc}

08011cc8 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISA_EEESt4lessIS5_ESaISt4pairIKS5_SE_EEEC1Ev>:
      map() = default;
 8011cc8:	b580      	push	{r7, lr}
 8011cca:	b082      	sub	sp, #8
 8011ccc:	af00      	add	r7, sp, #0
 8011cce:	6078      	str	r0, [r7, #4]
 8011cd0:	687b      	ldr	r3, [r7, #4]
 8011cd2:	4618      	mov	r0, r3
 8011cd4:	f7ff ffeb 	bl	8011cae <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EEC1Ev>
 8011cd8:	687b      	ldr	r3, [r7, #4]
 8011cda:	4618      	mov	r0, r3
 8011cdc:	3708      	adds	r7, #8
 8011cde:	46bd      	mov	sp, r7
 8011ce0:	bd80      	pop	{r7, pc}

08011ce2 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISA_EEESt4lessIS5_ESaISt4pairIKS5_SE_EEED1Ev>:
      ~map() = default;
 8011ce2:	b580      	push	{r7, lr}
 8011ce4:	b082      	sub	sp, #8
 8011ce6:	af00      	add	r7, sp, #0
 8011ce8:	6078      	str	r0, [r7, #4]
 8011cea:	687b      	ldr	r3, [r7, #4]
 8011cec:	4618      	mov	r0, r3
 8011cee:	f000 f9b5 	bl	801205c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EED1Ev>
 8011cf2:	687b      	ldr	r3, [r7, #4]
 8011cf4:	4618      	mov	r0, r3
 8011cf6:	3708      	adds	r7, #8
 8011cf8:	46bd      	mov	sp, r7
 8011cfa:	bd80      	pop	{r7, pc}

08011cfc <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISB_EEEED1Ev>:
 8011cfc:	b580      	push	{r7, lr}
 8011cfe:	b082      	sub	sp, #8
 8011d00:	af00      	add	r7, sp, #0
 8011d02:	6078      	str	r0, [r7, #4]
 8011d04:	687b      	ldr	r3, [r7, #4]
 8011d06:	4618      	mov	r0, r3
 8011d08:	f011 f82f 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8011d0c:	687b      	ldr	r3, [r7, #4]
 8011d0e:	4618      	mov	r0, r3
 8011d10:	3708      	adds	r7, #8
 8011d12:	46bd      	mov	sp, r7
 8011d14:	bd80      	pop	{r7, pc}
	...

08011d18 <_ZN14Method_handlerC1Ev>:

}

Method_handler::Method_handler()
 8011d18:	b590      	push	{r4, r7, lr}
 8011d1a:	b08d      	sub	sp, #52	; 0x34
 8011d1c:	af00      	add	r7, sp, #0
 8011d1e:	6078      	str	r0, [r7, #4]
 8011d20:	687b      	ldr	r3, [r7, #4]
 8011d22:	4618      	mov	r0, r3
 8011d24:	f7ff ffd0 	bl	8011cc8 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISA_EEESt4lessIS5_ESaISt4pairIKS5_SE_EEEC1Ev>
{
	ADD_METHOD(resize);
 8011d28:	687c      	ldr	r4, [r7, #4]
 8011d2a:	4b0e      	ldr	r3, [pc, #56]	; (8011d64 <_ZN14Method_handlerC1Ev+0x4c>)
 8011d2c:	62fb      	str	r3, [r7, #44]	; 0x2c
 8011d2e:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 8011d32:	f107 0310 	add.w	r3, r7, #16
 8011d36:	490c      	ldr	r1, [pc, #48]	; (8011d68 <_ZN14Method_handlerC1Ev+0x50>)
 8011d38:	4618      	mov	r0, r3
 8011d3a:	f000 f9a4 	bl	8012086 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISB_EEEEC1IRA7_KcSF_Lb1EEEOT_OT0_>
 8011d3e:	f107 0308 	add.w	r3, r7, #8
 8011d42:	f107 0210 	add.w	r2, r7, #16
 8011d46:	4621      	mov	r1, r4
 8011d48:	4618      	mov	r0, r3
 8011d4a:	f000 f9c4 	bl	80120d6 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISA_EEESt4lessIS5_ESaISt4pairIKS5_SE_EEE6insertEOSJ_>
 8011d4e:	f107 0310 	add.w	r3, r7, #16
 8011d52:	4618      	mov	r0, r3
 8011d54:	f7ff ffd2 	bl	8011cfc <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISB_EEEED1Ev>
}
 8011d58:	687b      	ldr	r3, [r7, #4]
 8011d5a:	4618      	mov	r0, r3
 8011d5c:	3734      	adds	r7, #52	; 0x34
 8011d5e:	46bd      	mov	sp, r7
 8011d60:	bd90      	pop	{r4, r7, pc}
 8011d62:	bf00      	nop
 8011d64:	08011c15 	.word	0x08011c15
 8011d68:	08027898 	.word	0x08027898

08011d6c <_ZN14Method_handlerD1Ev>:

typedef void (*method_pointer)(Symbol&, arglist);

#define ADD_METHOD(x) methods.insert({#x, &x});

class Method_handler
 8011d6c:	b580      	push	{r7, lr}
 8011d6e:	b082      	sub	sp, #8
 8011d70:	af00      	add	r7, sp, #0
 8011d72:	6078      	str	r0, [r7, #4]
 8011d74:	687b      	ldr	r3, [r7, #4]
 8011d76:	4618      	mov	r0, r3
 8011d78:	f7ff ffb3 	bl	8011ce2 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISA_EEESt4lessIS5_ESaISt4pairIKS5_SE_EEED1Ev>
 8011d7c:	687b      	ldr	r3, [r7, #4]
 8011d7e:	4618      	mov	r0, r3
 8011d80:	3708      	adds	r7, #8
 8011d82:	46bd      	mov	sp, r7
 8011d84:	bd80      	pop	{r7, pc}
	...

08011d88 <__tcf_0>:

void Method_handler::run_method(Method_call *mcall)
{
	static Method_handler instance;
 8011d88:	b580      	push	{r7, lr}
 8011d8a:	af00      	add	r7, sp, #0
 8011d8c:	4801      	ldr	r0, [pc, #4]	; (8011d94 <__tcf_0+0xc>)
 8011d8e:	f7ff ffed 	bl	8011d6c <_ZN14Method_handlerD1Ev>
 8011d92:	bd80      	pop	{r7, pc}
 8011d94:	20000408 	.word	0x20000408

08011d98 <_ZN14Method_handler10run_methodEP11Method_call>:
{
 8011d98:	b590      	push	{r4, r7, lr}
 8011d9a:	b09f      	sub	sp, #124	; 0x7c
 8011d9c:	af00      	add	r7, sp, #0
 8011d9e:	6078      	str	r0, [r7, #4]
	static Method_handler instance;
 8011da0:	4b50      	ldr	r3, [pc, #320]	; (8011ee4 <_ZN14Method_handler10run_methodEP11Method_call+0x14c>)
 8011da2:	781b      	ldrb	r3, [r3, #0]
 8011da4:	f3bf 8f5b 	dmb	ish
 8011da8:	b2db      	uxtb	r3, r3
 8011daa:	f003 0301 	and.w	r3, r3, #1
 8011dae:	2b00      	cmp	r3, #0
 8011db0:	bf0c      	ite	eq
 8011db2:	2301      	moveq	r3, #1
 8011db4:	2300      	movne	r3, #0
 8011db6:	b2db      	uxtb	r3, r3
 8011db8:	2b00      	cmp	r3, #0
 8011dba:	d013      	beq.n	8011de4 <_ZN14Method_handler10run_methodEP11Method_call+0x4c>
 8011dbc:	4849      	ldr	r0, [pc, #292]	; (8011ee4 <_ZN14Method_handler10run_methodEP11Method_call+0x14c>)
 8011dbe:	f010 fd23 	bl	8022808 <__cxa_guard_acquire>
 8011dc2:	4603      	mov	r3, r0
 8011dc4:	2b00      	cmp	r3, #0
 8011dc6:	bf14      	ite	ne
 8011dc8:	2301      	movne	r3, #1
 8011dca:	2300      	moveq	r3, #0
 8011dcc:	b2db      	uxtb	r3, r3
 8011dce:	2b00      	cmp	r3, #0
 8011dd0:	d008      	beq.n	8011de4 <_ZN14Method_handler10run_methodEP11Method_call+0x4c>
 8011dd2:	4845      	ldr	r0, [pc, #276]	; (8011ee8 <_ZN14Method_handler10run_methodEP11Method_call+0x150>)
 8011dd4:	f7ff ffa0 	bl	8011d18 <_ZN14Method_handlerC1Ev>
 8011dd8:	4842      	ldr	r0, [pc, #264]	; (8011ee4 <_ZN14Method_handler10run_methodEP11Method_call+0x14c>)
 8011dda:	f010 fd21 	bl	8022820 <__cxa_guard_release>
 8011dde:	4843      	ldr	r0, [pc, #268]	; (8011eec <_ZN14Method_handler10run_methodEP11Method_call+0x154>)
 8011de0:	f012 f957 	bl	8024092 <atexit>

	Position_counter::get_instance().line = mcall->call->line;
 8011de4:	687b      	ldr	r3, [r7, #4]
 8011de6:	685b      	ldr	r3, [r3, #4]
 8011de8:	681c      	ldr	r4, [r3, #0]
 8011dea:	f004 fb21 	bl	8016430 <_ZN16Position_counter12get_instanceEv>
 8011dee:	4603      	mov	r3, r0
 8011df0:	601c      	str	r4, [r3, #0]
	Position_counter::get_instance().position = mcall->call->position;
 8011df2:	687b      	ldr	r3, [r7, #4]
 8011df4:	685b      	ldr	r3, [r3, #4]
 8011df6:	685c      	ldr	r4, [r3, #4]
 8011df8:	f004 fb1a 	bl	8016430 <_ZN16Position_counter12get_instanceEv>
 8011dfc:	4603      	mov	r3, r0
 8011dfe:	605c      	str	r4, [r3, #4]

	auto search = instance.methods.find(mcall->call->id);
 8011e00:	687b      	ldr	r3, [r7, #4]
 8011e02:	685b      	ldr	r3, [r3, #4]
 8011e04:	3308      	adds	r3, #8
 8011e06:	4619      	mov	r1, r3
 8011e08:	4837      	ldr	r0, [pc, #220]	; (8011ee8 <_ZN14Method_handler10run_methodEP11Method_call+0x150>)
 8011e0a:	f000 f978 	bl	80120fe <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISA_EEESt4lessIS5_ESaISt4pairIKS5_SE_EEE4findERSI_>
 8011e0e:	4603      	mov	r3, r0
 8011e10:	60fb      	str	r3, [r7, #12]
	if (search == instance.methods.end())
 8011e12:	4835      	ldr	r0, [pc, #212]	; (8011ee8 <_ZN14Method_handler10run_methodEP11Method_call+0x150>)
 8011e14:	f000 f982 	bl	801211c <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISA_EEESt4lessIS5_ESaISt4pairIKS5_SE_EEE3endEv>
 8011e18:	4603      	mov	r3, r0
 8011e1a:	613b      	str	r3, [r7, #16]
 8011e1c:	f107 0210 	add.w	r2, r7, #16
 8011e20:	f107 030c 	add.w	r3, r7, #12
 8011e24:	4611      	mov	r1, r2
 8011e26:	4618      	mov	r0, r3
 8011e28:	f000 f985 	bl	8012136 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEESK_>
 8011e2c:	4603      	mov	r3, r0
 8011e2e:	2b00      	cmp	r3, #0
 8011e30:	d020      	beq.n	8011e74 <_ZN14Method_handler10run_methodEP11Method_call+0xdc>
	{
		Transmitter::report_error(std::string("method " + mcall->call->id + " not found"));
 8011e32:	687b      	ldr	r3, [r7, #4]
 8011e34:	685b      	ldr	r3, [r3, #4]
 8011e36:	f103 0208 	add.w	r2, r3, #8
 8011e3a:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8011e3e:	492c      	ldr	r1, [pc, #176]	; (8011ef0 <_ZN14Method_handler10run_methodEP11Method_call+0x158>)
 8011e40:	4618      	mov	r0, r3
 8011e42:	f7fc f950 	bl	800e0e6 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>
 8011e46:	f107 0314 	add.w	r3, r7, #20
 8011e4a:	f107 012c 	add.w	r1, r7, #44	; 0x2c
 8011e4e:	4a29      	ldr	r2, [pc, #164]	; (8011ef4 <_ZN14Method_handler10run_methodEP11Method_call+0x15c>)
 8011e50:	4618      	mov	r0, r3
 8011e52:	f7fc f96d 	bl	800e130 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_>
 8011e56:	f107 0314 	add.w	r3, r7, #20
 8011e5a:	4618      	mov	r0, r3
 8011e5c:	f006 f960 	bl	8018120 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8011e60:	f107 0314 	add.w	r3, r7, #20
 8011e64:	4618      	mov	r0, r3
 8011e66:	f010 ff80 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8011e6a:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8011e6e:	4618      	mov	r0, r3
 8011e70:	f010 ff7b 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	}
	method_pointer method = search->second;
 8011e74:	f107 030c 	add.w	r3, r7, #12
 8011e78:	4618      	mov	r0, r3
 8011e7a:	f000 f970 	bl	801215e <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEptEv>
 8011e7e:	4603      	mov	r3, r0
 8011e80:	699b      	ldr	r3, [r3, #24]
 8011e82:	677b      	str	r3, [r7, #116]	; 0x74

	Symbol& var = Variable_handler::get_instance().get_symbol(*mcall->vector);
 8011e84:	f006 fc6a 	bl	801875c <_ZN16Variable_handler12get_instanceEv>
 8011e88:	4604      	mov	r4, r0
 8011e8a:	687b      	ldr	r3, [r7, #4]
 8011e8c:	681a      	ldr	r2, [r3, #0]
 8011e8e:	f107 0344 	add.w	r3, r7, #68	; 0x44
 8011e92:	4611      	mov	r1, r2
 8011e94:	4618      	mov	r0, r3
 8011e96:	f7ef fc73 	bl	8001780 <_ZN8VariableC1ERKS_>
 8011e9a:	f107 0344 	add.w	r3, r7, #68	; 0x44
 8011e9e:	4619      	mov	r1, r3
 8011ea0:	4620      	mov	r0, r4
 8011ea2:	f006 fd30 	bl	8018906 <_ZN16Variable_handler10get_symbolE8Variable>
 8011ea6:	6738      	str	r0, [r7, #112]	; 0x70
 8011ea8:	f107 0344 	add.w	r3, r7, #68	; 0x44
 8011eac:	4618      	mov	r0, r3
 8011eae:	f004 fb47 	bl	8016540 <_ZN8VariableD1Ev>

	method(var, mcall->call->arguments);
 8011eb2:	6f7c      	ldr	r4, [r7, #116]	; 0x74
 8011eb4:	687b      	ldr	r3, [r7, #4]
 8011eb6:	685b      	ldr	r3, [r3, #4]
 8011eb8:	f103 0220 	add.w	r2, r3, #32
 8011ebc:	f107 0364 	add.w	r3, r7, #100	; 0x64
 8011ec0:	4611      	mov	r1, r2
 8011ec2:	4618      	mov	r0, r3
 8011ec4:	f7fc f8b7 	bl	800e036 <_ZNSt6vectorIP10ExpressionSaIS1_EEC1ERKS3_>
 8011ec8:	f107 0364 	add.w	r3, r7, #100	; 0x64
 8011ecc:	4619      	mov	r1, r3
 8011ece:	6f38      	ldr	r0, [r7, #112]	; 0x70
 8011ed0:	47a0      	blx	r4
 8011ed2:	f107 0364 	add.w	r3, r7, #100	; 0x64
 8011ed6:	4618      	mov	r0, r3
 8011ed8:	f7fc f8ea 	bl	800e0b0 <_ZNSt6vectorIP10ExpressionSaIS1_EED1Ev>
}
 8011edc:	bf00      	nop
 8011ede:	377c      	adds	r7, #124	; 0x7c
 8011ee0:	46bd      	mov	sp, r7
 8011ee2:	bd90      	pop	{r4, r7, pc}
 8011ee4:	20000420 	.word	0x20000420
 8011ee8:	20000408 	.word	0x20000408
 8011eec:	08011d89 	.word	0x08011d89
 8011ef0:	080278a0 	.word	0x080278a0
 8011ef4:	080278a8 	.word	0x080278a8

08011ef8 <_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_jPKS8_St9__va_listEjSB_z>:

  // Helper for the to_string / to_wstring functions.
  template<typename _String, typename _CharT = typename _String::value_type>
    _String
    __to_xstring(int (*__convf) (_CharT*, std::size_t, const _CharT*,
 8011ef8:	b408      	push	{r3}
 8011efa:	b590      	push	{r4, r7, lr}
 8011efc:	b088      	sub	sp, #32
 8011efe:	af00      	add	r7, sp, #0
 8011f00:	60f8      	str	r0, [r7, #12]
 8011f02:	60b9      	str	r1, [r7, #8]
 8011f04:	607a      	str	r2, [r7, #4]
				 __builtin_va_list), std::size_t __n,
		 const _CharT* __fmt, ...)
    {
      // XXX Eventually the result should be constructed in-place in
      // the __cxx11 string, likely with the help of internal hooks.
      _CharT* __s = static_cast<_CharT*>(__builtin_alloca(sizeof(_CharT)
 8011f06:	687b      	ldr	r3, [r7, #4]
 8011f08:	3307      	adds	r3, #7
 8011f0a:	08db      	lsrs	r3, r3, #3
 8011f0c:	00db      	lsls	r3, r3, #3
 8011f0e:	ebad 0d03 	sub.w	sp, sp, r3
 8011f12:	466b      	mov	r3, sp
 8011f14:	3307      	adds	r3, #7
 8011f16:	08db      	lsrs	r3, r3, #3
 8011f18:	00db      	lsls	r3, r3, #3
 8011f1a:	61fb      	str	r3, [r7, #28]
							  * __n));

      __builtin_va_list __args;
      __builtin_va_start(__args, __fmt);
 8011f1c:	f107 0330 	add.w	r3, r7, #48	; 0x30
 8011f20:	613b      	str	r3, [r7, #16]

      const int __len = __convf(__s, __n, __fmt, __args);
 8011f22:	68bc      	ldr	r4, [r7, #8]
 8011f24:	693b      	ldr	r3, [r7, #16]
 8011f26:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8011f28:	6879      	ldr	r1, [r7, #4]
 8011f2a:	69f8      	ldr	r0, [r7, #28]
 8011f2c:	47a0      	blx	r4
 8011f2e:	61b8      	str	r0, [r7, #24]

      __builtin_va_end(__args);

      return _String(__s, __s + __len);
 8011f30:	69bb      	ldr	r3, [r7, #24]
 8011f32:	69fa      	ldr	r2, [r7, #28]
 8011f34:	18d4      	adds	r4, r2, r3
 8011f36:	f107 0314 	add.w	r3, r7, #20
 8011f3a:	4618      	mov	r0, r3
 8011f3c:	f010 fc84 	bl	8022848 <_ZNSaIcEC1Ev>
 8011f40:	f107 0314 	add.w	r3, r7, #20
 8011f44:	4622      	mov	r2, r4
 8011f46:	69f9      	ldr	r1, [r7, #28]
 8011f48:	68f8      	ldr	r0, [r7, #12]
 8011f4a:	f000 f916 	bl	801217a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IPcvEET_S7_RKS3_>
 8011f4e:	f107 0314 	add.w	r3, r7, #20
 8011f52:	4618      	mov	r0, r3
 8011f54:	f010 fc79 	bl	802284a <_ZNSaIcED1Ev>
 8011f58:	bf00      	nop
    }
 8011f5a:	68f8      	ldr	r0, [r7, #12]
 8011f5c:	3720      	adds	r7, #32
 8011f5e:	46bd      	mov	sp, r7
 8011f60:	e8bd 4090 	ldmia.w	sp!, {r4, r7, lr}
 8011f64:	b001      	add	sp, #4
 8011f66:	4770      	bx	lr

08011f68 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_>:
    operator+(const _CharT* __lhs,
 8011f68:	b580      	push	{r7, lr}
 8011f6a:	b084      	sub	sp, #16
 8011f6c:	af00      	add	r7, sp, #0
 8011f6e:	60f8      	str	r0, [r7, #12]
 8011f70:	60b9      	str	r1, [r7, #8]
 8011f72:	607a      	str	r2, [r7, #4]
    { return std::move(__rhs.insert(0, __lhs)); }
 8011f74:	68ba      	ldr	r2, [r7, #8]
 8011f76:	2100      	movs	r1, #0
 8011f78:	6878      	ldr	r0, [r7, #4]
 8011f7a:	f011 f833 	bl	8022fe4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjPKc>
 8011f7e:	4603      	mov	r3, r0
 8011f80:	4618      	mov	r0, r3
 8011f82:	f7f6 f901 	bl	8008188 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
 8011f86:	4603      	mov	r3, r0
 8011f88:	4619      	mov	r1, r3
 8011f8a:	68f8      	ldr	r0, [r7, #12]
 8011f8c:	f010 fed3 	bl	8022d36 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_>
 8011f90:	68f8      	ldr	r0, [r7, #12]
 8011f92:	3710      	adds	r7, #16
 8011f94:	46bd      	mov	sp, r7
 8011f96:	bd80      	pop	{r7, pc}

08011f98 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_>:
    operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
 8011f98:	b590      	push	{r4, r7, lr}
 8011f9a:	b087      	sub	sp, #28
 8011f9c:	af00      	add	r7, sp, #0
 8011f9e:	60f8      	str	r0, [r7, #12]
 8011fa0:	60b9      	str	r1, [r7, #8]
 8011fa2:	607a      	str	r2, [r7, #4]
      const auto __size = __lhs.size() + __rhs.size();
 8011fa4:	68b8      	ldr	r0, [r7, #8]
 8011fa6:	f010 ff14 	bl	8022dd2 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
 8011faa:	4604      	mov	r4, r0
 8011fac:	6878      	ldr	r0, [r7, #4]
 8011fae:	f010 ff10 	bl	8022dd2 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
 8011fb2:	4603      	mov	r3, r0
 8011fb4:	4423      	add	r3, r4
 8011fb6:	617b      	str	r3, [r7, #20]
      const bool __cond = (__size > __lhs.capacity()
 8011fb8:	68b8      	ldr	r0, [r7, #8]
 8011fba:	f010 ff0e 	bl	8022dda <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv>
 8011fbe:	4602      	mov	r2, r0
			   && __size <= __rhs.capacity());
 8011fc0:	697b      	ldr	r3, [r7, #20]
 8011fc2:	4293      	cmp	r3, r2
 8011fc4:	d908      	bls.n	8011fd8 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_+0x40>
 8011fc6:	6878      	ldr	r0, [r7, #4]
 8011fc8:	f010 ff07 	bl	8022dda <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv>
 8011fcc:	4602      	mov	r2, r0
 8011fce:	697b      	ldr	r3, [r7, #20]
 8011fd0:	4293      	cmp	r3, r2
 8011fd2:	d801      	bhi.n	8011fd8 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_+0x40>
 8011fd4:	2301      	movs	r3, #1
 8011fd6:	e000      	b.n	8011fda <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_+0x42>
 8011fd8:	2300      	movs	r3, #0
      const bool __cond = (__size > __lhs.capacity()
 8011fda:	74fb      	strb	r3, [r7, #19]
	            : std::move(__lhs.append(__rhs));
 8011fdc:	7cfb      	ldrb	r3, [r7, #19]
 8011fde:	2b00      	cmp	r3, #0
 8011fe0:	d00a      	beq.n	8011ff8 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_+0x60>
      return __cond ? std::move(__rhs.insert(0, __lhs))
 8011fe2:	68ba      	ldr	r2, [r7, #8]
 8011fe4:	2100      	movs	r1, #0
 8011fe6:	6878      	ldr	r0, [r7, #4]
 8011fe8:	f010 fff2 	bl	8022fd0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjRKS4_>
 8011fec:	4603      	mov	r3, r0
 8011fee:	4618      	mov	r0, r3
 8011ff0:	f7f6 f8ca 	bl	8008188 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
 8011ff4:	4603      	mov	r3, r0
 8011ff6:	e008      	b.n	801200a <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_+0x72>
	            : std::move(__lhs.append(__rhs));
 8011ff8:	6879      	ldr	r1, [r7, #4]
 8011ffa:	68b8      	ldr	r0, [r7, #8]
 8011ffc:	f011 f824 	bl	8023048 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_>
 8012000:	4603      	mov	r3, r0
 8012002:	4618      	mov	r0, r3
 8012004:	f7f6 f8c0 	bl	8008188 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
 8012008:	4603      	mov	r3, r0
 801200a:	4619      	mov	r1, r3
 801200c:	68f8      	ldr	r0, [r7, #12]
 801200e:	f010 fe92 	bl	8022d36 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_>
    }
 8012012:	68f8      	ldr	r0, [r7, #12]
 8012014:	371c      	adds	r7, #28
 8012016:	46bd      	mov	sp, r7
 8012018:	bd90      	pop	{r4, r7, pc}

0801201a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE13_Rb_tree_implISL_Lb1EEC1Ev>:
	  _Rb_tree_impl()
 801201a:	b580      	push	{r7, lr}
 801201c:	b082      	sub	sp, #8
 801201e:	af00      	add	r7, sp, #0
 8012020:	6078      	str	r0, [r7, #4]
	  : _Node_allocator()
 8012022:	6878      	ldr	r0, [r7, #4]
 8012024:	f000 f8c4 	bl	80121b0 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEEC1Ev>
 8012028:	687b      	ldr	r3, [r7, #4]
 801202a:	4618      	mov	r0, r3
 801202c:	f000 f8cc 	bl	80121c8 <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>
 8012030:	687b      	ldr	r3, [r7, #4]
 8012032:	3304      	adds	r3, #4
 8012034:	4618      	mov	r0, r3
 8012036:	f7ef f822 	bl	800107e <_ZNSt15_Rb_tree_headerC1Ev>
	  { }
 801203a:	687b      	ldr	r3, [r7, #4]
 801203c:	4618      	mov	r0, r3
 801203e:	3708      	adds	r7, #8
 8012040:	46bd      	mov	sp, r7
 8012042:	bd80      	pop	{r7, pc}

08012044 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
 8012044:	b580      	push	{r7, lr}
 8012046:	b082      	sub	sp, #8
 8012048:	af00      	add	r7, sp, #0
 801204a:	6078      	str	r0, [r7, #4]
 801204c:	6878      	ldr	r0, [r7, #4]
 801204e:	f000 f8c6 	bl	80121de <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISE_EEEEEED1Ev>
 8012052:	687b      	ldr	r3, [r7, #4]
 8012054:	4618      	mov	r0, r3
 8012056:	3708      	adds	r7, #8
 8012058:	46bd      	mov	sp, r7
 801205a:	bd80      	pop	{r7, pc}

0801205c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EED1Ev>:
      ~_Rb_tree() _GLIBCXX_NOEXCEPT
 801205c:	b580      	push	{r7, lr}
 801205e:	b082      	sub	sp, #8
 8012060:	af00      	add	r7, sp, #0
 8012062:	6078      	str	r0, [r7, #4]
      { _M_erase(_M_begin()); }
 8012064:	6878      	ldr	r0, [r7, #4]
 8012066:	f000 f8e4 	bl	8012232 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE8_M_beginEv>
 801206a:	4603      	mov	r3, r0
 801206c:	4619      	mov	r1, r3
 801206e:	6878      	ldr	r0, [r7, #4]
 8012070:	f000 f8c0 	bl	80121f4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE8_M_eraseEPSt13_Rb_tree_nodeISH_E>
 8012074:	687b      	ldr	r3, [r7, #4]
 8012076:	4618      	mov	r0, r3
 8012078:	f7ff fe0d 	bl	8011c96 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE13_Rb_tree_implISL_Lb1EED1Ev>
 801207c:	687b      	ldr	r3, [r7, #4]
 801207e:	4618      	mov	r0, r3
 8012080:	3708      	adds	r7, #8
 8012082:	46bd      	mov	sp, r7
 8012084:	bd80      	pop	{r7, pc}

08012086 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISB_EEEEC1IRA7_KcSF_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 8012086:	b5b0      	push	{r4, r5, r7, lr}
 8012088:	b086      	sub	sp, #24
 801208a:	af00      	add	r7, sp, #0
 801208c:	60f8      	str	r0, [r7, #12]
 801208e:	60b9      	str	r1, [r7, #8]
 8012090:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 8012092:	68fc      	ldr	r4, [r7, #12]
 8012094:	68b8      	ldr	r0, [r7, #8]
 8012096:	f7ef fdaf 	bl	8001bf8 <_ZSt7forwardIRA7_KcEOT_RNSt16remove_referenceIS3_E4typeE>
 801209a:	4605      	mov	r5, r0
 801209c:	f107 0314 	add.w	r3, r7, #20
 80120a0:	4618      	mov	r0, r3
 80120a2:	f010 fbd1 	bl	8022848 <_ZNSaIcEC1Ev>
 80120a6:	f107 0314 	add.w	r3, r7, #20
 80120aa:	461a      	mov	r2, r3
 80120ac:	4629      	mov	r1, r5
 80120ae:	4620      	mov	r0, r4
 80120b0:	f7ef fd71 	bl	8001b96 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 80120b4:	f107 0314 	add.w	r3, r7, #20
 80120b8:	4618      	mov	r0, r3
 80120ba:	f010 fbc6 	bl	802284a <_ZNSaIcED1Ev>
 80120be:	6878      	ldr	r0, [r7, #4]
 80120c0:	f000 f8c3 	bl	801224a <_ZSt7forwardIPFvR6SymbolSt6vectorIP10ExpressionSaIS4_EEEEOT_RNSt16remove_referenceIS9_E4typeE>
 80120c4:	4603      	mov	r3, r0
 80120c6:	681a      	ldr	r2, [r3, #0]
 80120c8:	68fb      	ldr	r3, [r7, #12]
 80120ca:	619a      	str	r2, [r3, #24]
 80120cc:	68fb      	ldr	r3, [r7, #12]
 80120ce:	4618      	mov	r0, r3
 80120d0:	3718      	adds	r7, #24
 80120d2:	46bd      	mov	sp, r7
 80120d4:	bdb0      	pop	{r4, r5, r7, pc}

080120d6 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISA_EEESt4lessIS5_ESaISt4pairIKS5_SE_EEE6insertEOSJ_>:
      insert(value_type&& __x)
 80120d6:	b590      	push	{r4, r7, lr}
 80120d8:	b085      	sub	sp, #20
 80120da:	af00      	add	r7, sp, #0
 80120dc:	60f8      	str	r0, [r7, #12]
 80120de:	60b9      	str	r1, [r7, #8]
 80120e0:	607a      	str	r2, [r7, #4]
      { return _M_t._M_insert_unique(std::move(__x)); }
 80120e2:	68bc      	ldr	r4, [r7, #8]
 80120e4:	6878      	ldr	r0, [r7, #4]
 80120e6:	f000 f8bb 	bl	8012260 <_ZSt4moveIRSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEONSt16remove_referenceIT_E4typeEOSK_>
 80120ea:	4602      	mov	r2, r0
 80120ec:	68fb      	ldr	r3, [r7, #12]
 80120ee:	4621      	mov	r1, r4
 80120f0:	4618      	mov	r0, r3
 80120f2:	f000 f8c0 	bl	8012276 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE16_M_insert_uniqueISH_EES6_ISt17_Rb_tree_iteratorISH_EbEOT_>
 80120f6:	68f8      	ldr	r0, [r7, #12]
 80120f8:	3714      	adds	r7, #20
 80120fa:	46bd      	mov	sp, r7
 80120fc:	bd90      	pop	{r4, r7, pc}

080120fe <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISA_EEESt4lessIS5_ESaISt4pairIKS5_SE_EEE4findERSI_>:
      find(const key_type& __x)
 80120fe:	b580      	push	{r7, lr}
 8012100:	b082      	sub	sp, #8
 8012102:	af00      	add	r7, sp, #0
 8012104:	6078      	str	r0, [r7, #4]
 8012106:	6039      	str	r1, [r7, #0]
      { return _M_t.find(__x); }
 8012108:	687b      	ldr	r3, [r7, #4]
 801210a:	6839      	ldr	r1, [r7, #0]
 801210c:	4618      	mov	r0, r3
 801210e:	f000 f901 	bl	8012314 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE4findERS7_>
 8012112:	4603      	mov	r3, r0
 8012114:	4618      	mov	r0, r3
 8012116:	3708      	adds	r7, #8
 8012118:	46bd      	mov	sp, r7
 801211a:	bd80      	pop	{r7, pc}

0801211c <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISA_EEESt4lessIS5_ESaISt4pairIKS5_SE_EEE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 801211c:	b580      	push	{r7, lr}
 801211e:	b082      	sub	sp, #8
 8012120:	af00      	add	r7, sp, #0
 8012122:	6078      	str	r0, [r7, #4]
      { return _M_t.end(); }
 8012124:	687b      	ldr	r3, [r7, #4]
 8012126:	4618      	mov	r0, r3
 8012128:	f000 f930 	bl	801238c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE3endEv>
 801212c:	4603      	mov	r3, r0
 801212e:	4618      	mov	r0, r3
 8012130:	3708      	adds	r7, #8
 8012132:	46bd      	mov	sp, r7
 8012134:	bd80      	pop	{r7, pc}

08012136 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEESK_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 8012136:	b480      	push	{r7}
 8012138:	b083      	sub	sp, #12
 801213a:	af00      	add	r7, sp, #0
 801213c:	6078      	str	r0, [r7, #4]
 801213e:	6039      	str	r1, [r7, #0]
      { return __x._M_node == __y._M_node; }
 8012140:	687b      	ldr	r3, [r7, #4]
 8012142:	681a      	ldr	r2, [r3, #0]
 8012144:	683b      	ldr	r3, [r7, #0]
 8012146:	681b      	ldr	r3, [r3, #0]
 8012148:	429a      	cmp	r2, r3
 801214a:	bf0c      	ite	eq
 801214c:	2301      	moveq	r3, #1
 801214e:	2300      	movne	r3, #0
 8012150:	b2db      	uxtb	r3, r3
 8012152:	4618      	mov	r0, r3
 8012154:	370c      	adds	r7, #12
 8012156:	46bd      	mov	sp, r7
 8012158:	f85d 7b04 	ldr.w	r7, [sp], #4
 801215c:	4770      	bx	lr

0801215e <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEptEv>:
      operator->() const _GLIBCXX_NOEXCEPT
 801215e:	b580      	push	{r7, lr}
 8012160:	b082      	sub	sp, #8
 8012162:	af00      	add	r7, sp, #0
 8012164:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type> (_M_node)->_M_valptr(); }
 8012166:	687b      	ldr	r3, [r7, #4]
 8012168:	681b      	ldr	r3, [r3, #0]
 801216a:	4618      	mov	r0, r3
 801216c:	f000 f91f 	bl	80123ae <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEE9_M_valptrEv>
 8012170:	4603      	mov	r3, r0
 8012172:	4618      	mov	r0, r3
 8012174:	3708      	adds	r7, #8
 8012176:	46bd      	mov	sp, r7
 8012178:	bd80      	pop	{r7, pc}

0801217a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IPcvEET_S7_RKS3_>:
        basic_string(_InputIterator __beg, _InputIterator __end,
 801217a:	b590      	push	{r4, r7, lr}
 801217c:	b085      	sub	sp, #20
 801217e:	af00      	add	r7, sp, #0
 8012180:	60f8      	str	r0, [r7, #12]
 8012182:	60b9      	str	r1, [r7, #8]
 8012184:	607a      	str	r2, [r7, #4]
 8012186:	603b      	str	r3, [r7, #0]
	: _M_dataplus(_M_local_data(), __a)
 8012188:	68fc      	ldr	r4, [r7, #12]
 801218a:	68f8      	ldr	r0, [r7, #12]
 801218c:	f010 fcdc 	bl	8022b48 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv>
 8012190:	4603      	mov	r3, r0
 8012192:	683a      	ldr	r2, [r7, #0]
 8012194:	4619      	mov	r1, r3
 8012196:	4620      	mov	r0, r4
 8012198:	f010 ffa6 	bl	80230e8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_>
	{ _M_construct(__beg, __end); }
 801219c:	687a      	ldr	r2, [r7, #4]
 801219e:	68b9      	ldr	r1, [r7, #8]
 80121a0:	68f8      	ldr	r0, [r7, #12]
 80121a2:	f000 f912 	bl	80123ca <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_>
 80121a6:	68fb      	ldr	r3, [r7, #12]
 80121a8:	4618      	mov	r0, r3
 80121aa:	3714      	adds	r7, #20
 80121ac:	46bd      	mov	sp, r7
 80121ae:	bd90      	pop	{r4, r7, pc}

080121b0 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
 80121b0:	b580      	push	{r7, lr}
 80121b2:	b082      	sub	sp, #8
 80121b4:	af00      	add	r7, sp, #0
 80121b6:	6078      	str	r0, [r7, #4]
 80121b8:	6878      	ldr	r0, [r7, #4]
 80121ba:	f000 f915 	bl	80123e8 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISE_EEEEEEC1Ev>
 80121be:	687b      	ldr	r3, [r7, #4]
 80121c0:	4618      	mov	r0, r3
 80121c2:	3708      	adds	r7, #8
 80121c4:	46bd      	mov	sp, r7
 80121c6:	bd80      	pop	{r7, pc}

080121c8 <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>:
      _Rb_tree_key_compare()
 80121c8:	b480      	push	{r7}
 80121ca:	b083      	sub	sp, #12
 80121cc:	af00      	add	r7, sp, #0
 80121ce:	6078      	str	r0, [r7, #4]
      { }
 80121d0:	687b      	ldr	r3, [r7, #4]
 80121d2:	4618      	mov	r0, r3
 80121d4:	370c      	adds	r7, #12
 80121d6:	46bd      	mov	sp, r7
 80121d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80121dc:	4770      	bx	lr

080121de <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISE_EEEEEED1Ev>:
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 80121de:	b480      	push	{r7}
 80121e0:	b083      	sub	sp, #12
 80121e2:	af00      	add	r7, sp, #0
 80121e4:	6078      	str	r0, [r7, #4]
 80121e6:	687b      	ldr	r3, [r7, #4]
 80121e8:	4618      	mov	r0, r3
 80121ea:	370c      	adds	r7, #12
 80121ec:	46bd      	mov	sp, r7
 80121ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80121f2:	4770      	bx	lr

080121f4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE8_M_eraseEPSt13_Rb_tree_nodeISH_E>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 80121f4:	b580      	push	{r7, lr}
 80121f6:	b084      	sub	sp, #16
 80121f8:	af00      	add	r7, sp, #0
 80121fa:	6078      	str	r0, [r7, #4]
 80121fc:	6039      	str	r1, [r7, #0]
      while (__x != 0)
 80121fe:	683b      	ldr	r3, [r7, #0]
 8012200:	2b00      	cmp	r3, #0
 8012202:	d012      	beq.n	801222a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE8_M_eraseEPSt13_Rb_tree_nodeISH_E+0x36>
	  _M_erase(_S_right(__x));
 8012204:	6838      	ldr	r0, [r7, #0]
 8012206:	f000 f8fa 	bl	80123fe <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE8_S_rightEPSt18_Rb_tree_node_base>
 801220a:	4603      	mov	r3, r0
 801220c:	4619      	mov	r1, r3
 801220e:	6878      	ldr	r0, [r7, #4]
 8012210:	f7ff fff0 	bl	80121f4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE8_M_eraseEPSt13_Rb_tree_nodeISH_E>
	  _Link_type __y = _S_left(__x);
 8012214:	6838      	ldr	r0, [r7, #0]
 8012216:	f000 f8fe 	bl	8012416 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE7_S_leftEPSt18_Rb_tree_node_base>
 801221a:	60f8      	str	r0, [r7, #12]
	  _M_drop_node(__x);
 801221c:	6839      	ldr	r1, [r7, #0]
 801221e:	6878      	ldr	r0, [r7, #4]
 8012220:	f000 f905 	bl	801242e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE12_M_drop_nodeEPSt13_Rb_tree_nodeISH_E>
	  __x = __y;
 8012224:	68fb      	ldr	r3, [r7, #12]
 8012226:	603b      	str	r3, [r7, #0]
      while (__x != 0)
 8012228:	e7e9      	b.n	80121fe <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE8_M_eraseEPSt13_Rb_tree_nodeISH_E+0xa>
    }
 801222a:	bf00      	nop
 801222c:	3710      	adds	r7, #16
 801222e:	46bd      	mov	sp, r7
 8012230:	bd80      	pop	{r7, pc}

08012232 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE8_M_beginEv>:
      _M_begin() _GLIBCXX_NOEXCEPT
 8012232:	b480      	push	{r7}
 8012234:	b083      	sub	sp, #12
 8012236:	af00      	add	r7, sp, #0
 8012238:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
 801223a:	687b      	ldr	r3, [r7, #4]
 801223c:	689b      	ldr	r3, [r3, #8]
 801223e:	4618      	mov	r0, r3
 8012240:	370c      	adds	r7, #12
 8012242:	46bd      	mov	sp, r7
 8012244:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012248:	4770      	bx	lr

0801224a <_ZSt7forwardIPFvR6SymbolSt6vectorIP10ExpressionSaIS4_EEEEOT_RNSt16remove_referenceIS9_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801224a:	b480      	push	{r7}
 801224c:	b083      	sub	sp, #12
 801224e:	af00      	add	r7, sp, #0
 8012250:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8012252:	687b      	ldr	r3, [r7, #4]
 8012254:	4618      	mov	r0, r3
 8012256:	370c      	adds	r7, #12
 8012258:	46bd      	mov	sp, r7
 801225a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801225e:	4770      	bx	lr

08012260 <_ZSt4moveIRSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEONSt16remove_referenceIT_E4typeEOSK_>:
    move(_Tp&& __t) noexcept
 8012260:	b480      	push	{r7}
 8012262:	b083      	sub	sp, #12
 8012264:	af00      	add	r7, sp, #0
 8012266:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 8012268:	687b      	ldr	r3, [r7, #4]
 801226a:	4618      	mov	r0, r3
 801226c:	370c      	adds	r7, #12
 801226e:	46bd      	mov	sp, r7
 8012270:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012274:	4770      	bx	lr

08012276 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE16_M_insert_uniqueISH_EES6_ISt17_Rb_tree_iteratorISH_EbEOT_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8012276:	b5b0      	push	{r4, r5, r7, lr}
 8012278:	b08e      	sub	sp, #56	; 0x38
 801227a:	af02      	add	r7, sp, #8
 801227c:	60f8      	str	r0, [r7, #12]
 801227e:	60b9      	str	r1, [r7, #8]
 8012280:	607a      	str	r2, [r7, #4]
	= _M_get_insert_unique_pos(_KeyOfValue()(__v));
 8012282:	f107 031c 	add.w	r3, r7, #28
 8012286:	6879      	ldr	r1, [r7, #4]
 8012288:	4618      	mov	r0, r3
 801228a:	f000 f966 	bl	801255a <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEclERSH_>
 801228e:	4602      	mov	r2, r0
      pair<_Base_ptr, _Base_ptr> __res
 8012290:	f107 0314 	add.w	r3, r7, #20
 8012294:	68b9      	ldr	r1, [r7, #8]
 8012296:	4618      	mov	r0, r3
 8012298:	f000 f8da 	bl	8012450 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE24_M_get_insert_unique_posERS7_>
      if (__res.second)
 801229c:	69bb      	ldr	r3, [r7, #24]
 801229e:	2b00      	cmp	r3, #0
 80122a0:	d022      	beq.n	80122e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE16_M_insert_uniqueISH_EES6_ISt17_Rb_tree_iteratorISH_EbEOT_+0x72>
	  _Alloc_node __an(*this);
 80122a2:	f107 0310 	add.w	r3, r7, #16
 80122a6:	68b9      	ldr	r1, [r7, #8]
 80122a8:	4618      	mov	r0, r3
 80122aa:	f000 f962 	bl	8012572 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE11_Alloc_nodeC1ERSN_>
	  return _Res(_M_insert_(__res.first, __res.second,
 80122ae:	697c      	ldr	r4, [r7, #20]
 80122b0:	69bd      	ldr	r5, [r7, #24]
 80122b2:	6878      	ldr	r0, [r7, #4]
 80122b4:	f000 f96c 	bl	8012590 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEOT_RNSt16remove_referenceISI_E4typeE>
 80122b8:	4602      	mov	r2, r0
 80122ba:	f107 0310 	add.w	r3, r7, #16
 80122be:	9300      	str	r3, [sp, #0]
 80122c0:	4613      	mov	r3, r2
 80122c2:	462a      	mov	r2, r5
 80122c4:	4621      	mov	r1, r4
 80122c6:	68b8      	ldr	r0, [r7, #8]
 80122c8:	f000 f96d 	bl	80125a6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE10_M_insert_ISH_NSN_11_Alloc_nodeEEESt17_Rb_tree_iteratorISH_EPSt18_Rb_tree_node_baseST_OT_RT0_>
 80122cc:	4603      	mov	r3, r0
 80122ce:	623b      	str	r3, [r7, #32]
		      true);
 80122d0:	2301      	movs	r3, #1
 80122d2:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 80122d6:	f107 0227 	add.w	r2, r7, #39	; 0x27
 80122da:	f107 0320 	add.w	r3, r7, #32
 80122de:	4619      	mov	r1, r3
 80122e0:	68f8      	ldr	r0, [r7, #12]
 80122e2:	f000 f9a9 	bl	8012638 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEbEC1ISI_bLb1EEEOT_OT0_>
 80122e6:	e011      	b.n	801230c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE16_M_insert_uniqueISH_EES6_ISt17_Rb_tree_iteratorISH_EbEOT_+0x96>
      return _Res(iterator(__res.first), false);
 80122e8:	697a      	ldr	r2, [r7, #20]
 80122ea:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80122ee:	4611      	mov	r1, r2
 80122f0:	4618      	mov	r0, r3
 80122f2:	f000 f9ba 	bl	801266a <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEC1EPSt18_Rb_tree_node_base>
 80122f6:	2300      	movs	r3, #0
 80122f8:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
 80122fc:	f107 022f 	add.w	r2, r7, #47	; 0x2f
 8012300:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8012304:	4619      	mov	r1, r3
 8012306:	68f8      	ldr	r0, [r7, #12]
 8012308:	f000 f996 	bl	8012638 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEbEC1ISI_bLb1EEEOT_OT0_>
    }
 801230c:	68f8      	ldr	r0, [r7, #12]
 801230e:	3730      	adds	r7, #48	; 0x30
 8012310:	46bd      	mov	sp, r7
 8012312:	bdb0      	pop	{r4, r5, r7, pc}

08012314 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE4findERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8012314:	b590      	push	{r4, r7, lr}
 8012316:	b085      	sub	sp, #20
 8012318:	af00      	add	r7, sp, #0
 801231a:	6078      	str	r0, [r7, #4]
 801231c:	6039      	str	r1, [r7, #0]
      iterator __j = _M_lower_bound(_M_begin(), _M_end(), __k);
 801231e:	6878      	ldr	r0, [r7, #4]
 8012320:	f7ff ff87 	bl	8012232 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE8_M_beginEv>
 8012324:	4604      	mov	r4, r0
 8012326:	6878      	ldr	r0, [r7, #4]
 8012328:	f000 f9ae 	bl	8012688 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE6_M_endEv>
 801232c:	4602      	mov	r2, r0
 801232e:	683b      	ldr	r3, [r7, #0]
 8012330:	4621      	mov	r1, r4
 8012332:	6878      	ldr	r0, [r7, #4]
 8012334:	f000 f9b4 	bl	80126a0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE14_M_lower_boundEPSt13_Rb_tree_nodeISH_EPSt18_Rb_tree_node_baseRS7_>
 8012338:	4603      	mov	r3, r0
 801233a:	60bb      	str	r3, [r7, #8]
      return (__j == end()
 801233c:	6878      	ldr	r0, [r7, #4]
 801233e:	f000 f825 	bl	801238c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE3endEv>
 8012342:	4603      	mov	r3, r0
 8012344:	60fb      	str	r3, [r7, #12]
 8012346:	f107 020c 	add.w	r2, r7, #12
 801234a:	f107 0308 	add.w	r3, r7, #8
 801234e:	4611      	mov	r1, r2
 8012350:	4618      	mov	r0, r3
 8012352:	f7ff fef0 	bl	8012136 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEESK_>
 8012356:	4603      	mov	r3, r0
					_S_key(__j._M_node))) ? end() : __j;
 8012358:	2b00      	cmp	r3, #0
 801235a:	d10d      	bne.n	8012378 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE4findERS7_+0x64>
	      || _M_impl._M_key_compare(__k,
 801235c:	687c      	ldr	r4, [r7, #4]
					_S_key(__j._M_node))) ? end() : __j;
 801235e:	68bb      	ldr	r3, [r7, #8]
	      || _M_impl._M_key_compare(__k,
 8012360:	4618      	mov	r0, r3
 8012362:	f000 f9ce 	bl	8012702 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8012366:	4603      	mov	r3, r0
 8012368:	461a      	mov	r2, r3
 801236a:	6839      	ldr	r1, [r7, #0]
 801236c:	4620      	mov	r0, r4
 801236e:	f7f3 f99d 	bl	80056ac <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8012372:	4603      	mov	r3, r0
 8012374:	2b00      	cmp	r3, #0
 8012376:	d004      	beq.n	8012382 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE4findERS7_+0x6e>
					_S_key(__j._M_node))) ? end() : __j;
 8012378:	6878      	ldr	r0, [r7, #4]
 801237a:	f000 f807 	bl	801238c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE3endEv>
 801237e:	4603      	mov	r3, r0
 8012380:	e000      	b.n	8012384 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE4findERS7_+0x70>
 8012382:	68bb      	ldr	r3, [r7, #8]
    }
 8012384:	4618      	mov	r0, r3
 8012386:	3714      	adds	r7, #20
 8012388:	46bd      	mov	sp, r7
 801238a:	bd90      	pop	{r4, r7, pc}

0801238c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 801238c:	b580      	push	{r7, lr}
 801238e:	b084      	sub	sp, #16
 8012390:	af00      	add	r7, sp, #0
 8012392:	6078      	str	r0, [r7, #4]
      { return iterator(&this->_M_impl._M_header); }
 8012394:	687b      	ldr	r3, [r7, #4]
 8012396:	1d1a      	adds	r2, r3, #4
 8012398:	f107 030c 	add.w	r3, r7, #12
 801239c:	4611      	mov	r1, r2
 801239e:	4618      	mov	r0, r3
 80123a0:	f000 f963 	bl	801266a <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEC1EPSt18_Rb_tree_node_base>
 80123a4:	68fb      	ldr	r3, [r7, #12]
 80123a6:	4618      	mov	r0, r3
 80123a8:	3710      	adds	r7, #16
 80123aa:	46bd      	mov	sp, r7
 80123ac:	bd80      	pop	{r7, pc}

080123ae <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEE9_M_valptrEv>:
      _M_valptr()
 80123ae:	b580      	push	{r7, lr}
 80123b0:	b082      	sub	sp, #8
 80123b2:	af00      	add	r7, sp, #0
 80123b4:	6078      	str	r0, [r7, #4]
      { return _M_storage._M_ptr(); }
 80123b6:	687b      	ldr	r3, [r7, #4]
 80123b8:	3310      	adds	r3, #16
 80123ba:	4618      	mov	r0, r3
 80123bc:	f000 f9ad 	bl	801271a <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISD_EEEEE6_M_ptrEv>
 80123c0:	4603      	mov	r3, r0
 80123c2:	4618      	mov	r0, r3
 80123c4:	3708      	adds	r7, #8
 80123c6:	46bd      	mov	sp, r7
 80123c8:	bd80      	pop	{r7, pc}

080123ca <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_>:
        _M_construct(_InIterator __beg, _InIterator __end)
 80123ca:	b580      	push	{r7, lr}
 80123cc:	b084      	sub	sp, #16
 80123ce:	af00      	add	r7, sp, #0
 80123d0:	60f8      	str	r0, [r7, #12]
 80123d2:	60b9      	str	r1, [r7, #8]
 80123d4:	607a      	str	r2, [r7, #4]
	  _M_construct_aux(__beg, __end, _Integral());
 80123d6:	687a      	ldr	r2, [r7, #4]
 80123d8:	68b9      	ldr	r1, [r7, #8]
 80123da:	68f8      	ldr	r0, [r7, #12]
 80123dc:	f000 f9a9 	bl	8012732 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_construct_auxIPcEEvT_S7_St12__false_type>
        }
 80123e0:	bf00      	nop
 80123e2:	3710      	adds	r7, #16
 80123e4:	46bd      	mov	sp, r7
 80123e6:	bd80      	pop	{r7, pc}

080123e8 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISE_EEEEEEC1Ev>:
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 80123e8:	b480      	push	{r7}
 80123ea:	b083      	sub	sp, #12
 80123ec:	af00      	add	r7, sp, #0
 80123ee:	6078      	str	r0, [r7, #4]
 80123f0:	687b      	ldr	r3, [r7, #4]
 80123f2:	4618      	mov	r0, r3
 80123f4:	370c      	adds	r7, #12
 80123f6:	46bd      	mov	sp, r7
 80123f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80123fc:	4770      	bx	lr

080123fe <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE8_S_rightEPSt18_Rb_tree_node_base>:
      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 80123fe:	b480      	push	{r7}
 8012400:	b083      	sub	sp, #12
 8012402:	af00      	add	r7, sp, #0
 8012404:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(__x->_M_right); }
 8012406:	687b      	ldr	r3, [r7, #4]
 8012408:	68db      	ldr	r3, [r3, #12]
 801240a:	4618      	mov	r0, r3
 801240c:	370c      	adds	r7, #12
 801240e:	46bd      	mov	sp, r7
 8012410:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012414:	4770      	bx	lr

08012416 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE7_S_leftEPSt18_Rb_tree_node_base>:
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 8012416:	b480      	push	{r7}
 8012418:	b083      	sub	sp, #12
 801241a:	af00      	add	r7, sp, #0
 801241c:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(__x->_M_left); }
 801241e:	687b      	ldr	r3, [r7, #4]
 8012420:	689b      	ldr	r3, [r3, #8]
 8012422:	4618      	mov	r0, r3
 8012424:	370c      	adds	r7, #12
 8012426:	46bd      	mov	sp, r7
 8012428:	f85d 7b04 	ldr.w	r7, [sp], #4
 801242c:	4770      	bx	lr

0801242e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE12_M_drop_nodeEPSt13_Rb_tree_nodeISH_E>:
      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 801242e:	b580      	push	{r7, lr}
 8012430:	b082      	sub	sp, #8
 8012432:	af00      	add	r7, sp, #0
 8012434:	6078      	str	r0, [r7, #4]
 8012436:	6039      	str	r1, [r7, #0]
	_M_destroy_node(__p);
 8012438:	6839      	ldr	r1, [r7, #0]
 801243a:	6878      	ldr	r0, [r7, #4]
 801243c:	f000 f98a 	bl	8012754 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeISH_E>
	_M_put_node(__p);
 8012440:	6839      	ldr	r1, [r7, #0]
 8012442:	6878      	ldr	r0, [r7, #4]
 8012444:	f000 f99b 	bl	801277e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE11_M_put_nodeEPSt13_Rb_tree_nodeISH_E>
      }
 8012448:	bf00      	nop
 801244a:	3708      	adds	r7, #8
 801244c:	46bd      	mov	sp, r7
 801244e:	bd80      	pop	{r7, pc}

08012450 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE24_M_get_insert_unique_posERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8012450:	b590      	push	{r4, r7, lr}
 8012452:	b08b      	sub	sp, #44	; 0x2c
 8012454:	af00      	add	r7, sp, #0
 8012456:	60f8      	str	r0, [r7, #12]
 8012458:	60b9      	str	r1, [r7, #8]
 801245a:	607a      	str	r2, [r7, #4]
      _Link_type __x = _M_begin();
 801245c:	68b8      	ldr	r0, [r7, #8]
 801245e:	f7ff fee8 	bl	8012232 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE8_M_beginEv>
 8012462:	4603      	mov	r3, r0
 8012464:	61bb      	str	r3, [r7, #24]
      _Base_ptr __y = _M_end();
 8012466:	68b8      	ldr	r0, [r7, #8]
 8012468:	f000 f90e 	bl	8012688 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE6_M_endEv>
 801246c:	4603      	mov	r3, r0
 801246e:	617b      	str	r3, [r7, #20]
      bool __comp = true;
 8012470:	2301      	movs	r3, #1
 8012472:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
      while (__x != 0)
 8012476:	69bb      	ldr	r3, [r7, #24]
 8012478:	2b00      	cmp	r3, #0
 801247a:	d020      	beq.n	80124be <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE24_M_get_insert_unique_posERS7_+0x6e>
	  __y = __x;
 801247c:	69bb      	ldr	r3, [r7, #24]
 801247e:	617b      	str	r3, [r7, #20]
	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
 8012480:	68bc      	ldr	r4, [r7, #8]
 8012482:	69bb      	ldr	r3, [r7, #24]
 8012484:	4618      	mov	r0, r3
 8012486:	f000 f98c 	bl	80127a2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE6_S_keyEPKSt13_Rb_tree_nodeISH_E>
 801248a:	4603      	mov	r3, r0
 801248c:	461a      	mov	r2, r3
 801248e:	6879      	ldr	r1, [r7, #4]
 8012490:	4620      	mov	r0, r4
 8012492:	f7f3 f90b 	bl	80056ac <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8012496:	4603      	mov	r3, r0
 8012498:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
	  __x = __comp ? _S_left(__x) : _S_right(__x);
 801249c:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 80124a0:	2b00      	cmp	r3, #0
 80124a2:	d005      	beq.n	80124b0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE24_M_get_insert_unique_posERS7_+0x60>
 80124a4:	69bb      	ldr	r3, [r7, #24]
 80124a6:	4618      	mov	r0, r3
 80124a8:	f7ff ffb5 	bl	8012416 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE7_S_leftEPSt18_Rb_tree_node_base>
 80124ac:	4603      	mov	r3, r0
 80124ae:	e004      	b.n	80124ba <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE24_M_get_insert_unique_posERS7_+0x6a>
 80124b0:	69bb      	ldr	r3, [r7, #24]
 80124b2:	4618      	mov	r0, r3
 80124b4:	f7ff ffa3 	bl	80123fe <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE8_S_rightEPSt18_Rb_tree_node_base>
 80124b8:	4603      	mov	r3, r0
 80124ba:	61bb      	str	r3, [r7, #24]
      while (__x != 0)
 80124bc:	e7db      	b.n	8012476 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE24_M_get_insert_unique_posERS7_+0x26>
      iterator __j = iterator(__y);
 80124be:	697a      	ldr	r2, [r7, #20]
 80124c0:	f107 0310 	add.w	r3, r7, #16
 80124c4:	4611      	mov	r1, r2
 80124c6:	4618      	mov	r0, r3
 80124c8:	f000 f8cf 	bl	801266a <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEC1EPSt18_Rb_tree_node_base>
      if (__comp)
 80124cc:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 80124d0:	2b00      	cmp	r3, #0
 80124d2:	d01d      	beq.n	8012510 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE24_M_get_insert_unique_posERS7_+0xc0>
	  if (__j == begin())
 80124d4:	68b8      	ldr	r0, [r7, #8]
 80124d6:	f000 f977 	bl	80127c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE5beginEv>
 80124da:	4603      	mov	r3, r0
 80124dc:	61fb      	str	r3, [r7, #28]
 80124de:	f107 021c 	add.w	r2, r7, #28
 80124e2:	f107 0310 	add.w	r3, r7, #16
 80124e6:	4611      	mov	r1, r2
 80124e8:	4618      	mov	r0, r3
 80124ea:	f7ff fe24 	bl	8012136 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEESK_>
 80124ee:	4603      	mov	r3, r0
 80124f0:	2b00      	cmp	r3, #0
 80124f2:	d008      	beq.n	8012506 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE24_M_get_insert_unique_posERS7_+0xb6>
	    return _Res(__x, __y);
 80124f4:	f107 0214 	add.w	r2, r7, #20
 80124f8:	f107 0318 	add.w	r3, r7, #24
 80124fc:	4619      	mov	r1, r3
 80124fe:	68f8      	ldr	r0, [r7, #12]
 8012500:	f000 f973 	bl	80127ea <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISG_EEEEERS1_Lb1EEEOT_OT0_>
 8012504:	e025      	b.n	8012552 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE24_M_get_insert_unique_posERS7_+0x102>
	    --__j;
 8012506:	f107 0310 	add.w	r3, r7, #16
 801250a:	4618      	mov	r0, r3
 801250c:	f000 f986 	bl	801281c <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEmmEv>
      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
 8012510:	68bc      	ldr	r4, [r7, #8]
 8012512:	693b      	ldr	r3, [r7, #16]
 8012514:	4618      	mov	r0, r3
 8012516:	f000 f8f4 	bl	8012702 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE6_S_keyEPKSt18_Rb_tree_node_base>
 801251a:	4603      	mov	r3, r0
 801251c:	687a      	ldr	r2, [r7, #4]
 801251e:	4619      	mov	r1, r3
 8012520:	4620      	mov	r0, r4
 8012522:	f7f3 f8c3 	bl	80056ac <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8012526:	4603      	mov	r3, r0
 8012528:	2b00      	cmp	r3, #0
 801252a:	d008      	beq.n	801253e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE24_M_get_insert_unique_posERS7_+0xee>
	return _Res(__x, __y);
 801252c:	f107 0214 	add.w	r2, r7, #20
 8012530:	f107 0318 	add.w	r3, r7, #24
 8012534:	4619      	mov	r1, r3
 8012536:	68f8      	ldr	r0, [r7, #12]
 8012538:	f000 f957 	bl	80127ea <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISG_EEEEERS1_Lb1EEEOT_OT0_>
 801253c:	e009      	b.n	8012552 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE24_M_get_insert_unique_posERS7_+0x102>
      return _Res(__j._M_node, 0);
 801253e:	2300      	movs	r3, #0
 8012540:	623b      	str	r3, [r7, #32]
 8012542:	f107 0220 	add.w	r2, r7, #32
 8012546:	f107 0310 	add.w	r3, r7, #16
 801254a:	4619      	mov	r1, r3
 801254c:	68f8      	ldr	r0, [r7, #12]
 801254e:	f7f3 f80f 	bl	8005570 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_>
    }
 8012552:	68f8      	ldr	r0, [r7, #12]
 8012554:	372c      	adds	r7, #44	; 0x2c
 8012556:	46bd      	mov	sp, r7
 8012558:	bd90      	pop	{r4, r7, pc}

0801255a <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEclERSH_>:
      operator()(_Pair& __x) const
 801255a:	b480      	push	{r7}
 801255c:	b083      	sub	sp, #12
 801255e:	af00      	add	r7, sp, #0
 8012560:	6078      	str	r0, [r7, #4]
 8012562:	6039      	str	r1, [r7, #0]
      { return __x.first; }
 8012564:	683b      	ldr	r3, [r7, #0]
 8012566:	4618      	mov	r0, r3
 8012568:	370c      	adds	r7, #12
 801256a:	46bd      	mov	sp, r7
 801256c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012570:	4770      	bx	lr

08012572 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE11_Alloc_nodeC1ERSN_>:
	_Alloc_node(_Rb_tree& __t)
 8012572:	b480      	push	{r7}
 8012574:	b083      	sub	sp, #12
 8012576:	af00      	add	r7, sp, #0
 8012578:	6078      	str	r0, [r7, #4]
 801257a:	6039      	str	r1, [r7, #0]
	: _M_t(__t) { }
 801257c:	687b      	ldr	r3, [r7, #4]
 801257e:	683a      	ldr	r2, [r7, #0]
 8012580:	601a      	str	r2, [r3, #0]
 8012582:	687b      	ldr	r3, [r7, #4]
 8012584:	4618      	mov	r0, r3
 8012586:	370c      	adds	r7, #12
 8012588:	46bd      	mov	sp, r7
 801258a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801258e:	4770      	bx	lr

08012590 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEOT_RNSt16remove_referenceISI_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8012590:	b480      	push	{r7}
 8012592:	b083      	sub	sp, #12
 8012594:	af00      	add	r7, sp, #0
 8012596:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8012598:	687b      	ldr	r3, [r7, #4]
 801259a:	4618      	mov	r0, r3
 801259c:	370c      	adds	r7, #12
 801259e:	46bd      	mov	sp, r7
 80125a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80125a4:	4770      	bx	lr

080125a6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE10_M_insert_ISH_NSN_11_Alloc_nodeEEESt17_Rb_tree_iteratorISH_EPSt18_Rb_tree_node_baseST_OT_RT0_>:
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 80125a6:	b5b0      	push	{r4, r5, r7, lr}
 80125a8:	b088      	sub	sp, #32
 80125aa:	af00      	add	r7, sp, #0
 80125ac:	60f8      	str	r0, [r7, #12]
 80125ae:	60b9      	str	r1, [r7, #8]
 80125b0:	607a      	str	r2, [r7, #4]
 80125b2:	603b      	str	r3, [r7, #0]
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
 80125b4:	68bb      	ldr	r3, [r7, #8]
 80125b6:	2b00      	cmp	r3, #0
 80125b8:	d11a      	bne.n	80125f0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE10_M_insert_ISH_NSN_11_Alloc_nodeEEESt17_Rb_tree_iteratorISH_EPSt18_Rb_tree_node_baseST_OT_RT0_+0x4a>
	bool __insert_left = (__x != 0 || __p == _M_end()
 80125ba:	68f8      	ldr	r0, [r7, #12]
 80125bc:	f000 f864 	bl	8012688 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE6_M_endEv>
 80125c0:	4602      	mov	r2, r0
 80125c2:	687b      	ldr	r3, [r7, #4]
 80125c4:	4293      	cmp	r3, r2
 80125c6:	d013      	beq.n	80125f0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE10_M_insert_ISH_NSN_11_Alloc_nodeEEESt17_Rb_tree_iteratorISH_EPSt18_Rb_tree_node_baseST_OT_RT0_+0x4a>
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
 80125c8:	68fc      	ldr	r4, [r7, #12]
 80125ca:	f107 0310 	add.w	r3, r7, #16
 80125ce:	6839      	ldr	r1, [r7, #0]
 80125d0:	4618      	mov	r0, r3
 80125d2:	f7ff ffc2 	bl	801255a <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEclERSH_>
 80125d6:	4605      	mov	r5, r0
 80125d8:	6878      	ldr	r0, [r7, #4]
 80125da:	f000 f892 	bl	8012702 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE6_S_keyEPKSt18_Rb_tree_node_base>
 80125de:	4603      	mov	r3, r0
 80125e0:	461a      	mov	r2, r3
 80125e2:	4629      	mov	r1, r5
 80125e4:	4620      	mov	r0, r4
 80125e6:	f7f3 f861 	bl	80056ac <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 80125ea:	4603      	mov	r3, r0
 80125ec:	2b00      	cmp	r3, #0
 80125ee:	d001      	beq.n	80125f4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE10_M_insert_ISH_NSN_11_Alloc_nodeEEESt17_Rb_tree_iteratorISH_EPSt18_Rb_tree_node_baseST_OT_RT0_+0x4e>
 80125f0:	2301      	movs	r3, #1
 80125f2:	e000      	b.n	80125f6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE10_M_insert_ISH_NSN_11_Alloc_nodeEEESt17_Rb_tree_iteratorISH_EPSt18_Rb_tree_node_baseST_OT_RT0_+0x50>
 80125f4:	2300      	movs	r3, #0
	bool __insert_left = (__x != 0 || __p == _M_end()
 80125f6:	77fb      	strb	r3, [r7, #31]
	_Link_type __z = __node_gen(_GLIBCXX_FORWARD(_Arg, __v));
 80125f8:	6838      	ldr	r0, [r7, #0]
 80125fa:	f7ff ffc9 	bl	8012590 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEOT_RNSt16remove_referenceISI_E4typeE>
 80125fe:	4603      	mov	r3, r0
 8012600:	4619      	mov	r1, r3
 8012602:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8012604:	f000 f91b 	bl	801283e <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE11_Alloc_nodeclISH_EEPSt13_Rb_tree_nodeISH_EOT_>
 8012608:	61b8      	str	r0, [r7, #24]
				      this->_M_impl._M_header);
 801260a:	68fb      	ldr	r3, [r7, #12]
 801260c:	3304      	adds	r3, #4
	_Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
 801260e:	7ff8      	ldrb	r0, [r7, #31]
 8012610:	687a      	ldr	r2, [r7, #4]
 8012612:	69b9      	ldr	r1, [r7, #24]
 8012614:	f010 f970 	bl	80228f8 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
	++_M_impl._M_node_count;
 8012618:	68fb      	ldr	r3, [r7, #12]
 801261a:	695b      	ldr	r3, [r3, #20]
 801261c:	1c5a      	adds	r2, r3, #1
 801261e:	68fb      	ldr	r3, [r7, #12]
 8012620:	615a      	str	r2, [r3, #20]
	return iterator(__z);
 8012622:	f107 0314 	add.w	r3, r7, #20
 8012626:	69b9      	ldr	r1, [r7, #24]
 8012628:	4618      	mov	r0, r3
 801262a:	f000 f81e 	bl	801266a <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEC1EPSt18_Rb_tree_node_base>
 801262e:	697b      	ldr	r3, [r7, #20]
      }
 8012630:	4618      	mov	r0, r3
 8012632:	3720      	adds	r7, #32
 8012634:	46bd      	mov	sp, r7
 8012636:	bdb0      	pop	{r4, r5, r7, pc}

08012638 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEbEC1ISI_bLb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 8012638:	b580      	push	{r7, lr}
 801263a:	b084      	sub	sp, #16
 801263c:	af00      	add	r7, sp, #0
 801263e:	60f8      	str	r0, [r7, #12]
 8012640:	60b9      	str	r1, [r7, #8]
 8012642:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 8012644:	68b8      	ldr	r0, [r7, #8]
 8012646:	f000 f90e 	bl	8012866 <_ZSt7forwardISt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISD_EEEEEEOT_RNSt16remove_referenceISK_E4typeE>
 801264a:	4602      	mov	r2, r0
 801264c:	68fb      	ldr	r3, [r7, #12]
 801264e:	6812      	ldr	r2, [r2, #0]
 8012650:	601a      	str	r2, [r3, #0]
 8012652:	6878      	ldr	r0, [r7, #4]
 8012654:	f7f6 f84e 	bl	80086f4 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
 8012658:	4603      	mov	r3, r0
 801265a:	781a      	ldrb	r2, [r3, #0]
 801265c:	68fb      	ldr	r3, [r7, #12]
 801265e:	711a      	strb	r2, [r3, #4]
 8012660:	68fb      	ldr	r3, [r7, #12]
 8012662:	4618      	mov	r0, r3
 8012664:	3710      	adds	r7, #16
 8012666:	46bd      	mov	sp, r7
 8012668:	bd80      	pop	{r7, pc}

0801266a <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEC1EPSt18_Rb_tree_node_base>:
      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 801266a:	b480      	push	{r7}
 801266c:	b083      	sub	sp, #12
 801266e:	af00      	add	r7, sp, #0
 8012670:	6078      	str	r0, [r7, #4]
 8012672:	6039      	str	r1, [r7, #0]
      : _M_node(__x) { }
 8012674:	687b      	ldr	r3, [r7, #4]
 8012676:	683a      	ldr	r2, [r7, #0]
 8012678:	601a      	str	r2, [r3, #0]
 801267a:	687b      	ldr	r3, [r7, #4]
 801267c:	4618      	mov	r0, r3
 801267e:	370c      	adds	r7, #12
 8012680:	46bd      	mov	sp, r7
 8012682:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012686:	4770      	bx	lr

08012688 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE6_M_endEv>:
      _M_end() _GLIBCXX_NOEXCEPT
 8012688:	b480      	push	{r7}
 801268a:	b083      	sub	sp, #12
 801268c:	af00      	add	r7, sp, #0
 801268e:	6078      	str	r0, [r7, #4]
      { return &this->_M_impl._M_header; }
 8012690:	687b      	ldr	r3, [r7, #4]
 8012692:	3304      	adds	r3, #4
 8012694:	4618      	mov	r0, r3
 8012696:	370c      	adds	r7, #12
 8012698:	46bd      	mov	sp, r7
 801269a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801269e:	4770      	bx	lr

080126a0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE14_M_lower_boundEPSt13_Rb_tree_nodeISH_EPSt18_Rb_tree_node_baseRS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 80126a0:	b590      	push	{r4, r7, lr}
 80126a2:	b087      	sub	sp, #28
 80126a4:	af00      	add	r7, sp, #0
 80126a6:	60f8      	str	r0, [r7, #12]
 80126a8:	60b9      	str	r1, [r7, #8]
 80126aa:	607a      	str	r2, [r7, #4]
 80126ac:	603b      	str	r3, [r7, #0]
      while (__x != 0)
 80126ae:	68bb      	ldr	r3, [r7, #8]
 80126b0:	2b00      	cmp	r3, #0
 80126b2:	d01b      	beq.n	80126ec <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE14_M_lower_boundEPSt13_Rb_tree_nodeISH_EPSt18_Rb_tree_node_baseRS7_+0x4c>
	if (!_M_impl._M_key_compare(_S_key(__x), __k))
 80126b4:	68fc      	ldr	r4, [r7, #12]
 80126b6:	68b8      	ldr	r0, [r7, #8]
 80126b8:	f000 f873 	bl	80127a2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE6_S_keyEPKSt13_Rb_tree_nodeISH_E>
 80126bc:	4603      	mov	r3, r0
 80126be:	683a      	ldr	r2, [r7, #0]
 80126c0:	4619      	mov	r1, r3
 80126c2:	4620      	mov	r0, r4
 80126c4:	f7f2 fff2 	bl	80056ac <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 80126c8:	4603      	mov	r3, r0
 80126ca:	f083 0301 	eor.w	r3, r3, #1
 80126ce:	b2db      	uxtb	r3, r3
 80126d0:	2b00      	cmp	r3, #0
 80126d2:	d006      	beq.n	80126e2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE14_M_lower_boundEPSt13_Rb_tree_nodeISH_EPSt18_Rb_tree_node_baseRS7_+0x42>
	  __y = __x, __x = _S_left(__x);
 80126d4:	68bb      	ldr	r3, [r7, #8]
 80126d6:	607b      	str	r3, [r7, #4]
 80126d8:	68b8      	ldr	r0, [r7, #8]
 80126da:	f7ff fe9c 	bl	8012416 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE7_S_leftEPSt18_Rb_tree_node_base>
 80126de:	60b8      	str	r0, [r7, #8]
 80126e0:	e7e5      	b.n	80126ae <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE14_M_lower_boundEPSt13_Rb_tree_nodeISH_EPSt18_Rb_tree_node_baseRS7_+0xe>
	  __x = _S_right(__x);
 80126e2:	68b8      	ldr	r0, [r7, #8]
 80126e4:	f7ff fe8b 	bl	80123fe <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE8_S_rightEPSt18_Rb_tree_node_base>
 80126e8:	60b8      	str	r0, [r7, #8]
      while (__x != 0)
 80126ea:	e7e0      	b.n	80126ae <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE14_M_lower_boundEPSt13_Rb_tree_nodeISH_EPSt18_Rb_tree_node_baseRS7_+0xe>
      return iterator(__y);
 80126ec:	f107 0314 	add.w	r3, r7, #20
 80126f0:	6879      	ldr	r1, [r7, #4]
 80126f2:	4618      	mov	r0, r3
 80126f4:	f7ff ffb9 	bl	801266a <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEC1EPSt18_Rb_tree_node_base>
 80126f8:	697b      	ldr	r3, [r7, #20]
    }
 80126fa:	4618      	mov	r0, r3
 80126fc:	371c      	adds	r7, #28
 80126fe:	46bd      	mov	sp, r7
 8012700:	bd90      	pop	{r4, r7, pc}

08012702 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE6_S_keyEPKSt18_Rb_tree_node_base>:
      _S_key(_Const_Base_ptr __x)
 8012702:	b580      	push	{r7, lr}
 8012704:	b082      	sub	sp, #8
 8012706:	af00      	add	r7, sp, #0
 8012708:	6078      	str	r0, [r7, #4]
      { return _S_key(static_cast<_Const_Link_type>(__x)); }
 801270a:	6878      	ldr	r0, [r7, #4]
 801270c:	f000 f849 	bl	80127a2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE6_S_keyEPKSt13_Rb_tree_nodeISH_E>
 8012710:	4603      	mov	r3, r0
 8012712:	4618      	mov	r0, r3
 8012714:	3708      	adds	r7, #8
 8012716:	46bd      	mov	sp, r7
 8012718:	bd80      	pop	{r7, pc}

0801271a <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISD_EEEEE6_M_ptrEv>:
      _M_ptr() noexcept
 801271a:	b580      	push	{r7, lr}
 801271c:	b082      	sub	sp, #8
 801271e:	af00      	add	r7, sp, #0
 8012720:	6078      	str	r0, [r7, #4]
      { return static_cast<_Tp*>(_M_addr()); }
 8012722:	6878      	ldr	r0, [r7, #4]
 8012724:	f000 f8aa 	bl	801287c <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISD_EEEEE7_M_addrEv>
 8012728:	4603      	mov	r3, r0
 801272a:	4618      	mov	r0, r3
 801272c:	3708      	adds	r7, #8
 801272e:	46bd      	mov	sp, r7
 8012730:	bd80      	pop	{r7, pc}

08012732 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_construct_auxIPcEEvT_S7_St12__false_type>:
        _M_construct_aux(_InIterator __beg, _InIterator __end,
 8012732:	b590      	push	{r4, r7, lr}
 8012734:	b087      	sub	sp, #28
 8012736:	af00      	add	r7, sp, #0
 8012738:	60f8      	str	r0, [r7, #12]
 801273a:	60b9      	str	r1, [r7, #8]
 801273c:	607a      	str	r2, [r7, #4]
 801273e:	703b      	strb	r3, [r7, #0]
          _M_construct(__beg, __end, _Tag());
 8012740:	4623      	mov	r3, r4
 8012742:	687a      	ldr	r2, [r7, #4]
 8012744:	68b9      	ldr	r1, [r7, #8]
 8012746:	68f8      	ldr	r0, [r7, #12]
 8012748:	f000 f8b8 	bl	80128bc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag>
	}
 801274c:	bf00      	nop
 801274e:	371c      	adds	r7, #28
 8012750:	46bd      	mov	sp, r7
 8012752:	bd90      	pop	{r4, r7, pc}

08012754 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeISH_E>:
      _M_destroy_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 8012754:	b590      	push	{r4, r7, lr}
 8012756:	b083      	sub	sp, #12
 8012758:	af00      	add	r7, sp, #0
 801275a:	6078      	str	r0, [r7, #4]
 801275c:	6039      	str	r1, [r7, #0]
	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
 801275e:	6878      	ldr	r0, [r7, #4]
 8012760:	f000 f8f4 	bl	801294c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE21_M_get_Node_allocatorEv>
 8012764:	4604      	mov	r4, r0
 8012766:	6838      	ldr	r0, [r7, #0]
 8012768:	f7ff fe21 	bl	80123ae <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEE9_M_valptrEv>
 801276c:	4603      	mov	r3, r0
 801276e:	4619      	mov	r1, r3
 8012770:	4620      	mov	r0, r4
 8012772:	f000 f8f6 	bl	8012962 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISD_EEEEEEE7destroyISI_EEvRSK_PT_>
      }
 8012776:	bf00      	nop
 8012778:	370c      	adds	r7, #12
 801277a:	46bd      	mov	sp, r7
 801277c:	bd90      	pop	{r4, r7, pc}

0801277e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE11_M_put_nodeEPSt13_Rb_tree_nodeISH_E>:
      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 801277e:	b580      	push	{r7, lr}
 8012780:	b082      	sub	sp, #8
 8012782:	af00      	add	r7, sp, #0
 8012784:	6078      	str	r0, [r7, #4]
 8012786:	6039      	str	r1, [r7, #0]
      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
 8012788:	6878      	ldr	r0, [r7, #4]
 801278a:	f000 f8df 	bl	801294c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE21_M_get_Node_allocatorEv>
 801278e:	4603      	mov	r3, r0
 8012790:	2201      	movs	r2, #1
 8012792:	6839      	ldr	r1, [r7, #0]
 8012794:	4618      	mov	r0, r3
 8012796:	f000 f8f1 	bl	801297c <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISD_EEEEEEE10deallocateERSK_PSJ_j>
 801279a:	bf00      	nop
 801279c:	3708      	adds	r7, #8
 801279e:	46bd      	mov	sp, r7
 80127a0:	bd80      	pop	{r7, pc}

080127a2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE6_S_keyEPKSt13_Rb_tree_nodeISH_E>:
      _S_key(_Const_Link_type __x)
 80127a2:	b580      	push	{r7, lr}
 80127a4:	b084      	sub	sp, #16
 80127a6:	af00      	add	r7, sp, #0
 80127a8:	6078      	str	r0, [r7, #4]
	return _KeyOfValue()(*__x->_M_valptr());
 80127aa:	6878      	ldr	r0, [r7, #4]
 80127ac:	f000 f8f5 	bl	801299a <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEE9_M_valptrEv>
 80127b0:	4602      	mov	r2, r0
 80127b2:	f107 030c 	add.w	r3, r7, #12
 80127b6:	4611      	mov	r1, r2
 80127b8:	4618      	mov	r0, r3
 80127ba:	f000 f8fc 	bl	80129b6 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEclERKSH_>
 80127be:	4603      	mov	r3, r0
      }
 80127c0:	4618      	mov	r0, r3
 80127c2:	3710      	adds	r7, #16
 80127c4:	46bd      	mov	sp, r7
 80127c6:	bd80      	pop	{r7, pc}

080127c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 80127c8:	b580      	push	{r7, lr}
 80127ca:	b084      	sub	sp, #16
 80127cc:	af00      	add	r7, sp, #0
 80127ce:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_header._M_left); }
 80127d0:	687b      	ldr	r3, [r7, #4]
 80127d2:	68da      	ldr	r2, [r3, #12]
 80127d4:	f107 030c 	add.w	r3, r7, #12
 80127d8:	4611      	mov	r1, r2
 80127da:	4618      	mov	r0, r3
 80127dc:	f7ff ff45 	bl	801266a <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEC1EPSt18_Rb_tree_node_base>
 80127e0:	68fb      	ldr	r3, [r7, #12]
 80127e2:	4618      	mov	r0, r3
 80127e4:	3710      	adds	r7, #16
 80127e6:	46bd      	mov	sp, r7
 80127e8:	bd80      	pop	{r7, pc}

080127ea <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISG_EEEEERS1_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 80127ea:	b580      	push	{r7, lr}
 80127ec:	b084      	sub	sp, #16
 80127ee:	af00      	add	r7, sp, #0
 80127f0:	60f8      	str	r0, [r7, #12]
 80127f2:	60b9      	str	r1, [r7, #8]
 80127f4:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 80127f6:	68b8      	ldr	r0, [r7, #8]
 80127f8:	f000 f8e9 	bl	80129ce <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISD_EEEEEEOT_RNSt16remove_referenceISM_E4typeE>
 80127fc:	4603      	mov	r3, r0
 80127fe:	681a      	ldr	r2, [r3, #0]
 8012800:	68fb      	ldr	r3, [r7, #12]
 8012802:	601a      	str	r2, [r3, #0]
 8012804:	6878      	ldr	r0, [r7, #4]
 8012806:	f7f3 fe22 	bl	800644e <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
 801280a:	4603      	mov	r3, r0
 801280c:	681a      	ldr	r2, [r3, #0]
 801280e:	68fb      	ldr	r3, [r7, #12]
 8012810:	605a      	str	r2, [r3, #4]
 8012812:	68fb      	ldr	r3, [r7, #12]
 8012814:	4618      	mov	r0, r3
 8012816:	3710      	adds	r7, #16
 8012818:	46bd      	mov	sp, r7
 801281a:	bd80      	pop	{r7, pc}

0801281c <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEmmEv>:
      operator--() _GLIBCXX_NOEXCEPT
 801281c:	b580      	push	{r7, lr}
 801281e:	b082      	sub	sp, #8
 8012820:	af00      	add	r7, sp, #0
 8012822:	6078      	str	r0, [r7, #4]
	_M_node = _Rb_tree_decrement(_M_node);
 8012824:	687b      	ldr	r3, [r7, #4]
 8012826:	681b      	ldr	r3, [r3, #0]
 8012828:	4618      	mov	r0, r3
 801282a:	f010 f863 	bl	80228f4 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 801282e:	4602      	mov	r2, r0
 8012830:	687b      	ldr	r3, [r7, #4]
 8012832:	601a      	str	r2, [r3, #0]
	return *this;
 8012834:	687b      	ldr	r3, [r7, #4]
      }
 8012836:	4618      	mov	r0, r3
 8012838:	3708      	adds	r7, #8
 801283a:	46bd      	mov	sp, r7
 801283c:	bd80      	pop	{r7, pc}

0801283e <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE11_Alloc_nodeclISH_EEPSt13_Rb_tree_nodeISH_EOT_>:
	  operator()(_Arg&& __arg) const
 801283e:	b590      	push	{r4, r7, lr}
 8012840:	b083      	sub	sp, #12
 8012842:	af00      	add	r7, sp, #0
 8012844:	6078      	str	r0, [r7, #4]
 8012846:	6039      	str	r1, [r7, #0]
	  { return _M_t._M_create_node(_GLIBCXX_FORWARD(_Arg, __arg)); }
 8012848:	687b      	ldr	r3, [r7, #4]
 801284a:	681c      	ldr	r4, [r3, #0]
 801284c:	6838      	ldr	r0, [r7, #0]
 801284e:	f7ff fe9f 	bl	8012590 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEOT_RNSt16remove_referenceISI_E4typeE>
 8012852:	4603      	mov	r3, r0
 8012854:	4619      	mov	r1, r3
 8012856:	4620      	mov	r0, r4
 8012858:	f000 f8c4 	bl	80129e4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE14_M_create_nodeIJSH_EEEPSt13_Rb_tree_nodeISH_EDpOT_>
 801285c:	4603      	mov	r3, r0
 801285e:	4618      	mov	r0, r3
 8012860:	370c      	adds	r7, #12
 8012862:	46bd      	mov	sp, r7
 8012864:	bd90      	pop	{r4, r7, pc}

08012866 <_ZSt7forwardISt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISD_EEEEEEOT_RNSt16remove_referenceISK_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8012866:	b480      	push	{r7}
 8012868:	b083      	sub	sp, #12
 801286a:	af00      	add	r7, sp, #0
 801286c:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801286e:	687b      	ldr	r3, [r7, #4]
 8012870:	4618      	mov	r0, r3
 8012872:	370c      	adds	r7, #12
 8012874:	46bd      	mov	sp, r7
 8012876:	f85d 7b04 	ldr.w	r7, [sp], #4
 801287a:	4770      	bx	lr

0801287c <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISD_EEEEE7_M_addrEv>:
      _M_addr() noexcept
 801287c:	b480      	push	{r7}
 801287e:	b083      	sub	sp, #12
 8012880:	af00      	add	r7, sp, #0
 8012882:	6078      	str	r0, [r7, #4]
      { return static_cast<void*>(&_M_storage); }
 8012884:	687b      	ldr	r3, [r7, #4]
 8012886:	4618      	mov	r0, r3
 8012888:	370c      	adds	r7, #12
 801288a:	46bd      	mov	sp, r7
 801288c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012890:	4770      	bx	lr

08012892 <_ZSt8distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_>:
    distance(_InputIterator __first, _InputIterator __last)
 8012892:	b5b0      	push	{r4, r5, r7, lr}
 8012894:	b082      	sub	sp, #8
 8012896:	af00      	add	r7, sp, #0
 8012898:	6078      	str	r0, [r7, #4]
 801289a:	6039      	str	r1, [r7, #0]
      return std::__distance(__first, __last,
 801289c:	687c      	ldr	r4, [r7, #4]
			     std::__iterator_category(__first));
 801289e:	1d3b      	adds	r3, r7, #4
 80128a0:	4618      	mov	r0, r3
 80128a2:	f000 f8c6 	bl	8012a32 <_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_>
      return std::__distance(__first, __last,
 80128a6:	462a      	mov	r2, r5
 80128a8:	6839      	ldr	r1, [r7, #0]
 80128aa:	4620      	mov	r0, r4
 80128ac:	f000 f8cb 	bl	8012a46 <_ZSt10__distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_St26random_access_iterator_tag>
 80128b0:	4603      	mov	r3, r0
    }
 80128b2:	4618      	mov	r0, r3
 80128b4:	3708      	adds	r7, #8
 80128b6:	46bd      	mov	sp, r7
 80128b8:	bdb0      	pop	{r4, r5, r7, pc}
	...

080128bc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag>:
      basic_string<_CharT, _Traits, _Alloc>::
 80128bc:	b580      	push	{r7, lr}
 80128be:	b086      	sub	sp, #24
 80128c0:	af00      	add	r7, sp, #0
 80128c2:	60f8      	str	r0, [r7, #12]
 80128c4:	60b9      	str	r1, [r7, #8]
 80128c6:	607a      	str	r2, [r7, #4]
 80128c8:	703b      	strb	r3, [r7, #0]
	if (__gnu_cxx::__is_null_pointer(__beg) && __beg != __end)
 80128ca:	68b8      	ldr	r0, [r7, #8]
 80128cc:	f000 f8a1 	bl	8012a12 <_ZN9__gnu_cxx17__is_null_pointerIcEEbPT_>
 80128d0:	4603      	mov	r3, r0
 80128d2:	2b00      	cmp	r3, #0
 80128d4:	d005      	beq.n	80128e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x26>
 80128d6:	68ba      	ldr	r2, [r7, #8]
 80128d8:	687b      	ldr	r3, [r7, #4]
 80128da:	429a      	cmp	r2, r3
 80128dc:	d001      	beq.n	80128e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x26>
 80128de:	2301      	movs	r3, #1
 80128e0:	e000      	b.n	80128e4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x28>
 80128e2:	2300      	movs	r3, #0
 80128e4:	2b00      	cmp	r3, #0
 80128e6:	d002      	beq.n	80128ee <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x32>
	  std::__throw_logic_error(__N("basic_string::"
 80128e8:	4817      	ldr	r0, [pc, #92]	; (8012948 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x8c>)
 80128ea:	f010 f864 	bl	80229b6 <_ZSt19__throw_logic_errorPKc>
	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
 80128ee:	6879      	ldr	r1, [r7, #4]
 80128f0:	68b8      	ldr	r0, [r7, #8]
 80128f2:	f7ff ffce 	bl	8012892 <_ZSt8distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_>
 80128f6:	4603      	mov	r3, r0
 80128f8:	617b      	str	r3, [r7, #20]
	if (__dnew > size_type(_S_local_capacity))
 80128fa:	697b      	ldr	r3, [r7, #20]
 80128fc:	2b0f      	cmp	r3, #15
 80128fe:	d910      	bls.n	8012922 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x66>
	    _M_data(_M_create(__dnew, size_type(0)));
 8012900:	f107 0314 	add.w	r3, r7, #20
 8012904:	2200      	movs	r2, #0
 8012906:	4619      	mov	r1, r3
 8012908:	68f8      	ldr	r0, [r7, #12]
 801290a:	f010 f927 	bl	8022b5c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>
 801290e:	4603      	mov	r3, r0
 8012910:	4619      	mov	r1, r3
 8012912:	68f8      	ldr	r0, [r7, #12]
 8012914:	f010 f914 	bl	8022b40 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc>
	    _M_capacity(__dnew);
 8012918:	697b      	ldr	r3, [r7, #20]
 801291a:	4619      	mov	r1, r3
 801291c:	68f8      	ldr	r0, [r7, #12]
 801291e:	f010 f915 	bl	8022b4c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEj>
	  { this->_S_copy_chars(_M_data(), __beg, __end); }
 8012922:	68f8      	ldr	r0, [r7, #12]
 8012924:	f010 f90e 	bl	8022b44 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
 8012928:	4603      	mov	r3, r0
 801292a:	687a      	ldr	r2, [r7, #4]
 801292c:	68b9      	ldr	r1, [r7, #8]
 801292e:	4618      	mov	r0, r3
 8012930:	f010 f979 	bl	8022c26 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcS5_S5_>
	_M_set_length(__dnew);
 8012934:	697b      	ldr	r3, [r7, #20]
 8012936:	4619      	mov	r1, r3
 8012938:	68f8      	ldr	r0, [r7, #12]
 801293a:	f010 f909 	bl	8022b50 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEj>
      }
 801293e:	bf00      	nop
 8012940:	3718      	adds	r7, #24
 8012942:	46bd      	mov	sp, r7
 8012944:	bd80      	pop	{r7, pc}
 8012946:	bf00      	nop
 8012948:	080278b4 	.word	0x080278b4

0801294c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE21_M_get_Node_allocatorEv>:
      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
 801294c:	b480      	push	{r7}
 801294e:	b083      	sub	sp, #12
 8012950:	af00      	add	r7, sp, #0
 8012952:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 8012954:	687b      	ldr	r3, [r7, #4]
 8012956:	4618      	mov	r0, r3
 8012958:	370c      	adds	r7, #12
 801295a:	46bd      	mov	sp, r7
 801295c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012960:	4770      	bx	lr

08012962 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISD_EEEEEEE7destroyISI_EEvRSK_PT_>:
	destroy(allocator_type& __a, _Up* __p)
 8012962:	b580      	push	{r7, lr}
 8012964:	b082      	sub	sp, #8
 8012966:	af00      	add	r7, sp, #0
 8012968:	6078      	str	r0, [r7, #4]
 801296a:	6039      	str	r1, [r7, #0]
	{ __a.destroy(__p); }
 801296c:	6839      	ldr	r1, [r7, #0]
 801296e:	6878      	ldr	r0, [r7, #4]
 8012970:	f000 f878 	bl	8012a64 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISE_EEEEEE7destroyISJ_EEvPT_>
 8012974:	bf00      	nop
 8012976:	3708      	adds	r7, #8
 8012978:	46bd      	mov	sp, r7
 801297a:	bd80      	pop	{r7, pc}

0801297c <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISD_EEEEEEE10deallocateERSK_PSJ_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 801297c:	b580      	push	{r7, lr}
 801297e:	b084      	sub	sp, #16
 8012980:	af00      	add	r7, sp, #0
 8012982:	60f8      	str	r0, [r7, #12]
 8012984:	60b9      	str	r1, [r7, #8]
 8012986:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 8012988:	687a      	ldr	r2, [r7, #4]
 801298a:	68b9      	ldr	r1, [r7, #8]
 801298c:	68f8      	ldr	r0, [r7, #12]
 801298e:	f000 f875 	bl	8012a7c <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISE_EEEEEE10deallocateEPSK_j>
 8012992:	bf00      	nop
 8012994:	3710      	adds	r7, #16
 8012996:	46bd      	mov	sp, r7
 8012998:	bd80      	pop	{r7, pc}

0801299a <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEE9_M_valptrEv>:
      _M_valptr() const
 801299a:	b580      	push	{r7, lr}
 801299c:	b082      	sub	sp, #8
 801299e:	af00      	add	r7, sp, #0
 80129a0:	6078      	str	r0, [r7, #4]
      { return _M_storage._M_ptr(); }
 80129a2:	687b      	ldr	r3, [r7, #4]
 80129a4:	3310      	adds	r3, #16
 80129a6:	4618      	mov	r0, r3
 80129a8:	f000 f874 	bl	8012a94 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISD_EEEEE6_M_ptrEv>
 80129ac:	4603      	mov	r3, r0
 80129ae:	4618      	mov	r0, r3
 80129b0:	3708      	adds	r7, #8
 80129b2:	46bd      	mov	sp, r7
 80129b4:	bd80      	pop	{r7, pc}

080129b6 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEclERKSH_>:
      operator()(const _Pair& __x) const
 80129b6:	b480      	push	{r7}
 80129b8:	b083      	sub	sp, #12
 80129ba:	af00      	add	r7, sp, #0
 80129bc:	6078      	str	r0, [r7, #4]
 80129be:	6039      	str	r1, [r7, #0]
      { return __x.first; }
 80129c0:	683b      	ldr	r3, [r7, #0]
 80129c2:	4618      	mov	r0, r3
 80129c4:	370c      	adds	r7, #12
 80129c6:	46bd      	mov	sp, r7
 80129c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80129cc:	4770      	bx	lr

080129ce <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISD_EEEEEEOT_RNSt16remove_referenceISM_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80129ce:	b480      	push	{r7}
 80129d0:	b083      	sub	sp, #12
 80129d2:	af00      	add	r7, sp, #0
 80129d4:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80129d6:	687b      	ldr	r3, [r7, #4]
 80129d8:	4618      	mov	r0, r3
 80129da:	370c      	adds	r7, #12
 80129dc:	46bd      	mov	sp, r7
 80129de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80129e2:	4770      	bx	lr

080129e4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE14_M_create_nodeIJSH_EEEPSt13_Rb_tree_nodeISH_EDpOT_>:
	_M_create_node(_Args&&... __args)
 80129e4:	b580      	push	{r7, lr}
 80129e6:	b084      	sub	sp, #16
 80129e8:	af00      	add	r7, sp, #0
 80129ea:	6078      	str	r0, [r7, #4]
 80129ec:	6039      	str	r1, [r7, #0]
	  _Link_type __tmp = _M_get_node();
 80129ee:	6878      	ldr	r0, [r7, #4]
 80129f0:	f000 f85c 	bl	8012aac <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE11_M_get_nodeEv>
 80129f4:	60f8      	str	r0, [r7, #12]
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
 80129f6:	6838      	ldr	r0, [r7, #0]
 80129f8:	f7ff fdca 	bl	8012590 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEOT_RNSt16remove_referenceISI_E4typeE>
 80129fc:	4603      	mov	r3, r0
 80129fe:	461a      	mov	r2, r3
 8012a00:	68f9      	ldr	r1, [r7, #12]
 8012a02:	6878      	ldr	r0, [r7, #4]
 8012a04:	f000 f863 	bl	8012ace <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE17_M_construct_nodeIJSH_EEEvPSt13_Rb_tree_nodeISH_EDpOT_>
	  return __tmp;
 8012a08:	68fb      	ldr	r3, [r7, #12]
	}
 8012a0a:	4618      	mov	r0, r3
 8012a0c:	3710      	adds	r7, #16
 8012a0e:	46bd      	mov	sp, r7
 8012a10:	bd80      	pop	{r7, pc}

08012a12 <_ZN9__gnu_cxx17__is_null_pointerIcEEbPT_>:
    __is_null_pointer(_Type* __ptr)
 8012a12:	b480      	push	{r7}
 8012a14:	b083      	sub	sp, #12
 8012a16:	af00      	add	r7, sp, #0
 8012a18:	6078      	str	r0, [r7, #4]
    { return __ptr == 0; }
 8012a1a:	687b      	ldr	r3, [r7, #4]
 8012a1c:	2b00      	cmp	r3, #0
 8012a1e:	bf0c      	ite	eq
 8012a20:	2301      	moveq	r3, #1
 8012a22:	2300      	movne	r3, #0
 8012a24:	b2db      	uxtb	r3, r3
 8012a26:	4618      	mov	r0, r3
 8012a28:	370c      	adds	r7, #12
 8012a2a:	46bd      	mov	sp, r7
 8012a2c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012a30:	4770      	bx	lr

08012a32 <_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_>:
    __iterator_category(const _Iter&)
 8012a32:	b480      	push	{r7}
 8012a34:	b083      	sub	sp, #12
 8012a36:	af00      	add	r7, sp, #0
 8012a38:	6078      	str	r0, [r7, #4]
    { return typename iterator_traits<_Iter>::iterator_category(); }
 8012a3a:	4618      	mov	r0, r3
 8012a3c:	370c      	adds	r7, #12
 8012a3e:	46bd      	mov	sp, r7
 8012a40:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012a44:	4770      	bx	lr

08012a46 <_ZSt10__distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
 8012a46:	b480      	push	{r7}
 8012a48:	b085      	sub	sp, #20
 8012a4a:	af00      	add	r7, sp, #0
 8012a4c:	60f8      	str	r0, [r7, #12]
 8012a4e:	60b9      	str	r1, [r7, #8]
 8012a50:	713a      	strb	r2, [r7, #4]
      return __last - __first;
 8012a52:	68ba      	ldr	r2, [r7, #8]
 8012a54:	68fb      	ldr	r3, [r7, #12]
 8012a56:	1ad3      	subs	r3, r2, r3
    }
 8012a58:	4618      	mov	r0, r3
 8012a5a:	3714      	adds	r7, #20
 8012a5c:	46bd      	mov	sp, r7
 8012a5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012a62:	4770      	bx	lr

08012a64 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISE_EEEEEE7destroyISJ_EEvPT_>:
	destroy(_Up* __p)
 8012a64:	b580      	push	{r7, lr}
 8012a66:	b082      	sub	sp, #8
 8012a68:	af00      	add	r7, sp, #0
 8012a6a:	6078      	str	r0, [r7, #4]
 8012a6c:	6039      	str	r1, [r7, #0]
	{ __p->~_Up(); }
 8012a6e:	6838      	ldr	r0, [r7, #0]
 8012a70:	f7ff f944 	bl	8011cfc <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISB_EEEED1Ev>
 8012a74:	bf00      	nop
 8012a76:	3708      	adds	r7, #8
 8012a78:	46bd      	mov	sp, r7
 8012a7a:	bd80      	pop	{r7, pc}

08012a7c <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISE_EEEEEE10deallocateEPSK_j>:
      deallocate(pointer __p, size_type)
 8012a7c:	b580      	push	{r7, lr}
 8012a7e:	b084      	sub	sp, #16
 8012a80:	af00      	add	r7, sp, #0
 8012a82:	60f8      	str	r0, [r7, #12]
 8012a84:	60b9      	str	r1, [r7, #8]
 8012a86:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 8012a88:	68b8      	ldr	r0, [r7, #8]
 8012a8a:	f00f feb9 	bl	8022800 <_ZdlPv>
      }
 8012a8e:	3710      	adds	r7, #16
 8012a90:	46bd      	mov	sp, r7
 8012a92:	bd80      	pop	{r7, pc}

08012a94 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISD_EEEEE6_M_ptrEv>:
      _M_ptr() const noexcept
 8012a94:	b580      	push	{r7, lr}
 8012a96:	b082      	sub	sp, #8
 8012a98:	af00      	add	r7, sp, #0
 8012a9a:	6078      	str	r0, [r7, #4]
      { return static_cast<const _Tp*>(_M_addr()); }
 8012a9c:	6878      	ldr	r0, [r7, #4]
 8012a9e:	f000 f836 	bl	8012b0e <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISD_EEEEE7_M_addrEv>
 8012aa2:	4603      	mov	r3, r0
 8012aa4:	4618      	mov	r0, r3
 8012aa6:	3708      	adds	r7, #8
 8012aa8:	46bd      	mov	sp, r7
 8012aaa:	bd80      	pop	{r7, pc}

08012aac <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE11_M_get_nodeEv>:
      _M_get_node()
 8012aac:	b580      	push	{r7, lr}
 8012aae:	b082      	sub	sp, #8
 8012ab0:	af00      	add	r7, sp, #0
 8012ab2:	6078      	str	r0, [r7, #4]
      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
 8012ab4:	6878      	ldr	r0, [r7, #4]
 8012ab6:	f7ff ff49 	bl	801294c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE21_M_get_Node_allocatorEv>
 8012aba:	4603      	mov	r3, r0
 8012abc:	2101      	movs	r1, #1
 8012abe:	4618      	mov	r0, r3
 8012ac0:	f000 f830 	bl	8012b24 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISD_EEEEEEE8allocateERSK_j>
 8012ac4:	4603      	mov	r3, r0
 8012ac6:	4618      	mov	r0, r3
 8012ac8:	3708      	adds	r7, #8
 8012aca:	46bd      	mov	sp, r7
 8012acc:	bd80      	pop	{r7, pc}

08012ace <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE17_M_construct_nodeIJSH_EEEvPSt13_Rb_tree_nodeISH_EDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
 8012ace:	b5b0      	push	{r4, r5, r7, lr}
 8012ad0:	b084      	sub	sp, #16
 8012ad2:	af00      	add	r7, sp, #0
 8012ad4:	60f8      	str	r0, [r7, #12]
 8012ad6:	60b9      	str	r1, [r7, #8]
 8012ad8:	607a      	str	r2, [r7, #4]
	      ::new(__node) _Rb_tree_node<_Val>;
 8012ada:	68bb      	ldr	r3, [r7, #8]
 8012adc:	4619      	mov	r1, r3
 8012ade:	202c      	movs	r0, #44	; 0x2c
 8012ae0:	f7ee fabb 	bl	800105a <_ZnwjPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
 8012ae4:	68f8      	ldr	r0, [r7, #12]
 8012ae6:	f7ff ff31 	bl	801294c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE21_M_get_Node_allocatorEv>
 8012aea:	4604      	mov	r4, r0
 8012aec:	68b8      	ldr	r0, [r7, #8]
 8012aee:	f7ff fc5e 	bl	80123ae <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEE9_M_valptrEv>
 8012af2:	4605      	mov	r5, r0
 8012af4:	6878      	ldr	r0, [r7, #4]
 8012af6:	f7ff fd4b 	bl	8012590 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEOT_RNSt16remove_referenceISI_E4typeE>
 8012afa:	4603      	mov	r3, r0
 8012afc:	461a      	mov	r2, r3
 8012afe:	4629      	mov	r1, r5
 8012b00:	4620      	mov	r0, r4
 8012b02:	f000 f81e 	bl	8012b42 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISD_EEEEEEE9constructISI_JSI_EEEvRSK_PT_DpOT0_>
	}
 8012b06:	bf00      	nop
 8012b08:	3710      	adds	r7, #16
 8012b0a:	46bd      	mov	sp, r7
 8012b0c:	bdb0      	pop	{r4, r5, r7, pc}

08012b0e <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISD_EEEEE7_M_addrEv>:
      _M_addr() const noexcept
 8012b0e:	b480      	push	{r7}
 8012b10:	b083      	sub	sp, #12
 8012b12:	af00      	add	r7, sp, #0
 8012b14:	6078      	str	r0, [r7, #4]
      { return static_cast<const void*>(&_M_storage); }
 8012b16:	687b      	ldr	r3, [r7, #4]
 8012b18:	4618      	mov	r0, r3
 8012b1a:	370c      	adds	r7, #12
 8012b1c:	46bd      	mov	sp, r7
 8012b1e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012b22:	4770      	bx	lr

08012b24 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISD_EEEEEEE8allocateERSK_j>:
      allocate(allocator_type& __a, size_type __n)
 8012b24:	b580      	push	{r7, lr}
 8012b26:	b082      	sub	sp, #8
 8012b28:	af00      	add	r7, sp, #0
 8012b2a:	6078      	str	r0, [r7, #4]
 8012b2c:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 8012b2e:	2200      	movs	r2, #0
 8012b30:	6839      	ldr	r1, [r7, #0]
 8012b32:	6878      	ldr	r0, [r7, #4]
 8012b34:	f000 f818 	bl	8012b68 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISE_EEEEEE8allocateEjPKv>
 8012b38:	4603      	mov	r3, r0
 8012b3a:	4618      	mov	r0, r3
 8012b3c:	3708      	adds	r7, #8
 8012b3e:	46bd      	mov	sp, r7
 8012b40:	bd80      	pop	{r7, pc}

08012b42 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISD_EEEEEEE9constructISI_JSI_EEEvRSK_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 8012b42:	b580      	push	{r7, lr}
 8012b44:	b084      	sub	sp, #16
 8012b46:	af00      	add	r7, sp, #0
 8012b48:	60f8      	str	r0, [r7, #12]
 8012b4a:	60b9      	str	r1, [r7, #8]
 8012b4c:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 8012b4e:	6878      	ldr	r0, [r7, #4]
 8012b50:	f7ff fd1e 	bl	8012590 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEOT_RNSt16remove_referenceISI_E4typeE>
 8012b54:	4603      	mov	r3, r0
 8012b56:	461a      	mov	r2, r3
 8012b58:	68b9      	ldr	r1, [r7, #8]
 8012b5a:	68f8      	ldr	r0, [r7, #12]
 8012b5c:	f000 f839 	bl	8012bd2 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISE_EEEEEE9constructISJ_JSJ_EEEvPT_DpOT0_>
 8012b60:	bf00      	nop
 8012b62:	3710      	adds	r7, #16
 8012b64:	46bd      	mov	sp, r7
 8012b66:	bd80      	pop	{r7, pc}

08012b68 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISE_EEEEEE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 8012b68:	b580      	push	{r7, lr}
 8012b6a:	b084      	sub	sp, #16
 8012b6c:	af00      	add	r7, sp, #0
 8012b6e:	60f8      	str	r0, [r7, #12]
 8012b70:	60b9      	str	r1, [r7, #8]
 8012b72:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 8012b74:	68f8      	ldr	r0, [r7, #12]
 8012b76:	f000 f845 	bl	8012c04 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISE_EEEEEE8max_sizeEv>
 8012b7a:	4602      	mov	r2, r0
 8012b7c:	68bb      	ldr	r3, [r7, #8]
 8012b7e:	4293      	cmp	r3, r2
 8012b80:	bf8c      	ite	hi
 8012b82:	2301      	movhi	r3, #1
 8012b84:	2300      	movls	r3, #0
 8012b86:	b2db      	uxtb	r3, r3
 8012b88:	2b00      	cmp	r3, #0
 8012b8a:	d001      	beq.n	8012b90 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISE_EEEEEE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 8012b8c:	f00f ff10 	bl	80229b0 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 8012b90:	68bb      	ldr	r3, [r7, #8]
 8012b92:	222c      	movs	r2, #44	; 0x2c
 8012b94:	fb02 f303 	mul.w	r3, r2, r3
 8012b98:	4618      	mov	r0, r3
 8012b9a:	f00f fe44 	bl	8022826 <_Znwj>
 8012b9e:	4603      	mov	r3, r0
 8012ba0:	bf00      	nop
      }
 8012ba2:	4618      	mov	r0, r3
 8012ba4:	3710      	adds	r7, #16
 8012ba6:	46bd      	mov	sp, r7
 8012ba8:	bd80      	pop	{r7, pc}

08012baa <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISB_EEEEC1EOSG_>:
      constexpr pair(pair&&) = default;
 8012baa:	b580      	push	{r7, lr}
 8012bac:	b082      	sub	sp, #8
 8012bae:	af00      	add	r7, sp, #0
 8012bb0:	6078      	str	r0, [r7, #4]
 8012bb2:	6039      	str	r1, [r7, #0]
 8012bb4:	687b      	ldr	r3, [r7, #4]
 8012bb6:	683a      	ldr	r2, [r7, #0]
 8012bb8:	4611      	mov	r1, r2
 8012bba:	4618      	mov	r0, r3
 8012bbc:	f010 fa96 	bl	80230ec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 8012bc0:	683b      	ldr	r3, [r7, #0]
 8012bc2:	699a      	ldr	r2, [r3, #24]
 8012bc4:	687b      	ldr	r3, [r7, #4]
 8012bc6:	619a      	str	r2, [r3, #24]
 8012bc8:	687b      	ldr	r3, [r7, #4]
 8012bca:	4618      	mov	r0, r3
 8012bcc:	3708      	adds	r7, #8
 8012bce:	46bd      	mov	sp, r7
 8012bd0:	bd80      	pop	{r7, pc}

08012bd2 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISE_EEEEEE9constructISJ_JSJ_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 8012bd2:	b590      	push	{r4, r7, lr}
 8012bd4:	b085      	sub	sp, #20
 8012bd6:	af00      	add	r7, sp, #0
 8012bd8:	60f8      	str	r0, [r7, #12]
 8012bda:	60b9      	str	r1, [r7, #8]
 8012bdc:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 8012bde:	6878      	ldr	r0, [r7, #4]
 8012be0:	f7ff fcd6 	bl	8012590 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEOT_RNSt16remove_referenceISI_E4typeE>
 8012be4:	4604      	mov	r4, r0
 8012be6:	68bb      	ldr	r3, [r7, #8]
 8012be8:	4619      	mov	r1, r3
 8012bea:	201c      	movs	r0, #28
 8012bec:	f7ee fa35 	bl	800105a <_ZnwjPv>
 8012bf0:	4603      	mov	r3, r0
 8012bf2:	4621      	mov	r1, r4
 8012bf4:	4618      	mov	r0, r3
 8012bf6:	f7ff ffd8 	bl	8012baa <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISB_EEEEC1EOSG_>
 8012bfa:	bf00      	nop
 8012bfc:	3714      	adds	r7, #20
 8012bfe:	46bd      	mov	sp, r7
 8012c00:	bd90      	pop	{r4, r7, pc}
	...

08012c04 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISE_EEEEEE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 8012c04:	b480      	push	{r7}
 8012c06:	b083      	sub	sp, #12
 8012c08:	af00      	add	r7, sp, #0
 8012c0a:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 8012c0c:	4b03      	ldr	r3, [pc, #12]	; (8012c1c <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISE_EEEEEE8max_sizeEv+0x18>)
      }
 8012c0e:	4618      	mov	r0, r3
 8012c10:	370c      	adds	r7, #12
 8012c12:	46bd      	mov	sp, r7
 8012c14:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012c18:	4770      	bx	lr
 8012c1a:	bf00      	nop
 8012c1c:	02e8ba2e 	.word	0x02e8ba2e

08012c20 <_Z41__static_initialization_and_destruction_0ii>:
 8012c20:	b590      	push	{r4, r7, lr}
 8012c22:	b0e7      	sub	sp, #412	; 0x19c
 8012c24:	af02      	add	r7, sp, #8
 8012c26:	1d3b      	adds	r3, r7, #4
 8012c28:	6018      	str	r0, [r3, #0]
 8012c2a:	463b      	mov	r3, r7
 8012c2c:	6019      	str	r1, [r3, #0]
 8012c2e:	1d3b      	adds	r3, r7, #4
 8012c30:	681b      	ldr	r3, [r3, #0]
 8012c32:	2b01      	cmp	r3, #1
 8012c34:	f040 819d 	bne.w	8012f72 <_Z41__static_initialization_and_destruction_0ii+0x352>
 8012c38:	463b      	mov	r3, r7
 8012c3a:	681b      	ldr	r3, [r3, #0]
 8012c3c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8012c40:	4293      	cmp	r3, r2
 8012c42:	f040 8196 	bne.w	8012f72 <_Z41__static_initialization_and_destruction_0ii+0x352>
};
 8012c46:	f107 0314 	add.w	r3, r7, #20
 8012c4a:	4618      	mov	r0, r3
 8012c4c:	2322      	movs	r3, #34	; 0x22
 8012c4e:	461a      	mov	r2, r3
 8012c50:	2100      	movs	r1, #0
 8012c52:	f011 fac7 	bl	80241e4 <memset>
 8012c56:	f107 0314 	add.w	r3, r7, #20
 8012c5a:	223a      	movs	r2, #58	; 0x3a
 8012c5c:	701a      	strb	r2, [r3, #0]
 8012c5e:	f107 0314 	add.w	r3, r7, #20
 8012c62:	2201      	movs	r2, #1
 8012c64:	705a      	strb	r2, [r3, #1]
 8012c66:	f107 0314 	add.w	r3, r7, #20
 8012c6a:	220a      	movs	r2, #10
 8012c6c:	709a      	strb	r2, [r3, #2]
 8012c6e:	f107 0314 	add.w	r3, r7, #20
 8012c72:	220a      	movs	r2, #10
 8012c74:	70da      	strb	r2, [r3, #3]
 8012c76:	f107 0314 	add.w	r3, r7, #20
 8012c7a:	222c      	movs	r2, #44	; 0x2c
 8012c7c:	711a      	strb	r2, [r3, #4]
 8012c7e:	f107 0314 	add.w	r3, r7, #20
 8012c82:	220c      	movs	r2, #12
 8012c84:	715a      	strb	r2, [r3, #5]
 8012c86:	f107 0314 	add.w	r3, r7, #20
 8012c8a:	222e      	movs	r2, #46	; 0x2e
 8012c8c:	719a      	strb	r2, [r3, #6]
 8012c8e:	f107 0314 	add.w	r3, r7, #20
 8012c92:	220b      	movs	r2, #11
 8012c94:	71da      	strb	r2, [r3, #7]
 8012c96:	f107 0314 	add.w	r3, r7, #20
 8012c9a:	225b      	movs	r2, #91	; 0x5b
 8012c9c:	721a      	strb	r2, [r3, #8]
 8012c9e:	f107 0314 	add.w	r3, r7, #20
 8012ca2:	220d      	movs	r2, #13
 8012ca4:	725a      	strb	r2, [r3, #9]
 8012ca6:	f107 0314 	add.w	r3, r7, #20
 8012caa:	225d      	movs	r2, #93	; 0x5d
 8012cac:	729a      	strb	r2, [r3, #10]
 8012cae:	f107 0314 	add.w	r3, r7, #20
 8012cb2:	220e      	movs	r2, #14
 8012cb4:	72da      	strb	r2, [r3, #11]
 8012cb6:	f107 0314 	add.w	r3, r7, #20
 8012cba:	227c      	movs	r2, #124	; 0x7c
 8012cbc:	731a      	strb	r2, [r3, #12]
 8012cbe:	f107 0314 	add.w	r3, r7, #20
 8012cc2:	2215      	movs	r2, #21
 8012cc4:	735a      	strb	r2, [r3, #13]
 8012cc6:	f107 0314 	add.w	r3, r7, #20
 8012cca:	2226      	movs	r2, #38	; 0x26
 8012ccc:	739a      	strb	r2, [r3, #14]
 8012cce:	f107 0314 	add.w	r3, r7, #20
 8012cd2:	2216      	movs	r2, #22
 8012cd4:	73da      	strb	r2, [r3, #15]
 8012cd6:	f107 0314 	add.w	r3, r7, #20
 8012cda:	222b      	movs	r2, #43	; 0x2b
 8012cdc:	741a      	strb	r2, [r3, #16]
 8012cde:	f107 0314 	add.w	r3, r7, #20
 8012ce2:	221f      	movs	r2, #31
 8012ce4:	745a      	strb	r2, [r3, #17]
 8012ce6:	f107 0314 	add.w	r3, r7, #20
 8012cea:	222d      	movs	r2, #45	; 0x2d
 8012cec:	749a      	strb	r2, [r3, #18]
 8012cee:	f107 0314 	add.w	r3, r7, #20
 8012cf2:	2220      	movs	r2, #32
 8012cf4:	74da      	strb	r2, [r3, #19]
 8012cf6:	f107 0314 	add.w	r3, r7, #20
 8012cfa:	222a      	movs	r2, #42	; 0x2a
 8012cfc:	751a      	strb	r2, [r3, #20]
 8012cfe:	f107 0314 	add.w	r3, r7, #20
 8012d02:	2221      	movs	r2, #33	; 0x21
 8012d04:	755a      	strb	r2, [r3, #21]
 8012d06:	f107 0314 	add.w	r3, r7, #20
 8012d0a:	222f      	movs	r2, #47	; 0x2f
 8012d0c:	759a      	strb	r2, [r3, #22]
 8012d0e:	f107 0314 	add.w	r3, r7, #20
 8012d12:	2222      	movs	r2, #34	; 0x22
 8012d14:	75da      	strb	r2, [r3, #23]
 8012d16:	f107 0314 	add.w	r3, r7, #20
 8012d1a:	225e      	movs	r2, #94	; 0x5e
 8012d1c:	761a      	strb	r2, [r3, #24]
 8012d1e:	f107 0314 	add.w	r3, r7, #20
 8012d22:	2223      	movs	r2, #35	; 0x23
 8012d24:	765a      	strb	r2, [r3, #25]
 8012d26:	f107 0314 	add.w	r3, r7, #20
 8012d2a:	2225      	movs	r2, #37	; 0x25
 8012d2c:	769a      	strb	r2, [r3, #26]
 8012d2e:	f107 0314 	add.w	r3, r7, #20
 8012d32:	2224      	movs	r2, #36	; 0x24
 8012d34:	76da      	strb	r2, [r3, #27]
 8012d36:	f107 0314 	add.w	r3, r7, #20
 8012d3a:	2228      	movs	r2, #40	; 0x28
 8012d3c:	771a      	strb	r2, [r3, #28]
 8012d3e:	f107 0314 	add.w	r3, r7, #20
 8012d42:	2226      	movs	r2, #38	; 0x26
 8012d44:	775a      	strb	r2, [r3, #29]
 8012d46:	f107 0314 	add.w	r3, r7, #20
 8012d4a:	2229      	movs	r2, #41	; 0x29
 8012d4c:	779a      	strb	r2, [r3, #30]
 8012d4e:	f107 0314 	add.w	r3, r7, #20
 8012d52:	2227      	movs	r2, #39	; 0x27
 8012d54:	77da      	strb	r2, [r3, #31]
 8012d56:	f107 0314 	add.w	r3, r7, #20
 8012d5a:	2225      	movs	r2, #37	; 0x25
 8012d5c:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8012d60:	f107 030c 	add.w	r3, r7, #12
 8012d64:	f107 0214 	add.w	r2, r7, #20
 8012d68:	601a      	str	r2, [r3, #0]
 8012d6a:	f107 030c 	add.w	r3, r7, #12
 8012d6e:	2211      	movs	r2, #17
 8012d70:	605a      	str	r2, [r3, #4]
 8012d72:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8012d76:	4618      	mov	r0, r3
 8012d78:	f7ee feba 	bl	8001af0 <_ZNSaISt4pairIKc10token_typeEEC1Ev>
 8012d7c:	f107 0138 	add.w	r1, r7, #56	; 0x38
 8012d80:	f107 020c 	add.w	r2, r7, #12
 8012d84:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8012d88:	9300      	str	r3, [sp, #0]
 8012d8a:	460b      	mov	r3, r1
 8012d8c:	ca06      	ldmia	r2, {r1, r2}
 8012d8e:	4885      	ldr	r0, [pc, #532]	; (8012fa4 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 8012d90:	f7ee fec6 	bl	8001b20 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 8012d94:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8012d98:	4618      	mov	r0, r3
 8012d9a:	f7ee feb5 	bl	8001b08 <_ZNSaISt4pairIKc10token_typeEED1Ev>
	{"true", TOKEN_TRUE},
 8012d9e:	2305      	movs	r3, #5
 8012da0:	f887 3162 	strb.w	r3, [r7, #354]	; 0x162
};
 8012da4:	f507 72b1 	add.w	r2, r7, #354	; 0x162
 8012da8:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8012dac:	497e      	ldr	r1, [pc, #504]	; (8012fa8 <_Z41__static_initialization_and_destruction_0ii+0x388>)
 8012dae:	4618      	mov	r0, r3
 8012db0:	f7ee f9a2 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"false", TOKEN_FALSE},
 8012db4:	2306      	movs	r3, #6
 8012db6:	f887 3163 	strb.w	r3, [r7, #355]	; 0x163
};
 8012dba:	f207 1263 	addw	r2, r7, #355	; 0x163
 8012dbe:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8012dc2:	331c      	adds	r3, #28
 8012dc4:	4979      	ldr	r1, [pc, #484]	; (8012fac <_Z41__static_initialization_and_destruction_0ii+0x38c>)
 8012dc6:	4618      	mov	r0, r3
 8012dc8:	f7ee f9be 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"setup", TOKEN_SETUP},
 8012dcc:	2307      	movs	r3, #7
 8012dce:	f887 3164 	strb.w	r3, [r7, #356]	; 0x164
};
 8012dd2:	f507 72b2 	add.w	r2, r7, #356	; 0x164
 8012dd6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8012dda:	3338      	adds	r3, #56	; 0x38
 8012ddc:	4974      	ldr	r1, [pc, #464]	; (8012fb0 <_Z41__static_initialization_and_destruction_0ii+0x390>)
 8012dde:	4618      	mov	r0, r3
 8012de0:	f7ee f9b2 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"loop", TOKEN_LOOP},
 8012de4:	2308      	movs	r3, #8
 8012de6:	f887 3165 	strb.w	r3, [r7, #357]	; 0x165
};
 8012dea:	f207 1265 	addw	r2, r7, #357	; 0x165
 8012dee:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8012df2:	3354      	adds	r3, #84	; 0x54
 8012df4:	496f      	ldr	r1, [pc, #444]	; (8012fb4 <_Z41__static_initialization_and_destruction_0ii+0x394>)
 8012df6:	4618      	mov	r0, r3
 8012df8:	f7ee f97e 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"finish", TOKEN_FINISH},
 8012dfc:	2309      	movs	r3, #9
 8012dfe:	f887 3166 	strb.w	r3, [r7, #358]	; 0x166
};
 8012e02:	f507 72b3 	add.w	r2, r7, #358	; 0x166
 8012e06:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8012e0a:	3370      	adds	r3, #112	; 0x70
 8012e0c:	496a      	ldr	r1, [pc, #424]	; (8012fb8 <_Z41__static_initialization_and_destruction_0ii+0x398>)
 8012e0e:	4618      	mov	r0, r3
 8012e10:	f7ee f9c2 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"if", TOKEN_IF},
 8012e14:	2310      	movs	r3, #16
 8012e16:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167
};
 8012e1a:	f207 1267 	addw	r2, r7, #359	; 0x167
 8012e1e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8012e22:	338c      	adds	r3, #140	; 0x8c
 8012e24:	4965      	ldr	r1, [pc, #404]	; (8012fbc <_Z41__static_initialization_and_destruction_0ii+0x39c>)
 8012e26:	4618      	mov	r0, r3
 8012e28:	f7ee f9de 	bl	80011e8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>
	{"elseif", TOKEN_ELSEIF},
 8012e2c:	2311      	movs	r3, #17
 8012e2e:	f887 3168 	strb.w	r3, [r7, #360]	; 0x168
};
 8012e32:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 8012e36:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8012e3a:	33a8      	adds	r3, #168	; 0xa8
 8012e3c:	4960      	ldr	r1, [pc, #384]	; (8012fc0 <_Z41__static_initialization_and_destruction_0ii+0x3a0>)
 8012e3e:	4618      	mov	r0, r3
 8012e40:	f7ee f9aa 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"else", TOKEN_ELSE},
 8012e44:	2312      	movs	r3, #18
 8012e46:	f887 3169 	strb.w	r3, [r7, #361]	; 0x169
};
 8012e4a:	f207 1269 	addw	r2, r7, #361	; 0x169
 8012e4e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8012e52:	33c4      	adds	r3, #196	; 0xc4
 8012e54:	495b      	ldr	r1, [pc, #364]	; (8012fc4 <_Z41__static_initialization_and_destruction_0ii+0x3a4>)
 8012e56:	4618      	mov	r0, r3
 8012e58:	f7ee f94e 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"while", TOKEN_WHILE},
 8012e5c:	2313      	movs	r3, #19
 8012e5e:	f887 316a 	strb.w	r3, [r7, #362]	; 0x16a
};
 8012e62:	f507 72b5 	add.w	r2, r7, #362	; 0x16a
 8012e66:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8012e6a:	33e0      	adds	r3, #224	; 0xe0
 8012e6c:	4956      	ldr	r1, [pc, #344]	; (8012fc8 <_Z41__static_initialization_and_destruction_0ii+0x3a8>)
 8012e6e:	4618      	mov	r0, r3
 8012e70:	f7ee f96a 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"end", TOKEN_END},
 8012e74:	2314      	movs	r3, #20
 8012e76:	f887 316b 	strb.w	r3, [r7, #363]	; 0x16b
};
 8012e7a:	f207 126b 	addw	r2, r7, #363	; 0x16b
 8012e7e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8012e82:	33fc      	adds	r3, #252	; 0xfc
 8012e84:	4951      	ldr	r1, [pc, #324]	; (8012fcc <_Z41__static_initialization_and_destruction_0ii+0x3ac>)
 8012e86:	4618      	mov	r0, r3
 8012e88:	f7ee f9d6 	bl	8001238 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>
 8012e8c:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8012e90:	f107 0248 	add.w	r2, r7, #72	; 0x48
 8012e94:	601a      	str	r2, [r3, #0]
 8012e96:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8012e9a:	220a      	movs	r2, #10
 8012e9c:	605a      	str	r2, [r3, #4]
 8012e9e:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8012ea2:	4618      	mov	r0, r3
 8012ea4:	f7ee fec9 	bl	8001c3a <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 8012ea8:	f507 71b6 	add.w	r1, r7, #364	; 0x16c
 8012eac:	f107 0240 	add.w	r2, r7, #64	; 0x40
 8012eb0:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8012eb4:	9300      	str	r3, [sp, #0]
 8012eb6:	460b      	mov	r3, r1
 8012eb8:	ca06      	ldmia	r2, {r1, r2}
 8012eba:	4845      	ldr	r0, [pc, #276]	; (8012fd0 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 8012ebc:	f7ee fed5 	bl	8001c6a <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>
 8012ec0:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8012ec4:	4618      	mov	r0, r3
 8012ec6:	f7ee fec4 	bl	8001c52 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 8012eca:	f107 0448 	add.w	r4, r7, #72	; 0x48
 8012ece:	f504 748c 	add.w	r4, r4, #280	; 0x118
 8012ed2:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8012ed6:	429c      	cmp	r4, r3
 8012ed8:	d004      	beq.n	8012ee4 <_Z41__static_initialization_and_destruction_0ii+0x2c4>
 8012eda:	3c1c      	subs	r4, #28
 8012edc:	4620      	mov	r0, r4
 8012ede:	f7ee f8fe 	bl	80010de <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 8012ee2:	e7f6      	b.n	8012ed2 <_Z41__static_initialization_and_destruction_0ii+0x2b2>
};
 8012ee4:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 8012ee8:	2200      	movs	r2, #0
 8012eea:	601a      	str	r2, [r3, #0]
 8012eec:	605a      	str	r2, [r3, #4]
 8012eee:	609a      	str	r2, [r3, #8]
 8012ef0:	233c      	movs	r3, #60	; 0x3c
 8012ef2:	f887 317c 	strb.w	r3, [r7, #380]	; 0x17c
 8012ef6:	231b      	movs	r3, #27
 8012ef8:	f887 317d 	strb.w	r3, [r7, #381]	; 0x17d
 8012efc:	231c      	movs	r3, #28
 8012efe:	f887 317e 	strb.w	r3, [r7, #382]	; 0x17e
 8012f02:	233e      	movs	r3, #62	; 0x3e
 8012f04:	f887 317f 	strb.w	r3, [r7, #383]	; 0x17f
 8012f08:	2319      	movs	r3, #25
 8012f0a:	f887 3180 	strb.w	r3, [r7, #384]	; 0x180
 8012f0e:	231a      	movs	r3, #26
 8012f10:	f887 3181 	strb.w	r3, [r7, #385]	; 0x181
 8012f14:	233d      	movs	r3, #61	; 0x3d
 8012f16:	f887 3182 	strb.w	r3, [r7, #386]	; 0x182
 8012f1a:	2318      	movs	r3, #24
 8012f1c:	f887 3183 	strb.w	r3, [r7, #387]	; 0x183
 8012f20:	231d      	movs	r3, #29
 8012f22:	f887 3184 	strb.w	r3, [r7, #388]	; 0x184
 8012f26:	2321      	movs	r3, #33	; 0x21
 8012f28:	f887 3185 	strb.w	r3, [r7, #389]	; 0x185
 8012f2c:	2317      	movs	r3, #23
 8012f2e:	f887 3186 	strb.w	r3, [r7, #390]	; 0x186
 8012f32:	231e      	movs	r3, #30
 8012f34:	f887 3187 	strb.w	r3, [r7, #391]	; 0x187
 8012f38:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 8012f3c:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 8012f40:	2304      	movs	r3, #4
 8012f42:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 8012f46:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 8012f4a:	4618      	mov	r0, r3
 8012f4c:	f7ee febd 	bl	8001cca <_ZNSaISt4pairIKc12double_tokenEEC1Ev>
 8012f50:	f507 72c4 	add.w	r2, r7, #392	; 0x188
 8012f54:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 8012f58:	9300      	str	r3, [sp, #0]
 8012f5a:	4613      	mov	r3, r2
 8012f5c:	f507 72ba 	add.w	r2, r7, #372	; 0x174
 8012f60:	ca06      	ldmia	r2, {r1, r2}
 8012f62:	481c      	ldr	r0, [pc, #112]	; (8012fd4 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 8012f64:	f7ee fec9 	bl	8001cfa <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 8012f68:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 8012f6c:	4618      	mov	r0, r3
 8012f6e:	f7ee feb8 	bl	8001ce2 <_ZNSaISt4pairIKc12double_tokenEED1Ev>
static const std::map<char, double_token> token_double_chars
 8012f72:	1d3b      	adds	r3, r7, #4
 8012f74:	681b      	ldr	r3, [r3, #0]
 8012f76:	2b00      	cmp	r3, #0
 8012f78:	d10e      	bne.n	8012f98 <_Z41__static_initialization_and_destruction_0ii+0x378>
 8012f7a:	463b      	mov	r3, r7
 8012f7c:	681b      	ldr	r3, [r3, #0]
 8012f7e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8012f82:	4293      	cmp	r3, r2
 8012f84:	d108      	bne.n	8012f98 <_Z41__static_initialization_and_destruction_0ii+0x378>
 8012f86:	4813      	ldr	r0, [pc, #76]	; (8012fd4 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 8012f88:	f7f6 fb49 	bl	800961e <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>
static const std::map<std::string, token_type> token_strings
 8012f8c:	4810      	ldr	r0, [pc, #64]	; (8012fd0 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 8012f8e:	f7f6 fb53 	bl	8009638 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
static const std::map<char, token_type> token_chars
 8012f92:	4804      	ldr	r0, [pc, #16]	; (8012fa4 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 8012f94:	f7f6 fb5d 	bl	8009652 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>
 8012f98:	bf00      	nop
 8012f9a:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 8012f9e:	46bd      	mov	sp, r7
 8012fa0:	bd90      	pop	{r4, r7, pc}
 8012fa2:	bf00      	nop
 8012fa4:	200003c0 	.word	0x200003c0
 8012fa8:	080278e0 	.word	0x080278e0
 8012fac:	080278e8 	.word	0x080278e8
 8012fb0:	080278f0 	.word	0x080278f0
 8012fb4:	080278f8 	.word	0x080278f8
 8012fb8:	08027900 	.word	0x08027900
 8012fbc:	08027908 	.word	0x08027908
 8012fc0:	0802790c 	.word	0x0802790c
 8012fc4:	08027914 	.word	0x08027914
 8012fc8:	0802791c 	.word	0x0802791c
 8012fcc:	08027924 	.word	0x08027924
 8012fd0:	200003d8 	.word	0x200003d8
 8012fd4:	200003f0 	.word	0x200003f0

08012fd8 <_GLOBAL__sub_I__ZN14Method_handlerC2Ev>:
 8012fd8:	b580      	push	{r7, lr}
 8012fda:	af00      	add	r7, sp, #0
 8012fdc:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8012fe0:	2001      	movs	r0, #1
 8012fe2:	f7ff fe1d 	bl	8012c20 <_Z41__static_initialization_and_destruction_0ii>
 8012fe6:	bd80      	pop	{r7, pc}

08012fe8 <_GLOBAL__sub_D__ZN14Method_handlerC2Ev>:
 8012fe8:	b580      	push	{r7, lr}
 8012fea:	af00      	add	r7, sp, #0
 8012fec:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8012ff0:	2000      	movs	r0, #0
 8012ff2:	f7ff fe15 	bl	8012c20 <_Z41__static_initialization_and_destruction_0ii>
 8012ff6:	bd80      	pop	{r7, pc}

08012ff8 <_ZN6ParserC1Ev>:
	delete setup;
	delete loop;
	delete finish;
}

Parser::Parser()
 8012ff8:	b580      	push	{r7, lr}
 8012ffa:	b082      	sub	sp, #8
 8012ffc:	af00      	add	r7, sp, #0
 8012ffe:	6078      	str	r0, [r7, #4]
 8013000:	687b      	ldr	r3, [r7, #4]
 8013002:	4618      	mov	r0, r3
 8013004:	f7fb ffb5 	bl	800ef72 <_ZN5TokenC1Ev>
{

}
 8013008:	687b      	ldr	r3, [r7, #4]
 801300a:	4618      	mov	r0, r3
 801300c:	3708      	adds	r7, #8
 801300e:	46bd      	mov	sp, r7
 8013010:	bd80      	pop	{r7, pc}
	...

08013014 <_ZN6Parser11parse_whileEv>:

While_statement* Parser::parse_while()
{
 8013014:	b580      	push	{r7, lr}
 8013016:	b092      	sub	sp, #72	; 0x48
 8013018:	af00      	add	r7, sp, #0
 801301a:	6078      	str	r0, [r7, #4]
	auto st = new While_statement();
 801301c:	2008      	movs	r0, #8
 801301e:	f00f fc02 	bl	8022826 <_Znwj>
 8013022:	4603      	mov	r3, r0
 8013024:	2200      	movs	r2, #0
 8013026:	601a      	str	r2, [r3, #0]
 8013028:	2200      	movs	r2, #0
 801302a:	605a      	str	r2, [r3, #4]
 801302c:	647b      	str	r3, [r7, #68]	; 0x44
	st->condition = parse_expression();
 801302e:	6878      	ldr	r0, [r7, #4]
 8013030:	f007 faca 	bl	801a5c8 <_ZN6Parser16parse_expressionEv>
 8013034:	4602      	mov	r2, r0
 8013036:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8013038:	601a      	str	r2, [r3, #0]
	assert_token(TOKEN_NEWLINE, "line break after condition expression");
 801303a:	f107 0324 	add.w	r3, r7, #36	; 0x24
 801303e:	4618      	mov	r0, r3
 8013040:	f00f fc02 	bl	8022848 <_ZNSaIcEC1Ev>
 8013044:	f107 0224 	add.w	r2, r7, #36	; 0x24
 8013048:	f107 030c 	add.w	r3, r7, #12
 801304c:	4921      	ldr	r1, [pc, #132]	; (80130d4 <_ZN6Parser11parse_whileEv+0xc0>)
 801304e:	4618      	mov	r0, r3
 8013050:	f7ee fda1 	bl	8001b96 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8013054:	f107 030c 	add.w	r3, r7, #12
 8013058:	461a      	mov	r2, r3
 801305a:	210a      	movs	r1, #10
 801305c:	6878      	ldr	r0, [r7, #4]
 801305e:	f000 fad5 	bl	801360c <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013062:	f107 030c 	add.w	r3, r7, #12
 8013066:	4618      	mov	r0, r3
 8013068:	f00f fe7f 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801306c:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8013070:	4618      	mov	r0, r3
 8013072:	f00f fbea 	bl	802284a <_ZNSaIcED1Ev>
	get_next_token();
 8013076:	6878      	ldr	r0, [r7, #4]
 8013078:	f000 fdeb 	bl	8013c52 <_ZN6Parser14get_next_tokenEv>
	st->while_body = parse_body();
 801307c:	6878      	ldr	r0, [r7, #4]
 801307e:	f000 fd85 	bl	8013b8c <_ZN6Parser10parse_bodyEv>
 8013082:	4602      	mov	r2, r0
 8013084:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8013086:	605a      	str	r2, [r3, #4]
	assert_token(TOKEN_END, "\"end\" after if body");
 8013088:	f107 0340 	add.w	r3, r7, #64	; 0x40
 801308c:	4618      	mov	r0, r3
 801308e:	f00f fbdb 	bl	8022848 <_ZNSaIcEC1Ev>
 8013092:	f107 0240 	add.w	r2, r7, #64	; 0x40
 8013096:	f107 0328 	add.w	r3, r7, #40	; 0x28
 801309a:	490f      	ldr	r1, [pc, #60]	; (80130d8 <_ZN6Parser11parse_whileEv+0xc4>)
 801309c:	4618      	mov	r0, r3
 801309e:	f7ee fd7a 	bl	8001b96 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 80130a2:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80130a6:	461a      	mov	r2, r3
 80130a8:	2114      	movs	r1, #20
 80130aa:	6878      	ldr	r0, [r7, #4]
 80130ac:	f000 faae 	bl	801360c <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 80130b0:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80130b4:	4618      	mov	r0, r3
 80130b6:	f00f fe58 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80130ba:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80130be:	4618      	mov	r0, r3
 80130c0:	f00f fbc3 	bl	802284a <_ZNSaIcED1Ev>
	get_next_token();
 80130c4:	6878      	ldr	r0, [r7, #4]
 80130c6:	f000 fdc4 	bl	8013c52 <_ZN6Parser14get_next_tokenEv>
	return st;
 80130ca:	6c7b      	ldr	r3, [r7, #68]	; 0x44
}
 80130cc:	4618      	mov	r0, r3
 80130ce:	3748      	adds	r7, #72	; 0x48
 80130d0:	46bd      	mov	sp, r7
 80130d2:	bd80      	pop	{r7, pc}
 80130d4:	08027928 	.word	0x08027928
 80130d8:	08027950 	.word	0x08027950

080130dc <_ZN6Parser20parse_elseif_contentEP12If_statement>:

void Parser::parse_elseif_content(If_statement *st)
{
 80130dc:	b590      	push	{r4, r7, lr}
 80130de:	b08d      	sub	sp, #52	; 0x34
 80130e0:	af00      	add	r7, sp, #0
 80130e2:	6078      	str	r0, [r7, #4]
 80130e4:	6039      	str	r1, [r7, #0]
	get_next_token();
 80130e6:	6878      	ldr	r0, [r7, #4]
 80130e8:	f000 fdb3 	bl	8013c52 <_ZN6Parser14get_next_tokenEv>
	st->conditions.push_back(parse_expression());
 80130ec:	683c      	ldr	r4, [r7, #0]
 80130ee:	6878      	ldr	r0, [r7, #4]
 80130f0:	f007 fa6a 	bl	801a5c8 <_ZN6Parser16parse_expressionEv>
 80130f4:	4603      	mov	r3, r0
 80130f6:	60fb      	str	r3, [r7, #12]
 80130f8:	f107 030c 	add.w	r3, r7, #12
 80130fc:	4619      	mov	r1, r3
 80130fe:	4620      	mov	r0, r4
 8013100:	f000 ff60 	bl	8013fc4 <_ZNSt6vectorIP10ExpressionSaIS1_EE9push_backEOS1_>
	assert_token(TOKEN_NEWLINE, "line break after condition expression");
 8013104:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8013108:	4618      	mov	r0, r3
 801310a:	f00f fb9d 	bl	8022848 <_ZNSaIcEC1Ev>
 801310e:	f107 0228 	add.w	r2, r7, #40	; 0x28
 8013112:	f107 0310 	add.w	r3, r7, #16
 8013116:	4915      	ldr	r1, [pc, #84]	; (801316c <_ZN6Parser20parse_elseif_contentEP12If_statement+0x90>)
 8013118:	4618      	mov	r0, r3
 801311a:	f7ee fd3c 	bl	8001b96 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801311e:	f107 0310 	add.w	r3, r7, #16
 8013122:	461a      	mov	r2, r3
 8013124:	210a      	movs	r1, #10
 8013126:	6878      	ldr	r0, [r7, #4]
 8013128:	f000 fa70 	bl	801360c <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801312c:	f107 0310 	add.w	r3, r7, #16
 8013130:	4618      	mov	r0, r3
 8013132:	f00f fe1a 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8013136:	f107 0328 	add.w	r3, r7, #40	; 0x28
 801313a:	4618      	mov	r0, r3
 801313c:	f00f fb85 	bl	802284a <_ZNSaIcED1Ev>
	get_next_token();
 8013140:	6878      	ldr	r0, [r7, #4]
 8013142:	f000 fd86 	bl	8013c52 <_ZN6Parser14get_next_tokenEv>
	st->if_bodies.push_back(parse_body());
 8013146:	683b      	ldr	r3, [r7, #0]
 8013148:	f103 040c 	add.w	r4, r3, #12
 801314c:	6878      	ldr	r0, [r7, #4]
 801314e:	f000 fd1d 	bl	8013b8c <_ZN6Parser10parse_bodyEv>
 8013152:	4603      	mov	r3, r0
 8013154:	62fb      	str	r3, [r7, #44]	; 0x2c
 8013156:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 801315a:	4619      	mov	r1, r3
 801315c:	4620      	mov	r0, r4
 801315e:	f000 ff42 	bl	8013fe6 <_ZNSt6vectorIP4BodySaIS1_EE9push_backEOS1_>
}
 8013162:	bf00      	nop
 8013164:	3734      	adds	r7, #52	; 0x34
 8013166:	46bd      	mov	sp, r7
 8013168:	bd90      	pop	{r4, r7, pc}
 801316a:	bf00      	nop
 801316c:	08027928 	.word	0x08027928

08013170 <_ZN6Parser18parse_else_contentEP12If_statement>:

void Parser::parse_else_content(If_statement *st)
{
 8013170:	b590      	push	{r4, r7, lr}
 8013172:	b08b      	sub	sp, #44	; 0x2c
 8013174:	af00      	add	r7, sp, #0
 8013176:	6078      	str	r0, [r7, #4]
 8013178:	6039      	str	r1, [r7, #0]
	get_next_token();
 801317a:	6878      	ldr	r0, [r7, #4]
 801317c:	f000 fd69 	bl	8013c52 <_ZN6Parser14get_next_tokenEv>
	assert_token(TOKEN_NEWLINE, "line break after \"else\"");
 8013180:	f107 0320 	add.w	r3, r7, #32
 8013184:	4618      	mov	r0, r3
 8013186:	f00f fb5f 	bl	8022848 <_ZNSaIcEC1Ev>
 801318a:	f107 0220 	add.w	r2, r7, #32
 801318e:	f107 0308 	add.w	r3, r7, #8
 8013192:	4915      	ldr	r1, [pc, #84]	; (80131e8 <_ZN6Parser18parse_else_contentEP12If_statement+0x78>)
 8013194:	4618      	mov	r0, r3
 8013196:	f7ee fcfe 	bl	8001b96 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801319a:	f107 0308 	add.w	r3, r7, #8
 801319e:	461a      	mov	r2, r3
 80131a0:	210a      	movs	r1, #10
 80131a2:	6878      	ldr	r0, [r7, #4]
 80131a4:	f000 fa32 	bl	801360c <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 80131a8:	f107 0308 	add.w	r3, r7, #8
 80131ac:	4618      	mov	r0, r3
 80131ae:	f00f fddc 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80131b2:	f107 0320 	add.w	r3, r7, #32
 80131b6:	4618      	mov	r0, r3
 80131b8:	f00f fb47 	bl	802284a <_ZNSaIcED1Ev>
	get_next_token();
 80131bc:	6878      	ldr	r0, [r7, #4]
 80131be:	f000 fd48 	bl	8013c52 <_ZN6Parser14get_next_tokenEv>
	st->if_bodies.push_back(parse_body());
 80131c2:	683b      	ldr	r3, [r7, #0]
 80131c4:	f103 040c 	add.w	r4, r3, #12
 80131c8:	6878      	ldr	r0, [r7, #4]
 80131ca:	f000 fcdf 	bl	8013b8c <_ZN6Parser10parse_bodyEv>
 80131ce:	4603      	mov	r3, r0
 80131d0:	627b      	str	r3, [r7, #36]	; 0x24
 80131d2:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80131d6:	4619      	mov	r1, r3
 80131d8:	4620      	mov	r0, r4
 80131da:	f000 ff04 	bl	8013fe6 <_ZNSt6vectorIP4BodySaIS1_EE9push_backEOS1_>
}
 80131de:	bf00      	nop
 80131e0:	372c      	adds	r7, #44	; 0x2c
 80131e2:	46bd      	mov	sp, r7
 80131e4:	bd90      	pop	{r4, r7, pc}
 80131e6:	bf00      	nop
 80131e8:	08027964 	.word	0x08027964

080131ec <_ZN6Parser16parse_if_contentEP12If_statement>:

void Parser::parse_if_content(If_statement *st)
{
 80131ec:	b590      	push	{r4, r7, lr}
 80131ee:	b08d      	sub	sp, #52	; 0x34
 80131f0:	af00      	add	r7, sp, #0
 80131f2:	6078      	str	r0, [r7, #4]
 80131f4:	6039      	str	r1, [r7, #0]
	st->conditions.push_back(parse_expression());
 80131f6:	683c      	ldr	r4, [r7, #0]
 80131f8:	6878      	ldr	r0, [r7, #4]
 80131fa:	f007 f9e5 	bl	801a5c8 <_ZN6Parser16parse_expressionEv>
 80131fe:	4603      	mov	r3, r0
 8013200:	60fb      	str	r3, [r7, #12]
 8013202:	f107 030c 	add.w	r3, r7, #12
 8013206:	4619      	mov	r1, r3
 8013208:	4620      	mov	r0, r4
 801320a:	f000 fedb 	bl	8013fc4 <_ZNSt6vectorIP10ExpressionSaIS1_EE9push_backEOS1_>
	assert_token(TOKEN_NEWLINE, "line break after condition expression");
 801320e:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8013212:	4618      	mov	r0, r3
 8013214:	f00f fb18 	bl	8022848 <_ZNSaIcEC1Ev>
 8013218:	f107 0228 	add.w	r2, r7, #40	; 0x28
 801321c:	f107 0310 	add.w	r3, r7, #16
 8013220:	4914      	ldr	r1, [pc, #80]	; (8013274 <_ZN6Parser16parse_if_contentEP12If_statement+0x88>)
 8013222:	4618      	mov	r0, r3
 8013224:	f7ee fcb7 	bl	8001b96 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8013228:	f107 0310 	add.w	r3, r7, #16
 801322c:	461a      	mov	r2, r3
 801322e:	210a      	movs	r1, #10
 8013230:	6878      	ldr	r0, [r7, #4]
 8013232:	f000 f9eb 	bl	801360c <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013236:	f107 0310 	add.w	r3, r7, #16
 801323a:	4618      	mov	r0, r3
 801323c:	f00f fd95 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8013240:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8013244:	4618      	mov	r0, r3
 8013246:	f00f fb00 	bl	802284a <_ZNSaIcED1Ev>
	get_next_token();
 801324a:	6878      	ldr	r0, [r7, #4]
 801324c:	f000 fd01 	bl	8013c52 <_ZN6Parser14get_next_tokenEv>
	st->if_bodies.push_back(parse_body());
 8013250:	683b      	ldr	r3, [r7, #0]
 8013252:	f103 040c 	add.w	r4, r3, #12
 8013256:	6878      	ldr	r0, [r7, #4]
 8013258:	f000 fc98 	bl	8013b8c <_ZN6Parser10parse_bodyEv>
 801325c:	4603      	mov	r3, r0
 801325e:	62fb      	str	r3, [r7, #44]	; 0x2c
 8013260:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8013264:	4619      	mov	r1, r3
 8013266:	4620      	mov	r0, r4
 8013268:	f000 febd 	bl	8013fe6 <_ZNSt6vectorIP4BodySaIS1_EE9push_backEOS1_>
}
 801326c:	bf00      	nop
 801326e:	3734      	adds	r7, #52	; 0x34
 8013270:	46bd      	mov	sp, r7
 8013272:	bd90      	pop	{r4, r7, pc}
 8013274:	08027928 	.word	0x08027928

08013278 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EEC1Ev>:
      _Vector_base() = default;
 8013278:	b580      	push	{r7, lr}
 801327a:	b082      	sub	sp, #8
 801327c:	af00      	add	r7, sp, #0
 801327e:	6078      	str	r0, [r7, #4]
 8013280:	687b      	ldr	r3, [r7, #4]
 8013282:	4618      	mov	r0, r3
 8013284:	f000 fec0 	bl	8014008 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE12_Vector_implC1Ev>
 8013288:	687b      	ldr	r3, [r7, #4]
 801328a:	4618      	mov	r0, r3
 801328c:	3708      	adds	r7, #8
 801328e:	46bd      	mov	sp, r7
 8013290:	bd80      	pop	{r7, pc}

08013292 <_ZNSt6vectorIP10ExpressionSaIS1_EEC1Ev>:
      vector() = default;
 8013292:	b580      	push	{r7, lr}
 8013294:	b082      	sub	sp, #8
 8013296:	af00      	add	r7, sp, #0
 8013298:	6078      	str	r0, [r7, #4]
 801329a:	687b      	ldr	r3, [r7, #4]
 801329c:	4618      	mov	r0, r3
 801329e:	f7ff ffeb 	bl	8013278 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EEC1Ev>
 80132a2:	687b      	ldr	r3, [r7, #4]
 80132a4:	4618      	mov	r0, r3
 80132a6:	3708      	adds	r7, #8
 80132a8:	46bd      	mov	sp, r7
 80132aa:	bd80      	pop	{r7, pc}

080132ac <_ZNSt12_Vector_baseIP4BodySaIS1_EEC1Ev>:
      _Vector_base() = default;
 80132ac:	b580      	push	{r7, lr}
 80132ae:	b082      	sub	sp, #8
 80132b0:	af00      	add	r7, sp, #0
 80132b2:	6078      	str	r0, [r7, #4]
 80132b4:	687b      	ldr	r3, [r7, #4]
 80132b6:	4618      	mov	r0, r3
 80132b8:	f000 feb6 	bl	8014028 <_ZNSt12_Vector_baseIP4BodySaIS1_EE12_Vector_implC1Ev>
 80132bc:	687b      	ldr	r3, [r7, #4]
 80132be:	4618      	mov	r0, r3
 80132c0:	3708      	adds	r7, #8
 80132c2:	46bd      	mov	sp, r7
 80132c4:	bd80      	pop	{r7, pc}

080132c6 <_ZNSt6vectorIP4BodySaIS1_EEC1Ev>:
      vector() = default;
 80132c6:	b580      	push	{r7, lr}
 80132c8:	b082      	sub	sp, #8
 80132ca:	af00      	add	r7, sp, #0
 80132cc:	6078      	str	r0, [r7, #4]
 80132ce:	687b      	ldr	r3, [r7, #4]
 80132d0:	4618      	mov	r0, r3
 80132d2:	f7ff ffeb 	bl	80132ac <_ZNSt12_Vector_baseIP4BodySaIS1_EEC1Ev>
 80132d6:	687b      	ldr	r3, [r7, #4]
 80132d8:	4618      	mov	r0, r3
 80132da:	3708      	adds	r7, #8
 80132dc:	46bd      	mov	sp, r7
 80132de:	bd80      	pop	{r7, pc}

080132e0 <_ZN12If_statementC1Ev>:
public:
	~Body();
	std::vector<Statement*> statements;
};

class If_statement
 80132e0:	b580      	push	{r7, lr}
 80132e2:	b082      	sub	sp, #8
 80132e4:	af00      	add	r7, sp, #0
 80132e6:	6078      	str	r0, [r7, #4]
 80132e8:	687b      	ldr	r3, [r7, #4]
 80132ea:	4618      	mov	r0, r3
 80132ec:	f7ff ffd1 	bl	8013292 <_ZNSt6vectorIP10ExpressionSaIS1_EEC1Ev>
 80132f0:	687b      	ldr	r3, [r7, #4]
 80132f2:	330c      	adds	r3, #12
 80132f4:	4618      	mov	r0, r3
 80132f6:	f7ff ffe6 	bl	80132c6 <_ZNSt6vectorIP4BodySaIS1_EEC1Ev>
 80132fa:	687b      	ldr	r3, [r7, #4]
 80132fc:	4618      	mov	r0, r3
 80132fe:	3708      	adds	r7, #8
 8013300:	46bd      	mov	sp, r7
 8013302:	bd80      	pop	{r7, pc}

08013304 <_ZN6Parser8parse_ifEv>:

If_statement* Parser::parse_if()
{
 8013304:	b590      	push	{r4, r7, lr}
 8013306:	b08b      	sub	sp, #44	; 0x2c
 8013308:	af00      	add	r7, sp, #0
 801330a:	6078      	str	r0, [r7, #4]
	auto st = new If_statement();
 801330c:	2018      	movs	r0, #24
 801330e:	f00f fa8a 	bl	8022826 <_Znwj>
 8013312:	4603      	mov	r3, r0
 8013314:	461c      	mov	r4, r3
 8013316:	4622      	mov	r2, r4
 8013318:	2300      	movs	r3, #0
 801331a:	6013      	str	r3, [r2, #0]
 801331c:	6053      	str	r3, [r2, #4]
 801331e:	6093      	str	r3, [r2, #8]
 8013320:	60d3      	str	r3, [r2, #12]
 8013322:	6113      	str	r3, [r2, #16]
 8013324:	6153      	str	r3, [r2, #20]
 8013326:	4620      	mov	r0, r4
 8013328:	f7ff ffda 	bl	80132e0 <_ZN12If_statementC1Ev>
 801332c:	627c      	str	r4, [r7, #36]	; 0x24

	parse_if_content(st);
 801332e:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8013330:	6878      	ldr	r0, [r7, #4]
 8013332:	f7ff ff5b 	bl	80131ec <_ZN6Parser16parse_if_contentEP12If_statement>
	while (token_buffer.type == TOKEN_ELSEIF)
 8013336:	687b      	ldr	r3, [r7, #4]
 8013338:	781b      	ldrb	r3, [r3, #0]
 801333a:	2b11      	cmp	r3, #17
 801333c:	d104      	bne.n	8013348 <_ZN6Parser8parse_ifEv+0x44>
	{
		parse_elseif_content(st);
 801333e:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8013340:	6878      	ldr	r0, [r7, #4]
 8013342:	f7ff fecb 	bl	80130dc <_ZN6Parser20parse_elseif_contentEP12If_statement>
	while (token_buffer.type == TOKEN_ELSEIF)
 8013346:	e7f6      	b.n	8013336 <_ZN6Parser8parse_ifEv+0x32>
	}
	if (token_buffer.type == TOKEN_ELSE)
 8013348:	687b      	ldr	r3, [r7, #4]
 801334a:	781b      	ldrb	r3, [r3, #0]
 801334c:	2b12      	cmp	r3, #18
 801334e:	d103      	bne.n	8013358 <_ZN6Parser8parse_ifEv+0x54>
	{
		parse_else_content(st);
 8013350:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8013352:	6878      	ldr	r0, [r7, #4]
 8013354:	f7ff ff0c 	bl	8013170 <_ZN6Parser18parse_else_contentEP12If_statement>
	}
	assert_token(TOKEN_END, "\"end\" after if body");
 8013358:	f107 0320 	add.w	r3, r7, #32
 801335c:	4618      	mov	r0, r3
 801335e:	f00f fa73 	bl	8022848 <_ZNSaIcEC1Ev>
 8013362:	f107 0220 	add.w	r2, r7, #32
 8013366:	f107 0308 	add.w	r3, r7, #8
 801336a:	490e      	ldr	r1, [pc, #56]	; (80133a4 <_ZN6Parser8parse_ifEv+0xa0>)
 801336c:	4618      	mov	r0, r3
 801336e:	f7ee fc12 	bl	8001b96 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8013372:	f107 0308 	add.w	r3, r7, #8
 8013376:	461a      	mov	r2, r3
 8013378:	2114      	movs	r1, #20
 801337a:	6878      	ldr	r0, [r7, #4]
 801337c:	f000 f946 	bl	801360c <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013380:	f107 0308 	add.w	r3, r7, #8
 8013384:	4618      	mov	r0, r3
 8013386:	f00f fcf0 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801338a:	f107 0320 	add.w	r3, r7, #32
 801338e:	4618      	mov	r0, r3
 8013390:	f00f fa5b 	bl	802284a <_ZNSaIcED1Ev>
	get_next_token();
 8013394:	6878      	ldr	r0, [r7, #4]
 8013396:	f000 fc5c 	bl	8013c52 <_ZN6Parser14get_next_tokenEv>

	return st;
 801339a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
}
 801339c:	4618      	mov	r0, r3
 801339e:	372c      	adds	r7, #44	; 0x2c
 80133a0:	46bd      	mov	sp, r7
 80133a2:	bd90      	pop	{r4, r7, pc}
 80133a4:	08027950 	.word	0x08027950

080133a8 <_ZN6Parser20parse_variable_indexEP8Variable>:

void Parser::parse_variable_index(Variable *var)
{
 80133a8:	b580      	push	{r7, lr}
 80133aa:	b08a      	sub	sp, #40	; 0x28
 80133ac:	af00      	add	r7, sp, #0
 80133ae:	6078      	str	r0, [r7, #4]
 80133b0:	6039      	str	r1, [r7, #0]
	if (token_buffer.type == TOKEN_LEFT_SQUARE)
 80133b2:	687b      	ldr	r3, [r7, #4]
 80133b4:	781b      	ldrb	r3, [r3, #0]
 80133b6:	2b0d      	cmp	r3, #13
 80133b8:	d12a      	bne.n	8013410 <_ZN6Parser20parse_variable_indexEP8Variable+0x68>
	{
		get_next_token();
 80133ba:	6878      	ldr	r0, [r7, #4]
 80133bc:	f000 fc49 	bl	8013c52 <_ZN6Parser14get_next_tokenEv>
		var->index = parse_expression();
 80133c0:	6878      	ldr	r0, [r7, #4]
 80133c2:	f007 f901 	bl	801a5c8 <_ZN6Parser16parse_expressionEv>
 80133c6:	4602      	mov	r2, r0
 80133c8:	683b      	ldr	r3, [r7, #0]
 80133ca:	61da      	str	r2, [r3, #28]
		assert_token(TOKEN_RIGHT_SQUARE, "closing square bracket");
 80133cc:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80133d0:	4618      	mov	r0, r3
 80133d2:	f00f fa39 	bl	8022848 <_ZNSaIcEC1Ev>
 80133d6:	f107 0224 	add.w	r2, r7, #36	; 0x24
 80133da:	f107 030c 	add.w	r3, r7, #12
 80133de:	4910      	ldr	r1, [pc, #64]	; (8013420 <_ZN6Parser20parse_variable_indexEP8Variable+0x78>)
 80133e0:	4618      	mov	r0, r3
 80133e2:	f7ee fbd8 	bl	8001b96 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 80133e6:	f107 030c 	add.w	r3, r7, #12
 80133ea:	461a      	mov	r2, r3
 80133ec:	210e      	movs	r1, #14
 80133ee:	6878      	ldr	r0, [r7, #4]
 80133f0:	f000 f90c 	bl	801360c <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 80133f4:	f107 030c 	add.w	r3, r7, #12
 80133f8:	4618      	mov	r0, r3
 80133fa:	f00f fcb6 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80133fe:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8013402:	4618      	mov	r0, r3
 8013404:	f00f fa21 	bl	802284a <_ZNSaIcED1Ev>
		get_next_token();
 8013408:	6878      	ldr	r0, [r7, #4]
 801340a:	f000 fc22 	bl	8013c52 <_ZN6Parser14get_next_tokenEv>
	}
	else
	{
		var->index = nullptr;
	}
}
 801340e:	e002      	b.n	8013416 <_ZN6Parser20parse_variable_indexEP8Variable+0x6e>
		var->index = nullptr;
 8013410:	683b      	ldr	r3, [r7, #0]
 8013412:	2200      	movs	r2, #0
 8013414:	61da      	str	r2, [r3, #28]
}
 8013416:	bf00      	nop
 8013418:	3728      	adds	r7, #40	; 0x28
 801341a:	46bd      	mov	sp, r7
 801341c:	bd80      	pop	{r7, pc}
 801341e:	bf00      	nop
 8013420:	0802797c 	.word	0x0802797c

08013424 <_ZN6Parser25parse_member_selection_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void Parser::parse_member_selection_id(std::string &id)
{
 8013424:	b580      	push	{r7, lr}
 8013426:	b096      	sub	sp, #88	; 0x58
 8013428:	af00      	add	r7, sp, #0
 801342a:	6078      	str	r0, [r7, #4]
 801342c:	6039      	str	r1, [r7, #0]
	assert_token(TOKEN_COLON, "colon operator \":\"");
 801342e:	f107 0320 	add.w	r3, r7, #32
 8013432:	4618      	mov	r0, r3
 8013434:	f00f fa08 	bl	8022848 <_ZNSaIcEC1Ev>
 8013438:	f107 0220 	add.w	r2, r7, #32
 801343c:	f107 0308 	add.w	r3, r7, #8
 8013440:	4929      	ldr	r1, [pc, #164]	; (80134e8 <_ZN6Parser25parse_member_selection_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xc4>)
 8013442:	4618      	mov	r0, r3
 8013444:	f7ee fba7 	bl	8001b96 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8013448:	f107 0308 	add.w	r3, r7, #8
 801344c:	461a      	mov	r2, r3
 801344e:	2101      	movs	r1, #1
 8013450:	6878      	ldr	r0, [r7, #4]
 8013452:	f000 f8db 	bl	801360c <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013456:	f107 0308 	add.w	r3, r7, #8
 801345a:	4618      	mov	r0, r3
 801345c:	f00f fc85 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8013460:	f107 0320 	add.w	r3, r7, #32
 8013464:	4618      	mov	r0, r3
 8013466:	f00f f9f0 	bl	802284a <_ZNSaIcED1Ev>
	get_next_token();
 801346a:	6878      	ldr	r0, [r7, #4]
 801346c:	f000 fbf1 	bl	8013c52 <_ZN6Parser14get_next_tokenEv>
	assert_token(TOKEN_IDENTIFIER, "identifier");
 8013470:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8013474:	4618      	mov	r0, r3
 8013476:	f00f f9e7 	bl	8022848 <_ZNSaIcEC1Ev>
 801347a:	f107 023c 	add.w	r2, r7, #60	; 0x3c
 801347e:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8013482:	491a      	ldr	r1, [pc, #104]	; (80134ec <_ZN6Parser25parse_member_selection_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xc8>)
 8013484:	4618      	mov	r0, r3
 8013486:	f7ee fb86 	bl	8001b96 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801348a:	f107 0324 	add.w	r3, r7, #36	; 0x24
 801348e:	461a      	mov	r2, r3
 8013490:	2102      	movs	r1, #2
 8013492:	6878      	ldr	r0, [r7, #4]
 8013494:	f000 f8ba 	bl	801360c <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013498:	f107 0324 	add.w	r3, r7, #36	; 0x24
 801349c:	4618      	mov	r0, r3
 801349e:	f00f fc64 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80134a2:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 80134a6:	4618      	mov	r0, r3
 80134a8:	f00f f9cf 	bl	802284a <_ZNSaIcED1Ev>
	id = std::string(std::get<std::string>(token_buffer.value));
 80134ac:	687b      	ldr	r3, [r7, #4]
 80134ae:	3304      	adds	r3, #4
 80134b0:	4618      	mov	r0, r3
 80134b2:	f000 fdc9 	bl	8014048 <_ZSt3getINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_ifbEERT_RSt7variantIJDpT0_EE>
 80134b6:	4602      	mov	r2, r0
 80134b8:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80134bc:	4611      	mov	r1, r2
 80134be:	4618      	mov	r0, r3
 80134c0:	f00f fe14 	bl	80230ec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 80134c4:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80134c8:	4619      	mov	r1, r3
 80134ca:	6838      	ldr	r0, [r7, #0]
 80134cc:	f00f fc59 	bl	8022d82 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>
 80134d0:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80134d4:	4618      	mov	r0, r3
 80134d6:	f00f fc48 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	get_next_token();
 80134da:	6878      	ldr	r0, [r7, #4]
 80134dc:	f000 fbb9 	bl	8013c52 <_ZN6Parser14get_next_tokenEv>
}
 80134e0:	bf00      	nop
 80134e2:	3758      	adds	r7, #88	; 0x58
 80134e4:	46bd      	mov	sp, r7
 80134e6:	bd80      	pop	{r7, pc}
 80134e8:	08027994 	.word	0x08027994
 80134ec:	080279a8 	.word	0x080279a8

080134f0 <_ZN6Parser17parse_variable_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8Variable>:

void Parser::parse_variable_id(std::string &id, Variable *var)
{
 80134f0:	b580      	push	{r7, lr}
 80134f2:	b08a      	sub	sp, #40	; 0x28
 80134f4:	af00      	add	r7, sp, #0
 80134f6:	60f8      	str	r0, [r7, #12]
 80134f8:	60b9      	str	r1, [r7, #8]
 80134fa:	607a      	str	r2, [r7, #4]
	if (id == "Arg")
 80134fc:	491b      	ldr	r1, [pc, #108]	; (801356c <_ZN6Parser17parse_variable_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8Variable+0x7c>)
 80134fe:	68b8      	ldr	r0, [r7, #8]
 8013500:	f000 fdae 	bl	8014060 <_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_>
 8013504:	4603      	mov	r3, r0
 8013506:	2b00      	cmp	r3, #0
 8013508:	d007      	beq.n	801351a <_ZN6Parser17parse_variable_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8Variable+0x2a>
	{
		var->type = VARIABLE_ARG;
 801350a:	687b      	ldr	r3, [r7, #4]
 801350c:	2201      	movs	r2, #1
 801350e:	701a      	strb	r2, [r3, #0]
		parse_member_selection_id(id);
 8013510:	68b9      	ldr	r1, [r7, #8]
 8013512:	68f8      	ldr	r0, [r7, #12]
 8013514:	f7ff ff86 	bl	8013424 <_ZN6Parser25parse_member_selection_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013518:	e011      	b.n	801353e <_ZN6Parser17parse_variable_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8Variable+0x4e>
	}
	else if (id == "Par")
 801351a:	4915      	ldr	r1, [pc, #84]	; (8013570 <_ZN6Parser17parse_variable_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8Variable+0x80>)
 801351c:	68b8      	ldr	r0, [r7, #8]
 801351e:	f000 fd9f 	bl	8014060 <_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_>
 8013522:	4603      	mov	r3, r0
 8013524:	2b00      	cmp	r3, #0
 8013526:	d007      	beq.n	8013538 <_ZN6Parser17parse_variable_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8Variable+0x48>
	{
		var->type = VARIABLE_PAR;
 8013528:	687b      	ldr	r3, [r7, #4]
 801352a:	2202      	movs	r2, #2
 801352c:	701a      	strb	r2, [r3, #0]
		parse_member_selection_id(id);
 801352e:	68b9      	ldr	r1, [r7, #8]
 8013530:	68f8      	ldr	r0, [r7, #12]
 8013532:	f7ff ff77 	bl	8013424 <_ZN6Parser25parse_member_selection_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013536:	e002      	b.n	801353e <_ZN6Parser17parse_variable_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8Variable+0x4e>
	}
	else
	{
		var->type = VARIABLE_LOCAL;
 8013538:	687b      	ldr	r3, [r7, #4]
 801353a:	2200      	movs	r2, #0
 801353c:	701a      	strb	r2, [r3, #0]
	}

	var->id = std::string(id);
 801353e:	f107 0310 	add.w	r3, r7, #16
 8013542:	68b9      	ldr	r1, [r7, #8]
 8013544:	4618      	mov	r0, r3
 8013546:	f00f fdd1 	bl	80230ec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 801354a:	687b      	ldr	r3, [r7, #4]
 801354c:	3304      	adds	r3, #4
 801354e:	f107 0210 	add.w	r2, r7, #16
 8013552:	4611      	mov	r1, r2
 8013554:	4618      	mov	r0, r3
 8013556:	f00f fc14 	bl	8022d82 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>
 801355a:	f107 0310 	add.w	r3, r7, #16
 801355e:	4618      	mov	r0, r3
 8013560:	f00f fc03 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
}
 8013564:	bf00      	nop
 8013566:	3728      	adds	r7, #40	; 0x28
 8013568:	46bd      	mov	sp, r7
 801356a:	bd80      	pop	{r7, pc}
 801356c:	080279b4 	.word	0x080279b4
 8013570:	080279b8 	.word	0x080279b8

08013574 <_ZN8VariableC1Ev>:
 8013574:	b580      	push	{r7, lr}
 8013576:	b082      	sub	sp, #8
 8013578:	af00      	add	r7, sp, #0
 801357a:	6078      	str	r0, [r7, #4]
 801357c:	687b      	ldr	r3, [r7, #4]
 801357e:	3304      	adds	r3, #4
 8013580:	4618      	mov	r0, r3
 8013582:	f00f fbd1 	bl	8022d28 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>
 8013586:	687b      	ldr	r3, [r7, #4]
 8013588:	4618      	mov	r0, r3
 801358a:	3708      	adds	r7, #8
 801358c:	46bd      	mov	sp, r7
 801358e:	bd80      	pop	{r7, pc}

08013590 <_ZN6Parser14parse_variableERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

Variable* Parser::parse_variable(std::string &id)
{
 8013590:	b590      	push	{r4, r7, lr}
 8013592:	b085      	sub	sp, #20
 8013594:	af00      	add	r7, sp, #0
 8013596:	6078      	str	r0, [r7, #4]
 8013598:	6039      	str	r1, [r7, #0]
	auto var = new Variable();
 801359a:	2020      	movs	r0, #32
 801359c:	f00f f943 	bl	8022826 <_Znwj>
 80135a0:	4603      	mov	r3, r0
 80135a2:	461c      	mov	r4, r3
 80135a4:	4620      	mov	r0, r4
 80135a6:	2320      	movs	r3, #32
 80135a8:	461a      	mov	r2, r3
 80135aa:	2100      	movs	r1, #0
 80135ac:	f010 fe1a 	bl	80241e4 <memset>
 80135b0:	4620      	mov	r0, r4
 80135b2:	f7ff ffdf 	bl	8013574 <_ZN8VariableC1Ev>
 80135b6:	60fc      	str	r4, [r7, #12]
	parse_variable_id(id, var);
 80135b8:	68fa      	ldr	r2, [r7, #12]
 80135ba:	6839      	ldr	r1, [r7, #0]
 80135bc:	6878      	ldr	r0, [r7, #4]
 80135be:	f7ff ff97 	bl	80134f0 <_ZN6Parser17parse_variable_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8Variable>
	parse_variable_index(var);
 80135c2:	68f9      	ldr	r1, [r7, #12]
 80135c4:	6878      	ldr	r0, [r7, #4]
 80135c6:	f7ff feef 	bl	80133a8 <_ZN6Parser20parse_variable_indexEP8Variable>
	return var;
 80135ca:	68fb      	ldr	r3, [r7, #12]
}
 80135cc:	4618      	mov	r0, r3
 80135ce:	3714      	adds	r7, #20
 80135d0:	46bd      	mov	sp, r7
 80135d2:	bd90      	pop	{r4, r7, pc}

080135d4 <_ZN6Parser16parse_assignmentEP8Variable>:

Assignment* Parser::parse_assignment(Variable* var)
{
 80135d4:	b580      	push	{r7, lr}
 80135d6:	b084      	sub	sp, #16
 80135d8:	af00      	add	r7, sp, #0
 80135da:	6078      	str	r0, [r7, #4]
 80135dc:	6039      	str	r1, [r7, #0]
	auto st = new Assignment();
 80135de:	2008      	movs	r0, #8
 80135e0:	f00f f921 	bl	8022826 <_Znwj>
 80135e4:	4603      	mov	r3, r0
 80135e6:	2200      	movs	r2, #0
 80135e8:	601a      	str	r2, [r3, #0]
 80135ea:	2200      	movs	r2, #0
 80135ec:	605a      	str	r2, [r3, #4]
 80135ee:	60fb      	str	r3, [r7, #12]
	st->var = var;
 80135f0:	68fb      	ldr	r3, [r7, #12]
 80135f2:	683a      	ldr	r2, [r7, #0]
 80135f4:	601a      	str	r2, [r3, #0]
	st->value = parse_expression();
 80135f6:	6878      	ldr	r0, [r7, #4]
 80135f8:	f006 ffe6 	bl	801a5c8 <_ZN6Parser16parse_expressionEv>
 80135fc:	4602      	mov	r2, r0
 80135fe:	68fb      	ldr	r3, [r7, #12]
 8013600:	605a      	str	r2, [r3, #4]
	return st;
 8013602:	68fb      	ldr	r3, [r7, #12]
}
 8013604:	4618      	mov	r0, r3
 8013606:	3710      	adds	r7, #16
 8013608:	46bd      	mov	sp, r7
 801360a:	bd80      	pop	{r7, pc}

0801360c <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void Parser::assert_token(token_type type, const std::string message)
{
 801360c:	b580      	push	{r7, lr}
 801360e:	b096      	sub	sp, #88	; 0x58
 8013610:	af00      	add	r7, sp, #0
 8013612:	60f8      	str	r0, [r7, #12]
 8013614:	460b      	mov	r3, r1
 8013616:	607a      	str	r2, [r7, #4]
 8013618:	72fb      	strb	r3, [r7, #11]
	if (token_buffer.type != type)
 801361a:	68fb      	ldr	r3, [r7, #12]
 801361c:	781b      	ldrb	r3, [r3, #0]
 801361e:	7afa      	ldrb	r2, [r7, #11]
 8013620:	429a      	cmp	r2, r3
 8013622:	d02a      	beq.n	801367a <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x6e>
	{
		std::string msg = "expected " + message + "\n";
 8013624:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8013628:	687a      	ldr	r2, [r7, #4]
 801362a:	4916      	ldr	r1, [pc, #88]	; (8013684 <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x78>)
 801362c:	4618      	mov	r0, r3
 801362e:	f7fa fd5a 	bl	800e0e6 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>
 8013632:	f107 0310 	add.w	r3, r7, #16
 8013636:	f107 0128 	add.w	r1, r7, #40	; 0x28
 801363a:	4a13      	ldr	r2, [pc, #76]	; (8013688 <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x7c>)
 801363c:	4618      	mov	r0, r3
 801363e:	f7fa fd77 	bl	800e130 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_>
 8013642:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8013646:	4618      	mov	r0, r3
 8013648:	f00f fb8f 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
		Transmitter::report_error(msg);
 801364c:	f107 0210 	add.w	r2, r7, #16
 8013650:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8013654:	4611      	mov	r1, r2
 8013656:	4618      	mov	r0, r3
 8013658:	f00f fd48 	bl	80230ec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 801365c:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8013660:	4618      	mov	r0, r3
 8013662:	f004 fd5d 	bl	8018120 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013666:	f107 0340 	add.w	r3, r7, #64	; 0x40
 801366a:	4618      	mov	r0, r3
 801366c:	f00f fb7d 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
		std::string msg = "expected " + message + "\n";
 8013670:	f107 0310 	add.w	r3, r7, #16
 8013674:	4618      	mov	r0, r3
 8013676:	f00f fb78 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	}
}
 801367a:	bf00      	nop
 801367c:	3758      	adds	r7, #88	; 0x58
 801367e:	46bd      	mov	sp, r7
 8013680:	bd80      	pop	{r7, pc}
 8013682:	bf00      	nop
 8013684:	080279bc 	.word	0x080279bc
 8013688:	080279c8 	.word	0x080279c8

0801368c <_ZN6Parser24parse_function_argumentsEP13Function_call>:

void Parser::parse_function_arguments(Function_call *f)
{
 801368c:	b590      	push	{r4, r7, lr}
 801368e:	b085      	sub	sp, #20
 8013690:	af00      	add	r7, sp, #0
 8013692:	6078      	str	r0, [r7, #4]
 8013694:	6039      	str	r1, [r7, #0]
	if (token_buffer.type != TOKEN_RIGHT_BRACKET)
 8013696:	687b      	ldr	r3, [r7, #4]
 8013698:	781b      	ldrb	r3, [r3, #0]
 801369a:	2b27      	cmp	r3, #39	; 0x27
 801369c:	d023      	beq.n	80136e6 <_ZN6Parser24parse_function_argumentsEP13Function_call+0x5a>
	{
		f->arguments.push_back(parse_expression());
 801369e:	683b      	ldr	r3, [r7, #0]
 80136a0:	f103 0420 	add.w	r4, r3, #32
 80136a4:	6878      	ldr	r0, [r7, #4]
 80136a6:	f006 ff8f 	bl	801a5c8 <_ZN6Parser16parse_expressionEv>
 80136aa:	4603      	mov	r3, r0
 80136ac:	60bb      	str	r3, [r7, #8]
 80136ae:	f107 0308 	add.w	r3, r7, #8
 80136b2:	4619      	mov	r1, r3
 80136b4:	4620      	mov	r0, r4
 80136b6:	f000 fc85 	bl	8013fc4 <_ZNSt6vectorIP10ExpressionSaIS1_EE9push_backEOS1_>
		while (token_buffer.type == TOKEN_COMA)
 80136ba:	687b      	ldr	r3, [r7, #4]
 80136bc:	781b      	ldrb	r3, [r3, #0]
 80136be:	2b0c      	cmp	r3, #12
 80136c0:	d111      	bne.n	80136e6 <_ZN6Parser24parse_function_argumentsEP13Function_call+0x5a>
		{
			get_next_token();
 80136c2:	6878      	ldr	r0, [r7, #4]
 80136c4:	f000 fac5 	bl	8013c52 <_ZN6Parser14get_next_tokenEv>
			f->arguments.push_back(parse_expression());
 80136c8:	683b      	ldr	r3, [r7, #0]
 80136ca:	f103 0420 	add.w	r4, r3, #32
 80136ce:	6878      	ldr	r0, [r7, #4]
 80136d0:	f006 ff7a 	bl	801a5c8 <_ZN6Parser16parse_expressionEv>
 80136d4:	4603      	mov	r3, r0
 80136d6:	60fb      	str	r3, [r7, #12]
 80136d8:	f107 030c 	add.w	r3, r7, #12
 80136dc:	4619      	mov	r1, r3
 80136de:	4620      	mov	r0, r4
 80136e0:	f000 fc70 	bl	8013fc4 <_ZNSt6vectorIP10ExpressionSaIS1_EE9push_backEOS1_>
		while (token_buffer.type == TOKEN_COMA)
 80136e4:	e7e9      	b.n	80136ba <_ZN6Parser24parse_function_argumentsEP13Function_call+0x2e>
		}
	}
}
 80136e6:	bf00      	nop
 80136e8:	3714      	adds	r7, #20
 80136ea:	46bd      	mov	sp, r7
 80136ec:	bd90      	pop	{r4, r7, pc}

080136ee <_ZN13Function_callC1Ev>:
	variable_type type;
	std::string id;
	Expression* index;
};

class Function_call
 80136ee:	b580      	push	{r7, lr}
 80136f0:	b082      	sub	sp, #8
 80136f2:	af00      	add	r7, sp, #0
 80136f4:	6078      	str	r0, [r7, #4]
 80136f6:	687b      	ldr	r3, [r7, #4]
 80136f8:	3308      	adds	r3, #8
 80136fa:	4618      	mov	r0, r3
 80136fc:	f00f fb14 	bl	8022d28 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>
 8013700:	687b      	ldr	r3, [r7, #4]
 8013702:	3320      	adds	r3, #32
 8013704:	4618      	mov	r0, r3
 8013706:	f7ff fdc4 	bl	8013292 <_ZNSt6vectorIP10ExpressionSaIS1_EEC1Ev>
 801370a:	687b      	ldr	r3, [r7, #4]
 801370c:	4618      	mov	r0, r3
 801370e:	3708      	adds	r7, #8
 8013710:	46bd      	mov	sp, r7
 8013712:	bd80      	pop	{r7, pc}

08013714 <_ZN6Parser19parse_function_callERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

Function_call* Parser::parse_function_call(std::string &id)
{
 8013714:	b590      	push	{r4, r7, lr}
 8013716:	b091      	sub	sp, #68	; 0x44
 8013718:	af00      	add	r7, sp, #0
 801371a:	6078      	str	r0, [r7, #4]
 801371c:	6039      	str	r1, [r7, #0]
	auto f = new Function_call();
 801371e:	202c      	movs	r0, #44	; 0x2c
 8013720:	f00f f881 	bl	8022826 <_Znwj>
 8013724:	4603      	mov	r3, r0
 8013726:	461c      	mov	r4, r3
 8013728:	4620      	mov	r0, r4
 801372a:	232c      	movs	r3, #44	; 0x2c
 801372c:	461a      	mov	r2, r3
 801372e:	2100      	movs	r1, #0
 8013730:	f010 fd58 	bl	80241e4 <memset>
 8013734:	4620      	mov	r0, r4
 8013736:	f7ff ffda 	bl	80136ee <_ZN13Function_callC1Ev>
 801373a:	63fc      	str	r4, [r7, #60]	; 0x3c
	f->id = std::string(id);
 801373c:	f107 0308 	add.w	r3, r7, #8
 8013740:	6839      	ldr	r1, [r7, #0]
 8013742:	4618      	mov	r0, r3
 8013744:	f00f fcd2 	bl	80230ec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 8013748:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 801374a:	3308      	adds	r3, #8
 801374c:	f107 0208 	add.w	r2, r7, #8
 8013750:	4611      	mov	r1, r2
 8013752:	4618      	mov	r0, r3
 8013754:	f00f fb15 	bl	8022d82 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>
 8013758:	f107 0308 	add.w	r3, r7, #8
 801375c:	4618      	mov	r0, r3
 801375e:	f00f fb04 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	f->line = Position_counter::get_instance().line;
 8013762:	f002 fe65 	bl	8016430 <_ZN16Position_counter12get_instanceEv>
 8013766:	4603      	mov	r3, r0
 8013768:	681a      	ldr	r2, [r3, #0]
 801376a:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 801376c:	601a      	str	r2, [r3, #0]
	f->position = Position_counter::get_instance().position;
 801376e:	f002 fe5f 	bl	8016430 <_ZN16Position_counter12get_instanceEv>
 8013772:	4603      	mov	r3, r0
 8013774:	685a      	ldr	r2, [r3, #4]
 8013776:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8013778:	605a      	str	r2, [r3, #4]
	get_next_token();
 801377a:	6878      	ldr	r0, [r7, #4]
 801377c:	f000 fa69 	bl	8013c52 <_ZN6Parser14get_next_tokenEv>
	parse_function_arguments(f);
 8013780:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 8013782:	6878      	ldr	r0, [r7, #4]
 8013784:	f7ff ff82 	bl	801368c <_ZN6Parser24parse_function_argumentsEP13Function_call>
	assert_token(TOKEN_RIGHT_BRACKET, "closing bracket");
 8013788:	f107 0338 	add.w	r3, r7, #56	; 0x38
 801378c:	4618      	mov	r0, r3
 801378e:	f00f f85b 	bl	8022848 <_ZNSaIcEC1Ev>
 8013792:	f107 0238 	add.w	r2, r7, #56	; 0x38
 8013796:	f107 0320 	add.w	r3, r7, #32
 801379a:	490e      	ldr	r1, [pc, #56]	; (80137d4 <_ZN6Parser19parse_function_callERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xc0>)
 801379c:	4618      	mov	r0, r3
 801379e:	f7ee f9fa 	bl	8001b96 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 80137a2:	f107 0320 	add.w	r3, r7, #32
 80137a6:	461a      	mov	r2, r3
 80137a8:	2127      	movs	r1, #39	; 0x27
 80137aa:	6878      	ldr	r0, [r7, #4]
 80137ac:	f7ff ff2e 	bl	801360c <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 80137b0:	f107 0320 	add.w	r3, r7, #32
 80137b4:	4618      	mov	r0, r3
 80137b6:	f00f fad8 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80137ba:	f107 0338 	add.w	r3, r7, #56	; 0x38
 80137be:	4618      	mov	r0, r3
 80137c0:	f00f f843 	bl	802284a <_ZNSaIcED1Ev>
	get_next_token();
 80137c4:	6878      	ldr	r0, [r7, #4]
 80137c6:	f000 fa44 	bl	8013c52 <_ZN6Parser14get_next_tokenEv>
	return f;
 80137ca:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
}
 80137cc:	4618      	mov	r0, r3
 80137ce:	3744      	adds	r7, #68	; 0x44
 80137d0:	46bd      	mov	sp, r7
 80137d2:	bd90      	pop	{r4, r7, pc}
 80137d4:	080279cc 	.word	0x080279cc

080137d8 <_ZN6Parser17parse_method_callEP8Variable>:

Method_call* Parser::parse_method_call(Variable* var)
{
 80137d8:	b590      	push	{r4, r7, lr}
 80137da:	b099      	sub	sp, #100	; 0x64
 80137dc:	af00      	add	r7, sp, #0
 80137de:	6078      	str	r0, [r7, #4]
 80137e0:	6039      	str	r1, [r7, #0]
	auto m = new Method_call();
 80137e2:	2008      	movs	r0, #8
 80137e4:	f00f f81f 	bl	8022826 <_Znwj>
 80137e8:	4603      	mov	r3, r0
 80137ea:	2200      	movs	r2, #0
 80137ec:	601a      	str	r2, [r3, #0]
 80137ee:	2200      	movs	r2, #0
 80137f0:	605a      	str	r2, [r3, #4]
 80137f2:	65fb      	str	r3, [r7, #92]	; 0x5c
	m->vector = var;
 80137f4:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 80137f6:	683a      	ldr	r2, [r7, #0]
 80137f8:	601a      	str	r2, [r3, #0]
	assert_token(TOKEN_IDENTIFIER, "method identifier");
 80137fa:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 80137fe:	4618      	mov	r0, r3
 8013800:	f00f f822 	bl	8022848 <_ZNSaIcEC1Ev>
 8013804:	f107 023c 	add.w	r2, r7, #60	; 0x3c
 8013808:	f107 0324 	add.w	r3, r7, #36	; 0x24
 801380c:	492a      	ldr	r1, [pc, #168]	; (80138b8 <_ZN6Parser17parse_method_callEP8Variable+0xe0>)
 801380e:	4618      	mov	r0, r3
 8013810:	f7ee f9c1 	bl	8001b96 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8013814:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8013818:	461a      	mov	r2, r3
 801381a:	2102      	movs	r1, #2
 801381c:	6878      	ldr	r0, [r7, #4]
 801381e:	f7ff fef5 	bl	801360c <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013822:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8013826:	4618      	mov	r0, r3
 8013828:	f00f fa9f 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801382c:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8013830:	4618      	mov	r0, r3
 8013832:	f00f f80a 	bl	802284a <_ZNSaIcED1Ev>
	std::string id = std::get<std::string>(token_buffer.value);
 8013836:	687b      	ldr	r3, [r7, #4]
 8013838:	3304      	adds	r3, #4
 801383a:	4618      	mov	r0, r3
 801383c:	f000 fc04 	bl	8014048 <_ZSt3getINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_ifbEERT_RSt7variantIJDpT0_EE>
 8013840:	4602      	mov	r2, r0
 8013842:	f107 030c 	add.w	r3, r7, #12
 8013846:	4611      	mov	r1, r2
 8013848:	4618      	mov	r0, r3
 801384a:	f00f fc4f 	bl	80230ec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
	get_next_token();
 801384e:	6878      	ldr	r0, [r7, #4]
 8013850:	f000 f9ff 	bl	8013c52 <_ZN6Parser14get_next_tokenEv>
	assert_token(TOKEN_LEFT_BRACKET, "opening bracket");
 8013854:	f107 0358 	add.w	r3, r7, #88	; 0x58
 8013858:	4618      	mov	r0, r3
 801385a:	f00e fff5 	bl	8022848 <_ZNSaIcEC1Ev>
 801385e:	f107 0258 	add.w	r2, r7, #88	; 0x58
 8013862:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8013866:	4915      	ldr	r1, [pc, #84]	; (80138bc <_ZN6Parser17parse_method_callEP8Variable+0xe4>)
 8013868:	4618      	mov	r0, r3
 801386a:	f7ee f994 	bl	8001b96 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801386e:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8013872:	461a      	mov	r2, r3
 8013874:	2126      	movs	r1, #38	; 0x26
 8013876:	6878      	ldr	r0, [r7, #4]
 8013878:	f7ff fec8 	bl	801360c <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801387c:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8013880:	4618      	mov	r0, r3
 8013882:	f00f fa72 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8013886:	f107 0358 	add.w	r3, r7, #88	; 0x58
 801388a:	4618      	mov	r0, r3
 801388c:	f00e ffdd 	bl	802284a <_ZNSaIcED1Ev>
	m->call = parse_function_call(id);
 8013890:	f107 030c 	add.w	r3, r7, #12
 8013894:	4619      	mov	r1, r3
 8013896:	6878      	ldr	r0, [r7, #4]
 8013898:	f7ff ff3c 	bl	8013714 <_ZN6Parser19parse_function_callERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801389c:	4602      	mov	r2, r0
 801389e:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 80138a0:	605a      	str	r2, [r3, #4]
	return m;
 80138a2:	6dfc      	ldr	r4, [r7, #92]	; 0x5c
	std::string id = std::get<std::string>(token_buffer.value);
 80138a4:	f107 030c 	add.w	r3, r7, #12
 80138a8:	4618      	mov	r0, r3
 80138aa:	f00f fa5e 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	return m;
 80138ae:	4623      	mov	r3, r4
}
 80138b0:	4618      	mov	r0, r3
 80138b2:	3764      	adds	r7, #100	; 0x64
 80138b4:	46bd      	mov	sp, r7
 80138b6:	bd90      	pop	{r4, r7, pc}
 80138b8:	080279dc 	.word	0x080279dc
 80138bc:	080279f0 	.word	0x080279f0

080138c0 <_ZN6Parser26parse_identifier_statementEP9Statement>:

void Parser::parse_identifier_statement(Statement *s)
{
 80138c0:	b580      	push	{r7, lr}
 80138c2:	b094      	sub	sp, #80	; 0x50
 80138c4:	af00      	add	r7, sp, #0
 80138c6:	6078      	str	r0, [r7, #4]
 80138c8:	6039      	str	r1, [r7, #0]
	std::string id = std::get<std::string>(token_buffer.value);
 80138ca:	687b      	ldr	r3, [r7, #4]
 80138cc:	3304      	adds	r3, #4
 80138ce:	4618      	mov	r0, r3
 80138d0:	f000 fbba 	bl	8014048 <_ZSt3getINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_ifbEERT_RSt7variantIJDpT0_EE>
 80138d4:	4602      	mov	r2, r0
 80138d6:	f107 030c 	add.w	r3, r7, #12
 80138da:	4611      	mov	r1, r2
 80138dc:	4618      	mov	r0, r3
 80138de:	f00f fc05 	bl	80230ec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
	get_next_token();
 80138e2:	6878      	ldr	r0, [r7, #4]
 80138e4:	f000 f9b5 	bl	8013c52 <_ZN6Parser14get_next_tokenEv>
	if (token_buffer.type == TOKEN_LEFT_BRACKET)
 80138e8:	687b      	ldr	r3, [r7, #4]
 80138ea:	781b      	ldrb	r3, [r3, #0]
 80138ec:	2b26      	cmp	r3, #38	; 0x26
 80138ee:	d113      	bne.n	8013918 <_ZN6Parser26parse_identifier_statementEP9Statement+0x58>
	{
		s->type = STATEMENT_FUNCTION_CALL;
 80138f0:	683b      	ldr	r3, [r7, #0]
 80138f2:	2201      	movs	r2, #1
 80138f4:	701a      	strb	r2, [r3, #0]
		s->content = parse_function_call(id);
 80138f6:	f107 030c 	add.w	r3, r7, #12
 80138fa:	4619      	mov	r1, r3
 80138fc:	6878      	ldr	r0, [r7, #4]
 80138fe:	f7ff ff09 	bl	8013714 <_ZN6Parser19parse_function_callERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013902:	4603      	mov	r3, r0
 8013904:	627b      	str	r3, [r7, #36]	; 0x24
 8013906:	683b      	ldr	r3, [r7, #0]
 8013908:	3304      	adds	r3, #4
 801390a:	f107 0224 	add.w	r2, r7, #36	; 0x24
 801390e:	4611      	mov	r1, r2
 8013910:	4618      	mov	r0, r3
 8013912:	f000 fbb8 	bl	8014086 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS3_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
 8013916:	e051      	b.n	80139bc <_ZN6Parser26parse_identifier_statementEP9Statement+0xfc>
	}
	else
	{
		auto var = parse_variable(id);
 8013918:	f107 030c 	add.w	r3, r7, #12
 801391c:	4619      	mov	r1, r3
 801391e:	6878      	ldr	r0, [r7, #4]
 8013920:	f7ff fe36 	bl	8013590 <_ZN6Parser14parse_variableERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013924:	64f8      	str	r0, [r7, #76]	; 0x4c
		if(token_buffer.type == TOKEN_ASSIGN)
 8013926:	687b      	ldr	r3, [r7, #4]
 8013928:	781b      	ldrb	r3, [r3, #0]
 801392a:	2b18      	cmp	r3, #24
 801392c:	d114      	bne.n	8013958 <_ZN6Parser26parse_identifier_statementEP9Statement+0x98>
		{
			s->type = STATEMENT_ASSIGNMENT;
 801392e:	683b      	ldr	r3, [r7, #0]
 8013930:	2200      	movs	r2, #0
 8013932:	701a      	strb	r2, [r3, #0]
			get_next_token();
 8013934:	6878      	ldr	r0, [r7, #4]
 8013936:	f000 f98c 	bl	8013c52 <_ZN6Parser14get_next_tokenEv>
			s->content = parse_assignment(var);
 801393a:	6cf9      	ldr	r1, [r7, #76]	; 0x4c
 801393c:	6878      	ldr	r0, [r7, #4]
 801393e:	f7ff fe49 	bl	80135d4 <_ZN6Parser16parse_assignmentEP8Variable>
 8013942:	4603      	mov	r3, r0
 8013944:	62bb      	str	r3, [r7, #40]	; 0x28
 8013946:	683b      	ldr	r3, [r7, #0]
 8013948:	3304      	adds	r3, #4
 801394a:	f107 0228 	add.w	r2, r7, #40	; 0x28
 801394e:	4611      	mov	r1, r2
 8013950:	4618      	mov	r0, r3
 8013952:	f000 fbc2 	bl	80140da <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS1_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
 8013956:	e031      	b.n	80139bc <_ZN6Parser26parse_identifier_statementEP9Statement+0xfc>
		}
		else
		{
			assert_token(TOKEN_DOT, "method call or assignment");
 8013958:	f107 0344 	add.w	r3, r7, #68	; 0x44
 801395c:	4618      	mov	r0, r3
 801395e:	f00e ff73 	bl	8022848 <_ZNSaIcEC1Ev>
 8013962:	f107 0244 	add.w	r2, r7, #68	; 0x44
 8013966:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 801396a:	4919      	ldr	r1, [pc, #100]	; (80139d0 <_ZN6Parser26parse_identifier_statementEP9Statement+0x110>)
 801396c:	4618      	mov	r0, r3
 801396e:	f7ee f912 	bl	8001b96 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8013972:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8013976:	461a      	mov	r2, r3
 8013978:	210b      	movs	r1, #11
 801397a:	6878      	ldr	r0, [r7, #4]
 801397c:	f7ff fe46 	bl	801360c <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013980:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8013984:	4618      	mov	r0, r3
 8013986:	f00f f9f0 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801398a:	f107 0344 	add.w	r3, r7, #68	; 0x44
 801398e:	4618      	mov	r0, r3
 8013990:	f00e ff5b 	bl	802284a <_ZNSaIcED1Ev>
			s->type = STATEMENT_METHOD_CALL;
 8013994:	683b      	ldr	r3, [r7, #0]
 8013996:	2202      	movs	r2, #2
 8013998:	701a      	strb	r2, [r3, #0]
			get_next_token();
 801399a:	6878      	ldr	r0, [r7, #4]
 801399c:	f000 f959 	bl	8013c52 <_ZN6Parser14get_next_tokenEv>
			s->content = parse_method_call(var);
 80139a0:	6cf9      	ldr	r1, [r7, #76]	; 0x4c
 80139a2:	6878      	ldr	r0, [r7, #4]
 80139a4:	f7ff ff18 	bl	80137d8 <_ZN6Parser17parse_method_callEP8Variable>
 80139a8:	4603      	mov	r3, r0
 80139aa:	64bb      	str	r3, [r7, #72]	; 0x48
 80139ac:	683b      	ldr	r3, [r7, #0]
 80139ae:	3304      	adds	r3, #4
 80139b0:	f107 0248 	add.w	r2, r7, #72	; 0x48
 80139b4:	4611      	mov	r1, r2
 80139b6:	4618      	mov	r0, r3
 80139b8:	f000 fbb9 	bl	801412e <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
	std::string id = std::get<std::string>(token_buffer.value);
 80139bc:	f107 030c 	add.w	r3, r7, #12
 80139c0:	4618      	mov	r0, r3
 80139c2:	f00f f9d2 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
		}
	}
}
 80139c6:	bf00      	nop
 80139c8:	3750      	adds	r7, #80	; 0x50
 80139ca:	46bd      	mov	sp, r7
 80139cc:	bd80      	pop	{r7, pc}
 80139ce:	bf00      	nop
 80139d0:	08027a00 	.word	0x08027a00

080139d4 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEC1Ev>:
      variant() = default;
 80139d4:	b580      	push	{r7, lr}
 80139d6:	b082      	sub	sp, #8
 80139d8:	af00      	add	r7, sp, #0
 80139da:	6078      	str	r0, [r7, #4]
 80139dc:	687b      	ldr	r3, [r7, #4]
 80139de:	4618      	mov	r0, r3
 80139e0:	f000 fc1a 	bl	8014218 <_ZNSt8__detail9__variant13_Variant_baseIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEC1Ev>
 80139e4:	687b      	ldr	r3, [r7, #4]
 80139e6:	4618      	mov	r0, r3
 80139e8:	3708      	adds	r7, #8
 80139ea:	46bd      	mov	sp, r7
 80139ec:	bd80      	pop	{r7, pc}

080139ee <_ZN9StatementC1Ev>:
	STATEMENT_IF
}statement_type;

typedef std::variant<Assignment*, Function_call*, Method_call*, While_statement*, If_statement*> statement_content;

class Statement
 80139ee:	b580      	push	{r7, lr}
 80139f0:	b082      	sub	sp, #8
 80139f2:	af00      	add	r7, sp, #0
 80139f4:	6078      	str	r0, [r7, #4]
 80139f6:	687b      	ldr	r3, [r7, #4]
 80139f8:	3304      	adds	r3, #4
 80139fa:	4618      	mov	r0, r3
 80139fc:	f7ff ffea 	bl	80139d4 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEC1Ev>
 8013a00:	687b      	ldr	r3, [r7, #4]
 8013a02:	4618      	mov	r0, r3
 8013a04:	3708      	adds	r7, #8
 8013a06:	46bd      	mov	sp, r7
 8013a08:	bd80      	pop	{r7, pc}
	...

08013a0c <_ZN6Parser15parse_statementEv>:

Statement* Parser::parse_statement() //todo refactor
{
 8013a0c:	b590      	push	{r4, r7, lr}
 8013a0e:	b08d      	sub	sp, #52	; 0x34
 8013a10:	af00      	add	r7, sp, #0
 8013a12:	6078      	str	r0, [r7, #4]
	auto s = new Statement();
 8013a14:	200c      	movs	r0, #12
 8013a16:	f00e ff06 	bl	8022826 <_Znwj>
 8013a1a:	4603      	mov	r3, r0
 8013a1c:	461c      	mov	r4, r3
 8013a1e:	2300      	movs	r3, #0
 8013a20:	7023      	strb	r3, [r4, #0]
 8013a22:	2300      	movs	r3, #0
 8013a24:	6063      	str	r3, [r4, #4]
 8013a26:	2300      	movs	r3, #0
 8013a28:	7223      	strb	r3, [r4, #8]
 8013a2a:	4620      	mov	r0, r4
 8013a2c:	f7ff ffdf 	bl	80139ee <_ZN9StatementC1Ev>
 8013a30:	62fc      	str	r4, [r7, #44]	; 0x2c
	switch (token_buffer.type)
 8013a32:	687b      	ldr	r3, [r7, #4]
 8013a34:	781b      	ldrb	r3, [r3, #0]
 8013a36:	2b13      	cmp	r3, #19
 8013a38:	d00b      	beq.n	8013a52 <_ZN6Parser15parse_statementEv+0x46>
 8013a3a:	2b13      	cmp	r3, #19
 8013a3c:	dc31      	bgt.n	8013aa2 <_ZN6Parser15parse_statementEv+0x96>
 8013a3e:	2b02      	cmp	r3, #2
 8013a40:	d002      	beq.n	8013a48 <_ZN6Parser15parse_statementEv+0x3c>
 8013a42:	2b10      	cmp	r3, #16
 8013a44:	d019      	beq.n	8013a7a <_ZN6Parser15parse_statementEv+0x6e>
 8013a46:	e02c      	b.n	8013aa2 <_ZN6Parser15parse_statementEv+0x96>
	{
	case TOKEN_IDENTIFIER:
		parse_identifier_statement(s);
 8013a48:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8013a4a:	6878      	ldr	r0, [r7, #4]
 8013a4c:	f7ff ff38 	bl	80138c0 <_ZN6Parser26parse_identifier_statementEP9Statement>
		break;
 8013a50:	e044      	b.n	8013adc <_ZN6Parser15parse_statementEv+0xd0>
	case TOKEN_WHILE:
		s->type = STATEMENT_WHILE;
 8013a52:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8013a54:	2203      	movs	r2, #3
 8013a56:	701a      	strb	r2, [r3, #0]
		get_next_token();
 8013a58:	6878      	ldr	r0, [r7, #4]
 8013a5a:	f000 f8fa 	bl	8013c52 <_ZN6Parser14get_next_tokenEv>
		s->content = parse_while();
 8013a5e:	6878      	ldr	r0, [r7, #4]
 8013a60:	f7ff fad8 	bl	8013014 <_ZN6Parser11parse_whileEv>
 8013a64:	4603      	mov	r3, r0
 8013a66:	60bb      	str	r3, [r7, #8]
 8013a68:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8013a6a:	3304      	adds	r3, #4
 8013a6c:	f107 0208 	add.w	r2, r7, #8
 8013a70:	4611      	mov	r1, r2
 8013a72:	4618      	mov	r0, r3
 8013a74:	f000 fbdd 	bl	8014232 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS7_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
		break;
 8013a78:	e030      	b.n	8013adc <_ZN6Parser15parse_statementEv+0xd0>
	case TOKEN_IF:
		s->type = STATEMENT_IF;
 8013a7a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8013a7c:	2204      	movs	r2, #4
 8013a7e:	701a      	strb	r2, [r3, #0]
		get_next_token();
 8013a80:	6878      	ldr	r0, [r7, #4]
 8013a82:	f000 f8e6 	bl	8013c52 <_ZN6Parser14get_next_tokenEv>
		s->content = parse_if();
 8013a86:	6878      	ldr	r0, [r7, #4]
 8013a88:	f7ff fc3c 	bl	8013304 <_ZN6Parser8parse_ifEv>
 8013a8c:	4603      	mov	r3, r0
 8013a8e:	60fb      	str	r3, [r7, #12]
 8013a90:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8013a92:	3304      	adds	r3, #4
 8013a94:	f107 020c 	add.w	r2, r7, #12
 8013a98:	4611      	mov	r1, r2
 8013a9a:	4618      	mov	r0, r3
 8013a9c:	f000 fbf3 	bl	8014286 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS9_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
		break;
 8013aa0:	e01c      	b.n	8013adc <_ZN6Parser15parse_statementEv+0xd0>
	default:
		Transmitter::report_error("expected statement:\nidentifier, if, while\n");
 8013aa2:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8013aa6:	4618      	mov	r0, r3
 8013aa8:	f00e fece 	bl	8022848 <_ZNSaIcEC1Ev>
 8013aac:	f107 0228 	add.w	r2, r7, #40	; 0x28
 8013ab0:	f107 0310 	add.w	r3, r7, #16
 8013ab4:	490c      	ldr	r1, [pc, #48]	; (8013ae8 <_ZN6Parser15parse_statementEv+0xdc>)
 8013ab6:	4618      	mov	r0, r3
 8013ab8:	f7ee f86d 	bl	8001b96 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8013abc:	f107 0310 	add.w	r3, r7, #16
 8013ac0:	4618      	mov	r0, r3
 8013ac2:	f004 fb2d 	bl	8018120 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013ac6:	f107 0310 	add.w	r3, r7, #16
 8013aca:	4618      	mov	r0, r3
 8013acc:	f00f f94d 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8013ad0:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8013ad4:	4618      	mov	r0, r3
 8013ad6:	f00e feb8 	bl	802284a <_ZNSaIcED1Ev>
		break;
 8013ada:	bf00      	nop
	}
	return s;
 8013adc:	6afb      	ldr	r3, [r7, #44]	; 0x2c
}
 8013ade:	4618      	mov	r0, r3
 8013ae0:	3734      	adds	r7, #52	; 0x34
 8013ae2:	46bd      	mov	sp, r7
 8013ae4:	bd90      	pop	{r4, r7, pc}
 8013ae6:	bf00      	nop
 8013ae8:	08027a1c 	.word	0x08027a1c

08013aec <_ZN6Parser24is_token_statement_firstEv>:

bool Parser::is_token_statement_first()
{
 8013aec:	b480      	push	{r7}
 8013aee:	b083      	sub	sp, #12
 8013af0:	af00      	add	r7, sp, #0
 8013af2:	6078      	str	r0, [r7, #4]
	return token_buffer.type == TOKEN_IDENTIFIER
 8013af4:	687b      	ldr	r3, [r7, #4]
 8013af6:	781b      	ldrb	r3, [r3, #0]
			|| token_buffer.type == TOKEN_WHILE
			|| token_buffer.type == TOKEN_IF;
 8013af8:	2b02      	cmp	r3, #2
 8013afa:	d007      	beq.n	8013b0c <_ZN6Parser24is_token_statement_firstEv+0x20>
			|| token_buffer.type == TOKEN_WHILE
 8013afc:	687b      	ldr	r3, [r7, #4]
 8013afe:	781b      	ldrb	r3, [r3, #0]
 8013b00:	2b13      	cmp	r3, #19
 8013b02:	d003      	beq.n	8013b0c <_ZN6Parser24is_token_statement_firstEv+0x20>
			|| token_buffer.type == TOKEN_IF;
 8013b04:	687b      	ldr	r3, [r7, #4]
 8013b06:	781b      	ldrb	r3, [r3, #0]
 8013b08:	2b10      	cmp	r3, #16
 8013b0a:	d101      	bne.n	8013b10 <_ZN6Parser24is_token_statement_firstEv+0x24>
 8013b0c:	2301      	movs	r3, #1
 8013b0e:	e000      	b.n	8013b12 <_ZN6Parser24is_token_statement_firstEv+0x26>
 8013b10:	2300      	movs	r3, #0
}
 8013b12:	4618      	mov	r0, r3
 8013b14:	370c      	adds	r7, #12
 8013b16:	46bd      	mov	sp, r7
 8013b18:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013b1c:	4770      	bx	lr

08013b1e <_ZN6Parser13skip_newlinesEv>:

void Parser::skip_newlines()
{
 8013b1e:	b580      	push	{r7, lr}
 8013b20:	b082      	sub	sp, #8
 8013b22:	af00      	add	r7, sp, #0
 8013b24:	6078      	str	r0, [r7, #4]
	while (token_buffer.type == TOKEN_NEWLINE)
 8013b26:	687b      	ldr	r3, [r7, #4]
 8013b28:	781b      	ldrb	r3, [r3, #0]
 8013b2a:	2b0a      	cmp	r3, #10
 8013b2c:	d103      	bne.n	8013b36 <_ZN6Parser13skip_newlinesEv+0x18>
	{
		get_next_token();
 8013b2e:	6878      	ldr	r0, [r7, #4]
 8013b30:	f000 f88f 	bl	8013c52 <_ZN6Parser14get_next_tokenEv>
	while (token_buffer.type == TOKEN_NEWLINE)
 8013b34:	e7f7      	b.n	8013b26 <_ZN6Parser13skip_newlinesEv+0x8>
	}
}
 8013b36:	bf00      	nop
 8013b38:	3708      	adds	r7, #8
 8013b3a:	46bd      	mov	sp, r7
 8013b3c:	bd80      	pop	{r7, pc}

08013b3e <_ZNSt12_Vector_baseIP9StatementSaIS1_EEC1Ev>:
      _Vector_base() = default;
 8013b3e:	b580      	push	{r7, lr}
 8013b40:	b082      	sub	sp, #8
 8013b42:	af00      	add	r7, sp, #0
 8013b44:	6078      	str	r0, [r7, #4]
 8013b46:	687b      	ldr	r3, [r7, #4]
 8013b48:	4618      	mov	r0, r3
 8013b4a:	f000 fbc6 	bl	80142da <_ZNSt12_Vector_baseIP9StatementSaIS1_EE12_Vector_implC1Ev>
 8013b4e:	687b      	ldr	r3, [r7, #4]
 8013b50:	4618      	mov	r0, r3
 8013b52:	3708      	adds	r7, #8
 8013b54:	46bd      	mov	sp, r7
 8013b56:	bd80      	pop	{r7, pc}

08013b58 <_ZNSt6vectorIP9StatementSaIS1_EEC1Ev>:
      vector() = default;
 8013b58:	b580      	push	{r7, lr}
 8013b5a:	b082      	sub	sp, #8
 8013b5c:	af00      	add	r7, sp, #0
 8013b5e:	6078      	str	r0, [r7, #4]
 8013b60:	687b      	ldr	r3, [r7, #4]
 8013b62:	4618      	mov	r0, r3
 8013b64:	f7ff ffeb 	bl	8013b3e <_ZNSt12_Vector_baseIP9StatementSaIS1_EEC1Ev>
 8013b68:	687b      	ldr	r3, [r7, #4]
 8013b6a:	4618      	mov	r0, r3
 8013b6c:	3708      	adds	r7, #8
 8013b6e:	46bd      	mov	sp, r7
 8013b70:	bd80      	pop	{r7, pc}

08013b72 <_ZN4BodyC1Ev>:
class Body
 8013b72:	b580      	push	{r7, lr}
 8013b74:	b082      	sub	sp, #8
 8013b76:	af00      	add	r7, sp, #0
 8013b78:	6078      	str	r0, [r7, #4]
 8013b7a:	687b      	ldr	r3, [r7, #4]
 8013b7c:	4618      	mov	r0, r3
 8013b7e:	f7ff ffeb 	bl	8013b58 <_ZNSt6vectorIP9StatementSaIS1_EEC1Ev>
 8013b82:	687b      	ldr	r3, [r7, #4]
 8013b84:	4618      	mov	r0, r3
 8013b86:	3708      	adds	r7, #8
 8013b88:	46bd      	mov	sp, r7
 8013b8a:	bd80      	pop	{r7, pc}

08013b8c <_ZN6Parser10parse_bodyEv>:

Body* Parser::parse_body()
{
 8013b8c:	b590      	push	{r4, r7, lr}
 8013b8e:	b085      	sub	sp, #20
 8013b90:	af00      	add	r7, sp, #0
 8013b92:	6078      	str	r0, [r7, #4]
	auto bod = new Body();
 8013b94:	200c      	movs	r0, #12
 8013b96:	f00e fe46 	bl	8022826 <_Znwj>
 8013b9a:	4603      	mov	r3, r0
 8013b9c:	461c      	mov	r4, r3
 8013b9e:	4622      	mov	r2, r4
 8013ba0:	2300      	movs	r3, #0
 8013ba2:	6013      	str	r3, [r2, #0]
 8013ba4:	6053      	str	r3, [r2, #4]
 8013ba6:	6093      	str	r3, [r2, #8]
 8013ba8:	4620      	mov	r0, r4
 8013baa:	f7ff ffe2 	bl	8013b72 <_ZN4BodyC1Ev>
 8013bae:	60fc      	str	r4, [r7, #12]
	while (is_token_statement_first())
 8013bb0:	6878      	ldr	r0, [r7, #4]
 8013bb2:	f7ff ff9b 	bl	8013aec <_ZN6Parser24is_token_statement_firstEv>
 8013bb6:	4603      	mov	r3, r0
 8013bb8:	2b00      	cmp	r3, #0
 8013bba:	d00f      	beq.n	8013bdc <_ZN6Parser10parse_bodyEv+0x50>
	{
		bod->statements.push_back(parse_statement());
 8013bbc:	68fc      	ldr	r4, [r7, #12]
 8013bbe:	6878      	ldr	r0, [r7, #4]
 8013bc0:	f7ff ff24 	bl	8013a0c <_ZN6Parser15parse_statementEv>
 8013bc4:	4603      	mov	r3, r0
 8013bc6:	60bb      	str	r3, [r7, #8]
 8013bc8:	f107 0308 	add.w	r3, r7, #8
 8013bcc:	4619      	mov	r1, r3
 8013bce:	4620      	mov	r0, r4
 8013bd0:	f000 fb93 	bl	80142fa <_ZNSt6vectorIP9StatementSaIS1_EE9push_backEOS1_>
		skip_newlines();
 8013bd4:	6878      	ldr	r0, [r7, #4]
 8013bd6:	f7ff ffa2 	bl	8013b1e <_ZN6Parser13skip_newlinesEv>
	while (is_token_statement_first())
 8013bda:	e7e9      	b.n	8013bb0 <_ZN6Parser10parse_bodyEv+0x24>
	}
	return bod;
 8013bdc:	68fb      	ldr	r3, [r7, #12]
}
 8013bde:	4618      	mov	r0, r3
 8013be0:	3714      	adds	r7, #20
 8013be2:	46bd      	mov	sp, r7
 8013be4:	bd90      	pop	{r4, r7, pc}

08013be6 <_ZNSt8__detail9__variant13_Variant_baseIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_>:
    struct _Variant_base : _Move_assign_alias<_Types...>
 8013be6:	b580      	push	{r7, lr}
 8013be8:	b082      	sub	sp, #8
 8013bea:	af00      	add	r7, sp, #0
 8013bec:	6078      	str	r0, [r7, #4]
 8013bee:	6039      	str	r1, [r7, #0]
 8013bf0:	687b      	ldr	r3, [r7, #4]
 8013bf2:	683a      	ldr	r2, [r7, #0]
 8013bf4:	4611      	mov	r1, r2
 8013bf6:	4618      	mov	r0, r3
 8013bf8:	f000 fd32 	bl	8014660 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_>
 8013bfc:	687b      	ldr	r3, [r7, #4]
 8013bfe:	4618      	mov	r0, r3
 8013c00:	3708      	adds	r7, #8
 8013c02:	46bd      	mov	sp, r7
 8013c04:	bd80      	pop	{r7, pc}

08013c06 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS6_>:
    class variant
 8013c06:	b580      	push	{r7, lr}
 8013c08:	b082      	sub	sp, #8
 8013c0a:	af00      	add	r7, sp, #0
 8013c0c:	6078      	str	r0, [r7, #4]
 8013c0e:	6039      	str	r1, [r7, #0]
 8013c10:	687b      	ldr	r3, [r7, #4]
 8013c12:	683a      	ldr	r2, [r7, #0]
 8013c14:	4611      	mov	r1, r2
 8013c16:	4618      	mov	r0, r3
 8013c18:	f7ff ffe5 	bl	8013be6 <_ZNSt8__detail9__variant13_Variant_baseIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_>
 8013c1c:	687b      	ldr	r3, [r7, #4]
 8013c1e:	4618      	mov	r0, r3
 8013c20:	3708      	adds	r7, #8
 8013c22:	46bd      	mov	sp, r7
 8013c24:	bd80      	pop	{r7, pc}

08013c26 <_ZN5TokenaSEOS_>:
 8013c26:	b580      	push	{r7, lr}
 8013c28:	b082      	sub	sp, #8
 8013c2a:	af00      	add	r7, sp, #0
 8013c2c:	6078      	str	r0, [r7, #4]
 8013c2e:	6039      	str	r1, [r7, #0]
 8013c30:	683b      	ldr	r3, [r7, #0]
 8013c32:	781a      	ldrb	r2, [r3, #0]
 8013c34:	687b      	ldr	r3, [r7, #4]
 8013c36:	701a      	strb	r2, [r3, #0]
 8013c38:	683b      	ldr	r3, [r7, #0]
 8013c3a:	1d1a      	adds	r2, r3, #4
 8013c3c:	687b      	ldr	r3, [r7, #4]
 8013c3e:	3304      	adds	r3, #4
 8013c40:	4611      	mov	r1, r2
 8013c42:	4618      	mov	r0, r3
 8013c44:	f7ff ffdf 	bl	8013c06 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS6_>
 8013c48:	687b      	ldr	r3, [r7, #4]
 8013c4a:	4618      	mov	r0, r3
 8013c4c:	3708      	adds	r7, #8
 8013c4e:	46bd      	mov	sp, r7
 8013c50:	bd80      	pop	{r7, pc}

08013c52 <_ZN6Parser14get_next_tokenEv>:

void Parser::get_next_token()
{
 8013c52:	b580      	push	{r7, lr}
 8013c54:	b090      	sub	sp, #64	; 0x40
 8013c56:	af00      	add	r7, sp, #0
 8013c58:	6078      	str	r0, [r7, #4]
	token_buffer = Lexer::build_token();
 8013c5a:	f107 0308 	add.w	r3, r7, #8
 8013c5e:	4618      	mov	r0, r3
 8013c60:	f7fb fd3a 	bl	800f6d8 <_ZN5Lexer11build_tokenEv>
 8013c64:	687b      	ldr	r3, [r7, #4]
 8013c66:	f107 0208 	add.w	r2, r7, #8
 8013c6a:	4611      	mov	r1, r2
 8013c6c:	4618      	mov	r0, r3
 8013c6e:	f7ff ffda 	bl	8013c26 <_ZN5TokenaSEOS_>
 8013c72:	f107 0308 	add.w	r3, r7, #8
 8013c76:	4618      	mov	r0, r3
 8013c78:	f7fb f989 	bl	800ef8e <_ZN5TokenD1Ev>
	if (token_buffer.type == TOKEN_ERROR)
 8013c7c:	687b      	ldr	r3, [r7, #4]
 8013c7e:	781b      	ldrb	r3, [r3, #0]
 8013c80:	2b00      	cmp	r3, #0
 8013c82:	d115      	bne.n	8013cb0 <_ZN6Parser14get_next_tokenEv+0x5e>
	{
		Transmitter::report_error(std::get<std::string>(token_buffer.value));
 8013c84:	687b      	ldr	r3, [r7, #4]
 8013c86:	3304      	adds	r3, #4
 8013c88:	4618      	mov	r0, r3
 8013c8a:	f000 f9dd 	bl	8014048 <_ZSt3getINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_ifbEERT_RSt7variantIJDpT0_EE>
 8013c8e:	4602      	mov	r2, r0
 8013c90:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8013c94:	4611      	mov	r1, r2
 8013c96:	4618      	mov	r0, r3
 8013c98:	f00f fa28 	bl	80230ec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 8013c9c:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8013ca0:	4618      	mov	r0, r3
 8013ca2:	f004 fa3d 	bl	8018120 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013ca6:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8013caa:	4618      	mov	r0, r3
 8013cac:	f00f f85d 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	}
}
 8013cb0:	bf00      	nop
 8013cb2:	3740      	adds	r7, #64	; 0x40
 8013cb4:	46bd      	mov	sp, r7
 8013cb6:	bd80      	pop	{r7, pc}

08013cb8 <_ZN6Parser11parse_setupEP7Program>:

void Parser::parse_setup(Program *Prog)
{
 8013cb8:	b580      	push	{r7, lr}
 8013cba:	b090      	sub	sp, #64	; 0x40
 8013cbc:	af00      	add	r7, sp, #0
 8013cbe:	6078      	str	r0, [r7, #4]
 8013cc0:	6039      	str	r1, [r7, #0]
	get_next_token();
 8013cc2:	6878      	ldr	r0, [r7, #4]
 8013cc4:	f7ff ffc5 	bl	8013c52 <_ZN6Parser14get_next_tokenEv>
	assert_token(TOKEN_SETUP, "\"setup\" keyword");
 8013cc8:	f107 0320 	add.w	r3, r7, #32
 8013ccc:	4618      	mov	r0, r3
 8013cce:	f00e fdbb 	bl	8022848 <_ZNSaIcEC1Ev>
 8013cd2:	f107 0220 	add.w	r2, r7, #32
 8013cd6:	f107 0308 	add.w	r3, r7, #8
 8013cda:	4923      	ldr	r1, [pc, #140]	; (8013d68 <_ZN6Parser11parse_setupEP7Program+0xb0>)
 8013cdc:	4618      	mov	r0, r3
 8013cde:	f7ed ff5a 	bl	8001b96 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8013ce2:	f107 0308 	add.w	r3, r7, #8
 8013ce6:	461a      	mov	r2, r3
 8013ce8:	2107      	movs	r1, #7
 8013cea:	6878      	ldr	r0, [r7, #4]
 8013cec:	f7ff fc8e 	bl	801360c <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013cf0:	f107 0308 	add.w	r3, r7, #8
 8013cf4:	4618      	mov	r0, r3
 8013cf6:	f00f f838 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8013cfa:	f107 0320 	add.w	r3, r7, #32
 8013cfe:	4618      	mov	r0, r3
 8013d00:	f00e fda3 	bl	802284a <_ZNSaIcED1Ev>
	get_next_token();
 8013d04:	6878      	ldr	r0, [r7, #4]
 8013d06:	f7ff ffa4 	bl	8013c52 <_ZN6Parser14get_next_tokenEv>
	assert_token(TOKEN_NEWLINE, "line break after setup");
 8013d0a:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8013d0e:	4618      	mov	r0, r3
 8013d10:	f00e fd9a 	bl	8022848 <_ZNSaIcEC1Ev>
 8013d14:	f107 023c 	add.w	r2, r7, #60	; 0x3c
 8013d18:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8013d1c:	4913      	ldr	r1, [pc, #76]	; (8013d6c <_ZN6Parser11parse_setupEP7Program+0xb4>)
 8013d1e:	4618      	mov	r0, r3
 8013d20:	f7ed ff39 	bl	8001b96 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8013d24:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8013d28:	461a      	mov	r2, r3
 8013d2a:	210a      	movs	r1, #10
 8013d2c:	6878      	ldr	r0, [r7, #4]
 8013d2e:	f7ff fc6d 	bl	801360c <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013d32:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8013d36:	4618      	mov	r0, r3
 8013d38:	f00f f817 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8013d3c:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8013d40:	4618      	mov	r0, r3
 8013d42:	f00e fd82 	bl	802284a <_ZNSaIcED1Ev>
	get_next_token();
 8013d46:	6878      	ldr	r0, [r7, #4]
 8013d48:	f7ff ff83 	bl	8013c52 <_ZN6Parser14get_next_tokenEv>
	skip_newlines();
 8013d4c:	6878      	ldr	r0, [r7, #4]
 8013d4e:	f7ff fee6 	bl	8013b1e <_ZN6Parser13skip_newlinesEv>
	Prog->setup = parse_body();
 8013d52:	6878      	ldr	r0, [r7, #4]
 8013d54:	f7ff ff1a 	bl	8013b8c <_ZN6Parser10parse_bodyEv>
 8013d58:	4602      	mov	r2, r0
 8013d5a:	683b      	ldr	r3, [r7, #0]
 8013d5c:	601a      	str	r2, [r3, #0]
}
 8013d5e:	bf00      	nop
 8013d60:	3740      	adds	r7, #64	; 0x40
 8013d62:	46bd      	mov	sp, r7
 8013d64:	bd80      	pop	{r7, pc}
 8013d66:	bf00      	nop
 8013d68:	08027a48 	.word	0x08027a48
 8013d6c:	08027a58 	.word	0x08027a58

08013d70 <_ZN6Parser10parse_loopEP7Program>:

void Parser::parse_loop(Program *Prog)
{
 8013d70:	b580      	push	{r7, lr}
 8013d72:	b090      	sub	sp, #64	; 0x40
 8013d74:	af00      	add	r7, sp, #0
 8013d76:	6078      	str	r0, [r7, #4]
 8013d78:	6039      	str	r1, [r7, #0]
	assert_token(TOKEN_LOOP, "\"loop\" keyword");
 8013d7a:	f107 0320 	add.w	r3, r7, #32
 8013d7e:	4618      	mov	r0, r3
 8013d80:	f00e fd62 	bl	8022848 <_ZNSaIcEC1Ev>
 8013d84:	f107 0220 	add.w	r2, r7, #32
 8013d88:	f107 0308 	add.w	r3, r7, #8
 8013d8c:	4922      	ldr	r1, [pc, #136]	; (8013e18 <_ZN6Parser10parse_loopEP7Program+0xa8>)
 8013d8e:	4618      	mov	r0, r3
 8013d90:	f7ed ff01 	bl	8001b96 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8013d94:	f107 0308 	add.w	r3, r7, #8
 8013d98:	461a      	mov	r2, r3
 8013d9a:	2108      	movs	r1, #8
 8013d9c:	6878      	ldr	r0, [r7, #4]
 8013d9e:	f7ff fc35 	bl	801360c <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013da2:	f107 0308 	add.w	r3, r7, #8
 8013da6:	4618      	mov	r0, r3
 8013da8:	f00e ffdf 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8013dac:	f107 0320 	add.w	r3, r7, #32
 8013db0:	4618      	mov	r0, r3
 8013db2:	f00e fd4a 	bl	802284a <_ZNSaIcED1Ev>
	get_next_token();
 8013db6:	6878      	ldr	r0, [r7, #4]
 8013db8:	f7ff ff4b 	bl	8013c52 <_ZN6Parser14get_next_tokenEv>
	assert_token(TOKEN_NEWLINE, "line break after loop");
 8013dbc:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8013dc0:	4618      	mov	r0, r3
 8013dc2:	f00e fd41 	bl	8022848 <_ZNSaIcEC1Ev>
 8013dc6:	f107 023c 	add.w	r2, r7, #60	; 0x3c
 8013dca:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8013dce:	4913      	ldr	r1, [pc, #76]	; (8013e1c <_ZN6Parser10parse_loopEP7Program+0xac>)
 8013dd0:	4618      	mov	r0, r3
 8013dd2:	f7ed fee0 	bl	8001b96 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8013dd6:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8013dda:	461a      	mov	r2, r3
 8013ddc:	210a      	movs	r1, #10
 8013dde:	6878      	ldr	r0, [r7, #4]
 8013de0:	f7ff fc14 	bl	801360c <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013de4:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8013de8:	4618      	mov	r0, r3
 8013dea:	f00e ffbe 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8013dee:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8013df2:	4618      	mov	r0, r3
 8013df4:	f00e fd29 	bl	802284a <_ZNSaIcED1Ev>
	get_next_token();
 8013df8:	6878      	ldr	r0, [r7, #4]
 8013dfa:	f7ff ff2a 	bl	8013c52 <_ZN6Parser14get_next_tokenEv>
	skip_newlines();
 8013dfe:	6878      	ldr	r0, [r7, #4]
 8013e00:	f7ff fe8d 	bl	8013b1e <_ZN6Parser13skip_newlinesEv>
	Prog->loop = parse_body();
 8013e04:	6878      	ldr	r0, [r7, #4]
 8013e06:	f7ff fec1 	bl	8013b8c <_ZN6Parser10parse_bodyEv>
 8013e0a:	4602      	mov	r2, r0
 8013e0c:	683b      	ldr	r3, [r7, #0]
 8013e0e:	605a      	str	r2, [r3, #4]
}
 8013e10:	bf00      	nop
 8013e12:	3740      	adds	r7, #64	; 0x40
 8013e14:	46bd      	mov	sp, r7
 8013e16:	bd80      	pop	{r7, pc}
 8013e18:	08027a70 	.word	0x08027a70
 8013e1c:	08027a80 	.word	0x08027a80

08013e20 <_ZN6Parser12parse_finishEP7Program>:

void Parser::parse_finish(Program *Prog)
{
 8013e20:	b580      	push	{r7, lr}
 8013e22:	b090      	sub	sp, #64	; 0x40
 8013e24:	af00      	add	r7, sp, #0
 8013e26:	6078      	str	r0, [r7, #4]
 8013e28:	6039      	str	r1, [r7, #0]
	assert_token(TOKEN_FINISH, "\"finish\" keyword");
 8013e2a:	f107 0320 	add.w	r3, r7, #32
 8013e2e:	4618      	mov	r0, r3
 8013e30:	f00e fd0a 	bl	8022848 <_ZNSaIcEC1Ev>
 8013e34:	f107 0220 	add.w	r2, r7, #32
 8013e38:	f107 0308 	add.w	r3, r7, #8
 8013e3c:	4922      	ldr	r1, [pc, #136]	; (8013ec8 <_ZN6Parser12parse_finishEP7Program+0xa8>)
 8013e3e:	4618      	mov	r0, r3
 8013e40:	f7ed fea9 	bl	8001b96 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8013e44:	f107 0308 	add.w	r3, r7, #8
 8013e48:	461a      	mov	r2, r3
 8013e4a:	2109      	movs	r1, #9
 8013e4c:	6878      	ldr	r0, [r7, #4]
 8013e4e:	f7ff fbdd 	bl	801360c <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013e52:	f107 0308 	add.w	r3, r7, #8
 8013e56:	4618      	mov	r0, r3
 8013e58:	f00e ff87 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8013e5c:	f107 0320 	add.w	r3, r7, #32
 8013e60:	4618      	mov	r0, r3
 8013e62:	f00e fcf2 	bl	802284a <_ZNSaIcED1Ev>
	get_next_token();
 8013e66:	6878      	ldr	r0, [r7, #4]
 8013e68:	f7ff fef3 	bl	8013c52 <_ZN6Parser14get_next_tokenEv>
	assert_token(TOKEN_NEWLINE, "line break after finish");
 8013e6c:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8013e70:	4618      	mov	r0, r3
 8013e72:	f00e fce9 	bl	8022848 <_ZNSaIcEC1Ev>
 8013e76:	f107 023c 	add.w	r2, r7, #60	; 0x3c
 8013e7a:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8013e7e:	4913      	ldr	r1, [pc, #76]	; (8013ecc <_ZN6Parser12parse_finishEP7Program+0xac>)
 8013e80:	4618      	mov	r0, r3
 8013e82:	f7ed fe88 	bl	8001b96 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8013e86:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8013e8a:	461a      	mov	r2, r3
 8013e8c:	210a      	movs	r1, #10
 8013e8e:	6878      	ldr	r0, [r7, #4]
 8013e90:	f7ff fbbc 	bl	801360c <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013e94:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8013e98:	4618      	mov	r0, r3
 8013e9a:	f00e ff66 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8013e9e:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8013ea2:	4618      	mov	r0, r3
 8013ea4:	f00e fcd1 	bl	802284a <_ZNSaIcED1Ev>
	get_next_token();
 8013ea8:	6878      	ldr	r0, [r7, #4]
 8013eaa:	f7ff fed2 	bl	8013c52 <_ZN6Parser14get_next_tokenEv>
	skip_newlines();
 8013eae:	6878      	ldr	r0, [r7, #4]
 8013eb0:	f7ff fe35 	bl	8013b1e <_ZN6Parser13skip_newlinesEv>
	Prog->finish = parse_body();
 8013eb4:	6878      	ldr	r0, [r7, #4]
 8013eb6:	f7ff fe69 	bl	8013b8c <_ZN6Parser10parse_bodyEv>
 8013eba:	4602      	mov	r2, r0
 8013ebc:	683b      	ldr	r3, [r7, #0]
 8013ebe:	609a      	str	r2, [r3, #8]
}
 8013ec0:	bf00      	nop
 8013ec2:	3740      	adds	r7, #64	; 0x40
 8013ec4:	46bd      	mov	sp, r7
 8013ec6:	bd80      	pop	{r7, pc}
 8013ec8:	08027a98 	.word	0x08027a98
 8013ecc:	08027aac 	.word	0x08027aac

08013ed0 <_ZN6ParserD1Ev>:
	Body *setup;
	Body *loop;
	Body *finish;
};

class Parser
 8013ed0:	b580      	push	{r7, lr}
 8013ed2:	b082      	sub	sp, #8
 8013ed4:	af00      	add	r7, sp, #0
 8013ed6:	6078      	str	r0, [r7, #4]
 8013ed8:	687b      	ldr	r3, [r7, #4]
 8013eda:	4618      	mov	r0, r3
 8013edc:	f7fb f857 	bl	800ef8e <_ZN5TokenD1Ev>
 8013ee0:	687b      	ldr	r3, [r7, #4]
 8013ee2:	4618      	mov	r0, r3
 8013ee4:	3708      	adds	r7, #8
 8013ee6:	46bd      	mov	sp, r7
 8013ee8:	bd80      	pop	{r7, pc}
	...

08013eec <__tcf_0>:

Program* Parser::parse_program()
{
	static Parser Par;
 8013eec:	b580      	push	{r7, lr}
 8013eee:	af00      	add	r7, sp, #0
 8013ef0:	4801      	ldr	r0, [pc, #4]	; (8013ef8 <__tcf_0+0xc>)
 8013ef2:	f7ff ffed 	bl	8013ed0 <_ZN6ParserD1Ev>
 8013ef6:	bd80      	pop	{r7, pc}
 8013ef8:	2000046c 	.word	0x2000046c

08013efc <_ZN6Parser13parse_programEv>:
{
 8013efc:	b580      	push	{r7, lr}
 8013efe:	b088      	sub	sp, #32
 8013f00:	af00      	add	r7, sp, #0
	static Parser Par;
 8013f02:	4b2c      	ldr	r3, [pc, #176]	; (8013fb4 <_ZN6Parser13parse_programEv+0xb8>)
 8013f04:	781b      	ldrb	r3, [r3, #0]
 8013f06:	f3bf 8f5b 	dmb	ish
 8013f0a:	b2db      	uxtb	r3, r3
 8013f0c:	f003 0301 	and.w	r3, r3, #1
 8013f10:	2b00      	cmp	r3, #0
 8013f12:	bf0c      	ite	eq
 8013f14:	2301      	moveq	r3, #1
 8013f16:	2300      	movne	r3, #0
 8013f18:	b2db      	uxtb	r3, r3
 8013f1a:	2b00      	cmp	r3, #0
 8013f1c:	d013      	beq.n	8013f46 <_ZN6Parser13parse_programEv+0x4a>
 8013f1e:	4825      	ldr	r0, [pc, #148]	; (8013fb4 <_ZN6Parser13parse_programEv+0xb8>)
 8013f20:	f00e fc72 	bl	8022808 <__cxa_guard_acquire>
 8013f24:	4603      	mov	r3, r0
 8013f26:	2b00      	cmp	r3, #0
 8013f28:	bf14      	ite	ne
 8013f2a:	2301      	movne	r3, #1
 8013f2c:	2300      	moveq	r3, #0
 8013f2e:	b2db      	uxtb	r3, r3
 8013f30:	2b00      	cmp	r3, #0
 8013f32:	d008      	beq.n	8013f46 <_ZN6Parser13parse_programEv+0x4a>
 8013f34:	4820      	ldr	r0, [pc, #128]	; (8013fb8 <_ZN6Parser13parse_programEv+0xbc>)
 8013f36:	f7ff f85f 	bl	8012ff8 <_ZN6ParserC1Ev>
 8013f3a:	481e      	ldr	r0, [pc, #120]	; (8013fb4 <_ZN6Parser13parse_programEv+0xb8>)
 8013f3c:	f00e fc70 	bl	8022820 <__cxa_guard_release>
 8013f40:	481e      	ldr	r0, [pc, #120]	; (8013fbc <_ZN6Parser13parse_programEv+0xc0>)
 8013f42:	f010 f8a6 	bl	8024092 <atexit>
	auto Prog = new Program();
 8013f46:	200c      	movs	r0, #12
 8013f48:	f00e fc6d 	bl	8022826 <_Znwj>
 8013f4c:	4603      	mov	r3, r0
 8013f4e:	2200      	movs	r2, #0
 8013f50:	601a      	str	r2, [r3, #0]
 8013f52:	2200      	movs	r2, #0
 8013f54:	605a      	str	r2, [r3, #4]
 8013f56:	2200      	movs	r2, #0
 8013f58:	609a      	str	r2, [r3, #8]
 8013f5a:	61fb      	str	r3, [r7, #28]
	Par.parse_setup(Prog);
 8013f5c:	69f9      	ldr	r1, [r7, #28]
 8013f5e:	4816      	ldr	r0, [pc, #88]	; (8013fb8 <_ZN6Parser13parse_programEv+0xbc>)
 8013f60:	f7ff feaa 	bl	8013cb8 <_ZN6Parser11parse_setupEP7Program>
	Par.parse_loop(Prog);
 8013f64:	69f9      	ldr	r1, [r7, #28]
 8013f66:	4814      	ldr	r0, [pc, #80]	; (8013fb8 <_ZN6Parser13parse_programEv+0xbc>)
 8013f68:	f7ff ff02 	bl	8013d70 <_ZN6Parser10parse_loopEP7Program>
	Par.parse_finish(Prog);
 8013f6c:	69f9      	ldr	r1, [r7, #28]
 8013f6e:	4812      	ldr	r0, [pc, #72]	; (8013fb8 <_ZN6Parser13parse_programEv+0xbc>)
 8013f70:	f7ff ff56 	bl	8013e20 <_ZN6Parser12parse_finishEP7Program>
	Par.assert_token(TOKEN_END_OF_FILE, "end of file");
 8013f74:	f107 0318 	add.w	r3, r7, #24
 8013f78:	4618      	mov	r0, r3
 8013f7a:	f00e fc65 	bl	8022848 <_ZNSaIcEC1Ev>
 8013f7e:	f107 0218 	add.w	r2, r7, #24
 8013f82:	463b      	mov	r3, r7
 8013f84:	490e      	ldr	r1, [pc, #56]	; (8013fc0 <_ZN6Parser13parse_programEv+0xc4>)
 8013f86:	4618      	mov	r0, r3
 8013f88:	f7ed fe05 	bl	8001b96 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8013f8c:	463b      	mov	r3, r7
 8013f8e:	461a      	mov	r2, r3
 8013f90:	2125      	movs	r1, #37	; 0x25
 8013f92:	4809      	ldr	r0, [pc, #36]	; (8013fb8 <_ZN6Parser13parse_programEv+0xbc>)
 8013f94:	f7ff fb3a 	bl	801360c <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013f98:	463b      	mov	r3, r7
 8013f9a:	4618      	mov	r0, r3
 8013f9c:	f00e fee5 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8013fa0:	f107 0318 	add.w	r3, r7, #24
 8013fa4:	4618      	mov	r0, r3
 8013fa6:	f00e fc50 	bl	802284a <_ZNSaIcED1Ev>
	return Prog;
 8013faa:	69fb      	ldr	r3, [r7, #28]
}
 8013fac:	4618      	mov	r0, r3
 8013fae:	3720      	adds	r7, #32
 8013fb0:	46bd      	mov	sp, r7
 8013fb2:	bd80      	pop	{r7, pc}
 8013fb4:	2000048c 	.word	0x2000048c
 8013fb8:	2000046c 	.word	0x2000046c
 8013fbc:	08013eed 	.word	0x08013eed
 8013fc0:	08027ac4 	.word	0x08027ac4

08013fc4 <_ZNSt6vectorIP10ExpressionSaIS1_EE9push_backEOS1_>:
      push_back(value_type&& __x)
 8013fc4:	b580      	push	{r7, lr}
 8013fc6:	b082      	sub	sp, #8
 8013fc8:	af00      	add	r7, sp, #0
 8013fca:	6078      	str	r0, [r7, #4]
 8013fcc:	6039      	str	r1, [r7, #0]
      { emplace_back(std::move(__x)); }
 8013fce:	6838      	ldr	r0, [r7, #0]
 8013fd0:	f000 fb5c 	bl	801468c <_ZSt4moveIRP10ExpressionEONSt16remove_referenceIT_E4typeEOS4_>
 8013fd4:	4603      	mov	r3, r0
 8013fd6:	4619      	mov	r1, r3
 8013fd8:	6878      	ldr	r0, [r7, #4]
 8013fda:	f000 fb62 	bl	80146a2 <_ZNSt6vectorIP10ExpressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>
 8013fde:	bf00      	nop
 8013fe0:	3708      	adds	r7, #8
 8013fe2:	46bd      	mov	sp, r7
 8013fe4:	bd80      	pop	{r7, pc}

08013fe6 <_ZNSt6vectorIP4BodySaIS1_EE9push_backEOS1_>:
      push_back(value_type&& __x)
 8013fe6:	b580      	push	{r7, lr}
 8013fe8:	b082      	sub	sp, #8
 8013fea:	af00      	add	r7, sp, #0
 8013fec:	6078      	str	r0, [r7, #4]
 8013fee:	6039      	str	r1, [r7, #0]
      { emplace_back(std::move(__x)); }
 8013ff0:	6838      	ldr	r0, [r7, #0]
 8013ff2:	f000 fb88 	bl	8014706 <_ZSt4moveIRP4BodyEONSt16remove_referenceIT_E4typeEOS4_>
 8013ff6:	4603      	mov	r3, r0
 8013ff8:	4619      	mov	r1, r3
 8013ffa:	6878      	ldr	r0, [r7, #4]
 8013ffc:	f000 fb8e 	bl	801471c <_ZNSt6vectorIP4BodySaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>
 8014000:	bf00      	nop
 8014002:	3708      	adds	r7, #8
 8014004:	46bd      	mov	sp, r7
 8014006:	bd80      	pop	{r7, pc}

08014008 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
 8014008:	b580      	push	{r7, lr}
 801400a:	b082      	sub	sp, #8
 801400c:	af00      	add	r7, sp, #0
 801400e:	6078      	str	r0, [r7, #4]
	: _Tp_alloc_type()
 8014010:	6878      	ldr	r0, [r7, #4]
 8014012:	f000 fbb5 	bl	8014780 <_ZNSaIP10ExpressionEC1Ev>
 8014016:	687b      	ldr	r3, [r7, #4]
 8014018:	4618      	mov	r0, r3
 801401a:	f7fa fb68 	bl	800e6ee <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
 801401e:	687b      	ldr	r3, [r7, #4]
 8014020:	4618      	mov	r0, r3
 8014022:	3708      	adds	r7, #8
 8014024:	46bd      	mov	sp, r7
 8014026:	bd80      	pop	{r7, pc}

08014028 <_ZNSt12_Vector_baseIP4BodySaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
 8014028:	b580      	push	{r7, lr}
 801402a:	b082      	sub	sp, #8
 801402c:	af00      	add	r7, sp, #0
 801402e:	6078      	str	r0, [r7, #4]
	: _Tp_alloc_type()
 8014030:	6878      	ldr	r0, [r7, #4]
 8014032:	f000 fbb1 	bl	8014798 <_ZNSaIP4BodyEC1Ev>
 8014036:	687b      	ldr	r3, [r7, #4]
 8014038:	4618      	mov	r0, r3
 801403a:	f000 fbb9 	bl	80147b0 <_ZNSt12_Vector_baseIP4BodySaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
 801403e:	687b      	ldr	r3, [r7, #4]
 8014040:	4618      	mov	r0, r3
 8014042:	3708      	adds	r7, #8
 8014044:	46bd      	mov	sp, r7
 8014046:	bd80      	pop	{r7, pc}

08014048 <_ZSt3getINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_ifbEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 8014048:	b580      	push	{r7, lr}
 801404a:	b082      	sub	sp, #8
 801404c:	af00      	add	r7, sp, #0
 801404e:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 8014050:	6878      	ldr	r0, [r7, #4]
 8014052:	f7fc f803 	bl	801005c <_ZSt3getILj0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>
 8014056:	4603      	mov	r3, r0
    }
 8014058:	4618      	mov	r0, r3
 801405a:	3708      	adds	r7, #8
 801405c:	46bd      	mov	sp, r7
 801405e:	bd80      	pop	{r7, pc}

08014060 <_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_>:
    operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
 8014060:	b580      	push	{r7, lr}
 8014062:	b082      	sub	sp, #8
 8014064:	af00      	add	r7, sp, #0
 8014066:	6078      	str	r0, [r7, #4]
 8014068:	6039      	str	r1, [r7, #0]
    { return __lhs.compare(__rhs) == 0; }
 801406a:	6839      	ldr	r1, [r7, #0]
 801406c:	6878      	ldr	r0, [r7, #4]
 801406e:	f00f f827 	bl	80230c0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc>
 8014072:	4603      	mov	r3, r0
 8014074:	2b00      	cmp	r3, #0
 8014076:	bf0c      	ite	eq
 8014078:	2301      	moveq	r3, #1
 801407a:	2300      	movne	r3, #0
 801407c:	b2db      	uxtb	r3, r3
 801407e:	4618      	mov	r0, r3
 8014080:	3708      	adds	r7, #8
 8014082:	46bd      	mov	sp, r7
 8014084:	bd80      	pop	{r7, pc}

08014086 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS3_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>:
	operator=(_Tp&& __rhs)
 8014086:	b590      	push	{r4, r7, lr}
 8014088:	b085      	sub	sp, #20
 801408a:	af00      	add	r7, sp, #0
 801408c:	6078      	str	r0, [r7, #4]
 801408e:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 8014090:	2301      	movs	r3, #1
 8014092:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 8014094:	6878      	ldr	r0, [r7, #4]
 8014096:	f7ee fd3e 	bl	8002b16 <_ZNKSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE5indexEv>
 801409a:	4603      	mov	r3, r0
 801409c:	2b01      	cmp	r3, #1
 801409e:	bf0c      	ite	eq
 80140a0:	2301      	moveq	r3, #1
 80140a2:	2300      	movne	r3, #0
 80140a4:	b2db      	uxtb	r3, r3
 80140a6:	2b00      	cmp	r3, #0
 80140a8:	d00a      	beq.n	80140c0 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS3_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 80140aa:	6838      	ldr	r0, [r7, #0]
 80140ac:	f000 fbb2 	bl	8014814 <_ZSt7forwardIP13Function_callEOT_RNSt16remove_referenceIS2_E4typeE>
 80140b0:	4603      	mov	r3, r0
 80140b2:	681c      	ldr	r4, [r3, #0]
 80140b4:	6878      	ldr	r0, [r7, #4]
 80140b6:	f7ee fdb3 	bl	8002c20 <_ZSt3getILj1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 80140ba:	4603      	mov	r3, r0
 80140bc:	601c      	str	r4, [r3, #0]
 80140be:	e007      	b.n	80140d0 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS3_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 80140c0:	6838      	ldr	r0, [r7, #0]
 80140c2:	f000 fba7 	bl	8014814 <_ZSt7forwardIP13Function_callEOT_RNSt16remove_referenceIS2_E4typeE>
 80140c6:	4603      	mov	r3, r0
 80140c8:	4619      	mov	r1, r3
 80140ca:	6878      	ldr	r0, [r7, #4]
 80140cc:	f000 fbad 	bl	801482a <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE7emplaceILj1EJS3_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	  return *this;
 80140d0:	687b      	ldr	r3, [r7, #4]
	}
 80140d2:	4618      	mov	r0, r3
 80140d4:	3714      	adds	r7, #20
 80140d6:	46bd      	mov	sp, r7
 80140d8:	bd90      	pop	{r4, r7, pc}

080140da <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS1_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>:
	operator=(_Tp&& __rhs)
 80140da:	b590      	push	{r4, r7, lr}
 80140dc:	b085      	sub	sp, #20
 80140de:	af00      	add	r7, sp, #0
 80140e0:	6078      	str	r0, [r7, #4]
 80140e2:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 80140e4:	2300      	movs	r3, #0
 80140e6:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 80140e8:	6878      	ldr	r0, [r7, #4]
 80140ea:	f7ee fd14 	bl	8002b16 <_ZNKSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE5indexEv>
 80140ee:	4603      	mov	r3, r0
 80140f0:	2b00      	cmp	r3, #0
 80140f2:	bf0c      	ite	eq
 80140f4:	2301      	moveq	r3, #1
 80140f6:	2300      	movne	r3, #0
 80140f8:	b2db      	uxtb	r3, r3
 80140fa:	2b00      	cmp	r3, #0
 80140fc:	d00a      	beq.n	8014114 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS1_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 80140fe:	6838      	ldr	r0, [r7, #0]
 8014100:	f000 fbac 	bl	801485c <_ZSt7forwardIP10AssignmentEOT_RNSt16remove_referenceIS2_E4typeE>
 8014104:	4603      	mov	r3, r0
 8014106:	681c      	ldr	r4, [r3, #0]
 8014108:	6878      	ldr	r0, [r7, #4]
 801410a:	f7ee fd39 	bl	8002b80 <_ZSt3getILj0EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 801410e:	4603      	mov	r3, r0
 8014110:	601c      	str	r4, [r3, #0]
 8014112:	e007      	b.n	8014124 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS1_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 8014114:	6838      	ldr	r0, [r7, #0]
 8014116:	f000 fba1 	bl	801485c <_ZSt7forwardIP10AssignmentEOT_RNSt16remove_referenceIS2_E4typeE>
 801411a:	4603      	mov	r3, r0
 801411c:	4619      	mov	r1, r3
 801411e:	6878      	ldr	r0, [r7, #4]
 8014120:	f000 fba7 	bl	8014872 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE7emplaceILj0EJS1_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	  return *this;
 8014124:	687b      	ldr	r3, [r7, #4]
	}
 8014126:	4618      	mov	r0, r3
 8014128:	3714      	adds	r7, #20
 801412a:	46bd      	mov	sp, r7
 801412c:	bd90      	pop	{r4, r7, pc}

0801412e <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>:
	operator=(_Tp&& __rhs)
 801412e:	b590      	push	{r4, r7, lr}
 8014130:	b085      	sub	sp, #20
 8014132:	af00      	add	r7, sp, #0
 8014134:	6078      	str	r0, [r7, #4]
 8014136:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 8014138:	2302      	movs	r3, #2
 801413a:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 801413c:	6878      	ldr	r0, [r7, #4]
 801413e:	f7ee fcea 	bl	8002b16 <_ZNKSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE5indexEv>
 8014142:	4603      	mov	r3, r0
 8014144:	2b02      	cmp	r3, #2
 8014146:	bf0c      	ite	eq
 8014148:	2301      	moveq	r3, #1
 801414a:	2300      	movne	r3, #0
 801414c:	b2db      	uxtb	r3, r3
 801414e:	2b00      	cmp	r3, #0
 8014150:	d00a      	beq.n	8014168 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 8014152:	6838      	ldr	r0, [r7, #0]
 8014154:	f000 fba6 	bl	80148a4 <_ZSt7forwardIP11Method_callEOT_RNSt16remove_referenceIS2_E4typeE>
 8014158:	4603      	mov	r3, r0
 801415a:	681c      	ldr	r4, [r3, #0]
 801415c:	6878      	ldr	r0, [r7, #4]
 801415e:	f7ee fdc1 	bl	8002ce4 <_ZSt3getILj2EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8014162:	4603      	mov	r3, r0
 8014164:	601c      	str	r4, [r3, #0]
 8014166:	e007      	b.n	8014178 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 8014168:	6838      	ldr	r0, [r7, #0]
 801416a:	f000 fb9b 	bl	80148a4 <_ZSt7forwardIP11Method_callEOT_RNSt16remove_referenceIS2_E4typeE>
 801416e:	4603      	mov	r3, r0
 8014170:	4619      	mov	r1, r3
 8014172:	6878      	ldr	r0, [r7, #4]
 8014174:	f000 fba1 	bl	80148ba <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE7emplaceILj2EJS5_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	  return *this;
 8014178:	687b      	ldr	r3, [r7, #4]
	}
 801417a:	4618      	mov	r0, r3
 801417c:	3714      	adds	r7, #20
 801417e:	46bd      	mov	sp, r7
 8014180:	bd90      	pop	{r4, r7, pc}

08014182 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEECI1NS0_16_Variant_storageILb1EJS3_S5_S7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 8014182:	b580      	push	{r7, lr}
 8014184:	b082      	sub	sp, #8
 8014186:	af00      	add	r7, sp, #0
 8014188:	6078      	str	r0, [r7, #4]
 801418a:	7039      	strb	r1, [r7, #0]
 801418c:	687b      	ldr	r3, [r7, #4]
 801418e:	4611      	mov	r1, r2
 8014190:	4618      	mov	r0, r3
 8014192:	f000 fbc9 	bl	8014928 <_ZNSt8__detail9__variant16_Variant_storageILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 8014196:	687b      	ldr	r3, [r7, #4]
 8014198:	4618      	mov	r0, r3
 801419a:	3708      	adds	r7, #8
 801419c:	46bd      	mov	sp, r7
 801419e:	bd80      	pop	{r7, pc}

080141a0 <_ZNSt8__detail9__variant15_Move_ctor_baseILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEECI1NS0_16_Variant_storageILb1EJS3_S5_S7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 80141a0:	b580      	push	{r7, lr}
 80141a2:	b082      	sub	sp, #8
 80141a4:	af00      	add	r7, sp, #0
 80141a6:	6078      	str	r0, [r7, #4]
 80141a8:	7039      	strb	r1, [r7, #0]
 80141aa:	687b      	ldr	r3, [r7, #4]
 80141ac:	4611      	mov	r1, r2
 80141ae:	4618      	mov	r0, r3
 80141b0:	f7ff ffe7 	bl	8014182 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEECI1NS0_16_Variant_storageILb1EJS3_S5_S7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 80141b4:	687b      	ldr	r3, [r7, #4]
 80141b6:	4618      	mov	r0, r3
 80141b8:	3708      	adds	r7, #8
 80141ba:	46bd      	mov	sp, r7
 80141bc:	bd80      	pop	{r7, pc}

080141be <_ZNSt8__detail9__variant17_Copy_assign_baseILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEECI1NS0_16_Variant_storageILb1EJS3_S5_S7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 80141be:	b580      	push	{r7, lr}
 80141c0:	b082      	sub	sp, #8
 80141c2:	af00      	add	r7, sp, #0
 80141c4:	6078      	str	r0, [r7, #4]
 80141c6:	7039      	strb	r1, [r7, #0]
 80141c8:	687b      	ldr	r3, [r7, #4]
 80141ca:	4611      	mov	r1, r2
 80141cc:	4618      	mov	r0, r3
 80141ce:	f7ff ffe7 	bl	80141a0 <_ZNSt8__detail9__variant15_Move_ctor_baseILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEECI1NS0_16_Variant_storageILb1EJS3_S5_S7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 80141d2:	687b      	ldr	r3, [r7, #4]
 80141d4:	4618      	mov	r0, r3
 80141d6:	3708      	adds	r7, #8
 80141d8:	46bd      	mov	sp, r7
 80141da:	bd80      	pop	{r7, pc}

080141dc <_ZNSt8__detail9__variant17_Move_assign_baseILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEECI1NS0_16_Variant_storageILb1EJS3_S5_S7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 80141dc:	b580      	push	{r7, lr}
 80141de:	b082      	sub	sp, #8
 80141e0:	af00      	add	r7, sp, #0
 80141e2:	6078      	str	r0, [r7, #4]
 80141e4:	7039      	strb	r1, [r7, #0]
 80141e6:	687b      	ldr	r3, [r7, #4]
 80141e8:	4611      	mov	r1, r2
 80141ea:	4618      	mov	r0, r3
 80141ec:	f7ff ffe7 	bl	80141be <_ZNSt8__detail9__variant17_Copy_assign_baseILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEECI1NS0_16_Variant_storageILb1EJS3_S5_S7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 80141f0:	687b      	ldr	r3, [r7, #4]
 80141f2:	4618      	mov	r0, r3
 80141f4:	3708      	adds	r7, #8
 80141f6:	46bd      	mov	sp, r7
 80141f8:	bd80      	pop	{r7, pc}

080141fa <_ZNSt8__detail9__variant13_Variant_baseIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
	_Variant_base(in_place_index_t<_Np> __i, _Args&&... __args)
 80141fa:	b580      	push	{r7, lr}
 80141fc:	b082      	sub	sp, #8
 80141fe:	af00      	add	r7, sp, #0
 8014200:	6078      	str	r0, [r7, #4]
 8014202:	7039      	strb	r1, [r7, #0]
	: _Base(__i, std::forward<_Args>(__args)...)
 8014204:	687b      	ldr	r3, [r7, #4]
 8014206:	4611      	mov	r1, r2
 8014208:	4618      	mov	r0, r3
 801420a:	f7ff ffe7 	bl	80141dc <_ZNSt8__detail9__variant17_Move_assign_baseILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEECI1NS0_16_Variant_storageILb1EJS3_S5_S7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 801420e:	687b      	ldr	r3, [r7, #4]
 8014210:	4618      	mov	r0, r3
 8014212:	3708      	adds	r7, #8
 8014214:	46bd      	mov	sp, r7
 8014216:	bd80      	pop	{r7, pc}

08014218 <_ZNSt8__detail9__variant13_Variant_baseIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEC1Ev>:
      _Variant_base()
 8014218:	b580      	push	{r7, lr}
 801421a:	b082      	sub	sp, #8
 801421c:	af00      	add	r7, sp, #0
 801421e:	6078      	str	r0, [r7, #4]
      : _Variant_base(in_place_index<0>) { }
 8014220:	4619      	mov	r1, r3
 8014222:	6878      	ldr	r0, [r7, #4]
 8014224:	f7ff ffe9 	bl	80141fa <_ZNSt8__detail9__variant13_Variant_baseIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 8014228:	687b      	ldr	r3, [r7, #4]
 801422a:	4618      	mov	r0, r3
 801422c:	3708      	adds	r7, #8
 801422e:	46bd      	mov	sp, r7
 8014230:	bd80      	pop	{r7, pc}

08014232 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS7_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>:
	operator=(_Tp&& __rhs)
 8014232:	b590      	push	{r4, r7, lr}
 8014234:	b085      	sub	sp, #20
 8014236:	af00      	add	r7, sp, #0
 8014238:	6078      	str	r0, [r7, #4]
 801423a:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 801423c:	2303      	movs	r3, #3
 801423e:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 8014240:	6878      	ldr	r0, [r7, #4]
 8014242:	f7ee fc68 	bl	8002b16 <_ZNKSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE5indexEv>
 8014246:	4603      	mov	r3, r0
 8014248:	2b03      	cmp	r3, #3
 801424a:	bf0c      	ite	eq
 801424c:	2301      	moveq	r3, #1
 801424e:	2300      	movne	r3, #0
 8014250:	b2db      	uxtb	r3, r3
 8014252:	2b00      	cmp	r3, #0
 8014254:	d00a      	beq.n	801426c <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS7_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 8014256:	6838      	ldr	r0, [r7, #0]
 8014258:	f000 fb78 	bl	801494c <_ZSt7forwardIP15While_statementEOT_RNSt16remove_referenceIS2_E4typeE>
 801425c:	4603      	mov	r3, r0
 801425e:	681c      	ldr	r4, [r3, #0]
 8014260:	6878      	ldr	r0, [r7, #4]
 8014262:	f7ee fdb3 	bl	8002dcc <_ZSt3getILj3EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8014266:	4603      	mov	r3, r0
 8014268:	601c      	str	r4, [r3, #0]
 801426a:	e007      	b.n	801427c <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS7_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 801426c:	6838      	ldr	r0, [r7, #0]
 801426e:	f000 fb6d 	bl	801494c <_ZSt7forwardIP15While_statementEOT_RNSt16remove_referenceIS2_E4typeE>
 8014272:	4603      	mov	r3, r0
 8014274:	4619      	mov	r1, r3
 8014276:	6878      	ldr	r0, [r7, #4]
 8014278:	f000 fb73 	bl	8014962 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE7emplaceILj3EJS7_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	  return *this;
 801427c:	687b      	ldr	r3, [r7, #4]
	}
 801427e:	4618      	mov	r0, r3
 8014280:	3714      	adds	r7, #20
 8014282:	46bd      	mov	sp, r7
 8014284:	bd90      	pop	{r4, r7, pc}

08014286 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS9_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>:
	operator=(_Tp&& __rhs)
 8014286:	b590      	push	{r4, r7, lr}
 8014288:	b085      	sub	sp, #20
 801428a:	af00      	add	r7, sp, #0
 801428c:	6078      	str	r0, [r7, #4]
 801428e:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 8014290:	2304      	movs	r3, #4
 8014292:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 8014294:	6878      	ldr	r0, [r7, #4]
 8014296:	f7ee fc3e 	bl	8002b16 <_ZNKSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE5indexEv>
 801429a:	4603      	mov	r3, r0
 801429c:	2b04      	cmp	r3, #4
 801429e:	bf0c      	ite	eq
 80142a0:	2301      	moveq	r3, #1
 80142a2:	2300      	movne	r3, #0
 80142a4:	b2db      	uxtb	r3, r3
 80142a6:	2b00      	cmp	r3, #0
 80142a8:	d00a      	beq.n	80142c0 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS9_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 80142aa:	6838      	ldr	r0, [r7, #0]
 80142ac:	f000 fb72 	bl	8014994 <_ZSt7forwardIP12If_statementEOT_RNSt16remove_referenceIS2_E4typeE>
 80142b0:	4603      	mov	r3, r0
 80142b2:	681c      	ldr	r4, [r3, #0]
 80142b4:	6878      	ldr	r0, [r7, #4]
 80142b6:	f7ee fe0f 	bl	8002ed8 <_ZSt3getILj4EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 80142ba:	4603      	mov	r3, r0
 80142bc:	601c      	str	r4, [r3, #0]
 80142be:	e007      	b.n	80142d0 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS9_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 80142c0:	6838      	ldr	r0, [r7, #0]
 80142c2:	f000 fb67 	bl	8014994 <_ZSt7forwardIP12If_statementEOT_RNSt16remove_referenceIS2_E4typeE>
 80142c6:	4603      	mov	r3, r0
 80142c8:	4619      	mov	r1, r3
 80142ca:	6878      	ldr	r0, [r7, #4]
 80142cc:	f000 fb6d 	bl	80149aa <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE7emplaceILj4EJS9_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	  return *this;
 80142d0:	687b      	ldr	r3, [r7, #4]
	}
 80142d2:	4618      	mov	r0, r3
 80142d4:	3714      	adds	r7, #20
 80142d6:	46bd      	mov	sp, r7
 80142d8:	bd90      	pop	{r4, r7, pc}

080142da <_ZNSt12_Vector_baseIP9StatementSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
 80142da:	b580      	push	{r7, lr}
 80142dc:	b082      	sub	sp, #8
 80142de:	af00      	add	r7, sp, #0
 80142e0:	6078      	str	r0, [r7, #4]
	: _Tp_alloc_type()
 80142e2:	6878      	ldr	r0, [r7, #4]
 80142e4:	f000 fb7a 	bl	80149dc <_ZNSaIP9StatementEC1Ev>
 80142e8:	687b      	ldr	r3, [r7, #4]
 80142ea:	4618      	mov	r0, r3
 80142ec:	f000 fb82 	bl	80149f4 <_ZNSt12_Vector_baseIP9StatementSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
 80142f0:	687b      	ldr	r3, [r7, #4]
 80142f2:	4618      	mov	r0, r3
 80142f4:	3708      	adds	r7, #8
 80142f6:	46bd      	mov	sp, r7
 80142f8:	bd80      	pop	{r7, pc}

080142fa <_ZNSt6vectorIP9StatementSaIS1_EE9push_backEOS1_>:
      push_back(value_type&& __x)
 80142fa:	b580      	push	{r7, lr}
 80142fc:	b082      	sub	sp, #8
 80142fe:	af00      	add	r7, sp, #0
 8014300:	6078      	str	r0, [r7, #4]
 8014302:	6039      	str	r1, [r7, #0]
      { emplace_back(std::move(__x)); }
 8014304:	6838      	ldr	r0, [r7, #0]
 8014306:	f000 fba7 	bl	8014a58 <_ZSt4moveIRP9StatementEONSt16remove_referenceIT_E4typeEOS4_>
 801430a:	4603      	mov	r3, r0
 801430c:	4619      	mov	r1, r3
 801430e:	6878      	ldr	r0, [r7, #4]
 8014310:	f000 fbad 	bl	8014a6e <_ZNSt6vectorIP9StatementSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>
 8014314:	bf00      	nop
 8014316:	3708      	adds	r7, #8
 8014318:	46bd      	mov	sp, r7
 801431a:	bd80      	pop	{r7, pc}

0801431c <_ZSt14__variant_castIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNSt8__detail9__variant17_Move_assign_baseILb0EJS5_ifbEEEEDcOT0_>:
    __variant_cast(_Tp&& __rhs)
 801431c:	b480      	push	{r7}
 801431e:	b083      	sub	sp, #12
 8014320:	af00      	add	r7, sp, #0
 8014322:	6078      	str	r0, [r7, #4]
	    return static_cast<variant<_Types...>&>(__rhs);
 8014324:	687b      	ldr	r3, [r7, #4]
    }
 8014326:	4618      	mov	r0, r3
 8014328:	370c      	adds	r7, #12
 801432a:	46bd      	mov	sp, r7
 801432c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014330:	4770      	bx	lr

08014332 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESK_EEDcOSF_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8014332:	b580      	push	{r7, lr}
 8014334:	b082      	sub	sp, #8
 8014336:	af00      	add	r7, sp, #0
 8014338:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 801433a:	6878      	ldr	r0, [r7, #4]
 801433c:	f7fc fdba 	bl	8010eb4 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8014340:	4603      	mov	r3, r0
 8014342:	4618      	mov	r0, r3
 8014344:	f7fb fe79 	bl	801003a <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 8014348:	4603      	mov	r3, r0
	}
 801434a:	4618      	mov	r0, r3
 801434c:	3708      	adds	r7, #8
 801434e:	46bd      	mov	sp, r7
 8014350:	bd80      	pop	{r7, pc}

08014352 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESH_SK_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8014352:	b5b0      	push	{r4, r5, r7, lr}
 8014354:	b084      	sub	sp, #16
 8014356:	af00      	add	r7, sp, #0
 8014358:	6078      	str	r0, [r7, #4]
 801435a:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 801435c:	6878      	ldr	r0, [r7, #4]
 801435e:	f000 fbb8 	bl	8014ad2 <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 8014362:	4604      	mov	r4, r0
 8014364:	6838      	ldr	r0, [r7, #0]
 8014366:	f7fc fda5 	bl	8010eb4 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 801436a:	4603      	mov	r3, r0
 801436c:	4618      	mov	r0, r3
 801436e:	f7ff ffe0 	bl	8014332 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESK_EEDcOSF_>
 8014372:	4601      	mov	r1, r0
 8014374:	f107 030c 	add.w	r3, r7, #12
 8014378:	461a      	mov	r2, r3
 801437a:	4620      	mov	r0, r4
 801437c:	f000 fbb4 	bl	8014ae8 <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_JRS8_St17integral_constantIjLj0EEEENSt15__invoke_resultISB_JDpT0_EE4typeESC_DpOSJ_>
	      integral_constant<size_t, __indices>()...);
 8014380:	462b      	mov	r3, r5
      }
 8014382:	4618      	mov	r0, r3
 8014384:	3710      	adds	r7, #16
 8014386:	46bd      	mov	sp, r7
 8014388:	bdb0      	pop	{r4, r5, r7, pc}

0801438a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESH_SK_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 801438a:	b5b0      	push	{r4, r5, r7, lr}
 801438c:	b082      	sub	sp, #8
 801438e:	af00      	add	r7, sp, #0
 8014390:	6078      	str	r0, [r7, #4]
 8014392:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8014394:	6878      	ldr	r0, [r7, #4]
 8014396:	f000 fb9c 	bl	8014ad2 <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 801439a:	4604      	mov	r4, r0
 801439c:	6838      	ldr	r0, [r7, #0]
 801439e:	f7fc fd89 	bl	8010eb4 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 80143a2:	4603      	mov	r3, r0
 80143a4:	4619      	mov	r1, r3
 80143a6:	4620      	mov	r0, r4
 80143a8:	f7ff ffd3 	bl	8014352 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESH_SK_>
				   std::forward<_Variants>(__vars)...);
 80143ac:	462b      	mov	r3, r5
      }
 80143ae:	4618      	mov	r0, r3
 80143b0:	3708      	adds	r7, #8
 80143b2:	46bd      	mov	sp, r7
 80143b4:	bdb0      	pop	{r4, r5, r7, pc}

080143b6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj0EEEE14__visit_invokeESH_SK_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80143b6:	b5b0      	push	{r4, r5, r7, lr}
 80143b8:	b082      	sub	sp, #8
 80143ba:	af00      	add	r7, sp, #0
 80143bc:	6078      	str	r0, [r7, #4]
 80143be:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 80143c0:	6878      	ldr	r0, [r7, #4]
 80143c2:	f000 fb86 	bl	8014ad2 <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 80143c6:	4604      	mov	r4, r0
 80143c8:	6838      	ldr	r0, [r7, #0]
 80143ca:	f7fc fd73 	bl	8010eb4 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 80143ce:	4603      	mov	r3, r0
 80143d0:	4619      	mov	r1, r3
 80143d2:	4620      	mov	r0, r4
 80143d4:	f7ff ffd9 	bl	801438a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESH_SK_>
				   std::forward<_Variants>(__vars)...);
 80143d8:	462b      	mov	r3, r5
      }
 80143da:	4618      	mov	r0, r3
 80143dc:	3708      	adds	r7, #8
 80143de:	46bd      	mov	sp, r7
 80143e0:	bdb0      	pop	{r4, r5, r7, pc}

080143e2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESK_EEDcOSF_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 80143e2:	b580      	push	{r7, lr}
 80143e4:	b082      	sub	sp, #8
 80143e6:	af00      	add	r7, sp, #0
 80143e8:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 80143ea:	6878      	ldr	r0, [r7, #4]
 80143ec:	f7fc fd62 	bl	8010eb4 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 80143f0:	4603      	mov	r3, r0
 80143f2:	4618      	mov	r0, r3
 80143f4:	f7fb fe8a 	bl	801010c <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 80143f8:	4603      	mov	r3, r0
	}
 80143fa:	4618      	mov	r0, r3
 80143fc:	3708      	adds	r7, #8
 80143fe:	46bd      	mov	sp, r7
 8014400:	bd80      	pop	{r7, pc}

08014402 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESH_SK_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8014402:	b5b0      	push	{r4, r5, r7, lr}
 8014404:	b084      	sub	sp, #16
 8014406:	af00      	add	r7, sp, #0
 8014408:	6078      	str	r0, [r7, #4]
 801440a:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 801440c:	6878      	ldr	r0, [r7, #4]
 801440e:	f000 fb60 	bl	8014ad2 <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 8014412:	4604      	mov	r4, r0
 8014414:	6838      	ldr	r0, [r7, #0]
 8014416:	f7fc fd4d 	bl	8010eb4 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 801441a:	4603      	mov	r3, r0
 801441c:	4618      	mov	r0, r3
 801441e:	f7ff ffe0 	bl	80143e2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESK_EEDcOSF_>
 8014422:	4601      	mov	r1, r0
 8014424:	f107 030c 	add.w	r3, r7, #12
 8014428:	461a      	mov	r2, r3
 801442a:	4620      	mov	r0, r4
 801442c:	f000 fb7a 	bl	8014b24 <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_JRiSt17integral_constantIjLj1EEEENSt15__invoke_resultISB_JDpT0_EE4typeESC_DpOSJ_>
	      integral_constant<size_t, __indices>()...);
 8014430:	462b      	mov	r3, r5
      }
 8014432:	4618      	mov	r0, r3
 8014434:	3710      	adds	r7, #16
 8014436:	46bd      	mov	sp, r7
 8014438:	bdb0      	pop	{r4, r5, r7, pc}

0801443a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESH_SK_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 801443a:	b5b0      	push	{r4, r5, r7, lr}
 801443c:	b082      	sub	sp, #8
 801443e:	af00      	add	r7, sp, #0
 8014440:	6078      	str	r0, [r7, #4]
 8014442:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8014444:	6878      	ldr	r0, [r7, #4]
 8014446:	f000 fb44 	bl	8014ad2 <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 801444a:	4604      	mov	r4, r0
 801444c:	6838      	ldr	r0, [r7, #0]
 801444e:	f7fc fd31 	bl	8010eb4 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8014452:	4603      	mov	r3, r0
 8014454:	4619      	mov	r1, r3
 8014456:	4620      	mov	r0, r4
 8014458:	f7ff ffd3 	bl	8014402 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESH_SK_>
				   std::forward<_Variants>(__vars)...);
 801445c:	462b      	mov	r3, r5
      }
 801445e:	4618      	mov	r0, r3
 8014460:	3708      	adds	r7, #8
 8014462:	46bd      	mov	sp, r7
 8014464:	bdb0      	pop	{r4, r5, r7, pc}

08014466 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj1EEEE14__visit_invokeESH_SK_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8014466:	b5b0      	push	{r4, r5, r7, lr}
 8014468:	b082      	sub	sp, #8
 801446a:	af00      	add	r7, sp, #0
 801446c:	6078      	str	r0, [r7, #4]
 801446e:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8014470:	6878      	ldr	r0, [r7, #4]
 8014472:	f000 fb2e 	bl	8014ad2 <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 8014476:	4604      	mov	r4, r0
 8014478:	6838      	ldr	r0, [r7, #0]
 801447a:	f7fc fd1b 	bl	8010eb4 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 801447e:	4603      	mov	r3, r0
 8014480:	4619      	mov	r1, r3
 8014482:	4620      	mov	r0, r4
 8014484:	f7ff ffd9 	bl	801443a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESH_SK_>
				   std::forward<_Variants>(__vars)...);
 8014488:	462b      	mov	r3, r5
      }
 801448a:	4618      	mov	r0, r3
 801448c:	3708      	adds	r7, #8
 801448e:	46bd      	mov	sp, r7
 8014490:	bdb0      	pop	{r4, r5, r7, pc}

08014492 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESK_EEDcOSF_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8014492:	b580      	push	{r7, lr}
 8014494:	b082      	sub	sp, #8
 8014496:	af00      	add	r7, sp, #0
 8014498:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 801449a:	6878      	ldr	r0, [r7, #4]
 801449c:	f7fc fd0a 	bl	8010eb4 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 80144a0:	4603      	mov	r3, r0
 80144a2:	4618      	mov	r0, r3
 80144a4:	f7fb feae 	bl	8010204 <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 80144a8:	4603      	mov	r3, r0
	}
 80144aa:	4618      	mov	r0, r3
 80144ac:	3708      	adds	r7, #8
 80144ae:	46bd      	mov	sp, r7
 80144b0:	bd80      	pop	{r7, pc}

080144b2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESH_SK_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 80144b2:	b5b0      	push	{r4, r5, r7, lr}
 80144b4:	b084      	sub	sp, #16
 80144b6:	af00      	add	r7, sp, #0
 80144b8:	6078      	str	r0, [r7, #4]
 80144ba:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 80144bc:	6878      	ldr	r0, [r7, #4]
 80144be:	f000 fb08 	bl	8014ad2 <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 80144c2:	4604      	mov	r4, r0
 80144c4:	6838      	ldr	r0, [r7, #0]
 80144c6:	f7fc fcf5 	bl	8010eb4 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 80144ca:	4603      	mov	r3, r0
 80144cc:	4618      	mov	r0, r3
 80144ce:	f7ff ffe0 	bl	8014492 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESK_EEDcOSF_>
 80144d2:	4601      	mov	r1, r0
 80144d4:	f107 030c 	add.w	r3, r7, #12
 80144d8:	461a      	mov	r2, r3
 80144da:	4620      	mov	r0, r4
 80144dc:	f000 fb40 	bl	8014b60 <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_JRfSt17integral_constantIjLj2EEEENSt15__invoke_resultISB_JDpT0_EE4typeESC_DpOSJ_>
	      integral_constant<size_t, __indices>()...);
 80144e0:	462b      	mov	r3, r5
      }
 80144e2:	4618      	mov	r0, r3
 80144e4:	3710      	adds	r7, #16
 80144e6:	46bd      	mov	sp, r7
 80144e8:	bdb0      	pop	{r4, r5, r7, pc}

080144ea <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESH_SK_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80144ea:	b5b0      	push	{r4, r5, r7, lr}
 80144ec:	b082      	sub	sp, #8
 80144ee:	af00      	add	r7, sp, #0
 80144f0:	6078      	str	r0, [r7, #4]
 80144f2:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 80144f4:	6878      	ldr	r0, [r7, #4]
 80144f6:	f000 faec 	bl	8014ad2 <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 80144fa:	4604      	mov	r4, r0
 80144fc:	6838      	ldr	r0, [r7, #0]
 80144fe:	f7fc fcd9 	bl	8010eb4 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8014502:	4603      	mov	r3, r0
 8014504:	4619      	mov	r1, r3
 8014506:	4620      	mov	r0, r4
 8014508:	f7ff ffd3 	bl	80144b2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESH_SK_>
				   std::forward<_Variants>(__vars)...);
 801450c:	462b      	mov	r3, r5
      }
 801450e:	4618      	mov	r0, r3
 8014510:	3708      	adds	r7, #8
 8014512:	46bd      	mov	sp, r7
 8014514:	bdb0      	pop	{r4, r5, r7, pc}

08014516 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj2EEEE14__visit_invokeESH_SK_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8014516:	b5b0      	push	{r4, r5, r7, lr}
 8014518:	b082      	sub	sp, #8
 801451a:	af00      	add	r7, sp, #0
 801451c:	6078      	str	r0, [r7, #4]
 801451e:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8014520:	6878      	ldr	r0, [r7, #4]
 8014522:	f000 fad6 	bl	8014ad2 <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 8014526:	4604      	mov	r4, r0
 8014528:	6838      	ldr	r0, [r7, #0]
 801452a:	f7fc fcc3 	bl	8010eb4 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 801452e:	4603      	mov	r3, r0
 8014530:	4619      	mov	r1, r3
 8014532:	4620      	mov	r0, r4
 8014534:	f7ff ffd9 	bl	80144ea <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESH_SK_>
				   std::forward<_Variants>(__vars)...);
 8014538:	462b      	mov	r3, r5
      }
 801453a:	4618      	mov	r0, r3
 801453c:	3708      	adds	r7, #8
 801453e:	46bd      	mov	sp, r7
 8014540:	bdb0      	pop	{r4, r5, r7, pc}

08014542 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESK_EEDcOSF_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8014542:	b580      	push	{r7, lr}
 8014544:	b082      	sub	sp, #8
 8014546:	af00      	add	r7, sp, #0
 8014548:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 801454a:	6878      	ldr	r0, [r7, #4]
 801454c:	f7fc fcb2 	bl	8010eb4 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8014550:	4603      	mov	r3, r0
 8014552:	4618      	mov	r0, r3
 8014554:	f7fc fab9 	bl	8010aca <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 8014558:	4603      	mov	r3, r0
	}
 801455a:	4618      	mov	r0, r3
 801455c:	3708      	adds	r7, #8
 801455e:	46bd      	mov	sp, r7
 8014560:	bd80      	pop	{r7, pc}

08014562 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESH_SK_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8014562:	b5b0      	push	{r4, r5, r7, lr}
 8014564:	b084      	sub	sp, #16
 8014566:	af00      	add	r7, sp, #0
 8014568:	6078      	str	r0, [r7, #4]
 801456a:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 801456c:	6878      	ldr	r0, [r7, #4]
 801456e:	f000 fab0 	bl	8014ad2 <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 8014572:	4604      	mov	r4, r0
 8014574:	6838      	ldr	r0, [r7, #0]
 8014576:	f7fc fc9d 	bl	8010eb4 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 801457a:	4603      	mov	r3, r0
 801457c:	4618      	mov	r0, r3
 801457e:	f7ff ffe0 	bl	8014542 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESK_EEDcOSF_>
 8014582:	4601      	mov	r1, r0
 8014584:	f107 030c 	add.w	r3, r7, #12
 8014588:	461a      	mov	r2, r3
 801458a:	4620      	mov	r0, r4
 801458c:	f000 fb06 	bl	8014b9c <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_JRbSt17integral_constantIjLj3EEEENSt15__invoke_resultISB_JDpT0_EE4typeESC_DpOSJ_>
	      integral_constant<size_t, __indices>()...);
 8014590:	462b      	mov	r3, r5
      }
 8014592:	4618      	mov	r0, r3
 8014594:	3710      	adds	r7, #16
 8014596:	46bd      	mov	sp, r7
 8014598:	bdb0      	pop	{r4, r5, r7, pc}

0801459a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESH_SK_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 801459a:	b5b0      	push	{r4, r5, r7, lr}
 801459c:	b082      	sub	sp, #8
 801459e:	af00      	add	r7, sp, #0
 80145a0:	6078      	str	r0, [r7, #4]
 80145a2:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 80145a4:	6878      	ldr	r0, [r7, #4]
 80145a6:	f000 fa94 	bl	8014ad2 <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 80145aa:	4604      	mov	r4, r0
 80145ac:	6838      	ldr	r0, [r7, #0]
 80145ae:	f7fc fc81 	bl	8010eb4 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 80145b2:	4603      	mov	r3, r0
 80145b4:	4619      	mov	r1, r3
 80145b6:	4620      	mov	r0, r4
 80145b8:	f7ff ffd3 	bl	8014562 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESH_SK_>
				   std::forward<_Variants>(__vars)...);
 80145bc:	462b      	mov	r3, r5
      }
 80145be:	4618      	mov	r0, r3
 80145c0:	3708      	adds	r7, #8
 80145c2:	46bd      	mov	sp, r7
 80145c4:	bdb0      	pop	{r4, r5, r7, pc}

080145c6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj3EEEE14__visit_invokeESH_SK_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80145c6:	b5b0      	push	{r4, r5, r7, lr}
 80145c8:	b082      	sub	sp, #8
 80145ca:	af00      	add	r7, sp, #0
 80145cc:	6078      	str	r0, [r7, #4]
 80145ce:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 80145d0:	6878      	ldr	r0, [r7, #4]
 80145d2:	f000 fa7e 	bl	8014ad2 <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 80145d6:	4604      	mov	r4, r0
 80145d8:	6838      	ldr	r0, [r7, #0]
 80145da:	f7fc fc6b 	bl	8010eb4 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 80145de:	4603      	mov	r3, r0
 80145e0:	4619      	mov	r1, r3
 80145e2:	4620      	mov	r0, r4
 80145e4:	f7ff ffd9 	bl	801459a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESH_SK_>
				   std::forward<_Variants>(__vars)...);
 80145e8:	462b      	mov	r3, r5
      }
 80145ea:	4618      	mov	r0, r3
 80145ec:	3708      	adds	r7, #8
 80145ee:	46bd      	mov	sp, r7
 80145f0:	bdb0      	pop	{r4, r5, r7, pc}

080145f2 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSA_EUlOT_T0_E_RSt7variantIJS9_ifbEEEJLj4EEE9_M_accessIJEEERKSL_jDpT_>:
	_M_access(size_t __first_index, _Args... __rest_indices) const
 80145f2:	b580      	push	{r7, lr}
 80145f4:	b082      	sub	sp, #8
 80145f6:	af00      	add	r7, sp, #0
 80145f8:	6078      	str	r0, [r7, #4]
 80145fa:	6039      	str	r1, [r7, #0]
	    ._M_access(__rest_indices...);
 80145fc:	683b      	ldr	r3, [r7, #0]
 80145fe:	009b      	lsls	r3, r3, #2
 8014600:	687a      	ldr	r2, [r7, #4]
 8014602:	4413      	add	r3, r2
 8014604:	4618      	mov	r0, r3
 8014606:	f000 fae7 	bl	8014bd8 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSA_EUlOT_T0_E_RSt7variantIJS9_ifbEEEJEE9_M_accessEv>
 801460a:	4603      	mov	r3, r0
	}
 801460c:	4618      	mov	r0, r3
 801460e:	3708      	adds	r7, #8
 8014610:	46bd      	mov	sp, r7
 8014612:	bd80      	pop	{r7, pc}

08014614 <_ZSt10__do_visitILb1ELb1EZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_JRSt7variantIJS8_ifbEEEEDcOT1_DpOT2_>:
    __do_visit(_Visitor&& __visitor, _Variants&&... __variants)
 8014614:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014616:	b085      	sub	sp, #20
 8014618:	af00      	add	r7, sp, #0
 801461a:	6078      	str	r0, [r7, #4]
 801461c:	6039      	str	r1, [r7, #0]
      constexpr auto& __vtable = __detail::__variant::__gen_vtable<
 801461e:	4b0f      	ldr	r3, [pc, #60]	; (801465c <_ZSt10__do_visitILb1ELb1EZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_JRSt7variantIJS8_ifbEEEEDcOT1_DpOT2_+0x48>)
 8014620:	60fb      	str	r3, [r7, #12]
      auto __func_ptr = __vtable._M_access(__variants.index()...);
 8014622:	6838      	ldr	r0, [r7, #0]
 8014624:	f7fb fb26 	bl	800fc74 <_ZNKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE5indexEv>
 8014628:	4603      	mov	r3, r0
 801462a:	4619      	mov	r1, r3
 801462c:	68f8      	ldr	r0, [r7, #12]
 801462e:	f7ff ffe0 	bl	80145f2 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSA_EUlOT_T0_E_RSt7variantIJS9_ifbEEEJLj4EEE9_M_accessIJEEERKSL_jDpT_>
 8014632:	4603      	mov	r3, r0
 8014634:	681b      	ldr	r3, [r3, #0]
 8014636:	60bb      	str	r3, [r7, #8]
      return (*__func_ptr)(std::forward<_Visitor>(__visitor),
 8014638:	68bc      	ldr	r4, [r7, #8]
 801463a:	6878      	ldr	r0, [r7, #4]
 801463c:	f000 fad7 	bl	8014bee <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 8014640:	4605      	mov	r5, r0
 8014642:	6838      	ldr	r0, [r7, #0]
 8014644:	f7fc fc36 	bl	8010eb4 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8014648:	4603      	mov	r3, r0
 801464a:	4619      	mov	r1, r3
 801464c:	4628      	mov	r0, r5
 801464e:	47a0      	blx	r4
			   std::forward<_Variants>(__variants)...);
 8014650:	4633      	mov	r3, r6
    }
 8014652:	4618      	mov	r0, r3
 8014654:	3714      	adds	r7, #20
 8014656:	46bd      	mov	sp, r7
 8014658:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801465a:	bf00      	nop
 801465c:	0802826c 	.word	0x0802826c

08014660 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_>:
      operator=(_Move_assign_base&& __rhs)
 8014660:	b580      	push	{r7, lr}
 8014662:	b084      	sub	sp, #16
 8014664:	af00      	add	r7, sp, #0
 8014666:	6078      	str	r0, [r7, #4]
 8014668:	6039      	str	r1, [r7, #0]
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 801466a:	687b      	ldr	r3, [r7, #4]
 801466c:	60fb      	str	r3, [r7, #12]
 801466e:	6838      	ldr	r0, [r7, #0]
 8014670:	f7ff fe54 	bl	801431c <_ZSt14__variant_castIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNSt8__detail9__variant17_Move_assign_baseILb0EJS5_ifbEEEEDcOT0_>
 8014674:	4602      	mov	r2, r0
 8014676:	f107 030c 	add.w	r3, r7, #12
 801467a:	4611      	mov	r1, r2
 801467c:	4618      	mov	r0, r3
 801467e:	f7ff ffc9 	bl	8014614 <_ZSt10__do_visitILb1ELb1EZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_JRSt7variantIJS8_ifbEEEEDcOT1_DpOT2_>
	return *this;
 8014682:	687b      	ldr	r3, [r7, #4]
      }
 8014684:	4618      	mov	r0, r3
 8014686:	3710      	adds	r7, #16
 8014688:	46bd      	mov	sp, r7
 801468a:	bd80      	pop	{r7, pc}

0801468c <_ZSt4moveIRP10ExpressionEONSt16remove_referenceIT_E4typeEOS4_>:
    move(_Tp&& __t) noexcept
 801468c:	b480      	push	{r7}
 801468e:	b083      	sub	sp, #12
 8014690:	af00      	add	r7, sp, #0
 8014692:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 8014694:	687b      	ldr	r3, [r7, #4]
 8014696:	4618      	mov	r0, r3
 8014698:	370c      	adds	r7, #12
 801469a:	46bd      	mov	sp, r7
 801469c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80146a0:	4770      	bx	lr

080146a2 <_ZNSt6vectorIP10ExpressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>:
      vector<_Tp, _Alloc>::
 80146a2:	b5b0      	push	{r4, r5, r7, lr}
 80146a4:	b082      	sub	sp, #8
 80146a6:	af00      	add	r7, sp, #0
 80146a8:	6078      	str	r0, [r7, #4]
 80146aa:	6039      	str	r1, [r7, #0]
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 80146ac:	687b      	ldr	r3, [r7, #4]
 80146ae:	685a      	ldr	r2, [r3, #4]
 80146b0:	687b      	ldr	r3, [r7, #4]
 80146b2:	689b      	ldr	r3, [r3, #8]
 80146b4:	429a      	cmp	r2, r3
 80146b6:	d011      	beq.n	80146dc <_ZNSt6vectorIP10ExpressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x3a>
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 80146b8:	687c      	ldr	r4, [r7, #4]
 80146ba:	687b      	ldr	r3, [r7, #4]
 80146bc:	685d      	ldr	r5, [r3, #4]
 80146be:	6838      	ldr	r0, [r7, #0]
 80146c0:	f000 faa0 	bl	8014c04 <_ZSt7forwardIP10ExpressionEOT_RNSt16remove_referenceIS2_E4typeE>
 80146c4:	4603      	mov	r3, r0
 80146c6:	461a      	mov	r2, r3
 80146c8:	4629      	mov	r1, r5
 80146ca:	4620      	mov	r0, r4
 80146cc:	f000 faa5 	bl	8014c1a <_ZNSt16allocator_traitsISaIP10ExpressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	    ++this->_M_impl._M_finish;
 80146d0:	687b      	ldr	r3, [r7, #4]
 80146d2:	685b      	ldr	r3, [r3, #4]
 80146d4:	1d1a      	adds	r2, r3, #4
 80146d6:	687b      	ldr	r3, [r7, #4]
 80146d8:	605a      	str	r2, [r3, #4]
 80146da:	e00c      	b.n	80146f6 <_ZNSt6vectorIP10ExpressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x54>
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
 80146dc:	6878      	ldr	r0, [r7, #4]
 80146de:	f000 faaf 	bl	8014c40 <_ZNSt6vectorIP10ExpressionSaIS1_EE3endEv>
 80146e2:	4604      	mov	r4, r0
 80146e4:	6838      	ldr	r0, [r7, #0]
 80146e6:	f000 fa8d 	bl	8014c04 <_ZSt7forwardIP10ExpressionEOT_RNSt16remove_referenceIS2_E4typeE>
 80146ea:	4603      	mov	r3, r0
 80146ec:	461a      	mov	r2, r3
 80146ee:	4621      	mov	r1, r4
 80146f0:	6878      	ldr	r0, [r7, #4]
 80146f2:	f000 fab7 	bl	8014c64 <_ZNSt6vectorIP10ExpressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
	return back();
 80146f6:	6878      	ldr	r0, [r7, #4]
 80146f8:	f000 fb30 	bl	8014d5c <_ZNSt6vectorIP10ExpressionSaIS1_EE4backEv>
 80146fc:	4603      	mov	r3, r0
      }
 80146fe:	4618      	mov	r0, r3
 8014700:	3708      	adds	r7, #8
 8014702:	46bd      	mov	sp, r7
 8014704:	bdb0      	pop	{r4, r5, r7, pc}

08014706 <_ZSt4moveIRP4BodyEONSt16remove_referenceIT_E4typeEOS4_>:
    move(_Tp&& __t) noexcept
 8014706:	b480      	push	{r7}
 8014708:	b083      	sub	sp, #12
 801470a:	af00      	add	r7, sp, #0
 801470c:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 801470e:	687b      	ldr	r3, [r7, #4]
 8014710:	4618      	mov	r0, r3
 8014712:	370c      	adds	r7, #12
 8014714:	46bd      	mov	sp, r7
 8014716:	f85d 7b04 	ldr.w	r7, [sp], #4
 801471a:	4770      	bx	lr

0801471c <_ZNSt6vectorIP4BodySaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>:
      vector<_Tp, _Alloc>::
 801471c:	b5b0      	push	{r4, r5, r7, lr}
 801471e:	b082      	sub	sp, #8
 8014720:	af00      	add	r7, sp, #0
 8014722:	6078      	str	r0, [r7, #4]
 8014724:	6039      	str	r1, [r7, #0]
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 8014726:	687b      	ldr	r3, [r7, #4]
 8014728:	685a      	ldr	r2, [r3, #4]
 801472a:	687b      	ldr	r3, [r7, #4]
 801472c:	689b      	ldr	r3, [r3, #8]
 801472e:	429a      	cmp	r2, r3
 8014730:	d011      	beq.n	8014756 <_ZNSt6vectorIP4BodySaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x3a>
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 8014732:	687c      	ldr	r4, [r7, #4]
 8014734:	687b      	ldr	r3, [r7, #4]
 8014736:	685d      	ldr	r5, [r3, #4]
 8014738:	6838      	ldr	r0, [r7, #0]
 801473a:	f000 fb2a 	bl	8014d92 <_ZSt7forwardIP4BodyEOT_RNSt16remove_referenceIS2_E4typeE>
 801473e:	4603      	mov	r3, r0
 8014740:	461a      	mov	r2, r3
 8014742:	4629      	mov	r1, r5
 8014744:	4620      	mov	r0, r4
 8014746:	f000 fb2f 	bl	8014da8 <_ZNSt16allocator_traitsISaIP4BodyEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	    ++this->_M_impl._M_finish;
 801474a:	687b      	ldr	r3, [r7, #4]
 801474c:	685b      	ldr	r3, [r3, #4]
 801474e:	1d1a      	adds	r2, r3, #4
 8014750:	687b      	ldr	r3, [r7, #4]
 8014752:	605a      	str	r2, [r3, #4]
 8014754:	e00c      	b.n	8014770 <_ZNSt6vectorIP4BodySaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x54>
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
 8014756:	6878      	ldr	r0, [r7, #4]
 8014758:	f7ee fbe8 	bl	8002f2c <_ZNSt6vectorIP4BodySaIS1_EE3endEv>
 801475c:	4604      	mov	r4, r0
 801475e:	6838      	ldr	r0, [r7, #0]
 8014760:	f000 fb17 	bl	8014d92 <_ZSt7forwardIP4BodyEOT_RNSt16remove_referenceIS2_E4typeE>
 8014764:	4603      	mov	r3, r0
 8014766:	461a      	mov	r2, r3
 8014768:	4621      	mov	r1, r4
 801476a:	6878      	ldr	r0, [r7, #4]
 801476c:	f000 fb30 	bl	8014dd0 <_ZNSt6vectorIP4BodySaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
	return back();
 8014770:	6878      	ldr	r0, [r7, #4]
 8014772:	f7ed fc06 	bl	8001f82 <_ZNSt6vectorIP4BodySaIS1_EE4backEv>
 8014776:	4603      	mov	r3, r0
      }
 8014778:	4618      	mov	r0, r3
 801477a:	3708      	adds	r7, #8
 801477c:	46bd      	mov	sp, r7
 801477e:	bdb0      	pop	{r4, r5, r7, pc}

08014780 <_ZNSaIP10ExpressionEC1Ev>:
 8014780:	b580      	push	{r7, lr}
 8014782:	b082      	sub	sp, #8
 8014784:	af00      	add	r7, sp, #0
 8014786:	6078      	str	r0, [r7, #4]
 8014788:	6878      	ldr	r0, [r7, #4]
 801478a:	f000 fb9d 	bl	8014ec8 <_ZN9__gnu_cxx13new_allocatorIP10ExpressionEC1Ev>
 801478e:	687b      	ldr	r3, [r7, #4]
 8014790:	4618      	mov	r0, r3
 8014792:	3708      	adds	r7, #8
 8014794:	46bd      	mov	sp, r7
 8014796:	bd80      	pop	{r7, pc}

08014798 <_ZNSaIP4BodyEC1Ev>:
 8014798:	b580      	push	{r7, lr}
 801479a:	b082      	sub	sp, #8
 801479c:	af00      	add	r7, sp, #0
 801479e:	6078      	str	r0, [r7, #4]
 80147a0:	6878      	ldr	r0, [r7, #4]
 80147a2:	f000 fb9c 	bl	8014ede <_ZN9__gnu_cxx13new_allocatorIP4BodyEC1Ev>
 80147a6:	687b      	ldr	r3, [r7, #4]
 80147a8:	4618      	mov	r0, r3
 80147aa:	3708      	adds	r7, #8
 80147ac:	46bd      	mov	sp, r7
 80147ae:	bd80      	pop	{r7, pc}

080147b0 <_ZNSt12_Vector_baseIP4BodySaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
 80147b0:	b480      	push	{r7}
 80147b2:	b083      	sub	sp, #12
 80147b4:	af00      	add	r7, sp, #0
 80147b6:	6078      	str	r0, [r7, #4]
	: _M_start(), _M_finish(), _M_end_of_storage()
 80147b8:	687b      	ldr	r3, [r7, #4]
 80147ba:	2200      	movs	r2, #0
 80147bc:	601a      	str	r2, [r3, #0]
 80147be:	687b      	ldr	r3, [r7, #4]
 80147c0:	2200      	movs	r2, #0
 80147c2:	605a      	str	r2, [r3, #4]
 80147c4:	687b      	ldr	r3, [r7, #4]
 80147c6:	2200      	movs	r2, #0
 80147c8:	609a      	str	r2, [r3, #8]
	{ }
 80147ca:	687b      	ldr	r3, [r7, #4]
 80147cc:	4618      	mov	r0, r3
 80147ce:	370c      	adds	r7, #12
 80147d0:	46bd      	mov	sp, r7
 80147d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80147d6:	4770      	bx	lr

080147d8 <_ZNSt12_Vector_baseIP4BodySaIS1_EE13_M_deallocateEPS1_j>:
      _M_deallocate(pointer __p, size_t __n)
 80147d8:	b580      	push	{r7, lr}
 80147da:	b084      	sub	sp, #16
 80147dc:	af00      	add	r7, sp, #0
 80147de:	60f8      	str	r0, [r7, #12]
 80147e0:	60b9      	str	r1, [r7, #8]
 80147e2:	607a      	str	r2, [r7, #4]
	if (__p)
 80147e4:	68bb      	ldr	r3, [r7, #8]
 80147e6:	2b00      	cmp	r3, #0
 80147e8:	d005      	beq.n	80147f6 <_ZNSt12_Vector_baseIP4BodySaIS1_EE13_M_deallocateEPS1_j+0x1e>
	  _Tr::deallocate(_M_impl, __p, __n);
 80147ea:	68fb      	ldr	r3, [r7, #12]
 80147ec:	687a      	ldr	r2, [r7, #4]
 80147ee:	68b9      	ldr	r1, [r7, #8]
 80147f0:	4618      	mov	r0, r3
 80147f2:	f000 fb7f 	bl	8014ef4 <_ZNSt16allocator_traitsISaIP4BodyEE10deallocateERS2_PS1_j>
      }
 80147f6:	bf00      	nop
 80147f8:	3710      	adds	r7, #16
 80147fa:	46bd      	mov	sp, r7
 80147fc:	bd80      	pop	{r7, pc}

080147fe <_ZNSt12_Vector_baseIP4BodySaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 80147fe:	b480      	push	{r7}
 8014800:	b083      	sub	sp, #12
 8014802:	af00      	add	r7, sp, #0
 8014804:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 8014806:	687b      	ldr	r3, [r7, #4]
 8014808:	4618      	mov	r0, r3
 801480a:	370c      	adds	r7, #12
 801480c:	46bd      	mov	sp, r7
 801480e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014812:	4770      	bx	lr

08014814 <_ZSt7forwardIP13Function_callEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8014814:	b480      	push	{r7}
 8014816:	b083      	sub	sp, #12
 8014818:	af00      	add	r7, sp, #0
 801481a:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801481c:	687b      	ldr	r3, [r7, #4]
 801481e:	4618      	mov	r0, r3
 8014820:	370c      	adds	r7, #12
 8014822:	46bd      	mov	sp, r7
 8014824:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014828:	4770      	bx	lr

0801482a <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE7emplaceILj1EJS3_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>:
	emplace(_Args&&... __args)
 801482a:	b580      	push	{r7, lr}
 801482c:	b082      	sub	sp, #8
 801482e:	af00      	add	r7, sp, #0
 8014830:	6078      	str	r0, [r7, #4]
 8014832:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 8014834:	687b      	ldr	r3, [r7, #4]
 8014836:	4618      	mov	r0, r3
 8014838:	f000 fb6b 	bl	8014f12 <_ZNSt8__detail9__variant16_Variant_storageILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 801483c:	6838      	ldr	r0, [r7, #0]
 801483e:	f7ff ffe9 	bl	8014814 <_ZSt7forwardIP13Function_callEOT_RNSt16remove_referenceIS2_E4typeE>
 8014842:	4603      	mov	r3, r0
 8014844:	4619      	mov	r1, r3
 8014846:	6878      	ldr	r0, [r7, #4]
 8014848:	f000 fb70 	bl	8014f2c <_ZSt28__variant_construct_by_indexILj1ESt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEJS4_EEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 801484c:	6878      	ldr	r0, [r7, #4]
 801484e:	f7ee f9e7 	bl	8002c20 <_ZSt3getILj1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8014852:	4603      	mov	r3, r0
	}
 8014854:	4618      	mov	r0, r3
 8014856:	3708      	adds	r7, #8
 8014858:	46bd      	mov	sp, r7
 801485a:	bd80      	pop	{r7, pc}

0801485c <_ZSt7forwardIP10AssignmentEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801485c:	b480      	push	{r7}
 801485e:	b083      	sub	sp, #12
 8014860:	af00      	add	r7, sp, #0
 8014862:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8014864:	687b      	ldr	r3, [r7, #4]
 8014866:	4618      	mov	r0, r3
 8014868:	370c      	adds	r7, #12
 801486a:	46bd      	mov	sp, r7
 801486c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014870:	4770      	bx	lr

08014872 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE7emplaceILj0EJS1_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>:
	emplace(_Args&&... __args)
 8014872:	b580      	push	{r7, lr}
 8014874:	b082      	sub	sp, #8
 8014876:	af00      	add	r7, sp, #0
 8014878:	6078      	str	r0, [r7, #4]
 801487a:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 801487c:	687b      	ldr	r3, [r7, #4]
 801487e:	4618      	mov	r0, r3
 8014880:	f000 fb47 	bl	8014f12 <_ZNSt8__detail9__variant16_Variant_storageILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 8014884:	6838      	ldr	r0, [r7, #0]
 8014886:	f7ff ffe9 	bl	801485c <_ZSt7forwardIP10AssignmentEOT_RNSt16remove_referenceIS2_E4typeE>
 801488a:	4603      	mov	r3, r0
 801488c:	4619      	mov	r1, r3
 801488e:	6878      	ldr	r0, [r7, #4]
 8014890:	f000 fb6b 	bl	8014f6a <_ZSt28__variant_construct_by_indexILj0ESt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEJS2_EEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 8014894:	6878      	ldr	r0, [r7, #4]
 8014896:	f7ee f973 	bl	8002b80 <_ZSt3getILj0EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 801489a:	4603      	mov	r3, r0
	}
 801489c:	4618      	mov	r0, r3
 801489e:	3708      	adds	r7, #8
 80148a0:	46bd      	mov	sp, r7
 80148a2:	bd80      	pop	{r7, pc}

080148a4 <_ZSt7forwardIP11Method_callEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80148a4:	b480      	push	{r7}
 80148a6:	b083      	sub	sp, #12
 80148a8:	af00      	add	r7, sp, #0
 80148aa:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80148ac:	687b      	ldr	r3, [r7, #4]
 80148ae:	4618      	mov	r0, r3
 80148b0:	370c      	adds	r7, #12
 80148b2:	46bd      	mov	sp, r7
 80148b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80148b8:	4770      	bx	lr

080148ba <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE7emplaceILj2EJS5_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>:
	emplace(_Args&&... __args)
 80148ba:	b580      	push	{r7, lr}
 80148bc:	b082      	sub	sp, #8
 80148be:	af00      	add	r7, sp, #0
 80148c0:	6078      	str	r0, [r7, #4]
 80148c2:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 80148c4:	687b      	ldr	r3, [r7, #4]
 80148c6:	4618      	mov	r0, r3
 80148c8:	f000 fb23 	bl	8014f12 <_ZNSt8__detail9__variant16_Variant_storageILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 80148cc:	6838      	ldr	r0, [r7, #0]
 80148ce:	f7ff ffe9 	bl	80148a4 <_ZSt7forwardIP11Method_callEOT_RNSt16remove_referenceIS2_E4typeE>
 80148d2:	4603      	mov	r3, r0
 80148d4:	4619      	mov	r1, r3
 80148d6:	6878      	ldr	r0, [r7, #4]
 80148d8:	f000 fb66 	bl	8014fa8 <_ZSt28__variant_construct_by_indexILj2ESt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEJS6_EEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 80148dc:	6878      	ldr	r0, [r7, #4]
 80148de:	f7ee fa01 	bl	8002ce4 <_ZSt3getILj2EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 80148e2:	4603      	mov	r3, r0
	}
 80148e4:	4618      	mov	r0, r3
 80148e6:	3708      	adds	r7, #8
 80148e8:	46bd      	mov	sp, r7
 80148ea:	bd80      	pop	{r7, pc}

080148ec <_ZNSt8__detail9__variant14_UninitializedIP10AssignmentLb1EEC1IJEEESt16in_place_index_tILj0EEDpOT_>:
	_Uninitialized(in_place_index_t<0>, _Args&&... __args)
 80148ec:	b480      	push	{r7}
 80148ee:	b083      	sub	sp, #12
 80148f0:	af00      	add	r7, sp, #0
 80148f2:	6078      	str	r0, [r7, #4]
 80148f4:	7039      	strb	r1, [r7, #0]
	: _M_storage(std::forward<_Args>(__args)...)
 80148f6:	687b      	ldr	r3, [r7, #4]
 80148f8:	2200      	movs	r2, #0
 80148fa:	601a      	str	r2, [r3, #0]
	{ }
 80148fc:	687b      	ldr	r3, [r7, #4]
 80148fe:	4618      	mov	r0, r3
 8014900:	370c      	adds	r7, #12
 8014902:	46bd      	mov	sp, r7
 8014904:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014908:	4770      	bx	lr

0801490a <_ZNSt8__detail9__variant15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEC1IJEEESt16in_place_index_tILj0EEDpOT_>:
	constexpr _Variadic_union(in_place_index_t<0>, _Args&&... __args)
 801490a:	b580      	push	{r7, lr}
 801490c:	b082      	sub	sp, #8
 801490e:	af00      	add	r7, sp, #0
 8014910:	6078      	str	r0, [r7, #4]
 8014912:	7039      	strb	r1, [r7, #0]
	: _M_first(in_place_index<0>, std::forward<_Args>(__args)...)
 8014914:	687b      	ldr	r3, [r7, #4]
 8014916:	4611      	mov	r1, r2
 8014918:	4618      	mov	r0, r3
 801491a:	f7ff ffe7 	bl	80148ec <_ZNSt8__detail9__variant14_UninitializedIP10AssignmentLb1EEC1IJEEESt16in_place_index_tILj0EEDpOT_>
	{ }
 801491e:	687b      	ldr	r3, [r7, #4]
 8014920:	4618      	mov	r0, r3
 8014922:	3708      	adds	r7, #8
 8014924:	46bd      	mov	sp, r7
 8014926:	bd80      	pop	{r7, pc}

08014928 <_ZNSt8__detail9__variant16_Variant_storageILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variant_storage(in_place_index_t<_Np>, _Args&&... __args)
 8014928:	b580      	push	{r7, lr}
 801492a:	b082      	sub	sp, #8
 801492c:	af00      	add	r7, sp, #0
 801492e:	6078      	str	r0, [r7, #4]
 8014930:	7039      	strb	r1, [r7, #0]
	_M_index(_Np)
 8014932:	687b      	ldr	r3, [r7, #4]
 8014934:	4611      	mov	r1, r2
 8014936:	4618      	mov	r0, r3
 8014938:	f7ff ffe7 	bl	801490a <_ZNSt8__detail9__variant15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEC1IJEEESt16in_place_index_tILj0EEDpOT_>
 801493c:	687b      	ldr	r3, [r7, #4]
 801493e:	2200      	movs	r2, #0
 8014940:	711a      	strb	r2, [r3, #4]
	{ }
 8014942:	687b      	ldr	r3, [r7, #4]
 8014944:	4618      	mov	r0, r3
 8014946:	3708      	adds	r7, #8
 8014948:	46bd      	mov	sp, r7
 801494a:	bd80      	pop	{r7, pc}

0801494c <_ZSt7forwardIP15While_statementEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801494c:	b480      	push	{r7}
 801494e:	b083      	sub	sp, #12
 8014950:	af00      	add	r7, sp, #0
 8014952:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8014954:	687b      	ldr	r3, [r7, #4]
 8014956:	4618      	mov	r0, r3
 8014958:	370c      	adds	r7, #12
 801495a:	46bd      	mov	sp, r7
 801495c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014960:	4770      	bx	lr

08014962 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE7emplaceILj3EJS7_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>:
	emplace(_Args&&... __args)
 8014962:	b580      	push	{r7, lr}
 8014964:	b082      	sub	sp, #8
 8014966:	af00      	add	r7, sp, #0
 8014968:	6078      	str	r0, [r7, #4]
 801496a:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 801496c:	687b      	ldr	r3, [r7, #4]
 801496e:	4618      	mov	r0, r3
 8014970:	f000 facf 	bl	8014f12 <_ZNSt8__detail9__variant16_Variant_storageILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 8014974:	6838      	ldr	r0, [r7, #0]
 8014976:	f7ff ffe9 	bl	801494c <_ZSt7forwardIP15While_statementEOT_RNSt16remove_referenceIS2_E4typeE>
 801497a:	4603      	mov	r3, r0
 801497c:	4619      	mov	r1, r3
 801497e:	6878      	ldr	r0, [r7, #4]
 8014980:	f000 fb31 	bl	8014fe6 <_ZSt28__variant_construct_by_indexILj3ESt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEJS8_EEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 8014984:	6878      	ldr	r0, [r7, #4]
 8014986:	f7ee fa21 	bl	8002dcc <_ZSt3getILj3EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 801498a:	4603      	mov	r3, r0
	}
 801498c:	4618      	mov	r0, r3
 801498e:	3708      	adds	r7, #8
 8014990:	46bd      	mov	sp, r7
 8014992:	bd80      	pop	{r7, pc}

08014994 <_ZSt7forwardIP12If_statementEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8014994:	b480      	push	{r7}
 8014996:	b083      	sub	sp, #12
 8014998:	af00      	add	r7, sp, #0
 801499a:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801499c:	687b      	ldr	r3, [r7, #4]
 801499e:	4618      	mov	r0, r3
 80149a0:	370c      	adds	r7, #12
 80149a2:	46bd      	mov	sp, r7
 80149a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80149a8:	4770      	bx	lr

080149aa <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE7emplaceILj4EJS9_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>:
	emplace(_Args&&... __args)
 80149aa:	b580      	push	{r7, lr}
 80149ac:	b082      	sub	sp, #8
 80149ae:	af00      	add	r7, sp, #0
 80149b0:	6078      	str	r0, [r7, #4]
 80149b2:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 80149b4:	687b      	ldr	r3, [r7, #4]
 80149b6:	4618      	mov	r0, r3
 80149b8:	f000 faab 	bl	8014f12 <_ZNSt8__detail9__variant16_Variant_storageILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 80149bc:	6838      	ldr	r0, [r7, #0]
 80149be:	f7ff ffe9 	bl	8014994 <_ZSt7forwardIP12If_statementEOT_RNSt16remove_referenceIS2_E4typeE>
 80149c2:	4603      	mov	r3, r0
 80149c4:	4619      	mov	r1, r3
 80149c6:	6878      	ldr	r0, [r7, #4]
 80149c8:	f000 fb2c 	bl	8015024 <_ZSt28__variant_construct_by_indexILj4ESt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEJSA_EEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 80149cc:	6878      	ldr	r0, [r7, #4]
 80149ce:	f7ee fa83 	bl	8002ed8 <_ZSt3getILj4EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 80149d2:	4603      	mov	r3, r0
	}
 80149d4:	4618      	mov	r0, r3
 80149d6:	3708      	adds	r7, #8
 80149d8:	46bd      	mov	sp, r7
 80149da:	bd80      	pop	{r7, pc}

080149dc <_ZNSaIP9StatementEC1Ev>:
 80149dc:	b580      	push	{r7, lr}
 80149de:	b082      	sub	sp, #8
 80149e0:	af00      	add	r7, sp, #0
 80149e2:	6078      	str	r0, [r7, #4]
 80149e4:	6878      	ldr	r0, [r7, #4]
 80149e6:	f000 fb3c 	bl	8015062 <_ZN9__gnu_cxx13new_allocatorIP9StatementEC1Ev>
 80149ea:	687b      	ldr	r3, [r7, #4]
 80149ec:	4618      	mov	r0, r3
 80149ee:	3708      	adds	r7, #8
 80149f0:	46bd      	mov	sp, r7
 80149f2:	bd80      	pop	{r7, pc}

080149f4 <_ZNSt12_Vector_baseIP9StatementSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
 80149f4:	b480      	push	{r7}
 80149f6:	b083      	sub	sp, #12
 80149f8:	af00      	add	r7, sp, #0
 80149fa:	6078      	str	r0, [r7, #4]
	: _M_start(), _M_finish(), _M_end_of_storage()
 80149fc:	687b      	ldr	r3, [r7, #4]
 80149fe:	2200      	movs	r2, #0
 8014a00:	601a      	str	r2, [r3, #0]
 8014a02:	687b      	ldr	r3, [r7, #4]
 8014a04:	2200      	movs	r2, #0
 8014a06:	605a      	str	r2, [r3, #4]
 8014a08:	687b      	ldr	r3, [r7, #4]
 8014a0a:	2200      	movs	r2, #0
 8014a0c:	609a      	str	r2, [r3, #8]
	{ }
 8014a0e:	687b      	ldr	r3, [r7, #4]
 8014a10:	4618      	mov	r0, r3
 8014a12:	370c      	adds	r7, #12
 8014a14:	46bd      	mov	sp, r7
 8014a16:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014a1a:	4770      	bx	lr

08014a1c <_ZNSt12_Vector_baseIP9StatementSaIS1_EE13_M_deallocateEPS1_j>:
      _M_deallocate(pointer __p, size_t __n)
 8014a1c:	b580      	push	{r7, lr}
 8014a1e:	b084      	sub	sp, #16
 8014a20:	af00      	add	r7, sp, #0
 8014a22:	60f8      	str	r0, [r7, #12]
 8014a24:	60b9      	str	r1, [r7, #8]
 8014a26:	607a      	str	r2, [r7, #4]
	if (__p)
 8014a28:	68bb      	ldr	r3, [r7, #8]
 8014a2a:	2b00      	cmp	r3, #0
 8014a2c:	d005      	beq.n	8014a3a <_ZNSt12_Vector_baseIP9StatementSaIS1_EE13_M_deallocateEPS1_j+0x1e>
	  _Tr::deallocate(_M_impl, __p, __n);
 8014a2e:	68fb      	ldr	r3, [r7, #12]
 8014a30:	687a      	ldr	r2, [r7, #4]
 8014a32:	68b9      	ldr	r1, [r7, #8]
 8014a34:	4618      	mov	r0, r3
 8014a36:	f000 fb1f 	bl	8015078 <_ZNSt16allocator_traitsISaIP9StatementEE10deallocateERS2_PS1_j>
      }
 8014a3a:	bf00      	nop
 8014a3c:	3710      	adds	r7, #16
 8014a3e:	46bd      	mov	sp, r7
 8014a40:	bd80      	pop	{r7, pc}

08014a42 <_ZNSt12_Vector_baseIP9StatementSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 8014a42:	b480      	push	{r7}
 8014a44:	b083      	sub	sp, #12
 8014a46:	af00      	add	r7, sp, #0
 8014a48:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 8014a4a:	687b      	ldr	r3, [r7, #4]
 8014a4c:	4618      	mov	r0, r3
 8014a4e:	370c      	adds	r7, #12
 8014a50:	46bd      	mov	sp, r7
 8014a52:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014a56:	4770      	bx	lr

08014a58 <_ZSt4moveIRP9StatementEONSt16remove_referenceIT_E4typeEOS4_>:
    move(_Tp&& __t) noexcept
 8014a58:	b480      	push	{r7}
 8014a5a:	b083      	sub	sp, #12
 8014a5c:	af00      	add	r7, sp, #0
 8014a5e:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 8014a60:	687b      	ldr	r3, [r7, #4]
 8014a62:	4618      	mov	r0, r3
 8014a64:	370c      	adds	r7, #12
 8014a66:	46bd      	mov	sp, r7
 8014a68:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014a6c:	4770      	bx	lr

08014a6e <_ZNSt6vectorIP9StatementSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>:
      vector<_Tp, _Alloc>::
 8014a6e:	b5b0      	push	{r4, r5, r7, lr}
 8014a70:	b082      	sub	sp, #8
 8014a72:	af00      	add	r7, sp, #0
 8014a74:	6078      	str	r0, [r7, #4]
 8014a76:	6039      	str	r1, [r7, #0]
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 8014a78:	687b      	ldr	r3, [r7, #4]
 8014a7a:	685a      	ldr	r2, [r3, #4]
 8014a7c:	687b      	ldr	r3, [r7, #4]
 8014a7e:	689b      	ldr	r3, [r3, #8]
 8014a80:	429a      	cmp	r2, r3
 8014a82:	d011      	beq.n	8014aa8 <_ZNSt6vectorIP9StatementSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x3a>
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 8014a84:	687c      	ldr	r4, [r7, #4]
 8014a86:	687b      	ldr	r3, [r7, #4]
 8014a88:	685d      	ldr	r5, [r3, #4]
 8014a8a:	6838      	ldr	r0, [r7, #0]
 8014a8c:	f000 fb03 	bl	8015096 <_ZSt7forwardIP9StatementEOT_RNSt16remove_referenceIS2_E4typeE>
 8014a90:	4603      	mov	r3, r0
 8014a92:	461a      	mov	r2, r3
 8014a94:	4629      	mov	r1, r5
 8014a96:	4620      	mov	r0, r4
 8014a98:	f000 fb08 	bl	80150ac <_ZNSt16allocator_traitsISaIP9StatementEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	    ++this->_M_impl._M_finish;
 8014a9c:	687b      	ldr	r3, [r7, #4]
 8014a9e:	685b      	ldr	r3, [r3, #4]
 8014aa0:	1d1a      	adds	r2, r3, #4
 8014aa2:	687b      	ldr	r3, [r7, #4]
 8014aa4:	605a      	str	r2, [r3, #4]
 8014aa6:	e00c      	b.n	8014ac2 <_ZNSt6vectorIP9StatementSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x54>
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
 8014aa8:	6878      	ldr	r0, [r7, #4]
 8014aaa:	f7ed f966 	bl	8001d7a <_ZNSt6vectorIP9StatementSaIS1_EE3endEv>
 8014aae:	4604      	mov	r4, r0
 8014ab0:	6838      	ldr	r0, [r7, #0]
 8014ab2:	f000 faf0 	bl	8015096 <_ZSt7forwardIP9StatementEOT_RNSt16remove_referenceIS2_E4typeE>
 8014ab6:	4603      	mov	r3, r0
 8014ab8:	461a      	mov	r2, r3
 8014aba:	4621      	mov	r1, r4
 8014abc:	6878      	ldr	r0, [r7, #4]
 8014abe:	f000 fb09 	bl	80150d4 <_ZNSt6vectorIP9StatementSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
	return back();
 8014ac2:	6878      	ldr	r0, [r7, #4]
 8014ac4:	f000 fb82 	bl	80151cc <_ZNSt6vectorIP9StatementSaIS1_EE4backEv>
 8014ac8:	4603      	mov	r3, r0
      }
 8014aca:	4618      	mov	r0, r3
 8014acc:	3708      	adds	r7, #8
 8014ace:	46bd      	mov	sp, r7
 8014ad0:	bdb0      	pop	{r4, r5, r7, pc}

08014ad2 <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8014ad2:	b480      	push	{r7}
 8014ad4:	b083      	sub	sp, #12
 8014ad6:	af00      	add	r7, sp, #0
 8014ad8:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8014ada:	687b      	ldr	r3, [r7, #4]
 8014adc:	4618      	mov	r0, r3
 8014ade:	370c      	adds	r7, #12
 8014ae0:	46bd      	mov	sp, r7
 8014ae2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014ae6:	4770      	bx	lr

08014ae8 <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_JRS8_St17integral_constantIjLj0EEEENSt15__invoke_resultISB_JDpT0_EE4typeESC_DpOSJ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8014ae8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014aec:	b084      	sub	sp, #16
 8014aee:	af00      	add	r7, sp, #0
 8014af0:	60f8      	str	r0, [r7, #12]
 8014af2:	60b9      	str	r1, [r7, #8]
 8014af4:	607a      	str	r2, [r7, #4]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8014af6:	68f8      	ldr	r0, [r7, #12]
 8014af8:	f000 f879 	bl	8014bee <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 8014afc:	4604      	mov	r4, r0
 8014afe:	68b8      	ldr	r0, [r7, #8]
 8014b00:	f7f1 f857 	bl	8005bb2 <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 8014b04:	4605      	mov	r5, r0
 8014b06:	6878      	ldr	r0, [r7, #4]
 8014b08:	f7ef f9ab 	bl	8003e62 <_ZSt7forwardISt17integral_constantIjLj0EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8014b0c:	4603      	mov	r3, r0
 8014b0e:	462a      	mov	r2, r5
 8014b10:	4621      	mov	r1, r4
 8014b12:	4630      	mov	r0, r6
 8014b14:	f000 fb75 	bl	8015202 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSA_EUlOT_T0_E_JRS9_St17integral_constantIjLj0EEEESC_St14__invoke_otherOSE_DpOT1_>
					std::forward<_Args>(__args)...);
 8014b18:	4643      	mov	r3, r8
    }
 8014b1a:	4618      	mov	r0, r3
 8014b1c:	3710      	adds	r7, #16
 8014b1e:	46bd      	mov	sp, r7
 8014b20:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08014b24 <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_JRiSt17integral_constantIjLj1EEEENSt15__invoke_resultISB_JDpT0_EE4typeESC_DpOSJ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8014b24:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014b28:	b084      	sub	sp, #16
 8014b2a:	af00      	add	r7, sp, #0
 8014b2c:	60f8      	str	r0, [r7, #12]
 8014b2e:	60b9      	str	r1, [r7, #8]
 8014b30:	607a      	str	r2, [r7, #4]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8014b32:	68f8      	ldr	r0, [r7, #12]
 8014b34:	f000 f85b 	bl	8014bee <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 8014b38:	4604      	mov	r4, r0
 8014b3a:	68b8      	ldr	r0, [r7, #8]
 8014b3c:	f7f0 ffc7 	bl	8005ace <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 8014b40:	4605      	mov	r5, r0
 8014b42:	6878      	ldr	r0, [r7, #4]
 8014b44:	f7ef f9c1 	bl	8003eca <_ZSt7forwardISt17integral_constantIjLj1EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8014b48:	4603      	mov	r3, r0
 8014b4a:	462a      	mov	r2, r5
 8014b4c:	4621      	mov	r1, r4
 8014b4e:	4630      	mov	r0, r6
 8014b50:	f000 fb75 	bl	801523e <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSA_EUlOT_T0_E_JRiSt17integral_constantIjLj1EEEESC_St14__invoke_otherOSE_DpOT1_>
					std::forward<_Args>(__args)...);
 8014b54:	4643      	mov	r3, r8
    }
 8014b56:	4618      	mov	r0, r3
 8014b58:	3710      	adds	r7, #16
 8014b5a:	46bd      	mov	sp, r7
 8014b5c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08014b60 <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_JRfSt17integral_constantIjLj2EEEENSt15__invoke_resultISB_JDpT0_EE4typeESC_DpOSJ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8014b60:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014b64:	b084      	sub	sp, #16
 8014b66:	af00      	add	r7, sp, #0
 8014b68:	60f8      	str	r0, [r7, #12]
 8014b6a:	60b9      	str	r1, [r7, #8]
 8014b6c:	607a      	str	r2, [r7, #4]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8014b6e:	68f8      	ldr	r0, [r7, #12]
 8014b70:	f000 f83d 	bl	8014bee <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 8014b74:	4604      	mov	r4, r0
 8014b76:	68b8      	ldr	r0, [r7, #8]
 8014b78:	f7f0 ffcb 	bl	8005b12 <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 8014b7c:	4605      	mov	r5, r0
 8014b7e:	6878      	ldr	r0, [r7, #4]
 8014b80:	f7ef f9d7 	bl	8003f32 <_ZSt7forwardISt17integral_constantIjLj2EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8014b84:	4603      	mov	r3, r0
 8014b86:	462a      	mov	r2, r5
 8014b88:	4621      	mov	r1, r4
 8014b8a:	4630      	mov	r0, r6
 8014b8c:	f000 fb75 	bl	801527a <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSA_EUlOT_T0_E_JRfSt17integral_constantIjLj2EEEESC_St14__invoke_otherOSE_DpOT1_>
					std::forward<_Args>(__args)...);
 8014b90:	4643      	mov	r3, r8
    }
 8014b92:	4618      	mov	r0, r3
 8014b94:	3710      	adds	r7, #16
 8014b96:	46bd      	mov	sp, r7
 8014b98:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08014b9c <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_JRbSt17integral_constantIjLj3EEEENSt15__invoke_resultISB_JDpT0_EE4typeESC_DpOSJ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8014b9c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014ba0:	b084      	sub	sp, #16
 8014ba2:	af00      	add	r7, sp, #0
 8014ba4:	60f8      	str	r0, [r7, #12]
 8014ba6:	60b9      	str	r1, [r7, #8]
 8014ba8:	607a      	str	r2, [r7, #4]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8014baa:	68f8      	ldr	r0, [r7, #12]
 8014bac:	f000 f81f 	bl	8014bee <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 8014bb0:	4604      	mov	r4, r0
 8014bb2:	68b8      	ldr	r0, [r7, #8]
 8014bb4:	f7f0 ffcf 	bl	8005b56 <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
 8014bb8:	4605      	mov	r5, r0
 8014bba:	6878      	ldr	r0, [r7, #4]
 8014bbc:	f7ef f9f9 	bl	8003fb2 <_ZSt7forwardISt17integral_constantIjLj3EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8014bc0:	4603      	mov	r3, r0
 8014bc2:	462a      	mov	r2, r5
 8014bc4:	4621      	mov	r1, r4
 8014bc6:	4630      	mov	r0, r6
 8014bc8:	f000 fb75 	bl	80152b6 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSA_EUlOT_T0_E_JRbSt17integral_constantIjLj3EEEESC_St14__invoke_otherOSE_DpOT1_>
					std::forward<_Args>(__args)...);
 8014bcc:	4643      	mov	r3, r8
    }
 8014bce:	4618      	mov	r0, r3
 8014bd0:	3710      	adds	r7, #16
 8014bd2:	46bd      	mov	sp, r7
 8014bd4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08014bd8 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSA_EUlOT_T0_E_RSt7variantIJS9_ifbEEEJEE9_M_accessEv>:
      _M_access() const
 8014bd8:	b480      	push	{r7}
 8014bda:	b083      	sub	sp, #12
 8014bdc:	af00      	add	r7, sp, #0
 8014bde:	6078      	str	r0, [r7, #4]
      { return _M_data; }
 8014be0:	687b      	ldr	r3, [r7, #4]
 8014be2:	4618      	mov	r0, r3
 8014be4:	370c      	adds	r7, #12
 8014be6:	46bd      	mov	sp, r7
 8014be8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014bec:	4770      	bx	lr

08014bee <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8014bee:	b480      	push	{r7}
 8014bf0:	b083      	sub	sp, #12
 8014bf2:	af00      	add	r7, sp, #0
 8014bf4:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8014bf6:	687b      	ldr	r3, [r7, #4]
 8014bf8:	4618      	mov	r0, r3
 8014bfa:	370c      	adds	r7, #12
 8014bfc:	46bd      	mov	sp, r7
 8014bfe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014c02:	4770      	bx	lr

08014c04 <_ZSt7forwardIP10ExpressionEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8014c04:	b480      	push	{r7}
 8014c06:	b083      	sub	sp, #12
 8014c08:	af00      	add	r7, sp, #0
 8014c0a:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8014c0c:	687b      	ldr	r3, [r7, #4]
 8014c0e:	4618      	mov	r0, r3
 8014c10:	370c      	adds	r7, #12
 8014c12:	46bd      	mov	sp, r7
 8014c14:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014c18:	4770      	bx	lr

08014c1a <_ZNSt16allocator_traitsISaIP10ExpressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 8014c1a:	b580      	push	{r7, lr}
 8014c1c:	b084      	sub	sp, #16
 8014c1e:	af00      	add	r7, sp, #0
 8014c20:	60f8      	str	r0, [r7, #12]
 8014c22:	60b9      	str	r1, [r7, #8]
 8014c24:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 8014c26:	6878      	ldr	r0, [r7, #4]
 8014c28:	f7ff ffec 	bl	8014c04 <_ZSt7forwardIP10ExpressionEOT_RNSt16remove_referenceIS2_E4typeE>
 8014c2c:	4603      	mov	r3, r0
 8014c2e:	461a      	mov	r2, r3
 8014c30:	68b9      	ldr	r1, [r7, #8]
 8014c32:	68f8      	ldr	r0, [r7, #12]
 8014c34:	f000 fb5d 	bl	80152f2 <_ZN9__gnu_cxx13new_allocatorIP10ExpressionE9constructIS2_JS2_EEEvPT_DpOT0_>
 8014c38:	bf00      	nop
 8014c3a:	3710      	adds	r7, #16
 8014c3c:	46bd      	mov	sp, r7
 8014c3e:	bd80      	pop	{r7, pc}

08014c40 <_ZNSt6vectorIP10ExpressionSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 8014c40:	b580      	push	{r7, lr}
 8014c42:	b084      	sub	sp, #16
 8014c44:	af00      	add	r7, sp, #0
 8014c46:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_finish); }
 8014c48:	687b      	ldr	r3, [r7, #4]
 8014c4a:	1d1a      	adds	r2, r3, #4
 8014c4c:	f107 030c 	add.w	r3, r7, #12
 8014c50:	4611      	mov	r1, r2
 8014c52:	4618      	mov	r0, r3
 8014c54:	f000 fb63 	bl	801531e <_ZN9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 8014c58:	68fb      	ldr	r3, [r7, #12]
 8014c5a:	4618      	mov	r0, r3
 8014c5c:	3710      	adds	r7, #16
 8014c5e:	46bd      	mov	sp, r7
 8014c60:	bd80      	pop	{r7, pc}
	...

08014c64 <_ZNSt6vectorIP10ExpressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:

#if __cplusplus >= 201103L
  template<typename _Tp, typename _Alloc>
    template<typename... _Args>
      void
      vector<_Tp, _Alloc>::
 8014c64:	b5b0      	push	{r4, r5, r7, lr}
 8014c66:	b08c      	sub	sp, #48	; 0x30
 8014c68:	af00      	add	r7, sp, #0
 8014c6a:	60f8      	str	r0, [r7, #12]
 8014c6c:	60b9      	str	r1, [r7, #8]
 8014c6e:	607a      	str	r2, [r7, #4]
    void
    vector<_Tp, _Alloc>::
    _M_realloc_insert(iterator __position, const _Tp& __x)
#endif
    {
      const size_type __len =
 8014c70:	4a39      	ldr	r2, [pc, #228]	; (8014d58 <_ZNSt6vectorIP10ExpressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xf4>)
 8014c72:	2101      	movs	r1, #1
 8014c74:	68f8      	ldr	r0, [r7, #12]
 8014c76:	f000 fb62 	bl	801533e <_ZNKSt6vectorIP10ExpressionSaIS1_EE12_M_check_lenEjPKc>
 8014c7a:	62f8      	str	r0, [r7, #44]	; 0x2c
	_M_check_len(size_type(1), "vector::_M_realloc_insert");
      pointer __old_start = this->_M_impl._M_start;
 8014c7c:	68fb      	ldr	r3, [r7, #12]
 8014c7e:	681b      	ldr	r3, [r3, #0]
 8014c80:	62bb      	str	r3, [r7, #40]	; 0x28
      pointer __old_finish = this->_M_impl._M_finish;
 8014c82:	68fb      	ldr	r3, [r7, #12]
 8014c84:	685b      	ldr	r3, [r3, #4]
 8014c86:	627b      	str	r3, [r7, #36]	; 0x24
      const size_type __elems_before = __position - begin();
 8014c88:	68f8      	ldr	r0, [r7, #12]
 8014c8a:	f000 fb9f 	bl	80153cc <_ZNSt6vectorIP10ExpressionSaIS1_EE5beginEv>
 8014c8e:	4603      	mov	r3, r0
 8014c90:	617b      	str	r3, [r7, #20]
 8014c92:	f107 0214 	add.w	r2, r7, #20
 8014c96:	f107 0308 	add.w	r3, r7, #8
 8014c9a:	4611      	mov	r1, r2
 8014c9c:	4618      	mov	r0, r3
 8014c9e:	f000 fba5 	bl	80153ec <_ZN9__gnu_cxxmiIPP10ExpressionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
 8014ca2:	4603      	mov	r3, r0
 8014ca4:	623b      	str	r3, [r7, #32]
      pointer __new_start(this->_M_allocate(__len));
 8014ca6:	68fb      	ldr	r3, [r7, #12]
 8014ca8:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8014caa:	4618      	mov	r0, r3
 8014cac:	f7f9 fd33 	bl	800e716 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE11_M_allocateEj>
 8014cb0:	61f8      	str	r0, [r7, #28]
      pointer __new_finish(__new_start);
 8014cb2:	69fb      	ldr	r3, [r7, #28]
 8014cb4:	61bb      	str	r3, [r7, #24]
	  // The order of the three operations is dictated by the C++11
	  // case, where the moves could alter a new element belonging
	  // to the existing vector.  This is an issue only for callers
	  // taking the element by lvalue ref (see last bullet of C++11
	  // [res.on.arguments]).
	  _Alloc_traits::construct(this->_M_impl,
 8014cb6:	68fc      	ldr	r4, [r7, #12]
				   __new_start + __elems_before,
 8014cb8:	6a3b      	ldr	r3, [r7, #32]
 8014cba:	009b      	lsls	r3, r3, #2
	  _Alloc_traits::construct(this->_M_impl,
 8014cbc:	69fa      	ldr	r2, [r7, #28]
 8014cbe:	18d5      	adds	r5, r2, r3
 8014cc0:	6878      	ldr	r0, [r7, #4]
 8014cc2:	f7ff ff9f 	bl	8014c04 <_ZSt7forwardIP10ExpressionEOT_RNSt16remove_referenceIS2_E4typeE>
 8014cc6:	4603      	mov	r3, r0
 8014cc8:	461a      	mov	r2, r3
 8014cca:	4629      	mov	r1, r5
 8014ccc:	4620      	mov	r0, r4
 8014cce:	f7ff ffa4 	bl	8014c1a <_ZNSt16allocator_traitsISaIP10ExpressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
#if __cplusplus >= 201103L
				   std::forward<_Args>(__args)...);
#else
				   __x);
#endif
	  __new_finish = pointer();
 8014cd2:	2300      	movs	r3, #0
 8014cd4:	61bb      	str	r3, [r7, #24]

#if __cplusplus >= 201103L
	  if _GLIBCXX17_CONSTEXPR (_S_use_relocate())
	    {
	      __new_finish = _S_relocate(__old_start, __position.base(),
 8014cd6:	f107 0308 	add.w	r3, r7, #8
 8014cda:	4618      	mov	r0, r3
 8014cdc:	f000 fbaf 	bl	801543e <_ZNK9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEE4baseEv>
 8014ce0:	4603      	mov	r3, r0
 8014ce2:	681c      	ldr	r4, [r3, #0]
					 __new_start, _M_get_Tp_allocator());
 8014ce4:	68fb      	ldr	r3, [r7, #12]
 8014ce6:	4618      	mov	r0, r3
 8014ce8:	f7f9 fb51 	bl	800e38e <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE19_M_get_Tp_allocatorEv>
 8014cec:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__old_start, __position.base(),
 8014cee:	69fa      	ldr	r2, [r7, #28]
 8014cf0:	4621      	mov	r1, r4
 8014cf2:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8014cf4:	f000 fb8f 	bl	8015416 <_ZNSt6vectorIP10ExpressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 8014cf8:	61b8      	str	r0, [r7, #24]

	      ++__new_finish;
 8014cfa:	69bb      	ldr	r3, [r7, #24]
 8014cfc:	3304      	adds	r3, #4
 8014cfe:	61bb      	str	r3, [r7, #24]

	      __new_finish = _S_relocate(__position.base(), __old_finish,
 8014d00:	f107 0308 	add.w	r3, r7, #8
 8014d04:	4618      	mov	r0, r3
 8014d06:	f000 fb9a 	bl	801543e <_ZNK9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEE4baseEv>
 8014d0a:	4603      	mov	r3, r0
 8014d0c:	681c      	ldr	r4, [r3, #0]
					 __new_finish, _M_get_Tp_allocator());
 8014d0e:	68fb      	ldr	r3, [r7, #12]
 8014d10:	4618      	mov	r0, r3
 8014d12:	f7f9 fb3c 	bl	800e38e <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE19_M_get_Tp_allocatorEv>
 8014d16:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 8014d18:	69ba      	ldr	r2, [r7, #24]
 8014d1a:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8014d1c:	4620      	mov	r0, r4
 8014d1e:	f000 fb7a 	bl	8015416 <_ZNSt6vectorIP10ExpressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 8014d22:	61b8      	str	r0, [r7, #24]
#if __cplusplus >= 201103L
      if _GLIBCXX17_CONSTEXPR (!_S_use_relocate())
#endif
	std::_Destroy(__old_start, __old_finish, _M_get_Tp_allocator());
      _GLIBCXX_ASAN_ANNOTATE_REINIT;
      _M_deallocate(__old_start,
 8014d24:	68f8      	ldr	r0, [r7, #12]
		    this->_M_impl._M_end_of_storage - __old_start);
 8014d26:	68fb      	ldr	r3, [r7, #12]
 8014d28:	689a      	ldr	r2, [r3, #8]
 8014d2a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8014d2c:	1ad3      	subs	r3, r2, r3
 8014d2e:	109b      	asrs	r3, r3, #2
      _M_deallocate(__old_start,
 8014d30:	461a      	mov	r2, r3
 8014d32:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8014d34:	f7f9 fc46 	bl	800e5c4 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE13_M_deallocateEPS1_j>
      this->_M_impl._M_start = __new_start;
 8014d38:	68fb      	ldr	r3, [r7, #12]
 8014d3a:	69fa      	ldr	r2, [r7, #28]
 8014d3c:	601a      	str	r2, [r3, #0]
      this->_M_impl._M_finish = __new_finish;
 8014d3e:	68fb      	ldr	r3, [r7, #12]
 8014d40:	69ba      	ldr	r2, [r7, #24]
 8014d42:	605a      	str	r2, [r3, #4]
      this->_M_impl._M_end_of_storage = __new_start + __len;
 8014d44:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8014d46:	009b      	lsls	r3, r3, #2
 8014d48:	69fa      	ldr	r2, [r7, #28]
 8014d4a:	441a      	add	r2, r3
 8014d4c:	68fb      	ldr	r3, [r7, #12]
 8014d4e:	609a      	str	r2, [r3, #8]
    }
 8014d50:	bf00      	nop
 8014d52:	3730      	adds	r7, #48	; 0x30
 8014d54:	46bd      	mov	sp, r7
 8014d56:	bdb0      	pop	{r4, r5, r7, pc}
 8014d58:	08027ae4 	.word	0x08027ae4

08014d5c <_ZNSt6vectorIP10ExpressionSaIS1_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
 8014d5c:	b580      	push	{r7, lr}
 8014d5e:	b084      	sub	sp, #16
 8014d60:	af00      	add	r7, sp, #0
 8014d62:	6078      	str	r0, [r7, #4]
	return *(end() - 1);
 8014d64:	6878      	ldr	r0, [r7, #4]
 8014d66:	f7ff ff6b 	bl	8014c40 <_ZNSt6vectorIP10ExpressionSaIS1_EE3endEv>
 8014d6a:	4603      	mov	r3, r0
 8014d6c:	60fb      	str	r3, [r7, #12]
 8014d6e:	f107 030c 	add.w	r3, r7, #12
 8014d72:	2101      	movs	r1, #1
 8014d74:	4618      	mov	r0, r3
 8014d76:	f000 fb6d 	bl	8015454 <_ZNK9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEEmiEi>
 8014d7a:	4603      	mov	r3, r0
 8014d7c:	60bb      	str	r3, [r7, #8]
 8014d7e:	f107 0308 	add.w	r3, r7, #8
 8014d82:	4618      	mov	r0, r3
 8014d84:	f000 fb7f 	bl	8015486 <_ZNK9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEEdeEv>
 8014d88:	4603      	mov	r3, r0
      }
 8014d8a:	4618      	mov	r0, r3
 8014d8c:	3710      	adds	r7, #16
 8014d8e:	46bd      	mov	sp, r7
 8014d90:	bd80      	pop	{r7, pc}

08014d92 <_ZSt7forwardIP4BodyEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8014d92:	b480      	push	{r7}
 8014d94:	b083      	sub	sp, #12
 8014d96:	af00      	add	r7, sp, #0
 8014d98:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8014d9a:	687b      	ldr	r3, [r7, #4]
 8014d9c:	4618      	mov	r0, r3
 8014d9e:	370c      	adds	r7, #12
 8014da0:	46bd      	mov	sp, r7
 8014da2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014da6:	4770      	bx	lr

08014da8 <_ZNSt16allocator_traitsISaIP4BodyEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 8014da8:	b580      	push	{r7, lr}
 8014daa:	b084      	sub	sp, #16
 8014dac:	af00      	add	r7, sp, #0
 8014dae:	60f8      	str	r0, [r7, #12]
 8014db0:	60b9      	str	r1, [r7, #8]
 8014db2:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 8014db4:	6878      	ldr	r0, [r7, #4]
 8014db6:	f7ff ffec 	bl	8014d92 <_ZSt7forwardIP4BodyEOT_RNSt16remove_referenceIS2_E4typeE>
 8014dba:	4603      	mov	r3, r0
 8014dbc:	461a      	mov	r2, r3
 8014dbe:	68b9      	ldr	r1, [r7, #8]
 8014dc0:	68f8      	ldr	r0, [r7, #12]
 8014dc2:	f000 fb6c 	bl	801549e <_ZN9__gnu_cxx13new_allocatorIP4BodyE9constructIS2_JS2_EEEvPT_DpOT0_>
 8014dc6:	bf00      	nop
 8014dc8:	3710      	adds	r7, #16
 8014dca:	46bd      	mov	sp, r7
 8014dcc:	bd80      	pop	{r7, pc}
	...

08014dd0 <_ZNSt6vectorIP4BodySaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
      vector<_Tp, _Alloc>::
 8014dd0:	b5b0      	push	{r4, r5, r7, lr}
 8014dd2:	b08c      	sub	sp, #48	; 0x30
 8014dd4:	af00      	add	r7, sp, #0
 8014dd6:	60f8      	str	r0, [r7, #12]
 8014dd8:	60b9      	str	r1, [r7, #8]
 8014dda:	607a      	str	r2, [r7, #4]
      const size_type __len =
 8014ddc:	4a39      	ldr	r2, [pc, #228]	; (8014ec4 <_ZNSt6vectorIP4BodySaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xf4>)
 8014dde:	2101      	movs	r1, #1
 8014de0:	68f8      	ldr	r0, [r7, #12]
 8014de2:	f000 fb72 	bl	80154ca <_ZNKSt6vectorIP4BodySaIS1_EE12_M_check_lenEjPKc>
 8014de6:	62f8      	str	r0, [r7, #44]	; 0x2c
      pointer __old_start = this->_M_impl._M_start;
 8014de8:	68fb      	ldr	r3, [r7, #12]
 8014dea:	681b      	ldr	r3, [r3, #0]
 8014dec:	62bb      	str	r3, [r7, #40]	; 0x28
      pointer __old_finish = this->_M_impl._M_finish;
 8014dee:	68fb      	ldr	r3, [r7, #12]
 8014df0:	685b      	ldr	r3, [r3, #4]
 8014df2:	627b      	str	r3, [r7, #36]	; 0x24
      const size_type __elems_before = __position - begin();
 8014df4:	68f8      	ldr	r0, [r7, #12]
 8014df6:	f000 fbaf 	bl	8015558 <_ZNSt6vectorIP4BodySaIS1_EE5beginEv>
 8014dfa:	4603      	mov	r3, r0
 8014dfc:	617b      	str	r3, [r7, #20]
 8014dfe:	f107 0214 	add.w	r2, r7, #20
 8014e02:	f107 0308 	add.w	r3, r7, #8
 8014e06:	4611      	mov	r1, r2
 8014e08:	4618      	mov	r0, r3
 8014e0a:	f000 fbb5 	bl	8015578 <_ZN9__gnu_cxxmiIPP4BodySt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
 8014e0e:	4603      	mov	r3, r0
 8014e10:	623b      	str	r3, [r7, #32]
      pointer __new_start(this->_M_allocate(__len));
 8014e12:	68fb      	ldr	r3, [r7, #12]
 8014e14:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8014e16:	4618      	mov	r0, r3
 8014e18:	f000 fbc3 	bl	80155a2 <_ZNSt12_Vector_baseIP4BodySaIS1_EE11_M_allocateEj>
 8014e1c:	61f8      	str	r0, [r7, #28]
      pointer __new_finish(__new_start);
 8014e1e:	69fb      	ldr	r3, [r7, #28]
 8014e20:	61bb      	str	r3, [r7, #24]
	  _Alloc_traits::construct(this->_M_impl,
 8014e22:	68fc      	ldr	r4, [r7, #12]
				   __new_start + __elems_before,
 8014e24:	6a3b      	ldr	r3, [r7, #32]
 8014e26:	009b      	lsls	r3, r3, #2
	  _Alloc_traits::construct(this->_M_impl,
 8014e28:	69fa      	ldr	r2, [r7, #28]
 8014e2a:	18d5      	adds	r5, r2, r3
 8014e2c:	6878      	ldr	r0, [r7, #4]
 8014e2e:	f7ff ffb0 	bl	8014d92 <_ZSt7forwardIP4BodyEOT_RNSt16remove_referenceIS2_E4typeE>
 8014e32:	4603      	mov	r3, r0
 8014e34:	461a      	mov	r2, r3
 8014e36:	4629      	mov	r1, r5
 8014e38:	4620      	mov	r0, r4
 8014e3a:	f7ff ffb5 	bl	8014da8 <_ZNSt16allocator_traitsISaIP4BodyEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	  __new_finish = pointer();
 8014e3e:	2300      	movs	r3, #0
 8014e40:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__old_start, __position.base(),
 8014e42:	f107 0308 	add.w	r3, r7, #8
 8014e46:	4618      	mov	r0, r3
 8014e48:	f000 fbd3 	bl	80155f2 <_ZNK9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEE4baseEv>
 8014e4c:	4603      	mov	r3, r0
 8014e4e:	681c      	ldr	r4, [r3, #0]
					 __new_start, _M_get_Tp_allocator());
 8014e50:	68fb      	ldr	r3, [r7, #12]
 8014e52:	4618      	mov	r0, r3
 8014e54:	f7ff fcd3 	bl	80147fe <_ZNSt12_Vector_baseIP4BodySaIS1_EE19_M_get_Tp_allocatorEv>
 8014e58:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__old_start, __position.base(),
 8014e5a:	69fa      	ldr	r2, [r7, #28]
 8014e5c:	4621      	mov	r1, r4
 8014e5e:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8014e60:	f000 fbb3 	bl	80155ca <_ZNSt6vectorIP4BodySaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 8014e64:	61b8      	str	r0, [r7, #24]
	      ++__new_finish;
 8014e66:	69bb      	ldr	r3, [r7, #24]
 8014e68:	3304      	adds	r3, #4
 8014e6a:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 8014e6c:	f107 0308 	add.w	r3, r7, #8
 8014e70:	4618      	mov	r0, r3
 8014e72:	f000 fbbe 	bl	80155f2 <_ZNK9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEE4baseEv>
 8014e76:	4603      	mov	r3, r0
 8014e78:	681c      	ldr	r4, [r3, #0]
					 __new_finish, _M_get_Tp_allocator());
 8014e7a:	68fb      	ldr	r3, [r7, #12]
 8014e7c:	4618      	mov	r0, r3
 8014e7e:	f7ff fcbe 	bl	80147fe <_ZNSt12_Vector_baseIP4BodySaIS1_EE19_M_get_Tp_allocatorEv>
 8014e82:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 8014e84:	69ba      	ldr	r2, [r7, #24]
 8014e86:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8014e88:	4620      	mov	r0, r4
 8014e8a:	f000 fb9e 	bl	80155ca <_ZNSt6vectorIP4BodySaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 8014e8e:	61b8      	str	r0, [r7, #24]
      _M_deallocate(__old_start,
 8014e90:	68f8      	ldr	r0, [r7, #12]
		    this->_M_impl._M_end_of_storage - __old_start);
 8014e92:	68fb      	ldr	r3, [r7, #12]
 8014e94:	689a      	ldr	r2, [r3, #8]
 8014e96:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8014e98:	1ad3      	subs	r3, r2, r3
 8014e9a:	109b      	asrs	r3, r3, #2
      _M_deallocate(__old_start,
 8014e9c:	461a      	mov	r2, r3
 8014e9e:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8014ea0:	f7ff fc9a 	bl	80147d8 <_ZNSt12_Vector_baseIP4BodySaIS1_EE13_M_deallocateEPS1_j>
      this->_M_impl._M_start = __new_start;
 8014ea4:	68fb      	ldr	r3, [r7, #12]
 8014ea6:	69fa      	ldr	r2, [r7, #28]
 8014ea8:	601a      	str	r2, [r3, #0]
      this->_M_impl._M_finish = __new_finish;
 8014eaa:	68fb      	ldr	r3, [r7, #12]
 8014eac:	69ba      	ldr	r2, [r7, #24]
 8014eae:	605a      	str	r2, [r3, #4]
      this->_M_impl._M_end_of_storage = __new_start + __len;
 8014eb0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8014eb2:	009b      	lsls	r3, r3, #2
 8014eb4:	69fa      	ldr	r2, [r7, #28]
 8014eb6:	441a      	add	r2, r3
 8014eb8:	68fb      	ldr	r3, [r7, #12]
 8014eba:	609a      	str	r2, [r3, #8]
    }
 8014ebc:	bf00      	nop
 8014ebe:	3730      	adds	r7, #48	; 0x30
 8014ec0:	46bd      	mov	sp, r7
 8014ec2:	bdb0      	pop	{r4, r5, r7, pc}
 8014ec4:	08027ae4 	.word	0x08027ae4

08014ec8 <_ZN9__gnu_cxx13new_allocatorIP10ExpressionEC1Ev>:
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 8014ec8:	b480      	push	{r7}
 8014eca:	b083      	sub	sp, #12
 8014ecc:	af00      	add	r7, sp, #0
 8014ece:	6078      	str	r0, [r7, #4]
 8014ed0:	687b      	ldr	r3, [r7, #4]
 8014ed2:	4618      	mov	r0, r3
 8014ed4:	370c      	adds	r7, #12
 8014ed6:	46bd      	mov	sp, r7
 8014ed8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014edc:	4770      	bx	lr

08014ede <_ZN9__gnu_cxx13new_allocatorIP4BodyEC1Ev>:
 8014ede:	b480      	push	{r7}
 8014ee0:	b083      	sub	sp, #12
 8014ee2:	af00      	add	r7, sp, #0
 8014ee4:	6078      	str	r0, [r7, #4]
 8014ee6:	687b      	ldr	r3, [r7, #4]
 8014ee8:	4618      	mov	r0, r3
 8014eea:	370c      	adds	r7, #12
 8014eec:	46bd      	mov	sp, r7
 8014eee:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014ef2:	4770      	bx	lr

08014ef4 <_ZNSt16allocator_traitsISaIP4BodyEE10deallocateERS2_PS1_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 8014ef4:	b580      	push	{r7, lr}
 8014ef6:	b084      	sub	sp, #16
 8014ef8:	af00      	add	r7, sp, #0
 8014efa:	60f8      	str	r0, [r7, #12]
 8014efc:	60b9      	str	r1, [r7, #8]
 8014efe:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 8014f00:	687a      	ldr	r2, [r7, #4]
 8014f02:	68b9      	ldr	r1, [r7, #8]
 8014f04:	68f8      	ldr	r0, [r7, #12]
 8014f06:	f000 fb7f 	bl	8015608 <_ZN9__gnu_cxx13new_allocatorIP4BodyE10deallocateEPS2_j>
 8014f0a:	bf00      	nop
 8014f0c:	3710      	adds	r7, #16
 8014f0e:	46bd      	mov	sp, r7
 8014f10:	bd80      	pop	{r7, pc}

08014f12 <_ZNSt8__detail9__variant16_Variant_storageILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE8_M_resetEv>:
      void _M_reset()
 8014f12:	b480      	push	{r7}
 8014f14:	b083      	sub	sp, #12
 8014f16:	af00      	add	r7, sp, #0
 8014f18:	6078      	str	r0, [r7, #4]
      { _M_index = variant_npos; }
 8014f1a:	687b      	ldr	r3, [r7, #4]
 8014f1c:	22ff      	movs	r2, #255	; 0xff
 8014f1e:	711a      	strb	r2, [r3, #4]
 8014f20:	bf00      	nop
 8014f22:	370c      	adds	r7, #12
 8014f24:	46bd      	mov	sp, r7
 8014f26:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014f2a:	4770      	bx	lr

08014f2c <_ZSt28__variant_construct_by_indexILj1ESt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEJS4_EEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 8014f2c:	b590      	push	{r4, r7, lr}
 8014f2e:	b085      	sub	sp, #20
 8014f30:	af00      	add	r7, sp, #0
 8014f32:	6078      	str	r0, [r7, #4]
 8014f34:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 8014f36:	687b      	ldr	r3, [r7, #4]
 8014f38:	2201      	movs	r2, #1
 8014f3a:	711a      	strb	r2, [r3, #4]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 8014f3c:	6878      	ldr	r0, [r7, #4]
 8014f3e:	f7ed fe5e 	bl	8002bfe <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>
 8014f42:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 8014f44:	6838      	ldr	r0, [r7, #0]
 8014f46:	f7ff fc65 	bl	8014814 <_ZSt7forwardIP13Function_callEOT_RNSt16remove_referenceIS2_E4typeE>
 8014f4a:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 8014f4c:	681c      	ldr	r4, [r3, #0]
 8014f4e:	68f8      	ldr	r0, [r7, #12]
 8014f50:	f000 fb66 	bl	8015620 <_ZSt9addressofIP13Function_callEPT_RS2_>
 8014f54:	4603      	mov	r3, r0
 8014f56:	4619      	mov	r1, r3
 8014f58:	2004      	movs	r0, #4
 8014f5a:	f7ec f87e 	bl	800105a <_ZnwjPv>
 8014f5e:	4603      	mov	r3, r0
 8014f60:	601c      	str	r4, [r3, #0]
    }
 8014f62:	bf00      	nop
 8014f64:	3714      	adds	r7, #20
 8014f66:	46bd      	mov	sp, r7
 8014f68:	bd90      	pop	{r4, r7, pc}

08014f6a <_ZSt28__variant_construct_by_indexILj0ESt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEJS2_EEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 8014f6a:	b590      	push	{r4, r7, lr}
 8014f6c:	b085      	sub	sp, #20
 8014f6e:	af00      	add	r7, sp, #0
 8014f70:	6078      	str	r0, [r7, #4]
 8014f72:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 8014f74:	687b      	ldr	r3, [r7, #4]
 8014f76:	2200      	movs	r2, #0
 8014f78:	711a      	strb	r2, [r3, #4]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 8014f7a:	6878      	ldr	r0, [r7, #4]
 8014f7c:	f7ed fdef 	bl	8002b5e <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>
 8014f80:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 8014f82:	6838      	ldr	r0, [r7, #0]
 8014f84:	f7ff fc6a 	bl	801485c <_ZSt7forwardIP10AssignmentEOT_RNSt16remove_referenceIS2_E4typeE>
 8014f88:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 8014f8a:	681c      	ldr	r4, [r3, #0]
 8014f8c:	68f8      	ldr	r0, [r7, #12]
 8014f8e:	f000 fb53 	bl	8015638 <_ZSt9addressofIP10AssignmentEPT_RS2_>
 8014f92:	4603      	mov	r3, r0
 8014f94:	4619      	mov	r1, r3
 8014f96:	2004      	movs	r0, #4
 8014f98:	f7ec f85f 	bl	800105a <_ZnwjPv>
 8014f9c:	4603      	mov	r3, r0
 8014f9e:	601c      	str	r4, [r3, #0]
    }
 8014fa0:	bf00      	nop
 8014fa2:	3714      	adds	r7, #20
 8014fa4:	46bd      	mov	sp, r7
 8014fa6:	bd90      	pop	{r4, r7, pc}

08014fa8 <_ZSt28__variant_construct_by_indexILj2ESt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEJS6_EEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 8014fa8:	b590      	push	{r4, r7, lr}
 8014faa:	b085      	sub	sp, #20
 8014fac:	af00      	add	r7, sp, #0
 8014fae:	6078      	str	r0, [r7, #4]
 8014fb0:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 8014fb2:	687b      	ldr	r3, [r7, #4]
 8014fb4:	2202      	movs	r2, #2
 8014fb6:	711a      	strb	r2, [r3, #4]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 8014fb8:	6878      	ldr	r0, [r7, #4]
 8014fba:	f7ed fe82 	bl	8002cc2 <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>
 8014fbe:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 8014fc0:	6838      	ldr	r0, [r7, #0]
 8014fc2:	f7ff fc6f 	bl	80148a4 <_ZSt7forwardIP11Method_callEOT_RNSt16remove_referenceIS2_E4typeE>
 8014fc6:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 8014fc8:	681c      	ldr	r4, [r3, #0]
 8014fca:	68f8      	ldr	r0, [r7, #12]
 8014fcc:	f000 fb40 	bl	8015650 <_ZSt9addressofIP11Method_callEPT_RS2_>
 8014fd0:	4603      	mov	r3, r0
 8014fd2:	4619      	mov	r1, r3
 8014fd4:	2004      	movs	r0, #4
 8014fd6:	f7ec f840 	bl	800105a <_ZnwjPv>
 8014fda:	4603      	mov	r3, r0
 8014fdc:	601c      	str	r4, [r3, #0]
    }
 8014fde:	bf00      	nop
 8014fe0:	3714      	adds	r7, #20
 8014fe2:	46bd      	mov	sp, r7
 8014fe4:	bd90      	pop	{r4, r7, pc}

08014fe6 <_ZSt28__variant_construct_by_indexILj3ESt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEJS8_EEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 8014fe6:	b590      	push	{r4, r7, lr}
 8014fe8:	b085      	sub	sp, #20
 8014fea:	af00      	add	r7, sp, #0
 8014fec:	6078      	str	r0, [r7, #4]
 8014fee:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 8014ff0:	687b      	ldr	r3, [r7, #4]
 8014ff2:	2203      	movs	r2, #3
 8014ff4:	711a      	strb	r2, [r3, #4]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 8014ff6:	6878      	ldr	r0, [r7, #4]
 8014ff8:	f7ed fed7 	bl	8002daa <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>
 8014ffc:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 8014ffe:	6838      	ldr	r0, [r7, #0]
 8015000:	f7ff fca4 	bl	801494c <_ZSt7forwardIP15While_statementEOT_RNSt16remove_referenceIS2_E4typeE>
 8015004:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 8015006:	681c      	ldr	r4, [r3, #0]
 8015008:	68f8      	ldr	r0, [r7, #12]
 801500a:	f000 fb2d 	bl	8015668 <_ZSt9addressofIP15While_statementEPT_RS2_>
 801500e:	4603      	mov	r3, r0
 8015010:	4619      	mov	r1, r3
 8015012:	2004      	movs	r0, #4
 8015014:	f7ec f821 	bl	800105a <_ZnwjPv>
 8015018:	4603      	mov	r3, r0
 801501a:	601c      	str	r4, [r3, #0]
    }
 801501c:	bf00      	nop
 801501e:	3714      	adds	r7, #20
 8015020:	46bd      	mov	sp, r7
 8015022:	bd90      	pop	{r4, r7, pc}

08015024 <_ZSt28__variant_construct_by_indexILj4ESt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEJSA_EEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 8015024:	b590      	push	{r4, r7, lr}
 8015026:	b085      	sub	sp, #20
 8015028:	af00      	add	r7, sp, #0
 801502a:	6078      	str	r0, [r7, #4]
 801502c:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 801502e:	687b      	ldr	r3, [r7, #4]
 8015030:	2204      	movs	r2, #4
 8015032:	711a      	strb	r2, [r3, #4]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 8015034:	6878      	ldr	r0, [r7, #4]
 8015036:	f7ed ff3e 	bl	8002eb6 <_ZNSt8__detail9__variant5__getILj4ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>
 801503a:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 801503c:	6838      	ldr	r0, [r7, #0]
 801503e:	f7ff fca9 	bl	8014994 <_ZSt7forwardIP12If_statementEOT_RNSt16remove_referenceIS2_E4typeE>
 8015042:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 8015044:	681c      	ldr	r4, [r3, #0]
 8015046:	68f8      	ldr	r0, [r7, #12]
 8015048:	f000 fb1a 	bl	8015680 <_ZSt9addressofIP12If_statementEPT_RS2_>
 801504c:	4603      	mov	r3, r0
 801504e:	4619      	mov	r1, r3
 8015050:	2004      	movs	r0, #4
 8015052:	f7ec f802 	bl	800105a <_ZnwjPv>
 8015056:	4603      	mov	r3, r0
 8015058:	601c      	str	r4, [r3, #0]
    }
 801505a:	bf00      	nop
 801505c:	3714      	adds	r7, #20
 801505e:	46bd      	mov	sp, r7
 8015060:	bd90      	pop	{r4, r7, pc}

08015062 <_ZN9__gnu_cxx13new_allocatorIP9StatementEC1Ev>:
 8015062:	b480      	push	{r7}
 8015064:	b083      	sub	sp, #12
 8015066:	af00      	add	r7, sp, #0
 8015068:	6078      	str	r0, [r7, #4]
 801506a:	687b      	ldr	r3, [r7, #4]
 801506c:	4618      	mov	r0, r3
 801506e:	370c      	adds	r7, #12
 8015070:	46bd      	mov	sp, r7
 8015072:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015076:	4770      	bx	lr

08015078 <_ZNSt16allocator_traitsISaIP9StatementEE10deallocateERS2_PS1_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 8015078:	b580      	push	{r7, lr}
 801507a:	b084      	sub	sp, #16
 801507c:	af00      	add	r7, sp, #0
 801507e:	60f8      	str	r0, [r7, #12]
 8015080:	60b9      	str	r1, [r7, #8]
 8015082:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 8015084:	687a      	ldr	r2, [r7, #4]
 8015086:	68b9      	ldr	r1, [r7, #8]
 8015088:	68f8      	ldr	r0, [r7, #12]
 801508a:	f000 fb05 	bl	8015698 <_ZN9__gnu_cxx13new_allocatorIP9StatementE10deallocateEPS2_j>
 801508e:	bf00      	nop
 8015090:	3710      	adds	r7, #16
 8015092:	46bd      	mov	sp, r7
 8015094:	bd80      	pop	{r7, pc}

08015096 <_ZSt7forwardIP9StatementEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8015096:	b480      	push	{r7}
 8015098:	b083      	sub	sp, #12
 801509a:	af00      	add	r7, sp, #0
 801509c:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801509e:	687b      	ldr	r3, [r7, #4]
 80150a0:	4618      	mov	r0, r3
 80150a2:	370c      	adds	r7, #12
 80150a4:	46bd      	mov	sp, r7
 80150a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80150aa:	4770      	bx	lr

080150ac <_ZNSt16allocator_traitsISaIP9StatementEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 80150ac:	b580      	push	{r7, lr}
 80150ae:	b084      	sub	sp, #16
 80150b0:	af00      	add	r7, sp, #0
 80150b2:	60f8      	str	r0, [r7, #12]
 80150b4:	60b9      	str	r1, [r7, #8]
 80150b6:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 80150b8:	6878      	ldr	r0, [r7, #4]
 80150ba:	f7ff ffec 	bl	8015096 <_ZSt7forwardIP9StatementEOT_RNSt16remove_referenceIS2_E4typeE>
 80150be:	4603      	mov	r3, r0
 80150c0:	461a      	mov	r2, r3
 80150c2:	68b9      	ldr	r1, [r7, #8]
 80150c4:	68f8      	ldr	r0, [r7, #12]
 80150c6:	f000 faf3 	bl	80156b0 <_ZN9__gnu_cxx13new_allocatorIP9StatementE9constructIS2_JS2_EEEvPT_DpOT0_>
 80150ca:	bf00      	nop
 80150cc:	3710      	adds	r7, #16
 80150ce:	46bd      	mov	sp, r7
 80150d0:	bd80      	pop	{r7, pc}
	...

080150d4 <_ZNSt6vectorIP9StatementSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
      vector<_Tp, _Alloc>::
 80150d4:	b5b0      	push	{r4, r5, r7, lr}
 80150d6:	b08c      	sub	sp, #48	; 0x30
 80150d8:	af00      	add	r7, sp, #0
 80150da:	60f8      	str	r0, [r7, #12]
 80150dc:	60b9      	str	r1, [r7, #8]
 80150de:	607a      	str	r2, [r7, #4]
      const size_type __len =
 80150e0:	4a39      	ldr	r2, [pc, #228]	; (80151c8 <_ZNSt6vectorIP9StatementSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xf4>)
 80150e2:	2101      	movs	r1, #1
 80150e4:	68f8      	ldr	r0, [r7, #12]
 80150e6:	f000 faf9 	bl	80156dc <_ZNKSt6vectorIP9StatementSaIS1_EE12_M_check_lenEjPKc>
 80150ea:	62f8      	str	r0, [r7, #44]	; 0x2c
      pointer __old_start = this->_M_impl._M_start;
 80150ec:	68fb      	ldr	r3, [r7, #12]
 80150ee:	681b      	ldr	r3, [r3, #0]
 80150f0:	62bb      	str	r3, [r7, #40]	; 0x28
      pointer __old_finish = this->_M_impl._M_finish;
 80150f2:	68fb      	ldr	r3, [r7, #12]
 80150f4:	685b      	ldr	r3, [r3, #4]
 80150f6:	627b      	str	r3, [r7, #36]	; 0x24
      const size_type __elems_before = __position - begin();
 80150f8:	68f8      	ldr	r0, [r7, #12]
 80150fa:	f7ec fe2e 	bl	8001d5a <_ZNSt6vectorIP9StatementSaIS1_EE5beginEv>
 80150fe:	4603      	mov	r3, r0
 8015100:	617b      	str	r3, [r7, #20]
 8015102:	f107 0214 	add.w	r2, r7, #20
 8015106:	f107 0308 	add.w	r3, r7, #8
 801510a:	4611      	mov	r1, r2
 801510c:	4618      	mov	r0, r3
 801510e:	f000 fb2c 	bl	801576a <_ZN9__gnu_cxxmiIPP9StatementSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
 8015112:	4603      	mov	r3, r0
 8015114:	623b      	str	r3, [r7, #32]
      pointer __new_start(this->_M_allocate(__len));
 8015116:	68fb      	ldr	r3, [r7, #12]
 8015118:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 801511a:	4618      	mov	r0, r3
 801511c:	f000 fb3a 	bl	8015794 <_ZNSt12_Vector_baseIP9StatementSaIS1_EE11_M_allocateEj>
 8015120:	61f8      	str	r0, [r7, #28]
      pointer __new_finish(__new_start);
 8015122:	69fb      	ldr	r3, [r7, #28]
 8015124:	61bb      	str	r3, [r7, #24]
	  _Alloc_traits::construct(this->_M_impl,
 8015126:	68fc      	ldr	r4, [r7, #12]
				   __new_start + __elems_before,
 8015128:	6a3b      	ldr	r3, [r7, #32]
 801512a:	009b      	lsls	r3, r3, #2
	  _Alloc_traits::construct(this->_M_impl,
 801512c:	69fa      	ldr	r2, [r7, #28]
 801512e:	18d5      	adds	r5, r2, r3
 8015130:	6878      	ldr	r0, [r7, #4]
 8015132:	f7ff ffb0 	bl	8015096 <_ZSt7forwardIP9StatementEOT_RNSt16remove_referenceIS2_E4typeE>
 8015136:	4603      	mov	r3, r0
 8015138:	461a      	mov	r2, r3
 801513a:	4629      	mov	r1, r5
 801513c:	4620      	mov	r0, r4
 801513e:	f7ff ffb5 	bl	80150ac <_ZNSt16allocator_traitsISaIP9StatementEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	  __new_finish = pointer();
 8015142:	2300      	movs	r3, #0
 8015144:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__old_start, __position.base(),
 8015146:	f107 0308 	add.w	r3, r7, #8
 801514a:	4618      	mov	r0, r3
 801514c:	f7ed fcd8 	bl	8002b00 <_ZNK9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEE4baseEv>
 8015150:	4603      	mov	r3, r0
 8015152:	681c      	ldr	r4, [r3, #0]
					 __new_start, _M_get_Tp_allocator());
 8015154:	68fb      	ldr	r3, [r7, #12]
 8015156:	4618      	mov	r0, r3
 8015158:	f7ff fc73 	bl	8014a42 <_ZNSt12_Vector_baseIP9StatementSaIS1_EE19_M_get_Tp_allocatorEv>
 801515c:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__old_start, __position.base(),
 801515e:	69fa      	ldr	r2, [r7, #28]
 8015160:	4621      	mov	r1, r4
 8015162:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8015164:	f000 fb2a 	bl	80157bc <_ZNSt6vectorIP9StatementSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 8015168:	61b8      	str	r0, [r7, #24]
	      ++__new_finish;
 801516a:	69bb      	ldr	r3, [r7, #24]
 801516c:	3304      	adds	r3, #4
 801516e:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 8015170:	f107 0308 	add.w	r3, r7, #8
 8015174:	4618      	mov	r0, r3
 8015176:	f7ed fcc3 	bl	8002b00 <_ZNK9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEE4baseEv>
 801517a:	4603      	mov	r3, r0
 801517c:	681c      	ldr	r4, [r3, #0]
					 __new_finish, _M_get_Tp_allocator());
 801517e:	68fb      	ldr	r3, [r7, #12]
 8015180:	4618      	mov	r0, r3
 8015182:	f7ff fc5e 	bl	8014a42 <_ZNSt12_Vector_baseIP9StatementSaIS1_EE19_M_get_Tp_allocatorEv>
 8015186:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 8015188:	69ba      	ldr	r2, [r7, #24]
 801518a:	6a79      	ldr	r1, [r7, #36]	; 0x24
 801518c:	4620      	mov	r0, r4
 801518e:	f000 fb15 	bl	80157bc <_ZNSt6vectorIP9StatementSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 8015192:	61b8      	str	r0, [r7, #24]
      _M_deallocate(__old_start,
 8015194:	68f8      	ldr	r0, [r7, #12]
		    this->_M_impl._M_end_of_storage - __old_start);
 8015196:	68fb      	ldr	r3, [r7, #12]
 8015198:	689a      	ldr	r2, [r3, #8]
 801519a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801519c:	1ad3      	subs	r3, r2, r3
 801519e:	109b      	asrs	r3, r3, #2
      _M_deallocate(__old_start,
 80151a0:	461a      	mov	r2, r3
 80151a2:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 80151a4:	f7ff fc3a 	bl	8014a1c <_ZNSt12_Vector_baseIP9StatementSaIS1_EE13_M_deallocateEPS1_j>
      this->_M_impl._M_start = __new_start;
 80151a8:	68fb      	ldr	r3, [r7, #12]
 80151aa:	69fa      	ldr	r2, [r7, #28]
 80151ac:	601a      	str	r2, [r3, #0]
      this->_M_impl._M_finish = __new_finish;
 80151ae:	68fb      	ldr	r3, [r7, #12]
 80151b0:	69ba      	ldr	r2, [r7, #24]
 80151b2:	605a      	str	r2, [r3, #4]
      this->_M_impl._M_end_of_storage = __new_start + __len;
 80151b4:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80151b6:	009b      	lsls	r3, r3, #2
 80151b8:	69fa      	ldr	r2, [r7, #28]
 80151ba:	441a      	add	r2, r3
 80151bc:	68fb      	ldr	r3, [r7, #12]
 80151be:	609a      	str	r2, [r3, #8]
    }
 80151c0:	bf00      	nop
 80151c2:	3730      	adds	r7, #48	; 0x30
 80151c4:	46bd      	mov	sp, r7
 80151c6:	bdb0      	pop	{r4, r5, r7, pc}
 80151c8:	08027ae4 	.word	0x08027ae4

080151cc <_ZNSt6vectorIP9StatementSaIS1_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
 80151cc:	b580      	push	{r7, lr}
 80151ce:	b084      	sub	sp, #16
 80151d0:	af00      	add	r7, sp, #0
 80151d2:	6078      	str	r0, [r7, #4]
	return *(end() - 1);
 80151d4:	6878      	ldr	r0, [r7, #4]
 80151d6:	f7ec fdd0 	bl	8001d7a <_ZNSt6vectorIP9StatementSaIS1_EE3endEv>
 80151da:	4603      	mov	r3, r0
 80151dc:	60fb      	str	r3, [r7, #12]
 80151de:	f107 030c 	add.w	r3, r7, #12
 80151e2:	2101      	movs	r1, #1
 80151e4:	4618      	mov	r0, r3
 80151e6:	f000 fafd 	bl	80157e4 <_ZNK9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEEmiEi>
 80151ea:	4603      	mov	r3, r0
 80151ec:	60bb      	str	r3, [r7, #8]
 80151ee:	f107 0308 	add.w	r3, r7, #8
 80151f2:	4618      	mov	r0, r3
 80151f4:	f7ec fdfa 	bl	8001dec <_ZNK9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEEdeEv>
 80151f8:	4603      	mov	r3, r0
      }
 80151fa:	4618      	mov	r0, r3
 80151fc:	3710      	adds	r7, #16
 80151fe:	46bd      	mov	sp, r7
 8015200:	bd80      	pop	{r7, pc}

08015202 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSA_EUlOT_T0_E_JRS9_St17integral_constantIjLj0EEEESC_St14__invoke_otherOSE_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8015202:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015206:	b084      	sub	sp, #16
 8015208:	af00      	add	r7, sp, #0
 801520a:	7338      	strb	r0, [r7, #12]
 801520c:	60b9      	str	r1, [r7, #8]
 801520e:	607a      	str	r2, [r7, #4]
 8015210:	603b      	str	r3, [r7, #0]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8015212:	68b8      	ldr	r0, [r7, #8]
 8015214:	f7ff fceb 	bl	8014bee <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 8015218:	4604      	mov	r4, r0
 801521a:	6878      	ldr	r0, [r7, #4]
 801521c:	f7f0 fcc9 	bl	8005bb2 <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 8015220:	4605      	mov	r5, r0
 8015222:	6838      	ldr	r0, [r7, #0]
 8015224:	f7ee fe1d 	bl	8003e62 <_ZSt7forwardISt17integral_constantIjLj0EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8015228:	4632      	mov	r2, r6
 801522a:	4629      	mov	r1, r5
 801522c:	4620      	mov	r0, r4
 801522e:	f000 faf2 	bl	8015816 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRS7_St17integral_constantIjLj0EEEENS0_20__variant_idx_cookieESB_SC_>
 8015232:	4643      	mov	r3, r8
 8015234:	4618      	mov	r0, r3
 8015236:	3710      	adds	r7, #16
 8015238:	46bd      	mov	sp, r7
 801523a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801523e <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSA_EUlOT_T0_E_JRiSt17integral_constantIjLj1EEEESC_St14__invoke_otherOSE_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 801523e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015242:	b084      	sub	sp, #16
 8015244:	af00      	add	r7, sp, #0
 8015246:	7338      	strb	r0, [r7, #12]
 8015248:	60b9      	str	r1, [r7, #8]
 801524a:	607a      	str	r2, [r7, #4]
 801524c:	603b      	str	r3, [r7, #0]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 801524e:	68b8      	ldr	r0, [r7, #8]
 8015250:	f7ff fccd 	bl	8014bee <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 8015254:	4604      	mov	r4, r0
 8015256:	6878      	ldr	r0, [r7, #4]
 8015258:	f7f0 fc39 	bl	8005ace <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 801525c:	4605      	mov	r5, r0
 801525e:	6838      	ldr	r0, [r7, #0]
 8015260:	f7ee fe33 	bl	8003eca <_ZSt7forwardISt17integral_constantIjLj1EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8015264:	4632      	mov	r2, r6
 8015266:	4629      	mov	r1, r5
 8015268:	4620      	mov	r0, r4
 801526a:	f000 fb1d 	bl	80158a8 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRiSt17integral_constantIjLj1EEEENS0_20__variant_idx_cookieESB_SC_>
 801526e:	4643      	mov	r3, r8
 8015270:	4618      	mov	r0, r3
 8015272:	3710      	adds	r7, #16
 8015274:	46bd      	mov	sp, r7
 8015276:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801527a <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSA_EUlOT_T0_E_JRfSt17integral_constantIjLj2EEEESC_St14__invoke_otherOSE_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 801527a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801527e:	b084      	sub	sp, #16
 8015280:	af00      	add	r7, sp, #0
 8015282:	7338      	strb	r0, [r7, #12]
 8015284:	60b9      	str	r1, [r7, #8]
 8015286:	607a      	str	r2, [r7, #4]
 8015288:	603b      	str	r3, [r7, #0]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 801528a:	68b8      	ldr	r0, [r7, #8]
 801528c:	f7ff fcaf 	bl	8014bee <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 8015290:	4604      	mov	r4, r0
 8015292:	6878      	ldr	r0, [r7, #4]
 8015294:	f7f0 fc3d 	bl	8005b12 <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 8015298:	4605      	mov	r5, r0
 801529a:	6838      	ldr	r0, [r7, #0]
 801529c:	f7ee fe49 	bl	8003f32 <_ZSt7forwardISt17integral_constantIjLj2EEEOT_RNSt16remove_referenceIS2_E4typeE>
 80152a0:	4632      	mov	r2, r6
 80152a2:	4629      	mov	r1, r5
 80152a4:	4620      	mov	r0, r4
 80152a6:	f000 fb46 	bl	8015936 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRfSt17integral_constantIjLj2EEEENS0_20__variant_idx_cookieESB_SC_>
 80152aa:	4643      	mov	r3, r8
 80152ac:	4618      	mov	r0, r3
 80152ae:	3710      	adds	r7, #16
 80152b0:	46bd      	mov	sp, r7
 80152b2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080152b6 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSA_EUlOT_T0_E_JRbSt17integral_constantIjLj3EEEESC_St14__invoke_otherOSE_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 80152b6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80152ba:	b084      	sub	sp, #16
 80152bc:	af00      	add	r7, sp, #0
 80152be:	7338      	strb	r0, [r7, #12]
 80152c0:	60b9      	str	r1, [r7, #8]
 80152c2:	607a      	str	r2, [r7, #4]
 80152c4:	603b      	str	r3, [r7, #0]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 80152c6:	68b8      	ldr	r0, [r7, #8]
 80152c8:	f7ff fc91 	bl	8014bee <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 80152cc:	4604      	mov	r4, r0
 80152ce:	6878      	ldr	r0, [r7, #4]
 80152d0:	f7f0 fc41 	bl	8005b56 <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
 80152d4:	4605      	mov	r5, r0
 80152d6:	6838      	ldr	r0, [r7, #0]
 80152d8:	f7ee fe6b 	bl	8003fb2 <_ZSt7forwardISt17integral_constantIjLj3EEEOT_RNSt16remove_referenceIS2_E4typeE>
 80152dc:	4632      	mov	r2, r6
 80152de:	4629      	mov	r1, r5
 80152e0:	4620      	mov	r0, r4
 80152e2:	f000 fb6f 	bl	80159c4 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRbSt17integral_constantIjLj3EEEENS0_20__variant_idx_cookieESB_SC_>
 80152e6:	4643      	mov	r3, r8
 80152e8:	4618      	mov	r0, r3
 80152ea:	3710      	adds	r7, #16
 80152ec:	46bd      	mov	sp, r7
 80152ee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080152f2 <_ZN9__gnu_cxx13new_allocatorIP10ExpressionE9constructIS2_JS2_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 80152f2:	b590      	push	{r4, r7, lr}
 80152f4:	b085      	sub	sp, #20
 80152f6:	af00      	add	r7, sp, #0
 80152f8:	60f8      	str	r0, [r7, #12]
 80152fa:	60b9      	str	r1, [r7, #8]
 80152fc:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 80152fe:	6878      	ldr	r0, [r7, #4]
 8015300:	f7ff fc80 	bl	8014c04 <_ZSt7forwardIP10ExpressionEOT_RNSt16remove_referenceIS2_E4typeE>
 8015304:	4603      	mov	r3, r0
 8015306:	681c      	ldr	r4, [r3, #0]
 8015308:	68bb      	ldr	r3, [r7, #8]
 801530a:	4619      	mov	r1, r3
 801530c:	2004      	movs	r0, #4
 801530e:	f7eb fea4 	bl	800105a <_ZnwjPv>
 8015312:	4603      	mov	r3, r0
 8015314:	601c      	str	r4, [r3, #0]
 8015316:	bf00      	nop
 8015318:	3714      	adds	r7, #20
 801531a:	46bd      	mov	sp, r7
 801531c:	bd90      	pop	{r4, r7, pc}

0801531e <_ZN9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 801531e:	b480      	push	{r7}
 8015320:	b083      	sub	sp, #12
 8015322:	af00      	add	r7, sp, #0
 8015324:	6078      	str	r0, [r7, #4]
 8015326:	6039      	str	r1, [r7, #0]
      : _M_current(__i) { }
 8015328:	683b      	ldr	r3, [r7, #0]
 801532a:	681a      	ldr	r2, [r3, #0]
 801532c:	687b      	ldr	r3, [r7, #4]
 801532e:	601a      	str	r2, [r3, #0]
 8015330:	687b      	ldr	r3, [r7, #4]
 8015332:	4618      	mov	r0, r3
 8015334:	370c      	adds	r7, #12
 8015336:	46bd      	mov	sp, r7
 8015338:	f85d 7b04 	ldr.w	r7, [sp], #4
 801533c:	4770      	bx	lr

0801533e <_ZNKSt6vectorIP10ExpressionSaIS1_EE12_M_check_lenEjPKc>:
      _M_check_len(size_type __n, const char* __s) const
 801533e:	b590      	push	{r4, r7, lr}
 8015340:	b087      	sub	sp, #28
 8015342:	af00      	add	r7, sp, #0
 8015344:	60f8      	str	r0, [r7, #12]
 8015346:	60b9      	str	r1, [r7, #8]
 8015348:	607a      	str	r2, [r7, #4]
	if (max_size() - size() < __n)
 801534a:	68f8      	ldr	r0, [r7, #12]
 801534c:	f000 fb82 	bl	8015a54 <_ZNKSt6vectorIP10ExpressionSaIS1_EE8max_sizeEv>
 8015350:	4604      	mov	r4, r0
 8015352:	68f8      	ldr	r0, [r7, #12]
 8015354:	f7ec fd92 	bl	8001e7c <_ZNKSt6vectorIP10ExpressionSaIS1_EE4sizeEv>
 8015358:	4603      	mov	r3, r0
 801535a:	1ae2      	subs	r2, r4, r3
 801535c:	68bb      	ldr	r3, [r7, #8]
 801535e:	429a      	cmp	r2, r3
 8015360:	bf34      	ite	cc
 8015362:	2301      	movcc	r3, #1
 8015364:	2300      	movcs	r3, #0
 8015366:	b2db      	uxtb	r3, r3
 8015368:	2b00      	cmp	r3, #0
 801536a:	d002      	beq.n	8015372 <_ZNKSt6vectorIP10ExpressionSaIS1_EE12_M_check_lenEjPKc+0x34>
	  __throw_length_error(__N(__s));
 801536c:	6878      	ldr	r0, [r7, #4]
 801536e:	f00d fb28 	bl	80229c2 <_ZSt20__throw_length_errorPKc>
	const size_type __len = size() + (std::max)(size(), __n);
 8015372:	68f8      	ldr	r0, [r7, #12]
 8015374:	f7ec fd82 	bl	8001e7c <_ZNKSt6vectorIP10ExpressionSaIS1_EE4sizeEv>
 8015378:	4604      	mov	r4, r0
 801537a:	68f8      	ldr	r0, [r7, #12]
 801537c:	f7ec fd7e 	bl	8001e7c <_ZNKSt6vectorIP10ExpressionSaIS1_EE4sizeEv>
 8015380:	4603      	mov	r3, r0
 8015382:	613b      	str	r3, [r7, #16]
 8015384:	f107 0208 	add.w	r2, r7, #8
 8015388:	f107 0310 	add.w	r3, r7, #16
 801538c:	4611      	mov	r1, r2
 801538e:	4618      	mov	r0, r3
 8015390:	f000 fb71 	bl	8015a76 <_ZSt3maxIjERKT_S2_S2_>
 8015394:	4603      	mov	r3, r0
 8015396:	681b      	ldr	r3, [r3, #0]
 8015398:	4423      	add	r3, r4
 801539a:	617b      	str	r3, [r7, #20]
	return (__len < size() || __len > max_size()) ? max_size() : __len;
 801539c:	68f8      	ldr	r0, [r7, #12]
 801539e:	f7ec fd6d 	bl	8001e7c <_ZNKSt6vectorIP10ExpressionSaIS1_EE4sizeEv>
 80153a2:	4602      	mov	r2, r0
 80153a4:	697b      	ldr	r3, [r7, #20]
 80153a6:	4293      	cmp	r3, r2
 80153a8:	d306      	bcc.n	80153b8 <_ZNKSt6vectorIP10ExpressionSaIS1_EE12_M_check_lenEjPKc+0x7a>
 80153aa:	68f8      	ldr	r0, [r7, #12]
 80153ac:	f000 fb52 	bl	8015a54 <_ZNKSt6vectorIP10ExpressionSaIS1_EE8max_sizeEv>
 80153b0:	4602      	mov	r2, r0
 80153b2:	697b      	ldr	r3, [r7, #20]
 80153b4:	4293      	cmp	r3, r2
 80153b6:	d904      	bls.n	80153c2 <_ZNKSt6vectorIP10ExpressionSaIS1_EE12_M_check_lenEjPKc+0x84>
 80153b8:	68f8      	ldr	r0, [r7, #12]
 80153ba:	f000 fb4b 	bl	8015a54 <_ZNKSt6vectorIP10ExpressionSaIS1_EE8max_sizeEv>
 80153be:	4603      	mov	r3, r0
 80153c0:	e000      	b.n	80153c4 <_ZNKSt6vectorIP10ExpressionSaIS1_EE12_M_check_lenEjPKc+0x86>
 80153c2:	697b      	ldr	r3, [r7, #20]
      }
 80153c4:	4618      	mov	r0, r3
 80153c6:	371c      	adds	r7, #28
 80153c8:	46bd      	mov	sp, r7
 80153ca:	bd90      	pop	{r4, r7, pc}

080153cc <_ZNSt6vectorIP10ExpressionSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 80153cc:	b580      	push	{r7, lr}
 80153ce:	b084      	sub	sp, #16
 80153d0:	af00      	add	r7, sp, #0
 80153d2:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_start); }
 80153d4:	687a      	ldr	r2, [r7, #4]
 80153d6:	f107 030c 	add.w	r3, r7, #12
 80153da:	4611      	mov	r1, r2
 80153dc:	4618      	mov	r0, r3
 80153de:	f7ff ff9e 	bl	801531e <_ZN9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 80153e2:	68fb      	ldr	r3, [r7, #12]
 80153e4:	4618      	mov	r0, r3
 80153e6:	3710      	adds	r7, #16
 80153e8:	46bd      	mov	sp, r7
 80153ea:	bd80      	pop	{r7, pc}

080153ec <_ZN9__gnu_cxxmiIPP10ExpressionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>:
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
 80153ec:	b590      	push	{r4, r7, lr}
 80153ee:	b083      	sub	sp, #12
 80153f0:	af00      	add	r7, sp, #0
 80153f2:	6078      	str	r0, [r7, #4]
 80153f4:	6039      	str	r1, [r7, #0]
    { return __lhs.base() - __rhs.base(); }
 80153f6:	6878      	ldr	r0, [r7, #4]
 80153f8:	f000 f821 	bl	801543e <_ZNK9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEE4baseEv>
 80153fc:	4603      	mov	r3, r0
 80153fe:	681c      	ldr	r4, [r3, #0]
 8015400:	6838      	ldr	r0, [r7, #0]
 8015402:	f000 f81c 	bl	801543e <_ZNK9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEE4baseEv>
 8015406:	4603      	mov	r3, r0
 8015408:	681b      	ldr	r3, [r3, #0]
 801540a:	1ae3      	subs	r3, r4, r3
 801540c:	109b      	asrs	r3, r3, #2
 801540e:	4618      	mov	r0, r3
 8015410:	370c      	adds	r7, #12
 8015412:	46bd      	mov	sp, r7
 8015414:	bd90      	pop	{r4, r7, pc}

08015416 <_ZNSt6vectorIP10ExpressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
 8015416:	b590      	push	{r4, r7, lr}
 8015418:	b089      	sub	sp, #36	; 0x24
 801541a:	af02      	add	r7, sp, #8
 801541c:	60f8      	str	r0, [r7, #12]
 801541e:	60b9      	str	r1, [r7, #8]
 8015420:	607a      	str	r2, [r7, #4]
 8015422:	603b      	str	r3, [r7, #0]
	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
 8015424:	f88d 4000 	strb.w	r4, [sp]
 8015428:	683b      	ldr	r3, [r7, #0]
 801542a:	687a      	ldr	r2, [r7, #4]
 801542c:	68b9      	ldr	r1, [r7, #8]
 801542e:	68f8      	ldr	r0, [r7, #12]
 8015430:	f000 fb35 	bl	8015a9e <_ZNSt6vectorIP10ExpressionSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>
 8015434:	4603      	mov	r3, r0
      }
 8015436:	4618      	mov	r0, r3
 8015438:	371c      	adds	r7, #28
 801543a:	46bd      	mov	sp, r7
 801543c:	bd90      	pop	{r4, r7, pc}

0801543e <_ZNK9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
 801543e:	b480      	push	{r7}
 8015440:	b083      	sub	sp, #12
 8015442:	af00      	add	r7, sp, #0
 8015444:	6078      	str	r0, [r7, #4]
      { return _M_current; }
 8015446:	687b      	ldr	r3, [r7, #4]
 8015448:	4618      	mov	r0, r3
 801544a:	370c      	adds	r7, #12
 801544c:	46bd      	mov	sp, r7
 801544e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015452:	4770      	bx	lr

08015454 <_ZNK9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEEmiEi>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
 8015454:	b580      	push	{r7, lr}
 8015456:	b084      	sub	sp, #16
 8015458:	af00      	add	r7, sp, #0
 801545a:	6078      	str	r0, [r7, #4]
 801545c:	6039      	str	r1, [r7, #0]
      { return __normal_iterator(_M_current - __n); }
 801545e:	687b      	ldr	r3, [r7, #4]
 8015460:	681a      	ldr	r2, [r3, #0]
 8015462:	683b      	ldr	r3, [r7, #0]
 8015464:	009b      	lsls	r3, r3, #2
 8015466:	425b      	negs	r3, r3
 8015468:	4413      	add	r3, r2
 801546a:	60fb      	str	r3, [r7, #12]
 801546c:	f107 020c 	add.w	r2, r7, #12
 8015470:	f107 0308 	add.w	r3, r7, #8
 8015474:	4611      	mov	r1, r2
 8015476:	4618      	mov	r0, r3
 8015478:	f7ff ff51 	bl	801531e <_ZN9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 801547c:	68bb      	ldr	r3, [r7, #8]
 801547e:	4618      	mov	r0, r3
 8015480:	3710      	adds	r7, #16
 8015482:	46bd      	mov	sp, r7
 8015484:	bd80      	pop	{r7, pc}

08015486 <_ZNK9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
 8015486:	b480      	push	{r7}
 8015488:	b083      	sub	sp, #12
 801548a:	af00      	add	r7, sp, #0
 801548c:	6078      	str	r0, [r7, #4]
      { return *_M_current; }
 801548e:	687b      	ldr	r3, [r7, #4]
 8015490:	681b      	ldr	r3, [r3, #0]
 8015492:	4618      	mov	r0, r3
 8015494:	370c      	adds	r7, #12
 8015496:	46bd      	mov	sp, r7
 8015498:	f85d 7b04 	ldr.w	r7, [sp], #4
 801549c:	4770      	bx	lr

0801549e <_ZN9__gnu_cxx13new_allocatorIP4BodyE9constructIS2_JS2_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 801549e:	b590      	push	{r4, r7, lr}
 80154a0:	b085      	sub	sp, #20
 80154a2:	af00      	add	r7, sp, #0
 80154a4:	60f8      	str	r0, [r7, #12]
 80154a6:	60b9      	str	r1, [r7, #8]
 80154a8:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 80154aa:	6878      	ldr	r0, [r7, #4]
 80154ac:	f7ff fc71 	bl	8014d92 <_ZSt7forwardIP4BodyEOT_RNSt16remove_referenceIS2_E4typeE>
 80154b0:	4603      	mov	r3, r0
 80154b2:	681c      	ldr	r4, [r3, #0]
 80154b4:	68bb      	ldr	r3, [r7, #8]
 80154b6:	4619      	mov	r1, r3
 80154b8:	2004      	movs	r0, #4
 80154ba:	f7eb fdce 	bl	800105a <_ZnwjPv>
 80154be:	4603      	mov	r3, r0
 80154c0:	601c      	str	r4, [r3, #0]
 80154c2:	bf00      	nop
 80154c4:	3714      	adds	r7, #20
 80154c6:	46bd      	mov	sp, r7
 80154c8:	bd90      	pop	{r4, r7, pc}

080154ca <_ZNKSt6vectorIP4BodySaIS1_EE12_M_check_lenEjPKc>:
      _M_check_len(size_type __n, const char* __s) const
 80154ca:	b590      	push	{r4, r7, lr}
 80154cc:	b087      	sub	sp, #28
 80154ce:	af00      	add	r7, sp, #0
 80154d0:	60f8      	str	r0, [r7, #12]
 80154d2:	60b9      	str	r1, [r7, #8]
 80154d4:	607a      	str	r2, [r7, #4]
	if (max_size() - size() < __n)
 80154d6:	68f8      	ldr	r0, [r7, #12]
 80154d8:	f000 faf3 	bl	8015ac2 <_ZNKSt6vectorIP4BodySaIS1_EE8max_sizeEv>
 80154dc:	4604      	mov	r4, r0
 80154de:	68f8      	ldr	r0, [r7, #12]
 80154e0:	f7ec fd3f 	bl	8001f62 <_ZNKSt6vectorIP4BodySaIS1_EE4sizeEv>
 80154e4:	4603      	mov	r3, r0
 80154e6:	1ae2      	subs	r2, r4, r3
 80154e8:	68bb      	ldr	r3, [r7, #8]
 80154ea:	429a      	cmp	r2, r3
 80154ec:	bf34      	ite	cc
 80154ee:	2301      	movcc	r3, #1
 80154f0:	2300      	movcs	r3, #0
 80154f2:	b2db      	uxtb	r3, r3
 80154f4:	2b00      	cmp	r3, #0
 80154f6:	d002      	beq.n	80154fe <_ZNKSt6vectorIP4BodySaIS1_EE12_M_check_lenEjPKc+0x34>
	  __throw_length_error(__N(__s));
 80154f8:	6878      	ldr	r0, [r7, #4]
 80154fa:	f00d fa62 	bl	80229c2 <_ZSt20__throw_length_errorPKc>
	const size_type __len = size() + (std::max)(size(), __n);
 80154fe:	68f8      	ldr	r0, [r7, #12]
 8015500:	f7ec fd2f 	bl	8001f62 <_ZNKSt6vectorIP4BodySaIS1_EE4sizeEv>
 8015504:	4604      	mov	r4, r0
 8015506:	68f8      	ldr	r0, [r7, #12]
 8015508:	f7ec fd2b 	bl	8001f62 <_ZNKSt6vectorIP4BodySaIS1_EE4sizeEv>
 801550c:	4603      	mov	r3, r0
 801550e:	613b      	str	r3, [r7, #16]
 8015510:	f107 0208 	add.w	r2, r7, #8
 8015514:	f107 0310 	add.w	r3, r7, #16
 8015518:	4611      	mov	r1, r2
 801551a:	4618      	mov	r0, r3
 801551c:	f000 faab 	bl	8015a76 <_ZSt3maxIjERKT_S2_S2_>
 8015520:	4603      	mov	r3, r0
 8015522:	681b      	ldr	r3, [r3, #0]
 8015524:	4423      	add	r3, r4
 8015526:	617b      	str	r3, [r7, #20]
	return (__len < size() || __len > max_size()) ? max_size() : __len;
 8015528:	68f8      	ldr	r0, [r7, #12]
 801552a:	f7ec fd1a 	bl	8001f62 <_ZNKSt6vectorIP4BodySaIS1_EE4sizeEv>
 801552e:	4602      	mov	r2, r0
 8015530:	697b      	ldr	r3, [r7, #20]
 8015532:	4293      	cmp	r3, r2
 8015534:	d306      	bcc.n	8015544 <_ZNKSt6vectorIP4BodySaIS1_EE12_M_check_lenEjPKc+0x7a>
 8015536:	68f8      	ldr	r0, [r7, #12]
 8015538:	f000 fac3 	bl	8015ac2 <_ZNKSt6vectorIP4BodySaIS1_EE8max_sizeEv>
 801553c:	4602      	mov	r2, r0
 801553e:	697b      	ldr	r3, [r7, #20]
 8015540:	4293      	cmp	r3, r2
 8015542:	d904      	bls.n	801554e <_ZNKSt6vectorIP4BodySaIS1_EE12_M_check_lenEjPKc+0x84>
 8015544:	68f8      	ldr	r0, [r7, #12]
 8015546:	f000 fabc 	bl	8015ac2 <_ZNKSt6vectorIP4BodySaIS1_EE8max_sizeEv>
 801554a:	4603      	mov	r3, r0
 801554c:	e000      	b.n	8015550 <_ZNKSt6vectorIP4BodySaIS1_EE12_M_check_lenEjPKc+0x86>
 801554e:	697b      	ldr	r3, [r7, #20]
      }
 8015550:	4618      	mov	r0, r3
 8015552:	371c      	adds	r7, #28
 8015554:	46bd      	mov	sp, r7
 8015556:	bd90      	pop	{r4, r7, pc}

08015558 <_ZNSt6vectorIP4BodySaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 8015558:	b580      	push	{r7, lr}
 801555a:	b084      	sub	sp, #16
 801555c:	af00      	add	r7, sp, #0
 801555e:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_start); }
 8015560:	687a      	ldr	r2, [r7, #4]
 8015562:	f107 030c 	add.w	r3, r7, #12
 8015566:	4611      	mov	r1, r2
 8015568:	4618      	mov	r0, r3
 801556a:	f7ee fc5f 	bl	8003e2c <_ZN9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEEC1ERKS3_>
 801556e:	68fb      	ldr	r3, [r7, #12]
 8015570:	4618      	mov	r0, r3
 8015572:	3710      	adds	r7, #16
 8015574:	46bd      	mov	sp, r7
 8015576:	bd80      	pop	{r7, pc}

08015578 <_ZN9__gnu_cxxmiIPP4BodySt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>:
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
 8015578:	b590      	push	{r4, r7, lr}
 801557a:	b083      	sub	sp, #12
 801557c:	af00      	add	r7, sp, #0
 801557e:	6078      	str	r0, [r7, #4]
 8015580:	6039      	str	r1, [r7, #0]
    { return __lhs.base() - __rhs.base(); }
 8015582:	6878      	ldr	r0, [r7, #4]
 8015584:	f000 f835 	bl	80155f2 <_ZNK9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEE4baseEv>
 8015588:	4603      	mov	r3, r0
 801558a:	681c      	ldr	r4, [r3, #0]
 801558c:	6838      	ldr	r0, [r7, #0]
 801558e:	f000 f830 	bl	80155f2 <_ZNK9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEE4baseEv>
 8015592:	4603      	mov	r3, r0
 8015594:	681b      	ldr	r3, [r3, #0]
 8015596:	1ae3      	subs	r3, r4, r3
 8015598:	109b      	asrs	r3, r3, #2
 801559a:	4618      	mov	r0, r3
 801559c:	370c      	adds	r7, #12
 801559e:	46bd      	mov	sp, r7
 80155a0:	bd90      	pop	{r4, r7, pc}

080155a2 <_ZNSt12_Vector_baseIP4BodySaIS1_EE11_M_allocateEj>:
      _M_allocate(size_t __n)
 80155a2:	b580      	push	{r7, lr}
 80155a4:	b082      	sub	sp, #8
 80155a6:	af00      	add	r7, sp, #0
 80155a8:	6078      	str	r0, [r7, #4]
 80155aa:	6039      	str	r1, [r7, #0]
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 80155ac:	683b      	ldr	r3, [r7, #0]
 80155ae:	2b00      	cmp	r3, #0
 80155b0:	d006      	beq.n	80155c0 <_ZNSt12_Vector_baseIP4BodySaIS1_EE11_M_allocateEj+0x1e>
 80155b2:	687b      	ldr	r3, [r7, #4]
 80155b4:	6839      	ldr	r1, [r7, #0]
 80155b6:	4618      	mov	r0, r3
 80155b8:	f000 fa94 	bl	8015ae4 <_ZNSt16allocator_traitsISaIP4BodyEE8allocateERS2_j>
 80155bc:	4603      	mov	r3, r0
 80155be:	e000      	b.n	80155c2 <_ZNSt12_Vector_baseIP4BodySaIS1_EE11_M_allocateEj+0x20>
 80155c0:	2300      	movs	r3, #0
      }
 80155c2:	4618      	mov	r0, r3
 80155c4:	3708      	adds	r7, #8
 80155c6:	46bd      	mov	sp, r7
 80155c8:	bd80      	pop	{r7, pc}

080155ca <_ZNSt6vectorIP4BodySaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
 80155ca:	b590      	push	{r4, r7, lr}
 80155cc:	b089      	sub	sp, #36	; 0x24
 80155ce:	af02      	add	r7, sp, #8
 80155d0:	60f8      	str	r0, [r7, #12]
 80155d2:	60b9      	str	r1, [r7, #8]
 80155d4:	607a      	str	r2, [r7, #4]
 80155d6:	603b      	str	r3, [r7, #0]
	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
 80155d8:	f88d 4000 	strb.w	r4, [sp]
 80155dc:	683b      	ldr	r3, [r7, #0]
 80155de:	687a      	ldr	r2, [r7, #4]
 80155e0:	68b9      	ldr	r1, [r7, #8]
 80155e2:	68f8      	ldr	r0, [r7, #12]
 80155e4:	f000 fa8d 	bl	8015b02 <_ZNSt6vectorIP4BodySaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>
 80155e8:	4603      	mov	r3, r0
      }
 80155ea:	4618      	mov	r0, r3
 80155ec:	371c      	adds	r7, #28
 80155ee:	46bd      	mov	sp, r7
 80155f0:	bd90      	pop	{r4, r7, pc}

080155f2 <_ZNK9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
 80155f2:	b480      	push	{r7}
 80155f4:	b083      	sub	sp, #12
 80155f6:	af00      	add	r7, sp, #0
 80155f8:	6078      	str	r0, [r7, #4]
      { return _M_current; }
 80155fa:	687b      	ldr	r3, [r7, #4]
 80155fc:	4618      	mov	r0, r3
 80155fe:	370c      	adds	r7, #12
 8015600:	46bd      	mov	sp, r7
 8015602:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015606:	4770      	bx	lr

08015608 <_ZN9__gnu_cxx13new_allocatorIP4BodyE10deallocateEPS2_j>:
      deallocate(pointer __p, size_type)
 8015608:	b580      	push	{r7, lr}
 801560a:	b084      	sub	sp, #16
 801560c:	af00      	add	r7, sp, #0
 801560e:	60f8      	str	r0, [r7, #12]
 8015610:	60b9      	str	r1, [r7, #8]
 8015612:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 8015614:	68b8      	ldr	r0, [r7, #8]
 8015616:	f00d f8f3 	bl	8022800 <_ZdlPv>
      }
 801561a:	3710      	adds	r7, #16
 801561c:	46bd      	mov	sp, r7
 801561e:	bd80      	pop	{r7, pc}

08015620 <_ZSt9addressofIP13Function_callEPT_RS2_>:
    addressof(_Tp& __r) noexcept
 8015620:	b580      	push	{r7, lr}
 8015622:	b082      	sub	sp, #8
 8015624:	af00      	add	r7, sp, #0
 8015626:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 8015628:	6878      	ldr	r0, [r7, #4]
 801562a:	f7f6 fa26 	bl	800ba7a <_ZSt11__addressofIP13Function_callEPT_RS2_>
 801562e:	4603      	mov	r3, r0
 8015630:	4618      	mov	r0, r3
 8015632:	3708      	adds	r7, #8
 8015634:	46bd      	mov	sp, r7
 8015636:	bd80      	pop	{r7, pc}

08015638 <_ZSt9addressofIP10AssignmentEPT_RS2_>:
    addressof(_Tp& __r) noexcept
 8015638:	b580      	push	{r7, lr}
 801563a:	b082      	sub	sp, #8
 801563c:	af00      	add	r7, sp, #0
 801563e:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 8015640:	6878      	ldr	r0, [r7, #4]
 8015642:	f000 fa70 	bl	8015b26 <_ZSt11__addressofIP10AssignmentEPT_RS2_>
 8015646:	4603      	mov	r3, r0
 8015648:	4618      	mov	r0, r3
 801564a:	3708      	adds	r7, #8
 801564c:	46bd      	mov	sp, r7
 801564e:	bd80      	pop	{r7, pc}

08015650 <_ZSt9addressofIP11Method_callEPT_RS2_>:
    addressof(_Tp& __r) noexcept
 8015650:	b580      	push	{r7, lr}
 8015652:	b082      	sub	sp, #8
 8015654:	af00      	add	r7, sp, #0
 8015656:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 8015658:	6878      	ldr	r0, [r7, #4]
 801565a:	f000 fa6f 	bl	8015b3c <_ZSt11__addressofIP11Method_callEPT_RS2_>
 801565e:	4603      	mov	r3, r0
 8015660:	4618      	mov	r0, r3
 8015662:	3708      	adds	r7, #8
 8015664:	46bd      	mov	sp, r7
 8015666:	bd80      	pop	{r7, pc}

08015668 <_ZSt9addressofIP15While_statementEPT_RS2_>:
    addressof(_Tp& __r) noexcept
 8015668:	b580      	push	{r7, lr}
 801566a:	b082      	sub	sp, #8
 801566c:	af00      	add	r7, sp, #0
 801566e:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 8015670:	6878      	ldr	r0, [r7, #4]
 8015672:	f000 fa6e 	bl	8015b52 <_ZSt11__addressofIP15While_statementEPT_RS2_>
 8015676:	4603      	mov	r3, r0
 8015678:	4618      	mov	r0, r3
 801567a:	3708      	adds	r7, #8
 801567c:	46bd      	mov	sp, r7
 801567e:	bd80      	pop	{r7, pc}

08015680 <_ZSt9addressofIP12If_statementEPT_RS2_>:
    addressof(_Tp& __r) noexcept
 8015680:	b580      	push	{r7, lr}
 8015682:	b082      	sub	sp, #8
 8015684:	af00      	add	r7, sp, #0
 8015686:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 8015688:	6878      	ldr	r0, [r7, #4]
 801568a:	f000 fa6d 	bl	8015b68 <_ZSt11__addressofIP12If_statementEPT_RS2_>
 801568e:	4603      	mov	r3, r0
 8015690:	4618      	mov	r0, r3
 8015692:	3708      	adds	r7, #8
 8015694:	46bd      	mov	sp, r7
 8015696:	bd80      	pop	{r7, pc}

08015698 <_ZN9__gnu_cxx13new_allocatorIP9StatementE10deallocateEPS2_j>:
      deallocate(pointer __p, size_type)
 8015698:	b580      	push	{r7, lr}
 801569a:	b084      	sub	sp, #16
 801569c:	af00      	add	r7, sp, #0
 801569e:	60f8      	str	r0, [r7, #12]
 80156a0:	60b9      	str	r1, [r7, #8]
 80156a2:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 80156a4:	68b8      	ldr	r0, [r7, #8]
 80156a6:	f00d f8ab 	bl	8022800 <_ZdlPv>
      }
 80156aa:	3710      	adds	r7, #16
 80156ac:	46bd      	mov	sp, r7
 80156ae:	bd80      	pop	{r7, pc}

080156b0 <_ZN9__gnu_cxx13new_allocatorIP9StatementE9constructIS2_JS2_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 80156b0:	b590      	push	{r4, r7, lr}
 80156b2:	b085      	sub	sp, #20
 80156b4:	af00      	add	r7, sp, #0
 80156b6:	60f8      	str	r0, [r7, #12]
 80156b8:	60b9      	str	r1, [r7, #8]
 80156ba:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 80156bc:	6878      	ldr	r0, [r7, #4]
 80156be:	f7ff fcea 	bl	8015096 <_ZSt7forwardIP9StatementEOT_RNSt16remove_referenceIS2_E4typeE>
 80156c2:	4603      	mov	r3, r0
 80156c4:	681c      	ldr	r4, [r3, #0]
 80156c6:	68bb      	ldr	r3, [r7, #8]
 80156c8:	4619      	mov	r1, r3
 80156ca:	2004      	movs	r0, #4
 80156cc:	f7eb fcc5 	bl	800105a <_ZnwjPv>
 80156d0:	4603      	mov	r3, r0
 80156d2:	601c      	str	r4, [r3, #0]
 80156d4:	bf00      	nop
 80156d6:	3714      	adds	r7, #20
 80156d8:	46bd      	mov	sp, r7
 80156da:	bd90      	pop	{r4, r7, pc}

080156dc <_ZNKSt6vectorIP9StatementSaIS1_EE12_M_check_lenEjPKc>:
      _M_check_len(size_type __n, const char* __s) const
 80156dc:	b590      	push	{r4, r7, lr}
 80156de:	b087      	sub	sp, #28
 80156e0:	af00      	add	r7, sp, #0
 80156e2:	60f8      	str	r0, [r7, #12]
 80156e4:	60b9      	str	r1, [r7, #8]
 80156e6:	607a      	str	r2, [r7, #4]
	if (max_size() - size() < __n)
 80156e8:	68f8      	ldr	r0, [r7, #12]
 80156ea:	f000 fa48 	bl	8015b7e <_ZNKSt6vectorIP9StatementSaIS1_EE8max_sizeEv>
 80156ee:	4604      	mov	r4, r0
 80156f0:	68f8      	ldr	r0, [r7, #12]
 80156f2:	f000 fa55 	bl	8015ba0 <_ZNKSt6vectorIP9StatementSaIS1_EE4sizeEv>
 80156f6:	4603      	mov	r3, r0
 80156f8:	1ae2      	subs	r2, r4, r3
 80156fa:	68bb      	ldr	r3, [r7, #8]
 80156fc:	429a      	cmp	r2, r3
 80156fe:	bf34      	ite	cc
 8015700:	2301      	movcc	r3, #1
 8015702:	2300      	movcs	r3, #0
 8015704:	b2db      	uxtb	r3, r3
 8015706:	2b00      	cmp	r3, #0
 8015708:	d002      	beq.n	8015710 <_ZNKSt6vectorIP9StatementSaIS1_EE12_M_check_lenEjPKc+0x34>
	  __throw_length_error(__N(__s));
 801570a:	6878      	ldr	r0, [r7, #4]
 801570c:	f00d f959 	bl	80229c2 <_ZSt20__throw_length_errorPKc>
	const size_type __len = size() + (std::max)(size(), __n);
 8015710:	68f8      	ldr	r0, [r7, #12]
 8015712:	f000 fa45 	bl	8015ba0 <_ZNKSt6vectorIP9StatementSaIS1_EE4sizeEv>
 8015716:	4604      	mov	r4, r0
 8015718:	68f8      	ldr	r0, [r7, #12]
 801571a:	f000 fa41 	bl	8015ba0 <_ZNKSt6vectorIP9StatementSaIS1_EE4sizeEv>
 801571e:	4603      	mov	r3, r0
 8015720:	613b      	str	r3, [r7, #16]
 8015722:	f107 0208 	add.w	r2, r7, #8
 8015726:	f107 0310 	add.w	r3, r7, #16
 801572a:	4611      	mov	r1, r2
 801572c:	4618      	mov	r0, r3
 801572e:	f000 f9a2 	bl	8015a76 <_ZSt3maxIjERKT_S2_S2_>
 8015732:	4603      	mov	r3, r0
 8015734:	681b      	ldr	r3, [r3, #0]
 8015736:	4423      	add	r3, r4
 8015738:	617b      	str	r3, [r7, #20]
	return (__len < size() || __len > max_size()) ? max_size() : __len;
 801573a:	68f8      	ldr	r0, [r7, #12]
 801573c:	f000 fa30 	bl	8015ba0 <_ZNKSt6vectorIP9StatementSaIS1_EE4sizeEv>
 8015740:	4602      	mov	r2, r0
 8015742:	697b      	ldr	r3, [r7, #20]
 8015744:	4293      	cmp	r3, r2
 8015746:	d306      	bcc.n	8015756 <_ZNKSt6vectorIP9StatementSaIS1_EE12_M_check_lenEjPKc+0x7a>
 8015748:	68f8      	ldr	r0, [r7, #12]
 801574a:	f000 fa18 	bl	8015b7e <_ZNKSt6vectorIP9StatementSaIS1_EE8max_sizeEv>
 801574e:	4602      	mov	r2, r0
 8015750:	697b      	ldr	r3, [r7, #20]
 8015752:	4293      	cmp	r3, r2
 8015754:	d904      	bls.n	8015760 <_ZNKSt6vectorIP9StatementSaIS1_EE12_M_check_lenEjPKc+0x84>
 8015756:	68f8      	ldr	r0, [r7, #12]
 8015758:	f000 fa11 	bl	8015b7e <_ZNKSt6vectorIP9StatementSaIS1_EE8max_sizeEv>
 801575c:	4603      	mov	r3, r0
 801575e:	e000      	b.n	8015762 <_ZNKSt6vectorIP9StatementSaIS1_EE12_M_check_lenEjPKc+0x86>
 8015760:	697b      	ldr	r3, [r7, #20]
      }
 8015762:	4618      	mov	r0, r3
 8015764:	371c      	adds	r7, #28
 8015766:	46bd      	mov	sp, r7
 8015768:	bd90      	pop	{r4, r7, pc}

0801576a <_ZN9__gnu_cxxmiIPP9StatementSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>:
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
 801576a:	b590      	push	{r4, r7, lr}
 801576c:	b083      	sub	sp, #12
 801576e:	af00      	add	r7, sp, #0
 8015770:	6078      	str	r0, [r7, #4]
 8015772:	6039      	str	r1, [r7, #0]
    { return __lhs.base() - __rhs.base(); }
 8015774:	6878      	ldr	r0, [r7, #4]
 8015776:	f7ed f9c3 	bl	8002b00 <_ZNK9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEE4baseEv>
 801577a:	4603      	mov	r3, r0
 801577c:	681c      	ldr	r4, [r3, #0]
 801577e:	6838      	ldr	r0, [r7, #0]
 8015780:	f7ed f9be 	bl	8002b00 <_ZNK9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEE4baseEv>
 8015784:	4603      	mov	r3, r0
 8015786:	681b      	ldr	r3, [r3, #0]
 8015788:	1ae3      	subs	r3, r4, r3
 801578a:	109b      	asrs	r3, r3, #2
 801578c:	4618      	mov	r0, r3
 801578e:	370c      	adds	r7, #12
 8015790:	46bd      	mov	sp, r7
 8015792:	bd90      	pop	{r4, r7, pc}

08015794 <_ZNSt12_Vector_baseIP9StatementSaIS1_EE11_M_allocateEj>:
      _M_allocate(size_t __n)
 8015794:	b580      	push	{r7, lr}
 8015796:	b082      	sub	sp, #8
 8015798:	af00      	add	r7, sp, #0
 801579a:	6078      	str	r0, [r7, #4]
 801579c:	6039      	str	r1, [r7, #0]
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 801579e:	683b      	ldr	r3, [r7, #0]
 80157a0:	2b00      	cmp	r3, #0
 80157a2:	d006      	beq.n	80157b2 <_ZNSt12_Vector_baseIP9StatementSaIS1_EE11_M_allocateEj+0x1e>
 80157a4:	687b      	ldr	r3, [r7, #4]
 80157a6:	6839      	ldr	r1, [r7, #0]
 80157a8:	4618      	mov	r0, r3
 80157aa:	f000 fa09 	bl	8015bc0 <_ZNSt16allocator_traitsISaIP9StatementEE8allocateERS2_j>
 80157ae:	4603      	mov	r3, r0
 80157b0:	e000      	b.n	80157b4 <_ZNSt12_Vector_baseIP9StatementSaIS1_EE11_M_allocateEj+0x20>
 80157b2:	2300      	movs	r3, #0
      }
 80157b4:	4618      	mov	r0, r3
 80157b6:	3708      	adds	r7, #8
 80157b8:	46bd      	mov	sp, r7
 80157ba:	bd80      	pop	{r7, pc}

080157bc <_ZNSt6vectorIP9StatementSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
 80157bc:	b590      	push	{r4, r7, lr}
 80157be:	b089      	sub	sp, #36	; 0x24
 80157c0:	af02      	add	r7, sp, #8
 80157c2:	60f8      	str	r0, [r7, #12]
 80157c4:	60b9      	str	r1, [r7, #8]
 80157c6:	607a      	str	r2, [r7, #4]
 80157c8:	603b      	str	r3, [r7, #0]
	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
 80157ca:	f88d 4000 	strb.w	r4, [sp]
 80157ce:	683b      	ldr	r3, [r7, #0]
 80157d0:	687a      	ldr	r2, [r7, #4]
 80157d2:	68b9      	ldr	r1, [r7, #8]
 80157d4:	68f8      	ldr	r0, [r7, #12]
 80157d6:	f000 fa02 	bl	8015bde <_ZNSt6vectorIP9StatementSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>
 80157da:	4603      	mov	r3, r0
      }
 80157dc:	4618      	mov	r0, r3
 80157de:	371c      	adds	r7, #28
 80157e0:	46bd      	mov	sp, r7
 80157e2:	bd90      	pop	{r4, r7, pc}

080157e4 <_ZNK9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEEmiEi>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
 80157e4:	b580      	push	{r7, lr}
 80157e6:	b084      	sub	sp, #16
 80157e8:	af00      	add	r7, sp, #0
 80157ea:	6078      	str	r0, [r7, #4]
 80157ec:	6039      	str	r1, [r7, #0]
      { return __normal_iterator(_M_current - __n); }
 80157ee:	687b      	ldr	r3, [r7, #4]
 80157f0:	681a      	ldr	r2, [r3, #0]
 80157f2:	683b      	ldr	r3, [r7, #0]
 80157f4:	009b      	lsls	r3, r3, #2
 80157f6:	425b      	negs	r3, r3
 80157f8:	4413      	add	r3, r2
 80157fa:	60fb      	str	r3, [r7, #12]
 80157fc:	f107 020c 	add.w	r2, r7, #12
 8015800:	f107 0308 	add.w	r3, r7, #8
 8015804:	4611      	mov	r1, r2
 8015806:	4618      	mov	r0, r3
 8015808:	f7ed f96a 	bl	8002ae0 <_ZN9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 801580c:	68bb      	ldr	r3, [r7, #8]
 801580e:	4618      	mov	r0, r3
 8015810:	3710      	adds	r7, #16
 8015812:	46bd      	mov	sp, r7
 8015814:	bd80      	pop	{r7, pc}

08015816 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRS7_St17integral_constantIjLj0EEEENS0_20__variant_idx_cookieESB_SC_>:
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8015816:	b5b0      	push	{r4, r5, r7, lr}
 8015818:	b084      	sub	sp, #16
 801581a:	af00      	add	r7, sp, #0
 801581c:	60f8      	str	r0, [r7, #12]
 801581e:	60b9      	str	r1, [r7, #8]
 8015820:	713a      	strb	r2, [r7, #4]
 8015822:	68fb      	ldr	r3, [r7, #12]
 8015824:	681b      	ldr	r3, [r3, #0]
		if (this->_M_index == __rhs_index)
 8015826:	7e1b      	ldrb	r3, [r3, #24]
 8015828:	461c      	mov	r4, r3
 801582a:	1d3b      	adds	r3, r7, #4
 801582c:	4618      	mov	r0, r3
 801582e:	f7ef fb5d 	bl	8004eec <_ZNKSt17integral_constantIjLj0EEcvjEv>
 8015832:	4603      	mov	r3, r0
 8015834:	429c      	cmp	r4, r3
 8015836:	bf0c      	ite	eq
 8015838:	2301      	moveq	r3, #1
 801583a:	2300      	movne	r3, #0
 801583c:	b2db      	uxtb	r3, r3
 801583e:	2b00      	cmp	r3, #0
 8015840:	d00e      	beq.n	8015860 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRS7_St17integral_constantIjLj0EEEENS0_20__variant_idx_cookieESB_SC_+0x4a>
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 8015842:	68b8      	ldr	r0, [r7, #8]
 8015844:	f7f2 fca0 	bl	8008188 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
 8015848:	4604      	mov	r4, r0
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 801584a:	68fb      	ldr	r3, [r7, #12]
 801584c:	681b      	ldr	r3, [r3, #0]
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 801584e:	4618      	mov	r0, r3
 8015850:	f000 f819 	bl	8015886 <_ZNSt8__detail9__variant5__getILj0ERNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcOT0_>
 8015854:	4603      	mov	r3, r0
 8015856:	4621      	mov	r1, r4
 8015858:	4618      	mov	r0, r3
 801585a:	f00d fa92 	bl	8022d82 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>
	    return {};
 801585e:	e00d      	b.n	801587c <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRS7_St17integral_constantIjLj0EEEENS0_20__variant_idx_cookieESB_SC_+0x66>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8015860:	68fb      	ldr	r3, [r7, #12]
 8015862:	681b      	ldr	r3, [r3, #0]
		  __variant_cast<_Types...>(*this)
 8015864:	4618      	mov	r0, r3
 8015866:	f7fe fd59 	bl	801431c <_ZSt14__variant_castIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNSt8__detail9__variant17_Move_assign_baseILb0EJS5_ifbEEEEDcOT0_>
 801586a:	4604      	mov	r4, r0
		    .template emplace<__rhs_index>(std::move(__rhs_mem));
 801586c:	68b8      	ldr	r0, [r7, #8]
 801586e:	f7f2 fc8b 	bl	8008188 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
 8015872:	4603      	mov	r3, r0
		  __variant_cast<_Types...>(*this)
 8015874:	4619      	mov	r1, r3
 8015876:	4620      	mov	r0, r4
 8015878:	f7fa fc0c 	bl	8010094 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE7emplaceILj0EJS5_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES6_E4typeEDpT0_EERSB_E4typeEDpOSC_>
	    return {};
 801587c:	462b      	mov	r3, r5
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 801587e:	4618      	mov	r0, r3
 8015880:	3710      	adds	r7, #16
 8015882:	46bd      	mov	sp, r7
 8015884:	bdb0      	pop	{r4, r5, r7, pc}

08015886 <_ZNSt8__detail9__variant5__getILj0ERNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8015886:	b590      	push	{r4, r7, lr}
 8015888:	b083      	sub	sp, #12
 801588a:	af00      	add	r7, sp, #0
 801588c:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 801588e:	6878      	ldr	r0, [r7, #4]
 8015890:	f000 f9b7 	bl	8015c02 <_ZSt7forwardIRNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>
 8015894:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8015896:	4619      	mov	r1, r3
 8015898:	4620      	mov	r0, r4
 801589a:	f7fa fbbd 	bl	8010018 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tILj0EEOT_>
 801589e:	4603      	mov	r3, r0
    }
 80158a0:	4618      	mov	r0, r3
 80158a2:	370c      	adds	r7, #12
 80158a4:	46bd      	mov	sp, r7
 80158a6:	bd90      	pop	{r4, r7, pc}

080158a8 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRiSt17integral_constantIjLj1EEEENS0_20__variant_idx_cookieESB_SC_>:
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 80158a8:	b5b0      	push	{r4, r5, r7, lr}
 80158aa:	b084      	sub	sp, #16
 80158ac:	af00      	add	r7, sp, #0
 80158ae:	60f8      	str	r0, [r7, #12]
 80158b0:	60b9      	str	r1, [r7, #8]
 80158b2:	713a      	strb	r2, [r7, #4]
 80158b4:	68fb      	ldr	r3, [r7, #12]
 80158b6:	681b      	ldr	r3, [r3, #0]
		if (this->_M_index == __rhs_index)
 80158b8:	7e1b      	ldrb	r3, [r3, #24]
 80158ba:	461c      	mov	r4, r3
 80158bc:	1d3b      	adds	r3, r7, #4
 80158be:	4618      	mov	r0, r3
 80158c0:	f7ef fb63 	bl	8004f8a <_ZNKSt17integral_constantIjLj1EEcvjEv>
 80158c4:	4603      	mov	r3, r0
 80158c6:	429c      	cmp	r4, r3
 80158c8:	bf0c      	ite	eq
 80158ca:	2301      	moveq	r3, #1
 80158cc:	2300      	movne	r3, #0
 80158ce:	b2db      	uxtb	r3, r3
 80158d0:	2b00      	cmp	r3, #0
 80158d2:	d00c      	beq.n	80158ee <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRiSt17integral_constantIjLj1EEEENS0_20__variant_idx_cookieESB_SC_+0x46>
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 80158d4:	68b8      	ldr	r0, [r7, #8]
 80158d6:	f7f2 fbeb 	bl	80080b0 <_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_>
 80158da:	4603      	mov	r3, r0
 80158dc:	681c      	ldr	r4, [r3, #0]
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 80158de:	68fb      	ldr	r3, [r7, #12]
 80158e0:	681b      	ldr	r3, [r3, #0]
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 80158e2:	4618      	mov	r0, r3
 80158e4:	f000 f816 	bl	8015914 <_ZNSt8__detail9__variant5__getILj1ERNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcOT0_>
 80158e8:	4603      	mov	r3, r0
 80158ea:	601c      	str	r4, [r3, #0]
	    return {};
 80158ec:	e00d      	b.n	801590a <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRiSt17integral_constantIjLj1EEEENS0_20__variant_idx_cookieESB_SC_+0x62>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 80158ee:	68fb      	ldr	r3, [r7, #12]
 80158f0:	681b      	ldr	r3, [r3, #0]
		  __variant_cast<_Types...>(*this)
 80158f2:	4618      	mov	r0, r3
 80158f4:	f7fe fd12 	bl	801431c <_ZSt14__variant_castIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNSt8__detail9__variant17_Move_assign_baseILb0EJS5_ifbEEEEDcOT0_>
 80158f8:	4604      	mov	r4, r0
		    .template emplace<__rhs_index>(std::move(__rhs_mem));
 80158fa:	68b8      	ldr	r0, [r7, #8]
 80158fc:	f7f2 fbd8 	bl	80080b0 <_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_>
 8015900:	4603      	mov	r3, r0
		  __variant_cast<_Types...>(*this)
 8015902:	4619      	mov	r1, r3
 8015904:	4620      	mov	r0, r4
 8015906:	f7fa fc2f 	bl	8010168 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE7emplaceILj1EJiEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES6_E4typeEDpT0_EERSB_E4typeEDpOSC_>
	    return {};
 801590a:	462b      	mov	r3, r5
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 801590c:	4618      	mov	r0, r3
 801590e:	3710      	adds	r7, #16
 8015910:	46bd      	mov	sp, r7
 8015912:	bdb0      	pop	{r4, r5, r7, pc}

08015914 <_ZNSt8__detail9__variant5__getILj1ERNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8015914:	b590      	push	{r4, r7, lr}
 8015916:	b083      	sub	sp, #12
 8015918:	af00      	add	r7, sp, #0
 801591a:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 801591c:	6878      	ldr	r0, [r7, #4]
 801591e:	f000 f970 	bl	8015c02 <_ZSt7forwardIRNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>
 8015922:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8015924:	4619      	mov	r1, r3
 8015926:	4620      	mov	r0, r4
 8015928:	f7fa fbde 	bl	80100e8 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 801592c:	4603      	mov	r3, r0
    }
 801592e:	4618      	mov	r0, r3
 8015930:	370c      	adds	r7, #12
 8015932:	46bd      	mov	sp, r7
 8015934:	bd90      	pop	{r4, r7, pc}

08015936 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRfSt17integral_constantIjLj2EEEENS0_20__variant_idx_cookieESB_SC_>:
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8015936:	b5b0      	push	{r4, r5, r7, lr}
 8015938:	b084      	sub	sp, #16
 801593a:	af00      	add	r7, sp, #0
 801593c:	60f8      	str	r0, [r7, #12]
 801593e:	60b9      	str	r1, [r7, #8]
 8015940:	713a      	strb	r2, [r7, #4]
 8015942:	68fb      	ldr	r3, [r7, #12]
 8015944:	681b      	ldr	r3, [r3, #0]
		if (this->_M_index == __rhs_index)
 8015946:	7e1b      	ldrb	r3, [r3, #24]
 8015948:	461c      	mov	r4, r3
 801594a:	1d3b      	adds	r3, r7, #4
 801594c:	4618      	mov	r0, r3
 801594e:	f7ef fb6c 	bl	800502a <_ZNKSt17integral_constantIjLj2EEcvjEv>
 8015952:	4603      	mov	r3, r0
 8015954:	429c      	cmp	r4, r3
 8015956:	bf0c      	ite	eq
 8015958:	2301      	moveq	r3, #1
 801595a:	2300      	movne	r3, #0
 801595c:	b2db      	uxtb	r3, r3
 801595e:	2b00      	cmp	r3, #0
 8015960:	d00c      	beq.n	801597c <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRfSt17integral_constantIjLj2EEEENS0_20__variant_idx_cookieESB_SC_+0x46>
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 8015962:	68b8      	ldr	r0, [r7, #8]
 8015964:	f7f2 fbc8 	bl	80080f8 <_ZSt4moveIRfEONSt16remove_referenceIT_E4typeEOS2_>
 8015968:	4603      	mov	r3, r0
 801596a:	681c      	ldr	r4, [r3, #0]
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 801596c:	68fb      	ldr	r3, [r7, #12]
 801596e:	681b      	ldr	r3, [r3, #0]
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 8015970:	4618      	mov	r0, r3
 8015972:	f000 f816 	bl	80159a2 <_ZNSt8__detail9__variant5__getILj2ERNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcOT0_>
 8015976:	4603      	mov	r3, r0
 8015978:	601c      	str	r4, [r3, #0]
	    return {};
 801597a:	e00d      	b.n	8015998 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRfSt17integral_constantIjLj2EEEENS0_20__variant_idx_cookieESB_SC_+0x62>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 801597c:	68fb      	ldr	r3, [r7, #12]
 801597e:	681b      	ldr	r3, [r3, #0]
		  __variant_cast<_Types...>(*this)
 8015980:	4618      	mov	r0, r3
 8015982:	f7fe fccb 	bl	801431c <_ZSt14__variant_castIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNSt8__detail9__variant17_Move_assign_baseILb0EJS5_ifbEEEEDcOT0_>
 8015986:	4604      	mov	r4, r0
		    .template emplace<__rhs_index>(std::move(__rhs_mem));
 8015988:	68b8      	ldr	r0, [r7, #8]
 801598a:	f7f2 fbb5 	bl	80080f8 <_ZSt4moveIRfEONSt16remove_referenceIT_E4typeEOS2_>
 801598e:	4603      	mov	r3, r0
		  __variant_cast<_Types...>(*this)
 8015990:	4619      	mov	r1, r3
 8015992:	4620      	mov	r0, r4
 8015994:	f7fa fc64 	bl	8010260 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE7emplaceILj2EJfEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES6_E4typeEDpT0_EERSB_E4typeEDpOSC_>
	    return {};
 8015998:	462b      	mov	r3, r5
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 801599a:	4618      	mov	r0, r3
 801599c:	3710      	adds	r7, #16
 801599e:	46bd      	mov	sp, r7
 80159a0:	bdb0      	pop	{r4, r5, r7, pc}

080159a2 <_ZNSt8__detail9__variant5__getILj2ERNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 80159a2:	b590      	push	{r4, r7, lr}
 80159a4:	b083      	sub	sp, #12
 80159a6:	af00      	add	r7, sp, #0
 80159a8:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 80159aa:	6878      	ldr	r0, [r7, #4]
 80159ac:	f000 f929 	bl	8015c02 <_ZSt7forwardIRNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>
 80159b0:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 80159b2:	4619      	mov	r1, r3
 80159b4:	4620      	mov	r0, r4
 80159b6:	f7fa fc13 	bl	80101e0 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80159ba:	4603      	mov	r3, r0
    }
 80159bc:	4618      	mov	r0, r3
 80159be:	370c      	adds	r7, #12
 80159c0:	46bd      	mov	sp, r7
 80159c2:	bd90      	pop	{r4, r7, pc}

080159c4 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRbSt17integral_constantIjLj3EEEENS0_20__variant_idx_cookieESB_SC_>:
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 80159c4:	b5b0      	push	{r4, r5, r7, lr}
 80159c6:	b084      	sub	sp, #16
 80159c8:	af00      	add	r7, sp, #0
 80159ca:	60f8      	str	r0, [r7, #12]
 80159cc:	60b9      	str	r1, [r7, #8]
 80159ce:	713a      	strb	r2, [r7, #4]
 80159d0:	68fb      	ldr	r3, [r7, #12]
 80159d2:	681b      	ldr	r3, [r3, #0]
		if (this->_M_index == __rhs_index)
 80159d4:	7e1b      	ldrb	r3, [r3, #24]
 80159d6:	461c      	mov	r4, r3
 80159d8:	1d3b      	adds	r3, r7, #4
 80159da:	4618      	mov	r0, r3
 80159dc:	f7ef fb89 	bl	80050f2 <_ZNKSt17integral_constantIjLj3EEcvjEv>
 80159e0:	4603      	mov	r3, r0
 80159e2:	429c      	cmp	r4, r3
 80159e4:	bf0c      	ite	eq
 80159e6:	2301      	moveq	r3, #1
 80159e8:	2300      	movne	r3, #0
 80159ea:	b2db      	uxtb	r3, r3
 80159ec:	2b00      	cmp	r3, #0
 80159ee:	d00d      	beq.n	8015a0c <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRbSt17integral_constantIjLj3EEEENS0_20__variant_idx_cookieESB_SC_+0x48>
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 80159f0:	68b8      	ldr	r0, [r7, #8]
 80159f2:	f7f2 fba5 	bl	8008140 <_ZSt4moveIRbEONSt16remove_referenceIT_E4typeEOS2_>
 80159f6:	4603      	mov	r3, r0
 80159f8:	781c      	ldrb	r4, [r3, #0]
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 80159fa:	68fb      	ldr	r3, [r7, #12]
 80159fc:	681b      	ldr	r3, [r3, #0]
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 80159fe:	4618      	mov	r0, r3
 8015a00:	f000 f817 	bl	8015a32 <_ZNSt8__detail9__variant5__getILj3ERNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcOT0_>
 8015a04:	4603      	mov	r3, r0
 8015a06:	4622      	mov	r2, r4
 8015a08:	701a      	strb	r2, [r3, #0]
	    return {};
 8015a0a:	e00d      	b.n	8015a28 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRbSt17integral_constantIjLj3EEEENS0_20__variant_idx_cookieESB_SC_+0x64>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8015a0c:	68fb      	ldr	r3, [r7, #12]
 8015a0e:	681b      	ldr	r3, [r3, #0]
		  __variant_cast<_Types...>(*this)
 8015a10:	4618      	mov	r0, r3
 8015a12:	f7fe fc83 	bl	801431c <_ZSt14__variant_castIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNSt8__detail9__variant17_Move_assign_baseILb0EJS5_ifbEEEEDcOT0_>
 8015a16:	4604      	mov	r4, r0
		    .template emplace<__rhs_index>(std::move(__rhs_mem));
 8015a18:	68b8      	ldr	r0, [r7, #8]
 8015a1a:	f7f2 fb91 	bl	8008140 <_ZSt4moveIRbEONSt16remove_referenceIT_E4typeEOS2_>
 8015a1e:	4603      	mov	r3, r0
		  __variant_cast<_Types...>(*this)
 8015a20:	4619      	mov	r1, r3
 8015a22:	4620      	mov	r0, r4
 8015a24:	f000 f8f8 	bl	8015c18 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE7emplaceILj3EJbEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES6_E4typeEDpT0_EERSB_E4typeEDpOSC_>
	    return {};
 8015a28:	462b      	mov	r3, r5
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8015a2a:	4618      	mov	r0, r3
 8015a2c:	3710      	adds	r7, #16
 8015a2e:	46bd      	mov	sp, r7
 8015a30:	bdb0      	pop	{r4, r5, r7, pc}

08015a32 <_ZNSt8__detail9__variant5__getILj3ERNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8015a32:	b590      	push	{r4, r7, lr}
 8015a34:	b083      	sub	sp, #12
 8015a36:	af00      	add	r7, sp, #0
 8015a38:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8015a3a:	6878      	ldr	r0, [r7, #4]
 8015a3c:	f000 f8e1 	bl	8015c02 <_ZSt7forwardIRNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>
 8015a40:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8015a42:	4619      	mov	r1, r3
 8015a44:	4620      	mov	r0, r4
 8015a46:	f7fb f82e 	bl	8010aa6 <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8015a4a:	4603      	mov	r3, r0
    }
 8015a4c:	4618      	mov	r0, r3
 8015a4e:	370c      	adds	r7, #12
 8015a50:	46bd      	mov	sp, r7
 8015a52:	bd90      	pop	{r4, r7, pc}

08015a54 <_ZNKSt6vectorIP10ExpressionSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
 8015a54:	b580      	push	{r7, lr}
 8015a56:	b082      	sub	sp, #8
 8015a58:	af00      	add	r7, sp, #0
 8015a5a:	6078      	str	r0, [r7, #4]
      { return _S_max_size(_M_get_Tp_allocator()); }
 8015a5c:	687b      	ldr	r3, [r7, #4]
 8015a5e:	4618      	mov	r0, r3
 8015a60:	f7f8 fc1d 	bl	800e29e <_ZNKSt12_Vector_baseIP10ExpressionSaIS1_EE19_M_get_Tp_allocatorEv>
 8015a64:	4603      	mov	r3, r0
 8015a66:	4618      	mov	r0, r3
 8015a68:	f000 f8ef 	bl	8015c4a <_ZNSt6vectorIP10ExpressionSaIS1_EE11_S_max_sizeERKS2_>
 8015a6c:	4603      	mov	r3, r0
 8015a6e:	4618      	mov	r0, r3
 8015a70:	3708      	adds	r7, #8
 8015a72:	46bd      	mov	sp, r7
 8015a74:	bd80      	pop	{r7, pc}

08015a76 <_ZSt3maxIjERKT_S2_S2_>:
    max(const _Tp& __a, const _Tp& __b)
 8015a76:	b480      	push	{r7}
 8015a78:	b083      	sub	sp, #12
 8015a7a:	af00      	add	r7, sp, #0
 8015a7c:	6078      	str	r0, [r7, #4]
 8015a7e:	6039      	str	r1, [r7, #0]
      if (__a < __b)
 8015a80:	687b      	ldr	r3, [r7, #4]
 8015a82:	681a      	ldr	r2, [r3, #0]
 8015a84:	683b      	ldr	r3, [r7, #0]
 8015a86:	681b      	ldr	r3, [r3, #0]
 8015a88:	429a      	cmp	r2, r3
 8015a8a:	d201      	bcs.n	8015a90 <_ZSt3maxIjERKT_S2_S2_+0x1a>
	return __b;
 8015a8c:	683b      	ldr	r3, [r7, #0]
 8015a8e:	e000      	b.n	8015a92 <_ZSt3maxIjERKT_S2_S2_+0x1c>
      return __a;
 8015a90:	687b      	ldr	r3, [r7, #4]
    }
 8015a92:	4618      	mov	r0, r3
 8015a94:	370c      	adds	r7, #12
 8015a96:	46bd      	mov	sp, r7
 8015a98:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015a9c:	4770      	bx	lr

08015a9e <_ZNSt6vectorIP10ExpressionSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>:
      _S_do_relocate(pointer __first, pointer __last, pointer __result,
 8015a9e:	b580      	push	{r7, lr}
 8015aa0:	b084      	sub	sp, #16
 8015aa2:	af00      	add	r7, sp, #0
 8015aa4:	60f8      	str	r0, [r7, #12]
 8015aa6:	60b9      	str	r1, [r7, #8]
 8015aa8:	607a      	str	r2, [r7, #4]
 8015aaa:	603b      	str	r3, [r7, #0]
	return std::__relocate_a(__first, __last, __result, __alloc);
 8015aac:	683b      	ldr	r3, [r7, #0]
 8015aae:	687a      	ldr	r2, [r7, #4]
 8015ab0:	68b9      	ldr	r1, [r7, #8]
 8015ab2:	68f8      	ldr	r0, [r7, #12]
 8015ab4:	f000 f8e3 	bl	8015c7e <_ZSt12__relocate_aIPP10ExpressionS2_SaIS1_EET0_T_S5_S4_RT1_>
 8015ab8:	4603      	mov	r3, r0
      }
 8015aba:	4618      	mov	r0, r3
 8015abc:	3710      	adds	r7, #16
 8015abe:	46bd      	mov	sp, r7
 8015ac0:	bd80      	pop	{r7, pc}

08015ac2 <_ZNKSt6vectorIP4BodySaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
 8015ac2:	b580      	push	{r7, lr}
 8015ac4:	b082      	sub	sp, #8
 8015ac6:	af00      	add	r7, sp, #0
 8015ac8:	6078      	str	r0, [r7, #4]
      { return _S_max_size(_M_get_Tp_allocator()); }
 8015aca:	687b      	ldr	r3, [r7, #4]
 8015acc:	4618      	mov	r0, r3
 8015ace:	f000 f90d 	bl	8015cec <_ZNKSt12_Vector_baseIP4BodySaIS1_EE19_M_get_Tp_allocatorEv>
 8015ad2:	4603      	mov	r3, r0
 8015ad4:	4618      	mov	r0, r3
 8015ad6:	f000 f8ef 	bl	8015cb8 <_ZNSt6vectorIP4BodySaIS1_EE11_S_max_sizeERKS2_>
 8015ada:	4603      	mov	r3, r0
 8015adc:	4618      	mov	r0, r3
 8015ade:	3708      	adds	r7, #8
 8015ae0:	46bd      	mov	sp, r7
 8015ae2:	bd80      	pop	{r7, pc}

08015ae4 <_ZNSt16allocator_traitsISaIP4BodyEE8allocateERS2_j>:
      allocate(allocator_type& __a, size_type __n)
 8015ae4:	b580      	push	{r7, lr}
 8015ae6:	b082      	sub	sp, #8
 8015ae8:	af00      	add	r7, sp, #0
 8015aea:	6078      	str	r0, [r7, #4]
 8015aec:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 8015aee:	2200      	movs	r2, #0
 8015af0:	6839      	ldr	r1, [r7, #0]
 8015af2:	6878      	ldr	r0, [r7, #4]
 8015af4:	f000 f905 	bl	8015d02 <_ZN9__gnu_cxx13new_allocatorIP4BodyE8allocateEjPKv>
 8015af8:	4603      	mov	r3, r0
 8015afa:	4618      	mov	r0, r3
 8015afc:	3708      	adds	r7, #8
 8015afe:	46bd      	mov	sp, r7
 8015b00:	bd80      	pop	{r7, pc}

08015b02 <_ZNSt6vectorIP4BodySaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>:
      _S_do_relocate(pointer __first, pointer __last, pointer __result,
 8015b02:	b580      	push	{r7, lr}
 8015b04:	b084      	sub	sp, #16
 8015b06:	af00      	add	r7, sp, #0
 8015b08:	60f8      	str	r0, [r7, #12]
 8015b0a:	60b9      	str	r1, [r7, #8]
 8015b0c:	607a      	str	r2, [r7, #4]
 8015b0e:	603b      	str	r3, [r7, #0]
	return std::__relocate_a(__first, __last, __result, __alloc);
 8015b10:	683b      	ldr	r3, [r7, #0]
 8015b12:	687a      	ldr	r2, [r7, #4]
 8015b14:	68b9      	ldr	r1, [r7, #8]
 8015b16:	68f8      	ldr	r0, [r7, #12]
 8015b18:	f000 f912 	bl	8015d40 <_ZSt12__relocate_aIPP4BodyS2_SaIS1_EET0_T_S5_S4_RT1_>
 8015b1c:	4603      	mov	r3, r0
      }
 8015b1e:	4618      	mov	r0, r3
 8015b20:	3710      	adds	r7, #16
 8015b22:	46bd      	mov	sp, r7
 8015b24:	bd80      	pop	{r7, pc}

08015b26 <_ZSt11__addressofIP10AssignmentEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 8015b26:	b480      	push	{r7}
 8015b28:	b083      	sub	sp, #12
 8015b2a:	af00      	add	r7, sp, #0
 8015b2c:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 8015b2e:	687b      	ldr	r3, [r7, #4]
 8015b30:	4618      	mov	r0, r3
 8015b32:	370c      	adds	r7, #12
 8015b34:	46bd      	mov	sp, r7
 8015b36:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015b3a:	4770      	bx	lr

08015b3c <_ZSt11__addressofIP11Method_callEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 8015b3c:	b480      	push	{r7}
 8015b3e:	b083      	sub	sp, #12
 8015b40:	af00      	add	r7, sp, #0
 8015b42:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 8015b44:	687b      	ldr	r3, [r7, #4]
 8015b46:	4618      	mov	r0, r3
 8015b48:	370c      	adds	r7, #12
 8015b4a:	46bd      	mov	sp, r7
 8015b4c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015b50:	4770      	bx	lr

08015b52 <_ZSt11__addressofIP15While_statementEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 8015b52:	b480      	push	{r7}
 8015b54:	b083      	sub	sp, #12
 8015b56:	af00      	add	r7, sp, #0
 8015b58:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 8015b5a:	687b      	ldr	r3, [r7, #4]
 8015b5c:	4618      	mov	r0, r3
 8015b5e:	370c      	adds	r7, #12
 8015b60:	46bd      	mov	sp, r7
 8015b62:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015b66:	4770      	bx	lr

08015b68 <_ZSt11__addressofIP12If_statementEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 8015b68:	b480      	push	{r7}
 8015b6a:	b083      	sub	sp, #12
 8015b6c:	af00      	add	r7, sp, #0
 8015b6e:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 8015b70:	687b      	ldr	r3, [r7, #4]
 8015b72:	4618      	mov	r0, r3
 8015b74:	370c      	adds	r7, #12
 8015b76:	46bd      	mov	sp, r7
 8015b78:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015b7c:	4770      	bx	lr

08015b7e <_ZNKSt6vectorIP9StatementSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
 8015b7e:	b580      	push	{r7, lr}
 8015b80:	b082      	sub	sp, #8
 8015b82:	af00      	add	r7, sp, #0
 8015b84:	6078      	str	r0, [r7, #4]
      { return _S_max_size(_M_get_Tp_allocator()); }
 8015b86:	687b      	ldr	r3, [r7, #4]
 8015b88:	4618      	mov	r0, r3
 8015b8a:	f000 f910 	bl	8015dae <_ZNKSt12_Vector_baseIP9StatementSaIS1_EE19_M_get_Tp_allocatorEv>
 8015b8e:	4603      	mov	r3, r0
 8015b90:	4618      	mov	r0, r3
 8015b92:	f000 f8f2 	bl	8015d7a <_ZNSt6vectorIP9StatementSaIS1_EE11_S_max_sizeERKS2_>
 8015b96:	4603      	mov	r3, r0
 8015b98:	4618      	mov	r0, r3
 8015b9a:	3708      	adds	r7, #8
 8015b9c:	46bd      	mov	sp, r7
 8015b9e:	bd80      	pop	{r7, pc}

08015ba0 <_ZNKSt6vectorIP9StatementSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 8015ba0:	b480      	push	{r7}
 8015ba2:	b083      	sub	sp, #12
 8015ba4:	af00      	add	r7, sp, #0
 8015ba6:	6078      	str	r0, [r7, #4]
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 8015ba8:	687b      	ldr	r3, [r7, #4]
 8015baa:	685a      	ldr	r2, [r3, #4]
 8015bac:	687b      	ldr	r3, [r7, #4]
 8015bae:	681b      	ldr	r3, [r3, #0]
 8015bb0:	1ad3      	subs	r3, r2, r3
 8015bb2:	109b      	asrs	r3, r3, #2
 8015bb4:	4618      	mov	r0, r3
 8015bb6:	370c      	adds	r7, #12
 8015bb8:	46bd      	mov	sp, r7
 8015bba:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015bbe:	4770      	bx	lr

08015bc0 <_ZNSt16allocator_traitsISaIP9StatementEE8allocateERS2_j>:
      allocate(allocator_type& __a, size_type __n)
 8015bc0:	b580      	push	{r7, lr}
 8015bc2:	b082      	sub	sp, #8
 8015bc4:	af00      	add	r7, sp, #0
 8015bc6:	6078      	str	r0, [r7, #4]
 8015bc8:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 8015bca:	2200      	movs	r2, #0
 8015bcc:	6839      	ldr	r1, [r7, #0]
 8015bce:	6878      	ldr	r0, [r7, #4]
 8015bd0:	f000 f8f8 	bl	8015dc4 <_ZN9__gnu_cxx13new_allocatorIP9StatementE8allocateEjPKv>
 8015bd4:	4603      	mov	r3, r0
 8015bd6:	4618      	mov	r0, r3
 8015bd8:	3708      	adds	r7, #8
 8015bda:	46bd      	mov	sp, r7
 8015bdc:	bd80      	pop	{r7, pc}

08015bde <_ZNSt6vectorIP9StatementSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>:
      _S_do_relocate(pointer __first, pointer __last, pointer __result,
 8015bde:	b580      	push	{r7, lr}
 8015be0:	b084      	sub	sp, #16
 8015be2:	af00      	add	r7, sp, #0
 8015be4:	60f8      	str	r0, [r7, #12]
 8015be6:	60b9      	str	r1, [r7, #8]
 8015be8:	607a      	str	r2, [r7, #4]
 8015bea:	603b      	str	r3, [r7, #0]
	return std::__relocate_a(__first, __last, __result, __alloc);
 8015bec:	683b      	ldr	r3, [r7, #0]
 8015bee:	687a      	ldr	r2, [r7, #4]
 8015bf0:	68b9      	ldr	r1, [r7, #8]
 8015bf2:	68f8      	ldr	r0, [r7, #12]
 8015bf4:	f000 f905 	bl	8015e02 <_ZSt12__relocate_aIPP9StatementS2_SaIS1_EET0_T_S5_S4_RT1_>
 8015bf8:	4603      	mov	r3, r0
      }
 8015bfa:	4618      	mov	r0, r3
 8015bfc:	3710      	adds	r7, #16
 8015bfe:	46bd      	mov	sp, r7
 8015c00:	bd80      	pop	{r7, pc}

08015c02 <_ZSt7forwardIRNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8015c02:	b480      	push	{r7}
 8015c04:	b083      	sub	sp, #12
 8015c06:	af00      	add	r7, sp, #0
 8015c08:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8015c0a:	687b      	ldr	r3, [r7, #4]
 8015c0c:	4618      	mov	r0, r3
 8015c0e:	370c      	adds	r7, #12
 8015c10:	46bd      	mov	sp, r7
 8015c12:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015c16:	4770      	bx	lr

08015c18 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE7emplaceILj3EJbEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES6_E4typeEDpT0_EERSB_E4typeEDpOSC_>:
	emplace(_Args&&... __args)
 8015c18:	b580      	push	{r7, lr}
 8015c1a:	b082      	sub	sp, #8
 8015c1c:	af00      	add	r7, sp, #0
 8015c1e:	6078      	str	r0, [r7, #4]
 8015c20:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 8015c22:	687b      	ldr	r3, [r7, #4]
 8015c24:	4618      	mov	r0, r3
 8015c26:	f7fa f902 	bl	800fe2e <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 8015c2a:	6838      	ldr	r0, [r7, #0]
 8015c2c:	f7f2 fd62 	bl	80086f4 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
 8015c30:	4603      	mov	r3, r0
 8015c32:	4619      	mov	r1, r3
 8015c34:	6878      	ldr	r0, [r7, #4]
 8015c36:	f000 f901 	bl	8015e3c <_ZSt28__variant_construct_by_indexILj3ESt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEJbEEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 8015c3a:	6878      	ldr	r0, [r7, #4]
 8015c3c:	f000 f91e 	bl	8015e7c <_ZSt3getILj3EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>
 8015c40:	4603      	mov	r3, r0
	}
 8015c42:	4618      	mov	r0, r3
 8015c44:	3708      	adds	r7, #8
 8015c46:	46bd      	mov	sp, r7
 8015c48:	bd80      	pop	{r7, pc}

08015c4a <_ZNSt6vectorIP10ExpressionSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
 8015c4a:	b580      	push	{r7, lr}
 8015c4c:	b084      	sub	sp, #16
 8015c4e:	af00      	add	r7, sp, #0
 8015c50:	6078      	str	r0, [r7, #4]
	const size_t __diffmax
 8015c52:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
 8015c56:	60fb      	str	r3, [r7, #12]
	const size_t __allocmax = _Alloc_traits::max_size(__a);
 8015c58:	6878      	ldr	r0, [r7, #4]
 8015c5a:	f000 f93f 	bl	8015edc <_ZNSt16allocator_traitsISaIP10ExpressionEE8max_sizeERKS2_>
 8015c5e:	4603      	mov	r3, r0
 8015c60:	60bb      	str	r3, [r7, #8]
	return (std::min)(__diffmax, __allocmax);
 8015c62:	f107 0208 	add.w	r2, r7, #8
 8015c66:	f107 030c 	add.w	r3, r7, #12
 8015c6a:	4611      	mov	r1, r2
 8015c6c:	4618      	mov	r0, r3
 8015c6e:	f000 f921 	bl	8015eb4 <_ZSt3minIjERKT_S2_S2_>
 8015c72:	4603      	mov	r3, r0
 8015c74:	681b      	ldr	r3, [r3, #0]
      }
 8015c76:	4618      	mov	r0, r3
 8015c78:	3710      	adds	r7, #16
 8015c7a:	46bd      	mov	sp, r7
 8015c7c:	bd80      	pop	{r7, pc}

08015c7e <_ZSt12__relocate_aIPP10ExpressionS2_SaIS1_EET0_T_S5_S4_RT1_>:
    }

  template <typename _InputIterator, typename _ForwardIterator,
	    typename _Allocator>
    inline _ForwardIterator
    __relocate_a(_InputIterator __first, _InputIterator __last,
 8015c7e:	b5b0      	push	{r4, r5, r7, lr}
 8015c80:	b084      	sub	sp, #16
 8015c82:	af00      	add	r7, sp, #0
 8015c84:	60f8      	str	r0, [r7, #12]
 8015c86:	60b9      	str	r1, [r7, #8]
 8015c88:	607a      	str	r2, [r7, #4]
 8015c8a:	603b      	str	r3, [r7, #0]
		 _ForwardIterator __result, _Allocator& __alloc)
    noexcept(noexcept(__relocate_a_1(std::__niter_base(__first),
				     std::__niter_base(__last),
				     std::__niter_base(__result), __alloc)))
    {
      return __relocate_a_1(std::__niter_base(__first),
 8015c8c:	68f8      	ldr	r0, [r7, #12]
 8015c8e:	f7f8 fea3 	bl	800e9d8 <_ZSt12__niter_baseIPP10ExpressionET_S3_>
 8015c92:	4604      	mov	r4, r0
 8015c94:	68b8      	ldr	r0, [r7, #8]
 8015c96:	f7f8 fe9f 	bl	800e9d8 <_ZSt12__niter_baseIPP10ExpressionET_S3_>
 8015c9a:	4605      	mov	r5, r0
 8015c9c:	6878      	ldr	r0, [r7, #4]
 8015c9e:	f7f8 fe9b 	bl	800e9d8 <_ZSt12__niter_baseIPP10ExpressionET_S3_>
 8015ca2:	4602      	mov	r2, r0
 8015ca4:	683b      	ldr	r3, [r7, #0]
 8015ca6:	4629      	mov	r1, r5
 8015ca8:	4620      	mov	r0, r4
 8015caa:	f000 f923 	bl	8015ef4 <_ZSt14__relocate_a_1IP10ExpressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
 8015cae:	4603      	mov	r3, r0
			    std::__niter_base(__last),
			    std::__niter_base(__result), __alloc);
    }
 8015cb0:	4618      	mov	r0, r3
 8015cb2:	3710      	adds	r7, #16
 8015cb4:	46bd      	mov	sp, r7
 8015cb6:	bdb0      	pop	{r4, r5, r7, pc}

08015cb8 <_ZNSt6vectorIP4BodySaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
 8015cb8:	b580      	push	{r7, lr}
 8015cba:	b084      	sub	sp, #16
 8015cbc:	af00      	add	r7, sp, #0
 8015cbe:	6078      	str	r0, [r7, #4]
	const size_t __diffmax
 8015cc0:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
 8015cc4:	60fb      	str	r3, [r7, #12]
	const size_t __allocmax = _Alloc_traits::max_size(__a);
 8015cc6:	6878      	ldr	r0, [r7, #4]
 8015cc8:	f000 f932 	bl	8015f30 <_ZNSt16allocator_traitsISaIP4BodyEE8max_sizeERKS2_>
 8015ccc:	4603      	mov	r3, r0
 8015cce:	60bb      	str	r3, [r7, #8]
	return (std::min)(__diffmax, __allocmax);
 8015cd0:	f107 0208 	add.w	r2, r7, #8
 8015cd4:	f107 030c 	add.w	r3, r7, #12
 8015cd8:	4611      	mov	r1, r2
 8015cda:	4618      	mov	r0, r3
 8015cdc:	f000 f8ea 	bl	8015eb4 <_ZSt3minIjERKT_S2_S2_>
 8015ce0:	4603      	mov	r3, r0
 8015ce2:	681b      	ldr	r3, [r3, #0]
      }
 8015ce4:	4618      	mov	r0, r3
 8015ce6:	3710      	adds	r7, #16
 8015ce8:	46bd      	mov	sp, r7
 8015cea:	bd80      	pop	{r7, pc}

08015cec <_ZNKSt12_Vector_baseIP4BodySaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 8015cec:	b480      	push	{r7}
 8015cee:	b083      	sub	sp, #12
 8015cf0:	af00      	add	r7, sp, #0
 8015cf2:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 8015cf4:	687b      	ldr	r3, [r7, #4]
 8015cf6:	4618      	mov	r0, r3
 8015cf8:	370c      	adds	r7, #12
 8015cfa:	46bd      	mov	sp, r7
 8015cfc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015d00:	4770      	bx	lr

08015d02 <_ZN9__gnu_cxx13new_allocatorIP4BodyE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 8015d02:	b580      	push	{r7, lr}
 8015d04:	b084      	sub	sp, #16
 8015d06:	af00      	add	r7, sp, #0
 8015d08:	60f8      	str	r0, [r7, #12]
 8015d0a:	60b9      	str	r1, [r7, #8]
 8015d0c:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 8015d0e:	68f8      	ldr	r0, [r7, #12]
 8015d10:	f000 f91a 	bl	8015f48 <_ZNK9__gnu_cxx13new_allocatorIP4BodyE8max_sizeEv>
 8015d14:	4602      	mov	r2, r0
 8015d16:	68bb      	ldr	r3, [r7, #8]
 8015d18:	4293      	cmp	r3, r2
 8015d1a:	bf8c      	ite	hi
 8015d1c:	2301      	movhi	r3, #1
 8015d1e:	2300      	movls	r3, #0
 8015d20:	b2db      	uxtb	r3, r3
 8015d22:	2b00      	cmp	r3, #0
 8015d24:	d001      	beq.n	8015d2a <_ZN9__gnu_cxx13new_allocatorIP4BodyE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 8015d26:	f00c fe43 	bl	80229b0 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 8015d2a:	68bb      	ldr	r3, [r7, #8]
 8015d2c:	009b      	lsls	r3, r3, #2
 8015d2e:	4618      	mov	r0, r3
 8015d30:	f00c fd79 	bl	8022826 <_Znwj>
 8015d34:	4603      	mov	r3, r0
 8015d36:	bf00      	nop
      }
 8015d38:	4618      	mov	r0, r3
 8015d3a:	3710      	adds	r7, #16
 8015d3c:	46bd      	mov	sp, r7
 8015d3e:	bd80      	pop	{r7, pc}

08015d40 <_ZSt12__relocate_aIPP4BodyS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
 8015d40:	b5b0      	push	{r4, r5, r7, lr}
 8015d42:	b084      	sub	sp, #16
 8015d44:	af00      	add	r7, sp, #0
 8015d46:	60f8      	str	r0, [r7, #12]
 8015d48:	60b9      	str	r1, [r7, #8]
 8015d4a:	607a      	str	r2, [r7, #4]
 8015d4c:	603b      	str	r3, [r7, #0]
      return __relocate_a_1(std::__niter_base(__first),
 8015d4e:	68f8      	ldr	r0, [r7, #12]
 8015d50:	f000 f906 	bl	8015f60 <_ZSt12__niter_baseIPP4BodyET_S3_>
 8015d54:	4604      	mov	r4, r0
 8015d56:	68b8      	ldr	r0, [r7, #8]
 8015d58:	f000 f902 	bl	8015f60 <_ZSt12__niter_baseIPP4BodyET_S3_>
 8015d5c:	4605      	mov	r5, r0
 8015d5e:	6878      	ldr	r0, [r7, #4]
 8015d60:	f000 f8fe 	bl	8015f60 <_ZSt12__niter_baseIPP4BodyET_S3_>
 8015d64:	4602      	mov	r2, r0
 8015d66:	683b      	ldr	r3, [r7, #0]
 8015d68:	4629      	mov	r1, r5
 8015d6a:	4620      	mov	r0, r4
 8015d6c:	f000 f903 	bl	8015f76 <_ZSt14__relocate_a_1IP4BodyS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
 8015d70:	4603      	mov	r3, r0
    }
 8015d72:	4618      	mov	r0, r3
 8015d74:	3710      	adds	r7, #16
 8015d76:	46bd      	mov	sp, r7
 8015d78:	bdb0      	pop	{r4, r5, r7, pc}

08015d7a <_ZNSt6vectorIP9StatementSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
 8015d7a:	b580      	push	{r7, lr}
 8015d7c:	b084      	sub	sp, #16
 8015d7e:	af00      	add	r7, sp, #0
 8015d80:	6078      	str	r0, [r7, #4]
	const size_t __diffmax
 8015d82:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
 8015d86:	60fb      	str	r3, [r7, #12]
	const size_t __allocmax = _Alloc_traits::max_size(__a);
 8015d88:	6878      	ldr	r0, [r7, #4]
 8015d8a:	f000 f912 	bl	8015fb2 <_ZNSt16allocator_traitsISaIP9StatementEE8max_sizeERKS2_>
 8015d8e:	4603      	mov	r3, r0
 8015d90:	60bb      	str	r3, [r7, #8]
	return (std::min)(__diffmax, __allocmax);
 8015d92:	f107 0208 	add.w	r2, r7, #8
 8015d96:	f107 030c 	add.w	r3, r7, #12
 8015d9a:	4611      	mov	r1, r2
 8015d9c:	4618      	mov	r0, r3
 8015d9e:	f000 f889 	bl	8015eb4 <_ZSt3minIjERKT_S2_S2_>
 8015da2:	4603      	mov	r3, r0
 8015da4:	681b      	ldr	r3, [r3, #0]
      }
 8015da6:	4618      	mov	r0, r3
 8015da8:	3710      	adds	r7, #16
 8015daa:	46bd      	mov	sp, r7
 8015dac:	bd80      	pop	{r7, pc}

08015dae <_ZNKSt12_Vector_baseIP9StatementSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 8015dae:	b480      	push	{r7}
 8015db0:	b083      	sub	sp, #12
 8015db2:	af00      	add	r7, sp, #0
 8015db4:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 8015db6:	687b      	ldr	r3, [r7, #4]
 8015db8:	4618      	mov	r0, r3
 8015dba:	370c      	adds	r7, #12
 8015dbc:	46bd      	mov	sp, r7
 8015dbe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015dc2:	4770      	bx	lr

08015dc4 <_ZN9__gnu_cxx13new_allocatorIP9StatementE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 8015dc4:	b580      	push	{r7, lr}
 8015dc6:	b084      	sub	sp, #16
 8015dc8:	af00      	add	r7, sp, #0
 8015dca:	60f8      	str	r0, [r7, #12]
 8015dcc:	60b9      	str	r1, [r7, #8]
 8015dce:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 8015dd0:	68f8      	ldr	r0, [r7, #12]
 8015dd2:	f000 f8fa 	bl	8015fca <_ZNK9__gnu_cxx13new_allocatorIP9StatementE8max_sizeEv>
 8015dd6:	4602      	mov	r2, r0
 8015dd8:	68bb      	ldr	r3, [r7, #8]
 8015dda:	4293      	cmp	r3, r2
 8015ddc:	bf8c      	ite	hi
 8015dde:	2301      	movhi	r3, #1
 8015de0:	2300      	movls	r3, #0
 8015de2:	b2db      	uxtb	r3, r3
 8015de4:	2b00      	cmp	r3, #0
 8015de6:	d001      	beq.n	8015dec <_ZN9__gnu_cxx13new_allocatorIP9StatementE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 8015de8:	f00c fde2 	bl	80229b0 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 8015dec:	68bb      	ldr	r3, [r7, #8]
 8015dee:	009b      	lsls	r3, r3, #2
 8015df0:	4618      	mov	r0, r3
 8015df2:	f00c fd18 	bl	8022826 <_Znwj>
 8015df6:	4603      	mov	r3, r0
 8015df8:	bf00      	nop
      }
 8015dfa:	4618      	mov	r0, r3
 8015dfc:	3710      	adds	r7, #16
 8015dfe:	46bd      	mov	sp, r7
 8015e00:	bd80      	pop	{r7, pc}

08015e02 <_ZSt12__relocate_aIPP9StatementS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
 8015e02:	b5b0      	push	{r4, r5, r7, lr}
 8015e04:	b084      	sub	sp, #16
 8015e06:	af00      	add	r7, sp, #0
 8015e08:	60f8      	str	r0, [r7, #12]
 8015e0a:	60b9      	str	r1, [r7, #8]
 8015e0c:	607a      	str	r2, [r7, #4]
 8015e0e:	603b      	str	r3, [r7, #0]
      return __relocate_a_1(std::__niter_base(__first),
 8015e10:	68f8      	ldr	r0, [r7, #12]
 8015e12:	f000 f8e6 	bl	8015fe2 <_ZSt12__niter_baseIPP9StatementET_S3_>
 8015e16:	4604      	mov	r4, r0
 8015e18:	68b8      	ldr	r0, [r7, #8]
 8015e1a:	f000 f8e2 	bl	8015fe2 <_ZSt12__niter_baseIPP9StatementET_S3_>
 8015e1e:	4605      	mov	r5, r0
 8015e20:	6878      	ldr	r0, [r7, #4]
 8015e22:	f000 f8de 	bl	8015fe2 <_ZSt12__niter_baseIPP9StatementET_S3_>
 8015e26:	4602      	mov	r2, r0
 8015e28:	683b      	ldr	r3, [r7, #0]
 8015e2a:	4629      	mov	r1, r5
 8015e2c:	4620      	mov	r0, r4
 8015e2e:	f000 f8e3 	bl	8015ff8 <_ZSt14__relocate_a_1IP9StatementS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
 8015e32:	4603      	mov	r3, r0
    }
 8015e34:	4618      	mov	r0, r3
 8015e36:	3710      	adds	r7, #16
 8015e38:	46bd      	mov	sp, r7
 8015e3a:	bdb0      	pop	{r4, r5, r7, pc}

08015e3c <_ZSt28__variant_construct_by_indexILj3ESt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEJbEEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 8015e3c:	b590      	push	{r4, r7, lr}
 8015e3e:	b085      	sub	sp, #20
 8015e40:	af00      	add	r7, sp, #0
 8015e42:	6078      	str	r0, [r7, #4]
 8015e44:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 8015e46:	687b      	ldr	r3, [r7, #4]
 8015e48:	2203      	movs	r2, #3
 8015e4a:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 8015e4c:	6878      	ldr	r0, [r7, #4]
 8015e4e:	f7fa fe3c 	bl	8010aca <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 8015e52:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 8015e54:	6838      	ldr	r0, [r7, #0]
 8015e56:	f7f2 fc4d 	bl	80086f4 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
 8015e5a:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 8015e5c:	781c      	ldrb	r4, [r3, #0]
 8015e5e:	68f8      	ldr	r0, [r7, #12]
 8015e60:	f7f2 fe34 	bl	8008acc <_ZSt9addressofIbEPT_RS0_>
 8015e64:	4603      	mov	r3, r0
 8015e66:	4619      	mov	r1, r3
 8015e68:	2001      	movs	r0, #1
 8015e6a:	f7eb f8f6 	bl	800105a <_ZnwjPv>
 8015e6e:	4603      	mov	r3, r0
 8015e70:	4622      	mov	r2, r4
 8015e72:	701a      	strb	r2, [r3, #0]
    }
 8015e74:	bf00      	nop
 8015e76:	3714      	adds	r7, #20
 8015e78:	46bd      	mov	sp, r7
 8015e7a:	bd90      	pop	{r4, r7, pc}

08015e7c <_ZSt3getILj3EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>:
    get(variant<_Types...>& __v)
 8015e7c:	b580      	push	{r7, lr}
 8015e7e:	b082      	sub	sp, #8
 8015e80:	af00      	add	r7, sp, #0
 8015e82:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 8015e84:	6878      	ldr	r0, [r7, #4]
 8015e86:	f7f9 fef5 	bl	800fc74 <_ZNKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE5indexEv>
 8015e8a:	4603      	mov	r3, r0
 8015e8c:	2b03      	cmp	r3, #3
 8015e8e:	bf14      	ite	ne
 8015e90:	2301      	movne	r3, #1
 8015e92:	2300      	moveq	r3, #0
 8015e94:	b2db      	uxtb	r3, r3
 8015e96:	2b00      	cmp	r3, #0
 8015e98:	d002      	beq.n	8015ea0 <_ZSt3getILj3EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_+0x24>
	__throw_bad_variant_access("Unexpected index");
 8015e9a:	4805      	ldr	r0, [pc, #20]	; (8015eb0 <_ZSt3getILj3EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_+0x34>)
 8015e9c:	f7eb f8e9 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 8015ea0:	6878      	ldr	r0, [r7, #4]
 8015ea2:	f7fa fe12 	bl	8010aca <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 8015ea6:	4603      	mov	r3, r0
    }
 8015ea8:	4618      	mov	r0, r3
 8015eaa:	3708      	adds	r7, #8
 8015eac:	46bd      	mov	sp, r7
 8015eae:	bd80      	pop	{r7, pc}
 8015eb0:	08027ad0 	.word	0x08027ad0

08015eb4 <_ZSt3minIjERKT_S2_S2_>:
    min(const _Tp& __a, const _Tp& __b)
 8015eb4:	b480      	push	{r7}
 8015eb6:	b083      	sub	sp, #12
 8015eb8:	af00      	add	r7, sp, #0
 8015eba:	6078      	str	r0, [r7, #4]
 8015ebc:	6039      	str	r1, [r7, #0]
      if (__b < __a)
 8015ebe:	683b      	ldr	r3, [r7, #0]
 8015ec0:	681a      	ldr	r2, [r3, #0]
 8015ec2:	687b      	ldr	r3, [r7, #4]
 8015ec4:	681b      	ldr	r3, [r3, #0]
 8015ec6:	429a      	cmp	r2, r3
 8015ec8:	d201      	bcs.n	8015ece <_ZSt3minIjERKT_S2_S2_+0x1a>
	return __b;
 8015eca:	683b      	ldr	r3, [r7, #0]
 8015ecc:	e000      	b.n	8015ed0 <_ZSt3minIjERKT_S2_S2_+0x1c>
      return __a;
 8015ece:	687b      	ldr	r3, [r7, #4]
    }
 8015ed0:	4618      	mov	r0, r3
 8015ed2:	370c      	adds	r7, #12
 8015ed4:	46bd      	mov	sp, r7
 8015ed6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015eda:	4770      	bx	lr

08015edc <_ZNSt16allocator_traitsISaIP10ExpressionEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a) noexcept
 8015edc:	b580      	push	{r7, lr}
 8015ede:	b082      	sub	sp, #8
 8015ee0:	af00      	add	r7, sp, #0
 8015ee2:	6078      	str	r0, [r7, #4]
      { return __a.max_size(); }
 8015ee4:	6878      	ldr	r0, [r7, #4]
 8015ee6:	f7f8 fd5d 	bl	800e9a4 <_ZNK9__gnu_cxx13new_allocatorIP10ExpressionE8max_sizeEv>
 8015eea:	4603      	mov	r3, r0
 8015eec:	4618      	mov	r0, r3
 8015eee:	3708      	adds	r7, #8
 8015ef0:	46bd      	mov	sp, r7
 8015ef2:	bd80      	pop	{r7, pc}

08015ef4 <_ZSt14__relocate_a_1IP10ExpressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
 8015ef4:	b580      	push	{r7, lr}
 8015ef6:	b086      	sub	sp, #24
 8015ef8:	af00      	add	r7, sp, #0
 8015efa:	60f8      	str	r0, [r7, #12]
 8015efc:	60b9      	str	r1, [r7, #8]
 8015efe:	607a      	str	r2, [r7, #4]
 8015f00:	603b      	str	r3, [r7, #0]
      ptrdiff_t __count = __last - __first;
 8015f02:	68ba      	ldr	r2, [r7, #8]
 8015f04:	68fb      	ldr	r3, [r7, #12]
 8015f06:	1ad3      	subs	r3, r2, r3
 8015f08:	109b      	asrs	r3, r3, #2
 8015f0a:	617b      	str	r3, [r7, #20]
      if (__count > 0)
 8015f0c:	697b      	ldr	r3, [r7, #20]
 8015f0e:	2b00      	cmp	r3, #0
 8015f10:	dd06      	ble.n	8015f20 <_ZSt14__relocate_a_1IP10ExpressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x2c>
	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 8015f12:	697b      	ldr	r3, [r7, #20]
 8015f14:	009b      	lsls	r3, r3, #2
 8015f16:	461a      	mov	r2, r3
 8015f18:	68f9      	ldr	r1, [r7, #12]
 8015f1a:	6878      	ldr	r0, [r7, #4]
 8015f1c:	f00e f948 	bl	80241b0 <memmove>
      return __result + __count;
 8015f20:	697b      	ldr	r3, [r7, #20]
 8015f22:	009b      	lsls	r3, r3, #2
 8015f24:	687a      	ldr	r2, [r7, #4]
 8015f26:	4413      	add	r3, r2
    }
 8015f28:	4618      	mov	r0, r3
 8015f2a:	3718      	adds	r7, #24
 8015f2c:	46bd      	mov	sp, r7
 8015f2e:	bd80      	pop	{r7, pc}

08015f30 <_ZNSt16allocator_traitsISaIP4BodyEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a) noexcept
 8015f30:	b580      	push	{r7, lr}
 8015f32:	b082      	sub	sp, #8
 8015f34:	af00      	add	r7, sp, #0
 8015f36:	6078      	str	r0, [r7, #4]
      { return __a.max_size(); }
 8015f38:	6878      	ldr	r0, [r7, #4]
 8015f3a:	f000 f805 	bl	8015f48 <_ZNK9__gnu_cxx13new_allocatorIP4BodyE8max_sizeEv>
 8015f3e:	4603      	mov	r3, r0
 8015f40:	4618      	mov	r0, r3
 8015f42:	3708      	adds	r7, #8
 8015f44:	46bd      	mov	sp, r7
 8015f46:	bd80      	pop	{r7, pc}

08015f48 <_ZNK9__gnu_cxx13new_allocatorIP4BodyE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 8015f48:	b480      	push	{r7}
 8015f4a:	b083      	sub	sp, #12
 8015f4c:	af00      	add	r7, sp, #0
 8015f4e:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 8015f50:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
      }
 8015f54:	4618      	mov	r0, r3
 8015f56:	370c      	adds	r7, #12
 8015f58:	46bd      	mov	sp, r7
 8015f5a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015f5e:	4770      	bx	lr

08015f60 <_ZSt12__niter_baseIPP4BodyET_S3_>:
    __niter_base(_Iterator __it)
 8015f60:	b480      	push	{r7}
 8015f62:	b083      	sub	sp, #12
 8015f64:	af00      	add	r7, sp, #0
 8015f66:	6078      	str	r0, [r7, #4]
    { return __it; }
 8015f68:	687b      	ldr	r3, [r7, #4]
 8015f6a:	4618      	mov	r0, r3
 8015f6c:	370c      	adds	r7, #12
 8015f6e:	46bd      	mov	sp, r7
 8015f70:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015f74:	4770      	bx	lr

08015f76 <_ZSt14__relocate_a_1IP4BodyS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
 8015f76:	b580      	push	{r7, lr}
 8015f78:	b086      	sub	sp, #24
 8015f7a:	af00      	add	r7, sp, #0
 8015f7c:	60f8      	str	r0, [r7, #12]
 8015f7e:	60b9      	str	r1, [r7, #8]
 8015f80:	607a      	str	r2, [r7, #4]
 8015f82:	603b      	str	r3, [r7, #0]
      ptrdiff_t __count = __last - __first;
 8015f84:	68ba      	ldr	r2, [r7, #8]
 8015f86:	68fb      	ldr	r3, [r7, #12]
 8015f88:	1ad3      	subs	r3, r2, r3
 8015f8a:	109b      	asrs	r3, r3, #2
 8015f8c:	617b      	str	r3, [r7, #20]
      if (__count > 0)
 8015f8e:	697b      	ldr	r3, [r7, #20]
 8015f90:	2b00      	cmp	r3, #0
 8015f92:	dd06      	ble.n	8015fa2 <_ZSt14__relocate_a_1IP4BodyS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x2c>
	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 8015f94:	697b      	ldr	r3, [r7, #20]
 8015f96:	009b      	lsls	r3, r3, #2
 8015f98:	461a      	mov	r2, r3
 8015f9a:	68f9      	ldr	r1, [r7, #12]
 8015f9c:	6878      	ldr	r0, [r7, #4]
 8015f9e:	f00e f907 	bl	80241b0 <memmove>
      return __result + __count;
 8015fa2:	697b      	ldr	r3, [r7, #20]
 8015fa4:	009b      	lsls	r3, r3, #2
 8015fa6:	687a      	ldr	r2, [r7, #4]
 8015fa8:	4413      	add	r3, r2
    }
 8015faa:	4618      	mov	r0, r3
 8015fac:	3718      	adds	r7, #24
 8015fae:	46bd      	mov	sp, r7
 8015fb0:	bd80      	pop	{r7, pc}

08015fb2 <_ZNSt16allocator_traitsISaIP9StatementEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a) noexcept
 8015fb2:	b580      	push	{r7, lr}
 8015fb4:	b082      	sub	sp, #8
 8015fb6:	af00      	add	r7, sp, #0
 8015fb8:	6078      	str	r0, [r7, #4]
      { return __a.max_size(); }
 8015fba:	6878      	ldr	r0, [r7, #4]
 8015fbc:	f000 f805 	bl	8015fca <_ZNK9__gnu_cxx13new_allocatorIP9StatementE8max_sizeEv>
 8015fc0:	4603      	mov	r3, r0
 8015fc2:	4618      	mov	r0, r3
 8015fc4:	3708      	adds	r7, #8
 8015fc6:	46bd      	mov	sp, r7
 8015fc8:	bd80      	pop	{r7, pc}

08015fca <_ZNK9__gnu_cxx13new_allocatorIP9StatementE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 8015fca:	b480      	push	{r7}
 8015fcc:	b083      	sub	sp, #12
 8015fce:	af00      	add	r7, sp, #0
 8015fd0:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 8015fd2:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
      }
 8015fd6:	4618      	mov	r0, r3
 8015fd8:	370c      	adds	r7, #12
 8015fda:	46bd      	mov	sp, r7
 8015fdc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015fe0:	4770      	bx	lr

08015fe2 <_ZSt12__niter_baseIPP9StatementET_S3_>:
    __niter_base(_Iterator __it)
 8015fe2:	b480      	push	{r7}
 8015fe4:	b083      	sub	sp, #12
 8015fe6:	af00      	add	r7, sp, #0
 8015fe8:	6078      	str	r0, [r7, #4]
    { return __it; }
 8015fea:	687b      	ldr	r3, [r7, #4]
 8015fec:	4618      	mov	r0, r3
 8015fee:	370c      	adds	r7, #12
 8015ff0:	46bd      	mov	sp, r7
 8015ff2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015ff6:	4770      	bx	lr

08015ff8 <_ZSt14__relocate_a_1IP9StatementS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
 8015ff8:	b580      	push	{r7, lr}
 8015ffa:	b086      	sub	sp, #24
 8015ffc:	af00      	add	r7, sp, #0
 8015ffe:	60f8      	str	r0, [r7, #12]
 8016000:	60b9      	str	r1, [r7, #8]
 8016002:	607a      	str	r2, [r7, #4]
 8016004:	603b      	str	r3, [r7, #0]
      ptrdiff_t __count = __last - __first;
 8016006:	68ba      	ldr	r2, [r7, #8]
 8016008:	68fb      	ldr	r3, [r7, #12]
 801600a:	1ad3      	subs	r3, r2, r3
 801600c:	109b      	asrs	r3, r3, #2
 801600e:	617b      	str	r3, [r7, #20]
      if (__count > 0)
 8016010:	697b      	ldr	r3, [r7, #20]
 8016012:	2b00      	cmp	r3, #0
 8016014:	dd06      	ble.n	8016024 <_ZSt14__relocate_a_1IP9StatementS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x2c>
	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 8016016:	697b      	ldr	r3, [r7, #20]
 8016018:	009b      	lsls	r3, r3, #2
 801601a:	461a      	mov	r2, r3
 801601c:	68f9      	ldr	r1, [r7, #12]
 801601e:	6878      	ldr	r0, [r7, #4]
 8016020:	f00e f8c6 	bl	80241b0 <memmove>
      return __result + __count;
 8016024:	697b      	ldr	r3, [r7, #20]
 8016026:	009b      	lsls	r3, r3, #2
 8016028:	687a      	ldr	r2, [r7, #4]
 801602a:	4413      	add	r3, r2
    }
 801602c:	4618      	mov	r0, r3
 801602e:	3718      	adds	r7, #24
 8016030:	46bd      	mov	sp, r7
 8016032:	bd80      	pop	{r7, pc}

08016034 <_Z41__static_initialization_and_destruction_0ii>:
 8016034:	b590      	push	{r4, r7, lr}
 8016036:	b0e7      	sub	sp, #412	; 0x19c
 8016038:	af02      	add	r7, sp, #8
 801603a:	1d3b      	adds	r3, r7, #4
 801603c:	6018      	str	r0, [r3, #0]
 801603e:	463b      	mov	r3, r7
 8016040:	6019      	str	r1, [r3, #0]
 8016042:	1d3b      	adds	r3, r7, #4
 8016044:	681b      	ldr	r3, [r3, #0]
 8016046:	2b01      	cmp	r3, #1
 8016048:	f040 819d 	bne.w	8016386 <_Z41__static_initialization_and_destruction_0ii+0x352>
 801604c:	463b      	mov	r3, r7
 801604e:	681b      	ldr	r3, [r3, #0]
 8016050:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8016054:	4293      	cmp	r3, r2
 8016056:	f040 8196 	bne.w	8016386 <_Z41__static_initialization_and_destruction_0ii+0x352>
};
 801605a:	f107 0314 	add.w	r3, r7, #20
 801605e:	4618      	mov	r0, r3
 8016060:	2322      	movs	r3, #34	; 0x22
 8016062:	461a      	mov	r2, r3
 8016064:	2100      	movs	r1, #0
 8016066:	f00e f8bd 	bl	80241e4 <memset>
 801606a:	f107 0314 	add.w	r3, r7, #20
 801606e:	223a      	movs	r2, #58	; 0x3a
 8016070:	701a      	strb	r2, [r3, #0]
 8016072:	f107 0314 	add.w	r3, r7, #20
 8016076:	2201      	movs	r2, #1
 8016078:	705a      	strb	r2, [r3, #1]
 801607a:	f107 0314 	add.w	r3, r7, #20
 801607e:	220a      	movs	r2, #10
 8016080:	709a      	strb	r2, [r3, #2]
 8016082:	f107 0314 	add.w	r3, r7, #20
 8016086:	220a      	movs	r2, #10
 8016088:	70da      	strb	r2, [r3, #3]
 801608a:	f107 0314 	add.w	r3, r7, #20
 801608e:	222c      	movs	r2, #44	; 0x2c
 8016090:	711a      	strb	r2, [r3, #4]
 8016092:	f107 0314 	add.w	r3, r7, #20
 8016096:	220c      	movs	r2, #12
 8016098:	715a      	strb	r2, [r3, #5]
 801609a:	f107 0314 	add.w	r3, r7, #20
 801609e:	222e      	movs	r2, #46	; 0x2e
 80160a0:	719a      	strb	r2, [r3, #6]
 80160a2:	f107 0314 	add.w	r3, r7, #20
 80160a6:	220b      	movs	r2, #11
 80160a8:	71da      	strb	r2, [r3, #7]
 80160aa:	f107 0314 	add.w	r3, r7, #20
 80160ae:	225b      	movs	r2, #91	; 0x5b
 80160b0:	721a      	strb	r2, [r3, #8]
 80160b2:	f107 0314 	add.w	r3, r7, #20
 80160b6:	220d      	movs	r2, #13
 80160b8:	725a      	strb	r2, [r3, #9]
 80160ba:	f107 0314 	add.w	r3, r7, #20
 80160be:	225d      	movs	r2, #93	; 0x5d
 80160c0:	729a      	strb	r2, [r3, #10]
 80160c2:	f107 0314 	add.w	r3, r7, #20
 80160c6:	220e      	movs	r2, #14
 80160c8:	72da      	strb	r2, [r3, #11]
 80160ca:	f107 0314 	add.w	r3, r7, #20
 80160ce:	227c      	movs	r2, #124	; 0x7c
 80160d0:	731a      	strb	r2, [r3, #12]
 80160d2:	f107 0314 	add.w	r3, r7, #20
 80160d6:	2215      	movs	r2, #21
 80160d8:	735a      	strb	r2, [r3, #13]
 80160da:	f107 0314 	add.w	r3, r7, #20
 80160de:	2226      	movs	r2, #38	; 0x26
 80160e0:	739a      	strb	r2, [r3, #14]
 80160e2:	f107 0314 	add.w	r3, r7, #20
 80160e6:	2216      	movs	r2, #22
 80160e8:	73da      	strb	r2, [r3, #15]
 80160ea:	f107 0314 	add.w	r3, r7, #20
 80160ee:	222b      	movs	r2, #43	; 0x2b
 80160f0:	741a      	strb	r2, [r3, #16]
 80160f2:	f107 0314 	add.w	r3, r7, #20
 80160f6:	221f      	movs	r2, #31
 80160f8:	745a      	strb	r2, [r3, #17]
 80160fa:	f107 0314 	add.w	r3, r7, #20
 80160fe:	222d      	movs	r2, #45	; 0x2d
 8016100:	749a      	strb	r2, [r3, #18]
 8016102:	f107 0314 	add.w	r3, r7, #20
 8016106:	2220      	movs	r2, #32
 8016108:	74da      	strb	r2, [r3, #19]
 801610a:	f107 0314 	add.w	r3, r7, #20
 801610e:	222a      	movs	r2, #42	; 0x2a
 8016110:	751a      	strb	r2, [r3, #20]
 8016112:	f107 0314 	add.w	r3, r7, #20
 8016116:	2221      	movs	r2, #33	; 0x21
 8016118:	755a      	strb	r2, [r3, #21]
 801611a:	f107 0314 	add.w	r3, r7, #20
 801611e:	222f      	movs	r2, #47	; 0x2f
 8016120:	759a      	strb	r2, [r3, #22]
 8016122:	f107 0314 	add.w	r3, r7, #20
 8016126:	2222      	movs	r2, #34	; 0x22
 8016128:	75da      	strb	r2, [r3, #23]
 801612a:	f107 0314 	add.w	r3, r7, #20
 801612e:	225e      	movs	r2, #94	; 0x5e
 8016130:	761a      	strb	r2, [r3, #24]
 8016132:	f107 0314 	add.w	r3, r7, #20
 8016136:	2223      	movs	r2, #35	; 0x23
 8016138:	765a      	strb	r2, [r3, #25]
 801613a:	f107 0314 	add.w	r3, r7, #20
 801613e:	2225      	movs	r2, #37	; 0x25
 8016140:	769a      	strb	r2, [r3, #26]
 8016142:	f107 0314 	add.w	r3, r7, #20
 8016146:	2224      	movs	r2, #36	; 0x24
 8016148:	76da      	strb	r2, [r3, #27]
 801614a:	f107 0314 	add.w	r3, r7, #20
 801614e:	2228      	movs	r2, #40	; 0x28
 8016150:	771a      	strb	r2, [r3, #28]
 8016152:	f107 0314 	add.w	r3, r7, #20
 8016156:	2226      	movs	r2, #38	; 0x26
 8016158:	775a      	strb	r2, [r3, #29]
 801615a:	f107 0314 	add.w	r3, r7, #20
 801615e:	2229      	movs	r2, #41	; 0x29
 8016160:	779a      	strb	r2, [r3, #30]
 8016162:	f107 0314 	add.w	r3, r7, #20
 8016166:	2227      	movs	r2, #39	; 0x27
 8016168:	77da      	strb	r2, [r3, #31]
 801616a:	f107 0314 	add.w	r3, r7, #20
 801616e:	2225      	movs	r2, #37	; 0x25
 8016170:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8016174:	f107 030c 	add.w	r3, r7, #12
 8016178:	f107 0214 	add.w	r2, r7, #20
 801617c:	601a      	str	r2, [r3, #0]
 801617e:	f107 030c 	add.w	r3, r7, #12
 8016182:	2211      	movs	r2, #17
 8016184:	605a      	str	r2, [r3, #4]
 8016186:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801618a:	4618      	mov	r0, r3
 801618c:	f7eb fcb0 	bl	8001af0 <_ZNSaISt4pairIKc10token_typeEEC1Ev>
 8016190:	f107 0138 	add.w	r1, r7, #56	; 0x38
 8016194:	f107 020c 	add.w	r2, r7, #12
 8016198:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801619c:	9300      	str	r3, [sp, #0]
 801619e:	460b      	mov	r3, r1
 80161a0:	ca06      	ldmia	r2, {r1, r2}
 80161a2:	4885      	ldr	r0, [pc, #532]	; (80163b8 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 80161a4:	f7eb fcbc 	bl	8001b20 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 80161a8:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 80161ac:	4618      	mov	r0, r3
 80161ae:	f7eb fcab 	bl	8001b08 <_ZNSaISt4pairIKc10token_typeEED1Ev>
	{"true", TOKEN_TRUE},
 80161b2:	2305      	movs	r3, #5
 80161b4:	f887 3162 	strb.w	r3, [r7, #354]	; 0x162
};
 80161b8:	f507 72b1 	add.w	r2, r7, #354	; 0x162
 80161bc:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80161c0:	497e      	ldr	r1, [pc, #504]	; (80163bc <_Z41__static_initialization_and_destruction_0ii+0x388>)
 80161c2:	4618      	mov	r0, r3
 80161c4:	f7ea ff98 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"false", TOKEN_FALSE},
 80161c8:	2306      	movs	r3, #6
 80161ca:	f887 3163 	strb.w	r3, [r7, #355]	; 0x163
};
 80161ce:	f207 1263 	addw	r2, r7, #355	; 0x163
 80161d2:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80161d6:	331c      	adds	r3, #28
 80161d8:	4979      	ldr	r1, [pc, #484]	; (80163c0 <_Z41__static_initialization_and_destruction_0ii+0x38c>)
 80161da:	4618      	mov	r0, r3
 80161dc:	f7ea ffb4 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"setup", TOKEN_SETUP},
 80161e0:	2307      	movs	r3, #7
 80161e2:	f887 3164 	strb.w	r3, [r7, #356]	; 0x164
};
 80161e6:	f507 72b2 	add.w	r2, r7, #356	; 0x164
 80161ea:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80161ee:	3338      	adds	r3, #56	; 0x38
 80161f0:	4974      	ldr	r1, [pc, #464]	; (80163c4 <_Z41__static_initialization_and_destruction_0ii+0x390>)
 80161f2:	4618      	mov	r0, r3
 80161f4:	f7ea ffa8 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"loop", TOKEN_LOOP},
 80161f8:	2308      	movs	r3, #8
 80161fa:	f887 3165 	strb.w	r3, [r7, #357]	; 0x165
};
 80161fe:	f207 1265 	addw	r2, r7, #357	; 0x165
 8016202:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8016206:	3354      	adds	r3, #84	; 0x54
 8016208:	496f      	ldr	r1, [pc, #444]	; (80163c8 <_Z41__static_initialization_and_destruction_0ii+0x394>)
 801620a:	4618      	mov	r0, r3
 801620c:	f7ea ff74 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"finish", TOKEN_FINISH},
 8016210:	2309      	movs	r3, #9
 8016212:	f887 3166 	strb.w	r3, [r7, #358]	; 0x166
};
 8016216:	f507 72b3 	add.w	r2, r7, #358	; 0x166
 801621a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801621e:	3370      	adds	r3, #112	; 0x70
 8016220:	496a      	ldr	r1, [pc, #424]	; (80163cc <_Z41__static_initialization_and_destruction_0ii+0x398>)
 8016222:	4618      	mov	r0, r3
 8016224:	f7ea ffb8 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"if", TOKEN_IF},
 8016228:	2310      	movs	r3, #16
 801622a:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167
};
 801622e:	f207 1267 	addw	r2, r7, #359	; 0x167
 8016232:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8016236:	338c      	adds	r3, #140	; 0x8c
 8016238:	4965      	ldr	r1, [pc, #404]	; (80163d0 <_Z41__static_initialization_and_destruction_0ii+0x39c>)
 801623a:	4618      	mov	r0, r3
 801623c:	f7ea ffd4 	bl	80011e8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>
	{"elseif", TOKEN_ELSEIF},
 8016240:	2311      	movs	r3, #17
 8016242:	f887 3168 	strb.w	r3, [r7, #360]	; 0x168
};
 8016246:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 801624a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801624e:	33a8      	adds	r3, #168	; 0xa8
 8016250:	4960      	ldr	r1, [pc, #384]	; (80163d4 <_Z41__static_initialization_and_destruction_0ii+0x3a0>)
 8016252:	4618      	mov	r0, r3
 8016254:	f7ea ffa0 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"else", TOKEN_ELSE},
 8016258:	2312      	movs	r3, #18
 801625a:	f887 3169 	strb.w	r3, [r7, #361]	; 0x169
};
 801625e:	f207 1269 	addw	r2, r7, #361	; 0x169
 8016262:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8016266:	33c4      	adds	r3, #196	; 0xc4
 8016268:	495b      	ldr	r1, [pc, #364]	; (80163d8 <_Z41__static_initialization_and_destruction_0ii+0x3a4>)
 801626a:	4618      	mov	r0, r3
 801626c:	f7ea ff44 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"while", TOKEN_WHILE},
 8016270:	2313      	movs	r3, #19
 8016272:	f887 316a 	strb.w	r3, [r7, #362]	; 0x16a
};
 8016276:	f507 72b5 	add.w	r2, r7, #362	; 0x16a
 801627a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801627e:	33e0      	adds	r3, #224	; 0xe0
 8016280:	4956      	ldr	r1, [pc, #344]	; (80163dc <_Z41__static_initialization_and_destruction_0ii+0x3a8>)
 8016282:	4618      	mov	r0, r3
 8016284:	f7ea ff60 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"end", TOKEN_END},
 8016288:	2314      	movs	r3, #20
 801628a:	f887 316b 	strb.w	r3, [r7, #363]	; 0x16b
};
 801628e:	f207 126b 	addw	r2, r7, #363	; 0x16b
 8016292:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8016296:	33fc      	adds	r3, #252	; 0xfc
 8016298:	4951      	ldr	r1, [pc, #324]	; (80163e0 <_Z41__static_initialization_and_destruction_0ii+0x3ac>)
 801629a:	4618      	mov	r0, r3
 801629c:	f7ea ffcc 	bl	8001238 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>
 80162a0:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80162a4:	f107 0248 	add.w	r2, r7, #72	; 0x48
 80162a8:	601a      	str	r2, [r3, #0]
 80162aa:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80162ae:	220a      	movs	r2, #10
 80162b0:	605a      	str	r2, [r3, #4]
 80162b2:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 80162b6:	4618      	mov	r0, r3
 80162b8:	f7eb fcbf 	bl	8001c3a <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 80162bc:	f507 71b6 	add.w	r1, r7, #364	; 0x16c
 80162c0:	f107 0240 	add.w	r2, r7, #64	; 0x40
 80162c4:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 80162c8:	9300      	str	r3, [sp, #0]
 80162ca:	460b      	mov	r3, r1
 80162cc:	ca06      	ldmia	r2, {r1, r2}
 80162ce:	4845      	ldr	r0, [pc, #276]	; (80163e4 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 80162d0:	f7eb fccb 	bl	8001c6a <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>
 80162d4:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 80162d8:	4618      	mov	r0, r3
 80162da:	f7eb fcba 	bl	8001c52 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 80162de:	f107 0448 	add.w	r4, r7, #72	; 0x48
 80162e2:	f504 748c 	add.w	r4, r4, #280	; 0x118
 80162e6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80162ea:	429c      	cmp	r4, r3
 80162ec:	d004      	beq.n	80162f8 <_Z41__static_initialization_and_destruction_0ii+0x2c4>
 80162ee:	3c1c      	subs	r4, #28
 80162f0:	4620      	mov	r0, r4
 80162f2:	f7ea fef4 	bl	80010de <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 80162f6:	e7f6      	b.n	80162e6 <_Z41__static_initialization_and_destruction_0ii+0x2b2>
};
 80162f8:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 80162fc:	2200      	movs	r2, #0
 80162fe:	601a      	str	r2, [r3, #0]
 8016300:	605a      	str	r2, [r3, #4]
 8016302:	609a      	str	r2, [r3, #8]
 8016304:	233c      	movs	r3, #60	; 0x3c
 8016306:	f887 317c 	strb.w	r3, [r7, #380]	; 0x17c
 801630a:	231b      	movs	r3, #27
 801630c:	f887 317d 	strb.w	r3, [r7, #381]	; 0x17d
 8016310:	231c      	movs	r3, #28
 8016312:	f887 317e 	strb.w	r3, [r7, #382]	; 0x17e
 8016316:	233e      	movs	r3, #62	; 0x3e
 8016318:	f887 317f 	strb.w	r3, [r7, #383]	; 0x17f
 801631c:	2319      	movs	r3, #25
 801631e:	f887 3180 	strb.w	r3, [r7, #384]	; 0x180
 8016322:	231a      	movs	r3, #26
 8016324:	f887 3181 	strb.w	r3, [r7, #385]	; 0x181
 8016328:	233d      	movs	r3, #61	; 0x3d
 801632a:	f887 3182 	strb.w	r3, [r7, #386]	; 0x182
 801632e:	2318      	movs	r3, #24
 8016330:	f887 3183 	strb.w	r3, [r7, #387]	; 0x183
 8016334:	231d      	movs	r3, #29
 8016336:	f887 3184 	strb.w	r3, [r7, #388]	; 0x184
 801633a:	2321      	movs	r3, #33	; 0x21
 801633c:	f887 3185 	strb.w	r3, [r7, #389]	; 0x185
 8016340:	2317      	movs	r3, #23
 8016342:	f887 3186 	strb.w	r3, [r7, #390]	; 0x186
 8016346:	231e      	movs	r3, #30
 8016348:	f887 3187 	strb.w	r3, [r7, #391]	; 0x187
 801634c:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 8016350:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 8016354:	2304      	movs	r3, #4
 8016356:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 801635a:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801635e:	4618      	mov	r0, r3
 8016360:	f7eb fcb3 	bl	8001cca <_ZNSaISt4pairIKc12double_tokenEEC1Ev>
 8016364:	f507 72c4 	add.w	r2, r7, #392	; 0x188
 8016368:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801636c:	9300      	str	r3, [sp, #0]
 801636e:	4613      	mov	r3, r2
 8016370:	f507 72ba 	add.w	r2, r7, #372	; 0x174
 8016374:	ca06      	ldmia	r2, {r1, r2}
 8016376:	481c      	ldr	r0, [pc, #112]	; (80163e8 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 8016378:	f7eb fcbf 	bl	8001cfa <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 801637c:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 8016380:	4618      	mov	r0, r3
 8016382:	f7eb fcae 	bl	8001ce2 <_ZNSaISt4pairIKc12double_tokenEED1Ev>
static const std::map<char, double_token> token_double_chars
 8016386:	1d3b      	adds	r3, r7, #4
 8016388:	681b      	ldr	r3, [r3, #0]
 801638a:	2b00      	cmp	r3, #0
 801638c:	d10e      	bne.n	80163ac <_Z41__static_initialization_and_destruction_0ii+0x378>
 801638e:	463b      	mov	r3, r7
 8016390:	681b      	ldr	r3, [r3, #0]
 8016392:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8016396:	4293      	cmp	r3, r2
 8016398:	d108      	bne.n	80163ac <_Z41__static_initialization_and_destruction_0ii+0x378>
 801639a:	4813      	ldr	r0, [pc, #76]	; (80163e8 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 801639c:	f7f3 f93f 	bl	800961e <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>
static const std::map<std::string, token_type> token_strings
 80163a0:	4810      	ldr	r0, [pc, #64]	; (80163e4 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 80163a2:	f7f3 f949 	bl	8009638 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
static const std::map<char, token_type> token_chars
 80163a6:	4804      	ldr	r0, [pc, #16]	; (80163b8 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 80163a8:	f7f3 f953 	bl	8009652 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>
 80163ac:	bf00      	nop
 80163ae:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 80163b2:	46bd      	mov	sp, r7
 80163b4:	bd90      	pop	{r4, r7, pc}
 80163b6:	bf00      	nop
 80163b8:	20000424 	.word	0x20000424
 80163bc:	08027b2c 	.word	0x08027b2c
 80163c0:	08027b34 	.word	0x08027b34
 80163c4:	08027b3c 	.word	0x08027b3c
 80163c8:	08027b44 	.word	0x08027b44
 80163cc:	08027b4c 	.word	0x08027b4c
 80163d0:	08027b54 	.word	0x08027b54
 80163d4:	08027b58 	.word	0x08027b58
 80163d8:	08027b60 	.word	0x08027b60
 80163dc:	08027b68 	.word	0x08027b68
 80163e0:	08027b70 	.word	0x08027b70
 80163e4:	2000043c 	.word	0x2000043c
 80163e8:	20000454 	.word	0x20000454

080163ec <_GLOBAL__sub_I__ZN7ProgramD2Ev>:
 80163ec:	b580      	push	{r7, lr}
 80163ee:	af00      	add	r7, sp, #0
 80163f0:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80163f4:	2001      	movs	r0, #1
 80163f6:	f7ff fe1d 	bl	8016034 <_Z41__static_initialization_and_destruction_0ii>
 80163fa:	bd80      	pop	{r7, pc}

080163fc <_GLOBAL__sub_D__ZN7ProgramD2Ev>:
 80163fc:	b580      	push	{r7, lr}
 80163fe:	af00      	add	r7, sp, #0
 8016400:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8016404:	2000      	movs	r0, #0
 8016406:	f7ff fe15 	bl	8016034 <_Z41__static_initialization_and_destruction_0ii>
 801640a:	bd80      	pop	{r7, pc}

0801640c <_ZN16Position_counterC1Ev>:
#include <Position_counter.h>

Position_counter::Position_counter()
 801640c:	b480      	push	{r7}
 801640e:	b083      	sub	sp, #12
 8016410:	af00      	add	r7, sp, #0
 8016412:	6078      	str	r0, [r7, #4]
{
	line = 1;
 8016414:	687b      	ldr	r3, [r7, #4]
 8016416:	2201      	movs	r2, #1
 8016418:	601a      	str	r2, [r3, #0]
	position = 0;
 801641a:	687b      	ldr	r3, [r7, #4]
 801641c:	2200      	movs	r2, #0
 801641e:	605a      	str	r2, [r3, #4]
}
 8016420:	687b      	ldr	r3, [r7, #4]
 8016422:	4618      	mov	r0, r3
 8016424:	370c      	adds	r7, #12
 8016426:	46bd      	mov	sp, r7
 8016428:	f85d 7b04 	ldr.w	r7, [sp], #4
 801642c:	4770      	bx	lr
	...

08016430 <_ZN16Position_counter12get_instanceEv>:

Position_counter& Position_counter::get_instance()
{
 8016430:	b580      	push	{r7, lr}
 8016432:	af00      	add	r7, sp, #0
	static Position_counter instance;
 8016434:	4b10      	ldr	r3, [pc, #64]	; (8016478 <_ZN16Position_counter12get_instanceEv+0x48>)
 8016436:	781b      	ldrb	r3, [r3, #0]
 8016438:	f3bf 8f5b 	dmb	ish
 801643c:	b2db      	uxtb	r3, r3
 801643e:	f003 0301 	and.w	r3, r3, #1
 8016442:	2b00      	cmp	r3, #0
 8016444:	bf0c      	ite	eq
 8016446:	2301      	moveq	r3, #1
 8016448:	2300      	movne	r3, #0
 801644a:	b2db      	uxtb	r3, r3
 801644c:	2b00      	cmp	r3, #0
 801644e:	d010      	beq.n	8016472 <_ZN16Position_counter12get_instanceEv+0x42>
 8016450:	4809      	ldr	r0, [pc, #36]	; (8016478 <_ZN16Position_counter12get_instanceEv+0x48>)
 8016452:	f00c f9d9 	bl	8022808 <__cxa_guard_acquire>
 8016456:	4603      	mov	r3, r0
 8016458:	2b00      	cmp	r3, #0
 801645a:	bf14      	ite	ne
 801645c:	2301      	movne	r3, #1
 801645e:	2300      	moveq	r3, #0
 8016460:	b2db      	uxtb	r3, r3
 8016462:	2b00      	cmp	r3, #0
 8016464:	d005      	beq.n	8016472 <_ZN16Position_counter12get_instanceEv+0x42>
 8016466:	4805      	ldr	r0, [pc, #20]	; (801647c <_ZN16Position_counter12get_instanceEv+0x4c>)
 8016468:	f7ff ffd0 	bl	801640c <_ZN16Position_counterC1Ev>
 801646c:	4802      	ldr	r0, [pc, #8]	; (8016478 <_ZN16Position_counter12get_instanceEv+0x48>)
 801646e:	f00c f9d7 	bl	8022820 <__cxa_guard_release>
	return instance;
 8016472:	4b02      	ldr	r3, [pc, #8]	; (801647c <_ZN16Position_counter12get_instanceEv+0x4c>)
}
 8016474:	4618      	mov	r0, r3
 8016476:	bd80      	pop	{r7, pc}
 8016478:	20000498 	.word	0x20000498
 801647c:	20000490 	.word	0x20000490

08016480 <_ZN16Position_counter15update_positionEh>:

void Position_counter::update_position(uint8_t rx_buffer)
{
 8016480:	b480      	push	{r7}
 8016482:	b083      	sub	sp, #12
 8016484:	af00      	add	r7, sp, #0
 8016486:	6078      	str	r0, [r7, #4]
 8016488:	460b      	mov	r3, r1
 801648a:	70fb      	strb	r3, [r7, #3]
	if (rx_buffer == '\n')
 801648c:	78fb      	ldrb	r3, [r7, #3]
 801648e:	2b0a      	cmp	r3, #10
 8016490:	d108      	bne.n	80164a4 <_ZN16Position_counter15update_positionEh+0x24>
	{
		++line;
 8016492:	687b      	ldr	r3, [r7, #4]
 8016494:	681b      	ldr	r3, [r3, #0]
 8016496:	1c5a      	adds	r2, r3, #1
 8016498:	687b      	ldr	r3, [r7, #4]
 801649a:	601a      	str	r2, [r3, #0]
		position = 0;
 801649c:	687b      	ldr	r3, [r7, #4]
 801649e:	2200      	movs	r2, #0
 80164a0:	605a      	str	r2, [r3, #4]
	}
	else
	{
		++position;
	}
}
 80164a2:	e004      	b.n	80164ae <_ZN16Position_counter15update_positionEh+0x2e>
		++position;
 80164a4:	687b      	ldr	r3, [r7, #4]
 80164a6:	685b      	ldr	r3, [r3, #4]
 80164a8:	1c5a      	adds	r2, r3, #1
 80164aa:	687b      	ldr	r3, [r7, #4]
 80164ac:	605a      	str	r2, [r3, #4]
}
 80164ae:	bf00      	nop
 80164b0:	370c      	adds	r7, #12
 80164b2:	46bd      	mov	sp, r7
 80164b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80164b8:	4770      	bx	lr

080164ba <_ZN13Function_callD1Ev>:
	{
		delete b;
	}
}

Function_call::~Function_call()
 80164ba:	b590      	push	{r4, r7, lr}
 80164bc:	b087      	sub	sp, #28
 80164be:	af00      	add	r7, sp, #0
 80164c0:	6078      	str	r0, [r7, #4]
{
	for (Expression *e : arguments)
 80164c2:	687b      	ldr	r3, [r7, #4]
 80164c4:	3320      	adds	r3, #32
 80164c6:	617b      	str	r3, [r7, #20]
 80164c8:	6978      	ldr	r0, [r7, #20]
 80164ca:	f7fe ff7f 	bl	80153cc <_ZNSt6vectorIP10ExpressionSaIS1_EE5beginEv>
 80164ce:	4603      	mov	r3, r0
 80164d0:	60fb      	str	r3, [r7, #12]
 80164d2:	6978      	ldr	r0, [r7, #20]
 80164d4:	f7fe fbb4 	bl	8014c40 <_ZNSt6vectorIP10ExpressionSaIS1_EE3endEv>
 80164d8:	4603      	mov	r3, r0
 80164da:	60bb      	str	r3, [r7, #8]
 80164dc:	f107 0208 	add.w	r2, r7, #8
 80164e0:	f107 030c 	add.w	r3, r7, #12
 80164e4:	4611      	mov	r1, r2
 80164e6:	4618      	mov	r0, r3
 80164e8:	f000 f843 	bl	8016572 <_ZN9__gnu_cxxneIPP10ExpressionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
 80164ec:	4603      	mov	r3, r0
 80164ee:	2b00      	cmp	r3, #0
 80164f0:	d017      	beq.n	8016522 <_ZN13Function_callD1Ev+0x68>
 80164f2:	f107 030c 	add.w	r3, r7, #12
 80164f6:	4618      	mov	r0, r3
 80164f8:	f7fe ffc5 	bl	8015486 <_ZNK9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEEdeEv>
 80164fc:	4603      	mov	r3, r0
 80164fe:	681b      	ldr	r3, [r3, #0]
 8016500:	613b      	str	r3, [r7, #16]
	{
		delete e;
 8016502:	693c      	ldr	r4, [r7, #16]
 8016504:	2c00      	cmp	r4, #0
 8016506:	d006      	beq.n	8016516 <_ZN13Function_callD1Ev+0x5c>
 8016508:	4620      	mov	r0, r4
 801650a:	f7f3 fc86 	bl	8009e1a <_ZN10ExpressionD1Ev>
 801650e:	2114      	movs	r1, #20
 8016510:	4620      	mov	r0, r4
 8016512:	f00c f977 	bl	8022804 <_ZdlPvj>
	for (Expression *e : arguments)
 8016516:	f107 030c 	add.w	r3, r7, #12
 801651a:	4618      	mov	r0, r3
 801651c:	f000 f841 	bl	80165a2 <_ZN9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEEppEv>
 8016520:	e7dc      	b.n	80164dc <_ZN13Function_callD1Ev+0x22>
Function_call::~Function_call()
 8016522:	687b      	ldr	r3, [r7, #4]
 8016524:	3320      	adds	r3, #32
 8016526:	4618      	mov	r0, r3
 8016528:	f7f7 fdc2 	bl	800e0b0 <_ZNSt6vectorIP10ExpressionSaIS1_EED1Ev>
 801652c:	687b      	ldr	r3, [r7, #4]
 801652e:	3308      	adds	r3, #8
 8016530:	4618      	mov	r0, r3
 8016532:	f00c fc1a 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	}
}
 8016536:	687b      	ldr	r3, [r7, #4]
 8016538:	4618      	mov	r0, r3
 801653a:	371c      	adds	r7, #28
 801653c:	46bd      	mov	sp, r7
 801653e:	bd90      	pop	{r4, r7, pc}

08016540 <_ZN8VariableD1Ev>:
{
	delete value;
	delete var;
}

Variable::~Variable()
 8016540:	b590      	push	{r4, r7, lr}
 8016542:	b083      	sub	sp, #12
 8016544:	af00      	add	r7, sp, #0
 8016546:	6078      	str	r0, [r7, #4]
{
	delete index;
 8016548:	687b      	ldr	r3, [r7, #4]
 801654a:	69dc      	ldr	r4, [r3, #28]
 801654c:	2c00      	cmp	r4, #0
 801654e:	d006      	beq.n	801655e <_ZN8VariableD1Ev+0x1e>
 8016550:	4620      	mov	r0, r4
 8016552:	f7f3 fc62 	bl	8009e1a <_ZN10ExpressionD1Ev>
 8016556:	2114      	movs	r1, #20
 8016558:	4620      	mov	r0, r4
 801655a:	f00c f953 	bl	8022804 <_ZdlPvj>
Variable::~Variable()
 801655e:	687b      	ldr	r3, [r7, #4]
 8016560:	3304      	adds	r3, #4
 8016562:	4618      	mov	r0, r3
 8016564:	f00c fc01 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
}
 8016568:	687b      	ldr	r3, [r7, #4]
 801656a:	4618      	mov	r0, r3
 801656c:	370c      	adds	r7, #12
 801656e:	46bd      	mov	sp, r7
 8016570:	bd90      	pop	{r4, r7, pc}

08016572 <_ZN9__gnu_cxxneIPP10ExpressionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
 8016572:	b590      	push	{r4, r7, lr}
 8016574:	b083      	sub	sp, #12
 8016576:	af00      	add	r7, sp, #0
 8016578:	6078      	str	r0, [r7, #4]
 801657a:	6039      	str	r1, [r7, #0]
    { return __lhs.base() != __rhs.base(); }
 801657c:	6878      	ldr	r0, [r7, #4]
 801657e:	f7fe ff5e 	bl	801543e <_ZNK9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEE4baseEv>
 8016582:	4603      	mov	r3, r0
 8016584:	681c      	ldr	r4, [r3, #0]
 8016586:	6838      	ldr	r0, [r7, #0]
 8016588:	f7fe ff59 	bl	801543e <_ZNK9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801658c:	4603      	mov	r3, r0
 801658e:	681b      	ldr	r3, [r3, #0]
 8016590:	429c      	cmp	r4, r3
 8016592:	bf14      	ite	ne
 8016594:	2301      	movne	r3, #1
 8016596:	2300      	moveq	r3, #0
 8016598:	b2db      	uxtb	r3, r3
 801659a:	4618      	mov	r0, r3
 801659c:	370c      	adds	r7, #12
 801659e:	46bd      	mov	sp, r7
 80165a0:	bd90      	pop	{r4, r7, pc}

080165a2 <_ZN9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
 80165a2:	b480      	push	{r7}
 80165a4:	b083      	sub	sp, #12
 80165a6:	af00      	add	r7, sp, #0
 80165a8:	6078      	str	r0, [r7, #4]
	++_M_current;
 80165aa:	687b      	ldr	r3, [r7, #4]
 80165ac:	681b      	ldr	r3, [r3, #0]
 80165ae:	1d1a      	adds	r2, r3, #4
 80165b0:	687b      	ldr	r3, [r7, #4]
 80165b2:	601a      	str	r2, [r3, #0]
	return *this;
 80165b4:	687b      	ldr	r3, [r7, #4]
      }
 80165b6:	4618      	mov	r0, r3
 80165b8:	370c      	adds	r7, #12
 80165ba:	46bd      	mov	sp, r7
 80165bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80165c0:	4770      	bx	lr
	...

080165c4 <_Z41__static_initialization_and_destruction_0ii>:
 80165c4:	b590      	push	{r4, r7, lr}
 80165c6:	b0e7      	sub	sp, #412	; 0x19c
 80165c8:	af02      	add	r7, sp, #8
 80165ca:	1d3b      	adds	r3, r7, #4
 80165cc:	6018      	str	r0, [r3, #0]
 80165ce:	463b      	mov	r3, r7
 80165d0:	6019      	str	r1, [r3, #0]
 80165d2:	1d3b      	adds	r3, r7, #4
 80165d4:	681b      	ldr	r3, [r3, #0]
 80165d6:	2b01      	cmp	r3, #1
 80165d8:	f040 819d 	bne.w	8016916 <_Z41__static_initialization_and_destruction_0ii+0x352>
 80165dc:	463b      	mov	r3, r7
 80165de:	681b      	ldr	r3, [r3, #0]
 80165e0:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80165e4:	4293      	cmp	r3, r2
 80165e6:	f040 8196 	bne.w	8016916 <_Z41__static_initialization_and_destruction_0ii+0x352>
};
 80165ea:	f107 0314 	add.w	r3, r7, #20
 80165ee:	4618      	mov	r0, r3
 80165f0:	2322      	movs	r3, #34	; 0x22
 80165f2:	461a      	mov	r2, r3
 80165f4:	2100      	movs	r1, #0
 80165f6:	f00d fdf5 	bl	80241e4 <memset>
 80165fa:	f107 0314 	add.w	r3, r7, #20
 80165fe:	223a      	movs	r2, #58	; 0x3a
 8016600:	701a      	strb	r2, [r3, #0]
 8016602:	f107 0314 	add.w	r3, r7, #20
 8016606:	2201      	movs	r2, #1
 8016608:	705a      	strb	r2, [r3, #1]
 801660a:	f107 0314 	add.w	r3, r7, #20
 801660e:	220a      	movs	r2, #10
 8016610:	709a      	strb	r2, [r3, #2]
 8016612:	f107 0314 	add.w	r3, r7, #20
 8016616:	220a      	movs	r2, #10
 8016618:	70da      	strb	r2, [r3, #3]
 801661a:	f107 0314 	add.w	r3, r7, #20
 801661e:	222c      	movs	r2, #44	; 0x2c
 8016620:	711a      	strb	r2, [r3, #4]
 8016622:	f107 0314 	add.w	r3, r7, #20
 8016626:	220c      	movs	r2, #12
 8016628:	715a      	strb	r2, [r3, #5]
 801662a:	f107 0314 	add.w	r3, r7, #20
 801662e:	222e      	movs	r2, #46	; 0x2e
 8016630:	719a      	strb	r2, [r3, #6]
 8016632:	f107 0314 	add.w	r3, r7, #20
 8016636:	220b      	movs	r2, #11
 8016638:	71da      	strb	r2, [r3, #7]
 801663a:	f107 0314 	add.w	r3, r7, #20
 801663e:	225b      	movs	r2, #91	; 0x5b
 8016640:	721a      	strb	r2, [r3, #8]
 8016642:	f107 0314 	add.w	r3, r7, #20
 8016646:	220d      	movs	r2, #13
 8016648:	725a      	strb	r2, [r3, #9]
 801664a:	f107 0314 	add.w	r3, r7, #20
 801664e:	225d      	movs	r2, #93	; 0x5d
 8016650:	729a      	strb	r2, [r3, #10]
 8016652:	f107 0314 	add.w	r3, r7, #20
 8016656:	220e      	movs	r2, #14
 8016658:	72da      	strb	r2, [r3, #11]
 801665a:	f107 0314 	add.w	r3, r7, #20
 801665e:	227c      	movs	r2, #124	; 0x7c
 8016660:	731a      	strb	r2, [r3, #12]
 8016662:	f107 0314 	add.w	r3, r7, #20
 8016666:	2215      	movs	r2, #21
 8016668:	735a      	strb	r2, [r3, #13]
 801666a:	f107 0314 	add.w	r3, r7, #20
 801666e:	2226      	movs	r2, #38	; 0x26
 8016670:	739a      	strb	r2, [r3, #14]
 8016672:	f107 0314 	add.w	r3, r7, #20
 8016676:	2216      	movs	r2, #22
 8016678:	73da      	strb	r2, [r3, #15]
 801667a:	f107 0314 	add.w	r3, r7, #20
 801667e:	222b      	movs	r2, #43	; 0x2b
 8016680:	741a      	strb	r2, [r3, #16]
 8016682:	f107 0314 	add.w	r3, r7, #20
 8016686:	221f      	movs	r2, #31
 8016688:	745a      	strb	r2, [r3, #17]
 801668a:	f107 0314 	add.w	r3, r7, #20
 801668e:	222d      	movs	r2, #45	; 0x2d
 8016690:	749a      	strb	r2, [r3, #18]
 8016692:	f107 0314 	add.w	r3, r7, #20
 8016696:	2220      	movs	r2, #32
 8016698:	74da      	strb	r2, [r3, #19]
 801669a:	f107 0314 	add.w	r3, r7, #20
 801669e:	222a      	movs	r2, #42	; 0x2a
 80166a0:	751a      	strb	r2, [r3, #20]
 80166a2:	f107 0314 	add.w	r3, r7, #20
 80166a6:	2221      	movs	r2, #33	; 0x21
 80166a8:	755a      	strb	r2, [r3, #21]
 80166aa:	f107 0314 	add.w	r3, r7, #20
 80166ae:	222f      	movs	r2, #47	; 0x2f
 80166b0:	759a      	strb	r2, [r3, #22]
 80166b2:	f107 0314 	add.w	r3, r7, #20
 80166b6:	2222      	movs	r2, #34	; 0x22
 80166b8:	75da      	strb	r2, [r3, #23]
 80166ba:	f107 0314 	add.w	r3, r7, #20
 80166be:	225e      	movs	r2, #94	; 0x5e
 80166c0:	761a      	strb	r2, [r3, #24]
 80166c2:	f107 0314 	add.w	r3, r7, #20
 80166c6:	2223      	movs	r2, #35	; 0x23
 80166c8:	765a      	strb	r2, [r3, #25]
 80166ca:	f107 0314 	add.w	r3, r7, #20
 80166ce:	2225      	movs	r2, #37	; 0x25
 80166d0:	769a      	strb	r2, [r3, #26]
 80166d2:	f107 0314 	add.w	r3, r7, #20
 80166d6:	2224      	movs	r2, #36	; 0x24
 80166d8:	76da      	strb	r2, [r3, #27]
 80166da:	f107 0314 	add.w	r3, r7, #20
 80166de:	2228      	movs	r2, #40	; 0x28
 80166e0:	771a      	strb	r2, [r3, #28]
 80166e2:	f107 0314 	add.w	r3, r7, #20
 80166e6:	2226      	movs	r2, #38	; 0x26
 80166e8:	775a      	strb	r2, [r3, #29]
 80166ea:	f107 0314 	add.w	r3, r7, #20
 80166ee:	2229      	movs	r2, #41	; 0x29
 80166f0:	779a      	strb	r2, [r3, #30]
 80166f2:	f107 0314 	add.w	r3, r7, #20
 80166f6:	2227      	movs	r2, #39	; 0x27
 80166f8:	77da      	strb	r2, [r3, #31]
 80166fa:	f107 0314 	add.w	r3, r7, #20
 80166fe:	2225      	movs	r2, #37	; 0x25
 8016700:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8016704:	f107 030c 	add.w	r3, r7, #12
 8016708:	f107 0214 	add.w	r2, r7, #20
 801670c:	601a      	str	r2, [r3, #0]
 801670e:	f107 030c 	add.w	r3, r7, #12
 8016712:	2211      	movs	r2, #17
 8016714:	605a      	str	r2, [r3, #4]
 8016716:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801671a:	4618      	mov	r0, r3
 801671c:	f7eb f9e8 	bl	8001af0 <_ZNSaISt4pairIKc10token_typeEEC1Ev>
 8016720:	f107 0138 	add.w	r1, r7, #56	; 0x38
 8016724:	f107 020c 	add.w	r2, r7, #12
 8016728:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801672c:	9300      	str	r3, [sp, #0]
 801672e:	460b      	mov	r3, r1
 8016730:	ca06      	ldmia	r2, {r1, r2}
 8016732:	4885      	ldr	r0, [pc, #532]	; (8016948 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 8016734:	f7eb f9f4 	bl	8001b20 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 8016738:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801673c:	4618      	mov	r0, r3
 801673e:	f7eb f9e3 	bl	8001b08 <_ZNSaISt4pairIKc10token_typeEED1Ev>
	{"true", TOKEN_TRUE},
 8016742:	2305      	movs	r3, #5
 8016744:	f887 3162 	strb.w	r3, [r7, #354]	; 0x162
};
 8016748:	f507 72b1 	add.w	r2, r7, #354	; 0x162
 801674c:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8016750:	497e      	ldr	r1, [pc, #504]	; (801694c <_Z41__static_initialization_and_destruction_0ii+0x388>)
 8016752:	4618      	mov	r0, r3
 8016754:	f7ea fcd0 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"false", TOKEN_FALSE},
 8016758:	2306      	movs	r3, #6
 801675a:	f887 3163 	strb.w	r3, [r7, #355]	; 0x163
};
 801675e:	f207 1263 	addw	r2, r7, #355	; 0x163
 8016762:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8016766:	331c      	adds	r3, #28
 8016768:	4979      	ldr	r1, [pc, #484]	; (8016950 <_Z41__static_initialization_and_destruction_0ii+0x38c>)
 801676a:	4618      	mov	r0, r3
 801676c:	f7ea fcec 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"setup", TOKEN_SETUP},
 8016770:	2307      	movs	r3, #7
 8016772:	f887 3164 	strb.w	r3, [r7, #356]	; 0x164
};
 8016776:	f507 72b2 	add.w	r2, r7, #356	; 0x164
 801677a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801677e:	3338      	adds	r3, #56	; 0x38
 8016780:	4974      	ldr	r1, [pc, #464]	; (8016954 <_Z41__static_initialization_and_destruction_0ii+0x390>)
 8016782:	4618      	mov	r0, r3
 8016784:	f7ea fce0 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"loop", TOKEN_LOOP},
 8016788:	2308      	movs	r3, #8
 801678a:	f887 3165 	strb.w	r3, [r7, #357]	; 0x165
};
 801678e:	f207 1265 	addw	r2, r7, #357	; 0x165
 8016792:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8016796:	3354      	adds	r3, #84	; 0x54
 8016798:	496f      	ldr	r1, [pc, #444]	; (8016958 <_Z41__static_initialization_and_destruction_0ii+0x394>)
 801679a:	4618      	mov	r0, r3
 801679c:	f7ea fcac 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"finish", TOKEN_FINISH},
 80167a0:	2309      	movs	r3, #9
 80167a2:	f887 3166 	strb.w	r3, [r7, #358]	; 0x166
};
 80167a6:	f507 72b3 	add.w	r2, r7, #358	; 0x166
 80167aa:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80167ae:	3370      	adds	r3, #112	; 0x70
 80167b0:	496a      	ldr	r1, [pc, #424]	; (801695c <_Z41__static_initialization_and_destruction_0ii+0x398>)
 80167b2:	4618      	mov	r0, r3
 80167b4:	f7ea fcf0 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"if", TOKEN_IF},
 80167b8:	2310      	movs	r3, #16
 80167ba:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167
};
 80167be:	f207 1267 	addw	r2, r7, #359	; 0x167
 80167c2:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80167c6:	338c      	adds	r3, #140	; 0x8c
 80167c8:	4965      	ldr	r1, [pc, #404]	; (8016960 <_Z41__static_initialization_and_destruction_0ii+0x39c>)
 80167ca:	4618      	mov	r0, r3
 80167cc:	f7ea fd0c 	bl	80011e8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>
	{"elseif", TOKEN_ELSEIF},
 80167d0:	2311      	movs	r3, #17
 80167d2:	f887 3168 	strb.w	r3, [r7, #360]	; 0x168
};
 80167d6:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 80167da:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80167de:	33a8      	adds	r3, #168	; 0xa8
 80167e0:	4960      	ldr	r1, [pc, #384]	; (8016964 <_Z41__static_initialization_and_destruction_0ii+0x3a0>)
 80167e2:	4618      	mov	r0, r3
 80167e4:	f7ea fcd8 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"else", TOKEN_ELSE},
 80167e8:	2312      	movs	r3, #18
 80167ea:	f887 3169 	strb.w	r3, [r7, #361]	; 0x169
};
 80167ee:	f207 1269 	addw	r2, r7, #361	; 0x169
 80167f2:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80167f6:	33c4      	adds	r3, #196	; 0xc4
 80167f8:	495b      	ldr	r1, [pc, #364]	; (8016968 <_Z41__static_initialization_and_destruction_0ii+0x3a4>)
 80167fa:	4618      	mov	r0, r3
 80167fc:	f7ea fc7c 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"while", TOKEN_WHILE},
 8016800:	2313      	movs	r3, #19
 8016802:	f887 316a 	strb.w	r3, [r7, #362]	; 0x16a
};
 8016806:	f507 72b5 	add.w	r2, r7, #362	; 0x16a
 801680a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801680e:	33e0      	adds	r3, #224	; 0xe0
 8016810:	4956      	ldr	r1, [pc, #344]	; (801696c <_Z41__static_initialization_and_destruction_0ii+0x3a8>)
 8016812:	4618      	mov	r0, r3
 8016814:	f7ea fc98 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"end", TOKEN_END},
 8016818:	2314      	movs	r3, #20
 801681a:	f887 316b 	strb.w	r3, [r7, #363]	; 0x16b
};
 801681e:	f207 126b 	addw	r2, r7, #363	; 0x16b
 8016822:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8016826:	33fc      	adds	r3, #252	; 0xfc
 8016828:	4951      	ldr	r1, [pc, #324]	; (8016970 <_Z41__static_initialization_and_destruction_0ii+0x3ac>)
 801682a:	4618      	mov	r0, r3
 801682c:	f7ea fd04 	bl	8001238 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>
 8016830:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8016834:	f107 0248 	add.w	r2, r7, #72	; 0x48
 8016838:	601a      	str	r2, [r3, #0]
 801683a:	f107 0340 	add.w	r3, r7, #64	; 0x40
 801683e:	220a      	movs	r2, #10
 8016840:	605a      	str	r2, [r3, #4]
 8016842:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8016846:	4618      	mov	r0, r3
 8016848:	f7eb f9f7 	bl	8001c3a <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 801684c:	f507 71b6 	add.w	r1, r7, #364	; 0x16c
 8016850:	f107 0240 	add.w	r2, r7, #64	; 0x40
 8016854:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8016858:	9300      	str	r3, [sp, #0]
 801685a:	460b      	mov	r3, r1
 801685c:	ca06      	ldmia	r2, {r1, r2}
 801685e:	4845      	ldr	r0, [pc, #276]	; (8016974 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 8016860:	f7eb fa03 	bl	8001c6a <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>
 8016864:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8016868:	4618      	mov	r0, r3
 801686a:	f7eb f9f2 	bl	8001c52 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 801686e:	f107 0448 	add.w	r4, r7, #72	; 0x48
 8016872:	f504 748c 	add.w	r4, r4, #280	; 0x118
 8016876:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801687a:	429c      	cmp	r4, r3
 801687c:	d004      	beq.n	8016888 <_Z41__static_initialization_and_destruction_0ii+0x2c4>
 801687e:	3c1c      	subs	r4, #28
 8016880:	4620      	mov	r0, r4
 8016882:	f7ea fc2c 	bl	80010de <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 8016886:	e7f6      	b.n	8016876 <_Z41__static_initialization_and_destruction_0ii+0x2b2>
};
 8016888:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 801688c:	2200      	movs	r2, #0
 801688e:	601a      	str	r2, [r3, #0]
 8016890:	605a      	str	r2, [r3, #4]
 8016892:	609a      	str	r2, [r3, #8]
 8016894:	233c      	movs	r3, #60	; 0x3c
 8016896:	f887 317c 	strb.w	r3, [r7, #380]	; 0x17c
 801689a:	231b      	movs	r3, #27
 801689c:	f887 317d 	strb.w	r3, [r7, #381]	; 0x17d
 80168a0:	231c      	movs	r3, #28
 80168a2:	f887 317e 	strb.w	r3, [r7, #382]	; 0x17e
 80168a6:	233e      	movs	r3, #62	; 0x3e
 80168a8:	f887 317f 	strb.w	r3, [r7, #383]	; 0x17f
 80168ac:	2319      	movs	r3, #25
 80168ae:	f887 3180 	strb.w	r3, [r7, #384]	; 0x180
 80168b2:	231a      	movs	r3, #26
 80168b4:	f887 3181 	strb.w	r3, [r7, #385]	; 0x181
 80168b8:	233d      	movs	r3, #61	; 0x3d
 80168ba:	f887 3182 	strb.w	r3, [r7, #386]	; 0x182
 80168be:	2318      	movs	r3, #24
 80168c0:	f887 3183 	strb.w	r3, [r7, #387]	; 0x183
 80168c4:	231d      	movs	r3, #29
 80168c6:	f887 3184 	strb.w	r3, [r7, #388]	; 0x184
 80168ca:	2321      	movs	r3, #33	; 0x21
 80168cc:	f887 3185 	strb.w	r3, [r7, #389]	; 0x185
 80168d0:	2317      	movs	r3, #23
 80168d2:	f887 3186 	strb.w	r3, [r7, #390]	; 0x186
 80168d6:	231e      	movs	r3, #30
 80168d8:	f887 3187 	strb.w	r3, [r7, #391]	; 0x187
 80168dc:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 80168e0:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 80168e4:	2304      	movs	r3, #4
 80168e6:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 80168ea:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 80168ee:	4618      	mov	r0, r3
 80168f0:	f7eb f9eb 	bl	8001cca <_ZNSaISt4pairIKc12double_tokenEEC1Ev>
 80168f4:	f507 72c4 	add.w	r2, r7, #392	; 0x188
 80168f8:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 80168fc:	9300      	str	r3, [sp, #0]
 80168fe:	4613      	mov	r3, r2
 8016900:	f507 72ba 	add.w	r2, r7, #372	; 0x174
 8016904:	ca06      	ldmia	r2, {r1, r2}
 8016906:	481c      	ldr	r0, [pc, #112]	; (8016978 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 8016908:	f7eb f9f7 	bl	8001cfa <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 801690c:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 8016910:	4618      	mov	r0, r3
 8016912:	f7eb f9e6 	bl	8001ce2 <_ZNSaISt4pairIKc12double_tokenEED1Ev>
static const std::map<char, double_token> token_double_chars
 8016916:	1d3b      	adds	r3, r7, #4
 8016918:	681b      	ldr	r3, [r3, #0]
 801691a:	2b00      	cmp	r3, #0
 801691c:	d10e      	bne.n	801693c <_Z41__static_initialization_and_destruction_0ii+0x378>
 801691e:	463b      	mov	r3, r7
 8016920:	681b      	ldr	r3, [r3, #0]
 8016922:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8016926:	4293      	cmp	r3, r2
 8016928:	d108      	bne.n	801693c <_Z41__static_initialization_and_destruction_0ii+0x378>
 801692a:	4813      	ldr	r0, [pc, #76]	; (8016978 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 801692c:	f7f2 fe77 	bl	800961e <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>
static const std::map<std::string, token_type> token_strings
 8016930:	4810      	ldr	r0, [pc, #64]	; (8016974 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 8016932:	f7f2 fe81 	bl	8009638 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
static const std::map<char, token_type> token_chars
 8016936:	4804      	ldr	r0, [pc, #16]	; (8016948 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 8016938:	f7f2 fe8b 	bl	8009652 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>
 801693c:	bf00      	nop
 801693e:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 8016942:	46bd      	mov	sp, r7
 8016944:	bd90      	pop	{r4, r7, pc}
 8016946:	bf00      	nop
 8016948:	2000049c 	.word	0x2000049c
 801694c:	08027bb4 	.word	0x08027bb4
 8016950:	08027bbc 	.word	0x08027bbc
 8016954:	08027bc4 	.word	0x08027bc4
 8016958:	08027bcc 	.word	0x08027bcc
 801695c:	08027bd4 	.word	0x08027bd4
 8016960:	08027bdc 	.word	0x08027bdc
 8016964:	08027be0 	.word	0x08027be0
 8016968:	08027be8 	.word	0x08027be8
 801696c:	08027bf0 	.word	0x08027bf0
 8016970:	08027bf8 	.word	0x08027bf8
 8016974:	200004b4 	.word	0x200004b4
 8016978:	200004cc 	.word	0x200004cc

0801697c <_GLOBAL__sub_I__ZN4BodyD2Ev>:
 801697c:	b580      	push	{r7, lr}
 801697e:	af00      	add	r7, sp, #0
 8016980:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8016984:	2001      	movs	r0, #1
 8016986:	f7ff fe1d 	bl	80165c4 <_Z41__static_initialization_and_destruction_0ii>
 801698a:	bd80      	pop	{r7, pc}

0801698c <_GLOBAL__sub_D__ZN4BodyD2Ev>:
 801698c:	b580      	push	{r7, lr}
 801698e:	af00      	add	r7, sp, #0
 8016990:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8016994:	2000      	movs	r0, #0
 8016996:	f7ff fe15 	bl	80165c4 <_Z41__static_initialization_and_destruction_0ii>
 801699a:	bd80      	pop	{r7, pc}

0801699c <_ZN6SymbolC1Ei>:
#include "Symbol.h"
#include "Transmitter.h"

Symbol::Symbol(int value)
 801699c:	b580      	push	{r7, lr}
 801699e:	b082      	sub	sp, #8
 80169a0:	af00      	add	r7, sp, #0
 80169a2:	6078      	str	r0, [r7, #4]
 80169a4:	6039      	str	r1, [r7, #0]
 80169a6:	687b      	ldr	r3, [r7, #4]
 80169a8:	3304      	adds	r3, #4
 80169aa:	4618      	mov	r0, r3
 80169ac:	f7f5 ff76 	bl	800c89c <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1Ev>
{
	type = SYMBOL_INT;
 80169b0:	687b      	ldr	r3, [r7, #4]
 80169b2:	2200      	movs	r2, #0
 80169b4:	701a      	strb	r2, [r3, #0]
	this->value = value;
 80169b6:	687b      	ldr	r3, [r7, #4]
 80169b8:	3304      	adds	r3, #4
 80169ba:	463a      	mov	r2, r7
 80169bc:	4611      	mov	r1, r2
 80169be:	4618      	mov	r0, r3
 80169c0:	f000 ff95 	bl	80178ee <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIRiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_>
}
 80169c4:	687b      	ldr	r3, [r7, #4]
 80169c6:	4618      	mov	r0, r3
 80169c8:	3708      	adds	r7, #8
 80169ca:	46bd      	mov	sp, r7
 80169cc:	bd80      	pop	{r7, pc}

080169ce <_ZN6SymbolC1Ef>:

Symbol::Symbol(float value)
 80169ce:	b580      	push	{r7, lr}
 80169d0:	b082      	sub	sp, #8
 80169d2:	af00      	add	r7, sp, #0
 80169d4:	6078      	str	r0, [r7, #4]
 80169d6:	ed87 0a00 	vstr	s0, [r7]
 80169da:	687b      	ldr	r3, [r7, #4]
 80169dc:	3304      	adds	r3, #4
 80169de:	4618      	mov	r0, r3
 80169e0:	f7f5 ff5c 	bl	800c89c <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1Ev>
{
	type = SYMBOL_FLOAT;
 80169e4:	687b      	ldr	r3, [r7, #4]
 80169e6:	2201      	movs	r2, #1
 80169e8:	701a      	strb	r2, [r3, #0]
	this->value = value;
 80169ea:	687b      	ldr	r3, [r7, #4]
 80169ec:	3304      	adds	r3, #4
 80169ee:	463a      	mov	r2, r7
 80169f0:	4611      	mov	r1, r2
 80169f2:	4618      	mov	r0, r3
 80169f4:	f000 ffa5 	bl	8017942 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIRfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_>
}
 80169f8:	687b      	ldr	r3, [r7, #4]
 80169fa:	4618      	mov	r0, r3
 80169fc:	3708      	adds	r7, #8
 80169fe:	46bd      	mov	sp, r7
 8016a00:	bd80      	pop	{r7, pc}

08016a02 <_ZN6SymbolC1Eb>:

Symbol::Symbol(bool value)
 8016a02:	b580      	push	{r7, lr}
 8016a04:	b082      	sub	sp, #8
 8016a06:	af00      	add	r7, sp, #0
 8016a08:	6078      	str	r0, [r7, #4]
 8016a0a:	460b      	mov	r3, r1
 8016a0c:	70fb      	strb	r3, [r7, #3]
 8016a0e:	687b      	ldr	r3, [r7, #4]
 8016a10:	3304      	adds	r3, #4
 8016a12:	4618      	mov	r0, r3
 8016a14:	f7f5 ff42 	bl	800c89c <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1Ev>
{
	type = SYMBOL_BOOL;
 8016a18:	687b      	ldr	r3, [r7, #4]
 8016a1a:	2202      	movs	r2, #2
 8016a1c:	701a      	strb	r2, [r3, #0]
	this->value = value;
 8016a1e:	687b      	ldr	r3, [r7, #4]
 8016a20:	3304      	adds	r3, #4
 8016a22:	1cfa      	adds	r2, r7, #3
 8016a24:	4611      	mov	r1, r2
 8016a26:	4618      	mov	r0, r3
 8016a28:	f000 ffb5 	bl	8017996 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIRbEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_>
}
 8016a2c:	687b      	ldr	r3, [r7, #4]
 8016a2e:	4618      	mov	r0, r3
 8016a30:	3708      	adds	r7, #8
 8016a32:	46bd      	mov	sp, r7
 8016a34:	bd80      	pop	{r7, pc}

08016a36 <_ZN6SymbolC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

Symbol::Symbol(std::string value)
 8016a36:	b580      	push	{r7, lr}
 8016a38:	b082      	sub	sp, #8
 8016a3a:	af00      	add	r7, sp, #0
 8016a3c:	6078      	str	r0, [r7, #4]
 8016a3e:	6039      	str	r1, [r7, #0]
 8016a40:	687b      	ldr	r3, [r7, #4]
 8016a42:	3304      	adds	r3, #4
 8016a44:	4618      	mov	r0, r3
 8016a46:	f7f5 ff29 	bl	800c89c <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1Ev>
{
	type = SYMBOL_STRING;
 8016a4a:	687b      	ldr	r3, [r7, #4]
 8016a4c:	2203      	movs	r2, #3
 8016a4e:	701a      	strb	r2, [r3, #0]
	this->value = value;
 8016a50:	687b      	ldr	r3, [r7, #4]
 8016a52:	3304      	adds	r3, #4
 8016a54:	6839      	ldr	r1, [r7, #0]
 8016a56:	4618      	mov	r0, r3
 8016a58:	f000 ffc8 	bl	80179ec <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIRS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_>
}
 8016a5c:	687b      	ldr	r3, [r7, #4]
 8016a5e:	4618      	mov	r0, r3
 8016a60:	3708      	adds	r7, #8
 8016a62:	46bd      	mov	sp, r7
 8016a64:	bd80      	pop	{r7, pc}
	...

08016a68 <_ZN6SymbolixES_>:
	type = SYMBOL_CONTAINER;
	this->value = std::vector<Symbol>(value);
}

Symbol& Symbol::operator[](Symbol idx)
{
 8016a68:	b580      	push	{r7, lr}
 8016a6a:	b098      	sub	sp, #96	; 0x60
 8016a6c:	af00      	add	r7, sp, #0
 8016a6e:	6078      	str	r0, [r7, #4]
 8016a70:	6039      	str	r1, [r7, #0]
	if (idx.type != SYMBOL_INT)
 8016a72:	683b      	ldr	r3, [r7, #0]
 8016a74:	781b      	ldrb	r3, [r3, #0]
 8016a76:	2b00      	cmp	r3, #0
 8016a78:	d01b      	beq.n	8016ab2 <_ZN6SymbolixES_+0x4a>
	{
		Transmitter::report_error("index must be an integer");
 8016a7a:	f107 0320 	add.w	r3, r7, #32
 8016a7e:	4618      	mov	r0, r3
 8016a80:	f00b fee2 	bl	8022848 <_ZNSaIcEC1Ev>
 8016a84:	f107 0220 	add.w	r2, r7, #32
 8016a88:	f107 0308 	add.w	r3, r7, #8
 8016a8c:	493a      	ldr	r1, [pc, #232]	; (8016b78 <_ZN6SymbolixES_+0x110>)
 8016a8e:	4618      	mov	r0, r3
 8016a90:	f7eb f881 	bl	8001b96 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8016a94:	f107 0308 	add.w	r3, r7, #8
 8016a98:	4618      	mov	r0, r3
 8016a9a:	f001 fb41 	bl	8018120 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8016a9e:	f107 0308 	add.w	r3, r7, #8
 8016aa2:	4618      	mov	r0, r3
 8016aa4:	f00c f961 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8016aa8:	f107 0320 	add.w	r3, r7, #32
 8016aac:	4618      	mov	r0, r3
 8016aae:	f00b fecc 	bl	802284a <_ZNSaIcED1Ev>
	}
	int i = std::get<int>(idx.value);
 8016ab2:	683b      	ldr	r3, [r7, #0]
 8016ab4:	3304      	adds	r3, #4
 8016ab6:	4618      	mov	r0, r3
 8016ab8:	f7ea ff26 	bl	8001908 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8016abc:	4603      	mov	r3, r0
 8016abe:	681b      	ldr	r3, [r3, #0]
 8016ac0:	65fb      	str	r3, [r7, #92]	; 0x5c

	if (i < 0)
 8016ac2:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8016ac4:	2b00      	cmp	r3, #0
 8016ac6:	da1b      	bge.n	8016b00 <_ZN6SymbolixES_+0x98>
	{
		Transmitter::report_error("index must be positive");
 8016ac8:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8016acc:	4618      	mov	r0, r3
 8016ace:	f00b febb 	bl	8022848 <_ZNSaIcEC1Ev>
 8016ad2:	f107 023c 	add.w	r2, r7, #60	; 0x3c
 8016ad6:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8016ada:	4928      	ldr	r1, [pc, #160]	; (8016b7c <_ZN6SymbolixES_+0x114>)
 8016adc:	4618      	mov	r0, r3
 8016ade:	f7eb f85a 	bl	8001b96 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8016ae2:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8016ae6:	4618      	mov	r0, r3
 8016ae8:	f001 fb1a 	bl	8018120 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8016aec:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8016af0:	4618      	mov	r0, r3
 8016af2:	f00c f93a 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8016af6:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8016afa:	4618      	mov	r0, r3
 8016afc:	f00b fea5 	bl	802284a <_ZNSaIcED1Ev>
	}

	if (type == SYMBOL_CONTAINER)
 8016b00:	687b      	ldr	r3, [r7, #4]
 8016b02:	781b      	ldrb	r3, [r3, #0]
 8016b04:	2b04      	cmp	r3, #4
 8016b06:	d10c      	bne.n	8016b22 <_ZN6SymbolixES_+0xba>
	{
		return std::get<std::vector<Symbol>>(value)[i];
 8016b08:	687b      	ldr	r3, [r7, #4]
 8016b0a:	3304      	adds	r3, #4
 8016b0c:	4618      	mov	r0, r3
 8016b0e:	f000 ffa6 	bl	8017a5e <_ZSt3getISt6vectorI6SymbolSaIS1_EEJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES3_EERT_RSt7variantIJDpT0_EE>
 8016b12:	4602      	mov	r2, r0
 8016b14:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8016b16:	4619      	mov	r1, r3
 8016b18:	4610      	mov	r0, r2
 8016b1a:	f000 ffac 	bl	8017a76 <_ZNSt6vectorI6SymbolSaIS0_EEixEj>
 8016b1e:	4603      	mov	r3, r0
 8016b20:	e026      	b.n	8016b70 <_ZN6SymbolixES_+0x108>
	}
	else
	{
		Transmitter::report_error(
 8016b22:	f107 0358 	add.w	r3, r7, #88	; 0x58
 8016b26:	4618      	mov	r0, r3
 8016b28:	f00b fe8e 	bl	8022848 <_ZNSaIcEC1Ev>
 8016b2c:	f107 0258 	add.w	r2, r7, #88	; 0x58
 8016b30:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8016b34:	4912      	ldr	r1, [pc, #72]	; (8016b80 <_ZN6SymbolixES_+0x118>)
 8016b36:	4618      	mov	r0, r3
 8016b38:	f7eb f82d 	bl	8001b96 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8016b3c:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8016b40:	4618      	mov	r0, r3
 8016b42:	f001 faed 	bl	8018120 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
				"cannot perform [] operation on non container");
 8016b46:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8016b4a:	4618      	mov	r0, r3
 8016b4c:	f00c f90d 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8016b50:	f107 0358 	add.w	r3, r7, #88	; 0x58
 8016b54:	4618      	mov	r0, r3
 8016b56:	f00b fe78 	bl	802284a <_ZNSaIcED1Ev>
		return std::get<std::vector<Symbol>>(value)[0];
 8016b5a:	687b      	ldr	r3, [r7, #4]
 8016b5c:	3304      	adds	r3, #4
 8016b5e:	4618      	mov	r0, r3
 8016b60:	f000 ff7d 	bl	8017a5e <_ZSt3getISt6vectorI6SymbolSaIS1_EEJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES3_EERT_RSt7variantIJDpT0_EE>
 8016b64:	4603      	mov	r3, r0
 8016b66:	2100      	movs	r1, #0
 8016b68:	4618      	mov	r0, r3
 8016b6a:	f000 ff84 	bl	8017a76 <_ZNSt6vectorI6SymbolSaIS0_EEixEj>
 8016b6e:	4603      	mov	r3, r0
	}
}
 8016b70:	4618      	mov	r0, r3
 8016b72:	3760      	adds	r7, #96	; 0x60
 8016b74:	46bd      	mov	sp, r7
 8016b76:	bd80      	pop	{r7, pc}
 8016b78:	08027c10 	.word	0x08027c10
 8016b7c:	08027c2c 	.word	0x08027c2c
 8016b80:	08027c44 	.word	0x08027c44

08016b84 <_ZN6SymbolplES_>:

Symbol Symbol::operator+(Symbol other)
{
 8016b84:	b590      	push	{r4, r7, lr}
 8016b86:	ed2d 8b02 	vpush	{d8}
 8016b8a:	b093      	sub	sp, #76	; 0x4c
 8016b8c:	af00      	add	r7, sp, #0
 8016b8e:	60f8      	str	r0, [r7, #12]
 8016b90:	60b9      	str	r1, [r7, #8]
 8016b92:	607a      	str	r2, [r7, #4]
	assert_types(other);
 8016b94:	6879      	ldr	r1, [r7, #4]
 8016b96:	68b8      	ldr	r0, [r7, #8]
 8016b98:	f000 fe1e 	bl	80177d8 <_ZN6Symbol12assert_typesERKS_>

	switch (type)
 8016b9c:	68bb      	ldr	r3, [r7, #8]
 8016b9e:	781b      	ldrb	r3, [r3, #0]
 8016ba0:	2b03      	cmp	r3, #3
 8016ba2:	d86a      	bhi.n	8016c7a <_ZN6SymbolplES_+0xf6>
 8016ba4:	a201      	add	r2, pc, #4	; (adr r2, 8016bac <_ZN6SymbolplES_+0x28>)
 8016ba6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8016baa:	bf00      	nop
 8016bac:	08016bbd 	.word	0x08016bbd
 8016bb0:	08016be5 	.word	0x08016be5
 8016bb4:	08016c15 	.word	0x08016c15
 8016bb8:	08016c3f 	.word	0x08016c3f
	{
	case SYMBOL_INT:
		return std::get<int>(this->value) + std::get<int>(other.value);
 8016bbc:	68bb      	ldr	r3, [r7, #8]
 8016bbe:	3304      	adds	r3, #4
 8016bc0:	4618      	mov	r0, r3
 8016bc2:	f7ea fea1 	bl	8001908 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8016bc6:	4603      	mov	r3, r0
 8016bc8:	681c      	ldr	r4, [r3, #0]
 8016bca:	687b      	ldr	r3, [r7, #4]
 8016bcc:	3304      	adds	r3, #4
 8016bce:	4618      	mov	r0, r3
 8016bd0:	f7ea fe9a 	bl	8001908 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8016bd4:	4603      	mov	r3, r0
 8016bd6:	681b      	ldr	r3, [r3, #0]
 8016bd8:	4423      	add	r3, r4
 8016bda:	4619      	mov	r1, r3
 8016bdc:	68f8      	ldr	r0, [r7, #12]
 8016bde:	f7ff fedd 	bl	801699c <_ZN6SymbolC1Ei>
 8016be2:	e06a      	b.n	8016cba <_ZN6SymbolplES_+0x136>
	case SYMBOL_FLOAT:
		return std::get<float>(this->value) + std::get<float>(other.value);
 8016be4:	68bb      	ldr	r3, [r7, #8]
 8016be6:	3304      	adds	r3, #4
 8016be8:	4618      	mov	r0, r3
 8016bea:	f000 fd5d 	bl	80176a8 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8016bee:	4603      	mov	r3, r0
 8016bf0:	ed93 8a00 	vldr	s16, [r3]
 8016bf4:	687b      	ldr	r3, [r7, #4]
 8016bf6:	3304      	adds	r3, #4
 8016bf8:	4618      	mov	r0, r3
 8016bfa:	f000 fd55 	bl	80176a8 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8016bfe:	4603      	mov	r3, r0
 8016c00:	edd3 7a00 	vldr	s15, [r3]
 8016c04:	ee78 7a27 	vadd.f32	s15, s16, s15
 8016c08:	eeb0 0a67 	vmov.f32	s0, s15
 8016c0c:	68f8      	ldr	r0, [r7, #12]
 8016c0e:	f7ff fede 	bl	80169ce <_ZN6SymbolC1Ef>
 8016c12:	e052      	b.n	8016cba <_ZN6SymbolplES_+0x136>
	case SYMBOL_BOOL:
		return std::get<bool>(this->value) + std::get<bool>(other.value);
 8016c14:	68bb      	ldr	r3, [r7, #8]
 8016c16:	3304      	adds	r3, #4
 8016c18:	4618      	mov	r0, r3
 8016c1a:	f7ea fc73 	bl	8001504 <_ZSt3getIbJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8016c1e:	4603      	mov	r3, r0
 8016c20:	781b      	ldrb	r3, [r3, #0]
 8016c22:	461c      	mov	r4, r3
 8016c24:	687b      	ldr	r3, [r7, #4]
 8016c26:	3304      	adds	r3, #4
 8016c28:	4618      	mov	r0, r3
 8016c2a:	f7ea fc6b 	bl	8001504 <_ZSt3getIbJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8016c2e:	4603      	mov	r3, r0
 8016c30:	781b      	ldrb	r3, [r3, #0]
 8016c32:	4423      	add	r3, r4
 8016c34:	4619      	mov	r1, r3
 8016c36:	68f8      	ldr	r0, [r7, #12]
 8016c38:	f7ff feb0 	bl	801699c <_ZN6SymbolC1Ei>
 8016c3c:	e03d      	b.n	8016cba <_ZN6SymbolplES_+0x136>
	case SYMBOL_STRING:
		return std::get<std::string>(this->value) + std::get<std::string>(
 8016c3e:	68bb      	ldr	r3, [r7, #8]
 8016c40:	3304      	adds	r3, #4
 8016c42:	4618      	mov	r0, r3
 8016c44:	f000 ff27 	bl	8017a96 <_ZSt3getINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJifbS5_St6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8016c48:	4604      	mov	r4, r0
				other.value);
 8016c4a:	687b      	ldr	r3, [r7, #4]
 8016c4c:	3304      	adds	r3, #4
 8016c4e:	4618      	mov	r0, r3
 8016c50:	f000 ff21 	bl	8017a96 <_ZSt3getINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJifbS5_St6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8016c54:	4602      	mov	r2, r0
		return std::get<std::string>(this->value) + std::get<std::string>(
 8016c56:	f107 0314 	add.w	r3, r7, #20
 8016c5a:	4621      	mov	r1, r4
 8016c5c:	4618      	mov	r0, r3
 8016c5e:	f000 ff26 	bl	8017aae <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_>
				other.value);
 8016c62:	f107 0314 	add.w	r3, r7, #20
 8016c66:	4619      	mov	r1, r3
 8016c68:	68f8      	ldr	r0, [r7, #12]
 8016c6a:	f7ff fee4 	bl	8016a36 <_ZN6SymbolC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8016c6e:	f107 0314 	add.w	r3, r7, #20
 8016c72:	4618      	mov	r0, r3
 8016c74:	f00c f879 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8016c78:	e01f      	b.n	8016cba <_ZN6SymbolplES_+0x136>
	default:
		Transmitter::report_error("invalid type for addidion");
 8016c7a:	f107 0344 	add.w	r3, r7, #68	; 0x44
 8016c7e:	4618      	mov	r0, r3
 8016c80:	f00b fde2 	bl	8022848 <_ZNSaIcEC1Ev>
 8016c84:	f107 0244 	add.w	r2, r7, #68	; 0x44
 8016c88:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8016c8c:	490e      	ldr	r1, [pc, #56]	; (8016cc8 <_ZN6SymbolplES_+0x144>)
 8016c8e:	4618      	mov	r0, r3
 8016c90:	f7ea ff81 	bl	8001b96 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8016c94:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8016c98:	4618      	mov	r0, r3
 8016c9a:	f001 fa41 	bl	8018120 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8016c9e:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8016ca2:	4618      	mov	r0, r3
 8016ca4:	f00c f861 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8016ca8:	f107 0344 	add.w	r3, r7, #68	; 0x44
 8016cac:	4618      	mov	r0, r3
 8016cae:	f00b fdcc 	bl	802284a <_ZNSaIcED1Ev>
	}

	return 0;
 8016cb2:	2100      	movs	r1, #0
 8016cb4:	68f8      	ldr	r0, [r7, #12]
 8016cb6:	f7ff fe71 	bl	801699c <_ZN6SymbolC1Ei>
}
 8016cba:	68f8      	ldr	r0, [r7, #12]
 8016cbc:	374c      	adds	r7, #76	; 0x4c
 8016cbe:	46bd      	mov	sp, r7
 8016cc0:	ecbd 8b02 	vpop	{d8}
 8016cc4:	bd90      	pop	{r4, r7, pc}
 8016cc6:	bf00      	nop
 8016cc8:	08027c74 	.word	0x08027c74

08016ccc <_ZN6SymbolmiES_>:

Symbol Symbol::operator-(Symbol other)
{
 8016ccc:	b590      	push	{r4, r7, lr}
 8016cce:	ed2d 8b02 	vpush	{d8}
 8016cd2:	b08d      	sub	sp, #52	; 0x34
 8016cd4:	af00      	add	r7, sp, #0
 8016cd6:	60f8      	str	r0, [r7, #12]
 8016cd8:	60b9      	str	r1, [r7, #8]
 8016cda:	607a      	str	r2, [r7, #4]
	assert_types(other);
 8016cdc:	6879      	ldr	r1, [r7, #4]
 8016cde:	68b8      	ldr	r0, [r7, #8]
 8016ce0:	f000 fd7a 	bl	80177d8 <_ZN6Symbol12assert_typesERKS_>

	switch (type)
 8016ce4:	68bb      	ldr	r3, [r7, #8]
 8016ce6:	781b      	ldrb	r3, [r3, #0]
 8016ce8:	2b00      	cmp	r3, #0
 8016cea:	d002      	beq.n	8016cf2 <_ZN6SymbolmiES_+0x26>
 8016cec:	2b01      	cmp	r3, #1
 8016cee:	d014      	beq.n	8016d1a <_ZN6SymbolmiES_+0x4e>
 8016cf0:	e02b      	b.n	8016d4a <_ZN6SymbolmiES_+0x7e>
	{
	case SYMBOL_INT:
		return std::get<int>(this->value) - std::get<int>(other.value);
 8016cf2:	68bb      	ldr	r3, [r7, #8]
 8016cf4:	3304      	adds	r3, #4
 8016cf6:	4618      	mov	r0, r3
 8016cf8:	f7ea fe06 	bl	8001908 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8016cfc:	4603      	mov	r3, r0
 8016cfe:	681c      	ldr	r4, [r3, #0]
 8016d00:	687b      	ldr	r3, [r7, #4]
 8016d02:	3304      	adds	r3, #4
 8016d04:	4618      	mov	r0, r3
 8016d06:	f7ea fdff 	bl	8001908 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8016d0a:	4603      	mov	r3, r0
 8016d0c:	681b      	ldr	r3, [r3, #0]
 8016d0e:	1ae3      	subs	r3, r4, r3
 8016d10:	4619      	mov	r1, r3
 8016d12:	68f8      	ldr	r0, [r7, #12]
 8016d14:	f7ff fe42 	bl	801699c <_ZN6SymbolC1Ei>
 8016d18:	e037      	b.n	8016d8a <_ZN6SymbolmiES_+0xbe>
	case SYMBOL_FLOAT:
		return std::get<float>(this->value) - std::get<float>(other.value);
 8016d1a:	68bb      	ldr	r3, [r7, #8]
 8016d1c:	3304      	adds	r3, #4
 8016d1e:	4618      	mov	r0, r3
 8016d20:	f000 fcc2 	bl	80176a8 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8016d24:	4603      	mov	r3, r0
 8016d26:	ed93 8a00 	vldr	s16, [r3]
 8016d2a:	687b      	ldr	r3, [r7, #4]
 8016d2c:	3304      	adds	r3, #4
 8016d2e:	4618      	mov	r0, r3
 8016d30:	f000 fcba 	bl	80176a8 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8016d34:	4603      	mov	r3, r0
 8016d36:	edd3 7a00 	vldr	s15, [r3]
 8016d3a:	ee78 7a67 	vsub.f32	s15, s16, s15
 8016d3e:	eeb0 0a67 	vmov.f32	s0, s15
 8016d42:	68f8      	ldr	r0, [r7, #12]
 8016d44:	f7ff fe43 	bl	80169ce <_ZN6SymbolC1Ef>
 8016d48:	e01f      	b.n	8016d8a <_ZN6SymbolmiES_+0xbe>
	default:
		Transmitter::report_error("invalid type for substraction");
 8016d4a:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8016d4e:	4618      	mov	r0, r3
 8016d50:	f00b fd7a 	bl	8022848 <_ZNSaIcEC1Ev>
 8016d54:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 8016d58:	f107 0314 	add.w	r3, r7, #20
 8016d5c:	490e      	ldr	r1, [pc, #56]	; (8016d98 <_ZN6SymbolmiES_+0xcc>)
 8016d5e:	4618      	mov	r0, r3
 8016d60:	f7ea ff19 	bl	8001b96 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8016d64:	f107 0314 	add.w	r3, r7, #20
 8016d68:	4618      	mov	r0, r3
 8016d6a:	f001 f9d9 	bl	8018120 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8016d6e:	f107 0314 	add.w	r3, r7, #20
 8016d72:	4618      	mov	r0, r3
 8016d74:	f00b fff9 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8016d78:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8016d7c:	4618      	mov	r0, r3
 8016d7e:	f00b fd64 	bl	802284a <_ZNSaIcED1Ev>
	}

	return 0;
 8016d82:	2100      	movs	r1, #0
 8016d84:	68f8      	ldr	r0, [r7, #12]
 8016d86:	f7ff fe09 	bl	801699c <_ZN6SymbolC1Ei>
}
 8016d8a:	68f8      	ldr	r0, [r7, #12]
 8016d8c:	3734      	adds	r7, #52	; 0x34
 8016d8e:	46bd      	mov	sp, r7
 8016d90:	ecbd 8b02 	vpop	{d8}
 8016d94:	bd90      	pop	{r4, r7, pc}
 8016d96:	bf00      	nop
 8016d98:	08027c90 	.word	0x08027c90

08016d9c <_ZN6SymbolaaES_>:

Symbol Symbol::operator&&(Symbol other)
{
 8016d9c:	b580      	push	{r7, lr}
 8016d9e:	b08c      	sub	sp, #48	; 0x30
 8016da0:	af00      	add	r7, sp, #0
 8016da2:	60f8      	str	r0, [r7, #12]
 8016da4:	60b9      	str	r1, [r7, #8]
 8016da6:	607a      	str	r2, [r7, #4]
	if (type != SYMBOL_BOOL || other.type != SYMBOL_BOOL)
 8016da8:	68bb      	ldr	r3, [r7, #8]
 8016daa:	781b      	ldrb	r3, [r3, #0]
 8016dac:	2b02      	cmp	r3, #2
 8016dae:	d103      	bne.n	8016db8 <_ZN6SymbolaaES_+0x1c>
 8016db0:	687b      	ldr	r3, [r7, #4]
 8016db2:	781b      	ldrb	r3, [r3, #0]
 8016db4:	2b02      	cmp	r3, #2
 8016db6:	d01b      	beq.n	8016df0 <_ZN6SymbolaaES_+0x54>
	{
		Transmitter::report_error("operator and needs boolean expressions");
 8016db8:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8016dbc:	4618      	mov	r0, r3
 8016dbe:	f00b fd43 	bl	8022848 <_ZNSaIcEC1Ev>
 8016dc2:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 8016dc6:	f107 0314 	add.w	r3, r7, #20
 8016dca:	4918      	ldr	r1, [pc, #96]	; (8016e2c <_ZN6SymbolaaES_+0x90>)
 8016dcc:	4618      	mov	r0, r3
 8016dce:	f7ea fee2 	bl	8001b96 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8016dd2:	f107 0314 	add.w	r3, r7, #20
 8016dd6:	4618      	mov	r0, r3
 8016dd8:	f001 f9a2 	bl	8018120 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8016ddc:	f107 0314 	add.w	r3, r7, #20
 8016de0:	4618      	mov	r0, r3
 8016de2:	f00b ffc2 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8016de6:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8016dea:	4618      	mov	r0, r3
 8016dec:	f00b fd2d 	bl	802284a <_ZNSaIcED1Ev>
	}

	return std::get<bool>(this->value) && std::get<bool>(other.value);
 8016df0:	68bb      	ldr	r3, [r7, #8]
 8016df2:	3304      	adds	r3, #4
 8016df4:	4618      	mov	r0, r3
 8016df6:	f7ea fb85 	bl	8001504 <_ZSt3getIbJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8016dfa:	4603      	mov	r3, r0
 8016dfc:	781b      	ldrb	r3, [r3, #0]
 8016dfe:	2b00      	cmp	r3, #0
 8016e00:	d00a      	beq.n	8016e18 <_ZN6SymbolaaES_+0x7c>
 8016e02:	687b      	ldr	r3, [r7, #4]
 8016e04:	3304      	adds	r3, #4
 8016e06:	4618      	mov	r0, r3
 8016e08:	f7ea fb7c 	bl	8001504 <_ZSt3getIbJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8016e0c:	4603      	mov	r3, r0
 8016e0e:	781b      	ldrb	r3, [r3, #0]
 8016e10:	2b00      	cmp	r3, #0
 8016e12:	d001      	beq.n	8016e18 <_ZN6SymbolaaES_+0x7c>
 8016e14:	2301      	movs	r3, #1
 8016e16:	e000      	b.n	8016e1a <_ZN6SymbolaaES_+0x7e>
 8016e18:	2300      	movs	r3, #0
 8016e1a:	4619      	mov	r1, r3
 8016e1c:	68f8      	ldr	r0, [r7, #12]
 8016e1e:	f7ff fdf0 	bl	8016a02 <_ZN6SymbolC1Eb>
}
 8016e22:	68f8      	ldr	r0, [r7, #12]
 8016e24:	3730      	adds	r7, #48	; 0x30
 8016e26:	46bd      	mov	sp, r7
 8016e28:	bd80      	pop	{r7, pc}
 8016e2a:	bf00      	nop
 8016e2c:	08027cb0 	.word	0x08027cb0

08016e30 <_ZN6SymbolooES_>:

Symbol Symbol::operator||(Symbol other)
{
 8016e30:	b580      	push	{r7, lr}
 8016e32:	b08c      	sub	sp, #48	; 0x30
 8016e34:	af00      	add	r7, sp, #0
 8016e36:	60f8      	str	r0, [r7, #12]
 8016e38:	60b9      	str	r1, [r7, #8]
 8016e3a:	607a      	str	r2, [r7, #4]
	if (type != SYMBOL_BOOL || other.type != SYMBOL_BOOL)
 8016e3c:	68bb      	ldr	r3, [r7, #8]
 8016e3e:	781b      	ldrb	r3, [r3, #0]
 8016e40:	2b02      	cmp	r3, #2
 8016e42:	d103      	bne.n	8016e4c <_ZN6SymbolooES_+0x1c>
 8016e44:	687b      	ldr	r3, [r7, #4]
 8016e46:	781b      	ldrb	r3, [r3, #0]
 8016e48:	2b02      	cmp	r3, #2
 8016e4a:	d01b      	beq.n	8016e84 <_ZN6SymbolooES_+0x54>
	{
		Transmitter::report_error("operator or needs boolean expressions");
 8016e4c:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8016e50:	4618      	mov	r0, r3
 8016e52:	f00b fcf9 	bl	8022848 <_ZNSaIcEC1Ev>
 8016e56:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 8016e5a:	f107 0314 	add.w	r3, r7, #20
 8016e5e:	4918      	ldr	r1, [pc, #96]	; (8016ec0 <_ZN6SymbolooES_+0x90>)
 8016e60:	4618      	mov	r0, r3
 8016e62:	f7ea fe98 	bl	8001b96 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8016e66:	f107 0314 	add.w	r3, r7, #20
 8016e6a:	4618      	mov	r0, r3
 8016e6c:	f001 f958 	bl	8018120 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8016e70:	f107 0314 	add.w	r3, r7, #20
 8016e74:	4618      	mov	r0, r3
 8016e76:	f00b ff78 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8016e7a:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8016e7e:	4618      	mov	r0, r3
 8016e80:	f00b fce3 	bl	802284a <_ZNSaIcED1Ev>
	}

	return std::get<bool>(this->value) || std::get<bool>(other.value);
 8016e84:	68bb      	ldr	r3, [r7, #8]
 8016e86:	3304      	adds	r3, #4
 8016e88:	4618      	mov	r0, r3
 8016e8a:	f7ea fb3b 	bl	8001504 <_ZSt3getIbJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8016e8e:	4603      	mov	r3, r0
 8016e90:	781b      	ldrb	r3, [r3, #0]
 8016e92:	2b00      	cmp	r3, #0
 8016e94:	d108      	bne.n	8016ea8 <_ZN6SymbolooES_+0x78>
 8016e96:	687b      	ldr	r3, [r7, #4]
 8016e98:	3304      	adds	r3, #4
 8016e9a:	4618      	mov	r0, r3
 8016e9c:	f7ea fb32 	bl	8001504 <_ZSt3getIbJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8016ea0:	4603      	mov	r3, r0
 8016ea2:	781b      	ldrb	r3, [r3, #0]
 8016ea4:	2b00      	cmp	r3, #0
 8016ea6:	d001      	beq.n	8016eac <_ZN6SymbolooES_+0x7c>
 8016ea8:	2301      	movs	r3, #1
 8016eaa:	e000      	b.n	8016eae <_ZN6SymbolooES_+0x7e>
 8016eac:	2300      	movs	r3, #0
 8016eae:	4619      	mov	r1, r3
 8016eb0:	68f8      	ldr	r0, [r7, #12]
 8016eb2:	f7ff fda6 	bl	8016a02 <_ZN6SymbolC1Eb>
}
 8016eb6:	68f8      	ldr	r0, [r7, #12]
 8016eb8:	3730      	adds	r7, #48	; 0x30
 8016eba:	46bd      	mov	sp, r7
 8016ebc:	bd80      	pop	{r7, pc}
 8016ebe:	bf00      	nop
 8016ec0:	08027cd8 	.word	0x08027cd8

08016ec4 <_ZN6SymbolntEv>:

Symbol Symbol::operator!()
{
 8016ec4:	b580      	push	{r7, lr}
 8016ec6:	b08a      	sub	sp, #40	; 0x28
 8016ec8:	af00      	add	r7, sp, #0
 8016eca:	6078      	str	r0, [r7, #4]
 8016ecc:	6039      	str	r1, [r7, #0]
	if (type != SYMBOL_BOOL)
 8016ece:	683b      	ldr	r3, [r7, #0]
 8016ed0:	781b      	ldrb	r3, [r3, #0]
 8016ed2:	2b02      	cmp	r3, #2
 8016ed4:	d01b      	beq.n	8016f0e <_ZN6SymbolntEv+0x4a>
	{
		Transmitter::report_error("operator ! needs boolean expressions");
 8016ed6:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8016eda:	4618      	mov	r0, r3
 8016edc:	f00b fcb4 	bl	8022848 <_ZNSaIcEC1Ev>
 8016ee0:	f107 0224 	add.w	r2, r7, #36	; 0x24
 8016ee4:	f107 030c 	add.w	r3, r7, #12
 8016ee8:	4912      	ldr	r1, [pc, #72]	; (8016f34 <_ZN6SymbolntEv+0x70>)
 8016eea:	4618      	mov	r0, r3
 8016eec:	f7ea fe53 	bl	8001b96 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8016ef0:	f107 030c 	add.w	r3, r7, #12
 8016ef4:	4618      	mov	r0, r3
 8016ef6:	f001 f913 	bl	8018120 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8016efa:	f107 030c 	add.w	r3, r7, #12
 8016efe:	4618      	mov	r0, r3
 8016f00:	f00b ff33 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8016f04:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8016f08:	4618      	mov	r0, r3
 8016f0a:	f00b fc9e 	bl	802284a <_ZNSaIcED1Ev>
	}

	return !(std::get<bool>(this->value));
 8016f0e:	683b      	ldr	r3, [r7, #0]
 8016f10:	3304      	adds	r3, #4
 8016f12:	4618      	mov	r0, r3
 8016f14:	f7ea faf6 	bl	8001504 <_ZSt3getIbJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8016f18:	4603      	mov	r3, r0
 8016f1a:	781b      	ldrb	r3, [r3, #0]
 8016f1c:	f083 0301 	eor.w	r3, r3, #1
 8016f20:	b2db      	uxtb	r3, r3
 8016f22:	4619      	mov	r1, r3
 8016f24:	6878      	ldr	r0, [r7, #4]
 8016f26:	f7ff fd6c 	bl	8016a02 <_ZN6SymbolC1Eb>
}
 8016f2a:	6878      	ldr	r0, [r7, #4]
 8016f2c:	3728      	adds	r7, #40	; 0x28
 8016f2e:	46bd      	mov	sp, r7
 8016f30:	bd80      	pop	{r7, pc}
 8016f32:	bf00      	nop
 8016f34:	08027d00 	.word	0x08027d00

08016f38 <_ZN6SymbolgtES_>:

Symbol Symbol::operator>(Symbol other)
{
 8016f38:	b590      	push	{r4, r7, lr}
 8016f3a:	ed2d 8b02 	vpush	{d8}
 8016f3e:	b08d      	sub	sp, #52	; 0x34
 8016f40:	af00      	add	r7, sp, #0
 8016f42:	60f8      	str	r0, [r7, #12]
 8016f44:	60b9      	str	r1, [r7, #8]
 8016f46:	607a      	str	r2, [r7, #4]
	assert_types(other);
 8016f48:	6879      	ldr	r1, [r7, #4]
 8016f4a:	68b8      	ldr	r0, [r7, #8]
 8016f4c:	f000 fc44 	bl	80177d8 <_ZN6Symbol12assert_typesERKS_>

	switch (type)
 8016f50:	68bb      	ldr	r3, [r7, #8]
 8016f52:	781b      	ldrb	r3, [r3, #0]
 8016f54:	2b00      	cmp	r3, #0
 8016f56:	d002      	beq.n	8016f5e <_ZN6SymbolgtES_+0x26>
 8016f58:	2b01      	cmp	r3, #1
 8016f5a:	d018      	beq.n	8016f8e <_ZN6SymbolgtES_+0x56>
 8016f5c:	e034      	b.n	8016fc8 <_ZN6SymbolgtES_+0x90>
	{
	case SYMBOL_INT:
		return (std::get<int>(this->value) > std::get<int>(other.value));
 8016f5e:	68bb      	ldr	r3, [r7, #8]
 8016f60:	3304      	adds	r3, #4
 8016f62:	4618      	mov	r0, r3
 8016f64:	f7ea fcd0 	bl	8001908 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8016f68:	4603      	mov	r3, r0
 8016f6a:	681c      	ldr	r4, [r3, #0]
 8016f6c:	687b      	ldr	r3, [r7, #4]
 8016f6e:	3304      	adds	r3, #4
 8016f70:	4618      	mov	r0, r3
 8016f72:	f7ea fcc9 	bl	8001908 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8016f76:	4603      	mov	r3, r0
 8016f78:	681b      	ldr	r3, [r3, #0]
 8016f7a:	429c      	cmp	r4, r3
 8016f7c:	bfcc      	ite	gt
 8016f7e:	2301      	movgt	r3, #1
 8016f80:	2300      	movle	r3, #0
 8016f82:	b2db      	uxtb	r3, r3
 8016f84:	4619      	mov	r1, r3
 8016f86:	68f8      	ldr	r0, [r7, #12]
 8016f88:	f7ff fd3b 	bl	8016a02 <_ZN6SymbolC1Eb>
 8016f8c:	e03c      	b.n	8017008 <_ZN6SymbolgtES_+0xd0>
	case SYMBOL_FLOAT:
		return (std::get<float>(this->value) > std::get<float>(other.value));
 8016f8e:	68bb      	ldr	r3, [r7, #8]
 8016f90:	3304      	adds	r3, #4
 8016f92:	4618      	mov	r0, r3
 8016f94:	f000 fb88 	bl	80176a8 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8016f98:	4603      	mov	r3, r0
 8016f9a:	ed93 8a00 	vldr	s16, [r3]
 8016f9e:	687b      	ldr	r3, [r7, #4]
 8016fa0:	3304      	adds	r3, #4
 8016fa2:	4618      	mov	r0, r3
 8016fa4:	f000 fb80 	bl	80176a8 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8016fa8:	4603      	mov	r3, r0
 8016faa:	edd3 7a00 	vldr	s15, [r3]
 8016fae:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8016fb2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016fb6:	bfcc      	ite	gt
 8016fb8:	2301      	movgt	r3, #1
 8016fba:	2300      	movle	r3, #0
 8016fbc:	b2db      	uxtb	r3, r3
 8016fbe:	4619      	mov	r1, r3
 8016fc0:	68f8      	ldr	r0, [r7, #12]
 8016fc2:	f7ff fd1e 	bl	8016a02 <_ZN6SymbolC1Eb>
 8016fc6:	e01f      	b.n	8017008 <_ZN6SymbolgtES_+0xd0>
	default:
		Transmitter::report_error("invalid type for comparison");
 8016fc8:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8016fcc:	4618      	mov	r0, r3
 8016fce:	f00b fc3b 	bl	8022848 <_ZNSaIcEC1Ev>
 8016fd2:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 8016fd6:	f107 0314 	add.w	r3, r7, #20
 8016fda:	490e      	ldr	r1, [pc, #56]	; (8017014 <_ZN6SymbolgtES_+0xdc>)
 8016fdc:	4618      	mov	r0, r3
 8016fde:	f7ea fdda 	bl	8001b96 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8016fe2:	f107 0314 	add.w	r3, r7, #20
 8016fe6:	4618      	mov	r0, r3
 8016fe8:	f001 f89a 	bl	8018120 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8016fec:	f107 0314 	add.w	r3, r7, #20
 8016ff0:	4618      	mov	r0, r3
 8016ff2:	f00b feba 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8016ff6:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8016ffa:	4618      	mov	r0, r3
 8016ffc:	f00b fc25 	bl	802284a <_ZNSaIcED1Ev>
	}

	return 0;
 8017000:	2100      	movs	r1, #0
 8017002:	68f8      	ldr	r0, [r7, #12]
 8017004:	f7ff fcca 	bl	801699c <_ZN6SymbolC1Ei>
}
 8017008:	68f8      	ldr	r0, [r7, #12]
 801700a:	3734      	adds	r7, #52	; 0x34
 801700c:	46bd      	mov	sp, r7
 801700e:	ecbd 8b02 	vpop	{d8}
 8017012:	bd90      	pop	{r4, r7, pc}
 8017014:	08027d28 	.word	0x08027d28

08017018 <_ZN6SymbolgeES_>:

Symbol Symbol::operator>=(Symbol other)
{
 8017018:	b590      	push	{r4, r7, lr}
 801701a:	ed2d 8b02 	vpush	{d8}
 801701e:	b08d      	sub	sp, #52	; 0x34
 8017020:	af00      	add	r7, sp, #0
 8017022:	60f8      	str	r0, [r7, #12]
 8017024:	60b9      	str	r1, [r7, #8]
 8017026:	607a      	str	r2, [r7, #4]
	assert_types(other);
 8017028:	6879      	ldr	r1, [r7, #4]
 801702a:	68b8      	ldr	r0, [r7, #8]
 801702c:	f000 fbd4 	bl	80177d8 <_ZN6Symbol12assert_typesERKS_>

	switch (type)
 8017030:	68bb      	ldr	r3, [r7, #8]
 8017032:	781b      	ldrb	r3, [r3, #0]
 8017034:	2b00      	cmp	r3, #0
 8017036:	d002      	beq.n	801703e <_ZN6SymbolgeES_+0x26>
 8017038:	2b01      	cmp	r3, #1
 801703a:	d018      	beq.n	801706e <_ZN6SymbolgeES_+0x56>
 801703c:	e034      	b.n	80170a8 <_ZN6SymbolgeES_+0x90>
	{
	case SYMBOL_INT:
		return (std::get<int>(this->value) >= std::get<int>(other.value));
 801703e:	68bb      	ldr	r3, [r7, #8]
 8017040:	3304      	adds	r3, #4
 8017042:	4618      	mov	r0, r3
 8017044:	f7ea fc60 	bl	8001908 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017048:	4603      	mov	r3, r0
 801704a:	681c      	ldr	r4, [r3, #0]
 801704c:	687b      	ldr	r3, [r7, #4]
 801704e:	3304      	adds	r3, #4
 8017050:	4618      	mov	r0, r3
 8017052:	f7ea fc59 	bl	8001908 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017056:	4603      	mov	r3, r0
 8017058:	681b      	ldr	r3, [r3, #0]
 801705a:	429c      	cmp	r4, r3
 801705c:	bfac      	ite	ge
 801705e:	2301      	movge	r3, #1
 8017060:	2300      	movlt	r3, #0
 8017062:	b2db      	uxtb	r3, r3
 8017064:	4619      	mov	r1, r3
 8017066:	68f8      	ldr	r0, [r7, #12]
 8017068:	f7ff fccb 	bl	8016a02 <_ZN6SymbolC1Eb>
 801706c:	e03c      	b.n	80170e8 <_ZN6SymbolgeES_+0xd0>
	case SYMBOL_FLOAT:
		return (std::get<float>(this->value) >= std::get<float>(other.value));
 801706e:	68bb      	ldr	r3, [r7, #8]
 8017070:	3304      	adds	r3, #4
 8017072:	4618      	mov	r0, r3
 8017074:	f000 fb18 	bl	80176a8 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017078:	4603      	mov	r3, r0
 801707a:	ed93 8a00 	vldr	s16, [r3]
 801707e:	687b      	ldr	r3, [r7, #4]
 8017080:	3304      	adds	r3, #4
 8017082:	4618      	mov	r0, r3
 8017084:	f000 fb10 	bl	80176a8 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017088:	4603      	mov	r3, r0
 801708a:	edd3 7a00 	vldr	s15, [r3]
 801708e:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8017092:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017096:	bfac      	ite	ge
 8017098:	2301      	movge	r3, #1
 801709a:	2300      	movlt	r3, #0
 801709c:	b2db      	uxtb	r3, r3
 801709e:	4619      	mov	r1, r3
 80170a0:	68f8      	ldr	r0, [r7, #12]
 80170a2:	f7ff fcae 	bl	8016a02 <_ZN6SymbolC1Eb>
 80170a6:	e01f      	b.n	80170e8 <_ZN6SymbolgeES_+0xd0>
	default:
		Transmitter::report_error("invalid type for comparison");
 80170a8:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80170ac:	4618      	mov	r0, r3
 80170ae:	f00b fbcb 	bl	8022848 <_ZNSaIcEC1Ev>
 80170b2:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 80170b6:	f107 0314 	add.w	r3, r7, #20
 80170ba:	490e      	ldr	r1, [pc, #56]	; (80170f4 <_ZN6SymbolgeES_+0xdc>)
 80170bc:	4618      	mov	r0, r3
 80170be:	f7ea fd6a 	bl	8001b96 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 80170c2:	f107 0314 	add.w	r3, r7, #20
 80170c6:	4618      	mov	r0, r3
 80170c8:	f001 f82a 	bl	8018120 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 80170cc:	f107 0314 	add.w	r3, r7, #20
 80170d0:	4618      	mov	r0, r3
 80170d2:	f00b fe4a 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80170d6:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80170da:	4618      	mov	r0, r3
 80170dc:	f00b fbb5 	bl	802284a <_ZNSaIcED1Ev>
	}

	return 0;
 80170e0:	2100      	movs	r1, #0
 80170e2:	68f8      	ldr	r0, [r7, #12]
 80170e4:	f7ff fc5a 	bl	801699c <_ZN6SymbolC1Ei>
}
 80170e8:	68f8      	ldr	r0, [r7, #12]
 80170ea:	3734      	adds	r7, #52	; 0x34
 80170ec:	46bd      	mov	sp, r7
 80170ee:	ecbd 8b02 	vpop	{d8}
 80170f2:	bd90      	pop	{r4, r7, pc}
 80170f4:	08027d28 	.word	0x08027d28

080170f8 <_ZN6SymbolltES_>:

Symbol Symbol::operator<(Symbol other)
{
 80170f8:	b590      	push	{r4, r7, lr}
 80170fa:	ed2d 8b02 	vpush	{d8}
 80170fe:	b08d      	sub	sp, #52	; 0x34
 8017100:	af00      	add	r7, sp, #0
 8017102:	60f8      	str	r0, [r7, #12]
 8017104:	60b9      	str	r1, [r7, #8]
 8017106:	607a      	str	r2, [r7, #4]
	assert_types(other);
 8017108:	6879      	ldr	r1, [r7, #4]
 801710a:	68b8      	ldr	r0, [r7, #8]
 801710c:	f000 fb64 	bl	80177d8 <_ZN6Symbol12assert_typesERKS_>

	switch (type)
 8017110:	68bb      	ldr	r3, [r7, #8]
 8017112:	781b      	ldrb	r3, [r3, #0]
 8017114:	2b00      	cmp	r3, #0
 8017116:	d002      	beq.n	801711e <_ZN6SymbolltES_+0x26>
 8017118:	2b01      	cmp	r3, #1
 801711a:	d018      	beq.n	801714e <_ZN6SymbolltES_+0x56>
 801711c:	e034      	b.n	8017188 <_ZN6SymbolltES_+0x90>
	{
	case SYMBOL_INT:
		return (std::get<int>(this->value) < std::get<int>(other.value));
 801711e:	68bb      	ldr	r3, [r7, #8]
 8017120:	3304      	adds	r3, #4
 8017122:	4618      	mov	r0, r3
 8017124:	f7ea fbf0 	bl	8001908 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017128:	4603      	mov	r3, r0
 801712a:	681c      	ldr	r4, [r3, #0]
 801712c:	687b      	ldr	r3, [r7, #4]
 801712e:	3304      	adds	r3, #4
 8017130:	4618      	mov	r0, r3
 8017132:	f7ea fbe9 	bl	8001908 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017136:	4603      	mov	r3, r0
 8017138:	681b      	ldr	r3, [r3, #0]
 801713a:	429c      	cmp	r4, r3
 801713c:	bfb4      	ite	lt
 801713e:	2301      	movlt	r3, #1
 8017140:	2300      	movge	r3, #0
 8017142:	b2db      	uxtb	r3, r3
 8017144:	4619      	mov	r1, r3
 8017146:	68f8      	ldr	r0, [r7, #12]
 8017148:	f7ff fc5b 	bl	8016a02 <_ZN6SymbolC1Eb>
 801714c:	e03c      	b.n	80171c8 <_ZN6SymbolltES_+0xd0>
	case SYMBOL_FLOAT:
		return (std::get<float>(this->value) < std::get<float>(other.value));
 801714e:	68bb      	ldr	r3, [r7, #8]
 8017150:	3304      	adds	r3, #4
 8017152:	4618      	mov	r0, r3
 8017154:	f000 faa8 	bl	80176a8 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017158:	4603      	mov	r3, r0
 801715a:	ed93 8a00 	vldr	s16, [r3]
 801715e:	687b      	ldr	r3, [r7, #4]
 8017160:	3304      	adds	r3, #4
 8017162:	4618      	mov	r0, r3
 8017164:	f000 faa0 	bl	80176a8 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017168:	4603      	mov	r3, r0
 801716a:	edd3 7a00 	vldr	s15, [r3]
 801716e:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8017172:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017176:	bf4c      	ite	mi
 8017178:	2301      	movmi	r3, #1
 801717a:	2300      	movpl	r3, #0
 801717c:	b2db      	uxtb	r3, r3
 801717e:	4619      	mov	r1, r3
 8017180:	68f8      	ldr	r0, [r7, #12]
 8017182:	f7ff fc3e 	bl	8016a02 <_ZN6SymbolC1Eb>
 8017186:	e01f      	b.n	80171c8 <_ZN6SymbolltES_+0xd0>
	default:
		Transmitter::report_error("invalid type for comparison");
 8017188:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 801718c:	4618      	mov	r0, r3
 801718e:	f00b fb5b 	bl	8022848 <_ZNSaIcEC1Ev>
 8017192:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 8017196:	f107 0314 	add.w	r3, r7, #20
 801719a:	490e      	ldr	r1, [pc, #56]	; (80171d4 <_ZN6SymbolltES_+0xdc>)
 801719c:	4618      	mov	r0, r3
 801719e:	f7ea fcfa 	bl	8001b96 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 80171a2:	f107 0314 	add.w	r3, r7, #20
 80171a6:	4618      	mov	r0, r3
 80171a8:	f000 ffba 	bl	8018120 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 80171ac:	f107 0314 	add.w	r3, r7, #20
 80171b0:	4618      	mov	r0, r3
 80171b2:	f00b fdda 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80171b6:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80171ba:	4618      	mov	r0, r3
 80171bc:	f00b fb45 	bl	802284a <_ZNSaIcED1Ev>
	}

	return 0;
 80171c0:	2100      	movs	r1, #0
 80171c2:	68f8      	ldr	r0, [r7, #12]
 80171c4:	f7ff fbea 	bl	801699c <_ZN6SymbolC1Ei>
}
 80171c8:	68f8      	ldr	r0, [r7, #12]
 80171ca:	3734      	adds	r7, #52	; 0x34
 80171cc:	46bd      	mov	sp, r7
 80171ce:	ecbd 8b02 	vpop	{d8}
 80171d2:	bd90      	pop	{r4, r7, pc}
 80171d4:	08027d28 	.word	0x08027d28

080171d8 <_ZN6SymbolleES_>:

Symbol Symbol::operator<=(Symbol other)
{
 80171d8:	b590      	push	{r4, r7, lr}
 80171da:	ed2d 8b02 	vpush	{d8}
 80171de:	b08d      	sub	sp, #52	; 0x34
 80171e0:	af00      	add	r7, sp, #0
 80171e2:	60f8      	str	r0, [r7, #12]
 80171e4:	60b9      	str	r1, [r7, #8]
 80171e6:	607a      	str	r2, [r7, #4]
	assert_types(other);
 80171e8:	6879      	ldr	r1, [r7, #4]
 80171ea:	68b8      	ldr	r0, [r7, #8]
 80171ec:	f000 faf4 	bl	80177d8 <_ZN6Symbol12assert_typesERKS_>

	switch (type)
 80171f0:	68bb      	ldr	r3, [r7, #8]
 80171f2:	781b      	ldrb	r3, [r3, #0]
 80171f4:	2b00      	cmp	r3, #0
 80171f6:	d002      	beq.n	80171fe <_ZN6SymbolleES_+0x26>
 80171f8:	2b01      	cmp	r3, #1
 80171fa:	d018      	beq.n	801722e <_ZN6SymbolleES_+0x56>
 80171fc:	e034      	b.n	8017268 <_ZN6SymbolleES_+0x90>
	{
	case SYMBOL_INT:
		return (std::get<int>(this->value) <= std::get<int>(other.value));
 80171fe:	68bb      	ldr	r3, [r7, #8]
 8017200:	3304      	adds	r3, #4
 8017202:	4618      	mov	r0, r3
 8017204:	f7ea fb80 	bl	8001908 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017208:	4603      	mov	r3, r0
 801720a:	681c      	ldr	r4, [r3, #0]
 801720c:	687b      	ldr	r3, [r7, #4]
 801720e:	3304      	adds	r3, #4
 8017210:	4618      	mov	r0, r3
 8017212:	f7ea fb79 	bl	8001908 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017216:	4603      	mov	r3, r0
 8017218:	681b      	ldr	r3, [r3, #0]
 801721a:	429c      	cmp	r4, r3
 801721c:	bfd4      	ite	le
 801721e:	2301      	movle	r3, #1
 8017220:	2300      	movgt	r3, #0
 8017222:	b2db      	uxtb	r3, r3
 8017224:	4619      	mov	r1, r3
 8017226:	68f8      	ldr	r0, [r7, #12]
 8017228:	f7ff fbeb 	bl	8016a02 <_ZN6SymbolC1Eb>
 801722c:	e03c      	b.n	80172a8 <_ZN6SymbolleES_+0xd0>
	case SYMBOL_FLOAT:
		return (std::get<float>(this->value) <= std::get<float>(other.value));
 801722e:	68bb      	ldr	r3, [r7, #8]
 8017230:	3304      	adds	r3, #4
 8017232:	4618      	mov	r0, r3
 8017234:	f000 fa38 	bl	80176a8 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017238:	4603      	mov	r3, r0
 801723a:	ed93 8a00 	vldr	s16, [r3]
 801723e:	687b      	ldr	r3, [r7, #4]
 8017240:	3304      	adds	r3, #4
 8017242:	4618      	mov	r0, r3
 8017244:	f000 fa30 	bl	80176a8 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017248:	4603      	mov	r3, r0
 801724a:	edd3 7a00 	vldr	s15, [r3]
 801724e:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8017252:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017256:	bf94      	ite	ls
 8017258:	2301      	movls	r3, #1
 801725a:	2300      	movhi	r3, #0
 801725c:	b2db      	uxtb	r3, r3
 801725e:	4619      	mov	r1, r3
 8017260:	68f8      	ldr	r0, [r7, #12]
 8017262:	f7ff fbce 	bl	8016a02 <_ZN6SymbolC1Eb>
 8017266:	e01f      	b.n	80172a8 <_ZN6SymbolleES_+0xd0>
	default:
		Transmitter::report_error("invalid type for comparison");
 8017268:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 801726c:	4618      	mov	r0, r3
 801726e:	f00b faeb 	bl	8022848 <_ZNSaIcEC1Ev>
 8017272:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 8017276:	f107 0314 	add.w	r3, r7, #20
 801727a:	490e      	ldr	r1, [pc, #56]	; (80172b4 <_ZN6SymbolleES_+0xdc>)
 801727c:	4618      	mov	r0, r3
 801727e:	f7ea fc8a 	bl	8001b96 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8017282:	f107 0314 	add.w	r3, r7, #20
 8017286:	4618      	mov	r0, r3
 8017288:	f000 ff4a 	bl	8018120 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801728c:	f107 0314 	add.w	r3, r7, #20
 8017290:	4618      	mov	r0, r3
 8017292:	f00b fd6a 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8017296:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 801729a:	4618      	mov	r0, r3
 801729c:	f00b fad5 	bl	802284a <_ZNSaIcED1Ev>
	}

	return 0;
 80172a0:	2100      	movs	r1, #0
 80172a2:	68f8      	ldr	r0, [r7, #12]
 80172a4:	f7ff fb7a 	bl	801699c <_ZN6SymbolC1Ei>
}
 80172a8:	68f8      	ldr	r0, [r7, #12]
 80172aa:	3734      	adds	r7, #52	; 0x34
 80172ac:	46bd      	mov	sp, r7
 80172ae:	ecbd 8b02 	vpop	{d8}
 80172b2:	bd90      	pop	{r4, r7, pc}
 80172b4:	08027d28 	.word	0x08027d28

080172b8 <_ZN6SymboleqES_>:

Symbol Symbol::operator==(Symbol other)
{
 80172b8:	b590      	push	{r4, r7, lr}
 80172ba:	ed2d 8b02 	vpush	{d8}
 80172be:	b08d      	sub	sp, #52	; 0x34
 80172c0:	af00      	add	r7, sp, #0
 80172c2:	60f8      	str	r0, [r7, #12]
 80172c4:	60b9      	str	r1, [r7, #8]
 80172c6:	607a      	str	r2, [r7, #4]
	assert_types(other);
 80172c8:	6879      	ldr	r1, [r7, #4]
 80172ca:	68b8      	ldr	r0, [r7, #8]
 80172cc:	f000 fa84 	bl	80177d8 <_ZN6Symbol12assert_typesERKS_>

	switch (type)
 80172d0:	68bb      	ldr	r3, [r7, #8]
 80172d2:	781b      	ldrb	r3, [r3, #0]
 80172d4:	2b02      	cmp	r3, #2
 80172d6:	d03b      	beq.n	8017350 <_ZN6SymboleqES_+0x98>
 80172d8:	2b02      	cmp	r3, #2
 80172da:	dc51      	bgt.n	8017380 <_ZN6SymboleqES_+0xc8>
 80172dc:	2b00      	cmp	r3, #0
 80172de:	d002      	beq.n	80172e6 <_ZN6SymboleqES_+0x2e>
 80172e0:	2b01      	cmp	r3, #1
 80172e2:	d018      	beq.n	8017316 <_ZN6SymboleqES_+0x5e>
 80172e4:	e04c      	b.n	8017380 <_ZN6SymboleqES_+0xc8>
	{
	case SYMBOL_INT:
		return (std::get<int>(this->value) == std::get<int>(other.value));
 80172e6:	68bb      	ldr	r3, [r7, #8]
 80172e8:	3304      	adds	r3, #4
 80172ea:	4618      	mov	r0, r3
 80172ec:	f7ea fb0c 	bl	8001908 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 80172f0:	4603      	mov	r3, r0
 80172f2:	681c      	ldr	r4, [r3, #0]
 80172f4:	687b      	ldr	r3, [r7, #4]
 80172f6:	3304      	adds	r3, #4
 80172f8:	4618      	mov	r0, r3
 80172fa:	f7ea fb05 	bl	8001908 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 80172fe:	4603      	mov	r3, r0
 8017300:	681b      	ldr	r3, [r3, #0]
 8017302:	429c      	cmp	r4, r3
 8017304:	bf0c      	ite	eq
 8017306:	2301      	moveq	r3, #1
 8017308:	2300      	movne	r3, #0
 801730a:	b2db      	uxtb	r3, r3
 801730c:	4619      	mov	r1, r3
 801730e:	68f8      	ldr	r0, [r7, #12]
 8017310:	f7ff fb77 	bl	8016a02 <_ZN6SymbolC1Eb>
 8017314:	e054      	b.n	80173c0 <_ZN6SymboleqES_+0x108>
	case SYMBOL_FLOAT:
		return (std::get<float>(this->value) == std::get<float>(other.value));
 8017316:	68bb      	ldr	r3, [r7, #8]
 8017318:	3304      	adds	r3, #4
 801731a:	4618      	mov	r0, r3
 801731c:	f000 f9c4 	bl	80176a8 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017320:	4603      	mov	r3, r0
 8017322:	ed93 8a00 	vldr	s16, [r3]
 8017326:	687b      	ldr	r3, [r7, #4]
 8017328:	3304      	adds	r3, #4
 801732a:	4618      	mov	r0, r3
 801732c:	f000 f9bc 	bl	80176a8 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017330:	4603      	mov	r3, r0
 8017332:	edd3 7a00 	vldr	s15, [r3]
 8017336:	eeb4 8a67 	vcmp.f32	s16, s15
 801733a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801733e:	bf0c      	ite	eq
 8017340:	2301      	moveq	r3, #1
 8017342:	2300      	movne	r3, #0
 8017344:	b2db      	uxtb	r3, r3
 8017346:	4619      	mov	r1, r3
 8017348:	68f8      	ldr	r0, [r7, #12]
 801734a:	f7ff fb5a 	bl	8016a02 <_ZN6SymbolC1Eb>
 801734e:	e037      	b.n	80173c0 <_ZN6SymboleqES_+0x108>
	case SYMBOL_BOOL:
		return (std::get<bool>(this->value) == std::get<bool>(other.value));
 8017350:	68bb      	ldr	r3, [r7, #8]
 8017352:	3304      	adds	r3, #4
 8017354:	4618      	mov	r0, r3
 8017356:	f7ea f8d5 	bl	8001504 <_ZSt3getIbJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 801735a:	4603      	mov	r3, r0
 801735c:	781c      	ldrb	r4, [r3, #0]
 801735e:	687b      	ldr	r3, [r7, #4]
 8017360:	3304      	adds	r3, #4
 8017362:	4618      	mov	r0, r3
 8017364:	f7ea f8ce 	bl	8001504 <_ZSt3getIbJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017368:	4603      	mov	r3, r0
 801736a:	781b      	ldrb	r3, [r3, #0]
 801736c:	429c      	cmp	r4, r3
 801736e:	bf0c      	ite	eq
 8017370:	2301      	moveq	r3, #1
 8017372:	2300      	movne	r3, #0
 8017374:	b2db      	uxtb	r3, r3
 8017376:	4619      	mov	r1, r3
 8017378:	68f8      	ldr	r0, [r7, #12]
 801737a:	f7ff fb42 	bl	8016a02 <_ZN6SymbolC1Eb>
 801737e:	e01f      	b.n	80173c0 <_ZN6SymboleqES_+0x108>
	default:
		Transmitter::report_error("invalid type for comparison");
 8017380:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8017384:	4618      	mov	r0, r3
 8017386:	f00b fa5f 	bl	8022848 <_ZNSaIcEC1Ev>
 801738a:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 801738e:	f107 0314 	add.w	r3, r7, #20
 8017392:	490e      	ldr	r1, [pc, #56]	; (80173cc <_ZN6SymboleqES_+0x114>)
 8017394:	4618      	mov	r0, r3
 8017396:	f7ea fbfe 	bl	8001b96 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801739a:	f107 0314 	add.w	r3, r7, #20
 801739e:	4618      	mov	r0, r3
 80173a0:	f000 febe 	bl	8018120 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 80173a4:	f107 0314 	add.w	r3, r7, #20
 80173a8:	4618      	mov	r0, r3
 80173aa:	f00b fcde 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80173ae:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80173b2:	4618      	mov	r0, r3
 80173b4:	f00b fa49 	bl	802284a <_ZNSaIcED1Ev>
	}

	return 0;
 80173b8:	2100      	movs	r1, #0
 80173ba:	68f8      	ldr	r0, [r7, #12]
 80173bc:	f7ff faee 	bl	801699c <_ZN6SymbolC1Ei>
}
 80173c0:	68f8      	ldr	r0, [r7, #12]
 80173c2:	3734      	adds	r7, #52	; 0x34
 80173c4:	46bd      	mov	sp, r7
 80173c6:	ecbd 8b02 	vpop	{d8}
 80173ca:	bd90      	pop	{r4, r7, pc}
 80173cc:	08027d28 	.word	0x08027d28

080173d0 <_ZN6SymbolngEv>:

	return 0;
}

Symbol Symbol::operator-()
{
 80173d0:	b580      	push	{r7, lr}
 80173d2:	b08a      	sub	sp, #40	; 0x28
 80173d4:	af00      	add	r7, sp, #0
 80173d6:	6078      	str	r0, [r7, #4]
 80173d8:	6039      	str	r1, [r7, #0]
	switch (type)
 80173da:	683b      	ldr	r3, [r7, #0]
 80173dc:	781b      	ldrb	r3, [r3, #0]
 80173de:	2b00      	cmp	r3, #0
 80173e0:	d002      	beq.n	80173e8 <_ZN6SymbolngEv+0x18>
 80173e2:	2b01      	cmp	r3, #1
 80173e4:	d00d      	beq.n	8017402 <_ZN6SymbolngEv+0x32>
 80173e6:	e01c      	b.n	8017422 <_ZN6SymbolngEv+0x52>
	{
	case SYMBOL_INT:
		return (-std::get<int>(this->value));
 80173e8:	683b      	ldr	r3, [r7, #0]
 80173ea:	3304      	adds	r3, #4
 80173ec:	4618      	mov	r0, r3
 80173ee:	f7ea fa8b 	bl	8001908 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 80173f2:	4603      	mov	r3, r0
 80173f4:	681b      	ldr	r3, [r3, #0]
 80173f6:	425b      	negs	r3, r3
 80173f8:	4619      	mov	r1, r3
 80173fa:	6878      	ldr	r0, [r7, #4]
 80173fc:	f7ff face 	bl	801699c <_ZN6SymbolC1Ei>
 8017400:	e02f      	b.n	8017462 <_ZN6SymbolngEv+0x92>
	case SYMBOL_FLOAT:
		return (-std::get<float>(this->value));
 8017402:	683b      	ldr	r3, [r7, #0]
 8017404:	3304      	adds	r3, #4
 8017406:	4618      	mov	r0, r3
 8017408:	f000 f94e 	bl	80176a8 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 801740c:	4603      	mov	r3, r0
 801740e:	edd3 7a00 	vldr	s15, [r3]
 8017412:	eef1 7a67 	vneg.f32	s15, s15
 8017416:	eeb0 0a67 	vmov.f32	s0, s15
 801741a:	6878      	ldr	r0, [r7, #4]
 801741c:	f7ff fad7 	bl	80169ce <_ZN6SymbolC1Ef>
 8017420:	e01f      	b.n	8017462 <_ZN6SymbolngEv+0x92>
	default:
		Transmitter::report_error("invalid type for minus unary operator");
 8017422:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8017426:	4618      	mov	r0, r3
 8017428:	f00b fa0e 	bl	8022848 <_ZNSaIcEC1Ev>
 801742c:	f107 0224 	add.w	r2, r7, #36	; 0x24
 8017430:	f107 030c 	add.w	r3, r7, #12
 8017434:	490d      	ldr	r1, [pc, #52]	; (801746c <_ZN6SymbolngEv+0x9c>)
 8017436:	4618      	mov	r0, r3
 8017438:	f7ea fbad 	bl	8001b96 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801743c:	f107 030c 	add.w	r3, r7, #12
 8017440:	4618      	mov	r0, r3
 8017442:	f000 fe6d 	bl	8018120 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8017446:	f107 030c 	add.w	r3, r7, #12
 801744a:	4618      	mov	r0, r3
 801744c:	f00b fc8d 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8017450:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8017454:	4618      	mov	r0, r3
 8017456:	f00b f9f8 	bl	802284a <_ZNSaIcED1Ev>
	}

	return 0;
 801745a:	2100      	movs	r1, #0
 801745c:	6878      	ldr	r0, [r7, #4]
 801745e:	f7ff fa9d 	bl	801699c <_ZN6SymbolC1Ei>
}
 8017462:	6878      	ldr	r0, [r7, #4]
 8017464:	3728      	adds	r7, #40	; 0x28
 8017466:	46bd      	mov	sp, r7
 8017468:	bd80      	pop	{r7, pc}
 801746a:	bf00      	nop
 801746c:	08027d44 	.word	0x08027d44

08017470 <_ZN6SymbolmlES_>:

Symbol Symbol::operator*(Symbol other)
{
 8017470:	b590      	push	{r4, r7, lr}
 8017472:	ed2d 8b02 	vpush	{d8}
 8017476:	b08d      	sub	sp, #52	; 0x34
 8017478:	af00      	add	r7, sp, #0
 801747a:	60f8      	str	r0, [r7, #12]
 801747c:	60b9      	str	r1, [r7, #8]
 801747e:	607a      	str	r2, [r7, #4]
	assert_types(other);
 8017480:	6879      	ldr	r1, [r7, #4]
 8017482:	68b8      	ldr	r0, [r7, #8]
 8017484:	f000 f9a8 	bl	80177d8 <_ZN6Symbol12assert_typesERKS_>

	switch (type)
 8017488:	68bb      	ldr	r3, [r7, #8]
 801748a:	781b      	ldrb	r3, [r3, #0]
 801748c:	2b00      	cmp	r3, #0
 801748e:	d002      	beq.n	8017496 <_ZN6SymbolmlES_+0x26>
 8017490:	2b01      	cmp	r3, #1
 8017492:	d015      	beq.n	80174c0 <_ZN6SymbolmlES_+0x50>
 8017494:	e02c      	b.n	80174f0 <_ZN6SymbolmlES_+0x80>
	{
	case SYMBOL_INT:
		return (std::get<int>(this->value) * std::get<int>(other.value));
 8017496:	68bb      	ldr	r3, [r7, #8]
 8017498:	3304      	adds	r3, #4
 801749a:	4618      	mov	r0, r3
 801749c:	f7ea fa34 	bl	8001908 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 80174a0:	4603      	mov	r3, r0
 80174a2:	681c      	ldr	r4, [r3, #0]
 80174a4:	687b      	ldr	r3, [r7, #4]
 80174a6:	3304      	adds	r3, #4
 80174a8:	4618      	mov	r0, r3
 80174aa:	f7ea fa2d 	bl	8001908 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 80174ae:	4603      	mov	r3, r0
 80174b0:	681b      	ldr	r3, [r3, #0]
 80174b2:	fb03 f304 	mul.w	r3, r3, r4
 80174b6:	4619      	mov	r1, r3
 80174b8:	68f8      	ldr	r0, [r7, #12]
 80174ba:	f7ff fa6f 	bl	801699c <_ZN6SymbolC1Ei>
 80174be:	e037      	b.n	8017530 <_ZN6SymbolmlES_+0xc0>
	case SYMBOL_FLOAT:
		return (std::get<float>(this->value) * std::get<float>(other.value));
 80174c0:	68bb      	ldr	r3, [r7, #8]
 80174c2:	3304      	adds	r3, #4
 80174c4:	4618      	mov	r0, r3
 80174c6:	f000 f8ef 	bl	80176a8 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 80174ca:	4603      	mov	r3, r0
 80174cc:	ed93 8a00 	vldr	s16, [r3]
 80174d0:	687b      	ldr	r3, [r7, #4]
 80174d2:	3304      	adds	r3, #4
 80174d4:	4618      	mov	r0, r3
 80174d6:	f000 f8e7 	bl	80176a8 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 80174da:	4603      	mov	r3, r0
 80174dc:	edd3 7a00 	vldr	s15, [r3]
 80174e0:	ee68 7a27 	vmul.f32	s15, s16, s15
 80174e4:	eeb0 0a67 	vmov.f32	s0, s15
 80174e8:	68f8      	ldr	r0, [r7, #12]
 80174ea:	f7ff fa70 	bl	80169ce <_ZN6SymbolC1Ef>
 80174ee:	e01f      	b.n	8017530 <_ZN6SymbolmlES_+0xc0>
	default:
		Transmitter::report_error("invalid type for multiplication");
 80174f0:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80174f4:	4618      	mov	r0, r3
 80174f6:	f00b f9a7 	bl	8022848 <_ZNSaIcEC1Ev>
 80174fa:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 80174fe:	f107 0314 	add.w	r3, r7, #20
 8017502:	490e      	ldr	r1, [pc, #56]	; (801753c <_ZN6SymbolmlES_+0xcc>)
 8017504:	4618      	mov	r0, r3
 8017506:	f7ea fb46 	bl	8001b96 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801750a:	f107 0314 	add.w	r3, r7, #20
 801750e:	4618      	mov	r0, r3
 8017510:	f000 fe06 	bl	8018120 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8017514:	f107 0314 	add.w	r3, r7, #20
 8017518:	4618      	mov	r0, r3
 801751a:	f00b fc26 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801751e:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8017522:	4618      	mov	r0, r3
 8017524:	f00b f991 	bl	802284a <_ZNSaIcED1Ev>
	}

	return 0;
 8017528:	2100      	movs	r1, #0
 801752a:	68f8      	ldr	r0, [r7, #12]
 801752c:	f7ff fa36 	bl	801699c <_ZN6SymbolC1Ei>
}
 8017530:	68f8      	ldr	r0, [r7, #12]
 8017532:	3734      	adds	r7, #52	; 0x34
 8017534:	46bd      	mov	sp, r7
 8017536:	ecbd 8b02 	vpop	{d8}
 801753a:	bd90      	pop	{r4, r7, pc}
 801753c:	08027d6c 	.word	0x08027d6c

08017540 <_ZN6SymboldvES_>:

Symbol Symbol::operator/(Symbol other)
{
 8017540:	b590      	push	{r4, r7, lr}
 8017542:	ed2d 8b02 	vpush	{d8}
 8017546:	b08d      	sub	sp, #52	; 0x34
 8017548:	af00      	add	r7, sp, #0
 801754a:	60f8      	str	r0, [r7, #12]
 801754c:	60b9      	str	r1, [r7, #8]
 801754e:	607a      	str	r2, [r7, #4]
	assert_types(other);
 8017550:	6879      	ldr	r1, [r7, #4]
 8017552:	68b8      	ldr	r0, [r7, #8]
 8017554:	f000 f940 	bl	80177d8 <_ZN6Symbol12assert_typesERKS_>

	switch (type)
 8017558:	68bb      	ldr	r3, [r7, #8]
 801755a:	781b      	ldrb	r3, [r3, #0]
 801755c:	2b00      	cmp	r3, #0
 801755e:	d002      	beq.n	8017566 <_ZN6SymboldvES_+0x26>
 8017560:	2b01      	cmp	r3, #1
 8017562:	d015      	beq.n	8017590 <_ZN6SymboldvES_+0x50>
 8017564:	e02c      	b.n	80175c0 <_ZN6SymboldvES_+0x80>
	{
	case SYMBOL_INT:
		return (std::get<int>(this->value) / std::get<int>(other.value));
 8017566:	68bb      	ldr	r3, [r7, #8]
 8017568:	3304      	adds	r3, #4
 801756a:	4618      	mov	r0, r3
 801756c:	f7ea f9cc 	bl	8001908 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017570:	4603      	mov	r3, r0
 8017572:	681c      	ldr	r4, [r3, #0]
 8017574:	687b      	ldr	r3, [r7, #4]
 8017576:	3304      	adds	r3, #4
 8017578:	4618      	mov	r0, r3
 801757a:	f7ea f9c5 	bl	8001908 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 801757e:	4603      	mov	r3, r0
 8017580:	681b      	ldr	r3, [r3, #0]
 8017582:	fb94 f3f3 	sdiv	r3, r4, r3
 8017586:	4619      	mov	r1, r3
 8017588:	68f8      	ldr	r0, [r7, #12]
 801758a:	f7ff fa07 	bl	801699c <_ZN6SymbolC1Ei>
 801758e:	e037      	b.n	8017600 <_ZN6SymboldvES_+0xc0>
	case SYMBOL_FLOAT:
		return(std::get<float>(this->value) / std::get<float>(other.value));
 8017590:	68bb      	ldr	r3, [r7, #8]
 8017592:	3304      	adds	r3, #4
 8017594:	4618      	mov	r0, r3
 8017596:	f000 f887 	bl	80176a8 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 801759a:	4603      	mov	r3, r0
 801759c:	ed93 8a00 	vldr	s16, [r3]
 80175a0:	687b      	ldr	r3, [r7, #4]
 80175a2:	3304      	adds	r3, #4
 80175a4:	4618      	mov	r0, r3
 80175a6:	f000 f87f 	bl	80176a8 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 80175aa:	4603      	mov	r3, r0
 80175ac:	edd3 7a00 	vldr	s15, [r3]
 80175b0:	ee88 7a27 	vdiv.f32	s14, s16, s15
 80175b4:	eeb0 0a47 	vmov.f32	s0, s14
 80175b8:	68f8      	ldr	r0, [r7, #12]
 80175ba:	f7ff fa08 	bl	80169ce <_ZN6SymbolC1Ef>
 80175be:	e01f      	b.n	8017600 <_ZN6SymboldvES_+0xc0>
	default:
		Transmitter::report_error("invalid type for multiplication");
 80175c0:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80175c4:	4618      	mov	r0, r3
 80175c6:	f00b f93f 	bl	8022848 <_ZNSaIcEC1Ev>
 80175ca:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 80175ce:	f107 0314 	add.w	r3, r7, #20
 80175d2:	490e      	ldr	r1, [pc, #56]	; (801760c <_ZN6SymboldvES_+0xcc>)
 80175d4:	4618      	mov	r0, r3
 80175d6:	f7ea fade 	bl	8001b96 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 80175da:	f107 0314 	add.w	r3, r7, #20
 80175de:	4618      	mov	r0, r3
 80175e0:	f000 fd9e 	bl	8018120 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 80175e4:	f107 0314 	add.w	r3, r7, #20
 80175e8:	4618      	mov	r0, r3
 80175ea:	f00b fbbe 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80175ee:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80175f2:	4618      	mov	r0, r3
 80175f4:	f00b f929 	bl	802284a <_ZNSaIcED1Ev>
	}

	return 0;
 80175f8:	2100      	movs	r1, #0
 80175fa:	68f8      	ldr	r0, [r7, #12]
 80175fc:	f7ff f9ce 	bl	801699c <_ZN6SymbolC1Ei>
}
 8017600:	68f8      	ldr	r0, [r7, #12]
 8017602:	3734      	adds	r7, #52	; 0x34
 8017604:	46bd      	mov	sp, r7
 8017606:	ecbd 8b02 	vpop	{d8}
 801760a:	bd90      	pop	{r4, r7, pc}
 801760c:	08027d6c 	.word	0x08027d6c

08017610 <_ZN6SymbolrmES_>:

Symbol Symbol::operator%(Symbol other)
{
 8017610:	b590      	push	{r4, r7, lr}
 8017612:	b08d      	sub	sp, #52	; 0x34
 8017614:	af00      	add	r7, sp, #0
 8017616:	60f8      	str	r0, [r7, #12]
 8017618:	60b9      	str	r1, [r7, #8]
 801761a:	607a      	str	r2, [r7, #4]
	assert_types(other);
 801761c:	6879      	ldr	r1, [r7, #4]
 801761e:	68b8      	ldr	r0, [r7, #8]
 8017620:	f000 f8da 	bl	80177d8 <_ZN6Symbol12assert_typesERKS_>

	switch (type)
 8017624:	68bb      	ldr	r3, [r7, #8]
 8017626:	781b      	ldrb	r3, [r3, #0]
 8017628:	2b00      	cmp	r3, #0
 801762a:	d117      	bne.n	801765c <_ZN6SymbolrmES_+0x4c>
	{
	case SYMBOL_INT:
		return(std::get<int>(this->value) % std::get<int>(other.value));
 801762c:	68bb      	ldr	r3, [r7, #8]
 801762e:	3304      	adds	r3, #4
 8017630:	4618      	mov	r0, r3
 8017632:	f7ea f969 	bl	8001908 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017636:	4603      	mov	r3, r0
 8017638:	681c      	ldr	r4, [r3, #0]
 801763a:	687b      	ldr	r3, [r7, #4]
 801763c:	3304      	adds	r3, #4
 801763e:	4618      	mov	r0, r3
 8017640:	f7ea f962 	bl	8001908 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017644:	4603      	mov	r3, r0
 8017646:	681b      	ldr	r3, [r3, #0]
 8017648:	fb94 f2f3 	sdiv	r2, r4, r3
 801764c:	fb03 f302 	mul.w	r3, r3, r2
 8017650:	1ae3      	subs	r3, r4, r3
 8017652:	4619      	mov	r1, r3
 8017654:	68f8      	ldr	r0, [r7, #12]
 8017656:	f7ff f9a1 	bl	801699c <_ZN6SymbolC1Ei>
 801765a:	e01f      	b.n	801769c <_ZN6SymbolrmES_+0x8c>
	default:
		Transmitter::report_error("invalid type for multiplication");
 801765c:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8017660:	4618      	mov	r0, r3
 8017662:	f00b f8f1 	bl	8022848 <_ZNSaIcEC1Ev>
 8017666:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 801766a:	f107 0314 	add.w	r3, r7, #20
 801766e:	490d      	ldr	r1, [pc, #52]	; (80176a4 <_ZN6SymbolrmES_+0x94>)
 8017670:	4618      	mov	r0, r3
 8017672:	f7ea fa90 	bl	8001b96 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8017676:	f107 0314 	add.w	r3, r7, #20
 801767a:	4618      	mov	r0, r3
 801767c:	f000 fd50 	bl	8018120 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8017680:	f107 0314 	add.w	r3, r7, #20
 8017684:	4618      	mov	r0, r3
 8017686:	f00b fb70 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801768a:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 801768e:	4618      	mov	r0, r3
 8017690:	f00b f8db 	bl	802284a <_ZNSaIcED1Ev>
	}

	return 0;
 8017694:	2100      	movs	r1, #0
 8017696:	68f8      	ldr	r0, [r7, #12]
 8017698:	f7ff f980 	bl	801699c <_ZN6SymbolC1Ei>
}
 801769c:	68f8      	ldr	r0, [r7, #12]
 801769e:	3734      	adds	r7, #52	; 0x34
 80176a0:	46bd      	mov	sp, r7
 80176a2:	bd90      	pop	{r4, r7, pc}
 80176a4:	08027d6c 	.word	0x08027d6c

080176a8 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 80176a8:	b580      	push	{r7, lr}
 80176aa:	b082      	sub	sp, #8
 80176ac:	af00      	add	r7, sp, #0
 80176ae:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 80176b0:	6878      	ldr	r0, [r7, #4]
 80176b2:	f7f1 f803 	bl	80086bc <_ZSt3getILj1EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 80176b6:	4603      	mov	r3, r0
    }
 80176b8:	4618      	mov	r0, r3
 80176ba:	3708      	adds	r7, #8
 80176bc:	46bd      	mov	sp, r7
 80176be:	bd80      	pop	{r7, pc}

080176c0 <_ZN6SymboleoES_>:

Symbol Symbol::operator^(Symbol other)
{
 80176c0:	b5b0      	push	{r4, r5, r7, lr}
 80176c2:	b08c      	sub	sp, #48	; 0x30
 80176c4:	af00      	add	r7, sp, #0
 80176c6:	60f8      	str	r0, [r7, #12]
 80176c8:	60b9      	str	r1, [r7, #8]
 80176ca:	607a      	str	r2, [r7, #4]
	assert_types(other);
 80176cc:	6879      	ldr	r1, [r7, #4]
 80176ce:	68b8      	ldr	r0, [r7, #8]
 80176d0:	f000 f882 	bl	80177d8 <_ZN6Symbol12assert_typesERKS_>

	switch (type)
 80176d4:	68bb      	ldr	r3, [r7, #8]
 80176d6:	781b      	ldrb	r3, [r3, #0]
 80176d8:	2b00      	cmp	r3, #0
 80176da:	d002      	beq.n	80176e2 <_ZN6SymboleoES_+0x22>
 80176dc:	2b01      	cmp	r3, #1
 80176de:	d02a      	beq.n	8017736 <_ZN6SymboleoES_+0x76>
 80176e0:	e054      	b.n	801778c <_ZN6SymboleoES_+0xcc>
	{
	case SYMBOL_INT:
		return (int)pow(std::get<int>(this->value), std::get<int>(other.value));
 80176e2:	68bb      	ldr	r3, [r7, #8]
 80176e4:	3304      	adds	r3, #4
 80176e6:	4618      	mov	r0, r3
 80176e8:	f7ea f90e 	bl	8001908 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 80176ec:	4603      	mov	r3, r0
 80176ee:	681b      	ldr	r3, [r3, #0]
 80176f0:	4618      	mov	r0, r3
 80176f2:	f7e8 ff37 	bl	8000564 <__aeabi_i2d>
 80176f6:	4604      	mov	r4, r0
 80176f8:	460d      	mov	r5, r1
 80176fa:	687b      	ldr	r3, [r7, #4]
 80176fc:	3304      	adds	r3, #4
 80176fe:	4618      	mov	r0, r3
 8017700:	f7ea f902 	bl	8001908 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017704:	4603      	mov	r3, r0
 8017706:	681b      	ldr	r3, [r3, #0]
 8017708:	4618      	mov	r0, r3
 801770a:	f7e8 ff2b 	bl	8000564 <__aeabi_i2d>
 801770e:	4602      	mov	r2, r0
 8017710:	460b      	mov	r3, r1
 8017712:	ec43 2b11 	vmov	d1, r2, r3
 8017716:	ec45 4b10 	vmov	d0, r4, r5
 801771a:	f00b fcff 	bl	802311c <pow>
 801771e:	ec53 2b10 	vmov	r2, r3, d0
 8017722:	4610      	mov	r0, r2
 8017724:	4619      	mov	r1, r3
 8017726:	f7e9 fa37 	bl	8000b98 <__aeabi_d2iz>
 801772a:	4603      	mov	r3, r0
 801772c:	4619      	mov	r1, r3
 801772e:	68f8      	ldr	r0, [r7, #12]
 8017730:	f7ff f934 	bl	801699c <_ZN6SymbolC1Ei>
 8017734:	e04a      	b.n	80177cc <_ZN6SymboleoES_+0x10c>
	case SYMBOL_FLOAT:
		return (float)pow(std::get<float>(this->value), std::get<float>(other.value));
 8017736:	68bb      	ldr	r3, [r7, #8]
 8017738:	3304      	adds	r3, #4
 801773a:	4618      	mov	r0, r3
 801773c:	f7ff ffb4 	bl	80176a8 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017740:	4603      	mov	r3, r0
 8017742:	681b      	ldr	r3, [r3, #0]
 8017744:	4618      	mov	r0, r3
 8017746:	f7e8 ff1f 	bl	8000588 <__aeabi_f2d>
 801774a:	4604      	mov	r4, r0
 801774c:	460d      	mov	r5, r1
 801774e:	687b      	ldr	r3, [r7, #4]
 8017750:	3304      	adds	r3, #4
 8017752:	4618      	mov	r0, r3
 8017754:	f7ff ffa8 	bl	80176a8 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017758:	4603      	mov	r3, r0
 801775a:	681b      	ldr	r3, [r3, #0]
 801775c:	4618      	mov	r0, r3
 801775e:	f7e8 ff13 	bl	8000588 <__aeabi_f2d>
 8017762:	4602      	mov	r2, r0
 8017764:	460b      	mov	r3, r1
 8017766:	ec43 2b11 	vmov	d1, r2, r3
 801776a:	ec45 4b10 	vmov	d0, r4, r5
 801776e:	f00b fcd5 	bl	802311c <pow>
 8017772:	ec53 2b10 	vmov	r2, r3, d0
 8017776:	4610      	mov	r0, r2
 8017778:	4619      	mov	r1, r3
 801777a:	f7e9 fa55 	bl	8000c28 <__aeabi_d2f>
 801777e:	4603      	mov	r3, r0
 8017780:	ee00 3a10 	vmov	s0, r3
 8017784:	68f8      	ldr	r0, [r7, #12]
 8017786:	f7ff f922 	bl	80169ce <_ZN6SymbolC1Ef>
 801778a:	e01f      	b.n	80177cc <_ZN6SymboleoES_+0x10c>
	default:
		Transmitter::report_error("invalid type for multiplication");
 801778c:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8017790:	4618      	mov	r0, r3
 8017792:	f00b f859 	bl	8022848 <_ZNSaIcEC1Ev>
 8017796:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 801779a:	f107 0314 	add.w	r3, r7, #20
 801779e:	490d      	ldr	r1, [pc, #52]	; (80177d4 <_ZN6SymboleoES_+0x114>)
 80177a0:	4618      	mov	r0, r3
 80177a2:	f7ea f9f8 	bl	8001b96 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 80177a6:	f107 0314 	add.w	r3, r7, #20
 80177aa:	4618      	mov	r0, r3
 80177ac:	f000 fcb8 	bl	8018120 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 80177b0:	f107 0314 	add.w	r3, r7, #20
 80177b4:	4618      	mov	r0, r3
 80177b6:	f00b fad8 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80177ba:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80177be:	4618      	mov	r0, r3
 80177c0:	f00b f843 	bl	802284a <_ZNSaIcED1Ev>
	}

	return 0;
 80177c4:	2100      	movs	r1, #0
 80177c6:	68f8      	ldr	r0, [r7, #12]
 80177c8:	f7ff f8e8 	bl	801699c <_ZN6SymbolC1Ei>
}
 80177cc:	68f8      	ldr	r0, [r7, #12]
 80177ce:	3730      	adds	r7, #48	; 0x30
 80177d0:	46bd      	mov	sp, r7
 80177d2:	bdb0      	pop	{r4, r5, r7, pc}
 80177d4:	08027d6c 	.word	0x08027d6c

080177d8 <_ZN6Symbol12assert_typesERKS_>:

void Symbol::assert_types(const Symbol &other)
{
 80177d8:	b580      	push	{r7, lr}
 80177da:	b08a      	sub	sp, #40	; 0x28
 80177dc:	af00      	add	r7, sp, #0
 80177de:	6078      	str	r0, [r7, #4]
 80177e0:	6039      	str	r1, [r7, #0]
	if (type != other.type)
 80177e2:	687b      	ldr	r3, [r7, #4]
 80177e4:	781a      	ldrb	r2, [r3, #0]
 80177e6:	683b      	ldr	r3, [r7, #0]
 80177e8:	781b      	ldrb	r3, [r3, #0]
 80177ea:	429a      	cmp	r2, r3
 80177ec:	d01b      	beq.n	8017826 <_ZN6Symbol12assert_typesERKS_+0x4e>
	{
		Transmitter::report_error("types mismatch");
 80177ee:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80177f2:	4618      	mov	r0, r3
 80177f4:	f00b f828 	bl	8022848 <_ZNSaIcEC1Ev>
 80177f8:	f107 0224 	add.w	r2, r7, #36	; 0x24
 80177fc:	f107 030c 	add.w	r3, r7, #12
 8017800:	490b      	ldr	r1, [pc, #44]	; (8017830 <_ZN6Symbol12assert_typesERKS_+0x58>)
 8017802:	4618      	mov	r0, r3
 8017804:	f7ea f9c7 	bl	8001b96 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8017808:	f107 030c 	add.w	r3, r7, #12
 801780c:	4618      	mov	r0, r3
 801780e:	f000 fc87 	bl	8018120 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8017812:	f107 030c 	add.w	r3, r7, #12
 8017816:	4618      	mov	r0, r3
 8017818:	f00b faa7 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801781c:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8017820:	4618      	mov	r0, r3
 8017822:	f00b f812 	bl	802284a <_ZNSaIcED1Ev>
	}
}
 8017826:	bf00      	nop
 8017828:	3728      	adds	r7, #40	; 0x28
 801782a:	46bd      	mov	sp, r7
 801782c:	bd80      	pop	{r7, pc}
 801782e:	bf00      	nop
 8017830:	08027d8c 	.word	0x08027d8c

08017834 <_ZN6Symbol11assert_typeE11symbol_type>:

void Symbol::assert_type(symbol_type type)
{
 8017834:	b580      	push	{r7, lr}
 8017836:	b08a      	sub	sp, #40	; 0x28
 8017838:	af00      	add	r7, sp, #0
 801783a:	6078      	str	r0, [r7, #4]
 801783c:	460b      	mov	r3, r1
 801783e:	70fb      	strb	r3, [r7, #3]
	if(this->type != type)
 8017840:	687b      	ldr	r3, [r7, #4]
 8017842:	781b      	ldrb	r3, [r3, #0]
 8017844:	78fa      	ldrb	r2, [r7, #3]
 8017846:	429a      	cmp	r2, r3
 8017848:	d01b      	beq.n	8017882 <_ZN6Symbol11assert_typeE11symbol_type+0x4e>
	{
		Transmitter::report_error(std::string("")); //todo message
 801784a:	f107 0324 	add.w	r3, r7, #36	; 0x24
 801784e:	4618      	mov	r0, r3
 8017850:	f00a fffa 	bl	8022848 <_ZNSaIcEC1Ev>
 8017854:	f107 0224 	add.w	r2, r7, #36	; 0x24
 8017858:	f107 030c 	add.w	r3, r7, #12
 801785c:	490b      	ldr	r1, [pc, #44]	; (801788c <_ZN6Symbol11assert_typeE11symbol_type+0x58>)
 801785e:	4618      	mov	r0, r3
 8017860:	f7ea f999 	bl	8001b96 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8017864:	f107 030c 	add.w	r3, r7, #12
 8017868:	4618      	mov	r0, r3
 801786a:	f000 fc59 	bl	8018120 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801786e:	f107 030c 	add.w	r3, r7, #12
 8017872:	4618      	mov	r0, r3
 8017874:	f00b fa79 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8017878:	f107 0324 	add.w	r3, r7, #36	; 0x24
 801787c:	4618      	mov	r0, r3
 801787e:	f00a ffe4 	bl	802284a <_ZNSaIcED1Ev>
	}
}
 8017882:	bf00      	nop
 8017884:	3728      	adds	r7, #40	; 0x28
 8017886:	46bd      	mov	sp, r7
 8017888:	bd80      	pop	{r7, pc}
 801788a:	bf00      	nop
 801788c:	08027d9c 	.word	0x08027d9c

08017890 <_ZN6Symbol6resizeEi>:

void Symbol::resize(int size)
{
 8017890:	b580      	push	{r7, lr}
 8017892:	b086      	sub	sp, #24
 8017894:	af00      	add	r7, sp, #0
 8017896:	6078      	str	r0, [r7, #4]
 8017898:	6039      	str	r1, [r7, #0]
	std::vector<Symbol> vec = std::get<std::vector<Symbol>>(value);
 801789a:	687b      	ldr	r3, [r7, #4]
 801789c:	3304      	adds	r3, #4
 801789e:	4618      	mov	r0, r3
 80178a0:	f000 f8dd 	bl	8017a5e <_ZSt3getISt6vectorI6SymbolSaIS1_EEJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES3_EERT_RSt7variantIJDpT0_EE>
 80178a4:	4602      	mov	r2, r0
 80178a6:	f107 030c 	add.w	r3, r7, #12
 80178aa:	4611      	mov	r1, r2
 80178ac:	4618      	mov	r0, r3
 80178ae:	f7f0 faa4 	bl	8007dfa <_ZNSt6vectorI6SymbolSaIS0_EEC1ERKS2_>
	if(vec.size() < (unsigned int)size)
 80178b2:	f107 030c 	add.w	r3, r7, #12
 80178b6:	4618      	mov	r0, r3
 80178b8:	f7ef f9b1 	bl	8006c1e <_ZNKSt6vectorI6SymbolSaIS0_EE4sizeEv>
 80178bc:	4602      	mov	r2, r0
 80178be:	683b      	ldr	r3, [r7, #0]
 80178c0:	429a      	cmp	r2, r3
 80178c2:	bf34      	ite	cc
 80178c4:	2301      	movcc	r3, #1
 80178c6:	2300      	movcs	r3, #0
 80178c8:	b2db      	uxtb	r3, r3
 80178ca:	2b00      	cmp	r3, #0
 80178cc:	d006      	beq.n	80178dc <_ZN6Symbol6resizeEi+0x4c>
	{
		vec.reserve(size);
 80178ce:	683a      	ldr	r2, [r7, #0]
 80178d0:	f107 030c 	add.w	r3, r7, #12
 80178d4:	4611      	mov	r1, r2
 80178d6:	4618      	mov	r0, r3
 80178d8:	f000 f8fc 	bl	8017ad4 <_ZNSt6vectorI6SymbolSaIS0_EE7reserveEj>
	std::vector<Symbol> vec = std::get<std::vector<Symbol>>(value);
 80178dc:	f107 030c 	add.w	r3, r7, #12
 80178e0:	4618      	mov	r0, r3
 80178e2:	f7ef fff9 	bl	80078d8 <_ZNSt6vectorI6SymbolSaIS0_EED1Ev>
	}
}
 80178e6:	bf00      	nop
 80178e8:	3718      	adds	r7, #24
 80178ea:	46bd      	mov	sp, r7
 80178ec:	bd80      	pop	{r7, pc}

080178ee <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIRiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_>:
	operator=(_Tp&& __rhs)
 80178ee:	b590      	push	{r4, r7, lr}
 80178f0:	b085      	sub	sp, #20
 80178f2:	af00      	add	r7, sp, #0
 80178f4:	6078      	str	r0, [r7, #4]
 80178f6:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 80178f8:	2300      	movs	r3, #0
 80178fa:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 80178fc:	6878      	ldr	r0, [r7, #4]
 80178fe:	f7e9 fe0d 	bl	800151c <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv>
 8017902:	4603      	mov	r3, r0
 8017904:	2b00      	cmp	r3, #0
 8017906:	bf0c      	ite	eq
 8017908:	2301      	moveq	r3, #1
 801790a:	2300      	movne	r3, #0
 801790c:	b2db      	uxtb	r3, r3
 801790e:	2b00      	cmp	r3, #0
 8017910:	d00a      	beq.n	8017928 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIRiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 8017912:	6838      	ldr	r0, [r7, #0]
 8017914:	f7ee f8db 	bl	8005ace <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 8017918:	4603      	mov	r3, r0
 801791a:	681c      	ldr	r4, [r3, #0]
 801791c:	6878      	ldr	r0, [r7, #4]
 801791e:	f7ea f821 	bl	8001964 <_ZSt3getILj0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8017922:	4603      	mov	r3, r0
 8017924:	601c      	str	r4, [r3, #0]
 8017926:	e007      	b.n	8017938 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIRiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 8017928:	6838      	ldr	r0, [r7, #0]
 801792a:	f7ee f8d0 	bl	8005ace <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 801792e:	4603      	mov	r3, r0
 8017930:	4619      	mov	r1, r3
 8017932:	6878      	ldr	r0, [r7, #4]
 8017934:	f000 f928 	bl	8017b88 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE7emplaceILj0EJRiEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSG_E4typeEDpOSH_>
	  return *this;
 8017938:	687b      	ldr	r3, [r7, #4]
	}
 801793a:	4618      	mov	r0, r3
 801793c:	3714      	adds	r7, #20
 801793e:	46bd      	mov	sp, r7
 8017940:	bd90      	pop	{r4, r7, pc}

08017942 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIRfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_>:
	operator=(_Tp&& __rhs)
 8017942:	b590      	push	{r4, r7, lr}
 8017944:	b085      	sub	sp, #20
 8017946:	af00      	add	r7, sp, #0
 8017948:	6078      	str	r0, [r7, #4]
 801794a:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 801794c:	2301      	movs	r3, #1
 801794e:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 8017950:	6878      	ldr	r0, [r7, #4]
 8017952:	f7e9 fde3 	bl	800151c <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv>
 8017956:	4603      	mov	r3, r0
 8017958:	2b01      	cmp	r3, #1
 801795a:	bf0c      	ite	eq
 801795c:	2301      	moveq	r3, #1
 801795e:	2300      	movne	r3, #0
 8017960:	b2db      	uxtb	r3, r3
 8017962:	2b00      	cmp	r3, #0
 8017964:	d00a      	beq.n	801797c <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIRfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 8017966:	6838      	ldr	r0, [r7, #0]
 8017968:	f7ee f8d3 	bl	8005b12 <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 801796c:	4603      	mov	r3, r0
 801796e:	681c      	ldr	r4, [r3, #0]
 8017970:	6878      	ldr	r0, [r7, #4]
 8017972:	f7f0 fea3 	bl	80086bc <_ZSt3getILj1EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8017976:	4603      	mov	r3, r0
 8017978:	601c      	str	r4, [r3, #0]
 801797a:	e007      	b.n	801798c <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIRfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 801797c:	6838      	ldr	r0, [r7, #0]
 801797e:	f7ee f8c8 	bl	8005b12 <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 8017982:	4603      	mov	r3, r0
 8017984:	4619      	mov	r1, r3
 8017986:	6878      	ldr	r0, [r7, #4]
 8017988:	f000 f917 	bl	8017bba <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE7emplaceILj1EJRfEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSG_E4typeEDpOSH_>
	  return *this;
 801798c:	687b      	ldr	r3, [r7, #4]
	}
 801798e:	4618      	mov	r0, r3
 8017990:	3714      	adds	r7, #20
 8017992:	46bd      	mov	sp, r7
 8017994:	bd90      	pop	{r4, r7, pc}

08017996 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIRbEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_>:
	operator=(_Tp&& __rhs)
 8017996:	b590      	push	{r4, r7, lr}
 8017998:	b085      	sub	sp, #20
 801799a:	af00      	add	r7, sp, #0
 801799c:	6078      	str	r0, [r7, #4]
 801799e:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 80179a0:	2302      	movs	r3, #2
 80179a2:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 80179a4:	6878      	ldr	r0, [r7, #4]
 80179a6:	f7e9 fdb9 	bl	800151c <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv>
 80179aa:	4603      	mov	r3, r0
 80179ac:	2b02      	cmp	r3, #2
 80179ae:	bf0c      	ite	eq
 80179b0:	2301      	moveq	r3, #1
 80179b2:	2300      	movne	r3, #0
 80179b4:	b2db      	uxtb	r3, r3
 80179b6:	2b00      	cmp	r3, #0
 80179b8:	d00b      	beq.n	80179d2 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIRbEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_+0x3c>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 80179ba:	6838      	ldr	r0, [r7, #0]
 80179bc:	f7ee f8cb 	bl	8005b56 <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
 80179c0:	4603      	mov	r3, r0
 80179c2:	781c      	ldrb	r4, [r3, #0]
 80179c4:	6878      	ldr	r0, [r7, #4]
 80179c6:	f7e9 fe03 	bl	80015d0 <_ZSt3getILj2EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 80179ca:	4603      	mov	r3, r0
 80179cc:	4622      	mov	r2, r4
 80179ce:	701a      	strb	r2, [r3, #0]
 80179d0:	e007      	b.n	80179e2 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIRbEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_+0x4c>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 80179d2:	6838      	ldr	r0, [r7, #0]
 80179d4:	f7ee f8bf 	bl	8005b56 <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
 80179d8:	4603      	mov	r3, r0
 80179da:	4619      	mov	r1, r3
 80179dc:	6878      	ldr	r0, [r7, #4]
 80179de:	f000 f905 	bl	8017bec <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE7emplaceILj2EJRbEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSG_E4typeEDpOSH_>
	  return *this;
 80179e2:	687b      	ldr	r3, [r7, #4]
	}
 80179e4:	4618      	mov	r0, r3
 80179e6:	3714      	adds	r7, #20
 80179e8:	46bd      	mov	sp, r7
 80179ea:	bd90      	pop	{r4, r7, pc}

080179ec <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIRS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_>:
	operator=(_Tp&& __rhs)
 80179ec:	b590      	push	{r4, r7, lr}
 80179ee:	b08b      	sub	sp, #44	; 0x2c
 80179f0:	af00      	add	r7, sp, #0
 80179f2:	6078      	str	r0, [r7, #4]
 80179f4:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 80179f6:	2303      	movs	r3, #3
 80179f8:	627b      	str	r3, [r7, #36]	; 0x24
	  if (index() == __index)
 80179fa:	6878      	ldr	r0, [r7, #4]
 80179fc:	f7e9 fd8e 	bl	800151c <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv>
 8017a00:	4603      	mov	r3, r0
 8017a02:	2b03      	cmp	r3, #3
 8017a04:	bf0c      	ite	eq
 8017a06:	2301      	moveq	r3, #1
 8017a08:	2300      	movne	r3, #0
 8017a0a:	b2db      	uxtb	r3, r3
 8017a0c:	2b00      	cmp	r3, #0
 8017a0e:	d00c      	beq.n	8017a2a <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIRS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_+0x3e>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 8017a10:	6838      	ldr	r0, [r7, #0]
 8017a12:	f7ee f8ce 	bl	8005bb2 <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 8017a16:	4604      	mov	r4, r0
 8017a18:	6878      	ldr	r0, [r7, #4]
 8017a1a:	f7f0 fec3 	bl	80087a4 <_ZSt3getILj3EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8017a1e:	4603      	mov	r3, r0
 8017a20:	4621      	mov	r1, r4
 8017a22:	4618      	mov	r0, r3
 8017a24:	f00b f9a7 	bl	8022d76 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_>
 8017a28:	e014      	b.n	8017a54 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIRS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_+0x68>
		operator=(variant(std::forward<_Tp>(__rhs)));
 8017a2a:	6838      	ldr	r0, [r7, #0]
 8017a2c:	f7ee f8c1 	bl	8005bb2 <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 8017a30:	4602      	mov	r2, r0
 8017a32:	f107 0308 	add.w	r3, r7, #8
 8017a36:	4611      	mov	r1, r2
 8017a38:	4618      	mov	r0, r3
 8017a3a:	f000 f909 	bl	8017c50 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1IRS5_vvS5_vEEOT_>
 8017a3e:	f107 0308 	add.w	r3, r7, #8
 8017a42:	4619      	mov	r1, r3
 8017a44:	6878      	ldr	r0, [r7, #4]
 8017a46:	f7ed fb8b 	bl	8005160 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSEOSA_>
 8017a4a:	f107 0308 	add.w	r3, r7, #8
 8017a4e:	4618      	mov	r0, r3
 8017a50:	f7e9 fd3d 	bl	80014ce <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEED1Ev>
	  return *this;
 8017a54:	687b      	ldr	r3, [r7, #4]
	}
 8017a56:	4618      	mov	r0, r3
 8017a58:	372c      	adds	r7, #44	; 0x2c
 8017a5a:	46bd      	mov	sp, r7
 8017a5c:	bd90      	pop	{r4, r7, pc}

08017a5e <_ZSt3getISt6vectorI6SymbolSaIS1_EEJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES3_EERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 8017a5e:	b580      	push	{r7, lr}
 8017a60:	b082      	sub	sp, #8
 8017a62:	af00      	add	r7, sp, #0
 8017a64:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 8017a66:	6878      	ldr	r0, [r7, #4]
 8017a68:	f7f0 ff42 	bl	80088f0 <_ZSt3getILj4EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8017a6c:	4603      	mov	r3, r0
    }
 8017a6e:	4618      	mov	r0, r3
 8017a70:	3708      	adds	r7, #8
 8017a72:	46bd      	mov	sp, r7
 8017a74:	bd80      	pop	{r7, pc}

08017a76 <_ZNSt6vectorI6SymbolSaIS0_EEixEj>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
 8017a76:	b480      	push	{r7}
 8017a78:	b083      	sub	sp, #12
 8017a7a:	af00      	add	r7, sp, #0
 8017a7c:	6078      	str	r0, [r7, #4]
 8017a7e:	6039      	str	r1, [r7, #0]
	return *(this->_M_impl._M_start + __n);
 8017a80:	687b      	ldr	r3, [r7, #4]
 8017a82:	681a      	ldr	r2, [r3, #0]
 8017a84:	683b      	ldr	r3, [r7, #0]
 8017a86:	015b      	lsls	r3, r3, #5
 8017a88:	4413      	add	r3, r2
      }
 8017a8a:	4618      	mov	r0, r3
 8017a8c:	370c      	adds	r7, #12
 8017a8e:	46bd      	mov	sp, r7
 8017a90:	f85d 7b04 	ldr.w	r7, [sp], #4
 8017a94:	4770      	bx	lr

08017a96 <_ZSt3getINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJifbS5_St6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 8017a96:	b580      	push	{r7, lr}
 8017a98:	b082      	sub	sp, #8
 8017a9a:	af00      	add	r7, sp, #0
 8017a9c:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 8017a9e:	6878      	ldr	r0, [r7, #4]
 8017aa0:	f7f0 fe80 	bl	80087a4 <_ZSt3getILj3EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8017aa4:	4603      	mov	r3, r0
    }
 8017aa6:	4618      	mov	r0, r3
 8017aa8:	3708      	adds	r7, #8
 8017aaa:	46bd      	mov	sp, r7
 8017aac:	bd80      	pop	{r7, pc}

08017aae <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_>:
    operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
 8017aae:	b580      	push	{r7, lr}
 8017ab0:	b084      	sub	sp, #16
 8017ab2:	af00      	add	r7, sp, #0
 8017ab4:	60f8      	str	r0, [r7, #12]
 8017ab6:	60b9      	str	r1, [r7, #8]
 8017ab8:	607a      	str	r2, [r7, #4]
      basic_string<_CharT, _Traits, _Alloc> __str(__lhs);
 8017aba:	68b9      	ldr	r1, [r7, #8]
 8017abc:	68f8      	ldr	r0, [r7, #12]
 8017abe:	f00b fb15 	bl	80230ec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
      __str.append(__rhs);
 8017ac2:	6879      	ldr	r1, [r7, #4]
 8017ac4:	68f8      	ldr	r0, [r7, #12]
 8017ac6:	f00b fabf 	bl	8023048 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_>
      return __str;
 8017aca:	bf00      	nop
    }
 8017acc:	68f8      	ldr	r0, [r7, #12]
 8017ace:	3710      	adds	r7, #16
 8017ad0:	46bd      	mov	sp, r7
 8017ad2:	bd80      	pop	{r7, pc}

08017ad4 <_ZNSt6vectorI6SymbolSaIS0_EE7reserveEj>:
    vector<_Tp, _Alloc>::
 8017ad4:	b5b0      	push	{r4, r5, r7, lr}
 8017ad6:	b084      	sub	sp, #16
 8017ad8:	af00      	add	r7, sp, #0
 8017ada:	6078      	str	r0, [r7, #4]
 8017adc:	6039      	str	r1, [r7, #0]
      if (__n > this->max_size())
 8017ade:	6878      	ldr	r0, [r7, #4]
 8017ae0:	f000 f8c9 	bl	8017c76 <_ZNKSt6vectorI6SymbolSaIS0_EE8max_sizeEv>
 8017ae4:	4602      	mov	r2, r0
 8017ae6:	683b      	ldr	r3, [r7, #0]
 8017ae8:	4293      	cmp	r3, r2
 8017aea:	bf8c      	ite	hi
 8017aec:	2301      	movhi	r3, #1
 8017aee:	2300      	movls	r3, #0
 8017af0:	b2db      	uxtb	r3, r3
 8017af2:	2b00      	cmp	r3, #0
 8017af4:	d002      	beq.n	8017afc <_ZNSt6vectorI6SymbolSaIS0_EE7reserveEj+0x28>
	__throw_length_error(__N("vector::reserve"));
 8017af6:	4823      	ldr	r0, [pc, #140]	; (8017b84 <_ZNSt6vectorI6SymbolSaIS0_EE7reserveEj+0xb0>)
 8017af8:	f00a ff63 	bl	80229c2 <_ZSt20__throw_length_errorPKc>
      if (this->capacity() < __n)
 8017afc:	6878      	ldr	r0, [r7, #4]
 8017afe:	f7ef f89e 	bl	8006c3e <_ZNKSt6vectorI6SymbolSaIS0_EE8capacityEv>
 8017b02:	4602      	mov	r2, r0
 8017b04:	683b      	ldr	r3, [r7, #0]
 8017b06:	4293      	cmp	r3, r2
 8017b08:	bf8c      	ite	hi
 8017b0a:	2301      	movhi	r3, #1
 8017b0c:	2300      	movls	r3, #0
 8017b0e:	b2db      	uxtb	r3, r3
 8017b10:	2b00      	cmp	r3, #0
 8017b12:	d033      	beq.n	8017b7c <_ZNSt6vectorI6SymbolSaIS0_EE7reserveEj+0xa8>
	  const size_type __old_size = size();
 8017b14:	6878      	ldr	r0, [r7, #4]
 8017b16:	f7ef f882 	bl	8006c1e <_ZNKSt6vectorI6SymbolSaIS0_EE4sizeEv>
 8017b1a:	60f8      	str	r0, [r7, #12]
	      __tmp = this->_M_allocate(__n);
 8017b1c:	687b      	ldr	r3, [r7, #4]
 8017b1e:	6839      	ldr	r1, [r7, #0]
 8017b20:	4618      	mov	r0, r3
 8017b22:	f7ef fcd5 	bl	80074d0 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE11_M_allocateEj>
 8017b26:	60b8      	str	r0, [r7, #8]
	      _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
 8017b28:	687b      	ldr	r3, [r7, #4]
 8017b2a:	681c      	ldr	r4, [r3, #0]
 8017b2c:	687b      	ldr	r3, [r7, #4]
 8017b2e:	685d      	ldr	r5, [r3, #4]
			  __tmp, _M_get_Tp_allocator());
 8017b30:	687b      	ldr	r3, [r7, #4]
 8017b32:	4618      	mov	r0, r3
 8017b34:	f7ef f822 	bl	8006b7c <_ZNSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 8017b38:	4603      	mov	r3, r0
	      _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
 8017b3a:	68ba      	ldr	r2, [r7, #8]
 8017b3c:	4629      	mov	r1, r5
 8017b3e:	4620      	mov	r0, r4
 8017b40:	f000 f8aa 	bl	8017c98 <_ZNSt6vectorI6SymbolSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_>
	  _M_deallocate(this->_M_impl._M_start,
 8017b44:	6878      	ldr	r0, [r7, #4]
 8017b46:	687b      	ldr	r3, [r7, #4]
 8017b48:	6819      	ldr	r1, [r3, #0]
			this->_M_impl._M_end_of_storage
 8017b4a:	687b      	ldr	r3, [r7, #4]
 8017b4c:	689a      	ldr	r2, [r3, #8]
			- this->_M_impl._M_start);
 8017b4e:	687b      	ldr	r3, [r7, #4]
 8017b50:	681b      	ldr	r3, [r3, #0]
 8017b52:	1ad3      	subs	r3, r2, r3
 8017b54:	115b      	asrs	r3, r3, #5
	  _M_deallocate(this->_M_impl._M_start,
 8017b56:	461a      	mov	r2, r3
 8017b58:	f7ef f840 	bl	8006bdc <_ZNSt12_Vector_baseI6SymbolSaIS0_EE13_M_deallocateEPS0_j>
	  this->_M_impl._M_start = __tmp;
 8017b5c:	687b      	ldr	r3, [r7, #4]
 8017b5e:	68ba      	ldr	r2, [r7, #8]
 8017b60:	601a      	str	r2, [r3, #0]
	  this->_M_impl._M_finish = __tmp + __old_size;
 8017b62:	68fb      	ldr	r3, [r7, #12]
 8017b64:	015b      	lsls	r3, r3, #5
 8017b66:	68ba      	ldr	r2, [r7, #8]
 8017b68:	441a      	add	r2, r3
 8017b6a:	687b      	ldr	r3, [r7, #4]
 8017b6c:	605a      	str	r2, [r3, #4]
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 8017b6e:	687b      	ldr	r3, [r7, #4]
 8017b70:	681a      	ldr	r2, [r3, #0]
 8017b72:	683b      	ldr	r3, [r7, #0]
 8017b74:	015b      	lsls	r3, r3, #5
 8017b76:	441a      	add	r2, r3
 8017b78:	687b      	ldr	r3, [r7, #4]
 8017b7a:	609a      	str	r2, [r3, #8]
    }
 8017b7c:	bf00      	nop
 8017b7e:	3710      	adds	r7, #16
 8017b80:	46bd      	mov	sp, r7
 8017b82:	bdb0      	pop	{r4, r5, r7, pc}
 8017b84:	08027da0 	.word	0x08027da0

08017b88 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE7emplaceILj0EJRiEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSG_E4typeEDpOSH_>:
	emplace(_Args&&... __args)
 8017b88:	b580      	push	{r7, lr}
 8017b8a:	b082      	sub	sp, #8
 8017b8c:	af00      	add	r7, sp, #0
 8017b8e:	6078      	str	r0, [r7, #4]
 8017b90:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 8017b92:	687b      	ldr	r3, [r7, #4]
 8017b94:	4618      	mov	r0, r3
 8017b96:	f7eb f9bb 	bl	8002f10 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 8017b9a:	6838      	ldr	r0, [r7, #0]
 8017b9c:	f7ed ff97 	bl	8005ace <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 8017ba0:	4603      	mov	r3, r0
 8017ba2:	4619      	mov	r1, r3
 8017ba4:	6878      	ldr	r0, [r7, #4]
 8017ba6:	f000 f88b 	bl	8017cc0 <_ZSt28__variant_construct_by_indexILj0ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEJRiEEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 8017baa:	6878      	ldr	r0, [r7, #4]
 8017bac:	f7e9 feda 	bl	8001964 <_ZSt3getILj0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8017bb0:	4603      	mov	r3, r0
	}
 8017bb2:	4618      	mov	r0, r3
 8017bb4:	3708      	adds	r7, #8
 8017bb6:	46bd      	mov	sp, r7
 8017bb8:	bd80      	pop	{r7, pc}

08017bba <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE7emplaceILj1EJRfEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSG_E4typeEDpOSH_>:
	emplace(_Args&&... __args)
 8017bba:	b580      	push	{r7, lr}
 8017bbc:	b082      	sub	sp, #8
 8017bbe:	af00      	add	r7, sp, #0
 8017bc0:	6078      	str	r0, [r7, #4]
 8017bc2:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 8017bc4:	687b      	ldr	r3, [r7, #4]
 8017bc6:	4618      	mov	r0, r3
 8017bc8:	f7eb f9a2 	bl	8002f10 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 8017bcc:	6838      	ldr	r0, [r7, #0]
 8017bce:	f7ed ffa0 	bl	8005b12 <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 8017bd2:	4603      	mov	r3, r0
 8017bd4:	4619      	mov	r1, r3
 8017bd6:	6878      	ldr	r0, [r7, #4]
 8017bd8:	f000 f891 	bl	8017cfe <_ZSt28__variant_construct_by_indexILj1ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEJRfEEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 8017bdc:	6878      	ldr	r0, [r7, #4]
 8017bde:	f7f0 fd6d 	bl	80086bc <_ZSt3getILj1EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8017be2:	4603      	mov	r3, r0
	}
 8017be4:	4618      	mov	r0, r3
 8017be6:	3708      	adds	r7, #8
 8017be8:	46bd      	mov	sp, r7
 8017bea:	bd80      	pop	{r7, pc}

08017bec <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE7emplaceILj2EJRbEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSG_E4typeEDpOSH_>:
	emplace(_Args&&... __args)
 8017bec:	b580      	push	{r7, lr}
 8017bee:	b082      	sub	sp, #8
 8017bf0:	af00      	add	r7, sp, #0
 8017bf2:	6078      	str	r0, [r7, #4]
 8017bf4:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 8017bf6:	687b      	ldr	r3, [r7, #4]
 8017bf8:	4618      	mov	r0, r3
 8017bfa:	f7eb f989 	bl	8002f10 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 8017bfe:	6838      	ldr	r0, [r7, #0]
 8017c00:	f7ed ffa9 	bl	8005b56 <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
 8017c04:	4603      	mov	r3, r0
 8017c06:	4619      	mov	r1, r3
 8017c08:	6878      	ldr	r0, [r7, #4]
 8017c0a:	f000 f897 	bl	8017d3c <_ZSt28__variant_construct_by_indexILj2ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEJRbEEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 8017c0e:	6878      	ldr	r0, [r7, #4]
 8017c10:	f7e9 fcde 	bl	80015d0 <_ZSt3getILj2EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8017c14:	4603      	mov	r3, r0
	}
 8017c16:	4618      	mov	r0, r3
 8017c18:	3708      	adds	r7, #8
 8017c1a:	46bd      	mov	sp, r7
 8017c1c:	bd80      	pop	{r7, pc}

08017c1e <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1ILj3EJRS5_ES5_vEESt16in_place_index_tIXT_EEDpOT0_>:
	variant(in_place_index_t<_Np>, _Args&&... __args)
 8017c1e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017c20:	b085      	sub	sp, #20
 8017c22:	af00      	add	r7, sp, #0
 8017c24:	60f8      	str	r0, [r7, #12]
 8017c26:	7239      	strb	r1, [r7, #8]
 8017c28:	607a      	str	r2, [r7, #4]
	_Default_ctor_enabler(_Enable_default_constructor_tag{})
 8017c2a:	68fc      	ldr	r4, [r7, #12]
 8017c2c:	6878      	ldr	r0, [r7, #4]
 8017c2e:	f7ed ffc0 	bl	8005bb2 <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 8017c32:	4603      	mov	r3, r0
 8017c34:	461a      	mov	r2, r3
 8017c36:	4631      	mov	r1, r6
 8017c38:	4620      	mov	r0, r4
 8017c3a:	f000 f8e3 	bl	8017e04 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj3EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>
 8017c3e:	4629      	mov	r1, r5
 8017c40:	68f8      	ldr	r0, [r7, #12]
 8017c42:	f7ee fed8 	bl	80069f6 <_ZNSt27_Enable_default_constructorILb1ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEC1ESt31_Enable_default_constructor_tag>
	{ }
 8017c46:	68fb      	ldr	r3, [r7, #12]
 8017c48:	4618      	mov	r0, r3
 8017c4a:	3714      	adds	r7, #20
 8017c4c:	46bd      	mov	sp, r7
 8017c4e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08017c50 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1IRS5_vvS5_vEEOT_>:
	variant(_Tp&& __t)
 8017c50:	b590      	push	{r4, r7, lr}
 8017c52:	b083      	sub	sp, #12
 8017c54:	af00      	add	r7, sp, #0
 8017c56:	6078      	str	r0, [r7, #4]
 8017c58:	6039      	str	r1, [r7, #0]
		  std::forward<_Tp>(__t))
 8017c5a:	6838      	ldr	r0, [r7, #0]
 8017c5c:	f7ed ffa9 	bl	8005bb2 <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 8017c60:	4603      	mov	r3, r0
 8017c62:	461a      	mov	r2, r3
 8017c64:	4621      	mov	r1, r4
 8017c66:	6878      	ldr	r0, [r7, #4]
 8017c68:	f7ff ffd9 	bl	8017c1e <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1ILj3EJRS5_ES5_vEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 8017c6c:	687b      	ldr	r3, [r7, #4]
 8017c6e:	4618      	mov	r0, r3
 8017c70:	370c      	adds	r7, #12
 8017c72:	46bd      	mov	sp, r7
 8017c74:	bd90      	pop	{r4, r7, pc}

08017c76 <_ZNKSt6vectorI6SymbolSaIS0_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
 8017c76:	b580      	push	{r7, lr}
 8017c78:	b082      	sub	sp, #8
 8017c7a:	af00      	add	r7, sp, #0
 8017c7c:	6078      	str	r0, [r7, #4]
      { return _S_max_size(_M_get_Tp_allocator()); }
 8017c7e:	687b      	ldr	r3, [r7, #4]
 8017c80:	4618      	mov	r0, r3
 8017c82:	f7ee ff86 	bl	8006b92 <_ZNKSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 8017c86:	4603      	mov	r3, r0
 8017c88:	4618      	mov	r0, r3
 8017c8a:	f000 f8d0 	bl	8017e2e <_ZNSt6vectorI6SymbolSaIS0_EE11_S_max_sizeERKS1_>
 8017c8e:	4603      	mov	r3, r0
 8017c90:	4618      	mov	r0, r3
 8017c92:	3708      	adds	r7, #8
 8017c94:	46bd      	mov	sp, r7
 8017c96:	bd80      	pop	{r7, pc}

08017c98 <_ZNSt6vectorI6SymbolSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
 8017c98:	b590      	push	{r4, r7, lr}
 8017c9a:	b089      	sub	sp, #36	; 0x24
 8017c9c:	af02      	add	r7, sp, #8
 8017c9e:	60f8      	str	r0, [r7, #12]
 8017ca0:	60b9      	str	r1, [r7, #8]
 8017ca2:	607a      	str	r2, [r7, #4]
 8017ca4:	603b      	str	r3, [r7, #0]
	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
 8017ca6:	f88d 4000 	strb.w	r4, [sp]
 8017caa:	683b      	ldr	r3, [r7, #0]
 8017cac:	687a      	ldr	r2, [r7, #4]
 8017cae:	68b9      	ldr	r1, [r7, #8]
 8017cb0:	68f8      	ldr	r0, [r7, #12]
 8017cb2:	f000 f8d6 	bl	8017e62 <_ZNSt6vectorI6SymbolSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE>
 8017cb6:	4603      	mov	r3, r0
      }
 8017cb8:	4618      	mov	r0, r3
 8017cba:	371c      	adds	r7, #28
 8017cbc:	46bd      	mov	sp, r7
 8017cbe:	bd90      	pop	{r4, r7, pc}

08017cc0 <_ZSt28__variant_construct_by_indexILj0ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEJRiEEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 8017cc0:	b590      	push	{r4, r7, lr}
 8017cc2:	b085      	sub	sp, #20
 8017cc4:	af00      	add	r7, sp, #0
 8017cc6:	6078      	str	r0, [r7, #4]
 8017cc8:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 8017cca:	687b      	ldr	r3, [r7, #4]
 8017ccc:	2200      	movs	r2, #0
 8017cce:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 8017cd0:	6878      	ldr	r0, [r7, #4]
 8017cd2:	f7e9 fe36 	bl	8001942 <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8017cd6:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 8017cd8:	6838      	ldr	r0, [r7, #0]
 8017cda:	f7ed fef8 	bl	8005ace <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 8017cde:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 8017ce0:	681c      	ldr	r4, [r3, #0]
 8017ce2:	68f8      	ldr	r0, [r7, #12]
 8017ce4:	f7f0 feda 	bl	8008a9c <_ZSt9addressofIiEPT_RS0_>
 8017ce8:	4603      	mov	r3, r0
 8017cea:	4619      	mov	r1, r3
 8017cec:	2004      	movs	r0, #4
 8017cee:	f7e9 f9b4 	bl	800105a <_ZnwjPv>
 8017cf2:	4603      	mov	r3, r0
 8017cf4:	601c      	str	r4, [r3, #0]
    }
 8017cf6:	bf00      	nop
 8017cf8:	3714      	adds	r7, #20
 8017cfa:	46bd      	mov	sp, r7
 8017cfc:	bd90      	pop	{r4, r7, pc}

08017cfe <_ZSt28__variant_construct_by_indexILj1ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEJRfEEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 8017cfe:	b590      	push	{r4, r7, lr}
 8017d00:	b085      	sub	sp, #20
 8017d02:	af00      	add	r7, sp, #0
 8017d04:	6078      	str	r0, [r7, #4]
 8017d06:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 8017d08:	687b      	ldr	r3, [r7, #4]
 8017d0a:	2201      	movs	r2, #1
 8017d0c:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 8017d0e:	6878      	ldr	r0, [r7, #4]
 8017d10:	f7eb fe18 	bl	8003944 <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8017d14:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 8017d16:	6838      	ldr	r0, [r7, #0]
 8017d18:	f7ed fefb 	bl	8005b12 <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 8017d1c:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 8017d1e:	681c      	ldr	r4, [r3, #0]
 8017d20:	68f8      	ldr	r0, [r7, #12]
 8017d22:	f7f0 fec7 	bl	8008ab4 <_ZSt9addressofIfEPT_RS0_>
 8017d26:	4603      	mov	r3, r0
 8017d28:	4619      	mov	r1, r3
 8017d2a:	2004      	movs	r0, #4
 8017d2c:	f7e9 f995 	bl	800105a <_ZnwjPv>
 8017d30:	4603      	mov	r3, r0
 8017d32:	601c      	str	r4, [r3, #0]
    }
 8017d34:	bf00      	nop
 8017d36:	3714      	adds	r7, #20
 8017d38:	46bd      	mov	sp, r7
 8017d3a:	bd90      	pop	{r4, r7, pc}

08017d3c <_ZSt28__variant_construct_by_indexILj2ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEJRbEEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 8017d3c:	b590      	push	{r4, r7, lr}
 8017d3e:	b085      	sub	sp, #20
 8017d40:	af00      	add	r7, sp, #0
 8017d42:	6078      	str	r0, [r7, #4]
 8017d44:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 8017d46:	687b      	ldr	r3, [r7, #4]
 8017d48:	2202      	movs	r2, #2
 8017d4a:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 8017d4c:	6878      	ldr	r0, [r7, #4]
 8017d4e:	f7e9 fc2d 	bl	80015ac <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8017d52:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 8017d54:	6838      	ldr	r0, [r7, #0]
 8017d56:	f7ed fefe 	bl	8005b56 <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
 8017d5a:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 8017d5c:	781c      	ldrb	r4, [r3, #0]
 8017d5e:	68f8      	ldr	r0, [r7, #12]
 8017d60:	f7f0 feb4 	bl	8008acc <_ZSt9addressofIbEPT_RS0_>
 8017d64:	4603      	mov	r3, r0
 8017d66:	4619      	mov	r1, r3
 8017d68:	2001      	movs	r0, #1
 8017d6a:	f7e9 f976 	bl	800105a <_ZnwjPv>
 8017d6e:	4603      	mov	r3, r0
 8017d70:	4622      	mov	r2, r4
 8017d72:	701a      	strb	r2, [r3, #0]
    }
 8017d74:	bf00      	nop
 8017d76:	3714      	adds	r7, #20
 8017d78:	46bd      	mov	sp, r7
 8017d7a:	bd90      	pop	{r4, r7, pc}

08017d7c <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj3EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 8017d7c:	b590      	push	{r4, r7, lr}
 8017d7e:	b085      	sub	sp, #20
 8017d80:	af00      	add	r7, sp, #0
 8017d82:	60f8      	str	r0, [r7, #12]
 8017d84:	7239      	strb	r1, [r7, #8]
 8017d86:	607a      	str	r2, [r7, #4]
 8017d88:	68fb      	ldr	r3, [r7, #12]
 8017d8a:	687a      	ldr	r2, [r7, #4]
 8017d8c:	4621      	mov	r1, r4
 8017d8e:	4618      	mov	r0, r3
 8017d90:	f000 f8ea 	bl	8017f68 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj3EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>
 8017d94:	68fb      	ldr	r3, [r7, #12]
 8017d96:	4618      	mov	r0, r3
 8017d98:	3714      	adds	r7, #20
 8017d9a:	46bd      	mov	sp, r7
 8017d9c:	bd90      	pop	{r4, r7, pc}

08017d9e <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj3EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 8017d9e:	b590      	push	{r4, r7, lr}
 8017da0:	b085      	sub	sp, #20
 8017da2:	af00      	add	r7, sp, #0
 8017da4:	60f8      	str	r0, [r7, #12]
 8017da6:	7239      	strb	r1, [r7, #8]
 8017da8:	607a      	str	r2, [r7, #4]
 8017daa:	68fb      	ldr	r3, [r7, #12]
 8017dac:	687a      	ldr	r2, [r7, #4]
 8017dae:	4621      	mov	r1, r4
 8017db0:	4618      	mov	r0, r3
 8017db2:	f7ff ffe3 	bl	8017d7c <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj3EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>
 8017db6:	68fb      	ldr	r3, [r7, #12]
 8017db8:	4618      	mov	r0, r3
 8017dba:	3714      	adds	r7, #20
 8017dbc:	46bd      	mov	sp, r7
 8017dbe:	bd90      	pop	{r4, r7, pc}

08017dc0 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj3EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 8017dc0:	b590      	push	{r4, r7, lr}
 8017dc2:	b085      	sub	sp, #20
 8017dc4:	af00      	add	r7, sp, #0
 8017dc6:	60f8      	str	r0, [r7, #12]
 8017dc8:	7239      	strb	r1, [r7, #8]
 8017dca:	607a      	str	r2, [r7, #4]
 8017dcc:	68fb      	ldr	r3, [r7, #12]
 8017dce:	687a      	ldr	r2, [r7, #4]
 8017dd0:	4621      	mov	r1, r4
 8017dd2:	4618      	mov	r0, r3
 8017dd4:	f7ff ffe3 	bl	8017d9e <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj3EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>
 8017dd8:	68fb      	ldr	r3, [r7, #12]
 8017dda:	4618      	mov	r0, r3
 8017ddc:	3714      	adds	r7, #20
 8017dde:	46bd      	mov	sp, r7
 8017de0:	bd90      	pop	{r4, r7, pc}

08017de2 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj3EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 8017de2:	b590      	push	{r4, r7, lr}
 8017de4:	b085      	sub	sp, #20
 8017de6:	af00      	add	r7, sp, #0
 8017de8:	60f8      	str	r0, [r7, #12]
 8017dea:	7239      	strb	r1, [r7, #8]
 8017dec:	607a      	str	r2, [r7, #4]
 8017dee:	68fb      	ldr	r3, [r7, #12]
 8017df0:	687a      	ldr	r2, [r7, #4]
 8017df2:	4621      	mov	r1, r4
 8017df4:	4618      	mov	r0, r3
 8017df6:	f7ff ffe3 	bl	8017dc0 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj3EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>
 8017dfa:	68fb      	ldr	r3, [r7, #12]
 8017dfc:	4618      	mov	r0, r3
 8017dfe:	3714      	adds	r7, #20
 8017e00:	46bd      	mov	sp, r7
 8017e02:	bd90      	pop	{r4, r7, pc}

08017e04 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj3EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
	_Variant_base(in_place_index_t<_Np> __i, _Args&&... __args)
 8017e04:	b5b0      	push	{r4, r5, r7, lr}
 8017e06:	b084      	sub	sp, #16
 8017e08:	af00      	add	r7, sp, #0
 8017e0a:	60f8      	str	r0, [r7, #12]
 8017e0c:	7239      	strb	r1, [r7, #8]
 8017e0e:	607a      	str	r2, [r7, #4]
	: _Base(__i, std::forward<_Args>(__args)...)
 8017e10:	68fc      	ldr	r4, [r7, #12]
 8017e12:	6878      	ldr	r0, [r7, #4]
 8017e14:	f7ed fecd 	bl	8005bb2 <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 8017e18:	4603      	mov	r3, r0
 8017e1a:	461a      	mov	r2, r3
 8017e1c:	4629      	mov	r1, r5
 8017e1e:	4620      	mov	r0, r4
 8017e20:	f7ff ffdf 	bl	8017de2 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj3EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 8017e24:	68fb      	ldr	r3, [r7, #12]
 8017e26:	4618      	mov	r0, r3
 8017e28:	3710      	adds	r7, #16
 8017e2a:	46bd      	mov	sp, r7
 8017e2c:	bdb0      	pop	{r4, r5, r7, pc}

08017e2e <_ZNSt6vectorI6SymbolSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
 8017e2e:	b580      	push	{r7, lr}
 8017e30:	b084      	sub	sp, #16
 8017e32:	af00      	add	r7, sp, #0
 8017e34:	6078      	str	r0, [r7, #4]
	const size_t __diffmax
 8017e36:	f06f 437c 	mvn.w	r3, #4227858432	; 0xfc000000
 8017e3a:	60fb      	str	r3, [r7, #12]
	const size_t __allocmax = _Alloc_traits::max_size(__a);
 8017e3c:	6878      	ldr	r0, [r7, #4]
 8017e3e:	f000 f8ab 	bl	8017f98 <_ZNSt16allocator_traitsISaI6SymbolEE8max_sizeERKS1_>
 8017e42:	4603      	mov	r3, r0
 8017e44:	60bb      	str	r3, [r7, #8]
	return (std::min)(__diffmax, __allocmax);
 8017e46:	f107 0208 	add.w	r2, r7, #8
 8017e4a:	f107 030c 	add.w	r3, r7, #12
 8017e4e:	4611      	mov	r1, r2
 8017e50:	4618      	mov	r0, r3
 8017e52:	f7fe f82f 	bl	8015eb4 <_ZSt3minIjERKT_S2_S2_>
 8017e56:	4603      	mov	r3, r0
 8017e58:	681b      	ldr	r3, [r3, #0]
      }
 8017e5a:	4618      	mov	r0, r3
 8017e5c:	3710      	adds	r7, #16
 8017e5e:	46bd      	mov	sp, r7
 8017e60:	bd80      	pop	{r7, pc}

08017e62 <_ZNSt6vectorI6SymbolSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE>:
      _S_do_relocate(pointer __first, pointer __last, pointer __result,
 8017e62:	b580      	push	{r7, lr}
 8017e64:	b084      	sub	sp, #16
 8017e66:	af00      	add	r7, sp, #0
 8017e68:	60f8      	str	r0, [r7, #12]
 8017e6a:	60b9      	str	r1, [r7, #8]
 8017e6c:	607a      	str	r2, [r7, #4]
 8017e6e:	603b      	str	r3, [r7, #0]
	return std::__relocate_a(__first, __last, __result, __alloc);
 8017e70:	683b      	ldr	r3, [r7, #0]
 8017e72:	687a      	ldr	r2, [r7, #4]
 8017e74:	68b9      	ldr	r1, [r7, #8]
 8017e76:	68f8      	ldr	r0, [r7, #12]
 8017e78:	f000 f89a 	bl	8017fb0 <_ZSt12__relocate_aIP6SymbolS1_SaIS0_EET0_T_S4_S3_RT1_>
 8017e7c:	4603      	mov	r3, r0
      }
 8017e7e:	4618      	mov	r0, r3
 8017e80:	3710      	adds	r7, #16
 8017e82:	46bd      	mov	sp, r7
 8017e84:	bd80      	pop	{r7, pc}

08017e86 <_ZNSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IJRS7_EEESt16in_place_index_tILj0EEDpOT_>:
	_Uninitialized(in_place_index_t<0>, _Args&&... __args)
 8017e86:	b590      	push	{r4, r7, lr}
 8017e88:	b085      	sub	sp, #20
 8017e8a:	af00      	add	r7, sp, #0
 8017e8c:	60f8      	str	r0, [r7, #12]
 8017e8e:	7239      	strb	r1, [r7, #8]
 8017e90:	607a      	str	r2, [r7, #4]
	    _Type(std::forward<_Args>(__args)...);
 8017e92:	6878      	ldr	r0, [r7, #4]
 8017e94:	f7ed fe8d 	bl	8005bb2 <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 8017e98:	4604      	mov	r4, r0
	  ::new ((void*)std::addressof(_M_storage))
 8017e9a:	68fb      	ldr	r3, [r7, #12]
 8017e9c:	4618      	mov	r0, r3
 8017e9e:	f7ef fd36 	bl	800790e <_ZSt9addressofIN9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEPT_RS9_>
 8017ea2:	4603      	mov	r3, r0
 8017ea4:	4619      	mov	r1, r3
 8017ea6:	2018      	movs	r0, #24
 8017ea8:	f7e9 f8d7 	bl	800105a <_ZnwjPv>
 8017eac:	4603      	mov	r3, r0
 8017eae:	4621      	mov	r1, r4
 8017eb0:	4618      	mov	r0, r3
 8017eb2:	f00b f91b 	bl	80230ec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
	}
 8017eb6:	68fb      	ldr	r3, [r7, #12]
 8017eb8:	4618      	mov	r0, r3
 8017eba:	3714      	adds	r7, #20
 8017ebc:	46bd      	mov	sp, r7
 8017ebe:	bd90      	pop	{r4, r7, pc}

08017ec0 <_ZNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1IJRS7_EEESt16in_place_index_tILj0EEDpOT_>:
	constexpr _Variadic_union(in_place_index_t<0>, _Args&&... __args)
 8017ec0:	b5b0      	push	{r4, r5, r7, lr}
 8017ec2:	b084      	sub	sp, #16
 8017ec4:	af00      	add	r7, sp, #0
 8017ec6:	60f8      	str	r0, [r7, #12]
 8017ec8:	7239      	strb	r1, [r7, #8]
 8017eca:	607a      	str	r2, [r7, #4]
	: _M_first(in_place_index<0>, std::forward<_Args>(__args)...)
 8017ecc:	68fc      	ldr	r4, [r7, #12]
 8017ece:	6878      	ldr	r0, [r7, #4]
 8017ed0:	f7ed fe6f 	bl	8005bb2 <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 8017ed4:	4603      	mov	r3, r0
 8017ed6:	461a      	mov	r2, r3
 8017ed8:	4629      	mov	r1, r5
 8017eda:	4620      	mov	r0, r4
 8017edc:	f7ff ffd3 	bl	8017e86 <_ZNSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IJRS7_EEESt16in_place_index_tILj0EEDpOT_>
	{ }
 8017ee0:	68fb      	ldr	r3, [r7, #12]
 8017ee2:	4618      	mov	r0, r3
 8017ee4:	3710      	adds	r7, #16
 8017ee6:	46bd      	mov	sp, r7
 8017ee8:	bdb0      	pop	{r4, r5, r7, pc}

08017eea <_ZNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj1EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variadic_union(in_place_index_t<_Np>, _Args&&... __args)
 8017eea:	b5b0      	push	{r4, r5, r7, lr}
 8017eec:	b084      	sub	sp, #16
 8017eee:	af00      	add	r7, sp, #0
 8017ef0:	60f8      	str	r0, [r7, #12]
 8017ef2:	7239      	strb	r1, [r7, #8]
 8017ef4:	607a      	str	r2, [r7, #4]
	: _M_rest(in_place_index<_Np-1>, std::forward<_Args>(__args)...)
 8017ef6:	68fc      	ldr	r4, [r7, #12]
 8017ef8:	6878      	ldr	r0, [r7, #4]
 8017efa:	f7ed fe5a 	bl	8005bb2 <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 8017efe:	4603      	mov	r3, r0
 8017f00:	461a      	mov	r2, r3
 8017f02:	4629      	mov	r1, r5
 8017f04:	4620      	mov	r0, r4
 8017f06:	f7ff ffdb 	bl	8017ec0 <_ZNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1IJRS7_EEESt16in_place_index_tILj0EEDpOT_>
	{ }
 8017f0a:	68fb      	ldr	r3, [r7, #12]
 8017f0c:	4618      	mov	r0, r3
 8017f0e:	3710      	adds	r7, #16
 8017f10:	46bd      	mov	sp, r7
 8017f12:	bdb0      	pop	{r4, r5, r7, pc}

08017f14 <_ZNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj2EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variadic_union(in_place_index_t<_Np>, _Args&&... __args)
 8017f14:	b5b0      	push	{r4, r5, r7, lr}
 8017f16:	b084      	sub	sp, #16
 8017f18:	af00      	add	r7, sp, #0
 8017f1a:	60f8      	str	r0, [r7, #12]
 8017f1c:	7239      	strb	r1, [r7, #8]
 8017f1e:	607a      	str	r2, [r7, #4]
	: _M_rest(in_place_index<_Np-1>, std::forward<_Args>(__args)...)
 8017f20:	68fc      	ldr	r4, [r7, #12]
 8017f22:	6878      	ldr	r0, [r7, #4]
 8017f24:	f7ed fe45 	bl	8005bb2 <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 8017f28:	4603      	mov	r3, r0
 8017f2a:	461a      	mov	r2, r3
 8017f2c:	4629      	mov	r1, r5
 8017f2e:	4620      	mov	r0, r4
 8017f30:	f7ff ffdb 	bl	8017eea <_ZNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj1EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 8017f34:	68fb      	ldr	r3, [r7, #12]
 8017f36:	4618      	mov	r0, r3
 8017f38:	3710      	adds	r7, #16
 8017f3a:	46bd      	mov	sp, r7
 8017f3c:	bdb0      	pop	{r4, r5, r7, pc}

08017f3e <_ZNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj3EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variadic_union(in_place_index_t<_Np>, _Args&&... __args)
 8017f3e:	b5b0      	push	{r4, r5, r7, lr}
 8017f40:	b084      	sub	sp, #16
 8017f42:	af00      	add	r7, sp, #0
 8017f44:	60f8      	str	r0, [r7, #12]
 8017f46:	7239      	strb	r1, [r7, #8]
 8017f48:	607a      	str	r2, [r7, #4]
	: _M_rest(in_place_index<_Np-1>, std::forward<_Args>(__args)...)
 8017f4a:	68fc      	ldr	r4, [r7, #12]
 8017f4c:	6878      	ldr	r0, [r7, #4]
 8017f4e:	f7ed fe30 	bl	8005bb2 <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 8017f52:	4603      	mov	r3, r0
 8017f54:	461a      	mov	r2, r3
 8017f56:	4629      	mov	r1, r5
 8017f58:	4620      	mov	r0, r4
 8017f5a:	f7ff ffdb 	bl	8017f14 <_ZNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj2EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 8017f5e:	68fb      	ldr	r3, [r7, #12]
 8017f60:	4618      	mov	r0, r3
 8017f62:	3710      	adds	r7, #16
 8017f64:	46bd      	mov	sp, r7
 8017f66:	bdb0      	pop	{r4, r5, r7, pc}

08017f68 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj3EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variant_storage(in_place_index_t<_Np>, _Args&&... __args)
 8017f68:	b5b0      	push	{r4, r5, r7, lr}
 8017f6a:	b084      	sub	sp, #16
 8017f6c:	af00      	add	r7, sp, #0
 8017f6e:	60f8      	str	r0, [r7, #12]
 8017f70:	7239      	strb	r1, [r7, #8]
 8017f72:	607a      	str	r2, [r7, #4]
	_M_index(_Np)
 8017f74:	68fc      	ldr	r4, [r7, #12]
 8017f76:	6878      	ldr	r0, [r7, #4]
 8017f78:	f7ed fe1b 	bl	8005bb2 <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 8017f7c:	4603      	mov	r3, r0
 8017f7e:	461a      	mov	r2, r3
 8017f80:	4629      	mov	r1, r5
 8017f82:	4620      	mov	r0, r4
 8017f84:	f7ff ffdb 	bl	8017f3e <_ZNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj3EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>
 8017f88:	68fb      	ldr	r3, [r7, #12]
 8017f8a:	2203      	movs	r2, #3
 8017f8c:	761a      	strb	r2, [r3, #24]
	{ }
 8017f8e:	68fb      	ldr	r3, [r7, #12]
 8017f90:	4618      	mov	r0, r3
 8017f92:	3710      	adds	r7, #16
 8017f94:	46bd      	mov	sp, r7
 8017f96:	bdb0      	pop	{r4, r5, r7, pc}

08017f98 <_ZNSt16allocator_traitsISaI6SymbolEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a) noexcept
 8017f98:	b580      	push	{r7, lr}
 8017f9a:	b082      	sub	sp, #8
 8017f9c:	af00      	add	r7, sp, #0
 8017f9e:	6078      	str	r0, [r7, #4]
      { return __a.max_size(); }
 8017fa0:	6878      	ldr	r0, [r7, #4]
 8017fa2:	f7f0 fcc1 	bl	8008928 <_ZNK9__gnu_cxx13new_allocatorI6SymbolE8max_sizeEv>
 8017fa6:	4603      	mov	r3, r0
 8017fa8:	4618      	mov	r0, r3
 8017faa:	3708      	adds	r7, #8
 8017fac:	46bd      	mov	sp, r7
 8017fae:	bd80      	pop	{r7, pc}

08017fb0 <_ZSt12__relocate_aIP6SymbolS1_SaIS0_EET0_T_S4_S3_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
 8017fb0:	b5b0      	push	{r4, r5, r7, lr}
 8017fb2:	b084      	sub	sp, #16
 8017fb4:	af00      	add	r7, sp, #0
 8017fb6:	60f8      	str	r0, [r7, #12]
 8017fb8:	60b9      	str	r1, [r7, #8]
 8017fba:	607a      	str	r2, [r7, #4]
 8017fbc:	603b      	str	r3, [r7, #0]
      return __relocate_a_1(std::__niter_base(__first),
 8017fbe:	68f8      	ldr	r0, [r7, #12]
 8017fc0:	f7ef fec6 	bl	8007d50 <_ZSt12__niter_baseIP6SymbolET_S2_>
 8017fc4:	4604      	mov	r4, r0
 8017fc6:	68b8      	ldr	r0, [r7, #8]
 8017fc8:	f7ef fec2 	bl	8007d50 <_ZSt12__niter_baseIP6SymbolET_S2_>
 8017fcc:	4605      	mov	r5, r0
 8017fce:	6878      	ldr	r0, [r7, #4]
 8017fd0:	f7ef febe 	bl	8007d50 <_ZSt12__niter_baseIP6SymbolET_S2_>
 8017fd4:	4602      	mov	r2, r0
 8017fd6:	683b      	ldr	r3, [r7, #0]
 8017fd8:	4629      	mov	r1, r5
 8017fda:	4620      	mov	r0, r4
 8017fdc:	f000 f805 	bl	8017fea <_ZSt14__relocate_a_1IP6SymbolS1_SaIS0_EET0_T_S4_S3_RT1_>
 8017fe0:	4603      	mov	r3, r0
    }
 8017fe2:	4618      	mov	r0, r3
 8017fe4:	3710      	adds	r7, #16
 8017fe6:	46bd      	mov	sp, r7
 8017fe8:	bdb0      	pop	{r4, r5, r7, pc}

08017fea <_ZSt14__relocate_a_1IP6SymbolS1_SaIS0_EET0_T_S4_S3_RT1_>:
    __relocate_a_1(_InputIterator __first, _InputIterator __last,
 8017fea:	b590      	push	{r4, r7, lr}
 8017fec:	b087      	sub	sp, #28
 8017fee:	af00      	add	r7, sp, #0
 8017ff0:	60f8      	str	r0, [r7, #12]
 8017ff2:	60b9      	str	r1, [r7, #8]
 8017ff4:	607a      	str	r2, [r7, #4]
 8017ff6:	603b      	str	r3, [r7, #0]
      _ForwardIterator __cur = __result;
 8017ff8:	687b      	ldr	r3, [r7, #4]
 8017ffa:	617b      	str	r3, [r7, #20]
      for (; __first != __last; ++__first, (void)++__cur)
 8017ffc:	68fa      	ldr	r2, [r7, #12]
 8017ffe:	68bb      	ldr	r3, [r7, #8]
 8018000:	429a      	cmp	r2, r3
 8018002:	d013      	beq.n	801802c <_ZSt14__relocate_a_1IP6SymbolS1_SaIS0_EET0_T_S4_S3_RT1_+0x42>
	std::__relocate_object_a(std::__addressof(*__cur),
 8018004:	6978      	ldr	r0, [r7, #20]
 8018006:	f7f0 f96a 	bl	80082de <_ZSt11__addressofI6SymbolEPT_RS1_>
 801800a:	4604      	mov	r4, r0
 801800c:	68f8      	ldr	r0, [r7, #12]
 801800e:	f7f0 f966 	bl	80082de <_ZSt11__addressofI6SymbolEPT_RS1_>
 8018012:	4603      	mov	r3, r0
 8018014:	683a      	ldr	r2, [r7, #0]
 8018016:	4619      	mov	r1, r3
 8018018:	4620      	mov	r0, r4
 801801a:	f000 f80c 	bl	8018036 <_ZSt19__relocate_object_aI6SymbolS0_SaIS0_EEvPT_PT0_RT1_>
      for (; __first != __last; ++__first, (void)++__cur)
 801801e:	68fb      	ldr	r3, [r7, #12]
 8018020:	3320      	adds	r3, #32
 8018022:	60fb      	str	r3, [r7, #12]
 8018024:	697b      	ldr	r3, [r7, #20]
 8018026:	3320      	adds	r3, #32
 8018028:	617b      	str	r3, [r7, #20]
 801802a:	e7e7      	b.n	8017ffc <_ZSt14__relocate_a_1IP6SymbolS1_SaIS0_EET0_T_S4_S3_RT1_+0x12>
      return __cur;
 801802c:	697b      	ldr	r3, [r7, #20]
    }
 801802e:	4618      	mov	r0, r3
 8018030:	371c      	adds	r7, #28
 8018032:	46bd      	mov	sp, r7
 8018034:	bd90      	pop	{r4, r7, pc}

08018036 <_ZSt19__relocate_object_aI6SymbolS0_SaIS0_EEvPT_PT0_RT1_>:
    __relocate_object_a(_Tp* __dest, _Up* __orig, _Allocator& __alloc)
 8018036:	b580      	push	{r7, lr}
 8018038:	b084      	sub	sp, #16
 801803a:	af00      	add	r7, sp, #0
 801803c:	60f8      	str	r0, [r7, #12]
 801803e:	60b9      	str	r1, [r7, #8]
 8018040:	607a      	str	r2, [r7, #4]
      __traits::construct(__alloc, __dest, std::move(*__orig));
 8018042:	68b8      	ldr	r0, [r7, #8]
 8018044:	f000 f812 	bl	801806c <_ZSt4moveIR6SymbolEONSt16remove_referenceIT_E4typeEOS3_>
 8018048:	4603      	mov	r3, r0
 801804a:	461a      	mov	r2, r3
 801804c:	68f9      	ldr	r1, [r7, #12]
 801804e:	6878      	ldr	r0, [r7, #4]
 8018050:	f000 f817 	bl	8018082 <_ZNSt16allocator_traitsISaI6SymbolEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_>
      __traits::destroy(__alloc, std::__addressof(*__orig));
 8018054:	68b8      	ldr	r0, [r7, #8]
 8018056:	f7f0 f942 	bl	80082de <_ZSt11__addressofI6SymbolEPT_RS1_>
 801805a:	4603      	mov	r3, r0
 801805c:	4619      	mov	r1, r3
 801805e:	6878      	ldr	r0, [r7, #4]
 8018060:	f000 f822 	bl	80180a8 <_ZNSt16allocator_traitsISaI6SymbolEE7destroyIS0_EEvRS1_PT_>
    }
 8018064:	bf00      	nop
 8018066:	3710      	adds	r7, #16
 8018068:	46bd      	mov	sp, r7
 801806a:	bd80      	pop	{r7, pc}

0801806c <_ZSt4moveIR6SymbolEONSt16remove_referenceIT_E4typeEOS3_>:
    move(_Tp&& __t) noexcept
 801806c:	b480      	push	{r7}
 801806e:	b083      	sub	sp, #12
 8018070:	af00      	add	r7, sp, #0
 8018072:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 8018074:	687b      	ldr	r3, [r7, #4]
 8018076:	4618      	mov	r0, r3
 8018078:	370c      	adds	r7, #12
 801807a:	46bd      	mov	sp, r7
 801807c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8018080:	4770      	bx	lr

08018082 <_ZNSt16allocator_traitsISaI6SymbolEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 8018082:	b580      	push	{r7, lr}
 8018084:	b084      	sub	sp, #16
 8018086:	af00      	add	r7, sp, #0
 8018088:	60f8      	str	r0, [r7, #12]
 801808a:	60b9      	str	r1, [r7, #8]
 801808c:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 801808e:	6878      	ldr	r0, [r7, #4]
 8018090:	f000 f817 	bl	80180c2 <_ZSt7forwardI6SymbolEOT_RNSt16remove_referenceIS1_E4typeE>
 8018094:	4603      	mov	r3, r0
 8018096:	461a      	mov	r2, r3
 8018098:	68b9      	ldr	r1, [r7, #8]
 801809a:	68f8      	ldr	r0, [r7, #12]
 801809c:	f000 f81c 	bl	80180d8 <_ZN9__gnu_cxx13new_allocatorI6SymbolE9constructIS1_JS1_EEEvPT_DpOT0_>
 80180a0:	bf00      	nop
 80180a2:	3710      	adds	r7, #16
 80180a4:	46bd      	mov	sp, r7
 80180a6:	bd80      	pop	{r7, pc}

080180a8 <_ZNSt16allocator_traitsISaI6SymbolEE7destroyIS0_EEvRS1_PT_>:
	destroy(allocator_type& __a, _Up* __p)
 80180a8:	b580      	push	{r7, lr}
 80180aa:	b082      	sub	sp, #8
 80180ac:	af00      	add	r7, sp, #0
 80180ae:	6078      	str	r0, [r7, #4]
 80180b0:	6039      	str	r1, [r7, #0]
	{ __a.destroy(__p); }
 80180b2:	6839      	ldr	r1, [r7, #0]
 80180b4:	6878      	ldr	r0, [r7, #4]
 80180b6:	f000 f827 	bl	8018108 <_ZN9__gnu_cxx13new_allocatorI6SymbolE7destroyIS1_EEvPT_>
 80180ba:	bf00      	nop
 80180bc:	3708      	adds	r7, #8
 80180be:	46bd      	mov	sp, r7
 80180c0:	bd80      	pop	{r7, pc}

080180c2 <_ZSt7forwardI6SymbolEOT_RNSt16remove_referenceIS1_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80180c2:	b480      	push	{r7}
 80180c4:	b083      	sub	sp, #12
 80180c6:	af00      	add	r7, sp, #0
 80180c8:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80180ca:	687b      	ldr	r3, [r7, #4]
 80180cc:	4618      	mov	r0, r3
 80180ce:	370c      	adds	r7, #12
 80180d0:	46bd      	mov	sp, r7
 80180d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80180d6:	4770      	bx	lr

080180d8 <_ZN9__gnu_cxx13new_allocatorI6SymbolE9constructIS1_JS1_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 80180d8:	b590      	push	{r4, r7, lr}
 80180da:	b085      	sub	sp, #20
 80180dc:	af00      	add	r7, sp, #0
 80180de:	60f8      	str	r0, [r7, #12]
 80180e0:	60b9      	str	r1, [r7, #8]
 80180e2:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 80180e4:	6878      	ldr	r0, [r7, #4]
 80180e6:	f7ff ffec 	bl	80180c2 <_ZSt7forwardI6SymbolEOT_RNSt16remove_referenceIS1_E4typeE>
 80180ea:	4604      	mov	r4, r0
 80180ec:	68bb      	ldr	r3, [r7, #8]
 80180ee:	4619      	mov	r1, r3
 80180f0:	2020      	movs	r0, #32
 80180f2:	f7e8 ffb2 	bl	800105a <_ZnwjPv>
 80180f6:	4603      	mov	r3, r0
 80180f8:	4621      	mov	r1, r4
 80180fa:	4618      	mov	r0, r3
 80180fc:	f7f3 ff48 	bl	800bf90 <_ZN6SymbolC1EOS_>
 8018100:	bf00      	nop
 8018102:	3714      	adds	r7, #20
 8018104:	46bd      	mov	sp, r7
 8018106:	bd90      	pop	{r4, r7, pc}

08018108 <_ZN9__gnu_cxx13new_allocatorI6SymbolE7destroyIS1_EEvPT_>:
	destroy(_Up* __p)
 8018108:	b580      	push	{r7, lr}
 801810a:	b082      	sub	sp, #8
 801810c:	af00      	add	r7, sp, #0
 801810e:	6078      	str	r0, [r7, #4]
 8018110:	6039      	str	r1, [r7, #0]
	{ __p->~_Up(); }
 8018112:	6838      	ldr	r0, [r7, #0]
 8018114:	f7e9 f9e8 	bl	80014e8 <_ZN6SymbolD1Ev>
 8018118:	bf00      	nop
 801811a:	3708      	adds	r7, #8
 801811c:	46bd      	mov	sp, r7
 801811e:	bd80      	pop	{r7, pc}

08018120 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
{
	return rx_buffer;
}

void Transmitter::report_error(std::string message)
{
 8018120:	b590      	push	{r4, r7, lr}
 8018122:	b0b5      	sub	sp, #212	; 0xd4
 8018124:	af00      	add	r7, sp, #0
 8018126:	6078      	str	r0, [r7, #4]
	std::string line = itoa(Position_counter::get_instance().line, nullptr, 10);
 8018128:	f7fe f982 	bl	8016430 <_ZN16Position_counter12get_instanceEv>
 801812c:	4603      	mov	r3, r0
 801812e:	681b      	ldr	r3, [r3, #0]
 8018130:	220a      	movs	r2, #10
 8018132:	2100      	movs	r1, #0
 8018134:	4618      	mov	r0, r3
 8018136:	f00c f80d 	bl	8024154 <itoa>
 801813a:	4604      	mov	r4, r0
 801813c:	f107 0350 	add.w	r3, r7, #80	; 0x50
 8018140:	4618      	mov	r0, r3
 8018142:	f00a fb81 	bl	8022848 <_ZNSaIcEC1Ev>
 8018146:	f107 0250 	add.w	r2, r7, #80	; 0x50
 801814a:	f107 0338 	add.w	r3, r7, #56	; 0x38
 801814e:	4621      	mov	r1, r4
 8018150:	4618      	mov	r0, r3
 8018152:	f7e9 fd20 	bl	8001b96 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8018156:	f107 0350 	add.w	r3, r7, #80	; 0x50
 801815a:	4618      	mov	r0, r3
 801815c:	f00a fb75 	bl	802284a <_ZNSaIcED1Ev>
	std::string position = itoa(Position_counter::get_instance().position, nullptr, 10);
 8018160:	f7fe f966 	bl	8016430 <_ZN16Position_counter12get_instanceEv>
 8018164:	4603      	mov	r3, r0
 8018166:	685b      	ldr	r3, [r3, #4]
 8018168:	220a      	movs	r2, #10
 801816a:	2100      	movs	r1, #0
 801816c:	4618      	mov	r0, r3
 801816e:	f00b fff1 	bl	8024154 <itoa>
 8018172:	4604      	mov	r4, r0
 8018174:	f107 0354 	add.w	r3, r7, #84	; 0x54
 8018178:	4618      	mov	r0, r3
 801817a:	f00a fb65 	bl	8022848 <_ZNSaIcEC1Ev>
 801817e:	f107 0254 	add.w	r2, r7, #84	; 0x54
 8018182:	f107 0320 	add.w	r3, r7, #32
 8018186:	4621      	mov	r1, r4
 8018188:	4618      	mov	r0, r3
 801818a:	f7e9 fd04 	bl	8001b96 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801818e:	f107 0354 	add.w	r3, r7, #84	; 0x54
 8018192:	4618      	mov	r0, r3
 8018194:	f00a fb59 	bl	802284a <_ZNSaIcED1Ev>

	std::string full_message = "$" + message + "\nin line: " + line
 8018198:	f107 03b8 	add.w	r3, r7, #184	; 0xb8
 801819c:	687a      	ldr	r2, [r7, #4]
 801819e:	492f      	ldr	r1, [pc, #188]	; (801825c <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x13c>)
 80181a0:	4618      	mov	r0, r3
 80181a2:	f7f5 ffa0 	bl	800e0e6 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>
 80181a6:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 80181aa:	f107 01b8 	add.w	r1, r7, #184	; 0xb8
 80181ae:	4a2c      	ldr	r2, [pc, #176]	; (8018260 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x140>)
 80181b0:	4618      	mov	r0, r3
 80181b2:	f7f5 ffbd 	bl	800e130 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_>
 80181b6:	f107 0388 	add.w	r3, r7, #136	; 0x88
 80181ba:	f107 0238 	add.w	r2, r7, #56	; 0x38
 80181be:	f107 01a0 	add.w	r1, r7, #160	; 0xa0
 80181c2:	4618      	mov	r0, r3
 80181c4:	f000 f89a 	bl	80182fc <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_>
			+ " in position: " + position + "\n";
 80181c8:	f107 0370 	add.w	r3, r7, #112	; 0x70
 80181cc:	f107 0188 	add.w	r1, r7, #136	; 0x88
 80181d0:	4a24      	ldr	r2, [pc, #144]	; (8018264 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x144>)
 80181d2:	4618      	mov	r0, r3
 80181d4:	f7f5 ffac 	bl	800e130 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_>
 80181d8:	f107 0358 	add.w	r3, r7, #88	; 0x58
 80181dc:	f107 0220 	add.w	r2, r7, #32
 80181e0:	f107 0170 	add.w	r1, r7, #112	; 0x70
 80181e4:	4618      	mov	r0, r3
 80181e6:	f000 f889 	bl	80182fc <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_>
 80181ea:	f107 0308 	add.w	r3, r7, #8
 80181ee:	f107 0158 	add.w	r1, r7, #88	; 0x58
 80181f2:	4a1d      	ldr	r2, [pc, #116]	; (8018268 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x148>)
 80181f4:	4618      	mov	r0, r3
 80181f6:	f7f5 ff9b 	bl	800e130 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_>
 80181fa:	f107 0358 	add.w	r3, r7, #88	; 0x58
 80181fe:	4618      	mov	r0, r3
 8018200:	f00a fdb3 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8018204:	f107 0370 	add.w	r3, r7, #112	; 0x70
 8018208:	4618      	mov	r0, r3
 801820a:	f00a fdae 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	std::string full_message = "$" + message + "\nin line: " + line
 801820e:	f107 0388 	add.w	r3, r7, #136	; 0x88
 8018212:	4618      	mov	r0, r3
 8018214:	f00a fda9 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8018218:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 801821c:	4618      	mov	r0, r3
 801821e:	f00a fda4 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8018222:	f107 03b8 	add.w	r3, r7, #184	; 0xb8
 8018226:	4618      	mov	r0, r3
 8018228:	f00a fd9f 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>

	while (1)
	{
		HAL_UART_Transmit(&huart1, (uint8_t*) full_message.c_str(),
 801822c:	f107 0308 	add.w	r3, r7, #8
 8018230:	4618      	mov	r0, r3
 8018232:	f00a ff35 	bl	80230a0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
 8018236:	4604      	mov	r4, r0
				full_message.length(), 100);
 8018238:	f107 0308 	add.w	r3, r7, #8
 801823c:	4618      	mov	r0, r3
 801823e:	f00a fdca 	bl	8022dd6 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
 8018242:	4603      	mov	r3, r0
		HAL_UART_Transmit(&huart1, (uint8_t*) full_message.c_str(),
 8018244:	b29a      	uxth	r2, r3
 8018246:	2364      	movs	r3, #100	; 0x64
 8018248:	4621      	mov	r1, r4
 801824a:	4808      	ldr	r0, [pc, #32]	; (801826c <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x14c>)
 801824c:	f009 f9be 	bl	80215cc <HAL_UART_Transmit>
		HAL_Delay(500);
 8018250:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8018254:	f007 fd3e 	bl	801fcd4 <HAL_Delay>
		HAL_UART_Transmit(&huart1, (uint8_t*) full_message.c_str(),
 8018258:	e7e8      	b.n	801822c <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x10c>
 801825a:	bf00      	nop
 801825c:	08027e10 	.word	0x08027e10
 8018260:	08027e14 	.word	0x08027e14
 8018264:	08027e20 	.word	0x08027e20
 8018268:	08027e30 	.word	0x08027e30
 801826c:	20000654 	.word	0x20000654

08018270 <_ZN11Transmitter15start_listeningEv>:
	}
}

void Transmitter::start_listening()
{
 8018270:	b580      	push	{r7, lr}
 8018272:	af00      	add	r7, sp, #0
	HAL_UART_Receive_IT(&huart1, &rx_buffer, 1);
 8018274:	2201      	movs	r2, #1
 8018276:	4903      	ldr	r1, [pc, #12]	; (8018284 <_ZN11Transmitter15start_listeningEv+0x14>)
 8018278:	4803      	ldr	r0, [pc, #12]	; (8018288 <_ZN11Transmitter15start_listeningEv+0x18>)
 801827a:	f009 fb0a 	bl	8021892 <HAL_UART_Receive_IT>
}
 801827e:	bf00      	nop
 8018280:	bd80      	pop	{r7, pc}
 8018282:	bf00      	nop
 8018284:	2000052c 	.word	0x2000052c
 8018288:	20000654 	.word	0x20000654

0801828c <_ZN11Transmitter17receive_code_charEv>:

char Transmitter::receive_code_char()
{
 801828c:	b580      	push	{r7, lr}
 801828e:	af00      	add	r7, sp, #0
    static uint8_t tx_buffer = 'c';
	HAL_UART_Transmit(&huart1, &tx_buffer, 1, 100);
 8018290:	2364      	movs	r3, #100	; 0x64
 8018292:	2201      	movs	r2, #1
 8018294:	490b      	ldr	r1, [pc, #44]	; (80182c4 <_ZN11Transmitter17receive_code_charEv+0x38>)
 8018296:	480c      	ldr	r0, [pc, #48]	; (80182c8 <_ZN11Transmitter17receive_code_charEv+0x3c>)
 8018298:	f009 f998 	bl	80215cc <HAL_UART_Transmit>
	HAL_UART_Receive(&huart1, &rx_buffer, 1, -1);
 801829c:	f04f 33ff 	mov.w	r3, #4294967295
 80182a0:	2201      	movs	r2, #1
 80182a2:	490a      	ldr	r1, [pc, #40]	; (80182cc <_ZN11Transmitter17receive_code_charEv+0x40>)
 80182a4:	4808      	ldr	r0, [pc, #32]	; (80182c8 <_ZN11Transmitter17receive_code_charEv+0x3c>)
 80182a6:	f009 fa24 	bl	80216f2 <HAL_UART_Receive>

	Position_counter::get_instance().update_position(rx_buffer);
 80182aa:	f7fe f8c1 	bl	8016430 <_ZN16Position_counter12get_instanceEv>
 80182ae:	4602      	mov	r2, r0
 80182b0:	4b06      	ldr	r3, [pc, #24]	; (80182cc <_ZN11Transmitter17receive_code_charEv+0x40>)
 80182b2:	781b      	ldrb	r3, [r3, #0]
 80182b4:	4619      	mov	r1, r3
 80182b6:	4610      	mov	r0, r2
 80182b8:	f7fe f8e2 	bl	8016480 <_ZN16Position_counter15update_positionEh>

	return rx_buffer;
 80182bc:	4b03      	ldr	r3, [pc, #12]	; (80182cc <_ZN11Transmitter17receive_code_charEv+0x40>)
 80182be:	781b      	ldrb	r3, [r3, #0]
}
 80182c0:	4618      	mov	r0, r3
 80182c2:	bd80      	pop	{r7, pc}
 80182c4:	20000000 	.word	0x20000000
 80182c8:	20000654 	.word	0x20000654
 80182cc:	2000052c 	.word	0x2000052c

080182d0 <HAL_UART_RxCpltCallback>:

void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
{
 80182d0:	b580      	push	{r7, lr}
 80182d2:	b082      	sub	sp, #8
 80182d4:	af00      	add	r7, sp, #0
 80182d6:	6078      	str	r0, [r7, #4]
	switch (rx_buffer)
 80182d8:	4b07      	ldr	r3, [pc, #28]	; (80182f8 <HAL_UART_RxCpltCallback+0x28>)
 80182da:	781b      	ldrb	r3, [r3, #0]
 80182dc:	2b65      	cmp	r3, #101	; 0x65
 80182de:	d106      	bne.n	80182ee <HAL_UART_RxCpltCallback+0x1e>
	{
	case 'e':
		Executor::get_instance().abort();
 80182e0:	f7e8 ffe6 	bl	80012b0 <_ZN8Executor12get_instanceEv>
 80182e4:	4603      	mov	r3, r0
 80182e6:	4618      	mov	r0, r3
 80182e8:	f7e9 fb9c 	bl	8001a24 <_ZN8Executor5abortEv>
		break;
 80182ec:	e000      	b.n	80182f0 <HAL_UART_RxCpltCallback+0x20>
	default:
		break;
 80182ee:	bf00      	nop
	}
}
 80182f0:	bf00      	nop
 80182f2:	3708      	adds	r7, #8
 80182f4:	46bd      	mov	sp, r7
 80182f6:	bd80      	pop	{r7, pc}
 80182f8:	2000052c 	.word	0x2000052c

080182fc <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_>:
    operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
 80182fc:	b580      	push	{r7, lr}
 80182fe:	b084      	sub	sp, #16
 8018300:	af00      	add	r7, sp, #0
 8018302:	60f8      	str	r0, [r7, #12]
 8018304:	60b9      	str	r1, [r7, #8]
 8018306:	607a      	str	r2, [r7, #4]
    { return std::move(__lhs.append(__rhs)); }
 8018308:	6879      	ldr	r1, [r7, #4]
 801830a:	68b8      	ldr	r0, [r7, #8]
 801830c:	f00a fe9c 	bl	8023048 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_>
 8018310:	4603      	mov	r3, r0
 8018312:	4618      	mov	r0, r3
 8018314:	f7ef ff38 	bl	8008188 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
 8018318:	4603      	mov	r3, r0
 801831a:	4619      	mov	r1, r3
 801831c:	68f8      	ldr	r0, [r7, #12]
 801831e:	f00a fd0a 	bl	8022d36 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_>
 8018322:	68f8      	ldr	r0, [r7, #12]
 8018324:	3710      	adds	r7, #16
 8018326:	46bd      	mov	sp, r7
 8018328:	bd80      	pop	{r7, pc}
	...

0801832c <_Z41__static_initialization_and_destruction_0ii>:
    if(fin)
    {
    	res = "fin\n";
    }
	HAL_UART_Transmit(&huart1, (uint8_t*)res.c_str(), res.length(), 100);
}
 801832c:	b590      	push	{r4, r7, lr}
 801832e:	b0e7      	sub	sp, #412	; 0x19c
 8018330:	af02      	add	r7, sp, #8
 8018332:	1d3b      	adds	r3, r7, #4
 8018334:	6018      	str	r0, [r3, #0]
 8018336:	463b      	mov	r3, r7
 8018338:	6019      	str	r1, [r3, #0]
 801833a:	1d3b      	adds	r3, r7, #4
 801833c:	681b      	ldr	r3, [r3, #0]
 801833e:	2b01      	cmp	r3, #1
 8018340:	f040 819d 	bne.w	801867e <_Z41__static_initialization_and_destruction_0ii+0x352>
 8018344:	463b      	mov	r3, r7
 8018346:	681b      	ldr	r3, [r3, #0]
 8018348:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801834c:	4293      	cmp	r3, r2
 801834e:	f040 8196 	bne.w	801867e <_Z41__static_initialization_and_destruction_0ii+0x352>
};
 8018352:	f107 0314 	add.w	r3, r7, #20
 8018356:	4618      	mov	r0, r3
 8018358:	2322      	movs	r3, #34	; 0x22
 801835a:	461a      	mov	r2, r3
 801835c:	2100      	movs	r1, #0
 801835e:	f00b ff41 	bl	80241e4 <memset>
 8018362:	f107 0314 	add.w	r3, r7, #20
 8018366:	223a      	movs	r2, #58	; 0x3a
 8018368:	701a      	strb	r2, [r3, #0]
 801836a:	f107 0314 	add.w	r3, r7, #20
 801836e:	2201      	movs	r2, #1
 8018370:	705a      	strb	r2, [r3, #1]
 8018372:	f107 0314 	add.w	r3, r7, #20
 8018376:	220a      	movs	r2, #10
 8018378:	709a      	strb	r2, [r3, #2]
 801837a:	f107 0314 	add.w	r3, r7, #20
 801837e:	220a      	movs	r2, #10
 8018380:	70da      	strb	r2, [r3, #3]
 8018382:	f107 0314 	add.w	r3, r7, #20
 8018386:	222c      	movs	r2, #44	; 0x2c
 8018388:	711a      	strb	r2, [r3, #4]
 801838a:	f107 0314 	add.w	r3, r7, #20
 801838e:	220c      	movs	r2, #12
 8018390:	715a      	strb	r2, [r3, #5]
 8018392:	f107 0314 	add.w	r3, r7, #20
 8018396:	222e      	movs	r2, #46	; 0x2e
 8018398:	719a      	strb	r2, [r3, #6]
 801839a:	f107 0314 	add.w	r3, r7, #20
 801839e:	220b      	movs	r2, #11
 80183a0:	71da      	strb	r2, [r3, #7]
 80183a2:	f107 0314 	add.w	r3, r7, #20
 80183a6:	225b      	movs	r2, #91	; 0x5b
 80183a8:	721a      	strb	r2, [r3, #8]
 80183aa:	f107 0314 	add.w	r3, r7, #20
 80183ae:	220d      	movs	r2, #13
 80183b0:	725a      	strb	r2, [r3, #9]
 80183b2:	f107 0314 	add.w	r3, r7, #20
 80183b6:	225d      	movs	r2, #93	; 0x5d
 80183b8:	729a      	strb	r2, [r3, #10]
 80183ba:	f107 0314 	add.w	r3, r7, #20
 80183be:	220e      	movs	r2, #14
 80183c0:	72da      	strb	r2, [r3, #11]
 80183c2:	f107 0314 	add.w	r3, r7, #20
 80183c6:	227c      	movs	r2, #124	; 0x7c
 80183c8:	731a      	strb	r2, [r3, #12]
 80183ca:	f107 0314 	add.w	r3, r7, #20
 80183ce:	2215      	movs	r2, #21
 80183d0:	735a      	strb	r2, [r3, #13]
 80183d2:	f107 0314 	add.w	r3, r7, #20
 80183d6:	2226      	movs	r2, #38	; 0x26
 80183d8:	739a      	strb	r2, [r3, #14]
 80183da:	f107 0314 	add.w	r3, r7, #20
 80183de:	2216      	movs	r2, #22
 80183e0:	73da      	strb	r2, [r3, #15]
 80183e2:	f107 0314 	add.w	r3, r7, #20
 80183e6:	222b      	movs	r2, #43	; 0x2b
 80183e8:	741a      	strb	r2, [r3, #16]
 80183ea:	f107 0314 	add.w	r3, r7, #20
 80183ee:	221f      	movs	r2, #31
 80183f0:	745a      	strb	r2, [r3, #17]
 80183f2:	f107 0314 	add.w	r3, r7, #20
 80183f6:	222d      	movs	r2, #45	; 0x2d
 80183f8:	749a      	strb	r2, [r3, #18]
 80183fa:	f107 0314 	add.w	r3, r7, #20
 80183fe:	2220      	movs	r2, #32
 8018400:	74da      	strb	r2, [r3, #19]
 8018402:	f107 0314 	add.w	r3, r7, #20
 8018406:	222a      	movs	r2, #42	; 0x2a
 8018408:	751a      	strb	r2, [r3, #20]
 801840a:	f107 0314 	add.w	r3, r7, #20
 801840e:	2221      	movs	r2, #33	; 0x21
 8018410:	755a      	strb	r2, [r3, #21]
 8018412:	f107 0314 	add.w	r3, r7, #20
 8018416:	222f      	movs	r2, #47	; 0x2f
 8018418:	759a      	strb	r2, [r3, #22]
 801841a:	f107 0314 	add.w	r3, r7, #20
 801841e:	2222      	movs	r2, #34	; 0x22
 8018420:	75da      	strb	r2, [r3, #23]
 8018422:	f107 0314 	add.w	r3, r7, #20
 8018426:	225e      	movs	r2, #94	; 0x5e
 8018428:	761a      	strb	r2, [r3, #24]
 801842a:	f107 0314 	add.w	r3, r7, #20
 801842e:	2223      	movs	r2, #35	; 0x23
 8018430:	765a      	strb	r2, [r3, #25]
 8018432:	f107 0314 	add.w	r3, r7, #20
 8018436:	2225      	movs	r2, #37	; 0x25
 8018438:	769a      	strb	r2, [r3, #26]
 801843a:	f107 0314 	add.w	r3, r7, #20
 801843e:	2224      	movs	r2, #36	; 0x24
 8018440:	76da      	strb	r2, [r3, #27]
 8018442:	f107 0314 	add.w	r3, r7, #20
 8018446:	2228      	movs	r2, #40	; 0x28
 8018448:	771a      	strb	r2, [r3, #28]
 801844a:	f107 0314 	add.w	r3, r7, #20
 801844e:	2226      	movs	r2, #38	; 0x26
 8018450:	775a      	strb	r2, [r3, #29]
 8018452:	f107 0314 	add.w	r3, r7, #20
 8018456:	2229      	movs	r2, #41	; 0x29
 8018458:	779a      	strb	r2, [r3, #30]
 801845a:	f107 0314 	add.w	r3, r7, #20
 801845e:	2227      	movs	r2, #39	; 0x27
 8018460:	77da      	strb	r2, [r3, #31]
 8018462:	f107 0314 	add.w	r3, r7, #20
 8018466:	2225      	movs	r2, #37	; 0x25
 8018468:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 801846c:	f107 030c 	add.w	r3, r7, #12
 8018470:	f107 0214 	add.w	r2, r7, #20
 8018474:	601a      	str	r2, [r3, #0]
 8018476:	f107 030c 	add.w	r3, r7, #12
 801847a:	2211      	movs	r2, #17
 801847c:	605a      	str	r2, [r3, #4]
 801847e:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8018482:	4618      	mov	r0, r3
 8018484:	f7e9 fb34 	bl	8001af0 <_ZNSaISt4pairIKc10token_typeEEC1Ev>
 8018488:	f107 0138 	add.w	r1, r7, #56	; 0x38
 801848c:	f107 020c 	add.w	r2, r7, #12
 8018490:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8018494:	9300      	str	r3, [sp, #0]
 8018496:	460b      	mov	r3, r1
 8018498:	ca06      	ldmia	r2, {r1, r2}
 801849a:	4885      	ldr	r0, [pc, #532]	; (80186b0 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 801849c:	f7e9 fb40 	bl	8001b20 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 80184a0:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 80184a4:	4618      	mov	r0, r3
 80184a6:	f7e9 fb2f 	bl	8001b08 <_ZNSaISt4pairIKc10token_typeEED1Ev>
	{"true", TOKEN_TRUE},
 80184aa:	2305      	movs	r3, #5
 80184ac:	f887 3162 	strb.w	r3, [r7, #354]	; 0x162
};
 80184b0:	f507 72b1 	add.w	r2, r7, #354	; 0x162
 80184b4:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80184b8:	497e      	ldr	r1, [pc, #504]	; (80186b4 <_Z41__static_initialization_and_destruction_0ii+0x388>)
 80184ba:	4618      	mov	r0, r3
 80184bc:	f7e8 fe1c 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"false", TOKEN_FALSE},
 80184c0:	2306      	movs	r3, #6
 80184c2:	f887 3163 	strb.w	r3, [r7, #355]	; 0x163
};
 80184c6:	f207 1263 	addw	r2, r7, #355	; 0x163
 80184ca:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80184ce:	331c      	adds	r3, #28
 80184d0:	4979      	ldr	r1, [pc, #484]	; (80186b8 <_Z41__static_initialization_and_destruction_0ii+0x38c>)
 80184d2:	4618      	mov	r0, r3
 80184d4:	f7e8 fe38 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"setup", TOKEN_SETUP},
 80184d8:	2307      	movs	r3, #7
 80184da:	f887 3164 	strb.w	r3, [r7, #356]	; 0x164
};
 80184de:	f507 72b2 	add.w	r2, r7, #356	; 0x164
 80184e2:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80184e6:	3338      	adds	r3, #56	; 0x38
 80184e8:	4974      	ldr	r1, [pc, #464]	; (80186bc <_Z41__static_initialization_and_destruction_0ii+0x390>)
 80184ea:	4618      	mov	r0, r3
 80184ec:	f7e8 fe2c 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"loop", TOKEN_LOOP},
 80184f0:	2308      	movs	r3, #8
 80184f2:	f887 3165 	strb.w	r3, [r7, #357]	; 0x165
};
 80184f6:	f207 1265 	addw	r2, r7, #357	; 0x165
 80184fa:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80184fe:	3354      	adds	r3, #84	; 0x54
 8018500:	496f      	ldr	r1, [pc, #444]	; (80186c0 <_Z41__static_initialization_and_destruction_0ii+0x394>)
 8018502:	4618      	mov	r0, r3
 8018504:	f7e8 fdf8 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"finish", TOKEN_FINISH},
 8018508:	2309      	movs	r3, #9
 801850a:	f887 3166 	strb.w	r3, [r7, #358]	; 0x166
};
 801850e:	f507 72b3 	add.w	r2, r7, #358	; 0x166
 8018512:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8018516:	3370      	adds	r3, #112	; 0x70
 8018518:	496a      	ldr	r1, [pc, #424]	; (80186c4 <_Z41__static_initialization_and_destruction_0ii+0x398>)
 801851a:	4618      	mov	r0, r3
 801851c:	f7e8 fe3c 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"if", TOKEN_IF},
 8018520:	2310      	movs	r3, #16
 8018522:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167
};
 8018526:	f207 1267 	addw	r2, r7, #359	; 0x167
 801852a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801852e:	338c      	adds	r3, #140	; 0x8c
 8018530:	4965      	ldr	r1, [pc, #404]	; (80186c8 <_Z41__static_initialization_and_destruction_0ii+0x39c>)
 8018532:	4618      	mov	r0, r3
 8018534:	f7e8 fe58 	bl	80011e8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>
	{"elseif", TOKEN_ELSEIF},
 8018538:	2311      	movs	r3, #17
 801853a:	f887 3168 	strb.w	r3, [r7, #360]	; 0x168
};
 801853e:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 8018542:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8018546:	33a8      	adds	r3, #168	; 0xa8
 8018548:	4960      	ldr	r1, [pc, #384]	; (80186cc <_Z41__static_initialization_and_destruction_0ii+0x3a0>)
 801854a:	4618      	mov	r0, r3
 801854c:	f7e8 fe24 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"else", TOKEN_ELSE},
 8018550:	2312      	movs	r3, #18
 8018552:	f887 3169 	strb.w	r3, [r7, #361]	; 0x169
};
 8018556:	f207 1269 	addw	r2, r7, #361	; 0x169
 801855a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801855e:	33c4      	adds	r3, #196	; 0xc4
 8018560:	495b      	ldr	r1, [pc, #364]	; (80186d0 <_Z41__static_initialization_and_destruction_0ii+0x3a4>)
 8018562:	4618      	mov	r0, r3
 8018564:	f7e8 fdc8 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"while", TOKEN_WHILE},
 8018568:	2313      	movs	r3, #19
 801856a:	f887 316a 	strb.w	r3, [r7, #362]	; 0x16a
};
 801856e:	f507 72b5 	add.w	r2, r7, #362	; 0x16a
 8018572:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8018576:	33e0      	adds	r3, #224	; 0xe0
 8018578:	4956      	ldr	r1, [pc, #344]	; (80186d4 <_Z41__static_initialization_and_destruction_0ii+0x3a8>)
 801857a:	4618      	mov	r0, r3
 801857c:	f7e8 fde4 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"end", TOKEN_END},
 8018580:	2314      	movs	r3, #20
 8018582:	f887 316b 	strb.w	r3, [r7, #363]	; 0x16b
};
 8018586:	f207 126b 	addw	r2, r7, #363	; 0x16b
 801858a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801858e:	33fc      	adds	r3, #252	; 0xfc
 8018590:	4951      	ldr	r1, [pc, #324]	; (80186d8 <_Z41__static_initialization_and_destruction_0ii+0x3ac>)
 8018592:	4618      	mov	r0, r3
 8018594:	f7e8 fe50 	bl	8001238 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>
 8018598:	f107 0340 	add.w	r3, r7, #64	; 0x40
 801859c:	f107 0248 	add.w	r2, r7, #72	; 0x48
 80185a0:	601a      	str	r2, [r3, #0]
 80185a2:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80185a6:	220a      	movs	r2, #10
 80185a8:	605a      	str	r2, [r3, #4]
 80185aa:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 80185ae:	4618      	mov	r0, r3
 80185b0:	f7e9 fb43 	bl	8001c3a <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 80185b4:	f507 71b6 	add.w	r1, r7, #364	; 0x16c
 80185b8:	f107 0240 	add.w	r2, r7, #64	; 0x40
 80185bc:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 80185c0:	9300      	str	r3, [sp, #0]
 80185c2:	460b      	mov	r3, r1
 80185c4:	ca06      	ldmia	r2, {r1, r2}
 80185c6:	4845      	ldr	r0, [pc, #276]	; (80186dc <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 80185c8:	f7e9 fb4f 	bl	8001c6a <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>
 80185cc:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 80185d0:	4618      	mov	r0, r3
 80185d2:	f7e9 fb3e 	bl	8001c52 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 80185d6:	f107 0448 	add.w	r4, r7, #72	; 0x48
 80185da:	f504 748c 	add.w	r4, r4, #280	; 0x118
 80185de:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80185e2:	429c      	cmp	r4, r3
 80185e4:	d004      	beq.n	80185f0 <_Z41__static_initialization_and_destruction_0ii+0x2c4>
 80185e6:	3c1c      	subs	r4, #28
 80185e8:	4620      	mov	r0, r4
 80185ea:	f7e8 fd78 	bl	80010de <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 80185ee:	e7f6      	b.n	80185de <_Z41__static_initialization_and_destruction_0ii+0x2b2>
};
 80185f0:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 80185f4:	2200      	movs	r2, #0
 80185f6:	601a      	str	r2, [r3, #0]
 80185f8:	605a      	str	r2, [r3, #4]
 80185fa:	609a      	str	r2, [r3, #8]
 80185fc:	233c      	movs	r3, #60	; 0x3c
 80185fe:	f887 317c 	strb.w	r3, [r7, #380]	; 0x17c
 8018602:	231b      	movs	r3, #27
 8018604:	f887 317d 	strb.w	r3, [r7, #381]	; 0x17d
 8018608:	231c      	movs	r3, #28
 801860a:	f887 317e 	strb.w	r3, [r7, #382]	; 0x17e
 801860e:	233e      	movs	r3, #62	; 0x3e
 8018610:	f887 317f 	strb.w	r3, [r7, #383]	; 0x17f
 8018614:	2319      	movs	r3, #25
 8018616:	f887 3180 	strb.w	r3, [r7, #384]	; 0x180
 801861a:	231a      	movs	r3, #26
 801861c:	f887 3181 	strb.w	r3, [r7, #385]	; 0x181
 8018620:	233d      	movs	r3, #61	; 0x3d
 8018622:	f887 3182 	strb.w	r3, [r7, #386]	; 0x182
 8018626:	2318      	movs	r3, #24
 8018628:	f887 3183 	strb.w	r3, [r7, #387]	; 0x183
 801862c:	231d      	movs	r3, #29
 801862e:	f887 3184 	strb.w	r3, [r7, #388]	; 0x184
 8018632:	2321      	movs	r3, #33	; 0x21
 8018634:	f887 3185 	strb.w	r3, [r7, #389]	; 0x185
 8018638:	2317      	movs	r3, #23
 801863a:	f887 3186 	strb.w	r3, [r7, #390]	; 0x186
 801863e:	231e      	movs	r3, #30
 8018640:	f887 3187 	strb.w	r3, [r7, #391]	; 0x187
 8018644:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 8018648:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 801864c:	2304      	movs	r3, #4
 801864e:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 8018652:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 8018656:	4618      	mov	r0, r3
 8018658:	f7e9 fb37 	bl	8001cca <_ZNSaISt4pairIKc12double_tokenEEC1Ev>
 801865c:	f507 72c4 	add.w	r2, r7, #392	; 0x188
 8018660:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 8018664:	9300      	str	r3, [sp, #0]
 8018666:	4613      	mov	r3, r2
 8018668:	f507 72ba 	add.w	r2, r7, #372	; 0x174
 801866c:	ca06      	ldmia	r2, {r1, r2}
 801866e:	481c      	ldr	r0, [pc, #112]	; (80186e0 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 8018670:	f7e9 fb43 	bl	8001cfa <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 8018674:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 8018678:	4618      	mov	r0, r3
 801867a:	f7e9 fb32 	bl	8001ce2 <_ZNSaISt4pairIKc12double_tokenEED1Ev>
static const std::map<char, double_token> token_double_chars
 801867e:	1d3b      	adds	r3, r7, #4
 8018680:	681b      	ldr	r3, [r3, #0]
 8018682:	2b00      	cmp	r3, #0
 8018684:	d10e      	bne.n	80186a4 <_Z41__static_initialization_and_destruction_0ii+0x378>
 8018686:	463b      	mov	r3, r7
 8018688:	681b      	ldr	r3, [r3, #0]
 801868a:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801868e:	4293      	cmp	r3, r2
 8018690:	d108      	bne.n	80186a4 <_Z41__static_initialization_and_destruction_0ii+0x378>
 8018692:	4813      	ldr	r0, [pc, #76]	; (80186e0 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 8018694:	f7f0 ffc3 	bl	800961e <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>
static const std::map<std::string, token_type> token_strings
 8018698:	4810      	ldr	r0, [pc, #64]	; (80186dc <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 801869a:	f7f0 ffcd 	bl	8009638 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
static const std::map<char, token_type> token_chars
 801869e:	4804      	ldr	r0, [pc, #16]	; (80186b0 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 80186a0:	f7f0 ffd7 	bl	8009652 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>
 80186a4:	bf00      	nop
 80186a6:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 80186aa:	46bd      	mov	sp, r7
 80186ac:	bd90      	pop	{r4, r7, pc}
 80186ae:	bf00      	nop
 80186b0:	200004e4 	.word	0x200004e4
 80186b4:	08027e88 	.word	0x08027e88
 80186b8:	08027e90 	.word	0x08027e90
 80186bc:	08027e98 	.word	0x08027e98
 80186c0:	08027ea0 	.word	0x08027ea0
 80186c4:	08027ea8 	.word	0x08027ea8
 80186c8:	08027eb0 	.word	0x08027eb0
 80186cc:	08027eb4 	.word	0x08027eb4
 80186d0:	08027ebc 	.word	0x08027ebc
 80186d4:	08027ec4 	.word	0x08027ec4
 80186d8:	08027ecc 	.word	0x08027ecc
 80186dc:	200004fc 	.word	0x200004fc
 80186e0:	20000514 	.word	0x20000514

080186e4 <_GLOBAL__sub_I__ZN11Transmitter13get_rx_bufferEv>:
 80186e4:	b580      	push	{r7, lr}
 80186e6:	af00      	add	r7, sp, #0
 80186e8:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80186ec:	2001      	movs	r0, #1
 80186ee:	f7ff fe1d 	bl	801832c <_Z41__static_initialization_and_destruction_0ii>
 80186f2:	bd80      	pop	{r7, pc}

080186f4 <_GLOBAL__sub_D__ZN11Transmitter13get_rx_bufferEv>:
 80186f4:	b580      	push	{r7, lr}
 80186f6:	af00      	add	r7, sp, #0
 80186f8:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80186fc:	2000      	movs	r0, #0
 80186fe:	f7ff fe15 	bl	801832c <_Z41__static_initialization_and_destruction_0ii>
 8018702:	bd80      	pop	{r7, pc}

08018704 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>:
      ~map() = default;
 8018704:	b580      	push	{r7, lr}
 8018706:	b082      	sub	sp, #8
 8018708:	af00      	add	r7, sp, #0
 801870a:	6078      	str	r0, [r7, #4]
 801870c:	687b      	ldr	r3, [r7, #4]
 801870e:	4618      	mov	r0, r3
 8018710:	f000 f958 	bl	80189c4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EED1Ev>
 8018714:	687b      	ldr	r3, [r7, #4]
 8018716:	4618      	mov	r0, r3
 8018718:	3708      	adds	r7, #8
 801871a:	46bd      	mov	sp, r7
 801871c:	bd80      	pop	{r7, pc}

0801871e <_ZN16Variable_handlerD1Ev>:
#define ADD_ARG(x) Arg.insert({#x, {}});
#define ARG(x) Variable_handler::get_instance().get_arg(#x)
#define ADD_PAR(x) Par.insert({#x, {}});
#define PAR(x) Variable_handler::get_instance().get_par(#x)

class Variable_handler
 801871e:	b580      	push	{r7, lr}
 8018720:	b082      	sub	sp, #8
 8018722:	af00      	add	r7, sp, #0
 8018724:	6078      	str	r0, [r7, #4]
 8018726:	687b      	ldr	r3, [r7, #4]
 8018728:	3330      	adds	r3, #48	; 0x30
 801872a:	4618      	mov	r0, r3
 801872c:	f7ff ffea 	bl	8018704 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
 8018730:	687b      	ldr	r3, [r7, #4]
 8018732:	3318      	adds	r3, #24
 8018734:	4618      	mov	r0, r3
 8018736:	f7ff ffe5 	bl	8018704 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
 801873a:	687b      	ldr	r3, [r7, #4]
 801873c:	4618      	mov	r0, r3
 801873e:	f7ff ffe1 	bl	8018704 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
 8018742:	687b      	ldr	r3, [r7, #4]
 8018744:	4618      	mov	r0, r3
 8018746:	3708      	adds	r7, #8
 8018748:	46bd      	mov	sp, r7
 801874a:	bd80      	pop	{r7, pc}

0801874c <__tcf_0>:
#include <Variable_handler.h>

Variable_handler& Variable_handler::get_instance()
{
	static Variable_handler instance;
 801874c:	b580      	push	{r7, lr}
 801874e:	af00      	add	r7, sp, #0
 8018750:	4801      	ldr	r0, [pc, #4]	; (8018758 <__tcf_0+0xc>)
 8018752:	f7ff ffe4 	bl	801871e <_ZN16Variable_handlerD1Ev>
 8018756:	bd80      	pop	{r7, pc}
 8018758:	20000578 	.word	0x20000578

0801875c <_ZN16Variable_handler12get_instanceEv>:
{
 801875c:	b580      	push	{r7, lr}
 801875e:	af00      	add	r7, sp, #0
	static Variable_handler instance;
 8018760:	4b12      	ldr	r3, [pc, #72]	; (80187ac <_ZN16Variable_handler12get_instanceEv+0x50>)
 8018762:	781b      	ldrb	r3, [r3, #0]
 8018764:	f3bf 8f5b 	dmb	ish
 8018768:	b2db      	uxtb	r3, r3
 801876a:	f003 0301 	and.w	r3, r3, #1
 801876e:	2b00      	cmp	r3, #0
 8018770:	bf0c      	ite	eq
 8018772:	2301      	moveq	r3, #1
 8018774:	2300      	movne	r3, #0
 8018776:	b2db      	uxtb	r3, r3
 8018778:	2b00      	cmp	r3, #0
 801877a:	d013      	beq.n	80187a4 <_ZN16Variable_handler12get_instanceEv+0x48>
 801877c:	480b      	ldr	r0, [pc, #44]	; (80187ac <_ZN16Variable_handler12get_instanceEv+0x50>)
 801877e:	f00a f843 	bl	8022808 <__cxa_guard_acquire>
 8018782:	4603      	mov	r3, r0
 8018784:	2b00      	cmp	r3, #0
 8018786:	bf14      	ite	ne
 8018788:	2301      	movne	r3, #1
 801878a:	2300      	moveq	r3, #0
 801878c:	b2db      	uxtb	r3, r3
 801878e:	2b00      	cmp	r3, #0
 8018790:	d008      	beq.n	80187a4 <_ZN16Variable_handler12get_instanceEv+0x48>
 8018792:	4807      	ldr	r0, [pc, #28]	; (80187b0 <_ZN16Variable_handler12get_instanceEv+0x54>)
 8018794:	f006 f9de 	bl	801eb54 <_ZN16Variable_handlerC1Ev>
 8018798:	4804      	ldr	r0, [pc, #16]	; (80187ac <_ZN16Variable_handler12get_instanceEv+0x50>)
 801879a:	f00a f841 	bl	8022820 <__cxa_guard_release>
 801879e:	4805      	ldr	r0, [pc, #20]	; (80187b4 <_ZN16Variable_handler12get_instanceEv+0x58>)
 80187a0:	f00b fc77 	bl	8024092 <atexit>
	return instance;
 80187a4:	4b02      	ldr	r3, [pc, #8]	; (80187b0 <_ZN16Variable_handler12get_instanceEv+0x54>)
}
 80187a6:	4618      	mov	r0, r3
 80187a8:	bd80      	pop	{r7, pc}
 80187aa:	bf00      	nop
 80187ac:	200005c0 	.word	0x200005c0
 80187b0:	20000578 	.word	0x20000578
 80187b4:	0801874d 	.word	0x0801874d

080187b8 <_ZN16Variable_handler7get_argENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

Symbol& Variable_handler::get_arg(std::string name)
{
 80187b8:	b580      	push	{r7, lr}
 80187ba:	b090      	sub	sp, #64	; 0x40
 80187bc:	af00      	add	r7, sp, #0
 80187be:	6078      	str	r0, [r7, #4]
 80187c0:	6039      	str	r1, [r7, #0]
	auto search = Arg.find(name);
 80187c2:	687b      	ldr	r3, [r7, #4]
 80187c4:	3330      	adds	r3, #48	; 0x30
 80187c6:	6839      	ldr	r1, [r7, #0]
 80187c8:	4618      	mov	r0, r3
 80187ca:	f000 f910 	bl	80189ee <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE4findERSA_>
 80187ce:	4603      	mov	r3, r0
 80187d0:	60bb      	str	r3, [r7, #8]
	if(search == Arg.end())
 80187d2:	687b      	ldr	r3, [r7, #4]
 80187d4:	3330      	adds	r3, #48	; 0x30
 80187d6:	4618      	mov	r0, r3
 80187d8:	f000 f918 	bl	8018a0c <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE3endEv>
 80187dc:	4603      	mov	r3, r0
 80187de:	60fb      	str	r3, [r7, #12]
 80187e0:	f107 020c 	add.w	r2, r7, #12
 80187e4:	f107 0308 	add.w	r3, r7, #8
 80187e8:	4611      	mov	r1, r2
 80187ea:	4618      	mov	r0, r3
 80187ec:	f000 f91b 	bl	8018a26 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEESC_>
 80187f0:	4603      	mov	r3, r0
 80187f2:	2b00      	cmp	r3, #0
 80187f4:	d01d      	beq.n	8018832 <_ZN16Variable_handler7get_argENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x7a>
	{
		Transmitter::report_error(std::string("Arg " + name + " not found"));
 80187f6:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80187fa:	683a      	ldr	r2, [r7, #0]
 80187fc:	4912      	ldr	r1, [pc, #72]	; (8018848 <_ZN16Variable_handler7get_argENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x90>)
 80187fe:	4618      	mov	r0, r3
 8018800:	f7f5 fc71 	bl	800e0e6 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>
 8018804:	f107 0310 	add.w	r3, r7, #16
 8018808:	f107 0128 	add.w	r1, r7, #40	; 0x28
 801880c:	4a0f      	ldr	r2, [pc, #60]	; (801884c <_ZN16Variable_handler7get_argENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x94>)
 801880e:	4618      	mov	r0, r3
 8018810:	f7f5 fc8e 	bl	800e130 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_>
 8018814:	f107 0310 	add.w	r3, r7, #16
 8018818:	4618      	mov	r0, r3
 801881a:	f7ff fc81 	bl	8018120 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801881e:	f107 0310 	add.w	r3, r7, #16
 8018822:	4618      	mov	r0, r3
 8018824:	f00a faa1 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8018828:	f107 0328 	add.w	r3, r7, #40	; 0x28
 801882c:	4618      	mov	r0, r3
 801882e:	f00a fa9c 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	}
	return search->second;
 8018832:	f107 0308 	add.w	r3, r7, #8
 8018836:	4618      	mov	r0, r3
 8018838:	f000 f909 	bl	8018a4e <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEptEv>
 801883c:	4603      	mov	r3, r0
 801883e:	3318      	adds	r3, #24
}
 8018840:	4618      	mov	r0, r3
 8018842:	3740      	adds	r7, #64	; 0x40
 8018844:	46bd      	mov	sp, r7
 8018846:	bd80      	pop	{r7, pc}
 8018848:	08027ed0 	.word	0x08027ed0
 801884c:	08027ed8 	.word	0x08027ed8

08018850 <_ZN16Variable_handler7get_parENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

Symbol& Variable_handler::get_par(std::string name)
{
 8018850:	b580      	push	{r7, lr}
 8018852:	b090      	sub	sp, #64	; 0x40
 8018854:	af00      	add	r7, sp, #0
 8018856:	6078      	str	r0, [r7, #4]
 8018858:	6039      	str	r1, [r7, #0]
	auto search = Par.find(name);
 801885a:	687b      	ldr	r3, [r7, #4]
 801885c:	3318      	adds	r3, #24
 801885e:	6839      	ldr	r1, [r7, #0]
 8018860:	4618      	mov	r0, r3
 8018862:	f000 f8c4 	bl	80189ee <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE4findERSA_>
 8018866:	4603      	mov	r3, r0
 8018868:	60bb      	str	r3, [r7, #8]
	if(search == Par.end())
 801886a:	687b      	ldr	r3, [r7, #4]
 801886c:	3318      	adds	r3, #24
 801886e:	4618      	mov	r0, r3
 8018870:	f000 f8cc 	bl	8018a0c <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE3endEv>
 8018874:	4603      	mov	r3, r0
 8018876:	60fb      	str	r3, [r7, #12]
 8018878:	f107 020c 	add.w	r2, r7, #12
 801887c:	f107 0308 	add.w	r3, r7, #8
 8018880:	4611      	mov	r1, r2
 8018882:	4618      	mov	r0, r3
 8018884:	f000 f8cf 	bl	8018a26 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEESC_>
 8018888:	4603      	mov	r3, r0
 801888a:	2b00      	cmp	r3, #0
 801888c:	d01d      	beq.n	80188ca <_ZN16Variable_handler7get_parENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x7a>
	{
		Transmitter::report_error(std::string("Par " + name + " not found"));
 801888e:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8018892:	683a      	ldr	r2, [r7, #0]
 8018894:	4912      	ldr	r1, [pc, #72]	; (80188e0 <_ZN16Variable_handler7get_parENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x90>)
 8018896:	4618      	mov	r0, r3
 8018898:	f7f5 fc25 	bl	800e0e6 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>
 801889c:	f107 0310 	add.w	r3, r7, #16
 80188a0:	f107 0128 	add.w	r1, r7, #40	; 0x28
 80188a4:	4a0f      	ldr	r2, [pc, #60]	; (80188e4 <_ZN16Variable_handler7get_parENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x94>)
 80188a6:	4618      	mov	r0, r3
 80188a8:	f7f5 fc42 	bl	800e130 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_>
 80188ac:	f107 0310 	add.w	r3, r7, #16
 80188b0:	4618      	mov	r0, r3
 80188b2:	f7ff fc35 	bl	8018120 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 80188b6:	f107 0310 	add.w	r3, r7, #16
 80188ba:	4618      	mov	r0, r3
 80188bc:	f00a fa55 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80188c0:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80188c4:	4618      	mov	r0, r3
 80188c6:	f00a fa50 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	}
	return search->second;
 80188ca:	f107 0308 	add.w	r3, r7, #8
 80188ce:	4618      	mov	r0, r3
 80188d0:	f000 f8bd 	bl	8018a4e <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEptEv>
 80188d4:	4603      	mov	r3, r0
 80188d6:	3318      	adds	r3, #24
}
 80188d8:	4618      	mov	r0, r3
 80188da:	3740      	adds	r7, #64	; 0x40
 80188dc:	46bd      	mov	sp, r7
 80188de:	bd80      	pop	{r7, pc}
 80188e0:	08027ee4 	.word	0x08027ee4
 80188e4:	08027ed8 	.word	0x08027ed8

080188e8 <_ZN16Variable_handler9get_localENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

Symbol& Variable_handler::get_local(std::string name)
{
 80188e8:	b580      	push	{r7, lr}
 80188ea:	b082      	sub	sp, #8
 80188ec:	af00      	add	r7, sp, #0
 80188ee:	6078      	str	r0, [r7, #4]
 80188f0:	6039      	str	r1, [r7, #0]
	return local[name];
 80188f2:	687b      	ldr	r3, [r7, #4]
 80188f4:	6839      	ldr	r1, [r7, #0]
 80188f6:	4618      	mov	r0, r3
 80188f8:	f000 f8b8 	bl	8018a6c <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEEixERSA_>
 80188fc:	4603      	mov	r3, r0
}
 80188fe:	4618      	mov	r0, r3
 8018900:	3708      	adds	r7, #8
 8018902:	46bd      	mov	sp, r7
 8018904:	bd80      	pop	{r7, pc}

08018906 <_ZN16Variable_handler10get_symbolE8Variable>:

Symbol& Variable_handler::get_symbol(Variable var)
{
 8018906:	b590      	push	{r4, r7, lr}
 8018908:	b095      	sub	sp, #84	; 0x54
 801890a:	af00      	add	r7, sp, #0
 801890c:	6078      	str	r0, [r7, #4]
 801890e:	6039      	str	r1, [r7, #0]
	switch(var.type)
 8018910:	683b      	ldr	r3, [r7, #0]
 8018912:	781b      	ldrb	r3, [r3, #0]
 8018914:	2b02      	cmp	r3, #2
 8018916:	d01a      	beq.n	801894e <_ZN16Variable_handler10get_symbolE8Variable+0x48>
 8018918:	2b02      	cmp	r3, #2
 801891a:	dc2e      	bgt.n	801897a <_ZN16Variable_handler10get_symbolE8Variable+0x74>
 801891c:	2b00      	cmp	r3, #0
 801891e:	d02b      	beq.n	8018978 <_ZN16Variable_handler10get_symbolE8Variable+0x72>
 8018920:	2b01      	cmp	r3, #1
 8018922:	d12a      	bne.n	801897a <_ZN16Variable_handler10get_symbolE8Variable+0x74>
	{
	case VARIABLE_ARG:
		return get_arg(var.id);
 8018924:	683b      	ldr	r3, [r7, #0]
 8018926:	1d1a      	adds	r2, r3, #4
 8018928:	f107 0308 	add.w	r3, r7, #8
 801892c:	4611      	mov	r1, r2
 801892e:	4618      	mov	r0, r3
 8018930:	f00a fbdc 	bl	80230ec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 8018934:	f107 0308 	add.w	r3, r7, #8
 8018938:	4619      	mov	r1, r3
 801893a:	6878      	ldr	r0, [r7, #4]
 801893c:	f7ff ff3c 	bl	80187b8 <_ZN16Variable_handler7get_argENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8018940:	4604      	mov	r4, r0
 8018942:	f107 0308 	add.w	r3, r7, #8
 8018946:	4618      	mov	r0, r3
 8018948:	f00a fa0f 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801894c:	e029      	b.n	80189a2 <_ZN16Variable_handler10get_symbolE8Variable+0x9c>
	case VARIABLE_PAR:
		return get_par(var.id);
 801894e:	683b      	ldr	r3, [r7, #0]
 8018950:	1d1a      	adds	r2, r3, #4
 8018952:	f107 0320 	add.w	r3, r7, #32
 8018956:	4611      	mov	r1, r2
 8018958:	4618      	mov	r0, r3
 801895a:	f00a fbc7 	bl	80230ec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 801895e:	f107 0320 	add.w	r3, r7, #32
 8018962:	4619      	mov	r1, r3
 8018964:	6878      	ldr	r0, [r7, #4]
 8018966:	f7ff ff73 	bl	8018850 <_ZN16Variable_handler7get_parENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801896a:	4604      	mov	r4, r0
 801896c:	f107 0320 	add.w	r3, r7, #32
 8018970:	4618      	mov	r0, r3
 8018972:	f00a f9fa 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8018976:	e014      	b.n	80189a2 <_ZN16Variable_handler10get_symbolE8Variable+0x9c>
	case VARIABLE_LOCAL:
		break;
 8018978:	bf00      	nop
	}
	return get_local(var.id);
 801897a:	683b      	ldr	r3, [r7, #0]
 801897c:	1d1a      	adds	r2, r3, #4
 801897e:	f107 0338 	add.w	r3, r7, #56	; 0x38
 8018982:	4611      	mov	r1, r2
 8018984:	4618      	mov	r0, r3
 8018986:	f00a fbb1 	bl	80230ec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 801898a:	f107 0338 	add.w	r3, r7, #56	; 0x38
 801898e:	4619      	mov	r1, r3
 8018990:	6878      	ldr	r0, [r7, #4]
 8018992:	f7ff ffa9 	bl	80188e8 <_ZN16Variable_handler9get_localENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8018996:	4604      	mov	r4, r0
 8018998:	f107 0338 	add.w	r3, r7, #56	; 0x38
 801899c:	4618      	mov	r0, r3
 801899e:	f00a f9e4 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80189a2:	4623      	mov	r3, r4
}
 80189a4:	4618      	mov	r0, r3
 80189a6:	3754      	adds	r7, #84	; 0x54
 80189a8:	46bd      	mov	sp, r7
 80189aa:	bd90      	pop	{r4, r7, pc}

080189ac <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE13_Rb_tree_implISD_Lb1EED1Ev>:
	struct _Rb_tree_impl
 80189ac:	b580      	push	{r7, lr}
 80189ae:	b082      	sub	sp, #8
 80189b0:	af00      	add	r7, sp, #0
 80189b2:	6078      	str	r0, [r7, #4]
 80189b4:	6878      	ldr	r0, [r7, #4]
 80189b6:	f000 f8b5 	bl	8018b24 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEED1Ev>
 80189ba:	687b      	ldr	r3, [r7, #4]
 80189bc:	4618      	mov	r0, r3
 80189be:	3708      	adds	r7, #8
 80189c0:	46bd      	mov	sp, r7
 80189c2:	bd80      	pop	{r7, pc}

080189c4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EED1Ev>:
      ~_Rb_tree() _GLIBCXX_NOEXCEPT
 80189c4:	b580      	push	{r7, lr}
 80189c6:	b082      	sub	sp, #8
 80189c8:	af00      	add	r7, sp, #0
 80189ca:	6078      	str	r0, [r7, #4]
      { _M_erase(_M_begin()); }
 80189cc:	6878      	ldr	r0, [r7, #4]
 80189ce:	f000 f8d4 	bl	8018b7a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_beginEv>
 80189d2:	4603      	mov	r3, r0
 80189d4:	4619      	mov	r1, r3
 80189d6:	6878      	ldr	r0, [r7, #4]
 80189d8:	f000 f8b0 	bl	8018b3c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_eraseEPSt13_Rb_tree_nodeIS9_E>
 80189dc:	687b      	ldr	r3, [r7, #4]
 80189de:	4618      	mov	r0, r3
 80189e0:	f7ff ffe4 	bl	80189ac <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE13_Rb_tree_implISD_Lb1EED1Ev>
 80189e4:	687b      	ldr	r3, [r7, #4]
 80189e6:	4618      	mov	r0, r3
 80189e8:	3708      	adds	r7, #8
 80189ea:	46bd      	mov	sp, r7
 80189ec:	bd80      	pop	{r7, pc}

080189ee <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE4findERSA_>:
      find(const key_type& __x)
 80189ee:	b580      	push	{r7, lr}
 80189f0:	b082      	sub	sp, #8
 80189f2:	af00      	add	r7, sp, #0
 80189f4:	6078      	str	r0, [r7, #4]
 80189f6:	6039      	str	r1, [r7, #0]
      { return _M_t.find(__x); }
 80189f8:	687b      	ldr	r3, [r7, #4]
 80189fa:	6839      	ldr	r1, [r7, #0]
 80189fc:	4618      	mov	r0, r3
 80189fe:	f000 f8c8 	bl	8018b92 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE4findERS7_>
 8018a02:	4603      	mov	r3, r0
 8018a04:	4618      	mov	r0, r3
 8018a06:	3708      	adds	r7, #8
 8018a08:	46bd      	mov	sp, r7
 8018a0a:	bd80      	pop	{r7, pc}

08018a0c <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 8018a0c:	b580      	push	{r7, lr}
 8018a0e:	b082      	sub	sp, #8
 8018a10:	af00      	add	r7, sp, #0
 8018a12:	6078      	str	r0, [r7, #4]
      { return _M_t.end(); }
 8018a14:	687b      	ldr	r3, [r7, #4]
 8018a16:	4618      	mov	r0, r3
 8018a18:	f000 f8f7 	bl	8018c0a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE3endEv>
 8018a1c:	4603      	mov	r3, r0
 8018a1e:	4618      	mov	r0, r3
 8018a20:	3708      	adds	r7, #8
 8018a22:	46bd      	mov	sp, r7
 8018a24:	bd80      	pop	{r7, pc}

08018a26 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEESC_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 8018a26:	b480      	push	{r7}
 8018a28:	b083      	sub	sp, #12
 8018a2a:	af00      	add	r7, sp, #0
 8018a2c:	6078      	str	r0, [r7, #4]
 8018a2e:	6039      	str	r1, [r7, #0]
      { return __x._M_node == __y._M_node; }
 8018a30:	687b      	ldr	r3, [r7, #4]
 8018a32:	681a      	ldr	r2, [r3, #0]
 8018a34:	683b      	ldr	r3, [r7, #0]
 8018a36:	681b      	ldr	r3, [r3, #0]
 8018a38:	429a      	cmp	r2, r3
 8018a3a:	bf0c      	ite	eq
 8018a3c:	2301      	moveq	r3, #1
 8018a3e:	2300      	movne	r3, #0
 8018a40:	b2db      	uxtb	r3, r3
 8018a42:	4618      	mov	r0, r3
 8018a44:	370c      	adds	r7, #12
 8018a46:	46bd      	mov	sp, r7
 8018a48:	f85d 7b04 	ldr.w	r7, [sp], #4
 8018a4c:	4770      	bx	lr

08018a4e <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEptEv>:
      operator->() const _GLIBCXX_NOEXCEPT
 8018a4e:	b580      	push	{r7, lr}
 8018a50:	b082      	sub	sp, #8
 8018a52:	af00      	add	r7, sp, #0
 8018a54:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type> (_M_node)->_M_valptr(); }
 8018a56:	687b      	ldr	r3, [r7, #4]
 8018a58:	681b      	ldr	r3, [r3, #0]
 8018a5a:	4618      	mov	r0, r3
 8018a5c:	f000 f8e6 	bl	8018c2c <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE9_M_valptrEv>
 8018a60:	4603      	mov	r3, r0
 8018a62:	4618      	mov	r0, r3
 8018a64:	3708      	adds	r7, #8
 8018a66:	46bd      	mov	sp, r7
 8018a68:	bd80      	pop	{r7, pc}
	...

08018a6c <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEEixERSA_>:
      operator[](const key_type& __k)
 8018a6c:	b590      	push	{r4, r7, lr}
 8018a6e:	b08b      	sub	sp, #44	; 0x2c
 8018a70:	af02      	add	r7, sp, #8
 8018a72:	6078      	str	r0, [r7, #4]
 8018a74:	6039      	str	r1, [r7, #0]
	iterator __i = lower_bound(__k);
 8018a76:	6839      	ldr	r1, [r7, #0]
 8018a78:	6878      	ldr	r0, [r7, #4]
 8018a7a:	f000 f8e5 	bl	8018c48 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE11lower_boundERSA_>
 8018a7e:	4603      	mov	r3, r0
 8018a80:	60bb      	str	r3, [r7, #8]
	if (__i == end() || key_comp()(__k, (*__i).first))
 8018a82:	6878      	ldr	r0, [r7, #4]
 8018a84:	f7ff ffc2 	bl	8018a0c <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE3endEv>
 8018a88:	4603      	mov	r3, r0
 8018a8a:	60fb      	str	r3, [r7, #12]
 8018a8c:	f107 020c 	add.w	r2, r7, #12
 8018a90:	f107 0308 	add.w	r3, r7, #8
 8018a94:	4611      	mov	r1, r2
 8018a96:	4618      	mov	r0, r3
 8018a98:	f7ff ffc5 	bl	8018a26 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEESC_>
 8018a9c:	4603      	mov	r3, r0
 8018a9e:	2b00      	cmp	r3, #0
 8018aa0:	d112      	bne.n	8018ac8 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEEixERSA_+0x5c>
 8018aa2:	6878      	ldr	r0, [r7, #4]
 8018aa4:	f000 f8df 	bl	8018c66 <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE8key_compEv>
 8018aa8:	f107 0308 	add.w	r3, r7, #8
 8018aac:	4618      	mov	r0, r3
 8018aae:	f000 f8e7 	bl	8018c80 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEdeEv>
 8018ab2:	4603      	mov	r3, r0
 8018ab4:	461a      	mov	r2, r3
 8018ab6:	f107 0310 	add.w	r3, r7, #16
 8018aba:	6839      	ldr	r1, [r7, #0]
 8018abc:	4618      	mov	r0, r3
 8018abe:	f7ec fdf5 	bl	80056ac <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8018ac2:	4603      	mov	r3, r0
 8018ac4:	2b00      	cmp	r3, #0
 8018ac6:	d001      	beq.n	8018acc <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEEixERSA_+0x60>
 8018ac8:	2301      	movs	r3, #1
 8018aca:	e000      	b.n	8018ace <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEEixERSA_+0x62>
 8018acc:	2300      	movs	r3, #0
 8018ace:	2b00      	cmp	r3, #0
 8018ad0:	d01b      	beq.n	8018b0a <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEEixERSA_+0x9e>
	  __i = _M_t._M_emplace_hint_unique(__i, std::piecewise_construct,
 8018ad2:	687c      	ldr	r4, [r7, #4]
 8018ad4:	f107 0208 	add.w	r2, r7, #8
 8018ad8:	f107 0314 	add.w	r3, r7, #20
 8018adc:	4611      	mov	r1, r2
 8018ade:	4618      	mov	r0, r3
 8018ae0:	f000 f8eb 	bl	8018cba <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEC1ERKSt17_Rb_tree_iteratorIS9_E>
 8018ae4:	f107 0318 	add.w	r3, r7, #24
 8018ae8:	6839      	ldr	r1, [r7, #0]
 8018aea:	4618      	mov	r0, r3
 8018aec:	f000 f8d6 	bl	8018c9c <_ZNSt5tupleIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IvLb1EEES7_>
 8018af0:	f107 0218 	add.w	r2, r7, #24
 8018af4:	f107 031c 	add.w	r3, r7, #28
 8018af8:	9300      	str	r3, [sp, #0]
 8018afa:	4613      	mov	r3, r2
 8018afc:	4a08      	ldr	r2, [pc, #32]	; (8018b20 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEEixERSA_+0xb4>)
 8018afe:	6979      	ldr	r1, [r7, #20]
 8018b00:	4620      	mov	r0, r4
 8018b02:	f000 f8ea 	bl	8018cda <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESK_IJEEEEESt17_Rb_tree_iteratorIS9_ESt23_Rb_tree_const_iteratorIS9_EDpOT_>
 8018b06:	4603      	mov	r3, r0
 8018b08:	60bb      	str	r3, [r7, #8]
	return (*__i).second;
 8018b0a:	f107 0308 	add.w	r3, r7, #8
 8018b0e:	4618      	mov	r0, r3
 8018b10:	f000 f8b6 	bl	8018c80 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEdeEv>
 8018b14:	4603      	mov	r3, r0
 8018b16:	3318      	adds	r3, #24
      }
 8018b18:	4618      	mov	r0, r3
 8018b1a:	3724      	adds	r7, #36	; 0x24
 8018b1c:	46bd      	mov	sp, r7
 8018b1e:	bd90      	pop	{r4, r7, pc}
 8018b20:	0802827c 	.word	0x0802827c

08018b24 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
 8018b24:	b580      	push	{r7, lr}
 8018b26:	b082      	sub	sp, #8
 8018b28:	af00      	add	r7, sp, #0
 8018b2a:	6078      	str	r0, [r7, #4]
 8018b2c:	6878      	ldr	r0, [r7, #4]
 8018b2e:	f000 f912 	bl	8018d56 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEED1Ev>
 8018b32:	687b      	ldr	r3, [r7, #4]
 8018b34:	4618      	mov	r0, r3
 8018b36:	3708      	adds	r7, #8
 8018b38:	46bd      	mov	sp, r7
 8018b3a:	bd80      	pop	{r7, pc}

08018b3c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_eraseEPSt13_Rb_tree_nodeIS9_E>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8018b3c:	b580      	push	{r7, lr}
 8018b3e:	b084      	sub	sp, #16
 8018b40:	af00      	add	r7, sp, #0
 8018b42:	6078      	str	r0, [r7, #4]
 8018b44:	6039      	str	r1, [r7, #0]
      while (__x != 0)
 8018b46:	683b      	ldr	r3, [r7, #0]
 8018b48:	2b00      	cmp	r3, #0
 8018b4a:	d012      	beq.n	8018b72 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_eraseEPSt13_Rb_tree_nodeIS9_E+0x36>
	  _M_erase(_S_right(__x));
 8018b4c:	6838      	ldr	r0, [r7, #0]
 8018b4e:	f000 f90d 	bl	8018d6c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_S_rightEPSt18_Rb_tree_node_base>
 8018b52:	4603      	mov	r3, r0
 8018b54:	4619      	mov	r1, r3
 8018b56:	6878      	ldr	r0, [r7, #4]
 8018b58:	f7ff fff0 	bl	8018b3c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_eraseEPSt13_Rb_tree_nodeIS9_E>
	  _Link_type __y = _S_left(__x);
 8018b5c:	6838      	ldr	r0, [r7, #0]
 8018b5e:	f000 f911 	bl	8018d84 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE7_S_leftEPSt18_Rb_tree_node_base>
 8018b62:	60f8      	str	r0, [r7, #12]
	  _M_drop_node(__x);
 8018b64:	6839      	ldr	r1, [r7, #0]
 8018b66:	6878      	ldr	r0, [r7, #4]
 8018b68:	f000 f918 	bl	8018d9c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS9_E>
	  __x = __y;
 8018b6c:	68fb      	ldr	r3, [r7, #12]
 8018b6e:	603b      	str	r3, [r7, #0]
      while (__x != 0)
 8018b70:	e7e9      	b.n	8018b46 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_eraseEPSt13_Rb_tree_nodeIS9_E+0xa>
    }
 8018b72:	bf00      	nop
 8018b74:	3710      	adds	r7, #16
 8018b76:	46bd      	mov	sp, r7
 8018b78:	bd80      	pop	{r7, pc}

08018b7a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_beginEv>:
      _M_begin() _GLIBCXX_NOEXCEPT
 8018b7a:	b480      	push	{r7}
 8018b7c:	b083      	sub	sp, #12
 8018b7e:	af00      	add	r7, sp, #0
 8018b80:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
 8018b82:	687b      	ldr	r3, [r7, #4]
 8018b84:	689b      	ldr	r3, [r3, #8]
 8018b86:	4618      	mov	r0, r3
 8018b88:	370c      	adds	r7, #12
 8018b8a:	46bd      	mov	sp, r7
 8018b8c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8018b90:	4770      	bx	lr

08018b92 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE4findERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8018b92:	b590      	push	{r4, r7, lr}
 8018b94:	b085      	sub	sp, #20
 8018b96:	af00      	add	r7, sp, #0
 8018b98:	6078      	str	r0, [r7, #4]
 8018b9a:	6039      	str	r1, [r7, #0]
      iterator __j = _M_lower_bound(_M_begin(), _M_end(), __k);
 8018b9c:	6878      	ldr	r0, [r7, #4]
 8018b9e:	f7ff ffec 	bl	8018b7a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_beginEv>
 8018ba2:	4604      	mov	r4, r0
 8018ba4:	6878      	ldr	r0, [r7, #4]
 8018ba6:	f000 f90a 	bl	8018dbe <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_M_endEv>
 8018baa:	4602      	mov	r2, r0
 8018bac:	683b      	ldr	r3, [r7, #0]
 8018bae:	4621      	mov	r1, r4
 8018bb0:	6878      	ldr	r0, [r7, #4]
 8018bb2:	f000 f910 	bl	8018dd6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS9_EPSt18_Rb_tree_node_baseRS7_>
 8018bb6:	4603      	mov	r3, r0
 8018bb8:	60bb      	str	r3, [r7, #8]
      return (__j == end()
 8018bba:	6878      	ldr	r0, [r7, #4]
 8018bbc:	f000 f825 	bl	8018c0a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE3endEv>
 8018bc0:	4603      	mov	r3, r0
 8018bc2:	60fb      	str	r3, [r7, #12]
 8018bc4:	f107 020c 	add.w	r2, r7, #12
 8018bc8:	f107 0308 	add.w	r3, r7, #8
 8018bcc:	4611      	mov	r1, r2
 8018bce:	4618      	mov	r0, r3
 8018bd0:	f7ff ff29 	bl	8018a26 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEESC_>
 8018bd4:	4603      	mov	r3, r0
					_S_key(__j._M_node))) ? end() : __j;
 8018bd6:	2b00      	cmp	r3, #0
 8018bd8:	d10d      	bne.n	8018bf6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE4findERS7_+0x64>
	      || _M_impl._M_key_compare(__k,
 8018bda:	687c      	ldr	r4, [r7, #4]
					_S_key(__j._M_node))) ? end() : __j;
 8018bdc:	68bb      	ldr	r3, [r7, #8]
	      || _M_impl._M_key_compare(__k,
 8018bde:	4618      	mov	r0, r3
 8018be0:	f000 f92a 	bl	8018e38 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8018be4:	4603      	mov	r3, r0
 8018be6:	461a      	mov	r2, r3
 8018be8:	6839      	ldr	r1, [r7, #0]
 8018bea:	4620      	mov	r0, r4
 8018bec:	f7ec fd5e 	bl	80056ac <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8018bf0:	4603      	mov	r3, r0
 8018bf2:	2b00      	cmp	r3, #0
 8018bf4:	d004      	beq.n	8018c00 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE4findERS7_+0x6e>
					_S_key(__j._M_node))) ? end() : __j;
 8018bf6:	6878      	ldr	r0, [r7, #4]
 8018bf8:	f000 f807 	bl	8018c0a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE3endEv>
 8018bfc:	4603      	mov	r3, r0
 8018bfe:	e000      	b.n	8018c02 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE4findERS7_+0x70>
 8018c00:	68bb      	ldr	r3, [r7, #8]
    }
 8018c02:	4618      	mov	r0, r3
 8018c04:	3714      	adds	r7, #20
 8018c06:	46bd      	mov	sp, r7
 8018c08:	bd90      	pop	{r4, r7, pc}

08018c0a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 8018c0a:	b580      	push	{r7, lr}
 8018c0c:	b084      	sub	sp, #16
 8018c0e:	af00      	add	r7, sp, #0
 8018c10:	6078      	str	r0, [r7, #4]
      { return iterator(&this->_M_impl._M_header); }
 8018c12:	687b      	ldr	r3, [r7, #4]
 8018c14:	1d1a      	adds	r2, r3, #4
 8018c16:	f107 030c 	add.w	r3, r7, #12
 8018c1a:	4611      	mov	r1, r2
 8018c1c:	4618      	mov	r0, r3
 8018c1e:	f000 f917 	bl	8018e50 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEC1EPSt18_Rb_tree_node_base>
 8018c22:	68fb      	ldr	r3, [r7, #12]
 8018c24:	4618      	mov	r0, r3
 8018c26:	3710      	adds	r7, #16
 8018c28:	46bd      	mov	sp, r7
 8018c2a:	bd80      	pop	{r7, pc}

08018c2c <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE9_M_valptrEv>:
      _M_valptr()
 8018c2c:	b580      	push	{r7, lr}
 8018c2e:	b082      	sub	sp, #8
 8018c30:	af00      	add	r7, sp, #0
 8018c32:	6078      	str	r0, [r7, #4]
      { return _M_storage._M_ptr(); }
 8018c34:	687b      	ldr	r3, [r7, #4]
 8018c36:	3310      	adds	r3, #16
 8018c38:	4618      	mov	r0, r3
 8018c3a:	f000 f918 	bl	8018e6e <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE6_M_ptrEv>
 8018c3e:	4603      	mov	r3, r0
 8018c40:	4618      	mov	r0, r3
 8018c42:	3708      	adds	r7, #8
 8018c44:	46bd      	mov	sp, r7
 8018c46:	bd80      	pop	{r7, pc}

08018c48 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE11lower_boundERSA_>:
       *  that matches the given key.  If unsuccessful it returns an iterator
       *  pointing to the first element that has a greater value than given key
       *  or end() if no such element exists.
       */
      iterator
      lower_bound(const key_type& __x)
 8018c48:	b580      	push	{r7, lr}
 8018c4a:	b082      	sub	sp, #8
 8018c4c:	af00      	add	r7, sp, #0
 8018c4e:	6078      	str	r0, [r7, #4]
 8018c50:	6039      	str	r1, [r7, #0]
      { return _M_t.lower_bound(__x); }
 8018c52:	687b      	ldr	r3, [r7, #4]
 8018c54:	6839      	ldr	r1, [r7, #0]
 8018c56:	4618      	mov	r0, r3
 8018c58:	f000 f915 	bl	8018e86 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11lower_boundERS7_>
 8018c5c:	4603      	mov	r3, r0
 8018c5e:	4618      	mov	r0, r3
 8018c60:	3708      	adds	r7, #8
 8018c62:	46bd      	mov	sp, r7
 8018c64:	bd80      	pop	{r7, pc}

08018c66 <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE8key_compEv>:
      key_comp() const
 8018c66:	b590      	push	{r4, r7, lr}
 8018c68:	b083      	sub	sp, #12
 8018c6a:	af00      	add	r7, sp, #0
 8018c6c:	6078      	str	r0, [r7, #4]
      { return _M_t.key_comp(); }
 8018c6e:	687b      	ldr	r3, [r7, #4]
 8018c70:	4618      	mov	r0, r3
 8018c72:	f000 f91f 	bl	8018eb4 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8key_compEv>
 8018c76:	4623      	mov	r3, r4
 8018c78:	4618      	mov	r0, r3
 8018c7a:	370c      	adds	r7, #12
 8018c7c:	46bd      	mov	sp, r7
 8018c7e:	bd90      	pop	{r4, r7, pc}

08018c80 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
 8018c80:	b580      	push	{r7, lr}
 8018c82:	b082      	sub	sp, #8
 8018c84:	af00      	add	r7, sp, #0
 8018c86:	6078      	str	r0, [r7, #4]
      { return *static_cast<_Link_type>(_M_node)->_M_valptr(); }
 8018c88:	687b      	ldr	r3, [r7, #4]
 8018c8a:	681b      	ldr	r3, [r3, #0]
 8018c8c:	4618      	mov	r0, r3
 8018c8e:	f7ff ffcd 	bl	8018c2c <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE9_M_valptrEv>
 8018c92:	4603      	mov	r3, r0
 8018c94:	4618      	mov	r0, r3
 8018c96:	3708      	adds	r7, #8
 8018c98:	46bd      	mov	sp, r7
 8018c9a:	bd80      	pop	{r7, pc}

08018c9c <_ZNSt5tupleIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IvLb1EEES7_>:
                   _ConstructibleTuple<_Elements...>()
                 && _TCC<_Dummy>::template
                   _ImplicitlyConvertibleTuple<_Elements...>()
                 && (sizeof...(_Elements) >= 1),
               bool>::type=true>
        constexpr tuple(const _Elements&... __elements)
 8018c9c:	b580      	push	{r7, lr}
 8018c9e:	b082      	sub	sp, #8
 8018ca0:	af00      	add	r7, sp, #0
 8018ca2:	6078      	str	r0, [r7, #4]
 8018ca4:	6039      	str	r1, [r7, #0]
      : _Inherited(__elements...) { }
 8018ca6:	687b      	ldr	r3, [r7, #4]
 8018ca8:	6839      	ldr	r1, [r7, #0]
 8018caa:	4618      	mov	r0, r3
 8018cac:	f000 f90c 	bl	8018ec8 <_ZNSt11_Tuple_implILj0EJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1ES7_>
 8018cb0:	687b      	ldr	r3, [r7, #4]
 8018cb2:	4618      	mov	r0, r3
 8018cb4:	3708      	adds	r7, #8
 8018cb6:	46bd      	mov	sp, r7
 8018cb8:	bd80      	pop	{r7, pc}

08018cba <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEC1ERKSt17_Rb_tree_iteratorIS9_E>:
      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
 8018cba:	b480      	push	{r7}
 8018cbc:	b083      	sub	sp, #12
 8018cbe:	af00      	add	r7, sp, #0
 8018cc0:	6078      	str	r0, [r7, #4]
 8018cc2:	6039      	str	r1, [r7, #0]
      : _M_node(__it._M_node) { }
 8018cc4:	683b      	ldr	r3, [r7, #0]
 8018cc6:	681a      	ldr	r2, [r3, #0]
 8018cc8:	687b      	ldr	r3, [r7, #4]
 8018cca:	601a      	str	r2, [r3, #0]
 8018ccc:	687b      	ldr	r3, [r7, #4]
 8018cce:	4618      	mov	r0, r3
 8018cd0:	370c      	adds	r7, #12
 8018cd2:	46bd      	mov	sp, r7
 8018cd4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8018cd8:	4770      	bx	lr

08018cda <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESK_IJEEEEESt17_Rb_tree_iteratorIS9_ESt23_Rb_tree_const_iteratorIS9_EDpOT_>:
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8018cda:	b5b0      	push	{r4, r5, r7, lr}
 8018cdc:	b088      	sub	sp, #32
 8018cde:	af00      	add	r7, sp, #0
 8018ce0:	60f8      	str	r0, [r7, #12]
 8018ce2:	60b9      	str	r1, [r7, #8]
 8018ce4:	607a      	str	r2, [r7, #4]
 8018ce6:	603b      	str	r3, [r7, #0]
	_Link_type __z = _M_create_node(std::forward<_Args>(__args)...);
 8018ce8:	6878      	ldr	r0, [r7, #4]
 8018cea:	f000 f8fc 	bl	8018ee6 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
 8018cee:	4604      	mov	r4, r0
 8018cf0:	6838      	ldr	r0, [r7, #0]
 8018cf2:	f000 f903 	bl	8018efc <_ZSt7forwardISt5tupleIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceISA_E4typeE>
 8018cf6:	4605      	mov	r5, r0
 8018cf8:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8018cfa:	f000 f90a 	bl	8018f12 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
 8018cfe:	4603      	mov	r3, r0
 8018d00:	462a      	mov	r2, r5
 8018d02:	4621      	mov	r1, r4
 8018d04:	68f8      	ldr	r0, [r7, #12]
 8018d06:	f000 f90f 	bl	8018f28 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESK_IJEEEEEPSt13_Rb_tree_nodeIS9_EDpOT_>
 8018d0a:	61f8      	str	r0, [r7, #28]
	    auto __res = _M_get_insert_hint_unique_pos(__pos, _S_key(__z));
 8018d0c:	69f8      	ldr	r0, [r7, #28]
 8018d0e:	f000 fa51 	bl	80191b4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt13_Rb_tree_nodeIS9_E>
 8018d12:	4603      	mov	r3, r0
 8018d14:	f107 0010 	add.w	r0, r7, #16
 8018d18:	68ba      	ldr	r2, [r7, #8]
 8018d1a:	68f9      	ldr	r1, [r7, #12]
 8018d1c:	f000 f927 	bl	8018f6e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_>
	    if (__res.second)
 8018d20:	697b      	ldr	r3, [r7, #20]
 8018d22:	2b00      	cmp	r3, #0
 8018d24:	d007      	beq.n	8018d36 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESK_IJEEEEESt17_Rb_tree_iteratorIS9_ESt23_Rb_tree_const_iteratorIS9_EDpOT_+0x5c>
	      return _M_insert_node(__res.first, __res.second, __z);
 8018d26:	6939      	ldr	r1, [r7, #16]
 8018d28:	697a      	ldr	r2, [r7, #20]
 8018d2a:	69fb      	ldr	r3, [r7, #28]
 8018d2c:	68f8      	ldr	r0, [r7, #12]
 8018d2e:	f000 fa54 	bl	80191da <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSH_PSt13_Rb_tree_nodeIS9_E>
 8018d32:	4603      	mov	r3, r0
 8018d34:	e00b      	b.n	8018d4e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESK_IJEEEEESt17_Rb_tree_iteratorIS9_ESt23_Rb_tree_const_iteratorIS9_EDpOT_+0x74>
	    _M_drop_node(__z);
 8018d36:	69f9      	ldr	r1, [r7, #28]
 8018d38:	68f8      	ldr	r0, [r7, #12]
 8018d3a:	f000 f82f 	bl	8018d9c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS9_E>
	    return iterator(__res.first);
 8018d3e:	693a      	ldr	r2, [r7, #16]
 8018d40:	f107 0318 	add.w	r3, r7, #24
 8018d44:	4611      	mov	r1, r2
 8018d46:	4618      	mov	r0, r3
 8018d48:	f000 f882 	bl	8018e50 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEC1EPSt18_Rb_tree_node_base>
 8018d4c:	69bb      	ldr	r3, [r7, #24]
      }
 8018d4e:	4618      	mov	r0, r3
 8018d50:	3720      	adds	r7, #32
 8018d52:	46bd      	mov	sp, r7
 8018d54:	bdb0      	pop	{r4, r5, r7, pc}

08018d56 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEED1Ev>:
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 8018d56:	b480      	push	{r7}
 8018d58:	b083      	sub	sp, #12
 8018d5a:	af00      	add	r7, sp, #0
 8018d5c:	6078      	str	r0, [r7, #4]
 8018d5e:	687b      	ldr	r3, [r7, #4]
 8018d60:	4618      	mov	r0, r3
 8018d62:	370c      	adds	r7, #12
 8018d64:	46bd      	mov	sp, r7
 8018d66:	f85d 7b04 	ldr.w	r7, [sp], #4
 8018d6a:	4770      	bx	lr

08018d6c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_S_rightEPSt18_Rb_tree_node_base>:
      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 8018d6c:	b480      	push	{r7}
 8018d6e:	b083      	sub	sp, #12
 8018d70:	af00      	add	r7, sp, #0
 8018d72:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(__x->_M_right); }
 8018d74:	687b      	ldr	r3, [r7, #4]
 8018d76:	68db      	ldr	r3, [r3, #12]
 8018d78:	4618      	mov	r0, r3
 8018d7a:	370c      	adds	r7, #12
 8018d7c:	46bd      	mov	sp, r7
 8018d7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8018d82:	4770      	bx	lr

08018d84 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE7_S_leftEPSt18_Rb_tree_node_base>:
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 8018d84:	b480      	push	{r7}
 8018d86:	b083      	sub	sp, #12
 8018d88:	af00      	add	r7, sp, #0
 8018d8a:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(__x->_M_left); }
 8018d8c:	687b      	ldr	r3, [r7, #4]
 8018d8e:	689b      	ldr	r3, [r3, #8]
 8018d90:	4618      	mov	r0, r3
 8018d92:	370c      	adds	r7, #12
 8018d94:	46bd      	mov	sp, r7
 8018d96:	f85d 7b04 	ldr.w	r7, [sp], #4
 8018d9a:	4770      	bx	lr

08018d9c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS9_E>:
      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 8018d9c:	b580      	push	{r7, lr}
 8018d9e:	b082      	sub	sp, #8
 8018da0:	af00      	add	r7, sp, #0
 8018da2:	6078      	str	r0, [r7, #4]
 8018da4:	6039      	str	r1, [r7, #0]
	_M_destroy_node(__p);
 8018da6:	6839      	ldr	r1, [r7, #0]
 8018da8:	6878      	ldr	r0, [r7, #4]
 8018daa:	f000 fa53 	bl	8019254 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS9_E>
	_M_put_node(__p);
 8018dae:	6839      	ldr	r1, [r7, #0]
 8018db0:	6878      	ldr	r0, [r7, #4]
 8018db2:	f000 fa64 	bl	801927e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS9_E>
      }
 8018db6:	bf00      	nop
 8018db8:	3708      	adds	r7, #8
 8018dba:	46bd      	mov	sp, r7
 8018dbc:	bd80      	pop	{r7, pc}

08018dbe <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_M_endEv>:
      _M_end() _GLIBCXX_NOEXCEPT
 8018dbe:	b480      	push	{r7}
 8018dc0:	b083      	sub	sp, #12
 8018dc2:	af00      	add	r7, sp, #0
 8018dc4:	6078      	str	r0, [r7, #4]
      { return &this->_M_impl._M_header; }
 8018dc6:	687b      	ldr	r3, [r7, #4]
 8018dc8:	3304      	adds	r3, #4
 8018dca:	4618      	mov	r0, r3
 8018dcc:	370c      	adds	r7, #12
 8018dce:	46bd      	mov	sp, r7
 8018dd0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8018dd4:	4770      	bx	lr

08018dd6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS9_EPSt18_Rb_tree_node_baseRS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8018dd6:	b590      	push	{r4, r7, lr}
 8018dd8:	b087      	sub	sp, #28
 8018dda:	af00      	add	r7, sp, #0
 8018ddc:	60f8      	str	r0, [r7, #12]
 8018dde:	60b9      	str	r1, [r7, #8]
 8018de0:	607a      	str	r2, [r7, #4]
 8018de2:	603b      	str	r3, [r7, #0]
      while (__x != 0)
 8018de4:	68bb      	ldr	r3, [r7, #8]
 8018de6:	2b00      	cmp	r3, #0
 8018de8:	d01b      	beq.n	8018e22 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS9_EPSt18_Rb_tree_node_baseRS7_+0x4c>
	if (!_M_impl._M_key_compare(_S_key(__x), __k))
 8018dea:	68fc      	ldr	r4, [r7, #12]
 8018dec:	68b8      	ldr	r0, [r7, #8]
 8018dee:	f000 f9e1 	bl	80191b4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt13_Rb_tree_nodeIS9_E>
 8018df2:	4603      	mov	r3, r0
 8018df4:	683a      	ldr	r2, [r7, #0]
 8018df6:	4619      	mov	r1, r3
 8018df8:	4620      	mov	r0, r4
 8018dfa:	f7ec fc57 	bl	80056ac <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8018dfe:	4603      	mov	r3, r0
 8018e00:	f083 0301 	eor.w	r3, r3, #1
 8018e04:	b2db      	uxtb	r3, r3
 8018e06:	2b00      	cmp	r3, #0
 8018e08:	d006      	beq.n	8018e18 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS9_EPSt18_Rb_tree_node_baseRS7_+0x42>
	  __y = __x, __x = _S_left(__x);
 8018e0a:	68bb      	ldr	r3, [r7, #8]
 8018e0c:	607b      	str	r3, [r7, #4]
 8018e0e:	68b8      	ldr	r0, [r7, #8]
 8018e10:	f7ff ffb8 	bl	8018d84 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE7_S_leftEPSt18_Rb_tree_node_base>
 8018e14:	60b8      	str	r0, [r7, #8]
 8018e16:	e7e5      	b.n	8018de4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS9_EPSt18_Rb_tree_node_baseRS7_+0xe>
	  __x = _S_right(__x);
 8018e18:	68b8      	ldr	r0, [r7, #8]
 8018e1a:	f7ff ffa7 	bl	8018d6c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_S_rightEPSt18_Rb_tree_node_base>
 8018e1e:	60b8      	str	r0, [r7, #8]
      while (__x != 0)
 8018e20:	e7e0      	b.n	8018de4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS9_EPSt18_Rb_tree_node_baseRS7_+0xe>
      return iterator(__y);
 8018e22:	f107 0314 	add.w	r3, r7, #20
 8018e26:	6879      	ldr	r1, [r7, #4]
 8018e28:	4618      	mov	r0, r3
 8018e2a:	f000 f811 	bl	8018e50 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEC1EPSt18_Rb_tree_node_base>
 8018e2e:	697b      	ldr	r3, [r7, #20]
    }
 8018e30:	4618      	mov	r0, r3
 8018e32:	371c      	adds	r7, #28
 8018e34:	46bd      	mov	sp, r7
 8018e36:	bd90      	pop	{r4, r7, pc}

08018e38 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>:
      _S_key(_Const_Base_ptr __x)
 8018e38:	b580      	push	{r7, lr}
 8018e3a:	b082      	sub	sp, #8
 8018e3c:	af00      	add	r7, sp, #0
 8018e3e:	6078      	str	r0, [r7, #4]
      { return _S_key(static_cast<_Const_Link_type>(__x)); }
 8018e40:	6878      	ldr	r0, [r7, #4]
 8018e42:	f000 f9b7 	bl	80191b4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt13_Rb_tree_nodeIS9_E>
 8018e46:	4603      	mov	r3, r0
 8018e48:	4618      	mov	r0, r3
 8018e4a:	3708      	adds	r7, #8
 8018e4c:	46bd      	mov	sp, r7
 8018e4e:	bd80      	pop	{r7, pc}

08018e50 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEC1EPSt18_Rb_tree_node_base>:
      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 8018e50:	b480      	push	{r7}
 8018e52:	b083      	sub	sp, #12
 8018e54:	af00      	add	r7, sp, #0
 8018e56:	6078      	str	r0, [r7, #4]
 8018e58:	6039      	str	r1, [r7, #0]
      : _M_node(__x) { }
 8018e5a:	687b      	ldr	r3, [r7, #4]
 8018e5c:	683a      	ldr	r2, [r7, #0]
 8018e5e:	601a      	str	r2, [r3, #0]
 8018e60:	687b      	ldr	r3, [r7, #4]
 8018e62:	4618      	mov	r0, r3
 8018e64:	370c      	adds	r7, #12
 8018e66:	46bd      	mov	sp, r7
 8018e68:	f85d 7b04 	ldr.w	r7, [sp], #4
 8018e6c:	4770      	bx	lr

08018e6e <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE6_M_ptrEv>:
      _M_ptr() noexcept
 8018e6e:	b580      	push	{r7, lr}
 8018e70:	b082      	sub	sp, #8
 8018e72:	af00      	add	r7, sp, #0
 8018e74:	6078      	str	r0, [r7, #4]
      { return static_cast<_Tp*>(_M_addr()); }
 8018e76:	6878      	ldr	r0, [r7, #4]
 8018e78:	f000 fa13 	bl	80192a2 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE7_M_addrEv>
 8018e7c:	4603      	mov	r3, r0
 8018e7e:	4618      	mov	r0, r3
 8018e80:	3708      	adds	r7, #8
 8018e82:	46bd      	mov	sp, r7
 8018e84:	bd80      	pop	{r7, pc}

08018e86 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11lower_boundERS7_>:
      lower_bound(const key_type& __k)
 8018e86:	b590      	push	{r4, r7, lr}
 8018e88:	b083      	sub	sp, #12
 8018e8a:	af00      	add	r7, sp, #0
 8018e8c:	6078      	str	r0, [r7, #4]
 8018e8e:	6039      	str	r1, [r7, #0]
      { return _M_lower_bound(_M_begin(), _M_end(), __k); }
 8018e90:	6878      	ldr	r0, [r7, #4]
 8018e92:	f7ff fe72 	bl	8018b7a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_beginEv>
 8018e96:	4604      	mov	r4, r0
 8018e98:	6878      	ldr	r0, [r7, #4]
 8018e9a:	f7ff ff90 	bl	8018dbe <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_M_endEv>
 8018e9e:	4602      	mov	r2, r0
 8018ea0:	683b      	ldr	r3, [r7, #0]
 8018ea2:	4621      	mov	r1, r4
 8018ea4:	6878      	ldr	r0, [r7, #4]
 8018ea6:	f7ff ff96 	bl	8018dd6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS9_EPSt18_Rb_tree_node_baseRS7_>
 8018eaa:	4603      	mov	r3, r0
 8018eac:	4618      	mov	r0, r3
 8018eae:	370c      	adds	r7, #12
 8018eb0:	46bd      	mov	sp, r7
 8018eb2:	bd90      	pop	{r4, r7, pc}

08018eb4 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8key_compEv>:
      key_comp() const
 8018eb4:	b480      	push	{r7}
 8018eb6:	b083      	sub	sp, #12
 8018eb8:	af00      	add	r7, sp, #0
 8018eba:	6078      	str	r0, [r7, #4]
      { return _M_impl._M_key_compare; }
 8018ebc:	4618      	mov	r0, r3
 8018ebe:	370c      	adds	r7, #12
 8018ec0:	46bd      	mov	sp, r7
 8018ec2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8018ec6:	4770      	bx	lr

08018ec8 <_ZNSt11_Tuple_implILj0EJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1ES7_>:
      constexpr _Tuple_impl(const _Head& __head)
 8018ec8:	b580      	push	{r7, lr}
 8018eca:	b082      	sub	sp, #8
 8018ecc:	af00      	add	r7, sp, #0
 8018ece:	6078      	str	r0, [r7, #4]
 8018ed0:	6039      	str	r1, [r7, #0]
      : _Base(__head) { }
 8018ed2:	687b      	ldr	r3, [r7, #4]
 8018ed4:	6839      	ldr	r1, [r7, #0]
 8018ed6:	4618      	mov	r0, r3
 8018ed8:	f000 f9ee 	bl	80192b8 <_ZNSt10_Head_baseILj0ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1ES7_>
 8018edc:	687b      	ldr	r3, [r7, #4]
 8018ede:	4618      	mov	r0, r3
 8018ee0:	3708      	adds	r7, #8
 8018ee2:	46bd      	mov	sp, r7
 8018ee4:	bd80      	pop	{r7, pc}

08018ee6 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8018ee6:	b480      	push	{r7}
 8018ee8:	b083      	sub	sp, #12
 8018eea:	af00      	add	r7, sp, #0
 8018eec:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8018eee:	687b      	ldr	r3, [r7, #4]
 8018ef0:	4618      	mov	r0, r3
 8018ef2:	370c      	adds	r7, #12
 8018ef4:	46bd      	mov	sp, r7
 8018ef6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8018efa:	4770      	bx	lr

08018efc <_ZSt7forwardISt5tupleIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceISA_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8018efc:	b480      	push	{r7}
 8018efe:	b083      	sub	sp, #12
 8018f00:	af00      	add	r7, sp, #0
 8018f02:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8018f04:	687b      	ldr	r3, [r7, #4]
 8018f06:	4618      	mov	r0, r3
 8018f08:	370c      	adds	r7, #12
 8018f0a:	46bd      	mov	sp, r7
 8018f0c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8018f10:	4770      	bx	lr

08018f12 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8018f12:	b480      	push	{r7}
 8018f14:	b083      	sub	sp, #12
 8018f16:	af00      	add	r7, sp, #0
 8018f18:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8018f1a:	687b      	ldr	r3, [r7, #4]
 8018f1c:	4618      	mov	r0, r3
 8018f1e:	370c      	adds	r7, #12
 8018f20:	46bd      	mov	sp, r7
 8018f22:	f85d 7b04 	ldr.w	r7, [sp], #4
 8018f26:	4770      	bx	lr

08018f28 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESK_IJEEEEEPSt13_Rb_tree_nodeIS9_EDpOT_>:
	_M_create_node(_Args&&... __args)
 8018f28:	b5b0      	push	{r4, r5, r7, lr}
 8018f2a:	b088      	sub	sp, #32
 8018f2c:	af02      	add	r7, sp, #8
 8018f2e:	60f8      	str	r0, [r7, #12]
 8018f30:	60b9      	str	r1, [r7, #8]
 8018f32:	607a      	str	r2, [r7, #4]
 8018f34:	603b      	str	r3, [r7, #0]
	  _Link_type __tmp = _M_get_node();
 8018f36:	68f8      	ldr	r0, [r7, #12]
 8018f38:	f000 f9cd 	bl	80192d6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_get_nodeEv>
 8018f3c:	6178      	str	r0, [r7, #20]
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
 8018f3e:	68b8      	ldr	r0, [r7, #8]
 8018f40:	f7ff ffd1 	bl	8018ee6 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
 8018f44:	4604      	mov	r4, r0
 8018f46:	6878      	ldr	r0, [r7, #4]
 8018f48:	f7ff ffd8 	bl	8018efc <_ZSt7forwardISt5tupleIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceISA_E4typeE>
 8018f4c:	4605      	mov	r5, r0
 8018f4e:	6838      	ldr	r0, [r7, #0]
 8018f50:	f7ff ffdf 	bl	8018f12 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
 8018f54:	4603      	mov	r3, r0
 8018f56:	9300      	str	r3, [sp, #0]
 8018f58:	462b      	mov	r3, r5
 8018f5a:	4622      	mov	r2, r4
 8018f5c:	6979      	ldr	r1, [r7, #20]
 8018f5e:	68f8      	ldr	r0, [r7, #12]
 8018f60:	f000 f9ca 	bl	80192f8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESK_IJEEEEEvPSt13_Rb_tree_nodeIS9_EDpOT_>
	  return __tmp;
 8018f64:	697b      	ldr	r3, [r7, #20]
	}
 8018f66:	4618      	mov	r0, r3
 8018f68:	3718      	adds	r7, #24
 8018f6a:	46bd      	mov	sp, r7
 8018f6c:	bdb0      	pop	{r4, r5, r7, pc}

08018f6e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8018f6e:	b590      	push	{r4, r7, lr}
 8018f70:	b08d      	sub	sp, #52	; 0x34
 8018f72:	af00      	add	r7, sp, #0
 8018f74:	60f8      	str	r0, [r7, #12]
 8018f76:	60b9      	str	r1, [r7, #8]
 8018f78:	607a      	str	r2, [r7, #4]
 8018f7a:	603b      	str	r3, [r7, #0]
      iterator __pos = __position._M_const_cast();
 8018f7c:	1d3b      	adds	r3, r7, #4
 8018f7e:	4618      	mov	r0, r3
 8018f80:	f000 f9e7 	bl	8019352 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE13_M_const_castEv>
 8018f84:	4603      	mov	r3, r0
 8018f86:	61bb      	str	r3, [r7, #24]
      if (__pos._M_node == _M_end())
 8018f88:	69bc      	ldr	r4, [r7, #24]
 8018f8a:	68b8      	ldr	r0, [r7, #8]
 8018f8c:	f7ff ff17 	bl	8018dbe <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_M_endEv>
 8018f90:	4603      	mov	r3, r0
 8018f92:	429c      	cmp	r4, r3
 8018f94:	bf0c      	ite	eq
 8018f96:	2301      	moveq	r3, #1
 8018f98:	2300      	movne	r3, #0
 8018f9a:	b2db      	uxtb	r3, r3
 8018f9c:	2b00      	cmp	r3, #0
 8018f9e:	d030      	beq.n	8019002 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x94>
	  if (size() > 0
 8018fa0:	68b8      	ldr	r0, [r7, #8]
 8018fa2:	f000 f9e7 	bl	8019374 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE4sizeEv>
 8018fa6:	4603      	mov	r3, r0
	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
 8018fa8:	2b00      	cmp	r3, #0
 8018faa:	d013      	beq.n	8018fd4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x66>
 8018fac:	68bc      	ldr	r4, [r7, #8]
 8018fae:	68b8      	ldr	r0, [r7, #8]
 8018fb0:	f000 f9ec 	bl	801938c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_rightmostEv>
 8018fb4:	4603      	mov	r3, r0
 8018fb6:	681b      	ldr	r3, [r3, #0]
 8018fb8:	4618      	mov	r0, r3
 8018fba:	f7ff ff3d 	bl	8018e38 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8018fbe:	4603      	mov	r3, r0
 8018fc0:	683a      	ldr	r2, [r7, #0]
 8018fc2:	4619      	mov	r1, r3
 8018fc4:	4620      	mov	r0, r4
 8018fc6:	f7ec fb71 	bl	80056ac <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8018fca:	4603      	mov	r3, r0
 8018fcc:	2b00      	cmp	r3, #0
 8018fce:	d001      	beq.n	8018fd4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x66>
 8018fd0:	2301      	movs	r3, #1
 8018fd2:	e000      	b.n	8018fd6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x68>
 8018fd4:	2300      	movs	r3, #0
	  if (size() > 0
 8018fd6:	2b00      	cmp	r3, #0
 8018fd8:	d00c      	beq.n	8018ff4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x86>
	    return _Res(0, _M_rightmost());
 8018fda:	2300      	movs	r3, #0
 8018fdc:	61fb      	str	r3, [r7, #28]
 8018fde:	68b8      	ldr	r0, [r7, #8]
 8018fe0:	f000 f9d4 	bl	801938c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_rightmostEv>
 8018fe4:	4602      	mov	r2, r0
 8018fe6:	f107 031c 	add.w	r3, r7, #28
 8018fea:	4619      	mov	r1, r3
 8018fec:	68f8      	ldr	r0, [r7, #12]
 8018fee:	f7ec f9dd 	bl	80053ac <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 8018ff2:	e0db      	b.n	80191ac <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
	    return _M_get_insert_unique_pos(__k);
 8018ff4:	68fb      	ldr	r3, [r7, #12]
 8018ff6:	683a      	ldr	r2, [r7, #0]
 8018ff8:	68b9      	ldr	r1, [r7, #8]
 8018ffa:	4618      	mov	r0, r3
 8018ffc:	f000 f9d2 	bl	80193a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_>
 8019000:	e0d4      	b.n	80191ac <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
      else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
 8019002:	68bc      	ldr	r4, [r7, #8]
 8019004:	69bb      	ldr	r3, [r7, #24]
 8019006:	4618      	mov	r0, r3
 8019008:	f7ff ff16 	bl	8018e38 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 801900c:	4603      	mov	r3, r0
 801900e:	461a      	mov	r2, r3
 8019010:	6839      	ldr	r1, [r7, #0]
 8019012:	4620      	mov	r0, r4
 8019014:	f7ec fb4a 	bl	80056ac <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8019018:	4603      	mov	r3, r0
 801901a:	2b00      	cmp	r3, #0
 801901c:	d057      	beq.n	80190ce <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x160>
	  iterator __before = __pos;
 801901e:	69bb      	ldr	r3, [r7, #24]
 8019020:	617b      	str	r3, [r7, #20]
	  if (__pos._M_node == _M_leftmost()) // begin()
 8019022:	69bc      	ldr	r4, [r7, #24]
 8019024:	68b8      	ldr	r0, [r7, #8]
 8019026:	f000 fa42 	bl	80194ae <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_leftmostEv>
 801902a:	4603      	mov	r3, r0
 801902c:	681b      	ldr	r3, [r3, #0]
 801902e:	429c      	cmp	r4, r3
 8019030:	bf0c      	ite	eq
 8019032:	2301      	moveq	r3, #1
 8019034:	2300      	movne	r3, #0
 8019036:	b2db      	uxtb	r3, r3
 8019038:	2b00      	cmp	r3, #0
 801903a:	d00d      	beq.n	8019058 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0xea>
	    return _Res(_M_leftmost(), _M_leftmost());
 801903c:	68b8      	ldr	r0, [r7, #8]
 801903e:	f000 fa36 	bl	80194ae <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_leftmostEv>
 8019042:	4604      	mov	r4, r0
 8019044:	68b8      	ldr	r0, [r7, #8]
 8019046:	f000 fa32 	bl	80194ae <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_leftmostEv>
 801904a:	4603      	mov	r3, r0
 801904c:	461a      	mov	r2, r3
 801904e:	4621      	mov	r1, r4
 8019050:	68f8      	ldr	r0, [r7, #12]
 8019052:	f7ec fa52 	bl	80054fa <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
 8019056:	e0a9      	b.n	80191ac <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
 8019058:	68bc      	ldr	r4, [r7, #8]
 801905a:	f107 0314 	add.w	r3, r7, #20
 801905e:	4618      	mov	r0, r3
 8019060:	f000 fa31 	bl	80194c6 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEmmEv>
 8019064:	4603      	mov	r3, r0
 8019066:	681b      	ldr	r3, [r3, #0]
 8019068:	4618      	mov	r0, r3
 801906a:	f7ff fee5 	bl	8018e38 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 801906e:	4603      	mov	r3, r0
 8019070:	683a      	ldr	r2, [r7, #0]
 8019072:	4619      	mov	r1, r3
 8019074:	4620      	mov	r0, r4
 8019076:	f7ec fb19 	bl	80056ac <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 801907a:	4603      	mov	r3, r0
 801907c:	2b00      	cmp	r3, #0
 801907e:	d01f      	beq.n	80190c0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x152>
	      if (_S_right(__before._M_node) == 0)
 8019080:	697b      	ldr	r3, [r7, #20]
 8019082:	4618      	mov	r0, r3
 8019084:	f7ff fe72 	bl	8018d6c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_S_rightEPSt18_Rb_tree_node_base>
 8019088:	4603      	mov	r3, r0
 801908a:	2b00      	cmp	r3, #0
 801908c:	bf0c      	ite	eq
 801908e:	2301      	moveq	r3, #1
 8019090:	2300      	movne	r3, #0
 8019092:	b2db      	uxtb	r3, r3
 8019094:	2b00      	cmp	r3, #0
 8019096:	d00a      	beq.n	80190ae <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x140>
		return _Res(0, __before._M_node);
 8019098:	2300      	movs	r3, #0
 801909a:	623b      	str	r3, [r7, #32]
 801909c:	f107 0214 	add.w	r2, r7, #20
 80190a0:	f107 0320 	add.w	r3, r7, #32
 80190a4:	4619      	mov	r1, r3
 80190a6:	68f8      	ldr	r0, [r7, #12]
 80190a8:	f7ec f980 	bl	80053ac <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 80190ac:	e07e      	b.n	80191ac <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
		return _Res(__pos._M_node, __pos._M_node);
 80190ae:	f107 0218 	add.w	r2, r7, #24
 80190b2:	f107 0318 	add.w	r3, r7, #24
 80190b6:	4619      	mov	r1, r3
 80190b8:	68f8      	ldr	r0, [r7, #12]
 80190ba:	f7ec fa1e 	bl	80054fa <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
 80190be:	e075      	b.n	80191ac <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
	    return _M_get_insert_unique_pos(__k);
 80190c0:	68fb      	ldr	r3, [r7, #12]
 80190c2:	683a      	ldr	r2, [r7, #0]
 80190c4:	68b9      	ldr	r1, [r7, #8]
 80190c6:	4618      	mov	r0, r3
 80190c8:	f000 f96c 	bl	80193a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_>
 80190cc:	e06e      	b.n	80191ac <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
      else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
 80190ce:	68bc      	ldr	r4, [r7, #8]
 80190d0:	69bb      	ldr	r3, [r7, #24]
 80190d2:	4618      	mov	r0, r3
 80190d4:	f7ff feb0 	bl	8018e38 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 80190d8:	4603      	mov	r3, r0
 80190da:	683a      	ldr	r2, [r7, #0]
 80190dc:	4619      	mov	r1, r3
 80190de:	4620      	mov	r0, r4
 80190e0:	f7ec fae4 	bl	80056ac <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 80190e4:	4603      	mov	r3, r0
 80190e6:	2b00      	cmp	r3, #0
 80190e8:	d056      	beq.n	8019198 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x22a>
	  iterator __after = __pos;
 80190ea:	69bb      	ldr	r3, [r7, #24]
 80190ec:	613b      	str	r3, [r7, #16]
	  if (__pos._M_node == _M_rightmost())
 80190ee:	69bc      	ldr	r4, [r7, #24]
 80190f0:	68b8      	ldr	r0, [r7, #8]
 80190f2:	f000 f94b 	bl	801938c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_rightmostEv>
 80190f6:	4603      	mov	r3, r0
 80190f8:	681b      	ldr	r3, [r3, #0]
 80190fa:	429c      	cmp	r4, r3
 80190fc:	bf0c      	ite	eq
 80190fe:	2301      	moveq	r3, #1
 8019100:	2300      	movne	r3, #0
 8019102:	b2db      	uxtb	r3, r3
 8019104:	2b00      	cmp	r3, #0
 8019106:	d00c      	beq.n	8019122 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x1b4>
	    return _Res(0, _M_rightmost());
 8019108:	2300      	movs	r3, #0
 801910a:	627b      	str	r3, [r7, #36]	; 0x24
 801910c:	68b8      	ldr	r0, [r7, #8]
 801910e:	f000 f93d 	bl	801938c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_rightmostEv>
 8019112:	4602      	mov	r2, r0
 8019114:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8019118:	4619      	mov	r1, r3
 801911a:	68f8      	ldr	r0, [r7, #12]
 801911c:	f7ec f946 	bl	80053ac <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 8019120:	e044      	b.n	80191ac <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
 8019122:	68bc      	ldr	r4, [r7, #8]
 8019124:	f107 0310 	add.w	r3, r7, #16
 8019128:	4618      	mov	r0, r3
 801912a:	f000 f9dd 	bl	80194e8 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEppEv>
 801912e:	4603      	mov	r3, r0
 8019130:	681b      	ldr	r3, [r3, #0]
 8019132:	4618      	mov	r0, r3
 8019134:	f7ff fe80 	bl	8018e38 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8019138:	4603      	mov	r3, r0
 801913a:	461a      	mov	r2, r3
 801913c:	6839      	ldr	r1, [r7, #0]
 801913e:	4620      	mov	r0, r4
 8019140:	f7ec fab4 	bl	80056ac <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8019144:	4603      	mov	r3, r0
 8019146:	2b00      	cmp	r3, #0
 8019148:	d01f      	beq.n	801918a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x21c>
	      if (_S_right(__pos._M_node) == 0)
 801914a:	69bb      	ldr	r3, [r7, #24]
 801914c:	4618      	mov	r0, r3
 801914e:	f7ff fe0d 	bl	8018d6c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_S_rightEPSt18_Rb_tree_node_base>
 8019152:	4603      	mov	r3, r0
 8019154:	2b00      	cmp	r3, #0
 8019156:	bf0c      	ite	eq
 8019158:	2301      	moveq	r3, #1
 801915a:	2300      	movne	r3, #0
 801915c:	b2db      	uxtb	r3, r3
 801915e:	2b00      	cmp	r3, #0
 8019160:	d00a      	beq.n	8019178 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x20a>
		return _Res(0, __pos._M_node);
 8019162:	2300      	movs	r3, #0
 8019164:	62bb      	str	r3, [r7, #40]	; 0x28
 8019166:	f107 0218 	add.w	r2, r7, #24
 801916a:	f107 0328 	add.w	r3, r7, #40	; 0x28
 801916e:	4619      	mov	r1, r3
 8019170:	68f8      	ldr	r0, [r7, #12]
 8019172:	f7ec f91b 	bl	80053ac <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 8019176:	e019      	b.n	80191ac <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
		return _Res(__after._M_node, __after._M_node);
 8019178:	f107 0210 	add.w	r2, r7, #16
 801917c:	f107 0310 	add.w	r3, r7, #16
 8019180:	4619      	mov	r1, r3
 8019182:	68f8      	ldr	r0, [r7, #12]
 8019184:	f7ec f9b9 	bl	80054fa <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
 8019188:	e010      	b.n	80191ac <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
	    return _M_get_insert_unique_pos(__k);
 801918a:	68fb      	ldr	r3, [r7, #12]
 801918c:	683a      	ldr	r2, [r7, #0]
 801918e:	68b9      	ldr	r1, [r7, #8]
 8019190:	4618      	mov	r0, r3
 8019192:	f000 f907 	bl	80193a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_>
 8019196:	e009      	b.n	80191ac <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
	return _Res(__pos._M_node, 0);
 8019198:	2300      	movs	r3, #0
 801919a:	62fb      	str	r3, [r7, #44]	; 0x2c
 801919c:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 80191a0:	f107 0318 	add.w	r3, r7, #24
 80191a4:	4619      	mov	r1, r3
 80191a6:	68f8      	ldr	r0, [r7, #12]
 80191a8:	f7ec f9e2 	bl	8005570 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_>
    }
 80191ac:	68f8      	ldr	r0, [r7, #12]
 80191ae:	3734      	adds	r7, #52	; 0x34
 80191b0:	46bd      	mov	sp, r7
 80191b2:	bd90      	pop	{r4, r7, pc}

080191b4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt13_Rb_tree_nodeIS9_E>:
      _S_key(_Const_Link_type __x)
 80191b4:	b580      	push	{r7, lr}
 80191b6:	b084      	sub	sp, #16
 80191b8:	af00      	add	r7, sp, #0
 80191ba:	6078      	str	r0, [r7, #4]
	return _KeyOfValue()(*__x->_M_valptr());
 80191bc:	6878      	ldr	r0, [r7, #4]
 80191be:	f000 f9a4 	bl	801950a <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE9_M_valptrEv>
 80191c2:	4602      	mov	r2, r0
 80191c4:	f107 030c 	add.w	r3, r7, #12
 80191c8:	4611      	mov	r1, r2
 80191ca:	4618      	mov	r0, r3
 80191cc:	f000 f9ab 	bl	8019526 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEclERKS9_>
 80191d0:	4603      	mov	r3, r0
      }
 80191d2:	4618      	mov	r0, r3
 80191d4:	3710      	adds	r7, #16
 80191d6:	46bd      	mov	sp, r7
 80191d8:	bd80      	pop	{r7, pc}

080191da <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSH_PSt13_Rb_tree_nodeIS9_E>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 80191da:	b5b0      	push	{r4, r5, r7, lr}
 80191dc:	b086      	sub	sp, #24
 80191de:	af00      	add	r7, sp, #0
 80191e0:	60f8      	str	r0, [r7, #12]
 80191e2:	60b9      	str	r1, [r7, #8]
 80191e4:	607a      	str	r2, [r7, #4]
 80191e6:	603b      	str	r3, [r7, #0]
			    || _M_impl._M_key_compare(_S_key(__z),
 80191e8:	68bb      	ldr	r3, [r7, #8]
 80191ea:	2b00      	cmp	r3, #0
 80191ec:	d117      	bne.n	801921e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSH_PSt13_Rb_tree_nodeIS9_E+0x44>
      bool __insert_left = (__x != 0 || __p == _M_end()
 80191ee:	68f8      	ldr	r0, [r7, #12]
 80191f0:	f7ff fde5 	bl	8018dbe <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_M_endEv>
 80191f4:	4602      	mov	r2, r0
 80191f6:	687b      	ldr	r3, [r7, #4]
 80191f8:	4293      	cmp	r3, r2
 80191fa:	d010      	beq.n	801921e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSH_PSt13_Rb_tree_nodeIS9_E+0x44>
			    || _M_impl._M_key_compare(_S_key(__z),
 80191fc:	68fc      	ldr	r4, [r7, #12]
 80191fe:	6838      	ldr	r0, [r7, #0]
 8019200:	f7ff ffd8 	bl	80191b4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt13_Rb_tree_nodeIS9_E>
 8019204:	4605      	mov	r5, r0
 8019206:	6878      	ldr	r0, [r7, #4]
 8019208:	f7ff fe16 	bl	8018e38 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 801920c:	4603      	mov	r3, r0
 801920e:	461a      	mov	r2, r3
 8019210:	4629      	mov	r1, r5
 8019212:	4620      	mov	r0, r4
 8019214:	f7ec fa4a 	bl	80056ac <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8019218:	4603      	mov	r3, r0
 801921a:	2b00      	cmp	r3, #0
 801921c:	d001      	beq.n	8019222 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSH_PSt13_Rb_tree_nodeIS9_E+0x48>
 801921e:	2301      	movs	r3, #1
 8019220:	e000      	b.n	8019224 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSH_PSt13_Rb_tree_nodeIS9_E+0x4a>
 8019222:	2300      	movs	r3, #0
      bool __insert_left = (__x != 0 || __p == _M_end()
 8019224:	75fb      	strb	r3, [r7, #23]
				    this->_M_impl._M_header);
 8019226:	68fb      	ldr	r3, [r7, #12]
 8019228:	3304      	adds	r3, #4
      _Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
 801922a:	7df8      	ldrb	r0, [r7, #23]
 801922c:	687a      	ldr	r2, [r7, #4]
 801922e:	6839      	ldr	r1, [r7, #0]
 8019230:	f009 fb62 	bl	80228f8 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
      ++_M_impl._M_node_count;
 8019234:	68fb      	ldr	r3, [r7, #12]
 8019236:	695b      	ldr	r3, [r3, #20]
 8019238:	1c5a      	adds	r2, r3, #1
 801923a:	68fb      	ldr	r3, [r7, #12]
 801923c:	615a      	str	r2, [r3, #20]
      return iterator(__z);
 801923e:	f107 0310 	add.w	r3, r7, #16
 8019242:	6839      	ldr	r1, [r7, #0]
 8019244:	4618      	mov	r0, r3
 8019246:	f7ff fe03 	bl	8018e50 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEC1EPSt18_Rb_tree_node_base>
 801924a:	693b      	ldr	r3, [r7, #16]
    }
 801924c:	4618      	mov	r0, r3
 801924e:	3718      	adds	r7, #24
 8019250:	46bd      	mov	sp, r7
 8019252:	bdb0      	pop	{r4, r5, r7, pc}

08019254 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS9_E>:
      _M_destroy_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 8019254:	b590      	push	{r4, r7, lr}
 8019256:	b083      	sub	sp, #12
 8019258:	af00      	add	r7, sp, #0
 801925a:	6078      	str	r0, [r7, #4]
 801925c:	6039      	str	r1, [r7, #0]
	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
 801925e:	6878      	ldr	r0, [r7, #4]
 8019260:	f000 f96d 	bl	801953e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE21_M_get_Node_allocatorEv>
 8019264:	4604      	mov	r4, r0
 8019266:	6838      	ldr	r0, [r7, #0]
 8019268:	f7ff fce0 	bl	8018c2c <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE9_M_valptrEv>
 801926c:	4603      	mov	r3, r0
 801926e:	4619      	mov	r1, r3
 8019270:	4620      	mov	r0, r4
 8019272:	f000 f96f 	bl	8019554 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEE7destroyISA_EEvRSC_PT_>
      }
 8019276:	bf00      	nop
 8019278:	370c      	adds	r7, #12
 801927a:	46bd      	mov	sp, r7
 801927c:	bd90      	pop	{r4, r7, pc}

0801927e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS9_E>:
      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 801927e:	b580      	push	{r7, lr}
 8019280:	b082      	sub	sp, #8
 8019282:	af00      	add	r7, sp, #0
 8019284:	6078      	str	r0, [r7, #4]
 8019286:	6039      	str	r1, [r7, #0]
      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
 8019288:	6878      	ldr	r0, [r7, #4]
 801928a:	f000 f958 	bl	801953e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE21_M_get_Node_allocatorEv>
 801928e:	4603      	mov	r3, r0
 8019290:	2201      	movs	r2, #1
 8019292:	6839      	ldr	r1, [r7, #0]
 8019294:	4618      	mov	r0, r3
 8019296:	f000 f96a 	bl	801956e <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEE10deallocateERSC_PSB_j>
 801929a:	bf00      	nop
 801929c:	3708      	adds	r7, #8
 801929e:	46bd      	mov	sp, r7
 80192a0:	bd80      	pop	{r7, pc}

080192a2 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE7_M_addrEv>:
      _M_addr() noexcept
 80192a2:	b480      	push	{r7}
 80192a4:	b083      	sub	sp, #12
 80192a6:	af00      	add	r7, sp, #0
 80192a8:	6078      	str	r0, [r7, #4]
      { return static_cast<void*>(&_M_storage); }
 80192aa:	687b      	ldr	r3, [r7, #4]
 80192ac:	4618      	mov	r0, r3
 80192ae:	370c      	adds	r7, #12
 80192b0:	46bd      	mov	sp, r7
 80192b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80192b6:	4770      	bx	lr

080192b8 <_ZNSt10_Head_baseILj0ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1ES7_>:
      constexpr _Head_base(const _Head& __h)
 80192b8:	b480      	push	{r7}
 80192ba:	b083      	sub	sp, #12
 80192bc:	af00      	add	r7, sp, #0
 80192be:	6078      	str	r0, [r7, #4]
 80192c0:	6039      	str	r1, [r7, #0]
      : _M_head_impl(__h) { }
 80192c2:	687b      	ldr	r3, [r7, #4]
 80192c4:	683a      	ldr	r2, [r7, #0]
 80192c6:	601a      	str	r2, [r3, #0]
 80192c8:	687b      	ldr	r3, [r7, #4]
 80192ca:	4618      	mov	r0, r3
 80192cc:	370c      	adds	r7, #12
 80192ce:	46bd      	mov	sp, r7
 80192d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80192d4:	4770      	bx	lr

080192d6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_get_nodeEv>:
      _M_get_node()
 80192d6:	b580      	push	{r7, lr}
 80192d8:	b082      	sub	sp, #8
 80192da:	af00      	add	r7, sp, #0
 80192dc:	6078      	str	r0, [r7, #4]
      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
 80192de:	6878      	ldr	r0, [r7, #4]
 80192e0:	f000 f92d 	bl	801953e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE21_M_get_Node_allocatorEv>
 80192e4:	4603      	mov	r3, r0
 80192e6:	2101      	movs	r1, #1
 80192e8:	4618      	mov	r0, r3
 80192ea:	f000 f94f 	bl	801958c <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEE8allocateERSC_j>
 80192ee:	4603      	mov	r3, r0
 80192f0:	4618      	mov	r0, r3
 80192f2:	3708      	adds	r7, #8
 80192f4:	46bd      	mov	sp, r7
 80192f6:	bd80      	pop	{r7, pc}

080192f8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESK_IJEEEEEvPSt13_Rb_tree_nodeIS9_EDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
 80192f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80192fc:	b086      	sub	sp, #24
 80192fe:	af02      	add	r7, sp, #8
 8019300:	60f8      	str	r0, [r7, #12]
 8019302:	60b9      	str	r1, [r7, #8]
 8019304:	607a      	str	r2, [r7, #4]
 8019306:	603b      	str	r3, [r7, #0]
	      ::new(__node) _Rb_tree_node<_Val>;
 8019308:	68bb      	ldr	r3, [r7, #8]
 801930a:	4619      	mov	r1, r3
 801930c:	2048      	movs	r0, #72	; 0x48
 801930e:	f7e7 fea4 	bl	800105a <_ZnwjPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
 8019312:	68f8      	ldr	r0, [r7, #12]
 8019314:	f000 f913 	bl	801953e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE21_M_get_Node_allocatorEv>
 8019318:	4604      	mov	r4, r0
 801931a:	68b8      	ldr	r0, [r7, #8]
 801931c:	f7ff fc86 	bl	8018c2c <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE9_M_valptrEv>
 8019320:	4605      	mov	r5, r0
 8019322:	6878      	ldr	r0, [r7, #4]
 8019324:	f7ff fddf 	bl	8018ee6 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
 8019328:	4606      	mov	r6, r0
 801932a:	6838      	ldr	r0, [r7, #0]
 801932c:	f7ff fde6 	bl	8018efc <_ZSt7forwardISt5tupleIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceISA_E4typeE>
 8019330:	4680      	mov	r8, r0
 8019332:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8019334:	f7ff fded 	bl	8018f12 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
 8019338:	4603      	mov	r3, r0
 801933a:	9300      	str	r3, [sp, #0]
 801933c:	4643      	mov	r3, r8
 801933e:	4632      	mov	r2, r6
 8019340:	4629      	mov	r1, r5
 8019342:	4620      	mov	r0, r4
 8019344:	f000 f931 	bl	80195aa <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEE9constructISA_JRKSt21piecewise_construct_tSt5tupleIJRS8_EESI_IJEEEEEvRSC_PT_DpOT0_>
	}
 8019348:	bf00      	nop
 801934a:	3710      	adds	r7, #16
 801934c:	46bd      	mov	sp, r7
 801934e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08019352 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE13_M_const_castEv>:
      _M_const_cast() const _GLIBCXX_NOEXCEPT
 8019352:	b580      	push	{r7, lr}
 8019354:	b084      	sub	sp, #16
 8019356:	af00      	add	r7, sp, #0
 8019358:	6078      	str	r0, [r7, #4]
      { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
 801935a:	687b      	ldr	r3, [r7, #4]
 801935c:	681a      	ldr	r2, [r3, #0]
 801935e:	f107 030c 	add.w	r3, r7, #12
 8019362:	4611      	mov	r1, r2
 8019364:	4618      	mov	r0, r3
 8019366:	f7ff fd73 	bl	8018e50 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEC1EPSt18_Rb_tree_node_base>
 801936a:	68fb      	ldr	r3, [r7, #12]
 801936c:	4618      	mov	r0, r3
 801936e:	3710      	adds	r7, #16
 8019370:	46bd      	mov	sp, r7
 8019372:	bd80      	pop	{r7, pc}

08019374 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 8019374:	b480      	push	{r7}
 8019376:	b083      	sub	sp, #12
 8019378:	af00      	add	r7, sp, #0
 801937a:	6078      	str	r0, [r7, #4]
      { return _M_impl._M_node_count; }
 801937c:	687b      	ldr	r3, [r7, #4]
 801937e:	695b      	ldr	r3, [r3, #20]
 8019380:	4618      	mov	r0, r3
 8019382:	370c      	adds	r7, #12
 8019384:	46bd      	mov	sp, r7
 8019386:	f85d 7b04 	ldr.w	r7, [sp], #4
 801938a:	4770      	bx	lr

0801938c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_rightmostEv>:
      _M_rightmost() _GLIBCXX_NOEXCEPT
 801938c:	b480      	push	{r7}
 801938e:	b083      	sub	sp, #12
 8019390:	af00      	add	r7, sp, #0
 8019392:	6078      	str	r0, [r7, #4]
      { return this->_M_impl._M_header._M_right; }
 8019394:	687b      	ldr	r3, [r7, #4]
 8019396:	3310      	adds	r3, #16
 8019398:	4618      	mov	r0, r3
 801939a:	370c      	adds	r7, #12
 801939c:	46bd      	mov	sp, r7
 801939e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80193a2:	4770      	bx	lr

080193a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 80193a4:	b590      	push	{r4, r7, lr}
 80193a6:	b08b      	sub	sp, #44	; 0x2c
 80193a8:	af00      	add	r7, sp, #0
 80193aa:	60f8      	str	r0, [r7, #12]
 80193ac:	60b9      	str	r1, [r7, #8]
 80193ae:	607a      	str	r2, [r7, #4]
      _Link_type __x = _M_begin();
 80193b0:	68b8      	ldr	r0, [r7, #8]
 80193b2:	f7ff fbe2 	bl	8018b7a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_beginEv>
 80193b6:	4603      	mov	r3, r0
 80193b8:	61bb      	str	r3, [r7, #24]
      _Base_ptr __y = _M_end();
 80193ba:	68b8      	ldr	r0, [r7, #8]
 80193bc:	f7ff fcff 	bl	8018dbe <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_M_endEv>
 80193c0:	4603      	mov	r3, r0
 80193c2:	617b      	str	r3, [r7, #20]
      bool __comp = true;
 80193c4:	2301      	movs	r3, #1
 80193c6:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
      while (__x != 0)
 80193ca:	69bb      	ldr	r3, [r7, #24]
 80193cc:	2b00      	cmp	r3, #0
 80193ce:	d020      	beq.n	8019412 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0x6e>
	  __y = __x;
 80193d0:	69bb      	ldr	r3, [r7, #24]
 80193d2:	617b      	str	r3, [r7, #20]
	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
 80193d4:	68bc      	ldr	r4, [r7, #8]
 80193d6:	69bb      	ldr	r3, [r7, #24]
 80193d8:	4618      	mov	r0, r3
 80193da:	f7ff feeb 	bl	80191b4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt13_Rb_tree_nodeIS9_E>
 80193de:	4603      	mov	r3, r0
 80193e0:	461a      	mov	r2, r3
 80193e2:	6879      	ldr	r1, [r7, #4]
 80193e4:	4620      	mov	r0, r4
 80193e6:	f7ec f961 	bl	80056ac <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 80193ea:	4603      	mov	r3, r0
 80193ec:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
	  __x = __comp ? _S_left(__x) : _S_right(__x);
 80193f0:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 80193f4:	2b00      	cmp	r3, #0
 80193f6:	d005      	beq.n	8019404 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0x60>
 80193f8:	69bb      	ldr	r3, [r7, #24]
 80193fa:	4618      	mov	r0, r3
 80193fc:	f7ff fcc2 	bl	8018d84 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE7_S_leftEPSt18_Rb_tree_node_base>
 8019400:	4603      	mov	r3, r0
 8019402:	e004      	b.n	801940e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0x6a>
 8019404:	69bb      	ldr	r3, [r7, #24]
 8019406:	4618      	mov	r0, r3
 8019408:	f7ff fcb0 	bl	8018d6c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_S_rightEPSt18_Rb_tree_node_base>
 801940c:	4603      	mov	r3, r0
 801940e:	61bb      	str	r3, [r7, #24]
      while (__x != 0)
 8019410:	e7db      	b.n	80193ca <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0x26>
      iterator __j = iterator(__y);
 8019412:	697a      	ldr	r2, [r7, #20]
 8019414:	f107 0310 	add.w	r3, r7, #16
 8019418:	4611      	mov	r1, r2
 801941a:	4618      	mov	r0, r3
 801941c:	f7ff fd18 	bl	8018e50 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEC1EPSt18_Rb_tree_node_base>
      if (__comp)
 8019420:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8019424:	2b00      	cmp	r3, #0
 8019426:	d01d      	beq.n	8019464 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0xc0>
	  if (__j == begin())
 8019428:	68b8      	ldr	r0, [r7, #8]
 801942a:	f000 f8dc 	bl	80195e6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE5beginEv>
 801942e:	4603      	mov	r3, r0
 8019430:	61fb      	str	r3, [r7, #28]
 8019432:	f107 021c 	add.w	r2, r7, #28
 8019436:	f107 0310 	add.w	r3, r7, #16
 801943a:	4611      	mov	r1, r2
 801943c:	4618      	mov	r0, r3
 801943e:	f7ff faf2 	bl	8018a26 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEESC_>
 8019442:	4603      	mov	r3, r0
 8019444:	2b00      	cmp	r3, #0
 8019446:	d008      	beq.n	801945a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0xb6>
	    return _Res(__x, __y);
 8019448:	f107 0214 	add.w	r2, r7, #20
 801944c:	f107 0318 	add.w	r3, r7, #24
 8019450:	4619      	mov	r1, r3
 8019452:	68f8      	ldr	r0, [r7, #12]
 8019454:	f000 f8d8 	bl	8019608 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEERS1_Lb1EEEOT_OT0_>
 8019458:	e025      	b.n	80194a6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0x102>
	    --__j;
 801945a:	f107 0310 	add.w	r3, r7, #16
 801945e:	4618      	mov	r0, r3
 8019460:	f000 f831 	bl	80194c6 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEmmEv>
      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
 8019464:	68bc      	ldr	r4, [r7, #8]
 8019466:	693b      	ldr	r3, [r7, #16]
 8019468:	4618      	mov	r0, r3
 801946a:	f7ff fce5 	bl	8018e38 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 801946e:	4603      	mov	r3, r0
 8019470:	687a      	ldr	r2, [r7, #4]
 8019472:	4619      	mov	r1, r3
 8019474:	4620      	mov	r0, r4
 8019476:	f7ec f919 	bl	80056ac <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 801947a:	4603      	mov	r3, r0
 801947c:	2b00      	cmp	r3, #0
 801947e:	d008      	beq.n	8019492 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0xee>
	return _Res(__x, __y);
 8019480:	f107 0214 	add.w	r2, r7, #20
 8019484:	f107 0318 	add.w	r3, r7, #24
 8019488:	4619      	mov	r1, r3
 801948a:	68f8      	ldr	r0, [r7, #12]
 801948c:	f000 f8bc 	bl	8019608 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEERS1_Lb1EEEOT_OT0_>
 8019490:	e009      	b.n	80194a6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0x102>
      return _Res(__j._M_node, 0);
 8019492:	2300      	movs	r3, #0
 8019494:	623b      	str	r3, [r7, #32]
 8019496:	f107 0220 	add.w	r2, r7, #32
 801949a:	f107 0310 	add.w	r3, r7, #16
 801949e:	4619      	mov	r1, r3
 80194a0:	68f8      	ldr	r0, [r7, #12]
 80194a2:	f7ec f865 	bl	8005570 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_>
    }
 80194a6:	68f8      	ldr	r0, [r7, #12]
 80194a8:	372c      	adds	r7, #44	; 0x2c
 80194aa:	46bd      	mov	sp, r7
 80194ac:	bd90      	pop	{r4, r7, pc}

080194ae <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_leftmostEv>:
      _M_leftmost() _GLIBCXX_NOEXCEPT
 80194ae:	b480      	push	{r7}
 80194b0:	b083      	sub	sp, #12
 80194b2:	af00      	add	r7, sp, #0
 80194b4:	6078      	str	r0, [r7, #4]
      { return this->_M_impl._M_header._M_left; }
 80194b6:	687b      	ldr	r3, [r7, #4]
 80194b8:	330c      	adds	r3, #12
 80194ba:	4618      	mov	r0, r3
 80194bc:	370c      	adds	r7, #12
 80194be:	46bd      	mov	sp, r7
 80194c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80194c4:	4770      	bx	lr

080194c6 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEmmEv>:
      operator--() _GLIBCXX_NOEXCEPT
 80194c6:	b580      	push	{r7, lr}
 80194c8:	b082      	sub	sp, #8
 80194ca:	af00      	add	r7, sp, #0
 80194cc:	6078      	str	r0, [r7, #4]
	_M_node = _Rb_tree_decrement(_M_node);
 80194ce:	687b      	ldr	r3, [r7, #4]
 80194d0:	681b      	ldr	r3, [r3, #0]
 80194d2:	4618      	mov	r0, r3
 80194d4:	f009 fa0e 	bl	80228f4 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 80194d8:	4602      	mov	r2, r0
 80194da:	687b      	ldr	r3, [r7, #4]
 80194dc:	601a      	str	r2, [r3, #0]
	return *this;
 80194de:	687b      	ldr	r3, [r7, #4]
      }
 80194e0:	4618      	mov	r0, r3
 80194e2:	3708      	adds	r7, #8
 80194e4:	46bd      	mov	sp, r7
 80194e6:	bd80      	pop	{r7, pc}

080194e8 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
 80194e8:	b580      	push	{r7, lr}
 80194ea:	b082      	sub	sp, #8
 80194ec:	af00      	add	r7, sp, #0
 80194ee:	6078      	str	r0, [r7, #4]
	_M_node = _Rb_tree_increment(_M_node);
 80194f0:	687b      	ldr	r3, [r7, #4]
 80194f2:	681b      	ldr	r3, [r3, #0]
 80194f4:	4618      	mov	r0, r3
 80194f6:	f009 f9ea 	bl	80228ce <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
 80194fa:	4602      	mov	r2, r0
 80194fc:	687b      	ldr	r3, [r7, #4]
 80194fe:	601a      	str	r2, [r3, #0]
	return *this;
 8019500:	687b      	ldr	r3, [r7, #4]
      }
 8019502:	4618      	mov	r0, r3
 8019504:	3708      	adds	r7, #8
 8019506:	46bd      	mov	sp, r7
 8019508:	bd80      	pop	{r7, pc}

0801950a <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE9_M_valptrEv>:
      _M_valptr() const
 801950a:	b580      	push	{r7, lr}
 801950c:	b082      	sub	sp, #8
 801950e:	af00      	add	r7, sp, #0
 8019510:	6078      	str	r0, [r7, #4]
      { return _M_storage._M_ptr(); }
 8019512:	687b      	ldr	r3, [r7, #4]
 8019514:	3310      	adds	r3, #16
 8019516:	4618      	mov	r0, r3
 8019518:	f000 f88f 	bl	801963a <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE6_M_ptrEv>
 801951c:	4603      	mov	r3, r0
 801951e:	4618      	mov	r0, r3
 8019520:	3708      	adds	r7, #8
 8019522:	46bd      	mov	sp, r7
 8019524:	bd80      	pop	{r7, pc}

08019526 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEclERKS9_>:
      operator()(const _Pair& __x) const
 8019526:	b480      	push	{r7}
 8019528:	b083      	sub	sp, #12
 801952a:	af00      	add	r7, sp, #0
 801952c:	6078      	str	r0, [r7, #4]
 801952e:	6039      	str	r1, [r7, #0]
      { return __x.first; }
 8019530:	683b      	ldr	r3, [r7, #0]
 8019532:	4618      	mov	r0, r3
 8019534:	370c      	adds	r7, #12
 8019536:	46bd      	mov	sp, r7
 8019538:	f85d 7b04 	ldr.w	r7, [sp], #4
 801953c:	4770      	bx	lr

0801953e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE21_M_get_Node_allocatorEv>:
      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
 801953e:	b480      	push	{r7}
 8019540:	b083      	sub	sp, #12
 8019542:	af00      	add	r7, sp, #0
 8019544:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 8019546:	687b      	ldr	r3, [r7, #4]
 8019548:	4618      	mov	r0, r3
 801954a:	370c      	adds	r7, #12
 801954c:	46bd      	mov	sp, r7
 801954e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019552:	4770      	bx	lr

08019554 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEE7destroyISA_EEvRSC_PT_>:
	destroy(allocator_type& __a, _Up* __p)
 8019554:	b580      	push	{r7, lr}
 8019556:	b082      	sub	sp, #8
 8019558:	af00      	add	r7, sp, #0
 801955a:	6078      	str	r0, [r7, #4]
 801955c:	6039      	str	r1, [r7, #0]
	{ __a.destroy(__p); }
 801955e:	6839      	ldr	r1, [r7, #0]
 8019560:	6878      	ldr	r0, [r7, #4]
 8019562:	f000 f888 	bl	8019676 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE7destroyISB_EEvPT_>
 8019566:	bf00      	nop
 8019568:	3708      	adds	r7, #8
 801956a:	46bd      	mov	sp, r7
 801956c:	bd80      	pop	{r7, pc}

0801956e <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEE10deallocateERSC_PSB_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 801956e:	b580      	push	{r7, lr}
 8019570:	b084      	sub	sp, #16
 8019572:	af00      	add	r7, sp, #0
 8019574:	60f8      	str	r0, [r7, #12]
 8019576:	60b9      	str	r1, [r7, #8]
 8019578:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 801957a:	687a      	ldr	r2, [r7, #4]
 801957c:	68b9      	ldr	r1, [r7, #8]
 801957e:	68f8      	ldr	r0, [r7, #12]
 8019580:	f000 f885 	bl	801968e <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE10deallocateEPSC_j>
 8019584:	bf00      	nop
 8019586:	3710      	adds	r7, #16
 8019588:	46bd      	mov	sp, r7
 801958a:	bd80      	pop	{r7, pc}

0801958c <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEE8allocateERSC_j>:
      allocate(allocator_type& __a, size_type __n)
 801958c:	b580      	push	{r7, lr}
 801958e:	b082      	sub	sp, #8
 8019590:	af00      	add	r7, sp, #0
 8019592:	6078      	str	r0, [r7, #4]
 8019594:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 8019596:	2200      	movs	r2, #0
 8019598:	6839      	ldr	r1, [r7, #0]
 801959a:	6878      	ldr	r0, [r7, #4]
 801959c:	f000 f883 	bl	80196a6 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE8allocateEjPKv>
 80195a0:	4603      	mov	r3, r0
 80195a2:	4618      	mov	r0, r3
 80195a4:	3708      	adds	r7, #8
 80195a6:	46bd      	mov	sp, r7
 80195a8:	bd80      	pop	{r7, pc}

080195aa <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEE9constructISA_JRKSt21piecewise_construct_tSt5tupleIJRS8_EESI_IJEEEEEvRSC_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 80195aa:	b5b0      	push	{r4, r5, r7, lr}
 80195ac:	b086      	sub	sp, #24
 80195ae:	af02      	add	r7, sp, #8
 80195b0:	60f8      	str	r0, [r7, #12]
 80195b2:	60b9      	str	r1, [r7, #8]
 80195b4:	607a      	str	r2, [r7, #4]
 80195b6:	603b      	str	r3, [r7, #0]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 80195b8:	6878      	ldr	r0, [r7, #4]
 80195ba:	f7ff fc94 	bl	8018ee6 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
 80195be:	4604      	mov	r4, r0
 80195c0:	6838      	ldr	r0, [r7, #0]
 80195c2:	f7ff fc9b 	bl	8018efc <_ZSt7forwardISt5tupleIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceISA_E4typeE>
 80195c6:	4605      	mov	r5, r0
 80195c8:	6a38      	ldr	r0, [r7, #32]
 80195ca:	f7ff fca2 	bl	8018f12 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
 80195ce:	4603      	mov	r3, r0
 80195d0:	9300      	str	r3, [sp, #0]
 80195d2:	462b      	mov	r3, r5
 80195d4:	4622      	mov	r2, r4
 80195d6:	68b9      	ldr	r1, [r7, #8]
 80195d8:	68f8      	ldr	r0, [r7, #12]
 80195da:	f000 f896 	bl	801970a <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE9constructISB_JRKSt21piecewise_construct_tSt5tupleIJRS9_EESI_IJEEEEEvPT_DpOT0_>
 80195de:	bf00      	nop
 80195e0:	3710      	adds	r7, #16
 80195e2:	46bd      	mov	sp, r7
 80195e4:	bdb0      	pop	{r4, r5, r7, pc}

080195e6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 80195e6:	b580      	push	{r7, lr}
 80195e8:	b084      	sub	sp, #16
 80195ea:	af00      	add	r7, sp, #0
 80195ec:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_header._M_left); }
 80195ee:	687b      	ldr	r3, [r7, #4]
 80195f0:	68da      	ldr	r2, [r3, #12]
 80195f2:	f107 030c 	add.w	r3, r7, #12
 80195f6:	4611      	mov	r1, r2
 80195f8:	4618      	mov	r0, r3
 80195fa:	f7ff fc29 	bl	8018e50 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEC1EPSt18_Rb_tree_node_base>
 80195fe:	68fb      	ldr	r3, [r7, #12]
 8019600:	4618      	mov	r0, r3
 8019602:	3710      	adds	r7, #16
 8019604:	46bd      	mov	sp, r7
 8019606:	bd80      	pop	{r7, pc}

08019608 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEERS1_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 8019608:	b580      	push	{r7, lr}
 801960a:	b084      	sub	sp, #16
 801960c:	af00      	add	r7, sp, #0
 801960e:	60f8      	str	r0, [r7, #12]
 8019610:	60b9      	str	r1, [r7, #8]
 8019612:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 8019614:	68b8      	ldr	r0, [r7, #8]
 8019616:	f000 f89f 	bl	8019758 <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEOT_RNSt16remove_referenceISE_E4typeE>
 801961a:	4603      	mov	r3, r0
 801961c:	681a      	ldr	r2, [r3, #0]
 801961e:	68fb      	ldr	r3, [r7, #12]
 8019620:	601a      	str	r2, [r3, #0]
 8019622:	6878      	ldr	r0, [r7, #4]
 8019624:	f7ec ff13 	bl	800644e <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
 8019628:	4603      	mov	r3, r0
 801962a:	681a      	ldr	r2, [r3, #0]
 801962c:	68fb      	ldr	r3, [r7, #12]
 801962e:	605a      	str	r2, [r3, #4]
 8019630:	68fb      	ldr	r3, [r7, #12]
 8019632:	4618      	mov	r0, r3
 8019634:	3710      	adds	r7, #16
 8019636:	46bd      	mov	sp, r7
 8019638:	bd80      	pop	{r7, pc}

0801963a <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE6_M_ptrEv>:
      _M_ptr() const noexcept
 801963a:	b580      	push	{r7, lr}
 801963c:	b082      	sub	sp, #8
 801963e:	af00      	add	r7, sp, #0
 8019640:	6078      	str	r0, [r7, #4]
      { return static_cast<const _Tp*>(_M_addr()); }
 8019642:	6878      	ldr	r0, [r7, #4]
 8019644:	f000 f893 	bl	801976e <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE7_M_addrEv>
 8019648:	4603      	mov	r3, r0
 801964a:	4618      	mov	r0, r3
 801964c:	3708      	adds	r7, #8
 801964e:	46bd      	mov	sp, r7
 8019650:	bd80      	pop	{r7, pc}

08019652 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolED1Ev>:
    struct pair
 8019652:	b580      	push	{r7, lr}
 8019654:	b082      	sub	sp, #8
 8019656:	af00      	add	r7, sp, #0
 8019658:	6078      	str	r0, [r7, #4]
 801965a:	687b      	ldr	r3, [r7, #4]
 801965c:	3318      	adds	r3, #24
 801965e:	4618      	mov	r0, r3
 8019660:	f7e7 ff42 	bl	80014e8 <_ZN6SymbolD1Ev>
 8019664:	687b      	ldr	r3, [r7, #4]
 8019666:	4618      	mov	r0, r3
 8019668:	f009 fb7f 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801966c:	687b      	ldr	r3, [r7, #4]
 801966e:	4618      	mov	r0, r3
 8019670:	3708      	adds	r7, #8
 8019672:	46bd      	mov	sp, r7
 8019674:	bd80      	pop	{r7, pc}

08019676 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE7destroyISB_EEvPT_>:
	destroy(_Up* __p)
 8019676:	b580      	push	{r7, lr}
 8019678:	b082      	sub	sp, #8
 801967a:	af00      	add	r7, sp, #0
 801967c:	6078      	str	r0, [r7, #4]
 801967e:	6039      	str	r1, [r7, #0]
	{ __p->~_Up(); }
 8019680:	6838      	ldr	r0, [r7, #0]
 8019682:	f7ff ffe6 	bl	8019652 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolED1Ev>
 8019686:	bf00      	nop
 8019688:	3708      	adds	r7, #8
 801968a:	46bd      	mov	sp, r7
 801968c:	bd80      	pop	{r7, pc}

0801968e <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE10deallocateEPSC_j>:
      deallocate(pointer __p, size_type)
 801968e:	b580      	push	{r7, lr}
 8019690:	b084      	sub	sp, #16
 8019692:	af00      	add	r7, sp, #0
 8019694:	60f8      	str	r0, [r7, #12]
 8019696:	60b9      	str	r1, [r7, #8]
 8019698:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 801969a:	68b8      	ldr	r0, [r7, #8]
 801969c:	f009 f8b0 	bl	8022800 <_ZdlPv>
      }
 80196a0:	3710      	adds	r7, #16
 80196a2:	46bd      	mov	sp, r7
 80196a4:	bd80      	pop	{r7, pc}

080196a6 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 80196a6:	b580      	push	{r7, lr}
 80196a8:	b084      	sub	sp, #16
 80196aa:	af00      	add	r7, sp, #0
 80196ac:	60f8      	str	r0, [r7, #12]
 80196ae:	60b9      	str	r1, [r7, #8]
 80196b0:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 80196b2:	68f8      	ldr	r0, [r7, #12]
 80196b4:	f000 f866 	bl	8019784 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE8max_sizeEv>
 80196b8:	4602      	mov	r2, r0
 80196ba:	68bb      	ldr	r3, [r7, #8]
 80196bc:	4293      	cmp	r3, r2
 80196be:	bf8c      	ite	hi
 80196c0:	2301      	movhi	r3, #1
 80196c2:	2300      	movls	r3, #0
 80196c4:	b2db      	uxtb	r3, r3
 80196c6:	2b00      	cmp	r3, #0
 80196c8:	d001      	beq.n	80196ce <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 80196ca:	f009 f971 	bl	80229b0 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 80196ce:	68ba      	ldr	r2, [r7, #8]
 80196d0:	4613      	mov	r3, r2
 80196d2:	00db      	lsls	r3, r3, #3
 80196d4:	4413      	add	r3, r2
 80196d6:	00db      	lsls	r3, r3, #3
 80196d8:	4618      	mov	r0, r3
 80196da:	f009 f8a4 	bl	8022826 <_Znwj>
 80196de:	4603      	mov	r3, r0
 80196e0:	bf00      	nop
      }
 80196e2:	4618      	mov	r0, r3
 80196e4:	3710      	adds	r7, #16
 80196e6:	46bd      	mov	sp, r7
 80196e8:	bd80      	pop	{r7, pc}

080196ea <_ZNSt5tupleIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS8_>:
        explicit constexpr tuple(_UElements&&... __elements)
	: _Inherited(std::forward<_UElements>(__elements)...) {	}

      constexpr tuple(const tuple&) = default;

      constexpr tuple(tuple&&) = default;
 80196ea:	b580      	push	{r7, lr}
 80196ec:	b082      	sub	sp, #8
 80196ee:	af00      	add	r7, sp, #0
 80196f0:	6078      	str	r0, [r7, #4]
 80196f2:	6039      	str	r1, [r7, #0]
 80196f4:	687b      	ldr	r3, [r7, #4]
 80196f6:	683a      	ldr	r2, [r7, #0]
 80196f8:	4611      	mov	r1, r2
 80196fa:	4618      	mov	r0, r3
 80196fc:	f000 f850 	bl	80197a0 <_ZNSt11_Tuple_implILj0EJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS8_>
 8019700:	687b      	ldr	r3, [r7, #4]
 8019702:	4618      	mov	r0, r3
 8019704:	3708      	adds	r7, #8
 8019706:	46bd      	mov	sp, r7
 8019708:	bd80      	pop	{r7, pc}

0801970a <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE9constructISB_JRKSt21piecewise_construct_tSt5tupleIJRS9_EESI_IJEEEEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 801970a:	b590      	push	{r4, r7, lr}
 801970c:	b089      	sub	sp, #36	; 0x24
 801970e:	af00      	add	r7, sp, #0
 8019710:	60f8      	str	r0, [r7, #12]
 8019712:	60b9      	str	r1, [r7, #8]
 8019714:	607a      	str	r2, [r7, #4]
 8019716:	603b      	str	r3, [r7, #0]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 8019718:	6878      	ldr	r0, [r7, #4]
 801971a:	f7ff fbe4 	bl	8018ee6 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
 801971e:	6838      	ldr	r0, [r7, #0]
 8019720:	f7ff fbec 	bl	8018efc <_ZSt7forwardISt5tupleIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceISA_E4typeE>
 8019724:	4602      	mov	r2, r0
 8019726:	f107 0318 	add.w	r3, r7, #24
 801972a:	4611      	mov	r1, r2
 801972c:	4618      	mov	r0, r3
 801972e:	f7ff ffdc 	bl	80196ea <_ZNSt5tupleIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS8_>
 8019732:	f107 0418 	add.w	r4, r7, #24
 8019736:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8019738:	f7ff fbeb 	bl	8018f12 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
 801973c:	68bb      	ldr	r3, [r7, #8]
 801973e:	4619      	mov	r1, r3
 8019740:	2038      	movs	r0, #56	; 0x38
 8019742:	f7e7 fc8a 	bl	800105a <_ZnwjPv>
 8019746:	7f3b      	ldrb	r3, [r7, #28]
 8019748:	4622      	mov	r2, r4
 801974a:	7d39      	ldrb	r1, [r7, #20]
 801974c:	f000 f83f 	bl	80197ce <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEC1IJRS6_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESC_IJDpT0_EE>
 8019750:	bf00      	nop
 8019752:	3724      	adds	r7, #36	; 0x24
 8019754:	46bd      	mov	sp, r7
 8019756:	bd90      	pop	{r4, r7, pc}

08019758 <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEOT_RNSt16remove_referenceISE_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8019758:	b480      	push	{r7}
 801975a:	b083      	sub	sp, #12
 801975c:	af00      	add	r7, sp, #0
 801975e:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8019760:	687b      	ldr	r3, [r7, #4]
 8019762:	4618      	mov	r0, r3
 8019764:	370c      	adds	r7, #12
 8019766:	46bd      	mov	sp, r7
 8019768:	f85d 7b04 	ldr.w	r7, [sp], #4
 801976c:	4770      	bx	lr

0801976e <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE7_M_addrEv>:
      _M_addr() const noexcept
 801976e:	b480      	push	{r7}
 8019770:	b083      	sub	sp, #12
 8019772:	af00      	add	r7, sp, #0
 8019774:	6078      	str	r0, [r7, #4]
      { return static_cast<const void*>(&_M_storage); }
 8019776:	687b      	ldr	r3, [r7, #4]
 8019778:	4618      	mov	r0, r3
 801977a:	370c      	adds	r7, #12
 801977c:	46bd      	mov	sp, r7
 801977e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019782:	4770      	bx	lr

08019784 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 8019784:	b480      	push	{r7}
 8019786:	b083      	sub	sp, #12
 8019788:	af00      	add	r7, sp, #0
 801978a:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 801978c:	4b03      	ldr	r3, [pc, #12]	; (801979c <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE8max_sizeEv+0x18>)
      }
 801978e:	4618      	mov	r0, r3
 8019790:	370c      	adds	r7, #12
 8019792:	46bd      	mov	sp, r7
 8019794:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019798:	4770      	bx	lr
 801979a:	bf00      	nop
 801979c:	01c71c71 	.word	0x01c71c71

080197a0 <_ZNSt11_Tuple_implILj0EJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS8_>:
      _Tuple_impl(_Tuple_impl&& __in)
 80197a0:	b590      	push	{r4, r7, lr}
 80197a2:	b083      	sub	sp, #12
 80197a4:	af00      	add	r7, sp, #0
 80197a6:	6078      	str	r0, [r7, #4]
 80197a8:	6039      	str	r1, [r7, #0]
      : _Base(std::forward<_Head>(_M_head(__in))) { }
 80197aa:	687c      	ldr	r4, [r7, #4]
 80197ac:	6838      	ldr	r0, [r7, #0]
 80197ae:	f000 f822 	bl	80197f6 <_ZNSt11_Tuple_implILj0EJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7_M_headERS8_>
 80197b2:	4603      	mov	r3, r0
 80197b4:	4618      	mov	r0, r3
 80197b6:	f7ea fbf1 	bl	8003f9c <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 80197ba:	4603      	mov	r3, r0
 80197bc:	4619      	mov	r1, r3
 80197be:	4620      	mov	r0, r4
 80197c0:	f7ff fd7a 	bl	80192b8 <_ZNSt10_Head_baseILj0ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1ES7_>
 80197c4:	687b      	ldr	r3, [r7, #4]
 80197c6:	4618      	mov	r0, r3
 80197c8:	370c      	adds	r7, #12
 80197ca:	46bd      	mov	sp, r7
 80197cc:	bd90      	pop	{r4, r7, pc}

080197ce <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEC1IJRS6_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESC_IJDpT0_EE>:

  // See stl_pair.h...
  template<class _T1, class _T2>
    template<typename... _Args1, typename... _Args2>
      inline
      pair<_T1, _T2>::
 80197ce:	b5b0      	push	{r4, r5, r7, lr}
 80197d0:	b086      	sub	sp, #24
 80197d2:	af02      	add	r7, sp, #8
 80197d4:	60f8      	str	r0, [r7, #12]
 80197d6:	7239      	strb	r1, [r7, #8]
 80197d8:	607a      	str	r2, [r7, #4]
 80197da:	703b      	strb	r3, [r7, #0]
      pair(piecewise_construct_t,
	   tuple<_Args1...> __first, tuple<_Args2...> __second)
      : pair(__first, __second,
	     typename _Build_index_tuple<sizeof...(_Args1)>::__type(),
	     typename _Build_index_tuple<sizeof...(_Args2)>::__type())
 80197dc:	463a      	mov	r2, r7
 80197de:	f88d 4000 	strb.w	r4, [sp]
 80197e2:	462b      	mov	r3, r5
 80197e4:	6879      	ldr	r1, [r7, #4]
 80197e6:	68f8      	ldr	r0, [r7, #12]
 80197e8:	f000 f812 	bl	8019810 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEC1IJRS6_EJLj0EEJEJEEERSt5tupleIJDpT_EERSB_IJDpT1_EESt12_Index_tupleIJXspT0_EEESK_IJXspT2_EEE>
      { }
 80197ec:	68fb      	ldr	r3, [r7, #12]
 80197ee:	4618      	mov	r0, r3
 80197f0:	3710      	adds	r7, #16
 80197f2:	46bd      	mov	sp, r7
 80197f4:	bdb0      	pop	{r4, r5, r7, pc}

080197f6 <_ZNSt11_Tuple_implILj0EJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7_M_headERS8_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
 80197f6:	b580      	push	{r7, lr}
 80197f8:	b082      	sub	sp, #8
 80197fa:	af00      	add	r7, sp, #0
 80197fc:	6078      	str	r0, [r7, #4]
 80197fe:	687b      	ldr	r3, [r7, #4]
 8019800:	4618      	mov	r0, r3
 8019802:	f000 f82a 	bl	801985a <_ZNSt10_Head_baseILj0ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE7_M_headERS8_>
 8019806:	4603      	mov	r3, r0
 8019808:	4618      	mov	r0, r3
 801980a:	3708      	adds	r7, #8
 801980c:	46bd      	mov	sp, r7
 801980e:	bd80      	pop	{r7, pc}

08019810 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEC1IJRS6_EJLj0EEJEJEEERSt5tupleIJDpT_EERSB_IJDpT1_EESt12_Index_tupleIJXspT0_EEESK_IJXspT2_EEE>:

  template<class _T1, class _T2>
    template<typename... _Args1, std::size_t... _Indexes1,
             typename... _Args2, std::size_t... _Indexes2>
      inline
      pair<_T1, _T2>::
 8019810:	b590      	push	{r4, r7, lr}
 8019812:	b085      	sub	sp, #20
 8019814:	af00      	add	r7, sp, #0
 8019816:	60f8      	str	r0, [r7, #12]
 8019818:	60b9      	str	r1, [r7, #8]
 801981a:	607a      	str	r2, [r7, #4]
 801981c:	703b      	strb	r3, [r7, #0]
      pair(tuple<_Args1...>& __tuple1, tuple<_Args2...>& __tuple2,
	   _Index_tuple<_Indexes1...>, _Index_tuple<_Indexes2...>)
      : first(std::forward<_Args1>(std::get<_Indexes1>(__tuple1))...),
        second(std::forward<_Args2>(std::get<_Indexes2>(__tuple2))...)
 801981e:	68fc      	ldr	r4, [r7, #12]
      : first(std::forward<_Args1>(std::get<_Indexes1>(__tuple1))...),
 8019820:	68b8      	ldr	r0, [r7, #8]
 8019822:	f000 f826 	bl	8019872 <_ZSt3getILj0EJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSC_>
 8019826:	4603      	mov	r3, r0
        second(std::forward<_Args2>(std::get<_Indexes2>(__tuple2))...)
 8019828:	4618      	mov	r0, r3
 801982a:	f7ea fbb7 	bl	8003f9c <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 801982e:	4603      	mov	r3, r0
 8019830:	4619      	mov	r1, r3
 8019832:	4620      	mov	r0, r4
 8019834:	f009 fc5a 	bl	80230ec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 8019838:	68fb      	ldr	r3, [r7, #12]
 801983a:	3318      	adds	r3, #24
 801983c:	2220      	movs	r2, #32
 801983e:	2100      	movs	r1, #0
 8019840:	4618      	mov	r0, r3
 8019842:	f00a fccf 	bl	80241e4 <memset>
 8019846:	68fb      	ldr	r3, [r7, #12]
 8019848:	3318      	adds	r3, #24
 801984a:	4618      	mov	r0, r3
 801984c:	f7f3 f833 	bl	800c8b6 <_ZN6SymbolC1Ev>
      { }
 8019850:	68fb      	ldr	r3, [r7, #12]
 8019852:	4618      	mov	r0, r3
 8019854:	3714      	adds	r7, #20
 8019856:	46bd      	mov	sp, r7
 8019858:	bd90      	pop	{r4, r7, pc}

0801985a <_ZNSt10_Head_baseILj0ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE7_M_headERS8_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
 801985a:	b480      	push	{r7}
 801985c:	b083      	sub	sp, #12
 801985e:	af00      	add	r7, sp, #0
 8019860:	6078      	str	r0, [r7, #4]
 8019862:	687b      	ldr	r3, [r7, #4]
 8019864:	681b      	ldr	r3, [r3, #0]
 8019866:	4618      	mov	r0, r3
 8019868:	370c      	adds	r7, #12
 801986a:	46bd      	mov	sp, r7
 801986c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019870:	4770      	bx	lr

08019872 <_ZSt3getILj0EJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSC_>:
    get(tuple<_Elements...>& __t) noexcept
 8019872:	b580      	push	{r7, lr}
 8019874:	b082      	sub	sp, #8
 8019876:	af00      	add	r7, sp, #0
 8019878:	6078      	str	r0, [r7, #4]
    { return std::__get_helper<__i>(__t); }
 801987a:	687b      	ldr	r3, [r7, #4]
 801987c:	4618      	mov	r0, r3
 801987e:	f000 f805 	bl	801988c <_ZSt12__get_helperILj0ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJEERT0_RSt11_Tuple_implIXT_EJS8_DpT1_EE>
 8019882:	4603      	mov	r3, r0
 8019884:	4618      	mov	r0, r3
 8019886:	3708      	adds	r7, #8
 8019888:	46bd      	mov	sp, r7
 801988a:	bd80      	pop	{r7, pc}

0801988c <_ZSt12__get_helperILj0ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJEERT0_RSt11_Tuple_implIXT_EJS8_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
 801988c:	b580      	push	{r7, lr}
 801988e:	b082      	sub	sp, #8
 8019890:	af00      	add	r7, sp, #0
 8019892:	6078      	str	r0, [r7, #4]
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
 8019894:	6878      	ldr	r0, [r7, #4]
 8019896:	f7ff ffae 	bl	80197f6 <_ZNSt11_Tuple_implILj0EJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7_M_headERS8_>
 801989a:	4603      	mov	r3, r0
 801989c:	4618      	mov	r0, r3
 801989e:	3708      	adds	r7, #8
 80198a0:	46bd      	mov	sp, r7
 80198a2:	bd80      	pop	{r7, pc}

080198a4 <_Z41__static_initialization_and_destruction_0ii>:
 80198a4:	b590      	push	{r4, r7, lr}
 80198a6:	b0e7      	sub	sp, #412	; 0x19c
 80198a8:	af02      	add	r7, sp, #8
 80198aa:	1d3b      	adds	r3, r7, #4
 80198ac:	6018      	str	r0, [r3, #0]
 80198ae:	463b      	mov	r3, r7
 80198b0:	6019      	str	r1, [r3, #0]
 80198b2:	1d3b      	adds	r3, r7, #4
 80198b4:	681b      	ldr	r3, [r3, #0]
 80198b6:	2b01      	cmp	r3, #1
 80198b8:	f040 819d 	bne.w	8019bf6 <_Z41__static_initialization_and_destruction_0ii+0x352>
 80198bc:	463b      	mov	r3, r7
 80198be:	681b      	ldr	r3, [r3, #0]
 80198c0:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80198c4:	4293      	cmp	r3, r2
 80198c6:	f040 8196 	bne.w	8019bf6 <_Z41__static_initialization_and_destruction_0ii+0x352>
};
 80198ca:	f107 0314 	add.w	r3, r7, #20
 80198ce:	4618      	mov	r0, r3
 80198d0:	2322      	movs	r3, #34	; 0x22
 80198d2:	461a      	mov	r2, r3
 80198d4:	2100      	movs	r1, #0
 80198d6:	f00a fc85 	bl	80241e4 <memset>
 80198da:	f107 0314 	add.w	r3, r7, #20
 80198de:	223a      	movs	r2, #58	; 0x3a
 80198e0:	701a      	strb	r2, [r3, #0]
 80198e2:	f107 0314 	add.w	r3, r7, #20
 80198e6:	2201      	movs	r2, #1
 80198e8:	705a      	strb	r2, [r3, #1]
 80198ea:	f107 0314 	add.w	r3, r7, #20
 80198ee:	220a      	movs	r2, #10
 80198f0:	709a      	strb	r2, [r3, #2]
 80198f2:	f107 0314 	add.w	r3, r7, #20
 80198f6:	220a      	movs	r2, #10
 80198f8:	70da      	strb	r2, [r3, #3]
 80198fa:	f107 0314 	add.w	r3, r7, #20
 80198fe:	222c      	movs	r2, #44	; 0x2c
 8019900:	711a      	strb	r2, [r3, #4]
 8019902:	f107 0314 	add.w	r3, r7, #20
 8019906:	220c      	movs	r2, #12
 8019908:	715a      	strb	r2, [r3, #5]
 801990a:	f107 0314 	add.w	r3, r7, #20
 801990e:	222e      	movs	r2, #46	; 0x2e
 8019910:	719a      	strb	r2, [r3, #6]
 8019912:	f107 0314 	add.w	r3, r7, #20
 8019916:	220b      	movs	r2, #11
 8019918:	71da      	strb	r2, [r3, #7]
 801991a:	f107 0314 	add.w	r3, r7, #20
 801991e:	225b      	movs	r2, #91	; 0x5b
 8019920:	721a      	strb	r2, [r3, #8]
 8019922:	f107 0314 	add.w	r3, r7, #20
 8019926:	220d      	movs	r2, #13
 8019928:	725a      	strb	r2, [r3, #9]
 801992a:	f107 0314 	add.w	r3, r7, #20
 801992e:	225d      	movs	r2, #93	; 0x5d
 8019930:	729a      	strb	r2, [r3, #10]
 8019932:	f107 0314 	add.w	r3, r7, #20
 8019936:	220e      	movs	r2, #14
 8019938:	72da      	strb	r2, [r3, #11]
 801993a:	f107 0314 	add.w	r3, r7, #20
 801993e:	227c      	movs	r2, #124	; 0x7c
 8019940:	731a      	strb	r2, [r3, #12]
 8019942:	f107 0314 	add.w	r3, r7, #20
 8019946:	2215      	movs	r2, #21
 8019948:	735a      	strb	r2, [r3, #13]
 801994a:	f107 0314 	add.w	r3, r7, #20
 801994e:	2226      	movs	r2, #38	; 0x26
 8019950:	739a      	strb	r2, [r3, #14]
 8019952:	f107 0314 	add.w	r3, r7, #20
 8019956:	2216      	movs	r2, #22
 8019958:	73da      	strb	r2, [r3, #15]
 801995a:	f107 0314 	add.w	r3, r7, #20
 801995e:	222b      	movs	r2, #43	; 0x2b
 8019960:	741a      	strb	r2, [r3, #16]
 8019962:	f107 0314 	add.w	r3, r7, #20
 8019966:	221f      	movs	r2, #31
 8019968:	745a      	strb	r2, [r3, #17]
 801996a:	f107 0314 	add.w	r3, r7, #20
 801996e:	222d      	movs	r2, #45	; 0x2d
 8019970:	749a      	strb	r2, [r3, #18]
 8019972:	f107 0314 	add.w	r3, r7, #20
 8019976:	2220      	movs	r2, #32
 8019978:	74da      	strb	r2, [r3, #19]
 801997a:	f107 0314 	add.w	r3, r7, #20
 801997e:	222a      	movs	r2, #42	; 0x2a
 8019980:	751a      	strb	r2, [r3, #20]
 8019982:	f107 0314 	add.w	r3, r7, #20
 8019986:	2221      	movs	r2, #33	; 0x21
 8019988:	755a      	strb	r2, [r3, #21]
 801998a:	f107 0314 	add.w	r3, r7, #20
 801998e:	222f      	movs	r2, #47	; 0x2f
 8019990:	759a      	strb	r2, [r3, #22]
 8019992:	f107 0314 	add.w	r3, r7, #20
 8019996:	2222      	movs	r2, #34	; 0x22
 8019998:	75da      	strb	r2, [r3, #23]
 801999a:	f107 0314 	add.w	r3, r7, #20
 801999e:	225e      	movs	r2, #94	; 0x5e
 80199a0:	761a      	strb	r2, [r3, #24]
 80199a2:	f107 0314 	add.w	r3, r7, #20
 80199a6:	2223      	movs	r2, #35	; 0x23
 80199a8:	765a      	strb	r2, [r3, #25]
 80199aa:	f107 0314 	add.w	r3, r7, #20
 80199ae:	2225      	movs	r2, #37	; 0x25
 80199b0:	769a      	strb	r2, [r3, #26]
 80199b2:	f107 0314 	add.w	r3, r7, #20
 80199b6:	2224      	movs	r2, #36	; 0x24
 80199b8:	76da      	strb	r2, [r3, #27]
 80199ba:	f107 0314 	add.w	r3, r7, #20
 80199be:	2228      	movs	r2, #40	; 0x28
 80199c0:	771a      	strb	r2, [r3, #28]
 80199c2:	f107 0314 	add.w	r3, r7, #20
 80199c6:	2226      	movs	r2, #38	; 0x26
 80199c8:	775a      	strb	r2, [r3, #29]
 80199ca:	f107 0314 	add.w	r3, r7, #20
 80199ce:	2229      	movs	r2, #41	; 0x29
 80199d0:	779a      	strb	r2, [r3, #30]
 80199d2:	f107 0314 	add.w	r3, r7, #20
 80199d6:	2227      	movs	r2, #39	; 0x27
 80199d8:	77da      	strb	r2, [r3, #31]
 80199da:	f107 0314 	add.w	r3, r7, #20
 80199de:	2225      	movs	r2, #37	; 0x25
 80199e0:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 80199e4:	f107 030c 	add.w	r3, r7, #12
 80199e8:	f107 0214 	add.w	r2, r7, #20
 80199ec:	601a      	str	r2, [r3, #0]
 80199ee:	f107 030c 	add.w	r3, r7, #12
 80199f2:	2211      	movs	r2, #17
 80199f4:	605a      	str	r2, [r3, #4]
 80199f6:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 80199fa:	4618      	mov	r0, r3
 80199fc:	f7e8 f878 	bl	8001af0 <_ZNSaISt4pairIKc10token_typeEEC1Ev>
 8019a00:	f107 0138 	add.w	r1, r7, #56	; 0x38
 8019a04:	f107 020c 	add.w	r2, r7, #12
 8019a08:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8019a0c:	9300      	str	r3, [sp, #0]
 8019a0e:	460b      	mov	r3, r1
 8019a10:	ca06      	ldmia	r2, {r1, r2}
 8019a12:	4885      	ldr	r0, [pc, #532]	; (8019c28 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 8019a14:	f7e8 f884 	bl	8001b20 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 8019a18:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8019a1c:	4618      	mov	r0, r3
 8019a1e:	f7e8 f873 	bl	8001b08 <_ZNSaISt4pairIKc10token_typeEED1Ev>
	{"true", TOKEN_TRUE},
 8019a22:	2305      	movs	r3, #5
 8019a24:	f887 3162 	strb.w	r3, [r7, #354]	; 0x162
};
 8019a28:	f507 72b1 	add.w	r2, r7, #354	; 0x162
 8019a2c:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8019a30:	497e      	ldr	r1, [pc, #504]	; (8019c2c <_Z41__static_initialization_and_destruction_0ii+0x388>)
 8019a32:	4618      	mov	r0, r3
 8019a34:	f7e7 fb60 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"false", TOKEN_FALSE},
 8019a38:	2306      	movs	r3, #6
 8019a3a:	f887 3163 	strb.w	r3, [r7, #355]	; 0x163
};
 8019a3e:	f207 1263 	addw	r2, r7, #355	; 0x163
 8019a42:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8019a46:	331c      	adds	r3, #28
 8019a48:	4979      	ldr	r1, [pc, #484]	; (8019c30 <_Z41__static_initialization_and_destruction_0ii+0x38c>)
 8019a4a:	4618      	mov	r0, r3
 8019a4c:	f7e7 fb7c 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"setup", TOKEN_SETUP},
 8019a50:	2307      	movs	r3, #7
 8019a52:	f887 3164 	strb.w	r3, [r7, #356]	; 0x164
};
 8019a56:	f507 72b2 	add.w	r2, r7, #356	; 0x164
 8019a5a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8019a5e:	3338      	adds	r3, #56	; 0x38
 8019a60:	4974      	ldr	r1, [pc, #464]	; (8019c34 <_Z41__static_initialization_and_destruction_0ii+0x390>)
 8019a62:	4618      	mov	r0, r3
 8019a64:	f7e7 fb70 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"loop", TOKEN_LOOP},
 8019a68:	2308      	movs	r3, #8
 8019a6a:	f887 3165 	strb.w	r3, [r7, #357]	; 0x165
};
 8019a6e:	f207 1265 	addw	r2, r7, #357	; 0x165
 8019a72:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8019a76:	3354      	adds	r3, #84	; 0x54
 8019a78:	496f      	ldr	r1, [pc, #444]	; (8019c38 <_Z41__static_initialization_and_destruction_0ii+0x394>)
 8019a7a:	4618      	mov	r0, r3
 8019a7c:	f7e7 fb3c 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"finish", TOKEN_FINISH},
 8019a80:	2309      	movs	r3, #9
 8019a82:	f887 3166 	strb.w	r3, [r7, #358]	; 0x166
};
 8019a86:	f507 72b3 	add.w	r2, r7, #358	; 0x166
 8019a8a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8019a8e:	3370      	adds	r3, #112	; 0x70
 8019a90:	496a      	ldr	r1, [pc, #424]	; (8019c3c <_Z41__static_initialization_and_destruction_0ii+0x398>)
 8019a92:	4618      	mov	r0, r3
 8019a94:	f7e7 fb80 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"if", TOKEN_IF},
 8019a98:	2310      	movs	r3, #16
 8019a9a:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167
};
 8019a9e:	f207 1267 	addw	r2, r7, #359	; 0x167
 8019aa2:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8019aa6:	338c      	adds	r3, #140	; 0x8c
 8019aa8:	4965      	ldr	r1, [pc, #404]	; (8019c40 <_Z41__static_initialization_and_destruction_0ii+0x39c>)
 8019aaa:	4618      	mov	r0, r3
 8019aac:	f7e7 fb9c 	bl	80011e8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>
	{"elseif", TOKEN_ELSEIF},
 8019ab0:	2311      	movs	r3, #17
 8019ab2:	f887 3168 	strb.w	r3, [r7, #360]	; 0x168
};
 8019ab6:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 8019aba:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8019abe:	33a8      	adds	r3, #168	; 0xa8
 8019ac0:	4960      	ldr	r1, [pc, #384]	; (8019c44 <_Z41__static_initialization_and_destruction_0ii+0x3a0>)
 8019ac2:	4618      	mov	r0, r3
 8019ac4:	f7e7 fb68 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"else", TOKEN_ELSE},
 8019ac8:	2312      	movs	r3, #18
 8019aca:	f887 3169 	strb.w	r3, [r7, #361]	; 0x169
};
 8019ace:	f207 1269 	addw	r2, r7, #361	; 0x169
 8019ad2:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8019ad6:	33c4      	adds	r3, #196	; 0xc4
 8019ad8:	495b      	ldr	r1, [pc, #364]	; (8019c48 <_Z41__static_initialization_and_destruction_0ii+0x3a4>)
 8019ada:	4618      	mov	r0, r3
 8019adc:	f7e7 fb0c 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"while", TOKEN_WHILE},
 8019ae0:	2313      	movs	r3, #19
 8019ae2:	f887 316a 	strb.w	r3, [r7, #362]	; 0x16a
};
 8019ae6:	f507 72b5 	add.w	r2, r7, #362	; 0x16a
 8019aea:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8019aee:	33e0      	adds	r3, #224	; 0xe0
 8019af0:	4956      	ldr	r1, [pc, #344]	; (8019c4c <_Z41__static_initialization_and_destruction_0ii+0x3a8>)
 8019af2:	4618      	mov	r0, r3
 8019af4:	f7e7 fb28 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"end", TOKEN_END},
 8019af8:	2314      	movs	r3, #20
 8019afa:	f887 316b 	strb.w	r3, [r7, #363]	; 0x16b
};
 8019afe:	f207 126b 	addw	r2, r7, #363	; 0x16b
 8019b02:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8019b06:	33fc      	adds	r3, #252	; 0xfc
 8019b08:	4951      	ldr	r1, [pc, #324]	; (8019c50 <_Z41__static_initialization_and_destruction_0ii+0x3ac>)
 8019b0a:	4618      	mov	r0, r3
 8019b0c:	f7e7 fb94 	bl	8001238 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>
 8019b10:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8019b14:	f107 0248 	add.w	r2, r7, #72	; 0x48
 8019b18:	601a      	str	r2, [r3, #0]
 8019b1a:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8019b1e:	220a      	movs	r2, #10
 8019b20:	605a      	str	r2, [r3, #4]
 8019b22:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8019b26:	4618      	mov	r0, r3
 8019b28:	f7e8 f887 	bl	8001c3a <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 8019b2c:	f507 71b6 	add.w	r1, r7, #364	; 0x16c
 8019b30:	f107 0240 	add.w	r2, r7, #64	; 0x40
 8019b34:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8019b38:	9300      	str	r3, [sp, #0]
 8019b3a:	460b      	mov	r3, r1
 8019b3c:	ca06      	ldmia	r2, {r1, r2}
 8019b3e:	4845      	ldr	r0, [pc, #276]	; (8019c54 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 8019b40:	f7e8 f893 	bl	8001c6a <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>
 8019b44:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8019b48:	4618      	mov	r0, r3
 8019b4a:	f7e8 f882 	bl	8001c52 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 8019b4e:	f107 0448 	add.w	r4, r7, #72	; 0x48
 8019b52:	f504 748c 	add.w	r4, r4, #280	; 0x118
 8019b56:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8019b5a:	429c      	cmp	r4, r3
 8019b5c:	d004      	beq.n	8019b68 <_Z41__static_initialization_and_destruction_0ii+0x2c4>
 8019b5e:	3c1c      	subs	r4, #28
 8019b60:	4620      	mov	r0, r4
 8019b62:	f7e7 fabc 	bl	80010de <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 8019b66:	e7f6      	b.n	8019b56 <_Z41__static_initialization_and_destruction_0ii+0x2b2>
};
 8019b68:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 8019b6c:	2200      	movs	r2, #0
 8019b6e:	601a      	str	r2, [r3, #0]
 8019b70:	605a      	str	r2, [r3, #4]
 8019b72:	609a      	str	r2, [r3, #8]
 8019b74:	233c      	movs	r3, #60	; 0x3c
 8019b76:	f887 317c 	strb.w	r3, [r7, #380]	; 0x17c
 8019b7a:	231b      	movs	r3, #27
 8019b7c:	f887 317d 	strb.w	r3, [r7, #381]	; 0x17d
 8019b80:	231c      	movs	r3, #28
 8019b82:	f887 317e 	strb.w	r3, [r7, #382]	; 0x17e
 8019b86:	233e      	movs	r3, #62	; 0x3e
 8019b88:	f887 317f 	strb.w	r3, [r7, #383]	; 0x17f
 8019b8c:	2319      	movs	r3, #25
 8019b8e:	f887 3180 	strb.w	r3, [r7, #384]	; 0x180
 8019b92:	231a      	movs	r3, #26
 8019b94:	f887 3181 	strb.w	r3, [r7, #385]	; 0x181
 8019b98:	233d      	movs	r3, #61	; 0x3d
 8019b9a:	f887 3182 	strb.w	r3, [r7, #386]	; 0x182
 8019b9e:	2318      	movs	r3, #24
 8019ba0:	f887 3183 	strb.w	r3, [r7, #387]	; 0x183
 8019ba4:	231d      	movs	r3, #29
 8019ba6:	f887 3184 	strb.w	r3, [r7, #388]	; 0x184
 8019baa:	2321      	movs	r3, #33	; 0x21
 8019bac:	f887 3185 	strb.w	r3, [r7, #389]	; 0x185
 8019bb0:	2317      	movs	r3, #23
 8019bb2:	f887 3186 	strb.w	r3, [r7, #390]	; 0x186
 8019bb6:	231e      	movs	r3, #30
 8019bb8:	f887 3187 	strb.w	r3, [r7, #391]	; 0x187
 8019bbc:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 8019bc0:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 8019bc4:	2304      	movs	r3, #4
 8019bc6:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 8019bca:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 8019bce:	4618      	mov	r0, r3
 8019bd0:	f7e8 f87b 	bl	8001cca <_ZNSaISt4pairIKc12double_tokenEEC1Ev>
 8019bd4:	f507 72c4 	add.w	r2, r7, #392	; 0x188
 8019bd8:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 8019bdc:	9300      	str	r3, [sp, #0]
 8019bde:	4613      	mov	r3, r2
 8019be0:	f507 72ba 	add.w	r2, r7, #372	; 0x174
 8019be4:	ca06      	ldmia	r2, {r1, r2}
 8019be6:	481c      	ldr	r0, [pc, #112]	; (8019c58 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 8019be8:	f7e8 f887 	bl	8001cfa <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 8019bec:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 8019bf0:	4618      	mov	r0, r3
 8019bf2:	f7e8 f876 	bl	8001ce2 <_ZNSaISt4pairIKc12double_tokenEED1Ev>
static const std::map<char, double_token> token_double_chars
 8019bf6:	1d3b      	adds	r3, r7, #4
 8019bf8:	681b      	ldr	r3, [r3, #0]
 8019bfa:	2b00      	cmp	r3, #0
 8019bfc:	d10e      	bne.n	8019c1c <_Z41__static_initialization_and_destruction_0ii+0x378>
 8019bfe:	463b      	mov	r3, r7
 8019c00:	681b      	ldr	r3, [r3, #0]
 8019c02:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8019c06:	4293      	cmp	r3, r2
 8019c08:	d108      	bne.n	8019c1c <_Z41__static_initialization_and_destruction_0ii+0x378>
 8019c0a:	4813      	ldr	r0, [pc, #76]	; (8019c58 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 8019c0c:	f7ef fd07 	bl	800961e <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>
static const std::map<std::string, token_type> token_strings
 8019c10:	4810      	ldr	r0, [pc, #64]	; (8019c54 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 8019c12:	f7ef fd11 	bl	8009638 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
static const std::map<char, token_type> token_chars
 8019c16:	4804      	ldr	r0, [pc, #16]	; (8019c28 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 8019c18:	f7ef fd1b 	bl	8009652 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>
 8019c1c:	bf00      	nop
 8019c1e:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 8019c22:	46bd      	mov	sp, r7
 8019c24:	bd90      	pop	{r4, r7, pc}
 8019c26:	bf00      	nop
 8019c28:	20000530 	.word	0x20000530
 8019c2c:	08027f18 	.word	0x08027f18
 8019c30:	08027f20 	.word	0x08027f20
 8019c34:	08027f28 	.word	0x08027f28
 8019c38:	08027f30 	.word	0x08027f30
 8019c3c:	08027f38 	.word	0x08027f38
 8019c40:	08027f40 	.word	0x08027f40
 8019c44:	08027f44 	.word	0x08027f44
 8019c48:	08027f4c 	.word	0x08027f4c
 8019c4c:	08027f54 	.word	0x08027f54
 8019c50:	08027f5c 	.word	0x08027f5c
 8019c54:	20000548 	.word	0x20000548
 8019c58:	20000560 	.word	0x20000560

08019c5c <_GLOBAL__sub_I__ZN16Variable_handler12get_instanceEv>:
 8019c5c:	b580      	push	{r7, lr}
 8019c5e:	af00      	add	r7, sp, #0
 8019c60:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8019c64:	2001      	movs	r0, #1
 8019c66:	f7ff fe1d 	bl	80198a4 <_Z41__static_initialization_and_destruction_0ii>
 8019c6a:	bd80      	pop	{r7, pc}

08019c6c <_GLOBAL__sub_D__ZN16Variable_handler12get_instanceEv>:
 8019c6c:	b580      	push	{r7, lr}
 8019c6e:	af00      	add	r7, sp, #0
 8019c70:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8019c74:	2000      	movs	r0, #0
 8019c76:	f7ff fe15 	bl	80198a4 <_Z41__static_initialization_and_destruction_0ii>
 8019c7a:	bd80      	pop	{r7, pc}

08019c7c <_ZN6Parser31parse_variable_or_function_callEP17Primal_expression>:
#include "Parser.h"

void Parser::parse_variable_or_function_call(Primal_expression *exp)
{
 8019c7c:	b580      	push	{r7, lr}
 8019c7e:	b08a      	sub	sp, #40	; 0x28
 8019c80:	af00      	add	r7, sp, #0
 8019c82:	6078      	str	r0, [r7, #4]
 8019c84:	6039      	str	r1, [r7, #0]
	std::string id(std::get<std::string>(token_buffer.value));
 8019c86:	687b      	ldr	r3, [r7, #4]
 8019c88:	3304      	adds	r3, #4
 8019c8a:	4618      	mov	r0, r3
 8019c8c:	f7fa f9dc 	bl	8014048 <_ZSt3getINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_ifbEERT_RSt7variantIJDpT0_EE>
 8019c90:	4602      	mov	r2, r0
 8019c92:	f107 0308 	add.w	r3, r7, #8
 8019c96:	4611      	mov	r1, r2
 8019c98:	4618      	mov	r0, r3
 8019c9a:	f009 fa27 	bl	80230ec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
	get_next_token();
 8019c9e:	6878      	ldr	r0, [r7, #4]
 8019ca0:	f7f9 ffd7 	bl	8013c52 <_ZN6Parser14get_next_tokenEv>
	if (token_buffer.type == TOKEN_LEFT_BRACKET)
 8019ca4:	687b      	ldr	r3, [r7, #4]
 8019ca6:	781b      	ldrb	r3, [r3, #0]
 8019ca8:	2b26      	cmp	r3, #38	; 0x26
 8019caa:	d113      	bne.n	8019cd4 <_ZN6Parser31parse_variable_or_function_callEP17Primal_expression+0x58>
	{
		exp->type = PRIMAL_FUNCTION_CALL;
 8019cac:	683b      	ldr	r3, [r7, #0]
 8019cae:	2205      	movs	r2, #5
 8019cb0:	701a      	strb	r2, [r3, #0]
		exp->content = parse_function_call(id);
 8019cb2:	f107 0308 	add.w	r3, r7, #8
 8019cb6:	4619      	mov	r1, r3
 8019cb8:	6878      	ldr	r0, [r7, #4]
 8019cba:	f7f9 fd2b 	bl	8013714 <_ZN6Parser19parse_function_callERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8019cbe:	4603      	mov	r3, r0
 8019cc0:	623b      	str	r3, [r7, #32]
 8019cc2:	683b      	ldr	r3, [r7, #0]
 8019cc4:	3304      	adds	r3, #4
 8019cc6:	f107 0220 	add.w	r2, r7, #32
 8019cca:	4611      	mov	r1, r2
 8019ccc:	4618      	mov	r0, r3
 8019cce:	f000 fcc4 	bl	801a65a <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIS9_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
 8019cd2:	e012      	b.n	8019cfa <_ZN6Parser31parse_variable_or_function_callEP17Primal_expression+0x7e>
	}
	else
	{
		exp->type = PRIMAL_VARIABLE;
 8019cd4:	683b      	ldr	r3, [r7, #0]
 8019cd6:	2204      	movs	r2, #4
 8019cd8:	701a      	strb	r2, [r3, #0]
		exp->content = parse_variable(id);
 8019cda:	f107 0308 	add.w	r3, r7, #8
 8019cde:	4619      	mov	r1, r3
 8019ce0:	6878      	ldr	r0, [r7, #4]
 8019ce2:	f7f9 fc55 	bl	8013590 <_ZN6Parser14parse_variableERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8019ce6:	4603      	mov	r3, r0
 8019ce8:	627b      	str	r3, [r7, #36]	; 0x24
 8019cea:	683b      	ldr	r3, [r7, #0]
 8019cec:	3304      	adds	r3, #4
 8019cee:	f107 0224 	add.w	r2, r7, #36	; 0x24
 8019cf2:	4611      	mov	r1, r2
 8019cf4:	4618      	mov	r0, r3
 8019cf6:	f000 fcda 	bl	801a6ae <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIS7_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
	std::string id(std::get<std::string>(token_buffer.value));
 8019cfa:	f107 0308 	add.w	r3, r7, #8
 8019cfe:	4618      	mov	r0, r3
 8019d00:	f009 f833 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	}
}
 8019d04:	bf00      	nop
 8019d06:	3728      	adds	r7, #40	; 0x28
 8019d08:	46bd      	mov	sp, r7
 8019d0a:	bd80      	pop	{r7, pc}

08019d0c <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEC1Ev>:
      variant() = default;
 8019d0c:	b580      	push	{r7, lr}
 8019d0e:	b082      	sub	sp, #8
 8019d10:	af00      	add	r7, sp, #0
 8019d12:	6078      	str	r0, [r7, #4]
 8019d14:	687b      	ldr	r3, [r7, #4]
 8019d16:	4618      	mov	r0, r3
 8019d18:	f000 fd3e 	bl	801a798 <_ZNSt8__detail9__variant13_Variant_baseIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEC1Ev>
 8019d1c:	687b      	ldr	r3, [r7, #4]
 8019d1e:	4618      	mov	r0, r3
 8019d20:	3708      	adds	r7, #8
 8019d22:	46bd      	mov	sp, r7
 8019d24:	bd80      	pop	{r7, pc}

08019d26 <_ZN17Primal_expressionC1Ev>:
	PRIMAL_STRING,
	PRIMAL_VARIABLE,
	PRIMAL_FUNCTION_CALL
}primal_type;

class Primal_expression
 8019d26:	b580      	push	{r7, lr}
 8019d28:	b082      	sub	sp, #8
 8019d2a:	af00      	add	r7, sp, #0
 8019d2c:	6078      	str	r0, [r7, #4]
 8019d2e:	687b      	ldr	r3, [r7, #4]
 8019d30:	3304      	adds	r3, #4
 8019d32:	4618      	mov	r0, r3
 8019d34:	f7ff ffea 	bl	8019d0c <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEC1Ev>
 8019d38:	687b      	ldr	r3, [r7, #4]
 8019d3a:	4618      	mov	r0, r3
 8019d3c:	3708      	adds	r7, #8
 8019d3e:	46bd      	mov	sp, r7
 8019d40:	bd80      	pop	{r7, pc}
	...

08019d44 <_ZN6Parser23parse_primal_expressionEv>:

Primal_expression* Parser::parse_primal_expression()
{
 8019d44:	b590      	push	{r4, r7, lr}
 8019d46:	b093      	sub	sp, #76	; 0x4c
 8019d48:	af00      	add	r7, sp, #0
 8019d4a:	6078      	str	r0, [r7, #4]
	auto exp = new Primal_expression();
 8019d4c:	2020      	movs	r0, #32
 8019d4e:	f008 fd6a 	bl	8022826 <_Znwj>
 8019d52:	4603      	mov	r3, r0
 8019d54:	461c      	mov	r4, r3
 8019d56:	4620      	mov	r0, r4
 8019d58:	2320      	movs	r3, #32
 8019d5a:	461a      	mov	r2, r3
 8019d5c:	2100      	movs	r1, #0
 8019d5e:	f00a fa41 	bl	80241e4 <memset>
 8019d62:	4620      	mov	r0, r4
 8019d64:	f7ff ffdf 	bl	8019d26 <_ZN17Primal_expressionC1Ev>
 8019d68:	647c      	str	r4, [r7, #68]	; 0x44
	switch(token_buffer.type)
 8019d6a:	687b      	ldr	r3, [r7, #4]
 8019d6c:	781b      	ldrb	r3, [r3, #0]
 8019d6e:	3b02      	subs	r3, #2
 8019d70:	2b0d      	cmp	r3, #13
 8019d72:	f200 808b 	bhi.w	8019e8c <_ZN6Parser23parse_primal_expressionEv+0x148>
 8019d76:	a201      	add	r2, pc, #4	; (adr r2, 8019d7c <_ZN6Parser23parse_primal_expressionEv+0x38>)
 8019d78:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8019d7c:	08019e83 	.word	0x08019e83
 8019d80:	08019df7 	.word	0x08019df7
 8019d84:	08019e1d 	.word	0x08019e1d
 8019d88:	08019db5 	.word	0x08019db5
 8019d8c:	08019dd7 	.word	0x08019dd7
 8019d90:	08019e8d 	.word	0x08019e8d
 8019d94:	08019e8d 	.word	0x08019e8d
 8019d98:	08019e8d 	.word	0x08019e8d
 8019d9c:	08019e8d 	.word	0x08019e8d
 8019da0:	08019e8d 	.word	0x08019e8d
 8019da4:	08019e8d 	.word	0x08019e8d
 8019da8:	08019e8d 	.word	0x08019e8d
 8019dac:	08019e8d 	.word	0x08019e8d
 8019db0:	08019e43 	.word	0x08019e43
	{
	case TOKEN_TRUE:
		exp->type = PRIMAL_BOOL;
 8019db4:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8019db6:	2200      	movs	r2, #0
 8019db8:	701a      	strb	r2, [r3, #0]
		exp->content = true;
 8019dba:	2301      	movs	r3, #1
 8019dbc:	73bb      	strb	r3, [r7, #14]
 8019dbe:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8019dc0:	3304      	adds	r3, #4
 8019dc2:	f107 020e 	add.w	r2, r7, #14
 8019dc6:	4611      	mov	r1, r2
 8019dc8:	4618      	mov	r0, r3
 8019dca:	f000 fcf2 	bl	801a7b2 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIbEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
		get_next_token();
 8019dce:	6878      	ldr	r0, [r7, #4]
 8019dd0:	f7f9 ff3f 	bl	8013c52 <_ZN6Parser14get_next_tokenEv>
		break;
 8019dd4:	e077      	b.n	8019ec6 <_ZN6Parser23parse_primal_expressionEv+0x182>
	case TOKEN_FALSE:
		exp->type = PRIMAL_BOOL;
 8019dd6:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8019dd8:	2200      	movs	r2, #0
 8019dda:	701a      	strb	r2, [r3, #0]
		exp->content = false;
 8019ddc:	2300      	movs	r3, #0
 8019dde:	73fb      	strb	r3, [r7, #15]
 8019de0:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8019de2:	3304      	adds	r3, #4
 8019de4:	f107 020f 	add.w	r2, r7, #15
 8019de8:	4611      	mov	r1, r2
 8019dea:	4618      	mov	r0, r3
 8019dec:	f000 fce1 	bl	801a7b2 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIbEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
		get_next_token();
 8019df0:	6878      	ldr	r0, [r7, #4]
 8019df2:	f7f9 ff2e 	bl	8013c52 <_ZN6Parser14get_next_tokenEv>
	case TOKEN_INT:
		exp->type = PRIMAL_INT;
 8019df6:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8019df8:	2201      	movs	r2, #1
 8019dfa:	701a      	strb	r2, [r3, #0]
		exp->content = std::get<int>(token_buffer.value);
 8019dfc:	687b      	ldr	r3, [r7, #4]
 8019dfe:	3304      	adds	r3, #4
 8019e00:	4618      	mov	r0, r3
 8019e02:	f000 fd01 	bl	801a808 <_ZSt3getIiJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERT_RSt7variantIJDpT0_EE>
 8019e06:	4602      	mov	r2, r0
 8019e08:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8019e0a:	3304      	adds	r3, #4
 8019e0c:	4611      	mov	r1, r2
 8019e0e:	4618      	mov	r0, r3
 8019e10:	f000 fd06 	bl	801a820 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIRiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_>
		get_next_token();
 8019e14:	6878      	ldr	r0, [r7, #4]
 8019e16:	f7f9 ff1c 	bl	8013c52 <_ZN6Parser14get_next_tokenEv>
		break;
 8019e1a:	e054      	b.n	8019ec6 <_ZN6Parser23parse_primal_expressionEv+0x182>
	case TOKEN_FLOAT:
		exp->type = PRIMAL_FLOAT;
 8019e1c:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8019e1e:	2202      	movs	r2, #2
 8019e20:	701a      	strb	r2, [r3, #0]
		exp->content = std::get<float>(token_buffer.value);
 8019e22:	687b      	ldr	r3, [r7, #4]
 8019e24:	3304      	adds	r3, #4
 8019e26:	4618      	mov	r0, r3
 8019e28:	f000 fd24 	bl	801a874 <_ZSt3getIfJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERT_RSt7variantIJDpT0_EE>
 8019e2c:	4602      	mov	r2, r0
 8019e2e:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8019e30:	3304      	adds	r3, #4
 8019e32:	4611      	mov	r1, r2
 8019e34:	4618      	mov	r0, r3
 8019e36:	f000 fd29 	bl	801a88c <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIRfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_>
		get_next_token();
 8019e3a:	6878      	ldr	r0, [r7, #4]
 8019e3c:	f7f9 ff09 	bl	8013c52 <_ZN6Parser14get_next_tokenEv>
		break;
 8019e40:	e041      	b.n	8019ec6 <_ZN6Parser23parse_primal_expressionEv+0x182>
	case TOKEN_STRING:
		exp->type = PRIMAL_STRING;
 8019e42:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8019e44:	2203      	movs	r2, #3
 8019e46:	701a      	strb	r2, [r3, #0]
		exp->content = std::string(std::get<std::string>(token_buffer.value));
 8019e48:	687b      	ldr	r3, [r7, #4]
 8019e4a:	3304      	adds	r3, #4
 8019e4c:	4618      	mov	r0, r3
 8019e4e:	f7fa f8fb 	bl	8014048 <_ZSt3getINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_ifbEERT_RSt7variantIJDpT0_EE>
 8019e52:	4602      	mov	r2, r0
 8019e54:	f107 0310 	add.w	r3, r7, #16
 8019e58:	4611      	mov	r1, r2
 8019e5a:	4618      	mov	r0, r3
 8019e5c:	f009 f946 	bl	80230ec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 8019e60:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8019e62:	3304      	adds	r3, #4
 8019e64:	f107 0210 	add.w	r2, r7, #16
 8019e68:	4611      	mov	r1, r2
 8019e6a:	4618      	mov	r0, r3
 8019e6c:	f000 fd38 	bl	801a8e0 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
 8019e70:	f107 0310 	add.w	r3, r7, #16
 8019e74:	4618      	mov	r0, r3
 8019e76:	f008 ff78 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
		get_next_token();
 8019e7a:	6878      	ldr	r0, [r7, #4]
 8019e7c:	f7f9 fee9 	bl	8013c52 <_ZN6Parser14get_next_tokenEv>
		break;
 8019e80:	e021      	b.n	8019ec6 <_ZN6Parser23parse_primal_expressionEv+0x182>
	case TOKEN_IDENTIFIER:
		parse_variable_or_function_call(exp);
 8019e82:	6c79      	ldr	r1, [r7, #68]	; 0x44
 8019e84:	6878      	ldr	r0, [r7, #4]
 8019e86:	f7ff fef9 	bl	8019c7c <_ZN6Parser31parse_variable_or_function_callEP17Primal_expression>
		break;
 8019e8a:	e01c      	b.n	8019ec6 <_ZN6Parser23parse_primal_expressionEv+0x182>
	default:
		Transmitter::report_error("expression");
 8019e8c:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8019e90:	4618      	mov	r0, r3
 8019e92:	f008 fcd9 	bl	8022848 <_ZNSaIcEC1Ev>
 8019e96:	f107 0240 	add.w	r2, r7, #64	; 0x40
 8019e9a:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8019e9e:	490c      	ldr	r1, [pc, #48]	; (8019ed0 <_ZN6Parser23parse_primal_expressionEv+0x18c>)
 8019ea0:	4618      	mov	r0, r3
 8019ea2:	f7e7 fe78 	bl	8001b96 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8019ea6:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8019eaa:	4618      	mov	r0, r3
 8019eac:	f7fe f938 	bl	8018120 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8019eb0:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8019eb4:	4618      	mov	r0, r3
 8019eb6:	f008 ff58 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8019eba:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8019ebe:	4618      	mov	r0, r3
 8019ec0:	f008 fcc3 	bl	802284a <_ZNSaIcED1Ev>
		break;
 8019ec4:	bf00      	nop
	}
	return exp;
 8019ec6:	6c7b      	ldr	r3, [r7, #68]	; 0x44
}
 8019ec8:	4618      	mov	r0, r3
 8019eca:	374c      	adds	r7, #76	; 0x4c
 8019ecc:	46bd      	mov	sp, r7
 8019ece:	bd90      	pop	{r4, r7, pc}
 8019ed0:	08027f60 	.word	0x08027f60

08019ed4 <_ZN6Parser23parse_nested_expressionEv>:

Expression* Parser::parse_nested_expression()
{
 8019ed4:	b580      	push	{r7, lr}
 8019ed6:	b08a      	sub	sp, #40	; 0x28
 8019ed8:	af00      	add	r7, sp, #0
 8019eda:	6078      	str	r0, [r7, #4]
	auto exp = parse_expression();
 8019edc:	6878      	ldr	r0, [r7, #4]
 8019ede:	f000 fb73 	bl	801a5c8 <_ZN6Parser16parse_expressionEv>
 8019ee2:	6278      	str	r0, [r7, #36]	; 0x24
	assert_token(TOKEN_RIGHT_BRACKET, "closing bracket");
 8019ee4:	f107 0320 	add.w	r3, r7, #32
 8019ee8:	4618      	mov	r0, r3
 8019eea:	f008 fcad 	bl	8022848 <_ZNSaIcEC1Ev>
 8019eee:	f107 0220 	add.w	r2, r7, #32
 8019ef2:	f107 0308 	add.w	r3, r7, #8
 8019ef6:	490e      	ldr	r1, [pc, #56]	; (8019f30 <_ZN6Parser23parse_nested_expressionEv+0x5c>)
 8019ef8:	4618      	mov	r0, r3
 8019efa:	f7e7 fe4c 	bl	8001b96 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8019efe:	f107 0308 	add.w	r3, r7, #8
 8019f02:	461a      	mov	r2, r3
 8019f04:	2127      	movs	r1, #39	; 0x27
 8019f06:	6878      	ldr	r0, [r7, #4]
 8019f08:	f7f9 fb80 	bl	801360c <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8019f0c:	f107 0308 	add.w	r3, r7, #8
 8019f10:	4618      	mov	r0, r3
 8019f12:	f008 ff2a 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8019f16:	f107 0320 	add.w	r3, r7, #32
 8019f1a:	4618      	mov	r0, r3
 8019f1c:	f008 fc95 	bl	802284a <_ZNSaIcED1Ev>
	get_next_token();
 8019f20:	6878      	ldr	r0, [r7, #4]
 8019f22:	f7f9 fe96 	bl	8013c52 <_ZN6Parser14get_next_tokenEv>
	return exp;
 8019f26:	6a7b      	ldr	r3, [r7, #36]	; 0x24
}
 8019f28:	4618      	mov	r0, r3
 8019f2a:	3728      	adds	r7, #40	; 0x28
 8019f2c:	46bd      	mov	sp, r7
 8019f2e:	bd80      	pop	{r7, pc}
 8019f30:	08027f6c 	.word	0x08027f6c

08019f34 <_ZNSt7variantIJP17Primal_expressionP10ExpressionEEC1Ev>:
 8019f34:	b580      	push	{r7, lr}
 8019f36:	b082      	sub	sp, #8
 8019f38:	af00      	add	r7, sp, #0
 8019f3a:	6078      	str	r0, [r7, #4]
 8019f3c:	687b      	ldr	r3, [r7, #4]
 8019f3e:	4618      	mov	r0, r3
 8019f40:	f000 fd45 	bl	801a9ce <_ZNSt8__detail9__variant13_Variant_baseIJP17Primal_expressionP10ExpressionEEC1Ev>
 8019f44:	687b      	ldr	r3, [r7, #4]
 8019f46:	4618      	mov	r0, r3
 8019f48:	3708      	adds	r7, #8
 8019f4a:	46bd      	mov	sp, r7
 8019f4c:	bd80      	pop	{r7, pc}

08019f4e <_ZN19Priority_expressionC1Ev>:
	std::variant<bool, int, float, std::string, Variable*, Function_call*> content;
};

class Expression;

class Priority_expression
 8019f4e:	b580      	push	{r7, lr}
 8019f50:	b082      	sub	sp, #8
 8019f52:	af00      	add	r7, sp, #0
 8019f54:	6078      	str	r0, [r7, #4]
 8019f56:	687b      	ldr	r3, [r7, #4]
 8019f58:	4618      	mov	r0, r3
 8019f5a:	f7ff ffeb 	bl	8019f34 <_ZNSt7variantIJP17Primal_expressionP10ExpressionEEC1Ev>
 8019f5e:	687b      	ldr	r3, [r7, #4]
 8019f60:	4618      	mov	r0, r3
 8019f62:	3708      	adds	r7, #8
 8019f64:	46bd      	mov	sp, r7
 8019f66:	bd80      	pop	{r7, pc}

08019f68 <_ZN6Parser25parse_priority_expressionEv>:

Priority_expression* Parser::parse_priority_expression()
{
 8019f68:	b590      	push	{r4, r7, lr}
 8019f6a:	b087      	sub	sp, #28
 8019f6c:	af00      	add	r7, sp, #0
 8019f6e:	6078      	str	r0, [r7, #4]
	auto exp = new Priority_expression();
 8019f70:	2008      	movs	r0, #8
 8019f72:	f008 fc58 	bl	8022826 <_Znwj>
 8019f76:	4603      	mov	r3, r0
 8019f78:	461c      	mov	r4, r3
 8019f7a:	2300      	movs	r3, #0
 8019f7c:	6023      	str	r3, [r4, #0]
 8019f7e:	2300      	movs	r3, #0
 8019f80:	7123      	strb	r3, [r4, #4]
 8019f82:	4620      	mov	r0, r4
 8019f84:	f7ff ffe3 	bl	8019f4e <_ZN19Priority_expressionC1Ev>
 8019f88:	617c      	str	r4, [r7, #20]
	if(token_buffer.type == TOKEN_LEFT_BRACKET)
 8019f8a:	687b      	ldr	r3, [r7, #4]
 8019f8c:	781b      	ldrb	r3, [r3, #0]
 8019f8e:	2b26      	cmp	r3, #38	; 0x26
 8019f90:	d10f      	bne.n	8019fb2 <_ZN6Parser25parse_priority_expressionEv+0x4a>
	{
		get_next_token();
 8019f92:	6878      	ldr	r0, [r7, #4]
 8019f94:	f7f9 fe5d 	bl	8013c52 <_ZN6Parser14get_next_tokenEv>
		exp->exp = parse_nested_expression();
 8019f98:	6878      	ldr	r0, [r7, #4]
 8019f9a:	f7ff ff9b 	bl	8019ed4 <_ZN6Parser23parse_nested_expressionEv>
 8019f9e:	4603      	mov	r3, r0
 8019fa0:	60fb      	str	r3, [r7, #12]
 8019fa2:	697b      	ldr	r3, [r7, #20]
 8019fa4:	f107 020c 	add.w	r2, r7, #12
 8019fa8:	4611      	mov	r1, r2
 8019faa:	4618      	mov	r0, r3
 8019fac:	f000 fd1c 	bl	801a9e8 <_ZNSt7variantIJP17Primal_expressionP10ExpressionEEaSIS3_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES4_E4typeEE18is_constructible_vISB_S8_E15is_assignable_vIRSB_S8_EERS4_E4typeES9_>
 8019fb0:	e00b      	b.n	8019fca <_ZN6Parser25parse_priority_expressionEv+0x62>
	}
	else
	{
		exp->exp = parse_primal_expression();
 8019fb2:	6878      	ldr	r0, [r7, #4]
 8019fb4:	f7ff fec6 	bl	8019d44 <_ZN6Parser23parse_primal_expressionEv>
 8019fb8:	4603      	mov	r3, r0
 8019fba:	613b      	str	r3, [r7, #16]
 8019fbc:	697b      	ldr	r3, [r7, #20]
 8019fbe:	f107 0210 	add.w	r2, r7, #16
 8019fc2:	4611      	mov	r1, r2
 8019fc4:	4618      	mov	r0, r3
 8019fc6:	f000 fd39 	bl	801aa3c <_ZNSt7variantIJP17Primal_expressionP10ExpressionEEaSIS1_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES4_E4typeEE18is_constructible_vISB_S8_E15is_assignable_vIRSB_S8_EERS4_E4typeES9_>
	}
	return exp;
 8019fca:	697b      	ldr	r3, [r7, #20]
}
 8019fcc:	4618      	mov	r0, r3
 8019fce:	371c      	adds	r7, #28
 8019fd0:	46bd      	mov	sp, r7
 8019fd2:	bd90      	pop	{r4, r7, pc}

08019fd4 <_ZN6Parser20match_unary_operatorEP16Unary_expression>:

bool Parser::match_unary_operator(Unary_expression* exp)
{
 8019fd4:	b480      	push	{r7}
 8019fd6:	b083      	sub	sp, #12
 8019fd8:	af00      	add	r7, sp, #0
 8019fda:	6078      	str	r0, [r7, #4]
 8019fdc:	6039      	str	r1, [r7, #0]
	switch(token_buffer.type)
 8019fde:	687b      	ldr	r3, [r7, #4]
 8019fe0:	781b      	ldrb	r3, [r3, #0]
 8019fe2:	2b17      	cmp	r3, #23
 8019fe4:	d005      	beq.n	8019ff2 <_ZN6Parser20match_unary_operatorEP16Unary_expression+0x1e>
 8019fe6:	2b20      	cmp	r3, #32
 8019fe8:	d107      	bne.n	8019ffa <_ZN6Parser20match_unary_operatorEP16Unary_expression+0x26>
	{
	case TOKEN_MINUS:
		exp->op = UN_OP_MINUS;
 8019fea:	683b      	ldr	r3, [r7, #0]
 8019fec:	2201      	movs	r2, #1
 8019fee:	711a      	strb	r2, [r3, #4]
		break;
 8019ff0:	e005      	b.n	8019ffe <_ZN6Parser20match_unary_operatorEP16Unary_expression+0x2a>
	case TOKEN_EXCLAMATION:
		exp->op = UN_OP_EXCLAMATION;
 8019ff2:	683b      	ldr	r3, [r7, #0]
 8019ff4:	2202      	movs	r2, #2
 8019ff6:	711a      	strb	r2, [r3, #4]
		break;
 8019ff8:	e001      	b.n	8019ffe <_ZN6Parser20match_unary_operatorEP16Unary_expression+0x2a>
	default:
		return false;
 8019ffa:	2300      	movs	r3, #0
 8019ffc:	e000      	b.n	801a000 <_ZN6Parser20match_unary_operatorEP16Unary_expression+0x2c>
	}
	return true;
 8019ffe:	2301      	movs	r3, #1
}
 801a000:	4618      	mov	r0, r3
 801a002:	370c      	adds	r7, #12
 801a004:	46bd      	mov	sp, r7
 801a006:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a00a:	4770      	bx	lr

0801a00c <_ZN6Parser22parse_unary_expressionEv>:

Unary_expression* Parser::parse_unary_expression()
{
 801a00c:	b580      	push	{r7, lr}
 801a00e:	b084      	sub	sp, #16
 801a010:	af00      	add	r7, sp, #0
 801a012:	6078      	str	r0, [r7, #4]
	auto exp = new Unary_expression();
 801a014:	2008      	movs	r0, #8
 801a016:	f008 fc06 	bl	8022826 <_Znwj>
 801a01a:	4603      	mov	r3, r0
 801a01c:	2200      	movs	r2, #0
 801a01e:	601a      	str	r2, [r3, #0]
 801a020:	2200      	movs	r2, #0
 801a022:	711a      	strb	r2, [r3, #4]
 801a024:	60fb      	str	r3, [r7, #12]
	if(match_unary_operator(exp))
 801a026:	68f9      	ldr	r1, [r7, #12]
 801a028:	6878      	ldr	r0, [r7, #4]
 801a02a:	f7ff ffd3 	bl	8019fd4 <_ZN6Parser20match_unary_operatorEP16Unary_expression>
 801a02e:	4603      	mov	r3, r0
 801a030:	2b00      	cmp	r3, #0
 801a032:	d002      	beq.n	801a03a <_ZN6Parser22parse_unary_expressionEv+0x2e>
	{
		get_next_token();
 801a034:	6878      	ldr	r0, [r7, #4]
 801a036:	f7f9 fe0c 	bl	8013c52 <_ZN6Parser14get_next_tokenEv>
	}
	exp->prior_exp = parse_priority_expression();
 801a03a:	6878      	ldr	r0, [r7, #4]
 801a03c:	f7ff ff94 	bl	8019f68 <_ZN6Parser25parse_priority_expressionEv>
 801a040:	4602      	mov	r2, r0
 801a042:	68fb      	ldr	r3, [r7, #12]
 801a044:	601a      	str	r2, [r3, #0]
	return exp;
 801a046:	68fb      	ldr	r3, [r7, #12]
}
 801a048:	4618      	mov	r0, r3
 801a04a:	3710      	adds	r7, #16
 801a04c:	46bd      	mov	sp, r7
 801a04e:	bd80      	pop	{r7, pc}

0801a050 <_ZN6Parser22parse_power_expressionEv>:

Power_expression* Parser::parse_power_expression()
{
 801a050:	b580      	push	{r7, lr}
 801a052:	b084      	sub	sp, #16
 801a054:	af00      	add	r7, sp, #0
 801a056:	6078      	str	r0, [r7, #4]
	auto exp = new Power_expression();
 801a058:	2008      	movs	r0, #8
 801a05a:	f008 fbe4 	bl	8022826 <_Znwj>
 801a05e:	4603      	mov	r3, r0
 801a060:	2200      	movs	r2, #0
 801a062:	601a      	str	r2, [r3, #0]
 801a064:	2200      	movs	r2, #0
 801a066:	605a      	str	r2, [r3, #4]
 801a068:	60fb      	str	r3, [r7, #12]
	exp->left_un_exp = parse_unary_expression();
 801a06a:	6878      	ldr	r0, [r7, #4]
 801a06c:	f7ff ffce 	bl	801a00c <_ZN6Parser22parse_unary_expressionEv>
 801a070:	4602      	mov	r2, r0
 801a072:	68fb      	ldr	r3, [r7, #12]
 801a074:	601a      	str	r2, [r3, #0]
	if(token_buffer.type == TOKEN_POWER)
 801a076:	687b      	ldr	r3, [r7, #4]
 801a078:	781b      	ldrb	r3, [r3, #0]
 801a07a:	2b23      	cmp	r3, #35	; 0x23
 801a07c:	d109      	bne.n	801a092 <_ZN6Parser22parse_power_expressionEv+0x42>
	{
		get_next_token();
 801a07e:	6878      	ldr	r0, [r7, #4]
 801a080:	f7f9 fde7 	bl	8013c52 <_ZN6Parser14get_next_tokenEv>
		exp->right_un_exp = parse_unary_expression();
 801a084:	6878      	ldr	r0, [r7, #4]
 801a086:	f7ff ffc1 	bl	801a00c <_ZN6Parser22parse_unary_expressionEv>
 801a08a:	4602      	mov	r2, r0
 801a08c:	68fb      	ldr	r3, [r7, #12]
 801a08e:	605a      	str	r2, [r3, #4]
 801a090:	e002      	b.n	801a098 <_ZN6Parser22parse_power_expressionEv+0x48>
	}
	else
	{
		exp->right_un_exp = nullptr;
 801a092:	68fb      	ldr	r3, [r7, #12]
 801a094:	2200      	movs	r2, #0
 801a096:	605a      	str	r2, [r3, #4]
	}
	return exp;
 801a098:	68fb      	ldr	r3, [r7, #12]
}
 801a09a:	4618      	mov	r0, r3
 801a09c:	3710      	adds	r7, #16
 801a09e:	46bd      	mov	sp, r7
 801a0a0:	bd80      	pop	{r7, pc}

0801a0a2 <_ZN6Parser23match_multiply_operatorEP19Multiply_expression>:

bool Parser::match_multiply_operator(Multiply_expression* exp)
{
 801a0a2:	b580      	push	{r7, lr}
 801a0a4:	b084      	sub	sp, #16
 801a0a6:	af00      	add	r7, sp, #0
 801a0a8:	6078      	str	r0, [r7, #4]
 801a0aa:	6039      	str	r1, [r7, #0]
	switch(token_buffer.type)
 801a0ac:	687b      	ldr	r3, [r7, #4]
 801a0ae:	781b      	ldrb	r3, [r3, #0]
 801a0b0:	2b24      	cmp	r3, #36	; 0x24
 801a0b2:	d01c      	beq.n	801a0ee <_ZN6Parser23match_multiply_operatorEP19Multiply_expression+0x4c>
 801a0b4:	2b24      	cmp	r3, #36	; 0x24
 801a0b6:	dc25      	bgt.n	801a104 <_ZN6Parser23match_multiply_operatorEP19Multiply_expression+0x62>
 801a0b8:	2b21      	cmp	r3, #33	; 0x21
 801a0ba:	d002      	beq.n	801a0c2 <_ZN6Parser23match_multiply_operatorEP19Multiply_expression+0x20>
 801a0bc:	2b22      	cmp	r3, #34	; 0x22
 801a0be:	d00b      	beq.n	801a0d8 <_ZN6Parser23match_multiply_operatorEP19Multiply_expression+0x36>
 801a0c0:	e020      	b.n	801a104 <_ZN6Parser23match_multiply_operatorEP19Multiply_expression+0x62>
	{
	case TOKEN_MULTIPLY:
		exp->ops.push_back(MULT_OP_MULTIPLY);
 801a0c2:	683b      	ldr	r3, [r7, #0]
 801a0c4:	330c      	adds	r3, #12
 801a0c6:	2201      	movs	r2, #1
 801a0c8:	737a      	strb	r2, [r7, #13]
 801a0ca:	f107 020d 	add.w	r2, r7, #13
 801a0ce:	4611      	mov	r1, r2
 801a0d0:	4618      	mov	r0, r3
 801a0d2:	f000 fcdd 	bl	801aa90 <_ZNSt6vectorI13mult_operatorSaIS0_EE9push_backEOS0_>
		break;
 801a0d6:	e017      	b.n	801a108 <_ZN6Parser23match_multiply_operatorEP19Multiply_expression+0x66>
	case TOKEN_DIVIDE:
		exp->ops.push_back(MULT_OP_DIVIDE);
 801a0d8:	683b      	ldr	r3, [r7, #0]
 801a0da:	330c      	adds	r3, #12
 801a0dc:	2202      	movs	r2, #2
 801a0de:	73ba      	strb	r2, [r7, #14]
 801a0e0:	f107 020e 	add.w	r2, r7, #14
 801a0e4:	4611      	mov	r1, r2
 801a0e6:	4618      	mov	r0, r3
 801a0e8:	f000 fcd2 	bl	801aa90 <_ZNSt6vectorI13mult_operatorSaIS0_EE9push_backEOS0_>
		break;
 801a0ec:	e00c      	b.n	801a108 <_ZN6Parser23match_multiply_operatorEP19Multiply_expression+0x66>
	case TOKEN_MODULO:
		exp->ops.push_back(MULT_OP_MODULO);
 801a0ee:	683b      	ldr	r3, [r7, #0]
 801a0f0:	330c      	adds	r3, #12
 801a0f2:	2203      	movs	r2, #3
 801a0f4:	73fa      	strb	r2, [r7, #15]
 801a0f6:	f107 020f 	add.w	r2, r7, #15
 801a0fa:	4611      	mov	r1, r2
 801a0fc:	4618      	mov	r0, r3
 801a0fe:	f000 fcc7 	bl	801aa90 <_ZNSt6vectorI13mult_operatorSaIS0_EE9push_backEOS0_>
		break;
 801a102:	e001      	b.n	801a108 <_ZN6Parser23match_multiply_operatorEP19Multiply_expression+0x66>
	default:
		return false;
 801a104:	2300      	movs	r3, #0
 801a106:	e000      	b.n	801a10a <_ZN6Parser23match_multiply_operatorEP19Multiply_expression+0x68>
	}
	return true;
 801a108:	2301      	movs	r3, #1
}
 801a10a:	4618      	mov	r0, r3
 801a10c:	3710      	adds	r7, #16
 801a10e:	46bd      	mov	sp, r7
 801a110:	bd80      	pop	{r7, pc}

0801a112 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EEC1Ev>:
      _Vector_base() = default;
 801a112:	b580      	push	{r7, lr}
 801a114:	b082      	sub	sp, #8
 801a116:	af00      	add	r7, sp, #0
 801a118:	6078      	str	r0, [r7, #4]
 801a11a:	687b      	ldr	r3, [r7, #4]
 801a11c:	4618      	mov	r0, r3
 801a11e:	f000 fcc8 	bl	801aab2 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE12_Vector_implC1Ev>
 801a122:	687b      	ldr	r3, [r7, #4]
 801a124:	4618      	mov	r0, r3
 801a126:	3708      	adds	r7, #8
 801a128:	46bd      	mov	sp, r7
 801a12a:	bd80      	pop	{r7, pc}

0801a12c <_ZNSt6vectorIP16Power_expressionSaIS1_EEC1Ev>:
      vector() = default;
 801a12c:	b580      	push	{r7, lr}
 801a12e:	b082      	sub	sp, #8
 801a130:	af00      	add	r7, sp, #0
 801a132:	6078      	str	r0, [r7, #4]
 801a134:	687b      	ldr	r3, [r7, #4]
 801a136:	4618      	mov	r0, r3
 801a138:	f7ff ffeb 	bl	801a112 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EEC1Ev>
 801a13c:	687b      	ldr	r3, [r7, #4]
 801a13e:	4618      	mov	r0, r3
 801a140:	3708      	adds	r7, #8
 801a142:	46bd      	mov	sp, r7
 801a144:	bd80      	pop	{r7, pc}

0801a146 <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EEC1Ev>:
      _Vector_base() = default;
 801a146:	b580      	push	{r7, lr}
 801a148:	b082      	sub	sp, #8
 801a14a:	af00      	add	r7, sp, #0
 801a14c:	6078      	str	r0, [r7, #4]
 801a14e:	687b      	ldr	r3, [r7, #4]
 801a150:	4618      	mov	r0, r3
 801a152:	f000 fcbe 	bl	801aad2 <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE12_Vector_implC1Ev>
 801a156:	687b      	ldr	r3, [r7, #4]
 801a158:	4618      	mov	r0, r3
 801a15a:	3708      	adds	r7, #8
 801a15c:	46bd      	mov	sp, r7
 801a15e:	bd80      	pop	{r7, pc}

0801a160 <_ZNSt6vectorI13mult_operatorSaIS0_EEC1Ev>:
      vector() = default;
 801a160:	b580      	push	{r7, lr}
 801a162:	b082      	sub	sp, #8
 801a164:	af00      	add	r7, sp, #0
 801a166:	6078      	str	r0, [r7, #4]
 801a168:	687b      	ldr	r3, [r7, #4]
 801a16a:	4618      	mov	r0, r3
 801a16c:	f7ff ffeb 	bl	801a146 <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EEC1Ev>
 801a170:	687b      	ldr	r3, [r7, #4]
 801a172:	4618      	mov	r0, r3
 801a174:	3708      	adds	r7, #8
 801a176:	46bd      	mov	sp, r7
 801a178:	bd80      	pop	{r7, pc}

0801a17a <_ZN19Multiply_expressionC1Ev>:
	MULT_OP_MULTIPLY,
	MULT_OP_DIVIDE,
	MULT_OP_MODULO
}mult_operator;

class Multiply_expression
 801a17a:	b580      	push	{r7, lr}
 801a17c:	b082      	sub	sp, #8
 801a17e:	af00      	add	r7, sp, #0
 801a180:	6078      	str	r0, [r7, #4]
 801a182:	687b      	ldr	r3, [r7, #4]
 801a184:	4618      	mov	r0, r3
 801a186:	f7ff ffd1 	bl	801a12c <_ZNSt6vectorIP16Power_expressionSaIS1_EEC1Ev>
 801a18a:	687b      	ldr	r3, [r7, #4]
 801a18c:	330c      	adds	r3, #12
 801a18e:	4618      	mov	r0, r3
 801a190:	f7ff ffe6 	bl	801a160 <_ZNSt6vectorI13mult_operatorSaIS0_EEC1Ev>
 801a194:	687b      	ldr	r3, [r7, #4]
 801a196:	4618      	mov	r0, r3
 801a198:	3708      	adds	r7, #8
 801a19a:	46bd      	mov	sp, r7
 801a19c:	bd80      	pop	{r7, pc}

0801a19e <_ZN6Parser25parse_multiply_expressionEv>:

Multiply_expression* Parser::parse_multiply_expression()
{
 801a19e:	b590      	push	{r4, r7, lr}
 801a1a0:	b087      	sub	sp, #28
 801a1a2:	af00      	add	r7, sp, #0
 801a1a4:	6078      	str	r0, [r7, #4]
	auto exp = new Multiply_expression();
 801a1a6:	2018      	movs	r0, #24
 801a1a8:	f008 fb3d 	bl	8022826 <_Znwj>
 801a1ac:	4603      	mov	r3, r0
 801a1ae:	461c      	mov	r4, r3
 801a1b0:	4622      	mov	r2, r4
 801a1b2:	2300      	movs	r3, #0
 801a1b4:	6013      	str	r3, [r2, #0]
 801a1b6:	6053      	str	r3, [r2, #4]
 801a1b8:	6093      	str	r3, [r2, #8]
 801a1ba:	60d3      	str	r3, [r2, #12]
 801a1bc:	6113      	str	r3, [r2, #16]
 801a1be:	6153      	str	r3, [r2, #20]
 801a1c0:	4620      	mov	r0, r4
 801a1c2:	f7ff ffda 	bl	801a17a <_ZN19Multiply_expressionC1Ev>
 801a1c6:	617c      	str	r4, [r7, #20]
	exp->pow_exps.push_back(parse_power_expression());
 801a1c8:	697c      	ldr	r4, [r7, #20]
 801a1ca:	6878      	ldr	r0, [r7, #4]
 801a1cc:	f7ff ff40 	bl	801a050 <_ZN6Parser22parse_power_expressionEv>
 801a1d0:	4603      	mov	r3, r0
 801a1d2:	60fb      	str	r3, [r7, #12]
 801a1d4:	f107 030c 	add.w	r3, r7, #12
 801a1d8:	4619      	mov	r1, r3
 801a1da:	4620      	mov	r0, r4
 801a1dc:	f000 fc89 	bl	801aaf2 <_ZNSt6vectorIP16Power_expressionSaIS1_EE9push_backEOS1_>
	while(match_multiply_operator(exp))
 801a1e0:	6979      	ldr	r1, [r7, #20]
 801a1e2:	6878      	ldr	r0, [r7, #4]
 801a1e4:	f7ff ff5d 	bl	801a0a2 <_ZN6Parser23match_multiply_operatorEP19Multiply_expression>
 801a1e8:	4603      	mov	r3, r0
 801a1ea:	2b00      	cmp	r3, #0
 801a1ec:	d00f      	beq.n	801a20e <_ZN6Parser25parse_multiply_expressionEv+0x70>
	{
		get_next_token();
 801a1ee:	6878      	ldr	r0, [r7, #4]
 801a1f0:	f7f9 fd2f 	bl	8013c52 <_ZN6Parser14get_next_tokenEv>
		exp->pow_exps.push_back(parse_power_expression());
 801a1f4:	697c      	ldr	r4, [r7, #20]
 801a1f6:	6878      	ldr	r0, [r7, #4]
 801a1f8:	f7ff ff2a 	bl	801a050 <_ZN6Parser22parse_power_expressionEv>
 801a1fc:	4603      	mov	r3, r0
 801a1fe:	613b      	str	r3, [r7, #16]
 801a200:	f107 0310 	add.w	r3, r7, #16
 801a204:	4619      	mov	r1, r3
 801a206:	4620      	mov	r0, r4
 801a208:	f000 fc73 	bl	801aaf2 <_ZNSt6vectorIP16Power_expressionSaIS1_EE9push_backEOS1_>
	while(match_multiply_operator(exp))
 801a20c:	e7e8      	b.n	801a1e0 <_ZN6Parser25parse_multiply_expressionEv+0x42>
	}
	return exp;
 801a20e:	697b      	ldr	r3, [r7, #20]
}
 801a210:	4618      	mov	r0, r3
 801a212:	371c      	adds	r7, #28
 801a214:	46bd      	mov	sp, r7
 801a216:	bd90      	pop	{r4, r7, pc}

0801a218 <_ZN6Parser18match_sum_operatorEP14Sum_expression>:

bool Parser::match_sum_operator(Sum_expression* exp)
{
 801a218:	b580      	push	{r7, lr}
 801a21a:	b084      	sub	sp, #16
 801a21c:	af00      	add	r7, sp, #0
 801a21e:	6078      	str	r0, [r7, #4]
 801a220:	6039      	str	r1, [r7, #0]
	switch(token_buffer.type)
 801a222:	687b      	ldr	r3, [r7, #4]
 801a224:	781b      	ldrb	r3, [r3, #0]
 801a226:	2b1f      	cmp	r3, #31
 801a228:	d002      	beq.n	801a230 <_ZN6Parser18match_sum_operatorEP14Sum_expression+0x18>
 801a22a:	2b20      	cmp	r3, #32
 801a22c:	d00b      	beq.n	801a246 <_ZN6Parser18match_sum_operatorEP14Sum_expression+0x2e>
 801a22e:	e015      	b.n	801a25c <_ZN6Parser18match_sum_operatorEP14Sum_expression+0x44>
	{
	case TOKEN_PLUS:
		exp->ops.push_back(SUM_OP_PLUS);
 801a230:	683b      	ldr	r3, [r7, #0]
 801a232:	330c      	adds	r3, #12
 801a234:	2200      	movs	r2, #0
 801a236:	73ba      	strb	r2, [r7, #14]
 801a238:	f107 020e 	add.w	r2, r7, #14
 801a23c:	4611      	mov	r1, r2
 801a23e:	4618      	mov	r0, r3
 801a240:	f000 fc68 	bl	801ab14 <_ZNSt6vectorI12sum_operatorSaIS0_EE9push_backEOS0_>
		break;
 801a244:	e00c      	b.n	801a260 <_ZN6Parser18match_sum_operatorEP14Sum_expression+0x48>
	case TOKEN_MINUS:
		exp->ops.push_back(SUM_OP_MINUS);
 801a246:	683b      	ldr	r3, [r7, #0]
 801a248:	330c      	adds	r3, #12
 801a24a:	2201      	movs	r2, #1
 801a24c:	73fa      	strb	r2, [r7, #15]
 801a24e:	f107 020f 	add.w	r2, r7, #15
 801a252:	4611      	mov	r1, r2
 801a254:	4618      	mov	r0, r3
 801a256:	f000 fc5d 	bl	801ab14 <_ZNSt6vectorI12sum_operatorSaIS0_EE9push_backEOS0_>
		break;
 801a25a:	e001      	b.n	801a260 <_ZN6Parser18match_sum_operatorEP14Sum_expression+0x48>
	default:
		return false;
 801a25c:	2300      	movs	r3, #0
 801a25e:	e000      	b.n	801a262 <_ZN6Parser18match_sum_operatorEP14Sum_expression+0x4a>
	}
	return true;
 801a260:	2301      	movs	r3, #1
}
 801a262:	4618      	mov	r0, r3
 801a264:	3710      	adds	r7, #16
 801a266:	46bd      	mov	sp, r7
 801a268:	bd80      	pop	{r7, pc}

0801a26a <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EEC1Ev>:
      _Vector_base() = default;
 801a26a:	b580      	push	{r7, lr}
 801a26c:	b082      	sub	sp, #8
 801a26e:	af00      	add	r7, sp, #0
 801a270:	6078      	str	r0, [r7, #4]
 801a272:	687b      	ldr	r3, [r7, #4]
 801a274:	4618      	mov	r0, r3
 801a276:	f000 fc5e 	bl	801ab36 <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE12_Vector_implC1Ev>
 801a27a:	687b      	ldr	r3, [r7, #4]
 801a27c:	4618      	mov	r0, r3
 801a27e:	3708      	adds	r7, #8
 801a280:	46bd      	mov	sp, r7
 801a282:	bd80      	pop	{r7, pc}

0801a284 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EEC1Ev>:
      vector() = default;
 801a284:	b580      	push	{r7, lr}
 801a286:	b082      	sub	sp, #8
 801a288:	af00      	add	r7, sp, #0
 801a28a:	6078      	str	r0, [r7, #4]
 801a28c:	687b      	ldr	r3, [r7, #4]
 801a28e:	4618      	mov	r0, r3
 801a290:	f7ff ffeb 	bl	801a26a <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EEC1Ev>
 801a294:	687b      	ldr	r3, [r7, #4]
 801a296:	4618      	mov	r0, r3
 801a298:	3708      	adds	r7, #8
 801a29a:	46bd      	mov	sp, r7
 801a29c:	bd80      	pop	{r7, pc}

0801a29e <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EEC1Ev>:
      _Vector_base() = default;
 801a29e:	b580      	push	{r7, lr}
 801a2a0:	b082      	sub	sp, #8
 801a2a2:	af00      	add	r7, sp, #0
 801a2a4:	6078      	str	r0, [r7, #4]
 801a2a6:	687b      	ldr	r3, [r7, #4]
 801a2a8:	4618      	mov	r0, r3
 801a2aa:	f000 fc54 	bl	801ab56 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE12_Vector_implC1Ev>
 801a2ae:	687b      	ldr	r3, [r7, #4]
 801a2b0:	4618      	mov	r0, r3
 801a2b2:	3708      	adds	r7, #8
 801a2b4:	46bd      	mov	sp, r7
 801a2b6:	bd80      	pop	{r7, pc}

0801a2b8 <_ZNSt6vectorI12sum_operatorSaIS0_EEC1Ev>:
      vector() = default;
 801a2b8:	b580      	push	{r7, lr}
 801a2ba:	b082      	sub	sp, #8
 801a2bc:	af00      	add	r7, sp, #0
 801a2be:	6078      	str	r0, [r7, #4]
 801a2c0:	687b      	ldr	r3, [r7, #4]
 801a2c2:	4618      	mov	r0, r3
 801a2c4:	f7ff ffeb 	bl	801a29e <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EEC1Ev>
 801a2c8:	687b      	ldr	r3, [r7, #4]
 801a2ca:	4618      	mov	r0, r3
 801a2cc:	3708      	adds	r7, #8
 801a2ce:	46bd      	mov	sp, r7
 801a2d0:	bd80      	pop	{r7, pc}

0801a2d2 <_ZN14Sum_expressionC1Ev>:
{
	SUM_OP_PLUS,
	SUM_OP_MINUS
}sum_operator;

class Sum_expression
 801a2d2:	b580      	push	{r7, lr}
 801a2d4:	b082      	sub	sp, #8
 801a2d6:	af00      	add	r7, sp, #0
 801a2d8:	6078      	str	r0, [r7, #4]
 801a2da:	687b      	ldr	r3, [r7, #4]
 801a2dc:	4618      	mov	r0, r3
 801a2de:	f7ff ffd1 	bl	801a284 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EEC1Ev>
 801a2e2:	687b      	ldr	r3, [r7, #4]
 801a2e4:	330c      	adds	r3, #12
 801a2e6:	4618      	mov	r0, r3
 801a2e8:	f7ff ffe6 	bl	801a2b8 <_ZNSt6vectorI12sum_operatorSaIS0_EEC1Ev>
 801a2ec:	687b      	ldr	r3, [r7, #4]
 801a2ee:	4618      	mov	r0, r3
 801a2f0:	3708      	adds	r7, #8
 801a2f2:	46bd      	mov	sp, r7
 801a2f4:	bd80      	pop	{r7, pc}

0801a2f6 <_ZN6Parser20parse_sum_expressionEv>:

Sum_expression* Parser::parse_sum_expression()
{
 801a2f6:	b590      	push	{r4, r7, lr}
 801a2f8:	b087      	sub	sp, #28
 801a2fa:	af00      	add	r7, sp, #0
 801a2fc:	6078      	str	r0, [r7, #4]
	auto exp = new Sum_expression();
 801a2fe:	2018      	movs	r0, #24
 801a300:	f008 fa91 	bl	8022826 <_Znwj>
 801a304:	4603      	mov	r3, r0
 801a306:	461c      	mov	r4, r3
 801a308:	4622      	mov	r2, r4
 801a30a:	2300      	movs	r3, #0
 801a30c:	6013      	str	r3, [r2, #0]
 801a30e:	6053      	str	r3, [r2, #4]
 801a310:	6093      	str	r3, [r2, #8]
 801a312:	60d3      	str	r3, [r2, #12]
 801a314:	6113      	str	r3, [r2, #16]
 801a316:	6153      	str	r3, [r2, #20]
 801a318:	4620      	mov	r0, r4
 801a31a:	f7ff ffda 	bl	801a2d2 <_ZN14Sum_expressionC1Ev>
 801a31e:	617c      	str	r4, [r7, #20]
	exp->mult_exps.push_back(parse_multiply_expression());
 801a320:	697c      	ldr	r4, [r7, #20]
 801a322:	6878      	ldr	r0, [r7, #4]
 801a324:	f7ff ff3b 	bl	801a19e <_ZN6Parser25parse_multiply_expressionEv>
 801a328:	4603      	mov	r3, r0
 801a32a:	60fb      	str	r3, [r7, #12]
 801a32c:	f107 030c 	add.w	r3, r7, #12
 801a330:	4619      	mov	r1, r3
 801a332:	4620      	mov	r0, r4
 801a334:	f000 fc1f 	bl	801ab76 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE9push_backEOS1_>
	while(match_sum_operator(exp))
 801a338:	6979      	ldr	r1, [r7, #20]
 801a33a:	6878      	ldr	r0, [r7, #4]
 801a33c:	f7ff ff6c 	bl	801a218 <_ZN6Parser18match_sum_operatorEP14Sum_expression>
 801a340:	4603      	mov	r3, r0
 801a342:	2b00      	cmp	r3, #0
 801a344:	d00f      	beq.n	801a366 <_ZN6Parser20parse_sum_expressionEv+0x70>
	{
		get_next_token();
 801a346:	6878      	ldr	r0, [r7, #4]
 801a348:	f7f9 fc83 	bl	8013c52 <_ZN6Parser14get_next_tokenEv>
		exp->mult_exps.push_back(parse_multiply_expression());
 801a34c:	697c      	ldr	r4, [r7, #20]
 801a34e:	6878      	ldr	r0, [r7, #4]
 801a350:	f7ff ff25 	bl	801a19e <_ZN6Parser25parse_multiply_expressionEv>
 801a354:	4603      	mov	r3, r0
 801a356:	613b      	str	r3, [r7, #16]
 801a358:	f107 0310 	add.w	r3, r7, #16
 801a35c:	4619      	mov	r1, r3
 801a35e:	4620      	mov	r0, r4
 801a360:	f000 fc09 	bl	801ab76 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE9push_backEOS1_>
	while(match_sum_operator(exp))
 801a364:	e7e8      	b.n	801a338 <_ZN6Parser20parse_sum_expressionEv+0x42>
	}
	return exp;
 801a366:	697b      	ldr	r3, [r7, #20]
}
 801a368:	4618      	mov	r0, r3
 801a36a:	371c      	adds	r7, #28
 801a36c:	46bd      	mov	sp, r7
 801a36e:	bd90      	pop	{r4, r7, pc}

0801a370 <_ZN6Parser23match_relation_operatorEP19Relation_expression>:

bool Parser::match_relation_operator(Relation_expression* exp)
{
 801a370:	b480      	push	{r7}
 801a372:	b083      	sub	sp, #12
 801a374:	af00      	add	r7, sp, #0
 801a376:	6078      	str	r0, [r7, #4]
 801a378:	6039      	str	r1, [r7, #0]
	switch (token_buffer.type)
 801a37a:	687b      	ldr	r3, [r7, #4]
 801a37c:	781b      	ldrb	r3, [r3, #0]
 801a37e:	3b19      	subs	r3, #25
 801a380:	2b03      	cmp	r3, #3
 801a382:	d81b      	bhi.n	801a3bc <_ZN6Parser23match_relation_operatorEP19Relation_expression+0x4c>
 801a384:	a201      	add	r2, pc, #4	; (adr r2, 801a38c <_ZN6Parser23match_relation_operatorEP19Relation_expression+0x1c>)
 801a386:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801a38a:	bf00      	nop
 801a38c:	0801a3ad 	.word	0x0801a3ad
 801a390:	0801a3b5 	.word	0x0801a3b5
 801a394:	0801a39d 	.word	0x0801a39d
 801a398:	0801a3a5 	.word	0x0801a3a5
	{
	case TOKEN_SMALLER_THAN:
		exp->op = REL_OP_SMALLER;
 801a39c:	683b      	ldr	r3, [r7, #0]
 801a39e:	2201      	movs	r2, #1
 801a3a0:	721a      	strb	r2, [r3, #8]
		break;
 801a3a2:	e010      	b.n	801a3c6 <_ZN6Parser23match_relation_operatorEP19Relation_expression+0x56>
	case TOKEN_SMALLER_OR_EQUAL:
		exp->op = REL_OP_SMALLER_EQUAL;
 801a3a4:	683b      	ldr	r3, [r7, #0]
 801a3a6:	2202      	movs	r2, #2
 801a3a8:	721a      	strb	r2, [r3, #8]
		break;
 801a3aa:	e00c      	b.n	801a3c6 <_ZN6Parser23match_relation_operatorEP19Relation_expression+0x56>
	case TOKEN_GREATER_THAN:
		exp->op = REL_OP_GREATER;
 801a3ac:	683b      	ldr	r3, [r7, #0]
 801a3ae:	2203      	movs	r2, #3
 801a3b0:	721a      	strb	r2, [r3, #8]
		break;
 801a3b2:	e008      	b.n	801a3c6 <_ZN6Parser23match_relation_operatorEP19Relation_expression+0x56>
	case TOKEN_GREATER_OR_EQUAL:
		exp->op = REL_OP_SMALLER_EQUAL;
 801a3b4:	683b      	ldr	r3, [r7, #0]
 801a3b6:	2202      	movs	r2, #2
 801a3b8:	721a      	strb	r2, [r3, #8]
		break;
 801a3ba:	e004      	b.n	801a3c6 <_ZN6Parser23match_relation_operatorEP19Relation_expression+0x56>
	default:
		exp->right_sum_exp = nullptr;
 801a3bc:	683b      	ldr	r3, [r7, #0]
 801a3be:	2200      	movs	r2, #0
 801a3c0:	605a      	str	r2, [r3, #4]
		return false;
 801a3c2:	2300      	movs	r3, #0
 801a3c4:	e000      	b.n	801a3c8 <_ZN6Parser23match_relation_operatorEP19Relation_expression+0x58>
	}
	return true;
 801a3c6:	2301      	movs	r3, #1
}
 801a3c8:	4618      	mov	r0, r3
 801a3ca:	370c      	adds	r7, #12
 801a3cc:	46bd      	mov	sp, r7
 801a3ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a3d2:	4770      	bx	lr

0801a3d4 <_ZN6Parser25parse_relation_expressionEv>:

Relation_expression* Parser::parse_relation_expression()
{
 801a3d4:	b580      	push	{r7, lr}
 801a3d6:	b084      	sub	sp, #16
 801a3d8:	af00      	add	r7, sp, #0
 801a3da:	6078      	str	r0, [r7, #4]
	auto exp = new Relation_expression();
 801a3dc:	200c      	movs	r0, #12
 801a3de:	f008 fa22 	bl	8022826 <_Znwj>
 801a3e2:	4603      	mov	r3, r0
 801a3e4:	2200      	movs	r2, #0
 801a3e6:	601a      	str	r2, [r3, #0]
 801a3e8:	2200      	movs	r2, #0
 801a3ea:	605a      	str	r2, [r3, #4]
 801a3ec:	2200      	movs	r2, #0
 801a3ee:	721a      	strb	r2, [r3, #8]
 801a3f0:	60fb      	str	r3, [r7, #12]
	exp->left_sum_exp = parse_sum_expression();
 801a3f2:	6878      	ldr	r0, [r7, #4]
 801a3f4:	f7ff ff7f 	bl	801a2f6 <_ZN6Parser20parse_sum_expressionEv>
 801a3f8:	4602      	mov	r2, r0
 801a3fa:	68fb      	ldr	r3, [r7, #12]
 801a3fc:	601a      	str	r2, [r3, #0]
	if(match_relation_operator(exp))
 801a3fe:	68f9      	ldr	r1, [r7, #12]
 801a400:	6878      	ldr	r0, [r7, #4]
 801a402:	f7ff ffb5 	bl	801a370 <_ZN6Parser23match_relation_operatorEP19Relation_expression>
 801a406:	4603      	mov	r3, r0
 801a408:	2b00      	cmp	r3, #0
 801a40a:	d008      	beq.n	801a41e <_ZN6Parser25parse_relation_expressionEv+0x4a>
	{
		get_next_token();
 801a40c:	6878      	ldr	r0, [r7, #4]
 801a40e:	f7f9 fc20 	bl	8013c52 <_ZN6Parser14get_next_tokenEv>
		exp->right_sum_exp = parse_sum_expression();
 801a412:	6878      	ldr	r0, [r7, #4]
 801a414:	f7ff ff6f 	bl	801a2f6 <_ZN6Parser20parse_sum_expressionEv>
 801a418:	4602      	mov	r2, r0
 801a41a:	68fb      	ldr	r3, [r7, #12]
 801a41c:	605a      	str	r2, [r3, #4]
	}
	return exp;
 801a41e:	68fb      	ldr	r3, [r7, #12]
}
 801a420:	4618      	mov	r0, r3
 801a422:	3710      	adds	r7, #16
 801a424:	46bd      	mov	sp, r7
 801a426:	bd80      	pop	{r7, pc}

0801a428 <_ZN6Parser22match_compare_operatorEP18Compare_expression>:

bool Parser::match_compare_operator(Compare_expression *exp)
{
 801a428:	b480      	push	{r7}
 801a42a:	b083      	sub	sp, #12
 801a42c:	af00      	add	r7, sp, #0
 801a42e:	6078      	str	r0, [r7, #4]
 801a430:	6039      	str	r1, [r7, #0]
	switch (token_buffer.type)
 801a432:	687b      	ldr	r3, [r7, #4]
 801a434:	781b      	ldrb	r3, [r3, #0]
 801a436:	2b1d      	cmp	r3, #29
 801a438:	d002      	beq.n	801a440 <_ZN6Parser22match_compare_operatorEP18Compare_expression+0x18>
 801a43a:	2b1e      	cmp	r3, #30
 801a43c:	d004      	beq.n	801a448 <_ZN6Parser22match_compare_operatorEP18Compare_expression+0x20>
 801a43e:	e007      	b.n	801a450 <_ZN6Parser22match_compare_operatorEP18Compare_expression+0x28>
	{
	case TOKEN_EQUALS:
		exp->op = COMP_OP_EQUAL;
 801a440:	683b      	ldr	r3, [r7, #0]
 801a442:	2201      	movs	r2, #1
 801a444:	721a      	strb	r2, [r3, #8]
		break;
 801a446:	e008      	b.n	801a45a <_ZN6Parser22match_compare_operatorEP18Compare_expression+0x32>
	case TOKEN_NOT_EQUAL:
		exp->op = COMP_OP_NOT_EQUAL;
 801a448:	683b      	ldr	r3, [r7, #0]
 801a44a:	2202      	movs	r2, #2
 801a44c:	721a      	strb	r2, [r3, #8]
		break;
 801a44e:	e004      	b.n	801a45a <_ZN6Parser22match_compare_operatorEP18Compare_expression+0x32>
	default:
		exp->right_rel_exp = nullptr;
 801a450:	683b      	ldr	r3, [r7, #0]
 801a452:	2200      	movs	r2, #0
 801a454:	605a      	str	r2, [r3, #4]
		return false;
 801a456:	2300      	movs	r3, #0
 801a458:	e000      	b.n	801a45c <_ZN6Parser22match_compare_operatorEP18Compare_expression+0x34>
	}
	return true;
 801a45a:	2301      	movs	r3, #1
}
 801a45c:	4618      	mov	r0, r3
 801a45e:	370c      	adds	r7, #12
 801a460:	46bd      	mov	sp, r7
 801a462:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a466:	4770      	bx	lr

0801a468 <_ZN6Parser24parse_compare_expressionEv>:

Compare_expression* Parser::parse_compare_expression()
{
 801a468:	b580      	push	{r7, lr}
 801a46a:	b084      	sub	sp, #16
 801a46c:	af00      	add	r7, sp, #0
 801a46e:	6078      	str	r0, [r7, #4]
	auto exp = new Compare_expression();
 801a470:	200c      	movs	r0, #12
 801a472:	f008 f9d8 	bl	8022826 <_Znwj>
 801a476:	4603      	mov	r3, r0
 801a478:	2200      	movs	r2, #0
 801a47a:	601a      	str	r2, [r3, #0]
 801a47c:	2200      	movs	r2, #0
 801a47e:	605a      	str	r2, [r3, #4]
 801a480:	2200      	movs	r2, #0
 801a482:	721a      	strb	r2, [r3, #8]
 801a484:	60fb      	str	r3, [r7, #12]
	exp->left_rel_exp = parse_relation_expression();
 801a486:	6878      	ldr	r0, [r7, #4]
 801a488:	f7ff ffa4 	bl	801a3d4 <_ZN6Parser25parse_relation_expressionEv>
 801a48c:	4602      	mov	r2, r0
 801a48e:	68fb      	ldr	r3, [r7, #12]
 801a490:	601a      	str	r2, [r3, #0]
	if(match_compare_operator(exp))
 801a492:	68f9      	ldr	r1, [r7, #12]
 801a494:	6878      	ldr	r0, [r7, #4]
 801a496:	f7ff ffc7 	bl	801a428 <_ZN6Parser22match_compare_operatorEP18Compare_expression>
 801a49a:	4603      	mov	r3, r0
 801a49c:	2b00      	cmp	r3, #0
 801a49e:	d008      	beq.n	801a4b2 <_ZN6Parser24parse_compare_expressionEv+0x4a>
	{
		get_next_token();
 801a4a0:	6878      	ldr	r0, [r7, #4]
 801a4a2:	f7f9 fbd6 	bl	8013c52 <_ZN6Parser14get_next_tokenEv>
		exp->right_rel_exp = parse_relation_expression();
 801a4a6:	6878      	ldr	r0, [r7, #4]
 801a4a8:	f7ff ff94 	bl	801a3d4 <_ZN6Parser25parse_relation_expressionEv>
 801a4ac:	4602      	mov	r2, r0
 801a4ae:	68fb      	ldr	r3, [r7, #12]
 801a4b0:	605a      	str	r2, [r3, #4]
	}
	return exp;
 801a4b2:	68fb      	ldr	r3, [r7, #12]
}
 801a4b4:	4618      	mov	r0, r3
 801a4b6:	3710      	adds	r7, #16
 801a4b8:	46bd      	mov	sp, r7
 801a4ba:	bd80      	pop	{r7, pc}

0801a4bc <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EEC1Ev>:
      _Vector_base() = default;
 801a4bc:	b580      	push	{r7, lr}
 801a4be:	b082      	sub	sp, #8
 801a4c0:	af00      	add	r7, sp, #0
 801a4c2:	6078      	str	r0, [r7, #4]
 801a4c4:	687b      	ldr	r3, [r7, #4]
 801a4c6:	4618      	mov	r0, r3
 801a4c8:	f000 fb66 	bl	801ab98 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE12_Vector_implC1Ev>
 801a4cc:	687b      	ldr	r3, [r7, #4]
 801a4ce:	4618      	mov	r0, r3
 801a4d0:	3708      	adds	r7, #8
 801a4d2:	46bd      	mov	sp, r7
 801a4d4:	bd80      	pop	{r7, pc}

0801a4d6 <_ZNSt6vectorIP18Compare_expressionSaIS1_EEC1Ev>:
      vector() = default;
 801a4d6:	b580      	push	{r7, lr}
 801a4d8:	b082      	sub	sp, #8
 801a4da:	af00      	add	r7, sp, #0
 801a4dc:	6078      	str	r0, [r7, #4]
 801a4de:	687b      	ldr	r3, [r7, #4]
 801a4e0:	4618      	mov	r0, r3
 801a4e2:	f7ff ffeb 	bl	801a4bc <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EEC1Ev>
 801a4e6:	687b      	ldr	r3, [r7, #4]
 801a4e8:	4618      	mov	r0, r3
 801a4ea:	3708      	adds	r7, #8
 801a4ec:	46bd      	mov	sp, r7
 801a4ee:	bd80      	pop	{r7, pc}

0801a4f0 <_ZN14And_expressionC1Ev>:
	Relation_expression* left_rel_exp;
	Relation_expression* right_rel_exp;
	comp_operator op;
};

class And_expression
 801a4f0:	b580      	push	{r7, lr}
 801a4f2:	b082      	sub	sp, #8
 801a4f4:	af00      	add	r7, sp, #0
 801a4f6:	6078      	str	r0, [r7, #4]
 801a4f8:	687b      	ldr	r3, [r7, #4]
 801a4fa:	4618      	mov	r0, r3
 801a4fc:	f7ff ffeb 	bl	801a4d6 <_ZNSt6vectorIP18Compare_expressionSaIS1_EEC1Ev>
 801a500:	687b      	ldr	r3, [r7, #4]
 801a502:	4618      	mov	r0, r3
 801a504:	3708      	adds	r7, #8
 801a506:	46bd      	mov	sp, r7
 801a508:	bd80      	pop	{r7, pc}

0801a50a <_ZN6Parser20parse_and_expressionEv>:

And_expression* Parser::parse_and_expression()
{
 801a50a:	b590      	push	{r4, r7, lr}
 801a50c:	b087      	sub	sp, #28
 801a50e:	af00      	add	r7, sp, #0
 801a510:	6078      	str	r0, [r7, #4]
	auto exp = new And_expression();
 801a512:	200c      	movs	r0, #12
 801a514:	f008 f987 	bl	8022826 <_Znwj>
 801a518:	4603      	mov	r3, r0
 801a51a:	461c      	mov	r4, r3
 801a51c:	4622      	mov	r2, r4
 801a51e:	2300      	movs	r3, #0
 801a520:	6013      	str	r3, [r2, #0]
 801a522:	6053      	str	r3, [r2, #4]
 801a524:	6093      	str	r3, [r2, #8]
 801a526:	4620      	mov	r0, r4
 801a528:	f7ff ffe2 	bl	801a4f0 <_ZN14And_expressionC1Ev>
 801a52c:	617c      	str	r4, [r7, #20]
	exp->comp_exps.push_back(parse_compare_expression());
 801a52e:	697c      	ldr	r4, [r7, #20]
 801a530:	6878      	ldr	r0, [r7, #4]
 801a532:	f7ff ff99 	bl	801a468 <_ZN6Parser24parse_compare_expressionEv>
 801a536:	4603      	mov	r3, r0
 801a538:	60fb      	str	r3, [r7, #12]
 801a53a:	f107 030c 	add.w	r3, r7, #12
 801a53e:	4619      	mov	r1, r3
 801a540:	4620      	mov	r0, r4
 801a542:	f000 fb39 	bl	801abb8 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE9push_backEOS1_>
	while(token_buffer.type == TOKEN_AND)
 801a546:	687b      	ldr	r3, [r7, #4]
 801a548:	781b      	ldrb	r3, [r3, #0]
 801a54a:	2b16      	cmp	r3, #22
 801a54c:	d10f      	bne.n	801a56e <_ZN6Parser20parse_and_expressionEv+0x64>
	{
		get_next_token();
 801a54e:	6878      	ldr	r0, [r7, #4]
 801a550:	f7f9 fb7f 	bl	8013c52 <_ZN6Parser14get_next_tokenEv>
		exp->comp_exps.push_back(parse_compare_expression());
 801a554:	697c      	ldr	r4, [r7, #20]
 801a556:	6878      	ldr	r0, [r7, #4]
 801a558:	f7ff ff86 	bl	801a468 <_ZN6Parser24parse_compare_expressionEv>
 801a55c:	4603      	mov	r3, r0
 801a55e:	613b      	str	r3, [r7, #16]
 801a560:	f107 0310 	add.w	r3, r7, #16
 801a564:	4619      	mov	r1, r3
 801a566:	4620      	mov	r0, r4
 801a568:	f000 fb26 	bl	801abb8 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE9push_backEOS1_>
	while(token_buffer.type == TOKEN_AND)
 801a56c:	e7eb      	b.n	801a546 <_ZN6Parser20parse_and_expressionEv+0x3c>
	}
	return exp;
 801a56e:	697b      	ldr	r3, [r7, #20]
}
 801a570:	4618      	mov	r0, r3
 801a572:	371c      	adds	r7, #28
 801a574:	46bd      	mov	sp, r7
 801a576:	bd90      	pop	{r4, r7, pc}

0801a578 <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EEC1Ev>:
      _Vector_base() = default;
 801a578:	b580      	push	{r7, lr}
 801a57a:	b082      	sub	sp, #8
 801a57c:	af00      	add	r7, sp, #0
 801a57e:	6078      	str	r0, [r7, #4]
 801a580:	687b      	ldr	r3, [r7, #4]
 801a582:	4618      	mov	r0, r3
 801a584:	f000 fb29 	bl	801abda <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE12_Vector_implC1Ev>
 801a588:	687b      	ldr	r3, [r7, #4]
 801a58a:	4618      	mov	r0, r3
 801a58c:	3708      	adds	r7, #8
 801a58e:	46bd      	mov	sp, r7
 801a590:	bd80      	pop	{r7, pc}

0801a592 <_ZNSt6vectorIP14And_expressionSaIS1_EEC1Ev>:
      vector() = default;
 801a592:	b580      	push	{r7, lr}
 801a594:	b082      	sub	sp, #8
 801a596:	af00      	add	r7, sp, #0
 801a598:	6078      	str	r0, [r7, #4]
 801a59a:	687b      	ldr	r3, [r7, #4]
 801a59c:	4618      	mov	r0, r3
 801a59e:	f7ff ffeb 	bl	801a578 <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EEC1Ev>
 801a5a2:	687b      	ldr	r3, [r7, #4]
 801a5a4:	4618      	mov	r0, r3
 801a5a6:	3708      	adds	r7, #8
 801a5a8:	46bd      	mov	sp, r7
 801a5aa:	bd80      	pop	{r7, pc}

0801a5ac <_ZN10ExpressionC1Ev>:
public:
	~And_expression();
	std::vector<Compare_expression*> comp_exps;
};

class Expression
 801a5ac:	b580      	push	{r7, lr}
 801a5ae:	b082      	sub	sp, #8
 801a5b0:	af00      	add	r7, sp, #0
 801a5b2:	6078      	str	r0, [r7, #4]
 801a5b4:	687b      	ldr	r3, [r7, #4]
 801a5b6:	3308      	adds	r3, #8
 801a5b8:	4618      	mov	r0, r3
 801a5ba:	f7ff ffea 	bl	801a592 <_ZNSt6vectorIP14And_expressionSaIS1_EEC1Ev>
 801a5be:	687b      	ldr	r3, [r7, #4]
 801a5c0:	4618      	mov	r0, r3
 801a5c2:	3708      	adds	r7, #8
 801a5c4:	46bd      	mov	sp, r7
 801a5c6:	bd80      	pop	{r7, pc}

0801a5c8 <_ZN6Parser16parse_expressionEv>:

Expression* Parser::parse_expression()
{
 801a5c8:	b590      	push	{r4, r7, lr}
 801a5ca:	b087      	sub	sp, #28
 801a5cc:	af00      	add	r7, sp, #0
 801a5ce:	6078      	str	r0, [r7, #4]
	auto exp = new Expression();
 801a5d0:	2014      	movs	r0, #20
 801a5d2:	f008 f928 	bl	8022826 <_Znwj>
 801a5d6:	4603      	mov	r3, r0
 801a5d8:	461c      	mov	r4, r3
 801a5da:	4622      	mov	r2, r4
 801a5dc:	2300      	movs	r3, #0
 801a5de:	6013      	str	r3, [r2, #0]
 801a5e0:	6053      	str	r3, [r2, #4]
 801a5e2:	6093      	str	r3, [r2, #8]
 801a5e4:	60d3      	str	r3, [r2, #12]
 801a5e6:	6113      	str	r3, [r2, #16]
 801a5e8:	4620      	mov	r0, r4
 801a5ea:	f7ff ffdf 	bl	801a5ac <_ZN10ExpressionC1Ev>
 801a5ee:	617c      	str	r4, [r7, #20]
	exp->line = Position_counter::get_instance().line;
 801a5f0:	f7fb ff1e 	bl	8016430 <_ZN16Position_counter12get_instanceEv>
 801a5f4:	4603      	mov	r3, r0
 801a5f6:	681a      	ldr	r2, [r3, #0]
 801a5f8:	697b      	ldr	r3, [r7, #20]
 801a5fa:	601a      	str	r2, [r3, #0]
	exp->position = Position_counter::get_instance().position;
 801a5fc:	f7fb ff18 	bl	8016430 <_ZN16Position_counter12get_instanceEv>
 801a600:	4603      	mov	r3, r0
 801a602:	685a      	ldr	r2, [r3, #4]
 801a604:	697b      	ldr	r3, [r7, #20]
 801a606:	605a      	str	r2, [r3, #4]
	exp->and_exps.push_back(parse_and_expression());
 801a608:	697b      	ldr	r3, [r7, #20]
 801a60a:	f103 0408 	add.w	r4, r3, #8
 801a60e:	6878      	ldr	r0, [r7, #4]
 801a610:	f7ff ff7b 	bl	801a50a <_ZN6Parser20parse_and_expressionEv>
 801a614:	4603      	mov	r3, r0
 801a616:	60fb      	str	r3, [r7, #12]
 801a618:	f107 030c 	add.w	r3, r7, #12
 801a61c:	4619      	mov	r1, r3
 801a61e:	4620      	mov	r0, r4
 801a620:	f000 faeb 	bl	801abfa <_ZNSt6vectorIP14And_expressionSaIS1_EE9push_backEOS1_>
	while(token_buffer.type == TOKEN_OR)
 801a624:	687b      	ldr	r3, [r7, #4]
 801a626:	781b      	ldrb	r3, [r3, #0]
 801a628:	2b15      	cmp	r3, #21
 801a62a:	d111      	bne.n	801a650 <_ZN6Parser16parse_expressionEv+0x88>
	{
		get_next_token();
 801a62c:	6878      	ldr	r0, [r7, #4]
 801a62e:	f7f9 fb10 	bl	8013c52 <_ZN6Parser14get_next_tokenEv>
		exp->and_exps.push_back(parse_and_expression());
 801a632:	697b      	ldr	r3, [r7, #20]
 801a634:	f103 0408 	add.w	r4, r3, #8
 801a638:	6878      	ldr	r0, [r7, #4]
 801a63a:	f7ff ff66 	bl	801a50a <_ZN6Parser20parse_and_expressionEv>
 801a63e:	4603      	mov	r3, r0
 801a640:	613b      	str	r3, [r7, #16]
 801a642:	f107 0310 	add.w	r3, r7, #16
 801a646:	4619      	mov	r1, r3
 801a648:	4620      	mov	r0, r4
 801a64a:	f000 fad6 	bl	801abfa <_ZNSt6vectorIP14And_expressionSaIS1_EE9push_backEOS1_>
	while(token_buffer.type == TOKEN_OR)
 801a64e:	e7e9      	b.n	801a624 <_ZN6Parser16parse_expressionEv+0x5c>
	}
	return exp;
 801a650:	697b      	ldr	r3, [r7, #20]
}
 801a652:	4618      	mov	r0, r3
 801a654:	371c      	adds	r7, #28
 801a656:	46bd      	mov	sp, r7
 801a658:	bd90      	pop	{r4, r7, pc}

0801a65a <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIS9_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>:
	operator=(_Tp&& __rhs)
 801a65a:	b590      	push	{r4, r7, lr}
 801a65c:	b085      	sub	sp, #20
 801a65e:	af00      	add	r7, sp, #0
 801a660:	6078      	str	r0, [r7, #4]
 801a662:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 801a664:	2305      	movs	r3, #5
 801a666:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 801a668:	6878      	ldr	r0, [r7, #4]
 801a66a:	f7ef fc20 	bl	8009eae <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 801a66e:	4603      	mov	r3, r0
 801a670:	2b05      	cmp	r3, #5
 801a672:	bf0c      	ite	eq
 801a674:	2301      	moveq	r3, #1
 801a676:	2300      	movne	r3, #0
 801a678:	b2db      	uxtb	r3, r3
 801a67a:	2b00      	cmp	r3, #0
 801a67c:	d00a      	beq.n	801a694 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIS9_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 801a67e:	6838      	ldr	r0, [r7, #0]
 801a680:	f7fa f8c8 	bl	8014814 <_ZSt7forwardIP13Function_callEOT_RNSt16remove_referenceIS2_E4typeE>
 801a684:	4603      	mov	r3, r0
 801a686:	681c      	ldr	r4, [r3, #0]
 801a688:	6878      	ldr	r0, [r7, #4]
 801a68a:	f7ef ff9f 	bl	800a5cc <_ZSt3getILj5EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 801a68e:	4603      	mov	r3, r0
 801a690:	601c      	str	r4, [r3, #0]
 801a692:	e007      	b.n	801a6a4 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIS9_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 801a694:	6838      	ldr	r0, [r7, #0]
 801a696:	f7fa f8bd 	bl	8014814 <_ZSt7forwardIP13Function_callEOT_RNSt16remove_referenceIS2_E4typeE>
 801a69a:	4603      	mov	r3, r0
 801a69c:	4619      	mov	r1, r3
 801a69e:	6878      	ldr	r0, [r7, #4]
 801a6a0:	f000 fabc 	bl	801ac1c <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE7emplaceILj5EJS9_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	  return *this;
 801a6a4:	687b      	ldr	r3, [r7, #4]
	}
 801a6a6:	4618      	mov	r0, r3
 801a6a8:	3714      	adds	r7, #20
 801a6aa:	46bd      	mov	sp, r7
 801a6ac:	bd90      	pop	{r4, r7, pc}

0801a6ae <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIS7_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>:
	operator=(_Tp&& __rhs)
 801a6ae:	b590      	push	{r4, r7, lr}
 801a6b0:	b085      	sub	sp, #20
 801a6b2:	af00      	add	r7, sp, #0
 801a6b4:	6078      	str	r0, [r7, #4]
 801a6b6:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 801a6b8:	2304      	movs	r3, #4
 801a6ba:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 801a6bc:	6878      	ldr	r0, [r7, #4]
 801a6be:	f7ef fbf6 	bl	8009eae <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 801a6c2:	4603      	mov	r3, r0
 801a6c4:	2b04      	cmp	r3, #4
 801a6c6:	bf0c      	ite	eq
 801a6c8:	2301      	moveq	r3, #1
 801a6ca:	2300      	movne	r3, #0
 801a6cc:	b2db      	uxtb	r3, r3
 801a6ce:	2b00      	cmp	r3, #0
 801a6d0:	d00a      	beq.n	801a6e8 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIS7_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 801a6d2:	6838      	ldr	r0, [r7, #0]
 801a6d4:	f000 fabb 	bl	801ac4e <_ZSt7forwardIP8VariableEOT_RNSt16remove_referenceIS2_E4typeE>
 801a6d8:	4603      	mov	r3, r0
 801a6da:	681c      	ldr	r4, [r3, #0]
 801a6dc:	6878      	ldr	r0, [r7, #4]
 801a6de:	f7ef fedd 	bl	800a49c <_ZSt3getILj4EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 801a6e2:	4603      	mov	r3, r0
 801a6e4:	601c      	str	r4, [r3, #0]
 801a6e6:	e007      	b.n	801a6f8 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIS7_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 801a6e8:	6838      	ldr	r0, [r7, #0]
 801a6ea:	f000 fab0 	bl	801ac4e <_ZSt7forwardIP8VariableEOT_RNSt16remove_referenceIS2_E4typeE>
 801a6ee:	4603      	mov	r3, r0
 801a6f0:	4619      	mov	r1, r3
 801a6f2:	6878      	ldr	r0, [r7, #4]
 801a6f4:	f000 fab6 	bl	801ac64 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE7emplaceILj4EJS7_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	  return *this;
 801a6f8:	687b      	ldr	r3, [r7, #4]
	}
 801a6fa:	4618      	mov	r0, r3
 801a6fc:	3714      	adds	r7, #20
 801a6fe:	46bd      	mov	sp, r7
 801a700:	bd90      	pop	{r4, r7, pc}

0801a702 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEECI1NS0_16_Variant_storageILb0EJbifS7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 801a702:	b580      	push	{r7, lr}
 801a704:	b082      	sub	sp, #8
 801a706:	af00      	add	r7, sp, #0
 801a708:	6078      	str	r0, [r7, #4]
 801a70a:	7039      	strb	r1, [r7, #0]
 801a70c:	687b      	ldr	r3, [r7, #4]
 801a70e:	4611      	mov	r1, r2
 801a710:	4618      	mov	r0, r3
 801a712:	f000 fade 	bl	801acd2 <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 801a716:	687b      	ldr	r3, [r7, #4]
 801a718:	4618      	mov	r0, r3
 801a71a:	3708      	adds	r7, #8
 801a71c:	46bd      	mov	sp, r7
 801a71e:	bd80      	pop	{r7, pc}

0801a720 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEECI1NS0_16_Variant_storageILb0EJbifS7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 801a720:	b580      	push	{r7, lr}
 801a722:	b082      	sub	sp, #8
 801a724:	af00      	add	r7, sp, #0
 801a726:	6078      	str	r0, [r7, #4]
 801a728:	7039      	strb	r1, [r7, #0]
 801a72a:	687b      	ldr	r3, [r7, #4]
 801a72c:	4611      	mov	r1, r2
 801a72e:	4618      	mov	r0, r3
 801a730:	f7ff ffe7 	bl	801a702 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEECI1NS0_16_Variant_storageILb0EJbifS7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 801a734:	687b      	ldr	r3, [r7, #4]
 801a736:	4618      	mov	r0, r3
 801a738:	3708      	adds	r7, #8
 801a73a:	46bd      	mov	sp, r7
 801a73c:	bd80      	pop	{r7, pc}

0801a73e <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEECI1NS0_16_Variant_storageILb0EJbifS7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 801a73e:	b580      	push	{r7, lr}
 801a740:	b082      	sub	sp, #8
 801a742:	af00      	add	r7, sp, #0
 801a744:	6078      	str	r0, [r7, #4]
 801a746:	7039      	strb	r1, [r7, #0]
 801a748:	687b      	ldr	r3, [r7, #4]
 801a74a:	4611      	mov	r1, r2
 801a74c:	4618      	mov	r0, r3
 801a74e:	f7ff ffe7 	bl	801a720 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEECI1NS0_16_Variant_storageILb0EJbifS7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 801a752:	687b      	ldr	r3, [r7, #4]
 801a754:	4618      	mov	r0, r3
 801a756:	3708      	adds	r7, #8
 801a758:	46bd      	mov	sp, r7
 801a75a:	bd80      	pop	{r7, pc}

0801a75c <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEECI1NS0_16_Variant_storageILb0EJbifS7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 801a75c:	b580      	push	{r7, lr}
 801a75e:	b082      	sub	sp, #8
 801a760:	af00      	add	r7, sp, #0
 801a762:	6078      	str	r0, [r7, #4]
 801a764:	7039      	strb	r1, [r7, #0]
 801a766:	687b      	ldr	r3, [r7, #4]
 801a768:	4611      	mov	r1, r2
 801a76a:	4618      	mov	r0, r3
 801a76c:	f7ff ffe7 	bl	801a73e <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEECI1NS0_16_Variant_storageILb0EJbifS7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 801a770:	687b      	ldr	r3, [r7, #4]
 801a772:	4618      	mov	r0, r3
 801a774:	3708      	adds	r7, #8
 801a776:	46bd      	mov	sp, r7
 801a778:	bd80      	pop	{r7, pc}

0801a77a <_ZNSt8__detail9__variant13_Variant_baseIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
	_Variant_base(in_place_index_t<_Np> __i, _Args&&... __args)
 801a77a:	b580      	push	{r7, lr}
 801a77c:	b082      	sub	sp, #8
 801a77e:	af00      	add	r7, sp, #0
 801a780:	6078      	str	r0, [r7, #4]
 801a782:	7039      	strb	r1, [r7, #0]
	: _Base(__i, std::forward<_Args>(__args)...)
 801a784:	687b      	ldr	r3, [r7, #4]
 801a786:	4611      	mov	r1, r2
 801a788:	4618      	mov	r0, r3
 801a78a:	f7ff ffe7 	bl	801a75c <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEECI1NS0_16_Variant_storageILb0EJbifS7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 801a78e:	687b      	ldr	r3, [r7, #4]
 801a790:	4618      	mov	r0, r3
 801a792:	3708      	adds	r7, #8
 801a794:	46bd      	mov	sp, r7
 801a796:	bd80      	pop	{r7, pc}

0801a798 <_ZNSt8__detail9__variant13_Variant_baseIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEC1Ev>:
      _Variant_base()
 801a798:	b580      	push	{r7, lr}
 801a79a:	b082      	sub	sp, #8
 801a79c:	af00      	add	r7, sp, #0
 801a79e:	6078      	str	r0, [r7, #4]
      : _Variant_base(in_place_index<0>) { }
 801a7a0:	4619      	mov	r1, r3
 801a7a2:	6878      	ldr	r0, [r7, #4]
 801a7a4:	f7ff ffe9 	bl	801a77a <_ZNSt8__detail9__variant13_Variant_baseIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 801a7a8:	687b      	ldr	r3, [r7, #4]
 801a7aa:	4618      	mov	r0, r3
 801a7ac:	3708      	adds	r7, #8
 801a7ae:	46bd      	mov	sp, r7
 801a7b0:	bd80      	pop	{r7, pc}

0801a7b2 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIbEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>:
	operator=(_Tp&& __rhs)
 801a7b2:	b590      	push	{r4, r7, lr}
 801a7b4:	b085      	sub	sp, #20
 801a7b6:	af00      	add	r7, sp, #0
 801a7b8:	6078      	str	r0, [r7, #4]
 801a7ba:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 801a7bc:	2300      	movs	r3, #0
 801a7be:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 801a7c0:	6878      	ldr	r0, [r7, #4]
 801a7c2:	f7ef fb74 	bl	8009eae <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 801a7c6:	4603      	mov	r3, r0
 801a7c8:	2b00      	cmp	r3, #0
 801a7ca:	bf0c      	ite	eq
 801a7cc:	2301      	moveq	r3, #1
 801a7ce:	2300      	movne	r3, #0
 801a7d0:	b2db      	uxtb	r3, r3
 801a7d2:	2b00      	cmp	r3, #0
 801a7d4:	d00b      	beq.n	801a7ee <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIbEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x3c>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 801a7d6:	6838      	ldr	r0, [r7, #0]
 801a7d8:	f7ed ff8c 	bl	80086f4 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
 801a7dc:	4603      	mov	r3, r0
 801a7de:	781c      	ldrb	r4, [r3, #0]
 801a7e0:	6878      	ldr	r0, [r7, #4]
 801a7e2:	f7f2 fde3 	bl	800d3ac <_ZSt3getILj0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 801a7e6:	4603      	mov	r3, r0
 801a7e8:	4622      	mov	r2, r4
 801a7ea:	701a      	strb	r2, [r3, #0]
 801a7ec:	e007      	b.n	801a7fe <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIbEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x4c>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 801a7ee:	6838      	ldr	r0, [r7, #0]
 801a7f0:	f7ed ff80 	bl	80086f4 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
 801a7f4:	4603      	mov	r3, r0
 801a7f6:	4619      	mov	r1, r3
 801a7f8:	6878      	ldr	r0, [r7, #4]
 801a7fa:	f000 fa7c 	bl	801acf6 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE7emplaceILj0EJbEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	  return *this;
 801a7fe:	687b      	ldr	r3, [r7, #4]
	}
 801a800:	4618      	mov	r0, r3
 801a802:	3714      	adds	r7, #20
 801a804:	46bd      	mov	sp, r7
 801a806:	bd90      	pop	{r4, r7, pc}

0801a808 <_ZSt3getIiJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 801a808:	b580      	push	{r7, lr}
 801a80a:	b082      	sub	sp, #8
 801a80c:	af00      	add	r7, sp, #0
 801a80e:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 801a810:	6878      	ldr	r0, [r7, #4]
 801a812:	f7f5 fc8d 	bl	8010130 <_ZSt3getILj1EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>
 801a816:	4603      	mov	r3, r0
    }
 801a818:	4618      	mov	r0, r3
 801a81a:	3708      	adds	r7, #8
 801a81c:	46bd      	mov	sp, r7
 801a81e:	bd80      	pop	{r7, pc}

0801a820 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIRiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_>:
	operator=(_Tp&& __rhs)
 801a820:	b590      	push	{r4, r7, lr}
 801a822:	b085      	sub	sp, #20
 801a824:	af00      	add	r7, sp, #0
 801a826:	6078      	str	r0, [r7, #4]
 801a828:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 801a82a:	2301      	movs	r3, #1
 801a82c:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 801a82e:	6878      	ldr	r0, [r7, #4]
 801a830:	f7ef fb3d 	bl	8009eae <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 801a834:	4603      	mov	r3, r0
 801a836:	2b01      	cmp	r3, #1
 801a838:	bf0c      	ite	eq
 801a83a:	2301      	moveq	r3, #1
 801a83c:	2300      	movne	r3, #0
 801a83e:	b2db      	uxtb	r3, r3
 801a840:	2b00      	cmp	r3, #0
 801a842:	d00a      	beq.n	801a85a <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIRiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 801a844:	6838      	ldr	r0, [r7, #0]
 801a846:	f7eb f942 	bl	8005ace <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 801a84a:	4603      	mov	r3, r0
 801a84c:	681c      	ldr	r4, [r3, #0]
 801a84e:	6878      	ldr	r0, [r7, #4]
 801a850:	f7f2 fd58 	bl	800d304 <_ZSt3getILj1EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 801a854:	4603      	mov	r3, r0
 801a856:	601c      	str	r4, [r3, #0]
 801a858:	e007      	b.n	801a86a <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIRiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 801a85a:	6838      	ldr	r0, [r7, #0]
 801a85c:	f7eb f937 	bl	8005ace <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 801a860:	4603      	mov	r3, r0
 801a862:	4619      	mov	r1, r3
 801a864:	6878      	ldr	r0, [r7, #4]
 801a866:	f000 fa5f 	bl	801ad28 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE7emplaceILj1EJRiEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSG_E4typeEDpOSH_>
	  return *this;
 801a86a:	687b      	ldr	r3, [r7, #4]
	}
 801a86c:	4618      	mov	r0, r3
 801a86e:	3714      	adds	r7, #20
 801a870:	46bd      	mov	sp, r7
 801a872:	bd90      	pop	{r4, r7, pc}

0801a874 <_ZSt3getIfJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 801a874:	b580      	push	{r7, lr}
 801a876:	b082      	sub	sp, #8
 801a878:	af00      	add	r7, sp, #0
 801a87a:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 801a87c:	6878      	ldr	r0, [r7, #4]
 801a87e:	f7f5 fcd3 	bl	8010228 <_ZSt3getILj2EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>
 801a882:	4603      	mov	r3, r0
    }
 801a884:	4618      	mov	r0, r3
 801a886:	3708      	adds	r7, #8
 801a888:	46bd      	mov	sp, r7
 801a88a:	bd80      	pop	{r7, pc}

0801a88c <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIRfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_>:
	operator=(_Tp&& __rhs)
 801a88c:	b590      	push	{r4, r7, lr}
 801a88e:	b085      	sub	sp, #20
 801a890:	af00      	add	r7, sp, #0
 801a892:	6078      	str	r0, [r7, #4]
 801a894:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 801a896:	2302      	movs	r3, #2
 801a898:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 801a89a:	6878      	ldr	r0, [r7, #4]
 801a89c:	f7ef fb07 	bl	8009eae <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 801a8a0:	4603      	mov	r3, r0
 801a8a2:	2b02      	cmp	r3, #2
 801a8a4:	bf0c      	ite	eq
 801a8a6:	2301      	moveq	r3, #1
 801a8a8:	2300      	movne	r3, #0
 801a8aa:	b2db      	uxtb	r3, r3
 801a8ac:	2b00      	cmp	r3, #0
 801a8ae:	d00a      	beq.n	801a8c6 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIRfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 801a8b0:	6838      	ldr	r0, [r7, #0]
 801a8b2:	f7eb f92e 	bl	8005b12 <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 801a8b6:	4603      	mov	r3, r0
 801a8b8:	681c      	ldr	r4, [r3, #0]
 801a8ba:	6878      	ldr	r0, [r7, #4]
 801a8bc:	f7f2 fd3e 	bl	800d33c <_ZSt3getILj2EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 801a8c0:	4603      	mov	r3, r0
 801a8c2:	601c      	str	r4, [r3, #0]
 801a8c4:	e007      	b.n	801a8d6 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIRfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 801a8c6:	6838      	ldr	r0, [r7, #0]
 801a8c8:	f7eb f923 	bl	8005b12 <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 801a8cc:	4603      	mov	r3, r0
 801a8ce:	4619      	mov	r1, r3
 801a8d0:	6878      	ldr	r0, [r7, #4]
 801a8d2:	f000 fa42 	bl	801ad5a <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE7emplaceILj2EJRfEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSG_E4typeEDpOSH_>
	  return *this;
 801a8d6:	687b      	ldr	r3, [r7, #4]
	}
 801a8d8:	4618      	mov	r0, r3
 801a8da:	3714      	adds	r7, #20
 801a8dc:	46bd      	mov	sp, r7
 801a8de:	bd90      	pop	{r4, r7, pc}

0801a8e0 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>:
	operator=(_Tp&& __rhs)
 801a8e0:	b590      	push	{r4, r7, lr}
 801a8e2:	b085      	sub	sp, #20
 801a8e4:	af00      	add	r7, sp, #0
 801a8e6:	6078      	str	r0, [r7, #4]
 801a8e8:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 801a8ea:	2303      	movs	r3, #3
 801a8ec:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 801a8ee:	6878      	ldr	r0, [r7, #4]
 801a8f0:	f7ef fadd 	bl	8009eae <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 801a8f4:	4603      	mov	r3, r0
 801a8f6:	2b03      	cmp	r3, #3
 801a8f8:	bf0c      	ite	eq
 801a8fa:	2301      	moveq	r3, #1
 801a8fc:	2300      	movne	r3, #0
 801a8fe:	b2db      	uxtb	r3, r3
 801a900:	2b00      	cmp	r3, #0
 801a902:	d00c      	beq.n	801a91e <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x3e>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 801a904:	6838      	ldr	r0, [r7, #0]
 801a906:	f7ed ff20 	bl	800874a <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 801a90a:	4604      	mov	r4, r0
 801a90c:	6878      	ldr	r0, [r7, #4]
 801a90e:	f7f2 fd31 	bl	800d374 <_ZSt3getILj3EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 801a912:	4603      	mov	r3, r0
 801a914:	4621      	mov	r1, r4
 801a916:	4618      	mov	r0, r3
 801a918:	f008 fa33 	bl	8022d82 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>
 801a91c:	e007      	b.n	801a92e <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x4e>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 801a91e:	6838      	ldr	r0, [r7, #0]
 801a920:	f7ed ff13 	bl	800874a <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 801a924:	4603      	mov	r3, r0
 801a926:	4619      	mov	r1, r3
 801a928:	6878      	ldr	r0, [r7, #4]
 801a92a:	f000 fa2f 	bl	801ad8c <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE7emplaceILj3EJS5_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	  return *this;
 801a92e:	687b      	ldr	r3, [r7, #4]
	}
 801a930:	4618      	mov	r0, r3
 801a932:	3714      	adds	r7, #20
 801a934:	46bd      	mov	sp, r7
 801a936:	bd90      	pop	{r4, r7, pc}

0801a938 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb1EJP17Primal_expressionP10ExpressionEECI1NS0_16_Variant_storageILb1EJS3_S5_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 801a938:	b580      	push	{r7, lr}
 801a93a:	b082      	sub	sp, #8
 801a93c:	af00      	add	r7, sp, #0
 801a93e:	6078      	str	r0, [r7, #4]
 801a940:	7039      	strb	r1, [r7, #0]
 801a942:	687b      	ldr	r3, [r7, #4]
 801a944:	4611      	mov	r1, r2
 801a946:	4618      	mov	r0, r3
 801a948:	f000 fa57 	bl	801adfa <_ZNSt8__detail9__variant16_Variant_storageILb1EJP17Primal_expressionP10ExpressionEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 801a94c:	687b      	ldr	r3, [r7, #4]
 801a94e:	4618      	mov	r0, r3
 801a950:	3708      	adds	r7, #8
 801a952:	46bd      	mov	sp, r7
 801a954:	bd80      	pop	{r7, pc}

0801a956 <_ZNSt8__detail9__variant15_Move_ctor_baseILb1EJP17Primal_expressionP10ExpressionEECI1NS0_16_Variant_storageILb1EJS3_S5_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 801a956:	b580      	push	{r7, lr}
 801a958:	b082      	sub	sp, #8
 801a95a:	af00      	add	r7, sp, #0
 801a95c:	6078      	str	r0, [r7, #4]
 801a95e:	7039      	strb	r1, [r7, #0]
 801a960:	687b      	ldr	r3, [r7, #4]
 801a962:	4611      	mov	r1, r2
 801a964:	4618      	mov	r0, r3
 801a966:	f7ff ffe7 	bl	801a938 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb1EJP17Primal_expressionP10ExpressionEECI1NS0_16_Variant_storageILb1EJS3_S5_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 801a96a:	687b      	ldr	r3, [r7, #4]
 801a96c:	4618      	mov	r0, r3
 801a96e:	3708      	adds	r7, #8
 801a970:	46bd      	mov	sp, r7
 801a972:	bd80      	pop	{r7, pc}

0801a974 <_ZNSt8__detail9__variant17_Copy_assign_baseILb1EJP17Primal_expressionP10ExpressionEECI1NS0_16_Variant_storageILb1EJS3_S5_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 801a974:	b580      	push	{r7, lr}
 801a976:	b082      	sub	sp, #8
 801a978:	af00      	add	r7, sp, #0
 801a97a:	6078      	str	r0, [r7, #4]
 801a97c:	7039      	strb	r1, [r7, #0]
 801a97e:	687b      	ldr	r3, [r7, #4]
 801a980:	4611      	mov	r1, r2
 801a982:	4618      	mov	r0, r3
 801a984:	f7ff ffe7 	bl	801a956 <_ZNSt8__detail9__variant15_Move_ctor_baseILb1EJP17Primal_expressionP10ExpressionEECI1NS0_16_Variant_storageILb1EJS3_S5_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 801a988:	687b      	ldr	r3, [r7, #4]
 801a98a:	4618      	mov	r0, r3
 801a98c:	3708      	adds	r7, #8
 801a98e:	46bd      	mov	sp, r7
 801a990:	bd80      	pop	{r7, pc}

0801a992 <_ZNSt8__detail9__variant17_Move_assign_baseILb1EJP17Primal_expressionP10ExpressionEECI1NS0_16_Variant_storageILb1EJS3_S5_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 801a992:	b580      	push	{r7, lr}
 801a994:	b082      	sub	sp, #8
 801a996:	af00      	add	r7, sp, #0
 801a998:	6078      	str	r0, [r7, #4]
 801a99a:	7039      	strb	r1, [r7, #0]
 801a99c:	687b      	ldr	r3, [r7, #4]
 801a99e:	4611      	mov	r1, r2
 801a9a0:	4618      	mov	r0, r3
 801a9a2:	f7ff ffe7 	bl	801a974 <_ZNSt8__detail9__variant17_Copy_assign_baseILb1EJP17Primal_expressionP10ExpressionEECI1NS0_16_Variant_storageILb1EJS3_S5_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 801a9a6:	687b      	ldr	r3, [r7, #4]
 801a9a8:	4618      	mov	r0, r3
 801a9aa:	3708      	adds	r7, #8
 801a9ac:	46bd      	mov	sp, r7
 801a9ae:	bd80      	pop	{r7, pc}

0801a9b0 <_ZNSt8__detail9__variant13_Variant_baseIJP17Primal_expressionP10ExpressionEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
	_Variant_base(in_place_index_t<_Np> __i, _Args&&... __args)
 801a9b0:	b580      	push	{r7, lr}
 801a9b2:	b082      	sub	sp, #8
 801a9b4:	af00      	add	r7, sp, #0
 801a9b6:	6078      	str	r0, [r7, #4]
 801a9b8:	7039      	strb	r1, [r7, #0]
	: _Base(__i, std::forward<_Args>(__args)...)
 801a9ba:	687b      	ldr	r3, [r7, #4]
 801a9bc:	4611      	mov	r1, r2
 801a9be:	4618      	mov	r0, r3
 801a9c0:	f7ff ffe7 	bl	801a992 <_ZNSt8__detail9__variant17_Move_assign_baseILb1EJP17Primal_expressionP10ExpressionEECI1NS0_16_Variant_storageILb1EJS3_S5_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 801a9c4:	687b      	ldr	r3, [r7, #4]
 801a9c6:	4618      	mov	r0, r3
 801a9c8:	3708      	adds	r7, #8
 801a9ca:	46bd      	mov	sp, r7
 801a9cc:	bd80      	pop	{r7, pc}

0801a9ce <_ZNSt8__detail9__variant13_Variant_baseIJP17Primal_expressionP10ExpressionEEC1Ev>:
      _Variant_base()
 801a9ce:	b580      	push	{r7, lr}
 801a9d0:	b082      	sub	sp, #8
 801a9d2:	af00      	add	r7, sp, #0
 801a9d4:	6078      	str	r0, [r7, #4]
      : _Variant_base(in_place_index<0>) { }
 801a9d6:	4619      	mov	r1, r3
 801a9d8:	6878      	ldr	r0, [r7, #4]
 801a9da:	f7ff ffe9 	bl	801a9b0 <_ZNSt8__detail9__variant13_Variant_baseIJP17Primal_expressionP10ExpressionEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 801a9de:	687b      	ldr	r3, [r7, #4]
 801a9e0:	4618      	mov	r0, r3
 801a9e2:	3708      	adds	r7, #8
 801a9e4:	46bd      	mov	sp, r7
 801a9e6:	bd80      	pop	{r7, pc}

0801a9e8 <_ZNSt7variantIJP17Primal_expressionP10ExpressionEEaSIS3_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES4_E4typeEE18is_constructible_vISB_S8_E15is_assignable_vIRSB_S8_EERS4_E4typeES9_>:
	operator=(_Tp&& __rhs)
 801a9e8:	b590      	push	{r4, r7, lr}
 801a9ea:	b085      	sub	sp, #20
 801a9ec:	af00      	add	r7, sp, #0
 801a9ee:	6078      	str	r0, [r7, #4]
 801a9f0:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 801a9f2:	2301      	movs	r3, #1
 801a9f4:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 801a9f6:	6878      	ldr	r0, [r7, #4]
 801a9f8:	f7ef faa6 	bl	8009f48 <_ZNKSt7variantIJP17Primal_expressionP10ExpressionEE5indexEv>
 801a9fc:	4603      	mov	r3, r0
 801a9fe:	2b01      	cmp	r3, #1
 801aa00:	bf0c      	ite	eq
 801aa02:	2301      	moveq	r3, #1
 801aa04:	2300      	movne	r3, #0
 801aa06:	b2db      	uxtb	r3, r3
 801aa08:	2b00      	cmp	r3, #0
 801aa0a:	d00a      	beq.n	801aa22 <_ZNSt7variantIJP17Primal_expressionP10ExpressionEEaSIS3_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES4_E4typeEE18is_constructible_vISB_S8_E15is_assignable_vIRSB_S8_EERS4_E4typeES9_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 801aa0c:	6838      	ldr	r0, [r7, #0]
 801aa0e:	f7fa f8f9 	bl	8014c04 <_ZSt7forwardIP10ExpressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801aa12:	4603      	mov	r3, r0
 801aa14:	681c      	ldr	r4, [r3, #0]
 801aa16:	6878      	ldr	r0, [r7, #4]
 801aa18:	f7ef fe28 	bl	800a66c <_ZSt3getILj1EJP17Primal_expressionP10ExpressionEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERS8_>
 801aa1c:	4603      	mov	r3, r0
 801aa1e:	601c      	str	r4, [r3, #0]
 801aa20:	e007      	b.n	801aa32 <_ZNSt7variantIJP17Primal_expressionP10ExpressionEEaSIS3_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES4_E4typeEE18is_constructible_vISB_S8_E15is_assignable_vIRSB_S8_EERS4_E4typeES9_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 801aa22:	6838      	ldr	r0, [r7, #0]
 801aa24:	f7fa f8ee 	bl	8014c04 <_ZSt7forwardIP10ExpressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801aa28:	4603      	mov	r3, r0
 801aa2a:	4619      	mov	r1, r3
 801aa2c:	6878      	ldr	r0, [r7, #4]
 801aa2e:	f000 f9f6 	bl	801ae1e <_ZNSt7variantIJP17Primal_expressionP10ExpressionEE7emplaceILj1EJS3_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES4_E4typeEDpT0_EERS9_E4typeEDpOSA_>
	  return *this;
 801aa32:	687b      	ldr	r3, [r7, #4]
	}
 801aa34:	4618      	mov	r0, r3
 801aa36:	3714      	adds	r7, #20
 801aa38:	46bd      	mov	sp, r7
 801aa3a:	bd90      	pop	{r4, r7, pc}

0801aa3c <_ZNSt7variantIJP17Primal_expressionP10ExpressionEEaSIS1_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES4_E4typeEE18is_constructible_vISB_S8_E15is_assignable_vIRSB_S8_EERS4_E4typeES9_>:
	operator=(_Tp&& __rhs)
 801aa3c:	b590      	push	{r4, r7, lr}
 801aa3e:	b085      	sub	sp, #20
 801aa40:	af00      	add	r7, sp, #0
 801aa42:	6078      	str	r0, [r7, #4]
 801aa44:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 801aa46:	2300      	movs	r3, #0
 801aa48:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 801aa4a:	6878      	ldr	r0, [r7, #4]
 801aa4c:	f7ef fa7c 	bl	8009f48 <_ZNKSt7variantIJP17Primal_expressionP10ExpressionEE5indexEv>
 801aa50:	4603      	mov	r3, r0
 801aa52:	2b00      	cmp	r3, #0
 801aa54:	bf0c      	ite	eq
 801aa56:	2301      	moveq	r3, #1
 801aa58:	2300      	movne	r3, #0
 801aa5a:	b2db      	uxtb	r3, r3
 801aa5c:	2b00      	cmp	r3, #0
 801aa5e:	d00a      	beq.n	801aa76 <_ZNSt7variantIJP17Primal_expressionP10ExpressionEEaSIS1_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES4_E4typeEE18is_constructible_vISB_S8_E15is_assignable_vIRSB_S8_EERS4_E4typeES9_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 801aa60:	6838      	ldr	r0, [r7, #0]
 801aa62:	f000 f9f5 	bl	801ae50 <_ZSt7forwardIP17Primal_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801aa66:	4603      	mov	r3, r0
 801aa68:	681c      	ldr	r4, [r3, #0]
 801aa6a:	6878      	ldr	r0, [r7, #4]
 801aa6c:	f7ef fe3c 	bl	800a6e8 <_ZSt3getILj0EJP17Primal_expressionP10ExpressionEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERS8_>
 801aa70:	4603      	mov	r3, r0
 801aa72:	601c      	str	r4, [r3, #0]
 801aa74:	e007      	b.n	801aa86 <_ZNSt7variantIJP17Primal_expressionP10ExpressionEEaSIS1_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES4_E4typeEE18is_constructible_vISB_S8_E15is_assignable_vIRSB_S8_EERS4_E4typeES9_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 801aa76:	6838      	ldr	r0, [r7, #0]
 801aa78:	f000 f9ea 	bl	801ae50 <_ZSt7forwardIP17Primal_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801aa7c:	4603      	mov	r3, r0
 801aa7e:	4619      	mov	r1, r3
 801aa80:	6878      	ldr	r0, [r7, #4]
 801aa82:	f000 f9f0 	bl	801ae66 <_ZNSt7variantIJP17Primal_expressionP10ExpressionEE7emplaceILj0EJS1_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES4_E4typeEDpT0_EERS9_E4typeEDpOSA_>
	  return *this;
 801aa86:	687b      	ldr	r3, [r7, #4]
	}
 801aa88:	4618      	mov	r0, r3
 801aa8a:	3714      	adds	r7, #20
 801aa8c:	46bd      	mov	sp, r7
 801aa8e:	bd90      	pop	{r4, r7, pc}

0801aa90 <_ZNSt6vectorI13mult_operatorSaIS0_EE9push_backEOS0_>:
      push_back(value_type&& __x)
 801aa90:	b580      	push	{r7, lr}
 801aa92:	b082      	sub	sp, #8
 801aa94:	af00      	add	r7, sp, #0
 801aa96:	6078      	str	r0, [r7, #4]
 801aa98:	6039      	str	r1, [r7, #0]
      { emplace_back(std::move(__x)); }
 801aa9a:	6838      	ldr	r0, [r7, #0]
 801aa9c:	f000 f9fc 	bl	801ae98 <_ZSt4moveIR13mult_operatorEONSt16remove_referenceIT_E4typeEOS3_>
 801aaa0:	4603      	mov	r3, r0
 801aaa2:	4619      	mov	r1, r3
 801aaa4:	6878      	ldr	r0, [r7, #4]
 801aaa6:	f000 fa02 	bl	801aeae <_ZNSt6vectorI13mult_operatorSaIS0_EE12emplace_backIJS0_EEERS0_DpOT_>
 801aaaa:	bf00      	nop
 801aaac:	3708      	adds	r7, #8
 801aaae:	46bd      	mov	sp, r7
 801aab0:	bd80      	pop	{r7, pc}

0801aab2 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
 801aab2:	b580      	push	{r7, lr}
 801aab4:	b082      	sub	sp, #8
 801aab6:	af00      	add	r7, sp, #0
 801aab8:	6078      	str	r0, [r7, #4]
	: _Tp_alloc_type()
 801aaba:	6878      	ldr	r0, [r7, #4]
 801aabc:	f000 fa29 	bl	801af12 <_ZNSaIP16Power_expressionEC1Ev>
 801aac0:	687b      	ldr	r3, [r7, #4]
 801aac2:	4618      	mov	r0, r3
 801aac4:	f000 fa31 	bl	801af2a <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
 801aac8:	687b      	ldr	r3, [r7, #4]
 801aaca:	4618      	mov	r0, r3
 801aacc:	3708      	adds	r7, #8
 801aace:	46bd      	mov	sp, r7
 801aad0:	bd80      	pop	{r7, pc}

0801aad2 <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
 801aad2:	b580      	push	{r7, lr}
 801aad4:	b082      	sub	sp, #8
 801aad6:	af00      	add	r7, sp, #0
 801aad8:	6078      	str	r0, [r7, #4]
	: _Tp_alloc_type()
 801aada:	6878      	ldr	r0, [r7, #4]
 801aadc:	f000 fa39 	bl	801af52 <_ZNSaI13mult_operatorEC1Ev>
 801aae0:	687b      	ldr	r3, [r7, #4]
 801aae2:	4618      	mov	r0, r3
 801aae4:	f000 fa41 	bl	801af6a <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
 801aae8:	687b      	ldr	r3, [r7, #4]
 801aaea:	4618      	mov	r0, r3
 801aaec:	3708      	adds	r7, #8
 801aaee:	46bd      	mov	sp, r7
 801aaf0:	bd80      	pop	{r7, pc}

0801aaf2 <_ZNSt6vectorIP16Power_expressionSaIS1_EE9push_backEOS1_>:
      push_back(value_type&& __x)
 801aaf2:	b580      	push	{r7, lr}
 801aaf4:	b082      	sub	sp, #8
 801aaf6:	af00      	add	r7, sp, #0
 801aaf8:	6078      	str	r0, [r7, #4]
 801aafa:	6039      	str	r1, [r7, #0]
      { emplace_back(std::move(__x)); }
 801aafc:	6838      	ldr	r0, [r7, #0]
 801aafe:	f000 fa48 	bl	801af92 <_ZSt4moveIRP16Power_expressionEONSt16remove_referenceIT_E4typeEOS4_>
 801ab02:	4603      	mov	r3, r0
 801ab04:	4619      	mov	r1, r3
 801ab06:	6878      	ldr	r0, [r7, #4]
 801ab08:	f000 fa4e 	bl	801afa8 <_ZNSt6vectorIP16Power_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>
 801ab0c:	bf00      	nop
 801ab0e:	3708      	adds	r7, #8
 801ab10:	46bd      	mov	sp, r7
 801ab12:	bd80      	pop	{r7, pc}

0801ab14 <_ZNSt6vectorI12sum_operatorSaIS0_EE9push_backEOS0_>:
      push_back(value_type&& __x)
 801ab14:	b580      	push	{r7, lr}
 801ab16:	b082      	sub	sp, #8
 801ab18:	af00      	add	r7, sp, #0
 801ab1a:	6078      	str	r0, [r7, #4]
 801ab1c:	6039      	str	r1, [r7, #0]
      { emplace_back(std::move(__x)); }
 801ab1e:	6838      	ldr	r0, [r7, #0]
 801ab20:	f000 fa74 	bl	801b00c <_ZSt4moveIR12sum_operatorEONSt16remove_referenceIT_E4typeEOS3_>
 801ab24:	4603      	mov	r3, r0
 801ab26:	4619      	mov	r1, r3
 801ab28:	6878      	ldr	r0, [r7, #4]
 801ab2a:	f000 fa7a 	bl	801b022 <_ZNSt6vectorI12sum_operatorSaIS0_EE12emplace_backIJS0_EEERS0_DpOT_>
 801ab2e:	bf00      	nop
 801ab30:	3708      	adds	r7, #8
 801ab32:	46bd      	mov	sp, r7
 801ab34:	bd80      	pop	{r7, pc}

0801ab36 <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
 801ab36:	b580      	push	{r7, lr}
 801ab38:	b082      	sub	sp, #8
 801ab3a:	af00      	add	r7, sp, #0
 801ab3c:	6078      	str	r0, [r7, #4]
	: _Tp_alloc_type()
 801ab3e:	6878      	ldr	r0, [r7, #4]
 801ab40:	f000 faa1 	bl	801b086 <_ZNSaIP19Multiply_expressionEC1Ev>
 801ab44:	687b      	ldr	r3, [r7, #4]
 801ab46:	4618      	mov	r0, r3
 801ab48:	f000 faa9 	bl	801b09e <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
 801ab4c:	687b      	ldr	r3, [r7, #4]
 801ab4e:	4618      	mov	r0, r3
 801ab50:	3708      	adds	r7, #8
 801ab52:	46bd      	mov	sp, r7
 801ab54:	bd80      	pop	{r7, pc}

0801ab56 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
 801ab56:	b580      	push	{r7, lr}
 801ab58:	b082      	sub	sp, #8
 801ab5a:	af00      	add	r7, sp, #0
 801ab5c:	6078      	str	r0, [r7, #4]
	: _Tp_alloc_type()
 801ab5e:	6878      	ldr	r0, [r7, #4]
 801ab60:	f000 fab1 	bl	801b0c6 <_ZNSaI12sum_operatorEC1Ev>
 801ab64:	687b      	ldr	r3, [r7, #4]
 801ab66:	4618      	mov	r0, r3
 801ab68:	f000 fab9 	bl	801b0de <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
 801ab6c:	687b      	ldr	r3, [r7, #4]
 801ab6e:	4618      	mov	r0, r3
 801ab70:	3708      	adds	r7, #8
 801ab72:	46bd      	mov	sp, r7
 801ab74:	bd80      	pop	{r7, pc}

0801ab76 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE9push_backEOS1_>:
      push_back(value_type&& __x)
 801ab76:	b580      	push	{r7, lr}
 801ab78:	b082      	sub	sp, #8
 801ab7a:	af00      	add	r7, sp, #0
 801ab7c:	6078      	str	r0, [r7, #4]
 801ab7e:	6039      	str	r1, [r7, #0]
      { emplace_back(std::move(__x)); }
 801ab80:	6838      	ldr	r0, [r7, #0]
 801ab82:	f000 fac0 	bl	801b106 <_ZSt4moveIRP19Multiply_expressionEONSt16remove_referenceIT_E4typeEOS4_>
 801ab86:	4603      	mov	r3, r0
 801ab88:	4619      	mov	r1, r3
 801ab8a:	6878      	ldr	r0, [r7, #4]
 801ab8c:	f000 fac6 	bl	801b11c <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>
 801ab90:	bf00      	nop
 801ab92:	3708      	adds	r7, #8
 801ab94:	46bd      	mov	sp, r7
 801ab96:	bd80      	pop	{r7, pc}

0801ab98 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
 801ab98:	b580      	push	{r7, lr}
 801ab9a:	b082      	sub	sp, #8
 801ab9c:	af00      	add	r7, sp, #0
 801ab9e:	6078      	str	r0, [r7, #4]
	: _Tp_alloc_type()
 801aba0:	6878      	ldr	r0, [r7, #4]
 801aba2:	f000 faed 	bl	801b180 <_ZNSaIP18Compare_expressionEC1Ev>
 801aba6:	687b      	ldr	r3, [r7, #4]
 801aba8:	4618      	mov	r0, r3
 801abaa:	f000 faf5 	bl	801b198 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
 801abae:	687b      	ldr	r3, [r7, #4]
 801abb0:	4618      	mov	r0, r3
 801abb2:	3708      	adds	r7, #8
 801abb4:	46bd      	mov	sp, r7
 801abb6:	bd80      	pop	{r7, pc}

0801abb8 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE9push_backEOS1_>:
      push_back(value_type&& __x)
 801abb8:	b580      	push	{r7, lr}
 801abba:	b082      	sub	sp, #8
 801abbc:	af00      	add	r7, sp, #0
 801abbe:	6078      	str	r0, [r7, #4]
 801abc0:	6039      	str	r1, [r7, #0]
      { emplace_back(std::move(__x)); }
 801abc2:	6838      	ldr	r0, [r7, #0]
 801abc4:	f000 fafc 	bl	801b1c0 <_ZSt4moveIRP18Compare_expressionEONSt16remove_referenceIT_E4typeEOS4_>
 801abc8:	4603      	mov	r3, r0
 801abca:	4619      	mov	r1, r3
 801abcc:	6878      	ldr	r0, [r7, #4]
 801abce:	f000 fb02 	bl	801b1d6 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>
 801abd2:	bf00      	nop
 801abd4:	3708      	adds	r7, #8
 801abd6:	46bd      	mov	sp, r7
 801abd8:	bd80      	pop	{r7, pc}

0801abda <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
 801abda:	b580      	push	{r7, lr}
 801abdc:	b082      	sub	sp, #8
 801abde:	af00      	add	r7, sp, #0
 801abe0:	6078      	str	r0, [r7, #4]
	: _Tp_alloc_type()
 801abe2:	6878      	ldr	r0, [r7, #4]
 801abe4:	f000 fb29 	bl	801b23a <_ZNSaIP14And_expressionEC1Ev>
 801abe8:	687b      	ldr	r3, [r7, #4]
 801abea:	4618      	mov	r0, r3
 801abec:	f000 fb31 	bl	801b252 <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
 801abf0:	687b      	ldr	r3, [r7, #4]
 801abf2:	4618      	mov	r0, r3
 801abf4:	3708      	adds	r7, #8
 801abf6:	46bd      	mov	sp, r7
 801abf8:	bd80      	pop	{r7, pc}

0801abfa <_ZNSt6vectorIP14And_expressionSaIS1_EE9push_backEOS1_>:
      push_back(value_type&& __x)
 801abfa:	b580      	push	{r7, lr}
 801abfc:	b082      	sub	sp, #8
 801abfe:	af00      	add	r7, sp, #0
 801ac00:	6078      	str	r0, [r7, #4]
 801ac02:	6039      	str	r1, [r7, #0]
      { emplace_back(std::move(__x)); }
 801ac04:	6838      	ldr	r0, [r7, #0]
 801ac06:	f000 fb38 	bl	801b27a <_ZSt4moveIRP14And_expressionEONSt16remove_referenceIT_E4typeEOS4_>
 801ac0a:	4603      	mov	r3, r0
 801ac0c:	4619      	mov	r1, r3
 801ac0e:	6878      	ldr	r0, [r7, #4]
 801ac10:	f000 fb3e 	bl	801b290 <_ZNSt6vectorIP14And_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>
 801ac14:	bf00      	nop
 801ac16:	3708      	adds	r7, #8
 801ac18:	46bd      	mov	sp, r7
 801ac1a:	bd80      	pop	{r7, pc}

0801ac1c <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE7emplaceILj5EJS9_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>:
	emplace(_Args&&... __args)
 801ac1c:	b580      	push	{r7, lr}
 801ac1e:	b082      	sub	sp, #8
 801ac20:	af00      	add	r7, sp, #0
 801ac22:	6078      	str	r0, [r7, #4]
 801ac24:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 801ac26:	687b      	ldr	r3, [r7, #4]
 801ac28:	4618      	mov	r0, r3
 801ac2a:	f7ef fbbf 	bl	800a3ac <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 801ac2e:	6838      	ldr	r0, [r7, #0]
 801ac30:	f7f9 fdf0 	bl	8014814 <_ZSt7forwardIP13Function_callEOT_RNSt16remove_referenceIS2_E4typeE>
 801ac34:	4603      	mov	r3, r0
 801ac36:	4619      	mov	r1, r3
 801ac38:	6878      	ldr	r0, [r7, #4]
 801ac3a:	f000 fb5b 	bl	801b2f4 <_ZSt28__variant_construct_by_indexILj5ESt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEJSA_EEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 801ac3e:	6878      	ldr	r0, [r7, #4]
 801ac40:	f7ef fcc4 	bl	800a5cc <_ZSt3getILj5EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 801ac44:	4603      	mov	r3, r0
	}
 801ac46:	4618      	mov	r0, r3
 801ac48:	3708      	adds	r7, #8
 801ac4a:	46bd      	mov	sp, r7
 801ac4c:	bd80      	pop	{r7, pc}

0801ac4e <_ZSt7forwardIP8VariableEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801ac4e:	b480      	push	{r7}
 801ac50:	b083      	sub	sp, #12
 801ac52:	af00      	add	r7, sp, #0
 801ac54:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801ac56:	687b      	ldr	r3, [r7, #4]
 801ac58:	4618      	mov	r0, r3
 801ac5a:	370c      	adds	r7, #12
 801ac5c:	46bd      	mov	sp, r7
 801ac5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 801ac62:	4770      	bx	lr

0801ac64 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE7emplaceILj4EJS7_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>:
	emplace(_Args&&... __args)
 801ac64:	b580      	push	{r7, lr}
 801ac66:	b082      	sub	sp, #8
 801ac68:	af00      	add	r7, sp, #0
 801ac6a:	6078      	str	r0, [r7, #4]
 801ac6c:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 801ac6e:	687b      	ldr	r3, [r7, #4]
 801ac70:	4618      	mov	r0, r3
 801ac72:	f7ef fb9b 	bl	800a3ac <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 801ac76:	6838      	ldr	r0, [r7, #0]
 801ac78:	f7ff ffe9 	bl	801ac4e <_ZSt7forwardIP8VariableEOT_RNSt16remove_referenceIS2_E4typeE>
 801ac7c:	4603      	mov	r3, r0
 801ac7e:	4619      	mov	r1, r3
 801ac80:	6878      	ldr	r0, [r7, #4]
 801ac82:	f000 fb56 	bl	801b332 <_ZSt28__variant_construct_by_indexILj4ESt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEJS8_EEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 801ac86:	6878      	ldr	r0, [r7, #4]
 801ac88:	f7ef fc08 	bl	800a49c <_ZSt3getILj4EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 801ac8c:	4603      	mov	r3, r0
	}
 801ac8e:	4618      	mov	r0, r3
 801ac90:	3708      	adds	r7, #8
 801ac92:	46bd      	mov	sp, r7
 801ac94:	bd80      	pop	{r7, pc}

0801ac96 <_ZNSt8__detail9__variant14_UninitializedIbLb1EEC1IJEEESt16in_place_index_tILj0EEDpOT_>:
	_Uninitialized(in_place_index_t<0>, _Args&&... __args)
 801ac96:	b480      	push	{r7}
 801ac98:	b083      	sub	sp, #12
 801ac9a:	af00      	add	r7, sp, #0
 801ac9c:	6078      	str	r0, [r7, #4]
 801ac9e:	7039      	strb	r1, [r7, #0]
	: _M_storage(std::forward<_Args>(__args)...)
 801aca0:	687b      	ldr	r3, [r7, #4]
 801aca2:	2200      	movs	r2, #0
 801aca4:	701a      	strb	r2, [r3, #0]
	{ }
 801aca6:	687b      	ldr	r3, [r7, #4]
 801aca8:	4618      	mov	r0, r3
 801acaa:	370c      	adds	r7, #12
 801acac:	46bd      	mov	sp, r7
 801acae:	f85d 7b04 	ldr.w	r7, [sp], #4
 801acb2:	4770      	bx	lr

0801acb4 <_ZNSt8__detail9__variant15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEC1IJEEESt16in_place_index_tILj0EEDpOT_>:
	constexpr _Variadic_union(in_place_index_t<0>, _Args&&... __args)
 801acb4:	b580      	push	{r7, lr}
 801acb6:	b082      	sub	sp, #8
 801acb8:	af00      	add	r7, sp, #0
 801acba:	6078      	str	r0, [r7, #4]
 801acbc:	7039      	strb	r1, [r7, #0]
	: _M_first(in_place_index<0>, std::forward<_Args>(__args)...)
 801acbe:	687b      	ldr	r3, [r7, #4]
 801acc0:	4611      	mov	r1, r2
 801acc2:	4618      	mov	r0, r3
 801acc4:	f7ff ffe7 	bl	801ac96 <_ZNSt8__detail9__variant14_UninitializedIbLb1EEC1IJEEESt16in_place_index_tILj0EEDpOT_>
	{ }
 801acc8:	687b      	ldr	r3, [r7, #4]
 801acca:	4618      	mov	r0, r3
 801accc:	3708      	adds	r7, #8
 801acce:	46bd      	mov	sp, r7
 801acd0:	bd80      	pop	{r7, pc}

0801acd2 <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variant_storage(in_place_index_t<_Np>, _Args&&... __args)
 801acd2:	b580      	push	{r7, lr}
 801acd4:	b082      	sub	sp, #8
 801acd6:	af00      	add	r7, sp, #0
 801acd8:	6078      	str	r0, [r7, #4]
 801acda:	7039      	strb	r1, [r7, #0]
	_M_index(_Np)
 801acdc:	687b      	ldr	r3, [r7, #4]
 801acde:	4611      	mov	r1, r2
 801ace0:	4618      	mov	r0, r3
 801ace2:	f7ff ffe7 	bl	801acb4 <_ZNSt8__detail9__variant15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEC1IJEEESt16in_place_index_tILj0EEDpOT_>
 801ace6:	687b      	ldr	r3, [r7, #4]
 801ace8:	2200      	movs	r2, #0
 801acea:	761a      	strb	r2, [r3, #24]
	{ }
 801acec:	687b      	ldr	r3, [r7, #4]
 801acee:	4618      	mov	r0, r3
 801acf0:	3708      	adds	r7, #8
 801acf2:	46bd      	mov	sp, r7
 801acf4:	bd80      	pop	{r7, pc}

0801acf6 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE7emplaceILj0EJbEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>:
	emplace(_Args&&... __args)
 801acf6:	b580      	push	{r7, lr}
 801acf8:	b082      	sub	sp, #8
 801acfa:	af00      	add	r7, sp, #0
 801acfc:	6078      	str	r0, [r7, #4]
 801acfe:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 801ad00:	687b      	ldr	r3, [r7, #4]
 801ad02:	4618      	mov	r0, r3
 801ad04:	f7ef fb52 	bl	800a3ac <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 801ad08:	6838      	ldr	r0, [r7, #0]
 801ad0a:	f7ed fcf3 	bl	80086f4 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
 801ad0e:	4603      	mov	r3, r0
 801ad10:	4619      	mov	r1, r3
 801ad12:	6878      	ldr	r0, [r7, #4]
 801ad14:	f000 fb2c 	bl	801b370 <_ZSt28__variant_construct_by_indexILj0ESt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEJbEEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 801ad18:	6878      	ldr	r0, [r7, #4]
 801ad1a:	f7f2 fb47 	bl	800d3ac <_ZSt3getILj0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 801ad1e:	4603      	mov	r3, r0
	}
 801ad20:	4618      	mov	r0, r3
 801ad22:	3708      	adds	r7, #8
 801ad24:	46bd      	mov	sp, r7
 801ad26:	bd80      	pop	{r7, pc}

0801ad28 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE7emplaceILj1EJRiEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSG_E4typeEDpOSH_>:
	emplace(_Args&&... __args)
 801ad28:	b580      	push	{r7, lr}
 801ad2a:	b082      	sub	sp, #8
 801ad2c:	af00      	add	r7, sp, #0
 801ad2e:	6078      	str	r0, [r7, #4]
 801ad30:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 801ad32:	687b      	ldr	r3, [r7, #4]
 801ad34:	4618      	mov	r0, r3
 801ad36:	f7ef fb39 	bl	800a3ac <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 801ad3a:	6838      	ldr	r0, [r7, #0]
 801ad3c:	f7ea fec7 	bl	8005ace <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 801ad40:	4603      	mov	r3, r0
 801ad42:	4619      	mov	r1, r3
 801ad44:	6878      	ldr	r0, [r7, #4]
 801ad46:	f000 fb33 	bl	801b3b0 <_ZSt28__variant_construct_by_indexILj1ESt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEJRiEEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 801ad4a:	6878      	ldr	r0, [r7, #4]
 801ad4c:	f7f2 fada 	bl	800d304 <_ZSt3getILj1EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 801ad50:	4603      	mov	r3, r0
	}
 801ad52:	4618      	mov	r0, r3
 801ad54:	3708      	adds	r7, #8
 801ad56:	46bd      	mov	sp, r7
 801ad58:	bd80      	pop	{r7, pc}

0801ad5a <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE7emplaceILj2EJRfEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSG_E4typeEDpOSH_>:
	emplace(_Args&&... __args)
 801ad5a:	b580      	push	{r7, lr}
 801ad5c:	b082      	sub	sp, #8
 801ad5e:	af00      	add	r7, sp, #0
 801ad60:	6078      	str	r0, [r7, #4]
 801ad62:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 801ad64:	687b      	ldr	r3, [r7, #4]
 801ad66:	4618      	mov	r0, r3
 801ad68:	f7ef fb20 	bl	800a3ac <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 801ad6c:	6838      	ldr	r0, [r7, #0]
 801ad6e:	f7ea fed0 	bl	8005b12 <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 801ad72:	4603      	mov	r3, r0
 801ad74:	4619      	mov	r1, r3
 801ad76:	6878      	ldr	r0, [r7, #4]
 801ad78:	f000 fb39 	bl	801b3ee <_ZSt28__variant_construct_by_indexILj2ESt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEJRfEEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 801ad7c:	6878      	ldr	r0, [r7, #4]
 801ad7e:	f7f2 fadd 	bl	800d33c <_ZSt3getILj2EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 801ad82:	4603      	mov	r3, r0
	}
 801ad84:	4618      	mov	r0, r3
 801ad86:	3708      	adds	r7, #8
 801ad88:	46bd      	mov	sp, r7
 801ad8a:	bd80      	pop	{r7, pc}

0801ad8c <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE7emplaceILj3EJS5_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>:
	emplace(_Args&&... __args)
 801ad8c:	b580      	push	{r7, lr}
 801ad8e:	b082      	sub	sp, #8
 801ad90:	af00      	add	r7, sp, #0
 801ad92:	6078      	str	r0, [r7, #4]
 801ad94:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 801ad96:	687b      	ldr	r3, [r7, #4]
 801ad98:	4618      	mov	r0, r3
 801ad9a:	f7ef fb07 	bl	800a3ac <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 801ad9e:	6838      	ldr	r0, [r7, #0]
 801ada0:	f7ed fcd3 	bl	800874a <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 801ada4:	4603      	mov	r3, r0
 801ada6:	4619      	mov	r1, r3
 801ada8:	6878      	ldr	r0, [r7, #4]
 801adaa:	f000 fb3f 	bl	801b42c <_ZSt28__variant_construct_by_indexILj3ESt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEJS6_EEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 801adae:	6878      	ldr	r0, [r7, #4]
 801adb0:	f7f2 fae0 	bl	800d374 <_ZSt3getILj3EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 801adb4:	4603      	mov	r3, r0
	}
 801adb6:	4618      	mov	r0, r3
 801adb8:	3708      	adds	r7, #8
 801adba:	46bd      	mov	sp, r7
 801adbc:	bd80      	pop	{r7, pc}

0801adbe <_ZNSt8__detail9__variant14_UninitializedIP17Primal_expressionLb1EEC1IJEEESt16in_place_index_tILj0EEDpOT_>:
	_Uninitialized(in_place_index_t<0>, _Args&&... __args)
 801adbe:	b480      	push	{r7}
 801adc0:	b083      	sub	sp, #12
 801adc2:	af00      	add	r7, sp, #0
 801adc4:	6078      	str	r0, [r7, #4]
 801adc6:	7039      	strb	r1, [r7, #0]
	: _M_storage(std::forward<_Args>(__args)...)
 801adc8:	687b      	ldr	r3, [r7, #4]
 801adca:	2200      	movs	r2, #0
 801adcc:	601a      	str	r2, [r3, #0]
	{ }
 801adce:	687b      	ldr	r3, [r7, #4]
 801add0:	4618      	mov	r0, r3
 801add2:	370c      	adds	r7, #12
 801add4:	46bd      	mov	sp, r7
 801add6:	f85d 7b04 	ldr.w	r7, [sp], #4
 801adda:	4770      	bx	lr

0801addc <_ZNSt8__detail9__variant15_Variadic_unionIJP17Primal_expressionP10ExpressionEEC1IJEEESt16in_place_index_tILj0EEDpOT_>:
	constexpr _Variadic_union(in_place_index_t<0>, _Args&&... __args)
 801addc:	b580      	push	{r7, lr}
 801adde:	b082      	sub	sp, #8
 801ade0:	af00      	add	r7, sp, #0
 801ade2:	6078      	str	r0, [r7, #4]
 801ade4:	7039      	strb	r1, [r7, #0]
	: _M_first(in_place_index<0>, std::forward<_Args>(__args)...)
 801ade6:	687b      	ldr	r3, [r7, #4]
 801ade8:	4611      	mov	r1, r2
 801adea:	4618      	mov	r0, r3
 801adec:	f7ff ffe7 	bl	801adbe <_ZNSt8__detail9__variant14_UninitializedIP17Primal_expressionLb1EEC1IJEEESt16in_place_index_tILj0EEDpOT_>
	{ }
 801adf0:	687b      	ldr	r3, [r7, #4]
 801adf2:	4618      	mov	r0, r3
 801adf4:	3708      	adds	r7, #8
 801adf6:	46bd      	mov	sp, r7
 801adf8:	bd80      	pop	{r7, pc}

0801adfa <_ZNSt8__detail9__variant16_Variant_storageILb1EJP17Primal_expressionP10ExpressionEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variant_storage(in_place_index_t<_Np>, _Args&&... __args)
 801adfa:	b580      	push	{r7, lr}
 801adfc:	b082      	sub	sp, #8
 801adfe:	af00      	add	r7, sp, #0
 801ae00:	6078      	str	r0, [r7, #4]
 801ae02:	7039      	strb	r1, [r7, #0]
	_M_index(_Np)
 801ae04:	687b      	ldr	r3, [r7, #4]
 801ae06:	4611      	mov	r1, r2
 801ae08:	4618      	mov	r0, r3
 801ae0a:	f7ff ffe7 	bl	801addc <_ZNSt8__detail9__variant15_Variadic_unionIJP17Primal_expressionP10ExpressionEEC1IJEEESt16in_place_index_tILj0EEDpOT_>
 801ae0e:	687b      	ldr	r3, [r7, #4]
 801ae10:	2200      	movs	r2, #0
 801ae12:	711a      	strb	r2, [r3, #4]
	{ }
 801ae14:	687b      	ldr	r3, [r7, #4]
 801ae16:	4618      	mov	r0, r3
 801ae18:	3708      	adds	r7, #8
 801ae1a:	46bd      	mov	sp, r7
 801ae1c:	bd80      	pop	{r7, pc}

0801ae1e <_ZNSt7variantIJP17Primal_expressionP10ExpressionEE7emplaceILj1EJS3_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES4_E4typeEDpT0_EERS9_E4typeEDpOSA_>:
	emplace(_Args&&... __args)
 801ae1e:	b580      	push	{r7, lr}
 801ae20:	b082      	sub	sp, #8
 801ae22:	af00      	add	r7, sp, #0
 801ae24:	6078      	str	r0, [r7, #4]
 801ae26:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 801ae28:	687b      	ldr	r3, [r7, #4]
 801ae2a:	4618      	mov	r0, r3
 801ae2c:	f000 fb1f 	bl	801b46e <_ZNSt8__detail9__variant16_Variant_storageILb1EJP17Primal_expressionP10ExpressionEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 801ae30:	6838      	ldr	r0, [r7, #0]
 801ae32:	f7f9 fee7 	bl	8014c04 <_ZSt7forwardIP10ExpressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801ae36:	4603      	mov	r3, r0
 801ae38:	4619      	mov	r1, r3
 801ae3a:	6878      	ldr	r0, [r7, #4]
 801ae3c:	f000 fb24 	bl	801b488 <_ZSt28__variant_construct_by_indexILj1ESt7variantIJP17Primal_expressionP10ExpressionEEJS4_EEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 801ae40:	6878      	ldr	r0, [r7, #4]
 801ae42:	f7ef fc13 	bl	800a66c <_ZSt3getILj1EJP17Primal_expressionP10ExpressionEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERS8_>
 801ae46:	4603      	mov	r3, r0
	}
 801ae48:	4618      	mov	r0, r3
 801ae4a:	3708      	adds	r7, #8
 801ae4c:	46bd      	mov	sp, r7
 801ae4e:	bd80      	pop	{r7, pc}

0801ae50 <_ZSt7forwardIP17Primal_expressionEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801ae50:	b480      	push	{r7}
 801ae52:	b083      	sub	sp, #12
 801ae54:	af00      	add	r7, sp, #0
 801ae56:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801ae58:	687b      	ldr	r3, [r7, #4]
 801ae5a:	4618      	mov	r0, r3
 801ae5c:	370c      	adds	r7, #12
 801ae5e:	46bd      	mov	sp, r7
 801ae60:	f85d 7b04 	ldr.w	r7, [sp], #4
 801ae64:	4770      	bx	lr

0801ae66 <_ZNSt7variantIJP17Primal_expressionP10ExpressionEE7emplaceILj0EJS1_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES4_E4typeEDpT0_EERS9_E4typeEDpOSA_>:
	emplace(_Args&&... __args)
 801ae66:	b580      	push	{r7, lr}
 801ae68:	b082      	sub	sp, #8
 801ae6a:	af00      	add	r7, sp, #0
 801ae6c:	6078      	str	r0, [r7, #4]
 801ae6e:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 801ae70:	687b      	ldr	r3, [r7, #4]
 801ae72:	4618      	mov	r0, r3
 801ae74:	f000 fafb 	bl	801b46e <_ZNSt8__detail9__variant16_Variant_storageILb1EJP17Primal_expressionP10ExpressionEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 801ae78:	6838      	ldr	r0, [r7, #0]
 801ae7a:	f7ff ffe9 	bl	801ae50 <_ZSt7forwardIP17Primal_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801ae7e:	4603      	mov	r3, r0
 801ae80:	4619      	mov	r1, r3
 801ae82:	6878      	ldr	r0, [r7, #4]
 801ae84:	f000 fb1f 	bl	801b4c6 <_ZSt28__variant_construct_by_indexILj0ESt7variantIJP17Primal_expressionP10ExpressionEEJS2_EEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 801ae88:	6878      	ldr	r0, [r7, #4]
 801ae8a:	f7ef fc2d 	bl	800a6e8 <_ZSt3getILj0EJP17Primal_expressionP10ExpressionEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERS8_>
 801ae8e:	4603      	mov	r3, r0
	}
 801ae90:	4618      	mov	r0, r3
 801ae92:	3708      	adds	r7, #8
 801ae94:	46bd      	mov	sp, r7
 801ae96:	bd80      	pop	{r7, pc}

0801ae98 <_ZSt4moveIR13mult_operatorEONSt16remove_referenceIT_E4typeEOS3_>:
    move(_Tp&& __t) noexcept
 801ae98:	b480      	push	{r7}
 801ae9a:	b083      	sub	sp, #12
 801ae9c:	af00      	add	r7, sp, #0
 801ae9e:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 801aea0:	687b      	ldr	r3, [r7, #4]
 801aea2:	4618      	mov	r0, r3
 801aea4:	370c      	adds	r7, #12
 801aea6:	46bd      	mov	sp, r7
 801aea8:	f85d 7b04 	ldr.w	r7, [sp], #4
 801aeac:	4770      	bx	lr

0801aeae <_ZNSt6vectorI13mult_operatorSaIS0_EE12emplace_backIJS0_EEERS0_DpOT_>:
      vector<_Tp, _Alloc>::
 801aeae:	b5b0      	push	{r4, r5, r7, lr}
 801aeb0:	b082      	sub	sp, #8
 801aeb2:	af00      	add	r7, sp, #0
 801aeb4:	6078      	str	r0, [r7, #4]
 801aeb6:	6039      	str	r1, [r7, #0]
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 801aeb8:	687b      	ldr	r3, [r7, #4]
 801aeba:	685a      	ldr	r2, [r3, #4]
 801aebc:	687b      	ldr	r3, [r7, #4]
 801aebe:	689b      	ldr	r3, [r3, #8]
 801aec0:	429a      	cmp	r2, r3
 801aec2:	d011      	beq.n	801aee8 <_ZNSt6vectorI13mult_operatorSaIS0_EE12emplace_backIJS0_EEERS0_DpOT_+0x3a>
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 801aec4:	687c      	ldr	r4, [r7, #4]
 801aec6:	687b      	ldr	r3, [r7, #4]
 801aec8:	685d      	ldr	r5, [r3, #4]
 801aeca:	6838      	ldr	r0, [r7, #0]
 801aecc:	f000 fb1a 	bl	801b504 <_ZSt7forwardI13mult_operatorEOT_RNSt16remove_referenceIS1_E4typeE>
 801aed0:	4603      	mov	r3, r0
 801aed2:	461a      	mov	r2, r3
 801aed4:	4629      	mov	r1, r5
 801aed6:	4620      	mov	r0, r4
 801aed8:	f000 fb1f 	bl	801b51a <_ZNSt16allocator_traitsISaI13mult_operatorEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_>
	    ++this->_M_impl._M_finish;
 801aedc:	687b      	ldr	r3, [r7, #4]
 801aede:	685b      	ldr	r3, [r3, #4]
 801aee0:	1c5a      	adds	r2, r3, #1
 801aee2:	687b      	ldr	r3, [r7, #4]
 801aee4:	605a      	str	r2, [r3, #4]
 801aee6:	e00c      	b.n	801af02 <_ZNSt6vectorI13mult_operatorSaIS0_EE12emplace_backIJS0_EEERS0_DpOT_+0x54>
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
 801aee8:	6878      	ldr	r0, [r7, #4]
 801aeea:	f000 fb29 	bl	801b540 <_ZNSt6vectorI13mult_operatorSaIS0_EE3endEv>
 801aeee:	4604      	mov	r4, r0
 801aef0:	6838      	ldr	r0, [r7, #0]
 801aef2:	f000 fb07 	bl	801b504 <_ZSt7forwardI13mult_operatorEOT_RNSt16remove_referenceIS1_E4typeE>
 801aef6:	4603      	mov	r3, r0
 801aef8:	461a      	mov	r2, r3
 801aefa:	4621      	mov	r1, r4
 801aefc:	6878      	ldr	r0, [r7, #4]
 801aefe:	f000 fb31 	bl	801b564 <_ZNSt6vectorI13mult_operatorSaIS0_EE17_M_realloc_insertIJS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_>
	return back();
 801af02:	6878      	ldr	r0, [r7, #4]
 801af04:	f000 fba8 	bl	801b658 <_ZNSt6vectorI13mult_operatorSaIS0_EE4backEv>
 801af08:	4603      	mov	r3, r0
      }
 801af0a:	4618      	mov	r0, r3
 801af0c:	3708      	adds	r7, #8
 801af0e:	46bd      	mov	sp, r7
 801af10:	bdb0      	pop	{r4, r5, r7, pc}

0801af12 <_ZNSaIP16Power_expressionEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
 801af12:	b580      	push	{r7, lr}
 801af14:	b082      	sub	sp, #8
 801af16:	af00      	add	r7, sp, #0
 801af18:	6078      	str	r0, [r7, #4]
 801af1a:	6878      	ldr	r0, [r7, #4]
 801af1c:	f000 fbb7 	bl	801b68e <_ZN9__gnu_cxx13new_allocatorIP16Power_expressionEC1Ev>
 801af20:	687b      	ldr	r3, [r7, #4]
 801af22:	4618      	mov	r0, r3
 801af24:	3708      	adds	r7, #8
 801af26:	46bd      	mov	sp, r7
 801af28:	bd80      	pop	{r7, pc}

0801af2a <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
 801af2a:	b480      	push	{r7}
 801af2c:	b083      	sub	sp, #12
 801af2e:	af00      	add	r7, sp, #0
 801af30:	6078      	str	r0, [r7, #4]
	: _M_start(), _M_finish(), _M_end_of_storage()
 801af32:	687b      	ldr	r3, [r7, #4]
 801af34:	2200      	movs	r2, #0
 801af36:	601a      	str	r2, [r3, #0]
 801af38:	687b      	ldr	r3, [r7, #4]
 801af3a:	2200      	movs	r2, #0
 801af3c:	605a      	str	r2, [r3, #4]
 801af3e:	687b      	ldr	r3, [r7, #4]
 801af40:	2200      	movs	r2, #0
 801af42:	609a      	str	r2, [r3, #8]
	{ }
 801af44:	687b      	ldr	r3, [r7, #4]
 801af46:	4618      	mov	r0, r3
 801af48:	370c      	adds	r7, #12
 801af4a:	46bd      	mov	sp, r7
 801af4c:	f85d 7b04 	ldr.w	r7, [sp], #4
 801af50:	4770      	bx	lr

0801af52 <_ZNSaI13mult_operatorEC1Ev>:
 801af52:	b580      	push	{r7, lr}
 801af54:	b082      	sub	sp, #8
 801af56:	af00      	add	r7, sp, #0
 801af58:	6078      	str	r0, [r7, #4]
 801af5a:	6878      	ldr	r0, [r7, #4]
 801af5c:	f000 fba2 	bl	801b6a4 <_ZN9__gnu_cxx13new_allocatorI13mult_operatorEC1Ev>
 801af60:	687b      	ldr	r3, [r7, #4]
 801af62:	4618      	mov	r0, r3
 801af64:	3708      	adds	r7, #8
 801af66:	46bd      	mov	sp, r7
 801af68:	bd80      	pop	{r7, pc}

0801af6a <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
 801af6a:	b480      	push	{r7}
 801af6c:	b083      	sub	sp, #12
 801af6e:	af00      	add	r7, sp, #0
 801af70:	6078      	str	r0, [r7, #4]
	: _M_start(), _M_finish(), _M_end_of_storage()
 801af72:	687b      	ldr	r3, [r7, #4]
 801af74:	2200      	movs	r2, #0
 801af76:	601a      	str	r2, [r3, #0]
 801af78:	687b      	ldr	r3, [r7, #4]
 801af7a:	2200      	movs	r2, #0
 801af7c:	605a      	str	r2, [r3, #4]
 801af7e:	687b      	ldr	r3, [r7, #4]
 801af80:	2200      	movs	r2, #0
 801af82:	609a      	str	r2, [r3, #8]
	{ }
 801af84:	687b      	ldr	r3, [r7, #4]
 801af86:	4618      	mov	r0, r3
 801af88:	370c      	adds	r7, #12
 801af8a:	46bd      	mov	sp, r7
 801af8c:	f85d 7b04 	ldr.w	r7, [sp], #4
 801af90:	4770      	bx	lr

0801af92 <_ZSt4moveIRP16Power_expressionEONSt16remove_referenceIT_E4typeEOS4_>:
    move(_Tp&& __t) noexcept
 801af92:	b480      	push	{r7}
 801af94:	b083      	sub	sp, #12
 801af96:	af00      	add	r7, sp, #0
 801af98:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 801af9a:	687b      	ldr	r3, [r7, #4]
 801af9c:	4618      	mov	r0, r3
 801af9e:	370c      	adds	r7, #12
 801afa0:	46bd      	mov	sp, r7
 801afa2:	f85d 7b04 	ldr.w	r7, [sp], #4
 801afa6:	4770      	bx	lr

0801afa8 <_ZNSt6vectorIP16Power_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>:
      vector<_Tp, _Alloc>::
 801afa8:	b5b0      	push	{r4, r5, r7, lr}
 801afaa:	b082      	sub	sp, #8
 801afac:	af00      	add	r7, sp, #0
 801afae:	6078      	str	r0, [r7, #4]
 801afb0:	6039      	str	r1, [r7, #0]
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 801afb2:	687b      	ldr	r3, [r7, #4]
 801afb4:	685a      	ldr	r2, [r3, #4]
 801afb6:	687b      	ldr	r3, [r7, #4]
 801afb8:	689b      	ldr	r3, [r3, #8]
 801afba:	429a      	cmp	r2, r3
 801afbc:	d011      	beq.n	801afe2 <_ZNSt6vectorIP16Power_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x3a>
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 801afbe:	687c      	ldr	r4, [r7, #4]
 801afc0:	687b      	ldr	r3, [r7, #4]
 801afc2:	685d      	ldr	r5, [r3, #4]
 801afc4:	6838      	ldr	r0, [r7, #0]
 801afc6:	f000 fb78 	bl	801b6ba <_ZSt7forwardIP16Power_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801afca:	4603      	mov	r3, r0
 801afcc:	461a      	mov	r2, r3
 801afce:	4629      	mov	r1, r5
 801afd0:	4620      	mov	r0, r4
 801afd2:	f000 fb7d 	bl	801b6d0 <_ZNSt16allocator_traitsISaIP16Power_expressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	    ++this->_M_impl._M_finish;
 801afd6:	687b      	ldr	r3, [r7, #4]
 801afd8:	685b      	ldr	r3, [r3, #4]
 801afda:	1d1a      	adds	r2, r3, #4
 801afdc:	687b      	ldr	r3, [r7, #4]
 801afde:	605a      	str	r2, [r3, #4]
 801afe0:	e00c      	b.n	801affc <_ZNSt6vectorIP16Power_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x54>
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
 801afe2:	6878      	ldr	r0, [r7, #4]
 801afe4:	f7ef f832 	bl	800a04c <_ZNSt6vectorIP16Power_expressionSaIS1_EE3endEv>
 801afe8:	4604      	mov	r4, r0
 801afea:	6838      	ldr	r0, [r7, #0]
 801afec:	f000 fb65 	bl	801b6ba <_ZSt7forwardIP16Power_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801aff0:	4603      	mov	r3, r0
 801aff2:	461a      	mov	r2, r3
 801aff4:	4621      	mov	r1, r4
 801aff6:	6878      	ldr	r0, [r7, #4]
 801aff8:	f000 fb7e 	bl	801b6f8 <_ZNSt6vectorIP16Power_expressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
	return back();
 801affc:	6878      	ldr	r0, [r7, #4]
 801affe:	f000 fbf7 	bl	801b7f0 <_ZNSt6vectorIP16Power_expressionSaIS1_EE4backEv>
 801b002:	4603      	mov	r3, r0
      }
 801b004:	4618      	mov	r0, r3
 801b006:	3708      	adds	r7, #8
 801b008:	46bd      	mov	sp, r7
 801b00a:	bdb0      	pop	{r4, r5, r7, pc}

0801b00c <_ZSt4moveIR12sum_operatorEONSt16remove_referenceIT_E4typeEOS3_>:
    move(_Tp&& __t) noexcept
 801b00c:	b480      	push	{r7}
 801b00e:	b083      	sub	sp, #12
 801b010:	af00      	add	r7, sp, #0
 801b012:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 801b014:	687b      	ldr	r3, [r7, #4]
 801b016:	4618      	mov	r0, r3
 801b018:	370c      	adds	r7, #12
 801b01a:	46bd      	mov	sp, r7
 801b01c:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b020:	4770      	bx	lr

0801b022 <_ZNSt6vectorI12sum_operatorSaIS0_EE12emplace_backIJS0_EEERS0_DpOT_>:
      vector<_Tp, _Alloc>::
 801b022:	b5b0      	push	{r4, r5, r7, lr}
 801b024:	b082      	sub	sp, #8
 801b026:	af00      	add	r7, sp, #0
 801b028:	6078      	str	r0, [r7, #4]
 801b02a:	6039      	str	r1, [r7, #0]
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 801b02c:	687b      	ldr	r3, [r7, #4]
 801b02e:	685a      	ldr	r2, [r3, #4]
 801b030:	687b      	ldr	r3, [r7, #4]
 801b032:	689b      	ldr	r3, [r3, #8]
 801b034:	429a      	cmp	r2, r3
 801b036:	d011      	beq.n	801b05c <_ZNSt6vectorI12sum_operatorSaIS0_EE12emplace_backIJS0_EEERS0_DpOT_+0x3a>
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 801b038:	687c      	ldr	r4, [r7, #4]
 801b03a:	687b      	ldr	r3, [r7, #4]
 801b03c:	685d      	ldr	r5, [r3, #4]
 801b03e:	6838      	ldr	r0, [r7, #0]
 801b040:	f000 fbf1 	bl	801b826 <_ZSt7forwardI12sum_operatorEOT_RNSt16remove_referenceIS1_E4typeE>
 801b044:	4603      	mov	r3, r0
 801b046:	461a      	mov	r2, r3
 801b048:	4629      	mov	r1, r5
 801b04a:	4620      	mov	r0, r4
 801b04c:	f000 fbf6 	bl	801b83c <_ZNSt16allocator_traitsISaI12sum_operatorEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_>
	    ++this->_M_impl._M_finish;
 801b050:	687b      	ldr	r3, [r7, #4]
 801b052:	685b      	ldr	r3, [r3, #4]
 801b054:	1c5a      	adds	r2, r3, #1
 801b056:	687b      	ldr	r3, [r7, #4]
 801b058:	605a      	str	r2, [r3, #4]
 801b05a:	e00c      	b.n	801b076 <_ZNSt6vectorI12sum_operatorSaIS0_EE12emplace_backIJS0_EEERS0_DpOT_+0x54>
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
 801b05c:	6878      	ldr	r0, [r7, #4]
 801b05e:	f000 fc00 	bl	801b862 <_ZNSt6vectorI12sum_operatorSaIS0_EE3endEv>
 801b062:	4604      	mov	r4, r0
 801b064:	6838      	ldr	r0, [r7, #0]
 801b066:	f000 fbde 	bl	801b826 <_ZSt7forwardI12sum_operatorEOT_RNSt16remove_referenceIS1_E4typeE>
 801b06a:	4603      	mov	r3, r0
 801b06c:	461a      	mov	r2, r3
 801b06e:	4621      	mov	r1, r4
 801b070:	6878      	ldr	r0, [r7, #4]
 801b072:	f000 fc07 	bl	801b884 <_ZNSt6vectorI12sum_operatorSaIS0_EE17_M_realloc_insertIJS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_>
	return back();
 801b076:	6878      	ldr	r0, [r7, #4]
 801b078:	f000 fc7e 	bl	801b978 <_ZNSt6vectorI12sum_operatorSaIS0_EE4backEv>
 801b07c:	4603      	mov	r3, r0
      }
 801b07e:	4618      	mov	r0, r3
 801b080:	3708      	adds	r7, #8
 801b082:	46bd      	mov	sp, r7
 801b084:	bdb0      	pop	{r4, r5, r7, pc}

0801b086 <_ZNSaIP19Multiply_expressionEC1Ev>:
 801b086:	b580      	push	{r7, lr}
 801b088:	b082      	sub	sp, #8
 801b08a:	af00      	add	r7, sp, #0
 801b08c:	6078      	str	r0, [r7, #4]
 801b08e:	6878      	ldr	r0, [r7, #4]
 801b090:	f000 fc8d 	bl	801b9ae <_ZN9__gnu_cxx13new_allocatorIP19Multiply_expressionEC1Ev>
 801b094:	687b      	ldr	r3, [r7, #4]
 801b096:	4618      	mov	r0, r3
 801b098:	3708      	adds	r7, #8
 801b09a:	46bd      	mov	sp, r7
 801b09c:	bd80      	pop	{r7, pc}

0801b09e <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
 801b09e:	b480      	push	{r7}
 801b0a0:	b083      	sub	sp, #12
 801b0a2:	af00      	add	r7, sp, #0
 801b0a4:	6078      	str	r0, [r7, #4]
	: _M_start(), _M_finish(), _M_end_of_storage()
 801b0a6:	687b      	ldr	r3, [r7, #4]
 801b0a8:	2200      	movs	r2, #0
 801b0aa:	601a      	str	r2, [r3, #0]
 801b0ac:	687b      	ldr	r3, [r7, #4]
 801b0ae:	2200      	movs	r2, #0
 801b0b0:	605a      	str	r2, [r3, #4]
 801b0b2:	687b      	ldr	r3, [r7, #4]
 801b0b4:	2200      	movs	r2, #0
 801b0b6:	609a      	str	r2, [r3, #8]
	{ }
 801b0b8:	687b      	ldr	r3, [r7, #4]
 801b0ba:	4618      	mov	r0, r3
 801b0bc:	370c      	adds	r7, #12
 801b0be:	46bd      	mov	sp, r7
 801b0c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b0c4:	4770      	bx	lr

0801b0c6 <_ZNSaI12sum_operatorEC1Ev>:
 801b0c6:	b580      	push	{r7, lr}
 801b0c8:	b082      	sub	sp, #8
 801b0ca:	af00      	add	r7, sp, #0
 801b0cc:	6078      	str	r0, [r7, #4]
 801b0ce:	6878      	ldr	r0, [r7, #4]
 801b0d0:	f000 fc78 	bl	801b9c4 <_ZN9__gnu_cxx13new_allocatorI12sum_operatorEC1Ev>
 801b0d4:	687b      	ldr	r3, [r7, #4]
 801b0d6:	4618      	mov	r0, r3
 801b0d8:	3708      	adds	r7, #8
 801b0da:	46bd      	mov	sp, r7
 801b0dc:	bd80      	pop	{r7, pc}

0801b0de <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
 801b0de:	b480      	push	{r7}
 801b0e0:	b083      	sub	sp, #12
 801b0e2:	af00      	add	r7, sp, #0
 801b0e4:	6078      	str	r0, [r7, #4]
	: _M_start(), _M_finish(), _M_end_of_storage()
 801b0e6:	687b      	ldr	r3, [r7, #4]
 801b0e8:	2200      	movs	r2, #0
 801b0ea:	601a      	str	r2, [r3, #0]
 801b0ec:	687b      	ldr	r3, [r7, #4]
 801b0ee:	2200      	movs	r2, #0
 801b0f0:	605a      	str	r2, [r3, #4]
 801b0f2:	687b      	ldr	r3, [r7, #4]
 801b0f4:	2200      	movs	r2, #0
 801b0f6:	609a      	str	r2, [r3, #8]
	{ }
 801b0f8:	687b      	ldr	r3, [r7, #4]
 801b0fa:	4618      	mov	r0, r3
 801b0fc:	370c      	adds	r7, #12
 801b0fe:	46bd      	mov	sp, r7
 801b100:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b104:	4770      	bx	lr

0801b106 <_ZSt4moveIRP19Multiply_expressionEONSt16remove_referenceIT_E4typeEOS4_>:
    move(_Tp&& __t) noexcept
 801b106:	b480      	push	{r7}
 801b108:	b083      	sub	sp, #12
 801b10a:	af00      	add	r7, sp, #0
 801b10c:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 801b10e:	687b      	ldr	r3, [r7, #4]
 801b110:	4618      	mov	r0, r3
 801b112:	370c      	adds	r7, #12
 801b114:	46bd      	mov	sp, r7
 801b116:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b11a:	4770      	bx	lr

0801b11c <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>:
      vector<_Tp, _Alloc>::
 801b11c:	b5b0      	push	{r4, r5, r7, lr}
 801b11e:	b082      	sub	sp, #8
 801b120:	af00      	add	r7, sp, #0
 801b122:	6078      	str	r0, [r7, #4]
 801b124:	6039      	str	r1, [r7, #0]
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 801b126:	687b      	ldr	r3, [r7, #4]
 801b128:	685a      	ldr	r2, [r3, #4]
 801b12a:	687b      	ldr	r3, [r7, #4]
 801b12c:	689b      	ldr	r3, [r3, #8]
 801b12e:	429a      	cmp	r2, r3
 801b130:	d011      	beq.n	801b156 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x3a>
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 801b132:	687c      	ldr	r4, [r7, #4]
 801b134:	687b      	ldr	r3, [r7, #4]
 801b136:	685d      	ldr	r5, [r3, #4]
 801b138:	6838      	ldr	r0, [r7, #0]
 801b13a:	f000 fc4e 	bl	801b9da <_ZSt7forwardIP19Multiply_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801b13e:	4603      	mov	r3, r0
 801b140:	461a      	mov	r2, r3
 801b142:	4629      	mov	r1, r5
 801b144:	4620      	mov	r0, r4
 801b146:	f000 fc53 	bl	801b9f0 <_ZNSt16allocator_traitsISaIP19Multiply_expressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	    ++this->_M_impl._M_finish;
 801b14a:	687b      	ldr	r3, [r7, #4]
 801b14c:	685b      	ldr	r3, [r3, #4]
 801b14e:	1d1a      	adds	r2, r3, #4
 801b150:	687b      	ldr	r3, [r7, #4]
 801b152:	605a      	str	r2, [r3, #4]
 801b154:	e00c      	b.n	801b170 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x54>
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
 801b156:	6878      	ldr	r0, [r7, #4]
 801b158:	f7ef f803 	bl	800a162 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE3endEv>
 801b15c:	4604      	mov	r4, r0
 801b15e:	6838      	ldr	r0, [r7, #0]
 801b160:	f000 fc3b 	bl	801b9da <_ZSt7forwardIP19Multiply_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801b164:	4603      	mov	r3, r0
 801b166:	461a      	mov	r2, r3
 801b168:	4621      	mov	r1, r4
 801b16a:	6878      	ldr	r0, [r7, #4]
 801b16c:	f000 fc54 	bl	801ba18 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
	return back();
 801b170:	6878      	ldr	r0, [r7, #4]
 801b172:	f000 fccd 	bl	801bb10 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE4backEv>
 801b176:	4603      	mov	r3, r0
      }
 801b178:	4618      	mov	r0, r3
 801b17a:	3708      	adds	r7, #8
 801b17c:	46bd      	mov	sp, r7
 801b17e:	bdb0      	pop	{r4, r5, r7, pc}

0801b180 <_ZNSaIP18Compare_expressionEC1Ev>:
 801b180:	b580      	push	{r7, lr}
 801b182:	b082      	sub	sp, #8
 801b184:	af00      	add	r7, sp, #0
 801b186:	6078      	str	r0, [r7, #4]
 801b188:	6878      	ldr	r0, [r7, #4]
 801b18a:	f000 fcdc 	bl	801bb46 <_ZN9__gnu_cxx13new_allocatorIP18Compare_expressionEC1Ev>
 801b18e:	687b      	ldr	r3, [r7, #4]
 801b190:	4618      	mov	r0, r3
 801b192:	3708      	adds	r7, #8
 801b194:	46bd      	mov	sp, r7
 801b196:	bd80      	pop	{r7, pc}

0801b198 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
 801b198:	b480      	push	{r7}
 801b19a:	b083      	sub	sp, #12
 801b19c:	af00      	add	r7, sp, #0
 801b19e:	6078      	str	r0, [r7, #4]
	: _M_start(), _M_finish(), _M_end_of_storage()
 801b1a0:	687b      	ldr	r3, [r7, #4]
 801b1a2:	2200      	movs	r2, #0
 801b1a4:	601a      	str	r2, [r3, #0]
 801b1a6:	687b      	ldr	r3, [r7, #4]
 801b1a8:	2200      	movs	r2, #0
 801b1aa:	605a      	str	r2, [r3, #4]
 801b1ac:	687b      	ldr	r3, [r7, #4]
 801b1ae:	2200      	movs	r2, #0
 801b1b0:	609a      	str	r2, [r3, #8]
	{ }
 801b1b2:	687b      	ldr	r3, [r7, #4]
 801b1b4:	4618      	mov	r0, r3
 801b1b6:	370c      	adds	r7, #12
 801b1b8:	46bd      	mov	sp, r7
 801b1ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b1be:	4770      	bx	lr

0801b1c0 <_ZSt4moveIRP18Compare_expressionEONSt16remove_referenceIT_E4typeEOS4_>:
    move(_Tp&& __t) noexcept
 801b1c0:	b480      	push	{r7}
 801b1c2:	b083      	sub	sp, #12
 801b1c4:	af00      	add	r7, sp, #0
 801b1c6:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 801b1c8:	687b      	ldr	r3, [r7, #4]
 801b1ca:	4618      	mov	r0, r3
 801b1cc:	370c      	adds	r7, #12
 801b1ce:	46bd      	mov	sp, r7
 801b1d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b1d4:	4770      	bx	lr

0801b1d6 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>:
      vector<_Tp, _Alloc>::
 801b1d6:	b5b0      	push	{r4, r5, r7, lr}
 801b1d8:	b082      	sub	sp, #8
 801b1da:	af00      	add	r7, sp, #0
 801b1dc:	6078      	str	r0, [r7, #4]
 801b1de:	6039      	str	r1, [r7, #0]
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 801b1e0:	687b      	ldr	r3, [r7, #4]
 801b1e2:	685a      	ldr	r2, [r3, #4]
 801b1e4:	687b      	ldr	r3, [r7, #4]
 801b1e6:	689b      	ldr	r3, [r3, #8]
 801b1e8:	429a      	cmp	r2, r3
 801b1ea:	d011      	beq.n	801b210 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x3a>
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 801b1ec:	687c      	ldr	r4, [r7, #4]
 801b1ee:	687b      	ldr	r3, [r7, #4]
 801b1f0:	685d      	ldr	r5, [r3, #4]
 801b1f2:	6838      	ldr	r0, [r7, #0]
 801b1f4:	f000 fcb2 	bl	801bb5c <_ZSt7forwardIP18Compare_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801b1f8:	4603      	mov	r3, r0
 801b1fa:	461a      	mov	r2, r3
 801b1fc:	4629      	mov	r1, r5
 801b1fe:	4620      	mov	r0, r4
 801b200:	f000 fcb7 	bl	801bb72 <_ZNSt16allocator_traitsISaIP18Compare_expressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	    ++this->_M_impl._M_finish;
 801b204:	687b      	ldr	r3, [r7, #4]
 801b206:	685b      	ldr	r3, [r3, #4]
 801b208:	1d1a      	adds	r2, r3, #4
 801b20a:	687b      	ldr	r3, [r7, #4]
 801b20c:	605a      	str	r2, [r3, #4]
 801b20e:	e00c      	b.n	801b22a <_ZNSt6vectorIP18Compare_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x54>
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
 801b210:	6878      	ldr	r0, [r7, #4]
 801b212:	f7ef f816 	bl	800a242 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE3endEv>
 801b216:	4604      	mov	r4, r0
 801b218:	6838      	ldr	r0, [r7, #0]
 801b21a:	f000 fc9f 	bl	801bb5c <_ZSt7forwardIP18Compare_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801b21e:	4603      	mov	r3, r0
 801b220:	461a      	mov	r2, r3
 801b222:	4621      	mov	r1, r4
 801b224:	6878      	ldr	r0, [r7, #4]
 801b226:	f000 fcb7 	bl	801bb98 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
	return back();
 801b22a:	6878      	ldr	r0, [r7, #4]
 801b22c:	f000 fd30 	bl	801bc90 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE4backEv>
 801b230:	4603      	mov	r3, r0
      }
 801b232:	4618      	mov	r0, r3
 801b234:	3708      	adds	r7, #8
 801b236:	46bd      	mov	sp, r7
 801b238:	bdb0      	pop	{r4, r5, r7, pc}

0801b23a <_ZNSaIP14And_expressionEC1Ev>:
 801b23a:	b580      	push	{r7, lr}
 801b23c:	b082      	sub	sp, #8
 801b23e:	af00      	add	r7, sp, #0
 801b240:	6078      	str	r0, [r7, #4]
 801b242:	6878      	ldr	r0, [r7, #4]
 801b244:	f000 fd3f 	bl	801bcc6 <_ZN9__gnu_cxx13new_allocatorIP14And_expressionEC1Ev>
 801b248:	687b      	ldr	r3, [r7, #4]
 801b24a:	4618      	mov	r0, r3
 801b24c:	3708      	adds	r7, #8
 801b24e:	46bd      	mov	sp, r7
 801b250:	bd80      	pop	{r7, pc}

0801b252 <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
 801b252:	b480      	push	{r7}
 801b254:	b083      	sub	sp, #12
 801b256:	af00      	add	r7, sp, #0
 801b258:	6078      	str	r0, [r7, #4]
	: _M_start(), _M_finish(), _M_end_of_storage()
 801b25a:	687b      	ldr	r3, [r7, #4]
 801b25c:	2200      	movs	r2, #0
 801b25e:	601a      	str	r2, [r3, #0]
 801b260:	687b      	ldr	r3, [r7, #4]
 801b262:	2200      	movs	r2, #0
 801b264:	605a      	str	r2, [r3, #4]
 801b266:	687b      	ldr	r3, [r7, #4]
 801b268:	2200      	movs	r2, #0
 801b26a:	609a      	str	r2, [r3, #8]
	{ }
 801b26c:	687b      	ldr	r3, [r7, #4]
 801b26e:	4618      	mov	r0, r3
 801b270:	370c      	adds	r7, #12
 801b272:	46bd      	mov	sp, r7
 801b274:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b278:	4770      	bx	lr

0801b27a <_ZSt4moveIRP14And_expressionEONSt16remove_referenceIT_E4typeEOS4_>:
    move(_Tp&& __t) noexcept
 801b27a:	b480      	push	{r7}
 801b27c:	b083      	sub	sp, #12
 801b27e:	af00      	add	r7, sp, #0
 801b280:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 801b282:	687b      	ldr	r3, [r7, #4]
 801b284:	4618      	mov	r0, r3
 801b286:	370c      	adds	r7, #12
 801b288:	46bd      	mov	sp, r7
 801b28a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b28e:	4770      	bx	lr

0801b290 <_ZNSt6vectorIP14And_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>:
      vector<_Tp, _Alloc>::
 801b290:	b5b0      	push	{r4, r5, r7, lr}
 801b292:	b082      	sub	sp, #8
 801b294:	af00      	add	r7, sp, #0
 801b296:	6078      	str	r0, [r7, #4]
 801b298:	6039      	str	r1, [r7, #0]
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 801b29a:	687b      	ldr	r3, [r7, #4]
 801b29c:	685a      	ldr	r2, [r3, #4]
 801b29e:	687b      	ldr	r3, [r7, #4]
 801b2a0:	689b      	ldr	r3, [r3, #8]
 801b2a2:	429a      	cmp	r2, r3
 801b2a4:	d011      	beq.n	801b2ca <_ZNSt6vectorIP14And_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x3a>
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 801b2a6:	687c      	ldr	r4, [r7, #4]
 801b2a8:	687b      	ldr	r3, [r7, #4]
 801b2aa:	685d      	ldr	r5, [r3, #4]
 801b2ac:	6838      	ldr	r0, [r7, #0]
 801b2ae:	f000 fd15 	bl	801bcdc <_ZSt7forwardIP14And_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801b2b2:	4603      	mov	r3, r0
 801b2b4:	461a      	mov	r2, r3
 801b2b6:	4629      	mov	r1, r5
 801b2b8:	4620      	mov	r0, r4
 801b2ba:	f000 fd1a 	bl	801bcf2 <_ZNSt16allocator_traitsISaIP14And_expressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	    ++this->_M_impl._M_finish;
 801b2be:	687b      	ldr	r3, [r7, #4]
 801b2c0:	685b      	ldr	r3, [r3, #4]
 801b2c2:	1d1a      	adds	r2, r3, #4
 801b2c4:	687b      	ldr	r3, [r7, #4]
 801b2c6:	605a      	str	r2, [r3, #4]
 801b2c8:	e00c      	b.n	801b2e4 <_ZNSt6vectorIP14And_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x54>
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
 801b2ca:	6878      	ldr	r0, [r7, #4]
 801b2cc:	f7ef f829 	bl	800a322 <_ZNSt6vectorIP14And_expressionSaIS1_EE3endEv>
 801b2d0:	4604      	mov	r4, r0
 801b2d2:	6838      	ldr	r0, [r7, #0]
 801b2d4:	f000 fd02 	bl	801bcdc <_ZSt7forwardIP14And_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801b2d8:	4603      	mov	r3, r0
 801b2da:	461a      	mov	r2, r3
 801b2dc:	4621      	mov	r1, r4
 801b2de:	6878      	ldr	r0, [r7, #4]
 801b2e0:	f000 fd1a 	bl	801bd18 <_ZNSt6vectorIP14And_expressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
	return back();
 801b2e4:	6878      	ldr	r0, [r7, #4]
 801b2e6:	f000 fd93 	bl	801be10 <_ZNSt6vectorIP14And_expressionSaIS1_EE4backEv>
 801b2ea:	4603      	mov	r3, r0
      }
 801b2ec:	4618      	mov	r0, r3
 801b2ee:	3708      	adds	r7, #8
 801b2f0:	46bd      	mov	sp, r7
 801b2f2:	bdb0      	pop	{r4, r5, r7, pc}

0801b2f4 <_ZSt28__variant_construct_by_indexILj5ESt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEJSA_EEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 801b2f4:	b590      	push	{r4, r7, lr}
 801b2f6:	b085      	sub	sp, #20
 801b2f8:	af00      	add	r7, sp, #0
 801b2fa:	6078      	str	r0, [r7, #4]
 801b2fc:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 801b2fe:	687b      	ldr	r3, [r7, #4]
 801b300:	2205      	movs	r2, #5
 801b302:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 801b304:	6878      	ldr	r0, [r7, #4]
 801b306:	f7ef f950 	bl	800a5aa <_ZNSt8__detail9__variant5__getILj5ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 801b30a:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 801b30c:	6838      	ldr	r0, [r7, #0]
 801b30e:	f7f9 fa81 	bl	8014814 <_ZSt7forwardIP13Function_callEOT_RNSt16remove_referenceIS2_E4typeE>
 801b312:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 801b314:	681c      	ldr	r4, [r3, #0]
 801b316:	68f8      	ldr	r0, [r7, #12]
 801b318:	f7fa f982 	bl	8015620 <_ZSt9addressofIP13Function_callEPT_RS2_>
 801b31c:	4603      	mov	r3, r0
 801b31e:	4619      	mov	r1, r3
 801b320:	2004      	movs	r0, #4
 801b322:	f7e5 fe9a 	bl	800105a <_ZnwjPv>
 801b326:	4603      	mov	r3, r0
 801b328:	601c      	str	r4, [r3, #0]
    }
 801b32a:	bf00      	nop
 801b32c:	3714      	adds	r7, #20
 801b32e:	46bd      	mov	sp, r7
 801b330:	bd90      	pop	{r4, r7, pc}

0801b332 <_ZSt28__variant_construct_by_indexILj4ESt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEJS8_EEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 801b332:	b590      	push	{r4, r7, lr}
 801b334:	b085      	sub	sp, #20
 801b336:	af00      	add	r7, sp, #0
 801b338:	6078      	str	r0, [r7, #4]
 801b33a:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 801b33c:	687b      	ldr	r3, [r7, #4]
 801b33e:	2204      	movs	r2, #4
 801b340:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 801b342:	6878      	ldr	r0, [r7, #4]
 801b344:	f7ef f899 	bl	800a47a <_ZNSt8__detail9__variant5__getILj4ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 801b348:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 801b34a:	6838      	ldr	r0, [r7, #0]
 801b34c:	f7ff fc7f 	bl	801ac4e <_ZSt7forwardIP8VariableEOT_RNSt16remove_referenceIS2_E4typeE>
 801b350:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 801b352:	681c      	ldr	r4, [r3, #0]
 801b354:	68f8      	ldr	r0, [r7, #12]
 801b356:	f000 fd76 	bl	801be46 <_ZSt9addressofIP8VariableEPT_RS2_>
 801b35a:	4603      	mov	r3, r0
 801b35c:	4619      	mov	r1, r3
 801b35e:	2004      	movs	r0, #4
 801b360:	f7e5 fe7b 	bl	800105a <_ZnwjPv>
 801b364:	4603      	mov	r3, r0
 801b366:	601c      	str	r4, [r3, #0]
    }
 801b368:	bf00      	nop
 801b36a:	3714      	adds	r7, #20
 801b36c:	46bd      	mov	sp, r7
 801b36e:	bd90      	pop	{r4, r7, pc}

0801b370 <_ZSt28__variant_construct_by_indexILj0ESt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEJbEEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 801b370:	b590      	push	{r4, r7, lr}
 801b372:	b085      	sub	sp, #20
 801b374:	af00      	add	r7, sp, #0
 801b376:	6078      	str	r0, [r7, #4]
 801b378:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 801b37a:	687b      	ldr	r3, [r7, #4]
 801b37c:	2200      	movs	r2, #0
 801b37e:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 801b380:	6878      	ldr	r0, [r7, #4]
 801b382:	f7ef fbc7 	bl	800ab14 <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 801b386:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 801b388:	6838      	ldr	r0, [r7, #0]
 801b38a:	f7ed f9b3 	bl	80086f4 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
 801b38e:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 801b390:	781c      	ldrb	r4, [r3, #0]
 801b392:	68f8      	ldr	r0, [r7, #12]
 801b394:	f7ed fb9a 	bl	8008acc <_ZSt9addressofIbEPT_RS0_>
 801b398:	4603      	mov	r3, r0
 801b39a:	4619      	mov	r1, r3
 801b39c:	2001      	movs	r0, #1
 801b39e:	f7e5 fe5c 	bl	800105a <_ZnwjPv>
 801b3a2:	4603      	mov	r3, r0
 801b3a4:	4622      	mov	r2, r4
 801b3a6:	701a      	strb	r2, [r3, #0]
    }
 801b3a8:	bf00      	nop
 801b3aa:	3714      	adds	r7, #20
 801b3ac:	46bd      	mov	sp, r7
 801b3ae:	bd90      	pop	{r4, r7, pc}

0801b3b0 <_ZSt28__variant_construct_by_indexILj1ESt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEJRiEEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 801b3b0:	b590      	push	{r4, r7, lr}
 801b3b2:	b085      	sub	sp, #20
 801b3b4:	af00      	add	r7, sp, #0
 801b3b6:	6078      	str	r0, [r7, #4]
 801b3b8:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 801b3ba:	687b      	ldr	r3, [r7, #4]
 801b3bc:	2201      	movs	r2, #1
 801b3be:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 801b3c0:	6878      	ldr	r0, [r7, #4]
 801b3c2:	f7ef fc31 	bl	800ac28 <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 801b3c6:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 801b3c8:	6838      	ldr	r0, [r7, #0]
 801b3ca:	f7ea fb80 	bl	8005ace <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 801b3ce:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 801b3d0:	681c      	ldr	r4, [r3, #0]
 801b3d2:	68f8      	ldr	r0, [r7, #12]
 801b3d4:	f7ed fb62 	bl	8008a9c <_ZSt9addressofIiEPT_RS0_>
 801b3d8:	4603      	mov	r3, r0
 801b3da:	4619      	mov	r1, r3
 801b3dc:	2004      	movs	r0, #4
 801b3de:	f7e5 fe3c 	bl	800105a <_ZnwjPv>
 801b3e2:	4603      	mov	r3, r0
 801b3e4:	601c      	str	r4, [r3, #0]
    }
 801b3e6:	bf00      	nop
 801b3e8:	3714      	adds	r7, #20
 801b3ea:	46bd      	mov	sp, r7
 801b3ec:	bd90      	pop	{r4, r7, pc}

0801b3ee <_ZSt28__variant_construct_by_indexILj2ESt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEJRfEEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 801b3ee:	b590      	push	{r4, r7, lr}
 801b3f0:	b085      	sub	sp, #20
 801b3f2:	af00      	add	r7, sp, #0
 801b3f4:	6078      	str	r0, [r7, #4]
 801b3f6:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 801b3f8:	687b      	ldr	r3, [r7, #4]
 801b3fa:	2202      	movs	r2, #2
 801b3fc:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 801b3fe:	6878      	ldr	r0, [r7, #4]
 801b400:	f7ef fcae 	bl	800ad60 <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 801b404:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 801b406:	6838      	ldr	r0, [r7, #0]
 801b408:	f7ea fb83 	bl	8005b12 <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 801b40c:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 801b40e:	681c      	ldr	r4, [r3, #0]
 801b410:	68f8      	ldr	r0, [r7, #12]
 801b412:	f7ed fb4f 	bl	8008ab4 <_ZSt9addressofIfEPT_RS0_>
 801b416:	4603      	mov	r3, r0
 801b418:	4619      	mov	r1, r3
 801b41a:	2004      	movs	r0, #4
 801b41c:	f7e5 fe1d 	bl	800105a <_ZnwjPv>
 801b420:	4603      	mov	r3, r0
 801b422:	601c      	str	r4, [r3, #0]
    }
 801b424:	bf00      	nop
 801b426:	3714      	adds	r7, #20
 801b428:	46bd      	mov	sp, r7
 801b42a:	bd90      	pop	{r4, r7, pc}

0801b42c <_ZSt28__variant_construct_by_indexILj3ESt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEJS6_EEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 801b42c:	b590      	push	{r4, r7, lr}
 801b42e:	b085      	sub	sp, #20
 801b430:	af00      	add	r7, sp, #0
 801b432:	6078      	str	r0, [r7, #4]
 801b434:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 801b436:	687b      	ldr	r3, [r7, #4]
 801b438:	2203      	movs	r2, #3
 801b43a:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 801b43c:	6878      	ldr	r0, [r7, #4]
 801b43e:	f7ef fd3d 	bl	800aebc <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 801b442:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 801b444:	6838      	ldr	r0, [r7, #0]
 801b446:	f7ed f980 	bl	800874a <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 801b44a:	4604      	mov	r4, r0
      ::new ((void*)std::addressof(__storage))
 801b44c:	68f8      	ldr	r0, [r7, #12]
 801b44e:	f7ed fb49 	bl	8008ae4 <_ZSt9addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_>
 801b452:	4603      	mov	r3, r0
 801b454:	4619      	mov	r1, r3
 801b456:	2018      	movs	r0, #24
 801b458:	f7e5 fdff 	bl	800105a <_ZnwjPv>
 801b45c:	4603      	mov	r3, r0
 801b45e:	4621      	mov	r1, r4
 801b460:	4618      	mov	r0, r3
 801b462:	f007 fc68 	bl	8022d36 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_>
    }
 801b466:	bf00      	nop
 801b468:	3714      	adds	r7, #20
 801b46a:	46bd      	mov	sp, r7
 801b46c:	bd90      	pop	{r4, r7, pc}

0801b46e <_ZNSt8__detail9__variant16_Variant_storageILb1EJP17Primal_expressionP10ExpressionEE8_M_resetEv>:
      void _M_reset()
 801b46e:	b480      	push	{r7}
 801b470:	b083      	sub	sp, #12
 801b472:	af00      	add	r7, sp, #0
 801b474:	6078      	str	r0, [r7, #4]
      { _M_index = variant_npos; }
 801b476:	687b      	ldr	r3, [r7, #4]
 801b478:	22ff      	movs	r2, #255	; 0xff
 801b47a:	711a      	strb	r2, [r3, #4]
 801b47c:	bf00      	nop
 801b47e:	370c      	adds	r7, #12
 801b480:	46bd      	mov	sp, r7
 801b482:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b486:	4770      	bx	lr

0801b488 <_ZSt28__variant_construct_by_indexILj1ESt7variantIJP17Primal_expressionP10ExpressionEEJS4_EEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 801b488:	b590      	push	{r4, r7, lr}
 801b48a:	b085      	sub	sp, #20
 801b48c:	af00      	add	r7, sp, #0
 801b48e:	6078      	str	r0, [r7, #4]
 801b490:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 801b492:	687b      	ldr	r3, [r7, #4]
 801b494:	2201      	movs	r2, #1
 801b496:	711a      	strb	r2, [r3, #4]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 801b498:	6878      	ldr	r0, [r7, #4]
 801b49a:	f7ef f8d6 	bl	800a64a <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJP17Primal_expressionP10ExpressionEEEEDcOT0_>
 801b49e:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 801b4a0:	6838      	ldr	r0, [r7, #0]
 801b4a2:	f7f9 fbaf 	bl	8014c04 <_ZSt7forwardIP10ExpressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801b4a6:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 801b4a8:	681c      	ldr	r4, [r3, #0]
 801b4aa:	68f8      	ldr	r0, [r7, #12]
 801b4ac:	f000 fcd7 	bl	801be5e <_ZSt9addressofIP10ExpressionEPT_RS2_>
 801b4b0:	4603      	mov	r3, r0
 801b4b2:	4619      	mov	r1, r3
 801b4b4:	2004      	movs	r0, #4
 801b4b6:	f7e5 fdd0 	bl	800105a <_ZnwjPv>
 801b4ba:	4603      	mov	r3, r0
 801b4bc:	601c      	str	r4, [r3, #0]
    }
 801b4be:	bf00      	nop
 801b4c0:	3714      	adds	r7, #20
 801b4c2:	46bd      	mov	sp, r7
 801b4c4:	bd90      	pop	{r4, r7, pc}

0801b4c6 <_ZSt28__variant_construct_by_indexILj0ESt7variantIJP17Primal_expressionP10ExpressionEEJS2_EEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 801b4c6:	b590      	push	{r4, r7, lr}
 801b4c8:	b085      	sub	sp, #20
 801b4ca:	af00      	add	r7, sp, #0
 801b4cc:	6078      	str	r0, [r7, #4]
 801b4ce:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 801b4d0:	687b      	ldr	r3, [r7, #4]
 801b4d2:	2200      	movs	r2, #0
 801b4d4:	711a      	strb	r2, [r3, #4]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 801b4d6:	6878      	ldr	r0, [r7, #4]
 801b4d8:	f7ef f8f5 	bl	800a6c6 <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJP17Primal_expressionP10ExpressionEEEEDcOT0_>
 801b4dc:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 801b4de:	6838      	ldr	r0, [r7, #0]
 801b4e0:	f7ff fcb6 	bl	801ae50 <_ZSt7forwardIP17Primal_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801b4e4:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 801b4e6:	681c      	ldr	r4, [r3, #0]
 801b4e8:	68f8      	ldr	r0, [r7, #12]
 801b4ea:	f000 fcc4 	bl	801be76 <_ZSt9addressofIP17Primal_expressionEPT_RS2_>
 801b4ee:	4603      	mov	r3, r0
 801b4f0:	4619      	mov	r1, r3
 801b4f2:	2004      	movs	r0, #4
 801b4f4:	f7e5 fdb1 	bl	800105a <_ZnwjPv>
 801b4f8:	4603      	mov	r3, r0
 801b4fa:	601c      	str	r4, [r3, #0]
    }
 801b4fc:	bf00      	nop
 801b4fe:	3714      	adds	r7, #20
 801b500:	46bd      	mov	sp, r7
 801b502:	bd90      	pop	{r4, r7, pc}

0801b504 <_ZSt7forwardI13mult_operatorEOT_RNSt16remove_referenceIS1_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801b504:	b480      	push	{r7}
 801b506:	b083      	sub	sp, #12
 801b508:	af00      	add	r7, sp, #0
 801b50a:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801b50c:	687b      	ldr	r3, [r7, #4]
 801b50e:	4618      	mov	r0, r3
 801b510:	370c      	adds	r7, #12
 801b512:	46bd      	mov	sp, r7
 801b514:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b518:	4770      	bx	lr

0801b51a <_ZNSt16allocator_traitsISaI13mult_operatorEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 801b51a:	b580      	push	{r7, lr}
 801b51c:	b084      	sub	sp, #16
 801b51e:	af00      	add	r7, sp, #0
 801b520:	60f8      	str	r0, [r7, #12]
 801b522:	60b9      	str	r1, [r7, #8]
 801b524:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 801b526:	6878      	ldr	r0, [r7, #4]
 801b528:	f7ff ffec 	bl	801b504 <_ZSt7forwardI13mult_operatorEOT_RNSt16remove_referenceIS1_E4typeE>
 801b52c:	4603      	mov	r3, r0
 801b52e:	461a      	mov	r2, r3
 801b530:	68b9      	ldr	r1, [r7, #8]
 801b532:	68f8      	ldr	r0, [r7, #12]
 801b534:	f000 fcab 	bl	801be8e <_ZN9__gnu_cxx13new_allocatorI13mult_operatorE9constructIS1_JS1_EEEvPT_DpOT0_>
 801b538:	bf00      	nop
 801b53a:	3710      	adds	r7, #16
 801b53c:	46bd      	mov	sp, r7
 801b53e:	bd80      	pop	{r7, pc}

0801b540 <_ZNSt6vectorI13mult_operatorSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 801b540:	b580      	push	{r7, lr}
 801b542:	b084      	sub	sp, #16
 801b544:	af00      	add	r7, sp, #0
 801b546:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_finish); }
 801b548:	687b      	ldr	r3, [r7, #4]
 801b54a:	1d1a      	adds	r2, r3, #4
 801b54c:	f107 030c 	add.w	r3, r7, #12
 801b550:	4611      	mov	r1, r2
 801b552:	4618      	mov	r0, r3
 801b554:	f000 fcb2 	bl	801bebc <_ZN9__gnu_cxx17__normal_iteratorIP13mult_operatorSt6vectorIS1_SaIS1_EEEC1ERKS2_>
 801b558:	68fb      	ldr	r3, [r7, #12]
 801b55a:	4618      	mov	r0, r3
 801b55c:	3710      	adds	r7, #16
 801b55e:	46bd      	mov	sp, r7
 801b560:	bd80      	pop	{r7, pc}
	...

0801b564 <_ZNSt6vectorI13mult_operatorSaIS0_EE17_M_realloc_insertIJS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_>:
      vector<_Tp, _Alloc>::
 801b564:	b5b0      	push	{r4, r5, r7, lr}
 801b566:	b08c      	sub	sp, #48	; 0x30
 801b568:	af00      	add	r7, sp, #0
 801b56a:	60f8      	str	r0, [r7, #12]
 801b56c:	60b9      	str	r1, [r7, #8]
 801b56e:	607a      	str	r2, [r7, #4]
      const size_type __len =
 801b570:	4a38      	ldr	r2, [pc, #224]	; (801b654 <_ZNSt6vectorI13mult_operatorSaIS0_EE17_M_realloc_insertIJS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_+0xf0>)
 801b572:	2101      	movs	r1, #1
 801b574:	68f8      	ldr	r0, [r7, #12]
 801b576:	f000 fcb1 	bl	801bedc <_ZNKSt6vectorI13mult_operatorSaIS0_EE12_M_check_lenEjPKc>
 801b57a:	62f8      	str	r0, [r7, #44]	; 0x2c
      pointer __old_start = this->_M_impl._M_start;
 801b57c:	68fb      	ldr	r3, [r7, #12]
 801b57e:	681b      	ldr	r3, [r3, #0]
 801b580:	62bb      	str	r3, [r7, #40]	; 0x28
      pointer __old_finish = this->_M_impl._M_finish;
 801b582:	68fb      	ldr	r3, [r7, #12]
 801b584:	685b      	ldr	r3, [r3, #4]
 801b586:	627b      	str	r3, [r7, #36]	; 0x24
      const size_type __elems_before = __position - begin();
 801b588:	68f8      	ldr	r0, [r7, #12]
 801b58a:	f000 fcee 	bl	801bf6a <_ZNSt6vectorI13mult_operatorSaIS0_EE5beginEv>
 801b58e:	4603      	mov	r3, r0
 801b590:	617b      	str	r3, [r7, #20]
 801b592:	f107 0214 	add.w	r2, r7, #20
 801b596:	f107 0308 	add.w	r3, r7, #8
 801b59a:	4611      	mov	r1, r2
 801b59c:	4618      	mov	r0, r3
 801b59e:	f000 fcf4 	bl	801bf8a <_ZN9__gnu_cxxmiIP13mult_operatorSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_>
 801b5a2:	4603      	mov	r3, r0
 801b5a4:	623b      	str	r3, [r7, #32]
      pointer __new_start(this->_M_allocate(__len));
 801b5a6:	68fb      	ldr	r3, [r7, #12]
 801b5a8:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 801b5aa:	4618      	mov	r0, r3
 801b5ac:	f000 fd01 	bl	801bfb2 <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE11_M_allocateEj>
 801b5b0:	61f8      	str	r0, [r7, #28]
      pointer __new_finish(__new_start);
 801b5b2:	69fb      	ldr	r3, [r7, #28]
 801b5b4:	61bb      	str	r3, [r7, #24]
	  _Alloc_traits::construct(this->_M_impl,
 801b5b6:	68fc      	ldr	r4, [r7, #12]
 801b5b8:	69fa      	ldr	r2, [r7, #28]
 801b5ba:	6a3b      	ldr	r3, [r7, #32]
 801b5bc:	18d5      	adds	r5, r2, r3
 801b5be:	6878      	ldr	r0, [r7, #4]
 801b5c0:	f7ff ffa0 	bl	801b504 <_ZSt7forwardI13mult_operatorEOT_RNSt16remove_referenceIS1_E4typeE>
 801b5c4:	4603      	mov	r3, r0
 801b5c6:	461a      	mov	r2, r3
 801b5c8:	4629      	mov	r1, r5
 801b5ca:	4620      	mov	r0, r4
 801b5cc:	f7ff ffa5 	bl	801b51a <_ZNSt16allocator_traitsISaI13mult_operatorEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_>
	  __new_finish = pointer();
 801b5d0:	2300      	movs	r3, #0
 801b5d2:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__old_start, __position.base(),
 801b5d4:	f107 0308 	add.w	r3, r7, #8
 801b5d8:	4618      	mov	r0, r3
 801b5da:	f000 fd12 	bl	801c002 <_ZNK9__gnu_cxx17__normal_iteratorIP13mult_operatorSt6vectorIS1_SaIS1_EEE4baseEv>
 801b5de:	4603      	mov	r3, r0
 801b5e0:	681c      	ldr	r4, [r3, #0]
					 __new_start, _M_get_Tp_allocator());
 801b5e2:	68fb      	ldr	r3, [r7, #12]
 801b5e4:	4618      	mov	r0, r3
 801b5e6:	f7ef f8fd 	bl	800a7e4 <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE19_M_get_Tp_allocatorEv>
 801b5ea:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__old_start, __position.base(),
 801b5ec:	69fa      	ldr	r2, [r7, #28]
 801b5ee:	4621      	mov	r1, r4
 801b5f0:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 801b5f2:	f000 fcf2 	bl	801bfda <_ZNSt6vectorI13mult_operatorSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_>
 801b5f6:	61b8      	str	r0, [r7, #24]
	      ++__new_finish;
 801b5f8:	69bb      	ldr	r3, [r7, #24]
 801b5fa:	3301      	adds	r3, #1
 801b5fc:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 801b5fe:	f107 0308 	add.w	r3, r7, #8
 801b602:	4618      	mov	r0, r3
 801b604:	f000 fcfd 	bl	801c002 <_ZNK9__gnu_cxx17__normal_iteratorIP13mult_operatorSt6vectorIS1_SaIS1_EEE4baseEv>
 801b608:	4603      	mov	r3, r0
 801b60a:	681c      	ldr	r4, [r3, #0]
					 __new_finish, _M_get_Tp_allocator());
 801b60c:	68fb      	ldr	r3, [r7, #12]
 801b60e:	4618      	mov	r0, r3
 801b610:	f7ef f8e8 	bl	800a7e4 <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE19_M_get_Tp_allocatorEv>
 801b614:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 801b616:	69ba      	ldr	r2, [r7, #24]
 801b618:	6a79      	ldr	r1, [r7, #36]	; 0x24
 801b61a:	4620      	mov	r0, r4
 801b61c:	f000 fcdd 	bl	801bfda <_ZNSt6vectorI13mult_operatorSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_>
 801b620:	61b8      	str	r0, [r7, #24]
      _M_deallocate(__old_start,
 801b622:	68f8      	ldr	r0, [r7, #12]
		    this->_M_impl._M_end_of_storage - __old_start);
 801b624:	68fb      	ldr	r3, [r7, #12]
 801b626:	689a      	ldr	r2, [r3, #8]
 801b628:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801b62a:	1ad3      	subs	r3, r2, r3
      _M_deallocate(__old_start,
 801b62c:	461a      	mov	r2, r3
 801b62e:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 801b630:	f7ef fe67 	bl	800b302 <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE13_M_deallocateEPS0_j>
      this->_M_impl._M_start = __new_start;
 801b634:	68fb      	ldr	r3, [r7, #12]
 801b636:	69fa      	ldr	r2, [r7, #28]
 801b638:	601a      	str	r2, [r3, #0]
      this->_M_impl._M_finish = __new_finish;
 801b63a:	68fb      	ldr	r3, [r7, #12]
 801b63c:	69ba      	ldr	r2, [r7, #24]
 801b63e:	605a      	str	r2, [r3, #4]
      this->_M_impl._M_end_of_storage = __new_start + __len;
 801b640:	69fa      	ldr	r2, [r7, #28]
 801b642:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801b644:	441a      	add	r2, r3
 801b646:	68fb      	ldr	r3, [r7, #12]
 801b648:	609a      	str	r2, [r3, #8]
    }
 801b64a:	bf00      	nop
 801b64c:	3730      	adds	r7, #48	; 0x30
 801b64e:	46bd      	mov	sp, r7
 801b650:	bdb0      	pop	{r4, r5, r7, pc}
 801b652:	bf00      	nop
 801b654:	08027f90 	.word	0x08027f90

0801b658 <_ZNSt6vectorI13mult_operatorSaIS0_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
 801b658:	b580      	push	{r7, lr}
 801b65a:	b084      	sub	sp, #16
 801b65c:	af00      	add	r7, sp, #0
 801b65e:	6078      	str	r0, [r7, #4]
	return *(end() - 1);
 801b660:	6878      	ldr	r0, [r7, #4]
 801b662:	f7ff ff6d 	bl	801b540 <_ZNSt6vectorI13mult_operatorSaIS0_EE3endEv>
 801b666:	4603      	mov	r3, r0
 801b668:	60fb      	str	r3, [r7, #12]
 801b66a:	f107 030c 	add.w	r3, r7, #12
 801b66e:	2101      	movs	r1, #1
 801b670:	4618      	mov	r0, r3
 801b672:	f000 fcd1 	bl	801c018 <_ZNK9__gnu_cxx17__normal_iteratorIP13mult_operatorSt6vectorIS1_SaIS1_EEEmiEi>
 801b676:	4603      	mov	r3, r0
 801b678:	60bb      	str	r3, [r7, #8]
 801b67a:	f107 0308 	add.w	r3, r7, #8
 801b67e:	4618      	mov	r0, r3
 801b680:	f000 fce2 	bl	801c048 <_ZNK9__gnu_cxx17__normal_iteratorIP13mult_operatorSt6vectorIS1_SaIS1_EEEdeEv>
 801b684:	4603      	mov	r3, r0
      }
 801b686:	4618      	mov	r0, r3
 801b688:	3710      	adds	r7, #16
 801b68a:	46bd      	mov	sp, r7
 801b68c:	bd80      	pop	{r7, pc}

0801b68e <_ZN9__gnu_cxx13new_allocatorIP16Power_expressionEC1Ev>:
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 801b68e:	b480      	push	{r7}
 801b690:	b083      	sub	sp, #12
 801b692:	af00      	add	r7, sp, #0
 801b694:	6078      	str	r0, [r7, #4]
 801b696:	687b      	ldr	r3, [r7, #4]
 801b698:	4618      	mov	r0, r3
 801b69a:	370c      	adds	r7, #12
 801b69c:	46bd      	mov	sp, r7
 801b69e:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b6a2:	4770      	bx	lr

0801b6a4 <_ZN9__gnu_cxx13new_allocatorI13mult_operatorEC1Ev>:
 801b6a4:	b480      	push	{r7}
 801b6a6:	b083      	sub	sp, #12
 801b6a8:	af00      	add	r7, sp, #0
 801b6aa:	6078      	str	r0, [r7, #4]
 801b6ac:	687b      	ldr	r3, [r7, #4]
 801b6ae:	4618      	mov	r0, r3
 801b6b0:	370c      	adds	r7, #12
 801b6b2:	46bd      	mov	sp, r7
 801b6b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b6b8:	4770      	bx	lr

0801b6ba <_ZSt7forwardIP16Power_expressionEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801b6ba:	b480      	push	{r7}
 801b6bc:	b083      	sub	sp, #12
 801b6be:	af00      	add	r7, sp, #0
 801b6c0:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801b6c2:	687b      	ldr	r3, [r7, #4]
 801b6c4:	4618      	mov	r0, r3
 801b6c6:	370c      	adds	r7, #12
 801b6c8:	46bd      	mov	sp, r7
 801b6ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b6ce:	4770      	bx	lr

0801b6d0 <_ZNSt16allocator_traitsISaIP16Power_expressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 801b6d0:	b580      	push	{r7, lr}
 801b6d2:	b084      	sub	sp, #16
 801b6d4:	af00      	add	r7, sp, #0
 801b6d6:	60f8      	str	r0, [r7, #12]
 801b6d8:	60b9      	str	r1, [r7, #8]
 801b6da:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 801b6dc:	6878      	ldr	r0, [r7, #4]
 801b6de:	f7ff ffec 	bl	801b6ba <_ZSt7forwardIP16Power_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801b6e2:	4603      	mov	r3, r0
 801b6e4:	461a      	mov	r2, r3
 801b6e6:	68b9      	ldr	r1, [r7, #8]
 801b6e8:	68f8      	ldr	r0, [r7, #12]
 801b6ea:	f000 fcb9 	bl	801c060 <_ZN9__gnu_cxx13new_allocatorIP16Power_expressionE9constructIS2_JS2_EEEvPT_DpOT0_>
 801b6ee:	bf00      	nop
 801b6f0:	3710      	adds	r7, #16
 801b6f2:	46bd      	mov	sp, r7
 801b6f4:	bd80      	pop	{r7, pc}
	...

0801b6f8 <_ZNSt6vectorIP16Power_expressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
      vector<_Tp, _Alloc>::
 801b6f8:	b5b0      	push	{r4, r5, r7, lr}
 801b6fa:	b08c      	sub	sp, #48	; 0x30
 801b6fc:	af00      	add	r7, sp, #0
 801b6fe:	60f8      	str	r0, [r7, #12]
 801b700:	60b9      	str	r1, [r7, #8]
 801b702:	607a      	str	r2, [r7, #4]
      const size_type __len =
 801b704:	4a39      	ldr	r2, [pc, #228]	; (801b7ec <_ZNSt6vectorIP16Power_expressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xf4>)
 801b706:	2101      	movs	r1, #1
 801b708:	68f8      	ldr	r0, [r7, #12]
 801b70a:	f000 fcbf 	bl	801c08c <_ZNKSt6vectorIP16Power_expressionSaIS1_EE12_M_check_lenEjPKc>
 801b70e:	62f8      	str	r0, [r7, #44]	; 0x2c
      pointer __old_start = this->_M_impl._M_start;
 801b710:	68fb      	ldr	r3, [r7, #12]
 801b712:	681b      	ldr	r3, [r3, #0]
 801b714:	62bb      	str	r3, [r7, #40]	; 0x28
      pointer __old_finish = this->_M_impl._M_finish;
 801b716:	68fb      	ldr	r3, [r7, #12]
 801b718:	685b      	ldr	r3, [r3, #4]
 801b71a:	627b      	str	r3, [r7, #36]	; 0x24
      const size_type __elems_before = __position - begin();
 801b71c:	68f8      	ldr	r0, [r7, #12]
 801b71e:	f7ee fc85 	bl	800a02c <_ZNSt6vectorIP16Power_expressionSaIS1_EE5beginEv>
 801b722:	4603      	mov	r3, r0
 801b724:	617b      	str	r3, [r7, #20]
 801b726:	f107 0214 	add.w	r2, r7, #20
 801b72a:	f107 0308 	add.w	r3, r7, #8
 801b72e:	4611      	mov	r1, r2
 801b730:	4618      	mov	r0, r3
 801b732:	f000 fcf2 	bl	801c11a <_ZN9__gnu_cxxmiIPP16Power_expressionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
 801b736:	4603      	mov	r3, r0
 801b738:	623b      	str	r3, [r7, #32]
      pointer __new_start(this->_M_allocate(__len));
 801b73a:	68fb      	ldr	r3, [r7, #12]
 801b73c:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 801b73e:	4618      	mov	r0, r3
 801b740:	f000 fd00 	bl	801c144 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE11_M_allocateEj>
 801b744:	61f8      	str	r0, [r7, #28]
      pointer __new_finish(__new_start);
 801b746:	69fb      	ldr	r3, [r7, #28]
 801b748:	61bb      	str	r3, [r7, #24]
	  _Alloc_traits::construct(this->_M_impl,
 801b74a:	68fc      	ldr	r4, [r7, #12]
				   __new_start + __elems_before,
 801b74c:	6a3b      	ldr	r3, [r7, #32]
 801b74e:	009b      	lsls	r3, r3, #2
	  _Alloc_traits::construct(this->_M_impl,
 801b750:	69fa      	ldr	r2, [r7, #28]
 801b752:	18d5      	adds	r5, r2, r3
 801b754:	6878      	ldr	r0, [r7, #4]
 801b756:	f7ff ffb0 	bl	801b6ba <_ZSt7forwardIP16Power_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801b75a:	4603      	mov	r3, r0
 801b75c:	461a      	mov	r2, r3
 801b75e:	4629      	mov	r1, r5
 801b760:	4620      	mov	r0, r4
 801b762:	f7ff ffb5 	bl	801b6d0 <_ZNSt16allocator_traitsISaIP16Power_expressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	  __new_finish = pointer();
 801b766:	2300      	movs	r3, #0
 801b768:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__old_start, __position.base(),
 801b76a:	f107 0308 	add.w	r3, r7, #8
 801b76e:	4618      	mov	r0, r3
 801b770:	f7ef f861 	bl	800a836 <_ZNK9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801b774:	4603      	mov	r3, r0
 801b776:	681c      	ldr	r4, [r3, #0]
					 __new_start, _M_get_Tp_allocator());
 801b778:	68fb      	ldr	r3, [r7, #12]
 801b77a:	4618      	mov	r0, r3
 801b77c:	f7ee fff5 	bl	800a76a <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 801b780:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__old_start, __position.base(),
 801b782:	69fa      	ldr	r2, [r7, #28]
 801b784:	4621      	mov	r1, r4
 801b786:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 801b788:	f000 fcf0 	bl	801c16c <_ZNSt6vectorIP16Power_expressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 801b78c:	61b8      	str	r0, [r7, #24]
	      ++__new_finish;
 801b78e:	69bb      	ldr	r3, [r7, #24]
 801b790:	3304      	adds	r3, #4
 801b792:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 801b794:	f107 0308 	add.w	r3, r7, #8
 801b798:	4618      	mov	r0, r3
 801b79a:	f7ef f84c 	bl	800a836 <_ZNK9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801b79e:	4603      	mov	r3, r0
 801b7a0:	681c      	ldr	r4, [r3, #0]
					 __new_finish, _M_get_Tp_allocator());
 801b7a2:	68fb      	ldr	r3, [r7, #12]
 801b7a4:	4618      	mov	r0, r3
 801b7a6:	f7ee ffe0 	bl	800a76a <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 801b7aa:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 801b7ac:	69ba      	ldr	r2, [r7, #24]
 801b7ae:	6a79      	ldr	r1, [r7, #36]	; 0x24
 801b7b0:	4620      	mov	r0, r4
 801b7b2:	f000 fcdb 	bl	801c16c <_ZNSt6vectorIP16Power_expressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 801b7b6:	61b8      	str	r0, [r7, #24]
      _M_deallocate(__old_start,
 801b7b8:	68f8      	ldr	r0, [r7, #12]
		    this->_M_impl._M_end_of_storage - __old_start);
 801b7ba:	68fb      	ldr	r3, [r7, #12]
 801b7bc:	689a      	ldr	r2, [r3, #8]
 801b7be:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801b7c0:	1ad3      	subs	r3, r2, r3
 801b7c2:	109b      	asrs	r3, r3, #2
      _M_deallocate(__old_start,
 801b7c4:	461a      	mov	r2, r3
 801b7c6:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 801b7c8:	f7ef fd6f 	bl	800b2aa <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE13_M_deallocateEPS1_j>
      this->_M_impl._M_start = __new_start;
 801b7cc:	68fb      	ldr	r3, [r7, #12]
 801b7ce:	69fa      	ldr	r2, [r7, #28]
 801b7d0:	601a      	str	r2, [r3, #0]
      this->_M_impl._M_finish = __new_finish;
 801b7d2:	68fb      	ldr	r3, [r7, #12]
 801b7d4:	69ba      	ldr	r2, [r7, #24]
 801b7d6:	605a      	str	r2, [r3, #4]
      this->_M_impl._M_end_of_storage = __new_start + __len;
 801b7d8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801b7da:	009b      	lsls	r3, r3, #2
 801b7dc:	69fa      	ldr	r2, [r7, #28]
 801b7de:	441a      	add	r2, r3
 801b7e0:	68fb      	ldr	r3, [r7, #12]
 801b7e2:	609a      	str	r2, [r3, #8]
    }
 801b7e4:	bf00      	nop
 801b7e6:	3730      	adds	r7, #48	; 0x30
 801b7e8:	46bd      	mov	sp, r7
 801b7ea:	bdb0      	pop	{r4, r5, r7, pc}
 801b7ec:	08027f90 	.word	0x08027f90

0801b7f0 <_ZNSt6vectorIP16Power_expressionSaIS1_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
 801b7f0:	b580      	push	{r7, lr}
 801b7f2:	b084      	sub	sp, #16
 801b7f4:	af00      	add	r7, sp, #0
 801b7f6:	6078      	str	r0, [r7, #4]
	return *(end() - 1);
 801b7f8:	6878      	ldr	r0, [r7, #4]
 801b7fa:	f7ee fc27 	bl	800a04c <_ZNSt6vectorIP16Power_expressionSaIS1_EE3endEv>
 801b7fe:	4603      	mov	r3, r0
 801b800:	60fb      	str	r3, [r7, #12]
 801b802:	f107 030c 	add.w	r3, r7, #12
 801b806:	2101      	movs	r1, #1
 801b808:	4618      	mov	r0, r3
 801b80a:	f000 fcc3 	bl	801c194 <_ZNK9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEEmiEi>
 801b80e:	4603      	mov	r3, r0
 801b810:	60bb      	str	r3, [r7, #8]
 801b812:	f107 0308 	add.w	r3, r7, #8
 801b816:	4618      	mov	r0, r3
 801b818:	f7ee fc51 	bl	800a0be <_ZNK9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEEdeEv>
 801b81c:	4603      	mov	r3, r0
      }
 801b81e:	4618      	mov	r0, r3
 801b820:	3710      	adds	r7, #16
 801b822:	46bd      	mov	sp, r7
 801b824:	bd80      	pop	{r7, pc}

0801b826 <_ZSt7forwardI12sum_operatorEOT_RNSt16remove_referenceIS1_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801b826:	b480      	push	{r7}
 801b828:	b083      	sub	sp, #12
 801b82a:	af00      	add	r7, sp, #0
 801b82c:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801b82e:	687b      	ldr	r3, [r7, #4]
 801b830:	4618      	mov	r0, r3
 801b832:	370c      	adds	r7, #12
 801b834:	46bd      	mov	sp, r7
 801b836:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b83a:	4770      	bx	lr

0801b83c <_ZNSt16allocator_traitsISaI12sum_operatorEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 801b83c:	b580      	push	{r7, lr}
 801b83e:	b084      	sub	sp, #16
 801b840:	af00      	add	r7, sp, #0
 801b842:	60f8      	str	r0, [r7, #12]
 801b844:	60b9      	str	r1, [r7, #8]
 801b846:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 801b848:	6878      	ldr	r0, [r7, #4]
 801b84a:	f7ff ffec 	bl	801b826 <_ZSt7forwardI12sum_operatorEOT_RNSt16remove_referenceIS1_E4typeE>
 801b84e:	4603      	mov	r3, r0
 801b850:	461a      	mov	r2, r3
 801b852:	68b9      	ldr	r1, [r7, #8]
 801b854:	68f8      	ldr	r0, [r7, #12]
 801b856:	f000 fcb6 	bl	801c1c6 <_ZN9__gnu_cxx13new_allocatorI12sum_operatorE9constructIS1_JS1_EEEvPT_DpOT0_>
 801b85a:	bf00      	nop
 801b85c:	3710      	adds	r7, #16
 801b85e:	46bd      	mov	sp, r7
 801b860:	bd80      	pop	{r7, pc}

0801b862 <_ZNSt6vectorI12sum_operatorSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 801b862:	b580      	push	{r7, lr}
 801b864:	b084      	sub	sp, #16
 801b866:	af00      	add	r7, sp, #0
 801b868:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_finish); }
 801b86a:	687b      	ldr	r3, [r7, #4]
 801b86c:	1d1a      	adds	r2, r3, #4
 801b86e:	f107 030c 	add.w	r3, r7, #12
 801b872:	4611      	mov	r1, r2
 801b874:	4618      	mov	r0, r3
 801b876:	f000 fcbd 	bl	801c1f4 <_ZN9__gnu_cxx17__normal_iteratorIP12sum_operatorSt6vectorIS1_SaIS1_EEEC1ERKS2_>
 801b87a:	68fb      	ldr	r3, [r7, #12]
 801b87c:	4618      	mov	r0, r3
 801b87e:	3710      	adds	r7, #16
 801b880:	46bd      	mov	sp, r7
 801b882:	bd80      	pop	{r7, pc}

0801b884 <_ZNSt6vectorI12sum_operatorSaIS0_EE17_M_realloc_insertIJS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_>:
      vector<_Tp, _Alloc>::
 801b884:	b5b0      	push	{r4, r5, r7, lr}
 801b886:	b08c      	sub	sp, #48	; 0x30
 801b888:	af00      	add	r7, sp, #0
 801b88a:	60f8      	str	r0, [r7, #12]
 801b88c:	60b9      	str	r1, [r7, #8]
 801b88e:	607a      	str	r2, [r7, #4]
      const size_type __len =
 801b890:	4a38      	ldr	r2, [pc, #224]	; (801b974 <_ZNSt6vectorI12sum_operatorSaIS0_EE17_M_realloc_insertIJS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_+0xf0>)
 801b892:	2101      	movs	r1, #1
 801b894:	68f8      	ldr	r0, [r7, #12]
 801b896:	f000 fcbd 	bl	801c214 <_ZNKSt6vectorI12sum_operatorSaIS0_EE12_M_check_lenEjPKc>
 801b89a:	62f8      	str	r0, [r7, #44]	; 0x2c
      pointer __old_start = this->_M_impl._M_start;
 801b89c:	68fb      	ldr	r3, [r7, #12]
 801b89e:	681b      	ldr	r3, [r3, #0]
 801b8a0:	62bb      	str	r3, [r7, #40]	; 0x28
      pointer __old_finish = this->_M_impl._M_finish;
 801b8a2:	68fb      	ldr	r3, [r7, #12]
 801b8a4:	685b      	ldr	r3, [r3, #4]
 801b8a6:	627b      	str	r3, [r7, #36]	; 0x24
      const size_type __elems_before = __position - begin();
 801b8a8:	68f8      	ldr	r0, [r7, #12]
 801b8aa:	f000 fcfa 	bl	801c2a2 <_ZNSt6vectorI12sum_operatorSaIS0_EE5beginEv>
 801b8ae:	4603      	mov	r3, r0
 801b8b0:	617b      	str	r3, [r7, #20]
 801b8b2:	f107 0214 	add.w	r2, r7, #20
 801b8b6:	f107 0308 	add.w	r3, r7, #8
 801b8ba:	4611      	mov	r1, r2
 801b8bc:	4618      	mov	r0, r3
 801b8be:	f000 fd00 	bl	801c2c2 <_ZN9__gnu_cxxmiIP12sum_operatorSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_>
 801b8c2:	4603      	mov	r3, r0
 801b8c4:	623b      	str	r3, [r7, #32]
      pointer __new_start(this->_M_allocate(__len));
 801b8c6:	68fb      	ldr	r3, [r7, #12]
 801b8c8:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 801b8ca:	4618      	mov	r0, r3
 801b8cc:	f000 fd0d 	bl	801c2ea <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE11_M_allocateEj>
 801b8d0:	61f8      	str	r0, [r7, #28]
      pointer __new_finish(__new_start);
 801b8d2:	69fb      	ldr	r3, [r7, #28]
 801b8d4:	61bb      	str	r3, [r7, #24]
	  _Alloc_traits::construct(this->_M_impl,
 801b8d6:	68fc      	ldr	r4, [r7, #12]
 801b8d8:	69fa      	ldr	r2, [r7, #28]
 801b8da:	6a3b      	ldr	r3, [r7, #32]
 801b8dc:	18d5      	adds	r5, r2, r3
 801b8de:	6878      	ldr	r0, [r7, #4]
 801b8e0:	f7ff ffa1 	bl	801b826 <_ZSt7forwardI12sum_operatorEOT_RNSt16remove_referenceIS1_E4typeE>
 801b8e4:	4603      	mov	r3, r0
 801b8e6:	461a      	mov	r2, r3
 801b8e8:	4629      	mov	r1, r5
 801b8ea:	4620      	mov	r0, r4
 801b8ec:	f7ff ffa6 	bl	801b83c <_ZNSt16allocator_traitsISaI12sum_operatorEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_>
	  __new_finish = pointer();
 801b8f0:	2300      	movs	r3, #0
 801b8f2:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__old_start, __position.base(),
 801b8f4:	f107 0308 	add.w	r3, r7, #8
 801b8f8:	4618      	mov	r0, r3
 801b8fa:	f000 fd1e 	bl	801c33a <_ZNK9__gnu_cxx17__normal_iteratorIP12sum_operatorSt6vectorIS1_SaIS1_EEE4baseEv>
 801b8fe:	4603      	mov	r3, r0
 801b900:	681c      	ldr	r4, [r3, #0]
					 __new_start, _M_get_Tp_allocator());
 801b902:	68fb      	ldr	r3, [r7, #12]
 801b904:	4618      	mov	r0, r3
 801b906:	f7ef f803 	bl	800a910 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE19_M_get_Tp_allocatorEv>
 801b90a:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__old_start, __position.base(),
 801b90c:	69fa      	ldr	r2, [r7, #28]
 801b90e:	4621      	mov	r1, r4
 801b910:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 801b912:	f000 fcfe 	bl	801c312 <_ZNSt6vectorI12sum_operatorSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_>
 801b916:	61b8      	str	r0, [r7, #24]
	      ++__new_finish;
 801b918:	69bb      	ldr	r3, [r7, #24]
 801b91a:	3301      	adds	r3, #1
 801b91c:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 801b91e:	f107 0308 	add.w	r3, r7, #8
 801b922:	4618      	mov	r0, r3
 801b924:	f000 fd09 	bl	801c33a <_ZNK9__gnu_cxx17__normal_iteratorIP12sum_operatorSt6vectorIS1_SaIS1_EEE4baseEv>
 801b928:	4603      	mov	r3, r0
 801b92a:	681c      	ldr	r4, [r3, #0]
					 __new_finish, _M_get_Tp_allocator());
 801b92c:	68fb      	ldr	r3, [r7, #12]
 801b92e:	4618      	mov	r0, r3
 801b930:	f7ee ffee 	bl	800a910 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE19_M_get_Tp_allocatorEv>
 801b934:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 801b936:	69ba      	ldr	r2, [r7, #24]
 801b938:	6a79      	ldr	r1, [r7, #36]	; 0x24
 801b93a:	4620      	mov	r0, r4
 801b93c:	f000 fce9 	bl	801c312 <_ZNSt6vectorI12sum_operatorSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_>
 801b940:	61b8      	str	r0, [r7, #24]
      _M_deallocate(__old_start,
 801b942:	68f8      	ldr	r0, [r7, #12]
		    this->_M_impl._M_end_of_storage - __old_start);
 801b944:	68fb      	ldr	r3, [r7, #12]
 801b946:	689a      	ldr	r2, [r3, #8]
 801b948:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801b94a:	1ad3      	subs	r3, r2, r3
      _M_deallocate(__old_start,
 801b94c:	461a      	mov	r2, r3
 801b94e:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 801b950:	f7ef fd2f 	bl	800b3b2 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE13_M_deallocateEPS0_j>
      this->_M_impl._M_start = __new_start;
 801b954:	68fb      	ldr	r3, [r7, #12]
 801b956:	69fa      	ldr	r2, [r7, #28]
 801b958:	601a      	str	r2, [r3, #0]
      this->_M_impl._M_finish = __new_finish;
 801b95a:	68fb      	ldr	r3, [r7, #12]
 801b95c:	69ba      	ldr	r2, [r7, #24]
 801b95e:	605a      	str	r2, [r3, #4]
      this->_M_impl._M_end_of_storage = __new_start + __len;
 801b960:	69fa      	ldr	r2, [r7, #28]
 801b962:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801b964:	441a      	add	r2, r3
 801b966:	68fb      	ldr	r3, [r7, #12]
 801b968:	609a      	str	r2, [r3, #8]
    }
 801b96a:	bf00      	nop
 801b96c:	3730      	adds	r7, #48	; 0x30
 801b96e:	46bd      	mov	sp, r7
 801b970:	bdb0      	pop	{r4, r5, r7, pc}
 801b972:	bf00      	nop
 801b974:	08027f90 	.word	0x08027f90

0801b978 <_ZNSt6vectorI12sum_operatorSaIS0_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
 801b978:	b580      	push	{r7, lr}
 801b97a:	b084      	sub	sp, #16
 801b97c:	af00      	add	r7, sp, #0
 801b97e:	6078      	str	r0, [r7, #4]
	return *(end() - 1);
 801b980:	6878      	ldr	r0, [r7, #4]
 801b982:	f7ff ff6e 	bl	801b862 <_ZNSt6vectorI12sum_operatorSaIS0_EE3endEv>
 801b986:	4603      	mov	r3, r0
 801b988:	60fb      	str	r3, [r7, #12]
 801b98a:	f107 030c 	add.w	r3, r7, #12
 801b98e:	2101      	movs	r1, #1
 801b990:	4618      	mov	r0, r3
 801b992:	f000 fcdd 	bl	801c350 <_ZNK9__gnu_cxx17__normal_iteratorIP12sum_operatorSt6vectorIS1_SaIS1_EEEmiEi>
 801b996:	4603      	mov	r3, r0
 801b998:	60bb      	str	r3, [r7, #8]
 801b99a:	f107 0308 	add.w	r3, r7, #8
 801b99e:	4618      	mov	r0, r3
 801b9a0:	f000 fcee 	bl	801c380 <_ZNK9__gnu_cxx17__normal_iteratorIP12sum_operatorSt6vectorIS1_SaIS1_EEEdeEv>
 801b9a4:	4603      	mov	r3, r0
      }
 801b9a6:	4618      	mov	r0, r3
 801b9a8:	3710      	adds	r7, #16
 801b9aa:	46bd      	mov	sp, r7
 801b9ac:	bd80      	pop	{r7, pc}

0801b9ae <_ZN9__gnu_cxx13new_allocatorIP19Multiply_expressionEC1Ev>:
 801b9ae:	b480      	push	{r7}
 801b9b0:	b083      	sub	sp, #12
 801b9b2:	af00      	add	r7, sp, #0
 801b9b4:	6078      	str	r0, [r7, #4]
 801b9b6:	687b      	ldr	r3, [r7, #4]
 801b9b8:	4618      	mov	r0, r3
 801b9ba:	370c      	adds	r7, #12
 801b9bc:	46bd      	mov	sp, r7
 801b9be:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b9c2:	4770      	bx	lr

0801b9c4 <_ZN9__gnu_cxx13new_allocatorI12sum_operatorEC1Ev>:
 801b9c4:	b480      	push	{r7}
 801b9c6:	b083      	sub	sp, #12
 801b9c8:	af00      	add	r7, sp, #0
 801b9ca:	6078      	str	r0, [r7, #4]
 801b9cc:	687b      	ldr	r3, [r7, #4]
 801b9ce:	4618      	mov	r0, r3
 801b9d0:	370c      	adds	r7, #12
 801b9d2:	46bd      	mov	sp, r7
 801b9d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b9d8:	4770      	bx	lr

0801b9da <_ZSt7forwardIP19Multiply_expressionEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801b9da:	b480      	push	{r7}
 801b9dc:	b083      	sub	sp, #12
 801b9de:	af00      	add	r7, sp, #0
 801b9e0:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801b9e2:	687b      	ldr	r3, [r7, #4]
 801b9e4:	4618      	mov	r0, r3
 801b9e6:	370c      	adds	r7, #12
 801b9e8:	46bd      	mov	sp, r7
 801b9ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b9ee:	4770      	bx	lr

0801b9f0 <_ZNSt16allocator_traitsISaIP19Multiply_expressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 801b9f0:	b580      	push	{r7, lr}
 801b9f2:	b084      	sub	sp, #16
 801b9f4:	af00      	add	r7, sp, #0
 801b9f6:	60f8      	str	r0, [r7, #12]
 801b9f8:	60b9      	str	r1, [r7, #8]
 801b9fa:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 801b9fc:	6878      	ldr	r0, [r7, #4]
 801b9fe:	f7ff ffec 	bl	801b9da <_ZSt7forwardIP19Multiply_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801ba02:	4603      	mov	r3, r0
 801ba04:	461a      	mov	r2, r3
 801ba06:	68b9      	ldr	r1, [r7, #8]
 801ba08:	68f8      	ldr	r0, [r7, #12]
 801ba0a:	f000 fcc5 	bl	801c398 <_ZN9__gnu_cxx13new_allocatorIP19Multiply_expressionE9constructIS2_JS2_EEEvPT_DpOT0_>
 801ba0e:	bf00      	nop
 801ba10:	3710      	adds	r7, #16
 801ba12:	46bd      	mov	sp, r7
 801ba14:	bd80      	pop	{r7, pc}
	...

0801ba18 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
      vector<_Tp, _Alloc>::
 801ba18:	b5b0      	push	{r4, r5, r7, lr}
 801ba1a:	b08c      	sub	sp, #48	; 0x30
 801ba1c:	af00      	add	r7, sp, #0
 801ba1e:	60f8      	str	r0, [r7, #12]
 801ba20:	60b9      	str	r1, [r7, #8]
 801ba22:	607a      	str	r2, [r7, #4]
      const size_type __len =
 801ba24:	4a39      	ldr	r2, [pc, #228]	; (801bb0c <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xf4>)
 801ba26:	2101      	movs	r1, #1
 801ba28:	68f8      	ldr	r0, [r7, #12]
 801ba2a:	f000 fccb 	bl	801c3c4 <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE12_M_check_lenEjPKc>
 801ba2e:	62f8      	str	r0, [r7, #44]	; 0x2c
      pointer __old_start = this->_M_impl._M_start;
 801ba30:	68fb      	ldr	r3, [r7, #12]
 801ba32:	681b      	ldr	r3, [r3, #0]
 801ba34:	62bb      	str	r3, [r7, #40]	; 0x28
      pointer __old_finish = this->_M_impl._M_finish;
 801ba36:	68fb      	ldr	r3, [r7, #12]
 801ba38:	685b      	ldr	r3, [r3, #4]
 801ba3a:	627b      	str	r3, [r7, #36]	; 0x24
      const size_type __elems_before = __position - begin();
 801ba3c:	68f8      	ldr	r0, [r7, #12]
 801ba3e:	f7ee fb80 	bl	800a142 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE5beginEv>
 801ba42:	4603      	mov	r3, r0
 801ba44:	617b      	str	r3, [r7, #20]
 801ba46:	f107 0214 	add.w	r2, r7, #20
 801ba4a:	f107 0308 	add.w	r3, r7, #8
 801ba4e:	4611      	mov	r1, r2
 801ba50:	4618      	mov	r0, r3
 801ba52:	f000 fcfe 	bl	801c452 <_ZN9__gnu_cxxmiIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
 801ba56:	4603      	mov	r3, r0
 801ba58:	623b      	str	r3, [r7, #32]
      pointer __new_start(this->_M_allocate(__len));
 801ba5a:	68fb      	ldr	r3, [r7, #12]
 801ba5c:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 801ba5e:	4618      	mov	r0, r3
 801ba60:	f000 fd0c 	bl	801c47c <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE11_M_allocateEj>
 801ba64:	61f8      	str	r0, [r7, #28]
      pointer __new_finish(__new_start);
 801ba66:	69fb      	ldr	r3, [r7, #28]
 801ba68:	61bb      	str	r3, [r7, #24]
	  _Alloc_traits::construct(this->_M_impl,
 801ba6a:	68fc      	ldr	r4, [r7, #12]
				   __new_start + __elems_before,
 801ba6c:	6a3b      	ldr	r3, [r7, #32]
 801ba6e:	009b      	lsls	r3, r3, #2
	  _Alloc_traits::construct(this->_M_impl,
 801ba70:	69fa      	ldr	r2, [r7, #28]
 801ba72:	18d5      	adds	r5, r2, r3
 801ba74:	6878      	ldr	r0, [r7, #4]
 801ba76:	f7ff ffb0 	bl	801b9da <_ZSt7forwardIP19Multiply_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801ba7a:	4603      	mov	r3, r0
 801ba7c:	461a      	mov	r2, r3
 801ba7e:	4629      	mov	r1, r5
 801ba80:	4620      	mov	r0, r4
 801ba82:	f7ff ffb5 	bl	801b9f0 <_ZNSt16allocator_traitsISaIP19Multiply_expressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	  __new_finish = pointer();
 801ba86:	2300      	movs	r3, #0
 801ba88:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__old_start, __position.base(),
 801ba8a:	f107 0308 	add.w	r3, r7, #8
 801ba8e:	4618      	mov	r0, r3
 801ba90:	f7ee ff67 	bl	800a962 <_ZNK9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801ba94:	4603      	mov	r3, r0
 801ba96:	681c      	ldr	r4, [r3, #0]
					 __new_start, _M_get_Tp_allocator());
 801ba98:	68fb      	ldr	r3, [r7, #12]
 801ba9a:	4618      	mov	r0, r3
 801ba9c:	f7ee fefb 	bl	800a896 <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 801baa0:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__old_start, __position.base(),
 801baa2:	69fa      	ldr	r2, [r7, #28]
 801baa4:	4621      	mov	r1, r4
 801baa6:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 801baa8:	f000 fcfc 	bl	801c4a4 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 801baac:	61b8      	str	r0, [r7, #24]
	      ++__new_finish;
 801baae:	69bb      	ldr	r3, [r7, #24]
 801bab0:	3304      	adds	r3, #4
 801bab2:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 801bab4:	f107 0308 	add.w	r3, r7, #8
 801bab8:	4618      	mov	r0, r3
 801baba:	f7ee ff52 	bl	800a962 <_ZNK9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801babe:	4603      	mov	r3, r0
 801bac0:	681c      	ldr	r4, [r3, #0]
					 __new_finish, _M_get_Tp_allocator());
 801bac2:	68fb      	ldr	r3, [r7, #12]
 801bac4:	4618      	mov	r0, r3
 801bac6:	f7ee fee6 	bl	800a896 <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 801baca:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 801bacc:	69ba      	ldr	r2, [r7, #24]
 801bace:	6a79      	ldr	r1, [r7, #36]	; 0x24
 801bad0:	4620      	mov	r0, r4
 801bad2:	f000 fce7 	bl	801c4a4 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 801bad6:	61b8      	str	r0, [r7, #24]
      _M_deallocate(__old_start,
 801bad8:	68f8      	ldr	r0, [r7, #12]
		    this->_M_impl._M_end_of_storage - __old_start);
 801bada:	68fb      	ldr	r3, [r7, #12]
 801badc:	689a      	ldr	r2, [r3, #8]
 801bade:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801bae0:	1ad3      	subs	r3, r2, r3
 801bae2:	109b      	asrs	r3, r3, #2
      _M_deallocate(__old_start,
 801bae4:	461a      	mov	r2, r3
 801bae6:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 801bae8:	f7ef fc37 	bl	800b35a <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE13_M_deallocateEPS1_j>
      this->_M_impl._M_start = __new_start;
 801baec:	68fb      	ldr	r3, [r7, #12]
 801baee:	69fa      	ldr	r2, [r7, #28]
 801baf0:	601a      	str	r2, [r3, #0]
      this->_M_impl._M_finish = __new_finish;
 801baf2:	68fb      	ldr	r3, [r7, #12]
 801baf4:	69ba      	ldr	r2, [r7, #24]
 801baf6:	605a      	str	r2, [r3, #4]
      this->_M_impl._M_end_of_storage = __new_start + __len;
 801baf8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801bafa:	009b      	lsls	r3, r3, #2
 801bafc:	69fa      	ldr	r2, [r7, #28]
 801bafe:	441a      	add	r2, r3
 801bb00:	68fb      	ldr	r3, [r7, #12]
 801bb02:	609a      	str	r2, [r3, #8]
    }
 801bb04:	bf00      	nop
 801bb06:	3730      	adds	r7, #48	; 0x30
 801bb08:	46bd      	mov	sp, r7
 801bb0a:	bdb0      	pop	{r4, r5, r7, pc}
 801bb0c:	08027f90 	.word	0x08027f90

0801bb10 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
 801bb10:	b580      	push	{r7, lr}
 801bb12:	b084      	sub	sp, #16
 801bb14:	af00      	add	r7, sp, #0
 801bb16:	6078      	str	r0, [r7, #4]
	return *(end() - 1);
 801bb18:	6878      	ldr	r0, [r7, #4]
 801bb1a:	f7ee fb22 	bl	800a162 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE3endEv>
 801bb1e:	4603      	mov	r3, r0
 801bb20:	60fb      	str	r3, [r7, #12]
 801bb22:	f107 030c 	add.w	r3, r7, #12
 801bb26:	2101      	movs	r1, #1
 801bb28:	4618      	mov	r0, r3
 801bb2a:	f000 fccf 	bl	801c4cc <_ZNK9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEmiEi>
 801bb2e:	4603      	mov	r3, r0
 801bb30:	60bb      	str	r3, [r7, #8]
 801bb32:	f107 0308 	add.w	r3, r7, #8
 801bb36:	4618      	mov	r0, r3
 801bb38:	f7ee fb4c 	bl	800a1d4 <_ZNK9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEdeEv>
 801bb3c:	4603      	mov	r3, r0
      }
 801bb3e:	4618      	mov	r0, r3
 801bb40:	3710      	adds	r7, #16
 801bb42:	46bd      	mov	sp, r7
 801bb44:	bd80      	pop	{r7, pc}

0801bb46 <_ZN9__gnu_cxx13new_allocatorIP18Compare_expressionEC1Ev>:
 801bb46:	b480      	push	{r7}
 801bb48:	b083      	sub	sp, #12
 801bb4a:	af00      	add	r7, sp, #0
 801bb4c:	6078      	str	r0, [r7, #4]
 801bb4e:	687b      	ldr	r3, [r7, #4]
 801bb50:	4618      	mov	r0, r3
 801bb52:	370c      	adds	r7, #12
 801bb54:	46bd      	mov	sp, r7
 801bb56:	f85d 7b04 	ldr.w	r7, [sp], #4
 801bb5a:	4770      	bx	lr

0801bb5c <_ZSt7forwardIP18Compare_expressionEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801bb5c:	b480      	push	{r7}
 801bb5e:	b083      	sub	sp, #12
 801bb60:	af00      	add	r7, sp, #0
 801bb62:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801bb64:	687b      	ldr	r3, [r7, #4]
 801bb66:	4618      	mov	r0, r3
 801bb68:	370c      	adds	r7, #12
 801bb6a:	46bd      	mov	sp, r7
 801bb6c:	f85d 7b04 	ldr.w	r7, [sp], #4
 801bb70:	4770      	bx	lr

0801bb72 <_ZNSt16allocator_traitsISaIP18Compare_expressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 801bb72:	b580      	push	{r7, lr}
 801bb74:	b084      	sub	sp, #16
 801bb76:	af00      	add	r7, sp, #0
 801bb78:	60f8      	str	r0, [r7, #12]
 801bb7a:	60b9      	str	r1, [r7, #8]
 801bb7c:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 801bb7e:	6878      	ldr	r0, [r7, #4]
 801bb80:	f7ff ffec 	bl	801bb5c <_ZSt7forwardIP18Compare_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801bb84:	4603      	mov	r3, r0
 801bb86:	461a      	mov	r2, r3
 801bb88:	68b9      	ldr	r1, [r7, #8]
 801bb8a:	68f8      	ldr	r0, [r7, #12]
 801bb8c:	f000 fcb7 	bl	801c4fe <_ZN9__gnu_cxx13new_allocatorIP18Compare_expressionE9constructIS2_JS2_EEEvPT_DpOT0_>
 801bb90:	bf00      	nop
 801bb92:	3710      	adds	r7, #16
 801bb94:	46bd      	mov	sp, r7
 801bb96:	bd80      	pop	{r7, pc}

0801bb98 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
      vector<_Tp, _Alloc>::
 801bb98:	b5b0      	push	{r4, r5, r7, lr}
 801bb9a:	b08c      	sub	sp, #48	; 0x30
 801bb9c:	af00      	add	r7, sp, #0
 801bb9e:	60f8      	str	r0, [r7, #12]
 801bba0:	60b9      	str	r1, [r7, #8]
 801bba2:	607a      	str	r2, [r7, #4]
      const size_type __len =
 801bba4:	4a39      	ldr	r2, [pc, #228]	; (801bc8c <_ZNSt6vectorIP18Compare_expressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xf4>)
 801bba6:	2101      	movs	r1, #1
 801bba8:	68f8      	ldr	r0, [r7, #12]
 801bbaa:	f000 fcbe 	bl	801c52a <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE12_M_check_lenEjPKc>
 801bbae:	62f8      	str	r0, [r7, #44]	; 0x2c
      pointer __old_start = this->_M_impl._M_start;
 801bbb0:	68fb      	ldr	r3, [r7, #12]
 801bbb2:	681b      	ldr	r3, [r3, #0]
 801bbb4:	62bb      	str	r3, [r7, #40]	; 0x28
      pointer __old_finish = this->_M_impl._M_finish;
 801bbb6:	68fb      	ldr	r3, [r7, #12]
 801bbb8:	685b      	ldr	r3, [r3, #4]
 801bbba:	627b      	str	r3, [r7, #36]	; 0x24
      const size_type __elems_before = __position - begin();
 801bbbc:	68f8      	ldr	r0, [r7, #12]
 801bbbe:	f7ee fb30 	bl	800a222 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE5beginEv>
 801bbc2:	4603      	mov	r3, r0
 801bbc4:	617b      	str	r3, [r7, #20]
 801bbc6:	f107 0214 	add.w	r2, r7, #20
 801bbca:	f107 0308 	add.w	r3, r7, #8
 801bbce:	4611      	mov	r1, r2
 801bbd0:	4618      	mov	r0, r3
 801bbd2:	f000 fcf1 	bl	801c5b8 <_ZN9__gnu_cxxmiIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
 801bbd6:	4603      	mov	r3, r0
 801bbd8:	623b      	str	r3, [r7, #32]
      pointer __new_start(this->_M_allocate(__len));
 801bbda:	68fb      	ldr	r3, [r7, #12]
 801bbdc:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 801bbde:	4618      	mov	r0, r3
 801bbe0:	f000 fcff 	bl	801c5e2 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE11_M_allocateEj>
 801bbe4:	61f8      	str	r0, [r7, #28]
      pointer __new_finish(__new_start);
 801bbe6:	69fb      	ldr	r3, [r7, #28]
 801bbe8:	61bb      	str	r3, [r7, #24]
	  _Alloc_traits::construct(this->_M_impl,
 801bbea:	68fc      	ldr	r4, [r7, #12]
				   __new_start + __elems_before,
 801bbec:	6a3b      	ldr	r3, [r7, #32]
 801bbee:	009b      	lsls	r3, r3, #2
	  _Alloc_traits::construct(this->_M_impl,
 801bbf0:	69fa      	ldr	r2, [r7, #28]
 801bbf2:	18d5      	adds	r5, r2, r3
 801bbf4:	6878      	ldr	r0, [r7, #4]
 801bbf6:	f7ff ffb1 	bl	801bb5c <_ZSt7forwardIP18Compare_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801bbfa:	4603      	mov	r3, r0
 801bbfc:	461a      	mov	r2, r3
 801bbfe:	4629      	mov	r1, r5
 801bc00:	4620      	mov	r0, r4
 801bc02:	f7ff ffb6 	bl	801bb72 <_ZNSt16allocator_traitsISaIP18Compare_expressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	  __new_finish = pointer();
 801bc06:	2300      	movs	r3, #0
 801bc08:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__old_start, __position.base(),
 801bc0a:	f107 0308 	add.w	r3, r7, #8
 801bc0e:	4618      	mov	r0, r3
 801bc10:	f7ee ff00 	bl	800aa14 <_ZNK9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801bc14:	4603      	mov	r3, r0
 801bc16:	681c      	ldr	r4, [r3, #0]
					 __new_start, _M_get_Tp_allocator());
 801bc18:	68fb      	ldr	r3, [r7, #12]
 801bc1a:	4618      	mov	r0, r3
 801bc1c:	f7ee fed1 	bl	800a9c2 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 801bc20:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__old_start, __position.base(),
 801bc22:	69fa      	ldr	r2, [r7, #28]
 801bc24:	4621      	mov	r1, r4
 801bc26:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 801bc28:	f000 fcef 	bl	801c60a <_ZNSt6vectorIP18Compare_expressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 801bc2c:	61b8      	str	r0, [r7, #24]
	      ++__new_finish;
 801bc2e:	69bb      	ldr	r3, [r7, #24]
 801bc30:	3304      	adds	r3, #4
 801bc32:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 801bc34:	f107 0308 	add.w	r3, r7, #8
 801bc38:	4618      	mov	r0, r3
 801bc3a:	f7ee feeb 	bl	800aa14 <_ZNK9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801bc3e:	4603      	mov	r3, r0
 801bc40:	681c      	ldr	r4, [r3, #0]
					 __new_finish, _M_get_Tp_allocator());
 801bc42:	68fb      	ldr	r3, [r7, #12]
 801bc44:	4618      	mov	r0, r3
 801bc46:	f7ee febc 	bl	800a9c2 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 801bc4a:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 801bc4c:	69ba      	ldr	r2, [r7, #24]
 801bc4e:	6a79      	ldr	r1, [r7, #36]	; 0x24
 801bc50:	4620      	mov	r0, r4
 801bc52:	f000 fcda 	bl	801c60a <_ZNSt6vectorIP18Compare_expressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 801bc56:	61b8      	str	r0, [r7, #24]
      _M_deallocate(__old_start,
 801bc58:	68f8      	ldr	r0, [r7, #12]
		    this->_M_impl._M_end_of_storage - __old_start);
 801bc5a:	68fb      	ldr	r3, [r7, #12]
 801bc5c:	689a      	ldr	r2, [r3, #8]
 801bc5e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801bc60:	1ad3      	subs	r3, r2, r3
 801bc62:	109b      	asrs	r3, r3, #2
      _M_deallocate(__old_start,
 801bc64:	461a      	mov	r2, r3
 801bc66:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 801bc68:	f7ef fbcf 	bl	800b40a <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE13_M_deallocateEPS1_j>
      this->_M_impl._M_start = __new_start;
 801bc6c:	68fb      	ldr	r3, [r7, #12]
 801bc6e:	69fa      	ldr	r2, [r7, #28]
 801bc70:	601a      	str	r2, [r3, #0]
      this->_M_impl._M_finish = __new_finish;
 801bc72:	68fb      	ldr	r3, [r7, #12]
 801bc74:	69ba      	ldr	r2, [r7, #24]
 801bc76:	605a      	str	r2, [r3, #4]
      this->_M_impl._M_end_of_storage = __new_start + __len;
 801bc78:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801bc7a:	009b      	lsls	r3, r3, #2
 801bc7c:	69fa      	ldr	r2, [r7, #28]
 801bc7e:	441a      	add	r2, r3
 801bc80:	68fb      	ldr	r3, [r7, #12]
 801bc82:	609a      	str	r2, [r3, #8]
    }
 801bc84:	bf00      	nop
 801bc86:	3730      	adds	r7, #48	; 0x30
 801bc88:	46bd      	mov	sp, r7
 801bc8a:	bdb0      	pop	{r4, r5, r7, pc}
 801bc8c:	08027f90 	.word	0x08027f90

0801bc90 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
 801bc90:	b580      	push	{r7, lr}
 801bc92:	b084      	sub	sp, #16
 801bc94:	af00      	add	r7, sp, #0
 801bc96:	6078      	str	r0, [r7, #4]
	return *(end() - 1);
 801bc98:	6878      	ldr	r0, [r7, #4]
 801bc9a:	f7ee fad2 	bl	800a242 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE3endEv>
 801bc9e:	4603      	mov	r3, r0
 801bca0:	60fb      	str	r3, [r7, #12]
 801bca2:	f107 030c 	add.w	r3, r7, #12
 801bca6:	2101      	movs	r1, #1
 801bca8:	4618      	mov	r0, r3
 801bcaa:	f000 fcc2 	bl	801c632 <_ZNK9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEmiEi>
 801bcae:	4603      	mov	r3, r0
 801bcb0:	60bb      	str	r3, [r7, #8]
 801bcb2:	f107 0308 	add.w	r3, r7, #8
 801bcb6:	4618      	mov	r0, r3
 801bcb8:	f7ee fafc 	bl	800a2b4 <_ZNK9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEdeEv>
 801bcbc:	4603      	mov	r3, r0
      }
 801bcbe:	4618      	mov	r0, r3
 801bcc0:	3710      	adds	r7, #16
 801bcc2:	46bd      	mov	sp, r7
 801bcc4:	bd80      	pop	{r7, pc}

0801bcc6 <_ZN9__gnu_cxx13new_allocatorIP14And_expressionEC1Ev>:
 801bcc6:	b480      	push	{r7}
 801bcc8:	b083      	sub	sp, #12
 801bcca:	af00      	add	r7, sp, #0
 801bccc:	6078      	str	r0, [r7, #4]
 801bcce:	687b      	ldr	r3, [r7, #4]
 801bcd0:	4618      	mov	r0, r3
 801bcd2:	370c      	adds	r7, #12
 801bcd4:	46bd      	mov	sp, r7
 801bcd6:	f85d 7b04 	ldr.w	r7, [sp], #4
 801bcda:	4770      	bx	lr

0801bcdc <_ZSt7forwardIP14And_expressionEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801bcdc:	b480      	push	{r7}
 801bcde:	b083      	sub	sp, #12
 801bce0:	af00      	add	r7, sp, #0
 801bce2:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801bce4:	687b      	ldr	r3, [r7, #4]
 801bce6:	4618      	mov	r0, r3
 801bce8:	370c      	adds	r7, #12
 801bcea:	46bd      	mov	sp, r7
 801bcec:	f85d 7b04 	ldr.w	r7, [sp], #4
 801bcf0:	4770      	bx	lr

0801bcf2 <_ZNSt16allocator_traitsISaIP14And_expressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 801bcf2:	b580      	push	{r7, lr}
 801bcf4:	b084      	sub	sp, #16
 801bcf6:	af00      	add	r7, sp, #0
 801bcf8:	60f8      	str	r0, [r7, #12]
 801bcfa:	60b9      	str	r1, [r7, #8]
 801bcfc:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 801bcfe:	6878      	ldr	r0, [r7, #4]
 801bd00:	f7ff ffec 	bl	801bcdc <_ZSt7forwardIP14And_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801bd04:	4603      	mov	r3, r0
 801bd06:	461a      	mov	r2, r3
 801bd08:	68b9      	ldr	r1, [r7, #8]
 801bd0a:	68f8      	ldr	r0, [r7, #12]
 801bd0c:	f000 fcaa 	bl	801c664 <_ZN9__gnu_cxx13new_allocatorIP14And_expressionE9constructIS2_JS2_EEEvPT_DpOT0_>
 801bd10:	bf00      	nop
 801bd12:	3710      	adds	r7, #16
 801bd14:	46bd      	mov	sp, r7
 801bd16:	bd80      	pop	{r7, pc}

0801bd18 <_ZNSt6vectorIP14And_expressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
      vector<_Tp, _Alloc>::
 801bd18:	b5b0      	push	{r4, r5, r7, lr}
 801bd1a:	b08c      	sub	sp, #48	; 0x30
 801bd1c:	af00      	add	r7, sp, #0
 801bd1e:	60f8      	str	r0, [r7, #12]
 801bd20:	60b9      	str	r1, [r7, #8]
 801bd22:	607a      	str	r2, [r7, #4]
      const size_type __len =
 801bd24:	4a39      	ldr	r2, [pc, #228]	; (801be0c <_ZNSt6vectorIP14And_expressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xf4>)
 801bd26:	2101      	movs	r1, #1
 801bd28:	68f8      	ldr	r0, [r7, #12]
 801bd2a:	f000 fcb1 	bl	801c690 <_ZNKSt6vectorIP14And_expressionSaIS1_EE12_M_check_lenEjPKc>
 801bd2e:	62f8      	str	r0, [r7, #44]	; 0x2c
      pointer __old_start = this->_M_impl._M_start;
 801bd30:	68fb      	ldr	r3, [r7, #12]
 801bd32:	681b      	ldr	r3, [r3, #0]
 801bd34:	62bb      	str	r3, [r7, #40]	; 0x28
      pointer __old_finish = this->_M_impl._M_finish;
 801bd36:	68fb      	ldr	r3, [r7, #12]
 801bd38:	685b      	ldr	r3, [r3, #4]
 801bd3a:	627b      	str	r3, [r7, #36]	; 0x24
      const size_type __elems_before = __position - begin();
 801bd3c:	68f8      	ldr	r0, [r7, #12]
 801bd3e:	f7ee fae0 	bl	800a302 <_ZNSt6vectorIP14And_expressionSaIS1_EE5beginEv>
 801bd42:	4603      	mov	r3, r0
 801bd44:	617b      	str	r3, [r7, #20]
 801bd46:	f107 0214 	add.w	r2, r7, #20
 801bd4a:	f107 0308 	add.w	r3, r7, #8
 801bd4e:	4611      	mov	r1, r2
 801bd50:	4618      	mov	r0, r3
 801bd52:	f000 fce4 	bl	801c71e <_ZN9__gnu_cxxmiIPP14And_expressionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
 801bd56:	4603      	mov	r3, r0
 801bd58:	623b      	str	r3, [r7, #32]
      pointer __new_start(this->_M_allocate(__len));
 801bd5a:	68fb      	ldr	r3, [r7, #12]
 801bd5c:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 801bd5e:	4618      	mov	r0, r3
 801bd60:	f000 fcf2 	bl	801c748 <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE11_M_allocateEj>
 801bd64:	61f8      	str	r0, [r7, #28]
      pointer __new_finish(__new_start);
 801bd66:	69fb      	ldr	r3, [r7, #28]
 801bd68:	61bb      	str	r3, [r7, #24]
	  _Alloc_traits::construct(this->_M_impl,
 801bd6a:	68fc      	ldr	r4, [r7, #12]
				   __new_start + __elems_before,
 801bd6c:	6a3b      	ldr	r3, [r7, #32]
 801bd6e:	009b      	lsls	r3, r3, #2
	  _Alloc_traits::construct(this->_M_impl,
 801bd70:	69fa      	ldr	r2, [r7, #28]
 801bd72:	18d5      	adds	r5, r2, r3
 801bd74:	6878      	ldr	r0, [r7, #4]
 801bd76:	f7ff ffb1 	bl	801bcdc <_ZSt7forwardIP14And_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801bd7a:	4603      	mov	r3, r0
 801bd7c:	461a      	mov	r2, r3
 801bd7e:	4629      	mov	r1, r5
 801bd80:	4620      	mov	r0, r4
 801bd82:	f7ff ffb6 	bl	801bcf2 <_ZNSt16allocator_traitsISaIP14And_expressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	  __new_finish = pointer();
 801bd86:	2300      	movs	r3, #0
 801bd88:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__old_start, __position.base(),
 801bd8a:	f107 0308 	add.w	r3, r7, #8
 801bd8e:	4618      	mov	r0, r3
 801bd90:	f7ee fe99 	bl	800aac6 <_ZNK9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801bd94:	4603      	mov	r3, r0
 801bd96:	681c      	ldr	r4, [r3, #0]
					 __new_start, _M_get_Tp_allocator());
 801bd98:	68fb      	ldr	r3, [r7, #12]
 801bd9a:	4618      	mov	r0, r3
 801bd9c:	f7ee fe6a 	bl	800aa74 <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 801bda0:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__old_start, __position.base(),
 801bda2:	69fa      	ldr	r2, [r7, #28]
 801bda4:	4621      	mov	r1, r4
 801bda6:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 801bda8:	f000 fce2 	bl	801c770 <_ZNSt6vectorIP14And_expressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 801bdac:	61b8      	str	r0, [r7, #24]
	      ++__new_finish;
 801bdae:	69bb      	ldr	r3, [r7, #24]
 801bdb0:	3304      	adds	r3, #4
 801bdb2:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 801bdb4:	f107 0308 	add.w	r3, r7, #8
 801bdb8:	4618      	mov	r0, r3
 801bdba:	f7ee fe84 	bl	800aac6 <_ZNK9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801bdbe:	4603      	mov	r3, r0
 801bdc0:	681c      	ldr	r4, [r3, #0]
					 __new_finish, _M_get_Tp_allocator());
 801bdc2:	68fb      	ldr	r3, [r7, #12]
 801bdc4:	4618      	mov	r0, r3
 801bdc6:	f7ee fe55 	bl	800aa74 <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 801bdca:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 801bdcc:	69ba      	ldr	r2, [r7, #24]
 801bdce:	6a79      	ldr	r1, [r7, #36]	; 0x24
 801bdd0:	4620      	mov	r0, r4
 801bdd2:	f000 fccd 	bl	801c770 <_ZNSt6vectorIP14And_expressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 801bdd6:	61b8      	str	r0, [r7, #24]
      _M_deallocate(__old_start,
 801bdd8:	68f8      	ldr	r0, [r7, #12]
		    this->_M_impl._M_end_of_storage - __old_start);
 801bdda:	68fb      	ldr	r3, [r7, #12]
 801bddc:	689a      	ldr	r2, [r3, #8]
 801bdde:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801bde0:	1ad3      	subs	r3, r2, r3
 801bde2:	109b      	asrs	r3, r3, #2
      _M_deallocate(__old_start,
 801bde4:	461a      	mov	r2, r3
 801bde6:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 801bde8:	f7ef fb3b 	bl	800b462 <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE13_M_deallocateEPS1_j>
      this->_M_impl._M_start = __new_start;
 801bdec:	68fb      	ldr	r3, [r7, #12]
 801bdee:	69fa      	ldr	r2, [r7, #28]
 801bdf0:	601a      	str	r2, [r3, #0]
      this->_M_impl._M_finish = __new_finish;
 801bdf2:	68fb      	ldr	r3, [r7, #12]
 801bdf4:	69ba      	ldr	r2, [r7, #24]
 801bdf6:	605a      	str	r2, [r3, #4]
      this->_M_impl._M_end_of_storage = __new_start + __len;
 801bdf8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801bdfa:	009b      	lsls	r3, r3, #2
 801bdfc:	69fa      	ldr	r2, [r7, #28]
 801bdfe:	441a      	add	r2, r3
 801be00:	68fb      	ldr	r3, [r7, #12]
 801be02:	609a      	str	r2, [r3, #8]
    }
 801be04:	bf00      	nop
 801be06:	3730      	adds	r7, #48	; 0x30
 801be08:	46bd      	mov	sp, r7
 801be0a:	bdb0      	pop	{r4, r5, r7, pc}
 801be0c:	08027f90 	.word	0x08027f90

0801be10 <_ZNSt6vectorIP14And_expressionSaIS1_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
 801be10:	b580      	push	{r7, lr}
 801be12:	b084      	sub	sp, #16
 801be14:	af00      	add	r7, sp, #0
 801be16:	6078      	str	r0, [r7, #4]
	return *(end() - 1);
 801be18:	6878      	ldr	r0, [r7, #4]
 801be1a:	f7ee fa82 	bl	800a322 <_ZNSt6vectorIP14And_expressionSaIS1_EE3endEv>
 801be1e:	4603      	mov	r3, r0
 801be20:	60fb      	str	r3, [r7, #12]
 801be22:	f107 030c 	add.w	r3, r7, #12
 801be26:	2101      	movs	r1, #1
 801be28:	4618      	mov	r0, r3
 801be2a:	f000 fcb5 	bl	801c798 <_ZNK9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEEmiEi>
 801be2e:	4603      	mov	r3, r0
 801be30:	60bb      	str	r3, [r7, #8]
 801be32:	f107 0308 	add.w	r3, r7, #8
 801be36:	4618      	mov	r0, r3
 801be38:	f7ee faac 	bl	800a394 <_ZNK9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEEdeEv>
 801be3c:	4603      	mov	r3, r0
      }
 801be3e:	4618      	mov	r0, r3
 801be40:	3710      	adds	r7, #16
 801be42:	46bd      	mov	sp, r7
 801be44:	bd80      	pop	{r7, pc}

0801be46 <_ZSt9addressofIP8VariableEPT_RS2_>:
    addressof(_Tp& __r) noexcept
 801be46:	b580      	push	{r7, lr}
 801be48:	b082      	sub	sp, #8
 801be4a:	af00      	add	r7, sp, #0
 801be4c:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 801be4e:	6878      	ldr	r0, [r7, #4]
 801be50:	f7ef fdfe 	bl	800ba50 <_ZSt11__addressofIP8VariableEPT_RS2_>
 801be54:	4603      	mov	r3, r0
 801be56:	4618      	mov	r0, r3
 801be58:	3708      	adds	r7, #8
 801be5a:	46bd      	mov	sp, r7
 801be5c:	bd80      	pop	{r7, pc}

0801be5e <_ZSt9addressofIP10ExpressionEPT_RS2_>:
    addressof(_Tp& __r) noexcept
 801be5e:	b580      	push	{r7, lr}
 801be60:	b082      	sub	sp, #8
 801be62:	af00      	add	r7, sp, #0
 801be64:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 801be66:	6878      	ldr	r0, [r7, #4]
 801be68:	f000 fcaf 	bl	801c7ca <_ZSt11__addressofIP10ExpressionEPT_RS2_>
 801be6c:	4603      	mov	r3, r0
 801be6e:	4618      	mov	r0, r3
 801be70:	3708      	adds	r7, #8
 801be72:	46bd      	mov	sp, r7
 801be74:	bd80      	pop	{r7, pc}

0801be76 <_ZSt9addressofIP17Primal_expressionEPT_RS2_>:
    addressof(_Tp& __r) noexcept
 801be76:	b580      	push	{r7, lr}
 801be78:	b082      	sub	sp, #8
 801be7a:	af00      	add	r7, sp, #0
 801be7c:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 801be7e:	6878      	ldr	r0, [r7, #4]
 801be80:	f000 fcae 	bl	801c7e0 <_ZSt11__addressofIP17Primal_expressionEPT_RS2_>
 801be84:	4603      	mov	r3, r0
 801be86:	4618      	mov	r0, r3
 801be88:	3708      	adds	r7, #8
 801be8a:	46bd      	mov	sp, r7
 801be8c:	bd80      	pop	{r7, pc}

0801be8e <_ZN9__gnu_cxx13new_allocatorI13mult_operatorE9constructIS1_JS1_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 801be8e:	b590      	push	{r4, r7, lr}
 801be90:	b085      	sub	sp, #20
 801be92:	af00      	add	r7, sp, #0
 801be94:	60f8      	str	r0, [r7, #12]
 801be96:	60b9      	str	r1, [r7, #8]
 801be98:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 801be9a:	6878      	ldr	r0, [r7, #4]
 801be9c:	f7ff fb32 	bl	801b504 <_ZSt7forwardI13mult_operatorEOT_RNSt16remove_referenceIS1_E4typeE>
 801bea0:	4603      	mov	r3, r0
 801bea2:	781c      	ldrb	r4, [r3, #0]
 801bea4:	68bb      	ldr	r3, [r7, #8]
 801bea6:	4619      	mov	r1, r3
 801bea8:	2001      	movs	r0, #1
 801beaa:	f7e5 f8d6 	bl	800105a <_ZnwjPv>
 801beae:	4603      	mov	r3, r0
 801beb0:	4622      	mov	r2, r4
 801beb2:	701a      	strb	r2, [r3, #0]
 801beb4:	bf00      	nop
 801beb6:	3714      	adds	r7, #20
 801beb8:	46bd      	mov	sp, r7
 801beba:	bd90      	pop	{r4, r7, pc}

0801bebc <_ZN9__gnu_cxx17__normal_iteratorIP13mult_operatorSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 801bebc:	b480      	push	{r7}
 801bebe:	b083      	sub	sp, #12
 801bec0:	af00      	add	r7, sp, #0
 801bec2:	6078      	str	r0, [r7, #4]
 801bec4:	6039      	str	r1, [r7, #0]
      : _M_current(__i) { }
 801bec6:	683b      	ldr	r3, [r7, #0]
 801bec8:	681a      	ldr	r2, [r3, #0]
 801beca:	687b      	ldr	r3, [r7, #4]
 801becc:	601a      	str	r2, [r3, #0]
 801bece:	687b      	ldr	r3, [r7, #4]
 801bed0:	4618      	mov	r0, r3
 801bed2:	370c      	adds	r7, #12
 801bed4:	46bd      	mov	sp, r7
 801bed6:	f85d 7b04 	ldr.w	r7, [sp], #4
 801beda:	4770      	bx	lr

0801bedc <_ZNKSt6vectorI13mult_operatorSaIS0_EE12_M_check_lenEjPKc>:
      _M_check_len(size_type __n, const char* __s) const
 801bedc:	b590      	push	{r4, r7, lr}
 801bede:	b087      	sub	sp, #28
 801bee0:	af00      	add	r7, sp, #0
 801bee2:	60f8      	str	r0, [r7, #12]
 801bee4:	60b9      	str	r1, [r7, #8]
 801bee6:	607a      	str	r2, [r7, #4]
	if (max_size() - size() < __n)
 801bee8:	68f8      	ldr	r0, [r7, #12]
 801beea:	f000 fc84 	bl	801c7f6 <_ZNKSt6vectorI13mult_operatorSaIS0_EE8max_sizeEv>
 801beee:	4604      	mov	r4, r0
 801bef0:	68f8      	ldr	r0, [r7, #12]
 801bef2:	f7f0 fde9 	bl	800cac8 <_ZNKSt6vectorI13mult_operatorSaIS0_EE4sizeEv>
 801bef6:	4603      	mov	r3, r0
 801bef8:	1ae2      	subs	r2, r4, r3
 801befa:	68bb      	ldr	r3, [r7, #8]
 801befc:	429a      	cmp	r2, r3
 801befe:	bf34      	ite	cc
 801bf00:	2301      	movcc	r3, #1
 801bf02:	2300      	movcs	r3, #0
 801bf04:	b2db      	uxtb	r3, r3
 801bf06:	2b00      	cmp	r3, #0
 801bf08:	d002      	beq.n	801bf10 <_ZNKSt6vectorI13mult_operatorSaIS0_EE12_M_check_lenEjPKc+0x34>
	  __throw_length_error(__N(__s));
 801bf0a:	6878      	ldr	r0, [r7, #4]
 801bf0c:	f006 fd59 	bl	80229c2 <_ZSt20__throw_length_errorPKc>
	const size_type __len = size() + (std::max)(size(), __n);
 801bf10:	68f8      	ldr	r0, [r7, #12]
 801bf12:	f7f0 fdd9 	bl	800cac8 <_ZNKSt6vectorI13mult_operatorSaIS0_EE4sizeEv>
 801bf16:	4604      	mov	r4, r0
 801bf18:	68f8      	ldr	r0, [r7, #12]
 801bf1a:	f7f0 fdd5 	bl	800cac8 <_ZNKSt6vectorI13mult_operatorSaIS0_EE4sizeEv>
 801bf1e:	4603      	mov	r3, r0
 801bf20:	613b      	str	r3, [r7, #16]
 801bf22:	f107 0208 	add.w	r2, r7, #8
 801bf26:	f107 0310 	add.w	r3, r7, #16
 801bf2a:	4611      	mov	r1, r2
 801bf2c:	4618      	mov	r0, r3
 801bf2e:	f7f9 fda2 	bl	8015a76 <_ZSt3maxIjERKT_S2_S2_>
 801bf32:	4603      	mov	r3, r0
 801bf34:	681b      	ldr	r3, [r3, #0]
 801bf36:	4423      	add	r3, r4
 801bf38:	617b      	str	r3, [r7, #20]
	return (__len < size() || __len > max_size()) ? max_size() : __len;
 801bf3a:	68f8      	ldr	r0, [r7, #12]
 801bf3c:	f7f0 fdc4 	bl	800cac8 <_ZNKSt6vectorI13mult_operatorSaIS0_EE4sizeEv>
 801bf40:	4602      	mov	r2, r0
 801bf42:	697b      	ldr	r3, [r7, #20]
 801bf44:	4293      	cmp	r3, r2
 801bf46:	d306      	bcc.n	801bf56 <_ZNKSt6vectorI13mult_operatorSaIS0_EE12_M_check_lenEjPKc+0x7a>
 801bf48:	68f8      	ldr	r0, [r7, #12]
 801bf4a:	f000 fc54 	bl	801c7f6 <_ZNKSt6vectorI13mult_operatorSaIS0_EE8max_sizeEv>
 801bf4e:	4602      	mov	r2, r0
 801bf50:	697b      	ldr	r3, [r7, #20]
 801bf52:	4293      	cmp	r3, r2
 801bf54:	d904      	bls.n	801bf60 <_ZNKSt6vectorI13mult_operatorSaIS0_EE12_M_check_lenEjPKc+0x84>
 801bf56:	68f8      	ldr	r0, [r7, #12]
 801bf58:	f000 fc4d 	bl	801c7f6 <_ZNKSt6vectorI13mult_operatorSaIS0_EE8max_sizeEv>
 801bf5c:	4603      	mov	r3, r0
 801bf5e:	e000      	b.n	801bf62 <_ZNKSt6vectorI13mult_operatorSaIS0_EE12_M_check_lenEjPKc+0x86>
 801bf60:	697b      	ldr	r3, [r7, #20]
      }
 801bf62:	4618      	mov	r0, r3
 801bf64:	371c      	adds	r7, #28
 801bf66:	46bd      	mov	sp, r7
 801bf68:	bd90      	pop	{r4, r7, pc}

0801bf6a <_ZNSt6vectorI13mult_operatorSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 801bf6a:	b580      	push	{r7, lr}
 801bf6c:	b084      	sub	sp, #16
 801bf6e:	af00      	add	r7, sp, #0
 801bf70:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_start); }
 801bf72:	687a      	ldr	r2, [r7, #4]
 801bf74:	f107 030c 	add.w	r3, r7, #12
 801bf78:	4611      	mov	r1, r2
 801bf7a:	4618      	mov	r0, r3
 801bf7c:	f7ff ff9e 	bl	801bebc <_ZN9__gnu_cxx17__normal_iteratorIP13mult_operatorSt6vectorIS1_SaIS1_EEEC1ERKS2_>
 801bf80:	68fb      	ldr	r3, [r7, #12]
 801bf82:	4618      	mov	r0, r3
 801bf84:	3710      	adds	r7, #16
 801bf86:	46bd      	mov	sp, r7
 801bf88:	bd80      	pop	{r7, pc}

0801bf8a <_ZN9__gnu_cxxmiIP13mult_operatorSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_>:
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
 801bf8a:	b590      	push	{r4, r7, lr}
 801bf8c:	b083      	sub	sp, #12
 801bf8e:	af00      	add	r7, sp, #0
 801bf90:	6078      	str	r0, [r7, #4]
 801bf92:	6039      	str	r1, [r7, #0]
    { return __lhs.base() - __rhs.base(); }
 801bf94:	6878      	ldr	r0, [r7, #4]
 801bf96:	f000 f834 	bl	801c002 <_ZNK9__gnu_cxx17__normal_iteratorIP13mult_operatorSt6vectorIS1_SaIS1_EEE4baseEv>
 801bf9a:	4603      	mov	r3, r0
 801bf9c:	681c      	ldr	r4, [r3, #0]
 801bf9e:	6838      	ldr	r0, [r7, #0]
 801bfa0:	f000 f82f 	bl	801c002 <_ZNK9__gnu_cxx17__normal_iteratorIP13mult_operatorSt6vectorIS1_SaIS1_EEE4baseEv>
 801bfa4:	4603      	mov	r3, r0
 801bfa6:	681b      	ldr	r3, [r3, #0]
 801bfa8:	1ae3      	subs	r3, r4, r3
 801bfaa:	4618      	mov	r0, r3
 801bfac:	370c      	adds	r7, #12
 801bfae:	46bd      	mov	sp, r7
 801bfb0:	bd90      	pop	{r4, r7, pc}

0801bfb2 <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE11_M_allocateEj>:
      _M_allocate(size_t __n)
 801bfb2:	b580      	push	{r7, lr}
 801bfb4:	b082      	sub	sp, #8
 801bfb6:	af00      	add	r7, sp, #0
 801bfb8:	6078      	str	r0, [r7, #4]
 801bfba:	6039      	str	r1, [r7, #0]
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 801bfbc:	683b      	ldr	r3, [r7, #0]
 801bfbe:	2b00      	cmp	r3, #0
 801bfc0:	d006      	beq.n	801bfd0 <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE11_M_allocateEj+0x1e>
 801bfc2:	687b      	ldr	r3, [r7, #4]
 801bfc4:	6839      	ldr	r1, [r7, #0]
 801bfc6:	4618      	mov	r0, r3
 801bfc8:	f000 fc26 	bl	801c818 <_ZNSt16allocator_traitsISaI13mult_operatorEE8allocateERS1_j>
 801bfcc:	4603      	mov	r3, r0
 801bfce:	e000      	b.n	801bfd2 <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE11_M_allocateEj+0x20>
 801bfd0:	2300      	movs	r3, #0
      }
 801bfd2:	4618      	mov	r0, r3
 801bfd4:	3708      	adds	r7, #8
 801bfd6:	46bd      	mov	sp, r7
 801bfd8:	bd80      	pop	{r7, pc}

0801bfda <_ZNSt6vectorI13mult_operatorSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
 801bfda:	b590      	push	{r4, r7, lr}
 801bfdc:	b089      	sub	sp, #36	; 0x24
 801bfde:	af02      	add	r7, sp, #8
 801bfe0:	60f8      	str	r0, [r7, #12]
 801bfe2:	60b9      	str	r1, [r7, #8]
 801bfe4:	607a      	str	r2, [r7, #4]
 801bfe6:	603b      	str	r3, [r7, #0]
	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
 801bfe8:	f88d 4000 	strb.w	r4, [sp]
 801bfec:	683b      	ldr	r3, [r7, #0]
 801bfee:	687a      	ldr	r2, [r7, #4]
 801bff0:	68b9      	ldr	r1, [r7, #8]
 801bff2:	68f8      	ldr	r0, [r7, #12]
 801bff4:	f000 fc1f 	bl	801c836 <_ZNSt6vectorI13mult_operatorSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE>
 801bff8:	4603      	mov	r3, r0
      }
 801bffa:	4618      	mov	r0, r3
 801bffc:	371c      	adds	r7, #28
 801bffe:	46bd      	mov	sp, r7
 801c000:	bd90      	pop	{r4, r7, pc}

0801c002 <_ZNK9__gnu_cxx17__normal_iteratorIP13mult_operatorSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
 801c002:	b480      	push	{r7}
 801c004:	b083      	sub	sp, #12
 801c006:	af00      	add	r7, sp, #0
 801c008:	6078      	str	r0, [r7, #4]
      { return _M_current; }
 801c00a:	687b      	ldr	r3, [r7, #4]
 801c00c:	4618      	mov	r0, r3
 801c00e:	370c      	adds	r7, #12
 801c010:	46bd      	mov	sp, r7
 801c012:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c016:	4770      	bx	lr

0801c018 <_ZNK9__gnu_cxx17__normal_iteratorIP13mult_operatorSt6vectorIS1_SaIS1_EEEmiEi>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
 801c018:	b580      	push	{r7, lr}
 801c01a:	b084      	sub	sp, #16
 801c01c:	af00      	add	r7, sp, #0
 801c01e:	6078      	str	r0, [r7, #4]
 801c020:	6039      	str	r1, [r7, #0]
      { return __normal_iterator(_M_current - __n); }
 801c022:	687b      	ldr	r3, [r7, #4]
 801c024:	681a      	ldr	r2, [r3, #0]
 801c026:	683b      	ldr	r3, [r7, #0]
 801c028:	425b      	negs	r3, r3
 801c02a:	4413      	add	r3, r2
 801c02c:	60fb      	str	r3, [r7, #12]
 801c02e:	f107 020c 	add.w	r2, r7, #12
 801c032:	f107 0308 	add.w	r3, r7, #8
 801c036:	4611      	mov	r1, r2
 801c038:	4618      	mov	r0, r3
 801c03a:	f7ff ff3f 	bl	801bebc <_ZN9__gnu_cxx17__normal_iteratorIP13mult_operatorSt6vectorIS1_SaIS1_EEEC1ERKS2_>
 801c03e:	68bb      	ldr	r3, [r7, #8]
 801c040:	4618      	mov	r0, r3
 801c042:	3710      	adds	r7, #16
 801c044:	46bd      	mov	sp, r7
 801c046:	bd80      	pop	{r7, pc}

0801c048 <_ZNK9__gnu_cxx17__normal_iteratorIP13mult_operatorSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
 801c048:	b480      	push	{r7}
 801c04a:	b083      	sub	sp, #12
 801c04c:	af00      	add	r7, sp, #0
 801c04e:	6078      	str	r0, [r7, #4]
      { return *_M_current; }
 801c050:	687b      	ldr	r3, [r7, #4]
 801c052:	681b      	ldr	r3, [r3, #0]
 801c054:	4618      	mov	r0, r3
 801c056:	370c      	adds	r7, #12
 801c058:	46bd      	mov	sp, r7
 801c05a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c05e:	4770      	bx	lr

0801c060 <_ZN9__gnu_cxx13new_allocatorIP16Power_expressionE9constructIS2_JS2_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 801c060:	b590      	push	{r4, r7, lr}
 801c062:	b085      	sub	sp, #20
 801c064:	af00      	add	r7, sp, #0
 801c066:	60f8      	str	r0, [r7, #12]
 801c068:	60b9      	str	r1, [r7, #8]
 801c06a:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 801c06c:	6878      	ldr	r0, [r7, #4]
 801c06e:	f7ff fb24 	bl	801b6ba <_ZSt7forwardIP16Power_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801c072:	4603      	mov	r3, r0
 801c074:	681c      	ldr	r4, [r3, #0]
 801c076:	68bb      	ldr	r3, [r7, #8]
 801c078:	4619      	mov	r1, r3
 801c07a:	2004      	movs	r0, #4
 801c07c:	f7e4 ffed 	bl	800105a <_ZnwjPv>
 801c080:	4603      	mov	r3, r0
 801c082:	601c      	str	r4, [r3, #0]
 801c084:	bf00      	nop
 801c086:	3714      	adds	r7, #20
 801c088:	46bd      	mov	sp, r7
 801c08a:	bd90      	pop	{r4, r7, pc}

0801c08c <_ZNKSt6vectorIP16Power_expressionSaIS1_EE12_M_check_lenEjPKc>:
      _M_check_len(size_type __n, const char* __s) const
 801c08c:	b590      	push	{r4, r7, lr}
 801c08e:	b087      	sub	sp, #28
 801c090:	af00      	add	r7, sp, #0
 801c092:	60f8      	str	r0, [r7, #12]
 801c094:	60b9      	str	r1, [r7, #8]
 801c096:	607a      	str	r2, [r7, #4]
	if (max_size() - size() < __n)
 801c098:	68f8      	ldr	r0, [r7, #12]
 801c09a:	f000 fbde 	bl	801c85a <_ZNKSt6vectorIP16Power_expressionSaIS1_EE8max_sizeEv>
 801c09e:	4604      	mov	r4, r0
 801c0a0:	68f8      	ldr	r0, [r7, #12]
 801c0a2:	f000 fbeb 	bl	801c87c <_ZNKSt6vectorIP16Power_expressionSaIS1_EE4sizeEv>
 801c0a6:	4603      	mov	r3, r0
 801c0a8:	1ae2      	subs	r2, r4, r3
 801c0aa:	68bb      	ldr	r3, [r7, #8]
 801c0ac:	429a      	cmp	r2, r3
 801c0ae:	bf34      	ite	cc
 801c0b0:	2301      	movcc	r3, #1
 801c0b2:	2300      	movcs	r3, #0
 801c0b4:	b2db      	uxtb	r3, r3
 801c0b6:	2b00      	cmp	r3, #0
 801c0b8:	d002      	beq.n	801c0c0 <_ZNKSt6vectorIP16Power_expressionSaIS1_EE12_M_check_lenEjPKc+0x34>
	  __throw_length_error(__N(__s));
 801c0ba:	6878      	ldr	r0, [r7, #4]
 801c0bc:	f006 fc81 	bl	80229c2 <_ZSt20__throw_length_errorPKc>
	const size_type __len = size() + (std::max)(size(), __n);
 801c0c0:	68f8      	ldr	r0, [r7, #12]
 801c0c2:	f000 fbdb 	bl	801c87c <_ZNKSt6vectorIP16Power_expressionSaIS1_EE4sizeEv>
 801c0c6:	4604      	mov	r4, r0
 801c0c8:	68f8      	ldr	r0, [r7, #12]
 801c0ca:	f000 fbd7 	bl	801c87c <_ZNKSt6vectorIP16Power_expressionSaIS1_EE4sizeEv>
 801c0ce:	4603      	mov	r3, r0
 801c0d0:	613b      	str	r3, [r7, #16]
 801c0d2:	f107 0208 	add.w	r2, r7, #8
 801c0d6:	f107 0310 	add.w	r3, r7, #16
 801c0da:	4611      	mov	r1, r2
 801c0dc:	4618      	mov	r0, r3
 801c0de:	f7f9 fcca 	bl	8015a76 <_ZSt3maxIjERKT_S2_S2_>
 801c0e2:	4603      	mov	r3, r0
 801c0e4:	681b      	ldr	r3, [r3, #0]
 801c0e6:	4423      	add	r3, r4
 801c0e8:	617b      	str	r3, [r7, #20]
	return (__len < size() || __len > max_size()) ? max_size() : __len;
 801c0ea:	68f8      	ldr	r0, [r7, #12]
 801c0ec:	f000 fbc6 	bl	801c87c <_ZNKSt6vectorIP16Power_expressionSaIS1_EE4sizeEv>
 801c0f0:	4602      	mov	r2, r0
 801c0f2:	697b      	ldr	r3, [r7, #20]
 801c0f4:	4293      	cmp	r3, r2
 801c0f6:	d306      	bcc.n	801c106 <_ZNKSt6vectorIP16Power_expressionSaIS1_EE12_M_check_lenEjPKc+0x7a>
 801c0f8:	68f8      	ldr	r0, [r7, #12]
 801c0fa:	f000 fbae 	bl	801c85a <_ZNKSt6vectorIP16Power_expressionSaIS1_EE8max_sizeEv>
 801c0fe:	4602      	mov	r2, r0
 801c100:	697b      	ldr	r3, [r7, #20]
 801c102:	4293      	cmp	r3, r2
 801c104:	d904      	bls.n	801c110 <_ZNKSt6vectorIP16Power_expressionSaIS1_EE12_M_check_lenEjPKc+0x84>
 801c106:	68f8      	ldr	r0, [r7, #12]
 801c108:	f000 fba7 	bl	801c85a <_ZNKSt6vectorIP16Power_expressionSaIS1_EE8max_sizeEv>
 801c10c:	4603      	mov	r3, r0
 801c10e:	e000      	b.n	801c112 <_ZNKSt6vectorIP16Power_expressionSaIS1_EE12_M_check_lenEjPKc+0x86>
 801c110:	697b      	ldr	r3, [r7, #20]
      }
 801c112:	4618      	mov	r0, r3
 801c114:	371c      	adds	r7, #28
 801c116:	46bd      	mov	sp, r7
 801c118:	bd90      	pop	{r4, r7, pc}

0801c11a <_ZN9__gnu_cxxmiIPP16Power_expressionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>:
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
 801c11a:	b590      	push	{r4, r7, lr}
 801c11c:	b083      	sub	sp, #12
 801c11e:	af00      	add	r7, sp, #0
 801c120:	6078      	str	r0, [r7, #4]
 801c122:	6039      	str	r1, [r7, #0]
    { return __lhs.base() - __rhs.base(); }
 801c124:	6878      	ldr	r0, [r7, #4]
 801c126:	f7ee fb86 	bl	800a836 <_ZNK9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801c12a:	4603      	mov	r3, r0
 801c12c:	681c      	ldr	r4, [r3, #0]
 801c12e:	6838      	ldr	r0, [r7, #0]
 801c130:	f7ee fb81 	bl	800a836 <_ZNK9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801c134:	4603      	mov	r3, r0
 801c136:	681b      	ldr	r3, [r3, #0]
 801c138:	1ae3      	subs	r3, r4, r3
 801c13a:	109b      	asrs	r3, r3, #2
 801c13c:	4618      	mov	r0, r3
 801c13e:	370c      	adds	r7, #12
 801c140:	46bd      	mov	sp, r7
 801c142:	bd90      	pop	{r4, r7, pc}

0801c144 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE11_M_allocateEj>:
      _M_allocate(size_t __n)
 801c144:	b580      	push	{r7, lr}
 801c146:	b082      	sub	sp, #8
 801c148:	af00      	add	r7, sp, #0
 801c14a:	6078      	str	r0, [r7, #4]
 801c14c:	6039      	str	r1, [r7, #0]
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 801c14e:	683b      	ldr	r3, [r7, #0]
 801c150:	2b00      	cmp	r3, #0
 801c152:	d006      	beq.n	801c162 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE11_M_allocateEj+0x1e>
 801c154:	687b      	ldr	r3, [r7, #4]
 801c156:	6839      	ldr	r1, [r7, #0]
 801c158:	4618      	mov	r0, r3
 801c15a:	f000 fb9f 	bl	801c89c <_ZNSt16allocator_traitsISaIP16Power_expressionEE8allocateERS2_j>
 801c15e:	4603      	mov	r3, r0
 801c160:	e000      	b.n	801c164 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE11_M_allocateEj+0x20>
 801c162:	2300      	movs	r3, #0
      }
 801c164:	4618      	mov	r0, r3
 801c166:	3708      	adds	r7, #8
 801c168:	46bd      	mov	sp, r7
 801c16a:	bd80      	pop	{r7, pc}

0801c16c <_ZNSt6vectorIP16Power_expressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
 801c16c:	b590      	push	{r4, r7, lr}
 801c16e:	b089      	sub	sp, #36	; 0x24
 801c170:	af02      	add	r7, sp, #8
 801c172:	60f8      	str	r0, [r7, #12]
 801c174:	60b9      	str	r1, [r7, #8]
 801c176:	607a      	str	r2, [r7, #4]
 801c178:	603b      	str	r3, [r7, #0]
	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
 801c17a:	f88d 4000 	strb.w	r4, [sp]
 801c17e:	683b      	ldr	r3, [r7, #0]
 801c180:	687a      	ldr	r2, [r7, #4]
 801c182:	68b9      	ldr	r1, [r7, #8]
 801c184:	68f8      	ldr	r0, [r7, #12]
 801c186:	f000 fb98 	bl	801c8ba <_ZNSt6vectorIP16Power_expressionSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>
 801c18a:	4603      	mov	r3, r0
      }
 801c18c:	4618      	mov	r0, r3
 801c18e:	371c      	adds	r7, #28
 801c190:	46bd      	mov	sp, r7
 801c192:	bd90      	pop	{r4, r7, pc}

0801c194 <_ZNK9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEEmiEi>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
 801c194:	b580      	push	{r7, lr}
 801c196:	b084      	sub	sp, #16
 801c198:	af00      	add	r7, sp, #0
 801c19a:	6078      	str	r0, [r7, #4]
 801c19c:	6039      	str	r1, [r7, #0]
      { return __normal_iterator(_M_current - __n); }
 801c19e:	687b      	ldr	r3, [r7, #4]
 801c1a0:	681a      	ldr	r2, [r3, #0]
 801c1a2:	683b      	ldr	r3, [r7, #0]
 801c1a4:	009b      	lsls	r3, r3, #2
 801c1a6:	425b      	negs	r3, r3
 801c1a8:	4413      	add	r3, r2
 801c1aa:	60fb      	str	r3, [r7, #12]
 801c1ac:	f107 020c 	add.w	r2, r7, #12
 801c1b0:	f107 0308 	add.w	r3, r7, #8
 801c1b4:	4611      	mov	r1, r2
 801c1b6:	4618      	mov	r0, r3
 801c1b8:	f7ee fb2d 	bl	800a816 <_ZN9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 801c1bc:	68bb      	ldr	r3, [r7, #8]
 801c1be:	4618      	mov	r0, r3
 801c1c0:	3710      	adds	r7, #16
 801c1c2:	46bd      	mov	sp, r7
 801c1c4:	bd80      	pop	{r7, pc}

0801c1c6 <_ZN9__gnu_cxx13new_allocatorI12sum_operatorE9constructIS1_JS1_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 801c1c6:	b590      	push	{r4, r7, lr}
 801c1c8:	b085      	sub	sp, #20
 801c1ca:	af00      	add	r7, sp, #0
 801c1cc:	60f8      	str	r0, [r7, #12]
 801c1ce:	60b9      	str	r1, [r7, #8]
 801c1d0:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 801c1d2:	6878      	ldr	r0, [r7, #4]
 801c1d4:	f7ff fb27 	bl	801b826 <_ZSt7forwardI12sum_operatorEOT_RNSt16remove_referenceIS1_E4typeE>
 801c1d8:	4603      	mov	r3, r0
 801c1da:	781c      	ldrb	r4, [r3, #0]
 801c1dc:	68bb      	ldr	r3, [r7, #8]
 801c1de:	4619      	mov	r1, r3
 801c1e0:	2001      	movs	r0, #1
 801c1e2:	f7e4 ff3a 	bl	800105a <_ZnwjPv>
 801c1e6:	4603      	mov	r3, r0
 801c1e8:	4622      	mov	r2, r4
 801c1ea:	701a      	strb	r2, [r3, #0]
 801c1ec:	bf00      	nop
 801c1ee:	3714      	adds	r7, #20
 801c1f0:	46bd      	mov	sp, r7
 801c1f2:	bd90      	pop	{r4, r7, pc}

0801c1f4 <_ZN9__gnu_cxx17__normal_iteratorIP12sum_operatorSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 801c1f4:	b480      	push	{r7}
 801c1f6:	b083      	sub	sp, #12
 801c1f8:	af00      	add	r7, sp, #0
 801c1fa:	6078      	str	r0, [r7, #4]
 801c1fc:	6039      	str	r1, [r7, #0]
      : _M_current(__i) { }
 801c1fe:	683b      	ldr	r3, [r7, #0]
 801c200:	681a      	ldr	r2, [r3, #0]
 801c202:	687b      	ldr	r3, [r7, #4]
 801c204:	601a      	str	r2, [r3, #0]
 801c206:	687b      	ldr	r3, [r7, #4]
 801c208:	4618      	mov	r0, r3
 801c20a:	370c      	adds	r7, #12
 801c20c:	46bd      	mov	sp, r7
 801c20e:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c212:	4770      	bx	lr

0801c214 <_ZNKSt6vectorI12sum_operatorSaIS0_EE12_M_check_lenEjPKc>:
      _M_check_len(size_type __n, const char* __s) const
 801c214:	b590      	push	{r4, r7, lr}
 801c216:	b087      	sub	sp, #28
 801c218:	af00      	add	r7, sp, #0
 801c21a:	60f8      	str	r0, [r7, #12]
 801c21c:	60b9      	str	r1, [r7, #8]
 801c21e:	607a      	str	r2, [r7, #4]
	if (max_size() - size() < __n)
 801c220:	68f8      	ldr	r0, [r7, #12]
 801c222:	f000 fb5c 	bl	801c8de <_ZNKSt6vectorI12sum_operatorSaIS0_EE8max_sizeEv>
 801c226:	4604      	mov	r4, r0
 801c228:	68f8      	ldr	r0, [r7, #12]
 801c22a:	f7f0 fc1f 	bl	800ca6c <_ZNKSt6vectorI12sum_operatorSaIS0_EE4sizeEv>
 801c22e:	4603      	mov	r3, r0
 801c230:	1ae2      	subs	r2, r4, r3
 801c232:	68bb      	ldr	r3, [r7, #8]
 801c234:	429a      	cmp	r2, r3
 801c236:	bf34      	ite	cc
 801c238:	2301      	movcc	r3, #1
 801c23a:	2300      	movcs	r3, #0
 801c23c:	b2db      	uxtb	r3, r3
 801c23e:	2b00      	cmp	r3, #0
 801c240:	d002      	beq.n	801c248 <_ZNKSt6vectorI12sum_operatorSaIS0_EE12_M_check_lenEjPKc+0x34>
	  __throw_length_error(__N(__s));
 801c242:	6878      	ldr	r0, [r7, #4]
 801c244:	f006 fbbd 	bl	80229c2 <_ZSt20__throw_length_errorPKc>
	const size_type __len = size() + (std::max)(size(), __n);
 801c248:	68f8      	ldr	r0, [r7, #12]
 801c24a:	f7f0 fc0f 	bl	800ca6c <_ZNKSt6vectorI12sum_operatorSaIS0_EE4sizeEv>
 801c24e:	4604      	mov	r4, r0
 801c250:	68f8      	ldr	r0, [r7, #12]
 801c252:	f7f0 fc0b 	bl	800ca6c <_ZNKSt6vectorI12sum_operatorSaIS0_EE4sizeEv>
 801c256:	4603      	mov	r3, r0
 801c258:	613b      	str	r3, [r7, #16]
 801c25a:	f107 0208 	add.w	r2, r7, #8
 801c25e:	f107 0310 	add.w	r3, r7, #16
 801c262:	4611      	mov	r1, r2
 801c264:	4618      	mov	r0, r3
 801c266:	f7f9 fc06 	bl	8015a76 <_ZSt3maxIjERKT_S2_S2_>
 801c26a:	4603      	mov	r3, r0
 801c26c:	681b      	ldr	r3, [r3, #0]
 801c26e:	4423      	add	r3, r4
 801c270:	617b      	str	r3, [r7, #20]
	return (__len < size() || __len > max_size()) ? max_size() : __len;
 801c272:	68f8      	ldr	r0, [r7, #12]
 801c274:	f7f0 fbfa 	bl	800ca6c <_ZNKSt6vectorI12sum_operatorSaIS0_EE4sizeEv>
 801c278:	4602      	mov	r2, r0
 801c27a:	697b      	ldr	r3, [r7, #20]
 801c27c:	4293      	cmp	r3, r2
 801c27e:	d306      	bcc.n	801c28e <_ZNKSt6vectorI12sum_operatorSaIS0_EE12_M_check_lenEjPKc+0x7a>
 801c280:	68f8      	ldr	r0, [r7, #12]
 801c282:	f000 fb2c 	bl	801c8de <_ZNKSt6vectorI12sum_operatorSaIS0_EE8max_sizeEv>
 801c286:	4602      	mov	r2, r0
 801c288:	697b      	ldr	r3, [r7, #20]
 801c28a:	4293      	cmp	r3, r2
 801c28c:	d904      	bls.n	801c298 <_ZNKSt6vectorI12sum_operatorSaIS0_EE12_M_check_lenEjPKc+0x84>
 801c28e:	68f8      	ldr	r0, [r7, #12]
 801c290:	f000 fb25 	bl	801c8de <_ZNKSt6vectorI12sum_operatorSaIS0_EE8max_sizeEv>
 801c294:	4603      	mov	r3, r0
 801c296:	e000      	b.n	801c29a <_ZNKSt6vectorI12sum_operatorSaIS0_EE12_M_check_lenEjPKc+0x86>
 801c298:	697b      	ldr	r3, [r7, #20]
      }
 801c29a:	4618      	mov	r0, r3
 801c29c:	371c      	adds	r7, #28
 801c29e:	46bd      	mov	sp, r7
 801c2a0:	bd90      	pop	{r4, r7, pc}

0801c2a2 <_ZNSt6vectorI12sum_operatorSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 801c2a2:	b580      	push	{r7, lr}
 801c2a4:	b084      	sub	sp, #16
 801c2a6:	af00      	add	r7, sp, #0
 801c2a8:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_start); }
 801c2aa:	687a      	ldr	r2, [r7, #4]
 801c2ac:	f107 030c 	add.w	r3, r7, #12
 801c2b0:	4611      	mov	r1, r2
 801c2b2:	4618      	mov	r0, r3
 801c2b4:	f7ff ff9e 	bl	801c1f4 <_ZN9__gnu_cxx17__normal_iteratorIP12sum_operatorSt6vectorIS1_SaIS1_EEEC1ERKS2_>
 801c2b8:	68fb      	ldr	r3, [r7, #12]
 801c2ba:	4618      	mov	r0, r3
 801c2bc:	3710      	adds	r7, #16
 801c2be:	46bd      	mov	sp, r7
 801c2c0:	bd80      	pop	{r7, pc}

0801c2c2 <_ZN9__gnu_cxxmiIP12sum_operatorSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_>:
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
 801c2c2:	b590      	push	{r4, r7, lr}
 801c2c4:	b083      	sub	sp, #12
 801c2c6:	af00      	add	r7, sp, #0
 801c2c8:	6078      	str	r0, [r7, #4]
 801c2ca:	6039      	str	r1, [r7, #0]
    { return __lhs.base() - __rhs.base(); }
 801c2cc:	6878      	ldr	r0, [r7, #4]
 801c2ce:	f000 f834 	bl	801c33a <_ZNK9__gnu_cxx17__normal_iteratorIP12sum_operatorSt6vectorIS1_SaIS1_EEE4baseEv>
 801c2d2:	4603      	mov	r3, r0
 801c2d4:	681c      	ldr	r4, [r3, #0]
 801c2d6:	6838      	ldr	r0, [r7, #0]
 801c2d8:	f000 f82f 	bl	801c33a <_ZNK9__gnu_cxx17__normal_iteratorIP12sum_operatorSt6vectorIS1_SaIS1_EEE4baseEv>
 801c2dc:	4603      	mov	r3, r0
 801c2de:	681b      	ldr	r3, [r3, #0]
 801c2e0:	1ae3      	subs	r3, r4, r3
 801c2e2:	4618      	mov	r0, r3
 801c2e4:	370c      	adds	r7, #12
 801c2e6:	46bd      	mov	sp, r7
 801c2e8:	bd90      	pop	{r4, r7, pc}

0801c2ea <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE11_M_allocateEj>:
      _M_allocate(size_t __n)
 801c2ea:	b580      	push	{r7, lr}
 801c2ec:	b082      	sub	sp, #8
 801c2ee:	af00      	add	r7, sp, #0
 801c2f0:	6078      	str	r0, [r7, #4]
 801c2f2:	6039      	str	r1, [r7, #0]
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 801c2f4:	683b      	ldr	r3, [r7, #0]
 801c2f6:	2b00      	cmp	r3, #0
 801c2f8:	d006      	beq.n	801c308 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE11_M_allocateEj+0x1e>
 801c2fa:	687b      	ldr	r3, [r7, #4]
 801c2fc:	6839      	ldr	r1, [r7, #0]
 801c2fe:	4618      	mov	r0, r3
 801c300:	f000 fafe 	bl	801c900 <_ZNSt16allocator_traitsISaI12sum_operatorEE8allocateERS1_j>
 801c304:	4603      	mov	r3, r0
 801c306:	e000      	b.n	801c30a <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE11_M_allocateEj+0x20>
 801c308:	2300      	movs	r3, #0
      }
 801c30a:	4618      	mov	r0, r3
 801c30c:	3708      	adds	r7, #8
 801c30e:	46bd      	mov	sp, r7
 801c310:	bd80      	pop	{r7, pc}

0801c312 <_ZNSt6vectorI12sum_operatorSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
 801c312:	b590      	push	{r4, r7, lr}
 801c314:	b089      	sub	sp, #36	; 0x24
 801c316:	af02      	add	r7, sp, #8
 801c318:	60f8      	str	r0, [r7, #12]
 801c31a:	60b9      	str	r1, [r7, #8]
 801c31c:	607a      	str	r2, [r7, #4]
 801c31e:	603b      	str	r3, [r7, #0]
	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
 801c320:	f88d 4000 	strb.w	r4, [sp]
 801c324:	683b      	ldr	r3, [r7, #0]
 801c326:	687a      	ldr	r2, [r7, #4]
 801c328:	68b9      	ldr	r1, [r7, #8]
 801c32a:	68f8      	ldr	r0, [r7, #12]
 801c32c:	f000 faf7 	bl	801c91e <_ZNSt6vectorI12sum_operatorSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE>
 801c330:	4603      	mov	r3, r0
      }
 801c332:	4618      	mov	r0, r3
 801c334:	371c      	adds	r7, #28
 801c336:	46bd      	mov	sp, r7
 801c338:	bd90      	pop	{r4, r7, pc}

0801c33a <_ZNK9__gnu_cxx17__normal_iteratorIP12sum_operatorSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
 801c33a:	b480      	push	{r7}
 801c33c:	b083      	sub	sp, #12
 801c33e:	af00      	add	r7, sp, #0
 801c340:	6078      	str	r0, [r7, #4]
      { return _M_current; }
 801c342:	687b      	ldr	r3, [r7, #4]
 801c344:	4618      	mov	r0, r3
 801c346:	370c      	adds	r7, #12
 801c348:	46bd      	mov	sp, r7
 801c34a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c34e:	4770      	bx	lr

0801c350 <_ZNK9__gnu_cxx17__normal_iteratorIP12sum_operatorSt6vectorIS1_SaIS1_EEEmiEi>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
 801c350:	b580      	push	{r7, lr}
 801c352:	b084      	sub	sp, #16
 801c354:	af00      	add	r7, sp, #0
 801c356:	6078      	str	r0, [r7, #4]
 801c358:	6039      	str	r1, [r7, #0]
      { return __normal_iterator(_M_current - __n); }
 801c35a:	687b      	ldr	r3, [r7, #4]
 801c35c:	681a      	ldr	r2, [r3, #0]
 801c35e:	683b      	ldr	r3, [r7, #0]
 801c360:	425b      	negs	r3, r3
 801c362:	4413      	add	r3, r2
 801c364:	60fb      	str	r3, [r7, #12]
 801c366:	f107 020c 	add.w	r2, r7, #12
 801c36a:	f107 0308 	add.w	r3, r7, #8
 801c36e:	4611      	mov	r1, r2
 801c370:	4618      	mov	r0, r3
 801c372:	f7ff ff3f 	bl	801c1f4 <_ZN9__gnu_cxx17__normal_iteratorIP12sum_operatorSt6vectorIS1_SaIS1_EEEC1ERKS2_>
 801c376:	68bb      	ldr	r3, [r7, #8]
 801c378:	4618      	mov	r0, r3
 801c37a:	3710      	adds	r7, #16
 801c37c:	46bd      	mov	sp, r7
 801c37e:	bd80      	pop	{r7, pc}

0801c380 <_ZNK9__gnu_cxx17__normal_iteratorIP12sum_operatorSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
 801c380:	b480      	push	{r7}
 801c382:	b083      	sub	sp, #12
 801c384:	af00      	add	r7, sp, #0
 801c386:	6078      	str	r0, [r7, #4]
      { return *_M_current; }
 801c388:	687b      	ldr	r3, [r7, #4]
 801c38a:	681b      	ldr	r3, [r3, #0]
 801c38c:	4618      	mov	r0, r3
 801c38e:	370c      	adds	r7, #12
 801c390:	46bd      	mov	sp, r7
 801c392:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c396:	4770      	bx	lr

0801c398 <_ZN9__gnu_cxx13new_allocatorIP19Multiply_expressionE9constructIS2_JS2_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 801c398:	b590      	push	{r4, r7, lr}
 801c39a:	b085      	sub	sp, #20
 801c39c:	af00      	add	r7, sp, #0
 801c39e:	60f8      	str	r0, [r7, #12]
 801c3a0:	60b9      	str	r1, [r7, #8]
 801c3a2:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 801c3a4:	6878      	ldr	r0, [r7, #4]
 801c3a6:	f7ff fb18 	bl	801b9da <_ZSt7forwardIP19Multiply_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801c3aa:	4603      	mov	r3, r0
 801c3ac:	681c      	ldr	r4, [r3, #0]
 801c3ae:	68bb      	ldr	r3, [r7, #8]
 801c3b0:	4619      	mov	r1, r3
 801c3b2:	2004      	movs	r0, #4
 801c3b4:	f7e4 fe51 	bl	800105a <_ZnwjPv>
 801c3b8:	4603      	mov	r3, r0
 801c3ba:	601c      	str	r4, [r3, #0]
 801c3bc:	bf00      	nop
 801c3be:	3714      	adds	r7, #20
 801c3c0:	46bd      	mov	sp, r7
 801c3c2:	bd90      	pop	{r4, r7, pc}

0801c3c4 <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE12_M_check_lenEjPKc>:
      _M_check_len(size_type __n, const char* __s) const
 801c3c4:	b590      	push	{r4, r7, lr}
 801c3c6:	b087      	sub	sp, #28
 801c3c8:	af00      	add	r7, sp, #0
 801c3ca:	60f8      	str	r0, [r7, #12]
 801c3cc:	60b9      	str	r1, [r7, #8]
 801c3ce:	607a      	str	r2, [r7, #4]
	if (max_size() - size() < __n)
 801c3d0:	68f8      	ldr	r0, [r7, #12]
 801c3d2:	f000 fab6 	bl	801c942 <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE8max_sizeEv>
 801c3d6:	4604      	mov	r4, r0
 801c3d8:	68f8      	ldr	r0, [r7, #12]
 801c3da:	f000 fac3 	bl	801c964 <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE4sizeEv>
 801c3de:	4603      	mov	r3, r0
 801c3e0:	1ae2      	subs	r2, r4, r3
 801c3e2:	68bb      	ldr	r3, [r7, #8]
 801c3e4:	429a      	cmp	r2, r3
 801c3e6:	bf34      	ite	cc
 801c3e8:	2301      	movcc	r3, #1
 801c3ea:	2300      	movcs	r3, #0
 801c3ec:	b2db      	uxtb	r3, r3
 801c3ee:	2b00      	cmp	r3, #0
 801c3f0:	d002      	beq.n	801c3f8 <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE12_M_check_lenEjPKc+0x34>
	  __throw_length_error(__N(__s));
 801c3f2:	6878      	ldr	r0, [r7, #4]
 801c3f4:	f006 fae5 	bl	80229c2 <_ZSt20__throw_length_errorPKc>
	const size_type __len = size() + (std::max)(size(), __n);
 801c3f8:	68f8      	ldr	r0, [r7, #12]
 801c3fa:	f000 fab3 	bl	801c964 <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE4sizeEv>
 801c3fe:	4604      	mov	r4, r0
 801c400:	68f8      	ldr	r0, [r7, #12]
 801c402:	f000 faaf 	bl	801c964 <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE4sizeEv>
 801c406:	4603      	mov	r3, r0
 801c408:	613b      	str	r3, [r7, #16]
 801c40a:	f107 0208 	add.w	r2, r7, #8
 801c40e:	f107 0310 	add.w	r3, r7, #16
 801c412:	4611      	mov	r1, r2
 801c414:	4618      	mov	r0, r3
 801c416:	f7f9 fb2e 	bl	8015a76 <_ZSt3maxIjERKT_S2_S2_>
 801c41a:	4603      	mov	r3, r0
 801c41c:	681b      	ldr	r3, [r3, #0]
 801c41e:	4423      	add	r3, r4
 801c420:	617b      	str	r3, [r7, #20]
	return (__len < size() || __len > max_size()) ? max_size() : __len;
 801c422:	68f8      	ldr	r0, [r7, #12]
 801c424:	f000 fa9e 	bl	801c964 <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE4sizeEv>
 801c428:	4602      	mov	r2, r0
 801c42a:	697b      	ldr	r3, [r7, #20]
 801c42c:	4293      	cmp	r3, r2
 801c42e:	d306      	bcc.n	801c43e <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE12_M_check_lenEjPKc+0x7a>
 801c430:	68f8      	ldr	r0, [r7, #12]
 801c432:	f000 fa86 	bl	801c942 <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE8max_sizeEv>
 801c436:	4602      	mov	r2, r0
 801c438:	697b      	ldr	r3, [r7, #20]
 801c43a:	4293      	cmp	r3, r2
 801c43c:	d904      	bls.n	801c448 <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE12_M_check_lenEjPKc+0x84>
 801c43e:	68f8      	ldr	r0, [r7, #12]
 801c440:	f000 fa7f 	bl	801c942 <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE8max_sizeEv>
 801c444:	4603      	mov	r3, r0
 801c446:	e000      	b.n	801c44a <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE12_M_check_lenEjPKc+0x86>
 801c448:	697b      	ldr	r3, [r7, #20]
      }
 801c44a:	4618      	mov	r0, r3
 801c44c:	371c      	adds	r7, #28
 801c44e:	46bd      	mov	sp, r7
 801c450:	bd90      	pop	{r4, r7, pc}

0801c452 <_ZN9__gnu_cxxmiIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>:
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
 801c452:	b590      	push	{r4, r7, lr}
 801c454:	b083      	sub	sp, #12
 801c456:	af00      	add	r7, sp, #0
 801c458:	6078      	str	r0, [r7, #4]
 801c45a:	6039      	str	r1, [r7, #0]
    { return __lhs.base() - __rhs.base(); }
 801c45c:	6878      	ldr	r0, [r7, #4]
 801c45e:	f7ee fa80 	bl	800a962 <_ZNK9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801c462:	4603      	mov	r3, r0
 801c464:	681c      	ldr	r4, [r3, #0]
 801c466:	6838      	ldr	r0, [r7, #0]
 801c468:	f7ee fa7b 	bl	800a962 <_ZNK9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801c46c:	4603      	mov	r3, r0
 801c46e:	681b      	ldr	r3, [r3, #0]
 801c470:	1ae3      	subs	r3, r4, r3
 801c472:	109b      	asrs	r3, r3, #2
 801c474:	4618      	mov	r0, r3
 801c476:	370c      	adds	r7, #12
 801c478:	46bd      	mov	sp, r7
 801c47a:	bd90      	pop	{r4, r7, pc}

0801c47c <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE11_M_allocateEj>:
      _M_allocate(size_t __n)
 801c47c:	b580      	push	{r7, lr}
 801c47e:	b082      	sub	sp, #8
 801c480:	af00      	add	r7, sp, #0
 801c482:	6078      	str	r0, [r7, #4]
 801c484:	6039      	str	r1, [r7, #0]
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 801c486:	683b      	ldr	r3, [r7, #0]
 801c488:	2b00      	cmp	r3, #0
 801c48a:	d006      	beq.n	801c49a <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE11_M_allocateEj+0x1e>
 801c48c:	687b      	ldr	r3, [r7, #4]
 801c48e:	6839      	ldr	r1, [r7, #0]
 801c490:	4618      	mov	r0, r3
 801c492:	f000 fa77 	bl	801c984 <_ZNSt16allocator_traitsISaIP19Multiply_expressionEE8allocateERS2_j>
 801c496:	4603      	mov	r3, r0
 801c498:	e000      	b.n	801c49c <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE11_M_allocateEj+0x20>
 801c49a:	2300      	movs	r3, #0
      }
 801c49c:	4618      	mov	r0, r3
 801c49e:	3708      	adds	r7, #8
 801c4a0:	46bd      	mov	sp, r7
 801c4a2:	bd80      	pop	{r7, pc}

0801c4a4 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
 801c4a4:	b590      	push	{r4, r7, lr}
 801c4a6:	b089      	sub	sp, #36	; 0x24
 801c4a8:	af02      	add	r7, sp, #8
 801c4aa:	60f8      	str	r0, [r7, #12]
 801c4ac:	60b9      	str	r1, [r7, #8]
 801c4ae:	607a      	str	r2, [r7, #4]
 801c4b0:	603b      	str	r3, [r7, #0]
	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
 801c4b2:	f88d 4000 	strb.w	r4, [sp]
 801c4b6:	683b      	ldr	r3, [r7, #0]
 801c4b8:	687a      	ldr	r2, [r7, #4]
 801c4ba:	68b9      	ldr	r1, [r7, #8]
 801c4bc:	68f8      	ldr	r0, [r7, #12]
 801c4be:	f000 fa70 	bl	801c9a2 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>
 801c4c2:	4603      	mov	r3, r0
      }
 801c4c4:	4618      	mov	r0, r3
 801c4c6:	371c      	adds	r7, #28
 801c4c8:	46bd      	mov	sp, r7
 801c4ca:	bd90      	pop	{r4, r7, pc}

0801c4cc <_ZNK9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEmiEi>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
 801c4cc:	b580      	push	{r7, lr}
 801c4ce:	b084      	sub	sp, #16
 801c4d0:	af00      	add	r7, sp, #0
 801c4d2:	6078      	str	r0, [r7, #4]
 801c4d4:	6039      	str	r1, [r7, #0]
      { return __normal_iterator(_M_current - __n); }
 801c4d6:	687b      	ldr	r3, [r7, #4]
 801c4d8:	681a      	ldr	r2, [r3, #0]
 801c4da:	683b      	ldr	r3, [r7, #0]
 801c4dc:	009b      	lsls	r3, r3, #2
 801c4de:	425b      	negs	r3, r3
 801c4e0:	4413      	add	r3, r2
 801c4e2:	60fb      	str	r3, [r7, #12]
 801c4e4:	f107 020c 	add.w	r2, r7, #12
 801c4e8:	f107 0308 	add.w	r3, r7, #8
 801c4ec:	4611      	mov	r1, r2
 801c4ee:	4618      	mov	r0, r3
 801c4f0:	f7ee fa27 	bl	800a942 <_ZN9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 801c4f4:	68bb      	ldr	r3, [r7, #8]
 801c4f6:	4618      	mov	r0, r3
 801c4f8:	3710      	adds	r7, #16
 801c4fa:	46bd      	mov	sp, r7
 801c4fc:	bd80      	pop	{r7, pc}

0801c4fe <_ZN9__gnu_cxx13new_allocatorIP18Compare_expressionE9constructIS2_JS2_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 801c4fe:	b590      	push	{r4, r7, lr}
 801c500:	b085      	sub	sp, #20
 801c502:	af00      	add	r7, sp, #0
 801c504:	60f8      	str	r0, [r7, #12]
 801c506:	60b9      	str	r1, [r7, #8]
 801c508:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 801c50a:	6878      	ldr	r0, [r7, #4]
 801c50c:	f7ff fb26 	bl	801bb5c <_ZSt7forwardIP18Compare_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801c510:	4603      	mov	r3, r0
 801c512:	681c      	ldr	r4, [r3, #0]
 801c514:	68bb      	ldr	r3, [r7, #8]
 801c516:	4619      	mov	r1, r3
 801c518:	2004      	movs	r0, #4
 801c51a:	f7e4 fd9e 	bl	800105a <_ZnwjPv>
 801c51e:	4603      	mov	r3, r0
 801c520:	601c      	str	r4, [r3, #0]
 801c522:	bf00      	nop
 801c524:	3714      	adds	r7, #20
 801c526:	46bd      	mov	sp, r7
 801c528:	bd90      	pop	{r4, r7, pc}

0801c52a <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE12_M_check_lenEjPKc>:
      _M_check_len(size_type __n, const char* __s) const
 801c52a:	b590      	push	{r4, r7, lr}
 801c52c:	b087      	sub	sp, #28
 801c52e:	af00      	add	r7, sp, #0
 801c530:	60f8      	str	r0, [r7, #12]
 801c532:	60b9      	str	r1, [r7, #8]
 801c534:	607a      	str	r2, [r7, #4]
	if (max_size() - size() < __n)
 801c536:	68f8      	ldr	r0, [r7, #12]
 801c538:	f000 fa45 	bl	801c9c6 <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE8max_sizeEv>
 801c53c:	4604      	mov	r4, r0
 801c53e:	68f8      	ldr	r0, [r7, #12]
 801c540:	f000 fa52 	bl	801c9e8 <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE4sizeEv>
 801c544:	4603      	mov	r3, r0
 801c546:	1ae2      	subs	r2, r4, r3
 801c548:	68bb      	ldr	r3, [r7, #8]
 801c54a:	429a      	cmp	r2, r3
 801c54c:	bf34      	ite	cc
 801c54e:	2301      	movcc	r3, #1
 801c550:	2300      	movcs	r3, #0
 801c552:	b2db      	uxtb	r3, r3
 801c554:	2b00      	cmp	r3, #0
 801c556:	d002      	beq.n	801c55e <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE12_M_check_lenEjPKc+0x34>
	  __throw_length_error(__N(__s));
 801c558:	6878      	ldr	r0, [r7, #4]
 801c55a:	f006 fa32 	bl	80229c2 <_ZSt20__throw_length_errorPKc>
	const size_type __len = size() + (std::max)(size(), __n);
 801c55e:	68f8      	ldr	r0, [r7, #12]
 801c560:	f000 fa42 	bl	801c9e8 <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE4sizeEv>
 801c564:	4604      	mov	r4, r0
 801c566:	68f8      	ldr	r0, [r7, #12]
 801c568:	f000 fa3e 	bl	801c9e8 <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE4sizeEv>
 801c56c:	4603      	mov	r3, r0
 801c56e:	613b      	str	r3, [r7, #16]
 801c570:	f107 0208 	add.w	r2, r7, #8
 801c574:	f107 0310 	add.w	r3, r7, #16
 801c578:	4611      	mov	r1, r2
 801c57a:	4618      	mov	r0, r3
 801c57c:	f7f9 fa7b 	bl	8015a76 <_ZSt3maxIjERKT_S2_S2_>
 801c580:	4603      	mov	r3, r0
 801c582:	681b      	ldr	r3, [r3, #0]
 801c584:	4423      	add	r3, r4
 801c586:	617b      	str	r3, [r7, #20]
	return (__len < size() || __len > max_size()) ? max_size() : __len;
 801c588:	68f8      	ldr	r0, [r7, #12]
 801c58a:	f000 fa2d 	bl	801c9e8 <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE4sizeEv>
 801c58e:	4602      	mov	r2, r0
 801c590:	697b      	ldr	r3, [r7, #20]
 801c592:	4293      	cmp	r3, r2
 801c594:	d306      	bcc.n	801c5a4 <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE12_M_check_lenEjPKc+0x7a>
 801c596:	68f8      	ldr	r0, [r7, #12]
 801c598:	f000 fa15 	bl	801c9c6 <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE8max_sizeEv>
 801c59c:	4602      	mov	r2, r0
 801c59e:	697b      	ldr	r3, [r7, #20]
 801c5a0:	4293      	cmp	r3, r2
 801c5a2:	d904      	bls.n	801c5ae <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE12_M_check_lenEjPKc+0x84>
 801c5a4:	68f8      	ldr	r0, [r7, #12]
 801c5a6:	f000 fa0e 	bl	801c9c6 <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE8max_sizeEv>
 801c5aa:	4603      	mov	r3, r0
 801c5ac:	e000      	b.n	801c5b0 <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE12_M_check_lenEjPKc+0x86>
 801c5ae:	697b      	ldr	r3, [r7, #20]
      }
 801c5b0:	4618      	mov	r0, r3
 801c5b2:	371c      	adds	r7, #28
 801c5b4:	46bd      	mov	sp, r7
 801c5b6:	bd90      	pop	{r4, r7, pc}

0801c5b8 <_ZN9__gnu_cxxmiIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>:
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
 801c5b8:	b590      	push	{r4, r7, lr}
 801c5ba:	b083      	sub	sp, #12
 801c5bc:	af00      	add	r7, sp, #0
 801c5be:	6078      	str	r0, [r7, #4]
 801c5c0:	6039      	str	r1, [r7, #0]
    { return __lhs.base() - __rhs.base(); }
 801c5c2:	6878      	ldr	r0, [r7, #4]
 801c5c4:	f7ee fa26 	bl	800aa14 <_ZNK9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801c5c8:	4603      	mov	r3, r0
 801c5ca:	681c      	ldr	r4, [r3, #0]
 801c5cc:	6838      	ldr	r0, [r7, #0]
 801c5ce:	f7ee fa21 	bl	800aa14 <_ZNK9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801c5d2:	4603      	mov	r3, r0
 801c5d4:	681b      	ldr	r3, [r3, #0]
 801c5d6:	1ae3      	subs	r3, r4, r3
 801c5d8:	109b      	asrs	r3, r3, #2
 801c5da:	4618      	mov	r0, r3
 801c5dc:	370c      	adds	r7, #12
 801c5de:	46bd      	mov	sp, r7
 801c5e0:	bd90      	pop	{r4, r7, pc}

0801c5e2 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE11_M_allocateEj>:
      _M_allocate(size_t __n)
 801c5e2:	b580      	push	{r7, lr}
 801c5e4:	b082      	sub	sp, #8
 801c5e6:	af00      	add	r7, sp, #0
 801c5e8:	6078      	str	r0, [r7, #4]
 801c5ea:	6039      	str	r1, [r7, #0]
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 801c5ec:	683b      	ldr	r3, [r7, #0]
 801c5ee:	2b00      	cmp	r3, #0
 801c5f0:	d006      	beq.n	801c600 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE11_M_allocateEj+0x1e>
 801c5f2:	687b      	ldr	r3, [r7, #4]
 801c5f4:	6839      	ldr	r1, [r7, #0]
 801c5f6:	4618      	mov	r0, r3
 801c5f8:	f000 fa06 	bl	801ca08 <_ZNSt16allocator_traitsISaIP18Compare_expressionEE8allocateERS2_j>
 801c5fc:	4603      	mov	r3, r0
 801c5fe:	e000      	b.n	801c602 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE11_M_allocateEj+0x20>
 801c600:	2300      	movs	r3, #0
      }
 801c602:	4618      	mov	r0, r3
 801c604:	3708      	adds	r7, #8
 801c606:	46bd      	mov	sp, r7
 801c608:	bd80      	pop	{r7, pc}

0801c60a <_ZNSt6vectorIP18Compare_expressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
 801c60a:	b590      	push	{r4, r7, lr}
 801c60c:	b089      	sub	sp, #36	; 0x24
 801c60e:	af02      	add	r7, sp, #8
 801c610:	60f8      	str	r0, [r7, #12]
 801c612:	60b9      	str	r1, [r7, #8]
 801c614:	607a      	str	r2, [r7, #4]
 801c616:	603b      	str	r3, [r7, #0]
	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
 801c618:	f88d 4000 	strb.w	r4, [sp]
 801c61c:	683b      	ldr	r3, [r7, #0]
 801c61e:	687a      	ldr	r2, [r7, #4]
 801c620:	68b9      	ldr	r1, [r7, #8]
 801c622:	68f8      	ldr	r0, [r7, #12]
 801c624:	f000 f9ff 	bl	801ca26 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>
 801c628:	4603      	mov	r3, r0
      }
 801c62a:	4618      	mov	r0, r3
 801c62c:	371c      	adds	r7, #28
 801c62e:	46bd      	mov	sp, r7
 801c630:	bd90      	pop	{r4, r7, pc}

0801c632 <_ZNK9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEmiEi>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
 801c632:	b580      	push	{r7, lr}
 801c634:	b084      	sub	sp, #16
 801c636:	af00      	add	r7, sp, #0
 801c638:	6078      	str	r0, [r7, #4]
 801c63a:	6039      	str	r1, [r7, #0]
      { return __normal_iterator(_M_current - __n); }
 801c63c:	687b      	ldr	r3, [r7, #4]
 801c63e:	681a      	ldr	r2, [r3, #0]
 801c640:	683b      	ldr	r3, [r7, #0]
 801c642:	009b      	lsls	r3, r3, #2
 801c644:	425b      	negs	r3, r3
 801c646:	4413      	add	r3, r2
 801c648:	60fb      	str	r3, [r7, #12]
 801c64a:	f107 020c 	add.w	r2, r7, #12
 801c64e:	f107 0308 	add.w	r3, r7, #8
 801c652:	4611      	mov	r1, r2
 801c654:	4618      	mov	r0, r3
 801c656:	f7ee f9cd 	bl	800a9f4 <_ZN9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 801c65a:	68bb      	ldr	r3, [r7, #8]
 801c65c:	4618      	mov	r0, r3
 801c65e:	3710      	adds	r7, #16
 801c660:	46bd      	mov	sp, r7
 801c662:	bd80      	pop	{r7, pc}

0801c664 <_ZN9__gnu_cxx13new_allocatorIP14And_expressionE9constructIS2_JS2_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 801c664:	b590      	push	{r4, r7, lr}
 801c666:	b085      	sub	sp, #20
 801c668:	af00      	add	r7, sp, #0
 801c66a:	60f8      	str	r0, [r7, #12]
 801c66c:	60b9      	str	r1, [r7, #8]
 801c66e:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 801c670:	6878      	ldr	r0, [r7, #4]
 801c672:	f7ff fb33 	bl	801bcdc <_ZSt7forwardIP14And_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801c676:	4603      	mov	r3, r0
 801c678:	681c      	ldr	r4, [r3, #0]
 801c67a:	68bb      	ldr	r3, [r7, #8]
 801c67c:	4619      	mov	r1, r3
 801c67e:	2004      	movs	r0, #4
 801c680:	f7e4 fceb 	bl	800105a <_ZnwjPv>
 801c684:	4603      	mov	r3, r0
 801c686:	601c      	str	r4, [r3, #0]
 801c688:	bf00      	nop
 801c68a:	3714      	adds	r7, #20
 801c68c:	46bd      	mov	sp, r7
 801c68e:	bd90      	pop	{r4, r7, pc}

0801c690 <_ZNKSt6vectorIP14And_expressionSaIS1_EE12_M_check_lenEjPKc>:
      _M_check_len(size_type __n, const char* __s) const
 801c690:	b590      	push	{r4, r7, lr}
 801c692:	b087      	sub	sp, #28
 801c694:	af00      	add	r7, sp, #0
 801c696:	60f8      	str	r0, [r7, #12]
 801c698:	60b9      	str	r1, [r7, #8]
 801c69a:	607a      	str	r2, [r7, #4]
	if (max_size() - size() < __n)
 801c69c:	68f8      	ldr	r0, [r7, #12]
 801c69e:	f000 f9d4 	bl	801ca4a <_ZNKSt6vectorIP14And_expressionSaIS1_EE8max_sizeEv>
 801c6a2:	4604      	mov	r4, r0
 801c6a4:	68f8      	ldr	r0, [r7, #12]
 801c6a6:	f000 f9e1 	bl	801ca6c <_ZNKSt6vectorIP14And_expressionSaIS1_EE4sizeEv>
 801c6aa:	4603      	mov	r3, r0
 801c6ac:	1ae2      	subs	r2, r4, r3
 801c6ae:	68bb      	ldr	r3, [r7, #8]
 801c6b0:	429a      	cmp	r2, r3
 801c6b2:	bf34      	ite	cc
 801c6b4:	2301      	movcc	r3, #1
 801c6b6:	2300      	movcs	r3, #0
 801c6b8:	b2db      	uxtb	r3, r3
 801c6ba:	2b00      	cmp	r3, #0
 801c6bc:	d002      	beq.n	801c6c4 <_ZNKSt6vectorIP14And_expressionSaIS1_EE12_M_check_lenEjPKc+0x34>
	  __throw_length_error(__N(__s));
 801c6be:	6878      	ldr	r0, [r7, #4]
 801c6c0:	f006 f97f 	bl	80229c2 <_ZSt20__throw_length_errorPKc>
	const size_type __len = size() + (std::max)(size(), __n);
 801c6c4:	68f8      	ldr	r0, [r7, #12]
 801c6c6:	f000 f9d1 	bl	801ca6c <_ZNKSt6vectorIP14And_expressionSaIS1_EE4sizeEv>
 801c6ca:	4604      	mov	r4, r0
 801c6cc:	68f8      	ldr	r0, [r7, #12]
 801c6ce:	f000 f9cd 	bl	801ca6c <_ZNKSt6vectorIP14And_expressionSaIS1_EE4sizeEv>
 801c6d2:	4603      	mov	r3, r0
 801c6d4:	613b      	str	r3, [r7, #16]
 801c6d6:	f107 0208 	add.w	r2, r7, #8
 801c6da:	f107 0310 	add.w	r3, r7, #16
 801c6de:	4611      	mov	r1, r2
 801c6e0:	4618      	mov	r0, r3
 801c6e2:	f7f9 f9c8 	bl	8015a76 <_ZSt3maxIjERKT_S2_S2_>
 801c6e6:	4603      	mov	r3, r0
 801c6e8:	681b      	ldr	r3, [r3, #0]
 801c6ea:	4423      	add	r3, r4
 801c6ec:	617b      	str	r3, [r7, #20]
	return (__len < size() || __len > max_size()) ? max_size() : __len;
 801c6ee:	68f8      	ldr	r0, [r7, #12]
 801c6f0:	f000 f9bc 	bl	801ca6c <_ZNKSt6vectorIP14And_expressionSaIS1_EE4sizeEv>
 801c6f4:	4602      	mov	r2, r0
 801c6f6:	697b      	ldr	r3, [r7, #20]
 801c6f8:	4293      	cmp	r3, r2
 801c6fa:	d306      	bcc.n	801c70a <_ZNKSt6vectorIP14And_expressionSaIS1_EE12_M_check_lenEjPKc+0x7a>
 801c6fc:	68f8      	ldr	r0, [r7, #12]
 801c6fe:	f000 f9a4 	bl	801ca4a <_ZNKSt6vectorIP14And_expressionSaIS1_EE8max_sizeEv>
 801c702:	4602      	mov	r2, r0
 801c704:	697b      	ldr	r3, [r7, #20]
 801c706:	4293      	cmp	r3, r2
 801c708:	d904      	bls.n	801c714 <_ZNKSt6vectorIP14And_expressionSaIS1_EE12_M_check_lenEjPKc+0x84>
 801c70a:	68f8      	ldr	r0, [r7, #12]
 801c70c:	f000 f99d 	bl	801ca4a <_ZNKSt6vectorIP14And_expressionSaIS1_EE8max_sizeEv>
 801c710:	4603      	mov	r3, r0
 801c712:	e000      	b.n	801c716 <_ZNKSt6vectorIP14And_expressionSaIS1_EE12_M_check_lenEjPKc+0x86>
 801c714:	697b      	ldr	r3, [r7, #20]
      }
 801c716:	4618      	mov	r0, r3
 801c718:	371c      	adds	r7, #28
 801c71a:	46bd      	mov	sp, r7
 801c71c:	bd90      	pop	{r4, r7, pc}

0801c71e <_ZN9__gnu_cxxmiIPP14And_expressionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>:
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
 801c71e:	b590      	push	{r4, r7, lr}
 801c720:	b083      	sub	sp, #12
 801c722:	af00      	add	r7, sp, #0
 801c724:	6078      	str	r0, [r7, #4]
 801c726:	6039      	str	r1, [r7, #0]
    { return __lhs.base() - __rhs.base(); }
 801c728:	6878      	ldr	r0, [r7, #4]
 801c72a:	f7ee f9cc 	bl	800aac6 <_ZNK9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801c72e:	4603      	mov	r3, r0
 801c730:	681c      	ldr	r4, [r3, #0]
 801c732:	6838      	ldr	r0, [r7, #0]
 801c734:	f7ee f9c7 	bl	800aac6 <_ZNK9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801c738:	4603      	mov	r3, r0
 801c73a:	681b      	ldr	r3, [r3, #0]
 801c73c:	1ae3      	subs	r3, r4, r3
 801c73e:	109b      	asrs	r3, r3, #2
 801c740:	4618      	mov	r0, r3
 801c742:	370c      	adds	r7, #12
 801c744:	46bd      	mov	sp, r7
 801c746:	bd90      	pop	{r4, r7, pc}

0801c748 <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE11_M_allocateEj>:
      _M_allocate(size_t __n)
 801c748:	b580      	push	{r7, lr}
 801c74a:	b082      	sub	sp, #8
 801c74c:	af00      	add	r7, sp, #0
 801c74e:	6078      	str	r0, [r7, #4]
 801c750:	6039      	str	r1, [r7, #0]
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 801c752:	683b      	ldr	r3, [r7, #0]
 801c754:	2b00      	cmp	r3, #0
 801c756:	d006      	beq.n	801c766 <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE11_M_allocateEj+0x1e>
 801c758:	687b      	ldr	r3, [r7, #4]
 801c75a:	6839      	ldr	r1, [r7, #0]
 801c75c:	4618      	mov	r0, r3
 801c75e:	f000 f995 	bl	801ca8c <_ZNSt16allocator_traitsISaIP14And_expressionEE8allocateERS2_j>
 801c762:	4603      	mov	r3, r0
 801c764:	e000      	b.n	801c768 <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE11_M_allocateEj+0x20>
 801c766:	2300      	movs	r3, #0
      }
 801c768:	4618      	mov	r0, r3
 801c76a:	3708      	adds	r7, #8
 801c76c:	46bd      	mov	sp, r7
 801c76e:	bd80      	pop	{r7, pc}

0801c770 <_ZNSt6vectorIP14And_expressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
 801c770:	b590      	push	{r4, r7, lr}
 801c772:	b089      	sub	sp, #36	; 0x24
 801c774:	af02      	add	r7, sp, #8
 801c776:	60f8      	str	r0, [r7, #12]
 801c778:	60b9      	str	r1, [r7, #8]
 801c77a:	607a      	str	r2, [r7, #4]
 801c77c:	603b      	str	r3, [r7, #0]
	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
 801c77e:	f88d 4000 	strb.w	r4, [sp]
 801c782:	683b      	ldr	r3, [r7, #0]
 801c784:	687a      	ldr	r2, [r7, #4]
 801c786:	68b9      	ldr	r1, [r7, #8]
 801c788:	68f8      	ldr	r0, [r7, #12]
 801c78a:	f000 f98e 	bl	801caaa <_ZNSt6vectorIP14And_expressionSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>
 801c78e:	4603      	mov	r3, r0
      }
 801c790:	4618      	mov	r0, r3
 801c792:	371c      	adds	r7, #28
 801c794:	46bd      	mov	sp, r7
 801c796:	bd90      	pop	{r4, r7, pc}

0801c798 <_ZNK9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEEmiEi>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
 801c798:	b580      	push	{r7, lr}
 801c79a:	b084      	sub	sp, #16
 801c79c:	af00      	add	r7, sp, #0
 801c79e:	6078      	str	r0, [r7, #4]
 801c7a0:	6039      	str	r1, [r7, #0]
      { return __normal_iterator(_M_current - __n); }
 801c7a2:	687b      	ldr	r3, [r7, #4]
 801c7a4:	681a      	ldr	r2, [r3, #0]
 801c7a6:	683b      	ldr	r3, [r7, #0]
 801c7a8:	009b      	lsls	r3, r3, #2
 801c7aa:	425b      	negs	r3, r3
 801c7ac:	4413      	add	r3, r2
 801c7ae:	60fb      	str	r3, [r7, #12]
 801c7b0:	f107 020c 	add.w	r2, r7, #12
 801c7b4:	f107 0308 	add.w	r3, r7, #8
 801c7b8:	4611      	mov	r1, r2
 801c7ba:	4618      	mov	r0, r3
 801c7bc:	f7ee f973 	bl	800aaa6 <_ZN9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 801c7c0:	68bb      	ldr	r3, [r7, #8]
 801c7c2:	4618      	mov	r0, r3
 801c7c4:	3710      	adds	r7, #16
 801c7c6:	46bd      	mov	sp, r7
 801c7c8:	bd80      	pop	{r7, pc}

0801c7ca <_ZSt11__addressofIP10ExpressionEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 801c7ca:	b480      	push	{r7}
 801c7cc:	b083      	sub	sp, #12
 801c7ce:	af00      	add	r7, sp, #0
 801c7d0:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 801c7d2:	687b      	ldr	r3, [r7, #4]
 801c7d4:	4618      	mov	r0, r3
 801c7d6:	370c      	adds	r7, #12
 801c7d8:	46bd      	mov	sp, r7
 801c7da:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c7de:	4770      	bx	lr

0801c7e0 <_ZSt11__addressofIP17Primal_expressionEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 801c7e0:	b480      	push	{r7}
 801c7e2:	b083      	sub	sp, #12
 801c7e4:	af00      	add	r7, sp, #0
 801c7e6:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 801c7e8:	687b      	ldr	r3, [r7, #4]
 801c7ea:	4618      	mov	r0, r3
 801c7ec:	370c      	adds	r7, #12
 801c7ee:	46bd      	mov	sp, r7
 801c7f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c7f4:	4770      	bx	lr

0801c7f6 <_ZNKSt6vectorI13mult_operatorSaIS0_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
 801c7f6:	b580      	push	{r7, lr}
 801c7f8:	b082      	sub	sp, #8
 801c7fa:	af00      	add	r7, sp, #0
 801c7fc:	6078      	str	r0, [r7, #4]
      { return _S_max_size(_M_get_Tp_allocator()); }
 801c7fe:	687b      	ldr	r3, [r7, #4]
 801c800:	4618      	mov	r0, r3
 801c802:	f000 f97e 	bl	801cb02 <_ZNKSt12_Vector_baseI13mult_operatorSaIS0_EE19_M_get_Tp_allocatorEv>
 801c806:	4603      	mov	r3, r0
 801c808:	4618      	mov	r0, r3
 801c80a:	f000 f960 	bl	801cace <_ZNSt6vectorI13mult_operatorSaIS0_EE11_S_max_sizeERKS1_>
 801c80e:	4603      	mov	r3, r0
 801c810:	4618      	mov	r0, r3
 801c812:	3708      	adds	r7, #8
 801c814:	46bd      	mov	sp, r7
 801c816:	bd80      	pop	{r7, pc}

0801c818 <_ZNSt16allocator_traitsISaI13mult_operatorEE8allocateERS1_j>:
      allocate(allocator_type& __a, size_type __n)
 801c818:	b580      	push	{r7, lr}
 801c81a:	b082      	sub	sp, #8
 801c81c:	af00      	add	r7, sp, #0
 801c81e:	6078      	str	r0, [r7, #4]
 801c820:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 801c822:	2200      	movs	r2, #0
 801c824:	6839      	ldr	r1, [r7, #0]
 801c826:	6878      	ldr	r0, [r7, #4]
 801c828:	f000 f976 	bl	801cb18 <_ZN9__gnu_cxx13new_allocatorI13mult_operatorE8allocateEjPKv>
 801c82c:	4603      	mov	r3, r0
 801c82e:	4618      	mov	r0, r3
 801c830:	3708      	adds	r7, #8
 801c832:	46bd      	mov	sp, r7
 801c834:	bd80      	pop	{r7, pc}

0801c836 <_ZNSt6vectorI13mult_operatorSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE>:
      _S_do_relocate(pointer __first, pointer __last, pointer __result,
 801c836:	b580      	push	{r7, lr}
 801c838:	b084      	sub	sp, #16
 801c83a:	af00      	add	r7, sp, #0
 801c83c:	60f8      	str	r0, [r7, #12]
 801c83e:	60b9      	str	r1, [r7, #8]
 801c840:	607a      	str	r2, [r7, #4]
 801c842:	603b      	str	r3, [r7, #0]
	return std::__relocate_a(__first, __last, __result, __alloc);
 801c844:	683b      	ldr	r3, [r7, #0]
 801c846:	687a      	ldr	r2, [r7, #4]
 801c848:	68b9      	ldr	r1, [r7, #8]
 801c84a:	68f8      	ldr	r0, [r7, #12]
 801c84c:	f000 f981 	bl	801cb52 <_ZSt12__relocate_aIP13mult_operatorS1_SaIS0_EET0_T_S4_S3_RT1_>
 801c850:	4603      	mov	r3, r0
      }
 801c852:	4618      	mov	r0, r3
 801c854:	3710      	adds	r7, #16
 801c856:	46bd      	mov	sp, r7
 801c858:	bd80      	pop	{r7, pc}

0801c85a <_ZNKSt6vectorIP16Power_expressionSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
 801c85a:	b580      	push	{r7, lr}
 801c85c:	b082      	sub	sp, #8
 801c85e:	af00      	add	r7, sp, #0
 801c860:	6078      	str	r0, [r7, #4]
      { return _S_max_size(_M_get_Tp_allocator()); }
 801c862:	687b      	ldr	r3, [r7, #4]
 801c864:	4618      	mov	r0, r3
 801c866:	f000 f9ab 	bl	801cbc0 <_ZNKSt12_Vector_baseIP16Power_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 801c86a:	4603      	mov	r3, r0
 801c86c:	4618      	mov	r0, r3
 801c86e:	f000 f98d 	bl	801cb8c <_ZNSt6vectorIP16Power_expressionSaIS1_EE11_S_max_sizeERKS2_>
 801c872:	4603      	mov	r3, r0
 801c874:	4618      	mov	r0, r3
 801c876:	3708      	adds	r7, #8
 801c878:	46bd      	mov	sp, r7
 801c87a:	bd80      	pop	{r7, pc}

0801c87c <_ZNKSt6vectorIP16Power_expressionSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 801c87c:	b480      	push	{r7}
 801c87e:	b083      	sub	sp, #12
 801c880:	af00      	add	r7, sp, #0
 801c882:	6078      	str	r0, [r7, #4]
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 801c884:	687b      	ldr	r3, [r7, #4]
 801c886:	685a      	ldr	r2, [r3, #4]
 801c888:	687b      	ldr	r3, [r7, #4]
 801c88a:	681b      	ldr	r3, [r3, #0]
 801c88c:	1ad3      	subs	r3, r2, r3
 801c88e:	109b      	asrs	r3, r3, #2
 801c890:	4618      	mov	r0, r3
 801c892:	370c      	adds	r7, #12
 801c894:	46bd      	mov	sp, r7
 801c896:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c89a:	4770      	bx	lr

0801c89c <_ZNSt16allocator_traitsISaIP16Power_expressionEE8allocateERS2_j>:
      allocate(allocator_type& __a, size_type __n)
 801c89c:	b580      	push	{r7, lr}
 801c89e:	b082      	sub	sp, #8
 801c8a0:	af00      	add	r7, sp, #0
 801c8a2:	6078      	str	r0, [r7, #4]
 801c8a4:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 801c8a6:	2200      	movs	r2, #0
 801c8a8:	6839      	ldr	r1, [r7, #0]
 801c8aa:	6878      	ldr	r0, [r7, #4]
 801c8ac:	f000 f993 	bl	801cbd6 <_ZN9__gnu_cxx13new_allocatorIP16Power_expressionE8allocateEjPKv>
 801c8b0:	4603      	mov	r3, r0
 801c8b2:	4618      	mov	r0, r3
 801c8b4:	3708      	adds	r7, #8
 801c8b6:	46bd      	mov	sp, r7
 801c8b8:	bd80      	pop	{r7, pc}

0801c8ba <_ZNSt6vectorIP16Power_expressionSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>:
      _S_do_relocate(pointer __first, pointer __last, pointer __result,
 801c8ba:	b580      	push	{r7, lr}
 801c8bc:	b084      	sub	sp, #16
 801c8be:	af00      	add	r7, sp, #0
 801c8c0:	60f8      	str	r0, [r7, #12]
 801c8c2:	60b9      	str	r1, [r7, #8]
 801c8c4:	607a      	str	r2, [r7, #4]
 801c8c6:	603b      	str	r3, [r7, #0]
	return std::__relocate_a(__first, __last, __result, __alloc);
 801c8c8:	683b      	ldr	r3, [r7, #0]
 801c8ca:	687a      	ldr	r2, [r7, #4]
 801c8cc:	68b9      	ldr	r1, [r7, #8]
 801c8ce:	68f8      	ldr	r0, [r7, #12]
 801c8d0:	f000 f9a0 	bl	801cc14 <_ZSt12__relocate_aIPP16Power_expressionS2_SaIS1_EET0_T_S5_S4_RT1_>
 801c8d4:	4603      	mov	r3, r0
      }
 801c8d6:	4618      	mov	r0, r3
 801c8d8:	3710      	adds	r7, #16
 801c8da:	46bd      	mov	sp, r7
 801c8dc:	bd80      	pop	{r7, pc}

0801c8de <_ZNKSt6vectorI12sum_operatorSaIS0_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
 801c8de:	b580      	push	{r7, lr}
 801c8e0:	b082      	sub	sp, #8
 801c8e2:	af00      	add	r7, sp, #0
 801c8e4:	6078      	str	r0, [r7, #4]
      { return _S_max_size(_M_get_Tp_allocator()); }
 801c8e6:	687b      	ldr	r3, [r7, #4]
 801c8e8:	4618      	mov	r0, r3
 801c8ea:	f000 f9ca 	bl	801cc82 <_ZNKSt12_Vector_baseI12sum_operatorSaIS0_EE19_M_get_Tp_allocatorEv>
 801c8ee:	4603      	mov	r3, r0
 801c8f0:	4618      	mov	r0, r3
 801c8f2:	f000 f9ac 	bl	801cc4e <_ZNSt6vectorI12sum_operatorSaIS0_EE11_S_max_sizeERKS1_>
 801c8f6:	4603      	mov	r3, r0
 801c8f8:	4618      	mov	r0, r3
 801c8fa:	3708      	adds	r7, #8
 801c8fc:	46bd      	mov	sp, r7
 801c8fe:	bd80      	pop	{r7, pc}

0801c900 <_ZNSt16allocator_traitsISaI12sum_operatorEE8allocateERS1_j>:
      allocate(allocator_type& __a, size_type __n)
 801c900:	b580      	push	{r7, lr}
 801c902:	b082      	sub	sp, #8
 801c904:	af00      	add	r7, sp, #0
 801c906:	6078      	str	r0, [r7, #4]
 801c908:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 801c90a:	2200      	movs	r2, #0
 801c90c:	6839      	ldr	r1, [r7, #0]
 801c90e:	6878      	ldr	r0, [r7, #4]
 801c910:	f000 f9c2 	bl	801cc98 <_ZN9__gnu_cxx13new_allocatorI12sum_operatorE8allocateEjPKv>
 801c914:	4603      	mov	r3, r0
 801c916:	4618      	mov	r0, r3
 801c918:	3708      	adds	r7, #8
 801c91a:	46bd      	mov	sp, r7
 801c91c:	bd80      	pop	{r7, pc}

0801c91e <_ZNSt6vectorI12sum_operatorSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE>:
      _S_do_relocate(pointer __first, pointer __last, pointer __result,
 801c91e:	b580      	push	{r7, lr}
 801c920:	b084      	sub	sp, #16
 801c922:	af00      	add	r7, sp, #0
 801c924:	60f8      	str	r0, [r7, #12]
 801c926:	60b9      	str	r1, [r7, #8]
 801c928:	607a      	str	r2, [r7, #4]
 801c92a:	603b      	str	r3, [r7, #0]
	return std::__relocate_a(__first, __last, __result, __alloc);
 801c92c:	683b      	ldr	r3, [r7, #0]
 801c92e:	687a      	ldr	r2, [r7, #4]
 801c930:	68b9      	ldr	r1, [r7, #8]
 801c932:	68f8      	ldr	r0, [r7, #12]
 801c934:	f000 f9cd 	bl	801ccd2 <_ZSt12__relocate_aIP12sum_operatorS1_SaIS0_EET0_T_S4_S3_RT1_>
 801c938:	4603      	mov	r3, r0
      }
 801c93a:	4618      	mov	r0, r3
 801c93c:	3710      	adds	r7, #16
 801c93e:	46bd      	mov	sp, r7
 801c940:	bd80      	pop	{r7, pc}

0801c942 <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
 801c942:	b580      	push	{r7, lr}
 801c944:	b082      	sub	sp, #8
 801c946:	af00      	add	r7, sp, #0
 801c948:	6078      	str	r0, [r7, #4]
      { return _S_max_size(_M_get_Tp_allocator()); }
 801c94a:	687b      	ldr	r3, [r7, #4]
 801c94c:	4618      	mov	r0, r3
 801c94e:	f000 f9f7 	bl	801cd40 <_ZNKSt12_Vector_baseIP19Multiply_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 801c952:	4603      	mov	r3, r0
 801c954:	4618      	mov	r0, r3
 801c956:	f000 f9d9 	bl	801cd0c <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE11_S_max_sizeERKS2_>
 801c95a:	4603      	mov	r3, r0
 801c95c:	4618      	mov	r0, r3
 801c95e:	3708      	adds	r7, #8
 801c960:	46bd      	mov	sp, r7
 801c962:	bd80      	pop	{r7, pc}

0801c964 <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 801c964:	b480      	push	{r7}
 801c966:	b083      	sub	sp, #12
 801c968:	af00      	add	r7, sp, #0
 801c96a:	6078      	str	r0, [r7, #4]
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 801c96c:	687b      	ldr	r3, [r7, #4]
 801c96e:	685a      	ldr	r2, [r3, #4]
 801c970:	687b      	ldr	r3, [r7, #4]
 801c972:	681b      	ldr	r3, [r3, #0]
 801c974:	1ad3      	subs	r3, r2, r3
 801c976:	109b      	asrs	r3, r3, #2
 801c978:	4618      	mov	r0, r3
 801c97a:	370c      	adds	r7, #12
 801c97c:	46bd      	mov	sp, r7
 801c97e:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c982:	4770      	bx	lr

0801c984 <_ZNSt16allocator_traitsISaIP19Multiply_expressionEE8allocateERS2_j>:
      allocate(allocator_type& __a, size_type __n)
 801c984:	b580      	push	{r7, lr}
 801c986:	b082      	sub	sp, #8
 801c988:	af00      	add	r7, sp, #0
 801c98a:	6078      	str	r0, [r7, #4]
 801c98c:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 801c98e:	2200      	movs	r2, #0
 801c990:	6839      	ldr	r1, [r7, #0]
 801c992:	6878      	ldr	r0, [r7, #4]
 801c994:	f000 f9df 	bl	801cd56 <_ZN9__gnu_cxx13new_allocatorIP19Multiply_expressionE8allocateEjPKv>
 801c998:	4603      	mov	r3, r0
 801c99a:	4618      	mov	r0, r3
 801c99c:	3708      	adds	r7, #8
 801c99e:	46bd      	mov	sp, r7
 801c9a0:	bd80      	pop	{r7, pc}

0801c9a2 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>:
      _S_do_relocate(pointer __first, pointer __last, pointer __result,
 801c9a2:	b580      	push	{r7, lr}
 801c9a4:	b084      	sub	sp, #16
 801c9a6:	af00      	add	r7, sp, #0
 801c9a8:	60f8      	str	r0, [r7, #12]
 801c9aa:	60b9      	str	r1, [r7, #8]
 801c9ac:	607a      	str	r2, [r7, #4]
 801c9ae:	603b      	str	r3, [r7, #0]
	return std::__relocate_a(__first, __last, __result, __alloc);
 801c9b0:	683b      	ldr	r3, [r7, #0]
 801c9b2:	687a      	ldr	r2, [r7, #4]
 801c9b4:	68b9      	ldr	r1, [r7, #8]
 801c9b6:	68f8      	ldr	r0, [r7, #12]
 801c9b8:	f000 f9ec 	bl	801cd94 <_ZSt12__relocate_aIPP19Multiply_expressionS2_SaIS1_EET0_T_S5_S4_RT1_>
 801c9bc:	4603      	mov	r3, r0
      }
 801c9be:	4618      	mov	r0, r3
 801c9c0:	3710      	adds	r7, #16
 801c9c2:	46bd      	mov	sp, r7
 801c9c4:	bd80      	pop	{r7, pc}

0801c9c6 <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
 801c9c6:	b580      	push	{r7, lr}
 801c9c8:	b082      	sub	sp, #8
 801c9ca:	af00      	add	r7, sp, #0
 801c9cc:	6078      	str	r0, [r7, #4]
      { return _S_max_size(_M_get_Tp_allocator()); }
 801c9ce:	687b      	ldr	r3, [r7, #4]
 801c9d0:	4618      	mov	r0, r3
 801c9d2:	f000 fa16 	bl	801ce02 <_ZNKSt12_Vector_baseIP18Compare_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 801c9d6:	4603      	mov	r3, r0
 801c9d8:	4618      	mov	r0, r3
 801c9da:	f000 f9f8 	bl	801cdce <_ZNSt6vectorIP18Compare_expressionSaIS1_EE11_S_max_sizeERKS2_>
 801c9de:	4603      	mov	r3, r0
 801c9e0:	4618      	mov	r0, r3
 801c9e2:	3708      	adds	r7, #8
 801c9e4:	46bd      	mov	sp, r7
 801c9e6:	bd80      	pop	{r7, pc}

0801c9e8 <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 801c9e8:	b480      	push	{r7}
 801c9ea:	b083      	sub	sp, #12
 801c9ec:	af00      	add	r7, sp, #0
 801c9ee:	6078      	str	r0, [r7, #4]
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 801c9f0:	687b      	ldr	r3, [r7, #4]
 801c9f2:	685a      	ldr	r2, [r3, #4]
 801c9f4:	687b      	ldr	r3, [r7, #4]
 801c9f6:	681b      	ldr	r3, [r3, #0]
 801c9f8:	1ad3      	subs	r3, r2, r3
 801c9fa:	109b      	asrs	r3, r3, #2
 801c9fc:	4618      	mov	r0, r3
 801c9fe:	370c      	adds	r7, #12
 801ca00:	46bd      	mov	sp, r7
 801ca02:	f85d 7b04 	ldr.w	r7, [sp], #4
 801ca06:	4770      	bx	lr

0801ca08 <_ZNSt16allocator_traitsISaIP18Compare_expressionEE8allocateERS2_j>:
      allocate(allocator_type& __a, size_type __n)
 801ca08:	b580      	push	{r7, lr}
 801ca0a:	b082      	sub	sp, #8
 801ca0c:	af00      	add	r7, sp, #0
 801ca0e:	6078      	str	r0, [r7, #4]
 801ca10:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 801ca12:	2200      	movs	r2, #0
 801ca14:	6839      	ldr	r1, [r7, #0]
 801ca16:	6878      	ldr	r0, [r7, #4]
 801ca18:	f000 f9fe 	bl	801ce18 <_ZN9__gnu_cxx13new_allocatorIP18Compare_expressionE8allocateEjPKv>
 801ca1c:	4603      	mov	r3, r0
 801ca1e:	4618      	mov	r0, r3
 801ca20:	3708      	adds	r7, #8
 801ca22:	46bd      	mov	sp, r7
 801ca24:	bd80      	pop	{r7, pc}

0801ca26 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>:
      _S_do_relocate(pointer __first, pointer __last, pointer __result,
 801ca26:	b580      	push	{r7, lr}
 801ca28:	b084      	sub	sp, #16
 801ca2a:	af00      	add	r7, sp, #0
 801ca2c:	60f8      	str	r0, [r7, #12]
 801ca2e:	60b9      	str	r1, [r7, #8]
 801ca30:	607a      	str	r2, [r7, #4]
 801ca32:	603b      	str	r3, [r7, #0]
	return std::__relocate_a(__first, __last, __result, __alloc);
 801ca34:	683b      	ldr	r3, [r7, #0]
 801ca36:	687a      	ldr	r2, [r7, #4]
 801ca38:	68b9      	ldr	r1, [r7, #8]
 801ca3a:	68f8      	ldr	r0, [r7, #12]
 801ca3c:	f000 fa0b 	bl	801ce56 <_ZSt12__relocate_aIPP18Compare_expressionS2_SaIS1_EET0_T_S5_S4_RT1_>
 801ca40:	4603      	mov	r3, r0
      }
 801ca42:	4618      	mov	r0, r3
 801ca44:	3710      	adds	r7, #16
 801ca46:	46bd      	mov	sp, r7
 801ca48:	bd80      	pop	{r7, pc}

0801ca4a <_ZNKSt6vectorIP14And_expressionSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
 801ca4a:	b580      	push	{r7, lr}
 801ca4c:	b082      	sub	sp, #8
 801ca4e:	af00      	add	r7, sp, #0
 801ca50:	6078      	str	r0, [r7, #4]
      { return _S_max_size(_M_get_Tp_allocator()); }
 801ca52:	687b      	ldr	r3, [r7, #4]
 801ca54:	4618      	mov	r0, r3
 801ca56:	f000 fa35 	bl	801cec4 <_ZNKSt12_Vector_baseIP14And_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 801ca5a:	4603      	mov	r3, r0
 801ca5c:	4618      	mov	r0, r3
 801ca5e:	f000 fa17 	bl	801ce90 <_ZNSt6vectorIP14And_expressionSaIS1_EE11_S_max_sizeERKS2_>
 801ca62:	4603      	mov	r3, r0
 801ca64:	4618      	mov	r0, r3
 801ca66:	3708      	adds	r7, #8
 801ca68:	46bd      	mov	sp, r7
 801ca6a:	bd80      	pop	{r7, pc}

0801ca6c <_ZNKSt6vectorIP14And_expressionSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 801ca6c:	b480      	push	{r7}
 801ca6e:	b083      	sub	sp, #12
 801ca70:	af00      	add	r7, sp, #0
 801ca72:	6078      	str	r0, [r7, #4]
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 801ca74:	687b      	ldr	r3, [r7, #4]
 801ca76:	685a      	ldr	r2, [r3, #4]
 801ca78:	687b      	ldr	r3, [r7, #4]
 801ca7a:	681b      	ldr	r3, [r3, #0]
 801ca7c:	1ad3      	subs	r3, r2, r3
 801ca7e:	109b      	asrs	r3, r3, #2
 801ca80:	4618      	mov	r0, r3
 801ca82:	370c      	adds	r7, #12
 801ca84:	46bd      	mov	sp, r7
 801ca86:	f85d 7b04 	ldr.w	r7, [sp], #4
 801ca8a:	4770      	bx	lr

0801ca8c <_ZNSt16allocator_traitsISaIP14And_expressionEE8allocateERS2_j>:
      allocate(allocator_type& __a, size_type __n)
 801ca8c:	b580      	push	{r7, lr}
 801ca8e:	b082      	sub	sp, #8
 801ca90:	af00      	add	r7, sp, #0
 801ca92:	6078      	str	r0, [r7, #4]
 801ca94:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 801ca96:	2200      	movs	r2, #0
 801ca98:	6839      	ldr	r1, [r7, #0]
 801ca9a:	6878      	ldr	r0, [r7, #4]
 801ca9c:	f000 fa1d 	bl	801ceda <_ZN9__gnu_cxx13new_allocatorIP14And_expressionE8allocateEjPKv>
 801caa0:	4603      	mov	r3, r0
 801caa2:	4618      	mov	r0, r3
 801caa4:	3708      	adds	r7, #8
 801caa6:	46bd      	mov	sp, r7
 801caa8:	bd80      	pop	{r7, pc}

0801caaa <_ZNSt6vectorIP14And_expressionSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>:
      _S_do_relocate(pointer __first, pointer __last, pointer __result,
 801caaa:	b580      	push	{r7, lr}
 801caac:	b084      	sub	sp, #16
 801caae:	af00      	add	r7, sp, #0
 801cab0:	60f8      	str	r0, [r7, #12]
 801cab2:	60b9      	str	r1, [r7, #8]
 801cab4:	607a      	str	r2, [r7, #4]
 801cab6:	603b      	str	r3, [r7, #0]
	return std::__relocate_a(__first, __last, __result, __alloc);
 801cab8:	683b      	ldr	r3, [r7, #0]
 801caba:	687a      	ldr	r2, [r7, #4]
 801cabc:	68b9      	ldr	r1, [r7, #8]
 801cabe:	68f8      	ldr	r0, [r7, #12]
 801cac0:	f000 fa2a 	bl	801cf18 <_ZSt12__relocate_aIPP14And_expressionS2_SaIS1_EET0_T_S5_S4_RT1_>
 801cac4:	4603      	mov	r3, r0
      }
 801cac6:	4618      	mov	r0, r3
 801cac8:	3710      	adds	r7, #16
 801caca:	46bd      	mov	sp, r7
 801cacc:	bd80      	pop	{r7, pc}

0801cace <_ZNSt6vectorI13mult_operatorSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
 801cace:	b580      	push	{r7, lr}
 801cad0:	b084      	sub	sp, #16
 801cad2:	af00      	add	r7, sp, #0
 801cad4:	6078      	str	r0, [r7, #4]
	const size_t __diffmax
 801cad6:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 801cada:	60fb      	str	r3, [r7, #12]
	const size_t __allocmax = _Alloc_traits::max_size(__a);
 801cadc:	6878      	ldr	r0, [r7, #4]
 801cade:	f000 fa38 	bl	801cf52 <_ZNSt16allocator_traitsISaI13mult_operatorEE8max_sizeERKS1_>
 801cae2:	4603      	mov	r3, r0
 801cae4:	60bb      	str	r3, [r7, #8]
	return (std::min)(__diffmax, __allocmax);
 801cae6:	f107 0208 	add.w	r2, r7, #8
 801caea:	f107 030c 	add.w	r3, r7, #12
 801caee:	4611      	mov	r1, r2
 801caf0:	4618      	mov	r0, r3
 801caf2:	f7f9 f9df 	bl	8015eb4 <_ZSt3minIjERKT_S2_S2_>
 801caf6:	4603      	mov	r3, r0
 801caf8:	681b      	ldr	r3, [r3, #0]
      }
 801cafa:	4618      	mov	r0, r3
 801cafc:	3710      	adds	r7, #16
 801cafe:	46bd      	mov	sp, r7
 801cb00:	bd80      	pop	{r7, pc}

0801cb02 <_ZNKSt12_Vector_baseI13mult_operatorSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 801cb02:	b480      	push	{r7}
 801cb04:	b083      	sub	sp, #12
 801cb06:	af00      	add	r7, sp, #0
 801cb08:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 801cb0a:	687b      	ldr	r3, [r7, #4]
 801cb0c:	4618      	mov	r0, r3
 801cb0e:	370c      	adds	r7, #12
 801cb10:	46bd      	mov	sp, r7
 801cb12:	f85d 7b04 	ldr.w	r7, [sp], #4
 801cb16:	4770      	bx	lr

0801cb18 <_ZN9__gnu_cxx13new_allocatorI13mult_operatorE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 801cb18:	b580      	push	{r7, lr}
 801cb1a:	b084      	sub	sp, #16
 801cb1c:	af00      	add	r7, sp, #0
 801cb1e:	60f8      	str	r0, [r7, #12]
 801cb20:	60b9      	str	r1, [r7, #8]
 801cb22:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 801cb24:	68f8      	ldr	r0, [r7, #12]
 801cb26:	f000 fa20 	bl	801cf6a <_ZNK9__gnu_cxx13new_allocatorI13mult_operatorE8max_sizeEv>
 801cb2a:	4602      	mov	r2, r0
 801cb2c:	68bb      	ldr	r3, [r7, #8]
 801cb2e:	4293      	cmp	r3, r2
 801cb30:	bf8c      	ite	hi
 801cb32:	2301      	movhi	r3, #1
 801cb34:	2300      	movls	r3, #0
 801cb36:	b2db      	uxtb	r3, r3
 801cb38:	2b00      	cmp	r3, #0
 801cb3a:	d001      	beq.n	801cb40 <_ZN9__gnu_cxx13new_allocatorI13mult_operatorE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 801cb3c:	f005 ff38 	bl	80229b0 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 801cb40:	68b8      	ldr	r0, [r7, #8]
 801cb42:	f005 fe70 	bl	8022826 <_Znwj>
 801cb46:	4603      	mov	r3, r0
 801cb48:	bf00      	nop
      }
 801cb4a:	4618      	mov	r0, r3
 801cb4c:	3710      	adds	r7, #16
 801cb4e:	46bd      	mov	sp, r7
 801cb50:	bd80      	pop	{r7, pc}

0801cb52 <_ZSt12__relocate_aIP13mult_operatorS1_SaIS0_EET0_T_S4_S3_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
 801cb52:	b5b0      	push	{r4, r5, r7, lr}
 801cb54:	b084      	sub	sp, #16
 801cb56:	af00      	add	r7, sp, #0
 801cb58:	60f8      	str	r0, [r7, #12]
 801cb5a:	60b9      	str	r1, [r7, #8]
 801cb5c:	607a      	str	r2, [r7, #4]
 801cb5e:	603b      	str	r3, [r7, #0]
      return __relocate_a_1(std::__niter_base(__first),
 801cb60:	68f8      	ldr	r0, [r7, #12]
 801cb62:	f000 fa0e 	bl	801cf82 <_ZSt12__niter_baseIP13mult_operatorET_S2_>
 801cb66:	4604      	mov	r4, r0
 801cb68:	68b8      	ldr	r0, [r7, #8]
 801cb6a:	f000 fa0a 	bl	801cf82 <_ZSt12__niter_baseIP13mult_operatorET_S2_>
 801cb6e:	4605      	mov	r5, r0
 801cb70:	6878      	ldr	r0, [r7, #4]
 801cb72:	f000 fa06 	bl	801cf82 <_ZSt12__niter_baseIP13mult_operatorET_S2_>
 801cb76:	4602      	mov	r2, r0
 801cb78:	683b      	ldr	r3, [r7, #0]
 801cb7a:	4629      	mov	r1, r5
 801cb7c:	4620      	mov	r0, r4
 801cb7e:	f000 fa0b 	bl	801cf98 <_ZSt14__relocate_a_1I13mult_operatorS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E>
 801cb82:	4603      	mov	r3, r0
    }
 801cb84:	4618      	mov	r0, r3
 801cb86:	3710      	adds	r7, #16
 801cb88:	46bd      	mov	sp, r7
 801cb8a:	bdb0      	pop	{r4, r5, r7, pc}

0801cb8c <_ZNSt6vectorIP16Power_expressionSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
 801cb8c:	b580      	push	{r7, lr}
 801cb8e:	b084      	sub	sp, #16
 801cb90:	af00      	add	r7, sp, #0
 801cb92:	6078      	str	r0, [r7, #4]
	const size_t __diffmax
 801cb94:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
 801cb98:	60fb      	str	r3, [r7, #12]
	const size_t __allocmax = _Alloc_traits::max_size(__a);
 801cb9a:	6878      	ldr	r0, [r7, #4]
 801cb9c:	f000 fa17 	bl	801cfce <_ZNSt16allocator_traitsISaIP16Power_expressionEE8max_sizeERKS2_>
 801cba0:	4603      	mov	r3, r0
 801cba2:	60bb      	str	r3, [r7, #8]
	return (std::min)(__diffmax, __allocmax);
 801cba4:	f107 0208 	add.w	r2, r7, #8
 801cba8:	f107 030c 	add.w	r3, r7, #12
 801cbac:	4611      	mov	r1, r2
 801cbae:	4618      	mov	r0, r3
 801cbb0:	f7f9 f980 	bl	8015eb4 <_ZSt3minIjERKT_S2_S2_>
 801cbb4:	4603      	mov	r3, r0
 801cbb6:	681b      	ldr	r3, [r3, #0]
      }
 801cbb8:	4618      	mov	r0, r3
 801cbba:	3710      	adds	r7, #16
 801cbbc:	46bd      	mov	sp, r7
 801cbbe:	bd80      	pop	{r7, pc}

0801cbc0 <_ZNKSt12_Vector_baseIP16Power_expressionSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 801cbc0:	b480      	push	{r7}
 801cbc2:	b083      	sub	sp, #12
 801cbc4:	af00      	add	r7, sp, #0
 801cbc6:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 801cbc8:	687b      	ldr	r3, [r7, #4]
 801cbca:	4618      	mov	r0, r3
 801cbcc:	370c      	adds	r7, #12
 801cbce:	46bd      	mov	sp, r7
 801cbd0:	f85d 7b04 	ldr.w	r7, [sp], #4
 801cbd4:	4770      	bx	lr

0801cbd6 <_ZN9__gnu_cxx13new_allocatorIP16Power_expressionE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 801cbd6:	b580      	push	{r7, lr}
 801cbd8:	b084      	sub	sp, #16
 801cbda:	af00      	add	r7, sp, #0
 801cbdc:	60f8      	str	r0, [r7, #12]
 801cbde:	60b9      	str	r1, [r7, #8]
 801cbe0:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 801cbe2:	68f8      	ldr	r0, [r7, #12]
 801cbe4:	f000 f9ff 	bl	801cfe6 <_ZNK9__gnu_cxx13new_allocatorIP16Power_expressionE8max_sizeEv>
 801cbe8:	4602      	mov	r2, r0
 801cbea:	68bb      	ldr	r3, [r7, #8]
 801cbec:	4293      	cmp	r3, r2
 801cbee:	bf8c      	ite	hi
 801cbf0:	2301      	movhi	r3, #1
 801cbf2:	2300      	movls	r3, #0
 801cbf4:	b2db      	uxtb	r3, r3
 801cbf6:	2b00      	cmp	r3, #0
 801cbf8:	d001      	beq.n	801cbfe <_ZN9__gnu_cxx13new_allocatorIP16Power_expressionE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 801cbfa:	f005 fed9 	bl	80229b0 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 801cbfe:	68bb      	ldr	r3, [r7, #8]
 801cc00:	009b      	lsls	r3, r3, #2
 801cc02:	4618      	mov	r0, r3
 801cc04:	f005 fe0f 	bl	8022826 <_Znwj>
 801cc08:	4603      	mov	r3, r0
 801cc0a:	bf00      	nop
      }
 801cc0c:	4618      	mov	r0, r3
 801cc0e:	3710      	adds	r7, #16
 801cc10:	46bd      	mov	sp, r7
 801cc12:	bd80      	pop	{r7, pc}

0801cc14 <_ZSt12__relocate_aIPP16Power_expressionS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
 801cc14:	b5b0      	push	{r4, r5, r7, lr}
 801cc16:	b084      	sub	sp, #16
 801cc18:	af00      	add	r7, sp, #0
 801cc1a:	60f8      	str	r0, [r7, #12]
 801cc1c:	60b9      	str	r1, [r7, #8]
 801cc1e:	607a      	str	r2, [r7, #4]
 801cc20:	603b      	str	r3, [r7, #0]
      return __relocate_a_1(std::__niter_base(__first),
 801cc22:	68f8      	ldr	r0, [r7, #12]
 801cc24:	f000 f9eb 	bl	801cffe <_ZSt12__niter_baseIPP16Power_expressionET_S3_>
 801cc28:	4604      	mov	r4, r0
 801cc2a:	68b8      	ldr	r0, [r7, #8]
 801cc2c:	f000 f9e7 	bl	801cffe <_ZSt12__niter_baseIPP16Power_expressionET_S3_>
 801cc30:	4605      	mov	r5, r0
 801cc32:	6878      	ldr	r0, [r7, #4]
 801cc34:	f000 f9e3 	bl	801cffe <_ZSt12__niter_baseIPP16Power_expressionET_S3_>
 801cc38:	4602      	mov	r2, r0
 801cc3a:	683b      	ldr	r3, [r7, #0]
 801cc3c:	4629      	mov	r1, r5
 801cc3e:	4620      	mov	r0, r4
 801cc40:	f000 f9e8 	bl	801d014 <_ZSt14__relocate_a_1IP16Power_expressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
 801cc44:	4603      	mov	r3, r0
    }
 801cc46:	4618      	mov	r0, r3
 801cc48:	3710      	adds	r7, #16
 801cc4a:	46bd      	mov	sp, r7
 801cc4c:	bdb0      	pop	{r4, r5, r7, pc}

0801cc4e <_ZNSt6vectorI12sum_operatorSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
 801cc4e:	b580      	push	{r7, lr}
 801cc50:	b084      	sub	sp, #16
 801cc52:	af00      	add	r7, sp, #0
 801cc54:	6078      	str	r0, [r7, #4]
	const size_t __diffmax
 801cc56:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 801cc5a:	60fb      	str	r3, [r7, #12]
	const size_t __allocmax = _Alloc_traits::max_size(__a);
 801cc5c:	6878      	ldr	r0, [r7, #4]
 801cc5e:	f000 f9f7 	bl	801d050 <_ZNSt16allocator_traitsISaI12sum_operatorEE8max_sizeERKS1_>
 801cc62:	4603      	mov	r3, r0
 801cc64:	60bb      	str	r3, [r7, #8]
	return (std::min)(__diffmax, __allocmax);
 801cc66:	f107 0208 	add.w	r2, r7, #8
 801cc6a:	f107 030c 	add.w	r3, r7, #12
 801cc6e:	4611      	mov	r1, r2
 801cc70:	4618      	mov	r0, r3
 801cc72:	f7f9 f91f 	bl	8015eb4 <_ZSt3minIjERKT_S2_S2_>
 801cc76:	4603      	mov	r3, r0
 801cc78:	681b      	ldr	r3, [r3, #0]
      }
 801cc7a:	4618      	mov	r0, r3
 801cc7c:	3710      	adds	r7, #16
 801cc7e:	46bd      	mov	sp, r7
 801cc80:	bd80      	pop	{r7, pc}

0801cc82 <_ZNKSt12_Vector_baseI12sum_operatorSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 801cc82:	b480      	push	{r7}
 801cc84:	b083      	sub	sp, #12
 801cc86:	af00      	add	r7, sp, #0
 801cc88:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 801cc8a:	687b      	ldr	r3, [r7, #4]
 801cc8c:	4618      	mov	r0, r3
 801cc8e:	370c      	adds	r7, #12
 801cc90:	46bd      	mov	sp, r7
 801cc92:	f85d 7b04 	ldr.w	r7, [sp], #4
 801cc96:	4770      	bx	lr

0801cc98 <_ZN9__gnu_cxx13new_allocatorI12sum_operatorE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 801cc98:	b580      	push	{r7, lr}
 801cc9a:	b084      	sub	sp, #16
 801cc9c:	af00      	add	r7, sp, #0
 801cc9e:	60f8      	str	r0, [r7, #12]
 801cca0:	60b9      	str	r1, [r7, #8]
 801cca2:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 801cca4:	68f8      	ldr	r0, [r7, #12]
 801cca6:	f000 f9df 	bl	801d068 <_ZNK9__gnu_cxx13new_allocatorI12sum_operatorE8max_sizeEv>
 801ccaa:	4602      	mov	r2, r0
 801ccac:	68bb      	ldr	r3, [r7, #8]
 801ccae:	4293      	cmp	r3, r2
 801ccb0:	bf8c      	ite	hi
 801ccb2:	2301      	movhi	r3, #1
 801ccb4:	2300      	movls	r3, #0
 801ccb6:	b2db      	uxtb	r3, r3
 801ccb8:	2b00      	cmp	r3, #0
 801ccba:	d001      	beq.n	801ccc0 <_ZN9__gnu_cxx13new_allocatorI12sum_operatorE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 801ccbc:	f005 fe78 	bl	80229b0 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 801ccc0:	68b8      	ldr	r0, [r7, #8]
 801ccc2:	f005 fdb0 	bl	8022826 <_Znwj>
 801ccc6:	4603      	mov	r3, r0
 801ccc8:	bf00      	nop
      }
 801ccca:	4618      	mov	r0, r3
 801cccc:	3710      	adds	r7, #16
 801ccce:	46bd      	mov	sp, r7
 801ccd0:	bd80      	pop	{r7, pc}

0801ccd2 <_ZSt12__relocate_aIP12sum_operatorS1_SaIS0_EET0_T_S4_S3_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
 801ccd2:	b5b0      	push	{r4, r5, r7, lr}
 801ccd4:	b084      	sub	sp, #16
 801ccd6:	af00      	add	r7, sp, #0
 801ccd8:	60f8      	str	r0, [r7, #12]
 801ccda:	60b9      	str	r1, [r7, #8]
 801ccdc:	607a      	str	r2, [r7, #4]
 801ccde:	603b      	str	r3, [r7, #0]
      return __relocate_a_1(std::__niter_base(__first),
 801cce0:	68f8      	ldr	r0, [r7, #12]
 801cce2:	f000 f9cd 	bl	801d080 <_ZSt12__niter_baseIP12sum_operatorET_S2_>
 801cce6:	4604      	mov	r4, r0
 801cce8:	68b8      	ldr	r0, [r7, #8]
 801ccea:	f000 f9c9 	bl	801d080 <_ZSt12__niter_baseIP12sum_operatorET_S2_>
 801ccee:	4605      	mov	r5, r0
 801ccf0:	6878      	ldr	r0, [r7, #4]
 801ccf2:	f000 f9c5 	bl	801d080 <_ZSt12__niter_baseIP12sum_operatorET_S2_>
 801ccf6:	4602      	mov	r2, r0
 801ccf8:	683b      	ldr	r3, [r7, #0]
 801ccfa:	4629      	mov	r1, r5
 801ccfc:	4620      	mov	r0, r4
 801ccfe:	f000 f9ca 	bl	801d096 <_ZSt14__relocate_a_1I12sum_operatorS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E>
 801cd02:	4603      	mov	r3, r0
    }
 801cd04:	4618      	mov	r0, r3
 801cd06:	3710      	adds	r7, #16
 801cd08:	46bd      	mov	sp, r7
 801cd0a:	bdb0      	pop	{r4, r5, r7, pc}

0801cd0c <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
 801cd0c:	b580      	push	{r7, lr}
 801cd0e:	b084      	sub	sp, #16
 801cd10:	af00      	add	r7, sp, #0
 801cd12:	6078      	str	r0, [r7, #4]
	const size_t __diffmax
 801cd14:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
 801cd18:	60fb      	str	r3, [r7, #12]
	const size_t __allocmax = _Alloc_traits::max_size(__a);
 801cd1a:	6878      	ldr	r0, [r7, #4]
 801cd1c:	f000 f9d6 	bl	801d0cc <_ZNSt16allocator_traitsISaIP19Multiply_expressionEE8max_sizeERKS2_>
 801cd20:	4603      	mov	r3, r0
 801cd22:	60bb      	str	r3, [r7, #8]
	return (std::min)(__diffmax, __allocmax);
 801cd24:	f107 0208 	add.w	r2, r7, #8
 801cd28:	f107 030c 	add.w	r3, r7, #12
 801cd2c:	4611      	mov	r1, r2
 801cd2e:	4618      	mov	r0, r3
 801cd30:	f7f9 f8c0 	bl	8015eb4 <_ZSt3minIjERKT_S2_S2_>
 801cd34:	4603      	mov	r3, r0
 801cd36:	681b      	ldr	r3, [r3, #0]
      }
 801cd38:	4618      	mov	r0, r3
 801cd3a:	3710      	adds	r7, #16
 801cd3c:	46bd      	mov	sp, r7
 801cd3e:	bd80      	pop	{r7, pc}

0801cd40 <_ZNKSt12_Vector_baseIP19Multiply_expressionSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 801cd40:	b480      	push	{r7}
 801cd42:	b083      	sub	sp, #12
 801cd44:	af00      	add	r7, sp, #0
 801cd46:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 801cd48:	687b      	ldr	r3, [r7, #4]
 801cd4a:	4618      	mov	r0, r3
 801cd4c:	370c      	adds	r7, #12
 801cd4e:	46bd      	mov	sp, r7
 801cd50:	f85d 7b04 	ldr.w	r7, [sp], #4
 801cd54:	4770      	bx	lr

0801cd56 <_ZN9__gnu_cxx13new_allocatorIP19Multiply_expressionE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 801cd56:	b580      	push	{r7, lr}
 801cd58:	b084      	sub	sp, #16
 801cd5a:	af00      	add	r7, sp, #0
 801cd5c:	60f8      	str	r0, [r7, #12]
 801cd5e:	60b9      	str	r1, [r7, #8]
 801cd60:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 801cd62:	68f8      	ldr	r0, [r7, #12]
 801cd64:	f000 f9be 	bl	801d0e4 <_ZNK9__gnu_cxx13new_allocatorIP19Multiply_expressionE8max_sizeEv>
 801cd68:	4602      	mov	r2, r0
 801cd6a:	68bb      	ldr	r3, [r7, #8]
 801cd6c:	4293      	cmp	r3, r2
 801cd6e:	bf8c      	ite	hi
 801cd70:	2301      	movhi	r3, #1
 801cd72:	2300      	movls	r3, #0
 801cd74:	b2db      	uxtb	r3, r3
 801cd76:	2b00      	cmp	r3, #0
 801cd78:	d001      	beq.n	801cd7e <_ZN9__gnu_cxx13new_allocatorIP19Multiply_expressionE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 801cd7a:	f005 fe19 	bl	80229b0 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 801cd7e:	68bb      	ldr	r3, [r7, #8]
 801cd80:	009b      	lsls	r3, r3, #2
 801cd82:	4618      	mov	r0, r3
 801cd84:	f005 fd4f 	bl	8022826 <_Znwj>
 801cd88:	4603      	mov	r3, r0
 801cd8a:	bf00      	nop
      }
 801cd8c:	4618      	mov	r0, r3
 801cd8e:	3710      	adds	r7, #16
 801cd90:	46bd      	mov	sp, r7
 801cd92:	bd80      	pop	{r7, pc}

0801cd94 <_ZSt12__relocate_aIPP19Multiply_expressionS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
 801cd94:	b5b0      	push	{r4, r5, r7, lr}
 801cd96:	b084      	sub	sp, #16
 801cd98:	af00      	add	r7, sp, #0
 801cd9a:	60f8      	str	r0, [r7, #12]
 801cd9c:	60b9      	str	r1, [r7, #8]
 801cd9e:	607a      	str	r2, [r7, #4]
 801cda0:	603b      	str	r3, [r7, #0]
      return __relocate_a_1(std::__niter_base(__first),
 801cda2:	68f8      	ldr	r0, [r7, #12]
 801cda4:	f000 f9aa 	bl	801d0fc <_ZSt12__niter_baseIPP19Multiply_expressionET_S3_>
 801cda8:	4604      	mov	r4, r0
 801cdaa:	68b8      	ldr	r0, [r7, #8]
 801cdac:	f000 f9a6 	bl	801d0fc <_ZSt12__niter_baseIPP19Multiply_expressionET_S3_>
 801cdb0:	4605      	mov	r5, r0
 801cdb2:	6878      	ldr	r0, [r7, #4]
 801cdb4:	f000 f9a2 	bl	801d0fc <_ZSt12__niter_baseIPP19Multiply_expressionET_S3_>
 801cdb8:	4602      	mov	r2, r0
 801cdba:	683b      	ldr	r3, [r7, #0]
 801cdbc:	4629      	mov	r1, r5
 801cdbe:	4620      	mov	r0, r4
 801cdc0:	f000 f9a7 	bl	801d112 <_ZSt14__relocate_a_1IP19Multiply_expressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
 801cdc4:	4603      	mov	r3, r0
    }
 801cdc6:	4618      	mov	r0, r3
 801cdc8:	3710      	adds	r7, #16
 801cdca:	46bd      	mov	sp, r7
 801cdcc:	bdb0      	pop	{r4, r5, r7, pc}

0801cdce <_ZNSt6vectorIP18Compare_expressionSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
 801cdce:	b580      	push	{r7, lr}
 801cdd0:	b084      	sub	sp, #16
 801cdd2:	af00      	add	r7, sp, #0
 801cdd4:	6078      	str	r0, [r7, #4]
	const size_t __diffmax
 801cdd6:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
 801cdda:	60fb      	str	r3, [r7, #12]
	const size_t __allocmax = _Alloc_traits::max_size(__a);
 801cddc:	6878      	ldr	r0, [r7, #4]
 801cdde:	f000 f9b6 	bl	801d14e <_ZNSt16allocator_traitsISaIP18Compare_expressionEE8max_sizeERKS2_>
 801cde2:	4603      	mov	r3, r0
 801cde4:	60bb      	str	r3, [r7, #8]
	return (std::min)(__diffmax, __allocmax);
 801cde6:	f107 0208 	add.w	r2, r7, #8
 801cdea:	f107 030c 	add.w	r3, r7, #12
 801cdee:	4611      	mov	r1, r2
 801cdf0:	4618      	mov	r0, r3
 801cdf2:	f7f9 f85f 	bl	8015eb4 <_ZSt3minIjERKT_S2_S2_>
 801cdf6:	4603      	mov	r3, r0
 801cdf8:	681b      	ldr	r3, [r3, #0]
      }
 801cdfa:	4618      	mov	r0, r3
 801cdfc:	3710      	adds	r7, #16
 801cdfe:	46bd      	mov	sp, r7
 801ce00:	bd80      	pop	{r7, pc}

0801ce02 <_ZNKSt12_Vector_baseIP18Compare_expressionSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 801ce02:	b480      	push	{r7}
 801ce04:	b083      	sub	sp, #12
 801ce06:	af00      	add	r7, sp, #0
 801ce08:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 801ce0a:	687b      	ldr	r3, [r7, #4]
 801ce0c:	4618      	mov	r0, r3
 801ce0e:	370c      	adds	r7, #12
 801ce10:	46bd      	mov	sp, r7
 801ce12:	f85d 7b04 	ldr.w	r7, [sp], #4
 801ce16:	4770      	bx	lr

0801ce18 <_ZN9__gnu_cxx13new_allocatorIP18Compare_expressionE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 801ce18:	b580      	push	{r7, lr}
 801ce1a:	b084      	sub	sp, #16
 801ce1c:	af00      	add	r7, sp, #0
 801ce1e:	60f8      	str	r0, [r7, #12]
 801ce20:	60b9      	str	r1, [r7, #8]
 801ce22:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 801ce24:	68f8      	ldr	r0, [r7, #12]
 801ce26:	f000 f99e 	bl	801d166 <_ZNK9__gnu_cxx13new_allocatorIP18Compare_expressionE8max_sizeEv>
 801ce2a:	4602      	mov	r2, r0
 801ce2c:	68bb      	ldr	r3, [r7, #8]
 801ce2e:	4293      	cmp	r3, r2
 801ce30:	bf8c      	ite	hi
 801ce32:	2301      	movhi	r3, #1
 801ce34:	2300      	movls	r3, #0
 801ce36:	b2db      	uxtb	r3, r3
 801ce38:	2b00      	cmp	r3, #0
 801ce3a:	d001      	beq.n	801ce40 <_ZN9__gnu_cxx13new_allocatorIP18Compare_expressionE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 801ce3c:	f005 fdb8 	bl	80229b0 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 801ce40:	68bb      	ldr	r3, [r7, #8]
 801ce42:	009b      	lsls	r3, r3, #2
 801ce44:	4618      	mov	r0, r3
 801ce46:	f005 fcee 	bl	8022826 <_Znwj>
 801ce4a:	4603      	mov	r3, r0
 801ce4c:	bf00      	nop
      }
 801ce4e:	4618      	mov	r0, r3
 801ce50:	3710      	adds	r7, #16
 801ce52:	46bd      	mov	sp, r7
 801ce54:	bd80      	pop	{r7, pc}

0801ce56 <_ZSt12__relocate_aIPP18Compare_expressionS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
 801ce56:	b5b0      	push	{r4, r5, r7, lr}
 801ce58:	b084      	sub	sp, #16
 801ce5a:	af00      	add	r7, sp, #0
 801ce5c:	60f8      	str	r0, [r7, #12]
 801ce5e:	60b9      	str	r1, [r7, #8]
 801ce60:	607a      	str	r2, [r7, #4]
 801ce62:	603b      	str	r3, [r7, #0]
      return __relocate_a_1(std::__niter_base(__first),
 801ce64:	68f8      	ldr	r0, [r7, #12]
 801ce66:	f000 f98a 	bl	801d17e <_ZSt12__niter_baseIPP18Compare_expressionET_S3_>
 801ce6a:	4604      	mov	r4, r0
 801ce6c:	68b8      	ldr	r0, [r7, #8]
 801ce6e:	f000 f986 	bl	801d17e <_ZSt12__niter_baseIPP18Compare_expressionET_S3_>
 801ce72:	4605      	mov	r5, r0
 801ce74:	6878      	ldr	r0, [r7, #4]
 801ce76:	f000 f982 	bl	801d17e <_ZSt12__niter_baseIPP18Compare_expressionET_S3_>
 801ce7a:	4602      	mov	r2, r0
 801ce7c:	683b      	ldr	r3, [r7, #0]
 801ce7e:	4629      	mov	r1, r5
 801ce80:	4620      	mov	r0, r4
 801ce82:	f000 f987 	bl	801d194 <_ZSt14__relocate_a_1IP18Compare_expressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
 801ce86:	4603      	mov	r3, r0
    }
 801ce88:	4618      	mov	r0, r3
 801ce8a:	3710      	adds	r7, #16
 801ce8c:	46bd      	mov	sp, r7
 801ce8e:	bdb0      	pop	{r4, r5, r7, pc}

0801ce90 <_ZNSt6vectorIP14And_expressionSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
 801ce90:	b580      	push	{r7, lr}
 801ce92:	b084      	sub	sp, #16
 801ce94:	af00      	add	r7, sp, #0
 801ce96:	6078      	str	r0, [r7, #4]
	const size_t __diffmax
 801ce98:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
 801ce9c:	60fb      	str	r3, [r7, #12]
	const size_t __allocmax = _Alloc_traits::max_size(__a);
 801ce9e:	6878      	ldr	r0, [r7, #4]
 801cea0:	f000 f996 	bl	801d1d0 <_ZNSt16allocator_traitsISaIP14And_expressionEE8max_sizeERKS2_>
 801cea4:	4603      	mov	r3, r0
 801cea6:	60bb      	str	r3, [r7, #8]
	return (std::min)(__diffmax, __allocmax);
 801cea8:	f107 0208 	add.w	r2, r7, #8
 801ceac:	f107 030c 	add.w	r3, r7, #12
 801ceb0:	4611      	mov	r1, r2
 801ceb2:	4618      	mov	r0, r3
 801ceb4:	f7f8 fffe 	bl	8015eb4 <_ZSt3minIjERKT_S2_S2_>
 801ceb8:	4603      	mov	r3, r0
 801ceba:	681b      	ldr	r3, [r3, #0]
      }
 801cebc:	4618      	mov	r0, r3
 801cebe:	3710      	adds	r7, #16
 801cec0:	46bd      	mov	sp, r7
 801cec2:	bd80      	pop	{r7, pc}

0801cec4 <_ZNKSt12_Vector_baseIP14And_expressionSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 801cec4:	b480      	push	{r7}
 801cec6:	b083      	sub	sp, #12
 801cec8:	af00      	add	r7, sp, #0
 801ceca:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 801cecc:	687b      	ldr	r3, [r7, #4]
 801cece:	4618      	mov	r0, r3
 801ced0:	370c      	adds	r7, #12
 801ced2:	46bd      	mov	sp, r7
 801ced4:	f85d 7b04 	ldr.w	r7, [sp], #4
 801ced8:	4770      	bx	lr

0801ceda <_ZN9__gnu_cxx13new_allocatorIP14And_expressionE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 801ceda:	b580      	push	{r7, lr}
 801cedc:	b084      	sub	sp, #16
 801cede:	af00      	add	r7, sp, #0
 801cee0:	60f8      	str	r0, [r7, #12]
 801cee2:	60b9      	str	r1, [r7, #8]
 801cee4:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 801cee6:	68f8      	ldr	r0, [r7, #12]
 801cee8:	f000 f97e 	bl	801d1e8 <_ZNK9__gnu_cxx13new_allocatorIP14And_expressionE8max_sizeEv>
 801ceec:	4602      	mov	r2, r0
 801ceee:	68bb      	ldr	r3, [r7, #8]
 801cef0:	4293      	cmp	r3, r2
 801cef2:	bf8c      	ite	hi
 801cef4:	2301      	movhi	r3, #1
 801cef6:	2300      	movls	r3, #0
 801cef8:	b2db      	uxtb	r3, r3
 801cefa:	2b00      	cmp	r3, #0
 801cefc:	d001      	beq.n	801cf02 <_ZN9__gnu_cxx13new_allocatorIP14And_expressionE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 801cefe:	f005 fd57 	bl	80229b0 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 801cf02:	68bb      	ldr	r3, [r7, #8]
 801cf04:	009b      	lsls	r3, r3, #2
 801cf06:	4618      	mov	r0, r3
 801cf08:	f005 fc8d 	bl	8022826 <_Znwj>
 801cf0c:	4603      	mov	r3, r0
 801cf0e:	bf00      	nop
      }
 801cf10:	4618      	mov	r0, r3
 801cf12:	3710      	adds	r7, #16
 801cf14:	46bd      	mov	sp, r7
 801cf16:	bd80      	pop	{r7, pc}

0801cf18 <_ZSt12__relocate_aIPP14And_expressionS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
 801cf18:	b5b0      	push	{r4, r5, r7, lr}
 801cf1a:	b084      	sub	sp, #16
 801cf1c:	af00      	add	r7, sp, #0
 801cf1e:	60f8      	str	r0, [r7, #12]
 801cf20:	60b9      	str	r1, [r7, #8]
 801cf22:	607a      	str	r2, [r7, #4]
 801cf24:	603b      	str	r3, [r7, #0]
      return __relocate_a_1(std::__niter_base(__first),
 801cf26:	68f8      	ldr	r0, [r7, #12]
 801cf28:	f000 f96a 	bl	801d200 <_ZSt12__niter_baseIPP14And_expressionET_S3_>
 801cf2c:	4604      	mov	r4, r0
 801cf2e:	68b8      	ldr	r0, [r7, #8]
 801cf30:	f000 f966 	bl	801d200 <_ZSt12__niter_baseIPP14And_expressionET_S3_>
 801cf34:	4605      	mov	r5, r0
 801cf36:	6878      	ldr	r0, [r7, #4]
 801cf38:	f000 f962 	bl	801d200 <_ZSt12__niter_baseIPP14And_expressionET_S3_>
 801cf3c:	4602      	mov	r2, r0
 801cf3e:	683b      	ldr	r3, [r7, #0]
 801cf40:	4629      	mov	r1, r5
 801cf42:	4620      	mov	r0, r4
 801cf44:	f000 f967 	bl	801d216 <_ZSt14__relocate_a_1IP14And_expressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
 801cf48:	4603      	mov	r3, r0
    }
 801cf4a:	4618      	mov	r0, r3
 801cf4c:	3710      	adds	r7, #16
 801cf4e:	46bd      	mov	sp, r7
 801cf50:	bdb0      	pop	{r4, r5, r7, pc}

0801cf52 <_ZNSt16allocator_traitsISaI13mult_operatorEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a) noexcept
 801cf52:	b580      	push	{r7, lr}
 801cf54:	b082      	sub	sp, #8
 801cf56:	af00      	add	r7, sp, #0
 801cf58:	6078      	str	r0, [r7, #4]
      { return __a.max_size(); }
 801cf5a:	6878      	ldr	r0, [r7, #4]
 801cf5c:	f000 f805 	bl	801cf6a <_ZNK9__gnu_cxx13new_allocatorI13mult_operatorE8max_sizeEv>
 801cf60:	4603      	mov	r3, r0
 801cf62:	4618      	mov	r0, r3
 801cf64:	3708      	adds	r7, #8
 801cf66:	46bd      	mov	sp, r7
 801cf68:	bd80      	pop	{r7, pc}

0801cf6a <_ZNK9__gnu_cxx13new_allocatorI13mult_operatorE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 801cf6a:	b480      	push	{r7}
 801cf6c:	b083      	sub	sp, #12
 801cf6e:	af00      	add	r7, sp, #0
 801cf70:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 801cf72:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
      }
 801cf76:	4618      	mov	r0, r3
 801cf78:	370c      	adds	r7, #12
 801cf7a:	46bd      	mov	sp, r7
 801cf7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 801cf80:	4770      	bx	lr

0801cf82 <_ZSt12__niter_baseIP13mult_operatorET_S2_>:
    __niter_base(_Iterator __it)
 801cf82:	b480      	push	{r7}
 801cf84:	b083      	sub	sp, #12
 801cf86:	af00      	add	r7, sp, #0
 801cf88:	6078      	str	r0, [r7, #4]
    { return __it; }
 801cf8a:	687b      	ldr	r3, [r7, #4]
 801cf8c:	4618      	mov	r0, r3
 801cf8e:	370c      	adds	r7, #12
 801cf90:	46bd      	mov	sp, r7
 801cf92:	f85d 7b04 	ldr.w	r7, [sp], #4
 801cf96:	4770      	bx	lr

0801cf98 <_ZSt14__relocate_a_1I13mult_operatorS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
 801cf98:	b580      	push	{r7, lr}
 801cf9a:	b086      	sub	sp, #24
 801cf9c:	af00      	add	r7, sp, #0
 801cf9e:	60f8      	str	r0, [r7, #12]
 801cfa0:	60b9      	str	r1, [r7, #8]
 801cfa2:	607a      	str	r2, [r7, #4]
 801cfa4:	603b      	str	r3, [r7, #0]
      ptrdiff_t __count = __last - __first;
 801cfa6:	68ba      	ldr	r2, [r7, #8]
 801cfa8:	68fb      	ldr	r3, [r7, #12]
 801cfaa:	1ad3      	subs	r3, r2, r3
 801cfac:	617b      	str	r3, [r7, #20]
      if (__count > 0)
 801cfae:	697b      	ldr	r3, [r7, #20]
 801cfb0:	2b00      	cmp	r3, #0
 801cfb2:	dd05      	ble.n	801cfc0 <_ZSt14__relocate_a_1I13mult_operatorS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E+0x28>
	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 801cfb4:	697b      	ldr	r3, [r7, #20]
 801cfb6:	461a      	mov	r2, r3
 801cfb8:	68f9      	ldr	r1, [r7, #12]
 801cfba:	6878      	ldr	r0, [r7, #4]
 801cfbc:	f007 f8f8 	bl	80241b0 <memmove>
      return __result + __count;
 801cfc0:	697b      	ldr	r3, [r7, #20]
 801cfc2:	687a      	ldr	r2, [r7, #4]
 801cfc4:	4413      	add	r3, r2
    }
 801cfc6:	4618      	mov	r0, r3
 801cfc8:	3718      	adds	r7, #24
 801cfca:	46bd      	mov	sp, r7
 801cfcc:	bd80      	pop	{r7, pc}

0801cfce <_ZNSt16allocator_traitsISaIP16Power_expressionEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a) noexcept
 801cfce:	b580      	push	{r7, lr}
 801cfd0:	b082      	sub	sp, #8
 801cfd2:	af00      	add	r7, sp, #0
 801cfd4:	6078      	str	r0, [r7, #4]
      { return __a.max_size(); }
 801cfd6:	6878      	ldr	r0, [r7, #4]
 801cfd8:	f000 f805 	bl	801cfe6 <_ZNK9__gnu_cxx13new_allocatorIP16Power_expressionE8max_sizeEv>
 801cfdc:	4603      	mov	r3, r0
 801cfde:	4618      	mov	r0, r3
 801cfe0:	3708      	adds	r7, #8
 801cfe2:	46bd      	mov	sp, r7
 801cfe4:	bd80      	pop	{r7, pc}

0801cfe6 <_ZNK9__gnu_cxx13new_allocatorIP16Power_expressionE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 801cfe6:	b480      	push	{r7}
 801cfe8:	b083      	sub	sp, #12
 801cfea:	af00      	add	r7, sp, #0
 801cfec:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 801cfee:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
      }
 801cff2:	4618      	mov	r0, r3
 801cff4:	370c      	adds	r7, #12
 801cff6:	46bd      	mov	sp, r7
 801cff8:	f85d 7b04 	ldr.w	r7, [sp], #4
 801cffc:	4770      	bx	lr

0801cffe <_ZSt12__niter_baseIPP16Power_expressionET_S3_>:
    __niter_base(_Iterator __it)
 801cffe:	b480      	push	{r7}
 801d000:	b083      	sub	sp, #12
 801d002:	af00      	add	r7, sp, #0
 801d004:	6078      	str	r0, [r7, #4]
    { return __it; }
 801d006:	687b      	ldr	r3, [r7, #4]
 801d008:	4618      	mov	r0, r3
 801d00a:	370c      	adds	r7, #12
 801d00c:	46bd      	mov	sp, r7
 801d00e:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d012:	4770      	bx	lr

0801d014 <_ZSt14__relocate_a_1IP16Power_expressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
 801d014:	b580      	push	{r7, lr}
 801d016:	b086      	sub	sp, #24
 801d018:	af00      	add	r7, sp, #0
 801d01a:	60f8      	str	r0, [r7, #12]
 801d01c:	60b9      	str	r1, [r7, #8]
 801d01e:	607a      	str	r2, [r7, #4]
 801d020:	603b      	str	r3, [r7, #0]
      ptrdiff_t __count = __last - __first;
 801d022:	68ba      	ldr	r2, [r7, #8]
 801d024:	68fb      	ldr	r3, [r7, #12]
 801d026:	1ad3      	subs	r3, r2, r3
 801d028:	109b      	asrs	r3, r3, #2
 801d02a:	617b      	str	r3, [r7, #20]
      if (__count > 0)
 801d02c:	697b      	ldr	r3, [r7, #20]
 801d02e:	2b00      	cmp	r3, #0
 801d030:	dd06      	ble.n	801d040 <_ZSt14__relocate_a_1IP16Power_expressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x2c>
	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 801d032:	697b      	ldr	r3, [r7, #20]
 801d034:	009b      	lsls	r3, r3, #2
 801d036:	461a      	mov	r2, r3
 801d038:	68f9      	ldr	r1, [r7, #12]
 801d03a:	6878      	ldr	r0, [r7, #4]
 801d03c:	f007 f8b8 	bl	80241b0 <memmove>
      return __result + __count;
 801d040:	697b      	ldr	r3, [r7, #20]
 801d042:	009b      	lsls	r3, r3, #2
 801d044:	687a      	ldr	r2, [r7, #4]
 801d046:	4413      	add	r3, r2
    }
 801d048:	4618      	mov	r0, r3
 801d04a:	3718      	adds	r7, #24
 801d04c:	46bd      	mov	sp, r7
 801d04e:	bd80      	pop	{r7, pc}

0801d050 <_ZNSt16allocator_traitsISaI12sum_operatorEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a) noexcept
 801d050:	b580      	push	{r7, lr}
 801d052:	b082      	sub	sp, #8
 801d054:	af00      	add	r7, sp, #0
 801d056:	6078      	str	r0, [r7, #4]
      { return __a.max_size(); }
 801d058:	6878      	ldr	r0, [r7, #4]
 801d05a:	f000 f805 	bl	801d068 <_ZNK9__gnu_cxx13new_allocatorI12sum_operatorE8max_sizeEv>
 801d05e:	4603      	mov	r3, r0
 801d060:	4618      	mov	r0, r3
 801d062:	3708      	adds	r7, #8
 801d064:	46bd      	mov	sp, r7
 801d066:	bd80      	pop	{r7, pc}

0801d068 <_ZNK9__gnu_cxx13new_allocatorI12sum_operatorE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 801d068:	b480      	push	{r7}
 801d06a:	b083      	sub	sp, #12
 801d06c:	af00      	add	r7, sp, #0
 801d06e:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 801d070:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
      }
 801d074:	4618      	mov	r0, r3
 801d076:	370c      	adds	r7, #12
 801d078:	46bd      	mov	sp, r7
 801d07a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d07e:	4770      	bx	lr

0801d080 <_ZSt12__niter_baseIP12sum_operatorET_S2_>:
    __niter_base(_Iterator __it)
 801d080:	b480      	push	{r7}
 801d082:	b083      	sub	sp, #12
 801d084:	af00      	add	r7, sp, #0
 801d086:	6078      	str	r0, [r7, #4]
    { return __it; }
 801d088:	687b      	ldr	r3, [r7, #4]
 801d08a:	4618      	mov	r0, r3
 801d08c:	370c      	adds	r7, #12
 801d08e:	46bd      	mov	sp, r7
 801d090:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d094:	4770      	bx	lr

0801d096 <_ZSt14__relocate_a_1I12sum_operatorS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
 801d096:	b580      	push	{r7, lr}
 801d098:	b086      	sub	sp, #24
 801d09a:	af00      	add	r7, sp, #0
 801d09c:	60f8      	str	r0, [r7, #12]
 801d09e:	60b9      	str	r1, [r7, #8]
 801d0a0:	607a      	str	r2, [r7, #4]
 801d0a2:	603b      	str	r3, [r7, #0]
      ptrdiff_t __count = __last - __first;
 801d0a4:	68ba      	ldr	r2, [r7, #8]
 801d0a6:	68fb      	ldr	r3, [r7, #12]
 801d0a8:	1ad3      	subs	r3, r2, r3
 801d0aa:	617b      	str	r3, [r7, #20]
      if (__count > 0)
 801d0ac:	697b      	ldr	r3, [r7, #20]
 801d0ae:	2b00      	cmp	r3, #0
 801d0b0:	dd05      	ble.n	801d0be <_ZSt14__relocate_a_1I12sum_operatorS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E+0x28>
	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 801d0b2:	697b      	ldr	r3, [r7, #20]
 801d0b4:	461a      	mov	r2, r3
 801d0b6:	68f9      	ldr	r1, [r7, #12]
 801d0b8:	6878      	ldr	r0, [r7, #4]
 801d0ba:	f007 f879 	bl	80241b0 <memmove>
      return __result + __count;
 801d0be:	697b      	ldr	r3, [r7, #20]
 801d0c0:	687a      	ldr	r2, [r7, #4]
 801d0c2:	4413      	add	r3, r2
    }
 801d0c4:	4618      	mov	r0, r3
 801d0c6:	3718      	adds	r7, #24
 801d0c8:	46bd      	mov	sp, r7
 801d0ca:	bd80      	pop	{r7, pc}

0801d0cc <_ZNSt16allocator_traitsISaIP19Multiply_expressionEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a) noexcept
 801d0cc:	b580      	push	{r7, lr}
 801d0ce:	b082      	sub	sp, #8
 801d0d0:	af00      	add	r7, sp, #0
 801d0d2:	6078      	str	r0, [r7, #4]
      { return __a.max_size(); }
 801d0d4:	6878      	ldr	r0, [r7, #4]
 801d0d6:	f000 f805 	bl	801d0e4 <_ZNK9__gnu_cxx13new_allocatorIP19Multiply_expressionE8max_sizeEv>
 801d0da:	4603      	mov	r3, r0
 801d0dc:	4618      	mov	r0, r3
 801d0de:	3708      	adds	r7, #8
 801d0e0:	46bd      	mov	sp, r7
 801d0e2:	bd80      	pop	{r7, pc}

0801d0e4 <_ZNK9__gnu_cxx13new_allocatorIP19Multiply_expressionE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 801d0e4:	b480      	push	{r7}
 801d0e6:	b083      	sub	sp, #12
 801d0e8:	af00      	add	r7, sp, #0
 801d0ea:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 801d0ec:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
      }
 801d0f0:	4618      	mov	r0, r3
 801d0f2:	370c      	adds	r7, #12
 801d0f4:	46bd      	mov	sp, r7
 801d0f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d0fa:	4770      	bx	lr

0801d0fc <_ZSt12__niter_baseIPP19Multiply_expressionET_S3_>:
    __niter_base(_Iterator __it)
 801d0fc:	b480      	push	{r7}
 801d0fe:	b083      	sub	sp, #12
 801d100:	af00      	add	r7, sp, #0
 801d102:	6078      	str	r0, [r7, #4]
    { return __it; }
 801d104:	687b      	ldr	r3, [r7, #4]
 801d106:	4618      	mov	r0, r3
 801d108:	370c      	adds	r7, #12
 801d10a:	46bd      	mov	sp, r7
 801d10c:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d110:	4770      	bx	lr

0801d112 <_ZSt14__relocate_a_1IP19Multiply_expressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
 801d112:	b580      	push	{r7, lr}
 801d114:	b086      	sub	sp, #24
 801d116:	af00      	add	r7, sp, #0
 801d118:	60f8      	str	r0, [r7, #12]
 801d11a:	60b9      	str	r1, [r7, #8]
 801d11c:	607a      	str	r2, [r7, #4]
 801d11e:	603b      	str	r3, [r7, #0]
      ptrdiff_t __count = __last - __first;
 801d120:	68ba      	ldr	r2, [r7, #8]
 801d122:	68fb      	ldr	r3, [r7, #12]
 801d124:	1ad3      	subs	r3, r2, r3
 801d126:	109b      	asrs	r3, r3, #2
 801d128:	617b      	str	r3, [r7, #20]
      if (__count > 0)
 801d12a:	697b      	ldr	r3, [r7, #20]
 801d12c:	2b00      	cmp	r3, #0
 801d12e:	dd06      	ble.n	801d13e <_ZSt14__relocate_a_1IP19Multiply_expressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x2c>
	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 801d130:	697b      	ldr	r3, [r7, #20]
 801d132:	009b      	lsls	r3, r3, #2
 801d134:	461a      	mov	r2, r3
 801d136:	68f9      	ldr	r1, [r7, #12]
 801d138:	6878      	ldr	r0, [r7, #4]
 801d13a:	f007 f839 	bl	80241b0 <memmove>
      return __result + __count;
 801d13e:	697b      	ldr	r3, [r7, #20]
 801d140:	009b      	lsls	r3, r3, #2
 801d142:	687a      	ldr	r2, [r7, #4]
 801d144:	4413      	add	r3, r2
    }
 801d146:	4618      	mov	r0, r3
 801d148:	3718      	adds	r7, #24
 801d14a:	46bd      	mov	sp, r7
 801d14c:	bd80      	pop	{r7, pc}

0801d14e <_ZNSt16allocator_traitsISaIP18Compare_expressionEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a) noexcept
 801d14e:	b580      	push	{r7, lr}
 801d150:	b082      	sub	sp, #8
 801d152:	af00      	add	r7, sp, #0
 801d154:	6078      	str	r0, [r7, #4]
      { return __a.max_size(); }
 801d156:	6878      	ldr	r0, [r7, #4]
 801d158:	f000 f805 	bl	801d166 <_ZNK9__gnu_cxx13new_allocatorIP18Compare_expressionE8max_sizeEv>
 801d15c:	4603      	mov	r3, r0
 801d15e:	4618      	mov	r0, r3
 801d160:	3708      	adds	r7, #8
 801d162:	46bd      	mov	sp, r7
 801d164:	bd80      	pop	{r7, pc}

0801d166 <_ZNK9__gnu_cxx13new_allocatorIP18Compare_expressionE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 801d166:	b480      	push	{r7}
 801d168:	b083      	sub	sp, #12
 801d16a:	af00      	add	r7, sp, #0
 801d16c:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 801d16e:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
      }
 801d172:	4618      	mov	r0, r3
 801d174:	370c      	adds	r7, #12
 801d176:	46bd      	mov	sp, r7
 801d178:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d17c:	4770      	bx	lr

0801d17e <_ZSt12__niter_baseIPP18Compare_expressionET_S3_>:
    __niter_base(_Iterator __it)
 801d17e:	b480      	push	{r7}
 801d180:	b083      	sub	sp, #12
 801d182:	af00      	add	r7, sp, #0
 801d184:	6078      	str	r0, [r7, #4]
    { return __it; }
 801d186:	687b      	ldr	r3, [r7, #4]
 801d188:	4618      	mov	r0, r3
 801d18a:	370c      	adds	r7, #12
 801d18c:	46bd      	mov	sp, r7
 801d18e:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d192:	4770      	bx	lr

0801d194 <_ZSt14__relocate_a_1IP18Compare_expressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
 801d194:	b580      	push	{r7, lr}
 801d196:	b086      	sub	sp, #24
 801d198:	af00      	add	r7, sp, #0
 801d19a:	60f8      	str	r0, [r7, #12]
 801d19c:	60b9      	str	r1, [r7, #8]
 801d19e:	607a      	str	r2, [r7, #4]
 801d1a0:	603b      	str	r3, [r7, #0]
      ptrdiff_t __count = __last - __first;
 801d1a2:	68ba      	ldr	r2, [r7, #8]
 801d1a4:	68fb      	ldr	r3, [r7, #12]
 801d1a6:	1ad3      	subs	r3, r2, r3
 801d1a8:	109b      	asrs	r3, r3, #2
 801d1aa:	617b      	str	r3, [r7, #20]
      if (__count > 0)
 801d1ac:	697b      	ldr	r3, [r7, #20]
 801d1ae:	2b00      	cmp	r3, #0
 801d1b0:	dd06      	ble.n	801d1c0 <_ZSt14__relocate_a_1IP18Compare_expressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x2c>
	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 801d1b2:	697b      	ldr	r3, [r7, #20]
 801d1b4:	009b      	lsls	r3, r3, #2
 801d1b6:	461a      	mov	r2, r3
 801d1b8:	68f9      	ldr	r1, [r7, #12]
 801d1ba:	6878      	ldr	r0, [r7, #4]
 801d1bc:	f006 fff8 	bl	80241b0 <memmove>
      return __result + __count;
 801d1c0:	697b      	ldr	r3, [r7, #20]
 801d1c2:	009b      	lsls	r3, r3, #2
 801d1c4:	687a      	ldr	r2, [r7, #4]
 801d1c6:	4413      	add	r3, r2
    }
 801d1c8:	4618      	mov	r0, r3
 801d1ca:	3718      	adds	r7, #24
 801d1cc:	46bd      	mov	sp, r7
 801d1ce:	bd80      	pop	{r7, pc}

0801d1d0 <_ZNSt16allocator_traitsISaIP14And_expressionEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a) noexcept
 801d1d0:	b580      	push	{r7, lr}
 801d1d2:	b082      	sub	sp, #8
 801d1d4:	af00      	add	r7, sp, #0
 801d1d6:	6078      	str	r0, [r7, #4]
      { return __a.max_size(); }
 801d1d8:	6878      	ldr	r0, [r7, #4]
 801d1da:	f000 f805 	bl	801d1e8 <_ZNK9__gnu_cxx13new_allocatorIP14And_expressionE8max_sizeEv>
 801d1de:	4603      	mov	r3, r0
 801d1e0:	4618      	mov	r0, r3
 801d1e2:	3708      	adds	r7, #8
 801d1e4:	46bd      	mov	sp, r7
 801d1e6:	bd80      	pop	{r7, pc}

0801d1e8 <_ZNK9__gnu_cxx13new_allocatorIP14And_expressionE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 801d1e8:	b480      	push	{r7}
 801d1ea:	b083      	sub	sp, #12
 801d1ec:	af00      	add	r7, sp, #0
 801d1ee:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 801d1f0:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
      }
 801d1f4:	4618      	mov	r0, r3
 801d1f6:	370c      	adds	r7, #12
 801d1f8:	46bd      	mov	sp, r7
 801d1fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d1fe:	4770      	bx	lr

0801d200 <_ZSt12__niter_baseIPP14And_expressionET_S3_>:
    __niter_base(_Iterator __it)
 801d200:	b480      	push	{r7}
 801d202:	b083      	sub	sp, #12
 801d204:	af00      	add	r7, sp, #0
 801d206:	6078      	str	r0, [r7, #4]
    { return __it; }
 801d208:	687b      	ldr	r3, [r7, #4]
 801d20a:	4618      	mov	r0, r3
 801d20c:	370c      	adds	r7, #12
 801d20e:	46bd      	mov	sp, r7
 801d210:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d214:	4770      	bx	lr

0801d216 <_ZSt14__relocate_a_1IP14And_expressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
 801d216:	b580      	push	{r7, lr}
 801d218:	b086      	sub	sp, #24
 801d21a:	af00      	add	r7, sp, #0
 801d21c:	60f8      	str	r0, [r7, #12]
 801d21e:	60b9      	str	r1, [r7, #8]
 801d220:	607a      	str	r2, [r7, #4]
 801d222:	603b      	str	r3, [r7, #0]
      ptrdiff_t __count = __last - __first;
 801d224:	68ba      	ldr	r2, [r7, #8]
 801d226:	68fb      	ldr	r3, [r7, #12]
 801d228:	1ad3      	subs	r3, r2, r3
 801d22a:	109b      	asrs	r3, r3, #2
 801d22c:	617b      	str	r3, [r7, #20]
      if (__count > 0)
 801d22e:	697b      	ldr	r3, [r7, #20]
 801d230:	2b00      	cmp	r3, #0
 801d232:	dd06      	ble.n	801d242 <_ZSt14__relocate_a_1IP14And_expressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x2c>
	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 801d234:	697b      	ldr	r3, [r7, #20]
 801d236:	009b      	lsls	r3, r3, #2
 801d238:	461a      	mov	r2, r3
 801d23a:	68f9      	ldr	r1, [r7, #12]
 801d23c:	6878      	ldr	r0, [r7, #4]
 801d23e:	f006 ffb7 	bl	80241b0 <memmove>
      return __result + __count;
 801d242:	697b      	ldr	r3, [r7, #20]
 801d244:	009b      	lsls	r3, r3, #2
 801d246:	687a      	ldr	r2, [r7, #4]
 801d248:	4413      	add	r3, r2
    }
 801d24a:	4618      	mov	r0, r3
 801d24c:	3718      	adds	r7, #24
 801d24e:	46bd      	mov	sp, r7
 801d250:	bd80      	pop	{r7, pc}
	...

0801d254 <_Z41__static_initialization_and_destruction_0ii>:
 801d254:	b590      	push	{r4, r7, lr}
 801d256:	b0e7      	sub	sp, #412	; 0x19c
 801d258:	af02      	add	r7, sp, #8
 801d25a:	1d3b      	adds	r3, r7, #4
 801d25c:	6018      	str	r0, [r3, #0]
 801d25e:	463b      	mov	r3, r7
 801d260:	6019      	str	r1, [r3, #0]
 801d262:	1d3b      	adds	r3, r7, #4
 801d264:	681b      	ldr	r3, [r3, #0]
 801d266:	2b01      	cmp	r3, #1
 801d268:	f040 819d 	bne.w	801d5a6 <_Z41__static_initialization_and_destruction_0ii+0x352>
 801d26c:	463b      	mov	r3, r7
 801d26e:	681b      	ldr	r3, [r3, #0]
 801d270:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801d274:	4293      	cmp	r3, r2
 801d276:	f040 8196 	bne.w	801d5a6 <_Z41__static_initialization_and_destruction_0ii+0x352>
};
 801d27a:	f107 0314 	add.w	r3, r7, #20
 801d27e:	4618      	mov	r0, r3
 801d280:	2322      	movs	r3, #34	; 0x22
 801d282:	461a      	mov	r2, r3
 801d284:	2100      	movs	r1, #0
 801d286:	f006 ffad 	bl	80241e4 <memset>
 801d28a:	f107 0314 	add.w	r3, r7, #20
 801d28e:	223a      	movs	r2, #58	; 0x3a
 801d290:	701a      	strb	r2, [r3, #0]
 801d292:	f107 0314 	add.w	r3, r7, #20
 801d296:	2201      	movs	r2, #1
 801d298:	705a      	strb	r2, [r3, #1]
 801d29a:	f107 0314 	add.w	r3, r7, #20
 801d29e:	220a      	movs	r2, #10
 801d2a0:	709a      	strb	r2, [r3, #2]
 801d2a2:	f107 0314 	add.w	r3, r7, #20
 801d2a6:	220a      	movs	r2, #10
 801d2a8:	70da      	strb	r2, [r3, #3]
 801d2aa:	f107 0314 	add.w	r3, r7, #20
 801d2ae:	222c      	movs	r2, #44	; 0x2c
 801d2b0:	711a      	strb	r2, [r3, #4]
 801d2b2:	f107 0314 	add.w	r3, r7, #20
 801d2b6:	220c      	movs	r2, #12
 801d2b8:	715a      	strb	r2, [r3, #5]
 801d2ba:	f107 0314 	add.w	r3, r7, #20
 801d2be:	222e      	movs	r2, #46	; 0x2e
 801d2c0:	719a      	strb	r2, [r3, #6]
 801d2c2:	f107 0314 	add.w	r3, r7, #20
 801d2c6:	220b      	movs	r2, #11
 801d2c8:	71da      	strb	r2, [r3, #7]
 801d2ca:	f107 0314 	add.w	r3, r7, #20
 801d2ce:	225b      	movs	r2, #91	; 0x5b
 801d2d0:	721a      	strb	r2, [r3, #8]
 801d2d2:	f107 0314 	add.w	r3, r7, #20
 801d2d6:	220d      	movs	r2, #13
 801d2d8:	725a      	strb	r2, [r3, #9]
 801d2da:	f107 0314 	add.w	r3, r7, #20
 801d2de:	225d      	movs	r2, #93	; 0x5d
 801d2e0:	729a      	strb	r2, [r3, #10]
 801d2e2:	f107 0314 	add.w	r3, r7, #20
 801d2e6:	220e      	movs	r2, #14
 801d2e8:	72da      	strb	r2, [r3, #11]
 801d2ea:	f107 0314 	add.w	r3, r7, #20
 801d2ee:	227c      	movs	r2, #124	; 0x7c
 801d2f0:	731a      	strb	r2, [r3, #12]
 801d2f2:	f107 0314 	add.w	r3, r7, #20
 801d2f6:	2215      	movs	r2, #21
 801d2f8:	735a      	strb	r2, [r3, #13]
 801d2fa:	f107 0314 	add.w	r3, r7, #20
 801d2fe:	2226      	movs	r2, #38	; 0x26
 801d300:	739a      	strb	r2, [r3, #14]
 801d302:	f107 0314 	add.w	r3, r7, #20
 801d306:	2216      	movs	r2, #22
 801d308:	73da      	strb	r2, [r3, #15]
 801d30a:	f107 0314 	add.w	r3, r7, #20
 801d30e:	222b      	movs	r2, #43	; 0x2b
 801d310:	741a      	strb	r2, [r3, #16]
 801d312:	f107 0314 	add.w	r3, r7, #20
 801d316:	221f      	movs	r2, #31
 801d318:	745a      	strb	r2, [r3, #17]
 801d31a:	f107 0314 	add.w	r3, r7, #20
 801d31e:	222d      	movs	r2, #45	; 0x2d
 801d320:	749a      	strb	r2, [r3, #18]
 801d322:	f107 0314 	add.w	r3, r7, #20
 801d326:	2220      	movs	r2, #32
 801d328:	74da      	strb	r2, [r3, #19]
 801d32a:	f107 0314 	add.w	r3, r7, #20
 801d32e:	222a      	movs	r2, #42	; 0x2a
 801d330:	751a      	strb	r2, [r3, #20]
 801d332:	f107 0314 	add.w	r3, r7, #20
 801d336:	2221      	movs	r2, #33	; 0x21
 801d338:	755a      	strb	r2, [r3, #21]
 801d33a:	f107 0314 	add.w	r3, r7, #20
 801d33e:	222f      	movs	r2, #47	; 0x2f
 801d340:	759a      	strb	r2, [r3, #22]
 801d342:	f107 0314 	add.w	r3, r7, #20
 801d346:	2222      	movs	r2, #34	; 0x22
 801d348:	75da      	strb	r2, [r3, #23]
 801d34a:	f107 0314 	add.w	r3, r7, #20
 801d34e:	225e      	movs	r2, #94	; 0x5e
 801d350:	761a      	strb	r2, [r3, #24]
 801d352:	f107 0314 	add.w	r3, r7, #20
 801d356:	2223      	movs	r2, #35	; 0x23
 801d358:	765a      	strb	r2, [r3, #25]
 801d35a:	f107 0314 	add.w	r3, r7, #20
 801d35e:	2225      	movs	r2, #37	; 0x25
 801d360:	769a      	strb	r2, [r3, #26]
 801d362:	f107 0314 	add.w	r3, r7, #20
 801d366:	2224      	movs	r2, #36	; 0x24
 801d368:	76da      	strb	r2, [r3, #27]
 801d36a:	f107 0314 	add.w	r3, r7, #20
 801d36e:	2228      	movs	r2, #40	; 0x28
 801d370:	771a      	strb	r2, [r3, #28]
 801d372:	f107 0314 	add.w	r3, r7, #20
 801d376:	2226      	movs	r2, #38	; 0x26
 801d378:	775a      	strb	r2, [r3, #29]
 801d37a:	f107 0314 	add.w	r3, r7, #20
 801d37e:	2229      	movs	r2, #41	; 0x29
 801d380:	779a      	strb	r2, [r3, #30]
 801d382:	f107 0314 	add.w	r3, r7, #20
 801d386:	2227      	movs	r2, #39	; 0x27
 801d388:	77da      	strb	r2, [r3, #31]
 801d38a:	f107 0314 	add.w	r3, r7, #20
 801d38e:	2225      	movs	r2, #37	; 0x25
 801d390:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 801d394:	f107 030c 	add.w	r3, r7, #12
 801d398:	f107 0214 	add.w	r2, r7, #20
 801d39c:	601a      	str	r2, [r3, #0]
 801d39e:	f107 030c 	add.w	r3, r7, #12
 801d3a2:	2211      	movs	r2, #17
 801d3a4:	605a      	str	r2, [r3, #4]
 801d3a6:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801d3aa:	4618      	mov	r0, r3
 801d3ac:	f7e4 fba0 	bl	8001af0 <_ZNSaISt4pairIKc10token_typeEEC1Ev>
 801d3b0:	f107 0138 	add.w	r1, r7, #56	; 0x38
 801d3b4:	f107 020c 	add.w	r2, r7, #12
 801d3b8:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801d3bc:	9300      	str	r3, [sp, #0]
 801d3be:	460b      	mov	r3, r1
 801d3c0:	ca06      	ldmia	r2, {r1, r2}
 801d3c2:	4885      	ldr	r0, [pc, #532]	; (801d5d8 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 801d3c4:	f7e4 fbac 	bl	8001b20 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 801d3c8:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801d3cc:	4618      	mov	r0, r3
 801d3ce:	f7e4 fb9b 	bl	8001b08 <_ZNSaISt4pairIKc10token_typeEED1Ev>
	{"true", TOKEN_TRUE},
 801d3d2:	2305      	movs	r3, #5
 801d3d4:	f887 3162 	strb.w	r3, [r7, #354]	; 0x162
};
 801d3d8:	f507 72b1 	add.w	r2, r7, #354	; 0x162
 801d3dc:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801d3e0:	497e      	ldr	r1, [pc, #504]	; (801d5dc <_Z41__static_initialization_and_destruction_0ii+0x388>)
 801d3e2:	4618      	mov	r0, r3
 801d3e4:	f7e3 fe88 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"false", TOKEN_FALSE},
 801d3e8:	2306      	movs	r3, #6
 801d3ea:	f887 3163 	strb.w	r3, [r7, #355]	; 0x163
};
 801d3ee:	f207 1263 	addw	r2, r7, #355	; 0x163
 801d3f2:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801d3f6:	331c      	adds	r3, #28
 801d3f8:	4979      	ldr	r1, [pc, #484]	; (801d5e0 <_Z41__static_initialization_and_destruction_0ii+0x38c>)
 801d3fa:	4618      	mov	r0, r3
 801d3fc:	f7e3 fea4 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"setup", TOKEN_SETUP},
 801d400:	2307      	movs	r3, #7
 801d402:	f887 3164 	strb.w	r3, [r7, #356]	; 0x164
};
 801d406:	f507 72b2 	add.w	r2, r7, #356	; 0x164
 801d40a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801d40e:	3338      	adds	r3, #56	; 0x38
 801d410:	4974      	ldr	r1, [pc, #464]	; (801d5e4 <_Z41__static_initialization_and_destruction_0ii+0x390>)
 801d412:	4618      	mov	r0, r3
 801d414:	f7e3 fe98 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"loop", TOKEN_LOOP},
 801d418:	2308      	movs	r3, #8
 801d41a:	f887 3165 	strb.w	r3, [r7, #357]	; 0x165
};
 801d41e:	f207 1265 	addw	r2, r7, #357	; 0x165
 801d422:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801d426:	3354      	adds	r3, #84	; 0x54
 801d428:	496f      	ldr	r1, [pc, #444]	; (801d5e8 <_Z41__static_initialization_and_destruction_0ii+0x394>)
 801d42a:	4618      	mov	r0, r3
 801d42c:	f7e3 fe64 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"finish", TOKEN_FINISH},
 801d430:	2309      	movs	r3, #9
 801d432:	f887 3166 	strb.w	r3, [r7, #358]	; 0x166
};
 801d436:	f507 72b3 	add.w	r2, r7, #358	; 0x166
 801d43a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801d43e:	3370      	adds	r3, #112	; 0x70
 801d440:	496a      	ldr	r1, [pc, #424]	; (801d5ec <_Z41__static_initialization_and_destruction_0ii+0x398>)
 801d442:	4618      	mov	r0, r3
 801d444:	f7e3 fea8 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"if", TOKEN_IF},
 801d448:	2310      	movs	r3, #16
 801d44a:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167
};
 801d44e:	f207 1267 	addw	r2, r7, #359	; 0x167
 801d452:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801d456:	338c      	adds	r3, #140	; 0x8c
 801d458:	4965      	ldr	r1, [pc, #404]	; (801d5f0 <_Z41__static_initialization_and_destruction_0ii+0x39c>)
 801d45a:	4618      	mov	r0, r3
 801d45c:	f7e3 fec4 	bl	80011e8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>
	{"elseif", TOKEN_ELSEIF},
 801d460:	2311      	movs	r3, #17
 801d462:	f887 3168 	strb.w	r3, [r7, #360]	; 0x168
};
 801d466:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 801d46a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801d46e:	33a8      	adds	r3, #168	; 0xa8
 801d470:	4960      	ldr	r1, [pc, #384]	; (801d5f4 <_Z41__static_initialization_and_destruction_0ii+0x3a0>)
 801d472:	4618      	mov	r0, r3
 801d474:	f7e3 fe90 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"else", TOKEN_ELSE},
 801d478:	2312      	movs	r3, #18
 801d47a:	f887 3169 	strb.w	r3, [r7, #361]	; 0x169
};
 801d47e:	f207 1269 	addw	r2, r7, #361	; 0x169
 801d482:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801d486:	33c4      	adds	r3, #196	; 0xc4
 801d488:	495b      	ldr	r1, [pc, #364]	; (801d5f8 <_Z41__static_initialization_and_destruction_0ii+0x3a4>)
 801d48a:	4618      	mov	r0, r3
 801d48c:	f7e3 fe34 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"while", TOKEN_WHILE},
 801d490:	2313      	movs	r3, #19
 801d492:	f887 316a 	strb.w	r3, [r7, #362]	; 0x16a
};
 801d496:	f507 72b5 	add.w	r2, r7, #362	; 0x16a
 801d49a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801d49e:	33e0      	adds	r3, #224	; 0xe0
 801d4a0:	4956      	ldr	r1, [pc, #344]	; (801d5fc <_Z41__static_initialization_and_destruction_0ii+0x3a8>)
 801d4a2:	4618      	mov	r0, r3
 801d4a4:	f7e3 fe50 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"end", TOKEN_END},
 801d4a8:	2314      	movs	r3, #20
 801d4aa:	f887 316b 	strb.w	r3, [r7, #363]	; 0x16b
};
 801d4ae:	f207 126b 	addw	r2, r7, #363	; 0x16b
 801d4b2:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801d4b6:	33fc      	adds	r3, #252	; 0xfc
 801d4b8:	4951      	ldr	r1, [pc, #324]	; (801d600 <_Z41__static_initialization_and_destruction_0ii+0x3ac>)
 801d4ba:	4618      	mov	r0, r3
 801d4bc:	f7e3 febc 	bl	8001238 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>
 801d4c0:	f107 0340 	add.w	r3, r7, #64	; 0x40
 801d4c4:	f107 0248 	add.w	r2, r7, #72	; 0x48
 801d4c8:	601a      	str	r2, [r3, #0]
 801d4ca:	f107 0340 	add.w	r3, r7, #64	; 0x40
 801d4ce:	220a      	movs	r2, #10
 801d4d0:	605a      	str	r2, [r3, #4]
 801d4d2:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 801d4d6:	4618      	mov	r0, r3
 801d4d8:	f7e4 fbaf 	bl	8001c3a <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 801d4dc:	f507 71b6 	add.w	r1, r7, #364	; 0x16c
 801d4e0:	f107 0240 	add.w	r2, r7, #64	; 0x40
 801d4e4:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 801d4e8:	9300      	str	r3, [sp, #0]
 801d4ea:	460b      	mov	r3, r1
 801d4ec:	ca06      	ldmia	r2, {r1, r2}
 801d4ee:	4845      	ldr	r0, [pc, #276]	; (801d604 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 801d4f0:	f7e4 fbbb 	bl	8001c6a <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>
 801d4f4:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 801d4f8:	4618      	mov	r0, r3
 801d4fa:	f7e4 fbaa 	bl	8001c52 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 801d4fe:	f107 0448 	add.w	r4, r7, #72	; 0x48
 801d502:	f504 748c 	add.w	r4, r4, #280	; 0x118
 801d506:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801d50a:	429c      	cmp	r4, r3
 801d50c:	d004      	beq.n	801d518 <_Z41__static_initialization_and_destruction_0ii+0x2c4>
 801d50e:	3c1c      	subs	r4, #28
 801d510:	4620      	mov	r0, r4
 801d512:	f7e3 fde4 	bl	80010de <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 801d516:	e7f6      	b.n	801d506 <_Z41__static_initialization_and_destruction_0ii+0x2b2>
};
 801d518:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 801d51c:	2200      	movs	r2, #0
 801d51e:	601a      	str	r2, [r3, #0]
 801d520:	605a      	str	r2, [r3, #4]
 801d522:	609a      	str	r2, [r3, #8]
 801d524:	233c      	movs	r3, #60	; 0x3c
 801d526:	f887 317c 	strb.w	r3, [r7, #380]	; 0x17c
 801d52a:	231b      	movs	r3, #27
 801d52c:	f887 317d 	strb.w	r3, [r7, #381]	; 0x17d
 801d530:	231c      	movs	r3, #28
 801d532:	f887 317e 	strb.w	r3, [r7, #382]	; 0x17e
 801d536:	233e      	movs	r3, #62	; 0x3e
 801d538:	f887 317f 	strb.w	r3, [r7, #383]	; 0x17f
 801d53c:	2319      	movs	r3, #25
 801d53e:	f887 3180 	strb.w	r3, [r7, #384]	; 0x180
 801d542:	231a      	movs	r3, #26
 801d544:	f887 3181 	strb.w	r3, [r7, #385]	; 0x181
 801d548:	233d      	movs	r3, #61	; 0x3d
 801d54a:	f887 3182 	strb.w	r3, [r7, #386]	; 0x182
 801d54e:	2318      	movs	r3, #24
 801d550:	f887 3183 	strb.w	r3, [r7, #387]	; 0x183
 801d554:	231d      	movs	r3, #29
 801d556:	f887 3184 	strb.w	r3, [r7, #388]	; 0x184
 801d55a:	2321      	movs	r3, #33	; 0x21
 801d55c:	f887 3185 	strb.w	r3, [r7, #389]	; 0x185
 801d560:	2317      	movs	r3, #23
 801d562:	f887 3186 	strb.w	r3, [r7, #390]	; 0x186
 801d566:	231e      	movs	r3, #30
 801d568:	f887 3187 	strb.w	r3, [r7, #391]	; 0x187
 801d56c:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 801d570:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 801d574:	2304      	movs	r3, #4
 801d576:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 801d57a:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801d57e:	4618      	mov	r0, r3
 801d580:	f7e4 fba3 	bl	8001cca <_ZNSaISt4pairIKc12double_tokenEEC1Ev>
 801d584:	f507 72c4 	add.w	r2, r7, #392	; 0x188
 801d588:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801d58c:	9300      	str	r3, [sp, #0]
 801d58e:	4613      	mov	r3, r2
 801d590:	f507 72ba 	add.w	r2, r7, #372	; 0x174
 801d594:	ca06      	ldmia	r2, {r1, r2}
 801d596:	481c      	ldr	r0, [pc, #112]	; (801d608 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 801d598:	f7e4 fbaf 	bl	8001cfa <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 801d59c:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801d5a0:	4618      	mov	r0, r3
 801d5a2:	f7e4 fb9e 	bl	8001ce2 <_ZNSaISt4pairIKc12double_tokenEED1Ev>
static const std::map<char, double_token> token_double_chars
 801d5a6:	1d3b      	adds	r3, r7, #4
 801d5a8:	681b      	ldr	r3, [r3, #0]
 801d5aa:	2b00      	cmp	r3, #0
 801d5ac:	d10e      	bne.n	801d5cc <_Z41__static_initialization_and_destruction_0ii+0x378>
 801d5ae:	463b      	mov	r3, r7
 801d5b0:	681b      	ldr	r3, [r3, #0]
 801d5b2:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801d5b6:	4293      	cmp	r3, r2
 801d5b8:	d108      	bne.n	801d5cc <_Z41__static_initialization_and_destruction_0ii+0x378>
 801d5ba:	4813      	ldr	r0, [pc, #76]	; (801d608 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 801d5bc:	f7ec f82f 	bl	800961e <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>
static const std::map<std::string, token_type> token_strings
 801d5c0:	4810      	ldr	r0, [pc, #64]	; (801d604 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 801d5c2:	f7ec f839 	bl	8009638 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
static const std::map<char, token_type> token_chars
 801d5c6:	4804      	ldr	r0, [pc, #16]	; (801d5d8 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 801d5c8:	f7ec f843 	bl	8009652 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>
 801d5cc:	bf00      	nop
 801d5ce:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 801d5d2:	46bd      	mov	sp, r7
 801d5d4:	bd90      	pop	{r4, r7, pc}
 801d5d6:	bf00      	nop
 801d5d8:	200005c4 	.word	0x200005c4
 801d5dc:	08027fd8 	.word	0x08027fd8
 801d5e0:	08027fe0 	.word	0x08027fe0
 801d5e4:	08027fe8 	.word	0x08027fe8
 801d5e8:	08027ff0 	.word	0x08027ff0
 801d5ec:	08027ff8 	.word	0x08027ff8
 801d5f0:	08028000 	.word	0x08028000
 801d5f4:	08028004 	.word	0x08028004
 801d5f8:	0802800c 	.word	0x0802800c
 801d5fc:	08028014 	.word	0x08028014
 801d600:	0802801c 	.word	0x0802801c
 801d604:	200005dc 	.word	0x200005dc
 801d608:	200005f4 	.word	0x200005f4

0801d60c <_GLOBAL__sub_I__ZN6Parser31parse_variable_or_function_callEP17Primal_expression>:
 801d60c:	b580      	push	{r7, lr}
 801d60e:	af00      	add	r7, sp, #0
 801d610:	f64f 71ff 	movw	r1, #65535	; 0xffff
 801d614:	2001      	movs	r0, #1
 801d616:	f7ff fe1d 	bl	801d254 <_Z41__static_initialization_and_destruction_0ii>
 801d61a:	bd80      	pop	{r7, pc}

0801d61c <_GLOBAL__sub_D__ZN6Parser31parse_variable_or_function_callEP17Primal_expression>:
 801d61c:	b580      	push	{r7, lr}
 801d61e:	af00      	add	r7, sp, #0
 801d620:	f64f 71ff 	movw	r1, #65535	; 0xffff
 801d624:	2000      	movs	r0, #0
 801d626:	f7ff fe15 	bl	801d254 <_Z41__static_initialization_and_destruction_0ii>
 801d62a:	bd80      	pop	{r7, pc}

0801d62c <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 801d62c:	b580      	push	{r7, lr}
 801d62e:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 801d630:	f002 faf3 	bl	801fc1a <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 801d634:	f000 f80a 	bl	801d64c <_Z18SystemClock_Configv>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 801d638:	f000 f8e0 	bl	801d7fc <_ZL12MX_GPIO_Initv>
  MX_USART1_UART_Init();
 801d63c:	f000 f8aa 	bl	801d794 <_ZL19MX_USART1_UART_Initv>
  /* USER CODE BEGIN 2 */
  my_main_run(&huart1);
 801d640:	4801      	ldr	r0, [pc, #4]	; (801d648 <main+0x1c>)
 801d642:	f000 fae5 	bl	801dc10 <_Z11my_main_runP20__UART_HandleTypeDef>

  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
 801d646:	e7fe      	b.n	801d646 <main+0x1a>
 801d648:	20000654 	.word	0x20000654

0801d64c <_Z18SystemClock_Configv>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 801d64c:	b580      	push	{r7, lr}
 801d64e:	b0b4      	sub	sp, #208	; 0xd0
 801d650:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 801d652:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 801d656:	2230      	movs	r2, #48	; 0x30
 801d658:	2100      	movs	r1, #0
 801d65a:	4618      	mov	r0, r3
 801d65c:	f006 fdc2 	bl	80241e4 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 801d660:	f107 038c 	add.w	r3, r7, #140	; 0x8c
 801d664:	2200      	movs	r2, #0
 801d666:	601a      	str	r2, [r3, #0]
 801d668:	605a      	str	r2, [r3, #4]
 801d66a:	609a      	str	r2, [r3, #8]
 801d66c:	60da      	str	r2, [r3, #12]
 801d66e:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 801d670:	f107 0308 	add.w	r3, r7, #8
 801d674:	2284      	movs	r2, #132	; 0x84
 801d676:	2100      	movs	r1, #0
 801d678:	4618      	mov	r0, r3
 801d67a:	f006 fdb3 	bl	80241e4 <memset>

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 801d67e:	4b43      	ldr	r3, [pc, #268]	; (801d78c <_Z18SystemClock_Configv+0x140>)
 801d680:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801d682:	4a42      	ldr	r2, [pc, #264]	; (801d78c <_Z18SystemClock_Configv+0x140>)
 801d684:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 801d688:	6413      	str	r3, [r2, #64]	; 0x40
 801d68a:	4b40      	ldr	r3, [pc, #256]	; (801d78c <_Z18SystemClock_Configv+0x140>)
 801d68c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801d68e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 801d692:	607b      	str	r3, [r7, #4]
 801d694:	687b      	ldr	r3, [r7, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 801d696:	4b3e      	ldr	r3, [pc, #248]	; (801d790 <_Z18SystemClock_Configv+0x144>)
 801d698:	681b      	ldr	r3, [r3, #0]
 801d69a:	4a3d      	ldr	r2, [pc, #244]	; (801d790 <_Z18SystemClock_Configv+0x144>)
 801d69c:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 801d6a0:	6013      	str	r3, [r2, #0]
 801d6a2:	4b3b      	ldr	r3, [pc, #236]	; (801d790 <_Z18SystemClock_Configv+0x144>)
 801d6a4:	681b      	ldr	r3, [r3, #0]
 801d6a6:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 801d6aa:	603b      	str	r3, [r7, #0]
 801d6ac:	683b      	ldr	r3, [r7, #0]
  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 801d6ae:	2302      	movs	r3, #2
 801d6b0:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 801d6b4:	2301      	movs	r3, #1
 801d6b6:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 801d6ba:	2310      	movs	r3, #16
 801d6bc:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 801d6c0:	2302      	movs	r3, #2
 801d6c2:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 801d6c6:	2300      	movs	r3, #0
 801d6c8:	f8c7 30bc 	str.w	r3, [r7, #188]	; 0xbc
  RCC_OscInitStruct.PLL.PLLM = 8;
 801d6cc:	2308      	movs	r3, #8
 801d6ce:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
  RCC_OscInitStruct.PLL.PLLN = 216;
 801d6d2:	23d8      	movs	r3, #216	; 0xd8
 801d6d4:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 801d6d8:	2302      	movs	r3, #2
 801d6da:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
  RCC_OscInitStruct.PLL.PLLQ = 2;
 801d6de:	2302      	movs	r3, #2
 801d6e0:	f8c7 30cc 	str.w	r3, [r7, #204]	; 0xcc
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 801d6e4:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 801d6e8:	4618      	mov	r0, r3
 801d6ea:	f002 feb7 	bl	802045c <HAL_RCC_OscConfig>
 801d6ee:	4603      	mov	r3, r0
 801d6f0:	2b00      	cmp	r3, #0
 801d6f2:	bf14      	ite	ne
 801d6f4:	2301      	movne	r3, #1
 801d6f6:	2300      	moveq	r3, #0
 801d6f8:	b2db      	uxtb	r3, r3
 801d6fa:	2b00      	cmp	r3, #0
 801d6fc:	d001      	beq.n	801d702 <_Z18SystemClock_Configv+0xb6>
  {
    Error_Handler();
 801d6fe:	f000 f895 	bl	801d82c <Error_Handler>
  }
  /** Activate the Over-Drive mode
  */
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 801d702:	f002 fe5b 	bl	80203bc <HAL_PWREx_EnableOverDrive>
 801d706:	4603      	mov	r3, r0
 801d708:	2b00      	cmp	r3, #0
 801d70a:	bf14      	ite	ne
 801d70c:	2301      	movne	r3, #1
 801d70e:	2300      	moveq	r3, #0
 801d710:	b2db      	uxtb	r3, r3
 801d712:	2b00      	cmp	r3, #0
 801d714:	d001      	beq.n	801d71a <_Z18SystemClock_Configv+0xce>
  {
    Error_Handler();
 801d716:	f000 f889 	bl	801d82c <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 801d71a:	230f      	movs	r3, #15
 801d71c:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 801d720:	2302      	movs	r3, #2
 801d722:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 801d726:	2300      	movs	r3, #0
 801d728:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 801d72c:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 801d730:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 801d734:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 801d738:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7) != HAL_OK)
 801d73c:	f107 038c 	add.w	r3, r7, #140	; 0x8c
 801d740:	2107      	movs	r1, #7
 801d742:	4618      	mov	r0, r3
 801d744:	f003 f92e 	bl	80209a4 <HAL_RCC_ClockConfig>
 801d748:	4603      	mov	r3, r0
 801d74a:	2b00      	cmp	r3, #0
 801d74c:	bf14      	ite	ne
 801d74e:	2301      	movne	r3, #1
 801d750:	2300      	moveq	r3, #0
 801d752:	b2db      	uxtb	r3, r3
 801d754:	2b00      	cmp	r3, #0
 801d756:	d001      	beq.n	801d75c <_Z18SystemClock_Configv+0x110>
  {
    Error_Handler();
 801d758:	f000 f868 	bl	801d82c <Error_Handler>
  }
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_USART1;
 801d75c:	2340      	movs	r3, #64	; 0x40
 801d75e:	60bb      	str	r3, [r7, #8]
  PeriphClkInitStruct.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK2;
 801d760:	2300      	movs	r3, #0
 801d762:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 801d764:	f107 0308 	add.w	r3, r7, #8
 801d768:	4618      	mov	r0, r3
 801d76a:	f003 faf1 	bl	8020d50 <HAL_RCCEx_PeriphCLKConfig>
 801d76e:	4603      	mov	r3, r0
 801d770:	2b00      	cmp	r3, #0
 801d772:	bf14      	ite	ne
 801d774:	2301      	movne	r3, #1
 801d776:	2300      	moveq	r3, #0
 801d778:	b2db      	uxtb	r3, r3
 801d77a:	2b00      	cmp	r3, #0
 801d77c:	d001      	beq.n	801d782 <_Z18SystemClock_Configv+0x136>
  {
    Error_Handler();
 801d77e:	f000 f855 	bl	801d82c <Error_Handler>
  }
}
 801d782:	bf00      	nop
 801d784:	37d0      	adds	r7, #208	; 0xd0
 801d786:	46bd      	mov	sp, r7
 801d788:	bd80      	pop	{r7, pc}
 801d78a:	bf00      	nop
 801d78c:	40023800 	.word	0x40023800
 801d790:	40007000 	.word	0x40007000

0801d794 <_ZL19MX_USART1_UART_Initv>:
  * @brief USART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART1_UART_Init(void)
{
 801d794:	b580      	push	{r7, lr}
 801d796:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 801d798:	4b16      	ldr	r3, [pc, #88]	; (801d7f4 <_ZL19MX_USART1_UART_Initv+0x60>)
 801d79a:	4a17      	ldr	r2, [pc, #92]	; (801d7f8 <_ZL19MX_USART1_UART_Initv+0x64>)
 801d79c:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 115200;
 801d79e:	4b15      	ldr	r3, [pc, #84]	; (801d7f4 <_ZL19MX_USART1_UART_Initv+0x60>)
 801d7a0:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 801d7a4:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 801d7a6:	4b13      	ldr	r3, [pc, #76]	; (801d7f4 <_ZL19MX_USART1_UART_Initv+0x60>)
 801d7a8:	2200      	movs	r2, #0
 801d7aa:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 801d7ac:	4b11      	ldr	r3, [pc, #68]	; (801d7f4 <_ZL19MX_USART1_UART_Initv+0x60>)
 801d7ae:	2200      	movs	r2, #0
 801d7b0:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 801d7b2:	4b10      	ldr	r3, [pc, #64]	; (801d7f4 <_ZL19MX_USART1_UART_Initv+0x60>)
 801d7b4:	2200      	movs	r2, #0
 801d7b6:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 801d7b8:	4b0e      	ldr	r3, [pc, #56]	; (801d7f4 <_ZL19MX_USART1_UART_Initv+0x60>)
 801d7ba:	220c      	movs	r2, #12
 801d7bc:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 801d7be:	4b0d      	ldr	r3, [pc, #52]	; (801d7f4 <_ZL19MX_USART1_UART_Initv+0x60>)
 801d7c0:	2200      	movs	r2, #0
 801d7c2:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 801d7c4:	4b0b      	ldr	r3, [pc, #44]	; (801d7f4 <_ZL19MX_USART1_UART_Initv+0x60>)
 801d7c6:	2200      	movs	r2, #0
 801d7c8:	61da      	str	r2, [r3, #28]
  huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 801d7ca:	4b0a      	ldr	r3, [pc, #40]	; (801d7f4 <_ZL19MX_USART1_UART_Initv+0x60>)
 801d7cc:	2200      	movs	r2, #0
 801d7ce:	621a      	str	r2, [r3, #32]
  huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 801d7d0:	4b08      	ldr	r3, [pc, #32]	; (801d7f4 <_ZL19MX_USART1_UART_Initv+0x60>)
 801d7d2:	2200      	movs	r2, #0
 801d7d4:	625a      	str	r2, [r3, #36]	; 0x24
  if (HAL_UART_Init(&huart1) != HAL_OK)
 801d7d6:	4807      	ldr	r0, [pc, #28]	; (801d7f4 <_ZL19MX_USART1_UART_Initv+0x60>)
 801d7d8:	f003 feaa 	bl	8021530 <HAL_UART_Init>
 801d7dc:	4603      	mov	r3, r0
 801d7de:	2b00      	cmp	r3, #0
 801d7e0:	bf14      	ite	ne
 801d7e2:	2301      	movne	r3, #1
 801d7e4:	2300      	moveq	r3, #0
 801d7e6:	b2db      	uxtb	r3, r3
 801d7e8:	2b00      	cmp	r3, #0
 801d7ea:	d001      	beq.n	801d7f0 <_ZL19MX_USART1_UART_Initv+0x5c>
  {
    Error_Handler();
 801d7ec:	f000 f81e 	bl	801d82c <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 801d7f0:	bf00      	nop
 801d7f2:	bd80      	pop	{r7, pc}
 801d7f4:	20000654 	.word	0x20000654
 801d7f8:	40011000 	.word	0x40011000

0801d7fc <_ZL12MX_GPIO_Initv>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 801d7fc:	b480      	push	{r7}
 801d7fe:	b083      	sub	sp, #12
 801d800:	af00      	add	r7, sp, #0

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOA_CLK_ENABLE();
 801d802:	4b09      	ldr	r3, [pc, #36]	; (801d828 <_ZL12MX_GPIO_Initv+0x2c>)
 801d804:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801d806:	4a08      	ldr	r2, [pc, #32]	; (801d828 <_ZL12MX_GPIO_Initv+0x2c>)
 801d808:	f043 0301 	orr.w	r3, r3, #1
 801d80c:	6313      	str	r3, [r2, #48]	; 0x30
 801d80e:	4b06      	ldr	r3, [pc, #24]	; (801d828 <_ZL12MX_GPIO_Initv+0x2c>)
 801d810:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801d812:	f003 0301 	and.w	r3, r3, #1
 801d816:	607b      	str	r3, [r7, #4]
 801d818:	687b      	ldr	r3, [r7, #4]

}
 801d81a:	bf00      	nop
 801d81c:	370c      	adds	r7, #12
 801d81e:	46bd      	mov	sp, r7
 801d820:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d824:	4770      	bx	lr
 801d826:	bf00      	nop
 801d828:	40023800 	.word	0x40023800

0801d82c <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 801d82c:	b480      	push	{r7}
 801d82e:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 801d830:	b672      	cpsid	i
}
 801d832:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 801d834:	e7fe      	b.n	801d834 <Error_Handler+0x8>
	...

0801d838 <_Z41__static_initialization_and_destruction_0ii>:
  {
  }
  /* USER CODE END Error_Handler_Debug */
}
 801d838:	b590      	push	{r4, r7, lr}
 801d83a:	b0e7      	sub	sp, #412	; 0x19c
 801d83c:	af02      	add	r7, sp, #8
 801d83e:	1d3b      	adds	r3, r7, #4
 801d840:	6018      	str	r0, [r3, #0]
 801d842:	463b      	mov	r3, r7
 801d844:	6019      	str	r1, [r3, #0]
 801d846:	1d3b      	adds	r3, r7, #4
 801d848:	681b      	ldr	r3, [r3, #0]
 801d84a:	2b01      	cmp	r3, #1
 801d84c:	f040 819d 	bne.w	801db8a <_Z41__static_initialization_and_destruction_0ii+0x352>
 801d850:	463b      	mov	r3, r7
 801d852:	681b      	ldr	r3, [r3, #0]
 801d854:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801d858:	4293      	cmp	r3, r2
 801d85a:	f040 8196 	bne.w	801db8a <_Z41__static_initialization_and_destruction_0ii+0x352>
};
 801d85e:	f107 0314 	add.w	r3, r7, #20
 801d862:	4618      	mov	r0, r3
 801d864:	2322      	movs	r3, #34	; 0x22
 801d866:	461a      	mov	r2, r3
 801d868:	2100      	movs	r1, #0
 801d86a:	f006 fcbb 	bl	80241e4 <memset>
 801d86e:	f107 0314 	add.w	r3, r7, #20
 801d872:	223a      	movs	r2, #58	; 0x3a
 801d874:	701a      	strb	r2, [r3, #0]
 801d876:	f107 0314 	add.w	r3, r7, #20
 801d87a:	2201      	movs	r2, #1
 801d87c:	705a      	strb	r2, [r3, #1]
 801d87e:	f107 0314 	add.w	r3, r7, #20
 801d882:	220a      	movs	r2, #10
 801d884:	709a      	strb	r2, [r3, #2]
 801d886:	f107 0314 	add.w	r3, r7, #20
 801d88a:	220a      	movs	r2, #10
 801d88c:	70da      	strb	r2, [r3, #3]
 801d88e:	f107 0314 	add.w	r3, r7, #20
 801d892:	222c      	movs	r2, #44	; 0x2c
 801d894:	711a      	strb	r2, [r3, #4]
 801d896:	f107 0314 	add.w	r3, r7, #20
 801d89a:	220c      	movs	r2, #12
 801d89c:	715a      	strb	r2, [r3, #5]
 801d89e:	f107 0314 	add.w	r3, r7, #20
 801d8a2:	222e      	movs	r2, #46	; 0x2e
 801d8a4:	719a      	strb	r2, [r3, #6]
 801d8a6:	f107 0314 	add.w	r3, r7, #20
 801d8aa:	220b      	movs	r2, #11
 801d8ac:	71da      	strb	r2, [r3, #7]
 801d8ae:	f107 0314 	add.w	r3, r7, #20
 801d8b2:	225b      	movs	r2, #91	; 0x5b
 801d8b4:	721a      	strb	r2, [r3, #8]
 801d8b6:	f107 0314 	add.w	r3, r7, #20
 801d8ba:	220d      	movs	r2, #13
 801d8bc:	725a      	strb	r2, [r3, #9]
 801d8be:	f107 0314 	add.w	r3, r7, #20
 801d8c2:	225d      	movs	r2, #93	; 0x5d
 801d8c4:	729a      	strb	r2, [r3, #10]
 801d8c6:	f107 0314 	add.w	r3, r7, #20
 801d8ca:	220e      	movs	r2, #14
 801d8cc:	72da      	strb	r2, [r3, #11]
 801d8ce:	f107 0314 	add.w	r3, r7, #20
 801d8d2:	227c      	movs	r2, #124	; 0x7c
 801d8d4:	731a      	strb	r2, [r3, #12]
 801d8d6:	f107 0314 	add.w	r3, r7, #20
 801d8da:	2215      	movs	r2, #21
 801d8dc:	735a      	strb	r2, [r3, #13]
 801d8de:	f107 0314 	add.w	r3, r7, #20
 801d8e2:	2226      	movs	r2, #38	; 0x26
 801d8e4:	739a      	strb	r2, [r3, #14]
 801d8e6:	f107 0314 	add.w	r3, r7, #20
 801d8ea:	2216      	movs	r2, #22
 801d8ec:	73da      	strb	r2, [r3, #15]
 801d8ee:	f107 0314 	add.w	r3, r7, #20
 801d8f2:	222b      	movs	r2, #43	; 0x2b
 801d8f4:	741a      	strb	r2, [r3, #16]
 801d8f6:	f107 0314 	add.w	r3, r7, #20
 801d8fa:	221f      	movs	r2, #31
 801d8fc:	745a      	strb	r2, [r3, #17]
 801d8fe:	f107 0314 	add.w	r3, r7, #20
 801d902:	222d      	movs	r2, #45	; 0x2d
 801d904:	749a      	strb	r2, [r3, #18]
 801d906:	f107 0314 	add.w	r3, r7, #20
 801d90a:	2220      	movs	r2, #32
 801d90c:	74da      	strb	r2, [r3, #19]
 801d90e:	f107 0314 	add.w	r3, r7, #20
 801d912:	222a      	movs	r2, #42	; 0x2a
 801d914:	751a      	strb	r2, [r3, #20]
 801d916:	f107 0314 	add.w	r3, r7, #20
 801d91a:	2221      	movs	r2, #33	; 0x21
 801d91c:	755a      	strb	r2, [r3, #21]
 801d91e:	f107 0314 	add.w	r3, r7, #20
 801d922:	222f      	movs	r2, #47	; 0x2f
 801d924:	759a      	strb	r2, [r3, #22]
 801d926:	f107 0314 	add.w	r3, r7, #20
 801d92a:	2222      	movs	r2, #34	; 0x22
 801d92c:	75da      	strb	r2, [r3, #23]
 801d92e:	f107 0314 	add.w	r3, r7, #20
 801d932:	225e      	movs	r2, #94	; 0x5e
 801d934:	761a      	strb	r2, [r3, #24]
 801d936:	f107 0314 	add.w	r3, r7, #20
 801d93a:	2223      	movs	r2, #35	; 0x23
 801d93c:	765a      	strb	r2, [r3, #25]
 801d93e:	f107 0314 	add.w	r3, r7, #20
 801d942:	2225      	movs	r2, #37	; 0x25
 801d944:	769a      	strb	r2, [r3, #26]
 801d946:	f107 0314 	add.w	r3, r7, #20
 801d94a:	2224      	movs	r2, #36	; 0x24
 801d94c:	76da      	strb	r2, [r3, #27]
 801d94e:	f107 0314 	add.w	r3, r7, #20
 801d952:	2228      	movs	r2, #40	; 0x28
 801d954:	771a      	strb	r2, [r3, #28]
 801d956:	f107 0314 	add.w	r3, r7, #20
 801d95a:	2226      	movs	r2, #38	; 0x26
 801d95c:	775a      	strb	r2, [r3, #29]
 801d95e:	f107 0314 	add.w	r3, r7, #20
 801d962:	2229      	movs	r2, #41	; 0x29
 801d964:	779a      	strb	r2, [r3, #30]
 801d966:	f107 0314 	add.w	r3, r7, #20
 801d96a:	2227      	movs	r2, #39	; 0x27
 801d96c:	77da      	strb	r2, [r3, #31]
 801d96e:	f107 0314 	add.w	r3, r7, #20
 801d972:	2225      	movs	r2, #37	; 0x25
 801d974:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 801d978:	f107 030c 	add.w	r3, r7, #12
 801d97c:	f107 0214 	add.w	r2, r7, #20
 801d980:	601a      	str	r2, [r3, #0]
 801d982:	f107 030c 	add.w	r3, r7, #12
 801d986:	2211      	movs	r2, #17
 801d988:	605a      	str	r2, [r3, #4]
 801d98a:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801d98e:	4618      	mov	r0, r3
 801d990:	f7e4 f8ae 	bl	8001af0 <_ZNSaISt4pairIKc10token_typeEEC1Ev>
 801d994:	f107 0138 	add.w	r1, r7, #56	; 0x38
 801d998:	f107 020c 	add.w	r2, r7, #12
 801d99c:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801d9a0:	9300      	str	r3, [sp, #0]
 801d9a2:	460b      	mov	r3, r1
 801d9a4:	ca06      	ldmia	r2, {r1, r2}
 801d9a6:	4885      	ldr	r0, [pc, #532]	; (801dbbc <_Z41__static_initialization_and_destruction_0ii+0x384>)
 801d9a8:	f7e4 f8ba 	bl	8001b20 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 801d9ac:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801d9b0:	4618      	mov	r0, r3
 801d9b2:	f7e4 f8a9 	bl	8001b08 <_ZNSaISt4pairIKc10token_typeEED1Ev>
	{"true", TOKEN_TRUE},
 801d9b6:	2305      	movs	r3, #5
 801d9b8:	f887 3162 	strb.w	r3, [r7, #354]	; 0x162
};
 801d9bc:	f507 72b1 	add.w	r2, r7, #354	; 0x162
 801d9c0:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801d9c4:	497e      	ldr	r1, [pc, #504]	; (801dbc0 <_Z41__static_initialization_and_destruction_0ii+0x388>)
 801d9c6:	4618      	mov	r0, r3
 801d9c8:	f7e3 fb96 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"false", TOKEN_FALSE},
 801d9cc:	2306      	movs	r3, #6
 801d9ce:	f887 3163 	strb.w	r3, [r7, #355]	; 0x163
};
 801d9d2:	f207 1263 	addw	r2, r7, #355	; 0x163
 801d9d6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801d9da:	331c      	adds	r3, #28
 801d9dc:	4979      	ldr	r1, [pc, #484]	; (801dbc4 <_Z41__static_initialization_and_destruction_0ii+0x38c>)
 801d9de:	4618      	mov	r0, r3
 801d9e0:	f7e3 fbb2 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"setup", TOKEN_SETUP},
 801d9e4:	2307      	movs	r3, #7
 801d9e6:	f887 3164 	strb.w	r3, [r7, #356]	; 0x164
};
 801d9ea:	f507 72b2 	add.w	r2, r7, #356	; 0x164
 801d9ee:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801d9f2:	3338      	adds	r3, #56	; 0x38
 801d9f4:	4974      	ldr	r1, [pc, #464]	; (801dbc8 <_Z41__static_initialization_and_destruction_0ii+0x390>)
 801d9f6:	4618      	mov	r0, r3
 801d9f8:	f7e3 fba6 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"loop", TOKEN_LOOP},
 801d9fc:	2308      	movs	r3, #8
 801d9fe:	f887 3165 	strb.w	r3, [r7, #357]	; 0x165
};
 801da02:	f207 1265 	addw	r2, r7, #357	; 0x165
 801da06:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801da0a:	3354      	adds	r3, #84	; 0x54
 801da0c:	496f      	ldr	r1, [pc, #444]	; (801dbcc <_Z41__static_initialization_and_destruction_0ii+0x394>)
 801da0e:	4618      	mov	r0, r3
 801da10:	f7e3 fb72 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"finish", TOKEN_FINISH},
 801da14:	2309      	movs	r3, #9
 801da16:	f887 3166 	strb.w	r3, [r7, #358]	; 0x166
};
 801da1a:	f507 72b3 	add.w	r2, r7, #358	; 0x166
 801da1e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801da22:	3370      	adds	r3, #112	; 0x70
 801da24:	496a      	ldr	r1, [pc, #424]	; (801dbd0 <_Z41__static_initialization_and_destruction_0ii+0x398>)
 801da26:	4618      	mov	r0, r3
 801da28:	f7e3 fbb6 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"if", TOKEN_IF},
 801da2c:	2310      	movs	r3, #16
 801da2e:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167
};
 801da32:	f207 1267 	addw	r2, r7, #359	; 0x167
 801da36:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801da3a:	338c      	adds	r3, #140	; 0x8c
 801da3c:	4965      	ldr	r1, [pc, #404]	; (801dbd4 <_Z41__static_initialization_and_destruction_0ii+0x39c>)
 801da3e:	4618      	mov	r0, r3
 801da40:	f7e3 fbd2 	bl	80011e8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>
	{"elseif", TOKEN_ELSEIF},
 801da44:	2311      	movs	r3, #17
 801da46:	f887 3168 	strb.w	r3, [r7, #360]	; 0x168
};
 801da4a:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 801da4e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801da52:	33a8      	adds	r3, #168	; 0xa8
 801da54:	4960      	ldr	r1, [pc, #384]	; (801dbd8 <_Z41__static_initialization_and_destruction_0ii+0x3a0>)
 801da56:	4618      	mov	r0, r3
 801da58:	f7e3 fb9e 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"else", TOKEN_ELSE},
 801da5c:	2312      	movs	r3, #18
 801da5e:	f887 3169 	strb.w	r3, [r7, #361]	; 0x169
};
 801da62:	f207 1269 	addw	r2, r7, #361	; 0x169
 801da66:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801da6a:	33c4      	adds	r3, #196	; 0xc4
 801da6c:	495b      	ldr	r1, [pc, #364]	; (801dbdc <_Z41__static_initialization_and_destruction_0ii+0x3a4>)
 801da6e:	4618      	mov	r0, r3
 801da70:	f7e3 fb42 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"while", TOKEN_WHILE},
 801da74:	2313      	movs	r3, #19
 801da76:	f887 316a 	strb.w	r3, [r7, #362]	; 0x16a
};
 801da7a:	f507 72b5 	add.w	r2, r7, #362	; 0x16a
 801da7e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801da82:	33e0      	adds	r3, #224	; 0xe0
 801da84:	4956      	ldr	r1, [pc, #344]	; (801dbe0 <_Z41__static_initialization_and_destruction_0ii+0x3a8>)
 801da86:	4618      	mov	r0, r3
 801da88:	f7e3 fb5e 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"end", TOKEN_END},
 801da8c:	2314      	movs	r3, #20
 801da8e:	f887 316b 	strb.w	r3, [r7, #363]	; 0x16b
};
 801da92:	f207 126b 	addw	r2, r7, #363	; 0x16b
 801da96:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801da9a:	33fc      	adds	r3, #252	; 0xfc
 801da9c:	4951      	ldr	r1, [pc, #324]	; (801dbe4 <_Z41__static_initialization_and_destruction_0ii+0x3ac>)
 801da9e:	4618      	mov	r0, r3
 801daa0:	f7e3 fbca 	bl	8001238 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>
 801daa4:	f107 0340 	add.w	r3, r7, #64	; 0x40
 801daa8:	f107 0248 	add.w	r2, r7, #72	; 0x48
 801daac:	601a      	str	r2, [r3, #0]
 801daae:	f107 0340 	add.w	r3, r7, #64	; 0x40
 801dab2:	220a      	movs	r2, #10
 801dab4:	605a      	str	r2, [r3, #4]
 801dab6:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 801daba:	4618      	mov	r0, r3
 801dabc:	f7e4 f8bd 	bl	8001c3a <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 801dac0:	f507 71b6 	add.w	r1, r7, #364	; 0x16c
 801dac4:	f107 0240 	add.w	r2, r7, #64	; 0x40
 801dac8:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 801dacc:	9300      	str	r3, [sp, #0]
 801dace:	460b      	mov	r3, r1
 801dad0:	ca06      	ldmia	r2, {r1, r2}
 801dad2:	4845      	ldr	r0, [pc, #276]	; (801dbe8 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 801dad4:	f7e4 f8c9 	bl	8001c6a <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>
 801dad8:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 801dadc:	4618      	mov	r0, r3
 801dade:	f7e4 f8b8 	bl	8001c52 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 801dae2:	f107 0448 	add.w	r4, r7, #72	; 0x48
 801dae6:	f504 748c 	add.w	r4, r4, #280	; 0x118
 801daea:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801daee:	429c      	cmp	r4, r3
 801daf0:	d004      	beq.n	801dafc <_Z41__static_initialization_and_destruction_0ii+0x2c4>
 801daf2:	3c1c      	subs	r4, #28
 801daf4:	4620      	mov	r0, r4
 801daf6:	f7e3 faf2 	bl	80010de <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 801dafa:	e7f6      	b.n	801daea <_Z41__static_initialization_and_destruction_0ii+0x2b2>
};
 801dafc:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 801db00:	2200      	movs	r2, #0
 801db02:	601a      	str	r2, [r3, #0]
 801db04:	605a      	str	r2, [r3, #4]
 801db06:	609a      	str	r2, [r3, #8]
 801db08:	233c      	movs	r3, #60	; 0x3c
 801db0a:	f887 317c 	strb.w	r3, [r7, #380]	; 0x17c
 801db0e:	231b      	movs	r3, #27
 801db10:	f887 317d 	strb.w	r3, [r7, #381]	; 0x17d
 801db14:	231c      	movs	r3, #28
 801db16:	f887 317e 	strb.w	r3, [r7, #382]	; 0x17e
 801db1a:	233e      	movs	r3, #62	; 0x3e
 801db1c:	f887 317f 	strb.w	r3, [r7, #383]	; 0x17f
 801db20:	2319      	movs	r3, #25
 801db22:	f887 3180 	strb.w	r3, [r7, #384]	; 0x180
 801db26:	231a      	movs	r3, #26
 801db28:	f887 3181 	strb.w	r3, [r7, #385]	; 0x181
 801db2c:	233d      	movs	r3, #61	; 0x3d
 801db2e:	f887 3182 	strb.w	r3, [r7, #386]	; 0x182
 801db32:	2318      	movs	r3, #24
 801db34:	f887 3183 	strb.w	r3, [r7, #387]	; 0x183
 801db38:	231d      	movs	r3, #29
 801db3a:	f887 3184 	strb.w	r3, [r7, #388]	; 0x184
 801db3e:	2321      	movs	r3, #33	; 0x21
 801db40:	f887 3185 	strb.w	r3, [r7, #389]	; 0x185
 801db44:	2317      	movs	r3, #23
 801db46:	f887 3186 	strb.w	r3, [r7, #390]	; 0x186
 801db4a:	231e      	movs	r3, #30
 801db4c:	f887 3187 	strb.w	r3, [r7, #391]	; 0x187
 801db50:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 801db54:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 801db58:	2304      	movs	r3, #4
 801db5a:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 801db5e:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801db62:	4618      	mov	r0, r3
 801db64:	f7e4 f8b1 	bl	8001cca <_ZNSaISt4pairIKc12double_tokenEEC1Ev>
 801db68:	f507 72c4 	add.w	r2, r7, #392	; 0x188
 801db6c:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801db70:	9300      	str	r3, [sp, #0]
 801db72:	4613      	mov	r3, r2
 801db74:	f507 72ba 	add.w	r2, r7, #372	; 0x174
 801db78:	ca06      	ldmia	r2, {r1, r2}
 801db7a:	481c      	ldr	r0, [pc, #112]	; (801dbec <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 801db7c:	f7e4 f8bd 	bl	8001cfa <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 801db80:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801db84:	4618      	mov	r0, r3
 801db86:	f7e4 f8ac 	bl	8001ce2 <_ZNSaISt4pairIKc12double_tokenEED1Ev>
static const std::map<char, double_token> token_double_chars
 801db8a:	1d3b      	adds	r3, r7, #4
 801db8c:	681b      	ldr	r3, [r3, #0]
 801db8e:	2b00      	cmp	r3, #0
 801db90:	d10e      	bne.n	801dbb0 <_Z41__static_initialization_and_destruction_0ii+0x378>
 801db92:	463b      	mov	r3, r7
 801db94:	681b      	ldr	r3, [r3, #0]
 801db96:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801db9a:	4293      	cmp	r3, r2
 801db9c:	d108      	bne.n	801dbb0 <_Z41__static_initialization_and_destruction_0ii+0x378>
 801db9e:	4813      	ldr	r0, [pc, #76]	; (801dbec <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 801dba0:	f7eb fd3d 	bl	800961e <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>
static const std::map<std::string, token_type> token_strings
 801dba4:	4810      	ldr	r0, [pc, #64]	; (801dbe8 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 801dba6:	f7eb fd47 	bl	8009638 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
static const std::map<char, token_type> token_chars
 801dbaa:	4804      	ldr	r0, [pc, #16]	; (801dbbc <_Z41__static_initialization_and_destruction_0ii+0x384>)
 801dbac:	f7eb fd51 	bl	8009652 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>
 801dbb0:	bf00      	nop
 801dbb2:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 801dbb6:	46bd      	mov	sp, r7
 801dbb8:	bd90      	pop	{r4, r7, pc}
 801dbba:	bf00      	nop
 801dbbc:	2000060c 	.word	0x2000060c
 801dbc0:	0802804c 	.word	0x0802804c
 801dbc4:	08028054 	.word	0x08028054
 801dbc8:	0802805c 	.word	0x0802805c
 801dbcc:	08028064 	.word	0x08028064
 801dbd0:	0802806c 	.word	0x0802806c
 801dbd4:	08028074 	.word	0x08028074
 801dbd8:	08028078 	.word	0x08028078
 801dbdc:	08028080 	.word	0x08028080
 801dbe0:	08028088 	.word	0x08028088
 801dbe4:	08028090 	.word	0x08028090
 801dbe8:	20000624 	.word	0x20000624
 801dbec:	2000063c 	.word	0x2000063c

0801dbf0 <_GLOBAL__sub_I_huart1>:
 801dbf0:	b580      	push	{r7, lr}
 801dbf2:	af00      	add	r7, sp, #0
 801dbf4:	f64f 71ff 	movw	r1, #65535	; 0xffff
 801dbf8:	2001      	movs	r0, #1
 801dbfa:	f7ff fe1d 	bl	801d838 <_Z41__static_initialization_and_destruction_0ii>
 801dbfe:	bd80      	pop	{r7, pc}

0801dc00 <_GLOBAL__sub_D_huart1>:
 801dc00:	b580      	push	{r7, lr}
 801dc02:	af00      	add	r7, sp, #0
 801dc04:	f64f 71ff 	movw	r1, #65535	; 0xffff
 801dc08:	2000      	movs	r0, #0
 801dc0a:	f7ff fe15 	bl	801d838 <_Z41__static_initialization_and_destruction_0ii>
 801dc0e:	bd80      	pop	{r7, pc}

0801dc10 <_Z11my_main_runP20__UART_HandleTypeDef>:
#include "my_main.h"

// main function called after setup from CUBEMX
void my_main_run(UART_HandleTypeDef *huart)
{
 801dc10:	b580      	push	{r7, lr}
 801dc12:	b084      	sub	sp, #16
 801dc14:	af00      	add	r7, sp, #0
 801dc16:	6078      	str	r0, [r7, #4]
		Transmitter::send_result();
		Transmitter::send_result();
		Transmitter::send_result(true);
	}

	Program *P = Parser::parse_program();
 801dc18:	f7f6 f970 	bl	8013efc <_ZN6Parser13parse_programEv>
 801dc1c:	60f8      	str	r0, [r7, #12]
	Transmitter::start_listening();
 801dc1e:	f7fa fb27 	bl	8018270 <_ZN11Transmitter15start_listeningEv>
	Executor::get_instance().execute(P);
 801dc22:	f7e3 fb45 	bl	80012b0 <_ZN8Executor12get_instanceEv>
 801dc26:	4603      	mov	r3, r0
 801dc28:	68f9      	ldr	r1, [r7, #12]
 801dc2a:	4618      	mov	r0, r3
 801dc2c:	f7e3 fb68 	bl	8001300 <_ZN8Executor7executeEP7Program>

	for (;;)
 801dc30:	e7fe      	b.n	801dc30 <_Z11my_main_runP20__UART_HandleTypeDef+0x20>
	...

0801dc34 <_Z41__static_initialization_and_destruction_0ii>:
	{

	}
}
 801dc34:	b590      	push	{r4, r7, lr}
 801dc36:	b0e7      	sub	sp, #412	; 0x19c
 801dc38:	af02      	add	r7, sp, #8
 801dc3a:	1d3b      	adds	r3, r7, #4
 801dc3c:	6018      	str	r0, [r3, #0]
 801dc3e:	463b      	mov	r3, r7
 801dc40:	6019      	str	r1, [r3, #0]
 801dc42:	1d3b      	adds	r3, r7, #4
 801dc44:	681b      	ldr	r3, [r3, #0]
 801dc46:	2b01      	cmp	r3, #1
 801dc48:	f040 819d 	bne.w	801df86 <_Z41__static_initialization_and_destruction_0ii+0x352>
 801dc4c:	463b      	mov	r3, r7
 801dc4e:	681b      	ldr	r3, [r3, #0]
 801dc50:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801dc54:	4293      	cmp	r3, r2
 801dc56:	f040 8196 	bne.w	801df86 <_Z41__static_initialization_and_destruction_0ii+0x352>
};
 801dc5a:	f107 0314 	add.w	r3, r7, #20
 801dc5e:	4618      	mov	r0, r3
 801dc60:	2322      	movs	r3, #34	; 0x22
 801dc62:	461a      	mov	r2, r3
 801dc64:	2100      	movs	r1, #0
 801dc66:	f006 fabd 	bl	80241e4 <memset>
 801dc6a:	f107 0314 	add.w	r3, r7, #20
 801dc6e:	223a      	movs	r2, #58	; 0x3a
 801dc70:	701a      	strb	r2, [r3, #0]
 801dc72:	f107 0314 	add.w	r3, r7, #20
 801dc76:	2201      	movs	r2, #1
 801dc78:	705a      	strb	r2, [r3, #1]
 801dc7a:	f107 0314 	add.w	r3, r7, #20
 801dc7e:	220a      	movs	r2, #10
 801dc80:	709a      	strb	r2, [r3, #2]
 801dc82:	f107 0314 	add.w	r3, r7, #20
 801dc86:	220a      	movs	r2, #10
 801dc88:	70da      	strb	r2, [r3, #3]
 801dc8a:	f107 0314 	add.w	r3, r7, #20
 801dc8e:	222c      	movs	r2, #44	; 0x2c
 801dc90:	711a      	strb	r2, [r3, #4]
 801dc92:	f107 0314 	add.w	r3, r7, #20
 801dc96:	220c      	movs	r2, #12
 801dc98:	715a      	strb	r2, [r3, #5]
 801dc9a:	f107 0314 	add.w	r3, r7, #20
 801dc9e:	222e      	movs	r2, #46	; 0x2e
 801dca0:	719a      	strb	r2, [r3, #6]
 801dca2:	f107 0314 	add.w	r3, r7, #20
 801dca6:	220b      	movs	r2, #11
 801dca8:	71da      	strb	r2, [r3, #7]
 801dcaa:	f107 0314 	add.w	r3, r7, #20
 801dcae:	225b      	movs	r2, #91	; 0x5b
 801dcb0:	721a      	strb	r2, [r3, #8]
 801dcb2:	f107 0314 	add.w	r3, r7, #20
 801dcb6:	220d      	movs	r2, #13
 801dcb8:	725a      	strb	r2, [r3, #9]
 801dcba:	f107 0314 	add.w	r3, r7, #20
 801dcbe:	225d      	movs	r2, #93	; 0x5d
 801dcc0:	729a      	strb	r2, [r3, #10]
 801dcc2:	f107 0314 	add.w	r3, r7, #20
 801dcc6:	220e      	movs	r2, #14
 801dcc8:	72da      	strb	r2, [r3, #11]
 801dcca:	f107 0314 	add.w	r3, r7, #20
 801dcce:	227c      	movs	r2, #124	; 0x7c
 801dcd0:	731a      	strb	r2, [r3, #12]
 801dcd2:	f107 0314 	add.w	r3, r7, #20
 801dcd6:	2215      	movs	r2, #21
 801dcd8:	735a      	strb	r2, [r3, #13]
 801dcda:	f107 0314 	add.w	r3, r7, #20
 801dcde:	2226      	movs	r2, #38	; 0x26
 801dce0:	739a      	strb	r2, [r3, #14]
 801dce2:	f107 0314 	add.w	r3, r7, #20
 801dce6:	2216      	movs	r2, #22
 801dce8:	73da      	strb	r2, [r3, #15]
 801dcea:	f107 0314 	add.w	r3, r7, #20
 801dcee:	222b      	movs	r2, #43	; 0x2b
 801dcf0:	741a      	strb	r2, [r3, #16]
 801dcf2:	f107 0314 	add.w	r3, r7, #20
 801dcf6:	221f      	movs	r2, #31
 801dcf8:	745a      	strb	r2, [r3, #17]
 801dcfa:	f107 0314 	add.w	r3, r7, #20
 801dcfe:	222d      	movs	r2, #45	; 0x2d
 801dd00:	749a      	strb	r2, [r3, #18]
 801dd02:	f107 0314 	add.w	r3, r7, #20
 801dd06:	2220      	movs	r2, #32
 801dd08:	74da      	strb	r2, [r3, #19]
 801dd0a:	f107 0314 	add.w	r3, r7, #20
 801dd0e:	222a      	movs	r2, #42	; 0x2a
 801dd10:	751a      	strb	r2, [r3, #20]
 801dd12:	f107 0314 	add.w	r3, r7, #20
 801dd16:	2221      	movs	r2, #33	; 0x21
 801dd18:	755a      	strb	r2, [r3, #21]
 801dd1a:	f107 0314 	add.w	r3, r7, #20
 801dd1e:	222f      	movs	r2, #47	; 0x2f
 801dd20:	759a      	strb	r2, [r3, #22]
 801dd22:	f107 0314 	add.w	r3, r7, #20
 801dd26:	2222      	movs	r2, #34	; 0x22
 801dd28:	75da      	strb	r2, [r3, #23]
 801dd2a:	f107 0314 	add.w	r3, r7, #20
 801dd2e:	225e      	movs	r2, #94	; 0x5e
 801dd30:	761a      	strb	r2, [r3, #24]
 801dd32:	f107 0314 	add.w	r3, r7, #20
 801dd36:	2223      	movs	r2, #35	; 0x23
 801dd38:	765a      	strb	r2, [r3, #25]
 801dd3a:	f107 0314 	add.w	r3, r7, #20
 801dd3e:	2225      	movs	r2, #37	; 0x25
 801dd40:	769a      	strb	r2, [r3, #26]
 801dd42:	f107 0314 	add.w	r3, r7, #20
 801dd46:	2224      	movs	r2, #36	; 0x24
 801dd48:	76da      	strb	r2, [r3, #27]
 801dd4a:	f107 0314 	add.w	r3, r7, #20
 801dd4e:	2228      	movs	r2, #40	; 0x28
 801dd50:	771a      	strb	r2, [r3, #28]
 801dd52:	f107 0314 	add.w	r3, r7, #20
 801dd56:	2226      	movs	r2, #38	; 0x26
 801dd58:	775a      	strb	r2, [r3, #29]
 801dd5a:	f107 0314 	add.w	r3, r7, #20
 801dd5e:	2229      	movs	r2, #41	; 0x29
 801dd60:	779a      	strb	r2, [r3, #30]
 801dd62:	f107 0314 	add.w	r3, r7, #20
 801dd66:	2227      	movs	r2, #39	; 0x27
 801dd68:	77da      	strb	r2, [r3, #31]
 801dd6a:	f107 0314 	add.w	r3, r7, #20
 801dd6e:	2225      	movs	r2, #37	; 0x25
 801dd70:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 801dd74:	f107 030c 	add.w	r3, r7, #12
 801dd78:	f107 0214 	add.w	r2, r7, #20
 801dd7c:	601a      	str	r2, [r3, #0]
 801dd7e:	f107 030c 	add.w	r3, r7, #12
 801dd82:	2211      	movs	r2, #17
 801dd84:	605a      	str	r2, [r3, #4]
 801dd86:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801dd8a:	4618      	mov	r0, r3
 801dd8c:	f7e3 feb0 	bl	8001af0 <_ZNSaISt4pairIKc10token_typeEEC1Ev>
 801dd90:	f107 0138 	add.w	r1, r7, #56	; 0x38
 801dd94:	f107 020c 	add.w	r2, r7, #12
 801dd98:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801dd9c:	9300      	str	r3, [sp, #0]
 801dd9e:	460b      	mov	r3, r1
 801dda0:	ca06      	ldmia	r2, {r1, r2}
 801dda2:	4885      	ldr	r0, [pc, #532]	; (801dfb8 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 801dda4:	f7e3 febc 	bl	8001b20 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 801dda8:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801ddac:	4618      	mov	r0, r3
 801ddae:	f7e3 feab 	bl	8001b08 <_ZNSaISt4pairIKc10token_typeEED1Ev>
	{"true", TOKEN_TRUE},
 801ddb2:	2305      	movs	r3, #5
 801ddb4:	f887 3162 	strb.w	r3, [r7, #354]	; 0x162
};
 801ddb8:	f507 72b1 	add.w	r2, r7, #354	; 0x162
 801ddbc:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801ddc0:	497e      	ldr	r1, [pc, #504]	; (801dfbc <_Z41__static_initialization_and_destruction_0ii+0x388>)
 801ddc2:	4618      	mov	r0, r3
 801ddc4:	f7e3 f998 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"false", TOKEN_FALSE},
 801ddc8:	2306      	movs	r3, #6
 801ddca:	f887 3163 	strb.w	r3, [r7, #355]	; 0x163
};
 801ddce:	f207 1263 	addw	r2, r7, #355	; 0x163
 801ddd2:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801ddd6:	331c      	adds	r3, #28
 801ddd8:	4979      	ldr	r1, [pc, #484]	; (801dfc0 <_Z41__static_initialization_and_destruction_0ii+0x38c>)
 801ddda:	4618      	mov	r0, r3
 801dddc:	f7e3 f9b4 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"setup", TOKEN_SETUP},
 801dde0:	2307      	movs	r3, #7
 801dde2:	f887 3164 	strb.w	r3, [r7, #356]	; 0x164
};
 801dde6:	f507 72b2 	add.w	r2, r7, #356	; 0x164
 801ddea:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801ddee:	3338      	adds	r3, #56	; 0x38
 801ddf0:	4974      	ldr	r1, [pc, #464]	; (801dfc4 <_Z41__static_initialization_and_destruction_0ii+0x390>)
 801ddf2:	4618      	mov	r0, r3
 801ddf4:	f7e3 f9a8 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"loop", TOKEN_LOOP},
 801ddf8:	2308      	movs	r3, #8
 801ddfa:	f887 3165 	strb.w	r3, [r7, #357]	; 0x165
};
 801ddfe:	f207 1265 	addw	r2, r7, #357	; 0x165
 801de02:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801de06:	3354      	adds	r3, #84	; 0x54
 801de08:	496f      	ldr	r1, [pc, #444]	; (801dfc8 <_Z41__static_initialization_and_destruction_0ii+0x394>)
 801de0a:	4618      	mov	r0, r3
 801de0c:	f7e3 f974 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"finish", TOKEN_FINISH},
 801de10:	2309      	movs	r3, #9
 801de12:	f887 3166 	strb.w	r3, [r7, #358]	; 0x166
};
 801de16:	f507 72b3 	add.w	r2, r7, #358	; 0x166
 801de1a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801de1e:	3370      	adds	r3, #112	; 0x70
 801de20:	496a      	ldr	r1, [pc, #424]	; (801dfcc <_Z41__static_initialization_and_destruction_0ii+0x398>)
 801de22:	4618      	mov	r0, r3
 801de24:	f7e3 f9b8 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"if", TOKEN_IF},
 801de28:	2310      	movs	r3, #16
 801de2a:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167
};
 801de2e:	f207 1267 	addw	r2, r7, #359	; 0x167
 801de32:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801de36:	338c      	adds	r3, #140	; 0x8c
 801de38:	4965      	ldr	r1, [pc, #404]	; (801dfd0 <_Z41__static_initialization_and_destruction_0ii+0x39c>)
 801de3a:	4618      	mov	r0, r3
 801de3c:	f7e3 f9d4 	bl	80011e8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>
	{"elseif", TOKEN_ELSEIF},
 801de40:	2311      	movs	r3, #17
 801de42:	f887 3168 	strb.w	r3, [r7, #360]	; 0x168
};
 801de46:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 801de4a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801de4e:	33a8      	adds	r3, #168	; 0xa8
 801de50:	4960      	ldr	r1, [pc, #384]	; (801dfd4 <_Z41__static_initialization_and_destruction_0ii+0x3a0>)
 801de52:	4618      	mov	r0, r3
 801de54:	f7e3 f9a0 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"else", TOKEN_ELSE},
 801de58:	2312      	movs	r3, #18
 801de5a:	f887 3169 	strb.w	r3, [r7, #361]	; 0x169
};
 801de5e:	f207 1269 	addw	r2, r7, #361	; 0x169
 801de62:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801de66:	33c4      	adds	r3, #196	; 0xc4
 801de68:	495b      	ldr	r1, [pc, #364]	; (801dfd8 <_Z41__static_initialization_and_destruction_0ii+0x3a4>)
 801de6a:	4618      	mov	r0, r3
 801de6c:	f7e3 f944 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"while", TOKEN_WHILE},
 801de70:	2313      	movs	r3, #19
 801de72:	f887 316a 	strb.w	r3, [r7, #362]	; 0x16a
};
 801de76:	f507 72b5 	add.w	r2, r7, #362	; 0x16a
 801de7a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801de7e:	33e0      	adds	r3, #224	; 0xe0
 801de80:	4956      	ldr	r1, [pc, #344]	; (801dfdc <_Z41__static_initialization_and_destruction_0ii+0x3a8>)
 801de82:	4618      	mov	r0, r3
 801de84:	f7e3 f960 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"end", TOKEN_END},
 801de88:	2314      	movs	r3, #20
 801de8a:	f887 316b 	strb.w	r3, [r7, #363]	; 0x16b
};
 801de8e:	f207 126b 	addw	r2, r7, #363	; 0x16b
 801de92:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801de96:	33fc      	adds	r3, #252	; 0xfc
 801de98:	4951      	ldr	r1, [pc, #324]	; (801dfe0 <_Z41__static_initialization_and_destruction_0ii+0x3ac>)
 801de9a:	4618      	mov	r0, r3
 801de9c:	f7e3 f9cc 	bl	8001238 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>
 801dea0:	f107 0340 	add.w	r3, r7, #64	; 0x40
 801dea4:	f107 0248 	add.w	r2, r7, #72	; 0x48
 801dea8:	601a      	str	r2, [r3, #0]
 801deaa:	f107 0340 	add.w	r3, r7, #64	; 0x40
 801deae:	220a      	movs	r2, #10
 801deb0:	605a      	str	r2, [r3, #4]
 801deb2:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 801deb6:	4618      	mov	r0, r3
 801deb8:	f7e3 febf 	bl	8001c3a <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 801debc:	f507 71b6 	add.w	r1, r7, #364	; 0x16c
 801dec0:	f107 0240 	add.w	r2, r7, #64	; 0x40
 801dec4:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 801dec8:	9300      	str	r3, [sp, #0]
 801deca:	460b      	mov	r3, r1
 801decc:	ca06      	ldmia	r2, {r1, r2}
 801dece:	4845      	ldr	r0, [pc, #276]	; (801dfe4 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 801ded0:	f7e3 fecb 	bl	8001c6a <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>
 801ded4:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 801ded8:	4618      	mov	r0, r3
 801deda:	f7e3 feba 	bl	8001c52 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 801dede:	f107 0448 	add.w	r4, r7, #72	; 0x48
 801dee2:	f504 748c 	add.w	r4, r4, #280	; 0x118
 801dee6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801deea:	429c      	cmp	r4, r3
 801deec:	d004      	beq.n	801def8 <_Z41__static_initialization_and_destruction_0ii+0x2c4>
 801deee:	3c1c      	subs	r4, #28
 801def0:	4620      	mov	r0, r4
 801def2:	f7e3 f8f4 	bl	80010de <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 801def6:	e7f6      	b.n	801dee6 <_Z41__static_initialization_and_destruction_0ii+0x2b2>
};
 801def8:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 801defc:	2200      	movs	r2, #0
 801defe:	601a      	str	r2, [r3, #0]
 801df00:	605a      	str	r2, [r3, #4]
 801df02:	609a      	str	r2, [r3, #8]
 801df04:	233c      	movs	r3, #60	; 0x3c
 801df06:	f887 317c 	strb.w	r3, [r7, #380]	; 0x17c
 801df0a:	231b      	movs	r3, #27
 801df0c:	f887 317d 	strb.w	r3, [r7, #381]	; 0x17d
 801df10:	231c      	movs	r3, #28
 801df12:	f887 317e 	strb.w	r3, [r7, #382]	; 0x17e
 801df16:	233e      	movs	r3, #62	; 0x3e
 801df18:	f887 317f 	strb.w	r3, [r7, #383]	; 0x17f
 801df1c:	2319      	movs	r3, #25
 801df1e:	f887 3180 	strb.w	r3, [r7, #384]	; 0x180
 801df22:	231a      	movs	r3, #26
 801df24:	f887 3181 	strb.w	r3, [r7, #385]	; 0x181
 801df28:	233d      	movs	r3, #61	; 0x3d
 801df2a:	f887 3182 	strb.w	r3, [r7, #386]	; 0x182
 801df2e:	2318      	movs	r3, #24
 801df30:	f887 3183 	strb.w	r3, [r7, #387]	; 0x183
 801df34:	231d      	movs	r3, #29
 801df36:	f887 3184 	strb.w	r3, [r7, #388]	; 0x184
 801df3a:	2321      	movs	r3, #33	; 0x21
 801df3c:	f887 3185 	strb.w	r3, [r7, #389]	; 0x185
 801df40:	2317      	movs	r3, #23
 801df42:	f887 3186 	strb.w	r3, [r7, #390]	; 0x186
 801df46:	231e      	movs	r3, #30
 801df48:	f887 3187 	strb.w	r3, [r7, #391]	; 0x187
 801df4c:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 801df50:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 801df54:	2304      	movs	r3, #4
 801df56:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 801df5a:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801df5e:	4618      	mov	r0, r3
 801df60:	f7e3 feb3 	bl	8001cca <_ZNSaISt4pairIKc12double_tokenEEC1Ev>
 801df64:	f507 72c4 	add.w	r2, r7, #392	; 0x188
 801df68:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801df6c:	9300      	str	r3, [sp, #0]
 801df6e:	4613      	mov	r3, r2
 801df70:	f507 72ba 	add.w	r2, r7, #372	; 0x174
 801df74:	ca06      	ldmia	r2, {r1, r2}
 801df76:	481c      	ldr	r0, [pc, #112]	; (801dfe8 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 801df78:	f7e3 febf 	bl	8001cfa <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 801df7c:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801df80:	4618      	mov	r0, r3
 801df82:	f7e3 feae 	bl	8001ce2 <_ZNSaISt4pairIKc12double_tokenEED1Ev>
static const std::map<char, double_token> token_double_chars
 801df86:	1d3b      	adds	r3, r7, #4
 801df88:	681b      	ldr	r3, [r3, #0]
 801df8a:	2b00      	cmp	r3, #0
 801df8c:	d10e      	bne.n	801dfac <_Z41__static_initialization_and_destruction_0ii+0x378>
 801df8e:	463b      	mov	r3, r7
 801df90:	681b      	ldr	r3, [r3, #0]
 801df92:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801df96:	4293      	cmp	r3, r2
 801df98:	d108      	bne.n	801dfac <_Z41__static_initialization_and_destruction_0ii+0x378>
 801df9a:	4813      	ldr	r0, [pc, #76]	; (801dfe8 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 801df9c:	f7eb fb3f 	bl	800961e <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>
static const std::map<std::string, token_type> token_strings
 801dfa0:	4810      	ldr	r0, [pc, #64]	; (801dfe4 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 801dfa2:	f7eb fb49 	bl	8009638 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
static const std::map<char, token_type> token_chars
 801dfa6:	4804      	ldr	r0, [pc, #16]	; (801dfb8 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 801dfa8:	f7eb fb53 	bl	8009652 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>
 801dfac:	bf00      	nop
 801dfae:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 801dfb2:	46bd      	mov	sp, r7
 801dfb4:	bd90      	pop	{r4, r7, pc}
 801dfb6:	bf00      	nop
 801dfb8:	200006d8 	.word	0x200006d8
 801dfbc:	080280c0 	.word	0x080280c0
 801dfc0:	080280c8 	.word	0x080280c8
 801dfc4:	080280d0 	.word	0x080280d0
 801dfc8:	080280d8 	.word	0x080280d8
 801dfcc:	080280e0 	.word	0x080280e0
 801dfd0:	080280e8 	.word	0x080280e8
 801dfd4:	080280ec 	.word	0x080280ec
 801dfd8:	080280f4 	.word	0x080280f4
 801dfdc:	080280fc 	.word	0x080280fc
 801dfe0:	08028104 	.word	0x08028104
 801dfe4:	200006f0 	.word	0x200006f0
 801dfe8:	20000708 	.word	0x20000708

0801dfec <_GLOBAL__sub_I__Z11my_main_runP20__UART_HandleTypeDef>:
 801dfec:	b580      	push	{r7, lr}
 801dfee:	af00      	add	r7, sp, #0
 801dff0:	f64f 71ff 	movw	r1, #65535	; 0xffff
 801dff4:	2001      	movs	r0, #1
 801dff6:	f7ff fe1d 	bl	801dc34 <_Z41__static_initialization_and_destruction_0ii>
 801dffa:	bd80      	pop	{r7, pc}

0801dffc <_GLOBAL__sub_D__Z11my_main_runP20__UART_HandleTypeDef>:
 801dffc:	b580      	push	{r7, lr}
 801dffe:	af00      	add	r7, sp, #0
 801e000:	f64f 71ff 	movw	r1, #65535	; 0xffff
 801e004:	2000      	movs	r0, #0
 801e006:	f7ff fe15 	bl	801dc34 <_Z41__static_initialization_and_destruction_0ii>
 801e00a:	bd80      	pop	{r7, pc}

0801e00c <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 801e00c:	b480      	push	{r7}
 801e00e:	b083      	sub	sp, #12
 801e010:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_PWR_CLK_ENABLE();
 801e012:	4b0f      	ldr	r3, [pc, #60]	; (801e050 <HAL_MspInit+0x44>)
 801e014:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801e016:	4a0e      	ldr	r2, [pc, #56]	; (801e050 <HAL_MspInit+0x44>)
 801e018:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 801e01c:	6413      	str	r3, [r2, #64]	; 0x40
 801e01e:	4b0c      	ldr	r3, [pc, #48]	; (801e050 <HAL_MspInit+0x44>)
 801e020:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801e022:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 801e026:	607b      	str	r3, [r7, #4]
 801e028:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 801e02a:	4b09      	ldr	r3, [pc, #36]	; (801e050 <HAL_MspInit+0x44>)
 801e02c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801e02e:	4a08      	ldr	r2, [pc, #32]	; (801e050 <HAL_MspInit+0x44>)
 801e030:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 801e034:	6453      	str	r3, [r2, #68]	; 0x44
 801e036:	4b06      	ldr	r3, [pc, #24]	; (801e050 <HAL_MspInit+0x44>)
 801e038:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801e03a:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 801e03e:	603b      	str	r3, [r7, #0]
 801e040:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 801e042:	bf00      	nop
 801e044:	370c      	adds	r7, #12
 801e046:	46bd      	mov	sp, r7
 801e048:	f85d 7b04 	ldr.w	r7, [sp], #4
 801e04c:	4770      	bx	lr
 801e04e:	bf00      	nop
 801e050:	40023800 	.word	0x40023800

0801e054 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 801e054:	b580      	push	{r7, lr}
 801e056:	b08a      	sub	sp, #40	; 0x28
 801e058:	af00      	add	r7, sp, #0
 801e05a:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 801e05c:	f107 0314 	add.w	r3, r7, #20
 801e060:	2200      	movs	r2, #0
 801e062:	601a      	str	r2, [r3, #0]
 801e064:	605a      	str	r2, [r3, #4]
 801e066:	609a      	str	r2, [r3, #8]
 801e068:	60da      	str	r2, [r3, #12]
 801e06a:	611a      	str	r2, [r3, #16]
  if(huart->Instance==USART1)
 801e06c:	687b      	ldr	r3, [r7, #4]
 801e06e:	681b      	ldr	r3, [r3, #0]
 801e070:	4a1b      	ldr	r2, [pc, #108]	; (801e0e0 <HAL_UART_MspInit+0x8c>)
 801e072:	4293      	cmp	r3, r2
 801e074:	d130      	bne.n	801e0d8 <HAL_UART_MspInit+0x84>
  {
  /* USER CODE BEGIN USART1_MspInit 0 */

  /* USER CODE END USART1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 801e076:	4b1b      	ldr	r3, [pc, #108]	; (801e0e4 <HAL_UART_MspInit+0x90>)
 801e078:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801e07a:	4a1a      	ldr	r2, [pc, #104]	; (801e0e4 <HAL_UART_MspInit+0x90>)
 801e07c:	f043 0310 	orr.w	r3, r3, #16
 801e080:	6453      	str	r3, [r2, #68]	; 0x44
 801e082:	4b18      	ldr	r3, [pc, #96]	; (801e0e4 <HAL_UART_MspInit+0x90>)
 801e084:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801e086:	f003 0310 	and.w	r3, r3, #16
 801e08a:	613b      	str	r3, [r7, #16]
 801e08c:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 801e08e:	4b15      	ldr	r3, [pc, #84]	; (801e0e4 <HAL_UART_MspInit+0x90>)
 801e090:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801e092:	4a14      	ldr	r2, [pc, #80]	; (801e0e4 <HAL_UART_MspInit+0x90>)
 801e094:	f043 0301 	orr.w	r3, r3, #1
 801e098:	6313      	str	r3, [r2, #48]	; 0x30
 801e09a:	4b12      	ldr	r3, [pc, #72]	; (801e0e4 <HAL_UART_MspInit+0x90>)
 801e09c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801e09e:	f003 0301 	and.w	r3, r3, #1
 801e0a2:	60fb      	str	r3, [r7, #12]
 801e0a4:	68fb      	ldr	r3, [r7, #12]
    /**USART1 GPIO Configuration
    PA9     ------> USART1_TX
    PA10     ------> USART1_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
 801e0a6:	f44f 63c0 	mov.w	r3, #1536	; 0x600
 801e0aa:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 801e0ac:	2302      	movs	r3, #2
 801e0ae:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 801e0b0:	2300      	movs	r3, #0
 801e0b2:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 801e0b4:	2303      	movs	r3, #3
 801e0b6:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 801e0b8:	2307      	movs	r3, #7
 801e0ba:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 801e0bc:	f107 0314 	add.w	r3, r7, #20
 801e0c0:	4619      	mov	r1, r3
 801e0c2:	4809      	ldr	r0, [pc, #36]	; (801e0e8 <HAL_UART_MspInit+0x94>)
 801e0c4:	f001 ffce 	bl	8020064 <HAL_GPIO_Init>

    /* USART1 interrupt Init */
    HAL_NVIC_SetPriority(USART1_IRQn, 0, 0);
 801e0c8:	2200      	movs	r2, #0
 801e0ca:	2100      	movs	r1, #0
 801e0cc:	2025      	movs	r0, #37	; 0x25
 801e0ce:	f001 ff00 	bl	801fed2 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART1_IRQn);
 801e0d2:	2025      	movs	r0, #37	; 0x25
 801e0d4:	f001 ff19 	bl	801ff0a <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USART1_MspInit 1 */

  /* USER CODE END USART1_MspInit 1 */
  }

}
 801e0d8:	bf00      	nop
 801e0da:	3728      	adds	r7, #40	; 0x28
 801e0dc:	46bd      	mov	sp, r7
 801e0de:	bd80      	pop	{r7, pc}
 801e0e0:	40011000 	.word	0x40011000
 801e0e4:	40023800 	.word	0x40023800
 801e0e8:	40020000 	.word	0x40020000

0801e0ec <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 801e0ec:	b480      	push	{r7}
 801e0ee:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 801e0f0:	e7fe      	b.n	801e0f0 <NMI_Handler+0x4>

0801e0f2 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 801e0f2:	b480      	push	{r7}
 801e0f4:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 801e0f6:	e7fe      	b.n	801e0f6 <HardFault_Handler+0x4>

0801e0f8 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 801e0f8:	b480      	push	{r7}
 801e0fa:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 801e0fc:	e7fe      	b.n	801e0fc <MemManage_Handler+0x4>

0801e0fe <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 801e0fe:	b480      	push	{r7}
 801e100:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 801e102:	e7fe      	b.n	801e102 <BusFault_Handler+0x4>

0801e104 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 801e104:	b480      	push	{r7}
 801e106:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 801e108:	e7fe      	b.n	801e108 <UsageFault_Handler+0x4>

0801e10a <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 801e10a:	b480      	push	{r7}
 801e10c:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 801e10e:	bf00      	nop
 801e110:	46bd      	mov	sp, r7
 801e112:	f85d 7b04 	ldr.w	r7, [sp], #4
 801e116:	4770      	bx	lr

0801e118 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 801e118:	b480      	push	{r7}
 801e11a:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 801e11c:	bf00      	nop
 801e11e:	46bd      	mov	sp, r7
 801e120:	f85d 7b04 	ldr.w	r7, [sp], #4
 801e124:	4770      	bx	lr

0801e126 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 801e126:	b480      	push	{r7}
 801e128:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 801e12a:	bf00      	nop
 801e12c:	46bd      	mov	sp, r7
 801e12e:	f85d 7b04 	ldr.w	r7, [sp], #4
 801e132:	4770      	bx	lr

0801e134 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 801e134:	b580      	push	{r7, lr}
 801e136:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 801e138:	f001 fdac 	bl	801fc94 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 801e13c:	bf00      	nop
 801e13e:	bd80      	pop	{r7, pc}

0801e140 <USART1_IRQHandler>:

/**
  * @brief This function handles USART1 global interrupt.
  */
void USART1_IRQHandler(void)
{
 801e140:	b580      	push	{r7, lr}
 801e142:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART1_IRQn 0 */

  /* USER CODE END USART1_IRQn 0 */
  HAL_UART_IRQHandler(&huart1);
 801e144:	4802      	ldr	r0, [pc, #8]	; (801e150 <USART1_IRQHandler+0x10>)
 801e146:	f003 fbe1 	bl	802190c <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART1_IRQn 1 */

  /* USER CODE END USART1_IRQn 1 */
}
 801e14a:	bf00      	nop
 801e14c:	bd80      	pop	{r7, pc}
 801e14e:	bf00      	nop
 801e150:	20000654 	.word	0x20000654

0801e154 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 801e154:	b480      	push	{r7}
 801e156:	af00      	add	r7, sp, #0
	return 1;
 801e158:	2301      	movs	r3, #1
}
 801e15a:	4618      	mov	r0, r3
 801e15c:	46bd      	mov	sp, r7
 801e15e:	f85d 7b04 	ldr.w	r7, [sp], #4
 801e162:	4770      	bx	lr

0801e164 <_kill>:

int _kill(int pid, int sig)
{
 801e164:	b580      	push	{r7, lr}
 801e166:	b082      	sub	sp, #8
 801e168:	af00      	add	r7, sp, #0
 801e16a:	6078      	str	r0, [r7, #4]
 801e16c:	6039      	str	r1, [r7, #0]
	errno = EINVAL;
 801e16e:	f005 ff97 	bl	80240a0 <__errno>
 801e172:	4603      	mov	r3, r0
 801e174:	2216      	movs	r2, #22
 801e176:	601a      	str	r2, [r3, #0]
	return -1;
 801e178:	f04f 33ff 	mov.w	r3, #4294967295
}
 801e17c:	4618      	mov	r0, r3
 801e17e:	3708      	adds	r7, #8
 801e180:	46bd      	mov	sp, r7
 801e182:	bd80      	pop	{r7, pc}

0801e184 <_exit>:

void _exit (int status)
{
 801e184:	b580      	push	{r7, lr}
 801e186:	b082      	sub	sp, #8
 801e188:	af00      	add	r7, sp, #0
 801e18a:	6078      	str	r0, [r7, #4]
	_kill(status, -1);
 801e18c:	f04f 31ff 	mov.w	r1, #4294967295
 801e190:	6878      	ldr	r0, [r7, #4]
 801e192:	f7ff ffe7 	bl	801e164 <_kill>
	while (1) {}		/* Make sure we hang here */
 801e196:	e7fe      	b.n	801e196 <_exit+0x12>

0801e198 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 801e198:	b580      	push	{r7, lr}
 801e19a:	b086      	sub	sp, #24
 801e19c:	af00      	add	r7, sp, #0
 801e19e:	60f8      	str	r0, [r7, #12]
 801e1a0:	60b9      	str	r1, [r7, #8]
 801e1a2:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 801e1a4:	2300      	movs	r3, #0
 801e1a6:	617b      	str	r3, [r7, #20]
 801e1a8:	e00a      	b.n	801e1c0 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 801e1aa:	f3af 8000 	nop.w
 801e1ae:	4601      	mov	r1, r0
 801e1b0:	68bb      	ldr	r3, [r7, #8]
 801e1b2:	1c5a      	adds	r2, r3, #1
 801e1b4:	60ba      	str	r2, [r7, #8]
 801e1b6:	b2ca      	uxtb	r2, r1
 801e1b8:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 801e1ba:	697b      	ldr	r3, [r7, #20]
 801e1bc:	3301      	adds	r3, #1
 801e1be:	617b      	str	r3, [r7, #20]
 801e1c0:	697a      	ldr	r2, [r7, #20]
 801e1c2:	687b      	ldr	r3, [r7, #4]
 801e1c4:	429a      	cmp	r2, r3
 801e1c6:	dbf0      	blt.n	801e1aa <_read+0x12>
	}

return len;
 801e1c8:	687b      	ldr	r3, [r7, #4]
}
 801e1ca:	4618      	mov	r0, r3
 801e1cc:	3718      	adds	r7, #24
 801e1ce:	46bd      	mov	sp, r7
 801e1d0:	bd80      	pop	{r7, pc}

0801e1d2 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 801e1d2:	b580      	push	{r7, lr}
 801e1d4:	b086      	sub	sp, #24
 801e1d6:	af00      	add	r7, sp, #0
 801e1d8:	60f8      	str	r0, [r7, #12]
 801e1da:	60b9      	str	r1, [r7, #8]
 801e1dc:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 801e1de:	2300      	movs	r3, #0
 801e1e0:	617b      	str	r3, [r7, #20]
 801e1e2:	e009      	b.n	801e1f8 <_write+0x26>
	{
		__io_putchar(*ptr++);
 801e1e4:	68bb      	ldr	r3, [r7, #8]
 801e1e6:	1c5a      	adds	r2, r3, #1
 801e1e8:	60ba      	str	r2, [r7, #8]
 801e1ea:	781b      	ldrb	r3, [r3, #0]
 801e1ec:	4618      	mov	r0, r3
 801e1ee:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 801e1f2:	697b      	ldr	r3, [r7, #20]
 801e1f4:	3301      	adds	r3, #1
 801e1f6:	617b      	str	r3, [r7, #20]
 801e1f8:	697a      	ldr	r2, [r7, #20]
 801e1fa:	687b      	ldr	r3, [r7, #4]
 801e1fc:	429a      	cmp	r2, r3
 801e1fe:	dbf1      	blt.n	801e1e4 <_write+0x12>
	}
	return len;
 801e200:	687b      	ldr	r3, [r7, #4]
}
 801e202:	4618      	mov	r0, r3
 801e204:	3718      	adds	r7, #24
 801e206:	46bd      	mov	sp, r7
 801e208:	bd80      	pop	{r7, pc}

0801e20a <_close>:

int _close(int file)
{
 801e20a:	b480      	push	{r7}
 801e20c:	b083      	sub	sp, #12
 801e20e:	af00      	add	r7, sp, #0
 801e210:	6078      	str	r0, [r7, #4]
	return -1;
 801e212:	f04f 33ff 	mov.w	r3, #4294967295
}
 801e216:	4618      	mov	r0, r3
 801e218:	370c      	adds	r7, #12
 801e21a:	46bd      	mov	sp, r7
 801e21c:	f85d 7b04 	ldr.w	r7, [sp], #4
 801e220:	4770      	bx	lr

0801e222 <_fstat>:


int _fstat(int file, struct stat *st)
{
 801e222:	b480      	push	{r7}
 801e224:	b083      	sub	sp, #12
 801e226:	af00      	add	r7, sp, #0
 801e228:	6078      	str	r0, [r7, #4]
 801e22a:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 801e22c:	683b      	ldr	r3, [r7, #0]
 801e22e:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 801e232:	605a      	str	r2, [r3, #4]
	return 0;
 801e234:	2300      	movs	r3, #0
}
 801e236:	4618      	mov	r0, r3
 801e238:	370c      	adds	r7, #12
 801e23a:	46bd      	mov	sp, r7
 801e23c:	f85d 7b04 	ldr.w	r7, [sp], #4
 801e240:	4770      	bx	lr

0801e242 <_isatty>:

int _isatty(int file)
{
 801e242:	b480      	push	{r7}
 801e244:	b083      	sub	sp, #12
 801e246:	af00      	add	r7, sp, #0
 801e248:	6078      	str	r0, [r7, #4]
	return 1;
 801e24a:	2301      	movs	r3, #1
}
 801e24c:	4618      	mov	r0, r3
 801e24e:	370c      	adds	r7, #12
 801e250:	46bd      	mov	sp, r7
 801e252:	f85d 7b04 	ldr.w	r7, [sp], #4
 801e256:	4770      	bx	lr

0801e258 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 801e258:	b480      	push	{r7}
 801e25a:	b085      	sub	sp, #20
 801e25c:	af00      	add	r7, sp, #0
 801e25e:	60f8      	str	r0, [r7, #12]
 801e260:	60b9      	str	r1, [r7, #8]
 801e262:	607a      	str	r2, [r7, #4]
	return 0;
 801e264:	2300      	movs	r3, #0
}
 801e266:	4618      	mov	r0, r3
 801e268:	3714      	adds	r7, #20
 801e26a:	46bd      	mov	sp, r7
 801e26c:	f85d 7b04 	ldr.w	r7, [sp], #4
 801e270:	4770      	bx	lr
	...

0801e274 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 801e274:	b580      	push	{r7, lr}
 801e276:	b086      	sub	sp, #24
 801e278:	af00      	add	r7, sp, #0
 801e27a:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 801e27c:	4a14      	ldr	r2, [pc, #80]	; (801e2d0 <_sbrk+0x5c>)
 801e27e:	4b15      	ldr	r3, [pc, #84]	; (801e2d4 <_sbrk+0x60>)
 801e280:	1ad3      	subs	r3, r2, r3
 801e282:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 801e284:	697b      	ldr	r3, [r7, #20]
 801e286:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 801e288:	4b13      	ldr	r3, [pc, #76]	; (801e2d8 <_sbrk+0x64>)
 801e28a:	681b      	ldr	r3, [r3, #0]
 801e28c:	2b00      	cmp	r3, #0
 801e28e:	d102      	bne.n	801e296 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 801e290:	4b11      	ldr	r3, [pc, #68]	; (801e2d8 <_sbrk+0x64>)
 801e292:	4a12      	ldr	r2, [pc, #72]	; (801e2dc <_sbrk+0x68>)
 801e294:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 801e296:	4b10      	ldr	r3, [pc, #64]	; (801e2d8 <_sbrk+0x64>)
 801e298:	681a      	ldr	r2, [r3, #0]
 801e29a:	687b      	ldr	r3, [r7, #4]
 801e29c:	4413      	add	r3, r2
 801e29e:	693a      	ldr	r2, [r7, #16]
 801e2a0:	429a      	cmp	r2, r3
 801e2a2:	d207      	bcs.n	801e2b4 <_sbrk+0x40>
  {
    errno = ENOMEM;
 801e2a4:	f005 fefc 	bl	80240a0 <__errno>
 801e2a8:	4603      	mov	r3, r0
 801e2aa:	220c      	movs	r2, #12
 801e2ac:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 801e2ae:	f04f 33ff 	mov.w	r3, #4294967295
 801e2b2:	e009      	b.n	801e2c8 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 801e2b4:	4b08      	ldr	r3, [pc, #32]	; (801e2d8 <_sbrk+0x64>)
 801e2b6:	681b      	ldr	r3, [r3, #0]
 801e2b8:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 801e2ba:	4b07      	ldr	r3, [pc, #28]	; (801e2d8 <_sbrk+0x64>)
 801e2bc:	681a      	ldr	r2, [r3, #0]
 801e2be:	687b      	ldr	r3, [r7, #4]
 801e2c0:	4413      	add	r3, r2
 801e2c2:	4a05      	ldr	r2, [pc, #20]	; (801e2d8 <_sbrk+0x64>)
 801e2c4:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 801e2c6:	68fb      	ldr	r3, [r7, #12]
}
 801e2c8:	4618      	mov	r0, r3
 801e2ca:	3718      	adds	r7, #24
 801e2cc:	46bd      	mov	sp, r7
 801e2ce:	bd80      	pop	{r7, pc}
 801e2d0:	20050000 	.word	0x20050000
 801e2d4:	00000400 	.word	0x00000400
 801e2d8:	20000720 	.word	0x20000720
 801e2dc:	200008d0 	.word	0x200008d0

0801e2e0 <SystemInit>:
  *         SystemFrequency variable.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 801e2e0:	b480      	push	{r7}
 801e2e2:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
#if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
  SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 801e2e4:	4b06      	ldr	r3, [pc, #24]	; (801e300 <SystemInit+0x20>)
 801e2e6:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 801e2ea:	4a05      	ldr	r2, [pc, #20]	; (801e300 <SystemInit+0x20>)
 801e2ec:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 801e2f0:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 801e2f4:	bf00      	nop
 801e2f6:	46bd      	mov	sp, r7
 801e2f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 801e2fc:	4770      	bx	lr
 801e2fe:	bf00      	nop
 801e300:	e000ed00 	.word	0xe000ed00

0801e304 <__tcf_0>:
namespace
{

Symbol run_single_experiment_iteration(arglist arguments = { })
{
	static Symbol past_y = 0;
 801e304:	b580      	push	{r7, lr}
 801e306:	af00      	add	r7, sp, #0
 801e308:	4801      	ldr	r0, [pc, #4]	; (801e310 <__tcf_0+0xc>)
 801e30a:	f7e3 f8ed 	bl	80014e8 <_ZN6SymbolD1Ev>
 801e30e:	bd80      	pop	{r7, pc}
 801e310:	2000076c 	.word	0x2000076c

0801e314 <__tcf_1>:
	static Symbol past_u = 0;
 801e314:	b580      	push	{r7, lr}
 801e316:	af00      	add	r7, sp, #0
 801e318:	4801      	ldr	r0, [pc, #4]	; (801e320 <__tcf_1+0xc>)
 801e31a:	f7e3 f8e5 	bl	80014e8 <_ZN6SymbolD1Ev>
 801e31e:	bd80      	pop	{r7, pc}
 801e320:	20000790 	.word	0x20000790

0801e324 <__tcf_2>:

	static Symbol past_e = 0;
 801e324:	b580      	push	{r7, lr}
 801e326:	af00      	add	r7, sp, #0
 801e328:	4801      	ldr	r0, [pc, #4]	; (801e330 <__tcf_2+0xc>)
 801e32a:	f7e3 f8dd 	bl	80014e8 <_ZN6SymbolD1Ev>
 801e32e:	bd80      	pop	{r7, pc}
 801e330:	200007b4 	.word	0x200007b4

0801e334 <__tcf_3>:
	static Symbol sum_e = 0;
 801e334:	b580      	push	{r7, lr}
 801e336:	af00      	add	r7, sp, #0
 801e338:	4801      	ldr	r0, [pc, #4]	; (801e340 <__tcf_3+0xc>)
 801e33a:	f7e3 f8d5 	bl	80014e8 <_ZN6SymbolD1Ev>
 801e33e:	bd80      	pop	{r7, pc}
 801e340:	200007d8 	.word	0x200007d8

0801e344 <__tcf_4>:
	static Symbol e = 0;
 801e344:	b580      	push	{r7, lr}
 801e346:	af00      	add	r7, sp, #0
 801e348:	4801      	ldr	r0, [pc, #4]	; (801e350 <__tcf_4+0xc>)
 801e34a:	f7e3 f8cd 	bl	80014e8 <_ZN6SymbolD1Ev>
 801e34e:	bd80      	pop	{r7, pc}
 801e350:	200007fc 	.word	0x200007fc

0801e354 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE>:
{
 801e354:	b5b0      	push	{r4, r5, r7, lr}
 801e356:	f5ad 6d80 	sub.w	sp, sp, #1024	; 0x400
 801e35a:	af00      	add	r7, sp, #0
 801e35c:	1d3b      	adds	r3, r7, #4
 801e35e:	6018      	str	r0, [r3, #0]
 801e360:	463b      	mov	r3, r7
 801e362:	6019      	str	r1, [r3, #0]
	static Symbol past_y = 0;
 801e364:	4bcf      	ldr	r3, [pc, #828]	; (801e6a4 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x350>)
 801e366:	781b      	ldrb	r3, [r3, #0]
 801e368:	f3bf 8f5b 	dmb	ish
 801e36c:	b2db      	uxtb	r3, r3
 801e36e:	f003 0301 	and.w	r3, r3, #1
 801e372:	2b00      	cmp	r3, #0
 801e374:	bf0c      	ite	eq
 801e376:	2301      	moveq	r3, #1
 801e378:	2300      	movne	r3, #0
 801e37a:	b2db      	uxtb	r3, r3
 801e37c:	2b00      	cmp	r3, #0
 801e37e:	d014      	beq.n	801e3aa <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x56>
 801e380:	48c8      	ldr	r0, [pc, #800]	; (801e6a4 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x350>)
 801e382:	f004 fa41 	bl	8022808 <__cxa_guard_acquire>
 801e386:	4603      	mov	r3, r0
 801e388:	2b00      	cmp	r3, #0
 801e38a:	bf14      	ite	ne
 801e38c:	2301      	movne	r3, #1
 801e38e:	2300      	moveq	r3, #0
 801e390:	b2db      	uxtb	r3, r3
 801e392:	2b00      	cmp	r3, #0
 801e394:	d009      	beq.n	801e3aa <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x56>
 801e396:	2100      	movs	r1, #0
 801e398:	48c3      	ldr	r0, [pc, #780]	; (801e6a8 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x354>)
 801e39a:	f7f8 faff 	bl	801699c <_ZN6SymbolC1Ei>
 801e39e:	48c1      	ldr	r0, [pc, #772]	; (801e6a4 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x350>)
 801e3a0:	f004 fa3e 	bl	8022820 <__cxa_guard_release>
 801e3a4:	48c1      	ldr	r0, [pc, #772]	; (801e6ac <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x358>)
 801e3a6:	f005 fe74 	bl	8024092 <atexit>
	static Symbol past_u = 0;
 801e3aa:	4bc1      	ldr	r3, [pc, #772]	; (801e6b0 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x35c>)
 801e3ac:	781b      	ldrb	r3, [r3, #0]
 801e3ae:	f3bf 8f5b 	dmb	ish
 801e3b2:	b2db      	uxtb	r3, r3
 801e3b4:	f003 0301 	and.w	r3, r3, #1
 801e3b8:	2b00      	cmp	r3, #0
 801e3ba:	bf0c      	ite	eq
 801e3bc:	2301      	moveq	r3, #1
 801e3be:	2300      	movne	r3, #0
 801e3c0:	b2db      	uxtb	r3, r3
 801e3c2:	2b00      	cmp	r3, #0
 801e3c4:	d014      	beq.n	801e3f0 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x9c>
 801e3c6:	48ba      	ldr	r0, [pc, #744]	; (801e6b0 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x35c>)
 801e3c8:	f004 fa1e 	bl	8022808 <__cxa_guard_acquire>
 801e3cc:	4603      	mov	r3, r0
 801e3ce:	2b00      	cmp	r3, #0
 801e3d0:	bf14      	ite	ne
 801e3d2:	2301      	movne	r3, #1
 801e3d4:	2300      	moveq	r3, #0
 801e3d6:	b2db      	uxtb	r3, r3
 801e3d8:	2b00      	cmp	r3, #0
 801e3da:	d009      	beq.n	801e3f0 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x9c>
 801e3dc:	2100      	movs	r1, #0
 801e3de:	48b5      	ldr	r0, [pc, #724]	; (801e6b4 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x360>)
 801e3e0:	f7f8 fadc 	bl	801699c <_ZN6SymbolC1Ei>
 801e3e4:	48b2      	ldr	r0, [pc, #712]	; (801e6b0 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x35c>)
 801e3e6:	f004 fa1b 	bl	8022820 <__cxa_guard_release>
 801e3ea:	48b3      	ldr	r0, [pc, #716]	; (801e6b8 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x364>)
 801e3ec:	f005 fe51 	bl	8024092 <atexit>
	static Symbol past_e = 0;
 801e3f0:	4bb2      	ldr	r3, [pc, #712]	; (801e6bc <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x368>)
 801e3f2:	781b      	ldrb	r3, [r3, #0]
 801e3f4:	f3bf 8f5b 	dmb	ish
 801e3f8:	b2db      	uxtb	r3, r3
 801e3fa:	f003 0301 	and.w	r3, r3, #1
 801e3fe:	2b00      	cmp	r3, #0
 801e400:	bf0c      	ite	eq
 801e402:	2301      	moveq	r3, #1
 801e404:	2300      	movne	r3, #0
 801e406:	b2db      	uxtb	r3, r3
 801e408:	2b00      	cmp	r3, #0
 801e40a:	d014      	beq.n	801e436 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0xe2>
 801e40c:	48ab      	ldr	r0, [pc, #684]	; (801e6bc <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x368>)
 801e40e:	f004 f9fb 	bl	8022808 <__cxa_guard_acquire>
 801e412:	4603      	mov	r3, r0
 801e414:	2b00      	cmp	r3, #0
 801e416:	bf14      	ite	ne
 801e418:	2301      	movne	r3, #1
 801e41a:	2300      	moveq	r3, #0
 801e41c:	b2db      	uxtb	r3, r3
 801e41e:	2b00      	cmp	r3, #0
 801e420:	d009      	beq.n	801e436 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0xe2>
 801e422:	2100      	movs	r1, #0
 801e424:	48a6      	ldr	r0, [pc, #664]	; (801e6c0 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x36c>)
 801e426:	f7f8 fab9 	bl	801699c <_ZN6SymbolC1Ei>
 801e42a:	48a4      	ldr	r0, [pc, #656]	; (801e6bc <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x368>)
 801e42c:	f004 f9f8 	bl	8022820 <__cxa_guard_release>
 801e430:	48a4      	ldr	r0, [pc, #656]	; (801e6c4 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x370>)
 801e432:	f005 fe2e 	bl	8024092 <atexit>
	static Symbol sum_e = 0;
 801e436:	4ba4      	ldr	r3, [pc, #656]	; (801e6c8 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x374>)
 801e438:	781b      	ldrb	r3, [r3, #0]
 801e43a:	f3bf 8f5b 	dmb	ish
 801e43e:	b2db      	uxtb	r3, r3
 801e440:	f003 0301 	and.w	r3, r3, #1
 801e444:	2b00      	cmp	r3, #0
 801e446:	bf0c      	ite	eq
 801e448:	2301      	moveq	r3, #1
 801e44a:	2300      	movne	r3, #0
 801e44c:	b2db      	uxtb	r3, r3
 801e44e:	2b00      	cmp	r3, #0
 801e450:	d014      	beq.n	801e47c <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x128>
 801e452:	489d      	ldr	r0, [pc, #628]	; (801e6c8 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x374>)
 801e454:	f004 f9d8 	bl	8022808 <__cxa_guard_acquire>
 801e458:	4603      	mov	r3, r0
 801e45a:	2b00      	cmp	r3, #0
 801e45c:	bf14      	ite	ne
 801e45e:	2301      	movne	r3, #1
 801e460:	2300      	moveq	r3, #0
 801e462:	b2db      	uxtb	r3, r3
 801e464:	2b00      	cmp	r3, #0
 801e466:	d009      	beq.n	801e47c <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x128>
 801e468:	2100      	movs	r1, #0
 801e46a:	4898      	ldr	r0, [pc, #608]	; (801e6cc <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x378>)
 801e46c:	f7f8 fa96 	bl	801699c <_ZN6SymbolC1Ei>
 801e470:	4895      	ldr	r0, [pc, #596]	; (801e6c8 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x374>)
 801e472:	f004 f9d5 	bl	8022820 <__cxa_guard_release>
 801e476:	4896      	ldr	r0, [pc, #600]	; (801e6d0 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x37c>)
 801e478:	f005 fe0b 	bl	8024092 <atexit>
	static Symbol e = 0;
 801e47c:	4b95      	ldr	r3, [pc, #596]	; (801e6d4 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x380>)
 801e47e:	781b      	ldrb	r3, [r3, #0]
 801e480:	f3bf 8f5b 	dmb	ish
 801e484:	b2db      	uxtb	r3, r3
 801e486:	f003 0301 	and.w	r3, r3, #1
 801e48a:	2b00      	cmp	r3, #0
 801e48c:	bf0c      	ite	eq
 801e48e:	2301      	moveq	r3, #1
 801e490:	2300      	movne	r3, #0
 801e492:	b2db      	uxtb	r3, r3
 801e494:	2b00      	cmp	r3, #0
 801e496:	d014      	beq.n	801e4c2 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x16e>
 801e498:	488e      	ldr	r0, [pc, #568]	; (801e6d4 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x380>)
 801e49a:	f004 f9b5 	bl	8022808 <__cxa_guard_acquire>
 801e49e:	4603      	mov	r3, r0
 801e4a0:	2b00      	cmp	r3, #0
 801e4a2:	bf14      	ite	ne
 801e4a4:	2301      	movne	r3, #1
 801e4a6:	2300      	moveq	r3, #0
 801e4a8:	b2db      	uxtb	r3, r3
 801e4aa:	2b00      	cmp	r3, #0
 801e4ac:	d009      	beq.n	801e4c2 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x16e>
 801e4ae:	2100      	movs	r1, #0
 801e4b0:	4889      	ldr	r0, [pc, #548]	; (801e6d8 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x384>)
 801e4b2:	f7f8 fa73 	bl	801699c <_ZN6SymbolC1Ei>
 801e4b6:	4887      	ldr	r0, [pc, #540]	; (801e6d4 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x380>)
 801e4b8:	f004 f9b2 	bl	8022820 <__cxa_guard_release>
 801e4bc:	4887      	ldr	r0, [pc, #540]	; (801e6dc <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x388>)
 801e4be:	f005 fde8 	bl	8024092 <atexit>

	// uchyb
	e = PAR(Yzad) - ARG(Y);
 801e4c2:	f7fa f94b 	bl	801875c <_ZN16Variable_handler12get_instanceEv>
 801e4c6:	4604      	mov	r4, r0
 801e4c8:	f107 0344 	add.w	r3, r7, #68	; 0x44
 801e4cc:	4618      	mov	r0, r3
 801e4ce:	f004 f9bb 	bl	8022848 <_ZNSaIcEC1Ev>
 801e4d2:	f107 0244 	add.w	r2, r7, #68	; 0x44
 801e4d6:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 801e4da:	4981      	ldr	r1, [pc, #516]	; (801e6e0 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x38c>)
 801e4dc:	4618      	mov	r0, r3
 801e4de:	f7e3 fb5a 	bl	8001b96 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801e4e2:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 801e4e6:	4619      	mov	r1, r3
 801e4e8:	4620      	mov	r0, r4
 801e4ea:	f7fa f9b1 	bl	8018850 <_ZN16Variable_handler7get_parENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801e4ee:	4604      	mov	r4, r0
 801e4f0:	f7fa f934 	bl	801875c <_ZN16Variable_handler12get_instanceEv>
 801e4f4:	4605      	mov	r5, r0
 801e4f6:	f107 0380 	add.w	r3, r7, #128	; 0x80
 801e4fa:	4618      	mov	r0, r3
 801e4fc:	f004 f9a4 	bl	8022848 <_ZNSaIcEC1Ev>
 801e500:	f107 0280 	add.w	r2, r7, #128	; 0x80
 801e504:	f107 0368 	add.w	r3, r7, #104	; 0x68
 801e508:	4976      	ldr	r1, [pc, #472]	; (801e6e4 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x390>)
 801e50a:	4618      	mov	r0, r3
 801e50c:	f7e3 fb43 	bl	8001b96 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801e510:	f107 0368 	add.w	r3, r7, #104	; 0x68
 801e514:	4619      	mov	r1, r3
 801e516:	4628      	mov	r0, r5
 801e518:	f7fa f94e 	bl	80187b8 <_ZN16Variable_handler7get_argENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801e51c:	4602      	mov	r2, r0
 801e51e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801e522:	4611      	mov	r1, r2
 801e524:	4618      	mov	r0, r3
 801e526:	f7e9 ffe5 	bl	80084f4 <_ZN6SymbolC1ERKS_>
 801e52a:	f107 030c 	add.w	r3, r7, #12
 801e52e:	f107 0248 	add.w	r2, r7, #72	; 0x48
 801e532:	4621      	mov	r1, r4
 801e534:	4618      	mov	r0, r3
 801e536:	f7f8 fbc9 	bl	8016ccc <_ZN6SymbolmiES_>
 801e53a:	f107 030c 	add.w	r3, r7, #12
 801e53e:	4619      	mov	r1, r3
 801e540:	4865      	ldr	r0, [pc, #404]	; (801e6d8 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x384>)
 801e542:	f7ed fccf 	bl	800bee4 <_ZN6SymbolaSEOS_>
 801e546:	f107 030c 	add.w	r3, r7, #12
 801e54a:	4618      	mov	r0, r3
 801e54c:	f7e2 ffcc 	bl	80014e8 <_ZN6SymbolD1Ev>
 801e550:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801e554:	4618      	mov	r0, r3
 801e556:	f7e2 ffc7 	bl	80014e8 <_ZN6SymbolD1Ev>
 801e55a:	f107 0368 	add.w	r3, r7, #104	; 0x68
 801e55e:	4618      	mov	r0, r3
 801e560:	f004 fc03 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801e564:	f107 0380 	add.w	r3, r7, #128	; 0x80
 801e568:	4618      	mov	r0, r3
 801e56a:	f004 f96e 	bl	802284a <_ZNSaIcED1Ev>
 801e56e:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 801e572:	4618      	mov	r0, r3
 801e574:	f004 fbf9 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801e578:	f107 0344 	add.w	r3, r7, #68	; 0x44
 801e57c:	4618      	mov	r0, r3
 801e57e:	f004 f964 	bl	802284a <_ZNSaIcED1Ev>
	sum_e = sum_e + e;
 801e582:	f107 03a4 	add.w	r3, r7, #164	; 0xa4
 801e586:	4954      	ldr	r1, [pc, #336]	; (801e6d8 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x384>)
 801e588:	4618      	mov	r0, r3
 801e58a:	f7e9 ffb3 	bl	80084f4 <_ZN6SymbolC1ERKS_>
 801e58e:	f107 0384 	add.w	r3, r7, #132	; 0x84
 801e592:	f107 02a4 	add.w	r2, r7, #164	; 0xa4
 801e596:	494d      	ldr	r1, [pc, #308]	; (801e6cc <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x378>)
 801e598:	4618      	mov	r0, r3
 801e59a:	f7f8 faf3 	bl	8016b84 <_ZN6SymbolplES_>
 801e59e:	f107 0384 	add.w	r3, r7, #132	; 0x84
 801e5a2:	4619      	mov	r1, r3
 801e5a4:	4849      	ldr	r0, [pc, #292]	; (801e6cc <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x378>)
 801e5a6:	f7ed fc9d 	bl	800bee4 <_ZN6SymbolaSEOS_>
 801e5aa:	f107 0384 	add.w	r3, r7, #132	; 0x84
 801e5ae:	4618      	mov	r0, r3
 801e5b0:	f7e2 ff9a 	bl	80014e8 <_ZN6SymbolD1Ev>
 801e5b4:	f107 03a4 	add.w	r3, r7, #164	; 0xa4
 801e5b8:	4618      	mov	r0, r3
 801e5ba:	f7e2 ff95 	bl	80014e8 <_ZN6SymbolD1Ev>

	//regulator
	ARG(u) = PAR(P)*e + PAR(I)*sum_e + PAR(D)*(e - past_e);
 801e5be:	f7fa f8cd 	bl	801875c <_ZN16Variable_handler12get_instanceEv>
 801e5c2:	4604      	mov	r4, r0
 801e5c4:	f507 739e 	add.w	r3, r7, #316	; 0x13c
 801e5c8:	4618      	mov	r0, r3
 801e5ca:	f004 f93d 	bl	8022848 <_ZNSaIcEC1Ev>
 801e5ce:	f507 729e 	add.w	r2, r7, #316	; 0x13c
 801e5d2:	f507 7392 	add.w	r3, r7, #292	; 0x124
 801e5d6:	4944      	ldr	r1, [pc, #272]	; (801e6e8 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x394>)
 801e5d8:	4618      	mov	r0, r3
 801e5da:	f7e3 fadc 	bl	8001b96 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801e5de:	f507 7392 	add.w	r3, r7, #292	; 0x124
 801e5e2:	4619      	mov	r1, r3
 801e5e4:	4620      	mov	r0, r4
 801e5e6:	f7fa f933 	bl	8018850 <_ZN16Variable_handler7get_parENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801e5ea:	4604      	mov	r4, r0
 801e5ec:	f507 73a0 	add.w	r3, r7, #320	; 0x140
 801e5f0:	4939      	ldr	r1, [pc, #228]	; (801e6d8 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x384>)
 801e5f2:	4618      	mov	r0, r3
 801e5f4:	f7e9 ff7e 	bl	80084f4 <_ZN6SymbolC1ERKS_>
 801e5f8:	f507 7382 	add.w	r3, r7, #260	; 0x104
 801e5fc:	f507 72a0 	add.w	r2, r7, #320	; 0x140
 801e600:	4621      	mov	r1, r4
 801e602:	4618      	mov	r0, r3
 801e604:	f7f8 ff34 	bl	8017470 <_ZN6SymbolmlES_>
 801e608:	f7fa f8a8 	bl	801875c <_ZN16Variable_handler12get_instanceEv>
 801e60c:	4604      	mov	r4, r0
 801e60e:	f507 73cc 	add.w	r3, r7, #408	; 0x198
 801e612:	4618      	mov	r0, r3
 801e614:	f004 f918 	bl	8022848 <_ZNSaIcEC1Ev>
 801e618:	f507 72cc 	add.w	r2, r7, #408	; 0x198
 801e61c:	f507 73c0 	add.w	r3, r7, #384	; 0x180
 801e620:	4932      	ldr	r1, [pc, #200]	; (801e6ec <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x398>)
 801e622:	4618      	mov	r0, r3
 801e624:	f7e3 fab7 	bl	8001b96 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801e628:	f507 73c0 	add.w	r3, r7, #384	; 0x180
 801e62c:	4619      	mov	r1, r3
 801e62e:	4620      	mov	r0, r4
 801e630:	f7fa f90e 	bl	8018850 <_ZN16Variable_handler7get_parENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801e634:	4604      	mov	r4, r0
 801e636:	f507 73ce 	add.w	r3, r7, #412	; 0x19c
 801e63a:	4924      	ldr	r1, [pc, #144]	; (801e6cc <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x378>)
 801e63c:	4618      	mov	r0, r3
 801e63e:	f7e9 ff59 	bl	80084f4 <_ZN6SymbolC1ERKS_>
 801e642:	f507 73b0 	add.w	r3, r7, #352	; 0x160
 801e646:	f507 72ce 	add.w	r2, r7, #412	; 0x19c
 801e64a:	4621      	mov	r1, r4
 801e64c:	4618      	mov	r0, r3
 801e64e:	f7f8 ff0f 	bl	8017470 <_ZN6SymbolmlES_>
 801e652:	f107 03e4 	add.w	r3, r7, #228	; 0xe4
 801e656:	f507 72b0 	add.w	r2, r7, #352	; 0x160
 801e65a:	f507 7182 	add.w	r1, r7, #260	; 0x104
 801e65e:	4618      	mov	r0, r3
 801e660:	f7f8 fa90 	bl	8016b84 <_ZN6SymbolplES_>
 801e664:	f7fa f87a 	bl	801875c <_ZN16Variable_handler12get_instanceEv>
 801e668:	4604      	mov	r4, r0
 801e66a:	f507 73fa 	add.w	r3, r7, #500	; 0x1f4
 801e66e:	4618      	mov	r0, r3
 801e670:	f004 f8ea 	bl	8022848 <_ZNSaIcEC1Ev>
 801e674:	f507 72fa 	add.w	r2, r7, #500	; 0x1f4
 801e678:	f507 73ee 	add.w	r3, r7, #476	; 0x1dc
 801e67c:	491c      	ldr	r1, [pc, #112]	; (801e6f0 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x39c>)
 801e67e:	4618      	mov	r0, r3
 801e680:	f7e3 fa89 	bl	8001b96 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801e684:	f507 73ee 	add.w	r3, r7, #476	; 0x1dc
 801e688:	4619      	mov	r1, r3
 801e68a:	4620      	mov	r0, r4
 801e68c:	f7fa f8e0 	bl	8018850 <_ZN16Variable_handler7get_parENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801e690:	4604      	mov	r4, r0
 801e692:	f507 7306 	add.w	r3, r7, #536	; 0x218
 801e696:	490a      	ldr	r1, [pc, #40]	; (801e6c0 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x36c>)
 801e698:	4618      	mov	r0, r3
 801e69a:	f7e9 ff2b 	bl	80084f4 <_ZN6SymbolC1ERKS_>
 801e69e:	f507 73fc 	add.w	r3, r7, #504	; 0x1f8
 801e6a2:	e027      	b.n	801e6f4 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x3a0>
 801e6a4:	2000078c 	.word	0x2000078c
 801e6a8:	2000076c 	.word	0x2000076c
 801e6ac:	0801e305 	.word	0x0801e305
 801e6b0:	200007b0 	.word	0x200007b0
 801e6b4:	20000790 	.word	0x20000790
 801e6b8:	0801e315 	.word	0x0801e315
 801e6bc:	200007d4 	.word	0x200007d4
 801e6c0:	200007b4 	.word	0x200007b4
 801e6c4:	0801e325 	.word	0x0801e325
 801e6c8:	200007f8 	.word	0x200007f8
 801e6cc:	200007d8 	.word	0x200007d8
 801e6d0:	0801e335 	.word	0x0801e335
 801e6d4:	2000081c 	.word	0x2000081c
 801e6d8:	200007fc 	.word	0x200007fc
 801e6dc:	0801e345 	.word	0x0801e345
 801e6e0:	08028108 	.word	0x08028108
 801e6e4:	08028110 	.word	0x08028110
 801e6e8:	08028114 	.word	0x08028114
 801e6ec:	08028118 	.word	0x08028118
 801e6f0:	0802811c 	.word	0x0802811c
 801e6f4:	f507 7206 	add.w	r2, r7, #536	; 0x218
 801e6f8:	49e0      	ldr	r1, [pc, #896]	; (801ea7c <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x728>)
 801e6fa:	4618      	mov	r0, r3
 801e6fc:	f7f8 fae6 	bl	8016ccc <_ZN6SymbolmiES_>
 801e700:	f507 73de 	add.w	r3, r7, #444	; 0x1bc
 801e704:	f507 72fc 	add.w	r2, r7, #504	; 0x1f8
 801e708:	4621      	mov	r1, r4
 801e70a:	4618      	mov	r0, r3
 801e70c:	f7f8 feb0 	bl	8017470 <_ZN6SymbolmlES_>
 801e710:	f107 03c4 	add.w	r3, r7, #196	; 0xc4
 801e714:	f507 72de 	add.w	r2, r7, #444	; 0x1bc
 801e718:	f107 01e4 	add.w	r1, r7, #228	; 0xe4
 801e71c:	4618      	mov	r0, r3
 801e71e:	f7f8 fa31 	bl	8016b84 <_ZN6SymbolplES_>
 801e722:	f7fa f81b 	bl	801875c <_ZN16Variable_handler12get_instanceEv>
 801e726:	4604      	mov	r4, r0
 801e728:	f507 7314 	add.w	r3, r7, #592	; 0x250
 801e72c:	4618      	mov	r0, r3
 801e72e:	f004 f88b 	bl	8022848 <_ZNSaIcEC1Ev>
 801e732:	f507 7214 	add.w	r2, r7, #592	; 0x250
 801e736:	f507 730e 	add.w	r3, r7, #568	; 0x238
 801e73a:	49d1      	ldr	r1, [pc, #836]	; (801ea80 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x72c>)
 801e73c:	4618      	mov	r0, r3
 801e73e:	f7e3 fa2a 	bl	8001b96 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801e742:	f507 730e 	add.w	r3, r7, #568	; 0x238
 801e746:	4619      	mov	r1, r3
 801e748:	4620      	mov	r0, r4
 801e74a:	f7fa f835 	bl	80187b8 <_ZN16Variable_handler7get_argENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801e74e:	4602      	mov	r2, r0
 801e750:	f107 03c4 	add.w	r3, r7, #196	; 0xc4
 801e754:	4619      	mov	r1, r3
 801e756:	4610      	mov	r0, r2
 801e758:	f7ed fbc4 	bl	800bee4 <_ZN6SymbolaSEOS_>
 801e75c:	f507 730e 	add.w	r3, r7, #568	; 0x238
 801e760:	4618      	mov	r0, r3
 801e762:	f004 fb02 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801e766:	f507 7314 	add.w	r3, r7, #592	; 0x250
 801e76a:	4618      	mov	r0, r3
 801e76c:	f004 f86d 	bl	802284a <_ZNSaIcED1Ev>
 801e770:	f107 03c4 	add.w	r3, r7, #196	; 0xc4
 801e774:	4618      	mov	r0, r3
 801e776:	f7e2 feb7 	bl	80014e8 <_ZN6SymbolD1Ev>
 801e77a:	f507 73de 	add.w	r3, r7, #444	; 0x1bc
 801e77e:	4618      	mov	r0, r3
 801e780:	f7e2 feb2 	bl	80014e8 <_ZN6SymbolD1Ev>
 801e784:	f507 73fc 	add.w	r3, r7, #504	; 0x1f8
 801e788:	4618      	mov	r0, r3
 801e78a:	f7e2 fead 	bl	80014e8 <_ZN6SymbolD1Ev>
 801e78e:	f507 7306 	add.w	r3, r7, #536	; 0x218
 801e792:	4618      	mov	r0, r3
 801e794:	f7e2 fea8 	bl	80014e8 <_ZN6SymbolD1Ev>
 801e798:	f507 73ee 	add.w	r3, r7, #476	; 0x1dc
 801e79c:	4618      	mov	r0, r3
 801e79e:	f004 fae4 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801e7a2:	f507 73fa 	add.w	r3, r7, #500	; 0x1f4
 801e7a6:	4618      	mov	r0, r3
 801e7a8:	f004 f84f 	bl	802284a <_ZNSaIcED1Ev>
 801e7ac:	f107 03e4 	add.w	r3, r7, #228	; 0xe4
 801e7b0:	4618      	mov	r0, r3
 801e7b2:	f7e2 fe99 	bl	80014e8 <_ZN6SymbolD1Ev>
 801e7b6:	f507 73b0 	add.w	r3, r7, #352	; 0x160
 801e7ba:	4618      	mov	r0, r3
 801e7bc:	f7e2 fe94 	bl	80014e8 <_ZN6SymbolD1Ev>
 801e7c0:	f507 73ce 	add.w	r3, r7, #412	; 0x19c
 801e7c4:	4618      	mov	r0, r3
 801e7c6:	f7e2 fe8f 	bl	80014e8 <_ZN6SymbolD1Ev>
 801e7ca:	f507 73c0 	add.w	r3, r7, #384	; 0x180
 801e7ce:	4618      	mov	r0, r3
 801e7d0:	f004 facb 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801e7d4:	f507 73cc 	add.w	r3, r7, #408	; 0x198
 801e7d8:	4618      	mov	r0, r3
 801e7da:	f004 f836 	bl	802284a <_ZNSaIcED1Ev>
 801e7de:	f507 7382 	add.w	r3, r7, #260	; 0x104
 801e7e2:	4618      	mov	r0, r3
 801e7e4:	f7e2 fe80 	bl	80014e8 <_ZN6SymbolD1Ev>
 801e7e8:	f507 73a0 	add.w	r3, r7, #320	; 0x140
 801e7ec:	4618      	mov	r0, r3
 801e7ee:	f7e2 fe7b 	bl	80014e8 <_ZN6SymbolD1Ev>
 801e7f2:	f507 7392 	add.w	r3, r7, #292	; 0x124
 801e7f6:	4618      	mov	r0, r3
 801e7f8:	f004 fab7 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801e7fc:	f507 739e 	add.w	r3, r7, #316	; 0x13c
 801e800:	4618      	mov	r0, r3
 801e802:	f004 f822 	bl	802284a <_ZNSaIcED1Ev>

	//obiekt
	ARG(Y) = ARG(u) - past_u*0.5f + ARG(y)*0.5f + past_y*0.25f;
 801e806:	f7f9 ffa9 	bl	801875c <_ZN16Variable_handler12get_instanceEv>
 801e80a:	4604      	mov	r4, r0
 801e80c:	f507 7333 	add.w	r3, r7, #716	; 0x2cc
 801e810:	4618      	mov	r0, r3
 801e812:	f004 f819 	bl	8022848 <_ZNSaIcEC1Ev>
 801e816:	f507 7233 	add.w	r2, r7, #716	; 0x2cc
 801e81a:	f507 732d 	add.w	r3, r7, #692	; 0x2b4
 801e81e:	4998      	ldr	r1, [pc, #608]	; (801ea80 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x72c>)
 801e820:	4618      	mov	r0, r3
 801e822:	f7e3 f9b8 	bl	8001b96 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801e826:	f507 732d 	add.w	r3, r7, #692	; 0x2b4
 801e82a:	4619      	mov	r1, r3
 801e82c:	4620      	mov	r0, r4
 801e82e:	f7f9 ffc3 	bl	80187b8 <_ZN16Variable_handler7get_argENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801e832:	4604      	mov	r4, r0
 801e834:	f507 733c 	add.w	r3, r7, #752	; 0x2f0
 801e838:	eeb6 0a00 	vmov.f32	s0, #96	; 0x3f000000  0.5
 801e83c:	4618      	mov	r0, r3
 801e83e:	f7f8 f8c6 	bl	80169ce <_ZN6SymbolC1Ef>
 801e842:	f507 7334 	add.w	r3, r7, #720	; 0x2d0
 801e846:	f507 723c 	add.w	r2, r7, #752	; 0x2f0
 801e84a:	498e      	ldr	r1, [pc, #568]	; (801ea84 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x730>)
 801e84c:	4618      	mov	r0, r3
 801e84e:	f7f8 fe0f 	bl	8017470 <_ZN6SymbolmlES_>
 801e852:	f507 7325 	add.w	r3, r7, #660	; 0x294
 801e856:	f507 7234 	add.w	r2, r7, #720	; 0x2d0
 801e85a:	4621      	mov	r1, r4
 801e85c:	4618      	mov	r0, r3
 801e85e:	f7f8 fa35 	bl	8016ccc <_ZN6SymbolmiES_>
 801e862:	f7f9 ff7b 	bl	801875c <_ZN16Variable_handler12get_instanceEv>
 801e866:	4604      	mov	r4, r0
 801e868:	f507 7352 	add.w	r3, r7, #840	; 0x348
 801e86c:	4618      	mov	r0, r3
 801e86e:	f003 ffeb 	bl	8022848 <_ZNSaIcEC1Ev>
 801e872:	f507 7252 	add.w	r2, r7, #840	; 0x348
 801e876:	f507 734c 	add.w	r3, r7, #816	; 0x330
 801e87a:	4983      	ldr	r1, [pc, #524]	; (801ea88 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x734>)
 801e87c:	4618      	mov	r0, r3
 801e87e:	f7e3 f98a 	bl	8001b96 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801e882:	f507 734c 	add.w	r3, r7, #816	; 0x330
 801e886:	4619      	mov	r1, r3
 801e888:	4620      	mov	r0, r4
 801e88a:	f7f9 ff95 	bl	80187b8 <_ZN16Variable_handler7get_argENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801e88e:	4604      	mov	r4, r0
 801e890:	f507 7353 	add.w	r3, r7, #844	; 0x34c
 801e894:	eeb6 0a00 	vmov.f32	s0, #96	; 0x3f000000  0.5
 801e898:	4618      	mov	r0, r3
 801e89a:	f7f8 f898 	bl	80169ce <_ZN6SymbolC1Ef>
 801e89e:	f507 7344 	add.w	r3, r7, #784	; 0x310
 801e8a2:	f507 7253 	add.w	r2, r7, #844	; 0x34c
 801e8a6:	4621      	mov	r1, r4
 801e8a8:	4618      	mov	r0, r3
 801e8aa:	f7f8 fde1 	bl	8017470 <_ZN6SymbolmlES_>
 801e8ae:	f507 731d 	add.w	r3, r7, #628	; 0x274
 801e8b2:	f507 7244 	add.w	r2, r7, #784	; 0x310
 801e8b6:	f507 7125 	add.w	r1, r7, #660	; 0x294
 801e8ba:	4618      	mov	r0, r3
 801e8bc:	f7f8 f962 	bl	8016b84 <_ZN6SymbolplES_>
 801e8c0:	f507 7363 	add.w	r3, r7, #908	; 0x38c
 801e8c4:	eeb5 0a00 	vmov.f32	s0, #80	; 0x3e800000  0.250
 801e8c8:	4618      	mov	r0, r3
 801e8ca:	f7f8 f880 	bl	80169ce <_ZN6SymbolC1Ef>
 801e8ce:	f507 735b 	add.w	r3, r7, #876	; 0x36c
 801e8d2:	f507 7263 	add.w	r2, r7, #908	; 0x38c
 801e8d6:	496d      	ldr	r1, [pc, #436]	; (801ea8c <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x738>)
 801e8d8:	4618      	mov	r0, r3
 801e8da:	f7f8 fdc9 	bl	8017470 <_ZN6SymbolmlES_>
 801e8de:	f507 7315 	add.w	r3, r7, #596	; 0x254
 801e8e2:	f507 725b 	add.w	r2, r7, #876	; 0x36c
 801e8e6:	f507 711d 	add.w	r1, r7, #628	; 0x274
 801e8ea:	4618      	mov	r0, r3
 801e8ec:	f7f8 f94a 	bl	8016b84 <_ZN6SymbolplES_>
 801e8f0:	f7f9 ff34 	bl	801875c <_ZN16Variable_handler12get_instanceEv>
 801e8f4:	4604      	mov	r4, r0
 801e8f6:	f507 7371 	add.w	r3, r7, #964	; 0x3c4
 801e8fa:	4618      	mov	r0, r3
 801e8fc:	f003 ffa4 	bl	8022848 <_ZNSaIcEC1Ev>
 801e900:	f507 7271 	add.w	r2, r7, #964	; 0x3c4
 801e904:	f507 736b 	add.w	r3, r7, #940	; 0x3ac
 801e908:	4961      	ldr	r1, [pc, #388]	; (801ea90 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x73c>)
 801e90a:	4618      	mov	r0, r3
 801e90c:	f7e3 f943 	bl	8001b96 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801e910:	f507 736b 	add.w	r3, r7, #940	; 0x3ac
 801e914:	4619      	mov	r1, r3
 801e916:	4620      	mov	r0, r4
 801e918:	f7f9 ff4e 	bl	80187b8 <_ZN16Variable_handler7get_argENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801e91c:	4602      	mov	r2, r0
 801e91e:	f507 7315 	add.w	r3, r7, #596	; 0x254
 801e922:	4619      	mov	r1, r3
 801e924:	4610      	mov	r0, r2
 801e926:	f7ed fadd 	bl	800bee4 <_ZN6SymbolaSEOS_>
 801e92a:	f507 736b 	add.w	r3, r7, #940	; 0x3ac
 801e92e:	4618      	mov	r0, r3
 801e930:	f004 fa1b 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801e934:	f507 7371 	add.w	r3, r7, #964	; 0x3c4
 801e938:	4618      	mov	r0, r3
 801e93a:	f003 ff86 	bl	802284a <_ZNSaIcED1Ev>
 801e93e:	f507 7315 	add.w	r3, r7, #596	; 0x254
 801e942:	4618      	mov	r0, r3
 801e944:	f7e2 fdd0 	bl	80014e8 <_ZN6SymbolD1Ev>
 801e948:	f507 735b 	add.w	r3, r7, #876	; 0x36c
 801e94c:	4618      	mov	r0, r3
 801e94e:	f7e2 fdcb 	bl	80014e8 <_ZN6SymbolD1Ev>
 801e952:	f507 7363 	add.w	r3, r7, #908	; 0x38c
 801e956:	4618      	mov	r0, r3
 801e958:	f7e2 fdc6 	bl	80014e8 <_ZN6SymbolD1Ev>
 801e95c:	f507 731d 	add.w	r3, r7, #628	; 0x274
 801e960:	4618      	mov	r0, r3
 801e962:	f7e2 fdc1 	bl	80014e8 <_ZN6SymbolD1Ev>
 801e966:	f507 7344 	add.w	r3, r7, #784	; 0x310
 801e96a:	4618      	mov	r0, r3
 801e96c:	f7e2 fdbc 	bl	80014e8 <_ZN6SymbolD1Ev>
 801e970:	f507 7353 	add.w	r3, r7, #844	; 0x34c
 801e974:	4618      	mov	r0, r3
 801e976:	f7e2 fdb7 	bl	80014e8 <_ZN6SymbolD1Ev>
 801e97a:	f507 734c 	add.w	r3, r7, #816	; 0x330
 801e97e:	4618      	mov	r0, r3
 801e980:	f004 f9f3 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801e984:	f507 7352 	add.w	r3, r7, #840	; 0x348
 801e988:	4618      	mov	r0, r3
 801e98a:	f003 ff5e 	bl	802284a <_ZNSaIcED1Ev>
 801e98e:	f507 7325 	add.w	r3, r7, #660	; 0x294
 801e992:	4618      	mov	r0, r3
 801e994:	f7e2 fda8 	bl	80014e8 <_ZN6SymbolD1Ev>
 801e998:	f507 7334 	add.w	r3, r7, #720	; 0x2d0
 801e99c:	4618      	mov	r0, r3
 801e99e:	f7e2 fda3 	bl	80014e8 <_ZN6SymbolD1Ev>
 801e9a2:	f507 733c 	add.w	r3, r7, #752	; 0x2f0
 801e9a6:	4618      	mov	r0, r3
 801e9a8:	f7e2 fd9e 	bl	80014e8 <_ZN6SymbolD1Ev>
 801e9ac:	f507 732d 	add.w	r3, r7, #692	; 0x2b4
 801e9b0:	4618      	mov	r0, r3
 801e9b2:	f004 f9da 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801e9b6:	f507 7333 	add.w	r3, r7, #716	; 0x2cc
 801e9ba:	4618      	mov	r0, r3
 801e9bc:	f003 ff45 	bl	802284a <_ZNSaIcED1Ev>

	past_e = e;
 801e9c0:	492e      	ldr	r1, [pc, #184]	; (801ea7c <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x728>)
 801e9c2:	4834      	ldr	r0, [pc, #208]	; (801ea94 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x740>)
 801e9c4:	f7e2 ff26 	bl	8001814 <_ZN6SymbolaSERKS_>
	past_y = ARG(Y);
 801e9c8:	f7f9 fec8 	bl	801875c <_ZN16Variable_handler12get_instanceEv>
 801e9cc:	4604      	mov	r4, r0
 801e9ce:	f507 7378 	add.w	r3, r7, #992	; 0x3e0
 801e9d2:	4618      	mov	r0, r3
 801e9d4:	f003 ff38 	bl	8022848 <_ZNSaIcEC1Ev>
 801e9d8:	f507 7278 	add.w	r2, r7, #992	; 0x3e0
 801e9dc:	f507 7372 	add.w	r3, r7, #968	; 0x3c8
 801e9e0:	492b      	ldr	r1, [pc, #172]	; (801ea90 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x73c>)
 801e9e2:	4618      	mov	r0, r3
 801e9e4:	f7e3 f8d7 	bl	8001b96 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801e9e8:	f507 7372 	add.w	r3, r7, #968	; 0x3c8
 801e9ec:	4619      	mov	r1, r3
 801e9ee:	4620      	mov	r0, r4
 801e9f0:	f7f9 fee2 	bl	80187b8 <_ZN16Variable_handler7get_argENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801e9f4:	4603      	mov	r3, r0
 801e9f6:	4619      	mov	r1, r3
 801e9f8:	4824      	ldr	r0, [pc, #144]	; (801ea8c <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x738>)
 801e9fa:	f7e2 ff0b 	bl	8001814 <_ZN6SymbolaSERKS_>
 801e9fe:	f507 7372 	add.w	r3, r7, #968	; 0x3c8
 801ea02:	4618      	mov	r0, r3
 801ea04:	f004 f9b1 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801ea08:	f507 7378 	add.w	r3, r7, #992	; 0x3e0
 801ea0c:	4618      	mov	r0, r3
 801ea0e:	f003 ff1c 	bl	802284a <_ZNSaIcED1Ev>
	past_u = ARG(u);
 801ea12:	f7f9 fea3 	bl	801875c <_ZN16Variable_handler12get_instanceEv>
 801ea16:	4604      	mov	r4, r0
 801ea18:	f507 737f 	add.w	r3, r7, #1020	; 0x3fc
 801ea1c:	4618      	mov	r0, r3
 801ea1e:	f003 ff13 	bl	8022848 <_ZNSaIcEC1Ev>
 801ea22:	f507 727f 	add.w	r2, r7, #1020	; 0x3fc
 801ea26:	f507 7379 	add.w	r3, r7, #996	; 0x3e4
 801ea2a:	4915      	ldr	r1, [pc, #84]	; (801ea80 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x72c>)
 801ea2c:	4618      	mov	r0, r3
 801ea2e:	f7e3 f8b2 	bl	8001b96 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801ea32:	f507 7379 	add.w	r3, r7, #996	; 0x3e4
 801ea36:	4619      	mov	r1, r3
 801ea38:	4620      	mov	r0, r4
 801ea3a:	f7f9 febd 	bl	80187b8 <_ZN16Variable_handler7get_argENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801ea3e:	4603      	mov	r3, r0
 801ea40:	4619      	mov	r1, r3
 801ea42:	4810      	ldr	r0, [pc, #64]	; (801ea84 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x730>)
 801ea44:	f7e2 fee6 	bl	8001814 <_ZN6SymbolaSERKS_>
 801ea48:	f507 7379 	add.w	r3, r7, #996	; 0x3e4
 801ea4c:	4618      	mov	r0, r3
 801ea4e:	f004 f98c 	bl	8022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801ea52:	f507 737f 	add.w	r3, r7, #1020	; 0x3fc
 801ea56:	4618      	mov	r0, r3
 801ea58:	f003 fef7 	bl	802284a <_ZNSaIcED1Ev>

	return 0;
 801ea5c:	1d3b      	adds	r3, r7, #4
 801ea5e:	2100      	movs	r1, #0
 801ea60:	6818      	ldr	r0, [r3, #0]
 801ea62:	f7f7 ff9b 	bl	801699c <_ZN6SymbolC1Ei>
 801ea66:	1d3b      	adds	r3, r7, #4
 801ea68:	1d3a      	adds	r2, r7, #4
 801ea6a:	6812      	ldr	r2, [r2, #0]
 801ea6c:	601a      	str	r2, [r3, #0]
}
 801ea6e:	1d3b      	adds	r3, r7, #4
 801ea70:	6818      	ldr	r0, [r3, #0]
 801ea72:	f507 6780 	add.w	r7, r7, #1024	; 0x400
 801ea76:	46bd      	mov	sp, r7
 801ea78:	bdb0      	pop	{r4, r5, r7, pc}
 801ea7a:	bf00      	nop
 801ea7c:	200007fc 	.word	0x200007fc
 801ea80:	08028120 	.word	0x08028120
 801ea84:	20000790 	.word	0x20000790
 801ea88:	08028124 	.word	0x08028124
 801ea8c:	2000076c 	.word	0x2000076c
 801ea90:	08028110 	.word	0x08028110
 801ea94:	200007b4 	.word	0x200007b4

0801ea98 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EEC1Ev>:
      _Rb_tree() = default;
 801ea98:	b580      	push	{r7, lr}
 801ea9a:	b082      	sub	sp, #8
 801ea9c:	af00      	add	r7, sp, #0
 801ea9e:	6078      	str	r0, [r7, #4]
 801eaa0:	687b      	ldr	r3, [r7, #4]
 801eaa2:	4618      	mov	r0, r3
 801eaa4:	f000 f980 	bl	801eda8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE13_Rb_tree_implISK_Lb1EEC1Ev>
 801eaa8:	687b      	ldr	r3, [r7, #4]
 801eaaa:	4618      	mov	r0, r3
 801eaac:	3708      	adds	r7, #8
 801eaae:	46bd      	mov	sp, r7
 801eab0:	bd80      	pop	{r7, pc}

0801eab2 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaIS9_EEESt4lessIS5_ESaISt4pairIKS5_SD_EEEC1Ev>:
      map() = default;
 801eab2:	b580      	push	{r7, lr}
 801eab4:	b082      	sub	sp, #8
 801eab6:	af00      	add	r7, sp, #0
 801eab8:	6078      	str	r0, [r7, #4]
 801eaba:	687b      	ldr	r3, [r7, #4]
 801eabc:	4618      	mov	r0, r3
 801eabe:	f7ff ffeb 	bl	801ea98 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EEC1Ev>
 801eac2:	687b      	ldr	r3, [r7, #4]
 801eac4:	4618      	mov	r0, r3
 801eac6:	3708      	adds	r7, #8
 801eac8:	46bd      	mov	sp, r7
 801eaca:	bd80      	pop	{r7, pc}

0801eacc <_ZN16Function_handlerC1Ev>:

}

Function_handler::Function_handler()
 801eacc:	b590      	push	{r4, r7, lr}
 801eace:	b08d      	sub	sp, #52	; 0x34
 801ead0:	af00      	add	r7, sp, #0
 801ead2:	6078      	str	r0, [r7, #4]
 801ead4:	687b      	ldr	r3, [r7, #4]
 801ead6:	4618      	mov	r0, r3
 801ead8:	f7ff ffeb 	bl	801eab2 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaIS9_EEESt4lessIS5_ESaISt4pairIKS5_SD_EEEC1Ev>
{
	ADD_FUNCTION(run_single_experiment_iteration);
 801eadc:	687c      	ldr	r4, [r7, #4]
 801eade:	4b0e      	ldr	r3, [pc, #56]	; (801eb18 <_ZN16Function_handlerC1Ev+0x4c>)
 801eae0:	62fb      	str	r3, [r7, #44]	; 0x2c
 801eae2:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 801eae6:	f107 0310 	add.w	r3, r7, #16
 801eaea:	490c      	ldr	r1, [pc, #48]	; (801eb1c <_ZN16Function_handlerC1Ev+0x50>)
 801eaec:	4618      	mov	r0, r3
 801eaee:	f000 f970 	bl	801edd2 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISA_EEEEC1IRA32_KcSE_Lb1EEEOT_OT0_>
 801eaf2:	f107 0308 	add.w	r3, r7, #8
 801eaf6:	f107 0210 	add.w	r2, r7, #16
 801eafa:	4621      	mov	r1, r4
 801eafc:	4618      	mov	r0, r3
 801eafe:	f000 f990 	bl	801ee22 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaIS9_EEESt4lessIS5_ESaISt4pairIKS5_SD_EEE6insertEOSI_>
 801eb02:	f107 0310 	add.w	r3, r7, #16
 801eb06:	4618      	mov	r0, r3
 801eb08:	f7ef fec3 	bl	800e892 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISA_EEEED1Ev>
}
 801eb0c:	687b      	ldr	r3, [r7, #4]
 801eb0e:	4618      	mov	r0, r3
 801eb10:	3734      	adds	r7, #52	; 0x34
 801eb12:	46bd      	mov	sp, r7
 801eb14:	bd90      	pop	{r4, r7, pc}
 801eb16:	bf00      	nop
 801eb18:	0801e355 	.word	0x0801e355
 801eb1c:	08028128 	.word	0x08028128

0801eb20 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EEC1Ev>:
 801eb20:	b580      	push	{r7, lr}
 801eb22:	b082      	sub	sp, #8
 801eb24:	af00      	add	r7, sp, #0
 801eb26:	6078      	str	r0, [r7, #4]
 801eb28:	687b      	ldr	r3, [r7, #4]
 801eb2a:	4618      	mov	r0, r3
 801eb2c:	f000 f98d 	bl	801ee4a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE13_Rb_tree_implISD_Lb1EEC1Ev>
 801eb30:	687b      	ldr	r3, [r7, #4]
 801eb32:	4618      	mov	r0, r3
 801eb34:	3708      	adds	r7, #8
 801eb36:	46bd      	mov	sp, r7
 801eb38:	bd80      	pop	{r7, pc}

0801eb3a <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1Ev>:
 801eb3a:	b580      	push	{r7, lr}
 801eb3c:	b082      	sub	sp, #8
 801eb3e:	af00      	add	r7, sp, #0
 801eb40:	6078      	str	r0, [r7, #4]
 801eb42:	687b      	ldr	r3, [r7, #4]
 801eb44:	4618      	mov	r0, r3
 801eb46:	f7ff ffeb 	bl	801eb20 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EEC1Ev>
 801eb4a:	687b      	ldr	r3, [r7, #4]
 801eb4c:	4618      	mov	r0, r3
 801eb4e:	3708      	adds	r7, #8
 801eb50:	46bd      	mov	sp, r7
 801eb52:	bd80      	pop	{r7, pc}

0801eb54 <_ZN16Variable_handlerC1Ev>:

Variable_handler::Variable_handler()
 801eb54:	b590      	push	{r4, r7, lr}
 801eb56:	f5ad 7d13 	sub.w	sp, sp, #588	; 0x24c
 801eb5a:	af00      	add	r7, sp, #0
 801eb5c:	1d3b      	adds	r3, r7, #4
 801eb5e:	6018      	str	r0, [r3, #0]
 801eb60:	1d3b      	adds	r3, r7, #4
 801eb62:	681b      	ldr	r3, [r3, #0]
 801eb64:	4618      	mov	r0, r3
 801eb66:	f7ff ffe8 	bl	801eb3a <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1Ev>
 801eb6a:	1d3b      	adds	r3, r7, #4
 801eb6c:	681b      	ldr	r3, [r3, #0]
 801eb6e:	3318      	adds	r3, #24
 801eb70:	4618      	mov	r0, r3
 801eb72:	f7ff ffe2 	bl	801eb3a <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1Ev>
 801eb76:	1d3b      	adds	r3, r7, #4
 801eb78:	681b      	ldr	r3, [r3, #0]
 801eb7a:	3330      	adds	r3, #48	; 0x30
 801eb7c:	4618      	mov	r0, r3
 801eb7e:	f7ff ffdc 	bl	801eb3a <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1Ev>
{
	ADD_ARG(u);
 801eb82:	1d3b      	adds	r3, r7, #4
 801eb84:	681b      	ldr	r3, [r3, #0]
 801eb86:	f103 0430 	add.w	r4, r3, #48	; 0x30
 801eb8a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801eb8e:	4618      	mov	r0, r3
 801eb90:	2320      	movs	r3, #32
 801eb92:	461a      	mov	r2, r3
 801eb94:	2100      	movs	r1, #0
 801eb96:	f005 fb25 	bl	80241e4 <memset>
 801eb9a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801eb9e:	4618      	mov	r0, r3
 801eba0:	f7ed fe89 	bl	800c8b6 <_ZN6SymbolC1Ev>
 801eba4:	f107 0248 	add.w	r2, r7, #72	; 0x48
 801eba8:	f107 0310 	add.w	r3, r7, #16
 801ebac:	4978      	ldr	r1, [pc, #480]	; (801ed90 <_ZN16Variable_handlerC1Ev+0x23c>)
 801ebae:	4618      	mov	r0, r3
 801ebb0:	f000 f960 	bl	801ee74 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEC1IRA2_KcLb1EEEOT_RKS7_>
 801ebb4:	f107 0308 	add.w	r3, r7, #8
 801ebb8:	f107 0210 	add.w	r2, r7, #16
 801ebbc:	4621      	mov	r1, r4
 801ebbe:	4618      	mov	r0, r3
 801ebc0:	f000 f97f 	bl	801eec2 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE6insertEOSB_>
 801ebc4:	f107 0310 	add.w	r3, r7, #16
 801ebc8:	4618      	mov	r0, r3
 801ebca:	f7fa fd42 	bl	8019652 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolED1Ev>
 801ebce:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801ebd2:	4618      	mov	r0, r3
 801ebd4:	f7e2 fc88 	bl	80014e8 <_ZN6SymbolD1Ev>
	ADD_ARG(Y);
 801ebd8:	1d3b      	adds	r3, r7, #4
 801ebda:	681b      	ldr	r3, [r3, #0]
 801ebdc:	f103 0430 	add.w	r4, r3, #48	; 0x30
 801ebe0:	f107 03a8 	add.w	r3, r7, #168	; 0xa8
 801ebe4:	4618      	mov	r0, r3
 801ebe6:	2320      	movs	r3, #32
 801ebe8:	461a      	mov	r2, r3
 801ebea:	2100      	movs	r1, #0
 801ebec:	f005 fafa 	bl	80241e4 <memset>
 801ebf0:	f107 03a8 	add.w	r3, r7, #168	; 0xa8
 801ebf4:	4618      	mov	r0, r3
 801ebf6:	f7ed fe5e 	bl	800c8b6 <_ZN6SymbolC1Ev>
 801ebfa:	f107 02a8 	add.w	r2, r7, #168	; 0xa8
 801ebfe:	f107 0370 	add.w	r3, r7, #112	; 0x70
 801ec02:	4964      	ldr	r1, [pc, #400]	; (801ed94 <_ZN16Variable_handlerC1Ev+0x240>)
 801ec04:	4618      	mov	r0, r3
 801ec06:	f000 f935 	bl	801ee74 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEC1IRA2_KcLb1EEEOT_RKS7_>
 801ec0a:	f107 0368 	add.w	r3, r7, #104	; 0x68
 801ec0e:	f107 0270 	add.w	r2, r7, #112	; 0x70
 801ec12:	4621      	mov	r1, r4
 801ec14:	4618      	mov	r0, r3
 801ec16:	f000 f954 	bl	801eec2 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE6insertEOSB_>
 801ec1a:	f107 0370 	add.w	r3, r7, #112	; 0x70
 801ec1e:	4618      	mov	r0, r3
 801ec20:	f7fa fd17 	bl	8019652 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolED1Ev>
 801ec24:	f107 03a8 	add.w	r3, r7, #168	; 0xa8
 801ec28:	4618      	mov	r0, r3
 801ec2a:	f7e2 fc5d 	bl	80014e8 <_ZN6SymbolD1Ev>

	ADD_PAR(Yzad);
 801ec2e:	1d3b      	adds	r3, r7, #4
 801ec30:	681b      	ldr	r3, [r3, #0]
 801ec32:	f103 0418 	add.w	r4, r3, #24
 801ec36:	f507 7384 	add.w	r3, r7, #264	; 0x108
 801ec3a:	4618      	mov	r0, r3
 801ec3c:	2320      	movs	r3, #32
 801ec3e:	461a      	mov	r2, r3
 801ec40:	2100      	movs	r1, #0
 801ec42:	f005 facf 	bl	80241e4 <memset>
 801ec46:	f507 7384 	add.w	r3, r7, #264	; 0x108
 801ec4a:	4618      	mov	r0, r3
 801ec4c:	f7ed fe33 	bl	800c8b6 <_ZN6SymbolC1Ev>
 801ec50:	f507 7284 	add.w	r2, r7, #264	; 0x108
 801ec54:	f107 03d0 	add.w	r3, r7, #208	; 0xd0
 801ec58:	494f      	ldr	r1, [pc, #316]	; (801ed98 <_ZN16Variable_handlerC1Ev+0x244>)
 801ec5a:	4618      	mov	r0, r3
 801ec5c:	f000 f945 	bl	801eeea <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEC1IRA5_KcLb1EEEOT_RKS7_>
 801ec60:	f107 03c8 	add.w	r3, r7, #200	; 0xc8
 801ec64:	f107 02d0 	add.w	r2, r7, #208	; 0xd0
 801ec68:	4621      	mov	r1, r4
 801ec6a:	4618      	mov	r0, r3
 801ec6c:	f000 f929 	bl	801eec2 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE6insertEOSB_>
 801ec70:	f107 03d0 	add.w	r3, r7, #208	; 0xd0
 801ec74:	4618      	mov	r0, r3
 801ec76:	f7fa fcec 	bl	8019652 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolED1Ev>
 801ec7a:	f507 7384 	add.w	r3, r7, #264	; 0x108
 801ec7e:	4618      	mov	r0, r3
 801ec80:	f7e2 fc32 	bl	80014e8 <_ZN6SymbolD1Ev>
	ADD_PAR(P);
 801ec84:	1d3b      	adds	r3, r7, #4
 801ec86:	681b      	ldr	r3, [r3, #0]
 801ec88:	f103 0418 	add.w	r4, r3, #24
 801ec8c:	f507 73b4 	add.w	r3, r7, #360	; 0x168
 801ec90:	2220      	movs	r2, #32
 801ec92:	2100      	movs	r1, #0
 801ec94:	4618      	mov	r0, r3
 801ec96:	f005 faa5 	bl	80241e4 <memset>
 801ec9a:	f507 73b4 	add.w	r3, r7, #360	; 0x168
 801ec9e:	4618      	mov	r0, r3
 801eca0:	f7ed fe09 	bl	800c8b6 <_ZN6SymbolC1Ev>
 801eca4:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 801eca8:	f507 7398 	add.w	r3, r7, #304	; 0x130
 801ecac:	493b      	ldr	r1, [pc, #236]	; (801ed9c <_ZN16Variable_handlerC1Ev+0x248>)
 801ecae:	4618      	mov	r0, r3
 801ecb0:	f000 f8e0 	bl	801ee74 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEC1IRA2_KcLb1EEEOT_RKS7_>
 801ecb4:	f507 7394 	add.w	r3, r7, #296	; 0x128
 801ecb8:	f507 7298 	add.w	r2, r7, #304	; 0x130
 801ecbc:	4621      	mov	r1, r4
 801ecbe:	4618      	mov	r0, r3
 801ecc0:	f000 f8ff 	bl	801eec2 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE6insertEOSB_>
 801ecc4:	f507 7398 	add.w	r3, r7, #304	; 0x130
 801ecc8:	4618      	mov	r0, r3
 801ecca:	f7fa fcc2 	bl	8019652 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolED1Ev>
 801ecce:	f507 73b4 	add.w	r3, r7, #360	; 0x168
 801ecd2:	4618      	mov	r0, r3
 801ecd4:	f7e2 fc08 	bl	80014e8 <_ZN6SymbolD1Ev>
	ADD_PAR(I);
 801ecd8:	1d3b      	adds	r3, r7, #4
 801ecda:	681b      	ldr	r3, [r3, #0]
 801ecdc:	f103 0418 	add.w	r4, r3, #24
 801ece0:	f507 73e4 	add.w	r3, r7, #456	; 0x1c8
 801ece4:	2220      	movs	r2, #32
 801ece6:	2100      	movs	r1, #0
 801ece8:	4618      	mov	r0, r3
 801ecea:	f005 fa7b 	bl	80241e4 <memset>
 801ecee:	f507 73e4 	add.w	r3, r7, #456	; 0x1c8
 801ecf2:	4618      	mov	r0, r3
 801ecf4:	f7ed fddf 	bl	800c8b6 <_ZN6SymbolC1Ev>
 801ecf8:	f507 72e4 	add.w	r2, r7, #456	; 0x1c8
 801ecfc:	f507 73c8 	add.w	r3, r7, #400	; 0x190
 801ed00:	4927      	ldr	r1, [pc, #156]	; (801eda0 <_ZN16Variable_handlerC1Ev+0x24c>)
 801ed02:	4618      	mov	r0, r3
 801ed04:	f000 f8b6 	bl	801ee74 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEC1IRA2_KcLb1EEEOT_RKS7_>
 801ed08:	f507 73c4 	add.w	r3, r7, #392	; 0x188
 801ed0c:	f507 72c8 	add.w	r2, r7, #400	; 0x190
 801ed10:	4621      	mov	r1, r4
 801ed12:	4618      	mov	r0, r3
 801ed14:	f000 f8d5 	bl	801eec2 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE6insertEOSB_>
 801ed18:	f507 73c8 	add.w	r3, r7, #400	; 0x190
 801ed1c:	4618      	mov	r0, r3
 801ed1e:	f7fa fc98 	bl	8019652 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolED1Ev>
 801ed22:	f507 73e4 	add.w	r3, r7, #456	; 0x1c8
 801ed26:	4618      	mov	r0, r3
 801ed28:	f7e2 fbde 	bl	80014e8 <_ZN6SymbolD1Ev>
	ADD_PAR(D);
 801ed2c:	1d3b      	adds	r3, r7, #4
 801ed2e:	681b      	ldr	r3, [r3, #0]
 801ed30:	f103 0418 	add.w	r4, r3, #24
 801ed34:	f507 730a 	add.w	r3, r7, #552	; 0x228
 801ed38:	2220      	movs	r2, #32
 801ed3a:	2100      	movs	r1, #0
 801ed3c:	4618      	mov	r0, r3
 801ed3e:	f005 fa51 	bl	80241e4 <memset>
 801ed42:	f507 730a 	add.w	r3, r7, #552	; 0x228
 801ed46:	4618      	mov	r0, r3
 801ed48:	f7ed fdb5 	bl	800c8b6 <_ZN6SymbolC1Ev>
 801ed4c:	f507 720a 	add.w	r2, r7, #552	; 0x228
 801ed50:	f507 73f8 	add.w	r3, r7, #496	; 0x1f0
 801ed54:	4913      	ldr	r1, [pc, #76]	; (801eda4 <_ZN16Variable_handlerC1Ev+0x250>)
 801ed56:	4618      	mov	r0, r3
 801ed58:	f000 f88c 	bl	801ee74 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEC1IRA2_KcLb1EEEOT_RKS7_>
 801ed5c:	f507 73f4 	add.w	r3, r7, #488	; 0x1e8
 801ed60:	f507 72f8 	add.w	r2, r7, #496	; 0x1f0
 801ed64:	4621      	mov	r1, r4
 801ed66:	4618      	mov	r0, r3
 801ed68:	f000 f8ab 	bl	801eec2 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE6insertEOSB_>
 801ed6c:	f507 73f8 	add.w	r3, r7, #496	; 0x1f0
 801ed70:	4618      	mov	r0, r3
 801ed72:	f7fa fc6e 	bl	8019652 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolED1Ev>
 801ed76:	f507 730a 	add.w	r3, r7, #552	; 0x228
 801ed7a:	4618      	mov	r0, r3
 801ed7c:	f7e2 fbb4 	bl	80014e8 <_ZN6SymbolD1Ev>
}
 801ed80:	1d3b      	adds	r3, r7, #4
 801ed82:	681b      	ldr	r3, [r3, #0]
 801ed84:	4618      	mov	r0, r3
 801ed86:	f507 7713 	add.w	r7, r7, #588	; 0x24c
 801ed8a:	46bd      	mov	sp, r7
 801ed8c:	bd90      	pop	{r4, r7, pc}
 801ed8e:	bf00      	nop
 801ed90:	08028120 	.word	0x08028120
 801ed94:	08028110 	.word	0x08028110
 801ed98:	08028108 	.word	0x08028108
 801ed9c:	08028114 	.word	0x08028114
 801eda0:	08028118 	.word	0x08028118
 801eda4:	0802811c 	.word	0x0802811c

0801eda8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE13_Rb_tree_implISK_Lb1EEC1Ev>:
	  _Rb_tree_impl()
 801eda8:	b580      	push	{r7, lr}
 801edaa:	b082      	sub	sp, #8
 801edac:	af00      	add	r7, sp, #0
 801edae:	6078      	str	r0, [r7, #4]
	  : _Node_allocator()
 801edb0:	6878      	ldr	r0, [r7, #4]
 801edb2:	f000 f8c1 	bl	801ef38 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEEC1Ev>
 801edb6:	687b      	ldr	r3, [r7, #4]
 801edb8:	4618      	mov	r0, r3
 801edba:	f7f3 fa05 	bl	80121c8 <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>
 801edbe:	687b      	ldr	r3, [r7, #4]
 801edc0:	3304      	adds	r3, #4
 801edc2:	4618      	mov	r0, r3
 801edc4:	f7e2 f95b 	bl	800107e <_ZNSt15_Rb_tree_headerC1Ev>
	  { }
 801edc8:	687b      	ldr	r3, [r7, #4]
 801edca:	4618      	mov	r0, r3
 801edcc:	3708      	adds	r7, #8
 801edce:	46bd      	mov	sp, r7
 801edd0:	bd80      	pop	{r7, pc}

0801edd2 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISA_EEEEC1IRA32_KcSE_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 801edd2:	b5b0      	push	{r4, r5, r7, lr}
 801edd4:	b086      	sub	sp, #24
 801edd6:	af00      	add	r7, sp, #0
 801edd8:	60f8      	str	r0, [r7, #12]
 801edda:	60b9      	str	r1, [r7, #8]
 801eddc:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 801edde:	68fc      	ldr	r4, [r7, #12]
 801ede0:	68b8      	ldr	r0, [r7, #8]
 801ede2:	f000 f8b5 	bl	801ef50 <_ZSt7forwardIRA32_KcEOT_RNSt16remove_referenceIS3_E4typeE>
 801ede6:	4605      	mov	r5, r0
 801ede8:	f107 0314 	add.w	r3, r7, #20
 801edec:	4618      	mov	r0, r3
 801edee:	f003 fd2b 	bl	8022848 <_ZNSaIcEC1Ev>
 801edf2:	f107 0314 	add.w	r3, r7, #20
 801edf6:	461a      	mov	r2, r3
 801edf8:	4629      	mov	r1, r5
 801edfa:	4620      	mov	r0, r4
 801edfc:	f7e2 fecb 	bl	8001b96 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801ee00:	f107 0314 	add.w	r3, r7, #20
 801ee04:	4618      	mov	r0, r3
 801ee06:	f003 fd20 	bl	802284a <_ZNSaIcED1Ev>
 801ee0a:	6878      	ldr	r0, [r7, #4]
 801ee0c:	f000 f8ab 	bl	801ef66 <_ZSt7forwardIPF6SymbolSt6vectorIP10ExpressionSaIS3_EEEEOT_RNSt16remove_referenceIS8_E4typeE>
 801ee10:	4603      	mov	r3, r0
 801ee12:	681a      	ldr	r2, [r3, #0]
 801ee14:	68fb      	ldr	r3, [r7, #12]
 801ee16:	619a      	str	r2, [r3, #24]
 801ee18:	68fb      	ldr	r3, [r7, #12]
 801ee1a:	4618      	mov	r0, r3
 801ee1c:	3718      	adds	r7, #24
 801ee1e:	46bd      	mov	sp, r7
 801ee20:	bdb0      	pop	{r4, r5, r7, pc}

0801ee22 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaIS9_EEESt4lessIS5_ESaISt4pairIKS5_SD_EEE6insertEOSI_>:
      insert(value_type&& __x)
 801ee22:	b590      	push	{r4, r7, lr}
 801ee24:	b085      	sub	sp, #20
 801ee26:	af00      	add	r7, sp, #0
 801ee28:	60f8      	str	r0, [r7, #12]
 801ee2a:	60b9      	str	r1, [r7, #8]
 801ee2c:	607a      	str	r2, [r7, #4]
      { return _M_t._M_insert_unique(std::move(__x)); }
 801ee2e:	68bc      	ldr	r4, [r7, #8]
 801ee30:	6878      	ldr	r0, [r7, #4]
 801ee32:	f000 f8a3 	bl	801ef7c <_ZSt4moveIRSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEONSt16remove_referenceIT_E4typeEOSJ_>
 801ee36:	4602      	mov	r2, r0
 801ee38:	68fb      	ldr	r3, [r7, #12]
 801ee3a:	4621      	mov	r1, r4
 801ee3c:	4618      	mov	r0, r3
 801ee3e:	f000 f8a8 	bl	801ef92 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE16_M_insert_uniqueISG_EES6_ISt17_Rb_tree_iteratorISG_EbEOT_>
 801ee42:	68f8      	ldr	r0, [r7, #12]
 801ee44:	3714      	adds	r7, #20
 801ee46:	46bd      	mov	sp, r7
 801ee48:	bd90      	pop	{r4, r7, pc}

0801ee4a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE13_Rb_tree_implISD_Lb1EEC1Ev>:
	  _Rb_tree_impl()
 801ee4a:	b580      	push	{r7, lr}
 801ee4c:	b082      	sub	sp, #8
 801ee4e:	af00      	add	r7, sp, #0
 801ee50:	6078      	str	r0, [r7, #4]
	  : _Node_allocator()
 801ee52:	6878      	ldr	r0, [r7, #4]
 801ee54:	f000 f8ec 	bl	801f030 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEC1Ev>
 801ee58:	687b      	ldr	r3, [r7, #4]
 801ee5a:	4618      	mov	r0, r3
 801ee5c:	f7f3 f9b4 	bl	80121c8 <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>
 801ee60:	687b      	ldr	r3, [r7, #4]
 801ee62:	3304      	adds	r3, #4
 801ee64:	4618      	mov	r0, r3
 801ee66:	f7e2 f90a 	bl	800107e <_ZNSt15_Rb_tree_headerC1Ev>
	  { }
 801ee6a:	687b      	ldr	r3, [r7, #4]
 801ee6c:	4618      	mov	r0, r3
 801ee6e:	3708      	adds	r7, #8
 801ee70:	46bd      	mov	sp, r7
 801ee72:	bd80      	pop	{r7, pc}

0801ee74 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEC1IRA2_KcLb1EEEOT_RKS7_>:
       constexpr pair(_U1&& __x, const _T2& __y)
 801ee74:	b5b0      	push	{r4, r5, r7, lr}
 801ee76:	b086      	sub	sp, #24
 801ee78:	af00      	add	r7, sp, #0
 801ee7a:	60f8      	str	r0, [r7, #12]
 801ee7c:	60b9      	str	r1, [r7, #8]
 801ee7e:	607a      	str	r2, [r7, #4]
       : first(std::forward<_U1>(__x)), second(__y) { }
 801ee80:	68fc      	ldr	r4, [r7, #12]
 801ee82:	68b8      	ldr	r0, [r7, #8]
 801ee84:	f000 f8e0 	bl	801f048 <_ZSt7forwardIRA2_KcEOT_RNSt16remove_referenceIS3_E4typeE>
 801ee88:	4605      	mov	r5, r0
 801ee8a:	f107 0314 	add.w	r3, r7, #20
 801ee8e:	4618      	mov	r0, r3
 801ee90:	f003 fcda 	bl	8022848 <_ZNSaIcEC1Ev>
 801ee94:	f107 0314 	add.w	r3, r7, #20
 801ee98:	461a      	mov	r2, r3
 801ee9a:	4629      	mov	r1, r5
 801ee9c:	4620      	mov	r0, r4
 801ee9e:	f7e2 fe7a 	bl	8001b96 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801eea2:	f107 0314 	add.w	r3, r7, #20
 801eea6:	4618      	mov	r0, r3
 801eea8:	f003 fccf 	bl	802284a <_ZNSaIcED1Ev>
 801eeac:	68fb      	ldr	r3, [r7, #12]
 801eeae:	3318      	adds	r3, #24
 801eeb0:	6879      	ldr	r1, [r7, #4]
 801eeb2:	4618      	mov	r0, r3
 801eeb4:	f7e9 fb1e 	bl	80084f4 <_ZN6SymbolC1ERKS_>
 801eeb8:	68fb      	ldr	r3, [r7, #12]
 801eeba:	4618      	mov	r0, r3
 801eebc:	3718      	adds	r7, #24
 801eebe:	46bd      	mov	sp, r7
 801eec0:	bdb0      	pop	{r4, r5, r7, pc}

0801eec2 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE6insertEOSB_>:
      insert(value_type&& __x)
 801eec2:	b590      	push	{r4, r7, lr}
 801eec4:	b085      	sub	sp, #20
 801eec6:	af00      	add	r7, sp, #0
 801eec8:	60f8      	str	r0, [r7, #12]
 801eeca:	60b9      	str	r1, [r7, #8]
 801eecc:	607a      	str	r2, [r7, #4]
      { return _M_t._M_insert_unique(std::move(__x)); }
 801eece:	68bc      	ldr	r4, [r7, #8]
 801eed0:	6878      	ldr	r0, [r7, #4]
 801eed2:	f000 f8c4 	bl	801f05e <_ZSt4moveIRSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEONSt16remove_referenceIT_E4typeEOSC_>
 801eed6:	4602      	mov	r2, r0
 801eed8:	68fb      	ldr	r3, [r7, #12]
 801eeda:	4621      	mov	r1, r4
 801eedc:	4618      	mov	r0, r3
 801eede:	f000 f8c9 	bl	801f074 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE16_M_insert_uniqueIS9_EES6_ISt17_Rb_tree_iteratorIS9_EbEOT_>
 801eee2:	68f8      	ldr	r0, [r7, #12]
 801eee4:	3714      	adds	r7, #20
 801eee6:	46bd      	mov	sp, r7
 801eee8:	bd90      	pop	{r4, r7, pc}

0801eeea <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEC1IRA5_KcLb1EEEOT_RKS7_>:
       constexpr pair(_U1&& __x, const _T2& __y)
 801eeea:	b5b0      	push	{r4, r5, r7, lr}
 801eeec:	b086      	sub	sp, #24
 801eeee:	af00      	add	r7, sp, #0
 801eef0:	60f8      	str	r0, [r7, #12]
 801eef2:	60b9      	str	r1, [r7, #8]
 801eef4:	607a      	str	r2, [r7, #4]
       : first(std::forward<_U1>(__x)), second(__y) { }
 801eef6:	68fc      	ldr	r4, [r7, #12]
 801eef8:	68b8      	ldr	r0, [r7, #8]
 801eefa:	f7e2 fe41 	bl	8001b80 <_ZSt7forwardIRA5_KcEOT_RNSt16remove_referenceIS3_E4typeE>
 801eefe:	4605      	mov	r5, r0
 801ef00:	f107 0314 	add.w	r3, r7, #20
 801ef04:	4618      	mov	r0, r3
 801ef06:	f003 fc9f 	bl	8022848 <_ZNSaIcEC1Ev>
 801ef0a:	f107 0314 	add.w	r3, r7, #20
 801ef0e:	461a      	mov	r2, r3
 801ef10:	4629      	mov	r1, r5
 801ef12:	4620      	mov	r0, r4
 801ef14:	f7e2 fe3f 	bl	8001b96 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801ef18:	f107 0314 	add.w	r3, r7, #20
 801ef1c:	4618      	mov	r0, r3
 801ef1e:	f003 fc94 	bl	802284a <_ZNSaIcED1Ev>
 801ef22:	68fb      	ldr	r3, [r7, #12]
 801ef24:	3318      	adds	r3, #24
 801ef26:	6879      	ldr	r1, [r7, #4]
 801ef28:	4618      	mov	r0, r3
 801ef2a:	f7e9 fae3 	bl	80084f4 <_ZN6SymbolC1ERKS_>
 801ef2e:	68fb      	ldr	r3, [r7, #12]
 801ef30:	4618      	mov	r0, r3
 801ef32:	3718      	adds	r7, #24
 801ef34:	46bd      	mov	sp, r7
 801ef36:	bdb0      	pop	{r4, r5, r7, pc}

0801ef38 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEEC1Ev>:
 801ef38:	b580      	push	{r7, lr}
 801ef3a:	b082      	sub	sp, #8
 801ef3c:	af00      	add	r7, sp, #0
 801ef3e:	6078      	str	r0, [r7, #4]
 801ef40:	6878      	ldr	r0, [r7, #4]
 801ef42:	f000 f8e6 	bl	801f112 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISD_EEEEEEC1Ev>
 801ef46:	687b      	ldr	r3, [r7, #4]
 801ef48:	4618      	mov	r0, r3
 801ef4a:	3708      	adds	r7, #8
 801ef4c:	46bd      	mov	sp, r7
 801ef4e:	bd80      	pop	{r7, pc}

0801ef50 <_ZSt7forwardIRA32_KcEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801ef50:	b480      	push	{r7}
 801ef52:	b083      	sub	sp, #12
 801ef54:	af00      	add	r7, sp, #0
 801ef56:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801ef58:	687b      	ldr	r3, [r7, #4]
 801ef5a:	4618      	mov	r0, r3
 801ef5c:	370c      	adds	r7, #12
 801ef5e:	46bd      	mov	sp, r7
 801ef60:	f85d 7b04 	ldr.w	r7, [sp], #4
 801ef64:	4770      	bx	lr

0801ef66 <_ZSt7forwardIPF6SymbolSt6vectorIP10ExpressionSaIS3_EEEEOT_RNSt16remove_referenceIS8_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801ef66:	b480      	push	{r7}
 801ef68:	b083      	sub	sp, #12
 801ef6a:	af00      	add	r7, sp, #0
 801ef6c:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801ef6e:	687b      	ldr	r3, [r7, #4]
 801ef70:	4618      	mov	r0, r3
 801ef72:	370c      	adds	r7, #12
 801ef74:	46bd      	mov	sp, r7
 801ef76:	f85d 7b04 	ldr.w	r7, [sp], #4
 801ef7a:	4770      	bx	lr

0801ef7c <_ZSt4moveIRSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEONSt16remove_referenceIT_E4typeEOSJ_>:
    move(_Tp&& __t) noexcept
 801ef7c:	b480      	push	{r7}
 801ef7e:	b083      	sub	sp, #12
 801ef80:	af00      	add	r7, sp, #0
 801ef82:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 801ef84:	687b      	ldr	r3, [r7, #4]
 801ef86:	4618      	mov	r0, r3
 801ef88:	370c      	adds	r7, #12
 801ef8a:	46bd      	mov	sp, r7
 801ef8c:	f85d 7b04 	ldr.w	r7, [sp], #4
 801ef90:	4770      	bx	lr

0801ef92 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE16_M_insert_uniqueISG_EES6_ISt17_Rb_tree_iteratorISG_EbEOT_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 801ef92:	b5b0      	push	{r4, r5, r7, lr}
 801ef94:	b08e      	sub	sp, #56	; 0x38
 801ef96:	af02      	add	r7, sp, #8
 801ef98:	60f8      	str	r0, [r7, #12]
 801ef9a:	60b9      	str	r1, [r7, #8]
 801ef9c:	607a      	str	r2, [r7, #4]
	= _M_get_insert_unique_pos(_KeyOfValue()(__v));
 801ef9e:	f107 031c 	add.w	r3, r7, #28
 801efa2:	6879      	ldr	r1, [r7, #4]
 801efa4:	4618      	mov	r0, r3
 801efa6:	f000 f944 	bl	801f232 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEclERSG_>
 801efaa:	4602      	mov	r2, r0
      pair<_Base_ptr, _Base_ptr> __res
 801efac:	f107 0314 	add.w	r3, r7, #20
 801efb0:	68b9      	ldr	r1, [r7, #8]
 801efb2:	4618      	mov	r0, r3
 801efb4:	f000 f8b8 	bl	801f128 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_>
      if (__res.second)
 801efb8:	69bb      	ldr	r3, [r7, #24]
 801efba:	2b00      	cmp	r3, #0
 801efbc:	d022      	beq.n	801f004 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE16_M_insert_uniqueISG_EES6_ISt17_Rb_tree_iteratorISG_EbEOT_+0x72>
	  _Alloc_node __an(*this);
 801efbe:	f107 0310 	add.w	r3, r7, #16
 801efc2:	68b9      	ldr	r1, [r7, #8]
 801efc4:	4618      	mov	r0, r3
 801efc6:	f000 f940 	bl	801f24a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE11_Alloc_nodeC1ERSM_>
	  return _Res(_M_insert_(__res.first, __res.second,
 801efca:	697c      	ldr	r4, [r7, #20]
 801efcc:	69bd      	ldr	r5, [r7, #24]
 801efce:	6878      	ldr	r0, [r7, #4]
 801efd0:	f000 f94a 	bl	801f268 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEOT_RNSt16remove_referenceISH_E4typeE>
 801efd4:	4602      	mov	r2, r0
 801efd6:	f107 0310 	add.w	r3, r7, #16
 801efda:	9300      	str	r3, [sp, #0]
 801efdc:	4613      	mov	r3, r2
 801efde:	462a      	mov	r2, r5
 801efe0:	4621      	mov	r1, r4
 801efe2:	68b8      	ldr	r0, [r7, #8]
 801efe4:	f000 f94b 	bl	801f27e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE10_M_insert_ISG_NSM_11_Alloc_nodeEEESt17_Rb_tree_iteratorISG_EPSt18_Rb_tree_node_baseSS_OT_RT0_>
 801efe8:	4603      	mov	r3, r0
 801efea:	623b      	str	r3, [r7, #32]
		      true);
 801efec:	2301      	movs	r3, #1
 801efee:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 801eff2:	f107 0227 	add.w	r2, r7, #39	; 0x27
 801eff6:	f107 0320 	add.w	r3, r7, #32
 801effa:	4619      	mov	r1, r3
 801effc:	68f8      	ldr	r0, [r7, #12]
 801effe:	f000 f987 	bl	801f310 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEbEC1ISH_bLb1EEEOT_OT0_>
 801f002:	e011      	b.n	801f028 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE16_M_insert_uniqueISG_EES6_ISt17_Rb_tree_iteratorISG_EbEOT_+0x96>
      return _Res(iterator(__res.first), false);
 801f004:	697a      	ldr	r2, [r7, #20]
 801f006:	f107 0328 	add.w	r3, r7, #40	; 0x28
 801f00a:	4611      	mov	r1, r2
 801f00c:	4618      	mov	r0, r3
 801f00e:	f7ef fa79 	bl	800e504 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEC1EPSt18_Rb_tree_node_base>
 801f012:	2300      	movs	r3, #0
 801f014:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
 801f018:	f107 022f 	add.w	r2, r7, #47	; 0x2f
 801f01c:	f107 0328 	add.w	r3, r7, #40	; 0x28
 801f020:	4619      	mov	r1, r3
 801f022:	68f8      	ldr	r0, [r7, #12]
 801f024:	f000 f974 	bl	801f310 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEbEC1ISH_bLb1EEEOT_OT0_>
    }
 801f028:	68f8      	ldr	r0, [r7, #12]
 801f02a:	3730      	adds	r7, #48	; 0x30
 801f02c:	46bd      	mov	sp, r7
 801f02e:	bdb0      	pop	{r4, r5, r7, pc}

0801f030 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEC1Ev>:
 801f030:	b580      	push	{r7, lr}
 801f032:	b082      	sub	sp, #8
 801f034:	af00      	add	r7, sp, #0
 801f036:	6078      	str	r0, [r7, #4]
 801f038:	6878      	ldr	r0, [r7, #4]
 801f03a:	f000 f982 	bl	801f342 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEC1Ev>
 801f03e:	687b      	ldr	r3, [r7, #4]
 801f040:	4618      	mov	r0, r3
 801f042:	3708      	adds	r7, #8
 801f044:	46bd      	mov	sp, r7
 801f046:	bd80      	pop	{r7, pc}

0801f048 <_ZSt7forwardIRA2_KcEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801f048:	b480      	push	{r7}
 801f04a:	b083      	sub	sp, #12
 801f04c:	af00      	add	r7, sp, #0
 801f04e:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801f050:	687b      	ldr	r3, [r7, #4]
 801f052:	4618      	mov	r0, r3
 801f054:	370c      	adds	r7, #12
 801f056:	46bd      	mov	sp, r7
 801f058:	f85d 7b04 	ldr.w	r7, [sp], #4
 801f05c:	4770      	bx	lr

0801f05e <_ZSt4moveIRSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEONSt16remove_referenceIT_E4typeEOSC_>:
    move(_Tp&& __t) noexcept
 801f05e:	b480      	push	{r7}
 801f060:	b083      	sub	sp, #12
 801f062:	af00      	add	r7, sp, #0
 801f064:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 801f066:	687b      	ldr	r3, [r7, #4]
 801f068:	4618      	mov	r0, r3
 801f06a:	370c      	adds	r7, #12
 801f06c:	46bd      	mov	sp, r7
 801f06e:	f85d 7b04 	ldr.w	r7, [sp], #4
 801f072:	4770      	bx	lr

0801f074 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE16_M_insert_uniqueIS9_EES6_ISt17_Rb_tree_iteratorIS9_EbEOT_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 801f074:	b5b0      	push	{r4, r5, r7, lr}
 801f076:	b08e      	sub	sp, #56	; 0x38
 801f078:	af02      	add	r7, sp, #8
 801f07a:	60f8      	str	r0, [r7, #12]
 801f07c:	60b9      	str	r1, [r7, #8]
 801f07e:	607a      	str	r2, [r7, #4]
	= _M_get_insert_unique_pos(_KeyOfValue()(__v));
 801f080:	f107 031c 	add.w	r3, r7, #28
 801f084:	6879      	ldr	r1, [r7, #4]
 801f086:	4618      	mov	r0, r3
 801f088:	f000 f966 	bl	801f358 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEclERS9_>
 801f08c:	4602      	mov	r2, r0
      pair<_Base_ptr, _Base_ptr> __res
 801f08e:	f107 0314 	add.w	r3, r7, #20
 801f092:	68b9      	ldr	r1, [r7, #8]
 801f094:	4618      	mov	r0, r3
 801f096:	f7fa f985 	bl	80193a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_>
      if (__res.second)
 801f09a:	69bb      	ldr	r3, [r7, #24]
 801f09c:	2b00      	cmp	r3, #0
 801f09e:	d022      	beq.n	801f0e6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE16_M_insert_uniqueIS9_EES6_ISt17_Rb_tree_iteratorIS9_EbEOT_+0x72>
	  _Alloc_node __an(*this);
 801f0a0:	f107 0310 	add.w	r3, r7, #16
 801f0a4:	68b9      	ldr	r1, [r7, #8]
 801f0a6:	4618      	mov	r0, r3
 801f0a8:	f000 f962 	bl	801f370 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_Alloc_nodeC1ERSF_>
	  return _Res(_M_insert_(__res.first, __res.second,
 801f0ac:	697c      	ldr	r4, [r7, #20]
 801f0ae:	69bd      	ldr	r5, [r7, #24]
 801f0b0:	6878      	ldr	r0, [r7, #4]
 801f0b2:	f000 f96c 	bl	801f38e <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEOT_RNSt16remove_referenceISA_E4typeE>
 801f0b6:	4602      	mov	r2, r0
 801f0b8:	f107 0310 	add.w	r3, r7, #16
 801f0bc:	9300      	str	r3, [sp, #0]
 801f0be:	4613      	mov	r3, r2
 801f0c0:	462a      	mov	r2, r5
 801f0c2:	4621      	mov	r1, r4
 801f0c4:	68b8      	ldr	r0, [r7, #8]
 801f0c6:	f000 f96d 	bl	801f3a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE10_M_insert_IS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_EPSt18_Rb_tree_node_baseSL_OT_RT0_>
 801f0ca:	4603      	mov	r3, r0
 801f0cc:	623b      	str	r3, [r7, #32]
		      true);
 801f0ce:	2301      	movs	r3, #1
 801f0d0:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 801f0d4:	f107 0227 	add.w	r2, r7, #39	; 0x27
 801f0d8:	f107 0320 	add.w	r3, r7, #32
 801f0dc:	4619      	mov	r1, r3
 801f0de:	68f8      	ldr	r0, [r7, #12]
 801f0e0:	f000 f9a9 	bl	801f436 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEbEC1ISA_bLb1EEEOT_OT0_>
 801f0e4:	e011      	b.n	801f10a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE16_M_insert_uniqueIS9_EES6_ISt17_Rb_tree_iteratorIS9_EbEOT_+0x96>
      return _Res(iterator(__res.first), false);
 801f0e6:	697a      	ldr	r2, [r7, #20]
 801f0e8:	f107 0328 	add.w	r3, r7, #40	; 0x28
 801f0ec:	4611      	mov	r1, r2
 801f0ee:	4618      	mov	r0, r3
 801f0f0:	f7f9 feae 	bl	8018e50 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEC1EPSt18_Rb_tree_node_base>
 801f0f4:	2300      	movs	r3, #0
 801f0f6:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
 801f0fa:	f107 022f 	add.w	r2, r7, #47	; 0x2f
 801f0fe:	f107 0328 	add.w	r3, r7, #40	; 0x28
 801f102:	4619      	mov	r1, r3
 801f104:	68f8      	ldr	r0, [r7, #12]
 801f106:	f000 f996 	bl	801f436 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEbEC1ISA_bLb1EEEOT_OT0_>
    }
 801f10a:	68f8      	ldr	r0, [r7, #12]
 801f10c:	3730      	adds	r7, #48	; 0x30
 801f10e:	46bd      	mov	sp, r7
 801f110:	bdb0      	pop	{r4, r5, r7, pc}

0801f112 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISD_EEEEEEC1Ev>:
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 801f112:	b480      	push	{r7}
 801f114:	b083      	sub	sp, #12
 801f116:	af00      	add	r7, sp, #0
 801f118:	6078      	str	r0, [r7, #4]
 801f11a:	687b      	ldr	r3, [r7, #4]
 801f11c:	4618      	mov	r0, r3
 801f11e:	370c      	adds	r7, #12
 801f120:	46bd      	mov	sp, r7
 801f122:	f85d 7b04 	ldr.w	r7, [sp], #4
 801f126:	4770      	bx	lr

0801f128 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 801f128:	b590      	push	{r4, r7, lr}
 801f12a:	b08b      	sub	sp, #44	; 0x2c
 801f12c:	af00      	add	r7, sp, #0
 801f12e:	60f8      	str	r0, [r7, #12]
 801f130:	60b9      	str	r1, [r7, #8]
 801f132:	607a      	str	r2, [r7, #4]
      _Link_type __x = _M_begin();
 801f134:	68b8      	ldr	r0, [r7, #8]
 801f136:	f7ef f83d 	bl	800e1b4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_M_beginEv>
 801f13a:	4603      	mov	r3, r0
 801f13c:	61bb      	str	r3, [r7, #24]
      _Base_ptr __y = _M_end();
 801f13e:	68b8      	ldr	r0, [r7, #8]
 801f140:	f7ef f983 	bl	800e44a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE6_M_endEv>
 801f144:	4603      	mov	r3, r0
 801f146:	617b      	str	r3, [r7, #20]
      bool __comp = true;
 801f148:	2301      	movs	r3, #1
 801f14a:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
      while (__x != 0)
 801f14e:	69bb      	ldr	r3, [r7, #24]
 801f150:	2b00      	cmp	r3, #0
 801f152:	d020      	beq.n	801f196 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0x6e>
	  __y = __x;
 801f154:	69bb      	ldr	r3, [r7, #24]
 801f156:	617b      	str	r3, [r7, #20]
	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
 801f158:	68bc      	ldr	r4, [r7, #8]
 801f15a:	69bb      	ldr	r3, [r7, #24]
 801f15c:	4618      	mov	r0, r3
 801f15e:	f7ef fa9a 	bl	800e696 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE6_S_keyEPKSt13_Rb_tree_nodeISG_E>
 801f162:	4603      	mov	r3, r0
 801f164:	461a      	mov	r2, r3
 801f166:	6879      	ldr	r1, [r7, #4]
 801f168:	4620      	mov	r0, r4
 801f16a:	f7e6 fa9f 	bl	80056ac <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 801f16e:	4603      	mov	r3, r0
 801f170:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
	  __x = __comp ? _S_left(__x) : _S_right(__x);
 801f174:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 801f178:	2b00      	cmp	r3, #0
 801f17a:	d005      	beq.n	801f188 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0x60>
 801f17c:	69bb      	ldr	r3, [r7, #24]
 801f17e:	4618      	mov	r0, r3
 801f180:	f7ef f946 	bl	800e410 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE7_S_leftEPSt18_Rb_tree_node_base>
 801f184:	4603      	mov	r3, r0
 801f186:	e004      	b.n	801f192 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0x6a>
 801f188:	69bb      	ldr	r3, [r7, #24]
 801f18a:	4618      	mov	r0, r3
 801f18c:	f7ef f934 	bl	800e3f8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_S_rightEPSt18_Rb_tree_node_base>
 801f190:	4603      	mov	r3, r0
 801f192:	61bb      	str	r3, [r7, #24]
      while (__x != 0)
 801f194:	e7db      	b.n	801f14e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0x26>
      iterator __j = iterator(__y);
 801f196:	697a      	ldr	r2, [r7, #20]
 801f198:	f107 0310 	add.w	r3, r7, #16
 801f19c:	4611      	mov	r1, r2
 801f19e:	4618      	mov	r0, r3
 801f1a0:	f7ef f9b0 	bl	800e504 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEC1EPSt18_Rb_tree_node_base>
      if (__comp)
 801f1a4:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 801f1a8:	2b00      	cmp	r3, #0
 801f1aa:	d01d      	beq.n	801f1e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0xc0>
	  if (__j == begin())
 801f1ac:	68b8      	ldr	r0, [r7, #8]
 801f1ae:	f000 f95b 	bl	801f468 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE5beginEv>
 801f1b2:	4603      	mov	r3, r0
 801f1b4:	61fb      	str	r3, [r7, #28]
 801f1b6:	f107 021c 	add.w	r2, r7, #28
 801f1ba:	f107 0310 	add.w	r3, r7, #16
 801f1be:	4611      	mov	r1, r2
 801f1c0:	4618      	mov	r0, r3
 801f1c2:	f7ef f97f 	bl	800e4c4 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEESJ_>
 801f1c6:	4603      	mov	r3, r0
 801f1c8:	2b00      	cmp	r3, #0
 801f1ca:	d008      	beq.n	801f1de <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0xb6>
	    return _Res(__x, __y);
 801f1cc:	f107 0214 	add.w	r2, r7, #20
 801f1d0:	f107 0318 	add.w	r3, r7, #24
 801f1d4:	4619      	mov	r1, r3
 801f1d6:	68f8      	ldr	r0, [r7, #12]
 801f1d8:	f000 f957 	bl	801f48a <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISF_EEEEERS1_Lb1EEEOT_OT0_>
 801f1dc:	e025      	b.n	801f22a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0x102>
	    --__j;
 801f1de:	f107 0310 	add.w	r3, r7, #16
 801f1e2:	4618      	mov	r0, r3
 801f1e4:	f000 f96a 	bl	801f4bc <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEmmEv>
      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
 801f1e8:	68bc      	ldr	r4, [r7, #8]
 801f1ea:	693b      	ldr	r3, [r7, #16]
 801f1ec:	4618      	mov	r0, r3
 801f1ee:	f7ef f97d 	bl	800e4ec <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE6_S_keyEPKSt18_Rb_tree_node_base>
 801f1f2:	4603      	mov	r3, r0
 801f1f4:	687a      	ldr	r2, [r7, #4]
 801f1f6:	4619      	mov	r1, r3
 801f1f8:	4620      	mov	r0, r4
 801f1fa:	f7e6 fa57 	bl	80056ac <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 801f1fe:	4603      	mov	r3, r0
 801f200:	2b00      	cmp	r3, #0
 801f202:	d008      	beq.n	801f216 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0xee>
	return _Res(__x, __y);
 801f204:	f107 0214 	add.w	r2, r7, #20
 801f208:	f107 0318 	add.w	r3, r7, #24
 801f20c:	4619      	mov	r1, r3
 801f20e:	68f8      	ldr	r0, [r7, #12]
 801f210:	f000 f93b 	bl	801f48a <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISF_EEEEERS1_Lb1EEEOT_OT0_>
 801f214:	e009      	b.n	801f22a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0x102>
      return _Res(__j._M_node, 0);
 801f216:	2300      	movs	r3, #0
 801f218:	623b      	str	r3, [r7, #32]
 801f21a:	f107 0220 	add.w	r2, r7, #32
 801f21e:	f107 0310 	add.w	r3, r7, #16
 801f222:	4619      	mov	r1, r3
 801f224:	68f8      	ldr	r0, [r7, #12]
 801f226:	f7e6 f9a3 	bl	8005570 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_>
    }
 801f22a:	68f8      	ldr	r0, [r7, #12]
 801f22c:	372c      	adds	r7, #44	; 0x2c
 801f22e:	46bd      	mov	sp, r7
 801f230:	bd90      	pop	{r4, r7, pc}

0801f232 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEclERSG_>:
      operator()(_Pair& __x) const
 801f232:	b480      	push	{r7}
 801f234:	b083      	sub	sp, #12
 801f236:	af00      	add	r7, sp, #0
 801f238:	6078      	str	r0, [r7, #4]
 801f23a:	6039      	str	r1, [r7, #0]
      { return __x.first; }
 801f23c:	683b      	ldr	r3, [r7, #0]
 801f23e:	4618      	mov	r0, r3
 801f240:	370c      	adds	r7, #12
 801f242:	46bd      	mov	sp, r7
 801f244:	f85d 7b04 	ldr.w	r7, [sp], #4
 801f248:	4770      	bx	lr

0801f24a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE11_Alloc_nodeC1ERSM_>:
	_Alloc_node(_Rb_tree& __t)
 801f24a:	b480      	push	{r7}
 801f24c:	b083      	sub	sp, #12
 801f24e:	af00      	add	r7, sp, #0
 801f250:	6078      	str	r0, [r7, #4]
 801f252:	6039      	str	r1, [r7, #0]
	: _M_t(__t) { }
 801f254:	687b      	ldr	r3, [r7, #4]
 801f256:	683a      	ldr	r2, [r7, #0]
 801f258:	601a      	str	r2, [r3, #0]
 801f25a:	687b      	ldr	r3, [r7, #4]
 801f25c:	4618      	mov	r0, r3
 801f25e:	370c      	adds	r7, #12
 801f260:	46bd      	mov	sp, r7
 801f262:	f85d 7b04 	ldr.w	r7, [sp], #4
 801f266:	4770      	bx	lr

0801f268 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEOT_RNSt16remove_referenceISH_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801f268:	b480      	push	{r7}
 801f26a:	b083      	sub	sp, #12
 801f26c:	af00      	add	r7, sp, #0
 801f26e:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801f270:	687b      	ldr	r3, [r7, #4]
 801f272:	4618      	mov	r0, r3
 801f274:	370c      	adds	r7, #12
 801f276:	46bd      	mov	sp, r7
 801f278:	f85d 7b04 	ldr.w	r7, [sp], #4
 801f27c:	4770      	bx	lr

0801f27e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE10_M_insert_ISG_NSM_11_Alloc_nodeEEESt17_Rb_tree_iteratorISG_EPSt18_Rb_tree_node_baseSS_OT_RT0_>:
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 801f27e:	b5b0      	push	{r4, r5, r7, lr}
 801f280:	b088      	sub	sp, #32
 801f282:	af00      	add	r7, sp, #0
 801f284:	60f8      	str	r0, [r7, #12]
 801f286:	60b9      	str	r1, [r7, #8]
 801f288:	607a      	str	r2, [r7, #4]
 801f28a:	603b      	str	r3, [r7, #0]
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
 801f28c:	68bb      	ldr	r3, [r7, #8]
 801f28e:	2b00      	cmp	r3, #0
 801f290:	d11a      	bne.n	801f2c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE10_M_insert_ISG_NSM_11_Alloc_nodeEEESt17_Rb_tree_iteratorISG_EPSt18_Rb_tree_node_baseSS_OT_RT0_+0x4a>
	bool __insert_left = (__x != 0 || __p == _M_end()
 801f292:	68f8      	ldr	r0, [r7, #12]
 801f294:	f7ef f8d9 	bl	800e44a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE6_M_endEv>
 801f298:	4602      	mov	r2, r0
 801f29a:	687b      	ldr	r3, [r7, #4]
 801f29c:	4293      	cmp	r3, r2
 801f29e:	d013      	beq.n	801f2c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE10_M_insert_ISG_NSM_11_Alloc_nodeEEESt17_Rb_tree_iteratorISG_EPSt18_Rb_tree_node_baseSS_OT_RT0_+0x4a>
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
 801f2a0:	68fc      	ldr	r4, [r7, #12]
 801f2a2:	f107 0310 	add.w	r3, r7, #16
 801f2a6:	6839      	ldr	r1, [r7, #0]
 801f2a8:	4618      	mov	r0, r3
 801f2aa:	f7ff ffc2 	bl	801f232 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEclERSG_>
 801f2ae:	4605      	mov	r5, r0
 801f2b0:	6878      	ldr	r0, [r7, #4]
 801f2b2:	f7ef f91b 	bl	800e4ec <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE6_S_keyEPKSt18_Rb_tree_node_base>
 801f2b6:	4603      	mov	r3, r0
 801f2b8:	461a      	mov	r2, r3
 801f2ba:	4629      	mov	r1, r5
 801f2bc:	4620      	mov	r0, r4
 801f2be:	f7e6 f9f5 	bl	80056ac <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 801f2c2:	4603      	mov	r3, r0
 801f2c4:	2b00      	cmp	r3, #0
 801f2c6:	d001      	beq.n	801f2cc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE10_M_insert_ISG_NSM_11_Alloc_nodeEEESt17_Rb_tree_iteratorISG_EPSt18_Rb_tree_node_baseSS_OT_RT0_+0x4e>
 801f2c8:	2301      	movs	r3, #1
 801f2ca:	e000      	b.n	801f2ce <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE10_M_insert_ISG_NSM_11_Alloc_nodeEEESt17_Rb_tree_iteratorISG_EPSt18_Rb_tree_node_baseSS_OT_RT0_+0x50>
 801f2cc:	2300      	movs	r3, #0
	bool __insert_left = (__x != 0 || __p == _M_end()
 801f2ce:	77fb      	strb	r3, [r7, #31]
	_Link_type __z = __node_gen(_GLIBCXX_FORWARD(_Arg, __v));
 801f2d0:	6838      	ldr	r0, [r7, #0]
 801f2d2:	f7ff ffc9 	bl	801f268 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEOT_RNSt16remove_referenceISH_E4typeE>
 801f2d6:	4603      	mov	r3, r0
 801f2d8:	4619      	mov	r1, r3
 801f2da:	6b38      	ldr	r0, [r7, #48]	; 0x30
 801f2dc:	f000 f8ff 	bl	801f4de <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE11_Alloc_nodeclISG_EEPSt13_Rb_tree_nodeISG_EOT_>
 801f2e0:	61b8      	str	r0, [r7, #24]
				      this->_M_impl._M_header);
 801f2e2:	68fb      	ldr	r3, [r7, #12]
 801f2e4:	3304      	adds	r3, #4
	_Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
 801f2e6:	7ff8      	ldrb	r0, [r7, #31]
 801f2e8:	687a      	ldr	r2, [r7, #4]
 801f2ea:	69b9      	ldr	r1, [r7, #24]
 801f2ec:	f003 fb04 	bl	80228f8 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
	++_M_impl._M_node_count;
 801f2f0:	68fb      	ldr	r3, [r7, #12]
 801f2f2:	695b      	ldr	r3, [r3, #20]
 801f2f4:	1c5a      	adds	r2, r3, #1
 801f2f6:	68fb      	ldr	r3, [r7, #12]
 801f2f8:	615a      	str	r2, [r3, #20]
	return iterator(__z);
 801f2fa:	f107 0314 	add.w	r3, r7, #20
 801f2fe:	69b9      	ldr	r1, [r7, #24]
 801f300:	4618      	mov	r0, r3
 801f302:	f7ef f8ff 	bl	800e504 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEC1EPSt18_Rb_tree_node_base>
 801f306:	697b      	ldr	r3, [r7, #20]
      }
 801f308:	4618      	mov	r0, r3
 801f30a:	3720      	adds	r7, #32
 801f30c:	46bd      	mov	sp, r7
 801f30e:	bdb0      	pop	{r4, r5, r7, pc}

0801f310 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEbEC1ISH_bLb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 801f310:	b580      	push	{r7, lr}
 801f312:	b084      	sub	sp, #16
 801f314:	af00      	add	r7, sp, #0
 801f316:	60f8      	str	r0, [r7, #12]
 801f318:	60b9      	str	r1, [r7, #8]
 801f31a:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 801f31c:	68b8      	ldr	r0, [r7, #8]
 801f31e:	f000 f8f2 	bl	801f506 <_ZSt7forwardISt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEEEOT_RNSt16remove_referenceISJ_E4typeE>
 801f322:	4602      	mov	r2, r0
 801f324:	68fb      	ldr	r3, [r7, #12]
 801f326:	6812      	ldr	r2, [r2, #0]
 801f328:	601a      	str	r2, [r3, #0]
 801f32a:	6878      	ldr	r0, [r7, #4]
 801f32c:	f7e9 f9e2 	bl	80086f4 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
 801f330:	4603      	mov	r3, r0
 801f332:	781a      	ldrb	r2, [r3, #0]
 801f334:	68fb      	ldr	r3, [r7, #12]
 801f336:	711a      	strb	r2, [r3, #4]
 801f338:	68fb      	ldr	r3, [r7, #12]
 801f33a:	4618      	mov	r0, r3
 801f33c:	3710      	adds	r7, #16
 801f33e:	46bd      	mov	sp, r7
 801f340:	bd80      	pop	{r7, pc}

0801f342 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEC1Ev>:
 801f342:	b480      	push	{r7}
 801f344:	b083      	sub	sp, #12
 801f346:	af00      	add	r7, sp, #0
 801f348:	6078      	str	r0, [r7, #4]
 801f34a:	687b      	ldr	r3, [r7, #4]
 801f34c:	4618      	mov	r0, r3
 801f34e:	370c      	adds	r7, #12
 801f350:	46bd      	mov	sp, r7
 801f352:	f85d 7b04 	ldr.w	r7, [sp], #4
 801f356:	4770      	bx	lr

0801f358 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEclERS9_>:
      operator()(_Pair& __x) const
 801f358:	b480      	push	{r7}
 801f35a:	b083      	sub	sp, #12
 801f35c:	af00      	add	r7, sp, #0
 801f35e:	6078      	str	r0, [r7, #4]
 801f360:	6039      	str	r1, [r7, #0]
      { return __x.first; }
 801f362:	683b      	ldr	r3, [r7, #0]
 801f364:	4618      	mov	r0, r3
 801f366:	370c      	adds	r7, #12
 801f368:	46bd      	mov	sp, r7
 801f36a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801f36e:	4770      	bx	lr

0801f370 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_Alloc_nodeC1ERSF_>:
	_Alloc_node(_Rb_tree& __t)
 801f370:	b480      	push	{r7}
 801f372:	b083      	sub	sp, #12
 801f374:	af00      	add	r7, sp, #0
 801f376:	6078      	str	r0, [r7, #4]
 801f378:	6039      	str	r1, [r7, #0]
	: _M_t(__t) { }
 801f37a:	687b      	ldr	r3, [r7, #4]
 801f37c:	683a      	ldr	r2, [r7, #0]
 801f37e:	601a      	str	r2, [r3, #0]
 801f380:	687b      	ldr	r3, [r7, #4]
 801f382:	4618      	mov	r0, r3
 801f384:	370c      	adds	r7, #12
 801f386:	46bd      	mov	sp, r7
 801f388:	f85d 7b04 	ldr.w	r7, [sp], #4
 801f38c:	4770      	bx	lr

0801f38e <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEOT_RNSt16remove_referenceISA_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801f38e:	b480      	push	{r7}
 801f390:	b083      	sub	sp, #12
 801f392:	af00      	add	r7, sp, #0
 801f394:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801f396:	687b      	ldr	r3, [r7, #4]
 801f398:	4618      	mov	r0, r3
 801f39a:	370c      	adds	r7, #12
 801f39c:	46bd      	mov	sp, r7
 801f39e:	f85d 7b04 	ldr.w	r7, [sp], #4
 801f3a2:	4770      	bx	lr

0801f3a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE10_M_insert_IS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_EPSt18_Rb_tree_node_baseSL_OT_RT0_>:
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 801f3a4:	b5b0      	push	{r4, r5, r7, lr}
 801f3a6:	b088      	sub	sp, #32
 801f3a8:	af00      	add	r7, sp, #0
 801f3aa:	60f8      	str	r0, [r7, #12]
 801f3ac:	60b9      	str	r1, [r7, #8]
 801f3ae:	607a      	str	r2, [r7, #4]
 801f3b0:	603b      	str	r3, [r7, #0]
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
 801f3b2:	68bb      	ldr	r3, [r7, #8]
 801f3b4:	2b00      	cmp	r3, #0
 801f3b6:	d11a      	bne.n	801f3ee <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE10_M_insert_IS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_EPSt18_Rb_tree_node_baseSL_OT_RT0_+0x4a>
	bool __insert_left = (__x != 0 || __p == _M_end()
 801f3b8:	68f8      	ldr	r0, [r7, #12]
 801f3ba:	f7f9 fd00 	bl	8018dbe <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_M_endEv>
 801f3be:	4602      	mov	r2, r0
 801f3c0:	687b      	ldr	r3, [r7, #4]
 801f3c2:	4293      	cmp	r3, r2
 801f3c4:	d013      	beq.n	801f3ee <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE10_M_insert_IS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_EPSt18_Rb_tree_node_baseSL_OT_RT0_+0x4a>
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
 801f3c6:	68fc      	ldr	r4, [r7, #12]
 801f3c8:	f107 0310 	add.w	r3, r7, #16
 801f3cc:	6839      	ldr	r1, [r7, #0]
 801f3ce:	4618      	mov	r0, r3
 801f3d0:	f7ff ffc2 	bl	801f358 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEclERS9_>
 801f3d4:	4605      	mov	r5, r0
 801f3d6:	6878      	ldr	r0, [r7, #4]
 801f3d8:	f7f9 fd2e 	bl	8018e38 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 801f3dc:	4603      	mov	r3, r0
 801f3de:	461a      	mov	r2, r3
 801f3e0:	4629      	mov	r1, r5
 801f3e2:	4620      	mov	r0, r4
 801f3e4:	f7e6 f962 	bl	80056ac <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 801f3e8:	4603      	mov	r3, r0
 801f3ea:	2b00      	cmp	r3, #0
 801f3ec:	d001      	beq.n	801f3f2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE10_M_insert_IS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_EPSt18_Rb_tree_node_baseSL_OT_RT0_+0x4e>
 801f3ee:	2301      	movs	r3, #1
 801f3f0:	e000      	b.n	801f3f4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE10_M_insert_IS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_EPSt18_Rb_tree_node_baseSL_OT_RT0_+0x50>
 801f3f2:	2300      	movs	r3, #0
	bool __insert_left = (__x != 0 || __p == _M_end()
 801f3f4:	77fb      	strb	r3, [r7, #31]
	_Link_type __z = __node_gen(_GLIBCXX_FORWARD(_Arg, __v));
 801f3f6:	6838      	ldr	r0, [r7, #0]
 801f3f8:	f7ff ffc9 	bl	801f38e <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEOT_RNSt16remove_referenceISA_E4typeE>
 801f3fc:	4603      	mov	r3, r0
 801f3fe:	4619      	mov	r1, r3
 801f400:	6b38      	ldr	r0, [r7, #48]	; 0x30
 801f402:	f000 f88b 	bl	801f51c <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_Alloc_nodeclIS9_EEPSt13_Rb_tree_nodeIS9_EOT_>
 801f406:	61b8      	str	r0, [r7, #24]
				      this->_M_impl._M_header);
 801f408:	68fb      	ldr	r3, [r7, #12]
 801f40a:	3304      	adds	r3, #4
	_Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
 801f40c:	7ff8      	ldrb	r0, [r7, #31]
 801f40e:	687a      	ldr	r2, [r7, #4]
 801f410:	69b9      	ldr	r1, [r7, #24]
 801f412:	f003 fa71 	bl	80228f8 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
	++_M_impl._M_node_count;
 801f416:	68fb      	ldr	r3, [r7, #12]
 801f418:	695b      	ldr	r3, [r3, #20]
 801f41a:	1c5a      	adds	r2, r3, #1
 801f41c:	68fb      	ldr	r3, [r7, #12]
 801f41e:	615a      	str	r2, [r3, #20]
	return iterator(__z);
 801f420:	f107 0314 	add.w	r3, r7, #20
 801f424:	69b9      	ldr	r1, [r7, #24]
 801f426:	4618      	mov	r0, r3
 801f428:	f7f9 fd12 	bl	8018e50 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEC1EPSt18_Rb_tree_node_base>
 801f42c:	697b      	ldr	r3, [r7, #20]
      }
 801f42e:	4618      	mov	r0, r3
 801f430:	3720      	adds	r7, #32
 801f432:	46bd      	mov	sp, r7
 801f434:	bdb0      	pop	{r4, r5, r7, pc}

0801f436 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEbEC1ISA_bLb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 801f436:	b580      	push	{r7, lr}
 801f438:	b084      	sub	sp, #16
 801f43a:	af00      	add	r7, sp, #0
 801f43c:	60f8      	str	r0, [r7, #12]
 801f43e:	60b9      	str	r1, [r7, #8]
 801f440:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 801f442:	68b8      	ldr	r0, [r7, #8]
 801f444:	f000 f87e 	bl	801f544 <_ZSt7forwardISt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEOT_RNSt16remove_referenceISC_E4typeE>
 801f448:	4602      	mov	r2, r0
 801f44a:	68fb      	ldr	r3, [r7, #12]
 801f44c:	6812      	ldr	r2, [r2, #0]
 801f44e:	601a      	str	r2, [r3, #0]
 801f450:	6878      	ldr	r0, [r7, #4]
 801f452:	f7e9 f94f 	bl	80086f4 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
 801f456:	4603      	mov	r3, r0
 801f458:	781a      	ldrb	r2, [r3, #0]
 801f45a:	68fb      	ldr	r3, [r7, #12]
 801f45c:	711a      	strb	r2, [r3, #4]
 801f45e:	68fb      	ldr	r3, [r7, #12]
 801f460:	4618      	mov	r0, r3
 801f462:	3710      	adds	r7, #16
 801f464:	46bd      	mov	sp, r7
 801f466:	bd80      	pop	{r7, pc}

0801f468 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 801f468:	b580      	push	{r7, lr}
 801f46a:	b084      	sub	sp, #16
 801f46c:	af00      	add	r7, sp, #0
 801f46e:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_header._M_left); }
 801f470:	687b      	ldr	r3, [r7, #4]
 801f472:	68da      	ldr	r2, [r3, #12]
 801f474:	f107 030c 	add.w	r3, r7, #12
 801f478:	4611      	mov	r1, r2
 801f47a:	4618      	mov	r0, r3
 801f47c:	f7ef f842 	bl	800e504 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEC1EPSt18_Rb_tree_node_base>
 801f480:	68fb      	ldr	r3, [r7, #12]
 801f482:	4618      	mov	r0, r3
 801f484:	3710      	adds	r7, #16
 801f486:	46bd      	mov	sp, r7
 801f488:	bd80      	pop	{r7, pc}

0801f48a <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISF_EEEEERS1_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 801f48a:	b580      	push	{r7, lr}
 801f48c:	b084      	sub	sp, #16
 801f48e:	af00      	add	r7, sp, #0
 801f490:	60f8      	str	r0, [r7, #12]
 801f492:	60b9      	str	r1, [r7, #8]
 801f494:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 801f496:	68b8      	ldr	r0, [r7, #8]
 801f498:	f000 f85f 	bl	801f55a <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEEEOT_RNSt16remove_referenceISL_E4typeE>
 801f49c:	4603      	mov	r3, r0
 801f49e:	681a      	ldr	r2, [r3, #0]
 801f4a0:	68fb      	ldr	r3, [r7, #12]
 801f4a2:	601a      	str	r2, [r3, #0]
 801f4a4:	6878      	ldr	r0, [r7, #4]
 801f4a6:	f7e6 ffd2 	bl	800644e <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
 801f4aa:	4603      	mov	r3, r0
 801f4ac:	681a      	ldr	r2, [r3, #0]
 801f4ae:	68fb      	ldr	r3, [r7, #12]
 801f4b0:	605a      	str	r2, [r3, #4]
 801f4b2:	68fb      	ldr	r3, [r7, #12]
 801f4b4:	4618      	mov	r0, r3
 801f4b6:	3710      	adds	r7, #16
 801f4b8:	46bd      	mov	sp, r7
 801f4ba:	bd80      	pop	{r7, pc}

0801f4bc <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEmmEv>:
      operator--() _GLIBCXX_NOEXCEPT
 801f4bc:	b580      	push	{r7, lr}
 801f4be:	b082      	sub	sp, #8
 801f4c0:	af00      	add	r7, sp, #0
 801f4c2:	6078      	str	r0, [r7, #4]
	_M_node = _Rb_tree_decrement(_M_node);
 801f4c4:	687b      	ldr	r3, [r7, #4]
 801f4c6:	681b      	ldr	r3, [r3, #0]
 801f4c8:	4618      	mov	r0, r3
 801f4ca:	f003 fa13 	bl	80228f4 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 801f4ce:	4602      	mov	r2, r0
 801f4d0:	687b      	ldr	r3, [r7, #4]
 801f4d2:	601a      	str	r2, [r3, #0]
	return *this;
 801f4d4:	687b      	ldr	r3, [r7, #4]
      }
 801f4d6:	4618      	mov	r0, r3
 801f4d8:	3708      	adds	r7, #8
 801f4da:	46bd      	mov	sp, r7
 801f4dc:	bd80      	pop	{r7, pc}

0801f4de <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE11_Alloc_nodeclISG_EEPSt13_Rb_tree_nodeISG_EOT_>:
	  operator()(_Arg&& __arg) const
 801f4de:	b590      	push	{r4, r7, lr}
 801f4e0:	b083      	sub	sp, #12
 801f4e2:	af00      	add	r7, sp, #0
 801f4e4:	6078      	str	r0, [r7, #4]
 801f4e6:	6039      	str	r1, [r7, #0]
	  { return _M_t._M_create_node(_GLIBCXX_FORWARD(_Arg, __arg)); }
 801f4e8:	687b      	ldr	r3, [r7, #4]
 801f4ea:	681c      	ldr	r4, [r3, #0]
 801f4ec:	6838      	ldr	r0, [r7, #0]
 801f4ee:	f7ff febb 	bl	801f268 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEOT_RNSt16remove_referenceISH_E4typeE>
 801f4f2:	4603      	mov	r3, r0
 801f4f4:	4619      	mov	r1, r3
 801f4f6:	4620      	mov	r0, r4
 801f4f8:	f000 f83a 	bl	801f570 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE14_M_create_nodeIJSG_EEEPSt13_Rb_tree_nodeISG_EDpOT_>
 801f4fc:	4603      	mov	r3, r0
 801f4fe:	4618      	mov	r0, r3
 801f500:	370c      	adds	r7, #12
 801f502:	46bd      	mov	sp, r7
 801f504:	bd90      	pop	{r4, r7, pc}

0801f506 <_ZSt7forwardISt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEEEOT_RNSt16remove_referenceISJ_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801f506:	b480      	push	{r7}
 801f508:	b083      	sub	sp, #12
 801f50a:	af00      	add	r7, sp, #0
 801f50c:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801f50e:	687b      	ldr	r3, [r7, #4]
 801f510:	4618      	mov	r0, r3
 801f512:	370c      	adds	r7, #12
 801f514:	46bd      	mov	sp, r7
 801f516:	f85d 7b04 	ldr.w	r7, [sp], #4
 801f51a:	4770      	bx	lr

0801f51c <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_Alloc_nodeclIS9_EEPSt13_Rb_tree_nodeIS9_EOT_>:
	  operator()(_Arg&& __arg) const
 801f51c:	b590      	push	{r4, r7, lr}
 801f51e:	b083      	sub	sp, #12
 801f520:	af00      	add	r7, sp, #0
 801f522:	6078      	str	r0, [r7, #4]
 801f524:	6039      	str	r1, [r7, #0]
	  { return _M_t._M_create_node(_GLIBCXX_FORWARD(_Arg, __arg)); }
 801f526:	687b      	ldr	r3, [r7, #4]
 801f528:	681c      	ldr	r4, [r3, #0]
 801f52a:	6838      	ldr	r0, [r7, #0]
 801f52c:	f7ff ff2f 	bl	801f38e <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEOT_RNSt16remove_referenceISA_E4typeE>
 801f530:	4603      	mov	r3, r0
 801f532:	4619      	mov	r1, r3
 801f534:	4620      	mov	r0, r4
 801f536:	f000 f832 	bl	801f59e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_create_nodeIJS9_EEEPSt13_Rb_tree_nodeIS9_EDpOT_>
 801f53a:	4603      	mov	r3, r0
 801f53c:	4618      	mov	r0, r3
 801f53e:	370c      	adds	r7, #12
 801f540:	46bd      	mov	sp, r7
 801f542:	bd90      	pop	{r4, r7, pc}

0801f544 <_ZSt7forwardISt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEOT_RNSt16remove_referenceISC_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801f544:	b480      	push	{r7}
 801f546:	b083      	sub	sp, #12
 801f548:	af00      	add	r7, sp, #0
 801f54a:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801f54c:	687b      	ldr	r3, [r7, #4]
 801f54e:	4618      	mov	r0, r3
 801f550:	370c      	adds	r7, #12
 801f552:	46bd      	mov	sp, r7
 801f554:	f85d 7b04 	ldr.w	r7, [sp], #4
 801f558:	4770      	bx	lr

0801f55a <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEEEOT_RNSt16remove_referenceISL_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801f55a:	b480      	push	{r7}
 801f55c:	b083      	sub	sp, #12
 801f55e:	af00      	add	r7, sp, #0
 801f560:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801f562:	687b      	ldr	r3, [r7, #4]
 801f564:	4618      	mov	r0, r3
 801f566:	370c      	adds	r7, #12
 801f568:	46bd      	mov	sp, r7
 801f56a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801f56e:	4770      	bx	lr

0801f570 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE14_M_create_nodeIJSG_EEEPSt13_Rb_tree_nodeISG_EDpOT_>:
	_M_create_node(_Args&&... __args)
 801f570:	b580      	push	{r7, lr}
 801f572:	b084      	sub	sp, #16
 801f574:	af00      	add	r7, sp, #0
 801f576:	6078      	str	r0, [r7, #4]
 801f578:	6039      	str	r1, [r7, #0]
	  _Link_type __tmp = _M_get_node();
 801f57a:	6878      	ldr	r0, [r7, #4]
 801f57c:	f000 f826 	bl	801f5cc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE11_M_get_nodeEv>
 801f580:	60f8      	str	r0, [r7, #12]
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
 801f582:	6838      	ldr	r0, [r7, #0]
 801f584:	f7ff fe70 	bl	801f268 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEOT_RNSt16remove_referenceISH_E4typeE>
 801f588:	4603      	mov	r3, r0
 801f58a:	461a      	mov	r2, r3
 801f58c:	68f9      	ldr	r1, [r7, #12]
 801f58e:	6878      	ldr	r0, [r7, #4]
 801f590:	f000 f82d 	bl	801f5ee <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE17_M_construct_nodeIJSG_EEEvPSt13_Rb_tree_nodeISG_EDpOT_>
	  return __tmp;
 801f594:	68fb      	ldr	r3, [r7, #12]
	}
 801f596:	4618      	mov	r0, r3
 801f598:	3710      	adds	r7, #16
 801f59a:	46bd      	mov	sp, r7
 801f59c:	bd80      	pop	{r7, pc}

0801f59e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_create_nodeIJS9_EEEPSt13_Rb_tree_nodeIS9_EDpOT_>:
	_M_create_node(_Args&&... __args)
 801f59e:	b580      	push	{r7, lr}
 801f5a0:	b084      	sub	sp, #16
 801f5a2:	af00      	add	r7, sp, #0
 801f5a4:	6078      	str	r0, [r7, #4]
 801f5a6:	6039      	str	r1, [r7, #0]
	  _Link_type __tmp = _M_get_node();
 801f5a8:	6878      	ldr	r0, [r7, #4]
 801f5aa:	f7f9 fe94 	bl	80192d6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_get_nodeEv>
 801f5ae:	60f8      	str	r0, [r7, #12]
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
 801f5b0:	6838      	ldr	r0, [r7, #0]
 801f5b2:	f7ff feec 	bl	801f38e <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEOT_RNSt16remove_referenceISA_E4typeE>
 801f5b6:	4603      	mov	r3, r0
 801f5b8:	461a      	mov	r2, r3
 801f5ba:	68f9      	ldr	r1, [r7, #12]
 801f5bc:	6878      	ldr	r0, [r7, #4]
 801f5be:	f000 f836 	bl	801f62e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE17_M_construct_nodeIJS9_EEEvPSt13_Rb_tree_nodeIS9_EDpOT_>
	  return __tmp;
 801f5c2:	68fb      	ldr	r3, [r7, #12]
	}
 801f5c4:	4618      	mov	r0, r3
 801f5c6:	3710      	adds	r7, #16
 801f5c8:	46bd      	mov	sp, r7
 801f5ca:	bd80      	pop	{r7, pc}

0801f5cc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE11_M_get_nodeEv>:
      _M_get_node()
 801f5cc:	b580      	push	{r7, lr}
 801f5ce:	b082      	sub	sp, #8
 801f5d0:	af00      	add	r7, sp, #0
 801f5d2:	6078      	str	r0, [r7, #4]
      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
 801f5d4:	6878      	ldr	r0, [r7, #4]
 801f5d6:	f7ef f8dc 	bl	800e792 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE21_M_get_Node_allocatorEv>
 801f5da:	4603      	mov	r3, r0
 801f5dc:	2101      	movs	r1, #1
 801f5de:	4618      	mov	r0, r3
 801f5e0:	f000 f845 	bl	801f66e <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEEEE8allocateERSJ_j>
 801f5e4:	4603      	mov	r3, r0
 801f5e6:	4618      	mov	r0, r3
 801f5e8:	3708      	adds	r7, #8
 801f5ea:	46bd      	mov	sp, r7
 801f5ec:	bd80      	pop	{r7, pc}

0801f5ee <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE17_M_construct_nodeIJSG_EEEvPSt13_Rb_tree_nodeISG_EDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
 801f5ee:	b5b0      	push	{r4, r5, r7, lr}
 801f5f0:	b084      	sub	sp, #16
 801f5f2:	af00      	add	r7, sp, #0
 801f5f4:	60f8      	str	r0, [r7, #12]
 801f5f6:	60b9      	str	r1, [r7, #8]
 801f5f8:	607a      	str	r2, [r7, #4]
	      ::new(__node) _Rb_tree_node<_Val>;
 801f5fa:	68bb      	ldr	r3, [r7, #8]
 801f5fc:	4619      	mov	r1, r3
 801f5fe:	202c      	movs	r0, #44	; 0x2c
 801f600:	f7e1 fd2b 	bl	800105a <_ZnwjPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
 801f604:	68f8      	ldr	r0, [r7, #12]
 801f606:	f7ef f8c4 	bl	800e792 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE21_M_get_Node_allocatorEv>
 801f60a:	4604      	mov	r4, r0
 801f60c:	68b8      	ldr	r0, [r7, #8]
 801f60e:	f7ee fe2a 	bl	800e266 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEE9_M_valptrEv>
 801f612:	4605      	mov	r5, r0
 801f614:	6878      	ldr	r0, [r7, #4]
 801f616:	f7ff fe27 	bl	801f268 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEOT_RNSt16remove_referenceISH_E4typeE>
 801f61a:	4603      	mov	r3, r0
 801f61c:	461a      	mov	r2, r3
 801f61e:	4629      	mov	r1, r5
 801f620:	4620      	mov	r0, r4
 801f622:	f000 f833 	bl	801f68c <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEEEE9constructISH_JSH_EEEvRSJ_PT_DpOT0_>
	}
 801f626:	bf00      	nop
 801f628:	3710      	adds	r7, #16
 801f62a:	46bd      	mov	sp, r7
 801f62c:	bdb0      	pop	{r4, r5, r7, pc}

0801f62e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE17_M_construct_nodeIJS9_EEEvPSt13_Rb_tree_nodeIS9_EDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
 801f62e:	b5b0      	push	{r4, r5, r7, lr}
 801f630:	b084      	sub	sp, #16
 801f632:	af00      	add	r7, sp, #0
 801f634:	60f8      	str	r0, [r7, #12]
 801f636:	60b9      	str	r1, [r7, #8]
 801f638:	607a      	str	r2, [r7, #4]
	      ::new(__node) _Rb_tree_node<_Val>;
 801f63a:	68bb      	ldr	r3, [r7, #8]
 801f63c:	4619      	mov	r1, r3
 801f63e:	2048      	movs	r0, #72	; 0x48
 801f640:	f7e1 fd0b 	bl	800105a <_ZnwjPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
 801f644:	68f8      	ldr	r0, [r7, #12]
 801f646:	f7f9 ff7a 	bl	801953e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE21_M_get_Node_allocatorEv>
 801f64a:	4604      	mov	r4, r0
 801f64c:	68b8      	ldr	r0, [r7, #8]
 801f64e:	f7f9 faed 	bl	8018c2c <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE9_M_valptrEv>
 801f652:	4605      	mov	r5, r0
 801f654:	6878      	ldr	r0, [r7, #4]
 801f656:	f7ff fe9a 	bl	801f38e <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEOT_RNSt16remove_referenceISA_E4typeE>
 801f65a:	4603      	mov	r3, r0
 801f65c:	461a      	mov	r2, r3
 801f65e:	4629      	mov	r1, r5
 801f660:	4620      	mov	r0, r4
 801f662:	f000 f826 	bl	801f6b2 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEE9constructISA_JSA_EEEvRSC_PT_DpOT0_>
	}
 801f666:	bf00      	nop
 801f668:	3710      	adds	r7, #16
 801f66a:	46bd      	mov	sp, r7
 801f66c:	bdb0      	pop	{r4, r5, r7, pc}

0801f66e <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEEEE8allocateERSJ_j>:
      allocate(allocator_type& __a, size_type __n)
 801f66e:	b580      	push	{r7, lr}
 801f670:	b082      	sub	sp, #8
 801f672:	af00      	add	r7, sp, #0
 801f674:	6078      	str	r0, [r7, #4]
 801f676:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 801f678:	2200      	movs	r2, #0
 801f67a:	6839      	ldr	r1, [r7, #0]
 801f67c:	6878      	ldr	r0, [r7, #4]
 801f67e:	f000 f82b 	bl	801f6d8 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISD_EEEEEE8allocateEjPKv>
 801f682:	4603      	mov	r3, r0
 801f684:	4618      	mov	r0, r3
 801f686:	3708      	adds	r7, #8
 801f688:	46bd      	mov	sp, r7
 801f68a:	bd80      	pop	{r7, pc}

0801f68c <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEEEE9constructISH_JSH_EEEvRSJ_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 801f68c:	b580      	push	{r7, lr}
 801f68e:	b084      	sub	sp, #16
 801f690:	af00      	add	r7, sp, #0
 801f692:	60f8      	str	r0, [r7, #12]
 801f694:	60b9      	str	r1, [r7, #8]
 801f696:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 801f698:	6878      	ldr	r0, [r7, #4]
 801f69a:	f7ff fde5 	bl	801f268 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEOT_RNSt16remove_referenceISH_E4typeE>
 801f69e:	4603      	mov	r3, r0
 801f6a0:	461a      	mov	r2, r3
 801f6a2:	68b9      	ldr	r1, [r7, #8]
 801f6a4:	68f8      	ldr	r0, [r7, #12]
 801f6a6:	f000 f84c 	bl	801f742 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISD_EEEEEE9constructISI_JSI_EEEvPT_DpOT0_>
 801f6aa:	bf00      	nop
 801f6ac:	3710      	adds	r7, #16
 801f6ae:	46bd      	mov	sp, r7
 801f6b0:	bd80      	pop	{r7, pc}

0801f6b2 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEE9constructISA_JSA_EEEvRSC_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 801f6b2:	b580      	push	{r7, lr}
 801f6b4:	b084      	sub	sp, #16
 801f6b6:	af00      	add	r7, sp, #0
 801f6b8:	60f8      	str	r0, [r7, #12]
 801f6ba:	60b9      	str	r1, [r7, #8]
 801f6bc:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 801f6be:	6878      	ldr	r0, [r7, #4]
 801f6c0:	f7ff fe65 	bl	801f38e <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEOT_RNSt16remove_referenceISA_E4typeE>
 801f6c4:	4603      	mov	r3, r0
 801f6c6:	461a      	mov	r2, r3
 801f6c8:	68b9      	ldr	r1, [r7, #8]
 801f6ca:	68f8      	ldr	r0, [r7, #12]
 801f6cc:	f000 f86a 	bl	801f7a4 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE9constructISB_JSB_EEEvPT_DpOT0_>
 801f6d0:	bf00      	nop
 801f6d2:	3710      	adds	r7, #16
 801f6d4:	46bd      	mov	sp, r7
 801f6d6:	bd80      	pop	{r7, pc}

0801f6d8 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISD_EEEEEE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 801f6d8:	b580      	push	{r7, lr}
 801f6da:	b084      	sub	sp, #16
 801f6dc:	af00      	add	r7, sp, #0
 801f6de:	60f8      	str	r0, [r7, #12]
 801f6e0:	60b9      	str	r1, [r7, #8]
 801f6e2:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 801f6e4:	68f8      	ldr	r0, [r7, #12]
 801f6e6:	f000 f875 	bl	801f7d4 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISD_EEEEEE8max_sizeEv>
 801f6ea:	4602      	mov	r2, r0
 801f6ec:	68bb      	ldr	r3, [r7, #8]
 801f6ee:	4293      	cmp	r3, r2
 801f6f0:	bf8c      	ite	hi
 801f6f2:	2301      	movhi	r3, #1
 801f6f4:	2300      	movls	r3, #0
 801f6f6:	b2db      	uxtb	r3, r3
 801f6f8:	2b00      	cmp	r3, #0
 801f6fa:	d001      	beq.n	801f700 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISD_EEEEEE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 801f6fc:	f003 f958 	bl	80229b0 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 801f700:	68bb      	ldr	r3, [r7, #8]
 801f702:	222c      	movs	r2, #44	; 0x2c
 801f704:	fb02 f303 	mul.w	r3, r2, r3
 801f708:	4618      	mov	r0, r3
 801f70a:	f003 f88c 	bl	8022826 <_Znwj>
 801f70e:	4603      	mov	r3, r0
 801f710:	bf00      	nop
      }
 801f712:	4618      	mov	r0, r3
 801f714:	3710      	adds	r7, #16
 801f716:	46bd      	mov	sp, r7
 801f718:	bd80      	pop	{r7, pc}

0801f71a <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISA_EEEEC1EOSF_>:
      constexpr pair(pair&&) = default;
 801f71a:	b580      	push	{r7, lr}
 801f71c:	b082      	sub	sp, #8
 801f71e:	af00      	add	r7, sp, #0
 801f720:	6078      	str	r0, [r7, #4]
 801f722:	6039      	str	r1, [r7, #0]
 801f724:	687b      	ldr	r3, [r7, #4]
 801f726:	683a      	ldr	r2, [r7, #0]
 801f728:	4611      	mov	r1, r2
 801f72a:	4618      	mov	r0, r3
 801f72c:	f003 fcde 	bl	80230ec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 801f730:	683b      	ldr	r3, [r7, #0]
 801f732:	699a      	ldr	r2, [r3, #24]
 801f734:	687b      	ldr	r3, [r7, #4]
 801f736:	619a      	str	r2, [r3, #24]
 801f738:	687b      	ldr	r3, [r7, #4]
 801f73a:	4618      	mov	r0, r3
 801f73c:	3708      	adds	r7, #8
 801f73e:	46bd      	mov	sp, r7
 801f740:	bd80      	pop	{r7, pc}

0801f742 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISD_EEEEEE9constructISI_JSI_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 801f742:	b590      	push	{r4, r7, lr}
 801f744:	b085      	sub	sp, #20
 801f746:	af00      	add	r7, sp, #0
 801f748:	60f8      	str	r0, [r7, #12]
 801f74a:	60b9      	str	r1, [r7, #8]
 801f74c:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 801f74e:	6878      	ldr	r0, [r7, #4]
 801f750:	f7ff fd8a 	bl	801f268 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEOT_RNSt16remove_referenceISH_E4typeE>
 801f754:	4604      	mov	r4, r0
 801f756:	68bb      	ldr	r3, [r7, #8]
 801f758:	4619      	mov	r1, r3
 801f75a:	201c      	movs	r0, #28
 801f75c:	f7e1 fc7d 	bl	800105a <_ZnwjPv>
 801f760:	4603      	mov	r3, r0
 801f762:	4621      	mov	r1, r4
 801f764:	4618      	mov	r0, r3
 801f766:	f7ff ffd8 	bl	801f71a <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISA_EEEEC1EOSF_>
 801f76a:	bf00      	nop
 801f76c:	3714      	adds	r7, #20
 801f76e:	46bd      	mov	sp, r7
 801f770:	bd90      	pop	{r4, r7, pc}

0801f772 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEC1EOS8_>:
 801f772:	b580      	push	{r7, lr}
 801f774:	b082      	sub	sp, #8
 801f776:	af00      	add	r7, sp, #0
 801f778:	6078      	str	r0, [r7, #4]
 801f77a:	6039      	str	r1, [r7, #0]
 801f77c:	687b      	ldr	r3, [r7, #4]
 801f77e:	683a      	ldr	r2, [r7, #0]
 801f780:	4611      	mov	r1, r2
 801f782:	4618      	mov	r0, r3
 801f784:	f003 fcb2 	bl	80230ec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 801f788:	687b      	ldr	r3, [r7, #4]
 801f78a:	f103 0218 	add.w	r2, r3, #24
 801f78e:	683b      	ldr	r3, [r7, #0]
 801f790:	3318      	adds	r3, #24
 801f792:	4619      	mov	r1, r3
 801f794:	4610      	mov	r0, r2
 801f796:	f7ec fbfb 	bl	800bf90 <_ZN6SymbolC1EOS_>
 801f79a:	687b      	ldr	r3, [r7, #4]
 801f79c:	4618      	mov	r0, r3
 801f79e:	3708      	adds	r7, #8
 801f7a0:	46bd      	mov	sp, r7
 801f7a2:	bd80      	pop	{r7, pc}

0801f7a4 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE9constructISB_JSB_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 801f7a4:	b590      	push	{r4, r7, lr}
 801f7a6:	b085      	sub	sp, #20
 801f7a8:	af00      	add	r7, sp, #0
 801f7aa:	60f8      	str	r0, [r7, #12]
 801f7ac:	60b9      	str	r1, [r7, #8]
 801f7ae:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 801f7b0:	6878      	ldr	r0, [r7, #4]
 801f7b2:	f7ff fdec 	bl	801f38e <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEOT_RNSt16remove_referenceISA_E4typeE>
 801f7b6:	4604      	mov	r4, r0
 801f7b8:	68bb      	ldr	r3, [r7, #8]
 801f7ba:	4619      	mov	r1, r3
 801f7bc:	2038      	movs	r0, #56	; 0x38
 801f7be:	f7e1 fc4c 	bl	800105a <_ZnwjPv>
 801f7c2:	4603      	mov	r3, r0
 801f7c4:	4621      	mov	r1, r4
 801f7c6:	4618      	mov	r0, r3
 801f7c8:	f7ff ffd3 	bl	801f772 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEC1EOS8_>
 801f7cc:	bf00      	nop
 801f7ce:	3714      	adds	r7, #20
 801f7d0:	46bd      	mov	sp, r7
 801f7d2:	bd90      	pop	{r4, r7, pc}

0801f7d4 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISD_EEEEEE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 801f7d4:	b480      	push	{r7}
 801f7d6:	b083      	sub	sp, #12
 801f7d8:	af00      	add	r7, sp, #0
 801f7da:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 801f7dc:	4b03      	ldr	r3, [pc, #12]	; (801f7ec <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISD_EEEEEE8max_sizeEv+0x18>)
      }
 801f7de:	4618      	mov	r0, r3
 801f7e0:	370c      	adds	r7, #12
 801f7e2:	46bd      	mov	sp, r7
 801f7e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 801f7e8:	4770      	bx	lr
 801f7ea:	bf00      	nop
 801f7ec:	02e8ba2e 	.word	0x02e8ba2e

0801f7f0 <_Z41__static_initialization_and_destruction_0ii>:
 801f7f0:	b590      	push	{r4, r7, lr}
 801f7f2:	b0e7      	sub	sp, #412	; 0x19c
 801f7f4:	af02      	add	r7, sp, #8
 801f7f6:	1d3b      	adds	r3, r7, #4
 801f7f8:	6018      	str	r0, [r3, #0]
 801f7fa:	463b      	mov	r3, r7
 801f7fc:	6019      	str	r1, [r3, #0]
 801f7fe:	1d3b      	adds	r3, r7, #4
 801f800:	681b      	ldr	r3, [r3, #0]
 801f802:	2b01      	cmp	r3, #1
 801f804:	f040 819d 	bne.w	801fb42 <_Z41__static_initialization_and_destruction_0ii+0x352>
 801f808:	463b      	mov	r3, r7
 801f80a:	681b      	ldr	r3, [r3, #0]
 801f80c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801f810:	4293      	cmp	r3, r2
 801f812:	f040 8196 	bne.w	801fb42 <_Z41__static_initialization_and_destruction_0ii+0x352>
};
 801f816:	f107 0314 	add.w	r3, r7, #20
 801f81a:	4618      	mov	r0, r3
 801f81c:	2322      	movs	r3, #34	; 0x22
 801f81e:	461a      	mov	r2, r3
 801f820:	2100      	movs	r1, #0
 801f822:	f004 fcdf 	bl	80241e4 <memset>
 801f826:	f107 0314 	add.w	r3, r7, #20
 801f82a:	223a      	movs	r2, #58	; 0x3a
 801f82c:	701a      	strb	r2, [r3, #0]
 801f82e:	f107 0314 	add.w	r3, r7, #20
 801f832:	2201      	movs	r2, #1
 801f834:	705a      	strb	r2, [r3, #1]
 801f836:	f107 0314 	add.w	r3, r7, #20
 801f83a:	220a      	movs	r2, #10
 801f83c:	709a      	strb	r2, [r3, #2]
 801f83e:	f107 0314 	add.w	r3, r7, #20
 801f842:	220a      	movs	r2, #10
 801f844:	70da      	strb	r2, [r3, #3]
 801f846:	f107 0314 	add.w	r3, r7, #20
 801f84a:	222c      	movs	r2, #44	; 0x2c
 801f84c:	711a      	strb	r2, [r3, #4]
 801f84e:	f107 0314 	add.w	r3, r7, #20
 801f852:	220c      	movs	r2, #12
 801f854:	715a      	strb	r2, [r3, #5]
 801f856:	f107 0314 	add.w	r3, r7, #20
 801f85a:	222e      	movs	r2, #46	; 0x2e
 801f85c:	719a      	strb	r2, [r3, #6]
 801f85e:	f107 0314 	add.w	r3, r7, #20
 801f862:	220b      	movs	r2, #11
 801f864:	71da      	strb	r2, [r3, #7]
 801f866:	f107 0314 	add.w	r3, r7, #20
 801f86a:	225b      	movs	r2, #91	; 0x5b
 801f86c:	721a      	strb	r2, [r3, #8]
 801f86e:	f107 0314 	add.w	r3, r7, #20
 801f872:	220d      	movs	r2, #13
 801f874:	725a      	strb	r2, [r3, #9]
 801f876:	f107 0314 	add.w	r3, r7, #20
 801f87a:	225d      	movs	r2, #93	; 0x5d
 801f87c:	729a      	strb	r2, [r3, #10]
 801f87e:	f107 0314 	add.w	r3, r7, #20
 801f882:	220e      	movs	r2, #14
 801f884:	72da      	strb	r2, [r3, #11]
 801f886:	f107 0314 	add.w	r3, r7, #20
 801f88a:	227c      	movs	r2, #124	; 0x7c
 801f88c:	731a      	strb	r2, [r3, #12]
 801f88e:	f107 0314 	add.w	r3, r7, #20
 801f892:	2215      	movs	r2, #21
 801f894:	735a      	strb	r2, [r3, #13]
 801f896:	f107 0314 	add.w	r3, r7, #20
 801f89a:	2226      	movs	r2, #38	; 0x26
 801f89c:	739a      	strb	r2, [r3, #14]
 801f89e:	f107 0314 	add.w	r3, r7, #20
 801f8a2:	2216      	movs	r2, #22
 801f8a4:	73da      	strb	r2, [r3, #15]
 801f8a6:	f107 0314 	add.w	r3, r7, #20
 801f8aa:	222b      	movs	r2, #43	; 0x2b
 801f8ac:	741a      	strb	r2, [r3, #16]
 801f8ae:	f107 0314 	add.w	r3, r7, #20
 801f8b2:	221f      	movs	r2, #31
 801f8b4:	745a      	strb	r2, [r3, #17]
 801f8b6:	f107 0314 	add.w	r3, r7, #20
 801f8ba:	222d      	movs	r2, #45	; 0x2d
 801f8bc:	749a      	strb	r2, [r3, #18]
 801f8be:	f107 0314 	add.w	r3, r7, #20
 801f8c2:	2220      	movs	r2, #32
 801f8c4:	74da      	strb	r2, [r3, #19]
 801f8c6:	f107 0314 	add.w	r3, r7, #20
 801f8ca:	222a      	movs	r2, #42	; 0x2a
 801f8cc:	751a      	strb	r2, [r3, #20]
 801f8ce:	f107 0314 	add.w	r3, r7, #20
 801f8d2:	2221      	movs	r2, #33	; 0x21
 801f8d4:	755a      	strb	r2, [r3, #21]
 801f8d6:	f107 0314 	add.w	r3, r7, #20
 801f8da:	222f      	movs	r2, #47	; 0x2f
 801f8dc:	759a      	strb	r2, [r3, #22]
 801f8de:	f107 0314 	add.w	r3, r7, #20
 801f8e2:	2222      	movs	r2, #34	; 0x22
 801f8e4:	75da      	strb	r2, [r3, #23]
 801f8e6:	f107 0314 	add.w	r3, r7, #20
 801f8ea:	225e      	movs	r2, #94	; 0x5e
 801f8ec:	761a      	strb	r2, [r3, #24]
 801f8ee:	f107 0314 	add.w	r3, r7, #20
 801f8f2:	2223      	movs	r2, #35	; 0x23
 801f8f4:	765a      	strb	r2, [r3, #25]
 801f8f6:	f107 0314 	add.w	r3, r7, #20
 801f8fa:	2225      	movs	r2, #37	; 0x25
 801f8fc:	769a      	strb	r2, [r3, #26]
 801f8fe:	f107 0314 	add.w	r3, r7, #20
 801f902:	2224      	movs	r2, #36	; 0x24
 801f904:	76da      	strb	r2, [r3, #27]
 801f906:	f107 0314 	add.w	r3, r7, #20
 801f90a:	2228      	movs	r2, #40	; 0x28
 801f90c:	771a      	strb	r2, [r3, #28]
 801f90e:	f107 0314 	add.w	r3, r7, #20
 801f912:	2226      	movs	r2, #38	; 0x26
 801f914:	775a      	strb	r2, [r3, #29]
 801f916:	f107 0314 	add.w	r3, r7, #20
 801f91a:	2229      	movs	r2, #41	; 0x29
 801f91c:	779a      	strb	r2, [r3, #30]
 801f91e:	f107 0314 	add.w	r3, r7, #20
 801f922:	2227      	movs	r2, #39	; 0x27
 801f924:	77da      	strb	r2, [r3, #31]
 801f926:	f107 0314 	add.w	r3, r7, #20
 801f92a:	2225      	movs	r2, #37	; 0x25
 801f92c:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 801f930:	f107 030c 	add.w	r3, r7, #12
 801f934:	f107 0214 	add.w	r2, r7, #20
 801f938:	601a      	str	r2, [r3, #0]
 801f93a:	f107 030c 	add.w	r3, r7, #12
 801f93e:	2211      	movs	r2, #17
 801f940:	605a      	str	r2, [r3, #4]
 801f942:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801f946:	4618      	mov	r0, r3
 801f948:	f7e2 f8d2 	bl	8001af0 <_ZNSaISt4pairIKc10token_typeEEC1Ev>
 801f94c:	f107 0138 	add.w	r1, r7, #56	; 0x38
 801f950:	f107 020c 	add.w	r2, r7, #12
 801f954:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801f958:	9300      	str	r3, [sp, #0]
 801f95a:	460b      	mov	r3, r1
 801f95c:	ca06      	ldmia	r2, {r1, r2}
 801f95e:	4885      	ldr	r0, [pc, #532]	; (801fb74 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 801f960:	f7e2 f8de 	bl	8001b20 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 801f964:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801f968:	4618      	mov	r0, r3
 801f96a:	f7e2 f8cd 	bl	8001b08 <_ZNSaISt4pairIKc10token_typeEED1Ev>
	{"true", TOKEN_TRUE},
 801f96e:	2305      	movs	r3, #5
 801f970:	f887 3162 	strb.w	r3, [r7, #354]	; 0x162
};
 801f974:	f507 72b1 	add.w	r2, r7, #354	; 0x162
 801f978:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801f97c:	497e      	ldr	r1, [pc, #504]	; (801fb78 <_Z41__static_initialization_and_destruction_0ii+0x388>)
 801f97e:	4618      	mov	r0, r3
 801f980:	f7e1 fbba 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"false", TOKEN_FALSE},
 801f984:	2306      	movs	r3, #6
 801f986:	f887 3163 	strb.w	r3, [r7, #355]	; 0x163
};
 801f98a:	f207 1263 	addw	r2, r7, #355	; 0x163
 801f98e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801f992:	331c      	adds	r3, #28
 801f994:	4979      	ldr	r1, [pc, #484]	; (801fb7c <_Z41__static_initialization_and_destruction_0ii+0x38c>)
 801f996:	4618      	mov	r0, r3
 801f998:	f7e1 fbd6 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"setup", TOKEN_SETUP},
 801f99c:	2307      	movs	r3, #7
 801f99e:	f887 3164 	strb.w	r3, [r7, #356]	; 0x164
};
 801f9a2:	f507 72b2 	add.w	r2, r7, #356	; 0x164
 801f9a6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801f9aa:	3338      	adds	r3, #56	; 0x38
 801f9ac:	4974      	ldr	r1, [pc, #464]	; (801fb80 <_Z41__static_initialization_and_destruction_0ii+0x390>)
 801f9ae:	4618      	mov	r0, r3
 801f9b0:	f7e1 fbca 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"loop", TOKEN_LOOP},
 801f9b4:	2308      	movs	r3, #8
 801f9b6:	f887 3165 	strb.w	r3, [r7, #357]	; 0x165
};
 801f9ba:	f207 1265 	addw	r2, r7, #357	; 0x165
 801f9be:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801f9c2:	3354      	adds	r3, #84	; 0x54
 801f9c4:	496f      	ldr	r1, [pc, #444]	; (801fb84 <_Z41__static_initialization_and_destruction_0ii+0x394>)
 801f9c6:	4618      	mov	r0, r3
 801f9c8:	f7e1 fb96 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"finish", TOKEN_FINISH},
 801f9cc:	2309      	movs	r3, #9
 801f9ce:	f887 3166 	strb.w	r3, [r7, #358]	; 0x166
};
 801f9d2:	f507 72b3 	add.w	r2, r7, #358	; 0x166
 801f9d6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801f9da:	3370      	adds	r3, #112	; 0x70
 801f9dc:	496a      	ldr	r1, [pc, #424]	; (801fb88 <_Z41__static_initialization_and_destruction_0ii+0x398>)
 801f9de:	4618      	mov	r0, r3
 801f9e0:	f7e1 fbda 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"if", TOKEN_IF},
 801f9e4:	2310      	movs	r3, #16
 801f9e6:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167
};
 801f9ea:	f207 1267 	addw	r2, r7, #359	; 0x167
 801f9ee:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801f9f2:	338c      	adds	r3, #140	; 0x8c
 801f9f4:	4965      	ldr	r1, [pc, #404]	; (801fb8c <_Z41__static_initialization_and_destruction_0ii+0x39c>)
 801f9f6:	4618      	mov	r0, r3
 801f9f8:	f7e1 fbf6 	bl	80011e8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>
	{"elseif", TOKEN_ELSEIF},
 801f9fc:	2311      	movs	r3, #17
 801f9fe:	f887 3168 	strb.w	r3, [r7, #360]	; 0x168
};
 801fa02:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 801fa06:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801fa0a:	33a8      	adds	r3, #168	; 0xa8
 801fa0c:	4960      	ldr	r1, [pc, #384]	; (801fb90 <_Z41__static_initialization_and_destruction_0ii+0x3a0>)
 801fa0e:	4618      	mov	r0, r3
 801fa10:	f7e1 fbc2 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"else", TOKEN_ELSE},
 801fa14:	2312      	movs	r3, #18
 801fa16:	f887 3169 	strb.w	r3, [r7, #361]	; 0x169
};
 801fa1a:	f207 1269 	addw	r2, r7, #361	; 0x169
 801fa1e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801fa22:	33c4      	adds	r3, #196	; 0xc4
 801fa24:	495b      	ldr	r1, [pc, #364]	; (801fb94 <_Z41__static_initialization_and_destruction_0ii+0x3a4>)
 801fa26:	4618      	mov	r0, r3
 801fa28:	f7e1 fb66 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"while", TOKEN_WHILE},
 801fa2c:	2313      	movs	r3, #19
 801fa2e:	f887 316a 	strb.w	r3, [r7, #362]	; 0x16a
};
 801fa32:	f507 72b5 	add.w	r2, r7, #362	; 0x16a
 801fa36:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801fa3a:	33e0      	adds	r3, #224	; 0xe0
 801fa3c:	4956      	ldr	r1, [pc, #344]	; (801fb98 <_Z41__static_initialization_and_destruction_0ii+0x3a8>)
 801fa3e:	4618      	mov	r0, r3
 801fa40:	f7e1 fb82 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"end", TOKEN_END},
 801fa44:	2314      	movs	r3, #20
 801fa46:	f887 316b 	strb.w	r3, [r7, #363]	; 0x16b
};
 801fa4a:	f207 126b 	addw	r2, r7, #363	; 0x16b
 801fa4e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801fa52:	33fc      	adds	r3, #252	; 0xfc
 801fa54:	4951      	ldr	r1, [pc, #324]	; (801fb9c <_Z41__static_initialization_and_destruction_0ii+0x3ac>)
 801fa56:	4618      	mov	r0, r3
 801fa58:	f7e1 fbee 	bl	8001238 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>
 801fa5c:	f107 0340 	add.w	r3, r7, #64	; 0x40
 801fa60:	f107 0248 	add.w	r2, r7, #72	; 0x48
 801fa64:	601a      	str	r2, [r3, #0]
 801fa66:	f107 0340 	add.w	r3, r7, #64	; 0x40
 801fa6a:	220a      	movs	r2, #10
 801fa6c:	605a      	str	r2, [r3, #4]
 801fa6e:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 801fa72:	4618      	mov	r0, r3
 801fa74:	f7e2 f8e1 	bl	8001c3a <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 801fa78:	f507 71b6 	add.w	r1, r7, #364	; 0x16c
 801fa7c:	f107 0240 	add.w	r2, r7, #64	; 0x40
 801fa80:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 801fa84:	9300      	str	r3, [sp, #0]
 801fa86:	460b      	mov	r3, r1
 801fa88:	ca06      	ldmia	r2, {r1, r2}
 801fa8a:	4845      	ldr	r0, [pc, #276]	; (801fba0 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 801fa8c:	f7e2 f8ed 	bl	8001c6a <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>
 801fa90:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 801fa94:	4618      	mov	r0, r3
 801fa96:	f7e2 f8dc 	bl	8001c52 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 801fa9a:	f107 0448 	add.w	r4, r7, #72	; 0x48
 801fa9e:	f504 748c 	add.w	r4, r4, #280	; 0x118
 801faa2:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801faa6:	429c      	cmp	r4, r3
 801faa8:	d004      	beq.n	801fab4 <_Z41__static_initialization_and_destruction_0ii+0x2c4>
 801faaa:	3c1c      	subs	r4, #28
 801faac:	4620      	mov	r0, r4
 801faae:	f7e1 fb16 	bl	80010de <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 801fab2:	e7f6      	b.n	801faa2 <_Z41__static_initialization_and_destruction_0ii+0x2b2>
};
 801fab4:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 801fab8:	2200      	movs	r2, #0
 801faba:	601a      	str	r2, [r3, #0]
 801fabc:	605a      	str	r2, [r3, #4]
 801fabe:	609a      	str	r2, [r3, #8]
 801fac0:	233c      	movs	r3, #60	; 0x3c
 801fac2:	f887 317c 	strb.w	r3, [r7, #380]	; 0x17c
 801fac6:	231b      	movs	r3, #27
 801fac8:	f887 317d 	strb.w	r3, [r7, #381]	; 0x17d
 801facc:	231c      	movs	r3, #28
 801face:	f887 317e 	strb.w	r3, [r7, #382]	; 0x17e
 801fad2:	233e      	movs	r3, #62	; 0x3e
 801fad4:	f887 317f 	strb.w	r3, [r7, #383]	; 0x17f
 801fad8:	2319      	movs	r3, #25
 801fada:	f887 3180 	strb.w	r3, [r7, #384]	; 0x180
 801fade:	231a      	movs	r3, #26
 801fae0:	f887 3181 	strb.w	r3, [r7, #385]	; 0x181
 801fae4:	233d      	movs	r3, #61	; 0x3d
 801fae6:	f887 3182 	strb.w	r3, [r7, #386]	; 0x182
 801faea:	2318      	movs	r3, #24
 801faec:	f887 3183 	strb.w	r3, [r7, #387]	; 0x183
 801faf0:	231d      	movs	r3, #29
 801faf2:	f887 3184 	strb.w	r3, [r7, #388]	; 0x184
 801faf6:	2321      	movs	r3, #33	; 0x21
 801faf8:	f887 3185 	strb.w	r3, [r7, #389]	; 0x185
 801fafc:	2317      	movs	r3, #23
 801fafe:	f887 3186 	strb.w	r3, [r7, #390]	; 0x186
 801fb02:	231e      	movs	r3, #30
 801fb04:	f887 3187 	strb.w	r3, [r7, #391]	; 0x187
 801fb08:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 801fb0c:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 801fb10:	2304      	movs	r3, #4
 801fb12:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 801fb16:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801fb1a:	4618      	mov	r0, r3
 801fb1c:	f7e2 f8d5 	bl	8001cca <_ZNSaISt4pairIKc12double_tokenEEC1Ev>
 801fb20:	f507 72c4 	add.w	r2, r7, #392	; 0x188
 801fb24:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801fb28:	9300      	str	r3, [sp, #0]
 801fb2a:	4613      	mov	r3, r2
 801fb2c:	f507 72ba 	add.w	r2, r7, #372	; 0x174
 801fb30:	ca06      	ldmia	r2, {r1, r2}
 801fb32:	481c      	ldr	r0, [pc, #112]	; (801fba4 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 801fb34:	f7e2 f8e1 	bl	8001cfa <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 801fb38:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801fb3c:	4618      	mov	r0, r3
 801fb3e:	f7e2 f8d0 	bl	8001ce2 <_ZNSaISt4pairIKc12double_tokenEED1Ev>
static const std::map<char, double_token> token_double_chars
 801fb42:	1d3b      	adds	r3, r7, #4
 801fb44:	681b      	ldr	r3, [r3, #0]
 801fb46:	2b00      	cmp	r3, #0
 801fb48:	d10e      	bne.n	801fb68 <_Z41__static_initialization_and_destruction_0ii+0x378>
 801fb4a:	463b      	mov	r3, r7
 801fb4c:	681b      	ldr	r3, [r3, #0]
 801fb4e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801fb52:	4293      	cmp	r3, r2
 801fb54:	d108      	bne.n	801fb68 <_Z41__static_initialization_and_destruction_0ii+0x378>
 801fb56:	4813      	ldr	r0, [pc, #76]	; (801fba4 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 801fb58:	f7e9 fd61 	bl	800961e <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>
static const std::map<std::string, token_type> token_strings
 801fb5c:	4810      	ldr	r0, [pc, #64]	; (801fba0 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 801fb5e:	f7e9 fd6b 	bl	8009638 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
static const std::map<char, token_type> token_chars
 801fb62:	4804      	ldr	r0, [pc, #16]	; (801fb74 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 801fb64:	f7e9 fd75 	bl	8009652 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>
 801fb68:	bf00      	nop
 801fb6a:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 801fb6e:	46bd      	mov	sp, r7
 801fb70:	bd90      	pop	{r4, r7, pc}
 801fb72:	bf00      	nop
 801fb74:	20000724 	.word	0x20000724
 801fb78:	08028188 	.word	0x08028188
 801fb7c:	08028190 	.word	0x08028190
 801fb80:	08028198 	.word	0x08028198
 801fb84:	080281a0 	.word	0x080281a0
 801fb88:	080281a8 	.word	0x080281a8
 801fb8c:	080281b0 	.word	0x080281b0
 801fb90:	080281b4 	.word	0x080281b4
 801fb94:	080281bc 	.word	0x080281bc
 801fb98:	080281c4 	.word	0x080281c4
 801fb9c:	080281cc 	.word	0x080281cc
 801fba0:	2000073c 	.word	0x2000073c
 801fba4:	20000754 	.word	0x20000754

0801fba8 <_GLOBAL__sub_I__ZN16Function_handlerC2Ev>:
 801fba8:	b580      	push	{r7, lr}
 801fbaa:	af00      	add	r7, sp, #0
 801fbac:	f64f 71ff 	movw	r1, #65535	; 0xffff
 801fbb0:	2001      	movs	r0, #1
 801fbb2:	f7ff fe1d 	bl	801f7f0 <_Z41__static_initialization_and_destruction_0ii>
 801fbb6:	bd80      	pop	{r7, pc}

0801fbb8 <_GLOBAL__sub_D__ZN16Function_handlerC2Ev>:
 801fbb8:	b580      	push	{r7, lr}
 801fbba:	af00      	add	r7, sp, #0
 801fbbc:	f64f 71ff 	movw	r1, #65535	; 0xffff
 801fbc0:	2000      	movs	r0, #0
 801fbc2:	f7ff fe15 	bl	801f7f0 <_Z41__static_initialization_and_destruction_0ii>
 801fbc6:	bd80      	pop	{r7, pc}

0801fbc8 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
 801fbc8:	f8df d034 	ldr.w	sp, [pc, #52]	; 801fc00 <LoopFillZerobss+0x12>

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 801fbcc:	480d      	ldr	r0, [pc, #52]	; (801fc04 <LoopFillZerobss+0x16>)
  ldr r1, =_edata
 801fbce:	490e      	ldr	r1, [pc, #56]	; (801fc08 <LoopFillZerobss+0x1a>)
  ldr r2, =_sidata
 801fbd0:	4a0e      	ldr	r2, [pc, #56]	; (801fc0c <LoopFillZerobss+0x1e>)
  movs r3, #0
 801fbd2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 801fbd4:	e002      	b.n	801fbdc <LoopCopyDataInit>

0801fbd6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 801fbd6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 801fbd8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 801fbda:	3304      	adds	r3, #4

0801fbdc <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 801fbdc:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 801fbde:	428c      	cmp	r4, r1
  bcc CopyDataInit
 801fbe0:	d3f9      	bcc.n	801fbd6 <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 801fbe2:	4a0b      	ldr	r2, [pc, #44]	; (801fc10 <LoopFillZerobss+0x22>)
  ldr r4, =_ebss
 801fbe4:	4c0b      	ldr	r4, [pc, #44]	; (801fc14 <LoopFillZerobss+0x26>)
  movs r3, #0
 801fbe6:	2300      	movs	r3, #0
  b LoopFillZerobss
 801fbe8:	e001      	b.n	801fbee <LoopFillZerobss>

0801fbea <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 801fbea:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 801fbec:	3204      	adds	r2, #4

0801fbee <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 801fbee:	42a2      	cmp	r2, r4
  bcc FillZerobss
 801fbf0:	d3fb      	bcc.n	801fbea <FillZerobss>

/* Call the clock system initialization function.*/
  bl  SystemInit   
 801fbf2:	f7fe fb75 	bl	801e2e0 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 801fbf6:	f004 fa59 	bl	80240ac <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 801fbfa:	f7fd fd17 	bl	801d62c <main>
  bx  lr    
 801fbfe:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
 801fc00:	20050000 	.word	0x20050000
  ldr r0, =_sdata
 801fc04:	20000000 	.word	0x20000000
  ldr r1, =_edata
 801fc08:	200001e8 	.word	0x200001e8
  ldr r2, =_sidata
 801fc0c:	080288bc 	.word	0x080288bc
  ldr r2, =_sbss
 801fc10:	200001e8 	.word	0x200001e8
  ldr r4, =_ebss
 801fc14:	200008d0 	.word	0x200008d0

0801fc18 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 801fc18:	e7fe      	b.n	801fc18 <ADC_IRQHandler>

0801fc1a <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 801fc1a:	b580      	push	{r7, lr}
 801fc1c:	af00      	add	r7, sp, #0
#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 801fc1e:	2003      	movs	r0, #3
 801fc20:	f000 f94c 	bl	801febc <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 801fc24:	200f      	movs	r0, #15
 801fc26:	f000 f805 	bl	801fc34 <HAL_InitTick>
  
  /* Init the low level hardware */
  HAL_MspInit();
 801fc2a:	f7fe f9ef 	bl	801e00c <HAL_MspInit>
  
  /* Return function status */
  return HAL_OK;
 801fc2e:	2300      	movs	r3, #0
}
 801fc30:	4618      	mov	r0, r3
 801fc32:	bd80      	pop	{r7, pc}

0801fc34 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 801fc34:	b580      	push	{r7, lr}
 801fc36:	b082      	sub	sp, #8
 801fc38:	af00      	add	r7, sp, #0
 801fc3a:	6078      	str	r0, [r7, #4]
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 801fc3c:	4b12      	ldr	r3, [pc, #72]	; (801fc88 <HAL_InitTick+0x54>)
 801fc3e:	681a      	ldr	r2, [r3, #0]
 801fc40:	4b12      	ldr	r3, [pc, #72]	; (801fc8c <HAL_InitTick+0x58>)
 801fc42:	781b      	ldrb	r3, [r3, #0]
 801fc44:	4619      	mov	r1, r3
 801fc46:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 801fc4a:	fbb3 f3f1 	udiv	r3, r3, r1
 801fc4e:	fbb2 f3f3 	udiv	r3, r2, r3
 801fc52:	4618      	mov	r0, r3
 801fc54:	f000 f967 	bl	801ff26 <HAL_SYSTICK_Config>
 801fc58:	4603      	mov	r3, r0
 801fc5a:	2b00      	cmp	r3, #0
 801fc5c:	d001      	beq.n	801fc62 <HAL_InitTick+0x2e>
  {
    return HAL_ERROR;
 801fc5e:	2301      	movs	r3, #1
 801fc60:	e00e      	b.n	801fc80 <HAL_InitTick+0x4c>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 801fc62:	687b      	ldr	r3, [r7, #4]
 801fc64:	2b0f      	cmp	r3, #15
 801fc66:	d80a      	bhi.n	801fc7e <HAL_InitTick+0x4a>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 801fc68:	2200      	movs	r2, #0
 801fc6a:	6879      	ldr	r1, [r7, #4]
 801fc6c:	f04f 30ff 	mov.w	r0, #4294967295
 801fc70:	f000 f92f 	bl	801fed2 <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 801fc74:	4a06      	ldr	r2, [pc, #24]	; (801fc90 <HAL_InitTick+0x5c>)
 801fc76:	687b      	ldr	r3, [r7, #4]
 801fc78:	6013      	str	r3, [r2, #0]
  {
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
 801fc7a:	2300      	movs	r3, #0
 801fc7c:	e000      	b.n	801fc80 <HAL_InitTick+0x4c>
    return HAL_ERROR;
 801fc7e:	2301      	movs	r3, #1
}
 801fc80:	4618      	mov	r0, r3
 801fc82:	3708      	adds	r7, #8
 801fc84:	46bd      	mov	sp, r7
 801fc86:	bd80      	pop	{r7, pc}
 801fc88:	20000004 	.word	0x20000004
 801fc8c:	2000000c 	.word	0x2000000c
 801fc90:	20000008 	.word	0x20000008

0801fc94 <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other 
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 801fc94:	b480      	push	{r7}
 801fc96:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 801fc98:	4b06      	ldr	r3, [pc, #24]	; (801fcb4 <HAL_IncTick+0x20>)
 801fc9a:	781b      	ldrb	r3, [r3, #0]
 801fc9c:	461a      	mov	r2, r3
 801fc9e:	4b06      	ldr	r3, [pc, #24]	; (801fcb8 <HAL_IncTick+0x24>)
 801fca0:	681b      	ldr	r3, [r3, #0]
 801fca2:	4413      	add	r3, r2
 801fca4:	4a04      	ldr	r2, [pc, #16]	; (801fcb8 <HAL_IncTick+0x24>)
 801fca6:	6013      	str	r3, [r2, #0]
}
 801fca8:	bf00      	nop
 801fcaa:	46bd      	mov	sp, r7
 801fcac:	f85d 7b04 	ldr.w	r7, [sp], #4
 801fcb0:	4770      	bx	lr
 801fcb2:	bf00      	nop
 801fcb4:	2000000c 	.word	0x2000000c
 801fcb8:	200008bc 	.word	0x200008bc

0801fcbc <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other 
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 801fcbc:	b480      	push	{r7}
 801fcbe:	af00      	add	r7, sp, #0
  return uwTick;
 801fcc0:	4b03      	ldr	r3, [pc, #12]	; (801fcd0 <HAL_GetTick+0x14>)
 801fcc2:	681b      	ldr	r3, [r3, #0]
}
 801fcc4:	4618      	mov	r0, r3
 801fcc6:	46bd      	mov	sp, r7
 801fcc8:	f85d 7b04 	ldr.w	r7, [sp], #4
 801fccc:	4770      	bx	lr
 801fcce:	bf00      	nop
 801fcd0:	200008bc 	.word	0x200008bc

0801fcd4 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay  specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 801fcd4:	b580      	push	{r7, lr}
 801fcd6:	b084      	sub	sp, #16
 801fcd8:	af00      	add	r7, sp, #0
 801fcda:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = HAL_GetTick();
 801fcdc:	f7ff ffee 	bl	801fcbc <HAL_GetTick>
 801fce0:	60b8      	str	r0, [r7, #8]
  uint32_t wait = Delay;
 801fce2:	687b      	ldr	r3, [r7, #4]
 801fce4:	60fb      	str	r3, [r7, #12]

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 801fce6:	68fb      	ldr	r3, [r7, #12]
 801fce8:	f1b3 3fff 	cmp.w	r3, #4294967295
 801fcec:	d005      	beq.n	801fcfa <HAL_Delay+0x26>
  {
    wait += (uint32_t)(uwTickFreq);
 801fcee:	4b0a      	ldr	r3, [pc, #40]	; (801fd18 <HAL_Delay+0x44>)
 801fcf0:	781b      	ldrb	r3, [r3, #0]
 801fcf2:	461a      	mov	r2, r3
 801fcf4:	68fb      	ldr	r3, [r7, #12]
 801fcf6:	4413      	add	r3, r2
 801fcf8:	60fb      	str	r3, [r7, #12]
  }

  while ((HAL_GetTick() - tickstart) < wait)
 801fcfa:	bf00      	nop
 801fcfc:	f7ff ffde 	bl	801fcbc <HAL_GetTick>
 801fd00:	4602      	mov	r2, r0
 801fd02:	68bb      	ldr	r3, [r7, #8]
 801fd04:	1ad3      	subs	r3, r2, r3
 801fd06:	68fa      	ldr	r2, [r7, #12]
 801fd08:	429a      	cmp	r2, r3
 801fd0a:	d8f7      	bhi.n	801fcfc <HAL_Delay+0x28>
  {
  }
}
 801fd0c:	bf00      	nop
 801fd0e:	bf00      	nop
 801fd10:	3710      	adds	r7, #16
 801fd12:	46bd      	mov	sp, r7
 801fd14:	bd80      	pop	{r7, pc}
 801fd16:	bf00      	nop
 801fd18:	2000000c 	.word	0x2000000c

0801fd1c <__NVIC_SetPriorityGrouping>:
           In case of a conflict between priority grouping and available
           priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
  \param [in]      PriorityGroup  Priority grouping field.
 */
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 801fd1c:	b480      	push	{r7}
 801fd1e:	b085      	sub	sp, #20
 801fd20:	af00      	add	r7, sp, #0
 801fd22:	6078      	str	r0, [r7, #4]
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 801fd24:	687b      	ldr	r3, [r7, #4]
 801fd26:	f003 0307 	and.w	r3, r3, #7
 801fd2a:	60fb      	str	r3, [r7, #12]

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 801fd2c:	4b0b      	ldr	r3, [pc, #44]	; (801fd5c <__NVIC_SetPriorityGrouping+0x40>)
 801fd2e:	68db      	ldr	r3, [r3, #12]
 801fd30:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 801fd32:	68ba      	ldr	r2, [r7, #8]
 801fd34:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 801fd38:	4013      	ands	r3, r2
 801fd3a:	60bb      	str	r3, [r7, #8]
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 801fd3c:	68fb      	ldr	r3, [r7, #12]
 801fd3e:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 801fd40:	68bb      	ldr	r3, [r7, #8]
 801fd42:	431a      	orrs	r2, r3
  reg_value  =  (reg_value                                   |
 801fd44:	4b06      	ldr	r3, [pc, #24]	; (801fd60 <__NVIC_SetPriorityGrouping+0x44>)
 801fd46:	4313      	orrs	r3, r2
 801fd48:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 801fd4a:	4a04      	ldr	r2, [pc, #16]	; (801fd5c <__NVIC_SetPriorityGrouping+0x40>)
 801fd4c:	68bb      	ldr	r3, [r7, #8]
 801fd4e:	60d3      	str	r3, [r2, #12]
}
 801fd50:	bf00      	nop
 801fd52:	3714      	adds	r7, #20
 801fd54:	46bd      	mov	sp, r7
 801fd56:	f85d 7b04 	ldr.w	r7, [sp], #4
 801fd5a:	4770      	bx	lr
 801fd5c:	e000ed00 	.word	0xe000ed00
 801fd60:	05fa0000 	.word	0x05fa0000

0801fd64 <__NVIC_GetPriorityGrouping>:
  \brief   Get Priority Grouping
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
 801fd64:	b480      	push	{r7}
 801fd66:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 801fd68:	4b04      	ldr	r3, [pc, #16]	; (801fd7c <__NVIC_GetPriorityGrouping+0x18>)
 801fd6a:	68db      	ldr	r3, [r3, #12]
 801fd6c:	0a1b      	lsrs	r3, r3, #8
 801fd6e:	f003 0307 	and.w	r3, r3, #7
}
 801fd72:	4618      	mov	r0, r3
 801fd74:	46bd      	mov	sp, r7
 801fd76:	f85d 7b04 	ldr.w	r7, [sp], #4
 801fd7a:	4770      	bx	lr
 801fd7c:	e000ed00 	.word	0xe000ed00

0801fd80 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 801fd80:	b480      	push	{r7}
 801fd82:	b083      	sub	sp, #12
 801fd84:	af00      	add	r7, sp, #0
 801fd86:	4603      	mov	r3, r0
 801fd88:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 801fd8a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 801fd8e:	2b00      	cmp	r3, #0
 801fd90:	db0b      	blt.n	801fdaa <__NVIC_EnableIRQ+0x2a>
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 801fd92:	79fb      	ldrb	r3, [r7, #7]
 801fd94:	f003 021f 	and.w	r2, r3, #31
 801fd98:	4907      	ldr	r1, [pc, #28]	; (801fdb8 <__NVIC_EnableIRQ+0x38>)
 801fd9a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 801fd9e:	095b      	lsrs	r3, r3, #5
 801fda0:	2001      	movs	r0, #1
 801fda2:	fa00 f202 	lsl.w	r2, r0, r2
 801fda6:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
 801fdaa:	bf00      	nop
 801fdac:	370c      	adds	r7, #12
 801fdae:	46bd      	mov	sp, r7
 801fdb0:	f85d 7b04 	ldr.w	r7, [sp], #4
 801fdb4:	4770      	bx	lr
 801fdb6:	bf00      	nop
 801fdb8:	e000e100 	.word	0xe000e100

0801fdbc <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 801fdbc:	b480      	push	{r7}
 801fdbe:	b083      	sub	sp, #12
 801fdc0:	af00      	add	r7, sp, #0
 801fdc2:	4603      	mov	r3, r0
 801fdc4:	6039      	str	r1, [r7, #0]
 801fdc6:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 801fdc8:	f997 3007 	ldrsb.w	r3, [r7, #7]
 801fdcc:	2b00      	cmp	r3, #0
 801fdce:	db0a      	blt.n	801fde6 <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 801fdd0:	683b      	ldr	r3, [r7, #0]
 801fdd2:	b2da      	uxtb	r2, r3
 801fdd4:	490c      	ldr	r1, [pc, #48]	; (801fe08 <__NVIC_SetPriority+0x4c>)
 801fdd6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 801fdda:	0112      	lsls	r2, r2, #4
 801fddc:	b2d2      	uxtb	r2, r2
 801fdde:	440b      	add	r3, r1
 801fde0:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 801fde4:	e00a      	b.n	801fdfc <__NVIC_SetPriority+0x40>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 801fde6:	683b      	ldr	r3, [r7, #0]
 801fde8:	b2da      	uxtb	r2, r3
 801fdea:	4908      	ldr	r1, [pc, #32]	; (801fe0c <__NVIC_SetPriority+0x50>)
 801fdec:	79fb      	ldrb	r3, [r7, #7]
 801fdee:	f003 030f 	and.w	r3, r3, #15
 801fdf2:	3b04      	subs	r3, #4
 801fdf4:	0112      	lsls	r2, r2, #4
 801fdf6:	b2d2      	uxtb	r2, r2
 801fdf8:	440b      	add	r3, r1
 801fdfa:	761a      	strb	r2, [r3, #24]
}
 801fdfc:	bf00      	nop
 801fdfe:	370c      	adds	r7, #12
 801fe00:	46bd      	mov	sp, r7
 801fe02:	f85d 7b04 	ldr.w	r7, [sp], #4
 801fe06:	4770      	bx	lr
 801fe08:	e000e100 	.word	0xe000e100
 801fe0c:	e000ed00 	.word	0xe000ed00

0801fe10 <NVIC_EncodePriority>:
  \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
 801fe10:	b480      	push	{r7}
 801fe12:	b089      	sub	sp, #36	; 0x24
 801fe14:	af00      	add	r7, sp, #0
 801fe16:	60f8      	str	r0, [r7, #12]
 801fe18:	60b9      	str	r1, [r7, #8]
 801fe1a:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 801fe1c:	68fb      	ldr	r3, [r7, #12]
 801fe1e:	f003 0307 	and.w	r3, r3, #7
 801fe22:	61fb      	str	r3, [r7, #28]
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 801fe24:	69fb      	ldr	r3, [r7, #28]
 801fe26:	f1c3 0307 	rsb	r3, r3, #7
 801fe2a:	2b04      	cmp	r3, #4
 801fe2c:	bf28      	it	cs
 801fe2e:	2304      	movcs	r3, #4
 801fe30:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 801fe32:	69fb      	ldr	r3, [r7, #28]
 801fe34:	3304      	adds	r3, #4
 801fe36:	2b06      	cmp	r3, #6
 801fe38:	d902      	bls.n	801fe40 <NVIC_EncodePriority+0x30>
 801fe3a:	69fb      	ldr	r3, [r7, #28]
 801fe3c:	3b03      	subs	r3, #3
 801fe3e:	e000      	b.n	801fe42 <NVIC_EncodePriority+0x32>
 801fe40:	2300      	movs	r3, #0
 801fe42:	617b      	str	r3, [r7, #20]

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 801fe44:	f04f 32ff 	mov.w	r2, #4294967295
 801fe48:	69bb      	ldr	r3, [r7, #24]
 801fe4a:	fa02 f303 	lsl.w	r3, r2, r3
 801fe4e:	43da      	mvns	r2, r3
 801fe50:	68bb      	ldr	r3, [r7, #8]
 801fe52:	401a      	ands	r2, r3
 801fe54:	697b      	ldr	r3, [r7, #20]
 801fe56:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 801fe58:	f04f 31ff 	mov.w	r1, #4294967295
 801fe5c:	697b      	ldr	r3, [r7, #20]
 801fe5e:	fa01 f303 	lsl.w	r3, r1, r3
 801fe62:	43d9      	mvns	r1, r3
 801fe64:	687b      	ldr	r3, [r7, #4]
 801fe66:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 801fe68:	4313      	orrs	r3, r2
         );
}
 801fe6a:	4618      	mov	r0, r3
 801fe6c:	3724      	adds	r7, #36	; 0x24
 801fe6e:	46bd      	mov	sp, r7
 801fe70:	f85d 7b04 	ldr.w	r7, [sp], #4
 801fe74:	4770      	bx	lr
	...

0801fe78 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 801fe78:	b580      	push	{r7, lr}
 801fe7a:	b082      	sub	sp, #8
 801fe7c:	af00      	add	r7, sp, #0
 801fe7e:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 801fe80:	687b      	ldr	r3, [r7, #4]
 801fe82:	3b01      	subs	r3, #1
 801fe84:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 801fe88:	d301      	bcc.n	801fe8e <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 801fe8a:	2301      	movs	r3, #1
 801fe8c:	e00f      	b.n	801feae <SysTick_Config+0x36>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 801fe8e:	4a0a      	ldr	r2, [pc, #40]	; (801feb8 <SysTick_Config+0x40>)
 801fe90:	687b      	ldr	r3, [r7, #4]
 801fe92:	3b01      	subs	r3, #1
 801fe94:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 801fe96:	210f      	movs	r1, #15
 801fe98:	f04f 30ff 	mov.w	r0, #4294967295
 801fe9c:	f7ff ff8e 	bl	801fdbc <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 801fea0:	4b05      	ldr	r3, [pc, #20]	; (801feb8 <SysTick_Config+0x40>)
 801fea2:	2200      	movs	r2, #0
 801fea4:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 801fea6:	4b04      	ldr	r3, [pc, #16]	; (801feb8 <SysTick_Config+0x40>)
 801fea8:	2207      	movs	r2, #7
 801feaa:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 801feac:	2300      	movs	r3, #0
}
 801feae:	4618      	mov	r0, r3
 801feb0:	3708      	adds	r7, #8
 801feb2:	46bd      	mov	sp, r7
 801feb4:	bd80      	pop	{r7, pc}
 801feb6:	bf00      	nop
 801feb8:	e000e010 	.word	0xe000e010

0801febc <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
  *         The pending IRQ priority will be managed only by the subpriority. 
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 801febc:	b580      	push	{r7, lr}
 801febe:	b082      	sub	sp, #8
 801fec0:	af00      	add	r7, sp, #0
 801fec2:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 801fec4:	6878      	ldr	r0, [r7, #4]
 801fec6:	f7ff ff29 	bl	801fd1c <__NVIC_SetPriorityGrouping>
}
 801feca:	bf00      	nop
 801fecc:	3708      	adds	r7, #8
 801fece:	46bd      	mov	sp, r7
 801fed0:	bd80      	pop	{r7, pc}

0801fed2 <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 801fed2:	b580      	push	{r7, lr}
 801fed4:	b086      	sub	sp, #24
 801fed6:	af00      	add	r7, sp, #0
 801fed8:	4603      	mov	r3, r0
 801feda:	60b9      	str	r1, [r7, #8]
 801fedc:	607a      	str	r2, [r7, #4]
 801fede:	73fb      	strb	r3, [r7, #15]
  uint32_t prioritygroup = 0x00;
 801fee0:	2300      	movs	r3, #0
 801fee2:	617b      	str	r3, [r7, #20]
  
  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
 801fee4:	f7ff ff3e 	bl	801fd64 <__NVIC_GetPriorityGrouping>
 801fee8:	6178      	str	r0, [r7, #20]
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 801feea:	687a      	ldr	r2, [r7, #4]
 801feec:	68b9      	ldr	r1, [r7, #8]
 801feee:	6978      	ldr	r0, [r7, #20]
 801fef0:	f7ff ff8e 	bl	801fe10 <NVIC_EncodePriority>
 801fef4:	4602      	mov	r2, r0
 801fef6:	f997 300f 	ldrsb.w	r3, [r7, #15]
 801fefa:	4611      	mov	r1, r2
 801fefc:	4618      	mov	r0, r3
 801fefe:	f7ff ff5d 	bl	801fdbc <__NVIC_SetPriority>
}
 801ff02:	bf00      	nop
 801ff04:	3718      	adds	r7, #24
 801ff06:	46bd      	mov	sp, r7
 801ff08:	bd80      	pop	{r7, pc}

0801ff0a <HAL_NVIC_EnableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32f7xxxx.h))
  * @retval None
  */
void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
{
 801ff0a:	b580      	push	{r7, lr}
 801ff0c:	b082      	sub	sp, #8
 801ff0e:	af00      	add	r7, sp, #0
 801ff10:	4603      	mov	r3, r0
 801ff12:	71fb      	strb	r3, [r7, #7]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
 801ff14:	f997 3007 	ldrsb.w	r3, [r7, #7]
 801ff18:	4618      	mov	r0, r3
 801ff1a:	f7ff ff31 	bl	801fd80 <__NVIC_EnableIRQ>
}
 801ff1e:	bf00      	nop
 801ff20:	3708      	adds	r7, #8
 801ff22:	46bd      	mov	sp, r7
 801ff24:	bd80      	pop	{r7, pc}

0801ff26 <HAL_SYSTICK_Config>:
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 801ff26:	b580      	push	{r7, lr}
 801ff28:	b082      	sub	sp, #8
 801ff2a:	af00      	add	r7, sp, #0
 801ff2c:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 801ff2e:	6878      	ldr	r0, [r7, #4]
 801ff30:	f7ff ffa2 	bl	801fe78 <SysTick_Config>
 801ff34:	4603      	mov	r3, r0
}
 801ff36:	4618      	mov	r0, r3
 801ff38:	3708      	adds	r7, #8
 801ff3a:	46bd      	mov	sp, r7
 801ff3c:	bd80      	pop	{r7, pc}

0801ff3e <HAL_DMA_Abort>:
  *        and the Stream will be effectively disabled only after the transfer of
  *        this single data is finished.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort(DMA_HandleTypeDef *hdma)
{
 801ff3e:	b580      	push	{r7, lr}
 801ff40:	b084      	sub	sp, #16
 801ff42:	af00      	add	r7, sp, #0
 801ff44:	6078      	str	r0, [r7, #4]
  /* calculate DMA base and stream number */
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 801ff46:	687b      	ldr	r3, [r7, #4]
 801ff48:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 801ff4a:	60fb      	str	r3, [r7, #12]
  
  uint32_t tickstart = HAL_GetTick();
 801ff4c:	f7ff feb6 	bl	801fcbc <HAL_GetTick>
 801ff50:	60b8      	str	r0, [r7, #8]
  
  if(hdma->State != HAL_DMA_STATE_BUSY)
 801ff52:	687b      	ldr	r3, [r7, #4]
 801ff54:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 801ff58:	b2db      	uxtb	r3, r3
 801ff5a:	2b02      	cmp	r3, #2
 801ff5c:	d008      	beq.n	801ff70 <HAL_DMA_Abort+0x32>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 801ff5e:	687b      	ldr	r3, [r7, #4]
 801ff60:	2280      	movs	r2, #128	; 0x80
 801ff62:	655a      	str	r2, [r3, #84]	; 0x54
    
    /* Process Unlocked */
    __HAL_UNLOCK(hdma);
 801ff64:	687b      	ldr	r3, [r7, #4]
 801ff66:	2200      	movs	r2, #0
 801ff68:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
    
    return HAL_ERROR;
 801ff6c:	2301      	movs	r3, #1
 801ff6e:	e052      	b.n	8020016 <HAL_DMA_Abort+0xd8>
  }
  else
  {
    /* Disable all the transfer interrupts */
    hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 801ff70:	687b      	ldr	r3, [r7, #4]
 801ff72:	681b      	ldr	r3, [r3, #0]
 801ff74:	681a      	ldr	r2, [r3, #0]
 801ff76:	687b      	ldr	r3, [r7, #4]
 801ff78:	681b      	ldr	r3, [r3, #0]
 801ff7a:	f022 0216 	bic.w	r2, r2, #22
 801ff7e:	601a      	str	r2, [r3, #0]
    hdma->Instance->FCR &= ~(DMA_IT_FE);
 801ff80:	687b      	ldr	r3, [r7, #4]
 801ff82:	681b      	ldr	r3, [r3, #0]
 801ff84:	695a      	ldr	r2, [r3, #20]
 801ff86:	687b      	ldr	r3, [r7, #4]
 801ff88:	681b      	ldr	r3, [r3, #0]
 801ff8a:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 801ff8e:	615a      	str	r2, [r3, #20]
    
    if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 801ff90:	687b      	ldr	r3, [r7, #4]
 801ff92:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801ff94:	2b00      	cmp	r3, #0
 801ff96:	d103      	bne.n	801ffa0 <HAL_DMA_Abort+0x62>
 801ff98:	687b      	ldr	r3, [r7, #4]
 801ff9a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801ff9c:	2b00      	cmp	r3, #0
 801ff9e:	d007      	beq.n	801ffb0 <HAL_DMA_Abort+0x72>
    {
      hdma->Instance->CR  &= ~(DMA_IT_HT);
 801ffa0:	687b      	ldr	r3, [r7, #4]
 801ffa2:	681b      	ldr	r3, [r3, #0]
 801ffa4:	681a      	ldr	r2, [r3, #0]
 801ffa6:	687b      	ldr	r3, [r7, #4]
 801ffa8:	681b      	ldr	r3, [r3, #0]
 801ffaa:	f022 0208 	bic.w	r2, r2, #8
 801ffae:	601a      	str	r2, [r3, #0]
    }
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 801ffb0:	687b      	ldr	r3, [r7, #4]
 801ffb2:	681b      	ldr	r3, [r3, #0]
 801ffb4:	681a      	ldr	r2, [r3, #0]
 801ffb6:	687b      	ldr	r3, [r7, #4]
 801ffb8:	681b      	ldr	r3, [r3, #0]
 801ffba:	f022 0201 	bic.w	r2, r2, #1
 801ffbe:	601a      	str	r2, [r3, #0]
    
    /* Check if the DMA Stream is effectively disabled */
    while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 801ffc0:	e013      	b.n	801ffea <HAL_DMA_Abort+0xac>
    {
      /* Check for the Timeout */
      if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 801ffc2:	f7ff fe7b 	bl	801fcbc <HAL_GetTick>
 801ffc6:	4602      	mov	r2, r0
 801ffc8:	68bb      	ldr	r3, [r7, #8]
 801ffca:	1ad3      	subs	r3, r2, r3
 801ffcc:	2b05      	cmp	r3, #5
 801ffce:	d90c      	bls.n	801ffea <HAL_DMA_Abort+0xac>
      {
        /* Update error code */
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 801ffd0:	687b      	ldr	r3, [r7, #4]
 801ffd2:	2220      	movs	r2, #32
 801ffd4:	655a      	str	r2, [r3, #84]	; 0x54
        
        /* Process Unlocked */
        __HAL_UNLOCK(hdma);
 801ffd6:	687b      	ldr	r3, [r7, #4]
 801ffd8:	2200      	movs	r2, #0
 801ffda:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
        
        /* Change the DMA state */
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 801ffde:	687b      	ldr	r3, [r7, #4]
 801ffe0:	2203      	movs	r2, #3
 801ffe2:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
        
        return HAL_TIMEOUT;
 801ffe6:	2303      	movs	r3, #3
 801ffe8:	e015      	b.n	8020016 <HAL_DMA_Abort+0xd8>
    while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 801ffea:	687b      	ldr	r3, [r7, #4]
 801ffec:	681b      	ldr	r3, [r3, #0]
 801ffee:	681b      	ldr	r3, [r3, #0]
 801fff0:	f003 0301 	and.w	r3, r3, #1
 801fff4:	2b00      	cmp	r3, #0
 801fff6:	d1e4      	bne.n	801ffc2 <HAL_DMA_Abort+0x84>
      }
    }
    
    /* Clear all interrupt flags at correct offset within the register */
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 801fff8:	687b      	ldr	r3, [r7, #4]
 801fffa:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801fffc:	223f      	movs	r2, #63	; 0x3f
 801fffe:	409a      	lsls	r2, r3
 8020000:	68fb      	ldr	r3, [r7, #12]
 8020002:	609a      	str	r2, [r3, #8]
    
    /* Process Unlocked */
    __HAL_UNLOCK(hdma);
 8020004:	687b      	ldr	r3, [r7, #4]
 8020006:	2200      	movs	r2, #0
 8020008:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
    
    /* Change the DMA state*/
    hdma->State = HAL_DMA_STATE_READY;
 802000c:	687b      	ldr	r3, [r7, #4]
 802000e:	2201      	movs	r2, #1
 8020010:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
  }
  return HAL_OK;
 8020014:	2300      	movs	r3, #0
}
 8020016:	4618      	mov	r0, r3
 8020018:	3710      	adds	r7, #16
 802001a:	46bd      	mov	sp, r7
 802001c:	bd80      	pop	{r7, pc}

0802001e <HAL_DMA_Abort_IT>:
  * @param  hdma   pointer to a DMA_HandleTypeDef structure that contains
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
 802001e:	b480      	push	{r7}
 8020020:	b083      	sub	sp, #12
 8020022:	af00      	add	r7, sp, #0
 8020024:	6078      	str	r0, [r7, #4]
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8020026:	687b      	ldr	r3, [r7, #4]
 8020028:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 802002c:	b2db      	uxtb	r3, r3
 802002e:	2b02      	cmp	r3, #2
 8020030:	d004      	beq.n	802003c <HAL_DMA_Abort_IT+0x1e>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8020032:	687b      	ldr	r3, [r7, #4]
 8020034:	2280      	movs	r2, #128	; 0x80
 8020036:	655a      	str	r2, [r3, #84]	; 0x54
    return HAL_ERROR;
 8020038:	2301      	movs	r3, #1
 802003a:	e00c      	b.n	8020056 <HAL_DMA_Abort_IT+0x38>
  }
  else
  {
    /* Set Abort State  */
    hdma->State = HAL_DMA_STATE_ABORT;
 802003c:	687b      	ldr	r3, [r7, #4]
 802003e:	2205      	movs	r2, #5
 8020040:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 8020044:	687b      	ldr	r3, [r7, #4]
 8020046:	681b      	ldr	r3, [r3, #0]
 8020048:	681a      	ldr	r2, [r3, #0]
 802004a:	687b      	ldr	r3, [r7, #4]
 802004c:	681b      	ldr	r3, [r3, #0]
 802004e:	f022 0201 	bic.w	r2, r2, #1
 8020052:	601a      	str	r2, [r3, #0]
  }

  return HAL_OK;
 8020054:	2300      	movs	r3, #0
}
 8020056:	4618      	mov	r0, r3
 8020058:	370c      	adds	r7, #12
 802005a:	46bd      	mov	sp, r7
 802005c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8020060:	4770      	bx	lr
	...

08020064 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8020064:	b480      	push	{r7}
 8020066:	b089      	sub	sp, #36	; 0x24
 8020068:	af00      	add	r7, sp, #0
 802006a:	6078      	str	r0, [r7, #4]
 802006c:	6039      	str	r1, [r7, #0]
  uint32_t position = 0x00;
 802006e:	2300      	movs	r3, #0
 8020070:	61fb      	str	r3, [r7, #28]
  uint32_t ioposition = 0x00;
 8020072:	2300      	movs	r3, #0
 8020074:	617b      	str	r3, [r7, #20]
  uint32_t iocurrent = 0x00;
 8020076:	2300      	movs	r3, #0
 8020078:	613b      	str	r3, [r7, #16]
  uint32_t temp = 0x00;
 802007a:	2300      	movs	r3, #0
 802007c:	61bb      	str	r3, [r7, #24]
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
  assert_param(IS_GPIO_PULL(GPIO_Init->Pull));

  /* Configure the port pins */
  for(position = 0; position < GPIO_NUMBER; position++)
 802007e:	2300      	movs	r3, #0
 8020080:	61fb      	str	r3, [r7, #28]
 8020082:	e175      	b.n	8020370 <HAL_GPIO_Init+0x30c>
  {
    /* Get the IO position */
    ioposition = ((uint32_t)0x01) << position;
 8020084:	2201      	movs	r2, #1
 8020086:	69fb      	ldr	r3, [r7, #28]
 8020088:	fa02 f303 	lsl.w	r3, r2, r3
 802008c:	617b      	str	r3, [r7, #20]
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 802008e:	683b      	ldr	r3, [r7, #0]
 8020090:	681b      	ldr	r3, [r3, #0]
 8020092:	697a      	ldr	r2, [r7, #20]
 8020094:	4013      	ands	r3, r2
 8020096:	613b      	str	r3, [r7, #16]

    if(iocurrent == ioposition)
 8020098:	693a      	ldr	r2, [r7, #16]
 802009a:	697b      	ldr	r3, [r7, #20]
 802009c:	429a      	cmp	r2, r3
 802009e:	f040 8164 	bne.w	802036a <HAL_GPIO_Init+0x306>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 80200a2:	683b      	ldr	r3, [r7, #0]
 80200a4:	685b      	ldr	r3, [r3, #4]
 80200a6:	2b01      	cmp	r3, #1
 80200a8:	d00b      	beq.n	80200c2 <HAL_GPIO_Init+0x5e>
 80200aa:	683b      	ldr	r3, [r7, #0]
 80200ac:	685b      	ldr	r3, [r3, #4]
 80200ae:	2b02      	cmp	r3, #2
 80200b0:	d007      	beq.n	80200c2 <HAL_GPIO_Init+0x5e>
         (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 80200b2:	683b      	ldr	r3, [r7, #0]
 80200b4:	685b      	ldr	r3, [r3, #4]
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 80200b6:	2b11      	cmp	r3, #17
 80200b8:	d003      	beq.n	80200c2 <HAL_GPIO_Init+0x5e>
         (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 80200ba:	683b      	ldr	r3, [r7, #0]
 80200bc:	685b      	ldr	r3, [r3, #4]
 80200be:	2b12      	cmp	r3, #18
 80200c0:	d130      	bne.n	8020124 <HAL_GPIO_Init+0xc0>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR; 
 80200c2:	687b      	ldr	r3, [r7, #4]
 80200c4:	689b      	ldr	r3, [r3, #8]
 80200c6:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2));
 80200c8:	69fb      	ldr	r3, [r7, #28]
 80200ca:	005b      	lsls	r3, r3, #1
 80200cc:	2203      	movs	r2, #3
 80200ce:	fa02 f303 	lsl.w	r3, r2, r3
 80200d2:	43db      	mvns	r3, r3
 80200d4:	69ba      	ldr	r2, [r7, #24]
 80200d6:	4013      	ands	r3, r2
 80200d8:	61bb      	str	r3, [r7, #24]
        temp |= (GPIO_Init->Speed << (position * 2));
 80200da:	683b      	ldr	r3, [r7, #0]
 80200dc:	68da      	ldr	r2, [r3, #12]
 80200de:	69fb      	ldr	r3, [r7, #28]
 80200e0:	005b      	lsls	r3, r3, #1
 80200e2:	fa02 f303 	lsl.w	r3, r2, r3
 80200e6:	69ba      	ldr	r2, [r7, #24]
 80200e8:	4313      	orrs	r3, r2
 80200ea:	61bb      	str	r3, [r7, #24]
        GPIOx->OSPEEDR = temp;
 80200ec:	687b      	ldr	r3, [r7, #4]
 80200ee:	69ba      	ldr	r2, [r7, #24]
 80200f0:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 80200f2:	687b      	ldr	r3, [r7, #4]
 80200f4:	685b      	ldr	r3, [r3, #4]
 80200f6:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 80200f8:	2201      	movs	r2, #1
 80200fa:	69fb      	ldr	r3, [r7, #28]
 80200fc:	fa02 f303 	lsl.w	r3, r2, r3
 8020100:	43db      	mvns	r3, r3
 8020102:	69ba      	ldr	r2, [r7, #24]
 8020104:	4013      	ands	r3, r2
 8020106:	61bb      	str	r3, [r7, #24]
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4) << position);
 8020108:	683b      	ldr	r3, [r7, #0]
 802010a:	685b      	ldr	r3, [r3, #4]
 802010c:	091b      	lsrs	r3, r3, #4
 802010e:	f003 0201 	and.w	r2, r3, #1
 8020112:	69fb      	ldr	r3, [r7, #28]
 8020114:	fa02 f303 	lsl.w	r3, r2, r3
 8020118:	69ba      	ldr	r2, [r7, #24]
 802011a:	4313      	orrs	r3, r2
 802011c:	61bb      	str	r3, [r7, #24]
        GPIOx->OTYPER = temp;
 802011e:	687b      	ldr	r3, [r7, #4]
 8020120:	69ba      	ldr	r2, [r7, #24]
 8020122:	605a      	str	r2, [r3, #4]
      }

      /* Activate the Pull-up or Pull down resistor for the current IO */
      temp = GPIOx->PUPDR;
 8020124:	687b      	ldr	r3, [r7, #4]
 8020126:	68db      	ldr	r3, [r3, #12]
 8020128:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2));
 802012a:	69fb      	ldr	r3, [r7, #28]
 802012c:	005b      	lsls	r3, r3, #1
 802012e:	2203      	movs	r2, #3
 8020130:	fa02 f303 	lsl.w	r3, r2, r3
 8020134:	43db      	mvns	r3, r3
 8020136:	69ba      	ldr	r2, [r7, #24]
 8020138:	4013      	ands	r3, r2
 802013a:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Pull) << (position * 2));
 802013c:	683b      	ldr	r3, [r7, #0]
 802013e:	689a      	ldr	r2, [r3, #8]
 8020140:	69fb      	ldr	r3, [r7, #28]
 8020142:	005b      	lsls	r3, r3, #1
 8020144:	fa02 f303 	lsl.w	r3, r2, r3
 8020148:	69ba      	ldr	r2, [r7, #24]
 802014a:	4313      	orrs	r3, r2
 802014c:	61bb      	str	r3, [r7, #24]
      GPIOx->PUPDR = temp;
 802014e:	687b      	ldr	r3, [r7, #4]
 8020150:	69ba      	ldr	r2, [r7, #24]
 8020152:	60da      	str	r2, [r3, #12]

      /* In case of Alternate function mode selection */
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8020154:	683b      	ldr	r3, [r7, #0]
 8020156:	685b      	ldr	r3, [r3, #4]
 8020158:	2b02      	cmp	r3, #2
 802015a:	d003      	beq.n	8020164 <HAL_GPIO_Init+0x100>
 802015c:	683b      	ldr	r3, [r7, #0]
 802015e:	685b      	ldr	r3, [r3, #4]
 8020160:	2b12      	cmp	r3, #18
 8020162:	d123      	bne.n	80201ac <HAL_GPIO_Init+0x148>
      {
        /* Check the Alternate function parameter */
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));

        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3];
 8020164:	69fb      	ldr	r3, [r7, #28]
 8020166:	08da      	lsrs	r2, r3, #3
 8020168:	687b      	ldr	r3, [r7, #4]
 802016a:	3208      	adds	r2, #8
 802016c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8020170:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)0xF << ((uint32_t)(position & (uint32_t)0x07) * 4)) ;
 8020172:	69fb      	ldr	r3, [r7, #28]
 8020174:	f003 0307 	and.w	r3, r3, #7
 8020178:	009b      	lsls	r3, r3, #2
 802017a:	220f      	movs	r2, #15
 802017c:	fa02 f303 	lsl.w	r3, r2, r3
 8020180:	43db      	mvns	r3, r3
 8020182:	69ba      	ldr	r2, [r7, #24]
 8020184:	4013      	ands	r3, r2
 8020186:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & (uint32_t)0x07) * 4));
 8020188:	683b      	ldr	r3, [r7, #0]
 802018a:	691a      	ldr	r2, [r3, #16]
 802018c:	69fb      	ldr	r3, [r7, #28]
 802018e:	f003 0307 	and.w	r3, r3, #7
 8020192:	009b      	lsls	r3, r3, #2
 8020194:	fa02 f303 	lsl.w	r3, r2, r3
 8020198:	69ba      	ldr	r2, [r7, #24]
 802019a:	4313      	orrs	r3, r2
 802019c:	61bb      	str	r3, [r7, #24]
        GPIOx->AFR[position >> 3] = temp;
 802019e:	69fb      	ldr	r3, [r7, #28]
 80201a0:	08da      	lsrs	r2, r3, #3
 80201a2:	687b      	ldr	r3, [r7, #4]
 80201a4:	3208      	adds	r2, #8
 80201a6:	69b9      	ldr	r1, [r7, #24]
 80201a8:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
      }
      
      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 80201ac:	687b      	ldr	r3, [r7, #4]
 80201ae:	681b      	ldr	r3, [r3, #0]
 80201b0:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2));
 80201b2:	69fb      	ldr	r3, [r7, #28]
 80201b4:	005b      	lsls	r3, r3, #1
 80201b6:	2203      	movs	r2, #3
 80201b8:	fa02 f303 	lsl.w	r3, r2, r3
 80201bc:	43db      	mvns	r3, r3
 80201be:	69ba      	ldr	r2, [r7, #24]
 80201c0:	4013      	ands	r3, r2
 80201c2:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2));
 80201c4:	683b      	ldr	r3, [r7, #0]
 80201c6:	685b      	ldr	r3, [r3, #4]
 80201c8:	f003 0203 	and.w	r2, r3, #3
 80201cc:	69fb      	ldr	r3, [r7, #28]
 80201ce:	005b      	lsls	r3, r3, #1
 80201d0:	fa02 f303 	lsl.w	r3, r2, r3
 80201d4:	69ba      	ldr	r2, [r7, #24]
 80201d6:	4313      	orrs	r3, r2
 80201d8:	61bb      	str	r3, [r7, #24]
      GPIOx->MODER = temp;
 80201da:	687b      	ldr	r3, [r7, #4]
 80201dc:	69ba      	ldr	r2, [r7, #24]
 80201de:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 80201e0:	683b      	ldr	r3, [r7, #0]
 80201e2:	685b      	ldr	r3, [r3, #4]
 80201e4:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80201e8:	2b00      	cmp	r3, #0
 80201ea:	f000 80be 	beq.w	802036a <HAL_GPIO_Init+0x306>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80201ee:	4b66      	ldr	r3, [pc, #408]	; (8020388 <HAL_GPIO_Init+0x324>)
 80201f0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80201f2:	4a65      	ldr	r2, [pc, #404]	; (8020388 <HAL_GPIO_Init+0x324>)
 80201f4:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80201f8:	6453      	str	r3, [r2, #68]	; 0x44
 80201fa:	4b63      	ldr	r3, [pc, #396]	; (8020388 <HAL_GPIO_Init+0x324>)
 80201fc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80201fe:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8020202:	60fb      	str	r3, [r7, #12]
 8020204:	68fb      	ldr	r3, [r7, #12]

        temp = SYSCFG->EXTICR[position >> 2];
 8020206:	4a61      	ldr	r2, [pc, #388]	; (802038c <HAL_GPIO_Init+0x328>)
 8020208:	69fb      	ldr	r3, [r7, #28]
 802020a:	089b      	lsrs	r3, r3, #2
 802020c:	3302      	adds	r3, #2
 802020e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8020212:	61bb      	str	r3, [r7, #24]
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
 8020214:	69fb      	ldr	r3, [r7, #28]
 8020216:	f003 0303 	and.w	r3, r3, #3
 802021a:	009b      	lsls	r3, r3, #2
 802021c:	220f      	movs	r2, #15
 802021e:	fa02 f303 	lsl.w	r3, r2, r3
 8020222:	43db      	mvns	r3, r3
 8020224:	69ba      	ldr	r2, [r7, #24]
 8020226:	4013      	ands	r3, r2
 8020228:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03)));
 802022a:	687b      	ldr	r3, [r7, #4]
 802022c:	4a58      	ldr	r2, [pc, #352]	; (8020390 <HAL_GPIO_Init+0x32c>)
 802022e:	4293      	cmp	r3, r2
 8020230:	d037      	beq.n	80202a2 <HAL_GPIO_Init+0x23e>
 8020232:	687b      	ldr	r3, [r7, #4]
 8020234:	4a57      	ldr	r2, [pc, #348]	; (8020394 <HAL_GPIO_Init+0x330>)
 8020236:	4293      	cmp	r3, r2
 8020238:	d031      	beq.n	802029e <HAL_GPIO_Init+0x23a>
 802023a:	687b      	ldr	r3, [r7, #4]
 802023c:	4a56      	ldr	r2, [pc, #344]	; (8020398 <HAL_GPIO_Init+0x334>)
 802023e:	4293      	cmp	r3, r2
 8020240:	d02b      	beq.n	802029a <HAL_GPIO_Init+0x236>
 8020242:	687b      	ldr	r3, [r7, #4]
 8020244:	4a55      	ldr	r2, [pc, #340]	; (802039c <HAL_GPIO_Init+0x338>)
 8020246:	4293      	cmp	r3, r2
 8020248:	d025      	beq.n	8020296 <HAL_GPIO_Init+0x232>
 802024a:	687b      	ldr	r3, [r7, #4]
 802024c:	4a54      	ldr	r2, [pc, #336]	; (80203a0 <HAL_GPIO_Init+0x33c>)
 802024e:	4293      	cmp	r3, r2
 8020250:	d01f      	beq.n	8020292 <HAL_GPIO_Init+0x22e>
 8020252:	687b      	ldr	r3, [r7, #4]
 8020254:	4a53      	ldr	r2, [pc, #332]	; (80203a4 <HAL_GPIO_Init+0x340>)
 8020256:	4293      	cmp	r3, r2
 8020258:	d019      	beq.n	802028e <HAL_GPIO_Init+0x22a>
 802025a:	687b      	ldr	r3, [r7, #4]
 802025c:	4a52      	ldr	r2, [pc, #328]	; (80203a8 <HAL_GPIO_Init+0x344>)
 802025e:	4293      	cmp	r3, r2
 8020260:	d013      	beq.n	802028a <HAL_GPIO_Init+0x226>
 8020262:	687b      	ldr	r3, [r7, #4]
 8020264:	4a51      	ldr	r2, [pc, #324]	; (80203ac <HAL_GPIO_Init+0x348>)
 8020266:	4293      	cmp	r3, r2
 8020268:	d00d      	beq.n	8020286 <HAL_GPIO_Init+0x222>
 802026a:	687b      	ldr	r3, [r7, #4]
 802026c:	4a50      	ldr	r2, [pc, #320]	; (80203b0 <HAL_GPIO_Init+0x34c>)
 802026e:	4293      	cmp	r3, r2
 8020270:	d007      	beq.n	8020282 <HAL_GPIO_Init+0x21e>
 8020272:	687b      	ldr	r3, [r7, #4]
 8020274:	4a4f      	ldr	r2, [pc, #316]	; (80203b4 <HAL_GPIO_Init+0x350>)
 8020276:	4293      	cmp	r3, r2
 8020278:	d101      	bne.n	802027e <HAL_GPIO_Init+0x21a>
 802027a:	2309      	movs	r3, #9
 802027c:	e012      	b.n	80202a4 <HAL_GPIO_Init+0x240>
 802027e:	230a      	movs	r3, #10
 8020280:	e010      	b.n	80202a4 <HAL_GPIO_Init+0x240>
 8020282:	2308      	movs	r3, #8
 8020284:	e00e      	b.n	80202a4 <HAL_GPIO_Init+0x240>
 8020286:	2307      	movs	r3, #7
 8020288:	e00c      	b.n	80202a4 <HAL_GPIO_Init+0x240>
 802028a:	2306      	movs	r3, #6
 802028c:	e00a      	b.n	80202a4 <HAL_GPIO_Init+0x240>
 802028e:	2305      	movs	r3, #5
 8020290:	e008      	b.n	80202a4 <HAL_GPIO_Init+0x240>
 8020292:	2304      	movs	r3, #4
 8020294:	e006      	b.n	80202a4 <HAL_GPIO_Init+0x240>
 8020296:	2303      	movs	r3, #3
 8020298:	e004      	b.n	80202a4 <HAL_GPIO_Init+0x240>
 802029a:	2302      	movs	r3, #2
 802029c:	e002      	b.n	80202a4 <HAL_GPIO_Init+0x240>
 802029e:	2301      	movs	r3, #1
 80202a0:	e000      	b.n	80202a4 <HAL_GPIO_Init+0x240>
 80202a2:	2300      	movs	r3, #0
 80202a4:	69fa      	ldr	r2, [r7, #28]
 80202a6:	f002 0203 	and.w	r2, r2, #3
 80202aa:	0092      	lsls	r2, r2, #2
 80202ac:	4093      	lsls	r3, r2
 80202ae:	69ba      	ldr	r2, [r7, #24]
 80202b0:	4313      	orrs	r3, r2
 80202b2:	61bb      	str	r3, [r7, #24]
        SYSCFG->EXTICR[position >> 2] = temp;
 80202b4:	4935      	ldr	r1, [pc, #212]	; (802038c <HAL_GPIO_Init+0x328>)
 80202b6:	69fb      	ldr	r3, [r7, #28]
 80202b8:	089b      	lsrs	r3, r3, #2
 80202ba:	3302      	adds	r3, #2
 80202bc:	69ba      	ldr	r2, [r7, #24]
 80202be:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 80202c2:	4b3d      	ldr	r3, [pc, #244]	; (80203b8 <HAL_GPIO_Init+0x354>)
 80202c4:	681b      	ldr	r3, [r3, #0]
 80202c6:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 80202c8:	693b      	ldr	r3, [r7, #16]
 80202ca:	43db      	mvns	r3, r3
 80202cc:	69ba      	ldr	r2, [r7, #24]
 80202ce:	4013      	ands	r3, r2
 80202d0:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 80202d2:	683b      	ldr	r3, [r7, #0]
 80202d4:	685b      	ldr	r3, [r3, #4]
 80202d6:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80202da:	2b00      	cmp	r3, #0
 80202dc:	d003      	beq.n	80202e6 <HAL_GPIO_Init+0x282>
        {
          temp |= iocurrent;
 80202de:	69ba      	ldr	r2, [r7, #24]
 80202e0:	693b      	ldr	r3, [r7, #16]
 80202e2:	4313      	orrs	r3, r2
 80202e4:	61bb      	str	r3, [r7, #24]
        }
        EXTI->IMR = temp;
 80202e6:	4a34      	ldr	r2, [pc, #208]	; (80203b8 <HAL_GPIO_Init+0x354>)
 80202e8:	69bb      	ldr	r3, [r7, #24]
 80202ea:	6013      	str	r3, [r2, #0]

        temp = EXTI->EMR;
 80202ec:	4b32      	ldr	r3, [pc, #200]	; (80203b8 <HAL_GPIO_Init+0x354>)
 80202ee:	685b      	ldr	r3, [r3, #4]
 80202f0:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 80202f2:	693b      	ldr	r3, [r7, #16]
 80202f4:	43db      	mvns	r3, r3
 80202f6:	69ba      	ldr	r2, [r7, #24]
 80202f8:	4013      	ands	r3, r2
 80202fa:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 80202fc:	683b      	ldr	r3, [r7, #0]
 80202fe:	685b      	ldr	r3, [r3, #4]
 8020300:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8020304:	2b00      	cmp	r3, #0
 8020306:	d003      	beq.n	8020310 <HAL_GPIO_Init+0x2ac>
        {
          temp |= iocurrent;
 8020308:	69ba      	ldr	r2, [r7, #24]
 802030a:	693b      	ldr	r3, [r7, #16]
 802030c:	4313      	orrs	r3, r2
 802030e:	61bb      	str	r3, [r7, #24]
        }
        EXTI->EMR = temp;
 8020310:	4a29      	ldr	r2, [pc, #164]	; (80203b8 <HAL_GPIO_Init+0x354>)
 8020312:	69bb      	ldr	r3, [r7, #24]
 8020314:	6053      	str	r3, [r2, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8020316:	4b28      	ldr	r3, [pc, #160]	; (80203b8 <HAL_GPIO_Init+0x354>)
 8020318:	689b      	ldr	r3, [r3, #8]
 802031a:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 802031c:	693b      	ldr	r3, [r7, #16]
 802031e:	43db      	mvns	r3, r3
 8020320:	69ba      	ldr	r2, [r7, #24]
 8020322:	4013      	ands	r3, r2
 8020324:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 8020326:	683b      	ldr	r3, [r7, #0]
 8020328:	685b      	ldr	r3, [r3, #4]
 802032a:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 802032e:	2b00      	cmp	r3, #0
 8020330:	d003      	beq.n	802033a <HAL_GPIO_Init+0x2d6>
        {
          temp |= iocurrent;
 8020332:	69ba      	ldr	r2, [r7, #24]
 8020334:	693b      	ldr	r3, [r7, #16]
 8020336:	4313      	orrs	r3, r2
 8020338:	61bb      	str	r3, [r7, #24]
        }
        EXTI->RTSR = temp;
 802033a:	4a1f      	ldr	r2, [pc, #124]	; (80203b8 <HAL_GPIO_Init+0x354>)
 802033c:	69bb      	ldr	r3, [r7, #24]
 802033e:	6093      	str	r3, [r2, #8]

        temp = EXTI->FTSR;
 8020340:	4b1d      	ldr	r3, [pc, #116]	; (80203b8 <HAL_GPIO_Init+0x354>)
 8020342:	68db      	ldr	r3, [r3, #12]
 8020344:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8020346:	693b      	ldr	r3, [r7, #16]
 8020348:	43db      	mvns	r3, r3
 802034a:	69ba      	ldr	r2, [r7, #24]
 802034c:	4013      	ands	r3, r2
 802034e:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 8020350:	683b      	ldr	r3, [r7, #0]
 8020352:	685b      	ldr	r3, [r3, #4]
 8020354:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8020358:	2b00      	cmp	r3, #0
 802035a:	d003      	beq.n	8020364 <HAL_GPIO_Init+0x300>
        {
          temp |= iocurrent;
 802035c:	69ba      	ldr	r2, [r7, #24]
 802035e:	693b      	ldr	r3, [r7, #16]
 8020360:	4313      	orrs	r3, r2
 8020362:	61bb      	str	r3, [r7, #24]
        }
        EXTI->FTSR = temp;
 8020364:	4a14      	ldr	r2, [pc, #80]	; (80203b8 <HAL_GPIO_Init+0x354>)
 8020366:	69bb      	ldr	r3, [r7, #24]
 8020368:	60d3      	str	r3, [r2, #12]
  for(position = 0; position < GPIO_NUMBER; position++)
 802036a:	69fb      	ldr	r3, [r7, #28]
 802036c:	3301      	adds	r3, #1
 802036e:	61fb      	str	r3, [r7, #28]
 8020370:	69fb      	ldr	r3, [r7, #28]
 8020372:	2b0f      	cmp	r3, #15
 8020374:	f67f ae86 	bls.w	8020084 <HAL_GPIO_Init+0x20>
      }
    }
  }
}
 8020378:	bf00      	nop
 802037a:	bf00      	nop
 802037c:	3724      	adds	r7, #36	; 0x24
 802037e:	46bd      	mov	sp, r7
 8020380:	f85d 7b04 	ldr.w	r7, [sp], #4
 8020384:	4770      	bx	lr
 8020386:	bf00      	nop
 8020388:	40023800 	.word	0x40023800
 802038c:	40013800 	.word	0x40013800
 8020390:	40020000 	.word	0x40020000
 8020394:	40020400 	.word	0x40020400
 8020398:	40020800 	.word	0x40020800
 802039c:	40020c00 	.word	0x40020c00
 80203a0:	40021000 	.word	0x40021000
 80203a4:	40021400 	.word	0x40021400
 80203a8:	40021800 	.word	0x40021800
 80203ac:	40021c00 	.word	0x40021c00
 80203b0:	40022000 	.word	0x40022000
 80203b4:	40022400 	.word	0x40022400
 80203b8:	40013c00 	.word	0x40013c00

080203bc <HAL_PWREx_EnableOverDrive>:
  *         During the Over-drive switch activation, no peripheral clocks should be enabled.   
  *         The peripheral clocks must be enabled once the Over-drive mode is activated.   
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
 80203bc:	b580      	push	{r7, lr}
 80203be:	b082      	sub	sp, #8
 80203c0:	af00      	add	r7, sp, #0
  uint32_t tickstart = 0;
 80203c2:	2300      	movs	r3, #0
 80203c4:	607b      	str	r3, [r7, #4]

  __HAL_RCC_PWR_CLK_ENABLE();
 80203c6:	4b23      	ldr	r3, [pc, #140]	; (8020454 <HAL_PWREx_EnableOverDrive+0x98>)
 80203c8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80203ca:	4a22      	ldr	r2, [pc, #136]	; (8020454 <HAL_PWREx_EnableOverDrive+0x98>)
 80203cc:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80203d0:	6413      	str	r3, [r2, #64]	; 0x40
 80203d2:	4b20      	ldr	r3, [pc, #128]	; (8020454 <HAL_PWREx_EnableOverDrive+0x98>)
 80203d4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80203d6:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80203da:	603b      	str	r3, [r7, #0]
 80203dc:	683b      	ldr	r3, [r7, #0]
  
  /* Enable the Over-drive to extend the clock frequency to 216 MHz */
  __HAL_PWR_OVERDRIVE_ENABLE();
 80203de:	4b1e      	ldr	r3, [pc, #120]	; (8020458 <HAL_PWREx_EnableOverDrive+0x9c>)
 80203e0:	681b      	ldr	r3, [r3, #0]
 80203e2:	4a1d      	ldr	r2, [pc, #116]	; (8020458 <HAL_PWREx_EnableOverDrive+0x9c>)
 80203e4:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80203e8:	6013      	str	r3, [r2, #0]

  /* Get tick */
  tickstart = HAL_GetTick();
 80203ea:	f7ff fc67 	bl	801fcbc <HAL_GetTick>
 80203ee:	6078      	str	r0, [r7, #4]

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 80203f0:	e009      	b.n	8020406 <HAL_PWREx_EnableOverDrive+0x4a>
  {
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 80203f2:	f7ff fc63 	bl	801fcbc <HAL_GetTick>
 80203f6:	4602      	mov	r2, r0
 80203f8:	687b      	ldr	r3, [r7, #4]
 80203fa:	1ad3      	subs	r3, r2, r3
 80203fc:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8020400:	d901      	bls.n	8020406 <HAL_PWREx_EnableOverDrive+0x4a>
    {
      return HAL_TIMEOUT;
 8020402:	2303      	movs	r3, #3
 8020404:	e022      	b.n	802044c <HAL_PWREx_EnableOverDrive+0x90>
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 8020406:	4b14      	ldr	r3, [pc, #80]	; (8020458 <HAL_PWREx_EnableOverDrive+0x9c>)
 8020408:	685b      	ldr	r3, [r3, #4]
 802040a:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 802040e:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8020412:	d1ee      	bne.n	80203f2 <HAL_PWREx_EnableOverDrive+0x36>
    }
  }
  
  /* Enable the Over-drive switch */
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 8020414:	4b10      	ldr	r3, [pc, #64]	; (8020458 <HAL_PWREx_EnableOverDrive+0x9c>)
 8020416:	681b      	ldr	r3, [r3, #0]
 8020418:	4a0f      	ldr	r2, [pc, #60]	; (8020458 <HAL_PWREx_EnableOverDrive+0x9c>)
 802041a:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 802041e:	6013      	str	r3, [r2, #0]

  /* Get tick */
  tickstart = HAL_GetTick();
 8020420:	f7ff fc4c 	bl	801fcbc <HAL_GetTick>
 8020424:	6078      	str	r0, [r7, #4]

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 8020426:	e009      	b.n	802043c <HAL_PWREx_EnableOverDrive+0x80>
  {
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 8020428:	f7ff fc48 	bl	801fcbc <HAL_GetTick>
 802042c:	4602      	mov	r2, r0
 802042e:	687b      	ldr	r3, [r7, #4]
 8020430:	1ad3      	subs	r3, r2, r3
 8020432:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8020436:	d901      	bls.n	802043c <HAL_PWREx_EnableOverDrive+0x80>
    {
      return HAL_TIMEOUT;
 8020438:	2303      	movs	r3, #3
 802043a:	e007      	b.n	802044c <HAL_PWREx_EnableOverDrive+0x90>
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 802043c:	4b06      	ldr	r3, [pc, #24]	; (8020458 <HAL_PWREx_EnableOverDrive+0x9c>)
 802043e:	685b      	ldr	r3, [r3, #4]
 8020440:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8020444:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8020448:	d1ee      	bne.n	8020428 <HAL_PWREx_EnableOverDrive+0x6c>
    }
  } 
  return HAL_OK;
 802044a:	2300      	movs	r3, #0
}
 802044c:	4618      	mov	r0, r3
 802044e:	3708      	adds	r7, #8
 8020450:	46bd      	mov	sp, r7
 8020452:	bd80      	pop	{r7, pc}
 8020454:	40023800 	.word	0x40023800
 8020458:	40007000 	.word	0x40007000

0802045c <HAL_RCC_OscConfig>:
  *         supported by this function. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 802045c:	b580      	push	{r7, lr}
 802045e:	b086      	sub	sp, #24
 8020460:	af00      	add	r7, sp, #0
 8020462:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;
  uint32_t pll_config;
  FlagStatus pwrclkchanged = RESET;
 8020464:	2300      	movs	r3, #0
 8020466:	75fb      	strb	r3, [r7, #23]

  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
 8020468:	687b      	ldr	r3, [r7, #4]
 802046a:	2b00      	cmp	r3, #0
 802046c:	d101      	bne.n	8020472 <HAL_RCC_OscConfig+0x16>
  {
    return HAL_ERROR;
 802046e:	2301      	movs	r3, #1
 8020470:	e291      	b.n	8020996 <HAL_RCC_OscConfig+0x53a>

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));

  /*------------------------------- HSE Configuration ------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8020472:	687b      	ldr	r3, [r7, #4]
 8020474:	681b      	ldr	r3, [r3, #0]
 8020476:	f003 0301 	and.w	r3, r3, #1
 802047a:	2b00      	cmp	r3, #0
 802047c:	f000 8087 	beq.w	802058e <HAL_RCC_OscConfig+0x132>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL, It can not be disabled */
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE)
 8020480:	4b96      	ldr	r3, [pc, #600]	; (80206dc <HAL_RCC_OscConfig+0x280>)
 8020482:	689b      	ldr	r3, [r3, #8]
 8020484:	f003 030c 	and.w	r3, r3, #12
 8020488:	2b04      	cmp	r3, #4
 802048a:	d00c      	beq.n	80204a6 <HAL_RCC_OscConfig+0x4a>
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 802048c:	4b93      	ldr	r3, [pc, #588]	; (80206dc <HAL_RCC_OscConfig+0x280>)
 802048e:	689b      	ldr	r3, [r3, #8]
 8020490:	f003 030c 	and.w	r3, r3, #12
 8020494:	2b08      	cmp	r3, #8
 8020496:	d112      	bne.n	80204be <HAL_RCC_OscConfig+0x62>
 8020498:	4b90      	ldr	r3, [pc, #576]	; (80206dc <HAL_RCC_OscConfig+0x280>)
 802049a:	685b      	ldr	r3, [r3, #4]
 802049c:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80204a0:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 80204a4:	d10b      	bne.n	80204be <HAL_RCC_OscConfig+0x62>
    {
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 80204a6:	4b8d      	ldr	r3, [pc, #564]	; (80206dc <HAL_RCC_OscConfig+0x280>)
 80204a8:	681b      	ldr	r3, [r3, #0]
 80204aa:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80204ae:	2b00      	cmp	r3, #0
 80204b0:	d06c      	beq.n	802058c <HAL_RCC_OscConfig+0x130>
 80204b2:	687b      	ldr	r3, [r7, #4]
 80204b4:	685b      	ldr	r3, [r3, #4]
 80204b6:	2b00      	cmp	r3, #0
 80204b8:	d168      	bne.n	802058c <HAL_RCC_OscConfig+0x130>
      {
        return HAL_ERROR;
 80204ba:	2301      	movs	r3, #1
 80204bc:	e26b      	b.n	8020996 <HAL_RCC_OscConfig+0x53a>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80204be:	687b      	ldr	r3, [r7, #4]
 80204c0:	685b      	ldr	r3, [r3, #4]
 80204c2:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80204c6:	d106      	bne.n	80204d6 <HAL_RCC_OscConfig+0x7a>
 80204c8:	4b84      	ldr	r3, [pc, #528]	; (80206dc <HAL_RCC_OscConfig+0x280>)
 80204ca:	681b      	ldr	r3, [r3, #0]
 80204cc:	4a83      	ldr	r2, [pc, #524]	; (80206dc <HAL_RCC_OscConfig+0x280>)
 80204ce:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80204d2:	6013      	str	r3, [r2, #0]
 80204d4:	e02e      	b.n	8020534 <HAL_RCC_OscConfig+0xd8>
 80204d6:	687b      	ldr	r3, [r7, #4]
 80204d8:	685b      	ldr	r3, [r3, #4]
 80204da:	2b00      	cmp	r3, #0
 80204dc:	d10c      	bne.n	80204f8 <HAL_RCC_OscConfig+0x9c>
 80204de:	4b7f      	ldr	r3, [pc, #508]	; (80206dc <HAL_RCC_OscConfig+0x280>)
 80204e0:	681b      	ldr	r3, [r3, #0]
 80204e2:	4a7e      	ldr	r2, [pc, #504]	; (80206dc <HAL_RCC_OscConfig+0x280>)
 80204e4:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80204e8:	6013      	str	r3, [r2, #0]
 80204ea:	4b7c      	ldr	r3, [pc, #496]	; (80206dc <HAL_RCC_OscConfig+0x280>)
 80204ec:	681b      	ldr	r3, [r3, #0]
 80204ee:	4a7b      	ldr	r2, [pc, #492]	; (80206dc <HAL_RCC_OscConfig+0x280>)
 80204f0:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80204f4:	6013      	str	r3, [r2, #0]
 80204f6:	e01d      	b.n	8020534 <HAL_RCC_OscConfig+0xd8>
 80204f8:	687b      	ldr	r3, [r7, #4]
 80204fa:	685b      	ldr	r3, [r3, #4]
 80204fc:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8020500:	d10c      	bne.n	802051c <HAL_RCC_OscConfig+0xc0>
 8020502:	4b76      	ldr	r3, [pc, #472]	; (80206dc <HAL_RCC_OscConfig+0x280>)
 8020504:	681b      	ldr	r3, [r3, #0]
 8020506:	4a75      	ldr	r2, [pc, #468]	; (80206dc <HAL_RCC_OscConfig+0x280>)
 8020508:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 802050c:	6013      	str	r3, [r2, #0]
 802050e:	4b73      	ldr	r3, [pc, #460]	; (80206dc <HAL_RCC_OscConfig+0x280>)
 8020510:	681b      	ldr	r3, [r3, #0]
 8020512:	4a72      	ldr	r2, [pc, #456]	; (80206dc <HAL_RCC_OscConfig+0x280>)
 8020514:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8020518:	6013      	str	r3, [r2, #0]
 802051a:	e00b      	b.n	8020534 <HAL_RCC_OscConfig+0xd8>
 802051c:	4b6f      	ldr	r3, [pc, #444]	; (80206dc <HAL_RCC_OscConfig+0x280>)
 802051e:	681b      	ldr	r3, [r3, #0]
 8020520:	4a6e      	ldr	r2, [pc, #440]	; (80206dc <HAL_RCC_OscConfig+0x280>)
 8020522:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8020526:	6013      	str	r3, [r2, #0]
 8020528:	4b6c      	ldr	r3, [pc, #432]	; (80206dc <HAL_RCC_OscConfig+0x280>)
 802052a:	681b      	ldr	r3, [r3, #0]
 802052c:	4a6b      	ldr	r2, [pc, #428]	; (80206dc <HAL_RCC_OscConfig+0x280>)
 802052e:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8020532:	6013      	str	r3, [r2, #0]

      /* Check the HSE State */
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 8020534:	687b      	ldr	r3, [r7, #4]
 8020536:	685b      	ldr	r3, [r3, #4]
 8020538:	2b00      	cmp	r3, #0
 802053a:	d013      	beq.n	8020564 <HAL_RCC_OscConfig+0x108>
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 802053c:	f7ff fbbe 	bl	801fcbc <HAL_GetTick>
 8020540:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8020542:	e008      	b.n	8020556 <HAL_RCC_OscConfig+0xfa>
        {
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8020544:	f7ff fbba 	bl	801fcbc <HAL_GetTick>
 8020548:	4602      	mov	r2, r0
 802054a:	693b      	ldr	r3, [r7, #16]
 802054c:	1ad3      	subs	r3, r2, r3
 802054e:	2b64      	cmp	r3, #100	; 0x64
 8020550:	d901      	bls.n	8020556 <HAL_RCC_OscConfig+0xfa>
          {
            return HAL_TIMEOUT;
 8020552:	2303      	movs	r3, #3
 8020554:	e21f      	b.n	8020996 <HAL_RCC_OscConfig+0x53a>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8020556:	4b61      	ldr	r3, [pc, #388]	; (80206dc <HAL_RCC_OscConfig+0x280>)
 8020558:	681b      	ldr	r3, [r3, #0]
 802055a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 802055e:	2b00      	cmp	r3, #0
 8020560:	d0f0      	beq.n	8020544 <HAL_RCC_OscConfig+0xe8>
 8020562:	e014      	b.n	802058e <HAL_RCC_OscConfig+0x132>
        }
      }
      else
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8020564:	f7ff fbaa 	bl	801fcbc <HAL_GetTick>
 8020568:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is bypassed or disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 802056a:	e008      	b.n	802057e <HAL_RCC_OscConfig+0x122>
        {
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 802056c:	f7ff fba6 	bl	801fcbc <HAL_GetTick>
 8020570:	4602      	mov	r2, r0
 8020572:	693b      	ldr	r3, [r7, #16]
 8020574:	1ad3      	subs	r3, r2, r3
 8020576:	2b64      	cmp	r3, #100	; 0x64
 8020578:	d901      	bls.n	802057e <HAL_RCC_OscConfig+0x122>
          {
            return HAL_TIMEOUT;
 802057a:	2303      	movs	r3, #3
 802057c:	e20b      	b.n	8020996 <HAL_RCC_OscConfig+0x53a>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 802057e:	4b57      	ldr	r3, [pc, #348]	; (80206dc <HAL_RCC_OscConfig+0x280>)
 8020580:	681b      	ldr	r3, [r3, #0]
 8020582:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8020586:	2b00      	cmp	r3, #0
 8020588:	d1f0      	bne.n	802056c <HAL_RCC_OscConfig+0x110>
 802058a:	e000      	b.n	802058e <HAL_RCC_OscConfig+0x132>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 802058c:	bf00      	nop
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 802058e:	687b      	ldr	r3, [r7, #4]
 8020590:	681b      	ldr	r3, [r3, #0]
 8020592:	f003 0302 	and.w	r3, r3, #2
 8020596:	2b00      	cmp	r3, #0
 8020598:	d069      	beq.n	802066e <HAL_RCC_OscConfig+0x212>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI)
 802059a:	4b50      	ldr	r3, [pc, #320]	; (80206dc <HAL_RCC_OscConfig+0x280>)
 802059c:	689b      	ldr	r3, [r3, #8]
 802059e:	f003 030c 	and.w	r3, r3, #12
 80205a2:	2b00      	cmp	r3, #0
 80205a4:	d00b      	beq.n	80205be <HAL_RCC_OscConfig+0x162>
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 80205a6:	4b4d      	ldr	r3, [pc, #308]	; (80206dc <HAL_RCC_OscConfig+0x280>)
 80205a8:	689b      	ldr	r3, [r3, #8]
 80205aa:	f003 030c 	and.w	r3, r3, #12
 80205ae:	2b08      	cmp	r3, #8
 80205b0:	d11c      	bne.n	80205ec <HAL_RCC_OscConfig+0x190>
 80205b2:	4b4a      	ldr	r3, [pc, #296]	; (80206dc <HAL_RCC_OscConfig+0x280>)
 80205b4:	685b      	ldr	r3, [r3, #4]
 80205b6:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80205ba:	2b00      	cmp	r3, #0
 80205bc:	d116      	bne.n	80205ec <HAL_RCC_OscConfig+0x190>
    {
      /* When HSI is used as system clock it will not disabled */
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 80205be:	4b47      	ldr	r3, [pc, #284]	; (80206dc <HAL_RCC_OscConfig+0x280>)
 80205c0:	681b      	ldr	r3, [r3, #0]
 80205c2:	f003 0302 	and.w	r3, r3, #2
 80205c6:	2b00      	cmp	r3, #0
 80205c8:	d005      	beq.n	80205d6 <HAL_RCC_OscConfig+0x17a>
 80205ca:	687b      	ldr	r3, [r7, #4]
 80205cc:	68db      	ldr	r3, [r3, #12]
 80205ce:	2b01      	cmp	r3, #1
 80205d0:	d001      	beq.n	80205d6 <HAL_RCC_OscConfig+0x17a>
      {
        return HAL_ERROR;
 80205d2:	2301      	movs	r3, #1
 80205d4:	e1df      	b.n	8020996 <HAL_RCC_OscConfig+0x53a>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80205d6:	4b41      	ldr	r3, [pc, #260]	; (80206dc <HAL_RCC_OscConfig+0x280>)
 80205d8:	681b      	ldr	r3, [r3, #0]
 80205da:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80205de:	687b      	ldr	r3, [r7, #4]
 80205e0:	691b      	ldr	r3, [r3, #16]
 80205e2:	00db      	lsls	r3, r3, #3
 80205e4:	493d      	ldr	r1, [pc, #244]	; (80206dc <HAL_RCC_OscConfig+0x280>)
 80205e6:	4313      	orrs	r3, r2
 80205e8:	600b      	str	r3, [r1, #0]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 80205ea:	e040      	b.n	802066e <HAL_RCC_OscConfig+0x212>
      }
    }
    else
    {
      /* Check the HSI State */
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
 80205ec:	687b      	ldr	r3, [r7, #4]
 80205ee:	68db      	ldr	r3, [r3, #12]
 80205f0:	2b00      	cmp	r3, #0
 80205f2:	d023      	beq.n	802063c <HAL_RCC_OscConfig+0x1e0>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 80205f4:	4b39      	ldr	r3, [pc, #228]	; (80206dc <HAL_RCC_OscConfig+0x280>)
 80205f6:	681b      	ldr	r3, [r3, #0]
 80205f8:	4a38      	ldr	r2, [pc, #224]	; (80206dc <HAL_RCC_OscConfig+0x280>)
 80205fa:	f043 0301 	orr.w	r3, r3, #1
 80205fe:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8020600:	f7ff fb5c 	bl	801fcbc <HAL_GetTick>
 8020604:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8020606:	e008      	b.n	802061a <HAL_RCC_OscConfig+0x1be>
        {
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8020608:	f7ff fb58 	bl	801fcbc <HAL_GetTick>
 802060c:	4602      	mov	r2, r0
 802060e:	693b      	ldr	r3, [r7, #16]
 8020610:	1ad3      	subs	r3, r2, r3
 8020612:	2b02      	cmp	r3, #2
 8020614:	d901      	bls.n	802061a <HAL_RCC_OscConfig+0x1be>
          {
            return HAL_TIMEOUT;
 8020616:	2303      	movs	r3, #3
 8020618:	e1bd      	b.n	8020996 <HAL_RCC_OscConfig+0x53a>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 802061a:	4b30      	ldr	r3, [pc, #192]	; (80206dc <HAL_RCC_OscConfig+0x280>)
 802061c:	681b      	ldr	r3, [r3, #0]
 802061e:	f003 0302 	and.w	r3, r3, #2
 8020622:	2b00      	cmp	r3, #0
 8020624:	d0f0      	beq.n	8020608 <HAL_RCC_OscConfig+0x1ac>
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8020626:	4b2d      	ldr	r3, [pc, #180]	; (80206dc <HAL_RCC_OscConfig+0x280>)
 8020628:	681b      	ldr	r3, [r3, #0]
 802062a:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 802062e:	687b      	ldr	r3, [r7, #4]
 8020630:	691b      	ldr	r3, [r3, #16]
 8020632:	00db      	lsls	r3, r3, #3
 8020634:	4929      	ldr	r1, [pc, #164]	; (80206dc <HAL_RCC_OscConfig+0x280>)
 8020636:	4313      	orrs	r3, r2
 8020638:	600b      	str	r3, [r1, #0]
 802063a:	e018      	b.n	802066e <HAL_RCC_OscConfig+0x212>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 802063c:	4b27      	ldr	r3, [pc, #156]	; (80206dc <HAL_RCC_OscConfig+0x280>)
 802063e:	681b      	ldr	r3, [r3, #0]
 8020640:	4a26      	ldr	r2, [pc, #152]	; (80206dc <HAL_RCC_OscConfig+0x280>)
 8020642:	f023 0301 	bic.w	r3, r3, #1
 8020646:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8020648:	f7ff fb38 	bl	801fcbc <HAL_GetTick>
 802064c:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 802064e:	e008      	b.n	8020662 <HAL_RCC_OscConfig+0x206>
        {
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8020650:	f7ff fb34 	bl	801fcbc <HAL_GetTick>
 8020654:	4602      	mov	r2, r0
 8020656:	693b      	ldr	r3, [r7, #16]
 8020658:	1ad3      	subs	r3, r2, r3
 802065a:	2b02      	cmp	r3, #2
 802065c:	d901      	bls.n	8020662 <HAL_RCC_OscConfig+0x206>
          {
            return HAL_TIMEOUT;
 802065e:	2303      	movs	r3, #3
 8020660:	e199      	b.n	8020996 <HAL_RCC_OscConfig+0x53a>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8020662:	4b1e      	ldr	r3, [pc, #120]	; (80206dc <HAL_RCC_OscConfig+0x280>)
 8020664:	681b      	ldr	r3, [r3, #0]
 8020666:	f003 0302 	and.w	r3, r3, #2
 802066a:	2b00      	cmp	r3, #0
 802066c:	d1f0      	bne.n	8020650 <HAL_RCC_OscConfig+0x1f4>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 802066e:	687b      	ldr	r3, [r7, #4]
 8020670:	681b      	ldr	r3, [r3, #0]
 8020672:	f003 0308 	and.w	r3, r3, #8
 8020676:	2b00      	cmp	r3, #0
 8020678:	d038      	beq.n	80206ec <HAL_RCC_OscConfig+0x290>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
 802067a:	687b      	ldr	r3, [r7, #4]
 802067c:	695b      	ldr	r3, [r3, #20]
 802067e:	2b00      	cmp	r3, #0
 8020680:	d019      	beq.n	80206b6 <HAL_RCC_OscConfig+0x25a>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 8020682:	4b16      	ldr	r3, [pc, #88]	; (80206dc <HAL_RCC_OscConfig+0x280>)
 8020684:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8020686:	4a15      	ldr	r2, [pc, #84]	; (80206dc <HAL_RCC_OscConfig+0x280>)
 8020688:	f043 0301 	orr.w	r3, r3, #1
 802068c:	6753      	str	r3, [r2, #116]	; 0x74

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 802068e:	f7ff fb15 	bl	801fcbc <HAL_GetTick>
 8020692:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8020694:	e008      	b.n	80206a8 <HAL_RCC_OscConfig+0x24c>
      {
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8020696:	f7ff fb11 	bl	801fcbc <HAL_GetTick>
 802069a:	4602      	mov	r2, r0
 802069c:	693b      	ldr	r3, [r7, #16]
 802069e:	1ad3      	subs	r3, r2, r3
 80206a0:	2b02      	cmp	r3, #2
 80206a2:	d901      	bls.n	80206a8 <HAL_RCC_OscConfig+0x24c>
        {
          return HAL_TIMEOUT;
 80206a4:	2303      	movs	r3, #3
 80206a6:	e176      	b.n	8020996 <HAL_RCC_OscConfig+0x53a>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80206a8:	4b0c      	ldr	r3, [pc, #48]	; (80206dc <HAL_RCC_OscConfig+0x280>)
 80206aa:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80206ac:	f003 0302 	and.w	r3, r3, #2
 80206b0:	2b00      	cmp	r3, #0
 80206b2:	d0f0      	beq.n	8020696 <HAL_RCC_OscConfig+0x23a>
 80206b4:	e01a      	b.n	80206ec <HAL_RCC_OscConfig+0x290>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 80206b6:	4b09      	ldr	r3, [pc, #36]	; (80206dc <HAL_RCC_OscConfig+0x280>)
 80206b8:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80206ba:	4a08      	ldr	r2, [pc, #32]	; (80206dc <HAL_RCC_OscConfig+0x280>)
 80206bc:	f023 0301 	bic.w	r3, r3, #1
 80206c0:	6753      	str	r3, [r2, #116]	; 0x74

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 80206c2:	f7ff fafb 	bl	801fcbc <HAL_GetTick>
 80206c6:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80206c8:	e00a      	b.n	80206e0 <HAL_RCC_OscConfig+0x284>
      {
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 80206ca:	f7ff faf7 	bl	801fcbc <HAL_GetTick>
 80206ce:	4602      	mov	r2, r0
 80206d0:	693b      	ldr	r3, [r7, #16]
 80206d2:	1ad3      	subs	r3, r2, r3
 80206d4:	2b02      	cmp	r3, #2
 80206d6:	d903      	bls.n	80206e0 <HAL_RCC_OscConfig+0x284>
        {
          return HAL_TIMEOUT;
 80206d8:	2303      	movs	r3, #3
 80206da:	e15c      	b.n	8020996 <HAL_RCC_OscConfig+0x53a>
 80206dc:	40023800 	.word	0x40023800
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80206e0:	4b91      	ldr	r3, [pc, #580]	; (8020928 <HAL_RCC_OscConfig+0x4cc>)
 80206e2:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80206e4:	f003 0302 	and.w	r3, r3, #2
 80206e8:	2b00      	cmp	r3, #0
 80206ea:	d1ee      	bne.n	80206ca <HAL_RCC_OscConfig+0x26e>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 80206ec:	687b      	ldr	r3, [r7, #4]
 80206ee:	681b      	ldr	r3, [r3, #0]
 80206f0:	f003 0304 	and.w	r3, r3, #4
 80206f4:	2b00      	cmp	r3, #0
 80206f6:	f000 80a4 	beq.w	8020842 <HAL_RCC_OscConfig+0x3e6>
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 80206fa:	4b8b      	ldr	r3, [pc, #556]	; (8020928 <HAL_RCC_OscConfig+0x4cc>)
 80206fc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80206fe:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8020702:	2b00      	cmp	r3, #0
 8020704:	d10d      	bne.n	8020722 <HAL_RCC_OscConfig+0x2c6>
    {
      /* Enable Power Clock*/
      __HAL_RCC_PWR_CLK_ENABLE();
 8020706:	4b88      	ldr	r3, [pc, #544]	; (8020928 <HAL_RCC_OscConfig+0x4cc>)
 8020708:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 802070a:	4a87      	ldr	r2, [pc, #540]	; (8020928 <HAL_RCC_OscConfig+0x4cc>)
 802070c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8020710:	6413      	str	r3, [r2, #64]	; 0x40
 8020712:	4b85      	ldr	r3, [pc, #532]	; (8020928 <HAL_RCC_OscConfig+0x4cc>)
 8020714:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8020716:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 802071a:	60bb      	str	r3, [r7, #8]
 802071c:	68bb      	ldr	r3, [r7, #8]
      pwrclkchanged = SET;
 802071e:	2301      	movs	r3, #1
 8020720:	75fb      	strb	r3, [r7, #23]
    }

    if (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 8020722:	4b82      	ldr	r3, [pc, #520]	; (802092c <HAL_RCC_OscConfig+0x4d0>)
 8020724:	681b      	ldr	r3, [r3, #0]
 8020726:	f403 7380 	and.w	r3, r3, #256	; 0x100
 802072a:	2b00      	cmp	r3, #0
 802072c:	d118      	bne.n	8020760 <HAL_RCC_OscConfig+0x304>
    {
      /* Enable write access to Backup domain */
      PWR->CR1 |= PWR_CR1_DBP;
 802072e:	4b7f      	ldr	r3, [pc, #508]	; (802092c <HAL_RCC_OscConfig+0x4d0>)
 8020730:	681b      	ldr	r3, [r3, #0]
 8020732:	4a7e      	ldr	r2, [pc, #504]	; (802092c <HAL_RCC_OscConfig+0x4d0>)
 8020734:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8020738:	6013      	str	r3, [r2, #0]

      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 802073a:	f7ff fabf 	bl	801fcbc <HAL_GetTick>
 802073e:	6138      	str	r0, [r7, #16]

      while (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 8020740:	e008      	b.n	8020754 <HAL_RCC_OscConfig+0x2f8>
      {
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8020742:	f7ff fabb 	bl	801fcbc <HAL_GetTick>
 8020746:	4602      	mov	r2, r0
 8020748:	693b      	ldr	r3, [r7, #16]
 802074a:	1ad3      	subs	r3, r2, r3
 802074c:	2b64      	cmp	r3, #100	; 0x64
 802074e:	d901      	bls.n	8020754 <HAL_RCC_OscConfig+0x2f8>
        {
          return HAL_TIMEOUT;
 8020750:	2303      	movs	r3, #3
 8020752:	e120      	b.n	8020996 <HAL_RCC_OscConfig+0x53a>
      while (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 8020754:	4b75      	ldr	r3, [pc, #468]	; (802092c <HAL_RCC_OscConfig+0x4d0>)
 8020756:	681b      	ldr	r3, [r3, #0]
 8020758:	f403 7380 	and.w	r3, r3, #256	; 0x100
 802075c:	2b00      	cmp	r3, #0
 802075e:	d0f0      	beq.n	8020742 <HAL_RCC_OscConfig+0x2e6>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8020760:	687b      	ldr	r3, [r7, #4]
 8020762:	689b      	ldr	r3, [r3, #8]
 8020764:	2b01      	cmp	r3, #1
 8020766:	d106      	bne.n	8020776 <HAL_RCC_OscConfig+0x31a>
 8020768:	4b6f      	ldr	r3, [pc, #444]	; (8020928 <HAL_RCC_OscConfig+0x4cc>)
 802076a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 802076c:	4a6e      	ldr	r2, [pc, #440]	; (8020928 <HAL_RCC_OscConfig+0x4cc>)
 802076e:	f043 0301 	orr.w	r3, r3, #1
 8020772:	6713      	str	r3, [r2, #112]	; 0x70
 8020774:	e02d      	b.n	80207d2 <HAL_RCC_OscConfig+0x376>
 8020776:	687b      	ldr	r3, [r7, #4]
 8020778:	689b      	ldr	r3, [r3, #8]
 802077a:	2b00      	cmp	r3, #0
 802077c:	d10c      	bne.n	8020798 <HAL_RCC_OscConfig+0x33c>
 802077e:	4b6a      	ldr	r3, [pc, #424]	; (8020928 <HAL_RCC_OscConfig+0x4cc>)
 8020780:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8020782:	4a69      	ldr	r2, [pc, #420]	; (8020928 <HAL_RCC_OscConfig+0x4cc>)
 8020784:	f023 0301 	bic.w	r3, r3, #1
 8020788:	6713      	str	r3, [r2, #112]	; 0x70
 802078a:	4b67      	ldr	r3, [pc, #412]	; (8020928 <HAL_RCC_OscConfig+0x4cc>)
 802078c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 802078e:	4a66      	ldr	r2, [pc, #408]	; (8020928 <HAL_RCC_OscConfig+0x4cc>)
 8020790:	f023 0304 	bic.w	r3, r3, #4
 8020794:	6713      	str	r3, [r2, #112]	; 0x70
 8020796:	e01c      	b.n	80207d2 <HAL_RCC_OscConfig+0x376>
 8020798:	687b      	ldr	r3, [r7, #4]
 802079a:	689b      	ldr	r3, [r3, #8]
 802079c:	2b05      	cmp	r3, #5
 802079e:	d10c      	bne.n	80207ba <HAL_RCC_OscConfig+0x35e>
 80207a0:	4b61      	ldr	r3, [pc, #388]	; (8020928 <HAL_RCC_OscConfig+0x4cc>)
 80207a2:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80207a4:	4a60      	ldr	r2, [pc, #384]	; (8020928 <HAL_RCC_OscConfig+0x4cc>)
 80207a6:	f043 0304 	orr.w	r3, r3, #4
 80207aa:	6713      	str	r3, [r2, #112]	; 0x70
 80207ac:	4b5e      	ldr	r3, [pc, #376]	; (8020928 <HAL_RCC_OscConfig+0x4cc>)
 80207ae:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80207b0:	4a5d      	ldr	r2, [pc, #372]	; (8020928 <HAL_RCC_OscConfig+0x4cc>)
 80207b2:	f043 0301 	orr.w	r3, r3, #1
 80207b6:	6713      	str	r3, [r2, #112]	; 0x70
 80207b8:	e00b      	b.n	80207d2 <HAL_RCC_OscConfig+0x376>
 80207ba:	4b5b      	ldr	r3, [pc, #364]	; (8020928 <HAL_RCC_OscConfig+0x4cc>)
 80207bc:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80207be:	4a5a      	ldr	r2, [pc, #360]	; (8020928 <HAL_RCC_OscConfig+0x4cc>)
 80207c0:	f023 0301 	bic.w	r3, r3, #1
 80207c4:	6713      	str	r3, [r2, #112]	; 0x70
 80207c6:	4b58      	ldr	r3, [pc, #352]	; (8020928 <HAL_RCC_OscConfig+0x4cc>)
 80207c8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80207ca:	4a57      	ldr	r2, [pc, #348]	; (8020928 <HAL_RCC_OscConfig+0x4cc>)
 80207cc:	f023 0304 	bic.w	r3, r3, #4
 80207d0:	6713      	str	r3, [r2, #112]	; 0x70
    /* Check the LSE State */
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 80207d2:	687b      	ldr	r3, [r7, #4]
 80207d4:	689b      	ldr	r3, [r3, #8]
 80207d6:	2b00      	cmp	r3, #0
 80207d8:	d015      	beq.n	8020806 <HAL_RCC_OscConfig+0x3aa>
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 80207da:	f7ff fa6f 	bl	801fcbc <HAL_GetTick>
 80207de:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80207e0:	e00a      	b.n	80207f8 <HAL_RCC_OscConfig+0x39c>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80207e2:	f7ff fa6b 	bl	801fcbc <HAL_GetTick>
 80207e6:	4602      	mov	r2, r0
 80207e8:	693b      	ldr	r3, [r7, #16]
 80207ea:	1ad3      	subs	r3, r2, r3
 80207ec:	f241 3288 	movw	r2, #5000	; 0x1388
 80207f0:	4293      	cmp	r3, r2
 80207f2:	d901      	bls.n	80207f8 <HAL_RCC_OscConfig+0x39c>
        {
          return HAL_TIMEOUT;
 80207f4:	2303      	movs	r3, #3
 80207f6:	e0ce      	b.n	8020996 <HAL_RCC_OscConfig+0x53a>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80207f8:	4b4b      	ldr	r3, [pc, #300]	; (8020928 <HAL_RCC_OscConfig+0x4cc>)
 80207fa:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80207fc:	f003 0302 	and.w	r3, r3, #2
 8020800:	2b00      	cmp	r3, #0
 8020802:	d0ee      	beq.n	80207e2 <HAL_RCC_OscConfig+0x386>
 8020804:	e014      	b.n	8020830 <HAL_RCC_OscConfig+0x3d4>
      }
    }
    else
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8020806:	f7ff fa59 	bl	801fcbc <HAL_GetTick>
 802080a:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 802080c:	e00a      	b.n	8020824 <HAL_RCC_OscConfig+0x3c8>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 802080e:	f7ff fa55 	bl	801fcbc <HAL_GetTick>
 8020812:	4602      	mov	r2, r0
 8020814:	693b      	ldr	r3, [r7, #16]
 8020816:	1ad3      	subs	r3, r2, r3
 8020818:	f241 3288 	movw	r2, #5000	; 0x1388
 802081c:	4293      	cmp	r3, r2
 802081e:	d901      	bls.n	8020824 <HAL_RCC_OscConfig+0x3c8>
        {
          return HAL_TIMEOUT;
 8020820:	2303      	movs	r3, #3
 8020822:	e0b8      	b.n	8020996 <HAL_RCC_OscConfig+0x53a>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8020824:	4b40      	ldr	r3, [pc, #256]	; (8020928 <HAL_RCC_OscConfig+0x4cc>)
 8020826:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8020828:	f003 0302 	and.w	r3, r3, #2
 802082c:	2b00      	cmp	r3, #0
 802082e:	d1ee      	bne.n	802080e <HAL_RCC_OscConfig+0x3b2>
        }
      }
    }

    /* Restore clock configuration if changed */
    if (pwrclkchanged == SET)
 8020830:	7dfb      	ldrb	r3, [r7, #23]
 8020832:	2b01      	cmp	r3, #1
 8020834:	d105      	bne.n	8020842 <HAL_RCC_OscConfig+0x3e6>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 8020836:	4b3c      	ldr	r3, [pc, #240]	; (8020928 <HAL_RCC_OscConfig+0x4cc>)
 8020838:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 802083a:	4a3b      	ldr	r2, [pc, #236]	; (8020928 <HAL_RCC_OscConfig+0x4cc>)
 802083c:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8020840:	6413      	str	r3, [r2, #64]	; 0x40
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8020842:	687b      	ldr	r3, [r7, #4]
 8020844:	699b      	ldr	r3, [r3, #24]
 8020846:	2b00      	cmp	r3, #0
 8020848:	f000 80a4 	beq.w	8020994 <HAL_RCC_OscConfig+0x538>
  {
    /* Check if the PLL is used as system clock or not */
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 802084c:	4b36      	ldr	r3, [pc, #216]	; (8020928 <HAL_RCC_OscConfig+0x4cc>)
 802084e:	689b      	ldr	r3, [r3, #8]
 8020850:	f003 030c 	and.w	r3, r3, #12
 8020854:	2b08      	cmp	r3, #8
 8020856:	d06b      	beq.n	8020930 <HAL_RCC_OscConfig+0x4d4>
    {
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8020858:	687b      	ldr	r3, [r7, #4]
 802085a:	699b      	ldr	r3, [r3, #24]
 802085c:	2b02      	cmp	r3, #2
 802085e:	d149      	bne.n	80208f4 <HAL_RCC_OscConfig+0x498>
#if defined (RCC_PLLCFGR_PLLR)
        assert_param(IS_RCC_PLLR_VALUE(RCC_OscInitStruct->PLL.PLLR));
#endif

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8020860:	4b31      	ldr	r3, [pc, #196]	; (8020928 <HAL_RCC_OscConfig+0x4cc>)
 8020862:	681b      	ldr	r3, [r3, #0]
 8020864:	4a30      	ldr	r2, [pc, #192]	; (8020928 <HAL_RCC_OscConfig+0x4cc>)
 8020866:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 802086a:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 802086c:	f7ff fa26 	bl	801fcbc <HAL_GetTick>
 8020870:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8020872:	e008      	b.n	8020886 <HAL_RCC_OscConfig+0x42a>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8020874:	f7ff fa22 	bl	801fcbc <HAL_GetTick>
 8020878:	4602      	mov	r2, r0
 802087a:	693b      	ldr	r3, [r7, #16]
 802087c:	1ad3      	subs	r3, r2, r3
 802087e:	2b02      	cmp	r3, #2
 8020880:	d901      	bls.n	8020886 <HAL_RCC_OscConfig+0x42a>
          {
            return HAL_TIMEOUT;
 8020882:	2303      	movs	r3, #3
 8020884:	e087      	b.n	8020996 <HAL_RCC_OscConfig+0x53a>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8020886:	4b28      	ldr	r3, [pc, #160]	; (8020928 <HAL_RCC_OscConfig+0x4cc>)
 8020888:	681b      	ldr	r3, [r3, #0]
 802088a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 802088e:	2b00      	cmp	r3, #0
 8020890:	d1f0      	bne.n	8020874 <HAL_RCC_OscConfig+0x418>
                             RCC_OscInitStruct->PLL.PLLN,
                             RCC_OscInitStruct->PLL.PLLP,
                             RCC_OscInitStruct->PLL.PLLQ,
                             RCC_OscInitStruct->PLL.PLLR);
#else
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8020892:	687b      	ldr	r3, [r7, #4]
 8020894:	69da      	ldr	r2, [r3, #28]
 8020896:	687b      	ldr	r3, [r7, #4]
 8020898:	6a1b      	ldr	r3, [r3, #32]
 802089a:	431a      	orrs	r2, r3
 802089c:	687b      	ldr	r3, [r7, #4]
 802089e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80208a0:	019b      	lsls	r3, r3, #6
 80208a2:	431a      	orrs	r2, r3
 80208a4:	687b      	ldr	r3, [r7, #4]
 80208a6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80208a8:	085b      	lsrs	r3, r3, #1
 80208aa:	3b01      	subs	r3, #1
 80208ac:	041b      	lsls	r3, r3, #16
 80208ae:	431a      	orrs	r2, r3
 80208b0:	687b      	ldr	r3, [r7, #4]
 80208b2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80208b4:	061b      	lsls	r3, r3, #24
 80208b6:	4313      	orrs	r3, r2
 80208b8:	4a1b      	ldr	r2, [pc, #108]	; (8020928 <HAL_RCC_OscConfig+0x4cc>)
 80208ba:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 80208be:	6053      	str	r3, [r2, #4]
                             RCC_OscInitStruct->PLL.PLLP,
                             RCC_OscInitStruct->PLL.PLLQ);
#endif

        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 80208c0:	4b19      	ldr	r3, [pc, #100]	; (8020928 <HAL_RCC_OscConfig+0x4cc>)
 80208c2:	681b      	ldr	r3, [r3, #0]
 80208c4:	4a18      	ldr	r2, [pc, #96]	; (8020928 <HAL_RCC_OscConfig+0x4cc>)
 80208c6:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80208ca:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 80208cc:	f7ff f9f6 	bl	801fcbc <HAL_GetTick>
 80208d0:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80208d2:	e008      	b.n	80208e6 <HAL_RCC_OscConfig+0x48a>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 80208d4:	f7ff f9f2 	bl	801fcbc <HAL_GetTick>
 80208d8:	4602      	mov	r2, r0
 80208da:	693b      	ldr	r3, [r7, #16]
 80208dc:	1ad3      	subs	r3, r2, r3
 80208de:	2b02      	cmp	r3, #2
 80208e0:	d901      	bls.n	80208e6 <HAL_RCC_OscConfig+0x48a>
          {
            return HAL_TIMEOUT;
 80208e2:	2303      	movs	r3, #3
 80208e4:	e057      	b.n	8020996 <HAL_RCC_OscConfig+0x53a>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80208e6:	4b10      	ldr	r3, [pc, #64]	; (8020928 <HAL_RCC_OscConfig+0x4cc>)
 80208e8:	681b      	ldr	r3, [r3, #0]
 80208ea:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80208ee:	2b00      	cmp	r3, #0
 80208f0:	d0f0      	beq.n	80208d4 <HAL_RCC_OscConfig+0x478>
 80208f2:	e04f      	b.n	8020994 <HAL_RCC_OscConfig+0x538>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 80208f4:	4b0c      	ldr	r3, [pc, #48]	; (8020928 <HAL_RCC_OscConfig+0x4cc>)
 80208f6:	681b      	ldr	r3, [r3, #0]
 80208f8:	4a0b      	ldr	r2, [pc, #44]	; (8020928 <HAL_RCC_OscConfig+0x4cc>)
 80208fa:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 80208fe:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8020900:	f7ff f9dc 	bl	801fcbc <HAL_GetTick>
 8020904:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8020906:	e008      	b.n	802091a <HAL_RCC_OscConfig+0x4be>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8020908:	f7ff f9d8 	bl	801fcbc <HAL_GetTick>
 802090c:	4602      	mov	r2, r0
 802090e:	693b      	ldr	r3, [r7, #16]
 8020910:	1ad3      	subs	r3, r2, r3
 8020912:	2b02      	cmp	r3, #2
 8020914:	d901      	bls.n	802091a <HAL_RCC_OscConfig+0x4be>
          {
            return HAL_TIMEOUT;
 8020916:	2303      	movs	r3, #3
 8020918:	e03d      	b.n	8020996 <HAL_RCC_OscConfig+0x53a>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 802091a:	4b03      	ldr	r3, [pc, #12]	; (8020928 <HAL_RCC_OscConfig+0x4cc>)
 802091c:	681b      	ldr	r3, [r3, #0]
 802091e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8020922:	2b00      	cmp	r3, #0
 8020924:	d1f0      	bne.n	8020908 <HAL_RCC_OscConfig+0x4ac>
 8020926:	e035      	b.n	8020994 <HAL_RCC_OscConfig+0x538>
 8020928:	40023800 	.word	0x40023800
 802092c:	40007000 	.word	0x40007000
      }
    }
    else
    {
      /* Do not return HAL_ERROR if request repeats the current configuration */
      pll_config = RCC->PLLCFGR;
 8020930:	4b1b      	ldr	r3, [pc, #108]	; (80209a0 <HAL_RCC_OscConfig+0x544>)
 8020932:	685b      	ldr	r3, [r3, #4]
 8020934:	60fb      	str	r3, [r7, #12]
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != ((((RCC_OscInitStruct->PLL.PLLP) >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos)) ||
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLR) != (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_PLLR_Pos)))
#else
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8020936:	687b      	ldr	r3, [r7, #4]
 8020938:	699b      	ldr	r3, [r3, #24]
 802093a:	2b01      	cmp	r3, #1
 802093c:	d028      	beq.n	8020990 <HAL_RCC_OscConfig+0x534>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 802093e:	68fb      	ldr	r3, [r7, #12]
 8020940:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 8020944:	687b      	ldr	r3, [r7, #4]
 8020946:	69db      	ldr	r3, [r3, #28]
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8020948:	429a      	cmp	r2, r3
 802094a:	d121      	bne.n	8020990 <HAL_RCC_OscConfig+0x534>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 802094c:	68fb      	ldr	r3, [r7, #12]
 802094e:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 8020952:	687b      	ldr	r3, [r7, #4]
 8020954:	6a1b      	ldr	r3, [r3, #32]
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8020956:	429a      	cmp	r2, r3
 8020958:	d11a      	bne.n	8020990 <HAL_RCC_OscConfig+0x534>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
 802095a:	68fa      	ldr	r2, [r7, #12]
 802095c:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 8020960:	4013      	ands	r3, r2
 8020962:	687a      	ldr	r2, [r7, #4]
 8020964:	6a52      	ldr	r2, [r2, #36]	; 0x24
 8020966:	0192      	lsls	r2, r2, #6
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8020968:	4293      	cmp	r3, r2
 802096a:	d111      	bne.n	8020990 <HAL_RCC_OscConfig+0x534>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != ((((RCC_OscInitStruct->PLL.PLLP) >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos)) ||
 802096c:	68fb      	ldr	r3, [r7, #12]
 802096e:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 8020972:	687b      	ldr	r3, [r7, #4]
 8020974:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8020976:	085b      	lsrs	r3, r3, #1
 8020978:	3b01      	subs	r3, #1
 802097a:	041b      	lsls	r3, r3, #16
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
 802097c:	429a      	cmp	r2, r3
 802097e:	d107      	bne.n	8020990 <HAL_RCC_OscConfig+0x534>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 8020980:	68fb      	ldr	r3, [r7, #12]
 8020982:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 8020986:	687b      	ldr	r3, [r7, #4]
 8020988:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802098a:	061b      	lsls	r3, r3, #24
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != ((((RCC_OscInitStruct->PLL.PLLP) >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos)) ||
 802098c:	429a      	cmp	r2, r3
 802098e:	d001      	beq.n	8020994 <HAL_RCC_OscConfig+0x538>
#endif
      {
        return HAL_ERROR;
 8020990:	2301      	movs	r3, #1
 8020992:	e000      	b.n	8020996 <HAL_RCC_OscConfig+0x53a>
      }
    }
  }
  return HAL_OK;
 8020994:	2300      	movs	r3, #0
}
 8020996:	4618      	mov	r0, r3
 8020998:	3718      	adds	r7, #24
 802099a:	46bd      	mov	sp, r7
 802099c:	bd80      	pop	{r7, pc}
 802099e:	bf00      	nop
 80209a0:	40023800 	.word	0x40023800

080209a4 <HAL_RCC_ClockConfig>:
  *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
  *         (for more details refer to section above "Initialization/de-initialization functions")
  * @retval None
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 80209a4:	b580      	push	{r7, lr}
 80209a6:	b084      	sub	sp, #16
 80209a8:	af00      	add	r7, sp, #0
 80209aa:	6078      	str	r0, [r7, #4]
 80209ac:	6039      	str	r1, [r7, #0]
  uint32_t tickstart = 0;
 80209ae:	2300      	movs	r3, #0
 80209b0:	60fb      	str	r3, [r7, #12]

  /* Check Null pointer */
  if (RCC_ClkInitStruct == NULL)
 80209b2:	687b      	ldr	r3, [r7, #4]
 80209b4:	2b00      	cmp	r3, #0
 80209b6:	d101      	bne.n	80209bc <HAL_RCC_ClockConfig+0x18>
  {
    return HAL_ERROR;
 80209b8:	2301      	movs	r3, #1
 80209ba:	e0d0      	b.n	8020b5e <HAL_RCC_ClockConfig+0x1ba>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
     must be correctly programmed according to the frequency of the CPU clock
     (HCLK) and the supply voltage of the device. */

  /* Increasing the CPU frequency */
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 80209bc:	4b6a      	ldr	r3, [pc, #424]	; (8020b68 <HAL_RCC_ClockConfig+0x1c4>)
 80209be:	681b      	ldr	r3, [r3, #0]
 80209c0:	f003 030f 	and.w	r3, r3, #15
 80209c4:	683a      	ldr	r2, [r7, #0]
 80209c6:	429a      	cmp	r2, r3
 80209c8:	d910      	bls.n	80209ec <HAL_RCC_ClockConfig+0x48>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 80209ca:	4b67      	ldr	r3, [pc, #412]	; (8020b68 <HAL_RCC_ClockConfig+0x1c4>)
 80209cc:	681b      	ldr	r3, [r3, #0]
 80209ce:	f023 020f 	bic.w	r2, r3, #15
 80209d2:	4965      	ldr	r1, [pc, #404]	; (8020b68 <HAL_RCC_ClockConfig+0x1c4>)
 80209d4:	683b      	ldr	r3, [r7, #0]
 80209d6:	4313      	orrs	r3, r2
 80209d8:	600b      	str	r3, [r1, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 80209da:	4b63      	ldr	r3, [pc, #396]	; (8020b68 <HAL_RCC_ClockConfig+0x1c4>)
 80209dc:	681b      	ldr	r3, [r3, #0]
 80209de:	f003 030f 	and.w	r3, r3, #15
 80209e2:	683a      	ldr	r2, [r7, #0]
 80209e4:	429a      	cmp	r2, r3
 80209e6:	d001      	beq.n	80209ec <HAL_RCC_ClockConfig+0x48>
    {
      return HAL_ERROR;
 80209e8:	2301      	movs	r3, #1
 80209ea:	e0b8      	b.n	8020b5e <HAL_RCC_ClockConfig+0x1ba>
    }
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 80209ec:	687b      	ldr	r3, [r7, #4]
 80209ee:	681b      	ldr	r3, [r3, #0]
 80209f0:	f003 0302 	and.w	r3, r3, #2
 80209f4:	2b00      	cmp	r3, #0
 80209f6:	d020      	beq.n	8020a3a <HAL_RCC_ClockConfig+0x96>
  {
    /* Set the highest APBx dividers in order to ensure that we do not go through
       a non-spec phase whatever we decrease or increase HCLK. */
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80209f8:	687b      	ldr	r3, [r7, #4]
 80209fa:	681b      	ldr	r3, [r3, #0]
 80209fc:	f003 0304 	and.w	r3, r3, #4
 8020a00:	2b00      	cmp	r3, #0
 8020a02:	d005      	beq.n	8020a10 <HAL_RCC_ClockConfig+0x6c>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8020a04:	4b59      	ldr	r3, [pc, #356]	; (8020b6c <HAL_RCC_ClockConfig+0x1c8>)
 8020a06:	689b      	ldr	r3, [r3, #8]
 8020a08:	4a58      	ldr	r2, [pc, #352]	; (8020b6c <HAL_RCC_ClockConfig+0x1c8>)
 8020a0a:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 8020a0e:	6093      	str	r3, [r2, #8]
    }

    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8020a10:	687b      	ldr	r3, [r7, #4]
 8020a12:	681b      	ldr	r3, [r3, #0]
 8020a14:	f003 0308 	and.w	r3, r3, #8
 8020a18:	2b00      	cmp	r3, #0
 8020a1a:	d005      	beq.n	8020a28 <HAL_RCC_ClockConfig+0x84>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8020a1c:	4b53      	ldr	r3, [pc, #332]	; (8020b6c <HAL_RCC_ClockConfig+0x1c8>)
 8020a1e:	689b      	ldr	r3, [r3, #8]
 8020a20:	4a52      	ldr	r2, [pc, #328]	; (8020b6c <HAL_RCC_ClockConfig+0x1c8>)
 8020a22:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 8020a26:	6093      	str	r3, [r2, #8]
    }

    /* Set the new HCLK clock divider */
    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8020a28:	4b50      	ldr	r3, [pc, #320]	; (8020b6c <HAL_RCC_ClockConfig+0x1c8>)
 8020a2a:	689b      	ldr	r3, [r3, #8]
 8020a2c:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8020a30:	687b      	ldr	r3, [r7, #4]
 8020a32:	689b      	ldr	r3, [r3, #8]
 8020a34:	494d      	ldr	r1, [pc, #308]	; (8020b6c <HAL_RCC_ClockConfig+0x1c8>)
 8020a36:	4313      	orrs	r3, r2
 8020a38:	608b      	str	r3, [r1, #8]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8020a3a:	687b      	ldr	r3, [r7, #4]
 8020a3c:	681b      	ldr	r3, [r3, #0]
 8020a3e:	f003 0301 	and.w	r3, r3, #1
 8020a42:	2b00      	cmp	r3, #0
 8020a44:	d040      	beq.n	8020ac8 <HAL_RCC_ClockConfig+0x124>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));

    /* HSE is selected as System Clock Source */
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8020a46:	687b      	ldr	r3, [r7, #4]
 8020a48:	685b      	ldr	r3, [r3, #4]
 8020a4a:	2b01      	cmp	r3, #1
 8020a4c:	d107      	bne.n	8020a5e <HAL_RCC_ClockConfig+0xba>
    {
      /* Check the HSE ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8020a4e:	4b47      	ldr	r3, [pc, #284]	; (8020b6c <HAL_RCC_ClockConfig+0x1c8>)
 8020a50:	681b      	ldr	r3, [r3, #0]
 8020a52:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8020a56:	2b00      	cmp	r3, #0
 8020a58:	d115      	bne.n	8020a86 <HAL_RCC_ClockConfig+0xe2>
      {
        return HAL_ERROR;
 8020a5a:	2301      	movs	r3, #1
 8020a5c:	e07f      	b.n	8020b5e <HAL_RCC_ClockConfig+0x1ba>
      }
    }
    /* PLL is selected as System Clock Source */
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8020a5e:	687b      	ldr	r3, [r7, #4]
 8020a60:	685b      	ldr	r3, [r3, #4]
 8020a62:	2b02      	cmp	r3, #2
 8020a64:	d107      	bne.n	8020a76 <HAL_RCC_ClockConfig+0xd2>
    {
      /* Check the PLL ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8020a66:	4b41      	ldr	r3, [pc, #260]	; (8020b6c <HAL_RCC_ClockConfig+0x1c8>)
 8020a68:	681b      	ldr	r3, [r3, #0]
 8020a6a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8020a6e:	2b00      	cmp	r3, #0
 8020a70:	d109      	bne.n	8020a86 <HAL_RCC_ClockConfig+0xe2>
      {
        return HAL_ERROR;
 8020a72:	2301      	movs	r3, #1
 8020a74:	e073      	b.n	8020b5e <HAL_RCC_ClockConfig+0x1ba>
    }
    /* HSI is selected as System Clock Source */
    else
    {
      /* Check the HSI ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8020a76:	4b3d      	ldr	r3, [pc, #244]	; (8020b6c <HAL_RCC_ClockConfig+0x1c8>)
 8020a78:	681b      	ldr	r3, [r3, #0]
 8020a7a:	f003 0302 	and.w	r3, r3, #2
 8020a7e:	2b00      	cmp	r3, #0
 8020a80:	d101      	bne.n	8020a86 <HAL_RCC_ClockConfig+0xe2>
      {
        return HAL_ERROR;
 8020a82:	2301      	movs	r3, #1
 8020a84:	e06b      	b.n	8020b5e <HAL_RCC_ClockConfig+0x1ba>
      }
    }

    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8020a86:	4b39      	ldr	r3, [pc, #228]	; (8020b6c <HAL_RCC_ClockConfig+0x1c8>)
 8020a88:	689b      	ldr	r3, [r3, #8]
 8020a8a:	f023 0203 	bic.w	r2, r3, #3
 8020a8e:	687b      	ldr	r3, [r7, #4]
 8020a90:	685b      	ldr	r3, [r3, #4]
 8020a92:	4936      	ldr	r1, [pc, #216]	; (8020b6c <HAL_RCC_ClockConfig+0x1c8>)
 8020a94:	4313      	orrs	r3, r2
 8020a96:	608b      	str	r3, [r1, #8]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8020a98:	f7ff f910 	bl	801fcbc <HAL_GetTick>
 8020a9c:	60f8      	str	r0, [r7, #12]

    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8020a9e:	e00a      	b.n	8020ab6 <HAL_RCC_ClockConfig+0x112>
    {
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8020aa0:	f7ff f90c 	bl	801fcbc <HAL_GetTick>
 8020aa4:	4602      	mov	r2, r0
 8020aa6:	68fb      	ldr	r3, [r7, #12]
 8020aa8:	1ad3      	subs	r3, r2, r3
 8020aaa:	f241 3288 	movw	r2, #5000	; 0x1388
 8020aae:	4293      	cmp	r3, r2
 8020ab0:	d901      	bls.n	8020ab6 <HAL_RCC_ClockConfig+0x112>
      {
        return HAL_TIMEOUT;
 8020ab2:	2303      	movs	r3, #3
 8020ab4:	e053      	b.n	8020b5e <HAL_RCC_ClockConfig+0x1ba>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8020ab6:	4b2d      	ldr	r3, [pc, #180]	; (8020b6c <HAL_RCC_ClockConfig+0x1c8>)
 8020ab8:	689b      	ldr	r3, [r3, #8]
 8020aba:	f003 020c 	and.w	r2, r3, #12
 8020abe:	687b      	ldr	r3, [r7, #4]
 8020ac0:	685b      	ldr	r3, [r3, #4]
 8020ac2:	009b      	lsls	r3, r3, #2
 8020ac4:	429a      	cmp	r2, r3
 8020ac6:	d1eb      	bne.n	8020aa0 <HAL_RCC_ClockConfig+0xfc>
      }
    }
  }

  /* Decreasing the number of wait states because of lower CPU frequency */
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 8020ac8:	4b27      	ldr	r3, [pc, #156]	; (8020b68 <HAL_RCC_ClockConfig+0x1c4>)
 8020aca:	681b      	ldr	r3, [r3, #0]
 8020acc:	f003 030f 	and.w	r3, r3, #15
 8020ad0:	683a      	ldr	r2, [r7, #0]
 8020ad2:	429a      	cmp	r2, r3
 8020ad4:	d210      	bcs.n	8020af8 <HAL_RCC_ClockConfig+0x154>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8020ad6:	4b24      	ldr	r3, [pc, #144]	; (8020b68 <HAL_RCC_ClockConfig+0x1c4>)
 8020ad8:	681b      	ldr	r3, [r3, #0]
 8020ada:	f023 020f 	bic.w	r2, r3, #15
 8020ade:	4922      	ldr	r1, [pc, #136]	; (8020b68 <HAL_RCC_ClockConfig+0x1c4>)
 8020ae0:	683b      	ldr	r3, [r7, #0]
 8020ae2:	4313      	orrs	r3, r2
 8020ae4:	600b      	str	r3, [r1, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8020ae6:	4b20      	ldr	r3, [pc, #128]	; (8020b68 <HAL_RCC_ClockConfig+0x1c4>)
 8020ae8:	681b      	ldr	r3, [r3, #0]
 8020aea:	f003 030f 	and.w	r3, r3, #15
 8020aee:	683a      	ldr	r2, [r7, #0]
 8020af0:	429a      	cmp	r2, r3
 8020af2:	d001      	beq.n	8020af8 <HAL_RCC_ClockConfig+0x154>
    {
      return HAL_ERROR;
 8020af4:	2301      	movs	r3, #1
 8020af6:	e032      	b.n	8020b5e <HAL_RCC_ClockConfig+0x1ba>
    }
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8020af8:	687b      	ldr	r3, [r7, #4]
 8020afa:	681b      	ldr	r3, [r3, #0]
 8020afc:	f003 0304 	and.w	r3, r3, #4
 8020b00:	2b00      	cmp	r3, #0
 8020b02:	d008      	beq.n	8020b16 <HAL_RCC_ClockConfig+0x172>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8020b04:	4b19      	ldr	r3, [pc, #100]	; (8020b6c <HAL_RCC_ClockConfig+0x1c8>)
 8020b06:	689b      	ldr	r3, [r3, #8]
 8020b08:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 8020b0c:	687b      	ldr	r3, [r7, #4]
 8020b0e:	68db      	ldr	r3, [r3, #12]
 8020b10:	4916      	ldr	r1, [pc, #88]	; (8020b6c <HAL_RCC_ClockConfig+0x1c8>)
 8020b12:	4313      	orrs	r3, r2
 8020b14:	608b      	str	r3, [r1, #8]
  }

  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8020b16:	687b      	ldr	r3, [r7, #4]
 8020b18:	681b      	ldr	r3, [r3, #0]
 8020b1a:	f003 0308 	and.w	r3, r3, #8
 8020b1e:	2b00      	cmp	r3, #0
 8020b20:	d009      	beq.n	8020b36 <HAL_RCC_ClockConfig+0x192>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3));
 8020b22:	4b12      	ldr	r3, [pc, #72]	; (8020b6c <HAL_RCC_ClockConfig+0x1c8>)
 8020b24:	689b      	ldr	r3, [r3, #8]
 8020b26:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 8020b2a:	687b      	ldr	r3, [r7, #4]
 8020b2c:	691b      	ldr	r3, [r3, #16]
 8020b2e:	00db      	lsls	r3, r3, #3
 8020b30:	490e      	ldr	r1, [pc, #56]	; (8020b6c <HAL_RCC_ClockConfig+0x1c8>)
 8020b32:	4313      	orrs	r3, r2
 8020b34:	608b      	str	r3, [r1, #8]
  }

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos];
 8020b36:	f000 f821 	bl	8020b7c <HAL_RCC_GetSysClockFreq>
 8020b3a:	4602      	mov	r2, r0
 8020b3c:	4b0b      	ldr	r3, [pc, #44]	; (8020b6c <HAL_RCC_ClockConfig+0x1c8>)
 8020b3e:	689b      	ldr	r3, [r3, #8]
 8020b40:	091b      	lsrs	r3, r3, #4
 8020b42:	f003 030f 	and.w	r3, r3, #15
 8020b46:	490a      	ldr	r1, [pc, #40]	; (8020b70 <HAL_RCC_ClockConfig+0x1cc>)
 8020b48:	5ccb      	ldrb	r3, [r1, r3]
 8020b4a:	fa22 f303 	lsr.w	r3, r2, r3
 8020b4e:	4a09      	ldr	r2, [pc, #36]	; (8020b74 <HAL_RCC_ClockConfig+0x1d0>)
 8020b50:	6013      	str	r3, [r2, #0]

  /* Configure the source of time base considering new system clocks settings*/
  HAL_InitTick(uwTickPrio);
 8020b52:	4b09      	ldr	r3, [pc, #36]	; (8020b78 <HAL_RCC_ClockConfig+0x1d4>)
 8020b54:	681b      	ldr	r3, [r3, #0]
 8020b56:	4618      	mov	r0, r3
 8020b58:	f7ff f86c 	bl	801fc34 <HAL_InitTick>

  return HAL_OK;
 8020b5c:	2300      	movs	r3, #0
}
 8020b5e:	4618      	mov	r0, r3
 8020b60:	3710      	adds	r7, #16
 8020b62:	46bd      	mov	sp, r7
 8020b64:	bd80      	pop	{r7, pc}
 8020b66:	bf00      	nop
 8020b68:	40023c00 	.word	0x40023c00
 8020b6c:	40023800 	.word	0x40023800
 8020b70:	08028280 	.word	0x08028280
 8020b74:	20000004 	.word	0x20000004
 8020b78:	20000008 	.word	0x20000008

08020b7c <HAL_RCC_GetSysClockFreq>:
  *
  *
  * @retval SYSCLK frequency
  */
uint32_t HAL_RCC_GetSysClockFreq(void)
{
 8020b7c:	b5b0      	push	{r4, r5, r7, lr}
 8020b7e:	b084      	sub	sp, #16
 8020b80:	af00      	add	r7, sp, #0
  uint32_t pllm = 0, pllvco = 0, pllp = 0;
 8020b82:	2100      	movs	r1, #0
 8020b84:	6079      	str	r1, [r7, #4]
 8020b86:	2100      	movs	r1, #0
 8020b88:	60f9      	str	r1, [r7, #12]
 8020b8a:	2100      	movs	r1, #0
 8020b8c:	6039      	str	r1, [r7, #0]
  uint32_t sysclockfreq = 0;
 8020b8e:	2100      	movs	r1, #0
 8020b90:	60b9      	str	r1, [r7, #8]

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8020b92:	4952      	ldr	r1, [pc, #328]	; (8020cdc <HAL_RCC_GetSysClockFreq+0x160>)
 8020b94:	6889      	ldr	r1, [r1, #8]
 8020b96:	f001 010c 	and.w	r1, r1, #12
 8020b9a:	2908      	cmp	r1, #8
 8020b9c:	d00d      	beq.n	8020bba <HAL_RCC_GetSysClockFreq+0x3e>
 8020b9e:	2908      	cmp	r1, #8
 8020ba0:	f200 8094 	bhi.w	8020ccc <HAL_RCC_GetSysClockFreq+0x150>
 8020ba4:	2900      	cmp	r1, #0
 8020ba6:	d002      	beq.n	8020bae <HAL_RCC_GetSysClockFreq+0x32>
 8020ba8:	2904      	cmp	r1, #4
 8020baa:	d003      	beq.n	8020bb4 <HAL_RCC_GetSysClockFreq+0x38>
 8020bac:	e08e      	b.n	8020ccc <HAL_RCC_GetSysClockFreq+0x150>
  {
    case RCC_SYSCLKSOURCE_STATUS_HSI:  /* HSI used as system clock source */
    {
      sysclockfreq = HSI_VALUE;
 8020bae:	4b4c      	ldr	r3, [pc, #304]	; (8020ce0 <HAL_RCC_GetSysClockFreq+0x164>)
 8020bb0:	60bb      	str	r3, [r7, #8]
      break;
 8020bb2:	e08e      	b.n	8020cd2 <HAL_RCC_GetSysClockFreq+0x156>
    }
    case RCC_SYSCLKSOURCE_STATUS_HSE:  /* HSE used as system clock  source */
    {
      sysclockfreq = HSE_VALUE;
 8020bb4:	4b4b      	ldr	r3, [pc, #300]	; (8020ce4 <HAL_RCC_GetSysClockFreq+0x168>)
 8020bb6:	60bb      	str	r3, [r7, #8]
      break;
 8020bb8:	e08b      	b.n	8020cd2 <HAL_RCC_GetSysClockFreq+0x156>
    }
    case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8020bba:	4948      	ldr	r1, [pc, #288]	; (8020cdc <HAL_RCC_GetSysClockFreq+0x160>)
 8020bbc:	6849      	ldr	r1, [r1, #4]
 8020bbe:	f001 013f 	and.w	r1, r1, #63	; 0x3f
 8020bc2:	6079      	str	r1, [r7, #4]
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLCFGR_PLLSRC_HSI)
 8020bc4:	4945      	ldr	r1, [pc, #276]	; (8020cdc <HAL_RCC_GetSysClockFreq+0x160>)
 8020bc6:	6849      	ldr	r1, [r1, #4]
 8020bc8:	f401 0180 	and.w	r1, r1, #4194304	; 0x400000
 8020bcc:	2900      	cmp	r1, #0
 8020bce:	d024      	beq.n	8020c1a <HAL_RCC_GetSysClockFreq+0x9e>
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8020bd0:	4942      	ldr	r1, [pc, #264]	; (8020cdc <HAL_RCC_GetSysClockFreq+0x160>)
 8020bd2:	6849      	ldr	r1, [r1, #4]
 8020bd4:	0989      	lsrs	r1, r1, #6
 8020bd6:	4608      	mov	r0, r1
 8020bd8:	f04f 0100 	mov.w	r1, #0
 8020bdc:	f240 14ff 	movw	r4, #511	; 0x1ff
 8020be0:	f04f 0500 	mov.w	r5, #0
 8020be4:	ea00 0204 	and.w	r2, r0, r4
 8020be8:	ea01 0305 	and.w	r3, r1, r5
 8020bec:	493d      	ldr	r1, [pc, #244]	; (8020ce4 <HAL_RCC_GetSysClockFreq+0x168>)
 8020bee:	fb01 f003 	mul.w	r0, r1, r3
 8020bf2:	2100      	movs	r1, #0
 8020bf4:	fb01 f102 	mul.w	r1, r1, r2
 8020bf8:	1844      	adds	r4, r0, r1
 8020bfa:	493a      	ldr	r1, [pc, #232]	; (8020ce4 <HAL_RCC_GetSysClockFreq+0x168>)
 8020bfc:	fba2 0101 	umull	r0, r1, r2, r1
 8020c00:	1863      	adds	r3, r4, r1
 8020c02:	4619      	mov	r1, r3
 8020c04:	687b      	ldr	r3, [r7, #4]
 8020c06:	461a      	mov	r2, r3
 8020c08:	f04f 0300 	mov.w	r3, #0
 8020c0c:	f7e0 f85c 	bl	8000cc8 <__aeabi_uldivmod>
 8020c10:	4602      	mov	r2, r0
 8020c12:	460b      	mov	r3, r1
 8020c14:	4613      	mov	r3, r2
 8020c16:	60fb      	str	r3, [r7, #12]
 8020c18:	e04a      	b.n	8020cb0 <HAL_RCC_GetSysClockFreq+0x134>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8020c1a:	4b30      	ldr	r3, [pc, #192]	; (8020cdc <HAL_RCC_GetSysClockFreq+0x160>)
 8020c1c:	685b      	ldr	r3, [r3, #4]
 8020c1e:	099b      	lsrs	r3, r3, #6
 8020c20:	461a      	mov	r2, r3
 8020c22:	f04f 0300 	mov.w	r3, #0
 8020c26:	f240 10ff 	movw	r0, #511	; 0x1ff
 8020c2a:	f04f 0100 	mov.w	r1, #0
 8020c2e:	ea02 0400 	and.w	r4, r2, r0
 8020c32:	ea03 0501 	and.w	r5, r3, r1
 8020c36:	4620      	mov	r0, r4
 8020c38:	4629      	mov	r1, r5
 8020c3a:	f04f 0200 	mov.w	r2, #0
 8020c3e:	f04f 0300 	mov.w	r3, #0
 8020c42:	014b      	lsls	r3, r1, #5
 8020c44:	ea43 63d0 	orr.w	r3, r3, r0, lsr #27
 8020c48:	0142      	lsls	r2, r0, #5
 8020c4a:	4610      	mov	r0, r2
 8020c4c:	4619      	mov	r1, r3
 8020c4e:	1b00      	subs	r0, r0, r4
 8020c50:	eb61 0105 	sbc.w	r1, r1, r5
 8020c54:	f04f 0200 	mov.w	r2, #0
 8020c58:	f04f 0300 	mov.w	r3, #0
 8020c5c:	018b      	lsls	r3, r1, #6
 8020c5e:	ea43 6390 	orr.w	r3, r3, r0, lsr #26
 8020c62:	0182      	lsls	r2, r0, #6
 8020c64:	1a12      	subs	r2, r2, r0
 8020c66:	eb63 0301 	sbc.w	r3, r3, r1
 8020c6a:	f04f 0000 	mov.w	r0, #0
 8020c6e:	f04f 0100 	mov.w	r1, #0
 8020c72:	00d9      	lsls	r1, r3, #3
 8020c74:	ea41 7152 	orr.w	r1, r1, r2, lsr #29
 8020c78:	00d0      	lsls	r0, r2, #3
 8020c7a:	4602      	mov	r2, r0
 8020c7c:	460b      	mov	r3, r1
 8020c7e:	1912      	adds	r2, r2, r4
 8020c80:	eb45 0303 	adc.w	r3, r5, r3
 8020c84:	f04f 0000 	mov.w	r0, #0
 8020c88:	f04f 0100 	mov.w	r1, #0
 8020c8c:	0299      	lsls	r1, r3, #10
 8020c8e:	ea41 5192 	orr.w	r1, r1, r2, lsr #22
 8020c92:	0290      	lsls	r0, r2, #10
 8020c94:	4602      	mov	r2, r0
 8020c96:	460b      	mov	r3, r1
 8020c98:	4610      	mov	r0, r2
 8020c9a:	4619      	mov	r1, r3
 8020c9c:	687b      	ldr	r3, [r7, #4]
 8020c9e:	461a      	mov	r2, r3
 8020ca0:	f04f 0300 	mov.w	r3, #0
 8020ca4:	f7e0 f810 	bl	8000cc8 <__aeabi_uldivmod>
 8020ca8:	4602      	mov	r2, r0
 8020caa:	460b      	mov	r3, r1
 8020cac:	4613      	mov	r3, r2
 8020cae:	60fb      	str	r3, [r7, #12]
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1) * 2);
 8020cb0:	4b0a      	ldr	r3, [pc, #40]	; (8020cdc <HAL_RCC_GetSysClockFreq+0x160>)
 8020cb2:	685b      	ldr	r3, [r3, #4]
 8020cb4:	0c1b      	lsrs	r3, r3, #16
 8020cb6:	f003 0303 	and.w	r3, r3, #3
 8020cba:	3301      	adds	r3, #1
 8020cbc:	005b      	lsls	r3, r3, #1
 8020cbe:	603b      	str	r3, [r7, #0]

      sysclockfreq = pllvco / pllp;
 8020cc0:	68fa      	ldr	r2, [r7, #12]
 8020cc2:	683b      	ldr	r3, [r7, #0]
 8020cc4:	fbb2 f3f3 	udiv	r3, r2, r3
 8020cc8:	60bb      	str	r3, [r7, #8]
      break;
 8020cca:	e002      	b.n	8020cd2 <HAL_RCC_GetSysClockFreq+0x156>
    }
    default:
    {
      sysclockfreq = HSI_VALUE;
 8020ccc:	4b04      	ldr	r3, [pc, #16]	; (8020ce0 <HAL_RCC_GetSysClockFreq+0x164>)
 8020cce:	60bb      	str	r3, [r7, #8]
      break;
 8020cd0:	bf00      	nop
    }
  }
  return sysclockfreq;
 8020cd2:	68bb      	ldr	r3, [r7, #8]
}
 8020cd4:	4618      	mov	r0, r3
 8020cd6:	3710      	adds	r7, #16
 8020cd8:	46bd      	mov	sp, r7
 8020cda:	bdb0      	pop	{r4, r5, r7, pc}
 8020cdc:	40023800 	.word	0x40023800
 8020ce0:	00f42400 	.word	0x00f42400
 8020ce4:	017d7840 	.word	0x017d7840

08020ce8 <HAL_RCC_GetHCLKFreq>:
  *         right HCLK value. Otherwise, any configuration based on this function will be incorrect.
  * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency.
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
 8020ce8:	b480      	push	{r7}
 8020cea:	af00      	add	r7, sp, #0
  return SystemCoreClock;
 8020cec:	4b03      	ldr	r3, [pc, #12]	; (8020cfc <HAL_RCC_GetHCLKFreq+0x14>)
 8020cee:	681b      	ldr	r3, [r3, #0]
}
 8020cf0:	4618      	mov	r0, r3
 8020cf2:	46bd      	mov	sp, r7
 8020cf4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8020cf8:	4770      	bx	lr
 8020cfa:	bf00      	nop
 8020cfc:	20000004 	.word	0x20000004

08020d00 <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
 8020d00:	b580      	push	{r7, lr}
 8020d02:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos]);
 8020d04:	f7ff fff0 	bl	8020ce8 <HAL_RCC_GetHCLKFreq>
 8020d08:	4602      	mov	r2, r0
 8020d0a:	4b05      	ldr	r3, [pc, #20]	; (8020d20 <HAL_RCC_GetPCLK1Freq+0x20>)
 8020d0c:	689b      	ldr	r3, [r3, #8]
 8020d0e:	0a9b      	lsrs	r3, r3, #10
 8020d10:	f003 0307 	and.w	r3, r3, #7
 8020d14:	4903      	ldr	r1, [pc, #12]	; (8020d24 <HAL_RCC_GetPCLK1Freq+0x24>)
 8020d16:	5ccb      	ldrb	r3, [r1, r3]
 8020d18:	fa22 f303 	lsr.w	r3, r2, r3
}
 8020d1c:	4618      	mov	r0, r3
 8020d1e:	bd80      	pop	{r7, pc}
 8020d20:	40023800 	.word	0x40023800
 8020d24:	08028290 	.word	0x08028290

08020d28 <HAL_RCC_GetPCLK2Freq>:
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
 8020d28:	b580      	push	{r7, lr}
 8020d2a:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2) >> RCC_CFGR_PPRE2_Pos]);
 8020d2c:	f7ff ffdc 	bl	8020ce8 <HAL_RCC_GetHCLKFreq>
 8020d30:	4602      	mov	r2, r0
 8020d32:	4b05      	ldr	r3, [pc, #20]	; (8020d48 <HAL_RCC_GetPCLK2Freq+0x20>)
 8020d34:	689b      	ldr	r3, [r3, #8]
 8020d36:	0b5b      	lsrs	r3, r3, #13
 8020d38:	f003 0307 	and.w	r3, r3, #7
 8020d3c:	4903      	ldr	r1, [pc, #12]	; (8020d4c <HAL_RCC_GetPCLK2Freq+0x24>)
 8020d3e:	5ccb      	ldrb	r3, [r1, r3]
 8020d40:	fa22 f303 	lsr.w	r3, r2, r3
}
 8020d44:	4618      	mov	r0, r3
 8020d46:	bd80      	pop	{r7, pc}
 8020d48:	40023800 	.word	0x40023800
 8020d4c:	08028290 	.word	0x08028290

08020d50 <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 8020d50:	b580      	push	{r7, lr}
 8020d52:	b088      	sub	sp, #32
 8020d54:	af00      	add	r7, sp, #0
 8020d56:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = 0;
 8020d58:	2300      	movs	r3, #0
 8020d5a:	617b      	str	r3, [r7, #20]
  uint32_t tmpreg0 = 0;
 8020d5c:	2300      	movs	r3, #0
 8020d5e:	613b      	str	r3, [r7, #16]
  uint32_t tmpreg1 = 0;
 8020d60:	2300      	movs	r3, #0
 8020d62:	60fb      	str	r3, [r7, #12]
  uint32_t plli2sused = 0;
 8020d64:	2300      	movs	r3, #0
 8020d66:	61fb      	str	r3, [r7, #28]
  uint32_t pllsaiused = 0;
 8020d68:	2300      	movs	r3, #0
 8020d6a:	61bb      	str	r3, [r7, #24]

  /* Check the parameters */
  assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));

  /*----------------------------------- I2S configuration ----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 8020d6c:	687b      	ldr	r3, [r7, #4]
 8020d6e:	681b      	ldr	r3, [r3, #0]
 8020d70:	f003 0301 	and.w	r3, r3, #1
 8020d74:	2b00      	cmp	r3, #0
 8020d76:	d012      	beq.n	8020d9e <HAL_RCCEx_PeriphCLKConfig+0x4e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2SCLKSOURCE(PeriphClkInit->I2sClockSelection));

    /* Configure I2S Clock source */
    __HAL_RCC_I2S_CONFIG(PeriphClkInit->I2sClockSelection);
 8020d78:	4b69      	ldr	r3, [pc, #420]	; (8020f20 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8020d7a:	689b      	ldr	r3, [r3, #8]
 8020d7c:	4a68      	ldr	r2, [pc, #416]	; (8020f20 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8020d7e:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8020d82:	6093      	str	r3, [r2, #8]
 8020d84:	4b66      	ldr	r3, [pc, #408]	; (8020f20 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8020d86:	689a      	ldr	r2, [r3, #8]
 8020d88:	687b      	ldr	r3, [r7, #4]
 8020d8a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8020d8c:	4964      	ldr	r1, [pc, #400]	; (8020f20 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8020d8e:	4313      	orrs	r3, r2
 8020d90:	608b      	str	r3, [r1, #8]

    /* Enable the PLLI2S when it's used as clock source for I2S */
    if(PeriphClkInit->I2sClockSelection == RCC_I2SCLKSOURCE_PLLI2S)
 8020d92:	687b      	ldr	r3, [r7, #4]
 8020d94:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8020d96:	2b00      	cmp	r3, #0
 8020d98:	d101      	bne.n	8020d9e <HAL_RCCEx_PeriphCLKConfig+0x4e>
    {
      plli2sused = 1;
 8020d9a:	2301      	movs	r3, #1
 8020d9c:	61fb      	str	r3, [r7, #28]
    }
  }

  /*------------------------------------ SAI1 configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == (RCC_PERIPHCLK_SAI1))
 8020d9e:	687b      	ldr	r3, [r7, #4]
 8020da0:	681b      	ldr	r3, [r3, #0]
 8020da2:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8020da6:	2b00      	cmp	r3, #0
 8020da8:	d017      	beq.n	8020dda <HAL_RCCEx_PeriphCLKConfig+0x8a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SAI1CLKSOURCE(PeriphClkInit->Sai1ClockSelection));

    /* Configure SAI1 Clock source */
    __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
 8020daa:	4b5d      	ldr	r3, [pc, #372]	; (8020f20 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8020dac:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8020db0:	f423 1240 	bic.w	r2, r3, #3145728	; 0x300000
 8020db4:	687b      	ldr	r3, [r7, #4]
 8020db6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8020db8:	4959      	ldr	r1, [pc, #356]	; (8020f20 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8020dba:	4313      	orrs	r3, r2
 8020dbc:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
    /* Enable the PLLI2S when it's used as clock source for SAI */
    if(PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLI2S)
 8020dc0:	687b      	ldr	r3, [r7, #4]
 8020dc2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8020dc4:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8020dc8:	d101      	bne.n	8020dce <HAL_RCCEx_PeriphCLKConfig+0x7e>
    {
      plli2sused = 1;
 8020dca:	2301      	movs	r3, #1
 8020dcc:	61fb      	str	r3, [r7, #28]
    }
    /* Enable the PLLSAI when it's used as clock source for SAI */
    if(PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLSAI)
 8020dce:	687b      	ldr	r3, [r7, #4]
 8020dd0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8020dd2:	2b00      	cmp	r3, #0
 8020dd4:	d101      	bne.n	8020dda <HAL_RCCEx_PeriphCLKConfig+0x8a>
    {
      pllsaiused = 1;
 8020dd6:	2301      	movs	r3, #1
 8020dd8:	61bb      	str	r3, [r7, #24]
    }
  }

  /*------------------------------------ SAI2 configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == (RCC_PERIPHCLK_SAI2))
 8020dda:	687b      	ldr	r3, [r7, #4]
 8020ddc:	681b      	ldr	r3, [r3, #0]
 8020dde:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8020de2:	2b00      	cmp	r3, #0
 8020de4:	d017      	beq.n	8020e16 <HAL_RCCEx_PeriphCLKConfig+0xc6>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SAI2CLKSOURCE(PeriphClkInit->Sai2ClockSelection));

    /* Configure SAI2 Clock source */
    __HAL_RCC_SAI2_CONFIG(PeriphClkInit->Sai2ClockSelection);
 8020de6:	4b4e      	ldr	r3, [pc, #312]	; (8020f20 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8020de8:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8020dec:	f423 0240 	bic.w	r2, r3, #12582912	; 0xc00000
 8020df0:	687b      	ldr	r3, [r7, #4]
 8020df2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8020df4:	494a      	ldr	r1, [pc, #296]	; (8020f20 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8020df6:	4313      	orrs	r3, r2
 8020df8:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c

    /* Enable the PLLI2S when it's used as clock source for SAI */
    if(PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLI2S)
 8020dfc:	687b      	ldr	r3, [r7, #4]
 8020dfe:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8020e00:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8020e04:	d101      	bne.n	8020e0a <HAL_RCCEx_PeriphCLKConfig+0xba>
    {
      plli2sused = 1;
 8020e06:	2301      	movs	r3, #1
 8020e08:	61fb      	str	r3, [r7, #28]
    }
    /* Enable the PLLSAI when it's used as clock source for SAI */
    if(PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLSAI)
 8020e0a:	687b      	ldr	r3, [r7, #4]
 8020e0c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8020e0e:	2b00      	cmp	r3, #0
 8020e10:	d101      	bne.n	8020e16 <HAL_RCCEx_PeriphCLKConfig+0xc6>
    {
      pllsaiused = 1;
 8020e12:	2301      	movs	r3, #1
 8020e14:	61bb      	str	r3, [r7, #24]
    }
  }

  /*-------------------------------------- SPDIF-RX Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
 8020e16:	687b      	ldr	r3, [r7, #4]
 8020e18:	681b      	ldr	r3, [r3, #0]
 8020e1a:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8020e1e:	2b00      	cmp	r3, #0
 8020e20:	d001      	beq.n	8020e26 <HAL_RCCEx_PeriphCLKConfig+0xd6>
  {
      plli2sused = 1;
 8020e22:	2301      	movs	r3, #1
 8020e24:	61fb      	str	r3, [r7, #28]
  }

  /*------------------------------------ RTC configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 8020e26:	687b      	ldr	r3, [r7, #4]
 8020e28:	681b      	ldr	r3, [r3, #0]
 8020e2a:	f003 0320 	and.w	r3, r3, #32
 8020e2e:	2b00      	cmp	r3, #0
 8020e30:	f000 808b 	beq.w	8020f4a <HAL_RCCEx_PeriphCLKConfig+0x1fa>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 8020e34:	4b3a      	ldr	r3, [pc, #232]	; (8020f20 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8020e36:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8020e38:	4a39      	ldr	r2, [pc, #228]	; (8020f20 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8020e3a:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8020e3e:	6413      	str	r3, [r2, #64]	; 0x40
 8020e40:	4b37      	ldr	r3, [pc, #220]	; (8020f20 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8020e42:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8020e44:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8020e48:	60bb      	str	r3, [r7, #8]
 8020e4a:	68bb      	ldr	r3, [r7, #8]

    /* Enable write access to Backup domain */
    PWR->CR1 |= PWR_CR1_DBP;
 8020e4c:	4b35      	ldr	r3, [pc, #212]	; (8020f24 <HAL_RCCEx_PeriphCLKConfig+0x1d4>)
 8020e4e:	681b      	ldr	r3, [r3, #0]
 8020e50:	4a34      	ldr	r2, [pc, #208]	; (8020f24 <HAL_RCCEx_PeriphCLKConfig+0x1d4>)
 8020e52:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8020e56:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8020e58:	f7fe ff30 	bl	801fcbc <HAL_GetTick>
 8020e5c:	6178      	str	r0, [r7, #20]

    /* Wait for Backup domain Write protection disable */
    while((PWR->CR1 & PWR_CR1_DBP) == RESET)
 8020e5e:	e008      	b.n	8020e72 <HAL_RCCEx_PeriphCLKConfig+0x122>
    {
      if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8020e60:	f7fe ff2c 	bl	801fcbc <HAL_GetTick>
 8020e64:	4602      	mov	r2, r0
 8020e66:	697b      	ldr	r3, [r7, #20]
 8020e68:	1ad3      	subs	r3, r2, r3
 8020e6a:	2b64      	cmp	r3, #100	; 0x64
 8020e6c:	d901      	bls.n	8020e72 <HAL_RCCEx_PeriphCLKConfig+0x122>
      {
        return HAL_TIMEOUT;
 8020e6e:	2303      	movs	r3, #3
 8020e70:	e357      	b.n	8021522 <HAL_RCCEx_PeriphCLKConfig+0x7d2>
    while((PWR->CR1 & PWR_CR1_DBP) == RESET)
 8020e72:	4b2c      	ldr	r3, [pc, #176]	; (8020f24 <HAL_RCCEx_PeriphCLKConfig+0x1d4>)
 8020e74:	681b      	ldr	r3, [r3, #0]
 8020e76:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8020e7a:	2b00      	cmp	r3, #0
 8020e7c:	d0f0      	beq.n	8020e60 <HAL_RCCEx_PeriphCLKConfig+0x110>
      }
    }

    /* Reset the Backup domain only if the RTC Clock source selection is modified */
    tmpreg0 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8020e7e:	4b28      	ldr	r3, [pc, #160]	; (8020f20 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8020e80:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8020e82:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8020e86:	613b      	str	r3, [r7, #16]

    if((tmpreg0 != 0x00000000U) && (tmpreg0 != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8020e88:	693b      	ldr	r3, [r7, #16]
 8020e8a:	2b00      	cmp	r3, #0
 8020e8c:	d035      	beq.n	8020efa <HAL_RCCEx_PeriphCLKConfig+0x1aa>
 8020e8e:	687b      	ldr	r3, [r7, #4]
 8020e90:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8020e92:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8020e96:	693a      	ldr	r2, [r7, #16]
 8020e98:	429a      	cmp	r2, r3
 8020e9a:	d02e      	beq.n	8020efa <HAL_RCCEx_PeriphCLKConfig+0x1aa>
    {
      /* Store the content of BDCR register before the reset of Backup Domain */
      tmpreg0 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8020e9c:	4b20      	ldr	r3, [pc, #128]	; (8020f20 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8020e9e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8020ea0:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8020ea4:	613b      	str	r3, [r7, #16]

      /* RTC Clock selection can be changed only if the Backup Domain is reset */
      __HAL_RCC_BACKUPRESET_FORCE();
 8020ea6:	4b1e      	ldr	r3, [pc, #120]	; (8020f20 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8020ea8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8020eaa:	4a1d      	ldr	r2, [pc, #116]	; (8020f20 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8020eac:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8020eb0:	6713      	str	r3, [r2, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_RELEASE();
 8020eb2:	4b1b      	ldr	r3, [pc, #108]	; (8020f20 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8020eb4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8020eb6:	4a1a      	ldr	r2, [pc, #104]	; (8020f20 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8020eb8:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8020ebc:	6713      	str	r3, [r2, #112]	; 0x70

      /* Restore the Content of BDCR register */
      RCC->BDCR = tmpreg0;
 8020ebe:	4a18      	ldr	r2, [pc, #96]	; (8020f20 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8020ec0:	693b      	ldr	r3, [r7, #16]
 8020ec2:	6713      	str	r3, [r2, #112]	; 0x70

      /* Wait for LSE reactivation if LSE was enable prior to Backup Domain reset */
      if (HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 8020ec4:	4b16      	ldr	r3, [pc, #88]	; (8020f20 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8020ec6:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8020ec8:	f003 0301 	and.w	r3, r3, #1
 8020ecc:	2b01      	cmp	r3, #1
 8020ece:	d114      	bne.n	8020efa <HAL_RCCEx_PeriphCLKConfig+0x1aa>
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8020ed0:	f7fe fef4 	bl	801fcbc <HAL_GetTick>
 8020ed4:	6178      	str	r0, [r7, #20]

        /* Wait till LSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8020ed6:	e00a      	b.n	8020eee <HAL_RCCEx_PeriphCLKConfig+0x19e>
        {
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8020ed8:	f7fe fef0 	bl	801fcbc <HAL_GetTick>
 8020edc:	4602      	mov	r2, r0
 8020ede:	697b      	ldr	r3, [r7, #20]
 8020ee0:	1ad3      	subs	r3, r2, r3
 8020ee2:	f241 3288 	movw	r2, #5000	; 0x1388
 8020ee6:	4293      	cmp	r3, r2
 8020ee8:	d901      	bls.n	8020eee <HAL_RCCEx_PeriphCLKConfig+0x19e>
          {
            return HAL_TIMEOUT;
 8020eea:	2303      	movs	r3, #3
 8020eec:	e319      	b.n	8021522 <HAL_RCCEx_PeriphCLKConfig+0x7d2>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8020eee:	4b0c      	ldr	r3, [pc, #48]	; (8020f20 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8020ef0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8020ef2:	f003 0302 	and.w	r3, r3, #2
 8020ef6:	2b00      	cmp	r3, #0
 8020ef8:	d0ee      	beq.n	8020ed8 <HAL_RCCEx_PeriphCLKConfig+0x188>
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8020efa:	687b      	ldr	r3, [r7, #4]
 8020efc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8020efe:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8020f02:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8020f06:	d111      	bne.n	8020f2c <HAL_RCCEx_PeriphCLKConfig+0x1dc>
 8020f08:	4b05      	ldr	r3, [pc, #20]	; (8020f20 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8020f0a:	689b      	ldr	r3, [r3, #8]
 8020f0c:	f423 12f8 	bic.w	r2, r3, #2031616	; 0x1f0000
 8020f10:	687b      	ldr	r3, [r7, #4]
 8020f12:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8020f14:	4b04      	ldr	r3, [pc, #16]	; (8020f28 <HAL_RCCEx_PeriphCLKConfig+0x1d8>)
 8020f16:	400b      	ands	r3, r1
 8020f18:	4901      	ldr	r1, [pc, #4]	; (8020f20 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8020f1a:	4313      	orrs	r3, r2
 8020f1c:	608b      	str	r3, [r1, #8]
 8020f1e:	e00b      	b.n	8020f38 <HAL_RCCEx_PeriphCLKConfig+0x1e8>
 8020f20:	40023800 	.word	0x40023800
 8020f24:	40007000 	.word	0x40007000
 8020f28:	0ffffcff 	.word	0x0ffffcff
 8020f2c:	4bb1      	ldr	r3, [pc, #708]	; (80211f4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8020f2e:	689b      	ldr	r3, [r3, #8]
 8020f30:	4ab0      	ldr	r2, [pc, #704]	; (80211f4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8020f32:	f423 13f8 	bic.w	r3, r3, #2031616	; 0x1f0000
 8020f36:	6093      	str	r3, [r2, #8]
 8020f38:	4bae      	ldr	r3, [pc, #696]	; (80211f4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8020f3a:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 8020f3c:	687b      	ldr	r3, [r7, #4]
 8020f3e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8020f40:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8020f44:	49ab      	ldr	r1, [pc, #684]	; (80211f4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8020f46:	4313      	orrs	r3, r2
 8020f48:	670b      	str	r3, [r1, #112]	; 0x70
  }

  /*------------------------------------ TIM configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 8020f4a:	687b      	ldr	r3, [r7, #4]
 8020f4c:	681b      	ldr	r3, [r3, #0]
 8020f4e:	f003 0310 	and.w	r3, r3, #16
 8020f52:	2b00      	cmp	r3, #0
 8020f54:	d010      	beq.n	8020f78 <HAL_RCCEx_PeriphCLKConfig+0x228>
  {
    /* Check the parameters */
    assert_param(IS_RCC_TIMPRES(PeriphClkInit->TIMPresSelection));

    /* Configure Timer Prescaler */
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 8020f56:	4ba7      	ldr	r3, [pc, #668]	; (80211f4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8020f58:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8020f5c:	4aa5      	ldr	r2, [pc, #660]	; (80211f4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8020f5e:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8020f62:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
 8020f66:	4ba3      	ldr	r3, [pc, #652]	; (80211f4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8020f68:	f8d3 208c 	ldr.w	r2, [r3, #140]	; 0x8c
 8020f6c:	687b      	ldr	r3, [r7, #4]
 8020f6e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8020f70:	49a0      	ldr	r1, [pc, #640]	; (80211f4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8020f72:	4313      	orrs	r3, r2
 8020f74:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
  }

  /*-------------------------------------- I2C1 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C1) == RCC_PERIPHCLK_I2C1)
 8020f78:	687b      	ldr	r3, [r7, #4]
 8020f7a:	681b      	ldr	r3, [r3, #0]
 8020f7c:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8020f80:	2b00      	cmp	r3, #0
 8020f82:	d00a      	beq.n	8020f9a <HAL_RCCEx_PeriphCLKConfig+0x24a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C1CLKSOURCE(PeriphClkInit->I2c1ClockSelection));

    /* Configure the I2C1 clock source */
    __HAL_RCC_I2C1_CONFIG(PeriphClkInit->I2c1ClockSelection);
 8020f84:	4b9b      	ldr	r3, [pc, #620]	; (80211f4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8020f86:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8020f8a:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 8020f8e:	687b      	ldr	r3, [r7, #4]
 8020f90:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8020f92:	4998      	ldr	r1, [pc, #608]	; (80211f4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8020f94:	4313      	orrs	r3, r2
 8020f96:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- I2C2 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C2) == RCC_PERIPHCLK_I2C2)
 8020f9a:	687b      	ldr	r3, [r7, #4]
 8020f9c:	681b      	ldr	r3, [r3, #0]
 8020f9e:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8020fa2:	2b00      	cmp	r3, #0
 8020fa4:	d00a      	beq.n	8020fbc <HAL_RCCEx_PeriphCLKConfig+0x26c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C2CLKSOURCE(PeriphClkInit->I2c2ClockSelection));

    /* Configure the I2C2 clock source */
    __HAL_RCC_I2C2_CONFIG(PeriphClkInit->I2c2ClockSelection);
 8020fa6:	4b93      	ldr	r3, [pc, #588]	; (80211f4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8020fa8:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8020fac:	f423 2240 	bic.w	r2, r3, #786432	; 0xc0000
 8020fb0:	687b      	ldr	r3, [r7, #4]
 8020fb2:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8020fb4:	498f      	ldr	r1, [pc, #572]	; (80211f4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8020fb6:	4313      	orrs	r3, r2
 8020fb8:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- I2C3 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C3) == RCC_PERIPHCLK_I2C3)
 8020fbc:	687b      	ldr	r3, [r7, #4]
 8020fbe:	681b      	ldr	r3, [r3, #0]
 8020fc0:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8020fc4:	2b00      	cmp	r3, #0
 8020fc6:	d00a      	beq.n	8020fde <HAL_RCCEx_PeriphCLKConfig+0x28e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C3CLKSOURCE(PeriphClkInit->I2c3ClockSelection));

    /* Configure the I2C3 clock source */
    __HAL_RCC_I2C3_CONFIG(PeriphClkInit->I2c3ClockSelection);
 8020fc8:	4b8a      	ldr	r3, [pc, #552]	; (80211f4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8020fca:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8020fce:	f423 1240 	bic.w	r2, r3, #3145728	; 0x300000
 8020fd2:	687b      	ldr	r3, [r7, #4]
 8020fd4:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8020fd6:	4987      	ldr	r1, [pc, #540]	; (80211f4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8020fd8:	4313      	orrs	r3, r2
 8020fda:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- I2C4 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
 8020fde:	687b      	ldr	r3, [r7, #4]
 8020fe0:	681b      	ldr	r3, [r3, #0]
 8020fe2:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8020fe6:	2b00      	cmp	r3, #0
 8020fe8:	d00a      	beq.n	8021000 <HAL_RCCEx_PeriphCLKConfig+0x2b0>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C4CLKSOURCE(PeriphClkInit->I2c4ClockSelection));

    /* Configure the I2C4 clock source */
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
 8020fea:	4b82      	ldr	r3, [pc, #520]	; (80211f4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8020fec:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8020ff0:	f423 0240 	bic.w	r2, r3, #12582912	; 0xc00000
 8020ff4:	687b      	ldr	r3, [r7, #4]
 8020ff6:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8020ff8:	497e      	ldr	r1, [pc, #504]	; (80211f4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8020ffa:	4313      	orrs	r3, r2
 8020ffc:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- USART1 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART1) == RCC_PERIPHCLK_USART1)
 8021000:	687b      	ldr	r3, [r7, #4]
 8021002:	681b      	ldr	r3, [r3, #0]
 8021004:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8021008:	2b00      	cmp	r3, #0
 802100a:	d00a      	beq.n	8021022 <HAL_RCCEx_PeriphCLKConfig+0x2d2>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART1CLKSOURCE(PeriphClkInit->Usart1ClockSelection));

    /* Configure the USART1 clock source */
    __HAL_RCC_USART1_CONFIG(PeriphClkInit->Usart1ClockSelection);
 802100c:	4b79      	ldr	r3, [pc, #484]	; (80211f4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 802100e:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8021012:	f023 0203 	bic.w	r2, r3, #3
 8021016:	687b      	ldr	r3, [r7, #4]
 8021018:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 802101a:	4976      	ldr	r1, [pc, #472]	; (80211f4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 802101c:	4313      	orrs	r3, r2
 802101e:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- USART2 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART2) == RCC_PERIPHCLK_USART2)
 8021022:	687b      	ldr	r3, [r7, #4]
 8021024:	681b      	ldr	r3, [r3, #0]
 8021026:	f003 0380 	and.w	r3, r3, #128	; 0x80
 802102a:	2b00      	cmp	r3, #0
 802102c:	d00a      	beq.n	8021044 <HAL_RCCEx_PeriphCLKConfig+0x2f4>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART2CLKSOURCE(PeriphClkInit->Usart2ClockSelection));

    /* Configure the USART2 clock source */
    __HAL_RCC_USART2_CONFIG(PeriphClkInit->Usart2ClockSelection);
 802102e:	4b71      	ldr	r3, [pc, #452]	; (80211f4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021030:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8021034:	f023 020c 	bic.w	r2, r3, #12
 8021038:	687b      	ldr	r3, [r7, #4]
 802103a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 802103c:	496d      	ldr	r1, [pc, #436]	; (80211f4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 802103e:	4313      	orrs	r3, r2
 8021040:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- USART3 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART3) == RCC_PERIPHCLK_USART3)
 8021044:	687b      	ldr	r3, [r7, #4]
 8021046:	681b      	ldr	r3, [r3, #0]
 8021048:	f403 7380 	and.w	r3, r3, #256	; 0x100
 802104c:	2b00      	cmp	r3, #0
 802104e:	d00a      	beq.n	8021066 <HAL_RCCEx_PeriphCLKConfig+0x316>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART3CLKSOURCE(PeriphClkInit->Usart3ClockSelection));

    /* Configure the USART3 clock source */
    __HAL_RCC_USART3_CONFIG(PeriphClkInit->Usart3ClockSelection);
 8021050:	4b68      	ldr	r3, [pc, #416]	; (80211f4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021052:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8021056:	f023 0230 	bic.w	r2, r3, #48	; 0x30
 802105a:	687b      	ldr	r3, [r7, #4]
 802105c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 802105e:	4965      	ldr	r1, [pc, #404]	; (80211f4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021060:	4313      	orrs	r3, r2
 8021062:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- UART4 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART4) == RCC_PERIPHCLK_UART4)
 8021066:	687b      	ldr	r3, [r7, #4]
 8021068:	681b      	ldr	r3, [r3, #0]
 802106a:	f403 7300 	and.w	r3, r3, #512	; 0x200
 802106e:	2b00      	cmp	r3, #0
 8021070:	d00a      	beq.n	8021088 <HAL_RCCEx_PeriphCLKConfig+0x338>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART4CLKSOURCE(PeriphClkInit->Uart4ClockSelection));

    /* Configure the UART4 clock source */
    __HAL_RCC_UART4_CONFIG(PeriphClkInit->Uart4ClockSelection);
 8021072:	4b60      	ldr	r3, [pc, #384]	; (80211f4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021074:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8021078:	f023 02c0 	bic.w	r2, r3, #192	; 0xc0
 802107c:	687b      	ldr	r3, [r7, #4]
 802107e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8021080:	495c      	ldr	r1, [pc, #368]	; (80211f4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021082:	4313      	orrs	r3, r2
 8021084:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- UART5 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART5) == RCC_PERIPHCLK_UART5)
 8021088:	687b      	ldr	r3, [r7, #4]
 802108a:	681b      	ldr	r3, [r3, #0]
 802108c:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8021090:	2b00      	cmp	r3, #0
 8021092:	d00a      	beq.n	80210aa <HAL_RCCEx_PeriphCLKConfig+0x35a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART5CLKSOURCE(PeriphClkInit->Uart5ClockSelection));

    /* Configure the UART5 clock source */
    __HAL_RCC_UART5_CONFIG(PeriphClkInit->Uart5ClockSelection);
 8021094:	4b57      	ldr	r3, [pc, #348]	; (80211f4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021096:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 802109a:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 802109e:	687b      	ldr	r3, [r7, #4]
 80210a0:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80210a2:	4954      	ldr	r1, [pc, #336]	; (80211f4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 80210a4:	4313      	orrs	r3, r2
 80210a6:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- USART6 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART6) == RCC_PERIPHCLK_USART6)
 80210aa:	687b      	ldr	r3, [r7, #4]
 80210ac:	681b      	ldr	r3, [r3, #0]
 80210ae:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 80210b2:	2b00      	cmp	r3, #0
 80210b4:	d00a      	beq.n	80210cc <HAL_RCCEx_PeriphCLKConfig+0x37c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART6CLKSOURCE(PeriphClkInit->Usart6ClockSelection));

    /* Configure the USART6 clock source */
    __HAL_RCC_USART6_CONFIG(PeriphClkInit->Usart6ClockSelection);
 80210b6:	4b4f      	ldr	r3, [pc, #316]	; (80211f4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 80210b8:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80210bc:	f423 6240 	bic.w	r2, r3, #3072	; 0xc00
 80210c0:	687b      	ldr	r3, [r7, #4]
 80210c2:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80210c4:	494b      	ldr	r1, [pc, #300]	; (80211f4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 80210c6:	4313      	orrs	r3, r2
 80210c8:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- UART7 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART7) == RCC_PERIPHCLK_UART7)
 80210cc:	687b      	ldr	r3, [r7, #4]
 80210ce:	681b      	ldr	r3, [r3, #0]
 80210d0:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 80210d4:	2b00      	cmp	r3, #0
 80210d6:	d00a      	beq.n	80210ee <HAL_RCCEx_PeriphCLKConfig+0x39e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART7CLKSOURCE(PeriphClkInit->Uart7ClockSelection));

    /* Configure the UART7 clock source */
    __HAL_RCC_UART7_CONFIG(PeriphClkInit->Uart7ClockSelection);
 80210d8:	4b46      	ldr	r3, [pc, #280]	; (80211f4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 80210da:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80210de:	f423 5240 	bic.w	r2, r3, #12288	; 0x3000
 80210e2:	687b      	ldr	r3, [r7, #4]
 80210e4:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80210e6:	4943      	ldr	r1, [pc, #268]	; (80211f4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 80210e8:	4313      	orrs	r3, r2
 80210ea:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- UART8 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART8) == RCC_PERIPHCLK_UART8)
 80210ee:	687b      	ldr	r3, [r7, #4]
 80210f0:	681b      	ldr	r3, [r3, #0]
 80210f2:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 80210f6:	2b00      	cmp	r3, #0
 80210f8:	d00a      	beq.n	8021110 <HAL_RCCEx_PeriphCLKConfig+0x3c0>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART8CLKSOURCE(PeriphClkInit->Uart8ClockSelection));

    /* Configure the UART8 clock source */
    __HAL_RCC_UART8_CONFIG(PeriphClkInit->Uart8ClockSelection);
 80210fa:	4b3e      	ldr	r3, [pc, #248]	; (80211f4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 80210fc:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8021100:	f423 4240 	bic.w	r2, r3, #49152	; 0xc000
 8021104:	687b      	ldr	r3, [r7, #4]
 8021106:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8021108:	493a      	ldr	r1, [pc, #232]	; (80211f4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 802110a:	4313      	orrs	r3, r2
 802110c:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*--------------------------------------- CEC Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
 8021110:	687b      	ldr	r3, [r7, #4]
 8021112:	681b      	ldr	r3, [r3, #0]
 8021114:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8021118:	2b00      	cmp	r3, #0
 802111a:	d00a      	beq.n	8021132 <HAL_RCCEx_PeriphCLKConfig+0x3e2>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CECCLKSOURCE(PeriphClkInit->CecClockSelection));

    /* Configure the CEC clock source */
    __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
 802111c:	4b35      	ldr	r3, [pc, #212]	; (80211f4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 802111e:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8021122:	f023 6280 	bic.w	r2, r3, #67108864	; 0x4000000
 8021126:	687b      	ldr	r3, [r7, #4]
 8021128:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 802112a:	4932      	ldr	r1, [pc, #200]	; (80211f4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 802112c:	4313      	orrs	r3, r2
 802112e:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- CK48 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
 8021132:	687b      	ldr	r3, [r7, #4]
 8021134:	681b      	ldr	r3, [r3, #0]
 8021136:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 802113a:	2b00      	cmp	r3, #0
 802113c:	d011      	beq.n	8021162 <HAL_RCCEx_PeriphCLKConfig+0x412>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CLK48SOURCE(PeriphClkInit->Clk48ClockSelection));

    /* Configure the CLK48 source */
    __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
 802113e:	4b2d      	ldr	r3, [pc, #180]	; (80211f4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021140:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8021144:	f023 6200 	bic.w	r2, r3, #134217728	; 0x8000000
 8021148:	687b      	ldr	r3, [r7, #4]
 802114a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 802114c:	4929      	ldr	r1, [pc, #164]	; (80211f4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 802114e:	4313      	orrs	r3, r2
 8021150:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90

    /* Enable the PLLSAI when it's used as clock source for CK48 */
    if(PeriphClkInit->Clk48ClockSelection == RCC_CLK48SOURCE_PLLSAIP)
 8021154:	687b      	ldr	r3, [r7, #4]
 8021156:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8021158:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 802115c:	d101      	bne.n	8021162 <HAL_RCCEx_PeriphCLKConfig+0x412>
    {
      pllsaiused = 1;
 802115e:	2301      	movs	r3, #1
 8021160:	61bb      	str	r3, [r7, #24]
    }
  }

  /*-------------------------------------- LTDC Configuration -----------------------------------*/
#if defined(STM32F746xx) || defined(STM32F756xx) || defined (STM32F767xx) || defined (STM32F769xx) || defined (STM32F777xx) || defined (STM32F779xx) || defined (STM32F750xx)
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
 8021162:	687b      	ldr	r3, [r7, #4]
 8021164:	681b      	ldr	r3, [r3, #0]
 8021166:	f003 0308 	and.w	r3, r3, #8
 802116a:	2b00      	cmp	r3, #0
 802116c:	d001      	beq.n	8021172 <HAL_RCCEx_PeriphCLKConfig+0x422>
  {
    pllsaiused = 1;
 802116e:	2301      	movs	r3, #1
 8021170:	61bb      	str	r3, [r7, #24]
  }
#endif /* STM32F746xx || STM32F756xx || STM32F767xx || STM32F769xx || STM32F777xx || STM32F779xx || STM32F750xx */

  /*-------------------------------------- LPTIM1 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
 8021172:	687b      	ldr	r3, [r7, #4]
 8021174:	681b      	ldr	r3, [r3, #0]
 8021176:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 802117a:	2b00      	cmp	r3, #0
 802117c:	d00a      	beq.n	8021194 <HAL_RCCEx_PeriphCLKConfig+0x444>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LPTIM1CLK(PeriphClkInit->Lptim1ClockSelection));

    /* Configure the LTPIM1 clock source */
    __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
 802117e:	4b1d      	ldr	r3, [pc, #116]	; (80211f4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021180:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8021184:	f023 7240 	bic.w	r2, r3, #50331648	; 0x3000000
 8021188:	687b      	ldr	r3, [r7, #4]
 802118a:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 802118c:	4919      	ldr	r1, [pc, #100]	; (80211f4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 802118e:	4313      	orrs	r3, r2
 8021190:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
   }

  /*------------------------------------- SDMMC1 Configuration ------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC1) == RCC_PERIPHCLK_SDMMC1)
 8021194:	687b      	ldr	r3, [r7, #4]
 8021196:	681b      	ldr	r3, [r3, #0]
 8021198:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 802119c:	2b00      	cmp	r3, #0
 802119e:	d00b      	beq.n	80211b8 <HAL_RCCEx_PeriphCLKConfig+0x468>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SDMMC1CLKSOURCE(PeriphClkInit->Sdmmc1ClockSelection));

    /* Configure the SDMMC1 clock source */
    __HAL_RCC_SDMMC1_CONFIG(PeriphClkInit->Sdmmc1ClockSelection);
 80211a0:	4b14      	ldr	r3, [pc, #80]	; (80211f4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 80211a2:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80211a6:	f023 5280 	bic.w	r2, r3, #268435456	; 0x10000000
 80211aa:	687b      	ldr	r3, [r7, #4]
 80211ac:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80211b0:	4910      	ldr	r1, [pc, #64]	; (80211f4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 80211b2:	4313      	orrs	r3, r2
 80211b4:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }
#endif /* STM32F767xx || STM32F769xx || STM32F777xx || STM32F779xx */

  /*-------------------------------------- PLLI2S Configuration ---------------------------------*/
  /* PLLI2S is configured when a peripheral will use it as source clock : SAI1, SAI2, I2S or SPDIF-RX */
  if((plli2sused == 1) || ((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S))
 80211b8:	69fb      	ldr	r3, [r7, #28]
 80211ba:	2b01      	cmp	r3, #1
 80211bc:	d006      	beq.n	80211cc <HAL_RCCEx_PeriphCLKConfig+0x47c>
 80211be:	687b      	ldr	r3, [r7, #4]
 80211c0:	681b      	ldr	r3, [r3, #0]
 80211c2:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80211c6:	2b00      	cmp	r3, #0
 80211c8:	f000 80d9 	beq.w	802137e <HAL_RCCEx_PeriphCLKConfig+0x62e>
  {
    /* Disable the PLLI2S */
    __HAL_RCC_PLLI2S_DISABLE();
 80211cc:	4b09      	ldr	r3, [pc, #36]	; (80211f4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 80211ce:	681b      	ldr	r3, [r3, #0]
 80211d0:	4a08      	ldr	r2, [pc, #32]	; (80211f4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 80211d2:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 80211d6:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 80211d8:	f7fe fd70 	bl	801fcbc <HAL_GetTick>
 80211dc:	6178      	str	r0, [r7, #20]

    /* Wait till PLLI2S is disabled */
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 80211de:	e00b      	b.n	80211f8 <HAL_RCCEx_PeriphCLKConfig+0x4a8>
    {
      if((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 80211e0:	f7fe fd6c 	bl	801fcbc <HAL_GetTick>
 80211e4:	4602      	mov	r2, r0
 80211e6:	697b      	ldr	r3, [r7, #20]
 80211e8:	1ad3      	subs	r3, r2, r3
 80211ea:	2b64      	cmp	r3, #100	; 0x64
 80211ec:	d904      	bls.n	80211f8 <HAL_RCCEx_PeriphCLKConfig+0x4a8>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 80211ee:	2303      	movs	r3, #3
 80211f0:	e197      	b.n	8021522 <HAL_RCCEx_PeriphCLKConfig+0x7d2>
 80211f2:	bf00      	nop
 80211f4:	40023800 	.word	0x40023800
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 80211f8:	4b6c      	ldr	r3, [pc, #432]	; (80213ac <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 80211fa:	681b      	ldr	r3, [r3, #0]
 80211fc:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8021200:	2b00      	cmp	r3, #0
 8021202:	d1ed      	bne.n	80211e0 <HAL_RCCEx_PeriphCLKConfig+0x490>

    /* check for common PLLI2S Parameters */
    assert_param(IS_RCC_PLLI2SN_VALUE(PeriphClkInit->PLLI2S.PLLI2SN));

    /*----------------- In Case of PLLI2S is selected as source clock for I2S -------------------*/
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) && (PeriphClkInit->I2sClockSelection == RCC_I2SCLKSOURCE_PLLI2S)))
 8021204:	687b      	ldr	r3, [r7, #4]
 8021206:	681b      	ldr	r3, [r3, #0]
 8021208:	f003 0301 	and.w	r3, r3, #1
 802120c:	2b00      	cmp	r3, #0
 802120e:	d021      	beq.n	8021254 <HAL_RCCEx_PeriphCLKConfig+0x504>
 8021210:	687b      	ldr	r3, [r7, #4]
 8021212:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8021214:	2b00      	cmp	r3, #0
 8021216:	d11d      	bne.n	8021254 <HAL_RCCEx_PeriphCLKConfig+0x504>
    {
      /* check for Parameters */
      assert_param(IS_RCC_PLLI2SR_VALUE(PeriphClkInit->PLLI2S.PLLI2SR));

      /* Read PLLI2SP and PLLI2SQ value from PLLI2SCFGR register (this value is not needed for I2S configuration) */
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SP) >> RCC_PLLI2SCFGR_PLLI2SP_Pos);
 8021218:	4b64      	ldr	r3, [pc, #400]	; (80213ac <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 802121a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 802121e:	0c1b      	lsrs	r3, r3, #16
 8021220:	f003 0303 	and.w	r3, r3, #3
 8021224:	613b      	str	r3, [r7, #16]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SQ) >> RCC_PLLI2SCFGR_PLLI2SQ_Pos);
 8021226:	4b61      	ldr	r3, [pc, #388]	; (80213ac <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8021228:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 802122c:	0e1b      	lsrs	r3, r3, #24
 802122e:	f003 030f 	and.w	r3, r3, #15
 8021232:	60fb      	str	r3, [r7, #12]
      /* Configure the PLLI2S division factors */
      /* PLLI2S_VCO = f(VCO clock) = f(PLLI2S clock input) x (PLLI2SN/PLLM) */
      /* I2SCLK = f(PLLI2S clock output) = f(VCO clock) / PLLI2SR */
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , tmpreg0, tmpreg1, PeriphClkInit->PLLI2S.PLLI2SR);
 8021234:	687b      	ldr	r3, [r7, #4]
 8021236:	685b      	ldr	r3, [r3, #4]
 8021238:	019a      	lsls	r2, r3, #6
 802123a:	693b      	ldr	r3, [r7, #16]
 802123c:	041b      	lsls	r3, r3, #16
 802123e:	431a      	orrs	r2, r3
 8021240:	68fb      	ldr	r3, [r7, #12]
 8021242:	061b      	lsls	r3, r3, #24
 8021244:	431a      	orrs	r2, r3
 8021246:	687b      	ldr	r3, [r7, #4]
 8021248:	689b      	ldr	r3, [r3, #8]
 802124a:	071b      	lsls	r3, r3, #28
 802124c:	4957      	ldr	r1, [pc, #348]	; (80213ac <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 802124e:	4313      	orrs	r3, r2
 8021250:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
    }

    /*----------------- In Case of PLLI2S is selected as source clock for SAI -------------------*/
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1) && (PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLI2S)) ||
 8021254:	687b      	ldr	r3, [r7, #4]
 8021256:	681b      	ldr	r3, [r3, #0]
 8021258:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 802125c:	2b00      	cmp	r3, #0
 802125e:	d004      	beq.n	802126a <HAL_RCCEx_PeriphCLKConfig+0x51a>
 8021260:	687b      	ldr	r3, [r7, #4]
 8021262:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8021264:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8021268:	d00a      	beq.n	8021280 <HAL_RCCEx_PeriphCLKConfig+0x530>
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2) && (PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLI2S)))
 802126a:	687b      	ldr	r3, [r7, #4]
 802126c:	681b      	ldr	r3, [r3, #0]
 802126e:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1) && (PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLI2S)) ||
 8021272:	2b00      	cmp	r3, #0
 8021274:	d02e      	beq.n	80212d4 <HAL_RCCEx_PeriphCLKConfig+0x584>
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2) && (PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLI2S)))
 8021276:	687b      	ldr	r3, [r7, #4]
 8021278:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 802127a:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 802127e:	d129      	bne.n	80212d4 <HAL_RCCEx_PeriphCLKConfig+0x584>
      assert_param(IS_RCC_PLLI2SQ_VALUE(PeriphClkInit->PLLI2S.PLLI2SQ));
      /* Check for PLLI2S/DIVQ parameters */
      assert_param(IS_RCC_PLLI2S_DIVQ_VALUE(PeriphClkInit->PLLI2SDivQ));

      /* Read PLLI2SP and PLLI2SR values from PLLI2SCFGR register (this value is not needed for SAI configuration) */
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SP) >> RCC_PLLI2SCFGR_PLLI2SP_Pos);
 8021280:	4b4a      	ldr	r3, [pc, #296]	; (80213ac <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8021282:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8021286:	0c1b      	lsrs	r3, r3, #16
 8021288:	f003 0303 	and.w	r3, r3, #3
 802128c:	613b      	str	r3, [r7, #16]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 802128e:	4b47      	ldr	r3, [pc, #284]	; (80213ac <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8021290:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8021294:	0f1b      	lsrs	r3, r3, #28
 8021296:	f003 0307 	and.w	r3, r3, #7
 802129a:	60fb      	str	r3, [r7, #12]
      /* Configure the PLLI2S division factors */
      /* PLLI2S_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLI2S_VCO Output = PLLI2S_VCO Input * PLLI2SN */
      /* SAI_CLK(first level) = PLLI2S_VCO Output/PLLI2SQ */
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, tmpreg0, PeriphClkInit->PLLI2S.PLLI2SQ, tmpreg1);
 802129c:	687b      	ldr	r3, [r7, #4]
 802129e:	685b      	ldr	r3, [r3, #4]
 80212a0:	019a      	lsls	r2, r3, #6
 80212a2:	693b      	ldr	r3, [r7, #16]
 80212a4:	041b      	lsls	r3, r3, #16
 80212a6:	431a      	orrs	r2, r3
 80212a8:	687b      	ldr	r3, [r7, #4]
 80212aa:	68db      	ldr	r3, [r3, #12]
 80212ac:	061b      	lsls	r3, r3, #24
 80212ae:	431a      	orrs	r2, r3
 80212b0:	68fb      	ldr	r3, [r7, #12]
 80212b2:	071b      	lsls	r3, r3, #28
 80212b4:	493d      	ldr	r1, [pc, #244]	; (80213ac <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 80212b6:	4313      	orrs	r3, r2
 80212b8:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84

      /* SAI_CLK_x = SAI_CLK(first level)/PLLI2SDIVQ */
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 80212bc:	4b3b      	ldr	r3, [pc, #236]	; (80213ac <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 80212be:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 80212c2:	f023 021f 	bic.w	r2, r3, #31
 80212c6:	687b      	ldr	r3, [r7, #4]
 80212c8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80212ca:	3b01      	subs	r3, #1
 80212cc:	4937      	ldr	r1, [pc, #220]	; (80213ac <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 80212ce:	4313      	orrs	r3, r2
 80212d0:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
    }

    /*----------------- In Case of PLLI2S is selected as source clock for SPDIF-RX -------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
 80212d4:	687b      	ldr	r3, [r7, #4]
 80212d6:	681b      	ldr	r3, [r3, #0]
 80212d8:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 80212dc:	2b00      	cmp	r3, #0
 80212de:	d01d      	beq.n	802131c <HAL_RCCEx_PeriphCLKConfig+0x5cc>
    {
      /* check for Parameters */
      assert_param(IS_RCC_PLLI2SP_VALUE(PeriphClkInit->PLLI2S.PLLI2SP));

     /* Read PLLI2SR value from PLLI2SCFGR register (this value is not needed for SPDIF-RX configuration) */
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SQ) >> RCC_PLLI2SCFGR_PLLI2SQ_Pos);
 80212e0:	4b32      	ldr	r3, [pc, #200]	; (80213ac <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 80212e2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80212e6:	0e1b      	lsrs	r3, r3, #24
 80212e8:	f003 030f 	and.w	r3, r3, #15
 80212ec:	613b      	str	r3, [r7, #16]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 80212ee:	4b2f      	ldr	r3, [pc, #188]	; (80213ac <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 80212f0:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80212f4:	0f1b      	lsrs	r3, r3, #28
 80212f6:	f003 0307 	and.w	r3, r3, #7
 80212fa:	60fb      	str	r3, [r7, #12]
      /* Configure the PLLI2S division factors */
      /* PLLI2S_VCO = f(VCO clock) = f(PLLI2S clock input) x (PLLI2SN/PLLM) */
      /* SPDIFCLK = f(PLLI2S clock output) = f(VCO clock) / PLLI2SP */
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SP, tmpreg0, tmpreg1);
 80212fc:	687b      	ldr	r3, [r7, #4]
 80212fe:	685b      	ldr	r3, [r3, #4]
 8021300:	019a      	lsls	r2, r3, #6
 8021302:	687b      	ldr	r3, [r7, #4]
 8021304:	691b      	ldr	r3, [r3, #16]
 8021306:	041b      	lsls	r3, r3, #16
 8021308:	431a      	orrs	r2, r3
 802130a:	693b      	ldr	r3, [r7, #16]
 802130c:	061b      	lsls	r3, r3, #24
 802130e:	431a      	orrs	r2, r3
 8021310:	68fb      	ldr	r3, [r7, #12]
 8021312:	071b      	lsls	r3, r3, #28
 8021314:	4925      	ldr	r1, [pc, #148]	; (80213ac <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8021316:	4313      	orrs	r3, r2
 8021318:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
    }

    /*----------------- In Case of PLLI2S is just selected  -----------------*/
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 802131c:	687b      	ldr	r3, [r7, #4]
 802131e:	681b      	ldr	r3, [r3, #0]
 8021320:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8021324:	2b00      	cmp	r3, #0
 8021326:	d011      	beq.n	802134c <HAL_RCCEx_PeriphCLKConfig+0x5fc>
      assert_param(IS_RCC_PLLI2SQ_VALUE(PeriphClkInit->PLLI2S.PLLI2SQ));

      /* Configure the PLLI2S division factors */
      /* PLLI2S_VCO = f(VCO clock) = f(PLLI2S clock input) x (PLLI2SN/PLLI2SM) */
      /* SPDIFRXCLK = f(PLLI2S clock output) = f(VCO clock) / PLLI2SP */
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SP, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 8021328:	687b      	ldr	r3, [r7, #4]
 802132a:	685b      	ldr	r3, [r3, #4]
 802132c:	019a      	lsls	r2, r3, #6
 802132e:	687b      	ldr	r3, [r7, #4]
 8021330:	691b      	ldr	r3, [r3, #16]
 8021332:	041b      	lsls	r3, r3, #16
 8021334:	431a      	orrs	r2, r3
 8021336:	687b      	ldr	r3, [r7, #4]
 8021338:	68db      	ldr	r3, [r3, #12]
 802133a:	061b      	lsls	r3, r3, #24
 802133c:	431a      	orrs	r2, r3
 802133e:	687b      	ldr	r3, [r7, #4]
 8021340:	689b      	ldr	r3, [r3, #8]
 8021342:	071b      	lsls	r3, r3, #28
 8021344:	4919      	ldr	r1, [pc, #100]	; (80213ac <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8021346:	4313      	orrs	r3, r2
 8021348:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
    }

    /* Enable the PLLI2S */
    __HAL_RCC_PLLI2S_ENABLE();
 802134c:	4b17      	ldr	r3, [pc, #92]	; (80213ac <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 802134e:	681b      	ldr	r3, [r3, #0]
 8021350:	4a16      	ldr	r2, [pc, #88]	; (80213ac <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8021352:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8021356:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8021358:	f7fe fcb0 	bl	801fcbc <HAL_GetTick>
 802135c:	6178      	str	r0, [r7, #20]

    /* Wait till PLLI2S is ready */
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 802135e:	e008      	b.n	8021372 <HAL_RCCEx_PeriphCLKConfig+0x622>
    {
      if((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 8021360:	f7fe fcac 	bl	801fcbc <HAL_GetTick>
 8021364:	4602      	mov	r2, r0
 8021366:	697b      	ldr	r3, [r7, #20]
 8021368:	1ad3      	subs	r3, r2, r3
 802136a:	2b64      	cmp	r3, #100	; 0x64
 802136c:	d901      	bls.n	8021372 <HAL_RCCEx_PeriphCLKConfig+0x622>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 802136e:	2303      	movs	r3, #3
 8021370:	e0d7      	b.n	8021522 <HAL_RCCEx_PeriphCLKConfig+0x7d2>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8021372:	4b0e      	ldr	r3, [pc, #56]	; (80213ac <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8021374:	681b      	ldr	r3, [r3, #0]
 8021376:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 802137a:	2b00      	cmp	r3, #0
 802137c:	d0f0      	beq.n	8021360 <HAL_RCCEx_PeriphCLKConfig+0x610>
    }
  }

  /*-------------------------------------- PLLSAI Configuration ---------------------------------*/
  /* PLLSAI is configured when a peripheral will use it as source clock : SAI1, SAI2, LTDC or CK48 */
  if(pllsaiused == 1)
 802137e:	69bb      	ldr	r3, [r7, #24]
 8021380:	2b01      	cmp	r3, #1
 8021382:	f040 80cd 	bne.w	8021520 <HAL_RCCEx_PeriphCLKConfig+0x7d0>
  {
    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 8021386:	4b09      	ldr	r3, [pc, #36]	; (80213ac <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8021388:	681b      	ldr	r3, [r3, #0]
 802138a:	4a08      	ldr	r2, [pc, #32]	; (80213ac <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 802138c:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8021390:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8021392:	f7fe fc93 	bl	801fcbc <HAL_GetTick>
 8021396:	6178      	str	r0, [r7, #20]

    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8021398:	e00a      	b.n	80213b0 <HAL_RCCEx_PeriphCLKConfig+0x660>
    {
      if((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 802139a:	f7fe fc8f 	bl	801fcbc <HAL_GetTick>
 802139e:	4602      	mov	r2, r0
 80213a0:	697b      	ldr	r3, [r7, #20]
 80213a2:	1ad3      	subs	r3, r2, r3
 80213a4:	2b64      	cmp	r3, #100	; 0x64
 80213a6:	d903      	bls.n	80213b0 <HAL_RCCEx_PeriphCLKConfig+0x660>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 80213a8:	2303      	movs	r3, #3
 80213aa:	e0ba      	b.n	8021522 <HAL_RCCEx_PeriphCLKConfig+0x7d2>
 80213ac:	40023800 	.word	0x40023800
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 80213b0:	4b5e      	ldr	r3, [pc, #376]	; (802152c <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 80213b2:	681b      	ldr	r3, [r3, #0]
 80213b4:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 80213b8:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 80213bc:	d0ed      	beq.n	802139a <HAL_RCCEx_PeriphCLKConfig+0x64a>

    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /*----------------- In Case of PLLSAI is selected as source clock for SAI -------------------*/
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1) && (PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLSAI)) ||\
 80213be:	687b      	ldr	r3, [r7, #4]
 80213c0:	681b      	ldr	r3, [r3, #0]
 80213c2:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 80213c6:	2b00      	cmp	r3, #0
 80213c8:	d003      	beq.n	80213d2 <HAL_RCCEx_PeriphCLKConfig+0x682>
 80213ca:	687b      	ldr	r3, [r7, #4]
 80213cc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80213ce:	2b00      	cmp	r3, #0
 80213d0:	d009      	beq.n	80213e6 <HAL_RCCEx_PeriphCLKConfig+0x696>
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2) && (PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLSAI)))
 80213d2:	687b      	ldr	r3, [r7, #4]
 80213d4:	681b      	ldr	r3, [r3, #0]
 80213d6:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1) && (PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLSAI)) ||\
 80213da:	2b00      	cmp	r3, #0
 80213dc:	d02e      	beq.n	802143c <HAL_RCCEx_PeriphCLKConfig+0x6ec>
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2) && (PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLSAI)))
 80213de:	687b      	ldr	r3, [r7, #4]
 80213e0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80213e2:	2b00      	cmp	r3, #0
 80213e4:	d12a      	bne.n	802143c <HAL_RCCEx_PeriphCLKConfig+0x6ec>
      assert_param(IS_RCC_PLLSAIQ_VALUE(PeriphClkInit->PLLSAI.PLLSAIQ));
      /* check for PLLSAI/DIVQ Parameter */
      assert_param(IS_RCC_PLLSAI_DIVQ_VALUE(PeriphClkInit->PLLSAIDivQ));

      /* Read PLLSAIP value from PLLSAICFGR register (this value is not needed for SAI configuration) */
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos);
 80213e6:	4b51      	ldr	r3, [pc, #324]	; (802152c <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 80213e8:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80213ec:	0c1b      	lsrs	r3, r3, #16
 80213ee:	f003 0303 	and.w	r3, r3, #3
 80213f2:	613b      	str	r3, [r7, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 80213f4:	4b4d      	ldr	r3, [pc, #308]	; (802152c <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 80213f6:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80213fa:	0f1b      	lsrs	r3, r3, #28
 80213fc:	f003 0307 	and.w	r3, r3, #7
 8021400:	60fb      	str	r3, [r7, #12]
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg0, PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8021402:	687b      	ldr	r3, [r7, #4]
 8021404:	695b      	ldr	r3, [r3, #20]
 8021406:	019a      	lsls	r2, r3, #6
 8021408:	693b      	ldr	r3, [r7, #16]
 802140a:	041b      	lsls	r3, r3, #16
 802140c:	431a      	orrs	r2, r3
 802140e:	687b      	ldr	r3, [r7, #4]
 8021410:	699b      	ldr	r3, [r3, #24]
 8021412:	061b      	lsls	r3, r3, #24
 8021414:	431a      	orrs	r2, r3
 8021416:	68fb      	ldr	r3, [r7, #12]
 8021418:	071b      	lsls	r3, r3, #28
 802141a:	4944      	ldr	r1, [pc, #272]	; (802152c <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 802141c:	4313      	orrs	r3, r2
 802141e:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88

      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 8021422:	4b42      	ldr	r3, [pc, #264]	; (802152c <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8021424:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8021428:	f423 52f8 	bic.w	r2, r3, #7936	; 0x1f00
 802142c:	687b      	ldr	r3, [r7, #4]
 802142e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8021430:	3b01      	subs	r3, #1
 8021432:	021b      	lsls	r3, r3, #8
 8021434:	493d      	ldr	r1, [pc, #244]	; (802152c <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8021436:	4313      	orrs	r3, r2
 8021438:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
    }

    /*----------------- In Case of PLLSAI is selected as source clock for CLK48 -------------------*/
    /* In Case of PLLI2S is selected as source clock for CK48 */
    if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48) && (PeriphClkInit->Clk48ClockSelection == RCC_CLK48SOURCE_PLLSAIP))
 802143c:	687b      	ldr	r3, [r7, #4]
 802143e:	681b      	ldr	r3, [r3, #0]
 8021440:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8021444:	2b00      	cmp	r3, #0
 8021446:	d022      	beq.n	802148e <HAL_RCCEx_PeriphCLKConfig+0x73e>
 8021448:	687b      	ldr	r3, [r7, #4]
 802144a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 802144c:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8021450:	d11d      	bne.n	802148e <HAL_RCCEx_PeriphCLKConfig+0x73e>
    {
      /* check for Parameters */
      assert_param(IS_RCC_PLLSAIP_VALUE(PeriphClkInit->PLLSAI.PLLSAIP));
      /* Read PLLSAIQ and PLLSAIR value from PLLSAICFGR register (this value is not needed for CK48 configuration) */
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8021452:	4b36      	ldr	r3, [pc, #216]	; (802152c <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8021454:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8021458:	0e1b      	lsrs	r3, r3, #24
 802145a:	f003 030f 	and.w	r3, r3, #15
 802145e:	613b      	str	r3, [r7, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8021460:	4b32      	ldr	r3, [pc, #200]	; (802152c <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8021462:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8021466:	0f1b      	lsrs	r3, r3, #28
 8021468:	f003 0307 	and.w	r3, r3, #7
 802146c:	60fb      	str	r3, [r7, #12]

      /* Configure the PLLSAI division factors */
      /* PLLSAI_VCO = f(VCO clock) = f(PLLSAI clock input) x (PLLI2SN/PLLM) */
      /* 48CLK = f(PLLSAI clock output) = f(VCO clock) / PLLSAIP */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIP, tmpreg0, tmpreg1);
 802146e:	687b      	ldr	r3, [r7, #4]
 8021470:	695b      	ldr	r3, [r3, #20]
 8021472:	019a      	lsls	r2, r3, #6
 8021474:	687b      	ldr	r3, [r7, #4]
 8021476:	6a1b      	ldr	r3, [r3, #32]
 8021478:	041b      	lsls	r3, r3, #16
 802147a:	431a      	orrs	r2, r3
 802147c:	693b      	ldr	r3, [r7, #16]
 802147e:	061b      	lsls	r3, r3, #24
 8021480:	431a      	orrs	r2, r3
 8021482:	68fb      	ldr	r3, [r7, #12]
 8021484:	071b      	lsls	r3, r3, #28
 8021486:	4929      	ldr	r1, [pc, #164]	; (802152c <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8021488:	4313      	orrs	r3, r2
 802148a:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
    }

#if defined(STM32F746xx) || defined(STM32F756xx) || defined (STM32F767xx) || defined (STM32F769xx) || defined (STM32F777xx) || defined (STM32F779xx) || defined (STM32F750xx)
    /*---------------------------- LTDC configuration -------------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 802148e:	687b      	ldr	r3, [r7, #4]
 8021490:	681b      	ldr	r3, [r3, #0]
 8021492:	f003 0308 	and.w	r3, r3, #8
 8021496:	2b00      	cmp	r3, #0
 8021498:	d028      	beq.n	80214ec <HAL_RCCEx_PeriphCLKConfig+0x79c>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIP and PLLSAIQ value from PLLSAICFGR register (these value are not needed for LTDC configuration) */
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 802149a:	4b24      	ldr	r3, [pc, #144]	; (802152c <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 802149c:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80214a0:	0e1b      	lsrs	r3, r3, #24
 80214a2:	f003 030f 	and.w	r3, r3, #15
 80214a6:	613b      	str	r3, [r7, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos);
 80214a8:	4b20      	ldr	r3, [pc, #128]	; (802152c <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 80214aa:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80214ae:	0c1b      	lsrs	r3, r3, #16
 80214b0:	f003 0303 	and.w	r3, r3, #3
 80214b4:	60fb      	str	r3, [r7, #12]

      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, tmpreg0, PeriphClkInit->PLLSAI.PLLSAIR);
 80214b6:	687b      	ldr	r3, [r7, #4]
 80214b8:	695b      	ldr	r3, [r3, #20]
 80214ba:	019a      	lsls	r2, r3, #6
 80214bc:	68fb      	ldr	r3, [r7, #12]
 80214be:	041b      	lsls	r3, r3, #16
 80214c0:	431a      	orrs	r2, r3
 80214c2:	693b      	ldr	r3, [r7, #16]
 80214c4:	061b      	lsls	r3, r3, #24
 80214c6:	431a      	orrs	r2, r3
 80214c8:	687b      	ldr	r3, [r7, #4]
 80214ca:	69db      	ldr	r3, [r3, #28]
 80214cc:	071b      	lsls	r3, r3, #28
 80214ce:	4917      	ldr	r1, [pc, #92]	; (802152c <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 80214d0:	4313      	orrs	r3, r2
 80214d2:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88

      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 80214d6:	4b15      	ldr	r3, [pc, #84]	; (802152c <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 80214d8:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 80214dc:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 80214e0:	687b      	ldr	r3, [r7, #4]
 80214e2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80214e4:	4911      	ldr	r1, [pc, #68]	; (802152c <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 80214e6:	4313      	orrs	r3, r2
 80214e8:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
    }
#endif /* STM32F746xx || STM32F756xx || STM32F767xx || STM32F769xx || STM32F777xx || STM32F779xx || STM32F750xx  */

    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 80214ec:	4b0f      	ldr	r3, [pc, #60]	; (802152c <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 80214ee:	681b      	ldr	r3, [r3, #0]
 80214f0:	4a0e      	ldr	r2, [pc, #56]	; (802152c <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 80214f2:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80214f6:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 80214f8:	f7fe fbe0 	bl	801fcbc <HAL_GetTick>
 80214fc:	6178      	str	r0, [r7, #20]

    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 80214fe:	e008      	b.n	8021512 <HAL_RCCEx_PeriphCLKConfig+0x7c2>
    {
      if((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 8021500:	f7fe fbdc 	bl	801fcbc <HAL_GetTick>
 8021504:	4602      	mov	r2, r0
 8021506:	697b      	ldr	r3, [r7, #20]
 8021508:	1ad3      	subs	r3, r2, r3
 802150a:	2b64      	cmp	r3, #100	; 0x64
 802150c:	d901      	bls.n	8021512 <HAL_RCCEx_PeriphCLKConfig+0x7c2>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 802150e:	2303      	movs	r3, #3
 8021510:	e007      	b.n	8021522 <HAL_RCCEx_PeriphCLKConfig+0x7d2>
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8021512:	4b06      	ldr	r3, [pc, #24]	; (802152c <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8021514:	681b      	ldr	r3, [r3, #0]
 8021516:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 802151a:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 802151e:	d1ef      	bne.n	8021500 <HAL_RCCEx_PeriphCLKConfig+0x7b0>
      }
    }
  }
  return HAL_OK;
 8021520:	2300      	movs	r3, #0
}
 8021522:	4618      	mov	r0, r3
 8021524:	3720      	adds	r7, #32
 8021526:	46bd      	mov	sp, r7
 8021528:	bd80      	pop	{r7, pc}
 802152a:	bf00      	nop
 802152c:	40023800 	.word	0x40023800

08021530 <HAL_UART_Init>:
  *        parameters in the UART_InitTypeDef and initialize the associated handle.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
{
 8021530:	b580      	push	{r7, lr}
 8021532:	b082      	sub	sp, #8
 8021534:	af00      	add	r7, sp, #0
 8021536:	6078      	str	r0, [r7, #4]
  /* Check the UART handle allocation */
  if (huart == NULL)
 8021538:	687b      	ldr	r3, [r7, #4]
 802153a:	2b00      	cmp	r3, #0
 802153c:	d101      	bne.n	8021542 <HAL_UART_Init+0x12>
  {
    return HAL_ERROR;
 802153e:	2301      	movs	r3, #1
 8021540:	e040      	b.n	80215c4 <HAL_UART_Init+0x94>
  {
    /* Check the parameters */
    assert_param(IS_UART_INSTANCE(huart->Instance));
  }

  if (huart->gState == HAL_UART_STATE_RESET)
 8021542:	687b      	ldr	r3, [r7, #4]
 8021544:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8021546:	2b00      	cmp	r3, #0
 8021548:	d106      	bne.n	8021558 <HAL_UART_Init+0x28>
  {
    /* Allocate lock resource and initialize it */
    huart->Lock = HAL_UNLOCKED;
 802154a:	687b      	ldr	r3, [r7, #4]
 802154c:	2200      	movs	r2, #0
 802154e:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

    /* Init the low level hardware */
    huart->MspInitCallback(huart);
#else
    /* Init the low level hardware : GPIO, CLOCK */
    HAL_UART_MspInit(huart);
 8021552:	6878      	ldr	r0, [r7, #4]
 8021554:	f7fc fd7e 	bl	801e054 <HAL_UART_MspInit>
#endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
  }

  huart->gState = HAL_UART_STATE_BUSY;
 8021558:	687b      	ldr	r3, [r7, #4]
 802155a:	2224      	movs	r2, #36	; 0x24
 802155c:	679a      	str	r2, [r3, #120]	; 0x78

  __HAL_UART_DISABLE(huart);
 802155e:	687b      	ldr	r3, [r7, #4]
 8021560:	681b      	ldr	r3, [r3, #0]
 8021562:	681a      	ldr	r2, [r3, #0]
 8021564:	687b      	ldr	r3, [r7, #4]
 8021566:	681b      	ldr	r3, [r3, #0]
 8021568:	f022 0201 	bic.w	r2, r2, #1
 802156c:	601a      	str	r2, [r3, #0]

  /* Set the UART Communication parameters */
  if (UART_SetConfig(huart) == HAL_ERROR)
 802156e:	6878      	ldr	r0, [r7, #4]
 8021570:	f000 fbd8 	bl	8021d24 <UART_SetConfig>
 8021574:	4603      	mov	r3, r0
 8021576:	2b01      	cmp	r3, #1
 8021578:	d101      	bne.n	802157e <HAL_UART_Init+0x4e>
  {
    return HAL_ERROR;
 802157a:	2301      	movs	r3, #1
 802157c:	e022      	b.n	80215c4 <HAL_UART_Init+0x94>
  }

  if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 802157e:	687b      	ldr	r3, [r7, #4]
 8021580:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8021582:	2b00      	cmp	r3, #0
 8021584:	d002      	beq.n	802158c <HAL_UART_Init+0x5c>
  {
    UART_AdvFeatureConfig(huart);
 8021586:	6878      	ldr	r0, [r7, #4]
 8021588:	f000 fe2e 	bl	80221e8 <UART_AdvFeatureConfig>
  }

  /* In asynchronous mode, the following bits must be kept cleared:
  - LINEN and CLKEN bits in the USART_CR2 register,
  - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 802158c:	687b      	ldr	r3, [r7, #4]
 802158e:	681b      	ldr	r3, [r3, #0]
 8021590:	685a      	ldr	r2, [r3, #4]
 8021592:	687b      	ldr	r3, [r7, #4]
 8021594:	681b      	ldr	r3, [r3, #0]
 8021596:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 802159a:	605a      	str	r2, [r3, #4]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 802159c:	687b      	ldr	r3, [r7, #4]
 802159e:	681b      	ldr	r3, [r3, #0]
 80215a0:	689a      	ldr	r2, [r3, #8]
 80215a2:	687b      	ldr	r3, [r7, #4]
 80215a4:	681b      	ldr	r3, [r3, #0]
 80215a6:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 80215aa:	609a      	str	r2, [r3, #8]

  __HAL_UART_ENABLE(huart);
 80215ac:	687b      	ldr	r3, [r7, #4]
 80215ae:	681b      	ldr	r3, [r3, #0]
 80215b0:	681a      	ldr	r2, [r3, #0]
 80215b2:	687b      	ldr	r3, [r7, #4]
 80215b4:	681b      	ldr	r3, [r3, #0]
 80215b6:	f042 0201 	orr.w	r2, r2, #1
 80215ba:	601a      	str	r2, [r3, #0]

  /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
  return (UART_CheckIdleState(huart));
 80215bc:	6878      	ldr	r0, [r7, #4]
 80215be:	f000 feb5 	bl	802232c <UART_CheckIdleState>
 80215c2:	4603      	mov	r3, r0
}
 80215c4:	4618      	mov	r0, r3
 80215c6:	3708      	adds	r7, #8
 80215c8:	46bd      	mov	sp, r7
 80215ca:	bd80      	pop	{r7, pc}

080215cc <HAL_UART_Transmit>:
  * @param Size    Amount of data elements (u8 or u16) to be sent.
  * @param Timeout Timeout duration.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 80215cc:	b580      	push	{r7, lr}
 80215ce:	b08a      	sub	sp, #40	; 0x28
 80215d0:	af02      	add	r7, sp, #8
 80215d2:	60f8      	str	r0, [r7, #12]
 80215d4:	60b9      	str	r1, [r7, #8]
 80215d6:	603b      	str	r3, [r7, #0]
 80215d8:	4613      	mov	r3, r2
 80215da:	80fb      	strh	r3, [r7, #6]
  uint8_t  *pdata8bits;
  uint16_t *pdata16bits;
  uint32_t tickstart;

  /* Check that a Tx process is not already ongoing */
  if (huart->gState == HAL_UART_STATE_READY)
 80215dc:	68fb      	ldr	r3, [r7, #12]
 80215de:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80215e0:	2b20      	cmp	r3, #32
 80215e2:	f040 8081 	bne.w	80216e8 <HAL_UART_Transmit+0x11c>
  {
    if ((pData == NULL) || (Size == 0U))
 80215e6:	68bb      	ldr	r3, [r7, #8]
 80215e8:	2b00      	cmp	r3, #0
 80215ea:	d002      	beq.n	80215f2 <HAL_UART_Transmit+0x26>
 80215ec:	88fb      	ldrh	r3, [r7, #6]
 80215ee:	2b00      	cmp	r3, #0
 80215f0:	d101      	bne.n	80215f6 <HAL_UART_Transmit+0x2a>
    {
      return  HAL_ERROR;
 80215f2:	2301      	movs	r3, #1
 80215f4:	e079      	b.n	80216ea <HAL_UART_Transmit+0x11e>
    }

    __HAL_LOCK(huart);
 80215f6:	68fb      	ldr	r3, [r7, #12]
 80215f8:	f893 3074 	ldrb.w	r3, [r3, #116]	; 0x74
 80215fc:	2b01      	cmp	r3, #1
 80215fe:	d101      	bne.n	8021604 <HAL_UART_Transmit+0x38>
 8021600:	2302      	movs	r3, #2
 8021602:	e072      	b.n	80216ea <HAL_UART_Transmit+0x11e>
 8021604:	68fb      	ldr	r3, [r7, #12]
 8021606:	2201      	movs	r2, #1
 8021608:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

    huart->ErrorCode = HAL_UART_ERROR_NONE;
 802160c:	68fb      	ldr	r3, [r7, #12]
 802160e:	2200      	movs	r2, #0
 8021610:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
    huart->gState = HAL_UART_STATE_BUSY_TX;
 8021614:	68fb      	ldr	r3, [r7, #12]
 8021616:	2221      	movs	r2, #33	; 0x21
 8021618:	679a      	str	r2, [r3, #120]	; 0x78

    /* Init tickstart for timeout management */
    tickstart = HAL_GetTick();
 802161a:	f7fe fb4f 	bl	801fcbc <HAL_GetTick>
 802161e:	6178      	str	r0, [r7, #20]

    huart->TxXferSize  = Size;
 8021620:	68fb      	ldr	r3, [r7, #12]
 8021622:	88fa      	ldrh	r2, [r7, #6]
 8021624:	f8a3 2050 	strh.w	r2, [r3, #80]	; 0x50
    huart->TxXferCount = Size;
 8021628:	68fb      	ldr	r3, [r7, #12]
 802162a:	88fa      	ldrh	r2, [r7, #6]
 802162c:	f8a3 2052 	strh.w	r2, [r3, #82]	; 0x52

    /* In case of 9bits/No Parity transfer, pData needs to be handled as a uint16_t pointer */
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8021630:	68fb      	ldr	r3, [r7, #12]
 8021632:	689b      	ldr	r3, [r3, #8]
 8021634:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8021638:	d108      	bne.n	802164c <HAL_UART_Transmit+0x80>
 802163a:	68fb      	ldr	r3, [r7, #12]
 802163c:	691b      	ldr	r3, [r3, #16]
 802163e:	2b00      	cmp	r3, #0
 8021640:	d104      	bne.n	802164c <HAL_UART_Transmit+0x80>
    {
      pdata8bits  = NULL;
 8021642:	2300      	movs	r3, #0
 8021644:	61fb      	str	r3, [r7, #28]
      pdata16bits = (uint16_t *) pData;
 8021646:	68bb      	ldr	r3, [r7, #8]
 8021648:	61bb      	str	r3, [r7, #24]
 802164a:	e003      	b.n	8021654 <HAL_UART_Transmit+0x88>
    }
    else
    {
      pdata8bits  = pData;
 802164c:	68bb      	ldr	r3, [r7, #8]
 802164e:	61fb      	str	r3, [r7, #28]
      pdata16bits = NULL;
 8021650:	2300      	movs	r3, #0
 8021652:	61bb      	str	r3, [r7, #24]
    }

    __HAL_UNLOCK(huart);
 8021654:	68fb      	ldr	r3, [r7, #12]
 8021656:	2200      	movs	r2, #0
 8021658:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

    while (huart->TxXferCount > 0U)
 802165c:	e02c      	b.n	80216b8 <HAL_UART_Transmit+0xec>
    {
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 802165e:	683b      	ldr	r3, [r7, #0]
 8021660:	9300      	str	r3, [sp, #0]
 8021662:	697b      	ldr	r3, [r7, #20]
 8021664:	2200      	movs	r2, #0
 8021666:	2180      	movs	r1, #128	; 0x80
 8021668:	68f8      	ldr	r0, [r7, #12]
 802166a:	f000 fe92 	bl	8022392 <UART_WaitOnFlagUntilTimeout>
 802166e:	4603      	mov	r3, r0
 8021670:	2b00      	cmp	r3, #0
 8021672:	d001      	beq.n	8021678 <HAL_UART_Transmit+0xac>
      {
        return HAL_TIMEOUT;
 8021674:	2303      	movs	r3, #3
 8021676:	e038      	b.n	80216ea <HAL_UART_Transmit+0x11e>
      }
      if (pdata8bits == NULL)
 8021678:	69fb      	ldr	r3, [r7, #28]
 802167a:	2b00      	cmp	r3, #0
 802167c:	d10b      	bne.n	8021696 <HAL_UART_Transmit+0xca>
      {
        huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
 802167e:	69bb      	ldr	r3, [r7, #24]
 8021680:	881b      	ldrh	r3, [r3, #0]
 8021682:	461a      	mov	r2, r3
 8021684:	68fb      	ldr	r3, [r7, #12]
 8021686:	681b      	ldr	r3, [r3, #0]
 8021688:	f3c2 0208 	ubfx	r2, r2, #0, #9
 802168c:	629a      	str	r2, [r3, #40]	; 0x28
        pdata16bits++;
 802168e:	69bb      	ldr	r3, [r7, #24]
 8021690:	3302      	adds	r3, #2
 8021692:	61bb      	str	r3, [r7, #24]
 8021694:	e007      	b.n	80216a6 <HAL_UART_Transmit+0xda>
      }
      else
      {
        huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
 8021696:	69fb      	ldr	r3, [r7, #28]
 8021698:	781a      	ldrb	r2, [r3, #0]
 802169a:	68fb      	ldr	r3, [r7, #12]
 802169c:	681b      	ldr	r3, [r3, #0]
 802169e:	629a      	str	r2, [r3, #40]	; 0x28
        pdata8bits++;
 80216a0:	69fb      	ldr	r3, [r7, #28]
 80216a2:	3301      	adds	r3, #1
 80216a4:	61fb      	str	r3, [r7, #28]
      }
      huart->TxXferCount--;
 80216a6:	68fb      	ldr	r3, [r7, #12]
 80216a8:	f8b3 3052 	ldrh.w	r3, [r3, #82]	; 0x52
 80216ac:	b29b      	uxth	r3, r3
 80216ae:	3b01      	subs	r3, #1
 80216b0:	b29a      	uxth	r2, r3
 80216b2:	68fb      	ldr	r3, [r7, #12]
 80216b4:	f8a3 2052 	strh.w	r2, [r3, #82]	; 0x52
    while (huart->TxXferCount > 0U)
 80216b8:	68fb      	ldr	r3, [r7, #12]
 80216ba:	f8b3 3052 	ldrh.w	r3, [r3, #82]	; 0x52
 80216be:	b29b      	uxth	r3, r3
 80216c0:	2b00      	cmp	r3, #0
 80216c2:	d1cc      	bne.n	802165e <HAL_UART_Transmit+0x92>
    }

    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 80216c4:	683b      	ldr	r3, [r7, #0]
 80216c6:	9300      	str	r3, [sp, #0]
 80216c8:	697b      	ldr	r3, [r7, #20]
 80216ca:	2200      	movs	r2, #0
 80216cc:	2140      	movs	r1, #64	; 0x40
 80216ce:	68f8      	ldr	r0, [r7, #12]
 80216d0:	f000 fe5f 	bl	8022392 <UART_WaitOnFlagUntilTimeout>
 80216d4:	4603      	mov	r3, r0
 80216d6:	2b00      	cmp	r3, #0
 80216d8:	d001      	beq.n	80216de <HAL_UART_Transmit+0x112>
    {
      return HAL_TIMEOUT;
 80216da:	2303      	movs	r3, #3
 80216dc:	e005      	b.n	80216ea <HAL_UART_Transmit+0x11e>
    }

    /* At end of Tx process, restore huart->gState to Ready */
    huart->gState = HAL_UART_STATE_READY;
 80216de:	68fb      	ldr	r3, [r7, #12]
 80216e0:	2220      	movs	r2, #32
 80216e2:	679a      	str	r2, [r3, #120]	; 0x78

    return HAL_OK;
 80216e4:	2300      	movs	r3, #0
 80216e6:	e000      	b.n	80216ea <HAL_UART_Transmit+0x11e>
  }
  else
  {
    return HAL_BUSY;
 80216e8:	2302      	movs	r3, #2
  }
}
 80216ea:	4618      	mov	r0, r3
 80216ec:	3720      	adds	r7, #32
 80216ee:	46bd      	mov	sp, r7
 80216f0:	bd80      	pop	{r7, pc}

080216f2 <HAL_UART_Receive>:
  * @param Size    Amount of data elements (u8 or u16) to be received.
  * @param Timeout Timeout duration.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 80216f2:	b580      	push	{r7, lr}
 80216f4:	b08a      	sub	sp, #40	; 0x28
 80216f6:	af02      	add	r7, sp, #8
 80216f8:	60f8      	str	r0, [r7, #12]
 80216fa:	60b9      	str	r1, [r7, #8]
 80216fc:	603b      	str	r3, [r7, #0]
 80216fe:	4613      	mov	r3, r2
 8021700:	80fb      	strh	r3, [r7, #6]
  uint16_t *pdata16bits;
  uint16_t uhMask;
  uint32_t tickstart;

  /* Check that a Rx process is not already ongoing */
  if (huart->RxState == HAL_UART_STATE_READY)
 8021702:	68fb      	ldr	r3, [r7, #12]
 8021704:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8021706:	2b20      	cmp	r3, #32
 8021708:	f040 80be 	bne.w	8021888 <HAL_UART_Receive+0x196>
  {
    if ((pData == NULL) || (Size == 0U))
 802170c:	68bb      	ldr	r3, [r7, #8]
 802170e:	2b00      	cmp	r3, #0
 8021710:	d002      	beq.n	8021718 <HAL_UART_Receive+0x26>
 8021712:	88fb      	ldrh	r3, [r7, #6]
 8021714:	2b00      	cmp	r3, #0
 8021716:	d101      	bne.n	802171c <HAL_UART_Receive+0x2a>
    {
      return  HAL_ERROR;
 8021718:	2301      	movs	r3, #1
 802171a:	e0b6      	b.n	802188a <HAL_UART_Receive+0x198>
    }

    __HAL_LOCK(huart);
 802171c:	68fb      	ldr	r3, [r7, #12]
 802171e:	f893 3074 	ldrb.w	r3, [r3, #116]	; 0x74
 8021722:	2b01      	cmp	r3, #1
 8021724:	d101      	bne.n	802172a <HAL_UART_Receive+0x38>
 8021726:	2302      	movs	r3, #2
 8021728:	e0af      	b.n	802188a <HAL_UART_Receive+0x198>
 802172a:	68fb      	ldr	r3, [r7, #12]
 802172c:	2201      	movs	r2, #1
 802172e:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

    huart->ErrorCode = HAL_UART_ERROR_NONE;
 8021732:	68fb      	ldr	r3, [r7, #12]
 8021734:	2200      	movs	r2, #0
 8021736:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
    huart->RxState = HAL_UART_STATE_BUSY_RX;
 802173a:	68fb      	ldr	r3, [r7, #12]
 802173c:	2222      	movs	r2, #34	; 0x22
 802173e:	67da      	str	r2, [r3, #124]	; 0x7c
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8021740:	68fb      	ldr	r3, [r7, #12]
 8021742:	2200      	movs	r2, #0
 8021744:	661a      	str	r2, [r3, #96]	; 0x60

    /* Init tickstart for timeout management */
    tickstart = HAL_GetTick();
 8021746:	f7fe fab9 	bl	801fcbc <HAL_GetTick>
 802174a:	6178      	str	r0, [r7, #20]

    huart->RxXferSize  = Size;
 802174c:	68fb      	ldr	r3, [r7, #12]
 802174e:	88fa      	ldrh	r2, [r7, #6]
 8021750:	f8a3 2058 	strh.w	r2, [r3, #88]	; 0x58
    huart->RxXferCount = Size;
 8021754:	68fb      	ldr	r3, [r7, #12]
 8021756:	88fa      	ldrh	r2, [r7, #6]
 8021758:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a

    /* Computation of UART mask to apply to RDR register */
    UART_MASK_COMPUTATION(huart);
 802175c:	68fb      	ldr	r3, [r7, #12]
 802175e:	689b      	ldr	r3, [r3, #8]
 8021760:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8021764:	d10e      	bne.n	8021784 <HAL_UART_Receive+0x92>
 8021766:	68fb      	ldr	r3, [r7, #12]
 8021768:	691b      	ldr	r3, [r3, #16]
 802176a:	2b00      	cmp	r3, #0
 802176c:	d105      	bne.n	802177a <HAL_UART_Receive+0x88>
 802176e:	68fb      	ldr	r3, [r7, #12]
 8021770:	f240 12ff 	movw	r2, #511	; 0x1ff
 8021774:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 8021778:	e02d      	b.n	80217d6 <HAL_UART_Receive+0xe4>
 802177a:	68fb      	ldr	r3, [r7, #12]
 802177c:	22ff      	movs	r2, #255	; 0xff
 802177e:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 8021782:	e028      	b.n	80217d6 <HAL_UART_Receive+0xe4>
 8021784:	68fb      	ldr	r3, [r7, #12]
 8021786:	689b      	ldr	r3, [r3, #8]
 8021788:	2b00      	cmp	r3, #0
 802178a:	d10d      	bne.n	80217a8 <HAL_UART_Receive+0xb6>
 802178c:	68fb      	ldr	r3, [r7, #12]
 802178e:	691b      	ldr	r3, [r3, #16]
 8021790:	2b00      	cmp	r3, #0
 8021792:	d104      	bne.n	802179e <HAL_UART_Receive+0xac>
 8021794:	68fb      	ldr	r3, [r7, #12]
 8021796:	22ff      	movs	r2, #255	; 0xff
 8021798:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 802179c:	e01b      	b.n	80217d6 <HAL_UART_Receive+0xe4>
 802179e:	68fb      	ldr	r3, [r7, #12]
 80217a0:	227f      	movs	r2, #127	; 0x7f
 80217a2:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 80217a6:	e016      	b.n	80217d6 <HAL_UART_Receive+0xe4>
 80217a8:	68fb      	ldr	r3, [r7, #12]
 80217aa:	689b      	ldr	r3, [r3, #8]
 80217ac:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 80217b0:	d10d      	bne.n	80217ce <HAL_UART_Receive+0xdc>
 80217b2:	68fb      	ldr	r3, [r7, #12]
 80217b4:	691b      	ldr	r3, [r3, #16]
 80217b6:	2b00      	cmp	r3, #0
 80217b8:	d104      	bne.n	80217c4 <HAL_UART_Receive+0xd2>
 80217ba:	68fb      	ldr	r3, [r7, #12]
 80217bc:	227f      	movs	r2, #127	; 0x7f
 80217be:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 80217c2:	e008      	b.n	80217d6 <HAL_UART_Receive+0xe4>
 80217c4:	68fb      	ldr	r3, [r7, #12]
 80217c6:	223f      	movs	r2, #63	; 0x3f
 80217c8:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 80217cc:	e003      	b.n	80217d6 <HAL_UART_Receive+0xe4>
 80217ce:	68fb      	ldr	r3, [r7, #12]
 80217d0:	2200      	movs	r2, #0
 80217d2:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
    uhMask = huart->Mask;
 80217d6:	68fb      	ldr	r3, [r7, #12]
 80217d8:	f8b3 305c 	ldrh.w	r3, [r3, #92]	; 0x5c
 80217dc:	827b      	strh	r3, [r7, #18]

    /* In case of 9bits/No Parity transfer, pRxData needs to be handled as a uint16_t pointer */
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 80217de:	68fb      	ldr	r3, [r7, #12]
 80217e0:	689b      	ldr	r3, [r3, #8]
 80217e2:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80217e6:	d108      	bne.n	80217fa <HAL_UART_Receive+0x108>
 80217e8:	68fb      	ldr	r3, [r7, #12]
 80217ea:	691b      	ldr	r3, [r3, #16]
 80217ec:	2b00      	cmp	r3, #0
 80217ee:	d104      	bne.n	80217fa <HAL_UART_Receive+0x108>
    {
      pdata8bits  = NULL;
 80217f0:	2300      	movs	r3, #0
 80217f2:	61fb      	str	r3, [r7, #28]
      pdata16bits = (uint16_t *) pData;
 80217f4:	68bb      	ldr	r3, [r7, #8]
 80217f6:	61bb      	str	r3, [r7, #24]
 80217f8:	e003      	b.n	8021802 <HAL_UART_Receive+0x110>
    }
    else
    {
      pdata8bits  = pData;
 80217fa:	68bb      	ldr	r3, [r7, #8]
 80217fc:	61fb      	str	r3, [r7, #28]
      pdata16bits = NULL;
 80217fe:	2300      	movs	r3, #0
 8021800:	61bb      	str	r3, [r7, #24]
    }

    __HAL_UNLOCK(huart);
 8021802:	68fb      	ldr	r3, [r7, #12]
 8021804:	2200      	movs	r2, #0
 8021806:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

    /* as long as data have to be received */
    while (huart->RxXferCount > 0U)
 802180a:	e032      	b.n	8021872 <HAL_UART_Receive+0x180>
    {
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 802180c:	683b      	ldr	r3, [r7, #0]
 802180e:	9300      	str	r3, [sp, #0]
 8021810:	697b      	ldr	r3, [r7, #20]
 8021812:	2200      	movs	r2, #0
 8021814:	2120      	movs	r1, #32
 8021816:	68f8      	ldr	r0, [r7, #12]
 8021818:	f000 fdbb 	bl	8022392 <UART_WaitOnFlagUntilTimeout>
 802181c:	4603      	mov	r3, r0
 802181e:	2b00      	cmp	r3, #0
 8021820:	d001      	beq.n	8021826 <HAL_UART_Receive+0x134>
      {
        return HAL_TIMEOUT;
 8021822:	2303      	movs	r3, #3
 8021824:	e031      	b.n	802188a <HAL_UART_Receive+0x198>
      }
      if (pdata8bits == NULL)
 8021826:	69fb      	ldr	r3, [r7, #28]
 8021828:	2b00      	cmp	r3, #0
 802182a:	d10c      	bne.n	8021846 <HAL_UART_Receive+0x154>
      {
        *pdata16bits = (uint16_t)(huart->Instance->RDR & uhMask);
 802182c:	68fb      	ldr	r3, [r7, #12]
 802182e:	681b      	ldr	r3, [r3, #0]
 8021830:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8021832:	b29a      	uxth	r2, r3
 8021834:	8a7b      	ldrh	r3, [r7, #18]
 8021836:	4013      	ands	r3, r2
 8021838:	b29a      	uxth	r2, r3
 802183a:	69bb      	ldr	r3, [r7, #24]
 802183c:	801a      	strh	r2, [r3, #0]
        pdata16bits++;
 802183e:	69bb      	ldr	r3, [r7, #24]
 8021840:	3302      	adds	r3, #2
 8021842:	61bb      	str	r3, [r7, #24]
 8021844:	e00c      	b.n	8021860 <HAL_UART_Receive+0x16e>
      }
      else
      {
        *pdata8bits = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
 8021846:	68fb      	ldr	r3, [r7, #12]
 8021848:	681b      	ldr	r3, [r3, #0]
 802184a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 802184c:	b2da      	uxtb	r2, r3
 802184e:	8a7b      	ldrh	r3, [r7, #18]
 8021850:	b2db      	uxtb	r3, r3
 8021852:	4013      	ands	r3, r2
 8021854:	b2da      	uxtb	r2, r3
 8021856:	69fb      	ldr	r3, [r7, #28]
 8021858:	701a      	strb	r2, [r3, #0]
        pdata8bits++;
 802185a:	69fb      	ldr	r3, [r7, #28]
 802185c:	3301      	adds	r3, #1
 802185e:	61fb      	str	r3, [r7, #28]
      }
      huart->RxXferCount--;
 8021860:	68fb      	ldr	r3, [r7, #12]
 8021862:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 8021866:	b29b      	uxth	r3, r3
 8021868:	3b01      	subs	r3, #1
 802186a:	b29a      	uxth	r2, r3
 802186c:	68fb      	ldr	r3, [r7, #12]
 802186e:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a
    while (huart->RxXferCount > 0U)
 8021872:	68fb      	ldr	r3, [r7, #12]
 8021874:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 8021878:	b29b      	uxth	r3, r3
 802187a:	2b00      	cmp	r3, #0
 802187c:	d1c6      	bne.n	802180c <HAL_UART_Receive+0x11a>
    }

    /* At end of Rx process, restore huart->RxState to Ready */
    huart->RxState = HAL_UART_STATE_READY;
 802187e:	68fb      	ldr	r3, [r7, #12]
 8021880:	2220      	movs	r2, #32
 8021882:	67da      	str	r2, [r3, #124]	; 0x7c

    return HAL_OK;
 8021884:	2300      	movs	r3, #0
 8021886:	e000      	b.n	802188a <HAL_UART_Receive+0x198>
  }
  else
  {
    return HAL_BUSY;
 8021888:	2302      	movs	r3, #2
  }
}
 802188a:	4618      	mov	r0, r3
 802188c:	3720      	adds	r7, #32
 802188e:	46bd      	mov	sp, r7
 8021890:	bd80      	pop	{r7, pc}

08021892 <HAL_UART_Receive_IT>:
  * @param pData Pointer to data buffer (u8 or u16 data elements).
  * @param Size  Amount of data elements (u8 or u16) to be received.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
{
 8021892:	b580      	push	{r7, lr}
 8021894:	b084      	sub	sp, #16
 8021896:	af00      	add	r7, sp, #0
 8021898:	60f8      	str	r0, [r7, #12]
 802189a:	60b9      	str	r1, [r7, #8]
 802189c:	4613      	mov	r3, r2
 802189e:	80fb      	strh	r3, [r7, #6]
  /* Check that a Rx process is not already ongoing */
  if (huart->RxState == HAL_UART_STATE_READY)
 80218a0:	68fb      	ldr	r3, [r7, #12]
 80218a2:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80218a4:	2b20      	cmp	r3, #32
 80218a6:	d12c      	bne.n	8021902 <HAL_UART_Receive_IT+0x70>
  {
    if ((pData == NULL) || (Size == 0U))
 80218a8:	68bb      	ldr	r3, [r7, #8]
 80218aa:	2b00      	cmp	r3, #0
 80218ac:	d002      	beq.n	80218b4 <HAL_UART_Receive_IT+0x22>
 80218ae:	88fb      	ldrh	r3, [r7, #6]
 80218b0:	2b00      	cmp	r3, #0
 80218b2:	d101      	bne.n	80218b8 <HAL_UART_Receive_IT+0x26>
    {
      return HAL_ERROR;
 80218b4:	2301      	movs	r3, #1
 80218b6:	e025      	b.n	8021904 <HAL_UART_Receive_IT+0x72>
    }

    __HAL_LOCK(huart);
 80218b8:	68fb      	ldr	r3, [r7, #12]
 80218ba:	f893 3074 	ldrb.w	r3, [r3, #116]	; 0x74
 80218be:	2b01      	cmp	r3, #1
 80218c0:	d101      	bne.n	80218c6 <HAL_UART_Receive_IT+0x34>
 80218c2:	2302      	movs	r3, #2
 80218c4:	e01e      	b.n	8021904 <HAL_UART_Receive_IT+0x72>
 80218c6:	68fb      	ldr	r3, [r7, #12]
 80218c8:	2201      	movs	r2, #1
 80218ca:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

    /* Set Reception type to Standard reception */
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 80218ce:	68fb      	ldr	r3, [r7, #12]
 80218d0:	2200      	movs	r2, #0
 80218d2:	661a      	str	r2, [r3, #96]	; 0x60

    /* Check that USART RTOEN bit is set */
    if (READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
 80218d4:	68fb      	ldr	r3, [r7, #12]
 80218d6:	681b      	ldr	r3, [r3, #0]
 80218d8:	685b      	ldr	r3, [r3, #4]
 80218da:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 80218de:	2b00      	cmp	r3, #0
 80218e0:	d007      	beq.n	80218f2 <HAL_UART_Receive_IT+0x60>
    {
      /* Enable the UART Receiver Timeout Interrupt */
      SET_BIT(huart->Instance->CR1, USART_CR1_RTOIE);
 80218e2:	68fb      	ldr	r3, [r7, #12]
 80218e4:	681b      	ldr	r3, [r3, #0]
 80218e6:	681a      	ldr	r2, [r3, #0]
 80218e8:	68fb      	ldr	r3, [r7, #12]
 80218ea:	681b      	ldr	r3, [r3, #0]
 80218ec:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 80218f0:	601a      	str	r2, [r3, #0]
    }

    return (UART_Start_Receive_IT(huart, pData, Size));
 80218f2:	88fb      	ldrh	r3, [r7, #6]
 80218f4:	461a      	mov	r2, r3
 80218f6:	68b9      	ldr	r1, [r7, #8]
 80218f8:	68f8      	ldr	r0, [r7, #12]
 80218fa:	f000 fdc7 	bl	802248c <UART_Start_Receive_IT>
 80218fe:	4603      	mov	r3, r0
 8021900:	e000      	b.n	8021904 <HAL_UART_Receive_IT+0x72>
  }
  else
  {
    return HAL_BUSY;
 8021902:	2302      	movs	r3, #2
  }
}
 8021904:	4618      	mov	r0, r3
 8021906:	3710      	adds	r7, #16
 8021908:	46bd      	mov	sp, r7
 802190a:	bd80      	pop	{r7, pc}

0802190c <HAL_UART_IRQHandler>:
  * @brief Handle UART interrupt request.
  * @param huart UART handle.
  * @retval None
  */
void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
{
 802190c:	b580      	push	{r7, lr}
 802190e:	b088      	sub	sp, #32
 8021910:	af00      	add	r7, sp, #0
 8021912:	6078      	str	r0, [r7, #4]
  uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 8021914:	687b      	ldr	r3, [r7, #4]
 8021916:	681b      	ldr	r3, [r3, #0]
 8021918:	69db      	ldr	r3, [r3, #28]
 802191a:	61fb      	str	r3, [r7, #28]
  uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 802191c:	687b      	ldr	r3, [r7, #4]
 802191e:	681b      	ldr	r3, [r3, #0]
 8021920:	681b      	ldr	r3, [r3, #0]
 8021922:	61bb      	str	r3, [r7, #24]
  uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 8021924:	687b      	ldr	r3, [r7, #4]
 8021926:	681b      	ldr	r3, [r3, #0]
 8021928:	689b      	ldr	r3, [r3, #8]
 802192a:	617b      	str	r3, [r7, #20]

  uint32_t errorflags;
  uint32_t errorcode;

  /* If no error occurs */
  errorflags = (isrflags & (uint32_t)(USART_ISR_PE | USART_ISR_FE | USART_ISR_ORE | USART_ISR_NE | USART_ISR_RTOF));
 802192c:	69fa      	ldr	r2, [r7, #28]
 802192e:	f640 030f 	movw	r3, #2063	; 0x80f
 8021932:	4013      	ands	r3, r2
 8021934:	613b      	str	r3, [r7, #16]
  if (errorflags == 0U)
 8021936:	693b      	ldr	r3, [r7, #16]
 8021938:	2b00      	cmp	r3, #0
 802193a:	d113      	bne.n	8021964 <HAL_UART_IRQHandler+0x58>
  {
    /* UART in mode Receiver ---------------------------------------------------*/
    if (((isrflags & USART_ISR_RXNE) != 0U)
 802193c:	69fb      	ldr	r3, [r7, #28]
 802193e:	f003 0320 	and.w	r3, r3, #32
 8021942:	2b00      	cmp	r3, #0
 8021944:	d00e      	beq.n	8021964 <HAL_UART_IRQHandler+0x58>
        && ((cr1its & USART_CR1_RXNEIE) != 0U))
 8021946:	69bb      	ldr	r3, [r7, #24]
 8021948:	f003 0320 	and.w	r3, r3, #32
 802194c:	2b00      	cmp	r3, #0
 802194e:	d009      	beq.n	8021964 <HAL_UART_IRQHandler+0x58>
    {
      if (huart->RxISR != NULL)
 8021950:	687b      	ldr	r3, [r7, #4]
 8021952:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8021954:	2b00      	cmp	r3, #0
 8021956:	f000 81b9 	beq.w	8021ccc <HAL_UART_IRQHandler+0x3c0>
      {
        huart->RxISR(huart);
 802195a:	687b      	ldr	r3, [r7, #4]
 802195c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 802195e:	6878      	ldr	r0, [r7, #4]
 8021960:	4798      	blx	r3
      }
      return;
 8021962:	e1b3      	b.n	8021ccc <HAL_UART_IRQHandler+0x3c0>
    }
  }

  /* If some errors occur */
  if ((errorflags != 0U)
 8021964:	693b      	ldr	r3, [r7, #16]
 8021966:	2b00      	cmp	r3, #0
 8021968:	f000 80e3 	beq.w	8021b32 <HAL_UART_IRQHandler+0x226>
      && (((cr3its & USART_CR3_EIE) != 0U)
 802196c:	697b      	ldr	r3, [r7, #20]
 802196e:	f003 0301 	and.w	r3, r3, #1
 8021972:	2b00      	cmp	r3, #0
 8021974:	d105      	bne.n	8021982 <HAL_UART_IRQHandler+0x76>
          || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_RTOIE)) != 0U)))
 8021976:	69ba      	ldr	r2, [r7, #24]
 8021978:	4ba5      	ldr	r3, [pc, #660]	; (8021c10 <HAL_UART_IRQHandler+0x304>)
 802197a:	4013      	ands	r3, r2
 802197c:	2b00      	cmp	r3, #0
 802197e:	f000 80d8 	beq.w	8021b32 <HAL_UART_IRQHandler+0x226>
  {
    /* UART parity error interrupt occurred -------------------------------------*/
    if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
 8021982:	69fb      	ldr	r3, [r7, #28]
 8021984:	f003 0301 	and.w	r3, r3, #1
 8021988:	2b00      	cmp	r3, #0
 802198a:	d010      	beq.n	80219ae <HAL_UART_IRQHandler+0xa2>
 802198c:	69bb      	ldr	r3, [r7, #24]
 802198e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8021992:	2b00      	cmp	r3, #0
 8021994:	d00b      	beq.n	80219ae <HAL_UART_IRQHandler+0xa2>
    {
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
 8021996:	687b      	ldr	r3, [r7, #4]
 8021998:	681b      	ldr	r3, [r3, #0]
 802199a:	2201      	movs	r2, #1
 802199c:	621a      	str	r2, [r3, #32]

      huart->ErrorCode |= HAL_UART_ERROR_PE;
 802199e:	687b      	ldr	r3, [r7, #4]
 80219a0:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80219a4:	f043 0201 	orr.w	r2, r3, #1
 80219a8:	687b      	ldr	r3, [r7, #4]
 80219aa:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
    }

    /* UART frame error interrupt occurred --------------------------------------*/
    if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 80219ae:	69fb      	ldr	r3, [r7, #28]
 80219b0:	f003 0302 	and.w	r3, r3, #2
 80219b4:	2b00      	cmp	r3, #0
 80219b6:	d010      	beq.n	80219da <HAL_UART_IRQHandler+0xce>
 80219b8:	697b      	ldr	r3, [r7, #20]
 80219ba:	f003 0301 	and.w	r3, r3, #1
 80219be:	2b00      	cmp	r3, #0
 80219c0:	d00b      	beq.n	80219da <HAL_UART_IRQHandler+0xce>
    {
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
 80219c2:	687b      	ldr	r3, [r7, #4]
 80219c4:	681b      	ldr	r3, [r3, #0]
 80219c6:	2202      	movs	r2, #2
 80219c8:	621a      	str	r2, [r3, #32]

      huart->ErrorCode |= HAL_UART_ERROR_FE;
 80219ca:	687b      	ldr	r3, [r7, #4]
 80219cc:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80219d0:	f043 0204 	orr.w	r2, r3, #4
 80219d4:	687b      	ldr	r3, [r7, #4]
 80219d6:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
    }

    /* UART noise error interrupt occurred --------------------------------------*/
    if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 80219da:	69fb      	ldr	r3, [r7, #28]
 80219dc:	f003 0304 	and.w	r3, r3, #4
 80219e0:	2b00      	cmp	r3, #0
 80219e2:	d010      	beq.n	8021a06 <HAL_UART_IRQHandler+0xfa>
 80219e4:	697b      	ldr	r3, [r7, #20]
 80219e6:	f003 0301 	and.w	r3, r3, #1
 80219ea:	2b00      	cmp	r3, #0
 80219ec:	d00b      	beq.n	8021a06 <HAL_UART_IRQHandler+0xfa>
    {
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
 80219ee:	687b      	ldr	r3, [r7, #4]
 80219f0:	681b      	ldr	r3, [r3, #0]
 80219f2:	2204      	movs	r2, #4
 80219f4:	621a      	str	r2, [r3, #32]

      huart->ErrorCode |= HAL_UART_ERROR_NE;
 80219f6:	687b      	ldr	r3, [r7, #4]
 80219f8:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80219fc:	f043 0202 	orr.w	r2, r3, #2
 8021a00:	687b      	ldr	r3, [r7, #4]
 8021a02:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
    }

    /* UART Over-Run interrupt occurred -----------------------------------------*/
    if (((isrflags & USART_ISR_ORE) != 0U)
 8021a06:	69fb      	ldr	r3, [r7, #28]
 8021a08:	f003 0308 	and.w	r3, r3, #8
 8021a0c:	2b00      	cmp	r3, #0
 8021a0e:	d015      	beq.n	8021a3c <HAL_UART_IRQHandler+0x130>
        && (((cr1its & USART_CR1_RXNEIE) != 0U) ||
 8021a10:	69bb      	ldr	r3, [r7, #24]
 8021a12:	f003 0320 	and.w	r3, r3, #32
 8021a16:	2b00      	cmp	r3, #0
 8021a18:	d104      	bne.n	8021a24 <HAL_UART_IRQHandler+0x118>
            ((cr3its & USART_CR3_EIE) != 0U)))
 8021a1a:	697b      	ldr	r3, [r7, #20]
 8021a1c:	f003 0301 	and.w	r3, r3, #1
        && (((cr1its & USART_CR1_RXNEIE) != 0U) ||
 8021a20:	2b00      	cmp	r3, #0
 8021a22:	d00b      	beq.n	8021a3c <HAL_UART_IRQHandler+0x130>
    {
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
 8021a24:	687b      	ldr	r3, [r7, #4]
 8021a26:	681b      	ldr	r3, [r3, #0]
 8021a28:	2208      	movs	r2, #8
 8021a2a:	621a      	str	r2, [r3, #32]

      huart->ErrorCode |= HAL_UART_ERROR_ORE;
 8021a2c:	687b      	ldr	r3, [r7, #4]
 8021a2e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8021a32:	f043 0208 	orr.w	r2, r3, #8
 8021a36:	687b      	ldr	r3, [r7, #4]
 8021a38:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
    }

    /* UART Receiver Timeout interrupt occurred ---------------------------------*/
    if (((isrflags & USART_ISR_RTOF) != 0U) && ((cr1its & USART_CR1_RTOIE) != 0U))
 8021a3c:	69fb      	ldr	r3, [r7, #28]
 8021a3e:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8021a42:	2b00      	cmp	r3, #0
 8021a44:	d011      	beq.n	8021a6a <HAL_UART_IRQHandler+0x15e>
 8021a46:	69bb      	ldr	r3, [r7, #24]
 8021a48:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 8021a4c:	2b00      	cmp	r3, #0
 8021a4e:	d00c      	beq.n	8021a6a <HAL_UART_IRQHandler+0x15e>
    {
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 8021a50:	687b      	ldr	r3, [r7, #4]
 8021a52:	681b      	ldr	r3, [r3, #0]
 8021a54:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8021a58:	621a      	str	r2, [r3, #32]

      huart->ErrorCode |= HAL_UART_ERROR_RTO;
 8021a5a:	687b      	ldr	r3, [r7, #4]
 8021a5c:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8021a60:	f043 0220 	orr.w	r2, r3, #32
 8021a64:	687b      	ldr	r3, [r7, #4]
 8021a66:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
    }

    /* Call UART Error Call back function if need be ----------------------------*/
    if (huart->ErrorCode != HAL_UART_ERROR_NONE)
 8021a6a:	687b      	ldr	r3, [r7, #4]
 8021a6c:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8021a70:	2b00      	cmp	r3, #0
 8021a72:	f000 812d 	beq.w	8021cd0 <HAL_UART_IRQHandler+0x3c4>
    {
      /* UART in mode Receiver --------------------------------------------------*/
      if (((isrflags & USART_ISR_RXNE) != 0U)
 8021a76:	69fb      	ldr	r3, [r7, #28]
 8021a78:	f003 0320 	and.w	r3, r3, #32
 8021a7c:	2b00      	cmp	r3, #0
 8021a7e:	d00c      	beq.n	8021a9a <HAL_UART_IRQHandler+0x18e>
          && ((cr1its & USART_CR1_RXNEIE) != 0U))
 8021a80:	69bb      	ldr	r3, [r7, #24]
 8021a82:	f003 0320 	and.w	r3, r3, #32
 8021a86:	2b00      	cmp	r3, #0
 8021a88:	d007      	beq.n	8021a9a <HAL_UART_IRQHandler+0x18e>
      {
        if (huart->RxISR != NULL)
 8021a8a:	687b      	ldr	r3, [r7, #4]
 8021a8c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8021a8e:	2b00      	cmp	r3, #0
 8021a90:	d003      	beq.n	8021a9a <HAL_UART_IRQHandler+0x18e>
        {
          huart->RxISR(huart);
 8021a92:	687b      	ldr	r3, [r7, #4]
 8021a94:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8021a96:	6878      	ldr	r0, [r7, #4]
 8021a98:	4798      	blx	r3
      /* If Error is to be considered as blocking :
          - Receiver Timeout error in Reception
          - Overrun error in Reception
          - any error occurs in DMA mode reception
      */
      errorcode = huart->ErrorCode;
 8021a9a:	687b      	ldr	r3, [r7, #4]
 8021a9c:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8021aa0:	60fb      	str	r3, [r7, #12]
      if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 8021aa2:	687b      	ldr	r3, [r7, #4]
 8021aa4:	681b      	ldr	r3, [r3, #0]
 8021aa6:	689b      	ldr	r3, [r3, #8]
 8021aa8:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8021aac:	2b40      	cmp	r3, #64	; 0x40
 8021aae:	d004      	beq.n	8021aba <HAL_UART_IRQHandler+0x1ae>
          ((errorcode & (HAL_UART_ERROR_RTO | HAL_UART_ERROR_ORE)) != 0U))
 8021ab0:	68fb      	ldr	r3, [r7, #12]
 8021ab2:	f003 0328 	and.w	r3, r3, #40	; 0x28
      if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 8021ab6:	2b00      	cmp	r3, #0
 8021ab8:	d031      	beq.n	8021b1e <HAL_UART_IRQHandler+0x212>
      {
        /* Blocking error : transfer is aborted
           Set the UART state ready to be able to start again the process,
           Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
        UART_EndRxTransfer(huart);
 8021aba:	6878      	ldr	r0, [r7, #4]
 8021abc:	f000 fd6e 	bl	802259c <UART_EndRxTransfer>

        /* Disable the UART DMA Rx request if enabled */
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8021ac0:	687b      	ldr	r3, [r7, #4]
 8021ac2:	681b      	ldr	r3, [r3, #0]
 8021ac4:	689b      	ldr	r3, [r3, #8]
 8021ac6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8021aca:	2b40      	cmp	r3, #64	; 0x40
 8021acc:	d123      	bne.n	8021b16 <HAL_UART_IRQHandler+0x20a>
        {
          CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 8021ace:	687b      	ldr	r3, [r7, #4]
 8021ad0:	681b      	ldr	r3, [r3, #0]
 8021ad2:	689a      	ldr	r2, [r3, #8]
 8021ad4:	687b      	ldr	r3, [r7, #4]
 8021ad6:	681b      	ldr	r3, [r3, #0]
 8021ad8:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8021adc:	609a      	str	r2, [r3, #8]

          /* Abort the UART DMA Rx channel */
          if (huart->hdmarx != NULL)
 8021ade:	687b      	ldr	r3, [r7, #4]
 8021ae0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8021ae2:	2b00      	cmp	r3, #0
 8021ae4:	d013      	beq.n	8021b0e <HAL_UART_IRQHandler+0x202>
          {
            /* Set the UART DMA Abort callback :
               will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
            huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
 8021ae6:	687b      	ldr	r3, [r7, #4]
 8021ae8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8021aea:	4a4a      	ldr	r2, [pc, #296]	; (8021c14 <HAL_UART_IRQHandler+0x308>)
 8021aec:	651a      	str	r2, [r3, #80]	; 0x50

            /* Abort DMA RX */
            if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 8021aee:	687b      	ldr	r3, [r7, #4]
 8021af0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8021af2:	4618      	mov	r0, r3
 8021af4:	f7fe fa93 	bl	802001e <HAL_DMA_Abort_IT>
 8021af8:	4603      	mov	r3, r0
 8021afa:	2b00      	cmp	r3, #0
 8021afc:	d017      	beq.n	8021b2e <HAL_UART_IRQHandler+0x222>
            {
              /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
              huart->hdmarx->XferAbortCallback(huart->hdmarx);
 8021afe:	687b      	ldr	r3, [r7, #4]
 8021b00:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8021b02:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8021b04:	687a      	ldr	r2, [r7, #4]
 8021b06:	6f12      	ldr	r2, [r2, #112]	; 0x70
 8021b08:	4610      	mov	r0, r2
 8021b0a:	4798      	blx	r3
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8021b0c:	e00f      	b.n	8021b2e <HAL_UART_IRQHandler+0x222>
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
            /*Call registered error callback*/
            huart->ErrorCallback(huart);
#else
            /*Call legacy weak error callback*/
            HAL_UART_ErrorCallback(huart);
 8021b0e:	6878      	ldr	r0, [r7, #4]
 8021b10:	f000 f8f2 	bl	8021cf8 <HAL_UART_ErrorCallback>
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8021b14:	e00b      	b.n	8021b2e <HAL_UART_IRQHandler+0x222>
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
          /*Call registered error callback*/
          huart->ErrorCallback(huart);
#else
          /*Call legacy weak error callback*/
          HAL_UART_ErrorCallback(huart);
 8021b16:	6878      	ldr	r0, [r7, #4]
 8021b18:	f000 f8ee 	bl	8021cf8 <HAL_UART_ErrorCallback>
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8021b1c:	e007      	b.n	8021b2e <HAL_UART_IRQHandler+0x222>
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered error callback*/
        huart->ErrorCallback(huart);
#else
        /*Call legacy weak error callback*/
        HAL_UART_ErrorCallback(huart);
 8021b1e:	6878      	ldr	r0, [r7, #4]
 8021b20:	f000 f8ea 	bl	8021cf8 <HAL_UART_ErrorCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
        huart->ErrorCode = HAL_UART_ERROR_NONE;
 8021b24:	687b      	ldr	r3, [r7, #4]
 8021b26:	2200      	movs	r2, #0
 8021b28:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
      }
    }
    return;
 8021b2c:	e0d0      	b.n	8021cd0 <HAL_UART_IRQHandler+0x3c4>
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8021b2e:	bf00      	nop
    return;
 8021b30:	e0ce      	b.n	8021cd0 <HAL_UART_IRQHandler+0x3c4>

  } /* End if some error occurs */

  /* Check current reception Mode :
     If Reception till IDLE event has been selected : */
  if ((huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 8021b32:	687b      	ldr	r3, [r7, #4]
 8021b34:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8021b36:	2b01      	cmp	r3, #1
 8021b38:	f040 80a7 	bne.w	8021c8a <HAL_UART_IRQHandler+0x37e>
      && ((isrflags & USART_ISR_IDLE) != 0U)
 8021b3c:	69fb      	ldr	r3, [r7, #28]
 8021b3e:	f003 0310 	and.w	r3, r3, #16
 8021b42:	2b00      	cmp	r3, #0
 8021b44:	f000 80a1 	beq.w	8021c8a <HAL_UART_IRQHandler+0x37e>
      && ((cr1its & USART_ISR_IDLE) != 0U))
 8021b48:	69bb      	ldr	r3, [r7, #24]
 8021b4a:	f003 0310 	and.w	r3, r3, #16
 8021b4e:	2b00      	cmp	r3, #0
 8021b50:	f000 809b 	beq.w	8021c8a <HAL_UART_IRQHandler+0x37e>
  {
    __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 8021b54:	687b      	ldr	r3, [r7, #4]
 8021b56:	681b      	ldr	r3, [r3, #0]
 8021b58:	2210      	movs	r2, #16
 8021b5a:	621a      	str	r2, [r3, #32]

    /* Check if DMA mode is enabled in UART */
    if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8021b5c:	687b      	ldr	r3, [r7, #4]
 8021b5e:	681b      	ldr	r3, [r3, #0]
 8021b60:	689b      	ldr	r3, [r3, #8]
 8021b62:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8021b66:	2b40      	cmp	r3, #64	; 0x40
 8021b68:	d156      	bne.n	8021c18 <HAL_UART_IRQHandler+0x30c>
    {
      /* DMA mode enabled */
      /* Check received length : If all expected data are received, do nothing,
         (DMA cplt callback will be called).
         Otherwise, if at least one data has already been received, IDLE event is to be notified to user */
      uint16_t nb_remaining_rx_data = (uint16_t) __HAL_DMA_GET_COUNTER(huart->hdmarx);
 8021b6a:	687b      	ldr	r3, [r7, #4]
 8021b6c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8021b6e:	681b      	ldr	r3, [r3, #0]
 8021b70:	685b      	ldr	r3, [r3, #4]
 8021b72:	813b      	strh	r3, [r7, #8]
      if ((nb_remaining_rx_data > 0U)
 8021b74:	893b      	ldrh	r3, [r7, #8]
 8021b76:	2b00      	cmp	r3, #0
 8021b78:	f000 80ac 	beq.w	8021cd4 <HAL_UART_IRQHandler+0x3c8>
          && (nb_remaining_rx_data < huart->RxXferSize))
 8021b7c:	687b      	ldr	r3, [r7, #4]
 8021b7e:	f8b3 3058 	ldrh.w	r3, [r3, #88]	; 0x58
 8021b82:	893a      	ldrh	r2, [r7, #8]
 8021b84:	429a      	cmp	r2, r3
 8021b86:	f080 80a5 	bcs.w	8021cd4 <HAL_UART_IRQHandler+0x3c8>
      {
        /* Reception is not complete */
        huart->RxXferCount = nb_remaining_rx_data;
 8021b8a:	687b      	ldr	r3, [r7, #4]
 8021b8c:	893a      	ldrh	r2, [r7, #8]
 8021b8e:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a

        /* In Normal mode, end DMA xfer and HAL UART Rx process*/
        if (huart->hdmarx->Init.Mode != DMA_CIRCULAR)
 8021b92:	687b      	ldr	r3, [r7, #4]
 8021b94:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8021b96:	69db      	ldr	r3, [r3, #28]
 8021b98:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8021b9c:	d02a      	beq.n	8021bf4 <HAL_UART_IRQHandler+0x2e8>
        {
          /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
          CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 8021b9e:	687b      	ldr	r3, [r7, #4]
 8021ba0:	681b      	ldr	r3, [r3, #0]
 8021ba2:	681a      	ldr	r2, [r3, #0]
 8021ba4:	687b      	ldr	r3, [r7, #4]
 8021ba6:	681b      	ldr	r3, [r3, #0]
 8021ba8:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8021bac:	601a      	str	r2, [r3, #0]
          CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8021bae:	687b      	ldr	r3, [r7, #4]
 8021bb0:	681b      	ldr	r3, [r3, #0]
 8021bb2:	689a      	ldr	r2, [r3, #8]
 8021bb4:	687b      	ldr	r3, [r7, #4]
 8021bb6:	681b      	ldr	r3, [r3, #0]
 8021bb8:	f022 0201 	bic.w	r2, r2, #1
 8021bbc:	609a      	str	r2, [r3, #8]

          /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
             in the UART CR3 register */
          CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 8021bbe:	687b      	ldr	r3, [r7, #4]
 8021bc0:	681b      	ldr	r3, [r3, #0]
 8021bc2:	689a      	ldr	r2, [r3, #8]
 8021bc4:	687b      	ldr	r3, [r7, #4]
 8021bc6:	681b      	ldr	r3, [r3, #0]
 8021bc8:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8021bcc:	609a      	str	r2, [r3, #8]

          /* At end of Rx process, restore huart->RxState to Ready */
          huart->RxState = HAL_UART_STATE_READY;
 8021bce:	687b      	ldr	r3, [r7, #4]
 8021bd0:	2220      	movs	r2, #32
 8021bd2:	67da      	str	r2, [r3, #124]	; 0x7c
          huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8021bd4:	687b      	ldr	r3, [r7, #4]
 8021bd6:	2200      	movs	r2, #0
 8021bd8:	661a      	str	r2, [r3, #96]	; 0x60

          CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8021bda:	687b      	ldr	r3, [r7, #4]
 8021bdc:	681b      	ldr	r3, [r3, #0]
 8021bde:	681a      	ldr	r2, [r3, #0]
 8021be0:	687b      	ldr	r3, [r7, #4]
 8021be2:	681b      	ldr	r3, [r3, #0]
 8021be4:	f022 0210 	bic.w	r2, r2, #16
 8021be8:	601a      	str	r2, [r3, #0]

          /* Last bytes received, so no need as the abort is immediate */
          (void)HAL_DMA_Abort(huart->hdmarx);
 8021bea:	687b      	ldr	r3, [r7, #4]
 8021bec:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8021bee:	4618      	mov	r0, r3
 8021bf0:	f7fe f9a5 	bl	801ff3e <HAL_DMA_Abort>
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered Rx Event callback*/
        huart->RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
#else
        /*Call legacy weak Rx Event callback*/
        HAL_UARTEx_RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
 8021bf4:	687b      	ldr	r3, [r7, #4]
 8021bf6:	f8b3 2058 	ldrh.w	r2, [r3, #88]	; 0x58
 8021bfa:	687b      	ldr	r3, [r7, #4]
 8021bfc:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 8021c00:	b29b      	uxth	r3, r3
 8021c02:	1ad3      	subs	r3, r2, r3
 8021c04:	b29b      	uxth	r3, r3
 8021c06:	4619      	mov	r1, r3
 8021c08:	6878      	ldr	r0, [r7, #4]
 8021c0a:	f000 f87f 	bl	8021d0c <HAL_UARTEx_RxEventCallback>
#endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
      }
      return;
 8021c0e:	e061      	b.n	8021cd4 <HAL_UART_IRQHandler+0x3c8>
 8021c10:	04000120 	.word	0x04000120
 8021c14:	080225fb 	.word	0x080225fb
    else
    {
      /* DMA mode not enabled */
      /* Check received length : If all expected data are received, do nothing.
         Otherwise, if at least one data has already been received, IDLE event is to be notified to user */
      uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
 8021c18:	687b      	ldr	r3, [r7, #4]
 8021c1a:	f8b3 2058 	ldrh.w	r2, [r3, #88]	; 0x58
 8021c1e:	687b      	ldr	r3, [r7, #4]
 8021c20:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 8021c24:	b29b      	uxth	r3, r3
 8021c26:	1ad3      	subs	r3, r2, r3
 8021c28:	817b      	strh	r3, [r7, #10]
      if ((huart->RxXferCount > 0U)
 8021c2a:	687b      	ldr	r3, [r7, #4]
 8021c2c:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 8021c30:	b29b      	uxth	r3, r3
 8021c32:	2b00      	cmp	r3, #0
 8021c34:	d050      	beq.n	8021cd8 <HAL_UART_IRQHandler+0x3cc>
          && (nb_rx_data > 0U))
 8021c36:	897b      	ldrh	r3, [r7, #10]
 8021c38:	2b00      	cmp	r3, #0
 8021c3a:	d04d      	beq.n	8021cd8 <HAL_UART_IRQHandler+0x3cc>
      {
        /* Disable the UART Parity Error Interrupt and RXNE interrupts */
        CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 8021c3c:	687b      	ldr	r3, [r7, #4]
 8021c3e:	681b      	ldr	r3, [r3, #0]
 8021c40:	681a      	ldr	r2, [r3, #0]
 8021c42:	687b      	ldr	r3, [r7, #4]
 8021c44:	681b      	ldr	r3, [r3, #0]
 8021c46:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 8021c4a:	601a      	str	r2, [r3, #0]

        /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
        CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8021c4c:	687b      	ldr	r3, [r7, #4]
 8021c4e:	681b      	ldr	r3, [r3, #0]
 8021c50:	689a      	ldr	r2, [r3, #8]
 8021c52:	687b      	ldr	r3, [r7, #4]
 8021c54:	681b      	ldr	r3, [r3, #0]
 8021c56:	f022 0201 	bic.w	r2, r2, #1
 8021c5a:	609a      	str	r2, [r3, #8]

        /* Rx process is completed, restore huart->RxState to Ready */
        huart->RxState = HAL_UART_STATE_READY;
 8021c5c:	687b      	ldr	r3, [r7, #4]
 8021c5e:	2220      	movs	r2, #32
 8021c60:	67da      	str	r2, [r3, #124]	; 0x7c
        huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8021c62:	687b      	ldr	r3, [r7, #4]
 8021c64:	2200      	movs	r2, #0
 8021c66:	661a      	str	r2, [r3, #96]	; 0x60

        /* Clear RxISR function pointer */
        huart->RxISR = NULL;
 8021c68:	687b      	ldr	r3, [r7, #4]
 8021c6a:	2200      	movs	r2, #0
 8021c6c:	665a      	str	r2, [r3, #100]	; 0x64

        CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8021c6e:	687b      	ldr	r3, [r7, #4]
 8021c70:	681b      	ldr	r3, [r3, #0]
 8021c72:	681a      	ldr	r2, [r3, #0]
 8021c74:	687b      	ldr	r3, [r7, #4]
 8021c76:	681b      	ldr	r3, [r3, #0]
 8021c78:	f022 0210 	bic.w	r2, r2, #16
 8021c7c:	601a      	str	r2, [r3, #0]
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered Rx complete callback*/
        huart->RxEventCallback(huart, nb_rx_data);
#else
        /*Call legacy weak Rx Event callback*/
        HAL_UARTEx_RxEventCallback(huart, nb_rx_data);
 8021c7e:	897b      	ldrh	r3, [r7, #10]
 8021c80:	4619      	mov	r1, r3
 8021c82:	6878      	ldr	r0, [r7, #4]
 8021c84:	f000 f842 	bl	8021d0c <HAL_UARTEx_RxEventCallback>
#endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
      }
      return;
 8021c88:	e026      	b.n	8021cd8 <HAL_UART_IRQHandler+0x3cc>
  }
#endif /* USART_CR3_WUFIE */
#endif /* USART_CR1_UESM */

  /* UART in mode Transmitter ------------------------------------------------*/
  if (((isrflags & USART_ISR_TXE) != 0U)
 8021c8a:	69fb      	ldr	r3, [r7, #28]
 8021c8c:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8021c90:	2b00      	cmp	r3, #0
 8021c92:	d00d      	beq.n	8021cb0 <HAL_UART_IRQHandler+0x3a4>
      && ((cr1its & USART_CR1_TXEIE) != 0U))
 8021c94:	69bb      	ldr	r3, [r7, #24]
 8021c96:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8021c9a:	2b00      	cmp	r3, #0
 8021c9c:	d008      	beq.n	8021cb0 <HAL_UART_IRQHandler+0x3a4>
  {
    if (huart->TxISR != NULL)
 8021c9e:	687b      	ldr	r3, [r7, #4]
 8021ca0:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8021ca2:	2b00      	cmp	r3, #0
 8021ca4:	d01a      	beq.n	8021cdc <HAL_UART_IRQHandler+0x3d0>
    {
      huart->TxISR(huart);
 8021ca6:	687b      	ldr	r3, [r7, #4]
 8021ca8:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8021caa:	6878      	ldr	r0, [r7, #4]
 8021cac:	4798      	blx	r3
    }
    return;
 8021cae:	e015      	b.n	8021cdc <HAL_UART_IRQHandler+0x3d0>
  }

  /* UART in mode Transmitter (transmission end) -----------------------------*/
  if (((isrflags & USART_ISR_TC) != 0U) && ((cr1its & USART_CR1_TCIE) != 0U))
 8021cb0:	69fb      	ldr	r3, [r7, #28]
 8021cb2:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8021cb6:	2b00      	cmp	r3, #0
 8021cb8:	d011      	beq.n	8021cde <HAL_UART_IRQHandler+0x3d2>
 8021cba:	69bb      	ldr	r3, [r7, #24]
 8021cbc:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8021cc0:	2b00      	cmp	r3, #0
 8021cc2:	d00c      	beq.n	8021cde <HAL_UART_IRQHandler+0x3d2>
  {
    UART_EndTransmit_IT(huart);
 8021cc4:	6878      	ldr	r0, [r7, #4]
 8021cc6:	f000 fcae 	bl	8022626 <UART_EndTransmit_IT>
    return;
 8021cca:	e008      	b.n	8021cde <HAL_UART_IRQHandler+0x3d2>
      return;
 8021ccc:	bf00      	nop
 8021cce:	e006      	b.n	8021cde <HAL_UART_IRQHandler+0x3d2>
    return;
 8021cd0:	bf00      	nop
 8021cd2:	e004      	b.n	8021cde <HAL_UART_IRQHandler+0x3d2>
      return;
 8021cd4:	bf00      	nop
 8021cd6:	e002      	b.n	8021cde <HAL_UART_IRQHandler+0x3d2>
      return;
 8021cd8:	bf00      	nop
 8021cda:	e000      	b.n	8021cde <HAL_UART_IRQHandler+0x3d2>
    return;
 8021cdc:	bf00      	nop
  }

}
 8021cde:	3720      	adds	r7, #32
 8021ce0:	46bd      	mov	sp, r7
 8021ce2:	bd80      	pop	{r7, pc}

08021ce4 <HAL_UART_TxCpltCallback>:
  * @brief Tx Transfer completed callback.
  * @param huart UART handle.
  * @retval None
  */
__weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
{
 8021ce4:	b480      	push	{r7}
 8021ce6:	b083      	sub	sp, #12
 8021ce8:	af00      	add	r7, sp, #0
 8021cea:	6078      	str	r0, [r7, #4]
  UNUSED(huart);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_UART_TxCpltCallback can be implemented in the user file.
   */
}
 8021cec:	bf00      	nop
 8021cee:	370c      	adds	r7, #12
 8021cf0:	46bd      	mov	sp, r7
 8021cf2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8021cf6:	4770      	bx	lr

08021cf8 <HAL_UART_ErrorCallback>:
  * @brief  UART error callback.
  * @param  huart UART handle.
  * @retval None
  */
__weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
{
 8021cf8:	b480      	push	{r7}
 8021cfa:	b083      	sub	sp, #12
 8021cfc:	af00      	add	r7, sp, #0
 8021cfe:	6078      	str	r0, [r7, #4]
  UNUSED(huart);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_UART_ErrorCallback can be implemented in the user file.
   */
}
 8021d00:	bf00      	nop
 8021d02:	370c      	adds	r7, #12
 8021d04:	46bd      	mov	sp, r7
 8021d06:	f85d 7b04 	ldr.w	r7, [sp], #4
 8021d0a:	4770      	bx	lr

08021d0c <HAL_UARTEx_RxEventCallback>:
  * @param  Size  Number of data available in application reception buffer (indicates a position in
  *               reception buffer until which, data are available)
  * @retval None
  */
__weak void HAL_UARTEx_RxEventCallback(UART_HandleTypeDef *huart, uint16_t Size)
{
 8021d0c:	b480      	push	{r7}
 8021d0e:	b083      	sub	sp, #12
 8021d10:	af00      	add	r7, sp, #0
 8021d12:	6078      	str	r0, [r7, #4]
 8021d14:	460b      	mov	r3, r1
 8021d16:	807b      	strh	r3, [r7, #2]
  UNUSED(Size);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_UARTEx_RxEventCallback can be implemented in the user file.
   */
}
 8021d18:	bf00      	nop
 8021d1a:	370c      	adds	r7, #12
 8021d1c:	46bd      	mov	sp, r7
 8021d1e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8021d22:	4770      	bx	lr

08021d24 <UART_SetConfig>:
  * @brief Configure the UART peripheral.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
{
 8021d24:	b580      	push	{r7, lr}
 8021d26:	b088      	sub	sp, #32
 8021d28:	af00      	add	r7, sp, #0
 8021d2a:	6078      	str	r0, [r7, #4]
  uint32_t tmpreg;
  uint16_t brrtemp;
  UART_ClockSourceTypeDef clocksource;
  uint32_t usartdiv;
  HAL_StatusTypeDef ret               = HAL_OK;
 8021d2c:	2300      	movs	r3, #0
 8021d2e:	77bb      	strb	r3, [r7, #30]
  *  the UART Word Length, Parity, Mode and oversampling:
  *  set the M bits according to huart->Init.WordLength value
  *  set PCE and PS bits according to huart->Init.Parity value
  *  set TE and RE bits according to huart->Init.Mode value
  *  set OVER8 bit according to huart->Init.OverSampling value */
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 8021d30:	687b      	ldr	r3, [r7, #4]
 8021d32:	689a      	ldr	r2, [r3, #8]
 8021d34:	687b      	ldr	r3, [r7, #4]
 8021d36:	691b      	ldr	r3, [r3, #16]
 8021d38:	431a      	orrs	r2, r3
 8021d3a:	687b      	ldr	r3, [r7, #4]
 8021d3c:	695b      	ldr	r3, [r3, #20]
 8021d3e:	431a      	orrs	r2, r3
 8021d40:	687b      	ldr	r3, [r7, #4]
 8021d42:	69db      	ldr	r3, [r3, #28]
 8021d44:	4313      	orrs	r3, r2
 8021d46:	617b      	str	r3, [r7, #20]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 8021d48:	687b      	ldr	r3, [r7, #4]
 8021d4a:	681b      	ldr	r3, [r3, #0]
 8021d4c:	681a      	ldr	r2, [r3, #0]
 8021d4e:	4ba7      	ldr	r3, [pc, #668]	; (8021fec <UART_SetConfig+0x2c8>)
 8021d50:	4013      	ands	r3, r2
 8021d52:	687a      	ldr	r2, [r7, #4]
 8021d54:	6812      	ldr	r2, [r2, #0]
 8021d56:	6979      	ldr	r1, [r7, #20]
 8021d58:	430b      	orrs	r3, r1
 8021d5a:	6013      	str	r3, [r2, #0]

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits according
  * to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 8021d5c:	687b      	ldr	r3, [r7, #4]
 8021d5e:	681b      	ldr	r3, [r3, #0]
 8021d60:	685b      	ldr	r3, [r3, #4]
 8021d62:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 8021d66:	687b      	ldr	r3, [r7, #4]
 8021d68:	68da      	ldr	r2, [r3, #12]
 8021d6a:	687b      	ldr	r3, [r7, #4]
 8021d6c:	681b      	ldr	r3, [r3, #0]
 8021d6e:	430a      	orrs	r2, r1
 8021d70:	605a      	str	r2, [r3, #4]
  /* Configure
  * - UART HardWare Flow Control: set CTSE and RTSE bits according
  *   to huart->Init.HwFlowCtl value
  * - one-bit sampling method versus three samples' majority rule according
  *   to huart->Init.OneBitSampling (not applicable to LPUART) */
  tmpreg = (uint32_t)huart->Init.HwFlowCtl;
 8021d72:	687b      	ldr	r3, [r7, #4]
 8021d74:	699b      	ldr	r3, [r3, #24]
 8021d76:	617b      	str	r3, [r7, #20]

  tmpreg |= huart->Init.OneBitSampling;
 8021d78:	687b      	ldr	r3, [r7, #4]
 8021d7a:	6a1b      	ldr	r3, [r3, #32]
 8021d7c:	697a      	ldr	r2, [r7, #20]
 8021d7e:	4313      	orrs	r3, r2
 8021d80:	617b      	str	r3, [r7, #20]
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 8021d82:	687b      	ldr	r3, [r7, #4]
 8021d84:	681b      	ldr	r3, [r3, #0]
 8021d86:	689b      	ldr	r3, [r3, #8]
 8021d88:	f423 6130 	bic.w	r1, r3, #2816	; 0xb00
 8021d8c:	687b      	ldr	r3, [r7, #4]
 8021d8e:	681b      	ldr	r3, [r3, #0]
 8021d90:	697a      	ldr	r2, [r7, #20]
 8021d92:	430a      	orrs	r2, r1
 8021d94:	609a      	str	r2, [r3, #8]


  /*-------------------------- USART BRR Configuration -----------------------*/
  UART_GETCLOCKSOURCE(huart, clocksource);
 8021d96:	687b      	ldr	r3, [r7, #4]
 8021d98:	681b      	ldr	r3, [r3, #0]
 8021d9a:	4a95      	ldr	r2, [pc, #596]	; (8021ff0 <UART_SetConfig+0x2cc>)
 8021d9c:	4293      	cmp	r3, r2
 8021d9e:	d120      	bne.n	8021de2 <UART_SetConfig+0xbe>
 8021da0:	4b94      	ldr	r3, [pc, #592]	; (8021ff4 <UART_SetConfig+0x2d0>)
 8021da2:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8021da6:	f003 0303 	and.w	r3, r3, #3
 8021daa:	2b03      	cmp	r3, #3
 8021dac:	d816      	bhi.n	8021ddc <UART_SetConfig+0xb8>
 8021dae:	a201      	add	r2, pc, #4	; (adr r2, 8021db4 <UART_SetConfig+0x90>)
 8021db0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8021db4:	08021dc5 	.word	0x08021dc5
 8021db8:	08021dd1 	.word	0x08021dd1
 8021dbc:	08021dcb 	.word	0x08021dcb
 8021dc0:	08021dd7 	.word	0x08021dd7
 8021dc4:	2301      	movs	r3, #1
 8021dc6:	77fb      	strb	r3, [r7, #31]
 8021dc8:	e14f      	b.n	802206a <UART_SetConfig+0x346>
 8021dca:	2302      	movs	r3, #2
 8021dcc:	77fb      	strb	r3, [r7, #31]
 8021dce:	e14c      	b.n	802206a <UART_SetConfig+0x346>
 8021dd0:	2304      	movs	r3, #4
 8021dd2:	77fb      	strb	r3, [r7, #31]
 8021dd4:	e149      	b.n	802206a <UART_SetConfig+0x346>
 8021dd6:	2308      	movs	r3, #8
 8021dd8:	77fb      	strb	r3, [r7, #31]
 8021dda:	e146      	b.n	802206a <UART_SetConfig+0x346>
 8021ddc:	2310      	movs	r3, #16
 8021dde:	77fb      	strb	r3, [r7, #31]
 8021de0:	e143      	b.n	802206a <UART_SetConfig+0x346>
 8021de2:	687b      	ldr	r3, [r7, #4]
 8021de4:	681b      	ldr	r3, [r3, #0]
 8021de6:	4a84      	ldr	r2, [pc, #528]	; (8021ff8 <UART_SetConfig+0x2d4>)
 8021de8:	4293      	cmp	r3, r2
 8021dea:	d132      	bne.n	8021e52 <UART_SetConfig+0x12e>
 8021dec:	4b81      	ldr	r3, [pc, #516]	; (8021ff4 <UART_SetConfig+0x2d0>)
 8021dee:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8021df2:	f003 030c 	and.w	r3, r3, #12
 8021df6:	2b0c      	cmp	r3, #12
 8021df8:	d828      	bhi.n	8021e4c <UART_SetConfig+0x128>
 8021dfa:	a201      	add	r2, pc, #4	; (adr r2, 8021e00 <UART_SetConfig+0xdc>)
 8021dfc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8021e00:	08021e35 	.word	0x08021e35
 8021e04:	08021e4d 	.word	0x08021e4d
 8021e08:	08021e4d 	.word	0x08021e4d
 8021e0c:	08021e4d 	.word	0x08021e4d
 8021e10:	08021e41 	.word	0x08021e41
 8021e14:	08021e4d 	.word	0x08021e4d
 8021e18:	08021e4d 	.word	0x08021e4d
 8021e1c:	08021e4d 	.word	0x08021e4d
 8021e20:	08021e3b 	.word	0x08021e3b
 8021e24:	08021e4d 	.word	0x08021e4d
 8021e28:	08021e4d 	.word	0x08021e4d
 8021e2c:	08021e4d 	.word	0x08021e4d
 8021e30:	08021e47 	.word	0x08021e47
 8021e34:	2300      	movs	r3, #0
 8021e36:	77fb      	strb	r3, [r7, #31]
 8021e38:	e117      	b.n	802206a <UART_SetConfig+0x346>
 8021e3a:	2302      	movs	r3, #2
 8021e3c:	77fb      	strb	r3, [r7, #31]
 8021e3e:	e114      	b.n	802206a <UART_SetConfig+0x346>
 8021e40:	2304      	movs	r3, #4
 8021e42:	77fb      	strb	r3, [r7, #31]
 8021e44:	e111      	b.n	802206a <UART_SetConfig+0x346>
 8021e46:	2308      	movs	r3, #8
 8021e48:	77fb      	strb	r3, [r7, #31]
 8021e4a:	e10e      	b.n	802206a <UART_SetConfig+0x346>
 8021e4c:	2310      	movs	r3, #16
 8021e4e:	77fb      	strb	r3, [r7, #31]
 8021e50:	e10b      	b.n	802206a <UART_SetConfig+0x346>
 8021e52:	687b      	ldr	r3, [r7, #4]
 8021e54:	681b      	ldr	r3, [r3, #0]
 8021e56:	4a69      	ldr	r2, [pc, #420]	; (8021ffc <UART_SetConfig+0x2d8>)
 8021e58:	4293      	cmp	r3, r2
 8021e5a:	d120      	bne.n	8021e9e <UART_SetConfig+0x17a>
 8021e5c:	4b65      	ldr	r3, [pc, #404]	; (8021ff4 <UART_SetConfig+0x2d0>)
 8021e5e:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8021e62:	f003 0330 	and.w	r3, r3, #48	; 0x30
 8021e66:	2b30      	cmp	r3, #48	; 0x30
 8021e68:	d013      	beq.n	8021e92 <UART_SetConfig+0x16e>
 8021e6a:	2b30      	cmp	r3, #48	; 0x30
 8021e6c:	d814      	bhi.n	8021e98 <UART_SetConfig+0x174>
 8021e6e:	2b20      	cmp	r3, #32
 8021e70:	d009      	beq.n	8021e86 <UART_SetConfig+0x162>
 8021e72:	2b20      	cmp	r3, #32
 8021e74:	d810      	bhi.n	8021e98 <UART_SetConfig+0x174>
 8021e76:	2b00      	cmp	r3, #0
 8021e78:	d002      	beq.n	8021e80 <UART_SetConfig+0x15c>
 8021e7a:	2b10      	cmp	r3, #16
 8021e7c:	d006      	beq.n	8021e8c <UART_SetConfig+0x168>
 8021e7e:	e00b      	b.n	8021e98 <UART_SetConfig+0x174>
 8021e80:	2300      	movs	r3, #0
 8021e82:	77fb      	strb	r3, [r7, #31]
 8021e84:	e0f1      	b.n	802206a <UART_SetConfig+0x346>
 8021e86:	2302      	movs	r3, #2
 8021e88:	77fb      	strb	r3, [r7, #31]
 8021e8a:	e0ee      	b.n	802206a <UART_SetConfig+0x346>
 8021e8c:	2304      	movs	r3, #4
 8021e8e:	77fb      	strb	r3, [r7, #31]
 8021e90:	e0eb      	b.n	802206a <UART_SetConfig+0x346>
 8021e92:	2308      	movs	r3, #8
 8021e94:	77fb      	strb	r3, [r7, #31]
 8021e96:	e0e8      	b.n	802206a <UART_SetConfig+0x346>
 8021e98:	2310      	movs	r3, #16
 8021e9a:	77fb      	strb	r3, [r7, #31]
 8021e9c:	e0e5      	b.n	802206a <UART_SetConfig+0x346>
 8021e9e:	687b      	ldr	r3, [r7, #4]
 8021ea0:	681b      	ldr	r3, [r3, #0]
 8021ea2:	4a57      	ldr	r2, [pc, #348]	; (8022000 <UART_SetConfig+0x2dc>)
 8021ea4:	4293      	cmp	r3, r2
 8021ea6:	d120      	bne.n	8021eea <UART_SetConfig+0x1c6>
 8021ea8:	4b52      	ldr	r3, [pc, #328]	; (8021ff4 <UART_SetConfig+0x2d0>)
 8021eaa:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8021eae:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
 8021eb2:	2bc0      	cmp	r3, #192	; 0xc0
 8021eb4:	d013      	beq.n	8021ede <UART_SetConfig+0x1ba>
 8021eb6:	2bc0      	cmp	r3, #192	; 0xc0
 8021eb8:	d814      	bhi.n	8021ee4 <UART_SetConfig+0x1c0>
 8021eba:	2b80      	cmp	r3, #128	; 0x80
 8021ebc:	d009      	beq.n	8021ed2 <UART_SetConfig+0x1ae>
 8021ebe:	2b80      	cmp	r3, #128	; 0x80
 8021ec0:	d810      	bhi.n	8021ee4 <UART_SetConfig+0x1c0>
 8021ec2:	2b00      	cmp	r3, #0
 8021ec4:	d002      	beq.n	8021ecc <UART_SetConfig+0x1a8>
 8021ec6:	2b40      	cmp	r3, #64	; 0x40
 8021ec8:	d006      	beq.n	8021ed8 <UART_SetConfig+0x1b4>
 8021eca:	e00b      	b.n	8021ee4 <UART_SetConfig+0x1c0>
 8021ecc:	2300      	movs	r3, #0
 8021ece:	77fb      	strb	r3, [r7, #31]
 8021ed0:	e0cb      	b.n	802206a <UART_SetConfig+0x346>
 8021ed2:	2302      	movs	r3, #2
 8021ed4:	77fb      	strb	r3, [r7, #31]
 8021ed6:	e0c8      	b.n	802206a <UART_SetConfig+0x346>
 8021ed8:	2304      	movs	r3, #4
 8021eda:	77fb      	strb	r3, [r7, #31]
 8021edc:	e0c5      	b.n	802206a <UART_SetConfig+0x346>
 8021ede:	2308      	movs	r3, #8
 8021ee0:	77fb      	strb	r3, [r7, #31]
 8021ee2:	e0c2      	b.n	802206a <UART_SetConfig+0x346>
 8021ee4:	2310      	movs	r3, #16
 8021ee6:	77fb      	strb	r3, [r7, #31]
 8021ee8:	e0bf      	b.n	802206a <UART_SetConfig+0x346>
 8021eea:	687b      	ldr	r3, [r7, #4]
 8021eec:	681b      	ldr	r3, [r3, #0]
 8021eee:	4a45      	ldr	r2, [pc, #276]	; (8022004 <UART_SetConfig+0x2e0>)
 8021ef0:	4293      	cmp	r3, r2
 8021ef2:	d125      	bne.n	8021f40 <UART_SetConfig+0x21c>
 8021ef4:	4b3f      	ldr	r3, [pc, #252]	; (8021ff4 <UART_SetConfig+0x2d0>)
 8021ef6:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8021efa:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8021efe:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8021f02:	d017      	beq.n	8021f34 <UART_SetConfig+0x210>
 8021f04:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8021f08:	d817      	bhi.n	8021f3a <UART_SetConfig+0x216>
 8021f0a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8021f0e:	d00b      	beq.n	8021f28 <UART_SetConfig+0x204>
 8021f10:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8021f14:	d811      	bhi.n	8021f3a <UART_SetConfig+0x216>
 8021f16:	2b00      	cmp	r3, #0
 8021f18:	d003      	beq.n	8021f22 <UART_SetConfig+0x1fe>
 8021f1a:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8021f1e:	d006      	beq.n	8021f2e <UART_SetConfig+0x20a>
 8021f20:	e00b      	b.n	8021f3a <UART_SetConfig+0x216>
 8021f22:	2300      	movs	r3, #0
 8021f24:	77fb      	strb	r3, [r7, #31]
 8021f26:	e0a0      	b.n	802206a <UART_SetConfig+0x346>
 8021f28:	2302      	movs	r3, #2
 8021f2a:	77fb      	strb	r3, [r7, #31]
 8021f2c:	e09d      	b.n	802206a <UART_SetConfig+0x346>
 8021f2e:	2304      	movs	r3, #4
 8021f30:	77fb      	strb	r3, [r7, #31]
 8021f32:	e09a      	b.n	802206a <UART_SetConfig+0x346>
 8021f34:	2308      	movs	r3, #8
 8021f36:	77fb      	strb	r3, [r7, #31]
 8021f38:	e097      	b.n	802206a <UART_SetConfig+0x346>
 8021f3a:	2310      	movs	r3, #16
 8021f3c:	77fb      	strb	r3, [r7, #31]
 8021f3e:	e094      	b.n	802206a <UART_SetConfig+0x346>
 8021f40:	687b      	ldr	r3, [r7, #4]
 8021f42:	681b      	ldr	r3, [r3, #0]
 8021f44:	4a30      	ldr	r2, [pc, #192]	; (8022008 <UART_SetConfig+0x2e4>)
 8021f46:	4293      	cmp	r3, r2
 8021f48:	d125      	bne.n	8021f96 <UART_SetConfig+0x272>
 8021f4a:	4b2a      	ldr	r3, [pc, #168]	; (8021ff4 <UART_SetConfig+0x2d0>)
 8021f4c:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8021f50:	f403 6340 	and.w	r3, r3, #3072	; 0xc00
 8021f54:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 8021f58:	d017      	beq.n	8021f8a <UART_SetConfig+0x266>
 8021f5a:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 8021f5e:	d817      	bhi.n	8021f90 <UART_SetConfig+0x26c>
 8021f60:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8021f64:	d00b      	beq.n	8021f7e <UART_SetConfig+0x25a>
 8021f66:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8021f6a:	d811      	bhi.n	8021f90 <UART_SetConfig+0x26c>
 8021f6c:	2b00      	cmp	r3, #0
 8021f6e:	d003      	beq.n	8021f78 <UART_SetConfig+0x254>
 8021f70:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8021f74:	d006      	beq.n	8021f84 <UART_SetConfig+0x260>
 8021f76:	e00b      	b.n	8021f90 <UART_SetConfig+0x26c>
 8021f78:	2301      	movs	r3, #1
 8021f7a:	77fb      	strb	r3, [r7, #31]
 8021f7c:	e075      	b.n	802206a <UART_SetConfig+0x346>
 8021f7e:	2302      	movs	r3, #2
 8021f80:	77fb      	strb	r3, [r7, #31]
 8021f82:	e072      	b.n	802206a <UART_SetConfig+0x346>
 8021f84:	2304      	movs	r3, #4
 8021f86:	77fb      	strb	r3, [r7, #31]
 8021f88:	e06f      	b.n	802206a <UART_SetConfig+0x346>
 8021f8a:	2308      	movs	r3, #8
 8021f8c:	77fb      	strb	r3, [r7, #31]
 8021f8e:	e06c      	b.n	802206a <UART_SetConfig+0x346>
 8021f90:	2310      	movs	r3, #16
 8021f92:	77fb      	strb	r3, [r7, #31]
 8021f94:	e069      	b.n	802206a <UART_SetConfig+0x346>
 8021f96:	687b      	ldr	r3, [r7, #4]
 8021f98:	681b      	ldr	r3, [r3, #0]
 8021f9a:	4a1c      	ldr	r2, [pc, #112]	; (802200c <UART_SetConfig+0x2e8>)
 8021f9c:	4293      	cmp	r3, r2
 8021f9e:	d137      	bne.n	8022010 <UART_SetConfig+0x2ec>
 8021fa0:	4b14      	ldr	r3, [pc, #80]	; (8021ff4 <UART_SetConfig+0x2d0>)
 8021fa2:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8021fa6:	f403 5340 	and.w	r3, r3, #12288	; 0x3000
 8021faa:	f5b3 5f40 	cmp.w	r3, #12288	; 0x3000
 8021fae:	d017      	beq.n	8021fe0 <UART_SetConfig+0x2bc>
 8021fb0:	f5b3 5f40 	cmp.w	r3, #12288	; 0x3000
 8021fb4:	d817      	bhi.n	8021fe6 <UART_SetConfig+0x2c2>
 8021fb6:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8021fba:	d00b      	beq.n	8021fd4 <UART_SetConfig+0x2b0>
 8021fbc:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8021fc0:	d811      	bhi.n	8021fe6 <UART_SetConfig+0x2c2>
 8021fc2:	2b00      	cmp	r3, #0
 8021fc4:	d003      	beq.n	8021fce <UART_SetConfig+0x2aa>
 8021fc6:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8021fca:	d006      	beq.n	8021fda <UART_SetConfig+0x2b6>
 8021fcc:	e00b      	b.n	8021fe6 <UART_SetConfig+0x2c2>
 8021fce:	2300      	movs	r3, #0
 8021fd0:	77fb      	strb	r3, [r7, #31]
 8021fd2:	e04a      	b.n	802206a <UART_SetConfig+0x346>
 8021fd4:	2302      	movs	r3, #2
 8021fd6:	77fb      	strb	r3, [r7, #31]
 8021fd8:	e047      	b.n	802206a <UART_SetConfig+0x346>
 8021fda:	2304      	movs	r3, #4
 8021fdc:	77fb      	strb	r3, [r7, #31]
 8021fde:	e044      	b.n	802206a <UART_SetConfig+0x346>
 8021fe0:	2308      	movs	r3, #8
 8021fe2:	77fb      	strb	r3, [r7, #31]
 8021fe4:	e041      	b.n	802206a <UART_SetConfig+0x346>
 8021fe6:	2310      	movs	r3, #16
 8021fe8:	77fb      	strb	r3, [r7, #31]
 8021fea:	e03e      	b.n	802206a <UART_SetConfig+0x346>
 8021fec:	efff69f3 	.word	0xefff69f3
 8021ff0:	40011000 	.word	0x40011000
 8021ff4:	40023800 	.word	0x40023800
 8021ff8:	40004400 	.word	0x40004400
 8021ffc:	40004800 	.word	0x40004800
 8022000:	40004c00 	.word	0x40004c00
 8022004:	40005000 	.word	0x40005000
 8022008:	40011400 	.word	0x40011400
 802200c:	40007800 	.word	0x40007800
 8022010:	687b      	ldr	r3, [r7, #4]
 8022012:	681b      	ldr	r3, [r3, #0]
 8022014:	4a71      	ldr	r2, [pc, #452]	; (80221dc <UART_SetConfig+0x4b8>)
 8022016:	4293      	cmp	r3, r2
 8022018:	d125      	bne.n	8022066 <UART_SetConfig+0x342>
 802201a:	4b71      	ldr	r3, [pc, #452]	; (80221e0 <UART_SetConfig+0x4bc>)
 802201c:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8022020:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8022024:	f5b3 4f40 	cmp.w	r3, #49152	; 0xc000
 8022028:	d017      	beq.n	802205a <UART_SetConfig+0x336>
 802202a:	f5b3 4f40 	cmp.w	r3, #49152	; 0xc000
 802202e:	d817      	bhi.n	8022060 <UART_SetConfig+0x33c>
 8022030:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8022034:	d00b      	beq.n	802204e <UART_SetConfig+0x32a>
 8022036:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 802203a:	d811      	bhi.n	8022060 <UART_SetConfig+0x33c>
 802203c:	2b00      	cmp	r3, #0
 802203e:	d003      	beq.n	8022048 <UART_SetConfig+0x324>
 8022040:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8022044:	d006      	beq.n	8022054 <UART_SetConfig+0x330>
 8022046:	e00b      	b.n	8022060 <UART_SetConfig+0x33c>
 8022048:	2300      	movs	r3, #0
 802204a:	77fb      	strb	r3, [r7, #31]
 802204c:	e00d      	b.n	802206a <UART_SetConfig+0x346>
 802204e:	2302      	movs	r3, #2
 8022050:	77fb      	strb	r3, [r7, #31]
 8022052:	e00a      	b.n	802206a <UART_SetConfig+0x346>
 8022054:	2304      	movs	r3, #4
 8022056:	77fb      	strb	r3, [r7, #31]
 8022058:	e007      	b.n	802206a <UART_SetConfig+0x346>
 802205a:	2308      	movs	r3, #8
 802205c:	77fb      	strb	r3, [r7, #31]
 802205e:	e004      	b.n	802206a <UART_SetConfig+0x346>
 8022060:	2310      	movs	r3, #16
 8022062:	77fb      	strb	r3, [r7, #31]
 8022064:	e001      	b.n	802206a <UART_SetConfig+0x346>
 8022066:	2310      	movs	r3, #16
 8022068:	77fb      	strb	r3, [r7, #31]

  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 802206a:	687b      	ldr	r3, [r7, #4]
 802206c:	69db      	ldr	r3, [r3, #28]
 802206e:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8022072:	d15b      	bne.n	802212c <UART_SetConfig+0x408>
  {
    switch (clocksource)
 8022074:	7ffb      	ldrb	r3, [r7, #31]
 8022076:	2b08      	cmp	r3, #8
 8022078:	d827      	bhi.n	80220ca <UART_SetConfig+0x3a6>
 802207a:	a201      	add	r2, pc, #4	; (adr r2, 8022080 <UART_SetConfig+0x35c>)
 802207c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8022080:	080220a5 	.word	0x080220a5
 8022084:	080220ad 	.word	0x080220ad
 8022088:	080220b5 	.word	0x080220b5
 802208c:	080220cb 	.word	0x080220cb
 8022090:	080220bb 	.word	0x080220bb
 8022094:	080220cb 	.word	0x080220cb
 8022098:	080220cb 	.word	0x080220cb
 802209c:	080220cb 	.word	0x080220cb
 80220a0:	080220c3 	.word	0x080220c3
    {
      case UART_CLOCKSOURCE_PCLK1:
        pclk = HAL_RCC_GetPCLK1Freq();
 80220a4:	f7fe fe2c 	bl	8020d00 <HAL_RCC_GetPCLK1Freq>
 80220a8:	61b8      	str	r0, [r7, #24]
        break;
 80220aa:	e013      	b.n	80220d4 <UART_SetConfig+0x3b0>
      case UART_CLOCKSOURCE_PCLK2:
        pclk = HAL_RCC_GetPCLK2Freq();
 80220ac:	f7fe fe3c 	bl	8020d28 <HAL_RCC_GetPCLK2Freq>
 80220b0:	61b8      	str	r0, [r7, #24]
        break;
 80220b2:	e00f      	b.n	80220d4 <UART_SetConfig+0x3b0>
      case UART_CLOCKSOURCE_HSI:
        pclk = (uint32_t) HSI_VALUE;
 80220b4:	4b4b      	ldr	r3, [pc, #300]	; (80221e4 <UART_SetConfig+0x4c0>)
 80220b6:	61bb      	str	r3, [r7, #24]
        break;
 80220b8:	e00c      	b.n	80220d4 <UART_SetConfig+0x3b0>
      case UART_CLOCKSOURCE_SYSCLK:
        pclk = HAL_RCC_GetSysClockFreq();
 80220ba:	f7fe fd5f 	bl	8020b7c <HAL_RCC_GetSysClockFreq>
 80220be:	61b8      	str	r0, [r7, #24]
        break;
 80220c0:	e008      	b.n	80220d4 <UART_SetConfig+0x3b0>
      case UART_CLOCKSOURCE_LSE:
        pclk = (uint32_t) LSE_VALUE;
 80220c2:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80220c6:	61bb      	str	r3, [r7, #24]
        break;
 80220c8:	e004      	b.n	80220d4 <UART_SetConfig+0x3b0>
      default:
        pclk = 0U;
 80220ca:	2300      	movs	r3, #0
 80220cc:	61bb      	str	r3, [r7, #24]
        ret = HAL_ERROR;
 80220ce:	2301      	movs	r3, #1
 80220d0:	77bb      	strb	r3, [r7, #30]
        break;
 80220d2:	bf00      	nop
    }

    /* USARTDIV must be greater than or equal to 0d16 */
    if (pclk != 0U)
 80220d4:	69bb      	ldr	r3, [r7, #24]
 80220d6:	2b00      	cmp	r3, #0
 80220d8:	d074      	beq.n	80221c4 <UART_SetConfig+0x4a0>
    {
      usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate));
 80220da:	69bb      	ldr	r3, [r7, #24]
 80220dc:	005a      	lsls	r2, r3, #1
 80220de:	687b      	ldr	r3, [r7, #4]
 80220e0:	685b      	ldr	r3, [r3, #4]
 80220e2:	085b      	lsrs	r3, r3, #1
 80220e4:	441a      	add	r2, r3
 80220e6:	687b      	ldr	r3, [r7, #4]
 80220e8:	685b      	ldr	r3, [r3, #4]
 80220ea:	fbb2 f3f3 	udiv	r3, r2, r3
 80220ee:	b29b      	uxth	r3, r3
 80220f0:	613b      	str	r3, [r7, #16]
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 80220f2:	693b      	ldr	r3, [r7, #16]
 80220f4:	2b0f      	cmp	r3, #15
 80220f6:	d916      	bls.n	8022126 <UART_SetConfig+0x402>
 80220f8:	693b      	ldr	r3, [r7, #16]
 80220fa:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80220fe:	d212      	bcs.n	8022126 <UART_SetConfig+0x402>
      {
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 8022100:	693b      	ldr	r3, [r7, #16]
 8022102:	b29b      	uxth	r3, r3
 8022104:	f023 030f 	bic.w	r3, r3, #15
 8022108:	81fb      	strh	r3, [r7, #14]
        brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 802210a:	693b      	ldr	r3, [r7, #16]
 802210c:	085b      	lsrs	r3, r3, #1
 802210e:	b29b      	uxth	r3, r3
 8022110:	f003 0307 	and.w	r3, r3, #7
 8022114:	b29a      	uxth	r2, r3
 8022116:	89fb      	ldrh	r3, [r7, #14]
 8022118:	4313      	orrs	r3, r2
 802211a:	81fb      	strh	r3, [r7, #14]
        huart->Instance->BRR = brrtemp;
 802211c:	687b      	ldr	r3, [r7, #4]
 802211e:	681b      	ldr	r3, [r3, #0]
 8022120:	89fa      	ldrh	r2, [r7, #14]
 8022122:	60da      	str	r2, [r3, #12]
 8022124:	e04e      	b.n	80221c4 <UART_SetConfig+0x4a0>
      }
      else
      {
        ret = HAL_ERROR;
 8022126:	2301      	movs	r3, #1
 8022128:	77bb      	strb	r3, [r7, #30]
 802212a:	e04b      	b.n	80221c4 <UART_SetConfig+0x4a0>
      }
    }
  }
  else
  {
    switch (clocksource)
 802212c:	7ffb      	ldrb	r3, [r7, #31]
 802212e:	2b08      	cmp	r3, #8
 8022130:	d827      	bhi.n	8022182 <UART_SetConfig+0x45e>
 8022132:	a201      	add	r2, pc, #4	; (adr r2, 8022138 <UART_SetConfig+0x414>)
 8022134:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8022138:	0802215d 	.word	0x0802215d
 802213c:	08022165 	.word	0x08022165
 8022140:	0802216d 	.word	0x0802216d
 8022144:	08022183 	.word	0x08022183
 8022148:	08022173 	.word	0x08022173
 802214c:	08022183 	.word	0x08022183
 8022150:	08022183 	.word	0x08022183
 8022154:	08022183 	.word	0x08022183
 8022158:	0802217b 	.word	0x0802217b
    {
      case UART_CLOCKSOURCE_PCLK1:
        pclk = HAL_RCC_GetPCLK1Freq();
 802215c:	f7fe fdd0 	bl	8020d00 <HAL_RCC_GetPCLK1Freq>
 8022160:	61b8      	str	r0, [r7, #24]
        break;
 8022162:	e013      	b.n	802218c <UART_SetConfig+0x468>
      case UART_CLOCKSOURCE_PCLK2:
        pclk = HAL_RCC_GetPCLK2Freq();
 8022164:	f7fe fde0 	bl	8020d28 <HAL_RCC_GetPCLK2Freq>
 8022168:	61b8      	str	r0, [r7, #24]
        break;
 802216a:	e00f      	b.n	802218c <UART_SetConfig+0x468>
      case UART_CLOCKSOURCE_HSI:
        pclk = (uint32_t) HSI_VALUE;
 802216c:	4b1d      	ldr	r3, [pc, #116]	; (80221e4 <UART_SetConfig+0x4c0>)
 802216e:	61bb      	str	r3, [r7, #24]
        break;
 8022170:	e00c      	b.n	802218c <UART_SetConfig+0x468>
      case UART_CLOCKSOURCE_SYSCLK:
        pclk = HAL_RCC_GetSysClockFreq();
 8022172:	f7fe fd03 	bl	8020b7c <HAL_RCC_GetSysClockFreq>
 8022176:	61b8      	str	r0, [r7, #24]
        break;
 8022178:	e008      	b.n	802218c <UART_SetConfig+0x468>
      case UART_CLOCKSOURCE_LSE:
        pclk = (uint32_t) LSE_VALUE;
 802217a:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 802217e:	61bb      	str	r3, [r7, #24]
        break;
 8022180:	e004      	b.n	802218c <UART_SetConfig+0x468>
      default:
        pclk = 0U;
 8022182:	2300      	movs	r3, #0
 8022184:	61bb      	str	r3, [r7, #24]
        ret = HAL_ERROR;
 8022186:	2301      	movs	r3, #1
 8022188:	77bb      	strb	r3, [r7, #30]
        break;
 802218a:	bf00      	nop
    }

    if (pclk != 0U)
 802218c:	69bb      	ldr	r3, [r7, #24]
 802218e:	2b00      	cmp	r3, #0
 8022190:	d018      	beq.n	80221c4 <UART_SetConfig+0x4a0>
    {
      /* USARTDIV must be greater than or equal to 0d16 */
      usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate));
 8022192:	687b      	ldr	r3, [r7, #4]
 8022194:	685b      	ldr	r3, [r3, #4]
 8022196:	085a      	lsrs	r2, r3, #1
 8022198:	69bb      	ldr	r3, [r7, #24]
 802219a:	441a      	add	r2, r3
 802219c:	687b      	ldr	r3, [r7, #4]
 802219e:	685b      	ldr	r3, [r3, #4]
 80221a0:	fbb2 f3f3 	udiv	r3, r2, r3
 80221a4:	b29b      	uxth	r3, r3
 80221a6:	613b      	str	r3, [r7, #16]
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 80221a8:	693b      	ldr	r3, [r7, #16]
 80221aa:	2b0f      	cmp	r3, #15
 80221ac:	d908      	bls.n	80221c0 <UART_SetConfig+0x49c>
 80221ae:	693b      	ldr	r3, [r7, #16]
 80221b0:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80221b4:	d204      	bcs.n	80221c0 <UART_SetConfig+0x49c>
      {
        huart->Instance->BRR = usartdiv;
 80221b6:	687b      	ldr	r3, [r7, #4]
 80221b8:	681b      	ldr	r3, [r3, #0]
 80221ba:	693a      	ldr	r2, [r7, #16]
 80221bc:	60da      	str	r2, [r3, #12]
 80221be:	e001      	b.n	80221c4 <UART_SetConfig+0x4a0>
      }
      else
      {
        ret = HAL_ERROR;
 80221c0:	2301      	movs	r3, #1
 80221c2:	77bb      	strb	r3, [r7, #30]
    }
  }


  /* Clear ISR function pointers */
  huart->RxISR = NULL;
 80221c4:	687b      	ldr	r3, [r7, #4]
 80221c6:	2200      	movs	r2, #0
 80221c8:	665a      	str	r2, [r3, #100]	; 0x64
  huart->TxISR = NULL;
 80221ca:	687b      	ldr	r3, [r7, #4]
 80221cc:	2200      	movs	r2, #0
 80221ce:	669a      	str	r2, [r3, #104]	; 0x68

  return ret;
 80221d0:	7fbb      	ldrb	r3, [r7, #30]
}
 80221d2:	4618      	mov	r0, r3
 80221d4:	3720      	adds	r7, #32
 80221d6:	46bd      	mov	sp, r7
 80221d8:	bd80      	pop	{r7, pc}
 80221da:	bf00      	nop
 80221dc:	40007c00 	.word	0x40007c00
 80221e0:	40023800 	.word	0x40023800
 80221e4:	00f42400 	.word	0x00f42400

080221e8 <UART_AdvFeatureConfig>:
  * @brief Configure the UART peripheral advanced features.
  * @param huart UART handle.
  * @retval None
  */
void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
{
 80221e8:	b480      	push	{r7}
 80221ea:	b083      	sub	sp, #12
 80221ec:	af00      	add	r7, sp, #0
 80221ee:	6078      	str	r0, [r7, #4]
  /* Check whether the set of advanced features to configure is properly set */
  assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));

  /* if required, configure TX pin active level inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 80221f0:	687b      	ldr	r3, [r7, #4]
 80221f2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80221f4:	f003 0301 	and.w	r3, r3, #1
 80221f8:	2b00      	cmp	r3, #0
 80221fa:	d00a      	beq.n	8022212 <UART_AdvFeatureConfig+0x2a>
  {
    assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 80221fc:	687b      	ldr	r3, [r7, #4]
 80221fe:	681b      	ldr	r3, [r3, #0]
 8022200:	685b      	ldr	r3, [r3, #4]
 8022202:	f423 3100 	bic.w	r1, r3, #131072	; 0x20000
 8022206:	687b      	ldr	r3, [r7, #4]
 8022208:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 802220a:	687b      	ldr	r3, [r7, #4]
 802220c:	681b      	ldr	r3, [r3, #0]
 802220e:	430a      	orrs	r2, r1
 8022210:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure RX pin active level inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
 8022212:	687b      	ldr	r3, [r7, #4]
 8022214:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8022216:	f003 0302 	and.w	r3, r3, #2
 802221a:	2b00      	cmp	r3, #0
 802221c:	d00a      	beq.n	8022234 <UART_AdvFeatureConfig+0x4c>
  {
    assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 802221e:	687b      	ldr	r3, [r7, #4]
 8022220:	681b      	ldr	r3, [r3, #0]
 8022222:	685b      	ldr	r3, [r3, #4]
 8022224:	f423 3180 	bic.w	r1, r3, #65536	; 0x10000
 8022228:	687b      	ldr	r3, [r7, #4]
 802222a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 802222c:	687b      	ldr	r3, [r7, #4]
 802222e:	681b      	ldr	r3, [r3, #0]
 8022230:	430a      	orrs	r2, r1
 8022232:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure data inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
 8022234:	687b      	ldr	r3, [r7, #4]
 8022236:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8022238:	f003 0304 	and.w	r3, r3, #4
 802223c:	2b00      	cmp	r3, #0
 802223e:	d00a      	beq.n	8022256 <UART_AdvFeatureConfig+0x6e>
  {
    assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 8022240:	687b      	ldr	r3, [r7, #4]
 8022242:	681b      	ldr	r3, [r3, #0]
 8022244:	685b      	ldr	r3, [r3, #4]
 8022246:	f423 2180 	bic.w	r1, r3, #262144	; 0x40000
 802224a:	687b      	ldr	r3, [r7, #4]
 802224c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 802224e:	687b      	ldr	r3, [r7, #4]
 8022250:	681b      	ldr	r3, [r3, #0]
 8022252:	430a      	orrs	r2, r1
 8022254:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure RX/TX pins swap */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
 8022256:	687b      	ldr	r3, [r7, #4]
 8022258:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 802225a:	f003 0308 	and.w	r3, r3, #8
 802225e:	2b00      	cmp	r3, #0
 8022260:	d00a      	beq.n	8022278 <UART_AdvFeatureConfig+0x90>
  {
    assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 8022262:	687b      	ldr	r3, [r7, #4]
 8022264:	681b      	ldr	r3, [r3, #0]
 8022266:	685b      	ldr	r3, [r3, #4]
 8022268:	f423 4100 	bic.w	r1, r3, #32768	; 0x8000
 802226c:	687b      	ldr	r3, [r7, #4]
 802226e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8022270:	687b      	ldr	r3, [r7, #4]
 8022272:	681b      	ldr	r3, [r3, #0]
 8022274:	430a      	orrs	r2, r1
 8022276:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure RX overrun detection disabling */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
 8022278:	687b      	ldr	r3, [r7, #4]
 802227a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 802227c:	f003 0310 	and.w	r3, r3, #16
 8022280:	2b00      	cmp	r3, #0
 8022282:	d00a      	beq.n	802229a <UART_AdvFeatureConfig+0xb2>
  {
    assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
    MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 8022284:	687b      	ldr	r3, [r7, #4]
 8022286:	681b      	ldr	r3, [r3, #0]
 8022288:	689b      	ldr	r3, [r3, #8]
 802228a:	f423 5180 	bic.w	r1, r3, #4096	; 0x1000
 802228e:	687b      	ldr	r3, [r7, #4]
 8022290:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8022292:	687b      	ldr	r3, [r7, #4]
 8022294:	681b      	ldr	r3, [r3, #0]
 8022296:	430a      	orrs	r2, r1
 8022298:	609a      	str	r2, [r3, #8]
  }

  /* if required, configure DMA disabling on reception error */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
 802229a:	687b      	ldr	r3, [r7, #4]
 802229c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 802229e:	f003 0320 	and.w	r3, r3, #32
 80222a2:	2b00      	cmp	r3, #0
 80222a4:	d00a      	beq.n	80222bc <UART_AdvFeatureConfig+0xd4>
  {
    assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
    MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 80222a6:	687b      	ldr	r3, [r7, #4]
 80222a8:	681b      	ldr	r3, [r3, #0]
 80222aa:	689b      	ldr	r3, [r3, #8]
 80222ac:	f423 5100 	bic.w	r1, r3, #8192	; 0x2000
 80222b0:	687b      	ldr	r3, [r7, #4]
 80222b2:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 80222b4:	687b      	ldr	r3, [r7, #4]
 80222b6:	681b      	ldr	r3, [r3, #0]
 80222b8:	430a      	orrs	r2, r1
 80222ba:	609a      	str	r2, [r3, #8]
  }

  /* if required, configure auto Baud rate detection scheme */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
 80222bc:	687b      	ldr	r3, [r7, #4]
 80222be:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80222c0:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80222c4:	2b00      	cmp	r3, #0
 80222c6:	d01a      	beq.n	80222fe <UART_AdvFeatureConfig+0x116>
  {
    assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
    assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 80222c8:	687b      	ldr	r3, [r7, #4]
 80222ca:	681b      	ldr	r3, [r3, #0]
 80222cc:	685b      	ldr	r3, [r3, #4]
 80222ce:	f423 1180 	bic.w	r1, r3, #1048576	; 0x100000
 80222d2:	687b      	ldr	r3, [r7, #4]
 80222d4:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80222d6:	687b      	ldr	r3, [r7, #4]
 80222d8:	681b      	ldr	r3, [r3, #0]
 80222da:	430a      	orrs	r2, r1
 80222dc:	605a      	str	r2, [r3, #4]
    /* set auto Baudrate detection parameters if detection is enabled */
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 80222de:	687b      	ldr	r3, [r7, #4]
 80222e0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80222e2:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 80222e6:	d10a      	bne.n	80222fe <UART_AdvFeatureConfig+0x116>
    {
      assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
      MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 80222e8:	687b      	ldr	r3, [r7, #4]
 80222ea:	681b      	ldr	r3, [r3, #0]
 80222ec:	685b      	ldr	r3, [r3, #4]
 80222ee:	f423 01c0 	bic.w	r1, r3, #6291456	; 0x600000
 80222f2:	687b      	ldr	r3, [r7, #4]
 80222f4:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80222f6:	687b      	ldr	r3, [r7, #4]
 80222f8:	681b      	ldr	r3, [r3, #0]
 80222fa:	430a      	orrs	r2, r1
 80222fc:	605a      	str	r2, [r3, #4]
    }
  }

  /* if required, configure MSB first on communication line */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
 80222fe:	687b      	ldr	r3, [r7, #4]
 8022300:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8022302:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8022306:	2b00      	cmp	r3, #0
 8022308:	d00a      	beq.n	8022320 <UART_AdvFeatureConfig+0x138>
  {
    assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 802230a:	687b      	ldr	r3, [r7, #4]
 802230c:	681b      	ldr	r3, [r3, #0]
 802230e:	685b      	ldr	r3, [r3, #4]
 8022310:	f423 2100 	bic.w	r1, r3, #524288	; 0x80000
 8022314:	687b      	ldr	r3, [r7, #4]
 8022316:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 8022318:	687b      	ldr	r3, [r7, #4]
 802231a:	681b      	ldr	r3, [r3, #0]
 802231c:	430a      	orrs	r2, r1
 802231e:	605a      	str	r2, [r3, #4]
  }
}
 8022320:	bf00      	nop
 8022322:	370c      	adds	r7, #12
 8022324:	46bd      	mov	sp, r7
 8022326:	f85d 7b04 	ldr.w	r7, [sp], #4
 802232a:	4770      	bx	lr

0802232c <UART_CheckIdleState>:
  * @brief Check the UART Idle State.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
{
 802232c:	b580      	push	{r7, lr}
 802232e:	b086      	sub	sp, #24
 8022330:	af02      	add	r7, sp, #8
 8022332:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;

  /* Initialize the UART ErrorCode */
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8022334:	687b      	ldr	r3, [r7, #4]
 8022336:	2200      	movs	r2, #0
 8022338:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80

  /* Init tickstart for timeout management */
  tickstart = HAL_GetTick();
 802233c:	f7fd fcbe 	bl	801fcbc <HAL_GetTick>
 8022340:	60f8      	str	r0, [r7, #12]

  /* Check if the Transmitter is enabled */
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 8022342:	687b      	ldr	r3, [r7, #4]
 8022344:	681b      	ldr	r3, [r3, #0]
 8022346:	681b      	ldr	r3, [r3, #0]
 8022348:	f003 0308 	and.w	r3, r3, #8
 802234c:	2b08      	cmp	r3, #8
 802234e:	d10e      	bne.n	802236e <UART_CheckIdleState+0x42>
  {
    /* Wait until TEACK flag is set */
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
 8022350:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 8022354:	9300      	str	r3, [sp, #0]
 8022356:	68fb      	ldr	r3, [r7, #12]
 8022358:	2200      	movs	r2, #0
 802235a:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
 802235e:	6878      	ldr	r0, [r7, #4]
 8022360:	f000 f817 	bl	8022392 <UART_WaitOnFlagUntilTimeout>
 8022364:	4603      	mov	r3, r0
 8022366:	2b00      	cmp	r3, #0
 8022368:	d001      	beq.n	802236e <UART_CheckIdleState+0x42>
    {
      /* Timeout occurred */
      return HAL_TIMEOUT;
 802236a:	2303      	movs	r3, #3
 802236c:	e00d      	b.n	802238a <UART_CheckIdleState+0x5e>
    }
  }
#endif

  /* Initialize the UART State */
  huart->gState = HAL_UART_STATE_READY;
 802236e:	687b      	ldr	r3, [r7, #4]
 8022370:	2220      	movs	r2, #32
 8022372:	679a      	str	r2, [r3, #120]	; 0x78
  huart->RxState = HAL_UART_STATE_READY;
 8022374:	687b      	ldr	r3, [r7, #4]
 8022376:	2220      	movs	r2, #32
 8022378:	67da      	str	r2, [r3, #124]	; 0x7c
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 802237a:	687b      	ldr	r3, [r7, #4]
 802237c:	2200      	movs	r2, #0
 802237e:	661a      	str	r2, [r3, #96]	; 0x60

  __HAL_UNLOCK(huart);
 8022380:	687b      	ldr	r3, [r7, #4]
 8022382:	2200      	movs	r2, #0
 8022384:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

  return HAL_OK;
 8022388:	2300      	movs	r3, #0
}
 802238a:	4618      	mov	r0, r3
 802238c:	3710      	adds	r7, #16
 802238e:	46bd      	mov	sp, r7
 8022390:	bd80      	pop	{r7, pc}

08022392 <UART_WaitOnFlagUntilTimeout>:
  * @param Timeout   Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus Status,
                                              uint32_t Tickstart, uint32_t Timeout)
{
 8022392:	b580      	push	{r7, lr}
 8022394:	b084      	sub	sp, #16
 8022396:	af00      	add	r7, sp, #0
 8022398:	60f8      	str	r0, [r7, #12]
 802239a:	60b9      	str	r1, [r7, #8]
 802239c:	603b      	str	r3, [r7, #0]
 802239e:	4613      	mov	r3, r2
 80223a0:	71fb      	strb	r3, [r7, #7]
  /* Wait until flag is set */
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 80223a2:	e05e      	b.n	8022462 <UART_WaitOnFlagUntilTimeout+0xd0>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 80223a4:	69bb      	ldr	r3, [r7, #24]
 80223a6:	f1b3 3fff 	cmp.w	r3, #4294967295
 80223aa:	d05a      	beq.n	8022462 <UART_WaitOnFlagUntilTimeout+0xd0>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80223ac:	f7fd fc86 	bl	801fcbc <HAL_GetTick>
 80223b0:	4602      	mov	r2, r0
 80223b2:	683b      	ldr	r3, [r7, #0]
 80223b4:	1ad3      	subs	r3, r2, r3
 80223b6:	69ba      	ldr	r2, [r7, #24]
 80223b8:	429a      	cmp	r2, r3
 80223ba:	d302      	bcc.n	80223c2 <UART_WaitOnFlagUntilTimeout+0x30>
 80223bc:	69bb      	ldr	r3, [r7, #24]
 80223be:	2b00      	cmp	r3, #0
 80223c0:	d11b      	bne.n	80223fa <UART_WaitOnFlagUntilTimeout+0x68>
      {
        /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error)
           interrupts for the interrupt process */
        CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 80223c2:	68fb      	ldr	r3, [r7, #12]
 80223c4:	681b      	ldr	r3, [r3, #0]
 80223c6:	681a      	ldr	r2, [r3, #0]
 80223c8:	68fb      	ldr	r3, [r7, #12]
 80223ca:	681b      	ldr	r3, [r3, #0]
 80223cc:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 80223d0:	601a      	str	r2, [r3, #0]
        CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 80223d2:	68fb      	ldr	r3, [r7, #12]
 80223d4:	681b      	ldr	r3, [r3, #0]
 80223d6:	689a      	ldr	r2, [r3, #8]
 80223d8:	68fb      	ldr	r3, [r7, #12]
 80223da:	681b      	ldr	r3, [r3, #0]
 80223dc:	f022 0201 	bic.w	r2, r2, #1
 80223e0:	609a      	str	r2, [r3, #8]

        huart->gState = HAL_UART_STATE_READY;
 80223e2:	68fb      	ldr	r3, [r7, #12]
 80223e4:	2220      	movs	r2, #32
 80223e6:	679a      	str	r2, [r3, #120]	; 0x78
        huart->RxState = HAL_UART_STATE_READY;
 80223e8:	68fb      	ldr	r3, [r7, #12]
 80223ea:	2220      	movs	r2, #32
 80223ec:	67da      	str	r2, [r3, #124]	; 0x7c

        __HAL_UNLOCK(huart);
 80223ee:	68fb      	ldr	r3, [r7, #12]
 80223f0:	2200      	movs	r2, #0
 80223f2:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

        return HAL_TIMEOUT;
 80223f6:	2303      	movs	r3, #3
 80223f8:	e043      	b.n	8022482 <UART_WaitOnFlagUntilTimeout+0xf0>
      }

      if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
 80223fa:	68fb      	ldr	r3, [r7, #12]
 80223fc:	681b      	ldr	r3, [r3, #0]
 80223fe:	681b      	ldr	r3, [r3, #0]
 8022400:	f003 0304 	and.w	r3, r3, #4
 8022404:	2b00      	cmp	r3, #0
 8022406:	d02c      	beq.n	8022462 <UART_WaitOnFlagUntilTimeout+0xd0>
      {
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
 8022408:	68fb      	ldr	r3, [r7, #12]
 802240a:	681b      	ldr	r3, [r3, #0]
 802240c:	69db      	ldr	r3, [r3, #28]
 802240e:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8022412:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8022416:	d124      	bne.n	8022462 <UART_WaitOnFlagUntilTimeout+0xd0>
        {
          /* Clear Receiver Timeout flag*/
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 8022418:	68fb      	ldr	r3, [r7, #12]
 802241a:	681b      	ldr	r3, [r3, #0]
 802241c:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8022420:	621a      	str	r2, [r3, #32]

          /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error)
             interrupts for the interrupt process */
          CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 8022422:	68fb      	ldr	r3, [r7, #12]
 8022424:	681b      	ldr	r3, [r3, #0]
 8022426:	681a      	ldr	r2, [r3, #0]
 8022428:	68fb      	ldr	r3, [r7, #12]
 802242a:	681b      	ldr	r3, [r3, #0]
 802242c:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 8022430:	601a      	str	r2, [r3, #0]
          CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8022432:	68fb      	ldr	r3, [r7, #12]
 8022434:	681b      	ldr	r3, [r3, #0]
 8022436:	689a      	ldr	r2, [r3, #8]
 8022438:	68fb      	ldr	r3, [r7, #12]
 802243a:	681b      	ldr	r3, [r3, #0]
 802243c:	f022 0201 	bic.w	r2, r2, #1
 8022440:	609a      	str	r2, [r3, #8]

          huart->gState = HAL_UART_STATE_READY;
 8022442:	68fb      	ldr	r3, [r7, #12]
 8022444:	2220      	movs	r2, #32
 8022446:	679a      	str	r2, [r3, #120]	; 0x78
          huart->RxState = HAL_UART_STATE_READY;
 8022448:	68fb      	ldr	r3, [r7, #12]
 802244a:	2220      	movs	r2, #32
 802244c:	67da      	str	r2, [r3, #124]	; 0x7c
          huart->ErrorCode = HAL_UART_ERROR_RTO;
 802244e:	68fb      	ldr	r3, [r7, #12]
 8022450:	2220      	movs	r2, #32
 8022452:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80

          /* Process Unlocked */
          __HAL_UNLOCK(huart);
 8022456:	68fb      	ldr	r3, [r7, #12]
 8022458:	2200      	movs	r2, #0
 802245a:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

          return HAL_TIMEOUT;
 802245e:	2303      	movs	r3, #3
 8022460:	e00f      	b.n	8022482 <UART_WaitOnFlagUntilTimeout+0xf0>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 8022462:	68fb      	ldr	r3, [r7, #12]
 8022464:	681b      	ldr	r3, [r3, #0]
 8022466:	69da      	ldr	r2, [r3, #28]
 8022468:	68bb      	ldr	r3, [r7, #8]
 802246a:	4013      	ands	r3, r2
 802246c:	68ba      	ldr	r2, [r7, #8]
 802246e:	429a      	cmp	r2, r3
 8022470:	bf0c      	ite	eq
 8022472:	2301      	moveq	r3, #1
 8022474:	2300      	movne	r3, #0
 8022476:	b2db      	uxtb	r3, r3
 8022478:	461a      	mov	r2, r3
 802247a:	79fb      	ldrb	r3, [r7, #7]
 802247c:	429a      	cmp	r2, r3
 802247e:	d091      	beq.n	80223a4 <UART_WaitOnFlagUntilTimeout+0x12>
        }
      }
    }
  }
  return HAL_OK;
 8022480:	2300      	movs	r3, #0
}
 8022482:	4618      	mov	r0, r3
 8022484:	3710      	adds	r7, #16
 8022486:	46bd      	mov	sp, r7
 8022488:	bd80      	pop	{r7, pc}
	...

0802248c <UART_Start_Receive_IT>:
  * @param  pData Pointer to data buffer (u8 or u16 data elements).
  * @param  Size  Amount of data elements (u8 or u16) to be received.
  * @retval HAL status
  */
HAL_StatusTypeDef UART_Start_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
{
 802248c:	b480      	push	{r7}
 802248e:	b085      	sub	sp, #20
 8022490:	af00      	add	r7, sp, #0
 8022492:	60f8      	str	r0, [r7, #12]
 8022494:	60b9      	str	r1, [r7, #8]
 8022496:	4613      	mov	r3, r2
 8022498:	80fb      	strh	r3, [r7, #6]
  huart->pRxBuffPtr  = pData;
 802249a:	68fb      	ldr	r3, [r7, #12]
 802249c:	68ba      	ldr	r2, [r7, #8]
 802249e:	655a      	str	r2, [r3, #84]	; 0x54
  huart->RxXferSize  = Size;
 80224a0:	68fb      	ldr	r3, [r7, #12]
 80224a2:	88fa      	ldrh	r2, [r7, #6]
 80224a4:	f8a3 2058 	strh.w	r2, [r3, #88]	; 0x58
  huart->RxXferCount = Size;
 80224a8:	68fb      	ldr	r3, [r7, #12]
 80224aa:	88fa      	ldrh	r2, [r7, #6]
 80224ac:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a
  huart->RxISR       = NULL;
 80224b0:	68fb      	ldr	r3, [r7, #12]
 80224b2:	2200      	movs	r2, #0
 80224b4:	665a      	str	r2, [r3, #100]	; 0x64

  /* Computation of UART mask to apply to RDR register */
  UART_MASK_COMPUTATION(huart);
 80224b6:	68fb      	ldr	r3, [r7, #12]
 80224b8:	689b      	ldr	r3, [r3, #8]
 80224ba:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80224be:	d10e      	bne.n	80224de <UART_Start_Receive_IT+0x52>
 80224c0:	68fb      	ldr	r3, [r7, #12]
 80224c2:	691b      	ldr	r3, [r3, #16]
 80224c4:	2b00      	cmp	r3, #0
 80224c6:	d105      	bne.n	80224d4 <UART_Start_Receive_IT+0x48>
 80224c8:	68fb      	ldr	r3, [r7, #12]
 80224ca:	f240 12ff 	movw	r2, #511	; 0x1ff
 80224ce:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 80224d2:	e02d      	b.n	8022530 <UART_Start_Receive_IT+0xa4>
 80224d4:	68fb      	ldr	r3, [r7, #12]
 80224d6:	22ff      	movs	r2, #255	; 0xff
 80224d8:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 80224dc:	e028      	b.n	8022530 <UART_Start_Receive_IT+0xa4>
 80224de:	68fb      	ldr	r3, [r7, #12]
 80224e0:	689b      	ldr	r3, [r3, #8]
 80224e2:	2b00      	cmp	r3, #0
 80224e4:	d10d      	bne.n	8022502 <UART_Start_Receive_IT+0x76>
 80224e6:	68fb      	ldr	r3, [r7, #12]
 80224e8:	691b      	ldr	r3, [r3, #16]
 80224ea:	2b00      	cmp	r3, #0
 80224ec:	d104      	bne.n	80224f8 <UART_Start_Receive_IT+0x6c>
 80224ee:	68fb      	ldr	r3, [r7, #12]
 80224f0:	22ff      	movs	r2, #255	; 0xff
 80224f2:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 80224f6:	e01b      	b.n	8022530 <UART_Start_Receive_IT+0xa4>
 80224f8:	68fb      	ldr	r3, [r7, #12]
 80224fa:	227f      	movs	r2, #127	; 0x7f
 80224fc:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 8022500:	e016      	b.n	8022530 <UART_Start_Receive_IT+0xa4>
 8022502:	68fb      	ldr	r3, [r7, #12]
 8022504:	689b      	ldr	r3, [r3, #8]
 8022506:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 802250a:	d10d      	bne.n	8022528 <UART_Start_Receive_IT+0x9c>
 802250c:	68fb      	ldr	r3, [r7, #12]
 802250e:	691b      	ldr	r3, [r3, #16]
 8022510:	2b00      	cmp	r3, #0
 8022512:	d104      	bne.n	802251e <UART_Start_Receive_IT+0x92>
 8022514:	68fb      	ldr	r3, [r7, #12]
 8022516:	227f      	movs	r2, #127	; 0x7f
 8022518:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 802251c:	e008      	b.n	8022530 <UART_Start_Receive_IT+0xa4>
 802251e:	68fb      	ldr	r3, [r7, #12]
 8022520:	223f      	movs	r2, #63	; 0x3f
 8022522:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 8022526:	e003      	b.n	8022530 <UART_Start_Receive_IT+0xa4>
 8022528:	68fb      	ldr	r3, [r7, #12]
 802252a:	2200      	movs	r2, #0
 802252c:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c

  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8022530:	68fb      	ldr	r3, [r7, #12]
 8022532:	2200      	movs	r2, #0
 8022534:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
  huart->RxState = HAL_UART_STATE_BUSY_RX;
 8022538:	68fb      	ldr	r3, [r7, #12]
 802253a:	2222      	movs	r2, #34	; 0x22
 802253c:	67da      	str	r2, [r3, #124]	; 0x7c

  /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
  SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 802253e:	68fb      	ldr	r3, [r7, #12]
 8022540:	681b      	ldr	r3, [r3, #0]
 8022542:	689a      	ldr	r2, [r3, #8]
 8022544:	68fb      	ldr	r3, [r7, #12]
 8022546:	681b      	ldr	r3, [r3, #0]
 8022548:	f042 0201 	orr.w	r2, r2, #1
 802254c:	609a      	str	r2, [r3, #8]

  /* Set the Rx ISR function pointer according to the data word length */
  if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 802254e:	68fb      	ldr	r3, [r7, #12]
 8022550:	689b      	ldr	r3, [r3, #8]
 8022552:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8022556:	d107      	bne.n	8022568 <UART_Start_Receive_IT+0xdc>
 8022558:	68fb      	ldr	r3, [r7, #12]
 802255a:	691b      	ldr	r3, [r3, #16]
 802255c:	2b00      	cmp	r3, #0
 802255e:	d103      	bne.n	8022568 <UART_Start_Receive_IT+0xdc>
  {
    huart->RxISR = UART_RxISR_16BIT;
 8022560:	68fb      	ldr	r3, [r7, #12]
 8022562:	4a0c      	ldr	r2, [pc, #48]	; (8022594 <UART_Start_Receive_IT+0x108>)
 8022564:	665a      	str	r2, [r3, #100]	; 0x64
 8022566:	e002      	b.n	802256e <UART_Start_Receive_IT+0xe2>
  }
  else
  {
    huart->RxISR = UART_RxISR_8BIT;
 8022568:	68fb      	ldr	r3, [r7, #12]
 802256a:	4a0b      	ldr	r2, [pc, #44]	; (8022598 <UART_Start_Receive_IT+0x10c>)
 802256c:	665a      	str	r2, [r3, #100]	; 0x64
  }

  __HAL_UNLOCK(huart);
 802256e:	68fb      	ldr	r3, [r7, #12]
 8022570:	2200      	movs	r2, #0
 8022572:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

  /* Enable the UART Parity Error interrupt and Data Register Not Empty interrupt */
  SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE);
 8022576:	68fb      	ldr	r3, [r7, #12]
 8022578:	681b      	ldr	r3, [r3, #0]
 802257a:	681a      	ldr	r2, [r3, #0]
 802257c:	68fb      	ldr	r3, [r7, #12]
 802257e:	681b      	ldr	r3, [r3, #0]
 8022580:	f442 7290 	orr.w	r2, r2, #288	; 0x120
 8022584:	601a      	str	r2, [r3, #0]
  return HAL_OK;
 8022586:	2300      	movs	r3, #0
}
 8022588:	4618      	mov	r0, r3
 802258a:	3714      	adds	r7, #20
 802258c:	46bd      	mov	sp, r7
 802258e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8022592:	4770      	bx	lr
 8022594:	0802272d 	.word	0x0802272d
 8022598:	08022659 	.word	0x08022659

0802259c <UART_EndRxTransfer>:
  * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception completion).
  * @param  huart UART handle.
  * @retval None
  */
static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
{
 802259c:	b480      	push	{r7}
 802259e:	b083      	sub	sp, #12
 80225a0:	af00      	add	r7, sp, #0
 80225a2:	6078      	str	r0, [r7, #4]
  /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
  CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 80225a4:	687b      	ldr	r3, [r7, #4]
 80225a6:	681b      	ldr	r3, [r3, #0]
 80225a8:	681a      	ldr	r2, [r3, #0]
 80225aa:	687b      	ldr	r3, [r7, #4]
 80225ac:	681b      	ldr	r3, [r3, #0]
 80225ae:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 80225b2:	601a      	str	r2, [r3, #0]
  CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 80225b4:	687b      	ldr	r3, [r7, #4]
 80225b6:	681b      	ldr	r3, [r3, #0]
 80225b8:	689a      	ldr	r2, [r3, #8]
 80225ba:	687b      	ldr	r3, [r7, #4]
 80225bc:	681b      	ldr	r3, [r3, #0]
 80225be:	f022 0201 	bic.w	r2, r2, #1
 80225c2:	609a      	str	r2, [r3, #8]

  /* In case of reception waiting for IDLE event, disable also the IDLE IE interrupt source */
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 80225c4:	687b      	ldr	r3, [r7, #4]
 80225c6:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80225c8:	2b01      	cmp	r3, #1
 80225ca:	d107      	bne.n	80225dc <UART_EndRxTransfer+0x40>
  {
    CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 80225cc:	687b      	ldr	r3, [r7, #4]
 80225ce:	681b      	ldr	r3, [r3, #0]
 80225d0:	681a      	ldr	r2, [r3, #0]
 80225d2:	687b      	ldr	r3, [r7, #4]
 80225d4:	681b      	ldr	r3, [r3, #0]
 80225d6:	f022 0210 	bic.w	r2, r2, #16
 80225da:	601a      	str	r2, [r3, #0]
  }

  /* At end of Rx process, restore huart->RxState to Ready */
  huart->RxState = HAL_UART_STATE_READY;
 80225dc:	687b      	ldr	r3, [r7, #4]
 80225de:	2220      	movs	r2, #32
 80225e0:	67da      	str	r2, [r3, #124]	; 0x7c
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 80225e2:	687b      	ldr	r3, [r7, #4]
 80225e4:	2200      	movs	r2, #0
 80225e6:	661a      	str	r2, [r3, #96]	; 0x60

  /* Reset RxIsr function pointer */
  huart->RxISR = NULL;
 80225e8:	687b      	ldr	r3, [r7, #4]
 80225ea:	2200      	movs	r2, #0
 80225ec:	665a      	str	r2, [r3, #100]	; 0x64
}
 80225ee:	bf00      	nop
 80225f0:	370c      	adds	r7, #12
 80225f2:	46bd      	mov	sp, r7
 80225f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80225f8:	4770      	bx	lr

080225fa <UART_DMAAbortOnError>:
  *         (To be called at end of DMA Abort procedure following error occurrence).
  * @param  hdma DMA handle.
  * @retval None
  */
static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
{
 80225fa:	b580      	push	{r7, lr}
 80225fc:	b084      	sub	sp, #16
 80225fe:	af00      	add	r7, sp, #0
 8022600:	6078      	str	r0, [r7, #4]
  UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 8022602:	687b      	ldr	r3, [r7, #4]
 8022604:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8022606:	60fb      	str	r3, [r7, #12]
  huart->RxXferCount = 0U;
 8022608:	68fb      	ldr	r3, [r7, #12]
 802260a:	2200      	movs	r2, #0
 802260c:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a
  huart->TxXferCount = 0U;
 8022610:	68fb      	ldr	r3, [r7, #12]
 8022612:	2200      	movs	r2, #0
 8022614:	f8a3 2052 	strh.w	r2, [r3, #82]	; 0x52
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
  /*Call registered error callback*/
  huart->ErrorCallback(huart);
#else
  /*Call legacy weak error callback*/
  HAL_UART_ErrorCallback(huart);
 8022618:	68f8      	ldr	r0, [r7, #12]
 802261a:	f7ff fb6d 	bl	8021cf8 <HAL_UART_ErrorCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
}
 802261e:	bf00      	nop
 8022620:	3710      	adds	r7, #16
 8022622:	46bd      	mov	sp, r7
 8022624:	bd80      	pop	{r7, pc}

08022626 <UART_EndTransmit_IT>:
  * @param  huart pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval None
  */
static void UART_EndTransmit_IT(UART_HandleTypeDef *huart)
{
 8022626:	b580      	push	{r7, lr}
 8022628:	b082      	sub	sp, #8
 802262a:	af00      	add	r7, sp, #0
 802262c:	6078      	str	r0, [r7, #4]
  /* Disable the UART Transmit Complete Interrupt */
  CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 802262e:	687b      	ldr	r3, [r7, #4]
 8022630:	681b      	ldr	r3, [r3, #0]
 8022632:	681a      	ldr	r2, [r3, #0]
 8022634:	687b      	ldr	r3, [r7, #4]
 8022636:	681b      	ldr	r3, [r3, #0]
 8022638:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 802263c:	601a      	str	r2, [r3, #0]

  /* Tx process is ended, restore huart->gState to Ready */
  huart->gState = HAL_UART_STATE_READY;
 802263e:	687b      	ldr	r3, [r7, #4]
 8022640:	2220      	movs	r2, #32
 8022642:	679a      	str	r2, [r3, #120]	; 0x78

  /* Cleat TxISR function pointer */
  huart->TxISR = NULL;
 8022644:	687b      	ldr	r3, [r7, #4]
 8022646:	2200      	movs	r2, #0
 8022648:	669a      	str	r2, [r3, #104]	; 0x68
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
  /*Call registered Tx complete callback*/
  huart->TxCpltCallback(huart);
#else
  /*Call legacy weak Tx complete callback*/
  HAL_UART_TxCpltCallback(huart);
 802264a:	6878      	ldr	r0, [r7, #4]
 802264c:	f7ff fb4a 	bl	8021ce4 <HAL_UART_TxCpltCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
}
 8022650:	bf00      	nop
 8022652:	3708      	adds	r7, #8
 8022654:	46bd      	mov	sp, r7
 8022656:	bd80      	pop	{r7, pc}

08022658 <UART_RxISR_8BIT>:
  * @brief RX interrupt handler for 7 or 8 bits data word length .
  * @param huart UART handle.
  * @retval None
  */
static void UART_RxISR_8BIT(UART_HandleTypeDef *huart)
{
 8022658:	b580      	push	{r7, lr}
 802265a:	b084      	sub	sp, #16
 802265c:	af00      	add	r7, sp, #0
 802265e:	6078      	str	r0, [r7, #4]
  uint16_t uhMask = huart->Mask;
 8022660:	687b      	ldr	r3, [r7, #4]
 8022662:	f8b3 305c 	ldrh.w	r3, [r3, #92]	; 0x5c
 8022666:	81fb      	strh	r3, [r7, #14]
  uint16_t  uhdata;

  /* Check that a Rx process is ongoing */
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 8022668:	687b      	ldr	r3, [r7, #4]
 802266a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 802266c:	2b22      	cmp	r3, #34	; 0x22
 802266e:	d151      	bne.n	8022714 <UART_RxISR_8BIT+0xbc>
  {
    uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 8022670:	687b      	ldr	r3, [r7, #4]
 8022672:	681b      	ldr	r3, [r3, #0]
 8022674:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8022676:	81bb      	strh	r3, [r7, #12]
    *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
 8022678:	89bb      	ldrh	r3, [r7, #12]
 802267a:	b2d9      	uxtb	r1, r3
 802267c:	89fb      	ldrh	r3, [r7, #14]
 802267e:	b2da      	uxtb	r2, r3
 8022680:	687b      	ldr	r3, [r7, #4]
 8022682:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8022684:	400a      	ands	r2, r1
 8022686:	b2d2      	uxtb	r2, r2
 8022688:	701a      	strb	r2, [r3, #0]
    huart->pRxBuffPtr++;
 802268a:	687b      	ldr	r3, [r7, #4]
 802268c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 802268e:	1c5a      	adds	r2, r3, #1
 8022690:	687b      	ldr	r3, [r7, #4]
 8022692:	655a      	str	r2, [r3, #84]	; 0x54
    huart->RxXferCount--;
 8022694:	687b      	ldr	r3, [r7, #4]
 8022696:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 802269a:	b29b      	uxth	r3, r3
 802269c:	3b01      	subs	r3, #1
 802269e:	b29a      	uxth	r2, r3
 80226a0:	687b      	ldr	r3, [r7, #4]
 80226a2:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a

    if (huart->RxXferCount == 0U)
 80226a6:	687b      	ldr	r3, [r7, #4]
 80226a8:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 80226ac:	b29b      	uxth	r3, r3
 80226ae:	2b00      	cmp	r3, #0
 80226b0:	d138      	bne.n	8022724 <UART_RxISR_8BIT+0xcc>
    {
      /* Disable the UART Parity Error Interrupt and RXNE interrupts */
      CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 80226b2:	687b      	ldr	r3, [r7, #4]
 80226b4:	681b      	ldr	r3, [r3, #0]
 80226b6:	681a      	ldr	r2, [r3, #0]
 80226b8:	687b      	ldr	r3, [r7, #4]
 80226ba:	681b      	ldr	r3, [r3, #0]
 80226bc:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 80226c0:	601a      	str	r2, [r3, #0]

      /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
      CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 80226c2:	687b      	ldr	r3, [r7, #4]
 80226c4:	681b      	ldr	r3, [r3, #0]
 80226c6:	689a      	ldr	r2, [r3, #8]
 80226c8:	687b      	ldr	r3, [r7, #4]
 80226ca:	681b      	ldr	r3, [r3, #0]
 80226cc:	f022 0201 	bic.w	r2, r2, #1
 80226d0:	609a      	str	r2, [r3, #8]

      /* Rx process is completed, restore huart->RxState to Ready */
      huart->RxState = HAL_UART_STATE_READY;
 80226d2:	687b      	ldr	r3, [r7, #4]
 80226d4:	2220      	movs	r2, #32
 80226d6:	67da      	str	r2, [r3, #124]	; 0x7c

      /* Clear RxISR function pointer */
      huart->RxISR = NULL;
 80226d8:	687b      	ldr	r3, [r7, #4]
 80226da:	2200      	movs	r2, #0
 80226dc:	665a      	str	r2, [r3, #100]	; 0x64

      /* Check current reception Mode :
         If Reception till IDLE event has been selected : */
      if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 80226de:	687b      	ldr	r3, [r7, #4]
 80226e0:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80226e2:	2b01      	cmp	r3, #1
 80226e4:	d10f      	bne.n	8022706 <UART_RxISR_8BIT+0xae>
      {
        /* Disable IDLE interrupt */
        CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 80226e6:	687b      	ldr	r3, [r7, #4]
 80226e8:	681b      	ldr	r3, [r3, #0]
 80226ea:	681a      	ldr	r2, [r3, #0]
 80226ec:	687b      	ldr	r3, [r7, #4]
 80226ee:	681b      	ldr	r3, [r3, #0]
 80226f0:	f022 0210 	bic.w	r2, r2, #16
 80226f4:	601a      	str	r2, [r3, #0]
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered Rx Event callback*/
        huart->RxEventCallback(huart, huart->RxXferSize);
#else
        /*Call legacy weak Rx Event callback*/
        HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 80226f6:	687b      	ldr	r3, [r7, #4]
 80226f8:	f8b3 3058 	ldrh.w	r3, [r3, #88]	; 0x58
 80226fc:	4619      	mov	r1, r3
 80226fe:	6878      	ldr	r0, [r7, #4]
 8022700:	f7ff fb04 	bl	8021d0c <HAL_UARTEx_RxEventCallback>
 8022704:	e002      	b.n	802270c <UART_RxISR_8BIT+0xb4>
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered Rx complete callback*/
        huart->RxCpltCallback(huart);
#else
        /*Call legacy weak Rx complete callback*/
        HAL_UART_RxCpltCallback(huart);
 8022706:	6878      	ldr	r0, [r7, #4]
 8022708:	f7f5 fde2 	bl	80182d0 <HAL_UART_RxCpltCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
      }
      huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 802270c:	687b      	ldr	r3, [r7, #4]
 802270e:	2200      	movs	r2, #0
 8022710:	661a      	str	r2, [r3, #96]	; 0x60
  else
  {
    /* Clear RXNE interrupt flag */
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
  }
}
 8022712:	e007      	b.n	8022724 <UART_RxISR_8BIT+0xcc>
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 8022714:	687b      	ldr	r3, [r7, #4]
 8022716:	681b      	ldr	r3, [r3, #0]
 8022718:	699a      	ldr	r2, [r3, #24]
 802271a:	687b      	ldr	r3, [r7, #4]
 802271c:	681b      	ldr	r3, [r3, #0]
 802271e:	f042 0208 	orr.w	r2, r2, #8
 8022722:	619a      	str	r2, [r3, #24]
}
 8022724:	bf00      	nop
 8022726:	3710      	adds	r7, #16
 8022728:	46bd      	mov	sp, r7
 802272a:	bd80      	pop	{r7, pc}

0802272c <UART_RxISR_16BIT>:
  *         interruptions have been enabled by HAL_UART_Receive_IT()
  * @param huart UART handle.
  * @retval None
  */
static void UART_RxISR_16BIT(UART_HandleTypeDef *huart)
{
 802272c:	b580      	push	{r7, lr}
 802272e:	b084      	sub	sp, #16
 8022730:	af00      	add	r7, sp, #0
 8022732:	6078      	str	r0, [r7, #4]
  uint16_t *tmp;
  uint16_t uhMask = huart->Mask;
 8022734:	687b      	ldr	r3, [r7, #4]
 8022736:	f8b3 305c 	ldrh.w	r3, [r3, #92]	; 0x5c
 802273a:	81fb      	strh	r3, [r7, #14]
  uint16_t  uhdata;

  /* Check that a Rx process is ongoing */
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 802273c:	687b      	ldr	r3, [r7, #4]
 802273e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8022740:	2b22      	cmp	r3, #34	; 0x22
 8022742:	d151      	bne.n	80227e8 <UART_RxISR_16BIT+0xbc>
  {
    uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 8022744:	687b      	ldr	r3, [r7, #4]
 8022746:	681b      	ldr	r3, [r3, #0]
 8022748:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 802274a:	81bb      	strh	r3, [r7, #12]
    tmp = (uint16_t *) huart->pRxBuffPtr ;
 802274c:	687b      	ldr	r3, [r7, #4]
 802274e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8022750:	60bb      	str	r3, [r7, #8]
    *tmp = (uint16_t)(uhdata & uhMask);
 8022752:	89ba      	ldrh	r2, [r7, #12]
 8022754:	89fb      	ldrh	r3, [r7, #14]
 8022756:	4013      	ands	r3, r2
 8022758:	b29a      	uxth	r2, r3
 802275a:	68bb      	ldr	r3, [r7, #8]
 802275c:	801a      	strh	r2, [r3, #0]
    huart->pRxBuffPtr += 2U;
 802275e:	687b      	ldr	r3, [r7, #4]
 8022760:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8022762:	1c9a      	adds	r2, r3, #2
 8022764:	687b      	ldr	r3, [r7, #4]
 8022766:	655a      	str	r2, [r3, #84]	; 0x54
    huart->RxXferCount--;
 8022768:	687b      	ldr	r3, [r7, #4]
 802276a:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 802276e:	b29b      	uxth	r3, r3
 8022770:	3b01      	subs	r3, #1
 8022772:	b29a      	uxth	r2, r3
 8022774:	687b      	ldr	r3, [r7, #4]
 8022776:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a

    if (huart->RxXferCount == 0U)
 802277a:	687b      	ldr	r3, [r7, #4]
 802277c:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 8022780:	b29b      	uxth	r3, r3
 8022782:	2b00      	cmp	r3, #0
 8022784:	d138      	bne.n	80227f8 <UART_RxISR_16BIT+0xcc>
    {
      /* Disable the UART Parity Error Interrupt and RXNE interrupt*/
      CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 8022786:	687b      	ldr	r3, [r7, #4]
 8022788:	681b      	ldr	r3, [r3, #0]
 802278a:	681a      	ldr	r2, [r3, #0]
 802278c:	687b      	ldr	r3, [r7, #4]
 802278e:	681b      	ldr	r3, [r3, #0]
 8022790:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 8022794:	601a      	str	r2, [r3, #0]

      /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
      CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8022796:	687b      	ldr	r3, [r7, #4]
 8022798:	681b      	ldr	r3, [r3, #0]
 802279a:	689a      	ldr	r2, [r3, #8]
 802279c:	687b      	ldr	r3, [r7, #4]
 802279e:	681b      	ldr	r3, [r3, #0]
 80227a0:	f022 0201 	bic.w	r2, r2, #1
 80227a4:	609a      	str	r2, [r3, #8]

      /* Rx process is completed, restore huart->RxState to Ready */
      huart->RxState = HAL_UART_STATE_READY;
 80227a6:	687b      	ldr	r3, [r7, #4]
 80227a8:	2220      	movs	r2, #32
 80227aa:	67da      	str	r2, [r3, #124]	; 0x7c

      /* Clear RxISR function pointer */
      huart->RxISR = NULL;
 80227ac:	687b      	ldr	r3, [r7, #4]
 80227ae:	2200      	movs	r2, #0
 80227b0:	665a      	str	r2, [r3, #100]	; 0x64

      /* Check current reception Mode :
         If Reception till IDLE event has been selected : */
      if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 80227b2:	687b      	ldr	r3, [r7, #4]
 80227b4:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80227b6:	2b01      	cmp	r3, #1
 80227b8:	d10f      	bne.n	80227da <UART_RxISR_16BIT+0xae>
      {
        /* Disable IDLE interrupt */
        CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 80227ba:	687b      	ldr	r3, [r7, #4]
 80227bc:	681b      	ldr	r3, [r3, #0]
 80227be:	681a      	ldr	r2, [r3, #0]
 80227c0:	687b      	ldr	r3, [r7, #4]
 80227c2:	681b      	ldr	r3, [r3, #0]
 80227c4:	f022 0210 	bic.w	r2, r2, #16
 80227c8:	601a      	str	r2, [r3, #0]
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered Rx Event callback*/
        huart->RxEventCallback(huart, huart->RxXferSize);
#else
        /*Call legacy weak Rx Event callback*/
        HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 80227ca:	687b      	ldr	r3, [r7, #4]
 80227cc:	f8b3 3058 	ldrh.w	r3, [r3, #88]	; 0x58
 80227d0:	4619      	mov	r1, r3
 80227d2:	6878      	ldr	r0, [r7, #4]
 80227d4:	f7ff fa9a 	bl	8021d0c <HAL_UARTEx_RxEventCallback>
 80227d8:	e002      	b.n	80227e0 <UART_RxISR_16BIT+0xb4>
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered Rx complete callback*/
        huart->RxCpltCallback(huart);
#else
        /*Call legacy weak Rx complete callback*/
        HAL_UART_RxCpltCallback(huart);
 80227da:	6878      	ldr	r0, [r7, #4]
 80227dc:	f7f5 fd78 	bl	80182d0 <HAL_UART_RxCpltCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
      }
      huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 80227e0:	687b      	ldr	r3, [r7, #4]
 80227e2:	2200      	movs	r2, #0
 80227e4:	661a      	str	r2, [r3, #96]	; 0x60
  else
  {
    /* Clear RXNE interrupt flag */
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
  }
}
 80227e6:	e007      	b.n	80227f8 <UART_RxISR_16BIT+0xcc>
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 80227e8:	687b      	ldr	r3, [r7, #4]
 80227ea:	681b      	ldr	r3, [r3, #0]
 80227ec:	699a      	ldr	r2, [r3, #24]
 80227ee:	687b      	ldr	r3, [r7, #4]
 80227f0:	681b      	ldr	r3, [r3, #0]
 80227f2:	f042 0208 	orr.w	r2, r2, #8
 80227f6:	619a      	str	r2, [r3, #24]
}
 80227f8:	bf00      	nop
 80227fa:	3710      	adds	r7, #16
 80227fc:	46bd      	mov	sp, r7
 80227fe:	bd80      	pop	{r7, pc}

08022800 <_ZdlPv>:
 8022800:	f001 bcb2 	b.w	8024168 <free>

08022804 <_ZdlPvj>:
 8022804:	f7ff bffc 	b.w	8022800 <_ZdlPv>

08022808 <__cxa_guard_acquire>:
 8022808:	6803      	ldr	r3, [r0, #0]
 802280a:	07db      	lsls	r3, r3, #31
 802280c:	d406      	bmi.n	802281c <__cxa_guard_acquire+0x14>
 802280e:	7843      	ldrb	r3, [r0, #1]
 8022810:	b103      	cbz	r3, 8022814 <__cxa_guard_acquire+0xc>
 8022812:	deff      	udf	#255	; 0xff
 8022814:	2301      	movs	r3, #1
 8022816:	7043      	strb	r3, [r0, #1]
 8022818:	4618      	mov	r0, r3
 802281a:	4770      	bx	lr
 802281c:	2000      	movs	r0, #0
 802281e:	4770      	bx	lr

08022820 <__cxa_guard_release>:
 8022820:	2301      	movs	r3, #1
 8022822:	6003      	str	r3, [r0, #0]
 8022824:	4770      	bx	lr

08022826 <_Znwj>:
 8022826:	2801      	cmp	r0, #1
 8022828:	bf38      	it	cc
 802282a:	2001      	movcc	r0, #1
 802282c:	b510      	push	{r4, lr}
 802282e:	4604      	mov	r4, r0
 8022830:	4620      	mov	r0, r4
 8022832:	f001 fc91 	bl	8024158 <malloc>
 8022836:	b930      	cbnz	r0, 8022846 <_Znwj+0x20>
 8022838:	f000 fc68 	bl	802310c <_ZSt15get_new_handlerv>
 802283c:	b908      	cbnz	r0, 8022842 <_Znwj+0x1c>
 802283e:	f001 fc21 	bl	8024084 <abort>
 8022842:	4780      	blx	r0
 8022844:	e7f4      	b.n	8022830 <_Znwj+0xa>
 8022846:	bd10      	pop	{r4, pc}

08022848 <_ZNSaIcEC1Ev>:
 8022848:	4770      	bx	lr

0802284a <_ZNSaIcED1Ev>:
 802284a:	4770      	bx	lr

0802284c <_ZStL25local_Rb_tree_rotate_leftPSt18_Rb_tree_node_baseRS0_>:
 802284c:	68c3      	ldr	r3, [r0, #12]
 802284e:	689a      	ldr	r2, [r3, #8]
 8022850:	60c2      	str	r2, [r0, #12]
 8022852:	b510      	push	{r4, lr}
 8022854:	b102      	cbz	r2, 8022858 <_ZStL25local_Rb_tree_rotate_leftPSt18_Rb_tree_node_baseRS0_+0xc>
 8022856:	6050      	str	r0, [r2, #4]
 8022858:	6842      	ldr	r2, [r0, #4]
 802285a:	605a      	str	r2, [r3, #4]
 802285c:	680c      	ldr	r4, [r1, #0]
 802285e:	4284      	cmp	r4, r0
 8022860:	d103      	bne.n	802286a <_ZStL25local_Rb_tree_rotate_leftPSt18_Rb_tree_node_baseRS0_+0x1e>
 8022862:	600b      	str	r3, [r1, #0]
 8022864:	6098      	str	r0, [r3, #8]
 8022866:	6043      	str	r3, [r0, #4]
 8022868:	bd10      	pop	{r4, pc}
 802286a:	6891      	ldr	r1, [r2, #8]
 802286c:	4281      	cmp	r1, r0
 802286e:	bf0c      	ite	eq
 8022870:	6093      	streq	r3, [r2, #8]
 8022872:	60d3      	strne	r3, [r2, #12]
 8022874:	e7f6      	b.n	8022864 <_ZStL25local_Rb_tree_rotate_leftPSt18_Rb_tree_node_baseRS0_+0x18>

08022876 <_ZStL26local_Rb_tree_rotate_rightPSt18_Rb_tree_node_baseRS0_>:
 8022876:	6883      	ldr	r3, [r0, #8]
 8022878:	68da      	ldr	r2, [r3, #12]
 802287a:	6082      	str	r2, [r0, #8]
 802287c:	b510      	push	{r4, lr}
 802287e:	b102      	cbz	r2, 8022882 <_ZStL26local_Rb_tree_rotate_rightPSt18_Rb_tree_node_baseRS0_+0xc>
 8022880:	6050      	str	r0, [r2, #4]
 8022882:	6842      	ldr	r2, [r0, #4]
 8022884:	605a      	str	r2, [r3, #4]
 8022886:	680c      	ldr	r4, [r1, #0]
 8022888:	4284      	cmp	r4, r0
 802288a:	d103      	bne.n	8022894 <_ZStL26local_Rb_tree_rotate_rightPSt18_Rb_tree_node_baseRS0_+0x1e>
 802288c:	600b      	str	r3, [r1, #0]
 802288e:	60d8      	str	r0, [r3, #12]
 8022890:	6043      	str	r3, [r0, #4]
 8022892:	bd10      	pop	{r4, pc}
 8022894:	68d1      	ldr	r1, [r2, #12]
 8022896:	4281      	cmp	r1, r0
 8022898:	bf0c      	ite	eq
 802289a:	60d3      	streq	r3, [r2, #12]
 802289c:	6093      	strne	r3, [r2, #8]
 802289e:	e7f6      	b.n	802288e <_ZStL26local_Rb_tree_rotate_rightPSt18_Rb_tree_node_baseRS0_+0x18>

080228a0 <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base>:
 80228a0:	7803      	ldrb	r3, [r0, #0]
 80228a2:	b933      	cbnz	r3, 80228b2 <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base+0x12>
 80228a4:	6843      	ldr	r3, [r0, #4]
 80228a6:	685b      	ldr	r3, [r3, #4]
 80228a8:	4283      	cmp	r3, r0
 80228aa:	d102      	bne.n	80228b2 <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base+0x12>
 80228ac:	68db      	ldr	r3, [r3, #12]
 80228ae:	4618      	mov	r0, r3
 80228b0:	4770      	bx	lr
 80228b2:	6882      	ldr	r2, [r0, #8]
 80228b4:	b122      	cbz	r2, 80228c0 <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base+0x20>
 80228b6:	4613      	mov	r3, r2
 80228b8:	68d2      	ldr	r2, [r2, #12]
 80228ba:	2a00      	cmp	r2, #0
 80228bc:	d1fb      	bne.n	80228b6 <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base+0x16>
 80228be:	e7f6      	b.n	80228ae <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base+0xe>
 80228c0:	6843      	ldr	r3, [r0, #4]
 80228c2:	689a      	ldr	r2, [r3, #8]
 80228c4:	4282      	cmp	r2, r0
 80228c6:	d1f2      	bne.n	80228ae <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base+0xe>
 80228c8:	4618      	mov	r0, r3
 80228ca:	685b      	ldr	r3, [r3, #4]
 80228cc:	e7f9      	b.n	80228c2 <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base+0x22>

080228ce <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>:
 80228ce:	68c3      	ldr	r3, [r0, #12]
 80228d0:	b123      	cbz	r3, 80228dc <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base+0xe>
 80228d2:	4618      	mov	r0, r3
 80228d4:	689b      	ldr	r3, [r3, #8]
 80228d6:	2b00      	cmp	r3, #0
 80228d8:	d1fb      	bne.n	80228d2 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base+0x4>
 80228da:	4770      	bx	lr
 80228dc:	6843      	ldr	r3, [r0, #4]
 80228de:	68da      	ldr	r2, [r3, #12]
 80228e0:	4282      	cmp	r2, r0
 80228e2:	d102      	bne.n	80228ea <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base+0x1c>
 80228e4:	4618      	mov	r0, r3
 80228e6:	685b      	ldr	r3, [r3, #4]
 80228e8:	e7f9      	b.n	80228de <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base+0x10>
 80228ea:	68c2      	ldr	r2, [r0, #12]
 80228ec:	4293      	cmp	r3, r2
 80228ee:	bf18      	it	ne
 80228f0:	4618      	movne	r0, r3
 80228f2:	4770      	bx	lr

080228f4 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>:
 80228f4:	f7ff bfd4 	b.w	80228a0 <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base>

080228f8 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>:
 80228f8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80228fc:	461e      	mov	r6, r3
 80228fe:	f103 0804 	add.w	r8, r3, #4
 8022902:	2300      	movs	r3, #0
 8022904:	e9c1 3302 	strd	r3, r3, [r1, #8]
 8022908:	460c      	mov	r4, r1
 802290a:	604a      	str	r2, [r1, #4]
 802290c:	700b      	strb	r3, [r1, #0]
 802290e:	b300      	cbz	r0, 8022952 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x5a>
 8022910:	4296      	cmp	r6, r2
 8022912:	6091      	str	r1, [r2, #8]
 8022914:	d118      	bne.n	8022948 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x50>
 8022916:	6071      	str	r1, [r6, #4]
 8022918:	60f4      	str	r4, [r6, #12]
 802291a:	2701      	movs	r7, #1
 802291c:	f04f 0900 	mov.w	r9, #0
 8022920:	6873      	ldr	r3, [r6, #4]
 8022922:	42a3      	cmp	r3, r4
 8022924:	d03f      	beq.n	80229a6 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0xae>
 8022926:	6860      	ldr	r0, [r4, #4]
 8022928:	7802      	ldrb	r2, [r0, #0]
 802292a:	2a00      	cmp	r2, #0
 802292c:	d13c      	bne.n	80229a8 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0xb0>
 802292e:	6845      	ldr	r5, [r0, #4]
 8022930:	68ab      	ldr	r3, [r5, #8]
 8022932:	4298      	cmp	r0, r3
 8022934:	d123      	bne.n	802297e <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x86>
 8022936:	68eb      	ldr	r3, [r5, #12]
 8022938:	b183      	cbz	r3, 802295c <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x64>
 802293a:	781a      	ldrb	r2, [r3, #0]
 802293c:	b972      	cbnz	r2, 802295c <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x64>
 802293e:	7007      	strb	r7, [r0, #0]
 8022940:	701f      	strb	r7, [r3, #0]
 8022942:	702a      	strb	r2, [r5, #0]
 8022944:	462c      	mov	r4, r5
 8022946:	e7eb      	b.n	8022920 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x28>
 8022948:	68b3      	ldr	r3, [r6, #8]
 802294a:	4293      	cmp	r3, r2
 802294c:	d1e5      	bne.n	802291a <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x22>
 802294e:	60b1      	str	r1, [r6, #8]
 8022950:	e7e3      	b.n	802291a <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x22>
 8022952:	60d1      	str	r1, [r2, #12]
 8022954:	68f3      	ldr	r3, [r6, #12]
 8022956:	4293      	cmp	r3, r2
 8022958:	d1df      	bne.n	802291a <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x22>
 802295a:	e7dd      	b.n	8022918 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x20>
 802295c:	68c3      	ldr	r3, [r0, #12]
 802295e:	42a3      	cmp	r3, r4
 8022960:	d103      	bne.n	802296a <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x72>
 8022962:	4641      	mov	r1, r8
 8022964:	f7ff ff72 	bl	802284c <_ZStL25local_Rb_tree_rotate_leftPSt18_Rb_tree_node_baseRS0_>
 8022968:	4604      	mov	r4, r0
 802296a:	6863      	ldr	r3, [r4, #4]
 802296c:	4641      	mov	r1, r8
 802296e:	701f      	strb	r7, [r3, #0]
 8022970:	4628      	mov	r0, r5
 8022972:	f885 9000 	strb.w	r9, [r5]
 8022976:	f7ff ff7e 	bl	8022876 <_ZStL26local_Rb_tree_rotate_rightPSt18_Rb_tree_node_baseRS0_>
 802297a:	4625      	mov	r5, r4
 802297c:	e7e2      	b.n	8022944 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x4c>
 802297e:	b113      	cbz	r3, 8022986 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x8e>
 8022980:	781a      	ldrb	r2, [r3, #0]
 8022982:	2a00      	cmp	r2, #0
 8022984:	d0db      	beq.n	802293e <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x46>
 8022986:	6883      	ldr	r3, [r0, #8]
 8022988:	42a3      	cmp	r3, r4
 802298a:	d103      	bne.n	8022994 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x9c>
 802298c:	4641      	mov	r1, r8
 802298e:	f7ff ff72 	bl	8022876 <_ZStL26local_Rb_tree_rotate_rightPSt18_Rb_tree_node_baseRS0_>
 8022992:	4604      	mov	r4, r0
 8022994:	6863      	ldr	r3, [r4, #4]
 8022996:	4641      	mov	r1, r8
 8022998:	701f      	strb	r7, [r3, #0]
 802299a:	4628      	mov	r0, r5
 802299c:	f885 9000 	strb.w	r9, [r5]
 80229a0:	f7ff ff54 	bl	802284c <_ZStL25local_Rb_tree_rotate_leftPSt18_Rb_tree_node_baseRS0_>
 80229a4:	e7e9      	b.n	802297a <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x82>
 80229a6:	4623      	mov	r3, r4
 80229a8:	2201      	movs	r2, #1
 80229aa:	701a      	strb	r2, [r3, #0]
 80229ac:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

080229b0 <_ZSt17__throw_bad_allocv>:
 80229b0:	b508      	push	{r3, lr}
 80229b2:	f001 fb67 	bl	8024084 <abort>

080229b6 <_ZSt19__throw_logic_errorPKc>:
 80229b6:	b508      	push	{r3, lr}
 80229b8:	f001 fb64 	bl	8024084 <abort>

080229bc <_ZSt24__throw_invalid_argumentPKc>:
 80229bc:	b508      	push	{r3, lr}
 80229be:	f001 fb61 	bl	8024084 <abort>

080229c2 <_ZSt20__throw_length_errorPKc>:
 80229c2:	b508      	push	{r3, lr}
 80229c4:	f001 fb5e 	bl	8024084 <abort>

080229c8 <_ZSt20__throw_out_of_rangePKc>:
 80229c8:	b508      	push	{r3, lr}
 80229ca:	f001 fb5b 	bl	8024084 <abort>

080229ce <_ZSt24__throw_out_of_range_fmtPKcz>:
 80229ce:	b40f      	push	{r0, r1, r2, r3}
 80229d0:	b580      	push	{r7, lr}
 80229d2:	b084      	sub	sp, #16
 80229d4:	af00      	add	r7, sp, #0
 80229d6:	f107 0418 	add.w	r4, r7, #24
 80229da:	f854 2b04 	ldr.w	r2, [r4], #4
 80229de:	607a      	str	r2, [r7, #4]
 80229e0:	4610      	mov	r0, r2
 80229e2:	f7dd fc65 	bl	80002b0 <strlen>
 80229e6:	f200 2307 	addw	r3, r0, #519	; 0x207
 80229ea:	f023 0307 	bic.w	r3, r3, #7
 80229ee:	ebad 0d03 	sub.w	sp, sp, r3
 80229f2:	f500 7100 	add.w	r1, r0, #512	; 0x200
 80229f6:	687a      	ldr	r2, [r7, #4]
 80229f8:	60fc      	str	r4, [r7, #12]
 80229fa:	4623      	mov	r3, r4
 80229fc:	4668      	mov	r0, sp
 80229fe:	f000 f855 	bl	8022aac <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list>
 8022a02:	f001 fb3f 	bl	8024084 <abort>
	...

08022a08 <_ZN9__gnu_cxx26__throw_insufficient_spaceEPKcS1_>:
 8022a08:	b580      	push	{r7, lr}
 8022a0a:	b09c      	sub	sp, #112	; 0x70
 8022a0c:	4606      	mov	r6, r0
 8022a0e:	af00      	add	r7, sp, #0
 8022a10:	460c      	mov	r4, r1
 8022a12:	1ba4      	subs	r4, r4, r6
 8022a14:	490e      	ldr	r1, [pc, #56]	; (8022a50 <_ZN9__gnu_cxx26__throw_insufficient_spaceEPKcS1_+0x48>)
 8022a16:	2269      	movs	r2, #105	; 0x69
 8022a18:	1d38      	adds	r0, r7, #4
 8022a1a:	f001 fbbb 	bl	8024194 <memcpy>
 8022a1e:	f104 0370 	add.w	r3, r4, #112	; 0x70
 8022a22:	f023 0307 	bic.w	r3, r3, #7
 8022a26:	ebad 0d03 	sub.w	sp, sp, r3
 8022a2a:	466d      	mov	r5, sp
 8022a2c:	2268      	movs	r2, #104	; 0x68
 8022a2e:	1d39      	adds	r1, r7, #4
 8022a30:	4628      	mov	r0, r5
 8022a32:	f001 fbaf 	bl	8024194 <memcpy>
 8022a36:	4622      	mov	r2, r4
 8022a38:	4631      	mov	r1, r6
 8022a3a:	f105 0068 	add.w	r0, r5, #104	; 0x68
 8022a3e:	442c      	add	r4, r5
 8022a40:	f001 fba8 	bl	8024194 <memcpy>
 8022a44:	2300      	movs	r3, #0
 8022a46:	f884 3068 	strb.w	r3, [r4, #104]	; 0x68
 8022a4a:	4628      	mov	r0, r5
 8022a4c:	f7ff ffb3 	bl	80229b6 <_ZSt19__throw_logic_errorPKc>
 8022a50:	08028298 	.word	0x08028298

08022a54 <_ZN9__gnu_cxx15__concat_size_tEPcjj>:
 8022a54:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8022a58:	af00      	add	r7, sp, #0
 8022a5a:	b084      	sub	sp, #16
 8022a5c:	466d      	mov	r5, sp
 8022a5e:	f105 040c 	add.w	r4, r5, #12
 8022a62:	f8df 8044 	ldr.w	r8, [pc, #68]	; 8022aa8 <_ZN9__gnu_cxx15__concat_size_tEPcjj+0x54>
 8022a66:	4623      	mov	r3, r4
 8022a68:	f04f 0c0a 	mov.w	ip, #10
 8022a6c:	fbb2 f6fc 	udiv	r6, r2, ip
 8022a70:	fb0c 2e16 	mls	lr, ip, r6, r2
 8022a74:	f818 e00e 	ldrb.w	lr, [r8, lr]
 8022a78:	f803 ed01 	strb.w	lr, [r3, #-1]!
 8022a7c:	4696      	mov	lr, r2
 8022a7e:	f1be 0f09 	cmp.w	lr, #9
 8022a82:	4632      	mov	r2, r6
 8022a84:	d8f2      	bhi.n	8022a6c <_ZN9__gnu_cxx15__concat_size_tEPcjj+0x18>
 8022a86:	1ae4      	subs	r4, r4, r3
 8022a88:	428c      	cmp	r4, r1
 8022a8a:	d809      	bhi.n	8022aa0 <_ZN9__gnu_cxx15__concat_size_tEPcjj+0x4c>
 8022a8c:	f1c4 010c 	rsb	r1, r4, #12
 8022a90:	4622      	mov	r2, r4
 8022a92:	4429      	add	r1, r5
 8022a94:	f001 fb7e 	bl	8024194 <memcpy>
 8022a98:	4620      	mov	r0, r4
 8022a9a:	46bd      	mov	sp, r7
 8022a9c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8022aa0:	f04f 34ff 	mov.w	r4, #4294967295
 8022aa4:	e7f8      	b.n	8022a98 <_ZN9__gnu_cxx15__concat_size_tEPcjj+0x44>
 8022aa6:	bf00      	nop
 8022aa8:	08028301 	.word	0x08028301

08022aac <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list>:
 8022aac:	3901      	subs	r1, #1
 8022aae:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8022ab2:	4607      	mov	r7, r0
 8022ab4:	4615      	mov	r5, r2
 8022ab6:	eb00 0801 	add.w	r8, r0, r1
 8022aba:	4604      	mov	r4, r0
 8022abc:	782a      	ldrb	r2, [r5, #0]
 8022abe:	b362      	cbz	r2, 8022b1a <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x6e>
 8022ac0:	4544      	cmp	r4, r8
 8022ac2:	d22e      	bcs.n	8022b22 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x76>
 8022ac4:	2a25      	cmp	r2, #37	; 0x25
 8022ac6:	d107      	bne.n	8022ad8 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x2c>
 8022ac8:	786a      	ldrb	r2, [r5, #1]
 8022aca:	2a73      	cmp	r2, #115	; 0x73
 8022acc:	d009      	beq.n	8022ae2 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x36>
 8022ace:	2a7a      	cmp	r2, #122	; 0x7a
 8022ad0:	d012      	beq.n	8022af8 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x4c>
 8022ad2:	2a25      	cmp	r2, #37	; 0x25
 8022ad4:	d100      	bne.n	8022ad8 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x2c>
 8022ad6:	3501      	adds	r5, #1
 8022ad8:	f815 2b01 	ldrb.w	r2, [r5], #1
 8022adc:	f804 2b01 	strb.w	r2, [r4], #1
 8022ae0:	e7ec      	b.n	8022abc <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x10>
 8022ae2:	f853 2b04 	ldr.w	r2, [r3], #4
 8022ae6:	3a01      	subs	r2, #1
 8022ae8:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 8022aec:	b1e9      	cbz	r1, 8022b2a <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x7e>
 8022aee:	4544      	cmp	r4, r8
 8022af0:	d017      	beq.n	8022b22 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x76>
 8022af2:	f804 1b01 	strb.w	r1, [r4], #1
 8022af6:	e7f7      	b.n	8022ae8 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x3c>
 8022af8:	78aa      	ldrb	r2, [r5, #2]
 8022afa:	2a75      	cmp	r2, #117	; 0x75
 8022afc:	d1ec      	bne.n	8022ad8 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x2c>
 8022afe:	461e      	mov	r6, r3
 8022b00:	eba8 0104 	sub.w	r1, r8, r4
 8022b04:	f856 2b04 	ldr.w	r2, [r6], #4
 8022b08:	4620      	mov	r0, r4
 8022b0a:	f7ff ffa3 	bl	8022a54 <_ZN9__gnu_cxx15__concat_size_tEPcjj>
 8022b0e:	2800      	cmp	r0, #0
 8022b10:	dd07      	ble.n	8022b22 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x76>
 8022b12:	4404      	add	r4, r0
 8022b14:	3503      	adds	r5, #3
 8022b16:	4633      	mov	r3, r6
 8022b18:	e7d0      	b.n	8022abc <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x10>
 8022b1a:	7022      	strb	r2, [r4, #0]
 8022b1c:	1be0      	subs	r0, r4, r7
 8022b1e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8022b22:	4621      	mov	r1, r4
 8022b24:	4638      	mov	r0, r7
 8022b26:	f7ff ff6f 	bl	8022a08 <_ZN9__gnu_cxx26__throw_insufficient_spaceEPKcS1_>
 8022b2a:	3502      	adds	r5, #2
 8022b2c:	e7c6      	b.n	8022abc <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x10>

08022b2e <_ZNSt11char_traitsIcE7compareEPKcS2_j>:
 8022b2e:	b10a      	cbz	r2, 8022b34 <_ZNSt11char_traitsIcE7compareEPKcS2_j+0x6>
 8022b30:	f001 bb22 	b.w	8024178 <memcmp>
 8022b34:	4610      	mov	r0, r2
 8022b36:	4770      	bx	lr

08022b38 <_ZNSt11char_traitsIcE4copyEPcPKcj>:
 8022b38:	b10a      	cbz	r2, 8022b3e <_ZNSt11char_traitsIcE4copyEPcPKcj+0x6>
 8022b3a:	f001 bb2b 	b.w	8024194 <memcpy>
 8022b3e:	4770      	bx	lr

08022b40 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc>:
 8022b40:	6001      	str	r1, [r0, #0]
 8022b42:	4770      	bx	lr

08022b44 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>:
 8022b44:	6800      	ldr	r0, [r0, #0]
 8022b46:	4770      	bx	lr

08022b48 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv>:
 8022b48:	3008      	adds	r0, #8
 8022b4a:	4770      	bx	lr

08022b4c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEj>:
 8022b4c:	6081      	str	r1, [r0, #8]
 8022b4e:	4770      	bx	lr

08022b50 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEj>:
 8022b50:	6803      	ldr	r3, [r0, #0]
 8022b52:	6041      	str	r1, [r0, #4]
 8022b54:	2200      	movs	r2, #0
 8022b56:	545a      	strb	r2, [r3, r1]
 8022b58:	4770      	bx	lr
	...

08022b5c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>:
 8022b5c:	b508      	push	{r3, lr}
 8022b5e:	680b      	ldr	r3, [r1, #0]
 8022b60:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8022b64:	d302      	bcc.n	8022b6c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj+0x10>
 8022b66:	480d      	ldr	r0, [pc, #52]	; (8022b9c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj+0x40>)
 8022b68:	f7ff ff2b 	bl	80229c2 <_ZSt20__throw_length_errorPKc>
 8022b6c:	4293      	cmp	r3, r2
 8022b6e:	d90b      	bls.n	8022b88 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj+0x2c>
 8022b70:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 8022b74:	ea4f 0042 	mov.w	r0, r2, lsl #1
 8022b78:	d206      	bcs.n	8022b88 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj+0x2c>
 8022b7a:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8022b7e:	bf2a      	itet	cs
 8022b80:	f06f 4340 	mvncs.w	r3, #3221225472	; 0xc0000000
 8022b84:	6008      	strcc	r0, [r1, #0]
 8022b86:	600b      	strcs	r3, [r1, #0]
 8022b88:	6808      	ldr	r0, [r1, #0]
 8022b8a:	3001      	adds	r0, #1
 8022b8c:	d501      	bpl.n	8022b92 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj+0x36>
 8022b8e:	f7ff ff0f 	bl	80229b0 <_ZSt17__throw_bad_allocv>
 8022b92:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8022b96:	f7ff be46 	b.w	8022826 <_Znwj>
 8022b9a:	bf00      	nop
 8022b9c:	0802830c 	.word	0x0802830c

08022ba0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>:
 8022ba0:	f850 3b08 	ldr.w	r3, [r0], #8
 8022ba4:	4283      	cmp	r3, r0
 8022ba6:	d002      	beq.n	8022bae <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv+0xe>
 8022ba8:	4618      	mov	r0, r3
 8022baa:	f7ff be29 	b.w	8022800 <_ZdlPv>
 8022bae:	4770      	bx	lr

08022bb0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_checkEjPKc>:
 8022bb0:	b508      	push	{r3, lr}
 8022bb2:	4603      	mov	r3, r0
 8022bb4:	4608      	mov	r0, r1
 8022bb6:	685b      	ldr	r3, [r3, #4]
 8022bb8:	4298      	cmp	r0, r3
 8022bba:	4611      	mov	r1, r2
 8022bbc:	d903      	bls.n	8022bc6 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_checkEjPKc+0x16>
 8022bbe:	4602      	mov	r2, r0
 8022bc0:	4801      	ldr	r0, [pc, #4]	; (8022bc8 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_checkEjPKc+0x18>)
 8022bc2:	f7ff ff04 	bl	80229ce <_ZSt24__throw_out_of_range_fmtPKcz>
 8022bc6:	bd08      	pop	{r3, pc}
 8022bc8:	08028324 	.word	0x08028324

08022bcc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEjjPKc>:
 8022bcc:	6840      	ldr	r0, [r0, #4]
 8022bce:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 8022bd2:	3901      	subs	r1, #1
 8022bd4:	1a09      	subs	r1, r1, r0
 8022bd6:	4291      	cmp	r1, r2
 8022bd8:	b508      	push	{r3, lr}
 8022bda:	d202      	bcs.n	8022be2 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEjjPKc+0x16>
 8022bdc:	4618      	mov	r0, r3
 8022bde:	f7ff fef0 	bl	80229c2 <_ZSt20__throw_length_errorPKc>
 8022be2:	bd08      	pop	{r3, pc}

08022be4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_disjunctEPKc>:
 8022be4:	6803      	ldr	r3, [r0, #0]
 8022be6:	428b      	cmp	r3, r1
 8022be8:	d806      	bhi.n	8022bf8 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_disjunctEPKc+0x14>
 8022bea:	6840      	ldr	r0, [r0, #4]
 8022bec:	4418      	add	r0, r3
 8022bee:	4281      	cmp	r1, r0
 8022bf0:	bf94      	ite	ls
 8022bf2:	2000      	movls	r0, #0
 8022bf4:	2001      	movhi	r0, #1
 8022bf6:	4770      	bx	lr
 8022bf8:	2001      	movs	r0, #1
 8022bfa:	4770      	bx	lr

08022bfc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>:
 8022bfc:	2a01      	cmp	r2, #1
 8022bfe:	b510      	push	{r4, lr}
 8022c00:	d102      	bne.n	8022c08 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj+0xc>
 8022c02:	780a      	ldrb	r2, [r1, #0]
 8022c04:	7002      	strb	r2, [r0, #0]
 8022c06:	bd10      	pop	{r4, pc}
 8022c08:	f7ff ff96 	bl	8022b38 <_ZNSt11char_traitsIcE4copyEPcPKcj>
 8022c0c:	e7fb      	b.n	8022c06 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj+0xa>

08022c0e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj>:
 8022c0e:	2a01      	cmp	r2, #1
 8022c10:	b430      	push	{r4, r5}
 8022c12:	d103      	bne.n	8022c1c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj+0xe>
 8022c14:	780b      	ldrb	r3, [r1, #0]
 8022c16:	7003      	strb	r3, [r0, #0]
 8022c18:	bc30      	pop	{r4, r5}
 8022c1a:	4770      	bx	lr
 8022c1c:	2a00      	cmp	r2, #0
 8022c1e:	d0fb      	beq.n	8022c18 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj+0xa>
 8022c20:	bc30      	pop	{r4, r5}
 8022c22:	f001 bac5 	b.w	80241b0 <memmove>

08022c26 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcS5_S5_>:
 8022c26:	b508      	push	{r3, lr}
 8022c28:	1a52      	subs	r2, r2, r1
 8022c2a:	f7ff ffe7 	bl	8022bfc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 8022c2e:	bd08      	pop	{r3, pc}

08022c30 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_>:
 8022c30:	b508      	push	{r3, lr}
 8022c32:	1a52      	subs	r2, r2, r1
 8022c34:	f7ff ffe2 	bl	8022bfc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 8022c38:	bd08      	pop	{r3, pc}

08022c3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>:
 8022c3a:	4288      	cmp	r0, r1
 8022c3c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8022c3e:	4604      	mov	r4, r0
 8022c40:	460e      	mov	r6, r1
 8022c42:	d01e      	beq.n	8022c82 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_+0x48>
 8022c44:	4603      	mov	r3, r0
 8022c46:	684d      	ldr	r5, [r1, #4]
 8022c48:	f853 2b08 	ldr.w	r2, [r3], #8
 8022c4c:	429a      	cmp	r2, r3
 8022c4e:	bf14      	ite	ne
 8022c50:	6882      	ldrne	r2, [r0, #8]
 8022c52:	220f      	moveq	r2, #15
 8022c54:	42aa      	cmp	r2, r5
 8022c56:	d20a      	bcs.n	8022c6e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_+0x34>
 8022c58:	a901      	add	r1, sp, #4
 8022c5a:	9501      	str	r5, [sp, #4]
 8022c5c:	f7ff ff7e 	bl	8022b5c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>
 8022c60:	4607      	mov	r7, r0
 8022c62:	4620      	mov	r0, r4
 8022c64:	f7ff ff9c 	bl	8022ba0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
 8022c68:	9b01      	ldr	r3, [sp, #4]
 8022c6a:	6027      	str	r7, [r4, #0]
 8022c6c:	60a3      	str	r3, [r4, #8]
 8022c6e:	b125      	cbz	r5, 8022c7a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_+0x40>
 8022c70:	6831      	ldr	r1, [r6, #0]
 8022c72:	6820      	ldr	r0, [r4, #0]
 8022c74:	462a      	mov	r2, r5
 8022c76:	f7ff ffc1 	bl	8022bfc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 8022c7a:	6823      	ldr	r3, [r4, #0]
 8022c7c:	6065      	str	r5, [r4, #4]
 8022c7e:	2200      	movs	r2, #0
 8022c80:	555a      	strb	r2, [r3, r5]
 8022c82:	b003      	add	sp, #12
 8022c84:	bdf0      	pop	{r4, r5, r6, r7, pc}

08022c86 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj>:
 8022c86:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8022c8a:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8022c8c:	461f      	mov	r7, r3
 8022c8e:	6843      	ldr	r3, [r0, #4]
 8022c90:	eb01 0802 	add.w	r8, r1, r2
 8022c94:	1ab2      	subs	r2, r6, r2
 8022c96:	441a      	add	r2, r3
 8022c98:	eba3 0908 	sub.w	r9, r3, r8
 8022c9c:	4603      	mov	r3, r0
 8022c9e:	9201      	str	r2, [sp, #4]
 8022ca0:	f853 2b08 	ldr.w	r2, [r3], #8
 8022ca4:	429a      	cmp	r2, r3
 8022ca6:	bf18      	it	ne
 8022ca8:	6882      	ldrne	r2, [r0, #8]
 8022caa:	460d      	mov	r5, r1
 8022cac:	bf08      	it	eq
 8022cae:	220f      	moveq	r2, #15
 8022cb0:	a901      	add	r1, sp, #4
 8022cb2:	4604      	mov	r4, r0
 8022cb4:	f7ff ff52 	bl	8022b5c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>
 8022cb8:	4682      	mov	sl, r0
 8022cba:	b11d      	cbz	r5, 8022cc4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj+0x3e>
 8022cbc:	6821      	ldr	r1, [r4, #0]
 8022cbe:	462a      	mov	r2, r5
 8022cc0:	f7ff ff9c 	bl	8022bfc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 8022cc4:	b137      	cbz	r7, 8022cd4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj+0x4e>
 8022cc6:	b12e      	cbz	r6, 8022cd4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj+0x4e>
 8022cc8:	4632      	mov	r2, r6
 8022cca:	4639      	mov	r1, r7
 8022ccc:	eb0a 0005 	add.w	r0, sl, r5
 8022cd0:	f7ff ff94 	bl	8022bfc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 8022cd4:	f1b9 0f00 	cmp.w	r9, #0
 8022cd8:	d007      	beq.n	8022cea <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj+0x64>
 8022cda:	6821      	ldr	r1, [r4, #0]
 8022cdc:	4435      	add	r5, r6
 8022cde:	464a      	mov	r2, r9
 8022ce0:	4441      	add	r1, r8
 8022ce2:	eb0a 0005 	add.w	r0, sl, r5
 8022ce6:	f7ff ff89 	bl	8022bfc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 8022cea:	4620      	mov	r0, r4
 8022cec:	f7ff ff58 	bl	8022ba0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
 8022cf0:	9b01      	ldr	r3, [sp, #4]
 8022cf2:	f8c4 a000 	str.w	sl, [r4]
 8022cf6:	60a3      	str	r3, [r4, #8]
 8022cf8:	b002      	add	sp, #8
 8022cfa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08022cfe <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEjj>:
 8022cfe:	b538      	push	{r3, r4, r5, lr}
 8022d00:	4604      	mov	r4, r0
 8022d02:	4615      	mov	r5, r2
 8022d04:	4608      	mov	r0, r1
 8022d06:	4411      	add	r1, r2
 8022d08:	6862      	ldr	r2, [r4, #4]
 8022d0a:	1a52      	subs	r2, r2, r1
 8022d0c:	d005      	beq.n	8022d1a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEjj+0x1c>
 8022d0e:	b125      	cbz	r5, 8022d1a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEjj+0x1c>
 8022d10:	6823      	ldr	r3, [r4, #0]
 8022d12:	4419      	add	r1, r3
 8022d14:	4418      	add	r0, r3
 8022d16:	f7ff ff7a 	bl	8022c0e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj>
 8022d1a:	6862      	ldr	r2, [r4, #4]
 8022d1c:	6823      	ldr	r3, [r4, #0]
 8022d1e:	1b55      	subs	r5, r2, r5
 8022d20:	2200      	movs	r2, #0
 8022d22:	6065      	str	r5, [r4, #4]
 8022d24:	555a      	strb	r2, [r3, r5]
 8022d26:	bd38      	pop	{r3, r4, r5, pc}

08022d28 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>:
 8022d28:	f100 0208 	add.w	r2, r0, #8
 8022d2c:	6002      	str	r2, [r0, #0]
 8022d2e:	2200      	movs	r2, #0
 8022d30:	6042      	str	r2, [r0, #4]
 8022d32:	7202      	strb	r2, [r0, #8]
 8022d34:	4770      	bx	lr

08022d36 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_>:
 8022d36:	b570      	push	{r4, r5, r6, lr}
 8022d38:	4604      	mov	r4, r0
 8022d3a:	460e      	mov	r6, r1
 8022d3c:	3008      	adds	r0, #8
 8022d3e:	6020      	str	r0, [r4, #0]
 8022d40:	f856 3b08 	ldr.w	r3, [r6], #8
 8022d44:	429e      	cmp	r6, r3
 8022d46:	460d      	mov	r5, r1
 8022d48:	d10b      	bne.n	8022d62 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_+0x2c>
 8022d4a:	2210      	movs	r2, #16
 8022d4c:	4631      	mov	r1, r6
 8022d4e:	f7ff fef3 	bl	8022b38 <_ZNSt11char_traitsIcE4copyEPcPKcj>
 8022d52:	686b      	ldr	r3, [r5, #4]
 8022d54:	6063      	str	r3, [r4, #4]
 8022d56:	2300      	movs	r3, #0
 8022d58:	602e      	str	r6, [r5, #0]
 8022d5a:	606b      	str	r3, [r5, #4]
 8022d5c:	722b      	strb	r3, [r5, #8]
 8022d5e:	4620      	mov	r0, r4
 8022d60:	bd70      	pop	{r4, r5, r6, pc}
 8022d62:	6023      	str	r3, [r4, #0]
 8022d64:	688b      	ldr	r3, [r1, #8]
 8022d66:	60a3      	str	r3, [r4, #8]
 8022d68:	e7f3      	b.n	8022d52 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_+0x1c>

08022d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>:
 8022d6a:	b510      	push	{r4, lr}
 8022d6c:	4604      	mov	r4, r0
 8022d6e:	f7ff ff17 	bl	8022ba0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
 8022d72:	4620      	mov	r0, r4
 8022d74:	bd10      	pop	{r4, pc}

08022d76 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_>:
 8022d76:	b510      	push	{r4, lr}
 8022d78:	4604      	mov	r4, r0
 8022d7a:	f7ff ff5e 	bl	8022c3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
 8022d7e:	4620      	mov	r0, r4
 8022d80:	bd10      	pop	{r4, pc}

08022d82 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>:
 8022d82:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8022d84:	460d      	mov	r5, r1
 8022d86:	f851 3b08 	ldr.w	r3, [r1], #8
 8022d8a:	686a      	ldr	r2, [r5, #4]
 8022d8c:	4299      	cmp	r1, r3
 8022d8e:	4604      	mov	r4, r0
 8022d90:	6800      	ldr	r0, [r0, #0]
 8022d92:	d10d      	bne.n	8022db0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x2e>
 8022d94:	b10a      	cbz	r2, 8022d9a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x18>
 8022d96:	f7ff ff31 	bl	8022bfc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 8022d9a:	686b      	ldr	r3, [r5, #4]
 8022d9c:	6822      	ldr	r2, [r4, #0]
 8022d9e:	6063      	str	r3, [r4, #4]
 8022da0:	2100      	movs	r1, #0
 8022da2:	54d1      	strb	r1, [r2, r3]
 8022da4:	682a      	ldr	r2, [r5, #0]
 8022da6:	2300      	movs	r3, #0
 8022da8:	606b      	str	r3, [r5, #4]
 8022daa:	7013      	strb	r3, [r2, #0]
 8022dac:	4620      	mov	r0, r4
 8022dae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8022db0:	e9c4 3200 	strd	r3, r2, [r4]
 8022db4:	f104 0708 	add.w	r7, r4, #8
 8022db8:	42b8      	cmp	r0, r7
 8022dba:	68ab      	ldr	r3, [r5, #8]
 8022dbc:	bf18      	it	ne
 8022dbe:	68a6      	ldrne	r6, [r4, #8]
 8022dc0:	60a3      	str	r3, [r4, #8]
 8022dc2:	bf08      	it	eq
 8022dc4:	2000      	moveq	r0, #0
 8022dc6:	b110      	cbz	r0, 8022dce <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x4c>
 8022dc8:	6028      	str	r0, [r5, #0]
 8022dca:	60ae      	str	r6, [r5, #8]
 8022dcc:	e7ea      	b.n	8022da4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x22>
 8022dce:	6029      	str	r1, [r5, #0]
 8022dd0:	e7e8      	b.n	8022da4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x22>

08022dd2 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>:
 8022dd2:	6840      	ldr	r0, [r0, #4]
 8022dd4:	4770      	bx	lr

08022dd6 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>:
 8022dd6:	6840      	ldr	r0, [r0, #4]
 8022dd8:	4770      	bx	lr

08022dda <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv>:
 8022dda:	4603      	mov	r3, r0
 8022ddc:	f853 2b08 	ldr.w	r2, [r3], #8
 8022de0:	429a      	cmp	r2, r3
 8022de2:	bf14      	ite	ne
 8022de4:	6880      	ldrne	r0, [r0, #8]
 8022de6:	200f      	moveq	r0, #15
 8022de8:	4770      	bx	lr

08022dea <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj>:
 8022dea:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8022dec:	4605      	mov	r5, r0
 8022dee:	6843      	ldr	r3, [r0, #4]
 8022df0:	4299      	cmp	r1, r3
 8022df2:	bf2c      	ite	cs
 8022df4:	9101      	strcs	r1, [sp, #4]
 8022df6:	9301      	strcc	r3, [sp, #4]
 8022df8:	f855 1b08 	ldr.w	r1, [r5], #8
 8022dfc:	428d      	cmp	r5, r1
 8022dfe:	bf18      	it	ne
 8022e00:	6882      	ldrne	r2, [r0, #8]
 8022e02:	4604      	mov	r4, r0
 8022e04:	9801      	ldr	r0, [sp, #4]
 8022e06:	bf08      	it	eq
 8022e08:	220f      	moveq	r2, #15
 8022e0a:	4290      	cmp	r0, r2
 8022e0c:	d012      	beq.n	8022e34 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0x4a>
 8022e0e:	d801      	bhi.n	8022e14 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0x2a>
 8022e10:	280f      	cmp	r0, #15
 8022e12:	d911      	bls.n	8022e38 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0x4e>
 8022e14:	a901      	add	r1, sp, #4
 8022e16:	4620      	mov	r0, r4
 8022e18:	f7ff fea0 	bl	8022b5c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>
 8022e1c:	6862      	ldr	r2, [r4, #4]
 8022e1e:	6821      	ldr	r1, [r4, #0]
 8022e20:	3201      	adds	r2, #1
 8022e22:	4605      	mov	r5, r0
 8022e24:	f7ff feea 	bl	8022bfc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 8022e28:	4620      	mov	r0, r4
 8022e2a:	f7ff feb9 	bl	8022ba0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
 8022e2e:	9b01      	ldr	r3, [sp, #4]
 8022e30:	6025      	str	r5, [r4, #0]
 8022e32:	60a3      	str	r3, [r4, #8]
 8022e34:	b003      	add	sp, #12
 8022e36:	bd30      	pop	{r4, r5, pc}
 8022e38:	428d      	cmp	r5, r1
 8022e3a:	d0fb      	beq.n	8022e34 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0x4a>
 8022e3c:	1c5a      	adds	r2, r3, #1
 8022e3e:	4628      	mov	r0, r5
 8022e40:	f7ff fedc 	bl	8022bfc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 8022e44:	6820      	ldr	r0, [r4, #0]
 8022e46:	f7ff fcdb 	bl	8022800 <_ZdlPv>
 8022e4a:	6025      	str	r5, [r4, #0]
 8022e4c:	e7f2      	b.n	8022e34 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0x4a>

08022e4e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4backEv>:
 8022e4e:	6843      	ldr	r3, [r0, #4]
 8022e50:	6800      	ldr	r0, [r0, #0]
 8022e52:	3b01      	subs	r3, #1
 8022e54:	4418      	add	r0, r3
 8022e56:	4770      	bx	lr

08022e58 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc>:
 8022e58:	4603      	mov	r3, r0
 8022e5a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8022e5c:	f853 2b08 	ldr.w	r2, [r3], #8
 8022e60:	6846      	ldr	r6, [r0, #4]
 8022e62:	429a      	cmp	r2, r3
 8022e64:	bf18      	it	ne
 8022e66:	6883      	ldrne	r3, [r0, #8]
 8022e68:	f106 0501 	add.w	r5, r6, #1
 8022e6c:	bf08      	it	eq
 8022e6e:	230f      	moveq	r3, #15
 8022e70:	429d      	cmp	r5, r3
 8022e72:	4604      	mov	r4, r0
 8022e74:	460f      	mov	r7, r1
 8022e76:	d906      	bls.n	8022e86 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc+0x2e>
 8022e78:	2301      	movs	r3, #1
 8022e7a:	9300      	str	r3, [sp, #0]
 8022e7c:	2300      	movs	r3, #0
 8022e7e:	461a      	mov	r2, r3
 8022e80:	4631      	mov	r1, r6
 8022e82:	f7ff ff00 	bl	8022c86 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj>
 8022e86:	6823      	ldr	r3, [r4, #0]
 8022e88:	559f      	strb	r7, [r3, r6]
 8022e8a:	6823      	ldr	r3, [r4, #0]
 8022e8c:	6065      	str	r5, [r4, #4]
 8022e8e:	2200      	movs	r2, #0
 8022e90:	555a      	strb	r2, [r3, r5]
 8022e92:	b003      	add	sp, #12
 8022e94:	bdf0      	pop	{r4, r5, r6, r7, pc}

08022e96 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8pop_backEv>:
 8022e96:	b508      	push	{r3, lr}
 8022e98:	6841      	ldr	r1, [r0, #4]
 8022e9a:	2201      	movs	r2, #1
 8022e9c:	3901      	subs	r1, #1
 8022e9e:	f7ff ff2e 	bl	8022cfe <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEjj>
 8022ea2:	bd08      	pop	{r3, pc}

08022ea4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>:
 8022ea4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022ea8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8022eaa:	4614      	mov	r4, r2
 8022eac:	4680      	mov	r8, r0
 8022eae:	462a      	mov	r2, r5
 8022eb0:	4689      	mov	r9, r1
 8022eb2:	461f      	mov	r7, r3
 8022eb4:	4621      	mov	r1, r4
 8022eb6:	4b39      	ldr	r3, [pc, #228]	; (8022f9c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xf8>)
 8022eb8:	f7ff fe88 	bl	8022bcc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEjjPKc>
 8022ebc:	4642      	mov	r2, r8
 8022ebe:	f8d8 3004 	ldr.w	r3, [r8, #4]
 8022ec2:	f852 6b08 	ldr.w	r6, [r2], #8
 8022ec6:	4296      	cmp	r6, r2
 8022ec8:	bf18      	it	ne
 8022eca:	f8d8 2008 	ldrne.w	r2, [r8, #8]
 8022ece:	eba5 0b04 	sub.w	fp, r5, r4
 8022ed2:	eb03 0a0b 	add.w	sl, r3, fp
 8022ed6:	bf08      	it	eq
 8022ed8:	220f      	moveq	r2, #15
 8022eda:	4552      	cmp	r2, sl
 8022edc:	d351      	bcc.n	8022f82 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xde>
 8022ede:	444e      	add	r6, r9
 8022ee0:	4639      	mov	r1, r7
 8022ee2:	44a1      	add	r9, r4
 8022ee4:	4640      	mov	r0, r8
 8022ee6:	eba3 0909 	sub.w	r9, r3, r9
 8022eea:	f7ff fe7b 	bl	8022be4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_disjunctEPKc>
 8022eee:	b180      	cbz	r0, 8022f12 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x6e>
 8022ef0:	f1b9 0f00 	cmp.w	r9, #0
 8022ef4:	d006      	beq.n	8022f04 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x60>
 8022ef6:	42ac      	cmp	r4, r5
 8022ef8:	d004      	beq.n	8022f04 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x60>
 8022efa:	464a      	mov	r2, r9
 8022efc:	1931      	adds	r1, r6, r4
 8022efe:	1970      	adds	r0, r6, r5
 8022f00:	f7ff fe85 	bl	8022c0e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj>
 8022f04:	b315      	cbz	r5, 8022f4c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xa8>
 8022f06:	462a      	mov	r2, r5
 8022f08:	4639      	mov	r1, r7
 8022f0a:	4630      	mov	r0, r6
 8022f0c:	f7ff fe76 	bl	8022bfc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 8022f10:	e01c      	b.n	8022f4c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xa8>
 8022f12:	b135      	cbz	r5, 8022f22 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x7e>
 8022f14:	42ac      	cmp	r4, r5
 8022f16:	d33c      	bcc.n	8022f92 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xee>
 8022f18:	462a      	mov	r2, r5
 8022f1a:	4639      	mov	r1, r7
 8022f1c:	4630      	mov	r0, r6
 8022f1e:	f7ff fe76 	bl	8022c0e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj>
 8022f22:	f1b9 0f00 	cmp.w	r9, #0
 8022f26:	d011      	beq.n	8022f4c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xa8>
 8022f28:	42ac      	cmp	r4, r5
 8022f2a:	d00f      	beq.n	8022f4c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xa8>
 8022f2c:	464a      	mov	r2, r9
 8022f2e:	1931      	adds	r1, r6, r4
 8022f30:	1970      	adds	r0, r6, r5
 8022f32:	f7ff fe6c 	bl	8022c0e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj>
 8022f36:	42ac      	cmp	r4, r5
 8022f38:	d208      	bcs.n	8022f4c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xa8>
 8022f3a:	4434      	add	r4, r6
 8022f3c:	197b      	adds	r3, r7, r5
 8022f3e:	429c      	cmp	r4, r3
 8022f40:	d30f      	bcc.n	8022f62 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xbe>
 8022f42:	462a      	mov	r2, r5
 8022f44:	4639      	mov	r1, r7
 8022f46:	4630      	mov	r0, r6
 8022f48:	f7ff fe61 	bl	8022c0e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj>
 8022f4c:	f8d8 3000 	ldr.w	r3, [r8]
 8022f50:	f8c8 a004 	str.w	sl, [r8, #4]
 8022f54:	2200      	movs	r2, #0
 8022f56:	4640      	mov	r0, r8
 8022f58:	f803 200a 	strb.w	r2, [r3, sl]
 8022f5c:	b003      	add	sp, #12
 8022f5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022f62:	42bc      	cmp	r4, r7
 8022f64:	d803      	bhi.n	8022f6e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xca>
 8022f66:	462a      	mov	r2, r5
 8022f68:	eb07 010b 	add.w	r1, r7, fp
 8022f6c:	e7cd      	b.n	8022f0a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x66>
 8022f6e:	1be4      	subs	r4, r4, r7
 8022f70:	4622      	mov	r2, r4
 8022f72:	4639      	mov	r1, r7
 8022f74:	4630      	mov	r0, r6
 8022f76:	f7ff fe4a 	bl	8022c0e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj>
 8022f7a:	1b2a      	subs	r2, r5, r4
 8022f7c:	1971      	adds	r1, r6, r5
 8022f7e:	1930      	adds	r0, r6, r4
 8022f80:	e7c4      	b.n	8022f0c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x68>
 8022f82:	9500      	str	r5, [sp, #0]
 8022f84:	463b      	mov	r3, r7
 8022f86:	4622      	mov	r2, r4
 8022f88:	4649      	mov	r1, r9
 8022f8a:	4640      	mov	r0, r8
 8022f8c:	f7ff fe7b 	bl	8022c86 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj>
 8022f90:	e7dc      	b.n	8022f4c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xa8>
 8022f92:	f1b9 0f00 	cmp.w	r9, #0
 8022f96:	d0d0      	beq.n	8022f3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x96>
 8022f98:	e7c8      	b.n	8022f2c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x88>
 8022f9a:	bf00      	nop
 8022f9c:	08028371 	.word	0x08028371

08022fa0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjPKcj>:
 8022fa0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8022fa2:	4604      	mov	r4, r0
 8022fa4:	4615      	mov	r5, r2
 8022fa6:	4a09      	ldr	r2, [pc, #36]	; (8022fcc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjPKcj+0x2c>)
 8022fa8:	9303      	str	r3, [sp, #12]
 8022faa:	460e      	mov	r6, r1
 8022fac:	f7ff fe00 	bl	8022bb0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_checkEjPKc>
 8022fb0:	6862      	ldr	r2, [r4, #4]
 8022fb2:	9b03      	ldr	r3, [sp, #12]
 8022fb4:	1b92      	subs	r2, r2, r6
 8022fb6:	4601      	mov	r1, r0
 8022fb8:	42aa      	cmp	r2, r5
 8022fba:	9808      	ldr	r0, [sp, #32]
 8022fbc:	9000      	str	r0, [sp, #0]
 8022fbe:	bf28      	it	cs
 8022fc0:	462a      	movcs	r2, r5
 8022fc2:	4620      	mov	r0, r4
 8022fc4:	f7ff ff6e 	bl	8022ea4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>
 8022fc8:	b004      	add	sp, #16
 8022fca:	bd70      	pop	{r4, r5, r6, pc}
 8022fcc:	0802835b 	.word	0x0802835b

08022fd0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjRKS4_>:
 8022fd0:	b507      	push	{r0, r1, r2, lr}
 8022fd2:	6853      	ldr	r3, [r2, #4]
 8022fd4:	9300      	str	r3, [sp, #0]
 8022fd6:	6813      	ldr	r3, [r2, #0]
 8022fd8:	2200      	movs	r2, #0
 8022fda:	f7ff ffe1 	bl	8022fa0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjPKcj>
 8022fde:	b003      	add	sp, #12
 8022fe0:	f85d fb04 	ldr.w	pc, [sp], #4

08022fe4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjPKc>:
 8022fe4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8022fe6:	4604      	mov	r4, r0
 8022fe8:	4610      	mov	r0, r2
 8022fea:	9103      	str	r1, [sp, #12]
 8022fec:	9202      	str	r2, [sp, #8]
 8022fee:	f7dd f95f 	bl	80002b0 <strlen>
 8022ff2:	9b02      	ldr	r3, [sp, #8]
 8022ff4:	9000      	str	r0, [sp, #0]
 8022ff6:	9903      	ldr	r1, [sp, #12]
 8022ff8:	2200      	movs	r2, #0
 8022ffa:	4620      	mov	r0, r4
 8022ffc:	f7ff ffd0 	bl	8022fa0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjPKcj>
 8023000:	b004      	add	sp, #16
 8023002:	bd10      	pop	{r4, pc}

08023004 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj>:
 8023004:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8023006:	4604      	mov	r4, r0
 8023008:	4623      	mov	r3, r4
 802300a:	6840      	ldr	r0, [r0, #4]
 802300c:	f853 6b08 	ldr.w	r6, [r3], #8
 8023010:	429e      	cmp	r6, r3
 8023012:	bf18      	it	ne
 8023014:	68a3      	ldrne	r3, [r4, #8]
 8023016:	eb00 0502 	add.w	r5, r0, r2
 802301a:	bf08      	it	eq
 802301c:	230f      	moveq	r3, #15
 802301e:	429d      	cmp	r5, r3
 8023020:	d80a      	bhi.n	8023038 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj+0x34>
 8023022:	b112      	cbz	r2, 802302a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj+0x26>
 8023024:	4430      	add	r0, r6
 8023026:	f7ff fde9 	bl	8022bfc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 802302a:	6823      	ldr	r3, [r4, #0]
 802302c:	6065      	str	r5, [r4, #4]
 802302e:	2200      	movs	r2, #0
 8023030:	4620      	mov	r0, r4
 8023032:	555a      	strb	r2, [r3, r5]
 8023034:	b002      	add	sp, #8
 8023036:	bd70      	pop	{r4, r5, r6, pc}
 8023038:	9200      	str	r2, [sp, #0]
 802303a:	460b      	mov	r3, r1
 802303c:	2200      	movs	r2, #0
 802303e:	4601      	mov	r1, r0
 8023040:	4620      	mov	r0, r4
 8023042:	f7ff fe20 	bl	8022c86 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj>
 8023046:	e7f0      	b.n	802302a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj+0x26>

08023048 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_>:
 8023048:	b508      	push	{r3, lr}
 802304a:	e9d1 1200 	ldrd	r1, r2, [r1]
 802304e:	f7ff ffd9 	bl	8023004 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj>
 8023052:	bd08      	pop	{r3, pc}

08023054 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcj>:
 8023054:	b570      	push	{r4, r5, r6, lr}
 8023056:	4b06      	ldr	r3, [pc, #24]	; (8023070 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcj+0x1c>)
 8023058:	4604      	mov	r4, r0
 802305a:	460d      	mov	r5, r1
 802305c:	4616      	mov	r6, r2
 802305e:	2100      	movs	r1, #0
 8023060:	f7ff fdb4 	bl	8022bcc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEjjPKc>
 8023064:	4632      	mov	r2, r6
 8023066:	4629      	mov	r1, r5
 8023068:	4620      	mov	r0, r4
 802306a:	f7ff ffcb 	bl	8023004 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj>
 802306e:	bd70      	pop	{r4, r5, r6, pc}
 8023070:	0802838a 	.word	0x0802838a

08023074 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc>:
 8023074:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8023076:	4604      	mov	r4, r0
 8023078:	4608      	mov	r0, r1
 802307a:	460d      	mov	r5, r1
 802307c:	f7dd f918 	bl	80002b0 <strlen>
 8023080:	4b06      	ldr	r3, [pc, #24]	; (802309c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc+0x28>)
 8023082:	9001      	str	r0, [sp, #4]
 8023084:	4602      	mov	r2, r0
 8023086:	2100      	movs	r1, #0
 8023088:	4620      	mov	r0, r4
 802308a:	f7ff fd9f 	bl	8022bcc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEjjPKc>
 802308e:	9a01      	ldr	r2, [sp, #4]
 8023090:	4629      	mov	r1, r5
 8023092:	4620      	mov	r0, r4
 8023094:	f7ff ffb6 	bl	8023004 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj>
 8023098:	b003      	add	sp, #12
 802309a:	bd30      	pop	{r4, r5, pc}
 802309c:	0802838a 	.word	0x0802838a

080230a0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>:
 80230a0:	6800      	ldr	r0, [r0, #0]
 80230a2:	4770      	bx	lr

080230a4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_>:
 80230a4:	b538      	push	{r3, r4, r5, lr}
 80230a6:	6845      	ldr	r5, [r0, #4]
 80230a8:	684c      	ldr	r4, [r1, #4]
 80230aa:	6800      	ldr	r0, [r0, #0]
 80230ac:	6809      	ldr	r1, [r1, #0]
 80230ae:	42a5      	cmp	r5, r4
 80230b0:	462a      	mov	r2, r5
 80230b2:	bf28      	it	cs
 80230b4:	4622      	movcs	r2, r4
 80230b6:	f7ff fd3a 	bl	8022b2e <_ZNSt11char_traitsIcE7compareEPKcS2_j>
 80230ba:	b900      	cbnz	r0, 80230be <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_+0x1a>
 80230bc:	1b28      	subs	r0, r5, r4
 80230be:	bd38      	pop	{r3, r4, r5, pc}

080230c0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc>:
 80230c0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80230c2:	6846      	ldr	r6, [r0, #4]
 80230c4:	9101      	str	r1, [sp, #4]
 80230c6:	4605      	mov	r5, r0
 80230c8:	4608      	mov	r0, r1
 80230ca:	f7dd f8f1 	bl	80002b0 <strlen>
 80230ce:	4286      	cmp	r6, r0
 80230d0:	4604      	mov	r4, r0
 80230d2:	4632      	mov	r2, r6
 80230d4:	9901      	ldr	r1, [sp, #4]
 80230d6:	bf28      	it	cs
 80230d8:	4602      	movcs	r2, r0
 80230da:	6828      	ldr	r0, [r5, #0]
 80230dc:	f7ff fd27 	bl	8022b2e <_ZNSt11char_traitsIcE7compareEPKcS2_j>
 80230e0:	b900      	cbnz	r0, 80230e4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc+0x24>
 80230e2:	1b30      	subs	r0, r6, r4
 80230e4:	b002      	add	sp, #8
 80230e6:	bd70      	pop	{r4, r5, r6, pc}

080230e8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_>:
 80230e8:	6001      	str	r1, [r0, #0]
 80230ea:	4770      	bx	lr

080230ec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>:
 80230ec:	b538      	push	{r3, r4, r5, lr}
 80230ee:	f100 0308 	add.w	r3, r0, #8
 80230f2:	6003      	str	r3, [r0, #0]
 80230f4:	e9d1 5200 	ldrd	r5, r2, [r1]
 80230f8:	4604      	mov	r4, r0
 80230fa:	f04f 0300 	mov.w	r3, #0
 80230fe:	442a      	add	r2, r5
 8023100:	4629      	mov	r1, r5
 8023102:	f7ef fbdb 	bl	80128bc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag>
 8023106:	4620      	mov	r0, r4
 8023108:	bd38      	pop	{r3, r4, r5, pc}
	...

0802310c <_ZSt15get_new_handlerv>:
 802310c:	4b02      	ldr	r3, [pc, #8]	; (8023118 <_ZSt15get_new_handlerv+0xc>)
 802310e:	6818      	ldr	r0, [r3, #0]
 8023110:	f3bf 8f5b 	dmb	ish
 8023114:	4770      	bx	lr
 8023116:	bf00      	nop
 8023118:	20000820 	.word	0x20000820

0802311c <pow>:
 802311c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8023120:	ec59 8b10 	vmov	r8, r9, d0
 8023124:	ec57 6b11 	vmov	r6, r7, d1
 8023128:	f000 f8a6 	bl	8023278 <__ieee754_pow>
 802312c:	4b4e      	ldr	r3, [pc, #312]	; (8023268 <pow+0x14c>)
 802312e:	f993 3000 	ldrsb.w	r3, [r3]
 8023132:	3301      	adds	r3, #1
 8023134:	ec55 4b10 	vmov	r4, r5, d0
 8023138:	d015      	beq.n	8023166 <pow+0x4a>
 802313a:	4632      	mov	r2, r6
 802313c:	463b      	mov	r3, r7
 802313e:	4630      	mov	r0, r6
 8023140:	4639      	mov	r1, r7
 8023142:	f7dd fd13 	bl	8000b6c <__aeabi_dcmpun>
 8023146:	b970      	cbnz	r0, 8023166 <pow+0x4a>
 8023148:	4642      	mov	r2, r8
 802314a:	464b      	mov	r3, r9
 802314c:	4640      	mov	r0, r8
 802314e:	4649      	mov	r1, r9
 8023150:	f7dd fd0c 	bl	8000b6c <__aeabi_dcmpun>
 8023154:	2200      	movs	r2, #0
 8023156:	2300      	movs	r3, #0
 8023158:	b148      	cbz	r0, 802316e <pow+0x52>
 802315a:	4630      	mov	r0, r6
 802315c:	4639      	mov	r1, r7
 802315e:	f7dd fcd3 	bl	8000b08 <__aeabi_dcmpeq>
 8023162:	2800      	cmp	r0, #0
 8023164:	d17d      	bne.n	8023262 <pow+0x146>
 8023166:	ec45 4b10 	vmov	d0, r4, r5
 802316a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802316e:	4640      	mov	r0, r8
 8023170:	4649      	mov	r1, r9
 8023172:	f7dd fcc9 	bl	8000b08 <__aeabi_dcmpeq>
 8023176:	b1e0      	cbz	r0, 80231b2 <pow+0x96>
 8023178:	2200      	movs	r2, #0
 802317a:	2300      	movs	r3, #0
 802317c:	4630      	mov	r0, r6
 802317e:	4639      	mov	r1, r7
 8023180:	f7dd fcc2 	bl	8000b08 <__aeabi_dcmpeq>
 8023184:	2800      	cmp	r0, #0
 8023186:	d16c      	bne.n	8023262 <pow+0x146>
 8023188:	ec47 6b10 	vmov	d0, r6, r7
 802318c:	f000 fe53 	bl	8023e36 <finite>
 8023190:	2800      	cmp	r0, #0
 8023192:	d0e8      	beq.n	8023166 <pow+0x4a>
 8023194:	2200      	movs	r2, #0
 8023196:	2300      	movs	r3, #0
 8023198:	4630      	mov	r0, r6
 802319a:	4639      	mov	r1, r7
 802319c:	f7dd fcbe 	bl	8000b1c <__aeabi_dcmplt>
 80231a0:	2800      	cmp	r0, #0
 80231a2:	d0e0      	beq.n	8023166 <pow+0x4a>
 80231a4:	f000 ff7c 	bl	80240a0 <__errno>
 80231a8:	2321      	movs	r3, #33	; 0x21
 80231aa:	6003      	str	r3, [r0, #0]
 80231ac:	2400      	movs	r4, #0
 80231ae:	4d2f      	ldr	r5, [pc, #188]	; (802326c <pow+0x150>)
 80231b0:	e7d9      	b.n	8023166 <pow+0x4a>
 80231b2:	ec45 4b10 	vmov	d0, r4, r5
 80231b6:	f000 fe3e 	bl	8023e36 <finite>
 80231ba:	bbb8      	cbnz	r0, 802322c <pow+0x110>
 80231bc:	ec49 8b10 	vmov	d0, r8, r9
 80231c0:	f000 fe39 	bl	8023e36 <finite>
 80231c4:	b390      	cbz	r0, 802322c <pow+0x110>
 80231c6:	ec47 6b10 	vmov	d0, r6, r7
 80231ca:	f000 fe34 	bl	8023e36 <finite>
 80231ce:	b368      	cbz	r0, 802322c <pow+0x110>
 80231d0:	4622      	mov	r2, r4
 80231d2:	462b      	mov	r3, r5
 80231d4:	4620      	mov	r0, r4
 80231d6:	4629      	mov	r1, r5
 80231d8:	f7dd fcc8 	bl	8000b6c <__aeabi_dcmpun>
 80231dc:	b160      	cbz	r0, 80231f8 <pow+0xdc>
 80231de:	f000 ff5f 	bl	80240a0 <__errno>
 80231e2:	2321      	movs	r3, #33	; 0x21
 80231e4:	6003      	str	r3, [r0, #0]
 80231e6:	2200      	movs	r2, #0
 80231e8:	2300      	movs	r3, #0
 80231ea:	4610      	mov	r0, r2
 80231ec:	4619      	mov	r1, r3
 80231ee:	f7dd fb4d 	bl	800088c <__aeabi_ddiv>
 80231f2:	4604      	mov	r4, r0
 80231f4:	460d      	mov	r5, r1
 80231f6:	e7b6      	b.n	8023166 <pow+0x4a>
 80231f8:	f000 ff52 	bl	80240a0 <__errno>
 80231fc:	2322      	movs	r3, #34	; 0x22
 80231fe:	6003      	str	r3, [r0, #0]
 8023200:	2200      	movs	r2, #0
 8023202:	2300      	movs	r3, #0
 8023204:	4640      	mov	r0, r8
 8023206:	4649      	mov	r1, r9
 8023208:	f7dd fc88 	bl	8000b1c <__aeabi_dcmplt>
 802320c:	2400      	movs	r4, #0
 802320e:	b158      	cbz	r0, 8023228 <pow+0x10c>
 8023210:	ec47 6b10 	vmov	d0, r6, r7
 8023214:	f000 fe24 	bl	8023e60 <rint>
 8023218:	4632      	mov	r2, r6
 802321a:	ec51 0b10 	vmov	r0, r1, d0
 802321e:	463b      	mov	r3, r7
 8023220:	f7dd fc72 	bl	8000b08 <__aeabi_dcmpeq>
 8023224:	2800      	cmp	r0, #0
 8023226:	d0c2      	beq.n	80231ae <pow+0x92>
 8023228:	4d11      	ldr	r5, [pc, #68]	; (8023270 <pow+0x154>)
 802322a:	e79c      	b.n	8023166 <pow+0x4a>
 802322c:	2200      	movs	r2, #0
 802322e:	2300      	movs	r3, #0
 8023230:	4620      	mov	r0, r4
 8023232:	4629      	mov	r1, r5
 8023234:	f7dd fc68 	bl	8000b08 <__aeabi_dcmpeq>
 8023238:	2800      	cmp	r0, #0
 802323a:	d094      	beq.n	8023166 <pow+0x4a>
 802323c:	ec49 8b10 	vmov	d0, r8, r9
 8023240:	f000 fdf9 	bl	8023e36 <finite>
 8023244:	2800      	cmp	r0, #0
 8023246:	d08e      	beq.n	8023166 <pow+0x4a>
 8023248:	ec47 6b10 	vmov	d0, r6, r7
 802324c:	f000 fdf3 	bl	8023e36 <finite>
 8023250:	2800      	cmp	r0, #0
 8023252:	d088      	beq.n	8023166 <pow+0x4a>
 8023254:	f000 ff24 	bl	80240a0 <__errno>
 8023258:	2322      	movs	r3, #34	; 0x22
 802325a:	6003      	str	r3, [r0, #0]
 802325c:	2400      	movs	r4, #0
 802325e:	2500      	movs	r5, #0
 8023260:	e781      	b.n	8023166 <pow+0x4a>
 8023262:	4d04      	ldr	r5, [pc, #16]	; (8023274 <pow+0x158>)
 8023264:	2400      	movs	r4, #0
 8023266:	e77e      	b.n	8023166 <pow+0x4a>
 8023268:	2000000d 	.word	0x2000000d
 802326c:	fff00000 	.word	0xfff00000
 8023270:	7ff00000 	.word	0x7ff00000
 8023274:	3ff00000 	.word	0x3ff00000

08023278 <__ieee754_pow>:
 8023278:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802327c:	ed2d 8b06 	vpush	{d8-d10}
 8023280:	b08d      	sub	sp, #52	; 0x34
 8023282:	ed8d 1b02 	vstr	d1, [sp, #8]
 8023286:	e9dd 0702 	ldrd	r0, r7, [sp, #8]
 802328a:	f027 4600 	bic.w	r6, r7, #2147483648	; 0x80000000
 802328e:	ea56 0100 	orrs.w	r1, r6, r0
 8023292:	ec53 2b10 	vmov	r2, r3, d0
 8023296:	f000 84d1 	beq.w	8023c3c <__ieee754_pow+0x9c4>
 802329a:	497f      	ldr	r1, [pc, #508]	; (8023498 <__ieee754_pow+0x220>)
 802329c:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
 80232a0:	428c      	cmp	r4, r1
 80232a2:	ee10 8a10 	vmov	r8, s0
 80232a6:	4699      	mov	r9, r3
 80232a8:	dc09      	bgt.n	80232be <__ieee754_pow+0x46>
 80232aa:	d103      	bne.n	80232b4 <__ieee754_pow+0x3c>
 80232ac:	b97a      	cbnz	r2, 80232ce <__ieee754_pow+0x56>
 80232ae:	42a6      	cmp	r6, r4
 80232b0:	dd02      	ble.n	80232b8 <__ieee754_pow+0x40>
 80232b2:	e00c      	b.n	80232ce <__ieee754_pow+0x56>
 80232b4:	428e      	cmp	r6, r1
 80232b6:	dc02      	bgt.n	80232be <__ieee754_pow+0x46>
 80232b8:	428e      	cmp	r6, r1
 80232ba:	d110      	bne.n	80232de <__ieee754_pow+0x66>
 80232bc:	b178      	cbz	r0, 80232de <__ieee754_pow+0x66>
 80232be:	f104 4440 	add.w	r4, r4, #3221225472	; 0xc0000000
 80232c2:	f504 1480 	add.w	r4, r4, #1048576	; 0x100000
 80232c6:	ea54 0308 	orrs.w	r3, r4, r8
 80232ca:	f000 84b7 	beq.w	8023c3c <__ieee754_pow+0x9c4>
 80232ce:	4873      	ldr	r0, [pc, #460]	; (802349c <__ieee754_pow+0x224>)
 80232d0:	b00d      	add	sp, #52	; 0x34
 80232d2:	ecbd 8b06 	vpop	{d8-d10}
 80232d6:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80232da:	f000 bdb9 	b.w	8023e50 <nan>
 80232de:	f1b9 0f00 	cmp.w	r9, #0
 80232e2:	da36      	bge.n	8023352 <__ieee754_pow+0xda>
 80232e4:	496e      	ldr	r1, [pc, #440]	; (80234a0 <__ieee754_pow+0x228>)
 80232e6:	428e      	cmp	r6, r1
 80232e8:	dc51      	bgt.n	802338e <__ieee754_pow+0x116>
 80232ea:	f1a1 7154 	sub.w	r1, r1, #55574528	; 0x3500000
 80232ee:	428e      	cmp	r6, r1
 80232f0:	f340 84af 	ble.w	8023c52 <__ieee754_pow+0x9da>
 80232f4:	1531      	asrs	r1, r6, #20
 80232f6:	f2a1 31ff 	subw	r1, r1, #1023	; 0x3ff
 80232fa:	2914      	cmp	r1, #20
 80232fc:	dd0f      	ble.n	802331e <__ieee754_pow+0xa6>
 80232fe:	f1c1 0134 	rsb	r1, r1, #52	; 0x34
 8023302:	fa20 fc01 	lsr.w	ip, r0, r1
 8023306:	fa0c f101 	lsl.w	r1, ip, r1
 802330a:	4281      	cmp	r1, r0
 802330c:	f040 84a1 	bne.w	8023c52 <__ieee754_pow+0x9da>
 8023310:	f00c 0c01 	and.w	ip, ip, #1
 8023314:	f1cc 0102 	rsb	r1, ip, #2
 8023318:	9100      	str	r1, [sp, #0]
 802331a:	b180      	cbz	r0, 802333e <__ieee754_pow+0xc6>
 802331c:	e059      	b.n	80233d2 <__ieee754_pow+0x15a>
 802331e:	2800      	cmp	r0, #0
 8023320:	d155      	bne.n	80233ce <__ieee754_pow+0x156>
 8023322:	f1c1 0114 	rsb	r1, r1, #20
 8023326:	fa46 fc01 	asr.w	ip, r6, r1
 802332a:	fa0c f101 	lsl.w	r1, ip, r1
 802332e:	42b1      	cmp	r1, r6
 8023330:	f040 848c 	bne.w	8023c4c <__ieee754_pow+0x9d4>
 8023334:	f00c 0c01 	and.w	ip, ip, #1
 8023338:	f1cc 0102 	rsb	r1, ip, #2
 802333c:	9100      	str	r1, [sp, #0]
 802333e:	4959      	ldr	r1, [pc, #356]	; (80234a4 <__ieee754_pow+0x22c>)
 8023340:	428e      	cmp	r6, r1
 8023342:	d12d      	bne.n	80233a0 <__ieee754_pow+0x128>
 8023344:	2f00      	cmp	r7, #0
 8023346:	da79      	bge.n	802343c <__ieee754_pow+0x1c4>
 8023348:	4956      	ldr	r1, [pc, #344]	; (80234a4 <__ieee754_pow+0x22c>)
 802334a:	2000      	movs	r0, #0
 802334c:	f7dd fa9e 	bl	800088c <__aeabi_ddiv>
 8023350:	e016      	b.n	8023380 <__ieee754_pow+0x108>
 8023352:	2100      	movs	r1, #0
 8023354:	9100      	str	r1, [sp, #0]
 8023356:	2800      	cmp	r0, #0
 8023358:	d13b      	bne.n	80233d2 <__ieee754_pow+0x15a>
 802335a:	494f      	ldr	r1, [pc, #316]	; (8023498 <__ieee754_pow+0x220>)
 802335c:	428e      	cmp	r6, r1
 802335e:	d1ee      	bne.n	802333e <__ieee754_pow+0xc6>
 8023360:	f104 4340 	add.w	r3, r4, #3221225472	; 0xc0000000
 8023364:	f503 1380 	add.w	r3, r3, #1048576	; 0x100000
 8023368:	ea53 0308 	orrs.w	r3, r3, r8
 802336c:	f000 8466 	beq.w	8023c3c <__ieee754_pow+0x9c4>
 8023370:	4b4d      	ldr	r3, [pc, #308]	; (80234a8 <__ieee754_pow+0x230>)
 8023372:	429c      	cmp	r4, r3
 8023374:	dd0d      	ble.n	8023392 <__ieee754_pow+0x11a>
 8023376:	2f00      	cmp	r7, #0
 8023378:	f280 8464 	bge.w	8023c44 <__ieee754_pow+0x9cc>
 802337c:	2000      	movs	r0, #0
 802337e:	2100      	movs	r1, #0
 8023380:	ec41 0b10 	vmov	d0, r0, r1
 8023384:	b00d      	add	sp, #52	; 0x34
 8023386:	ecbd 8b06 	vpop	{d8-d10}
 802338a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802338e:	2102      	movs	r1, #2
 8023390:	e7e0      	b.n	8023354 <__ieee754_pow+0xdc>
 8023392:	2f00      	cmp	r7, #0
 8023394:	daf2      	bge.n	802337c <__ieee754_pow+0x104>
 8023396:	e9dd 0302 	ldrd	r0, r3, [sp, #8]
 802339a:	f103 4100 	add.w	r1, r3, #2147483648	; 0x80000000
 802339e:	e7ef      	b.n	8023380 <__ieee754_pow+0x108>
 80233a0:	f1b7 4f80 	cmp.w	r7, #1073741824	; 0x40000000
 80233a4:	d104      	bne.n	80233b0 <__ieee754_pow+0x138>
 80233a6:	4610      	mov	r0, r2
 80233a8:	4619      	mov	r1, r3
 80233aa:	f7dd f945 	bl	8000638 <__aeabi_dmul>
 80233ae:	e7e7      	b.n	8023380 <__ieee754_pow+0x108>
 80233b0:	493e      	ldr	r1, [pc, #248]	; (80234ac <__ieee754_pow+0x234>)
 80233b2:	428f      	cmp	r7, r1
 80233b4:	d10d      	bne.n	80233d2 <__ieee754_pow+0x15a>
 80233b6:	f1b9 0f00 	cmp.w	r9, #0
 80233ba:	db0a      	blt.n	80233d2 <__ieee754_pow+0x15a>
 80233bc:	ec43 2b10 	vmov	d0, r2, r3
 80233c0:	b00d      	add	sp, #52	; 0x34
 80233c2:	ecbd 8b06 	vpop	{d8-d10}
 80233c6:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80233ca:	f000 bc77 	b.w	8023cbc <__ieee754_sqrt>
 80233ce:	2100      	movs	r1, #0
 80233d0:	9100      	str	r1, [sp, #0]
 80233d2:	ec43 2b10 	vmov	d0, r2, r3
 80233d6:	e9cd 2304 	strd	r2, r3, [sp, #16]
 80233da:	f000 fd23 	bl	8023e24 <fabs>
 80233de:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80233e2:	ec51 0b10 	vmov	r0, r1, d0
 80233e6:	f1b8 0f00 	cmp.w	r8, #0
 80233ea:	d12a      	bne.n	8023442 <__ieee754_pow+0x1ca>
 80233ec:	b12c      	cbz	r4, 80233fa <__ieee754_pow+0x182>
 80233ee:	f8df c0b4 	ldr.w	ip, [pc, #180]	; 80234a4 <__ieee754_pow+0x22c>
 80233f2:	f029 4e40 	bic.w	lr, r9, #3221225472	; 0xc0000000
 80233f6:	45e6      	cmp	lr, ip
 80233f8:	d123      	bne.n	8023442 <__ieee754_pow+0x1ca>
 80233fa:	2f00      	cmp	r7, #0
 80233fc:	da05      	bge.n	802340a <__ieee754_pow+0x192>
 80233fe:	4602      	mov	r2, r0
 8023400:	460b      	mov	r3, r1
 8023402:	2000      	movs	r0, #0
 8023404:	4927      	ldr	r1, [pc, #156]	; (80234a4 <__ieee754_pow+0x22c>)
 8023406:	f7dd fa41 	bl	800088c <__aeabi_ddiv>
 802340a:	f1b9 0f00 	cmp.w	r9, #0
 802340e:	dab7      	bge.n	8023380 <__ieee754_pow+0x108>
 8023410:	9b00      	ldr	r3, [sp, #0]
 8023412:	f104 4440 	add.w	r4, r4, #3221225472	; 0xc0000000
 8023416:	f504 1480 	add.w	r4, r4, #1048576	; 0x100000
 802341a:	4323      	orrs	r3, r4
 802341c:	d108      	bne.n	8023430 <__ieee754_pow+0x1b8>
 802341e:	4602      	mov	r2, r0
 8023420:	460b      	mov	r3, r1
 8023422:	4610      	mov	r0, r2
 8023424:	4619      	mov	r1, r3
 8023426:	f7dc ff4f 	bl	80002c8 <__aeabi_dsub>
 802342a:	4602      	mov	r2, r0
 802342c:	460b      	mov	r3, r1
 802342e:	e78d      	b.n	802334c <__ieee754_pow+0xd4>
 8023430:	9b00      	ldr	r3, [sp, #0]
 8023432:	2b01      	cmp	r3, #1
 8023434:	d1a4      	bne.n	8023380 <__ieee754_pow+0x108>
 8023436:	4602      	mov	r2, r0
 8023438:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 802343c:	4610      	mov	r0, r2
 802343e:	4619      	mov	r1, r3
 8023440:	e79e      	b.n	8023380 <__ieee754_pow+0x108>
 8023442:	ea4f 7cd9 	mov.w	ip, r9, lsr #31
 8023446:	f10c 35ff 	add.w	r5, ip, #4294967295
 802344a:	950a      	str	r5, [sp, #40]	; 0x28
 802344c:	9d00      	ldr	r5, [sp, #0]
 802344e:	46ac      	mov	ip, r5
 8023450:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8023452:	ea5c 0505 	orrs.w	r5, ip, r5
 8023456:	d0e4      	beq.n	8023422 <__ieee754_pow+0x1aa>
 8023458:	4b15      	ldr	r3, [pc, #84]	; (80234b0 <__ieee754_pow+0x238>)
 802345a:	429e      	cmp	r6, r3
 802345c:	f340 80fc 	ble.w	8023658 <__ieee754_pow+0x3e0>
 8023460:	f103 7304 	add.w	r3, r3, #34603008	; 0x2100000
 8023464:	429e      	cmp	r6, r3
 8023466:	4b10      	ldr	r3, [pc, #64]	; (80234a8 <__ieee754_pow+0x230>)
 8023468:	dd07      	ble.n	802347a <__ieee754_pow+0x202>
 802346a:	429c      	cmp	r4, r3
 802346c:	dc0a      	bgt.n	8023484 <__ieee754_pow+0x20c>
 802346e:	2f00      	cmp	r7, #0
 8023470:	da84      	bge.n	802337c <__ieee754_pow+0x104>
 8023472:	a307      	add	r3, pc, #28	; (adr r3, 8023490 <__ieee754_pow+0x218>)
 8023474:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023478:	e795      	b.n	80233a6 <__ieee754_pow+0x12e>
 802347a:	429c      	cmp	r4, r3
 802347c:	dbf7      	blt.n	802346e <__ieee754_pow+0x1f6>
 802347e:	4b09      	ldr	r3, [pc, #36]	; (80234a4 <__ieee754_pow+0x22c>)
 8023480:	429c      	cmp	r4, r3
 8023482:	dd17      	ble.n	80234b4 <__ieee754_pow+0x23c>
 8023484:	2f00      	cmp	r7, #0
 8023486:	dcf4      	bgt.n	8023472 <__ieee754_pow+0x1fa>
 8023488:	e778      	b.n	802337c <__ieee754_pow+0x104>
 802348a:	bf00      	nop
 802348c:	f3af 8000 	nop.w
 8023490:	8800759c 	.word	0x8800759c
 8023494:	7e37e43c 	.word	0x7e37e43c
 8023498:	7ff00000 	.word	0x7ff00000
 802349c:	080287da 	.word	0x080287da
 80234a0:	433fffff 	.word	0x433fffff
 80234a4:	3ff00000 	.word	0x3ff00000
 80234a8:	3fefffff 	.word	0x3fefffff
 80234ac:	3fe00000 	.word	0x3fe00000
 80234b0:	41e00000 	.word	0x41e00000
 80234b4:	4b64      	ldr	r3, [pc, #400]	; (8023648 <__ieee754_pow+0x3d0>)
 80234b6:	2200      	movs	r2, #0
 80234b8:	f7dc ff06 	bl	80002c8 <__aeabi_dsub>
 80234bc:	a356      	add	r3, pc, #344	; (adr r3, 8023618 <__ieee754_pow+0x3a0>)
 80234be:	e9d3 2300 	ldrd	r2, r3, [r3]
 80234c2:	4604      	mov	r4, r0
 80234c4:	460d      	mov	r5, r1
 80234c6:	f7dd f8b7 	bl	8000638 <__aeabi_dmul>
 80234ca:	a355      	add	r3, pc, #340	; (adr r3, 8023620 <__ieee754_pow+0x3a8>)
 80234cc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80234d0:	4606      	mov	r6, r0
 80234d2:	460f      	mov	r7, r1
 80234d4:	4620      	mov	r0, r4
 80234d6:	4629      	mov	r1, r5
 80234d8:	f7dd f8ae 	bl	8000638 <__aeabi_dmul>
 80234dc:	4b5b      	ldr	r3, [pc, #364]	; (802364c <__ieee754_pow+0x3d4>)
 80234de:	4682      	mov	sl, r0
 80234e0:	468b      	mov	fp, r1
 80234e2:	2200      	movs	r2, #0
 80234e4:	4620      	mov	r0, r4
 80234e6:	4629      	mov	r1, r5
 80234e8:	f7dd f8a6 	bl	8000638 <__aeabi_dmul>
 80234ec:	4602      	mov	r2, r0
 80234ee:	460b      	mov	r3, r1
 80234f0:	a14d      	add	r1, pc, #308	; (adr r1, 8023628 <__ieee754_pow+0x3b0>)
 80234f2:	e9d1 0100 	ldrd	r0, r1, [r1]
 80234f6:	f7dc fee7 	bl	80002c8 <__aeabi_dsub>
 80234fa:	4622      	mov	r2, r4
 80234fc:	462b      	mov	r3, r5
 80234fe:	f7dd f89b 	bl	8000638 <__aeabi_dmul>
 8023502:	4602      	mov	r2, r0
 8023504:	460b      	mov	r3, r1
 8023506:	2000      	movs	r0, #0
 8023508:	4951      	ldr	r1, [pc, #324]	; (8023650 <__ieee754_pow+0x3d8>)
 802350a:	f7dc fedd 	bl	80002c8 <__aeabi_dsub>
 802350e:	4622      	mov	r2, r4
 8023510:	4680      	mov	r8, r0
 8023512:	4689      	mov	r9, r1
 8023514:	462b      	mov	r3, r5
 8023516:	4620      	mov	r0, r4
 8023518:	4629      	mov	r1, r5
 802351a:	f7dd f88d 	bl	8000638 <__aeabi_dmul>
 802351e:	4602      	mov	r2, r0
 8023520:	460b      	mov	r3, r1
 8023522:	4640      	mov	r0, r8
 8023524:	4649      	mov	r1, r9
 8023526:	f7dd f887 	bl	8000638 <__aeabi_dmul>
 802352a:	a341      	add	r3, pc, #260	; (adr r3, 8023630 <__ieee754_pow+0x3b8>)
 802352c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023530:	f7dd f882 	bl	8000638 <__aeabi_dmul>
 8023534:	4602      	mov	r2, r0
 8023536:	460b      	mov	r3, r1
 8023538:	4650      	mov	r0, sl
 802353a:	4659      	mov	r1, fp
 802353c:	f7dc fec4 	bl	80002c8 <__aeabi_dsub>
 8023540:	4602      	mov	r2, r0
 8023542:	460b      	mov	r3, r1
 8023544:	4680      	mov	r8, r0
 8023546:	4689      	mov	r9, r1
 8023548:	4630      	mov	r0, r6
 802354a:	4639      	mov	r1, r7
 802354c:	f7dc febe 	bl	80002cc <__adddf3>
 8023550:	2400      	movs	r4, #0
 8023552:	4632      	mov	r2, r6
 8023554:	463b      	mov	r3, r7
 8023556:	4620      	mov	r0, r4
 8023558:	460d      	mov	r5, r1
 802355a:	f7dc feb5 	bl	80002c8 <__aeabi_dsub>
 802355e:	4602      	mov	r2, r0
 8023560:	460b      	mov	r3, r1
 8023562:	4640      	mov	r0, r8
 8023564:	4649      	mov	r1, r9
 8023566:	f7dc feaf 	bl	80002c8 <__aeabi_dsub>
 802356a:	9b00      	ldr	r3, [sp, #0]
 802356c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802356e:	3b01      	subs	r3, #1
 8023570:	4313      	orrs	r3, r2
 8023572:	4682      	mov	sl, r0
 8023574:	468b      	mov	fp, r1
 8023576:	f040 81f1 	bne.w	802395c <__ieee754_pow+0x6e4>
 802357a:	ed9f 7b2f 	vldr	d7, [pc, #188]	; 8023638 <__ieee754_pow+0x3c0>
 802357e:	eeb0 8a47 	vmov.f32	s16, s14
 8023582:	eef0 8a67 	vmov.f32	s17, s15
 8023586:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 802358a:	2600      	movs	r6, #0
 802358c:	4632      	mov	r2, r6
 802358e:	463b      	mov	r3, r7
 8023590:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8023594:	f7dc fe98 	bl	80002c8 <__aeabi_dsub>
 8023598:	4622      	mov	r2, r4
 802359a:	462b      	mov	r3, r5
 802359c:	f7dd f84c 	bl	8000638 <__aeabi_dmul>
 80235a0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80235a4:	4680      	mov	r8, r0
 80235a6:	4689      	mov	r9, r1
 80235a8:	4650      	mov	r0, sl
 80235aa:	4659      	mov	r1, fp
 80235ac:	f7dd f844 	bl	8000638 <__aeabi_dmul>
 80235b0:	4602      	mov	r2, r0
 80235b2:	460b      	mov	r3, r1
 80235b4:	4640      	mov	r0, r8
 80235b6:	4649      	mov	r1, r9
 80235b8:	f7dc fe88 	bl	80002cc <__adddf3>
 80235bc:	4632      	mov	r2, r6
 80235be:	463b      	mov	r3, r7
 80235c0:	4680      	mov	r8, r0
 80235c2:	4689      	mov	r9, r1
 80235c4:	4620      	mov	r0, r4
 80235c6:	4629      	mov	r1, r5
 80235c8:	f7dd f836 	bl	8000638 <__aeabi_dmul>
 80235cc:	460b      	mov	r3, r1
 80235ce:	4604      	mov	r4, r0
 80235d0:	460d      	mov	r5, r1
 80235d2:	4602      	mov	r2, r0
 80235d4:	4649      	mov	r1, r9
 80235d6:	4640      	mov	r0, r8
 80235d8:	f7dc fe78 	bl	80002cc <__adddf3>
 80235dc:	4b1d      	ldr	r3, [pc, #116]	; (8023654 <__ieee754_pow+0x3dc>)
 80235de:	4299      	cmp	r1, r3
 80235e0:	ec45 4b19 	vmov	d9, r4, r5
 80235e4:	4606      	mov	r6, r0
 80235e6:	460f      	mov	r7, r1
 80235e8:	468b      	mov	fp, r1
 80235ea:	f340 82fe 	ble.w	8023bea <__ieee754_pow+0x972>
 80235ee:	f101 433f 	add.w	r3, r1, #3204448256	; 0xbf000000
 80235f2:	f503 03e0 	add.w	r3, r3, #7340032	; 0x700000
 80235f6:	4303      	orrs	r3, r0
 80235f8:	f000 81f0 	beq.w	80239dc <__ieee754_pow+0x764>
 80235fc:	a310      	add	r3, pc, #64	; (adr r3, 8023640 <__ieee754_pow+0x3c8>)
 80235fe:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023602:	ec51 0b18 	vmov	r0, r1, d8
 8023606:	f7dd f817 	bl	8000638 <__aeabi_dmul>
 802360a:	a30d      	add	r3, pc, #52	; (adr r3, 8023640 <__ieee754_pow+0x3c8>)
 802360c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023610:	e6cb      	b.n	80233aa <__ieee754_pow+0x132>
 8023612:	bf00      	nop
 8023614:	f3af 8000 	nop.w
 8023618:	60000000 	.word	0x60000000
 802361c:	3ff71547 	.word	0x3ff71547
 8023620:	f85ddf44 	.word	0xf85ddf44
 8023624:	3e54ae0b 	.word	0x3e54ae0b
 8023628:	55555555 	.word	0x55555555
 802362c:	3fd55555 	.word	0x3fd55555
 8023630:	652b82fe 	.word	0x652b82fe
 8023634:	3ff71547 	.word	0x3ff71547
 8023638:	00000000 	.word	0x00000000
 802363c:	bff00000 	.word	0xbff00000
 8023640:	8800759c 	.word	0x8800759c
 8023644:	7e37e43c 	.word	0x7e37e43c
 8023648:	3ff00000 	.word	0x3ff00000
 802364c:	3fd00000 	.word	0x3fd00000
 8023650:	3fe00000 	.word	0x3fe00000
 8023654:	408fffff 	.word	0x408fffff
 8023658:	4bd7      	ldr	r3, [pc, #860]	; (80239b8 <__ieee754_pow+0x740>)
 802365a:	ea03 0309 	and.w	r3, r3, r9
 802365e:	2200      	movs	r2, #0
 8023660:	b92b      	cbnz	r3, 802366e <__ieee754_pow+0x3f6>
 8023662:	4bd6      	ldr	r3, [pc, #856]	; (80239bc <__ieee754_pow+0x744>)
 8023664:	f7dc ffe8 	bl	8000638 <__aeabi_dmul>
 8023668:	f06f 0234 	mvn.w	r2, #52	; 0x34
 802366c:	460c      	mov	r4, r1
 802366e:	1523      	asrs	r3, r4, #20
 8023670:	f2a3 33ff 	subw	r3, r3, #1023	; 0x3ff
 8023674:	4413      	add	r3, r2
 8023676:	9309      	str	r3, [sp, #36]	; 0x24
 8023678:	4bd1      	ldr	r3, [pc, #836]	; (80239c0 <__ieee754_pow+0x748>)
 802367a:	f3c4 0413 	ubfx	r4, r4, #0, #20
 802367e:	f044 557f 	orr.w	r5, r4, #1069547520	; 0x3fc00000
 8023682:	429c      	cmp	r4, r3
 8023684:	f445 1540 	orr.w	r5, r5, #3145728	; 0x300000
 8023688:	dd08      	ble.n	802369c <__ieee754_pow+0x424>
 802368a:	4bce      	ldr	r3, [pc, #824]	; (80239c4 <__ieee754_pow+0x74c>)
 802368c:	429c      	cmp	r4, r3
 802368e:	f340 8163 	ble.w	8023958 <__ieee754_pow+0x6e0>
 8023692:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023694:	3301      	adds	r3, #1
 8023696:	9309      	str	r3, [sp, #36]	; 0x24
 8023698:	f5a5 1580 	sub.w	r5, r5, #1048576	; 0x100000
 802369c:	2400      	movs	r4, #0
 802369e:	00e3      	lsls	r3, r4, #3
 80236a0:	930b      	str	r3, [sp, #44]	; 0x2c
 80236a2:	4bc9      	ldr	r3, [pc, #804]	; (80239c8 <__ieee754_pow+0x750>)
 80236a4:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 80236a8:	ed93 7b00 	vldr	d7, [r3]
 80236ac:	4629      	mov	r1, r5
 80236ae:	ec53 2b17 	vmov	r2, r3, d7
 80236b2:	eeb0 8a47 	vmov.f32	s16, s14
 80236b6:	eef0 8a67 	vmov.f32	s17, s15
 80236ba:	4682      	mov	sl, r0
 80236bc:	f7dc fe04 	bl	80002c8 <__aeabi_dsub>
 80236c0:	4652      	mov	r2, sl
 80236c2:	4606      	mov	r6, r0
 80236c4:	460f      	mov	r7, r1
 80236c6:	462b      	mov	r3, r5
 80236c8:	ec51 0b18 	vmov	r0, r1, d8
 80236cc:	f7dc fdfe 	bl	80002cc <__adddf3>
 80236d0:	4602      	mov	r2, r0
 80236d2:	460b      	mov	r3, r1
 80236d4:	2000      	movs	r0, #0
 80236d6:	49bd      	ldr	r1, [pc, #756]	; (80239cc <__ieee754_pow+0x754>)
 80236d8:	f7dd f8d8 	bl	800088c <__aeabi_ddiv>
 80236dc:	ec41 0b19 	vmov	d9, r0, r1
 80236e0:	4602      	mov	r2, r0
 80236e2:	460b      	mov	r3, r1
 80236e4:	4630      	mov	r0, r6
 80236e6:	4639      	mov	r1, r7
 80236e8:	f7dc ffa6 	bl	8000638 <__aeabi_dmul>
 80236ec:	e9cd 0106 	strd	r0, r1, [sp, #24]
 80236f0:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80236f4:	e9cd 2304 	strd	r2, r3, [sp, #16]
 80236f8:	2300      	movs	r3, #0
 80236fa:	9304      	str	r3, [sp, #16]
 80236fc:	e9dd 8904 	ldrd	r8, r9, [sp, #16]
 8023700:	46ab      	mov	fp, r5
 8023702:	106d      	asrs	r5, r5, #1
 8023704:	f045 5500 	orr.w	r5, r5, #536870912	; 0x20000000
 8023708:	f505 2500 	add.w	r5, r5, #524288	; 0x80000
 802370c:	eb05 4384 	add.w	r3, r5, r4, lsl #18
 8023710:	2200      	movs	r2, #0
 8023712:	4640      	mov	r0, r8
 8023714:	4649      	mov	r1, r9
 8023716:	4614      	mov	r4, r2
 8023718:	461d      	mov	r5, r3
 802371a:	f7dc ff8d 	bl	8000638 <__aeabi_dmul>
 802371e:	4602      	mov	r2, r0
 8023720:	460b      	mov	r3, r1
 8023722:	4630      	mov	r0, r6
 8023724:	4639      	mov	r1, r7
 8023726:	f7dc fdcf 	bl	80002c8 <__aeabi_dsub>
 802372a:	ec53 2b18 	vmov	r2, r3, d8
 802372e:	4606      	mov	r6, r0
 8023730:	460f      	mov	r7, r1
 8023732:	4620      	mov	r0, r4
 8023734:	4629      	mov	r1, r5
 8023736:	f7dc fdc7 	bl	80002c8 <__aeabi_dsub>
 802373a:	4602      	mov	r2, r0
 802373c:	460b      	mov	r3, r1
 802373e:	4650      	mov	r0, sl
 8023740:	4659      	mov	r1, fp
 8023742:	f7dc fdc1 	bl	80002c8 <__aeabi_dsub>
 8023746:	4642      	mov	r2, r8
 8023748:	464b      	mov	r3, r9
 802374a:	f7dc ff75 	bl	8000638 <__aeabi_dmul>
 802374e:	4602      	mov	r2, r0
 8023750:	460b      	mov	r3, r1
 8023752:	4630      	mov	r0, r6
 8023754:	4639      	mov	r1, r7
 8023756:	f7dc fdb7 	bl	80002c8 <__aeabi_dsub>
 802375a:	ec53 2b19 	vmov	r2, r3, d9
 802375e:	f7dc ff6b 	bl	8000638 <__aeabi_dmul>
 8023762:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8023766:	ec41 0b18 	vmov	d8, r0, r1
 802376a:	4610      	mov	r0, r2
 802376c:	4619      	mov	r1, r3
 802376e:	f7dc ff63 	bl	8000638 <__aeabi_dmul>
 8023772:	a37d      	add	r3, pc, #500	; (adr r3, 8023968 <__ieee754_pow+0x6f0>)
 8023774:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023778:	4604      	mov	r4, r0
 802377a:	460d      	mov	r5, r1
 802377c:	f7dc ff5c 	bl	8000638 <__aeabi_dmul>
 8023780:	a37b      	add	r3, pc, #492	; (adr r3, 8023970 <__ieee754_pow+0x6f8>)
 8023782:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023786:	f7dc fda1 	bl	80002cc <__adddf3>
 802378a:	4622      	mov	r2, r4
 802378c:	462b      	mov	r3, r5
 802378e:	f7dc ff53 	bl	8000638 <__aeabi_dmul>
 8023792:	a379      	add	r3, pc, #484	; (adr r3, 8023978 <__ieee754_pow+0x700>)
 8023794:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023798:	f7dc fd98 	bl	80002cc <__adddf3>
 802379c:	4622      	mov	r2, r4
 802379e:	462b      	mov	r3, r5
 80237a0:	f7dc ff4a 	bl	8000638 <__aeabi_dmul>
 80237a4:	a376      	add	r3, pc, #472	; (adr r3, 8023980 <__ieee754_pow+0x708>)
 80237a6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80237aa:	f7dc fd8f 	bl	80002cc <__adddf3>
 80237ae:	4622      	mov	r2, r4
 80237b0:	462b      	mov	r3, r5
 80237b2:	f7dc ff41 	bl	8000638 <__aeabi_dmul>
 80237b6:	a374      	add	r3, pc, #464	; (adr r3, 8023988 <__ieee754_pow+0x710>)
 80237b8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80237bc:	f7dc fd86 	bl	80002cc <__adddf3>
 80237c0:	4622      	mov	r2, r4
 80237c2:	462b      	mov	r3, r5
 80237c4:	f7dc ff38 	bl	8000638 <__aeabi_dmul>
 80237c8:	a371      	add	r3, pc, #452	; (adr r3, 8023990 <__ieee754_pow+0x718>)
 80237ca:	e9d3 2300 	ldrd	r2, r3, [r3]
 80237ce:	f7dc fd7d 	bl	80002cc <__adddf3>
 80237d2:	4622      	mov	r2, r4
 80237d4:	4606      	mov	r6, r0
 80237d6:	460f      	mov	r7, r1
 80237d8:	462b      	mov	r3, r5
 80237da:	4620      	mov	r0, r4
 80237dc:	4629      	mov	r1, r5
 80237de:	f7dc ff2b 	bl	8000638 <__aeabi_dmul>
 80237e2:	4602      	mov	r2, r0
 80237e4:	460b      	mov	r3, r1
 80237e6:	4630      	mov	r0, r6
 80237e8:	4639      	mov	r1, r7
 80237ea:	f7dc ff25 	bl	8000638 <__aeabi_dmul>
 80237ee:	4642      	mov	r2, r8
 80237f0:	4604      	mov	r4, r0
 80237f2:	460d      	mov	r5, r1
 80237f4:	464b      	mov	r3, r9
 80237f6:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80237fa:	f7dc fd67 	bl	80002cc <__adddf3>
 80237fe:	ec53 2b18 	vmov	r2, r3, d8
 8023802:	f7dc ff19 	bl	8000638 <__aeabi_dmul>
 8023806:	4622      	mov	r2, r4
 8023808:	462b      	mov	r3, r5
 802380a:	f7dc fd5f 	bl	80002cc <__adddf3>
 802380e:	4642      	mov	r2, r8
 8023810:	4682      	mov	sl, r0
 8023812:	468b      	mov	fp, r1
 8023814:	464b      	mov	r3, r9
 8023816:	4640      	mov	r0, r8
 8023818:	4649      	mov	r1, r9
 802381a:	f7dc ff0d 	bl	8000638 <__aeabi_dmul>
 802381e:	4b6c      	ldr	r3, [pc, #432]	; (80239d0 <__ieee754_pow+0x758>)
 8023820:	2200      	movs	r2, #0
 8023822:	4606      	mov	r6, r0
 8023824:	460f      	mov	r7, r1
 8023826:	f7dc fd51 	bl	80002cc <__adddf3>
 802382a:	4652      	mov	r2, sl
 802382c:	465b      	mov	r3, fp
 802382e:	f7dc fd4d 	bl	80002cc <__adddf3>
 8023832:	9c04      	ldr	r4, [sp, #16]
 8023834:	460d      	mov	r5, r1
 8023836:	4622      	mov	r2, r4
 8023838:	460b      	mov	r3, r1
 802383a:	4640      	mov	r0, r8
 802383c:	4649      	mov	r1, r9
 802383e:	f7dc fefb 	bl	8000638 <__aeabi_dmul>
 8023842:	4b63      	ldr	r3, [pc, #396]	; (80239d0 <__ieee754_pow+0x758>)
 8023844:	4680      	mov	r8, r0
 8023846:	4689      	mov	r9, r1
 8023848:	2200      	movs	r2, #0
 802384a:	4620      	mov	r0, r4
 802384c:	4629      	mov	r1, r5
 802384e:	f7dc fd3b 	bl	80002c8 <__aeabi_dsub>
 8023852:	4632      	mov	r2, r6
 8023854:	463b      	mov	r3, r7
 8023856:	f7dc fd37 	bl	80002c8 <__aeabi_dsub>
 802385a:	4602      	mov	r2, r0
 802385c:	460b      	mov	r3, r1
 802385e:	4650      	mov	r0, sl
 8023860:	4659      	mov	r1, fp
 8023862:	f7dc fd31 	bl	80002c8 <__aeabi_dsub>
 8023866:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 802386a:	f7dc fee5 	bl	8000638 <__aeabi_dmul>
 802386e:	4622      	mov	r2, r4
 8023870:	4606      	mov	r6, r0
 8023872:	460f      	mov	r7, r1
 8023874:	462b      	mov	r3, r5
 8023876:	ec51 0b18 	vmov	r0, r1, d8
 802387a:	f7dc fedd 	bl	8000638 <__aeabi_dmul>
 802387e:	4602      	mov	r2, r0
 8023880:	460b      	mov	r3, r1
 8023882:	4630      	mov	r0, r6
 8023884:	4639      	mov	r1, r7
 8023886:	f7dc fd21 	bl	80002cc <__adddf3>
 802388a:	4606      	mov	r6, r0
 802388c:	460f      	mov	r7, r1
 802388e:	4602      	mov	r2, r0
 8023890:	460b      	mov	r3, r1
 8023892:	4640      	mov	r0, r8
 8023894:	4649      	mov	r1, r9
 8023896:	f7dc fd19 	bl	80002cc <__adddf3>
 802389a:	9c04      	ldr	r4, [sp, #16]
 802389c:	a33e      	add	r3, pc, #248	; (adr r3, 8023998 <__ieee754_pow+0x720>)
 802389e:	e9d3 2300 	ldrd	r2, r3, [r3]
 80238a2:	4620      	mov	r0, r4
 80238a4:	460d      	mov	r5, r1
 80238a6:	f7dc fec7 	bl	8000638 <__aeabi_dmul>
 80238aa:	4642      	mov	r2, r8
 80238ac:	ec41 0b18 	vmov	d8, r0, r1
 80238b0:	464b      	mov	r3, r9
 80238b2:	4620      	mov	r0, r4
 80238b4:	4629      	mov	r1, r5
 80238b6:	f7dc fd07 	bl	80002c8 <__aeabi_dsub>
 80238ba:	4602      	mov	r2, r0
 80238bc:	460b      	mov	r3, r1
 80238be:	4630      	mov	r0, r6
 80238c0:	4639      	mov	r1, r7
 80238c2:	f7dc fd01 	bl	80002c8 <__aeabi_dsub>
 80238c6:	a336      	add	r3, pc, #216	; (adr r3, 80239a0 <__ieee754_pow+0x728>)
 80238c8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80238cc:	f7dc feb4 	bl	8000638 <__aeabi_dmul>
 80238d0:	a335      	add	r3, pc, #212	; (adr r3, 80239a8 <__ieee754_pow+0x730>)
 80238d2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80238d6:	4606      	mov	r6, r0
 80238d8:	460f      	mov	r7, r1
 80238da:	4620      	mov	r0, r4
 80238dc:	4629      	mov	r1, r5
 80238de:	f7dc feab 	bl	8000638 <__aeabi_dmul>
 80238e2:	4602      	mov	r2, r0
 80238e4:	460b      	mov	r3, r1
 80238e6:	4630      	mov	r0, r6
 80238e8:	4639      	mov	r1, r7
 80238ea:	f7dc fcef 	bl	80002cc <__adddf3>
 80238ee:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80238f0:	4b38      	ldr	r3, [pc, #224]	; (80239d4 <__ieee754_pow+0x75c>)
 80238f2:	4413      	add	r3, r2
 80238f4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80238f8:	f7dc fce8 	bl	80002cc <__adddf3>
 80238fc:	4682      	mov	sl, r0
 80238fe:	9809      	ldr	r0, [sp, #36]	; 0x24
 8023900:	468b      	mov	fp, r1
 8023902:	f7dc fe2f 	bl	8000564 <__aeabi_i2d>
 8023906:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8023908:	4b33      	ldr	r3, [pc, #204]	; (80239d8 <__ieee754_pow+0x760>)
 802390a:	4413      	add	r3, r2
 802390c:	e9d3 8900 	ldrd	r8, r9, [r3]
 8023910:	4606      	mov	r6, r0
 8023912:	460f      	mov	r7, r1
 8023914:	4652      	mov	r2, sl
 8023916:	465b      	mov	r3, fp
 8023918:	ec51 0b18 	vmov	r0, r1, d8
 802391c:	f7dc fcd6 	bl	80002cc <__adddf3>
 8023920:	4642      	mov	r2, r8
 8023922:	464b      	mov	r3, r9
 8023924:	f7dc fcd2 	bl	80002cc <__adddf3>
 8023928:	4632      	mov	r2, r6
 802392a:	463b      	mov	r3, r7
 802392c:	f7dc fcce 	bl	80002cc <__adddf3>
 8023930:	9c04      	ldr	r4, [sp, #16]
 8023932:	4632      	mov	r2, r6
 8023934:	463b      	mov	r3, r7
 8023936:	4620      	mov	r0, r4
 8023938:	460d      	mov	r5, r1
 802393a:	f7dc fcc5 	bl	80002c8 <__aeabi_dsub>
 802393e:	4642      	mov	r2, r8
 8023940:	464b      	mov	r3, r9
 8023942:	f7dc fcc1 	bl	80002c8 <__aeabi_dsub>
 8023946:	ec53 2b18 	vmov	r2, r3, d8
 802394a:	f7dc fcbd 	bl	80002c8 <__aeabi_dsub>
 802394e:	4602      	mov	r2, r0
 8023950:	460b      	mov	r3, r1
 8023952:	4650      	mov	r0, sl
 8023954:	4659      	mov	r1, fp
 8023956:	e606      	b.n	8023566 <__ieee754_pow+0x2ee>
 8023958:	2401      	movs	r4, #1
 802395a:	e6a0      	b.n	802369e <__ieee754_pow+0x426>
 802395c:	ed9f 7b14 	vldr	d7, [pc, #80]	; 80239b0 <__ieee754_pow+0x738>
 8023960:	e60d      	b.n	802357e <__ieee754_pow+0x306>
 8023962:	bf00      	nop
 8023964:	f3af 8000 	nop.w
 8023968:	4a454eef 	.word	0x4a454eef
 802396c:	3fca7e28 	.word	0x3fca7e28
 8023970:	93c9db65 	.word	0x93c9db65
 8023974:	3fcd864a 	.word	0x3fcd864a
 8023978:	a91d4101 	.word	0xa91d4101
 802397c:	3fd17460 	.word	0x3fd17460
 8023980:	518f264d 	.word	0x518f264d
 8023984:	3fd55555 	.word	0x3fd55555
 8023988:	db6fabff 	.word	0xdb6fabff
 802398c:	3fdb6db6 	.word	0x3fdb6db6
 8023990:	33333303 	.word	0x33333303
 8023994:	3fe33333 	.word	0x3fe33333
 8023998:	e0000000 	.word	0xe0000000
 802399c:	3feec709 	.word	0x3feec709
 80239a0:	dc3a03fd 	.word	0xdc3a03fd
 80239a4:	3feec709 	.word	0x3feec709
 80239a8:	145b01f5 	.word	0x145b01f5
 80239ac:	be3e2fe0 	.word	0xbe3e2fe0
 80239b0:	00000000 	.word	0x00000000
 80239b4:	3ff00000 	.word	0x3ff00000
 80239b8:	7ff00000 	.word	0x7ff00000
 80239bc:	43400000 	.word	0x43400000
 80239c0:	0003988e 	.word	0x0003988e
 80239c4:	000bb679 	.word	0x000bb679
 80239c8:	080283a0 	.word	0x080283a0
 80239cc:	3ff00000 	.word	0x3ff00000
 80239d0:	40080000 	.word	0x40080000
 80239d4:	080283c0 	.word	0x080283c0
 80239d8:	080283b0 	.word	0x080283b0
 80239dc:	a3b5      	add	r3, pc, #724	; (adr r3, 8023cb4 <__ieee754_pow+0xa3c>)
 80239de:	e9d3 2300 	ldrd	r2, r3, [r3]
 80239e2:	4640      	mov	r0, r8
 80239e4:	4649      	mov	r1, r9
 80239e6:	f7dc fc71 	bl	80002cc <__adddf3>
 80239ea:	4622      	mov	r2, r4
 80239ec:	ec41 0b1a 	vmov	d10, r0, r1
 80239f0:	462b      	mov	r3, r5
 80239f2:	4630      	mov	r0, r6
 80239f4:	4639      	mov	r1, r7
 80239f6:	f7dc fc67 	bl	80002c8 <__aeabi_dsub>
 80239fa:	4602      	mov	r2, r0
 80239fc:	460b      	mov	r3, r1
 80239fe:	ec51 0b1a 	vmov	r0, r1, d10
 8023a02:	f7dd f8a9 	bl	8000b58 <__aeabi_dcmpgt>
 8023a06:	2800      	cmp	r0, #0
 8023a08:	f47f adf8 	bne.w	80235fc <__ieee754_pow+0x384>
 8023a0c:	4aa4      	ldr	r2, [pc, #656]	; (8023ca0 <__ieee754_pow+0xa28>)
 8023a0e:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 8023a12:	4293      	cmp	r3, r2
 8023a14:	f340 810b 	ble.w	8023c2e <__ieee754_pow+0x9b6>
 8023a18:	151b      	asrs	r3, r3, #20
 8023a1a:	f44f 1a80 	mov.w	sl, #1048576	; 0x100000
 8023a1e:	f2a3 33fe 	subw	r3, r3, #1022	; 0x3fe
 8023a22:	fa4a f303 	asr.w	r3, sl, r3
 8023a26:	445b      	add	r3, fp
 8023a28:	f3c3 520a 	ubfx	r2, r3, #20, #11
 8023a2c:	4e9d      	ldr	r6, [pc, #628]	; (8023ca4 <__ieee754_pow+0xa2c>)
 8023a2e:	f2a2 32ff 	subw	r2, r2, #1023	; 0x3ff
 8023a32:	4116      	asrs	r6, r2
 8023a34:	f3c3 0a13 	ubfx	sl, r3, #0, #20
 8023a38:	2000      	movs	r0, #0
 8023a3a:	ea23 0106 	bic.w	r1, r3, r6
 8023a3e:	f1c2 0214 	rsb	r2, r2, #20
 8023a42:	f44a 1a80 	orr.w	sl, sl, #1048576	; 0x100000
 8023a46:	fa4a fa02 	asr.w	sl, sl, r2
 8023a4a:	f1bb 0f00 	cmp.w	fp, #0
 8023a4e:	4602      	mov	r2, r0
 8023a50:	460b      	mov	r3, r1
 8023a52:	4620      	mov	r0, r4
 8023a54:	4629      	mov	r1, r5
 8023a56:	bfb8      	it	lt
 8023a58:	f1ca 0a00 	rsblt	sl, sl, #0
 8023a5c:	f7dc fc34 	bl	80002c8 <__aeabi_dsub>
 8023a60:	ec41 0b19 	vmov	d9, r0, r1
 8023a64:	4642      	mov	r2, r8
 8023a66:	464b      	mov	r3, r9
 8023a68:	ec51 0b19 	vmov	r0, r1, d9
 8023a6c:	f7dc fc2e 	bl	80002cc <__adddf3>
 8023a70:	2400      	movs	r4, #0
 8023a72:	a379      	add	r3, pc, #484	; (adr r3, 8023c58 <__ieee754_pow+0x9e0>)
 8023a74:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023a78:	4620      	mov	r0, r4
 8023a7a:	460d      	mov	r5, r1
 8023a7c:	f7dc fddc 	bl	8000638 <__aeabi_dmul>
 8023a80:	ec53 2b19 	vmov	r2, r3, d9
 8023a84:	4606      	mov	r6, r0
 8023a86:	460f      	mov	r7, r1
 8023a88:	4620      	mov	r0, r4
 8023a8a:	4629      	mov	r1, r5
 8023a8c:	f7dc fc1c 	bl	80002c8 <__aeabi_dsub>
 8023a90:	4602      	mov	r2, r0
 8023a92:	460b      	mov	r3, r1
 8023a94:	4640      	mov	r0, r8
 8023a96:	4649      	mov	r1, r9
 8023a98:	f7dc fc16 	bl	80002c8 <__aeabi_dsub>
 8023a9c:	a370      	add	r3, pc, #448	; (adr r3, 8023c60 <__ieee754_pow+0x9e8>)
 8023a9e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023aa2:	f7dc fdc9 	bl	8000638 <__aeabi_dmul>
 8023aa6:	a370      	add	r3, pc, #448	; (adr r3, 8023c68 <__ieee754_pow+0x9f0>)
 8023aa8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023aac:	4680      	mov	r8, r0
 8023aae:	4689      	mov	r9, r1
 8023ab0:	4620      	mov	r0, r4
 8023ab2:	4629      	mov	r1, r5
 8023ab4:	f7dc fdc0 	bl	8000638 <__aeabi_dmul>
 8023ab8:	4602      	mov	r2, r0
 8023aba:	460b      	mov	r3, r1
 8023abc:	4640      	mov	r0, r8
 8023abe:	4649      	mov	r1, r9
 8023ac0:	f7dc fc04 	bl	80002cc <__adddf3>
 8023ac4:	4604      	mov	r4, r0
 8023ac6:	460d      	mov	r5, r1
 8023ac8:	4602      	mov	r2, r0
 8023aca:	460b      	mov	r3, r1
 8023acc:	4630      	mov	r0, r6
 8023ace:	4639      	mov	r1, r7
 8023ad0:	f7dc fbfc 	bl	80002cc <__adddf3>
 8023ad4:	4632      	mov	r2, r6
 8023ad6:	463b      	mov	r3, r7
 8023ad8:	4680      	mov	r8, r0
 8023ada:	4689      	mov	r9, r1
 8023adc:	f7dc fbf4 	bl	80002c8 <__aeabi_dsub>
 8023ae0:	4602      	mov	r2, r0
 8023ae2:	460b      	mov	r3, r1
 8023ae4:	4620      	mov	r0, r4
 8023ae6:	4629      	mov	r1, r5
 8023ae8:	f7dc fbee 	bl	80002c8 <__aeabi_dsub>
 8023aec:	4642      	mov	r2, r8
 8023aee:	4606      	mov	r6, r0
 8023af0:	460f      	mov	r7, r1
 8023af2:	464b      	mov	r3, r9
 8023af4:	4640      	mov	r0, r8
 8023af6:	4649      	mov	r1, r9
 8023af8:	f7dc fd9e 	bl	8000638 <__aeabi_dmul>
 8023afc:	a35c      	add	r3, pc, #368	; (adr r3, 8023c70 <__ieee754_pow+0x9f8>)
 8023afe:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023b02:	4604      	mov	r4, r0
 8023b04:	460d      	mov	r5, r1
 8023b06:	f7dc fd97 	bl	8000638 <__aeabi_dmul>
 8023b0a:	a35b      	add	r3, pc, #364	; (adr r3, 8023c78 <__ieee754_pow+0xa00>)
 8023b0c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023b10:	f7dc fbda 	bl	80002c8 <__aeabi_dsub>
 8023b14:	4622      	mov	r2, r4
 8023b16:	462b      	mov	r3, r5
 8023b18:	f7dc fd8e 	bl	8000638 <__aeabi_dmul>
 8023b1c:	a358      	add	r3, pc, #352	; (adr r3, 8023c80 <__ieee754_pow+0xa08>)
 8023b1e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023b22:	f7dc fbd3 	bl	80002cc <__adddf3>
 8023b26:	4622      	mov	r2, r4
 8023b28:	462b      	mov	r3, r5
 8023b2a:	f7dc fd85 	bl	8000638 <__aeabi_dmul>
 8023b2e:	a356      	add	r3, pc, #344	; (adr r3, 8023c88 <__ieee754_pow+0xa10>)
 8023b30:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023b34:	f7dc fbc8 	bl	80002c8 <__aeabi_dsub>
 8023b38:	4622      	mov	r2, r4
 8023b3a:	462b      	mov	r3, r5
 8023b3c:	f7dc fd7c 	bl	8000638 <__aeabi_dmul>
 8023b40:	a353      	add	r3, pc, #332	; (adr r3, 8023c90 <__ieee754_pow+0xa18>)
 8023b42:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023b46:	f7dc fbc1 	bl	80002cc <__adddf3>
 8023b4a:	4622      	mov	r2, r4
 8023b4c:	462b      	mov	r3, r5
 8023b4e:	f7dc fd73 	bl	8000638 <__aeabi_dmul>
 8023b52:	4602      	mov	r2, r0
 8023b54:	460b      	mov	r3, r1
 8023b56:	4640      	mov	r0, r8
 8023b58:	4649      	mov	r1, r9
 8023b5a:	f7dc fbb5 	bl	80002c8 <__aeabi_dsub>
 8023b5e:	4604      	mov	r4, r0
 8023b60:	460d      	mov	r5, r1
 8023b62:	4602      	mov	r2, r0
 8023b64:	460b      	mov	r3, r1
 8023b66:	4640      	mov	r0, r8
 8023b68:	4649      	mov	r1, r9
 8023b6a:	f7dc fd65 	bl	8000638 <__aeabi_dmul>
 8023b6e:	2200      	movs	r2, #0
 8023b70:	ec41 0b19 	vmov	d9, r0, r1
 8023b74:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8023b78:	4620      	mov	r0, r4
 8023b7a:	4629      	mov	r1, r5
 8023b7c:	f7dc fba4 	bl	80002c8 <__aeabi_dsub>
 8023b80:	4602      	mov	r2, r0
 8023b82:	460b      	mov	r3, r1
 8023b84:	ec51 0b19 	vmov	r0, r1, d9
 8023b88:	f7dc fe80 	bl	800088c <__aeabi_ddiv>
 8023b8c:	4632      	mov	r2, r6
 8023b8e:	4604      	mov	r4, r0
 8023b90:	460d      	mov	r5, r1
 8023b92:	463b      	mov	r3, r7
 8023b94:	4640      	mov	r0, r8
 8023b96:	4649      	mov	r1, r9
 8023b98:	f7dc fd4e 	bl	8000638 <__aeabi_dmul>
 8023b9c:	4632      	mov	r2, r6
 8023b9e:	463b      	mov	r3, r7
 8023ba0:	f7dc fb94 	bl	80002cc <__adddf3>
 8023ba4:	4602      	mov	r2, r0
 8023ba6:	460b      	mov	r3, r1
 8023ba8:	4620      	mov	r0, r4
 8023baa:	4629      	mov	r1, r5
 8023bac:	f7dc fb8c 	bl	80002c8 <__aeabi_dsub>
 8023bb0:	4642      	mov	r2, r8
 8023bb2:	464b      	mov	r3, r9
 8023bb4:	f7dc fb88 	bl	80002c8 <__aeabi_dsub>
 8023bb8:	460b      	mov	r3, r1
 8023bba:	4602      	mov	r2, r0
 8023bbc:	493a      	ldr	r1, [pc, #232]	; (8023ca8 <__ieee754_pow+0xa30>)
 8023bbe:	2000      	movs	r0, #0
 8023bc0:	f7dc fb82 	bl	80002c8 <__aeabi_dsub>
 8023bc4:	e9cd 0100 	strd	r0, r1, [sp]
 8023bc8:	9b01      	ldr	r3, [sp, #4]
 8023bca:	eb03 530a 	add.w	r3, r3, sl, lsl #20
 8023bce:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8023bd2:	da2f      	bge.n	8023c34 <__ieee754_pow+0x9bc>
 8023bd4:	4650      	mov	r0, sl
 8023bd6:	ed9d 0b00 	vldr	d0, [sp]
 8023bda:	f000 f9cd 	bl	8023f78 <scalbn>
 8023bde:	ec51 0b10 	vmov	r0, r1, d0
 8023be2:	ec53 2b18 	vmov	r2, r3, d8
 8023be6:	f7ff bbe0 	b.w	80233aa <__ieee754_pow+0x132>
 8023bea:	4b30      	ldr	r3, [pc, #192]	; (8023cac <__ieee754_pow+0xa34>)
 8023bec:	f021 4600 	bic.w	r6, r1, #2147483648	; 0x80000000
 8023bf0:	429e      	cmp	r6, r3
 8023bf2:	f77f af0b 	ble.w	8023a0c <__ieee754_pow+0x794>
 8023bf6:	4b2e      	ldr	r3, [pc, #184]	; (8023cb0 <__ieee754_pow+0xa38>)
 8023bf8:	440b      	add	r3, r1
 8023bfa:	4303      	orrs	r3, r0
 8023bfc:	d00b      	beq.n	8023c16 <__ieee754_pow+0x99e>
 8023bfe:	a326      	add	r3, pc, #152	; (adr r3, 8023c98 <__ieee754_pow+0xa20>)
 8023c00:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023c04:	ec51 0b18 	vmov	r0, r1, d8
 8023c08:	f7dc fd16 	bl	8000638 <__aeabi_dmul>
 8023c0c:	a322      	add	r3, pc, #136	; (adr r3, 8023c98 <__ieee754_pow+0xa20>)
 8023c0e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023c12:	f7ff bbca 	b.w	80233aa <__ieee754_pow+0x132>
 8023c16:	4622      	mov	r2, r4
 8023c18:	462b      	mov	r3, r5
 8023c1a:	f7dc fb55 	bl	80002c8 <__aeabi_dsub>
 8023c1e:	4642      	mov	r2, r8
 8023c20:	464b      	mov	r3, r9
 8023c22:	f7dc ff8f 	bl	8000b44 <__aeabi_dcmpge>
 8023c26:	2800      	cmp	r0, #0
 8023c28:	f43f aef0 	beq.w	8023a0c <__ieee754_pow+0x794>
 8023c2c:	e7e7      	b.n	8023bfe <__ieee754_pow+0x986>
 8023c2e:	f04f 0a00 	mov.w	sl, #0
 8023c32:	e717      	b.n	8023a64 <__ieee754_pow+0x7ec>
 8023c34:	e9dd 0100 	ldrd	r0, r1, [sp]
 8023c38:	4619      	mov	r1, r3
 8023c3a:	e7d2      	b.n	8023be2 <__ieee754_pow+0x96a>
 8023c3c:	491a      	ldr	r1, [pc, #104]	; (8023ca8 <__ieee754_pow+0xa30>)
 8023c3e:	2000      	movs	r0, #0
 8023c40:	f7ff bb9e 	b.w	8023380 <__ieee754_pow+0x108>
 8023c44:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8023c48:	f7ff bb9a 	b.w	8023380 <__ieee754_pow+0x108>
 8023c4c:	9000      	str	r0, [sp, #0]
 8023c4e:	f7ff bb76 	b.w	802333e <__ieee754_pow+0xc6>
 8023c52:	2100      	movs	r1, #0
 8023c54:	f7ff bb60 	b.w	8023318 <__ieee754_pow+0xa0>
 8023c58:	00000000 	.word	0x00000000
 8023c5c:	3fe62e43 	.word	0x3fe62e43
 8023c60:	fefa39ef 	.word	0xfefa39ef
 8023c64:	3fe62e42 	.word	0x3fe62e42
 8023c68:	0ca86c39 	.word	0x0ca86c39
 8023c6c:	be205c61 	.word	0xbe205c61
 8023c70:	72bea4d0 	.word	0x72bea4d0
 8023c74:	3e663769 	.word	0x3e663769
 8023c78:	c5d26bf1 	.word	0xc5d26bf1
 8023c7c:	3ebbbd41 	.word	0x3ebbbd41
 8023c80:	af25de2c 	.word	0xaf25de2c
 8023c84:	3f11566a 	.word	0x3f11566a
 8023c88:	16bebd93 	.word	0x16bebd93
 8023c8c:	3f66c16c 	.word	0x3f66c16c
 8023c90:	5555553e 	.word	0x5555553e
 8023c94:	3fc55555 	.word	0x3fc55555
 8023c98:	c2f8f359 	.word	0xc2f8f359
 8023c9c:	01a56e1f 	.word	0x01a56e1f
 8023ca0:	3fe00000 	.word	0x3fe00000
 8023ca4:	000fffff 	.word	0x000fffff
 8023ca8:	3ff00000 	.word	0x3ff00000
 8023cac:	4090cbff 	.word	0x4090cbff
 8023cb0:	3f6f3400 	.word	0x3f6f3400
 8023cb4:	652b82fe 	.word	0x652b82fe
 8023cb8:	3c971547 	.word	0x3c971547

08023cbc <__ieee754_sqrt>:
 8023cbc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8023cc0:	ec55 4b10 	vmov	r4, r5, d0
 8023cc4:	4e56      	ldr	r6, [pc, #344]	; (8023e20 <__ieee754_sqrt+0x164>)
 8023cc6:	43ae      	bics	r6, r5
 8023cc8:	ee10 0a10 	vmov	r0, s0
 8023ccc:	ee10 3a10 	vmov	r3, s0
 8023cd0:	4629      	mov	r1, r5
 8023cd2:	462a      	mov	r2, r5
 8023cd4:	d110      	bne.n	8023cf8 <__ieee754_sqrt+0x3c>
 8023cd6:	ee10 2a10 	vmov	r2, s0
 8023cda:	462b      	mov	r3, r5
 8023cdc:	f7dc fcac 	bl	8000638 <__aeabi_dmul>
 8023ce0:	4602      	mov	r2, r0
 8023ce2:	460b      	mov	r3, r1
 8023ce4:	4620      	mov	r0, r4
 8023ce6:	4629      	mov	r1, r5
 8023ce8:	f7dc faf0 	bl	80002cc <__adddf3>
 8023cec:	4604      	mov	r4, r0
 8023cee:	460d      	mov	r5, r1
 8023cf0:	ec45 4b10 	vmov	d0, r4, r5
 8023cf4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8023cf8:	2d00      	cmp	r5, #0
 8023cfa:	dc10      	bgt.n	8023d1e <__ieee754_sqrt+0x62>
 8023cfc:	f025 4600 	bic.w	r6, r5, #2147483648	; 0x80000000
 8023d00:	4330      	orrs	r0, r6
 8023d02:	d0f5      	beq.n	8023cf0 <__ieee754_sqrt+0x34>
 8023d04:	b15d      	cbz	r5, 8023d1e <__ieee754_sqrt+0x62>
 8023d06:	ee10 2a10 	vmov	r2, s0
 8023d0a:	462b      	mov	r3, r5
 8023d0c:	ee10 0a10 	vmov	r0, s0
 8023d10:	f7dc fada 	bl	80002c8 <__aeabi_dsub>
 8023d14:	4602      	mov	r2, r0
 8023d16:	460b      	mov	r3, r1
 8023d18:	f7dc fdb8 	bl	800088c <__aeabi_ddiv>
 8023d1c:	e7e6      	b.n	8023cec <__ieee754_sqrt+0x30>
 8023d1e:	1509      	asrs	r1, r1, #20
 8023d20:	d076      	beq.n	8023e10 <__ieee754_sqrt+0x154>
 8023d22:	f3c2 0213 	ubfx	r2, r2, #0, #20
 8023d26:	07ce      	lsls	r6, r1, #31
 8023d28:	f442 1080 	orr.w	r0, r2, #1048576	; 0x100000
 8023d2c:	bf5e      	ittt	pl
 8023d2e:	0fda      	lsrpl	r2, r3, #31
 8023d30:	005b      	lslpl	r3, r3, #1
 8023d32:	eb02 0040 	addpl.w	r0, r2, r0, lsl #1
 8023d36:	0fda      	lsrs	r2, r3, #31
 8023d38:	f2a1 35ff 	subw	r5, r1, #1023	; 0x3ff
 8023d3c:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8023d40:	2000      	movs	r0, #0
 8023d42:	106d      	asrs	r5, r5, #1
 8023d44:	005b      	lsls	r3, r3, #1
 8023d46:	f04f 0e16 	mov.w	lr, #22
 8023d4a:	4684      	mov	ip, r0
 8023d4c:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
 8023d50:	eb0c 0401 	add.w	r4, ip, r1
 8023d54:	4294      	cmp	r4, r2
 8023d56:	bfde      	ittt	le
 8023d58:	1b12      	suble	r2, r2, r4
 8023d5a:	eb04 0c01 	addle.w	ip, r4, r1
 8023d5e:	1840      	addle	r0, r0, r1
 8023d60:	0052      	lsls	r2, r2, #1
 8023d62:	f1be 0e01 	subs.w	lr, lr, #1
 8023d66:	eb02 72d3 	add.w	r2, r2, r3, lsr #31
 8023d6a:	ea4f 0151 	mov.w	r1, r1, lsr #1
 8023d6e:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8023d72:	d1ed      	bne.n	8023d50 <__ieee754_sqrt+0x94>
 8023d74:	4671      	mov	r1, lr
 8023d76:	2720      	movs	r7, #32
 8023d78:	f04f 4400 	mov.w	r4, #2147483648	; 0x80000000
 8023d7c:	4562      	cmp	r2, ip
 8023d7e:	eb04 060e 	add.w	r6, r4, lr
 8023d82:	dc02      	bgt.n	8023d8a <__ieee754_sqrt+0xce>
 8023d84:	d113      	bne.n	8023dae <__ieee754_sqrt+0xf2>
 8023d86:	429e      	cmp	r6, r3
 8023d88:	d811      	bhi.n	8023dae <__ieee754_sqrt+0xf2>
 8023d8a:	2e00      	cmp	r6, #0
 8023d8c:	eb06 0e04 	add.w	lr, r6, r4
 8023d90:	da43      	bge.n	8023e1a <__ieee754_sqrt+0x15e>
 8023d92:	f1be 0f00 	cmp.w	lr, #0
 8023d96:	db40      	blt.n	8023e1a <__ieee754_sqrt+0x15e>
 8023d98:	f10c 0801 	add.w	r8, ip, #1
 8023d9c:	eba2 020c 	sub.w	r2, r2, ip
 8023da0:	429e      	cmp	r6, r3
 8023da2:	bf88      	it	hi
 8023da4:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8023da8:	1b9b      	subs	r3, r3, r6
 8023daa:	4421      	add	r1, r4
 8023dac:	46c4      	mov	ip, r8
 8023dae:	0052      	lsls	r2, r2, #1
 8023db0:	3f01      	subs	r7, #1
 8023db2:	eb02 72d3 	add.w	r2, r2, r3, lsr #31
 8023db6:	ea4f 0454 	mov.w	r4, r4, lsr #1
 8023dba:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8023dbe:	d1dd      	bne.n	8023d7c <__ieee754_sqrt+0xc0>
 8023dc0:	4313      	orrs	r3, r2
 8023dc2:	d006      	beq.n	8023dd2 <__ieee754_sqrt+0x116>
 8023dc4:	1c4c      	adds	r4, r1, #1
 8023dc6:	bf13      	iteet	ne
 8023dc8:	3101      	addne	r1, #1
 8023dca:	3001      	addeq	r0, #1
 8023dcc:	4639      	moveq	r1, r7
 8023dce:	f021 0101 	bicne.w	r1, r1, #1
 8023dd2:	1043      	asrs	r3, r0, #1
 8023dd4:	f103 537f 	add.w	r3, r3, #1069547520	; 0x3fc00000
 8023dd8:	0849      	lsrs	r1, r1, #1
 8023dda:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
 8023dde:	07c2      	lsls	r2, r0, #31
 8023de0:	bf48      	it	mi
 8023de2:	f041 4100 	orrmi.w	r1, r1, #2147483648	; 0x80000000
 8023de6:	eb03 5705 	add.w	r7, r3, r5, lsl #20
 8023dea:	460c      	mov	r4, r1
 8023dec:	463d      	mov	r5, r7
 8023dee:	e77f      	b.n	8023cf0 <__ieee754_sqrt+0x34>
 8023df0:	0ada      	lsrs	r2, r3, #11
 8023df2:	3815      	subs	r0, #21
 8023df4:	055b      	lsls	r3, r3, #21
 8023df6:	2a00      	cmp	r2, #0
 8023df8:	d0fa      	beq.n	8023df0 <__ieee754_sqrt+0x134>
 8023dfa:	02d7      	lsls	r7, r2, #11
 8023dfc:	d50a      	bpl.n	8023e14 <__ieee754_sqrt+0x158>
 8023dfe:	f1c1 0420 	rsb	r4, r1, #32
 8023e02:	fa23 f404 	lsr.w	r4, r3, r4
 8023e06:	1e4d      	subs	r5, r1, #1
 8023e08:	408b      	lsls	r3, r1
 8023e0a:	4322      	orrs	r2, r4
 8023e0c:	1b41      	subs	r1, r0, r5
 8023e0e:	e788      	b.n	8023d22 <__ieee754_sqrt+0x66>
 8023e10:	4608      	mov	r0, r1
 8023e12:	e7f0      	b.n	8023df6 <__ieee754_sqrt+0x13a>
 8023e14:	0052      	lsls	r2, r2, #1
 8023e16:	3101      	adds	r1, #1
 8023e18:	e7ef      	b.n	8023dfa <__ieee754_sqrt+0x13e>
 8023e1a:	46e0      	mov	r8, ip
 8023e1c:	e7be      	b.n	8023d9c <__ieee754_sqrt+0xe0>
 8023e1e:	bf00      	nop
 8023e20:	7ff00000 	.word	0x7ff00000

08023e24 <fabs>:
 8023e24:	ec51 0b10 	vmov	r0, r1, d0
 8023e28:	ee10 2a10 	vmov	r2, s0
 8023e2c:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 8023e30:	ec43 2b10 	vmov	d0, r2, r3
 8023e34:	4770      	bx	lr

08023e36 <finite>:
 8023e36:	b082      	sub	sp, #8
 8023e38:	ed8d 0b00 	vstr	d0, [sp]
 8023e3c:	9801      	ldr	r0, [sp, #4]
 8023e3e:	f040 4000 	orr.w	r0, r0, #2147483648	; 0x80000000
 8023e42:	f500 1080 	add.w	r0, r0, #1048576	; 0x100000
 8023e46:	0fc0      	lsrs	r0, r0, #31
 8023e48:	b002      	add	sp, #8
 8023e4a:	4770      	bx	lr
 8023e4c:	0000      	movs	r0, r0
	...

08023e50 <nan>:
 8023e50:	ed9f 0b01 	vldr	d0, [pc, #4]	; 8023e58 <nan+0x8>
 8023e54:	4770      	bx	lr
 8023e56:	bf00      	nop
 8023e58:	00000000 	.word	0x00000000
 8023e5c:	7ff80000 	.word	0x7ff80000

08023e60 <rint>:
 8023e60:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8023e62:	ec51 0b10 	vmov	r0, r1, d0
 8023e66:	f3c1 520a 	ubfx	r2, r1, #20, #11
 8023e6a:	f2a2 36ff 	subw	r6, r2, #1023	; 0x3ff
 8023e6e:	2e13      	cmp	r6, #19
 8023e70:	ee10 4a10 	vmov	r4, s0
 8023e74:	460b      	mov	r3, r1
 8023e76:	ea4f 75d1 	mov.w	r5, r1, lsr #31
 8023e7a:	dc58      	bgt.n	8023f2e <rint+0xce>
 8023e7c:	2e00      	cmp	r6, #0
 8023e7e:	da2b      	bge.n	8023ed8 <rint+0x78>
 8023e80:	f021 4200 	bic.w	r2, r1, #2147483648	; 0x80000000
 8023e84:	4302      	orrs	r2, r0
 8023e86:	d023      	beq.n	8023ed0 <rint+0x70>
 8023e88:	f3c1 0213 	ubfx	r2, r1, #0, #20
 8023e8c:	4302      	orrs	r2, r0
 8023e8e:	4254      	negs	r4, r2
 8023e90:	4314      	orrs	r4, r2
 8023e92:	0c4b      	lsrs	r3, r1, #17
 8023e94:	0b24      	lsrs	r4, r4, #12
 8023e96:	045b      	lsls	r3, r3, #17
 8023e98:	f404 2400 	and.w	r4, r4, #524288	; 0x80000
 8023e9c:	ea44 0103 	orr.w	r1, r4, r3
 8023ea0:	4b32      	ldr	r3, [pc, #200]	; (8023f6c <rint+0x10c>)
 8023ea2:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8023ea6:	e9d3 6700 	ldrd	r6, r7, [r3]
 8023eaa:	4602      	mov	r2, r0
 8023eac:	460b      	mov	r3, r1
 8023eae:	4630      	mov	r0, r6
 8023eb0:	4639      	mov	r1, r7
 8023eb2:	f7dc fa0b 	bl	80002cc <__adddf3>
 8023eb6:	e9cd 0100 	strd	r0, r1, [sp]
 8023eba:	463b      	mov	r3, r7
 8023ebc:	e9dd 0100 	ldrd	r0, r1, [sp]
 8023ec0:	4632      	mov	r2, r6
 8023ec2:	f7dc fa01 	bl	80002c8 <__aeabi_dsub>
 8023ec6:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 8023eca:	ea43 77c5 	orr.w	r7, r3, r5, lsl #31
 8023ece:	4639      	mov	r1, r7
 8023ed0:	ec41 0b10 	vmov	d0, r0, r1
 8023ed4:	b003      	add	sp, #12
 8023ed6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8023ed8:	4a25      	ldr	r2, [pc, #148]	; (8023f70 <rint+0x110>)
 8023eda:	4132      	asrs	r2, r6
 8023edc:	ea01 0702 	and.w	r7, r1, r2
 8023ee0:	4307      	orrs	r7, r0
 8023ee2:	d0f5      	beq.n	8023ed0 <rint+0x70>
 8023ee4:	0851      	lsrs	r1, r2, #1
 8023ee6:	ea03 0252 	and.w	r2, r3, r2, lsr #1
 8023eea:	4314      	orrs	r4, r2
 8023eec:	d00c      	beq.n	8023f08 <rint+0xa8>
 8023eee:	ea23 0201 	bic.w	r2, r3, r1
 8023ef2:	f44f 2380 	mov.w	r3, #262144	; 0x40000
 8023ef6:	2e13      	cmp	r6, #19
 8023ef8:	fa43 f606 	asr.w	r6, r3, r6
 8023efc:	bf0c      	ite	eq
 8023efe:	f04f 4400 	moveq.w	r4, #2147483648	; 0x80000000
 8023f02:	2400      	movne	r4, #0
 8023f04:	ea42 0306 	orr.w	r3, r2, r6
 8023f08:	4918      	ldr	r1, [pc, #96]	; (8023f6c <rint+0x10c>)
 8023f0a:	eb01 05c5 	add.w	r5, r1, r5, lsl #3
 8023f0e:	4622      	mov	r2, r4
 8023f10:	e9d5 4500 	ldrd	r4, r5, [r5]
 8023f14:	4620      	mov	r0, r4
 8023f16:	4629      	mov	r1, r5
 8023f18:	f7dc f9d8 	bl	80002cc <__adddf3>
 8023f1c:	e9cd 0100 	strd	r0, r1, [sp]
 8023f20:	e9dd 0100 	ldrd	r0, r1, [sp]
 8023f24:	4622      	mov	r2, r4
 8023f26:	462b      	mov	r3, r5
 8023f28:	f7dc f9ce 	bl	80002c8 <__aeabi_dsub>
 8023f2c:	e7d0      	b.n	8023ed0 <rint+0x70>
 8023f2e:	2e33      	cmp	r6, #51	; 0x33
 8023f30:	dd07      	ble.n	8023f42 <rint+0xe2>
 8023f32:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 8023f36:	d1cb      	bne.n	8023ed0 <rint+0x70>
 8023f38:	ee10 2a10 	vmov	r2, s0
 8023f3c:	f7dc f9c6 	bl	80002cc <__adddf3>
 8023f40:	e7c6      	b.n	8023ed0 <rint+0x70>
 8023f42:	f2a2 4213 	subw	r2, r2, #1043	; 0x413
 8023f46:	f04f 36ff 	mov.w	r6, #4294967295
 8023f4a:	40d6      	lsrs	r6, r2
 8023f4c:	4230      	tst	r0, r6
 8023f4e:	d0bf      	beq.n	8023ed0 <rint+0x70>
 8023f50:	ea14 0056 	ands.w	r0, r4, r6, lsr #1
 8023f54:	ea4f 0156 	mov.w	r1, r6, lsr #1
 8023f58:	bf1f      	itttt	ne
 8023f5a:	ea24 0101 	bicne.w	r1, r4, r1
 8023f5e:	f04f 4480 	movne.w	r4, #1073741824	; 0x40000000
 8023f62:	fa44 f202 	asrne.w	r2, r4, r2
 8023f66:	ea41 0402 	orrne.w	r4, r1, r2
 8023f6a:	e7cd      	b.n	8023f08 <rint+0xa8>
 8023f6c:	080283d0 	.word	0x080283d0
 8023f70:	000fffff 	.word	0x000fffff
 8023f74:	00000000 	.word	0x00000000

08023f78 <scalbn>:
 8023f78:	b570      	push	{r4, r5, r6, lr}
 8023f7a:	ec55 4b10 	vmov	r4, r5, d0
 8023f7e:	f3c5 520a 	ubfx	r2, r5, #20, #11
 8023f82:	4606      	mov	r6, r0
 8023f84:	462b      	mov	r3, r5
 8023f86:	b99a      	cbnz	r2, 8023fb0 <scalbn+0x38>
 8023f88:	f025 4300 	bic.w	r3, r5, #2147483648	; 0x80000000
 8023f8c:	4323      	orrs	r3, r4
 8023f8e:	d036      	beq.n	8023ffe <scalbn+0x86>
 8023f90:	4b39      	ldr	r3, [pc, #228]	; (8024078 <scalbn+0x100>)
 8023f92:	4629      	mov	r1, r5
 8023f94:	ee10 0a10 	vmov	r0, s0
 8023f98:	2200      	movs	r2, #0
 8023f9a:	f7dc fb4d 	bl	8000638 <__aeabi_dmul>
 8023f9e:	4b37      	ldr	r3, [pc, #220]	; (802407c <scalbn+0x104>)
 8023fa0:	429e      	cmp	r6, r3
 8023fa2:	4604      	mov	r4, r0
 8023fa4:	460d      	mov	r5, r1
 8023fa6:	da10      	bge.n	8023fca <scalbn+0x52>
 8023fa8:	a32b      	add	r3, pc, #172	; (adr r3, 8024058 <scalbn+0xe0>)
 8023faa:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023fae:	e03a      	b.n	8024026 <scalbn+0xae>
 8023fb0:	f240 71ff 	movw	r1, #2047	; 0x7ff
 8023fb4:	428a      	cmp	r2, r1
 8023fb6:	d10c      	bne.n	8023fd2 <scalbn+0x5a>
 8023fb8:	ee10 2a10 	vmov	r2, s0
 8023fbc:	4620      	mov	r0, r4
 8023fbe:	4629      	mov	r1, r5
 8023fc0:	f7dc f984 	bl	80002cc <__adddf3>
 8023fc4:	4604      	mov	r4, r0
 8023fc6:	460d      	mov	r5, r1
 8023fc8:	e019      	b.n	8023ffe <scalbn+0x86>
 8023fca:	f3c1 520a 	ubfx	r2, r1, #20, #11
 8023fce:	460b      	mov	r3, r1
 8023fd0:	3a36      	subs	r2, #54	; 0x36
 8023fd2:	4432      	add	r2, r6
 8023fd4:	f240 71fe 	movw	r1, #2046	; 0x7fe
 8023fd8:	428a      	cmp	r2, r1
 8023fda:	dd08      	ble.n	8023fee <scalbn+0x76>
 8023fdc:	2d00      	cmp	r5, #0
 8023fde:	a120      	add	r1, pc, #128	; (adr r1, 8024060 <scalbn+0xe8>)
 8023fe0:	e9d1 0100 	ldrd	r0, r1, [r1]
 8023fe4:	da1c      	bge.n	8024020 <scalbn+0xa8>
 8023fe6:	a120      	add	r1, pc, #128	; (adr r1, 8024068 <scalbn+0xf0>)
 8023fe8:	e9d1 0100 	ldrd	r0, r1, [r1]
 8023fec:	e018      	b.n	8024020 <scalbn+0xa8>
 8023fee:	2a00      	cmp	r2, #0
 8023ff0:	dd08      	ble.n	8024004 <scalbn+0x8c>
 8023ff2:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8023ff6:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 8023ffa:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
 8023ffe:	ec45 4b10 	vmov	d0, r4, r5
 8024002:	bd70      	pop	{r4, r5, r6, pc}
 8024004:	f112 0f35 	cmn.w	r2, #53	; 0x35
 8024008:	da19      	bge.n	802403e <scalbn+0xc6>
 802400a:	f24c 3350 	movw	r3, #50000	; 0xc350
 802400e:	429e      	cmp	r6, r3
 8024010:	f005 4300 	and.w	r3, r5, #2147483648	; 0x80000000
 8024014:	dd0a      	ble.n	802402c <scalbn+0xb4>
 8024016:	a112      	add	r1, pc, #72	; (adr r1, 8024060 <scalbn+0xe8>)
 8024018:	e9d1 0100 	ldrd	r0, r1, [r1]
 802401c:	2b00      	cmp	r3, #0
 802401e:	d1e2      	bne.n	8023fe6 <scalbn+0x6e>
 8024020:	a30f      	add	r3, pc, #60	; (adr r3, 8024060 <scalbn+0xe8>)
 8024022:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024026:	f7dc fb07 	bl	8000638 <__aeabi_dmul>
 802402a:	e7cb      	b.n	8023fc4 <scalbn+0x4c>
 802402c:	a10a      	add	r1, pc, #40	; (adr r1, 8024058 <scalbn+0xe0>)
 802402e:	e9d1 0100 	ldrd	r0, r1, [r1]
 8024032:	2b00      	cmp	r3, #0
 8024034:	d0b8      	beq.n	8023fa8 <scalbn+0x30>
 8024036:	a10e      	add	r1, pc, #56	; (adr r1, 8024070 <scalbn+0xf8>)
 8024038:	e9d1 0100 	ldrd	r0, r1, [r1]
 802403c:	e7b4      	b.n	8023fa8 <scalbn+0x30>
 802403e:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8024042:	3236      	adds	r2, #54	; 0x36
 8024044:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 8024048:	ea43 5102 	orr.w	r1, r3, r2, lsl #20
 802404c:	4620      	mov	r0, r4
 802404e:	4b0c      	ldr	r3, [pc, #48]	; (8024080 <scalbn+0x108>)
 8024050:	2200      	movs	r2, #0
 8024052:	e7e8      	b.n	8024026 <scalbn+0xae>
 8024054:	f3af 8000 	nop.w
 8024058:	c2f8f359 	.word	0xc2f8f359
 802405c:	01a56e1f 	.word	0x01a56e1f
 8024060:	8800759c 	.word	0x8800759c
 8024064:	7e37e43c 	.word	0x7e37e43c
 8024068:	8800759c 	.word	0x8800759c
 802406c:	fe37e43c 	.word	0xfe37e43c
 8024070:	c2f8f359 	.word	0xc2f8f359
 8024074:	81a56e1f 	.word	0x81a56e1f
 8024078:	43500000 	.word	0x43500000
 802407c:	ffff3cb0 	.word	0xffff3cb0
 8024080:	3c900000 	.word	0x3c900000

08024084 <abort>:
 8024084:	b508      	push	{r3, lr}
 8024086:	2006      	movs	r0, #6
 8024088:	f000 f996 	bl	80243b8 <raise>
 802408c:	2001      	movs	r0, #1
 802408e:	f7fa f879 	bl	801e184 <_exit>

08024092 <atexit>:
 8024092:	2300      	movs	r3, #0
 8024094:	4601      	mov	r1, r0
 8024096:	461a      	mov	r2, r3
 8024098:	4618      	mov	r0, r3
 802409a:	f001 b933 	b.w	8025304 <__register_exitproc>
	...

080240a0 <__errno>:
 80240a0:	4b01      	ldr	r3, [pc, #4]	; (80240a8 <__errno+0x8>)
 80240a2:	6818      	ldr	r0, [r3, #0]
 80240a4:	4770      	bx	lr
 80240a6:	bf00      	nop
 80240a8:	20000010 	.word	0x20000010

080240ac <__libc_init_array>:
 80240ac:	b570      	push	{r4, r5, r6, lr}
 80240ae:	4d0d      	ldr	r5, [pc, #52]	; (80240e4 <__libc_init_array+0x38>)
 80240b0:	4c0d      	ldr	r4, [pc, #52]	; (80240e8 <__libc_init_array+0x3c>)
 80240b2:	1b64      	subs	r4, r4, r5
 80240b4:	10a4      	asrs	r4, r4, #2
 80240b6:	2600      	movs	r6, #0
 80240b8:	42a6      	cmp	r6, r4
 80240ba:	d109      	bne.n	80240d0 <__libc_init_array+0x24>
 80240bc:	4d0b      	ldr	r5, [pc, #44]	; (80240ec <__libc_init_array+0x40>)
 80240be:	4c0c      	ldr	r4, [pc, #48]	; (80240f0 <__libc_init_array+0x44>)
 80240c0:	f003 fa34 	bl	802752c <_init>
 80240c4:	1b64      	subs	r4, r4, r5
 80240c6:	10a4      	asrs	r4, r4, #2
 80240c8:	2600      	movs	r6, #0
 80240ca:	42a6      	cmp	r6, r4
 80240cc:	d105      	bne.n	80240da <__libc_init_array+0x2e>
 80240ce:	bd70      	pop	{r4, r5, r6, pc}
 80240d0:	f855 3b04 	ldr.w	r3, [r5], #4
 80240d4:	4798      	blx	r3
 80240d6:	3601      	adds	r6, #1
 80240d8:	e7ee      	b.n	80240b8 <__libc_init_array+0xc>
 80240da:	f855 3b04 	ldr.w	r3, [r5], #4
 80240de:	4798      	blx	r3
 80240e0:	3601      	adds	r6, #1
 80240e2:	e7f2      	b.n	80240ca <__libc_init_array+0x1e>
 80240e4:	08028844 	.word	0x08028844
 80240e8:	08028844 	.word	0x08028844
 80240ec:	08028844 	.word	0x08028844
 80240f0:	08028880 	.word	0x08028880

080240f4 <isalnum>:
 80240f4:	4b02      	ldr	r3, [pc, #8]	; (8024100 <isalnum+0xc>)
 80240f6:	4418      	add	r0, r3
 80240f8:	7840      	ldrb	r0, [r0, #1]
 80240fa:	f000 0007 	and.w	r0, r0, #7
 80240fe:	4770      	bx	lr
 8024100:	08028465 	.word	0x08028465

08024104 <isalpha>:
 8024104:	4b02      	ldr	r3, [pc, #8]	; (8024110 <isalpha+0xc>)
 8024106:	4418      	add	r0, r3
 8024108:	7840      	ldrb	r0, [r0, #1]
 802410a:	f000 0003 	and.w	r0, r0, #3
 802410e:	4770      	bx	lr
 8024110:	08028465 	.word	0x08028465

08024114 <isspace>:
 8024114:	4b02      	ldr	r3, [pc, #8]	; (8024120 <isspace+0xc>)
 8024116:	4418      	add	r0, r3
 8024118:	7840      	ldrb	r0, [r0, #1]
 802411a:	f000 0008 	and.w	r0, r0, #8
 802411e:	4770      	bx	lr
 8024120:	08028465 	.word	0x08028465

08024124 <__itoa>:
 8024124:	1e93      	subs	r3, r2, #2
 8024126:	2b22      	cmp	r3, #34	; 0x22
 8024128:	b510      	push	{r4, lr}
 802412a:	460c      	mov	r4, r1
 802412c:	d904      	bls.n	8024138 <__itoa+0x14>
 802412e:	2300      	movs	r3, #0
 8024130:	700b      	strb	r3, [r1, #0]
 8024132:	461c      	mov	r4, r3
 8024134:	4620      	mov	r0, r4
 8024136:	bd10      	pop	{r4, pc}
 8024138:	2a0a      	cmp	r2, #10
 802413a:	d109      	bne.n	8024150 <__itoa+0x2c>
 802413c:	2800      	cmp	r0, #0
 802413e:	da07      	bge.n	8024150 <__itoa+0x2c>
 8024140:	232d      	movs	r3, #45	; 0x2d
 8024142:	700b      	strb	r3, [r1, #0]
 8024144:	4240      	negs	r0, r0
 8024146:	2101      	movs	r1, #1
 8024148:	4421      	add	r1, r4
 802414a:	f001 f85f 	bl	802520c <__utoa>
 802414e:	e7f1      	b.n	8024134 <__itoa+0x10>
 8024150:	2100      	movs	r1, #0
 8024152:	e7f9      	b.n	8024148 <__itoa+0x24>

08024154 <itoa>:
 8024154:	f7ff bfe6 	b.w	8024124 <__itoa>

08024158 <malloc>:
 8024158:	4b02      	ldr	r3, [pc, #8]	; (8024164 <malloc+0xc>)
 802415a:	4601      	mov	r1, r0
 802415c:	6818      	ldr	r0, [r3, #0]
 802415e:	f000 b899 	b.w	8024294 <_malloc_r>
 8024162:	bf00      	nop
 8024164:	20000010 	.word	0x20000010

08024168 <free>:
 8024168:	4b02      	ldr	r3, [pc, #8]	; (8024174 <free+0xc>)
 802416a:	4601      	mov	r1, r0
 802416c:	6818      	ldr	r0, [r3, #0]
 802416e:	f000 b841 	b.w	80241f4 <_free_r>
 8024172:	bf00      	nop
 8024174:	20000010 	.word	0x20000010

08024178 <memcmp>:
 8024178:	b530      	push	{r4, r5, lr}
 802417a:	3901      	subs	r1, #1
 802417c:	2400      	movs	r4, #0
 802417e:	42a2      	cmp	r2, r4
 8024180:	d101      	bne.n	8024186 <memcmp+0xe>
 8024182:	2000      	movs	r0, #0
 8024184:	e005      	b.n	8024192 <memcmp+0x1a>
 8024186:	5d03      	ldrb	r3, [r0, r4]
 8024188:	3401      	adds	r4, #1
 802418a:	5d0d      	ldrb	r5, [r1, r4]
 802418c:	42ab      	cmp	r3, r5
 802418e:	d0f6      	beq.n	802417e <memcmp+0x6>
 8024190:	1b58      	subs	r0, r3, r5
 8024192:	bd30      	pop	{r4, r5, pc}

08024194 <memcpy>:
 8024194:	440a      	add	r2, r1
 8024196:	4291      	cmp	r1, r2
 8024198:	f100 33ff 	add.w	r3, r0, #4294967295
 802419c:	d100      	bne.n	80241a0 <memcpy+0xc>
 802419e:	4770      	bx	lr
 80241a0:	b510      	push	{r4, lr}
 80241a2:	f811 4b01 	ldrb.w	r4, [r1], #1
 80241a6:	f803 4f01 	strb.w	r4, [r3, #1]!
 80241aa:	4291      	cmp	r1, r2
 80241ac:	d1f9      	bne.n	80241a2 <memcpy+0xe>
 80241ae:	bd10      	pop	{r4, pc}

080241b0 <memmove>:
 80241b0:	4288      	cmp	r0, r1
 80241b2:	b510      	push	{r4, lr}
 80241b4:	eb01 0402 	add.w	r4, r1, r2
 80241b8:	d902      	bls.n	80241c0 <memmove+0x10>
 80241ba:	4284      	cmp	r4, r0
 80241bc:	4623      	mov	r3, r4
 80241be:	d807      	bhi.n	80241d0 <memmove+0x20>
 80241c0:	1e43      	subs	r3, r0, #1
 80241c2:	42a1      	cmp	r1, r4
 80241c4:	d008      	beq.n	80241d8 <memmove+0x28>
 80241c6:	f811 2b01 	ldrb.w	r2, [r1], #1
 80241ca:	f803 2f01 	strb.w	r2, [r3, #1]!
 80241ce:	e7f8      	b.n	80241c2 <memmove+0x12>
 80241d0:	4402      	add	r2, r0
 80241d2:	4601      	mov	r1, r0
 80241d4:	428a      	cmp	r2, r1
 80241d6:	d100      	bne.n	80241da <memmove+0x2a>
 80241d8:	bd10      	pop	{r4, pc}
 80241da:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 80241de:	f802 4d01 	strb.w	r4, [r2, #-1]!
 80241e2:	e7f7      	b.n	80241d4 <memmove+0x24>

080241e4 <memset>:
 80241e4:	4402      	add	r2, r0
 80241e6:	4603      	mov	r3, r0
 80241e8:	4293      	cmp	r3, r2
 80241ea:	d100      	bne.n	80241ee <memset+0xa>
 80241ec:	4770      	bx	lr
 80241ee:	f803 1b01 	strb.w	r1, [r3], #1
 80241f2:	e7f9      	b.n	80241e8 <memset+0x4>

080241f4 <_free_r>:
 80241f4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80241f6:	2900      	cmp	r1, #0
 80241f8:	d048      	beq.n	802428c <_free_r+0x98>
 80241fa:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80241fe:	9001      	str	r0, [sp, #4]
 8024200:	2b00      	cmp	r3, #0
 8024202:	f1a1 0404 	sub.w	r4, r1, #4
 8024206:	bfb8      	it	lt
 8024208:	18e4      	addlt	r4, r4, r3
 802420a:	f001 fc63 	bl	8025ad4 <__malloc_lock>
 802420e:	4a20      	ldr	r2, [pc, #128]	; (8024290 <_free_r+0x9c>)
 8024210:	9801      	ldr	r0, [sp, #4]
 8024212:	6813      	ldr	r3, [r2, #0]
 8024214:	4615      	mov	r5, r2
 8024216:	b933      	cbnz	r3, 8024226 <_free_r+0x32>
 8024218:	6063      	str	r3, [r4, #4]
 802421a:	6014      	str	r4, [r2, #0]
 802421c:	b003      	add	sp, #12
 802421e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8024222:	f001 bc5d 	b.w	8025ae0 <__malloc_unlock>
 8024226:	42a3      	cmp	r3, r4
 8024228:	d90b      	bls.n	8024242 <_free_r+0x4e>
 802422a:	6821      	ldr	r1, [r4, #0]
 802422c:	1862      	adds	r2, r4, r1
 802422e:	4293      	cmp	r3, r2
 8024230:	bf04      	itt	eq
 8024232:	681a      	ldreq	r2, [r3, #0]
 8024234:	685b      	ldreq	r3, [r3, #4]
 8024236:	6063      	str	r3, [r4, #4]
 8024238:	bf04      	itt	eq
 802423a:	1852      	addeq	r2, r2, r1
 802423c:	6022      	streq	r2, [r4, #0]
 802423e:	602c      	str	r4, [r5, #0]
 8024240:	e7ec      	b.n	802421c <_free_r+0x28>
 8024242:	461a      	mov	r2, r3
 8024244:	685b      	ldr	r3, [r3, #4]
 8024246:	b10b      	cbz	r3, 802424c <_free_r+0x58>
 8024248:	42a3      	cmp	r3, r4
 802424a:	d9fa      	bls.n	8024242 <_free_r+0x4e>
 802424c:	6811      	ldr	r1, [r2, #0]
 802424e:	1855      	adds	r5, r2, r1
 8024250:	42a5      	cmp	r5, r4
 8024252:	d10b      	bne.n	802426c <_free_r+0x78>
 8024254:	6824      	ldr	r4, [r4, #0]
 8024256:	4421      	add	r1, r4
 8024258:	1854      	adds	r4, r2, r1
 802425a:	42a3      	cmp	r3, r4
 802425c:	6011      	str	r1, [r2, #0]
 802425e:	d1dd      	bne.n	802421c <_free_r+0x28>
 8024260:	681c      	ldr	r4, [r3, #0]
 8024262:	685b      	ldr	r3, [r3, #4]
 8024264:	6053      	str	r3, [r2, #4]
 8024266:	4421      	add	r1, r4
 8024268:	6011      	str	r1, [r2, #0]
 802426a:	e7d7      	b.n	802421c <_free_r+0x28>
 802426c:	d902      	bls.n	8024274 <_free_r+0x80>
 802426e:	230c      	movs	r3, #12
 8024270:	6003      	str	r3, [r0, #0]
 8024272:	e7d3      	b.n	802421c <_free_r+0x28>
 8024274:	6825      	ldr	r5, [r4, #0]
 8024276:	1961      	adds	r1, r4, r5
 8024278:	428b      	cmp	r3, r1
 802427a:	bf04      	itt	eq
 802427c:	6819      	ldreq	r1, [r3, #0]
 802427e:	685b      	ldreq	r3, [r3, #4]
 8024280:	6063      	str	r3, [r4, #4]
 8024282:	bf04      	itt	eq
 8024284:	1949      	addeq	r1, r1, r5
 8024286:	6021      	streq	r1, [r4, #0]
 8024288:	6054      	str	r4, [r2, #4]
 802428a:	e7c7      	b.n	802421c <_free_r+0x28>
 802428c:	b003      	add	sp, #12
 802428e:	bd30      	pop	{r4, r5, pc}
 8024290:	20000824 	.word	0x20000824

08024294 <_malloc_r>:
 8024294:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8024296:	1ccd      	adds	r5, r1, #3
 8024298:	f025 0503 	bic.w	r5, r5, #3
 802429c:	3508      	adds	r5, #8
 802429e:	2d0c      	cmp	r5, #12
 80242a0:	bf38      	it	cc
 80242a2:	250c      	movcc	r5, #12
 80242a4:	2d00      	cmp	r5, #0
 80242a6:	4606      	mov	r6, r0
 80242a8:	db01      	blt.n	80242ae <_malloc_r+0x1a>
 80242aa:	42a9      	cmp	r1, r5
 80242ac:	d903      	bls.n	80242b6 <_malloc_r+0x22>
 80242ae:	230c      	movs	r3, #12
 80242b0:	6033      	str	r3, [r6, #0]
 80242b2:	2000      	movs	r0, #0
 80242b4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80242b6:	f001 fc0d 	bl	8025ad4 <__malloc_lock>
 80242ba:	4921      	ldr	r1, [pc, #132]	; (8024340 <_malloc_r+0xac>)
 80242bc:	680a      	ldr	r2, [r1, #0]
 80242be:	4614      	mov	r4, r2
 80242c0:	b99c      	cbnz	r4, 80242ea <_malloc_r+0x56>
 80242c2:	4f20      	ldr	r7, [pc, #128]	; (8024344 <_malloc_r+0xb0>)
 80242c4:	683b      	ldr	r3, [r7, #0]
 80242c6:	b923      	cbnz	r3, 80242d2 <_malloc_r+0x3e>
 80242c8:	4621      	mov	r1, r4
 80242ca:	4630      	mov	r0, r6
 80242cc:	f000 f83c 	bl	8024348 <_sbrk_r>
 80242d0:	6038      	str	r0, [r7, #0]
 80242d2:	4629      	mov	r1, r5
 80242d4:	4630      	mov	r0, r6
 80242d6:	f000 f837 	bl	8024348 <_sbrk_r>
 80242da:	1c43      	adds	r3, r0, #1
 80242dc:	d123      	bne.n	8024326 <_malloc_r+0x92>
 80242de:	230c      	movs	r3, #12
 80242e0:	6033      	str	r3, [r6, #0]
 80242e2:	4630      	mov	r0, r6
 80242e4:	f001 fbfc 	bl	8025ae0 <__malloc_unlock>
 80242e8:	e7e3      	b.n	80242b2 <_malloc_r+0x1e>
 80242ea:	6823      	ldr	r3, [r4, #0]
 80242ec:	1b5b      	subs	r3, r3, r5
 80242ee:	d417      	bmi.n	8024320 <_malloc_r+0x8c>
 80242f0:	2b0b      	cmp	r3, #11
 80242f2:	d903      	bls.n	80242fc <_malloc_r+0x68>
 80242f4:	6023      	str	r3, [r4, #0]
 80242f6:	441c      	add	r4, r3
 80242f8:	6025      	str	r5, [r4, #0]
 80242fa:	e004      	b.n	8024306 <_malloc_r+0x72>
 80242fc:	6863      	ldr	r3, [r4, #4]
 80242fe:	42a2      	cmp	r2, r4
 8024300:	bf0c      	ite	eq
 8024302:	600b      	streq	r3, [r1, #0]
 8024304:	6053      	strne	r3, [r2, #4]
 8024306:	4630      	mov	r0, r6
 8024308:	f001 fbea 	bl	8025ae0 <__malloc_unlock>
 802430c:	f104 000b 	add.w	r0, r4, #11
 8024310:	1d23      	adds	r3, r4, #4
 8024312:	f020 0007 	bic.w	r0, r0, #7
 8024316:	1ac2      	subs	r2, r0, r3
 8024318:	d0cc      	beq.n	80242b4 <_malloc_r+0x20>
 802431a:	1a1b      	subs	r3, r3, r0
 802431c:	50a3      	str	r3, [r4, r2]
 802431e:	e7c9      	b.n	80242b4 <_malloc_r+0x20>
 8024320:	4622      	mov	r2, r4
 8024322:	6864      	ldr	r4, [r4, #4]
 8024324:	e7cc      	b.n	80242c0 <_malloc_r+0x2c>
 8024326:	1cc4      	adds	r4, r0, #3
 8024328:	f024 0403 	bic.w	r4, r4, #3
 802432c:	42a0      	cmp	r0, r4
 802432e:	d0e3      	beq.n	80242f8 <_malloc_r+0x64>
 8024330:	1a21      	subs	r1, r4, r0
 8024332:	4630      	mov	r0, r6
 8024334:	f000 f808 	bl	8024348 <_sbrk_r>
 8024338:	3001      	adds	r0, #1
 802433a:	d1dd      	bne.n	80242f8 <_malloc_r+0x64>
 802433c:	e7cf      	b.n	80242de <_malloc_r+0x4a>
 802433e:	bf00      	nop
 8024340:	20000824 	.word	0x20000824
 8024344:	20000828 	.word	0x20000828

08024348 <_sbrk_r>:
 8024348:	b538      	push	{r3, r4, r5, lr}
 802434a:	4d06      	ldr	r5, [pc, #24]	; (8024364 <_sbrk_r+0x1c>)
 802434c:	2300      	movs	r3, #0
 802434e:	4604      	mov	r4, r0
 8024350:	4608      	mov	r0, r1
 8024352:	602b      	str	r3, [r5, #0]
 8024354:	f7f9 ff8e 	bl	801e274 <_sbrk>
 8024358:	1c43      	adds	r3, r0, #1
 802435a:	d102      	bne.n	8024362 <_sbrk_r+0x1a>
 802435c:	682b      	ldr	r3, [r5, #0]
 802435e:	b103      	cbz	r3, 8024362 <_sbrk_r+0x1a>
 8024360:	6023      	str	r3, [r4, #0]
 8024362:	bd38      	pop	{r3, r4, r5, pc}
 8024364:	200008cc 	.word	0x200008cc

08024368 <_raise_r>:
 8024368:	291f      	cmp	r1, #31
 802436a:	b538      	push	{r3, r4, r5, lr}
 802436c:	4604      	mov	r4, r0
 802436e:	460d      	mov	r5, r1
 8024370:	d904      	bls.n	802437c <_raise_r+0x14>
 8024372:	2316      	movs	r3, #22
 8024374:	6003      	str	r3, [r0, #0]
 8024376:	f04f 30ff 	mov.w	r0, #4294967295
 802437a:	bd38      	pop	{r3, r4, r5, pc}
 802437c:	6c42      	ldr	r2, [r0, #68]	; 0x44
 802437e:	b112      	cbz	r2, 8024386 <_raise_r+0x1e>
 8024380:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8024384:	b94b      	cbnz	r3, 802439a <_raise_r+0x32>
 8024386:	4620      	mov	r0, r4
 8024388:	f000 f830 	bl	80243ec <_getpid_r>
 802438c:	462a      	mov	r2, r5
 802438e:	4601      	mov	r1, r0
 8024390:	4620      	mov	r0, r4
 8024392:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8024396:	f000 b817 	b.w	80243c8 <_kill_r>
 802439a:	2b01      	cmp	r3, #1
 802439c:	d00a      	beq.n	80243b4 <_raise_r+0x4c>
 802439e:	1c59      	adds	r1, r3, #1
 80243a0:	d103      	bne.n	80243aa <_raise_r+0x42>
 80243a2:	2316      	movs	r3, #22
 80243a4:	6003      	str	r3, [r0, #0]
 80243a6:	2001      	movs	r0, #1
 80243a8:	e7e7      	b.n	802437a <_raise_r+0x12>
 80243aa:	2400      	movs	r4, #0
 80243ac:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 80243b0:	4628      	mov	r0, r5
 80243b2:	4798      	blx	r3
 80243b4:	2000      	movs	r0, #0
 80243b6:	e7e0      	b.n	802437a <_raise_r+0x12>

080243b8 <raise>:
 80243b8:	4b02      	ldr	r3, [pc, #8]	; (80243c4 <raise+0xc>)
 80243ba:	4601      	mov	r1, r0
 80243bc:	6818      	ldr	r0, [r3, #0]
 80243be:	f7ff bfd3 	b.w	8024368 <_raise_r>
 80243c2:	bf00      	nop
 80243c4:	20000010 	.word	0x20000010

080243c8 <_kill_r>:
 80243c8:	b538      	push	{r3, r4, r5, lr}
 80243ca:	4d07      	ldr	r5, [pc, #28]	; (80243e8 <_kill_r+0x20>)
 80243cc:	2300      	movs	r3, #0
 80243ce:	4604      	mov	r4, r0
 80243d0:	4608      	mov	r0, r1
 80243d2:	4611      	mov	r1, r2
 80243d4:	602b      	str	r3, [r5, #0]
 80243d6:	f7f9 fec5 	bl	801e164 <_kill>
 80243da:	1c43      	adds	r3, r0, #1
 80243dc:	d102      	bne.n	80243e4 <_kill_r+0x1c>
 80243de:	682b      	ldr	r3, [r5, #0]
 80243e0:	b103      	cbz	r3, 80243e4 <_kill_r+0x1c>
 80243e2:	6023      	str	r3, [r4, #0]
 80243e4:	bd38      	pop	{r3, r4, r5, pc}
 80243e6:	bf00      	nop
 80243e8:	200008cc 	.word	0x200008cc

080243ec <_getpid_r>:
 80243ec:	f7f9 beb2 	b.w	801e154 <_getpid>

080243f0 <sulp>:
 80243f0:	b570      	push	{r4, r5, r6, lr}
 80243f2:	4604      	mov	r4, r0
 80243f4:	460d      	mov	r5, r1
 80243f6:	ec45 4b10 	vmov	d0, r4, r5
 80243fa:	4616      	mov	r6, r2
 80243fc:	f001 fee2 	bl	80261c4 <__ulp>
 8024400:	ec51 0b10 	vmov	r0, r1, d0
 8024404:	b17e      	cbz	r6, 8024426 <sulp+0x36>
 8024406:	f3c5 530a 	ubfx	r3, r5, #20, #11
 802440a:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 802440e:	2b00      	cmp	r3, #0
 8024410:	dd09      	ble.n	8024426 <sulp+0x36>
 8024412:	051b      	lsls	r3, r3, #20
 8024414:	f103 557f 	add.w	r5, r3, #1069547520	; 0x3fc00000
 8024418:	2400      	movs	r4, #0
 802441a:	f505 1540 	add.w	r5, r5, #3145728	; 0x300000
 802441e:	4622      	mov	r2, r4
 8024420:	462b      	mov	r3, r5
 8024422:	f7dc f909 	bl	8000638 <__aeabi_dmul>
 8024426:	bd70      	pop	{r4, r5, r6, pc}

08024428 <_strtod_l>:
 8024428:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802442c:	b0a3      	sub	sp, #140	; 0x8c
 802442e:	461f      	mov	r7, r3
 8024430:	2300      	movs	r3, #0
 8024432:	931e      	str	r3, [sp, #120]	; 0x78
 8024434:	4ba4      	ldr	r3, [pc, #656]	; (80246c8 <_strtod_l+0x2a0>)
 8024436:	9219      	str	r2, [sp, #100]	; 0x64
 8024438:	681b      	ldr	r3, [r3, #0]
 802443a:	9307      	str	r3, [sp, #28]
 802443c:	4604      	mov	r4, r0
 802443e:	4618      	mov	r0, r3
 8024440:	4688      	mov	r8, r1
 8024442:	f7db ff35 	bl	80002b0 <strlen>
 8024446:	f04f 0a00 	mov.w	sl, #0
 802444a:	4605      	mov	r5, r0
 802444c:	f04f 0b00 	mov.w	fp, #0
 8024450:	f8cd 8074 	str.w	r8, [sp, #116]	; 0x74
 8024454:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8024456:	781a      	ldrb	r2, [r3, #0]
 8024458:	2a2b      	cmp	r2, #43	; 0x2b
 802445a:	d04c      	beq.n	80244f6 <_strtod_l+0xce>
 802445c:	d839      	bhi.n	80244d2 <_strtod_l+0xaa>
 802445e:	2a0d      	cmp	r2, #13
 8024460:	d832      	bhi.n	80244c8 <_strtod_l+0xa0>
 8024462:	2a08      	cmp	r2, #8
 8024464:	d832      	bhi.n	80244cc <_strtod_l+0xa4>
 8024466:	2a00      	cmp	r2, #0
 8024468:	d03c      	beq.n	80244e4 <_strtod_l+0xbc>
 802446a:	2300      	movs	r3, #0
 802446c:	930e      	str	r3, [sp, #56]	; 0x38
 802446e:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 8024470:	7833      	ldrb	r3, [r6, #0]
 8024472:	2b30      	cmp	r3, #48	; 0x30
 8024474:	f040 80b4 	bne.w	80245e0 <_strtod_l+0x1b8>
 8024478:	7873      	ldrb	r3, [r6, #1]
 802447a:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 802447e:	2b58      	cmp	r3, #88	; 0x58
 8024480:	d16c      	bne.n	802455c <_strtod_l+0x134>
 8024482:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8024484:	9301      	str	r3, [sp, #4]
 8024486:	ab1e      	add	r3, sp, #120	; 0x78
 8024488:	9702      	str	r7, [sp, #8]
 802448a:	9300      	str	r3, [sp, #0]
 802448c:	4a8f      	ldr	r2, [pc, #572]	; (80246cc <_strtod_l+0x2a4>)
 802448e:	ab1f      	add	r3, sp, #124	; 0x7c
 8024490:	a91d      	add	r1, sp, #116	; 0x74
 8024492:	4620      	mov	r0, r4
 8024494:	f001 f800 	bl	8025498 <__gethex>
 8024498:	f010 0707 	ands.w	r7, r0, #7
 802449c:	4605      	mov	r5, r0
 802449e:	d005      	beq.n	80244ac <_strtod_l+0x84>
 80244a0:	2f06      	cmp	r7, #6
 80244a2:	d12a      	bne.n	80244fa <_strtod_l+0xd2>
 80244a4:	3601      	adds	r6, #1
 80244a6:	2300      	movs	r3, #0
 80244a8:	961d      	str	r6, [sp, #116]	; 0x74
 80244aa:	930e      	str	r3, [sp, #56]	; 0x38
 80244ac:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80244ae:	2b00      	cmp	r3, #0
 80244b0:	f040 8596 	bne.w	8024fe0 <_strtod_l+0xbb8>
 80244b4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80244b6:	b1db      	cbz	r3, 80244f0 <_strtod_l+0xc8>
 80244b8:	4652      	mov	r2, sl
 80244ba:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
 80244be:	ec43 2b10 	vmov	d0, r2, r3
 80244c2:	b023      	add	sp, #140	; 0x8c
 80244c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80244c8:	2a20      	cmp	r2, #32
 80244ca:	d1ce      	bne.n	802446a <_strtod_l+0x42>
 80244cc:	3301      	adds	r3, #1
 80244ce:	931d      	str	r3, [sp, #116]	; 0x74
 80244d0:	e7c0      	b.n	8024454 <_strtod_l+0x2c>
 80244d2:	2a2d      	cmp	r2, #45	; 0x2d
 80244d4:	d1c9      	bne.n	802446a <_strtod_l+0x42>
 80244d6:	2201      	movs	r2, #1
 80244d8:	920e      	str	r2, [sp, #56]	; 0x38
 80244da:	1c5a      	adds	r2, r3, #1
 80244dc:	921d      	str	r2, [sp, #116]	; 0x74
 80244de:	785b      	ldrb	r3, [r3, #1]
 80244e0:	2b00      	cmp	r3, #0
 80244e2:	d1c4      	bne.n	802446e <_strtod_l+0x46>
 80244e4:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80244e6:	f8cd 8074 	str.w	r8, [sp, #116]	; 0x74
 80244ea:	2b00      	cmp	r3, #0
 80244ec:	f040 8576 	bne.w	8024fdc <_strtod_l+0xbb4>
 80244f0:	4652      	mov	r2, sl
 80244f2:	465b      	mov	r3, fp
 80244f4:	e7e3      	b.n	80244be <_strtod_l+0x96>
 80244f6:	2200      	movs	r2, #0
 80244f8:	e7ee      	b.n	80244d8 <_strtod_l+0xb0>
 80244fa:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 80244fc:	b13a      	cbz	r2, 802450e <_strtod_l+0xe6>
 80244fe:	2135      	movs	r1, #53	; 0x35
 8024500:	a820      	add	r0, sp, #128	; 0x80
 8024502:	f001 ff6a 	bl	80263da <__copybits>
 8024506:	991e      	ldr	r1, [sp, #120]	; 0x78
 8024508:	4620      	mov	r0, r4
 802450a:	f001 fb2f 	bl	8025b6c <_Bfree>
 802450e:	3f01      	subs	r7, #1
 8024510:	2f05      	cmp	r7, #5
 8024512:	d807      	bhi.n	8024524 <_strtod_l+0xfc>
 8024514:	e8df f007 	tbb	[pc, r7]
 8024518:	1d180b0e 	.word	0x1d180b0e
 802451c:	030e      	.short	0x030e
 802451e:	f04f 0b00 	mov.w	fp, #0
 8024522:	46da      	mov	sl, fp
 8024524:	0728      	lsls	r0, r5, #28
 8024526:	d5c1      	bpl.n	80244ac <_strtod_l+0x84>
 8024528:	f04b 4b00 	orr.w	fp, fp, #2147483648	; 0x80000000
 802452c:	e7be      	b.n	80244ac <_strtod_l+0x84>
 802452e:	e9dd ab20 	ldrd	sl, fp, [sp, #128]	; 0x80
 8024532:	e7f7      	b.n	8024524 <_strtod_l+0xfc>
 8024534:	e9dd a320 	ldrd	sl, r3, [sp, #128]	; 0x80
 8024538:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 802453a:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 802453e:	f202 4233 	addw	r2, r2, #1075	; 0x433
 8024542:	ea43 5b02 	orr.w	fp, r3, r2, lsl #20
 8024546:	e7ed      	b.n	8024524 <_strtod_l+0xfc>
 8024548:	f8df b184 	ldr.w	fp, [pc, #388]	; 80246d0 <_strtod_l+0x2a8>
 802454c:	f04f 0a00 	mov.w	sl, #0
 8024550:	e7e8      	b.n	8024524 <_strtod_l+0xfc>
 8024552:	f06f 4b00 	mvn.w	fp, #2147483648	; 0x80000000
 8024556:	f04f 3aff 	mov.w	sl, #4294967295
 802455a:	e7e3      	b.n	8024524 <_strtod_l+0xfc>
 802455c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802455e:	1c5a      	adds	r2, r3, #1
 8024560:	921d      	str	r2, [sp, #116]	; 0x74
 8024562:	785b      	ldrb	r3, [r3, #1]
 8024564:	2b30      	cmp	r3, #48	; 0x30
 8024566:	d0f9      	beq.n	802455c <_strtod_l+0x134>
 8024568:	2b00      	cmp	r3, #0
 802456a:	d09f      	beq.n	80244ac <_strtod_l+0x84>
 802456c:	2301      	movs	r3, #1
 802456e:	f04f 0900 	mov.w	r9, #0
 8024572:	9304      	str	r3, [sp, #16]
 8024574:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8024576:	930a      	str	r3, [sp, #40]	; 0x28
 8024578:	f8cd 9024 	str.w	r9, [sp, #36]	; 0x24
 802457c:	464f      	mov	r7, r9
 802457e:	220a      	movs	r2, #10
 8024580:	981d      	ldr	r0, [sp, #116]	; 0x74
 8024582:	7806      	ldrb	r6, [r0, #0]
 8024584:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
 8024588:	b2d9      	uxtb	r1, r3
 802458a:	2909      	cmp	r1, #9
 802458c:	d92a      	bls.n	80245e4 <_strtod_l+0x1bc>
 802458e:	9907      	ldr	r1, [sp, #28]
 8024590:	462a      	mov	r2, r5
 8024592:	f002 fa6b 	bl	8026a6c <strncmp>
 8024596:	b398      	cbz	r0, 8024600 <_strtod_l+0x1d8>
 8024598:	2000      	movs	r0, #0
 802459a:	4633      	mov	r3, r6
 802459c:	463d      	mov	r5, r7
 802459e:	9007      	str	r0, [sp, #28]
 80245a0:	4602      	mov	r2, r0
 80245a2:	2b65      	cmp	r3, #101	; 0x65
 80245a4:	d001      	beq.n	80245aa <_strtod_l+0x182>
 80245a6:	2b45      	cmp	r3, #69	; 0x45
 80245a8:	d118      	bne.n	80245dc <_strtod_l+0x1b4>
 80245aa:	b91d      	cbnz	r5, 80245b4 <_strtod_l+0x18c>
 80245ac:	9b04      	ldr	r3, [sp, #16]
 80245ae:	4303      	orrs	r3, r0
 80245b0:	d098      	beq.n	80244e4 <_strtod_l+0xbc>
 80245b2:	2500      	movs	r5, #0
 80245b4:	f8dd 8074 	ldr.w	r8, [sp, #116]	; 0x74
 80245b8:	f108 0301 	add.w	r3, r8, #1
 80245bc:	931d      	str	r3, [sp, #116]	; 0x74
 80245be:	f898 3001 	ldrb.w	r3, [r8, #1]
 80245c2:	2b2b      	cmp	r3, #43	; 0x2b
 80245c4:	d075      	beq.n	80246b2 <_strtod_l+0x28a>
 80245c6:	2b2d      	cmp	r3, #45	; 0x2d
 80245c8:	d07b      	beq.n	80246c2 <_strtod_l+0x29a>
 80245ca:	f04f 0c00 	mov.w	ip, #0
 80245ce:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 80245d2:	2909      	cmp	r1, #9
 80245d4:	f240 8082 	bls.w	80246dc <_strtod_l+0x2b4>
 80245d8:	f8cd 8074 	str.w	r8, [sp, #116]	; 0x74
 80245dc:	2600      	movs	r6, #0
 80245de:	e09d      	b.n	802471c <_strtod_l+0x2f4>
 80245e0:	2300      	movs	r3, #0
 80245e2:	e7c4      	b.n	802456e <_strtod_l+0x146>
 80245e4:	2f08      	cmp	r7, #8
 80245e6:	bfd8      	it	le
 80245e8:	9909      	ldrle	r1, [sp, #36]	; 0x24
 80245ea:	f100 0001 	add.w	r0, r0, #1
 80245ee:	bfda      	itte	le
 80245f0:	fb02 3301 	mlale	r3, r2, r1, r3
 80245f4:	9309      	strle	r3, [sp, #36]	; 0x24
 80245f6:	fb02 3909 	mlagt	r9, r2, r9, r3
 80245fa:	3701      	adds	r7, #1
 80245fc:	901d      	str	r0, [sp, #116]	; 0x74
 80245fe:	e7bf      	b.n	8024580 <_strtod_l+0x158>
 8024600:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8024602:	195a      	adds	r2, r3, r5
 8024604:	921d      	str	r2, [sp, #116]	; 0x74
 8024606:	5d5b      	ldrb	r3, [r3, r5]
 8024608:	2f00      	cmp	r7, #0
 802460a:	d037      	beq.n	802467c <_strtod_l+0x254>
 802460c:	9007      	str	r0, [sp, #28]
 802460e:	463d      	mov	r5, r7
 8024610:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
 8024614:	2a09      	cmp	r2, #9
 8024616:	d912      	bls.n	802463e <_strtod_l+0x216>
 8024618:	2201      	movs	r2, #1
 802461a:	e7c2      	b.n	80245a2 <_strtod_l+0x17a>
 802461c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802461e:	1c5a      	adds	r2, r3, #1
 8024620:	921d      	str	r2, [sp, #116]	; 0x74
 8024622:	785b      	ldrb	r3, [r3, #1]
 8024624:	3001      	adds	r0, #1
 8024626:	2b30      	cmp	r3, #48	; 0x30
 8024628:	d0f8      	beq.n	802461c <_strtod_l+0x1f4>
 802462a:	f1a3 0231 	sub.w	r2, r3, #49	; 0x31
 802462e:	2a08      	cmp	r2, #8
 8024630:	f200 84db 	bhi.w	8024fea <_strtod_l+0xbc2>
 8024634:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8024636:	9007      	str	r0, [sp, #28]
 8024638:	2000      	movs	r0, #0
 802463a:	920a      	str	r2, [sp, #40]	; 0x28
 802463c:	4605      	mov	r5, r0
 802463e:	3b30      	subs	r3, #48	; 0x30
 8024640:	f100 0201 	add.w	r2, r0, #1
 8024644:	d014      	beq.n	8024670 <_strtod_l+0x248>
 8024646:	9907      	ldr	r1, [sp, #28]
 8024648:	4411      	add	r1, r2
 802464a:	9107      	str	r1, [sp, #28]
 802464c:	462a      	mov	r2, r5
 802464e:	eb00 0e05 	add.w	lr, r0, r5
 8024652:	210a      	movs	r1, #10
 8024654:	4572      	cmp	r2, lr
 8024656:	d113      	bne.n	8024680 <_strtod_l+0x258>
 8024658:	182a      	adds	r2, r5, r0
 802465a:	2a08      	cmp	r2, #8
 802465c:	f105 0501 	add.w	r5, r5, #1
 8024660:	4405      	add	r5, r0
 8024662:	dc1c      	bgt.n	802469e <_strtod_l+0x276>
 8024664:	9909      	ldr	r1, [sp, #36]	; 0x24
 8024666:	220a      	movs	r2, #10
 8024668:	fb02 3301 	mla	r3, r2, r1, r3
 802466c:	9309      	str	r3, [sp, #36]	; 0x24
 802466e:	2200      	movs	r2, #0
 8024670:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8024672:	1c59      	adds	r1, r3, #1
 8024674:	911d      	str	r1, [sp, #116]	; 0x74
 8024676:	785b      	ldrb	r3, [r3, #1]
 8024678:	4610      	mov	r0, r2
 802467a:	e7c9      	b.n	8024610 <_strtod_l+0x1e8>
 802467c:	4638      	mov	r0, r7
 802467e:	e7d2      	b.n	8024626 <_strtod_l+0x1fe>
 8024680:	2a08      	cmp	r2, #8
 8024682:	dc04      	bgt.n	802468e <_strtod_l+0x266>
 8024684:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8024686:	434e      	muls	r6, r1
 8024688:	9609      	str	r6, [sp, #36]	; 0x24
 802468a:	3201      	adds	r2, #1
 802468c:	e7e2      	b.n	8024654 <_strtod_l+0x22c>
 802468e:	f102 0c01 	add.w	ip, r2, #1
 8024692:	f1bc 0f10 	cmp.w	ip, #16
 8024696:	bfd8      	it	le
 8024698:	fb01 f909 	mulle.w	r9, r1, r9
 802469c:	e7f5      	b.n	802468a <_strtod_l+0x262>
 802469e:	2d10      	cmp	r5, #16
 80246a0:	bfdc      	itt	le
 80246a2:	220a      	movle	r2, #10
 80246a4:	fb02 3909 	mlale	r9, r2, r9, r3
 80246a8:	e7e1      	b.n	802466e <_strtod_l+0x246>
 80246aa:	2300      	movs	r3, #0
 80246ac:	9307      	str	r3, [sp, #28]
 80246ae:	2201      	movs	r2, #1
 80246b0:	e77c      	b.n	80245ac <_strtod_l+0x184>
 80246b2:	f04f 0c00 	mov.w	ip, #0
 80246b6:	f108 0302 	add.w	r3, r8, #2
 80246ba:	931d      	str	r3, [sp, #116]	; 0x74
 80246bc:	f898 3002 	ldrb.w	r3, [r8, #2]
 80246c0:	e785      	b.n	80245ce <_strtod_l+0x1a6>
 80246c2:	f04f 0c01 	mov.w	ip, #1
 80246c6:	e7f6      	b.n	80246b6 <_strtod_l+0x28e>
 80246c8:	080285e0 	.word	0x080285e0
 80246cc:	080283f0 	.word	0x080283f0
 80246d0:	7ff00000 	.word	0x7ff00000
 80246d4:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80246d6:	1c59      	adds	r1, r3, #1
 80246d8:	911d      	str	r1, [sp, #116]	; 0x74
 80246da:	785b      	ldrb	r3, [r3, #1]
 80246dc:	2b30      	cmp	r3, #48	; 0x30
 80246de:	d0f9      	beq.n	80246d4 <_strtod_l+0x2ac>
 80246e0:	f1a3 0131 	sub.w	r1, r3, #49	; 0x31
 80246e4:	2908      	cmp	r1, #8
 80246e6:	f63f af79 	bhi.w	80245dc <_strtod_l+0x1b4>
 80246ea:	f1a3 0e30 	sub.w	lr, r3, #48	; 0x30
 80246ee:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80246f0:	9308      	str	r3, [sp, #32]
 80246f2:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80246f4:	1c59      	adds	r1, r3, #1
 80246f6:	911d      	str	r1, [sp, #116]	; 0x74
 80246f8:	785b      	ldrb	r3, [r3, #1]
 80246fa:	f1a3 0630 	sub.w	r6, r3, #48	; 0x30
 80246fe:	2e09      	cmp	r6, #9
 8024700:	d937      	bls.n	8024772 <_strtod_l+0x34a>
 8024702:	9e08      	ldr	r6, [sp, #32]
 8024704:	1b89      	subs	r1, r1, r6
 8024706:	2908      	cmp	r1, #8
 8024708:	f644 661f 	movw	r6, #19999	; 0x4e1f
 802470c:	dc02      	bgt.n	8024714 <_strtod_l+0x2ec>
 802470e:	4576      	cmp	r6, lr
 8024710:	bfa8      	it	ge
 8024712:	4676      	movge	r6, lr
 8024714:	f1bc 0f00 	cmp.w	ip, #0
 8024718:	d000      	beq.n	802471c <_strtod_l+0x2f4>
 802471a:	4276      	negs	r6, r6
 802471c:	2d00      	cmp	r5, #0
 802471e:	d14f      	bne.n	80247c0 <_strtod_l+0x398>
 8024720:	9904      	ldr	r1, [sp, #16]
 8024722:	4301      	orrs	r1, r0
 8024724:	f47f aec2 	bne.w	80244ac <_strtod_l+0x84>
 8024728:	2a00      	cmp	r2, #0
 802472a:	f47f aedb 	bne.w	80244e4 <_strtod_l+0xbc>
 802472e:	2b69      	cmp	r3, #105	; 0x69
 8024730:	d027      	beq.n	8024782 <_strtod_l+0x35a>
 8024732:	dc24      	bgt.n	802477e <_strtod_l+0x356>
 8024734:	2b49      	cmp	r3, #73	; 0x49
 8024736:	d024      	beq.n	8024782 <_strtod_l+0x35a>
 8024738:	2b4e      	cmp	r3, #78	; 0x4e
 802473a:	f47f aed3 	bne.w	80244e4 <_strtod_l+0xbc>
 802473e:	499e      	ldr	r1, [pc, #632]	; (80249b8 <_strtod_l+0x590>)
 8024740:	a81d      	add	r0, sp, #116	; 0x74
 8024742:	f001 f901 	bl	8025948 <__match>
 8024746:	2800      	cmp	r0, #0
 8024748:	f43f aecc 	beq.w	80244e4 <_strtod_l+0xbc>
 802474c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802474e:	781b      	ldrb	r3, [r3, #0]
 8024750:	2b28      	cmp	r3, #40	; 0x28
 8024752:	d12d      	bne.n	80247b0 <_strtod_l+0x388>
 8024754:	4999      	ldr	r1, [pc, #612]	; (80249bc <_strtod_l+0x594>)
 8024756:	aa20      	add	r2, sp, #128	; 0x80
 8024758:	a81d      	add	r0, sp, #116	; 0x74
 802475a:	f001 f909 	bl	8025970 <__hexnan>
 802475e:	2805      	cmp	r0, #5
 8024760:	d126      	bne.n	80247b0 <_strtod_l+0x388>
 8024762:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8024764:	f8dd a080 	ldr.w	sl, [sp, #128]	; 0x80
 8024768:	f043 4bff 	orr.w	fp, r3, #2139095040	; 0x7f800000
 802476c:	f44b 0be0 	orr.w	fp, fp, #7340032	; 0x700000
 8024770:	e69c      	b.n	80244ac <_strtod_l+0x84>
 8024772:	210a      	movs	r1, #10
 8024774:	fb01 3e0e 	mla	lr, r1, lr, r3
 8024778:	f1ae 0e30 	sub.w	lr, lr, #48	; 0x30
 802477c:	e7b9      	b.n	80246f2 <_strtod_l+0x2ca>
 802477e:	2b6e      	cmp	r3, #110	; 0x6e
 8024780:	e7db      	b.n	802473a <_strtod_l+0x312>
 8024782:	498f      	ldr	r1, [pc, #572]	; (80249c0 <_strtod_l+0x598>)
 8024784:	a81d      	add	r0, sp, #116	; 0x74
 8024786:	f001 f8df 	bl	8025948 <__match>
 802478a:	2800      	cmp	r0, #0
 802478c:	f43f aeaa 	beq.w	80244e4 <_strtod_l+0xbc>
 8024790:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8024792:	498c      	ldr	r1, [pc, #560]	; (80249c4 <_strtod_l+0x59c>)
 8024794:	3b01      	subs	r3, #1
 8024796:	a81d      	add	r0, sp, #116	; 0x74
 8024798:	931d      	str	r3, [sp, #116]	; 0x74
 802479a:	f001 f8d5 	bl	8025948 <__match>
 802479e:	b910      	cbnz	r0, 80247a6 <_strtod_l+0x37e>
 80247a0:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80247a2:	3301      	adds	r3, #1
 80247a4:	931d      	str	r3, [sp, #116]	; 0x74
 80247a6:	f8df b22c 	ldr.w	fp, [pc, #556]	; 80249d4 <_strtod_l+0x5ac>
 80247aa:	f04f 0a00 	mov.w	sl, #0
 80247ae:	e67d      	b.n	80244ac <_strtod_l+0x84>
 80247b0:	4885      	ldr	r0, [pc, #532]	; (80249c8 <_strtod_l+0x5a0>)
 80247b2:	f7ff fb4d 	bl	8023e50 <nan>
 80247b6:	ed8d 0b04 	vstr	d0, [sp, #16]
 80247ba:	e9dd ab04 	ldrd	sl, fp, [sp, #16]
 80247be:	e675      	b.n	80244ac <_strtod_l+0x84>
 80247c0:	9b07      	ldr	r3, [sp, #28]
 80247c2:	9809      	ldr	r0, [sp, #36]	; 0x24
 80247c4:	1af3      	subs	r3, r6, r3
 80247c6:	2f00      	cmp	r7, #0
 80247c8:	bf08      	it	eq
 80247ca:	462f      	moveq	r7, r5
 80247cc:	2d10      	cmp	r5, #16
 80247ce:	9308      	str	r3, [sp, #32]
 80247d0:	46a8      	mov	r8, r5
 80247d2:	bfa8      	it	ge
 80247d4:	f04f 0810 	movge.w	r8, #16
 80247d8:	f7db feb4 	bl	8000544 <__aeabi_ui2d>
 80247dc:	2d09      	cmp	r5, #9
 80247de:	4682      	mov	sl, r0
 80247e0:	468b      	mov	fp, r1
 80247e2:	dd13      	ble.n	802480c <_strtod_l+0x3e4>
 80247e4:	4b79      	ldr	r3, [pc, #484]	; (80249cc <_strtod_l+0x5a4>)
 80247e6:	eb03 03c8 	add.w	r3, r3, r8, lsl #3
 80247ea:	e953 2312 	ldrd	r2, r3, [r3, #-72]	; 0x48
 80247ee:	f7db ff23 	bl	8000638 <__aeabi_dmul>
 80247f2:	4682      	mov	sl, r0
 80247f4:	4648      	mov	r0, r9
 80247f6:	468b      	mov	fp, r1
 80247f8:	f7db fea4 	bl	8000544 <__aeabi_ui2d>
 80247fc:	4602      	mov	r2, r0
 80247fe:	460b      	mov	r3, r1
 8024800:	4650      	mov	r0, sl
 8024802:	4659      	mov	r1, fp
 8024804:	f7db fd62 	bl	80002cc <__adddf3>
 8024808:	4682      	mov	sl, r0
 802480a:	468b      	mov	fp, r1
 802480c:	2d0f      	cmp	r5, #15
 802480e:	dc38      	bgt.n	8024882 <_strtod_l+0x45a>
 8024810:	9b08      	ldr	r3, [sp, #32]
 8024812:	2b00      	cmp	r3, #0
 8024814:	f43f ae4a 	beq.w	80244ac <_strtod_l+0x84>
 8024818:	dd24      	ble.n	8024864 <_strtod_l+0x43c>
 802481a:	2b16      	cmp	r3, #22
 802481c:	dc0b      	bgt.n	8024836 <_strtod_l+0x40e>
 802481e:	4d6b      	ldr	r5, [pc, #428]	; (80249cc <_strtod_l+0x5a4>)
 8024820:	eb05 05c3 	add.w	r5, r5, r3, lsl #3
 8024824:	e9d5 0100 	ldrd	r0, r1, [r5]
 8024828:	4652      	mov	r2, sl
 802482a:	465b      	mov	r3, fp
 802482c:	f7db ff04 	bl	8000638 <__aeabi_dmul>
 8024830:	4682      	mov	sl, r0
 8024832:	468b      	mov	fp, r1
 8024834:	e63a      	b.n	80244ac <_strtod_l+0x84>
 8024836:	9a08      	ldr	r2, [sp, #32]
 8024838:	f1c5 0325 	rsb	r3, r5, #37	; 0x25
 802483c:	4293      	cmp	r3, r2
 802483e:	db20      	blt.n	8024882 <_strtod_l+0x45a>
 8024840:	4c62      	ldr	r4, [pc, #392]	; (80249cc <_strtod_l+0x5a4>)
 8024842:	f1c5 050f 	rsb	r5, r5, #15
 8024846:	eb04 01c5 	add.w	r1, r4, r5, lsl #3
 802484a:	4652      	mov	r2, sl
 802484c:	465b      	mov	r3, fp
 802484e:	e9d1 0100 	ldrd	r0, r1, [r1]
 8024852:	f7db fef1 	bl	8000638 <__aeabi_dmul>
 8024856:	9b08      	ldr	r3, [sp, #32]
 8024858:	1b5d      	subs	r5, r3, r5
 802485a:	eb04 04c5 	add.w	r4, r4, r5, lsl #3
 802485e:	e9d4 2300 	ldrd	r2, r3, [r4]
 8024862:	e7e3      	b.n	802482c <_strtod_l+0x404>
 8024864:	9b08      	ldr	r3, [sp, #32]
 8024866:	3316      	adds	r3, #22
 8024868:	db0b      	blt.n	8024882 <_strtod_l+0x45a>
 802486a:	9b07      	ldr	r3, [sp, #28]
 802486c:	4a57      	ldr	r2, [pc, #348]	; (80249cc <_strtod_l+0x5a4>)
 802486e:	1b9e      	subs	r6, r3, r6
 8024870:	eb02 06c6 	add.w	r6, r2, r6, lsl #3
 8024874:	e9d6 2300 	ldrd	r2, r3, [r6]
 8024878:	4650      	mov	r0, sl
 802487a:	4659      	mov	r1, fp
 802487c:	f7dc f806 	bl	800088c <__aeabi_ddiv>
 8024880:	e7d6      	b.n	8024830 <_strtod_l+0x408>
 8024882:	9b08      	ldr	r3, [sp, #32]
 8024884:	eba5 0808 	sub.w	r8, r5, r8
 8024888:	4498      	add	r8, r3
 802488a:	f1b8 0f00 	cmp.w	r8, #0
 802488e:	dd71      	ble.n	8024974 <_strtod_l+0x54c>
 8024890:	f018 030f 	ands.w	r3, r8, #15
 8024894:	d00a      	beq.n	80248ac <_strtod_l+0x484>
 8024896:	494d      	ldr	r1, [pc, #308]	; (80249cc <_strtod_l+0x5a4>)
 8024898:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 802489c:	4652      	mov	r2, sl
 802489e:	465b      	mov	r3, fp
 80248a0:	e9d1 0100 	ldrd	r0, r1, [r1]
 80248a4:	f7db fec8 	bl	8000638 <__aeabi_dmul>
 80248a8:	4682      	mov	sl, r0
 80248aa:	468b      	mov	fp, r1
 80248ac:	f038 080f 	bics.w	r8, r8, #15
 80248b0:	d04d      	beq.n	802494e <_strtod_l+0x526>
 80248b2:	f5b8 7f9a 	cmp.w	r8, #308	; 0x134
 80248b6:	dd22      	ble.n	80248fe <_strtod_l+0x4d6>
 80248b8:	2500      	movs	r5, #0
 80248ba:	462e      	mov	r6, r5
 80248bc:	9509      	str	r5, [sp, #36]	; 0x24
 80248be:	9507      	str	r5, [sp, #28]
 80248c0:	2322      	movs	r3, #34	; 0x22
 80248c2:	f8df b110 	ldr.w	fp, [pc, #272]	; 80249d4 <_strtod_l+0x5ac>
 80248c6:	6023      	str	r3, [r4, #0]
 80248c8:	f04f 0a00 	mov.w	sl, #0
 80248cc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80248ce:	2b00      	cmp	r3, #0
 80248d0:	f43f adec 	beq.w	80244ac <_strtod_l+0x84>
 80248d4:	991e      	ldr	r1, [sp, #120]	; 0x78
 80248d6:	4620      	mov	r0, r4
 80248d8:	f001 f948 	bl	8025b6c <_Bfree>
 80248dc:	9907      	ldr	r1, [sp, #28]
 80248de:	4620      	mov	r0, r4
 80248e0:	f001 f944 	bl	8025b6c <_Bfree>
 80248e4:	4631      	mov	r1, r6
 80248e6:	4620      	mov	r0, r4
 80248e8:	f001 f940 	bl	8025b6c <_Bfree>
 80248ec:	9909      	ldr	r1, [sp, #36]	; 0x24
 80248ee:	4620      	mov	r0, r4
 80248f0:	f001 f93c 	bl	8025b6c <_Bfree>
 80248f4:	4629      	mov	r1, r5
 80248f6:	4620      	mov	r0, r4
 80248f8:	f001 f938 	bl	8025b6c <_Bfree>
 80248fc:	e5d6      	b.n	80244ac <_strtod_l+0x84>
 80248fe:	2300      	movs	r3, #0
 8024900:	ea4f 1828 	mov.w	r8, r8, asr #4
 8024904:	4650      	mov	r0, sl
 8024906:	4659      	mov	r1, fp
 8024908:	4699      	mov	r9, r3
 802490a:	f1b8 0f01 	cmp.w	r8, #1
 802490e:	dc21      	bgt.n	8024954 <_strtod_l+0x52c>
 8024910:	b10b      	cbz	r3, 8024916 <_strtod_l+0x4ee>
 8024912:	4682      	mov	sl, r0
 8024914:	468b      	mov	fp, r1
 8024916:	4b2e      	ldr	r3, [pc, #184]	; (80249d0 <_strtod_l+0x5a8>)
 8024918:	f1ab 7b54 	sub.w	fp, fp, #55574528	; 0x3500000
 802491c:	eb03 09c9 	add.w	r9, r3, r9, lsl #3
 8024920:	4652      	mov	r2, sl
 8024922:	465b      	mov	r3, fp
 8024924:	e9d9 0100 	ldrd	r0, r1, [r9]
 8024928:	f7db fe86 	bl	8000638 <__aeabi_dmul>
 802492c:	4b29      	ldr	r3, [pc, #164]	; (80249d4 <_strtod_l+0x5ac>)
 802492e:	460a      	mov	r2, r1
 8024930:	400b      	ands	r3, r1
 8024932:	4929      	ldr	r1, [pc, #164]	; (80249d8 <_strtod_l+0x5b0>)
 8024934:	428b      	cmp	r3, r1
 8024936:	4682      	mov	sl, r0
 8024938:	d8be      	bhi.n	80248b8 <_strtod_l+0x490>
 802493a:	f5a1 1180 	sub.w	r1, r1, #1048576	; 0x100000
 802493e:	428b      	cmp	r3, r1
 8024940:	bf86      	itte	hi
 8024942:	f8df b098 	ldrhi.w	fp, [pc, #152]	; 80249dc <_strtod_l+0x5b4>
 8024946:	f04f 3aff 	movhi.w	sl, #4294967295
 802494a:	f102 7b54 	addls.w	fp, r2, #55574528	; 0x3500000
 802494e:	2300      	movs	r3, #0
 8024950:	9304      	str	r3, [sp, #16]
 8024952:	e081      	b.n	8024a58 <_strtod_l+0x630>
 8024954:	f018 0f01 	tst.w	r8, #1
 8024958:	d007      	beq.n	802496a <_strtod_l+0x542>
 802495a:	4b1d      	ldr	r3, [pc, #116]	; (80249d0 <_strtod_l+0x5a8>)
 802495c:	eb03 03c9 	add.w	r3, r3, r9, lsl #3
 8024960:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024964:	f7db fe68 	bl	8000638 <__aeabi_dmul>
 8024968:	2301      	movs	r3, #1
 802496a:	f109 0901 	add.w	r9, r9, #1
 802496e:	ea4f 0868 	mov.w	r8, r8, asr #1
 8024972:	e7ca      	b.n	802490a <_strtod_l+0x4e2>
 8024974:	d0eb      	beq.n	802494e <_strtod_l+0x526>
 8024976:	f1c8 0800 	rsb	r8, r8, #0
 802497a:	f018 020f 	ands.w	r2, r8, #15
 802497e:	d00a      	beq.n	8024996 <_strtod_l+0x56e>
 8024980:	4b12      	ldr	r3, [pc, #72]	; (80249cc <_strtod_l+0x5a4>)
 8024982:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8024986:	4650      	mov	r0, sl
 8024988:	4659      	mov	r1, fp
 802498a:	e9d3 2300 	ldrd	r2, r3, [r3]
 802498e:	f7db ff7d 	bl	800088c <__aeabi_ddiv>
 8024992:	4682      	mov	sl, r0
 8024994:	468b      	mov	fp, r1
 8024996:	ea5f 1828 	movs.w	r8, r8, asr #4
 802499a:	d0d8      	beq.n	802494e <_strtod_l+0x526>
 802499c:	f1b8 0f1f 	cmp.w	r8, #31
 80249a0:	dd1e      	ble.n	80249e0 <_strtod_l+0x5b8>
 80249a2:	2500      	movs	r5, #0
 80249a4:	462e      	mov	r6, r5
 80249a6:	9509      	str	r5, [sp, #36]	; 0x24
 80249a8:	9507      	str	r5, [sp, #28]
 80249aa:	2322      	movs	r3, #34	; 0x22
 80249ac:	f04f 0a00 	mov.w	sl, #0
 80249b0:	f04f 0b00 	mov.w	fp, #0
 80249b4:	6023      	str	r3, [r4, #0]
 80249b6:	e789      	b.n	80248cc <_strtod_l+0x4a4>
 80249b8:	080283ed 	.word	0x080283ed
 80249bc:	08028404 	.word	0x08028404
 80249c0:	080283e4 	.word	0x080283e4
 80249c4:	080283e7 	.word	0x080283e7
 80249c8:	080287da 	.word	0x080287da
 80249cc:	08028698 	.word	0x08028698
 80249d0:	08028670 	.word	0x08028670
 80249d4:	7ff00000 	.word	0x7ff00000
 80249d8:	7ca00000 	.word	0x7ca00000
 80249dc:	7fefffff 	.word	0x7fefffff
 80249e0:	f018 0310 	ands.w	r3, r8, #16
 80249e4:	bf18      	it	ne
 80249e6:	236a      	movne	r3, #106	; 0x6a
 80249e8:	f8df 93b4 	ldr.w	r9, [pc, #948]	; 8024da0 <_strtod_l+0x978>
 80249ec:	9304      	str	r3, [sp, #16]
 80249ee:	4650      	mov	r0, sl
 80249f0:	4659      	mov	r1, fp
 80249f2:	2300      	movs	r3, #0
 80249f4:	f018 0f01 	tst.w	r8, #1
 80249f8:	d004      	beq.n	8024a04 <_strtod_l+0x5dc>
 80249fa:	e9d9 2300 	ldrd	r2, r3, [r9]
 80249fe:	f7db fe1b 	bl	8000638 <__aeabi_dmul>
 8024a02:	2301      	movs	r3, #1
 8024a04:	ea5f 0868 	movs.w	r8, r8, asr #1
 8024a08:	f109 0908 	add.w	r9, r9, #8
 8024a0c:	d1f2      	bne.n	80249f4 <_strtod_l+0x5cc>
 8024a0e:	b10b      	cbz	r3, 8024a14 <_strtod_l+0x5ec>
 8024a10:	4682      	mov	sl, r0
 8024a12:	468b      	mov	fp, r1
 8024a14:	9b04      	ldr	r3, [sp, #16]
 8024a16:	b1bb      	cbz	r3, 8024a48 <_strtod_l+0x620>
 8024a18:	f3cb 530a 	ubfx	r3, fp, #20, #11
 8024a1c:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 8024a20:	2b00      	cmp	r3, #0
 8024a22:	4659      	mov	r1, fp
 8024a24:	dd10      	ble.n	8024a48 <_strtod_l+0x620>
 8024a26:	2b1f      	cmp	r3, #31
 8024a28:	f340 8128 	ble.w	8024c7c <_strtod_l+0x854>
 8024a2c:	2b34      	cmp	r3, #52	; 0x34
 8024a2e:	bfde      	ittt	le
 8024a30:	3b20      	suble	r3, #32
 8024a32:	f04f 32ff 	movle.w	r2, #4294967295
 8024a36:	fa02 f303 	lslle.w	r3, r2, r3
 8024a3a:	f04f 0a00 	mov.w	sl, #0
 8024a3e:	bfcc      	ite	gt
 8024a40:	f04f 7b5c 	movgt.w	fp, #57671680	; 0x3700000
 8024a44:	ea03 0b01 	andle.w	fp, r3, r1
 8024a48:	2200      	movs	r2, #0
 8024a4a:	2300      	movs	r3, #0
 8024a4c:	4650      	mov	r0, sl
 8024a4e:	4659      	mov	r1, fp
 8024a50:	f7dc f85a 	bl	8000b08 <__aeabi_dcmpeq>
 8024a54:	2800      	cmp	r0, #0
 8024a56:	d1a4      	bne.n	80249a2 <_strtod_l+0x57a>
 8024a58:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024a5a:	9300      	str	r3, [sp, #0]
 8024a5c:	990a      	ldr	r1, [sp, #40]	; 0x28
 8024a5e:	462b      	mov	r3, r5
 8024a60:	463a      	mov	r2, r7
 8024a62:	4620      	mov	r0, r4
 8024a64:	f001 f8ee 	bl	8025c44 <__s2b>
 8024a68:	9009      	str	r0, [sp, #36]	; 0x24
 8024a6a:	2800      	cmp	r0, #0
 8024a6c:	f43f af24 	beq.w	80248b8 <_strtod_l+0x490>
 8024a70:	9b07      	ldr	r3, [sp, #28]
 8024a72:	1b9e      	subs	r6, r3, r6
 8024a74:	9b08      	ldr	r3, [sp, #32]
 8024a76:	2b00      	cmp	r3, #0
 8024a78:	bfb4      	ite	lt
 8024a7a:	4633      	movlt	r3, r6
 8024a7c:	2300      	movge	r3, #0
 8024a7e:	9310      	str	r3, [sp, #64]	; 0x40
 8024a80:	9b08      	ldr	r3, [sp, #32]
 8024a82:	2500      	movs	r5, #0
 8024a84:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8024a88:	9318      	str	r3, [sp, #96]	; 0x60
 8024a8a:	462e      	mov	r6, r5
 8024a8c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024a8e:	4620      	mov	r0, r4
 8024a90:	6859      	ldr	r1, [r3, #4]
 8024a92:	f001 f82b 	bl	8025aec <_Balloc>
 8024a96:	9007      	str	r0, [sp, #28]
 8024a98:	2800      	cmp	r0, #0
 8024a9a:	f43f af11 	beq.w	80248c0 <_strtod_l+0x498>
 8024a9e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024aa0:	691a      	ldr	r2, [r3, #16]
 8024aa2:	3202      	adds	r2, #2
 8024aa4:	f103 010c 	add.w	r1, r3, #12
 8024aa8:	0092      	lsls	r2, r2, #2
 8024aaa:	300c      	adds	r0, #12
 8024aac:	f7ff fb72 	bl	8024194 <memcpy>
 8024ab0:	ec4b ab10 	vmov	d0, sl, fp
 8024ab4:	aa20      	add	r2, sp, #128	; 0x80
 8024ab6:	a91f      	add	r1, sp, #124	; 0x7c
 8024ab8:	4620      	mov	r0, r4
 8024aba:	e9cd ab0a 	strd	sl, fp, [sp, #40]	; 0x28
 8024abe:	f001 fbfd 	bl	80262bc <__d2b>
 8024ac2:	901e      	str	r0, [sp, #120]	; 0x78
 8024ac4:	2800      	cmp	r0, #0
 8024ac6:	f43f aefb 	beq.w	80248c0 <_strtod_l+0x498>
 8024aca:	2101      	movs	r1, #1
 8024acc:	4620      	mov	r0, r4
 8024ace:	f001 f953 	bl	8025d78 <__i2b>
 8024ad2:	4606      	mov	r6, r0
 8024ad4:	2800      	cmp	r0, #0
 8024ad6:	f43f aef3 	beq.w	80248c0 <_strtod_l+0x498>
 8024ada:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8024adc:	9904      	ldr	r1, [sp, #16]
 8024ade:	2b00      	cmp	r3, #0
 8024ae0:	bfab      	itete	ge
 8024ae2:	9a10      	ldrge	r2, [sp, #64]	; 0x40
 8024ae4:	9a18      	ldrlt	r2, [sp, #96]	; 0x60
 8024ae6:	9f18      	ldrge	r7, [sp, #96]	; 0x60
 8024ae8:	f8dd 9040 	ldrlt.w	r9, [sp, #64]	; 0x40
 8024aec:	bfac      	ite	ge
 8024aee:	eb03 0902 	addge.w	r9, r3, r2
 8024af2:	1ad7      	sublt	r7, r2, r3
 8024af4:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8024af6:	eba3 0801 	sub.w	r8, r3, r1
 8024afa:	4490      	add	r8, r2
 8024afc:	4ba3      	ldr	r3, [pc, #652]	; (8024d8c <_strtod_l+0x964>)
 8024afe:	f108 38ff 	add.w	r8, r8, #4294967295
 8024b02:	4598      	cmp	r8, r3
 8024b04:	f1c2 0236 	rsb	r2, r2, #54	; 0x36
 8024b08:	f280 80cc 	bge.w	8024ca4 <_strtod_l+0x87c>
 8024b0c:	eba3 0308 	sub.w	r3, r3, r8
 8024b10:	2b1f      	cmp	r3, #31
 8024b12:	eba2 0203 	sub.w	r2, r2, r3
 8024b16:	f04f 0101 	mov.w	r1, #1
 8024b1a:	f300 80b6 	bgt.w	8024c8a <_strtod_l+0x862>
 8024b1e:	fa01 f303 	lsl.w	r3, r1, r3
 8024b22:	9311      	str	r3, [sp, #68]	; 0x44
 8024b24:	2300      	movs	r3, #0
 8024b26:	930c      	str	r3, [sp, #48]	; 0x30
 8024b28:	eb09 0802 	add.w	r8, r9, r2
 8024b2c:	9b04      	ldr	r3, [sp, #16]
 8024b2e:	45c1      	cmp	r9, r8
 8024b30:	4417      	add	r7, r2
 8024b32:	441f      	add	r7, r3
 8024b34:	464b      	mov	r3, r9
 8024b36:	bfa8      	it	ge
 8024b38:	4643      	movge	r3, r8
 8024b3a:	42bb      	cmp	r3, r7
 8024b3c:	bfa8      	it	ge
 8024b3e:	463b      	movge	r3, r7
 8024b40:	2b00      	cmp	r3, #0
 8024b42:	bfc2      	ittt	gt
 8024b44:	eba8 0803 	subgt.w	r8, r8, r3
 8024b48:	1aff      	subgt	r7, r7, r3
 8024b4a:	eba9 0903 	subgt.w	r9, r9, r3
 8024b4e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8024b50:	2b00      	cmp	r3, #0
 8024b52:	dd17      	ble.n	8024b84 <_strtod_l+0x75c>
 8024b54:	4631      	mov	r1, r6
 8024b56:	461a      	mov	r2, r3
 8024b58:	4620      	mov	r0, r4
 8024b5a:	f001 f9c9 	bl	8025ef0 <__pow5mult>
 8024b5e:	4606      	mov	r6, r0
 8024b60:	2800      	cmp	r0, #0
 8024b62:	f43f aead 	beq.w	80248c0 <_strtod_l+0x498>
 8024b66:	4601      	mov	r1, r0
 8024b68:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8024b6a:	4620      	mov	r0, r4
 8024b6c:	f001 f91a 	bl	8025da4 <__multiply>
 8024b70:	900f      	str	r0, [sp, #60]	; 0x3c
 8024b72:	2800      	cmp	r0, #0
 8024b74:	f43f aea4 	beq.w	80248c0 <_strtod_l+0x498>
 8024b78:	991e      	ldr	r1, [sp, #120]	; 0x78
 8024b7a:	4620      	mov	r0, r4
 8024b7c:	f000 fff6 	bl	8025b6c <_Bfree>
 8024b80:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8024b82:	931e      	str	r3, [sp, #120]	; 0x78
 8024b84:	f1b8 0f00 	cmp.w	r8, #0
 8024b88:	f300 8091 	bgt.w	8024cae <_strtod_l+0x886>
 8024b8c:	9b08      	ldr	r3, [sp, #32]
 8024b8e:	2b00      	cmp	r3, #0
 8024b90:	dd08      	ble.n	8024ba4 <_strtod_l+0x77c>
 8024b92:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8024b94:	9907      	ldr	r1, [sp, #28]
 8024b96:	4620      	mov	r0, r4
 8024b98:	f001 f9aa 	bl	8025ef0 <__pow5mult>
 8024b9c:	9007      	str	r0, [sp, #28]
 8024b9e:	2800      	cmp	r0, #0
 8024ba0:	f43f ae8e 	beq.w	80248c0 <_strtod_l+0x498>
 8024ba4:	2f00      	cmp	r7, #0
 8024ba6:	dd08      	ble.n	8024bba <_strtod_l+0x792>
 8024ba8:	9907      	ldr	r1, [sp, #28]
 8024baa:	463a      	mov	r2, r7
 8024bac:	4620      	mov	r0, r4
 8024bae:	f001 f9f9 	bl	8025fa4 <__lshift>
 8024bb2:	9007      	str	r0, [sp, #28]
 8024bb4:	2800      	cmp	r0, #0
 8024bb6:	f43f ae83 	beq.w	80248c0 <_strtod_l+0x498>
 8024bba:	f1b9 0f00 	cmp.w	r9, #0
 8024bbe:	dd08      	ble.n	8024bd2 <_strtod_l+0x7aa>
 8024bc0:	4631      	mov	r1, r6
 8024bc2:	464a      	mov	r2, r9
 8024bc4:	4620      	mov	r0, r4
 8024bc6:	f001 f9ed 	bl	8025fa4 <__lshift>
 8024bca:	4606      	mov	r6, r0
 8024bcc:	2800      	cmp	r0, #0
 8024bce:	f43f ae77 	beq.w	80248c0 <_strtod_l+0x498>
 8024bd2:	9a07      	ldr	r2, [sp, #28]
 8024bd4:	991e      	ldr	r1, [sp, #120]	; 0x78
 8024bd6:	4620      	mov	r0, r4
 8024bd8:	f001 fa6c 	bl	80260b4 <__mdiff>
 8024bdc:	4605      	mov	r5, r0
 8024bde:	2800      	cmp	r0, #0
 8024be0:	f43f ae6e 	beq.w	80248c0 <_strtod_l+0x498>
 8024be4:	68c3      	ldr	r3, [r0, #12]
 8024be6:	930f      	str	r3, [sp, #60]	; 0x3c
 8024be8:	2300      	movs	r3, #0
 8024bea:	60c3      	str	r3, [r0, #12]
 8024bec:	4631      	mov	r1, r6
 8024bee:	f001 fa45 	bl	802607c <__mcmp>
 8024bf2:	2800      	cmp	r0, #0
 8024bf4:	da65      	bge.n	8024cc2 <_strtod_l+0x89a>
 8024bf6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8024bf8:	ea53 030a 	orrs.w	r3, r3, sl
 8024bfc:	f040 8087 	bne.w	8024d0e <_strtod_l+0x8e6>
 8024c00:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8024c04:	2b00      	cmp	r3, #0
 8024c06:	f040 8082 	bne.w	8024d0e <_strtod_l+0x8e6>
 8024c0a:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 8024c0e:	0d1b      	lsrs	r3, r3, #20
 8024c10:	051b      	lsls	r3, r3, #20
 8024c12:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
 8024c16:	d97a      	bls.n	8024d0e <_strtod_l+0x8e6>
 8024c18:	696b      	ldr	r3, [r5, #20]
 8024c1a:	b913      	cbnz	r3, 8024c22 <_strtod_l+0x7fa>
 8024c1c:	692b      	ldr	r3, [r5, #16]
 8024c1e:	2b01      	cmp	r3, #1
 8024c20:	dd75      	ble.n	8024d0e <_strtod_l+0x8e6>
 8024c22:	4629      	mov	r1, r5
 8024c24:	2201      	movs	r2, #1
 8024c26:	4620      	mov	r0, r4
 8024c28:	f001 f9bc 	bl	8025fa4 <__lshift>
 8024c2c:	4631      	mov	r1, r6
 8024c2e:	4605      	mov	r5, r0
 8024c30:	f001 fa24 	bl	802607c <__mcmp>
 8024c34:	2800      	cmp	r0, #0
 8024c36:	dd6a      	ble.n	8024d0e <_strtod_l+0x8e6>
 8024c38:	9904      	ldr	r1, [sp, #16]
 8024c3a:	4a55      	ldr	r2, [pc, #340]	; (8024d90 <_strtod_l+0x968>)
 8024c3c:	465b      	mov	r3, fp
 8024c3e:	2900      	cmp	r1, #0
 8024c40:	f000 8085 	beq.w	8024d4e <_strtod_l+0x926>
 8024c44:	ea02 010b 	and.w	r1, r2, fp
 8024c48:	f1b1 6fd6 	cmp.w	r1, #112197632	; 0x6b00000
 8024c4c:	dc7f      	bgt.n	8024d4e <_strtod_l+0x926>
 8024c4e:	f1b1 7f5c 	cmp.w	r1, #57671680	; 0x3700000
 8024c52:	f77f aeaa 	ble.w	80249aa <_strtod_l+0x582>
 8024c56:	4a4f      	ldr	r2, [pc, #316]	; (8024d94 <_strtod_l+0x96c>)
 8024c58:	2300      	movs	r3, #0
 8024c5a:	e9cd 3216 	strd	r3, r2, [sp, #88]	; 0x58
 8024c5e:	4650      	mov	r0, sl
 8024c60:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
 8024c64:	4659      	mov	r1, fp
 8024c66:	f7db fce7 	bl	8000638 <__aeabi_dmul>
 8024c6a:	460b      	mov	r3, r1
 8024c6c:	4303      	orrs	r3, r0
 8024c6e:	bf08      	it	eq
 8024c70:	2322      	moveq	r3, #34	; 0x22
 8024c72:	4682      	mov	sl, r0
 8024c74:	468b      	mov	fp, r1
 8024c76:	bf08      	it	eq
 8024c78:	6023      	streq	r3, [r4, #0]
 8024c7a:	e62b      	b.n	80248d4 <_strtod_l+0x4ac>
 8024c7c:	f04f 32ff 	mov.w	r2, #4294967295
 8024c80:	fa02 f303 	lsl.w	r3, r2, r3
 8024c84:	ea03 0a0a 	and.w	sl, r3, sl
 8024c88:	e6de      	b.n	8024a48 <_strtod_l+0x620>
 8024c8a:	f1c8 487f 	rsb	r8, r8, #4278190080	; 0xff000000
 8024c8e:	f508 087f 	add.w	r8, r8, #16711680	; 0xff0000
 8024c92:	f508 487b 	add.w	r8, r8, #64256	; 0xfb00
 8024c96:	f108 08e2 	add.w	r8, r8, #226	; 0xe2
 8024c9a:	fa01 f308 	lsl.w	r3, r1, r8
 8024c9e:	930c      	str	r3, [sp, #48]	; 0x30
 8024ca0:	9111      	str	r1, [sp, #68]	; 0x44
 8024ca2:	e741      	b.n	8024b28 <_strtod_l+0x700>
 8024ca4:	2300      	movs	r3, #0
 8024ca6:	930c      	str	r3, [sp, #48]	; 0x30
 8024ca8:	2301      	movs	r3, #1
 8024caa:	9311      	str	r3, [sp, #68]	; 0x44
 8024cac:	e73c      	b.n	8024b28 <_strtod_l+0x700>
 8024cae:	991e      	ldr	r1, [sp, #120]	; 0x78
 8024cb0:	4642      	mov	r2, r8
 8024cb2:	4620      	mov	r0, r4
 8024cb4:	f001 f976 	bl	8025fa4 <__lshift>
 8024cb8:	901e      	str	r0, [sp, #120]	; 0x78
 8024cba:	2800      	cmp	r0, #0
 8024cbc:	f47f af66 	bne.w	8024b8c <_strtod_l+0x764>
 8024cc0:	e5fe      	b.n	80248c0 <_strtod_l+0x498>
 8024cc2:	465f      	mov	r7, fp
 8024cc4:	d16e      	bne.n	8024da4 <_strtod_l+0x97c>
 8024cc6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8024cc8:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8024ccc:	b342      	cbz	r2, 8024d20 <_strtod_l+0x8f8>
 8024cce:	4a32      	ldr	r2, [pc, #200]	; (8024d98 <_strtod_l+0x970>)
 8024cd0:	4293      	cmp	r3, r2
 8024cd2:	d128      	bne.n	8024d26 <_strtod_l+0x8fe>
 8024cd4:	9b04      	ldr	r3, [sp, #16]
 8024cd6:	4650      	mov	r0, sl
 8024cd8:	b1eb      	cbz	r3, 8024d16 <_strtod_l+0x8ee>
 8024cda:	4a2d      	ldr	r2, [pc, #180]	; (8024d90 <_strtod_l+0x968>)
 8024cdc:	403a      	ands	r2, r7
 8024cde:	f1b2 6fd4 	cmp.w	r2, #111149056	; 0x6a00000
 8024ce2:	f04f 31ff 	mov.w	r1, #4294967295
 8024ce6:	d819      	bhi.n	8024d1c <_strtod_l+0x8f4>
 8024ce8:	0d12      	lsrs	r2, r2, #20
 8024cea:	f1c2 036b 	rsb	r3, r2, #107	; 0x6b
 8024cee:	fa01 f303 	lsl.w	r3, r1, r3
 8024cf2:	4298      	cmp	r0, r3
 8024cf4:	d117      	bne.n	8024d26 <_strtod_l+0x8fe>
 8024cf6:	4b29      	ldr	r3, [pc, #164]	; (8024d9c <_strtod_l+0x974>)
 8024cf8:	429f      	cmp	r7, r3
 8024cfa:	d102      	bne.n	8024d02 <_strtod_l+0x8da>
 8024cfc:	3001      	adds	r0, #1
 8024cfe:	f43f addf 	beq.w	80248c0 <_strtod_l+0x498>
 8024d02:	4b23      	ldr	r3, [pc, #140]	; (8024d90 <_strtod_l+0x968>)
 8024d04:	403b      	ands	r3, r7
 8024d06:	f503 1b80 	add.w	fp, r3, #1048576	; 0x100000
 8024d0a:	f04f 0a00 	mov.w	sl, #0
 8024d0e:	9b04      	ldr	r3, [sp, #16]
 8024d10:	2b00      	cmp	r3, #0
 8024d12:	d1a0      	bne.n	8024c56 <_strtod_l+0x82e>
 8024d14:	e5de      	b.n	80248d4 <_strtod_l+0x4ac>
 8024d16:	f04f 33ff 	mov.w	r3, #4294967295
 8024d1a:	e7ea      	b.n	8024cf2 <_strtod_l+0x8ca>
 8024d1c:	460b      	mov	r3, r1
 8024d1e:	e7e8      	b.n	8024cf2 <_strtod_l+0x8ca>
 8024d20:	ea53 030a 	orrs.w	r3, r3, sl
 8024d24:	d088      	beq.n	8024c38 <_strtod_l+0x810>
 8024d26:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8024d28:	b1db      	cbz	r3, 8024d62 <_strtod_l+0x93a>
 8024d2a:	423b      	tst	r3, r7
 8024d2c:	d0ef      	beq.n	8024d0e <_strtod_l+0x8e6>
 8024d2e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8024d30:	9a04      	ldr	r2, [sp, #16]
 8024d32:	4650      	mov	r0, sl
 8024d34:	4659      	mov	r1, fp
 8024d36:	b1c3      	cbz	r3, 8024d6a <_strtod_l+0x942>
 8024d38:	f7ff fb5a 	bl	80243f0 <sulp>
 8024d3c:	4602      	mov	r2, r0
 8024d3e:	460b      	mov	r3, r1
 8024d40:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8024d44:	f7db fac2 	bl	80002cc <__adddf3>
 8024d48:	4682      	mov	sl, r0
 8024d4a:	468b      	mov	fp, r1
 8024d4c:	e7df      	b.n	8024d0e <_strtod_l+0x8e6>
 8024d4e:	4013      	ands	r3, r2
 8024d50:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
 8024d54:	ea6f 5b13 	mvn.w	fp, r3, lsr #20
 8024d58:	ea6f 5b0b 	mvn.w	fp, fp, lsl #20
 8024d5c:	f04f 3aff 	mov.w	sl, #4294967295
 8024d60:	e7d5      	b.n	8024d0e <_strtod_l+0x8e6>
 8024d62:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8024d64:	ea13 0f0a 	tst.w	r3, sl
 8024d68:	e7e0      	b.n	8024d2c <_strtod_l+0x904>
 8024d6a:	f7ff fb41 	bl	80243f0 <sulp>
 8024d6e:	4602      	mov	r2, r0
 8024d70:	460b      	mov	r3, r1
 8024d72:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8024d76:	f7db faa7 	bl	80002c8 <__aeabi_dsub>
 8024d7a:	2200      	movs	r2, #0
 8024d7c:	2300      	movs	r3, #0
 8024d7e:	4682      	mov	sl, r0
 8024d80:	468b      	mov	fp, r1
 8024d82:	f7db fec1 	bl	8000b08 <__aeabi_dcmpeq>
 8024d86:	2800      	cmp	r0, #0
 8024d88:	d0c1      	beq.n	8024d0e <_strtod_l+0x8e6>
 8024d8a:	e60e      	b.n	80249aa <_strtod_l+0x582>
 8024d8c:	fffffc02 	.word	0xfffffc02
 8024d90:	7ff00000 	.word	0x7ff00000
 8024d94:	39500000 	.word	0x39500000
 8024d98:	000fffff 	.word	0x000fffff
 8024d9c:	7fefffff 	.word	0x7fefffff
 8024da0:	08028418 	.word	0x08028418
 8024da4:	4631      	mov	r1, r6
 8024da6:	4628      	mov	r0, r5
 8024da8:	f001 fae4 	bl	8026374 <__ratio>
 8024dac:	ec59 8b10 	vmov	r8, r9, d0
 8024db0:	ee10 0a10 	vmov	r0, s0
 8024db4:	2200      	movs	r2, #0
 8024db6:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8024dba:	4649      	mov	r1, r9
 8024dbc:	f7db feb8 	bl	8000b30 <__aeabi_dcmple>
 8024dc0:	2800      	cmp	r0, #0
 8024dc2:	d07c      	beq.n	8024ebe <_strtod_l+0xa96>
 8024dc4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8024dc6:	2b00      	cmp	r3, #0
 8024dc8:	d04c      	beq.n	8024e64 <_strtod_l+0xa3c>
 8024dca:	4b95      	ldr	r3, [pc, #596]	; (8025020 <_strtod_l+0xbf8>)
 8024dcc:	2200      	movs	r2, #0
 8024dce:	e9cd 230c 	strd	r2, r3, [sp, #48]	; 0x30
 8024dd2:	f8df 924c 	ldr.w	r9, [pc, #588]	; 8025020 <_strtod_l+0xbf8>
 8024dd6:	f04f 0800 	mov.w	r8, #0
 8024dda:	4b92      	ldr	r3, [pc, #584]	; (8025024 <_strtod_l+0xbfc>)
 8024ddc:	403b      	ands	r3, r7
 8024dde:	9311      	str	r3, [sp, #68]	; 0x44
 8024de0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8024de2:	4b91      	ldr	r3, [pc, #580]	; (8025028 <_strtod_l+0xc00>)
 8024de4:	429a      	cmp	r2, r3
 8024de6:	f040 80b2 	bne.w	8024f4e <_strtod_l+0xb26>
 8024dea:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8024dee:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8024df2:	f1a7 7b54 	sub.w	fp, r7, #55574528	; 0x3500000
 8024df6:	ec4b ab10 	vmov	d0, sl, fp
 8024dfa:	e9cd 2316 	strd	r2, r3, [sp, #88]	; 0x58
 8024dfe:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
 8024e02:	f001 f9df 	bl	80261c4 <__ulp>
 8024e06:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8024e0a:	ec53 2b10 	vmov	r2, r3, d0
 8024e0e:	f7db fc13 	bl	8000638 <__aeabi_dmul>
 8024e12:	4652      	mov	r2, sl
 8024e14:	465b      	mov	r3, fp
 8024e16:	f7db fa59 	bl	80002cc <__adddf3>
 8024e1a:	460b      	mov	r3, r1
 8024e1c:	4981      	ldr	r1, [pc, #516]	; (8025024 <_strtod_l+0xbfc>)
 8024e1e:	4a83      	ldr	r2, [pc, #524]	; (802502c <_strtod_l+0xc04>)
 8024e20:	4019      	ands	r1, r3
 8024e22:	4291      	cmp	r1, r2
 8024e24:	4682      	mov	sl, r0
 8024e26:	d95e      	bls.n	8024ee6 <_strtod_l+0xabe>
 8024e28:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8024e2a:	f102 7254 	add.w	r2, r2, #55574528	; 0x3500000
 8024e2e:	4293      	cmp	r3, r2
 8024e30:	d103      	bne.n	8024e3a <_strtod_l+0xa12>
 8024e32:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8024e34:	3301      	adds	r3, #1
 8024e36:	f43f ad43 	beq.w	80248c0 <_strtod_l+0x498>
 8024e3a:	f8df b1fc 	ldr.w	fp, [pc, #508]	; 8025038 <_strtod_l+0xc10>
 8024e3e:	f04f 3aff 	mov.w	sl, #4294967295
 8024e42:	991e      	ldr	r1, [sp, #120]	; 0x78
 8024e44:	4620      	mov	r0, r4
 8024e46:	f000 fe91 	bl	8025b6c <_Bfree>
 8024e4a:	9907      	ldr	r1, [sp, #28]
 8024e4c:	4620      	mov	r0, r4
 8024e4e:	f000 fe8d 	bl	8025b6c <_Bfree>
 8024e52:	4631      	mov	r1, r6
 8024e54:	4620      	mov	r0, r4
 8024e56:	f000 fe89 	bl	8025b6c <_Bfree>
 8024e5a:	4629      	mov	r1, r5
 8024e5c:	4620      	mov	r0, r4
 8024e5e:	f000 fe85 	bl	8025b6c <_Bfree>
 8024e62:	e613      	b.n	8024a8c <_strtod_l+0x664>
 8024e64:	f1ba 0f00 	cmp.w	sl, #0
 8024e68:	d11b      	bne.n	8024ea2 <_strtod_l+0xa7a>
 8024e6a:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8024e6e:	b9f3      	cbnz	r3, 8024eae <_strtod_l+0xa86>
 8024e70:	4b6b      	ldr	r3, [pc, #428]	; (8025020 <_strtod_l+0xbf8>)
 8024e72:	2200      	movs	r2, #0
 8024e74:	4640      	mov	r0, r8
 8024e76:	4649      	mov	r1, r9
 8024e78:	f7db fe50 	bl	8000b1c <__aeabi_dcmplt>
 8024e7c:	b9d0      	cbnz	r0, 8024eb4 <_strtod_l+0xa8c>
 8024e7e:	4640      	mov	r0, r8
 8024e80:	4649      	mov	r1, r9
 8024e82:	4b6b      	ldr	r3, [pc, #428]	; (8025030 <_strtod_l+0xc08>)
 8024e84:	2200      	movs	r2, #0
 8024e86:	f7db fbd7 	bl	8000638 <__aeabi_dmul>
 8024e8a:	4680      	mov	r8, r0
 8024e8c:	4689      	mov	r9, r1
 8024e8e:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 8024e92:	f8cd 8068 	str.w	r8, [sp, #104]	; 0x68
 8024e96:	931b      	str	r3, [sp, #108]	; 0x6c
 8024e98:	e9dd 231a 	ldrd	r2, r3, [sp, #104]	; 0x68
 8024e9c:	e9cd 230c 	strd	r2, r3, [sp, #48]	; 0x30
 8024ea0:	e79b      	b.n	8024dda <_strtod_l+0x9b2>
 8024ea2:	f1ba 0f01 	cmp.w	sl, #1
 8024ea6:	d102      	bne.n	8024eae <_strtod_l+0xa86>
 8024ea8:	2f00      	cmp	r7, #0
 8024eaa:	f43f ad7e 	beq.w	80249aa <_strtod_l+0x582>
 8024eae:	4b61      	ldr	r3, [pc, #388]	; (8025034 <_strtod_l+0xc0c>)
 8024eb0:	2200      	movs	r2, #0
 8024eb2:	e78c      	b.n	8024dce <_strtod_l+0x9a6>
 8024eb4:	f8df 9178 	ldr.w	r9, [pc, #376]	; 8025030 <_strtod_l+0xc08>
 8024eb8:	f04f 0800 	mov.w	r8, #0
 8024ebc:	e7e7      	b.n	8024e8e <_strtod_l+0xa66>
 8024ebe:	4b5c      	ldr	r3, [pc, #368]	; (8025030 <_strtod_l+0xc08>)
 8024ec0:	4640      	mov	r0, r8
 8024ec2:	4649      	mov	r1, r9
 8024ec4:	2200      	movs	r2, #0
 8024ec6:	f7db fbb7 	bl	8000638 <__aeabi_dmul>
 8024eca:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8024ecc:	4680      	mov	r8, r0
 8024ece:	4689      	mov	r9, r1
 8024ed0:	b933      	cbnz	r3, 8024ee0 <_strtod_l+0xab8>
 8024ed2:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8024ed6:	9012      	str	r0, [sp, #72]	; 0x48
 8024ed8:	9313      	str	r3, [sp, #76]	; 0x4c
 8024eda:	e9dd 2312 	ldrd	r2, r3, [sp, #72]	; 0x48
 8024ede:	e7dd      	b.n	8024e9c <_strtod_l+0xa74>
 8024ee0:	e9cd 8912 	strd	r8, r9, [sp, #72]	; 0x48
 8024ee4:	e7f9      	b.n	8024eda <_strtod_l+0xab2>
 8024ee6:	f103 7b54 	add.w	fp, r3, #55574528	; 0x3500000
 8024eea:	9b04      	ldr	r3, [sp, #16]
 8024eec:	2b00      	cmp	r3, #0
 8024eee:	d1a8      	bne.n	8024e42 <_strtod_l+0xa1a>
 8024ef0:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 8024ef4:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8024ef6:	0d1b      	lsrs	r3, r3, #20
 8024ef8:	051b      	lsls	r3, r3, #20
 8024efa:	429a      	cmp	r2, r3
 8024efc:	d1a1      	bne.n	8024e42 <_strtod_l+0xa1a>
 8024efe:	4640      	mov	r0, r8
 8024f00:	4649      	mov	r1, r9
 8024f02:	f7db fef9 	bl	8000cf8 <__aeabi_d2lz>
 8024f06:	f7db fb69 	bl	80005dc <__aeabi_l2d>
 8024f0a:	4602      	mov	r2, r0
 8024f0c:	460b      	mov	r3, r1
 8024f0e:	4640      	mov	r0, r8
 8024f10:	4649      	mov	r1, r9
 8024f12:	f7db f9d9 	bl	80002c8 <__aeabi_dsub>
 8024f16:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8024f18:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8024f1c:	ea43 030a 	orr.w	r3, r3, sl
 8024f20:	4313      	orrs	r3, r2
 8024f22:	4680      	mov	r8, r0
 8024f24:	4689      	mov	r9, r1
 8024f26:	d053      	beq.n	8024fd0 <_strtod_l+0xba8>
 8024f28:	a335      	add	r3, pc, #212	; (adr r3, 8025000 <_strtod_l+0xbd8>)
 8024f2a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024f2e:	f7db fdf5 	bl	8000b1c <__aeabi_dcmplt>
 8024f32:	2800      	cmp	r0, #0
 8024f34:	f47f acce 	bne.w	80248d4 <_strtod_l+0x4ac>
 8024f38:	a333      	add	r3, pc, #204	; (adr r3, 8025008 <_strtod_l+0xbe0>)
 8024f3a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024f3e:	4640      	mov	r0, r8
 8024f40:	4649      	mov	r1, r9
 8024f42:	f7db fe09 	bl	8000b58 <__aeabi_dcmpgt>
 8024f46:	2800      	cmp	r0, #0
 8024f48:	f43f af7b 	beq.w	8024e42 <_strtod_l+0xa1a>
 8024f4c:	e4c2      	b.n	80248d4 <_strtod_l+0x4ac>
 8024f4e:	9b04      	ldr	r3, [sp, #16]
 8024f50:	b333      	cbz	r3, 8024fa0 <_strtod_l+0xb78>
 8024f52:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8024f54:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 8024f58:	d822      	bhi.n	8024fa0 <_strtod_l+0xb78>
 8024f5a:	a32d      	add	r3, pc, #180	; (adr r3, 8025010 <_strtod_l+0xbe8>)
 8024f5c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024f60:	4640      	mov	r0, r8
 8024f62:	4649      	mov	r1, r9
 8024f64:	f7db fde4 	bl	8000b30 <__aeabi_dcmple>
 8024f68:	b1a0      	cbz	r0, 8024f94 <_strtod_l+0xb6c>
 8024f6a:	4649      	mov	r1, r9
 8024f6c:	4640      	mov	r0, r8
 8024f6e:	f7db fe3b 	bl	8000be8 <__aeabi_d2uiz>
 8024f72:	2801      	cmp	r0, #1
 8024f74:	bf38      	it	cc
 8024f76:	2001      	movcc	r0, #1
 8024f78:	f7db fae4 	bl	8000544 <__aeabi_ui2d>
 8024f7c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8024f7e:	4680      	mov	r8, r0
 8024f80:	4689      	mov	r9, r1
 8024f82:	bb13      	cbnz	r3, 8024fca <_strtod_l+0xba2>
 8024f84:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8024f88:	9014      	str	r0, [sp, #80]	; 0x50
 8024f8a:	9315      	str	r3, [sp, #84]	; 0x54
 8024f8c:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	; 0x50
 8024f90:	e9cd 230c 	strd	r2, r3, [sp, #48]	; 0x30
 8024f94:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8024f96:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8024f98:	f103 63d6 	add.w	r3, r3, #112197632	; 0x6b00000
 8024f9c:	1a9b      	subs	r3, r3, r2
 8024f9e:	930d      	str	r3, [sp, #52]	; 0x34
 8024fa0:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8024fa4:	ed9d 0b0a 	vldr	d0, [sp, #40]	; 0x28
 8024fa8:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
 8024fac:	f001 f90a 	bl	80261c4 <__ulp>
 8024fb0:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8024fb4:	ec53 2b10 	vmov	r2, r3, d0
 8024fb8:	f7db fb3e 	bl	8000638 <__aeabi_dmul>
 8024fbc:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8024fc0:	f7db f984 	bl	80002cc <__adddf3>
 8024fc4:	4682      	mov	sl, r0
 8024fc6:	468b      	mov	fp, r1
 8024fc8:	e78f      	b.n	8024eea <_strtod_l+0xac2>
 8024fca:	e9cd 8914 	strd	r8, r9, [sp, #80]	; 0x50
 8024fce:	e7dd      	b.n	8024f8c <_strtod_l+0xb64>
 8024fd0:	a311      	add	r3, pc, #68	; (adr r3, 8025018 <_strtod_l+0xbf0>)
 8024fd2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024fd6:	f7db fda1 	bl	8000b1c <__aeabi_dcmplt>
 8024fda:	e7b4      	b.n	8024f46 <_strtod_l+0xb1e>
 8024fdc:	2300      	movs	r3, #0
 8024fde:	930e      	str	r3, [sp, #56]	; 0x38
 8024fe0:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8024fe2:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8024fe4:	6013      	str	r3, [r2, #0]
 8024fe6:	f7ff ba65 	b.w	80244b4 <_strtod_l+0x8c>
 8024fea:	2b65      	cmp	r3, #101	; 0x65
 8024fec:	f43f ab5d 	beq.w	80246aa <_strtod_l+0x282>
 8024ff0:	2b45      	cmp	r3, #69	; 0x45
 8024ff2:	f43f ab5a 	beq.w	80246aa <_strtod_l+0x282>
 8024ff6:	2201      	movs	r2, #1
 8024ff8:	f7ff bb92 	b.w	8024720 <_strtod_l+0x2f8>
 8024ffc:	f3af 8000 	nop.w
 8025000:	94a03595 	.word	0x94a03595
 8025004:	3fdfffff 	.word	0x3fdfffff
 8025008:	35afe535 	.word	0x35afe535
 802500c:	3fe00000 	.word	0x3fe00000
 8025010:	ffc00000 	.word	0xffc00000
 8025014:	41dfffff 	.word	0x41dfffff
 8025018:	94a03595 	.word	0x94a03595
 802501c:	3fcfffff 	.word	0x3fcfffff
 8025020:	3ff00000 	.word	0x3ff00000
 8025024:	7ff00000 	.word	0x7ff00000
 8025028:	7fe00000 	.word	0x7fe00000
 802502c:	7c9fffff 	.word	0x7c9fffff
 8025030:	3fe00000 	.word	0x3fe00000
 8025034:	bff00000 	.word	0xbff00000
 8025038:	7fefffff 	.word	0x7fefffff

0802503c <strtof>:
 802503c:	e92d 4370 	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
 8025040:	4e26      	ldr	r6, [pc, #152]	; (80250dc <strtof+0xa0>)
 8025042:	4b27      	ldr	r3, [pc, #156]	; (80250e0 <strtof+0xa4>)
 8025044:	460a      	mov	r2, r1
 8025046:	ed2d 8b02 	vpush	{d8}
 802504a:	4601      	mov	r1, r0
 802504c:	6830      	ldr	r0, [r6, #0]
 802504e:	f7ff f9eb 	bl	8024428 <_strtod_l>
 8025052:	ec55 4b10 	vmov	r4, r5, d0
 8025056:	ee10 2a10 	vmov	r2, s0
 802505a:	ee10 0a10 	vmov	r0, s0
 802505e:	462b      	mov	r3, r5
 8025060:	4629      	mov	r1, r5
 8025062:	f7db fd83 	bl	8000b6c <__aeabi_dcmpun>
 8025066:	b190      	cbz	r0, 802508e <strtof+0x52>
 8025068:	2d00      	cmp	r5, #0
 802506a:	481e      	ldr	r0, [pc, #120]	; (80250e4 <strtof+0xa8>)
 802506c:	da09      	bge.n	8025082 <strtof+0x46>
 802506e:	f001 fcf7 	bl	8026a60 <nanf>
 8025072:	eeb1 8a40 	vneg.f32	s16, s0
 8025076:	eeb0 0a48 	vmov.f32	s0, s16
 802507a:	ecbd 8b02 	vpop	{d8}
 802507e:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
 8025082:	ecbd 8b02 	vpop	{d8}
 8025086:	e8bd 4370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, lr}
 802508a:	f001 bce9 	b.w	8026a60 <nanf>
 802508e:	4620      	mov	r0, r4
 8025090:	4629      	mov	r1, r5
 8025092:	f7db fdc9 	bl	8000c28 <__aeabi_d2f>
 8025096:	ee08 0a10 	vmov	s16, r0
 802509a:	eddf 7a13 	vldr	s15, [pc, #76]	; 80250e8 <strtof+0xac>
 802509e:	eeb0 7ac8 	vabs.f32	s14, s16
 80250a2:	eeb4 7a67 	vcmp.f32	s14, s15
 80250a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80250aa:	dde4      	ble.n	8025076 <strtof+0x3a>
 80250ac:	f025 4900 	bic.w	r9, r5, #2147483648	; 0x80000000
 80250b0:	4b0e      	ldr	r3, [pc, #56]	; (80250ec <strtof+0xb0>)
 80250b2:	f04f 32ff 	mov.w	r2, #4294967295
 80250b6:	4620      	mov	r0, r4
 80250b8:	4649      	mov	r1, r9
 80250ba:	f7db fd57 	bl	8000b6c <__aeabi_dcmpun>
 80250be:	b940      	cbnz	r0, 80250d2 <strtof+0x96>
 80250c0:	4b0a      	ldr	r3, [pc, #40]	; (80250ec <strtof+0xb0>)
 80250c2:	f04f 32ff 	mov.w	r2, #4294967295
 80250c6:	4620      	mov	r0, r4
 80250c8:	4649      	mov	r1, r9
 80250ca:	f7db fd31 	bl	8000b30 <__aeabi_dcmple>
 80250ce:	2800      	cmp	r0, #0
 80250d0:	d0d1      	beq.n	8025076 <strtof+0x3a>
 80250d2:	6833      	ldr	r3, [r6, #0]
 80250d4:	2222      	movs	r2, #34	; 0x22
 80250d6:	601a      	str	r2, [r3, #0]
 80250d8:	e7cd      	b.n	8025076 <strtof+0x3a>
 80250da:	bf00      	nop
 80250dc:	20000010 	.word	0x20000010
 80250e0:	2000007c 	.word	0x2000007c
 80250e4:	080287da 	.word	0x080287da
 80250e8:	7f7fffff 	.word	0x7f7fffff
 80250ec:	7fefffff 	.word	0x7fefffff

080250f0 <_strtol_l.isra.0>:
 80250f0:	2b01      	cmp	r3, #1
 80250f2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80250f6:	d001      	beq.n	80250fc <_strtol_l.isra.0+0xc>
 80250f8:	2b24      	cmp	r3, #36	; 0x24
 80250fa:	d906      	bls.n	802510a <_strtol_l.isra.0+0x1a>
 80250fc:	f7fe ffd0 	bl	80240a0 <__errno>
 8025100:	2316      	movs	r3, #22
 8025102:	6003      	str	r3, [r0, #0]
 8025104:	2000      	movs	r0, #0
 8025106:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802510a:	4f3a      	ldr	r7, [pc, #232]	; (80251f4 <_strtol_l.isra.0+0x104>)
 802510c:	468e      	mov	lr, r1
 802510e:	4676      	mov	r6, lr
 8025110:	f81e 4b01 	ldrb.w	r4, [lr], #1
 8025114:	5de5      	ldrb	r5, [r4, r7]
 8025116:	f015 0508 	ands.w	r5, r5, #8
 802511a:	d1f8      	bne.n	802510e <_strtol_l.isra.0+0x1e>
 802511c:	2c2d      	cmp	r4, #45	; 0x2d
 802511e:	d134      	bne.n	802518a <_strtol_l.isra.0+0x9a>
 8025120:	f89e 4000 	ldrb.w	r4, [lr]
 8025124:	f04f 0801 	mov.w	r8, #1
 8025128:	f106 0e02 	add.w	lr, r6, #2
 802512c:	2b00      	cmp	r3, #0
 802512e:	d05c      	beq.n	80251ea <_strtol_l.isra.0+0xfa>
 8025130:	2b10      	cmp	r3, #16
 8025132:	d10c      	bne.n	802514e <_strtol_l.isra.0+0x5e>
 8025134:	2c30      	cmp	r4, #48	; 0x30
 8025136:	d10a      	bne.n	802514e <_strtol_l.isra.0+0x5e>
 8025138:	f89e 4000 	ldrb.w	r4, [lr]
 802513c:	f004 04df 	and.w	r4, r4, #223	; 0xdf
 8025140:	2c58      	cmp	r4, #88	; 0x58
 8025142:	d14d      	bne.n	80251e0 <_strtol_l.isra.0+0xf0>
 8025144:	f89e 4001 	ldrb.w	r4, [lr, #1]
 8025148:	2310      	movs	r3, #16
 802514a:	f10e 0e02 	add.w	lr, lr, #2
 802514e:	f108 4c00 	add.w	ip, r8, #2147483648	; 0x80000000
 8025152:	f10c 3cff 	add.w	ip, ip, #4294967295
 8025156:	2600      	movs	r6, #0
 8025158:	fbbc f9f3 	udiv	r9, ip, r3
 802515c:	4635      	mov	r5, r6
 802515e:	fb03 ca19 	mls	sl, r3, r9, ip
 8025162:	f1a4 0730 	sub.w	r7, r4, #48	; 0x30
 8025166:	2f09      	cmp	r7, #9
 8025168:	d818      	bhi.n	802519c <_strtol_l.isra.0+0xac>
 802516a:	463c      	mov	r4, r7
 802516c:	42a3      	cmp	r3, r4
 802516e:	dd24      	ble.n	80251ba <_strtol_l.isra.0+0xca>
 8025170:	2e00      	cmp	r6, #0
 8025172:	db1f      	blt.n	80251b4 <_strtol_l.isra.0+0xc4>
 8025174:	45a9      	cmp	r9, r5
 8025176:	d31d      	bcc.n	80251b4 <_strtol_l.isra.0+0xc4>
 8025178:	d101      	bne.n	802517e <_strtol_l.isra.0+0x8e>
 802517a:	45a2      	cmp	sl, r4
 802517c:	db1a      	blt.n	80251b4 <_strtol_l.isra.0+0xc4>
 802517e:	fb05 4503 	mla	r5, r5, r3, r4
 8025182:	2601      	movs	r6, #1
 8025184:	f81e 4b01 	ldrb.w	r4, [lr], #1
 8025188:	e7eb      	b.n	8025162 <_strtol_l.isra.0+0x72>
 802518a:	2c2b      	cmp	r4, #43	; 0x2b
 802518c:	bf08      	it	eq
 802518e:	f89e 4000 	ldrbeq.w	r4, [lr]
 8025192:	46a8      	mov	r8, r5
 8025194:	bf08      	it	eq
 8025196:	f106 0e02 	addeq.w	lr, r6, #2
 802519a:	e7c7      	b.n	802512c <_strtol_l.isra.0+0x3c>
 802519c:	f1a4 0741 	sub.w	r7, r4, #65	; 0x41
 80251a0:	2f19      	cmp	r7, #25
 80251a2:	d801      	bhi.n	80251a8 <_strtol_l.isra.0+0xb8>
 80251a4:	3c37      	subs	r4, #55	; 0x37
 80251a6:	e7e1      	b.n	802516c <_strtol_l.isra.0+0x7c>
 80251a8:	f1a4 0761 	sub.w	r7, r4, #97	; 0x61
 80251ac:	2f19      	cmp	r7, #25
 80251ae:	d804      	bhi.n	80251ba <_strtol_l.isra.0+0xca>
 80251b0:	3c57      	subs	r4, #87	; 0x57
 80251b2:	e7db      	b.n	802516c <_strtol_l.isra.0+0x7c>
 80251b4:	f04f 36ff 	mov.w	r6, #4294967295
 80251b8:	e7e4      	b.n	8025184 <_strtol_l.isra.0+0x94>
 80251ba:	2e00      	cmp	r6, #0
 80251bc:	da05      	bge.n	80251ca <_strtol_l.isra.0+0xda>
 80251be:	2322      	movs	r3, #34	; 0x22
 80251c0:	6003      	str	r3, [r0, #0]
 80251c2:	4665      	mov	r5, ip
 80251c4:	b942      	cbnz	r2, 80251d8 <_strtol_l.isra.0+0xe8>
 80251c6:	4628      	mov	r0, r5
 80251c8:	e79d      	b.n	8025106 <_strtol_l.isra.0+0x16>
 80251ca:	f1b8 0f00 	cmp.w	r8, #0
 80251ce:	d000      	beq.n	80251d2 <_strtol_l.isra.0+0xe2>
 80251d0:	426d      	negs	r5, r5
 80251d2:	2a00      	cmp	r2, #0
 80251d4:	d0f7      	beq.n	80251c6 <_strtol_l.isra.0+0xd6>
 80251d6:	b10e      	cbz	r6, 80251dc <_strtol_l.isra.0+0xec>
 80251d8:	f10e 31ff 	add.w	r1, lr, #4294967295
 80251dc:	6011      	str	r1, [r2, #0]
 80251de:	e7f2      	b.n	80251c6 <_strtol_l.isra.0+0xd6>
 80251e0:	2430      	movs	r4, #48	; 0x30
 80251e2:	2b00      	cmp	r3, #0
 80251e4:	d1b3      	bne.n	802514e <_strtol_l.isra.0+0x5e>
 80251e6:	2308      	movs	r3, #8
 80251e8:	e7b1      	b.n	802514e <_strtol_l.isra.0+0x5e>
 80251ea:	2c30      	cmp	r4, #48	; 0x30
 80251ec:	d0a4      	beq.n	8025138 <_strtol_l.isra.0+0x48>
 80251ee:	230a      	movs	r3, #10
 80251f0:	e7ad      	b.n	802514e <_strtol_l.isra.0+0x5e>
 80251f2:	bf00      	nop
 80251f4:	08028466 	.word	0x08028466

080251f8 <strtol>:
 80251f8:	4613      	mov	r3, r2
 80251fa:	460a      	mov	r2, r1
 80251fc:	4601      	mov	r1, r0
 80251fe:	4802      	ldr	r0, [pc, #8]	; (8025208 <strtol+0x10>)
 8025200:	6800      	ldr	r0, [r0, #0]
 8025202:	f7ff bf75 	b.w	80250f0 <_strtol_l.isra.0>
 8025206:	bf00      	nop
 8025208:	20000010 	.word	0x20000010

0802520c <__utoa>:
 802520c:	b5f0      	push	{r4, r5, r6, r7, lr}
 802520e:	4c1f      	ldr	r4, [pc, #124]	; (802528c <__utoa+0x80>)
 8025210:	b08b      	sub	sp, #44	; 0x2c
 8025212:	4605      	mov	r5, r0
 8025214:	460b      	mov	r3, r1
 8025216:	466e      	mov	r6, sp
 8025218:	f104 0c20 	add.w	ip, r4, #32
 802521c:	6820      	ldr	r0, [r4, #0]
 802521e:	6861      	ldr	r1, [r4, #4]
 8025220:	4637      	mov	r7, r6
 8025222:	c703      	stmia	r7!, {r0, r1}
 8025224:	3408      	adds	r4, #8
 8025226:	4564      	cmp	r4, ip
 8025228:	463e      	mov	r6, r7
 802522a:	d1f7      	bne.n	802521c <__utoa+0x10>
 802522c:	7921      	ldrb	r1, [r4, #4]
 802522e:	7139      	strb	r1, [r7, #4]
 8025230:	1e91      	subs	r1, r2, #2
 8025232:	6820      	ldr	r0, [r4, #0]
 8025234:	6038      	str	r0, [r7, #0]
 8025236:	2922      	cmp	r1, #34	; 0x22
 8025238:	f04f 0100 	mov.w	r1, #0
 802523c:	d904      	bls.n	8025248 <__utoa+0x3c>
 802523e:	7019      	strb	r1, [r3, #0]
 8025240:	460b      	mov	r3, r1
 8025242:	4618      	mov	r0, r3
 8025244:	b00b      	add	sp, #44	; 0x2c
 8025246:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8025248:	1e58      	subs	r0, r3, #1
 802524a:	4684      	mov	ip, r0
 802524c:	fbb5 f7f2 	udiv	r7, r5, r2
 8025250:	f10d 0e28 	add.w	lr, sp, #40	; 0x28
 8025254:	fb02 5617 	mls	r6, r2, r7, r5
 8025258:	4476      	add	r6, lr
 802525a:	460c      	mov	r4, r1
 802525c:	f816 6c28 	ldrb.w	r6, [r6, #-40]
 8025260:	f80c 6f01 	strb.w	r6, [ip, #1]!
 8025264:	462e      	mov	r6, r5
 8025266:	42b2      	cmp	r2, r6
 8025268:	f101 0101 	add.w	r1, r1, #1
 802526c:	463d      	mov	r5, r7
 802526e:	d9ed      	bls.n	802524c <__utoa+0x40>
 8025270:	2200      	movs	r2, #0
 8025272:	545a      	strb	r2, [r3, r1]
 8025274:	1919      	adds	r1, r3, r4
 8025276:	1aa5      	subs	r5, r4, r2
 8025278:	42aa      	cmp	r2, r5
 802527a:	dae2      	bge.n	8025242 <__utoa+0x36>
 802527c:	f810 5f01 	ldrb.w	r5, [r0, #1]!
 8025280:	780e      	ldrb	r6, [r1, #0]
 8025282:	7006      	strb	r6, [r0, #0]
 8025284:	3201      	adds	r2, #1
 8025286:	f801 5901 	strb.w	r5, [r1], #-1
 802528a:	e7f4      	b.n	8025276 <__utoa+0x6a>
 802528c:	08028440 	.word	0x08028440

08025290 <_vsniprintf_r>:
 8025290:	b530      	push	{r4, r5, lr}
 8025292:	1e14      	subs	r4, r2, #0
 8025294:	4605      	mov	r5, r0
 8025296:	b09b      	sub	sp, #108	; 0x6c
 8025298:	4618      	mov	r0, r3
 802529a:	da05      	bge.n	80252a8 <_vsniprintf_r+0x18>
 802529c:	238b      	movs	r3, #139	; 0x8b
 802529e:	602b      	str	r3, [r5, #0]
 80252a0:	f04f 30ff 	mov.w	r0, #4294967295
 80252a4:	b01b      	add	sp, #108	; 0x6c
 80252a6:	bd30      	pop	{r4, r5, pc}
 80252a8:	f44f 7302 	mov.w	r3, #520	; 0x208
 80252ac:	f8ad 300c 	strh.w	r3, [sp, #12]
 80252b0:	bf14      	ite	ne
 80252b2:	f104 33ff 	addne.w	r3, r4, #4294967295
 80252b6:	4623      	moveq	r3, r4
 80252b8:	9302      	str	r3, [sp, #8]
 80252ba:	9305      	str	r3, [sp, #20]
 80252bc:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80252c0:	9100      	str	r1, [sp, #0]
 80252c2:	9104      	str	r1, [sp, #16]
 80252c4:	f8ad 300e 	strh.w	r3, [sp, #14]
 80252c8:	4602      	mov	r2, r0
 80252ca:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80252cc:	4669      	mov	r1, sp
 80252ce:	4628      	mov	r0, r5
 80252d0:	f001 f932 	bl	8026538 <_svfiprintf_r>
 80252d4:	1c43      	adds	r3, r0, #1
 80252d6:	bfbc      	itt	lt
 80252d8:	238b      	movlt	r3, #139	; 0x8b
 80252da:	602b      	strlt	r3, [r5, #0]
 80252dc:	2c00      	cmp	r4, #0
 80252de:	d0e1      	beq.n	80252a4 <_vsniprintf_r+0x14>
 80252e0:	9b00      	ldr	r3, [sp, #0]
 80252e2:	2200      	movs	r2, #0
 80252e4:	701a      	strb	r2, [r3, #0]
 80252e6:	e7dd      	b.n	80252a4 <_vsniprintf_r+0x14>

080252e8 <vsniprintf>:
 80252e8:	b507      	push	{r0, r1, r2, lr}
 80252ea:	9300      	str	r3, [sp, #0]
 80252ec:	4613      	mov	r3, r2
 80252ee:	460a      	mov	r2, r1
 80252f0:	4601      	mov	r1, r0
 80252f2:	4803      	ldr	r0, [pc, #12]	; (8025300 <vsniprintf+0x18>)
 80252f4:	6800      	ldr	r0, [r0, #0]
 80252f6:	f7ff ffcb 	bl	8025290 <_vsniprintf_r>
 80252fa:	b003      	add	sp, #12
 80252fc:	f85d fb04 	ldr.w	pc, [sp], #4
 8025300:	20000010 	.word	0x20000010

08025304 <__register_exitproc>:
 8025304:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8025308:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 80253c4 <__register_exitproc+0xc0>
 802530c:	4606      	mov	r6, r0
 802530e:	f8d8 0000 	ldr.w	r0, [r8]
 8025312:	461f      	mov	r7, r3
 8025314:	460d      	mov	r5, r1
 8025316:	4691      	mov	r9, r2
 8025318:	f000 fbc7 	bl	8025aaa <__retarget_lock_acquire_recursive>
 802531c:	4b25      	ldr	r3, [pc, #148]	; (80253b4 <__register_exitproc+0xb0>)
 802531e:	681c      	ldr	r4, [r3, #0]
 8025320:	b934      	cbnz	r4, 8025330 <__register_exitproc+0x2c>
 8025322:	4c25      	ldr	r4, [pc, #148]	; (80253b8 <__register_exitproc+0xb4>)
 8025324:	601c      	str	r4, [r3, #0]
 8025326:	4b25      	ldr	r3, [pc, #148]	; (80253bc <__register_exitproc+0xb8>)
 8025328:	b113      	cbz	r3, 8025330 <__register_exitproc+0x2c>
 802532a:	681b      	ldr	r3, [r3, #0]
 802532c:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 8025330:	6863      	ldr	r3, [r4, #4]
 8025332:	2b1f      	cmp	r3, #31
 8025334:	dd07      	ble.n	8025346 <__register_exitproc+0x42>
 8025336:	f8d8 0000 	ldr.w	r0, [r8]
 802533a:	f000 fbb8 	bl	8025aae <__retarget_lock_release_recursive>
 802533e:	f04f 30ff 	mov.w	r0, #4294967295
 8025342:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8025346:	b34e      	cbz	r6, 802539c <__register_exitproc+0x98>
 8025348:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 802534c:	b988      	cbnz	r0, 8025372 <__register_exitproc+0x6e>
 802534e:	4b1c      	ldr	r3, [pc, #112]	; (80253c0 <__register_exitproc+0xbc>)
 8025350:	b923      	cbnz	r3, 802535c <__register_exitproc+0x58>
 8025352:	f8d8 0000 	ldr.w	r0, [r8]
 8025356:	f000 fba9 	bl	8025aac <__retarget_lock_release>
 802535a:	e7f0      	b.n	802533e <__register_exitproc+0x3a>
 802535c:	f44f 7084 	mov.w	r0, #264	; 0x108
 8025360:	f7fe fefa 	bl	8024158 <malloc>
 8025364:	2800      	cmp	r0, #0
 8025366:	d0f4      	beq.n	8025352 <__register_exitproc+0x4e>
 8025368:	2300      	movs	r3, #0
 802536a:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 802536e:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 8025372:	6863      	ldr	r3, [r4, #4]
 8025374:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 8025378:	2201      	movs	r2, #1
 802537a:	409a      	lsls	r2, r3
 802537c:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 8025380:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 8025384:	4313      	orrs	r3, r2
 8025386:	2e02      	cmp	r6, #2
 8025388:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 802538c:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 8025390:	bf02      	ittt	eq
 8025392:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 8025396:	431a      	orreq	r2, r3
 8025398:	f8c0 2104 	streq.w	r2, [r0, #260]	; 0x104
 802539c:	6863      	ldr	r3, [r4, #4]
 802539e:	f8d8 0000 	ldr.w	r0, [r8]
 80253a2:	1c5a      	adds	r2, r3, #1
 80253a4:	3302      	adds	r3, #2
 80253a6:	6062      	str	r2, [r4, #4]
 80253a8:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 80253ac:	f000 fb7f 	bl	8025aae <__retarget_lock_release_recursive>
 80253b0:	2000      	movs	r0, #0
 80253b2:	e7c6      	b.n	8025342 <__register_exitproc+0x3e>
 80253b4:	200008b8 	.word	0x200008b8
 80253b8:	2000082c 	.word	0x2000082c
 80253bc:	00000000 	.word	0x00000000
 80253c0:	08024159 	.word	0x08024159
 80253c4:	20000074 	.word	0x20000074

080253c8 <rshift>:
 80253c8:	6903      	ldr	r3, [r0, #16]
 80253ca:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 80253ce:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80253d2:	ea4f 1261 	mov.w	r2, r1, asr #5
 80253d6:	f100 0414 	add.w	r4, r0, #20
 80253da:	dd45      	ble.n	8025468 <rshift+0xa0>
 80253dc:	f011 011f 	ands.w	r1, r1, #31
 80253e0:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 80253e4:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 80253e8:	d10c      	bne.n	8025404 <rshift+0x3c>
 80253ea:	f100 0710 	add.w	r7, r0, #16
 80253ee:	4629      	mov	r1, r5
 80253f0:	42b1      	cmp	r1, r6
 80253f2:	d334      	bcc.n	802545e <rshift+0x96>
 80253f4:	1a9b      	subs	r3, r3, r2
 80253f6:	009b      	lsls	r3, r3, #2
 80253f8:	1eea      	subs	r2, r5, #3
 80253fa:	4296      	cmp	r6, r2
 80253fc:	bf38      	it	cc
 80253fe:	2300      	movcc	r3, #0
 8025400:	4423      	add	r3, r4
 8025402:	e015      	b.n	8025430 <rshift+0x68>
 8025404:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 8025408:	f1c1 0820 	rsb	r8, r1, #32
 802540c:	40cf      	lsrs	r7, r1
 802540e:	f105 0e04 	add.w	lr, r5, #4
 8025412:	46a1      	mov	r9, r4
 8025414:	4576      	cmp	r6, lr
 8025416:	46f4      	mov	ip, lr
 8025418:	d815      	bhi.n	8025446 <rshift+0x7e>
 802541a:	1a9b      	subs	r3, r3, r2
 802541c:	009a      	lsls	r2, r3, #2
 802541e:	3a04      	subs	r2, #4
 8025420:	3501      	adds	r5, #1
 8025422:	42ae      	cmp	r6, r5
 8025424:	bf38      	it	cc
 8025426:	2200      	movcc	r2, #0
 8025428:	18a3      	adds	r3, r4, r2
 802542a:	50a7      	str	r7, [r4, r2]
 802542c:	b107      	cbz	r7, 8025430 <rshift+0x68>
 802542e:	3304      	adds	r3, #4
 8025430:	1b1a      	subs	r2, r3, r4
 8025432:	42a3      	cmp	r3, r4
 8025434:	ea4f 02a2 	mov.w	r2, r2, asr #2
 8025438:	bf08      	it	eq
 802543a:	2300      	moveq	r3, #0
 802543c:	6102      	str	r2, [r0, #16]
 802543e:	bf08      	it	eq
 8025440:	6143      	streq	r3, [r0, #20]
 8025442:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8025446:	f8dc c000 	ldr.w	ip, [ip]
 802544a:	fa0c fc08 	lsl.w	ip, ip, r8
 802544e:	ea4c 0707 	orr.w	r7, ip, r7
 8025452:	f849 7b04 	str.w	r7, [r9], #4
 8025456:	f85e 7b04 	ldr.w	r7, [lr], #4
 802545a:	40cf      	lsrs	r7, r1
 802545c:	e7da      	b.n	8025414 <rshift+0x4c>
 802545e:	f851 cb04 	ldr.w	ip, [r1], #4
 8025462:	f847 cf04 	str.w	ip, [r7, #4]!
 8025466:	e7c3      	b.n	80253f0 <rshift+0x28>
 8025468:	4623      	mov	r3, r4
 802546a:	e7e1      	b.n	8025430 <rshift+0x68>

0802546c <__hexdig_fun>:
 802546c:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
 8025470:	2b09      	cmp	r3, #9
 8025472:	d802      	bhi.n	802547a <__hexdig_fun+0xe>
 8025474:	3820      	subs	r0, #32
 8025476:	b2c0      	uxtb	r0, r0
 8025478:	4770      	bx	lr
 802547a:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
 802547e:	2b05      	cmp	r3, #5
 8025480:	d801      	bhi.n	8025486 <__hexdig_fun+0x1a>
 8025482:	3847      	subs	r0, #71	; 0x47
 8025484:	e7f7      	b.n	8025476 <__hexdig_fun+0xa>
 8025486:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 802548a:	2b05      	cmp	r3, #5
 802548c:	d801      	bhi.n	8025492 <__hexdig_fun+0x26>
 802548e:	3827      	subs	r0, #39	; 0x27
 8025490:	e7f1      	b.n	8025476 <__hexdig_fun+0xa>
 8025492:	2000      	movs	r0, #0
 8025494:	4770      	bx	lr
	...

08025498 <__gethex>:
 8025498:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802549c:	ed2d 8b02 	vpush	{d8}
 80254a0:	b089      	sub	sp, #36	; 0x24
 80254a2:	ee08 0a10 	vmov	s16, r0
 80254a6:	9304      	str	r3, [sp, #16]
 80254a8:	4bbc      	ldr	r3, [pc, #752]	; (802579c <__gethex+0x304>)
 80254aa:	681b      	ldr	r3, [r3, #0]
 80254ac:	9301      	str	r3, [sp, #4]
 80254ae:	4618      	mov	r0, r3
 80254b0:	468b      	mov	fp, r1
 80254b2:	4690      	mov	r8, r2
 80254b4:	f7da fefc 	bl	80002b0 <strlen>
 80254b8:	9b01      	ldr	r3, [sp, #4]
 80254ba:	f8db 2000 	ldr.w	r2, [fp]
 80254be:	4403      	add	r3, r0
 80254c0:	4682      	mov	sl, r0
 80254c2:	f813 3c01 	ldrb.w	r3, [r3, #-1]
 80254c6:	9305      	str	r3, [sp, #20]
 80254c8:	1c93      	adds	r3, r2, #2
 80254ca:	f1c2 22ff 	rsb	r2, r2, #4278255360	; 0xff00ff00
 80254ce:	f502 027f 	add.w	r2, r2, #16711680	; 0xff0000
 80254d2:	32fe      	adds	r2, #254	; 0xfe
 80254d4:	18d1      	adds	r1, r2, r3
 80254d6:	461f      	mov	r7, r3
 80254d8:	f813 0b01 	ldrb.w	r0, [r3], #1
 80254dc:	9100      	str	r1, [sp, #0]
 80254de:	2830      	cmp	r0, #48	; 0x30
 80254e0:	d0f8      	beq.n	80254d4 <__gethex+0x3c>
 80254e2:	f7ff ffc3 	bl	802546c <__hexdig_fun>
 80254e6:	4604      	mov	r4, r0
 80254e8:	2800      	cmp	r0, #0
 80254ea:	d13a      	bne.n	8025562 <__gethex+0xca>
 80254ec:	9901      	ldr	r1, [sp, #4]
 80254ee:	4652      	mov	r2, sl
 80254f0:	4638      	mov	r0, r7
 80254f2:	f001 fabb 	bl	8026a6c <strncmp>
 80254f6:	4605      	mov	r5, r0
 80254f8:	2800      	cmp	r0, #0
 80254fa:	d168      	bne.n	80255ce <__gethex+0x136>
 80254fc:	f817 000a 	ldrb.w	r0, [r7, sl]
 8025500:	eb07 060a 	add.w	r6, r7, sl
 8025504:	f7ff ffb2 	bl	802546c <__hexdig_fun>
 8025508:	2800      	cmp	r0, #0
 802550a:	d062      	beq.n	80255d2 <__gethex+0x13a>
 802550c:	4633      	mov	r3, r6
 802550e:	7818      	ldrb	r0, [r3, #0]
 8025510:	2830      	cmp	r0, #48	; 0x30
 8025512:	461f      	mov	r7, r3
 8025514:	f103 0301 	add.w	r3, r3, #1
 8025518:	d0f9      	beq.n	802550e <__gethex+0x76>
 802551a:	f7ff ffa7 	bl	802546c <__hexdig_fun>
 802551e:	2301      	movs	r3, #1
 8025520:	fab0 f480 	clz	r4, r0
 8025524:	0964      	lsrs	r4, r4, #5
 8025526:	4635      	mov	r5, r6
 8025528:	9300      	str	r3, [sp, #0]
 802552a:	463a      	mov	r2, r7
 802552c:	4616      	mov	r6, r2
 802552e:	3201      	adds	r2, #1
 8025530:	7830      	ldrb	r0, [r6, #0]
 8025532:	f7ff ff9b 	bl	802546c <__hexdig_fun>
 8025536:	2800      	cmp	r0, #0
 8025538:	d1f8      	bne.n	802552c <__gethex+0x94>
 802553a:	9901      	ldr	r1, [sp, #4]
 802553c:	4652      	mov	r2, sl
 802553e:	4630      	mov	r0, r6
 8025540:	f001 fa94 	bl	8026a6c <strncmp>
 8025544:	b980      	cbnz	r0, 8025568 <__gethex+0xd0>
 8025546:	b94d      	cbnz	r5, 802555c <__gethex+0xc4>
 8025548:	eb06 050a 	add.w	r5, r6, sl
 802554c:	462a      	mov	r2, r5
 802554e:	4616      	mov	r6, r2
 8025550:	3201      	adds	r2, #1
 8025552:	7830      	ldrb	r0, [r6, #0]
 8025554:	f7ff ff8a 	bl	802546c <__hexdig_fun>
 8025558:	2800      	cmp	r0, #0
 802555a:	d1f8      	bne.n	802554e <__gethex+0xb6>
 802555c:	1bad      	subs	r5, r5, r6
 802555e:	00ad      	lsls	r5, r5, #2
 8025560:	e004      	b.n	802556c <__gethex+0xd4>
 8025562:	2400      	movs	r4, #0
 8025564:	4625      	mov	r5, r4
 8025566:	e7e0      	b.n	802552a <__gethex+0x92>
 8025568:	2d00      	cmp	r5, #0
 802556a:	d1f7      	bne.n	802555c <__gethex+0xc4>
 802556c:	7833      	ldrb	r3, [r6, #0]
 802556e:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 8025572:	2b50      	cmp	r3, #80	; 0x50
 8025574:	d13b      	bne.n	80255ee <__gethex+0x156>
 8025576:	7873      	ldrb	r3, [r6, #1]
 8025578:	2b2b      	cmp	r3, #43	; 0x2b
 802557a:	d02c      	beq.n	80255d6 <__gethex+0x13e>
 802557c:	2b2d      	cmp	r3, #45	; 0x2d
 802557e:	d02e      	beq.n	80255de <__gethex+0x146>
 8025580:	1c71      	adds	r1, r6, #1
 8025582:	f04f 0900 	mov.w	r9, #0
 8025586:	7808      	ldrb	r0, [r1, #0]
 8025588:	f7ff ff70 	bl	802546c <__hexdig_fun>
 802558c:	1e43      	subs	r3, r0, #1
 802558e:	b2db      	uxtb	r3, r3
 8025590:	2b18      	cmp	r3, #24
 8025592:	d82c      	bhi.n	80255ee <__gethex+0x156>
 8025594:	f1a0 0210 	sub.w	r2, r0, #16
 8025598:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 802559c:	f7ff ff66 	bl	802546c <__hexdig_fun>
 80255a0:	1e43      	subs	r3, r0, #1
 80255a2:	b2db      	uxtb	r3, r3
 80255a4:	2b18      	cmp	r3, #24
 80255a6:	d91d      	bls.n	80255e4 <__gethex+0x14c>
 80255a8:	f1b9 0f00 	cmp.w	r9, #0
 80255ac:	d000      	beq.n	80255b0 <__gethex+0x118>
 80255ae:	4252      	negs	r2, r2
 80255b0:	4415      	add	r5, r2
 80255b2:	f8cb 1000 	str.w	r1, [fp]
 80255b6:	b1e4      	cbz	r4, 80255f2 <__gethex+0x15a>
 80255b8:	9b00      	ldr	r3, [sp, #0]
 80255ba:	2b00      	cmp	r3, #0
 80255bc:	bf14      	ite	ne
 80255be:	2700      	movne	r7, #0
 80255c0:	2706      	moveq	r7, #6
 80255c2:	4638      	mov	r0, r7
 80255c4:	b009      	add	sp, #36	; 0x24
 80255c6:	ecbd 8b02 	vpop	{d8}
 80255ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80255ce:	463e      	mov	r6, r7
 80255d0:	4625      	mov	r5, r4
 80255d2:	2401      	movs	r4, #1
 80255d4:	e7ca      	b.n	802556c <__gethex+0xd4>
 80255d6:	f04f 0900 	mov.w	r9, #0
 80255da:	1cb1      	adds	r1, r6, #2
 80255dc:	e7d3      	b.n	8025586 <__gethex+0xee>
 80255de:	f04f 0901 	mov.w	r9, #1
 80255e2:	e7fa      	b.n	80255da <__gethex+0x142>
 80255e4:	230a      	movs	r3, #10
 80255e6:	fb03 0202 	mla	r2, r3, r2, r0
 80255ea:	3a10      	subs	r2, #16
 80255ec:	e7d4      	b.n	8025598 <__gethex+0x100>
 80255ee:	4631      	mov	r1, r6
 80255f0:	e7df      	b.n	80255b2 <__gethex+0x11a>
 80255f2:	1bf3      	subs	r3, r6, r7
 80255f4:	3b01      	subs	r3, #1
 80255f6:	4621      	mov	r1, r4
 80255f8:	2b07      	cmp	r3, #7
 80255fa:	dc0b      	bgt.n	8025614 <__gethex+0x17c>
 80255fc:	ee18 0a10 	vmov	r0, s16
 8025600:	f000 fa74 	bl	8025aec <_Balloc>
 8025604:	4604      	mov	r4, r0
 8025606:	b940      	cbnz	r0, 802561a <__gethex+0x182>
 8025608:	4b65      	ldr	r3, [pc, #404]	; (80257a0 <__gethex+0x308>)
 802560a:	4602      	mov	r2, r0
 802560c:	21de      	movs	r1, #222	; 0xde
 802560e:	4865      	ldr	r0, [pc, #404]	; (80257a4 <__gethex+0x30c>)
 8025610:	f001 fa4c 	bl	8026aac <__assert_func>
 8025614:	3101      	adds	r1, #1
 8025616:	105b      	asrs	r3, r3, #1
 8025618:	e7ee      	b.n	80255f8 <__gethex+0x160>
 802561a:	f100 0914 	add.w	r9, r0, #20
 802561e:	f04f 0b00 	mov.w	fp, #0
 8025622:	f1ca 0301 	rsb	r3, sl, #1
 8025626:	f8cd 9008 	str.w	r9, [sp, #8]
 802562a:	f8cd b000 	str.w	fp, [sp]
 802562e:	9306      	str	r3, [sp, #24]
 8025630:	42b7      	cmp	r7, r6
 8025632:	d340      	bcc.n	80256b6 <__gethex+0x21e>
 8025634:	9802      	ldr	r0, [sp, #8]
 8025636:	9b00      	ldr	r3, [sp, #0]
 8025638:	f840 3b04 	str.w	r3, [r0], #4
 802563c:	eba0 0009 	sub.w	r0, r0, r9
 8025640:	1080      	asrs	r0, r0, #2
 8025642:	0146      	lsls	r6, r0, #5
 8025644:	6120      	str	r0, [r4, #16]
 8025646:	4618      	mov	r0, r3
 8025648:	f000 fb46 	bl	8025cd8 <__hi0bits>
 802564c:	1a30      	subs	r0, r6, r0
 802564e:	f8d8 6000 	ldr.w	r6, [r8]
 8025652:	42b0      	cmp	r0, r6
 8025654:	dd63      	ble.n	802571e <__gethex+0x286>
 8025656:	1b87      	subs	r7, r0, r6
 8025658:	4639      	mov	r1, r7
 802565a:	4620      	mov	r0, r4
 802565c:	f000 fee0 	bl	8026420 <__any_on>
 8025660:	4682      	mov	sl, r0
 8025662:	b1a8      	cbz	r0, 8025690 <__gethex+0x1f8>
 8025664:	1e7b      	subs	r3, r7, #1
 8025666:	1159      	asrs	r1, r3, #5
 8025668:	f003 021f 	and.w	r2, r3, #31
 802566c:	f859 1021 	ldr.w	r1, [r9, r1, lsl #2]
 8025670:	f04f 0a01 	mov.w	sl, #1
 8025674:	fa0a f202 	lsl.w	r2, sl, r2
 8025678:	420a      	tst	r2, r1
 802567a:	d009      	beq.n	8025690 <__gethex+0x1f8>
 802567c:	4553      	cmp	r3, sl
 802567e:	dd05      	ble.n	802568c <__gethex+0x1f4>
 8025680:	1eb9      	subs	r1, r7, #2
 8025682:	4620      	mov	r0, r4
 8025684:	f000 fecc 	bl	8026420 <__any_on>
 8025688:	2800      	cmp	r0, #0
 802568a:	d145      	bne.n	8025718 <__gethex+0x280>
 802568c:	f04f 0a02 	mov.w	sl, #2
 8025690:	4639      	mov	r1, r7
 8025692:	4620      	mov	r0, r4
 8025694:	f7ff fe98 	bl	80253c8 <rshift>
 8025698:	443d      	add	r5, r7
 802569a:	f8d8 3008 	ldr.w	r3, [r8, #8]
 802569e:	42ab      	cmp	r3, r5
 80256a0:	da4c      	bge.n	802573c <__gethex+0x2a4>
 80256a2:	ee18 0a10 	vmov	r0, s16
 80256a6:	4621      	mov	r1, r4
 80256a8:	f000 fa60 	bl	8025b6c <_Bfree>
 80256ac:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80256ae:	2300      	movs	r3, #0
 80256b0:	6013      	str	r3, [r2, #0]
 80256b2:	27a3      	movs	r7, #163	; 0xa3
 80256b4:	e785      	b.n	80255c2 <__gethex+0x12a>
 80256b6:	1e73      	subs	r3, r6, #1
 80256b8:	9a05      	ldr	r2, [sp, #20]
 80256ba:	9303      	str	r3, [sp, #12]
 80256bc:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 80256c0:	4293      	cmp	r3, r2
 80256c2:	d019      	beq.n	80256f8 <__gethex+0x260>
 80256c4:	f1bb 0f20 	cmp.w	fp, #32
 80256c8:	d107      	bne.n	80256da <__gethex+0x242>
 80256ca:	9b02      	ldr	r3, [sp, #8]
 80256cc:	9a00      	ldr	r2, [sp, #0]
 80256ce:	f843 2b04 	str.w	r2, [r3], #4
 80256d2:	9302      	str	r3, [sp, #8]
 80256d4:	2300      	movs	r3, #0
 80256d6:	9300      	str	r3, [sp, #0]
 80256d8:	469b      	mov	fp, r3
 80256da:	f816 0c01 	ldrb.w	r0, [r6, #-1]
 80256de:	f7ff fec5 	bl	802546c <__hexdig_fun>
 80256e2:	9b00      	ldr	r3, [sp, #0]
 80256e4:	f000 000f 	and.w	r0, r0, #15
 80256e8:	fa00 f00b 	lsl.w	r0, r0, fp
 80256ec:	4303      	orrs	r3, r0
 80256ee:	9300      	str	r3, [sp, #0]
 80256f0:	f10b 0b04 	add.w	fp, fp, #4
 80256f4:	9b03      	ldr	r3, [sp, #12]
 80256f6:	e00d      	b.n	8025714 <__gethex+0x27c>
 80256f8:	9b03      	ldr	r3, [sp, #12]
 80256fa:	9a06      	ldr	r2, [sp, #24]
 80256fc:	4413      	add	r3, r2
 80256fe:	42bb      	cmp	r3, r7
 8025700:	d3e0      	bcc.n	80256c4 <__gethex+0x22c>
 8025702:	4618      	mov	r0, r3
 8025704:	9901      	ldr	r1, [sp, #4]
 8025706:	9307      	str	r3, [sp, #28]
 8025708:	4652      	mov	r2, sl
 802570a:	f001 f9af 	bl	8026a6c <strncmp>
 802570e:	9b07      	ldr	r3, [sp, #28]
 8025710:	2800      	cmp	r0, #0
 8025712:	d1d7      	bne.n	80256c4 <__gethex+0x22c>
 8025714:	461e      	mov	r6, r3
 8025716:	e78b      	b.n	8025630 <__gethex+0x198>
 8025718:	f04f 0a03 	mov.w	sl, #3
 802571c:	e7b8      	b.n	8025690 <__gethex+0x1f8>
 802571e:	da0a      	bge.n	8025736 <__gethex+0x29e>
 8025720:	1a37      	subs	r7, r6, r0
 8025722:	4621      	mov	r1, r4
 8025724:	ee18 0a10 	vmov	r0, s16
 8025728:	463a      	mov	r2, r7
 802572a:	f000 fc3b 	bl	8025fa4 <__lshift>
 802572e:	1bed      	subs	r5, r5, r7
 8025730:	4604      	mov	r4, r0
 8025732:	f100 0914 	add.w	r9, r0, #20
 8025736:	f04f 0a00 	mov.w	sl, #0
 802573a:	e7ae      	b.n	802569a <__gethex+0x202>
 802573c:	f8d8 0004 	ldr.w	r0, [r8, #4]
 8025740:	42a8      	cmp	r0, r5
 8025742:	dd72      	ble.n	802582a <__gethex+0x392>
 8025744:	1b45      	subs	r5, r0, r5
 8025746:	42ae      	cmp	r6, r5
 8025748:	dc36      	bgt.n	80257b8 <__gethex+0x320>
 802574a:	f8d8 300c 	ldr.w	r3, [r8, #12]
 802574e:	2b02      	cmp	r3, #2
 8025750:	d02a      	beq.n	80257a8 <__gethex+0x310>
 8025752:	2b03      	cmp	r3, #3
 8025754:	d02c      	beq.n	80257b0 <__gethex+0x318>
 8025756:	2b01      	cmp	r3, #1
 8025758:	d115      	bne.n	8025786 <__gethex+0x2ee>
 802575a:	42ae      	cmp	r6, r5
 802575c:	d113      	bne.n	8025786 <__gethex+0x2ee>
 802575e:	2e01      	cmp	r6, #1
 8025760:	d10b      	bne.n	802577a <__gethex+0x2e2>
 8025762:	9a04      	ldr	r2, [sp, #16]
 8025764:	f8d8 3004 	ldr.w	r3, [r8, #4]
 8025768:	6013      	str	r3, [r2, #0]
 802576a:	2301      	movs	r3, #1
 802576c:	6123      	str	r3, [r4, #16]
 802576e:	f8c9 3000 	str.w	r3, [r9]
 8025772:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8025774:	2762      	movs	r7, #98	; 0x62
 8025776:	601c      	str	r4, [r3, #0]
 8025778:	e723      	b.n	80255c2 <__gethex+0x12a>
 802577a:	1e71      	subs	r1, r6, #1
 802577c:	4620      	mov	r0, r4
 802577e:	f000 fe4f 	bl	8026420 <__any_on>
 8025782:	2800      	cmp	r0, #0
 8025784:	d1ed      	bne.n	8025762 <__gethex+0x2ca>
 8025786:	ee18 0a10 	vmov	r0, s16
 802578a:	4621      	mov	r1, r4
 802578c:	f000 f9ee 	bl	8025b6c <_Bfree>
 8025790:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8025792:	2300      	movs	r3, #0
 8025794:	6013      	str	r3, [r2, #0]
 8025796:	2750      	movs	r7, #80	; 0x50
 8025798:	e713      	b.n	80255c2 <__gethex+0x12a>
 802579a:	bf00      	nop
 802579c:	080285e0 	.word	0x080285e0
 80257a0:	08028566 	.word	0x08028566
 80257a4:	08028577 	.word	0x08028577
 80257a8:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80257aa:	2b00      	cmp	r3, #0
 80257ac:	d1eb      	bne.n	8025786 <__gethex+0x2ee>
 80257ae:	e7d8      	b.n	8025762 <__gethex+0x2ca>
 80257b0:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80257b2:	2b00      	cmp	r3, #0
 80257b4:	d1d5      	bne.n	8025762 <__gethex+0x2ca>
 80257b6:	e7e6      	b.n	8025786 <__gethex+0x2ee>
 80257b8:	1e6f      	subs	r7, r5, #1
 80257ba:	f1ba 0f00 	cmp.w	sl, #0
 80257be:	d131      	bne.n	8025824 <__gethex+0x38c>
 80257c0:	b127      	cbz	r7, 80257cc <__gethex+0x334>
 80257c2:	4639      	mov	r1, r7
 80257c4:	4620      	mov	r0, r4
 80257c6:	f000 fe2b 	bl	8026420 <__any_on>
 80257ca:	4682      	mov	sl, r0
 80257cc:	117b      	asrs	r3, r7, #5
 80257ce:	2101      	movs	r1, #1
 80257d0:	f859 3023 	ldr.w	r3, [r9, r3, lsl #2]
 80257d4:	f007 071f 	and.w	r7, r7, #31
 80257d8:	fa01 f707 	lsl.w	r7, r1, r7
 80257dc:	421f      	tst	r7, r3
 80257de:	4629      	mov	r1, r5
 80257e0:	4620      	mov	r0, r4
 80257e2:	bf18      	it	ne
 80257e4:	f04a 0a02 	orrne.w	sl, sl, #2
 80257e8:	1b76      	subs	r6, r6, r5
 80257ea:	f7ff fded 	bl	80253c8 <rshift>
 80257ee:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80257f2:	2702      	movs	r7, #2
 80257f4:	f1ba 0f00 	cmp.w	sl, #0
 80257f8:	d048      	beq.n	802588c <__gethex+0x3f4>
 80257fa:	f8d8 300c 	ldr.w	r3, [r8, #12]
 80257fe:	2b02      	cmp	r3, #2
 8025800:	d015      	beq.n	802582e <__gethex+0x396>
 8025802:	2b03      	cmp	r3, #3
 8025804:	d017      	beq.n	8025836 <__gethex+0x39e>
 8025806:	2b01      	cmp	r3, #1
 8025808:	d109      	bne.n	802581e <__gethex+0x386>
 802580a:	f01a 0f02 	tst.w	sl, #2
 802580e:	d006      	beq.n	802581e <__gethex+0x386>
 8025810:	f8d9 0000 	ldr.w	r0, [r9]
 8025814:	ea4a 0a00 	orr.w	sl, sl, r0
 8025818:	f01a 0f01 	tst.w	sl, #1
 802581c:	d10e      	bne.n	802583c <__gethex+0x3a4>
 802581e:	f047 0710 	orr.w	r7, r7, #16
 8025822:	e033      	b.n	802588c <__gethex+0x3f4>
 8025824:	f04f 0a01 	mov.w	sl, #1
 8025828:	e7d0      	b.n	80257cc <__gethex+0x334>
 802582a:	2701      	movs	r7, #1
 802582c:	e7e2      	b.n	80257f4 <__gethex+0x35c>
 802582e:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8025830:	f1c3 0301 	rsb	r3, r3, #1
 8025834:	9315      	str	r3, [sp, #84]	; 0x54
 8025836:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8025838:	2b00      	cmp	r3, #0
 802583a:	d0f0      	beq.n	802581e <__gethex+0x386>
 802583c:	f8d4 b010 	ldr.w	fp, [r4, #16]
 8025840:	f104 0314 	add.w	r3, r4, #20
 8025844:	ea4f 0a8b 	mov.w	sl, fp, lsl #2
 8025848:	eb03 018b 	add.w	r1, r3, fp, lsl #2
 802584c:	f04f 0c00 	mov.w	ip, #0
 8025850:	4618      	mov	r0, r3
 8025852:	f853 2b04 	ldr.w	r2, [r3], #4
 8025856:	f1b2 3fff 	cmp.w	r2, #4294967295
 802585a:	d01c      	beq.n	8025896 <__gethex+0x3fe>
 802585c:	3201      	adds	r2, #1
 802585e:	6002      	str	r2, [r0, #0]
 8025860:	2f02      	cmp	r7, #2
 8025862:	f104 0314 	add.w	r3, r4, #20
 8025866:	d13f      	bne.n	80258e8 <__gethex+0x450>
 8025868:	f8d8 2000 	ldr.w	r2, [r8]
 802586c:	3a01      	subs	r2, #1
 802586e:	42b2      	cmp	r2, r6
 8025870:	d10a      	bne.n	8025888 <__gethex+0x3f0>
 8025872:	1171      	asrs	r1, r6, #5
 8025874:	2201      	movs	r2, #1
 8025876:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 802587a:	f006 061f 	and.w	r6, r6, #31
 802587e:	fa02 f606 	lsl.w	r6, r2, r6
 8025882:	421e      	tst	r6, r3
 8025884:	bf18      	it	ne
 8025886:	4617      	movne	r7, r2
 8025888:	f047 0720 	orr.w	r7, r7, #32
 802588c:	9b14      	ldr	r3, [sp, #80]	; 0x50
 802588e:	601c      	str	r4, [r3, #0]
 8025890:	9b04      	ldr	r3, [sp, #16]
 8025892:	601d      	str	r5, [r3, #0]
 8025894:	e695      	b.n	80255c2 <__gethex+0x12a>
 8025896:	4299      	cmp	r1, r3
 8025898:	f843 cc04 	str.w	ip, [r3, #-4]
 802589c:	d8d8      	bhi.n	8025850 <__gethex+0x3b8>
 802589e:	68a3      	ldr	r3, [r4, #8]
 80258a0:	459b      	cmp	fp, r3
 80258a2:	db19      	blt.n	80258d8 <__gethex+0x440>
 80258a4:	6861      	ldr	r1, [r4, #4]
 80258a6:	ee18 0a10 	vmov	r0, s16
 80258aa:	3101      	adds	r1, #1
 80258ac:	f000 f91e 	bl	8025aec <_Balloc>
 80258b0:	4681      	mov	r9, r0
 80258b2:	b918      	cbnz	r0, 80258bc <__gethex+0x424>
 80258b4:	4b1a      	ldr	r3, [pc, #104]	; (8025920 <__gethex+0x488>)
 80258b6:	4602      	mov	r2, r0
 80258b8:	2184      	movs	r1, #132	; 0x84
 80258ba:	e6a8      	b.n	802560e <__gethex+0x176>
 80258bc:	6922      	ldr	r2, [r4, #16]
 80258be:	3202      	adds	r2, #2
 80258c0:	f104 010c 	add.w	r1, r4, #12
 80258c4:	0092      	lsls	r2, r2, #2
 80258c6:	300c      	adds	r0, #12
 80258c8:	f7fe fc64 	bl	8024194 <memcpy>
 80258cc:	4621      	mov	r1, r4
 80258ce:	ee18 0a10 	vmov	r0, s16
 80258d2:	f000 f94b 	bl	8025b6c <_Bfree>
 80258d6:	464c      	mov	r4, r9
 80258d8:	6923      	ldr	r3, [r4, #16]
 80258da:	1c5a      	adds	r2, r3, #1
 80258dc:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 80258e0:	6122      	str	r2, [r4, #16]
 80258e2:	2201      	movs	r2, #1
 80258e4:	615a      	str	r2, [r3, #20]
 80258e6:	e7bb      	b.n	8025860 <__gethex+0x3c8>
 80258e8:	6922      	ldr	r2, [r4, #16]
 80258ea:	455a      	cmp	r2, fp
 80258ec:	dd0b      	ble.n	8025906 <__gethex+0x46e>
 80258ee:	2101      	movs	r1, #1
 80258f0:	4620      	mov	r0, r4
 80258f2:	f7ff fd69 	bl	80253c8 <rshift>
 80258f6:	f8d8 3008 	ldr.w	r3, [r8, #8]
 80258fa:	3501      	adds	r5, #1
 80258fc:	42ab      	cmp	r3, r5
 80258fe:	f6ff aed0 	blt.w	80256a2 <__gethex+0x20a>
 8025902:	2701      	movs	r7, #1
 8025904:	e7c0      	b.n	8025888 <__gethex+0x3f0>
 8025906:	f016 061f 	ands.w	r6, r6, #31
 802590a:	d0fa      	beq.n	8025902 <__gethex+0x46a>
 802590c:	449a      	add	sl, r3
 802590e:	f1c6 0620 	rsb	r6, r6, #32
 8025912:	f85a 0c04 	ldr.w	r0, [sl, #-4]
 8025916:	f000 f9df 	bl	8025cd8 <__hi0bits>
 802591a:	42b0      	cmp	r0, r6
 802591c:	dbe7      	blt.n	80258ee <__gethex+0x456>
 802591e:	e7f0      	b.n	8025902 <__gethex+0x46a>
 8025920:	08028566 	.word	0x08028566

08025924 <L_shift>:
 8025924:	f1c2 0208 	rsb	r2, r2, #8
 8025928:	0092      	lsls	r2, r2, #2
 802592a:	b570      	push	{r4, r5, r6, lr}
 802592c:	f1c2 0620 	rsb	r6, r2, #32
 8025930:	6843      	ldr	r3, [r0, #4]
 8025932:	6804      	ldr	r4, [r0, #0]
 8025934:	fa03 f506 	lsl.w	r5, r3, r6
 8025938:	432c      	orrs	r4, r5
 802593a:	40d3      	lsrs	r3, r2
 802593c:	6004      	str	r4, [r0, #0]
 802593e:	f840 3f04 	str.w	r3, [r0, #4]!
 8025942:	4288      	cmp	r0, r1
 8025944:	d3f4      	bcc.n	8025930 <L_shift+0xc>
 8025946:	bd70      	pop	{r4, r5, r6, pc}

08025948 <__match>:
 8025948:	b530      	push	{r4, r5, lr}
 802594a:	6803      	ldr	r3, [r0, #0]
 802594c:	3301      	adds	r3, #1
 802594e:	f811 4b01 	ldrb.w	r4, [r1], #1
 8025952:	b914      	cbnz	r4, 802595a <__match+0x12>
 8025954:	6003      	str	r3, [r0, #0]
 8025956:	2001      	movs	r0, #1
 8025958:	bd30      	pop	{r4, r5, pc}
 802595a:	f813 2b01 	ldrb.w	r2, [r3], #1
 802595e:	f1a2 0541 	sub.w	r5, r2, #65	; 0x41
 8025962:	2d19      	cmp	r5, #25
 8025964:	bf98      	it	ls
 8025966:	3220      	addls	r2, #32
 8025968:	42a2      	cmp	r2, r4
 802596a:	d0f0      	beq.n	802594e <__match+0x6>
 802596c:	2000      	movs	r0, #0
 802596e:	e7f3      	b.n	8025958 <__match+0x10>

08025970 <__hexnan>:
 8025970:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025974:	680b      	ldr	r3, [r1, #0]
 8025976:	6801      	ldr	r1, [r0, #0]
 8025978:	115e      	asrs	r6, r3, #5
 802597a:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 802597e:	f013 031f 	ands.w	r3, r3, #31
 8025982:	b087      	sub	sp, #28
 8025984:	bf18      	it	ne
 8025986:	3604      	addne	r6, #4
 8025988:	2500      	movs	r5, #0
 802598a:	1f37      	subs	r7, r6, #4
 802598c:	4682      	mov	sl, r0
 802598e:	4690      	mov	r8, r2
 8025990:	9301      	str	r3, [sp, #4]
 8025992:	f846 5c04 	str.w	r5, [r6, #-4]
 8025996:	46b9      	mov	r9, r7
 8025998:	463c      	mov	r4, r7
 802599a:	9502      	str	r5, [sp, #8]
 802599c:	46ab      	mov	fp, r5
 802599e:	784a      	ldrb	r2, [r1, #1]
 80259a0:	1c4b      	adds	r3, r1, #1
 80259a2:	9303      	str	r3, [sp, #12]
 80259a4:	b342      	cbz	r2, 80259f8 <__hexnan+0x88>
 80259a6:	4610      	mov	r0, r2
 80259a8:	9105      	str	r1, [sp, #20]
 80259aa:	9204      	str	r2, [sp, #16]
 80259ac:	f7ff fd5e 	bl	802546c <__hexdig_fun>
 80259b0:	2800      	cmp	r0, #0
 80259b2:	d14f      	bne.n	8025a54 <__hexnan+0xe4>
 80259b4:	9a04      	ldr	r2, [sp, #16]
 80259b6:	9905      	ldr	r1, [sp, #20]
 80259b8:	2a20      	cmp	r2, #32
 80259ba:	d818      	bhi.n	80259ee <__hexnan+0x7e>
 80259bc:	9b02      	ldr	r3, [sp, #8]
 80259be:	459b      	cmp	fp, r3
 80259c0:	dd13      	ble.n	80259ea <__hexnan+0x7a>
 80259c2:	454c      	cmp	r4, r9
 80259c4:	d206      	bcs.n	80259d4 <__hexnan+0x64>
 80259c6:	2d07      	cmp	r5, #7
 80259c8:	dc04      	bgt.n	80259d4 <__hexnan+0x64>
 80259ca:	462a      	mov	r2, r5
 80259cc:	4649      	mov	r1, r9
 80259ce:	4620      	mov	r0, r4
 80259d0:	f7ff ffa8 	bl	8025924 <L_shift>
 80259d4:	4544      	cmp	r4, r8
 80259d6:	d950      	bls.n	8025a7a <__hexnan+0x10a>
 80259d8:	2300      	movs	r3, #0
 80259da:	f1a4 0904 	sub.w	r9, r4, #4
 80259de:	f844 3c04 	str.w	r3, [r4, #-4]
 80259e2:	f8cd b008 	str.w	fp, [sp, #8]
 80259e6:	464c      	mov	r4, r9
 80259e8:	461d      	mov	r5, r3
 80259ea:	9903      	ldr	r1, [sp, #12]
 80259ec:	e7d7      	b.n	802599e <__hexnan+0x2e>
 80259ee:	2a29      	cmp	r2, #41	; 0x29
 80259f0:	d156      	bne.n	8025aa0 <__hexnan+0x130>
 80259f2:	3102      	adds	r1, #2
 80259f4:	f8ca 1000 	str.w	r1, [sl]
 80259f8:	f1bb 0f00 	cmp.w	fp, #0
 80259fc:	d050      	beq.n	8025aa0 <__hexnan+0x130>
 80259fe:	454c      	cmp	r4, r9
 8025a00:	d206      	bcs.n	8025a10 <__hexnan+0xa0>
 8025a02:	2d07      	cmp	r5, #7
 8025a04:	dc04      	bgt.n	8025a10 <__hexnan+0xa0>
 8025a06:	462a      	mov	r2, r5
 8025a08:	4649      	mov	r1, r9
 8025a0a:	4620      	mov	r0, r4
 8025a0c:	f7ff ff8a 	bl	8025924 <L_shift>
 8025a10:	4544      	cmp	r4, r8
 8025a12:	d934      	bls.n	8025a7e <__hexnan+0x10e>
 8025a14:	f1a8 0204 	sub.w	r2, r8, #4
 8025a18:	4623      	mov	r3, r4
 8025a1a:	f853 1b04 	ldr.w	r1, [r3], #4
 8025a1e:	f842 1f04 	str.w	r1, [r2, #4]!
 8025a22:	429f      	cmp	r7, r3
 8025a24:	d2f9      	bcs.n	8025a1a <__hexnan+0xaa>
 8025a26:	1b3b      	subs	r3, r7, r4
 8025a28:	f023 0303 	bic.w	r3, r3, #3
 8025a2c:	3304      	adds	r3, #4
 8025a2e:	3401      	adds	r4, #1
 8025a30:	3e03      	subs	r6, #3
 8025a32:	42b4      	cmp	r4, r6
 8025a34:	bf88      	it	hi
 8025a36:	2304      	movhi	r3, #4
 8025a38:	4443      	add	r3, r8
 8025a3a:	2200      	movs	r2, #0
 8025a3c:	f843 2b04 	str.w	r2, [r3], #4
 8025a40:	429f      	cmp	r7, r3
 8025a42:	d2fb      	bcs.n	8025a3c <__hexnan+0xcc>
 8025a44:	683b      	ldr	r3, [r7, #0]
 8025a46:	b91b      	cbnz	r3, 8025a50 <__hexnan+0xe0>
 8025a48:	4547      	cmp	r7, r8
 8025a4a:	d127      	bne.n	8025a9c <__hexnan+0x12c>
 8025a4c:	2301      	movs	r3, #1
 8025a4e:	603b      	str	r3, [r7, #0]
 8025a50:	2005      	movs	r0, #5
 8025a52:	e026      	b.n	8025aa2 <__hexnan+0x132>
 8025a54:	3501      	adds	r5, #1
 8025a56:	2d08      	cmp	r5, #8
 8025a58:	f10b 0b01 	add.w	fp, fp, #1
 8025a5c:	dd06      	ble.n	8025a6c <__hexnan+0xfc>
 8025a5e:	4544      	cmp	r4, r8
 8025a60:	d9c3      	bls.n	80259ea <__hexnan+0x7a>
 8025a62:	2300      	movs	r3, #0
 8025a64:	f844 3c04 	str.w	r3, [r4, #-4]
 8025a68:	2501      	movs	r5, #1
 8025a6a:	3c04      	subs	r4, #4
 8025a6c:	6822      	ldr	r2, [r4, #0]
 8025a6e:	f000 000f 	and.w	r0, r0, #15
 8025a72:	ea40 1202 	orr.w	r2, r0, r2, lsl #4
 8025a76:	6022      	str	r2, [r4, #0]
 8025a78:	e7b7      	b.n	80259ea <__hexnan+0x7a>
 8025a7a:	2508      	movs	r5, #8
 8025a7c:	e7b5      	b.n	80259ea <__hexnan+0x7a>
 8025a7e:	9b01      	ldr	r3, [sp, #4]
 8025a80:	2b00      	cmp	r3, #0
 8025a82:	d0df      	beq.n	8025a44 <__hexnan+0xd4>
 8025a84:	f04f 32ff 	mov.w	r2, #4294967295
 8025a88:	f1c3 0320 	rsb	r3, r3, #32
 8025a8c:	fa22 f303 	lsr.w	r3, r2, r3
 8025a90:	f856 2c04 	ldr.w	r2, [r6, #-4]
 8025a94:	401a      	ands	r2, r3
 8025a96:	f846 2c04 	str.w	r2, [r6, #-4]
 8025a9a:	e7d3      	b.n	8025a44 <__hexnan+0xd4>
 8025a9c:	3f04      	subs	r7, #4
 8025a9e:	e7d1      	b.n	8025a44 <__hexnan+0xd4>
 8025aa0:	2004      	movs	r0, #4
 8025aa2:	b007      	add	sp, #28
 8025aa4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08025aa8 <__retarget_lock_init_recursive>:
 8025aa8:	4770      	bx	lr

08025aaa <__retarget_lock_acquire_recursive>:
 8025aaa:	4770      	bx	lr

08025aac <__retarget_lock_release>:
 8025aac:	4770      	bx	lr

08025aae <__retarget_lock_release_recursive>:
 8025aae:	4770      	bx	lr

08025ab0 <__ascii_mbtowc>:
 8025ab0:	b082      	sub	sp, #8
 8025ab2:	b901      	cbnz	r1, 8025ab6 <__ascii_mbtowc+0x6>
 8025ab4:	a901      	add	r1, sp, #4
 8025ab6:	b142      	cbz	r2, 8025aca <__ascii_mbtowc+0x1a>
 8025ab8:	b14b      	cbz	r3, 8025ace <__ascii_mbtowc+0x1e>
 8025aba:	7813      	ldrb	r3, [r2, #0]
 8025abc:	600b      	str	r3, [r1, #0]
 8025abe:	7812      	ldrb	r2, [r2, #0]
 8025ac0:	1e10      	subs	r0, r2, #0
 8025ac2:	bf18      	it	ne
 8025ac4:	2001      	movne	r0, #1
 8025ac6:	b002      	add	sp, #8
 8025ac8:	4770      	bx	lr
 8025aca:	4610      	mov	r0, r2
 8025acc:	e7fb      	b.n	8025ac6 <__ascii_mbtowc+0x16>
 8025ace:	f06f 0001 	mvn.w	r0, #1
 8025ad2:	e7f8      	b.n	8025ac6 <__ascii_mbtowc+0x16>

08025ad4 <__malloc_lock>:
 8025ad4:	4801      	ldr	r0, [pc, #4]	; (8025adc <__malloc_lock+0x8>)
 8025ad6:	f7ff bfe8 	b.w	8025aaa <__retarget_lock_acquire_recursive>
 8025ada:	bf00      	nop
 8025adc:	200008c0 	.word	0x200008c0

08025ae0 <__malloc_unlock>:
 8025ae0:	4801      	ldr	r0, [pc, #4]	; (8025ae8 <__malloc_unlock+0x8>)
 8025ae2:	f7ff bfe4 	b.w	8025aae <__retarget_lock_release_recursive>
 8025ae6:	bf00      	nop
 8025ae8:	200008c0 	.word	0x200008c0

08025aec <_Balloc>:
 8025aec:	b570      	push	{r4, r5, r6, lr}
 8025aee:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8025af0:	4604      	mov	r4, r0
 8025af2:	460d      	mov	r5, r1
 8025af4:	b976      	cbnz	r6, 8025b14 <_Balloc+0x28>
 8025af6:	2010      	movs	r0, #16
 8025af8:	f7fe fb2e 	bl	8024158 <malloc>
 8025afc:	4602      	mov	r2, r0
 8025afe:	6260      	str	r0, [r4, #36]	; 0x24
 8025b00:	b920      	cbnz	r0, 8025b0c <_Balloc+0x20>
 8025b02:	4b18      	ldr	r3, [pc, #96]	; (8025b64 <_Balloc+0x78>)
 8025b04:	4818      	ldr	r0, [pc, #96]	; (8025b68 <_Balloc+0x7c>)
 8025b06:	2166      	movs	r1, #102	; 0x66
 8025b08:	f000 ffd0 	bl	8026aac <__assert_func>
 8025b0c:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8025b10:	6006      	str	r6, [r0, #0]
 8025b12:	60c6      	str	r6, [r0, #12]
 8025b14:	6a66      	ldr	r6, [r4, #36]	; 0x24
 8025b16:	68f3      	ldr	r3, [r6, #12]
 8025b18:	b183      	cbz	r3, 8025b3c <_Balloc+0x50>
 8025b1a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8025b1c:	68db      	ldr	r3, [r3, #12]
 8025b1e:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8025b22:	b9b8      	cbnz	r0, 8025b54 <_Balloc+0x68>
 8025b24:	2101      	movs	r1, #1
 8025b26:	fa01 f605 	lsl.w	r6, r1, r5
 8025b2a:	1d72      	adds	r2, r6, #5
 8025b2c:	0092      	lsls	r2, r2, #2
 8025b2e:	4620      	mov	r0, r4
 8025b30:	f000 fc97 	bl	8026462 <_calloc_r>
 8025b34:	b160      	cbz	r0, 8025b50 <_Balloc+0x64>
 8025b36:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8025b3a:	e00e      	b.n	8025b5a <_Balloc+0x6e>
 8025b3c:	2221      	movs	r2, #33	; 0x21
 8025b3e:	2104      	movs	r1, #4
 8025b40:	4620      	mov	r0, r4
 8025b42:	f000 fc8e 	bl	8026462 <_calloc_r>
 8025b46:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8025b48:	60f0      	str	r0, [r6, #12]
 8025b4a:	68db      	ldr	r3, [r3, #12]
 8025b4c:	2b00      	cmp	r3, #0
 8025b4e:	d1e4      	bne.n	8025b1a <_Balloc+0x2e>
 8025b50:	2000      	movs	r0, #0
 8025b52:	bd70      	pop	{r4, r5, r6, pc}
 8025b54:	6802      	ldr	r2, [r0, #0]
 8025b56:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8025b5a:	2300      	movs	r3, #0
 8025b5c:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8025b60:	e7f7      	b.n	8025b52 <_Balloc+0x66>
 8025b62:	bf00      	nop
 8025b64:	080285f4 	.word	0x080285f4
 8025b68:	0802860b 	.word	0x0802860b

08025b6c <_Bfree>:
 8025b6c:	b570      	push	{r4, r5, r6, lr}
 8025b6e:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8025b70:	4605      	mov	r5, r0
 8025b72:	460c      	mov	r4, r1
 8025b74:	b976      	cbnz	r6, 8025b94 <_Bfree+0x28>
 8025b76:	2010      	movs	r0, #16
 8025b78:	f7fe faee 	bl	8024158 <malloc>
 8025b7c:	4602      	mov	r2, r0
 8025b7e:	6268      	str	r0, [r5, #36]	; 0x24
 8025b80:	b920      	cbnz	r0, 8025b8c <_Bfree+0x20>
 8025b82:	4b09      	ldr	r3, [pc, #36]	; (8025ba8 <_Bfree+0x3c>)
 8025b84:	4809      	ldr	r0, [pc, #36]	; (8025bac <_Bfree+0x40>)
 8025b86:	218a      	movs	r1, #138	; 0x8a
 8025b88:	f000 ff90 	bl	8026aac <__assert_func>
 8025b8c:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8025b90:	6006      	str	r6, [r0, #0]
 8025b92:	60c6      	str	r6, [r0, #12]
 8025b94:	b13c      	cbz	r4, 8025ba6 <_Bfree+0x3a>
 8025b96:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8025b98:	6862      	ldr	r2, [r4, #4]
 8025b9a:	68db      	ldr	r3, [r3, #12]
 8025b9c:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8025ba0:	6021      	str	r1, [r4, #0]
 8025ba2:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8025ba6:	bd70      	pop	{r4, r5, r6, pc}
 8025ba8:	080285f4 	.word	0x080285f4
 8025bac:	0802860b 	.word	0x0802860b

08025bb0 <__multadd>:
 8025bb0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8025bb4:	690e      	ldr	r6, [r1, #16]
 8025bb6:	4607      	mov	r7, r0
 8025bb8:	4698      	mov	r8, r3
 8025bba:	460c      	mov	r4, r1
 8025bbc:	f101 0014 	add.w	r0, r1, #20
 8025bc0:	2300      	movs	r3, #0
 8025bc2:	6805      	ldr	r5, [r0, #0]
 8025bc4:	b2a9      	uxth	r1, r5
 8025bc6:	fb02 8101 	mla	r1, r2, r1, r8
 8025bca:	ea4f 4c11 	mov.w	ip, r1, lsr #16
 8025bce:	0c2d      	lsrs	r5, r5, #16
 8025bd0:	fb02 c505 	mla	r5, r2, r5, ip
 8025bd4:	b289      	uxth	r1, r1
 8025bd6:	3301      	adds	r3, #1
 8025bd8:	eb01 4105 	add.w	r1, r1, r5, lsl #16
 8025bdc:	429e      	cmp	r6, r3
 8025bde:	f840 1b04 	str.w	r1, [r0], #4
 8025be2:	ea4f 4815 	mov.w	r8, r5, lsr #16
 8025be6:	dcec      	bgt.n	8025bc2 <__multadd+0x12>
 8025be8:	f1b8 0f00 	cmp.w	r8, #0
 8025bec:	d022      	beq.n	8025c34 <__multadd+0x84>
 8025bee:	68a3      	ldr	r3, [r4, #8]
 8025bf0:	42b3      	cmp	r3, r6
 8025bf2:	dc19      	bgt.n	8025c28 <__multadd+0x78>
 8025bf4:	6861      	ldr	r1, [r4, #4]
 8025bf6:	4638      	mov	r0, r7
 8025bf8:	3101      	adds	r1, #1
 8025bfa:	f7ff ff77 	bl	8025aec <_Balloc>
 8025bfe:	4605      	mov	r5, r0
 8025c00:	b928      	cbnz	r0, 8025c0e <__multadd+0x5e>
 8025c02:	4602      	mov	r2, r0
 8025c04:	4b0d      	ldr	r3, [pc, #52]	; (8025c3c <__multadd+0x8c>)
 8025c06:	480e      	ldr	r0, [pc, #56]	; (8025c40 <__multadd+0x90>)
 8025c08:	21b5      	movs	r1, #181	; 0xb5
 8025c0a:	f000 ff4f 	bl	8026aac <__assert_func>
 8025c0e:	6922      	ldr	r2, [r4, #16]
 8025c10:	3202      	adds	r2, #2
 8025c12:	f104 010c 	add.w	r1, r4, #12
 8025c16:	0092      	lsls	r2, r2, #2
 8025c18:	300c      	adds	r0, #12
 8025c1a:	f7fe fabb 	bl	8024194 <memcpy>
 8025c1e:	4621      	mov	r1, r4
 8025c20:	4638      	mov	r0, r7
 8025c22:	f7ff ffa3 	bl	8025b6c <_Bfree>
 8025c26:	462c      	mov	r4, r5
 8025c28:	eb04 0386 	add.w	r3, r4, r6, lsl #2
 8025c2c:	3601      	adds	r6, #1
 8025c2e:	f8c3 8014 	str.w	r8, [r3, #20]
 8025c32:	6126      	str	r6, [r4, #16]
 8025c34:	4620      	mov	r0, r4
 8025c36:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8025c3a:	bf00      	nop
 8025c3c:	08028566 	.word	0x08028566
 8025c40:	0802860b 	.word	0x0802860b

08025c44 <__s2b>:
 8025c44:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8025c48:	460c      	mov	r4, r1
 8025c4a:	4615      	mov	r5, r2
 8025c4c:	461f      	mov	r7, r3
 8025c4e:	2209      	movs	r2, #9
 8025c50:	3308      	adds	r3, #8
 8025c52:	4606      	mov	r6, r0
 8025c54:	fb93 f3f2 	sdiv	r3, r3, r2
 8025c58:	2100      	movs	r1, #0
 8025c5a:	2201      	movs	r2, #1
 8025c5c:	429a      	cmp	r2, r3
 8025c5e:	db09      	blt.n	8025c74 <__s2b+0x30>
 8025c60:	4630      	mov	r0, r6
 8025c62:	f7ff ff43 	bl	8025aec <_Balloc>
 8025c66:	b940      	cbnz	r0, 8025c7a <__s2b+0x36>
 8025c68:	4602      	mov	r2, r0
 8025c6a:	4b19      	ldr	r3, [pc, #100]	; (8025cd0 <__s2b+0x8c>)
 8025c6c:	4819      	ldr	r0, [pc, #100]	; (8025cd4 <__s2b+0x90>)
 8025c6e:	21ce      	movs	r1, #206	; 0xce
 8025c70:	f000 ff1c 	bl	8026aac <__assert_func>
 8025c74:	0052      	lsls	r2, r2, #1
 8025c76:	3101      	adds	r1, #1
 8025c78:	e7f0      	b.n	8025c5c <__s2b+0x18>
 8025c7a:	9b08      	ldr	r3, [sp, #32]
 8025c7c:	6143      	str	r3, [r0, #20]
 8025c7e:	2d09      	cmp	r5, #9
 8025c80:	f04f 0301 	mov.w	r3, #1
 8025c84:	6103      	str	r3, [r0, #16]
 8025c86:	dd16      	ble.n	8025cb6 <__s2b+0x72>
 8025c88:	f104 0909 	add.w	r9, r4, #9
 8025c8c:	46c8      	mov	r8, r9
 8025c8e:	442c      	add	r4, r5
 8025c90:	f818 3b01 	ldrb.w	r3, [r8], #1
 8025c94:	4601      	mov	r1, r0
 8025c96:	3b30      	subs	r3, #48	; 0x30
 8025c98:	220a      	movs	r2, #10
 8025c9a:	4630      	mov	r0, r6
 8025c9c:	f7ff ff88 	bl	8025bb0 <__multadd>
 8025ca0:	45a0      	cmp	r8, r4
 8025ca2:	d1f5      	bne.n	8025c90 <__s2b+0x4c>
 8025ca4:	f1a5 0408 	sub.w	r4, r5, #8
 8025ca8:	444c      	add	r4, r9
 8025caa:	1b2d      	subs	r5, r5, r4
 8025cac:	1963      	adds	r3, r4, r5
 8025cae:	42bb      	cmp	r3, r7
 8025cb0:	db04      	blt.n	8025cbc <__s2b+0x78>
 8025cb2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8025cb6:	340a      	adds	r4, #10
 8025cb8:	2509      	movs	r5, #9
 8025cba:	e7f6      	b.n	8025caa <__s2b+0x66>
 8025cbc:	f814 3b01 	ldrb.w	r3, [r4], #1
 8025cc0:	4601      	mov	r1, r0
 8025cc2:	3b30      	subs	r3, #48	; 0x30
 8025cc4:	220a      	movs	r2, #10
 8025cc6:	4630      	mov	r0, r6
 8025cc8:	f7ff ff72 	bl	8025bb0 <__multadd>
 8025ccc:	e7ee      	b.n	8025cac <__s2b+0x68>
 8025cce:	bf00      	nop
 8025cd0:	08028566 	.word	0x08028566
 8025cd4:	0802860b 	.word	0x0802860b

08025cd8 <__hi0bits>:
 8025cd8:	0c03      	lsrs	r3, r0, #16
 8025cda:	041b      	lsls	r3, r3, #16
 8025cdc:	b9d3      	cbnz	r3, 8025d14 <__hi0bits+0x3c>
 8025cde:	0400      	lsls	r0, r0, #16
 8025ce0:	2310      	movs	r3, #16
 8025ce2:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 8025ce6:	bf04      	itt	eq
 8025ce8:	0200      	lsleq	r0, r0, #8
 8025cea:	3308      	addeq	r3, #8
 8025cec:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
 8025cf0:	bf04      	itt	eq
 8025cf2:	0100      	lsleq	r0, r0, #4
 8025cf4:	3304      	addeq	r3, #4
 8025cf6:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
 8025cfa:	bf04      	itt	eq
 8025cfc:	0080      	lsleq	r0, r0, #2
 8025cfe:	3302      	addeq	r3, #2
 8025d00:	2800      	cmp	r0, #0
 8025d02:	db05      	blt.n	8025d10 <__hi0bits+0x38>
 8025d04:	f010 4f80 	tst.w	r0, #1073741824	; 0x40000000
 8025d08:	f103 0301 	add.w	r3, r3, #1
 8025d0c:	bf08      	it	eq
 8025d0e:	2320      	moveq	r3, #32
 8025d10:	4618      	mov	r0, r3
 8025d12:	4770      	bx	lr
 8025d14:	2300      	movs	r3, #0
 8025d16:	e7e4      	b.n	8025ce2 <__hi0bits+0xa>

08025d18 <__lo0bits>:
 8025d18:	6803      	ldr	r3, [r0, #0]
 8025d1a:	f013 0207 	ands.w	r2, r3, #7
 8025d1e:	4601      	mov	r1, r0
 8025d20:	d00b      	beq.n	8025d3a <__lo0bits+0x22>
 8025d22:	07da      	lsls	r2, r3, #31
 8025d24:	d424      	bmi.n	8025d70 <__lo0bits+0x58>
 8025d26:	0798      	lsls	r0, r3, #30
 8025d28:	bf49      	itett	mi
 8025d2a:	085b      	lsrmi	r3, r3, #1
 8025d2c:	089b      	lsrpl	r3, r3, #2
 8025d2e:	2001      	movmi	r0, #1
 8025d30:	600b      	strmi	r3, [r1, #0]
 8025d32:	bf5c      	itt	pl
 8025d34:	600b      	strpl	r3, [r1, #0]
 8025d36:	2002      	movpl	r0, #2
 8025d38:	4770      	bx	lr
 8025d3a:	b298      	uxth	r0, r3
 8025d3c:	b9b0      	cbnz	r0, 8025d6c <__lo0bits+0x54>
 8025d3e:	0c1b      	lsrs	r3, r3, #16
 8025d40:	2010      	movs	r0, #16
 8025d42:	f013 0fff 	tst.w	r3, #255	; 0xff
 8025d46:	bf04      	itt	eq
 8025d48:	0a1b      	lsreq	r3, r3, #8
 8025d4a:	3008      	addeq	r0, #8
 8025d4c:	071a      	lsls	r2, r3, #28
 8025d4e:	bf04      	itt	eq
 8025d50:	091b      	lsreq	r3, r3, #4
 8025d52:	3004      	addeq	r0, #4
 8025d54:	079a      	lsls	r2, r3, #30
 8025d56:	bf04      	itt	eq
 8025d58:	089b      	lsreq	r3, r3, #2
 8025d5a:	3002      	addeq	r0, #2
 8025d5c:	07da      	lsls	r2, r3, #31
 8025d5e:	d403      	bmi.n	8025d68 <__lo0bits+0x50>
 8025d60:	085b      	lsrs	r3, r3, #1
 8025d62:	f100 0001 	add.w	r0, r0, #1
 8025d66:	d005      	beq.n	8025d74 <__lo0bits+0x5c>
 8025d68:	600b      	str	r3, [r1, #0]
 8025d6a:	4770      	bx	lr
 8025d6c:	4610      	mov	r0, r2
 8025d6e:	e7e8      	b.n	8025d42 <__lo0bits+0x2a>
 8025d70:	2000      	movs	r0, #0
 8025d72:	4770      	bx	lr
 8025d74:	2020      	movs	r0, #32
 8025d76:	4770      	bx	lr

08025d78 <__i2b>:
 8025d78:	b510      	push	{r4, lr}
 8025d7a:	460c      	mov	r4, r1
 8025d7c:	2101      	movs	r1, #1
 8025d7e:	f7ff feb5 	bl	8025aec <_Balloc>
 8025d82:	4602      	mov	r2, r0
 8025d84:	b928      	cbnz	r0, 8025d92 <__i2b+0x1a>
 8025d86:	4b05      	ldr	r3, [pc, #20]	; (8025d9c <__i2b+0x24>)
 8025d88:	4805      	ldr	r0, [pc, #20]	; (8025da0 <__i2b+0x28>)
 8025d8a:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8025d8e:	f000 fe8d 	bl	8026aac <__assert_func>
 8025d92:	2301      	movs	r3, #1
 8025d94:	6144      	str	r4, [r0, #20]
 8025d96:	6103      	str	r3, [r0, #16]
 8025d98:	bd10      	pop	{r4, pc}
 8025d9a:	bf00      	nop
 8025d9c:	08028566 	.word	0x08028566
 8025da0:	0802860b 	.word	0x0802860b

08025da4 <__multiply>:
 8025da4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025da8:	4614      	mov	r4, r2
 8025daa:	690a      	ldr	r2, [r1, #16]
 8025dac:	6923      	ldr	r3, [r4, #16]
 8025dae:	429a      	cmp	r2, r3
 8025db0:	bfb8      	it	lt
 8025db2:	460b      	movlt	r3, r1
 8025db4:	460d      	mov	r5, r1
 8025db6:	bfbc      	itt	lt
 8025db8:	4625      	movlt	r5, r4
 8025dba:	461c      	movlt	r4, r3
 8025dbc:	f8d5 a010 	ldr.w	sl, [r5, #16]
 8025dc0:	f8d4 9010 	ldr.w	r9, [r4, #16]
 8025dc4:	68ab      	ldr	r3, [r5, #8]
 8025dc6:	6869      	ldr	r1, [r5, #4]
 8025dc8:	eb0a 0709 	add.w	r7, sl, r9
 8025dcc:	42bb      	cmp	r3, r7
 8025dce:	b085      	sub	sp, #20
 8025dd0:	bfb8      	it	lt
 8025dd2:	3101      	addlt	r1, #1
 8025dd4:	f7ff fe8a 	bl	8025aec <_Balloc>
 8025dd8:	b930      	cbnz	r0, 8025de8 <__multiply+0x44>
 8025dda:	4602      	mov	r2, r0
 8025ddc:	4b42      	ldr	r3, [pc, #264]	; (8025ee8 <__multiply+0x144>)
 8025dde:	4843      	ldr	r0, [pc, #268]	; (8025eec <__multiply+0x148>)
 8025de0:	f240 115d 	movw	r1, #349	; 0x15d
 8025de4:	f000 fe62 	bl	8026aac <__assert_func>
 8025de8:	f100 0614 	add.w	r6, r0, #20
 8025dec:	eb06 0887 	add.w	r8, r6, r7, lsl #2
 8025df0:	4633      	mov	r3, r6
 8025df2:	2200      	movs	r2, #0
 8025df4:	4543      	cmp	r3, r8
 8025df6:	d31e      	bcc.n	8025e36 <__multiply+0x92>
 8025df8:	f105 0c14 	add.w	ip, r5, #20
 8025dfc:	f104 0314 	add.w	r3, r4, #20
 8025e00:	eb0c 0c8a 	add.w	ip, ip, sl, lsl #2
 8025e04:	eb03 0289 	add.w	r2, r3, r9, lsl #2
 8025e08:	9202      	str	r2, [sp, #8]
 8025e0a:	ebac 0205 	sub.w	r2, ip, r5
 8025e0e:	3a15      	subs	r2, #21
 8025e10:	f022 0203 	bic.w	r2, r2, #3
 8025e14:	3204      	adds	r2, #4
 8025e16:	f105 0115 	add.w	r1, r5, #21
 8025e1a:	458c      	cmp	ip, r1
 8025e1c:	bf38      	it	cc
 8025e1e:	2204      	movcc	r2, #4
 8025e20:	9201      	str	r2, [sp, #4]
 8025e22:	9a02      	ldr	r2, [sp, #8]
 8025e24:	9303      	str	r3, [sp, #12]
 8025e26:	429a      	cmp	r2, r3
 8025e28:	d808      	bhi.n	8025e3c <__multiply+0x98>
 8025e2a:	2f00      	cmp	r7, #0
 8025e2c:	dc55      	bgt.n	8025eda <__multiply+0x136>
 8025e2e:	6107      	str	r7, [r0, #16]
 8025e30:	b005      	add	sp, #20
 8025e32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025e36:	f843 2b04 	str.w	r2, [r3], #4
 8025e3a:	e7db      	b.n	8025df4 <__multiply+0x50>
 8025e3c:	f8b3 a000 	ldrh.w	sl, [r3]
 8025e40:	f1ba 0f00 	cmp.w	sl, #0
 8025e44:	d020      	beq.n	8025e88 <__multiply+0xe4>
 8025e46:	f105 0e14 	add.w	lr, r5, #20
 8025e4a:	46b1      	mov	r9, r6
 8025e4c:	2200      	movs	r2, #0
 8025e4e:	f85e 4b04 	ldr.w	r4, [lr], #4
 8025e52:	f8d9 b000 	ldr.w	fp, [r9]
 8025e56:	b2a1      	uxth	r1, r4
 8025e58:	fa1f fb8b 	uxth.w	fp, fp
 8025e5c:	fb0a b101 	mla	r1, sl, r1, fp
 8025e60:	4411      	add	r1, r2
 8025e62:	f8d9 2000 	ldr.w	r2, [r9]
 8025e66:	0c24      	lsrs	r4, r4, #16
 8025e68:	0c12      	lsrs	r2, r2, #16
 8025e6a:	fb0a 2404 	mla	r4, sl, r4, r2
 8025e6e:	eb04 4411 	add.w	r4, r4, r1, lsr #16
 8025e72:	b289      	uxth	r1, r1
 8025e74:	ea41 4104 	orr.w	r1, r1, r4, lsl #16
 8025e78:	45f4      	cmp	ip, lr
 8025e7a:	f849 1b04 	str.w	r1, [r9], #4
 8025e7e:	ea4f 4214 	mov.w	r2, r4, lsr #16
 8025e82:	d8e4      	bhi.n	8025e4e <__multiply+0xaa>
 8025e84:	9901      	ldr	r1, [sp, #4]
 8025e86:	5072      	str	r2, [r6, r1]
 8025e88:	9a03      	ldr	r2, [sp, #12]
 8025e8a:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 8025e8e:	3304      	adds	r3, #4
 8025e90:	f1b9 0f00 	cmp.w	r9, #0
 8025e94:	d01f      	beq.n	8025ed6 <__multiply+0x132>
 8025e96:	6834      	ldr	r4, [r6, #0]
 8025e98:	f105 0114 	add.w	r1, r5, #20
 8025e9c:	46b6      	mov	lr, r6
 8025e9e:	f04f 0a00 	mov.w	sl, #0
 8025ea2:	880a      	ldrh	r2, [r1, #0]
 8025ea4:	f8be b002 	ldrh.w	fp, [lr, #2]
 8025ea8:	fb09 b202 	mla	r2, r9, r2, fp
 8025eac:	4492      	add	sl, r2
 8025eae:	b2a4      	uxth	r4, r4
 8025eb0:	ea44 440a 	orr.w	r4, r4, sl, lsl #16
 8025eb4:	f84e 4b04 	str.w	r4, [lr], #4
 8025eb8:	f851 4b04 	ldr.w	r4, [r1], #4
 8025ebc:	f8be 2000 	ldrh.w	r2, [lr]
 8025ec0:	0c24      	lsrs	r4, r4, #16
 8025ec2:	fb09 2404 	mla	r4, r9, r4, r2
 8025ec6:	eb04 441a 	add.w	r4, r4, sl, lsr #16
 8025eca:	458c      	cmp	ip, r1
 8025ecc:	ea4f 4a14 	mov.w	sl, r4, lsr #16
 8025ed0:	d8e7      	bhi.n	8025ea2 <__multiply+0xfe>
 8025ed2:	9a01      	ldr	r2, [sp, #4]
 8025ed4:	50b4      	str	r4, [r6, r2]
 8025ed6:	3604      	adds	r6, #4
 8025ed8:	e7a3      	b.n	8025e22 <__multiply+0x7e>
 8025eda:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 8025ede:	2b00      	cmp	r3, #0
 8025ee0:	d1a5      	bne.n	8025e2e <__multiply+0x8a>
 8025ee2:	3f01      	subs	r7, #1
 8025ee4:	e7a1      	b.n	8025e2a <__multiply+0x86>
 8025ee6:	bf00      	nop
 8025ee8:	08028566 	.word	0x08028566
 8025eec:	0802860b 	.word	0x0802860b

08025ef0 <__pow5mult>:
 8025ef0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8025ef4:	4615      	mov	r5, r2
 8025ef6:	f012 0203 	ands.w	r2, r2, #3
 8025efa:	4606      	mov	r6, r0
 8025efc:	460f      	mov	r7, r1
 8025efe:	d007      	beq.n	8025f10 <__pow5mult+0x20>
 8025f00:	4c25      	ldr	r4, [pc, #148]	; (8025f98 <__pow5mult+0xa8>)
 8025f02:	3a01      	subs	r2, #1
 8025f04:	2300      	movs	r3, #0
 8025f06:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8025f0a:	f7ff fe51 	bl	8025bb0 <__multadd>
 8025f0e:	4607      	mov	r7, r0
 8025f10:	10ad      	asrs	r5, r5, #2
 8025f12:	d03d      	beq.n	8025f90 <__pow5mult+0xa0>
 8025f14:	6a74      	ldr	r4, [r6, #36]	; 0x24
 8025f16:	b97c      	cbnz	r4, 8025f38 <__pow5mult+0x48>
 8025f18:	2010      	movs	r0, #16
 8025f1a:	f7fe f91d 	bl	8024158 <malloc>
 8025f1e:	4602      	mov	r2, r0
 8025f20:	6270      	str	r0, [r6, #36]	; 0x24
 8025f22:	b928      	cbnz	r0, 8025f30 <__pow5mult+0x40>
 8025f24:	4b1d      	ldr	r3, [pc, #116]	; (8025f9c <__pow5mult+0xac>)
 8025f26:	481e      	ldr	r0, [pc, #120]	; (8025fa0 <__pow5mult+0xb0>)
 8025f28:	f44f 71d7 	mov.w	r1, #430	; 0x1ae
 8025f2c:	f000 fdbe 	bl	8026aac <__assert_func>
 8025f30:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8025f34:	6004      	str	r4, [r0, #0]
 8025f36:	60c4      	str	r4, [r0, #12]
 8025f38:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 8025f3c:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8025f40:	b94c      	cbnz	r4, 8025f56 <__pow5mult+0x66>
 8025f42:	f240 2171 	movw	r1, #625	; 0x271
 8025f46:	4630      	mov	r0, r6
 8025f48:	f7ff ff16 	bl	8025d78 <__i2b>
 8025f4c:	2300      	movs	r3, #0
 8025f4e:	f8c8 0008 	str.w	r0, [r8, #8]
 8025f52:	4604      	mov	r4, r0
 8025f54:	6003      	str	r3, [r0, #0]
 8025f56:	f04f 0900 	mov.w	r9, #0
 8025f5a:	07eb      	lsls	r3, r5, #31
 8025f5c:	d50a      	bpl.n	8025f74 <__pow5mult+0x84>
 8025f5e:	4639      	mov	r1, r7
 8025f60:	4622      	mov	r2, r4
 8025f62:	4630      	mov	r0, r6
 8025f64:	f7ff ff1e 	bl	8025da4 <__multiply>
 8025f68:	4639      	mov	r1, r7
 8025f6a:	4680      	mov	r8, r0
 8025f6c:	4630      	mov	r0, r6
 8025f6e:	f7ff fdfd 	bl	8025b6c <_Bfree>
 8025f72:	4647      	mov	r7, r8
 8025f74:	106d      	asrs	r5, r5, #1
 8025f76:	d00b      	beq.n	8025f90 <__pow5mult+0xa0>
 8025f78:	6820      	ldr	r0, [r4, #0]
 8025f7a:	b938      	cbnz	r0, 8025f8c <__pow5mult+0x9c>
 8025f7c:	4622      	mov	r2, r4
 8025f7e:	4621      	mov	r1, r4
 8025f80:	4630      	mov	r0, r6
 8025f82:	f7ff ff0f 	bl	8025da4 <__multiply>
 8025f86:	6020      	str	r0, [r4, #0]
 8025f88:	f8c0 9000 	str.w	r9, [r0]
 8025f8c:	4604      	mov	r4, r0
 8025f8e:	e7e4      	b.n	8025f5a <__pow5mult+0x6a>
 8025f90:	4638      	mov	r0, r7
 8025f92:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8025f96:	bf00      	nop
 8025f98:	08028760 	.word	0x08028760
 8025f9c:	080285f4 	.word	0x080285f4
 8025fa0:	0802860b 	.word	0x0802860b

08025fa4 <__lshift>:
 8025fa4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8025fa8:	460c      	mov	r4, r1
 8025faa:	6849      	ldr	r1, [r1, #4]
 8025fac:	6923      	ldr	r3, [r4, #16]
 8025fae:	eb03 1862 	add.w	r8, r3, r2, asr #5
 8025fb2:	68a3      	ldr	r3, [r4, #8]
 8025fb4:	4607      	mov	r7, r0
 8025fb6:	4691      	mov	r9, r2
 8025fb8:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8025fbc:	f108 0601 	add.w	r6, r8, #1
 8025fc0:	42b3      	cmp	r3, r6
 8025fc2:	db0b      	blt.n	8025fdc <__lshift+0x38>
 8025fc4:	4638      	mov	r0, r7
 8025fc6:	f7ff fd91 	bl	8025aec <_Balloc>
 8025fca:	4605      	mov	r5, r0
 8025fcc:	b948      	cbnz	r0, 8025fe2 <__lshift+0x3e>
 8025fce:	4602      	mov	r2, r0
 8025fd0:	4b28      	ldr	r3, [pc, #160]	; (8026074 <__lshift+0xd0>)
 8025fd2:	4829      	ldr	r0, [pc, #164]	; (8026078 <__lshift+0xd4>)
 8025fd4:	f240 11d9 	movw	r1, #473	; 0x1d9
 8025fd8:	f000 fd68 	bl	8026aac <__assert_func>
 8025fdc:	3101      	adds	r1, #1
 8025fde:	005b      	lsls	r3, r3, #1
 8025fe0:	e7ee      	b.n	8025fc0 <__lshift+0x1c>
 8025fe2:	2300      	movs	r3, #0
 8025fe4:	f100 0114 	add.w	r1, r0, #20
 8025fe8:	f100 0210 	add.w	r2, r0, #16
 8025fec:	4618      	mov	r0, r3
 8025fee:	4553      	cmp	r3, sl
 8025ff0:	db33      	blt.n	802605a <__lshift+0xb6>
 8025ff2:	6920      	ldr	r0, [r4, #16]
 8025ff4:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8025ff8:	f104 0314 	add.w	r3, r4, #20
 8025ffc:	f019 091f 	ands.w	r9, r9, #31
 8026000:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8026004:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8026008:	d02b      	beq.n	8026062 <__lshift+0xbe>
 802600a:	f1c9 0e20 	rsb	lr, r9, #32
 802600e:	468a      	mov	sl, r1
 8026010:	2200      	movs	r2, #0
 8026012:	6818      	ldr	r0, [r3, #0]
 8026014:	fa00 f009 	lsl.w	r0, r0, r9
 8026018:	4302      	orrs	r2, r0
 802601a:	f84a 2b04 	str.w	r2, [sl], #4
 802601e:	f853 2b04 	ldr.w	r2, [r3], #4
 8026022:	459c      	cmp	ip, r3
 8026024:	fa22 f20e 	lsr.w	r2, r2, lr
 8026028:	d8f3      	bhi.n	8026012 <__lshift+0x6e>
 802602a:	ebac 0304 	sub.w	r3, ip, r4
 802602e:	3b15      	subs	r3, #21
 8026030:	f023 0303 	bic.w	r3, r3, #3
 8026034:	3304      	adds	r3, #4
 8026036:	f104 0015 	add.w	r0, r4, #21
 802603a:	4584      	cmp	ip, r0
 802603c:	bf38      	it	cc
 802603e:	2304      	movcc	r3, #4
 8026040:	50ca      	str	r2, [r1, r3]
 8026042:	b10a      	cbz	r2, 8026048 <__lshift+0xa4>
 8026044:	f108 0602 	add.w	r6, r8, #2
 8026048:	3e01      	subs	r6, #1
 802604a:	4638      	mov	r0, r7
 802604c:	612e      	str	r6, [r5, #16]
 802604e:	4621      	mov	r1, r4
 8026050:	f7ff fd8c 	bl	8025b6c <_Bfree>
 8026054:	4628      	mov	r0, r5
 8026056:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802605a:	f842 0f04 	str.w	r0, [r2, #4]!
 802605e:	3301      	adds	r3, #1
 8026060:	e7c5      	b.n	8025fee <__lshift+0x4a>
 8026062:	3904      	subs	r1, #4
 8026064:	f853 2b04 	ldr.w	r2, [r3], #4
 8026068:	f841 2f04 	str.w	r2, [r1, #4]!
 802606c:	459c      	cmp	ip, r3
 802606e:	d8f9      	bhi.n	8026064 <__lshift+0xc0>
 8026070:	e7ea      	b.n	8026048 <__lshift+0xa4>
 8026072:	bf00      	nop
 8026074:	08028566 	.word	0x08028566
 8026078:	0802860b 	.word	0x0802860b

0802607c <__mcmp>:
 802607c:	b530      	push	{r4, r5, lr}
 802607e:	6902      	ldr	r2, [r0, #16]
 8026080:	690c      	ldr	r4, [r1, #16]
 8026082:	1b12      	subs	r2, r2, r4
 8026084:	d10e      	bne.n	80260a4 <__mcmp+0x28>
 8026086:	f100 0314 	add.w	r3, r0, #20
 802608a:	3114      	adds	r1, #20
 802608c:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 8026090:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 8026094:	f850 5d04 	ldr.w	r5, [r0, #-4]!
 8026098:	f851 4d04 	ldr.w	r4, [r1, #-4]!
 802609c:	42a5      	cmp	r5, r4
 802609e:	d003      	beq.n	80260a8 <__mcmp+0x2c>
 80260a0:	d305      	bcc.n	80260ae <__mcmp+0x32>
 80260a2:	2201      	movs	r2, #1
 80260a4:	4610      	mov	r0, r2
 80260a6:	bd30      	pop	{r4, r5, pc}
 80260a8:	4283      	cmp	r3, r0
 80260aa:	d3f3      	bcc.n	8026094 <__mcmp+0x18>
 80260ac:	e7fa      	b.n	80260a4 <__mcmp+0x28>
 80260ae:	f04f 32ff 	mov.w	r2, #4294967295
 80260b2:	e7f7      	b.n	80260a4 <__mcmp+0x28>

080260b4 <__mdiff>:
 80260b4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80260b8:	460c      	mov	r4, r1
 80260ba:	4606      	mov	r6, r0
 80260bc:	4611      	mov	r1, r2
 80260be:	4620      	mov	r0, r4
 80260c0:	4617      	mov	r7, r2
 80260c2:	f7ff ffdb 	bl	802607c <__mcmp>
 80260c6:	1e05      	subs	r5, r0, #0
 80260c8:	d110      	bne.n	80260ec <__mdiff+0x38>
 80260ca:	4629      	mov	r1, r5
 80260cc:	4630      	mov	r0, r6
 80260ce:	f7ff fd0d 	bl	8025aec <_Balloc>
 80260d2:	b930      	cbnz	r0, 80260e2 <__mdiff+0x2e>
 80260d4:	4b39      	ldr	r3, [pc, #228]	; (80261bc <__mdiff+0x108>)
 80260d6:	4602      	mov	r2, r0
 80260d8:	f240 2132 	movw	r1, #562	; 0x232
 80260dc:	4838      	ldr	r0, [pc, #224]	; (80261c0 <__mdiff+0x10c>)
 80260de:	f000 fce5 	bl	8026aac <__assert_func>
 80260e2:	2301      	movs	r3, #1
 80260e4:	e9c0 3504 	strd	r3, r5, [r0, #16]
 80260e8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80260ec:	bfa4      	itt	ge
 80260ee:	463b      	movge	r3, r7
 80260f0:	4627      	movge	r7, r4
 80260f2:	4630      	mov	r0, r6
 80260f4:	6879      	ldr	r1, [r7, #4]
 80260f6:	bfa6      	itte	ge
 80260f8:	461c      	movge	r4, r3
 80260fa:	2500      	movge	r5, #0
 80260fc:	2501      	movlt	r5, #1
 80260fe:	f7ff fcf5 	bl	8025aec <_Balloc>
 8026102:	b920      	cbnz	r0, 802610e <__mdiff+0x5a>
 8026104:	4b2d      	ldr	r3, [pc, #180]	; (80261bc <__mdiff+0x108>)
 8026106:	4602      	mov	r2, r0
 8026108:	f44f 7110 	mov.w	r1, #576	; 0x240
 802610c:	e7e6      	b.n	80260dc <__mdiff+0x28>
 802610e:	693e      	ldr	r6, [r7, #16]
 8026110:	60c5      	str	r5, [r0, #12]
 8026112:	6925      	ldr	r5, [r4, #16]
 8026114:	f107 0114 	add.w	r1, r7, #20
 8026118:	f104 0914 	add.w	r9, r4, #20
 802611c:	f100 0e14 	add.w	lr, r0, #20
 8026120:	f107 0210 	add.w	r2, r7, #16
 8026124:	eb01 0c86 	add.w	ip, r1, r6, lsl #2
 8026128:	eb09 0585 	add.w	r5, r9, r5, lsl #2
 802612c:	46f2      	mov	sl, lr
 802612e:	2700      	movs	r7, #0
 8026130:	f859 3b04 	ldr.w	r3, [r9], #4
 8026134:	f852 bf04 	ldr.w	fp, [r2, #4]!
 8026138:	fa1f f883 	uxth.w	r8, r3
 802613c:	fa17 f78b 	uxtah	r7, r7, fp
 8026140:	0c1b      	lsrs	r3, r3, #16
 8026142:	eba7 0808 	sub.w	r8, r7, r8
 8026146:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 802614a:	eb03 4328 	add.w	r3, r3, r8, asr #16
 802614e:	fa1f f888 	uxth.w	r8, r8
 8026152:	141f      	asrs	r7, r3, #16
 8026154:	454d      	cmp	r5, r9
 8026156:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 802615a:	f84a 3b04 	str.w	r3, [sl], #4
 802615e:	d8e7      	bhi.n	8026130 <__mdiff+0x7c>
 8026160:	1b2b      	subs	r3, r5, r4
 8026162:	3b15      	subs	r3, #21
 8026164:	f023 0303 	bic.w	r3, r3, #3
 8026168:	3304      	adds	r3, #4
 802616a:	3415      	adds	r4, #21
 802616c:	42a5      	cmp	r5, r4
 802616e:	bf38      	it	cc
 8026170:	2304      	movcc	r3, #4
 8026172:	4419      	add	r1, r3
 8026174:	4473      	add	r3, lr
 8026176:	469e      	mov	lr, r3
 8026178:	460d      	mov	r5, r1
 802617a:	4565      	cmp	r5, ip
 802617c:	d30e      	bcc.n	802619c <__mdiff+0xe8>
 802617e:	f10c 0203 	add.w	r2, ip, #3
 8026182:	1a52      	subs	r2, r2, r1
 8026184:	f022 0203 	bic.w	r2, r2, #3
 8026188:	3903      	subs	r1, #3
 802618a:	458c      	cmp	ip, r1
 802618c:	bf38      	it	cc
 802618e:	2200      	movcc	r2, #0
 8026190:	441a      	add	r2, r3
 8026192:	f852 3d04 	ldr.w	r3, [r2, #-4]!
 8026196:	b17b      	cbz	r3, 80261b8 <__mdiff+0x104>
 8026198:	6106      	str	r6, [r0, #16]
 802619a:	e7a5      	b.n	80260e8 <__mdiff+0x34>
 802619c:	f855 8b04 	ldr.w	r8, [r5], #4
 80261a0:	fa17 f488 	uxtah	r4, r7, r8
 80261a4:	1422      	asrs	r2, r4, #16
 80261a6:	eb02 4218 	add.w	r2, r2, r8, lsr #16
 80261aa:	b2a4      	uxth	r4, r4
 80261ac:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 80261b0:	f84e 4b04 	str.w	r4, [lr], #4
 80261b4:	1417      	asrs	r7, r2, #16
 80261b6:	e7e0      	b.n	802617a <__mdiff+0xc6>
 80261b8:	3e01      	subs	r6, #1
 80261ba:	e7ea      	b.n	8026192 <__mdiff+0xde>
 80261bc:	08028566 	.word	0x08028566
 80261c0:	0802860b 	.word	0x0802860b

080261c4 <__ulp>:
 80261c4:	b082      	sub	sp, #8
 80261c6:	ed8d 0b00 	vstr	d0, [sp]
 80261ca:	9b01      	ldr	r3, [sp, #4]
 80261cc:	4912      	ldr	r1, [pc, #72]	; (8026218 <__ulp+0x54>)
 80261ce:	4019      	ands	r1, r3
 80261d0:	f1a1 7150 	sub.w	r1, r1, #54525952	; 0x3400000
 80261d4:	2900      	cmp	r1, #0
 80261d6:	dd05      	ble.n	80261e4 <__ulp+0x20>
 80261d8:	2200      	movs	r2, #0
 80261da:	460b      	mov	r3, r1
 80261dc:	ec43 2b10 	vmov	d0, r2, r3
 80261e0:	b002      	add	sp, #8
 80261e2:	4770      	bx	lr
 80261e4:	4249      	negs	r1, r1
 80261e6:	f1b1 7fa0 	cmp.w	r1, #20971520	; 0x1400000
 80261ea:	ea4f 5021 	mov.w	r0, r1, asr #20
 80261ee:	f04f 0200 	mov.w	r2, #0
 80261f2:	f04f 0300 	mov.w	r3, #0
 80261f6:	da04      	bge.n	8026202 <__ulp+0x3e>
 80261f8:	f44f 2100 	mov.w	r1, #524288	; 0x80000
 80261fc:	fa41 f300 	asr.w	r3, r1, r0
 8026200:	e7ec      	b.n	80261dc <__ulp+0x18>
 8026202:	f1a0 0114 	sub.w	r1, r0, #20
 8026206:	291e      	cmp	r1, #30
 8026208:	bfda      	itte	le
 802620a:	f04f 4000 	movle.w	r0, #2147483648	; 0x80000000
 802620e:	fa20 f101 	lsrle.w	r1, r0, r1
 8026212:	2101      	movgt	r1, #1
 8026214:	460a      	mov	r2, r1
 8026216:	e7e1      	b.n	80261dc <__ulp+0x18>
 8026218:	7ff00000 	.word	0x7ff00000

0802621c <__b2d>:
 802621c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802621e:	6905      	ldr	r5, [r0, #16]
 8026220:	f100 0714 	add.w	r7, r0, #20
 8026224:	eb07 0585 	add.w	r5, r7, r5, lsl #2
 8026228:	1f2e      	subs	r6, r5, #4
 802622a:	f855 4c04 	ldr.w	r4, [r5, #-4]
 802622e:	4620      	mov	r0, r4
 8026230:	f7ff fd52 	bl	8025cd8 <__hi0bits>
 8026234:	f1c0 0320 	rsb	r3, r0, #32
 8026238:	280a      	cmp	r0, #10
 802623a:	f8df c07c 	ldr.w	ip, [pc, #124]	; 80262b8 <__b2d+0x9c>
 802623e:	600b      	str	r3, [r1, #0]
 8026240:	dc14      	bgt.n	802626c <__b2d+0x50>
 8026242:	f1c0 0e0b 	rsb	lr, r0, #11
 8026246:	fa24 f10e 	lsr.w	r1, r4, lr
 802624a:	42b7      	cmp	r7, r6
 802624c:	ea41 030c 	orr.w	r3, r1, ip
 8026250:	bf34      	ite	cc
 8026252:	f855 1c08 	ldrcc.w	r1, [r5, #-8]
 8026256:	2100      	movcs	r1, #0
 8026258:	3015      	adds	r0, #21
 802625a:	fa04 f000 	lsl.w	r0, r4, r0
 802625e:	fa21 f10e 	lsr.w	r1, r1, lr
 8026262:	ea40 0201 	orr.w	r2, r0, r1
 8026266:	ec43 2b10 	vmov	d0, r2, r3
 802626a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802626c:	42b7      	cmp	r7, r6
 802626e:	bf3a      	itte	cc
 8026270:	f855 1c08 	ldrcc.w	r1, [r5, #-8]
 8026274:	f1a5 0608 	subcc.w	r6, r5, #8
 8026278:	2100      	movcs	r1, #0
 802627a:	380b      	subs	r0, #11
 802627c:	d017      	beq.n	80262ae <__b2d+0x92>
 802627e:	f1c0 0c20 	rsb	ip, r0, #32
 8026282:	fa04 f500 	lsl.w	r5, r4, r0
 8026286:	42be      	cmp	r6, r7
 8026288:	fa21 f40c 	lsr.w	r4, r1, ip
 802628c:	ea45 0504 	orr.w	r5, r5, r4
 8026290:	bf8c      	ite	hi
 8026292:	f856 4c04 	ldrhi.w	r4, [r6, #-4]
 8026296:	2400      	movls	r4, #0
 8026298:	f045 537f 	orr.w	r3, r5, #1069547520	; 0x3fc00000
 802629c:	fa01 f000 	lsl.w	r0, r1, r0
 80262a0:	fa24 f40c 	lsr.w	r4, r4, ip
 80262a4:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
 80262a8:	ea40 0204 	orr.w	r2, r0, r4
 80262ac:	e7db      	b.n	8026266 <__b2d+0x4a>
 80262ae:	ea44 030c 	orr.w	r3, r4, ip
 80262b2:	460a      	mov	r2, r1
 80262b4:	e7d7      	b.n	8026266 <__b2d+0x4a>
 80262b6:	bf00      	nop
 80262b8:	3ff00000 	.word	0x3ff00000

080262bc <__d2b>:
 80262bc:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80262c0:	4689      	mov	r9, r1
 80262c2:	2101      	movs	r1, #1
 80262c4:	ec57 6b10 	vmov	r6, r7, d0
 80262c8:	4690      	mov	r8, r2
 80262ca:	f7ff fc0f 	bl	8025aec <_Balloc>
 80262ce:	4604      	mov	r4, r0
 80262d0:	b930      	cbnz	r0, 80262e0 <__d2b+0x24>
 80262d2:	4602      	mov	r2, r0
 80262d4:	4b25      	ldr	r3, [pc, #148]	; (802636c <__d2b+0xb0>)
 80262d6:	4826      	ldr	r0, [pc, #152]	; (8026370 <__d2b+0xb4>)
 80262d8:	f240 310a 	movw	r1, #778	; 0x30a
 80262dc:	f000 fbe6 	bl	8026aac <__assert_func>
 80262e0:	f3c7 550a 	ubfx	r5, r7, #20, #11
 80262e4:	f3c7 0313 	ubfx	r3, r7, #0, #20
 80262e8:	bb35      	cbnz	r5, 8026338 <__d2b+0x7c>
 80262ea:	2e00      	cmp	r6, #0
 80262ec:	9301      	str	r3, [sp, #4]
 80262ee:	d028      	beq.n	8026342 <__d2b+0x86>
 80262f0:	4668      	mov	r0, sp
 80262f2:	9600      	str	r6, [sp, #0]
 80262f4:	f7ff fd10 	bl	8025d18 <__lo0bits>
 80262f8:	9900      	ldr	r1, [sp, #0]
 80262fa:	b300      	cbz	r0, 802633e <__d2b+0x82>
 80262fc:	9a01      	ldr	r2, [sp, #4]
 80262fe:	f1c0 0320 	rsb	r3, r0, #32
 8026302:	fa02 f303 	lsl.w	r3, r2, r3
 8026306:	430b      	orrs	r3, r1
 8026308:	40c2      	lsrs	r2, r0
 802630a:	6163      	str	r3, [r4, #20]
 802630c:	9201      	str	r2, [sp, #4]
 802630e:	9b01      	ldr	r3, [sp, #4]
 8026310:	61a3      	str	r3, [r4, #24]
 8026312:	2b00      	cmp	r3, #0
 8026314:	bf14      	ite	ne
 8026316:	2202      	movne	r2, #2
 8026318:	2201      	moveq	r2, #1
 802631a:	6122      	str	r2, [r4, #16]
 802631c:	b1d5      	cbz	r5, 8026354 <__d2b+0x98>
 802631e:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 8026322:	4405      	add	r5, r0
 8026324:	f8c9 5000 	str.w	r5, [r9]
 8026328:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 802632c:	f8c8 0000 	str.w	r0, [r8]
 8026330:	4620      	mov	r0, r4
 8026332:	b003      	add	sp, #12
 8026334:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8026338:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 802633c:	e7d5      	b.n	80262ea <__d2b+0x2e>
 802633e:	6161      	str	r1, [r4, #20]
 8026340:	e7e5      	b.n	802630e <__d2b+0x52>
 8026342:	a801      	add	r0, sp, #4
 8026344:	f7ff fce8 	bl	8025d18 <__lo0bits>
 8026348:	9b01      	ldr	r3, [sp, #4]
 802634a:	6163      	str	r3, [r4, #20]
 802634c:	2201      	movs	r2, #1
 802634e:	6122      	str	r2, [r4, #16]
 8026350:	3020      	adds	r0, #32
 8026352:	e7e3      	b.n	802631c <__d2b+0x60>
 8026354:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8026358:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 802635c:	f8c9 0000 	str.w	r0, [r9]
 8026360:	6918      	ldr	r0, [r3, #16]
 8026362:	f7ff fcb9 	bl	8025cd8 <__hi0bits>
 8026366:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 802636a:	e7df      	b.n	802632c <__d2b+0x70>
 802636c:	08028566 	.word	0x08028566
 8026370:	0802860b 	.word	0x0802860b

08026374 <__ratio>:
 8026374:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026378:	4688      	mov	r8, r1
 802637a:	4669      	mov	r1, sp
 802637c:	4681      	mov	r9, r0
 802637e:	f7ff ff4d 	bl	802621c <__b2d>
 8026382:	a901      	add	r1, sp, #4
 8026384:	4640      	mov	r0, r8
 8026386:	ec55 4b10 	vmov	r4, r5, d0
 802638a:	f7ff ff47 	bl	802621c <__b2d>
 802638e:	f8d9 3010 	ldr.w	r3, [r9, #16]
 8026392:	f8d8 2010 	ldr.w	r2, [r8, #16]
 8026396:	eba3 0c02 	sub.w	ip, r3, r2
 802639a:	e9dd 3200 	ldrd	r3, r2, [sp]
 802639e:	1a9b      	subs	r3, r3, r2
 80263a0:	eb03 134c 	add.w	r3, r3, ip, lsl #5
 80263a4:	ec51 0b10 	vmov	r0, r1, d0
 80263a8:	2b00      	cmp	r3, #0
 80263aa:	bfd6      	itet	le
 80263ac:	460a      	movle	r2, r1
 80263ae:	462a      	movgt	r2, r5
 80263b0:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 80263b4:	468b      	mov	fp, r1
 80263b6:	462f      	mov	r7, r5
 80263b8:	bfd4      	ite	le
 80263ba:	eb02 5b03 	addle.w	fp, r2, r3, lsl #20
 80263be:	eb02 5703 	addgt.w	r7, r2, r3, lsl #20
 80263c2:	4620      	mov	r0, r4
 80263c4:	ee10 2a10 	vmov	r2, s0
 80263c8:	465b      	mov	r3, fp
 80263ca:	4639      	mov	r1, r7
 80263cc:	f7da fa5e 	bl	800088c <__aeabi_ddiv>
 80263d0:	ec41 0b10 	vmov	d0, r0, r1
 80263d4:	b003      	add	sp, #12
 80263d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080263da <__copybits>:
 80263da:	3901      	subs	r1, #1
 80263dc:	b570      	push	{r4, r5, r6, lr}
 80263de:	1149      	asrs	r1, r1, #5
 80263e0:	6914      	ldr	r4, [r2, #16]
 80263e2:	3101      	adds	r1, #1
 80263e4:	f102 0314 	add.w	r3, r2, #20
 80263e8:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 80263ec:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 80263f0:	1f05      	subs	r5, r0, #4
 80263f2:	42a3      	cmp	r3, r4
 80263f4:	d30c      	bcc.n	8026410 <__copybits+0x36>
 80263f6:	1aa3      	subs	r3, r4, r2
 80263f8:	3b11      	subs	r3, #17
 80263fa:	f023 0303 	bic.w	r3, r3, #3
 80263fe:	3211      	adds	r2, #17
 8026400:	42a2      	cmp	r2, r4
 8026402:	bf88      	it	hi
 8026404:	2300      	movhi	r3, #0
 8026406:	4418      	add	r0, r3
 8026408:	2300      	movs	r3, #0
 802640a:	4288      	cmp	r0, r1
 802640c:	d305      	bcc.n	802641a <__copybits+0x40>
 802640e:	bd70      	pop	{r4, r5, r6, pc}
 8026410:	f853 6b04 	ldr.w	r6, [r3], #4
 8026414:	f845 6f04 	str.w	r6, [r5, #4]!
 8026418:	e7eb      	b.n	80263f2 <__copybits+0x18>
 802641a:	f840 3b04 	str.w	r3, [r0], #4
 802641e:	e7f4      	b.n	802640a <__copybits+0x30>

08026420 <__any_on>:
 8026420:	f100 0214 	add.w	r2, r0, #20
 8026424:	6900      	ldr	r0, [r0, #16]
 8026426:	114b      	asrs	r3, r1, #5
 8026428:	4298      	cmp	r0, r3
 802642a:	b510      	push	{r4, lr}
 802642c:	db11      	blt.n	8026452 <__any_on+0x32>
 802642e:	dd0a      	ble.n	8026446 <__any_on+0x26>
 8026430:	f011 011f 	ands.w	r1, r1, #31
 8026434:	d007      	beq.n	8026446 <__any_on+0x26>
 8026436:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 802643a:	fa24 f001 	lsr.w	r0, r4, r1
 802643e:	fa00 f101 	lsl.w	r1, r0, r1
 8026442:	428c      	cmp	r4, r1
 8026444:	d10b      	bne.n	802645e <__any_on+0x3e>
 8026446:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 802644a:	4293      	cmp	r3, r2
 802644c:	d803      	bhi.n	8026456 <__any_on+0x36>
 802644e:	2000      	movs	r0, #0
 8026450:	bd10      	pop	{r4, pc}
 8026452:	4603      	mov	r3, r0
 8026454:	e7f7      	b.n	8026446 <__any_on+0x26>
 8026456:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 802645a:	2900      	cmp	r1, #0
 802645c:	d0f5      	beq.n	802644a <__any_on+0x2a>
 802645e:	2001      	movs	r0, #1
 8026460:	e7f6      	b.n	8026450 <__any_on+0x30>

08026462 <_calloc_r>:
 8026462:	b513      	push	{r0, r1, r4, lr}
 8026464:	434a      	muls	r2, r1
 8026466:	4611      	mov	r1, r2
 8026468:	9201      	str	r2, [sp, #4]
 802646a:	f7fd ff13 	bl	8024294 <_malloc_r>
 802646e:	4604      	mov	r4, r0
 8026470:	b118      	cbz	r0, 802647a <_calloc_r+0x18>
 8026472:	9a01      	ldr	r2, [sp, #4]
 8026474:	2100      	movs	r1, #0
 8026476:	f7fd feb5 	bl	80241e4 <memset>
 802647a:	4620      	mov	r0, r4
 802647c:	b002      	add	sp, #8
 802647e:	bd10      	pop	{r4, pc}

08026480 <__ssputs_r>:
 8026480:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8026484:	688e      	ldr	r6, [r1, #8]
 8026486:	429e      	cmp	r6, r3
 8026488:	4682      	mov	sl, r0
 802648a:	460c      	mov	r4, r1
 802648c:	4690      	mov	r8, r2
 802648e:	461f      	mov	r7, r3
 8026490:	d838      	bhi.n	8026504 <__ssputs_r+0x84>
 8026492:	898a      	ldrh	r2, [r1, #12]
 8026494:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8026498:	d032      	beq.n	8026500 <__ssputs_r+0x80>
 802649a:	6825      	ldr	r5, [r4, #0]
 802649c:	6909      	ldr	r1, [r1, #16]
 802649e:	eba5 0901 	sub.w	r9, r5, r1
 80264a2:	6965      	ldr	r5, [r4, #20]
 80264a4:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80264a8:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 80264ac:	3301      	adds	r3, #1
 80264ae:	444b      	add	r3, r9
 80264b0:	106d      	asrs	r5, r5, #1
 80264b2:	429d      	cmp	r5, r3
 80264b4:	bf38      	it	cc
 80264b6:	461d      	movcc	r5, r3
 80264b8:	0553      	lsls	r3, r2, #21
 80264ba:	d531      	bpl.n	8026520 <__ssputs_r+0xa0>
 80264bc:	4629      	mov	r1, r5
 80264be:	f7fd fee9 	bl	8024294 <_malloc_r>
 80264c2:	4606      	mov	r6, r0
 80264c4:	b950      	cbnz	r0, 80264dc <__ssputs_r+0x5c>
 80264c6:	230c      	movs	r3, #12
 80264c8:	f8ca 3000 	str.w	r3, [sl]
 80264cc:	89a3      	ldrh	r3, [r4, #12]
 80264ce:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80264d2:	81a3      	strh	r3, [r4, #12]
 80264d4:	f04f 30ff 	mov.w	r0, #4294967295
 80264d8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80264dc:	6921      	ldr	r1, [r4, #16]
 80264de:	464a      	mov	r2, r9
 80264e0:	f7fd fe58 	bl	8024194 <memcpy>
 80264e4:	89a3      	ldrh	r3, [r4, #12]
 80264e6:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 80264ea:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80264ee:	81a3      	strh	r3, [r4, #12]
 80264f0:	6126      	str	r6, [r4, #16]
 80264f2:	6165      	str	r5, [r4, #20]
 80264f4:	444e      	add	r6, r9
 80264f6:	eba5 0509 	sub.w	r5, r5, r9
 80264fa:	6026      	str	r6, [r4, #0]
 80264fc:	60a5      	str	r5, [r4, #8]
 80264fe:	463e      	mov	r6, r7
 8026500:	42be      	cmp	r6, r7
 8026502:	d900      	bls.n	8026506 <__ssputs_r+0x86>
 8026504:	463e      	mov	r6, r7
 8026506:	4632      	mov	r2, r6
 8026508:	6820      	ldr	r0, [r4, #0]
 802650a:	4641      	mov	r1, r8
 802650c:	f7fd fe50 	bl	80241b0 <memmove>
 8026510:	68a3      	ldr	r3, [r4, #8]
 8026512:	6822      	ldr	r2, [r4, #0]
 8026514:	1b9b      	subs	r3, r3, r6
 8026516:	4432      	add	r2, r6
 8026518:	60a3      	str	r3, [r4, #8]
 802651a:	6022      	str	r2, [r4, #0]
 802651c:	2000      	movs	r0, #0
 802651e:	e7db      	b.n	80264d8 <__ssputs_r+0x58>
 8026520:	462a      	mov	r2, r5
 8026522:	f000 faf3 	bl	8026b0c <_realloc_r>
 8026526:	4606      	mov	r6, r0
 8026528:	2800      	cmp	r0, #0
 802652a:	d1e1      	bne.n	80264f0 <__ssputs_r+0x70>
 802652c:	6921      	ldr	r1, [r4, #16]
 802652e:	4650      	mov	r0, sl
 8026530:	f7fd fe60 	bl	80241f4 <_free_r>
 8026534:	e7c7      	b.n	80264c6 <__ssputs_r+0x46>
	...

08026538 <_svfiprintf_r>:
 8026538:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802653c:	4698      	mov	r8, r3
 802653e:	898b      	ldrh	r3, [r1, #12]
 8026540:	061b      	lsls	r3, r3, #24
 8026542:	b09d      	sub	sp, #116	; 0x74
 8026544:	4607      	mov	r7, r0
 8026546:	460d      	mov	r5, r1
 8026548:	4614      	mov	r4, r2
 802654a:	d50e      	bpl.n	802656a <_svfiprintf_r+0x32>
 802654c:	690b      	ldr	r3, [r1, #16]
 802654e:	b963      	cbnz	r3, 802656a <_svfiprintf_r+0x32>
 8026550:	2140      	movs	r1, #64	; 0x40
 8026552:	f7fd fe9f 	bl	8024294 <_malloc_r>
 8026556:	6028      	str	r0, [r5, #0]
 8026558:	6128      	str	r0, [r5, #16]
 802655a:	b920      	cbnz	r0, 8026566 <_svfiprintf_r+0x2e>
 802655c:	230c      	movs	r3, #12
 802655e:	603b      	str	r3, [r7, #0]
 8026560:	f04f 30ff 	mov.w	r0, #4294967295
 8026564:	e0d1      	b.n	802670a <_svfiprintf_r+0x1d2>
 8026566:	2340      	movs	r3, #64	; 0x40
 8026568:	616b      	str	r3, [r5, #20]
 802656a:	2300      	movs	r3, #0
 802656c:	9309      	str	r3, [sp, #36]	; 0x24
 802656e:	2320      	movs	r3, #32
 8026570:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8026574:	f8cd 800c 	str.w	r8, [sp, #12]
 8026578:	2330      	movs	r3, #48	; 0x30
 802657a:	f8df 81a8 	ldr.w	r8, [pc, #424]	; 8026724 <_svfiprintf_r+0x1ec>
 802657e:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8026582:	f04f 0901 	mov.w	r9, #1
 8026586:	4623      	mov	r3, r4
 8026588:	469a      	mov	sl, r3
 802658a:	f813 2b01 	ldrb.w	r2, [r3], #1
 802658e:	b10a      	cbz	r2, 8026594 <_svfiprintf_r+0x5c>
 8026590:	2a25      	cmp	r2, #37	; 0x25
 8026592:	d1f9      	bne.n	8026588 <_svfiprintf_r+0x50>
 8026594:	ebba 0b04 	subs.w	fp, sl, r4
 8026598:	d00b      	beq.n	80265b2 <_svfiprintf_r+0x7a>
 802659a:	465b      	mov	r3, fp
 802659c:	4622      	mov	r2, r4
 802659e:	4629      	mov	r1, r5
 80265a0:	4638      	mov	r0, r7
 80265a2:	f7ff ff6d 	bl	8026480 <__ssputs_r>
 80265a6:	3001      	adds	r0, #1
 80265a8:	f000 80aa 	beq.w	8026700 <_svfiprintf_r+0x1c8>
 80265ac:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80265ae:	445a      	add	r2, fp
 80265b0:	9209      	str	r2, [sp, #36]	; 0x24
 80265b2:	f89a 3000 	ldrb.w	r3, [sl]
 80265b6:	2b00      	cmp	r3, #0
 80265b8:	f000 80a2 	beq.w	8026700 <_svfiprintf_r+0x1c8>
 80265bc:	2300      	movs	r3, #0
 80265be:	f04f 32ff 	mov.w	r2, #4294967295
 80265c2:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80265c6:	f10a 0a01 	add.w	sl, sl, #1
 80265ca:	9304      	str	r3, [sp, #16]
 80265cc:	9307      	str	r3, [sp, #28]
 80265ce:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80265d2:	931a      	str	r3, [sp, #104]	; 0x68
 80265d4:	4654      	mov	r4, sl
 80265d6:	2205      	movs	r2, #5
 80265d8:	f814 1b01 	ldrb.w	r1, [r4], #1
 80265dc:	4851      	ldr	r0, [pc, #324]	; (8026724 <_svfiprintf_r+0x1ec>)
 80265de:	f7d9 fe17 	bl	8000210 <memchr>
 80265e2:	9a04      	ldr	r2, [sp, #16]
 80265e4:	b9d8      	cbnz	r0, 802661e <_svfiprintf_r+0xe6>
 80265e6:	06d0      	lsls	r0, r2, #27
 80265e8:	bf44      	itt	mi
 80265ea:	2320      	movmi	r3, #32
 80265ec:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80265f0:	0711      	lsls	r1, r2, #28
 80265f2:	bf44      	itt	mi
 80265f4:	232b      	movmi	r3, #43	; 0x2b
 80265f6:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80265fa:	f89a 3000 	ldrb.w	r3, [sl]
 80265fe:	2b2a      	cmp	r3, #42	; 0x2a
 8026600:	d015      	beq.n	802662e <_svfiprintf_r+0xf6>
 8026602:	9a07      	ldr	r2, [sp, #28]
 8026604:	4654      	mov	r4, sl
 8026606:	2000      	movs	r0, #0
 8026608:	f04f 0c0a 	mov.w	ip, #10
 802660c:	4621      	mov	r1, r4
 802660e:	f811 3b01 	ldrb.w	r3, [r1], #1
 8026612:	3b30      	subs	r3, #48	; 0x30
 8026614:	2b09      	cmp	r3, #9
 8026616:	d94e      	bls.n	80266b6 <_svfiprintf_r+0x17e>
 8026618:	b1b0      	cbz	r0, 8026648 <_svfiprintf_r+0x110>
 802661a:	9207      	str	r2, [sp, #28]
 802661c:	e014      	b.n	8026648 <_svfiprintf_r+0x110>
 802661e:	eba0 0308 	sub.w	r3, r0, r8
 8026622:	fa09 f303 	lsl.w	r3, r9, r3
 8026626:	4313      	orrs	r3, r2
 8026628:	9304      	str	r3, [sp, #16]
 802662a:	46a2      	mov	sl, r4
 802662c:	e7d2      	b.n	80265d4 <_svfiprintf_r+0x9c>
 802662e:	9b03      	ldr	r3, [sp, #12]
 8026630:	1d19      	adds	r1, r3, #4
 8026632:	681b      	ldr	r3, [r3, #0]
 8026634:	9103      	str	r1, [sp, #12]
 8026636:	2b00      	cmp	r3, #0
 8026638:	bfbb      	ittet	lt
 802663a:	425b      	neglt	r3, r3
 802663c:	f042 0202 	orrlt.w	r2, r2, #2
 8026640:	9307      	strge	r3, [sp, #28]
 8026642:	9307      	strlt	r3, [sp, #28]
 8026644:	bfb8      	it	lt
 8026646:	9204      	strlt	r2, [sp, #16]
 8026648:	7823      	ldrb	r3, [r4, #0]
 802664a:	2b2e      	cmp	r3, #46	; 0x2e
 802664c:	d10c      	bne.n	8026668 <_svfiprintf_r+0x130>
 802664e:	7863      	ldrb	r3, [r4, #1]
 8026650:	2b2a      	cmp	r3, #42	; 0x2a
 8026652:	d135      	bne.n	80266c0 <_svfiprintf_r+0x188>
 8026654:	9b03      	ldr	r3, [sp, #12]
 8026656:	1d1a      	adds	r2, r3, #4
 8026658:	681b      	ldr	r3, [r3, #0]
 802665a:	9203      	str	r2, [sp, #12]
 802665c:	2b00      	cmp	r3, #0
 802665e:	bfb8      	it	lt
 8026660:	f04f 33ff 	movlt.w	r3, #4294967295
 8026664:	3402      	adds	r4, #2
 8026666:	9305      	str	r3, [sp, #20]
 8026668:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 8026734 <_svfiprintf_r+0x1fc>
 802666c:	7821      	ldrb	r1, [r4, #0]
 802666e:	2203      	movs	r2, #3
 8026670:	4650      	mov	r0, sl
 8026672:	f7d9 fdcd 	bl	8000210 <memchr>
 8026676:	b140      	cbz	r0, 802668a <_svfiprintf_r+0x152>
 8026678:	2340      	movs	r3, #64	; 0x40
 802667a:	eba0 000a 	sub.w	r0, r0, sl
 802667e:	fa03 f000 	lsl.w	r0, r3, r0
 8026682:	9b04      	ldr	r3, [sp, #16]
 8026684:	4303      	orrs	r3, r0
 8026686:	3401      	adds	r4, #1
 8026688:	9304      	str	r3, [sp, #16]
 802668a:	f814 1b01 	ldrb.w	r1, [r4], #1
 802668e:	4826      	ldr	r0, [pc, #152]	; (8026728 <_svfiprintf_r+0x1f0>)
 8026690:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8026694:	2206      	movs	r2, #6
 8026696:	f7d9 fdbb 	bl	8000210 <memchr>
 802669a:	2800      	cmp	r0, #0
 802669c:	d038      	beq.n	8026710 <_svfiprintf_r+0x1d8>
 802669e:	4b23      	ldr	r3, [pc, #140]	; (802672c <_svfiprintf_r+0x1f4>)
 80266a0:	bb1b      	cbnz	r3, 80266ea <_svfiprintf_r+0x1b2>
 80266a2:	9b03      	ldr	r3, [sp, #12]
 80266a4:	3307      	adds	r3, #7
 80266a6:	f023 0307 	bic.w	r3, r3, #7
 80266aa:	3308      	adds	r3, #8
 80266ac:	9303      	str	r3, [sp, #12]
 80266ae:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80266b0:	4433      	add	r3, r6
 80266b2:	9309      	str	r3, [sp, #36]	; 0x24
 80266b4:	e767      	b.n	8026586 <_svfiprintf_r+0x4e>
 80266b6:	fb0c 3202 	mla	r2, ip, r2, r3
 80266ba:	460c      	mov	r4, r1
 80266bc:	2001      	movs	r0, #1
 80266be:	e7a5      	b.n	802660c <_svfiprintf_r+0xd4>
 80266c0:	2300      	movs	r3, #0
 80266c2:	3401      	adds	r4, #1
 80266c4:	9305      	str	r3, [sp, #20]
 80266c6:	4619      	mov	r1, r3
 80266c8:	f04f 0c0a 	mov.w	ip, #10
 80266cc:	4620      	mov	r0, r4
 80266ce:	f810 2b01 	ldrb.w	r2, [r0], #1
 80266d2:	3a30      	subs	r2, #48	; 0x30
 80266d4:	2a09      	cmp	r2, #9
 80266d6:	d903      	bls.n	80266e0 <_svfiprintf_r+0x1a8>
 80266d8:	2b00      	cmp	r3, #0
 80266da:	d0c5      	beq.n	8026668 <_svfiprintf_r+0x130>
 80266dc:	9105      	str	r1, [sp, #20]
 80266de:	e7c3      	b.n	8026668 <_svfiprintf_r+0x130>
 80266e0:	fb0c 2101 	mla	r1, ip, r1, r2
 80266e4:	4604      	mov	r4, r0
 80266e6:	2301      	movs	r3, #1
 80266e8:	e7f0      	b.n	80266cc <_svfiprintf_r+0x194>
 80266ea:	ab03      	add	r3, sp, #12
 80266ec:	9300      	str	r3, [sp, #0]
 80266ee:	462a      	mov	r2, r5
 80266f0:	4b0f      	ldr	r3, [pc, #60]	; (8026730 <_svfiprintf_r+0x1f8>)
 80266f2:	a904      	add	r1, sp, #16
 80266f4:	4638      	mov	r0, r7
 80266f6:	f3af 8000 	nop.w
 80266fa:	1c42      	adds	r2, r0, #1
 80266fc:	4606      	mov	r6, r0
 80266fe:	d1d6      	bne.n	80266ae <_svfiprintf_r+0x176>
 8026700:	89ab      	ldrh	r3, [r5, #12]
 8026702:	065b      	lsls	r3, r3, #25
 8026704:	f53f af2c 	bmi.w	8026560 <_svfiprintf_r+0x28>
 8026708:	9809      	ldr	r0, [sp, #36]	; 0x24
 802670a:	b01d      	add	sp, #116	; 0x74
 802670c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026710:	ab03      	add	r3, sp, #12
 8026712:	9300      	str	r3, [sp, #0]
 8026714:	462a      	mov	r2, r5
 8026716:	4b06      	ldr	r3, [pc, #24]	; (8026730 <_svfiprintf_r+0x1f8>)
 8026718:	a904      	add	r1, sp, #16
 802671a:	4638      	mov	r0, r7
 802671c:	f000 f87a 	bl	8026814 <_printf_i>
 8026720:	e7eb      	b.n	80266fa <_svfiprintf_r+0x1c2>
 8026722:	bf00      	nop
 8026724:	0802876c 	.word	0x0802876c
 8026728:	08028776 	.word	0x08028776
 802672c:	00000000 	.word	0x00000000
 8026730:	08026481 	.word	0x08026481
 8026734:	08028772 	.word	0x08028772

08026738 <_printf_common>:
 8026738:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802673c:	4616      	mov	r6, r2
 802673e:	4699      	mov	r9, r3
 8026740:	688a      	ldr	r2, [r1, #8]
 8026742:	690b      	ldr	r3, [r1, #16]
 8026744:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8026748:	4293      	cmp	r3, r2
 802674a:	bfb8      	it	lt
 802674c:	4613      	movlt	r3, r2
 802674e:	6033      	str	r3, [r6, #0]
 8026750:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8026754:	4607      	mov	r7, r0
 8026756:	460c      	mov	r4, r1
 8026758:	b10a      	cbz	r2, 802675e <_printf_common+0x26>
 802675a:	3301      	adds	r3, #1
 802675c:	6033      	str	r3, [r6, #0]
 802675e:	6823      	ldr	r3, [r4, #0]
 8026760:	0699      	lsls	r1, r3, #26
 8026762:	bf42      	ittt	mi
 8026764:	6833      	ldrmi	r3, [r6, #0]
 8026766:	3302      	addmi	r3, #2
 8026768:	6033      	strmi	r3, [r6, #0]
 802676a:	6825      	ldr	r5, [r4, #0]
 802676c:	f015 0506 	ands.w	r5, r5, #6
 8026770:	d106      	bne.n	8026780 <_printf_common+0x48>
 8026772:	f104 0a19 	add.w	sl, r4, #25
 8026776:	68e3      	ldr	r3, [r4, #12]
 8026778:	6832      	ldr	r2, [r6, #0]
 802677a:	1a9b      	subs	r3, r3, r2
 802677c:	42ab      	cmp	r3, r5
 802677e:	dc26      	bgt.n	80267ce <_printf_common+0x96>
 8026780:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8026784:	1e13      	subs	r3, r2, #0
 8026786:	6822      	ldr	r2, [r4, #0]
 8026788:	bf18      	it	ne
 802678a:	2301      	movne	r3, #1
 802678c:	0692      	lsls	r2, r2, #26
 802678e:	d42b      	bmi.n	80267e8 <_printf_common+0xb0>
 8026790:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8026794:	4649      	mov	r1, r9
 8026796:	4638      	mov	r0, r7
 8026798:	47c0      	blx	r8
 802679a:	3001      	adds	r0, #1
 802679c:	d01e      	beq.n	80267dc <_printf_common+0xa4>
 802679e:	6823      	ldr	r3, [r4, #0]
 80267a0:	68e5      	ldr	r5, [r4, #12]
 80267a2:	6832      	ldr	r2, [r6, #0]
 80267a4:	f003 0306 	and.w	r3, r3, #6
 80267a8:	2b04      	cmp	r3, #4
 80267aa:	bf08      	it	eq
 80267ac:	1aad      	subeq	r5, r5, r2
 80267ae:	68a3      	ldr	r3, [r4, #8]
 80267b0:	6922      	ldr	r2, [r4, #16]
 80267b2:	bf0c      	ite	eq
 80267b4:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80267b8:	2500      	movne	r5, #0
 80267ba:	4293      	cmp	r3, r2
 80267bc:	bfc4      	itt	gt
 80267be:	1a9b      	subgt	r3, r3, r2
 80267c0:	18ed      	addgt	r5, r5, r3
 80267c2:	2600      	movs	r6, #0
 80267c4:	341a      	adds	r4, #26
 80267c6:	42b5      	cmp	r5, r6
 80267c8:	d11a      	bne.n	8026800 <_printf_common+0xc8>
 80267ca:	2000      	movs	r0, #0
 80267cc:	e008      	b.n	80267e0 <_printf_common+0xa8>
 80267ce:	2301      	movs	r3, #1
 80267d0:	4652      	mov	r2, sl
 80267d2:	4649      	mov	r1, r9
 80267d4:	4638      	mov	r0, r7
 80267d6:	47c0      	blx	r8
 80267d8:	3001      	adds	r0, #1
 80267da:	d103      	bne.n	80267e4 <_printf_common+0xac>
 80267dc:	f04f 30ff 	mov.w	r0, #4294967295
 80267e0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80267e4:	3501      	adds	r5, #1
 80267e6:	e7c6      	b.n	8026776 <_printf_common+0x3e>
 80267e8:	18e1      	adds	r1, r4, r3
 80267ea:	1c5a      	adds	r2, r3, #1
 80267ec:	2030      	movs	r0, #48	; 0x30
 80267ee:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80267f2:	4422      	add	r2, r4
 80267f4:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80267f8:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80267fc:	3302      	adds	r3, #2
 80267fe:	e7c7      	b.n	8026790 <_printf_common+0x58>
 8026800:	2301      	movs	r3, #1
 8026802:	4622      	mov	r2, r4
 8026804:	4649      	mov	r1, r9
 8026806:	4638      	mov	r0, r7
 8026808:	47c0      	blx	r8
 802680a:	3001      	adds	r0, #1
 802680c:	d0e6      	beq.n	80267dc <_printf_common+0xa4>
 802680e:	3601      	adds	r6, #1
 8026810:	e7d9      	b.n	80267c6 <_printf_common+0x8e>
	...

08026814 <_printf_i>:
 8026814:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8026818:	460c      	mov	r4, r1
 802681a:	4691      	mov	r9, r2
 802681c:	7e27      	ldrb	r7, [r4, #24]
 802681e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8026820:	2f78      	cmp	r7, #120	; 0x78
 8026822:	4680      	mov	r8, r0
 8026824:	469a      	mov	sl, r3
 8026826:	f104 0243 	add.w	r2, r4, #67	; 0x43
 802682a:	d807      	bhi.n	802683c <_printf_i+0x28>
 802682c:	2f62      	cmp	r7, #98	; 0x62
 802682e:	d80a      	bhi.n	8026846 <_printf_i+0x32>
 8026830:	2f00      	cmp	r7, #0
 8026832:	f000 80d8 	beq.w	80269e6 <_printf_i+0x1d2>
 8026836:	2f58      	cmp	r7, #88	; 0x58
 8026838:	f000 80a3 	beq.w	8026982 <_printf_i+0x16e>
 802683c:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8026840:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8026844:	e03a      	b.n	80268bc <_printf_i+0xa8>
 8026846:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 802684a:	2b15      	cmp	r3, #21
 802684c:	d8f6      	bhi.n	802683c <_printf_i+0x28>
 802684e:	a001      	add	r0, pc, #4	; (adr r0, 8026854 <_printf_i+0x40>)
 8026850:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 8026854:	080268ad 	.word	0x080268ad
 8026858:	080268c1 	.word	0x080268c1
 802685c:	0802683d 	.word	0x0802683d
 8026860:	0802683d 	.word	0x0802683d
 8026864:	0802683d 	.word	0x0802683d
 8026868:	0802683d 	.word	0x0802683d
 802686c:	080268c1 	.word	0x080268c1
 8026870:	0802683d 	.word	0x0802683d
 8026874:	0802683d 	.word	0x0802683d
 8026878:	0802683d 	.word	0x0802683d
 802687c:	0802683d 	.word	0x0802683d
 8026880:	080269cd 	.word	0x080269cd
 8026884:	080268f1 	.word	0x080268f1
 8026888:	080269af 	.word	0x080269af
 802688c:	0802683d 	.word	0x0802683d
 8026890:	0802683d 	.word	0x0802683d
 8026894:	080269ef 	.word	0x080269ef
 8026898:	0802683d 	.word	0x0802683d
 802689c:	080268f1 	.word	0x080268f1
 80268a0:	0802683d 	.word	0x0802683d
 80268a4:	0802683d 	.word	0x0802683d
 80268a8:	080269b7 	.word	0x080269b7
 80268ac:	680b      	ldr	r3, [r1, #0]
 80268ae:	1d1a      	adds	r2, r3, #4
 80268b0:	681b      	ldr	r3, [r3, #0]
 80268b2:	600a      	str	r2, [r1, #0]
 80268b4:	f104 0642 	add.w	r6, r4, #66	; 0x42
 80268b8:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80268bc:	2301      	movs	r3, #1
 80268be:	e0a3      	b.n	8026a08 <_printf_i+0x1f4>
 80268c0:	6825      	ldr	r5, [r4, #0]
 80268c2:	6808      	ldr	r0, [r1, #0]
 80268c4:	062e      	lsls	r6, r5, #24
 80268c6:	f100 0304 	add.w	r3, r0, #4
 80268ca:	d50a      	bpl.n	80268e2 <_printf_i+0xce>
 80268cc:	6805      	ldr	r5, [r0, #0]
 80268ce:	600b      	str	r3, [r1, #0]
 80268d0:	2d00      	cmp	r5, #0
 80268d2:	da03      	bge.n	80268dc <_printf_i+0xc8>
 80268d4:	232d      	movs	r3, #45	; 0x2d
 80268d6:	426d      	negs	r5, r5
 80268d8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80268dc:	485e      	ldr	r0, [pc, #376]	; (8026a58 <_printf_i+0x244>)
 80268de:	230a      	movs	r3, #10
 80268e0:	e019      	b.n	8026916 <_printf_i+0x102>
 80268e2:	f015 0f40 	tst.w	r5, #64	; 0x40
 80268e6:	6805      	ldr	r5, [r0, #0]
 80268e8:	600b      	str	r3, [r1, #0]
 80268ea:	bf18      	it	ne
 80268ec:	b22d      	sxthne	r5, r5
 80268ee:	e7ef      	b.n	80268d0 <_printf_i+0xbc>
 80268f0:	680b      	ldr	r3, [r1, #0]
 80268f2:	6825      	ldr	r5, [r4, #0]
 80268f4:	1d18      	adds	r0, r3, #4
 80268f6:	6008      	str	r0, [r1, #0]
 80268f8:	0628      	lsls	r0, r5, #24
 80268fa:	d501      	bpl.n	8026900 <_printf_i+0xec>
 80268fc:	681d      	ldr	r5, [r3, #0]
 80268fe:	e002      	b.n	8026906 <_printf_i+0xf2>
 8026900:	0669      	lsls	r1, r5, #25
 8026902:	d5fb      	bpl.n	80268fc <_printf_i+0xe8>
 8026904:	881d      	ldrh	r5, [r3, #0]
 8026906:	4854      	ldr	r0, [pc, #336]	; (8026a58 <_printf_i+0x244>)
 8026908:	2f6f      	cmp	r7, #111	; 0x6f
 802690a:	bf0c      	ite	eq
 802690c:	2308      	moveq	r3, #8
 802690e:	230a      	movne	r3, #10
 8026910:	2100      	movs	r1, #0
 8026912:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8026916:	6866      	ldr	r6, [r4, #4]
 8026918:	60a6      	str	r6, [r4, #8]
 802691a:	2e00      	cmp	r6, #0
 802691c:	bfa2      	ittt	ge
 802691e:	6821      	ldrge	r1, [r4, #0]
 8026920:	f021 0104 	bicge.w	r1, r1, #4
 8026924:	6021      	strge	r1, [r4, #0]
 8026926:	b90d      	cbnz	r5, 802692c <_printf_i+0x118>
 8026928:	2e00      	cmp	r6, #0
 802692a:	d04d      	beq.n	80269c8 <_printf_i+0x1b4>
 802692c:	4616      	mov	r6, r2
 802692e:	fbb5 f1f3 	udiv	r1, r5, r3
 8026932:	fb03 5711 	mls	r7, r3, r1, r5
 8026936:	5dc7      	ldrb	r7, [r0, r7]
 8026938:	f806 7d01 	strb.w	r7, [r6, #-1]!
 802693c:	462f      	mov	r7, r5
 802693e:	42bb      	cmp	r3, r7
 8026940:	460d      	mov	r5, r1
 8026942:	d9f4      	bls.n	802692e <_printf_i+0x11a>
 8026944:	2b08      	cmp	r3, #8
 8026946:	d10b      	bne.n	8026960 <_printf_i+0x14c>
 8026948:	6823      	ldr	r3, [r4, #0]
 802694a:	07df      	lsls	r7, r3, #31
 802694c:	d508      	bpl.n	8026960 <_printf_i+0x14c>
 802694e:	6923      	ldr	r3, [r4, #16]
 8026950:	6861      	ldr	r1, [r4, #4]
 8026952:	4299      	cmp	r1, r3
 8026954:	bfde      	ittt	le
 8026956:	2330      	movle	r3, #48	; 0x30
 8026958:	f806 3c01 	strble.w	r3, [r6, #-1]
 802695c:	f106 36ff 	addle.w	r6, r6, #4294967295
 8026960:	1b92      	subs	r2, r2, r6
 8026962:	6122      	str	r2, [r4, #16]
 8026964:	f8cd a000 	str.w	sl, [sp]
 8026968:	464b      	mov	r3, r9
 802696a:	aa03      	add	r2, sp, #12
 802696c:	4621      	mov	r1, r4
 802696e:	4640      	mov	r0, r8
 8026970:	f7ff fee2 	bl	8026738 <_printf_common>
 8026974:	3001      	adds	r0, #1
 8026976:	d14c      	bne.n	8026a12 <_printf_i+0x1fe>
 8026978:	f04f 30ff 	mov.w	r0, #4294967295
 802697c:	b004      	add	sp, #16
 802697e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8026982:	4835      	ldr	r0, [pc, #212]	; (8026a58 <_printf_i+0x244>)
 8026984:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8026988:	6823      	ldr	r3, [r4, #0]
 802698a:	680e      	ldr	r6, [r1, #0]
 802698c:	061f      	lsls	r7, r3, #24
 802698e:	f856 5b04 	ldr.w	r5, [r6], #4
 8026992:	600e      	str	r6, [r1, #0]
 8026994:	d514      	bpl.n	80269c0 <_printf_i+0x1ac>
 8026996:	07d9      	lsls	r1, r3, #31
 8026998:	bf44      	itt	mi
 802699a:	f043 0320 	orrmi.w	r3, r3, #32
 802699e:	6023      	strmi	r3, [r4, #0]
 80269a0:	b91d      	cbnz	r5, 80269aa <_printf_i+0x196>
 80269a2:	6823      	ldr	r3, [r4, #0]
 80269a4:	f023 0320 	bic.w	r3, r3, #32
 80269a8:	6023      	str	r3, [r4, #0]
 80269aa:	2310      	movs	r3, #16
 80269ac:	e7b0      	b.n	8026910 <_printf_i+0xfc>
 80269ae:	6823      	ldr	r3, [r4, #0]
 80269b0:	f043 0320 	orr.w	r3, r3, #32
 80269b4:	6023      	str	r3, [r4, #0]
 80269b6:	2378      	movs	r3, #120	; 0x78
 80269b8:	4828      	ldr	r0, [pc, #160]	; (8026a5c <_printf_i+0x248>)
 80269ba:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 80269be:	e7e3      	b.n	8026988 <_printf_i+0x174>
 80269c0:	065e      	lsls	r6, r3, #25
 80269c2:	bf48      	it	mi
 80269c4:	b2ad      	uxthmi	r5, r5
 80269c6:	e7e6      	b.n	8026996 <_printf_i+0x182>
 80269c8:	4616      	mov	r6, r2
 80269ca:	e7bb      	b.n	8026944 <_printf_i+0x130>
 80269cc:	680b      	ldr	r3, [r1, #0]
 80269ce:	6826      	ldr	r6, [r4, #0]
 80269d0:	6960      	ldr	r0, [r4, #20]
 80269d2:	1d1d      	adds	r5, r3, #4
 80269d4:	600d      	str	r5, [r1, #0]
 80269d6:	0635      	lsls	r5, r6, #24
 80269d8:	681b      	ldr	r3, [r3, #0]
 80269da:	d501      	bpl.n	80269e0 <_printf_i+0x1cc>
 80269dc:	6018      	str	r0, [r3, #0]
 80269de:	e002      	b.n	80269e6 <_printf_i+0x1d2>
 80269e0:	0671      	lsls	r1, r6, #25
 80269e2:	d5fb      	bpl.n	80269dc <_printf_i+0x1c8>
 80269e4:	8018      	strh	r0, [r3, #0]
 80269e6:	2300      	movs	r3, #0
 80269e8:	6123      	str	r3, [r4, #16]
 80269ea:	4616      	mov	r6, r2
 80269ec:	e7ba      	b.n	8026964 <_printf_i+0x150>
 80269ee:	680b      	ldr	r3, [r1, #0]
 80269f0:	1d1a      	adds	r2, r3, #4
 80269f2:	600a      	str	r2, [r1, #0]
 80269f4:	681e      	ldr	r6, [r3, #0]
 80269f6:	6862      	ldr	r2, [r4, #4]
 80269f8:	2100      	movs	r1, #0
 80269fa:	4630      	mov	r0, r6
 80269fc:	f7d9 fc08 	bl	8000210 <memchr>
 8026a00:	b108      	cbz	r0, 8026a06 <_printf_i+0x1f2>
 8026a02:	1b80      	subs	r0, r0, r6
 8026a04:	6060      	str	r0, [r4, #4]
 8026a06:	6863      	ldr	r3, [r4, #4]
 8026a08:	6123      	str	r3, [r4, #16]
 8026a0a:	2300      	movs	r3, #0
 8026a0c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8026a10:	e7a8      	b.n	8026964 <_printf_i+0x150>
 8026a12:	6923      	ldr	r3, [r4, #16]
 8026a14:	4632      	mov	r2, r6
 8026a16:	4649      	mov	r1, r9
 8026a18:	4640      	mov	r0, r8
 8026a1a:	47d0      	blx	sl
 8026a1c:	3001      	adds	r0, #1
 8026a1e:	d0ab      	beq.n	8026978 <_printf_i+0x164>
 8026a20:	6823      	ldr	r3, [r4, #0]
 8026a22:	079b      	lsls	r3, r3, #30
 8026a24:	d413      	bmi.n	8026a4e <_printf_i+0x23a>
 8026a26:	68e0      	ldr	r0, [r4, #12]
 8026a28:	9b03      	ldr	r3, [sp, #12]
 8026a2a:	4298      	cmp	r0, r3
 8026a2c:	bfb8      	it	lt
 8026a2e:	4618      	movlt	r0, r3
 8026a30:	e7a4      	b.n	802697c <_printf_i+0x168>
 8026a32:	2301      	movs	r3, #1
 8026a34:	4632      	mov	r2, r6
 8026a36:	4649      	mov	r1, r9
 8026a38:	4640      	mov	r0, r8
 8026a3a:	47d0      	blx	sl
 8026a3c:	3001      	adds	r0, #1
 8026a3e:	d09b      	beq.n	8026978 <_printf_i+0x164>
 8026a40:	3501      	adds	r5, #1
 8026a42:	68e3      	ldr	r3, [r4, #12]
 8026a44:	9903      	ldr	r1, [sp, #12]
 8026a46:	1a5b      	subs	r3, r3, r1
 8026a48:	42ab      	cmp	r3, r5
 8026a4a:	dcf2      	bgt.n	8026a32 <_printf_i+0x21e>
 8026a4c:	e7eb      	b.n	8026a26 <_printf_i+0x212>
 8026a4e:	2500      	movs	r5, #0
 8026a50:	f104 0619 	add.w	r6, r4, #25
 8026a54:	e7f5      	b.n	8026a42 <_printf_i+0x22e>
 8026a56:	bf00      	nop
 8026a58:	0802877d 	.word	0x0802877d
 8026a5c:	0802878e 	.word	0x0802878e

08026a60 <nanf>:
 8026a60:	ed9f 0a01 	vldr	s0, [pc, #4]	; 8026a68 <nanf+0x8>
 8026a64:	4770      	bx	lr
 8026a66:	bf00      	nop
 8026a68:	7fc00000 	.word	0x7fc00000

08026a6c <strncmp>:
 8026a6c:	b510      	push	{r4, lr}
 8026a6e:	b16a      	cbz	r2, 8026a8c <strncmp+0x20>
 8026a70:	3901      	subs	r1, #1
 8026a72:	1884      	adds	r4, r0, r2
 8026a74:	f810 3b01 	ldrb.w	r3, [r0], #1
 8026a78:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 8026a7c:	4293      	cmp	r3, r2
 8026a7e:	d103      	bne.n	8026a88 <strncmp+0x1c>
 8026a80:	42a0      	cmp	r0, r4
 8026a82:	d001      	beq.n	8026a88 <strncmp+0x1c>
 8026a84:	2b00      	cmp	r3, #0
 8026a86:	d1f5      	bne.n	8026a74 <strncmp+0x8>
 8026a88:	1a98      	subs	r0, r3, r2
 8026a8a:	bd10      	pop	{r4, pc}
 8026a8c:	4610      	mov	r0, r2
 8026a8e:	e7fc      	b.n	8026a8a <strncmp+0x1e>

08026a90 <__ascii_wctomb>:
 8026a90:	b149      	cbz	r1, 8026aa6 <__ascii_wctomb+0x16>
 8026a92:	2aff      	cmp	r2, #255	; 0xff
 8026a94:	bf85      	ittet	hi
 8026a96:	238a      	movhi	r3, #138	; 0x8a
 8026a98:	6003      	strhi	r3, [r0, #0]
 8026a9a:	700a      	strbls	r2, [r1, #0]
 8026a9c:	f04f 30ff 	movhi.w	r0, #4294967295
 8026aa0:	bf98      	it	ls
 8026aa2:	2001      	movls	r0, #1
 8026aa4:	4770      	bx	lr
 8026aa6:	4608      	mov	r0, r1
 8026aa8:	4770      	bx	lr
	...

08026aac <__assert_func>:
 8026aac:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8026aae:	4614      	mov	r4, r2
 8026ab0:	461a      	mov	r2, r3
 8026ab2:	4b09      	ldr	r3, [pc, #36]	; (8026ad8 <__assert_func+0x2c>)
 8026ab4:	681b      	ldr	r3, [r3, #0]
 8026ab6:	4605      	mov	r5, r0
 8026ab8:	68d8      	ldr	r0, [r3, #12]
 8026aba:	b14c      	cbz	r4, 8026ad0 <__assert_func+0x24>
 8026abc:	4b07      	ldr	r3, [pc, #28]	; (8026adc <__assert_func+0x30>)
 8026abe:	9100      	str	r1, [sp, #0]
 8026ac0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8026ac4:	4906      	ldr	r1, [pc, #24]	; (8026ae0 <__assert_func+0x34>)
 8026ac6:	462b      	mov	r3, r5
 8026ac8:	f000 f80e 	bl	8026ae8 <fiprintf>
 8026acc:	f7fd fada 	bl	8024084 <abort>
 8026ad0:	4b04      	ldr	r3, [pc, #16]	; (8026ae4 <__assert_func+0x38>)
 8026ad2:	461c      	mov	r4, r3
 8026ad4:	e7f3      	b.n	8026abe <__assert_func+0x12>
 8026ad6:	bf00      	nop
 8026ad8:	20000010 	.word	0x20000010
 8026adc:	0802879f 	.word	0x0802879f
 8026ae0:	080287ac 	.word	0x080287ac
 8026ae4:	080287da 	.word	0x080287da

08026ae8 <fiprintf>:
 8026ae8:	b40e      	push	{r1, r2, r3}
 8026aea:	b503      	push	{r0, r1, lr}
 8026aec:	4601      	mov	r1, r0
 8026aee:	ab03      	add	r3, sp, #12
 8026af0:	4805      	ldr	r0, [pc, #20]	; (8026b08 <fiprintf+0x20>)
 8026af2:	f853 2b04 	ldr.w	r2, [r3], #4
 8026af6:	6800      	ldr	r0, [r0, #0]
 8026af8:	9301      	str	r3, [sp, #4]
 8026afa:	f000 f857 	bl	8026bac <_vfiprintf_r>
 8026afe:	b002      	add	sp, #8
 8026b00:	f85d eb04 	ldr.w	lr, [sp], #4
 8026b04:	b003      	add	sp, #12
 8026b06:	4770      	bx	lr
 8026b08:	20000010 	.word	0x20000010

08026b0c <_realloc_r>:
 8026b0c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8026b0e:	4607      	mov	r7, r0
 8026b10:	4614      	mov	r4, r2
 8026b12:	460e      	mov	r6, r1
 8026b14:	b921      	cbnz	r1, 8026b20 <_realloc_r+0x14>
 8026b16:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8026b1a:	4611      	mov	r1, r2
 8026b1c:	f7fd bbba 	b.w	8024294 <_malloc_r>
 8026b20:	b922      	cbnz	r2, 8026b2c <_realloc_r+0x20>
 8026b22:	f7fd fb67 	bl	80241f4 <_free_r>
 8026b26:	4625      	mov	r5, r4
 8026b28:	4628      	mov	r0, r5
 8026b2a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8026b2c:	f000 fc4a 	bl	80273c4 <_malloc_usable_size_r>
 8026b30:	42a0      	cmp	r0, r4
 8026b32:	d20f      	bcs.n	8026b54 <_realloc_r+0x48>
 8026b34:	4621      	mov	r1, r4
 8026b36:	4638      	mov	r0, r7
 8026b38:	f7fd fbac 	bl	8024294 <_malloc_r>
 8026b3c:	4605      	mov	r5, r0
 8026b3e:	2800      	cmp	r0, #0
 8026b40:	d0f2      	beq.n	8026b28 <_realloc_r+0x1c>
 8026b42:	4631      	mov	r1, r6
 8026b44:	4622      	mov	r2, r4
 8026b46:	f7fd fb25 	bl	8024194 <memcpy>
 8026b4a:	4631      	mov	r1, r6
 8026b4c:	4638      	mov	r0, r7
 8026b4e:	f7fd fb51 	bl	80241f4 <_free_r>
 8026b52:	e7e9      	b.n	8026b28 <_realloc_r+0x1c>
 8026b54:	4635      	mov	r5, r6
 8026b56:	e7e7      	b.n	8026b28 <_realloc_r+0x1c>

08026b58 <__sfputc_r>:
 8026b58:	6893      	ldr	r3, [r2, #8]
 8026b5a:	3b01      	subs	r3, #1
 8026b5c:	2b00      	cmp	r3, #0
 8026b5e:	b410      	push	{r4}
 8026b60:	6093      	str	r3, [r2, #8]
 8026b62:	da08      	bge.n	8026b76 <__sfputc_r+0x1e>
 8026b64:	6994      	ldr	r4, [r2, #24]
 8026b66:	42a3      	cmp	r3, r4
 8026b68:	db01      	blt.n	8026b6e <__sfputc_r+0x16>
 8026b6a:	290a      	cmp	r1, #10
 8026b6c:	d103      	bne.n	8026b76 <__sfputc_r+0x1e>
 8026b6e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8026b72:	f000 b94b 	b.w	8026e0c <__swbuf_r>
 8026b76:	6813      	ldr	r3, [r2, #0]
 8026b78:	1c58      	adds	r0, r3, #1
 8026b7a:	6010      	str	r0, [r2, #0]
 8026b7c:	7019      	strb	r1, [r3, #0]
 8026b7e:	4608      	mov	r0, r1
 8026b80:	f85d 4b04 	ldr.w	r4, [sp], #4
 8026b84:	4770      	bx	lr

08026b86 <__sfputs_r>:
 8026b86:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8026b88:	4606      	mov	r6, r0
 8026b8a:	460f      	mov	r7, r1
 8026b8c:	4614      	mov	r4, r2
 8026b8e:	18d5      	adds	r5, r2, r3
 8026b90:	42ac      	cmp	r4, r5
 8026b92:	d101      	bne.n	8026b98 <__sfputs_r+0x12>
 8026b94:	2000      	movs	r0, #0
 8026b96:	e007      	b.n	8026ba8 <__sfputs_r+0x22>
 8026b98:	f814 1b01 	ldrb.w	r1, [r4], #1
 8026b9c:	463a      	mov	r2, r7
 8026b9e:	4630      	mov	r0, r6
 8026ba0:	f7ff ffda 	bl	8026b58 <__sfputc_r>
 8026ba4:	1c43      	adds	r3, r0, #1
 8026ba6:	d1f3      	bne.n	8026b90 <__sfputs_r+0xa>
 8026ba8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08026bac <_vfiprintf_r>:
 8026bac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026bb0:	460d      	mov	r5, r1
 8026bb2:	b09d      	sub	sp, #116	; 0x74
 8026bb4:	4614      	mov	r4, r2
 8026bb6:	4698      	mov	r8, r3
 8026bb8:	4606      	mov	r6, r0
 8026bba:	b118      	cbz	r0, 8026bc4 <_vfiprintf_r+0x18>
 8026bbc:	6983      	ldr	r3, [r0, #24]
 8026bbe:	b90b      	cbnz	r3, 8026bc4 <_vfiprintf_r+0x18>
 8026bc0:	f000 fafe 	bl	80271c0 <__sinit>
 8026bc4:	4b89      	ldr	r3, [pc, #548]	; (8026dec <_vfiprintf_r+0x240>)
 8026bc6:	429d      	cmp	r5, r3
 8026bc8:	d11b      	bne.n	8026c02 <_vfiprintf_r+0x56>
 8026bca:	6875      	ldr	r5, [r6, #4]
 8026bcc:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8026bce:	07d9      	lsls	r1, r3, #31
 8026bd0:	d405      	bmi.n	8026bde <_vfiprintf_r+0x32>
 8026bd2:	89ab      	ldrh	r3, [r5, #12]
 8026bd4:	059a      	lsls	r2, r3, #22
 8026bd6:	d402      	bmi.n	8026bde <_vfiprintf_r+0x32>
 8026bd8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8026bda:	f7fe ff66 	bl	8025aaa <__retarget_lock_acquire_recursive>
 8026bde:	89ab      	ldrh	r3, [r5, #12]
 8026be0:	071b      	lsls	r3, r3, #28
 8026be2:	d501      	bpl.n	8026be8 <_vfiprintf_r+0x3c>
 8026be4:	692b      	ldr	r3, [r5, #16]
 8026be6:	b9eb      	cbnz	r3, 8026c24 <_vfiprintf_r+0x78>
 8026be8:	4629      	mov	r1, r5
 8026bea:	4630      	mov	r0, r6
 8026bec:	f000 f960 	bl	8026eb0 <__swsetup_r>
 8026bf0:	b1c0      	cbz	r0, 8026c24 <_vfiprintf_r+0x78>
 8026bf2:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8026bf4:	07dc      	lsls	r4, r3, #31
 8026bf6:	d50e      	bpl.n	8026c16 <_vfiprintf_r+0x6a>
 8026bf8:	f04f 30ff 	mov.w	r0, #4294967295
 8026bfc:	b01d      	add	sp, #116	; 0x74
 8026bfe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026c02:	4b7b      	ldr	r3, [pc, #492]	; (8026df0 <_vfiprintf_r+0x244>)
 8026c04:	429d      	cmp	r5, r3
 8026c06:	d101      	bne.n	8026c0c <_vfiprintf_r+0x60>
 8026c08:	68b5      	ldr	r5, [r6, #8]
 8026c0a:	e7df      	b.n	8026bcc <_vfiprintf_r+0x20>
 8026c0c:	4b79      	ldr	r3, [pc, #484]	; (8026df4 <_vfiprintf_r+0x248>)
 8026c0e:	429d      	cmp	r5, r3
 8026c10:	bf08      	it	eq
 8026c12:	68f5      	ldreq	r5, [r6, #12]
 8026c14:	e7da      	b.n	8026bcc <_vfiprintf_r+0x20>
 8026c16:	89ab      	ldrh	r3, [r5, #12]
 8026c18:	0598      	lsls	r0, r3, #22
 8026c1a:	d4ed      	bmi.n	8026bf8 <_vfiprintf_r+0x4c>
 8026c1c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8026c1e:	f7fe ff46 	bl	8025aae <__retarget_lock_release_recursive>
 8026c22:	e7e9      	b.n	8026bf8 <_vfiprintf_r+0x4c>
 8026c24:	2300      	movs	r3, #0
 8026c26:	9309      	str	r3, [sp, #36]	; 0x24
 8026c28:	2320      	movs	r3, #32
 8026c2a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8026c2e:	f8cd 800c 	str.w	r8, [sp, #12]
 8026c32:	2330      	movs	r3, #48	; 0x30
 8026c34:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8026df8 <_vfiprintf_r+0x24c>
 8026c38:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8026c3c:	f04f 0901 	mov.w	r9, #1
 8026c40:	4623      	mov	r3, r4
 8026c42:	469a      	mov	sl, r3
 8026c44:	f813 2b01 	ldrb.w	r2, [r3], #1
 8026c48:	b10a      	cbz	r2, 8026c4e <_vfiprintf_r+0xa2>
 8026c4a:	2a25      	cmp	r2, #37	; 0x25
 8026c4c:	d1f9      	bne.n	8026c42 <_vfiprintf_r+0x96>
 8026c4e:	ebba 0b04 	subs.w	fp, sl, r4
 8026c52:	d00b      	beq.n	8026c6c <_vfiprintf_r+0xc0>
 8026c54:	465b      	mov	r3, fp
 8026c56:	4622      	mov	r2, r4
 8026c58:	4629      	mov	r1, r5
 8026c5a:	4630      	mov	r0, r6
 8026c5c:	f7ff ff93 	bl	8026b86 <__sfputs_r>
 8026c60:	3001      	adds	r0, #1
 8026c62:	f000 80aa 	beq.w	8026dba <_vfiprintf_r+0x20e>
 8026c66:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8026c68:	445a      	add	r2, fp
 8026c6a:	9209      	str	r2, [sp, #36]	; 0x24
 8026c6c:	f89a 3000 	ldrb.w	r3, [sl]
 8026c70:	2b00      	cmp	r3, #0
 8026c72:	f000 80a2 	beq.w	8026dba <_vfiprintf_r+0x20e>
 8026c76:	2300      	movs	r3, #0
 8026c78:	f04f 32ff 	mov.w	r2, #4294967295
 8026c7c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8026c80:	f10a 0a01 	add.w	sl, sl, #1
 8026c84:	9304      	str	r3, [sp, #16]
 8026c86:	9307      	str	r3, [sp, #28]
 8026c88:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8026c8c:	931a      	str	r3, [sp, #104]	; 0x68
 8026c8e:	4654      	mov	r4, sl
 8026c90:	2205      	movs	r2, #5
 8026c92:	f814 1b01 	ldrb.w	r1, [r4], #1
 8026c96:	4858      	ldr	r0, [pc, #352]	; (8026df8 <_vfiprintf_r+0x24c>)
 8026c98:	f7d9 faba 	bl	8000210 <memchr>
 8026c9c:	9a04      	ldr	r2, [sp, #16]
 8026c9e:	b9d8      	cbnz	r0, 8026cd8 <_vfiprintf_r+0x12c>
 8026ca0:	06d1      	lsls	r1, r2, #27
 8026ca2:	bf44      	itt	mi
 8026ca4:	2320      	movmi	r3, #32
 8026ca6:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8026caa:	0713      	lsls	r3, r2, #28
 8026cac:	bf44      	itt	mi
 8026cae:	232b      	movmi	r3, #43	; 0x2b
 8026cb0:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8026cb4:	f89a 3000 	ldrb.w	r3, [sl]
 8026cb8:	2b2a      	cmp	r3, #42	; 0x2a
 8026cba:	d015      	beq.n	8026ce8 <_vfiprintf_r+0x13c>
 8026cbc:	9a07      	ldr	r2, [sp, #28]
 8026cbe:	4654      	mov	r4, sl
 8026cc0:	2000      	movs	r0, #0
 8026cc2:	f04f 0c0a 	mov.w	ip, #10
 8026cc6:	4621      	mov	r1, r4
 8026cc8:	f811 3b01 	ldrb.w	r3, [r1], #1
 8026ccc:	3b30      	subs	r3, #48	; 0x30
 8026cce:	2b09      	cmp	r3, #9
 8026cd0:	d94e      	bls.n	8026d70 <_vfiprintf_r+0x1c4>
 8026cd2:	b1b0      	cbz	r0, 8026d02 <_vfiprintf_r+0x156>
 8026cd4:	9207      	str	r2, [sp, #28]
 8026cd6:	e014      	b.n	8026d02 <_vfiprintf_r+0x156>
 8026cd8:	eba0 0308 	sub.w	r3, r0, r8
 8026cdc:	fa09 f303 	lsl.w	r3, r9, r3
 8026ce0:	4313      	orrs	r3, r2
 8026ce2:	9304      	str	r3, [sp, #16]
 8026ce4:	46a2      	mov	sl, r4
 8026ce6:	e7d2      	b.n	8026c8e <_vfiprintf_r+0xe2>
 8026ce8:	9b03      	ldr	r3, [sp, #12]
 8026cea:	1d19      	adds	r1, r3, #4
 8026cec:	681b      	ldr	r3, [r3, #0]
 8026cee:	9103      	str	r1, [sp, #12]
 8026cf0:	2b00      	cmp	r3, #0
 8026cf2:	bfbb      	ittet	lt
 8026cf4:	425b      	neglt	r3, r3
 8026cf6:	f042 0202 	orrlt.w	r2, r2, #2
 8026cfa:	9307      	strge	r3, [sp, #28]
 8026cfc:	9307      	strlt	r3, [sp, #28]
 8026cfe:	bfb8      	it	lt
 8026d00:	9204      	strlt	r2, [sp, #16]
 8026d02:	7823      	ldrb	r3, [r4, #0]
 8026d04:	2b2e      	cmp	r3, #46	; 0x2e
 8026d06:	d10c      	bne.n	8026d22 <_vfiprintf_r+0x176>
 8026d08:	7863      	ldrb	r3, [r4, #1]
 8026d0a:	2b2a      	cmp	r3, #42	; 0x2a
 8026d0c:	d135      	bne.n	8026d7a <_vfiprintf_r+0x1ce>
 8026d0e:	9b03      	ldr	r3, [sp, #12]
 8026d10:	1d1a      	adds	r2, r3, #4
 8026d12:	681b      	ldr	r3, [r3, #0]
 8026d14:	9203      	str	r2, [sp, #12]
 8026d16:	2b00      	cmp	r3, #0
 8026d18:	bfb8      	it	lt
 8026d1a:	f04f 33ff 	movlt.w	r3, #4294967295
 8026d1e:	3402      	adds	r4, #2
 8026d20:	9305      	str	r3, [sp, #20]
 8026d22:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8026e08 <_vfiprintf_r+0x25c>
 8026d26:	7821      	ldrb	r1, [r4, #0]
 8026d28:	2203      	movs	r2, #3
 8026d2a:	4650      	mov	r0, sl
 8026d2c:	f7d9 fa70 	bl	8000210 <memchr>
 8026d30:	b140      	cbz	r0, 8026d44 <_vfiprintf_r+0x198>
 8026d32:	2340      	movs	r3, #64	; 0x40
 8026d34:	eba0 000a 	sub.w	r0, r0, sl
 8026d38:	fa03 f000 	lsl.w	r0, r3, r0
 8026d3c:	9b04      	ldr	r3, [sp, #16]
 8026d3e:	4303      	orrs	r3, r0
 8026d40:	3401      	adds	r4, #1
 8026d42:	9304      	str	r3, [sp, #16]
 8026d44:	f814 1b01 	ldrb.w	r1, [r4], #1
 8026d48:	482c      	ldr	r0, [pc, #176]	; (8026dfc <_vfiprintf_r+0x250>)
 8026d4a:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8026d4e:	2206      	movs	r2, #6
 8026d50:	f7d9 fa5e 	bl	8000210 <memchr>
 8026d54:	2800      	cmp	r0, #0
 8026d56:	d03f      	beq.n	8026dd8 <_vfiprintf_r+0x22c>
 8026d58:	4b29      	ldr	r3, [pc, #164]	; (8026e00 <_vfiprintf_r+0x254>)
 8026d5a:	bb1b      	cbnz	r3, 8026da4 <_vfiprintf_r+0x1f8>
 8026d5c:	9b03      	ldr	r3, [sp, #12]
 8026d5e:	3307      	adds	r3, #7
 8026d60:	f023 0307 	bic.w	r3, r3, #7
 8026d64:	3308      	adds	r3, #8
 8026d66:	9303      	str	r3, [sp, #12]
 8026d68:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026d6a:	443b      	add	r3, r7
 8026d6c:	9309      	str	r3, [sp, #36]	; 0x24
 8026d6e:	e767      	b.n	8026c40 <_vfiprintf_r+0x94>
 8026d70:	fb0c 3202 	mla	r2, ip, r2, r3
 8026d74:	460c      	mov	r4, r1
 8026d76:	2001      	movs	r0, #1
 8026d78:	e7a5      	b.n	8026cc6 <_vfiprintf_r+0x11a>
 8026d7a:	2300      	movs	r3, #0
 8026d7c:	3401      	adds	r4, #1
 8026d7e:	9305      	str	r3, [sp, #20]
 8026d80:	4619      	mov	r1, r3
 8026d82:	f04f 0c0a 	mov.w	ip, #10
 8026d86:	4620      	mov	r0, r4
 8026d88:	f810 2b01 	ldrb.w	r2, [r0], #1
 8026d8c:	3a30      	subs	r2, #48	; 0x30
 8026d8e:	2a09      	cmp	r2, #9
 8026d90:	d903      	bls.n	8026d9a <_vfiprintf_r+0x1ee>
 8026d92:	2b00      	cmp	r3, #0
 8026d94:	d0c5      	beq.n	8026d22 <_vfiprintf_r+0x176>
 8026d96:	9105      	str	r1, [sp, #20]
 8026d98:	e7c3      	b.n	8026d22 <_vfiprintf_r+0x176>
 8026d9a:	fb0c 2101 	mla	r1, ip, r1, r2
 8026d9e:	4604      	mov	r4, r0
 8026da0:	2301      	movs	r3, #1
 8026da2:	e7f0      	b.n	8026d86 <_vfiprintf_r+0x1da>
 8026da4:	ab03      	add	r3, sp, #12
 8026da6:	9300      	str	r3, [sp, #0]
 8026da8:	462a      	mov	r2, r5
 8026daa:	4b16      	ldr	r3, [pc, #88]	; (8026e04 <_vfiprintf_r+0x258>)
 8026dac:	a904      	add	r1, sp, #16
 8026dae:	4630      	mov	r0, r6
 8026db0:	f3af 8000 	nop.w
 8026db4:	4607      	mov	r7, r0
 8026db6:	1c78      	adds	r0, r7, #1
 8026db8:	d1d6      	bne.n	8026d68 <_vfiprintf_r+0x1bc>
 8026dba:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8026dbc:	07d9      	lsls	r1, r3, #31
 8026dbe:	d405      	bmi.n	8026dcc <_vfiprintf_r+0x220>
 8026dc0:	89ab      	ldrh	r3, [r5, #12]
 8026dc2:	059a      	lsls	r2, r3, #22
 8026dc4:	d402      	bmi.n	8026dcc <_vfiprintf_r+0x220>
 8026dc6:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8026dc8:	f7fe fe71 	bl	8025aae <__retarget_lock_release_recursive>
 8026dcc:	89ab      	ldrh	r3, [r5, #12]
 8026dce:	065b      	lsls	r3, r3, #25
 8026dd0:	f53f af12 	bmi.w	8026bf8 <_vfiprintf_r+0x4c>
 8026dd4:	9809      	ldr	r0, [sp, #36]	; 0x24
 8026dd6:	e711      	b.n	8026bfc <_vfiprintf_r+0x50>
 8026dd8:	ab03      	add	r3, sp, #12
 8026dda:	9300      	str	r3, [sp, #0]
 8026ddc:	462a      	mov	r2, r5
 8026dde:	4b09      	ldr	r3, [pc, #36]	; (8026e04 <_vfiprintf_r+0x258>)
 8026de0:	a904      	add	r1, sp, #16
 8026de2:	4630      	mov	r0, r6
 8026de4:	f7ff fd16 	bl	8026814 <_printf_i>
 8026de8:	e7e4      	b.n	8026db4 <_vfiprintf_r+0x208>
 8026dea:	bf00      	nop
 8026dec:	080287fc 	.word	0x080287fc
 8026df0:	0802881c 	.word	0x0802881c
 8026df4:	080287dc 	.word	0x080287dc
 8026df8:	0802876c 	.word	0x0802876c
 8026dfc:	08028776 	.word	0x08028776
 8026e00:	00000000 	.word	0x00000000
 8026e04:	08026b87 	.word	0x08026b87
 8026e08:	08028772 	.word	0x08028772

08026e0c <__swbuf_r>:
 8026e0c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8026e0e:	460e      	mov	r6, r1
 8026e10:	4614      	mov	r4, r2
 8026e12:	4605      	mov	r5, r0
 8026e14:	b118      	cbz	r0, 8026e1e <__swbuf_r+0x12>
 8026e16:	6983      	ldr	r3, [r0, #24]
 8026e18:	b90b      	cbnz	r3, 8026e1e <__swbuf_r+0x12>
 8026e1a:	f000 f9d1 	bl	80271c0 <__sinit>
 8026e1e:	4b21      	ldr	r3, [pc, #132]	; (8026ea4 <__swbuf_r+0x98>)
 8026e20:	429c      	cmp	r4, r3
 8026e22:	d12b      	bne.n	8026e7c <__swbuf_r+0x70>
 8026e24:	686c      	ldr	r4, [r5, #4]
 8026e26:	69a3      	ldr	r3, [r4, #24]
 8026e28:	60a3      	str	r3, [r4, #8]
 8026e2a:	89a3      	ldrh	r3, [r4, #12]
 8026e2c:	071a      	lsls	r2, r3, #28
 8026e2e:	d52f      	bpl.n	8026e90 <__swbuf_r+0x84>
 8026e30:	6923      	ldr	r3, [r4, #16]
 8026e32:	b36b      	cbz	r3, 8026e90 <__swbuf_r+0x84>
 8026e34:	6923      	ldr	r3, [r4, #16]
 8026e36:	6820      	ldr	r0, [r4, #0]
 8026e38:	1ac0      	subs	r0, r0, r3
 8026e3a:	6963      	ldr	r3, [r4, #20]
 8026e3c:	b2f6      	uxtb	r6, r6
 8026e3e:	4283      	cmp	r3, r0
 8026e40:	4637      	mov	r7, r6
 8026e42:	dc04      	bgt.n	8026e4e <__swbuf_r+0x42>
 8026e44:	4621      	mov	r1, r4
 8026e46:	4628      	mov	r0, r5
 8026e48:	f000 f926 	bl	8027098 <_fflush_r>
 8026e4c:	bb30      	cbnz	r0, 8026e9c <__swbuf_r+0x90>
 8026e4e:	68a3      	ldr	r3, [r4, #8]
 8026e50:	3b01      	subs	r3, #1
 8026e52:	60a3      	str	r3, [r4, #8]
 8026e54:	6823      	ldr	r3, [r4, #0]
 8026e56:	1c5a      	adds	r2, r3, #1
 8026e58:	6022      	str	r2, [r4, #0]
 8026e5a:	701e      	strb	r6, [r3, #0]
 8026e5c:	6963      	ldr	r3, [r4, #20]
 8026e5e:	3001      	adds	r0, #1
 8026e60:	4283      	cmp	r3, r0
 8026e62:	d004      	beq.n	8026e6e <__swbuf_r+0x62>
 8026e64:	89a3      	ldrh	r3, [r4, #12]
 8026e66:	07db      	lsls	r3, r3, #31
 8026e68:	d506      	bpl.n	8026e78 <__swbuf_r+0x6c>
 8026e6a:	2e0a      	cmp	r6, #10
 8026e6c:	d104      	bne.n	8026e78 <__swbuf_r+0x6c>
 8026e6e:	4621      	mov	r1, r4
 8026e70:	4628      	mov	r0, r5
 8026e72:	f000 f911 	bl	8027098 <_fflush_r>
 8026e76:	b988      	cbnz	r0, 8026e9c <__swbuf_r+0x90>
 8026e78:	4638      	mov	r0, r7
 8026e7a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8026e7c:	4b0a      	ldr	r3, [pc, #40]	; (8026ea8 <__swbuf_r+0x9c>)
 8026e7e:	429c      	cmp	r4, r3
 8026e80:	d101      	bne.n	8026e86 <__swbuf_r+0x7a>
 8026e82:	68ac      	ldr	r4, [r5, #8]
 8026e84:	e7cf      	b.n	8026e26 <__swbuf_r+0x1a>
 8026e86:	4b09      	ldr	r3, [pc, #36]	; (8026eac <__swbuf_r+0xa0>)
 8026e88:	429c      	cmp	r4, r3
 8026e8a:	bf08      	it	eq
 8026e8c:	68ec      	ldreq	r4, [r5, #12]
 8026e8e:	e7ca      	b.n	8026e26 <__swbuf_r+0x1a>
 8026e90:	4621      	mov	r1, r4
 8026e92:	4628      	mov	r0, r5
 8026e94:	f000 f80c 	bl	8026eb0 <__swsetup_r>
 8026e98:	2800      	cmp	r0, #0
 8026e9a:	d0cb      	beq.n	8026e34 <__swbuf_r+0x28>
 8026e9c:	f04f 37ff 	mov.w	r7, #4294967295
 8026ea0:	e7ea      	b.n	8026e78 <__swbuf_r+0x6c>
 8026ea2:	bf00      	nop
 8026ea4:	080287fc 	.word	0x080287fc
 8026ea8:	0802881c 	.word	0x0802881c
 8026eac:	080287dc 	.word	0x080287dc

08026eb0 <__swsetup_r>:
 8026eb0:	4b32      	ldr	r3, [pc, #200]	; (8026f7c <__swsetup_r+0xcc>)
 8026eb2:	b570      	push	{r4, r5, r6, lr}
 8026eb4:	681d      	ldr	r5, [r3, #0]
 8026eb6:	4606      	mov	r6, r0
 8026eb8:	460c      	mov	r4, r1
 8026eba:	b125      	cbz	r5, 8026ec6 <__swsetup_r+0x16>
 8026ebc:	69ab      	ldr	r3, [r5, #24]
 8026ebe:	b913      	cbnz	r3, 8026ec6 <__swsetup_r+0x16>
 8026ec0:	4628      	mov	r0, r5
 8026ec2:	f000 f97d 	bl	80271c0 <__sinit>
 8026ec6:	4b2e      	ldr	r3, [pc, #184]	; (8026f80 <__swsetup_r+0xd0>)
 8026ec8:	429c      	cmp	r4, r3
 8026eca:	d10f      	bne.n	8026eec <__swsetup_r+0x3c>
 8026ecc:	686c      	ldr	r4, [r5, #4]
 8026ece:	89a3      	ldrh	r3, [r4, #12]
 8026ed0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8026ed4:	0719      	lsls	r1, r3, #28
 8026ed6:	d42c      	bmi.n	8026f32 <__swsetup_r+0x82>
 8026ed8:	06dd      	lsls	r5, r3, #27
 8026eda:	d411      	bmi.n	8026f00 <__swsetup_r+0x50>
 8026edc:	2309      	movs	r3, #9
 8026ede:	6033      	str	r3, [r6, #0]
 8026ee0:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8026ee4:	81a3      	strh	r3, [r4, #12]
 8026ee6:	f04f 30ff 	mov.w	r0, #4294967295
 8026eea:	e03e      	b.n	8026f6a <__swsetup_r+0xba>
 8026eec:	4b25      	ldr	r3, [pc, #148]	; (8026f84 <__swsetup_r+0xd4>)
 8026eee:	429c      	cmp	r4, r3
 8026ef0:	d101      	bne.n	8026ef6 <__swsetup_r+0x46>
 8026ef2:	68ac      	ldr	r4, [r5, #8]
 8026ef4:	e7eb      	b.n	8026ece <__swsetup_r+0x1e>
 8026ef6:	4b24      	ldr	r3, [pc, #144]	; (8026f88 <__swsetup_r+0xd8>)
 8026ef8:	429c      	cmp	r4, r3
 8026efa:	bf08      	it	eq
 8026efc:	68ec      	ldreq	r4, [r5, #12]
 8026efe:	e7e6      	b.n	8026ece <__swsetup_r+0x1e>
 8026f00:	0758      	lsls	r0, r3, #29
 8026f02:	d512      	bpl.n	8026f2a <__swsetup_r+0x7a>
 8026f04:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8026f06:	b141      	cbz	r1, 8026f1a <__swsetup_r+0x6a>
 8026f08:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8026f0c:	4299      	cmp	r1, r3
 8026f0e:	d002      	beq.n	8026f16 <__swsetup_r+0x66>
 8026f10:	4630      	mov	r0, r6
 8026f12:	f7fd f96f 	bl	80241f4 <_free_r>
 8026f16:	2300      	movs	r3, #0
 8026f18:	6363      	str	r3, [r4, #52]	; 0x34
 8026f1a:	89a3      	ldrh	r3, [r4, #12]
 8026f1c:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8026f20:	81a3      	strh	r3, [r4, #12]
 8026f22:	2300      	movs	r3, #0
 8026f24:	6063      	str	r3, [r4, #4]
 8026f26:	6923      	ldr	r3, [r4, #16]
 8026f28:	6023      	str	r3, [r4, #0]
 8026f2a:	89a3      	ldrh	r3, [r4, #12]
 8026f2c:	f043 0308 	orr.w	r3, r3, #8
 8026f30:	81a3      	strh	r3, [r4, #12]
 8026f32:	6923      	ldr	r3, [r4, #16]
 8026f34:	b94b      	cbnz	r3, 8026f4a <__swsetup_r+0x9a>
 8026f36:	89a3      	ldrh	r3, [r4, #12]
 8026f38:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8026f3c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8026f40:	d003      	beq.n	8026f4a <__swsetup_r+0x9a>
 8026f42:	4621      	mov	r1, r4
 8026f44:	4630      	mov	r0, r6
 8026f46:	f000 f9fd 	bl	8027344 <__smakebuf_r>
 8026f4a:	89a0      	ldrh	r0, [r4, #12]
 8026f4c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8026f50:	f010 0301 	ands.w	r3, r0, #1
 8026f54:	d00a      	beq.n	8026f6c <__swsetup_r+0xbc>
 8026f56:	2300      	movs	r3, #0
 8026f58:	60a3      	str	r3, [r4, #8]
 8026f5a:	6963      	ldr	r3, [r4, #20]
 8026f5c:	425b      	negs	r3, r3
 8026f5e:	61a3      	str	r3, [r4, #24]
 8026f60:	6923      	ldr	r3, [r4, #16]
 8026f62:	b943      	cbnz	r3, 8026f76 <__swsetup_r+0xc6>
 8026f64:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8026f68:	d1ba      	bne.n	8026ee0 <__swsetup_r+0x30>
 8026f6a:	bd70      	pop	{r4, r5, r6, pc}
 8026f6c:	0781      	lsls	r1, r0, #30
 8026f6e:	bf58      	it	pl
 8026f70:	6963      	ldrpl	r3, [r4, #20]
 8026f72:	60a3      	str	r3, [r4, #8]
 8026f74:	e7f4      	b.n	8026f60 <__swsetup_r+0xb0>
 8026f76:	2000      	movs	r0, #0
 8026f78:	e7f7      	b.n	8026f6a <__swsetup_r+0xba>
 8026f7a:	bf00      	nop
 8026f7c:	20000010 	.word	0x20000010
 8026f80:	080287fc 	.word	0x080287fc
 8026f84:	0802881c 	.word	0x0802881c
 8026f88:	080287dc 	.word	0x080287dc

08026f8c <__sflush_r>:
 8026f8c:	898a      	ldrh	r2, [r1, #12]
 8026f8e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8026f92:	4605      	mov	r5, r0
 8026f94:	0710      	lsls	r0, r2, #28
 8026f96:	460c      	mov	r4, r1
 8026f98:	d458      	bmi.n	802704c <__sflush_r+0xc0>
 8026f9a:	684b      	ldr	r3, [r1, #4]
 8026f9c:	2b00      	cmp	r3, #0
 8026f9e:	dc05      	bgt.n	8026fac <__sflush_r+0x20>
 8026fa0:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8026fa2:	2b00      	cmp	r3, #0
 8026fa4:	dc02      	bgt.n	8026fac <__sflush_r+0x20>
 8026fa6:	2000      	movs	r0, #0
 8026fa8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8026fac:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8026fae:	2e00      	cmp	r6, #0
 8026fb0:	d0f9      	beq.n	8026fa6 <__sflush_r+0x1a>
 8026fb2:	2300      	movs	r3, #0
 8026fb4:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8026fb8:	682f      	ldr	r7, [r5, #0]
 8026fba:	602b      	str	r3, [r5, #0]
 8026fbc:	d032      	beq.n	8027024 <__sflush_r+0x98>
 8026fbe:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8026fc0:	89a3      	ldrh	r3, [r4, #12]
 8026fc2:	075a      	lsls	r2, r3, #29
 8026fc4:	d505      	bpl.n	8026fd2 <__sflush_r+0x46>
 8026fc6:	6863      	ldr	r3, [r4, #4]
 8026fc8:	1ac0      	subs	r0, r0, r3
 8026fca:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8026fcc:	b10b      	cbz	r3, 8026fd2 <__sflush_r+0x46>
 8026fce:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8026fd0:	1ac0      	subs	r0, r0, r3
 8026fd2:	2300      	movs	r3, #0
 8026fd4:	4602      	mov	r2, r0
 8026fd6:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8026fd8:	6a21      	ldr	r1, [r4, #32]
 8026fda:	4628      	mov	r0, r5
 8026fdc:	47b0      	blx	r6
 8026fde:	1c43      	adds	r3, r0, #1
 8026fe0:	89a3      	ldrh	r3, [r4, #12]
 8026fe2:	d106      	bne.n	8026ff2 <__sflush_r+0x66>
 8026fe4:	6829      	ldr	r1, [r5, #0]
 8026fe6:	291d      	cmp	r1, #29
 8026fe8:	d82c      	bhi.n	8027044 <__sflush_r+0xb8>
 8026fea:	4a2a      	ldr	r2, [pc, #168]	; (8027094 <__sflush_r+0x108>)
 8026fec:	40ca      	lsrs	r2, r1
 8026fee:	07d6      	lsls	r6, r2, #31
 8026ff0:	d528      	bpl.n	8027044 <__sflush_r+0xb8>
 8026ff2:	2200      	movs	r2, #0
 8026ff4:	6062      	str	r2, [r4, #4]
 8026ff6:	04d9      	lsls	r1, r3, #19
 8026ff8:	6922      	ldr	r2, [r4, #16]
 8026ffa:	6022      	str	r2, [r4, #0]
 8026ffc:	d504      	bpl.n	8027008 <__sflush_r+0x7c>
 8026ffe:	1c42      	adds	r2, r0, #1
 8027000:	d101      	bne.n	8027006 <__sflush_r+0x7a>
 8027002:	682b      	ldr	r3, [r5, #0]
 8027004:	b903      	cbnz	r3, 8027008 <__sflush_r+0x7c>
 8027006:	6560      	str	r0, [r4, #84]	; 0x54
 8027008:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802700a:	602f      	str	r7, [r5, #0]
 802700c:	2900      	cmp	r1, #0
 802700e:	d0ca      	beq.n	8026fa6 <__sflush_r+0x1a>
 8027010:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8027014:	4299      	cmp	r1, r3
 8027016:	d002      	beq.n	802701e <__sflush_r+0x92>
 8027018:	4628      	mov	r0, r5
 802701a:	f7fd f8eb 	bl	80241f4 <_free_r>
 802701e:	2000      	movs	r0, #0
 8027020:	6360      	str	r0, [r4, #52]	; 0x34
 8027022:	e7c1      	b.n	8026fa8 <__sflush_r+0x1c>
 8027024:	6a21      	ldr	r1, [r4, #32]
 8027026:	2301      	movs	r3, #1
 8027028:	4628      	mov	r0, r5
 802702a:	47b0      	blx	r6
 802702c:	1c41      	adds	r1, r0, #1
 802702e:	d1c7      	bne.n	8026fc0 <__sflush_r+0x34>
 8027030:	682b      	ldr	r3, [r5, #0]
 8027032:	2b00      	cmp	r3, #0
 8027034:	d0c4      	beq.n	8026fc0 <__sflush_r+0x34>
 8027036:	2b1d      	cmp	r3, #29
 8027038:	d001      	beq.n	802703e <__sflush_r+0xb2>
 802703a:	2b16      	cmp	r3, #22
 802703c:	d101      	bne.n	8027042 <__sflush_r+0xb6>
 802703e:	602f      	str	r7, [r5, #0]
 8027040:	e7b1      	b.n	8026fa6 <__sflush_r+0x1a>
 8027042:	89a3      	ldrh	r3, [r4, #12]
 8027044:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8027048:	81a3      	strh	r3, [r4, #12]
 802704a:	e7ad      	b.n	8026fa8 <__sflush_r+0x1c>
 802704c:	690f      	ldr	r7, [r1, #16]
 802704e:	2f00      	cmp	r7, #0
 8027050:	d0a9      	beq.n	8026fa6 <__sflush_r+0x1a>
 8027052:	0793      	lsls	r3, r2, #30
 8027054:	680e      	ldr	r6, [r1, #0]
 8027056:	bf08      	it	eq
 8027058:	694b      	ldreq	r3, [r1, #20]
 802705a:	600f      	str	r7, [r1, #0]
 802705c:	bf18      	it	ne
 802705e:	2300      	movne	r3, #0
 8027060:	eba6 0807 	sub.w	r8, r6, r7
 8027064:	608b      	str	r3, [r1, #8]
 8027066:	f1b8 0f00 	cmp.w	r8, #0
 802706a:	dd9c      	ble.n	8026fa6 <__sflush_r+0x1a>
 802706c:	6a21      	ldr	r1, [r4, #32]
 802706e:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8027070:	4643      	mov	r3, r8
 8027072:	463a      	mov	r2, r7
 8027074:	4628      	mov	r0, r5
 8027076:	47b0      	blx	r6
 8027078:	2800      	cmp	r0, #0
 802707a:	dc06      	bgt.n	802708a <__sflush_r+0xfe>
 802707c:	89a3      	ldrh	r3, [r4, #12]
 802707e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8027082:	81a3      	strh	r3, [r4, #12]
 8027084:	f04f 30ff 	mov.w	r0, #4294967295
 8027088:	e78e      	b.n	8026fa8 <__sflush_r+0x1c>
 802708a:	4407      	add	r7, r0
 802708c:	eba8 0800 	sub.w	r8, r8, r0
 8027090:	e7e9      	b.n	8027066 <__sflush_r+0xda>
 8027092:	bf00      	nop
 8027094:	20400001 	.word	0x20400001

08027098 <_fflush_r>:
 8027098:	b538      	push	{r3, r4, r5, lr}
 802709a:	690b      	ldr	r3, [r1, #16]
 802709c:	4605      	mov	r5, r0
 802709e:	460c      	mov	r4, r1
 80270a0:	b913      	cbnz	r3, 80270a8 <_fflush_r+0x10>
 80270a2:	2500      	movs	r5, #0
 80270a4:	4628      	mov	r0, r5
 80270a6:	bd38      	pop	{r3, r4, r5, pc}
 80270a8:	b118      	cbz	r0, 80270b2 <_fflush_r+0x1a>
 80270aa:	6983      	ldr	r3, [r0, #24]
 80270ac:	b90b      	cbnz	r3, 80270b2 <_fflush_r+0x1a>
 80270ae:	f000 f887 	bl	80271c0 <__sinit>
 80270b2:	4b14      	ldr	r3, [pc, #80]	; (8027104 <_fflush_r+0x6c>)
 80270b4:	429c      	cmp	r4, r3
 80270b6:	d11b      	bne.n	80270f0 <_fflush_r+0x58>
 80270b8:	686c      	ldr	r4, [r5, #4]
 80270ba:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80270be:	2b00      	cmp	r3, #0
 80270c0:	d0ef      	beq.n	80270a2 <_fflush_r+0xa>
 80270c2:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80270c4:	07d0      	lsls	r0, r2, #31
 80270c6:	d404      	bmi.n	80270d2 <_fflush_r+0x3a>
 80270c8:	0599      	lsls	r1, r3, #22
 80270ca:	d402      	bmi.n	80270d2 <_fflush_r+0x3a>
 80270cc:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80270ce:	f7fe fcec 	bl	8025aaa <__retarget_lock_acquire_recursive>
 80270d2:	4628      	mov	r0, r5
 80270d4:	4621      	mov	r1, r4
 80270d6:	f7ff ff59 	bl	8026f8c <__sflush_r>
 80270da:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80270dc:	07da      	lsls	r2, r3, #31
 80270de:	4605      	mov	r5, r0
 80270e0:	d4e0      	bmi.n	80270a4 <_fflush_r+0xc>
 80270e2:	89a3      	ldrh	r3, [r4, #12]
 80270e4:	059b      	lsls	r3, r3, #22
 80270e6:	d4dd      	bmi.n	80270a4 <_fflush_r+0xc>
 80270e8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80270ea:	f7fe fce0 	bl	8025aae <__retarget_lock_release_recursive>
 80270ee:	e7d9      	b.n	80270a4 <_fflush_r+0xc>
 80270f0:	4b05      	ldr	r3, [pc, #20]	; (8027108 <_fflush_r+0x70>)
 80270f2:	429c      	cmp	r4, r3
 80270f4:	d101      	bne.n	80270fa <_fflush_r+0x62>
 80270f6:	68ac      	ldr	r4, [r5, #8]
 80270f8:	e7df      	b.n	80270ba <_fflush_r+0x22>
 80270fa:	4b04      	ldr	r3, [pc, #16]	; (802710c <_fflush_r+0x74>)
 80270fc:	429c      	cmp	r4, r3
 80270fe:	bf08      	it	eq
 8027100:	68ec      	ldreq	r4, [r5, #12]
 8027102:	e7da      	b.n	80270ba <_fflush_r+0x22>
 8027104:	080287fc 	.word	0x080287fc
 8027108:	0802881c 	.word	0x0802881c
 802710c:	080287dc 	.word	0x080287dc

08027110 <std>:
 8027110:	2300      	movs	r3, #0
 8027112:	b510      	push	{r4, lr}
 8027114:	4604      	mov	r4, r0
 8027116:	e9c0 3300 	strd	r3, r3, [r0]
 802711a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 802711e:	6083      	str	r3, [r0, #8]
 8027120:	8181      	strh	r1, [r0, #12]
 8027122:	6643      	str	r3, [r0, #100]	; 0x64
 8027124:	81c2      	strh	r2, [r0, #14]
 8027126:	6183      	str	r3, [r0, #24]
 8027128:	4619      	mov	r1, r3
 802712a:	2208      	movs	r2, #8
 802712c:	305c      	adds	r0, #92	; 0x5c
 802712e:	f7fd f859 	bl	80241e4 <memset>
 8027132:	4b05      	ldr	r3, [pc, #20]	; (8027148 <std+0x38>)
 8027134:	6263      	str	r3, [r4, #36]	; 0x24
 8027136:	4b05      	ldr	r3, [pc, #20]	; (802714c <std+0x3c>)
 8027138:	62a3      	str	r3, [r4, #40]	; 0x28
 802713a:	4b05      	ldr	r3, [pc, #20]	; (8027150 <std+0x40>)
 802713c:	62e3      	str	r3, [r4, #44]	; 0x2c
 802713e:	4b05      	ldr	r3, [pc, #20]	; (8027154 <std+0x44>)
 8027140:	6224      	str	r4, [r4, #32]
 8027142:	6323      	str	r3, [r4, #48]	; 0x30
 8027144:	bd10      	pop	{r4, pc}
 8027146:	bf00      	nop
 8027148:	080273d5 	.word	0x080273d5
 802714c:	080273f7 	.word	0x080273f7
 8027150:	0802742f 	.word	0x0802742f
 8027154:	08027453 	.word	0x08027453

08027158 <_cleanup_r>:
 8027158:	4901      	ldr	r1, [pc, #4]	; (8027160 <_cleanup_r+0x8>)
 802715a:	f000 b8af 	b.w	80272bc <_fwalk_reent>
 802715e:	bf00      	nop
 8027160:	08027099 	.word	0x08027099

08027164 <__sfmoreglue>:
 8027164:	b570      	push	{r4, r5, r6, lr}
 8027166:	1e4a      	subs	r2, r1, #1
 8027168:	2568      	movs	r5, #104	; 0x68
 802716a:	4355      	muls	r5, r2
 802716c:	460e      	mov	r6, r1
 802716e:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8027172:	f7fd f88f 	bl	8024294 <_malloc_r>
 8027176:	4604      	mov	r4, r0
 8027178:	b140      	cbz	r0, 802718c <__sfmoreglue+0x28>
 802717a:	2100      	movs	r1, #0
 802717c:	e9c0 1600 	strd	r1, r6, [r0]
 8027180:	300c      	adds	r0, #12
 8027182:	60a0      	str	r0, [r4, #8]
 8027184:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8027188:	f7fd f82c 	bl	80241e4 <memset>
 802718c:	4620      	mov	r0, r4
 802718e:	bd70      	pop	{r4, r5, r6, pc}

08027190 <__sfp_lock_acquire>:
 8027190:	4801      	ldr	r0, [pc, #4]	; (8027198 <__sfp_lock_acquire+0x8>)
 8027192:	f7fe bc8a 	b.w	8025aaa <__retarget_lock_acquire_recursive>
 8027196:	bf00      	nop
 8027198:	200008c4 	.word	0x200008c4

0802719c <__sfp_lock_release>:
 802719c:	4801      	ldr	r0, [pc, #4]	; (80271a4 <__sfp_lock_release+0x8>)
 802719e:	f7fe bc86 	b.w	8025aae <__retarget_lock_release_recursive>
 80271a2:	bf00      	nop
 80271a4:	200008c4 	.word	0x200008c4

080271a8 <__sinit_lock_acquire>:
 80271a8:	4801      	ldr	r0, [pc, #4]	; (80271b0 <__sinit_lock_acquire+0x8>)
 80271aa:	f7fe bc7e 	b.w	8025aaa <__retarget_lock_acquire_recursive>
 80271ae:	bf00      	nop
 80271b0:	200008c3 	.word	0x200008c3

080271b4 <__sinit_lock_release>:
 80271b4:	4801      	ldr	r0, [pc, #4]	; (80271bc <__sinit_lock_release+0x8>)
 80271b6:	f7fe bc7a 	b.w	8025aae <__retarget_lock_release_recursive>
 80271ba:	bf00      	nop
 80271bc:	200008c3 	.word	0x200008c3

080271c0 <__sinit>:
 80271c0:	b510      	push	{r4, lr}
 80271c2:	4604      	mov	r4, r0
 80271c4:	f7ff fff0 	bl	80271a8 <__sinit_lock_acquire>
 80271c8:	69a3      	ldr	r3, [r4, #24]
 80271ca:	b11b      	cbz	r3, 80271d4 <__sinit+0x14>
 80271cc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80271d0:	f7ff bff0 	b.w	80271b4 <__sinit_lock_release>
 80271d4:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 80271d8:	6523      	str	r3, [r4, #80]	; 0x50
 80271da:	4b13      	ldr	r3, [pc, #76]	; (8027228 <__sinit+0x68>)
 80271dc:	4a13      	ldr	r2, [pc, #76]	; (802722c <__sinit+0x6c>)
 80271de:	681b      	ldr	r3, [r3, #0]
 80271e0:	62a2      	str	r2, [r4, #40]	; 0x28
 80271e2:	42a3      	cmp	r3, r4
 80271e4:	bf04      	itt	eq
 80271e6:	2301      	moveq	r3, #1
 80271e8:	61a3      	streq	r3, [r4, #24]
 80271ea:	4620      	mov	r0, r4
 80271ec:	f000 f820 	bl	8027230 <__sfp>
 80271f0:	6060      	str	r0, [r4, #4]
 80271f2:	4620      	mov	r0, r4
 80271f4:	f000 f81c 	bl	8027230 <__sfp>
 80271f8:	60a0      	str	r0, [r4, #8]
 80271fa:	4620      	mov	r0, r4
 80271fc:	f000 f818 	bl	8027230 <__sfp>
 8027200:	2200      	movs	r2, #0
 8027202:	60e0      	str	r0, [r4, #12]
 8027204:	2104      	movs	r1, #4
 8027206:	6860      	ldr	r0, [r4, #4]
 8027208:	f7ff ff82 	bl	8027110 <std>
 802720c:	68a0      	ldr	r0, [r4, #8]
 802720e:	2201      	movs	r2, #1
 8027210:	2109      	movs	r1, #9
 8027212:	f7ff ff7d 	bl	8027110 <std>
 8027216:	68e0      	ldr	r0, [r4, #12]
 8027218:	2202      	movs	r2, #2
 802721a:	2112      	movs	r1, #18
 802721c:	f7ff ff78 	bl	8027110 <std>
 8027220:	2301      	movs	r3, #1
 8027222:	61a3      	str	r3, [r4, #24]
 8027224:	e7d2      	b.n	80271cc <__sinit+0xc>
 8027226:	bf00      	nop
 8027228:	080283e0 	.word	0x080283e0
 802722c:	08027159 	.word	0x08027159

08027230 <__sfp>:
 8027230:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8027232:	4607      	mov	r7, r0
 8027234:	f7ff ffac 	bl	8027190 <__sfp_lock_acquire>
 8027238:	4b1e      	ldr	r3, [pc, #120]	; (80272b4 <__sfp+0x84>)
 802723a:	681e      	ldr	r6, [r3, #0]
 802723c:	69b3      	ldr	r3, [r6, #24]
 802723e:	b913      	cbnz	r3, 8027246 <__sfp+0x16>
 8027240:	4630      	mov	r0, r6
 8027242:	f7ff ffbd 	bl	80271c0 <__sinit>
 8027246:	3648      	adds	r6, #72	; 0x48
 8027248:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 802724c:	3b01      	subs	r3, #1
 802724e:	d503      	bpl.n	8027258 <__sfp+0x28>
 8027250:	6833      	ldr	r3, [r6, #0]
 8027252:	b30b      	cbz	r3, 8027298 <__sfp+0x68>
 8027254:	6836      	ldr	r6, [r6, #0]
 8027256:	e7f7      	b.n	8027248 <__sfp+0x18>
 8027258:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 802725c:	b9d5      	cbnz	r5, 8027294 <__sfp+0x64>
 802725e:	4b16      	ldr	r3, [pc, #88]	; (80272b8 <__sfp+0x88>)
 8027260:	60e3      	str	r3, [r4, #12]
 8027262:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8027266:	6665      	str	r5, [r4, #100]	; 0x64
 8027268:	f7fe fc1e 	bl	8025aa8 <__retarget_lock_init_recursive>
 802726c:	f7ff ff96 	bl	802719c <__sfp_lock_release>
 8027270:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8027274:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8027278:	6025      	str	r5, [r4, #0]
 802727a:	61a5      	str	r5, [r4, #24]
 802727c:	2208      	movs	r2, #8
 802727e:	4629      	mov	r1, r5
 8027280:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8027284:	f7fc ffae 	bl	80241e4 <memset>
 8027288:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 802728c:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8027290:	4620      	mov	r0, r4
 8027292:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8027294:	3468      	adds	r4, #104	; 0x68
 8027296:	e7d9      	b.n	802724c <__sfp+0x1c>
 8027298:	2104      	movs	r1, #4
 802729a:	4638      	mov	r0, r7
 802729c:	f7ff ff62 	bl	8027164 <__sfmoreglue>
 80272a0:	4604      	mov	r4, r0
 80272a2:	6030      	str	r0, [r6, #0]
 80272a4:	2800      	cmp	r0, #0
 80272a6:	d1d5      	bne.n	8027254 <__sfp+0x24>
 80272a8:	f7ff ff78 	bl	802719c <__sfp_lock_release>
 80272ac:	230c      	movs	r3, #12
 80272ae:	603b      	str	r3, [r7, #0]
 80272b0:	e7ee      	b.n	8027290 <__sfp+0x60>
 80272b2:	bf00      	nop
 80272b4:	080283e0 	.word	0x080283e0
 80272b8:	ffff0001 	.word	0xffff0001

080272bc <_fwalk_reent>:
 80272bc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80272c0:	4606      	mov	r6, r0
 80272c2:	4688      	mov	r8, r1
 80272c4:	f100 0448 	add.w	r4, r0, #72	; 0x48
 80272c8:	2700      	movs	r7, #0
 80272ca:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80272ce:	f1b9 0901 	subs.w	r9, r9, #1
 80272d2:	d505      	bpl.n	80272e0 <_fwalk_reent+0x24>
 80272d4:	6824      	ldr	r4, [r4, #0]
 80272d6:	2c00      	cmp	r4, #0
 80272d8:	d1f7      	bne.n	80272ca <_fwalk_reent+0xe>
 80272da:	4638      	mov	r0, r7
 80272dc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80272e0:	89ab      	ldrh	r3, [r5, #12]
 80272e2:	2b01      	cmp	r3, #1
 80272e4:	d907      	bls.n	80272f6 <_fwalk_reent+0x3a>
 80272e6:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80272ea:	3301      	adds	r3, #1
 80272ec:	d003      	beq.n	80272f6 <_fwalk_reent+0x3a>
 80272ee:	4629      	mov	r1, r5
 80272f0:	4630      	mov	r0, r6
 80272f2:	47c0      	blx	r8
 80272f4:	4307      	orrs	r7, r0
 80272f6:	3568      	adds	r5, #104	; 0x68
 80272f8:	e7e9      	b.n	80272ce <_fwalk_reent+0x12>

080272fa <__swhatbuf_r>:
 80272fa:	b570      	push	{r4, r5, r6, lr}
 80272fc:	460e      	mov	r6, r1
 80272fe:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8027302:	2900      	cmp	r1, #0
 8027304:	b096      	sub	sp, #88	; 0x58
 8027306:	4614      	mov	r4, r2
 8027308:	461d      	mov	r5, r3
 802730a:	da07      	bge.n	802731c <__swhatbuf_r+0x22>
 802730c:	2300      	movs	r3, #0
 802730e:	602b      	str	r3, [r5, #0]
 8027310:	89b3      	ldrh	r3, [r6, #12]
 8027312:	061a      	lsls	r2, r3, #24
 8027314:	d410      	bmi.n	8027338 <__swhatbuf_r+0x3e>
 8027316:	f44f 6380 	mov.w	r3, #1024	; 0x400
 802731a:	e00e      	b.n	802733a <__swhatbuf_r+0x40>
 802731c:	466a      	mov	r2, sp
 802731e:	f000 f8bf 	bl	80274a0 <_fstat_r>
 8027322:	2800      	cmp	r0, #0
 8027324:	dbf2      	blt.n	802730c <__swhatbuf_r+0x12>
 8027326:	9a01      	ldr	r2, [sp, #4]
 8027328:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 802732c:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8027330:	425a      	negs	r2, r3
 8027332:	415a      	adcs	r2, r3
 8027334:	602a      	str	r2, [r5, #0]
 8027336:	e7ee      	b.n	8027316 <__swhatbuf_r+0x1c>
 8027338:	2340      	movs	r3, #64	; 0x40
 802733a:	2000      	movs	r0, #0
 802733c:	6023      	str	r3, [r4, #0]
 802733e:	b016      	add	sp, #88	; 0x58
 8027340:	bd70      	pop	{r4, r5, r6, pc}
	...

08027344 <__smakebuf_r>:
 8027344:	898b      	ldrh	r3, [r1, #12]
 8027346:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8027348:	079d      	lsls	r5, r3, #30
 802734a:	4606      	mov	r6, r0
 802734c:	460c      	mov	r4, r1
 802734e:	d507      	bpl.n	8027360 <__smakebuf_r+0x1c>
 8027350:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8027354:	6023      	str	r3, [r4, #0]
 8027356:	6123      	str	r3, [r4, #16]
 8027358:	2301      	movs	r3, #1
 802735a:	6163      	str	r3, [r4, #20]
 802735c:	b002      	add	sp, #8
 802735e:	bd70      	pop	{r4, r5, r6, pc}
 8027360:	ab01      	add	r3, sp, #4
 8027362:	466a      	mov	r2, sp
 8027364:	f7ff ffc9 	bl	80272fa <__swhatbuf_r>
 8027368:	9900      	ldr	r1, [sp, #0]
 802736a:	4605      	mov	r5, r0
 802736c:	4630      	mov	r0, r6
 802736e:	f7fc ff91 	bl	8024294 <_malloc_r>
 8027372:	b948      	cbnz	r0, 8027388 <__smakebuf_r+0x44>
 8027374:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8027378:	059a      	lsls	r2, r3, #22
 802737a:	d4ef      	bmi.n	802735c <__smakebuf_r+0x18>
 802737c:	f023 0303 	bic.w	r3, r3, #3
 8027380:	f043 0302 	orr.w	r3, r3, #2
 8027384:	81a3      	strh	r3, [r4, #12]
 8027386:	e7e3      	b.n	8027350 <__smakebuf_r+0xc>
 8027388:	4b0d      	ldr	r3, [pc, #52]	; (80273c0 <__smakebuf_r+0x7c>)
 802738a:	62b3      	str	r3, [r6, #40]	; 0x28
 802738c:	89a3      	ldrh	r3, [r4, #12]
 802738e:	6020      	str	r0, [r4, #0]
 8027390:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8027394:	81a3      	strh	r3, [r4, #12]
 8027396:	9b00      	ldr	r3, [sp, #0]
 8027398:	6163      	str	r3, [r4, #20]
 802739a:	9b01      	ldr	r3, [sp, #4]
 802739c:	6120      	str	r0, [r4, #16]
 802739e:	b15b      	cbz	r3, 80273b8 <__smakebuf_r+0x74>
 80273a0:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80273a4:	4630      	mov	r0, r6
 80273a6:	f000 f88d 	bl	80274c4 <_isatty_r>
 80273aa:	b128      	cbz	r0, 80273b8 <__smakebuf_r+0x74>
 80273ac:	89a3      	ldrh	r3, [r4, #12]
 80273ae:	f023 0303 	bic.w	r3, r3, #3
 80273b2:	f043 0301 	orr.w	r3, r3, #1
 80273b6:	81a3      	strh	r3, [r4, #12]
 80273b8:	89a0      	ldrh	r0, [r4, #12]
 80273ba:	4305      	orrs	r5, r0
 80273bc:	81a5      	strh	r5, [r4, #12]
 80273be:	e7cd      	b.n	802735c <__smakebuf_r+0x18>
 80273c0:	08027159 	.word	0x08027159

080273c4 <_malloc_usable_size_r>:
 80273c4:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80273c8:	1f18      	subs	r0, r3, #4
 80273ca:	2b00      	cmp	r3, #0
 80273cc:	bfbc      	itt	lt
 80273ce:	580b      	ldrlt	r3, [r1, r0]
 80273d0:	18c0      	addlt	r0, r0, r3
 80273d2:	4770      	bx	lr

080273d4 <__sread>:
 80273d4:	b510      	push	{r4, lr}
 80273d6:	460c      	mov	r4, r1
 80273d8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80273dc:	f000 f894 	bl	8027508 <_read_r>
 80273e0:	2800      	cmp	r0, #0
 80273e2:	bfab      	itete	ge
 80273e4:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80273e6:	89a3      	ldrhlt	r3, [r4, #12]
 80273e8:	181b      	addge	r3, r3, r0
 80273ea:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80273ee:	bfac      	ite	ge
 80273f0:	6563      	strge	r3, [r4, #84]	; 0x54
 80273f2:	81a3      	strhlt	r3, [r4, #12]
 80273f4:	bd10      	pop	{r4, pc}

080273f6 <__swrite>:
 80273f6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80273fa:	461f      	mov	r7, r3
 80273fc:	898b      	ldrh	r3, [r1, #12]
 80273fe:	05db      	lsls	r3, r3, #23
 8027400:	4605      	mov	r5, r0
 8027402:	460c      	mov	r4, r1
 8027404:	4616      	mov	r6, r2
 8027406:	d505      	bpl.n	8027414 <__swrite+0x1e>
 8027408:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802740c:	2302      	movs	r3, #2
 802740e:	2200      	movs	r2, #0
 8027410:	f000 f868 	bl	80274e4 <_lseek_r>
 8027414:	89a3      	ldrh	r3, [r4, #12]
 8027416:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802741a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 802741e:	81a3      	strh	r3, [r4, #12]
 8027420:	4632      	mov	r2, r6
 8027422:	463b      	mov	r3, r7
 8027424:	4628      	mov	r0, r5
 8027426:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802742a:	f000 b817 	b.w	802745c <_write_r>

0802742e <__sseek>:
 802742e:	b510      	push	{r4, lr}
 8027430:	460c      	mov	r4, r1
 8027432:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8027436:	f000 f855 	bl	80274e4 <_lseek_r>
 802743a:	1c43      	adds	r3, r0, #1
 802743c:	89a3      	ldrh	r3, [r4, #12]
 802743e:	bf15      	itete	ne
 8027440:	6560      	strne	r0, [r4, #84]	; 0x54
 8027442:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8027446:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 802744a:	81a3      	strheq	r3, [r4, #12]
 802744c:	bf18      	it	ne
 802744e:	81a3      	strhne	r3, [r4, #12]
 8027450:	bd10      	pop	{r4, pc}

08027452 <__sclose>:
 8027452:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8027456:	f000 b813 	b.w	8027480 <_close_r>
	...

0802745c <_write_r>:
 802745c:	b538      	push	{r3, r4, r5, lr}
 802745e:	4d07      	ldr	r5, [pc, #28]	; (802747c <_write_r+0x20>)
 8027460:	4604      	mov	r4, r0
 8027462:	4608      	mov	r0, r1
 8027464:	4611      	mov	r1, r2
 8027466:	2200      	movs	r2, #0
 8027468:	602a      	str	r2, [r5, #0]
 802746a:	461a      	mov	r2, r3
 802746c:	f7f6 feb1 	bl	801e1d2 <_write>
 8027470:	1c43      	adds	r3, r0, #1
 8027472:	d102      	bne.n	802747a <_write_r+0x1e>
 8027474:	682b      	ldr	r3, [r5, #0]
 8027476:	b103      	cbz	r3, 802747a <_write_r+0x1e>
 8027478:	6023      	str	r3, [r4, #0]
 802747a:	bd38      	pop	{r3, r4, r5, pc}
 802747c:	200008cc 	.word	0x200008cc

08027480 <_close_r>:
 8027480:	b538      	push	{r3, r4, r5, lr}
 8027482:	4d06      	ldr	r5, [pc, #24]	; (802749c <_close_r+0x1c>)
 8027484:	2300      	movs	r3, #0
 8027486:	4604      	mov	r4, r0
 8027488:	4608      	mov	r0, r1
 802748a:	602b      	str	r3, [r5, #0]
 802748c:	f7f6 febd 	bl	801e20a <_close>
 8027490:	1c43      	adds	r3, r0, #1
 8027492:	d102      	bne.n	802749a <_close_r+0x1a>
 8027494:	682b      	ldr	r3, [r5, #0]
 8027496:	b103      	cbz	r3, 802749a <_close_r+0x1a>
 8027498:	6023      	str	r3, [r4, #0]
 802749a:	bd38      	pop	{r3, r4, r5, pc}
 802749c:	200008cc 	.word	0x200008cc

080274a0 <_fstat_r>:
 80274a0:	b538      	push	{r3, r4, r5, lr}
 80274a2:	4d07      	ldr	r5, [pc, #28]	; (80274c0 <_fstat_r+0x20>)
 80274a4:	2300      	movs	r3, #0
 80274a6:	4604      	mov	r4, r0
 80274a8:	4608      	mov	r0, r1
 80274aa:	4611      	mov	r1, r2
 80274ac:	602b      	str	r3, [r5, #0]
 80274ae:	f7f6 feb8 	bl	801e222 <_fstat>
 80274b2:	1c43      	adds	r3, r0, #1
 80274b4:	d102      	bne.n	80274bc <_fstat_r+0x1c>
 80274b6:	682b      	ldr	r3, [r5, #0]
 80274b8:	b103      	cbz	r3, 80274bc <_fstat_r+0x1c>
 80274ba:	6023      	str	r3, [r4, #0]
 80274bc:	bd38      	pop	{r3, r4, r5, pc}
 80274be:	bf00      	nop
 80274c0:	200008cc 	.word	0x200008cc

080274c4 <_isatty_r>:
 80274c4:	b538      	push	{r3, r4, r5, lr}
 80274c6:	4d06      	ldr	r5, [pc, #24]	; (80274e0 <_isatty_r+0x1c>)
 80274c8:	2300      	movs	r3, #0
 80274ca:	4604      	mov	r4, r0
 80274cc:	4608      	mov	r0, r1
 80274ce:	602b      	str	r3, [r5, #0]
 80274d0:	f7f6 feb7 	bl	801e242 <_isatty>
 80274d4:	1c43      	adds	r3, r0, #1
 80274d6:	d102      	bne.n	80274de <_isatty_r+0x1a>
 80274d8:	682b      	ldr	r3, [r5, #0]
 80274da:	b103      	cbz	r3, 80274de <_isatty_r+0x1a>
 80274dc:	6023      	str	r3, [r4, #0]
 80274de:	bd38      	pop	{r3, r4, r5, pc}
 80274e0:	200008cc 	.word	0x200008cc

080274e4 <_lseek_r>:
 80274e4:	b538      	push	{r3, r4, r5, lr}
 80274e6:	4d07      	ldr	r5, [pc, #28]	; (8027504 <_lseek_r+0x20>)
 80274e8:	4604      	mov	r4, r0
 80274ea:	4608      	mov	r0, r1
 80274ec:	4611      	mov	r1, r2
 80274ee:	2200      	movs	r2, #0
 80274f0:	602a      	str	r2, [r5, #0]
 80274f2:	461a      	mov	r2, r3
 80274f4:	f7f6 feb0 	bl	801e258 <_lseek>
 80274f8:	1c43      	adds	r3, r0, #1
 80274fa:	d102      	bne.n	8027502 <_lseek_r+0x1e>
 80274fc:	682b      	ldr	r3, [r5, #0]
 80274fe:	b103      	cbz	r3, 8027502 <_lseek_r+0x1e>
 8027500:	6023      	str	r3, [r4, #0]
 8027502:	bd38      	pop	{r3, r4, r5, pc}
 8027504:	200008cc 	.word	0x200008cc

08027508 <_read_r>:
 8027508:	b538      	push	{r3, r4, r5, lr}
 802750a:	4d07      	ldr	r5, [pc, #28]	; (8027528 <_read_r+0x20>)
 802750c:	4604      	mov	r4, r0
 802750e:	4608      	mov	r0, r1
 8027510:	4611      	mov	r1, r2
 8027512:	2200      	movs	r2, #0
 8027514:	602a      	str	r2, [r5, #0]
 8027516:	461a      	mov	r2, r3
 8027518:	f7f6 fe3e 	bl	801e198 <_read>
 802751c:	1c43      	adds	r3, r0, #1
 802751e:	d102      	bne.n	8027526 <_read_r+0x1e>
 8027520:	682b      	ldr	r3, [r5, #0]
 8027522:	b103      	cbz	r3, 8027526 <_read_r+0x1e>
 8027524:	6023      	str	r3, [r4, #0]
 8027526:	bd38      	pop	{r3, r4, r5, pc}
 8027528:	200008cc 	.word	0x200008cc

0802752c <_init>:
 802752c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802752e:	bf00      	nop
 8027530:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8027532:	bc08      	pop	{r3}
 8027534:	469e      	mov	lr, r3
 8027536:	4770      	bx	lr

08027538 <_fini>:
 8027538:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802753a:	bf00      	nop
 802753c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802753e:	bc08      	pop	{r3}
 8027540:	469e      	mov	lr, r3
 8027542:	4770      	bx	lr
