
Interpreter746.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00029254  080001d0  080001d0  000101d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000013dc  08029428  08029428  00039428  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0802a804  0802a804  000401e8  2**0
                  CONTENTS
  4 .ARM          00000008  0802a804  0802a804  0003a804  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0802a80c  0802a80c  000401e8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   0000003c  0802a80c  0802a80c  0003a80c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   0000003c  0802a848  0802a848  0003a848  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001e8  20000000  0802a884  00040000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000070c  200001e8  0802aa6c  000401e8  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200008f4  0802aa6c  000408f4  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000401e8  2**0
                  CONTENTS, READONLY
 12 .debug_info   0030ac94  00000000  00000000  00040218  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0001173b  00000000  00000000  0034aeac  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00010850  00000000  00000000  0035c5e8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000106a8  00000000  00000000  0036ce38  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0003202e  00000000  00000000  0037d4e0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00063ea4  00000000  00000000  003af50e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    001f9f6b  00000000  00000000  004133b2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  0060d31d  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00051640  00000000  00000000  0060d370  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	; (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	; (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	; (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	200001e8 	.word	0x200001e8
 80001ec:	00000000 	.word	0x00000000
 80001f0:	0802940c 	.word	0x0802940c

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	; (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	; (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	; (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	200001ec 	.word	0x200001ec
 800020c:	0802940c 	.word	0x0802940c

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <strlen>:
 80002b0:	4603      	mov	r3, r0
 80002b2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80002b6:	2a00      	cmp	r2, #0
 80002b8:	d1fb      	bne.n	80002b2 <strlen+0x2>
 80002ba:	1a18      	subs	r0, r3, r0
 80002bc:	3801      	subs	r0, #1
 80002be:	4770      	bx	lr

080002c0 <__aeabi_drsub>:
 80002c0:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80002c4:	e002      	b.n	80002cc <__adddf3>
 80002c6:	bf00      	nop

080002c8 <__aeabi_dsub>:
 80002c8:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080002cc <__adddf3>:
 80002cc:	b530      	push	{r4, r5, lr}
 80002ce:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002d2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002d6:	ea94 0f05 	teq	r4, r5
 80002da:	bf08      	it	eq
 80002dc:	ea90 0f02 	teqeq	r0, r2
 80002e0:	bf1f      	itttt	ne
 80002e2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002e6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ea:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ee:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002f2:	f000 80e2 	beq.w	80004ba <__adddf3+0x1ee>
 80002f6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002fa:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002fe:	bfb8      	it	lt
 8000300:	426d      	neglt	r5, r5
 8000302:	dd0c      	ble.n	800031e <__adddf3+0x52>
 8000304:	442c      	add	r4, r5
 8000306:	ea80 0202 	eor.w	r2, r0, r2
 800030a:	ea81 0303 	eor.w	r3, r1, r3
 800030e:	ea82 0000 	eor.w	r0, r2, r0
 8000312:	ea83 0101 	eor.w	r1, r3, r1
 8000316:	ea80 0202 	eor.w	r2, r0, r2
 800031a:	ea81 0303 	eor.w	r3, r1, r3
 800031e:	2d36      	cmp	r5, #54	; 0x36
 8000320:	bf88      	it	hi
 8000322:	bd30      	pophi	{r4, r5, pc}
 8000324:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000328:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800032c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000330:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000334:	d002      	beq.n	800033c <__adddf3+0x70>
 8000336:	4240      	negs	r0, r0
 8000338:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800033c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000340:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000344:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000348:	d002      	beq.n	8000350 <__adddf3+0x84>
 800034a:	4252      	negs	r2, r2
 800034c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000350:	ea94 0f05 	teq	r4, r5
 8000354:	f000 80a7 	beq.w	80004a6 <__adddf3+0x1da>
 8000358:	f1a4 0401 	sub.w	r4, r4, #1
 800035c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000360:	db0d      	blt.n	800037e <__adddf3+0xb2>
 8000362:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000366:	fa22 f205 	lsr.w	r2, r2, r5
 800036a:	1880      	adds	r0, r0, r2
 800036c:	f141 0100 	adc.w	r1, r1, #0
 8000370:	fa03 f20e 	lsl.w	r2, r3, lr
 8000374:	1880      	adds	r0, r0, r2
 8000376:	fa43 f305 	asr.w	r3, r3, r5
 800037a:	4159      	adcs	r1, r3
 800037c:	e00e      	b.n	800039c <__adddf3+0xd0>
 800037e:	f1a5 0520 	sub.w	r5, r5, #32
 8000382:	f10e 0e20 	add.w	lr, lr, #32
 8000386:	2a01      	cmp	r2, #1
 8000388:	fa03 fc0e 	lsl.w	ip, r3, lr
 800038c:	bf28      	it	cs
 800038e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000392:	fa43 f305 	asr.w	r3, r3, r5
 8000396:	18c0      	adds	r0, r0, r3
 8000398:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800039c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80003a0:	d507      	bpl.n	80003b2 <__adddf3+0xe6>
 80003a2:	f04f 0e00 	mov.w	lr, #0
 80003a6:	f1dc 0c00 	rsbs	ip, ip, #0
 80003aa:	eb7e 0000 	sbcs.w	r0, lr, r0
 80003ae:	eb6e 0101 	sbc.w	r1, lr, r1
 80003b2:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 80003b6:	d31b      	bcc.n	80003f0 <__adddf3+0x124>
 80003b8:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80003bc:	d30c      	bcc.n	80003d8 <__adddf3+0x10c>
 80003be:	0849      	lsrs	r1, r1, #1
 80003c0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003c4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003c8:	f104 0401 	add.w	r4, r4, #1
 80003cc:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003d0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003d4:	f080 809a 	bcs.w	800050c <__adddf3+0x240>
 80003d8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003dc:	bf08      	it	eq
 80003de:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003e2:	f150 0000 	adcs.w	r0, r0, #0
 80003e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ea:	ea41 0105 	orr.w	r1, r1, r5
 80003ee:	bd30      	pop	{r4, r5, pc}
 80003f0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003f4:	4140      	adcs	r0, r0
 80003f6:	eb41 0101 	adc.w	r1, r1, r1
 80003fa:	3c01      	subs	r4, #1
 80003fc:	bf28      	it	cs
 80003fe:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 8000402:	d2e9      	bcs.n	80003d8 <__adddf3+0x10c>
 8000404:	f091 0f00 	teq	r1, #0
 8000408:	bf04      	itt	eq
 800040a:	4601      	moveq	r1, r0
 800040c:	2000      	moveq	r0, #0
 800040e:	fab1 f381 	clz	r3, r1
 8000412:	bf08      	it	eq
 8000414:	3320      	addeq	r3, #32
 8000416:	f1a3 030b 	sub.w	r3, r3, #11
 800041a:	f1b3 0220 	subs.w	r2, r3, #32
 800041e:	da0c      	bge.n	800043a <__adddf3+0x16e>
 8000420:	320c      	adds	r2, #12
 8000422:	dd08      	ble.n	8000436 <__adddf3+0x16a>
 8000424:	f102 0c14 	add.w	ip, r2, #20
 8000428:	f1c2 020c 	rsb	r2, r2, #12
 800042c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000430:	fa21 f102 	lsr.w	r1, r1, r2
 8000434:	e00c      	b.n	8000450 <__adddf3+0x184>
 8000436:	f102 0214 	add.w	r2, r2, #20
 800043a:	bfd8      	it	le
 800043c:	f1c2 0c20 	rsble	ip, r2, #32
 8000440:	fa01 f102 	lsl.w	r1, r1, r2
 8000444:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000448:	bfdc      	itt	le
 800044a:	ea41 010c 	orrle.w	r1, r1, ip
 800044e:	4090      	lslle	r0, r2
 8000450:	1ae4      	subs	r4, r4, r3
 8000452:	bfa2      	ittt	ge
 8000454:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000458:	4329      	orrge	r1, r5
 800045a:	bd30      	popge	{r4, r5, pc}
 800045c:	ea6f 0404 	mvn.w	r4, r4
 8000460:	3c1f      	subs	r4, #31
 8000462:	da1c      	bge.n	800049e <__adddf3+0x1d2>
 8000464:	340c      	adds	r4, #12
 8000466:	dc0e      	bgt.n	8000486 <__adddf3+0x1ba>
 8000468:	f104 0414 	add.w	r4, r4, #20
 800046c:	f1c4 0220 	rsb	r2, r4, #32
 8000470:	fa20 f004 	lsr.w	r0, r0, r4
 8000474:	fa01 f302 	lsl.w	r3, r1, r2
 8000478:	ea40 0003 	orr.w	r0, r0, r3
 800047c:	fa21 f304 	lsr.w	r3, r1, r4
 8000480:	ea45 0103 	orr.w	r1, r5, r3
 8000484:	bd30      	pop	{r4, r5, pc}
 8000486:	f1c4 040c 	rsb	r4, r4, #12
 800048a:	f1c4 0220 	rsb	r2, r4, #32
 800048e:	fa20 f002 	lsr.w	r0, r0, r2
 8000492:	fa01 f304 	lsl.w	r3, r1, r4
 8000496:	ea40 0003 	orr.w	r0, r0, r3
 800049a:	4629      	mov	r1, r5
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	fa21 f004 	lsr.w	r0, r1, r4
 80004a2:	4629      	mov	r1, r5
 80004a4:	bd30      	pop	{r4, r5, pc}
 80004a6:	f094 0f00 	teq	r4, #0
 80004aa:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 80004ae:	bf06      	itte	eq
 80004b0:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 80004b4:	3401      	addeq	r4, #1
 80004b6:	3d01      	subne	r5, #1
 80004b8:	e74e      	b.n	8000358 <__adddf3+0x8c>
 80004ba:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004be:	bf18      	it	ne
 80004c0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004c4:	d029      	beq.n	800051a <__adddf3+0x24e>
 80004c6:	ea94 0f05 	teq	r4, r5
 80004ca:	bf08      	it	eq
 80004cc:	ea90 0f02 	teqeq	r0, r2
 80004d0:	d005      	beq.n	80004de <__adddf3+0x212>
 80004d2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004d6:	bf04      	itt	eq
 80004d8:	4619      	moveq	r1, r3
 80004da:	4610      	moveq	r0, r2
 80004dc:	bd30      	pop	{r4, r5, pc}
 80004de:	ea91 0f03 	teq	r1, r3
 80004e2:	bf1e      	ittt	ne
 80004e4:	2100      	movne	r1, #0
 80004e6:	2000      	movne	r0, #0
 80004e8:	bd30      	popne	{r4, r5, pc}
 80004ea:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ee:	d105      	bne.n	80004fc <__adddf3+0x230>
 80004f0:	0040      	lsls	r0, r0, #1
 80004f2:	4149      	adcs	r1, r1
 80004f4:	bf28      	it	cs
 80004f6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004fa:	bd30      	pop	{r4, r5, pc}
 80004fc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8000500:	bf3c      	itt	cc
 8000502:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8000506:	bd30      	popcc	{r4, r5, pc}
 8000508:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 800050c:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000510:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000514:	f04f 0000 	mov.w	r0, #0
 8000518:	bd30      	pop	{r4, r5, pc}
 800051a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800051e:	bf1a      	itte	ne
 8000520:	4619      	movne	r1, r3
 8000522:	4610      	movne	r0, r2
 8000524:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000528:	bf1c      	itt	ne
 800052a:	460b      	movne	r3, r1
 800052c:	4602      	movne	r2, r0
 800052e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000532:	bf06      	itte	eq
 8000534:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000538:	ea91 0f03 	teqeq	r1, r3
 800053c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000540:	bd30      	pop	{r4, r5, pc}
 8000542:	bf00      	nop

08000544 <__aeabi_ui2d>:
 8000544:	f090 0f00 	teq	r0, #0
 8000548:	bf04      	itt	eq
 800054a:	2100      	moveq	r1, #0
 800054c:	4770      	bxeq	lr
 800054e:	b530      	push	{r4, r5, lr}
 8000550:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000554:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000558:	f04f 0500 	mov.w	r5, #0
 800055c:	f04f 0100 	mov.w	r1, #0
 8000560:	e750      	b.n	8000404 <__adddf3+0x138>
 8000562:	bf00      	nop

08000564 <__aeabi_i2d>:
 8000564:	f090 0f00 	teq	r0, #0
 8000568:	bf04      	itt	eq
 800056a:	2100      	moveq	r1, #0
 800056c:	4770      	bxeq	lr
 800056e:	b530      	push	{r4, r5, lr}
 8000570:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000574:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000578:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800057c:	bf48      	it	mi
 800057e:	4240      	negmi	r0, r0
 8000580:	f04f 0100 	mov.w	r1, #0
 8000584:	e73e      	b.n	8000404 <__adddf3+0x138>
 8000586:	bf00      	nop

08000588 <__aeabi_f2d>:
 8000588:	0042      	lsls	r2, r0, #1
 800058a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800058e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000592:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000596:	bf1f      	itttt	ne
 8000598:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800059c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80005a0:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80005a4:	4770      	bxne	lr
 80005a6:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 80005aa:	bf08      	it	eq
 80005ac:	4770      	bxeq	lr
 80005ae:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 80005b2:	bf04      	itt	eq
 80005b4:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 80005b8:	4770      	bxeq	lr
 80005ba:	b530      	push	{r4, r5, lr}
 80005bc:	f44f 7460 	mov.w	r4, #896	; 0x380
 80005c0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80005c4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80005c8:	e71c      	b.n	8000404 <__adddf3+0x138>
 80005ca:	bf00      	nop

080005cc <__aeabi_ul2d>:
 80005cc:	ea50 0201 	orrs.w	r2, r0, r1
 80005d0:	bf08      	it	eq
 80005d2:	4770      	bxeq	lr
 80005d4:	b530      	push	{r4, r5, lr}
 80005d6:	f04f 0500 	mov.w	r5, #0
 80005da:	e00a      	b.n	80005f2 <__aeabi_l2d+0x16>

080005dc <__aeabi_l2d>:
 80005dc:	ea50 0201 	orrs.w	r2, r0, r1
 80005e0:	bf08      	it	eq
 80005e2:	4770      	bxeq	lr
 80005e4:	b530      	push	{r4, r5, lr}
 80005e6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005ea:	d502      	bpl.n	80005f2 <__aeabi_l2d+0x16>
 80005ec:	4240      	negs	r0, r0
 80005ee:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005f2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005f6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005fa:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005fe:	f43f aed8 	beq.w	80003b2 <__adddf3+0xe6>
 8000602:	f04f 0203 	mov.w	r2, #3
 8000606:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800060a:	bf18      	it	ne
 800060c:	3203      	addne	r2, #3
 800060e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000612:	bf18      	it	ne
 8000614:	3203      	addne	r2, #3
 8000616:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800061a:	f1c2 0320 	rsb	r3, r2, #32
 800061e:	fa00 fc03 	lsl.w	ip, r0, r3
 8000622:	fa20 f002 	lsr.w	r0, r0, r2
 8000626:	fa01 fe03 	lsl.w	lr, r1, r3
 800062a:	ea40 000e 	orr.w	r0, r0, lr
 800062e:	fa21 f102 	lsr.w	r1, r1, r2
 8000632:	4414      	add	r4, r2
 8000634:	e6bd      	b.n	80003b2 <__adddf3+0xe6>
 8000636:	bf00      	nop

08000638 <__aeabi_dmul>:
 8000638:	b570      	push	{r4, r5, r6, lr}
 800063a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800063e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000642:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000646:	bf1d      	ittte	ne
 8000648:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800064c:	ea94 0f0c 	teqne	r4, ip
 8000650:	ea95 0f0c 	teqne	r5, ip
 8000654:	f000 f8de 	bleq	8000814 <__aeabi_dmul+0x1dc>
 8000658:	442c      	add	r4, r5
 800065a:	ea81 0603 	eor.w	r6, r1, r3
 800065e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000662:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000666:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800066a:	bf18      	it	ne
 800066c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000670:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000674:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000678:	d038      	beq.n	80006ec <__aeabi_dmul+0xb4>
 800067a:	fba0 ce02 	umull	ip, lr, r0, r2
 800067e:	f04f 0500 	mov.w	r5, #0
 8000682:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000686:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800068a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800068e:	f04f 0600 	mov.w	r6, #0
 8000692:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000696:	f09c 0f00 	teq	ip, #0
 800069a:	bf18      	it	ne
 800069c:	f04e 0e01 	orrne.w	lr, lr, #1
 80006a0:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 80006a4:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 80006a8:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 80006ac:	d204      	bcs.n	80006b8 <__aeabi_dmul+0x80>
 80006ae:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80006b2:	416d      	adcs	r5, r5
 80006b4:	eb46 0606 	adc.w	r6, r6, r6
 80006b8:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80006bc:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006c0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006c4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006c8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006cc:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006d0:	bf88      	it	hi
 80006d2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006d6:	d81e      	bhi.n	8000716 <__aeabi_dmul+0xde>
 80006d8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006dc:	bf08      	it	eq
 80006de:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006e2:	f150 0000 	adcs.w	r0, r0, #0
 80006e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ea:	bd70      	pop	{r4, r5, r6, pc}
 80006ec:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006f0:	ea46 0101 	orr.w	r1, r6, r1
 80006f4:	ea40 0002 	orr.w	r0, r0, r2
 80006f8:	ea81 0103 	eor.w	r1, r1, r3
 80006fc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000700:	bfc2      	ittt	gt
 8000702:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000706:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800070a:	bd70      	popgt	{r4, r5, r6, pc}
 800070c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000710:	f04f 0e00 	mov.w	lr, #0
 8000714:	3c01      	subs	r4, #1
 8000716:	f300 80ab 	bgt.w	8000870 <__aeabi_dmul+0x238>
 800071a:	f114 0f36 	cmn.w	r4, #54	; 0x36
 800071e:	bfde      	ittt	le
 8000720:	2000      	movle	r0, #0
 8000722:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 8000726:	bd70      	pople	{r4, r5, r6, pc}
 8000728:	f1c4 0400 	rsb	r4, r4, #0
 800072c:	3c20      	subs	r4, #32
 800072e:	da35      	bge.n	800079c <__aeabi_dmul+0x164>
 8000730:	340c      	adds	r4, #12
 8000732:	dc1b      	bgt.n	800076c <__aeabi_dmul+0x134>
 8000734:	f104 0414 	add.w	r4, r4, #20
 8000738:	f1c4 0520 	rsb	r5, r4, #32
 800073c:	fa00 f305 	lsl.w	r3, r0, r5
 8000740:	fa20 f004 	lsr.w	r0, r0, r4
 8000744:	fa01 f205 	lsl.w	r2, r1, r5
 8000748:	ea40 0002 	orr.w	r0, r0, r2
 800074c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000750:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000754:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000758:	fa21 f604 	lsr.w	r6, r1, r4
 800075c:	eb42 0106 	adc.w	r1, r2, r6
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 040c 	rsb	r4, r4, #12
 8000770:	f1c4 0520 	rsb	r5, r4, #32
 8000774:	fa00 f304 	lsl.w	r3, r0, r4
 8000778:	fa20 f005 	lsr.w	r0, r0, r5
 800077c:	fa01 f204 	lsl.w	r2, r1, r4
 8000780:	ea40 0002 	orr.w	r0, r0, r2
 8000784:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000788:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800078c:	f141 0100 	adc.w	r1, r1, #0
 8000790:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000794:	bf08      	it	eq
 8000796:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800079a:	bd70      	pop	{r4, r5, r6, pc}
 800079c:	f1c4 0520 	rsb	r5, r4, #32
 80007a0:	fa00 f205 	lsl.w	r2, r0, r5
 80007a4:	ea4e 0e02 	orr.w	lr, lr, r2
 80007a8:	fa20 f304 	lsr.w	r3, r0, r4
 80007ac:	fa01 f205 	lsl.w	r2, r1, r5
 80007b0:	ea43 0302 	orr.w	r3, r3, r2
 80007b4:	fa21 f004 	lsr.w	r0, r1, r4
 80007b8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007bc:	fa21 f204 	lsr.w	r2, r1, r4
 80007c0:	ea20 0002 	bic.w	r0, r0, r2
 80007c4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007c8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007cc:	bf08      	it	eq
 80007ce:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007d2:	bd70      	pop	{r4, r5, r6, pc}
 80007d4:	f094 0f00 	teq	r4, #0
 80007d8:	d10f      	bne.n	80007fa <__aeabi_dmul+0x1c2>
 80007da:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007de:	0040      	lsls	r0, r0, #1
 80007e0:	eb41 0101 	adc.w	r1, r1, r1
 80007e4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007e8:	bf08      	it	eq
 80007ea:	3c01      	subeq	r4, #1
 80007ec:	d0f7      	beq.n	80007de <__aeabi_dmul+0x1a6>
 80007ee:	ea41 0106 	orr.w	r1, r1, r6
 80007f2:	f095 0f00 	teq	r5, #0
 80007f6:	bf18      	it	ne
 80007f8:	4770      	bxne	lr
 80007fa:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007fe:	0052      	lsls	r2, r2, #1
 8000800:	eb43 0303 	adc.w	r3, r3, r3
 8000804:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000808:	bf08      	it	eq
 800080a:	3d01      	subeq	r5, #1
 800080c:	d0f7      	beq.n	80007fe <__aeabi_dmul+0x1c6>
 800080e:	ea43 0306 	orr.w	r3, r3, r6
 8000812:	4770      	bx	lr
 8000814:	ea94 0f0c 	teq	r4, ip
 8000818:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800081c:	bf18      	it	ne
 800081e:	ea95 0f0c 	teqne	r5, ip
 8000822:	d00c      	beq.n	800083e <__aeabi_dmul+0x206>
 8000824:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000828:	bf18      	it	ne
 800082a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800082e:	d1d1      	bne.n	80007d4 <__aeabi_dmul+0x19c>
 8000830:	ea81 0103 	eor.w	r1, r1, r3
 8000834:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000838:	f04f 0000 	mov.w	r0, #0
 800083c:	bd70      	pop	{r4, r5, r6, pc}
 800083e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000842:	bf06      	itte	eq
 8000844:	4610      	moveq	r0, r2
 8000846:	4619      	moveq	r1, r3
 8000848:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800084c:	d019      	beq.n	8000882 <__aeabi_dmul+0x24a>
 800084e:	ea94 0f0c 	teq	r4, ip
 8000852:	d102      	bne.n	800085a <__aeabi_dmul+0x222>
 8000854:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000858:	d113      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800085a:	ea95 0f0c 	teq	r5, ip
 800085e:	d105      	bne.n	800086c <__aeabi_dmul+0x234>
 8000860:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000864:	bf1c      	itt	ne
 8000866:	4610      	movne	r0, r2
 8000868:	4619      	movne	r1, r3
 800086a:	d10a      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800086c:	ea81 0103 	eor.w	r1, r1, r3
 8000870:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000874:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000878:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800087c:	f04f 0000 	mov.w	r0, #0
 8000880:	bd70      	pop	{r4, r5, r6, pc}
 8000882:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000886:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800088a:	bd70      	pop	{r4, r5, r6, pc}

0800088c <__aeabi_ddiv>:
 800088c:	b570      	push	{r4, r5, r6, lr}
 800088e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000892:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000896:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800089a:	bf1d      	ittte	ne
 800089c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80008a0:	ea94 0f0c 	teqne	r4, ip
 80008a4:	ea95 0f0c 	teqne	r5, ip
 80008a8:	f000 f8a7 	bleq	80009fa <__aeabi_ddiv+0x16e>
 80008ac:	eba4 0405 	sub.w	r4, r4, r5
 80008b0:	ea81 0e03 	eor.w	lr, r1, r3
 80008b4:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008b8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80008bc:	f000 8088 	beq.w	80009d0 <__aeabi_ddiv+0x144>
 80008c0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008c4:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 80008c8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008cc:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008d0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008d4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008d8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008dc:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008e0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008e4:	429d      	cmp	r5, r3
 80008e6:	bf08      	it	eq
 80008e8:	4296      	cmpeq	r6, r2
 80008ea:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008ee:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008f2:	d202      	bcs.n	80008fa <__aeabi_ddiv+0x6e>
 80008f4:	085b      	lsrs	r3, r3, #1
 80008f6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fa:	1ab6      	subs	r6, r6, r2
 80008fc:	eb65 0503 	sbc.w	r5, r5, r3
 8000900:	085b      	lsrs	r3, r3, #1
 8000902:	ea4f 0232 	mov.w	r2, r2, rrx
 8000906:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 800090a:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000938:	085b      	lsrs	r3, r3, #1
 800093a:	ea4f 0232 	mov.w	r2, r2, rrx
 800093e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000942:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000946:	bf22      	ittt	cs
 8000948:	1ab6      	subcs	r6, r6, r2
 800094a:	4675      	movcs	r5, lr
 800094c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000950:	085b      	lsrs	r3, r3, #1
 8000952:	ea4f 0232 	mov.w	r2, r2, rrx
 8000956:	ebb6 0e02 	subs.w	lr, r6, r2
 800095a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800095e:	bf22      	ittt	cs
 8000960:	1ab6      	subcs	r6, r6, r2
 8000962:	4675      	movcs	r5, lr
 8000964:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000968:	ea55 0e06 	orrs.w	lr, r5, r6
 800096c:	d018      	beq.n	80009a0 <__aeabi_ddiv+0x114>
 800096e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000972:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000976:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800097a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800097e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000982:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000986:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800098a:	d1c0      	bne.n	800090e <__aeabi_ddiv+0x82>
 800098c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000990:	d10b      	bne.n	80009aa <__aeabi_ddiv+0x11e>
 8000992:	ea41 0100 	orr.w	r1, r1, r0
 8000996:	f04f 0000 	mov.w	r0, #0
 800099a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800099e:	e7b6      	b.n	800090e <__aeabi_ddiv+0x82>
 80009a0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80009a4:	bf04      	itt	eq
 80009a6:	4301      	orreq	r1, r0
 80009a8:	2000      	moveq	r0, #0
 80009aa:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80009ae:	bf88      	it	hi
 80009b0:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80009b4:	f63f aeaf 	bhi.w	8000716 <__aeabi_dmul+0xde>
 80009b8:	ebb5 0c03 	subs.w	ip, r5, r3
 80009bc:	bf04      	itt	eq
 80009be:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009c2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009c6:	f150 0000 	adcs.w	r0, r0, #0
 80009ca:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009ce:	bd70      	pop	{r4, r5, r6, pc}
 80009d0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009d4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009d8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009dc:	bfc2      	ittt	gt
 80009de:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009e2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009e6:	bd70      	popgt	{r4, r5, r6, pc}
 80009e8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009ec:	f04f 0e00 	mov.w	lr, #0
 80009f0:	3c01      	subs	r4, #1
 80009f2:	e690      	b.n	8000716 <__aeabi_dmul+0xde>
 80009f4:	ea45 0e06 	orr.w	lr, r5, r6
 80009f8:	e68d      	b.n	8000716 <__aeabi_dmul+0xde>
 80009fa:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009fe:	ea94 0f0c 	teq	r4, ip
 8000a02:	bf08      	it	eq
 8000a04:	ea95 0f0c 	teqeq	r5, ip
 8000a08:	f43f af3b 	beq.w	8000882 <__aeabi_dmul+0x24a>
 8000a0c:	ea94 0f0c 	teq	r4, ip
 8000a10:	d10a      	bne.n	8000a28 <__aeabi_ddiv+0x19c>
 8000a12:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000a16:	f47f af34 	bne.w	8000882 <__aeabi_dmul+0x24a>
 8000a1a:	ea95 0f0c 	teq	r5, ip
 8000a1e:	f47f af25 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a22:	4610      	mov	r0, r2
 8000a24:	4619      	mov	r1, r3
 8000a26:	e72c      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a28:	ea95 0f0c 	teq	r5, ip
 8000a2c:	d106      	bne.n	8000a3c <__aeabi_ddiv+0x1b0>
 8000a2e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a32:	f43f aefd 	beq.w	8000830 <__aeabi_dmul+0x1f8>
 8000a36:	4610      	mov	r0, r2
 8000a38:	4619      	mov	r1, r3
 8000a3a:	e722      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a3c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a40:	bf18      	it	ne
 8000a42:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a46:	f47f aec5 	bne.w	80007d4 <__aeabi_dmul+0x19c>
 8000a4a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a4e:	f47f af0d 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a52:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a56:	f47f aeeb 	bne.w	8000830 <__aeabi_dmul+0x1f8>
 8000a5a:	e712      	b.n	8000882 <__aeabi_dmul+0x24a>

08000a5c <__gedf2>:
 8000a5c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a60:	e006      	b.n	8000a70 <__cmpdf2+0x4>
 8000a62:	bf00      	nop

08000a64 <__ledf2>:
 8000a64:	f04f 0c01 	mov.w	ip, #1
 8000a68:	e002      	b.n	8000a70 <__cmpdf2+0x4>
 8000a6a:	bf00      	nop

08000a6c <__cmpdf2>:
 8000a6c:	f04f 0c01 	mov.w	ip, #1
 8000a70:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a74:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a78:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a7c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a80:	bf18      	it	ne
 8000a82:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a86:	d01b      	beq.n	8000ac0 <__cmpdf2+0x54>
 8000a88:	b001      	add	sp, #4
 8000a8a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a8e:	bf0c      	ite	eq
 8000a90:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a94:	ea91 0f03 	teqne	r1, r3
 8000a98:	bf02      	ittt	eq
 8000a9a:	ea90 0f02 	teqeq	r0, r2
 8000a9e:	2000      	moveq	r0, #0
 8000aa0:	4770      	bxeq	lr
 8000aa2:	f110 0f00 	cmn.w	r0, #0
 8000aa6:	ea91 0f03 	teq	r1, r3
 8000aaa:	bf58      	it	pl
 8000aac:	4299      	cmppl	r1, r3
 8000aae:	bf08      	it	eq
 8000ab0:	4290      	cmpeq	r0, r2
 8000ab2:	bf2c      	ite	cs
 8000ab4:	17d8      	asrcs	r0, r3, #31
 8000ab6:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000aba:	f040 0001 	orr.w	r0, r0, #1
 8000abe:	4770      	bx	lr
 8000ac0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000ac4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ac8:	d102      	bne.n	8000ad0 <__cmpdf2+0x64>
 8000aca:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000ace:	d107      	bne.n	8000ae0 <__cmpdf2+0x74>
 8000ad0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ad4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ad8:	d1d6      	bne.n	8000a88 <__cmpdf2+0x1c>
 8000ada:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000ade:	d0d3      	beq.n	8000a88 <__cmpdf2+0x1c>
 8000ae0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ae4:	4770      	bx	lr
 8000ae6:	bf00      	nop

08000ae8 <__aeabi_cdrcmple>:
 8000ae8:	4684      	mov	ip, r0
 8000aea:	4610      	mov	r0, r2
 8000aec:	4662      	mov	r2, ip
 8000aee:	468c      	mov	ip, r1
 8000af0:	4619      	mov	r1, r3
 8000af2:	4663      	mov	r3, ip
 8000af4:	e000      	b.n	8000af8 <__aeabi_cdcmpeq>
 8000af6:	bf00      	nop

08000af8 <__aeabi_cdcmpeq>:
 8000af8:	b501      	push	{r0, lr}
 8000afa:	f7ff ffb7 	bl	8000a6c <__cmpdf2>
 8000afe:	2800      	cmp	r0, #0
 8000b00:	bf48      	it	mi
 8000b02:	f110 0f00 	cmnmi.w	r0, #0
 8000b06:	bd01      	pop	{r0, pc}

08000b08 <__aeabi_dcmpeq>:
 8000b08:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b0c:	f7ff fff4 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b10:	bf0c      	ite	eq
 8000b12:	2001      	moveq	r0, #1
 8000b14:	2000      	movne	r0, #0
 8000b16:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b1a:	bf00      	nop

08000b1c <__aeabi_dcmplt>:
 8000b1c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b20:	f7ff ffea 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b24:	bf34      	ite	cc
 8000b26:	2001      	movcc	r0, #1
 8000b28:	2000      	movcs	r0, #0
 8000b2a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2e:	bf00      	nop

08000b30 <__aeabi_dcmple>:
 8000b30:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b34:	f7ff ffe0 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b38:	bf94      	ite	ls
 8000b3a:	2001      	movls	r0, #1
 8000b3c:	2000      	movhi	r0, #0
 8000b3e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b42:	bf00      	nop

08000b44 <__aeabi_dcmpge>:
 8000b44:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b48:	f7ff ffce 	bl	8000ae8 <__aeabi_cdrcmple>
 8000b4c:	bf94      	ite	ls
 8000b4e:	2001      	movls	r0, #1
 8000b50:	2000      	movhi	r0, #0
 8000b52:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b56:	bf00      	nop

08000b58 <__aeabi_dcmpgt>:
 8000b58:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b5c:	f7ff ffc4 	bl	8000ae8 <__aeabi_cdrcmple>
 8000b60:	bf34      	ite	cc
 8000b62:	2001      	movcc	r0, #1
 8000b64:	2000      	movcs	r0, #0
 8000b66:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b6a:	bf00      	nop

08000b6c <__aeabi_dcmpun>:
 8000b6c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b70:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b74:	d102      	bne.n	8000b7c <__aeabi_dcmpun+0x10>
 8000b76:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b7a:	d10a      	bne.n	8000b92 <__aeabi_dcmpun+0x26>
 8000b7c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b80:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b84:	d102      	bne.n	8000b8c <__aeabi_dcmpun+0x20>
 8000b86:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b8a:	d102      	bne.n	8000b92 <__aeabi_dcmpun+0x26>
 8000b8c:	f04f 0000 	mov.w	r0, #0
 8000b90:	4770      	bx	lr
 8000b92:	f04f 0001 	mov.w	r0, #1
 8000b96:	4770      	bx	lr

08000b98 <__aeabi_d2iz>:
 8000b98:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b9c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000ba0:	d215      	bcs.n	8000bce <__aeabi_d2iz+0x36>
 8000ba2:	d511      	bpl.n	8000bc8 <__aeabi_d2iz+0x30>
 8000ba4:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000ba8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bac:	d912      	bls.n	8000bd4 <__aeabi_d2iz+0x3c>
 8000bae:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bb2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000bb6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bba:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000bbe:	fa23 f002 	lsr.w	r0, r3, r2
 8000bc2:	bf18      	it	ne
 8000bc4:	4240      	negne	r0, r0
 8000bc6:	4770      	bx	lr
 8000bc8:	f04f 0000 	mov.w	r0, #0
 8000bcc:	4770      	bx	lr
 8000bce:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bd2:	d105      	bne.n	8000be0 <__aeabi_d2iz+0x48>
 8000bd4:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000bd8:	bf08      	it	eq
 8000bda:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000bde:	4770      	bx	lr
 8000be0:	f04f 0000 	mov.w	r0, #0
 8000be4:	4770      	bx	lr
 8000be6:	bf00      	nop

08000be8 <__aeabi_d2uiz>:
 8000be8:	004a      	lsls	r2, r1, #1
 8000bea:	d211      	bcs.n	8000c10 <__aeabi_d2uiz+0x28>
 8000bec:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000bf0:	d211      	bcs.n	8000c16 <__aeabi_d2uiz+0x2e>
 8000bf2:	d50d      	bpl.n	8000c10 <__aeabi_d2uiz+0x28>
 8000bf4:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000bf8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bfc:	d40e      	bmi.n	8000c1c <__aeabi_d2uiz+0x34>
 8000bfe:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c02:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000c06:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000c0a:	fa23 f002 	lsr.w	r0, r3, r2
 8000c0e:	4770      	bx	lr
 8000c10:	f04f 0000 	mov.w	r0, #0
 8000c14:	4770      	bx	lr
 8000c16:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000c1a:	d102      	bne.n	8000c22 <__aeabi_d2uiz+0x3a>
 8000c1c:	f04f 30ff 	mov.w	r0, #4294967295
 8000c20:	4770      	bx	lr
 8000c22:	f04f 0000 	mov.w	r0, #0
 8000c26:	4770      	bx	lr

08000c28 <__aeabi_d2f>:
 8000c28:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000c2c:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000c30:	bf24      	itt	cs
 8000c32:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000c36:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000c3a:	d90d      	bls.n	8000c58 <__aeabi_d2f+0x30>
 8000c3c:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000c40:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000c44:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000c48:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000c4c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000c50:	bf08      	it	eq
 8000c52:	f020 0001 	biceq.w	r0, r0, #1
 8000c56:	4770      	bx	lr
 8000c58:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000c5c:	d121      	bne.n	8000ca2 <__aeabi_d2f+0x7a>
 8000c5e:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000c62:	bfbc      	itt	lt
 8000c64:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000c68:	4770      	bxlt	lr
 8000c6a:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000c6e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c72:	f1c2 0218 	rsb	r2, r2, #24
 8000c76:	f1c2 0c20 	rsb	ip, r2, #32
 8000c7a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c7e:	fa20 f002 	lsr.w	r0, r0, r2
 8000c82:	bf18      	it	ne
 8000c84:	f040 0001 	orrne.w	r0, r0, #1
 8000c88:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c8c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c90:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c94:	ea40 000c 	orr.w	r0, r0, ip
 8000c98:	fa23 f302 	lsr.w	r3, r3, r2
 8000c9c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000ca0:	e7cc      	b.n	8000c3c <__aeabi_d2f+0x14>
 8000ca2:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000ca6:	d107      	bne.n	8000cb8 <__aeabi_d2f+0x90>
 8000ca8:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000cac:	bf1e      	ittt	ne
 8000cae:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000cb2:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000cb6:	4770      	bxne	lr
 8000cb8:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000cbc:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000cc0:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000cc4:	4770      	bx	lr
 8000cc6:	bf00      	nop

08000cc8 <__aeabi_uldivmod>:
 8000cc8:	b953      	cbnz	r3, 8000ce0 <__aeabi_uldivmod+0x18>
 8000cca:	b94a      	cbnz	r2, 8000ce0 <__aeabi_uldivmod+0x18>
 8000ccc:	2900      	cmp	r1, #0
 8000cce:	bf08      	it	eq
 8000cd0:	2800      	cmpeq	r0, #0
 8000cd2:	bf1c      	itt	ne
 8000cd4:	f04f 31ff 	movne.w	r1, #4294967295
 8000cd8:	f04f 30ff 	movne.w	r0, #4294967295
 8000cdc:	f000 b9a4 	b.w	8001028 <__aeabi_idiv0>
 8000ce0:	f1ad 0c08 	sub.w	ip, sp, #8
 8000ce4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000ce8:	f000 f83c 	bl	8000d64 <__udivmoddi4>
 8000cec:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000cf0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000cf4:	b004      	add	sp, #16
 8000cf6:	4770      	bx	lr

08000cf8 <__aeabi_d2lz>:
 8000cf8:	b538      	push	{r3, r4, r5, lr}
 8000cfa:	2200      	movs	r2, #0
 8000cfc:	2300      	movs	r3, #0
 8000cfe:	4604      	mov	r4, r0
 8000d00:	460d      	mov	r5, r1
 8000d02:	f7ff ff0b 	bl	8000b1c <__aeabi_dcmplt>
 8000d06:	b928      	cbnz	r0, 8000d14 <__aeabi_d2lz+0x1c>
 8000d08:	4620      	mov	r0, r4
 8000d0a:	4629      	mov	r1, r5
 8000d0c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000d10:	f000 b80a 	b.w	8000d28 <__aeabi_d2ulz>
 8000d14:	4620      	mov	r0, r4
 8000d16:	f105 4100 	add.w	r1, r5, #2147483648	; 0x80000000
 8000d1a:	f000 f805 	bl	8000d28 <__aeabi_d2ulz>
 8000d1e:	4240      	negs	r0, r0
 8000d20:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000d24:	bd38      	pop	{r3, r4, r5, pc}
 8000d26:	bf00      	nop

08000d28 <__aeabi_d2ulz>:
 8000d28:	b5d0      	push	{r4, r6, r7, lr}
 8000d2a:	4b0c      	ldr	r3, [pc, #48]	; (8000d5c <__aeabi_d2ulz+0x34>)
 8000d2c:	2200      	movs	r2, #0
 8000d2e:	4606      	mov	r6, r0
 8000d30:	460f      	mov	r7, r1
 8000d32:	f7ff fc81 	bl	8000638 <__aeabi_dmul>
 8000d36:	f7ff ff57 	bl	8000be8 <__aeabi_d2uiz>
 8000d3a:	4604      	mov	r4, r0
 8000d3c:	f7ff fc02 	bl	8000544 <__aeabi_ui2d>
 8000d40:	4b07      	ldr	r3, [pc, #28]	; (8000d60 <__aeabi_d2ulz+0x38>)
 8000d42:	2200      	movs	r2, #0
 8000d44:	f7ff fc78 	bl	8000638 <__aeabi_dmul>
 8000d48:	4602      	mov	r2, r0
 8000d4a:	460b      	mov	r3, r1
 8000d4c:	4630      	mov	r0, r6
 8000d4e:	4639      	mov	r1, r7
 8000d50:	f7ff faba 	bl	80002c8 <__aeabi_dsub>
 8000d54:	f7ff ff48 	bl	8000be8 <__aeabi_d2uiz>
 8000d58:	4621      	mov	r1, r4
 8000d5a:	bdd0      	pop	{r4, r6, r7, pc}
 8000d5c:	3df00000 	.word	0x3df00000
 8000d60:	41f00000 	.word	0x41f00000

08000d64 <__udivmoddi4>:
 8000d64:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000d68:	9d08      	ldr	r5, [sp, #32]
 8000d6a:	4604      	mov	r4, r0
 8000d6c:	468c      	mov	ip, r1
 8000d6e:	2b00      	cmp	r3, #0
 8000d70:	f040 8083 	bne.w	8000e7a <__udivmoddi4+0x116>
 8000d74:	428a      	cmp	r2, r1
 8000d76:	4617      	mov	r7, r2
 8000d78:	d947      	bls.n	8000e0a <__udivmoddi4+0xa6>
 8000d7a:	fab2 f282 	clz	r2, r2
 8000d7e:	b142      	cbz	r2, 8000d92 <__udivmoddi4+0x2e>
 8000d80:	f1c2 0020 	rsb	r0, r2, #32
 8000d84:	fa24 f000 	lsr.w	r0, r4, r0
 8000d88:	4091      	lsls	r1, r2
 8000d8a:	4097      	lsls	r7, r2
 8000d8c:	ea40 0c01 	orr.w	ip, r0, r1
 8000d90:	4094      	lsls	r4, r2
 8000d92:	ea4f 4817 	mov.w	r8, r7, lsr #16
 8000d96:	0c23      	lsrs	r3, r4, #16
 8000d98:	fbbc f6f8 	udiv	r6, ip, r8
 8000d9c:	fa1f fe87 	uxth.w	lr, r7
 8000da0:	fb08 c116 	mls	r1, r8, r6, ip
 8000da4:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000da8:	fb06 f10e 	mul.w	r1, r6, lr
 8000dac:	4299      	cmp	r1, r3
 8000dae:	d909      	bls.n	8000dc4 <__udivmoddi4+0x60>
 8000db0:	18fb      	adds	r3, r7, r3
 8000db2:	f106 30ff 	add.w	r0, r6, #4294967295
 8000db6:	f080 8119 	bcs.w	8000fec <__udivmoddi4+0x288>
 8000dba:	4299      	cmp	r1, r3
 8000dbc:	f240 8116 	bls.w	8000fec <__udivmoddi4+0x288>
 8000dc0:	3e02      	subs	r6, #2
 8000dc2:	443b      	add	r3, r7
 8000dc4:	1a5b      	subs	r3, r3, r1
 8000dc6:	b2a4      	uxth	r4, r4
 8000dc8:	fbb3 f0f8 	udiv	r0, r3, r8
 8000dcc:	fb08 3310 	mls	r3, r8, r0, r3
 8000dd0:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000dd4:	fb00 fe0e 	mul.w	lr, r0, lr
 8000dd8:	45a6      	cmp	lr, r4
 8000dda:	d909      	bls.n	8000df0 <__udivmoddi4+0x8c>
 8000ddc:	193c      	adds	r4, r7, r4
 8000dde:	f100 33ff 	add.w	r3, r0, #4294967295
 8000de2:	f080 8105 	bcs.w	8000ff0 <__udivmoddi4+0x28c>
 8000de6:	45a6      	cmp	lr, r4
 8000de8:	f240 8102 	bls.w	8000ff0 <__udivmoddi4+0x28c>
 8000dec:	3802      	subs	r0, #2
 8000dee:	443c      	add	r4, r7
 8000df0:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000df4:	eba4 040e 	sub.w	r4, r4, lr
 8000df8:	2600      	movs	r6, #0
 8000dfa:	b11d      	cbz	r5, 8000e04 <__udivmoddi4+0xa0>
 8000dfc:	40d4      	lsrs	r4, r2
 8000dfe:	2300      	movs	r3, #0
 8000e00:	e9c5 4300 	strd	r4, r3, [r5]
 8000e04:	4631      	mov	r1, r6
 8000e06:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000e0a:	b902      	cbnz	r2, 8000e0e <__udivmoddi4+0xaa>
 8000e0c:	deff      	udf	#255	; 0xff
 8000e0e:	fab2 f282 	clz	r2, r2
 8000e12:	2a00      	cmp	r2, #0
 8000e14:	d150      	bne.n	8000eb8 <__udivmoddi4+0x154>
 8000e16:	1bcb      	subs	r3, r1, r7
 8000e18:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000e1c:	fa1f f887 	uxth.w	r8, r7
 8000e20:	2601      	movs	r6, #1
 8000e22:	fbb3 fcfe 	udiv	ip, r3, lr
 8000e26:	0c21      	lsrs	r1, r4, #16
 8000e28:	fb0e 331c 	mls	r3, lr, ip, r3
 8000e2c:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000e30:	fb08 f30c 	mul.w	r3, r8, ip
 8000e34:	428b      	cmp	r3, r1
 8000e36:	d907      	bls.n	8000e48 <__udivmoddi4+0xe4>
 8000e38:	1879      	adds	r1, r7, r1
 8000e3a:	f10c 30ff 	add.w	r0, ip, #4294967295
 8000e3e:	d202      	bcs.n	8000e46 <__udivmoddi4+0xe2>
 8000e40:	428b      	cmp	r3, r1
 8000e42:	f200 80e9 	bhi.w	8001018 <__udivmoddi4+0x2b4>
 8000e46:	4684      	mov	ip, r0
 8000e48:	1ac9      	subs	r1, r1, r3
 8000e4a:	b2a3      	uxth	r3, r4
 8000e4c:	fbb1 f0fe 	udiv	r0, r1, lr
 8000e50:	fb0e 1110 	mls	r1, lr, r0, r1
 8000e54:	ea43 4401 	orr.w	r4, r3, r1, lsl #16
 8000e58:	fb08 f800 	mul.w	r8, r8, r0
 8000e5c:	45a0      	cmp	r8, r4
 8000e5e:	d907      	bls.n	8000e70 <__udivmoddi4+0x10c>
 8000e60:	193c      	adds	r4, r7, r4
 8000e62:	f100 33ff 	add.w	r3, r0, #4294967295
 8000e66:	d202      	bcs.n	8000e6e <__udivmoddi4+0x10a>
 8000e68:	45a0      	cmp	r8, r4
 8000e6a:	f200 80d9 	bhi.w	8001020 <__udivmoddi4+0x2bc>
 8000e6e:	4618      	mov	r0, r3
 8000e70:	eba4 0408 	sub.w	r4, r4, r8
 8000e74:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 8000e78:	e7bf      	b.n	8000dfa <__udivmoddi4+0x96>
 8000e7a:	428b      	cmp	r3, r1
 8000e7c:	d909      	bls.n	8000e92 <__udivmoddi4+0x12e>
 8000e7e:	2d00      	cmp	r5, #0
 8000e80:	f000 80b1 	beq.w	8000fe6 <__udivmoddi4+0x282>
 8000e84:	2600      	movs	r6, #0
 8000e86:	e9c5 0100 	strd	r0, r1, [r5]
 8000e8a:	4630      	mov	r0, r6
 8000e8c:	4631      	mov	r1, r6
 8000e8e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000e92:	fab3 f683 	clz	r6, r3
 8000e96:	2e00      	cmp	r6, #0
 8000e98:	d14a      	bne.n	8000f30 <__udivmoddi4+0x1cc>
 8000e9a:	428b      	cmp	r3, r1
 8000e9c:	d302      	bcc.n	8000ea4 <__udivmoddi4+0x140>
 8000e9e:	4282      	cmp	r2, r0
 8000ea0:	f200 80b8 	bhi.w	8001014 <__udivmoddi4+0x2b0>
 8000ea4:	1a84      	subs	r4, r0, r2
 8000ea6:	eb61 0103 	sbc.w	r1, r1, r3
 8000eaa:	2001      	movs	r0, #1
 8000eac:	468c      	mov	ip, r1
 8000eae:	2d00      	cmp	r5, #0
 8000eb0:	d0a8      	beq.n	8000e04 <__udivmoddi4+0xa0>
 8000eb2:	e9c5 4c00 	strd	r4, ip, [r5]
 8000eb6:	e7a5      	b.n	8000e04 <__udivmoddi4+0xa0>
 8000eb8:	f1c2 0320 	rsb	r3, r2, #32
 8000ebc:	fa20 f603 	lsr.w	r6, r0, r3
 8000ec0:	4097      	lsls	r7, r2
 8000ec2:	fa01 f002 	lsl.w	r0, r1, r2
 8000ec6:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000eca:	40d9      	lsrs	r1, r3
 8000ecc:	4330      	orrs	r0, r6
 8000ece:	0c03      	lsrs	r3, r0, #16
 8000ed0:	fbb1 f6fe 	udiv	r6, r1, lr
 8000ed4:	fa1f f887 	uxth.w	r8, r7
 8000ed8:	fb0e 1116 	mls	r1, lr, r6, r1
 8000edc:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000ee0:	fb06 f108 	mul.w	r1, r6, r8
 8000ee4:	4299      	cmp	r1, r3
 8000ee6:	fa04 f402 	lsl.w	r4, r4, r2
 8000eea:	d909      	bls.n	8000f00 <__udivmoddi4+0x19c>
 8000eec:	18fb      	adds	r3, r7, r3
 8000eee:	f106 3cff 	add.w	ip, r6, #4294967295
 8000ef2:	f080 808d 	bcs.w	8001010 <__udivmoddi4+0x2ac>
 8000ef6:	4299      	cmp	r1, r3
 8000ef8:	f240 808a 	bls.w	8001010 <__udivmoddi4+0x2ac>
 8000efc:	3e02      	subs	r6, #2
 8000efe:	443b      	add	r3, r7
 8000f00:	1a5b      	subs	r3, r3, r1
 8000f02:	b281      	uxth	r1, r0
 8000f04:	fbb3 f0fe 	udiv	r0, r3, lr
 8000f08:	fb0e 3310 	mls	r3, lr, r0, r3
 8000f0c:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000f10:	fb00 f308 	mul.w	r3, r0, r8
 8000f14:	428b      	cmp	r3, r1
 8000f16:	d907      	bls.n	8000f28 <__udivmoddi4+0x1c4>
 8000f18:	1879      	adds	r1, r7, r1
 8000f1a:	f100 3cff 	add.w	ip, r0, #4294967295
 8000f1e:	d273      	bcs.n	8001008 <__udivmoddi4+0x2a4>
 8000f20:	428b      	cmp	r3, r1
 8000f22:	d971      	bls.n	8001008 <__udivmoddi4+0x2a4>
 8000f24:	3802      	subs	r0, #2
 8000f26:	4439      	add	r1, r7
 8000f28:	1acb      	subs	r3, r1, r3
 8000f2a:	ea40 4606 	orr.w	r6, r0, r6, lsl #16
 8000f2e:	e778      	b.n	8000e22 <__udivmoddi4+0xbe>
 8000f30:	f1c6 0c20 	rsb	ip, r6, #32
 8000f34:	fa03 f406 	lsl.w	r4, r3, r6
 8000f38:	fa22 f30c 	lsr.w	r3, r2, ip
 8000f3c:	431c      	orrs	r4, r3
 8000f3e:	fa20 f70c 	lsr.w	r7, r0, ip
 8000f42:	fa01 f306 	lsl.w	r3, r1, r6
 8000f46:	ea4f 4e14 	mov.w	lr, r4, lsr #16
 8000f4a:	fa21 f10c 	lsr.w	r1, r1, ip
 8000f4e:	431f      	orrs	r7, r3
 8000f50:	0c3b      	lsrs	r3, r7, #16
 8000f52:	fbb1 f9fe 	udiv	r9, r1, lr
 8000f56:	fa1f f884 	uxth.w	r8, r4
 8000f5a:	fb0e 1119 	mls	r1, lr, r9, r1
 8000f5e:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
 8000f62:	fb09 fa08 	mul.w	sl, r9, r8
 8000f66:	458a      	cmp	sl, r1
 8000f68:	fa02 f206 	lsl.w	r2, r2, r6
 8000f6c:	fa00 f306 	lsl.w	r3, r0, r6
 8000f70:	d908      	bls.n	8000f84 <__udivmoddi4+0x220>
 8000f72:	1861      	adds	r1, r4, r1
 8000f74:	f109 30ff 	add.w	r0, r9, #4294967295
 8000f78:	d248      	bcs.n	800100c <__udivmoddi4+0x2a8>
 8000f7a:	458a      	cmp	sl, r1
 8000f7c:	d946      	bls.n	800100c <__udivmoddi4+0x2a8>
 8000f7e:	f1a9 0902 	sub.w	r9, r9, #2
 8000f82:	4421      	add	r1, r4
 8000f84:	eba1 010a 	sub.w	r1, r1, sl
 8000f88:	b2bf      	uxth	r7, r7
 8000f8a:	fbb1 f0fe 	udiv	r0, r1, lr
 8000f8e:	fb0e 1110 	mls	r1, lr, r0, r1
 8000f92:	ea47 4701 	orr.w	r7, r7, r1, lsl #16
 8000f96:	fb00 f808 	mul.w	r8, r0, r8
 8000f9a:	45b8      	cmp	r8, r7
 8000f9c:	d907      	bls.n	8000fae <__udivmoddi4+0x24a>
 8000f9e:	19e7      	adds	r7, r4, r7
 8000fa0:	f100 31ff 	add.w	r1, r0, #4294967295
 8000fa4:	d22e      	bcs.n	8001004 <__udivmoddi4+0x2a0>
 8000fa6:	45b8      	cmp	r8, r7
 8000fa8:	d92c      	bls.n	8001004 <__udivmoddi4+0x2a0>
 8000faa:	3802      	subs	r0, #2
 8000fac:	4427      	add	r7, r4
 8000fae:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 8000fb2:	eba7 0708 	sub.w	r7, r7, r8
 8000fb6:	fba0 8902 	umull	r8, r9, r0, r2
 8000fba:	454f      	cmp	r7, r9
 8000fbc:	46c6      	mov	lr, r8
 8000fbe:	4649      	mov	r1, r9
 8000fc0:	d31a      	bcc.n	8000ff8 <__udivmoddi4+0x294>
 8000fc2:	d017      	beq.n	8000ff4 <__udivmoddi4+0x290>
 8000fc4:	b15d      	cbz	r5, 8000fde <__udivmoddi4+0x27a>
 8000fc6:	ebb3 020e 	subs.w	r2, r3, lr
 8000fca:	eb67 0701 	sbc.w	r7, r7, r1
 8000fce:	fa07 fc0c 	lsl.w	ip, r7, ip
 8000fd2:	40f2      	lsrs	r2, r6
 8000fd4:	ea4c 0202 	orr.w	r2, ip, r2
 8000fd8:	40f7      	lsrs	r7, r6
 8000fda:	e9c5 2700 	strd	r2, r7, [r5]
 8000fde:	2600      	movs	r6, #0
 8000fe0:	4631      	mov	r1, r6
 8000fe2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000fe6:	462e      	mov	r6, r5
 8000fe8:	4628      	mov	r0, r5
 8000fea:	e70b      	b.n	8000e04 <__udivmoddi4+0xa0>
 8000fec:	4606      	mov	r6, r0
 8000fee:	e6e9      	b.n	8000dc4 <__udivmoddi4+0x60>
 8000ff0:	4618      	mov	r0, r3
 8000ff2:	e6fd      	b.n	8000df0 <__udivmoddi4+0x8c>
 8000ff4:	4543      	cmp	r3, r8
 8000ff6:	d2e5      	bcs.n	8000fc4 <__udivmoddi4+0x260>
 8000ff8:	ebb8 0e02 	subs.w	lr, r8, r2
 8000ffc:	eb69 0104 	sbc.w	r1, r9, r4
 8001000:	3801      	subs	r0, #1
 8001002:	e7df      	b.n	8000fc4 <__udivmoddi4+0x260>
 8001004:	4608      	mov	r0, r1
 8001006:	e7d2      	b.n	8000fae <__udivmoddi4+0x24a>
 8001008:	4660      	mov	r0, ip
 800100a:	e78d      	b.n	8000f28 <__udivmoddi4+0x1c4>
 800100c:	4681      	mov	r9, r0
 800100e:	e7b9      	b.n	8000f84 <__udivmoddi4+0x220>
 8001010:	4666      	mov	r6, ip
 8001012:	e775      	b.n	8000f00 <__udivmoddi4+0x19c>
 8001014:	4630      	mov	r0, r6
 8001016:	e74a      	b.n	8000eae <__udivmoddi4+0x14a>
 8001018:	f1ac 0c02 	sub.w	ip, ip, #2
 800101c:	4439      	add	r1, r7
 800101e:	e713      	b.n	8000e48 <__udivmoddi4+0xe4>
 8001020:	3802      	subs	r0, #2
 8001022:	443c      	add	r4, r7
 8001024:	e724      	b.n	8000e70 <__udivmoddi4+0x10c>
 8001026:	bf00      	nop

08001028 <__aeabi_idiv0>:
 8001028:	4770      	bx	lr
 800102a:	bf00      	nop

0800102c <_ZNSt11char_traitsIcE6lengthEPKc>:
#endif
	return __builtin_memcmp(__s1, __s2, __n);
      }

      static _GLIBCXX17_CONSTEXPR size_t
      length(const char_type* __s)
 800102c:	b580      	push	{r7, lr}
 800102e:	b084      	sub	sp, #16
 8001030:	af00      	add	r7, sp, #0
 8001032:	6078      	str	r0, [r7, #4]
 8001034:	687b      	ldr	r3, [r7, #4]
 8001036:	60fb      	str	r3, [r7, #12]
      return __builtin_is_constant_evaluated();
 8001038:	2300      	movs	r3, #0
      {
#if __cplusplus >= 201703L
	if (__constant_string_p(__s))
 800103a:	2b00      	cmp	r3, #0
 800103c:	d004      	beq.n	8001048 <_ZNSt11char_traitsIcE6lengthEPKc+0x1c>
	  return __gnu_cxx::char_traits<char_type>::length(__s);
 800103e:	6878      	ldr	r0, [r7, #4]
 8001040:	f000 fe30 	bl	8001ca4 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>
 8001044:	4603      	mov	r3, r0
 8001046:	e004      	b.n	8001052 <_ZNSt11char_traitsIcE6lengthEPKc+0x26>
#endif
	return __builtin_strlen(__s);
 8001048:	6878      	ldr	r0, [r7, #4]
 800104a:	f7ff f931 	bl	80002b0 <strlen>
 800104e:	4603      	mov	r3, r0
 8001050:	bf00      	nop
      }
 8001052:	4618      	mov	r0, r3
 8001054:	3710      	adds	r7, #16
 8001056:	46bd      	mov	sp, r7
 8001058:	bd80      	pop	{r7, pc}

0800105a <_ZnwjPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
_GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
 800105a:	b480      	push	{r7}
 800105c:	b083      	sub	sp, #12
 800105e:	af00      	add	r7, sp, #0
 8001060:	6078      	str	r0, [r7, #4]
 8001062:	6039      	str	r1, [r7, #0]
 8001064:	683b      	ldr	r3, [r7, #0]
 8001066:	4618      	mov	r0, r3
 8001068:	370c      	adds	r7, #12
 800106a:	46bd      	mov	sp, r7
 800106c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001070:	4770      	bx	lr

08001072 <_ZSt26__throw_bad_variant_accessPKc>:
    friend void __throw_bad_variant_access(const char* __what);
  };

  inline void
  __throw_bad_variant_access(const char* __what)
  { _GLIBCXX_THROW_OR_ABORT(bad_variant_access(__what)); }
 8001072:	b580      	push	{r7, lr}
 8001074:	b082      	sub	sp, #8
 8001076:	af00      	add	r7, sp, #0
 8001078:	6078      	str	r0, [r7, #4]
 800107a:	f023 fe7b 	bl	8024d74 <abort>

0800107e <_ZNSt15_Rb_tree_headerC1Ev>:
  struct _Rb_tree_header
  {
    _Rb_tree_node_base	_M_header;
    size_t		_M_node_count; // Keeps track of size of tree.

    _Rb_tree_header() _GLIBCXX_NOEXCEPT
 800107e:	b580      	push	{r7, lr}
 8001080:	b082      	sub	sp, #8
 8001082:	af00      	add	r7, sp, #0
 8001084:	6078      	str	r0, [r7, #4]
    {
      _M_header._M_color = _S_red;
 8001086:	687b      	ldr	r3, [r7, #4]
 8001088:	2200      	movs	r2, #0
 800108a:	701a      	strb	r2, [r3, #0]
      _M_reset();
 800108c:	6878      	ldr	r0, [r7, #4]
 800108e:	f000 f805 	bl	800109c <_ZNSt15_Rb_tree_header8_M_resetEv>
    }
 8001092:	687b      	ldr	r3, [r7, #4]
 8001094:	4618      	mov	r0, r3
 8001096:	3708      	adds	r7, #8
 8001098:	46bd      	mov	sp, r7
 800109a:	bd80      	pop	{r7, pc}

0800109c <_ZNSt15_Rb_tree_header8_M_resetEv>:

      __from._M_reset();
    }

    void
    _M_reset()
 800109c:	b480      	push	{r7}
 800109e:	b083      	sub	sp, #12
 80010a0:	af00      	add	r7, sp, #0
 80010a2:	6078      	str	r0, [r7, #4]
    {
      _M_header._M_parent = 0;
 80010a4:	687b      	ldr	r3, [r7, #4]
 80010a6:	2200      	movs	r2, #0
 80010a8:	605a      	str	r2, [r3, #4]
      _M_header._M_left = &_M_header;
 80010aa:	687a      	ldr	r2, [r7, #4]
 80010ac:	687b      	ldr	r3, [r7, #4]
 80010ae:	609a      	str	r2, [r3, #8]
      _M_header._M_right = &_M_header;
 80010b0:	687a      	ldr	r2, [r7, #4]
 80010b2:	687b      	ldr	r3, [r7, #4]
 80010b4:	60da      	str	r2, [r3, #12]
      _M_node_count = 0;
 80010b6:	687b      	ldr	r3, [r7, #4]
 80010b8:	2200      	movs	r2, #0
 80010ba:	611a      	str	r2, [r3, #16]
    }
 80010bc:	bf00      	nop
 80010be:	370c      	adds	r7, #12
 80010c0:	46bd      	mov	sp, r7
 80010c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010c6:	4770      	bx	lr

080010c8 <_ZSt7forwardI10token_typeEOT_RNSt16remove_referenceIS1_E4typeE>:
   *
   *  This function is used to implement "perfect forwarding".
   */
  template<typename _Tp>
    constexpr _Tp&&
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80010c8:	b480      	push	{r7}
 80010ca:	b083      	sub	sp, #12
 80010cc:	af00      	add	r7, sp, #0
 80010ce:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80010d0:	687b      	ldr	r3, [r7, #4]
 80010d2:	4618      	mov	r0, r3
 80010d4:	370c      	adds	r7, #12
 80010d6:	46bd      	mov	sp, r7
 80010d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010dc:	4770      	bx	lr

080010de <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>:
   *
   *  @tparam _T1  Type of first object.
   *  @tparam _T2  Type of second object.
   */
  template<typename _T1, typename _T2>
    struct pair
 80010de:	b580      	push	{r7, lr}
 80010e0:	b082      	sub	sp, #8
 80010e2:	af00      	add	r7, sp, #0
 80010e4:	6078      	str	r0, [r7, #4]
 80010e6:	687b      	ldr	r3, [r7, #4]
 80010e8:	4618      	mov	r0, r3
 80010ea:	f022 fca6 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80010ee:	687b      	ldr	r3, [r7, #4]
 80010f0:	4618      	mov	r0, r3
 80010f2:	3708      	adds	r7, #8
 80010f4:	46bd      	mov	sp, r7
 80010f6:	bd80      	pop	{r7, pc}

080010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>:
	       enable_if<_PCCP::template
			   _MoveConstructiblePair<_U1, _U2>()
			  && _PCCP::template
			   _ImplicitlyMoveConvertiblePair<_U1, _U2>(),
                         bool>::type=true>
	constexpr pair(_U1&& __x, _U2&& __y)
 80010f8:	b5b0      	push	{r4, r5, r7, lr}
 80010fa:	b086      	sub	sp, #24
 80010fc:	af00      	add	r7, sp, #0
 80010fe:	60f8      	str	r0, [r7, #12]
 8001100:	60b9      	str	r1, [r7, #8]
 8001102:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 8001104:	68fc      	ldr	r4, [r7, #12]
 8001106:	68b8      	ldr	r0, [r7, #8]
 8001108:	f000 fe34 	bl	8001d74 <_ZSt7forwardIRA5_KcEOT_RNSt16remove_referenceIS3_E4typeE>
 800110c:	4605      	mov	r5, r0
 800110e:	f107 0314 	add.w	r3, r7, #20
 8001112:	4618      	mov	r0, r3
 8001114:	f022 fa00 	bl	8023518 <_ZNSaIcEC1Ev>
 8001118:	f107 0314 	add.w	r3, r7, #20
 800111c:	461a      	mov	r2, r3
 800111e:	4629      	mov	r1, r5
 8001120:	4620      	mov	r0, r4
 8001122:	f000 fe32 	bl	8001d8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8001126:	f107 0314 	add.w	r3, r7, #20
 800112a:	4618      	mov	r0, r3
 800112c:	f022 f9f5 	bl	802351a <_ZNSaIcED1Ev>
 8001130:	6878      	ldr	r0, [r7, #4]
 8001132:	f7ff ffc9 	bl	80010c8 <_ZSt7forwardI10token_typeEOT_RNSt16remove_referenceIS1_E4typeE>
 8001136:	4603      	mov	r3, r0
 8001138:	781a      	ldrb	r2, [r3, #0]
 800113a:	68fb      	ldr	r3, [r7, #12]
 800113c:	761a      	strb	r2, [r3, #24]
 800113e:	68fb      	ldr	r3, [r7, #12]
 8001140:	4618      	mov	r0, r3
 8001142:	3718      	adds	r7, #24
 8001144:	46bd      	mov	sp, r7
 8001146:	bdb0      	pop	{r4, r5, r7, pc}

08001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 8001148:	b5b0      	push	{r4, r5, r7, lr}
 800114a:	b086      	sub	sp, #24
 800114c:	af00      	add	r7, sp, #0
 800114e:	60f8      	str	r0, [r7, #12]
 8001150:	60b9      	str	r1, [r7, #8]
 8001152:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 8001154:	68fc      	ldr	r4, [r7, #12]
 8001156:	68b8      	ldr	r0, [r7, #8]
 8001158:	f000 fe3d 	bl	8001dd6 <_ZSt7forwardIRA6_KcEOT_RNSt16remove_referenceIS3_E4typeE>
 800115c:	4605      	mov	r5, r0
 800115e:	f107 0314 	add.w	r3, r7, #20
 8001162:	4618      	mov	r0, r3
 8001164:	f022 f9d8 	bl	8023518 <_ZNSaIcEC1Ev>
 8001168:	f107 0314 	add.w	r3, r7, #20
 800116c:	461a      	mov	r2, r3
 800116e:	4629      	mov	r1, r5
 8001170:	4620      	mov	r0, r4
 8001172:	f000 fe0a 	bl	8001d8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8001176:	f107 0314 	add.w	r3, r7, #20
 800117a:	4618      	mov	r0, r3
 800117c:	f022 f9cd 	bl	802351a <_ZNSaIcED1Ev>
 8001180:	6878      	ldr	r0, [r7, #4]
 8001182:	f7ff ffa1 	bl	80010c8 <_ZSt7forwardI10token_typeEOT_RNSt16remove_referenceIS1_E4typeE>
 8001186:	4603      	mov	r3, r0
 8001188:	781a      	ldrb	r2, [r3, #0]
 800118a:	68fb      	ldr	r3, [r7, #12]
 800118c:	761a      	strb	r2, [r3, #24]
 800118e:	68fb      	ldr	r3, [r7, #12]
 8001190:	4618      	mov	r0, r3
 8001192:	3718      	adds	r7, #24
 8001194:	46bd      	mov	sp, r7
 8001196:	bdb0      	pop	{r4, r5, r7, pc}

08001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 8001198:	b5b0      	push	{r4, r5, r7, lr}
 800119a:	b086      	sub	sp, #24
 800119c:	af00      	add	r7, sp, #0
 800119e:	60f8      	str	r0, [r7, #12]
 80011a0:	60b9      	str	r1, [r7, #8]
 80011a2:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 80011a4:	68fc      	ldr	r4, [r7, #12]
 80011a6:	68b8      	ldr	r0, [r7, #8]
 80011a8:	f000 fe20 	bl	8001dec <_ZSt7forwardIRA7_KcEOT_RNSt16remove_referenceIS3_E4typeE>
 80011ac:	4605      	mov	r5, r0
 80011ae:	f107 0314 	add.w	r3, r7, #20
 80011b2:	4618      	mov	r0, r3
 80011b4:	f022 f9b0 	bl	8023518 <_ZNSaIcEC1Ev>
 80011b8:	f107 0314 	add.w	r3, r7, #20
 80011bc:	461a      	mov	r2, r3
 80011be:	4629      	mov	r1, r5
 80011c0:	4620      	mov	r0, r4
 80011c2:	f000 fde2 	bl	8001d8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 80011c6:	f107 0314 	add.w	r3, r7, #20
 80011ca:	4618      	mov	r0, r3
 80011cc:	f022 f9a5 	bl	802351a <_ZNSaIcED1Ev>
 80011d0:	6878      	ldr	r0, [r7, #4]
 80011d2:	f7ff ff79 	bl	80010c8 <_ZSt7forwardI10token_typeEOT_RNSt16remove_referenceIS1_E4typeE>
 80011d6:	4603      	mov	r3, r0
 80011d8:	781a      	ldrb	r2, [r3, #0]
 80011da:	68fb      	ldr	r3, [r7, #12]
 80011dc:	761a      	strb	r2, [r3, #24]
 80011de:	68fb      	ldr	r3, [r7, #12]
 80011e0:	4618      	mov	r0, r3
 80011e2:	3718      	adds	r7, #24
 80011e4:	46bd      	mov	sp, r7
 80011e6:	bdb0      	pop	{r4, r5, r7, pc}

080011e8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 80011e8:	b5b0      	push	{r4, r5, r7, lr}
 80011ea:	b086      	sub	sp, #24
 80011ec:	af00      	add	r7, sp, #0
 80011ee:	60f8      	str	r0, [r7, #12]
 80011f0:	60b9      	str	r1, [r7, #8]
 80011f2:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 80011f4:	68fc      	ldr	r4, [r7, #12]
 80011f6:	68b8      	ldr	r0, [r7, #8]
 80011f8:	f000 fe03 	bl	8001e02 <_ZSt7forwardIRA3_KcEOT_RNSt16remove_referenceIS3_E4typeE>
 80011fc:	4605      	mov	r5, r0
 80011fe:	f107 0314 	add.w	r3, r7, #20
 8001202:	4618      	mov	r0, r3
 8001204:	f022 f988 	bl	8023518 <_ZNSaIcEC1Ev>
 8001208:	f107 0314 	add.w	r3, r7, #20
 800120c:	461a      	mov	r2, r3
 800120e:	4629      	mov	r1, r5
 8001210:	4620      	mov	r0, r4
 8001212:	f000 fdba 	bl	8001d8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8001216:	f107 0314 	add.w	r3, r7, #20
 800121a:	4618      	mov	r0, r3
 800121c:	f022 f97d 	bl	802351a <_ZNSaIcED1Ev>
 8001220:	6878      	ldr	r0, [r7, #4]
 8001222:	f7ff ff51 	bl	80010c8 <_ZSt7forwardI10token_typeEOT_RNSt16remove_referenceIS1_E4typeE>
 8001226:	4603      	mov	r3, r0
 8001228:	781a      	ldrb	r2, [r3, #0]
 800122a:	68fb      	ldr	r3, [r7, #12]
 800122c:	761a      	strb	r2, [r3, #24]
 800122e:	68fb      	ldr	r3, [r7, #12]
 8001230:	4618      	mov	r0, r3
 8001232:	3718      	adds	r7, #24
 8001234:	46bd      	mov	sp, r7
 8001236:	bdb0      	pop	{r4, r5, r7, pc}

08001238 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 8001238:	b5b0      	push	{r4, r5, r7, lr}
 800123a:	b086      	sub	sp, #24
 800123c:	af00      	add	r7, sp, #0
 800123e:	60f8      	str	r0, [r7, #12]
 8001240:	60b9      	str	r1, [r7, #8]
 8001242:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 8001244:	68fc      	ldr	r4, [r7, #12]
 8001246:	68b8      	ldr	r0, [r7, #8]
 8001248:	f000 fde6 	bl	8001e18 <_ZSt7forwardIRA4_KcEOT_RNSt16remove_referenceIS3_E4typeE>
 800124c:	4605      	mov	r5, r0
 800124e:	f107 0314 	add.w	r3, r7, #20
 8001252:	4618      	mov	r0, r3
 8001254:	f022 f960 	bl	8023518 <_ZNSaIcEC1Ev>
 8001258:	f107 0314 	add.w	r3, r7, #20
 800125c:	461a      	mov	r2, r3
 800125e:	4629      	mov	r1, r5
 8001260:	4620      	mov	r0, r4
 8001262:	f000 fd92 	bl	8001d8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8001266:	f107 0314 	add.w	r3, r7, #20
 800126a:	4618      	mov	r0, r3
 800126c:	f022 f955 	bl	802351a <_ZNSaIcED1Ev>
 8001270:	6878      	ldr	r0, [r7, #4]
 8001272:	f7ff ff29 	bl	80010c8 <_ZSt7forwardI10token_typeEOT_RNSt16remove_referenceIS1_E4typeE>
 8001276:	4603      	mov	r3, r0
 8001278:	781a      	ldrb	r2, [r3, #0]
 800127a:	68fb      	ldr	r3, [r7, #12]
 800127c:	761a      	strb	r2, [r3, #24]
 800127e:	68fb      	ldr	r3, [r7, #12]
 8001280:	4618      	mov	r0, r3
 8001282:	3718      	adds	r7, #24
 8001284:	46bd      	mov	sp, r7
 8001286:	bdb0      	pop	{r4, r5, r7, pc}

08001288 <_ZN9__gnu_cxx14__alloc_traitsISaI6SymbolES1_E15_S_always_equalEv>:
    { return _Base_type::propagate_on_container_move_assignment::value; }

    static constexpr bool _S_propagate_on_swap()
    { return _Base_type::propagate_on_container_swap::value; }

    static constexpr bool _S_always_equal()
 8001288:	b480      	push	{r7}
 800128a:	af00      	add	r7, sp, #0
    { return _Base_type::is_always_equal::value; }
 800128c:	2301      	movs	r3, #1
 800128e:	4618      	mov	r0, r3
 8001290:	46bd      	mov	sp, r7
 8001292:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001296:	4770      	bx	lr

08001298 <_ZN8ExecutorC1Ev>:
#include <Executor.h>

Executor::Executor()
 8001298:	b480      	push	{r7}
 800129a:	b083      	sub	sp, #12
 800129c:	af00      	add	r7, sp, #0
 800129e:	6078      	str	r0, [r7, #4]
{

}
 80012a0:	687b      	ldr	r3, [r7, #4]
 80012a2:	4618      	mov	r0, r3
 80012a4:	370c      	adds	r7, #12
 80012a6:	46bd      	mov	sp, r7
 80012a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80012ac:	4770      	bx	lr
	...

080012b0 <_ZN8Executor12get_instanceEv>:

Executor& Executor::get_instance()
{
 80012b0:	b580      	push	{r7, lr}
 80012b2:	af00      	add	r7, sp, #0
	static Executor instance;
 80012b4:	4b10      	ldr	r3, [pc, #64]	; (80012f8 <_ZN8Executor12get_instanceEv+0x48>)
 80012b6:	781b      	ldrb	r3, [r3, #0]
 80012b8:	f3bf 8f5b 	dmb	ish
 80012bc:	b2db      	uxtb	r3, r3
 80012be:	f003 0301 	and.w	r3, r3, #1
 80012c2:	2b00      	cmp	r3, #0
 80012c4:	bf0c      	ite	eq
 80012c6:	2301      	moveq	r3, #1
 80012c8:	2300      	movne	r3, #0
 80012ca:	b2db      	uxtb	r3, r3
 80012cc:	2b00      	cmp	r3, #0
 80012ce:	d010      	beq.n	80012f2 <_ZN8Executor12get_instanceEv+0x42>
 80012d0:	4809      	ldr	r0, [pc, #36]	; (80012f8 <_ZN8Executor12get_instanceEv+0x48>)
 80012d2:	f022 f901 	bl	80234d8 <__cxa_guard_acquire>
 80012d6:	4603      	mov	r3, r0
 80012d8:	2b00      	cmp	r3, #0
 80012da:	bf14      	ite	ne
 80012dc:	2301      	movne	r3, #1
 80012de:	2300      	moveq	r3, #0
 80012e0:	b2db      	uxtb	r3, r3
 80012e2:	2b00      	cmp	r3, #0
 80012e4:	d005      	beq.n	80012f2 <_ZN8Executor12get_instanceEv+0x42>
 80012e6:	4805      	ldr	r0, [pc, #20]	; (80012fc <_ZN8Executor12get_instanceEv+0x4c>)
 80012e8:	f7ff ffd6 	bl	8001298 <_ZN8ExecutorC1Ev>
 80012ec:	4802      	ldr	r0, [pc, #8]	; (80012f8 <_ZN8Executor12get_instanceEv+0x48>)
 80012ee:	f022 f8ff 	bl	80234f0 <__cxa_guard_release>
	return instance;
 80012f2:	4b02      	ldr	r3, [pc, #8]	; (80012fc <_ZN8Executor12get_instanceEv+0x4c>)
}
 80012f4:	4618      	mov	r0, r3
 80012f6:	bd80      	pop	{r7, pc}
 80012f8:	20000250 	.word	0x20000250
 80012fc:	2000024c 	.word	0x2000024c

08001300 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEED1Ev>:
    struct _Copy_ctor_base : _Variant_storage_alias<_Types...>
 8001300:	b580      	push	{r7, lr}
 8001302:	b082      	sub	sp, #8
 8001304:	af00      	add	r7, sp, #0
 8001306:	6078      	str	r0, [r7, #4]
 8001308:	687b      	ldr	r3, [r7, #4]
 800130a:	4618      	mov	r0, r3
 800130c:	f000 fe1f 	bl	8001f4e <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEED1Ev>
 8001310:	687b      	ldr	r3, [r7, #4]
 8001312:	4618      	mov	r0, r3
 8001314:	3708      	adds	r7, #8
 8001316:	46bd      	mov	sp, r7
 8001318:	bd80      	pop	{r7, pc}

0800131a <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEED1Ev>:
    struct _Move_ctor_base : _Copy_ctor_alias<_Types...>
 800131a:	b580      	push	{r7, lr}
 800131c:	b082      	sub	sp, #8
 800131e:	af00      	add	r7, sp, #0
 8001320:	6078      	str	r0, [r7, #4]
 8001322:	687b      	ldr	r3, [r7, #4]
 8001324:	4618      	mov	r0, r3
 8001326:	f7ff ffeb 	bl	8001300 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEED1Ev>
 800132a:	687b      	ldr	r3, [r7, #4]
 800132c:	4618      	mov	r0, r3
 800132e:	3708      	adds	r7, #8
 8001330:	46bd      	mov	sp, r7
 8001332:	bd80      	pop	{r7, pc}

08001334 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEED1Ev>:
    struct _Copy_assign_base : _Move_ctor_alias<_Types...>
 8001334:	b580      	push	{r7, lr}
 8001336:	b082      	sub	sp, #8
 8001338:	af00      	add	r7, sp, #0
 800133a:	6078      	str	r0, [r7, #4]
 800133c:	687b      	ldr	r3, [r7, #4]
 800133e:	4618      	mov	r0, r3
 8001340:	f7ff ffeb 	bl	800131a <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEED1Ev>
 8001344:	687b      	ldr	r3, [r7, #4]
 8001346:	4618      	mov	r0, r3
 8001348:	3708      	adds	r7, #8
 800134a:	46bd      	mov	sp, r7
 800134c:	bd80      	pop	{r7, pc}

0800134e <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEED1Ev>:
    struct _Move_assign_base : _Copy_assign_alias<_Types...>
 800134e:	b580      	push	{r7, lr}
 8001350:	b082      	sub	sp, #8
 8001352:	af00      	add	r7, sp, #0
 8001354:	6078      	str	r0, [r7, #4]
 8001356:	687b      	ldr	r3, [r7, #4]
 8001358:	4618      	mov	r0, r3
 800135a:	f7ff ffeb 	bl	8001334 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEED1Ev>
 800135e:	687b      	ldr	r3, [r7, #4]
 8001360:	4618      	mov	r0, r3
 8001362:	3708      	adds	r7, #8
 8001364:	46bd      	mov	sp, r7
 8001366:	bd80      	pop	{r7, pc}

08001368 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEED1Ev>:
    struct _Variant_base : _Move_assign_alias<_Types...>
 8001368:	b580      	push	{r7, lr}
 800136a:	b082      	sub	sp, #8
 800136c:	af00      	add	r7, sp, #0
 800136e:	6078      	str	r0, [r7, #4]
 8001370:	687b      	ldr	r3, [r7, #4]
 8001372:	4618      	mov	r0, r3
 8001374:	f7ff ffeb 	bl	800134e <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEED1Ev>
 8001378:	687b      	ldr	r3, [r7, #4]
 800137a:	4618      	mov	r0, r3
 800137c:	3708      	adds	r7, #8
 800137e:	46bd      	mov	sp, r7
 8001380:	bd80      	pop	{r7, pc}

08001382 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEED1Ev>:
      variant() = default;
      variant(const variant& __rhs) = default;
      variant(variant&&) = default;
      variant& operator=(const variant&) = default;
      variant& operator=(variant&&) = default;
      ~variant() = default;
 8001382:	b580      	push	{r7, lr}
 8001384:	b082      	sub	sp, #8
 8001386:	af00      	add	r7, sp, #0
 8001388:	6078      	str	r0, [r7, #4]
 800138a:	687b      	ldr	r3, [r7, #4]
 800138c:	4618      	mov	r0, r3
 800138e:	f7ff ffeb 	bl	8001368 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEED1Ev>
 8001392:	687b      	ldr	r3, [r7, #4]
 8001394:	4618      	mov	r0, r3
 8001396:	3708      	adds	r7, #8
 8001398:	46bd      	mov	sp, r7
 800139a:	bd80      	pop	{r7, pc}

0800139c <_ZN6SymbolD1Ev>:
typedef enum
{
	SYMBOL_INT, SYMBOL_FLOAT, SYMBOL_BOOL, SYMBOL_STRING, SYMBOL_CONTAINER,
} symbol_type;

class Symbol
 800139c:	b580      	push	{r7, lr}
 800139e:	b082      	sub	sp, #8
 80013a0:	af00      	add	r7, sp, #0
 80013a2:	6078      	str	r0, [r7, #4]
 80013a4:	687b      	ldr	r3, [r7, #4]
 80013a6:	3304      	adds	r3, #4
 80013a8:	4618      	mov	r0, r3
 80013aa:	f7ff ffea 	bl	8001382 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEED1Ev>
 80013ae:	687b      	ldr	r3, [r7, #4]
 80013b0:	4618      	mov	r0, r3
 80013b2:	3708      	adds	r7, #8
 80013b4:	46bd      	mov	sp, r7
 80013b6:	bd80      	pop	{r7, pc}

080013b8 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ERKSC_>:
      _Move_ctor_base(const _Move_ctor_base&) = default;
 80013b8:	b580      	push	{r7, lr}
 80013ba:	b082      	sub	sp, #8
 80013bc:	af00      	add	r7, sp, #0
 80013be:	6078      	str	r0, [r7, #4]
 80013c0:	6039      	str	r1, [r7, #0]
 80013c2:	687b      	ldr	r3, [r7, #4]
 80013c4:	683a      	ldr	r2, [r7, #0]
 80013c6:	4611      	mov	r1, r2
 80013c8:	4618      	mov	r0, r3
 80013ca:	f000 fdcc 	bl	8001f66 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ERKSC_>
 80013ce:	687b      	ldr	r3, [r7, #4]
 80013d0:	4618      	mov	r0, r3
 80013d2:	3708      	adds	r7, #8
 80013d4:	46bd      	mov	sp, r7
 80013d6:	bd80      	pop	{r7, pc}

080013d8 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ERKSC_>:
      _Copy_assign_base(const _Copy_assign_base&) = default;
 80013d8:	b580      	push	{r7, lr}
 80013da:	b082      	sub	sp, #8
 80013dc:	af00      	add	r7, sp, #0
 80013de:	6078      	str	r0, [r7, #4]
 80013e0:	6039      	str	r1, [r7, #0]
 80013e2:	687b      	ldr	r3, [r7, #4]
 80013e4:	683a      	ldr	r2, [r7, #0]
 80013e6:	4611      	mov	r1, r2
 80013e8:	4618      	mov	r0, r3
 80013ea:	f7ff ffe5 	bl	80013b8 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ERKSC_>
 80013ee:	687b      	ldr	r3, [r7, #4]
 80013f0:	4618      	mov	r0, r3
 80013f2:	3708      	adds	r7, #8
 80013f4:	46bd      	mov	sp, r7
 80013f6:	bd80      	pop	{r7, pc}

080013f8 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ERKSC_>:
      _Move_assign_base(const _Move_assign_base&) = default;
 80013f8:	b580      	push	{r7, lr}
 80013fa:	b082      	sub	sp, #8
 80013fc:	af00      	add	r7, sp, #0
 80013fe:	6078      	str	r0, [r7, #4]
 8001400:	6039      	str	r1, [r7, #0]
 8001402:	687b      	ldr	r3, [r7, #4]
 8001404:	683a      	ldr	r2, [r7, #0]
 8001406:	4611      	mov	r1, r2
 8001408:	4618      	mov	r0, r3
 800140a:	f7ff ffe5 	bl	80013d8 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ERKSC_>
 800140e:	687b      	ldr	r3, [r7, #4]
 8001410:	4618      	mov	r0, r3
 8001412:	3708      	adds	r7, #8
 8001414:	46bd      	mov	sp, r7
 8001416:	bd80      	pop	{r7, pc}

08001418 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ERKSC_>:
      _Variant_base(const _Variant_base&) = default;
 8001418:	b580      	push	{r7, lr}
 800141a:	b082      	sub	sp, #8
 800141c:	af00      	add	r7, sp, #0
 800141e:	6078      	str	r0, [r7, #4]
 8001420:	6039      	str	r1, [r7, #0]
 8001422:	687b      	ldr	r3, [r7, #4]
 8001424:	683a      	ldr	r2, [r7, #0]
 8001426:	4611      	mov	r1, r2
 8001428:	4618      	mov	r0, r3
 800142a:	f7ff ffe5 	bl	80013f8 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ERKSC_>
 800142e:	687b      	ldr	r3, [r7, #4]
 8001430:	4618      	mov	r0, r3
 8001432:	3708      	adds	r7, #8
 8001434:	46bd      	mov	sp, r7
 8001436:	bd80      	pop	{r7, pc}

08001438 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1ERKSA_>:
      variant(const variant& __rhs) = default;
 8001438:	b580      	push	{r7, lr}
 800143a:	b082      	sub	sp, #8
 800143c:	af00      	add	r7, sp, #0
 800143e:	6078      	str	r0, [r7, #4]
 8001440:	6039      	str	r1, [r7, #0]
 8001442:	687b      	ldr	r3, [r7, #4]
 8001444:	683a      	ldr	r2, [r7, #0]
 8001446:	4611      	mov	r1, r2
 8001448:	4618      	mov	r0, r3
 800144a:	f7ff ffe5 	bl	8001418 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ERKSC_>
 800144e:	687b      	ldr	r3, [r7, #4]
 8001450:	4618      	mov	r0, r3
 8001452:	3708      	adds	r7, #8
 8001454:	46bd      	mov	sp, r7
 8001456:	bd80      	pop	{r7, pc}

08001458 <_ZN6SymbolC1ERKS_>:
 8001458:	b580      	push	{r7, lr}
 800145a:	b082      	sub	sp, #8
 800145c:	af00      	add	r7, sp, #0
 800145e:	6078      	str	r0, [r7, #4]
 8001460:	6039      	str	r1, [r7, #0]
 8001462:	683b      	ldr	r3, [r7, #0]
 8001464:	781a      	ldrb	r2, [r3, #0]
 8001466:	687b      	ldr	r3, [r7, #4]
 8001468:	701a      	strb	r2, [r3, #0]
 800146a:	687b      	ldr	r3, [r7, #4]
 800146c:	1d1a      	adds	r2, r3, #4
 800146e:	683b      	ldr	r3, [r7, #0]
 8001470:	3304      	adds	r3, #4
 8001472:	4619      	mov	r1, r3
 8001474:	4610      	mov	r0, r2
 8001476:	f7ff ffdf 	bl	8001438 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1ERKSA_>
 800147a:	687b      	ldr	r3, [r7, #4]
 800147c:	4618      	mov	r0, r3
 800147e:	3708      	adds	r7, #8
 8001480:	46bd      	mov	sp, r7
 8001482:	bd80      	pop	{r7, pc}

08001484 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_>:
    struct _Variant_base : _Move_assign_alias<_Types...>
 8001484:	b580      	push	{r7, lr}
 8001486:	b082      	sub	sp, #8
 8001488:	af00      	add	r7, sp, #0
 800148a:	6078      	str	r0, [r7, #4]
 800148c:	6039      	str	r1, [r7, #0]
 800148e:	687b      	ldr	r3, [r7, #4]
 8001490:	683a      	ldr	r2, [r7, #0]
 8001492:	4611      	mov	r1, r2
 8001494:	4618      	mov	r0, r3
 8001496:	f001 f8e3 	bl	8002660 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_>
 800149a:	687b      	ldr	r3, [r7, #4]
 800149c:	4618      	mov	r0, r3
 800149e:	3708      	adds	r7, #8
 80014a0:	46bd      	mov	sp, r7
 80014a2:	bd80      	pop	{r7, pc}

080014a4 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSEOSA_>:
    class variant
 80014a4:	b580      	push	{r7, lr}
 80014a6:	b082      	sub	sp, #8
 80014a8:	af00      	add	r7, sp, #0
 80014aa:	6078      	str	r0, [r7, #4]
 80014ac:	6039      	str	r1, [r7, #0]
 80014ae:	687b      	ldr	r3, [r7, #4]
 80014b0:	683a      	ldr	r2, [r7, #0]
 80014b2:	4611      	mov	r1, r2
 80014b4:	4618      	mov	r0, r3
 80014b6:	f7ff ffe5 	bl	8001484 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_>
 80014ba:	687b      	ldr	r3, [r7, #4]
 80014bc:	4618      	mov	r0, r3
 80014be:	3708      	adds	r7, #8
 80014c0:	46bd      	mov	sp, r7
 80014c2:	bd80      	pop	{r7, pc}

080014c4 <_ZN6SymbolaSEOS_>:
 80014c4:	b580      	push	{r7, lr}
 80014c6:	b082      	sub	sp, #8
 80014c8:	af00      	add	r7, sp, #0
 80014ca:	6078      	str	r0, [r7, #4]
 80014cc:	6039      	str	r1, [r7, #0]
 80014ce:	683b      	ldr	r3, [r7, #0]
 80014d0:	781a      	ldrb	r2, [r3, #0]
 80014d2:	687b      	ldr	r3, [r7, #4]
 80014d4:	701a      	strb	r2, [r3, #0]
 80014d6:	683b      	ldr	r3, [r7, #0]
 80014d8:	1d1a      	adds	r2, r3, #4
 80014da:	687b      	ldr	r3, [r7, #4]
 80014dc:	3304      	adds	r3, #4
 80014de:	4611      	mov	r1, r2
 80014e0:	4618      	mov	r0, r3
 80014e2:	f7ff ffdf 	bl	80014a4 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSEOSA_>
 80014e6:	687b      	ldr	r3, [r7, #4]
 80014e8:	4618      	mov	r0, r3
 80014ea:	3708      	adds	r7, #8
 80014ec:	46bd      	mov	sp, r7
 80014ee:	bd80      	pop	{r7, pc}

080014f0 <_ZN8Executor12execute_loopEP4Body>:

void Executor::execute_loop(Body *loop)
{
 80014f0:	b590      	push	{r4, r7, lr}
 80014f2:	b0d3      	sub	sp, #332	; 0x14c
 80014f4:	af00      	add	r7, sp, #0
 80014f6:	1d3b      	adds	r3, r7, #4
 80014f8:	6018      	str	r0, [r3, #0]
 80014fa:	463b      	mov	r3, r7
 80014fc:	6019      	str	r1, [r3, #0]
	Symbol &loops = Variable_handler::get_instance().get_local("loops");
 80014fe:	f017 fecb 	bl	8019298 <_ZN16Variable_handler12get_instanceEv>
 8001502:	4604      	mov	r4, r0
 8001504:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8001508:	4618      	mov	r0, r3
 800150a:	f022 f805 	bl	8023518 <_ZNSaIcEC1Ev>
 800150e:	f107 0224 	add.w	r2, r7, #36	; 0x24
 8001512:	f107 030c 	add.w	r3, r7, #12
 8001516:	4968      	ldr	r1, [pc, #416]	; (80016b8 <_ZN8Executor12execute_loopEP4Body+0x1c8>)
 8001518:	4618      	mov	r0, r3
 800151a:	f000 fc36 	bl	8001d8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 800151e:	f107 030c 	add.w	r3, r7, #12
 8001522:	4619      	mov	r1, r3
 8001524:	4620      	mov	r0, r4
 8001526:	f017 ff7d 	bl	8019424 <_ZN16Variable_handler9get_localENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 800152a:	f8c7 0144 	str.w	r0, [r7, #324]	; 0x144
 800152e:	f107 030c 	add.w	r3, r7, #12
 8001532:	4618      	mov	r0, r3
 8001534:	f022 fa81 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8001538:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800153c:	4618      	mov	r0, r3
 800153e:	f021 ffec 	bl	802351a <_ZNSaIcED1Ev>
	Symbol &max_loops = Variable_handler::get_instance().get_local("max_loops");
 8001542:	f017 fea9 	bl	8019298 <_ZN16Variable_handler12get_instanceEv>
 8001546:	4604      	mov	r4, r0
 8001548:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800154c:	4618      	mov	r0, r3
 800154e:	f021 ffe3 	bl	8023518 <_ZNSaIcEC1Ev>
 8001552:	f107 0240 	add.w	r2, r7, #64	; 0x40
 8001556:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800155a:	4958      	ldr	r1, [pc, #352]	; (80016bc <_ZN8Executor12execute_loopEP4Body+0x1cc>)
 800155c:	4618      	mov	r0, r3
 800155e:	f000 fc14 	bl	8001d8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8001562:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8001566:	4619      	mov	r1, r3
 8001568:	4620      	mov	r0, r4
 800156a:	f017 ff5b 	bl	8019424 <_ZN16Variable_handler9get_localENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 800156e:	f8c7 0140 	str.w	r0, [r7, #320]	; 0x140
 8001572:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8001576:	4618      	mov	r0, r3
 8001578:	f022 fa5f 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800157c:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8001580:	4618      	mov	r0, r3
 8001582:	f021 ffca 	bl	802351a <_ZNSaIcED1Ev>
	while ((max_loops == 0 || loops < max_loops).get_bool())
 8001586:	f107 0384 	add.w	r3, r7, #132	; 0x84
 800158a:	2100      	movs	r1, #0
 800158c:	4618      	mov	r0, r3
 800158e:	f015 fc95 	bl	8016ebc <_ZN6SymbolC1Ei>
 8001592:	f107 0364 	add.w	r3, r7, #100	; 0x64
 8001596:	f107 0284 	add.w	r2, r7, #132	; 0x84
 800159a:	f8d7 1140 	ldr.w	r1, [r7, #320]	; 0x140
 800159e:	4618      	mov	r0, r3
 80015a0:	f016 f93a 	bl	8017818 <_ZN6SymboleqES_>
 80015a4:	f107 03c4 	add.w	r3, r7, #196	; 0xc4
 80015a8:	f8d7 1140 	ldr.w	r1, [r7, #320]	; 0x140
 80015ac:	4618      	mov	r0, r3
 80015ae:	f7ff ff53 	bl	8001458 <_ZN6SymbolC1ERKS_>
 80015b2:	f107 03a4 	add.w	r3, r7, #164	; 0xa4
 80015b6:	f107 02c4 	add.w	r2, r7, #196	; 0xc4
 80015ba:	f8d7 1144 	ldr.w	r1, [r7, #324]	; 0x144
 80015be:	4618      	mov	r0, r3
 80015c0:	f016 f84a 	bl	8017658 <_ZN6SymbolltES_>
 80015c4:	f107 0344 	add.w	r3, r7, #68	; 0x44
 80015c8:	f107 02a4 	add.w	r2, r7, #164	; 0xa4
 80015cc:	f107 0164 	add.w	r1, r7, #100	; 0x64
 80015d0:	4618      	mov	r0, r3
 80015d2:	f015 fedd 	bl	8017390 <_ZN6SymbolooES_>
 80015d6:	f107 0344 	add.w	r3, r7, #68	; 0x44
 80015da:	4618      	mov	r0, r3
 80015dc:	f016 fbac 	bl	8017d38 <_ZN6Symbol8get_boolEv>
 80015e0:	4603      	mov	r3, r0
 80015e2:	461c      	mov	r4, r3
 80015e4:	f107 0344 	add.w	r3, r7, #68	; 0x44
 80015e8:	4618      	mov	r0, r3
 80015ea:	f7ff fed7 	bl	800139c <_ZN6SymbolD1Ev>
 80015ee:	f107 03a4 	add.w	r3, r7, #164	; 0xa4
 80015f2:	4618      	mov	r0, r3
 80015f4:	f7ff fed2 	bl	800139c <_ZN6SymbolD1Ev>
 80015f8:	f107 03c4 	add.w	r3, r7, #196	; 0xc4
 80015fc:	4618      	mov	r0, r3
 80015fe:	f7ff fecd 	bl	800139c <_ZN6SymbolD1Ev>
 8001602:	f107 0364 	add.w	r3, r7, #100	; 0x64
 8001606:	4618      	mov	r0, r3
 8001608:	f7ff fec8 	bl	800139c <_ZN6SymbolD1Ev>
 800160c:	f107 0384 	add.w	r3, r7, #132	; 0x84
 8001610:	4618      	mov	r0, r3
 8001612:	f7ff fec3 	bl	800139c <_ZN6SymbolD1Ev>
 8001616:	2c00      	cmp	r4, #0
 8001618:	d02c      	beq.n	8001674 <_ZN8Executor12execute_loopEP4Body+0x184>
	{
		execute(loop);
 800161a:	463a      	mov	r2, r7
 800161c:	1d3b      	adds	r3, r7, #4
 800161e:	6811      	ldr	r1, [r2, #0]
 8001620:	6818      	ldr	r0, [r3, #0]
 8001622:	f000 f86d 	bl	8001700 <_ZN8Executor7executeEP4Body>
		Variable_handler::get_instance().transmit_variables();
 8001626:	f017 fe37 	bl	8019298 <_ZN16Variable_handler12get_instanceEv>
 800162a:	4603      	mov	r3, r0
 800162c:	4618      	mov	r0, r3
 800162e:	f017 ff73 	bl	8019518 <_ZN16Variable_handler18transmit_variablesEv>
		loops = loops + 1;
 8001632:	f507 7382 	add.w	r3, r7, #260	; 0x104
 8001636:	2101      	movs	r1, #1
 8001638:	4618      	mov	r0, r3
 800163a:	f015 fc3f 	bl	8016ebc <_ZN6SymbolC1Ei>
 800163e:	f107 03e4 	add.w	r3, r7, #228	; 0xe4
 8001642:	f507 7282 	add.w	r2, r7, #260	; 0x104
 8001646:	f8d7 1144 	ldr.w	r1, [r7, #324]	; 0x144
 800164a:	4618      	mov	r0, r3
 800164c:	f015 fd4a 	bl	80170e4 <_ZN6SymbolplES_>
 8001650:	f107 03e4 	add.w	r3, r7, #228	; 0xe4
 8001654:	4619      	mov	r1, r3
 8001656:	f8d7 0144 	ldr.w	r0, [r7, #324]	; 0x144
 800165a:	f7ff ff33 	bl	80014c4 <_ZN6SymbolaSEOS_>
 800165e:	f107 03e4 	add.w	r3, r7, #228	; 0xe4
 8001662:	4618      	mov	r0, r3
 8001664:	f7ff fe9a 	bl	800139c <_ZN6SymbolD1Ev>
 8001668:	f507 7382 	add.w	r3, r7, #260	; 0x104
 800166c:	4618      	mov	r0, r3
 800166e:	f7ff fe95 	bl	800139c <_ZN6SymbolD1Ev>
	while ((max_loops == 0 || loops < max_loops).get_bool())
 8001672:	e788      	b.n	8001586 <_ZN8Executor12execute_loopEP4Body+0x96>
	}
	Transmitter::send_string("fin\n");
 8001674:	f507 739e 	add.w	r3, r7, #316	; 0x13c
 8001678:	4618      	mov	r0, r3
 800167a:	f021 ff4d 	bl	8023518 <_ZNSaIcEC1Ev>
 800167e:	f507 729e 	add.w	r2, r7, #316	; 0x13c
 8001682:	f507 7392 	add.w	r3, r7, #292	; 0x124
 8001686:	490e      	ldr	r1, [pc, #56]	; (80016c0 <_ZN8Executor12execute_loopEP4Body+0x1d0>)
 8001688:	4618      	mov	r0, r3
 800168a:	f000 fb7e 	bl	8001d8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 800168e:	f507 7392 	add.w	r3, r7, #292	; 0x124
 8001692:	4618      	mov	r0, r3
 8001694:	f017 fb46 	bl	8018d24 <_ZN11Transmitter11send_stringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8001698:	f507 7392 	add.w	r3, r7, #292	; 0x124
 800169c:	4618      	mov	r0, r3
 800169e:	f022 f9cc 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80016a2:	f507 739e 	add.w	r3, r7, #316	; 0x13c
 80016a6:	4618      	mov	r0, r3
 80016a8:	f021 ff37 	bl	802351a <_ZNSaIcED1Ev>
}
 80016ac:	bf00      	nop
 80016ae:	f507 77a6 	add.w	r7, r7, #332	; 0x14c
 80016b2:	46bd      	mov	sp, r7
 80016b4:	bd90      	pop	{r4, r7, pc}
 80016b6:	bf00      	nop
 80016b8:	08029428 	.word	0x08029428
 80016bc:	08029430 	.word	0x08029430
 80016c0:	0802943c 	.word	0x0802943c

080016c4 <_ZN8Executor7executeEP7Program>:

void Executor::execute(Program *p)
{
 80016c4:	b580      	push	{r7, lr}
 80016c6:	b082      	sub	sp, #8
 80016c8:	af00      	add	r7, sp, #0
 80016ca:	6078      	str	r0, [r7, #4]
 80016cc:	6039      	str	r1, [r7, #0]
	this->p = p;
 80016ce:	687b      	ldr	r3, [r7, #4]
 80016d0:	683a      	ldr	r2, [r7, #0]
 80016d2:	601a      	str	r2, [r3, #0]
	execute(p->setup);
 80016d4:	683b      	ldr	r3, [r7, #0]
 80016d6:	681b      	ldr	r3, [r3, #0]
 80016d8:	4619      	mov	r1, r3
 80016da:	6878      	ldr	r0, [r7, #4]
 80016dc:	f000 f810 	bl	8001700 <_ZN8Executor7executeEP4Body>
	execute_loop(p->loop);
 80016e0:	683b      	ldr	r3, [r7, #0]
 80016e2:	685b      	ldr	r3, [r3, #4]
 80016e4:	4619      	mov	r1, r3
 80016e6:	6878      	ldr	r0, [r7, #4]
 80016e8:	f7ff ff02 	bl	80014f0 <_ZN8Executor12execute_loopEP4Body>
	execute(p->finish);
 80016ec:	683b      	ldr	r3, [r7, #0]
 80016ee:	689b      	ldr	r3, [r3, #8]
 80016f0:	4619      	mov	r1, r3
 80016f2:	6878      	ldr	r0, [r7, #4]
 80016f4:	f000 f804 	bl	8001700 <_ZN8Executor7executeEP4Body>
}
 80016f8:	bf00      	nop
 80016fa:	3708      	adds	r7, #8
 80016fc:	46bd      	mov	sp, r7
 80016fe:	bd80      	pop	{r7, pc}

08001700 <_ZN8Executor7executeEP4Body>:

void Executor::execute(Body *bod)
{
 8001700:	b580      	push	{r7, lr}
 8001702:	b086      	sub	sp, #24
 8001704:	af00      	add	r7, sp, #0
 8001706:	6078      	str	r0, [r7, #4]
 8001708:	6039      	str	r1, [r7, #0]
	for (Statement *s : bod->statements)
 800170a:	683b      	ldr	r3, [r7, #0]
 800170c:	617b      	str	r3, [r7, #20]
 800170e:	6978      	ldr	r0, [r7, #20]
 8001710:	f000 ffbc 	bl	800268c <_ZNSt6vectorIP9StatementSaIS1_EE5beginEv>
 8001714:	4603      	mov	r3, r0
 8001716:	60fb      	str	r3, [r7, #12]
 8001718:	6978      	ldr	r0, [r7, #20]
 800171a:	f000 ffc7 	bl	80026ac <_ZNSt6vectorIP9StatementSaIS1_EE3endEv>
 800171e:	4603      	mov	r3, r0
 8001720:	60bb      	str	r3, [r7, #8]
 8001722:	f107 0208 	add.w	r2, r7, #8
 8001726:	f107 030c 	add.w	r3, r7, #12
 800172a:	4611      	mov	r1, r2
 800172c:	4618      	mov	r0, r3
 800172e:	f000 ffce 	bl	80026ce <_ZN9__gnu_cxxneIPP9StatementSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
 8001732:	4603      	mov	r3, r0
 8001734:	2b00      	cmp	r3, #0
 8001736:	d011      	beq.n	800175c <_ZN8Executor7executeEP4Body+0x5c>
 8001738:	f107 030c 	add.w	r3, r7, #12
 800173c:	4618      	mov	r0, r3
 800173e:	f000 ffee 	bl	800271e <_ZNK9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEEdeEv>
 8001742:	4603      	mov	r3, r0
 8001744:	681b      	ldr	r3, [r3, #0]
 8001746:	613b      	str	r3, [r7, #16]
	{
		execute(s);
 8001748:	6939      	ldr	r1, [r7, #16]
 800174a:	6878      	ldr	r0, [r7, #4]
 800174c:	f000 f80a 	bl	8001764 <_ZN8Executor7executeEP9Statement>
	for (Statement *s : bod->statements)
 8001750:	f107 030c 	add.w	r3, r7, #12
 8001754:	4618      	mov	r0, r3
 8001756:	f000 ffd2 	bl	80026fe <_ZN9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEEppEv>
 800175a:	e7e2      	b.n	8001722 <_ZN8Executor7executeEP4Body+0x22>
	}
}
 800175c:	bf00      	nop
 800175e:	3718      	adds	r7, #24
 8001760:	46bd      	mov	sp, r7
 8001762:	bd80      	pop	{r7, pc}

08001764 <_ZN8Executor7executeEP9Statement>:

void Executor::execute(Statement *stat)
{
 8001764:	b580      	push	{r7, lr}
 8001766:	b082      	sub	sp, #8
 8001768:	af00      	add	r7, sp, #0
 800176a:	6078      	str	r0, [r7, #4]
 800176c:	6039      	str	r1, [r7, #0]
	switch (stat->type)
 800176e:	683b      	ldr	r3, [r7, #0]
 8001770:	781b      	ldrb	r3, [r3, #0]
 8001772:	2b04      	cmp	r3, #4
 8001774:	d848      	bhi.n	8001808 <_ZN8Executor7executeEP9Statement+0xa4>
 8001776:	a201      	add	r2, pc, #4	; (adr r2, 800177c <_ZN8Executor7executeEP9Statement+0x18>)
 8001778:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800177c:	08001791 	.word	0x08001791
 8001780:	080017a9 	.word	0x080017a9
 8001784:	080017c1 	.word	0x080017c1
 8001788:	080017d9 	.word	0x080017d9
 800178c:	080017f1 	.word	0x080017f1
	{
	case STATEMENT_ASSIGNMENT:
		execute(std::get<Assignment*>(stat->content));
 8001790:	683b      	ldr	r3, [r7, #0]
 8001792:	3304      	adds	r3, #4
 8001794:	4618      	mov	r0, r3
 8001796:	f000 ffce 	bl	8002736 <_ZSt3getIP10AssignmentJS1_P13Function_callP11Method_callP15While_statementP12If_statementEERT_RSt7variantIJDpT0_EE>
 800179a:	4603      	mov	r3, r0
 800179c:	681b      	ldr	r3, [r3, #0]
 800179e:	4619      	mov	r1, r3
 80017a0:	6878      	ldr	r0, [r7, #4]
 80017a2:	f000 f949 	bl	8001a38 <_ZN8Executor7executeEP10Assignment>
		break;
 80017a6:	e02f      	b.n	8001808 <_ZN8Executor7executeEP9Statement+0xa4>
	case STATEMENT_FUNCTION_CALL:
		execute(std::get<Function_call*>(stat->content));
 80017a8:	683b      	ldr	r3, [r7, #0]
 80017aa:	3304      	adds	r3, #4
 80017ac:	4618      	mov	r0, r3
 80017ae:	f000 ffce 	bl	800274e <_ZSt3getIP13Function_callJP10AssignmentS1_P11Method_callP15While_statementP12If_statementEERT_RSt7variantIJDpT0_EE>
 80017b2:	4603      	mov	r3, r0
 80017b4:	681b      	ldr	r3, [r3, #0]
 80017b6:	4619      	mov	r1, r3
 80017b8:	6878      	ldr	r0, [r7, #4]
 80017ba:	f000 f8c9 	bl	8001950 <_ZN8Executor7executeEP13Function_call>
		break;
 80017be:	e023      	b.n	8001808 <_ZN8Executor7executeEP9Statement+0xa4>
	case STATEMENT_METHOD_CALL:
		execute(std::get<Method_call*>(stat->content));
 80017c0:	683b      	ldr	r3, [r7, #0]
 80017c2:	3304      	adds	r3, #4
 80017c4:	4618      	mov	r0, r3
 80017c6:	f000 ffce 	bl	8002766 <_ZSt3getIP11Method_callJP10AssignmentP13Function_callS1_P15While_statementP12If_statementEERT_RSt7variantIJDpT0_EE>
 80017ca:	4603      	mov	r3, r0
 80017cc:	681b      	ldr	r3, [r3, #0]
 80017ce:	4619      	mov	r1, r3
 80017d0:	6878      	ldr	r0, [r7, #4]
 80017d2:	f000 f8b1 	bl	8001938 <_ZN8Executor7executeEP11Method_call>
		break;
 80017d6:	e017      	b.n	8001808 <_ZN8Executor7executeEP9Statement+0xa4>
	case STATEMENT_WHILE:
		execute(std::get<While_statement*>(stat->content));
 80017d8:	683b      	ldr	r3, [r7, #0]
 80017da:	3304      	adds	r3, #4
 80017dc:	4618      	mov	r0, r3
 80017de:	f000 ffce 	bl	800277e <_ZSt3getIP15While_statementJP10AssignmentP13Function_callP11Method_callS1_P12If_statementEERT_RSt7variantIJDpT0_EE>
 80017e2:	4603      	mov	r3, r0
 80017e4:	681b      	ldr	r3, [r3, #0]
 80017e6:	4619      	mov	r1, r3
 80017e8:	6878      	ldr	r0, [r7, #4]
 80017ea:	f000 f877 	bl	80018dc <_ZN8Executor7executeEP15While_statement>
		break;
 80017ee:	e00b      	b.n	8001808 <_ZN8Executor7executeEP9Statement+0xa4>
	case STATEMENT_IF:
		execute(std::get<If_statement*>(stat->content));
 80017f0:	683b      	ldr	r3, [r7, #0]
 80017f2:	3304      	adds	r3, #4
 80017f4:	4618      	mov	r0, r3
 80017f6:	f000 ffce 	bl	8002796 <_ZSt3getIP12If_statementJP10AssignmentP13Function_callP11Method_callP15While_statementS1_EERT_RSt7variantIJDpT0_EE>
 80017fa:	4603      	mov	r3, r0
 80017fc:	681b      	ldr	r3, [r3, #0]
 80017fe:	4619      	mov	r1, r3
 8001800:	6878      	ldr	r0, [r7, #4]
 8001802:	f000 f805 	bl	8001810 <_ZN8Executor7executeEP12If_statement>
		break;
 8001806:	bf00      	nop
	}
}
 8001808:	bf00      	nop
 800180a:	3708      	adds	r7, #8
 800180c:	46bd      	mov	sp, r7
 800180e:	bd80      	pop	{r7, pc}

08001810 <_ZN8Executor7executeEP12If_statement>:

void Executor::execute(If_statement *ifst)
{
 8001810:	b590      	push	{r4, r7, lr}
 8001812:	b08d      	sub	sp, #52	; 0x34
 8001814:	af00      	add	r7, sp, #0
 8001816:	6078      	str	r0, [r7, #4]
 8001818:	6039      	str	r1, [r7, #0]
	for (unsigned int i = 0; i < ifst->conditions.size(); ++i)
 800181a:	2300      	movs	r3, #0
 800181c:	62fb      	str	r3, [r7, #44]	; 0x2c
 800181e:	683b      	ldr	r3, [r7, #0]
 8001820:	4618      	mov	r0, r3
 8001822:	f000 ffc4 	bl	80027ae <_ZNKSt6vectorIP10ExpressionSaIS1_EE4sizeEv>
 8001826:	4602      	mov	r2, r0
 8001828:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800182a:	4293      	cmp	r3, r2
 800182c:	bf34      	ite	cc
 800182e:	2301      	movcc	r3, #1
 8001830:	2300      	movcs	r3, #0
 8001832:	b2db      	uxtb	r3, r3
 8001834:	2b00      	cmp	r3, #0
 8001836:	d031      	beq.n	800189c <_ZN8Executor7executeEP12If_statement+0x8c>
	{
		Symbol condition_symbol = EVALUATE(ifst->conditions[i]);
 8001838:	f00a fc60 	bl	800c0fc <_ZN21Expression_calculator12get_instanceEv>
 800183c:	4604      	mov	r4, r0
 800183e:	683b      	ldr	r3, [r7, #0]
 8001840:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8001842:	4618      	mov	r0, r3
 8001844:	f000 ffc3 	bl	80027ce <_ZNSt6vectorIP10ExpressionSaIS1_EEixEj>
 8001848:	4603      	mov	r3, r0
 800184a:	681a      	ldr	r2, [r3, #0]
 800184c:	f107 030c 	add.w	r3, r7, #12
 8001850:	4621      	mov	r1, r4
 8001852:	4618      	mov	r0, r3
 8001854:	f00a fcd0 	bl	800c1f8 <_ZN21Expression_calculator8evaluateEP10Expression>
		if (condition_symbol.get_bool())
 8001858:	f107 030c 	add.w	r3, r7, #12
 800185c:	4618      	mov	r0, r3
 800185e:	f016 fa6b 	bl	8017d38 <_ZN6Symbol8get_boolEv>
 8001862:	4603      	mov	r3, r0
 8001864:	2b00      	cmp	r3, #0
 8001866:	d00d      	beq.n	8001884 <_ZN8Executor7executeEP12If_statement+0x74>
		{
			execute(ifst->if_bodies[i]);
 8001868:	683b      	ldr	r3, [r7, #0]
 800186a:	330c      	adds	r3, #12
 800186c:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800186e:	4618      	mov	r0, r3
 8001870:	f000 ffbd 	bl	80027ee <_ZNSt6vectorIP4BodySaIS1_EEixEj>
 8001874:	4603      	mov	r3, r0
 8001876:	681b      	ldr	r3, [r3, #0]
 8001878:	4619      	mov	r1, r3
 800187a:	6878      	ldr	r0, [r7, #4]
 800187c:	f7ff ff40 	bl	8001700 <_ZN8Executor7executeEP4Body>
 8001880:	2400      	movs	r4, #0
			return;
 8001882:	e000      	b.n	8001886 <_ZN8Executor7executeEP12If_statement+0x76>
		Symbol condition_symbol = EVALUATE(ifst->conditions[i]);
 8001884:	2401      	movs	r4, #1
 8001886:	f107 030c 	add.w	r3, r7, #12
 800188a:	4618      	mov	r0, r3
 800188c:	f7ff fd86 	bl	800139c <_ZN6SymbolD1Ev>
 8001890:	2c01      	cmp	r4, #1
 8001892:	d120      	bne.n	80018d6 <_ZN8Executor7executeEP12If_statement+0xc6>
	for (unsigned int i = 0; i < ifst->conditions.size(); ++i)
 8001894:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8001896:	3301      	adds	r3, #1
 8001898:	62fb      	str	r3, [r7, #44]	; 0x2c
 800189a:	e7c0      	b.n	800181e <_ZN8Executor7executeEP12If_statement+0xe>
		}
	}

	if (ifst->conditions.size() < ifst->if_bodies.size())
 800189c:	683b      	ldr	r3, [r7, #0]
 800189e:	4618      	mov	r0, r3
 80018a0:	f000 ff85 	bl	80027ae <_ZNKSt6vectorIP10ExpressionSaIS1_EE4sizeEv>
 80018a4:	4604      	mov	r4, r0
 80018a6:	683b      	ldr	r3, [r7, #0]
 80018a8:	330c      	adds	r3, #12
 80018aa:	4618      	mov	r0, r3
 80018ac:	f000 ffaf 	bl	800280e <_ZNKSt6vectorIP4BodySaIS1_EE4sizeEv>
 80018b0:	4603      	mov	r3, r0
 80018b2:	429c      	cmp	r4, r3
 80018b4:	bf34      	ite	cc
 80018b6:	2301      	movcc	r3, #1
 80018b8:	2300      	movcs	r3, #0
 80018ba:	b2db      	uxtb	r3, r3
 80018bc:	2b00      	cmp	r3, #0
 80018be:	d00a      	beq.n	80018d6 <_ZN8Executor7executeEP12If_statement+0xc6>
	{
		execute(ifst->if_bodies.back());
 80018c0:	683b      	ldr	r3, [r7, #0]
 80018c2:	330c      	adds	r3, #12
 80018c4:	4618      	mov	r0, r3
 80018c6:	f000 ffb2 	bl	800282e <_ZNSt6vectorIP4BodySaIS1_EE4backEv>
 80018ca:	4603      	mov	r3, r0
 80018cc:	681b      	ldr	r3, [r3, #0]
 80018ce:	4619      	mov	r1, r3
 80018d0:	6878      	ldr	r0, [r7, #4]
 80018d2:	f7ff ff15 	bl	8001700 <_ZN8Executor7executeEP4Body>
	}
}
 80018d6:	3734      	adds	r7, #52	; 0x34
 80018d8:	46bd      	mov	sp, r7
 80018da:	bd90      	pop	{r4, r7, pc}

080018dc <_ZN8Executor7executeEP15While_statement>:

void Executor::execute(While_statement *whist)
{
 80018dc:	b580      	push	{r7, lr}
 80018de:	b08c      	sub	sp, #48	; 0x30
 80018e0:	af00      	add	r7, sp, #0
 80018e2:	6078      	str	r0, [r7, #4]
 80018e4:	6039      	str	r1, [r7, #0]
	bool condition = true;
 80018e6:	2301      	movs	r3, #1
 80018e8:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
	while (condition)
 80018ec:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 80018f0:	2b00      	cmp	r3, #0
 80018f2:	d01d      	beq.n	8001930 <_ZN8Executor7executeEP15While_statement+0x54>
	{
		execute(whist->while_body);
 80018f4:	683b      	ldr	r3, [r7, #0]
 80018f6:	685b      	ldr	r3, [r3, #4]
 80018f8:	4619      	mov	r1, r3
 80018fa:	6878      	ldr	r0, [r7, #4]
 80018fc:	f7ff ff00 	bl	8001700 <_ZN8Executor7executeEP4Body>
		Symbol condition_symbol = EVALUATE(whist->condition);
 8001900:	f00a fbfc 	bl	800c0fc <_ZN21Expression_calculator12get_instanceEv>
 8001904:	4601      	mov	r1, r0
 8001906:	683b      	ldr	r3, [r7, #0]
 8001908:	681a      	ldr	r2, [r3, #0]
 800190a:	f107 030c 	add.w	r3, r7, #12
 800190e:	4618      	mov	r0, r3
 8001910:	f00a fc72 	bl	800c1f8 <_ZN21Expression_calculator8evaluateEP10Expression>
		condition = condition_symbol.get_bool();
 8001914:	f107 030c 	add.w	r3, r7, #12
 8001918:	4618      	mov	r0, r3
 800191a:	f016 fa0d 	bl	8017d38 <_ZN6Symbol8get_boolEv>
 800191e:	4603      	mov	r3, r0
 8001920:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
		Symbol condition_symbol = EVALUATE(whist->condition);
 8001924:	f107 030c 	add.w	r3, r7, #12
 8001928:	4618      	mov	r0, r3
 800192a:	f7ff fd37 	bl	800139c <_ZN6SymbolD1Ev>
	while (condition)
 800192e:	e7dd      	b.n	80018ec <_ZN8Executor7executeEP15While_statement+0x10>
	}
}
 8001930:	bf00      	nop
 8001932:	3730      	adds	r7, #48	; 0x30
 8001934:	46bd      	mov	sp, r7
 8001936:	bd80      	pop	{r7, pc}

08001938 <_ZN8Executor7executeEP11Method_call>:

void Executor::execute(Method_call *mcall)
{
 8001938:	b580      	push	{r7, lr}
 800193a:	b082      	sub	sp, #8
 800193c:	af00      	add	r7, sp, #0
 800193e:	6078      	str	r0, [r7, #4]
 8001940:	6039      	str	r1, [r7, #0]
	Method_handler::run_method(mcall);
 8001942:	6838      	ldr	r0, [r7, #0]
 8001944:	f010 fbfc 	bl	8012140 <_ZN14Method_handler10run_methodEP11Method_call>
}
 8001948:	bf00      	nop
 800194a:	3708      	adds	r7, #8
 800194c:	46bd      	mov	sp, r7
 800194e:	bd80      	pop	{r7, pc}

08001950 <_ZN8Executor7executeEP13Function_call>:

void Executor::execute(Function_call *fcall)
{
 8001950:	b580      	push	{r7, lr}
 8001952:	b08a      	sub	sp, #40	; 0x28
 8001954:	af00      	add	r7, sp, #0
 8001956:	6078      	str	r0, [r7, #4]
 8001958:	6039      	str	r1, [r7, #0]
	Function_handler::run_function(fcall);
 800195a:	f107 0308 	add.w	r3, r7, #8
 800195e:	6839      	ldr	r1, [r7, #0]
 8001960:	4618      	mov	r0, r3
 8001962:	f00c fb4b 	bl	800dffc <_ZN16Function_handler12run_functionEP13Function_call>
 8001966:	f107 0308 	add.w	r3, r7, #8
 800196a:	4618      	mov	r0, r3
 800196c:	f7ff fd16 	bl	800139c <_ZN6SymbolD1Ev>
}
 8001970:	bf00      	nop
 8001972:	3728      	adds	r7, #40	; 0x28
 8001974:	46bd      	mov	sp, r7
 8001976:	bd80      	pop	{r7, pc}

08001978 <_ZN8VariableC1ERKS_>:
	VARIABLE_LOCAL,
	VARIABLE_ARG,
	VARIABLE_PAR,
}variable_type;

class Variable
 8001978:	b580      	push	{r7, lr}
 800197a:	b082      	sub	sp, #8
 800197c:	af00      	add	r7, sp, #0
 800197e:	6078      	str	r0, [r7, #4]
 8001980:	6039      	str	r1, [r7, #0]
 8001982:	683b      	ldr	r3, [r7, #0]
 8001984:	781a      	ldrb	r2, [r3, #0]
 8001986:	687b      	ldr	r3, [r7, #4]
 8001988:	701a      	strb	r2, [r3, #0]
 800198a:	687b      	ldr	r3, [r7, #4]
 800198c:	1d1a      	adds	r2, r3, #4
 800198e:	683b      	ldr	r3, [r7, #0]
 8001990:	3304      	adds	r3, #4
 8001992:	4619      	mov	r1, r3
 8001994:	4610      	mov	r0, r2
 8001996:	f022 fa1f 	bl	8023dd8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 800199a:	683b      	ldr	r3, [r7, #0]
 800199c:	69da      	ldr	r2, [r3, #28]
 800199e:	687b      	ldr	r3, [r7, #4]
 80019a0:	61da      	str	r2, [r3, #28]
 80019a2:	687b      	ldr	r3, [r7, #4]
 80019a4:	4618      	mov	r0, r3
 80019a6:	3708      	adds	r7, #8
 80019a8:	46bd      	mov	sp, r7
 80019aa:	bd80      	pop	{r7, pc}

080019ac <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_>:
    struct _Move_assign_base : _Copy_assign_alias<_Types...>
 80019ac:	b580      	push	{r7, lr}
 80019ae:	b082      	sub	sp, #8
 80019b0:	af00      	add	r7, sp, #0
 80019b2:	6078      	str	r0, [r7, #4]
 80019b4:	6039      	str	r1, [r7, #0]
 80019b6:	687b      	ldr	r3, [r7, #4]
 80019b8:	683a      	ldr	r2, [r7, #0]
 80019ba:	4611      	mov	r1, r2
 80019bc:	4618      	mov	r0, r3
 80019be:	f001 faa9 	bl	8002f14 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_>
 80019c2:	687b      	ldr	r3, [r7, #4]
 80019c4:	4618      	mov	r0, r3
 80019c6:	3708      	adds	r7, #8
 80019c8:	46bd      	mov	sp, r7
 80019ca:	bd80      	pop	{r7, pc}

080019cc <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_>:
    struct _Variant_base : _Move_assign_alias<_Types...>
 80019cc:	b580      	push	{r7, lr}
 80019ce:	b082      	sub	sp, #8
 80019d0:	af00      	add	r7, sp, #0
 80019d2:	6078      	str	r0, [r7, #4]
 80019d4:	6039      	str	r1, [r7, #0]
 80019d6:	687b      	ldr	r3, [r7, #4]
 80019d8:	683a      	ldr	r2, [r7, #0]
 80019da:	4611      	mov	r1, r2
 80019dc:	4618      	mov	r0, r3
 80019de:	f7ff ffe5 	bl	80019ac <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_>
 80019e2:	687b      	ldr	r3, [r7, #4]
 80019e4:	4618      	mov	r0, r3
 80019e6:	3708      	adds	r7, #8
 80019e8:	46bd      	mov	sp, r7
 80019ea:	bd80      	pop	{r7, pc}

080019ec <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSERKSA_>:
    class variant
 80019ec:	b580      	push	{r7, lr}
 80019ee:	b082      	sub	sp, #8
 80019f0:	af00      	add	r7, sp, #0
 80019f2:	6078      	str	r0, [r7, #4]
 80019f4:	6039      	str	r1, [r7, #0]
 80019f6:	687b      	ldr	r3, [r7, #4]
 80019f8:	683a      	ldr	r2, [r7, #0]
 80019fa:	4611      	mov	r1, r2
 80019fc:	4618      	mov	r0, r3
 80019fe:	f7ff ffe5 	bl	80019cc <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_>
 8001a02:	687b      	ldr	r3, [r7, #4]
 8001a04:	4618      	mov	r0, r3
 8001a06:	3708      	adds	r7, #8
 8001a08:	46bd      	mov	sp, r7
 8001a0a:	bd80      	pop	{r7, pc}

08001a0c <_ZN6SymbolaSERKS_>:
 8001a0c:	b580      	push	{r7, lr}
 8001a0e:	b082      	sub	sp, #8
 8001a10:	af00      	add	r7, sp, #0
 8001a12:	6078      	str	r0, [r7, #4]
 8001a14:	6039      	str	r1, [r7, #0]
 8001a16:	683b      	ldr	r3, [r7, #0]
 8001a18:	781a      	ldrb	r2, [r3, #0]
 8001a1a:	687b      	ldr	r3, [r7, #4]
 8001a1c:	701a      	strb	r2, [r3, #0]
 8001a1e:	683b      	ldr	r3, [r7, #0]
 8001a20:	1d1a      	adds	r2, r3, #4
 8001a22:	687b      	ldr	r3, [r7, #4]
 8001a24:	3304      	adds	r3, #4
 8001a26:	4611      	mov	r1, r2
 8001a28:	4618      	mov	r0, r3
 8001a2a:	f7ff ffdf 	bl	80019ec <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSERKSA_>
 8001a2e:	687b      	ldr	r3, [r7, #4]
 8001a30:	4618      	mov	r0, r3
 8001a32:	3708      	adds	r7, #8
 8001a34:	46bd      	mov	sp, r7
 8001a36:	bd80      	pop	{r7, pc}

08001a38 <_ZN8Executor7executeEP10Assignment>:

void Executor::execute(Assignment *assign)
{
 8001a38:	b590      	push	{r4, r7, lr}
 8001a3a:	b09d      	sub	sp, #116	; 0x74
 8001a3c:	af00      	add	r7, sp, #0
 8001a3e:	6078      	str	r0, [r7, #4]
 8001a40:	6039      	str	r1, [r7, #0]
	Symbol &variable = Variable_handler::get_instance().get_symbol(
 8001a42:	f017 fc29 	bl	8019298 <_ZN16Variable_handler12get_instanceEv>
 8001a46:	4604      	mov	r4, r0
			*assign->var);
 8001a48:	683b      	ldr	r3, [r7, #0]
 8001a4a:	681a      	ldr	r2, [r3, #0]
 8001a4c:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8001a50:	4611      	mov	r1, r2
 8001a52:	4618      	mov	r0, r3
 8001a54:	f7ff ff90 	bl	8001978 <_ZN8VariableC1ERKS_>
 8001a58:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8001a5c:	4619      	mov	r1, r3
 8001a5e:	4620      	mov	r0, r4
 8001a60:	f017 fcef 	bl	8019442 <_ZN16Variable_handler10get_symbolE8Variable>
 8001a64:	66f8      	str	r0, [r7, #108]	; 0x6c
 8001a66:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8001a6a:	4618      	mov	r0, r3
 8001a6c:	f014 ffda 	bl	8016a24 <_ZN8VariableD1Ev>
	Symbol value = EVALUATE(assign->value);
 8001a70:	f00a fb44 	bl	800c0fc <_ZN21Expression_calculator12get_instanceEv>
 8001a74:	4601      	mov	r1, r0
 8001a76:	683b      	ldr	r3, [r7, #0]
 8001a78:	685a      	ldr	r2, [r3, #4]
 8001a7a:	f107 0308 	add.w	r3, r7, #8
 8001a7e:	4618      	mov	r0, r3
 8001a80:	f00a fbba 	bl	800c1f8 <_ZN21Expression_calculator8evaluateEP10Expression>

	if (assign->var->index)
 8001a84:	683b      	ldr	r3, [r7, #0]
 8001a86:	681b      	ldr	r3, [r3, #0]
 8001a88:	69db      	ldr	r3, [r3, #28]
 8001a8a:	2b00      	cmp	r3, #0
 8001a8c:	d029      	beq.n	8001ae2 <_ZN8Executor7executeEP10Assignment+0xaa>
	{
		variable.type = SYMBOL_CONTAINER;
 8001a8e:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8001a90:	2204      	movs	r2, #4
 8001a92:	701a      	strb	r2, [r3, #0]
		int idx = check_index(assign->var->index);
 8001a94:	683b      	ldr	r3, [r7, #0]
 8001a96:	681b      	ldr	r3, [r3, #0]
 8001a98:	69db      	ldr	r3, [r3, #28]
 8001a9a:	4619      	mov	r1, r3
 8001a9c:	6878      	ldr	r0, [r7, #4]
 8001a9e:	f000 f82f 	bl	8001b00 <_ZN8Executor11check_indexEP10Expression>
 8001aa2:	66b8      	str	r0, [r7, #104]	; 0x68
		variable.resize(idx + 1);
 8001aa4:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 8001aa6:	3301      	adds	r3, #1
 8001aa8:	4619      	mov	r1, r3
 8001aaa:	6ef8      	ldr	r0, [r7, #108]	; 0x6c
 8001aac:	f016 faa0 	bl	8017ff0 <_ZN6Symbol6resizeEi>
		variable[idx] = value;
 8001ab0:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8001ab4:	6eb9      	ldr	r1, [r7, #104]	; 0x68
 8001ab6:	4618      	mov	r0, r3
 8001ab8:	f015 fa00 	bl	8016ebc <_ZN6SymbolC1Ei>
 8001abc:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8001ac0:	4619      	mov	r1, r3
 8001ac2:	6ef8      	ldr	r0, [r7, #108]	; 0x6c
 8001ac4:	f015 fa80 	bl	8016fc8 <_ZN6SymbolixES_>
 8001ac8:	4602      	mov	r2, r0
 8001aca:	f107 0308 	add.w	r3, r7, #8
 8001ace:	4619      	mov	r1, r3
 8001ad0:	4610      	mov	r0, r2
 8001ad2:	f7ff ff9b 	bl	8001a0c <_ZN6SymbolaSERKS_>
 8001ad6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8001ada:	4618      	mov	r0, r3
 8001adc:	f7ff fc5e 	bl	800139c <_ZN6SymbolD1Ev>
 8001ae0:	e005      	b.n	8001aee <_ZN8Executor7executeEP10Assignment+0xb6>
	}
	else
	{
		variable = value;
 8001ae2:	f107 0308 	add.w	r3, r7, #8
 8001ae6:	4619      	mov	r1, r3
 8001ae8:	6ef8      	ldr	r0, [r7, #108]	; 0x6c
 8001aea:	f7ff ff8f 	bl	8001a0c <_ZN6SymbolaSERKS_>
	Symbol value = EVALUATE(assign->value);
 8001aee:	f107 0308 	add.w	r3, r7, #8
 8001af2:	4618      	mov	r0, r3
 8001af4:	f7ff fc52 	bl	800139c <_ZN6SymbolD1Ev>
	}
}
 8001af8:	bf00      	nop
 8001afa:	3774      	adds	r7, #116	; 0x74
 8001afc:	46bd      	mov	sp, r7
 8001afe:	bd90      	pop	{r4, r7, pc}

08001b00 <_ZN8Executor11check_indexEP10Expression>:

int Executor::check_index(Expression *exp)
{
 8001b00:	b590      	push	{r4, r7, lr}
 8001b02:	b09b      	sub	sp, #108	; 0x6c
 8001b04:	af00      	add	r7, sp, #0
 8001b06:	6078      	str	r0, [r7, #4]
 8001b08:	6039      	str	r1, [r7, #0]
	Symbol idx_symbol = EVALUATE(exp);
 8001b0a:	f00a faf7 	bl	800c0fc <_ZN21Expression_calculator12get_instanceEv>
 8001b0e:	4601      	mov	r1, r0
 8001b10:	f107 030c 	add.w	r3, r7, #12
 8001b14:	683a      	ldr	r2, [r7, #0]
 8001b16:	4618      	mov	r0, r3
 8001b18:	f00a fb6e 	bl	800c1f8 <_ZN21Expression_calculator8evaluateEP10Expression>
	int i;
	if(idx_symbol.type == SYMBOL_INT || idx_symbol.type == SYMBOL_FLOAT)
 8001b1c:	7b3b      	ldrb	r3, [r7, #12]
 8001b1e:	2b00      	cmp	r3, #0
 8001b20:	d002      	beq.n	8001b28 <_ZN8Executor11check_indexEP10Expression+0x28>
 8001b22:	7b3b      	ldrb	r3, [r7, #12]
 8001b24:	2b01      	cmp	r3, #1
 8001b26:	d10e      	bne.n	8001b46 <_ZN8Executor11check_indexEP10Expression+0x46>
	{
		idx_symbol.round();
 8001b28:	f107 030c 	add.w	r3, r7, #12
 8001b2c:	4618      	mov	r0, r3
 8001b2e:	f016 fa8f 	bl	8018050 <_ZN6Symbol5roundEv>
		i = std::get<int>(idx_symbol.value);
 8001b32:	f107 030c 	add.w	r3, r7, #12
 8001b36:	3304      	adds	r3, #4
 8001b38:	4618      	mov	r0, r3
 8001b3a:	f001 fa01 	bl	8002f40 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8001b3e:	4603      	mov	r3, r0
 8001b40:	681b      	ldr	r3, [r3, #0]
 8001b42:	667b      	str	r3, [r7, #100]	; 0x64
 8001b44:	e01b      	b.n	8001b7e <_ZN8Executor11check_indexEP10Expression+0x7e>
	}
	else
	{
		Transmitter::report_error("index must be a number");
 8001b46:	f107 0344 	add.w	r3, r7, #68	; 0x44
 8001b4a:	4618      	mov	r0, r3
 8001b4c:	f021 fce4 	bl	8023518 <_ZNSaIcEC1Ev>
 8001b50:	f107 0244 	add.w	r2, r7, #68	; 0x44
 8001b54:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001b58:	491e      	ldr	r1, [pc, #120]	; (8001bd4 <_ZN8Executor11check_indexEP10Expression+0xd4>)
 8001b5a:	4618      	mov	r0, r3
 8001b5c:	f000 f915 	bl	8001d8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8001b60:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001b64:	4618      	mov	r0, r3
 8001b66:	f017 f84b 	bl	8018c00 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8001b6a:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001b6e:	4618      	mov	r0, r3
 8001b70:	f021 ff63 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8001b74:	f107 0344 	add.w	r3, r7, #68	; 0x44
 8001b78:	4618      	mov	r0, r3
 8001b7a:	f021 fcce 	bl	802351a <_ZNSaIcED1Ev>
	}

	if (i < 0)
 8001b7e:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8001b80:	2b00      	cmp	r3, #0
 8001b82:	da1b      	bge.n	8001bbc <_ZN8Executor11check_indexEP10Expression+0xbc>
	{
		Transmitter::report_error("index can not be negative");
 8001b84:	f107 0360 	add.w	r3, r7, #96	; 0x60
 8001b88:	4618      	mov	r0, r3
 8001b8a:	f021 fcc5 	bl	8023518 <_ZNSaIcEC1Ev>
 8001b8e:	f107 0260 	add.w	r2, r7, #96	; 0x60
 8001b92:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8001b96:	4910      	ldr	r1, [pc, #64]	; (8001bd8 <_ZN8Executor11check_indexEP10Expression+0xd8>)
 8001b98:	4618      	mov	r0, r3
 8001b9a:	f000 f8f6 	bl	8001d8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8001b9e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8001ba2:	4618      	mov	r0, r3
 8001ba4:	f017 f82c 	bl	8018c00 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8001ba8:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8001bac:	4618      	mov	r0, r3
 8001bae:	f021 ff44 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8001bb2:	f107 0360 	add.w	r3, r7, #96	; 0x60
 8001bb6:	4618      	mov	r0, r3
 8001bb8:	f021 fcaf 	bl	802351a <_ZNSaIcED1Ev>
	}
	return i;
 8001bbc:	6e7c      	ldr	r4, [r7, #100]	; 0x64
	Symbol idx_symbol = EVALUATE(exp);
 8001bbe:	f107 030c 	add.w	r3, r7, #12
 8001bc2:	4618      	mov	r0, r3
 8001bc4:	f7ff fbea 	bl	800139c <_ZN6SymbolD1Ev>
	return i;
 8001bc8:	4623      	mov	r3, r4
}
 8001bca:	4618      	mov	r0, r3
 8001bcc:	376c      	adds	r7, #108	; 0x6c
 8001bce:	46bd      	mov	sp, r7
 8001bd0:	bd90      	pop	{r4, r7, pc}
 8001bd2:	bf00      	nop
 8001bd4:	08029444 	.word	0x08029444
 8001bd8:	0802945c 	.word	0x0802945c

08001bdc <_ZN8Executor5abortEv>:

void Executor::abort()
{
 8001bdc:	b580      	push	{r7, lr}
 8001bde:	b090      	sub	sp, #64	; 0x40
 8001be0:	af00      	add	r7, sp, #0
 8001be2:	6078      	str	r0, [r7, #4]
	if (p)
 8001be4:	687b      	ldr	r3, [r7, #4]
 8001be6:	681b      	ldr	r3, [r3, #0]
 8001be8:	2b00      	cmp	r3, #0
 8001bea:	d006      	beq.n	8001bfa <_ZN8Executor5abortEv+0x1e>
	{
		execute(p->finish);
 8001bec:	687b      	ldr	r3, [r7, #4]
 8001bee:	681b      	ldr	r3, [r3, #0]
 8001bf0:	689b      	ldr	r3, [r3, #8]
 8001bf2:	4619      	mov	r1, r3
 8001bf4:	6878      	ldr	r0, [r7, #4]
 8001bf6:	f7ff fd83 	bl	8001700 <_ZN8Executor7executeEP4Body>
	}
	Transmitter::send_string("fin\n");
 8001bfa:	f107 0320 	add.w	r3, r7, #32
 8001bfe:	4618      	mov	r0, r3
 8001c00:	f021 fc8a 	bl	8023518 <_ZNSaIcEC1Ev>
 8001c04:	f107 0220 	add.w	r2, r7, #32
 8001c08:	f107 0308 	add.w	r3, r7, #8
 8001c0c:	4919      	ldr	r1, [pc, #100]	; (8001c74 <_ZN8Executor5abortEv+0x98>)
 8001c0e:	4618      	mov	r0, r3
 8001c10:	f000 f8bb 	bl	8001d8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8001c14:	f107 0308 	add.w	r3, r7, #8
 8001c18:	4618      	mov	r0, r3
 8001c1a:	f017 f883 	bl	8018d24 <_ZN11Transmitter11send_stringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8001c1e:	f107 0308 	add.w	r3, r7, #8
 8001c22:	4618      	mov	r0, r3
 8001c24:	f021 ff09 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8001c28:	f107 0320 	add.w	r3, r7, #32
 8001c2c:	4618      	mov	r0, r3
 8001c2e:	f021 fc74 	bl	802351a <_ZNSaIcED1Ev>
	Transmitter::report_error("aborted by user");
 8001c32:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8001c36:	4618      	mov	r0, r3
 8001c38:	f021 fc6e 	bl	8023518 <_ZNSaIcEC1Ev>
 8001c3c:	f107 023c 	add.w	r2, r7, #60	; 0x3c
 8001c40:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8001c44:	490c      	ldr	r1, [pc, #48]	; (8001c78 <_ZN8Executor5abortEv+0x9c>)
 8001c46:	4618      	mov	r0, r3
 8001c48:	f000 f89f 	bl	8001d8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8001c4c:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8001c50:	4618      	mov	r0, r3
 8001c52:	f016 ffd5 	bl	8018c00 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8001c56:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8001c5a:	4618      	mov	r0, r3
 8001c5c:	f021 feed 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8001c60:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8001c64:	4618      	mov	r0, r3
 8001c66:	f021 fc58 	bl	802351a <_ZNSaIcED1Ev>
}
 8001c6a:	bf00      	nop
 8001c6c:	3740      	adds	r7, #64	; 0x40
 8001c6e:	46bd      	mov	sp, r7
 8001c70:	bd80      	pop	{r7, pc}
 8001c72:	bf00      	nop
 8001c74:	0802943c 	.word	0x0802943c
 8001c78:	08029478 	.word	0x08029478

08001c7c <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>:
      eq(const char_type& __c1, const char_type& __c2)
 8001c7c:	b480      	push	{r7}
 8001c7e:	b083      	sub	sp, #12
 8001c80:	af00      	add	r7, sp, #0
 8001c82:	6078      	str	r0, [r7, #4]
 8001c84:	6039      	str	r1, [r7, #0]
      { return __c1 == __c2; }
 8001c86:	687b      	ldr	r3, [r7, #4]
 8001c88:	781a      	ldrb	r2, [r3, #0]
 8001c8a:	683b      	ldr	r3, [r7, #0]
 8001c8c:	781b      	ldrb	r3, [r3, #0]
 8001c8e:	429a      	cmp	r2, r3
 8001c90:	bf0c      	ite	eq
 8001c92:	2301      	moveq	r3, #1
 8001c94:	2300      	movne	r3, #0
 8001c96:	b2db      	uxtb	r3, r3
 8001c98:	4618      	mov	r0, r3
 8001c9a:	370c      	adds	r7, #12
 8001c9c:	46bd      	mov	sp, r7
 8001c9e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ca2:	4770      	bx	lr

08001ca4 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>:
    char_traits<_CharT>::
 8001ca4:	b580      	push	{r7, lr}
 8001ca6:	b084      	sub	sp, #16
 8001ca8:	af00      	add	r7, sp, #0
 8001caa:	6078      	str	r0, [r7, #4]
      std::size_t __i = 0;
 8001cac:	2300      	movs	r3, #0
 8001cae:	60fb      	str	r3, [r7, #12]
      while (!eq(__p[__i], char_type()))
 8001cb0:	687a      	ldr	r2, [r7, #4]
 8001cb2:	68fb      	ldr	r3, [r7, #12]
 8001cb4:	4413      	add	r3, r2
 8001cb6:	2200      	movs	r2, #0
 8001cb8:	72fa      	strb	r2, [r7, #11]
 8001cba:	f107 020b 	add.w	r2, r7, #11
 8001cbe:	4611      	mov	r1, r2
 8001cc0:	4618      	mov	r0, r3
 8001cc2:	f7ff ffdb 	bl	8001c7c <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>
 8001cc6:	4603      	mov	r3, r0
 8001cc8:	f083 0301 	eor.w	r3, r3, #1
 8001ccc:	b2db      	uxtb	r3, r3
 8001cce:	2b00      	cmp	r3, #0
 8001cd0:	d003      	beq.n	8001cda <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0x36>
        ++__i;
 8001cd2:	68fb      	ldr	r3, [r7, #12]
 8001cd4:	3301      	adds	r3, #1
 8001cd6:	60fb      	str	r3, [r7, #12]
      while (!eq(__p[__i], char_type()))
 8001cd8:	e7ea      	b.n	8001cb0 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0xc>
      return __i;
 8001cda:	68fb      	ldr	r3, [r7, #12]
    }
 8001cdc:	4618      	mov	r0, r3
 8001cde:	3710      	adds	r7, #16
 8001ce0:	46bd      	mov	sp, r7
 8001ce2:	bd80      	pop	{r7, pc}

08001ce4 <_ZNSaISt4pairIKc10token_typeEEC1Ev>:
#endif

      // _GLIBCXX_RESOLVE_LIB_DEFECTS
      // 3035. std::allocator's constructors should be constexpr
      _GLIBCXX20_CONSTEXPR
      allocator() _GLIBCXX_NOTHROW { }
 8001ce4:	b580      	push	{r7, lr}
 8001ce6:	b082      	sub	sp, #8
 8001ce8:	af00      	add	r7, sp, #0
 8001cea:	6078      	str	r0, [r7, #4]
 8001cec:	6878      	ldr	r0, [r7, #4]
 8001cee:	f001 f942 	bl	8002f76 <_ZN9__gnu_cxx13new_allocatorISt4pairIKc10token_typeEEC1Ev>
 8001cf2:	687b      	ldr	r3, [r7, #4]
 8001cf4:	4618      	mov	r0, r3
 8001cf6:	3708      	adds	r7, #8
 8001cf8:	46bd      	mov	sp, r7
 8001cfa:	bd80      	pop	{r7, pc}

08001cfc <_ZNSaISt4pairIKc10token_typeEED1Ev>:

      template<typename _Tp1>
	_GLIBCXX20_CONSTEXPR
	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }

      ~allocator() _GLIBCXX_NOTHROW { }
 8001cfc:	b580      	push	{r7, lr}
 8001cfe:	b082      	sub	sp, #8
 8001d00:	af00      	add	r7, sp, #0
 8001d02:	6078      	str	r0, [r7, #4]
 8001d04:	6878      	ldr	r0, [r7, #4]
 8001d06:	f001 f941 	bl	8002f8c <_ZN9__gnu_cxx13new_allocatorISt4pairIKc10token_typeEED1Ev>
 8001d0a:	687b      	ldr	r3, [r7, #4]
 8001d0c:	4618      	mov	r0, r3
 8001d0e:	3708      	adds	r7, #8
 8001d10:	46bd      	mov	sp, r7
 8001d12:	bd80      	pop	{r7, pc}

08001d14 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>:
       *  Create a %map consisting of copies of the elements in the
       *  initializer_list @a __l.
       *  This is linear in N if the range is already sorted, and NlogN
       *  otherwise (where N is @a __l.size()).
       */
      map(initializer_list<value_type> __l,
 8001d14:	b5b0      	push	{r4, r5, r7, lr}
 8001d16:	b086      	sub	sp, #24
 8001d18:	af00      	add	r7, sp, #0
 8001d1a:	60f8      	str	r0, [r7, #12]
 8001d1c:	1d38      	adds	r0, r7, #4
 8001d1e:	e880 0006 	stmia.w	r0, {r1, r2}
 8001d22:	603b      	str	r3, [r7, #0]
	  const _Compare& __comp = _Compare(),
	  const allocator_type& __a = allocator_type())
      : _M_t(__comp, _Pair_alloc_type(__a))
 8001d24:	68fc      	ldr	r4, [r7, #12]
 8001d26:	f107 0314 	add.w	r3, r7, #20
 8001d2a:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8001d2c:	4618      	mov	r0, r3
 8001d2e:	f001 f938 	bl	8002fa2 <_ZNSaISt4pairIKc10token_typeEEC1ERKS3_>
 8001d32:	f107 0314 	add.w	r3, r7, #20
 8001d36:	461a      	mov	r2, r3
 8001d38:	6839      	ldr	r1, [r7, #0]
 8001d3a:	4620      	mov	r0, r4
 8001d3c:	f001 f94b 	bl	8002fd6 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EEC1ERKS7_RKS8_>
 8001d40:	f107 0314 	add.w	r3, r7, #20
 8001d44:	4618      	mov	r0, r3
 8001d46:	f7ff ffd9 	bl	8001cfc <_ZNSaISt4pairIKc10token_typeEED1Ev>
      { _M_t._M_insert_range_unique(__l.begin(), __l.end()); }
 8001d4a:	68fc      	ldr	r4, [r7, #12]
 8001d4c:	1d3b      	adds	r3, r7, #4
 8001d4e:	4618      	mov	r0, r3
 8001d50:	f001 f974 	bl	800303c <_ZNKSt16initializer_listISt4pairIKc10token_typeEE5beginEv>
 8001d54:	4605      	mov	r5, r0
 8001d56:	1d3b      	adds	r3, r7, #4
 8001d58:	4618      	mov	r0, r3
 8001d5a:	f001 f97b 	bl	8003054 <_ZNKSt16initializer_listISt4pairIKc10token_typeEE3endEv>
 8001d5e:	4603      	mov	r3, r0
 8001d60:	461a      	mov	r2, r3
 8001d62:	4629      	mov	r1, r5
 8001d64:	4620      	mov	r0, r4
 8001d66:	f001 f987 	bl	8003078 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE22_M_insert_range_uniqueIPKS3_EENSt9enable_ifIXsrSt7is_sameIS3_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESG_SG_>
 8001d6a:	68fb      	ldr	r3, [r7, #12]
 8001d6c:	4618      	mov	r0, r3
 8001d6e:	3718      	adds	r7, #24
 8001d70:	46bd      	mov	sp, r7
 8001d72:	bdb0      	pop	{r4, r5, r7, pc}

08001d74 <_ZSt7forwardIRA5_KcEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8001d74:	b480      	push	{r7}
 8001d76:	b083      	sub	sp, #12
 8001d78:	af00      	add	r7, sp, #0
 8001d7a:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8001d7c:	687b      	ldr	r3, [r7, #4]
 8001d7e:	4618      	mov	r0, r3
 8001d80:	370c      	adds	r7, #12
 8001d82:	46bd      	mov	sp, r7
 8001d84:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d88:	4770      	bx	lr

08001d8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>:
#if __cpp_deduction_guides && ! defined _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
      // _GLIBCXX_RESOLVE_LIB_DEFECTS
      // 3076. basic_string CTAD ambiguity
      template<typename = _RequireAllocator<_Alloc>>
#endif
      basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
 8001d8a:	b590      	push	{r4, r7, lr}
 8001d8c:	b085      	sub	sp, #20
 8001d8e:	af00      	add	r7, sp, #0
 8001d90:	60f8      	str	r0, [r7, #12]
 8001d92:	60b9      	str	r1, [r7, #8]
 8001d94:	607a      	str	r2, [r7, #4]
      : _M_dataplus(_M_local_data(), __a)
 8001d96:	68fc      	ldr	r4, [r7, #12]
 8001d98:	68f8      	ldr	r0, [r7, #12]
 8001d9a:	f021 fd3d 	bl	8023818 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv>
 8001d9e:	4603      	mov	r3, r0
 8001da0:	687a      	ldr	r2, [r7, #4]
 8001da2:	4619      	mov	r1, r3
 8001da4:	4620      	mov	r0, r4
 8001da6:	f022 f815 	bl	8023dd4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_>
      { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
 8001daa:	68bb      	ldr	r3, [r7, #8]
 8001dac:	2b00      	cmp	r3, #0
 8001dae:	d006      	beq.n	8001dbe <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x34>
 8001db0:	68b8      	ldr	r0, [r7, #8]
 8001db2:	f7ff f93b 	bl	800102c <_ZNSt11char_traitsIcE6lengthEPKc>
 8001db6:	4602      	mov	r2, r0
 8001db8:	68bb      	ldr	r3, [r7, #8]
 8001dba:	4413      	add	r3, r2
 8001dbc:	e001      	b.n	8001dc2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x38>
 8001dbe:	68bb      	ldr	r3, [r7, #8]
 8001dc0:	3b01      	subs	r3, #1
 8001dc2:	461a      	mov	r2, r3
 8001dc4:	68b9      	ldr	r1, [r7, #8]
 8001dc6:	68f8      	ldr	r0, [r7, #12]
 8001dc8:	f001 f8c6 	bl	8002f58 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_>
 8001dcc:	68fb      	ldr	r3, [r7, #12]
 8001dce:	4618      	mov	r0, r3
 8001dd0:	3714      	adds	r7, #20
 8001dd2:	46bd      	mov	sp, r7
 8001dd4:	bd90      	pop	{r4, r7, pc}

08001dd6 <_ZSt7forwardIRA6_KcEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8001dd6:	b480      	push	{r7}
 8001dd8:	b083      	sub	sp, #12
 8001dda:	af00      	add	r7, sp, #0
 8001ddc:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8001dde:	687b      	ldr	r3, [r7, #4]
 8001de0:	4618      	mov	r0, r3
 8001de2:	370c      	adds	r7, #12
 8001de4:	46bd      	mov	sp, r7
 8001de6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001dea:	4770      	bx	lr

08001dec <_ZSt7forwardIRA7_KcEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8001dec:	b480      	push	{r7}
 8001dee:	b083      	sub	sp, #12
 8001df0:	af00      	add	r7, sp, #0
 8001df2:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8001df4:	687b      	ldr	r3, [r7, #4]
 8001df6:	4618      	mov	r0, r3
 8001df8:	370c      	adds	r7, #12
 8001dfa:	46bd      	mov	sp, r7
 8001dfc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e00:	4770      	bx	lr

08001e02 <_ZSt7forwardIRA3_KcEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8001e02:	b480      	push	{r7}
 8001e04:	b083      	sub	sp, #12
 8001e06:	af00      	add	r7, sp, #0
 8001e08:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8001e0a:	687b      	ldr	r3, [r7, #4]
 8001e0c:	4618      	mov	r0, r3
 8001e0e:	370c      	adds	r7, #12
 8001e10:	46bd      	mov	sp, r7
 8001e12:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e16:	4770      	bx	lr

08001e18 <_ZSt7forwardIRA4_KcEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8001e18:	b480      	push	{r7}
 8001e1a:	b083      	sub	sp, #12
 8001e1c:	af00      	add	r7, sp, #0
 8001e1e:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8001e20:	687b      	ldr	r3, [r7, #4]
 8001e22:	4618      	mov	r0, r3
 8001e24:	370c      	adds	r7, #12
 8001e26:	46bd      	mov	sp, r7
 8001e28:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e2c:	4770      	bx	lr

08001e2e <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
 8001e2e:	b580      	push	{r7, lr}
 8001e30:	b082      	sub	sp, #8
 8001e32:	af00      	add	r7, sp, #0
 8001e34:	6078      	str	r0, [r7, #4]
 8001e36:	6878      	ldr	r0, [r7, #4]
 8001e38:	f001 f94a 	bl	80030d0 <_ZN9__gnu_cxx13new_allocatorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 8001e3c:	687b      	ldr	r3, [r7, #4]
 8001e3e:	4618      	mov	r0, r3
 8001e40:	3708      	adds	r7, #8
 8001e42:	46bd      	mov	sp, r7
 8001e44:	bd80      	pop	{r7, pc}

08001e46 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
 8001e46:	b580      	push	{r7, lr}
 8001e48:	b082      	sub	sp, #8
 8001e4a:	af00      	add	r7, sp, #0
 8001e4c:	6078      	str	r0, [r7, #4]
 8001e4e:	6878      	ldr	r0, [r7, #4]
 8001e50:	f001 f949 	bl	80030e6 <_ZN9__gnu_cxx13new_allocatorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 8001e54:	687b      	ldr	r3, [r7, #4]
 8001e56:	4618      	mov	r0, r3
 8001e58:	3708      	adds	r7, #8
 8001e5a:	46bd      	mov	sp, r7
 8001e5c:	bd80      	pop	{r7, pc}

08001e5e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>:
      map(initializer_list<value_type> __l,
 8001e5e:	b5b0      	push	{r4, r5, r7, lr}
 8001e60:	b086      	sub	sp, #24
 8001e62:	af00      	add	r7, sp, #0
 8001e64:	60f8      	str	r0, [r7, #12]
 8001e66:	1d38      	adds	r0, r7, #4
 8001e68:	e880 0006 	stmia.w	r0, {r1, r2}
 8001e6c:	603b      	str	r3, [r7, #0]
      : _M_t(__comp, _Pair_alloc_type(__a))
 8001e6e:	68fc      	ldr	r4, [r7, #12]
 8001e70:	f107 0314 	add.w	r3, r7, #20
 8001e74:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8001e76:	4618      	mov	r0, r3
 8001e78:	f001 f940 	bl	80030fc <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1ERKS9_>
 8001e7c:	f107 0314 	add.w	r3, r7, #20
 8001e80:	461a      	mov	r2, r3
 8001e82:	6839      	ldr	r1, [r7, #0]
 8001e84:	4620      	mov	r0, r4
 8001e86:	f001 f953 	bl	8003130 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EEC1ERKSD_RKSE_>
 8001e8a:	f107 0314 	add.w	r3, r7, #20
 8001e8e:	4618      	mov	r0, r3
 8001e90:	f7ff ffd9 	bl	8001e46 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
      { _M_t._M_insert_range_unique(__l.begin(), __l.end()); }
 8001e94:	68fc      	ldr	r4, [r7, #12]
 8001e96:	1d3b      	adds	r3, r7, #4
 8001e98:	4618      	mov	r0, r3
 8001e9a:	f001 f97c 	bl	8003196 <_ZNKSt16initializer_listISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE5beginEv>
 8001e9e:	4605      	mov	r5, r0
 8001ea0:	1d3b      	adds	r3, r7, #4
 8001ea2:	4618      	mov	r0, r3
 8001ea4:	f001 f983 	bl	80031ae <_ZNKSt16initializer_listISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE3endEv>
 8001ea8:	4603      	mov	r3, r0
 8001eaa:	461a      	mov	r2, r3
 8001eac:	4629      	mov	r1, r5
 8001eae:	4620      	mov	r0, r4
 8001eb0:	f001 f992 	bl	80031d8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE22_M_insert_range_uniqueIPKS9_EENSt9enable_ifIXsrSt7is_sameIS9_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESM_SM_>
 8001eb4:	68fb      	ldr	r3, [r7, #12]
 8001eb6:	4618      	mov	r0, r3
 8001eb8:	3718      	adds	r7, #24
 8001eba:	46bd      	mov	sp, r7
 8001ebc:	bdb0      	pop	{r4, r5, r7, pc}

08001ebe <_ZNSaISt4pairIKc12double_tokenEEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
 8001ebe:	b580      	push	{r7, lr}
 8001ec0:	b082      	sub	sp, #8
 8001ec2:	af00      	add	r7, sp, #0
 8001ec4:	6078      	str	r0, [r7, #4]
 8001ec6:	6878      	ldr	r0, [r7, #4]
 8001ec8:	f001 f9b2 	bl	8003230 <_ZN9__gnu_cxx13new_allocatorISt4pairIKc12double_tokenEEC1Ev>
 8001ecc:	687b      	ldr	r3, [r7, #4]
 8001ece:	4618      	mov	r0, r3
 8001ed0:	3708      	adds	r7, #8
 8001ed2:	46bd      	mov	sp, r7
 8001ed4:	bd80      	pop	{r7, pc}

08001ed6 <_ZNSaISt4pairIKc12double_tokenEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
 8001ed6:	b580      	push	{r7, lr}
 8001ed8:	b082      	sub	sp, #8
 8001eda:	af00      	add	r7, sp, #0
 8001edc:	6078      	str	r0, [r7, #4]
 8001ede:	6878      	ldr	r0, [r7, #4]
 8001ee0:	f001 f9b1 	bl	8003246 <_ZN9__gnu_cxx13new_allocatorISt4pairIKc12double_tokenEED1Ev>
 8001ee4:	687b      	ldr	r3, [r7, #4]
 8001ee6:	4618      	mov	r0, r3
 8001ee8:	3708      	adds	r7, #8
 8001eea:	46bd      	mov	sp, r7
 8001eec:	bd80      	pop	{r7, pc}

08001eee <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>:
      map(initializer_list<value_type> __l,
 8001eee:	b5b0      	push	{r4, r5, r7, lr}
 8001ef0:	b086      	sub	sp, #24
 8001ef2:	af00      	add	r7, sp, #0
 8001ef4:	60f8      	str	r0, [r7, #12]
 8001ef6:	1d38      	adds	r0, r7, #4
 8001ef8:	e880 0006 	stmia.w	r0, {r1, r2}
 8001efc:	603b      	str	r3, [r7, #0]
      : _M_t(__comp, _Pair_alloc_type(__a))
 8001efe:	68fc      	ldr	r4, [r7, #12]
 8001f00:	f107 0314 	add.w	r3, r7, #20
 8001f04:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8001f06:	4618      	mov	r0, r3
 8001f08:	f001 f9a8 	bl	800325c <_ZNSaISt4pairIKc12double_tokenEEC1ERKS3_>
 8001f0c:	f107 0314 	add.w	r3, r7, #20
 8001f10:	461a      	mov	r2, r3
 8001f12:	6839      	ldr	r1, [r7, #0]
 8001f14:	4620      	mov	r0, r4
 8001f16:	f001 f9bb 	bl	8003290 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EEC1ERKS7_RKS8_>
 8001f1a:	f107 0314 	add.w	r3, r7, #20
 8001f1e:	4618      	mov	r0, r3
 8001f20:	f7ff ffd9 	bl	8001ed6 <_ZNSaISt4pairIKc12double_tokenEED1Ev>
      { _M_t._M_insert_range_unique(__l.begin(), __l.end()); }
 8001f24:	68fc      	ldr	r4, [r7, #12]
 8001f26:	1d3b      	adds	r3, r7, #4
 8001f28:	4618      	mov	r0, r3
 8001f2a:	f001 f9e4 	bl	80032f6 <_ZNKSt16initializer_listISt4pairIKc12double_tokenEE5beginEv>
 8001f2e:	4605      	mov	r5, r0
 8001f30:	1d3b      	adds	r3, r7, #4
 8001f32:	4618      	mov	r0, r3
 8001f34:	f001 f9eb 	bl	800330e <_ZNKSt16initializer_listISt4pairIKc12double_tokenEE3endEv>
 8001f38:	4603      	mov	r3, r0
 8001f3a:	461a      	mov	r2, r3
 8001f3c:	4629      	mov	r1, r5
 8001f3e:	4620      	mov	r0, r4
 8001f40:	f001 f9f9 	bl	8003336 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE22_M_insert_range_uniqueIPKS3_EENSt9enable_ifIXsrSt7is_sameIS3_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESG_SG_>
 8001f44:	68fb      	ldr	r3, [r7, #12]
 8001f46:	4618      	mov	r0, r3
 8001f48:	3718      	adds	r7, #24
 8001f4a:	46bd      	mov	sp, r7
 8001f4c:	bdb0      	pop	{r4, r5, r7, pc}

08001f4e <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEED1Ev>:
      ~_Variant_storage()
 8001f4e:	b580      	push	{r7, lr}
 8001f50:	b082      	sub	sp, #8
 8001f52:	af00      	add	r7, sp, #0
 8001f54:	6078      	str	r0, [r7, #4]
      { _M_reset(); }
 8001f56:	6878      	ldr	r0, [r7, #4]
 8001f58:	f001 fa19 	bl	800338e <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE8_M_resetEv>
 8001f5c:	687b      	ldr	r3, [r7, #4]
 8001f5e:	4618      	mov	r0, r3
 8001f60:	3708      	adds	r7, #8
 8001f62:	46bd      	mov	sp, r7
 8001f64:	bd80      	pop	{r7, pc}

08001f66 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ERKSC_>:
      _Copy_ctor_base(const _Copy_ctor_base& __rhs)
 8001f66:	b580      	push	{r7, lr}
 8001f68:	b082      	sub	sp, #8
 8001f6a:	af00      	add	r7, sp, #0
 8001f6c:	6078      	str	r0, [r7, #4]
 8001f6e:	6039      	str	r1, [r7, #0]
      {
 8001f70:	687b      	ldr	r3, [r7, #4]
 8001f72:	4618      	mov	r0, r3
 8001f74:	f001 fa26 	bl	80033c4 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1Ev>
	__variant_construct<_Types...>(*this, __rhs);
 8001f78:	6839      	ldr	r1, [r7, #0]
 8001f7a:	6878      	ldr	r0, [r7, #4]
 8001f7c:	f001 fc22 	bl	80037c4 <_ZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Copy_ctor_baseILb0EJifbS7_SB_EEERKSD_EEvOT0_OT1_>
      }
 8001f80:	687b      	ldr	r3, [r7, #4]
 8001f82:	4618      	mov	r0, r3
 8001f84:	3708      	adds	r7, #8
 8001f86:	46bd      	mov	sp, r7
 8001f88:	bd80      	pop	{r7, pc}

08001f8a <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEERNSt8__detail9__variant17_Move_assign_baseILb0EJifbS5_S9_EEEEDcOT0_>:
    __variant_cast(_Tp&& __rhs)
 8001f8a:	b480      	push	{r7}
 8001f8c:	b083      	sub	sp, #12
 8001f8e:	af00      	add	r7, sp, #0
 8001f90:	6078      	str	r0, [r7, #4]
	    return static_cast<variant<_Types...>&>(__rhs);
 8001f92:	687b      	ldr	r3, [r7, #4]
    }
 8001f94:	4618      	mov	r0, r3
 8001f96:	370c      	adds	r7, #12
 8001f98:	46bd      	mov	sp, r7
 8001f9a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f9e:	4770      	bx	lr

08001fa0 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8001fa0:	b580      	push	{r7, lr}
 8001fa2:	b082      	sub	sp, #8
 8001fa4:	af00      	add	r7, sp, #0
 8001fa6:	7138      	strb	r0, [r7, #4]
 8001fa8:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8001faa:	6838      	ldr	r0, [r7, #0]
 8001fac:	f001 fc3d 	bl	800382a <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8001fb0:	4603      	mov	r3, r0
 8001fb2:	4618      	mov	r0, r3
 8001fb4:	f001 fc44 	bl	8003840 <_ZNRSt8__detail9__variant14_UninitializedIiLb1EE6_M_getEv>
 8001fb8:	4603      	mov	r3, r0
 8001fba:	4618      	mov	r0, r3
 8001fbc:	3708      	adds	r7, #8
 8001fbe:	46bd      	mov	sp, r7
 8001fc0:	bd80      	pop	{r7, pc}

08001fc2 <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8001fc2:	b590      	push	{r4, r7, lr}
 8001fc4:	b083      	sub	sp, #12
 8001fc6:	af00      	add	r7, sp, #0
 8001fc8:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8001fca:	6878      	ldr	r0, [r7, #4]
 8001fcc:	f001 fc22 	bl	8003814 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8001fd0:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8001fd2:	4619      	mov	r1, r3
 8001fd4:	4620      	mov	r0, r4
 8001fd6:	f7ff ffe3 	bl	8001fa0 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 8001fda:	4603      	mov	r3, r0
    }
 8001fdc:	4618      	mov	r0, r3
 8001fde:	370c      	adds	r7, #12
 8001fe0:	46bd      	mov	sp, r7
 8001fe2:	bd90      	pop	{r4, r7, pc}

08001fe4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESO_EEDcOSJ_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8001fe4:	b580      	push	{r7, lr}
 8001fe6:	b082      	sub	sp, #8
 8001fe8:	af00      	add	r7, sp, #0
 8001fea:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8001fec:	6878      	ldr	r0, [r7, #4]
 8001fee:	f001 fc11 	bl	8003814 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8001ff2:	4603      	mov	r3, r0
 8001ff4:	4618      	mov	r0, r3
 8001ff6:	f7ff ffe4 	bl	8001fc2 <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8001ffa:	4603      	mov	r3, r0
	}
 8001ffc:	4618      	mov	r0, r3
 8001ffe:	3708      	adds	r7, #8
 8002000:	46bd      	mov	sp, r7
 8002002:	bd80      	pop	{r7, pc}

08002004 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESL_SO_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8002004:	b5b0      	push	{r4, r5, r7, lr}
 8002006:	b084      	sub	sp, #16
 8002008:	af00      	add	r7, sp, #0
 800200a:	6078      	str	r0, [r7, #4]
 800200c:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 800200e:	6878      	ldr	r0, [r7, #4]
 8002010:	f001 fbf5 	bl	80037fe <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 8002014:	4604      	mov	r4, r0
 8002016:	6838      	ldr	r0, [r7, #0]
 8002018:	f001 fbfc 	bl	8003814 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800201c:	4603      	mov	r3, r0
 800201e:	4618      	mov	r0, r3
 8002020:	f7ff ffe0 	bl	8001fe4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESO_EEDcOSJ_>
 8002024:	4601      	mov	r1, r0
 8002026:	f107 030c 	add.w	r3, r7, #12
 800202a:	461a      	mov	r2, r3
 800202c:	4620      	mov	r0, r4
 800202e:	f001 fc12 	bl	8003856 <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_JRiSt17integral_constantIjLj0EEEENSt15__invoke_resultISF_JDpT0_EE4typeESG_DpOSN_>
	      integral_constant<size_t, __indices>()...);
 8002032:	462b      	mov	r3, r5
      }
 8002034:	4618      	mov	r0, r3
 8002036:	3710      	adds	r7, #16
 8002038:	46bd      	mov	sp, r7
 800203a:	bdb0      	pop	{r4, r5, r7, pc}

0800203c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESL_SO_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800203c:	b5b0      	push	{r4, r5, r7, lr}
 800203e:	b082      	sub	sp, #8
 8002040:	af00      	add	r7, sp, #0
 8002042:	6078      	str	r0, [r7, #4]
 8002044:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8002046:	6878      	ldr	r0, [r7, #4]
 8002048:	f001 fbd9 	bl	80037fe <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 800204c:	4604      	mov	r4, r0
 800204e:	6838      	ldr	r0, [r7, #0]
 8002050:	f001 fbe0 	bl	8003814 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8002054:	4603      	mov	r3, r0
 8002056:	4619      	mov	r1, r3
 8002058:	4620      	mov	r0, r4
 800205a:	f7ff ffd3 	bl	8002004 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESL_SO_>
				   std::forward<_Variants>(__vars)...);
 800205e:	462b      	mov	r3, r5
      }
 8002060:	4618      	mov	r0, r3
 8002062:	3708      	adds	r7, #8
 8002064:	46bd      	mov	sp, r7
 8002066:	bdb0      	pop	{r4, r5, r7, pc}

08002068 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj0EEEE14__visit_invokeESL_SO_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8002068:	b5b0      	push	{r4, r5, r7, lr}
 800206a:	b082      	sub	sp, #8
 800206c:	af00      	add	r7, sp, #0
 800206e:	6078      	str	r0, [r7, #4]
 8002070:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8002072:	6878      	ldr	r0, [r7, #4]
 8002074:	f001 fbc3 	bl	80037fe <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 8002078:	4604      	mov	r4, r0
 800207a:	6838      	ldr	r0, [r7, #0]
 800207c:	f001 fbca 	bl	8003814 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8002080:	4603      	mov	r3, r0
 8002082:	4619      	mov	r1, r3
 8002084:	4620      	mov	r0, r4
 8002086:	f7ff ffd9 	bl	800203c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESL_SO_>
				   std::forward<_Variants>(__vars)...);
 800208a:	462b      	mov	r3, r5
      }
 800208c:	4618      	mov	r0, r3
 800208e:	3708      	adds	r7, #8
 8002090:	46bd      	mov	sp, r7
 8002092:	bdb0      	pop	{r4, r5, r7, pc}

08002094 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8002094:	b580      	push	{r7, lr}
 8002096:	b082      	sub	sp, #8
 8002098:	af00      	add	r7, sp, #0
 800209a:	7138      	strb	r0, [r7, #4]
 800209c:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 800209e:	6838      	ldr	r0, [r7, #0]
 80020a0:	f001 fbf7 	bl	8003892 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 80020a4:	4603      	mov	r3, r0
 80020a6:	4618      	mov	r0, r3
 80020a8:	f001 fbfe 	bl	80038a8 <_ZNRSt8__detail9__variant14_UninitializedIfLb1EE6_M_getEv>
 80020ac:	4603      	mov	r3, r0
 80020ae:	4618      	mov	r0, r3
 80020b0:	3708      	adds	r7, #8
 80020b2:	46bd      	mov	sp, r7
 80020b4:	bd80      	pop	{r7, pc}

080020b6 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 80020b6:	b590      	push	{r4, r7, lr}
 80020b8:	b083      	sub	sp, #12
 80020ba:	af00      	add	r7, sp, #0
 80020bc:	7138      	strb	r0, [r7, #4]
 80020be:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 80020c0:	6838      	ldr	r0, [r7, #0]
 80020c2:	f001 fbb2 	bl	800382a <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 80020c6:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 80020c8:	4619      	mov	r1, r3
 80020ca:	4620      	mov	r0, r4
 80020cc:	f7ff ffe2 	bl	8002094 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 80020d0:	4603      	mov	r3, r0
    }
 80020d2:	4618      	mov	r0, r3
 80020d4:	370c      	adds	r7, #12
 80020d6:	46bd      	mov	sp, r7
 80020d8:	bd90      	pop	{r4, r7, pc}

080020da <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 80020da:	b590      	push	{r4, r7, lr}
 80020dc:	b083      	sub	sp, #12
 80020de:	af00      	add	r7, sp, #0
 80020e0:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 80020e2:	6878      	ldr	r0, [r7, #4]
 80020e4:	f001 fb96 	bl	8003814 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 80020e8:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 80020ea:	4619      	mov	r1, r3
 80020ec:	4620      	mov	r0, r4
 80020ee:	f7ff ffe2 	bl	80020b6 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80020f2:	4603      	mov	r3, r0
    }
 80020f4:	4618      	mov	r0, r3
 80020f6:	370c      	adds	r7, #12
 80020f8:	46bd      	mov	sp, r7
 80020fa:	bd90      	pop	{r4, r7, pc}

080020fc <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESO_EEDcOSJ_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 80020fc:	b580      	push	{r7, lr}
 80020fe:	b082      	sub	sp, #8
 8002100:	af00      	add	r7, sp, #0
 8002102:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8002104:	6878      	ldr	r0, [r7, #4]
 8002106:	f001 fb85 	bl	8003814 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800210a:	4603      	mov	r3, r0
 800210c:	4618      	mov	r0, r3
 800210e:	f7ff ffe4 	bl	80020da <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8002112:	4603      	mov	r3, r0
	}
 8002114:	4618      	mov	r0, r3
 8002116:	3708      	adds	r7, #8
 8002118:	46bd      	mov	sp, r7
 800211a:	bd80      	pop	{r7, pc}

0800211c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESL_SO_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 800211c:	b5b0      	push	{r4, r5, r7, lr}
 800211e:	b084      	sub	sp, #16
 8002120:	af00      	add	r7, sp, #0
 8002122:	6078      	str	r0, [r7, #4]
 8002124:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8002126:	6878      	ldr	r0, [r7, #4]
 8002128:	f001 fb69 	bl	80037fe <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 800212c:	4604      	mov	r4, r0
 800212e:	6838      	ldr	r0, [r7, #0]
 8002130:	f001 fb70 	bl	8003814 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8002134:	4603      	mov	r3, r0
 8002136:	4618      	mov	r0, r3
 8002138:	f7ff ffe0 	bl	80020fc <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESO_EEDcOSJ_>
 800213c:	4601      	mov	r1, r0
 800213e:	f107 030c 	add.w	r3, r7, #12
 8002142:	461a      	mov	r2, r3
 8002144:	4620      	mov	r0, r4
 8002146:	f001 fbba 	bl	80038be <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_JRfSt17integral_constantIjLj1EEEENSt15__invoke_resultISF_JDpT0_EE4typeESG_DpOSN_>
	      integral_constant<size_t, __indices>()...);
 800214a:	462b      	mov	r3, r5
      }
 800214c:	4618      	mov	r0, r3
 800214e:	3710      	adds	r7, #16
 8002150:	46bd      	mov	sp, r7
 8002152:	bdb0      	pop	{r4, r5, r7, pc}

08002154 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESL_SO_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8002154:	b5b0      	push	{r4, r5, r7, lr}
 8002156:	b082      	sub	sp, #8
 8002158:	af00      	add	r7, sp, #0
 800215a:	6078      	str	r0, [r7, #4]
 800215c:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 800215e:	6878      	ldr	r0, [r7, #4]
 8002160:	f001 fb4d 	bl	80037fe <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 8002164:	4604      	mov	r4, r0
 8002166:	6838      	ldr	r0, [r7, #0]
 8002168:	f001 fb54 	bl	8003814 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800216c:	4603      	mov	r3, r0
 800216e:	4619      	mov	r1, r3
 8002170:	4620      	mov	r0, r4
 8002172:	f7ff ffd3 	bl	800211c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESL_SO_>
				   std::forward<_Variants>(__vars)...);
 8002176:	462b      	mov	r3, r5
      }
 8002178:	4618      	mov	r0, r3
 800217a:	3708      	adds	r7, #8
 800217c:	46bd      	mov	sp, r7
 800217e:	bdb0      	pop	{r4, r5, r7, pc}

08002180 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj1EEEE14__visit_invokeESL_SO_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8002180:	b5b0      	push	{r4, r5, r7, lr}
 8002182:	b082      	sub	sp, #8
 8002184:	af00      	add	r7, sp, #0
 8002186:	6078      	str	r0, [r7, #4]
 8002188:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 800218a:	6878      	ldr	r0, [r7, #4]
 800218c:	f001 fb37 	bl	80037fe <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 8002190:	4604      	mov	r4, r0
 8002192:	6838      	ldr	r0, [r7, #0]
 8002194:	f001 fb3e 	bl	8003814 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8002198:	4603      	mov	r3, r0
 800219a:	4619      	mov	r1, r3
 800219c:	4620      	mov	r0, r4
 800219e:	f7ff ffd9 	bl	8002154 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESL_SO_>
				   std::forward<_Variants>(__vars)...);
 80021a2:	462b      	mov	r3, r5
      }
 80021a4:	4618      	mov	r0, r3
 80021a6:	3708      	adds	r7, #8
 80021a8:	46bd      	mov	sp, r7
 80021aa:	bdb0      	pop	{r4, r5, r7, pc}

080021ac <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 80021ac:	b580      	push	{r7, lr}
 80021ae:	b082      	sub	sp, #8
 80021b0:	af00      	add	r7, sp, #0
 80021b2:	7138      	strb	r0, [r7, #4]
 80021b4:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 80021b6:	6838      	ldr	r0, [r7, #0]
 80021b8:	f001 fb9f 	bl	80038fa <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 80021bc:	4603      	mov	r3, r0
 80021be:	4618      	mov	r0, r3
 80021c0:	f001 fba6 	bl	8003910 <_ZNRSt8__detail9__variant14_UninitializedIbLb1EE6_M_getEv>
 80021c4:	4603      	mov	r3, r0
 80021c6:	4618      	mov	r0, r3
 80021c8:	3708      	adds	r7, #8
 80021ca:	46bd      	mov	sp, r7
 80021cc:	bd80      	pop	{r7, pc}

080021ce <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 80021ce:	b590      	push	{r4, r7, lr}
 80021d0:	b083      	sub	sp, #12
 80021d2:	af00      	add	r7, sp, #0
 80021d4:	7138      	strb	r0, [r7, #4]
 80021d6:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 80021d8:	6838      	ldr	r0, [r7, #0]
 80021da:	f001 fb5a 	bl	8003892 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 80021de:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 80021e0:	4619      	mov	r1, r3
 80021e2:	4620      	mov	r0, r4
 80021e4:	f7ff ffe2 	bl	80021ac <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 80021e8:	4603      	mov	r3, r0
    }
 80021ea:	4618      	mov	r0, r3
 80021ec:	370c      	adds	r7, #12
 80021ee:	46bd      	mov	sp, r7
 80021f0:	bd90      	pop	{r4, r7, pc}

080021f2 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 80021f2:	b590      	push	{r4, r7, lr}
 80021f4:	b083      	sub	sp, #12
 80021f6:	af00      	add	r7, sp, #0
 80021f8:	7138      	strb	r0, [r7, #4]
 80021fa:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 80021fc:	6838      	ldr	r0, [r7, #0]
 80021fe:	f001 fb14 	bl	800382a <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8002202:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8002204:	4619      	mov	r1, r3
 8002206:	4620      	mov	r0, r4
 8002208:	f7ff ffe1 	bl	80021ce <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800220c:	4603      	mov	r3, r0
    }
 800220e:	4618      	mov	r0, r3
 8002210:	370c      	adds	r7, #12
 8002212:	46bd      	mov	sp, r7
 8002214:	bd90      	pop	{r4, r7, pc}

08002216 <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8002216:	b590      	push	{r4, r7, lr}
 8002218:	b083      	sub	sp, #12
 800221a:	af00      	add	r7, sp, #0
 800221c:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800221e:	6878      	ldr	r0, [r7, #4]
 8002220:	f001 faf8 	bl	8003814 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8002224:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8002226:	4619      	mov	r1, r3
 8002228:	4620      	mov	r0, r4
 800222a:	f7ff ffe2 	bl	80021f2 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800222e:	4603      	mov	r3, r0
    }
 8002230:	4618      	mov	r0, r3
 8002232:	370c      	adds	r7, #12
 8002234:	46bd      	mov	sp, r7
 8002236:	bd90      	pop	{r4, r7, pc}

08002238 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESO_EEDcOSJ_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8002238:	b580      	push	{r7, lr}
 800223a:	b082      	sub	sp, #8
 800223c:	af00      	add	r7, sp, #0
 800223e:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8002240:	6878      	ldr	r0, [r7, #4]
 8002242:	f001 fae7 	bl	8003814 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8002246:	4603      	mov	r3, r0
 8002248:	4618      	mov	r0, r3
 800224a:	f7ff ffe4 	bl	8002216 <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 800224e:	4603      	mov	r3, r0
	}
 8002250:	4618      	mov	r0, r3
 8002252:	3708      	adds	r7, #8
 8002254:	46bd      	mov	sp, r7
 8002256:	bd80      	pop	{r7, pc}

08002258 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESL_SO_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8002258:	b5b0      	push	{r4, r5, r7, lr}
 800225a:	b084      	sub	sp, #16
 800225c:	af00      	add	r7, sp, #0
 800225e:	6078      	str	r0, [r7, #4]
 8002260:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8002262:	6878      	ldr	r0, [r7, #4]
 8002264:	f001 facb 	bl	80037fe <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 8002268:	4604      	mov	r4, r0
 800226a:	6838      	ldr	r0, [r7, #0]
 800226c:	f001 fad2 	bl	8003814 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8002270:	4603      	mov	r3, r0
 8002272:	4618      	mov	r0, r3
 8002274:	f7ff ffe0 	bl	8002238 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESO_EEDcOSJ_>
 8002278:	4601      	mov	r1, r0
 800227a:	f107 030c 	add.w	r3, r7, #12
 800227e:	461a      	mov	r2, r3
 8002280:	4620      	mov	r0, r4
 8002282:	f001 fb50 	bl	8003926 <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_JRbSt17integral_constantIjLj2EEEENSt15__invoke_resultISF_JDpT0_EE4typeESG_DpOSN_>
	      integral_constant<size_t, __indices>()...);
 8002286:	462b      	mov	r3, r5
      }
 8002288:	4618      	mov	r0, r3
 800228a:	3710      	adds	r7, #16
 800228c:	46bd      	mov	sp, r7
 800228e:	bdb0      	pop	{r4, r5, r7, pc}

08002290 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESL_SO_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8002290:	b5b0      	push	{r4, r5, r7, lr}
 8002292:	b082      	sub	sp, #8
 8002294:	af00      	add	r7, sp, #0
 8002296:	6078      	str	r0, [r7, #4]
 8002298:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 800229a:	6878      	ldr	r0, [r7, #4]
 800229c:	f001 faaf 	bl	80037fe <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 80022a0:	4604      	mov	r4, r0
 80022a2:	6838      	ldr	r0, [r7, #0]
 80022a4:	f001 fab6 	bl	8003814 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 80022a8:	4603      	mov	r3, r0
 80022aa:	4619      	mov	r1, r3
 80022ac:	4620      	mov	r0, r4
 80022ae:	f7ff ffd3 	bl	8002258 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESL_SO_>
				   std::forward<_Variants>(__vars)...);
 80022b2:	462b      	mov	r3, r5
      }
 80022b4:	4618      	mov	r0, r3
 80022b6:	3708      	adds	r7, #8
 80022b8:	46bd      	mov	sp, r7
 80022ba:	bdb0      	pop	{r4, r5, r7, pc}

080022bc <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj2EEEE14__visit_invokeESL_SO_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80022bc:	b5b0      	push	{r4, r5, r7, lr}
 80022be:	b082      	sub	sp, #8
 80022c0:	af00      	add	r7, sp, #0
 80022c2:	6078      	str	r0, [r7, #4]
 80022c4:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 80022c6:	6878      	ldr	r0, [r7, #4]
 80022c8:	f001 fa99 	bl	80037fe <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 80022cc:	4604      	mov	r4, r0
 80022ce:	6838      	ldr	r0, [r7, #0]
 80022d0:	f001 faa0 	bl	8003814 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 80022d4:	4603      	mov	r3, r0
 80022d6:	4619      	mov	r1, r3
 80022d8:	4620      	mov	r0, r4
 80022da:	f7ff ffd9 	bl	8002290 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESL_SO_>
				   std::forward<_Variants>(__vars)...);
 80022de:	462b      	mov	r3, r5
      }
 80022e0:	4618      	mov	r0, r3
 80022e2:	3708      	adds	r7, #8
 80022e4:	46bd      	mov	sp, r7
 80022e6:	bdb0      	pop	{r4, r5, r7, pc}

080022e8 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 80022e8:	b580      	push	{r7, lr}
 80022ea:	b082      	sub	sp, #8
 80022ec:	af00      	add	r7, sp, #0
 80022ee:	7138      	strb	r0, [r7, #4]
 80022f0:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 80022f2:	6838      	ldr	r0, [r7, #0]
 80022f4:	f001 fb35 	bl	8003962 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 80022f8:	4603      	mov	r3, r0
 80022fa:	4618      	mov	r0, r3
 80022fc:	f001 fb3c 	bl	8003978 <_ZNRSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE6_M_getEv>
 8002300:	4603      	mov	r3, r0
 8002302:	4618      	mov	r0, r3
 8002304:	3708      	adds	r7, #8
 8002306:	46bd      	mov	sp, r7
 8002308:	bd80      	pop	{r7, pc}

0800230a <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800230a:	b590      	push	{r4, r7, lr}
 800230c:	b083      	sub	sp, #12
 800230e:	af00      	add	r7, sp, #0
 8002310:	7138      	strb	r0, [r7, #4]
 8002312:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8002314:	6838      	ldr	r0, [r7, #0]
 8002316:	f001 faf0 	bl	80038fa <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800231a:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800231c:	4619      	mov	r1, r3
 800231e:	4620      	mov	r0, r4
 8002320:	f7ff ffe2 	bl	80022e8 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 8002324:	4603      	mov	r3, r0
    }
 8002326:	4618      	mov	r0, r3
 8002328:	370c      	adds	r7, #12
 800232a:	46bd      	mov	sp, r7
 800232c:	bd90      	pop	{r4, r7, pc}

0800232e <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800232e:	b590      	push	{r4, r7, lr}
 8002330:	b083      	sub	sp, #12
 8002332:	af00      	add	r7, sp, #0
 8002334:	7138      	strb	r0, [r7, #4]
 8002336:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8002338:	6838      	ldr	r0, [r7, #0]
 800233a:	f001 faaa 	bl	8003892 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800233e:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8002340:	4619      	mov	r1, r3
 8002342:	4620      	mov	r0, r4
 8002344:	f7ff ffe1 	bl	800230a <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8002348:	4603      	mov	r3, r0
    }
 800234a:	4618      	mov	r0, r3
 800234c:	370c      	adds	r7, #12
 800234e:	46bd      	mov	sp, r7
 8002350:	bd90      	pop	{r4, r7, pc}

08002352 <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8002352:	b590      	push	{r4, r7, lr}
 8002354:	b083      	sub	sp, #12
 8002356:	af00      	add	r7, sp, #0
 8002358:	7138      	strb	r0, [r7, #4]
 800235a:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800235c:	6838      	ldr	r0, [r7, #0]
 800235e:	f001 fa64 	bl	800382a <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8002362:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8002364:	4619      	mov	r1, r3
 8002366:	4620      	mov	r0, r4
 8002368:	f7ff ffe1 	bl	800232e <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800236c:	4603      	mov	r3, r0
    }
 800236e:	4618      	mov	r0, r3
 8002370:	370c      	adds	r7, #12
 8002372:	46bd      	mov	sp, r7
 8002374:	bd90      	pop	{r4, r7, pc}

08002376 <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8002376:	b590      	push	{r4, r7, lr}
 8002378:	b083      	sub	sp, #12
 800237a:	af00      	add	r7, sp, #0
 800237c:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800237e:	6878      	ldr	r0, [r7, #4]
 8002380:	f001 fa48 	bl	8003814 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8002384:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8002386:	4619      	mov	r1, r3
 8002388:	4620      	mov	r0, r4
 800238a:	f7ff ffe2 	bl	8002352 <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800238e:	4603      	mov	r3, r0
    }
 8002390:	4618      	mov	r0, r3
 8002392:	370c      	adds	r7, #12
 8002394:	46bd      	mov	sp, r7
 8002396:	bd90      	pop	{r4, r7, pc}

08002398 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESO_EEDcOSJ_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8002398:	b580      	push	{r7, lr}
 800239a:	b082      	sub	sp, #8
 800239c:	af00      	add	r7, sp, #0
 800239e:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 80023a0:	6878      	ldr	r0, [r7, #4]
 80023a2:	f001 fa37 	bl	8003814 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 80023a6:	4603      	mov	r3, r0
 80023a8:	4618      	mov	r0, r3
 80023aa:	f7ff ffe4 	bl	8002376 <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 80023ae:	4603      	mov	r3, r0
	}
 80023b0:	4618      	mov	r0, r3
 80023b2:	3708      	adds	r7, #8
 80023b4:	46bd      	mov	sp, r7
 80023b6:	bd80      	pop	{r7, pc}

080023b8 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESL_SO_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 80023b8:	b5b0      	push	{r4, r5, r7, lr}
 80023ba:	b084      	sub	sp, #16
 80023bc:	af00      	add	r7, sp, #0
 80023be:	6078      	str	r0, [r7, #4]
 80023c0:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 80023c2:	6878      	ldr	r0, [r7, #4]
 80023c4:	f001 fa1b 	bl	80037fe <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 80023c8:	4604      	mov	r4, r0
 80023ca:	6838      	ldr	r0, [r7, #0]
 80023cc:	f001 fa22 	bl	8003814 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 80023d0:	4603      	mov	r3, r0
 80023d2:	4618      	mov	r0, r3
 80023d4:	f7ff ffe0 	bl	8002398 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESO_EEDcOSJ_>
 80023d8:	4601      	mov	r1, r0
 80023da:	f107 030c 	add.w	r3, r7, #12
 80023de:	461a      	mov	r2, r3
 80023e0:	4620      	mov	r0, r4
 80023e2:	f001 fad6 	bl	8003992 <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_JRS8_St17integral_constantIjLj3EEEENSt15__invoke_resultISF_JDpT0_EE4typeESG_DpOSN_>
	      integral_constant<size_t, __indices>()...);
 80023e6:	462b      	mov	r3, r5
      }
 80023e8:	4618      	mov	r0, r3
 80023ea:	3710      	adds	r7, #16
 80023ec:	46bd      	mov	sp, r7
 80023ee:	bdb0      	pop	{r4, r5, r7, pc}

080023f0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESL_SO_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80023f0:	b5b0      	push	{r4, r5, r7, lr}
 80023f2:	b082      	sub	sp, #8
 80023f4:	af00      	add	r7, sp, #0
 80023f6:	6078      	str	r0, [r7, #4]
 80023f8:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 80023fa:	6878      	ldr	r0, [r7, #4]
 80023fc:	f001 f9ff 	bl	80037fe <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 8002400:	4604      	mov	r4, r0
 8002402:	6838      	ldr	r0, [r7, #0]
 8002404:	f001 fa06 	bl	8003814 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8002408:	4603      	mov	r3, r0
 800240a:	4619      	mov	r1, r3
 800240c:	4620      	mov	r0, r4
 800240e:	f7ff ffd3 	bl	80023b8 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESL_SO_>
				   std::forward<_Variants>(__vars)...);
 8002412:	462b      	mov	r3, r5
      }
 8002414:	4618      	mov	r0, r3
 8002416:	3708      	adds	r7, #8
 8002418:	46bd      	mov	sp, r7
 800241a:	bdb0      	pop	{r4, r5, r7, pc}

0800241c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj3EEEE14__visit_invokeESL_SO_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800241c:	b5b0      	push	{r4, r5, r7, lr}
 800241e:	b082      	sub	sp, #8
 8002420:	af00      	add	r7, sp, #0
 8002422:	6078      	str	r0, [r7, #4]
 8002424:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8002426:	6878      	ldr	r0, [r7, #4]
 8002428:	f001 f9e9 	bl	80037fe <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 800242c:	4604      	mov	r4, r0
 800242e:	6838      	ldr	r0, [r7, #0]
 8002430:	f001 f9f0 	bl	8003814 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8002434:	4603      	mov	r3, r0
 8002436:	4619      	mov	r1, r3
 8002438:	4620      	mov	r0, r4
 800243a:	f7ff ffd9 	bl	80023f0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESL_SO_>
				   std::forward<_Variants>(__vars)...);
 800243e:	462b      	mov	r3, r5
      }
 8002440:	4618      	mov	r0, r3
 8002442:	3708      	adds	r7, #8
 8002444:	46bd      	mov	sp, r7
 8002446:	bdb0      	pop	{r4, r5, r7, pc}

08002448 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJSt6vectorI6SymbolSaIS4_EEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8002448:	b580      	push	{r7, lr}
 800244a:	b082      	sub	sp, #8
 800244c:	af00      	add	r7, sp, #0
 800244e:	7138      	strb	r0, [r7, #4]
 8002450:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8002452:	6838      	ldr	r0, [r7, #0]
 8002454:	f001 fabb 	bl	80039ce <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJSt6vectorI6SymbolSaIS4_EEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8002458:	4603      	mov	r3, r0
 800245a:	4618      	mov	r0, r3
 800245c:	f001 fac2 	bl	80039e4 <_ZNRSt8__detail9__variant14_UninitializedISt6vectorI6SymbolSaIS3_EELb0EE6_M_getEv>
 8002460:	4603      	mov	r3, r0
 8002462:	4618      	mov	r0, r3
 8002464:	3708      	adds	r7, #8
 8002466:	46bd      	mov	sp, r7
 8002468:	bd80      	pop	{r7, pc}

0800246a <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800246a:	b590      	push	{r4, r7, lr}
 800246c:	b083      	sub	sp, #12
 800246e:	af00      	add	r7, sp, #0
 8002470:	7138      	strb	r0, [r7, #4]
 8002472:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8002474:	6838      	ldr	r0, [r7, #0]
 8002476:	f001 fa74 	bl	8003962 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800247a:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800247c:	4619      	mov	r1, r3
 800247e:	4620      	mov	r0, r4
 8002480:	f7ff ffe2 	bl	8002448 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJSt6vectorI6SymbolSaIS4_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 8002484:	4603      	mov	r3, r0
    }
 8002486:	4618      	mov	r0, r3
 8002488:	370c      	adds	r7, #12
 800248a:	46bd      	mov	sp, r7
 800248c:	bd90      	pop	{r4, r7, pc}

0800248e <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800248e:	b590      	push	{r4, r7, lr}
 8002490:	b083      	sub	sp, #12
 8002492:	af00      	add	r7, sp, #0
 8002494:	7138      	strb	r0, [r7, #4]
 8002496:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8002498:	6838      	ldr	r0, [r7, #0]
 800249a:	f001 fa2e 	bl	80038fa <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800249e:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 80024a0:	4619      	mov	r1, r3
 80024a2:	4620      	mov	r0, r4
 80024a4:	f7ff ffe1 	bl	800246a <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80024a8:	4603      	mov	r3, r0
    }
 80024aa:	4618      	mov	r0, r3
 80024ac:	370c      	adds	r7, #12
 80024ae:	46bd      	mov	sp, r7
 80024b0:	bd90      	pop	{r4, r7, pc}

080024b2 <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 80024b2:	b590      	push	{r4, r7, lr}
 80024b4:	b083      	sub	sp, #12
 80024b6:	af00      	add	r7, sp, #0
 80024b8:	7138      	strb	r0, [r7, #4]
 80024ba:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 80024bc:	6838      	ldr	r0, [r7, #0]
 80024be:	f001 f9e8 	bl	8003892 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 80024c2:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 80024c4:	4619      	mov	r1, r3
 80024c6:	4620      	mov	r0, r4
 80024c8:	f7ff ffe1 	bl	800248e <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80024cc:	4603      	mov	r3, r0
    }
 80024ce:	4618      	mov	r0, r3
 80024d0:	370c      	adds	r7, #12
 80024d2:	46bd      	mov	sp, r7
 80024d4:	bd90      	pop	{r4, r7, pc}

080024d6 <_ZNSt8__detail9__variant5__getILj4ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 80024d6:	b590      	push	{r4, r7, lr}
 80024d8:	b083      	sub	sp, #12
 80024da:	af00      	add	r7, sp, #0
 80024dc:	7138      	strb	r0, [r7, #4]
 80024de:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 80024e0:	6838      	ldr	r0, [r7, #0]
 80024e2:	f001 f9a2 	bl	800382a <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 80024e6:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 80024e8:	4619      	mov	r1, r3
 80024ea:	4620      	mov	r0, r4
 80024ec:	f7ff ffe1 	bl	80024b2 <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80024f0:	4603      	mov	r3, r0
    }
 80024f2:	4618      	mov	r0, r3
 80024f4:	370c      	adds	r7, #12
 80024f6:	46bd      	mov	sp, r7
 80024f8:	bd90      	pop	{r4, r7, pc}

080024fa <_ZNSt8__detail9__variant5__getILj4ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 80024fa:	b590      	push	{r4, r7, lr}
 80024fc:	b083      	sub	sp, #12
 80024fe:	af00      	add	r7, sp, #0
 8002500:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8002502:	6878      	ldr	r0, [r7, #4]
 8002504:	f001 f986 	bl	8003814 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8002508:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800250a:	4619      	mov	r1, r3
 800250c:	4620      	mov	r0, r4
 800250e:	f7ff ffe2 	bl	80024d6 <_ZNSt8__detail9__variant5__getILj4ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8002512:	4603      	mov	r3, r0
    }
 8002514:	4618      	mov	r0, r3
 8002516:	370c      	adds	r7, #12
 8002518:	46bd      	mov	sp, r7
 800251a:	bd90      	pop	{r4, r7, pc}

0800251c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj4EEEE28__element_by_index_or_cookieILj4ESO_EEDcOSJ_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 800251c:	b580      	push	{r7, lr}
 800251e:	b082      	sub	sp, #8
 8002520:	af00      	add	r7, sp, #0
 8002522:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8002524:	6878      	ldr	r0, [r7, #4]
 8002526:	f001 f975 	bl	8003814 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800252a:	4603      	mov	r3, r0
 800252c:	4618      	mov	r0, r3
 800252e:	f7ff ffe4 	bl	80024fa <_ZNSt8__detail9__variant5__getILj4ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8002532:	4603      	mov	r3, r0
	}
 8002534:	4618      	mov	r0, r3
 8002536:	3708      	adds	r7, #8
 8002538:	46bd      	mov	sp, r7
 800253a:	bd80      	pop	{r7, pc}

0800253c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj4EEEE19__visit_invoke_implESL_SO_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 800253c:	b5b0      	push	{r4, r5, r7, lr}
 800253e:	b084      	sub	sp, #16
 8002540:	af00      	add	r7, sp, #0
 8002542:	6078      	str	r0, [r7, #4]
 8002544:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8002546:	6878      	ldr	r0, [r7, #4]
 8002548:	f001 f959 	bl	80037fe <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 800254c:	4604      	mov	r4, r0
 800254e:	6838      	ldr	r0, [r7, #0]
 8002550:	f001 f960 	bl	8003814 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8002554:	4603      	mov	r3, r0
 8002556:	4618      	mov	r0, r3
 8002558:	f7ff ffe0 	bl	800251c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj4EEEE28__element_by_index_or_cookieILj4ESO_EEDcOSJ_>
 800255c:	4601      	mov	r1, r0
 800255e:	f107 030c 	add.w	r3, r7, #12
 8002562:	461a      	mov	r2, r3
 8002564:	4620      	mov	r0, r4
 8002566:	f001 fa4a 	bl	80039fe <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_JRSC_St17integral_constantIjLj4EEEENSt15__invoke_resultISF_JDpT0_EE4typeESG_DpOSN_>
	      integral_constant<size_t, __indices>()...);
 800256a:	462b      	mov	r3, r5
      }
 800256c:	4618      	mov	r0, r3
 800256e:	3710      	adds	r7, #16
 8002570:	46bd      	mov	sp, r7
 8002572:	bdb0      	pop	{r4, r5, r7, pc}

08002574 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj4EEEE17__do_visit_invokeESL_SO_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8002574:	b5b0      	push	{r4, r5, r7, lr}
 8002576:	b082      	sub	sp, #8
 8002578:	af00      	add	r7, sp, #0
 800257a:	6078      	str	r0, [r7, #4]
 800257c:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 800257e:	6878      	ldr	r0, [r7, #4]
 8002580:	f001 f93d 	bl	80037fe <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 8002584:	4604      	mov	r4, r0
 8002586:	6838      	ldr	r0, [r7, #0]
 8002588:	f001 f944 	bl	8003814 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800258c:	4603      	mov	r3, r0
 800258e:	4619      	mov	r1, r3
 8002590:	4620      	mov	r0, r4
 8002592:	f7ff ffd3 	bl	800253c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj4EEEE19__visit_invoke_implESL_SO_>
				   std::forward<_Variants>(__vars)...);
 8002596:	462b      	mov	r3, r5
      }
 8002598:	4618      	mov	r0, r3
 800259a:	3708      	adds	r7, #8
 800259c:	46bd      	mov	sp, r7
 800259e:	bdb0      	pop	{r4, r5, r7, pc}

080025a0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj4EEEE14__visit_invokeESL_SO_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80025a0:	b5b0      	push	{r4, r5, r7, lr}
 80025a2:	b082      	sub	sp, #8
 80025a4:	af00      	add	r7, sp, #0
 80025a6:	6078      	str	r0, [r7, #4]
 80025a8:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 80025aa:	6878      	ldr	r0, [r7, #4]
 80025ac:	f001 f927 	bl	80037fe <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 80025b0:	4604      	mov	r4, r0
 80025b2:	6838      	ldr	r0, [r7, #0]
 80025b4:	f001 f92e 	bl	8003814 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 80025b8:	4603      	mov	r3, r0
 80025ba:	4619      	mov	r1, r3
 80025bc:	4620      	mov	r0, r4
 80025be:	f7ff ffd9 	bl	8002574 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj4EEEE17__do_visit_invokeESL_SO_>
				   std::forward<_Variants>(__vars)...);
 80025c2:	462b      	mov	r3, r5
      }
 80025c4:	4618      	mov	r0, r3
 80025c6:	3708      	adds	r7, #8
 80025c8:	46bd      	mov	sp, r7
 80025ca:	bdb0      	pop	{r4, r5, r7, pc}

080025cc <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSEOSE_EUlOT_T0_E_RSt7variantIJifbS9_SD_EEEJLj5EEE9_M_accessIJEEERKSP_jDpT_>:
	_M_access(size_t __first_index, _Args... __rest_indices) const
 80025cc:	b580      	push	{r7, lr}
 80025ce:	b082      	sub	sp, #8
 80025d0:	af00      	add	r7, sp, #0
 80025d2:	6078      	str	r0, [r7, #4]
 80025d4:	6039      	str	r1, [r7, #0]
	    ._M_access(__rest_indices...);
 80025d6:	683b      	ldr	r3, [r7, #0]
 80025d8:	009b      	lsls	r3, r3, #2
 80025da:	687a      	ldr	r2, [r7, #4]
 80025dc:	4413      	add	r3, r2
 80025de:	4618      	mov	r0, r3
 80025e0:	f001 fa2b 	bl	8003a3a <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSEOSE_EUlOT_T0_E_RSt7variantIJifbS9_SD_EEEJEE9_M_accessEv>
 80025e4:	4603      	mov	r3, r0
	}
 80025e6:	4618      	mov	r0, r3
 80025e8:	3708      	adds	r7, #8
 80025ea:	46bd      	mov	sp, r7
 80025ec:	bd80      	pop	{r7, pc}

080025ee <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv>:
	}

      constexpr bool valueless_by_exception() const noexcept
      { return !this->_M_valid(); }

      constexpr size_t index() const noexcept
 80025ee:	b480      	push	{r7}
 80025f0:	b083      	sub	sp, #12
 80025f2:	af00      	add	r7, sp, #0
 80025f4:	6078      	str	r0, [r7, #4]
      {
	if (this->_M_index ==
 80025f6:	687b      	ldr	r3, [r7, #4]
 80025f8:	7e1b      	ldrb	r3, [r3, #24]
 80025fa:	2bff      	cmp	r3, #255	; 0xff
 80025fc:	d102      	bne.n	8002604 <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv+0x16>
	    typename _Base::__index_type(variant_npos))
	  return variant_npos;
 80025fe:	f04f 33ff 	mov.w	r3, #4294967295
 8002602:	e001      	b.n	8002608 <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv+0x1a>
	return this->_M_index;
 8002604:	687b      	ldr	r3, [r7, #4]
 8002606:	7e1b      	ldrb	r3, [r3, #24]
      }
 8002608:	4618      	mov	r0, r3
 800260a:	370c      	adds	r7, #12
 800260c:	46bd      	mov	sp, r7
 800260e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002612:	4770      	bx	lr

08002614 <_ZSt10__do_visitILb1ELb1EZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_JRSt7variantIJifbS8_SC_EEEEDcOT1_DpOT2_>:

  template<bool __use_index,
	   bool __same_return_types,
	   typename _Visitor, typename... _Variants>
    constexpr decltype(auto)
    __do_visit(_Visitor&& __visitor, _Variants&&... __variants)
 8002614:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002616:	b085      	sub	sp, #20
 8002618:	af00      	add	r7, sp, #0
 800261a:	6078      	str	r0, [r7, #4]
 800261c:	6039      	str	r1, [r7, #0]

      using _Result_type = typename std::conditional_t<__use_index,
	__detail::__variant::__variant_idx_cookie,
	_Deduced_type>::type;

      constexpr auto& __vtable = __detail::__variant::__gen_vtable<
 800261e:	4b0f      	ldr	r3, [pc, #60]	; (800265c <_ZSt10__do_visitILb1ELb1EZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_JRSt7variantIJifbS8_SC_EEEEDcOT1_DpOT2_+0x48>)
 8002620:	60fb      	str	r3, [r7, #12]
	__same_return_types,
	_Result_type, _Visitor&&, _Variants&&...>::_S_vtable;

      auto __func_ptr = __vtable._M_access(__variants.index()...);
 8002622:	6838      	ldr	r0, [r7, #0]
 8002624:	f7ff ffe3 	bl	80025ee <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv>
 8002628:	4603      	mov	r3, r0
 800262a:	4619      	mov	r1, r3
 800262c:	68f8      	ldr	r0, [r7, #12]
 800262e:	f7ff ffcd 	bl	80025cc <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSEOSE_EUlOT_T0_E_RSt7variantIJifbS9_SD_EEEJLj5EEE9_M_accessIJEEERKSP_jDpT_>
 8002632:	4603      	mov	r3, r0
 8002634:	681b      	ldr	r3, [r3, #0]
 8002636:	60bb      	str	r3, [r7, #8]
      return (*__func_ptr)(std::forward<_Visitor>(__visitor),
 8002638:	68bc      	ldr	r4, [r7, #8]
 800263a:	6878      	ldr	r0, [r7, #4]
 800263c:	f001 fa08 	bl	8003a50 <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 8002640:	4605      	mov	r5, r0
 8002642:	6838      	ldr	r0, [r7, #0]
 8002644:	f001 f8e6 	bl	8003814 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8002648:	4603      	mov	r3, r0
 800264a:	4619      	mov	r1, r3
 800264c:	4628      	mov	r0, r5
 800264e:	47a0      	blx	r4
			   std::forward<_Variants>(__variants)...);
 8002650:	4633      	mov	r3, r6
    }
 8002652:	4618      	mov	r0, r3
 8002654:	3714      	adds	r7, #20
 8002656:	46bd      	mov	sp, r7
 8002658:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800265a:	bf00      	nop
 800265c:	0802a148 	.word	0x0802a148

08002660 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_>:
      operator=(_Move_assign_base&& __rhs)
 8002660:	b580      	push	{r7, lr}
 8002662:	b084      	sub	sp, #16
 8002664:	af00      	add	r7, sp, #0
 8002666:	6078      	str	r0, [r7, #4]
 8002668:	6039      	str	r1, [r7, #0]
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800266a:	687b      	ldr	r3, [r7, #4]
 800266c:	60fb      	str	r3, [r7, #12]
 800266e:	6838      	ldr	r0, [r7, #0]
 8002670:	f7ff fc8b 	bl	8001f8a <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEERNSt8__detail9__variant17_Move_assign_baseILb0EJifbS5_S9_EEEEDcOT0_>
 8002674:	4602      	mov	r2, r0
 8002676:	f107 030c 	add.w	r3, r7, #12
 800267a:	4611      	mov	r1, r2
 800267c:	4618      	mov	r0, r3
 800267e:	f7ff ffc9 	bl	8002614 <_ZSt10__do_visitILb1ELb1EZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_JRSt7variantIJifbS8_SC_EEEEDcOT1_DpOT2_>
	return *this;
 8002682:	687b      	ldr	r3, [r7, #4]
      }
 8002684:	4618      	mov	r0, r3
 8002686:	3710      	adds	r7, #16
 8002688:	46bd      	mov	sp, r7
 800268a:	bd80      	pop	{r7, pc}

0800268c <_ZNSt6vectorIP9StatementSaIS1_EE5beginEv>:
       *  Returns a read/write iterator that points to the first
       *  element in the %vector.  Iteration is done in ordinary
       *  element order.
       */
      iterator
      begin() _GLIBCXX_NOEXCEPT
 800268c:	b580      	push	{r7, lr}
 800268e:	b084      	sub	sp, #16
 8002690:	af00      	add	r7, sp, #0
 8002692:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_start); }
 8002694:	687a      	ldr	r2, [r7, #4]
 8002696:	f107 030c 	add.w	r3, r7, #12
 800269a:	4611      	mov	r1, r2
 800269c:	4618      	mov	r0, r3
 800269e:	f001 f9e2 	bl	8003a66 <_ZN9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 80026a2:	68fb      	ldr	r3, [r7, #12]
 80026a4:	4618      	mov	r0, r3
 80026a6:	3710      	adds	r7, #16
 80026a8:	46bd      	mov	sp, r7
 80026aa:	bd80      	pop	{r7, pc}

080026ac <_ZNSt6vectorIP9StatementSaIS1_EE3endEv>:
       *  Returns a read/write iterator that points one past the last
       *  element in the %vector.  Iteration is done in ordinary
       *  element order.
       */
      iterator
      end() _GLIBCXX_NOEXCEPT
 80026ac:	b580      	push	{r7, lr}
 80026ae:	b084      	sub	sp, #16
 80026b0:	af00      	add	r7, sp, #0
 80026b2:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_finish); }
 80026b4:	687b      	ldr	r3, [r7, #4]
 80026b6:	1d1a      	adds	r2, r3, #4
 80026b8:	f107 030c 	add.w	r3, r7, #12
 80026bc:	4611      	mov	r1, r2
 80026be:	4618      	mov	r0, r3
 80026c0:	f001 f9d1 	bl	8003a66 <_ZN9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 80026c4:	68fb      	ldr	r3, [r7, #12]
 80026c6:	4618      	mov	r0, r3
 80026c8:	3710      	adds	r7, #16
 80026ca:	46bd      	mov	sp, r7
 80026cc:	bd80      	pop	{r7, pc}

080026ce <_ZN9__gnu_cxxneIPP9StatementSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() != __rhs.base(); }

  template<typename _Iterator, typename _Container>
    inline bool
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
 80026ce:	b590      	push	{r4, r7, lr}
 80026d0:	b083      	sub	sp, #12
 80026d2:	af00      	add	r7, sp, #0
 80026d4:	6078      	str	r0, [r7, #4]
 80026d6:	6039      	str	r1, [r7, #0]
	       const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() != __rhs.base(); }
 80026d8:	6878      	ldr	r0, [r7, #4]
 80026da:	f001 f9d4 	bl	8003a86 <_ZNK9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEE4baseEv>
 80026de:	4603      	mov	r3, r0
 80026e0:	681c      	ldr	r4, [r3, #0]
 80026e2:	6838      	ldr	r0, [r7, #0]
 80026e4:	f001 f9cf 	bl	8003a86 <_ZNK9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEE4baseEv>
 80026e8:	4603      	mov	r3, r0
 80026ea:	681b      	ldr	r3, [r3, #0]
 80026ec:	429c      	cmp	r4, r3
 80026ee:	bf14      	ite	ne
 80026f0:	2301      	movne	r3, #1
 80026f2:	2300      	moveq	r3, #0
 80026f4:	b2db      	uxtb	r3, r3
 80026f6:	4618      	mov	r0, r3
 80026f8:	370c      	adds	r7, #12
 80026fa:	46bd      	mov	sp, r7
 80026fc:	bd90      	pop	{r4, r7, pc}

080026fe <_ZN9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
 80026fe:	b480      	push	{r7}
 8002700:	b083      	sub	sp, #12
 8002702:	af00      	add	r7, sp, #0
 8002704:	6078      	str	r0, [r7, #4]
	++_M_current;
 8002706:	687b      	ldr	r3, [r7, #4]
 8002708:	681b      	ldr	r3, [r3, #0]
 800270a:	1d1a      	adds	r2, r3, #4
 800270c:	687b      	ldr	r3, [r7, #4]
 800270e:	601a      	str	r2, [r3, #0]
	return *this;
 8002710:	687b      	ldr	r3, [r7, #4]
      }
 8002712:	4618      	mov	r0, r3
 8002714:	370c      	adds	r7, #12
 8002716:	46bd      	mov	sp, r7
 8002718:	f85d 7b04 	ldr.w	r7, [sp], #4
 800271c:	4770      	bx	lr

0800271e <_ZNK9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
 800271e:	b480      	push	{r7}
 8002720:	b083      	sub	sp, #12
 8002722:	af00      	add	r7, sp, #0
 8002724:	6078      	str	r0, [r7, #4]
      { return *_M_current; }
 8002726:	687b      	ldr	r3, [r7, #4]
 8002728:	681b      	ldr	r3, [r3, #0]
 800272a:	4618      	mov	r0, r3
 800272c:	370c      	adds	r7, #12
 800272e:	46bd      	mov	sp, r7
 8002730:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002734:	4770      	bx	lr

08002736 <_ZSt3getIP10AssignmentJS1_P13Function_callP11Method_callP15While_statementP12If_statementEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 8002736:	b580      	push	{r7, lr}
 8002738:	b082      	sub	sp, #8
 800273a:	af00      	add	r7, sp, #0
 800273c:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 800273e:	6878      	ldr	r0, [r7, #4]
 8002740:	f001 f9e2 	bl	8003b08 <_ZSt3getILj0EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8002744:	4603      	mov	r3, r0
    }
 8002746:	4618      	mov	r0, r3
 8002748:	3708      	adds	r7, #8
 800274a:	46bd      	mov	sp, r7
 800274c:	bd80      	pop	{r7, pc}

0800274e <_ZSt3getIP13Function_callJP10AssignmentS1_P11Method_callP15While_statementP12If_statementEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 800274e:	b580      	push	{r7, lr}
 8002750:	b082      	sub	sp, #8
 8002752:	af00      	add	r7, sp, #0
 8002754:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 8002756:	6878      	ldr	r0, [r7, #4]
 8002758:	f001 fa26 	bl	8003ba8 <_ZSt3getILj1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 800275c:	4603      	mov	r3, r0
    }
 800275e:	4618      	mov	r0, r3
 8002760:	3708      	adds	r7, #8
 8002762:	46bd      	mov	sp, r7
 8002764:	bd80      	pop	{r7, pc}

08002766 <_ZSt3getIP11Method_callJP10AssignmentP13Function_callS1_P15While_statementP12If_statementEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 8002766:	b580      	push	{r7, lr}
 8002768:	b082      	sub	sp, #8
 800276a:	af00      	add	r7, sp, #0
 800276c:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 800276e:	6878      	ldr	r0, [r7, #4]
 8002770:	f001 fa7c 	bl	8003c6c <_ZSt3getILj2EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8002774:	4603      	mov	r3, r0
    }
 8002776:	4618      	mov	r0, r3
 8002778:	3708      	adds	r7, #8
 800277a:	46bd      	mov	sp, r7
 800277c:	bd80      	pop	{r7, pc}

0800277e <_ZSt3getIP15While_statementJP10AssignmentP13Function_callP11Method_callS1_P12If_statementEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 800277e:	b580      	push	{r7, lr}
 8002780:	b082      	sub	sp, #8
 8002782:	af00      	add	r7, sp, #0
 8002784:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 8002786:	6878      	ldr	r0, [r7, #4]
 8002788:	f001 fae4 	bl	8003d54 <_ZSt3getILj3EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 800278c:	4603      	mov	r3, r0
    }
 800278e:	4618      	mov	r0, r3
 8002790:	3708      	adds	r7, #8
 8002792:	46bd      	mov	sp, r7
 8002794:	bd80      	pop	{r7, pc}

08002796 <_ZSt3getIP12If_statementJP10AssignmentP13Function_callP11Method_callP15While_statementS1_EERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 8002796:	b580      	push	{r7, lr}
 8002798:	b082      	sub	sp, #8
 800279a:	af00      	add	r7, sp, #0
 800279c:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 800279e:	6878      	ldr	r0, [r7, #4]
 80027a0:	f001 fb5e 	bl	8003e60 <_ZSt3getILj4EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 80027a4:	4603      	mov	r3, r0
    }
 80027a6:	4618      	mov	r0, r3
 80027a8:	3708      	adds	r7, #8
 80027aa:	46bd      	mov	sp, r7
 80027ac:	bd80      	pop	{r7, pc}

080027ae <_ZNKSt6vectorIP10ExpressionSaIS1_EE4sizeEv>:
#endif

      // [23.2.4.2] capacity
      /**  Returns the number of elements in the %vector.  */
      size_type
      size() const _GLIBCXX_NOEXCEPT
 80027ae:	b480      	push	{r7}
 80027b0:	b083      	sub	sp, #12
 80027b2:	af00      	add	r7, sp, #0
 80027b4:	6078      	str	r0, [r7, #4]
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 80027b6:	687b      	ldr	r3, [r7, #4]
 80027b8:	685a      	ldr	r2, [r3, #4]
 80027ba:	687b      	ldr	r3, [r7, #4]
 80027bc:	681b      	ldr	r3, [r3, #0]
 80027be:	1ad3      	subs	r3, r2, r3
 80027c0:	109b      	asrs	r3, r3, #2
 80027c2:	4618      	mov	r0, r3
 80027c4:	370c      	adds	r7, #12
 80027c6:	46bd      	mov	sp, r7
 80027c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80027cc:	4770      	bx	lr

080027ce <_ZNSt6vectorIP10ExpressionSaIS1_EEixEj>:
       *  Note that data access with this operator is unchecked and
       *  out_of_range lookups are not defined. (For checked lookups
       *  see at().)
       */
      reference
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
 80027ce:	b480      	push	{r7}
 80027d0:	b083      	sub	sp, #12
 80027d2:	af00      	add	r7, sp, #0
 80027d4:	6078      	str	r0, [r7, #4]
 80027d6:	6039      	str	r1, [r7, #0]
      {
	__glibcxx_requires_subscript(__n);
	return *(this->_M_impl._M_start + __n);
 80027d8:	687b      	ldr	r3, [r7, #4]
 80027da:	681a      	ldr	r2, [r3, #0]
 80027dc:	683b      	ldr	r3, [r7, #0]
 80027de:	009b      	lsls	r3, r3, #2
 80027e0:	4413      	add	r3, r2
      }
 80027e2:	4618      	mov	r0, r3
 80027e4:	370c      	adds	r7, #12
 80027e6:	46bd      	mov	sp, r7
 80027e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80027ec:	4770      	bx	lr

080027ee <_ZNSt6vectorIP4BodySaIS1_EEixEj>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
 80027ee:	b480      	push	{r7}
 80027f0:	b083      	sub	sp, #12
 80027f2:	af00      	add	r7, sp, #0
 80027f4:	6078      	str	r0, [r7, #4]
 80027f6:	6039      	str	r1, [r7, #0]
	return *(this->_M_impl._M_start + __n);
 80027f8:	687b      	ldr	r3, [r7, #4]
 80027fa:	681a      	ldr	r2, [r3, #0]
 80027fc:	683b      	ldr	r3, [r7, #0]
 80027fe:	009b      	lsls	r3, r3, #2
 8002800:	4413      	add	r3, r2
      }
 8002802:	4618      	mov	r0, r3
 8002804:	370c      	adds	r7, #12
 8002806:	46bd      	mov	sp, r7
 8002808:	f85d 7b04 	ldr.w	r7, [sp], #4
 800280c:	4770      	bx	lr

0800280e <_ZNKSt6vectorIP4BodySaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 800280e:	b480      	push	{r7}
 8002810:	b083      	sub	sp, #12
 8002812:	af00      	add	r7, sp, #0
 8002814:	6078      	str	r0, [r7, #4]
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 8002816:	687b      	ldr	r3, [r7, #4]
 8002818:	685a      	ldr	r2, [r3, #4]
 800281a:	687b      	ldr	r3, [r7, #4]
 800281c:	681b      	ldr	r3, [r3, #0]
 800281e:	1ad3      	subs	r3, r2, r3
 8002820:	109b      	asrs	r3, r3, #2
 8002822:	4618      	mov	r0, r3
 8002824:	370c      	adds	r7, #12
 8002826:	46bd      	mov	sp, r7
 8002828:	f85d 7b04 	ldr.w	r7, [sp], #4
 800282c:	4770      	bx	lr

0800282e <_ZNSt6vectorIP4BodySaIS1_EE4backEv>:
      /**
       *  Returns a read/write reference to the data at the last
       *  element of the %vector.
       */
      reference
      back() _GLIBCXX_NOEXCEPT
 800282e:	b580      	push	{r7, lr}
 8002830:	b084      	sub	sp, #16
 8002832:	af00      	add	r7, sp, #0
 8002834:	6078      	str	r0, [r7, #4]
      {
	__glibcxx_requires_nonempty();
	return *(end() - 1);
 8002836:	6878      	ldr	r0, [r7, #4]
 8002838:	f001 fb2e 	bl	8003e98 <_ZNSt6vectorIP4BodySaIS1_EE3endEv>
 800283c:	4603      	mov	r3, r0
 800283e:	60fb      	str	r3, [r7, #12]
 8002840:	f107 030c 	add.w	r3, r7, #12
 8002844:	2101      	movs	r1, #1
 8002846:	4618      	mov	r0, r3
 8002848:	f001 fb37 	bl	8003eba <_ZNK9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEEmiEi>
 800284c:	4603      	mov	r3, r0
 800284e:	60bb      	str	r3, [r7, #8]
 8002850:	f107 0308 	add.w	r3, r7, #8
 8002854:	4618      	mov	r0, r3
 8002856:	f001 fb49 	bl	8003eec <_ZNK9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEEdeEv>
 800285a:	4603      	mov	r3, r0
      }
 800285c:	4618      	mov	r0, r3
 800285e:	3710      	adds	r7, #16
 8002860:	46bd      	mov	sp, r7
 8002862:	bd80      	pop	{r7, pc}

08002864 <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEERKNSt8__detail9__variant17_Copy_assign_baseILb0EJifbS5_S9_EEEEDcOT0_>:
    __variant_cast(_Tp&& __rhs)
 8002864:	b480      	push	{r7}
 8002866:	b083      	sub	sp, #12
 8002868:	af00      	add	r7, sp, #0
 800286a:	6078      	str	r0, [r7, #4]
	    return static_cast<const variant<_Types...>&>(__rhs);
 800286c:	687b      	ldr	r3, [r7, #4]
    }
 800286e:	4618      	mov	r0, r3
 8002870:	370c      	adds	r7, #12
 8002872:	46bd      	mov	sp, r7
 8002874:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002878:	4770      	bx	lr

0800287a <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 800287a:	b580      	push	{r7, lr}
 800287c:	b082      	sub	sp, #8
 800287e:	af00      	add	r7, sp, #0
 8002880:	7138      	strb	r0, [r7, #4]
 8002882:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8002884:	6838      	ldr	r0, [r7, #0]
 8002886:	f001 fb53 	bl	8003f30 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>
 800288a:	4603      	mov	r3, r0
 800288c:	4618      	mov	r0, r3
 800288e:	f001 fb5a 	bl	8003f46 <_ZNKRSt8__detail9__variant14_UninitializedIiLb1EE6_M_getEv>
 8002892:	4603      	mov	r3, r0
 8002894:	4618      	mov	r0, r3
 8002896:	3708      	adds	r7, #8
 8002898:	46bd      	mov	sp, r7
 800289a:	bd80      	pop	{r7, pc}

0800289c <_ZNSt8__detail9__variant5__getILj0ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800289c:	b590      	push	{r4, r7, lr}
 800289e:	b083      	sub	sp, #12
 80028a0:	af00      	add	r7, sp, #0
 80028a2:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 80028a4:	6878      	ldr	r0, [r7, #4]
 80028a6:	f001 fb38 	bl	8003f1a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 80028aa:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 80028ac:	4619      	mov	r1, r3
 80028ae:	4620      	mov	r0, r4
 80028b0:	f7ff ffe3 	bl	800287a <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 80028b4:	4603      	mov	r3, r0
    }
 80028b6:	4618      	mov	r0, r3
 80028b8:	370c      	adds	r7, #12
 80028ba:	46bd      	mov	sp, r7
 80028bc:	bd90      	pop	{r4, r7, pc}

080028be <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESQ_EEDcOSK_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 80028be:	b580      	push	{r7, lr}
 80028c0:	b082      	sub	sp, #8
 80028c2:	af00      	add	r7, sp, #0
 80028c4:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 80028c6:	6878      	ldr	r0, [r7, #4]
 80028c8:	f001 fb27 	bl	8003f1a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 80028cc:	4603      	mov	r3, r0
 80028ce:	4618      	mov	r0, r3
 80028d0:	f7ff ffe4 	bl	800289c <_ZNSt8__detail9__variant5__getILj0ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 80028d4:	4603      	mov	r3, r0
	}
 80028d6:	4618      	mov	r0, r3
 80028d8:	3708      	adds	r7, #8
 80028da:	46bd      	mov	sp, r7
 80028dc:	bd80      	pop	{r7, pc}

080028de <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESM_SQ_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 80028de:	b5b0      	push	{r4, r5, r7, lr}
 80028e0:	b084      	sub	sp, #16
 80028e2:	af00      	add	r7, sp, #0
 80028e4:	6078      	str	r0, [r7, #4]
 80028e6:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 80028e8:	6878      	ldr	r0, [r7, #4]
 80028ea:	f001 fb0b 	bl	8003f04 <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 80028ee:	4604      	mov	r4, r0
 80028f0:	6838      	ldr	r0, [r7, #0]
 80028f2:	f001 fb12 	bl	8003f1a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 80028f6:	4603      	mov	r3, r0
 80028f8:	4618      	mov	r0, r3
 80028fa:	f7ff ffe0 	bl	80028be <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESQ_EEDcOSK_>
 80028fe:	4601      	mov	r1, r0
 8002900:	f107 030c 	add.w	r3, r7, #12
 8002904:	461a      	mov	r2, r3
 8002906:	4620      	mov	r0, r4
 8002908:	f001 fb28 	bl	8003f5c <_ZSt8__invokeIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_JRKiSt17integral_constantIjLj0EEEENSt15__invoke_resultISG_JDpT0_EE4typeESH_DpOSP_>
	      integral_constant<size_t, __indices>()...);
 800290c:	462b      	mov	r3, r5
      }
 800290e:	4618      	mov	r0, r3
 8002910:	3710      	adds	r7, #16
 8002912:	46bd      	mov	sp, r7
 8002914:	bdb0      	pop	{r4, r5, r7, pc}

08002916 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESM_SQ_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8002916:	b5b0      	push	{r4, r5, r7, lr}
 8002918:	b082      	sub	sp, #8
 800291a:	af00      	add	r7, sp, #0
 800291c:	6078      	str	r0, [r7, #4]
 800291e:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8002920:	6878      	ldr	r0, [r7, #4]
 8002922:	f001 faef 	bl	8003f04 <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8002926:	4604      	mov	r4, r0
 8002928:	6838      	ldr	r0, [r7, #0]
 800292a:	f001 faf6 	bl	8003f1a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800292e:	4603      	mov	r3, r0
 8002930:	4619      	mov	r1, r3
 8002932:	4620      	mov	r0, r4
 8002934:	f7ff ffd3 	bl	80028de <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESM_SQ_>
				   std::forward<_Variants>(__vars)...);
 8002938:	462b      	mov	r3, r5
      }
 800293a:	4618      	mov	r0, r3
 800293c:	3708      	adds	r7, #8
 800293e:	46bd      	mov	sp, r7
 8002940:	bdb0      	pop	{r4, r5, r7, pc}

08002942 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj0EEEE14__visit_invokeESM_SQ_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8002942:	b5b0      	push	{r4, r5, r7, lr}
 8002944:	b082      	sub	sp, #8
 8002946:	af00      	add	r7, sp, #0
 8002948:	6078      	str	r0, [r7, #4]
 800294a:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 800294c:	6878      	ldr	r0, [r7, #4]
 800294e:	f001 fad9 	bl	8003f04 <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8002952:	4604      	mov	r4, r0
 8002954:	6838      	ldr	r0, [r7, #0]
 8002956:	f001 fae0 	bl	8003f1a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800295a:	4603      	mov	r3, r0
 800295c:	4619      	mov	r1, r3
 800295e:	4620      	mov	r0, r4
 8002960:	f7ff ffd9 	bl	8002916 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESM_SQ_>
				   std::forward<_Variants>(__vars)...);
 8002964:	462b      	mov	r3, r5
      }
 8002966:	4618      	mov	r0, r3
 8002968:	3708      	adds	r7, #8
 800296a:	46bd      	mov	sp, r7
 800296c:	bdb0      	pop	{r4, r5, r7, pc}

0800296e <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 800296e:	b580      	push	{r7, lr}
 8002970:	b082      	sub	sp, #8
 8002972:	af00      	add	r7, sp, #0
 8002974:	7138      	strb	r0, [r7, #4]
 8002976:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8002978:	6838      	ldr	r0, [r7, #0]
 800297a:	f001 fb0d 	bl	8003f98 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>
 800297e:	4603      	mov	r3, r0
 8002980:	4618      	mov	r0, r3
 8002982:	f001 fb14 	bl	8003fae <_ZNKRSt8__detail9__variant14_UninitializedIfLb1EE6_M_getEv>
 8002986:	4603      	mov	r3, r0
 8002988:	4618      	mov	r0, r3
 800298a:	3708      	adds	r7, #8
 800298c:	46bd      	mov	sp, r7
 800298e:	bd80      	pop	{r7, pc}

08002990 <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8002990:	b590      	push	{r4, r7, lr}
 8002992:	b083      	sub	sp, #12
 8002994:	af00      	add	r7, sp, #0
 8002996:	7138      	strb	r0, [r7, #4]
 8002998:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800299a:	6838      	ldr	r0, [r7, #0]
 800299c:	f001 fac8 	bl	8003f30 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>
 80029a0:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 80029a2:	4619      	mov	r1, r3
 80029a4:	4620      	mov	r0, r4
 80029a6:	f7ff ffe2 	bl	800296e <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 80029aa:	4603      	mov	r3, r0
    }
 80029ac:	4618      	mov	r0, r3
 80029ae:	370c      	adds	r7, #12
 80029b0:	46bd      	mov	sp, r7
 80029b2:	bd90      	pop	{r4, r7, pc}

080029b4 <_ZNSt8__detail9__variant5__getILj1ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 80029b4:	b590      	push	{r4, r7, lr}
 80029b6:	b083      	sub	sp, #12
 80029b8:	af00      	add	r7, sp, #0
 80029ba:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 80029bc:	6878      	ldr	r0, [r7, #4]
 80029be:	f001 faac 	bl	8003f1a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 80029c2:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 80029c4:	4619      	mov	r1, r3
 80029c6:	4620      	mov	r0, r4
 80029c8:	f7ff ffe2 	bl	8002990 <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80029cc:	4603      	mov	r3, r0
    }
 80029ce:	4618      	mov	r0, r3
 80029d0:	370c      	adds	r7, #12
 80029d2:	46bd      	mov	sp, r7
 80029d4:	bd90      	pop	{r4, r7, pc}

080029d6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESQ_EEDcOSK_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 80029d6:	b580      	push	{r7, lr}
 80029d8:	b082      	sub	sp, #8
 80029da:	af00      	add	r7, sp, #0
 80029dc:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 80029de:	6878      	ldr	r0, [r7, #4]
 80029e0:	f001 fa9b 	bl	8003f1a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 80029e4:	4603      	mov	r3, r0
 80029e6:	4618      	mov	r0, r3
 80029e8:	f7ff ffe4 	bl	80029b4 <_ZNSt8__detail9__variant5__getILj1ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 80029ec:	4603      	mov	r3, r0
	}
 80029ee:	4618      	mov	r0, r3
 80029f0:	3708      	adds	r7, #8
 80029f2:	46bd      	mov	sp, r7
 80029f4:	bd80      	pop	{r7, pc}

080029f6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESM_SQ_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 80029f6:	b5b0      	push	{r4, r5, r7, lr}
 80029f8:	b084      	sub	sp, #16
 80029fa:	af00      	add	r7, sp, #0
 80029fc:	6078      	str	r0, [r7, #4]
 80029fe:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8002a00:	6878      	ldr	r0, [r7, #4]
 8002a02:	f001 fa7f 	bl	8003f04 <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8002a06:	4604      	mov	r4, r0
 8002a08:	6838      	ldr	r0, [r7, #0]
 8002a0a:	f001 fa86 	bl	8003f1a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8002a0e:	4603      	mov	r3, r0
 8002a10:	4618      	mov	r0, r3
 8002a12:	f7ff ffe0 	bl	80029d6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESQ_EEDcOSK_>
 8002a16:	4601      	mov	r1, r0
 8002a18:	f107 030c 	add.w	r3, r7, #12
 8002a1c:	461a      	mov	r2, r3
 8002a1e:	4620      	mov	r0, r4
 8002a20:	f001 fad0 	bl	8003fc4 <_ZSt8__invokeIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_JRKfSt17integral_constantIjLj1EEEENSt15__invoke_resultISG_JDpT0_EE4typeESH_DpOSP_>
	      integral_constant<size_t, __indices>()...);
 8002a24:	462b      	mov	r3, r5
      }
 8002a26:	4618      	mov	r0, r3
 8002a28:	3710      	adds	r7, #16
 8002a2a:	46bd      	mov	sp, r7
 8002a2c:	bdb0      	pop	{r4, r5, r7, pc}

08002a2e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESM_SQ_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8002a2e:	b5b0      	push	{r4, r5, r7, lr}
 8002a30:	b082      	sub	sp, #8
 8002a32:	af00      	add	r7, sp, #0
 8002a34:	6078      	str	r0, [r7, #4]
 8002a36:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8002a38:	6878      	ldr	r0, [r7, #4]
 8002a3a:	f001 fa63 	bl	8003f04 <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8002a3e:	4604      	mov	r4, r0
 8002a40:	6838      	ldr	r0, [r7, #0]
 8002a42:	f001 fa6a 	bl	8003f1a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8002a46:	4603      	mov	r3, r0
 8002a48:	4619      	mov	r1, r3
 8002a4a:	4620      	mov	r0, r4
 8002a4c:	f7ff ffd3 	bl	80029f6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESM_SQ_>
				   std::forward<_Variants>(__vars)...);
 8002a50:	462b      	mov	r3, r5
      }
 8002a52:	4618      	mov	r0, r3
 8002a54:	3708      	adds	r7, #8
 8002a56:	46bd      	mov	sp, r7
 8002a58:	bdb0      	pop	{r4, r5, r7, pc}

08002a5a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj1EEEE14__visit_invokeESM_SQ_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8002a5a:	b5b0      	push	{r4, r5, r7, lr}
 8002a5c:	b082      	sub	sp, #8
 8002a5e:	af00      	add	r7, sp, #0
 8002a60:	6078      	str	r0, [r7, #4]
 8002a62:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8002a64:	6878      	ldr	r0, [r7, #4]
 8002a66:	f001 fa4d 	bl	8003f04 <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8002a6a:	4604      	mov	r4, r0
 8002a6c:	6838      	ldr	r0, [r7, #0]
 8002a6e:	f001 fa54 	bl	8003f1a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8002a72:	4603      	mov	r3, r0
 8002a74:	4619      	mov	r1, r3
 8002a76:	4620      	mov	r0, r4
 8002a78:	f7ff ffd9 	bl	8002a2e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESM_SQ_>
				   std::forward<_Variants>(__vars)...);
 8002a7c:	462b      	mov	r3, r5
      }
 8002a7e:	4618      	mov	r0, r3
 8002a80:	3708      	adds	r7, #8
 8002a82:	46bd      	mov	sp, r7
 8002a84:	bdb0      	pop	{r4, r5, r7, pc}

08002a86 <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8002a86:	b580      	push	{r7, lr}
 8002a88:	b082      	sub	sp, #8
 8002a8a:	af00      	add	r7, sp, #0
 8002a8c:	7138      	strb	r0, [r7, #4]
 8002a8e:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8002a90:	6838      	ldr	r0, [r7, #0]
 8002a92:	f001 fab5 	bl	8004000 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>
 8002a96:	4603      	mov	r3, r0
 8002a98:	4618      	mov	r0, r3
 8002a9a:	f001 fabc 	bl	8004016 <_ZNKRSt8__detail9__variant14_UninitializedIbLb1EE6_M_getEv>
 8002a9e:	4603      	mov	r3, r0
 8002aa0:	4618      	mov	r0, r3
 8002aa2:	3708      	adds	r7, #8
 8002aa4:	46bd      	mov	sp, r7
 8002aa6:	bd80      	pop	{r7, pc}

08002aa8 <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8002aa8:	b590      	push	{r4, r7, lr}
 8002aaa:	b083      	sub	sp, #12
 8002aac:	af00      	add	r7, sp, #0
 8002aae:	7138      	strb	r0, [r7, #4]
 8002ab0:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8002ab2:	6838      	ldr	r0, [r7, #0]
 8002ab4:	f001 fa70 	bl	8003f98 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>
 8002ab8:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8002aba:	4619      	mov	r1, r3
 8002abc:	4620      	mov	r0, r4
 8002abe:	f7ff ffe2 	bl	8002a86 <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 8002ac2:	4603      	mov	r3, r0
    }
 8002ac4:	4618      	mov	r0, r3
 8002ac6:	370c      	adds	r7, #12
 8002ac8:	46bd      	mov	sp, r7
 8002aca:	bd90      	pop	{r4, r7, pc}

08002acc <_ZNSt8__detail9__variant5__getILj2ERKNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8002acc:	b590      	push	{r4, r7, lr}
 8002ace:	b083      	sub	sp, #12
 8002ad0:	af00      	add	r7, sp, #0
 8002ad2:	7138      	strb	r0, [r7, #4]
 8002ad4:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8002ad6:	6838      	ldr	r0, [r7, #0]
 8002ad8:	f001 fa2a 	bl	8003f30 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>
 8002adc:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8002ade:	4619      	mov	r1, r3
 8002ae0:	4620      	mov	r0, r4
 8002ae2:	f7ff ffe1 	bl	8002aa8 <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8002ae6:	4603      	mov	r3, r0
    }
 8002ae8:	4618      	mov	r0, r3
 8002aea:	370c      	adds	r7, #12
 8002aec:	46bd      	mov	sp, r7
 8002aee:	bd90      	pop	{r4, r7, pc}

08002af0 <_ZNSt8__detail9__variant5__getILj2ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8002af0:	b590      	push	{r4, r7, lr}
 8002af2:	b083      	sub	sp, #12
 8002af4:	af00      	add	r7, sp, #0
 8002af6:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8002af8:	6878      	ldr	r0, [r7, #4]
 8002afa:	f001 fa0e 	bl	8003f1a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8002afe:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8002b00:	4619      	mov	r1, r3
 8002b02:	4620      	mov	r0, r4
 8002b04:	f7ff ffe2 	bl	8002acc <_ZNSt8__detail9__variant5__getILj2ERKNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8002b08:	4603      	mov	r3, r0
    }
 8002b0a:	4618      	mov	r0, r3
 8002b0c:	370c      	adds	r7, #12
 8002b0e:	46bd      	mov	sp, r7
 8002b10:	bd90      	pop	{r4, r7, pc}

08002b12 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESQ_EEDcOSK_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8002b12:	b580      	push	{r7, lr}
 8002b14:	b082      	sub	sp, #8
 8002b16:	af00      	add	r7, sp, #0
 8002b18:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8002b1a:	6878      	ldr	r0, [r7, #4]
 8002b1c:	f001 f9fd 	bl	8003f1a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8002b20:	4603      	mov	r3, r0
 8002b22:	4618      	mov	r0, r3
 8002b24:	f7ff ffe4 	bl	8002af0 <_ZNSt8__detail9__variant5__getILj2ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8002b28:	4603      	mov	r3, r0
	}
 8002b2a:	4618      	mov	r0, r3
 8002b2c:	3708      	adds	r7, #8
 8002b2e:	46bd      	mov	sp, r7
 8002b30:	bd80      	pop	{r7, pc}

08002b32 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESM_SQ_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8002b32:	b5b0      	push	{r4, r5, r7, lr}
 8002b34:	b084      	sub	sp, #16
 8002b36:	af00      	add	r7, sp, #0
 8002b38:	6078      	str	r0, [r7, #4]
 8002b3a:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8002b3c:	6878      	ldr	r0, [r7, #4]
 8002b3e:	f001 f9e1 	bl	8003f04 <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8002b42:	4604      	mov	r4, r0
 8002b44:	6838      	ldr	r0, [r7, #0]
 8002b46:	f001 f9e8 	bl	8003f1a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8002b4a:	4603      	mov	r3, r0
 8002b4c:	4618      	mov	r0, r3
 8002b4e:	f7ff ffe0 	bl	8002b12 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESQ_EEDcOSK_>
 8002b52:	4601      	mov	r1, r0
 8002b54:	f107 030c 	add.w	r3, r7, #12
 8002b58:	461a      	mov	r2, r3
 8002b5a:	4620      	mov	r0, r4
 8002b5c:	f001 fa66 	bl	800402c <_ZSt8__invokeIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_JRKbSt17integral_constantIjLj2EEEENSt15__invoke_resultISG_JDpT0_EE4typeESH_DpOSP_>
	      integral_constant<size_t, __indices>()...);
 8002b60:	462b      	mov	r3, r5
      }
 8002b62:	4618      	mov	r0, r3
 8002b64:	3710      	adds	r7, #16
 8002b66:	46bd      	mov	sp, r7
 8002b68:	bdb0      	pop	{r4, r5, r7, pc}

08002b6a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESM_SQ_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8002b6a:	b5b0      	push	{r4, r5, r7, lr}
 8002b6c:	b082      	sub	sp, #8
 8002b6e:	af00      	add	r7, sp, #0
 8002b70:	6078      	str	r0, [r7, #4]
 8002b72:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8002b74:	6878      	ldr	r0, [r7, #4]
 8002b76:	f001 f9c5 	bl	8003f04 <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8002b7a:	4604      	mov	r4, r0
 8002b7c:	6838      	ldr	r0, [r7, #0]
 8002b7e:	f001 f9cc 	bl	8003f1a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8002b82:	4603      	mov	r3, r0
 8002b84:	4619      	mov	r1, r3
 8002b86:	4620      	mov	r0, r4
 8002b88:	f7ff ffd3 	bl	8002b32 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESM_SQ_>
				   std::forward<_Variants>(__vars)...);
 8002b8c:	462b      	mov	r3, r5
      }
 8002b8e:	4618      	mov	r0, r3
 8002b90:	3708      	adds	r7, #8
 8002b92:	46bd      	mov	sp, r7
 8002b94:	bdb0      	pop	{r4, r5, r7, pc}

08002b96 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj2EEEE14__visit_invokeESM_SQ_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8002b96:	b5b0      	push	{r4, r5, r7, lr}
 8002b98:	b082      	sub	sp, #8
 8002b9a:	af00      	add	r7, sp, #0
 8002b9c:	6078      	str	r0, [r7, #4]
 8002b9e:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8002ba0:	6878      	ldr	r0, [r7, #4]
 8002ba2:	f001 f9af 	bl	8003f04 <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8002ba6:	4604      	mov	r4, r0
 8002ba8:	6838      	ldr	r0, [r7, #0]
 8002baa:	f001 f9b6 	bl	8003f1a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8002bae:	4603      	mov	r3, r0
 8002bb0:	4619      	mov	r1, r3
 8002bb2:	4620      	mov	r0, r4
 8002bb4:	f7ff ffd9 	bl	8002b6a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESM_SQ_>
				   std::forward<_Variants>(__vars)...);
 8002bb8:	462b      	mov	r3, r5
      }
 8002bba:	4618      	mov	r0, r3
 8002bbc:	3708      	adds	r7, #8
 8002bbe:	46bd      	mov	sp, r7
 8002bc0:	bdb0      	pop	{r4, r5, r7, pc}

08002bc2 <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8002bc2:	b580      	push	{r7, lr}
 8002bc4:	b082      	sub	sp, #8
 8002bc6:	af00      	add	r7, sp, #0
 8002bc8:	7138      	strb	r0, [r7, #4]
 8002bca:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8002bcc:	6838      	ldr	r0, [r7, #0]
 8002bce:	f001 fa4b 	bl	8004068 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>
 8002bd2:	4603      	mov	r3, r0
 8002bd4:	4618      	mov	r0, r3
 8002bd6:	f001 fa52 	bl	800407e <_ZNKRSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE6_M_getEv>
 8002bda:	4603      	mov	r3, r0
 8002bdc:	4618      	mov	r0, r3
 8002bde:	3708      	adds	r7, #8
 8002be0:	46bd      	mov	sp, r7
 8002be2:	bd80      	pop	{r7, pc}

08002be4 <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8002be4:	b590      	push	{r4, r7, lr}
 8002be6:	b083      	sub	sp, #12
 8002be8:	af00      	add	r7, sp, #0
 8002bea:	7138      	strb	r0, [r7, #4]
 8002bec:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8002bee:	6838      	ldr	r0, [r7, #0]
 8002bf0:	f001 fa06 	bl	8004000 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>
 8002bf4:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8002bf6:	4619      	mov	r1, r3
 8002bf8:	4620      	mov	r0, r4
 8002bfa:	f7ff ffe2 	bl	8002bc2 <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 8002bfe:	4603      	mov	r3, r0
    }
 8002c00:	4618      	mov	r0, r3
 8002c02:	370c      	adds	r7, #12
 8002c04:	46bd      	mov	sp, r7
 8002c06:	bd90      	pop	{r4, r7, pc}

08002c08 <_ZNSt8__detail9__variant5__getILj2ERKNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8002c08:	b590      	push	{r4, r7, lr}
 8002c0a:	b083      	sub	sp, #12
 8002c0c:	af00      	add	r7, sp, #0
 8002c0e:	7138      	strb	r0, [r7, #4]
 8002c10:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8002c12:	6838      	ldr	r0, [r7, #0]
 8002c14:	f001 f9c0 	bl	8003f98 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>
 8002c18:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8002c1a:	4619      	mov	r1, r3
 8002c1c:	4620      	mov	r0, r4
 8002c1e:	f7ff ffe1 	bl	8002be4 <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8002c22:	4603      	mov	r3, r0
    }
 8002c24:	4618      	mov	r0, r3
 8002c26:	370c      	adds	r7, #12
 8002c28:	46bd      	mov	sp, r7
 8002c2a:	bd90      	pop	{r4, r7, pc}

08002c2c <_ZNSt8__detail9__variant5__getILj3ERKNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8002c2c:	b590      	push	{r4, r7, lr}
 8002c2e:	b083      	sub	sp, #12
 8002c30:	af00      	add	r7, sp, #0
 8002c32:	7138      	strb	r0, [r7, #4]
 8002c34:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8002c36:	6838      	ldr	r0, [r7, #0]
 8002c38:	f001 f97a 	bl	8003f30 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>
 8002c3c:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8002c3e:	4619      	mov	r1, r3
 8002c40:	4620      	mov	r0, r4
 8002c42:	f7ff ffe1 	bl	8002c08 <_ZNSt8__detail9__variant5__getILj2ERKNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8002c46:	4603      	mov	r3, r0
    }
 8002c48:	4618      	mov	r0, r3
 8002c4a:	370c      	adds	r7, #12
 8002c4c:	46bd      	mov	sp, r7
 8002c4e:	bd90      	pop	{r4, r7, pc}

08002c50 <_ZNSt8__detail9__variant5__getILj3ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8002c50:	b590      	push	{r4, r7, lr}
 8002c52:	b083      	sub	sp, #12
 8002c54:	af00      	add	r7, sp, #0
 8002c56:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8002c58:	6878      	ldr	r0, [r7, #4]
 8002c5a:	f001 f95e 	bl	8003f1a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8002c5e:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8002c60:	4619      	mov	r1, r3
 8002c62:	4620      	mov	r0, r4
 8002c64:	f7ff ffe2 	bl	8002c2c <_ZNSt8__detail9__variant5__getILj3ERKNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8002c68:	4603      	mov	r3, r0
    }
 8002c6a:	4618      	mov	r0, r3
 8002c6c:	370c      	adds	r7, #12
 8002c6e:	46bd      	mov	sp, r7
 8002c70:	bd90      	pop	{r4, r7, pc}

08002c72 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESQ_EEDcOSK_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8002c72:	b580      	push	{r7, lr}
 8002c74:	b082      	sub	sp, #8
 8002c76:	af00      	add	r7, sp, #0
 8002c78:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8002c7a:	6878      	ldr	r0, [r7, #4]
 8002c7c:	f001 f94d 	bl	8003f1a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8002c80:	4603      	mov	r3, r0
 8002c82:	4618      	mov	r0, r3
 8002c84:	f7ff ffe4 	bl	8002c50 <_ZNSt8__detail9__variant5__getILj3ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8002c88:	4603      	mov	r3, r0
	}
 8002c8a:	4618      	mov	r0, r3
 8002c8c:	3708      	adds	r7, #8
 8002c8e:	46bd      	mov	sp, r7
 8002c90:	bd80      	pop	{r7, pc}

08002c92 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESM_SQ_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8002c92:	b5b0      	push	{r4, r5, r7, lr}
 8002c94:	b084      	sub	sp, #16
 8002c96:	af00      	add	r7, sp, #0
 8002c98:	6078      	str	r0, [r7, #4]
 8002c9a:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8002c9c:	6878      	ldr	r0, [r7, #4]
 8002c9e:	f001 f931 	bl	8003f04 <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8002ca2:	4604      	mov	r4, r0
 8002ca4:	6838      	ldr	r0, [r7, #0]
 8002ca6:	f001 f938 	bl	8003f1a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8002caa:	4603      	mov	r3, r0
 8002cac:	4618      	mov	r0, r3
 8002cae:	f7ff ffe0 	bl	8002c72 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESQ_EEDcOSK_>
 8002cb2:	4601      	mov	r1, r0
 8002cb4:	f107 030c 	add.w	r3, r7, #12
 8002cb8:	461a      	mov	r2, r3
 8002cba:	4620      	mov	r0, r4
 8002cbc:	f001 f9ec 	bl	8004098 <_ZSt8__invokeIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_JRKS8_St17integral_constantIjLj3EEEENSt15__invoke_resultISG_JDpT0_EE4typeESH_DpOSP_>
	      integral_constant<size_t, __indices>()...);
 8002cc0:	462b      	mov	r3, r5
      }
 8002cc2:	4618      	mov	r0, r3
 8002cc4:	3710      	adds	r7, #16
 8002cc6:	46bd      	mov	sp, r7
 8002cc8:	bdb0      	pop	{r4, r5, r7, pc}

08002cca <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESM_SQ_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8002cca:	b5b0      	push	{r4, r5, r7, lr}
 8002ccc:	b082      	sub	sp, #8
 8002cce:	af00      	add	r7, sp, #0
 8002cd0:	6078      	str	r0, [r7, #4]
 8002cd2:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8002cd4:	6878      	ldr	r0, [r7, #4]
 8002cd6:	f001 f915 	bl	8003f04 <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8002cda:	4604      	mov	r4, r0
 8002cdc:	6838      	ldr	r0, [r7, #0]
 8002cde:	f001 f91c 	bl	8003f1a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8002ce2:	4603      	mov	r3, r0
 8002ce4:	4619      	mov	r1, r3
 8002ce6:	4620      	mov	r0, r4
 8002ce8:	f7ff ffd3 	bl	8002c92 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESM_SQ_>
				   std::forward<_Variants>(__vars)...);
 8002cec:	462b      	mov	r3, r5
      }
 8002cee:	4618      	mov	r0, r3
 8002cf0:	3708      	adds	r7, #8
 8002cf2:	46bd      	mov	sp, r7
 8002cf4:	bdb0      	pop	{r4, r5, r7, pc}

08002cf6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj3EEEE14__visit_invokeESM_SQ_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8002cf6:	b5b0      	push	{r4, r5, r7, lr}
 8002cf8:	b082      	sub	sp, #8
 8002cfa:	af00      	add	r7, sp, #0
 8002cfc:	6078      	str	r0, [r7, #4]
 8002cfe:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8002d00:	6878      	ldr	r0, [r7, #4]
 8002d02:	f001 f8ff 	bl	8003f04 <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8002d06:	4604      	mov	r4, r0
 8002d08:	6838      	ldr	r0, [r7, #0]
 8002d0a:	f001 f906 	bl	8003f1a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8002d0e:	4603      	mov	r3, r0
 8002d10:	4619      	mov	r1, r3
 8002d12:	4620      	mov	r0, r4
 8002d14:	f7ff ffd9 	bl	8002cca <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESM_SQ_>
				   std::forward<_Variants>(__vars)...);
 8002d18:	462b      	mov	r3, r5
      }
 8002d1a:	4618      	mov	r0, r3
 8002d1c:	3708      	adds	r7, #8
 8002d1e:	46bd      	mov	sp, r7
 8002d20:	bdb0      	pop	{r4, r5, r7, pc}

08002d22 <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJSt6vectorI6SymbolSaIS4_EEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8002d22:	b580      	push	{r7, lr}
 8002d24:	b082      	sub	sp, #8
 8002d26:	af00      	add	r7, sp, #0
 8002d28:	7138      	strb	r0, [r7, #4]
 8002d2a:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8002d2c:	6838      	ldr	r0, [r7, #0]
 8002d2e:	f001 f9d1 	bl	80040d4 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJSt6vectorI6SymbolSaIS4_EEEEEEOT_RNSt16remove_referenceISA_E4typeE>
 8002d32:	4603      	mov	r3, r0
 8002d34:	4618      	mov	r0, r3
 8002d36:	f001 f9d8 	bl	80040ea <_ZNKRSt8__detail9__variant14_UninitializedISt6vectorI6SymbolSaIS3_EELb0EE6_M_getEv>
 8002d3a:	4603      	mov	r3, r0
 8002d3c:	4618      	mov	r0, r3
 8002d3e:	3708      	adds	r7, #8
 8002d40:	46bd      	mov	sp, r7
 8002d42:	bd80      	pop	{r7, pc}

08002d44 <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8002d44:	b590      	push	{r4, r7, lr}
 8002d46:	b083      	sub	sp, #12
 8002d48:	af00      	add	r7, sp, #0
 8002d4a:	7138      	strb	r0, [r7, #4]
 8002d4c:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8002d4e:	6838      	ldr	r0, [r7, #0]
 8002d50:	f001 f98a 	bl	8004068 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>
 8002d54:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8002d56:	4619      	mov	r1, r3
 8002d58:	4620      	mov	r0, r4
 8002d5a:	f7ff ffe2 	bl	8002d22 <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJSt6vectorI6SymbolSaIS4_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 8002d5e:	4603      	mov	r3, r0
    }
 8002d60:	4618      	mov	r0, r3
 8002d62:	370c      	adds	r7, #12
 8002d64:	46bd      	mov	sp, r7
 8002d66:	bd90      	pop	{r4, r7, pc}

08002d68 <_ZNSt8__detail9__variant5__getILj2ERKNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8002d68:	b590      	push	{r4, r7, lr}
 8002d6a:	b083      	sub	sp, #12
 8002d6c:	af00      	add	r7, sp, #0
 8002d6e:	7138      	strb	r0, [r7, #4]
 8002d70:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8002d72:	6838      	ldr	r0, [r7, #0]
 8002d74:	f001 f944 	bl	8004000 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>
 8002d78:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8002d7a:	4619      	mov	r1, r3
 8002d7c:	4620      	mov	r0, r4
 8002d7e:	f7ff ffe1 	bl	8002d44 <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8002d82:	4603      	mov	r3, r0
    }
 8002d84:	4618      	mov	r0, r3
 8002d86:	370c      	adds	r7, #12
 8002d88:	46bd      	mov	sp, r7
 8002d8a:	bd90      	pop	{r4, r7, pc}

08002d8c <_ZNSt8__detail9__variant5__getILj3ERKNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8002d8c:	b590      	push	{r4, r7, lr}
 8002d8e:	b083      	sub	sp, #12
 8002d90:	af00      	add	r7, sp, #0
 8002d92:	7138      	strb	r0, [r7, #4]
 8002d94:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8002d96:	6838      	ldr	r0, [r7, #0]
 8002d98:	f001 f8fe 	bl	8003f98 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>
 8002d9c:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8002d9e:	4619      	mov	r1, r3
 8002da0:	4620      	mov	r0, r4
 8002da2:	f7ff ffe1 	bl	8002d68 <_ZNSt8__detail9__variant5__getILj2ERKNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8002da6:	4603      	mov	r3, r0
    }
 8002da8:	4618      	mov	r0, r3
 8002daa:	370c      	adds	r7, #12
 8002dac:	46bd      	mov	sp, r7
 8002dae:	bd90      	pop	{r4, r7, pc}

08002db0 <_ZNSt8__detail9__variant5__getILj4ERKNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8002db0:	b590      	push	{r4, r7, lr}
 8002db2:	b083      	sub	sp, #12
 8002db4:	af00      	add	r7, sp, #0
 8002db6:	7138      	strb	r0, [r7, #4]
 8002db8:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8002dba:	6838      	ldr	r0, [r7, #0]
 8002dbc:	f001 f8b8 	bl	8003f30 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>
 8002dc0:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8002dc2:	4619      	mov	r1, r3
 8002dc4:	4620      	mov	r0, r4
 8002dc6:	f7ff ffe1 	bl	8002d8c <_ZNSt8__detail9__variant5__getILj3ERKNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8002dca:	4603      	mov	r3, r0
    }
 8002dcc:	4618      	mov	r0, r3
 8002dce:	370c      	adds	r7, #12
 8002dd0:	46bd      	mov	sp, r7
 8002dd2:	bd90      	pop	{r4, r7, pc}

08002dd4 <_ZNSt8__detail9__variant5__getILj4ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8002dd4:	b590      	push	{r4, r7, lr}
 8002dd6:	b083      	sub	sp, #12
 8002dd8:	af00      	add	r7, sp, #0
 8002dda:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8002ddc:	6878      	ldr	r0, [r7, #4]
 8002dde:	f001 f89c 	bl	8003f1a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8002de2:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8002de4:	4619      	mov	r1, r3
 8002de6:	4620      	mov	r0, r4
 8002de8:	f7ff ffe2 	bl	8002db0 <_ZNSt8__detail9__variant5__getILj4ERKNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8002dec:	4603      	mov	r3, r0
    }
 8002dee:	4618      	mov	r0, r3
 8002df0:	370c      	adds	r7, #12
 8002df2:	46bd      	mov	sp, r7
 8002df4:	bd90      	pop	{r4, r7, pc}

08002df6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj4EEEE28__element_by_index_or_cookieILj4ESQ_EEDcOSK_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8002df6:	b580      	push	{r7, lr}
 8002df8:	b082      	sub	sp, #8
 8002dfa:	af00      	add	r7, sp, #0
 8002dfc:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8002dfe:	6878      	ldr	r0, [r7, #4]
 8002e00:	f001 f88b 	bl	8003f1a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8002e04:	4603      	mov	r3, r0
 8002e06:	4618      	mov	r0, r3
 8002e08:	f7ff ffe4 	bl	8002dd4 <_ZNSt8__detail9__variant5__getILj4ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8002e0c:	4603      	mov	r3, r0
	}
 8002e0e:	4618      	mov	r0, r3
 8002e10:	3708      	adds	r7, #8
 8002e12:	46bd      	mov	sp, r7
 8002e14:	bd80      	pop	{r7, pc}

08002e16 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj4EEEE19__visit_invoke_implESM_SQ_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8002e16:	b5b0      	push	{r4, r5, r7, lr}
 8002e18:	b084      	sub	sp, #16
 8002e1a:	af00      	add	r7, sp, #0
 8002e1c:	6078      	str	r0, [r7, #4]
 8002e1e:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8002e20:	6878      	ldr	r0, [r7, #4]
 8002e22:	f001 f86f 	bl	8003f04 <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8002e26:	4604      	mov	r4, r0
 8002e28:	6838      	ldr	r0, [r7, #0]
 8002e2a:	f001 f876 	bl	8003f1a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8002e2e:	4603      	mov	r3, r0
 8002e30:	4618      	mov	r0, r3
 8002e32:	f7ff ffe0 	bl	8002df6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj4EEEE28__element_by_index_or_cookieILj4ESQ_EEDcOSK_>
 8002e36:	4601      	mov	r1, r0
 8002e38:	f107 030c 	add.w	r3, r7, #12
 8002e3c:	461a      	mov	r2, r3
 8002e3e:	4620      	mov	r0, r4
 8002e40:	f001 f960 	bl	8004104 <_ZSt8__invokeIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_JRKSC_St17integral_constantIjLj4EEEENSt15__invoke_resultISG_JDpT0_EE4typeESH_DpOSP_>
	      integral_constant<size_t, __indices>()...);
 8002e44:	462b      	mov	r3, r5
      }
 8002e46:	4618      	mov	r0, r3
 8002e48:	3710      	adds	r7, #16
 8002e4a:	46bd      	mov	sp, r7
 8002e4c:	bdb0      	pop	{r4, r5, r7, pc}

08002e4e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj4EEEE17__do_visit_invokeESM_SQ_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8002e4e:	b5b0      	push	{r4, r5, r7, lr}
 8002e50:	b082      	sub	sp, #8
 8002e52:	af00      	add	r7, sp, #0
 8002e54:	6078      	str	r0, [r7, #4]
 8002e56:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8002e58:	6878      	ldr	r0, [r7, #4]
 8002e5a:	f001 f853 	bl	8003f04 <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8002e5e:	4604      	mov	r4, r0
 8002e60:	6838      	ldr	r0, [r7, #0]
 8002e62:	f001 f85a 	bl	8003f1a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8002e66:	4603      	mov	r3, r0
 8002e68:	4619      	mov	r1, r3
 8002e6a:	4620      	mov	r0, r4
 8002e6c:	f7ff ffd3 	bl	8002e16 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj4EEEE19__visit_invoke_implESM_SQ_>
				   std::forward<_Variants>(__vars)...);
 8002e70:	462b      	mov	r3, r5
      }
 8002e72:	4618      	mov	r0, r3
 8002e74:	3708      	adds	r7, #8
 8002e76:	46bd      	mov	sp, r7
 8002e78:	bdb0      	pop	{r4, r5, r7, pc}

08002e7a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj4EEEE14__visit_invokeESM_SQ_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8002e7a:	b5b0      	push	{r4, r5, r7, lr}
 8002e7c:	b082      	sub	sp, #8
 8002e7e:	af00      	add	r7, sp, #0
 8002e80:	6078      	str	r0, [r7, #4]
 8002e82:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8002e84:	6878      	ldr	r0, [r7, #4]
 8002e86:	f001 f83d 	bl	8003f04 <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8002e8a:	4604      	mov	r4, r0
 8002e8c:	6838      	ldr	r0, [r7, #0]
 8002e8e:	f001 f844 	bl	8003f1a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8002e92:	4603      	mov	r3, r0
 8002e94:	4619      	mov	r1, r3
 8002e96:	4620      	mov	r0, r4
 8002e98:	f7ff ffd9 	bl	8002e4e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj4EEEE17__do_visit_invokeESM_SQ_>
				   std::forward<_Variants>(__vars)...);
 8002e9c:	462b      	mov	r3, r5
      }
 8002e9e:	4618      	mov	r0, r3
 8002ea0:	3708      	adds	r7, #8
 8002ea2:	46bd      	mov	sp, r7
 8002ea4:	bdb0      	pop	{r4, r5, r7, pc}

08002ea6 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSERKSE_EUlOT_T0_E_RKSt7variantIJifbS9_SD_EEEJLj5EEE9_M_accessIJEEERKSR_jDpT_>:
	_M_access(size_t __first_index, _Args... __rest_indices) const
 8002ea6:	b580      	push	{r7, lr}
 8002ea8:	b082      	sub	sp, #8
 8002eaa:	af00      	add	r7, sp, #0
 8002eac:	6078      	str	r0, [r7, #4]
 8002eae:	6039      	str	r1, [r7, #0]
	    ._M_access(__rest_indices...);
 8002eb0:	683b      	ldr	r3, [r7, #0]
 8002eb2:	009b      	lsls	r3, r3, #2
 8002eb4:	687a      	ldr	r2, [r7, #4]
 8002eb6:	4413      	add	r3, r2
 8002eb8:	4618      	mov	r0, r3
 8002eba:	f001 f941 	bl	8004140 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSERKSE_EUlOT_T0_E_RKSt7variantIJifbS9_SD_EEEJEE9_M_accessEv>
 8002ebe:	4603      	mov	r3, r0
	}
 8002ec0:	4618      	mov	r0, r3
 8002ec2:	3708      	adds	r7, #8
 8002ec4:	46bd      	mov	sp, r7
 8002ec6:	bd80      	pop	{r7, pc}

08002ec8 <_ZSt10__do_visitILb1ELb1EZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_JRKSt7variantIJifbS8_SC_EEEEDcOT1_DpOT2_>:
    __do_visit(_Visitor&& __visitor, _Variants&&... __variants)
 8002ec8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002eca:	b085      	sub	sp, #20
 8002ecc:	af00      	add	r7, sp, #0
 8002ece:	6078      	str	r0, [r7, #4]
 8002ed0:	6039      	str	r1, [r7, #0]
      constexpr auto& __vtable = __detail::__variant::__gen_vtable<
 8002ed2:	4b0f      	ldr	r3, [pc, #60]	; (8002f10 <_ZSt10__do_visitILb1ELb1EZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_JRKSt7variantIJifbS8_SC_EEEEDcOT1_DpOT2_+0x48>)
 8002ed4:	60fb      	str	r3, [r7, #12]
      auto __func_ptr = __vtable._M_access(__variants.index()...);
 8002ed6:	6838      	ldr	r0, [r7, #0]
 8002ed8:	f7ff fb89 	bl	80025ee <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv>
 8002edc:	4603      	mov	r3, r0
 8002ede:	4619      	mov	r1, r3
 8002ee0:	68f8      	ldr	r0, [r7, #12]
 8002ee2:	f7ff ffe0 	bl	8002ea6 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSERKSE_EUlOT_T0_E_RKSt7variantIJifbS9_SD_EEEJLj5EEE9_M_accessIJEEERKSR_jDpT_>
 8002ee6:	4603      	mov	r3, r0
 8002ee8:	681b      	ldr	r3, [r3, #0]
 8002eea:	60bb      	str	r3, [r7, #8]
      return (*__func_ptr)(std::forward<_Visitor>(__visitor),
 8002eec:	68bc      	ldr	r4, [r7, #8]
 8002eee:	6878      	ldr	r0, [r7, #4]
 8002ef0:	f001 f931 	bl	8004156 <_ZSt7forwardIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8002ef4:	4605      	mov	r5, r0
 8002ef6:	6838      	ldr	r0, [r7, #0]
 8002ef8:	f001 f80f 	bl	8003f1a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8002efc:	4603      	mov	r3, r0
 8002efe:	4619      	mov	r1, r3
 8002f00:	4628      	mov	r0, r5
 8002f02:	47a0      	blx	r4
			   std::forward<_Variants>(__variants)...);
 8002f04:	4633      	mov	r3, r6
    }
 8002f06:	4618      	mov	r0, r3
 8002f08:	3714      	adds	r7, #20
 8002f0a:	46bd      	mov	sp, r7
 8002f0c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002f0e:	bf00      	nop
 8002f10:	0802a15c 	.word	0x0802a15c

08002f14 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_>:
      operator=(const _Copy_assign_base& __rhs)
 8002f14:	b580      	push	{r7, lr}
 8002f16:	b084      	sub	sp, #16
 8002f18:	af00      	add	r7, sp, #0
 8002f1a:	6078      	str	r0, [r7, #4]
 8002f1c:	6039      	str	r1, [r7, #0]
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8002f1e:	687b      	ldr	r3, [r7, #4]
 8002f20:	60fb      	str	r3, [r7, #12]
 8002f22:	6838      	ldr	r0, [r7, #0]
 8002f24:	f7ff fc9e 	bl	8002864 <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEERKNSt8__detail9__variant17_Copy_assign_baseILb0EJifbS5_S9_EEEEDcOT0_>
 8002f28:	4602      	mov	r2, r0
 8002f2a:	f107 030c 	add.w	r3, r7, #12
 8002f2e:	4611      	mov	r1, r2
 8002f30:	4618      	mov	r0, r3
 8002f32:	f7ff ffc9 	bl	8002ec8 <_ZSt10__do_visitILb1ELb1EZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_JRKSt7variantIJifbS8_SC_EEEEDcOT1_DpOT2_>
	return *this;
 8002f36:	687b      	ldr	r3, [r7, #4]
      }
 8002f38:	4618      	mov	r0, r3
 8002f3a:	3710      	adds	r7, #16
 8002f3c:	46bd      	mov	sp, r7
 8002f3e:	bd80      	pop	{r7, pc}

08002f40 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 8002f40:	b580      	push	{r7, lr}
 8002f42:	b082      	sub	sp, #8
 8002f44:	af00      	add	r7, sp, #0
 8002f46:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 8002f48:	6878      	ldr	r0, [r7, #4]
 8002f4a:	f001 f90f 	bl	800416c <_ZSt3getILj0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8002f4e:	4603      	mov	r3, r0
    }
 8002f50:	4618      	mov	r0, r3
 8002f52:	3708      	adds	r7, #8
 8002f54:	46bd      	mov	sp, r7
 8002f56:	bd80      	pop	{r7, pc}

08002f58 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_>:
        _M_construct(_InIterator __beg, _InIterator __end)
 8002f58:	b580      	push	{r7, lr}
 8002f5a:	b084      	sub	sp, #16
 8002f5c:	af00      	add	r7, sp, #0
 8002f5e:	60f8      	str	r0, [r7, #12]
 8002f60:	60b9      	str	r1, [r7, #8]
 8002f62:	607a      	str	r2, [r7, #4]
	  _M_construct_aux(__beg, __end, _Integral());
 8002f64:	687a      	ldr	r2, [r7, #4]
 8002f66:	68b9      	ldr	r1, [r7, #8]
 8002f68:	68f8      	ldr	r0, [r7, #12]
 8002f6a:	f001 f91b 	bl	80041a4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_construct_auxIPKcEEvT_S8_St12__false_type>
        }
 8002f6e:	bf00      	nop
 8002f70:	3710      	adds	r7, #16
 8002f72:	46bd      	mov	sp, r7
 8002f74:	bd80      	pop	{r7, pc}

08002f76 <_ZN9__gnu_cxx13new_allocatorISt4pairIKc10token_typeEEC1Ev>:
      // 2103. propagate_on_container_move_assignment
      typedef std::true_type propagate_on_container_move_assignment;
#endif

      _GLIBCXX20_CONSTEXPR
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 8002f76:	b480      	push	{r7}
 8002f78:	b083      	sub	sp, #12
 8002f7a:	af00      	add	r7, sp, #0
 8002f7c:	6078      	str	r0, [r7, #4]
 8002f7e:	687b      	ldr	r3, [r7, #4]
 8002f80:	4618      	mov	r0, r3
 8002f82:	370c      	adds	r7, #12
 8002f84:	46bd      	mov	sp, r7
 8002f86:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f8a:	4770      	bx	lr

08002f8c <_ZN9__gnu_cxx13new_allocatorISt4pairIKc10token_typeEED1Ev>:

      template<typename _Tp1>
	_GLIBCXX20_CONSTEXPR
	new_allocator(const new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }

      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 8002f8c:	b480      	push	{r7}
 8002f8e:	b083      	sub	sp, #12
 8002f90:	af00      	add	r7, sp, #0
 8002f92:	6078      	str	r0, [r7, #4]
 8002f94:	687b      	ldr	r3, [r7, #4]
 8002f96:	4618      	mov	r0, r3
 8002f98:	370c      	adds	r7, #12
 8002f9a:	46bd      	mov	sp, r7
 8002f9c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002fa0:	4770      	bx	lr

08002fa2 <_ZNSaISt4pairIKc10token_typeEEC1ERKS3_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
 8002fa2:	b580      	push	{r7, lr}
 8002fa4:	b082      	sub	sp, #8
 8002fa6:	af00      	add	r7, sp, #0
 8002fa8:	6078      	str	r0, [r7, #4]
 8002faa:	6039      	str	r1, [r7, #0]
      : __allocator_base<_Tp>(__a) { }
 8002fac:	6839      	ldr	r1, [r7, #0]
 8002fae:	6878      	ldr	r0, [r7, #4]
 8002fb0:	f001 f909 	bl	80041c6 <_ZN9__gnu_cxx13new_allocatorISt4pairIKc10token_typeEEC1ERKS5_>
 8002fb4:	687b      	ldr	r3, [r7, #4]
 8002fb6:	4618      	mov	r0, r3
 8002fb8:	3708      	adds	r7, #8
 8002fba:	46bd      	mov	sp, r7
 8002fbc:	bd80      	pop	{r7, pc}

08002fbe <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE13_Rb_tree_implIS7_Lb1EED1Ev>:
#else
      // Unused _Is_pod_comparator is kept as it is part of mangled name.
      template<typename _Key_compare,
	       bool /* _Is_pod_comparator */ = __is_pod(_Key_compare)>
#endif
	struct _Rb_tree_impl
 8002fbe:	b580      	push	{r7, lr}
 8002fc0:	b082      	sub	sp, #8
 8002fc2:	af00      	add	r7, sp, #0
 8002fc4:	6078      	str	r0, [r7, #4]
 8002fc6:	6878      	ldr	r0, [r7, #4]
 8002fc8:	f001 f916 	bl	80041f8 <_ZNSaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEED1Ev>
 8002fcc:	687b      	ldr	r3, [r7, #4]
 8002fce:	4618      	mov	r0, r3
 8002fd0:	3708      	adds	r7, #8
 8002fd2:	46bd      	mov	sp, r7
 8002fd4:	bd80      	pop	{r7, pc}

08002fd6 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EEC1ERKS7_RKS8_>:
      _Rb_tree() { }
#else
      _Rb_tree() = default;
#endif

      _Rb_tree(const _Compare& __comp,
 8002fd6:	b590      	push	{r4, r7, lr}
 8002fd8:	b087      	sub	sp, #28
 8002fda:	af00      	add	r7, sp, #0
 8002fdc:	60f8      	str	r0, [r7, #12]
 8002fde:	60b9      	str	r1, [r7, #8]
 8002fe0:	607a      	str	r2, [r7, #4]
	       const allocator_type& __a = allocator_type())
      : _M_impl(__comp, _Node_allocator(__a)) { }
 8002fe2:	68fc      	ldr	r4, [r7, #12]
 8002fe4:	f107 0314 	add.w	r3, r7, #20
 8002fe8:	6879      	ldr	r1, [r7, #4]
 8002fea:	4618      	mov	r0, r3
 8002fec:	f001 f8f7 	bl	80041de <_ZNSaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEC1IS3_EERKSaIT_E>
 8002ff0:	f107 0314 	add.w	r3, r7, #20
 8002ff4:	461a      	mov	r2, r3
 8002ff6:	68b9      	ldr	r1, [r7, #8]
 8002ff8:	4620      	mov	r0, r4
 8002ffa:	f001 f909 	bl	8004210 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE13_Rb_tree_implIS7_Lb1EEC1ERKS7_OSaISt13_Rb_tree_nodeIS3_EE>
 8002ffe:	f107 0314 	add.w	r3, r7, #20
 8003002:	4618      	mov	r0, r3
 8003004:	f001 f8f8 	bl	80041f8 <_ZNSaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEED1Ev>
 8003008:	68fb      	ldr	r3, [r7, #12]
 800300a:	4618      	mov	r0, r3
 800300c:	371c      	adds	r7, #28
 800300e:	46bd      	mov	sp, r7
 8003010:	bd90      	pop	{r4, r7, pc}

08003012 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EED1Ev>:
      : _Rb_tree(std::move(__x), std::move(__a),
		 typename _Alloc_traits::is_always_equal{})
      { }
#endif

      ~_Rb_tree() _GLIBCXX_NOEXCEPT
 8003012:	b580      	push	{r7, lr}
 8003014:	b082      	sub	sp, #8
 8003016:	af00      	add	r7, sp, #0
 8003018:	6078      	str	r0, [r7, #4]
      { _M_erase(_M_begin()); }
 800301a:	6878      	ldr	r0, [r7, #4]
 800301c:	f001 f934 	bl	8004288 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_beginEv>
 8003020:	4603      	mov	r3, r0
 8003022:	4619      	mov	r1, r3
 8003024:	6878      	ldr	r0, [r7, #4]
 8003026:	f001 f910 	bl	800424a <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E>
 800302a:	687b      	ldr	r3, [r7, #4]
 800302c:	4618      	mov	r0, r3
 800302e:	f7ff ffc6 	bl	8002fbe <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE13_Rb_tree_implIS7_Lb1EED1Ev>
 8003032:	687b      	ldr	r3, [r7, #4]
 8003034:	4618      	mov	r0, r3
 8003036:	3708      	adds	r7, #8
 8003038:	46bd      	mov	sp, r7
 800303a:	bd80      	pop	{r7, pc}

0800303c <_ZNKSt16initializer_listISt4pairIKc10token_typeEE5beginEv>:
      constexpr size_type
      size() const noexcept { return _M_len; }

      // First element.
      constexpr const_iterator
      begin() const noexcept { return _M_array; }
 800303c:	b480      	push	{r7}
 800303e:	b083      	sub	sp, #12
 8003040:	af00      	add	r7, sp, #0
 8003042:	6078      	str	r0, [r7, #4]
 8003044:	687b      	ldr	r3, [r7, #4]
 8003046:	681b      	ldr	r3, [r3, #0]
 8003048:	4618      	mov	r0, r3
 800304a:	370c      	adds	r7, #12
 800304c:	46bd      	mov	sp, r7
 800304e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003052:	4770      	bx	lr

08003054 <_ZNKSt16initializer_listISt4pairIKc10token_typeEE3endEv>:

      // One past the last element.
      constexpr const_iterator
      end() const noexcept { return begin() + size(); }
 8003054:	b590      	push	{r4, r7, lr}
 8003056:	b083      	sub	sp, #12
 8003058:	af00      	add	r7, sp, #0
 800305a:	6078      	str	r0, [r7, #4]
 800305c:	6878      	ldr	r0, [r7, #4]
 800305e:	f7ff ffed 	bl	800303c <_ZNKSt16initializer_listISt4pairIKc10token_typeEE5beginEv>
 8003062:	4604      	mov	r4, r0
 8003064:	6878      	ldr	r0, [r7, #4]
 8003066:	f001 f91b 	bl	80042a0 <_ZNKSt16initializer_listISt4pairIKc10token_typeEE4sizeEv>
 800306a:	4603      	mov	r3, r0
 800306c:	005b      	lsls	r3, r3, #1
 800306e:	4423      	add	r3, r4
 8003070:	4618      	mov	r0, r3
 8003072:	370c      	adds	r7, #12
 8003074:	46bd      	mov	sp, r7
 8003076:	bd90      	pop	{r4, r7, pc}

08003078 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE22_M_insert_range_uniqueIPKS3_EENSt9enable_ifIXsrSt7is_sameIS3_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESG_SG_>:
	using __same_value_type
	  = is_same<value_type, typename iterator_traits<_Iter>::value_type>;

      template<typename _InputIterator>
	__enable_if_t<__same_value_type<_InputIterator>::value>
	_M_insert_range_unique(_InputIterator __first, _InputIterator __last)
 8003078:	b580      	push	{r7, lr}
 800307a:	b088      	sub	sp, #32
 800307c:	af00      	add	r7, sp, #0
 800307e:	60f8      	str	r0, [r7, #12]
 8003080:	60b9      	str	r1, [r7, #8]
 8003082:	607a      	str	r2, [r7, #4]
	{
	  _Alloc_node __an(*this);
 8003084:	f107 0314 	add.w	r3, r7, #20
 8003088:	68f9      	ldr	r1, [r7, #12]
 800308a:	4618      	mov	r0, r3
 800308c:	f001 f914 	bl	80042b8 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_Alloc_nodeC1ERS9_>
	  for (; __first != __last; ++__first)
 8003090:	68ba      	ldr	r2, [r7, #8]
 8003092:	687b      	ldr	r3, [r7, #4]
 8003094:	429a      	cmp	r2, r3
 8003096:	d017      	beq.n	80030c8 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE22_M_insert_range_uniqueIPKS3_EENSt9enable_ifIXsrSt7is_sameIS3_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESG_SG_+0x50>
	    _M_insert_unique_(end(), *__first, __an);
 8003098:	68f8      	ldr	r0, [r7, #12]
 800309a:	f001 f91c 	bl	80042d6 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE3endEv>
 800309e:	4603      	mov	r3, r0
 80030a0:	61fb      	str	r3, [r7, #28]
 80030a2:	f107 021c 	add.w	r2, r7, #28
 80030a6:	f107 0318 	add.w	r3, r7, #24
 80030aa:	4611      	mov	r1, r2
 80030ac:	4618      	mov	r0, r3
 80030ae:	f001 f923 	bl	80042f8 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKc10token_typeEEC1ERKSt17_Rb_tree_iteratorIS3_E>
 80030b2:	f107 0314 	add.w	r3, r7, #20
 80030b6:	68ba      	ldr	r2, [r7, #8]
 80030b8:	69b9      	ldr	r1, [r7, #24]
 80030ba:	68f8      	ldr	r0, [r7, #12]
 80030bc:	f001 f92c 	bl	8004318 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE17_M_insert_unique_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_ESt23_Rb_tree_const_iteratorIS3_EOT_RT0_>
	  for (; __first != __last; ++__first)
 80030c0:	68bb      	ldr	r3, [r7, #8]
 80030c2:	3302      	adds	r3, #2
 80030c4:	60bb      	str	r3, [r7, #8]
 80030c6:	e7e3      	b.n	8003090 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE22_M_insert_range_uniqueIPKS3_EENSt9enable_ifIXsrSt7is_sameIS3_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESG_SG_+0x18>
	}
 80030c8:	bf00      	nop
 80030ca:	3720      	adds	r7, #32
 80030cc:	46bd      	mov	sp, r7
 80030ce:	bd80      	pop	{r7, pc}

080030d0 <_ZN9__gnu_cxx13new_allocatorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>:
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 80030d0:	b480      	push	{r7}
 80030d2:	b083      	sub	sp, #12
 80030d4:	af00      	add	r7, sp, #0
 80030d6:	6078      	str	r0, [r7, #4]
 80030d8:	687b      	ldr	r3, [r7, #4]
 80030da:	4618      	mov	r0, r3
 80030dc:	370c      	adds	r7, #12
 80030de:	46bd      	mov	sp, r7
 80030e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80030e4:	4770      	bx	lr

080030e6 <_ZN9__gnu_cxx13new_allocatorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>:
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 80030e6:	b480      	push	{r7}
 80030e8:	b083      	sub	sp, #12
 80030ea:	af00      	add	r7, sp, #0
 80030ec:	6078      	str	r0, [r7, #4]
 80030ee:	687b      	ldr	r3, [r7, #4]
 80030f0:	4618      	mov	r0, r3
 80030f2:	370c      	adds	r7, #12
 80030f4:	46bd      	mov	sp, r7
 80030f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80030fa:	4770      	bx	lr

080030fc <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1ERKS9_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
 80030fc:	b580      	push	{r7, lr}
 80030fe:	b082      	sub	sp, #8
 8003100:	af00      	add	r7, sp, #0
 8003102:	6078      	str	r0, [r7, #4]
 8003104:	6039      	str	r1, [r7, #0]
      : __allocator_base<_Tp>(__a) { }
 8003106:	6839      	ldr	r1, [r7, #0]
 8003108:	6878      	ldr	r0, [r7, #4]
 800310a:	f001 f938 	bl	800437e <_ZN9__gnu_cxx13new_allocatorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1ERKSB_>
 800310e:	687b      	ldr	r3, [r7, #4]
 8003110:	4618      	mov	r0, r3
 8003112:	3708      	adds	r7, #8
 8003114:	46bd      	mov	sp, r7
 8003116:	bd80      	pop	{r7, pc}

08003118 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE13_Rb_tree_implISD_Lb1EED1Ev>:
	struct _Rb_tree_impl
 8003118:	b580      	push	{r7, lr}
 800311a:	b082      	sub	sp, #8
 800311c:	af00      	add	r7, sp, #0
 800311e:	6078      	str	r0, [r7, #4]
 8003120:	6878      	ldr	r0, [r7, #4]
 8003122:	f001 f945 	bl	80043b0 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEED1Ev>
 8003126:	687b      	ldr	r3, [r7, #4]
 8003128:	4618      	mov	r0, r3
 800312a:	3708      	adds	r7, #8
 800312c:	46bd      	mov	sp, r7
 800312e:	bd80      	pop	{r7, pc}

08003130 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EEC1ERKSD_RKSE_>:
      _Rb_tree(const _Compare& __comp,
 8003130:	b590      	push	{r4, r7, lr}
 8003132:	b087      	sub	sp, #28
 8003134:	af00      	add	r7, sp, #0
 8003136:	60f8      	str	r0, [r7, #12]
 8003138:	60b9      	str	r1, [r7, #8]
 800313a:	607a      	str	r2, [r7, #4]
      : _M_impl(__comp, _Node_allocator(__a)) { }
 800313c:	68fc      	ldr	r4, [r7, #12]
 800313e:	f107 0314 	add.w	r3, r7, #20
 8003142:	6879      	ldr	r1, [r7, #4]
 8003144:	4618      	mov	r0, r3
 8003146:	f001 f926 	bl	8004396 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEC1IS9_EERKSaIT_E>
 800314a:	f107 0314 	add.w	r3, r7, #20
 800314e:	461a      	mov	r2, r3
 8003150:	68b9      	ldr	r1, [r7, #8]
 8003152:	4620      	mov	r0, r4
 8003154:	f001 f938 	bl	80043c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE13_Rb_tree_implISD_Lb1EEC1ERKSD_OSaISt13_Rb_tree_nodeIS9_EE>
 8003158:	f107 0314 	add.w	r3, r7, #20
 800315c:	4618      	mov	r0, r3
 800315e:	f001 f927 	bl	80043b0 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEED1Ev>
 8003162:	68fb      	ldr	r3, [r7, #12]
 8003164:	4618      	mov	r0, r3
 8003166:	371c      	adds	r7, #28
 8003168:	46bd      	mov	sp, r7
 800316a:	bd90      	pop	{r4, r7, pc}

0800316c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EED1Ev>:
      ~_Rb_tree() _GLIBCXX_NOEXCEPT
 800316c:	b580      	push	{r7, lr}
 800316e:	b082      	sub	sp, #8
 8003170:	af00      	add	r7, sp, #0
 8003172:	6078      	str	r0, [r7, #4]
      { _M_erase(_M_begin()); }
 8003174:	6878      	ldr	r0, [r7, #4]
 8003176:	f001 f963 	bl	8004440 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_beginEv>
 800317a:	4603      	mov	r3, r0
 800317c:	4619      	mov	r1, r3
 800317e:	6878      	ldr	r0, [r7, #4]
 8003180:	f001 f93f 	bl	8004402 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_eraseEPSt13_Rb_tree_nodeIS9_E>
 8003184:	687b      	ldr	r3, [r7, #4]
 8003186:	4618      	mov	r0, r3
 8003188:	f7ff ffc6 	bl	8003118 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE13_Rb_tree_implISD_Lb1EED1Ev>
 800318c:	687b      	ldr	r3, [r7, #4]
 800318e:	4618      	mov	r0, r3
 8003190:	3708      	adds	r7, #8
 8003192:	46bd      	mov	sp, r7
 8003194:	bd80      	pop	{r7, pc}

08003196 <_ZNKSt16initializer_listISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE5beginEv>:
      begin() const noexcept { return _M_array; }
 8003196:	b480      	push	{r7}
 8003198:	b083      	sub	sp, #12
 800319a:	af00      	add	r7, sp, #0
 800319c:	6078      	str	r0, [r7, #4]
 800319e:	687b      	ldr	r3, [r7, #4]
 80031a0:	681b      	ldr	r3, [r3, #0]
 80031a2:	4618      	mov	r0, r3
 80031a4:	370c      	adds	r7, #12
 80031a6:	46bd      	mov	sp, r7
 80031a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80031ac:	4770      	bx	lr

080031ae <_ZNKSt16initializer_listISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE3endEv>:
      end() const noexcept { return begin() + size(); }
 80031ae:	b590      	push	{r4, r7, lr}
 80031b0:	b083      	sub	sp, #12
 80031b2:	af00      	add	r7, sp, #0
 80031b4:	6078      	str	r0, [r7, #4]
 80031b6:	6878      	ldr	r0, [r7, #4]
 80031b8:	f7ff ffed 	bl	8003196 <_ZNKSt16initializer_listISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE5beginEv>
 80031bc:	4604      	mov	r4, r0
 80031be:	6878      	ldr	r0, [r7, #4]
 80031c0:	f001 f94a 	bl	8004458 <_ZNKSt16initializer_listISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE4sizeEv>
 80031c4:	4602      	mov	r2, r0
 80031c6:	4613      	mov	r3, r2
 80031c8:	00db      	lsls	r3, r3, #3
 80031ca:	1a9b      	subs	r3, r3, r2
 80031cc:	009b      	lsls	r3, r3, #2
 80031ce:	4423      	add	r3, r4
 80031d0:	4618      	mov	r0, r3
 80031d2:	370c      	adds	r7, #12
 80031d4:	46bd      	mov	sp, r7
 80031d6:	bd90      	pop	{r4, r7, pc}

080031d8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE22_M_insert_range_uniqueIPKS9_EENSt9enable_ifIXsrSt7is_sameIS9_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESM_SM_>:
	_M_insert_range_unique(_InputIterator __first, _InputIterator __last)
 80031d8:	b580      	push	{r7, lr}
 80031da:	b088      	sub	sp, #32
 80031dc:	af00      	add	r7, sp, #0
 80031de:	60f8      	str	r0, [r7, #12]
 80031e0:	60b9      	str	r1, [r7, #8]
 80031e2:	607a      	str	r2, [r7, #4]
	  _Alloc_node __an(*this);
 80031e4:	f107 0314 	add.w	r3, r7, #20
 80031e8:	68f9      	ldr	r1, [r7, #12]
 80031ea:	4618      	mov	r0, r3
 80031ec:	f001 f940 	bl	8004470 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_Alloc_nodeC1ERSF_>
	  for (; __first != __last; ++__first)
 80031f0:	68ba      	ldr	r2, [r7, #8]
 80031f2:	687b      	ldr	r3, [r7, #4]
 80031f4:	429a      	cmp	r2, r3
 80031f6:	d017      	beq.n	8003228 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE22_M_insert_range_uniqueIPKS9_EENSt9enable_ifIXsrSt7is_sameIS9_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESM_SM_+0x50>
	    _M_insert_unique_(end(), *__first, __an);
 80031f8:	68f8      	ldr	r0, [r7, #12]
 80031fa:	f001 f948 	bl	800448e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE3endEv>
 80031fe:	4603      	mov	r3, r0
 8003200:	61fb      	str	r3, [r7, #28]
 8003202:	f107 021c 	add.w	r2, r7, #28
 8003206:	f107 0318 	add.w	r3, r7, #24
 800320a:	4611      	mov	r1, r2
 800320c:	4618      	mov	r0, r3
 800320e:	f001 f94f 	bl	80044b0 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1ERKSt17_Rb_tree_iteratorIS9_E>
 8003212:	f107 0314 	add.w	r3, r7, #20
 8003216:	68ba      	ldr	r2, [r7, #8]
 8003218:	69b9      	ldr	r1, [r7, #24]
 800321a:	68f8      	ldr	r0, [r7, #12]
 800321c:	f001 f958 	bl	80044d0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE17_M_insert_unique_IRKS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_ESt23_Rb_tree_const_iteratorIS9_EOT_RT0_>
	  for (; __first != __last; ++__first)
 8003220:	68bb      	ldr	r3, [r7, #8]
 8003222:	331c      	adds	r3, #28
 8003224:	60bb      	str	r3, [r7, #8]
 8003226:	e7e3      	b.n	80031f0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE22_M_insert_range_uniqueIPKS9_EENSt9enable_ifIXsrSt7is_sameIS9_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESM_SM_+0x18>
	}
 8003228:	bf00      	nop
 800322a:	3720      	adds	r7, #32
 800322c:	46bd      	mov	sp, r7
 800322e:	bd80      	pop	{r7, pc}

08003230 <_ZN9__gnu_cxx13new_allocatorISt4pairIKc12double_tokenEEC1Ev>:
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 8003230:	b480      	push	{r7}
 8003232:	b083      	sub	sp, #12
 8003234:	af00      	add	r7, sp, #0
 8003236:	6078      	str	r0, [r7, #4]
 8003238:	687b      	ldr	r3, [r7, #4]
 800323a:	4618      	mov	r0, r3
 800323c:	370c      	adds	r7, #12
 800323e:	46bd      	mov	sp, r7
 8003240:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003244:	4770      	bx	lr

08003246 <_ZN9__gnu_cxx13new_allocatorISt4pairIKc12double_tokenEED1Ev>:
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 8003246:	b480      	push	{r7}
 8003248:	b083      	sub	sp, #12
 800324a:	af00      	add	r7, sp, #0
 800324c:	6078      	str	r0, [r7, #4]
 800324e:	687b      	ldr	r3, [r7, #4]
 8003250:	4618      	mov	r0, r3
 8003252:	370c      	adds	r7, #12
 8003254:	46bd      	mov	sp, r7
 8003256:	f85d 7b04 	ldr.w	r7, [sp], #4
 800325a:	4770      	bx	lr

0800325c <_ZNSaISt4pairIKc12double_tokenEEC1ERKS3_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
 800325c:	b580      	push	{r7, lr}
 800325e:	b082      	sub	sp, #8
 8003260:	af00      	add	r7, sp, #0
 8003262:	6078      	str	r0, [r7, #4]
 8003264:	6039      	str	r1, [r7, #0]
      : __allocator_base<_Tp>(__a) { }
 8003266:	6839      	ldr	r1, [r7, #0]
 8003268:	6878      	ldr	r0, [r7, #4]
 800326a:	f001 f964 	bl	8004536 <_ZN9__gnu_cxx13new_allocatorISt4pairIKc12double_tokenEEC1ERKS5_>
 800326e:	687b      	ldr	r3, [r7, #4]
 8003270:	4618      	mov	r0, r3
 8003272:	3708      	adds	r7, #8
 8003274:	46bd      	mov	sp, r7
 8003276:	bd80      	pop	{r7, pc}

08003278 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE13_Rb_tree_implIS7_Lb1EED1Ev>:
	struct _Rb_tree_impl
 8003278:	b580      	push	{r7, lr}
 800327a:	b082      	sub	sp, #8
 800327c:	af00      	add	r7, sp, #0
 800327e:	6078      	str	r0, [r7, #4]
 8003280:	6878      	ldr	r0, [r7, #4]
 8003282:	f001 f971 	bl	8004568 <_ZNSaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEED1Ev>
 8003286:	687b      	ldr	r3, [r7, #4]
 8003288:	4618      	mov	r0, r3
 800328a:	3708      	adds	r7, #8
 800328c:	46bd      	mov	sp, r7
 800328e:	bd80      	pop	{r7, pc}

08003290 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EEC1ERKS7_RKS8_>:
      _Rb_tree(const _Compare& __comp,
 8003290:	b590      	push	{r4, r7, lr}
 8003292:	b087      	sub	sp, #28
 8003294:	af00      	add	r7, sp, #0
 8003296:	60f8      	str	r0, [r7, #12]
 8003298:	60b9      	str	r1, [r7, #8]
 800329a:	607a      	str	r2, [r7, #4]
      : _M_impl(__comp, _Node_allocator(__a)) { }
 800329c:	68fc      	ldr	r4, [r7, #12]
 800329e:	f107 0314 	add.w	r3, r7, #20
 80032a2:	6879      	ldr	r1, [r7, #4]
 80032a4:	4618      	mov	r0, r3
 80032a6:	f001 f952 	bl	800454e <_ZNSaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEC1IS3_EERKSaIT_E>
 80032aa:	f107 0314 	add.w	r3, r7, #20
 80032ae:	461a      	mov	r2, r3
 80032b0:	68b9      	ldr	r1, [r7, #8]
 80032b2:	4620      	mov	r0, r4
 80032b4:	f001 f964 	bl	8004580 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE13_Rb_tree_implIS7_Lb1EEC1ERKS7_OSaISt13_Rb_tree_nodeIS3_EE>
 80032b8:	f107 0314 	add.w	r3, r7, #20
 80032bc:	4618      	mov	r0, r3
 80032be:	f001 f953 	bl	8004568 <_ZNSaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEED1Ev>
 80032c2:	68fb      	ldr	r3, [r7, #12]
 80032c4:	4618      	mov	r0, r3
 80032c6:	371c      	adds	r7, #28
 80032c8:	46bd      	mov	sp, r7
 80032ca:	bd90      	pop	{r4, r7, pc}

080032cc <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EED1Ev>:
      ~_Rb_tree() _GLIBCXX_NOEXCEPT
 80032cc:	b580      	push	{r7, lr}
 80032ce:	b082      	sub	sp, #8
 80032d0:	af00      	add	r7, sp, #0
 80032d2:	6078      	str	r0, [r7, #4]
      { _M_erase(_M_begin()); }
 80032d4:	6878      	ldr	r0, [r7, #4]
 80032d6:	f001 f98f 	bl	80045f8 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_beginEv>
 80032da:	4603      	mov	r3, r0
 80032dc:	4619      	mov	r1, r3
 80032de:	6878      	ldr	r0, [r7, #4]
 80032e0:	f001 f96b 	bl	80045ba <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E>
 80032e4:	687b      	ldr	r3, [r7, #4]
 80032e6:	4618      	mov	r0, r3
 80032e8:	f7ff ffc6 	bl	8003278 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE13_Rb_tree_implIS7_Lb1EED1Ev>
 80032ec:	687b      	ldr	r3, [r7, #4]
 80032ee:	4618      	mov	r0, r3
 80032f0:	3708      	adds	r7, #8
 80032f2:	46bd      	mov	sp, r7
 80032f4:	bd80      	pop	{r7, pc}

080032f6 <_ZNKSt16initializer_listISt4pairIKc12double_tokenEE5beginEv>:
      begin() const noexcept { return _M_array; }
 80032f6:	b480      	push	{r7}
 80032f8:	b083      	sub	sp, #12
 80032fa:	af00      	add	r7, sp, #0
 80032fc:	6078      	str	r0, [r7, #4]
 80032fe:	687b      	ldr	r3, [r7, #4]
 8003300:	681b      	ldr	r3, [r3, #0]
 8003302:	4618      	mov	r0, r3
 8003304:	370c      	adds	r7, #12
 8003306:	46bd      	mov	sp, r7
 8003308:	f85d 7b04 	ldr.w	r7, [sp], #4
 800330c:	4770      	bx	lr

0800330e <_ZNKSt16initializer_listISt4pairIKc12double_tokenEE3endEv>:
      end() const noexcept { return begin() + size(); }
 800330e:	b590      	push	{r4, r7, lr}
 8003310:	b083      	sub	sp, #12
 8003312:	af00      	add	r7, sp, #0
 8003314:	6078      	str	r0, [r7, #4]
 8003316:	6878      	ldr	r0, [r7, #4]
 8003318:	f7ff ffed 	bl	80032f6 <_ZNKSt16initializer_listISt4pairIKc12double_tokenEE5beginEv>
 800331c:	4604      	mov	r4, r0
 800331e:	6878      	ldr	r0, [r7, #4]
 8003320:	f001 f976 	bl	8004610 <_ZNKSt16initializer_listISt4pairIKc12double_tokenEE4sizeEv>
 8003324:	4602      	mov	r2, r0
 8003326:	4613      	mov	r3, r2
 8003328:	005b      	lsls	r3, r3, #1
 800332a:	4413      	add	r3, r2
 800332c:	4423      	add	r3, r4
 800332e:	4618      	mov	r0, r3
 8003330:	370c      	adds	r7, #12
 8003332:	46bd      	mov	sp, r7
 8003334:	bd90      	pop	{r4, r7, pc}

08003336 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE22_M_insert_range_uniqueIPKS3_EENSt9enable_ifIXsrSt7is_sameIS3_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESG_SG_>:
	_M_insert_range_unique(_InputIterator __first, _InputIterator __last)
 8003336:	b580      	push	{r7, lr}
 8003338:	b088      	sub	sp, #32
 800333a:	af00      	add	r7, sp, #0
 800333c:	60f8      	str	r0, [r7, #12]
 800333e:	60b9      	str	r1, [r7, #8]
 8003340:	607a      	str	r2, [r7, #4]
	  _Alloc_node __an(*this);
 8003342:	f107 0314 	add.w	r3, r7, #20
 8003346:	68f9      	ldr	r1, [r7, #12]
 8003348:	4618      	mov	r0, r3
 800334a:	f001 f96d 	bl	8004628 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_Alloc_nodeC1ERS9_>
	  for (; __first != __last; ++__first)
 800334e:	68ba      	ldr	r2, [r7, #8]
 8003350:	687b      	ldr	r3, [r7, #4]
 8003352:	429a      	cmp	r2, r3
 8003354:	d017      	beq.n	8003386 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE22_M_insert_range_uniqueIPKS3_EENSt9enable_ifIXsrSt7is_sameIS3_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESG_SG_+0x50>
	    _M_insert_unique_(end(), *__first, __an);
 8003356:	68f8      	ldr	r0, [r7, #12]
 8003358:	f001 f975 	bl	8004646 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE3endEv>
 800335c:	4603      	mov	r3, r0
 800335e:	61fb      	str	r3, [r7, #28]
 8003360:	f107 021c 	add.w	r2, r7, #28
 8003364:	f107 0318 	add.w	r3, r7, #24
 8003368:	4611      	mov	r1, r2
 800336a:	4618      	mov	r0, r3
 800336c:	f001 f97c 	bl	8004668 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEEC1ERKSt17_Rb_tree_iteratorIS3_E>
 8003370:	f107 0314 	add.w	r3, r7, #20
 8003374:	68ba      	ldr	r2, [r7, #8]
 8003376:	69b9      	ldr	r1, [r7, #24]
 8003378:	68f8      	ldr	r0, [r7, #12]
 800337a:	f001 f985 	bl	8004688 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE17_M_insert_unique_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_ESt23_Rb_tree_const_iteratorIS3_EOT_RT0_>
	  for (; __first != __last; ++__first)
 800337e:	68bb      	ldr	r3, [r7, #8]
 8003380:	3303      	adds	r3, #3
 8003382:	60bb      	str	r3, [r7, #8]
 8003384:	e7e3      	b.n	800334e <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE22_M_insert_range_uniqueIPKS3_EENSt9enable_ifIXsrSt7is_sameIS3_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESG_SG_+0x18>
	}
 8003386:	bf00      	nop
 8003388:	3720      	adds	r7, #32
 800338a:	46bd      	mov	sp, r7
 800338c:	bd80      	pop	{r7, pc}

0800338e <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE8_M_resetEv>:
      void _M_reset()
 800338e:	b580      	push	{r7, lr}
 8003390:	b082      	sub	sp, #8
 8003392:	af00      	add	r7, sp, #0
 8003394:	6078      	str	r0, [r7, #4]
	_M_reset_impl();
 8003396:	6878      	ldr	r0, [r7, #4]
 8003398:	f001 fb9a 	bl	8004ad0 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE13_M_reset_implEv>
	_M_index = variant_npos;
 800339c:	687b      	ldr	r3, [r7, #4]
 800339e:	22ff      	movs	r2, #255	; 0xff
 80033a0:	761a      	strb	r2, [r3, #24]
      }
 80033a2:	bf00      	nop
 80033a4:	3708      	adds	r7, #8
 80033a6:	46bd      	mov	sp, r7
 80033a8:	bd80      	pop	{r7, pc}

080033aa <_ZNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1Ev>:
      constexpr _Variadic_union() : _M_rest() { }
 80033aa:	b580      	push	{r7, lr}
 80033ac:	b082      	sub	sp, #8
 80033ae:	af00      	add	r7, sp, #0
 80033b0:	6078      	str	r0, [r7, #4]
 80033b2:	687b      	ldr	r3, [r7, #4]
 80033b4:	4618      	mov	r0, r3
 80033b6:	f001 fb9d 	bl	8004af4 <_ZNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1Ev>
 80033ba:	687b      	ldr	r3, [r7, #4]
 80033bc:	4618      	mov	r0, r3
 80033be:	3708      	adds	r7, #8
 80033c0:	46bd      	mov	sp, r7
 80033c2:	bd80      	pop	{r7, pc}

080033c4 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1Ev>:
      constexpr _Variant_storage() : _M_index(variant_npos) { }
 80033c4:	b580      	push	{r7, lr}
 80033c6:	b082      	sub	sp, #8
 80033c8:	af00      	add	r7, sp, #0
 80033ca:	6078      	str	r0, [r7, #4]
 80033cc:	687b      	ldr	r3, [r7, #4]
 80033ce:	4618      	mov	r0, r3
 80033d0:	f7ff ffeb 	bl	80033aa <_ZNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1Ev>
 80033d4:	687b      	ldr	r3, [r7, #4]
 80033d6:	22ff      	movs	r2, #255	; 0xff
 80033d8:	761a      	strb	r2, [r3, #24]
 80033da:	687b      	ldr	r3, [r7, #4]
 80033dc:	4618      	mov	r0, r3
 80033de:	3708      	adds	r7, #8
 80033e0:	46bd      	mov	sp, r7
 80033e2:	bd80      	pop	{r7, pc}

080033e4 <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEERKNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbS5_S9_EEEEDcOT0_>:
    __variant_cast(_Tp&& __rhs)
 80033e4:	b480      	push	{r7}
 80033e6:	b083      	sub	sp, #12
 80033e8:	af00      	add	r7, sp, #0
 80033ea:	6078      	str	r0, [r7, #4]
	    return static_cast<const variant<_Types...>&>(__rhs);
 80033ec:	687b      	ldr	r3, [r7, #4]
    }
 80033ee:	4618      	mov	r0, r3
 80033f0:	370c      	adds	r7, #12
 80033f2:	46bd      	mov	sp, r7
 80033f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80033f8:	4770      	bx	lr

080033fa <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESV_EEDcSL_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 80033fa:	b580      	push	{r7, lr}
 80033fc:	b082      	sub	sp, #8
 80033fe:	af00      	add	r7, sp, #0
 8003400:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8003402:	6878      	ldr	r0, [r7, #4]
 8003404:	f000 fd89 	bl	8003f1a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8003408:	4603      	mov	r3, r0
 800340a:	4618      	mov	r0, r3
 800340c:	f7ff fa46 	bl	800289c <_ZNSt8__detail9__variant5__getILj0ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8003410:	4603      	mov	r3, r0
	}
 8003412:	4618      	mov	r0, r3
 8003414:	3708      	adds	r7, #8
 8003416:	46bd      	mov	sp, r7
 8003418:	bd80      	pop	{r7, pc}

0800341a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESR_SV_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 800341a:	b5b0      	push	{r4, r5, r7, lr}
 800341c:	b082      	sub	sp, #8
 800341e:	af00      	add	r7, sp, #0
 8003420:	6078      	str	r0, [r7, #4]
 8003422:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8003424:	6878      	ldr	r0, [r7, #4]
 8003426:	f001 fb7d 	bl	8004b24 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 800342a:	4604      	mov	r4, r0
 800342c:	6838      	ldr	r0, [r7, #0]
 800342e:	f000 fd74 	bl	8003f1a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8003432:	4603      	mov	r3, r0
 8003434:	4618      	mov	r0, r3
 8003436:	f7ff ffe0 	bl	80033fa <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESV_EEDcSL_>
 800343a:	4603      	mov	r3, r0
 800343c:	4619      	mov	r1, r3
 800343e:	4620      	mov	r0, r4
 8003440:	f001 fb7b 	bl	8004b3a <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_JRKiEENSt15__invoke_resultISM_JDpT0_EE4typeESN_DpOSS_>
		std::forward<_Variants>(__vars))...);
 8003444:	462b      	mov	r3, r5
      }
 8003446:	4618      	mov	r0, r3
 8003448:	3708      	adds	r7, #8
 800344a:	46bd      	mov	sp, r7
 800344c:	bdb0      	pop	{r4, r5, r7, pc}

0800344e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESR_SV_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800344e:	b5b0      	push	{r4, r5, r7, lr}
 8003450:	b082      	sub	sp, #8
 8003452:	af00      	add	r7, sp, #0
 8003454:	6078      	str	r0, [r7, #4]
 8003456:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8003458:	6878      	ldr	r0, [r7, #4]
 800345a:	f001 fb63 	bl	8004b24 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 800345e:	4604      	mov	r4, r0
 8003460:	6838      	ldr	r0, [r7, #0]
 8003462:	f000 fd5a 	bl	8003f1a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8003466:	4603      	mov	r3, r0
 8003468:	4619      	mov	r1, r3
 800346a:	4620      	mov	r0, r4
 800346c:	f7ff ffd5 	bl	800341a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESR_SV_>
				   std::forward<_Variants>(__vars)...);
 8003470:	462b      	mov	r3, r5
      }
 8003472:	4618      	mov	r0, r3
 8003474:	3708      	adds	r7, #8
 8003476:	46bd      	mov	sp, r7
 8003478:	bdb0      	pop	{r4, r5, r7, pc}

0800347a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj0EEEE14__visit_invokeESR_SV_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800347a:	b5b0      	push	{r4, r5, r7, lr}
 800347c:	b082      	sub	sp, #8
 800347e:	af00      	add	r7, sp, #0
 8003480:	6078      	str	r0, [r7, #4]
 8003482:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8003484:	6878      	ldr	r0, [r7, #4]
 8003486:	f001 fb4d 	bl	8004b24 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 800348a:	4604      	mov	r4, r0
 800348c:	6838      	ldr	r0, [r7, #0]
 800348e:	f000 fd44 	bl	8003f1a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8003492:	4603      	mov	r3, r0
 8003494:	4619      	mov	r1, r3
 8003496:	4620      	mov	r0, r4
 8003498:	f7ff ffd9 	bl	800344e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESR_SV_>
				   std::forward<_Variants>(__vars)...);
 800349c:	462b      	mov	r3, r5
      }
 800349e:	4618      	mov	r0, r3
 80034a0:	3708      	adds	r7, #8
 80034a2:	46bd      	mov	sp, r7
 80034a4:	bdb0      	pop	{r4, r5, r7, pc}

080034a6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESV_EEDcSL_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 80034a6:	b580      	push	{r7, lr}
 80034a8:	b082      	sub	sp, #8
 80034aa:	af00      	add	r7, sp, #0
 80034ac:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 80034ae:	6878      	ldr	r0, [r7, #4]
 80034b0:	f000 fd33 	bl	8003f1a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 80034b4:	4603      	mov	r3, r0
 80034b6:	4618      	mov	r0, r3
 80034b8:	f7ff fa7c 	bl	80029b4 <_ZNSt8__detail9__variant5__getILj1ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 80034bc:	4603      	mov	r3, r0
	}
 80034be:	4618      	mov	r0, r3
 80034c0:	3708      	adds	r7, #8
 80034c2:	46bd      	mov	sp, r7
 80034c4:	bd80      	pop	{r7, pc}

080034c6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESR_SV_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 80034c6:	b5b0      	push	{r4, r5, r7, lr}
 80034c8:	b082      	sub	sp, #8
 80034ca:	af00      	add	r7, sp, #0
 80034cc:	6078      	str	r0, [r7, #4]
 80034ce:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 80034d0:	6878      	ldr	r0, [r7, #4]
 80034d2:	f001 fb27 	bl	8004b24 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 80034d6:	4604      	mov	r4, r0
 80034d8:	6838      	ldr	r0, [r7, #0]
 80034da:	f000 fd1e 	bl	8003f1a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 80034de:	4603      	mov	r3, r0
 80034e0:	4618      	mov	r0, r3
 80034e2:	f7ff ffe0 	bl	80034a6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESV_EEDcSL_>
 80034e6:	4603      	mov	r3, r0
 80034e8:	4619      	mov	r1, r3
 80034ea:	4620      	mov	r0, r4
 80034ec:	f001 fb3c 	bl	8004b68 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_JRKfEENSt15__invoke_resultISM_JDpT0_EE4typeESN_DpOSS_>
		std::forward<_Variants>(__vars))...);
 80034f0:	462b      	mov	r3, r5
      }
 80034f2:	4618      	mov	r0, r3
 80034f4:	3708      	adds	r7, #8
 80034f6:	46bd      	mov	sp, r7
 80034f8:	bdb0      	pop	{r4, r5, r7, pc}

080034fa <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESR_SV_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80034fa:	b5b0      	push	{r4, r5, r7, lr}
 80034fc:	b082      	sub	sp, #8
 80034fe:	af00      	add	r7, sp, #0
 8003500:	6078      	str	r0, [r7, #4]
 8003502:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8003504:	6878      	ldr	r0, [r7, #4]
 8003506:	f001 fb0d 	bl	8004b24 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 800350a:	4604      	mov	r4, r0
 800350c:	6838      	ldr	r0, [r7, #0]
 800350e:	f000 fd04 	bl	8003f1a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8003512:	4603      	mov	r3, r0
 8003514:	4619      	mov	r1, r3
 8003516:	4620      	mov	r0, r4
 8003518:	f7ff ffd5 	bl	80034c6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESR_SV_>
				   std::forward<_Variants>(__vars)...);
 800351c:	462b      	mov	r3, r5
      }
 800351e:	4618      	mov	r0, r3
 8003520:	3708      	adds	r7, #8
 8003522:	46bd      	mov	sp, r7
 8003524:	bdb0      	pop	{r4, r5, r7, pc}

08003526 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj1EEEE14__visit_invokeESR_SV_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8003526:	b5b0      	push	{r4, r5, r7, lr}
 8003528:	b082      	sub	sp, #8
 800352a:	af00      	add	r7, sp, #0
 800352c:	6078      	str	r0, [r7, #4]
 800352e:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8003530:	6878      	ldr	r0, [r7, #4]
 8003532:	f001 faf7 	bl	8004b24 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8003536:	4604      	mov	r4, r0
 8003538:	6838      	ldr	r0, [r7, #0]
 800353a:	f000 fcee 	bl	8003f1a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800353e:	4603      	mov	r3, r0
 8003540:	4619      	mov	r1, r3
 8003542:	4620      	mov	r0, r4
 8003544:	f7ff ffd9 	bl	80034fa <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESR_SV_>
				   std::forward<_Variants>(__vars)...);
 8003548:	462b      	mov	r3, r5
      }
 800354a:	4618      	mov	r0, r3
 800354c:	3708      	adds	r7, #8
 800354e:	46bd      	mov	sp, r7
 8003550:	bdb0      	pop	{r4, r5, r7, pc}

08003552 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESV_EEDcSL_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8003552:	b580      	push	{r7, lr}
 8003554:	b082      	sub	sp, #8
 8003556:	af00      	add	r7, sp, #0
 8003558:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 800355a:	6878      	ldr	r0, [r7, #4]
 800355c:	f000 fcdd 	bl	8003f1a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8003560:	4603      	mov	r3, r0
 8003562:	4618      	mov	r0, r3
 8003564:	f7ff fac4 	bl	8002af0 <_ZNSt8__detail9__variant5__getILj2ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8003568:	4603      	mov	r3, r0
	}
 800356a:	4618      	mov	r0, r3
 800356c:	3708      	adds	r7, #8
 800356e:	46bd      	mov	sp, r7
 8003570:	bd80      	pop	{r7, pc}

08003572 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESR_SV_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8003572:	b5b0      	push	{r4, r5, r7, lr}
 8003574:	b082      	sub	sp, #8
 8003576:	af00      	add	r7, sp, #0
 8003578:	6078      	str	r0, [r7, #4]
 800357a:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 800357c:	6878      	ldr	r0, [r7, #4]
 800357e:	f001 fad1 	bl	8004b24 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8003582:	4604      	mov	r4, r0
 8003584:	6838      	ldr	r0, [r7, #0]
 8003586:	f000 fcc8 	bl	8003f1a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800358a:	4603      	mov	r3, r0
 800358c:	4618      	mov	r0, r3
 800358e:	f7ff ffe0 	bl	8003552 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESV_EEDcSL_>
 8003592:	4603      	mov	r3, r0
 8003594:	4619      	mov	r1, r3
 8003596:	4620      	mov	r0, r4
 8003598:	f001 fafd 	bl	8004b96 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_JRKbEENSt15__invoke_resultISM_JDpT0_EE4typeESN_DpOSS_>
		std::forward<_Variants>(__vars))...);
 800359c:	462b      	mov	r3, r5
      }
 800359e:	4618      	mov	r0, r3
 80035a0:	3708      	adds	r7, #8
 80035a2:	46bd      	mov	sp, r7
 80035a4:	bdb0      	pop	{r4, r5, r7, pc}

080035a6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESR_SV_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80035a6:	b5b0      	push	{r4, r5, r7, lr}
 80035a8:	b082      	sub	sp, #8
 80035aa:	af00      	add	r7, sp, #0
 80035ac:	6078      	str	r0, [r7, #4]
 80035ae:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 80035b0:	6878      	ldr	r0, [r7, #4]
 80035b2:	f001 fab7 	bl	8004b24 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 80035b6:	4604      	mov	r4, r0
 80035b8:	6838      	ldr	r0, [r7, #0]
 80035ba:	f000 fcae 	bl	8003f1a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 80035be:	4603      	mov	r3, r0
 80035c0:	4619      	mov	r1, r3
 80035c2:	4620      	mov	r0, r4
 80035c4:	f7ff ffd5 	bl	8003572 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESR_SV_>
				   std::forward<_Variants>(__vars)...);
 80035c8:	462b      	mov	r3, r5
      }
 80035ca:	4618      	mov	r0, r3
 80035cc:	3708      	adds	r7, #8
 80035ce:	46bd      	mov	sp, r7
 80035d0:	bdb0      	pop	{r4, r5, r7, pc}

080035d2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj2EEEE14__visit_invokeESR_SV_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80035d2:	b5b0      	push	{r4, r5, r7, lr}
 80035d4:	b082      	sub	sp, #8
 80035d6:	af00      	add	r7, sp, #0
 80035d8:	6078      	str	r0, [r7, #4]
 80035da:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 80035dc:	6878      	ldr	r0, [r7, #4]
 80035de:	f001 faa1 	bl	8004b24 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 80035e2:	4604      	mov	r4, r0
 80035e4:	6838      	ldr	r0, [r7, #0]
 80035e6:	f000 fc98 	bl	8003f1a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 80035ea:	4603      	mov	r3, r0
 80035ec:	4619      	mov	r1, r3
 80035ee:	4620      	mov	r0, r4
 80035f0:	f7ff ffd9 	bl	80035a6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESR_SV_>
				   std::forward<_Variants>(__vars)...);
 80035f4:	462b      	mov	r3, r5
      }
 80035f6:	4618      	mov	r0, r3
 80035f8:	3708      	adds	r7, #8
 80035fa:	46bd      	mov	sp, r7
 80035fc:	bdb0      	pop	{r4, r5, r7, pc}

080035fe <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESV_EEDcSL_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 80035fe:	b580      	push	{r7, lr}
 8003600:	b082      	sub	sp, #8
 8003602:	af00      	add	r7, sp, #0
 8003604:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8003606:	6878      	ldr	r0, [r7, #4]
 8003608:	f000 fc87 	bl	8003f1a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800360c:	4603      	mov	r3, r0
 800360e:	4618      	mov	r0, r3
 8003610:	f7ff fb1e 	bl	8002c50 <_ZNSt8__detail9__variant5__getILj3ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8003614:	4603      	mov	r3, r0
	}
 8003616:	4618      	mov	r0, r3
 8003618:	3708      	adds	r7, #8
 800361a:	46bd      	mov	sp, r7
 800361c:	bd80      	pop	{r7, pc}

0800361e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESR_SV_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 800361e:	b5b0      	push	{r4, r5, r7, lr}
 8003620:	b082      	sub	sp, #8
 8003622:	af00      	add	r7, sp, #0
 8003624:	6078      	str	r0, [r7, #4]
 8003626:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8003628:	6878      	ldr	r0, [r7, #4]
 800362a:	f001 fa7b 	bl	8004b24 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 800362e:	4604      	mov	r4, r0
 8003630:	6838      	ldr	r0, [r7, #0]
 8003632:	f000 fc72 	bl	8003f1a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8003636:	4603      	mov	r3, r0
 8003638:	4618      	mov	r0, r3
 800363a:	f7ff ffe0 	bl	80035fe <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESV_EEDcSL_>
 800363e:	4603      	mov	r3, r0
 8003640:	4619      	mov	r1, r3
 8003642:	4620      	mov	r0, r4
 8003644:	f001 fabe 	bl	8004bc4 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_JRKS8_EENSt15__invoke_resultISM_JDpT0_EE4typeESN_DpOSS_>
		std::forward<_Variants>(__vars))...);
 8003648:	462b      	mov	r3, r5
      }
 800364a:	4618      	mov	r0, r3
 800364c:	3708      	adds	r7, #8
 800364e:	46bd      	mov	sp, r7
 8003650:	bdb0      	pop	{r4, r5, r7, pc}

08003652 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESR_SV_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8003652:	b5b0      	push	{r4, r5, r7, lr}
 8003654:	b082      	sub	sp, #8
 8003656:	af00      	add	r7, sp, #0
 8003658:	6078      	str	r0, [r7, #4]
 800365a:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 800365c:	6878      	ldr	r0, [r7, #4]
 800365e:	f001 fa61 	bl	8004b24 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8003662:	4604      	mov	r4, r0
 8003664:	6838      	ldr	r0, [r7, #0]
 8003666:	f000 fc58 	bl	8003f1a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800366a:	4603      	mov	r3, r0
 800366c:	4619      	mov	r1, r3
 800366e:	4620      	mov	r0, r4
 8003670:	f7ff ffd5 	bl	800361e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESR_SV_>
				   std::forward<_Variants>(__vars)...);
 8003674:	462b      	mov	r3, r5
      }
 8003676:	4618      	mov	r0, r3
 8003678:	3708      	adds	r7, #8
 800367a:	46bd      	mov	sp, r7
 800367c:	bdb0      	pop	{r4, r5, r7, pc}

0800367e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj3EEEE14__visit_invokeESR_SV_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800367e:	b5b0      	push	{r4, r5, r7, lr}
 8003680:	b082      	sub	sp, #8
 8003682:	af00      	add	r7, sp, #0
 8003684:	6078      	str	r0, [r7, #4]
 8003686:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8003688:	6878      	ldr	r0, [r7, #4]
 800368a:	f001 fa4b 	bl	8004b24 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 800368e:	4604      	mov	r4, r0
 8003690:	6838      	ldr	r0, [r7, #0]
 8003692:	f000 fc42 	bl	8003f1a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8003696:	4603      	mov	r3, r0
 8003698:	4619      	mov	r1, r3
 800369a:	4620      	mov	r0, r4
 800369c:	f7ff ffd9 	bl	8003652 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESR_SV_>
				   std::forward<_Variants>(__vars)...);
 80036a0:	462b      	mov	r3, r5
      }
 80036a2:	4618      	mov	r0, r3
 80036a4:	3708      	adds	r7, #8
 80036a6:	46bd      	mov	sp, r7
 80036a8:	bdb0      	pop	{r4, r5, r7, pc}

080036aa <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj4EEEE28__element_by_index_or_cookieILj4ESV_EEDcSL_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 80036aa:	b580      	push	{r7, lr}
 80036ac:	b082      	sub	sp, #8
 80036ae:	af00      	add	r7, sp, #0
 80036b0:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 80036b2:	6878      	ldr	r0, [r7, #4]
 80036b4:	f000 fc31 	bl	8003f1a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 80036b8:	4603      	mov	r3, r0
 80036ba:	4618      	mov	r0, r3
 80036bc:	f7ff fb8a 	bl	8002dd4 <_ZNSt8__detail9__variant5__getILj4ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 80036c0:	4603      	mov	r3, r0
	}
 80036c2:	4618      	mov	r0, r3
 80036c4:	3708      	adds	r7, #8
 80036c6:	46bd      	mov	sp, r7
 80036c8:	bd80      	pop	{r7, pc}

080036ca <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj4EEEE19__visit_invoke_implESR_SV_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 80036ca:	b5b0      	push	{r4, r5, r7, lr}
 80036cc:	b082      	sub	sp, #8
 80036ce:	af00      	add	r7, sp, #0
 80036d0:	6078      	str	r0, [r7, #4]
 80036d2:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 80036d4:	6878      	ldr	r0, [r7, #4]
 80036d6:	f001 fa25 	bl	8004b24 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 80036da:	4604      	mov	r4, r0
 80036dc:	6838      	ldr	r0, [r7, #0]
 80036de:	f000 fc1c 	bl	8003f1a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 80036e2:	4603      	mov	r3, r0
 80036e4:	4618      	mov	r0, r3
 80036e6:	f7ff ffe0 	bl	80036aa <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj4EEEE28__element_by_index_or_cookieILj4ESV_EEDcSL_>
 80036ea:	4603      	mov	r3, r0
 80036ec:	4619      	mov	r1, r3
 80036ee:	4620      	mov	r0, r4
 80036f0:	f001 fa7f 	bl	8004bf2 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_JRKSC_EENSt15__invoke_resultISM_JDpT0_EE4typeESN_DpOSS_>
		std::forward<_Variants>(__vars))...);
 80036f4:	462b      	mov	r3, r5
      }
 80036f6:	4618      	mov	r0, r3
 80036f8:	3708      	adds	r7, #8
 80036fa:	46bd      	mov	sp, r7
 80036fc:	bdb0      	pop	{r4, r5, r7, pc}

080036fe <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj4EEEE17__do_visit_invokeESR_SV_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80036fe:	b5b0      	push	{r4, r5, r7, lr}
 8003700:	b082      	sub	sp, #8
 8003702:	af00      	add	r7, sp, #0
 8003704:	6078      	str	r0, [r7, #4]
 8003706:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8003708:	6878      	ldr	r0, [r7, #4]
 800370a:	f001 fa0b 	bl	8004b24 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 800370e:	4604      	mov	r4, r0
 8003710:	6838      	ldr	r0, [r7, #0]
 8003712:	f000 fc02 	bl	8003f1a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8003716:	4603      	mov	r3, r0
 8003718:	4619      	mov	r1, r3
 800371a:	4620      	mov	r0, r4
 800371c:	f7ff ffd5 	bl	80036ca <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj4EEEE19__visit_invoke_implESR_SV_>
				   std::forward<_Variants>(__vars)...);
 8003720:	462b      	mov	r3, r5
      }
 8003722:	4618      	mov	r0, r3
 8003724:	3708      	adds	r7, #8
 8003726:	46bd      	mov	sp, r7
 8003728:	bdb0      	pop	{r4, r5, r7, pc}

0800372a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj4EEEE14__visit_invokeESR_SV_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800372a:	b5b0      	push	{r4, r5, r7, lr}
 800372c:	b082      	sub	sp, #8
 800372e:	af00      	add	r7, sp, #0
 8003730:	6078      	str	r0, [r7, #4]
 8003732:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8003734:	6878      	ldr	r0, [r7, #4]
 8003736:	f001 f9f5 	bl	8004b24 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 800373a:	4604      	mov	r4, r0
 800373c:	6838      	ldr	r0, [r7, #0]
 800373e:	f000 fbec 	bl	8003f1a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8003742:	4603      	mov	r3, r0
 8003744:	4619      	mov	r1, r3
 8003746:	4620      	mov	r0, r4
 8003748:	f7ff ffd9 	bl	80036fe <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj4EEEE17__do_visit_invokeESR_SV_>
				   std::forward<_Variants>(__vars)...);
 800374c:	462b      	mov	r3, r5
      }
 800374e:	4618      	mov	r0, r3
 8003750:	3708      	adds	r7, #8
 8003752:	46bd      	mov	sp, r7
 8003754:	bdb0      	pop	{r4, r5, r7, pc}

08003756 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS0_15_Copy_ctor_baseILb0EJifbS9_SD_EEERKSF_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbS9_SD_EEEJLj5EEE9_M_accessIJEEERKSW_jDpT_>:
	_M_access(size_t __first_index, _Args... __rest_indices) const
 8003756:	b580      	push	{r7, lr}
 8003758:	b082      	sub	sp, #8
 800375a:	af00      	add	r7, sp, #0
 800375c:	6078      	str	r0, [r7, #4]
 800375e:	6039      	str	r1, [r7, #0]
	    ._M_access(__rest_indices...);
 8003760:	683b      	ldr	r3, [r7, #0]
 8003762:	009b      	lsls	r3, r3, #2
 8003764:	687a      	ldr	r2, [r7, #4]
 8003766:	4413      	add	r3, r2
 8003768:	4618      	mov	r0, r3
 800376a:	f001 fa59 	bl	8004c20 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS0_15_Copy_ctor_baseILb0EJifbS9_SD_EEERKSF_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbS9_SD_EEEJEE9_M_accessEv>
 800376e:	4603      	mov	r3, r0
	}
 8003770:	4618      	mov	r0, r3
 8003772:	3708      	adds	r7, #8
 8003774:	46bd      	mov	sp, r7
 8003776:	bd80      	pop	{r7, pc}

08003778 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_JRKSt7variantIJifbS8_SC_EEEEDcSL_DpOT2_>:
    __do_visit(_Visitor&& __visitor, _Variants&&... __variants)
 8003778:	b5f0      	push	{r4, r5, r6, r7, lr}
 800377a:	b085      	sub	sp, #20
 800377c:	af00      	add	r7, sp, #0
 800377e:	6078      	str	r0, [r7, #4]
 8003780:	6039      	str	r1, [r7, #0]
      constexpr auto& __vtable = __detail::__variant::__gen_vtable<
 8003782:	4b0f      	ldr	r3, [pc, #60]	; (80037c0 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_JRKSt7variantIJifbS8_SC_EEEEDcSL_DpOT2_+0x48>)
 8003784:	60fb      	str	r3, [r7, #12]
      auto __func_ptr = __vtable._M_access(__variants.index()...);
 8003786:	6838      	ldr	r0, [r7, #0]
 8003788:	f7fe ff31 	bl	80025ee <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv>
 800378c:	4603      	mov	r3, r0
 800378e:	4619      	mov	r1, r3
 8003790:	68f8      	ldr	r0, [r7, #12]
 8003792:	f7ff ffe0 	bl	8003756 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS0_15_Copy_ctor_baseILb0EJifbS9_SD_EEERKSF_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbS9_SD_EEEJLj5EEE9_M_accessIJEEERKSW_jDpT_>
 8003796:	4603      	mov	r3, r0
 8003798:	681b      	ldr	r3, [r3, #0]
 800379a:	60bb      	str	r3, [r7, #8]
      return (*__func_ptr)(std::forward<_Visitor>(__visitor),
 800379c:	68bc      	ldr	r4, [r7, #8]
 800379e:	6878      	ldr	r0, [r7, #4]
 80037a0:	f001 fa49 	bl	8004c36 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 80037a4:	4605      	mov	r5, r0
 80037a6:	6838      	ldr	r0, [r7, #0]
 80037a8:	f000 fbb7 	bl	8003f1a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 80037ac:	4603      	mov	r3, r0
 80037ae:	4619      	mov	r1, r3
 80037b0:	4628      	mov	r0, r5
 80037b2:	47a0      	blx	r4
			   std::forward<_Variants>(__variants)...);
 80037b4:	4633      	mov	r3, r6
    }
 80037b6:	4618      	mov	r0, r3
 80037b8:	3714      	adds	r7, #20
 80037ba:	46bd      	mov	sp, r7
 80037bc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80037be:	bf00      	nop
 80037c0:	0802a170 	.word	0x0802a170

080037c4 <_ZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Copy_ctor_baseILb0EJifbS7_SB_EEERKSD_EEvOT0_OT1_>:
    void __variant_construct(_Tp&& __lhs, _Up&& __rhs)
 80037c4:	b580      	push	{r7, lr}
 80037c6:	b084      	sub	sp, #16
 80037c8:	af00      	add	r7, sp, #0
 80037ca:	6078      	str	r0, [r7, #4]
 80037cc:	6039      	str	r1, [r7, #0]
      __lhs._M_index = __rhs._M_index;
 80037ce:	683b      	ldr	r3, [r7, #0]
 80037d0:	7e1a      	ldrb	r2, [r3, #24]
 80037d2:	687b      	ldr	r3, [r7, #4]
 80037d4:	761a      	strb	r2, [r3, #24]
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 80037d6:	687b      	ldr	r3, [r7, #4]
 80037d8:	60fb      	str	r3, [r7, #12]
 80037da:	6838      	ldr	r0, [r7, #0]
 80037dc:	f001 f997 	bl	8004b0e <_ZSt7forwardIRKNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>
 80037e0:	4603      	mov	r3, r0
 80037e2:	4618      	mov	r0, r3
 80037e4:	f7ff fdfe 	bl	80033e4 <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEERKNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbS5_S9_EEEEDcOT0_>
 80037e8:	4602      	mov	r2, r0
 80037ea:	f107 030c 	add.w	r3, r7, #12
 80037ee:	4611      	mov	r1, r2
 80037f0:	4618      	mov	r0, r3
 80037f2:	f7ff ffc1 	bl	8003778 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_JRKSt7variantIJifbS8_SC_EEEEDcSL_DpOT2_>
    }
 80037f6:	bf00      	nop
 80037f8:	3710      	adds	r7, #16
 80037fa:	46bd      	mov	sp, r7
 80037fc:	bd80      	pop	{r7, pc}

080037fe <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80037fe:	b480      	push	{r7}
 8003800:	b083      	sub	sp, #12
 8003802:	af00      	add	r7, sp, #0
 8003804:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8003806:	687b      	ldr	r3, [r7, #4]
 8003808:	4618      	mov	r0, r3
 800380a:	370c      	adds	r7, #12
 800380c:	46bd      	mov	sp, r7
 800380e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003812:	4770      	bx	lr

08003814 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8003814:	b480      	push	{r7}
 8003816:	b083      	sub	sp, #12
 8003818:	af00      	add	r7, sp, #0
 800381a:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800381c:	687b      	ldr	r3, [r7, #4]
 800381e:	4618      	mov	r0, r3
 8003820:	370c      	adds	r7, #12
 8003822:	46bd      	mov	sp, r7
 8003824:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003828:	4770      	bx	lr

0800382a <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800382a:	b480      	push	{r7}
 800382c:	b083      	sub	sp, #12
 800382e:	af00      	add	r7, sp, #0
 8003830:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8003832:	687b      	ldr	r3, [r7, #4]
 8003834:	4618      	mov	r0, r3
 8003836:	370c      	adds	r7, #12
 8003838:	46bd      	mov	sp, r7
 800383a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800383e:	4770      	bx	lr

08003840 <_ZNRSt8__detail9__variant14_UninitializedIiLb1EE6_M_getEv>:
      constexpr _Type& _M_get() & noexcept
 8003840:	b480      	push	{r7}
 8003842:	b083      	sub	sp, #12
 8003844:	af00      	add	r7, sp, #0
 8003846:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 8003848:	687b      	ldr	r3, [r7, #4]
 800384a:	4618      	mov	r0, r3
 800384c:	370c      	adds	r7, #12
 800384e:	46bd      	mov	sp, r7
 8003850:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003854:	4770      	bx	lr

08003856 <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_JRiSt17integral_constantIjLj0EEEENSt15__invoke_resultISF_JDpT0_EE4typeESG_DpOSN_>:
    { return (*std::forward<_Tp>(__t)).*__f; }

  /// Invoke a callable object.
  template<typename _Callable, typename... _Args>
    constexpr typename __invoke_result<_Callable, _Args...>::type
    __invoke(_Callable&& __fn, _Args&&... __args)
 8003856:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800385a:	b084      	sub	sp, #16
 800385c:	af00      	add	r7, sp, #0
 800385e:	60f8      	str	r0, [r7, #12]
 8003860:	60b9      	str	r1, [r7, #8]
 8003862:	607a      	str	r2, [r7, #4]
    noexcept(__is_nothrow_invocable<_Callable, _Args...>::value)
    {
      using __result = __invoke_result<_Callable, _Args...>;
      using __type = typename __result::type;
      using __tag = typename __result::__invoke_type;
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8003864:	68f8      	ldr	r0, [r7, #12]
 8003866:	f000 f8f3 	bl	8003a50 <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 800386a:	4604      	mov	r4, r0
 800386c:	68b8      	ldr	r0, [r7, #8]
 800386e:	f001 f9ed 	bl	8004c4c <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 8003872:	4605      	mov	r5, r0
 8003874:	6878      	ldr	r0, [r7, #4]
 8003876:	f001 f9f4 	bl	8004c62 <_ZSt7forwardISt17integral_constantIjLj0EEEOT_RNSt16remove_referenceIS2_E4typeE>
 800387a:	4603      	mov	r3, r0
 800387c:	462a      	mov	r2, r5
 800387e:	4621      	mov	r1, r4
 8003880:	4630      	mov	r0, r6
 8003882:	f001 f9f9 	bl	8004c78 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSEOSE_EUlOT_T0_E_JRiSt17integral_constantIjLj0EEEESG_St14__invoke_otherOSI_DpOT1_>
					std::forward<_Args>(__args)...);
 8003886:	4643      	mov	r3, r8
    }
 8003888:	4618      	mov	r0, r3
 800388a:	3710      	adds	r7, #16
 800388c:	46bd      	mov	sp, r7
 800388e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08003892 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8003892:	b480      	push	{r7}
 8003894:	b083      	sub	sp, #12
 8003896:	af00      	add	r7, sp, #0
 8003898:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800389a:	687b      	ldr	r3, [r7, #4]
 800389c:	4618      	mov	r0, r3
 800389e:	370c      	adds	r7, #12
 80038a0:	46bd      	mov	sp, r7
 80038a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80038a6:	4770      	bx	lr

080038a8 <_ZNRSt8__detail9__variant14_UninitializedIfLb1EE6_M_getEv>:
      constexpr _Type& _M_get() & noexcept
 80038a8:	b480      	push	{r7}
 80038aa:	b083      	sub	sp, #12
 80038ac:	af00      	add	r7, sp, #0
 80038ae:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 80038b0:	687b      	ldr	r3, [r7, #4]
 80038b2:	4618      	mov	r0, r3
 80038b4:	370c      	adds	r7, #12
 80038b6:	46bd      	mov	sp, r7
 80038b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80038bc:	4770      	bx	lr

080038be <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_JRfSt17integral_constantIjLj1EEEENSt15__invoke_resultISF_JDpT0_EE4typeESG_DpOSN_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 80038be:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80038c2:	b084      	sub	sp, #16
 80038c4:	af00      	add	r7, sp, #0
 80038c6:	60f8      	str	r0, [r7, #12]
 80038c8:	60b9      	str	r1, [r7, #8]
 80038ca:	607a      	str	r2, [r7, #4]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 80038cc:	68f8      	ldr	r0, [r7, #12]
 80038ce:	f000 f8bf 	bl	8003a50 <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 80038d2:	4604      	mov	r4, r0
 80038d4:	68b8      	ldr	r0, [r7, #8]
 80038d6:	f001 f9ed 	bl	8004cb4 <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 80038da:	4605      	mov	r5, r0
 80038dc:	6878      	ldr	r0, [r7, #4]
 80038de:	f001 f9f4 	bl	8004cca <_ZSt7forwardISt17integral_constantIjLj1EEEOT_RNSt16remove_referenceIS2_E4typeE>
 80038e2:	4603      	mov	r3, r0
 80038e4:	462a      	mov	r2, r5
 80038e6:	4621      	mov	r1, r4
 80038e8:	4630      	mov	r0, r6
 80038ea:	f001 f9f9 	bl	8004ce0 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSEOSE_EUlOT_T0_E_JRfSt17integral_constantIjLj1EEEESG_St14__invoke_otherOSI_DpOT1_>
					std::forward<_Args>(__args)...);
 80038ee:	4643      	mov	r3, r8
    }
 80038f0:	4618      	mov	r0, r3
 80038f2:	3710      	adds	r7, #16
 80038f4:	46bd      	mov	sp, r7
 80038f6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080038fa <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80038fa:	b480      	push	{r7}
 80038fc:	b083      	sub	sp, #12
 80038fe:	af00      	add	r7, sp, #0
 8003900:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8003902:	687b      	ldr	r3, [r7, #4]
 8003904:	4618      	mov	r0, r3
 8003906:	370c      	adds	r7, #12
 8003908:	46bd      	mov	sp, r7
 800390a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800390e:	4770      	bx	lr

08003910 <_ZNRSt8__detail9__variant14_UninitializedIbLb1EE6_M_getEv>:
      constexpr _Type& _M_get() & noexcept
 8003910:	b480      	push	{r7}
 8003912:	b083      	sub	sp, #12
 8003914:	af00      	add	r7, sp, #0
 8003916:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 8003918:	687b      	ldr	r3, [r7, #4]
 800391a:	4618      	mov	r0, r3
 800391c:	370c      	adds	r7, #12
 800391e:	46bd      	mov	sp, r7
 8003920:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003924:	4770      	bx	lr

08003926 <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_JRbSt17integral_constantIjLj2EEEENSt15__invoke_resultISF_JDpT0_EE4typeESG_DpOSN_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8003926:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800392a:	b084      	sub	sp, #16
 800392c:	af00      	add	r7, sp, #0
 800392e:	60f8      	str	r0, [r7, #12]
 8003930:	60b9      	str	r1, [r7, #8]
 8003932:	607a      	str	r2, [r7, #4]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8003934:	68f8      	ldr	r0, [r7, #12]
 8003936:	f000 f88b 	bl	8003a50 <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 800393a:	4604      	mov	r4, r0
 800393c:	68b8      	ldr	r0, [r7, #8]
 800393e:	f001 f9ed 	bl	8004d1c <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
 8003942:	4605      	mov	r5, r0
 8003944:	6878      	ldr	r0, [r7, #4]
 8003946:	f001 f9f4 	bl	8004d32 <_ZSt7forwardISt17integral_constantIjLj2EEEOT_RNSt16remove_referenceIS2_E4typeE>
 800394a:	4603      	mov	r3, r0
 800394c:	462a      	mov	r2, r5
 800394e:	4621      	mov	r1, r4
 8003950:	4630      	mov	r0, r6
 8003952:	f001 f9f9 	bl	8004d48 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSEOSE_EUlOT_T0_E_JRbSt17integral_constantIjLj2EEEESG_St14__invoke_otherOSI_DpOT1_>
					std::forward<_Args>(__args)...);
 8003956:	4643      	mov	r3, r8
    }
 8003958:	4618      	mov	r0, r3
 800395a:	3710      	adds	r7, #16
 800395c:	46bd      	mov	sp, r7
 800395e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08003962 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8003962:	b480      	push	{r7}
 8003964:	b083      	sub	sp, #12
 8003966:	af00      	add	r7, sp, #0
 8003968:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800396a:	687b      	ldr	r3, [r7, #4]
 800396c:	4618      	mov	r0, r3
 800396e:	370c      	adds	r7, #12
 8003970:	46bd      	mov	sp, r7
 8003972:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003976:	4770      	bx	lr

08003978 <_ZNRSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE6_M_getEv>:
      _Type& _M_get() & noexcept
 8003978:	b580      	push	{r7, lr}
 800397a:	b082      	sub	sp, #8
 800397c:	af00      	add	r7, sp, #0
 800397e:	6078      	str	r0, [r7, #4]
      { return *_M_storage._M_ptr(); }
 8003980:	687b      	ldr	r3, [r7, #4]
 8003982:	4618      	mov	r0, r3
 8003984:	f001 f9fe 	bl	8004d84 <_ZN9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE6_M_ptrEv>
 8003988:	4603      	mov	r3, r0
 800398a:	4618      	mov	r0, r3
 800398c:	3708      	adds	r7, #8
 800398e:	46bd      	mov	sp, r7
 8003990:	bd80      	pop	{r7, pc}

08003992 <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_JRS8_St17integral_constantIjLj3EEEENSt15__invoke_resultISF_JDpT0_EE4typeESG_DpOSN_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8003992:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003996:	b084      	sub	sp, #16
 8003998:	af00      	add	r7, sp, #0
 800399a:	60f8      	str	r0, [r7, #12]
 800399c:	60b9      	str	r1, [r7, #8]
 800399e:	607a      	str	r2, [r7, #4]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 80039a0:	68f8      	ldr	r0, [r7, #12]
 80039a2:	f000 f855 	bl	8003a50 <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 80039a6:	4604      	mov	r4, r0
 80039a8:	68b8      	ldr	r0, [r7, #8]
 80039aa:	f001 f9f7 	bl	8004d9c <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 80039ae:	4605      	mov	r5, r0
 80039b0:	6878      	ldr	r0, [r7, #4]
 80039b2:	f001 f9fe 	bl	8004db2 <_ZSt7forwardISt17integral_constantIjLj3EEEOT_RNSt16remove_referenceIS2_E4typeE>
 80039b6:	4603      	mov	r3, r0
 80039b8:	462a      	mov	r2, r5
 80039ba:	4621      	mov	r1, r4
 80039bc:	4630      	mov	r0, r6
 80039be:	f001 fa03 	bl	8004dc8 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSEOSE_EUlOT_T0_E_JRS9_St17integral_constantIjLj3EEEESG_St14__invoke_otherOSI_DpOT1_>
					std::forward<_Args>(__args)...);
 80039c2:	4643      	mov	r3, r8
    }
 80039c4:	4618      	mov	r0, r3
 80039c6:	3710      	adds	r7, #16
 80039c8:	46bd      	mov	sp, r7
 80039ca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080039ce <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJSt6vectorI6SymbolSaIS4_EEEEEEOT_RNSt16remove_referenceIS9_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80039ce:	b480      	push	{r7}
 80039d0:	b083      	sub	sp, #12
 80039d2:	af00      	add	r7, sp, #0
 80039d4:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80039d6:	687b      	ldr	r3, [r7, #4]
 80039d8:	4618      	mov	r0, r3
 80039da:	370c      	adds	r7, #12
 80039dc:	46bd      	mov	sp, r7
 80039de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80039e2:	4770      	bx	lr

080039e4 <_ZNRSt8__detail9__variant14_UninitializedISt6vectorI6SymbolSaIS3_EELb0EE6_M_getEv>:
      _Type& _M_get() & noexcept
 80039e4:	b580      	push	{r7, lr}
 80039e6:	b082      	sub	sp, #8
 80039e8:	af00      	add	r7, sp, #0
 80039ea:	6078      	str	r0, [r7, #4]
      { return *_M_storage._M_ptr(); }
 80039ec:	687b      	ldr	r3, [r7, #4]
 80039ee:	4618      	mov	r0, r3
 80039f0:	f001 fa08 	bl	8004e04 <_ZN9__gnu_cxx16__aligned_membufISt6vectorI6SymbolSaIS2_EEE6_M_ptrEv>
 80039f4:	4603      	mov	r3, r0
 80039f6:	4618      	mov	r0, r3
 80039f8:	3708      	adds	r7, #8
 80039fa:	46bd      	mov	sp, r7
 80039fc:	bd80      	pop	{r7, pc}

080039fe <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_JRSC_St17integral_constantIjLj4EEEENSt15__invoke_resultISF_JDpT0_EE4typeESG_DpOSN_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 80039fe:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003a02:	b084      	sub	sp, #16
 8003a04:	af00      	add	r7, sp, #0
 8003a06:	60f8      	str	r0, [r7, #12]
 8003a08:	60b9      	str	r1, [r7, #8]
 8003a0a:	607a      	str	r2, [r7, #4]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8003a0c:	68f8      	ldr	r0, [r7, #12]
 8003a0e:	f000 f81f 	bl	8003a50 <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 8003a12:	4604      	mov	r4, r0
 8003a14:	68b8      	ldr	r0, [r7, #8]
 8003a16:	f001 fa01 	bl	8004e1c <_ZSt7forwardIRSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS5_E4typeE>
 8003a1a:	4605      	mov	r5, r0
 8003a1c:	6878      	ldr	r0, [r7, #4]
 8003a1e:	f001 fa08 	bl	8004e32 <_ZSt7forwardISt17integral_constantIjLj4EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8003a22:	4603      	mov	r3, r0
 8003a24:	462a      	mov	r2, r5
 8003a26:	4621      	mov	r1, r4
 8003a28:	4630      	mov	r0, r6
 8003a2a:	f001 fa0d 	bl	8004e48 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSEOSE_EUlOT_T0_E_JRSD_St17integral_constantIjLj4EEEESG_St14__invoke_otherOSI_DpOT1_>
					std::forward<_Args>(__args)...);
 8003a2e:	4643      	mov	r3, r8
    }
 8003a30:	4618      	mov	r0, r3
 8003a32:	3710      	adds	r7, #16
 8003a34:	46bd      	mov	sp, r7
 8003a36:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08003a3a <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSEOSE_EUlOT_T0_E_RSt7variantIJifbS9_SD_EEEJEE9_M_accessEv>:
      _M_access() const
 8003a3a:	b480      	push	{r7}
 8003a3c:	b083      	sub	sp, #12
 8003a3e:	af00      	add	r7, sp, #0
 8003a40:	6078      	str	r0, [r7, #4]
      { return _M_data; }
 8003a42:	687b      	ldr	r3, [r7, #4]
 8003a44:	4618      	mov	r0, r3
 8003a46:	370c      	adds	r7, #12
 8003a48:	46bd      	mov	sp, r7
 8003a4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003a4e:	4770      	bx	lr

08003a50 <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8003a50:	b480      	push	{r7}
 8003a52:	b083      	sub	sp, #12
 8003a54:	af00      	add	r7, sp, #0
 8003a56:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8003a58:	687b      	ldr	r3, [r7, #4]
 8003a5a:	4618      	mov	r0, r3
 8003a5c:	370c      	adds	r7, #12
 8003a5e:	46bd      	mov	sp, r7
 8003a60:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003a64:	4770      	bx	lr

08003a66 <_ZN9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 8003a66:	b480      	push	{r7}
 8003a68:	b083      	sub	sp, #12
 8003a6a:	af00      	add	r7, sp, #0
 8003a6c:	6078      	str	r0, [r7, #4]
 8003a6e:	6039      	str	r1, [r7, #0]
      : _M_current(__i) { }
 8003a70:	683b      	ldr	r3, [r7, #0]
 8003a72:	681a      	ldr	r2, [r3, #0]
 8003a74:	687b      	ldr	r3, [r7, #4]
 8003a76:	601a      	str	r2, [r3, #0]
 8003a78:	687b      	ldr	r3, [r7, #4]
 8003a7a:	4618      	mov	r0, r3
 8003a7c:	370c      	adds	r7, #12
 8003a7e:	46bd      	mov	sp, r7
 8003a80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003a84:	4770      	bx	lr

08003a86 <_ZNK9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
 8003a86:	b480      	push	{r7}
 8003a88:	b083      	sub	sp, #12
 8003a8a:	af00      	add	r7, sp, #0
 8003a8c:	6078      	str	r0, [r7, #4]
      { return _M_current; }
 8003a8e:	687b      	ldr	r3, [r7, #4]
 8003a90:	4618      	mov	r0, r3
 8003a92:	370c      	adds	r7, #12
 8003a94:	46bd      	mov	sp, r7
 8003a96:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003a9a:	4770      	bx	lr

08003a9c <_ZNKSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE5indexEv>:
      constexpr size_t index() const noexcept
 8003a9c:	b480      	push	{r7}
 8003a9e:	b083      	sub	sp, #12
 8003aa0:	af00      	add	r7, sp, #0
 8003aa2:	6078      	str	r0, [r7, #4]
	if (this->_M_index ==
 8003aa4:	687b      	ldr	r3, [r7, #4]
 8003aa6:	791b      	ldrb	r3, [r3, #4]
 8003aa8:	2bff      	cmp	r3, #255	; 0xff
 8003aaa:	d102      	bne.n	8003ab2 <_ZNKSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE5indexEv+0x16>
	  return variant_npos;
 8003aac:	f04f 33ff 	mov.w	r3, #4294967295
 8003ab0:	e001      	b.n	8003ab6 <_ZNKSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE5indexEv+0x1a>
	return this->_M_index;
 8003ab2:	687b      	ldr	r3, [r7, #4]
 8003ab4:	791b      	ldrb	r3, [r3, #4]
      }
 8003ab6:	4618      	mov	r0, r3
 8003ab8:	370c      	adds	r7, #12
 8003aba:	46bd      	mov	sp, r7
 8003abc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003ac0:	4770      	bx	lr

08003ac2 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8003ac2:	b580      	push	{r7, lr}
 8003ac4:	b082      	sub	sp, #8
 8003ac6:	af00      	add	r7, sp, #0
 8003ac8:	7138      	strb	r0, [r7, #4]
 8003aca:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8003acc:	6838      	ldr	r0, [r7, #0]
 8003ace:	f001 f9e4 	bl	8004e9a <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8003ad2:	4603      	mov	r3, r0
 8003ad4:	4618      	mov	r0, r3
 8003ad6:	f001 f9eb 	bl	8004eb0 <_ZNRSt8__detail9__variant14_UninitializedIP10AssignmentLb1EE6_M_getEv>
 8003ada:	4603      	mov	r3, r0
 8003adc:	4618      	mov	r0, r3
 8003ade:	3708      	adds	r7, #8
 8003ae0:	46bd      	mov	sp, r7
 8003ae2:	bd80      	pop	{r7, pc}

08003ae4 <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8003ae4:	b590      	push	{r4, r7, lr}
 8003ae6:	b083      	sub	sp, #12
 8003ae8:	af00      	add	r7, sp, #0
 8003aea:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8003aec:	6878      	ldr	r0, [r7, #4]
 8003aee:	f001 f9c9 	bl	8004e84 <_ZSt7forwardIRSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEOT_RNSt16remove_referenceISD_E4typeE>
 8003af2:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8003af4:	4619      	mov	r1, r3
 8003af6:	4620      	mov	r0, r4
 8003af8:	f7ff ffe3 	bl	8003ac2 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tILj0EEOT_>
 8003afc:	4603      	mov	r3, r0
    }
 8003afe:	4618      	mov	r0, r3
 8003b00:	370c      	adds	r7, #12
 8003b02:	46bd      	mov	sp, r7
 8003b04:	bd90      	pop	{r4, r7, pc}
	...

08003b08 <_ZSt3getILj0EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
    get(variant<_Types...>& __v)
 8003b08:	b580      	push	{r7, lr}
 8003b0a:	b082      	sub	sp, #8
 8003b0c:	af00      	add	r7, sp, #0
 8003b0e:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 8003b10:	6878      	ldr	r0, [r7, #4]
 8003b12:	f7ff ffc3 	bl	8003a9c <_ZNKSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE5indexEv>
 8003b16:	4603      	mov	r3, r0
 8003b18:	2b00      	cmp	r3, #0
 8003b1a:	bf14      	ite	ne
 8003b1c:	2301      	movne	r3, #1
 8003b1e:	2300      	moveq	r3, #0
 8003b20:	b2db      	uxtb	r3, r3
 8003b22:	2b00      	cmp	r3, #0
 8003b24:	d002      	beq.n	8003b2c <_ZSt3getILj0EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 8003b26:	4805      	ldr	r0, [pc, #20]	; (8003b3c <_ZSt3getILj0EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 8003b28:	f7fd faa3 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 8003b2c:	6878      	ldr	r0, [r7, #4]
 8003b2e:	f7ff ffd9 	bl	8003ae4 <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>
 8003b32:	4603      	mov	r3, r0
    }
 8003b34:	4618      	mov	r0, r3
 8003b36:	3708      	adds	r7, #8
 8003b38:	46bd      	mov	sp, r7
 8003b3a:	bd80      	pop	{r7, pc}
 8003b3c:	08029488 	.word	0x08029488

08003b40 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8003b40:	b580      	push	{r7, lr}
 8003b42:	b082      	sub	sp, #8
 8003b44:	af00      	add	r7, sp, #0
 8003b46:	7138      	strb	r0, [r7, #4]
 8003b48:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8003b4a:	6838      	ldr	r0, [r7, #0]
 8003b4c:	f001 f9bb 	bl	8004ec6 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP13Function_callP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8003b50:	4603      	mov	r3, r0
 8003b52:	4618      	mov	r0, r3
 8003b54:	f001 f9c2 	bl	8004edc <_ZNRSt8__detail9__variant14_UninitializedIP13Function_callLb1EE6_M_getEv>
 8003b58:	4603      	mov	r3, r0
 8003b5a:	4618      	mov	r0, r3
 8003b5c:	3708      	adds	r7, #8
 8003b5e:	46bd      	mov	sp, r7
 8003b60:	bd80      	pop	{r7, pc}

08003b62 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8003b62:	b590      	push	{r4, r7, lr}
 8003b64:	b083      	sub	sp, #12
 8003b66:	af00      	add	r7, sp, #0
 8003b68:	7138      	strb	r0, [r7, #4]
 8003b6a:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8003b6c:	6838      	ldr	r0, [r7, #0]
 8003b6e:	f001 f994 	bl	8004e9a <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8003b72:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8003b74:	4619      	mov	r1, r3
 8003b76:	4620      	mov	r0, r4
 8003b78:	f7ff ffe2 	bl	8003b40 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tILj0EEOT_>
 8003b7c:	4603      	mov	r3, r0
    }
 8003b7e:	4618      	mov	r0, r3
 8003b80:	370c      	adds	r7, #12
 8003b82:	46bd      	mov	sp, r7
 8003b84:	bd90      	pop	{r4, r7, pc}

08003b86 <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8003b86:	b590      	push	{r4, r7, lr}
 8003b88:	b083      	sub	sp, #12
 8003b8a:	af00      	add	r7, sp, #0
 8003b8c:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8003b8e:	6878      	ldr	r0, [r7, #4]
 8003b90:	f001 f978 	bl	8004e84 <_ZSt7forwardIRSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEOT_RNSt16remove_referenceISD_E4typeE>
 8003b94:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8003b96:	4619      	mov	r1, r3
 8003b98:	4620      	mov	r0, r4
 8003b9a:	f7ff ffe2 	bl	8003b62 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8003b9e:	4603      	mov	r3, r0
    }
 8003ba0:	4618      	mov	r0, r3
 8003ba2:	370c      	adds	r7, #12
 8003ba4:	46bd      	mov	sp, r7
 8003ba6:	bd90      	pop	{r4, r7, pc}

08003ba8 <_ZSt3getILj1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
    get(variant<_Types...>& __v)
 8003ba8:	b580      	push	{r7, lr}
 8003baa:	b082      	sub	sp, #8
 8003bac:	af00      	add	r7, sp, #0
 8003bae:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 8003bb0:	6878      	ldr	r0, [r7, #4]
 8003bb2:	f7ff ff73 	bl	8003a9c <_ZNKSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE5indexEv>
 8003bb6:	4603      	mov	r3, r0
 8003bb8:	2b01      	cmp	r3, #1
 8003bba:	bf14      	ite	ne
 8003bbc:	2301      	movne	r3, #1
 8003bbe:	2300      	moveq	r3, #0
 8003bc0:	b2db      	uxtb	r3, r3
 8003bc2:	2b00      	cmp	r3, #0
 8003bc4:	d002      	beq.n	8003bcc <_ZSt3getILj1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 8003bc6:	4805      	ldr	r0, [pc, #20]	; (8003bdc <_ZSt3getILj1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 8003bc8:	f7fd fa53 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 8003bcc:	6878      	ldr	r0, [r7, #4]
 8003bce:	f7ff ffda 	bl	8003b86 <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>
 8003bd2:	4603      	mov	r3, r0
    }
 8003bd4:	4618      	mov	r0, r3
 8003bd6:	3708      	adds	r7, #8
 8003bd8:	46bd      	mov	sp, r7
 8003bda:	bd80      	pop	{r7, pc}
 8003bdc:	08029488 	.word	0x08029488

08003be0 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8003be0:	b580      	push	{r7, lr}
 8003be2:	b082      	sub	sp, #8
 8003be4:	af00      	add	r7, sp, #0
 8003be6:	7138      	strb	r0, [r7, #4]
 8003be8:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8003bea:	6838      	ldr	r0, [r7, #0]
 8003bec:	f001 f981 	bl	8004ef2 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISB_E4typeE>
 8003bf0:	4603      	mov	r3, r0
 8003bf2:	4618      	mov	r0, r3
 8003bf4:	f001 f988 	bl	8004f08 <_ZNRSt8__detail9__variant14_UninitializedIP11Method_callLb1EE6_M_getEv>
 8003bf8:	4603      	mov	r3, r0
 8003bfa:	4618      	mov	r0, r3
 8003bfc:	3708      	adds	r7, #8
 8003bfe:	46bd      	mov	sp, r7
 8003c00:	bd80      	pop	{r7, pc}

08003c02 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8003c02:	b590      	push	{r4, r7, lr}
 8003c04:	b083      	sub	sp, #12
 8003c06:	af00      	add	r7, sp, #0
 8003c08:	7138      	strb	r0, [r7, #4]
 8003c0a:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8003c0c:	6838      	ldr	r0, [r7, #0]
 8003c0e:	f001 f95a 	bl	8004ec6 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP13Function_callP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8003c12:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8003c14:	4619      	mov	r1, r3
 8003c16:	4620      	mov	r0, r4
 8003c18:	f7ff ffe2 	bl	8003be0 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tILj0EEOT_>
 8003c1c:	4603      	mov	r3, r0
    }
 8003c1e:	4618      	mov	r0, r3
 8003c20:	370c      	adds	r7, #12
 8003c22:	46bd      	mov	sp, r7
 8003c24:	bd90      	pop	{r4, r7, pc}

08003c26 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8003c26:	b590      	push	{r4, r7, lr}
 8003c28:	b083      	sub	sp, #12
 8003c2a:	af00      	add	r7, sp, #0
 8003c2c:	7138      	strb	r0, [r7, #4]
 8003c2e:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8003c30:	6838      	ldr	r0, [r7, #0]
 8003c32:	f001 f932 	bl	8004e9a <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8003c36:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8003c38:	4619      	mov	r1, r3
 8003c3a:	4620      	mov	r0, r4
 8003c3c:	f7ff ffe1 	bl	8003c02 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8003c40:	4603      	mov	r3, r0
    }
 8003c42:	4618      	mov	r0, r3
 8003c44:	370c      	adds	r7, #12
 8003c46:	46bd      	mov	sp, r7
 8003c48:	bd90      	pop	{r4, r7, pc}

08003c4a <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8003c4a:	b590      	push	{r4, r7, lr}
 8003c4c:	b083      	sub	sp, #12
 8003c4e:	af00      	add	r7, sp, #0
 8003c50:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8003c52:	6878      	ldr	r0, [r7, #4]
 8003c54:	f001 f916 	bl	8004e84 <_ZSt7forwardIRSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEOT_RNSt16remove_referenceISD_E4typeE>
 8003c58:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8003c5a:	4619      	mov	r1, r3
 8003c5c:	4620      	mov	r0, r4
 8003c5e:	f7ff ffe2 	bl	8003c26 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8003c62:	4603      	mov	r3, r0
    }
 8003c64:	4618      	mov	r0, r3
 8003c66:	370c      	adds	r7, #12
 8003c68:	46bd      	mov	sp, r7
 8003c6a:	bd90      	pop	{r4, r7, pc}

08003c6c <_ZSt3getILj2EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
    get(variant<_Types...>& __v)
 8003c6c:	b580      	push	{r7, lr}
 8003c6e:	b082      	sub	sp, #8
 8003c70:	af00      	add	r7, sp, #0
 8003c72:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 8003c74:	6878      	ldr	r0, [r7, #4]
 8003c76:	f7ff ff11 	bl	8003a9c <_ZNKSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE5indexEv>
 8003c7a:	4603      	mov	r3, r0
 8003c7c:	2b02      	cmp	r3, #2
 8003c7e:	bf14      	ite	ne
 8003c80:	2301      	movne	r3, #1
 8003c82:	2300      	moveq	r3, #0
 8003c84:	b2db      	uxtb	r3, r3
 8003c86:	2b00      	cmp	r3, #0
 8003c88:	d002      	beq.n	8003c90 <_ZSt3getILj2EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 8003c8a:	4805      	ldr	r0, [pc, #20]	; (8003ca0 <_ZSt3getILj2EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 8003c8c:	f7fd f9f1 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 8003c90:	6878      	ldr	r0, [r7, #4]
 8003c92:	f7ff ffda 	bl	8003c4a <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>
 8003c96:	4603      	mov	r3, r0
    }
 8003c98:	4618      	mov	r0, r3
 8003c9a:	3708      	adds	r7, #8
 8003c9c:	46bd      	mov	sp, r7
 8003c9e:	bd80      	pop	{r7, pc}
 8003ca0:	08029488 	.word	0x08029488

08003ca4 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP15While_statementP12If_statementEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8003ca4:	b580      	push	{r7, lr}
 8003ca6:	b082      	sub	sp, #8
 8003ca8:	af00      	add	r7, sp, #0
 8003caa:	7138      	strb	r0, [r7, #4]
 8003cac:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8003cae:	6838      	ldr	r0, [r7, #0]
 8003cb0:	f001 f935 	bl	8004f1e <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8003cb4:	4603      	mov	r3, r0
 8003cb6:	4618      	mov	r0, r3
 8003cb8:	f001 f93c 	bl	8004f34 <_ZNRSt8__detail9__variant14_UninitializedIP15While_statementLb1EE6_M_getEv>
 8003cbc:	4603      	mov	r3, r0
 8003cbe:	4618      	mov	r0, r3
 8003cc0:	3708      	adds	r7, #8
 8003cc2:	46bd      	mov	sp, r7
 8003cc4:	bd80      	pop	{r7, pc}

08003cc6 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8003cc6:	b590      	push	{r4, r7, lr}
 8003cc8:	b083      	sub	sp, #12
 8003cca:	af00      	add	r7, sp, #0
 8003ccc:	7138      	strb	r0, [r7, #4]
 8003cce:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8003cd0:	6838      	ldr	r0, [r7, #0]
 8003cd2:	f001 f90e 	bl	8004ef2 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISB_E4typeE>
 8003cd6:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8003cd8:	4619      	mov	r1, r3
 8003cda:	4620      	mov	r0, r4
 8003cdc:	f7ff ffe2 	bl	8003ca4 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP15While_statementP12If_statementEEEEEDcSt16in_place_index_tILj0EEOT_>
 8003ce0:	4603      	mov	r3, r0
    }
 8003ce2:	4618      	mov	r0, r3
 8003ce4:	370c      	adds	r7, #12
 8003ce6:	46bd      	mov	sp, r7
 8003ce8:	bd90      	pop	{r4, r7, pc}

08003cea <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8003cea:	b590      	push	{r4, r7, lr}
 8003cec:	b083      	sub	sp, #12
 8003cee:	af00      	add	r7, sp, #0
 8003cf0:	7138      	strb	r0, [r7, #4]
 8003cf2:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8003cf4:	6838      	ldr	r0, [r7, #0]
 8003cf6:	f001 f8e6 	bl	8004ec6 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP13Function_callP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8003cfa:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8003cfc:	4619      	mov	r1, r3
 8003cfe:	4620      	mov	r0, r4
 8003d00:	f7ff ffe1 	bl	8003cc6 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8003d04:	4603      	mov	r3, r0
    }
 8003d06:	4618      	mov	r0, r3
 8003d08:	370c      	adds	r7, #12
 8003d0a:	46bd      	mov	sp, r7
 8003d0c:	bd90      	pop	{r4, r7, pc}

08003d0e <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8003d0e:	b590      	push	{r4, r7, lr}
 8003d10:	b083      	sub	sp, #12
 8003d12:	af00      	add	r7, sp, #0
 8003d14:	7138      	strb	r0, [r7, #4]
 8003d16:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8003d18:	6838      	ldr	r0, [r7, #0]
 8003d1a:	f001 f8be 	bl	8004e9a <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8003d1e:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8003d20:	4619      	mov	r1, r3
 8003d22:	4620      	mov	r0, r4
 8003d24:	f7ff ffe1 	bl	8003cea <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8003d28:	4603      	mov	r3, r0
    }
 8003d2a:	4618      	mov	r0, r3
 8003d2c:	370c      	adds	r7, #12
 8003d2e:	46bd      	mov	sp, r7
 8003d30:	bd90      	pop	{r4, r7, pc}

08003d32 <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8003d32:	b590      	push	{r4, r7, lr}
 8003d34:	b083      	sub	sp, #12
 8003d36:	af00      	add	r7, sp, #0
 8003d38:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8003d3a:	6878      	ldr	r0, [r7, #4]
 8003d3c:	f001 f8a2 	bl	8004e84 <_ZSt7forwardIRSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEOT_RNSt16remove_referenceISD_E4typeE>
 8003d40:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8003d42:	4619      	mov	r1, r3
 8003d44:	4620      	mov	r0, r4
 8003d46:	f7ff ffe2 	bl	8003d0e <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8003d4a:	4603      	mov	r3, r0
    }
 8003d4c:	4618      	mov	r0, r3
 8003d4e:	370c      	adds	r7, #12
 8003d50:	46bd      	mov	sp, r7
 8003d52:	bd90      	pop	{r4, r7, pc}

08003d54 <_ZSt3getILj3EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
    get(variant<_Types...>& __v)
 8003d54:	b580      	push	{r7, lr}
 8003d56:	b082      	sub	sp, #8
 8003d58:	af00      	add	r7, sp, #0
 8003d5a:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 8003d5c:	6878      	ldr	r0, [r7, #4]
 8003d5e:	f7ff fe9d 	bl	8003a9c <_ZNKSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE5indexEv>
 8003d62:	4603      	mov	r3, r0
 8003d64:	2b03      	cmp	r3, #3
 8003d66:	bf14      	ite	ne
 8003d68:	2301      	movne	r3, #1
 8003d6a:	2300      	moveq	r3, #0
 8003d6c:	b2db      	uxtb	r3, r3
 8003d6e:	2b00      	cmp	r3, #0
 8003d70:	d002      	beq.n	8003d78 <_ZSt3getILj3EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 8003d72:	4805      	ldr	r0, [pc, #20]	; (8003d88 <_ZSt3getILj3EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 8003d74:	f7fd f97d 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 8003d78:	6878      	ldr	r0, [r7, #4]
 8003d7a:	f7ff ffda 	bl	8003d32 <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>
 8003d7e:	4603      	mov	r3, r0
    }
 8003d80:	4618      	mov	r0, r3
 8003d82:	3708      	adds	r7, #8
 8003d84:	46bd      	mov	sp, r7
 8003d86:	bd80      	pop	{r7, pc}
 8003d88:	08029488 	.word	0x08029488

08003d8c <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP12If_statementEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8003d8c:	b580      	push	{r7, lr}
 8003d8e:	b082      	sub	sp, #8
 8003d90:	af00      	add	r7, sp, #0
 8003d92:	7138      	strb	r0, [r7, #4]
 8003d94:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8003d96:	6838      	ldr	r0, [r7, #0]
 8003d98:	f001 f8d7 	bl	8004f4a <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP12If_statementEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 8003d9c:	4603      	mov	r3, r0
 8003d9e:	4618      	mov	r0, r3
 8003da0:	f001 f8de 	bl	8004f60 <_ZNRSt8__detail9__variant14_UninitializedIP12If_statementLb1EE6_M_getEv>
 8003da4:	4603      	mov	r3, r0
 8003da6:	4618      	mov	r0, r3
 8003da8:	3708      	adds	r7, #8
 8003daa:	46bd      	mov	sp, r7
 8003dac:	bd80      	pop	{r7, pc}

08003dae <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8003dae:	b590      	push	{r4, r7, lr}
 8003db0:	b083      	sub	sp, #12
 8003db2:	af00      	add	r7, sp, #0
 8003db4:	7138      	strb	r0, [r7, #4]
 8003db6:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8003db8:	6838      	ldr	r0, [r7, #0]
 8003dba:	f001 f8b0 	bl	8004f1e <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8003dbe:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8003dc0:	4619      	mov	r1, r3
 8003dc2:	4620      	mov	r0, r4
 8003dc4:	f7ff ffe2 	bl	8003d8c <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP12If_statementEEEEEDcSt16in_place_index_tILj0EEOT_>
 8003dc8:	4603      	mov	r3, r0
    }
 8003dca:	4618      	mov	r0, r3
 8003dcc:	370c      	adds	r7, #12
 8003dce:	46bd      	mov	sp, r7
 8003dd0:	bd90      	pop	{r4, r7, pc}

08003dd2 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8003dd2:	b590      	push	{r4, r7, lr}
 8003dd4:	b083      	sub	sp, #12
 8003dd6:	af00      	add	r7, sp, #0
 8003dd8:	7138      	strb	r0, [r7, #4]
 8003dda:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8003ddc:	6838      	ldr	r0, [r7, #0]
 8003dde:	f001 f888 	bl	8004ef2 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISB_E4typeE>
 8003de2:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8003de4:	4619      	mov	r1, r3
 8003de6:	4620      	mov	r0, r4
 8003de8:	f7ff ffe1 	bl	8003dae <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8003dec:	4603      	mov	r3, r0
    }
 8003dee:	4618      	mov	r0, r3
 8003df0:	370c      	adds	r7, #12
 8003df2:	46bd      	mov	sp, r7
 8003df4:	bd90      	pop	{r4, r7, pc}

08003df6 <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8003df6:	b590      	push	{r4, r7, lr}
 8003df8:	b083      	sub	sp, #12
 8003dfa:	af00      	add	r7, sp, #0
 8003dfc:	7138      	strb	r0, [r7, #4]
 8003dfe:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8003e00:	6838      	ldr	r0, [r7, #0]
 8003e02:	f001 f860 	bl	8004ec6 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP13Function_callP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8003e06:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8003e08:	4619      	mov	r1, r3
 8003e0a:	4620      	mov	r0, r4
 8003e0c:	f7ff ffe1 	bl	8003dd2 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8003e10:	4603      	mov	r3, r0
    }
 8003e12:	4618      	mov	r0, r3
 8003e14:	370c      	adds	r7, #12
 8003e16:	46bd      	mov	sp, r7
 8003e18:	bd90      	pop	{r4, r7, pc}

08003e1a <_ZNSt8__detail9__variant5__getILj4ERNS0_15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8003e1a:	b590      	push	{r4, r7, lr}
 8003e1c:	b083      	sub	sp, #12
 8003e1e:	af00      	add	r7, sp, #0
 8003e20:	7138      	strb	r0, [r7, #4]
 8003e22:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8003e24:	6838      	ldr	r0, [r7, #0]
 8003e26:	f001 f838 	bl	8004e9a <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8003e2a:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8003e2c:	4619      	mov	r1, r3
 8003e2e:	4620      	mov	r0, r4
 8003e30:	f7ff ffe1 	bl	8003df6 <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8003e34:	4603      	mov	r3, r0
    }
 8003e36:	4618      	mov	r0, r3
 8003e38:	370c      	adds	r7, #12
 8003e3a:	46bd      	mov	sp, r7
 8003e3c:	bd90      	pop	{r4, r7, pc}

08003e3e <_ZNSt8__detail9__variant5__getILj4ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8003e3e:	b590      	push	{r4, r7, lr}
 8003e40:	b083      	sub	sp, #12
 8003e42:	af00      	add	r7, sp, #0
 8003e44:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8003e46:	6878      	ldr	r0, [r7, #4]
 8003e48:	f001 f81c 	bl	8004e84 <_ZSt7forwardIRSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEOT_RNSt16remove_referenceISD_E4typeE>
 8003e4c:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8003e4e:	4619      	mov	r1, r3
 8003e50:	4620      	mov	r0, r4
 8003e52:	f7ff ffe2 	bl	8003e1a <_ZNSt8__detail9__variant5__getILj4ERNS0_15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8003e56:	4603      	mov	r3, r0
    }
 8003e58:	4618      	mov	r0, r3
 8003e5a:	370c      	adds	r7, #12
 8003e5c:	46bd      	mov	sp, r7
 8003e5e:	bd90      	pop	{r4, r7, pc}

08003e60 <_ZSt3getILj4EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
    get(variant<_Types...>& __v)
 8003e60:	b580      	push	{r7, lr}
 8003e62:	b082      	sub	sp, #8
 8003e64:	af00      	add	r7, sp, #0
 8003e66:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 8003e68:	6878      	ldr	r0, [r7, #4]
 8003e6a:	f7ff fe17 	bl	8003a9c <_ZNKSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE5indexEv>
 8003e6e:	4603      	mov	r3, r0
 8003e70:	2b04      	cmp	r3, #4
 8003e72:	bf14      	ite	ne
 8003e74:	2301      	movne	r3, #1
 8003e76:	2300      	moveq	r3, #0
 8003e78:	b2db      	uxtb	r3, r3
 8003e7a:	2b00      	cmp	r3, #0
 8003e7c:	d002      	beq.n	8003e84 <_ZSt3getILj4EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 8003e7e:	4805      	ldr	r0, [pc, #20]	; (8003e94 <_ZSt3getILj4EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 8003e80:	f7fd f8f7 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 8003e84:	6878      	ldr	r0, [r7, #4]
 8003e86:	f7ff ffda 	bl	8003e3e <_ZNSt8__detail9__variant5__getILj4ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>
 8003e8a:	4603      	mov	r3, r0
    }
 8003e8c:	4618      	mov	r0, r3
 8003e8e:	3708      	adds	r7, #8
 8003e90:	46bd      	mov	sp, r7
 8003e92:	bd80      	pop	{r7, pc}
 8003e94:	08029488 	.word	0x08029488

08003e98 <_ZNSt6vectorIP4BodySaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 8003e98:	b580      	push	{r7, lr}
 8003e9a:	b084      	sub	sp, #16
 8003e9c:	af00      	add	r7, sp, #0
 8003e9e:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_finish); }
 8003ea0:	687b      	ldr	r3, [r7, #4]
 8003ea2:	1d1a      	adds	r2, r3, #4
 8003ea4:	f107 030c 	add.w	r3, r7, #12
 8003ea8:	4611      	mov	r1, r2
 8003eaa:	4618      	mov	r0, r3
 8003eac:	f001 f863 	bl	8004f76 <_ZN9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEEC1ERKS3_>
 8003eb0:	68fb      	ldr	r3, [r7, #12]
 8003eb2:	4618      	mov	r0, r3
 8003eb4:	3710      	adds	r7, #16
 8003eb6:	46bd      	mov	sp, r7
 8003eb8:	bd80      	pop	{r7, pc}

08003eba <_ZNK9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEEmiEi>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
 8003eba:	b580      	push	{r7, lr}
 8003ebc:	b084      	sub	sp, #16
 8003ebe:	af00      	add	r7, sp, #0
 8003ec0:	6078      	str	r0, [r7, #4]
 8003ec2:	6039      	str	r1, [r7, #0]
      { return __normal_iterator(_M_current - __n); }
 8003ec4:	687b      	ldr	r3, [r7, #4]
 8003ec6:	681a      	ldr	r2, [r3, #0]
 8003ec8:	683b      	ldr	r3, [r7, #0]
 8003eca:	009b      	lsls	r3, r3, #2
 8003ecc:	425b      	negs	r3, r3
 8003ece:	4413      	add	r3, r2
 8003ed0:	60fb      	str	r3, [r7, #12]
 8003ed2:	f107 020c 	add.w	r2, r7, #12
 8003ed6:	f107 0308 	add.w	r3, r7, #8
 8003eda:	4611      	mov	r1, r2
 8003edc:	4618      	mov	r0, r3
 8003ede:	f001 f84a 	bl	8004f76 <_ZN9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEEC1ERKS3_>
 8003ee2:	68bb      	ldr	r3, [r7, #8]
 8003ee4:	4618      	mov	r0, r3
 8003ee6:	3710      	adds	r7, #16
 8003ee8:	46bd      	mov	sp, r7
 8003eea:	bd80      	pop	{r7, pc}

08003eec <_ZNK9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
 8003eec:	b480      	push	{r7}
 8003eee:	b083      	sub	sp, #12
 8003ef0:	af00      	add	r7, sp, #0
 8003ef2:	6078      	str	r0, [r7, #4]
      { return *_M_current; }
 8003ef4:	687b      	ldr	r3, [r7, #4]
 8003ef6:	681b      	ldr	r3, [r3, #0]
 8003ef8:	4618      	mov	r0, r3
 8003efa:	370c      	adds	r7, #12
 8003efc:	46bd      	mov	sp, r7
 8003efe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f02:	4770      	bx	lr

08003f04 <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8003f04:	b480      	push	{r7}
 8003f06:	b083      	sub	sp, #12
 8003f08:	af00      	add	r7, sp, #0
 8003f0a:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8003f0c:	687b      	ldr	r3, [r7, #4]
 8003f0e:	4618      	mov	r0, r3
 8003f10:	370c      	adds	r7, #12
 8003f12:	46bd      	mov	sp, r7
 8003f14:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f18:	4770      	bx	lr

08003f1a <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8003f1a:	b480      	push	{r7}
 8003f1c:	b083      	sub	sp, #12
 8003f1e:	af00      	add	r7, sp, #0
 8003f20:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8003f22:	687b      	ldr	r3, [r7, #4]
 8003f24:	4618      	mov	r0, r3
 8003f26:	370c      	adds	r7, #12
 8003f28:	46bd      	mov	sp, r7
 8003f2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f2e:	4770      	bx	lr

08003f30 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8003f30:	b480      	push	{r7}
 8003f32:	b083      	sub	sp, #12
 8003f34:	af00      	add	r7, sp, #0
 8003f36:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8003f38:	687b      	ldr	r3, [r7, #4]
 8003f3a:	4618      	mov	r0, r3
 8003f3c:	370c      	adds	r7, #12
 8003f3e:	46bd      	mov	sp, r7
 8003f40:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f44:	4770      	bx	lr

08003f46 <_ZNKRSt8__detail9__variant14_UninitializedIiLb1EE6_M_getEv>:
      constexpr const _Type& _M_get() const & noexcept
 8003f46:	b480      	push	{r7}
 8003f48:	b083      	sub	sp, #12
 8003f4a:	af00      	add	r7, sp, #0
 8003f4c:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 8003f4e:	687b      	ldr	r3, [r7, #4]
 8003f50:	4618      	mov	r0, r3
 8003f52:	370c      	adds	r7, #12
 8003f54:	46bd      	mov	sp, r7
 8003f56:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f5a:	4770      	bx	lr

08003f5c <_ZSt8__invokeIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_JRKiSt17integral_constantIjLj0EEEENSt15__invoke_resultISG_JDpT0_EE4typeESH_DpOSP_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8003f5c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003f60:	b084      	sub	sp, #16
 8003f62:	af00      	add	r7, sp, #0
 8003f64:	60f8      	str	r0, [r7, #12]
 8003f66:	60b9      	str	r1, [r7, #8]
 8003f68:	607a      	str	r2, [r7, #4]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8003f6a:	68f8      	ldr	r0, [r7, #12]
 8003f6c:	f000 f8f3 	bl	8004156 <_ZSt7forwardIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8003f70:	4604      	mov	r4, r0
 8003f72:	68b8      	ldr	r0, [r7, #8]
 8003f74:	f001 f80f 	bl	8004f96 <_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE>
 8003f78:	4605      	mov	r5, r0
 8003f7a:	6878      	ldr	r0, [r7, #4]
 8003f7c:	f000 fe71 	bl	8004c62 <_ZSt7forwardISt17integral_constantIjLj0EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8003f80:	4603      	mov	r3, r0
 8003f82:	462a      	mov	r2, r5
 8003f84:	4621      	mov	r1, r4
 8003f86:	4630      	mov	r0, r6
 8003f88:	f001 f810 	bl	8004fac <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSERKSE_EUlOT_T0_E_JRKiSt17integral_constantIjLj0EEEESH_St14__invoke_otherOSJ_DpOT1_>
					std::forward<_Args>(__args)...);
 8003f8c:	4643      	mov	r3, r8
    }
 8003f8e:	4618      	mov	r0, r3
 8003f90:	3710      	adds	r7, #16
 8003f92:	46bd      	mov	sp, r7
 8003f94:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08003f98 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8003f98:	b480      	push	{r7}
 8003f9a:	b083      	sub	sp, #12
 8003f9c:	af00      	add	r7, sp, #0
 8003f9e:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8003fa0:	687b      	ldr	r3, [r7, #4]
 8003fa2:	4618      	mov	r0, r3
 8003fa4:	370c      	adds	r7, #12
 8003fa6:	46bd      	mov	sp, r7
 8003fa8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003fac:	4770      	bx	lr

08003fae <_ZNKRSt8__detail9__variant14_UninitializedIfLb1EE6_M_getEv>:
      constexpr const _Type& _M_get() const & noexcept
 8003fae:	b480      	push	{r7}
 8003fb0:	b083      	sub	sp, #12
 8003fb2:	af00      	add	r7, sp, #0
 8003fb4:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 8003fb6:	687b      	ldr	r3, [r7, #4]
 8003fb8:	4618      	mov	r0, r3
 8003fba:	370c      	adds	r7, #12
 8003fbc:	46bd      	mov	sp, r7
 8003fbe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003fc2:	4770      	bx	lr

08003fc4 <_ZSt8__invokeIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_JRKfSt17integral_constantIjLj1EEEENSt15__invoke_resultISG_JDpT0_EE4typeESH_DpOSP_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8003fc4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003fc8:	b084      	sub	sp, #16
 8003fca:	af00      	add	r7, sp, #0
 8003fcc:	60f8      	str	r0, [r7, #12]
 8003fce:	60b9      	str	r1, [r7, #8]
 8003fd0:	607a      	str	r2, [r7, #4]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8003fd2:	68f8      	ldr	r0, [r7, #12]
 8003fd4:	f000 f8bf 	bl	8004156 <_ZSt7forwardIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8003fd8:	4604      	mov	r4, r0
 8003fda:	68b8      	ldr	r0, [r7, #8]
 8003fdc:	f001 f804 	bl	8004fe8 <_ZSt7forwardIRKfEOT_RNSt16remove_referenceIS2_E4typeE>
 8003fe0:	4605      	mov	r5, r0
 8003fe2:	6878      	ldr	r0, [r7, #4]
 8003fe4:	f000 fe71 	bl	8004cca <_ZSt7forwardISt17integral_constantIjLj1EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8003fe8:	4603      	mov	r3, r0
 8003fea:	462a      	mov	r2, r5
 8003fec:	4621      	mov	r1, r4
 8003fee:	4630      	mov	r0, r6
 8003ff0:	f001 f805 	bl	8004ffe <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSERKSE_EUlOT_T0_E_JRKfSt17integral_constantIjLj1EEEESH_St14__invoke_otherOSJ_DpOT1_>
					std::forward<_Args>(__args)...);
 8003ff4:	4643      	mov	r3, r8
    }
 8003ff6:	4618      	mov	r0, r3
 8003ff8:	3710      	adds	r7, #16
 8003ffa:	46bd      	mov	sp, r7
 8003ffc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08004000 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8004000:	b480      	push	{r7}
 8004002:	b083      	sub	sp, #12
 8004004:	af00      	add	r7, sp, #0
 8004006:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8004008:	687b      	ldr	r3, [r7, #4]
 800400a:	4618      	mov	r0, r3
 800400c:	370c      	adds	r7, #12
 800400e:	46bd      	mov	sp, r7
 8004010:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004014:	4770      	bx	lr

08004016 <_ZNKRSt8__detail9__variant14_UninitializedIbLb1EE6_M_getEv>:
      constexpr const _Type& _M_get() const & noexcept
 8004016:	b480      	push	{r7}
 8004018:	b083      	sub	sp, #12
 800401a:	af00      	add	r7, sp, #0
 800401c:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 800401e:	687b      	ldr	r3, [r7, #4]
 8004020:	4618      	mov	r0, r3
 8004022:	370c      	adds	r7, #12
 8004024:	46bd      	mov	sp, r7
 8004026:	f85d 7b04 	ldr.w	r7, [sp], #4
 800402a:	4770      	bx	lr

0800402c <_ZSt8__invokeIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_JRKbSt17integral_constantIjLj2EEEENSt15__invoke_resultISG_JDpT0_EE4typeESH_DpOSP_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 800402c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004030:	b084      	sub	sp, #16
 8004032:	af00      	add	r7, sp, #0
 8004034:	60f8      	str	r0, [r7, #12]
 8004036:	60b9      	str	r1, [r7, #8]
 8004038:	607a      	str	r2, [r7, #4]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 800403a:	68f8      	ldr	r0, [r7, #12]
 800403c:	f000 f88b 	bl	8004156 <_ZSt7forwardIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8004040:	4604      	mov	r4, r0
 8004042:	68b8      	ldr	r0, [r7, #8]
 8004044:	f000 fff9 	bl	800503a <_ZSt7forwardIRKbEOT_RNSt16remove_referenceIS2_E4typeE>
 8004048:	4605      	mov	r5, r0
 800404a:	6878      	ldr	r0, [r7, #4]
 800404c:	f000 fe71 	bl	8004d32 <_ZSt7forwardISt17integral_constantIjLj2EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8004050:	4603      	mov	r3, r0
 8004052:	462a      	mov	r2, r5
 8004054:	4621      	mov	r1, r4
 8004056:	4630      	mov	r0, r6
 8004058:	f000 fffa 	bl	8005050 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSERKSE_EUlOT_T0_E_JRKbSt17integral_constantIjLj2EEEESH_St14__invoke_otherOSJ_DpOT1_>
					std::forward<_Args>(__args)...);
 800405c:	4643      	mov	r3, r8
    }
 800405e:	4618      	mov	r0, r3
 8004060:	3710      	adds	r7, #16
 8004062:	46bd      	mov	sp, r7
 8004064:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08004068 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8004068:	b480      	push	{r7}
 800406a:	b083      	sub	sp, #12
 800406c:	af00      	add	r7, sp, #0
 800406e:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8004070:	687b      	ldr	r3, [r7, #4]
 8004072:	4618      	mov	r0, r3
 8004074:	370c      	adds	r7, #12
 8004076:	46bd      	mov	sp, r7
 8004078:	f85d 7b04 	ldr.w	r7, [sp], #4
 800407c:	4770      	bx	lr

0800407e <_ZNKRSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE6_M_getEv>:
      const _Type& _M_get() const & noexcept
 800407e:	b580      	push	{r7, lr}
 8004080:	b082      	sub	sp, #8
 8004082:	af00      	add	r7, sp, #0
 8004084:	6078      	str	r0, [r7, #4]
      { return *_M_storage._M_ptr(); }
 8004086:	687b      	ldr	r3, [r7, #4]
 8004088:	4618      	mov	r0, r3
 800408a:	f000 ffff 	bl	800508c <_ZNK9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE6_M_ptrEv>
 800408e:	4603      	mov	r3, r0
 8004090:	4618      	mov	r0, r3
 8004092:	3708      	adds	r7, #8
 8004094:	46bd      	mov	sp, r7
 8004096:	bd80      	pop	{r7, pc}

08004098 <_ZSt8__invokeIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_JRKS8_St17integral_constantIjLj3EEEENSt15__invoke_resultISG_JDpT0_EE4typeESH_DpOSP_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8004098:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800409c:	b084      	sub	sp, #16
 800409e:	af00      	add	r7, sp, #0
 80040a0:	60f8      	str	r0, [r7, #12]
 80040a2:	60b9      	str	r1, [r7, #8]
 80040a4:	607a      	str	r2, [r7, #4]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 80040a6:	68f8      	ldr	r0, [r7, #12]
 80040a8:	f000 f855 	bl	8004156 <_ZSt7forwardIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 80040ac:	4604      	mov	r4, r0
 80040ae:	68b8      	ldr	r0, [r7, #8]
 80040b0:	f000 fff8 	bl	80050a4 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 80040b4:	4605      	mov	r5, r0
 80040b6:	6878      	ldr	r0, [r7, #4]
 80040b8:	f000 fe7b 	bl	8004db2 <_ZSt7forwardISt17integral_constantIjLj3EEEOT_RNSt16remove_referenceIS2_E4typeE>
 80040bc:	4603      	mov	r3, r0
 80040be:	462a      	mov	r2, r5
 80040c0:	4621      	mov	r1, r4
 80040c2:	4630      	mov	r0, r6
 80040c4:	f000 fff9 	bl	80050ba <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSERKSE_EUlOT_T0_E_JRKS9_St17integral_constantIjLj3EEEESH_St14__invoke_otherOSJ_DpOT1_>
					std::forward<_Args>(__args)...);
 80040c8:	4643      	mov	r3, r8
    }
 80040ca:	4618      	mov	r0, r3
 80040cc:	3710      	adds	r7, #16
 80040ce:	46bd      	mov	sp, r7
 80040d0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080040d4 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJSt6vectorI6SymbolSaIS4_EEEEEEOT_RNSt16remove_referenceISA_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80040d4:	b480      	push	{r7}
 80040d6:	b083      	sub	sp, #12
 80040d8:	af00      	add	r7, sp, #0
 80040da:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80040dc:	687b      	ldr	r3, [r7, #4]
 80040de:	4618      	mov	r0, r3
 80040e0:	370c      	adds	r7, #12
 80040e2:	46bd      	mov	sp, r7
 80040e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80040e8:	4770      	bx	lr

080040ea <_ZNKRSt8__detail9__variant14_UninitializedISt6vectorI6SymbolSaIS3_EELb0EE6_M_getEv>:
      const _Type& _M_get() const & noexcept
 80040ea:	b580      	push	{r7, lr}
 80040ec:	b082      	sub	sp, #8
 80040ee:	af00      	add	r7, sp, #0
 80040f0:	6078      	str	r0, [r7, #4]
      { return *_M_storage._M_ptr(); }
 80040f2:	687b      	ldr	r3, [r7, #4]
 80040f4:	4618      	mov	r0, r3
 80040f6:	f000 fffe 	bl	80050f6 <_ZNK9__gnu_cxx16__aligned_membufISt6vectorI6SymbolSaIS2_EEE6_M_ptrEv>
 80040fa:	4603      	mov	r3, r0
 80040fc:	4618      	mov	r0, r3
 80040fe:	3708      	adds	r7, #8
 8004100:	46bd      	mov	sp, r7
 8004102:	bd80      	pop	{r7, pc}

08004104 <_ZSt8__invokeIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_JRKSC_St17integral_constantIjLj4EEEENSt15__invoke_resultISG_JDpT0_EE4typeESH_DpOSP_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8004104:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004108:	b084      	sub	sp, #16
 800410a:	af00      	add	r7, sp, #0
 800410c:	60f8      	str	r0, [r7, #12]
 800410e:	60b9      	str	r1, [r7, #8]
 8004110:	607a      	str	r2, [r7, #4]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8004112:	68f8      	ldr	r0, [r7, #12]
 8004114:	f000 f81f 	bl	8004156 <_ZSt7forwardIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8004118:	4604      	mov	r4, r0
 800411a:	68b8      	ldr	r0, [r7, #8]
 800411c:	f000 fff7 	bl	800510e <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>
 8004120:	4605      	mov	r5, r0
 8004122:	6878      	ldr	r0, [r7, #4]
 8004124:	f000 fe85 	bl	8004e32 <_ZSt7forwardISt17integral_constantIjLj4EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8004128:	4603      	mov	r3, r0
 800412a:	462a      	mov	r2, r5
 800412c:	4621      	mov	r1, r4
 800412e:	4630      	mov	r0, r6
 8004130:	f000 fff8 	bl	8005124 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSERKSE_EUlOT_T0_E_JRKSD_St17integral_constantIjLj4EEEESH_St14__invoke_otherOSJ_DpOT1_>
					std::forward<_Args>(__args)...);
 8004134:	4643      	mov	r3, r8
    }
 8004136:	4618      	mov	r0, r3
 8004138:	3710      	adds	r7, #16
 800413a:	46bd      	mov	sp, r7
 800413c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08004140 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSERKSE_EUlOT_T0_E_RKSt7variantIJifbS9_SD_EEEJEE9_M_accessEv>:
      _M_access() const
 8004140:	b480      	push	{r7}
 8004142:	b083      	sub	sp, #12
 8004144:	af00      	add	r7, sp, #0
 8004146:	6078      	str	r0, [r7, #4]
      { return _M_data; }
 8004148:	687b      	ldr	r3, [r7, #4]
 800414a:	4618      	mov	r0, r3
 800414c:	370c      	adds	r7, #12
 800414e:	46bd      	mov	sp, r7
 8004150:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004154:	4770      	bx	lr

08004156 <_ZSt7forwardIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8004156:	b480      	push	{r7}
 8004158:	b083      	sub	sp, #12
 800415a:	af00      	add	r7, sp, #0
 800415c:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800415e:	687b      	ldr	r3, [r7, #4]
 8004160:	4618      	mov	r0, r3
 8004162:	370c      	adds	r7, #12
 8004164:	46bd      	mov	sp, r7
 8004166:	f85d 7b04 	ldr.w	r7, [sp], #4
 800416a:	4770      	bx	lr

0800416c <_ZSt3getILj0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
    get(variant<_Types...>& __v)
 800416c:	b580      	push	{r7, lr}
 800416e:	b082      	sub	sp, #8
 8004170:	af00      	add	r7, sp, #0
 8004172:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 8004174:	6878      	ldr	r0, [r7, #4]
 8004176:	f7fe fa3a 	bl	80025ee <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv>
 800417a:	4603      	mov	r3, r0
 800417c:	2b00      	cmp	r3, #0
 800417e:	bf14      	ite	ne
 8004180:	2301      	movne	r3, #1
 8004182:	2300      	moveq	r3, #0
 8004184:	b2db      	uxtb	r3, r3
 8004186:	2b00      	cmp	r3, #0
 8004188:	d002      	beq.n	8004190 <_ZSt3getILj0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 800418a:	4805      	ldr	r0, [pc, #20]	; (80041a0 <_ZSt3getILj0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 800418c:	f7fc ff71 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 8004190:	6878      	ldr	r0, [r7, #4]
 8004192:	f7fd ff16 	bl	8001fc2 <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8004196:	4603      	mov	r3, r0
    }
 8004198:	4618      	mov	r0, r3
 800419a:	3708      	adds	r7, #8
 800419c:	46bd      	mov	sp, r7
 800419e:	bd80      	pop	{r7, pc}
 80041a0:	08029488 	.word	0x08029488

080041a4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_construct_auxIPKcEEvT_S8_St12__false_type>:
        _M_construct_aux(_InIterator __beg, _InIterator __end,
 80041a4:	b590      	push	{r4, r7, lr}
 80041a6:	b087      	sub	sp, #28
 80041a8:	af00      	add	r7, sp, #0
 80041aa:	60f8      	str	r0, [r7, #12]
 80041ac:	60b9      	str	r1, [r7, #8]
 80041ae:	607a      	str	r2, [r7, #4]
 80041b0:	703b      	strb	r3, [r7, #0]
          _M_construct(__beg, __end, _Tag());
 80041b2:	4623      	mov	r3, r4
 80041b4:	687a      	ldr	r2, [r7, #4]
 80041b6:	68b9      	ldr	r1, [r7, #8]
 80041b8:	68f8      	ldr	r0, [r7, #12]
 80041ba:	f000 ffe5 	bl	8005188 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
	}
 80041be:	bf00      	nop
 80041c0:	371c      	adds	r7, #28
 80041c2:	46bd      	mov	sp, r7
 80041c4:	bd90      	pop	{r4, r7, pc}

080041c6 <_ZN9__gnu_cxx13new_allocatorISt4pairIKc10token_typeEEC1ERKS5_>:
      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
 80041c6:	b480      	push	{r7}
 80041c8:	b083      	sub	sp, #12
 80041ca:	af00      	add	r7, sp, #0
 80041cc:	6078      	str	r0, [r7, #4]
 80041ce:	6039      	str	r1, [r7, #0]
 80041d0:	687b      	ldr	r3, [r7, #4]
 80041d2:	4618      	mov	r0, r3
 80041d4:	370c      	adds	r7, #12
 80041d6:	46bd      	mov	sp, r7
 80041d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80041dc:	4770      	bx	lr

080041de <_ZNSaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEC1IS3_EERKSaIT_E>:
	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }
 80041de:	b580      	push	{r7, lr}
 80041e0:	b082      	sub	sp, #8
 80041e2:	af00      	add	r7, sp, #0
 80041e4:	6078      	str	r0, [r7, #4]
 80041e6:	6039      	str	r1, [r7, #0]
 80041e8:	6878      	ldr	r0, [r7, #4]
 80041ea:	f001 f815 	bl	8005218 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEC1Ev>
 80041ee:	687b      	ldr	r3, [r7, #4]
 80041f0:	4618      	mov	r0, r3
 80041f2:	3708      	adds	r7, #8
 80041f4:	46bd      	mov	sp, r7
 80041f6:	bd80      	pop	{r7, pc}

080041f8 <_ZNSaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
 80041f8:	b580      	push	{r7, lr}
 80041fa:	b082      	sub	sp, #8
 80041fc:	af00      	add	r7, sp, #0
 80041fe:	6078      	str	r0, [r7, #4]
 8004200:	6878      	ldr	r0, [r7, #4]
 8004202:	f001 f814 	bl	800522e <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEED1Ev>
 8004206:	687b      	ldr	r3, [r7, #4]
 8004208:	4618      	mov	r0, r3
 800420a:	3708      	adds	r7, #8
 800420c:	46bd      	mov	sp, r7
 800420e:	bd80      	pop	{r7, pc}

08004210 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE13_Rb_tree_implIS7_Lb1EEC1ERKS7_OSaISt13_Rb_tree_nodeIS3_EE>:
	  _Rb_tree_impl(const _Key_compare& __comp, _Node_allocator&& __a)
 8004210:	b580      	push	{r7, lr}
 8004212:	b084      	sub	sp, #16
 8004214:	af00      	add	r7, sp, #0
 8004216:	60f8      	str	r0, [r7, #12]
 8004218:	60b9      	str	r1, [r7, #8]
 800421a:	607a      	str	r2, [r7, #4]
	  : _Node_allocator(std::move(__a)), _Base_key_compare(__comp)
 800421c:	6878      	ldr	r0, [r7, #4]
 800421e:	f001 f811 	bl	8005244 <_ZSt4moveIRSaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEEONSt16remove_referenceIT_E4typeEOS9_>
 8004222:	4603      	mov	r3, r0
 8004224:	4619      	mov	r1, r3
 8004226:	68f8      	ldr	r0, [r7, #12]
 8004228:	f001 f817 	bl	800525a <_ZNSaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEC1ERKS5_>
 800422c:	68fb      	ldr	r3, [r7, #12]
 800422e:	68b9      	ldr	r1, [r7, #8]
 8004230:	4618      	mov	r0, r3
 8004232:	f001 f820 	bl	8005276 <_ZNSt20_Rb_tree_key_compareISt4lessIcEEC1ERKS1_>
 8004236:	68fb      	ldr	r3, [r7, #12]
 8004238:	3304      	adds	r3, #4
 800423a:	4618      	mov	r0, r3
 800423c:	f7fc ff1f 	bl	800107e <_ZNSt15_Rb_tree_headerC1Ev>
	  { }
 8004240:	68fb      	ldr	r3, [r7, #12]
 8004242:	4618      	mov	r0, r3
 8004244:	3710      	adds	r7, #16
 8004246:	46bd      	mov	sp, r7
 8004248:	bd80      	pop	{r7, pc}

0800424a <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E>:
      }

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    void
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 800424a:	b580      	push	{r7, lr}
 800424c:	b084      	sub	sp, #16
 800424e:	af00      	add	r7, sp, #0
 8004250:	6078      	str	r0, [r7, #4]
 8004252:	6039      	str	r1, [r7, #0]
    _M_erase(_Link_type __x)
    {
      // Erase without rebalancing.
      while (__x != 0)
 8004254:	683b      	ldr	r3, [r7, #0]
 8004256:	2b00      	cmp	r3, #0
 8004258:	d012      	beq.n	8004280 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E+0x36>
	{
	  _M_erase(_S_right(__x));
 800425a:	6838      	ldr	r0, [r7, #0]
 800425c:	f001 f817 	bl	800528e <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base>
 8004260:	4603      	mov	r3, r0
 8004262:	4619      	mov	r1, r3
 8004264:	6878      	ldr	r0, [r7, #4]
 8004266:	f7ff fff0 	bl	800424a <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E>
	  _Link_type __y = _S_left(__x);
 800426a:	6838      	ldr	r0, [r7, #0]
 800426c:	f001 f81b 	bl	80052a6 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE7_S_leftEPSt18_Rb_tree_node_base>
 8004270:	60f8      	str	r0, [r7, #12]
	  _M_drop_node(__x);
 8004272:	6839      	ldr	r1, [r7, #0]
 8004274:	6878      	ldr	r0, [r7, #4]
 8004276:	f001 f822 	bl	80052be <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS3_E>
	  __x = __y;
 800427a:	68fb      	ldr	r3, [r7, #12]
 800427c:	603b      	str	r3, [r7, #0]
      while (__x != 0)
 800427e:	e7e9      	b.n	8004254 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E+0xa>
	}
    }
 8004280:	bf00      	nop
 8004282:	3710      	adds	r7, #16
 8004284:	46bd      	mov	sp, r7
 8004286:	bd80      	pop	{r7, pc}

08004288 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_beginEv>:
      _M_begin() _GLIBCXX_NOEXCEPT
 8004288:	b480      	push	{r7}
 800428a:	b083      	sub	sp, #12
 800428c:	af00      	add	r7, sp, #0
 800428e:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
 8004290:	687b      	ldr	r3, [r7, #4]
 8004292:	689b      	ldr	r3, [r3, #8]
 8004294:	4618      	mov	r0, r3
 8004296:	370c      	adds	r7, #12
 8004298:	46bd      	mov	sp, r7
 800429a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800429e:	4770      	bx	lr

080042a0 <_ZNKSt16initializer_listISt4pairIKc10token_typeEE4sizeEv>:
      size() const noexcept { return _M_len; }
 80042a0:	b480      	push	{r7}
 80042a2:	b083      	sub	sp, #12
 80042a4:	af00      	add	r7, sp, #0
 80042a6:	6078      	str	r0, [r7, #4]
 80042a8:	687b      	ldr	r3, [r7, #4]
 80042aa:	685b      	ldr	r3, [r3, #4]
 80042ac:	4618      	mov	r0, r3
 80042ae:	370c      	adds	r7, #12
 80042b0:	46bd      	mov	sp, r7
 80042b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80042b6:	4770      	bx	lr

080042b8 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_Alloc_nodeC1ERS9_>:
	_Alloc_node(_Rb_tree& __t)
 80042b8:	b480      	push	{r7}
 80042ba:	b083      	sub	sp, #12
 80042bc:	af00      	add	r7, sp, #0
 80042be:	6078      	str	r0, [r7, #4]
 80042c0:	6039      	str	r1, [r7, #0]
	: _M_t(__t) { }
 80042c2:	687b      	ldr	r3, [r7, #4]
 80042c4:	683a      	ldr	r2, [r7, #0]
 80042c6:	601a      	str	r2, [r3, #0]
 80042c8:	687b      	ldr	r3, [r7, #4]
 80042ca:	4618      	mov	r0, r3
 80042cc:	370c      	adds	r7, #12
 80042ce:	46bd      	mov	sp, r7
 80042d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80042d4:	4770      	bx	lr

080042d6 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 80042d6:	b580      	push	{r7, lr}
 80042d8:	b084      	sub	sp, #16
 80042da:	af00      	add	r7, sp, #0
 80042dc:	6078      	str	r0, [r7, #4]
      { return iterator(&this->_M_impl._M_header); }
 80042de:	687b      	ldr	r3, [r7, #4]
 80042e0:	1d1a      	adds	r2, r3, #4
 80042e2:	f107 030c 	add.w	r3, r7, #12
 80042e6:	4611      	mov	r1, r2
 80042e8:	4618      	mov	r0, r3
 80042ea:	f000 fff9 	bl	80052e0 <_ZNSt17_Rb_tree_iteratorISt4pairIKc10token_typeEEC1EPSt18_Rb_tree_node_base>
 80042ee:	68fb      	ldr	r3, [r7, #12]
 80042f0:	4618      	mov	r0, r3
 80042f2:	3710      	adds	r7, #16
 80042f4:	46bd      	mov	sp, r7
 80042f6:	bd80      	pop	{r7, pc}

080042f8 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKc10token_typeEEC1ERKSt17_Rb_tree_iteratorIS3_E>:
      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
 80042f8:	b480      	push	{r7}
 80042fa:	b083      	sub	sp, #12
 80042fc:	af00      	add	r7, sp, #0
 80042fe:	6078      	str	r0, [r7, #4]
 8004300:	6039      	str	r1, [r7, #0]
      : _M_node(__it._M_node) { }
 8004302:	683b      	ldr	r3, [r7, #0]
 8004304:	681a      	ldr	r2, [r3, #0]
 8004306:	687b      	ldr	r3, [r7, #4]
 8004308:	601a      	str	r2, [r3, #0]
 800430a:	687b      	ldr	r3, [r7, #4]
 800430c:	4618      	mov	r0, r3
 800430e:	370c      	adds	r7, #12
 8004310:	46bd      	mov	sp, r7
 8004312:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004316:	4770      	bx	lr

08004318 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE17_M_insert_unique_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_ESt23_Rb_tree_const_iteratorIS3_EOT_RT0_>:
    template<typename _Arg, typename _NodeGen>
#else
    template<typename _NodeGen>
#endif
      typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8004318:	b5b0      	push	{r4, r5, r7, lr}
 800431a:	b08a      	sub	sp, #40	; 0x28
 800431c:	af02      	add	r7, sp, #8
 800431e:	60f8      	str	r0, [r7, #12]
 8004320:	60b9      	str	r1, [r7, #8]
 8004322:	607a      	str	r2, [r7, #4]
 8004324:	603b      	str	r3, [r7, #0]
			const _Val& __v,
#endif
			_NodeGen& __node_gen)
    {
      pair<_Base_ptr, _Base_ptr> __res
	= _M_get_insert_hint_unique_pos(__position, _KeyOfValue()(__v));
 8004326:	f107 0318 	add.w	r3, r7, #24
 800432a:	6879      	ldr	r1, [r7, #4]
 800432c:	4618      	mov	r0, r3
 800432e:	f001 f909 	bl	8005544 <_ZNKSt10_Select1stISt4pairIKc10token_typeEEclERKS3_>
 8004332:	4603      	mov	r3, r0
      pair<_Base_ptr, _Base_ptr> __res
 8004334:	f107 0010 	add.w	r0, r7, #16
 8004338:	68ba      	ldr	r2, [r7, #8]
 800433a:	68f9      	ldr	r1, [r7, #12]
 800433c:	f000 ffdf 	bl	80052fe <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_>

      if (__res.second)
 8004340:	697b      	ldr	r3, [r7, #20]
 8004342:	2b00      	cmp	r3, #0
 8004344:	d00f      	beq.n	8004366 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE17_M_insert_unique_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_ESt23_Rb_tree_const_iteratorIS3_EOT_RT0_+0x4e>
	return _M_insert_(__res.first, __res.second,
			  _GLIBCXX_FORWARD(_Arg, __v),
			  __node_gen);
 8004346:	693c      	ldr	r4, [r7, #16]
 8004348:	697d      	ldr	r5, [r7, #20]
 800434a:	6878      	ldr	r0, [r7, #4]
 800434c:	f001 f906 	bl	800555c <_ZSt7forwardIRKSt4pairIKc10token_typeEEOT_RNSt16remove_referenceIS6_E4typeE>
 8004350:	4602      	mov	r2, r0
 8004352:	683b      	ldr	r3, [r7, #0]
 8004354:	9300      	str	r3, [sp, #0]
 8004356:	4613      	mov	r3, r2
 8004358:	462a      	mov	r2, r5
 800435a:	4621      	mov	r1, r4
 800435c:	68f8      	ldr	r0, [r7, #12]
 800435e:	f001 f908 	bl	8005572 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_>
 8004362:	4603      	mov	r3, r0
 8004364:	e007      	b.n	8004376 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE17_M_insert_unique_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_ESt23_Rb_tree_const_iteratorIS3_EOT_RT0_+0x5e>
      return iterator(__res.first);
 8004366:	693a      	ldr	r2, [r7, #16]
 8004368:	f107 031c 	add.w	r3, r7, #28
 800436c:	4611      	mov	r1, r2
 800436e:	4618      	mov	r0, r3
 8004370:	f000 ffb6 	bl	80052e0 <_ZNSt17_Rb_tree_iteratorISt4pairIKc10token_typeEEC1EPSt18_Rb_tree_node_base>
 8004374:	69fb      	ldr	r3, [r7, #28]
    }
 8004376:	4618      	mov	r0, r3
 8004378:	3720      	adds	r7, #32
 800437a:	46bd      	mov	sp, r7
 800437c:	bdb0      	pop	{r4, r5, r7, pc}

0800437e <_ZN9__gnu_cxx13new_allocatorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1ERKSB_>:
 800437e:	b480      	push	{r7}
 8004380:	b083      	sub	sp, #12
 8004382:	af00      	add	r7, sp, #0
 8004384:	6078      	str	r0, [r7, #4]
 8004386:	6039      	str	r1, [r7, #0]
 8004388:	687b      	ldr	r3, [r7, #4]
 800438a:	4618      	mov	r0, r3
 800438c:	370c      	adds	r7, #12
 800438e:	46bd      	mov	sp, r7
 8004390:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004394:	4770      	bx	lr

08004396 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEC1IS9_EERKSaIT_E>:
	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }
 8004396:	b580      	push	{r7, lr}
 8004398:	b082      	sub	sp, #8
 800439a:	af00      	add	r7, sp, #0
 800439c:	6078      	str	r0, [r7, #4]
 800439e:	6039      	str	r1, [r7, #0]
 80043a0:	6878      	ldr	r0, [r7, #4]
 80043a2:	f001 f92f 	bl	8005604 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEC1Ev>
 80043a6:	687b      	ldr	r3, [r7, #4]
 80043a8:	4618      	mov	r0, r3
 80043aa:	3708      	adds	r7, #8
 80043ac:	46bd      	mov	sp, r7
 80043ae:	bd80      	pop	{r7, pc}

080043b0 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
 80043b0:	b580      	push	{r7, lr}
 80043b2:	b082      	sub	sp, #8
 80043b4:	af00      	add	r7, sp, #0
 80043b6:	6078      	str	r0, [r7, #4]
 80043b8:	6878      	ldr	r0, [r7, #4]
 80043ba:	f001 f92e 	bl	800561a <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEED1Ev>
 80043be:	687b      	ldr	r3, [r7, #4]
 80043c0:	4618      	mov	r0, r3
 80043c2:	3708      	adds	r7, #8
 80043c4:	46bd      	mov	sp, r7
 80043c6:	bd80      	pop	{r7, pc}

080043c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE13_Rb_tree_implISD_Lb1EEC1ERKSD_OSaISt13_Rb_tree_nodeIS9_EE>:
	  _Rb_tree_impl(const _Key_compare& __comp, _Node_allocator&& __a)
 80043c8:	b580      	push	{r7, lr}
 80043ca:	b084      	sub	sp, #16
 80043cc:	af00      	add	r7, sp, #0
 80043ce:	60f8      	str	r0, [r7, #12]
 80043d0:	60b9      	str	r1, [r7, #8]
 80043d2:	607a      	str	r2, [r7, #4]
	  : _Node_allocator(std::move(__a)), _Base_key_compare(__comp)
 80043d4:	6878      	ldr	r0, [r7, #4]
 80043d6:	f001 f92b 	bl	8005630 <_ZSt4moveIRSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEEONSt16remove_referenceIT_E4typeEOSF_>
 80043da:	4603      	mov	r3, r0
 80043dc:	4619      	mov	r1, r3
 80043de:	68f8      	ldr	r0, [r7, #12]
 80043e0:	f001 f931 	bl	8005646 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEC1ERKSB_>
 80043e4:	68fb      	ldr	r3, [r7, #12]
 80043e6:	68b9      	ldr	r1, [r7, #8]
 80043e8:	4618      	mov	r0, r3
 80043ea:	f001 f93a 	bl	8005662 <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1ERKS7_>
 80043ee:	68fb      	ldr	r3, [r7, #12]
 80043f0:	3304      	adds	r3, #4
 80043f2:	4618      	mov	r0, r3
 80043f4:	f7fc fe43 	bl	800107e <_ZNSt15_Rb_tree_headerC1Ev>
	  { }
 80043f8:	68fb      	ldr	r3, [r7, #12]
 80043fa:	4618      	mov	r0, r3
 80043fc:	3710      	adds	r7, #16
 80043fe:	46bd      	mov	sp, r7
 8004400:	bd80      	pop	{r7, pc}

08004402 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_eraseEPSt13_Rb_tree_nodeIS9_E>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8004402:	b580      	push	{r7, lr}
 8004404:	b084      	sub	sp, #16
 8004406:	af00      	add	r7, sp, #0
 8004408:	6078      	str	r0, [r7, #4]
 800440a:	6039      	str	r1, [r7, #0]
      while (__x != 0)
 800440c:	683b      	ldr	r3, [r7, #0]
 800440e:	2b00      	cmp	r3, #0
 8004410:	d012      	beq.n	8004438 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_eraseEPSt13_Rb_tree_nodeIS9_E+0x36>
	  _M_erase(_S_right(__x));
 8004412:	6838      	ldr	r0, [r7, #0]
 8004414:	f001 f931 	bl	800567a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_S_rightEPSt18_Rb_tree_node_base>
 8004418:	4603      	mov	r3, r0
 800441a:	4619      	mov	r1, r3
 800441c:	6878      	ldr	r0, [r7, #4]
 800441e:	f7ff fff0 	bl	8004402 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_eraseEPSt13_Rb_tree_nodeIS9_E>
	  _Link_type __y = _S_left(__x);
 8004422:	6838      	ldr	r0, [r7, #0]
 8004424:	f001 f935 	bl	8005692 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE7_S_leftEPSt18_Rb_tree_node_base>
 8004428:	60f8      	str	r0, [r7, #12]
	  _M_drop_node(__x);
 800442a:	6839      	ldr	r1, [r7, #0]
 800442c:	6878      	ldr	r0, [r7, #4]
 800442e:	f001 f93c 	bl	80056aa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS9_E>
	  __x = __y;
 8004432:	68fb      	ldr	r3, [r7, #12]
 8004434:	603b      	str	r3, [r7, #0]
      while (__x != 0)
 8004436:	e7e9      	b.n	800440c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_eraseEPSt13_Rb_tree_nodeIS9_E+0xa>
    }
 8004438:	bf00      	nop
 800443a:	3710      	adds	r7, #16
 800443c:	46bd      	mov	sp, r7
 800443e:	bd80      	pop	{r7, pc}

08004440 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_beginEv>:
      _M_begin() _GLIBCXX_NOEXCEPT
 8004440:	b480      	push	{r7}
 8004442:	b083      	sub	sp, #12
 8004444:	af00      	add	r7, sp, #0
 8004446:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
 8004448:	687b      	ldr	r3, [r7, #4]
 800444a:	689b      	ldr	r3, [r3, #8]
 800444c:	4618      	mov	r0, r3
 800444e:	370c      	adds	r7, #12
 8004450:	46bd      	mov	sp, r7
 8004452:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004456:	4770      	bx	lr

08004458 <_ZNKSt16initializer_listISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE4sizeEv>:
 8004458:	b480      	push	{r7}
 800445a:	b083      	sub	sp, #12
 800445c:	af00      	add	r7, sp, #0
 800445e:	6078      	str	r0, [r7, #4]
 8004460:	687b      	ldr	r3, [r7, #4]
 8004462:	685b      	ldr	r3, [r3, #4]
 8004464:	4618      	mov	r0, r3
 8004466:	370c      	adds	r7, #12
 8004468:	46bd      	mov	sp, r7
 800446a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800446e:	4770      	bx	lr

08004470 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_Alloc_nodeC1ERSF_>:
	_Alloc_node(_Rb_tree& __t)
 8004470:	b480      	push	{r7}
 8004472:	b083      	sub	sp, #12
 8004474:	af00      	add	r7, sp, #0
 8004476:	6078      	str	r0, [r7, #4]
 8004478:	6039      	str	r1, [r7, #0]
	: _M_t(__t) { }
 800447a:	687b      	ldr	r3, [r7, #4]
 800447c:	683a      	ldr	r2, [r7, #0]
 800447e:	601a      	str	r2, [r3, #0]
 8004480:	687b      	ldr	r3, [r7, #4]
 8004482:	4618      	mov	r0, r3
 8004484:	370c      	adds	r7, #12
 8004486:	46bd      	mov	sp, r7
 8004488:	f85d 7b04 	ldr.w	r7, [sp], #4
 800448c:	4770      	bx	lr

0800448e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 800448e:	b580      	push	{r7, lr}
 8004490:	b084      	sub	sp, #16
 8004492:	af00      	add	r7, sp, #0
 8004494:	6078      	str	r0, [r7, #4]
      { return iterator(&this->_M_impl._M_header); }
 8004496:	687b      	ldr	r3, [r7, #4]
 8004498:	1d1a      	adds	r2, r3, #4
 800449a:	f107 030c 	add.w	r3, r7, #12
 800449e:	4611      	mov	r1, r2
 80044a0:	4618      	mov	r0, r3
 80044a2:	f001 f913 	bl	80056cc <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1EPSt18_Rb_tree_node_base>
 80044a6:	68fb      	ldr	r3, [r7, #12]
 80044a8:	4618      	mov	r0, r3
 80044aa:	3710      	adds	r7, #16
 80044ac:	46bd      	mov	sp, r7
 80044ae:	bd80      	pop	{r7, pc}

080044b0 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1ERKSt17_Rb_tree_iteratorIS9_E>:
      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
 80044b0:	b480      	push	{r7}
 80044b2:	b083      	sub	sp, #12
 80044b4:	af00      	add	r7, sp, #0
 80044b6:	6078      	str	r0, [r7, #4]
 80044b8:	6039      	str	r1, [r7, #0]
      : _M_node(__it._M_node) { }
 80044ba:	683b      	ldr	r3, [r7, #0]
 80044bc:	681a      	ldr	r2, [r3, #0]
 80044be:	687b      	ldr	r3, [r7, #4]
 80044c0:	601a      	str	r2, [r3, #0]
 80044c2:	687b      	ldr	r3, [r7, #4]
 80044c4:	4618      	mov	r0, r3
 80044c6:	370c      	adds	r7, #12
 80044c8:	46bd      	mov	sp, r7
 80044ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80044ce:	4770      	bx	lr

080044d0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE17_M_insert_unique_IRKS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_ESt23_Rb_tree_const_iteratorIS9_EOT_RT0_>:
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 80044d0:	b5b0      	push	{r4, r5, r7, lr}
 80044d2:	b08a      	sub	sp, #40	; 0x28
 80044d4:	af02      	add	r7, sp, #8
 80044d6:	60f8      	str	r0, [r7, #12]
 80044d8:	60b9      	str	r1, [r7, #8]
 80044da:	607a      	str	r2, [r7, #4]
 80044dc:	603b      	str	r3, [r7, #0]
	= _M_get_insert_hint_unique_pos(__position, _KeyOfValue()(__v));
 80044de:	f107 0318 	add.w	r3, r7, #24
 80044e2:	6879      	ldr	r1, [r7, #4]
 80044e4:	4618      	mov	r0, r3
 80044e6:	f001 fa23 	bl	8005930 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEclERKS9_>
 80044ea:	4603      	mov	r3, r0
      pair<_Base_ptr, _Base_ptr> __res
 80044ec:	f107 0010 	add.w	r0, r7, #16
 80044f0:	68ba      	ldr	r2, [r7, #8]
 80044f2:	68f9      	ldr	r1, [r7, #12]
 80044f4:	f001 f8f9 	bl	80056ea <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_>
      if (__res.second)
 80044f8:	697b      	ldr	r3, [r7, #20]
 80044fa:	2b00      	cmp	r3, #0
 80044fc:	d00f      	beq.n	800451e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE17_M_insert_unique_IRKS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_ESt23_Rb_tree_const_iteratorIS9_EOT_RT0_+0x4e>
			  __node_gen);
 80044fe:	693c      	ldr	r4, [r7, #16]
 8004500:	697d      	ldr	r5, [r7, #20]
 8004502:	6878      	ldr	r0, [r7, #4]
 8004504:	f001 fa20 	bl	8005948 <_ZSt7forwardIRKSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEOT_RNSt16remove_referenceISC_E4typeE>
 8004508:	4602      	mov	r2, r0
 800450a:	683b      	ldr	r3, [r7, #0]
 800450c:	9300      	str	r3, [sp, #0]
 800450e:	4613      	mov	r3, r2
 8004510:	462a      	mov	r2, r5
 8004512:	4621      	mov	r1, r4
 8004514:	68f8      	ldr	r0, [r7, #12]
 8004516:	f001 fa22 	bl	800595e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE10_M_insert_IRKS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_EPSt18_Rb_tree_node_baseSN_OT_RT0_>
 800451a:	4603      	mov	r3, r0
 800451c:	e007      	b.n	800452e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE17_M_insert_unique_IRKS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_ESt23_Rb_tree_const_iteratorIS9_EOT_RT0_+0x5e>
      return iterator(__res.first);
 800451e:	693a      	ldr	r2, [r7, #16]
 8004520:	f107 031c 	add.w	r3, r7, #28
 8004524:	4611      	mov	r1, r2
 8004526:	4618      	mov	r0, r3
 8004528:	f001 f8d0 	bl	80056cc <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1EPSt18_Rb_tree_node_base>
 800452c:	69fb      	ldr	r3, [r7, #28]
    }
 800452e:	4618      	mov	r0, r3
 8004530:	3720      	adds	r7, #32
 8004532:	46bd      	mov	sp, r7
 8004534:	bdb0      	pop	{r4, r5, r7, pc}

08004536 <_ZN9__gnu_cxx13new_allocatorISt4pairIKc12double_tokenEEC1ERKS5_>:
 8004536:	b480      	push	{r7}
 8004538:	b083      	sub	sp, #12
 800453a:	af00      	add	r7, sp, #0
 800453c:	6078      	str	r0, [r7, #4]
 800453e:	6039      	str	r1, [r7, #0]
 8004540:	687b      	ldr	r3, [r7, #4]
 8004542:	4618      	mov	r0, r3
 8004544:	370c      	adds	r7, #12
 8004546:	46bd      	mov	sp, r7
 8004548:	f85d 7b04 	ldr.w	r7, [sp], #4
 800454c:	4770      	bx	lr

0800454e <_ZNSaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEC1IS3_EERKSaIT_E>:
	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }
 800454e:	b580      	push	{r7, lr}
 8004550:	b082      	sub	sp, #8
 8004552:	af00      	add	r7, sp, #0
 8004554:	6078      	str	r0, [r7, #4]
 8004556:	6039      	str	r1, [r7, #0]
 8004558:	6878      	ldr	r0, [r7, #4]
 800455a:	f001 fa49 	bl	80059f0 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEC1Ev>
 800455e:	687b      	ldr	r3, [r7, #4]
 8004560:	4618      	mov	r0, r3
 8004562:	3708      	adds	r7, #8
 8004564:	46bd      	mov	sp, r7
 8004566:	bd80      	pop	{r7, pc}

08004568 <_ZNSaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
 8004568:	b580      	push	{r7, lr}
 800456a:	b082      	sub	sp, #8
 800456c:	af00      	add	r7, sp, #0
 800456e:	6078      	str	r0, [r7, #4]
 8004570:	6878      	ldr	r0, [r7, #4]
 8004572:	f001 fa48 	bl	8005a06 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEED1Ev>
 8004576:	687b      	ldr	r3, [r7, #4]
 8004578:	4618      	mov	r0, r3
 800457a:	3708      	adds	r7, #8
 800457c:	46bd      	mov	sp, r7
 800457e:	bd80      	pop	{r7, pc}

08004580 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE13_Rb_tree_implIS7_Lb1EEC1ERKS7_OSaISt13_Rb_tree_nodeIS3_EE>:
	  _Rb_tree_impl(const _Key_compare& __comp, _Node_allocator&& __a)
 8004580:	b580      	push	{r7, lr}
 8004582:	b084      	sub	sp, #16
 8004584:	af00      	add	r7, sp, #0
 8004586:	60f8      	str	r0, [r7, #12]
 8004588:	60b9      	str	r1, [r7, #8]
 800458a:	607a      	str	r2, [r7, #4]
	  : _Node_allocator(std::move(__a)), _Base_key_compare(__comp)
 800458c:	6878      	ldr	r0, [r7, #4]
 800458e:	f001 fa45 	bl	8005a1c <_ZSt4moveIRSaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEEONSt16remove_referenceIT_E4typeEOS9_>
 8004592:	4603      	mov	r3, r0
 8004594:	4619      	mov	r1, r3
 8004596:	68f8      	ldr	r0, [r7, #12]
 8004598:	f001 fa4b 	bl	8005a32 <_ZNSaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEC1ERKS5_>
 800459c:	68fb      	ldr	r3, [r7, #12]
 800459e:	68b9      	ldr	r1, [r7, #8]
 80045a0:	4618      	mov	r0, r3
 80045a2:	f000 fe68 	bl	8005276 <_ZNSt20_Rb_tree_key_compareISt4lessIcEEC1ERKS1_>
 80045a6:	68fb      	ldr	r3, [r7, #12]
 80045a8:	3304      	adds	r3, #4
 80045aa:	4618      	mov	r0, r3
 80045ac:	f7fc fd67 	bl	800107e <_ZNSt15_Rb_tree_headerC1Ev>
	  { }
 80045b0:	68fb      	ldr	r3, [r7, #12]
 80045b2:	4618      	mov	r0, r3
 80045b4:	3710      	adds	r7, #16
 80045b6:	46bd      	mov	sp, r7
 80045b8:	bd80      	pop	{r7, pc}

080045ba <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 80045ba:	b580      	push	{r7, lr}
 80045bc:	b084      	sub	sp, #16
 80045be:	af00      	add	r7, sp, #0
 80045c0:	6078      	str	r0, [r7, #4]
 80045c2:	6039      	str	r1, [r7, #0]
      while (__x != 0)
 80045c4:	683b      	ldr	r3, [r7, #0]
 80045c6:	2b00      	cmp	r3, #0
 80045c8:	d012      	beq.n	80045f0 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E+0x36>
	  _M_erase(_S_right(__x));
 80045ca:	6838      	ldr	r0, [r7, #0]
 80045cc:	f001 fa3f 	bl	8005a4e <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base>
 80045d0:	4603      	mov	r3, r0
 80045d2:	4619      	mov	r1, r3
 80045d4:	6878      	ldr	r0, [r7, #4]
 80045d6:	f7ff fff0 	bl	80045ba <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E>
	  _Link_type __y = _S_left(__x);
 80045da:	6838      	ldr	r0, [r7, #0]
 80045dc:	f001 fa43 	bl	8005a66 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE7_S_leftEPSt18_Rb_tree_node_base>
 80045e0:	60f8      	str	r0, [r7, #12]
	  _M_drop_node(__x);
 80045e2:	6839      	ldr	r1, [r7, #0]
 80045e4:	6878      	ldr	r0, [r7, #4]
 80045e6:	f001 fa4a 	bl	8005a7e <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS3_E>
	  __x = __y;
 80045ea:	68fb      	ldr	r3, [r7, #12]
 80045ec:	603b      	str	r3, [r7, #0]
      while (__x != 0)
 80045ee:	e7e9      	b.n	80045c4 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E+0xa>
    }
 80045f0:	bf00      	nop
 80045f2:	3710      	adds	r7, #16
 80045f4:	46bd      	mov	sp, r7
 80045f6:	bd80      	pop	{r7, pc}

080045f8 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_beginEv>:
      _M_begin() _GLIBCXX_NOEXCEPT
 80045f8:	b480      	push	{r7}
 80045fa:	b083      	sub	sp, #12
 80045fc:	af00      	add	r7, sp, #0
 80045fe:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
 8004600:	687b      	ldr	r3, [r7, #4]
 8004602:	689b      	ldr	r3, [r3, #8]
 8004604:	4618      	mov	r0, r3
 8004606:	370c      	adds	r7, #12
 8004608:	46bd      	mov	sp, r7
 800460a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800460e:	4770      	bx	lr

08004610 <_ZNKSt16initializer_listISt4pairIKc12double_tokenEE4sizeEv>:
 8004610:	b480      	push	{r7}
 8004612:	b083      	sub	sp, #12
 8004614:	af00      	add	r7, sp, #0
 8004616:	6078      	str	r0, [r7, #4]
 8004618:	687b      	ldr	r3, [r7, #4]
 800461a:	685b      	ldr	r3, [r3, #4]
 800461c:	4618      	mov	r0, r3
 800461e:	370c      	adds	r7, #12
 8004620:	46bd      	mov	sp, r7
 8004622:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004626:	4770      	bx	lr

08004628 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_Alloc_nodeC1ERS9_>:
	_Alloc_node(_Rb_tree& __t)
 8004628:	b480      	push	{r7}
 800462a:	b083      	sub	sp, #12
 800462c:	af00      	add	r7, sp, #0
 800462e:	6078      	str	r0, [r7, #4]
 8004630:	6039      	str	r1, [r7, #0]
	: _M_t(__t) { }
 8004632:	687b      	ldr	r3, [r7, #4]
 8004634:	683a      	ldr	r2, [r7, #0]
 8004636:	601a      	str	r2, [r3, #0]
 8004638:	687b      	ldr	r3, [r7, #4]
 800463a:	4618      	mov	r0, r3
 800463c:	370c      	adds	r7, #12
 800463e:	46bd      	mov	sp, r7
 8004640:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004644:	4770      	bx	lr

08004646 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 8004646:	b580      	push	{r7, lr}
 8004648:	b084      	sub	sp, #16
 800464a:	af00      	add	r7, sp, #0
 800464c:	6078      	str	r0, [r7, #4]
      { return iterator(&this->_M_impl._M_header); }
 800464e:	687b      	ldr	r3, [r7, #4]
 8004650:	1d1a      	adds	r2, r3, #4
 8004652:	f107 030c 	add.w	r3, r7, #12
 8004656:	4611      	mov	r1, r2
 8004658:	4618      	mov	r0, r3
 800465a:	f001 fa21 	bl	8005aa0 <_ZNSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEEC1EPSt18_Rb_tree_node_base>
 800465e:	68fb      	ldr	r3, [r7, #12]
 8004660:	4618      	mov	r0, r3
 8004662:	3710      	adds	r7, #16
 8004664:	46bd      	mov	sp, r7
 8004666:	bd80      	pop	{r7, pc}

08004668 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEEC1ERKSt17_Rb_tree_iteratorIS3_E>:
      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
 8004668:	b480      	push	{r7}
 800466a:	b083      	sub	sp, #12
 800466c:	af00      	add	r7, sp, #0
 800466e:	6078      	str	r0, [r7, #4]
 8004670:	6039      	str	r1, [r7, #0]
      : _M_node(__it._M_node) { }
 8004672:	683b      	ldr	r3, [r7, #0]
 8004674:	681a      	ldr	r2, [r3, #0]
 8004676:	687b      	ldr	r3, [r7, #4]
 8004678:	601a      	str	r2, [r3, #0]
 800467a:	687b      	ldr	r3, [r7, #4]
 800467c:	4618      	mov	r0, r3
 800467e:	370c      	adds	r7, #12
 8004680:	46bd      	mov	sp, r7
 8004682:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004686:	4770      	bx	lr

08004688 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE17_M_insert_unique_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_ESt23_Rb_tree_const_iteratorIS3_EOT_RT0_>:
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8004688:	b5b0      	push	{r4, r5, r7, lr}
 800468a:	b08a      	sub	sp, #40	; 0x28
 800468c:	af02      	add	r7, sp, #8
 800468e:	60f8      	str	r0, [r7, #12]
 8004690:	60b9      	str	r1, [r7, #8]
 8004692:	607a      	str	r2, [r7, #4]
 8004694:	603b      	str	r3, [r7, #0]
	= _M_get_insert_hint_unique_pos(__position, _KeyOfValue()(__v));
 8004696:	f107 0318 	add.w	r3, r7, #24
 800469a:	6879      	ldr	r1, [r7, #4]
 800469c:	4618      	mov	r0, r3
 800469e:	f001 fb31 	bl	8005d04 <_ZNKSt10_Select1stISt4pairIKc12double_tokenEEclERKS3_>
 80046a2:	4603      	mov	r3, r0
      pair<_Base_ptr, _Base_ptr> __res
 80046a4:	f107 0010 	add.w	r0, r7, #16
 80046a8:	68ba      	ldr	r2, [r7, #8]
 80046aa:	68f9      	ldr	r1, [r7, #12]
 80046ac:	f001 fa07 	bl	8005abe <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_>
      if (__res.second)
 80046b0:	697b      	ldr	r3, [r7, #20]
 80046b2:	2b00      	cmp	r3, #0
 80046b4:	d00f      	beq.n	80046d6 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE17_M_insert_unique_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_ESt23_Rb_tree_const_iteratorIS3_EOT_RT0_+0x4e>
			  __node_gen);
 80046b6:	693c      	ldr	r4, [r7, #16]
 80046b8:	697d      	ldr	r5, [r7, #20]
 80046ba:	6878      	ldr	r0, [r7, #4]
 80046bc:	f001 fb2e 	bl	8005d1c <_ZSt7forwardIRKSt4pairIKc12double_tokenEEOT_RNSt16remove_referenceIS6_E4typeE>
 80046c0:	4602      	mov	r2, r0
 80046c2:	683b      	ldr	r3, [r7, #0]
 80046c4:	9300      	str	r3, [sp, #0]
 80046c6:	4613      	mov	r3, r2
 80046c8:	462a      	mov	r2, r5
 80046ca:	4621      	mov	r1, r4
 80046cc:	68f8      	ldr	r0, [r7, #12]
 80046ce:	f001 fb30 	bl	8005d32 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_>
 80046d2:	4603      	mov	r3, r0
 80046d4:	e007      	b.n	80046e6 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE17_M_insert_unique_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_ESt23_Rb_tree_const_iteratorIS3_EOT_RT0_+0x5e>
      return iterator(__res.first);
 80046d6:	693a      	ldr	r2, [r7, #16]
 80046d8:	f107 031c 	add.w	r3, r7, #28
 80046dc:	4611      	mov	r1, r2
 80046de:	4618      	mov	r0, r3
 80046e0:	f001 f9de 	bl	8005aa0 <_ZNSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEEC1EPSt18_Rb_tree_node_base>
 80046e4:	69fb      	ldr	r3, [r7, #28]
    }
 80046e6:	4618      	mov	r0, r3
 80046e8:	3720      	adds	r7, #32
 80046ea:	46bd      	mov	sp, r7
 80046ec:	bdb0      	pop	{r4, r5, r7, pc}

080046ee <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEERNSt8__detail9__variant16_Variant_storageILb0EJifbS5_S9_EEEEDcOT0_>:
    __variant_cast(_Tp&& __rhs)
 80046ee:	b480      	push	{r7}
 80046f0:	b083      	sub	sp, #12
 80046f2:	af00      	add	r7, sp, #0
 80046f4:	6078      	str	r0, [r7, #4]
	    return static_cast<variant<_Types...>&>(__rhs);
 80046f6:	687b      	ldr	r3, [r7, #4]
    }
 80046f8:	4618      	mov	r0, r3
 80046fa:	370c      	adds	r7, #12
 80046fc:	46bd      	mov	sp, r7
 80046fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004702:	4770      	bx	lr

08004704 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESM_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8004704:	b580      	push	{r7, lr}
 8004706:	b082      	sub	sp, #8
 8004708:	af00      	add	r7, sp, #0
 800470a:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 800470c:	6878      	ldr	r0, [r7, #4]
 800470e:	f7ff f881 	bl	8003814 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8004712:	4603      	mov	r3, r0
 8004714:	4618      	mov	r0, r3
 8004716:	f7fd fc54 	bl	8001fc2 <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 800471a:	4603      	mov	r3, r0
	}
 800471c:	4618      	mov	r0, r3
 800471e:	3708      	adds	r7, #8
 8004720:	46bd      	mov	sp, r7
 8004722:	bd80      	pop	{r7, pc}

08004724 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESJ_SM_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8004724:	b5b0      	push	{r4, r5, r7, lr}
 8004726:	b082      	sub	sp, #8
 8004728:	af00      	add	r7, sp, #0
 800472a:	6078      	str	r0, [r7, #4]
 800472c:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 800472e:	6878      	ldr	r0, [r7, #4]
 8004730:	f001 fb48 	bl	8005dc4 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8004734:	4604      	mov	r4, r0
 8004736:	6838      	ldr	r0, [r7, #0]
 8004738:	f7ff f86c 	bl	8003814 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800473c:	4603      	mov	r3, r0
 800473e:	4618      	mov	r0, r3
 8004740:	f7ff ffe0 	bl	8004704 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESM_EEDcOT0_>
 8004744:	4603      	mov	r3, r0
 8004746:	4619      	mov	r1, r3
 8004748:	4620      	mov	r0, r4
 800474a:	f001 fb46 	bl	8005dda <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_JRiEENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>
		std::forward<_Variants>(__vars))...);
 800474e:	462b      	mov	r3, r5
      }
 8004750:	4618      	mov	r0, r3
 8004752:	3708      	adds	r7, #8
 8004754:	46bd      	mov	sp, r7
 8004756:	bdb0      	pop	{r4, r5, r7, pc}

08004758 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESJ_SM_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8004758:	b5b0      	push	{r4, r5, r7, lr}
 800475a:	b082      	sub	sp, #8
 800475c:	af00      	add	r7, sp, #0
 800475e:	6078      	str	r0, [r7, #4]
 8004760:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8004762:	6878      	ldr	r0, [r7, #4]
 8004764:	f001 fb2e 	bl	8005dc4 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8004768:	4604      	mov	r4, r0
 800476a:	6838      	ldr	r0, [r7, #0]
 800476c:	f7ff f852 	bl	8003814 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8004770:	4603      	mov	r3, r0
 8004772:	4619      	mov	r1, r3
 8004774:	4620      	mov	r0, r4
 8004776:	f7ff ffd5 	bl	8004724 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 800477a:	462b      	mov	r3, r5
      }
 800477c:	4618      	mov	r0, r3
 800477e:	3708      	adds	r7, #8
 8004780:	46bd      	mov	sp, r7
 8004782:	bdb0      	pop	{r4, r5, r7, pc}

08004784 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj0EEEE14__visit_invokeESJ_SM_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8004784:	b5b0      	push	{r4, r5, r7, lr}
 8004786:	b082      	sub	sp, #8
 8004788:	af00      	add	r7, sp, #0
 800478a:	6078      	str	r0, [r7, #4]
 800478c:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 800478e:	6878      	ldr	r0, [r7, #4]
 8004790:	f001 fb18 	bl	8005dc4 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8004794:	4604      	mov	r4, r0
 8004796:	6838      	ldr	r0, [r7, #0]
 8004798:	f7ff f83c 	bl	8003814 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800479c:	4603      	mov	r3, r0
 800479e:	4619      	mov	r1, r3
 80047a0:	4620      	mov	r0, r4
 80047a2:	f7ff ffd9 	bl	8004758 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 80047a6:	462b      	mov	r3, r5
      }
 80047a8:	4618      	mov	r0, r3
 80047aa:	3708      	adds	r7, #8
 80047ac:	46bd      	mov	sp, r7
 80047ae:	bdb0      	pop	{r4, r5, r7, pc}

080047b0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESM_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 80047b0:	b580      	push	{r7, lr}
 80047b2:	b082      	sub	sp, #8
 80047b4:	af00      	add	r7, sp, #0
 80047b6:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 80047b8:	6878      	ldr	r0, [r7, #4]
 80047ba:	f7ff f82b 	bl	8003814 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 80047be:	4603      	mov	r3, r0
 80047c0:	4618      	mov	r0, r3
 80047c2:	f7fd fc8a 	bl	80020da <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 80047c6:	4603      	mov	r3, r0
	}
 80047c8:	4618      	mov	r0, r3
 80047ca:	3708      	adds	r7, #8
 80047cc:	46bd      	mov	sp, r7
 80047ce:	bd80      	pop	{r7, pc}

080047d0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESJ_SM_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 80047d0:	b5b0      	push	{r4, r5, r7, lr}
 80047d2:	b082      	sub	sp, #8
 80047d4:	af00      	add	r7, sp, #0
 80047d6:	6078      	str	r0, [r7, #4]
 80047d8:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 80047da:	6878      	ldr	r0, [r7, #4]
 80047dc:	f001 faf2 	bl	8005dc4 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 80047e0:	4604      	mov	r4, r0
 80047e2:	6838      	ldr	r0, [r7, #0]
 80047e4:	f7ff f816 	bl	8003814 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 80047e8:	4603      	mov	r3, r0
 80047ea:	4618      	mov	r0, r3
 80047ec:	f7ff ffe0 	bl	80047b0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESM_EEDcOT0_>
 80047f0:	4603      	mov	r3, r0
 80047f2:	4619      	mov	r1, r3
 80047f4:	4620      	mov	r0, r4
 80047f6:	f001 fb07 	bl	8005e08 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_JRfEENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>
		std::forward<_Variants>(__vars))...);
 80047fa:	462b      	mov	r3, r5
      }
 80047fc:	4618      	mov	r0, r3
 80047fe:	3708      	adds	r7, #8
 8004800:	46bd      	mov	sp, r7
 8004802:	bdb0      	pop	{r4, r5, r7, pc}

08004804 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESJ_SM_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8004804:	b5b0      	push	{r4, r5, r7, lr}
 8004806:	b082      	sub	sp, #8
 8004808:	af00      	add	r7, sp, #0
 800480a:	6078      	str	r0, [r7, #4]
 800480c:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 800480e:	6878      	ldr	r0, [r7, #4]
 8004810:	f001 fad8 	bl	8005dc4 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8004814:	4604      	mov	r4, r0
 8004816:	6838      	ldr	r0, [r7, #0]
 8004818:	f7fe fffc 	bl	8003814 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800481c:	4603      	mov	r3, r0
 800481e:	4619      	mov	r1, r3
 8004820:	4620      	mov	r0, r4
 8004822:	f7ff ffd5 	bl	80047d0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 8004826:	462b      	mov	r3, r5
      }
 8004828:	4618      	mov	r0, r3
 800482a:	3708      	adds	r7, #8
 800482c:	46bd      	mov	sp, r7
 800482e:	bdb0      	pop	{r4, r5, r7, pc}

08004830 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj1EEEE14__visit_invokeESJ_SM_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8004830:	b5b0      	push	{r4, r5, r7, lr}
 8004832:	b082      	sub	sp, #8
 8004834:	af00      	add	r7, sp, #0
 8004836:	6078      	str	r0, [r7, #4]
 8004838:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 800483a:	6878      	ldr	r0, [r7, #4]
 800483c:	f001 fac2 	bl	8005dc4 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8004840:	4604      	mov	r4, r0
 8004842:	6838      	ldr	r0, [r7, #0]
 8004844:	f7fe ffe6 	bl	8003814 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8004848:	4603      	mov	r3, r0
 800484a:	4619      	mov	r1, r3
 800484c:	4620      	mov	r0, r4
 800484e:	f7ff ffd9 	bl	8004804 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 8004852:	462b      	mov	r3, r5
      }
 8004854:	4618      	mov	r0, r3
 8004856:	3708      	adds	r7, #8
 8004858:	46bd      	mov	sp, r7
 800485a:	bdb0      	pop	{r4, r5, r7, pc}

0800485c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESM_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 800485c:	b580      	push	{r7, lr}
 800485e:	b082      	sub	sp, #8
 8004860:	af00      	add	r7, sp, #0
 8004862:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8004864:	6878      	ldr	r0, [r7, #4]
 8004866:	f7fe ffd5 	bl	8003814 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800486a:	4603      	mov	r3, r0
 800486c:	4618      	mov	r0, r3
 800486e:	f7fd fcd2 	bl	8002216 <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8004872:	4603      	mov	r3, r0
	}
 8004874:	4618      	mov	r0, r3
 8004876:	3708      	adds	r7, #8
 8004878:	46bd      	mov	sp, r7
 800487a:	bd80      	pop	{r7, pc}

0800487c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESJ_SM_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 800487c:	b5b0      	push	{r4, r5, r7, lr}
 800487e:	b082      	sub	sp, #8
 8004880:	af00      	add	r7, sp, #0
 8004882:	6078      	str	r0, [r7, #4]
 8004884:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8004886:	6878      	ldr	r0, [r7, #4]
 8004888:	f001 fa9c 	bl	8005dc4 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800488c:	4604      	mov	r4, r0
 800488e:	6838      	ldr	r0, [r7, #0]
 8004890:	f7fe ffc0 	bl	8003814 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8004894:	4603      	mov	r3, r0
 8004896:	4618      	mov	r0, r3
 8004898:	f7ff ffe0 	bl	800485c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESM_EEDcOT0_>
 800489c:	4603      	mov	r3, r0
 800489e:	4619      	mov	r1, r3
 80048a0:	4620      	mov	r0, r4
 80048a2:	f001 fac8 	bl	8005e36 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_JRbEENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>
		std::forward<_Variants>(__vars))...);
 80048a6:	462b      	mov	r3, r5
      }
 80048a8:	4618      	mov	r0, r3
 80048aa:	3708      	adds	r7, #8
 80048ac:	46bd      	mov	sp, r7
 80048ae:	bdb0      	pop	{r4, r5, r7, pc}

080048b0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESJ_SM_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80048b0:	b5b0      	push	{r4, r5, r7, lr}
 80048b2:	b082      	sub	sp, #8
 80048b4:	af00      	add	r7, sp, #0
 80048b6:	6078      	str	r0, [r7, #4]
 80048b8:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 80048ba:	6878      	ldr	r0, [r7, #4]
 80048bc:	f001 fa82 	bl	8005dc4 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 80048c0:	4604      	mov	r4, r0
 80048c2:	6838      	ldr	r0, [r7, #0]
 80048c4:	f7fe ffa6 	bl	8003814 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 80048c8:	4603      	mov	r3, r0
 80048ca:	4619      	mov	r1, r3
 80048cc:	4620      	mov	r0, r4
 80048ce:	f7ff ffd5 	bl	800487c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 80048d2:	462b      	mov	r3, r5
      }
 80048d4:	4618      	mov	r0, r3
 80048d6:	3708      	adds	r7, #8
 80048d8:	46bd      	mov	sp, r7
 80048da:	bdb0      	pop	{r4, r5, r7, pc}

080048dc <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj2EEEE14__visit_invokeESJ_SM_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80048dc:	b5b0      	push	{r4, r5, r7, lr}
 80048de:	b082      	sub	sp, #8
 80048e0:	af00      	add	r7, sp, #0
 80048e2:	6078      	str	r0, [r7, #4]
 80048e4:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 80048e6:	6878      	ldr	r0, [r7, #4]
 80048e8:	f001 fa6c 	bl	8005dc4 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 80048ec:	4604      	mov	r4, r0
 80048ee:	6838      	ldr	r0, [r7, #0]
 80048f0:	f7fe ff90 	bl	8003814 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 80048f4:	4603      	mov	r3, r0
 80048f6:	4619      	mov	r1, r3
 80048f8:	4620      	mov	r0, r4
 80048fa:	f7ff ffd9 	bl	80048b0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 80048fe:	462b      	mov	r3, r5
      }
 8004900:	4618      	mov	r0, r3
 8004902:	3708      	adds	r7, #8
 8004904:	46bd      	mov	sp, r7
 8004906:	bdb0      	pop	{r4, r5, r7, pc}

08004908 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESM_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8004908:	b580      	push	{r7, lr}
 800490a:	b082      	sub	sp, #8
 800490c:	af00      	add	r7, sp, #0
 800490e:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8004910:	6878      	ldr	r0, [r7, #4]
 8004912:	f7fe ff7f 	bl	8003814 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8004916:	4603      	mov	r3, r0
 8004918:	4618      	mov	r0, r3
 800491a:	f7fd fd2c 	bl	8002376 <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 800491e:	4603      	mov	r3, r0
	}
 8004920:	4618      	mov	r0, r3
 8004922:	3708      	adds	r7, #8
 8004924:	46bd      	mov	sp, r7
 8004926:	bd80      	pop	{r7, pc}

08004928 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESJ_SM_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8004928:	b5b0      	push	{r4, r5, r7, lr}
 800492a:	b082      	sub	sp, #8
 800492c:	af00      	add	r7, sp, #0
 800492e:	6078      	str	r0, [r7, #4]
 8004930:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8004932:	6878      	ldr	r0, [r7, #4]
 8004934:	f001 fa46 	bl	8005dc4 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8004938:	4604      	mov	r4, r0
 800493a:	6838      	ldr	r0, [r7, #0]
 800493c:	f7fe ff6a 	bl	8003814 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8004940:	4603      	mov	r3, r0
 8004942:	4618      	mov	r0, r3
 8004944:	f7ff ffe0 	bl	8004908 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESM_EEDcOT0_>
 8004948:	4603      	mov	r3, r0
 800494a:	4619      	mov	r1, r3
 800494c:	4620      	mov	r0, r4
 800494e:	f001 fa89 	bl	8005e64 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_JRS8_EENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>
		std::forward<_Variants>(__vars))...);
 8004952:	462b      	mov	r3, r5
      }
 8004954:	4618      	mov	r0, r3
 8004956:	3708      	adds	r7, #8
 8004958:	46bd      	mov	sp, r7
 800495a:	bdb0      	pop	{r4, r5, r7, pc}

0800495c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESJ_SM_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800495c:	b5b0      	push	{r4, r5, r7, lr}
 800495e:	b082      	sub	sp, #8
 8004960:	af00      	add	r7, sp, #0
 8004962:	6078      	str	r0, [r7, #4]
 8004964:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8004966:	6878      	ldr	r0, [r7, #4]
 8004968:	f001 fa2c 	bl	8005dc4 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800496c:	4604      	mov	r4, r0
 800496e:	6838      	ldr	r0, [r7, #0]
 8004970:	f7fe ff50 	bl	8003814 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8004974:	4603      	mov	r3, r0
 8004976:	4619      	mov	r1, r3
 8004978:	4620      	mov	r0, r4
 800497a:	f7ff ffd5 	bl	8004928 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 800497e:	462b      	mov	r3, r5
      }
 8004980:	4618      	mov	r0, r3
 8004982:	3708      	adds	r7, #8
 8004984:	46bd      	mov	sp, r7
 8004986:	bdb0      	pop	{r4, r5, r7, pc}

08004988 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj3EEEE14__visit_invokeESJ_SM_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8004988:	b5b0      	push	{r4, r5, r7, lr}
 800498a:	b082      	sub	sp, #8
 800498c:	af00      	add	r7, sp, #0
 800498e:	6078      	str	r0, [r7, #4]
 8004990:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8004992:	6878      	ldr	r0, [r7, #4]
 8004994:	f001 fa16 	bl	8005dc4 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8004998:	4604      	mov	r4, r0
 800499a:	6838      	ldr	r0, [r7, #0]
 800499c:	f7fe ff3a 	bl	8003814 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 80049a0:	4603      	mov	r3, r0
 80049a2:	4619      	mov	r1, r3
 80049a4:	4620      	mov	r0, r4
 80049a6:	f7ff ffd9 	bl	800495c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 80049aa:	462b      	mov	r3, r5
      }
 80049ac:	4618      	mov	r0, r3
 80049ae:	3708      	adds	r7, #8
 80049b0:	46bd      	mov	sp, r7
 80049b2:	bdb0      	pop	{r4, r5, r7, pc}

080049b4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj4EEEE28__element_by_index_or_cookieILj4ESM_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 80049b4:	b580      	push	{r7, lr}
 80049b6:	b082      	sub	sp, #8
 80049b8:	af00      	add	r7, sp, #0
 80049ba:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 80049bc:	6878      	ldr	r0, [r7, #4]
 80049be:	f7fe ff29 	bl	8003814 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 80049c2:	4603      	mov	r3, r0
 80049c4:	4618      	mov	r0, r3
 80049c6:	f7fd fd98 	bl	80024fa <_ZNSt8__detail9__variant5__getILj4ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 80049ca:	4603      	mov	r3, r0
	}
 80049cc:	4618      	mov	r0, r3
 80049ce:	3708      	adds	r7, #8
 80049d0:	46bd      	mov	sp, r7
 80049d2:	bd80      	pop	{r7, pc}

080049d4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj4EEEE19__visit_invoke_implESJ_SM_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 80049d4:	b5b0      	push	{r4, r5, r7, lr}
 80049d6:	b082      	sub	sp, #8
 80049d8:	af00      	add	r7, sp, #0
 80049da:	6078      	str	r0, [r7, #4]
 80049dc:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 80049de:	6878      	ldr	r0, [r7, #4]
 80049e0:	f001 f9f0 	bl	8005dc4 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 80049e4:	4604      	mov	r4, r0
 80049e6:	6838      	ldr	r0, [r7, #0]
 80049e8:	f7fe ff14 	bl	8003814 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 80049ec:	4603      	mov	r3, r0
 80049ee:	4618      	mov	r0, r3
 80049f0:	f7ff ffe0 	bl	80049b4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj4EEEE28__element_by_index_or_cookieILj4ESM_EEDcOT0_>
 80049f4:	4603      	mov	r3, r0
 80049f6:	4619      	mov	r1, r3
 80049f8:	4620      	mov	r0, r4
 80049fa:	f001 fa4a 	bl	8005e92 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_JRSC_EENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>
		std::forward<_Variants>(__vars))...);
 80049fe:	462b      	mov	r3, r5
      }
 8004a00:	4618      	mov	r0, r3
 8004a02:	3708      	adds	r7, #8
 8004a04:	46bd      	mov	sp, r7
 8004a06:	bdb0      	pop	{r4, r5, r7, pc}

08004a08 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj4EEEE17__do_visit_invokeESJ_SM_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8004a08:	b5b0      	push	{r4, r5, r7, lr}
 8004a0a:	b082      	sub	sp, #8
 8004a0c:	af00      	add	r7, sp, #0
 8004a0e:	6078      	str	r0, [r7, #4]
 8004a10:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8004a12:	6878      	ldr	r0, [r7, #4]
 8004a14:	f001 f9d6 	bl	8005dc4 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8004a18:	4604      	mov	r4, r0
 8004a1a:	6838      	ldr	r0, [r7, #0]
 8004a1c:	f7fe fefa 	bl	8003814 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8004a20:	4603      	mov	r3, r0
 8004a22:	4619      	mov	r1, r3
 8004a24:	4620      	mov	r0, r4
 8004a26:	f7ff ffd5 	bl	80049d4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj4EEEE19__visit_invoke_implESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 8004a2a:	462b      	mov	r3, r5
      }
 8004a2c:	4618      	mov	r0, r3
 8004a2e:	3708      	adds	r7, #8
 8004a30:	46bd      	mov	sp, r7
 8004a32:	bdb0      	pop	{r4, r5, r7, pc}

08004a34 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj4EEEE14__visit_invokeESJ_SM_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8004a34:	b5b0      	push	{r4, r5, r7, lr}
 8004a36:	b082      	sub	sp, #8
 8004a38:	af00      	add	r7, sp, #0
 8004a3a:	6078      	str	r0, [r7, #4]
 8004a3c:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8004a3e:	6878      	ldr	r0, [r7, #4]
 8004a40:	f001 f9c0 	bl	8005dc4 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8004a44:	4604      	mov	r4, r0
 8004a46:	6838      	ldr	r0, [r7, #0]
 8004a48:	f7fe fee4 	bl	8003814 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8004a4c:	4603      	mov	r3, r0
 8004a4e:	4619      	mov	r1, r3
 8004a50:	4620      	mov	r0, r4
 8004a52:	f7ff ffd9 	bl	8004a08 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj4EEEE17__do_visit_invokeESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 8004a56:	462b      	mov	r3, r5
      }
 8004a58:	4618      	mov	r0, r3
 8004a5a:	3708      	adds	r7, #8
 8004a5c:	46bd      	mov	sp, r7
 8004a5e:	bdb0      	pop	{r4, r5, r7, pc}

08004a60 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbS9_SD_EEEJLj5EEE9_M_accessIJEEERKSN_jDpT_>:
	_M_access(size_t __first_index, _Args... __rest_indices) const
 8004a60:	b580      	push	{r7, lr}
 8004a62:	b082      	sub	sp, #8
 8004a64:	af00      	add	r7, sp, #0
 8004a66:	6078      	str	r0, [r7, #4]
 8004a68:	6039      	str	r1, [r7, #0]
	    ._M_access(__rest_indices...);
 8004a6a:	683b      	ldr	r3, [r7, #0]
 8004a6c:	009b      	lsls	r3, r3, #2
 8004a6e:	687a      	ldr	r2, [r7, #4]
 8004a70:	4413      	add	r3, r2
 8004a72:	4618      	mov	r0, r3
 8004a74:	f001 fa24 	bl	8005ec0 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbS9_SD_EEEJEE9_M_accessEv>
 8004a78:	4603      	mov	r3, r0
	}
 8004a7a:	4618      	mov	r0, r3
 8004a7c:	3708      	adds	r7, #8
 8004a7e:	46bd      	mov	sp, r7
 8004a80:	bd80      	pop	{r7, pc}
	...

08004a84 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_JRSt7variantIJifbS8_SC_EEEEDcOT1_DpOT2_>:
    __do_visit(_Visitor&& __visitor, _Variants&&... __variants)
 8004a84:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004a86:	b085      	sub	sp, #20
 8004a88:	af00      	add	r7, sp, #0
 8004a8a:	6078      	str	r0, [r7, #4]
 8004a8c:	6039      	str	r1, [r7, #0]
      constexpr auto& __vtable = __detail::__variant::__gen_vtable<
 8004a8e:	4b0f      	ldr	r3, [pc, #60]	; (8004acc <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_JRSt7variantIJifbS8_SC_EEEEDcOT1_DpOT2_+0x48>)
 8004a90:	60fb      	str	r3, [r7, #12]
      auto __func_ptr = __vtable._M_access(__variants.index()...);
 8004a92:	6838      	ldr	r0, [r7, #0]
 8004a94:	f7fd fdab 	bl	80025ee <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv>
 8004a98:	4603      	mov	r3, r0
 8004a9a:	4619      	mov	r1, r3
 8004a9c:	68f8      	ldr	r0, [r7, #12]
 8004a9e:	f7ff ffdf 	bl	8004a60 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbS9_SD_EEEJLj5EEE9_M_accessIJEEERKSN_jDpT_>
 8004aa2:	4603      	mov	r3, r0
 8004aa4:	681b      	ldr	r3, [r3, #0]
 8004aa6:	60bb      	str	r3, [r7, #8]
      return (*__func_ptr)(std::forward<_Visitor>(__visitor),
 8004aa8:	68bc      	ldr	r4, [r7, #8]
 8004aaa:	6878      	ldr	r0, [r7, #4]
 8004aac:	f001 fa13 	bl	8005ed6 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8004ab0:	4605      	mov	r5, r0
 8004ab2:	6838      	ldr	r0, [r7, #0]
 8004ab4:	f7fe feae 	bl	8003814 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8004ab8:	4603      	mov	r3, r0
 8004aba:	4619      	mov	r1, r3
 8004abc:	4628      	mov	r0, r5
 8004abe:	47a0      	blx	r4
			   std::forward<_Variants>(__variants)...);
 8004ac0:	4633      	mov	r3, r6
    }
 8004ac2:	4618      	mov	r0, r3
 8004ac4:	3714      	adds	r7, #20
 8004ac6:	46bd      	mov	sp, r7
 8004ac8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004aca:	bf00      	nop
 8004acc:	0802a184 	.word	0x0802a184

08004ad0 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE13_M_reset_implEv>:
      constexpr void _M_reset_impl()
 8004ad0:	b580      	push	{r7, lr}
 8004ad2:	b084      	sub	sp, #16
 8004ad4:	af00      	add	r7, sp, #0
 8004ad6:	6078      	str	r0, [r7, #4]
	__do_visit([](auto&& __this_mem) mutable
 8004ad8:	6878      	ldr	r0, [r7, #4]
 8004ada:	f7ff fe08 	bl	80046ee <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEERNSt8__detail9__variant16_Variant_storageILb0EJifbS5_S9_EEEEDcOT0_>
 8004ade:	4602      	mov	r2, r0
 8004ae0:	f107 030c 	add.w	r3, r7, #12
 8004ae4:	4611      	mov	r1, r2
 8004ae6:	4618      	mov	r0, r3
 8004ae8:	f7ff ffcc 	bl	8004a84 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_JRSt7variantIJifbS8_SC_EEEEDcOT1_DpOT2_>
      }
 8004aec:	bf00      	nop
 8004aee:	3710      	adds	r7, #16
 8004af0:	46bd      	mov	sp, r7
 8004af2:	bd80      	pop	{r7, pc}

08004af4 <_ZNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1Ev>:
      constexpr _Variadic_union() : _M_rest() { }
 8004af4:	b580      	push	{r7, lr}
 8004af6:	b082      	sub	sp, #8
 8004af8:	af00      	add	r7, sp, #0
 8004afa:	6078      	str	r0, [r7, #4]
 8004afc:	687b      	ldr	r3, [r7, #4]
 8004afe:	4618      	mov	r0, r3
 8004b00:	f001 f9f4 	bl	8005eec <_ZNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1Ev>
 8004b04:	687b      	ldr	r3, [r7, #4]
 8004b06:	4618      	mov	r0, r3
 8004b08:	3708      	adds	r7, #8
 8004b0a:	46bd      	mov	sp, r7
 8004b0c:	bd80      	pop	{r7, pc}

08004b0e <_ZSt7forwardIRKNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8004b0e:	b480      	push	{r7}
 8004b10:	b083      	sub	sp, #12
 8004b12:	af00      	add	r7, sp, #0
 8004b14:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8004b16:	687b      	ldr	r3, [r7, #4]
 8004b18:	4618      	mov	r0, r3
 8004b1a:	370c      	adds	r7, #12
 8004b1c:	46bd      	mov	sp, r7
 8004b1e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004b22:	4770      	bx	lr

08004b24 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8004b24:	b480      	push	{r7}
 8004b26:	b083      	sub	sp, #12
 8004b28:	af00      	add	r7, sp, #0
 8004b2a:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8004b2c:	687b      	ldr	r3, [r7, #4]
 8004b2e:	4618      	mov	r0, r3
 8004b30:	370c      	adds	r7, #12
 8004b32:	46bd      	mov	sp, r7
 8004b34:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004b38:	4770      	bx	lr

08004b3a <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_JRKiEENSt15__invoke_resultISM_JDpT0_EE4typeESN_DpOSS_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8004b3a:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004b3c:	b083      	sub	sp, #12
 8004b3e:	af00      	add	r7, sp, #0
 8004b40:	6078      	str	r0, [r7, #4]
 8004b42:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8004b44:	6878      	ldr	r0, [r7, #4]
 8004b46:	f000 f876 	bl	8004c36 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8004b4a:	4604      	mov	r4, r0
 8004b4c:	6838      	ldr	r0, [r7, #0]
 8004b4e:	f000 fa22 	bl	8004f96 <_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE>
 8004b52:	4603      	mov	r3, r0
 8004b54:	461a      	mov	r2, r3
 8004b56:	4621      	mov	r1, r4
 8004b58:	4628      	mov	r0, r5
 8004b5a:	f001 f9d4 	bl	8005f06 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS1_15_Copy_ctor_baseILb0EJifbS9_SD_EEERKSF_EEvOT0_OT1_EUlOT_E_JRKiEESN_St14__invoke_otherSK_DpOT1_>
					std::forward<_Args>(__args)...);
 8004b5e:	4633      	mov	r3, r6
    }
 8004b60:	4618      	mov	r0, r3
 8004b62:	370c      	adds	r7, #12
 8004b64:	46bd      	mov	sp, r7
 8004b66:	bdf0      	pop	{r4, r5, r6, r7, pc}

08004b68 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_JRKfEENSt15__invoke_resultISM_JDpT0_EE4typeESN_DpOSS_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8004b68:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004b6a:	b083      	sub	sp, #12
 8004b6c:	af00      	add	r7, sp, #0
 8004b6e:	6078      	str	r0, [r7, #4]
 8004b70:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8004b72:	6878      	ldr	r0, [r7, #4]
 8004b74:	f000 f85f 	bl	8004c36 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8004b78:	4604      	mov	r4, r0
 8004b7a:	6838      	ldr	r0, [r7, #0]
 8004b7c:	f000 fa34 	bl	8004fe8 <_ZSt7forwardIRKfEOT_RNSt16remove_referenceIS2_E4typeE>
 8004b80:	4603      	mov	r3, r0
 8004b82:	461a      	mov	r2, r3
 8004b84:	4621      	mov	r1, r4
 8004b86:	4628      	mov	r0, r5
 8004b88:	f001 f9d4 	bl	8005f34 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS1_15_Copy_ctor_baseILb0EJifbS9_SD_EEERKSF_EEvOT0_OT1_EUlOT_E_JRKfEESN_St14__invoke_otherSK_DpOT1_>
					std::forward<_Args>(__args)...);
 8004b8c:	4633      	mov	r3, r6
    }
 8004b8e:	4618      	mov	r0, r3
 8004b90:	370c      	adds	r7, #12
 8004b92:	46bd      	mov	sp, r7
 8004b94:	bdf0      	pop	{r4, r5, r6, r7, pc}

08004b96 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_JRKbEENSt15__invoke_resultISM_JDpT0_EE4typeESN_DpOSS_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8004b96:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004b98:	b083      	sub	sp, #12
 8004b9a:	af00      	add	r7, sp, #0
 8004b9c:	6078      	str	r0, [r7, #4]
 8004b9e:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8004ba0:	6878      	ldr	r0, [r7, #4]
 8004ba2:	f000 f848 	bl	8004c36 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8004ba6:	4604      	mov	r4, r0
 8004ba8:	6838      	ldr	r0, [r7, #0]
 8004baa:	f000 fa46 	bl	800503a <_ZSt7forwardIRKbEOT_RNSt16remove_referenceIS2_E4typeE>
 8004bae:	4603      	mov	r3, r0
 8004bb0:	461a      	mov	r2, r3
 8004bb2:	4621      	mov	r1, r4
 8004bb4:	4628      	mov	r0, r5
 8004bb6:	f001 f9d4 	bl	8005f62 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS1_15_Copy_ctor_baseILb0EJifbS9_SD_EEERKSF_EEvOT0_OT1_EUlOT_E_JRKbEESN_St14__invoke_otherSK_DpOT1_>
					std::forward<_Args>(__args)...);
 8004bba:	4633      	mov	r3, r6
    }
 8004bbc:	4618      	mov	r0, r3
 8004bbe:	370c      	adds	r7, #12
 8004bc0:	46bd      	mov	sp, r7
 8004bc2:	bdf0      	pop	{r4, r5, r6, r7, pc}

08004bc4 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_JRKS8_EENSt15__invoke_resultISM_JDpT0_EE4typeESN_DpOSS_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8004bc4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004bc6:	b083      	sub	sp, #12
 8004bc8:	af00      	add	r7, sp, #0
 8004bca:	6078      	str	r0, [r7, #4]
 8004bcc:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8004bce:	6878      	ldr	r0, [r7, #4]
 8004bd0:	f000 f831 	bl	8004c36 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8004bd4:	4604      	mov	r4, r0
 8004bd6:	6838      	ldr	r0, [r7, #0]
 8004bd8:	f000 fa64 	bl	80050a4 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 8004bdc:	4603      	mov	r3, r0
 8004bde:	461a      	mov	r2, r3
 8004be0:	4621      	mov	r1, r4
 8004be2:	4628      	mov	r0, r5
 8004be4:	f001 f9d4 	bl	8005f90 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS1_15_Copy_ctor_baseILb0EJifbS9_SD_EEERKSF_EEvOT0_OT1_EUlOT_E_JRKS9_EESN_St14__invoke_otherSK_DpOT1_>
					std::forward<_Args>(__args)...);
 8004be8:	4633      	mov	r3, r6
    }
 8004bea:	4618      	mov	r0, r3
 8004bec:	370c      	adds	r7, #12
 8004bee:	46bd      	mov	sp, r7
 8004bf0:	bdf0      	pop	{r4, r5, r6, r7, pc}

08004bf2 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_JRKSC_EENSt15__invoke_resultISM_JDpT0_EE4typeESN_DpOSS_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8004bf2:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004bf4:	b083      	sub	sp, #12
 8004bf6:	af00      	add	r7, sp, #0
 8004bf8:	6078      	str	r0, [r7, #4]
 8004bfa:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8004bfc:	6878      	ldr	r0, [r7, #4]
 8004bfe:	f000 f81a 	bl	8004c36 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8004c02:	4604      	mov	r4, r0
 8004c04:	6838      	ldr	r0, [r7, #0]
 8004c06:	f000 fa82 	bl	800510e <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>
 8004c0a:	4603      	mov	r3, r0
 8004c0c:	461a      	mov	r2, r3
 8004c0e:	4621      	mov	r1, r4
 8004c10:	4628      	mov	r0, r5
 8004c12:	f001 f9d4 	bl	8005fbe <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS1_15_Copy_ctor_baseILb0EJifbS9_SD_EEERKSF_EEvOT0_OT1_EUlOT_E_JRKSD_EESN_St14__invoke_otherSK_DpOT1_>
					std::forward<_Args>(__args)...);
 8004c16:	4633      	mov	r3, r6
    }
 8004c18:	4618      	mov	r0, r3
 8004c1a:	370c      	adds	r7, #12
 8004c1c:	46bd      	mov	sp, r7
 8004c1e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08004c20 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS0_15_Copy_ctor_baseILb0EJifbS9_SD_EEERKSF_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbS9_SD_EEEJEE9_M_accessEv>:
      _M_access() const
 8004c20:	b480      	push	{r7}
 8004c22:	b083      	sub	sp, #12
 8004c24:	af00      	add	r7, sp, #0
 8004c26:	6078      	str	r0, [r7, #4]
      { return _M_data; }
 8004c28:	687b      	ldr	r3, [r7, #4]
 8004c2a:	4618      	mov	r0, r3
 8004c2c:	370c      	adds	r7, #12
 8004c2e:	46bd      	mov	sp, r7
 8004c30:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004c34:	4770      	bx	lr

08004c36 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8004c36:	b480      	push	{r7}
 8004c38:	b083      	sub	sp, #12
 8004c3a:	af00      	add	r7, sp, #0
 8004c3c:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8004c3e:	687b      	ldr	r3, [r7, #4]
 8004c40:	4618      	mov	r0, r3
 8004c42:	370c      	adds	r7, #12
 8004c44:	46bd      	mov	sp, r7
 8004c46:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004c4a:	4770      	bx	lr

08004c4c <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8004c4c:	b480      	push	{r7}
 8004c4e:	b083      	sub	sp, #12
 8004c50:	af00      	add	r7, sp, #0
 8004c52:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8004c54:	687b      	ldr	r3, [r7, #4]
 8004c56:	4618      	mov	r0, r3
 8004c58:	370c      	adds	r7, #12
 8004c5a:	46bd      	mov	sp, r7
 8004c5c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004c60:	4770      	bx	lr

08004c62 <_ZSt7forwardISt17integral_constantIjLj0EEEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8004c62:	b480      	push	{r7}
 8004c64:	b083      	sub	sp, #12
 8004c66:	af00      	add	r7, sp, #0
 8004c68:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8004c6a:	687b      	ldr	r3, [r7, #4]
 8004c6c:	4618      	mov	r0, r3
 8004c6e:	370c      	adds	r7, #12
 8004c70:	46bd      	mov	sp, r7
 8004c72:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004c76:	4770      	bx	lr

08004c78 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSEOSE_EUlOT_T0_E_JRiSt17integral_constantIjLj0EEEESG_St14__invoke_otherOSI_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8004c78:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004c7c:	b084      	sub	sp, #16
 8004c7e:	af00      	add	r7, sp, #0
 8004c80:	7338      	strb	r0, [r7, #12]
 8004c82:	60b9      	str	r1, [r7, #8]
 8004c84:	607a      	str	r2, [r7, #4]
 8004c86:	603b      	str	r3, [r7, #0]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8004c88:	68b8      	ldr	r0, [r7, #8]
 8004c8a:	f7fe fee1 	bl	8003a50 <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 8004c8e:	4604      	mov	r4, r0
 8004c90:	6878      	ldr	r0, [r7, #4]
 8004c92:	f7ff ffdb 	bl	8004c4c <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 8004c96:	4605      	mov	r5, r0
 8004c98:	6838      	ldr	r0, [r7, #0]
 8004c9a:	f7ff ffe2 	bl	8004c62 <_ZSt7forwardISt17integral_constantIjLj0EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8004c9e:	4632      	mov	r2, r6
 8004ca0:	4629      	mov	r1, r5
 8004ca2:	4620      	mov	r0, r4
 8004ca4:	f001 f9a2 	bl	8005fec <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_ENUlOT_T0_E_clIRiSt17integral_constantIjLj0EEEENS0_20__variant_idx_cookieESF_SG_>
 8004ca8:	4643      	mov	r3, r8
 8004caa:	4618      	mov	r0, r3
 8004cac:	3710      	adds	r7, #16
 8004cae:	46bd      	mov	sp, r7
 8004cb0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08004cb4 <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8004cb4:	b480      	push	{r7}
 8004cb6:	b083      	sub	sp, #12
 8004cb8:	af00      	add	r7, sp, #0
 8004cba:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8004cbc:	687b      	ldr	r3, [r7, #4]
 8004cbe:	4618      	mov	r0, r3
 8004cc0:	370c      	adds	r7, #12
 8004cc2:	46bd      	mov	sp, r7
 8004cc4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004cc8:	4770      	bx	lr

08004cca <_ZSt7forwardISt17integral_constantIjLj1EEEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8004cca:	b480      	push	{r7}
 8004ccc:	b083      	sub	sp, #12
 8004cce:	af00      	add	r7, sp, #0
 8004cd0:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8004cd2:	687b      	ldr	r3, [r7, #4]
 8004cd4:	4618      	mov	r0, r3
 8004cd6:	370c      	adds	r7, #12
 8004cd8:	46bd      	mov	sp, r7
 8004cda:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004cde:	4770      	bx	lr

08004ce0 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSEOSE_EUlOT_T0_E_JRfSt17integral_constantIjLj1EEEESG_St14__invoke_otherOSI_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8004ce0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004ce4:	b084      	sub	sp, #16
 8004ce6:	af00      	add	r7, sp, #0
 8004ce8:	7338      	strb	r0, [r7, #12]
 8004cea:	60b9      	str	r1, [r7, #8]
 8004cec:	607a      	str	r2, [r7, #4]
 8004cee:	603b      	str	r3, [r7, #0]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8004cf0:	68b8      	ldr	r0, [r7, #8]
 8004cf2:	f7fe fead 	bl	8003a50 <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 8004cf6:	4604      	mov	r4, r0
 8004cf8:	6878      	ldr	r0, [r7, #4]
 8004cfa:	f7ff ffdb 	bl	8004cb4 <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 8004cfe:	4605      	mov	r5, r0
 8004d00:	6838      	ldr	r0, [r7, #0]
 8004d02:	f7ff ffe2 	bl	8004cca <_ZSt7forwardISt17integral_constantIjLj1EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8004d06:	4632      	mov	r2, r6
 8004d08:	4629      	mov	r1, r5
 8004d0a:	4620      	mov	r0, r4
 8004d0c:	f001 f9c0 	bl	8006090 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_ENUlOT_T0_E_clIRfSt17integral_constantIjLj1EEEENS0_20__variant_idx_cookieESF_SG_>
 8004d10:	4643      	mov	r3, r8
 8004d12:	4618      	mov	r0, r3
 8004d14:	3710      	adds	r7, #16
 8004d16:	46bd      	mov	sp, r7
 8004d18:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08004d1c <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8004d1c:	b480      	push	{r7}
 8004d1e:	b083      	sub	sp, #12
 8004d20:	af00      	add	r7, sp, #0
 8004d22:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8004d24:	687b      	ldr	r3, [r7, #4]
 8004d26:	4618      	mov	r0, r3
 8004d28:	370c      	adds	r7, #12
 8004d2a:	46bd      	mov	sp, r7
 8004d2c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004d30:	4770      	bx	lr

08004d32 <_ZSt7forwardISt17integral_constantIjLj2EEEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8004d32:	b480      	push	{r7}
 8004d34:	b083      	sub	sp, #12
 8004d36:	af00      	add	r7, sp, #0
 8004d38:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8004d3a:	687b      	ldr	r3, [r7, #4]
 8004d3c:	4618      	mov	r0, r3
 8004d3e:	370c      	adds	r7, #12
 8004d40:	46bd      	mov	sp, r7
 8004d42:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004d46:	4770      	bx	lr

08004d48 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSEOSE_EUlOT_T0_E_JRbSt17integral_constantIjLj2EEEESG_St14__invoke_otherOSI_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8004d48:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004d4c:	b084      	sub	sp, #16
 8004d4e:	af00      	add	r7, sp, #0
 8004d50:	7338      	strb	r0, [r7, #12]
 8004d52:	60b9      	str	r1, [r7, #8]
 8004d54:	607a      	str	r2, [r7, #4]
 8004d56:	603b      	str	r3, [r7, #0]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8004d58:	68b8      	ldr	r0, [r7, #8]
 8004d5a:	f7fe fe79 	bl	8003a50 <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 8004d5e:	4604      	mov	r4, r0
 8004d60:	6878      	ldr	r0, [r7, #4]
 8004d62:	f7ff ffdb 	bl	8004d1c <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
 8004d66:	4605      	mov	r5, r0
 8004d68:	6838      	ldr	r0, [r7, #0]
 8004d6a:	f7ff ffe2 	bl	8004d32 <_ZSt7forwardISt17integral_constantIjLj2EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8004d6e:	4632      	mov	r2, r6
 8004d70:	4629      	mov	r1, r5
 8004d72:	4620      	mov	r0, r4
 8004d74:	f001 f9de 	bl	8006134 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_ENUlOT_T0_E_clIRbSt17integral_constantIjLj2EEEENS0_20__variant_idx_cookieESF_SG_>
 8004d78:	4643      	mov	r3, r8
 8004d7a:	4618      	mov	r0, r3
 8004d7c:	3710      	adds	r7, #16
 8004d7e:	46bd      	mov	sp, r7
 8004d80:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08004d84 <_ZN9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE6_M_ptrEv>:
      const void*
      _M_addr() const noexcept
      { return static_cast<const void*>(&_M_storage); }

      _Tp*
      _M_ptr() noexcept
 8004d84:	b580      	push	{r7, lr}
 8004d86:	b082      	sub	sp, #8
 8004d88:	af00      	add	r7, sp, #0
 8004d8a:	6078      	str	r0, [r7, #4]
      { return static_cast<_Tp*>(_M_addr()); }
 8004d8c:	6878      	ldr	r0, [r7, #4]
 8004d8e:	f001 fa24 	bl	80061da <_ZN9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7_M_addrEv>
 8004d92:	4603      	mov	r3, r0
 8004d94:	4618      	mov	r0, r3
 8004d96:	3708      	adds	r7, #8
 8004d98:	46bd      	mov	sp, r7
 8004d9a:	bd80      	pop	{r7, pc}

08004d9c <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8004d9c:	b480      	push	{r7}
 8004d9e:	b083      	sub	sp, #12
 8004da0:	af00      	add	r7, sp, #0
 8004da2:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8004da4:	687b      	ldr	r3, [r7, #4]
 8004da6:	4618      	mov	r0, r3
 8004da8:	370c      	adds	r7, #12
 8004daa:	46bd      	mov	sp, r7
 8004dac:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004db0:	4770      	bx	lr

08004db2 <_ZSt7forwardISt17integral_constantIjLj3EEEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8004db2:	b480      	push	{r7}
 8004db4:	b083      	sub	sp, #12
 8004db6:	af00      	add	r7, sp, #0
 8004db8:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8004dba:	687b      	ldr	r3, [r7, #4]
 8004dbc:	4618      	mov	r0, r3
 8004dbe:	370c      	adds	r7, #12
 8004dc0:	46bd      	mov	sp, r7
 8004dc2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004dc6:	4770      	bx	lr

08004dc8 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSEOSE_EUlOT_T0_E_JRS9_St17integral_constantIjLj3EEEESG_St14__invoke_otherOSI_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8004dc8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004dcc:	b084      	sub	sp, #16
 8004dce:	af00      	add	r7, sp, #0
 8004dd0:	7338      	strb	r0, [r7, #12]
 8004dd2:	60b9      	str	r1, [r7, #8]
 8004dd4:	607a      	str	r2, [r7, #4]
 8004dd6:	603b      	str	r3, [r7, #0]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8004dd8:	68b8      	ldr	r0, [r7, #8]
 8004dda:	f7fe fe39 	bl	8003a50 <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 8004dde:	4604      	mov	r4, r0
 8004de0:	6878      	ldr	r0, [r7, #4]
 8004de2:	f7ff ffdb 	bl	8004d9c <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 8004de6:	4605      	mov	r5, r0
 8004de8:	6838      	ldr	r0, [r7, #0]
 8004dea:	f7ff ffe2 	bl	8004db2 <_ZSt7forwardISt17integral_constantIjLj3EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8004dee:	4632      	mov	r2, r6
 8004df0:	4629      	mov	r1, r5
 8004df2:	4620      	mov	r0, r4
 8004df4:	f001 f9fc 	bl	80061f0 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_ENUlOT_T0_E_clIRS7_St17integral_constantIjLj3EEEENS0_20__variant_idx_cookieESF_SG_>
 8004df8:	4643      	mov	r3, r8
 8004dfa:	4618      	mov	r0, r3
 8004dfc:	3710      	adds	r7, #16
 8004dfe:	46bd      	mov	sp, r7
 8004e00:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08004e04 <_ZN9__gnu_cxx16__aligned_membufISt6vectorI6SymbolSaIS2_EEE6_M_ptrEv>:
      _M_ptr() noexcept
 8004e04:	b580      	push	{r7, lr}
 8004e06:	b082      	sub	sp, #8
 8004e08:	af00      	add	r7, sp, #0
 8004e0a:	6078      	str	r0, [r7, #4]
      { return static_cast<_Tp*>(_M_addr()); }
 8004e0c:	6878      	ldr	r0, [r7, #4]
 8004e0e:	f001 fa43 	bl	8006298 <_ZN9__gnu_cxx16__aligned_membufISt6vectorI6SymbolSaIS2_EEE7_M_addrEv>
 8004e12:	4603      	mov	r3, r0
 8004e14:	4618      	mov	r0, r3
 8004e16:	3708      	adds	r7, #8
 8004e18:	46bd      	mov	sp, r7
 8004e1a:	bd80      	pop	{r7, pc}

08004e1c <_ZSt7forwardIRSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS5_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8004e1c:	b480      	push	{r7}
 8004e1e:	b083      	sub	sp, #12
 8004e20:	af00      	add	r7, sp, #0
 8004e22:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8004e24:	687b      	ldr	r3, [r7, #4]
 8004e26:	4618      	mov	r0, r3
 8004e28:	370c      	adds	r7, #12
 8004e2a:	46bd      	mov	sp, r7
 8004e2c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004e30:	4770      	bx	lr

08004e32 <_ZSt7forwardISt17integral_constantIjLj4EEEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8004e32:	b480      	push	{r7}
 8004e34:	b083      	sub	sp, #12
 8004e36:	af00      	add	r7, sp, #0
 8004e38:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8004e3a:	687b      	ldr	r3, [r7, #4]
 8004e3c:	4618      	mov	r0, r3
 8004e3e:	370c      	adds	r7, #12
 8004e40:	46bd      	mov	sp, r7
 8004e42:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004e46:	4770      	bx	lr

08004e48 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSEOSE_EUlOT_T0_E_JRSD_St17integral_constantIjLj4EEEESG_St14__invoke_otherOSI_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8004e48:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004e4c:	b084      	sub	sp, #16
 8004e4e:	af00      	add	r7, sp, #0
 8004e50:	7338      	strb	r0, [r7, #12]
 8004e52:	60b9      	str	r1, [r7, #8]
 8004e54:	607a      	str	r2, [r7, #4]
 8004e56:	603b      	str	r3, [r7, #0]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8004e58:	68b8      	ldr	r0, [r7, #8]
 8004e5a:	f7fe fdf9 	bl	8003a50 <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 8004e5e:	4604      	mov	r4, r0
 8004e60:	6878      	ldr	r0, [r7, #4]
 8004e62:	f7ff ffdb 	bl	8004e1c <_ZSt7forwardIRSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS5_E4typeE>
 8004e66:	4605      	mov	r5, r0
 8004e68:	6838      	ldr	r0, [r7, #0]
 8004e6a:	f7ff ffe2 	bl	8004e32 <_ZSt7forwardISt17integral_constantIjLj4EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8004e6e:	4632      	mov	r2, r6
 8004e70:	4629      	mov	r1, r5
 8004e72:	4620      	mov	r0, r4
 8004e74:	f001 fa1b 	bl	80062ae <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_ENUlOT_T0_E_clIRSB_St17integral_constantIjLj4EEEENS0_20__variant_idx_cookieESF_SG_>
 8004e78:	4643      	mov	r3, r8
 8004e7a:	4618      	mov	r0, r3
 8004e7c:	3710      	adds	r7, #16
 8004e7e:	46bd      	mov	sp, r7
 8004e80:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08004e84 <_ZSt7forwardIRSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEOT_RNSt16remove_referenceISD_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8004e84:	b480      	push	{r7}
 8004e86:	b083      	sub	sp, #12
 8004e88:	af00      	add	r7, sp, #0
 8004e8a:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8004e8c:	687b      	ldr	r3, [r7, #4]
 8004e8e:	4618      	mov	r0, r3
 8004e90:	370c      	adds	r7, #12
 8004e92:	46bd      	mov	sp, r7
 8004e94:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004e98:	4770      	bx	lr

08004e9a <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISF_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8004e9a:	b480      	push	{r7}
 8004e9c:	b083      	sub	sp, #12
 8004e9e:	af00      	add	r7, sp, #0
 8004ea0:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8004ea2:	687b      	ldr	r3, [r7, #4]
 8004ea4:	4618      	mov	r0, r3
 8004ea6:	370c      	adds	r7, #12
 8004ea8:	46bd      	mov	sp, r7
 8004eaa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004eae:	4770      	bx	lr

08004eb0 <_ZNRSt8__detail9__variant14_UninitializedIP10AssignmentLb1EE6_M_getEv>:
      constexpr _Type& _M_get() & noexcept
 8004eb0:	b480      	push	{r7}
 8004eb2:	b083      	sub	sp, #12
 8004eb4:	af00      	add	r7, sp, #0
 8004eb6:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 8004eb8:	687b      	ldr	r3, [r7, #4]
 8004eba:	4618      	mov	r0, r3
 8004ebc:	370c      	adds	r7, #12
 8004ebe:	46bd      	mov	sp, r7
 8004ec0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004ec4:	4770      	bx	lr

08004ec6 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP13Function_callP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISD_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8004ec6:	b480      	push	{r7}
 8004ec8:	b083      	sub	sp, #12
 8004eca:	af00      	add	r7, sp, #0
 8004ecc:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8004ece:	687b      	ldr	r3, [r7, #4]
 8004ed0:	4618      	mov	r0, r3
 8004ed2:	370c      	adds	r7, #12
 8004ed4:	46bd      	mov	sp, r7
 8004ed6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004eda:	4770      	bx	lr

08004edc <_ZNRSt8__detail9__variant14_UninitializedIP13Function_callLb1EE6_M_getEv>:
      constexpr _Type& _M_get() & noexcept
 8004edc:	b480      	push	{r7}
 8004ede:	b083      	sub	sp, #12
 8004ee0:	af00      	add	r7, sp, #0
 8004ee2:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 8004ee4:	687b      	ldr	r3, [r7, #4]
 8004ee6:	4618      	mov	r0, r3
 8004ee8:	370c      	adds	r7, #12
 8004eea:	46bd      	mov	sp, r7
 8004eec:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004ef0:	4770      	bx	lr

08004ef2 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISB_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8004ef2:	b480      	push	{r7}
 8004ef4:	b083      	sub	sp, #12
 8004ef6:	af00      	add	r7, sp, #0
 8004ef8:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8004efa:	687b      	ldr	r3, [r7, #4]
 8004efc:	4618      	mov	r0, r3
 8004efe:	370c      	adds	r7, #12
 8004f00:	46bd      	mov	sp, r7
 8004f02:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004f06:	4770      	bx	lr

08004f08 <_ZNRSt8__detail9__variant14_UninitializedIP11Method_callLb1EE6_M_getEv>:
      constexpr _Type& _M_get() & noexcept
 8004f08:	b480      	push	{r7}
 8004f0a:	b083      	sub	sp, #12
 8004f0c:	af00      	add	r7, sp, #0
 8004f0e:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 8004f10:	687b      	ldr	r3, [r7, #4]
 8004f12:	4618      	mov	r0, r3
 8004f14:	370c      	adds	r7, #12
 8004f16:	46bd      	mov	sp, r7
 8004f18:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004f1c:	4770      	bx	lr

08004f1e <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceIS9_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8004f1e:	b480      	push	{r7}
 8004f20:	b083      	sub	sp, #12
 8004f22:	af00      	add	r7, sp, #0
 8004f24:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8004f26:	687b      	ldr	r3, [r7, #4]
 8004f28:	4618      	mov	r0, r3
 8004f2a:	370c      	adds	r7, #12
 8004f2c:	46bd      	mov	sp, r7
 8004f2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004f32:	4770      	bx	lr

08004f34 <_ZNRSt8__detail9__variant14_UninitializedIP15While_statementLb1EE6_M_getEv>:
      constexpr _Type& _M_get() & noexcept
 8004f34:	b480      	push	{r7}
 8004f36:	b083      	sub	sp, #12
 8004f38:	af00      	add	r7, sp, #0
 8004f3a:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 8004f3c:	687b      	ldr	r3, [r7, #4]
 8004f3e:	4618      	mov	r0, r3
 8004f40:	370c      	adds	r7, #12
 8004f42:	46bd      	mov	sp, r7
 8004f44:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004f48:	4770      	bx	lr

08004f4a <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP12If_statementEEEEOT_RNSt16remove_referenceIS7_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8004f4a:	b480      	push	{r7}
 8004f4c:	b083      	sub	sp, #12
 8004f4e:	af00      	add	r7, sp, #0
 8004f50:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8004f52:	687b      	ldr	r3, [r7, #4]
 8004f54:	4618      	mov	r0, r3
 8004f56:	370c      	adds	r7, #12
 8004f58:	46bd      	mov	sp, r7
 8004f5a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004f5e:	4770      	bx	lr

08004f60 <_ZNRSt8__detail9__variant14_UninitializedIP12If_statementLb1EE6_M_getEv>:
      constexpr _Type& _M_get() & noexcept
 8004f60:	b480      	push	{r7}
 8004f62:	b083      	sub	sp, #12
 8004f64:	af00      	add	r7, sp, #0
 8004f66:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 8004f68:	687b      	ldr	r3, [r7, #4]
 8004f6a:	4618      	mov	r0, r3
 8004f6c:	370c      	adds	r7, #12
 8004f6e:	46bd      	mov	sp, r7
 8004f70:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004f74:	4770      	bx	lr

08004f76 <_ZN9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 8004f76:	b480      	push	{r7}
 8004f78:	b083      	sub	sp, #12
 8004f7a:	af00      	add	r7, sp, #0
 8004f7c:	6078      	str	r0, [r7, #4]
 8004f7e:	6039      	str	r1, [r7, #0]
      : _M_current(__i) { }
 8004f80:	683b      	ldr	r3, [r7, #0]
 8004f82:	681a      	ldr	r2, [r3, #0]
 8004f84:	687b      	ldr	r3, [r7, #4]
 8004f86:	601a      	str	r2, [r3, #0]
 8004f88:	687b      	ldr	r3, [r7, #4]
 8004f8a:	4618      	mov	r0, r3
 8004f8c:	370c      	adds	r7, #12
 8004f8e:	46bd      	mov	sp, r7
 8004f90:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004f94:	4770      	bx	lr

08004f96 <_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8004f96:	b480      	push	{r7}
 8004f98:	b083      	sub	sp, #12
 8004f9a:	af00      	add	r7, sp, #0
 8004f9c:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8004f9e:	687b      	ldr	r3, [r7, #4]
 8004fa0:	4618      	mov	r0, r3
 8004fa2:	370c      	adds	r7, #12
 8004fa4:	46bd      	mov	sp, r7
 8004fa6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004faa:	4770      	bx	lr

08004fac <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSERKSE_EUlOT_T0_E_JRKiSt17integral_constantIjLj0EEEESH_St14__invoke_otherOSJ_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8004fac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004fb0:	b084      	sub	sp, #16
 8004fb2:	af00      	add	r7, sp, #0
 8004fb4:	7338      	strb	r0, [r7, #12]
 8004fb6:	60b9      	str	r1, [r7, #8]
 8004fb8:	607a      	str	r2, [r7, #4]
 8004fba:	603b      	str	r3, [r7, #0]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8004fbc:	68b8      	ldr	r0, [r7, #8]
 8004fbe:	f7ff f8ca 	bl	8004156 <_ZSt7forwardIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8004fc2:	4604      	mov	r4, r0
 8004fc4:	6878      	ldr	r0, [r7, #4]
 8004fc6:	f7ff ffe6 	bl	8004f96 <_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE>
 8004fca:	4605      	mov	r5, r0
 8004fcc:	6838      	ldr	r0, [r7, #0]
 8004fce:	f7ff fe48 	bl	8004c62 <_ZSt7forwardISt17integral_constantIjLj0EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8004fd2:	4632      	mov	r2, r6
 8004fd4:	4629      	mov	r1, r5
 8004fd6:	4620      	mov	r0, r4
 8004fd8:	f001 f9bd 	bl	8006356 <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_ENUlOT_T0_E_clIRKiSt17integral_constantIjLj0EEEENS0_20__variant_idx_cookieESG_SH_>
 8004fdc:	4643      	mov	r3, r8
 8004fde:	4618      	mov	r0, r3
 8004fe0:	3710      	adds	r7, #16
 8004fe2:	46bd      	mov	sp, r7
 8004fe4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08004fe8 <_ZSt7forwardIRKfEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8004fe8:	b480      	push	{r7}
 8004fea:	b083      	sub	sp, #12
 8004fec:	af00      	add	r7, sp, #0
 8004fee:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8004ff0:	687b      	ldr	r3, [r7, #4]
 8004ff2:	4618      	mov	r0, r3
 8004ff4:	370c      	adds	r7, #12
 8004ff6:	46bd      	mov	sp, r7
 8004ff8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004ffc:	4770      	bx	lr

08004ffe <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSERKSE_EUlOT_T0_E_JRKfSt17integral_constantIjLj1EEEESH_St14__invoke_otherOSJ_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8004ffe:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005002:	b084      	sub	sp, #16
 8005004:	af00      	add	r7, sp, #0
 8005006:	7338      	strb	r0, [r7, #12]
 8005008:	60b9      	str	r1, [r7, #8]
 800500a:	607a      	str	r2, [r7, #4]
 800500c:	603b      	str	r3, [r7, #0]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800500e:	68b8      	ldr	r0, [r7, #8]
 8005010:	f7ff f8a1 	bl	8004156 <_ZSt7forwardIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8005014:	4604      	mov	r4, r0
 8005016:	6878      	ldr	r0, [r7, #4]
 8005018:	f7ff ffe6 	bl	8004fe8 <_ZSt7forwardIRKfEOT_RNSt16remove_referenceIS2_E4typeE>
 800501c:	4605      	mov	r5, r0
 800501e:	6838      	ldr	r0, [r7, #0]
 8005020:	f7ff fe53 	bl	8004cca <_ZSt7forwardISt17integral_constantIjLj1EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8005024:	4632      	mov	r2, r6
 8005026:	4629      	mov	r1, r5
 8005028:	4620      	mov	r0, r4
 800502a:	f001 f9d8 	bl	80063de <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_ENUlOT_T0_E_clIRKfSt17integral_constantIjLj1EEEENS0_20__variant_idx_cookieESG_SH_>
 800502e:	4643      	mov	r3, r8
 8005030:	4618      	mov	r0, r3
 8005032:	3710      	adds	r7, #16
 8005034:	46bd      	mov	sp, r7
 8005036:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800503a <_ZSt7forwardIRKbEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800503a:	b480      	push	{r7}
 800503c:	b083      	sub	sp, #12
 800503e:	af00      	add	r7, sp, #0
 8005040:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8005042:	687b      	ldr	r3, [r7, #4]
 8005044:	4618      	mov	r0, r3
 8005046:	370c      	adds	r7, #12
 8005048:	46bd      	mov	sp, r7
 800504a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800504e:	4770      	bx	lr

08005050 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSERKSE_EUlOT_T0_E_JRKbSt17integral_constantIjLj2EEEESH_St14__invoke_otherOSJ_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8005050:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005054:	b084      	sub	sp, #16
 8005056:	af00      	add	r7, sp, #0
 8005058:	7338      	strb	r0, [r7, #12]
 800505a:	60b9      	str	r1, [r7, #8]
 800505c:	607a      	str	r2, [r7, #4]
 800505e:	603b      	str	r3, [r7, #0]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8005060:	68b8      	ldr	r0, [r7, #8]
 8005062:	f7ff f878 	bl	8004156 <_ZSt7forwardIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8005066:	4604      	mov	r4, r0
 8005068:	6878      	ldr	r0, [r7, #4]
 800506a:	f7ff ffe6 	bl	800503a <_ZSt7forwardIRKbEOT_RNSt16remove_referenceIS2_E4typeE>
 800506e:	4605      	mov	r5, r0
 8005070:	6838      	ldr	r0, [r7, #0]
 8005072:	f7ff fe5e 	bl	8004d32 <_ZSt7forwardISt17integral_constantIjLj2EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8005076:	4632      	mov	r2, r6
 8005078:	4629      	mov	r1, r5
 800507a:	4620      	mov	r0, r4
 800507c:	f001 f9f3 	bl	8006466 <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_ENUlOT_T0_E_clIRKbSt17integral_constantIjLj2EEEENS0_20__variant_idx_cookieESG_SH_>
 8005080:	4643      	mov	r3, r8
 8005082:	4618      	mov	r0, r3
 8005084:	3710      	adds	r7, #16
 8005086:	46bd      	mov	sp, r7
 8005088:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800508c <_ZNK9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE6_M_ptrEv>:

      const _Tp*
      _M_ptr() const noexcept
 800508c:	b580      	push	{r7, lr}
 800508e:	b082      	sub	sp, #8
 8005090:	af00      	add	r7, sp, #0
 8005092:	6078      	str	r0, [r7, #4]
      { return static_cast<const _Tp*>(_M_addr()); }
 8005094:	6878      	ldr	r0, [r7, #4]
 8005096:	f001 fa2b 	bl	80064f0 <_ZNK9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7_M_addrEv>
 800509a:	4603      	mov	r3, r0
 800509c:	4618      	mov	r0, r3
 800509e:	3708      	adds	r7, #8
 80050a0:	46bd      	mov	sp, r7
 80050a2:	bd80      	pop	{r7, pc}

080050a4 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80050a4:	b480      	push	{r7}
 80050a6:	b083      	sub	sp, #12
 80050a8:	af00      	add	r7, sp, #0
 80050aa:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80050ac:	687b      	ldr	r3, [r7, #4]
 80050ae:	4618      	mov	r0, r3
 80050b0:	370c      	adds	r7, #12
 80050b2:	46bd      	mov	sp, r7
 80050b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80050b8:	4770      	bx	lr

080050ba <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSERKSE_EUlOT_T0_E_JRKS9_St17integral_constantIjLj3EEEESH_St14__invoke_otherOSJ_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 80050ba:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80050be:	b084      	sub	sp, #16
 80050c0:	af00      	add	r7, sp, #0
 80050c2:	7338      	strb	r0, [r7, #12]
 80050c4:	60b9      	str	r1, [r7, #8]
 80050c6:	607a      	str	r2, [r7, #4]
 80050c8:	603b      	str	r3, [r7, #0]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 80050ca:	68b8      	ldr	r0, [r7, #8]
 80050cc:	f7ff f843 	bl	8004156 <_ZSt7forwardIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 80050d0:	4604      	mov	r4, r0
 80050d2:	6878      	ldr	r0, [r7, #4]
 80050d4:	f7ff ffe6 	bl	80050a4 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 80050d8:	4605      	mov	r5, r0
 80050da:	6838      	ldr	r0, [r7, #0]
 80050dc:	f7ff fe69 	bl	8004db2 <_ZSt7forwardISt17integral_constantIjLj3EEEOT_RNSt16remove_referenceIS2_E4typeE>
 80050e0:	4632      	mov	r2, r6
 80050e2:	4629      	mov	r1, r5
 80050e4:	4620      	mov	r0, r4
 80050e6:	f001 fa0e 	bl	8006506 <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_ENUlOT_T0_E_clIRKS7_St17integral_constantIjLj3EEEENS0_20__variant_idx_cookieESG_SH_>
 80050ea:	4643      	mov	r3, r8
 80050ec:	4618      	mov	r0, r3
 80050ee:	3710      	adds	r7, #16
 80050f0:	46bd      	mov	sp, r7
 80050f2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080050f6 <_ZNK9__gnu_cxx16__aligned_membufISt6vectorI6SymbolSaIS2_EEE6_M_ptrEv>:
      _M_ptr() const noexcept
 80050f6:	b580      	push	{r7, lr}
 80050f8:	b082      	sub	sp, #8
 80050fa:	af00      	add	r7, sp, #0
 80050fc:	6078      	str	r0, [r7, #4]
      { return static_cast<const _Tp*>(_M_addr()); }
 80050fe:	6878      	ldr	r0, [r7, #4]
 8005100:	f001 fa5a 	bl	80065b8 <_ZNK9__gnu_cxx16__aligned_membufISt6vectorI6SymbolSaIS2_EEE7_M_addrEv>
 8005104:	4603      	mov	r3, r0
 8005106:	4618      	mov	r0, r3
 8005108:	3708      	adds	r7, #8
 800510a:	46bd      	mov	sp, r7
 800510c:	bd80      	pop	{r7, pc}

0800510e <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800510e:	b480      	push	{r7}
 8005110:	b083      	sub	sp, #12
 8005112:	af00      	add	r7, sp, #0
 8005114:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8005116:	687b      	ldr	r3, [r7, #4]
 8005118:	4618      	mov	r0, r3
 800511a:	370c      	adds	r7, #12
 800511c:	46bd      	mov	sp, r7
 800511e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005122:	4770      	bx	lr

08005124 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSERKSE_EUlOT_T0_E_JRKSD_St17integral_constantIjLj4EEEESH_St14__invoke_otherOSJ_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8005124:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005128:	b084      	sub	sp, #16
 800512a:	af00      	add	r7, sp, #0
 800512c:	7338      	strb	r0, [r7, #12]
 800512e:	60b9      	str	r1, [r7, #8]
 8005130:	607a      	str	r2, [r7, #4]
 8005132:	603b      	str	r3, [r7, #0]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8005134:	68b8      	ldr	r0, [r7, #8]
 8005136:	f7ff f80e 	bl	8004156 <_ZSt7forwardIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 800513a:	4604      	mov	r4, r0
 800513c:	6878      	ldr	r0, [r7, #4]
 800513e:	f7ff ffe6 	bl	800510e <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>
 8005142:	4605      	mov	r5, r0
 8005144:	6838      	ldr	r0, [r7, #0]
 8005146:	f7ff fe74 	bl	8004e32 <_ZSt7forwardISt17integral_constantIjLj4EEEOT_RNSt16remove_referenceIS2_E4typeE>
 800514a:	4632      	mov	r2, r6
 800514c:	4629      	mov	r1, r5
 800514e:	4620      	mov	r0, r4
 8005150:	f001 fa3d 	bl	80065ce <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_ENUlOT_T0_E_clIRKSB_St17integral_constantIjLj4EEEENS0_20__variant_idx_cookieESG_SH_>
 8005154:	4643      	mov	r3, r8
 8005156:	4618      	mov	r0, r3
 8005158:	3710      	adds	r7, #16
 800515a:	46bd      	mov	sp, r7
 800515c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08005160 <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_>:
   *  and are constant time.  For other %iterator classes they are linear time.
  */
  template<typename _InputIterator>
    inline _GLIBCXX17_CONSTEXPR
    typename iterator_traits<_InputIterator>::difference_type
    distance(_InputIterator __first, _InputIterator __last)
 8005160:	b5b0      	push	{r4, r5, r7, lr}
 8005162:	b082      	sub	sp, #8
 8005164:	af00      	add	r7, sp, #0
 8005166:	6078      	str	r0, [r7, #4]
 8005168:	6039      	str	r1, [r7, #0]
    {
      // concept requirements -- taken care of in __distance
      return std::__distance(__first, __last,
 800516a:	687c      	ldr	r4, [r7, #4]
			     std::__iterator_category(__first));
 800516c:	1d3b      	adds	r3, r7, #4
 800516e:	4618      	mov	r0, r3
 8005170:	f001 fa8b 	bl	800668a <_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__distance(__first, __last,
 8005174:	462a      	mov	r2, r5
 8005176:	6839      	ldr	r1, [r7, #0]
 8005178:	4620      	mov	r0, r4
 800517a:	f001 fa90 	bl	800669e <_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>
 800517e:	4603      	mov	r3, r0
    }
 8005180:	4618      	mov	r0, r3
 8005182:	3708      	adds	r7, #8
 8005184:	46bd      	mov	sp, r7
 8005186:	bdb0      	pop	{r4, r5, r7, pc}

08005188 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>:
      }

  template<typename _CharT, typename _Traits, typename _Alloc>
    template<typename _InIterator>
      void
      basic_string<_CharT, _Traits, _Alloc>::
 8005188:	b580      	push	{r7, lr}
 800518a:	b086      	sub	sp, #24
 800518c:	af00      	add	r7, sp, #0
 800518e:	60f8      	str	r0, [r7, #12]
 8005190:	60b9      	str	r1, [r7, #8]
 8005192:	607a      	str	r2, [r7, #4]
 8005194:	703b      	strb	r3, [r7, #0]
      _M_construct(_InIterator __beg, _InIterator __end,
		   std::forward_iterator_tag)
      {
	// NB: Not required, but considered best practice.
	if (__gnu_cxx::__is_null_pointer(__beg) && __beg != __end)
 8005196:	68b8      	ldr	r0, [r7, #8]
 8005198:	f001 fa67 	bl	800666a <_ZN9__gnu_cxx17__is_null_pointerIKcEEbPT_>
 800519c:	4603      	mov	r3, r0
 800519e:	2b00      	cmp	r3, #0
 80051a0:	d005      	beq.n	80051ae <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x26>
 80051a2:	68ba      	ldr	r2, [r7, #8]
 80051a4:	687b      	ldr	r3, [r7, #4]
 80051a6:	429a      	cmp	r2, r3
 80051a8:	d001      	beq.n	80051ae <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x26>
 80051aa:	2301      	movs	r3, #1
 80051ac:	e000      	b.n	80051b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x28>
 80051ae:	2300      	movs	r3, #0
 80051b0:	2b00      	cmp	r3, #0
 80051b2:	d002      	beq.n	80051ba <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x32>
	  std::__throw_logic_error(__N("basic_string::"
 80051b4:	4817      	ldr	r0, [pc, #92]	; (8005214 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x8c>)
 80051b6:	f01e fa66 	bl	8023686 <_ZSt19__throw_logic_errorPKc>
				       "_M_construct null not valid"));

	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
 80051ba:	6879      	ldr	r1, [r7, #4]
 80051bc:	68b8      	ldr	r0, [r7, #8]
 80051be:	f7ff ffcf 	bl	8005160 <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_>
 80051c2:	4603      	mov	r3, r0
 80051c4:	617b      	str	r3, [r7, #20]

	if (__dnew > size_type(_S_local_capacity))
 80051c6:	697b      	ldr	r3, [r7, #20]
 80051c8:	2b0f      	cmp	r3, #15
 80051ca:	d910      	bls.n	80051ee <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x66>
	  {
	    _M_data(_M_create(__dnew, size_type(0)));
 80051cc:	f107 0314 	add.w	r3, r7, #20
 80051d0:	2200      	movs	r2, #0
 80051d2:	4619      	mov	r1, r3
 80051d4:	68f8      	ldr	r0, [r7, #12]
 80051d6:	f01e fb29 	bl	802382c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>
 80051da:	4603      	mov	r3, r0
 80051dc:	4619      	mov	r1, r3
 80051de:	68f8      	ldr	r0, [r7, #12]
 80051e0:	f01e fb16 	bl	8023810 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc>
	    _M_capacity(__dnew);
 80051e4:	697b      	ldr	r3, [r7, #20]
 80051e6:	4619      	mov	r1, r3
 80051e8:	68f8      	ldr	r0, [r7, #12]
 80051ea:	f01e fb17 	bl	802381c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEj>
	  }

	// Check for out_of_range and length_error exceptions.
	__try
	  { this->_S_copy_chars(_M_data(), __beg, __end); }
 80051ee:	68f8      	ldr	r0, [r7, #12]
 80051f0:	f01e fb10 	bl	8023814 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
 80051f4:	4603      	mov	r3, r0
 80051f6:	687a      	ldr	r2, [r7, #4]
 80051f8:	68b9      	ldr	r1, [r7, #8]
 80051fa:	4618      	mov	r0, r3
 80051fc:	f01e fb80 	bl	8023900 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_>
	  {
	    _M_dispose();
	    __throw_exception_again;
	  }

	_M_set_length(__dnew);
 8005200:	697b      	ldr	r3, [r7, #20]
 8005202:	4619      	mov	r1, r3
 8005204:	68f8      	ldr	r0, [r7, #12]
 8005206:	f01e fb0b 	bl	8023820 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEj>
      }
 800520a:	bf00      	nop
 800520c:	3718      	adds	r7, #24
 800520e:	46bd      	mov	sp, r7
 8005210:	bd80      	pop	{r7, pc}
 8005212:	bf00      	nop
 8005214:	0802949c 	.word	0x0802949c

08005218 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEC1Ev>:
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 8005218:	b480      	push	{r7}
 800521a:	b083      	sub	sp, #12
 800521c:	af00      	add	r7, sp, #0
 800521e:	6078      	str	r0, [r7, #4]
 8005220:	687b      	ldr	r3, [r7, #4]
 8005222:	4618      	mov	r0, r3
 8005224:	370c      	adds	r7, #12
 8005226:	46bd      	mov	sp, r7
 8005228:	f85d 7b04 	ldr.w	r7, [sp], #4
 800522c:	4770      	bx	lr

0800522e <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEED1Ev>:
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 800522e:	b480      	push	{r7}
 8005230:	b083      	sub	sp, #12
 8005232:	af00      	add	r7, sp, #0
 8005234:	6078      	str	r0, [r7, #4]
 8005236:	687b      	ldr	r3, [r7, #4]
 8005238:	4618      	mov	r0, r3
 800523a:	370c      	adds	r7, #12
 800523c:	46bd      	mov	sp, r7
 800523e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005242:	4770      	bx	lr

08005244 <_ZSt4moveIRSaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEEONSt16remove_referenceIT_E4typeEOS9_>:
   *  @param  __t  A thing of arbitrary type.
   *  @return The parameter cast to an rvalue-reference to allow moving it.
  */
  template<typename _Tp>
    constexpr typename std::remove_reference<_Tp>::type&&
    move(_Tp&& __t) noexcept
 8005244:	b480      	push	{r7}
 8005246:	b083      	sub	sp, #12
 8005248:	af00      	add	r7, sp, #0
 800524a:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 800524c:	687b      	ldr	r3, [r7, #4]
 800524e:	4618      	mov	r0, r3
 8005250:	370c      	adds	r7, #12
 8005252:	46bd      	mov	sp, r7
 8005254:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005258:	4770      	bx	lr

0800525a <_ZNSaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEC1ERKS5_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
 800525a:	b580      	push	{r7, lr}
 800525c:	b082      	sub	sp, #8
 800525e:	af00      	add	r7, sp, #0
 8005260:	6078      	str	r0, [r7, #4]
 8005262:	6039      	str	r1, [r7, #0]
      : __allocator_base<_Tp>(__a) { }
 8005264:	6839      	ldr	r1, [r7, #0]
 8005266:	6878      	ldr	r0, [r7, #4]
 8005268:	f001 fa28 	bl	80066bc <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEC1ERKS7_>
 800526c:	687b      	ldr	r3, [r7, #4]
 800526e:	4618      	mov	r0, r3
 8005270:	3708      	adds	r7, #8
 8005272:	46bd      	mov	sp, r7
 8005274:	bd80      	pop	{r7, pc}

08005276 <_ZNSt20_Rb_tree_key_compareISt4lessIcEEC1ERKS1_>:
      _Rb_tree_key_compare(const _Key_compare& __comp)
 8005276:	b480      	push	{r7}
 8005278:	b083      	sub	sp, #12
 800527a:	af00      	add	r7, sp, #0
 800527c:	6078      	str	r0, [r7, #4]
 800527e:	6039      	str	r1, [r7, #0]
      { }
 8005280:	687b      	ldr	r3, [r7, #4]
 8005282:	4618      	mov	r0, r3
 8005284:	370c      	adds	r7, #12
 8005286:	46bd      	mov	sp, r7
 8005288:	f85d 7b04 	ldr.w	r7, [sp], #4
 800528c:	4770      	bx	lr

0800528e <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base>:
      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 800528e:	b480      	push	{r7}
 8005290:	b083      	sub	sp, #12
 8005292:	af00      	add	r7, sp, #0
 8005294:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(__x->_M_right); }
 8005296:	687b      	ldr	r3, [r7, #4]
 8005298:	68db      	ldr	r3, [r3, #12]
 800529a:	4618      	mov	r0, r3
 800529c:	370c      	adds	r7, #12
 800529e:	46bd      	mov	sp, r7
 80052a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80052a4:	4770      	bx	lr

080052a6 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE7_S_leftEPSt18_Rb_tree_node_base>:
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 80052a6:	b480      	push	{r7}
 80052a8:	b083      	sub	sp, #12
 80052aa:	af00      	add	r7, sp, #0
 80052ac:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(__x->_M_left); }
 80052ae:	687b      	ldr	r3, [r7, #4]
 80052b0:	689b      	ldr	r3, [r3, #8]
 80052b2:	4618      	mov	r0, r3
 80052b4:	370c      	adds	r7, #12
 80052b6:	46bd      	mov	sp, r7
 80052b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80052bc:	4770      	bx	lr

080052be <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS3_E>:
      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 80052be:	b580      	push	{r7, lr}
 80052c0:	b082      	sub	sp, #8
 80052c2:	af00      	add	r7, sp, #0
 80052c4:	6078      	str	r0, [r7, #4]
 80052c6:	6039      	str	r1, [r7, #0]
	_M_destroy_node(__p);
 80052c8:	6839      	ldr	r1, [r7, #0]
 80052ca:	6878      	ldr	r0, [r7, #4]
 80052cc:	f001 fa02 	bl	80066d4 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS3_E>
	_M_put_node(__p);
 80052d0:	6839      	ldr	r1, [r7, #0]
 80052d2:	6878      	ldr	r0, [r7, #4]
 80052d4:	f001 fa13 	bl	80066fe <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS3_E>
      }
 80052d8:	bf00      	nop
 80052da:	3708      	adds	r7, #8
 80052dc:	46bd      	mov	sp, r7
 80052de:	bd80      	pop	{r7, pc}

080052e0 <_ZNSt17_Rb_tree_iteratorISt4pairIKc10token_typeEEC1EPSt18_Rb_tree_node_base>:
      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 80052e0:	b480      	push	{r7}
 80052e2:	b083      	sub	sp, #12
 80052e4:	af00      	add	r7, sp, #0
 80052e6:	6078      	str	r0, [r7, #4]
 80052e8:	6039      	str	r1, [r7, #0]
      : _M_node(__x) { }
 80052ea:	687b      	ldr	r3, [r7, #4]
 80052ec:	683a      	ldr	r2, [r7, #0]
 80052ee:	601a      	str	r2, [r3, #0]
 80052f0:	687b      	ldr	r3, [r7, #4]
 80052f2:	4618      	mov	r0, r3
 80052f4:	370c      	adds	r7, #12
 80052f6:	46bd      	mov	sp, r7
 80052f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80052fc:	4770      	bx	lr

080052fe <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 80052fe:	b590      	push	{r4, r7, lr}
 8005300:	b08d      	sub	sp, #52	; 0x34
 8005302:	af00      	add	r7, sp, #0
 8005304:	60f8      	str	r0, [r7, #12]
 8005306:	60b9      	str	r1, [r7, #8]
 8005308:	607a      	str	r2, [r7, #4]
 800530a:	603b      	str	r3, [r7, #0]
      iterator __pos = __position._M_const_cast();
 800530c:	1d3b      	adds	r3, r7, #4
 800530e:	4618      	mov	r0, r3
 8005310:	f001 fa07 	bl	8006722 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKc10token_typeEE13_M_const_castEv>
 8005314:	4603      	mov	r3, r0
 8005316:	61bb      	str	r3, [r7, #24]
      if (__pos._M_node == _M_end())
 8005318:	69bc      	ldr	r4, [r7, #24]
 800531a:	68b8      	ldr	r0, [r7, #8]
 800531c:	f001 fa12 	bl	8006744 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_M_endEv>
 8005320:	4603      	mov	r3, r0
 8005322:	429c      	cmp	r4, r3
 8005324:	bf0c      	ite	eq
 8005326:	2301      	moveq	r3, #1
 8005328:	2300      	movne	r3, #0
 800532a:	b2db      	uxtb	r3, r3
 800532c:	2b00      	cmp	r3, #0
 800532e:	d030      	beq.n	8005392 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x94>
	  if (size() > 0
 8005330:	68b8      	ldr	r0, [r7, #8]
 8005332:	f001 fa13 	bl	800675c <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE4sizeEv>
 8005336:	4603      	mov	r3, r0
	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
 8005338:	2b00      	cmp	r3, #0
 800533a:	d013      	beq.n	8005364 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x66>
 800533c:	68bc      	ldr	r4, [r7, #8]
 800533e:	68b8      	ldr	r0, [r7, #8]
 8005340:	f001 fa18 	bl	8006774 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_rightmostEv>
 8005344:	4603      	mov	r3, r0
 8005346:	681b      	ldr	r3, [r3, #0]
 8005348:	4618      	mov	r0, r3
 800534a:	f001 fa1f 	bl	800678c <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 800534e:	4603      	mov	r3, r0
 8005350:	683a      	ldr	r2, [r7, #0]
 8005352:	4619      	mov	r1, r3
 8005354:	4620      	mov	r0, r4
 8005356:	f001 fa25 	bl	80067a4 <_ZNKSt4lessIcEclERKcS2_>
 800535a:	4603      	mov	r3, r0
 800535c:	2b00      	cmp	r3, #0
 800535e:	d001      	beq.n	8005364 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x66>
 8005360:	2301      	movs	r3, #1
 8005362:	e000      	b.n	8005366 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x68>
 8005364:	2300      	movs	r3, #0
	  if (size() > 0
 8005366:	2b00      	cmp	r3, #0
 8005368:	d00c      	beq.n	8005384 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x86>
	    return _Res(0, _M_rightmost());
 800536a:	2300      	movs	r3, #0
 800536c:	61fb      	str	r3, [r7, #28]
 800536e:	68b8      	ldr	r0, [r7, #8]
 8005370:	f001 fa00 	bl	8006774 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_rightmostEv>
 8005374:	4602      	mov	r2, r0
 8005376:	f107 031c 	add.w	r3, r7, #28
 800537a:	4619      	mov	r1, r3
 800537c:	68f8      	ldr	r0, [r7, #12]
 800537e:	f001 fa26 	bl	80067ce <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 8005382:	e0db      	b.n	800553c <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
	    return _M_get_insert_unique_pos(__k);
 8005384:	68fb      	ldr	r3, [r7, #12]
 8005386:	683a      	ldr	r2, [r7, #0]
 8005388:	68b9      	ldr	r1, [r7, #8]
 800538a:	4618      	mov	r0, r3
 800538c:	f001 fa35 	bl	80067fa <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_>
 8005390:	e0d4      	b.n	800553c <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
      else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
 8005392:	68bc      	ldr	r4, [r7, #8]
 8005394:	69bb      	ldr	r3, [r7, #24]
 8005396:	4618      	mov	r0, r3
 8005398:	f001 f9f8 	bl	800678c <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 800539c:	4603      	mov	r3, r0
 800539e:	461a      	mov	r2, r3
 80053a0:	6839      	ldr	r1, [r7, #0]
 80053a2:	4620      	mov	r0, r4
 80053a4:	f001 f9fe 	bl	80067a4 <_ZNKSt4lessIcEclERKcS2_>
 80053a8:	4603      	mov	r3, r0
 80053aa:	2b00      	cmp	r3, #0
 80053ac:	d057      	beq.n	800545e <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x160>
	  iterator __before = __pos;
 80053ae:	69bb      	ldr	r3, [r7, #24]
 80053b0:	617b      	str	r3, [r7, #20]
	  if (__pos._M_node == _M_leftmost()) // begin()
 80053b2:	69bc      	ldr	r4, [r7, #24]
 80053b4:	68b8      	ldr	r0, [r7, #8]
 80053b6:	f001 faa5 	bl	8006904 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_leftmostEv>
 80053ba:	4603      	mov	r3, r0
 80053bc:	681b      	ldr	r3, [r3, #0]
 80053be:	429c      	cmp	r4, r3
 80053c0:	bf0c      	ite	eq
 80053c2:	2301      	moveq	r3, #1
 80053c4:	2300      	movne	r3, #0
 80053c6:	b2db      	uxtb	r3, r3
 80053c8:	2b00      	cmp	r3, #0
 80053ca:	d00d      	beq.n	80053e8 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0xea>
	    return _Res(_M_leftmost(), _M_leftmost());
 80053cc:	68b8      	ldr	r0, [r7, #8]
 80053ce:	f001 fa99 	bl	8006904 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_leftmostEv>
 80053d2:	4604      	mov	r4, r0
 80053d4:	68b8      	ldr	r0, [r7, #8]
 80053d6:	f001 fa95 	bl	8006904 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_leftmostEv>
 80053da:	4603      	mov	r3, r0
 80053dc:	461a      	mov	r2, r3
 80053de:	4621      	mov	r1, r4
 80053e0:	68f8      	ldr	r0, [r7, #12]
 80053e2:	f001 fa9b 	bl	800691c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
 80053e6:	e0a9      	b.n	800553c <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
 80053e8:	68bc      	ldr	r4, [r7, #8]
 80053ea:	f107 0314 	add.w	r3, r7, #20
 80053ee:	4618      	mov	r0, r3
 80053f0:	f001 faad 	bl	800694e <_ZNSt17_Rb_tree_iteratorISt4pairIKc10token_typeEEmmEv>
 80053f4:	4603      	mov	r3, r0
 80053f6:	681b      	ldr	r3, [r3, #0]
 80053f8:	4618      	mov	r0, r3
 80053fa:	f001 f9c7 	bl	800678c <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 80053fe:	4603      	mov	r3, r0
 8005400:	683a      	ldr	r2, [r7, #0]
 8005402:	4619      	mov	r1, r3
 8005404:	4620      	mov	r0, r4
 8005406:	f001 f9cd 	bl	80067a4 <_ZNKSt4lessIcEclERKcS2_>
 800540a:	4603      	mov	r3, r0
 800540c:	2b00      	cmp	r3, #0
 800540e:	d01f      	beq.n	8005450 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x152>
	      if (_S_right(__before._M_node) == 0)
 8005410:	697b      	ldr	r3, [r7, #20]
 8005412:	4618      	mov	r0, r3
 8005414:	f7ff ff3b 	bl	800528e <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base>
 8005418:	4603      	mov	r3, r0
 800541a:	2b00      	cmp	r3, #0
 800541c:	bf0c      	ite	eq
 800541e:	2301      	moveq	r3, #1
 8005420:	2300      	movne	r3, #0
 8005422:	b2db      	uxtb	r3, r3
 8005424:	2b00      	cmp	r3, #0
 8005426:	d00a      	beq.n	800543e <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x140>
		return _Res(0, __before._M_node);
 8005428:	2300      	movs	r3, #0
 800542a:	623b      	str	r3, [r7, #32]
 800542c:	f107 0214 	add.w	r2, r7, #20
 8005430:	f107 0320 	add.w	r3, r7, #32
 8005434:	4619      	mov	r1, r3
 8005436:	68f8      	ldr	r0, [r7, #12]
 8005438:	f001 f9c9 	bl	80067ce <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 800543c:	e07e      	b.n	800553c <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
		return _Res(__pos._M_node, __pos._M_node);
 800543e:	f107 0218 	add.w	r2, r7, #24
 8005442:	f107 0318 	add.w	r3, r7, #24
 8005446:	4619      	mov	r1, r3
 8005448:	68f8      	ldr	r0, [r7, #12]
 800544a:	f001 fa67 	bl	800691c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
 800544e:	e075      	b.n	800553c <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
	    return _M_get_insert_unique_pos(__k);
 8005450:	68fb      	ldr	r3, [r7, #12]
 8005452:	683a      	ldr	r2, [r7, #0]
 8005454:	68b9      	ldr	r1, [r7, #8]
 8005456:	4618      	mov	r0, r3
 8005458:	f001 f9cf 	bl	80067fa <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_>
 800545c:	e06e      	b.n	800553c <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
      else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
 800545e:	68bc      	ldr	r4, [r7, #8]
 8005460:	69bb      	ldr	r3, [r7, #24]
 8005462:	4618      	mov	r0, r3
 8005464:	f001 f992 	bl	800678c <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8005468:	4603      	mov	r3, r0
 800546a:	683a      	ldr	r2, [r7, #0]
 800546c:	4619      	mov	r1, r3
 800546e:	4620      	mov	r0, r4
 8005470:	f001 f998 	bl	80067a4 <_ZNKSt4lessIcEclERKcS2_>
 8005474:	4603      	mov	r3, r0
 8005476:	2b00      	cmp	r3, #0
 8005478:	d056      	beq.n	8005528 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x22a>
	  iterator __after = __pos;
 800547a:	69bb      	ldr	r3, [r7, #24]
 800547c:	613b      	str	r3, [r7, #16]
	  if (__pos._M_node == _M_rightmost())
 800547e:	69bc      	ldr	r4, [r7, #24]
 8005480:	68b8      	ldr	r0, [r7, #8]
 8005482:	f001 f977 	bl	8006774 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_rightmostEv>
 8005486:	4603      	mov	r3, r0
 8005488:	681b      	ldr	r3, [r3, #0]
 800548a:	429c      	cmp	r4, r3
 800548c:	bf0c      	ite	eq
 800548e:	2301      	moveq	r3, #1
 8005490:	2300      	movne	r3, #0
 8005492:	b2db      	uxtb	r3, r3
 8005494:	2b00      	cmp	r3, #0
 8005496:	d00c      	beq.n	80054b2 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x1b4>
	    return _Res(0, _M_rightmost());
 8005498:	2300      	movs	r3, #0
 800549a:	627b      	str	r3, [r7, #36]	; 0x24
 800549c:	68b8      	ldr	r0, [r7, #8]
 800549e:	f001 f969 	bl	8006774 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_rightmostEv>
 80054a2:	4602      	mov	r2, r0
 80054a4:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80054a8:	4619      	mov	r1, r3
 80054aa:	68f8      	ldr	r0, [r7, #12]
 80054ac:	f001 f98f 	bl	80067ce <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 80054b0:	e044      	b.n	800553c <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
 80054b2:	68bc      	ldr	r4, [r7, #8]
 80054b4:	f107 0310 	add.w	r3, r7, #16
 80054b8:	4618      	mov	r0, r3
 80054ba:	f001 fa59 	bl	8006970 <_ZNSt17_Rb_tree_iteratorISt4pairIKc10token_typeEEppEv>
 80054be:	4603      	mov	r3, r0
 80054c0:	681b      	ldr	r3, [r3, #0]
 80054c2:	4618      	mov	r0, r3
 80054c4:	f001 f962 	bl	800678c <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 80054c8:	4603      	mov	r3, r0
 80054ca:	461a      	mov	r2, r3
 80054cc:	6839      	ldr	r1, [r7, #0]
 80054ce:	4620      	mov	r0, r4
 80054d0:	f001 f968 	bl	80067a4 <_ZNKSt4lessIcEclERKcS2_>
 80054d4:	4603      	mov	r3, r0
 80054d6:	2b00      	cmp	r3, #0
 80054d8:	d01f      	beq.n	800551a <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x21c>
	      if (_S_right(__pos._M_node) == 0)
 80054da:	69bb      	ldr	r3, [r7, #24]
 80054dc:	4618      	mov	r0, r3
 80054de:	f7ff fed6 	bl	800528e <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base>
 80054e2:	4603      	mov	r3, r0
 80054e4:	2b00      	cmp	r3, #0
 80054e6:	bf0c      	ite	eq
 80054e8:	2301      	moveq	r3, #1
 80054ea:	2300      	movne	r3, #0
 80054ec:	b2db      	uxtb	r3, r3
 80054ee:	2b00      	cmp	r3, #0
 80054f0:	d00a      	beq.n	8005508 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x20a>
		return _Res(0, __pos._M_node);
 80054f2:	2300      	movs	r3, #0
 80054f4:	62bb      	str	r3, [r7, #40]	; 0x28
 80054f6:	f107 0218 	add.w	r2, r7, #24
 80054fa:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80054fe:	4619      	mov	r1, r3
 8005500:	68f8      	ldr	r0, [r7, #12]
 8005502:	f001 f964 	bl	80067ce <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 8005506:	e019      	b.n	800553c <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
		return _Res(__after._M_node, __after._M_node);
 8005508:	f107 0210 	add.w	r2, r7, #16
 800550c:	f107 0310 	add.w	r3, r7, #16
 8005510:	4619      	mov	r1, r3
 8005512:	68f8      	ldr	r0, [r7, #12]
 8005514:	f001 fa02 	bl	800691c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
 8005518:	e010      	b.n	800553c <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
	    return _M_get_insert_unique_pos(__k);
 800551a:	68fb      	ldr	r3, [r7, #12]
 800551c:	683a      	ldr	r2, [r7, #0]
 800551e:	68b9      	ldr	r1, [r7, #8]
 8005520:	4618      	mov	r0, r3
 8005522:	f001 f96a 	bl	80067fa <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_>
 8005526:	e009      	b.n	800553c <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
	return _Res(__pos._M_node, 0);
 8005528:	2300      	movs	r3, #0
 800552a:	62fb      	str	r3, [r7, #44]	; 0x2c
 800552c:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 8005530:	f107 0318 	add.w	r3, r7, #24
 8005534:	4619      	mov	r1, r3
 8005536:	68f8      	ldr	r0, [r7, #12]
 8005538:	f001 fa2b 	bl	8006992 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_>
    }
 800553c:	68f8      	ldr	r0, [r7, #12]
 800553e:	3734      	adds	r7, #52	; 0x34
 8005540:	46bd      	mov	sp, r7
 8005542:	bd90      	pop	{r4, r7, pc}

08005544 <_ZNKSt10_Select1stISt4pairIKc10token_typeEEclERKS3_>:
      typename _Pair::first_type&
      operator()(_Pair& __x) const
      { return __x.first; }

      const typename _Pair::first_type&
      operator()(const _Pair& __x) const
 8005544:	b480      	push	{r7}
 8005546:	b083      	sub	sp, #12
 8005548:	af00      	add	r7, sp, #0
 800554a:	6078      	str	r0, [r7, #4]
 800554c:	6039      	str	r1, [r7, #0]
      { return __x.first; }
 800554e:	683b      	ldr	r3, [r7, #0]
 8005550:	4618      	mov	r0, r3
 8005552:	370c      	adds	r7, #12
 8005554:	46bd      	mov	sp, r7
 8005556:	f85d 7b04 	ldr.w	r7, [sp], #4
 800555a:	4770      	bx	lr

0800555c <_ZSt7forwardIRKSt4pairIKc10token_typeEEOT_RNSt16remove_referenceIS6_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800555c:	b480      	push	{r7}
 800555e:	b083      	sub	sp, #12
 8005560:	af00      	add	r7, sp, #0
 8005562:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8005564:	687b      	ldr	r3, [r7, #4]
 8005566:	4618      	mov	r0, r3
 8005568:	370c      	adds	r7, #12
 800556a:	46bd      	mov	sp, r7
 800556c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005570:	4770      	bx	lr

08005572 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_>:
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8005572:	b5b0      	push	{r4, r5, r7, lr}
 8005574:	b088      	sub	sp, #32
 8005576:	af00      	add	r7, sp, #0
 8005578:	60f8      	str	r0, [r7, #12]
 800557a:	60b9      	str	r1, [r7, #8]
 800557c:	607a      	str	r2, [r7, #4]
 800557e:	603b      	str	r3, [r7, #0]
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
 8005580:	68bb      	ldr	r3, [r7, #8]
 8005582:	2b00      	cmp	r3, #0
 8005584:	d11a      	bne.n	80055bc <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_+0x4a>
	bool __insert_left = (__x != 0 || __p == _M_end()
 8005586:	68f8      	ldr	r0, [r7, #12]
 8005588:	f001 f8dc 	bl	8006744 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_M_endEv>
 800558c:	4602      	mov	r2, r0
 800558e:	687b      	ldr	r3, [r7, #4]
 8005590:	4293      	cmp	r3, r2
 8005592:	d013      	beq.n	80055bc <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_+0x4a>
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
 8005594:	68fc      	ldr	r4, [r7, #12]
 8005596:	f107 0310 	add.w	r3, r7, #16
 800559a:	6839      	ldr	r1, [r7, #0]
 800559c:	4618      	mov	r0, r3
 800559e:	f7ff ffd1 	bl	8005544 <_ZNKSt10_Select1stISt4pairIKc10token_typeEEclERKS3_>
 80055a2:	4605      	mov	r5, r0
 80055a4:	6878      	ldr	r0, [r7, #4]
 80055a6:	f001 f8f1 	bl	800678c <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 80055aa:	4603      	mov	r3, r0
 80055ac:	461a      	mov	r2, r3
 80055ae:	4629      	mov	r1, r5
 80055b0:	4620      	mov	r0, r4
 80055b2:	f001 f8f7 	bl	80067a4 <_ZNKSt4lessIcEclERKcS2_>
 80055b6:	4603      	mov	r3, r0
 80055b8:	2b00      	cmp	r3, #0
 80055ba:	d001      	beq.n	80055c0 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_+0x4e>
 80055bc:	2301      	movs	r3, #1
 80055be:	e000      	b.n	80055c2 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_+0x50>
 80055c0:	2300      	movs	r3, #0
	bool __insert_left = (__x != 0 || __p == _M_end()
 80055c2:	77fb      	strb	r3, [r7, #31]
	_Link_type __z = __node_gen(_GLIBCXX_FORWARD(_Arg, __v));
 80055c4:	6838      	ldr	r0, [r7, #0]
 80055c6:	f7ff ffc9 	bl	800555c <_ZSt7forwardIRKSt4pairIKc10token_typeEEOT_RNSt16remove_referenceIS6_E4typeE>
 80055ca:	4603      	mov	r3, r0
 80055cc:	4619      	mov	r1, r3
 80055ce:	6b38      	ldr	r0, [r7, #48]	; 0x30
 80055d0:	f001 f9f5 	bl	80069be <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_Alloc_nodeclIRKS3_EEPSt13_Rb_tree_nodeIS3_EOT_>
 80055d4:	61b8      	str	r0, [r7, #24]
				      this->_M_impl._M_header);
 80055d6:	68fb      	ldr	r3, [r7, #12]
 80055d8:	3304      	adds	r3, #4
	_Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
 80055da:	7ff8      	ldrb	r0, [r7, #31]
 80055dc:	687a      	ldr	r2, [r7, #4]
 80055de:	69b9      	ldr	r1, [r7, #24]
 80055e0:	f01d fff2 	bl	80235c8 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
	++_M_impl._M_node_count;
 80055e4:	68fb      	ldr	r3, [r7, #12]
 80055e6:	695b      	ldr	r3, [r3, #20]
 80055e8:	1c5a      	adds	r2, r3, #1
 80055ea:	68fb      	ldr	r3, [r7, #12]
 80055ec:	615a      	str	r2, [r3, #20]
	return iterator(__z);
 80055ee:	f107 0314 	add.w	r3, r7, #20
 80055f2:	69b9      	ldr	r1, [r7, #24]
 80055f4:	4618      	mov	r0, r3
 80055f6:	f7ff fe73 	bl	80052e0 <_ZNSt17_Rb_tree_iteratorISt4pairIKc10token_typeEEC1EPSt18_Rb_tree_node_base>
 80055fa:	697b      	ldr	r3, [r7, #20]
      }
 80055fc:	4618      	mov	r0, r3
 80055fe:	3720      	adds	r7, #32
 8005600:	46bd      	mov	sp, r7
 8005602:	bdb0      	pop	{r4, r5, r7, pc}

08005604 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEC1Ev>:
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 8005604:	b480      	push	{r7}
 8005606:	b083      	sub	sp, #12
 8005608:	af00      	add	r7, sp, #0
 800560a:	6078      	str	r0, [r7, #4]
 800560c:	687b      	ldr	r3, [r7, #4]
 800560e:	4618      	mov	r0, r3
 8005610:	370c      	adds	r7, #12
 8005612:	46bd      	mov	sp, r7
 8005614:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005618:	4770      	bx	lr

0800561a <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEED1Ev>:
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 800561a:	b480      	push	{r7}
 800561c:	b083      	sub	sp, #12
 800561e:	af00      	add	r7, sp, #0
 8005620:	6078      	str	r0, [r7, #4]
 8005622:	687b      	ldr	r3, [r7, #4]
 8005624:	4618      	mov	r0, r3
 8005626:	370c      	adds	r7, #12
 8005628:	46bd      	mov	sp, r7
 800562a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800562e:	4770      	bx	lr

08005630 <_ZSt4moveIRSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEEONSt16remove_referenceIT_E4typeEOSF_>:
    move(_Tp&& __t) noexcept
 8005630:	b480      	push	{r7}
 8005632:	b083      	sub	sp, #12
 8005634:	af00      	add	r7, sp, #0
 8005636:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 8005638:	687b      	ldr	r3, [r7, #4]
 800563a:	4618      	mov	r0, r3
 800563c:	370c      	adds	r7, #12
 800563e:	46bd      	mov	sp, r7
 8005640:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005644:	4770      	bx	lr

08005646 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEC1ERKSB_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
 8005646:	b580      	push	{r7, lr}
 8005648:	b082      	sub	sp, #8
 800564a:	af00      	add	r7, sp, #0
 800564c:	6078      	str	r0, [r7, #4]
 800564e:	6039      	str	r1, [r7, #0]
      : __allocator_base<_Tp>(__a) { }
 8005650:	6839      	ldr	r1, [r7, #0]
 8005652:	6878      	ldr	r0, [r7, #4]
 8005654:	f001 f9c7 	bl	80069e6 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEC1ERKSD_>
 8005658:	687b      	ldr	r3, [r7, #4]
 800565a:	4618      	mov	r0, r3
 800565c:	3708      	adds	r7, #8
 800565e:	46bd      	mov	sp, r7
 8005660:	bd80      	pop	{r7, pc}

08005662 <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1ERKS7_>:
      _Rb_tree_key_compare(const _Key_compare& __comp)
 8005662:	b480      	push	{r7}
 8005664:	b083      	sub	sp, #12
 8005666:	af00      	add	r7, sp, #0
 8005668:	6078      	str	r0, [r7, #4]
 800566a:	6039      	str	r1, [r7, #0]
      { }
 800566c:	687b      	ldr	r3, [r7, #4]
 800566e:	4618      	mov	r0, r3
 8005670:	370c      	adds	r7, #12
 8005672:	46bd      	mov	sp, r7
 8005674:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005678:	4770      	bx	lr

0800567a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_S_rightEPSt18_Rb_tree_node_base>:
      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 800567a:	b480      	push	{r7}
 800567c:	b083      	sub	sp, #12
 800567e:	af00      	add	r7, sp, #0
 8005680:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(__x->_M_right); }
 8005682:	687b      	ldr	r3, [r7, #4]
 8005684:	68db      	ldr	r3, [r3, #12]
 8005686:	4618      	mov	r0, r3
 8005688:	370c      	adds	r7, #12
 800568a:	46bd      	mov	sp, r7
 800568c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005690:	4770      	bx	lr

08005692 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE7_S_leftEPSt18_Rb_tree_node_base>:
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 8005692:	b480      	push	{r7}
 8005694:	b083      	sub	sp, #12
 8005696:	af00      	add	r7, sp, #0
 8005698:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(__x->_M_left); }
 800569a:	687b      	ldr	r3, [r7, #4]
 800569c:	689b      	ldr	r3, [r3, #8]
 800569e:	4618      	mov	r0, r3
 80056a0:	370c      	adds	r7, #12
 80056a2:	46bd      	mov	sp, r7
 80056a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80056a8:	4770      	bx	lr

080056aa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS9_E>:
      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 80056aa:	b580      	push	{r7, lr}
 80056ac:	b082      	sub	sp, #8
 80056ae:	af00      	add	r7, sp, #0
 80056b0:	6078      	str	r0, [r7, #4]
 80056b2:	6039      	str	r1, [r7, #0]
	_M_destroy_node(__p);
 80056b4:	6839      	ldr	r1, [r7, #0]
 80056b6:	6878      	ldr	r0, [r7, #4]
 80056b8:	f001 f9a1 	bl	80069fe <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS9_E>
	_M_put_node(__p);
 80056bc:	6839      	ldr	r1, [r7, #0]
 80056be:	6878      	ldr	r0, [r7, #4]
 80056c0:	f001 f9b2 	bl	8006a28 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS9_E>
      }
 80056c4:	bf00      	nop
 80056c6:	3708      	adds	r7, #8
 80056c8:	46bd      	mov	sp, r7
 80056ca:	bd80      	pop	{r7, pc}

080056cc <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1EPSt18_Rb_tree_node_base>:
      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 80056cc:	b480      	push	{r7}
 80056ce:	b083      	sub	sp, #12
 80056d0:	af00      	add	r7, sp, #0
 80056d2:	6078      	str	r0, [r7, #4]
 80056d4:	6039      	str	r1, [r7, #0]
      : _M_node(__x) { }
 80056d6:	687b      	ldr	r3, [r7, #4]
 80056d8:	683a      	ldr	r2, [r7, #0]
 80056da:	601a      	str	r2, [r3, #0]
 80056dc:	687b      	ldr	r3, [r7, #4]
 80056de:	4618      	mov	r0, r3
 80056e0:	370c      	adds	r7, #12
 80056e2:	46bd      	mov	sp, r7
 80056e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80056e8:	4770      	bx	lr

080056ea <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 80056ea:	b590      	push	{r4, r7, lr}
 80056ec:	b08d      	sub	sp, #52	; 0x34
 80056ee:	af00      	add	r7, sp, #0
 80056f0:	60f8      	str	r0, [r7, #12]
 80056f2:	60b9      	str	r1, [r7, #8]
 80056f4:	607a      	str	r2, [r7, #4]
 80056f6:	603b      	str	r3, [r7, #0]
      iterator __pos = __position._M_const_cast();
 80056f8:	1d3b      	adds	r3, r7, #4
 80056fa:	4618      	mov	r0, r3
 80056fc:	f001 f9a6 	bl	8006a4c <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE13_M_const_castEv>
 8005700:	4603      	mov	r3, r0
 8005702:	61bb      	str	r3, [r7, #24]
      if (__pos._M_node == _M_end())
 8005704:	69bc      	ldr	r4, [r7, #24]
 8005706:	68b8      	ldr	r0, [r7, #8]
 8005708:	f001 f9b1 	bl	8006a6e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_M_endEv>
 800570c:	4603      	mov	r3, r0
 800570e:	429c      	cmp	r4, r3
 8005710:	bf0c      	ite	eq
 8005712:	2301      	moveq	r3, #1
 8005714:	2300      	movne	r3, #0
 8005716:	b2db      	uxtb	r3, r3
 8005718:	2b00      	cmp	r3, #0
 800571a:	d030      	beq.n	800577e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x94>
	  if (size() > 0
 800571c:	68b8      	ldr	r0, [r7, #8]
 800571e:	f001 f9b2 	bl	8006a86 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE4sizeEv>
 8005722:	4603      	mov	r3, r0
	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
 8005724:	2b00      	cmp	r3, #0
 8005726:	d013      	beq.n	8005750 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x66>
 8005728:	68bc      	ldr	r4, [r7, #8]
 800572a:	68b8      	ldr	r0, [r7, #8]
 800572c:	f001 f9b7 	bl	8006a9e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_rightmostEv>
 8005730:	4603      	mov	r3, r0
 8005732:	681b      	ldr	r3, [r3, #0]
 8005734:	4618      	mov	r0, r3
 8005736:	f001 f9be 	bl	8006ab6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 800573a:	4603      	mov	r3, r0
 800573c:	683a      	ldr	r2, [r7, #0]
 800573e:	4619      	mov	r1, r3
 8005740:	4620      	mov	r0, r4
 8005742:	f001 f9c4 	bl	8006ace <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8005746:	4603      	mov	r3, r0
 8005748:	2b00      	cmp	r3, #0
 800574a:	d001      	beq.n	8005750 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x66>
 800574c:	2301      	movs	r3, #1
 800574e:	e000      	b.n	8005752 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x68>
 8005750:	2300      	movs	r3, #0
	  if (size() > 0
 8005752:	2b00      	cmp	r3, #0
 8005754:	d00c      	beq.n	8005770 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x86>
	    return _Res(0, _M_rightmost());
 8005756:	2300      	movs	r3, #0
 8005758:	61fb      	str	r3, [r7, #28]
 800575a:	68b8      	ldr	r0, [r7, #8]
 800575c:	f001 f99f 	bl	8006a9e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_rightmostEv>
 8005760:	4602      	mov	r2, r0
 8005762:	f107 031c 	add.w	r3, r7, #28
 8005766:	4619      	mov	r1, r3
 8005768:	68f8      	ldr	r0, [r7, #12]
 800576a:	f001 f830 	bl	80067ce <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 800576e:	e0db      	b.n	8005928 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
	    return _M_get_insert_unique_pos(__k);
 8005770:	68fb      	ldr	r3, [r7, #12]
 8005772:	683a      	ldr	r2, [r7, #0]
 8005774:	68b9      	ldr	r1, [r7, #8]
 8005776:	4618      	mov	r0, r3
 8005778:	f001 f9b8 	bl	8006aec <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_>
 800577c:	e0d4      	b.n	8005928 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
      else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
 800577e:	68bc      	ldr	r4, [r7, #8]
 8005780:	69bb      	ldr	r3, [r7, #24]
 8005782:	4618      	mov	r0, r3
 8005784:	f001 f997 	bl	8006ab6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8005788:	4603      	mov	r3, r0
 800578a:	461a      	mov	r2, r3
 800578c:	6839      	ldr	r1, [r7, #0]
 800578e:	4620      	mov	r0, r4
 8005790:	f001 f99d 	bl	8006ace <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8005794:	4603      	mov	r3, r0
 8005796:	2b00      	cmp	r3, #0
 8005798:	d057      	beq.n	800584a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x160>
	  iterator __before = __pos;
 800579a:	69bb      	ldr	r3, [r7, #24]
 800579c:	617b      	str	r3, [r7, #20]
	  if (__pos._M_node == _M_leftmost()) // begin()
 800579e:	69bc      	ldr	r4, [r7, #24]
 80057a0:	68b8      	ldr	r0, [r7, #8]
 80057a2:	f001 fa28 	bl	8006bf6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_leftmostEv>
 80057a6:	4603      	mov	r3, r0
 80057a8:	681b      	ldr	r3, [r3, #0]
 80057aa:	429c      	cmp	r4, r3
 80057ac:	bf0c      	ite	eq
 80057ae:	2301      	moveq	r3, #1
 80057b0:	2300      	movne	r3, #0
 80057b2:	b2db      	uxtb	r3, r3
 80057b4:	2b00      	cmp	r3, #0
 80057b6:	d00d      	beq.n	80057d4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0xea>
	    return _Res(_M_leftmost(), _M_leftmost());
 80057b8:	68b8      	ldr	r0, [r7, #8]
 80057ba:	f001 fa1c 	bl	8006bf6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_leftmostEv>
 80057be:	4604      	mov	r4, r0
 80057c0:	68b8      	ldr	r0, [r7, #8]
 80057c2:	f001 fa18 	bl	8006bf6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_leftmostEv>
 80057c6:	4603      	mov	r3, r0
 80057c8:	461a      	mov	r2, r3
 80057ca:	4621      	mov	r1, r4
 80057cc:	68f8      	ldr	r0, [r7, #12]
 80057ce:	f001 f8a5 	bl	800691c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
 80057d2:	e0a9      	b.n	8005928 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
 80057d4:	68bc      	ldr	r4, [r7, #8]
 80057d6:	f107 0314 	add.w	r3, r7, #20
 80057da:	4618      	mov	r0, r3
 80057dc:	f001 fa17 	bl	8006c0e <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEmmEv>
 80057e0:	4603      	mov	r3, r0
 80057e2:	681b      	ldr	r3, [r3, #0]
 80057e4:	4618      	mov	r0, r3
 80057e6:	f001 f966 	bl	8006ab6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 80057ea:	4603      	mov	r3, r0
 80057ec:	683a      	ldr	r2, [r7, #0]
 80057ee:	4619      	mov	r1, r3
 80057f0:	4620      	mov	r0, r4
 80057f2:	f001 f96c 	bl	8006ace <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 80057f6:	4603      	mov	r3, r0
 80057f8:	2b00      	cmp	r3, #0
 80057fa:	d01f      	beq.n	800583c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x152>
	      if (_S_right(__before._M_node) == 0)
 80057fc:	697b      	ldr	r3, [r7, #20]
 80057fe:	4618      	mov	r0, r3
 8005800:	f7ff ff3b 	bl	800567a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_S_rightEPSt18_Rb_tree_node_base>
 8005804:	4603      	mov	r3, r0
 8005806:	2b00      	cmp	r3, #0
 8005808:	bf0c      	ite	eq
 800580a:	2301      	moveq	r3, #1
 800580c:	2300      	movne	r3, #0
 800580e:	b2db      	uxtb	r3, r3
 8005810:	2b00      	cmp	r3, #0
 8005812:	d00a      	beq.n	800582a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x140>
		return _Res(0, __before._M_node);
 8005814:	2300      	movs	r3, #0
 8005816:	623b      	str	r3, [r7, #32]
 8005818:	f107 0214 	add.w	r2, r7, #20
 800581c:	f107 0320 	add.w	r3, r7, #32
 8005820:	4619      	mov	r1, r3
 8005822:	68f8      	ldr	r0, [r7, #12]
 8005824:	f000 ffd3 	bl	80067ce <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 8005828:	e07e      	b.n	8005928 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
		return _Res(__pos._M_node, __pos._M_node);
 800582a:	f107 0218 	add.w	r2, r7, #24
 800582e:	f107 0318 	add.w	r3, r7, #24
 8005832:	4619      	mov	r1, r3
 8005834:	68f8      	ldr	r0, [r7, #12]
 8005836:	f001 f871 	bl	800691c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
 800583a:	e075      	b.n	8005928 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
	    return _M_get_insert_unique_pos(__k);
 800583c:	68fb      	ldr	r3, [r7, #12]
 800583e:	683a      	ldr	r2, [r7, #0]
 8005840:	68b9      	ldr	r1, [r7, #8]
 8005842:	4618      	mov	r0, r3
 8005844:	f001 f952 	bl	8006aec <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_>
 8005848:	e06e      	b.n	8005928 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
      else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
 800584a:	68bc      	ldr	r4, [r7, #8]
 800584c:	69bb      	ldr	r3, [r7, #24]
 800584e:	4618      	mov	r0, r3
 8005850:	f001 f931 	bl	8006ab6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8005854:	4603      	mov	r3, r0
 8005856:	683a      	ldr	r2, [r7, #0]
 8005858:	4619      	mov	r1, r3
 800585a:	4620      	mov	r0, r4
 800585c:	f001 f937 	bl	8006ace <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8005860:	4603      	mov	r3, r0
 8005862:	2b00      	cmp	r3, #0
 8005864:	d056      	beq.n	8005914 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x22a>
	  iterator __after = __pos;
 8005866:	69bb      	ldr	r3, [r7, #24]
 8005868:	613b      	str	r3, [r7, #16]
	  if (__pos._M_node == _M_rightmost())
 800586a:	69bc      	ldr	r4, [r7, #24]
 800586c:	68b8      	ldr	r0, [r7, #8]
 800586e:	f001 f916 	bl	8006a9e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_rightmostEv>
 8005872:	4603      	mov	r3, r0
 8005874:	681b      	ldr	r3, [r3, #0]
 8005876:	429c      	cmp	r4, r3
 8005878:	bf0c      	ite	eq
 800587a:	2301      	moveq	r3, #1
 800587c:	2300      	movne	r3, #0
 800587e:	b2db      	uxtb	r3, r3
 8005880:	2b00      	cmp	r3, #0
 8005882:	d00c      	beq.n	800589e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x1b4>
	    return _Res(0, _M_rightmost());
 8005884:	2300      	movs	r3, #0
 8005886:	627b      	str	r3, [r7, #36]	; 0x24
 8005888:	68b8      	ldr	r0, [r7, #8]
 800588a:	f001 f908 	bl	8006a9e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_rightmostEv>
 800588e:	4602      	mov	r2, r0
 8005890:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8005894:	4619      	mov	r1, r3
 8005896:	68f8      	ldr	r0, [r7, #12]
 8005898:	f000 ff99 	bl	80067ce <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 800589c:	e044      	b.n	8005928 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
 800589e:	68bc      	ldr	r4, [r7, #8]
 80058a0:	f107 0310 	add.w	r3, r7, #16
 80058a4:	4618      	mov	r0, r3
 80058a6:	f001 f9c3 	bl	8006c30 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEppEv>
 80058aa:	4603      	mov	r3, r0
 80058ac:	681b      	ldr	r3, [r3, #0]
 80058ae:	4618      	mov	r0, r3
 80058b0:	f001 f901 	bl	8006ab6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 80058b4:	4603      	mov	r3, r0
 80058b6:	461a      	mov	r2, r3
 80058b8:	6839      	ldr	r1, [r7, #0]
 80058ba:	4620      	mov	r0, r4
 80058bc:	f001 f907 	bl	8006ace <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 80058c0:	4603      	mov	r3, r0
 80058c2:	2b00      	cmp	r3, #0
 80058c4:	d01f      	beq.n	8005906 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x21c>
	      if (_S_right(__pos._M_node) == 0)
 80058c6:	69bb      	ldr	r3, [r7, #24]
 80058c8:	4618      	mov	r0, r3
 80058ca:	f7ff fed6 	bl	800567a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_S_rightEPSt18_Rb_tree_node_base>
 80058ce:	4603      	mov	r3, r0
 80058d0:	2b00      	cmp	r3, #0
 80058d2:	bf0c      	ite	eq
 80058d4:	2301      	moveq	r3, #1
 80058d6:	2300      	movne	r3, #0
 80058d8:	b2db      	uxtb	r3, r3
 80058da:	2b00      	cmp	r3, #0
 80058dc:	d00a      	beq.n	80058f4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x20a>
		return _Res(0, __pos._M_node);
 80058de:	2300      	movs	r3, #0
 80058e0:	62bb      	str	r3, [r7, #40]	; 0x28
 80058e2:	f107 0218 	add.w	r2, r7, #24
 80058e6:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80058ea:	4619      	mov	r1, r3
 80058ec:	68f8      	ldr	r0, [r7, #12]
 80058ee:	f000 ff6e 	bl	80067ce <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 80058f2:	e019      	b.n	8005928 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
		return _Res(__after._M_node, __after._M_node);
 80058f4:	f107 0210 	add.w	r2, r7, #16
 80058f8:	f107 0310 	add.w	r3, r7, #16
 80058fc:	4619      	mov	r1, r3
 80058fe:	68f8      	ldr	r0, [r7, #12]
 8005900:	f001 f80c 	bl	800691c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
 8005904:	e010      	b.n	8005928 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
	    return _M_get_insert_unique_pos(__k);
 8005906:	68fb      	ldr	r3, [r7, #12]
 8005908:	683a      	ldr	r2, [r7, #0]
 800590a:	68b9      	ldr	r1, [r7, #8]
 800590c:	4618      	mov	r0, r3
 800590e:	f001 f8ed 	bl	8006aec <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_>
 8005912:	e009      	b.n	8005928 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
	return _Res(__pos._M_node, 0);
 8005914:	2300      	movs	r3, #0
 8005916:	62fb      	str	r3, [r7, #44]	; 0x2c
 8005918:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 800591c:	f107 0318 	add.w	r3, r7, #24
 8005920:	4619      	mov	r1, r3
 8005922:	68f8      	ldr	r0, [r7, #12]
 8005924:	f001 f835 	bl	8006992 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_>
    }
 8005928:	68f8      	ldr	r0, [r7, #12]
 800592a:	3734      	adds	r7, #52	; 0x34
 800592c:	46bd      	mov	sp, r7
 800592e:	bd90      	pop	{r4, r7, pc}

08005930 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEclERKS9_>:
      operator()(const _Pair& __x) const
 8005930:	b480      	push	{r7}
 8005932:	b083      	sub	sp, #12
 8005934:	af00      	add	r7, sp, #0
 8005936:	6078      	str	r0, [r7, #4]
 8005938:	6039      	str	r1, [r7, #0]
      { return __x.first; }
 800593a:	683b      	ldr	r3, [r7, #0]
 800593c:	4618      	mov	r0, r3
 800593e:	370c      	adds	r7, #12
 8005940:	46bd      	mov	sp, r7
 8005942:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005946:	4770      	bx	lr

08005948 <_ZSt7forwardIRKSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEOT_RNSt16remove_referenceISC_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8005948:	b480      	push	{r7}
 800594a:	b083      	sub	sp, #12
 800594c:	af00      	add	r7, sp, #0
 800594e:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8005950:	687b      	ldr	r3, [r7, #4]
 8005952:	4618      	mov	r0, r3
 8005954:	370c      	adds	r7, #12
 8005956:	46bd      	mov	sp, r7
 8005958:	f85d 7b04 	ldr.w	r7, [sp], #4
 800595c:	4770      	bx	lr

0800595e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE10_M_insert_IRKS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_EPSt18_Rb_tree_node_baseSN_OT_RT0_>:
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 800595e:	b5b0      	push	{r4, r5, r7, lr}
 8005960:	b088      	sub	sp, #32
 8005962:	af00      	add	r7, sp, #0
 8005964:	60f8      	str	r0, [r7, #12]
 8005966:	60b9      	str	r1, [r7, #8]
 8005968:	607a      	str	r2, [r7, #4]
 800596a:	603b      	str	r3, [r7, #0]
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
 800596c:	68bb      	ldr	r3, [r7, #8]
 800596e:	2b00      	cmp	r3, #0
 8005970:	d11a      	bne.n	80059a8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE10_M_insert_IRKS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_EPSt18_Rb_tree_node_baseSN_OT_RT0_+0x4a>
	bool __insert_left = (__x != 0 || __p == _M_end()
 8005972:	68f8      	ldr	r0, [r7, #12]
 8005974:	f001 f87b 	bl	8006a6e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_M_endEv>
 8005978:	4602      	mov	r2, r0
 800597a:	687b      	ldr	r3, [r7, #4]
 800597c:	4293      	cmp	r3, r2
 800597e:	d013      	beq.n	80059a8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE10_M_insert_IRKS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_EPSt18_Rb_tree_node_baseSN_OT_RT0_+0x4a>
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
 8005980:	68fc      	ldr	r4, [r7, #12]
 8005982:	f107 0310 	add.w	r3, r7, #16
 8005986:	6839      	ldr	r1, [r7, #0]
 8005988:	4618      	mov	r0, r3
 800598a:	f7ff ffd1 	bl	8005930 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEclERKS9_>
 800598e:	4605      	mov	r5, r0
 8005990:	6878      	ldr	r0, [r7, #4]
 8005992:	f001 f890 	bl	8006ab6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8005996:	4603      	mov	r3, r0
 8005998:	461a      	mov	r2, r3
 800599a:	4629      	mov	r1, r5
 800599c:	4620      	mov	r0, r4
 800599e:	f001 f896 	bl	8006ace <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 80059a2:	4603      	mov	r3, r0
 80059a4:	2b00      	cmp	r3, #0
 80059a6:	d001      	beq.n	80059ac <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE10_M_insert_IRKS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_EPSt18_Rb_tree_node_baseSN_OT_RT0_+0x4e>
 80059a8:	2301      	movs	r3, #1
 80059aa:	e000      	b.n	80059ae <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE10_M_insert_IRKS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_EPSt18_Rb_tree_node_baseSN_OT_RT0_+0x50>
 80059ac:	2300      	movs	r3, #0
	bool __insert_left = (__x != 0 || __p == _M_end()
 80059ae:	77fb      	strb	r3, [r7, #31]
	_Link_type __z = __node_gen(_GLIBCXX_FORWARD(_Arg, __v));
 80059b0:	6838      	ldr	r0, [r7, #0]
 80059b2:	f7ff ffc9 	bl	8005948 <_ZSt7forwardIRKSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEOT_RNSt16remove_referenceISC_E4typeE>
 80059b6:	4603      	mov	r3, r0
 80059b8:	4619      	mov	r1, r3
 80059ba:	6b38      	ldr	r0, [r7, #48]	; 0x30
 80059bc:	f001 f949 	bl	8006c52 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_Alloc_nodeclIRKS9_EEPSt13_Rb_tree_nodeIS9_EOT_>
 80059c0:	61b8      	str	r0, [r7, #24]
				      this->_M_impl._M_header);
 80059c2:	68fb      	ldr	r3, [r7, #12]
 80059c4:	3304      	adds	r3, #4
	_Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
 80059c6:	7ff8      	ldrb	r0, [r7, #31]
 80059c8:	687a      	ldr	r2, [r7, #4]
 80059ca:	69b9      	ldr	r1, [r7, #24]
 80059cc:	f01d fdfc 	bl	80235c8 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
	++_M_impl._M_node_count;
 80059d0:	68fb      	ldr	r3, [r7, #12]
 80059d2:	695b      	ldr	r3, [r3, #20]
 80059d4:	1c5a      	adds	r2, r3, #1
 80059d6:	68fb      	ldr	r3, [r7, #12]
 80059d8:	615a      	str	r2, [r3, #20]
	return iterator(__z);
 80059da:	f107 0314 	add.w	r3, r7, #20
 80059de:	69b9      	ldr	r1, [r7, #24]
 80059e0:	4618      	mov	r0, r3
 80059e2:	f7ff fe73 	bl	80056cc <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1EPSt18_Rb_tree_node_base>
 80059e6:	697b      	ldr	r3, [r7, #20]
      }
 80059e8:	4618      	mov	r0, r3
 80059ea:	3720      	adds	r7, #32
 80059ec:	46bd      	mov	sp, r7
 80059ee:	bdb0      	pop	{r4, r5, r7, pc}

080059f0 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEC1Ev>:
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 80059f0:	b480      	push	{r7}
 80059f2:	b083      	sub	sp, #12
 80059f4:	af00      	add	r7, sp, #0
 80059f6:	6078      	str	r0, [r7, #4]
 80059f8:	687b      	ldr	r3, [r7, #4]
 80059fa:	4618      	mov	r0, r3
 80059fc:	370c      	adds	r7, #12
 80059fe:	46bd      	mov	sp, r7
 8005a00:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005a04:	4770      	bx	lr

08005a06 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEED1Ev>:
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 8005a06:	b480      	push	{r7}
 8005a08:	b083      	sub	sp, #12
 8005a0a:	af00      	add	r7, sp, #0
 8005a0c:	6078      	str	r0, [r7, #4]
 8005a0e:	687b      	ldr	r3, [r7, #4]
 8005a10:	4618      	mov	r0, r3
 8005a12:	370c      	adds	r7, #12
 8005a14:	46bd      	mov	sp, r7
 8005a16:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005a1a:	4770      	bx	lr

08005a1c <_ZSt4moveIRSaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEEONSt16remove_referenceIT_E4typeEOS9_>:
    move(_Tp&& __t) noexcept
 8005a1c:	b480      	push	{r7}
 8005a1e:	b083      	sub	sp, #12
 8005a20:	af00      	add	r7, sp, #0
 8005a22:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 8005a24:	687b      	ldr	r3, [r7, #4]
 8005a26:	4618      	mov	r0, r3
 8005a28:	370c      	adds	r7, #12
 8005a2a:	46bd      	mov	sp, r7
 8005a2c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005a30:	4770      	bx	lr

08005a32 <_ZNSaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEC1ERKS5_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
 8005a32:	b580      	push	{r7, lr}
 8005a34:	b082      	sub	sp, #8
 8005a36:	af00      	add	r7, sp, #0
 8005a38:	6078      	str	r0, [r7, #4]
 8005a3a:	6039      	str	r1, [r7, #0]
      : __allocator_base<_Tp>(__a) { }
 8005a3c:	6839      	ldr	r1, [r7, #0]
 8005a3e:	6878      	ldr	r0, [r7, #4]
 8005a40:	f001 f91b 	bl	8006c7a <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEC1ERKS7_>
 8005a44:	687b      	ldr	r3, [r7, #4]
 8005a46:	4618      	mov	r0, r3
 8005a48:	3708      	adds	r7, #8
 8005a4a:	46bd      	mov	sp, r7
 8005a4c:	bd80      	pop	{r7, pc}

08005a4e <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base>:
      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 8005a4e:	b480      	push	{r7}
 8005a50:	b083      	sub	sp, #12
 8005a52:	af00      	add	r7, sp, #0
 8005a54:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(__x->_M_right); }
 8005a56:	687b      	ldr	r3, [r7, #4]
 8005a58:	68db      	ldr	r3, [r3, #12]
 8005a5a:	4618      	mov	r0, r3
 8005a5c:	370c      	adds	r7, #12
 8005a5e:	46bd      	mov	sp, r7
 8005a60:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005a64:	4770      	bx	lr

08005a66 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE7_S_leftEPSt18_Rb_tree_node_base>:
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 8005a66:	b480      	push	{r7}
 8005a68:	b083      	sub	sp, #12
 8005a6a:	af00      	add	r7, sp, #0
 8005a6c:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(__x->_M_left); }
 8005a6e:	687b      	ldr	r3, [r7, #4]
 8005a70:	689b      	ldr	r3, [r3, #8]
 8005a72:	4618      	mov	r0, r3
 8005a74:	370c      	adds	r7, #12
 8005a76:	46bd      	mov	sp, r7
 8005a78:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005a7c:	4770      	bx	lr

08005a7e <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS3_E>:
      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 8005a7e:	b580      	push	{r7, lr}
 8005a80:	b082      	sub	sp, #8
 8005a82:	af00      	add	r7, sp, #0
 8005a84:	6078      	str	r0, [r7, #4]
 8005a86:	6039      	str	r1, [r7, #0]
	_M_destroy_node(__p);
 8005a88:	6839      	ldr	r1, [r7, #0]
 8005a8a:	6878      	ldr	r0, [r7, #4]
 8005a8c:	f001 f901 	bl	8006c92 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS3_E>
	_M_put_node(__p);
 8005a90:	6839      	ldr	r1, [r7, #0]
 8005a92:	6878      	ldr	r0, [r7, #4]
 8005a94:	f001 f912 	bl	8006cbc <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS3_E>
      }
 8005a98:	bf00      	nop
 8005a9a:	3708      	adds	r7, #8
 8005a9c:	46bd      	mov	sp, r7
 8005a9e:	bd80      	pop	{r7, pc}

08005aa0 <_ZNSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEEC1EPSt18_Rb_tree_node_base>:
      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 8005aa0:	b480      	push	{r7}
 8005aa2:	b083      	sub	sp, #12
 8005aa4:	af00      	add	r7, sp, #0
 8005aa6:	6078      	str	r0, [r7, #4]
 8005aa8:	6039      	str	r1, [r7, #0]
      : _M_node(__x) { }
 8005aaa:	687b      	ldr	r3, [r7, #4]
 8005aac:	683a      	ldr	r2, [r7, #0]
 8005aae:	601a      	str	r2, [r3, #0]
 8005ab0:	687b      	ldr	r3, [r7, #4]
 8005ab2:	4618      	mov	r0, r3
 8005ab4:	370c      	adds	r7, #12
 8005ab6:	46bd      	mov	sp, r7
 8005ab8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005abc:	4770      	bx	lr

08005abe <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8005abe:	b590      	push	{r4, r7, lr}
 8005ac0:	b08d      	sub	sp, #52	; 0x34
 8005ac2:	af00      	add	r7, sp, #0
 8005ac4:	60f8      	str	r0, [r7, #12]
 8005ac6:	60b9      	str	r1, [r7, #8]
 8005ac8:	607a      	str	r2, [r7, #4]
 8005aca:	603b      	str	r3, [r7, #0]
      iterator __pos = __position._M_const_cast();
 8005acc:	1d3b      	adds	r3, r7, #4
 8005ace:	4618      	mov	r0, r3
 8005ad0:	f001 f906 	bl	8006ce0 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEE13_M_const_castEv>
 8005ad4:	4603      	mov	r3, r0
 8005ad6:	61bb      	str	r3, [r7, #24]
      if (__pos._M_node == _M_end())
 8005ad8:	69bc      	ldr	r4, [r7, #24]
 8005ada:	68b8      	ldr	r0, [r7, #8]
 8005adc:	f001 f911 	bl	8006d02 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_M_endEv>
 8005ae0:	4603      	mov	r3, r0
 8005ae2:	429c      	cmp	r4, r3
 8005ae4:	bf0c      	ite	eq
 8005ae6:	2301      	moveq	r3, #1
 8005ae8:	2300      	movne	r3, #0
 8005aea:	b2db      	uxtb	r3, r3
 8005aec:	2b00      	cmp	r3, #0
 8005aee:	d030      	beq.n	8005b52 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x94>
	  if (size() > 0
 8005af0:	68b8      	ldr	r0, [r7, #8]
 8005af2:	f001 f912 	bl	8006d1a <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE4sizeEv>
 8005af6:	4603      	mov	r3, r0
	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
 8005af8:	2b00      	cmp	r3, #0
 8005afa:	d013      	beq.n	8005b24 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x66>
 8005afc:	68bc      	ldr	r4, [r7, #8]
 8005afe:	68b8      	ldr	r0, [r7, #8]
 8005b00:	f001 f917 	bl	8006d32 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_rightmostEv>
 8005b04:	4603      	mov	r3, r0
 8005b06:	681b      	ldr	r3, [r3, #0]
 8005b08:	4618      	mov	r0, r3
 8005b0a:	f001 f91e 	bl	8006d4a <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8005b0e:	4603      	mov	r3, r0
 8005b10:	683a      	ldr	r2, [r7, #0]
 8005b12:	4619      	mov	r1, r3
 8005b14:	4620      	mov	r0, r4
 8005b16:	f000 fe45 	bl	80067a4 <_ZNKSt4lessIcEclERKcS2_>
 8005b1a:	4603      	mov	r3, r0
 8005b1c:	2b00      	cmp	r3, #0
 8005b1e:	d001      	beq.n	8005b24 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x66>
 8005b20:	2301      	movs	r3, #1
 8005b22:	e000      	b.n	8005b26 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x68>
 8005b24:	2300      	movs	r3, #0
	  if (size() > 0
 8005b26:	2b00      	cmp	r3, #0
 8005b28:	d00c      	beq.n	8005b44 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x86>
	    return _Res(0, _M_rightmost());
 8005b2a:	2300      	movs	r3, #0
 8005b2c:	61fb      	str	r3, [r7, #28]
 8005b2e:	68b8      	ldr	r0, [r7, #8]
 8005b30:	f001 f8ff 	bl	8006d32 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_rightmostEv>
 8005b34:	4602      	mov	r2, r0
 8005b36:	f107 031c 	add.w	r3, r7, #28
 8005b3a:	4619      	mov	r1, r3
 8005b3c:	68f8      	ldr	r0, [r7, #12]
 8005b3e:	f000 fe46 	bl	80067ce <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 8005b42:	e0db      	b.n	8005cfc <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
	    return _M_get_insert_unique_pos(__k);
 8005b44:	68fb      	ldr	r3, [r7, #12]
 8005b46:	683a      	ldr	r2, [r7, #0]
 8005b48:	68b9      	ldr	r1, [r7, #8]
 8005b4a:	4618      	mov	r0, r3
 8005b4c:	f001 f909 	bl	8006d62 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_>
 8005b50:	e0d4      	b.n	8005cfc <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
      else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
 8005b52:	68bc      	ldr	r4, [r7, #8]
 8005b54:	69bb      	ldr	r3, [r7, #24]
 8005b56:	4618      	mov	r0, r3
 8005b58:	f001 f8f7 	bl	8006d4a <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8005b5c:	4603      	mov	r3, r0
 8005b5e:	461a      	mov	r2, r3
 8005b60:	6839      	ldr	r1, [r7, #0]
 8005b62:	4620      	mov	r0, r4
 8005b64:	f000 fe1e 	bl	80067a4 <_ZNKSt4lessIcEclERKcS2_>
 8005b68:	4603      	mov	r3, r0
 8005b6a:	2b00      	cmp	r3, #0
 8005b6c:	d057      	beq.n	8005c1e <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x160>
	  iterator __before = __pos;
 8005b6e:	69bb      	ldr	r3, [r7, #24]
 8005b70:	617b      	str	r3, [r7, #20]
	  if (__pos._M_node == _M_leftmost()) // begin()
 8005b72:	69bc      	ldr	r4, [r7, #24]
 8005b74:	68b8      	ldr	r0, [r7, #8]
 8005b76:	f001 f979 	bl	8006e6c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_leftmostEv>
 8005b7a:	4603      	mov	r3, r0
 8005b7c:	681b      	ldr	r3, [r3, #0]
 8005b7e:	429c      	cmp	r4, r3
 8005b80:	bf0c      	ite	eq
 8005b82:	2301      	moveq	r3, #1
 8005b84:	2300      	movne	r3, #0
 8005b86:	b2db      	uxtb	r3, r3
 8005b88:	2b00      	cmp	r3, #0
 8005b8a:	d00d      	beq.n	8005ba8 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0xea>
	    return _Res(_M_leftmost(), _M_leftmost());
 8005b8c:	68b8      	ldr	r0, [r7, #8]
 8005b8e:	f001 f96d 	bl	8006e6c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_leftmostEv>
 8005b92:	4604      	mov	r4, r0
 8005b94:	68b8      	ldr	r0, [r7, #8]
 8005b96:	f001 f969 	bl	8006e6c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_leftmostEv>
 8005b9a:	4603      	mov	r3, r0
 8005b9c:	461a      	mov	r2, r3
 8005b9e:	4621      	mov	r1, r4
 8005ba0:	68f8      	ldr	r0, [r7, #12]
 8005ba2:	f000 febb 	bl	800691c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
 8005ba6:	e0a9      	b.n	8005cfc <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
 8005ba8:	68bc      	ldr	r4, [r7, #8]
 8005baa:	f107 0314 	add.w	r3, r7, #20
 8005bae:	4618      	mov	r0, r3
 8005bb0:	f001 f968 	bl	8006e84 <_ZNSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEEmmEv>
 8005bb4:	4603      	mov	r3, r0
 8005bb6:	681b      	ldr	r3, [r3, #0]
 8005bb8:	4618      	mov	r0, r3
 8005bba:	f001 f8c6 	bl	8006d4a <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8005bbe:	4603      	mov	r3, r0
 8005bc0:	683a      	ldr	r2, [r7, #0]
 8005bc2:	4619      	mov	r1, r3
 8005bc4:	4620      	mov	r0, r4
 8005bc6:	f000 fded 	bl	80067a4 <_ZNKSt4lessIcEclERKcS2_>
 8005bca:	4603      	mov	r3, r0
 8005bcc:	2b00      	cmp	r3, #0
 8005bce:	d01f      	beq.n	8005c10 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x152>
	      if (_S_right(__before._M_node) == 0)
 8005bd0:	697b      	ldr	r3, [r7, #20]
 8005bd2:	4618      	mov	r0, r3
 8005bd4:	f7ff ff3b 	bl	8005a4e <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base>
 8005bd8:	4603      	mov	r3, r0
 8005bda:	2b00      	cmp	r3, #0
 8005bdc:	bf0c      	ite	eq
 8005bde:	2301      	moveq	r3, #1
 8005be0:	2300      	movne	r3, #0
 8005be2:	b2db      	uxtb	r3, r3
 8005be4:	2b00      	cmp	r3, #0
 8005be6:	d00a      	beq.n	8005bfe <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x140>
		return _Res(0, __before._M_node);
 8005be8:	2300      	movs	r3, #0
 8005bea:	623b      	str	r3, [r7, #32]
 8005bec:	f107 0214 	add.w	r2, r7, #20
 8005bf0:	f107 0320 	add.w	r3, r7, #32
 8005bf4:	4619      	mov	r1, r3
 8005bf6:	68f8      	ldr	r0, [r7, #12]
 8005bf8:	f000 fde9 	bl	80067ce <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 8005bfc:	e07e      	b.n	8005cfc <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
		return _Res(__pos._M_node, __pos._M_node);
 8005bfe:	f107 0218 	add.w	r2, r7, #24
 8005c02:	f107 0318 	add.w	r3, r7, #24
 8005c06:	4619      	mov	r1, r3
 8005c08:	68f8      	ldr	r0, [r7, #12]
 8005c0a:	f000 fe87 	bl	800691c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
 8005c0e:	e075      	b.n	8005cfc <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
	    return _M_get_insert_unique_pos(__k);
 8005c10:	68fb      	ldr	r3, [r7, #12]
 8005c12:	683a      	ldr	r2, [r7, #0]
 8005c14:	68b9      	ldr	r1, [r7, #8]
 8005c16:	4618      	mov	r0, r3
 8005c18:	f001 f8a3 	bl	8006d62 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_>
 8005c1c:	e06e      	b.n	8005cfc <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
      else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
 8005c1e:	68bc      	ldr	r4, [r7, #8]
 8005c20:	69bb      	ldr	r3, [r7, #24]
 8005c22:	4618      	mov	r0, r3
 8005c24:	f001 f891 	bl	8006d4a <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8005c28:	4603      	mov	r3, r0
 8005c2a:	683a      	ldr	r2, [r7, #0]
 8005c2c:	4619      	mov	r1, r3
 8005c2e:	4620      	mov	r0, r4
 8005c30:	f000 fdb8 	bl	80067a4 <_ZNKSt4lessIcEclERKcS2_>
 8005c34:	4603      	mov	r3, r0
 8005c36:	2b00      	cmp	r3, #0
 8005c38:	d056      	beq.n	8005ce8 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x22a>
	  iterator __after = __pos;
 8005c3a:	69bb      	ldr	r3, [r7, #24]
 8005c3c:	613b      	str	r3, [r7, #16]
	  if (__pos._M_node == _M_rightmost())
 8005c3e:	69bc      	ldr	r4, [r7, #24]
 8005c40:	68b8      	ldr	r0, [r7, #8]
 8005c42:	f001 f876 	bl	8006d32 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_rightmostEv>
 8005c46:	4603      	mov	r3, r0
 8005c48:	681b      	ldr	r3, [r3, #0]
 8005c4a:	429c      	cmp	r4, r3
 8005c4c:	bf0c      	ite	eq
 8005c4e:	2301      	moveq	r3, #1
 8005c50:	2300      	movne	r3, #0
 8005c52:	b2db      	uxtb	r3, r3
 8005c54:	2b00      	cmp	r3, #0
 8005c56:	d00c      	beq.n	8005c72 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x1b4>
	    return _Res(0, _M_rightmost());
 8005c58:	2300      	movs	r3, #0
 8005c5a:	627b      	str	r3, [r7, #36]	; 0x24
 8005c5c:	68b8      	ldr	r0, [r7, #8]
 8005c5e:	f001 f868 	bl	8006d32 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_rightmostEv>
 8005c62:	4602      	mov	r2, r0
 8005c64:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8005c68:	4619      	mov	r1, r3
 8005c6a:	68f8      	ldr	r0, [r7, #12]
 8005c6c:	f000 fdaf 	bl	80067ce <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 8005c70:	e044      	b.n	8005cfc <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
 8005c72:	68bc      	ldr	r4, [r7, #8]
 8005c74:	f107 0310 	add.w	r3, r7, #16
 8005c78:	4618      	mov	r0, r3
 8005c7a:	f001 f914 	bl	8006ea6 <_ZNSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEEppEv>
 8005c7e:	4603      	mov	r3, r0
 8005c80:	681b      	ldr	r3, [r3, #0]
 8005c82:	4618      	mov	r0, r3
 8005c84:	f001 f861 	bl	8006d4a <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8005c88:	4603      	mov	r3, r0
 8005c8a:	461a      	mov	r2, r3
 8005c8c:	6839      	ldr	r1, [r7, #0]
 8005c8e:	4620      	mov	r0, r4
 8005c90:	f000 fd88 	bl	80067a4 <_ZNKSt4lessIcEclERKcS2_>
 8005c94:	4603      	mov	r3, r0
 8005c96:	2b00      	cmp	r3, #0
 8005c98:	d01f      	beq.n	8005cda <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x21c>
	      if (_S_right(__pos._M_node) == 0)
 8005c9a:	69bb      	ldr	r3, [r7, #24]
 8005c9c:	4618      	mov	r0, r3
 8005c9e:	f7ff fed6 	bl	8005a4e <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base>
 8005ca2:	4603      	mov	r3, r0
 8005ca4:	2b00      	cmp	r3, #0
 8005ca6:	bf0c      	ite	eq
 8005ca8:	2301      	moveq	r3, #1
 8005caa:	2300      	movne	r3, #0
 8005cac:	b2db      	uxtb	r3, r3
 8005cae:	2b00      	cmp	r3, #0
 8005cb0:	d00a      	beq.n	8005cc8 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x20a>
		return _Res(0, __pos._M_node);
 8005cb2:	2300      	movs	r3, #0
 8005cb4:	62bb      	str	r3, [r7, #40]	; 0x28
 8005cb6:	f107 0218 	add.w	r2, r7, #24
 8005cba:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8005cbe:	4619      	mov	r1, r3
 8005cc0:	68f8      	ldr	r0, [r7, #12]
 8005cc2:	f000 fd84 	bl	80067ce <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 8005cc6:	e019      	b.n	8005cfc <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
		return _Res(__after._M_node, __after._M_node);
 8005cc8:	f107 0210 	add.w	r2, r7, #16
 8005ccc:	f107 0310 	add.w	r3, r7, #16
 8005cd0:	4619      	mov	r1, r3
 8005cd2:	68f8      	ldr	r0, [r7, #12]
 8005cd4:	f000 fe22 	bl	800691c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
 8005cd8:	e010      	b.n	8005cfc <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
	    return _M_get_insert_unique_pos(__k);
 8005cda:	68fb      	ldr	r3, [r7, #12]
 8005cdc:	683a      	ldr	r2, [r7, #0]
 8005cde:	68b9      	ldr	r1, [r7, #8]
 8005ce0:	4618      	mov	r0, r3
 8005ce2:	f001 f83e 	bl	8006d62 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_>
 8005ce6:	e009      	b.n	8005cfc <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
	return _Res(__pos._M_node, 0);
 8005ce8:	2300      	movs	r3, #0
 8005cea:	62fb      	str	r3, [r7, #44]	; 0x2c
 8005cec:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 8005cf0:	f107 0318 	add.w	r3, r7, #24
 8005cf4:	4619      	mov	r1, r3
 8005cf6:	68f8      	ldr	r0, [r7, #12]
 8005cf8:	f000 fe4b 	bl	8006992 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_>
    }
 8005cfc:	68f8      	ldr	r0, [r7, #12]
 8005cfe:	3734      	adds	r7, #52	; 0x34
 8005d00:	46bd      	mov	sp, r7
 8005d02:	bd90      	pop	{r4, r7, pc}

08005d04 <_ZNKSt10_Select1stISt4pairIKc12double_tokenEEclERKS3_>:
      operator()(const _Pair& __x) const
 8005d04:	b480      	push	{r7}
 8005d06:	b083      	sub	sp, #12
 8005d08:	af00      	add	r7, sp, #0
 8005d0a:	6078      	str	r0, [r7, #4]
 8005d0c:	6039      	str	r1, [r7, #0]
      { return __x.first; }
 8005d0e:	683b      	ldr	r3, [r7, #0]
 8005d10:	4618      	mov	r0, r3
 8005d12:	370c      	adds	r7, #12
 8005d14:	46bd      	mov	sp, r7
 8005d16:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005d1a:	4770      	bx	lr

08005d1c <_ZSt7forwardIRKSt4pairIKc12double_tokenEEOT_RNSt16remove_referenceIS6_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8005d1c:	b480      	push	{r7}
 8005d1e:	b083      	sub	sp, #12
 8005d20:	af00      	add	r7, sp, #0
 8005d22:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8005d24:	687b      	ldr	r3, [r7, #4]
 8005d26:	4618      	mov	r0, r3
 8005d28:	370c      	adds	r7, #12
 8005d2a:	46bd      	mov	sp, r7
 8005d2c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005d30:	4770      	bx	lr

08005d32 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_>:
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8005d32:	b5b0      	push	{r4, r5, r7, lr}
 8005d34:	b088      	sub	sp, #32
 8005d36:	af00      	add	r7, sp, #0
 8005d38:	60f8      	str	r0, [r7, #12]
 8005d3a:	60b9      	str	r1, [r7, #8]
 8005d3c:	607a      	str	r2, [r7, #4]
 8005d3e:	603b      	str	r3, [r7, #0]
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
 8005d40:	68bb      	ldr	r3, [r7, #8]
 8005d42:	2b00      	cmp	r3, #0
 8005d44:	d11a      	bne.n	8005d7c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_+0x4a>
	bool __insert_left = (__x != 0 || __p == _M_end()
 8005d46:	68f8      	ldr	r0, [r7, #12]
 8005d48:	f000 ffdb 	bl	8006d02 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_M_endEv>
 8005d4c:	4602      	mov	r2, r0
 8005d4e:	687b      	ldr	r3, [r7, #4]
 8005d50:	4293      	cmp	r3, r2
 8005d52:	d013      	beq.n	8005d7c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_+0x4a>
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
 8005d54:	68fc      	ldr	r4, [r7, #12]
 8005d56:	f107 0310 	add.w	r3, r7, #16
 8005d5a:	6839      	ldr	r1, [r7, #0]
 8005d5c:	4618      	mov	r0, r3
 8005d5e:	f7ff ffd1 	bl	8005d04 <_ZNKSt10_Select1stISt4pairIKc12double_tokenEEclERKS3_>
 8005d62:	4605      	mov	r5, r0
 8005d64:	6878      	ldr	r0, [r7, #4]
 8005d66:	f000 fff0 	bl	8006d4a <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8005d6a:	4603      	mov	r3, r0
 8005d6c:	461a      	mov	r2, r3
 8005d6e:	4629      	mov	r1, r5
 8005d70:	4620      	mov	r0, r4
 8005d72:	f000 fd17 	bl	80067a4 <_ZNKSt4lessIcEclERKcS2_>
 8005d76:	4603      	mov	r3, r0
 8005d78:	2b00      	cmp	r3, #0
 8005d7a:	d001      	beq.n	8005d80 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_+0x4e>
 8005d7c:	2301      	movs	r3, #1
 8005d7e:	e000      	b.n	8005d82 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_+0x50>
 8005d80:	2300      	movs	r3, #0
	bool __insert_left = (__x != 0 || __p == _M_end()
 8005d82:	77fb      	strb	r3, [r7, #31]
	_Link_type __z = __node_gen(_GLIBCXX_FORWARD(_Arg, __v));
 8005d84:	6838      	ldr	r0, [r7, #0]
 8005d86:	f7ff ffc9 	bl	8005d1c <_ZSt7forwardIRKSt4pairIKc12double_tokenEEOT_RNSt16remove_referenceIS6_E4typeE>
 8005d8a:	4603      	mov	r3, r0
 8005d8c:	4619      	mov	r1, r3
 8005d8e:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8005d90:	f001 f89a 	bl	8006ec8 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_Alloc_nodeclIRKS3_EEPSt13_Rb_tree_nodeIS3_EOT_>
 8005d94:	61b8      	str	r0, [r7, #24]
				      this->_M_impl._M_header);
 8005d96:	68fb      	ldr	r3, [r7, #12]
 8005d98:	3304      	adds	r3, #4
	_Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
 8005d9a:	7ff8      	ldrb	r0, [r7, #31]
 8005d9c:	687a      	ldr	r2, [r7, #4]
 8005d9e:	69b9      	ldr	r1, [r7, #24]
 8005da0:	f01d fc12 	bl	80235c8 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
	++_M_impl._M_node_count;
 8005da4:	68fb      	ldr	r3, [r7, #12]
 8005da6:	695b      	ldr	r3, [r3, #20]
 8005da8:	1c5a      	adds	r2, r3, #1
 8005daa:	68fb      	ldr	r3, [r7, #12]
 8005dac:	615a      	str	r2, [r3, #20]
	return iterator(__z);
 8005dae:	f107 0314 	add.w	r3, r7, #20
 8005db2:	69b9      	ldr	r1, [r7, #24]
 8005db4:	4618      	mov	r0, r3
 8005db6:	f7ff fe73 	bl	8005aa0 <_ZNSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEEC1EPSt18_Rb_tree_node_base>
 8005dba:	697b      	ldr	r3, [r7, #20]
      }
 8005dbc:	4618      	mov	r0, r3
 8005dbe:	3720      	adds	r7, #32
 8005dc0:	46bd      	mov	sp, r7
 8005dc2:	bdb0      	pop	{r4, r5, r7, pc}

08005dc4 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8005dc4:	b480      	push	{r7}
 8005dc6:	b083      	sub	sp, #12
 8005dc8:	af00      	add	r7, sp, #0
 8005dca:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8005dcc:	687b      	ldr	r3, [r7, #4]
 8005dce:	4618      	mov	r0, r3
 8005dd0:	370c      	adds	r7, #12
 8005dd2:	46bd      	mov	sp, r7
 8005dd4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005dd8:	4770      	bx	lr

08005dda <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_JRiEENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8005dda:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005ddc:	b083      	sub	sp, #12
 8005dde:	af00      	add	r7, sp, #0
 8005de0:	6078      	str	r0, [r7, #4]
 8005de2:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8005de4:	6878      	ldr	r0, [r7, #4]
 8005de6:	f000 f876 	bl	8005ed6 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8005dea:	4604      	mov	r4, r0
 8005dec:	6838      	ldr	r0, [r7, #0]
 8005dee:	f7fe ff2d 	bl	8004c4c <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 8005df2:	4603      	mov	r3, r0
 8005df4:	461a      	mov	r2, r3
 8005df6:	4621      	mov	r1, r4
 8005df8:	4628      	mov	r0, r5
 8005dfa:	f001 f879 	bl	8006ef0 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEE13_M_reset_implEvEUlOT_E_JRiEESF_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 8005dfe:	4633      	mov	r3, r6
    }
 8005e00:	4618      	mov	r0, r3
 8005e02:	370c      	adds	r7, #12
 8005e04:	46bd      	mov	sp, r7
 8005e06:	bdf0      	pop	{r4, r5, r6, r7, pc}

08005e08 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_JRfEENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8005e08:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005e0a:	b083      	sub	sp, #12
 8005e0c:	af00      	add	r7, sp, #0
 8005e0e:	6078      	str	r0, [r7, #4]
 8005e10:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8005e12:	6878      	ldr	r0, [r7, #4]
 8005e14:	f000 f85f 	bl	8005ed6 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8005e18:	4604      	mov	r4, r0
 8005e1a:	6838      	ldr	r0, [r7, #0]
 8005e1c:	f7fe ff4a 	bl	8004cb4 <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 8005e20:	4603      	mov	r3, r0
 8005e22:	461a      	mov	r2, r3
 8005e24:	4621      	mov	r1, r4
 8005e26:	4628      	mov	r0, r5
 8005e28:	f001 f879 	bl	8006f1e <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEE13_M_reset_implEvEUlOT_E_JRfEESF_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 8005e2c:	4633      	mov	r3, r6
    }
 8005e2e:	4618      	mov	r0, r3
 8005e30:	370c      	adds	r7, #12
 8005e32:	46bd      	mov	sp, r7
 8005e34:	bdf0      	pop	{r4, r5, r6, r7, pc}

08005e36 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_JRbEENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8005e36:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005e38:	b083      	sub	sp, #12
 8005e3a:	af00      	add	r7, sp, #0
 8005e3c:	6078      	str	r0, [r7, #4]
 8005e3e:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8005e40:	6878      	ldr	r0, [r7, #4]
 8005e42:	f000 f848 	bl	8005ed6 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8005e46:	4604      	mov	r4, r0
 8005e48:	6838      	ldr	r0, [r7, #0]
 8005e4a:	f7fe ff67 	bl	8004d1c <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
 8005e4e:	4603      	mov	r3, r0
 8005e50:	461a      	mov	r2, r3
 8005e52:	4621      	mov	r1, r4
 8005e54:	4628      	mov	r0, r5
 8005e56:	f001 f879 	bl	8006f4c <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEE13_M_reset_implEvEUlOT_E_JRbEESF_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 8005e5a:	4633      	mov	r3, r6
    }
 8005e5c:	4618      	mov	r0, r3
 8005e5e:	370c      	adds	r7, #12
 8005e60:	46bd      	mov	sp, r7
 8005e62:	bdf0      	pop	{r4, r5, r6, r7, pc}

08005e64 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_JRS8_EENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8005e64:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005e66:	b083      	sub	sp, #12
 8005e68:	af00      	add	r7, sp, #0
 8005e6a:	6078      	str	r0, [r7, #4]
 8005e6c:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8005e6e:	6878      	ldr	r0, [r7, #4]
 8005e70:	f000 f831 	bl	8005ed6 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8005e74:	4604      	mov	r4, r0
 8005e76:	6838      	ldr	r0, [r7, #0]
 8005e78:	f7fe ff90 	bl	8004d9c <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 8005e7c:	4603      	mov	r3, r0
 8005e7e:	461a      	mov	r2, r3
 8005e80:	4621      	mov	r1, r4
 8005e82:	4628      	mov	r0, r5
 8005e84:	f001 f879 	bl	8006f7a <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEE13_M_reset_implEvEUlOT_E_JRS9_EESF_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 8005e88:	4633      	mov	r3, r6
    }
 8005e8a:	4618      	mov	r0, r3
 8005e8c:	370c      	adds	r7, #12
 8005e8e:	46bd      	mov	sp, r7
 8005e90:	bdf0      	pop	{r4, r5, r6, r7, pc}

08005e92 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_JRSC_EENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8005e92:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005e94:	b083      	sub	sp, #12
 8005e96:	af00      	add	r7, sp, #0
 8005e98:	6078      	str	r0, [r7, #4]
 8005e9a:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8005e9c:	6878      	ldr	r0, [r7, #4]
 8005e9e:	f000 f81a 	bl	8005ed6 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8005ea2:	4604      	mov	r4, r0
 8005ea4:	6838      	ldr	r0, [r7, #0]
 8005ea6:	f7fe ffb9 	bl	8004e1c <_ZSt7forwardIRSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS5_E4typeE>
 8005eaa:	4603      	mov	r3, r0
 8005eac:	461a      	mov	r2, r3
 8005eae:	4621      	mov	r1, r4
 8005eb0:	4628      	mov	r0, r5
 8005eb2:	f001 f879 	bl	8006fa8 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEE13_M_reset_implEvEUlOT_E_JRSD_EESF_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 8005eb6:	4633      	mov	r3, r6
    }
 8005eb8:	4618      	mov	r0, r3
 8005eba:	370c      	adds	r7, #12
 8005ebc:	46bd      	mov	sp, r7
 8005ebe:	bdf0      	pop	{r4, r5, r6, r7, pc}

08005ec0 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbS9_SD_EEEJEE9_M_accessEv>:
      _M_access() const
 8005ec0:	b480      	push	{r7}
 8005ec2:	b083      	sub	sp, #12
 8005ec4:	af00      	add	r7, sp, #0
 8005ec6:	6078      	str	r0, [r7, #4]
      { return _M_data; }
 8005ec8:	687b      	ldr	r3, [r7, #4]
 8005eca:	4618      	mov	r0, r3
 8005ecc:	370c      	adds	r7, #12
 8005ece:	46bd      	mov	sp, r7
 8005ed0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005ed4:	4770      	bx	lr

08005ed6 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8005ed6:	b480      	push	{r7}
 8005ed8:	b083      	sub	sp, #12
 8005eda:	af00      	add	r7, sp, #0
 8005edc:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8005ede:	687b      	ldr	r3, [r7, #4]
 8005ee0:	4618      	mov	r0, r3
 8005ee2:	370c      	adds	r7, #12
 8005ee4:	46bd      	mov	sp, r7
 8005ee6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005eea:	4770      	bx	lr

08005eec <_ZNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1Ev>:
      constexpr _Variadic_union() : _M_rest() { }
 8005eec:	b580      	push	{r7, lr}
 8005eee:	b082      	sub	sp, #8
 8005ef0:	af00      	add	r7, sp, #0
 8005ef2:	6078      	str	r0, [r7, #4]
 8005ef4:	687b      	ldr	r3, [r7, #4]
 8005ef6:	4618      	mov	r0, r3
 8005ef8:	f001 f86d 	bl	8006fd6 <_ZNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1Ev>
 8005efc:	687b      	ldr	r3, [r7, #4]
 8005efe:	4618      	mov	r0, r3
 8005f00:	3708      	adds	r7, #8
 8005f02:	46bd      	mov	sp, r7
 8005f04:	bd80      	pop	{r7, pc}

08005f06 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS1_15_Copy_ctor_baseILb0EJifbS9_SD_EEERKSF_EEvOT0_OT1_EUlOT_E_JRKiEESN_St14__invoke_otherSK_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8005f06:	b5b0      	push	{r4, r5, r7, lr}
 8005f08:	b084      	sub	sp, #16
 8005f0a:	af00      	add	r7, sp, #0
 8005f0c:	7338      	strb	r0, [r7, #12]
 8005f0e:	60b9      	str	r1, [r7, #8]
 8005f10:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8005f12:	68b8      	ldr	r0, [r7, #8]
 8005f14:	f7fe fe8f 	bl	8004c36 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8005f18:	4604      	mov	r4, r0
 8005f1a:	6878      	ldr	r0, [r7, #4]
 8005f1c:	f7ff f83b 	bl	8004f96 <_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE>
 8005f20:	4603      	mov	r3, r0
 8005f22:	4619      	mov	r1, r3
 8005f24:	4620      	mov	r0, r4
 8005f26:	f001 f863 	bl	8006ff0 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Copy_ctor_baseILb0EJifbS7_SB_EEERKSD_EEvOT0_OT1_ENUlOT_E_clIRKiEENS0_16__variant_cookieESM_>
 8005f2a:	462b      	mov	r3, r5
 8005f2c:	4618      	mov	r0, r3
 8005f2e:	3710      	adds	r7, #16
 8005f30:	46bd      	mov	sp, r7
 8005f32:	bdb0      	pop	{r4, r5, r7, pc}

08005f34 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS1_15_Copy_ctor_baseILb0EJifbS9_SD_EEERKSF_EEvOT0_OT1_EUlOT_E_JRKfEESN_St14__invoke_otherSK_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8005f34:	b5b0      	push	{r4, r5, r7, lr}
 8005f36:	b084      	sub	sp, #16
 8005f38:	af00      	add	r7, sp, #0
 8005f3a:	7338      	strb	r0, [r7, #12]
 8005f3c:	60b9      	str	r1, [r7, #8]
 8005f3e:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8005f40:	68b8      	ldr	r0, [r7, #8]
 8005f42:	f7fe fe78 	bl	8004c36 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8005f46:	4604      	mov	r4, r0
 8005f48:	6878      	ldr	r0, [r7, #4]
 8005f4a:	f7ff f84d 	bl	8004fe8 <_ZSt7forwardIRKfEOT_RNSt16remove_referenceIS2_E4typeE>
 8005f4e:	4603      	mov	r3, r0
 8005f50:	4619      	mov	r1, r3
 8005f52:	4620      	mov	r0, r4
 8005f54:	f001 f864 	bl	8007020 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Copy_ctor_baseILb0EJifbS7_SB_EEERKSD_EEvOT0_OT1_ENUlOT_E_clIRKfEENS0_16__variant_cookieESM_>
 8005f58:	462b      	mov	r3, r5
 8005f5a:	4618      	mov	r0, r3
 8005f5c:	3710      	adds	r7, #16
 8005f5e:	46bd      	mov	sp, r7
 8005f60:	bdb0      	pop	{r4, r5, r7, pc}

08005f62 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS1_15_Copy_ctor_baseILb0EJifbS9_SD_EEERKSF_EEvOT0_OT1_EUlOT_E_JRKbEESN_St14__invoke_otherSK_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8005f62:	b5b0      	push	{r4, r5, r7, lr}
 8005f64:	b084      	sub	sp, #16
 8005f66:	af00      	add	r7, sp, #0
 8005f68:	7338      	strb	r0, [r7, #12]
 8005f6a:	60b9      	str	r1, [r7, #8]
 8005f6c:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8005f6e:	68b8      	ldr	r0, [r7, #8]
 8005f70:	f7fe fe61 	bl	8004c36 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8005f74:	4604      	mov	r4, r0
 8005f76:	6878      	ldr	r0, [r7, #4]
 8005f78:	f7ff f85f 	bl	800503a <_ZSt7forwardIRKbEOT_RNSt16remove_referenceIS2_E4typeE>
 8005f7c:	4603      	mov	r3, r0
 8005f7e:	4619      	mov	r1, r3
 8005f80:	4620      	mov	r0, r4
 8005f82:	f001 f865 	bl	8007050 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Copy_ctor_baseILb0EJifbS7_SB_EEERKSD_EEvOT0_OT1_ENUlOT_E_clIRKbEENS0_16__variant_cookieESM_>
 8005f86:	462b      	mov	r3, r5
 8005f88:	4618      	mov	r0, r3
 8005f8a:	3710      	adds	r7, #16
 8005f8c:	46bd      	mov	sp, r7
 8005f8e:	bdb0      	pop	{r4, r5, r7, pc}

08005f90 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS1_15_Copy_ctor_baseILb0EJifbS9_SD_EEERKSF_EEvOT0_OT1_EUlOT_E_JRKS9_EESN_St14__invoke_otherSK_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8005f90:	b5b0      	push	{r4, r5, r7, lr}
 8005f92:	b084      	sub	sp, #16
 8005f94:	af00      	add	r7, sp, #0
 8005f96:	7338      	strb	r0, [r7, #12]
 8005f98:	60b9      	str	r1, [r7, #8]
 8005f9a:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8005f9c:	68b8      	ldr	r0, [r7, #8]
 8005f9e:	f7fe fe4a 	bl	8004c36 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8005fa2:	4604      	mov	r4, r0
 8005fa4:	6878      	ldr	r0, [r7, #4]
 8005fa6:	f7ff f87d 	bl	80050a4 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 8005faa:	4603      	mov	r3, r0
 8005fac:	4619      	mov	r1, r3
 8005fae:	4620      	mov	r0, r4
 8005fb0:	f001 f866 	bl	8007080 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Copy_ctor_baseILb0EJifbS7_SB_EEERKSD_EEvOT0_OT1_ENUlOT_E_clIRKS7_EENS0_16__variant_cookieESM_>
 8005fb4:	462b      	mov	r3, r5
 8005fb6:	4618      	mov	r0, r3
 8005fb8:	3710      	adds	r7, #16
 8005fba:	46bd      	mov	sp, r7
 8005fbc:	bdb0      	pop	{r4, r5, r7, pc}

08005fbe <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS1_15_Copy_ctor_baseILb0EJifbS9_SD_EEERKSF_EEvOT0_OT1_EUlOT_E_JRKSD_EESN_St14__invoke_otherSK_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8005fbe:	b5b0      	push	{r4, r5, r7, lr}
 8005fc0:	b084      	sub	sp, #16
 8005fc2:	af00      	add	r7, sp, #0
 8005fc4:	7338      	strb	r0, [r7, #12]
 8005fc6:	60b9      	str	r1, [r7, #8]
 8005fc8:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8005fca:	68b8      	ldr	r0, [r7, #8]
 8005fcc:	f7fe fe33 	bl	8004c36 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8005fd0:	4604      	mov	r4, r0
 8005fd2:	6878      	ldr	r0, [r7, #4]
 8005fd4:	f7ff f89b 	bl	800510e <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>
 8005fd8:	4603      	mov	r3, r0
 8005fda:	4619      	mov	r1, r3
 8005fdc:	4620      	mov	r0, r4
 8005fde:	f001 f867 	bl	80070b0 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Copy_ctor_baseILb0EJifbS7_SB_EEERKSD_EEvOT0_OT1_ENUlOT_E_clIRKSB_EENS0_16__variant_cookieESM_>
 8005fe2:	462b      	mov	r3, r5
 8005fe4:	4618      	mov	r0, r3
 8005fe6:	3710      	adds	r7, #16
 8005fe8:	46bd      	mov	sp, r7
 8005fea:	bdb0      	pop	{r4, r5, r7, pc}

08005fec <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_ENUlOT_T0_E_clIRiSt17integral_constantIjLj0EEEENS0_20__variant_idx_cookieESF_SG_>:
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8005fec:	b5b0      	push	{r4, r5, r7, lr}
 8005fee:	b084      	sub	sp, #16
 8005ff0:	af00      	add	r7, sp, #0
 8005ff2:	60f8      	str	r0, [r7, #12]
 8005ff4:	60b9      	str	r1, [r7, #8]
 8005ff6:	713a      	strb	r2, [r7, #4]
 8005ff8:	68fb      	ldr	r3, [r7, #12]
 8005ffa:	681b      	ldr	r3, [r3, #0]
		if (this->_M_index == __rhs_index)
 8005ffc:	7e1b      	ldrb	r3, [r3, #24]
 8005ffe:	461c      	mov	r4, r3
 8006000:	1d3b      	adds	r3, r7, #4
 8006002:	4618      	mov	r0, r3
 8006004:	f000 f828 	bl	8006058 <_ZNKSt17integral_constantIjLj0EEcvjEv>
 8006008:	4603      	mov	r3, r0
 800600a:	429c      	cmp	r4, r3
 800600c:	bf0c      	ite	eq
 800600e:	2301      	moveq	r3, #1
 8006010:	2300      	movne	r3, #0
 8006012:	b2db      	uxtb	r3, r3
 8006014:	2b00      	cmp	r3, #0
 8006016:	d00c      	beq.n	8006032 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_ENUlOT_T0_E_clIRiSt17integral_constantIjLj0EEEENS0_20__variant_idx_cookieESF_SG_+0x46>
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 8006018:	68b8      	ldr	r0, [r7, #8]
 800601a:	f001 f86c 	bl	80070f6 <_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_>
 800601e:	4603      	mov	r3, r0
 8006020:	681c      	ldr	r4, [r3, #0]
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8006022:	68fb      	ldr	r3, [r7, #12]
 8006024:	681b      	ldr	r3, [r3, #0]
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 8006026:	4618      	mov	r0, r3
 8006028:	f000 f821 	bl	800606e <_ZNSt8__detail9__variant5__getILj0ERNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcOT0_>
 800602c:	4603      	mov	r3, r0
 800602e:	601c      	str	r4, [r3, #0]
	    return {};
 8006030:	e00d      	b.n	800604e <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_ENUlOT_T0_E_clIRiSt17integral_constantIjLj0EEEENS0_20__variant_idx_cookieESF_SG_+0x62>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8006032:	68fb      	ldr	r3, [r7, #12]
 8006034:	681b      	ldr	r3, [r3, #0]
		  __variant_cast<_Types...>(*this)
 8006036:	4618      	mov	r0, r3
 8006038:	f7fb ffa7 	bl	8001f8a <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEERNSt8__detail9__variant17_Move_assign_baseILb0EJifbS5_S9_EEEEDcOT0_>
 800603c:	4604      	mov	r4, r0
		    .template emplace<__rhs_index>(std::move(__rhs_mem));
 800603e:	68b8      	ldr	r0, [r7, #8]
 8006040:	f001 f859 	bl	80070f6 <_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_>
 8006044:	4603      	mov	r3, r0
		  __variant_cast<_Types...>(*this)
 8006046:	4619      	mov	r1, r3
 8006048:	4620      	mov	r0, r4
 800604a:	f001 f85f 	bl	800710c <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE7emplaceILj0EJiEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	    return {};
 800604e:	462b      	mov	r3, r5
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8006050:	4618      	mov	r0, r3
 8006052:	3710      	adds	r7, #16
 8006054:	46bd      	mov	sp, r7
 8006056:	bdb0      	pop	{r4, r5, r7, pc}

08006058 <_ZNKSt17integral_constantIjLj0EEcvjEv>:
    struct integral_constant
    {
      static constexpr _Tp                  value = __v;
      typedef _Tp                           value_type;
      typedef integral_constant<_Tp, __v>   type;
      constexpr operator value_type() const noexcept { return value; }
 8006058:	b480      	push	{r7}
 800605a:	b083      	sub	sp, #12
 800605c:	af00      	add	r7, sp, #0
 800605e:	6078      	str	r0, [r7, #4]
 8006060:	2300      	movs	r3, #0
 8006062:	4618      	mov	r0, r3
 8006064:	370c      	adds	r7, #12
 8006066:	46bd      	mov	sp, r7
 8006068:	f85d 7b04 	ldr.w	r7, [sp], #4
 800606c:	4770      	bx	lr

0800606e <_ZNSt8__detail9__variant5__getILj0ERNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800606e:	b590      	push	{r4, r7, lr}
 8006070:	b083      	sub	sp, #12
 8006072:	af00      	add	r7, sp, #0
 8006074:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8006076:	6878      	ldr	r0, [r7, #4]
 8006078:	f001 f832 	bl	80070e0 <_ZSt7forwardIRNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800607c:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800607e:	4619      	mov	r1, r3
 8006080:	4620      	mov	r0, r4
 8006082:	f7fb ff8d 	bl	8001fa0 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 8006086:	4603      	mov	r3, r0
    }
 8006088:	4618      	mov	r0, r3
 800608a:	370c      	adds	r7, #12
 800608c:	46bd      	mov	sp, r7
 800608e:	bd90      	pop	{r4, r7, pc}

08006090 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_ENUlOT_T0_E_clIRfSt17integral_constantIjLj1EEEENS0_20__variant_idx_cookieESF_SG_>:
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8006090:	b5b0      	push	{r4, r5, r7, lr}
 8006092:	b084      	sub	sp, #16
 8006094:	af00      	add	r7, sp, #0
 8006096:	60f8      	str	r0, [r7, #12]
 8006098:	60b9      	str	r1, [r7, #8]
 800609a:	713a      	strb	r2, [r7, #4]
 800609c:	68fb      	ldr	r3, [r7, #12]
 800609e:	681b      	ldr	r3, [r3, #0]
		if (this->_M_index == __rhs_index)
 80060a0:	7e1b      	ldrb	r3, [r3, #24]
 80060a2:	461c      	mov	r4, r3
 80060a4:	1d3b      	adds	r3, r7, #4
 80060a6:	4618      	mov	r0, r3
 80060a8:	f000 f828 	bl	80060fc <_ZNKSt17integral_constantIjLj1EEcvjEv>
 80060ac:	4603      	mov	r3, r0
 80060ae:	429c      	cmp	r4, r3
 80060b0:	bf0c      	ite	eq
 80060b2:	2301      	moveq	r3, #1
 80060b4:	2300      	movne	r3, #0
 80060b6:	b2db      	uxtb	r3, r3
 80060b8:	2b00      	cmp	r3, #0
 80060ba:	d00c      	beq.n	80060d6 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_ENUlOT_T0_E_clIRfSt17integral_constantIjLj1EEEENS0_20__variant_idx_cookieESF_SG_+0x46>
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 80060bc:	68b8      	ldr	r0, [r7, #8]
 80060be:	f001 f83e 	bl	800713e <_ZSt4moveIRfEONSt16remove_referenceIT_E4typeEOS2_>
 80060c2:	4603      	mov	r3, r0
 80060c4:	681c      	ldr	r4, [r3, #0]
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 80060c6:	68fb      	ldr	r3, [r7, #12]
 80060c8:	681b      	ldr	r3, [r3, #0]
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 80060ca:	4618      	mov	r0, r3
 80060cc:	f000 f821 	bl	8006112 <_ZNSt8__detail9__variant5__getILj1ERNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcOT0_>
 80060d0:	4603      	mov	r3, r0
 80060d2:	601c      	str	r4, [r3, #0]
	    return {};
 80060d4:	e00d      	b.n	80060f2 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_ENUlOT_T0_E_clIRfSt17integral_constantIjLj1EEEENS0_20__variant_idx_cookieESF_SG_+0x62>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 80060d6:	68fb      	ldr	r3, [r7, #12]
 80060d8:	681b      	ldr	r3, [r3, #0]
		  __variant_cast<_Types...>(*this)
 80060da:	4618      	mov	r0, r3
 80060dc:	f7fb ff55 	bl	8001f8a <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEERNSt8__detail9__variant17_Move_assign_baseILb0EJifbS5_S9_EEEEDcOT0_>
 80060e0:	4604      	mov	r4, r0
		    .template emplace<__rhs_index>(std::move(__rhs_mem));
 80060e2:	68b8      	ldr	r0, [r7, #8]
 80060e4:	f001 f82b 	bl	800713e <_ZSt4moveIRfEONSt16remove_referenceIT_E4typeEOS2_>
 80060e8:	4603      	mov	r3, r0
		  __variant_cast<_Types...>(*this)
 80060ea:	4619      	mov	r1, r3
 80060ec:	4620      	mov	r0, r4
 80060ee:	f001 f831 	bl	8007154 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE7emplaceILj1EJfEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	    return {};
 80060f2:	462b      	mov	r3, r5
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 80060f4:	4618      	mov	r0, r3
 80060f6:	3710      	adds	r7, #16
 80060f8:	46bd      	mov	sp, r7
 80060fa:	bdb0      	pop	{r4, r5, r7, pc}

080060fc <_ZNKSt17integral_constantIjLj1EEcvjEv>:
 80060fc:	b480      	push	{r7}
 80060fe:	b083      	sub	sp, #12
 8006100:	af00      	add	r7, sp, #0
 8006102:	6078      	str	r0, [r7, #4]
 8006104:	2301      	movs	r3, #1
 8006106:	4618      	mov	r0, r3
 8006108:	370c      	adds	r7, #12
 800610a:	46bd      	mov	sp, r7
 800610c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006110:	4770      	bx	lr

08006112 <_ZNSt8__detail9__variant5__getILj1ERNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8006112:	b590      	push	{r4, r7, lr}
 8006114:	b083      	sub	sp, #12
 8006116:	af00      	add	r7, sp, #0
 8006118:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800611a:	6878      	ldr	r0, [r7, #4]
 800611c:	f000 ffe0 	bl	80070e0 <_ZSt7forwardIRNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8006120:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8006122:	4619      	mov	r1, r3
 8006124:	4620      	mov	r0, r4
 8006126:	f7fb ffc6 	bl	80020b6 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800612a:	4603      	mov	r3, r0
    }
 800612c:	4618      	mov	r0, r3
 800612e:	370c      	adds	r7, #12
 8006130:	46bd      	mov	sp, r7
 8006132:	bd90      	pop	{r4, r7, pc}

08006134 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_ENUlOT_T0_E_clIRbSt17integral_constantIjLj2EEEENS0_20__variant_idx_cookieESF_SG_>:
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8006134:	b5b0      	push	{r4, r5, r7, lr}
 8006136:	b084      	sub	sp, #16
 8006138:	af00      	add	r7, sp, #0
 800613a:	60f8      	str	r0, [r7, #12]
 800613c:	60b9      	str	r1, [r7, #8]
 800613e:	713a      	strb	r2, [r7, #4]
 8006140:	68fb      	ldr	r3, [r7, #12]
 8006142:	681b      	ldr	r3, [r3, #0]
		if (this->_M_index == __rhs_index)
 8006144:	7e1b      	ldrb	r3, [r3, #24]
 8006146:	461c      	mov	r4, r3
 8006148:	1d3b      	adds	r3, r7, #4
 800614a:	4618      	mov	r0, r3
 800614c:	f000 f829 	bl	80061a2 <_ZNKSt17integral_constantIjLj2EEcvjEv>
 8006150:	4603      	mov	r3, r0
 8006152:	429c      	cmp	r4, r3
 8006154:	bf0c      	ite	eq
 8006156:	2301      	moveq	r3, #1
 8006158:	2300      	movne	r3, #0
 800615a:	b2db      	uxtb	r3, r3
 800615c:	2b00      	cmp	r3, #0
 800615e:	d00d      	beq.n	800617c <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_ENUlOT_T0_E_clIRbSt17integral_constantIjLj2EEEENS0_20__variant_idx_cookieESF_SG_+0x48>
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 8006160:	68b8      	ldr	r0, [r7, #8]
 8006162:	f001 f810 	bl	8007186 <_ZSt4moveIRbEONSt16remove_referenceIT_E4typeEOS2_>
 8006166:	4603      	mov	r3, r0
 8006168:	781c      	ldrb	r4, [r3, #0]
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800616a:	68fb      	ldr	r3, [r7, #12]
 800616c:	681b      	ldr	r3, [r3, #0]
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 800616e:	4618      	mov	r0, r3
 8006170:	f000 f822 	bl	80061b8 <_ZNSt8__detail9__variant5__getILj2ERNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcOT0_>
 8006174:	4603      	mov	r3, r0
 8006176:	4622      	mov	r2, r4
 8006178:	701a      	strb	r2, [r3, #0]
	    return {};
 800617a:	e00d      	b.n	8006198 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_ENUlOT_T0_E_clIRbSt17integral_constantIjLj2EEEENS0_20__variant_idx_cookieESF_SG_+0x64>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800617c:	68fb      	ldr	r3, [r7, #12]
 800617e:	681b      	ldr	r3, [r3, #0]
		  __variant_cast<_Types...>(*this)
 8006180:	4618      	mov	r0, r3
 8006182:	f7fb ff02 	bl	8001f8a <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEERNSt8__detail9__variant17_Move_assign_baseILb0EJifbS5_S9_EEEEDcOT0_>
 8006186:	4604      	mov	r4, r0
		    .template emplace<__rhs_index>(std::move(__rhs_mem));
 8006188:	68b8      	ldr	r0, [r7, #8]
 800618a:	f000 fffc 	bl	8007186 <_ZSt4moveIRbEONSt16remove_referenceIT_E4typeEOS2_>
 800618e:	4603      	mov	r3, r0
		  __variant_cast<_Types...>(*this)
 8006190:	4619      	mov	r1, r3
 8006192:	4620      	mov	r0, r4
 8006194:	f001 f802 	bl	800719c <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE7emplaceILj2EJbEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	    return {};
 8006198:	462b      	mov	r3, r5
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800619a:	4618      	mov	r0, r3
 800619c:	3710      	adds	r7, #16
 800619e:	46bd      	mov	sp, r7
 80061a0:	bdb0      	pop	{r4, r5, r7, pc}

080061a2 <_ZNKSt17integral_constantIjLj2EEcvjEv>:
 80061a2:	b480      	push	{r7}
 80061a4:	b083      	sub	sp, #12
 80061a6:	af00      	add	r7, sp, #0
 80061a8:	6078      	str	r0, [r7, #4]
 80061aa:	2302      	movs	r3, #2
 80061ac:	4618      	mov	r0, r3
 80061ae:	370c      	adds	r7, #12
 80061b0:	46bd      	mov	sp, r7
 80061b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80061b6:	4770      	bx	lr

080061b8 <_ZNSt8__detail9__variant5__getILj2ERNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 80061b8:	b590      	push	{r4, r7, lr}
 80061ba:	b083      	sub	sp, #12
 80061bc:	af00      	add	r7, sp, #0
 80061be:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 80061c0:	6878      	ldr	r0, [r7, #4]
 80061c2:	f000 ff8d 	bl	80070e0 <_ZSt7forwardIRNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 80061c6:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 80061c8:	4619      	mov	r1, r3
 80061ca:	4620      	mov	r0, r4
 80061cc:	f7fc f811 	bl	80021f2 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80061d0:	4603      	mov	r3, r0
    }
 80061d2:	4618      	mov	r0, r3
 80061d4:	370c      	adds	r7, #12
 80061d6:	46bd      	mov	sp, r7
 80061d8:	bd90      	pop	{r4, r7, pc}

080061da <_ZN9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7_M_addrEv>:
      _M_addr() noexcept
 80061da:	b480      	push	{r7}
 80061dc:	b083      	sub	sp, #12
 80061de:	af00      	add	r7, sp, #0
 80061e0:	6078      	str	r0, [r7, #4]
      { return static_cast<void*>(&_M_storage); }
 80061e2:	687b      	ldr	r3, [r7, #4]
 80061e4:	4618      	mov	r0, r3
 80061e6:	370c      	adds	r7, #12
 80061e8:	46bd      	mov	sp, r7
 80061ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80061ee:	4770      	bx	lr

080061f0 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_ENUlOT_T0_E_clIRS7_St17integral_constantIjLj3EEEENS0_20__variant_idx_cookieESF_SG_>:
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 80061f0:	b5b0      	push	{r4, r5, r7, lr}
 80061f2:	b084      	sub	sp, #16
 80061f4:	af00      	add	r7, sp, #0
 80061f6:	60f8      	str	r0, [r7, #12]
 80061f8:	60b9      	str	r1, [r7, #8]
 80061fa:	713a      	strb	r2, [r7, #4]
 80061fc:	68fb      	ldr	r3, [r7, #12]
 80061fe:	681b      	ldr	r3, [r3, #0]
		if (this->_M_index == __rhs_index)
 8006200:	7e1b      	ldrb	r3, [r3, #24]
 8006202:	461c      	mov	r4, r3
 8006204:	1d3b      	adds	r3, r7, #4
 8006206:	4618      	mov	r0, r3
 8006208:	f000 f82a 	bl	8006260 <_ZNKSt17integral_constantIjLj3EEcvjEv>
 800620c:	4603      	mov	r3, r0
 800620e:	429c      	cmp	r4, r3
 8006210:	bf0c      	ite	eq
 8006212:	2301      	moveq	r3, #1
 8006214:	2300      	movne	r3, #0
 8006216:	b2db      	uxtb	r3, r3
 8006218:	2b00      	cmp	r3, #0
 800621a:	d00e      	beq.n	800623a <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_ENUlOT_T0_E_clIRS7_St17integral_constantIjLj3EEEENS0_20__variant_idx_cookieESF_SG_+0x4a>
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 800621c:	68b8      	ldr	r0, [r7, #8]
 800621e:	f000 ffd6 	bl	80071ce <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
 8006222:	4604      	mov	r4, r0
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8006224:	68fb      	ldr	r3, [r7, #12]
 8006226:	681b      	ldr	r3, [r3, #0]
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 8006228:	4618      	mov	r0, r3
 800622a:	f000 f824 	bl	8006276 <_ZNSt8__detail9__variant5__getILj3ERNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcOT0_>
 800622e:	4603      	mov	r3, r0
 8006230:	4621      	mov	r1, r4
 8006232:	4618      	mov	r0, r3
 8006234:	f01d fc0d 	bl	8023a52 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>
	    return {};
 8006238:	e00d      	b.n	8006256 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_ENUlOT_T0_E_clIRS7_St17integral_constantIjLj3EEEENS0_20__variant_idx_cookieESF_SG_+0x66>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800623a:	68fb      	ldr	r3, [r7, #12]
 800623c:	681b      	ldr	r3, [r3, #0]
		  __variant_cast<_Types...>(*this)
 800623e:	4618      	mov	r0, r3
 8006240:	f7fb fea3 	bl	8001f8a <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEERNSt8__detail9__variant17_Move_assign_baseILb0EJifbS5_S9_EEEEDcOT0_>
 8006244:	4604      	mov	r4, r0
		    .template emplace<__rhs_index>(std::move(__rhs_mem));
 8006246:	68b8      	ldr	r0, [r7, #8]
 8006248:	f000 ffc1 	bl	80071ce <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
 800624c:	4603      	mov	r3, r0
		  __variant_cast<_Types...>(*this)
 800624e:	4619      	mov	r1, r3
 8006250:	4620      	mov	r0, r4
 8006252:	f000 ffc7 	bl	80071e4 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE7emplaceILj3EJS5_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	    return {};
 8006256:	462b      	mov	r3, r5
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8006258:	4618      	mov	r0, r3
 800625a:	3710      	adds	r7, #16
 800625c:	46bd      	mov	sp, r7
 800625e:	bdb0      	pop	{r4, r5, r7, pc}

08006260 <_ZNKSt17integral_constantIjLj3EEcvjEv>:
 8006260:	b480      	push	{r7}
 8006262:	b083      	sub	sp, #12
 8006264:	af00      	add	r7, sp, #0
 8006266:	6078      	str	r0, [r7, #4]
 8006268:	2303      	movs	r3, #3
 800626a:	4618      	mov	r0, r3
 800626c:	370c      	adds	r7, #12
 800626e:	46bd      	mov	sp, r7
 8006270:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006274:	4770      	bx	lr

08006276 <_ZNSt8__detail9__variant5__getILj3ERNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8006276:	b590      	push	{r4, r7, lr}
 8006278:	b083      	sub	sp, #12
 800627a:	af00      	add	r7, sp, #0
 800627c:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800627e:	6878      	ldr	r0, [r7, #4]
 8006280:	f000 ff2e 	bl	80070e0 <_ZSt7forwardIRNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8006284:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8006286:	4619      	mov	r1, r3
 8006288:	4620      	mov	r0, r4
 800628a:	f7fc f862 	bl	8002352 <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800628e:	4603      	mov	r3, r0
    }
 8006290:	4618      	mov	r0, r3
 8006292:	370c      	adds	r7, #12
 8006294:	46bd      	mov	sp, r7
 8006296:	bd90      	pop	{r4, r7, pc}

08006298 <_ZN9__gnu_cxx16__aligned_membufISt6vectorI6SymbolSaIS2_EEE7_M_addrEv>:
      _M_addr() noexcept
 8006298:	b480      	push	{r7}
 800629a:	b083      	sub	sp, #12
 800629c:	af00      	add	r7, sp, #0
 800629e:	6078      	str	r0, [r7, #4]
      { return static_cast<void*>(&_M_storage); }
 80062a0:	687b      	ldr	r3, [r7, #4]
 80062a2:	4618      	mov	r0, r3
 80062a4:	370c      	adds	r7, #12
 80062a6:	46bd      	mov	sp, r7
 80062a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80062ac:	4770      	bx	lr

080062ae <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_ENUlOT_T0_E_clIRSB_St17integral_constantIjLj4EEEENS0_20__variant_idx_cookieESF_SG_>:
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 80062ae:	b5b0      	push	{r4, r5, r7, lr}
 80062b0:	b084      	sub	sp, #16
 80062b2:	af00      	add	r7, sp, #0
 80062b4:	60f8      	str	r0, [r7, #12]
 80062b6:	60b9      	str	r1, [r7, #8]
 80062b8:	713a      	strb	r2, [r7, #4]
 80062ba:	68fb      	ldr	r3, [r7, #12]
 80062bc:	681b      	ldr	r3, [r3, #0]
		if (this->_M_index == __rhs_index)
 80062be:	7e1b      	ldrb	r3, [r3, #24]
 80062c0:	461c      	mov	r4, r3
 80062c2:	1d3b      	adds	r3, r7, #4
 80062c4:	4618      	mov	r0, r3
 80062c6:	f000 f82a 	bl	800631e <_ZNKSt17integral_constantIjLj4EEcvjEv>
 80062ca:	4603      	mov	r3, r0
 80062cc:	429c      	cmp	r4, r3
 80062ce:	bf0c      	ite	eq
 80062d0:	2301      	moveq	r3, #1
 80062d2:	2300      	movne	r3, #0
 80062d4:	b2db      	uxtb	r3, r3
 80062d6:	2b00      	cmp	r3, #0
 80062d8:	d00e      	beq.n	80062f8 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_ENUlOT_T0_E_clIRSB_St17integral_constantIjLj4EEEENS0_20__variant_idx_cookieESF_SG_+0x4a>
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 80062da:	68b8      	ldr	r0, [r7, #8]
 80062dc:	f000 ff9b 	bl	8007216 <_ZSt4moveIRSt6vectorI6SymbolSaIS1_EEEONSt16remove_referenceIT_E4typeEOS6_>
 80062e0:	4604      	mov	r4, r0
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 80062e2:	68fb      	ldr	r3, [r7, #12]
 80062e4:	681b      	ldr	r3, [r3, #0]
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 80062e6:	4618      	mov	r0, r3
 80062e8:	f000 f824 	bl	8006334 <_ZNSt8__detail9__variant5__getILj4ERNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcOT0_>
 80062ec:	4603      	mov	r3, r0
 80062ee:	4621      	mov	r1, r4
 80062f0:	4618      	mov	r0, r3
 80062f2:	f000 ff9b 	bl	800722c <_ZNSt6vectorI6SymbolSaIS0_EEaSEOS2_>
	    return {};
 80062f6:	e00d      	b.n	8006314 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_ENUlOT_T0_E_clIRSB_St17integral_constantIjLj4EEEENS0_20__variant_idx_cookieESF_SG_+0x66>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 80062f8:	68fb      	ldr	r3, [r7, #12]
 80062fa:	681b      	ldr	r3, [r3, #0]
		  __variant_cast<_Types...>(*this)
 80062fc:	4618      	mov	r0, r3
 80062fe:	f7fb fe44 	bl	8001f8a <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEERNSt8__detail9__variant17_Move_assign_baseILb0EJifbS5_S9_EEEEDcOT0_>
 8006302:	4604      	mov	r4, r0
		    .template emplace<__rhs_index>(std::move(__rhs_mem));
 8006304:	68b8      	ldr	r0, [r7, #8]
 8006306:	f000 ff86 	bl	8007216 <_ZSt4moveIRSt6vectorI6SymbolSaIS1_EEEONSt16remove_referenceIT_E4typeEOS6_>
 800630a:	4603      	mov	r3, r0
		  __variant_cast<_Types...>(*this)
 800630c:	4619      	mov	r1, r3
 800630e:	4620      	mov	r0, r4
 8006310:	f000 ffa1 	bl	8007256 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE7emplaceILj4EJS9_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	    return {};
 8006314:	462b      	mov	r3, r5
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8006316:	4618      	mov	r0, r3
 8006318:	3710      	adds	r7, #16
 800631a:	46bd      	mov	sp, r7
 800631c:	bdb0      	pop	{r4, r5, r7, pc}

0800631e <_ZNKSt17integral_constantIjLj4EEcvjEv>:
 800631e:	b480      	push	{r7}
 8006320:	b083      	sub	sp, #12
 8006322:	af00      	add	r7, sp, #0
 8006324:	6078      	str	r0, [r7, #4]
 8006326:	2304      	movs	r3, #4
 8006328:	4618      	mov	r0, r3
 800632a:	370c      	adds	r7, #12
 800632c:	46bd      	mov	sp, r7
 800632e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006332:	4770      	bx	lr

08006334 <_ZNSt8__detail9__variant5__getILj4ERNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8006334:	b590      	push	{r4, r7, lr}
 8006336:	b083      	sub	sp, #12
 8006338:	af00      	add	r7, sp, #0
 800633a:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800633c:	6878      	ldr	r0, [r7, #4]
 800633e:	f000 fecf 	bl	80070e0 <_ZSt7forwardIRNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8006342:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8006344:	4619      	mov	r1, r3
 8006346:	4620      	mov	r0, r4
 8006348:	f7fc f8c5 	bl	80024d6 <_ZNSt8__detail9__variant5__getILj4ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800634c:	4603      	mov	r3, r0
    }
 800634e:	4618      	mov	r0, r3
 8006350:	370c      	adds	r7, #12
 8006352:	46bd      	mov	sp, r7
 8006354:	bd90      	pop	{r4, r7, pc}

08006356 <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_ENUlOT_T0_E_clIRKiSt17integral_constantIjLj0EEEENS0_20__variant_idx_cookieESG_SH_>:
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8006356:	b5b0      	push	{r4, r5, r7, lr}
 8006358:	b084      	sub	sp, #16
 800635a:	af00      	add	r7, sp, #0
 800635c:	60f8      	str	r0, [r7, #12]
 800635e:	60b9      	str	r1, [r7, #8]
 8006360:	713a      	strb	r2, [r7, #4]
 8006362:	68fb      	ldr	r3, [r7, #12]
 8006364:	681b      	ldr	r3, [r3, #0]
		if (this->_M_index == __rhs_index)
 8006366:	7e1b      	ldrb	r3, [r3, #24]
 8006368:	461c      	mov	r4, r3
 800636a:	1d3b      	adds	r3, r7, #4
 800636c:	4618      	mov	r0, r3
 800636e:	f7ff fe73 	bl	8006058 <_ZNKSt17integral_constantIjLj0EEcvjEv>
 8006372:	4603      	mov	r3, r0
 8006374:	429c      	cmp	r4, r3
 8006376:	bf0c      	ite	eq
 8006378:	2301      	moveq	r3, #1
 800637a:	2300      	movne	r3, #0
 800637c:	b2db      	uxtb	r3, r3
 800637e:	2b00      	cmp	r3, #0
 8006380:	d009      	beq.n	8006396 <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_ENUlOT_T0_E_clIRKiSt17integral_constantIjLj0EEEENS0_20__variant_idx_cookieESG_SH_+0x40>
		  __variant::__get<__rhs_index>(*this) = __rhs_mem;
 8006382:	68bb      	ldr	r3, [r7, #8]
 8006384:	681c      	ldr	r4, [r3, #0]
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8006386:	68fb      	ldr	r3, [r7, #12]
 8006388:	681b      	ldr	r3, [r3, #0]
		  __variant::__get<__rhs_index>(*this) = __rhs_mem;
 800638a:	4618      	mov	r0, r3
 800638c:	f000 f816 	bl	80063bc <_ZNSt8__detail9__variant5__getILj0ERNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcOT0_>
 8006390:	4603      	mov	r3, r0
 8006392:	601c      	str	r4, [r3, #0]
	    return {};
 8006394:	e00d      	b.n	80063b2 <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_ENUlOT_T0_E_clIRKiSt17integral_constantIjLj0EEEENS0_20__variant_idx_cookieESG_SH_+0x5c>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8006396:	68fb      	ldr	r3, [r7, #12]
 8006398:	681b      	ldr	r3, [r3, #0]
		      this->_M_destructive_copy(__rhs_index, __rhs_mem);
 800639a:	461c      	mov	r4, r3
 800639c:	1d3b      	adds	r3, r7, #4
 800639e:	4618      	mov	r0, r3
 80063a0:	f7ff fe5a 	bl	8006058 <_ZNKSt17integral_constantIjLj0EEcvjEv>
 80063a4:	4603      	mov	r3, r0
 80063a6:	b29b      	uxth	r3, r3
 80063a8:	68ba      	ldr	r2, [r7, #8]
 80063aa:	4619      	mov	r1, r3
 80063ac:	4620      	mov	r0, r4
 80063ae:	f000 ff76 	bl	800729e <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE19_M_destructive_copyIiEEvtRKT_>
	    return {};
 80063b2:	462b      	mov	r3, r5
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 80063b4:	4618      	mov	r0, r3
 80063b6:	3710      	adds	r7, #16
 80063b8:	46bd      	mov	sp, r7
 80063ba:	bdb0      	pop	{r4, r5, r7, pc}

080063bc <_ZNSt8__detail9__variant5__getILj0ERNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 80063bc:	b590      	push	{r4, r7, lr}
 80063be:	b083      	sub	sp, #12
 80063c0:	af00      	add	r7, sp, #0
 80063c2:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 80063c4:	6878      	ldr	r0, [r7, #4]
 80063c6:	f000 ff5f 	bl	8007288 <_ZSt7forwardIRNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 80063ca:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 80063cc:	4619      	mov	r1, r3
 80063ce:	4620      	mov	r0, r4
 80063d0:	f7fb fde6 	bl	8001fa0 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 80063d4:	4603      	mov	r3, r0
    }
 80063d6:	4618      	mov	r0, r3
 80063d8:	370c      	adds	r7, #12
 80063da:	46bd      	mov	sp, r7
 80063dc:	bd90      	pop	{r4, r7, pc}

080063de <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_ENUlOT_T0_E_clIRKfSt17integral_constantIjLj1EEEENS0_20__variant_idx_cookieESG_SH_>:
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 80063de:	b5b0      	push	{r4, r5, r7, lr}
 80063e0:	b084      	sub	sp, #16
 80063e2:	af00      	add	r7, sp, #0
 80063e4:	60f8      	str	r0, [r7, #12]
 80063e6:	60b9      	str	r1, [r7, #8]
 80063e8:	713a      	strb	r2, [r7, #4]
 80063ea:	68fb      	ldr	r3, [r7, #12]
 80063ec:	681b      	ldr	r3, [r3, #0]
		if (this->_M_index == __rhs_index)
 80063ee:	7e1b      	ldrb	r3, [r3, #24]
 80063f0:	461c      	mov	r4, r3
 80063f2:	1d3b      	adds	r3, r7, #4
 80063f4:	4618      	mov	r0, r3
 80063f6:	f7ff fe81 	bl	80060fc <_ZNKSt17integral_constantIjLj1EEcvjEv>
 80063fa:	4603      	mov	r3, r0
 80063fc:	429c      	cmp	r4, r3
 80063fe:	bf0c      	ite	eq
 8006400:	2301      	moveq	r3, #1
 8006402:	2300      	movne	r3, #0
 8006404:	b2db      	uxtb	r3, r3
 8006406:	2b00      	cmp	r3, #0
 8006408:	d009      	beq.n	800641e <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_ENUlOT_T0_E_clIRKfSt17integral_constantIjLj1EEEENS0_20__variant_idx_cookieESG_SH_+0x40>
		  __variant::__get<__rhs_index>(*this) = __rhs_mem;
 800640a:	68bb      	ldr	r3, [r7, #8]
 800640c:	681c      	ldr	r4, [r3, #0]
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800640e:	68fb      	ldr	r3, [r7, #12]
 8006410:	681b      	ldr	r3, [r3, #0]
		  __variant::__get<__rhs_index>(*this) = __rhs_mem;
 8006412:	4618      	mov	r0, r3
 8006414:	f000 f816 	bl	8006444 <_ZNSt8__detail9__variant5__getILj1ERNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcOT0_>
 8006418:	4603      	mov	r3, r0
 800641a:	601c      	str	r4, [r3, #0]
	    return {};
 800641c:	e00d      	b.n	800643a <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_ENUlOT_T0_E_clIRKfSt17integral_constantIjLj1EEEENS0_20__variant_idx_cookieESG_SH_+0x5c>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800641e:	68fb      	ldr	r3, [r7, #12]
 8006420:	681b      	ldr	r3, [r3, #0]
		      this->_M_destructive_copy(__rhs_index, __rhs_mem);
 8006422:	461c      	mov	r4, r3
 8006424:	1d3b      	adds	r3, r7, #4
 8006426:	4618      	mov	r0, r3
 8006428:	f7ff fe68 	bl	80060fc <_ZNKSt17integral_constantIjLj1EEcvjEv>
 800642c:	4603      	mov	r3, r0
 800642e:	b29b      	uxth	r3, r3
 8006430:	68ba      	ldr	r2, [r7, #8]
 8006432:	4619      	mov	r1, r3
 8006434:	4620      	mov	r0, r4
 8006436:	f000 ff49 	bl	80072cc <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE19_M_destructive_copyIfEEvtRKT_>
	    return {};
 800643a:	462b      	mov	r3, r5
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800643c:	4618      	mov	r0, r3
 800643e:	3710      	adds	r7, #16
 8006440:	46bd      	mov	sp, r7
 8006442:	bdb0      	pop	{r4, r5, r7, pc}

08006444 <_ZNSt8__detail9__variant5__getILj1ERNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8006444:	b590      	push	{r4, r7, lr}
 8006446:	b083      	sub	sp, #12
 8006448:	af00      	add	r7, sp, #0
 800644a:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800644c:	6878      	ldr	r0, [r7, #4]
 800644e:	f000 ff1b 	bl	8007288 <_ZSt7forwardIRNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8006452:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8006454:	4619      	mov	r1, r3
 8006456:	4620      	mov	r0, r4
 8006458:	f7fb fe2d 	bl	80020b6 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800645c:	4603      	mov	r3, r0
    }
 800645e:	4618      	mov	r0, r3
 8006460:	370c      	adds	r7, #12
 8006462:	46bd      	mov	sp, r7
 8006464:	bd90      	pop	{r4, r7, pc}

08006466 <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_ENUlOT_T0_E_clIRKbSt17integral_constantIjLj2EEEENS0_20__variant_idx_cookieESG_SH_>:
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8006466:	b5b0      	push	{r4, r5, r7, lr}
 8006468:	b084      	sub	sp, #16
 800646a:	af00      	add	r7, sp, #0
 800646c:	60f8      	str	r0, [r7, #12]
 800646e:	60b9      	str	r1, [r7, #8]
 8006470:	713a      	strb	r2, [r7, #4]
 8006472:	68fb      	ldr	r3, [r7, #12]
 8006474:	681b      	ldr	r3, [r3, #0]
		if (this->_M_index == __rhs_index)
 8006476:	7e1b      	ldrb	r3, [r3, #24]
 8006478:	461c      	mov	r4, r3
 800647a:	1d3b      	adds	r3, r7, #4
 800647c:	4618      	mov	r0, r3
 800647e:	f7ff fe90 	bl	80061a2 <_ZNKSt17integral_constantIjLj2EEcvjEv>
 8006482:	4603      	mov	r3, r0
 8006484:	429c      	cmp	r4, r3
 8006486:	bf0c      	ite	eq
 8006488:	2301      	moveq	r3, #1
 800648a:	2300      	movne	r3, #0
 800648c:	b2db      	uxtb	r3, r3
 800648e:	2b00      	cmp	r3, #0
 8006490:	d00a      	beq.n	80064a8 <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_ENUlOT_T0_E_clIRKbSt17integral_constantIjLj2EEEENS0_20__variant_idx_cookieESG_SH_+0x42>
		  __variant::__get<__rhs_index>(*this) = __rhs_mem;
 8006492:	68bb      	ldr	r3, [r7, #8]
 8006494:	781c      	ldrb	r4, [r3, #0]
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8006496:	68fb      	ldr	r3, [r7, #12]
 8006498:	681b      	ldr	r3, [r3, #0]
		  __variant::__get<__rhs_index>(*this) = __rhs_mem;
 800649a:	4618      	mov	r0, r3
 800649c:	f000 f817 	bl	80064ce <_ZNSt8__detail9__variant5__getILj2ERNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcOT0_>
 80064a0:	4603      	mov	r3, r0
 80064a2:	4622      	mov	r2, r4
 80064a4:	701a      	strb	r2, [r3, #0]
	    return {};
 80064a6:	e00d      	b.n	80064c4 <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_ENUlOT_T0_E_clIRKbSt17integral_constantIjLj2EEEENS0_20__variant_idx_cookieESG_SH_+0x5e>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 80064a8:	68fb      	ldr	r3, [r7, #12]
 80064aa:	681b      	ldr	r3, [r3, #0]
		      this->_M_destructive_copy(__rhs_index, __rhs_mem);
 80064ac:	461c      	mov	r4, r3
 80064ae:	1d3b      	adds	r3, r7, #4
 80064b0:	4618      	mov	r0, r3
 80064b2:	f7ff fe76 	bl	80061a2 <_ZNKSt17integral_constantIjLj2EEcvjEv>
 80064b6:	4603      	mov	r3, r0
 80064b8:	b29b      	uxth	r3, r3
 80064ba:	68ba      	ldr	r2, [r7, #8]
 80064bc:	4619      	mov	r1, r3
 80064be:	4620      	mov	r0, r4
 80064c0:	f000 ff1b 	bl	80072fa <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE19_M_destructive_copyIbEEvtRKT_>
	    return {};
 80064c4:	462b      	mov	r3, r5
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 80064c6:	4618      	mov	r0, r3
 80064c8:	3710      	adds	r7, #16
 80064ca:	46bd      	mov	sp, r7
 80064cc:	bdb0      	pop	{r4, r5, r7, pc}

080064ce <_ZNSt8__detail9__variant5__getILj2ERNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 80064ce:	b590      	push	{r4, r7, lr}
 80064d0:	b083      	sub	sp, #12
 80064d2:	af00      	add	r7, sp, #0
 80064d4:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 80064d6:	6878      	ldr	r0, [r7, #4]
 80064d8:	f000 fed6 	bl	8007288 <_ZSt7forwardIRNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 80064dc:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 80064de:	4619      	mov	r1, r3
 80064e0:	4620      	mov	r0, r4
 80064e2:	f7fb fe86 	bl	80021f2 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80064e6:	4603      	mov	r3, r0
    }
 80064e8:	4618      	mov	r0, r3
 80064ea:	370c      	adds	r7, #12
 80064ec:	46bd      	mov	sp, r7
 80064ee:	bd90      	pop	{r4, r7, pc}

080064f0 <_ZNK9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7_M_addrEv>:
      _M_addr() const noexcept
 80064f0:	b480      	push	{r7}
 80064f2:	b083      	sub	sp, #12
 80064f4:	af00      	add	r7, sp, #0
 80064f6:	6078      	str	r0, [r7, #4]
      { return static_cast<const void*>(&_M_storage); }
 80064f8:	687b      	ldr	r3, [r7, #4]
 80064fa:	4618      	mov	r0, r3
 80064fc:	370c      	adds	r7, #12
 80064fe:	46bd      	mov	sp, r7
 8006500:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006504:	4770      	bx	lr

08006506 <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_ENUlOT_T0_E_clIRKS7_St17integral_constantIjLj3EEEENS0_20__variant_idx_cookieESG_SH_>:
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8006506:	b5b0      	push	{r4, r5, r7, lr}
 8006508:	b08c      	sub	sp, #48	; 0x30
 800650a:	af00      	add	r7, sp, #0
 800650c:	60f8      	str	r0, [r7, #12]
 800650e:	60b9      	str	r1, [r7, #8]
 8006510:	713a      	strb	r2, [r7, #4]
 8006512:	68fb      	ldr	r3, [r7, #12]
 8006514:	681b      	ldr	r3, [r3, #0]
		if (this->_M_index == __rhs_index)
 8006516:	7e1b      	ldrb	r3, [r3, #24]
 8006518:	461c      	mov	r4, r3
 800651a:	1d3b      	adds	r3, r7, #4
 800651c:	4618      	mov	r0, r3
 800651e:	f7ff fe9f 	bl	8006260 <_ZNKSt17integral_constantIjLj3EEcvjEv>
 8006522:	4603      	mov	r3, r0
 8006524:	429c      	cmp	r4, r3
 8006526:	bf0c      	ite	eq
 8006528:	2301      	moveq	r3, #1
 800652a:	2300      	movne	r3, #0
 800652c:	b2db      	uxtb	r3, r3
 800652e:	2b00      	cmp	r3, #0
 8006530:	d00a      	beq.n	8006548 <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_ENUlOT_T0_E_clIRKS7_St17integral_constantIjLj3EEEENS0_20__variant_idx_cookieESG_SH_+0x42>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8006532:	68fb      	ldr	r3, [r7, #12]
 8006534:	681b      	ldr	r3, [r3, #0]
		  __variant::__get<__rhs_index>(*this) = __rhs_mem;
 8006536:	4618      	mov	r0, r3
 8006538:	f000 f822 	bl	8006580 <_ZNSt8__detail9__variant5__getILj3ERNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcOT0_>
 800653c:	4603      	mov	r3, r0
 800653e:	68b9      	ldr	r1, [r7, #8]
 8006540:	4618      	mov	r0, r3
 8006542:	f01d fa80 	bl	8023a46 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_>
	    return {};
 8006546:	e016      	b.n	8006576 <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_ENUlOT_T0_E_clIRKS7_St17integral_constantIjLj3EEEENS0_20__variant_idx_cookieESG_SH_+0x70>
			= variant<_Types...>(__rhs_mem);
 8006548:	f107 0314 	add.w	r3, r7, #20
 800654c:	68b9      	ldr	r1, [r7, #8]
 800654e:	4618      	mov	r0, r3
 8006550:	f000 ff03 	bl	800735a <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1IRKS5_vvS5_vEEOT_>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8006554:	68fb      	ldr	r3, [r7, #12]
 8006556:	681b      	ldr	r3, [r3, #0]
		      __variant_cast<_Types...>(*this)
 8006558:	4618      	mov	r0, r3
 800655a:	f000 f822 	bl	80065a2 <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEERNSt8__detail9__variant17_Copy_assign_baseILb0EJifbS5_S9_EEEEDcOT0_>
 800655e:	4602      	mov	r2, r0
			= variant<_Types...>(__rhs_mem);
 8006560:	f107 0314 	add.w	r3, r7, #20
 8006564:	4619      	mov	r1, r3
 8006566:	4610      	mov	r0, r2
 8006568:	f7fa ff9c 	bl	80014a4 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSEOSA_>
 800656c:	f107 0314 	add.w	r3, r7, #20
 8006570:	4618      	mov	r0, r3
 8006572:	f7fa ff06 	bl	8001382 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEED1Ev>
	    return {};
 8006576:	462b      	mov	r3, r5
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8006578:	4618      	mov	r0, r3
 800657a:	3730      	adds	r7, #48	; 0x30
 800657c:	46bd      	mov	sp, r7
 800657e:	bdb0      	pop	{r4, r5, r7, pc}

08006580 <_ZNSt8__detail9__variant5__getILj3ERNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8006580:	b590      	push	{r4, r7, lr}
 8006582:	b083      	sub	sp, #12
 8006584:	af00      	add	r7, sp, #0
 8006586:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8006588:	6878      	ldr	r0, [r7, #4]
 800658a:	f000 fe7d 	bl	8007288 <_ZSt7forwardIRNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800658e:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8006590:	4619      	mov	r1, r3
 8006592:	4620      	mov	r0, r4
 8006594:	f7fb fedd 	bl	8002352 <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8006598:	4603      	mov	r3, r0
    }
 800659a:	4618      	mov	r0, r3
 800659c:	370c      	adds	r7, #12
 800659e:	46bd      	mov	sp, r7
 80065a0:	bd90      	pop	{r4, r7, pc}

080065a2 <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEERNSt8__detail9__variant17_Copy_assign_baseILb0EJifbS5_S9_EEEEDcOT0_>:
    __variant_cast(_Tp&& __rhs)
 80065a2:	b480      	push	{r7}
 80065a4:	b083      	sub	sp, #12
 80065a6:	af00      	add	r7, sp, #0
 80065a8:	6078      	str	r0, [r7, #4]
	    return static_cast<variant<_Types...>&>(__rhs);
 80065aa:	687b      	ldr	r3, [r7, #4]
    }
 80065ac:	4618      	mov	r0, r3
 80065ae:	370c      	adds	r7, #12
 80065b0:	46bd      	mov	sp, r7
 80065b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80065b6:	4770      	bx	lr

080065b8 <_ZNK9__gnu_cxx16__aligned_membufISt6vectorI6SymbolSaIS2_EEE7_M_addrEv>:
      _M_addr() const noexcept
 80065b8:	b480      	push	{r7}
 80065ba:	b083      	sub	sp, #12
 80065bc:	af00      	add	r7, sp, #0
 80065be:	6078      	str	r0, [r7, #4]
      { return static_cast<const void*>(&_M_storage); }
 80065c0:	687b      	ldr	r3, [r7, #4]
 80065c2:	4618      	mov	r0, r3
 80065c4:	370c      	adds	r7, #12
 80065c6:	46bd      	mov	sp, r7
 80065c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80065cc:	4770      	bx	lr

080065ce <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_ENUlOT_T0_E_clIRKSB_St17integral_constantIjLj4EEEENS0_20__variant_idx_cookieESG_SH_>:
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 80065ce:	b5b0      	push	{r4, r5, r7, lr}
 80065d0:	b08c      	sub	sp, #48	; 0x30
 80065d2:	af00      	add	r7, sp, #0
 80065d4:	60f8      	str	r0, [r7, #12]
 80065d6:	60b9      	str	r1, [r7, #8]
 80065d8:	713a      	strb	r2, [r7, #4]
 80065da:	68fb      	ldr	r3, [r7, #12]
 80065dc:	681b      	ldr	r3, [r3, #0]
		if (this->_M_index == __rhs_index)
 80065de:	7e1b      	ldrb	r3, [r3, #24]
 80065e0:	461c      	mov	r4, r3
 80065e2:	1d3b      	adds	r3, r7, #4
 80065e4:	4618      	mov	r0, r3
 80065e6:	f7ff fe9a 	bl	800631e <_ZNKSt17integral_constantIjLj4EEcvjEv>
 80065ea:	4603      	mov	r3, r0
 80065ec:	429c      	cmp	r4, r3
 80065ee:	bf0c      	ite	eq
 80065f0:	2301      	moveq	r3, #1
 80065f2:	2300      	movne	r3, #0
 80065f4:	b2db      	uxtb	r3, r3
 80065f6:	2b00      	cmp	r3, #0
 80065f8:	d00a      	beq.n	8006610 <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_ENUlOT_T0_E_clIRKSB_St17integral_constantIjLj4EEEENS0_20__variant_idx_cookieESG_SH_+0x42>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 80065fa:	68fb      	ldr	r3, [r7, #12]
 80065fc:	681b      	ldr	r3, [r3, #0]
		  __variant::__get<__rhs_index>(*this) = __rhs_mem;
 80065fe:	4618      	mov	r0, r3
 8006600:	f000 f822 	bl	8006648 <_ZNSt8__detail9__variant5__getILj4ERNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcOT0_>
 8006604:	4603      	mov	r3, r0
 8006606:	68b9      	ldr	r1, [r7, #8]
 8006608:	4618      	mov	r0, r3
 800660a:	f000 fec1 	bl	8007390 <_ZNSt6vectorI6SymbolSaIS0_EEaSERKS2_>
	    return {};
 800660e:	e016      	b.n	800663e <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_ENUlOT_T0_E_clIRKSB_St17integral_constantIjLj4EEEENS0_20__variant_idx_cookieESG_SH_+0x70>
			= variant<_Types...>(__rhs_mem);
 8006610:	f107 0314 	add.w	r3, r7, #20
 8006614:	68b9      	ldr	r1, [r7, #8]
 8006616:	4618      	mov	r0, r3
 8006618:	f000 ffc8 	bl	80075ac <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1IRKS9_vvS9_vEEOT_>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800661c:	68fb      	ldr	r3, [r7, #12]
 800661e:	681b      	ldr	r3, [r3, #0]
		      __variant_cast<_Types...>(*this)
 8006620:	4618      	mov	r0, r3
 8006622:	f7ff ffbe 	bl	80065a2 <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEERNSt8__detail9__variant17_Copy_assign_baseILb0EJifbS5_S9_EEEEDcOT0_>
 8006626:	4602      	mov	r2, r0
			= variant<_Types...>(__rhs_mem);
 8006628:	f107 0314 	add.w	r3, r7, #20
 800662c:	4619      	mov	r1, r3
 800662e:	4610      	mov	r0, r2
 8006630:	f7fa ff38 	bl	80014a4 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSEOSA_>
 8006634:	f107 0314 	add.w	r3, r7, #20
 8006638:	4618      	mov	r0, r3
 800663a:	f7fa fea2 	bl	8001382 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEED1Ev>
	    return {};
 800663e:	462b      	mov	r3, r5
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8006640:	4618      	mov	r0, r3
 8006642:	3730      	adds	r7, #48	; 0x30
 8006644:	46bd      	mov	sp, r7
 8006646:	bdb0      	pop	{r4, r5, r7, pc}

08006648 <_ZNSt8__detail9__variant5__getILj4ERNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8006648:	b590      	push	{r4, r7, lr}
 800664a:	b083      	sub	sp, #12
 800664c:	af00      	add	r7, sp, #0
 800664e:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8006650:	6878      	ldr	r0, [r7, #4]
 8006652:	f000 fe19 	bl	8007288 <_ZSt7forwardIRNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8006656:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8006658:	4619      	mov	r1, r3
 800665a:	4620      	mov	r0, r4
 800665c:	f7fb ff3b 	bl	80024d6 <_ZNSt8__detail9__variant5__getILj4ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8006660:	4603      	mov	r3, r0
    }
 8006662:	4618      	mov	r0, r3
 8006664:	370c      	adds	r7, #12
 8006666:	46bd      	mov	sp, r7
 8006668:	bd90      	pop	{r4, r7, pc}

0800666a <_ZN9__gnu_cxx17__is_null_pointerIKcEEbPT_>:


  // For use in string and vstring.
  template<typename _Type>
    inline bool
    __is_null_pointer(_Type* __ptr)
 800666a:	b480      	push	{r7}
 800666c:	b083      	sub	sp, #12
 800666e:	af00      	add	r7, sp, #0
 8006670:	6078      	str	r0, [r7, #4]
    { return __ptr == 0; }
 8006672:	687b      	ldr	r3, [r7, #4]
 8006674:	2b00      	cmp	r3, #0
 8006676:	bf0c      	ite	eq
 8006678:	2301      	moveq	r3, #1
 800667a:	2300      	movne	r3, #0
 800667c:	b2db      	uxtb	r3, r3
 800667e:	4618      	mov	r0, r3
 8006680:	370c      	adds	r7, #12
 8006682:	46bd      	mov	sp, r7
 8006684:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006688:	4770      	bx	lr

0800668a <_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
   *  sugar for internal library use only.
  */
  template<typename _Iter>
    inline _GLIBCXX_CONSTEXPR
    typename iterator_traits<_Iter>::iterator_category
    __iterator_category(const _Iter&)
 800668a:	b480      	push	{r7}
 800668c:	b083      	sub	sp, #12
 800668e:	af00      	add	r7, sp, #0
 8006690:	6078      	str	r0, [r7, #4]
    { return typename iterator_traits<_Iter>::iterator_category(); }
 8006692:	4618      	mov	r0, r3
 8006694:	370c      	adds	r7, #12
 8006696:	46bd      	mov	sp, r7
 8006698:	f85d 7b04 	ldr.w	r7, [sp], #4
 800669c:	4770      	bx	lr

0800669e <_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
 800669e:	b480      	push	{r7}
 80066a0:	b085      	sub	sp, #20
 80066a2:	af00      	add	r7, sp, #0
 80066a4:	60f8      	str	r0, [r7, #12]
 80066a6:	60b9      	str	r1, [r7, #8]
 80066a8:	713a      	strb	r2, [r7, #4]
      return __last - __first;
 80066aa:	68ba      	ldr	r2, [r7, #8]
 80066ac:	68fb      	ldr	r3, [r7, #12]
 80066ae:	1ad3      	subs	r3, r2, r3
    }
 80066b0:	4618      	mov	r0, r3
 80066b2:	3714      	adds	r7, #20
 80066b4:	46bd      	mov	sp, r7
 80066b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80066ba:	4770      	bx	lr

080066bc <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEC1ERKS7_>:
      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
 80066bc:	b480      	push	{r7}
 80066be:	b083      	sub	sp, #12
 80066c0:	af00      	add	r7, sp, #0
 80066c2:	6078      	str	r0, [r7, #4]
 80066c4:	6039      	str	r1, [r7, #0]
 80066c6:	687b      	ldr	r3, [r7, #4]
 80066c8:	4618      	mov	r0, r3
 80066ca:	370c      	adds	r7, #12
 80066cc:	46bd      	mov	sp, r7
 80066ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80066d2:	4770      	bx	lr

080066d4 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS3_E>:
      _M_destroy_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 80066d4:	b590      	push	{r4, r7, lr}
 80066d6:	b083      	sub	sp, #12
 80066d8:	af00      	add	r7, sp, #0
 80066da:	6078      	str	r0, [r7, #4]
 80066dc:	6039      	str	r1, [r7, #0]
	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
 80066de:	6878      	ldr	r0, [r7, #4]
 80066e0:	f000 ff77 	bl	80075d2 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE21_M_get_Node_allocatorEv>
 80066e4:	4604      	mov	r4, r0
 80066e6:	6838      	ldr	r0, [r7, #0]
 80066e8:	f000 ff7e 	bl	80075e8 <_ZNSt13_Rb_tree_nodeISt4pairIKc10token_typeEE9_M_valptrEv>
 80066ec:	4603      	mov	r3, r0
 80066ee:	4619      	mov	r1, r3
 80066f0:	4620      	mov	r0, r4
 80066f2:	f000 ff87 	bl	8007604 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEE7destroyIS4_EEvRS6_PT_>
      }
 80066f6:	bf00      	nop
 80066f8:	370c      	adds	r7, #12
 80066fa:	46bd      	mov	sp, r7
 80066fc:	bd90      	pop	{r4, r7, pc}

080066fe <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS3_E>:
      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 80066fe:	b580      	push	{r7, lr}
 8006700:	b082      	sub	sp, #8
 8006702:	af00      	add	r7, sp, #0
 8006704:	6078      	str	r0, [r7, #4]
 8006706:	6039      	str	r1, [r7, #0]
      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
 8006708:	6878      	ldr	r0, [r7, #4]
 800670a:	f000 ff62 	bl	80075d2 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE21_M_get_Node_allocatorEv>
 800670e:	4603      	mov	r3, r0
 8006710:	2201      	movs	r2, #1
 8006712:	6839      	ldr	r1, [r7, #0]
 8006714:	4618      	mov	r0, r3
 8006716:	f000 ff82 	bl	800761e <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEE10deallocateERS6_PS5_j>
 800671a:	bf00      	nop
 800671c:	3708      	adds	r7, #8
 800671e:	46bd      	mov	sp, r7
 8006720:	bd80      	pop	{r7, pc}

08006722 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKc10token_typeEE13_M_const_castEv>:
      _M_const_cast() const _GLIBCXX_NOEXCEPT
 8006722:	b580      	push	{r7, lr}
 8006724:	b084      	sub	sp, #16
 8006726:	af00      	add	r7, sp, #0
 8006728:	6078      	str	r0, [r7, #4]
      { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
 800672a:	687b      	ldr	r3, [r7, #4]
 800672c:	681a      	ldr	r2, [r3, #0]
 800672e:	f107 030c 	add.w	r3, r7, #12
 8006732:	4611      	mov	r1, r2
 8006734:	4618      	mov	r0, r3
 8006736:	f7fe fdd3 	bl	80052e0 <_ZNSt17_Rb_tree_iteratorISt4pairIKc10token_typeEEC1EPSt18_Rb_tree_node_base>
 800673a:	68fb      	ldr	r3, [r7, #12]
 800673c:	4618      	mov	r0, r3
 800673e:	3710      	adds	r7, #16
 8006740:	46bd      	mov	sp, r7
 8006742:	bd80      	pop	{r7, pc}

08006744 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_M_endEv>:
      _M_end() _GLIBCXX_NOEXCEPT
 8006744:	b480      	push	{r7}
 8006746:	b083      	sub	sp, #12
 8006748:	af00      	add	r7, sp, #0
 800674a:	6078      	str	r0, [r7, #4]
      { return &this->_M_impl._M_header; }
 800674c:	687b      	ldr	r3, [r7, #4]
 800674e:	3304      	adds	r3, #4
 8006750:	4618      	mov	r0, r3
 8006752:	370c      	adds	r7, #12
 8006754:	46bd      	mov	sp, r7
 8006756:	f85d 7b04 	ldr.w	r7, [sp], #4
 800675a:	4770      	bx	lr

0800675c <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 800675c:	b480      	push	{r7}
 800675e:	b083      	sub	sp, #12
 8006760:	af00      	add	r7, sp, #0
 8006762:	6078      	str	r0, [r7, #4]
      { return _M_impl._M_node_count; }
 8006764:	687b      	ldr	r3, [r7, #4]
 8006766:	695b      	ldr	r3, [r3, #20]
 8006768:	4618      	mov	r0, r3
 800676a:	370c      	adds	r7, #12
 800676c:	46bd      	mov	sp, r7
 800676e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006772:	4770      	bx	lr

08006774 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_rightmostEv>:
      _M_rightmost() _GLIBCXX_NOEXCEPT
 8006774:	b480      	push	{r7}
 8006776:	b083      	sub	sp, #12
 8006778:	af00      	add	r7, sp, #0
 800677a:	6078      	str	r0, [r7, #4]
      { return this->_M_impl._M_header._M_right; }
 800677c:	687b      	ldr	r3, [r7, #4]
 800677e:	3310      	adds	r3, #16
 8006780:	4618      	mov	r0, r3
 8006782:	370c      	adds	r7, #12
 8006784:	46bd      	mov	sp, r7
 8006786:	f85d 7b04 	ldr.w	r7, [sp], #4
 800678a:	4770      	bx	lr

0800678c <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>:
      _S_key(_Const_Base_ptr __x)
 800678c:	b580      	push	{r7, lr}
 800678e:	b082      	sub	sp, #8
 8006790:	af00      	add	r7, sp, #0
 8006792:	6078      	str	r0, [r7, #4]
      { return _S_key(static_cast<_Const_Link_type>(__x)); }
 8006794:	6878      	ldr	r0, [r7, #4]
 8006796:	f000 ff51 	bl	800763c <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt13_Rb_tree_nodeIS3_E>
 800679a:	4603      	mov	r3, r0
 800679c:	4618      	mov	r0, r3
 800679e:	3708      	adds	r7, #8
 80067a0:	46bd      	mov	sp, r7
 80067a2:	bd80      	pop	{r7, pc}

080067a4 <_ZNKSt4lessIcEclERKcS2_>:
      operator()(const _Tp& __x, const _Tp& __y) const
 80067a4:	b480      	push	{r7}
 80067a6:	b085      	sub	sp, #20
 80067a8:	af00      	add	r7, sp, #0
 80067aa:	60f8      	str	r0, [r7, #12]
 80067ac:	60b9      	str	r1, [r7, #8]
 80067ae:	607a      	str	r2, [r7, #4]
      { return __x < __y; }
 80067b0:	68bb      	ldr	r3, [r7, #8]
 80067b2:	781a      	ldrb	r2, [r3, #0]
 80067b4:	687b      	ldr	r3, [r7, #4]
 80067b6:	781b      	ldrb	r3, [r3, #0]
 80067b8:	429a      	cmp	r2, r3
 80067ba:	bf34      	ite	cc
 80067bc:	2301      	movcc	r3, #1
 80067be:	2300      	movcs	r3, #0
 80067c0:	b2db      	uxtb	r3, r3
 80067c2:	4618      	mov	r0, r3
 80067c4:	3714      	adds	r7, #20
 80067c6:	46bd      	mov	sp, r7
 80067c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80067cc:	4770      	bx	lr

080067ce <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>:
       constexpr pair(const _T1& __x, _U2&& __y)
 80067ce:	b580      	push	{r7, lr}
 80067d0:	b084      	sub	sp, #16
 80067d2:	af00      	add	r7, sp, #0
 80067d4:	60f8      	str	r0, [r7, #12]
 80067d6:	60b9      	str	r1, [r7, #8]
 80067d8:	607a      	str	r2, [r7, #4]
       : first(__x), second(std::forward<_U2>(__y)) { }
 80067da:	68bb      	ldr	r3, [r7, #8]
 80067dc:	681a      	ldr	r2, [r3, #0]
 80067de:	68fb      	ldr	r3, [r7, #12]
 80067e0:	601a      	str	r2, [r3, #0]
 80067e2:	6878      	ldr	r0, [r7, #4]
 80067e4:	f000 ff3d 	bl	8007662 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
 80067e8:	4603      	mov	r3, r0
 80067ea:	681a      	ldr	r2, [r3, #0]
 80067ec:	68fb      	ldr	r3, [r7, #12]
 80067ee:	605a      	str	r2, [r3, #4]
 80067f0:	68fb      	ldr	r3, [r7, #12]
 80067f2:	4618      	mov	r0, r3
 80067f4:	3710      	adds	r7, #16
 80067f6:	46bd      	mov	sp, r7
 80067f8:	bd80      	pop	{r7, pc}

080067fa <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 80067fa:	b590      	push	{r4, r7, lr}
 80067fc:	b08b      	sub	sp, #44	; 0x2c
 80067fe:	af00      	add	r7, sp, #0
 8006800:	60f8      	str	r0, [r7, #12]
 8006802:	60b9      	str	r1, [r7, #8]
 8006804:	607a      	str	r2, [r7, #4]
      _Link_type __x = _M_begin();
 8006806:	68b8      	ldr	r0, [r7, #8]
 8006808:	f7fd fd3e 	bl	8004288 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_beginEv>
 800680c:	4603      	mov	r3, r0
 800680e:	61bb      	str	r3, [r7, #24]
      _Base_ptr __y = _M_end();
 8006810:	68b8      	ldr	r0, [r7, #8]
 8006812:	f7ff ff97 	bl	8006744 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_M_endEv>
 8006816:	4603      	mov	r3, r0
 8006818:	617b      	str	r3, [r7, #20]
      bool __comp = true;
 800681a:	2301      	movs	r3, #1
 800681c:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
      while (__x != 0)
 8006820:	69bb      	ldr	r3, [r7, #24]
 8006822:	2b00      	cmp	r3, #0
 8006824:	d020      	beq.n	8006868 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0x6e>
	  __y = __x;
 8006826:	69bb      	ldr	r3, [r7, #24]
 8006828:	617b      	str	r3, [r7, #20]
	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
 800682a:	68bc      	ldr	r4, [r7, #8]
 800682c:	69bb      	ldr	r3, [r7, #24]
 800682e:	4618      	mov	r0, r3
 8006830:	f000 ff04 	bl	800763c <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt13_Rb_tree_nodeIS3_E>
 8006834:	4603      	mov	r3, r0
 8006836:	461a      	mov	r2, r3
 8006838:	6879      	ldr	r1, [r7, #4]
 800683a:	4620      	mov	r0, r4
 800683c:	f7ff ffb2 	bl	80067a4 <_ZNKSt4lessIcEclERKcS2_>
 8006840:	4603      	mov	r3, r0
 8006842:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
	  __x = __comp ? _S_left(__x) : _S_right(__x);
 8006846:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 800684a:	2b00      	cmp	r3, #0
 800684c:	d005      	beq.n	800685a <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0x60>
 800684e:	69bb      	ldr	r3, [r7, #24]
 8006850:	4618      	mov	r0, r3
 8006852:	f7fe fd28 	bl	80052a6 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE7_S_leftEPSt18_Rb_tree_node_base>
 8006856:	4603      	mov	r3, r0
 8006858:	e004      	b.n	8006864 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0x6a>
 800685a:	69bb      	ldr	r3, [r7, #24]
 800685c:	4618      	mov	r0, r3
 800685e:	f7fe fd16 	bl	800528e <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base>
 8006862:	4603      	mov	r3, r0
 8006864:	61bb      	str	r3, [r7, #24]
      while (__x != 0)
 8006866:	e7db      	b.n	8006820 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0x26>
      iterator __j = iterator(__y);
 8006868:	697a      	ldr	r2, [r7, #20]
 800686a:	f107 0310 	add.w	r3, r7, #16
 800686e:	4611      	mov	r1, r2
 8006870:	4618      	mov	r0, r3
 8006872:	f7fe fd35 	bl	80052e0 <_ZNSt17_Rb_tree_iteratorISt4pairIKc10token_typeEEC1EPSt18_Rb_tree_node_base>
      if (__comp)
 8006876:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 800687a:	2b00      	cmp	r3, #0
 800687c:	d01d      	beq.n	80068ba <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0xc0>
	  if (__j == begin())
 800687e:	68b8      	ldr	r0, [r7, #8]
 8006880:	f000 fefa 	bl	8007678 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE5beginEv>
 8006884:	4603      	mov	r3, r0
 8006886:	61fb      	str	r3, [r7, #28]
 8006888:	f107 021c 	add.w	r2, r7, #28
 800688c:	f107 0310 	add.w	r3, r7, #16
 8006890:	4611      	mov	r1, r2
 8006892:	4618      	mov	r0, r3
 8006894:	f000 ff01 	bl	800769a <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKc10token_typeEES6_>
 8006898:	4603      	mov	r3, r0
 800689a:	2b00      	cmp	r3, #0
 800689c:	d008      	beq.n	80068b0 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0xb6>
	    return _Res(__x, __y);
 800689e:	f107 0214 	add.w	r2, r7, #20
 80068a2:	f107 0318 	add.w	r3, r7, #24
 80068a6:	4619      	mov	r1, r3
 80068a8:	68f8      	ldr	r0, [r7, #12]
 80068aa:	f000 ff0a 	bl	80076c2 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKc10token_typeEERS1_Lb1EEEOT_OT0_>
 80068ae:	e025      	b.n	80068fc <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0x102>
	    --__j;
 80068b0:	f107 0310 	add.w	r3, r7, #16
 80068b4:	4618      	mov	r0, r3
 80068b6:	f000 f84a 	bl	800694e <_ZNSt17_Rb_tree_iteratorISt4pairIKc10token_typeEEmmEv>
      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
 80068ba:	68bc      	ldr	r4, [r7, #8]
 80068bc:	693b      	ldr	r3, [r7, #16]
 80068be:	4618      	mov	r0, r3
 80068c0:	f7ff ff64 	bl	800678c <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 80068c4:	4603      	mov	r3, r0
 80068c6:	687a      	ldr	r2, [r7, #4]
 80068c8:	4619      	mov	r1, r3
 80068ca:	4620      	mov	r0, r4
 80068cc:	f7ff ff6a 	bl	80067a4 <_ZNKSt4lessIcEclERKcS2_>
 80068d0:	4603      	mov	r3, r0
 80068d2:	2b00      	cmp	r3, #0
 80068d4:	d008      	beq.n	80068e8 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0xee>
	return _Res(__x, __y);
 80068d6:	f107 0214 	add.w	r2, r7, #20
 80068da:	f107 0318 	add.w	r3, r7, #24
 80068de:	4619      	mov	r1, r3
 80068e0:	68f8      	ldr	r0, [r7, #12]
 80068e2:	f000 feee 	bl	80076c2 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKc10token_typeEERS1_Lb1EEEOT_OT0_>
 80068e6:	e009      	b.n	80068fc <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0x102>
      return _Res(__j._M_node, 0);
 80068e8:	2300      	movs	r3, #0
 80068ea:	623b      	str	r3, [r7, #32]
 80068ec:	f107 0220 	add.w	r2, r7, #32
 80068f0:	f107 0310 	add.w	r3, r7, #16
 80068f4:	4619      	mov	r1, r3
 80068f6:	68f8      	ldr	r0, [r7, #12]
 80068f8:	f000 f84b 	bl	8006992 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_>
    }
 80068fc:	68f8      	ldr	r0, [r7, #12]
 80068fe:	372c      	adds	r7, #44	; 0x2c
 8006900:	46bd      	mov	sp, r7
 8006902:	bd90      	pop	{r4, r7, pc}

08006904 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_leftmostEv>:
      _M_leftmost() _GLIBCXX_NOEXCEPT
 8006904:	b480      	push	{r7}
 8006906:	b083      	sub	sp, #12
 8006908:	af00      	add	r7, sp, #0
 800690a:	6078      	str	r0, [r7, #4]
      { return this->_M_impl._M_header._M_left; }
 800690c:	687b      	ldr	r3, [r7, #4]
 800690e:	330c      	adds	r3, #12
 8006910:	4618      	mov	r0, r3
 8006912:	370c      	adds	r7, #12
 8006914:	46bd      	mov	sp, r7
 8006916:	f85d 7b04 	ldr.w	r7, [sp], #4
 800691a:	4770      	bx	lr

0800691c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 800691c:	b580      	push	{r7, lr}
 800691e:	b084      	sub	sp, #16
 8006920:	af00      	add	r7, sp, #0
 8006922:	60f8      	str	r0, [r7, #12]
 8006924:	60b9      	str	r1, [r7, #8]
 8006926:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 8006928:	68b8      	ldr	r0, [r7, #8]
 800692a:	f000 fe9a 	bl	8007662 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
 800692e:	4603      	mov	r3, r0
 8006930:	681a      	ldr	r2, [r3, #0]
 8006932:	68fb      	ldr	r3, [r7, #12]
 8006934:	601a      	str	r2, [r3, #0]
 8006936:	6878      	ldr	r0, [r7, #4]
 8006938:	f000 fe93 	bl	8007662 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
 800693c:	4603      	mov	r3, r0
 800693e:	681a      	ldr	r2, [r3, #0]
 8006940:	68fb      	ldr	r3, [r7, #12]
 8006942:	605a      	str	r2, [r3, #4]
 8006944:	68fb      	ldr	r3, [r7, #12]
 8006946:	4618      	mov	r0, r3
 8006948:	3710      	adds	r7, #16
 800694a:	46bd      	mov	sp, r7
 800694c:	bd80      	pop	{r7, pc}

0800694e <_ZNSt17_Rb_tree_iteratorISt4pairIKc10token_typeEEmmEv>:
      operator--() _GLIBCXX_NOEXCEPT
 800694e:	b580      	push	{r7, lr}
 8006950:	b082      	sub	sp, #8
 8006952:	af00      	add	r7, sp, #0
 8006954:	6078      	str	r0, [r7, #4]
	_M_node = _Rb_tree_decrement(_M_node);
 8006956:	687b      	ldr	r3, [r7, #4]
 8006958:	681b      	ldr	r3, [r3, #0]
 800695a:	4618      	mov	r0, r3
 800695c:	f01c fe32 	bl	80235c4 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 8006960:	4602      	mov	r2, r0
 8006962:	687b      	ldr	r3, [r7, #4]
 8006964:	601a      	str	r2, [r3, #0]
	return *this;
 8006966:	687b      	ldr	r3, [r7, #4]
      }
 8006968:	4618      	mov	r0, r3
 800696a:	3708      	adds	r7, #8
 800696c:	46bd      	mov	sp, r7
 800696e:	bd80      	pop	{r7, pc}

08006970 <_ZNSt17_Rb_tree_iteratorISt4pairIKc10token_typeEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
 8006970:	b580      	push	{r7, lr}
 8006972:	b082      	sub	sp, #8
 8006974:	af00      	add	r7, sp, #0
 8006976:	6078      	str	r0, [r7, #4]
	_M_node = _Rb_tree_increment(_M_node);
 8006978:	687b      	ldr	r3, [r7, #4]
 800697a:	681b      	ldr	r3, [r3, #0]
 800697c:	4618      	mov	r0, r3
 800697e:	f01c fe0e 	bl	802359e <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
 8006982:	4602      	mov	r2, r0
 8006984:	687b      	ldr	r3, [r7, #4]
 8006986:	601a      	str	r2, [r3, #0]
	return *this;
 8006988:	687b      	ldr	r3, [r7, #4]
      }
 800698a:	4618      	mov	r0, r3
 800698c:	3708      	adds	r7, #8
 800698e:	46bd      	mov	sp, r7
 8006990:	bd80      	pop	{r7, pc}

08006992 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_>:
       constexpr pair(_U1&& __x, const _T2& __y)
 8006992:	b580      	push	{r7, lr}
 8006994:	b084      	sub	sp, #16
 8006996:	af00      	add	r7, sp, #0
 8006998:	60f8      	str	r0, [r7, #12]
 800699a:	60b9      	str	r1, [r7, #8]
 800699c:	607a      	str	r2, [r7, #4]
       : first(std::forward<_U1>(__x)), second(__y) { }
 800699e:	68b8      	ldr	r0, [r7, #8]
 80069a0:	f000 fe5f 	bl	8007662 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
 80069a4:	4603      	mov	r3, r0
 80069a6:	681a      	ldr	r2, [r3, #0]
 80069a8:	68fb      	ldr	r3, [r7, #12]
 80069aa:	601a      	str	r2, [r3, #0]
 80069ac:	687b      	ldr	r3, [r7, #4]
 80069ae:	681a      	ldr	r2, [r3, #0]
 80069b0:	68fb      	ldr	r3, [r7, #12]
 80069b2:	605a      	str	r2, [r3, #4]
 80069b4:	68fb      	ldr	r3, [r7, #12]
 80069b6:	4618      	mov	r0, r3
 80069b8:	3710      	adds	r7, #16
 80069ba:	46bd      	mov	sp, r7
 80069bc:	bd80      	pop	{r7, pc}

080069be <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_Alloc_nodeclIRKS3_EEPSt13_Rb_tree_nodeIS3_EOT_>:
	  operator()(_Arg&& __arg) const
 80069be:	b590      	push	{r4, r7, lr}
 80069c0:	b083      	sub	sp, #12
 80069c2:	af00      	add	r7, sp, #0
 80069c4:	6078      	str	r0, [r7, #4]
 80069c6:	6039      	str	r1, [r7, #0]
	  { return _M_t._M_create_node(_GLIBCXX_FORWARD(_Arg, __arg)); }
 80069c8:	687b      	ldr	r3, [r7, #4]
 80069ca:	681c      	ldr	r4, [r3, #0]
 80069cc:	6838      	ldr	r0, [r7, #0]
 80069ce:	f7fe fdc5 	bl	800555c <_ZSt7forwardIRKSt4pairIKc10token_typeEEOT_RNSt16remove_referenceIS6_E4typeE>
 80069d2:	4603      	mov	r3, r0
 80069d4:	4619      	mov	r1, r3
 80069d6:	4620      	mov	r0, r4
 80069d8:	f000 fe8c 	bl	80076f4 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_create_nodeIJRKS3_EEEPSt13_Rb_tree_nodeIS3_EDpOT_>
 80069dc:	4603      	mov	r3, r0
 80069de:	4618      	mov	r0, r3
 80069e0:	370c      	adds	r7, #12
 80069e2:	46bd      	mov	sp, r7
 80069e4:	bd90      	pop	{r4, r7, pc}

080069e6 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEC1ERKSD_>:
 80069e6:	b480      	push	{r7}
 80069e8:	b083      	sub	sp, #12
 80069ea:	af00      	add	r7, sp, #0
 80069ec:	6078      	str	r0, [r7, #4]
 80069ee:	6039      	str	r1, [r7, #0]
 80069f0:	687b      	ldr	r3, [r7, #4]
 80069f2:	4618      	mov	r0, r3
 80069f4:	370c      	adds	r7, #12
 80069f6:	46bd      	mov	sp, r7
 80069f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80069fc:	4770      	bx	lr

080069fe <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS9_E>:
      _M_destroy_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 80069fe:	b590      	push	{r4, r7, lr}
 8006a00:	b083      	sub	sp, #12
 8006a02:	af00      	add	r7, sp, #0
 8006a04:	6078      	str	r0, [r7, #4]
 8006a06:	6039      	str	r1, [r7, #0]
	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
 8006a08:	6878      	ldr	r0, [r7, #4]
 8006a0a:	f000 fe8a 	bl	8007722 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE21_M_get_Node_allocatorEv>
 8006a0e:	4604      	mov	r4, r0
 8006a10:	6838      	ldr	r0, [r7, #0]
 8006a12:	f000 fe91 	bl	8007738 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE9_M_valptrEv>
 8006a16:	4603      	mov	r3, r0
 8006a18:	4619      	mov	r1, r3
 8006a1a:	4620      	mov	r0, r4
 8006a1c:	f000 fe9a 	bl	8007754 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEE7destroyISA_EEvRSC_PT_>
      }
 8006a20:	bf00      	nop
 8006a22:	370c      	adds	r7, #12
 8006a24:	46bd      	mov	sp, r7
 8006a26:	bd90      	pop	{r4, r7, pc}

08006a28 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS9_E>:
      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 8006a28:	b580      	push	{r7, lr}
 8006a2a:	b082      	sub	sp, #8
 8006a2c:	af00      	add	r7, sp, #0
 8006a2e:	6078      	str	r0, [r7, #4]
 8006a30:	6039      	str	r1, [r7, #0]
      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
 8006a32:	6878      	ldr	r0, [r7, #4]
 8006a34:	f000 fe75 	bl	8007722 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE21_M_get_Node_allocatorEv>
 8006a38:	4603      	mov	r3, r0
 8006a3a:	2201      	movs	r2, #1
 8006a3c:	6839      	ldr	r1, [r7, #0]
 8006a3e:	4618      	mov	r0, r3
 8006a40:	f000 fe95 	bl	800776e <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEE10deallocateERSC_PSB_j>
 8006a44:	bf00      	nop
 8006a46:	3708      	adds	r7, #8
 8006a48:	46bd      	mov	sp, r7
 8006a4a:	bd80      	pop	{r7, pc}

08006a4c <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE13_M_const_castEv>:
      _M_const_cast() const _GLIBCXX_NOEXCEPT
 8006a4c:	b580      	push	{r7, lr}
 8006a4e:	b084      	sub	sp, #16
 8006a50:	af00      	add	r7, sp, #0
 8006a52:	6078      	str	r0, [r7, #4]
      { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
 8006a54:	687b      	ldr	r3, [r7, #4]
 8006a56:	681a      	ldr	r2, [r3, #0]
 8006a58:	f107 030c 	add.w	r3, r7, #12
 8006a5c:	4611      	mov	r1, r2
 8006a5e:	4618      	mov	r0, r3
 8006a60:	f7fe fe34 	bl	80056cc <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1EPSt18_Rb_tree_node_base>
 8006a64:	68fb      	ldr	r3, [r7, #12]
 8006a66:	4618      	mov	r0, r3
 8006a68:	3710      	adds	r7, #16
 8006a6a:	46bd      	mov	sp, r7
 8006a6c:	bd80      	pop	{r7, pc}

08006a6e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_M_endEv>:
      _M_end() _GLIBCXX_NOEXCEPT
 8006a6e:	b480      	push	{r7}
 8006a70:	b083      	sub	sp, #12
 8006a72:	af00      	add	r7, sp, #0
 8006a74:	6078      	str	r0, [r7, #4]
      { return &this->_M_impl._M_header; }
 8006a76:	687b      	ldr	r3, [r7, #4]
 8006a78:	3304      	adds	r3, #4
 8006a7a:	4618      	mov	r0, r3
 8006a7c:	370c      	adds	r7, #12
 8006a7e:	46bd      	mov	sp, r7
 8006a80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006a84:	4770      	bx	lr

08006a86 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 8006a86:	b480      	push	{r7}
 8006a88:	b083      	sub	sp, #12
 8006a8a:	af00      	add	r7, sp, #0
 8006a8c:	6078      	str	r0, [r7, #4]
      { return _M_impl._M_node_count; }
 8006a8e:	687b      	ldr	r3, [r7, #4]
 8006a90:	695b      	ldr	r3, [r3, #20]
 8006a92:	4618      	mov	r0, r3
 8006a94:	370c      	adds	r7, #12
 8006a96:	46bd      	mov	sp, r7
 8006a98:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006a9c:	4770      	bx	lr

08006a9e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_rightmostEv>:
      _M_rightmost() _GLIBCXX_NOEXCEPT
 8006a9e:	b480      	push	{r7}
 8006aa0:	b083      	sub	sp, #12
 8006aa2:	af00      	add	r7, sp, #0
 8006aa4:	6078      	str	r0, [r7, #4]
      { return this->_M_impl._M_header._M_right; }
 8006aa6:	687b      	ldr	r3, [r7, #4]
 8006aa8:	3310      	adds	r3, #16
 8006aaa:	4618      	mov	r0, r3
 8006aac:	370c      	adds	r7, #12
 8006aae:	46bd      	mov	sp, r7
 8006ab0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006ab4:	4770      	bx	lr

08006ab6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>:
      _S_key(_Const_Base_ptr __x)
 8006ab6:	b580      	push	{r7, lr}
 8006ab8:	b082      	sub	sp, #8
 8006aba:	af00      	add	r7, sp, #0
 8006abc:	6078      	str	r0, [r7, #4]
      { return _S_key(static_cast<_Const_Link_type>(__x)); }
 8006abe:	6878      	ldr	r0, [r7, #4]
 8006ac0:	f000 fe64 	bl	800778c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt13_Rb_tree_nodeIS9_E>
 8006ac4:	4603      	mov	r3, r0
 8006ac6:	4618      	mov	r0, r3
 8006ac8:	3708      	adds	r7, #8
 8006aca:	46bd      	mov	sp, r7
 8006acc:	bd80      	pop	{r7, pc}

08006ace <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>:
      operator()(const _Tp& __x, const _Tp& __y) const
 8006ace:	b580      	push	{r7, lr}
 8006ad0:	b084      	sub	sp, #16
 8006ad2:	af00      	add	r7, sp, #0
 8006ad4:	60f8      	str	r0, [r7, #12]
 8006ad6:	60b9      	str	r1, [r7, #8]
 8006ad8:	607a      	str	r2, [r7, #4]
      { return __x < __y; }
 8006ada:	6879      	ldr	r1, [r7, #4]
 8006adc:	68b8      	ldr	r0, [r7, #8]
 8006ade:	f000 fe68 	bl	80077b2 <_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>
 8006ae2:	4603      	mov	r3, r0
 8006ae4:	4618      	mov	r0, r3
 8006ae6:	3710      	adds	r7, #16
 8006ae8:	46bd      	mov	sp, r7
 8006aea:	bd80      	pop	{r7, pc}

08006aec <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8006aec:	b590      	push	{r4, r7, lr}
 8006aee:	b08b      	sub	sp, #44	; 0x2c
 8006af0:	af00      	add	r7, sp, #0
 8006af2:	60f8      	str	r0, [r7, #12]
 8006af4:	60b9      	str	r1, [r7, #8]
 8006af6:	607a      	str	r2, [r7, #4]
      _Link_type __x = _M_begin();
 8006af8:	68b8      	ldr	r0, [r7, #8]
 8006afa:	f7fd fca1 	bl	8004440 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_beginEv>
 8006afe:	4603      	mov	r3, r0
 8006b00:	61bb      	str	r3, [r7, #24]
      _Base_ptr __y = _M_end();
 8006b02:	68b8      	ldr	r0, [r7, #8]
 8006b04:	f7ff ffb3 	bl	8006a6e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_M_endEv>
 8006b08:	4603      	mov	r3, r0
 8006b0a:	617b      	str	r3, [r7, #20]
      bool __comp = true;
 8006b0c:	2301      	movs	r3, #1
 8006b0e:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
      while (__x != 0)
 8006b12:	69bb      	ldr	r3, [r7, #24]
 8006b14:	2b00      	cmp	r3, #0
 8006b16:	d020      	beq.n	8006b5a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0x6e>
	  __y = __x;
 8006b18:	69bb      	ldr	r3, [r7, #24]
 8006b1a:	617b      	str	r3, [r7, #20]
	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
 8006b1c:	68bc      	ldr	r4, [r7, #8]
 8006b1e:	69bb      	ldr	r3, [r7, #24]
 8006b20:	4618      	mov	r0, r3
 8006b22:	f000 fe33 	bl	800778c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt13_Rb_tree_nodeIS9_E>
 8006b26:	4603      	mov	r3, r0
 8006b28:	461a      	mov	r2, r3
 8006b2a:	6879      	ldr	r1, [r7, #4]
 8006b2c:	4620      	mov	r0, r4
 8006b2e:	f7ff ffce 	bl	8006ace <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8006b32:	4603      	mov	r3, r0
 8006b34:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
	  __x = __comp ? _S_left(__x) : _S_right(__x);
 8006b38:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8006b3c:	2b00      	cmp	r3, #0
 8006b3e:	d005      	beq.n	8006b4c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0x60>
 8006b40:	69bb      	ldr	r3, [r7, #24]
 8006b42:	4618      	mov	r0, r3
 8006b44:	f7fe fda5 	bl	8005692 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE7_S_leftEPSt18_Rb_tree_node_base>
 8006b48:	4603      	mov	r3, r0
 8006b4a:	e004      	b.n	8006b56 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0x6a>
 8006b4c:	69bb      	ldr	r3, [r7, #24]
 8006b4e:	4618      	mov	r0, r3
 8006b50:	f7fe fd93 	bl	800567a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_S_rightEPSt18_Rb_tree_node_base>
 8006b54:	4603      	mov	r3, r0
 8006b56:	61bb      	str	r3, [r7, #24]
      while (__x != 0)
 8006b58:	e7db      	b.n	8006b12 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0x26>
      iterator __j = iterator(__y);
 8006b5a:	697a      	ldr	r2, [r7, #20]
 8006b5c:	f107 0310 	add.w	r3, r7, #16
 8006b60:	4611      	mov	r1, r2
 8006b62:	4618      	mov	r0, r3
 8006b64:	f7fe fdb2 	bl	80056cc <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1EPSt18_Rb_tree_node_base>
      if (__comp)
 8006b68:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8006b6c:	2b00      	cmp	r3, #0
 8006b6e:	d01d      	beq.n	8006bac <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0xc0>
	  if (__j == begin())
 8006b70:	68b8      	ldr	r0, [r7, #8]
 8006b72:	f000 fe2e 	bl	80077d2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE5beginEv>
 8006b76:	4603      	mov	r3, r0
 8006b78:	61fb      	str	r3, [r7, #28]
 8006b7a:	f107 021c 	add.w	r2, r7, #28
 8006b7e:	f107 0310 	add.w	r3, r7, #16
 8006b82:	4611      	mov	r1, r2
 8006b84:	4618      	mov	r0, r3
 8006b86:	f000 fe35 	bl	80077f4 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEESC_>
 8006b8a:	4603      	mov	r3, r0
 8006b8c:	2b00      	cmp	r3, #0
 8006b8e:	d008      	beq.n	8006ba2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0xb6>
	    return _Res(__x, __y);
 8006b90:	f107 0214 	add.w	r2, r7, #20
 8006b94:	f107 0318 	add.w	r3, r7, #24
 8006b98:	4619      	mov	r1, r3
 8006b9a:	68f8      	ldr	r0, [r7, #12]
 8006b9c:	f000 fe3e 	bl	800781c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEERS1_Lb1EEEOT_OT0_>
 8006ba0:	e025      	b.n	8006bee <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0x102>
	    --__j;
 8006ba2:	f107 0310 	add.w	r3, r7, #16
 8006ba6:	4618      	mov	r0, r3
 8006ba8:	f000 f831 	bl	8006c0e <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEmmEv>
      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
 8006bac:	68bc      	ldr	r4, [r7, #8]
 8006bae:	693b      	ldr	r3, [r7, #16]
 8006bb0:	4618      	mov	r0, r3
 8006bb2:	f7ff ff80 	bl	8006ab6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8006bb6:	4603      	mov	r3, r0
 8006bb8:	687a      	ldr	r2, [r7, #4]
 8006bba:	4619      	mov	r1, r3
 8006bbc:	4620      	mov	r0, r4
 8006bbe:	f7ff ff86 	bl	8006ace <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8006bc2:	4603      	mov	r3, r0
 8006bc4:	2b00      	cmp	r3, #0
 8006bc6:	d008      	beq.n	8006bda <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0xee>
	return _Res(__x, __y);
 8006bc8:	f107 0214 	add.w	r2, r7, #20
 8006bcc:	f107 0318 	add.w	r3, r7, #24
 8006bd0:	4619      	mov	r1, r3
 8006bd2:	68f8      	ldr	r0, [r7, #12]
 8006bd4:	f000 fe22 	bl	800781c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEERS1_Lb1EEEOT_OT0_>
 8006bd8:	e009      	b.n	8006bee <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0x102>
      return _Res(__j._M_node, 0);
 8006bda:	2300      	movs	r3, #0
 8006bdc:	623b      	str	r3, [r7, #32]
 8006bde:	f107 0220 	add.w	r2, r7, #32
 8006be2:	f107 0310 	add.w	r3, r7, #16
 8006be6:	4619      	mov	r1, r3
 8006be8:	68f8      	ldr	r0, [r7, #12]
 8006bea:	f7ff fed2 	bl	8006992 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_>
    }
 8006bee:	68f8      	ldr	r0, [r7, #12]
 8006bf0:	372c      	adds	r7, #44	; 0x2c
 8006bf2:	46bd      	mov	sp, r7
 8006bf4:	bd90      	pop	{r4, r7, pc}

08006bf6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_leftmostEv>:
      _M_leftmost() _GLIBCXX_NOEXCEPT
 8006bf6:	b480      	push	{r7}
 8006bf8:	b083      	sub	sp, #12
 8006bfa:	af00      	add	r7, sp, #0
 8006bfc:	6078      	str	r0, [r7, #4]
      { return this->_M_impl._M_header._M_left; }
 8006bfe:	687b      	ldr	r3, [r7, #4]
 8006c00:	330c      	adds	r3, #12
 8006c02:	4618      	mov	r0, r3
 8006c04:	370c      	adds	r7, #12
 8006c06:	46bd      	mov	sp, r7
 8006c08:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006c0c:	4770      	bx	lr

08006c0e <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEmmEv>:
      operator--() _GLIBCXX_NOEXCEPT
 8006c0e:	b580      	push	{r7, lr}
 8006c10:	b082      	sub	sp, #8
 8006c12:	af00      	add	r7, sp, #0
 8006c14:	6078      	str	r0, [r7, #4]
	_M_node = _Rb_tree_decrement(_M_node);
 8006c16:	687b      	ldr	r3, [r7, #4]
 8006c18:	681b      	ldr	r3, [r3, #0]
 8006c1a:	4618      	mov	r0, r3
 8006c1c:	f01c fcd2 	bl	80235c4 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 8006c20:	4602      	mov	r2, r0
 8006c22:	687b      	ldr	r3, [r7, #4]
 8006c24:	601a      	str	r2, [r3, #0]
	return *this;
 8006c26:	687b      	ldr	r3, [r7, #4]
      }
 8006c28:	4618      	mov	r0, r3
 8006c2a:	3708      	adds	r7, #8
 8006c2c:	46bd      	mov	sp, r7
 8006c2e:	bd80      	pop	{r7, pc}

08006c30 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
 8006c30:	b580      	push	{r7, lr}
 8006c32:	b082      	sub	sp, #8
 8006c34:	af00      	add	r7, sp, #0
 8006c36:	6078      	str	r0, [r7, #4]
	_M_node = _Rb_tree_increment(_M_node);
 8006c38:	687b      	ldr	r3, [r7, #4]
 8006c3a:	681b      	ldr	r3, [r3, #0]
 8006c3c:	4618      	mov	r0, r3
 8006c3e:	f01c fcae 	bl	802359e <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
 8006c42:	4602      	mov	r2, r0
 8006c44:	687b      	ldr	r3, [r7, #4]
 8006c46:	601a      	str	r2, [r3, #0]
	return *this;
 8006c48:	687b      	ldr	r3, [r7, #4]
      }
 8006c4a:	4618      	mov	r0, r3
 8006c4c:	3708      	adds	r7, #8
 8006c4e:	46bd      	mov	sp, r7
 8006c50:	bd80      	pop	{r7, pc}

08006c52 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_Alloc_nodeclIRKS9_EEPSt13_Rb_tree_nodeIS9_EOT_>:
	  operator()(_Arg&& __arg) const
 8006c52:	b590      	push	{r4, r7, lr}
 8006c54:	b083      	sub	sp, #12
 8006c56:	af00      	add	r7, sp, #0
 8006c58:	6078      	str	r0, [r7, #4]
 8006c5a:	6039      	str	r1, [r7, #0]
	  { return _M_t._M_create_node(_GLIBCXX_FORWARD(_Arg, __arg)); }
 8006c5c:	687b      	ldr	r3, [r7, #4]
 8006c5e:	681c      	ldr	r4, [r3, #0]
 8006c60:	6838      	ldr	r0, [r7, #0]
 8006c62:	f7fe fe71 	bl	8005948 <_ZSt7forwardIRKSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEOT_RNSt16remove_referenceISC_E4typeE>
 8006c66:	4603      	mov	r3, r0
 8006c68:	4619      	mov	r1, r3
 8006c6a:	4620      	mov	r0, r4
 8006c6c:	f000 fdef 	bl	800784e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_create_nodeIJRKS9_EEEPSt13_Rb_tree_nodeIS9_EDpOT_>
 8006c70:	4603      	mov	r3, r0
 8006c72:	4618      	mov	r0, r3
 8006c74:	370c      	adds	r7, #12
 8006c76:	46bd      	mov	sp, r7
 8006c78:	bd90      	pop	{r4, r7, pc}

08006c7a <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEC1ERKS7_>:
 8006c7a:	b480      	push	{r7}
 8006c7c:	b083      	sub	sp, #12
 8006c7e:	af00      	add	r7, sp, #0
 8006c80:	6078      	str	r0, [r7, #4]
 8006c82:	6039      	str	r1, [r7, #0]
 8006c84:	687b      	ldr	r3, [r7, #4]
 8006c86:	4618      	mov	r0, r3
 8006c88:	370c      	adds	r7, #12
 8006c8a:	46bd      	mov	sp, r7
 8006c8c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006c90:	4770      	bx	lr

08006c92 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS3_E>:
      _M_destroy_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 8006c92:	b590      	push	{r4, r7, lr}
 8006c94:	b083      	sub	sp, #12
 8006c96:	af00      	add	r7, sp, #0
 8006c98:	6078      	str	r0, [r7, #4]
 8006c9a:	6039      	str	r1, [r7, #0]
	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
 8006c9c:	6878      	ldr	r0, [r7, #4]
 8006c9e:	f000 fded 	bl	800787c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE21_M_get_Node_allocatorEv>
 8006ca2:	4604      	mov	r4, r0
 8006ca4:	6838      	ldr	r0, [r7, #0]
 8006ca6:	f000 fdf4 	bl	8007892 <_ZNSt13_Rb_tree_nodeISt4pairIKc12double_tokenEE9_M_valptrEv>
 8006caa:	4603      	mov	r3, r0
 8006cac:	4619      	mov	r1, r3
 8006cae:	4620      	mov	r0, r4
 8006cb0:	f000 fdfd 	bl	80078ae <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEE7destroyIS4_EEvRS6_PT_>
      }
 8006cb4:	bf00      	nop
 8006cb6:	370c      	adds	r7, #12
 8006cb8:	46bd      	mov	sp, r7
 8006cba:	bd90      	pop	{r4, r7, pc}

08006cbc <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS3_E>:
      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 8006cbc:	b580      	push	{r7, lr}
 8006cbe:	b082      	sub	sp, #8
 8006cc0:	af00      	add	r7, sp, #0
 8006cc2:	6078      	str	r0, [r7, #4]
 8006cc4:	6039      	str	r1, [r7, #0]
      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
 8006cc6:	6878      	ldr	r0, [r7, #4]
 8006cc8:	f000 fdd8 	bl	800787c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE21_M_get_Node_allocatorEv>
 8006ccc:	4603      	mov	r3, r0
 8006cce:	2201      	movs	r2, #1
 8006cd0:	6839      	ldr	r1, [r7, #0]
 8006cd2:	4618      	mov	r0, r3
 8006cd4:	f000 fdf8 	bl	80078c8 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEE10deallocateERS6_PS5_j>
 8006cd8:	bf00      	nop
 8006cda:	3708      	adds	r7, #8
 8006cdc:	46bd      	mov	sp, r7
 8006cde:	bd80      	pop	{r7, pc}

08006ce0 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEE13_M_const_castEv>:
      _M_const_cast() const _GLIBCXX_NOEXCEPT
 8006ce0:	b580      	push	{r7, lr}
 8006ce2:	b084      	sub	sp, #16
 8006ce4:	af00      	add	r7, sp, #0
 8006ce6:	6078      	str	r0, [r7, #4]
      { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
 8006ce8:	687b      	ldr	r3, [r7, #4]
 8006cea:	681a      	ldr	r2, [r3, #0]
 8006cec:	f107 030c 	add.w	r3, r7, #12
 8006cf0:	4611      	mov	r1, r2
 8006cf2:	4618      	mov	r0, r3
 8006cf4:	f7fe fed4 	bl	8005aa0 <_ZNSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEEC1EPSt18_Rb_tree_node_base>
 8006cf8:	68fb      	ldr	r3, [r7, #12]
 8006cfa:	4618      	mov	r0, r3
 8006cfc:	3710      	adds	r7, #16
 8006cfe:	46bd      	mov	sp, r7
 8006d00:	bd80      	pop	{r7, pc}

08006d02 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_M_endEv>:
      _M_end() _GLIBCXX_NOEXCEPT
 8006d02:	b480      	push	{r7}
 8006d04:	b083      	sub	sp, #12
 8006d06:	af00      	add	r7, sp, #0
 8006d08:	6078      	str	r0, [r7, #4]
      { return &this->_M_impl._M_header; }
 8006d0a:	687b      	ldr	r3, [r7, #4]
 8006d0c:	3304      	adds	r3, #4
 8006d0e:	4618      	mov	r0, r3
 8006d10:	370c      	adds	r7, #12
 8006d12:	46bd      	mov	sp, r7
 8006d14:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006d18:	4770      	bx	lr

08006d1a <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 8006d1a:	b480      	push	{r7}
 8006d1c:	b083      	sub	sp, #12
 8006d1e:	af00      	add	r7, sp, #0
 8006d20:	6078      	str	r0, [r7, #4]
      { return _M_impl._M_node_count; }
 8006d22:	687b      	ldr	r3, [r7, #4]
 8006d24:	695b      	ldr	r3, [r3, #20]
 8006d26:	4618      	mov	r0, r3
 8006d28:	370c      	adds	r7, #12
 8006d2a:	46bd      	mov	sp, r7
 8006d2c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006d30:	4770      	bx	lr

08006d32 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_rightmostEv>:
      _M_rightmost() _GLIBCXX_NOEXCEPT
 8006d32:	b480      	push	{r7}
 8006d34:	b083      	sub	sp, #12
 8006d36:	af00      	add	r7, sp, #0
 8006d38:	6078      	str	r0, [r7, #4]
      { return this->_M_impl._M_header._M_right; }
 8006d3a:	687b      	ldr	r3, [r7, #4]
 8006d3c:	3310      	adds	r3, #16
 8006d3e:	4618      	mov	r0, r3
 8006d40:	370c      	adds	r7, #12
 8006d42:	46bd      	mov	sp, r7
 8006d44:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006d48:	4770      	bx	lr

08006d4a <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>:
      _S_key(_Const_Base_ptr __x)
 8006d4a:	b580      	push	{r7, lr}
 8006d4c:	b082      	sub	sp, #8
 8006d4e:	af00      	add	r7, sp, #0
 8006d50:	6078      	str	r0, [r7, #4]
      { return _S_key(static_cast<_Const_Link_type>(__x)); }
 8006d52:	6878      	ldr	r0, [r7, #4]
 8006d54:	f000 fdc7 	bl	80078e6 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt13_Rb_tree_nodeIS3_E>
 8006d58:	4603      	mov	r3, r0
 8006d5a:	4618      	mov	r0, r3
 8006d5c:	3708      	adds	r7, #8
 8006d5e:	46bd      	mov	sp, r7
 8006d60:	bd80      	pop	{r7, pc}

08006d62 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8006d62:	b590      	push	{r4, r7, lr}
 8006d64:	b08b      	sub	sp, #44	; 0x2c
 8006d66:	af00      	add	r7, sp, #0
 8006d68:	60f8      	str	r0, [r7, #12]
 8006d6a:	60b9      	str	r1, [r7, #8]
 8006d6c:	607a      	str	r2, [r7, #4]
      _Link_type __x = _M_begin();
 8006d6e:	68b8      	ldr	r0, [r7, #8]
 8006d70:	f7fd fc42 	bl	80045f8 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_beginEv>
 8006d74:	4603      	mov	r3, r0
 8006d76:	61bb      	str	r3, [r7, #24]
      _Base_ptr __y = _M_end();
 8006d78:	68b8      	ldr	r0, [r7, #8]
 8006d7a:	f7ff ffc2 	bl	8006d02 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_M_endEv>
 8006d7e:	4603      	mov	r3, r0
 8006d80:	617b      	str	r3, [r7, #20]
      bool __comp = true;
 8006d82:	2301      	movs	r3, #1
 8006d84:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
      while (__x != 0)
 8006d88:	69bb      	ldr	r3, [r7, #24]
 8006d8a:	2b00      	cmp	r3, #0
 8006d8c:	d020      	beq.n	8006dd0 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0x6e>
	  __y = __x;
 8006d8e:	69bb      	ldr	r3, [r7, #24]
 8006d90:	617b      	str	r3, [r7, #20]
	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
 8006d92:	68bc      	ldr	r4, [r7, #8]
 8006d94:	69bb      	ldr	r3, [r7, #24]
 8006d96:	4618      	mov	r0, r3
 8006d98:	f000 fda5 	bl	80078e6 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt13_Rb_tree_nodeIS3_E>
 8006d9c:	4603      	mov	r3, r0
 8006d9e:	461a      	mov	r2, r3
 8006da0:	6879      	ldr	r1, [r7, #4]
 8006da2:	4620      	mov	r0, r4
 8006da4:	f7ff fcfe 	bl	80067a4 <_ZNKSt4lessIcEclERKcS2_>
 8006da8:	4603      	mov	r3, r0
 8006daa:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
	  __x = __comp ? _S_left(__x) : _S_right(__x);
 8006dae:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8006db2:	2b00      	cmp	r3, #0
 8006db4:	d005      	beq.n	8006dc2 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0x60>
 8006db6:	69bb      	ldr	r3, [r7, #24]
 8006db8:	4618      	mov	r0, r3
 8006dba:	f7fe fe54 	bl	8005a66 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE7_S_leftEPSt18_Rb_tree_node_base>
 8006dbe:	4603      	mov	r3, r0
 8006dc0:	e004      	b.n	8006dcc <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0x6a>
 8006dc2:	69bb      	ldr	r3, [r7, #24]
 8006dc4:	4618      	mov	r0, r3
 8006dc6:	f7fe fe42 	bl	8005a4e <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base>
 8006dca:	4603      	mov	r3, r0
 8006dcc:	61bb      	str	r3, [r7, #24]
      while (__x != 0)
 8006dce:	e7db      	b.n	8006d88 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0x26>
      iterator __j = iterator(__y);
 8006dd0:	697a      	ldr	r2, [r7, #20]
 8006dd2:	f107 0310 	add.w	r3, r7, #16
 8006dd6:	4611      	mov	r1, r2
 8006dd8:	4618      	mov	r0, r3
 8006dda:	f7fe fe61 	bl	8005aa0 <_ZNSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEEC1EPSt18_Rb_tree_node_base>
      if (__comp)
 8006dde:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8006de2:	2b00      	cmp	r3, #0
 8006de4:	d01d      	beq.n	8006e22 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0xc0>
	  if (__j == begin())
 8006de6:	68b8      	ldr	r0, [r7, #8]
 8006de8:	f000 fd90 	bl	800790c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE5beginEv>
 8006dec:	4603      	mov	r3, r0
 8006dee:	61fb      	str	r3, [r7, #28]
 8006df0:	f107 021c 	add.w	r2, r7, #28
 8006df4:	f107 0310 	add.w	r3, r7, #16
 8006df8:	4611      	mov	r1, r2
 8006dfa:	4618      	mov	r0, r3
 8006dfc:	f000 fd97 	bl	800792e <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEES6_>
 8006e00:	4603      	mov	r3, r0
 8006e02:	2b00      	cmp	r3, #0
 8006e04:	d008      	beq.n	8006e18 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0xb6>
	    return _Res(__x, __y);
 8006e06:	f107 0214 	add.w	r2, r7, #20
 8006e0a:	f107 0318 	add.w	r3, r7, #24
 8006e0e:	4619      	mov	r1, r3
 8006e10:	68f8      	ldr	r0, [r7, #12]
 8006e12:	f000 fda0 	bl	8007956 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKc12double_tokenEERS1_Lb1EEEOT_OT0_>
 8006e16:	e025      	b.n	8006e64 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0x102>
	    --__j;
 8006e18:	f107 0310 	add.w	r3, r7, #16
 8006e1c:	4618      	mov	r0, r3
 8006e1e:	f000 f831 	bl	8006e84 <_ZNSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEEmmEv>
      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
 8006e22:	68bc      	ldr	r4, [r7, #8]
 8006e24:	693b      	ldr	r3, [r7, #16]
 8006e26:	4618      	mov	r0, r3
 8006e28:	f7ff ff8f 	bl	8006d4a <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8006e2c:	4603      	mov	r3, r0
 8006e2e:	687a      	ldr	r2, [r7, #4]
 8006e30:	4619      	mov	r1, r3
 8006e32:	4620      	mov	r0, r4
 8006e34:	f7ff fcb6 	bl	80067a4 <_ZNKSt4lessIcEclERKcS2_>
 8006e38:	4603      	mov	r3, r0
 8006e3a:	2b00      	cmp	r3, #0
 8006e3c:	d008      	beq.n	8006e50 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0xee>
	return _Res(__x, __y);
 8006e3e:	f107 0214 	add.w	r2, r7, #20
 8006e42:	f107 0318 	add.w	r3, r7, #24
 8006e46:	4619      	mov	r1, r3
 8006e48:	68f8      	ldr	r0, [r7, #12]
 8006e4a:	f000 fd84 	bl	8007956 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKc12double_tokenEERS1_Lb1EEEOT_OT0_>
 8006e4e:	e009      	b.n	8006e64 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0x102>
      return _Res(__j._M_node, 0);
 8006e50:	2300      	movs	r3, #0
 8006e52:	623b      	str	r3, [r7, #32]
 8006e54:	f107 0220 	add.w	r2, r7, #32
 8006e58:	f107 0310 	add.w	r3, r7, #16
 8006e5c:	4619      	mov	r1, r3
 8006e5e:	68f8      	ldr	r0, [r7, #12]
 8006e60:	f7ff fd97 	bl	8006992 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_>
    }
 8006e64:	68f8      	ldr	r0, [r7, #12]
 8006e66:	372c      	adds	r7, #44	; 0x2c
 8006e68:	46bd      	mov	sp, r7
 8006e6a:	bd90      	pop	{r4, r7, pc}

08006e6c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_leftmostEv>:
      _M_leftmost() _GLIBCXX_NOEXCEPT
 8006e6c:	b480      	push	{r7}
 8006e6e:	b083      	sub	sp, #12
 8006e70:	af00      	add	r7, sp, #0
 8006e72:	6078      	str	r0, [r7, #4]
      { return this->_M_impl._M_header._M_left; }
 8006e74:	687b      	ldr	r3, [r7, #4]
 8006e76:	330c      	adds	r3, #12
 8006e78:	4618      	mov	r0, r3
 8006e7a:	370c      	adds	r7, #12
 8006e7c:	46bd      	mov	sp, r7
 8006e7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006e82:	4770      	bx	lr

08006e84 <_ZNSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEEmmEv>:
      operator--() _GLIBCXX_NOEXCEPT
 8006e84:	b580      	push	{r7, lr}
 8006e86:	b082      	sub	sp, #8
 8006e88:	af00      	add	r7, sp, #0
 8006e8a:	6078      	str	r0, [r7, #4]
	_M_node = _Rb_tree_decrement(_M_node);
 8006e8c:	687b      	ldr	r3, [r7, #4]
 8006e8e:	681b      	ldr	r3, [r3, #0]
 8006e90:	4618      	mov	r0, r3
 8006e92:	f01c fb97 	bl	80235c4 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 8006e96:	4602      	mov	r2, r0
 8006e98:	687b      	ldr	r3, [r7, #4]
 8006e9a:	601a      	str	r2, [r3, #0]
	return *this;
 8006e9c:	687b      	ldr	r3, [r7, #4]
      }
 8006e9e:	4618      	mov	r0, r3
 8006ea0:	3708      	adds	r7, #8
 8006ea2:	46bd      	mov	sp, r7
 8006ea4:	bd80      	pop	{r7, pc}

08006ea6 <_ZNSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
 8006ea6:	b580      	push	{r7, lr}
 8006ea8:	b082      	sub	sp, #8
 8006eaa:	af00      	add	r7, sp, #0
 8006eac:	6078      	str	r0, [r7, #4]
	_M_node = _Rb_tree_increment(_M_node);
 8006eae:	687b      	ldr	r3, [r7, #4]
 8006eb0:	681b      	ldr	r3, [r3, #0]
 8006eb2:	4618      	mov	r0, r3
 8006eb4:	f01c fb73 	bl	802359e <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
 8006eb8:	4602      	mov	r2, r0
 8006eba:	687b      	ldr	r3, [r7, #4]
 8006ebc:	601a      	str	r2, [r3, #0]
	return *this;
 8006ebe:	687b      	ldr	r3, [r7, #4]
      }
 8006ec0:	4618      	mov	r0, r3
 8006ec2:	3708      	adds	r7, #8
 8006ec4:	46bd      	mov	sp, r7
 8006ec6:	bd80      	pop	{r7, pc}

08006ec8 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_Alloc_nodeclIRKS3_EEPSt13_Rb_tree_nodeIS3_EOT_>:
	  operator()(_Arg&& __arg) const
 8006ec8:	b590      	push	{r4, r7, lr}
 8006eca:	b083      	sub	sp, #12
 8006ecc:	af00      	add	r7, sp, #0
 8006ece:	6078      	str	r0, [r7, #4]
 8006ed0:	6039      	str	r1, [r7, #0]
	  { return _M_t._M_create_node(_GLIBCXX_FORWARD(_Arg, __arg)); }
 8006ed2:	687b      	ldr	r3, [r7, #4]
 8006ed4:	681c      	ldr	r4, [r3, #0]
 8006ed6:	6838      	ldr	r0, [r7, #0]
 8006ed8:	f7fe ff20 	bl	8005d1c <_ZSt7forwardIRKSt4pairIKc12double_tokenEEOT_RNSt16remove_referenceIS6_E4typeE>
 8006edc:	4603      	mov	r3, r0
 8006ede:	4619      	mov	r1, r3
 8006ee0:	4620      	mov	r0, r4
 8006ee2:	f000 fd51 	bl	8007988 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_create_nodeIJRKS3_EEEPSt13_Rb_tree_nodeIS3_EDpOT_>
 8006ee6:	4603      	mov	r3, r0
 8006ee8:	4618      	mov	r0, r3
 8006eea:	370c      	adds	r7, #12
 8006eec:	46bd      	mov	sp, r7
 8006eee:	bd90      	pop	{r4, r7, pc}

08006ef0 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEE13_M_reset_implEvEUlOT_E_JRiEESF_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8006ef0:	b5b0      	push	{r4, r5, r7, lr}
 8006ef2:	b084      	sub	sp, #16
 8006ef4:	af00      	add	r7, sp, #0
 8006ef6:	7338      	strb	r0, [r7, #12]
 8006ef8:	60b9      	str	r1, [r7, #8]
 8006efa:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8006efc:	68b8      	ldr	r0, [r7, #8]
 8006efe:	f7fe ffea 	bl	8005ed6 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8006f02:	4604      	mov	r4, r0
 8006f04:	6878      	ldr	r0, [r7, #4]
 8006f06:	f7fd fea1 	bl	8004c4c <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 8006f0a:	4603      	mov	r3, r0
 8006f0c:	4619      	mov	r1, r3
 8006f0e:	4620      	mov	r0, r4
 8006f10:	f000 fd51 	bl	80079b6 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE13_M_reset_implEvENUlOT_E_clIRiEENS0_16__variant_cookieESE_>
 8006f14:	462b      	mov	r3, r5
 8006f16:	4618      	mov	r0, r3
 8006f18:	3710      	adds	r7, #16
 8006f1a:	46bd      	mov	sp, r7
 8006f1c:	bdb0      	pop	{r4, r5, r7, pc}

08006f1e <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEE13_M_reset_implEvEUlOT_E_JRfEESF_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8006f1e:	b5b0      	push	{r4, r5, r7, lr}
 8006f20:	b084      	sub	sp, #16
 8006f22:	af00      	add	r7, sp, #0
 8006f24:	7338      	strb	r0, [r7, #12]
 8006f26:	60b9      	str	r1, [r7, #8]
 8006f28:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8006f2a:	68b8      	ldr	r0, [r7, #8]
 8006f2c:	f7fe ffd3 	bl	8005ed6 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8006f30:	4604      	mov	r4, r0
 8006f32:	6878      	ldr	r0, [r7, #4]
 8006f34:	f7fd febe 	bl	8004cb4 <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 8006f38:	4603      	mov	r3, r0
 8006f3a:	4619      	mov	r1, r3
 8006f3c:	4620      	mov	r0, r4
 8006f3e:	f000 fd4b 	bl	80079d8 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE13_M_reset_implEvENUlOT_E_clIRfEENS0_16__variant_cookieESE_>
 8006f42:	462b      	mov	r3, r5
 8006f44:	4618      	mov	r0, r3
 8006f46:	3710      	adds	r7, #16
 8006f48:	46bd      	mov	sp, r7
 8006f4a:	bdb0      	pop	{r4, r5, r7, pc}

08006f4c <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEE13_M_reset_implEvEUlOT_E_JRbEESF_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8006f4c:	b5b0      	push	{r4, r5, r7, lr}
 8006f4e:	b084      	sub	sp, #16
 8006f50:	af00      	add	r7, sp, #0
 8006f52:	7338      	strb	r0, [r7, #12]
 8006f54:	60b9      	str	r1, [r7, #8]
 8006f56:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8006f58:	68b8      	ldr	r0, [r7, #8]
 8006f5a:	f7fe ffbc 	bl	8005ed6 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8006f5e:	4604      	mov	r4, r0
 8006f60:	6878      	ldr	r0, [r7, #4]
 8006f62:	f7fd fedb 	bl	8004d1c <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
 8006f66:	4603      	mov	r3, r0
 8006f68:	4619      	mov	r1, r3
 8006f6a:	4620      	mov	r0, r4
 8006f6c:	f000 fd45 	bl	80079fa <_ZZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE13_M_reset_implEvENUlOT_E_clIRbEENS0_16__variant_cookieESE_>
 8006f70:	462b      	mov	r3, r5
 8006f72:	4618      	mov	r0, r3
 8006f74:	3710      	adds	r7, #16
 8006f76:	46bd      	mov	sp, r7
 8006f78:	bdb0      	pop	{r4, r5, r7, pc}

08006f7a <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEE13_M_reset_implEvEUlOT_E_JRS9_EESF_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8006f7a:	b5b0      	push	{r4, r5, r7, lr}
 8006f7c:	b084      	sub	sp, #16
 8006f7e:	af00      	add	r7, sp, #0
 8006f80:	7338      	strb	r0, [r7, #12]
 8006f82:	60b9      	str	r1, [r7, #8]
 8006f84:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8006f86:	68b8      	ldr	r0, [r7, #8]
 8006f88:	f7fe ffa5 	bl	8005ed6 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8006f8c:	4604      	mov	r4, r0
 8006f8e:	6878      	ldr	r0, [r7, #4]
 8006f90:	f7fd ff04 	bl	8004d9c <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 8006f94:	4603      	mov	r3, r0
 8006f96:	4619      	mov	r1, r3
 8006f98:	4620      	mov	r0, r4
 8006f9a:	f000 fd3f 	bl	8007a1c <_ZZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE13_M_reset_implEvENUlOT_E_clIRS7_EENS0_16__variant_cookieESE_>
 8006f9e:	462b      	mov	r3, r5
 8006fa0:	4618      	mov	r0, r3
 8006fa2:	3710      	adds	r7, #16
 8006fa4:	46bd      	mov	sp, r7
 8006fa6:	bdb0      	pop	{r4, r5, r7, pc}

08006fa8 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEE13_M_reset_implEvEUlOT_E_JRSD_EESF_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8006fa8:	b5b0      	push	{r4, r5, r7, lr}
 8006faa:	b084      	sub	sp, #16
 8006fac:	af00      	add	r7, sp, #0
 8006fae:	7338      	strb	r0, [r7, #12]
 8006fb0:	60b9      	str	r1, [r7, #8]
 8006fb2:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8006fb4:	68b8      	ldr	r0, [r7, #8]
 8006fb6:	f7fe ff8e 	bl	8005ed6 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8006fba:	4604      	mov	r4, r0
 8006fbc:	6878      	ldr	r0, [r7, #4]
 8006fbe:	f7fd ff2d 	bl	8004e1c <_ZSt7forwardIRSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS5_E4typeE>
 8006fc2:	4603      	mov	r3, r0
 8006fc4:	4619      	mov	r1, r3
 8006fc6:	4620      	mov	r0, r4
 8006fc8:	f000 fd39 	bl	8007a3e <_ZZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE13_M_reset_implEvENUlOT_E_clIRSB_EENS0_16__variant_cookieESE_>
 8006fcc:	462b      	mov	r3, r5
 8006fce:	4618      	mov	r0, r3
 8006fd0:	3710      	adds	r7, #16
 8006fd2:	46bd      	mov	sp, r7
 8006fd4:	bdb0      	pop	{r4, r5, r7, pc}

08006fd6 <_ZNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1Ev>:
      constexpr _Variadic_union() : _M_rest() { }
 8006fd6:	b580      	push	{r7, lr}
 8006fd8:	b082      	sub	sp, #8
 8006fda:	af00      	add	r7, sp, #0
 8006fdc:	6078      	str	r0, [r7, #4]
 8006fde:	687b      	ldr	r3, [r7, #4]
 8006fe0:	4618      	mov	r0, r3
 8006fe2:	f000 fd3d 	bl	8007a60 <_ZNSt8__detail9__variant15_Variadic_unionIJSt6vectorI6SymbolSaIS3_EEEEC1Ev>
 8006fe6:	687b      	ldr	r3, [r7, #4]
 8006fe8:	4618      	mov	r0, r3
 8006fea:	3708      	adds	r7, #8
 8006fec:	46bd      	mov	sp, r7
 8006fee:	bd80      	pop	{r7, pc}

08006ff0 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Copy_ctor_baseILb0EJifbS7_SB_EEERKSD_EEvOT0_OT1_ENUlOT_E_clIRKiEENS0_16__variant_cookieESM_>:
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 8006ff0:	b5b0      	push	{r4, r5, r7, lr}
 8006ff2:	b082      	sub	sp, #8
 8006ff4:	af00      	add	r7, sp, #0
 8006ff6:	6078      	str	r0, [r7, #4]
 8006ff8:	6039      	str	r1, [r7, #0]
 8006ffa:	687b      	ldr	r3, [r7, #4]
 8006ffc:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 8006ffe:	4618      	mov	r0, r3
 8007000:	f000 fd39 	bl	8007a76 <_ZSt7forwardIRNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8007004:	4604      	mov	r4, r0
 8007006:	6838      	ldr	r0, [r7, #0]
 8007008:	f7fd ffc5 	bl	8004f96 <_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE>
 800700c:	4603      	mov	r3, r0
 800700e:	4619      	mov	r1, r3
 8007010:	4620      	mov	r0, r4
 8007012:	f000 fd52 	bl	8007aba <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEERKiEEvOT_OT0_>
	  return {};
 8007016:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 8007018:	4618      	mov	r0, r3
 800701a:	3708      	adds	r7, #8
 800701c:	46bd      	mov	sp, r7
 800701e:	bdb0      	pop	{r4, r5, r7, pc}

08007020 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Copy_ctor_baseILb0EJifbS7_SB_EEERKSD_EEvOT0_OT1_ENUlOT_E_clIRKfEENS0_16__variant_cookieESM_>:
 8007020:	b5b0      	push	{r4, r5, r7, lr}
 8007022:	b082      	sub	sp, #8
 8007024:	af00      	add	r7, sp, #0
 8007026:	6078      	str	r0, [r7, #4]
 8007028:	6039      	str	r1, [r7, #0]
 800702a:	687b      	ldr	r3, [r7, #4]
 800702c:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 800702e:	4618      	mov	r0, r3
 8007030:	f000 fd21 	bl	8007a76 <_ZSt7forwardIRNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8007034:	4604      	mov	r4, r0
 8007036:	6838      	ldr	r0, [r7, #0]
 8007038:	f7fd ffd6 	bl	8004fe8 <_ZSt7forwardIRKfEOT_RNSt16remove_referenceIS2_E4typeE>
 800703c:	4603      	mov	r3, r0
 800703e:	4619      	mov	r1, r3
 8007040:	4620      	mov	r0, r4
 8007042:	f000 fd54 	bl	8007aee <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEERKfEEvOT_OT0_>
	  return {};
 8007046:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 8007048:	4618      	mov	r0, r3
 800704a:	3708      	adds	r7, #8
 800704c:	46bd      	mov	sp, r7
 800704e:	bdb0      	pop	{r4, r5, r7, pc}

08007050 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Copy_ctor_baseILb0EJifbS7_SB_EEERKSD_EEvOT0_OT1_ENUlOT_E_clIRKbEENS0_16__variant_cookieESM_>:
 8007050:	b5b0      	push	{r4, r5, r7, lr}
 8007052:	b082      	sub	sp, #8
 8007054:	af00      	add	r7, sp, #0
 8007056:	6078      	str	r0, [r7, #4]
 8007058:	6039      	str	r1, [r7, #0]
 800705a:	687b      	ldr	r3, [r7, #4]
 800705c:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 800705e:	4618      	mov	r0, r3
 8007060:	f000 fd09 	bl	8007a76 <_ZSt7forwardIRNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8007064:	4604      	mov	r4, r0
 8007066:	6838      	ldr	r0, [r7, #0]
 8007068:	f7fd ffe7 	bl	800503a <_ZSt7forwardIRKbEOT_RNSt16remove_referenceIS2_E4typeE>
 800706c:	4603      	mov	r3, r0
 800706e:	4619      	mov	r1, r3
 8007070:	4620      	mov	r0, r4
 8007072:	f000 fd56 	bl	8007b22 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEERKbEEvOT_OT0_>
	  return {};
 8007076:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 8007078:	4618      	mov	r0, r3
 800707a:	3708      	adds	r7, #8
 800707c:	46bd      	mov	sp, r7
 800707e:	bdb0      	pop	{r4, r5, r7, pc}

08007080 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Copy_ctor_baseILb0EJifbS7_SB_EEERKSD_EEvOT0_OT1_ENUlOT_E_clIRKS7_EENS0_16__variant_cookieESM_>:
 8007080:	b5b0      	push	{r4, r5, r7, lr}
 8007082:	b082      	sub	sp, #8
 8007084:	af00      	add	r7, sp, #0
 8007086:	6078      	str	r0, [r7, #4]
 8007088:	6039      	str	r1, [r7, #0]
 800708a:	687b      	ldr	r3, [r7, #4]
 800708c:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 800708e:	4618      	mov	r0, r3
 8007090:	f000 fcf1 	bl	8007a76 <_ZSt7forwardIRNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8007094:	4604      	mov	r4, r0
 8007096:	6838      	ldr	r0, [r7, #0]
 8007098:	f7fe f804 	bl	80050a4 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 800709c:	4603      	mov	r3, r0
 800709e:	4619      	mov	r1, r3
 80070a0:	4620      	mov	r0, r4
 80070a2:	f000 fd59 	bl	8007b58 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEERKS8_EEvOT_OT0_>
	  return {};
 80070a6:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 80070a8:	4618      	mov	r0, r3
 80070aa:	3708      	adds	r7, #8
 80070ac:	46bd      	mov	sp, r7
 80070ae:	bdb0      	pop	{r4, r5, r7, pc}

080070b0 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Copy_ctor_baseILb0EJifbS7_SB_EEERKSD_EEvOT0_OT1_ENUlOT_E_clIRKSB_EENS0_16__variant_cookieESM_>:
 80070b0:	b5b0      	push	{r4, r5, r7, lr}
 80070b2:	b082      	sub	sp, #8
 80070b4:	af00      	add	r7, sp, #0
 80070b6:	6078      	str	r0, [r7, #4]
 80070b8:	6039      	str	r1, [r7, #0]
 80070ba:	687b      	ldr	r3, [r7, #4]
 80070bc:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 80070be:	4618      	mov	r0, r3
 80070c0:	f000 fcd9 	bl	8007a76 <_ZSt7forwardIRNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 80070c4:	4604      	mov	r4, r0
 80070c6:	6838      	ldr	r0, [r7, #0]
 80070c8:	f7fe f821 	bl	800510e <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>
 80070cc:	4603      	mov	r3, r0
 80070ce:	4619      	mov	r1, r3
 80070d0:	4620      	mov	r0, r4
 80070d2:	f000 fd5d 	bl	8007b90 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEERKSC_EEvOT_OT0_>
	  return {};
 80070d6:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 80070d8:	4618      	mov	r0, r3
 80070da:	3708      	adds	r7, #8
 80070dc:	46bd      	mov	sp, r7
 80070de:	bdb0      	pop	{r4, r5, r7, pc}

080070e0 <_ZSt7forwardIRNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80070e0:	b480      	push	{r7}
 80070e2:	b083      	sub	sp, #12
 80070e4:	af00      	add	r7, sp, #0
 80070e6:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80070e8:	687b      	ldr	r3, [r7, #4]
 80070ea:	4618      	mov	r0, r3
 80070ec:	370c      	adds	r7, #12
 80070ee:	46bd      	mov	sp, r7
 80070f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80070f4:	4770      	bx	lr

080070f6 <_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_>:
    move(_Tp&& __t) noexcept
 80070f6:	b480      	push	{r7}
 80070f8:	b083      	sub	sp, #12
 80070fa:	af00      	add	r7, sp, #0
 80070fc:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 80070fe:	687b      	ldr	r3, [r7, #4]
 8007100:	4618      	mov	r0, r3
 8007102:	370c      	adds	r7, #12
 8007104:	46bd      	mov	sp, r7
 8007106:	f85d 7b04 	ldr.w	r7, [sp], #4
 800710a:	4770      	bx	lr

0800710c <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE7emplaceILj0EJiEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>:
	emplace(_Args&&... __args)
 800710c:	b580      	push	{r7, lr}
 800710e:	b082      	sub	sp, #8
 8007110:	af00      	add	r7, sp, #0
 8007112:	6078      	str	r0, [r7, #4]
 8007114:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 8007116:	687b      	ldr	r3, [r7, #4]
 8007118:	4618      	mov	r0, r3
 800711a:	f7fc f938 	bl	800338e <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 800711e:	6838      	ldr	r0, [r7, #0]
 8007120:	f000 fd52 	bl	8007bc8 <_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE>
 8007124:	4603      	mov	r3, r0
 8007126:	4619      	mov	r1, r3
 8007128:	6878      	ldr	r0, [r7, #4]
 800712a:	f000 fd58 	bl	8007bde <_ZSt28__variant_construct_by_indexILj0ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEJiEEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 800712e:	6878      	ldr	r0, [r7, #4]
 8007130:	f7fd f81c 	bl	800416c <_ZSt3getILj0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8007134:	4603      	mov	r3, r0
	}
 8007136:	4618      	mov	r0, r3
 8007138:	3708      	adds	r7, #8
 800713a:	46bd      	mov	sp, r7
 800713c:	bd80      	pop	{r7, pc}

0800713e <_ZSt4moveIRfEONSt16remove_referenceIT_E4typeEOS2_>:
    move(_Tp&& __t) noexcept
 800713e:	b480      	push	{r7}
 8007140:	b083      	sub	sp, #12
 8007142:	af00      	add	r7, sp, #0
 8007144:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 8007146:	687b      	ldr	r3, [r7, #4]
 8007148:	4618      	mov	r0, r3
 800714a:	370c      	adds	r7, #12
 800714c:	46bd      	mov	sp, r7
 800714e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007152:	4770      	bx	lr

08007154 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE7emplaceILj1EJfEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>:
	emplace(_Args&&... __args)
 8007154:	b580      	push	{r7, lr}
 8007156:	b082      	sub	sp, #8
 8007158:	af00      	add	r7, sp, #0
 800715a:	6078      	str	r0, [r7, #4]
 800715c:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 800715e:	687b      	ldr	r3, [r7, #4]
 8007160:	4618      	mov	r0, r3
 8007162:	f7fc f914 	bl	800338e <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 8007166:	6838      	ldr	r0, [r7, #0]
 8007168:	f000 fd58 	bl	8007c1c <_ZSt7forwardIfEOT_RNSt16remove_referenceIS0_E4typeE>
 800716c:	4603      	mov	r3, r0
 800716e:	4619      	mov	r1, r3
 8007170:	6878      	ldr	r0, [r7, #4]
 8007172:	f000 fd5e 	bl	8007c32 <_ZSt28__variant_construct_by_indexILj1ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEJfEEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 8007176:	6878      	ldr	r0, [r7, #4]
 8007178:	f000 fd7a 	bl	8007c70 <_ZSt3getILj1EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 800717c:	4603      	mov	r3, r0
	}
 800717e:	4618      	mov	r0, r3
 8007180:	3708      	adds	r7, #8
 8007182:	46bd      	mov	sp, r7
 8007184:	bd80      	pop	{r7, pc}

08007186 <_ZSt4moveIRbEONSt16remove_referenceIT_E4typeEOS2_>:
    move(_Tp&& __t) noexcept
 8007186:	b480      	push	{r7}
 8007188:	b083      	sub	sp, #12
 800718a:	af00      	add	r7, sp, #0
 800718c:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 800718e:	687b      	ldr	r3, [r7, #4]
 8007190:	4618      	mov	r0, r3
 8007192:	370c      	adds	r7, #12
 8007194:	46bd      	mov	sp, r7
 8007196:	f85d 7b04 	ldr.w	r7, [sp], #4
 800719a:	4770      	bx	lr

0800719c <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE7emplaceILj2EJbEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>:
	emplace(_Args&&... __args)
 800719c:	b580      	push	{r7, lr}
 800719e:	b082      	sub	sp, #8
 80071a0:	af00      	add	r7, sp, #0
 80071a2:	6078      	str	r0, [r7, #4]
 80071a4:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 80071a6:	687b      	ldr	r3, [r7, #4]
 80071a8:	4618      	mov	r0, r3
 80071aa:	f7fc f8f0 	bl	800338e <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 80071ae:	6838      	ldr	r0, [r7, #0]
 80071b0:	f000 fd7a 	bl	8007ca8 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
 80071b4:	4603      	mov	r3, r0
 80071b6:	4619      	mov	r1, r3
 80071b8:	6878      	ldr	r0, [r7, #4]
 80071ba:	f000 fd80 	bl	8007cbe <_ZSt28__variant_construct_by_indexILj2ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEJbEEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 80071be:	6878      	ldr	r0, [r7, #4]
 80071c0:	f000 fd9e 	bl	8007d00 <_ZSt3getILj2EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 80071c4:	4603      	mov	r3, r0
	}
 80071c6:	4618      	mov	r0, r3
 80071c8:	3708      	adds	r7, #8
 80071ca:	46bd      	mov	sp, r7
 80071cc:	bd80      	pop	{r7, pc}

080071ce <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>:
    move(_Tp&& __t) noexcept
 80071ce:	b480      	push	{r7}
 80071d0:	b083      	sub	sp, #12
 80071d2:	af00      	add	r7, sp, #0
 80071d4:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 80071d6:	687b      	ldr	r3, [r7, #4]
 80071d8:	4618      	mov	r0, r3
 80071da:	370c      	adds	r7, #12
 80071dc:	46bd      	mov	sp, r7
 80071de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80071e2:	4770      	bx	lr

080071e4 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE7emplaceILj3EJS5_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>:
	emplace(_Args&&... __args)
 80071e4:	b580      	push	{r7, lr}
 80071e6:	b082      	sub	sp, #8
 80071e8:	af00      	add	r7, sp, #0
 80071ea:	6078      	str	r0, [r7, #4]
 80071ec:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 80071ee:	687b      	ldr	r3, [r7, #4]
 80071f0:	4618      	mov	r0, r3
 80071f2:	f7fc f8cc 	bl	800338e <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 80071f6:	6838      	ldr	r0, [r7, #0]
 80071f8:	f000 fd9e 	bl	8007d38 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 80071fc:	4603      	mov	r3, r0
 80071fe:	4619      	mov	r1, r3
 8007200:	6878      	ldr	r0, [r7, #4]
 8007202:	f000 fda4 	bl	8007d4e <_ZSt28__variant_construct_by_indexILj3ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEJS6_EEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 8007206:	6878      	ldr	r0, [r7, #4]
 8007208:	f000 fdc2 	bl	8007d90 <_ZSt3getILj3EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 800720c:	4603      	mov	r3, r0
	}
 800720e:	4618      	mov	r0, r3
 8007210:	3708      	adds	r7, #8
 8007212:	46bd      	mov	sp, r7
 8007214:	bd80      	pop	{r7, pc}

08007216 <_ZSt4moveIRSt6vectorI6SymbolSaIS1_EEEONSt16remove_referenceIT_E4typeEOS6_>:
    move(_Tp&& __t) noexcept
 8007216:	b480      	push	{r7}
 8007218:	b083      	sub	sp, #12
 800721a:	af00      	add	r7, sp, #0
 800721c:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 800721e:	687b      	ldr	r3, [r7, #4]
 8007220:	4618      	mov	r0, r3
 8007222:	370c      	adds	r7, #12
 8007224:	46bd      	mov	sp, r7
 8007226:	f85d 7b04 	ldr.w	r7, [sp], #4
 800722a:	4770      	bx	lr

0800722c <_ZNSt6vectorI6SymbolSaIS0_EEaSEOS2_>:
      operator=(vector&& __x) noexcept(_Alloc_traits::_S_nothrow_move())
 800722c:	b590      	push	{r4, r7, lr}
 800722e:	b085      	sub	sp, #20
 8007230:	af00      	add	r7, sp, #0
 8007232:	6078      	str	r0, [r7, #4]
 8007234:	6039      	str	r1, [r7, #0]
	constexpr bool __move_storage =
 8007236:	2301      	movs	r3, #1
 8007238:	73fb      	strb	r3, [r7, #15]
	_M_move_assign(std::move(__x), __bool_constant<__move_storage>());
 800723a:	6838      	ldr	r0, [r7, #0]
 800723c:	f7ff ffeb 	bl	8007216 <_ZSt4moveIRSt6vectorI6SymbolSaIS1_EEEONSt16remove_referenceIT_E4typeEOS6_>
 8007240:	4603      	mov	r3, r0
 8007242:	4622      	mov	r2, r4
 8007244:	4619      	mov	r1, r3
 8007246:	6878      	ldr	r0, [r7, #4]
 8007248:	f000 fdbe 	bl	8007dc8 <_ZNSt6vectorI6SymbolSaIS0_EE14_M_move_assignEOS2_St17integral_constantIbLb1EE>
	return *this;
 800724c:	687b      	ldr	r3, [r7, #4]
      }
 800724e:	4618      	mov	r0, r3
 8007250:	3714      	adds	r7, #20
 8007252:	46bd      	mov	sp, r7
 8007254:	bd90      	pop	{r4, r7, pc}

08007256 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE7emplaceILj4EJS9_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>:
	emplace(_Args&&... __args)
 8007256:	b580      	push	{r7, lr}
 8007258:	b082      	sub	sp, #8
 800725a:	af00      	add	r7, sp, #0
 800725c:	6078      	str	r0, [r7, #4]
 800725e:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 8007260:	687b      	ldr	r3, [r7, #4]
 8007262:	4618      	mov	r0, r3
 8007264:	f7fc f893 	bl	800338e <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 8007268:	6838      	ldr	r0, [r7, #0]
 800726a:	f000 fdeb 	bl	8007e44 <_ZSt7forwardISt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS4_E4typeE>
 800726e:	4603      	mov	r3, r0
 8007270:	4619      	mov	r1, r3
 8007272:	6878      	ldr	r0, [r7, #4]
 8007274:	f000 fe1d 	bl	8007eb2 <_ZSt28__variant_construct_by_indexILj4ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEJSA_EEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 8007278:	6878      	ldr	r0, [r7, #4]
 800727a:	f000 fe3b 	bl	8007ef4 <_ZSt3getILj4EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 800727e:	4603      	mov	r3, r0
	}
 8007280:	4618      	mov	r0, r3
 8007282:	3708      	adds	r7, #8
 8007284:	46bd      	mov	sp, r7
 8007286:	bd80      	pop	{r7, pc}

08007288 <_ZSt7forwardIRNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8007288:	b480      	push	{r7}
 800728a:	b083      	sub	sp, #12
 800728c:	af00      	add	r7, sp, #0
 800728e:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8007290:	687b      	ldr	r3, [r7, #4]
 8007292:	4618      	mov	r0, r3
 8007294:	370c      	adds	r7, #12
 8007296:	46bd      	mov	sp, r7
 8007298:	f85d 7b04 	ldr.w	r7, [sp], #4
 800729c:	4770      	bx	lr

0800729e <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE19_M_destructive_copyIiEEvtRKT_>:
        void _M_destructive_copy(unsigned short __rhs_index, const _Up& __rhs)
 800729e:	b580      	push	{r7, lr}
 80072a0:	b084      	sub	sp, #16
 80072a2:	af00      	add	r7, sp, #0
 80072a4:	60f8      	str	r0, [r7, #12]
 80072a6:	460b      	mov	r3, r1
 80072a8:	607a      	str	r2, [r7, #4]
 80072aa:	817b      	strh	r3, [r7, #10]
	  this->_M_reset();
 80072ac:	68fb      	ldr	r3, [r7, #12]
 80072ae:	4618      	mov	r0, r3
 80072b0:	f7fc f86d 	bl	800338e <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE8_M_resetEv>
	  __variant_construct_single(*this, __rhs);
 80072b4:	6879      	ldr	r1, [r7, #4]
 80072b6:	68f8      	ldr	r0, [r7, #12]
 80072b8:	f000 fe38 	bl	8007f2c <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEERKiEEvOT_OT0_>
	  this->_M_index = __rhs_index;
 80072bc:	897b      	ldrh	r3, [r7, #10]
 80072be:	b2da      	uxtb	r2, r3
 80072c0:	68fb      	ldr	r3, [r7, #12]
 80072c2:	761a      	strb	r2, [r3, #24]
	}
 80072c4:	bf00      	nop
 80072c6:	3710      	adds	r7, #16
 80072c8:	46bd      	mov	sp, r7
 80072ca:	bd80      	pop	{r7, pc}

080072cc <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE19_M_destructive_copyIfEEvtRKT_>:
        void _M_destructive_copy(unsigned short __rhs_index, const _Up& __rhs)
 80072cc:	b580      	push	{r7, lr}
 80072ce:	b084      	sub	sp, #16
 80072d0:	af00      	add	r7, sp, #0
 80072d2:	60f8      	str	r0, [r7, #12]
 80072d4:	460b      	mov	r3, r1
 80072d6:	607a      	str	r2, [r7, #4]
 80072d8:	817b      	strh	r3, [r7, #10]
	  this->_M_reset();
 80072da:	68fb      	ldr	r3, [r7, #12]
 80072dc:	4618      	mov	r0, r3
 80072de:	f7fc f856 	bl	800338e <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE8_M_resetEv>
	  __variant_construct_single(*this, __rhs);
 80072e2:	6879      	ldr	r1, [r7, #4]
 80072e4:	68f8      	ldr	r0, [r7, #12]
 80072e6:	f000 fe3b 	bl	8007f60 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEERKfEEvOT_OT0_>
	  this->_M_index = __rhs_index;
 80072ea:	897b      	ldrh	r3, [r7, #10]
 80072ec:	b2da      	uxtb	r2, r3
 80072ee:	68fb      	ldr	r3, [r7, #12]
 80072f0:	761a      	strb	r2, [r3, #24]
	}
 80072f2:	bf00      	nop
 80072f4:	3710      	adds	r7, #16
 80072f6:	46bd      	mov	sp, r7
 80072f8:	bd80      	pop	{r7, pc}

080072fa <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE19_M_destructive_copyIbEEvtRKT_>:
        void _M_destructive_copy(unsigned short __rhs_index, const _Up& __rhs)
 80072fa:	b580      	push	{r7, lr}
 80072fc:	b084      	sub	sp, #16
 80072fe:	af00      	add	r7, sp, #0
 8007300:	60f8      	str	r0, [r7, #12]
 8007302:	460b      	mov	r3, r1
 8007304:	607a      	str	r2, [r7, #4]
 8007306:	817b      	strh	r3, [r7, #10]
	  this->_M_reset();
 8007308:	68fb      	ldr	r3, [r7, #12]
 800730a:	4618      	mov	r0, r3
 800730c:	f7fc f83f 	bl	800338e <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE8_M_resetEv>
	  __variant_construct_single(*this, __rhs);
 8007310:	6879      	ldr	r1, [r7, #4]
 8007312:	68f8      	ldr	r0, [r7, #12]
 8007314:	f000 fe3e 	bl	8007f94 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEERKbEEvOT_OT0_>
	  this->_M_index = __rhs_index;
 8007318:	897b      	ldrh	r3, [r7, #10]
 800731a:	b2da      	uxtb	r2, r3
 800731c:	68fb      	ldr	r3, [r7, #12]
 800731e:	761a      	strb	r2, [r3, #24]
	}
 8007320:	bf00      	nop
 8007322:	3710      	adds	r7, #16
 8007324:	46bd      	mov	sp, r7
 8007326:	bd80      	pop	{r7, pc}

08007328 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1ILj3EJRKS5_ES5_vEESt16in_place_index_tIXT_EEDpOT0_>:
	variant(in_place_index_t<_Np>, _Args&&... __args)
 8007328:	b5f0      	push	{r4, r5, r6, r7, lr}
 800732a:	b085      	sub	sp, #20
 800732c:	af00      	add	r7, sp, #0
 800732e:	60f8      	str	r0, [r7, #12]
 8007330:	7239      	strb	r1, [r7, #8]
 8007332:	607a      	str	r2, [r7, #4]
	_Default_ctor_enabler(_Enable_default_constructor_tag{})
 8007334:	68fc      	ldr	r4, [r7, #12]
 8007336:	6878      	ldr	r0, [r7, #4]
 8007338:	f7fd feb4 	bl	80050a4 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 800733c:	4603      	mov	r3, r0
 800733e:	461a      	mov	r2, r3
 8007340:	4631      	mov	r1, r6
 8007342:	4620      	mov	r0, r4
 8007344:	f000 fe85 	bl	8008052 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj3EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>
 8007348:	4629      	mov	r1, r5
 800734a:	68f8      	ldr	r0, [r7, #12]
 800734c:	f000 fe96 	bl	800807c <_ZNSt27_Enable_default_constructorILb1ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEC1ESt31_Enable_default_constructor_tag>
	{ }
 8007350:	68fb      	ldr	r3, [r7, #12]
 8007352:	4618      	mov	r0, r3
 8007354:	3714      	adds	r7, #20
 8007356:	46bd      	mov	sp, r7
 8007358:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800735a <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1IRKS5_vvS5_vEEOT_>:
	variant(_Tp&& __t)
 800735a:	b590      	push	{r4, r7, lr}
 800735c:	b083      	sub	sp, #12
 800735e:	af00      	add	r7, sp, #0
 8007360:	6078      	str	r0, [r7, #4]
 8007362:	6039      	str	r1, [r7, #0]
		  std::forward<_Tp>(__t))
 8007364:	6838      	ldr	r0, [r7, #0]
 8007366:	f7fd fe9d 	bl	80050a4 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 800736a:	4603      	mov	r3, r0
 800736c:	461a      	mov	r2, r3
 800736e:	4621      	mov	r1, r4
 8007370:	6878      	ldr	r0, [r7, #4]
 8007372:	f7ff ffd9 	bl	8007328 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1ILj3EJRKS5_ES5_vEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 8007376:	687b      	ldr	r3, [r7, #4]
 8007378:	4618      	mov	r0, r3
 800737a:	370c      	adds	r7, #12
 800737c:	46bd      	mov	sp, r7
 800737e:	bd90      	pop	{r4, r7, pc}

08007380 <_ZN9__gnu_cxx14__alloc_traitsISaI6SymbolES1_E27_S_propagate_on_copy_assignEv>:
    static constexpr bool _S_propagate_on_copy_assign()
 8007380:	b480      	push	{r7}
 8007382:	af00      	add	r7, sp, #0
    { return _Base_type::propagate_on_container_copy_assignment::value; }
 8007384:	2300      	movs	r3, #0
 8007386:	4618      	mov	r0, r3
 8007388:	46bd      	mov	sp, r7
 800738a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800738e:	4770      	bx	lr

08007390 <_ZNSt6vectorI6SymbolSaIS0_EEaSERKS2_>:
      return __first;
    }

  template<typename _Tp, typename _Alloc>
    vector<_Tp, _Alloc>&
    vector<_Tp, _Alloc>::
 8007390:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007392:	b085      	sub	sp, #20
 8007394:	af00      	add	r7, sp, #0
 8007396:	6078      	str	r0, [r7, #4]
 8007398:	6039      	str	r1, [r7, #0]
    operator=(const vector<_Tp, _Alloc>& __x)
    {
      if (&__x != this)
 800739a:	683a      	ldr	r2, [r7, #0]
 800739c:	687b      	ldr	r3, [r7, #4]
 800739e:	429a      	cmp	r2, r3
 80073a0:	f000 80e6 	beq.w	8007570 <_ZNSt6vectorI6SymbolSaIS0_EEaSERKS2_+0x1e0>
	{
	  _GLIBCXX_ASAN_ANNOTATE_REINIT;
#if __cplusplus >= 201103L
	  if (_Alloc_traits::_S_propagate_on_copy_assign())
 80073a4:	f7ff ffec 	bl	8007380 <_ZN9__gnu_cxx14__alloc_traitsISaI6SymbolES1_E27_S_propagate_on_copy_assignEv>
 80073a8:	4603      	mov	r3, r0
 80073aa:	2b00      	cmp	r3, #0
 80073ac:	d043      	beq.n	8007436 <_ZNSt6vectorI6SymbolSaIS0_EEaSERKS2_+0xa6>
	    {
	      if (!_Alloc_traits::_S_always_equal()
 80073ae:	f7f9 ff6b 	bl	8001288 <_ZN9__gnu_cxx14__alloc_traitsISaI6SymbolES1_E15_S_always_equalEv>
 80073b2:	4603      	mov	r3, r0
 80073b4:	f083 0301 	eor.w	r3, r3, #1
 80073b8:	b2db      	uxtb	r3, r3
	          && _M_get_Tp_allocator() != __x._M_get_Tp_allocator())
 80073ba:	2b00      	cmp	r3, #0
 80073bc:	d012      	beq.n	80073e4 <_ZNSt6vectorI6SymbolSaIS0_EEaSERKS2_+0x54>
 80073be:	687b      	ldr	r3, [r7, #4]
 80073c0:	4618      	mov	r0, r3
 80073c2:	f000 fe67 	bl	8008094 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 80073c6:	4604      	mov	r4, r0
 80073c8:	683b      	ldr	r3, [r7, #0]
 80073ca:	4618      	mov	r0, r3
 80073cc:	f000 fe6d 	bl	80080aa <_ZNKSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 80073d0:	4603      	mov	r3, r0
 80073d2:	4619      	mov	r1, r3
 80073d4:	4620      	mov	r0, r4
 80073d6:	f000 fe73 	bl	80080c0 <_ZStneRKSaI6SymbolES2_>
 80073da:	4603      	mov	r3, r0
 80073dc:	2b00      	cmp	r3, #0
 80073de:	d001      	beq.n	80073e4 <_ZNSt6vectorI6SymbolSaIS0_EEaSERKS2_+0x54>
 80073e0:	2301      	movs	r3, #1
 80073e2:	e000      	b.n	80073e6 <_ZNSt6vectorI6SymbolSaIS0_EEaSERKS2_+0x56>
 80073e4:	2300      	movs	r3, #0
	      if (!_Alloc_traits::_S_always_equal()
 80073e6:	2b00      	cmp	r3, #0
 80073e8:	d017      	beq.n	800741a <_ZNSt6vectorI6SymbolSaIS0_EEaSERKS2_+0x8a>
	        {
		  // replacement allocator cannot free existing storage
		  this->clear();
 80073ea:	6878      	ldr	r0, [r7, #4]
 80073ec:	f000 fe74 	bl	80080d8 <_ZNSt6vectorI6SymbolSaIS0_EE5clearEv>
		  _M_deallocate(this->_M_impl._M_start,
 80073f0:	6878      	ldr	r0, [r7, #4]
 80073f2:	687b      	ldr	r3, [r7, #4]
 80073f4:	6819      	ldr	r1, [r3, #0]
				this->_M_impl._M_end_of_storage
 80073f6:	687b      	ldr	r3, [r7, #4]
 80073f8:	689a      	ldr	r2, [r3, #8]
				- this->_M_impl._M_start);
 80073fa:	687b      	ldr	r3, [r7, #4]
 80073fc:	681b      	ldr	r3, [r3, #0]
 80073fe:	1ad3      	subs	r3, r2, r3
 8007400:	115b      	asrs	r3, r3, #5
		  _M_deallocate(this->_M_impl._M_start,
 8007402:	461a      	mov	r2, r3
 8007404:	f000 fe76 	bl	80080f4 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE13_M_deallocateEPS0_j>
		  this->_M_impl._M_start = nullptr;
 8007408:	687b      	ldr	r3, [r7, #4]
 800740a:	2200      	movs	r2, #0
 800740c:	601a      	str	r2, [r3, #0]
		  this->_M_impl._M_finish = nullptr;
 800740e:	687b      	ldr	r3, [r7, #4]
 8007410:	2200      	movs	r2, #0
 8007412:	605a      	str	r2, [r3, #4]
		  this->_M_impl._M_end_of_storage = nullptr;
 8007414:	687b      	ldr	r3, [r7, #4]
 8007416:	2200      	movs	r2, #0
 8007418:	609a      	str	r2, [r3, #8]
		}
	      std::__alloc_on_copy(_M_get_Tp_allocator(),
 800741a:	687b      	ldr	r3, [r7, #4]
 800741c:	4618      	mov	r0, r3
 800741e:	f000 fe39 	bl	8008094 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 8007422:	4604      	mov	r4, r0
 8007424:	683b      	ldr	r3, [r7, #0]
 8007426:	4618      	mov	r0, r3
 8007428:	f000 fe3f 	bl	80080aa <_ZNKSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 800742c:	4603      	mov	r3, r0
 800742e:	4619      	mov	r1, r3
 8007430:	4620      	mov	r0, r4
 8007432:	f000 fe72 	bl	800811a <_ZSt15__alloc_on_copyISaI6SymbolEEvRT_RKS2_>
				   __x._M_get_Tp_allocator());
	    }
#endif
	  const size_type __xlen = __x.size();
 8007436:	6838      	ldr	r0, [r7, #0]
 8007438:	f000 fe7d 	bl	8008136 <_ZNKSt6vectorI6SymbolSaIS0_EE4sizeEv>
 800743c:	60f8      	str	r0, [r7, #12]
	  if (__xlen > capacity())
 800743e:	6878      	ldr	r0, [r7, #4]
 8007440:	f000 fe89 	bl	8008156 <_ZNKSt6vectorI6SymbolSaIS0_EE8capacityEv>
 8007444:	4602      	mov	r2, r0
 8007446:	68fb      	ldr	r3, [r7, #12]
 8007448:	4293      	cmp	r3, r2
 800744a:	bf8c      	ite	hi
 800744c:	2301      	movhi	r3, #1
 800744e:	2300      	movls	r3, #0
 8007450:	b2db      	uxtb	r3, r3
 8007452:	2b00      	cmp	r3, #0
 8007454:	d032      	beq.n	80074bc <_ZNSt6vectorI6SymbolSaIS0_EEaSERKS2_+0x12c>
	    {
	      pointer __tmp = _M_allocate_and_copy(__xlen, __x.begin(),
 8007456:	6838      	ldr	r0, [r7, #0]
 8007458:	f000 fe8d 	bl	8008176 <_ZNKSt6vectorI6SymbolSaIS0_EE5beginEv>
 800745c:	4604      	mov	r4, r0
 800745e:	6838      	ldr	r0, [r7, #0]
 8007460:	f000 fe9d 	bl	800819e <_ZNKSt6vectorI6SymbolSaIS0_EE3endEv>
 8007464:	4603      	mov	r3, r0
 8007466:	4622      	mov	r2, r4
 8007468:	68f9      	ldr	r1, [r7, #12]
 800746a:	6878      	ldr	r0, [r7, #4]
 800746c:	f000 feab 	bl	80081c6 <_ZNSt6vectorI6SymbolSaIS0_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS0_S2_EEEEPS0_jT_SA_>
 8007470:	60b8      	str	r0, [r7, #8]
						   __x.end());
	      std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 8007472:	687b      	ldr	r3, [r7, #4]
 8007474:	681c      	ldr	r4, [r3, #0]
 8007476:	687b      	ldr	r3, [r7, #4]
 8007478:	685d      	ldr	r5, [r3, #4]
			    _M_get_Tp_allocator());
 800747a:	687b      	ldr	r3, [r7, #4]
 800747c:	4618      	mov	r0, r3
 800747e:	f000 fe09 	bl	8008094 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 8007482:	4603      	mov	r3, r0
	      std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 8007484:	461a      	mov	r2, r3
 8007486:	4629      	mov	r1, r5
 8007488:	4620      	mov	r0, r4
 800748a:	f000 feb8 	bl	80081fe <_ZSt8_DestroyIP6SymbolS0_EvT_S2_RSaIT0_E>
	      _M_deallocate(this->_M_impl._M_start,
 800748e:	6878      	ldr	r0, [r7, #4]
 8007490:	687b      	ldr	r3, [r7, #4]
 8007492:	6819      	ldr	r1, [r3, #0]
			    this->_M_impl._M_end_of_storage
 8007494:	687b      	ldr	r3, [r7, #4]
 8007496:	689a      	ldr	r2, [r3, #8]
			    - this->_M_impl._M_start);
 8007498:	687b      	ldr	r3, [r7, #4]
 800749a:	681b      	ldr	r3, [r3, #0]
 800749c:	1ad3      	subs	r3, r2, r3
 800749e:	115b      	asrs	r3, r3, #5
	      _M_deallocate(this->_M_impl._M_start,
 80074a0:	461a      	mov	r2, r3
 80074a2:	f000 fe27 	bl	80080f4 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE13_M_deallocateEPS0_j>
	      this->_M_impl._M_start = __tmp;
 80074a6:	687b      	ldr	r3, [r7, #4]
 80074a8:	68ba      	ldr	r2, [r7, #8]
 80074aa:	601a      	str	r2, [r3, #0]
	      this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __xlen;
 80074ac:	687b      	ldr	r3, [r7, #4]
 80074ae:	681a      	ldr	r2, [r3, #0]
 80074b0:	68fb      	ldr	r3, [r7, #12]
 80074b2:	015b      	lsls	r3, r3, #5
 80074b4:	441a      	add	r2, r3
 80074b6:	687b      	ldr	r3, [r7, #4]
 80074b8:	609a      	str	r2, [r3, #8]
 80074ba:	e052      	b.n	8007562 <_ZNSt6vectorI6SymbolSaIS0_EEaSERKS2_+0x1d2>
	    }
	  else if (size() >= __xlen)
 80074bc:	6878      	ldr	r0, [r7, #4]
 80074be:	f000 fe3a 	bl	8008136 <_ZNKSt6vectorI6SymbolSaIS0_EE4sizeEv>
 80074c2:	4602      	mov	r2, r0
 80074c4:	68fb      	ldr	r3, [r7, #12]
 80074c6:	4293      	cmp	r3, r2
 80074c8:	bf94      	ite	ls
 80074ca:	2301      	movls	r3, #1
 80074cc:	2300      	movhi	r3, #0
 80074ce:	b2db      	uxtb	r3, r3
 80074d0:	2b00      	cmp	r3, #0
 80074d2:	d020      	beq.n	8007516 <_ZNSt6vectorI6SymbolSaIS0_EEaSERKS2_+0x186>
	    {
	      std::_Destroy(std::copy(__x.begin(), __x.end(), begin()),
 80074d4:	6838      	ldr	r0, [r7, #0]
 80074d6:	f000 fe4e 	bl	8008176 <_ZNKSt6vectorI6SymbolSaIS0_EE5beginEv>
 80074da:	4604      	mov	r4, r0
 80074dc:	6838      	ldr	r0, [r7, #0]
 80074de:	f000 fe5e 	bl	800819e <_ZNKSt6vectorI6SymbolSaIS0_EE3endEv>
 80074e2:	4605      	mov	r5, r0
 80074e4:	6878      	ldr	r0, [r7, #4]
 80074e6:	f000 fe98 	bl	800821a <_ZNSt6vectorI6SymbolSaIS0_EE5beginEv>
 80074ea:	4603      	mov	r3, r0
 80074ec:	461a      	mov	r2, r3
 80074ee:	4629      	mov	r1, r5
 80074f0:	4620      	mov	r0, r4
 80074f2:	f000 fea2 	bl	800823a <_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET0_T_SC_SB_>
 80074f6:	4604      	mov	r4, r0
 80074f8:	6878      	ldr	r0, [r7, #4]
 80074fa:	f000 feb6 	bl	800826a <_ZNSt6vectorI6SymbolSaIS0_EE3endEv>
 80074fe:	4605      	mov	r5, r0
			    end(), _M_get_Tp_allocator());
 8007500:	687b      	ldr	r3, [r7, #4]
 8007502:	4618      	mov	r0, r3
 8007504:	f000 fdc6 	bl	8008094 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 8007508:	4603      	mov	r3, r0
	      std::_Destroy(std::copy(__x.begin(), __x.end(), begin()),
 800750a:	461a      	mov	r2, r3
 800750c:	4629      	mov	r1, r5
 800750e:	4620      	mov	r0, r4
 8007510:	f000 febc 	bl	800828c <_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS2_SaIS2_EEEES2_EvT_S8_RSaIT0_E>
 8007514:	e025      	b.n	8007562 <_ZNSt6vectorI6SymbolSaIS0_EEaSERKS2_+0x1d2>
	    }
	  else
	    {
	      std::copy(__x._M_impl._M_start, __x._M_impl._M_start + size(),
 8007516:	683b      	ldr	r3, [r7, #0]
 8007518:	681d      	ldr	r5, [r3, #0]
 800751a:	683b      	ldr	r3, [r7, #0]
 800751c:	681c      	ldr	r4, [r3, #0]
 800751e:	6878      	ldr	r0, [r7, #4]
 8007520:	f000 fe09 	bl	8008136 <_ZNKSt6vectorI6SymbolSaIS0_EE4sizeEv>
 8007524:	4603      	mov	r3, r0
 8007526:	015b      	lsls	r3, r3, #5
 8007528:	18e1      	adds	r1, r4, r3
 800752a:	687b      	ldr	r3, [r7, #4]
 800752c:	681b      	ldr	r3, [r3, #0]
 800752e:	461a      	mov	r2, r3
 8007530:	4628      	mov	r0, r5
 8007532:	f000 feb9 	bl	80082a8 <_ZSt4copyIP6SymbolS1_ET0_T_S3_S2_>
			this->_M_impl._M_start);
	      std::__uninitialized_copy_a(__x._M_impl._M_start + size(),
 8007536:	683b      	ldr	r3, [r7, #0]
 8007538:	681c      	ldr	r4, [r3, #0]
 800753a:	6878      	ldr	r0, [r7, #4]
 800753c:	f000 fdfb 	bl	8008136 <_ZNKSt6vectorI6SymbolSaIS0_EE4sizeEv>
 8007540:	4603      	mov	r3, r0
 8007542:	015b      	lsls	r3, r3, #5
 8007544:	441c      	add	r4, r3
					  __x._M_impl._M_finish,
 8007546:	683b      	ldr	r3, [r7, #0]
 8007548:	685d      	ldr	r5, [r3, #4]
	      std::__uninitialized_copy_a(__x._M_impl._M_start + size(),
 800754a:	687b      	ldr	r3, [r7, #4]
 800754c:	685e      	ldr	r6, [r3, #4]
					  this->_M_impl._M_finish,
					  _M_get_Tp_allocator());
 800754e:	687b      	ldr	r3, [r7, #4]
 8007550:	4618      	mov	r0, r3
 8007552:	f000 fd9f 	bl	8008094 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 8007556:	4603      	mov	r3, r0
	      std::__uninitialized_copy_a(__x._M_impl._M_start + size(),
 8007558:	4632      	mov	r2, r6
 800755a:	4629      	mov	r1, r5
 800755c:	4620      	mov	r0, r4
 800755e:	f000 febb 	bl	80082d8 <_ZSt22__uninitialized_copy_aIP6SymbolS1_S0_ET0_T_S3_S2_RSaIT1_E>
	    }
	  this->_M_impl._M_finish = this->_M_impl._M_start + __xlen;
 8007562:	687b      	ldr	r3, [r7, #4]
 8007564:	681a      	ldr	r2, [r3, #0]
 8007566:	68fb      	ldr	r3, [r7, #12]
 8007568:	015b      	lsls	r3, r3, #5
 800756a:	441a      	add	r2, r3
 800756c:	687b      	ldr	r3, [r7, #4]
 800756e:	605a      	str	r2, [r3, #4]
	}
      return *this;
 8007570:	687b      	ldr	r3, [r7, #4]
    }
 8007572:	4618      	mov	r0, r3
 8007574:	3714      	adds	r7, #20
 8007576:	46bd      	mov	sp, r7
 8007578:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800757a <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1ILj4EJRKS9_ES9_vEESt16in_place_index_tIXT_EEDpOT0_>:
	variant(in_place_index_t<_Np>, _Args&&... __args)
 800757a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800757c:	b085      	sub	sp, #20
 800757e:	af00      	add	r7, sp, #0
 8007580:	60f8      	str	r0, [r7, #12]
 8007582:	7239      	strb	r1, [r7, #8]
 8007584:	607a      	str	r2, [r7, #4]
	_Default_ctor_enabler(_Enable_default_constructor_tag{})
 8007586:	68fc      	ldr	r4, [r7, #12]
 8007588:	6878      	ldr	r0, [r7, #4]
 800758a:	f7fd fdc0 	bl	800510e <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>
 800758e:	4603      	mov	r3, r0
 8007590:	461a      	mov	r2, r3
 8007592:	4631      	mov	r1, r6
 8007594:	4620      	mov	r0, r4
 8007596:	f000 fef4 	bl	8008382 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj4EJRKSB_EEESt16in_place_index_tIXT_EEDpOT0_>
 800759a:	4629      	mov	r1, r5
 800759c:	68f8      	ldr	r0, [r7, #12]
 800759e:	f000 fd6d 	bl	800807c <_ZNSt27_Enable_default_constructorILb1ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEC1ESt31_Enable_default_constructor_tag>
	{ }
 80075a2:	68fb      	ldr	r3, [r7, #12]
 80075a4:	4618      	mov	r0, r3
 80075a6:	3714      	adds	r7, #20
 80075a8:	46bd      	mov	sp, r7
 80075aa:	bdf0      	pop	{r4, r5, r6, r7, pc}

080075ac <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1IRKS9_vvS9_vEEOT_>:
	variant(_Tp&& __t)
 80075ac:	b590      	push	{r4, r7, lr}
 80075ae:	b083      	sub	sp, #12
 80075b0:	af00      	add	r7, sp, #0
 80075b2:	6078      	str	r0, [r7, #4]
 80075b4:	6039      	str	r1, [r7, #0]
		  std::forward<_Tp>(__t))
 80075b6:	6838      	ldr	r0, [r7, #0]
 80075b8:	f7fd fda9 	bl	800510e <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>
 80075bc:	4603      	mov	r3, r0
 80075be:	461a      	mov	r2, r3
 80075c0:	4621      	mov	r1, r4
 80075c2:	6878      	ldr	r0, [r7, #4]
 80075c4:	f7ff ffd9 	bl	800757a <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1ILj4EJRKS9_ES9_vEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 80075c8:	687b      	ldr	r3, [r7, #4]
 80075ca:	4618      	mov	r0, r3
 80075cc:	370c      	adds	r7, #12
 80075ce:	46bd      	mov	sp, r7
 80075d0:	bd90      	pop	{r4, r7, pc}

080075d2 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE21_M_get_Node_allocatorEv>:
      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
 80075d2:	b480      	push	{r7}
 80075d4:	b083      	sub	sp, #12
 80075d6:	af00      	add	r7, sp, #0
 80075d8:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 80075da:	687b      	ldr	r3, [r7, #4]
 80075dc:	4618      	mov	r0, r3
 80075de:	370c      	adds	r7, #12
 80075e0:	46bd      	mov	sp, r7
 80075e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80075e6:	4770      	bx	lr

080075e8 <_ZNSt13_Rb_tree_nodeISt4pairIKc10token_typeEE9_M_valptrEv>:
      _M_valptr()
 80075e8:	b580      	push	{r7, lr}
 80075ea:	b082      	sub	sp, #8
 80075ec:	af00      	add	r7, sp, #0
 80075ee:	6078      	str	r0, [r7, #4]
      { return _M_storage._M_ptr(); }
 80075f0:	687b      	ldr	r3, [r7, #4]
 80075f2:	3310      	adds	r3, #16
 80075f4:	4618      	mov	r0, r3
 80075f6:	f000 fed9 	bl	80083ac <_ZN9__gnu_cxx16__aligned_membufISt4pairIKc10token_typeEE6_M_ptrEv>
 80075fa:	4603      	mov	r3, r0
 80075fc:	4618      	mov	r0, r3
 80075fe:	3708      	adds	r7, #8
 8007600:	46bd      	mov	sp, r7
 8007602:	bd80      	pop	{r7, pc}

08007604 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEE7destroyIS4_EEvRS6_PT_>:
       *
       *  Calls @c __a.destroy(__p).
      */
      template<typename _Up>
	static void
	destroy(allocator_type& __a, _Up* __p)
 8007604:	b580      	push	{r7, lr}
 8007606:	b082      	sub	sp, #8
 8007608:	af00      	add	r7, sp, #0
 800760a:	6078      	str	r0, [r7, #4]
 800760c:	6039      	str	r1, [r7, #0]
	noexcept(noexcept(__a.destroy(__p)))
	{ __a.destroy(__p); }
 800760e:	6839      	ldr	r1, [r7, #0]
 8007610:	6878      	ldr	r0, [r7, #4]
 8007612:	f000 fed7 	bl	80083c4 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEE7destroyIS5_EEvPT_>
 8007616:	bf00      	nop
 8007618:	3708      	adds	r7, #8
 800761a:	46bd      	mov	sp, r7
 800761c:	bd80      	pop	{r7, pc}

0800761e <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEE10deallocateERS6_PS5_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 800761e:	b580      	push	{r7, lr}
 8007620:	b084      	sub	sp, #16
 8007622:	af00      	add	r7, sp, #0
 8007624:	60f8      	str	r0, [r7, #12]
 8007626:	60b9      	str	r1, [r7, #8]
 8007628:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 800762a:	687a      	ldr	r2, [r7, #4]
 800762c:	68b9      	ldr	r1, [r7, #8]
 800762e:	68f8      	ldr	r0, [r7, #12]
 8007630:	f000 fed3 	bl	80083da <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEE10deallocateEPS6_j>
 8007634:	bf00      	nop
 8007636:	3710      	adds	r7, #16
 8007638:	46bd      	mov	sp, r7
 800763a:	bd80      	pop	{r7, pc}

0800763c <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt13_Rb_tree_nodeIS3_E>:
      _S_key(_Const_Link_type __x)
 800763c:	b580      	push	{r7, lr}
 800763e:	b084      	sub	sp, #16
 8007640:	af00      	add	r7, sp, #0
 8007642:	6078      	str	r0, [r7, #4]
	return _KeyOfValue()(*__x->_M_valptr());
 8007644:	6878      	ldr	r0, [r7, #4]
 8007646:	f000 fed4 	bl	80083f2 <_ZNKSt13_Rb_tree_nodeISt4pairIKc10token_typeEE9_M_valptrEv>
 800764a:	4602      	mov	r2, r0
 800764c:	f107 030c 	add.w	r3, r7, #12
 8007650:	4611      	mov	r1, r2
 8007652:	4618      	mov	r0, r3
 8007654:	f7fd ff76 	bl	8005544 <_ZNKSt10_Select1stISt4pairIKc10token_typeEEclERKS3_>
 8007658:	4603      	mov	r3, r0
      }
 800765a:	4618      	mov	r0, r3
 800765c:	3710      	adds	r7, #16
 800765e:	46bd      	mov	sp, r7
 8007660:	bd80      	pop	{r7, pc}

08007662 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8007662:	b480      	push	{r7}
 8007664:	b083      	sub	sp, #12
 8007666:	af00      	add	r7, sp, #0
 8007668:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800766a:	687b      	ldr	r3, [r7, #4]
 800766c:	4618      	mov	r0, r3
 800766e:	370c      	adds	r7, #12
 8007670:	46bd      	mov	sp, r7
 8007672:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007676:	4770      	bx	lr

08007678 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 8007678:	b580      	push	{r7, lr}
 800767a:	b084      	sub	sp, #16
 800767c:	af00      	add	r7, sp, #0
 800767e:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_header._M_left); }
 8007680:	687b      	ldr	r3, [r7, #4]
 8007682:	68da      	ldr	r2, [r3, #12]
 8007684:	f107 030c 	add.w	r3, r7, #12
 8007688:	4611      	mov	r1, r2
 800768a:	4618      	mov	r0, r3
 800768c:	f7fd fe28 	bl	80052e0 <_ZNSt17_Rb_tree_iteratorISt4pairIKc10token_typeEEC1EPSt18_Rb_tree_node_base>
 8007690:	68fb      	ldr	r3, [r7, #12]
 8007692:	4618      	mov	r0, r3
 8007694:	3710      	adds	r7, #16
 8007696:	46bd      	mov	sp, r7
 8007698:	bd80      	pop	{r7, pc}

0800769a <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKc10token_typeEES6_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 800769a:	b480      	push	{r7}
 800769c:	b083      	sub	sp, #12
 800769e:	af00      	add	r7, sp, #0
 80076a0:	6078      	str	r0, [r7, #4]
 80076a2:	6039      	str	r1, [r7, #0]
      { return __x._M_node == __y._M_node; }
 80076a4:	687b      	ldr	r3, [r7, #4]
 80076a6:	681a      	ldr	r2, [r3, #0]
 80076a8:	683b      	ldr	r3, [r7, #0]
 80076aa:	681b      	ldr	r3, [r3, #0]
 80076ac:	429a      	cmp	r2, r3
 80076ae:	bf0c      	ite	eq
 80076b0:	2301      	moveq	r3, #1
 80076b2:	2300      	movne	r3, #0
 80076b4:	b2db      	uxtb	r3, r3
 80076b6:	4618      	mov	r0, r3
 80076b8:	370c      	adds	r7, #12
 80076ba:	46bd      	mov	sp, r7
 80076bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80076c0:	4770      	bx	lr

080076c2 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKc10token_typeEERS1_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 80076c2:	b580      	push	{r7, lr}
 80076c4:	b084      	sub	sp, #16
 80076c6:	af00      	add	r7, sp, #0
 80076c8:	60f8      	str	r0, [r7, #12]
 80076ca:	60b9      	str	r1, [r7, #8]
 80076cc:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 80076ce:	68b8      	ldr	r0, [r7, #8]
 80076d0:	f000 fe9d 	bl	800840e <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKc10token_typeEEEOT_RNSt16remove_referenceIS8_E4typeE>
 80076d4:	4603      	mov	r3, r0
 80076d6:	681a      	ldr	r2, [r3, #0]
 80076d8:	68fb      	ldr	r3, [r7, #12]
 80076da:	601a      	str	r2, [r3, #0]
 80076dc:	6878      	ldr	r0, [r7, #4]
 80076de:	f7ff ffc0 	bl	8007662 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
 80076e2:	4603      	mov	r3, r0
 80076e4:	681a      	ldr	r2, [r3, #0]
 80076e6:	68fb      	ldr	r3, [r7, #12]
 80076e8:	605a      	str	r2, [r3, #4]
 80076ea:	68fb      	ldr	r3, [r7, #12]
 80076ec:	4618      	mov	r0, r3
 80076ee:	3710      	adds	r7, #16
 80076f0:	46bd      	mov	sp, r7
 80076f2:	bd80      	pop	{r7, pc}

080076f4 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_create_nodeIJRKS3_EEEPSt13_Rb_tree_nodeIS3_EDpOT_>:
	_M_create_node(_Args&&... __args)
 80076f4:	b580      	push	{r7, lr}
 80076f6:	b084      	sub	sp, #16
 80076f8:	af00      	add	r7, sp, #0
 80076fa:	6078      	str	r0, [r7, #4]
 80076fc:	6039      	str	r1, [r7, #0]
	  _Link_type __tmp = _M_get_node();
 80076fe:	6878      	ldr	r0, [r7, #4]
 8007700:	f000 fe90 	bl	8008424 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_get_nodeEv>
 8007704:	60f8      	str	r0, [r7, #12]
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
 8007706:	6838      	ldr	r0, [r7, #0]
 8007708:	f7fd ff28 	bl	800555c <_ZSt7forwardIRKSt4pairIKc10token_typeEEOT_RNSt16remove_referenceIS6_E4typeE>
 800770c:	4603      	mov	r3, r0
 800770e:	461a      	mov	r2, r3
 8007710:	68f9      	ldr	r1, [r7, #12]
 8007712:	6878      	ldr	r0, [r7, #4]
 8007714:	f000 fe97 	bl	8008446 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE17_M_construct_nodeIJRKS3_EEEvPSt13_Rb_tree_nodeIS3_EDpOT_>
	  return __tmp;
 8007718:	68fb      	ldr	r3, [r7, #12]
	}
 800771a:	4618      	mov	r0, r3
 800771c:	3710      	adds	r7, #16
 800771e:	46bd      	mov	sp, r7
 8007720:	bd80      	pop	{r7, pc}

08007722 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE21_M_get_Node_allocatorEv>:
      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
 8007722:	b480      	push	{r7}
 8007724:	b083      	sub	sp, #12
 8007726:	af00      	add	r7, sp, #0
 8007728:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 800772a:	687b      	ldr	r3, [r7, #4]
 800772c:	4618      	mov	r0, r3
 800772e:	370c      	adds	r7, #12
 8007730:	46bd      	mov	sp, r7
 8007732:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007736:	4770      	bx	lr

08007738 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE9_M_valptrEv>:
      _M_valptr()
 8007738:	b580      	push	{r7, lr}
 800773a:	b082      	sub	sp, #8
 800773c:	af00      	add	r7, sp, #0
 800773e:	6078      	str	r0, [r7, #4]
      { return _M_storage._M_ptr(); }
 8007740:	687b      	ldr	r3, [r7, #4]
 8007742:	3310      	adds	r3, #16
 8007744:	4618      	mov	r0, r3
 8007746:	f000 fe9e 	bl	8008486 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE6_M_ptrEv>
 800774a:	4603      	mov	r3, r0
 800774c:	4618      	mov	r0, r3
 800774e:	3708      	adds	r7, #8
 8007750:	46bd      	mov	sp, r7
 8007752:	bd80      	pop	{r7, pc}

08007754 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEE7destroyISA_EEvRSC_PT_>:
	destroy(allocator_type& __a, _Up* __p)
 8007754:	b580      	push	{r7, lr}
 8007756:	b082      	sub	sp, #8
 8007758:	af00      	add	r7, sp, #0
 800775a:	6078      	str	r0, [r7, #4]
 800775c:	6039      	str	r1, [r7, #0]
	{ __a.destroy(__p); }
 800775e:	6839      	ldr	r1, [r7, #0]
 8007760:	6878      	ldr	r0, [r7, #4]
 8007762:	f000 fe9c 	bl	800849e <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEE7destroyISB_EEvPT_>
 8007766:	bf00      	nop
 8007768:	3708      	adds	r7, #8
 800776a:	46bd      	mov	sp, r7
 800776c:	bd80      	pop	{r7, pc}

0800776e <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEE10deallocateERSC_PSB_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 800776e:	b580      	push	{r7, lr}
 8007770:	b084      	sub	sp, #16
 8007772:	af00      	add	r7, sp, #0
 8007774:	60f8      	str	r0, [r7, #12]
 8007776:	60b9      	str	r1, [r7, #8]
 8007778:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 800777a:	687a      	ldr	r2, [r7, #4]
 800777c:	68b9      	ldr	r1, [r7, #8]
 800777e:	68f8      	ldr	r0, [r7, #12]
 8007780:	f000 fe99 	bl	80084b6 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEE10deallocateEPSC_j>
 8007784:	bf00      	nop
 8007786:	3710      	adds	r7, #16
 8007788:	46bd      	mov	sp, r7
 800778a:	bd80      	pop	{r7, pc}

0800778c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt13_Rb_tree_nodeIS9_E>:
      _S_key(_Const_Link_type __x)
 800778c:	b580      	push	{r7, lr}
 800778e:	b084      	sub	sp, #16
 8007790:	af00      	add	r7, sp, #0
 8007792:	6078      	str	r0, [r7, #4]
	return _KeyOfValue()(*__x->_M_valptr());
 8007794:	6878      	ldr	r0, [r7, #4]
 8007796:	f000 fe9a 	bl	80084ce <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE9_M_valptrEv>
 800779a:	4602      	mov	r2, r0
 800779c:	f107 030c 	add.w	r3, r7, #12
 80077a0:	4611      	mov	r1, r2
 80077a2:	4618      	mov	r0, r3
 80077a4:	f7fe f8c4 	bl	8005930 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEclERKS9_>
 80077a8:	4603      	mov	r3, r0
      }
 80077aa:	4618      	mov	r0, r3
 80077ac:	3710      	adds	r7, #16
 80077ae:	46bd      	mov	sp, r7
 80077b0:	bd80      	pop	{r7, pc}

080077b2 <_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>:
   *  @param __rhs  Second string.
   *  @return  True if @a __lhs precedes @a __rhs.  False otherwise.
   */
  template<typename _CharT, typename _Traits, typename _Alloc>
    inline bool
    operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
 80077b2:	b580      	push	{r7, lr}
 80077b4:	b082      	sub	sp, #8
 80077b6:	af00      	add	r7, sp, #0
 80077b8:	6078      	str	r0, [r7, #4]
 80077ba:	6039      	str	r1, [r7, #0]
	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.compare(__rhs) < 0; }
 80077bc:	6839      	ldr	r1, [r7, #0]
 80077be:	6878      	ldr	r0, [r7, #4]
 80077c0:	f01c fae6 	bl	8023d90 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_>
 80077c4:	4603      	mov	r3, r0
 80077c6:	0fdb      	lsrs	r3, r3, #31
 80077c8:	b2db      	uxtb	r3, r3
 80077ca:	4618      	mov	r0, r3
 80077cc:	3708      	adds	r7, #8
 80077ce:	46bd      	mov	sp, r7
 80077d0:	bd80      	pop	{r7, pc}

080077d2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 80077d2:	b580      	push	{r7, lr}
 80077d4:	b084      	sub	sp, #16
 80077d6:	af00      	add	r7, sp, #0
 80077d8:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_header._M_left); }
 80077da:	687b      	ldr	r3, [r7, #4]
 80077dc:	68da      	ldr	r2, [r3, #12]
 80077de:	f107 030c 	add.w	r3, r7, #12
 80077e2:	4611      	mov	r1, r2
 80077e4:	4618      	mov	r0, r3
 80077e6:	f7fd ff71 	bl	80056cc <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1EPSt18_Rb_tree_node_base>
 80077ea:	68fb      	ldr	r3, [r7, #12]
 80077ec:	4618      	mov	r0, r3
 80077ee:	3710      	adds	r7, #16
 80077f0:	46bd      	mov	sp, r7
 80077f2:	bd80      	pop	{r7, pc}

080077f4 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEESC_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 80077f4:	b480      	push	{r7}
 80077f6:	b083      	sub	sp, #12
 80077f8:	af00      	add	r7, sp, #0
 80077fa:	6078      	str	r0, [r7, #4]
 80077fc:	6039      	str	r1, [r7, #0]
      { return __x._M_node == __y._M_node; }
 80077fe:	687b      	ldr	r3, [r7, #4]
 8007800:	681a      	ldr	r2, [r3, #0]
 8007802:	683b      	ldr	r3, [r7, #0]
 8007804:	681b      	ldr	r3, [r3, #0]
 8007806:	429a      	cmp	r2, r3
 8007808:	bf0c      	ite	eq
 800780a:	2301      	moveq	r3, #1
 800780c:	2300      	movne	r3, #0
 800780e:	b2db      	uxtb	r3, r3
 8007810:	4618      	mov	r0, r3
 8007812:	370c      	adds	r7, #12
 8007814:	46bd      	mov	sp, r7
 8007816:	f85d 7b04 	ldr.w	r7, [sp], #4
 800781a:	4770      	bx	lr

0800781c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEERS1_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 800781c:	b580      	push	{r7, lr}
 800781e:	b084      	sub	sp, #16
 8007820:	af00      	add	r7, sp, #0
 8007822:	60f8      	str	r0, [r7, #12]
 8007824:	60b9      	str	r1, [r7, #8]
 8007826:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 8007828:	68b8      	ldr	r0, [r7, #8]
 800782a:	f000 fe5e 	bl	80084ea <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEOT_RNSt16remove_referenceISE_E4typeE>
 800782e:	4603      	mov	r3, r0
 8007830:	681a      	ldr	r2, [r3, #0]
 8007832:	68fb      	ldr	r3, [r7, #12]
 8007834:	601a      	str	r2, [r3, #0]
 8007836:	6878      	ldr	r0, [r7, #4]
 8007838:	f7ff ff13 	bl	8007662 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
 800783c:	4603      	mov	r3, r0
 800783e:	681a      	ldr	r2, [r3, #0]
 8007840:	68fb      	ldr	r3, [r7, #12]
 8007842:	605a      	str	r2, [r3, #4]
 8007844:	68fb      	ldr	r3, [r7, #12]
 8007846:	4618      	mov	r0, r3
 8007848:	3710      	adds	r7, #16
 800784a:	46bd      	mov	sp, r7
 800784c:	bd80      	pop	{r7, pc}

0800784e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_create_nodeIJRKS9_EEEPSt13_Rb_tree_nodeIS9_EDpOT_>:
	_M_create_node(_Args&&... __args)
 800784e:	b580      	push	{r7, lr}
 8007850:	b084      	sub	sp, #16
 8007852:	af00      	add	r7, sp, #0
 8007854:	6078      	str	r0, [r7, #4]
 8007856:	6039      	str	r1, [r7, #0]
	  _Link_type __tmp = _M_get_node();
 8007858:	6878      	ldr	r0, [r7, #4]
 800785a:	f000 fe51 	bl	8008500 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_get_nodeEv>
 800785e:	60f8      	str	r0, [r7, #12]
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
 8007860:	6838      	ldr	r0, [r7, #0]
 8007862:	f7fe f871 	bl	8005948 <_ZSt7forwardIRKSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEOT_RNSt16remove_referenceISC_E4typeE>
 8007866:	4603      	mov	r3, r0
 8007868:	461a      	mov	r2, r3
 800786a:	68f9      	ldr	r1, [r7, #12]
 800786c:	6878      	ldr	r0, [r7, #4]
 800786e:	f000 fe58 	bl	8008522 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE17_M_construct_nodeIJRKS9_EEEvPSt13_Rb_tree_nodeIS9_EDpOT_>
	  return __tmp;
 8007872:	68fb      	ldr	r3, [r7, #12]
	}
 8007874:	4618      	mov	r0, r3
 8007876:	3710      	adds	r7, #16
 8007878:	46bd      	mov	sp, r7
 800787a:	bd80      	pop	{r7, pc}

0800787c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE21_M_get_Node_allocatorEv>:
      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
 800787c:	b480      	push	{r7}
 800787e:	b083      	sub	sp, #12
 8007880:	af00      	add	r7, sp, #0
 8007882:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 8007884:	687b      	ldr	r3, [r7, #4]
 8007886:	4618      	mov	r0, r3
 8007888:	370c      	adds	r7, #12
 800788a:	46bd      	mov	sp, r7
 800788c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007890:	4770      	bx	lr

08007892 <_ZNSt13_Rb_tree_nodeISt4pairIKc12double_tokenEE9_M_valptrEv>:
      _M_valptr()
 8007892:	b580      	push	{r7, lr}
 8007894:	b082      	sub	sp, #8
 8007896:	af00      	add	r7, sp, #0
 8007898:	6078      	str	r0, [r7, #4]
      { return _M_storage._M_ptr(); }
 800789a:	687b      	ldr	r3, [r7, #4]
 800789c:	3310      	adds	r3, #16
 800789e:	4618      	mov	r0, r3
 80078a0:	f000 fe5f 	bl	8008562 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKc12double_tokenEE6_M_ptrEv>
 80078a4:	4603      	mov	r3, r0
 80078a6:	4618      	mov	r0, r3
 80078a8:	3708      	adds	r7, #8
 80078aa:	46bd      	mov	sp, r7
 80078ac:	bd80      	pop	{r7, pc}

080078ae <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEE7destroyIS4_EEvRS6_PT_>:
	destroy(allocator_type& __a, _Up* __p)
 80078ae:	b580      	push	{r7, lr}
 80078b0:	b082      	sub	sp, #8
 80078b2:	af00      	add	r7, sp, #0
 80078b4:	6078      	str	r0, [r7, #4]
 80078b6:	6039      	str	r1, [r7, #0]
	{ __a.destroy(__p); }
 80078b8:	6839      	ldr	r1, [r7, #0]
 80078ba:	6878      	ldr	r0, [r7, #4]
 80078bc:	f000 fe5d 	bl	800857a <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEE7destroyIS5_EEvPT_>
 80078c0:	bf00      	nop
 80078c2:	3708      	adds	r7, #8
 80078c4:	46bd      	mov	sp, r7
 80078c6:	bd80      	pop	{r7, pc}

080078c8 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEE10deallocateERS6_PS5_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 80078c8:	b580      	push	{r7, lr}
 80078ca:	b084      	sub	sp, #16
 80078cc:	af00      	add	r7, sp, #0
 80078ce:	60f8      	str	r0, [r7, #12]
 80078d0:	60b9      	str	r1, [r7, #8]
 80078d2:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 80078d4:	687a      	ldr	r2, [r7, #4]
 80078d6:	68b9      	ldr	r1, [r7, #8]
 80078d8:	68f8      	ldr	r0, [r7, #12]
 80078da:	f000 fe59 	bl	8008590 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEE10deallocateEPS6_j>
 80078de:	bf00      	nop
 80078e0:	3710      	adds	r7, #16
 80078e2:	46bd      	mov	sp, r7
 80078e4:	bd80      	pop	{r7, pc}

080078e6 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt13_Rb_tree_nodeIS3_E>:
      _S_key(_Const_Link_type __x)
 80078e6:	b580      	push	{r7, lr}
 80078e8:	b084      	sub	sp, #16
 80078ea:	af00      	add	r7, sp, #0
 80078ec:	6078      	str	r0, [r7, #4]
	return _KeyOfValue()(*__x->_M_valptr());
 80078ee:	6878      	ldr	r0, [r7, #4]
 80078f0:	f000 fe5a 	bl	80085a8 <_ZNKSt13_Rb_tree_nodeISt4pairIKc12double_tokenEE9_M_valptrEv>
 80078f4:	4602      	mov	r2, r0
 80078f6:	f107 030c 	add.w	r3, r7, #12
 80078fa:	4611      	mov	r1, r2
 80078fc:	4618      	mov	r0, r3
 80078fe:	f7fe fa01 	bl	8005d04 <_ZNKSt10_Select1stISt4pairIKc12double_tokenEEclERKS3_>
 8007902:	4603      	mov	r3, r0
      }
 8007904:	4618      	mov	r0, r3
 8007906:	3710      	adds	r7, #16
 8007908:	46bd      	mov	sp, r7
 800790a:	bd80      	pop	{r7, pc}

0800790c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 800790c:	b580      	push	{r7, lr}
 800790e:	b084      	sub	sp, #16
 8007910:	af00      	add	r7, sp, #0
 8007912:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_header._M_left); }
 8007914:	687b      	ldr	r3, [r7, #4]
 8007916:	68da      	ldr	r2, [r3, #12]
 8007918:	f107 030c 	add.w	r3, r7, #12
 800791c:	4611      	mov	r1, r2
 800791e:	4618      	mov	r0, r3
 8007920:	f7fe f8be 	bl	8005aa0 <_ZNSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEEC1EPSt18_Rb_tree_node_base>
 8007924:	68fb      	ldr	r3, [r7, #12]
 8007926:	4618      	mov	r0, r3
 8007928:	3710      	adds	r7, #16
 800792a:	46bd      	mov	sp, r7
 800792c:	bd80      	pop	{r7, pc}

0800792e <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEES6_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 800792e:	b480      	push	{r7}
 8007930:	b083      	sub	sp, #12
 8007932:	af00      	add	r7, sp, #0
 8007934:	6078      	str	r0, [r7, #4]
 8007936:	6039      	str	r1, [r7, #0]
      { return __x._M_node == __y._M_node; }
 8007938:	687b      	ldr	r3, [r7, #4]
 800793a:	681a      	ldr	r2, [r3, #0]
 800793c:	683b      	ldr	r3, [r7, #0]
 800793e:	681b      	ldr	r3, [r3, #0]
 8007940:	429a      	cmp	r2, r3
 8007942:	bf0c      	ite	eq
 8007944:	2301      	moveq	r3, #1
 8007946:	2300      	movne	r3, #0
 8007948:	b2db      	uxtb	r3, r3
 800794a:	4618      	mov	r0, r3
 800794c:	370c      	adds	r7, #12
 800794e:	46bd      	mov	sp, r7
 8007950:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007954:	4770      	bx	lr

08007956 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKc12double_tokenEERS1_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 8007956:	b580      	push	{r7, lr}
 8007958:	b084      	sub	sp, #16
 800795a:	af00      	add	r7, sp, #0
 800795c:	60f8      	str	r0, [r7, #12]
 800795e:	60b9      	str	r1, [r7, #8]
 8007960:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 8007962:	68b8      	ldr	r0, [r7, #8]
 8007964:	f000 fe2e 	bl	80085c4 <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEOT_RNSt16remove_referenceIS8_E4typeE>
 8007968:	4603      	mov	r3, r0
 800796a:	681a      	ldr	r2, [r3, #0]
 800796c:	68fb      	ldr	r3, [r7, #12]
 800796e:	601a      	str	r2, [r3, #0]
 8007970:	6878      	ldr	r0, [r7, #4]
 8007972:	f7ff fe76 	bl	8007662 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
 8007976:	4603      	mov	r3, r0
 8007978:	681a      	ldr	r2, [r3, #0]
 800797a:	68fb      	ldr	r3, [r7, #12]
 800797c:	605a      	str	r2, [r3, #4]
 800797e:	68fb      	ldr	r3, [r7, #12]
 8007980:	4618      	mov	r0, r3
 8007982:	3710      	adds	r7, #16
 8007984:	46bd      	mov	sp, r7
 8007986:	bd80      	pop	{r7, pc}

08007988 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_create_nodeIJRKS3_EEEPSt13_Rb_tree_nodeIS3_EDpOT_>:
	_M_create_node(_Args&&... __args)
 8007988:	b580      	push	{r7, lr}
 800798a:	b084      	sub	sp, #16
 800798c:	af00      	add	r7, sp, #0
 800798e:	6078      	str	r0, [r7, #4]
 8007990:	6039      	str	r1, [r7, #0]
	  _Link_type __tmp = _M_get_node();
 8007992:	6878      	ldr	r0, [r7, #4]
 8007994:	f000 fe21 	bl	80085da <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_get_nodeEv>
 8007998:	60f8      	str	r0, [r7, #12]
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
 800799a:	6838      	ldr	r0, [r7, #0]
 800799c:	f7fe f9be 	bl	8005d1c <_ZSt7forwardIRKSt4pairIKc12double_tokenEEOT_RNSt16remove_referenceIS6_E4typeE>
 80079a0:	4603      	mov	r3, r0
 80079a2:	461a      	mov	r2, r3
 80079a4:	68f9      	ldr	r1, [r7, #12]
 80079a6:	6878      	ldr	r0, [r7, #4]
 80079a8:	f000 fe28 	bl	80085fc <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE17_M_construct_nodeIJRKS3_EEEvPSt13_Rb_tree_nodeIS3_EDpOT_>
	  return __tmp;
 80079ac:	68fb      	ldr	r3, [r7, #12]
	}
 80079ae:	4618      	mov	r0, r3
 80079b0:	3710      	adds	r7, #16
 80079b2:	46bd      	mov	sp, r7
 80079b4:	bd80      	pop	{r7, pc}

080079b6 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE13_M_reset_implEvENUlOT_E_clIRiEENS0_16__variant_cookieESE_>:
	__do_visit([](auto&& __this_mem) mutable
 80079b6:	b590      	push	{r4, r7, lr}
 80079b8:	b083      	sub	sp, #12
 80079ba:	af00      	add	r7, sp, #0
 80079bc:	6078      	str	r0, [r7, #4]
 80079be:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 80079c0:	6838      	ldr	r0, [r7, #0]
 80079c2:	f000 fe3b 	bl	800863c <_ZSt11__addressofIiEPT_RS0_>
 80079c6:	4603      	mov	r3, r0
 80079c8:	4618      	mov	r0, r3
 80079ca:	f000 fe42 	bl	8008652 <_ZSt8_DestroyIiEvPT_>
	    return {};
 80079ce:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 80079d0:	4618      	mov	r0, r3
 80079d2:	370c      	adds	r7, #12
 80079d4:	46bd      	mov	sp, r7
 80079d6:	bd90      	pop	{r4, r7, pc}

080079d8 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE13_M_reset_implEvENUlOT_E_clIRfEENS0_16__variant_cookieESE_>:
 80079d8:	b590      	push	{r4, r7, lr}
 80079da:	b083      	sub	sp, #12
 80079dc:	af00      	add	r7, sp, #0
 80079de:	6078      	str	r0, [r7, #4]
 80079e0:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 80079e2:	6838      	ldr	r0, [r7, #0]
 80079e4:	f000 fe3f 	bl	8008666 <_ZSt11__addressofIfEPT_RS0_>
 80079e8:	4603      	mov	r3, r0
 80079ea:	4618      	mov	r0, r3
 80079ec:	f000 fe46 	bl	800867c <_ZSt8_DestroyIfEvPT_>
	    return {};
 80079f0:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 80079f2:	4618      	mov	r0, r3
 80079f4:	370c      	adds	r7, #12
 80079f6:	46bd      	mov	sp, r7
 80079f8:	bd90      	pop	{r4, r7, pc}

080079fa <_ZZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE13_M_reset_implEvENUlOT_E_clIRbEENS0_16__variant_cookieESE_>:
 80079fa:	b590      	push	{r4, r7, lr}
 80079fc:	b083      	sub	sp, #12
 80079fe:	af00      	add	r7, sp, #0
 8007a00:	6078      	str	r0, [r7, #4]
 8007a02:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 8007a04:	6838      	ldr	r0, [r7, #0]
 8007a06:	f000 fe43 	bl	8008690 <_ZSt11__addressofIbEPT_RS0_>
 8007a0a:	4603      	mov	r3, r0
 8007a0c:	4618      	mov	r0, r3
 8007a0e:	f000 fe4a 	bl	80086a6 <_ZSt8_DestroyIbEvPT_>
	    return {};
 8007a12:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 8007a14:	4618      	mov	r0, r3
 8007a16:	370c      	adds	r7, #12
 8007a18:	46bd      	mov	sp, r7
 8007a1a:	bd90      	pop	{r4, r7, pc}

08007a1c <_ZZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE13_M_reset_implEvENUlOT_E_clIRS7_EENS0_16__variant_cookieESE_>:
 8007a1c:	b590      	push	{r4, r7, lr}
 8007a1e:	b083      	sub	sp, #12
 8007a20:	af00      	add	r7, sp, #0
 8007a22:	6078      	str	r0, [r7, #4]
 8007a24:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 8007a26:	6838      	ldr	r0, [r7, #0]
 8007a28:	f000 fe47 	bl	80086ba <_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_>
 8007a2c:	4603      	mov	r3, r0
 8007a2e:	4618      	mov	r0, r3
 8007a30:	f000 fe4e 	bl	80086d0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_>
	    return {};
 8007a34:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 8007a36:	4618      	mov	r0, r3
 8007a38:	370c      	adds	r7, #12
 8007a3a:	46bd      	mov	sp, r7
 8007a3c:	bd90      	pop	{r4, r7, pc}

08007a3e <_ZZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE13_M_reset_implEvENUlOT_E_clIRSB_EENS0_16__variant_cookieESE_>:
 8007a3e:	b590      	push	{r4, r7, lr}
 8007a40:	b083      	sub	sp, #12
 8007a42:	af00      	add	r7, sp, #0
 8007a44:	6078      	str	r0, [r7, #4]
 8007a46:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 8007a48:	6838      	ldr	r0, [r7, #0]
 8007a4a:	f000 fe4c 	bl	80086e6 <_ZSt11__addressofISt6vectorI6SymbolSaIS1_EEEPT_RS4_>
 8007a4e:	4603      	mov	r3, r0
 8007a50:	4618      	mov	r0, r3
 8007a52:	f000 fe53 	bl	80086fc <_ZSt8_DestroyISt6vectorI6SymbolSaIS1_EEEvPT_>
	    return {};
 8007a56:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 8007a58:	4618      	mov	r0, r3
 8007a5a:	370c      	adds	r7, #12
 8007a5c:	46bd      	mov	sp, r7
 8007a5e:	bd90      	pop	{r4, r7, pc}

08007a60 <_ZNSt8__detail9__variant15_Variadic_unionIJSt6vectorI6SymbolSaIS3_EEEEC1Ev>:
      constexpr _Variadic_union() : _M_rest() { }
 8007a60:	b480      	push	{r7}
 8007a62:	b083      	sub	sp, #12
 8007a64:	af00      	add	r7, sp, #0
 8007a66:	6078      	str	r0, [r7, #4]
 8007a68:	687b      	ldr	r3, [r7, #4]
 8007a6a:	4618      	mov	r0, r3
 8007a6c:	370c      	adds	r7, #12
 8007a6e:	46bd      	mov	sp, r7
 8007a70:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007a74:	4770      	bx	lr

08007a76 <_ZSt7forwardIRNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8007a76:	b480      	push	{r7}
 8007a78:	b083      	sub	sp, #12
 8007a7a:	af00      	add	r7, sp, #0
 8007a7c:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8007a7e:	687b      	ldr	r3, [r7, #4]
 8007a80:	4618      	mov	r0, r3
 8007a82:	370c      	adds	r7, #12
 8007a84:	46bd      	mov	sp, r7
 8007a86:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007a8a:	4770      	bx	lr

08007a8c <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEPT_RSE_>:
   *  @param  __r  Reference to an object or function.
   *  @return   The actual address.
  */
  template<typename _Tp>
    inline _GLIBCXX17_CONSTEXPR _Tp*
    addressof(_Tp& __r) noexcept
 8007a8c:	b580      	push	{r7, lr}
 8007a8e:	b082      	sub	sp, #8
 8007a90:	af00      	add	r7, sp, #0
 8007a92:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 8007a94:	6878      	ldr	r0, [r7, #4]
 8007a96:	f000 f805 	bl	8007aa4 <_ZSt11__addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEPT_RSE_>
 8007a9a:	4603      	mov	r3, r0
 8007a9c:	4618      	mov	r0, r3
 8007a9e:	3708      	adds	r7, #8
 8007aa0:	46bd      	mov	sp, r7
 8007aa2:	bd80      	pop	{r7, pc}

08007aa4 <_ZSt11__addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEPT_RSE_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 8007aa4:	b480      	push	{r7}
 8007aa6:	b083      	sub	sp, #12
 8007aa8:	af00      	add	r7, sp, #0
 8007aaa:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 8007aac:	687b      	ldr	r3, [r7, #4]
 8007aae:	4618      	mov	r0, r3
 8007ab0:	370c      	adds	r7, #12
 8007ab2:	46bd      	mov	sp, r7
 8007ab4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007ab8:	4770      	bx	lr

08007aba <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEERKiEEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 8007aba:	b590      	push	{r4, r7, lr}
 8007abc:	b085      	sub	sp, #20
 8007abe:	af00      	add	r7, sp, #0
 8007ac0:	6078      	str	r0, [r7, #4]
 8007ac2:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 8007ac4:	687b      	ldr	r3, [r7, #4]
 8007ac6:	4618      	mov	r0, r3
 8007ac8:	f7ff ffe0 	bl	8007a8c <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEPT_RSE_>
 8007acc:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 8007ace:	6838      	ldr	r0, [r7, #0]
 8007ad0:	f7fd fa61 	bl	8004f96 <_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE>
 8007ad4:	4603      	mov	r3, r0
        ::new (__storage)
 8007ad6:	681c      	ldr	r4, [r3, #0]
 8007ad8:	68fb      	ldr	r3, [r7, #12]
 8007ada:	4619      	mov	r1, r3
 8007adc:	2004      	movs	r0, #4
 8007ade:	f7f9 fabc 	bl	800105a <_ZnwjPv>
 8007ae2:	4603      	mov	r3, r0
 8007ae4:	601c      	str	r4, [r3, #0]
    }
 8007ae6:	bf00      	nop
 8007ae8:	3714      	adds	r7, #20
 8007aea:	46bd      	mov	sp, r7
 8007aec:	bd90      	pop	{r4, r7, pc}

08007aee <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEERKfEEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 8007aee:	b590      	push	{r4, r7, lr}
 8007af0:	b085      	sub	sp, #20
 8007af2:	af00      	add	r7, sp, #0
 8007af4:	6078      	str	r0, [r7, #4]
 8007af6:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 8007af8:	687b      	ldr	r3, [r7, #4]
 8007afa:	4618      	mov	r0, r3
 8007afc:	f7ff ffc6 	bl	8007a8c <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEPT_RSE_>
 8007b00:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 8007b02:	6838      	ldr	r0, [r7, #0]
 8007b04:	f7fd fa70 	bl	8004fe8 <_ZSt7forwardIRKfEOT_RNSt16remove_referenceIS2_E4typeE>
 8007b08:	4603      	mov	r3, r0
        ::new (__storage)
 8007b0a:	681c      	ldr	r4, [r3, #0]
 8007b0c:	68fb      	ldr	r3, [r7, #12]
 8007b0e:	4619      	mov	r1, r3
 8007b10:	2004      	movs	r0, #4
 8007b12:	f7f9 faa2 	bl	800105a <_ZnwjPv>
 8007b16:	4603      	mov	r3, r0
 8007b18:	601c      	str	r4, [r3, #0]
    }
 8007b1a:	bf00      	nop
 8007b1c:	3714      	adds	r7, #20
 8007b1e:	46bd      	mov	sp, r7
 8007b20:	bd90      	pop	{r4, r7, pc}

08007b22 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEERKbEEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 8007b22:	b590      	push	{r4, r7, lr}
 8007b24:	b085      	sub	sp, #20
 8007b26:	af00      	add	r7, sp, #0
 8007b28:	6078      	str	r0, [r7, #4]
 8007b2a:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 8007b2c:	687b      	ldr	r3, [r7, #4]
 8007b2e:	4618      	mov	r0, r3
 8007b30:	f7ff ffac 	bl	8007a8c <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEPT_RSE_>
 8007b34:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 8007b36:	6838      	ldr	r0, [r7, #0]
 8007b38:	f7fd fa7f 	bl	800503a <_ZSt7forwardIRKbEOT_RNSt16remove_referenceIS2_E4typeE>
 8007b3c:	4603      	mov	r3, r0
        ::new (__storage)
 8007b3e:	781c      	ldrb	r4, [r3, #0]
 8007b40:	68fb      	ldr	r3, [r7, #12]
 8007b42:	4619      	mov	r1, r3
 8007b44:	2001      	movs	r0, #1
 8007b46:	f7f9 fa88 	bl	800105a <_ZnwjPv>
 8007b4a:	4603      	mov	r3, r0
 8007b4c:	4622      	mov	r2, r4
 8007b4e:	701a      	strb	r2, [r3, #0]
    }
 8007b50:	bf00      	nop
 8007b52:	3714      	adds	r7, #20
 8007b54:	46bd      	mov	sp, r7
 8007b56:	bd90      	pop	{r4, r7, pc}

08007b58 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEERKS8_EEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 8007b58:	b590      	push	{r4, r7, lr}
 8007b5a:	b085      	sub	sp, #20
 8007b5c:	af00      	add	r7, sp, #0
 8007b5e:	6078      	str	r0, [r7, #4]
 8007b60:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 8007b62:	687b      	ldr	r3, [r7, #4]
 8007b64:	4618      	mov	r0, r3
 8007b66:	f7ff ff91 	bl	8007a8c <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEPT_RSE_>
 8007b6a:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 8007b6c:	6838      	ldr	r0, [r7, #0]
 8007b6e:	f7fd fa99 	bl	80050a4 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 8007b72:	4604      	mov	r4, r0
        ::new (__storage)
 8007b74:	68fb      	ldr	r3, [r7, #12]
 8007b76:	4619      	mov	r1, r3
 8007b78:	2018      	movs	r0, #24
 8007b7a:	f7f9 fa6e 	bl	800105a <_ZnwjPv>
 8007b7e:	4603      	mov	r3, r0
 8007b80:	4621      	mov	r1, r4
 8007b82:	4618      	mov	r0, r3
 8007b84:	f01c f928 	bl	8023dd8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
    }
 8007b88:	bf00      	nop
 8007b8a:	3714      	adds	r7, #20
 8007b8c:	46bd      	mov	sp, r7
 8007b8e:	bd90      	pop	{r4, r7, pc}

08007b90 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEERKSC_EEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 8007b90:	b590      	push	{r4, r7, lr}
 8007b92:	b085      	sub	sp, #20
 8007b94:	af00      	add	r7, sp, #0
 8007b96:	6078      	str	r0, [r7, #4]
 8007b98:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 8007b9a:	687b      	ldr	r3, [r7, #4]
 8007b9c:	4618      	mov	r0, r3
 8007b9e:	f7ff ff75 	bl	8007a8c <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEPT_RSE_>
 8007ba2:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 8007ba4:	6838      	ldr	r0, [r7, #0]
 8007ba6:	f7fd fab2 	bl	800510e <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>
 8007baa:	4604      	mov	r4, r0
        ::new (__storage)
 8007bac:	68fb      	ldr	r3, [r7, #12]
 8007bae:	4619      	mov	r1, r3
 8007bb0:	200c      	movs	r0, #12
 8007bb2:	f7f9 fa52 	bl	800105a <_ZnwjPv>
 8007bb6:	4603      	mov	r3, r0
 8007bb8:	4621      	mov	r1, r4
 8007bba:	4618      	mov	r0, r3
 8007bbc:	f000 fda9 	bl	8008712 <_ZNSt6vectorI6SymbolSaIS0_EEC1ERKS2_>
    }
 8007bc0:	bf00      	nop
 8007bc2:	3714      	adds	r7, #20
 8007bc4:	46bd      	mov	sp, r7
 8007bc6:	bd90      	pop	{r4, r7, pc}

08007bc8 <_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8007bc8:	b480      	push	{r7}
 8007bca:	b083      	sub	sp, #12
 8007bcc:	af00      	add	r7, sp, #0
 8007bce:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8007bd0:	687b      	ldr	r3, [r7, #4]
 8007bd2:	4618      	mov	r0, r3
 8007bd4:	370c      	adds	r7, #12
 8007bd6:	46bd      	mov	sp, r7
 8007bd8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007bdc:	4770      	bx	lr

08007bde <_ZSt28__variant_construct_by_indexILj0ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEJiEEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 8007bde:	b590      	push	{r4, r7, lr}
 8007be0:	b085      	sub	sp, #20
 8007be2:	af00      	add	r7, sp, #0
 8007be4:	6078      	str	r0, [r7, #4]
 8007be6:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 8007be8:	687b      	ldr	r3, [r7, #4]
 8007bea:	2200      	movs	r2, #0
 8007bec:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 8007bee:	6878      	ldr	r0, [r7, #4]
 8007bf0:	f7fa f9e7 	bl	8001fc2 <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8007bf4:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 8007bf6:	6838      	ldr	r0, [r7, #0]
 8007bf8:	f7ff ffe6 	bl	8007bc8 <_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE>
 8007bfc:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 8007bfe:	681c      	ldr	r4, [r3, #0]
 8007c00:	68f8      	ldr	r0, [r7, #12]
 8007c02:	f000 fdc3 	bl	800878c <_ZSt9addressofIiEPT_RS0_>
 8007c06:	4603      	mov	r3, r0
 8007c08:	4619      	mov	r1, r3
 8007c0a:	2004      	movs	r0, #4
 8007c0c:	f7f9 fa25 	bl	800105a <_ZnwjPv>
 8007c10:	4603      	mov	r3, r0
 8007c12:	601c      	str	r4, [r3, #0]
    }
 8007c14:	bf00      	nop
 8007c16:	3714      	adds	r7, #20
 8007c18:	46bd      	mov	sp, r7
 8007c1a:	bd90      	pop	{r4, r7, pc}

08007c1c <_ZSt7forwardIfEOT_RNSt16remove_referenceIS0_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8007c1c:	b480      	push	{r7}
 8007c1e:	b083      	sub	sp, #12
 8007c20:	af00      	add	r7, sp, #0
 8007c22:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8007c24:	687b      	ldr	r3, [r7, #4]
 8007c26:	4618      	mov	r0, r3
 8007c28:	370c      	adds	r7, #12
 8007c2a:	46bd      	mov	sp, r7
 8007c2c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007c30:	4770      	bx	lr

08007c32 <_ZSt28__variant_construct_by_indexILj1ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEJfEEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 8007c32:	b590      	push	{r4, r7, lr}
 8007c34:	b085      	sub	sp, #20
 8007c36:	af00      	add	r7, sp, #0
 8007c38:	6078      	str	r0, [r7, #4]
 8007c3a:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 8007c3c:	687b      	ldr	r3, [r7, #4]
 8007c3e:	2201      	movs	r2, #1
 8007c40:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 8007c42:	6878      	ldr	r0, [r7, #4]
 8007c44:	f7fa fa49 	bl	80020da <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8007c48:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 8007c4a:	6838      	ldr	r0, [r7, #0]
 8007c4c:	f7ff ffe6 	bl	8007c1c <_ZSt7forwardIfEOT_RNSt16remove_referenceIS0_E4typeE>
 8007c50:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 8007c52:	681c      	ldr	r4, [r3, #0]
 8007c54:	68f8      	ldr	r0, [r7, #12]
 8007c56:	f000 fda5 	bl	80087a4 <_ZSt9addressofIfEPT_RS0_>
 8007c5a:	4603      	mov	r3, r0
 8007c5c:	4619      	mov	r1, r3
 8007c5e:	2004      	movs	r0, #4
 8007c60:	f7f9 f9fb 	bl	800105a <_ZnwjPv>
 8007c64:	4603      	mov	r3, r0
 8007c66:	601c      	str	r4, [r3, #0]
    }
 8007c68:	bf00      	nop
 8007c6a:	3714      	adds	r7, #20
 8007c6c:	46bd      	mov	sp, r7
 8007c6e:	bd90      	pop	{r4, r7, pc}

08007c70 <_ZSt3getILj1EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
    get(variant<_Types...>& __v)
 8007c70:	b580      	push	{r7, lr}
 8007c72:	b082      	sub	sp, #8
 8007c74:	af00      	add	r7, sp, #0
 8007c76:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 8007c78:	6878      	ldr	r0, [r7, #4]
 8007c7a:	f7fa fcb8 	bl	80025ee <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv>
 8007c7e:	4603      	mov	r3, r0
 8007c80:	2b01      	cmp	r3, #1
 8007c82:	bf14      	ite	ne
 8007c84:	2301      	movne	r3, #1
 8007c86:	2300      	moveq	r3, #0
 8007c88:	b2db      	uxtb	r3, r3
 8007c8a:	2b00      	cmp	r3, #0
 8007c8c:	d002      	beq.n	8007c94 <_ZSt3getILj1EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 8007c8e:	4805      	ldr	r0, [pc, #20]	; (8007ca4 <_ZSt3getILj1EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 8007c90:	f7f9 f9ef 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 8007c94:	6878      	ldr	r0, [r7, #4]
 8007c96:	f7fa fa20 	bl	80020da <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8007c9a:	4603      	mov	r3, r0
    }
 8007c9c:	4618      	mov	r0, r3
 8007c9e:	3708      	adds	r7, #8
 8007ca0:	46bd      	mov	sp, r7
 8007ca2:	bd80      	pop	{r7, pc}
 8007ca4:	08029488 	.word	0x08029488

08007ca8 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8007ca8:	b480      	push	{r7}
 8007caa:	b083      	sub	sp, #12
 8007cac:	af00      	add	r7, sp, #0
 8007cae:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8007cb0:	687b      	ldr	r3, [r7, #4]
 8007cb2:	4618      	mov	r0, r3
 8007cb4:	370c      	adds	r7, #12
 8007cb6:	46bd      	mov	sp, r7
 8007cb8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007cbc:	4770      	bx	lr

08007cbe <_ZSt28__variant_construct_by_indexILj2ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEJbEEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 8007cbe:	b590      	push	{r4, r7, lr}
 8007cc0:	b085      	sub	sp, #20
 8007cc2:	af00      	add	r7, sp, #0
 8007cc4:	6078      	str	r0, [r7, #4]
 8007cc6:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 8007cc8:	687b      	ldr	r3, [r7, #4]
 8007cca:	2202      	movs	r2, #2
 8007ccc:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 8007cce:	6878      	ldr	r0, [r7, #4]
 8007cd0:	f7fa faa1 	bl	8002216 <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8007cd4:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 8007cd6:	6838      	ldr	r0, [r7, #0]
 8007cd8:	f7ff ffe6 	bl	8007ca8 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
 8007cdc:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 8007cde:	781c      	ldrb	r4, [r3, #0]
 8007ce0:	68f8      	ldr	r0, [r7, #12]
 8007ce2:	f000 fd6b 	bl	80087bc <_ZSt9addressofIbEPT_RS0_>
 8007ce6:	4603      	mov	r3, r0
 8007ce8:	4619      	mov	r1, r3
 8007cea:	2001      	movs	r0, #1
 8007cec:	f7f9 f9b5 	bl	800105a <_ZnwjPv>
 8007cf0:	4603      	mov	r3, r0
 8007cf2:	4622      	mov	r2, r4
 8007cf4:	701a      	strb	r2, [r3, #0]
    }
 8007cf6:	bf00      	nop
 8007cf8:	3714      	adds	r7, #20
 8007cfa:	46bd      	mov	sp, r7
 8007cfc:	bd90      	pop	{r4, r7, pc}
	...

08007d00 <_ZSt3getILj2EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
    get(variant<_Types...>& __v)
 8007d00:	b580      	push	{r7, lr}
 8007d02:	b082      	sub	sp, #8
 8007d04:	af00      	add	r7, sp, #0
 8007d06:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 8007d08:	6878      	ldr	r0, [r7, #4]
 8007d0a:	f7fa fc70 	bl	80025ee <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv>
 8007d0e:	4603      	mov	r3, r0
 8007d10:	2b02      	cmp	r3, #2
 8007d12:	bf14      	ite	ne
 8007d14:	2301      	movne	r3, #1
 8007d16:	2300      	moveq	r3, #0
 8007d18:	b2db      	uxtb	r3, r3
 8007d1a:	2b00      	cmp	r3, #0
 8007d1c:	d002      	beq.n	8007d24 <_ZSt3getILj2EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 8007d1e:	4805      	ldr	r0, [pc, #20]	; (8007d34 <_ZSt3getILj2EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 8007d20:	f7f9 f9a7 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 8007d24:	6878      	ldr	r0, [r7, #4]
 8007d26:	f7fa fa76 	bl	8002216 <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8007d2a:	4603      	mov	r3, r0
    }
 8007d2c:	4618      	mov	r0, r3
 8007d2e:	3708      	adds	r7, #8
 8007d30:	46bd      	mov	sp, r7
 8007d32:	bd80      	pop	{r7, pc}
 8007d34:	08029488 	.word	0x08029488

08007d38 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8007d38:	b480      	push	{r7}
 8007d3a:	b083      	sub	sp, #12
 8007d3c:	af00      	add	r7, sp, #0
 8007d3e:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8007d40:	687b      	ldr	r3, [r7, #4]
 8007d42:	4618      	mov	r0, r3
 8007d44:	370c      	adds	r7, #12
 8007d46:	46bd      	mov	sp, r7
 8007d48:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007d4c:	4770      	bx	lr

08007d4e <_ZSt28__variant_construct_by_indexILj3ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEJS6_EEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 8007d4e:	b590      	push	{r4, r7, lr}
 8007d50:	b085      	sub	sp, #20
 8007d52:	af00      	add	r7, sp, #0
 8007d54:	6078      	str	r0, [r7, #4]
 8007d56:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 8007d58:	687b      	ldr	r3, [r7, #4]
 8007d5a:	2203      	movs	r2, #3
 8007d5c:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 8007d5e:	6878      	ldr	r0, [r7, #4]
 8007d60:	f7fa fb09 	bl	8002376 <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8007d64:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 8007d66:	6838      	ldr	r0, [r7, #0]
 8007d68:	f7ff ffe6 	bl	8007d38 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 8007d6c:	4604      	mov	r4, r0
      ::new ((void*)std::addressof(__storage))
 8007d6e:	68f8      	ldr	r0, [r7, #12]
 8007d70:	f000 fd30 	bl	80087d4 <_ZSt9addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_>
 8007d74:	4603      	mov	r3, r0
 8007d76:	4619      	mov	r1, r3
 8007d78:	2018      	movs	r0, #24
 8007d7a:	f7f9 f96e 	bl	800105a <_ZnwjPv>
 8007d7e:	4603      	mov	r3, r0
 8007d80:	4621      	mov	r1, r4
 8007d82:	4618      	mov	r0, r3
 8007d84:	f01b fe3f 	bl	8023a06 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_>
    }
 8007d88:	bf00      	nop
 8007d8a:	3714      	adds	r7, #20
 8007d8c:	46bd      	mov	sp, r7
 8007d8e:	bd90      	pop	{r4, r7, pc}

08007d90 <_ZSt3getILj3EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
    get(variant<_Types...>& __v)
 8007d90:	b580      	push	{r7, lr}
 8007d92:	b082      	sub	sp, #8
 8007d94:	af00      	add	r7, sp, #0
 8007d96:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 8007d98:	6878      	ldr	r0, [r7, #4]
 8007d9a:	f7fa fc28 	bl	80025ee <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv>
 8007d9e:	4603      	mov	r3, r0
 8007da0:	2b03      	cmp	r3, #3
 8007da2:	bf14      	ite	ne
 8007da4:	2301      	movne	r3, #1
 8007da6:	2300      	moveq	r3, #0
 8007da8:	b2db      	uxtb	r3, r3
 8007daa:	2b00      	cmp	r3, #0
 8007dac:	d002      	beq.n	8007db4 <_ZSt3getILj3EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 8007dae:	4805      	ldr	r0, [pc, #20]	; (8007dc4 <_ZSt3getILj3EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 8007db0:	f7f9 f95f 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 8007db4:	6878      	ldr	r0, [r7, #4]
 8007db6:	f7fa fade 	bl	8002376 <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8007dba:	4603      	mov	r3, r0
    }
 8007dbc:	4618      	mov	r0, r3
 8007dbe:	3708      	adds	r7, #8
 8007dc0:	46bd      	mov	sp, r7
 8007dc2:	bd80      	pop	{r7, pc}
 8007dc4:	08029488 	.word	0x08029488

08007dc8 <_ZNSt6vectorI6SymbolSaIS0_EE14_M_move_assignEOS2_St17integral_constantIbLb1EE>:
    private:
      // Constant-time move assignment when source object's memory can be
      // moved, either because the source's allocator will move too
      // or because the allocators are equal.
      void
      _M_move_assign(vector&& __x, true_type) noexcept
 8007dc8:	b590      	push	{r4, r7, lr}
 8007dca:	b089      	sub	sp, #36	; 0x24
 8007dcc:	af00      	add	r7, sp, #0
 8007dce:	60f8      	str	r0, [r7, #12]
 8007dd0:	60b9      	str	r1, [r7, #8]
 8007dd2:	713a      	strb	r2, [r7, #4]
      {
	vector __tmp(get_allocator());
 8007dd4:	68fa      	ldr	r2, [r7, #12]
 8007dd6:	f107 031c 	add.w	r3, r7, #28
 8007dda:	4611      	mov	r1, r2
 8007ddc:	4618      	mov	r0, r3
 8007dde:	f000 fd05 	bl	80087ec <_ZNKSt12_Vector_baseI6SymbolSaIS0_EE13get_allocatorEv>
 8007de2:	f107 021c 	add.w	r2, r7, #28
 8007de6:	f107 0310 	add.w	r3, r7, #16
 8007dea:	4611      	mov	r1, r2
 8007dec:	4618      	mov	r0, r3
 8007dee:	f000 fd1a 	bl	8008826 <_ZNSt6vectorI6SymbolSaIS0_EEC1ERKS1_>
 8007df2:	f107 031c 	add.w	r3, r7, #28
 8007df6:	4618      	mov	r0, r3
 8007df8:	f000 fd09 	bl	800880e <_ZNSaI6SymbolED1Ev>
	this->_M_impl._M_swap_data(__x._M_impl);
 8007dfc:	68fb      	ldr	r3, [r7, #12]
 8007dfe:	68ba      	ldr	r2, [r7, #8]
 8007e00:	4611      	mov	r1, r2
 8007e02:	4618      	mov	r0, r3
 8007e04:	f000 fd39 	bl	800887a <_ZNSt12_Vector_baseI6SymbolSaIS0_EE17_Vector_impl_data12_M_swap_dataERS3_>
	__tmp._M_impl._M_swap_data(__x._M_impl);
 8007e08:	68ba      	ldr	r2, [r7, #8]
 8007e0a:	f107 0310 	add.w	r3, r7, #16
 8007e0e:	4611      	mov	r1, r2
 8007e10:	4618      	mov	r0, r3
 8007e12:	f000 fd32 	bl	800887a <_ZNSt12_Vector_baseI6SymbolSaIS0_EE17_Vector_impl_data12_M_swap_dataERS3_>
	std::__alloc_on_move(_M_get_Tp_allocator(), __x._M_get_Tp_allocator());
 8007e16:	68fb      	ldr	r3, [r7, #12]
 8007e18:	4618      	mov	r0, r3
 8007e1a:	f000 f93b 	bl	8008094 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 8007e1e:	4604      	mov	r4, r0
 8007e20:	68bb      	ldr	r3, [r7, #8]
 8007e22:	4618      	mov	r0, r3
 8007e24:	f000 f936 	bl	8008094 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 8007e28:	4603      	mov	r3, r0
 8007e2a:	4619      	mov	r1, r3
 8007e2c:	4620      	mov	r0, r4
 8007e2e:	f000 fd42 	bl	80088b6 <_ZSt15__alloc_on_moveISaI6SymbolEEvRT_S3_>
	vector __tmp(get_allocator());
 8007e32:	f107 0310 	add.w	r3, r7, #16
 8007e36:	4618      	mov	r0, r3
 8007e38:	f000 fd04 	bl	8008844 <_ZNSt6vectorI6SymbolSaIS0_EED1Ev>
      }
 8007e3c:	bf00      	nop
 8007e3e:	3724      	adds	r7, #36	; 0x24
 8007e40:	46bd      	mov	sp, r7
 8007e42:	bd90      	pop	{r4, r7, pc}

08007e44 <_ZSt7forwardISt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS4_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8007e44:	b480      	push	{r7}
 8007e46:	b083      	sub	sp, #12
 8007e48:	af00      	add	r7, sp, #0
 8007e4a:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8007e4c:	687b      	ldr	r3, [r7, #4]
 8007e4e:	4618      	mov	r0, r3
 8007e50:	370c      	adds	r7, #12
 8007e52:	46bd      	mov	sp, r7
 8007e54:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007e58:	4770      	bx	lr

08007e5a <_ZNSt12_Vector_baseI6SymbolSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
 8007e5a:	b580      	push	{r7, lr}
 8007e5c:	b082      	sub	sp, #8
 8007e5e:	af00      	add	r7, sp, #0
 8007e60:	6078      	str	r0, [r7, #4]
 8007e62:	6878      	ldr	r0, [r7, #4]
 8007e64:	f000 fcd3 	bl	800880e <_ZNSaI6SymbolED1Ev>
 8007e68:	687b      	ldr	r3, [r7, #4]
 8007e6a:	4618      	mov	r0, r3
 8007e6c:	3708      	adds	r7, #8
 8007e6e:	46bd      	mov	sp, r7
 8007e70:	bd80      	pop	{r7, pc}

08007e72 <_ZNSt12_Vector_baseI6SymbolSaIS0_EEC1EOS2_>:
      _Vector_base(_Vector_base&&) = default;
 8007e72:	b580      	push	{r7, lr}
 8007e74:	b082      	sub	sp, #8
 8007e76:	af00      	add	r7, sp, #0
 8007e78:	6078      	str	r0, [r7, #4]
 8007e7a:	6039      	str	r1, [r7, #0]
 8007e7c:	687b      	ldr	r3, [r7, #4]
 8007e7e:	683a      	ldr	r2, [r7, #0]
 8007e80:	4611      	mov	r1, r2
 8007e82:	4618      	mov	r0, r3
 8007e84:	f000 fd31 	bl	80088ea <_ZNSt12_Vector_baseI6SymbolSaIS0_EE12_Vector_implC1EOS3_>
 8007e88:	687b      	ldr	r3, [r7, #4]
 8007e8a:	4618      	mov	r0, r3
 8007e8c:	3708      	adds	r7, #8
 8007e8e:	46bd      	mov	sp, r7
 8007e90:	bd80      	pop	{r7, pc}

08007e92 <_ZNSt6vectorI6SymbolSaIS0_EEC1EOS2_>:
      vector(vector&&) noexcept = default;
 8007e92:	b580      	push	{r7, lr}
 8007e94:	b082      	sub	sp, #8
 8007e96:	af00      	add	r7, sp, #0
 8007e98:	6078      	str	r0, [r7, #4]
 8007e9a:	6039      	str	r1, [r7, #0]
 8007e9c:	687b      	ldr	r3, [r7, #4]
 8007e9e:	683a      	ldr	r2, [r7, #0]
 8007ea0:	4611      	mov	r1, r2
 8007ea2:	4618      	mov	r0, r3
 8007ea4:	f7ff ffe5 	bl	8007e72 <_ZNSt12_Vector_baseI6SymbolSaIS0_EEC1EOS2_>
 8007ea8:	687b      	ldr	r3, [r7, #4]
 8007eaa:	4618      	mov	r0, r3
 8007eac:	3708      	adds	r7, #8
 8007eae:	46bd      	mov	sp, r7
 8007eb0:	bd80      	pop	{r7, pc}

08007eb2 <_ZSt28__variant_construct_by_indexILj4ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEJSA_EEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 8007eb2:	b590      	push	{r4, r7, lr}
 8007eb4:	b085      	sub	sp, #20
 8007eb6:	af00      	add	r7, sp, #0
 8007eb8:	6078      	str	r0, [r7, #4]
 8007eba:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 8007ebc:	687b      	ldr	r3, [r7, #4]
 8007ebe:	2204      	movs	r2, #4
 8007ec0:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 8007ec2:	6878      	ldr	r0, [r7, #4]
 8007ec4:	f7fa fb19 	bl	80024fa <_ZNSt8__detail9__variant5__getILj4ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8007ec8:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 8007eca:	6838      	ldr	r0, [r7, #0]
 8007ecc:	f7ff ffba 	bl	8007e44 <_ZSt7forwardISt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS4_E4typeE>
 8007ed0:	4604      	mov	r4, r0
      ::new ((void*)std::addressof(__storage))
 8007ed2:	68f8      	ldr	r0, [r7, #12]
 8007ed4:	f000 fcfd 	bl	80088d2 <_ZSt9addressofISt6vectorI6SymbolSaIS1_EEEPT_RS4_>
 8007ed8:	4603      	mov	r3, r0
 8007eda:	4619      	mov	r1, r3
 8007edc:	200c      	movs	r0, #12
 8007ede:	f7f9 f8bc 	bl	800105a <_ZnwjPv>
 8007ee2:	4603      	mov	r3, r0
 8007ee4:	4621      	mov	r1, r4
 8007ee6:	4618      	mov	r0, r3
 8007ee8:	f7ff ffd3 	bl	8007e92 <_ZNSt6vectorI6SymbolSaIS0_EEC1EOS2_>
    }
 8007eec:	bf00      	nop
 8007eee:	3714      	adds	r7, #20
 8007ef0:	46bd      	mov	sp, r7
 8007ef2:	bd90      	pop	{r4, r7, pc}

08007ef4 <_ZSt3getILj4EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
    get(variant<_Types...>& __v)
 8007ef4:	b580      	push	{r7, lr}
 8007ef6:	b082      	sub	sp, #8
 8007ef8:	af00      	add	r7, sp, #0
 8007efa:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 8007efc:	6878      	ldr	r0, [r7, #4]
 8007efe:	f7fa fb76 	bl	80025ee <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv>
 8007f02:	4603      	mov	r3, r0
 8007f04:	2b04      	cmp	r3, #4
 8007f06:	bf14      	ite	ne
 8007f08:	2301      	movne	r3, #1
 8007f0a:	2300      	moveq	r3, #0
 8007f0c:	b2db      	uxtb	r3, r3
 8007f0e:	2b00      	cmp	r3, #0
 8007f10:	d002      	beq.n	8007f18 <_ZSt3getILj4EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 8007f12:	4805      	ldr	r0, [pc, #20]	; (8007f28 <_ZSt3getILj4EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 8007f14:	f7f9 f8ad 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 8007f18:	6878      	ldr	r0, [r7, #4]
 8007f1a:	f7fa faee 	bl	80024fa <_ZNSt8__detail9__variant5__getILj4ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8007f1e:	4603      	mov	r3, r0
    }
 8007f20:	4618      	mov	r0, r3
 8007f22:	3708      	adds	r7, #8
 8007f24:	46bd      	mov	sp, r7
 8007f26:	bd80      	pop	{r7, pc}
 8007f28:	08029488 	.word	0x08029488

08007f2c <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEERKiEEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 8007f2c:	b590      	push	{r4, r7, lr}
 8007f2e:	b085      	sub	sp, #20
 8007f30:	af00      	add	r7, sp, #0
 8007f32:	6078      	str	r0, [r7, #4]
 8007f34:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 8007f36:	687b      	ldr	r3, [r7, #4]
 8007f38:	4618      	mov	r0, r3
 8007f3a:	f7ff fda7 	bl	8007a8c <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEPT_RSE_>
 8007f3e:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 8007f40:	6838      	ldr	r0, [r7, #0]
 8007f42:	f7fd f828 	bl	8004f96 <_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE>
 8007f46:	4603      	mov	r3, r0
        ::new (__storage)
 8007f48:	681c      	ldr	r4, [r3, #0]
 8007f4a:	68fb      	ldr	r3, [r7, #12]
 8007f4c:	4619      	mov	r1, r3
 8007f4e:	2004      	movs	r0, #4
 8007f50:	f7f9 f883 	bl	800105a <_ZnwjPv>
 8007f54:	4603      	mov	r3, r0
 8007f56:	601c      	str	r4, [r3, #0]
    }
 8007f58:	bf00      	nop
 8007f5a:	3714      	adds	r7, #20
 8007f5c:	46bd      	mov	sp, r7
 8007f5e:	bd90      	pop	{r4, r7, pc}

08007f60 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEERKfEEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 8007f60:	b590      	push	{r4, r7, lr}
 8007f62:	b085      	sub	sp, #20
 8007f64:	af00      	add	r7, sp, #0
 8007f66:	6078      	str	r0, [r7, #4]
 8007f68:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 8007f6a:	687b      	ldr	r3, [r7, #4]
 8007f6c:	4618      	mov	r0, r3
 8007f6e:	f7ff fd8d 	bl	8007a8c <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEPT_RSE_>
 8007f72:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 8007f74:	6838      	ldr	r0, [r7, #0]
 8007f76:	f7fd f837 	bl	8004fe8 <_ZSt7forwardIRKfEOT_RNSt16remove_referenceIS2_E4typeE>
 8007f7a:	4603      	mov	r3, r0
        ::new (__storage)
 8007f7c:	681c      	ldr	r4, [r3, #0]
 8007f7e:	68fb      	ldr	r3, [r7, #12]
 8007f80:	4619      	mov	r1, r3
 8007f82:	2004      	movs	r0, #4
 8007f84:	f7f9 f869 	bl	800105a <_ZnwjPv>
 8007f88:	4603      	mov	r3, r0
 8007f8a:	601c      	str	r4, [r3, #0]
    }
 8007f8c:	bf00      	nop
 8007f8e:	3714      	adds	r7, #20
 8007f90:	46bd      	mov	sp, r7
 8007f92:	bd90      	pop	{r4, r7, pc}

08007f94 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEERKbEEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 8007f94:	b590      	push	{r4, r7, lr}
 8007f96:	b085      	sub	sp, #20
 8007f98:	af00      	add	r7, sp, #0
 8007f9a:	6078      	str	r0, [r7, #4]
 8007f9c:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 8007f9e:	687b      	ldr	r3, [r7, #4]
 8007fa0:	4618      	mov	r0, r3
 8007fa2:	f7ff fd73 	bl	8007a8c <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEPT_RSE_>
 8007fa6:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 8007fa8:	6838      	ldr	r0, [r7, #0]
 8007faa:	f7fd f846 	bl	800503a <_ZSt7forwardIRKbEOT_RNSt16remove_referenceIS2_E4typeE>
 8007fae:	4603      	mov	r3, r0
        ::new (__storage)
 8007fb0:	781c      	ldrb	r4, [r3, #0]
 8007fb2:	68fb      	ldr	r3, [r7, #12]
 8007fb4:	4619      	mov	r1, r3
 8007fb6:	2001      	movs	r0, #1
 8007fb8:	f7f9 f84f 	bl	800105a <_ZnwjPv>
 8007fbc:	4603      	mov	r3, r0
 8007fbe:	4622      	mov	r2, r4
 8007fc0:	701a      	strb	r2, [r3, #0]
    }
 8007fc2:	bf00      	nop
 8007fc4:	3714      	adds	r7, #20
 8007fc6:	46bd      	mov	sp, r7
 8007fc8:	bd90      	pop	{r4, r7, pc}

08007fca <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj3EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 8007fca:	b590      	push	{r4, r7, lr}
 8007fcc:	b085      	sub	sp, #20
 8007fce:	af00      	add	r7, sp, #0
 8007fd0:	60f8      	str	r0, [r7, #12]
 8007fd2:	7239      	strb	r1, [r7, #8]
 8007fd4:	607a      	str	r2, [r7, #4]
 8007fd6:	68fb      	ldr	r3, [r7, #12]
 8007fd8:	687a      	ldr	r2, [r7, #4]
 8007fda:	4621      	mov	r1, r4
 8007fdc:	4618      	mov	r0, r3
 8007fde:	f000 fd29 	bl	8008a34 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj3EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>
 8007fe2:	68fb      	ldr	r3, [r7, #12]
 8007fe4:	4618      	mov	r0, r3
 8007fe6:	3714      	adds	r7, #20
 8007fe8:	46bd      	mov	sp, r7
 8007fea:	bd90      	pop	{r4, r7, pc}

08007fec <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj3EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 8007fec:	b590      	push	{r4, r7, lr}
 8007fee:	b085      	sub	sp, #20
 8007ff0:	af00      	add	r7, sp, #0
 8007ff2:	60f8      	str	r0, [r7, #12]
 8007ff4:	7239      	strb	r1, [r7, #8]
 8007ff6:	607a      	str	r2, [r7, #4]
 8007ff8:	68fb      	ldr	r3, [r7, #12]
 8007ffa:	687a      	ldr	r2, [r7, #4]
 8007ffc:	4621      	mov	r1, r4
 8007ffe:	4618      	mov	r0, r3
 8008000:	f7ff ffe3 	bl	8007fca <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj3EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>
 8008004:	68fb      	ldr	r3, [r7, #12]
 8008006:	4618      	mov	r0, r3
 8008008:	3714      	adds	r7, #20
 800800a:	46bd      	mov	sp, r7
 800800c:	bd90      	pop	{r4, r7, pc}

0800800e <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj3EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 800800e:	b590      	push	{r4, r7, lr}
 8008010:	b085      	sub	sp, #20
 8008012:	af00      	add	r7, sp, #0
 8008014:	60f8      	str	r0, [r7, #12]
 8008016:	7239      	strb	r1, [r7, #8]
 8008018:	607a      	str	r2, [r7, #4]
 800801a:	68fb      	ldr	r3, [r7, #12]
 800801c:	687a      	ldr	r2, [r7, #4]
 800801e:	4621      	mov	r1, r4
 8008020:	4618      	mov	r0, r3
 8008022:	f7ff ffe3 	bl	8007fec <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj3EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>
 8008026:	68fb      	ldr	r3, [r7, #12]
 8008028:	4618      	mov	r0, r3
 800802a:	3714      	adds	r7, #20
 800802c:	46bd      	mov	sp, r7
 800802e:	bd90      	pop	{r4, r7, pc}

08008030 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj3EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 8008030:	b590      	push	{r4, r7, lr}
 8008032:	b085      	sub	sp, #20
 8008034:	af00      	add	r7, sp, #0
 8008036:	60f8      	str	r0, [r7, #12]
 8008038:	7239      	strb	r1, [r7, #8]
 800803a:	607a      	str	r2, [r7, #4]
 800803c:	68fb      	ldr	r3, [r7, #12]
 800803e:	687a      	ldr	r2, [r7, #4]
 8008040:	4621      	mov	r1, r4
 8008042:	4618      	mov	r0, r3
 8008044:	f7ff ffe3 	bl	800800e <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj3EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>
 8008048:	68fb      	ldr	r3, [r7, #12]
 800804a:	4618      	mov	r0, r3
 800804c:	3714      	adds	r7, #20
 800804e:	46bd      	mov	sp, r7
 8008050:	bd90      	pop	{r4, r7, pc}

08008052 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj3EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
	_Variant_base(in_place_index_t<_Np> __i, _Args&&... __args)
 8008052:	b5b0      	push	{r4, r5, r7, lr}
 8008054:	b084      	sub	sp, #16
 8008056:	af00      	add	r7, sp, #0
 8008058:	60f8      	str	r0, [r7, #12]
 800805a:	7239      	strb	r1, [r7, #8]
 800805c:	607a      	str	r2, [r7, #4]
	: _Base(__i, std::forward<_Args>(__args)...)
 800805e:	68fc      	ldr	r4, [r7, #12]
 8008060:	6878      	ldr	r0, [r7, #4]
 8008062:	f7fd f81f 	bl	80050a4 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 8008066:	4603      	mov	r3, r0
 8008068:	461a      	mov	r2, r3
 800806a:	4629      	mov	r1, r5
 800806c:	4620      	mov	r0, r4
 800806e:	f7ff ffdf 	bl	8008030 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj3EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 8008072:	68fb      	ldr	r3, [r7, #12]
 8008074:	4618      	mov	r0, r3
 8008076:	3710      	adds	r7, #16
 8008078:	46bd      	mov	sp, r7
 800807a:	bdb0      	pop	{r4, r5, r7, pc}

0800807c <_ZNSt27_Enable_default_constructorILb1ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEC1ESt31_Enable_default_constructor_tag>:
    _Enable_default_constructor&
    operator=(_Enable_default_constructor&&) noexcept = default;

    // Can be used in other ctors.
    constexpr explicit
    _Enable_default_constructor(_Enable_default_constructor_tag) { }
 800807c:	b480      	push	{r7}
 800807e:	b083      	sub	sp, #12
 8008080:	af00      	add	r7, sp, #0
 8008082:	6078      	str	r0, [r7, #4]
 8008084:	7039      	strb	r1, [r7, #0]
 8008086:	687b      	ldr	r3, [r7, #4]
 8008088:	4618      	mov	r0, r3
 800808a:	370c      	adds	r7, #12
 800808c:	46bd      	mov	sp, r7
 800808e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008092:	4770      	bx	lr

08008094 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 8008094:	b480      	push	{r7}
 8008096:	b083      	sub	sp, #12
 8008098:	af00      	add	r7, sp, #0
 800809a:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 800809c:	687b      	ldr	r3, [r7, #4]
 800809e:	4618      	mov	r0, r3
 80080a0:	370c      	adds	r7, #12
 80080a2:	46bd      	mov	sp, r7
 80080a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80080a8:	4770      	bx	lr

080080aa <_ZNKSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 80080aa:	b480      	push	{r7}
 80080ac:	b083      	sub	sp, #12
 80080ae:	af00      	add	r7, sp, #0
 80080b0:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 80080b2:	687b      	ldr	r3, [r7, #4]
 80080b4:	4618      	mov	r0, r3
 80080b6:	370c      	adds	r7, #12
 80080b8:	46bd      	mov	sp, r7
 80080ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80080be:	4770      	bx	lr

080080c0 <_ZStneRKSaI6SymbolES2_>:
      friend bool
      operator==(const allocator&, const allocator&) _GLIBCXX_NOTHROW
      { return true; }

      friend bool
      operator!=(const allocator&, const allocator&) _GLIBCXX_NOTHROW
 80080c0:	b480      	push	{r7}
 80080c2:	b083      	sub	sp, #12
 80080c4:	af00      	add	r7, sp, #0
 80080c6:	6078      	str	r0, [r7, #4]
 80080c8:	6039      	str	r1, [r7, #0]
      { return false; }
 80080ca:	2300      	movs	r3, #0
 80080cc:	4618      	mov	r0, r3
 80080ce:	370c      	adds	r7, #12
 80080d0:	46bd      	mov	sp, r7
 80080d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80080d6:	4770      	bx	lr

080080d8 <_ZNSt6vectorI6SymbolSaIS0_EE5clearEv>:
      clear() _GLIBCXX_NOEXCEPT
 80080d8:	b580      	push	{r7, lr}
 80080da:	b082      	sub	sp, #8
 80080dc:	af00      	add	r7, sp, #0
 80080de:	6078      	str	r0, [r7, #4]
      { _M_erase_at_end(this->_M_impl._M_start); }
 80080e0:	687b      	ldr	r3, [r7, #4]
 80080e2:	681b      	ldr	r3, [r3, #0]
 80080e4:	4619      	mov	r1, r3
 80080e6:	6878      	ldr	r0, [r7, #4]
 80080e8:	f000 fcbc 	bl	8008a64 <_ZNSt6vectorI6SymbolSaIS0_EE15_M_erase_at_endEPS0_>
 80080ec:	bf00      	nop
 80080ee:	3708      	adds	r7, #8
 80080f0:	46bd      	mov	sp, r7
 80080f2:	bd80      	pop	{r7, pc}

080080f4 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE13_M_deallocateEPS0_j>:
      _M_deallocate(pointer __p, size_t __n)
 80080f4:	b580      	push	{r7, lr}
 80080f6:	b084      	sub	sp, #16
 80080f8:	af00      	add	r7, sp, #0
 80080fa:	60f8      	str	r0, [r7, #12]
 80080fc:	60b9      	str	r1, [r7, #8]
 80080fe:	607a      	str	r2, [r7, #4]
	if (__p)
 8008100:	68bb      	ldr	r3, [r7, #8]
 8008102:	2b00      	cmp	r3, #0
 8008104:	d005      	beq.n	8008112 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE13_M_deallocateEPS0_j+0x1e>
	  _Tr::deallocate(_M_impl, __p, __n);
 8008106:	68fb      	ldr	r3, [r7, #12]
 8008108:	687a      	ldr	r2, [r7, #4]
 800810a:	68b9      	ldr	r1, [r7, #8]
 800810c:	4618      	mov	r0, r3
 800810e:	f000 fcca 	bl	8008aa6 <_ZNSt16allocator_traitsISaI6SymbolEE10deallocateERS1_PS0_j>
      }
 8008112:	bf00      	nop
 8008114:	3710      	adds	r7, #16
 8008116:	46bd      	mov	sp, r7
 8008118:	bd80      	pop	{r7, pc}

0800811a <_ZSt15__alloc_on_copyISaI6SymbolEEvRT_RKS2_>:
    inline void
    __do_alloc_on_copy(_Alloc&, const _Alloc&, false_type)
    { }

  template<typename _Alloc>
    inline void __alloc_on_copy(_Alloc& __one, const _Alloc& __two)
 800811a:	b580      	push	{r7, lr}
 800811c:	b084      	sub	sp, #16
 800811e:	af00      	add	r7, sp, #0
 8008120:	6078      	str	r0, [r7, #4]
 8008122:	6039      	str	r1, [r7, #0]
    {
      typedef allocator_traits<_Alloc> __traits;
      typedef typename __traits::propagate_on_container_copy_assignment __pocca;
      __do_alloc_on_copy(__one, __two, __pocca());
 8008124:	461a      	mov	r2, r3
 8008126:	6839      	ldr	r1, [r7, #0]
 8008128:	6878      	ldr	r0, [r7, #4]
 800812a:	f000 fccb 	bl	8008ac4 <_ZSt18__do_alloc_on_copyISaI6SymbolEEvRT_RKS2_St17integral_constantIbLb0EE>
    }
 800812e:	bf00      	nop
 8008130:	3710      	adds	r7, #16
 8008132:	46bd      	mov	sp, r7
 8008134:	bd80      	pop	{r7, pc}

08008136 <_ZNKSt6vectorI6SymbolSaIS0_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 8008136:	b480      	push	{r7}
 8008138:	b083      	sub	sp, #12
 800813a:	af00      	add	r7, sp, #0
 800813c:	6078      	str	r0, [r7, #4]
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 800813e:	687b      	ldr	r3, [r7, #4]
 8008140:	685a      	ldr	r2, [r3, #4]
 8008142:	687b      	ldr	r3, [r7, #4]
 8008144:	681b      	ldr	r3, [r3, #0]
 8008146:	1ad3      	subs	r3, r2, r3
 8008148:	115b      	asrs	r3, r3, #5
 800814a:	4618      	mov	r0, r3
 800814c:	370c      	adds	r7, #12
 800814e:	46bd      	mov	sp, r7
 8008150:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008154:	4770      	bx	lr

08008156 <_ZNKSt6vectorI6SymbolSaIS0_EE8capacityEv>:
      capacity() const _GLIBCXX_NOEXCEPT
 8008156:	b480      	push	{r7}
 8008158:	b083      	sub	sp, #12
 800815a:	af00      	add	r7, sp, #0
 800815c:	6078      	str	r0, [r7, #4]
      { return size_type(this->_M_impl._M_end_of_storage
 800815e:	687b      	ldr	r3, [r7, #4]
 8008160:	689a      	ldr	r2, [r3, #8]
			 - this->_M_impl._M_start); }
 8008162:	687b      	ldr	r3, [r7, #4]
 8008164:	681b      	ldr	r3, [r3, #0]
 8008166:	1ad3      	subs	r3, r2, r3
 8008168:	115b      	asrs	r3, r3, #5
 800816a:	4618      	mov	r0, r3
 800816c:	370c      	adds	r7, #12
 800816e:	46bd      	mov	sp, r7
 8008170:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008174:	4770      	bx	lr

08008176 <_ZNKSt6vectorI6SymbolSaIS0_EE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
 8008176:	b580      	push	{r7, lr}
 8008178:	b084      	sub	sp, #16
 800817a:	af00      	add	r7, sp, #0
 800817c:	6078      	str	r0, [r7, #4]
      { return const_iterator(this->_M_impl._M_start); }
 800817e:	687b      	ldr	r3, [r7, #4]
 8008180:	681b      	ldr	r3, [r3, #0]
 8008182:	60fb      	str	r3, [r7, #12]
 8008184:	f107 020c 	add.w	r2, r7, #12
 8008188:	f107 0308 	add.w	r3, r7, #8
 800818c:	4611      	mov	r1, r2
 800818e:	4618      	mov	r0, r3
 8008190:	f000 fca4 	bl	8008adc <_ZN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS1_SaIS1_EEEC1ERKS3_>
 8008194:	68bb      	ldr	r3, [r7, #8]
 8008196:	4618      	mov	r0, r3
 8008198:	3710      	adds	r7, #16
 800819a:	46bd      	mov	sp, r7
 800819c:	bd80      	pop	{r7, pc}

0800819e <_ZNKSt6vectorI6SymbolSaIS0_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
 800819e:	b580      	push	{r7, lr}
 80081a0:	b084      	sub	sp, #16
 80081a2:	af00      	add	r7, sp, #0
 80081a4:	6078      	str	r0, [r7, #4]
      { return const_iterator(this->_M_impl._M_finish); }
 80081a6:	687b      	ldr	r3, [r7, #4]
 80081a8:	685b      	ldr	r3, [r3, #4]
 80081aa:	60fb      	str	r3, [r7, #12]
 80081ac:	f107 020c 	add.w	r2, r7, #12
 80081b0:	f107 0308 	add.w	r3, r7, #8
 80081b4:	4611      	mov	r1, r2
 80081b6:	4618      	mov	r0, r3
 80081b8:	f000 fc90 	bl	8008adc <_ZN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS1_SaIS1_EEEC1ERKS3_>
 80081bc:	68bb      	ldr	r3, [r7, #8]
 80081be:	4618      	mov	r0, r3
 80081c0:	3710      	adds	r7, #16
 80081c2:	46bd      	mov	sp, r7
 80081c4:	bd80      	pop	{r7, pc}

080081c6 <_ZNSt6vectorI6SymbolSaIS0_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS0_S2_EEEEPS0_jT_SA_>:
	_M_allocate_and_copy(size_type __n,
 80081c6:	b580      	push	{r7, lr}
 80081c8:	b086      	sub	sp, #24
 80081ca:	af00      	add	r7, sp, #0
 80081cc:	60f8      	str	r0, [r7, #12]
 80081ce:	60b9      	str	r1, [r7, #8]
 80081d0:	607a      	str	r2, [r7, #4]
 80081d2:	603b      	str	r3, [r7, #0]
	  pointer __result = this->_M_allocate(__n);
 80081d4:	68fb      	ldr	r3, [r7, #12]
 80081d6:	68b9      	ldr	r1, [r7, #8]
 80081d8:	4618      	mov	r0, r3
 80081da:	f000 fc8f 	bl	8008afc <_ZNSt12_Vector_baseI6SymbolSaIS0_EE11_M_allocateEj>
 80081de:	6178      	str	r0, [r7, #20]
					  _M_get_Tp_allocator());
 80081e0:	68fb      	ldr	r3, [r7, #12]
 80081e2:	4618      	mov	r0, r3
 80081e4:	f7ff ff56 	bl	8008094 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 80081e8:	4603      	mov	r3, r0
	      std::__uninitialized_copy_a(__first, __last, __result,
 80081ea:	697a      	ldr	r2, [r7, #20]
 80081ec:	6839      	ldr	r1, [r7, #0]
 80081ee:	6878      	ldr	r0, [r7, #4]
 80081f0:	f000 fc98 	bl	8008b24 <_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS2_SaIS2_EEEEPS2_S2_ET0_T_SB_SA_RSaIT1_E>
	      return __result;
 80081f4:	697b      	ldr	r3, [r7, #20]
	}
 80081f6:	4618      	mov	r0, r3
 80081f8:	3718      	adds	r7, #24
 80081fa:	46bd      	mov	sp, r7
 80081fc:	bd80      	pop	{r7, pc}

080081fe <_ZSt8_DestroyIP6SymbolS0_EvT_S2_RSaIT0_E>:
	__traits::destroy(__alloc, std::__addressof(*__first));
    }

  template<typename _ForwardIterator, typename _Tp>
    inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 80081fe:	b580      	push	{r7, lr}
 8008200:	b084      	sub	sp, #16
 8008202:	af00      	add	r7, sp, #0
 8008204:	60f8      	str	r0, [r7, #12]
 8008206:	60b9      	str	r1, [r7, #8]
 8008208:	607a      	str	r2, [r7, #4]
	     allocator<_Tp>&)
    {
      _Destroy(__first, __last);
 800820a:	68b9      	ldr	r1, [r7, #8]
 800820c:	68f8      	ldr	r0, [r7, #12]
 800820e:	f000 fc9a 	bl	8008b46 <_ZSt8_DestroyIP6SymbolEvT_S2_>
    }
 8008212:	bf00      	nop
 8008214:	3710      	adds	r7, #16
 8008216:	46bd      	mov	sp, r7
 8008218:	bd80      	pop	{r7, pc}

0800821a <_ZNSt6vectorI6SymbolSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 800821a:	b580      	push	{r7, lr}
 800821c:	b084      	sub	sp, #16
 800821e:	af00      	add	r7, sp, #0
 8008220:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_start); }
 8008222:	687a      	ldr	r2, [r7, #4]
 8008224:	f107 030c 	add.w	r3, r7, #12
 8008228:	4611      	mov	r1, r2
 800822a:	4618      	mov	r0, r3
 800822c:	f000 fc98 	bl	8008b60 <_ZN9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS1_SaIS1_EEEC1ERKS2_>
 8008230:	68fb      	ldr	r3, [r7, #12]
 8008232:	4618      	mov	r0, r3
 8008234:	3710      	adds	r7, #16
 8008236:	46bd      	mov	sp, r7
 8008238:	bd80      	pop	{r7, pc}

0800823a <_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET0_T_SC_SB_>:
   *  Note that the end of the output range is permitted to be contained
   *  within [first,last).
  */
  template<typename _II, typename _OI>
    inline _OI
    copy(_II __first, _II __last, _OI __result)
 800823a:	b590      	push	{r4, r7, lr}
 800823c:	b085      	sub	sp, #20
 800823e:	af00      	add	r7, sp, #0
 8008240:	60f8      	str	r0, [r7, #12]
 8008242:	60b9      	str	r1, [r7, #8]
 8008244:	607a      	str	r2, [r7, #4]
      __glibcxx_function_requires(_OutputIteratorConcept<_OI,
	    typename iterator_traits<_II>::value_type>)
      __glibcxx_requires_can_increment_range(__first, __last, __result);

      return std::__copy_move_a2<__is_move_iterator<_II>::__value>
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
 8008246:	68f8      	ldr	r0, [r7, #12]
 8008248:	f000 fc9a 	bl	8008b80 <_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS2_SaIS2_EEEEET_S9_>
 800824c:	4604      	mov	r4, r0
 800824e:	68b8      	ldr	r0, [r7, #8]
 8008250:	f000 fc96 	bl	8008b80 <_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS2_SaIS2_EEEEET_S9_>
 8008254:	4603      	mov	r3, r0
 8008256:	687a      	ldr	r2, [r7, #4]
 8008258:	4619      	mov	r1, r3
 800825a:	4620      	mov	r0, r4
 800825c:	f000 fc9b 	bl	8008b96 <_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET1_T0_SC_SB_>
 8008260:	4603      	mov	r3, r0
    }
 8008262:	4618      	mov	r0, r3
 8008264:	3714      	adds	r7, #20
 8008266:	46bd      	mov	sp, r7
 8008268:	bd90      	pop	{r4, r7, pc}

0800826a <_ZNSt6vectorI6SymbolSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 800826a:	b580      	push	{r7, lr}
 800826c:	b084      	sub	sp, #16
 800826e:	af00      	add	r7, sp, #0
 8008270:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_finish); }
 8008272:	687b      	ldr	r3, [r7, #4]
 8008274:	1d1a      	adds	r2, r3, #4
 8008276:	f107 030c 	add.w	r3, r7, #12
 800827a:	4611      	mov	r1, r2
 800827c:	4618      	mov	r0, r3
 800827e:	f000 fc6f 	bl	8008b60 <_ZN9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS1_SaIS1_EEEC1ERKS2_>
 8008282:	68fb      	ldr	r3, [r7, #12]
 8008284:	4618      	mov	r0, r3
 8008286:	3710      	adds	r7, #16
 8008288:	46bd      	mov	sp, r7
 800828a:	bd80      	pop	{r7, pc}

0800828c <_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS2_SaIS2_EEEES2_EvT_S8_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 800828c:	b580      	push	{r7, lr}
 800828e:	b084      	sub	sp, #16
 8008290:	af00      	add	r7, sp, #0
 8008292:	60f8      	str	r0, [r7, #12]
 8008294:	60b9      	str	r1, [r7, #8]
 8008296:	607a      	str	r2, [r7, #4]
      _Destroy(__first, __last);
 8008298:	68b9      	ldr	r1, [r7, #8]
 800829a:	68f8      	ldr	r0, [r7, #12]
 800829c:	f000 fc9c 	bl	8008bd8 <_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS2_SaIS2_EEEEEvT_S8_>
    }
 80082a0:	bf00      	nop
 80082a2:	3710      	adds	r7, #16
 80082a4:	46bd      	mov	sp, r7
 80082a6:	bd80      	pop	{r7, pc}

080082a8 <_ZSt4copyIP6SymbolS1_ET0_T_S3_S2_>:
    copy(_II __first, _II __last, _OI __result)
 80082a8:	b590      	push	{r4, r7, lr}
 80082aa:	b085      	sub	sp, #20
 80082ac:	af00      	add	r7, sp, #0
 80082ae:	60f8      	str	r0, [r7, #12]
 80082b0:	60b9      	str	r1, [r7, #8]
 80082b2:	607a      	str	r2, [r7, #4]
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
 80082b4:	68f8      	ldr	r0, [r7, #12]
 80082b6:	f000 fc9c 	bl	8008bf2 <_ZSt12__miter_baseIP6SymbolET_S2_>
 80082ba:	4604      	mov	r4, r0
 80082bc:	68b8      	ldr	r0, [r7, #8]
 80082be:	f000 fc98 	bl	8008bf2 <_ZSt12__miter_baseIP6SymbolET_S2_>
 80082c2:	4603      	mov	r3, r0
 80082c4:	687a      	ldr	r2, [r7, #4]
 80082c6:	4619      	mov	r1, r3
 80082c8:	4620      	mov	r0, r4
 80082ca:	f000 fc9d 	bl	8008c08 <_ZSt14__copy_move_a2ILb0EP6SymbolS1_ET1_T0_S3_S2_>
 80082ce:	4603      	mov	r3, r0
    }
 80082d0:	4618      	mov	r0, r3
 80082d2:	3714      	adds	r7, #20
 80082d4:	46bd      	mov	sp, r7
 80082d6:	bd90      	pop	{r4, r7, pc}

080082d8 <_ZSt22__uninitialized_copy_aIP6SymbolS1_S0_ET0_T_S3_S2_RSaIT1_E>:
	}
    }

  template<typename _InputIterator, typename _ForwardIterator, typename _Tp>
    inline _ForwardIterator
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
 80082d8:	b580      	push	{r7, lr}
 80082da:	b084      	sub	sp, #16
 80082dc:	af00      	add	r7, sp, #0
 80082de:	60f8      	str	r0, [r7, #12]
 80082e0:	60b9      	str	r1, [r7, #8]
 80082e2:	607a      	str	r2, [r7, #4]
 80082e4:	603b      	str	r3, [r7, #0]
			   _ForwardIterator __result, allocator<_Tp>&)
    { return std::uninitialized_copy(__first, __last, __result); }
 80082e6:	687a      	ldr	r2, [r7, #4]
 80082e8:	68b9      	ldr	r1, [r7, #8]
 80082ea:	68f8      	ldr	r0, [r7, #12]
 80082ec:	f000 fcaf 	bl	8008c4e <_ZSt18uninitialized_copyIP6SymbolS1_ET0_T_S3_S2_>
 80082f0:	4603      	mov	r3, r0
 80082f2:	4618      	mov	r0, r3
 80082f4:	3710      	adds	r7, #16
 80082f6:	46bd      	mov	sp, r7
 80082f8:	bd80      	pop	{r7, pc}

080082fa <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj4EJRKSB_EEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 80082fa:	b590      	push	{r4, r7, lr}
 80082fc:	b085      	sub	sp, #20
 80082fe:	af00      	add	r7, sp, #0
 8008300:	60f8      	str	r0, [r7, #12]
 8008302:	7239      	strb	r1, [r7, #8]
 8008304:	607a      	str	r2, [r7, #4]
 8008306:	68fb      	ldr	r3, [r7, #12]
 8008308:	687a      	ldr	r2, [r7, #4]
 800830a:	4621      	mov	r1, r4
 800830c:	4618      	mov	r0, r3
 800830e:	f000 fd36 	bl	8008d7e <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj4EJRKSB_EEESt16in_place_index_tIXT_EEDpOT0_>
 8008312:	68fb      	ldr	r3, [r7, #12]
 8008314:	4618      	mov	r0, r3
 8008316:	3714      	adds	r7, #20
 8008318:	46bd      	mov	sp, r7
 800831a:	bd90      	pop	{r4, r7, pc}

0800831c <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj4EJRKSB_EEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 800831c:	b590      	push	{r4, r7, lr}
 800831e:	b085      	sub	sp, #20
 8008320:	af00      	add	r7, sp, #0
 8008322:	60f8      	str	r0, [r7, #12]
 8008324:	7239      	strb	r1, [r7, #8]
 8008326:	607a      	str	r2, [r7, #4]
 8008328:	68fb      	ldr	r3, [r7, #12]
 800832a:	687a      	ldr	r2, [r7, #4]
 800832c:	4621      	mov	r1, r4
 800832e:	4618      	mov	r0, r3
 8008330:	f7ff ffe3 	bl	80082fa <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj4EJRKSB_EEESt16in_place_index_tIXT_EEDpOT0_>
 8008334:	68fb      	ldr	r3, [r7, #12]
 8008336:	4618      	mov	r0, r3
 8008338:	3714      	adds	r7, #20
 800833a:	46bd      	mov	sp, r7
 800833c:	bd90      	pop	{r4, r7, pc}

0800833e <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj4EJRKSB_EEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 800833e:	b590      	push	{r4, r7, lr}
 8008340:	b085      	sub	sp, #20
 8008342:	af00      	add	r7, sp, #0
 8008344:	60f8      	str	r0, [r7, #12]
 8008346:	7239      	strb	r1, [r7, #8]
 8008348:	607a      	str	r2, [r7, #4]
 800834a:	68fb      	ldr	r3, [r7, #12]
 800834c:	687a      	ldr	r2, [r7, #4]
 800834e:	4621      	mov	r1, r4
 8008350:	4618      	mov	r0, r3
 8008352:	f7ff ffe3 	bl	800831c <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj4EJRKSB_EEESt16in_place_index_tIXT_EEDpOT0_>
 8008356:	68fb      	ldr	r3, [r7, #12]
 8008358:	4618      	mov	r0, r3
 800835a:	3714      	adds	r7, #20
 800835c:	46bd      	mov	sp, r7
 800835e:	bd90      	pop	{r4, r7, pc}

08008360 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj4EJRKSB_EEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 8008360:	b590      	push	{r4, r7, lr}
 8008362:	b085      	sub	sp, #20
 8008364:	af00      	add	r7, sp, #0
 8008366:	60f8      	str	r0, [r7, #12]
 8008368:	7239      	strb	r1, [r7, #8]
 800836a:	607a      	str	r2, [r7, #4]
 800836c:	68fb      	ldr	r3, [r7, #12]
 800836e:	687a      	ldr	r2, [r7, #4]
 8008370:	4621      	mov	r1, r4
 8008372:	4618      	mov	r0, r3
 8008374:	f7ff ffe3 	bl	800833e <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj4EJRKSB_EEESt16in_place_index_tIXT_EEDpOT0_>
 8008378:	68fb      	ldr	r3, [r7, #12]
 800837a:	4618      	mov	r0, r3
 800837c:	3714      	adds	r7, #20
 800837e:	46bd      	mov	sp, r7
 8008380:	bd90      	pop	{r4, r7, pc}

08008382 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj4EJRKSB_EEESt16in_place_index_tIXT_EEDpOT0_>:
	_Variant_base(in_place_index_t<_Np> __i, _Args&&... __args)
 8008382:	b5b0      	push	{r4, r5, r7, lr}
 8008384:	b084      	sub	sp, #16
 8008386:	af00      	add	r7, sp, #0
 8008388:	60f8      	str	r0, [r7, #12]
 800838a:	7239      	strb	r1, [r7, #8]
 800838c:	607a      	str	r2, [r7, #4]
	: _Base(__i, std::forward<_Args>(__args)...)
 800838e:	68fc      	ldr	r4, [r7, #12]
 8008390:	6878      	ldr	r0, [r7, #4]
 8008392:	f7fc febc 	bl	800510e <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>
 8008396:	4603      	mov	r3, r0
 8008398:	461a      	mov	r2, r3
 800839a:	4629      	mov	r1, r5
 800839c:	4620      	mov	r0, r4
 800839e:	f7ff ffdf 	bl	8008360 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj4EJRKSB_EEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 80083a2:	68fb      	ldr	r3, [r7, #12]
 80083a4:	4618      	mov	r0, r3
 80083a6:	3710      	adds	r7, #16
 80083a8:	46bd      	mov	sp, r7
 80083aa:	bdb0      	pop	{r4, r5, r7, pc}

080083ac <_ZN9__gnu_cxx16__aligned_membufISt4pairIKc10token_typeEE6_M_ptrEv>:
      _M_ptr() noexcept
 80083ac:	b580      	push	{r7, lr}
 80083ae:	b082      	sub	sp, #8
 80083b0:	af00      	add	r7, sp, #0
 80083b2:	6078      	str	r0, [r7, #4]
      { return static_cast<_Tp*>(_M_addr()); }
 80083b4:	6878      	ldr	r0, [r7, #4]
 80083b6:	f000 fcfa 	bl	8008dae <_ZN9__gnu_cxx16__aligned_membufISt4pairIKc10token_typeEE7_M_addrEv>
 80083ba:	4603      	mov	r3, r0
 80083bc:	4618      	mov	r0, r3
 80083be:	3708      	adds	r7, #8
 80083c0:	46bd      	mov	sp, r7
 80083c2:	bd80      	pop	{r7, pc}

080083c4 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEE7destroyIS5_EEvPT_>:
			    _Up(std::forward<_Args>(__args)...)))
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }

      template<typename _Up>
	void
	destroy(_Up* __p)
 80083c4:	b480      	push	{r7}
 80083c6:	b083      	sub	sp, #12
 80083c8:	af00      	add	r7, sp, #0
 80083ca:	6078      	str	r0, [r7, #4]
 80083cc:	6039      	str	r1, [r7, #0]
	noexcept(noexcept( __p->~_Up()))
	{ __p->~_Up(); }
 80083ce:	bf00      	nop
 80083d0:	370c      	adds	r7, #12
 80083d2:	46bd      	mov	sp, r7
 80083d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80083d8:	4770      	bx	lr

080083da <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEE10deallocateEPS6_j>:
      deallocate(pointer __p, size_type)
 80083da:	b580      	push	{r7, lr}
 80083dc:	b084      	sub	sp, #16
 80083de:	af00      	add	r7, sp, #0
 80083e0:	60f8      	str	r0, [r7, #12]
 80083e2:	60b9      	str	r1, [r7, #8]
 80083e4:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 80083e6:	68b8      	ldr	r0, [r7, #8]
 80083e8:	f01b f872 	bl	80234d0 <_ZdlPv>
      }
 80083ec:	3710      	adds	r7, #16
 80083ee:	46bd      	mov	sp, r7
 80083f0:	bd80      	pop	{r7, pc}

080083f2 <_ZNKSt13_Rb_tree_nodeISt4pairIKc10token_typeEE9_M_valptrEv>:
      _M_valptr() const
 80083f2:	b580      	push	{r7, lr}
 80083f4:	b082      	sub	sp, #8
 80083f6:	af00      	add	r7, sp, #0
 80083f8:	6078      	str	r0, [r7, #4]
      { return _M_storage._M_ptr(); }
 80083fa:	687b      	ldr	r3, [r7, #4]
 80083fc:	3310      	adds	r3, #16
 80083fe:	4618      	mov	r0, r3
 8008400:	f000 fce0 	bl	8008dc4 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKc10token_typeEE6_M_ptrEv>
 8008404:	4603      	mov	r3, r0
 8008406:	4618      	mov	r0, r3
 8008408:	3708      	adds	r7, #8
 800840a:	46bd      	mov	sp, r7
 800840c:	bd80      	pop	{r7, pc}

0800840e <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKc10token_typeEEEOT_RNSt16remove_referenceIS8_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800840e:	b480      	push	{r7}
 8008410:	b083      	sub	sp, #12
 8008412:	af00      	add	r7, sp, #0
 8008414:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8008416:	687b      	ldr	r3, [r7, #4]
 8008418:	4618      	mov	r0, r3
 800841a:	370c      	adds	r7, #12
 800841c:	46bd      	mov	sp, r7
 800841e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008422:	4770      	bx	lr

08008424 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_get_nodeEv>:
      _M_get_node()
 8008424:	b580      	push	{r7, lr}
 8008426:	b082      	sub	sp, #8
 8008428:	af00      	add	r7, sp, #0
 800842a:	6078      	str	r0, [r7, #4]
      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
 800842c:	6878      	ldr	r0, [r7, #4]
 800842e:	f7ff f8d0 	bl	80075d2 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE21_M_get_Node_allocatorEv>
 8008432:	4603      	mov	r3, r0
 8008434:	2101      	movs	r1, #1
 8008436:	4618      	mov	r0, r3
 8008438:	f000 fcd0 	bl	8008ddc <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEE8allocateERS6_j>
 800843c:	4603      	mov	r3, r0
 800843e:	4618      	mov	r0, r3
 8008440:	3708      	adds	r7, #8
 8008442:	46bd      	mov	sp, r7
 8008444:	bd80      	pop	{r7, pc}

08008446 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE17_M_construct_nodeIJRKS3_EEEvPSt13_Rb_tree_nodeIS3_EDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
 8008446:	b5b0      	push	{r4, r5, r7, lr}
 8008448:	b084      	sub	sp, #16
 800844a:	af00      	add	r7, sp, #0
 800844c:	60f8      	str	r0, [r7, #12]
 800844e:	60b9      	str	r1, [r7, #8]
 8008450:	607a      	str	r2, [r7, #4]
	      ::new(__node) _Rb_tree_node<_Val>;
 8008452:	68bb      	ldr	r3, [r7, #8]
 8008454:	4619      	mov	r1, r3
 8008456:	2014      	movs	r0, #20
 8008458:	f7f8 fdff 	bl	800105a <_ZnwjPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
 800845c:	68f8      	ldr	r0, [r7, #12]
 800845e:	f7ff f8b8 	bl	80075d2 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE21_M_get_Node_allocatorEv>
 8008462:	4604      	mov	r4, r0
 8008464:	68b8      	ldr	r0, [r7, #8]
 8008466:	f7ff f8bf 	bl	80075e8 <_ZNSt13_Rb_tree_nodeISt4pairIKc10token_typeEE9_M_valptrEv>
 800846a:	4605      	mov	r5, r0
 800846c:	6878      	ldr	r0, [r7, #4]
 800846e:	f7fd f875 	bl	800555c <_ZSt7forwardIRKSt4pairIKc10token_typeEEOT_RNSt16remove_referenceIS6_E4typeE>
 8008472:	4603      	mov	r3, r0
 8008474:	461a      	mov	r2, r3
 8008476:	4629      	mov	r1, r5
 8008478:	4620      	mov	r0, r4
 800847a:	f000 fcbe 	bl	8008dfa <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEE9constructIS4_JRKS4_EEEvRS6_PT_DpOT0_>
	}
 800847e:	bf00      	nop
 8008480:	3710      	adds	r7, #16
 8008482:	46bd      	mov	sp, r7
 8008484:	bdb0      	pop	{r4, r5, r7, pc}

08008486 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE6_M_ptrEv>:
      _M_ptr() noexcept
 8008486:	b580      	push	{r7, lr}
 8008488:	b082      	sub	sp, #8
 800848a:	af00      	add	r7, sp, #0
 800848c:	6078      	str	r0, [r7, #4]
      { return static_cast<_Tp*>(_M_addr()); }
 800848e:	6878      	ldr	r0, [r7, #4]
 8008490:	f000 fcc6 	bl	8008e20 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE7_M_addrEv>
 8008494:	4603      	mov	r3, r0
 8008496:	4618      	mov	r0, r3
 8008498:	3708      	adds	r7, #8
 800849a:	46bd      	mov	sp, r7
 800849c:	bd80      	pop	{r7, pc}

0800849e <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEE7destroyISB_EEvPT_>:
	destroy(_Up* __p)
 800849e:	b580      	push	{r7, lr}
 80084a0:	b082      	sub	sp, #8
 80084a2:	af00      	add	r7, sp, #0
 80084a4:	6078      	str	r0, [r7, #4]
 80084a6:	6039      	str	r1, [r7, #0]
	{ __p->~_Up(); }
 80084a8:	6838      	ldr	r0, [r7, #0]
 80084aa:	f7f8 fe18 	bl	80010de <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 80084ae:	bf00      	nop
 80084b0:	3708      	adds	r7, #8
 80084b2:	46bd      	mov	sp, r7
 80084b4:	bd80      	pop	{r7, pc}

080084b6 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEE10deallocateEPSC_j>:
      deallocate(pointer __p, size_type)
 80084b6:	b580      	push	{r7, lr}
 80084b8:	b084      	sub	sp, #16
 80084ba:	af00      	add	r7, sp, #0
 80084bc:	60f8      	str	r0, [r7, #12]
 80084be:	60b9      	str	r1, [r7, #8]
 80084c0:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 80084c2:	68b8      	ldr	r0, [r7, #8]
 80084c4:	f01b f804 	bl	80234d0 <_ZdlPv>
      }
 80084c8:	3710      	adds	r7, #16
 80084ca:	46bd      	mov	sp, r7
 80084cc:	bd80      	pop	{r7, pc}

080084ce <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE9_M_valptrEv>:
      _M_valptr() const
 80084ce:	b580      	push	{r7, lr}
 80084d0:	b082      	sub	sp, #8
 80084d2:	af00      	add	r7, sp, #0
 80084d4:	6078      	str	r0, [r7, #4]
      { return _M_storage._M_ptr(); }
 80084d6:	687b      	ldr	r3, [r7, #4]
 80084d8:	3310      	adds	r3, #16
 80084da:	4618      	mov	r0, r3
 80084dc:	f000 fcab 	bl	8008e36 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE6_M_ptrEv>
 80084e0:	4603      	mov	r3, r0
 80084e2:	4618      	mov	r0, r3
 80084e4:	3708      	adds	r7, #8
 80084e6:	46bd      	mov	sp, r7
 80084e8:	bd80      	pop	{r7, pc}

080084ea <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEOT_RNSt16remove_referenceISE_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80084ea:	b480      	push	{r7}
 80084ec:	b083      	sub	sp, #12
 80084ee:	af00      	add	r7, sp, #0
 80084f0:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80084f2:	687b      	ldr	r3, [r7, #4]
 80084f4:	4618      	mov	r0, r3
 80084f6:	370c      	adds	r7, #12
 80084f8:	46bd      	mov	sp, r7
 80084fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80084fe:	4770      	bx	lr

08008500 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_get_nodeEv>:
      _M_get_node()
 8008500:	b580      	push	{r7, lr}
 8008502:	b082      	sub	sp, #8
 8008504:	af00      	add	r7, sp, #0
 8008506:	6078      	str	r0, [r7, #4]
      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
 8008508:	6878      	ldr	r0, [r7, #4]
 800850a:	f7ff f90a 	bl	8007722 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE21_M_get_Node_allocatorEv>
 800850e:	4603      	mov	r3, r0
 8008510:	2101      	movs	r1, #1
 8008512:	4618      	mov	r0, r3
 8008514:	f000 fc9b 	bl	8008e4e <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEE8allocateERSC_j>
 8008518:	4603      	mov	r3, r0
 800851a:	4618      	mov	r0, r3
 800851c:	3708      	adds	r7, #8
 800851e:	46bd      	mov	sp, r7
 8008520:	bd80      	pop	{r7, pc}

08008522 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE17_M_construct_nodeIJRKS9_EEEvPSt13_Rb_tree_nodeIS9_EDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
 8008522:	b5b0      	push	{r4, r5, r7, lr}
 8008524:	b084      	sub	sp, #16
 8008526:	af00      	add	r7, sp, #0
 8008528:	60f8      	str	r0, [r7, #12]
 800852a:	60b9      	str	r1, [r7, #8]
 800852c:	607a      	str	r2, [r7, #4]
	      ::new(__node) _Rb_tree_node<_Val>;
 800852e:	68bb      	ldr	r3, [r7, #8]
 8008530:	4619      	mov	r1, r3
 8008532:	202c      	movs	r0, #44	; 0x2c
 8008534:	f7f8 fd91 	bl	800105a <_ZnwjPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
 8008538:	68f8      	ldr	r0, [r7, #12]
 800853a:	f7ff f8f2 	bl	8007722 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE21_M_get_Node_allocatorEv>
 800853e:	4604      	mov	r4, r0
 8008540:	68b8      	ldr	r0, [r7, #8]
 8008542:	f7ff f8f9 	bl	8007738 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE9_M_valptrEv>
 8008546:	4605      	mov	r5, r0
 8008548:	6878      	ldr	r0, [r7, #4]
 800854a:	f7fd f9fd 	bl	8005948 <_ZSt7forwardIRKSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEOT_RNSt16remove_referenceISC_E4typeE>
 800854e:	4603      	mov	r3, r0
 8008550:	461a      	mov	r2, r3
 8008552:	4629      	mov	r1, r5
 8008554:	4620      	mov	r0, r4
 8008556:	f000 fc89 	bl	8008e6c <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEE9constructISA_JRKSA_EEEvRSC_PT_DpOT0_>
	}
 800855a:	bf00      	nop
 800855c:	3710      	adds	r7, #16
 800855e:	46bd      	mov	sp, r7
 8008560:	bdb0      	pop	{r4, r5, r7, pc}

08008562 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKc12double_tokenEE6_M_ptrEv>:
      _M_ptr() noexcept
 8008562:	b580      	push	{r7, lr}
 8008564:	b082      	sub	sp, #8
 8008566:	af00      	add	r7, sp, #0
 8008568:	6078      	str	r0, [r7, #4]
      { return static_cast<_Tp*>(_M_addr()); }
 800856a:	6878      	ldr	r0, [r7, #4]
 800856c:	f000 fc91 	bl	8008e92 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKc12double_tokenEE7_M_addrEv>
 8008570:	4603      	mov	r3, r0
 8008572:	4618      	mov	r0, r3
 8008574:	3708      	adds	r7, #8
 8008576:	46bd      	mov	sp, r7
 8008578:	bd80      	pop	{r7, pc}

0800857a <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEE7destroyIS5_EEvPT_>:
	destroy(_Up* __p)
 800857a:	b480      	push	{r7}
 800857c:	b083      	sub	sp, #12
 800857e:	af00      	add	r7, sp, #0
 8008580:	6078      	str	r0, [r7, #4]
 8008582:	6039      	str	r1, [r7, #0]
	{ __p->~_Up(); }
 8008584:	bf00      	nop
 8008586:	370c      	adds	r7, #12
 8008588:	46bd      	mov	sp, r7
 800858a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800858e:	4770      	bx	lr

08008590 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEE10deallocateEPS6_j>:
      deallocate(pointer __p, size_type)
 8008590:	b580      	push	{r7, lr}
 8008592:	b084      	sub	sp, #16
 8008594:	af00      	add	r7, sp, #0
 8008596:	60f8      	str	r0, [r7, #12]
 8008598:	60b9      	str	r1, [r7, #8]
 800859a:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 800859c:	68b8      	ldr	r0, [r7, #8]
 800859e:	f01a ff97 	bl	80234d0 <_ZdlPv>
      }
 80085a2:	3710      	adds	r7, #16
 80085a4:	46bd      	mov	sp, r7
 80085a6:	bd80      	pop	{r7, pc}

080085a8 <_ZNKSt13_Rb_tree_nodeISt4pairIKc12double_tokenEE9_M_valptrEv>:
      _M_valptr() const
 80085a8:	b580      	push	{r7, lr}
 80085aa:	b082      	sub	sp, #8
 80085ac:	af00      	add	r7, sp, #0
 80085ae:	6078      	str	r0, [r7, #4]
      { return _M_storage._M_ptr(); }
 80085b0:	687b      	ldr	r3, [r7, #4]
 80085b2:	3310      	adds	r3, #16
 80085b4:	4618      	mov	r0, r3
 80085b6:	f000 fc77 	bl	8008ea8 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKc12double_tokenEE6_M_ptrEv>
 80085ba:	4603      	mov	r3, r0
 80085bc:	4618      	mov	r0, r3
 80085be:	3708      	adds	r7, #8
 80085c0:	46bd      	mov	sp, r7
 80085c2:	bd80      	pop	{r7, pc}

080085c4 <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEOT_RNSt16remove_referenceIS8_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80085c4:	b480      	push	{r7}
 80085c6:	b083      	sub	sp, #12
 80085c8:	af00      	add	r7, sp, #0
 80085ca:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80085cc:	687b      	ldr	r3, [r7, #4]
 80085ce:	4618      	mov	r0, r3
 80085d0:	370c      	adds	r7, #12
 80085d2:	46bd      	mov	sp, r7
 80085d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80085d8:	4770      	bx	lr

080085da <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_get_nodeEv>:
      _M_get_node()
 80085da:	b580      	push	{r7, lr}
 80085dc:	b082      	sub	sp, #8
 80085de:	af00      	add	r7, sp, #0
 80085e0:	6078      	str	r0, [r7, #4]
      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
 80085e2:	6878      	ldr	r0, [r7, #4]
 80085e4:	f7ff f94a 	bl	800787c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE21_M_get_Node_allocatorEv>
 80085e8:	4603      	mov	r3, r0
 80085ea:	2101      	movs	r1, #1
 80085ec:	4618      	mov	r0, r3
 80085ee:	f000 fc67 	bl	8008ec0 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEE8allocateERS6_j>
 80085f2:	4603      	mov	r3, r0
 80085f4:	4618      	mov	r0, r3
 80085f6:	3708      	adds	r7, #8
 80085f8:	46bd      	mov	sp, r7
 80085fa:	bd80      	pop	{r7, pc}

080085fc <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE17_M_construct_nodeIJRKS3_EEEvPSt13_Rb_tree_nodeIS3_EDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
 80085fc:	b5b0      	push	{r4, r5, r7, lr}
 80085fe:	b084      	sub	sp, #16
 8008600:	af00      	add	r7, sp, #0
 8008602:	60f8      	str	r0, [r7, #12]
 8008604:	60b9      	str	r1, [r7, #8]
 8008606:	607a      	str	r2, [r7, #4]
	      ::new(__node) _Rb_tree_node<_Val>;
 8008608:	68bb      	ldr	r3, [r7, #8]
 800860a:	4619      	mov	r1, r3
 800860c:	2014      	movs	r0, #20
 800860e:	f7f8 fd24 	bl	800105a <_ZnwjPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
 8008612:	68f8      	ldr	r0, [r7, #12]
 8008614:	f7ff f932 	bl	800787c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE21_M_get_Node_allocatorEv>
 8008618:	4604      	mov	r4, r0
 800861a:	68b8      	ldr	r0, [r7, #8]
 800861c:	f7ff f939 	bl	8007892 <_ZNSt13_Rb_tree_nodeISt4pairIKc12double_tokenEE9_M_valptrEv>
 8008620:	4605      	mov	r5, r0
 8008622:	6878      	ldr	r0, [r7, #4]
 8008624:	f7fd fb7a 	bl	8005d1c <_ZSt7forwardIRKSt4pairIKc12double_tokenEEOT_RNSt16remove_referenceIS6_E4typeE>
 8008628:	4603      	mov	r3, r0
 800862a:	461a      	mov	r2, r3
 800862c:	4629      	mov	r1, r5
 800862e:	4620      	mov	r0, r4
 8008630:	f000 fc55 	bl	8008ede <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEE9constructIS4_JRKS4_EEEvRS6_PT_DpOT0_>
	}
 8008634:	bf00      	nop
 8008636:	3710      	adds	r7, #16
 8008638:	46bd      	mov	sp, r7
 800863a:	bdb0      	pop	{r4, r5, r7, pc}

0800863c <_ZSt11__addressofIiEPT_RS0_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 800863c:	b480      	push	{r7}
 800863e:	b083      	sub	sp, #12
 8008640:	af00      	add	r7, sp, #0
 8008642:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 8008644:	687b      	ldr	r3, [r7, #4]
 8008646:	4618      	mov	r0, r3
 8008648:	370c      	adds	r7, #12
 800864a:	46bd      	mov	sp, r7
 800864c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008650:	4770      	bx	lr

08008652 <_ZSt8_DestroyIiEvPT_>:
    _Destroy(_Tp* __pointer)
 8008652:	b480      	push	{r7}
 8008654:	b083      	sub	sp, #12
 8008656:	af00      	add	r7, sp, #0
 8008658:	6078      	str	r0, [r7, #4]
    { __pointer->~_Tp(); }
 800865a:	bf00      	nop
 800865c:	370c      	adds	r7, #12
 800865e:	46bd      	mov	sp, r7
 8008660:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008664:	4770      	bx	lr

08008666 <_ZSt11__addressofIfEPT_RS0_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 8008666:	b480      	push	{r7}
 8008668:	b083      	sub	sp, #12
 800866a:	af00      	add	r7, sp, #0
 800866c:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 800866e:	687b      	ldr	r3, [r7, #4]
 8008670:	4618      	mov	r0, r3
 8008672:	370c      	adds	r7, #12
 8008674:	46bd      	mov	sp, r7
 8008676:	f85d 7b04 	ldr.w	r7, [sp], #4
 800867a:	4770      	bx	lr

0800867c <_ZSt8_DestroyIfEvPT_>:
    _Destroy(_Tp* __pointer)
 800867c:	b480      	push	{r7}
 800867e:	b083      	sub	sp, #12
 8008680:	af00      	add	r7, sp, #0
 8008682:	6078      	str	r0, [r7, #4]
    { __pointer->~_Tp(); }
 8008684:	bf00      	nop
 8008686:	370c      	adds	r7, #12
 8008688:	46bd      	mov	sp, r7
 800868a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800868e:	4770      	bx	lr

08008690 <_ZSt11__addressofIbEPT_RS0_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 8008690:	b480      	push	{r7}
 8008692:	b083      	sub	sp, #12
 8008694:	af00      	add	r7, sp, #0
 8008696:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 8008698:	687b      	ldr	r3, [r7, #4]
 800869a:	4618      	mov	r0, r3
 800869c:	370c      	adds	r7, #12
 800869e:	46bd      	mov	sp, r7
 80086a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80086a4:	4770      	bx	lr

080086a6 <_ZSt8_DestroyIbEvPT_>:
    _Destroy(_Tp* __pointer)
 80086a6:	b480      	push	{r7}
 80086a8:	b083      	sub	sp, #12
 80086aa:	af00      	add	r7, sp, #0
 80086ac:	6078      	str	r0, [r7, #4]
    { __pointer->~_Tp(); }
 80086ae:	bf00      	nop
 80086b0:	370c      	adds	r7, #12
 80086b2:	46bd      	mov	sp, r7
 80086b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80086b8:	4770      	bx	lr

080086ba <_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 80086ba:	b480      	push	{r7}
 80086bc:	b083      	sub	sp, #12
 80086be:	af00      	add	r7, sp, #0
 80086c0:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 80086c2:	687b      	ldr	r3, [r7, #4]
 80086c4:	4618      	mov	r0, r3
 80086c6:	370c      	adds	r7, #12
 80086c8:	46bd      	mov	sp, r7
 80086ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80086ce:	4770      	bx	lr

080086d0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_>:
    _Destroy(_Tp* __pointer)
 80086d0:	b580      	push	{r7, lr}
 80086d2:	b082      	sub	sp, #8
 80086d4:	af00      	add	r7, sp, #0
 80086d6:	6078      	str	r0, [r7, #4]
    { __pointer->~_Tp(); }
 80086d8:	6878      	ldr	r0, [r7, #4]
 80086da:	f01b f9ae 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80086de:	bf00      	nop
 80086e0:	3708      	adds	r7, #8
 80086e2:	46bd      	mov	sp, r7
 80086e4:	bd80      	pop	{r7, pc}

080086e6 <_ZSt11__addressofISt6vectorI6SymbolSaIS1_EEEPT_RS4_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 80086e6:	b480      	push	{r7}
 80086e8:	b083      	sub	sp, #12
 80086ea:	af00      	add	r7, sp, #0
 80086ec:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 80086ee:	687b      	ldr	r3, [r7, #4]
 80086f0:	4618      	mov	r0, r3
 80086f2:	370c      	adds	r7, #12
 80086f4:	46bd      	mov	sp, r7
 80086f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80086fa:	4770      	bx	lr

080086fc <_ZSt8_DestroyISt6vectorI6SymbolSaIS1_EEEvPT_>:
    _Destroy(_Tp* __pointer)
 80086fc:	b580      	push	{r7, lr}
 80086fe:	b082      	sub	sp, #8
 8008700:	af00      	add	r7, sp, #0
 8008702:	6078      	str	r0, [r7, #4]
    { __pointer->~_Tp(); }
 8008704:	6878      	ldr	r0, [r7, #4]
 8008706:	f000 f89d 	bl	8008844 <_ZNSt6vectorI6SymbolSaIS0_EED1Ev>
 800870a:	bf00      	nop
 800870c:	3708      	adds	r7, #8
 800870e:	46bd      	mov	sp, r7
 8008710:	bd80      	pop	{r7, pc}

08008712 <_ZNSt6vectorI6SymbolSaIS0_EEC1ERKS2_>:
      vector(const vector& __x)
 8008712:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008714:	b085      	sub	sp, #20
 8008716:	af00      	add	r7, sp, #0
 8008718:	6078      	str	r0, [r7, #4]
 800871a:	6039      	str	r1, [r7, #0]
	_Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()))
 800871c:	687c      	ldr	r4, [r7, #4]
 800871e:	6838      	ldr	r0, [r7, #0]
 8008720:	f7ff fd09 	bl	8008136 <_ZNKSt6vectorI6SymbolSaIS0_EE4sizeEv>
 8008724:	4605      	mov	r5, r0
 8008726:	683b      	ldr	r3, [r7, #0]
 8008728:	4618      	mov	r0, r3
 800872a:	f7ff fcbe 	bl	80080aa <_ZNKSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 800872e:	4602      	mov	r2, r0
 8008730:	f107 030c 	add.w	r3, r7, #12
 8008734:	4611      	mov	r1, r2
 8008736:	4618      	mov	r0, r3
 8008738:	f000 fbe4 	bl	8008f04 <_ZN9__gnu_cxx14__alloc_traitsISaI6SymbolES1_E17_S_select_on_copyERKS2_>
 800873c:	f107 030c 	add.w	r3, r7, #12
 8008740:	461a      	mov	r2, r3
 8008742:	4629      	mov	r1, r5
 8008744:	4620      	mov	r0, r4
 8008746:	f000 fbeb 	bl	8008f20 <_ZNSt12_Vector_baseI6SymbolSaIS0_EEC1EjRKS1_>
 800874a:	f107 030c 	add.w	r3, r7, #12
 800874e:	4618      	mov	r0, r3
 8008750:	f000 f85d 	bl	800880e <_ZNSaI6SymbolED1Ev>
	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 8008754:	6838      	ldr	r0, [r7, #0]
 8008756:	f7ff fd0e 	bl	8008176 <_ZNKSt6vectorI6SymbolSaIS0_EE5beginEv>
 800875a:	4605      	mov	r5, r0
 800875c:	6838      	ldr	r0, [r7, #0]
 800875e:	f7ff fd1e 	bl	800819e <_ZNKSt6vectorI6SymbolSaIS0_EE3endEv>
 8008762:	4606      	mov	r6, r0
 8008764:	687b      	ldr	r3, [r7, #4]
 8008766:	681c      	ldr	r4, [r3, #0]
				      _M_get_Tp_allocator());
 8008768:	687b      	ldr	r3, [r7, #4]
 800876a:	4618      	mov	r0, r3
 800876c:	f7ff fc92 	bl	8008094 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 8008770:	4603      	mov	r3, r0
	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 8008772:	4622      	mov	r2, r4
 8008774:	4631      	mov	r1, r6
 8008776:	4628      	mov	r0, r5
 8008778:	f000 f9d4 	bl	8008b24 <_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS2_SaIS2_EEEEPS2_S2_ET0_T_SB_SA_RSaIT1_E>
 800877c:	4602      	mov	r2, r0
	this->_M_impl._M_finish =
 800877e:	687b      	ldr	r3, [r7, #4]
 8008780:	605a      	str	r2, [r3, #4]
      }
 8008782:	687b      	ldr	r3, [r7, #4]
 8008784:	4618      	mov	r0, r3
 8008786:	3714      	adds	r7, #20
 8008788:	46bd      	mov	sp, r7
 800878a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800878c <_ZSt9addressofIiEPT_RS0_>:
    addressof(_Tp& __r) noexcept
 800878c:	b580      	push	{r7, lr}
 800878e:	b082      	sub	sp, #8
 8008790:	af00      	add	r7, sp, #0
 8008792:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 8008794:	6878      	ldr	r0, [r7, #4]
 8008796:	f7ff ff51 	bl	800863c <_ZSt11__addressofIiEPT_RS0_>
 800879a:	4603      	mov	r3, r0
 800879c:	4618      	mov	r0, r3
 800879e:	3708      	adds	r7, #8
 80087a0:	46bd      	mov	sp, r7
 80087a2:	bd80      	pop	{r7, pc}

080087a4 <_ZSt9addressofIfEPT_RS0_>:
    addressof(_Tp& __r) noexcept
 80087a4:	b580      	push	{r7, lr}
 80087a6:	b082      	sub	sp, #8
 80087a8:	af00      	add	r7, sp, #0
 80087aa:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 80087ac:	6878      	ldr	r0, [r7, #4]
 80087ae:	f7ff ff5a 	bl	8008666 <_ZSt11__addressofIfEPT_RS0_>
 80087b2:	4603      	mov	r3, r0
 80087b4:	4618      	mov	r0, r3
 80087b6:	3708      	adds	r7, #8
 80087b8:	46bd      	mov	sp, r7
 80087ba:	bd80      	pop	{r7, pc}

080087bc <_ZSt9addressofIbEPT_RS0_>:
    addressof(_Tp& __r) noexcept
 80087bc:	b580      	push	{r7, lr}
 80087be:	b082      	sub	sp, #8
 80087c0:	af00      	add	r7, sp, #0
 80087c2:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 80087c4:	6878      	ldr	r0, [r7, #4]
 80087c6:	f7ff ff63 	bl	8008690 <_ZSt11__addressofIbEPT_RS0_>
 80087ca:	4603      	mov	r3, r0
 80087cc:	4618      	mov	r0, r3
 80087ce:	3708      	adds	r7, #8
 80087d0:	46bd      	mov	sp, r7
 80087d2:	bd80      	pop	{r7, pc}

080087d4 <_ZSt9addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_>:
    addressof(_Tp& __r) noexcept
 80087d4:	b580      	push	{r7, lr}
 80087d6:	b082      	sub	sp, #8
 80087d8:	af00      	add	r7, sp, #0
 80087da:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 80087dc:	6878      	ldr	r0, [r7, #4]
 80087de:	f7ff ff6c 	bl	80086ba <_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_>
 80087e2:	4603      	mov	r3, r0
 80087e4:	4618      	mov	r0, r3
 80087e6:	3708      	adds	r7, #8
 80087e8:	46bd      	mov	sp, r7
 80087ea:	bd80      	pop	{r7, pc}

080087ec <_ZNKSt12_Vector_baseI6SymbolSaIS0_EE13get_allocatorEv>:
      get_allocator() const _GLIBCXX_NOEXCEPT
 80087ec:	b580      	push	{r7, lr}
 80087ee:	b082      	sub	sp, #8
 80087f0:	af00      	add	r7, sp, #0
 80087f2:	6078      	str	r0, [r7, #4]
 80087f4:	6039      	str	r1, [r7, #0]
      { return allocator_type(_M_get_Tp_allocator()); }
 80087f6:	6838      	ldr	r0, [r7, #0]
 80087f8:	f7ff fc57 	bl	80080aa <_ZNKSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 80087fc:	4603      	mov	r3, r0
 80087fe:	4619      	mov	r1, r3
 8008800:	6878      	ldr	r0, [r7, #4]
 8008802:	f000 fba1 	bl	8008f48 <_ZNSaI6SymbolEC1ERKS0_>
 8008806:	6878      	ldr	r0, [r7, #4]
 8008808:	3708      	adds	r7, #8
 800880a:	46bd      	mov	sp, r7
 800880c:	bd80      	pop	{r7, pc}

0800880e <_ZNSaI6SymbolED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
 800880e:	b580      	push	{r7, lr}
 8008810:	b082      	sub	sp, #8
 8008812:	af00      	add	r7, sp, #0
 8008814:	6078      	str	r0, [r7, #4]
 8008816:	6878      	ldr	r0, [r7, #4]
 8008818:	f000 fba4 	bl	8008f64 <_ZN9__gnu_cxx13new_allocatorI6SymbolED1Ev>
 800881c:	687b      	ldr	r3, [r7, #4]
 800881e:	4618      	mov	r0, r3
 8008820:	3708      	adds	r7, #8
 8008822:	46bd      	mov	sp, r7
 8008824:	bd80      	pop	{r7, pc}

08008826 <_ZNSt6vectorI6SymbolSaIS0_EEC1ERKS1_>:
      vector(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 8008826:	b580      	push	{r7, lr}
 8008828:	b082      	sub	sp, #8
 800882a:	af00      	add	r7, sp, #0
 800882c:	6078      	str	r0, [r7, #4]
 800882e:	6039      	str	r1, [r7, #0]
      : _Base(__a) { }
 8008830:	687b      	ldr	r3, [r7, #4]
 8008832:	6839      	ldr	r1, [r7, #0]
 8008834:	4618      	mov	r0, r3
 8008836:	f000 fba0 	bl	8008f7a <_ZNSt12_Vector_baseI6SymbolSaIS0_EEC1ERKS1_>
 800883a:	687b      	ldr	r3, [r7, #4]
 800883c:	4618      	mov	r0, r3
 800883e:	3708      	adds	r7, #8
 8008840:	46bd      	mov	sp, r7
 8008842:	bd80      	pop	{r7, pc}

08008844 <_ZNSt6vectorI6SymbolSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
 8008844:	b5b0      	push	{r4, r5, r7, lr}
 8008846:	b082      	sub	sp, #8
 8008848:	af00      	add	r7, sp, #0
 800884a:	6078      	str	r0, [r7, #4]
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 800884c:	687b      	ldr	r3, [r7, #4]
 800884e:	681c      	ldr	r4, [r3, #0]
 8008850:	687b      	ldr	r3, [r7, #4]
 8008852:	685d      	ldr	r5, [r3, #4]
		      _M_get_Tp_allocator());
 8008854:	687b      	ldr	r3, [r7, #4]
 8008856:	4618      	mov	r0, r3
 8008858:	f7ff fc1c 	bl	8008094 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 800885c:	4603      	mov	r3, r0
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 800885e:	461a      	mov	r2, r3
 8008860:	4629      	mov	r1, r5
 8008862:	4620      	mov	r0, r4
 8008864:	f7ff fccb 	bl	80081fe <_ZSt8_DestroyIP6SymbolS0_EvT_S2_RSaIT0_E>
      }
 8008868:	687b      	ldr	r3, [r7, #4]
 800886a:	4618      	mov	r0, r3
 800886c:	f000 f858 	bl	8008920 <_ZNSt12_Vector_baseI6SymbolSaIS0_EED1Ev>
 8008870:	687b      	ldr	r3, [r7, #4]
 8008872:	4618      	mov	r0, r3
 8008874:	3708      	adds	r7, #8
 8008876:	46bd      	mov	sp, r7
 8008878:	bdb0      	pop	{r4, r5, r7, pc}

0800887a <_ZNSt12_Vector_baseI6SymbolSaIS0_EE17_Vector_impl_data12_M_swap_dataERS3_>:
	_M_swap_data(_Vector_impl_data& __x) _GLIBCXX_NOEXCEPT
 800887a:	b580      	push	{r7, lr}
 800887c:	b086      	sub	sp, #24
 800887e:	af00      	add	r7, sp, #0
 8008880:	6078      	str	r0, [r7, #4]
 8008882:	6039      	str	r1, [r7, #0]
	  _Vector_impl_data __tmp;
 8008884:	f107 030c 	add.w	r3, r7, #12
 8008888:	4618      	mov	r0, r3
 800888a:	f000 fb85 	bl	8008f98 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE17_Vector_impl_dataC1Ev>
	  __tmp._M_copy_data(*this);
 800888e:	f107 030c 	add.w	r3, r7, #12
 8008892:	6879      	ldr	r1, [r7, #4]
 8008894:	4618      	mov	r0, r3
 8008896:	f000 fb93 	bl	8008fc0 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE17_Vector_impl_data12_M_copy_dataERKS3_>
	  _M_copy_data(__x);
 800889a:	6839      	ldr	r1, [r7, #0]
 800889c:	6878      	ldr	r0, [r7, #4]
 800889e:	f000 fb8f 	bl	8008fc0 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE17_Vector_impl_data12_M_copy_dataERKS3_>
	  __x._M_copy_data(__tmp);
 80088a2:	f107 030c 	add.w	r3, r7, #12
 80088a6:	4619      	mov	r1, r3
 80088a8:	6838      	ldr	r0, [r7, #0]
 80088aa:	f000 fb89 	bl	8008fc0 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE17_Vector_impl_data12_M_copy_dataERKS3_>
	}
 80088ae:	bf00      	nop
 80088b0:	3718      	adds	r7, #24
 80088b2:	46bd      	mov	sp, r7
 80088b4:	bd80      	pop	{r7, pc}

080088b6 <_ZSt15__alloc_on_moveISaI6SymbolEEvRT_S3_>:
  template<typename _Alloc>
    inline void __do_alloc_on_move(_Alloc&, _Alloc&, false_type)
    { }

  template<typename _Alloc>
    inline void __alloc_on_move(_Alloc& __one, _Alloc& __two)
 80088b6:	b580      	push	{r7, lr}
 80088b8:	b084      	sub	sp, #16
 80088ba:	af00      	add	r7, sp, #0
 80088bc:	6078      	str	r0, [r7, #4]
 80088be:	6039      	str	r1, [r7, #0]
    {
      typedef allocator_traits<_Alloc> __traits;
      typedef typename __traits::propagate_on_container_move_assignment __pocma;
      __do_alloc_on_move(__one, __two, __pocma());
 80088c0:	461a      	mov	r2, r3
 80088c2:	6839      	ldr	r1, [r7, #0]
 80088c4:	6878      	ldr	r0, [r7, #4]
 80088c6:	f000 fb92 	bl	8008fee <_ZSt18__do_alloc_on_moveISaI6SymbolEEvRT_S3_St17integral_constantIbLb1EE>
    }
 80088ca:	bf00      	nop
 80088cc:	3710      	adds	r7, #16
 80088ce:	46bd      	mov	sp, r7
 80088d0:	bd80      	pop	{r7, pc}

080088d2 <_ZSt9addressofISt6vectorI6SymbolSaIS1_EEEPT_RS4_>:
    addressof(_Tp& __r) noexcept
 80088d2:	b580      	push	{r7, lr}
 80088d4:	b082      	sub	sp, #8
 80088d6:	af00      	add	r7, sp, #0
 80088d8:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 80088da:	6878      	ldr	r0, [r7, #4]
 80088dc:	f7ff ff03 	bl	80086e6 <_ZSt11__addressofISt6vectorI6SymbolSaIS1_EEEPT_RS4_>
 80088e0:	4603      	mov	r3, r0
 80088e2:	4618      	mov	r0, r3
 80088e4:	3708      	adds	r7, #8
 80088e6:	46bd      	mov	sp, r7
 80088e8:	bd80      	pop	{r7, pc}

080088ea <_ZNSt12_Vector_baseI6SymbolSaIS0_EE12_Vector_implC1EOS3_>:
	_Vector_impl(_Vector_impl&& __x) noexcept
 80088ea:	b590      	push	{r4, r7, lr}
 80088ec:	b083      	sub	sp, #12
 80088ee:	af00      	add	r7, sp, #0
 80088f0:	6078      	str	r0, [r7, #4]
 80088f2:	6039      	str	r1, [r7, #0]
	: _Tp_alloc_type(std::move(__x)), _Vector_impl_data(std::move(__x))
 80088f4:	6838      	ldr	r0, [r7, #0]
 80088f6:	f000 fb87 	bl	8009008 <_ZSt4moveIRNSt12_Vector_baseI6SymbolSaIS1_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS7_>
 80088fa:	4603      	mov	r3, r0
 80088fc:	4619      	mov	r1, r3
 80088fe:	6878      	ldr	r0, [r7, #4]
 8008900:	f000 fb22 	bl	8008f48 <_ZNSaI6SymbolEC1ERKS0_>
 8008904:	687c      	ldr	r4, [r7, #4]
 8008906:	6838      	ldr	r0, [r7, #0]
 8008908:	f000 fb7e 	bl	8009008 <_ZSt4moveIRNSt12_Vector_baseI6SymbolSaIS1_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS7_>
 800890c:	4603      	mov	r3, r0
 800890e:	4619      	mov	r1, r3
 8008910:	4620      	mov	r0, r4
 8008912:	f000 fb84 	bl	800901e <_ZNSt12_Vector_baseI6SymbolSaIS0_EE17_Vector_impl_dataC1EOS3_>
	{ }
 8008916:	687b      	ldr	r3, [r7, #4]
 8008918:	4618      	mov	r0, r3
 800891a:	370c      	adds	r7, #12
 800891c:	46bd      	mov	sp, r7
 800891e:	bd90      	pop	{r4, r7, pc}

08008920 <_ZNSt12_Vector_baseI6SymbolSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
 8008920:	b580      	push	{r7, lr}
 8008922:	b082      	sub	sp, #8
 8008924:	af00      	add	r7, sp, #0
 8008926:	6078      	str	r0, [r7, #4]
	_M_deallocate(_M_impl._M_start,
 8008928:	687b      	ldr	r3, [r7, #4]
 800892a:	6819      	ldr	r1, [r3, #0]
		      _M_impl._M_end_of_storage - _M_impl._M_start);
 800892c:	687b      	ldr	r3, [r7, #4]
 800892e:	689a      	ldr	r2, [r3, #8]
 8008930:	687b      	ldr	r3, [r7, #4]
 8008932:	681b      	ldr	r3, [r3, #0]
 8008934:	1ad3      	subs	r3, r2, r3
 8008936:	115b      	asrs	r3, r3, #5
	_M_deallocate(_M_impl._M_start,
 8008938:	461a      	mov	r2, r3
 800893a:	6878      	ldr	r0, [r7, #4]
 800893c:	f7ff fbda 	bl	80080f4 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE13_M_deallocateEPS0_j>
      }
 8008940:	687b      	ldr	r3, [r7, #4]
 8008942:	4618      	mov	r0, r3
 8008944:	f7ff fa89 	bl	8007e5a <_ZNSt12_Vector_baseI6SymbolSaIS0_EE12_Vector_implD1Ev>
 8008948:	687b      	ldr	r3, [r7, #4]
 800894a:	4618      	mov	r0, r3
 800894c:	3708      	adds	r7, #8
 800894e:	46bd      	mov	sp, r7
 8008950:	bd80      	pop	{r7, pc}

08008952 <_ZNSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IJRKS7_EEESt16in_place_index_tILj0EEDpOT_>:
	_Uninitialized(in_place_index_t<0>, _Args&&... __args)
 8008952:	b590      	push	{r4, r7, lr}
 8008954:	b085      	sub	sp, #20
 8008956:	af00      	add	r7, sp, #0
 8008958:	60f8      	str	r0, [r7, #12]
 800895a:	7239      	strb	r1, [r7, #8]
 800895c:	607a      	str	r2, [r7, #4]
	    _Type(std::forward<_Args>(__args)...);
 800895e:	6878      	ldr	r0, [r7, #4]
 8008960:	f7fc fba0 	bl	80050a4 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 8008964:	4604      	mov	r4, r0
	  ::new ((void*)std::addressof(_M_storage))
 8008966:	68fb      	ldr	r3, [r7, #12]
 8008968:	4618      	mov	r0, r3
 800896a:	f000 fb7b 	bl	8009064 <_ZSt9addressofIN9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEPT_RS9_>
 800896e:	4603      	mov	r3, r0
 8008970:	4619      	mov	r1, r3
 8008972:	2018      	movs	r0, #24
 8008974:	f7f8 fb71 	bl	800105a <_ZnwjPv>
 8008978:	4603      	mov	r3, r0
 800897a:	4621      	mov	r1, r4
 800897c:	4618      	mov	r0, r3
 800897e:	f01b fa2b 	bl	8023dd8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
	}
 8008982:	68fb      	ldr	r3, [r7, #12]
 8008984:	4618      	mov	r0, r3
 8008986:	3714      	adds	r7, #20
 8008988:	46bd      	mov	sp, r7
 800898a:	bd90      	pop	{r4, r7, pc}

0800898c <_ZNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1IJRKS7_EEESt16in_place_index_tILj0EEDpOT_>:
	constexpr _Variadic_union(in_place_index_t<0>, _Args&&... __args)
 800898c:	b5b0      	push	{r4, r5, r7, lr}
 800898e:	b084      	sub	sp, #16
 8008990:	af00      	add	r7, sp, #0
 8008992:	60f8      	str	r0, [r7, #12]
 8008994:	7239      	strb	r1, [r7, #8]
 8008996:	607a      	str	r2, [r7, #4]
	: _M_first(in_place_index<0>, std::forward<_Args>(__args)...)
 8008998:	68fc      	ldr	r4, [r7, #12]
 800899a:	6878      	ldr	r0, [r7, #4]
 800899c:	f7fc fb82 	bl	80050a4 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 80089a0:	4603      	mov	r3, r0
 80089a2:	461a      	mov	r2, r3
 80089a4:	4629      	mov	r1, r5
 80089a6:	4620      	mov	r0, r4
 80089a8:	f7ff ffd3 	bl	8008952 <_ZNSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IJRKS7_EEESt16in_place_index_tILj0EEDpOT_>
	{ }
 80089ac:	68fb      	ldr	r3, [r7, #12]
 80089ae:	4618      	mov	r0, r3
 80089b0:	3710      	adds	r7, #16
 80089b2:	46bd      	mov	sp, r7
 80089b4:	bdb0      	pop	{r4, r5, r7, pc}

080089b6 <_ZNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj1EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variadic_union(in_place_index_t<_Np>, _Args&&... __args)
 80089b6:	b5b0      	push	{r4, r5, r7, lr}
 80089b8:	b084      	sub	sp, #16
 80089ba:	af00      	add	r7, sp, #0
 80089bc:	60f8      	str	r0, [r7, #12]
 80089be:	7239      	strb	r1, [r7, #8]
 80089c0:	607a      	str	r2, [r7, #4]
	: _M_rest(in_place_index<_Np-1>, std::forward<_Args>(__args)...)
 80089c2:	68fc      	ldr	r4, [r7, #12]
 80089c4:	6878      	ldr	r0, [r7, #4]
 80089c6:	f7fc fb6d 	bl	80050a4 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 80089ca:	4603      	mov	r3, r0
 80089cc:	461a      	mov	r2, r3
 80089ce:	4629      	mov	r1, r5
 80089d0:	4620      	mov	r0, r4
 80089d2:	f7ff ffdb 	bl	800898c <_ZNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1IJRKS7_EEESt16in_place_index_tILj0EEDpOT_>
	{ }
 80089d6:	68fb      	ldr	r3, [r7, #12]
 80089d8:	4618      	mov	r0, r3
 80089da:	3710      	adds	r7, #16
 80089dc:	46bd      	mov	sp, r7
 80089de:	bdb0      	pop	{r4, r5, r7, pc}

080089e0 <_ZNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj2EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variadic_union(in_place_index_t<_Np>, _Args&&... __args)
 80089e0:	b5b0      	push	{r4, r5, r7, lr}
 80089e2:	b084      	sub	sp, #16
 80089e4:	af00      	add	r7, sp, #0
 80089e6:	60f8      	str	r0, [r7, #12]
 80089e8:	7239      	strb	r1, [r7, #8]
 80089ea:	607a      	str	r2, [r7, #4]
	: _M_rest(in_place_index<_Np-1>, std::forward<_Args>(__args)...)
 80089ec:	68fc      	ldr	r4, [r7, #12]
 80089ee:	6878      	ldr	r0, [r7, #4]
 80089f0:	f7fc fb58 	bl	80050a4 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 80089f4:	4603      	mov	r3, r0
 80089f6:	461a      	mov	r2, r3
 80089f8:	4629      	mov	r1, r5
 80089fa:	4620      	mov	r0, r4
 80089fc:	f7ff ffdb 	bl	80089b6 <_ZNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj1EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 8008a00:	68fb      	ldr	r3, [r7, #12]
 8008a02:	4618      	mov	r0, r3
 8008a04:	3710      	adds	r7, #16
 8008a06:	46bd      	mov	sp, r7
 8008a08:	bdb0      	pop	{r4, r5, r7, pc}

08008a0a <_ZNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj3EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variadic_union(in_place_index_t<_Np>, _Args&&... __args)
 8008a0a:	b5b0      	push	{r4, r5, r7, lr}
 8008a0c:	b084      	sub	sp, #16
 8008a0e:	af00      	add	r7, sp, #0
 8008a10:	60f8      	str	r0, [r7, #12]
 8008a12:	7239      	strb	r1, [r7, #8]
 8008a14:	607a      	str	r2, [r7, #4]
	: _M_rest(in_place_index<_Np-1>, std::forward<_Args>(__args)...)
 8008a16:	68fc      	ldr	r4, [r7, #12]
 8008a18:	6878      	ldr	r0, [r7, #4]
 8008a1a:	f7fc fb43 	bl	80050a4 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 8008a1e:	4603      	mov	r3, r0
 8008a20:	461a      	mov	r2, r3
 8008a22:	4629      	mov	r1, r5
 8008a24:	4620      	mov	r0, r4
 8008a26:	f7ff ffdb 	bl	80089e0 <_ZNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj2EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 8008a2a:	68fb      	ldr	r3, [r7, #12]
 8008a2c:	4618      	mov	r0, r3
 8008a2e:	3710      	adds	r7, #16
 8008a30:	46bd      	mov	sp, r7
 8008a32:	bdb0      	pop	{r4, r5, r7, pc}

08008a34 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj3EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variant_storage(in_place_index_t<_Np>, _Args&&... __args)
 8008a34:	b5b0      	push	{r4, r5, r7, lr}
 8008a36:	b084      	sub	sp, #16
 8008a38:	af00      	add	r7, sp, #0
 8008a3a:	60f8      	str	r0, [r7, #12]
 8008a3c:	7239      	strb	r1, [r7, #8]
 8008a3e:	607a      	str	r2, [r7, #4]
	_M_index(_Np)
 8008a40:	68fc      	ldr	r4, [r7, #12]
 8008a42:	6878      	ldr	r0, [r7, #4]
 8008a44:	f7fc fb2e 	bl	80050a4 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 8008a48:	4603      	mov	r3, r0
 8008a4a:	461a      	mov	r2, r3
 8008a4c:	4629      	mov	r1, r5
 8008a4e:	4620      	mov	r0, r4
 8008a50:	f7ff ffdb 	bl	8008a0a <_ZNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj3EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>
 8008a54:	68fb      	ldr	r3, [r7, #12]
 8008a56:	2203      	movs	r2, #3
 8008a58:	761a      	strb	r2, [r3, #24]
	{ }
 8008a5a:	68fb      	ldr	r3, [r7, #12]
 8008a5c:	4618      	mov	r0, r3
 8008a5e:	3710      	adds	r7, #16
 8008a60:	46bd      	mov	sp, r7
 8008a62:	bdb0      	pop	{r4, r5, r7, pc}

08008a64 <_ZNSt6vectorI6SymbolSaIS0_EE15_M_erase_at_endEPS0_>:
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
 8008a64:	b590      	push	{r4, r7, lr}
 8008a66:	b085      	sub	sp, #20
 8008a68:	af00      	add	r7, sp, #0
 8008a6a:	6078      	str	r0, [r7, #4]
 8008a6c:	6039      	str	r1, [r7, #0]
	if (size_type __n = this->_M_impl._M_finish - __pos)
 8008a6e:	687b      	ldr	r3, [r7, #4]
 8008a70:	685a      	ldr	r2, [r3, #4]
 8008a72:	683b      	ldr	r3, [r7, #0]
 8008a74:	1ad3      	subs	r3, r2, r3
 8008a76:	115b      	asrs	r3, r3, #5
 8008a78:	60fb      	str	r3, [r7, #12]
 8008a7a:	68fb      	ldr	r3, [r7, #12]
 8008a7c:	2b00      	cmp	r3, #0
 8008a7e:	d00e      	beq.n	8008a9e <_ZNSt6vectorI6SymbolSaIS0_EE15_M_erase_at_endEPS0_+0x3a>
	    std::_Destroy(__pos, this->_M_impl._M_finish,
 8008a80:	687b      	ldr	r3, [r7, #4]
 8008a82:	685c      	ldr	r4, [r3, #4]
			  _M_get_Tp_allocator());
 8008a84:	687b      	ldr	r3, [r7, #4]
 8008a86:	4618      	mov	r0, r3
 8008a88:	f7ff fb04 	bl	8008094 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 8008a8c:	4603      	mov	r3, r0
	    std::_Destroy(__pos, this->_M_impl._M_finish,
 8008a8e:	461a      	mov	r2, r3
 8008a90:	4621      	mov	r1, r4
 8008a92:	6838      	ldr	r0, [r7, #0]
 8008a94:	f7ff fbb3 	bl	80081fe <_ZSt8_DestroyIP6SymbolS0_EvT_S2_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
 8008a98:	687b      	ldr	r3, [r7, #4]
 8008a9a:	683a      	ldr	r2, [r7, #0]
 8008a9c:	605a      	str	r2, [r3, #4]
      }
 8008a9e:	bf00      	nop
 8008aa0:	3714      	adds	r7, #20
 8008aa2:	46bd      	mov	sp, r7
 8008aa4:	bd90      	pop	{r4, r7, pc}

08008aa6 <_ZNSt16allocator_traitsISaI6SymbolEE10deallocateERS1_PS0_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 8008aa6:	b580      	push	{r7, lr}
 8008aa8:	b084      	sub	sp, #16
 8008aaa:	af00      	add	r7, sp, #0
 8008aac:	60f8      	str	r0, [r7, #12]
 8008aae:	60b9      	str	r1, [r7, #8]
 8008ab0:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 8008ab2:	687a      	ldr	r2, [r7, #4]
 8008ab4:	68b9      	ldr	r1, [r7, #8]
 8008ab6:	68f8      	ldr	r0, [r7, #12]
 8008ab8:	f000 fae0 	bl	800907c <_ZN9__gnu_cxx13new_allocatorI6SymbolE10deallocateEPS1_j>
 8008abc:	bf00      	nop
 8008abe:	3710      	adds	r7, #16
 8008ac0:	46bd      	mov	sp, r7
 8008ac2:	bd80      	pop	{r7, pc}

08008ac4 <_ZSt18__do_alloc_on_copyISaI6SymbolEEvRT_RKS2_St17integral_constantIbLb0EE>:
    __do_alloc_on_copy(_Alloc&, const _Alloc&, false_type)
 8008ac4:	b480      	push	{r7}
 8008ac6:	b085      	sub	sp, #20
 8008ac8:	af00      	add	r7, sp, #0
 8008aca:	60f8      	str	r0, [r7, #12]
 8008acc:	60b9      	str	r1, [r7, #8]
 8008ace:	713a      	strb	r2, [r7, #4]
    { }
 8008ad0:	bf00      	nop
 8008ad2:	3714      	adds	r7, #20
 8008ad4:	46bd      	mov	sp, r7
 8008ad6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008ada:	4770      	bx	lr

08008adc <_ZN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS1_SaIS1_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 8008adc:	b480      	push	{r7}
 8008ade:	b083      	sub	sp, #12
 8008ae0:	af00      	add	r7, sp, #0
 8008ae2:	6078      	str	r0, [r7, #4]
 8008ae4:	6039      	str	r1, [r7, #0]
      : _M_current(__i) { }
 8008ae6:	683b      	ldr	r3, [r7, #0]
 8008ae8:	681a      	ldr	r2, [r3, #0]
 8008aea:	687b      	ldr	r3, [r7, #4]
 8008aec:	601a      	str	r2, [r3, #0]
 8008aee:	687b      	ldr	r3, [r7, #4]
 8008af0:	4618      	mov	r0, r3
 8008af2:	370c      	adds	r7, #12
 8008af4:	46bd      	mov	sp, r7
 8008af6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008afa:	4770      	bx	lr

08008afc <_ZNSt12_Vector_baseI6SymbolSaIS0_EE11_M_allocateEj>:
      _M_allocate(size_t __n)
 8008afc:	b580      	push	{r7, lr}
 8008afe:	b082      	sub	sp, #8
 8008b00:	af00      	add	r7, sp, #0
 8008b02:	6078      	str	r0, [r7, #4]
 8008b04:	6039      	str	r1, [r7, #0]
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 8008b06:	683b      	ldr	r3, [r7, #0]
 8008b08:	2b00      	cmp	r3, #0
 8008b0a:	d006      	beq.n	8008b1a <_ZNSt12_Vector_baseI6SymbolSaIS0_EE11_M_allocateEj+0x1e>
 8008b0c:	687b      	ldr	r3, [r7, #4]
 8008b0e:	6839      	ldr	r1, [r7, #0]
 8008b10:	4618      	mov	r0, r3
 8008b12:	f000 fabf 	bl	8009094 <_ZNSt16allocator_traitsISaI6SymbolEE8allocateERS1_j>
 8008b16:	4603      	mov	r3, r0
 8008b18:	e000      	b.n	8008b1c <_ZNSt12_Vector_baseI6SymbolSaIS0_EE11_M_allocateEj+0x20>
 8008b1a:	2300      	movs	r3, #0
      }
 8008b1c:	4618      	mov	r0, r3
 8008b1e:	3708      	adds	r7, #8
 8008b20:	46bd      	mov	sp, r7
 8008b22:	bd80      	pop	{r7, pc}

08008b24 <_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS2_SaIS2_EEEEPS2_S2_ET0_T_SB_SA_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
 8008b24:	b580      	push	{r7, lr}
 8008b26:	b084      	sub	sp, #16
 8008b28:	af00      	add	r7, sp, #0
 8008b2a:	60f8      	str	r0, [r7, #12]
 8008b2c:	60b9      	str	r1, [r7, #8]
 8008b2e:	607a      	str	r2, [r7, #4]
 8008b30:	603b      	str	r3, [r7, #0]
    { return std::uninitialized_copy(__first, __last, __result); }
 8008b32:	687a      	ldr	r2, [r7, #4]
 8008b34:	68b9      	ldr	r1, [r7, #8]
 8008b36:	68f8      	ldr	r0, [r7, #12]
 8008b38:	f000 fabb 	bl	80090b2 <_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_>
 8008b3c:	4603      	mov	r3, r0
 8008b3e:	4618      	mov	r0, r3
 8008b40:	3710      	adds	r7, #16
 8008b42:	46bd      	mov	sp, r7
 8008b44:	bd80      	pop	{r7, pc}

08008b46 <_ZSt8_DestroyIP6SymbolEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 8008b46:	b580      	push	{r7, lr}
 8008b48:	b082      	sub	sp, #8
 8008b4a:	af00      	add	r7, sp, #0
 8008b4c:	6078      	str	r0, [r7, #4]
 8008b4e:	6039      	str	r1, [r7, #0]
	__destroy(__first, __last);
 8008b50:	6839      	ldr	r1, [r7, #0]
 8008b52:	6878      	ldr	r0, [r7, #4]
 8008b54:	f000 fabf 	bl	80090d6 <_ZNSt12_Destroy_auxILb0EE9__destroyIP6SymbolEEvT_S4_>
    }
 8008b58:	bf00      	nop
 8008b5a:	3708      	adds	r7, #8
 8008b5c:	46bd      	mov	sp, r7
 8008b5e:	bd80      	pop	{r7, pc}

08008b60 <_ZN9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 8008b60:	b480      	push	{r7}
 8008b62:	b083      	sub	sp, #12
 8008b64:	af00      	add	r7, sp, #0
 8008b66:	6078      	str	r0, [r7, #4]
 8008b68:	6039      	str	r1, [r7, #0]
      : _M_current(__i) { }
 8008b6a:	683b      	ldr	r3, [r7, #0]
 8008b6c:	681a      	ldr	r2, [r3, #0]
 8008b6e:	687b      	ldr	r3, [r7, #4]
 8008b70:	601a      	str	r2, [r3, #0]
 8008b72:	687b      	ldr	r3, [r7, #4]
 8008b74:	4618      	mov	r0, r3
 8008b76:	370c      	adds	r7, #12
 8008b78:	46bd      	mov	sp, r7
 8008b7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008b7e:	4770      	bx	lr

08008b80 <_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS2_SaIS2_EEEEET_S9_>:

  // Fallback implementation of the function in bits/stl_iterator.h used to
  // remove the move_iterator wrapper.
  template<typename _Iterator>
    inline _Iterator
    __miter_base(_Iterator __it)
 8008b80:	b480      	push	{r7}
 8008b82:	b083      	sub	sp, #12
 8008b84:	af00      	add	r7, sp, #0
 8008b86:	6078      	str	r0, [r7, #4]
    { return __it; }
 8008b88:	687b      	ldr	r3, [r7, #4]
 8008b8a:	4618      	mov	r0, r3
 8008b8c:	370c      	adds	r7, #12
 8008b8e:	46bd      	mov	sp, r7
 8008b90:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008b94:	4770      	bx	lr

08008b96 <_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET1_T0_SC_SB_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
 8008b96:	b5b0      	push	{r4, r5, r7, lr}
 8008b98:	b084      	sub	sp, #16
 8008b9a:	af00      	add	r7, sp, #0
 8008b9c:	60f8      	str	r0, [r7, #12]
 8008b9e:	60b9      	str	r1, [r7, #8]
 8008ba0:	607a      	str	r2, [r7, #4]
      return std::__niter_wrap(__result,
 8008ba2:	68f8      	ldr	r0, [r7, #12]
 8008ba4:	f000 faaf 	bl	8009106 <_ZSt12__niter_baseIPK6SymbolSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE>
 8008ba8:	4604      	mov	r4, r0
 8008baa:	68b8      	ldr	r0, [r7, #8]
 8008bac:	f000 faab 	bl	8009106 <_ZSt12__niter_baseIPK6SymbolSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE>
 8008bb0:	4605      	mov	r5, r0
 8008bb2:	6878      	ldr	r0, [r7, #4]
 8008bb4:	f000 fab5 	bl	8009122 <_ZSt12__niter_baseIP6SymbolSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE>
 8008bb8:	4603      	mov	r3, r0
 8008bba:	461a      	mov	r2, r3
 8008bbc:	4629      	mov	r1, r5
 8008bbe:	4620      	mov	r0, r4
 8008bc0:	f000 fabd 	bl	800913e <_ZSt13__copy_move_aILb0EPK6SymbolPS0_ET1_T0_S5_S4_>
 8008bc4:	4603      	mov	r3, r0
 8008bc6:	4619      	mov	r1, r3
 8008bc8:	6878      	ldr	r0, [r7, #4]
 8008bca:	f000 faca 	bl	8009162 <_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS2_SaIS2_EEEES3_ET_S8_T0_>
 8008bce:	4603      	mov	r3, r0
    }
 8008bd0:	4618      	mov	r0, r3
 8008bd2:	3710      	adds	r7, #16
 8008bd4:	46bd      	mov	sp, r7
 8008bd6:	bdb0      	pop	{r4, r5, r7, pc}

08008bd8 <_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS2_SaIS2_EEEEEvT_S8_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 8008bd8:	b580      	push	{r7, lr}
 8008bda:	b082      	sub	sp, #8
 8008bdc:	af00      	add	r7, sp, #0
 8008bde:	6078      	str	r0, [r7, #4]
 8008be0:	6039      	str	r1, [r7, #0]
	__destroy(__first, __last);
 8008be2:	6839      	ldr	r1, [r7, #0]
 8008be4:	6878      	ldr	r0, [r7, #4]
 8008be6:	f000 fad3 	bl	8009190 <_ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS4_SaIS4_EEEEEEvT_SA_>
    }
 8008bea:	bf00      	nop
 8008bec:	3708      	adds	r7, #8
 8008bee:	46bd      	mov	sp, r7
 8008bf0:	bd80      	pop	{r7, pc}

08008bf2 <_ZSt12__miter_baseIP6SymbolET_S2_>:
    __miter_base(_Iterator __it)
 8008bf2:	b480      	push	{r7}
 8008bf4:	b083      	sub	sp, #12
 8008bf6:	af00      	add	r7, sp, #0
 8008bf8:	6078      	str	r0, [r7, #4]
    { return __it; }
 8008bfa:	687b      	ldr	r3, [r7, #4]
 8008bfc:	4618      	mov	r0, r3
 8008bfe:	370c      	adds	r7, #12
 8008c00:	46bd      	mov	sp, r7
 8008c02:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008c06:	4770      	bx	lr

08008c08 <_ZSt14__copy_move_a2ILb0EP6SymbolS1_ET1_T0_S3_S2_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
 8008c08:	b5b0      	push	{r4, r5, r7, lr}
 8008c0a:	b084      	sub	sp, #16
 8008c0c:	af00      	add	r7, sp, #0
 8008c0e:	60f8      	str	r0, [r7, #12]
 8008c10:	60b9      	str	r1, [r7, #8]
 8008c12:	607a      	str	r2, [r7, #4]
      return std::__niter_wrap(__result,
 8008c14:	68f8      	ldr	r0, [r7, #12]
 8008c16:	f000 fade 	bl	80091d6 <_ZSt12__niter_baseIP6SymbolET_S2_>
 8008c1a:	4604      	mov	r4, r0
 8008c1c:	68b8      	ldr	r0, [r7, #8]
 8008c1e:	f000 fada 	bl	80091d6 <_ZSt12__niter_baseIP6SymbolET_S2_>
 8008c22:	4605      	mov	r5, r0
 8008c24:	687b      	ldr	r3, [r7, #4]
 8008c26:	4618      	mov	r0, r3
 8008c28:	f000 fad5 	bl	80091d6 <_ZSt12__niter_baseIP6SymbolET_S2_>
 8008c2c:	4603      	mov	r3, r0
 8008c2e:	461a      	mov	r2, r3
 8008c30:	4629      	mov	r1, r5
 8008c32:	4620      	mov	r0, r4
 8008c34:	f000 fada 	bl	80091ec <_ZSt13__copy_move_aILb0EP6SymbolS1_ET1_T0_S3_S2_>
 8008c38:	4602      	mov	r2, r0
 8008c3a:	1d3b      	adds	r3, r7, #4
 8008c3c:	4611      	mov	r1, r2
 8008c3e:	4618      	mov	r0, r3
 8008c40:	f000 fae6 	bl	8009210 <_ZSt12__niter_wrapIP6SymbolET_RKS2_S2_>
 8008c44:	4603      	mov	r3, r0
    }
 8008c46:	4618      	mov	r0, r3
 8008c48:	3710      	adds	r7, #16
 8008c4a:	46bd      	mov	sp, r7
 8008c4c:	bdb0      	pop	{r4, r5, r7, pc}

08008c4e <_ZSt18uninitialized_copyIP6SymbolS1_ET0_T_S3_S2_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
 8008c4e:	b580      	push	{r7, lr}
 8008c50:	b086      	sub	sp, #24
 8008c52:	af00      	add	r7, sp, #0
 8008c54:	60f8      	str	r0, [r7, #12]
 8008c56:	60b9      	str	r1, [r7, #8]
 8008c58:	607a      	str	r2, [r7, #4]
      const bool __assignable = is_assignable<_RefType2, _RefType1>::value;
 8008c5a:	2301      	movs	r3, #1
 8008c5c:	75fb      	strb	r3, [r7, #23]
	__uninit_copy(__first, __last, __result);
 8008c5e:	687a      	ldr	r2, [r7, #4]
 8008c60:	68b9      	ldr	r1, [r7, #8]
 8008c62:	68f8      	ldr	r0, [r7, #12]
 8008c64:	f000 fae0 	bl	8009228 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIP6SymbolS3_EET0_T_S5_S4_>
 8008c68:	4603      	mov	r3, r0
    }
 8008c6a:	4618      	mov	r0, r3
 8008c6c:	3718      	adds	r7, #24
 8008c6e:	46bd      	mov	sp, r7
 8008c70:	bd80      	pop	{r7, pc}

08008c72 <_ZNSt8__detail9__variant14_UninitializedISt6vectorI6SymbolSaIS3_EELb0EEC1IJRKS5_EEESt16in_place_index_tILj0EEDpOT_>:
	_Uninitialized(in_place_index_t<0>, _Args&&... __args)
 8008c72:	b590      	push	{r4, r7, lr}
 8008c74:	b085      	sub	sp, #20
 8008c76:	af00      	add	r7, sp, #0
 8008c78:	60f8      	str	r0, [r7, #12]
 8008c7a:	7239      	strb	r1, [r7, #8]
 8008c7c:	607a      	str	r2, [r7, #4]
	    _Type(std::forward<_Args>(__args)...);
 8008c7e:	6878      	ldr	r0, [r7, #4]
 8008c80:	f7fc fa45 	bl	800510e <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>
 8008c84:	4604      	mov	r4, r0
	  ::new ((void*)std::addressof(_M_storage))
 8008c86:	68fb      	ldr	r3, [r7, #12]
 8008c88:	4618      	mov	r0, r3
 8008c8a:	f000 faed 	bl	8009268 <_ZSt9addressofIN9__gnu_cxx16__aligned_membufISt6vectorI6SymbolSaIS3_EEEEEPT_RS7_>
 8008c8e:	4603      	mov	r3, r0
 8008c90:	4619      	mov	r1, r3
 8008c92:	200c      	movs	r0, #12
 8008c94:	f7f8 f9e1 	bl	800105a <_ZnwjPv>
 8008c98:	4603      	mov	r3, r0
 8008c9a:	4621      	mov	r1, r4
 8008c9c:	4618      	mov	r0, r3
 8008c9e:	f7ff fd38 	bl	8008712 <_ZNSt6vectorI6SymbolSaIS0_EEC1ERKS2_>
	}
 8008ca2:	68fb      	ldr	r3, [r7, #12]
 8008ca4:	4618      	mov	r0, r3
 8008ca6:	3714      	adds	r7, #20
 8008ca8:	46bd      	mov	sp, r7
 8008caa:	bd90      	pop	{r4, r7, pc}

08008cac <_ZNSt8__detail9__variant15_Variadic_unionIJSt6vectorI6SymbolSaIS3_EEEEC1IJRKS5_EEESt16in_place_index_tILj0EEDpOT_>:
	constexpr _Variadic_union(in_place_index_t<0>, _Args&&... __args)
 8008cac:	b5b0      	push	{r4, r5, r7, lr}
 8008cae:	b084      	sub	sp, #16
 8008cb0:	af00      	add	r7, sp, #0
 8008cb2:	60f8      	str	r0, [r7, #12]
 8008cb4:	7239      	strb	r1, [r7, #8]
 8008cb6:	607a      	str	r2, [r7, #4]
	: _M_first(in_place_index<0>, std::forward<_Args>(__args)...)
 8008cb8:	68fc      	ldr	r4, [r7, #12]
 8008cba:	6878      	ldr	r0, [r7, #4]
 8008cbc:	f7fc fa27 	bl	800510e <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>
 8008cc0:	4603      	mov	r3, r0
 8008cc2:	461a      	mov	r2, r3
 8008cc4:	4629      	mov	r1, r5
 8008cc6:	4620      	mov	r0, r4
 8008cc8:	f7ff ffd3 	bl	8008c72 <_ZNSt8__detail9__variant14_UninitializedISt6vectorI6SymbolSaIS3_EELb0EEC1IJRKS5_EEESt16in_place_index_tILj0EEDpOT_>
	{ }
 8008ccc:	68fb      	ldr	r3, [r7, #12]
 8008cce:	4618      	mov	r0, r3
 8008cd0:	3710      	adds	r7, #16
 8008cd2:	46bd      	mov	sp, r7
 8008cd4:	bdb0      	pop	{r4, r5, r7, pc}

08008cd6 <_ZNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj1EJRKSB_EEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variadic_union(in_place_index_t<_Np>, _Args&&... __args)
 8008cd6:	b5b0      	push	{r4, r5, r7, lr}
 8008cd8:	b084      	sub	sp, #16
 8008cda:	af00      	add	r7, sp, #0
 8008cdc:	60f8      	str	r0, [r7, #12]
 8008cde:	7239      	strb	r1, [r7, #8]
 8008ce0:	607a      	str	r2, [r7, #4]
	: _M_rest(in_place_index<_Np-1>, std::forward<_Args>(__args)...)
 8008ce2:	68fc      	ldr	r4, [r7, #12]
 8008ce4:	6878      	ldr	r0, [r7, #4]
 8008ce6:	f7fc fa12 	bl	800510e <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>
 8008cea:	4603      	mov	r3, r0
 8008cec:	461a      	mov	r2, r3
 8008cee:	4629      	mov	r1, r5
 8008cf0:	4620      	mov	r0, r4
 8008cf2:	f7ff ffdb 	bl	8008cac <_ZNSt8__detail9__variant15_Variadic_unionIJSt6vectorI6SymbolSaIS3_EEEEC1IJRKS5_EEESt16in_place_index_tILj0EEDpOT_>
	{ }
 8008cf6:	68fb      	ldr	r3, [r7, #12]
 8008cf8:	4618      	mov	r0, r3
 8008cfa:	3710      	adds	r7, #16
 8008cfc:	46bd      	mov	sp, r7
 8008cfe:	bdb0      	pop	{r4, r5, r7, pc}

08008d00 <_ZNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj2EJRKSB_EEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variadic_union(in_place_index_t<_Np>, _Args&&... __args)
 8008d00:	b5b0      	push	{r4, r5, r7, lr}
 8008d02:	b084      	sub	sp, #16
 8008d04:	af00      	add	r7, sp, #0
 8008d06:	60f8      	str	r0, [r7, #12]
 8008d08:	7239      	strb	r1, [r7, #8]
 8008d0a:	607a      	str	r2, [r7, #4]
	: _M_rest(in_place_index<_Np-1>, std::forward<_Args>(__args)...)
 8008d0c:	68fc      	ldr	r4, [r7, #12]
 8008d0e:	6878      	ldr	r0, [r7, #4]
 8008d10:	f7fc f9fd 	bl	800510e <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>
 8008d14:	4603      	mov	r3, r0
 8008d16:	461a      	mov	r2, r3
 8008d18:	4629      	mov	r1, r5
 8008d1a:	4620      	mov	r0, r4
 8008d1c:	f7ff ffdb 	bl	8008cd6 <_ZNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj1EJRKSB_EEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 8008d20:	68fb      	ldr	r3, [r7, #12]
 8008d22:	4618      	mov	r0, r3
 8008d24:	3710      	adds	r7, #16
 8008d26:	46bd      	mov	sp, r7
 8008d28:	bdb0      	pop	{r4, r5, r7, pc}

08008d2a <_ZNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj3EJRKSB_EEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variadic_union(in_place_index_t<_Np>, _Args&&... __args)
 8008d2a:	b5b0      	push	{r4, r5, r7, lr}
 8008d2c:	b084      	sub	sp, #16
 8008d2e:	af00      	add	r7, sp, #0
 8008d30:	60f8      	str	r0, [r7, #12]
 8008d32:	7239      	strb	r1, [r7, #8]
 8008d34:	607a      	str	r2, [r7, #4]
	: _M_rest(in_place_index<_Np-1>, std::forward<_Args>(__args)...)
 8008d36:	68fc      	ldr	r4, [r7, #12]
 8008d38:	6878      	ldr	r0, [r7, #4]
 8008d3a:	f7fc f9e8 	bl	800510e <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>
 8008d3e:	4603      	mov	r3, r0
 8008d40:	461a      	mov	r2, r3
 8008d42:	4629      	mov	r1, r5
 8008d44:	4620      	mov	r0, r4
 8008d46:	f7ff ffdb 	bl	8008d00 <_ZNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj2EJRKSB_EEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 8008d4a:	68fb      	ldr	r3, [r7, #12]
 8008d4c:	4618      	mov	r0, r3
 8008d4e:	3710      	adds	r7, #16
 8008d50:	46bd      	mov	sp, r7
 8008d52:	bdb0      	pop	{r4, r5, r7, pc}

08008d54 <_ZNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj4EJRKSB_EEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variadic_union(in_place_index_t<_Np>, _Args&&... __args)
 8008d54:	b5b0      	push	{r4, r5, r7, lr}
 8008d56:	b084      	sub	sp, #16
 8008d58:	af00      	add	r7, sp, #0
 8008d5a:	60f8      	str	r0, [r7, #12]
 8008d5c:	7239      	strb	r1, [r7, #8]
 8008d5e:	607a      	str	r2, [r7, #4]
	: _M_rest(in_place_index<_Np-1>, std::forward<_Args>(__args)...)
 8008d60:	68fc      	ldr	r4, [r7, #12]
 8008d62:	6878      	ldr	r0, [r7, #4]
 8008d64:	f7fc f9d3 	bl	800510e <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>
 8008d68:	4603      	mov	r3, r0
 8008d6a:	461a      	mov	r2, r3
 8008d6c:	4629      	mov	r1, r5
 8008d6e:	4620      	mov	r0, r4
 8008d70:	f7ff ffdb 	bl	8008d2a <_ZNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj3EJRKSB_EEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 8008d74:	68fb      	ldr	r3, [r7, #12]
 8008d76:	4618      	mov	r0, r3
 8008d78:	3710      	adds	r7, #16
 8008d7a:	46bd      	mov	sp, r7
 8008d7c:	bdb0      	pop	{r4, r5, r7, pc}

08008d7e <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj4EJRKSB_EEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variant_storage(in_place_index_t<_Np>, _Args&&... __args)
 8008d7e:	b5b0      	push	{r4, r5, r7, lr}
 8008d80:	b084      	sub	sp, #16
 8008d82:	af00      	add	r7, sp, #0
 8008d84:	60f8      	str	r0, [r7, #12]
 8008d86:	7239      	strb	r1, [r7, #8]
 8008d88:	607a      	str	r2, [r7, #4]
	_M_index(_Np)
 8008d8a:	68fc      	ldr	r4, [r7, #12]
 8008d8c:	6878      	ldr	r0, [r7, #4]
 8008d8e:	f7fc f9be 	bl	800510e <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>
 8008d92:	4603      	mov	r3, r0
 8008d94:	461a      	mov	r2, r3
 8008d96:	4629      	mov	r1, r5
 8008d98:	4620      	mov	r0, r4
 8008d9a:	f7ff ffdb 	bl	8008d54 <_ZNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj4EJRKSB_EEESt16in_place_index_tIXT_EEDpOT0_>
 8008d9e:	68fb      	ldr	r3, [r7, #12]
 8008da0:	2204      	movs	r2, #4
 8008da2:	761a      	strb	r2, [r3, #24]
	{ }
 8008da4:	68fb      	ldr	r3, [r7, #12]
 8008da6:	4618      	mov	r0, r3
 8008da8:	3710      	adds	r7, #16
 8008daa:	46bd      	mov	sp, r7
 8008dac:	bdb0      	pop	{r4, r5, r7, pc}

08008dae <_ZN9__gnu_cxx16__aligned_membufISt4pairIKc10token_typeEE7_M_addrEv>:
      _M_addr() noexcept
 8008dae:	b480      	push	{r7}
 8008db0:	b083      	sub	sp, #12
 8008db2:	af00      	add	r7, sp, #0
 8008db4:	6078      	str	r0, [r7, #4]
      { return static_cast<void*>(&_M_storage); }
 8008db6:	687b      	ldr	r3, [r7, #4]
 8008db8:	4618      	mov	r0, r3
 8008dba:	370c      	adds	r7, #12
 8008dbc:	46bd      	mov	sp, r7
 8008dbe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008dc2:	4770      	bx	lr

08008dc4 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKc10token_typeEE6_M_ptrEv>:
      _M_ptr() const noexcept
 8008dc4:	b580      	push	{r7, lr}
 8008dc6:	b082      	sub	sp, #8
 8008dc8:	af00      	add	r7, sp, #0
 8008dca:	6078      	str	r0, [r7, #4]
      { return static_cast<const _Tp*>(_M_addr()); }
 8008dcc:	6878      	ldr	r0, [r7, #4]
 8008dce:	f000 fa57 	bl	8009280 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKc10token_typeEE7_M_addrEv>
 8008dd2:	4603      	mov	r3, r0
 8008dd4:	4618      	mov	r0, r3
 8008dd6:	3708      	adds	r7, #8
 8008dd8:	46bd      	mov	sp, r7
 8008dda:	bd80      	pop	{r7, pc}

08008ddc <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEE8allocateERS6_j>:
      allocate(allocator_type& __a, size_type __n)
 8008ddc:	b580      	push	{r7, lr}
 8008dde:	b082      	sub	sp, #8
 8008de0:	af00      	add	r7, sp, #0
 8008de2:	6078      	str	r0, [r7, #4]
 8008de4:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 8008de6:	2200      	movs	r2, #0
 8008de8:	6839      	ldr	r1, [r7, #0]
 8008dea:	6878      	ldr	r0, [r7, #4]
 8008dec:	f000 fa53 	bl	8009296 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEE8allocateEjPKv>
 8008df0:	4603      	mov	r3, r0
 8008df2:	4618      	mov	r0, r3
 8008df4:	3708      	adds	r7, #8
 8008df6:	46bd      	mov	sp, r7
 8008df8:	bd80      	pop	{r7, pc}

08008dfa <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEE9constructIS4_JRKS4_EEEvRS6_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 8008dfa:	b580      	push	{r7, lr}
 8008dfc:	b084      	sub	sp, #16
 8008dfe:	af00      	add	r7, sp, #0
 8008e00:	60f8      	str	r0, [r7, #12]
 8008e02:	60b9      	str	r1, [r7, #8]
 8008e04:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 8008e06:	6878      	ldr	r0, [r7, #4]
 8008e08:	f7fc fba8 	bl	800555c <_ZSt7forwardIRKSt4pairIKc10token_typeEEOT_RNSt16remove_referenceIS6_E4typeE>
 8008e0c:	4603      	mov	r3, r0
 8008e0e:	461a      	mov	r2, r3
 8008e10:	68b9      	ldr	r1, [r7, #8]
 8008e12:	68f8      	ldr	r0, [r7, #12]
 8008e14:	f000 fa61 	bl	80092da <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEE9constructIS5_JRKS5_EEEvPT_DpOT0_>
 8008e18:	bf00      	nop
 8008e1a:	3710      	adds	r7, #16
 8008e1c:	46bd      	mov	sp, r7
 8008e1e:	bd80      	pop	{r7, pc}

08008e20 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE7_M_addrEv>:
      _M_addr() noexcept
 8008e20:	b480      	push	{r7}
 8008e22:	b083      	sub	sp, #12
 8008e24:	af00      	add	r7, sp, #0
 8008e26:	6078      	str	r0, [r7, #4]
      { return static_cast<void*>(&_M_storage); }
 8008e28:	687b      	ldr	r3, [r7, #4]
 8008e2a:	4618      	mov	r0, r3
 8008e2c:	370c      	adds	r7, #12
 8008e2e:	46bd      	mov	sp, r7
 8008e30:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008e34:	4770      	bx	lr

08008e36 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE6_M_ptrEv>:
      _M_ptr() const noexcept
 8008e36:	b580      	push	{r7, lr}
 8008e38:	b082      	sub	sp, #8
 8008e3a:	af00      	add	r7, sp, #0
 8008e3c:	6078      	str	r0, [r7, #4]
      { return static_cast<const _Tp*>(_M_addr()); }
 8008e3e:	6878      	ldr	r0, [r7, #4]
 8008e40:	f000 fa63 	bl	800930a <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE7_M_addrEv>
 8008e44:	4603      	mov	r3, r0
 8008e46:	4618      	mov	r0, r3
 8008e48:	3708      	adds	r7, #8
 8008e4a:	46bd      	mov	sp, r7
 8008e4c:	bd80      	pop	{r7, pc}

08008e4e <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEE8allocateERSC_j>:
      allocate(allocator_type& __a, size_type __n)
 8008e4e:	b580      	push	{r7, lr}
 8008e50:	b082      	sub	sp, #8
 8008e52:	af00      	add	r7, sp, #0
 8008e54:	6078      	str	r0, [r7, #4]
 8008e56:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 8008e58:	2200      	movs	r2, #0
 8008e5a:	6839      	ldr	r1, [r7, #0]
 8008e5c:	6878      	ldr	r0, [r7, #4]
 8008e5e:	f000 fa5f 	bl	8009320 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEE8allocateEjPKv>
 8008e62:	4603      	mov	r3, r0
 8008e64:	4618      	mov	r0, r3
 8008e66:	3708      	adds	r7, #8
 8008e68:	46bd      	mov	sp, r7
 8008e6a:	bd80      	pop	{r7, pc}

08008e6c <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEE9constructISA_JRKSA_EEEvRSC_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 8008e6c:	b580      	push	{r7, lr}
 8008e6e:	b084      	sub	sp, #16
 8008e70:	af00      	add	r7, sp, #0
 8008e72:	60f8      	str	r0, [r7, #12]
 8008e74:	60b9      	str	r1, [r7, #8]
 8008e76:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 8008e78:	6878      	ldr	r0, [r7, #4]
 8008e7a:	f7fc fd65 	bl	8005948 <_ZSt7forwardIRKSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEOT_RNSt16remove_referenceISC_E4typeE>
 8008e7e:	4603      	mov	r3, r0
 8008e80:	461a      	mov	r2, r3
 8008e82:	68b9      	ldr	r1, [r7, #8]
 8008e84:	68f8      	ldr	r0, [r7, #12]
 8008e86:	f000 fa80 	bl	800938a <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEE9constructISB_JRKSB_EEEvPT_DpOT0_>
 8008e8a:	bf00      	nop
 8008e8c:	3710      	adds	r7, #16
 8008e8e:	46bd      	mov	sp, r7
 8008e90:	bd80      	pop	{r7, pc}

08008e92 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKc12double_tokenEE7_M_addrEv>:
      _M_addr() noexcept
 8008e92:	b480      	push	{r7}
 8008e94:	b083      	sub	sp, #12
 8008e96:	af00      	add	r7, sp, #0
 8008e98:	6078      	str	r0, [r7, #4]
      { return static_cast<void*>(&_M_storage); }
 8008e9a:	687b      	ldr	r3, [r7, #4]
 8008e9c:	4618      	mov	r0, r3
 8008e9e:	370c      	adds	r7, #12
 8008ea0:	46bd      	mov	sp, r7
 8008ea2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008ea6:	4770      	bx	lr

08008ea8 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKc12double_tokenEE6_M_ptrEv>:
      _M_ptr() const noexcept
 8008ea8:	b580      	push	{r7, lr}
 8008eaa:	b082      	sub	sp, #8
 8008eac:	af00      	add	r7, sp, #0
 8008eae:	6078      	str	r0, [r7, #4]
      { return static_cast<const _Tp*>(_M_addr()); }
 8008eb0:	6878      	ldr	r0, [r7, #4]
 8008eb2:	f000 fa82 	bl	80093ba <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKc12double_tokenEE7_M_addrEv>
 8008eb6:	4603      	mov	r3, r0
 8008eb8:	4618      	mov	r0, r3
 8008eba:	3708      	adds	r7, #8
 8008ebc:	46bd      	mov	sp, r7
 8008ebe:	bd80      	pop	{r7, pc}

08008ec0 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEE8allocateERS6_j>:
      allocate(allocator_type& __a, size_type __n)
 8008ec0:	b580      	push	{r7, lr}
 8008ec2:	b082      	sub	sp, #8
 8008ec4:	af00      	add	r7, sp, #0
 8008ec6:	6078      	str	r0, [r7, #4]
 8008ec8:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 8008eca:	2200      	movs	r2, #0
 8008ecc:	6839      	ldr	r1, [r7, #0]
 8008ece:	6878      	ldr	r0, [r7, #4]
 8008ed0:	f000 fa7e 	bl	80093d0 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEE8allocateEjPKv>
 8008ed4:	4603      	mov	r3, r0
 8008ed6:	4618      	mov	r0, r3
 8008ed8:	3708      	adds	r7, #8
 8008eda:	46bd      	mov	sp, r7
 8008edc:	bd80      	pop	{r7, pc}

08008ede <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEE9constructIS4_JRKS4_EEEvRS6_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 8008ede:	b580      	push	{r7, lr}
 8008ee0:	b084      	sub	sp, #16
 8008ee2:	af00      	add	r7, sp, #0
 8008ee4:	60f8      	str	r0, [r7, #12]
 8008ee6:	60b9      	str	r1, [r7, #8]
 8008ee8:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 8008eea:	6878      	ldr	r0, [r7, #4]
 8008eec:	f7fc ff16 	bl	8005d1c <_ZSt7forwardIRKSt4pairIKc12double_tokenEEOT_RNSt16remove_referenceIS6_E4typeE>
 8008ef0:	4603      	mov	r3, r0
 8008ef2:	461a      	mov	r2, r3
 8008ef4:	68b9      	ldr	r1, [r7, #8]
 8008ef6:	68f8      	ldr	r0, [r7, #12]
 8008ef8:	f000 fa8c 	bl	8009414 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEE9constructIS5_JRKS5_EEEvPT_DpOT0_>
 8008efc:	bf00      	nop
 8008efe:	3710      	adds	r7, #16
 8008f00:	46bd      	mov	sp, r7
 8008f02:	bd80      	pop	{r7, pc}

08008f04 <_ZN9__gnu_cxx14__alloc_traitsISaI6SymbolES1_E17_S_select_on_copyERKS2_>:
    static _Alloc _S_select_on_copy(const _Alloc& __a)
 8008f04:	b580      	push	{r7, lr}
 8008f06:	b082      	sub	sp, #8
 8008f08:	af00      	add	r7, sp, #0
 8008f0a:	6078      	str	r0, [r7, #4]
 8008f0c:	6039      	str	r1, [r7, #0]
    { return _Base_type::select_on_container_copy_construction(__a); }
 8008f0e:	687b      	ldr	r3, [r7, #4]
 8008f10:	6839      	ldr	r1, [r7, #0]
 8008f12:	4618      	mov	r0, r3
 8008f14:	f000 fa97 	bl	8009446 <_ZNSt16allocator_traitsISaI6SymbolEE37select_on_container_copy_constructionERKS1_>
 8008f18:	6878      	ldr	r0, [r7, #4]
 8008f1a:	3708      	adds	r7, #8
 8008f1c:	46bd      	mov	sp, r7
 8008f1e:	bd80      	pop	{r7, pc}

08008f20 <_ZNSt12_Vector_baseI6SymbolSaIS0_EEC1EjRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
 8008f20:	b580      	push	{r7, lr}
 8008f22:	b084      	sub	sp, #16
 8008f24:	af00      	add	r7, sp, #0
 8008f26:	60f8      	str	r0, [r7, #12]
 8008f28:	60b9      	str	r1, [r7, #8]
 8008f2a:	607a      	str	r2, [r7, #4]
      : _M_impl(__a)
 8008f2c:	68fb      	ldr	r3, [r7, #12]
 8008f2e:	6879      	ldr	r1, [r7, #4]
 8008f30:	4618      	mov	r0, r3
 8008f32:	f000 fa95 	bl	8009460 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
 8008f36:	68b9      	ldr	r1, [r7, #8]
 8008f38:	68f8      	ldr	r0, [r7, #12]
 8008f3a:	f000 faa3 	bl	8009484 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE17_M_create_storageEj>
 8008f3e:	68fb      	ldr	r3, [r7, #12]
 8008f40:	4618      	mov	r0, r3
 8008f42:	3710      	adds	r7, #16
 8008f44:	46bd      	mov	sp, r7
 8008f46:	bd80      	pop	{r7, pc}

08008f48 <_ZNSaI6SymbolEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
 8008f48:	b580      	push	{r7, lr}
 8008f4a:	b082      	sub	sp, #8
 8008f4c:	af00      	add	r7, sp, #0
 8008f4e:	6078      	str	r0, [r7, #4]
 8008f50:	6039      	str	r1, [r7, #0]
      : __allocator_base<_Tp>(__a) { }
 8008f52:	6839      	ldr	r1, [r7, #0]
 8008f54:	6878      	ldr	r0, [r7, #4]
 8008f56:	f000 fab0 	bl	80094ba <_ZN9__gnu_cxx13new_allocatorI6SymbolEC1ERKS2_>
 8008f5a:	687b      	ldr	r3, [r7, #4]
 8008f5c:	4618      	mov	r0, r3
 8008f5e:	3708      	adds	r7, #8
 8008f60:	46bd      	mov	sp, r7
 8008f62:	bd80      	pop	{r7, pc}

08008f64 <_ZN9__gnu_cxx13new_allocatorI6SymbolED1Ev>:
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 8008f64:	b480      	push	{r7}
 8008f66:	b083      	sub	sp, #12
 8008f68:	af00      	add	r7, sp, #0
 8008f6a:	6078      	str	r0, [r7, #4]
 8008f6c:	687b      	ldr	r3, [r7, #4]
 8008f6e:	4618      	mov	r0, r3
 8008f70:	370c      	adds	r7, #12
 8008f72:	46bd      	mov	sp, r7
 8008f74:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008f78:	4770      	bx	lr

08008f7a <_ZNSt12_Vector_baseI6SymbolSaIS0_EEC1ERKS1_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 8008f7a:	b580      	push	{r7, lr}
 8008f7c:	b082      	sub	sp, #8
 8008f7e:	af00      	add	r7, sp, #0
 8008f80:	6078      	str	r0, [r7, #4]
 8008f82:	6039      	str	r1, [r7, #0]
      : _M_impl(__a) { }
 8008f84:	687b      	ldr	r3, [r7, #4]
 8008f86:	6839      	ldr	r1, [r7, #0]
 8008f88:	4618      	mov	r0, r3
 8008f8a:	f000 fa69 	bl	8009460 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE12_Vector_implC1ERKS1_>
 8008f8e:	687b      	ldr	r3, [r7, #4]
 8008f90:	4618      	mov	r0, r3
 8008f92:	3708      	adds	r7, #8
 8008f94:	46bd      	mov	sp, r7
 8008f96:	bd80      	pop	{r7, pc}

08008f98 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
 8008f98:	b480      	push	{r7}
 8008f9a:	b083      	sub	sp, #12
 8008f9c:	af00      	add	r7, sp, #0
 8008f9e:	6078      	str	r0, [r7, #4]
	: _M_start(), _M_finish(), _M_end_of_storage()
 8008fa0:	687b      	ldr	r3, [r7, #4]
 8008fa2:	2200      	movs	r2, #0
 8008fa4:	601a      	str	r2, [r3, #0]
 8008fa6:	687b      	ldr	r3, [r7, #4]
 8008fa8:	2200      	movs	r2, #0
 8008faa:	605a      	str	r2, [r3, #4]
 8008fac:	687b      	ldr	r3, [r7, #4]
 8008fae:	2200      	movs	r2, #0
 8008fb0:	609a      	str	r2, [r3, #8]
	{ }
 8008fb2:	687b      	ldr	r3, [r7, #4]
 8008fb4:	4618      	mov	r0, r3
 8008fb6:	370c      	adds	r7, #12
 8008fb8:	46bd      	mov	sp, r7
 8008fba:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008fbe:	4770      	bx	lr

08008fc0 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE17_Vector_impl_data12_M_copy_dataERKS3_>:
	_M_copy_data(_Vector_impl_data const& __x) _GLIBCXX_NOEXCEPT
 8008fc0:	b480      	push	{r7}
 8008fc2:	b083      	sub	sp, #12
 8008fc4:	af00      	add	r7, sp, #0
 8008fc6:	6078      	str	r0, [r7, #4]
 8008fc8:	6039      	str	r1, [r7, #0]
	  _M_start = __x._M_start;
 8008fca:	683b      	ldr	r3, [r7, #0]
 8008fcc:	681a      	ldr	r2, [r3, #0]
 8008fce:	687b      	ldr	r3, [r7, #4]
 8008fd0:	601a      	str	r2, [r3, #0]
	  _M_finish = __x._M_finish;
 8008fd2:	683b      	ldr	r3, [r7, #0]
 8008fd4:	685a      	ldr	r2, [r3, #4]
 8008fd6:	687b      	ldr	r3, [r7, #4]
 8008fd8:	605a      	str	r2, [r3, #4]
	  _M_end_of_storage = __x._M_end_of_storage;
 8008fda:	683b      	ldr	r3, [r7, #0]
 8008fdc:	689a      	ldr	r2, [r3, #8]
 8008fde:	687b      	ldr	r3, [r7, #4]
 8008fe0:	609a      	str	r2, [r3, #8]
	}
 8008fe2:	bf00      	nop
 8008fe4:	370c      	adds	r7, #12
 8008fe6:	46bd      	mov	sp, r7
 8008fe8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008fec:	4770      	bx	lr

08008fee <_ZSt18__do_alloc_on_moveISaI6SymbolEEvRT_S3_St17integral_constantIbLb1EE>:
    inline void __do_alloc_on_move(_Alloc& __one, _Alloc& __two, true_type)
 8008fee:	b580      	push	{r7, lr}
 8008ff0:	b084      	sub	sp, #16
 8008ff2:	af00      	add	r7, sp, #0
 8008ff4:	60f8      	str	r0, [r7, #12]
 8008ff6:	60b9      	str	r1, [r7, #8]
 8008ff8:	713a      	strb	r2, [r7, #4]
    { __one = std::move(__two); }
 8008ffa:	68b8      	ldr	r0, [r7, #8]
 8008ffc:	f000 fa69 	bl	80094d2 <_ZSt4moveIRSaI6SymbolEEONSt16remove_referenceIT_E4typeEOS4_>
 8009000:	bf00      	nop
 8009002:	3710      	adds	r7, #16
 8009004:	46bd      	mov	sp, r7
 8009006:	bd80      	pop	{r7, pc}

08009008 <_ZSt4moveIRNSt12_Vector_baseI6SymbolSaIS1_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS7_>:
    move(_Tp&& __t) noexcept
 8009008:	b480      	push	{r7}
 800900a:	b083      	sub	sp, #12
 800900c:	af00      	add	r7, sp, #0
 800900e:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 8009010:	687b      	ldr	r3, [r7, #4]
 8009012:	4618      	mov	r0, r3
 8009014:	370c      	adds	r7, #12
 8009016:	46bd      	mov	sp, r7
 8009018:	f85d 7b04 	ldr.w	r7, [sp], #4
 800901c:	4770      	bx	lr

0800901e <_ZNSt12_Vector_baseI6SymbolSaIS0_EE17_Vector_impl_dataC1EOS3_>:
	_Vector_impl_data(_Vector_impl_data&& __x) noexcept
 800901e:	b480      	push	{r7}
 8009020:	b083      	sub	sp, #12
 8009022:	af00      	add	r7, sp, #0
 8009024:	6078      	str	r0, [r7, #4]
 8009026:	6039      	str	r1, [r7, #0]
	: _M_start(__x._M_start), _M_finish(__x._M_finish),
 8009028:	683b      	ldr	r3, [r7, #0]
 800902a:	681a      	ldr	r2, [r3, #0]
	  _M_end_of_storage(__x._M_end_of_storage)
 800902c:	687b      	ldr	r3, [r7, #4]
 800902e:	601a      	str	r2, [r3, #0]
	: _M_start(__x._M_start), _M_finish(__x._M_finish),
 8009030:	683b      	ldr	r3, [r7, #0]
 8009032:	685a      	ldr	r2, [r3, #4]
	  _M_end_of_storage(__x._M_end_of_storage)
 8009034:	687b      	ldr	r3, [r7, #4]
 8009036:	605a      	str	r2, [r3, #4]
 8009038:	683b      	ldr	r3, [r7, #0]
 800903a:	689a      	ldr	r2, [r3, #8]
 800903c:	687b      	ldr	r3, [r7, #4]
 800903e:	609a      	str	r2, [r3, #8]
	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 8009040:	683b      	ldr	r3, [r7, #0]
 8009042:	2200      	movs	r2, #0
 8009044:	609a      	str	r2, [r3, #8]
 8009046:	683b      	ldr	r3, [r7, #0]
 8009048:	689a      	ldr	r2, [r3, #8]
 800904a:	683b      	ldr	r3, [r7, #0]
 800904c:	605a      	str	r2, [r3, #4]
 800904e:	683b      	ldr	r3, [r7, #0]
 8009050:	685a      	ldr	r2, [r3, #4]
 8009052:	683b      	ldr	r3, [r7, #0]
 8009054:	601a      	str	r2, [r3, #0]
 8009056:	687b      	ldr	r3, [r7, #4]
 8009058:	4618      	mov	r0, r3
 800905a:	370c      	adds	r7, #12
 800905c:	46bd      	mov	sp, r7
 800905e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009062:	4770      	bx	lr

08009064 <_ZSt9addressofIN9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEPT_RS9_>:
    addressof(_Tp& __r) noexcept
 8009064:	b580      	push	{r7, lr}
 8009066:	b082      	sub	sp, #8
 8009068:	af00      	add	r7, sp, #0
 800906a:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 800906c:	6878      	ldr	r0, [r7, #4]
 800906e:	f000 fa3b 	bl	80094e8 <_ZSt11__addressofIN9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEPT_RS9_>
 8009072:	4603      	mov	r3, r0
 8009074:	4618      	mov	r0, r3
 8009076:	3708      	adds	r7, #8
 8009078:	46bd      	mov	sp, r7
 800907a:	bd80      	pop	{r7, pc}

0800907c <_ZN9__gnu_cxx13new_allocatorI6SymbolE10deallocateEPS1_j>:
      deallocate(pointer __p, size_type)
 800907c:	b580      	push	{r7, lr}
 800907e:	b084      	sub	sp, #16
 8009080:	af00      	add	r7, sp, #0
 8009082:	60f8      	str	r0, [r7, #12]
 8009084:	60b9      	str	r1, [r7, #8]
 8009086:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 8009088:	68b8      	ldr	r0, [r7, #8]
 800908a:	f01a fa21 	bl	80234d0 <_ZdlPv>
      }
 800908e:	3710      	adds	r7, #16
 8009090:	46bd      	mov	sp, r7
 8009092:	bd80      	pop	{r7, pc}

08009094 <_ZNSt16allocator_traitsISaI6SymbolEE8allocateERS1_j>:
      allocate(allocator_type& __a, size_type __n)
 8009094:	b580      	push	{r7, lr}
 8009096:	b082      	sub	sp, #8
 8009098:	af00      	add	r7, sp, #0
 800909a:	6078      	str	r0, [r7, #4]
 800909c:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 800909e:	2200      	movs	r2, #0
 80090a0:	6839      	ldr	r1, [r7, #0]
 80090a2:	6878      	ldr	r0, [r7, #4]
 80090a4:	f000 fa2b 	bl	80094fe <_ZN9__gnu_cxx13new_allocatorI6SymbolE8allocateEjPKv>
 80090a8:	4603      	mov	r3, r0
 80090aa:	4618      	mov	r0, r3
 80090ac:	3708      	adds	r7, #8
 80090ae:	46bd      	mov	sp, r7
 80090b0:	bd80      	pop	{r7, pc}

080090b2 <_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
 80090b2:	b580      	push	{r7, lr}
 80090b4:	b086      	sub	sp, #24
 80090b6:	af00      	add	r7, sp, #0
 80090b8:	60f8      	str	r0, [r7, #12]
 80090ba:	60b9      	str	r1, [r7, #8]
 80090bc:	607a      	str	r2, [r7, #4]
      const bool __assignable = is_assignable<_RefType2, _RefType1>::value;
 80090be:	2301      	movs	r3, #1
 80090c0:	75fb      	strb	r3, [r7, #23]
	__uninit_copy(__first, __last, __result);
 80090c2:	687a      	ldr	r2, [r7, #4]
 80090c4:	68b9      	ldr	r1, [r7, #8]
 80090c6:	68f8      	ldr	r0, [r7, #12]
 80090c8:	f000 fa38 	bl	800953c <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_>
 80090cc:	4603      	mov	r3, r0
    }
 80090ce:	4618      	mov	r0, r3
 80090d0:	3718      	adds	r7, #24
 80090d2:	46bd      	mov	sp, r7
 80090d4:	bd80      	pop	{r7, pc}

080090d6 <_ZNSt12_Destroy_auxILb0EE9__destroyIP6SymbolEEvT_S4_>:
        __destroy(_ForwardIterator __first, _ForwardIterator __last)
 80090d6:	b580      	push	{r7, lr}
 80090d8:	b082      	sub	sp, #8
 80090da:	af00      	add	r7, sp, #0
 80090dc:	6078      	str	r0, [r7, #4]
 80090de:	6039      	str	r1, [r7, #0]
	  for (; __first != __last; ++__first)
 80090e0:	687a      	ldr	r2, [r7, #4]
 80090e2:	683b      	ldr	r3, [r7, #0]
 80090e4:	429a      	cmp	r2, r3
 80090e6:	d00a      	beq.n	80090fe <_ZNSt12_Destroy_auxILb0EE9__destroyIP6SymbolEEvT_S4_+0x28>
	    std::_Destroy(std::__addressof(*__first));
 80090e8:	6878      	ldr	r0, [r7, #4]
 80090ea:	f000 fa56 	bl	800959a <_ZSt11__addressofI6SymbolEPT_RS1_>
 80090ee:	4603      	mov	r3, r0
 80090f0:	4618      	mov	r0, r3
 80090f2:	f000 fa5d 	bl	80095b0 <_ZSt8_DestroyI6SymbolEvPT_>
	  for (; __first != __last; ++__first)
 80090f6:	687b      	ldr	r3, [r7, #4]
 80090f8:	3320      	adds	r3, #32
 80090fa:	607b      	str	r3, [r7, #4]
 80090fc:	e7f0      	b.n	80090e0 <_ZNSt12_Destroy_auxILb0EE9__destroyIP6SymbolEEvT_S4_+0xa>
	}
 80090fe:	bf00      	nop
 8009100:	3708      	adds	r7, #8
 8009102:	46bd      	mov	sp, r7
 8009104:	bd80      	pop	{r7, pc}

08009106 <_ZSt12__niter_baseIPK6SymbolSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE>:
{
_GLIBCXX_BEGIN_NAMESPACE_VERSION

  template<typename _Iterator, typename _Container>
    _Iterator
    __niter_base(__gnu_cxx::__normal_iterator<_Iterator, _Container> __it)
 8009106:	b580      	push	{r7, lr}
 8009108:	b082      	sub	sp, #8
 800910a:	af00      	add	r7, sp, #0
 800910c:	6078      	str	r0, [r7, #4]
    _GLIBCXX_NOEXCEPT_IF(std::is_nothrow_copy_constructible<_Iterator>::value)
    { return __it.base(); }
 800910e:	1d3b      	adds	r3, r7, #4
 8009110:	4618      	mov	r0, r3
 8009112:	f000 fa58 	bl	80095c6 <_ZNK9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS1_SaIS1_EEE4baseEv>
 8009116:	4603      	mov	r3, r0
 8009118:	681b      	ldr	r3, [r3, #0]
 800911a:	4618      	mov	r0, r3
 800911c:	3708      	adds	r7, #8
 800911e:	46bd      	mov	sp, r7
 8009120:	bd80      	pop	{r7, pc}

08009122 <_ZSt12__niter_baseIP6SymbolSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE>:
    __niter_base(__gnu_cxx::__normal_iterator<_Iterator, _Container> __it)
 8009122:	b580      	push	{r7, lr}
 8009124:	b082      	sub	sp, #8
 8009126:	af00      	add	r7, sp, #0
 8009128:	6078      	str	r0, [r7, #4]
    { return __it.base(); }
 800912a:	1d3b      	adds	r3, r7, #4
 800912c:	4618      	mov	r0, r3
 800912e:	f000 fa55 	bl	80095dc <_ZNK9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS1_SaIS1_EEE4baseEv>
 8009132:	4603      	mov	r3, r0
 8009134:	681b      	ldr	r3, [r3, #0]
 8009136:	4618      	mov	r0, r3
 8009138:	3708      	adds	r7, #8
 800913a:	46bd      	mov	sp, r7
 800913c:	bd80      	pop	{r7, pc}

0800913e <_ZSt13__copy_move_aILb0EPK6SymbolPS0_ET1_T0_S5_S4_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
 800913e:	b580      	push	{r7, lr}
 8009140:	b086      	sub	sp, #24
 8009142:	af00      	add	r7, sp, #0
 8009144:	60f8      	str	r0, [r7, #12]
 8009146:	60b9      	str	r1, [r7, #8]
 8009148:	607a      	str	r2, [r7, #4]
      const bool __simple = (__is_trivially_copyable(_ValueTypeI)
 800914a:	2300      	movs	r3, #0
 800914c:	75fb      	strb	r3, [r7, #23]
			      _Category>::__copy_m(__first, __last, __result);
 800914e:	687a      	ldr	r2, [r7, #4]
 8009150:	68b9      	ldr	r1, [r7, #8]
 8009152:	68f8      	ldr	r0, [r7, #12]
 8009154:	f000 fa4d 	bl	80095f2 <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPK6SymbolPS3_EET0_T_S8_S7_>
 8009158:	4603      	mov	r3, r0
    }
 800915a:	4618      	mov	r0, r3
 800915c:	3718      	adds	r7, #24
 800915e:	46bd      	mov	sp, r7
 8009160:	bd80      	pop	{r7, pc}

08009162 <_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS2_SaIS2_EEEES3_ET_S8_T0_>:
    __niter_wrap(_From __from, _To __res)
 8009162:	b580      	push	{r7, lr}
 8009164:	b082      	sub	sp, #8
 8009166:	af00      	add	r7, sp, #0
 8009168:	6078      	str	r0, [r7, #4]
 800916a:	6039      	str	r1, [r7, #0]
    { return __from + (__res - std::__niter_base(__from)); }
 800916c:	6878      	ldr	r0, [r7, #4]
 800916e:	f7ff ffd8 	bl	8009122 <_ZSt12__niter_baseIP6SymbolSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE>
 8009172:	4602      	mov	r2, r0
 8009174:	683b      	ldr	r3, [r7, #0]
 8009176:	1a9b      	subs	r3, r3, r2
 8009178:	115b      	asrs	r3, r3, #5
 800917a:	461a      	mov	r2, r3
 800917c:	1d3b      	adds	r3, r7, #4
 800917e:	4611      	mov	r1, r2
 8009180:	4618      	mov	r0, r3
 8009182:	f000 fa57 	bl	8009634 <_ZNK9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS1_SaIS1_EEEplEi>
 8009186:	4603      	mov	r3, r0
 8009188:	4618      	mov	r0, r3
 800918a:	3708      	adds	r7, #8
 800918c:	46bd      	mov	sp, r7
 800918e:	bd80      	pop	{r7, pc}

08009190 <_ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS4_SaIS4_EEEEEEvT_SA_>:
        __destroy(_ForwardIterator __first, _ForwardIterator __last)
 8009190:	b580      	push	{r7, lr}
 8009192:	b082      	sub	sp, #8
 8009194:	af00      	add	r7, sp, #0
 8009196:	6078      	str	r0, [r7, #4]
 8009198:	6039      	str	r1, [r7, #0]
	  for (; __first != __last; ++__first)
 800919a:	463a      	mov	r2, r7
 800919c:	1d3b      	adds	r3, r7, #4
 800919e:	4611      	mov	r1, r2
 80091a0:	4618      	mov	r0, r3
 80091a2:	f000 fa5f 	bl	8009664 <_ZN9__gnu_cxxneIP6SymbolSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
 80091a6:	4603      	mov	r3, r0
 80091a8:	2b00      	cmp	r3, #0
 80091aa:	d010      	beq.n	80091ce <_ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS4_SaIS4_EEEEEEvT_SA_+0x3e>
	    std::_Destroy(std::__addressof(*__first));
 80091ac:	1d3b      	adds	r3, r7, #4
 80091ae:	4618      	mov	r0, r3
 80091b0:	f000 fa81 	bl	80096b6 <_ZNK9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS1_SaIS1_EEEdeEv>
 80091b4:	4603      	mov	r3, r0
 80091b6:	4618      	mov	r0, r3
 80091b8:	f000 f9ef 	bl	800959a <_ZSt11__addressofI6SymbolEPT_RS1_>
 80091bc:	4603      	mov	r3, r0
 80091be:	4618      	mov	r0, r3
 80091c0:	f000 f9f6 	bl	80095b0 <_ZSt8_DestroyI6SymbolEvPT_>
	  for (; __first != __last; ++__first)
 80091c4:	1d3b      	adds	r3, r7, #4
 80091c6:	4618      	mov	r0, r3
 80091c8:	f000 fa64 	bl	8009694 <_ZN9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS1_SaIS1_EEEppEv>
 80091cc:	e7e5      	b.n	800919a <_ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS4_SaIS4_EEEEEEvT_SA_+0xa>
	}
 80091ce:	bf00      	nop
 80091d0:	3708      	adds	r7, #8
 80091d2:	46bd      	mov	sp, r7
 80091d4:	bd80      	pop	{r7, pc}

080091d6 <_ZSt12__niter_baseIP6SymbolET_S2_>:
    __niter_base(_Iterator __it)
 80091d6:	b480      	push	{r7}
 80091d8:	b083      	sub	sp, #12
 80091da:	af00      	add	r7, sp, #0
 80091dc:	6078      	str	r0, [r7, #4]
    { return __it; }
 80091de:	687b      	ldr	r3, [r7, #4]
 80091e0:	4618      	mov	r0, r3
 80091e2:	370c      	adds	r7, #12
 80091e4:	46bd      	mov	sp, r7
 80091e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80091ea:	4770      	bx	lr

080091ec <_ZSt13__copy_move_aILb0EP6SymbolS1_ET1_T0_S3_S2_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
 80091ec:	b580      	push	{r7, lr}
 80091ee:	b086      	sub	sp, #24
 80091f0:	af00      	add	r7, sp, #0
 80091f2:	60f8      	str	r0, [r7, #12]
 80091f4:	60b9      	str	r1, [r7, #8]
 80091f6:	607a      	str	r2, [r7, #4]
      const bool __simple = (__is_trivially_copyable(_ValueTypeI)
 80091f8:	2300      	movs	r3, #0
 80091fa:	75fb      	strb	r3, [r7, #23]
			      _Category>::__copy_m(__first, __last, __result);
 80091fc:	687a      	ldr	r2, [r7, #4]
 80091fe:	68b9      	ldr	r1, [r7, #8]
 8009200:	68f8      	ldr	r0, [r7, #12]
 8009202:	f000 fa64 	bl	80096ce <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIP6SymbolS4_EET0_T_S6_S5_>
 8009206:	4603      	mov	r3, r0
    }
 8009208:	4618      	mov	r0, r3
 800920a:	3718      	adds	r7, #24
 800920c:	46bd      	mov	sp, r7
 800920e:	bd80      	pop	{r7, pc}

08009210 <_ZSt12__niter_wrapIP6SymbolET_RKS2_S2_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
 8009210:	b480      	push	{r7}
 8009212:	b083      	sub	sp, #12
 8009214:	af00      	add	r7, sp, #0
 8009216:	6078      	str	r0, [r7, #4]
 8009218:	6039      	str	r1, [r7, #0]
    { return __res; }
 800921a:	683b      	ldr	r3, [r7, #0]
 800921c:	4618      	mov	r0, r3
 800921e:	370c      	adds	r7, #12
 8009220:	46bd      	mov	sp, r7
 8009222:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009226:	4770      	bx	lr

08009228 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIP6SymbolS3_EET0_T_S5_S4_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
 8009228:	b580      	push	{r7, lr}
 800922a:	b086      	sub	sp, #24
 800922c:	af00      	add	r7, sp, #0
 800922e:	60f8      	str	r0, [r7, #12]
 8009230:	60b9      	str	r1, [r7, #8]
 8009232:	607a      	str	r2, [r7, #4]
	  _ForwardIterator __cur = __result;
 8009234:	687b      	ldr	r3, [r7, #4]
 8009236:	617b      	str	r3, [r7, #20]
	      for (; __first != __last; ++__first, (void)++__cur)
 8009238:	68fa      	ldr	r2, [r7, #12]
 800923a:	68bb      	ldr	r3, [r7, #8]
 800923c:	429a      	cmp	r2, r3
 800923e:	d00e      	beq.n	800925e <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIP6SymbolS3_EET0_T_S5_S4_+0x36>
		std::_Construct(std::__addressof(*__cur), *__first);
 8009240:	6978      	ldr	r0, [r7, #20]
 8009242:	f000 f9aa 	bl	800959a <_ZSt11__addressofI6SymbolEPT_RS1_>
 8009246:	4603      	mov	r3, r0
 8009248:	68f9      	ldr	r1, [r7, #12]
 800924a:	4618      	mov	r0, r3
 800924c:	f000 fa60 	bl	8009710 <_ZSt10_ConstructI6SymbolJRS0_EEvPT_DpOT0_>
	      for (; __first != __last; ++__first, (void)++__cur)
 8009250:	68fb      	ldr	r3, [r7, #12]
 8009252:	3320      	adds	r3, #32
 8009254:	60fb      	str	r3, [r7, #12]
 8009256:	697b      	ldr	r3, [r7, #20]
 8009258:	3320      	adds	r3, #32
 800925a:	617b      	str	r3, [r7, #20]
 800925c:	e7ec      	b.n	8009238 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIP6SymbolS3_EET0_T_S5_S4_+0x10>
	      return __cur;
 800925e:	697b      	ldr	r3, [r7, #20]
	}
 8009260:	4618      	mov	r0, r3
 8009262:	3718      	adds	r7, #24
 8009264:	46bd      	mov	sp, r7
 8009266:	bd80      	pop	{r7, pc}

08009268 <_ZSt9addressofIN9__gnu_cxx16__aligned_membufISt6vectorI6SymbolSaIS3_EEEEEPT_RS7_>:
    addressof(_Tp& __r) noexcept
 8009268:	b580      	push	{r7, lr}
 800926a:	b082      	sub	sp, #8
 800926c:	af00      	add	r7, sp, #0
 800926e:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 8009270:	6878      	ldr	r0, [r7, #4]
 8009272:	f000 fa64 	bl	800973e <_ZSt11__addressofIN9__gnu_cxx16__aligned_membufISt6vectorI6SymbolSaIS3_EEEEEPT_RS7_>
 8009276:	4603      	mov	r3, r0
 8009278:	4618      	mov	r0, r3
 800927a:	3708      	adds	r7, #8
 800927c:	46bd      	mov	sp, r7
 800927e:	bd80      	pop	{r7, pc}

08009280 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKc10token_typeEE7_M_addrEv>:
      _M_addr() const noexcept
 8009280:	b480      	push	{r7}
 8009282:	b083      	sub	sp, #12
 8009284:	af00      	add	r7, sp, #0
 8009286:	6078      	str	r0, [r7, #4]
      { return static_cast<const void*>(&_M_storage); }
 8009288:	687b      	ldr	r3, [r7, #4]
 800928a:	4618      	mov	r0, r3
 800928c:	370c      	adds	r7, #12
 800928e:	46bd      	mov	sp, r7
 8009290:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009294:	4770      	bx	lr

08009296 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 8009296:	b580      	push	{r7, lr}
 8009298:	b084      	sub	sp, #16
 800929a:	af00      	add	r7, sp, #0
 800929c:	60f8      	str	r0, [r7, #12]
 800929e:	60b9      	str	r1, [r7, #8]
 80092a0:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 80092a2:	68f8      	ldr	r0, [r7, #12]
 80092a4:	f000 fa56 	bl	8009754 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEE8max_sizeEv>
 80092a8:	4602      	mov	r2, r0
 80092aa:	68bb      	ldr	r3, [r7, #8]
 80092ac:	4293      	cmp	r3, r2
 80092ae:	bf8c      	ite	hi
 80092b0:	2301      	movhi	r3, #1
 80092b2:	2300      	movls	r3, #0
 80092b4:	b2db      	uxtb	r3, r3
 80092b6:	2b00      	cmp	r3, #0
 80092b8:	d001      	beq.n	80092be <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 80092ba:	f01a f9e1 	bl	8023680 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 80092be:	68ba      	ldr	r2, [r7, #8]
 80092c0:	4613      	mov	r3, r2
 80092c2:	009b      	lsls	r3, r3, #2
 80092c4:	4413      	add	r3, r2
 80092c6:	009b      	lsls	r3, r3, #2
 80092c8:	4618      	mov	r0, r3
 80092ca:	f01a f914 	bl	80234f6 <_Znwj>
 80092ce:	4603      	mov	r3, r0
 80092d0:	bf00      	nop
      }
 80092d2:	4618      	mov	r0, r3
 80092d4:	3710      	adds	r7, #16
 80092d6:	46bd      	mov	sp, r7
 80092d8:	bd80      	pop	{r7, pc}

080092da <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEE9constructIS5_JRKS5_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 80092da:	b590      	push	{r4, r7, lr}
 80092dc:	b085      	sub	sp, #20
 80092de:	af00      	add	r7, sp, #0
 80092e0:	60f8      	str	r0, [r7, #12]
 80092e2:	60b9      	str	r1, [r7, #8]
 80092e4:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 80092e6:	6878      	ldr	r0, [r7, #4]
 80092e8:	f7fc f938 	bl	800555c <_ZSt7forwardIRKSt4pairIKc10token_typeEEOT_RNSt16remove_referenceIS6_E4typeE>
 80092ec:	4604      	mov	r4, r0
 80092ee:	68bb      	ldr	r3, [r7, #8]
 80092f0:	4619      	mov	r1, r3
 80092f2:	2002      	movs	r0, #2
 80092f4:	f7f7 feb1 	bl	800105a <_ZnwjPv>
 80092f8:	4603      	mov	r3, r0
 80092fa:	461a      	mov	r2, r3
 80092fc:	4623      	mov	r3, r4
 80092fe:	881b      	ldrh	r3, [r3, #0]
 8009300:	8013      	strh	r3, [r2, #0]
 8009302:	bf00      	nop
 8009304:	3714      	adds	r7, #20
 8009306:	46bd      	mov	sp, r7
 8009308:	bd90      	pop	{r4, r7, pc}

0800930a <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE7_M_addrEv>:
      _M_addr() const noexcept
 800930a:	b480      	push	{r7}
 800930c:	b083      	sub	sp, #12
 800930e:	af00      	add	r7, sp, #0
 8009310:	6078      	str	r0, [r7, #4]
      { return static_cast<const void*>(&_M_storage); }
 8009312:	687b      	ldr	r3, [r7, #4]
 8009314:	4618      	mov	r0, r3
 8009316:	370c      	adds	r7, #12
 8009318:	46bd      	mov	sp, r7
 800931a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800931e:	4770      	bx	lr

08009320 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 8009320:	b580      	push	{r7, lr}
 8009322:	b084      	sub	sp, #16
 8009324:	af00      	add	r7, sp, #0
 8009326:	60f8      	str	r0, [r7, #12]
 8009328:	60b9      	str	r1, [r7, #8]
 800932a:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 800932c:	68f8      	ldr	r0, [r7, #12]
 800932e:	f000 fa1f 	bl	8009770 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEE8max_sizeEv>
 8009332:	4602      	mov	r2, r0
 8009334:	68bb      	ldr	r3, [r7, #8]
 8009336:	4293      	cmp	r3, r2
 8009338:	bf8c      	ite	hi
 800933a:	2301      	movhi	r3, #1
 800933c:	2300      	movls	r3, #0
 800933e:	b2db      	uxtb	r3, r3
 8009340:	2b00      	cmp	r3, #0
 8009342:	d001      	beq.n	8009348 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 8009344:	f01a f99c 	bl	8023680 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 8009348:	68bb      	ldr	r3, [r7, #8]
 800934a:	222c      	movs	r2, #44	; 0x2c
 800934c:	fb02 f303 	mul.w	r3, r2, r3
 8009350:	4618      	mov	r0, r3
 8009352:	f01a f8d0 	bl	80234f6 <_Znwj>
 8009356:	4603      	mov	r3, r0
 8009358:	bf00      	nop
      }
 800935a:	4618      	mov	r0, r3
 800935c:	3710      	adds	r7, #16
 800935e:	46bd      	mov	sp, r7
 8009360:	bd80      	pop	{r7, pc}

08009362 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1ERKS8_>:
      constexpr pair(const pair&) = default;
 8009362:	b580      	push	{r7, lr}
 8009364:	b082      	sub	sp, #8
 8009366:	af00      	add	r7, sp, #0
 8009368:	6078      	str	r0, [r7, #4]
 800936a:	6039      	str	r1, [r7, #0]
 800936c:	687b      	ldr	r3, [r7, #4]
 800936e:	683a      	ldr	r2, [r7, #0]
 8009370:	4611      	mov	r1, r2
 8009372:	4618      	mov	r0, r3
 8009374:	f01a fd30 	bl	8023dd8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 8009378:	683b      	ldr	r3, [r7, #0]
 800937a:	7e1a      	ldrb	r2, [r3, #24]
 800937c:	687b      	ldr	r3, [r7, #4]
 800937e:	761a      	strb	r2, [r3, #24]
 8009380:	687b      	ldr	r3, [r7, #4]
 8009382:	4618      	mov	r0, r3
 8009384:	3708      	adds	r7, #8
 8009386:	46bd      	mov	sp, r7
 8009388:	bd80      	pop	{r7, pc}

0800938a <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEE9constructISB_JRKSB_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 800938a:	b590      	push	{r4, r7, lr}
 800938c:	b085      	sub	sp, #20
 800938e:	af00      	add	r7, sp, #0
 8009390:	60f8      	str	r0, [r7, #12]
 8009392:	60b9      	str	r1, [r7, #8]
 8009394:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 8009396:	6878      	ldr	r0, [r7, #4]
 8009398:	f7fc fad6 	bl	8005948 <_ZSt7forwardIRKSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEOT_RNSt16remove_referenceISC_E4typeE>
 800939c:	4604      	mov	r4, r0
 800939e:	68bb      	ldr	r3, [r7, #8]
 80093a0:	4619      	mov	r1, r3
 80093a2:	201c      	movs	r0, #28
 80093a4:	f7f7 fe59 	bl	800105a <_ZnwjPv>
 80093a8:	4603      	mov	r3, r0
 80093aa:	4621      	mov	r1, r4
 80093ac:	4618      	mov	r0, r3
 80093ae:	f7ff ffd8 	bl	8009362 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1ERKS8_>
 80093b2:	bf00      	nop
 80093b4:	3714      	adds	r7, #20
 80093b6:	46bd      	mov	sp, r7
 80093b8:	bd90      	pop	{r4, r7, pc}

080093ba <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKc12double_tokenEE7_M_addrEv>:
      _M_addr() const noexcept
 80093ba:	b480      	push	{r7}
 80093bc:	b083      	sub	sp, #12
 80093be:	af00      	add	r7, sp, #0
 80093c0:	6078      	str	r0, [r7, #4]
      { return static_cast<const void*>(&_M_storage); }
 80093c2:	687b      	ldr	r3, [r7, #4]
 80093c4:	4618      	mov	r0, r3
 80093c6:	370c      	adds	r7, #12
 80093c8:	46bd      	mov	sp, r7
 80093ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80093ce:	4770      	bx	lr

080093d0 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 80093d0:	b580      	push	{r7, lr}
 80093d2:	b084      	sub	sp, #16
 80093d4:	af00      	add	r7, sp, #0
 80093d6:	60f8      	str	r0, [r7, #12]
 80093d8:	60b9      	str	r1, [r7, #8]
 80093da:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 80093dc:	68f8      	ldr	r0, [r7, #12]
 80093de:	f000 f9d5 	bl	800978c <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEE8max_sizeEv>
 80093e2:	4602      	mov	r2, r0
 80093e4:	68bb      	ldr	r3, [r7, #8]
 80093e6:	4293      	cmp	r3, r2
 80093e8:	bf8c      	ite	hi
 80093ea:	2301      	movhi	r3, #1
 80093ec:	2300      	movls	r3, #0
 80093ee:	b2db      	uxtb	r3, r3
 80093f0:	2b00      	cmp	r3, #0
 80093f2:	d001      	beq.n	80093f8 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 80093f4:	f01a f944 	bl	8023680 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 80093f8:	68ba      	ldr	r2, [r7, #8]
 80093fa:	4613      	mov	r3, r2
 80093fc:	009b      	lsls	r3, r3, #2
 80093fe:	4413      	add	r3, r2
 8009400:	009b      	lsls	r3, r3, #2
 8009402:	4618      	mov	r0, r3
 8009404:	f01a f877 	bl	80234f6 <_Znwj>
 8009408:	4603      	mov	r3, r0
 800940a:	bf00      	nop
      }
 800940c:	4618      	mov	r0, r3
 800940e:	3710      	adds	r7, #16
 8009410:	46bd      	mov	sp, r7
 8009412:	bd80      	pop	{r7, pc}

08009414 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEE9constructIS5_JRKS5_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 8009414:	b590      	push	{r4, r7, lr}
 8009416:	b085      	sub	sp, #20
 8009418:	af00      	add	r7, sp, #0
 800941a:	60f8      	str	r0, [r7, #12]
 800941c:	60b9      	str	r1, [r7, #8]
 800941e:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 8009420:	6878      	ldr	r0, [r7, #4]
 8009422:	f7fc fc7b 	bl	8005d1c <_ZSt7forwardIRKSt4pairIKc12double_tokenEEOT_RNSt16remove_referenceIS6_E4typeE>
 8009426:	4604      	mov	r4, r0
 8009428:	68bb      	ldr	r3, [r7, #8]
 800942a:	4619      	mov	r1, r3
 800942c:	2003      	movs	r0, #3
 800942e:	f7f7 fe14 	bl	800105a <_ZnwjPv>
 8009432:	4603      	mov	r3, r0
 8009434:	4622      	mov	r2, r4
 8009436:	8811      	ldrh	r1, [r2, #0]
 8009438:	7892      	ldrb	r2, [r2, #2]
 800943a:	8019      	strh	r1, [r3, #0]
 800943c:	709a      	strb	r2, [r3, #2]
 800943e:	bf00      	nop
 8009440:	3714      	adds	r7, #20
 8009442:	46bd      	mov	sp, r7
 8009444:	bd90      	pop	{r4, r7, pc}

08009446 <_ZNSt16allocator_traitsISaI6SymbolEE37select_on_container_copy_constructionERKS1_>:
      select_on_container_copy_construction(const allocator_type& __rhs)
 8009446:	b580      	push	{r7, lr}
 8009448:	b082      	sub	sp, #8
 800944a:	af00      	add	r7, sp, #0
 800944c:	6078      	str	r0, [r7, #4]
 800944e:	6039      	str	r1, [r7, #0]
      { return __rhs; }
 8009450:	6839      	ldr	r1, [r7, #0]
 8009452:	6878      	ldr	r0, [r7, #4]
 8009454:	f7ff fd78 	bl	8008f48 <_ZNSaI6SymbolEC1ERKS0_>
 8009458:	6878      	ldr	r0, [r7, #4]
 800945a:	3708      	adds	r7, #8
 800945c:	46bd      	mov	sp, r7
 800945e:	bd80      	pop	{r7, pc}

08009460 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
 8009460:	b580      	push	{r7, lr}
 8009462:	b082      	sub	sp, #8
 8009464:	af00      	add	r7, sp, #0
 8009466:	6078      	str	r0, [r7, #4]
 8009468:	6039      	str	r1, [r7, #0]
	: _Tp_alloc_type(__a)
 800946a:	6839      	ldr	r1, [r7, #0]
 800946c:	6878      	ldr	r0, [r7, #4]
 800946e:	f7ff fd6b 	bl	8008f48 <_ZNSaI6SymbolEC1ERKS0_>
 8009472:	687b      	ldr	r3, [r7, #4]
 8009474:	4618      	mov	r0, r3
 8009476:	f7ff fd8f 	bl	8008f98 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
 800947a:	687b      	ldr	r3, [r7, #4]
 800947c:	4618      	mov	r0, r3
 800947e:	3708      	adds	r7, #8
 8009480:	46bd      	mov	sp, r7
 8009482:	bd80      	pop	{r7, pc}

08009484 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE17_M_create_storageEj>:
      _M_create_storage(size_t __n)
 8009484:	b580      	push	{r7, lr}
 8009486:	b082      	sub	sp, #8
 8009488:	af00      	add	r7, sp, #0
 800948a:	6078      	str	r0, [r7, #4]
 800948c:	6039      	str	r1, [r7, #0]
	this->_M_impl._M_start = this->_M_allocate(__n);
 800948e:	6839      	ldr	r1, [r7, #0]
 8009490:	6878      	ldr	r0, [r7, #4]
 8009492:	f7ff fb33 	bl	8008afc <_ZNSt12_Vector_baseI6SymbolSaIS0_EE11_M_allocateEj>
 8009496:	4602      	mov	r2, r0
 8009498:	687b      	ldr	r3, [r7, #4]
 800949a:	601a      	str	r2, [r3, #0]
	this->_M_impl._M_finish = this->_M_impl._M_start;
 800949c:	687b      	ldr	r3, [r7, #4]
 800949e:	681a      	ldr	r2, [r3, #0]
 80094a0:	687b      	ldr	r3, [r7, #4]
 80094a2:	605a      	str	r2, [r3, #4]
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 80094a4:	687b      	ldr	r3, [r7, #4]
 80094a6:	681a      	ldr	r2, [r3, #0]
 80094a8:	683b      	ldr	r3, [r7, #0]
 80094aa:	015b      	lsls	r3, r3, #5
 80094ac:	441a      	add	r2, r3
 80094ae:	687b      	ldr	r3, [r7, #4]
 80094b0:	609a      	str	r2, [r3, #8]
      }
 80094b2:	bf00      	nop
 80094b4:	3708      	adds	r7, #8
 80094b6:	46bd      	mov	sp, r7
 80094b8:	bd80      	pop	{r7, pc}

080094ba <_ZN9__gnu_cxx13new_allocatorI6SymbolEC1ERKS2_>:
      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
 80094ba:	b480      	push	{r7}
 80094bc:	b083      	sub	sp, #12
 80094be:	af00      	add	r7, sp, #0
 80094c0:	6078      	str	r0, [r7, #4]
 80094c2:	6039      	str	r1, [r7, #0]
 80094c4:	687b      	ldr	r3, [r7, #4]
 80094c6:	4618      	mov	r0, r3
 80094c8:	370c      	adds	r7, #12
 80094ca:	46bd      	mov	sp, r7
 80094cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80094d0:	4770      	bx	lr

080094d2 <_ZSt4moveIRSaI6SymbolEEONSt16remove_referenceIT_E4typeEOS4_>:
    move(_Tp&& __t) noexcept
 80094d2:	b480      	push	{r7}
 80094d4:	b083      	sub	sp, #12
 80094d6:	af00      	add	r7, sp, #0
 80094d8:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 80094da:	687b      	ldr	r3, [r7, #4]
 80094dc:	4618      	mov	r0, r3
 80094de:	370c      	adds	r7, #12
 80094e0:	46bd      	mov	sp, r7
 80094e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80094e6:	4770      	bx	lr

080094e8 <_ZSt11__addressofIN9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEPT_RS9_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 80094e8:	b480      	push	{r7}
 80094ea:	b083      	sub	sp, #12
 80094ec:	af00      	add	r7, sp, #0
 80094ee:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 80094f0:	687b      	ldr	r3, [r7, #4]
 80094f2:	4618      	mov	r0, r3
 80094f4:	370c      	adds	r7, #12
 80094f6:	46bd      	mov	sp, r7
 80094f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80094fc:	4770      	bx	lr

080094fe <_ZN9__gnu_cxx13new_allocatorI6SymbolE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 80094fe:	b580      	push	{r7, lr}
 8009500:	b084      	sub	sp, #16
 8009502:	af00      	add	r7, sp, #0
 8009504:	60f8      	str	r0, [r7, #12]
 8009506:	60b9      	str	r1, [r7, #8]
 8009508:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 800950a:	68f8      	ldr	r0, [r7, #12]
 800950c:	f000 f94c 	bl	80097a8 <_ZNK9__gnu_cxx13new_allocatorI6SymbolE8max_sizeEv>
 8009510:	4602      	mov	r2, r0
 8009512:	68bb      	ldr	r3, [r7, #8]
 8009514:	4293      	cmp	r3, r2
 8009516:	bf8c      	ite	hi
 8009518:	2301      	movhi	r3, #1
 800951a:	2300      	movls	r3, #0
 800951c:	b2db      	uxtb	r3, r3
 800951e:	2b00      	cmp	r3, #0
 8009520:	d001      	beq.n	8009526 <_ZN9__gnu_cxx13new_allocatorI6SymbolE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 8009522:	f01a f8ad 	bl	8023680 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 8009526:	68bb      	ldr	r3, [r7, #8]
 8009528:	015b      	lsls	r3, r3, #5
 800952a:	4618      	mov	r0, r3
 800952c:	f019 ffe3 	bl	80234f6 <_Znwj>
 8009530:	4603      	mov	r3, r0
 8009532:	bf00      	nop
      }
 8009534:	4618      	mov	r0, r3
 8009536:	3710      	adds	r7, #16
 8009538:	46bd      	mov	sp, r7
 800953a:	bd80      	pop	{r7, pc}

0800953c <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
 800953c:	b590      	push	{r4, r7, lr}
 800953e:	b087      	sub	sp, #28
 8009540:	af00      	add	r7, sp, #0
 8009542:	60f8      	str	r0, [r7, #12]
 8009544:	60b9      	str	r1, [r7, #8]
 8009546:	607a      	str	r2, [r7, #4]
	  _ForwardIterator __cur = __result;
 8009548:	687b      	ldr	r3, [r7, #4]
 800954a:	617b      	str	r3, [r7, #20]
	      for (; __first != __last; ++__first, (void)++__cur)
 800954c:	f107 0208 	add.w	r2, r7, #8
 8009550:	f107 030c 	add.w	r3, r7, #12
 8009554:	4611      	mov	r1, r2
 8009556:	4618      	mov	r0, r3
 8009558:	f000 f932 	bl	80097c0 <_ZN9__gnu_cxxneIPK6SymbolSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
 800955c:	4603      	mov	r3, r0
 800955e:	2b00      	cmp	r3, #0
 8009560:	d016      	beq.n	8009590 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_+0x54>
		std::_Construct(std::__addressof(*__cur), *__first);
 8009562:	6978      	ldr	r0, [r7, #20]
 8009564:	f000 f819 	bl	800959a <_ZSt11__addressofI6SymbolEPT_RS1_>
 8009568:	4604      	mov	r4, r0
 800956a:	f107 030c 	add.w	r3, r7, #12
 800956e:	4618      	mov	r0, r3
 8009570:	f000 f94f 	bl	8009812 <_ZNK9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS1_SaIS1_EEEdeEv>
 8009574:	4603      	mov	r3, r0
 8009576:	4619      	mov	r1, r3
 8009578:	4620      	mov	r0, r4
 800957a:	f000 f956 	bl	800982a <_ZSt10_ConstructI6SymbolJRKS0_EEvPT_DpOT0_>
	      for (; __first != __last; ++__first, (void)++__cur)
 800957e:	f107 030c 	add.w	r3, r7, #12
 8009582:	4618      	mov	r0, r3
 8009584:	f000 f934 	bl	80097f0 <_ZN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS1_SaIS1_EEEppEv>
 8009588:	697b      	ldr	r3, [r7, #20]
 800958a:	3320      	adds	r3, #32
 800958c:	617b      	str	r3, [r7, #20]
 800958e:	e7dd      	b.n	800954c <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_+0x10>
	      return __cur;
 8009590:	697b      	ldr	r3, [r7, #20]
	}
 8009592:	4618      	mov	r0, r3
 8009594:	371c      	adds	r7, #28
 8009596:	46bd      	mov	sp, r7
 8009598:	bd90      	pop	{r4, r7, pc}

0800959a <_ZSt11__addressofI6SymbolEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 800959a:	b480      	push	{r7}
 800959c:	b083      	sub	sp, #12
 800959e:	af00      	add	r7, sp, #0
 80095a0:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 80095a2:	687b      	ldr	r3, [r7, #4]
 80095a4:	4618      	mov	r0, r3
 80095a6:	370c      	adds	r7, #12
 80095a8:	46bd      	mov	sp, r7
 80095aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80095ae:	4770      	bx	lr

080095b0 <_ZSt8_DestroyI6SymbolEvPT_>:
    _Destroy(_Tp* __pointer)
 80095b0:	b580      	push	{r7, lr}
 80095b2:	b082      	sub	sp, #8
 80095b4:	af00      	add	r7, sp, #0
 80095b6:	6078      	str	r0, [r7, #4]
    { __pointer->~_Tp(); }
 80095b8:	6878      	ldr	r0, [r7, #4]
 80095ba:	f7f7 feef 	bl	800139c <_ZN6SymbolD1Ev>
 80095be:	bf00      	nop
 80095c0:	3708      	adds	r7, #8
 80095c2:	46bd      	mov	sp, r7
 80095c4:	bd80      	pop	{r7, pc}

080095c6 <_ZNK9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
 80095c6:	b480      	push	{r7}
 80095c8:	b083      	sub	sp, #12
 80095ca:	af00      	add	r7, sp, #0
 80095cc:	6078      	str	r0, [r7, #4]
      { return _M_current; }
 80095ce:	687b      	ldr	r3, [r7, #4]
 80095d0:	4618      	mov	r0, r3
 80095d2:	370c      	adds	r7, #12
 80095d4:	46bd      	mov	sp, r7
 80095d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80095da:	4770      	bx	lr

080095dc <_ZNK9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
 80095dc:	b480      	push	{r7}
 80095de:	b083      	sub	sp, #12
 80095e0:	af00      	add	r7, sp, #0
 80095e2:	6078      	str	r0, [r7, #4]
      { return _M_current; }
 80095e4:	687b      	ldr	r3, [r7, #4]
 80095e6:	4618      	mov	r0, r3
 80095e8:	370c      	adds	r7, #12
 80095ea:	46bd      	mov	sp, r7
 80095ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80095f0:	4770      	bx	lr

080095f2 <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPK6SymbolPS3_EET0_T_S8_S7_>:
	__copy_m(_II __first, _II __last, _OI __result)
 80095f2:	b580      	push	{r7, lr}
 80095f4:	b086      	sub	sp, #24
 80095f6:	af00      	add	r7, sp, #0
 80095f8:	60f8      	str	r0, [r7, #12]
 80095fa:	60b9      	str	r1, [r7, #8]
 80095fc:	607a      	str	r2, [r7, #4]
	  for(_Distance __n = __last - __first; __n > 0; --__n)
 80095fe:	68ba      	ldr	r2, [r7, #8]
 8009600:	68fb      	ldr	r3, [r7, #12]
 8009602:	1ad3      	subs	r3, r2, r3
 8009604:	115b      	asrs	r3, r3, #5
 8009606:	617b      	str	r3, [r7, #20]
 8009608:	697b      	ldr	r3, [r7, #20]
 800960a:	2b00      	cmp	r3, #0
 800960c:	dd0d      	ble.n	800962a <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPK6SymbolPS3_EET0_T_S8_S7_+0x38>
	      *__result = *__first;
 800960e:	68f9      	ldr	r1, [r7, #12]
 8009610:	6878      	ldr	r0, [r7, #4]
 8009612:	f7f8 f9fb 	bl	8001a0c <_ZN6SymbolaSERKS_>
	      ++__first;
 8009616:	68fb      	ldr	r3, [r7, #12]
 8009618:	3320      	adds	r3, #32
 800961a:	60fb      	str	r3, [r7, #12]
	      ++__result;
 800961c:	687b      	ldr	r3, [r7, #4]
 800961e:	3320      	adds	r3, #32
 8009620:	607b      	str	r3, [r7, #4]
	  for(_Distance __n = __last - __first; __n > 0; --__n)
 8009622:	697b      	ldr	r3, [r7, #20]
 8009624:	3b01      	subs	r3, #1
 8009626:	617b      	str	r3, [r7, #20]
 8009628:	e7ee      	b.n	8009608 <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPK6SymbolPS3_EET0_T_S8_S7_+0x16>
	  return __result;
 800962a:	687b      	ldr	r3, [r7, #4]
	}
 800962c:	4618      	mov	r0, r3
 800962e:	3718      	adds	r7, #24
 8009630:	46bd      	mov	sp, r7
 8009632:	bd80      	pop	{r7, pc}

08009634 <_ZNK9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS1_SaIS1_EEEplEi>:
      operator+(difference_type __n) const _GLIBCXX_NOEXCEPT
 8009634:	b580      	push	{r7, lr}
 8009636:	b084      	sub	sp, #16
 8009638:	af00      	add	r7, sp, #0
 800963a:	6078      	str	r0, [r7, #4]
 800963c:	6039      	str	r1, [r7, #0]
      { return __normal_iterator(_M_current + __n); }
 800963e:	687b      	ldr	r3, [r7, #4]
 8009640:	681a      	ldr	r2, [r3, #0]
 8009642:	683b      	ldr	r3, [r7, #0]
 8009644:	015b      	lsls	r3, r3, #5
 8009646:	4413      	add	r3, r2
 8009648:	60fb      	str	r3, [r7, #12]
 800964a:	f107 020c 	add.w	r2, r7, #12
 800964e:	f107 0308 	add.w	r3, r7, #8
 8009652:	4611      	mov	r1, r2
 8009654:	4618      	mov	r0, r3
 8009656:	f7ff fa83 	bl	8008b60 <_ZN9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS1_SaIS1_EEEC1ERKS2_>
 800965a:	68bb      	ldr	r3, [r7, #8]
 800965c:	4618      	mov	r0, r3
 800965e:	3710      	adds	r7, #16
 8009660:	46bd      	mov	sp, r7
 8009662:	bd80      	pop	{r7, pc}

08009664 <_ZN9__gnu_cxxneIP6SymbolSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
 8009664:	b590      	push	{r4, r7, lr}
 8009666:	b083      	sub	sp, #12
 8009668:	af00      	add	r7, sp, #0
 800966a:	6078      	str	r0, [r7, #4]
 800966c:	6039      	str	r1, [r7, #0]
    { return __lhs.base() != __rhs.base(); }
 800966e:	6878      	ldr	r0, [r7, #4]
 8009670:	f7ff ffb4 	bl	80095dc <_ZNK9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS1_SaIS1_EEE4baseEv>
 8009674:	4603      	mov	r3, r0
 8009676:	681c      	ldr	r4, [r3, #0]
 8009678:	6838      	ldr	r0, [r7, #0]
 800967a:	f7ff ffaf 	bl	80095dc <_ZNK9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS1_SaIS1_EEE4baseEv>
 800967e:	4603      	mov	r3, r0
 8009680:	681b      	ldr	r3, [r3, #0]
 8009682:	429c      	cmp	r4, r3
 8009684:	bf14      	ite	ne
 8009686:	2301      	movne	r3, #1
 8009688:	2300      	moveq	r3, #0
 800968a:	b2db      	uxtb	r3, r3
 800968c:	4618      	mov	r0, r3
 800968e:	370c      	adds	r7, #12
 8009690:	46bd      	mov	sp, r7
 8009692:	bd90      	pop	{r4, r7, pc}

08009694 <_ZN9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
 8009694:	b480      	push	{r7}
 8009696:	b083      	sub	sp, #12
 8009698:	af00      	add	r7, sp, #0
 800969a:	6078      	str	r0, [r7, #4]
	++_M_current;
 800969c:	687b      	ldr	r3, [r7, #4]
 800969e:	681b      	ldr	r3, [r3, #0]
 80096a0:	f103 0220 	add.w	r2, r3, #32
 80096a4:	687b      	ldr	r3, [r7, #4]
 80096a6:	601a      	str	r2, [r3, #0]
	return *this;
 80096a8:	687b      	ldr	r3, [r7, #4]
      }
 80096aa:	4618      	mov	r0, r3
 80096ac:	370c      	adds	r7, #12
 80096ae:	46bd      	mov	sp, r7
 80096b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80096b4:	4770      	bx	lr

080096b6 <_ZNK9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
 80096b6:	b480      	push	{r7}
 80096b8:	b083      	sub	sp, #12
 80096ba:	af00      	add	r7, sp, #0
 80096bc:	6078      	str	r0, [r7, #4]
      { return *_M_current; }
 80096be:	687b      	ldr	r3, [r7, #4]
 80096c0:	681b      	ldr	r3, [r3, #0]
 80096c2:	4618      	mov	r0, r3
 80096c4:	370c      	adds	r7, #12
 80096c6:	46bd      	mov	sp, r7
 80096c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80096cc:	4770      	bx	lr

080096ce <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIP6SymbolS4_EET0_T_S6_S5_>:
	__copy_m(_II __first, _II __last, _OI __result)
 80096ce:	b580      	push	{r7, lr}
 80096d0:	b086      	sub	sp, #24
 80096d2:	af00      	add	r7, sp, #0
 80096d4:	60f8      	str	r0, [r7, #12]
 80096d6:	60b9      	str	r1, [r7, #8]
 80096d8:	607a      	str	r2, [r7, #4]
	  for(_Distance __n = __last - __first; __n > 0; --__n)
 80096da:	68ba      	ldr	r2, [r7, #8]
 80096dc:	68fb      	ldr	r3, [r7, #12]
 80096de:	1ad3      	subs	r3, r2, r3
 80096e0:	115b      	asrs	r3, r3, #5
 80096e2:	617b      	str	r3, [r7, #20]
 80096e4:	697b      	ldr	r3, [r7, #20]
 80096e6:	2b00      	cmp	r3, #0
 80096e8:	dd0d      	ble.n	8009706 <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIP6SymbolS4_EET0_T_S6_S5_+0x38>
	      *__result = *__first;
 80096ea:	68f9      	ldr	r1, [r7, #12]
 80096ec:	6878      	ldr	r0, [r7, #4]
 80096ee:	f7f8 f98d 	bl	8001a0c <_ZN6SymbolaSERKS_>
	      ++__first;
 80096f2:	68fb      	ldr	r3, [r7, #12]
 80096f4:	3320      	adds	r3, #32
 80096f6:	60fb      	str	r3, [r7, #12]
	      ++__result;
 80096f8:	687b      	ldr	r3, [r7, #4]
 80096fa:	3320      	adds	r3, #32
 80096fc:	607b      	str	r3, [r7, #4]
	  for(_Distance __n = __last - __first; __n > 0; --__n)
 80096fe:	697b      	ldr	r3, [r7, #20]
 8009700:	3b01      	subs	r3, #1
 8009702:	617b      	str	r3, [r7, #20]
 8009704:	e7ee      	b.n	80096e4 <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIP6SymbolS4_EET0_T_S6_S5_+0x16>
	  return __result;
 8009706:	687b      	ldr	r3, [r7, #4]
	}
 8009708:	4618      	mov	r0, r3
 800970a:	3718      	adds	r7, #24
 800970c:	46bd      	mov	sp, r7
 800970e:	bd80      	pop	{r7, pc}

08009710 <_ZSt10_ConstructI6SymbolJRS0_EEvPT_DpOT0_>:
    _Construct(_T1* __p, _Args&&... __args)
 8009710:	b590      	push	{r4, r7, lr}
 8009712:	b083      	sub	sp, #12
 8009714:	af00      	add	r7, sp, #0
 8009716:	6078      	str	r0, [r7, #4]
 8009718:	6039      	str	r1, [r7, #0]
    { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
 800971a:	6838      	ldr	r0, [r7, #0]
 800971c:	f000 f89c 	bl	8009858 <_ZSt7forwardIR6SymbolEOT_RNSt16remove_referenceIS2_E4typeE>
 8009720:	4604      	mov	r4, r0
 8009722:	687b      	ldr	r3, [r7, #4]
 8009724:	4619      	mov	r1, r3
 8009726:	2020      	movs	r0, #32
 8009728:	f7f7 fc97 	bl	800105a <_ZnwjPv>
 800972c:	4603      	mov	r3, r0
 800972e:	4621      	mov	r1, r4
 8009730:	4618      	mov	r0, r3
 8009732:	f7f7 fe91 	bl	8001458 <_ZN6SymbolC1ERKS_>
 8009736:	bf00      	nop
 8009738:	370c      	adds	r7, #12
 800973a:	46bd      	mov	sp, r7
 800973c:	bd90      	pop	{r4, r7, pc}

0800973e <_ZSt11__addressofIN9__gnu_cxx16__aligned_membufISt6vectorI6SymbolSaIS3_EEEEEPT_RS7_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 800973e:	b480      	push	{r7}
 8009740:	b083      	sub	sp, #12
 8009742:	af00      	add	r7, sp, #0
 8009744:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 8009746:	687b      	ldr	r3, [r7, #4]
 8009748:	4618      	mov	r0, r3
 800974a:	370c      	adds	r7, #12
 800974c:	46bd      	mov	sp, r7
 800974e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009752:	4770      	bx	lr

08009754 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 8009754:	b480      	push	{r7}
 8009756:	b083      	sub	sp, #12
 8009758:	af00      	add	r7, sp, #0
 800975a:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 800975c:	4b03      	ldr	r3, [pc, #12]	; (800976c <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEE8max_sizeEv+0x18>)
      }
 800975e:	4618      	mov	r0, r3
 8009760:	370c      	adds	r7, #12
 8009762:	46bd      	mov	sp, r7
 8009764:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009768:	4770      	bx	lr
 800976a:	bf00      	nop
 800976c:	06666666 	.word	0x06666666

08009770 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 8009770:	b480      	push	{r7}
 8009772:	b083      	sub	sp, #12
 8009774:	af00      	add	r7, sp, #0
 8009776:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 8009778:	4b03      	ldr	r3, [pc, #12]	; (8009788 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEE8max_sizeEv+0x18>)
      }
 800977a:	4618      	mov	r0, r3
 800977c:	370c      	adds	r7, #12
 800977e:	46bd      	mov	sp, r7
 8009780:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009784:	4770      	bx	lr
 8009786:	bf00      	nop
 8009788:	02e8ba2e 	.word	0x02e8ba2e

0800978c <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 800978c:	b480      	push	{r7}
 800978e:	b083      	sub	sp, #12
 8009790:	af00      	add	r7, sp, #0
 8009792:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 8009794:	4b03      	ldr	r3, [pc, #12]	; (80097a4 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEE8max_sizeEv+0x18>)
      }
 8009796:	4618      	mov	r0, r3
 8009798:	370c      	adds	r7, #12
 800979a:	46bd      	mov	sp, r7
 800979c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80097a0:	4770      	bx	lr
 80097a2:	bf00      	nop
 80097a4:	06666666 	.word	0x06666666

080097a8 <_ZNK9__gnu_cxx13new_allocatorI6SymbolE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 80097a8:	b480      	push	{r7}
 80097aa:	b083      	sub	sp, #12
 80097ac:	af00      	add	r7, sp, #0
 80097ae:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 80097b0:	f06f 437c 	mvn.w	r3, #4227858432	; 0xfc000000
      }
 80097b4:	4618      	mov	r0, r3
 80097b6:	370c      	adds	r7, #12
 80097b8:	46bd      	mov	sp, r7
 80097ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80097be:	4770      	bx	lr

080097c0 <_ZN9__gnu_cxxneIPK6SymbolSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
 80097c0:	b590      	push	{r4, r7, lr}
 80097c2:	b083      	sub	sp, #12
 80097c4:	af00      	add	r7, sp, #0
 80097c6:	6078      	str	r0, [r7, #4]
 80097c8:	6039      	str	r1, [r7, #0]
    { return __lhs.base() != __rhs.base(); }
 80097ca:	6878      	ldr	r0, [r7, #4]
 80097cc:	f7ff fefb 	bl	80095c6 <_ZNK9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS1_SaIS1_EEE4baseEv>
 80097d0:	4603      	mov	r3, r0
 80097d2:	681c      	ldr	r4, [r3, #0]
 80097d4:	6838      	ldr	r0, [r7, #0]
 80097d6:	f7ff fef6 	bl	80095c6 <_ZNK9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS1_SaIS1_EEE4baseEv>
 80097da:	4603      	mov	r3, r0
 80097dc:	681b      	ldr	r3, [r3, #0]
 80097de:	429c      	cmp	r4, r3
 80097e0:	bf14      	ite	ne
 80097e2:	2301      	movne	r3, #1
 80097e4:	2300      	moveq	r3, #0
 80097e6:	b2db      	uxtb	r3, r3
 80097e8:	4618      	mov	r0, r3
 80097ea:	370c      	adds	r7, #12
 80097ec:	46bd      	mov	sp, r7
 80097ee:	bd90      	pop	{r4, r7, pc}

080097f0 <_ZN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
 80097f0:	b480      	push	{r7}
 80097f2:	b083      	sub	sp, #12
 80097f4:	af00      	add	r7, sp, #0
 80097f6:	6078      	str	r0, [r7, #4]
	++_M_current;
 80097f8:	687b      	ldr	r3, [r7, #4]
 80097fa:	681b      	ldr	r3, [r3, #0]
 80097fc:	f103 0220 	add.w	r2, r3, #32
 8009800:	687b      	ldr	r3, [r7, #4]
 8009802:	601a      	str	r2, [r3, #0]
	return *this;
 8009804:	687b      	ldr	r3, [r7, #4]
      }
 8009806:	4618      	mov	r0, r3
 8009808:	370c      	adds	r7, #12
 800980a:	46bd      	mov	sp, r7
 800980c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009810:	4770      	bx	lr

08009812 <_ZNK9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
 8009812:	b480      	push	{r7}
 8009814:	b083      	sub	sp, #12
 8009816:	af00      	add	r7, sp, #0
 8009818:	6078      	str	r0, [r7, #4]
      { return *_M_current; }
 800981a:	687b      	ldr	r3, [r7, #4]
 800981c:	681b      	ldr	r3, [r3, #0]
 800981e:	4618      	mov	r0, r3
 8009820:	370c      	adds	r7, #12
 8009822:	46bd      	mov	sp, r7
 8009824:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009828:	4770      	bx	lr

0800982a <_ZSt10_ConstructI6SymbolJRKS0_EEvPT_DpOT0_>:
    _Construct(_T1* __p, _Args&&... __args)
 800982a:	b590      	push	{r4, r7, lr}
 800982c:	b083      	sub	sp, #12
 800982e:	af00      	add	r7, sp, #0
 8009830:	6078      	str	r0, [r7, #4]
 8009832:	6039      	str	r1, [r7, #0]
    { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
 8009834:	6838      	ldr	r0, [r7, #0]
 8009836:	f000 f81a 	bl	800986e <_ZSt7forwardIRK6SymbolEOT_RNSt16remove_referenceIS3_E4typeE>
 800983a:	4604      	mov	r4, r0
 800983c:	687b      	ldr	r3, [r7, #4]
 800983e:	4619      	mov	r1, r3
 8009840:	2020      	movs	r0, #32
 8009842:	f7f7 fc0a 	bl	800105a <_ZnwjPv>
 8009846:	4603      	mov	r3, r0
 8009848:	4621      	mov	r1, r4
 800984a:	4618      	mov	r0, r3
 800984c:	f7f7 fe04 	bl	8001458 <_ZN6SymbolC1ERKS_>
 8009850:	bf00      	nop
 8009852:	370c      	adds	r7, #12
 8009854:	46bd      	mov	sp, r7
 8009856:	bd90      	pop	{r4, r7, pc}

08009858 <_ZSt7forwardIR6SymbolEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8009858:	b480      	push	{r7}
 800985a:	b083      	sub	sp, #12
 800985c:	af00      	add	r7, sp, #0
 800985e:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8009860:	687b      	ldr	r3, [r7, #4]
 8009862:	4618      	mov	r0, r3
 8009864:	370c      	adds	r7, #12
 8009866:	46bd      	mov	sp, r7
 8009868:	f85d 7b04 	ldr.w	r7, [sp], #4
 800986c:	4770      	bx	lr

0800986e <_ZSt7forwardIRK6SymbolEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800986e:	b480      	push	{r7}
 8009870:	b083      	sub	sp, #12
 8009872:	af00      	add	r7, sp, #0
 8009874:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8009876:	687b      	ldr	r3, [r7, #4]
 8009878:	4618      	mov	r0, r3
 800987a:	370c      	adds	r7, #12
 800987c:	46bd      	mov	sp, r7
 800987e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009882:	4770      	bx	lr

08009884 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>:
      /**
       *  The dtor only erases the elements, and note that if the elements
       *  themselves are pointers, the pointed-to memory is not touched in any
       *  way.  Managing the pointer is the user's responsibility.
       */
      ~map() = default;
 8009884:	b580      	push	{r7, lr}
 8009886:	b082      	sub	sp, #8
 8009888:	af00      	add	r7, sp, #0
 800988a:	6078      	str	r0, [r7, #4]
 800988c:	687b      	ldr	r3, [r7, #4]
 800988e:	4618      	mov	r0, r3
 8009890:	f7f9 fd1c 	bl	80032cc <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EED1Ev>
 8009894:	687b      	ldr	r3, [r7, #4]
 8009896:	4618      	mov	r0, r3
 8009898:	3708      	adds	r7, #8
 800989a:	46bd      	mov	sp, r7
 800989c:	bd80      	pop	{r7, pc}

0800989e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>:
 800989e:	b580      	push	{r7, lr}
 80098a0:	b082      	sub	sp, #8
 80098a2:	af00      	add	r7, sp, #0
 80098a4:	6078      	str	r0, [r7, #4]
 80098a6:	687b      	ldr	r3, [r7, #4]
 80098a8:	4618      	mov	r0, r3
 80098aa:	f7f9 fc5f 	bl	800316c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EED1Ev>
 80098ae:	687b      	ldr	r3, [r7, #4]
 80098b0:	4618      	mov	r0, r3
 80098b2:	3708      	adds	r7, #8
 80098b4:	46bd      	mov	sp, r7
 80098b6:	bd80      	pop	{r7, pc}

080098b8 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>:
 80098b8:	b580      	push	{r7, lr}
 80098ba:	b082      	sub	sp, #8
 80098bc:	af00      	add	r7, sp, #0
 80098be:	6078      	str	r0, [r7, #4]
 80098c0:	687b      	ldr	r3, [r7, #4]
 80098c2:	4618      	mov	r0, r3
 80098c4:	f7f9 fba5 	bl	8003012 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EED1Ev>
 80098c8:	687b      	ldr	r3, [r7, #4]
 80098ca:	4618      	mov	r0, r3
 80098cc:	3708      	adds	r7, #8
 80098ce:	46bd      	mov	sp, r7
 80098d0:	bd80      	pop	{r7, pc}
	...

080098d4 <_Z41__static_initialization_and_destruction_0ii>:
 80098d4:	b590      	push	{r4, r7, lr}
 80098d6:	b0e7      	sub	sp, #412	; 0x19c
 80098d8:	af02      	add	r7, sp, #8
 80098da:	1d3b      	adds	r3, r7, #4
 80098dc:	6018      	str	r0, [r3, #0]
 80098de:	463b      	mov	r3, r7
 80098e0:	6019      	str	r1, [r3, #0]
 80098e2:	1d3b      	adds	r3, r7, #4
 80098e4:	681b      	ldr	r3, [r3, #0]
 80098e6:	2b01      	cmp	r3, #1
 80098e8:	f040 819d 	bne.w	8009c26 <_Z41__static_initialization_and_destruction_0ii+0x352>
 80098ec:	463b      	mov	r3, r7
 80098ee:	681b      	ldr	r3, [r3, #0]
 80098f0:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80098f4:	4293      	cmp	r3, r2
 80098f6:	f040 8196 	bne.w	8009c26 <_Z41__static_initialization_and_destruction_0ii+0x352>
	{'^', TOKEN_POWER},
	{'%', TOKEN_MODULO},
	{'(', TOKEN_LEFT_BRACKET},
	{')', TOKEN_RIGHT_BRACKET},
	{'\0', TOKEN_END_OF_FILE},
};
 80098fa:	f107 0314 	add.w	r3, r7, #20
 80098fe:	4618      	mov	r0, r3
 8009900:	2322      	movs	r3, #34	; 0x22
 8009902:	461a      	mov	r2, r3
 8009904:	2100      	movs	r1, #0
 8009906:	f01b facb 	bl	8024ea0 <memset>
 800990a:	f107 0314 	add.w	r3, r7, #20
 800990e:	223a      	movs	r2, #58	; 0x3a
 8009910:	701a      	strb	r2, [r3, #0]
 8009912:	f107 0314 	add.w	r3, r7, #20
 8009916:	2201      	movs	r2, #1
 8009918:	705a      	strb	r2, [r3, #1]
 800991a:	f107 0314 	add.w	r3, r7, #20
 800991e:	220a      	movs	r2, #10
 8009920:	709a      	strb	r2, [r3, #2]
 8009922:	f107 0314 	add.w	r3, r7, #20
 8009926:	220a      	movs	r2, #10
 8009928:	70da      	strb	r2, [r3, #3]
 800992a:	f107 0314 	add.w	r3, r7, #20
 800992e:	222c      	movs	r2, #44	; 0x2c
 8009930:	711a      	strb	r2, [r3, #4]
 8009932:	f107 0314 	add.w	r3, r7, #20
 8009936:	220c      	movs	r2, #12
 8009938:	715a      	strb	r2, [r3, #5]
 800993a:	f107 0314 	add.w	r3, r7, #20
 800993e:	222e      	movs	r2, #46	; 0x2e
 8009940:	719a      	strb	r2, [r3, #6]
 8009942:	f107 0314 	add.w	r3, r7, #20
 8009946:	220b      	movs	r2, #11
 8009948:	71da      	strb	r2, [r3, #7]
 800994a:	f107 0314 	add.w	r3, r7, #20
 800994e:	225b      	movs	r2, #91	; 0x5b
 8009950:	721a      	strb	r2, [r3, #8]
 8009952:	f107 0314 	add.w	r3, r7, #20
 8009956:	220d      	movs	r2, #13
 8009958:	725a      	strb	r2, [r3, #9]
 800995a:	f107 0314 	add.w	r3, r7, #20
 800995e:	225d      	movs	r2, #93	; 0x5d
 8009960:	729a      	strb	r2, [r3, #10]
 8009962:	f107 0314 	add.w	r3, r7, #20
 8009966:	220e      	movs	r2, #14
 8009968:	72da      	strb	r2, [r3, #11]
 800996a:	f107 0314 	add.w	r3, r7, #20
 800996e:	227c      	movs	r2, #124	; 0x7c
 8009970:	731a      	strb	r2, [r3, #12]
 8009972:	f107 0314 	add.w	r3, r7, #20
 8009976:	2215      	movs	r2, #21
 8009978:	735a      	strb	r2, [r3, #13]
 800997a:	f107 0314 	add.w	r3, r7, #20
 800997e:	2226      	movs	r2, #38	; 0x26
 8009980:	739a      	strb	r2, [r3, #14]
 8009982:	f107 0314 	add.w	r3, r7, #20
 8009986:	2216      	movs	r2, #22
 8009988:	73da      	strb	r2, [r3, #15]
 800998a:	f107 0314 	add.w	r3, r7, #20
 800998e:	222b      	movs	r2, #43	; 0x2b
 8009990:	741a      	strb	r2, [r3, #16]
 8009992:	f107 0314 	add.w	r3, r7, #20
 8009996:	221f      	movs	r2, #31
 8009998:	745a      	strb	r2, [r3, #17]
 800999a:	f107 0314 	add.w	r3, r7, #20
 800999e:	222d      	movs	r2, #45	; 0x2d
 80099a0:	749a      	strb	r2, [r3, #18]
 80099a2:	f107 0314 	add.w	r3, r7, #20
 80099a6:	2220      	movs	r2, #32
 80099a8:	74da      	strb	r2, [r3, #19]
 80099aa:	f107 0314 	add.w	r3, r7, #20
 80099ae:	222a      	movs	r2, #42	; 0x2a
 80099b0:	751a      	strb	r2, [r3, #20]
 80099b2:	f107 0314 	add.w	r3, r7, #20
 80099b6:	2221      	movs	r2, #33	; 0x21
 80099b8:	755a      	strb	r2, [r3, #21]
 80099ba:	f107 0314 	add.w	r3, r7, #20
 80099be:	222f      	movs	r2, #47	; 0x2f
 80099c0:	759a      	strb	r2, [r3, #22]
 80099c2:	f107 0314 	add.w	r3, r7, #20
 80099c6:	2222      	movs	r2, #34	; 0x22
 80099c8:	75da      	strb	r2, [r3, #23]
 80099ca:	f107 0314 	add.w	r3, r7, #20
 80099ce:	225e      	movs	r2, #94	; 0x5e
 80099d0:	761a      	strb	r2, [r3, #24]
 80099d2:	f107 0314 	add.w	r3, r7, #20
 80099d6:	2223      	movs	r2, #35	; 0x23
 80099d8:	765a      	strb	r2, [r3, #25]
 80099da:	f107 0314 	add.w	r3, r7, #20
 80099de:	2225      	movs	r2, #37	; 0x25
 80099e0:	769a      	strb	r2, [r3, #26]
 80099e2:	f107 0314 	add.w	r3, r7, #20
 80099e6:	2224      	movs	r2, #36	; 0x24
 80099e8:	76da      	strb	r2, [r3, #27]
 80099ea:	f107 0314 	add.w	r3, r7, #20
 80099ee:	2228      	movs	r2, #40	; 0x28
 80099f0:	771a      	strb	r2, [r3, #28]
 80099f2:	f107 0314 	add.w	r3, r7, #20
 80099f6:	2226      	movs	r2, #38	; 0x26
 80099f8:	775a      	strb	r2, [r3, #29]
 80099fa:	f107 0314 	add.w	r3, r7, #20
 80099fe:	2229      	movs	r2, #41	; 0x29
 8009a00:	779a      	strb	r2, [r3, #30]
 8009a02:	f107 0314 	add.w	r3, r7, #20
 8009a06:	2227      	movs	r2, #39	; 0x27
 8009a08:	77da      	strb	r2, [r3, #31]
 8009a0a:	f107 0314 	add.w	r3, r7, #20
 8009a0e:	2225      	movs	r2, #37	; 0x25
 8009a10:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8009a14:	f107 030c 	add.w	r3, r7, #12
 8009a18:	f107 0214 	add.w	r2, r7, #20
 8009a1c:	601a      	str	r2, [r3, #0]
 8009a1e:	f107 030c 	add.w	r3, r7, #12
 8009a22:	2211      	movs	r2, #17
 8009a24:	605a      	str	r2, [r3, #4]
 8009a26:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8009a2a:	4618      	mov	r0, r3
 8009a2c:	f7f8 f95a 	bl	8001ce4 <_ZNSaISt4pairIKc10token_typeEEC1Ev>
 8009a30:	f107 0138 	add.w	r1, r7, #56	; 0x38
 8009a34:	f107 020c 	add.w	r2, r7, #12
 8009a38:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8009a3c:	9300      	str	r3, [sp, #0]
 8009a3e:	460b      	mov	r3, r1
 8009a40:	ca06      	ldmia	r2, {r1, r2}
 8009a42:	4885      	ldr	r0, [pc, #532]	; (8009c58 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 8009a44:	f7f8 f966 	bl	8001d14 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 8009a48:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8009a4c:	4618      	mov	r0, r3
 8009a4e:	f7f8 f955 	bl	8001cfc <_ZNSaISt4pairIKc10token_typeEED1Ev>

static const std::map<std::string, token_type> token_strings
{
	{"true", TOKEN_TRUE},
 8009a52:	2305      	movs	r3, #5
 8009a54:	f887 3162 	strb.w	r3, [r7, #354]	; 0x162
	{"if", TOKEN_IF},
	{"elseif", TOKEN_ELSEIF},
	{"else", TOKEN_ELSE},
	{"while", TOKEN_WHILE},
	{"end", TOKEN_END},
};
 8009a58:	f507 72b1 	add.w	r2, r7, #354	; 0x162
 8009a5c:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8009a60:	497e      	ldr	r1, [pc, #504]	; (8009c5c <_Z41__static_initialization_and_destruction_0ii+0x388>)
 8009a62:	4618      	mov	r0, r3
 8009a64:	f7f7 fb48 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"false", TOKEN_FALSE},
 8009a68:	2306      	movs	r3, #6
 8009a6a:	f887 3163 	strb.w	r3, [r7, #355]	; 0x163
};
 8009a6e:	f207 1263 	addw	r2, r7, #355	; 0x163
 8009a72:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8009a76:	331c      	adds	r3, #28
 8009a78:	4979      	ldr	r1, [pc, #484]	; (8009c60 <_Z41__static_initialization_and_destruction_0ii+0x38c>)
 8009a7a:	4618      	mov	r0, r3
 8009a7c:	f7f7 fb64 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"setup", TOKEN_SETUP},
 8009a80:	2307      	movs	r3, #7
 8009a82:	f887 3164 	strb.w	r3, [r7, #356]	; 0x164
};
 8009a86:	f507 72b2 	add.w	r2, r7, #356	; 0x164
 8009a8a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8009a8e:	3338      	adds	r3, #56	; 0x38
 8009a90:	4974      	ldr	r1, [pc, #464]	; (8009c64 <_Z41__static_initialization_and_destruction_0ii+0x390>)
 8009a92:	4618      	mov	r0, r3
 8009a94:	f7f7 fb58 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"loop", TOKEN_LOOP},
 8009a98:	2308      	movs	r3, #8
 8009a9a:	f887 3165 	strb.w	r3, [r7, #357]	; 0x165
};
 8009a9e:	f207 1265 	addw	r2, r7, #357	; 0x165
 8009aa2:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8009aa6:	3354      	adds	r3, #84	; 0x54
 8009aa8:	496f      	ldr	r1, [pc, #444]	; (8009c68 <_Z41__static_initialization_and_destruction_0ii+0x394>)
 8009aaa:	4618      	mov	r0, r3
 8009aac:	f7f7 fb24 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"finish", TOKEN_FINISH},
 8009ab0:	2309      	movs	r3, #9
 8009ab2:	f887 3166 	strb.w	r3, [r7, #358]	; 0x166
};
 8009ab6:	f507 72b3 	add.w	r2, r7, #358	; 0x166
 8009aba:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8009abe:	3370      	adds	r3, #112	; 0x70
 8009ac0:	496a      	ldr	r1, [pc, #424]	; (8009c6c <_Z41__static_initialization_and_destruction_0ii+0x398>)
 8009ac2:	4618      	mov	r0, r3
 8009ac4:	f7f7 fb68 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"if", TOKEN_IF},
 8009ac8:	2310      	movs	r3, #16
 8009aca:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167
};
 8009ace:	f207 1267 	addw	r2, r7, #359	; 0x167
 8009ad2:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8009ad6:	338c      	adds	r3, #140	; 0x8c
 8009ad8:	4965      	ldr	r1, [pc, #404]	; (8009c70 <_Z41__static_initialization_and_destruction_0ii+0x39c>)
 8009ada:	4618      	mov	r0, r3
 8009adc:	f7f7 fb84 	bl	80011e8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>
	{"elseif", TOKEN_ELSEIF},
 8009ae0:	2311      	movs	r3, #17
 8009ae2:	f887 3168 	strb.w	r3, [r7, #360]	; 0x168
};
 8009ae6:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 8009aea:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8009aee:	33a8      	adds	r3, #168	; 0xa8
 8009af0:	4960      	ldr	r1, [pc, #384]	; (8009c74 <_Z41__static_initialization_and_destruction_0ii+0x3a0>)
 8009af2:	4618      	mov	r0, r3
 8009af4:	f7f7 fb50 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"else", TOKEN_ELSE},
 8009af8:	2312      	movs	r3, #18
 8009afa:	f887 3169 	strb.w	r3, [r7, #361]	; 0x169
};
 8009afe:	f207 1269 	addw	r2, r7, #361	; 0x169
 8009b02:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8009b06:	33c4      	adds	r3, #196	; 0xc4
 8009b08:	495b      	ldr	r1, [pc, #364]	; (8009c78 <_Z41__static_initialization_and_destruction_0ii+0x3a4>)
 8009b0a:	4618      	mov	r0, r3
 8009b0c:	f7f7 faf4 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"while", TOKEN_WHILE},
 8009b10:	2313      	movs	r3, #19
 8009b12:	f887 316a 	strb.w	r3, [r7, #362]	; 0x16a
};
 8009b16:	f507 72b5 	add.w	r2, r7, #362	; 0x16a
 8009b1a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8009b1e:	33e0      	adds	r3, #224	; 0xe0
 8009b20:	4956      	ldr	r1, [pc, #344]	; (8009c7c <_Z41__static_initialization_and_destruction_0ii+0x3a8>)
 8009b22:	4618      	mov	r0, r3
 8009b24:	f7f7 fb10 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"end", TOKEN_END},
 8009b28:	2314      	movs	r3, #20
 8009b2a:	f887 316b 	strb.w	r3, [r7, #363]	; 0x16b
};
 8009b2e:	f207 126b 	addw	r2, r7, #363	; 0x16b
 8009b32:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8009b36:	33fc      	adds	r3, #252	; 0xfc
 8009b38:	4951      	ldr	r1, [pc, #324]	; (8009c80 <_Z41__static_initialization_and_destruction_0ii+0x3ac>)
 8009b3a:	4618      	mov	r0, r3
 8009b3c:	f7f7 fb7c 	bl	8001238 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>
 8009b40:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8009b44:	f107 0248 	add.w	r2, r7, #72	; 0x48
 8009b48:	601a      	str	r2, [r3, #0]
 8009b4a:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8009b4e:	220a      	movs	r2, #10
 8009b50:	605a      	str	r2, [r3, #4]
 8009b52:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8009b56:	4618      	mov	r0, r3
 8009b58:	f7f8 f969 	bl	8001e2e <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 8009b5c:	f507 71b6 	add.w	r1, r7, #364	; 0x16c
 8009b60:	f107 0240 	add.w	r2, r7, #64	; 0x40
 8009b64:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8009b68:	9300      	str	r3, [sp, #0]
 8009b6a:	460b      	mov	r3, r1
 8009b6c:	ca06      	ldmia	r2, {r1, r2}
 8009b6e:	4845      	ldr	r0, [pc, #276]	; (8009c84 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 8009b70:	f7f8 f975 	bl	8001e5e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>
 8009b74:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8009b78:	4618      	mov	r0, r3
 8009b7a:	f7f8 f964 	bl	8001e46 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 8009b7e:	f107 0448 	add.w	r4, r7, #72	; 0x48
 8009b82:	f504 748c 	add.w	r4, r4, #280	; 0x118
 8009b86:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8009b8a:	429c      	cmp	r4, r3
 8009b8c:	d004      	beq.n	8009b98 <_Z41__static_initialization_and_destruction_0ii+0x2c4>
 8009b8e:	3c1c      	subs	r4, #28
 8009b90:	4620      	mov	r0, r4
 8009b92:	f7f7 faa4 	bl	80010de <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 8009b96:	e7f6      	b.n	8009b86 <_Z41__static_initialization_and_destruction_0ii+0x2b2>
{
	{'<', {TOKEN_SMALLER_THAN, TOKEN_SMALLER_OR_EQUAL}},
	{'>', {TOKEN_GREATER_THAN, TOKEN_GREATER_OR_EQUAL}},
	{'=', {TOKEN_ASSIGN, TOKEN_EQUALS}},
	{'!', {TOKEN_EXCLAMATION, TOKEN_NOT_EQUAL}},
};
 8009b98:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 8009b9c:	2200      	movs	r2, #0
 8009b9e:	601a      	str	r2, [r3, #0]
 8009ba0:	605a      	str	r2, [r3, #4]
 8009ba2:	609a      	str	r2, [r3, #8]
 8009ba4:	233c      	movs	r3, #60	; 0x3c
 8009ba6:	f887 317c 	strb.w	r3, [r7, #380]	; 0x17c
 8009baa:	231b      	movs	r3, #27
 8009bac:	f887 317d 	strb.w	r3, [r7, #381]	; 0x17d
 8009bb0:	231c      	movs	r3, #28
 8009bb2:	f887 317e 	strb.w	r3, [r7, #382]	; 0x17e
 8009bb6:	233e      	movs	r3, #62	; 0x3e
 8009bb8:	f887 317f 	strb.w	r3, [r7, #383]	; 0x17f
 8009bbc:	2319      	movs	r3, #25
 8009bbe:	f887 3180 	strb.w	r3, [r7, #384]	; 0x180
 8009bc2:	231a      	movs	r3, #26
 8009bc4:	f887 3181 	strb.w	r3, [r7, #385]	; 0x181
 8009bc8:	233d      	movs	r3, #61	; 0x3d
 8009bca:	f887 3182 	strb.w	r3, [r7, #386]	; 0x182
 8009bce:	2318      	movs	r3, #24
 8009bd0:	f887 3183 	strb.w	r3, [r7, #387]	; 0x183
 8009bd4:	231d      	movs	r3, #29
 8009bd6:	f887 3184 	strb.w	r3, [r7, #388]	; 0x184
 8009bda:	2321      	movs	r3, #33	; 0x21
 8009bdc:	f887 3185 	strb.w	r3, [r7, #389]	; 0x185
 8009be0:	2317      	movs	r3, #23
 8009be2:	f887 3186 	strb.w	r3, [r7, #390]	; 0x186
 8009be6:	231e      	movs	r3, #30
 8009be8:	f887 3187 	strb.w	r3, [r7, #391]	; 0x187
 8009bec:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 8009bf0:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 8009bf4:	2304      	movs	r3, #4
 8009bf6:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 8009bfa:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 8009bfe:	4618      	mov	r0, r3
 8009c00:	f7f8 f95d 	bl	8001ebe <_ZNSaISt4pairIKc12double_tokenEEC1Ev>
 8009c04:	f507 72c4 	add.w	r2, r7, #392	; 0x188
 8009c08:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 8009c0c:	9300      	str	r3, [sp, #0]
 8009c0e:	4613      	mov	r3, r2
 8009c10:	f507 72ba 	add.w	r2, r7, #372	; 0x174
 8009c14:	ca06      	ldmia	r2, {r1, r2}
 8009c16:	481c      	ldr	r0, [pc, #112]	; (8009c88 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 8009c18:	f7f8 f969 	bl	8001eee <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 8009c1c:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 8009c20:	4618      	mov	r0, r3
 8009c22:	f7f8 f958 	bl	8001ed6 <_ZNSaISt4pairIKc12double_tokenEED1Ev>
static const std::map<char, double_token> token_double_chars
 8009c26:	1d3b      	adds	r3, r7, #4
 8009c28:	681b      	ldr	r3, [r3, #0]
 8009c2a:	2b00      	cmp	r3, #0
 8009c2c:	d10e      	bne.n	8009c4c <_Z41__static_initialization_and_destruction_0ii+0x378>
 8009c2e:	463b      	mov	r3, r7
 8009c30:	681b      	ldr	r3, [r3, #0]
 8009c32:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8009c36:	4293      	cmp	r3, r2
 8009c38:	d108      	bne.n	8009c4c <_Z41__static_initialization_and_destruction_0ii+0x378>
 8009c3a:	4813      	ldr	r0, [pc, #76]	; (8009c88 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 8009c3c:	f7ff fe22 	bl	8009884 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>
static const std::map<std::string, token_type> token_strings
 8009c40:	4810      	ldr	r0, [pc, #64]	; (8009c84 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 8009c42:	f7ff fe2c 	bl	800989e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
static const std::map<char, token_type> token_chars
 8009c46:	4804      	ldr	r0, [pc, #16]	; (8009c58 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 8009c48:	f7ff fe36 	bl	80098b8 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>
 8009c4c:	bf00      	nop
 8009c4e:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 8009c52:	46bd      	mov	sp, r7
 8009c54:	bd90      	pop	{r4, r7, pc}
 8009c56:	bf00      	nop
 8009c58:	20000204 	.word	0x20000204
 8009c5c:	080294c8 	.word	0x080294c8
 8009c60:	080294d0 	.word	0x080294d0
 8009c64:	080294d8 	.word	0x080294d8
 8009c68:	080294e0 	.word	0x080294e0
 8009c6c:	080294e8 	.word	0x080294e8
 8009c70:	080294f0 	.word	0x080294f0
 8009c74:	080294f4 	.word	0x080294f4
 8009c78:	080294fc 	.word	0x080294fc
 8009c7c:	08029504 	.word	0x08029504
 8009c80:	0802950c 	.word	0x0802950c
 8009c84:	2000021c 	.word	0x2000021c
 8009c88:	20000234 	.word	0x20000234

08009c8c <_GLOBAL__sub_I__ZN8ExecutorC2Ev>:
 8009c8c:	b580      	push	{r7, lr}
 8009c8e:	af00      	add	r7, sp, #0
 8009c90:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8009c94:	2001      	movs	r0, #1
 8009c96:	f7ff fe1d 	bl	80098d4 <_Z41__static_initialization_and_destruction_0ii>
 8009c9a:	bd80      	pop	{r7, pc}

08009c9c <_GLOBAL__sub_D__ZN8ExecutorC2Ev>:
 8009c9c:	b580      	push	{r7, lr}
 8009c9e:	af00      	add	r7, sp, #0
 8009ca0:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8009ca4:	2000      	movs	r0, #0
 8009ca6:	f7ff fe15 	bl	80098d4 <_Z41__static_initialization_and_destruction_0ii>
 8009caa:	bd80      	pop	{r7, pc}

08009cac <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>:
    struct _Copy_ctor_base : _Variant_storage_alias<_Types...>
 8009cac:	b580      	push	{r7, lr}
 8009cae:	b082      	sub	sp, #8
 8009cb0:	af00      	add	r7, sp, #0
 8009cb2:	6078      	str	r0, [r7, #4]
 8009cb4:	687b      	ldr	r3, [r7, #4]
 8009cb6:	4618      	mov	r0, r3
 8009cb8:	f000 fa21 	bl	800a0fe <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>
 8009cbc:	687b      	ldr	r3, [r7, #4]
 8009cbe:	4618      	mov	r0, r3
 8009cc0:	3708      	adds	r7, #8
 8009cc2:	46bd      	mov	sp, r7
 8009cc4:	bd80      	pop	{r7, pc}

08009cc6 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>:
    struct _Move_ctor_base : _Copy_ctor_alias<_Types...>
 8009cc6:	b580      	push	{r7, lr}
 8009cc8:	b082      	sub	sp, #8
 8009cca:	af00      	add	r7, sp, #0
 8009ccc:	6078      	str	r0, [r7, #4]
 8009cce:	687b      	ldr	r3, [r7, #4]
 8009cd0:	4618      	mov	r0, r3
 8009cd2:	f7ff ffeb 	bl	8009cac <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>
 8009cd6:	687b      	ldr	r3, [r7, #4]
 8009cd8:	4618      	mov	r0, r3
 8009cda:	3708      	adds	r7, #8
 8009cdc:	46bd      	mov	sp, r7
 8009cde:	bd80      	pop	{r7, pc}

08009ce0 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>:
    struct _Copy_assign_base : _Move_ctor_alias<_Types...>
 8009ce0:	b580      	push	{r7, lr}
 8009ce2:	b082      	sub	sp, #8
 8009ce4:	af00      	add	r7, sp, #0
 8009ce6:	6078      	str	r0, [r7, #4]
 8009ce8:	687b      	ldr	r3, [r7, #4]
 8009cea:	4618      	mov	r0, r3
 8009cec:	f7ff ffeb 	bl	8009cc6 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>
 8009cf0:	687b      	ldr	r3, [r7, #4]
 8009cf2:	4618      	mov	r0, r3
 8009cf4:	3708      	adds	r7, #8
 8009cf6:	46bd      	mov	sp, r7
 8009cf8:	bd80      	pop	{r7, pc}

08009cfa <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>:
    struct _Move_assign_base : _Copy_assign_alias<_Types...>
 8009cfa:	b580      	push	{r7, lr}
 8009cfc:	b082      	sub	sp, #8
 8009cfe:	af00      	add	r7, sp, #0
 8009d00:	6078      	str	r0, [r7, #4]
 8009d02:	687b      	ldr	r3, [r7, #4]
 8009d04:	4618      	mov	r0, r3
 8009d06:	f7ff ffeb 	bl	8009ce0 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>
 8009d0a:	687b      	ldr	r3, [r7, #4]
 8009d0c:	4618      	mov	r0, r3
 8009d0e:	3708      	adds	r7, #8
 8009d10:	46bd      	mov	sp, r7
 8009d12:	bd80      	pop	{r7, pc}

08009d14 <_ZNSt8__detail9__variant13_Variant_baseIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>:
    struct _Variant_base : _Move_assign_alias<_Types...>
 8009d14:	b580      	push	{r7, lr}
 8009d16:	b082      	sub	sp, #8
 8009d18:	af00      	add	r7, sp, #0
 8009d1a:	6078      	str	r0, [r7, #4]
 8009d1c:	687b      	ldr	r3, [r7, #4]
 8009d1e:	4618      	mov	r0, r3
 8009d20:	f7ff ffeb 	bl	8009cfa <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>
 8009d24:	687b      	ldr	r3, [r7, #4]
 8009d26:	4618      	mov	r0, r3
 8009d28:	3708      	adds	r7, #8
 8009d2a:	46bd      	mov	sp, r7
 8009d2c:	bd80      	pop	{r7, pc}

08009d2e <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>:
      ~variant() = default;
 8009d2e:	b580      	push	{r7, lr}
 8009d30:	b082      	sub	sp, #8
 8009d32:	af00      	add	r7, sp, #0
 8009d34:	6078      	str	r0, [r7, #4]
 8009d36:	687b      	ldr	r3, [r7, #4]
 8009d38:	4618      	mov	r0, r3
 8009d3a:	f7ff ffeb 	bl	8009d14 <_ZNSt8__detail9__variant13_Variant_baseIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>
 8009d3e:	687b      	ldr	r3, [r7, #4]
 8009d40:	4618      	mov	r0, r3
 8009d42:	3708      	adds	r7, #8
 8009d44:	46bd      	mov	sp, r7
 8009d46:	bd80      	pop	{r7, pc}

08009d48 <_ZN17Primal_expressionD1Ev>:
#include <Expression.h>

Primal_expression::~Primal_expression()
 8009d48:	b590      	push	{r4, r7, lr}
 8009d4a:	b083      	sub	sp, #12
 8009d4c:	af00      	add	r7, sp, #0
 8009d4e:	6078      	str	r0, [r7, #4]
{
	if(std::holds_alternative<Variable*>(content))
 8009d50:	687b      	ldr	r3, [r7, #4]
 8009d52:	3304      	adds	r3, #4
 8009d54:	4618      	mov	r0, r3
 8009d56:	f000 f9f1 	bl	800a13c <_ZSt17holds_alternativeIP8VariableJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES1_P13Function_callEEbRKSt7variantIJDpT0_EE>
 8009d5a:	4603      	mov	r3, r0
 8009d5c:	2b00      	cmp	r3, #0
 8009d5e:	d010      	beq.n	8009d82 <_ZN17Primal_expressionD1Ev+0x3a>
	{
		delete std::get<Variable*>(content);
 8009d60:	687b      	ldr	r3, [r7, #4]
 8009d62:	3304      	adds	r3, #4
 8009d64:	4618      	mov	r0, r3
 8009d66:	f000 f9fa 	bl	800a15e <_ZSt3getIP8VariableJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES1_P13Function_callEERT_RSt7variantIJDpT0_EE>
 8009d6a:	4603      	mov	r3, r0
 8009d6c:	681c      	ldr	r4, [r3, #0]
 8009d6e:	2c00      	cmp	r4, #0
 8009d70:	d01f      	beq.n	8009db2 <_ZN17Primal_expressionD1Ev+0x6a>
 8009d72:	4620      	mov	r0, r4
 8009d74:	f00c fe56 	bl	8016a24 <_ZN8VariableD1Ev>
 8009d78:	2120      	movs	r1, #32
 8009d7a:	4620      	mov	r0, r4
 8009d7c:	f019 fbaa 	bl	80234d4 <_ZdlPvj>
 8009d80:	e017      	b.n	8009db2 <_ZN17Primal_expressionD1Ev+0x6a>
	}
	else if(std::holds_alternative<Function_call*>(content))
 8009d82:	687b      	ldr	r3, [r7, #4]
 8009d84:	3304      	adds	r3, #4
 8009d86:	4618      	mov	r0, r3
 8009d88:	f000 f9f5 	bl	800a176 <_ZSt17holds_alternativeIP13Function_callJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableS1_EEbRKSt7variantIJDpT0_EE>
 8009d8c:	4603      	mov	r3, r0
 8009d8e:	2b00      	cmp	r3, #0
 8009d90:	d00f      	beq.n	8009db2 <_ZN17Primal_expressionD1Ev+0x6a>
	{
		delete std::get<Function_call*>(content);
 8009d92:	687b      	ldr	r3, [r7, #4]
 8009d94:	3304      	adds	r3, #4
 8009d96:	4618      	mov	r0, r3
 8009d98:	f000 f9fe 	bl	800a198 <_ZSt3getIP13Function_callJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableS1_EERT_RSt7variantIJDpT0_EE>
 8009d9c:	4603      	mov	r3, r0
 8009d9e:	681c      	ldr	r4, [r3, #0]
 8009da0:	2c00      	cmp	r4, #0
 8009da2:	d006      	beq.n	8009db2 <_ZN17Primal_expressionD1Ev+0x6a>
 8009da4:	4620      	mov	r0, r4
 8009da6:	f00c fdfa 	bl	801699e <_ZN13Function_callD1Ev>
 8009daa:	212c      	movs	r1, #44	; 0x2c
 8009dac:	4620      	mov	r0, r4
 8009dae:	f019 fb91 	bl	80234d4 <_ZdlPvj>
Primal_expression::~Primal_expression()
 8009db2:	687b      	ldr	r3, [r7, #4]
 8009db4:	3304      	adds	r3, #4
 8009db6:	4618      	mov	r0, r3
 8009db8:	f7ff ffb9 	bl	8009d2e <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>
	}
}
 8009dbc:	687b      	ldr	r3, [r7, #4]
 8009dbe:	4618      	mov	r0, r3
 8009dc0:	370c      	adds	r7, #12
 8009dc2:	46bd      	mov	sp, r7
 8009dc4:	bd90      	pop	{r4, r7, pc}

08009dc6 <_ZN19Priority_expressionD1Ev>:

Priority_expression::~Priority_expression()
 8009dc6:	b590      	push	{r4, r7, lr}
 8009dc8:	b083      	sub	sp, #12
 8009dca:	af00      	add	r7, sp, #0
 8009dcc:	6078      	str	r0, [r7, #4]
{
	if(std::holds_alternative<Expression*>(exp))
 8009dce:	687b      	ldr	r3, [r7, #4]
 8009dd0:	4618      	mov	r0, r3
 8009dd2:	f000 fa00 	bl	800a1d6 <_ZSt17holds_alternativeIP10ExpressionJP17Primal_expressionS1_EEbRKSt7variantIJDpT0_EE>
 8009dd6:	4603      	mov	r3, r0
 8009dd8:	2b00      	cmp	r3, #0
 8009dda:	d00f      	beq.n	8009dfc <_ZN19Priority_expressionD1Ev+0x36>
	{
		delete std::get<Expression*>(exp);
 8009ddc:	687b      	ldr	r3, [r7, #4]
 8009dde:	4618      	mov	r0, r3
 8009de0:	f000 fa0a 	bl	800a1f8 <_ZSt3getIP10ExpressionJP17Primal_expressionS1_EERT_RSt7variantIJDpT0_EE>
 8009de4:	4603      	mov	r3, r0
 8009de6:	681c      	ldr	r4, [r3, #0]
 8009de8:	2c00      	cmp	r4, #0
 8009dea:	d016      	beq.n	8009e1a <_ZN19Priority_expressionD1Ev+0x54>
 8009dec:	4620      	mov	r0, r4
 8009dee:	f000 f948 	bl	800a082 <_ZN10ExpressionD1Ev>
 8009df2:	2114      	movs	r1, #20
 8009df4:	4620      	mov	r0, r4
 8009df6:	f019 fb6d 	bl	80234d4 <_ZdlPvj>
 8009dfa:	e00e      	b.n	8009e1a <_ZN19Priority_expressionD1Ev+0x54>
	}
	else
	{
		delete std::get<Primal_expression*>(exp);
 8009dfc:	687b      	ldr	r3, [r7, #4]
 8009dfe:	4618      	mov	r0, r3
 8009e00:	f000 fa06 	bl	800a210 <_ZSt3getIP17Primal_expressionJS1_P10ExpressionEERT_RSt7variantIJDpT0_EE>
 8009e04:	4603      	mov	r3, r0
 8009e06:	681c      	ldr	r4, [r3, #0]
 8009e08:	2c00      	cmp	r4, #0
 8009e0a:	d006      	beq.n	8009e1a <_ZN19Priority_expressionD1Ev+0x54>
 8009e0c:	4620      	mov	r0, r4
 8009e0e:	f7ff ff9b 	bl	8009d48 <_ZN17Primal_expressionD1Ev>
 8009e12:	2120      	movs	r1, #32
 8009e14:	4620      	mov	r0, r4
 8009e16:	f019 fb5d 	bl	80234d4 <_ZdlPvj>
	}
}
 8009e1a:	687b      	ldr	r3, [r7, #4]
 8009e1c:	4618      	mov	r0, r3
 8009e1e:	370c      	adds	r7, #12
 8009e20:	46bd      	mov	sp, r7
 8009e22:	bd90      	pop	{r4, r7, pc}

08009e24 <_ZN16Unary_expressionD1Ev>:

Unary_expression::~Unary_expression()
 8009e24:	b590      	push	{r4, r7, lr}
 8009e26:	b083      	sub	sp, #12
 8009e28:	af00      	add	r7, sp, #0
 8009e2a:	6078      	str	r0, [r7, #4]
{
	delete prior_exp;
 8009e2c:	687b      	ldr	r3, [r7, #4]
 8009e2e:	681c      	ldr	r4, [r3, #0]
 8009e30:	2c00      	cmp	r4, #0
 8009e32:	d006      	beq.n	8009e42 <_ZN16Unary_expressionD1Ev+0x1e>
 8009e34:	4620      	mov	r0, r4
 8009e36:	f7ff ffc6 	bl	8009dc6 <_ZN19Priority_expressionD1Ev>
 8009e3a:	2108      	movs	r1, #8
 8009e3c:	4620      	mov	r0, r4
 8009e3e:	f019 fb49 	bl	80234d4 <_ZdlPvj>
}
 8009e42:	687b      	ldr	r3, [r7, #4]
 8009e44:	4618      	mov	r0, r3
 8009e46:	370c      	adds	r7, #12
 8009e48:	46bd      	mov	sp, r7
 8009e4a:	bd90      	pop	{r4, r7, pc}

08009e4c <_ZN16Power_expressionD1Ev>:

Power_expression::~Power_expression()
 8009e4c:	b590      	push	{r4, r7, lr}
 8009e4e:	b083      	sub	sp, #12
 8009e50:	af00      	add	r7, sp, #0
 8009e52:	6078      	str	r0, [r7, #4]
{
	delete left_un_exp;
 8009e54:	687b      	ldr	r3, [r7, #4]
 8009e56:	681c      	ldr	r4, [r3, #0]
 8009e58:	2c00      	cmp	r4, #0
 8009e5a:	d006      	beq.n	8009e6a <_ZN16Power_expressionD1Ev+0x1e>
 8009e5c:	4620      	mov	r0, r4
 8009e5e:	f7ff ffe1 	bl	8009e24 <_ZN16Unary_expressionD1Ev>
 8009e62:	2108      	movs	r1, #8
 8009e64:	4620      	mov	r0, r4
 8009e66:	f019 fb35 	bl	80234d4 <_ZdlPvj>
	delete right_un_exp;
 8009e6a:	687b      	ldr	r3, [r7, #4]
 8009e6c:	685c      	ldr	r4, [r3, #4]
 8009e6e:	2c00      	cmp	r4, #0
 8009e70:	d006      	beq.n	8009e80 <_ZN16Power_expressionD1Ev+0x34>
 8009e72:	4620      	mov	r0, r4
 8009e74:	f7ff ffd6 	bl	8009e24 <_ZN16Unary_expressionD1Ev>
 8009e78:	2108      	movs	r1, #8
 8009e7a:	4620      	mov	r0, r4
 8009e7c:	f019 fb2a 	bl	80234d4 <_ZdlPvj>
}
 8009e80:	687b      	ldr	r3, [r7, #4]
 8009e82:	4618      	mov	r0, r3
 8009e84:	370c      	adds	r7, #12
 8009e86:	46bd      	mov	sp, r7
 8009e88:	bd90      	pop	{r4, r7, pc}

08009e8a <_ZN19Multiply_expressionD1Ev>:

Multiply_expression::~Multiply_expression()
 8009e8a:	b590      	push	{r4, r7, lr}
 8009e8c:	b087      	sub	sp, #28
 8009e8e:	af00      	add	r7, sp, #0
 8009e90:	6078      	str	r0, [r7, #4]
{
	for(Power_expression* exp : pow_exps)
 8009e92:	687b      	ldr	r3, [r7, #4]
 8009e94:	617b      	str	r3, [r7, #20]
 8009e96:	6978      	ldr	r0, [r7, #20]
 8009e98:	f000 f9fc 	bl	800a294 <_ZNSt6vectorIP16Power_expressionSaIS1_EE5beginEv>
 8009e9c:	4603      	mov	r3, r0
 8009e9e:	60fb      	str	r3, [r7, #12]
 8009ea0:	6978      	ldr	r0, [r7, #20]
 8009ea2:	f000 fa07 	bl	800a2b4 <_ZNSt6vectorIP16Power_expressionSaIS1_EE3endEv>
 8009ea6:	4603      	mov	r3, r0
 8009ea8:	60bb      	str	r3, [r7, #8]
 8009eaa:	f107 0208 	add.w	r2, r7, #8
 8009eae:	f107 030c 	add.w	r3, r7, #12
 8009eb2:	4611      	mov	r1, r2
 8009eb4:	4618      	mov	r0, r3
 8009eb6:	f000 fa0e 	bl	800a2d6 <_ZN9__gnu_cxxneIPP16Power_expressionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
 8009eba:	4603      	mov	r3, r0
 8009ebc:	2b00      	cmp	r3, #0
 8009ebe:	d017      	beq.n	8009ef0 <_ZN19Multiply_expressionD1Ev+0x66>
 8009ec0:	f107 030c 	add.w	r3, r7, #12
 8009ec4:	4618      	mov	r0, r3
 8009ec6:	f000 fa2e 	bl	800a326 <_ZNK9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEEdeEv>
 8009eca:	4603      	mov	r3, r0
 8009ecc:	681b      	ldr	r3, [r3, #0]
 8009ece:	613b      	str	r3, [r7, #16]
	{
		delete exp;
 8009ed0:	693c      	ldr	r4, [r7, #16]
 8009ed2:	2c00      	cmp	r4, #0
 8009ed4:	d006      	beq.n	8009ee4 <_ZN19Multiply_expressionD1Ev+0x5a>
 8009ed6:	4620      	mov	r0, r4
 8009ed8:	f7ff ffb8 	bl	8009e4c <_ZN16Power_expressionD1Ev>
 8009edc:	2108      	movs	r1, #8
 8009ede:	4620      	mov	r0, r4
 8009ee0:	f019 faf8 	bl	80234d4 <_ZdlPvj>
	for(Power_expression* exp : pow_exps)
 8009ee4:	f107 030c 	add.w	r3, r7, #12
 8009ee8:	4618      	mov	r0, r3
 8009eea:	f000 fa0c 	bl	800a306 <_ZN9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEEppEv>
 8009eee:	e7dc      	b.n	8009eaa <_ZN19Multiply_expressionD1Ev+0x20>
Multiply_expression::~Multiply_expression()
 8009ef0:	687b      	ldr	r3, [r7, #4]
 8009ef2:	330c      	adds	r3, #12
 8009ef4:	4618      	mov	r0, r3
 8009ef6:	f000 f9b2 	bl	800a25e <_ZNSt6vectorI13mult_operatorSaIS0_EED1Ev>
 8009efa:	687b      	ldr	r3, [r7, #4]
 8009efc:	4618      	mov	r0, r3
 8009efe:	f000 f993 	bl	800a228 <_ZNSt6vectorIP16Power_expressionSaIS1_EED1Ev>
	}
}
 8009f02:	687b      	ldr	r3, [r7, #4]
 8009f04:	4618      	mov	r0, r3
 8009f06:	371c      	adds	r7, #28
 8009f08:	46bd      	mov	sp, r7
 8009f0a:	bd90      	pop	{r4, r7, pc}

08009f0c <_ZN14Sum_expressionD1Ev>:

Sum_expression::~Sum_expression()
 8009f0c:	b590      	push	{r4, r7, lr}
 8009f0e:	b087      	sub	sp, #28
 8009f10:	af00      	add	r7, sp, #0
 8009f12:	6078      	str	r0, [r7, #4]
{
	for(Multiply_expression* exp : mult_exps)
 8009f14:	687b      	ldr	r3, [r7, #4]
 8009f16:	617b      	str	r3, [r7, #20]
 8009f18:	6978      	ldr	r0, [r7, #20]
 8009f1a:	f000 fa46 	bl	800a3aa <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE5beginEv>
 8009f1e:	4603      	mov	r3, r0
 8009f20:	60fb      	str	r3, [r7, #12]
 8009f22:	6978      	ldr	r0, [r7, #20]
 8009f24:	f000 fa51 	bl	800a3ca <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE3endEv>
 8009f28:	4603      	mov	r3, r0
 8009f2a:	60bb      	str	r3, [r7, #8]
 8009f2c:	f107 0208 	add.w	r2, r7, #8
 8009f30:	f107 030c 	add.w	r3, r7, #12
 8009f34:	4611      	mov	r1, r2
 8009f36:	4618      	mov	r0, r3
 8009f38:	f000 fa58 	bl	800a3ec <_ZN9__gnu_cxxneIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
 8009f3c:	4603      	mov	r3, r0
 8009f3e:	2b00      	cmp	r3, #0
 8009f40:	d017      	beq.n	8009f72 <_ZN14Sum_expressionD1Ev+0x66>
 8009f42:	f107 030c 	add.w	r3, r7, #12
 8009f46:	4618      	mov	r0, r3
 8009f48:	f000 fa78 	bl	800a43c <_ZNK9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEdeEv>
 8009f4c:	4603      	mov	r3, r0
 8009f4e:	681b      	ldr	r3, [r3, #0]
 8009f50:	613b      	str	r3, [r7, #16]
	{
		delete exp;
 8009f52:	693c      	ldr	r4, [r7, #16]
 8009f54:	2c00      	cmp	r4, #0
 8009f56:	d006      	beq.n	8009f66 <_ZN14Sum_expressionD1Ev+0x5a>
 8009f58:	4620      	mov	r0, r4
 8009f5a:	f7ff ff96 	bl	8009e8a <_ZN19Multiply_expressionD1Ev>
 8009f5e:	2118      	movs	r1, #24
 8009f60:	4620      	mov	r0, r4
 8009f62:	f019 fab7 	bl	80234d4 <_ZdlPvj>
	for(Multiply_expression* exp : mult_exps)
 8009f66:	f107 030c 	add.w	r3, r7, #12
 8009f6a:	4618      	mov	r0, r3
 8009f6c:	f000 fa56 	bl	800a41c <_ZN9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEppEv>
 8009f70:	e7dc      	b.n	8009f2c <_ZN14Sum_expressionD1Ev+0x20>
Sum_expression::~Sum_expression()
 8009f72:	687b      	ldr	r3, [r7, #4]
 8009f74:	330c      	adds	r3, #12
 8009f76:	4618      	mov	r0, r3
 8009f78:	f000 f9fc 	bl	800a374 <_ZNSt6vectorI12sum_operatorSaIS0_EED1Ev>
 8009f7c:	687b      	ldr	r3, [r7, #4]
 8009f7e:	4618      	mov	r0, r3
 8009f80:	f000 f9dd 	bl	800a33e <_ZNSt6vectorIP19Multiply_expressionSaIS1_EED1Ev>
	}
}
 8009f84:	687b      	ldr	r3, [r7, #4]
 8009f86:	4618      	mov	r0, r3
 8009f88:	371c      	adds	r7, #28
 8009f8a:	46bd      	mov	sp, r7
 8009f8c:	bd90      	pop	{r4, r7, pc}

08009f8e <_ZN19Relation_expressionD1Ev>:

Relation_expression::~Relation_expression()
 8009f8e:	b590      	push	{r4, r7, lr}
 8009f90:	b083      	sub	sp, #12
 8009f92:	af00      	add	r7, sp, #0
 8009f94:	6078      	str	r0, [r7, #4]
{
	delete left_sum_exp;
 8009f96:	687b      	ldr	r3, [r7, #4]
 8009f98:	681c      	ldr	r4, [r3, #0]
 8009f9a:	2c00      	cmp	r4, #0
 8009f9c:	d006      	beq.n	8009fac <_ZN19Relation_expressionD1Ev+0x1e>
 8009f9e:	4620      	mov	r0, r4
 8009fa0:	f7ff ffb4 	bl	8009f0c <_ZN14Sum_expressionD1Ev>
 8009fa4:	2118      	movs	r1, #24
 8009fa6:	4620      	mov	r0, r4
 8009fa8:	f019 fa94 	bl	80234d4 <_ZdlPvj>
	delete right_sum_exp;
 8009fac:	687b      	ldr	r3, [r7, #4]
 8009fae:	685c      	ldr	r4, [r3, #4]
 8009fb0:	2c00      	cmp	r4, #0
 8009fb2:	d006      	beq.n	8009fc2 <_ZN19Relation_expressionD1Ev+0x34>
 8009fb4:	4620      	mov	r0, r4
 8009fb6:	f7ff ffa9 	bl	8009f0c <_ZN14Sum_expressionD1Ev>
 8009fba:	2118      	movs	r1, #24
 8009fbc:	4620      	mov	r0, r4
 8009fbe:	f019 fa89 	bl	80234d4 <_ZdlPvj>
}
 8009fc2:	687b      	ldr	r3, [r7, #4]
 8009fc4:	4618      	mov	r0, r3
 8009fc6:	370c      	adds	r7, #12
 8009fc8:	46bd      	mov	sp, r7
 8009fca:	bd90      	pop	{r4, r7, pc}

08009fcc <_ZN18Compare_expressionD1Ev>:

Compare_expression::~Compare_expression()
 8009fcc:	b590      	push	{r4, r7, lr}
 8009fce:	b083      	sub	sp, #12
 8009fd0:	af00      	add	r7, sp, #0
 8009fd2:	6078      	str	r0, [r7, #4]
{
	delete left_rel_exp;
 8009fd4:	687b      	ldr	r3, [r7, #4]
 8009fd6:	681c      	ldr	r4, [r3, #0]
 8009fd8:	2c00      	cmp	r4, #0
 8009fda:	d006      	beq.n	8009fea <_ZN18Compare_expressionD1Ev+0x1e>
 8009fdc:	4620      	mov	r0, r4
 8009fde:	f7ff ffd6 	bl	8009f8e <_ZN19Relation_expressionD1Ev>
 8009fe2:	210c      	movs	r1, #12
 8009fe4:	4620      	mov	r0, r4
 8009fe6:	f019 fa75 	bl	80234d4 <_ZdlPvj>
	delete right_rel_exp;
 8009fea:	687b      	ldr	r3, [r7, #4]
 8009fec:	685c      	ldr	r4, [r3, #4]
 8009fee:	2c00      	cmp	r4, #0
 8009ff0:	d006      	beq.n	800a000 <_ZN18Compare_expressionD1Ev+0x34>
 8009ff2:	4620      	mov	r0, r4
 8009ff4:	f7ff ffcb 	bl	8009f8e <_ZN19Relation_expressionD1Ev>
 8009ff8:	210c      	movs	r1, #12
 8009ffa:	4620      	mov	r0, r4
 8009ffc:	f019 fa6a 	bl	80234d4 <_ZdlPvj>
}
 800a000:	687b      	ldr	r3, [r7, #4]
 800a002:	4618      	mov	r0, r3
 800a004:	370c      	adds	r7, #12
 800a006:	46bd      	mov	sp, r7
 800a008:	bd90      	pop	{r4, r7, pc}

0800a00a <_ZN14And_expressionD1Ev>:

And_expression::~And_expression()
 800a00a:	b590      	push	{r4, r7, lr}
 800a00c:	b087      	sub	sp, #28
 800a00e:	af00      	add	r7, sp, #0
 800a010:	6078      	str	r0, [r7, #4]
{
	for(Compare_expression* exp : comp_exps)
 800a012:	687b      	ldr	r3, [r7, #4]
 800a014:	617b      	str	r3, [r7, #20]
 800a016:	6978      	ldr	r0, [r7, #20]
 800a018:	f000 fa37 	bl	800a48a <_ZNSt6vectorIP18Compare_expressionSaIS1_EE5beginEv>
 800a01c:	4603      	mov	r3, r0
 800a01e:	60fb      	str	r3, [r7, #12]
 800a020:	6978      	ldr	r0, [r7, #20]
 800a022:	f000 fa42 	bl	800a4aa <_ZNSt6vectorIP18Compare_expressionSaIS1_EE3endEv>
 800a026:	4603      	mov	r3, r0
 800a028:	60bb      	str	r3, [r7, #8]
 800a02a:	f107 0208 	add.w	r2, r7, #8
 800a02e:	f107 030c 	add.w	r3, r7, #12
 800a032:	4611      	mov	r1, r2
 800a034:	4618      	mov	r0, r3
 800a036:	f000 fa49 	bl	800a4cc <_ZN9__gnu_cxxneIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
 800a03a:	4603      	mov	r3, r0
 800a03c:	2b00      	cmp	r3, #0
 800a03e:	d017      	beq.n	800a070 <_ZN14And_expressionD1Ev+0x66>
 800a040:	f107 030c 	add.w	r3, r7, #12
 800a044:	4618      	mov	r0, r3
 800a046:	f000 fa69 	bl	800a51c <_ZNK9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEdeEv>
 800a04a:	4603      	mov	r3, r0
 800a04c:	681b      	ldr	r3, [r3, #0]
 800a04e:	613b      	str	r3, [r7, #16]
	{
		delete exp;
 800a050:	693c      	ldr	r4, [r7, #16]
 800a052:	2c00      	cmp	r4, #0
 800a054:	d006      	beq.n	800a064 <_ZN14And_expressionD1Ev+0x5a>
 800a056:	4620      	mov	r0, r4
 800a058:	f7ff ffb8 	bl	8009fcc <_ZN18Compare_expressionD1Ev>
 800a05c:	210c      	movs	r1, #12
 800a05e:	4620      	mov	r0, r4
 800a060:	f019 fa38 	bl	80234d4 <_ZdlPvj>
	for(Compare_expression* exp : comp_exps)
 800a064:	f107 030c 	add.w	r3, r7, #12
 800a068:	4618      	mov	r0, r3
 800a06a:	f000 fa47 	bl	800a4fc <_ZN9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEppEv>
 800a06e:	e7dc      	b.n	800a02a <_ZN14And_expressionD1Ev+0x20>
And_expression::~And_expression()
 800a070:	687b      	ldr	r3, [r7, #4]
 800a072:	4618      	mov	r0, r3
 800a074:	f000 f9ee 	bl	800a454 <_ZNSt6vectorIP18Compare_expressionSaIS1_EED1Ev>
	}
}
 800a078:	687b      	ldr	r3, [r7, #4]
 800a07a:	4618      	mov	r0, r3
 800a07c:	371c      	adds	r7, #28
 800a07e:	46bd      	mov	sp, r7
 800a080:	bd90      	pop	{r4, r7, pc}

0800a082 <_ZN10ExpressionD1Ev>:

Expression::~Expression()
 800a082:	b590      	push	{r4, r7, lr}
 800a084:	b087      	sub	sp, #28
 800a086:	af00      	add	r7, sp, #0
 800a088:	6078      	str	r0, [r7, #4]
{
	for(And_expression* exp : and_exps)
 800a08a:	687b      	ldr	r3, [r7, #4]
 800a08c:	3308      	adds	r3, #8
 800a08e:	617b      	str	r3, [r7, #20]
 800a090:	6978      	ldr	r0, [r7, #20]
 800a092:	f000 fa6a 	bl	800a56a <_ZNSt6vectorIP14And_expressionSaIS1_EE5beginEv>
 800a096:	4603      	mov	r3, r0
 800a098:	60fb      	str	r3, [r7, #12]
 800a09a:	6978      	ldr	r0, [r7, #20]
 800a09c:	f000 fa75 	bl	800a58a <_ZNSt6vectorIP14And_expressionSaIS1_EE3endEv>
 800a0a0:	4603      	mov	r3, r0
 800a0a2:	60bb      	str	r3, [r7, #8]
 800a0a4:	f107 0208 	add.w	r2, r7, #8
 800a0a8:	f107 030c 	add.w	r3, r7, #12
 800a0ac:	4611      	mov	r1, r2
 800a0ae:	4618      	mov	r0, r3
 800a0b0:	f000 fa7c 	bl	800a5ac <_ZN9__gnu_cxxneIPP14And_expressionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
 800a0b4:	4603      	mov	r3, r0
 800a0b6:	2b00      	cmp	r3, #0
 800a0b8:	d017      	beq.n	800a0ea <_ZN10ExpressionD1Ev+0x68>
 800a0ba:	f107 030c 	add.w	r3, r7, #12
 800a0be:	4618      	mov	r0, r3
 800a0c0:	f000 fa9c 	bl	800a5fc <_ZNK9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEEdeEv>
 800a0c4:	4603      	mov	r3, r0
 800a0c6:	681b      	ldr	r3, [r3, #0]
 800a0c8:	613b      	str	r3, [r7, #16]
	{
		delete exp;
 800a0ca:	693c      	ldr	r4, [r7, #16]
 800a0cc:	2c00      	cmp	r4, #0
 800a0ce:	d006      	beq.n	800a0de <_ZN10ExpressionD1Ev+0x5c>
 800a0d0:	4620      	mov	r0, r4
 800a0d2:	f7ff ff9a 	bl	800a00a <_ZN14And_expressionD1Ev>
 800a0d6:	210c      	movs	r1, #12
 800a0d8:	4620      	mov	r0, r4
 800a0da:	f019 f9fb 	bl	80234d4 <_ZdlPvj>
	for(And_expression* exp : and_exps)
 800a0de:	f107 030c 	add.w	r3, r7, #12
 800a0e2:	4618      	mov	r0, r3
 800a0e4:	f000 fa7a 	bl	800a5dc <_ZN9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEEppEv>
 800a0e8:	e7dc      	b.n	800a0a4 <_ZN10ExpressionD1Ev+0x22>
Expression::~Expression()
 800a0ea:	687b      	ldr	r3, [r7, #4]
 800a0ec:	3308      	adds	r3, #8
 800a0ee:	4618      	mov	r0, r3
 800a0f0:	f000 fa20 	bl	800a534 <_ZNSt6vectorIP14And_expressionSaIS1_EED1Ev>
	}
}
 800a0f4:	687b      	ldr	r3, [r7, #4]
 800a0f6:	4618      	mov	r0, r3
 800a0f8:	371c      	adds	r7, #28
 800a0fa:	46bd      	mov	sp, r7
 800a0fc:	bd90      	pop	{r4, r7, pc}

0800a0fe <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>:
      ~_Variant_storage()
 800a0fe:	b580      	push	{r7, lr}
 800a100:	b082      	sub	sp, #8
 800a102:	af00      	add	r7, sp, #0
 800a104:	6078      	str	r0, [r7, #4]
      { _M_reset(); }
 800a106:	6878      	ldr	r0, [r7, #4]
 800a108:	f000 fa84 	bl	800a614 <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE8_M_resetEv>
 800a10c:	687b      	ldr	r3, [r7, #4]
 800a10e:	4618      	mov	r0, r3
 800a110:	3708      	adds	r7, #8
 800a112:	46bd      	mov	sp, r7
 800a114:	bd80      	pop	{r7, pc}

0800a116 <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>:
      constexpr size_t index() const noexcept
 800a116:	b480      	push	{r7}
 800a118:	b083      	sub	sp, #12
 800a11a:	af00      	add	r7, sp, #0
 800a11c:	6078      	str	r0, [r7, #4]
	if (this->_M_index ==
 800a11e:	687b      	ldr	r3, [r7, #4]
 800a120:	7e1b      	ldrb	r3, [r3, #24]
 800a122:	2bff      	cmp	r3, #255	; 0xff
 800a124:	d102      	bne.n	800a12c <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv+0x16>
	  return variant_npos;
 800a126:	f04f 33ff 	mov.w	r3, #4294967295
 800a12a:	e001      	b.n	800a130 <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv+0x1a>
	return this->_M_index;
 800a12c:	687b      	ldr	r3, [r7, #4]
 800a12e:	7e1b      	ldrb	r3, [r3, #24]
      }
 800a130:	4618      	mov	r0, r3
 800a132:	370c      	adds	r7, #12
 800a134:	46bd      	mov	sp, r7
 800a136:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a13a:	4770      	bx	lr

0800a13c <_ZSt17holds_alternativeIP8VariableJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES1_P13Function_callEEbRKSt7variantIJDpT0_EE>:
    holds_alternative(const variant<_Types...>& __v) noexcept
 800a13c:	b580      	push	{r7, lr}
 800a13e:	b082      	sub	sp, #8
 800a140:	af00      	add	r7, sp, #0
 800a142:	6078      	str	r0, [r7, #4]
      return __v.index() == __detail::__variant::__index_of_v<_Tp, _Types...>;
 800a144:	6878      	ldr	r0, [r7, #4]
 800a146:	f7ff ffe6 	bl	800a116 <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 800a14a:	4603      	mov	r3, r0
 800a14c:	2b04      	cmp	r3, #4
 800a14e:	bf0c      	ite	eq
 800a150:	2301      	moveq	r3, #1
 800a152:	2300      	movne	r3, #0
 800a154:	b2db      	uxtb	r3, r3
    }
 800a156:	4618      	mov	r0, r3
 800a158:	3708      	adds	r7, #8
 800a15a:	46bd      	mov	sp, r7
 800a15c:	bd80      	pop	{r7, pc}

0800a15e <_ZSt3getIP8VariableJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES1_P13Function_callEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 800a15e:	b580      	push	{r7, lr}
 800a160:	b082      	sub	sp, #8
 800a162:	af00      	add	r7, sp, #0
 800a164:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 800a166:	6878      	ldr	r0, [r7, #4]
 800a168:	f000 facc 	bl	800a704 <_ZSt3getILj4EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 800a16c:	4603      	mov	r3, r0
    }
 800a16e:	4618      	mov	r0, r3
 800a170:	3708      	adds	r7, #8
 800a172:	46bd      	mov	sp, r7
 800a174:	bd80      	pop	{r7, pc}

0800a176 <_ZSt17holds_alternativeIP13Function_callJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableS1_EEbRKSt7variantIJDpT0_EE>:
    holds_alternative(const variant<_Types...>& __v) noexcept
 800a176:	b580      	push	{r7, lr}
 800a178:	b082      	sub	sp, #8
 800a17a:	af00      	add	r7, sp, #0
 800a17c:	6078      	str	r0, [r7, #4]
      return __v.index() == __detail::__variant::__index_of_v<_Tp, _Types...>;
 800a17e:	6878      	ldr	r0, [r7, #4]
 800a180:	f7ff ffc9 	bl	800a116 <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 800a184:	4603      	mov	r3, r0
 800a186:	2b05      	cmp	r3, #5
 800a188:	bf0c      	ite	eq
 800a18a:	2301      	moveq	r3, #1
 800a18c:	2300      	movne	r3, #0
 800a18e:	b2db      	uxtb	r3, r3
    }
 800a190:	4618      	mov	r0, r3
 800a192:	3708      	adds	r7, #8
 800a194:	46bd      	mov	sp, r7
 800a196:	bd80      	pop	{r7, pc}

0800a198 <_ZSt3getIP13Function_callJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableS1_EERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 800a198:	b580      	push	{r7, lr}
 800a19a:	b082      	sub	sp, #8
 800a19c:	af00      	add	r7, sp, #0
 800a19e:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 800a1a0:	6878      	ldr	r0, [r7, #4]
 800a1a2:	f000 fb47 	bl	800a834 <_ZSt3getILj5EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 800a1a6:	4603      	mov	r3, r0
    }
 800a1a8:	4618      	mov	r0, r3
 800a1aa:	3708      	adds	r7, #8
 800a1ac:	46bd      	mov	sp, r7
 800a1ae:	bd80      	pop	{r7, pc}

0800a1b0 <_ZNKSt7variantIJP17Primal_expressionP10ExpressionEE5indexEv>:
      constexpr size_t index() const noexcept
 800a1b0:	b480      	push	{r7}
 800a1b2:	b083      	sub	sp, #12
 800a1b4:	af00      	add	r7, sp, #0
 800a1b6:	6078      	str	r0, [r7, #4]
	if (this->_M_index ==
 800a1b8:	687b      	ldr	r3, [r7, #4]
 800a1ba:	791b      	ldrb	r3, [r3, #4]
 800a1bc:	2bff      	cmp	r3, #255	; 0xff
 800a1be:	d102      	bne.n	800a1c6 <_ZNKSt7variantIJP17Primal_expressionP10ExpressionEE5indexEv+0x16>
	  return variant_npos;
 800a1c0:	f04f 33ff 	mov.w	r3, #4294967295
 800a1c4:	e001      	b.n	800a1ca <_ZNKSt7variantIJP17Primal_expressionP10ExpressionEE5indexEv+0x1a>
	return this->_M_index;
 800a1c6:	687b      	ldr	r3, [r7, #4]
 800a1c8:	791b      	ldrb	r3, [r3, #4]
      }
 800a1ca:	4618      	mov	r0, r3
 800a1cc:	370c      	adds	r7, #12
 800a1ce:	46bd      	mov	sp, r7
 800a1d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a1d4:	4770      	bx	lr

0800a1d6 <_ZSt17holds_alternativeIP10ExpressionJP17Primal_expressionS1_EEbRKSt7variantIJDpT0_EE>:
    holds_alternative(const variant<_Types...>& __v) noexcept
 800a1d6:	b580      	push	{r7, lr}
 800a1d8:	b082      	sub	sp, #8
 800a1da:	af00      	add	r7, sp, #0
 800a1dc:	6078      	str	r0, [r7, #4]
      return __v.index() == __detail::__variant::__index_of_v<_Tp, _Types...>;
 800a1de:	6878      	ldr	r0, [r7, #4]
 800a1e0:	f7ff ffe6 	bl	800a1b0 <_ZNKSt7variantIJP17Primal_expressionP10ExpressionEE5indexEv>
 800a1e4:	4603      	mov	r3, r0
 800a1e6:	2b01      	cmp	r3, #1
 800a1e8:	bf0c      	ite	eq
 800a1ea:	2301      	moveq	r3, #1
 800a1ec:	2300      	movne	r3, #0
 800a1ee:	b2db      	uxtb	r3, r3
    }
 800a1f0:	4618      	mov	r0, r3
 800a1f2:	3708      	adds	r7, #8
 800a1f4:	46bd      	mov	sp, r7
 800a1f6:	bd80      	pop	{r7, pc}

0800a1f8 <_ZSt3getIP10ExpressionJP17Primal_expressionS1_EERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 800a1f8:	b580      	push	{r7, lr}
 800a1fa:	b082      	sub	sp, #8
 800a1fc:	af00      	add	r7, sp, #0
 800a1fe:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 800a200:	6878      	ldr	r0, [r7, #4]
 800a202:	f000 fb67 	bl	800a8d4 <_ZSt3getILj1EJP17Primal_expressionP10ExpressionEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERS8_>
 800a206:	4603      	mov	r3, r0
    }
 800a208:	4618      	mov	r0, r3
 800a20a:	3708      	adds	r7, #8
 800a20c:	46bd      	mov	sp, r7
 800a20e:	bd80      	pop	{r7, pc}

0800a210 <_ZSt3getIP17Primal_expressionJS1_P10ExpressionEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 800a210:	b580      	push	{r7, lr}
 800a212:	b082      	sub	sp, #8
 800a214:	af00      	add	r7, sp, #0
 800a216:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 800a218:	6878      	ldr	r0, [r7, #4]
 800a21a:	f000 fb99 	bl	800a950 <_ZSt3getILj0EJP17Primal_expressionP10ExpressionEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERS8_>
 800a21e:	4603      	mov	r3, r0
    }
 800a220:	4618      	mov	r0, r3
 800a222:	3708      	adds	r7, #8
 800a224:	46bd      	mov	sp, r7
 800a226:	bd80      	pop	{r7, pc}

0800a228 <_ZNSt6vectorIP16Power_expressionSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
 800a228:	b5b0      	push	{r4, r5, r7, lr}
 800a22a:	b082      	sub	sp, #8
 800a22c:	af00      	add	r7, sp, #0
 800a22e:	6078      	str	r0, [r7, #4]
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 800a230:	687b      	ldr	r3, [r7, #4]
 800a232:	681c      	ldr	r4, [r3, #0]
 800a234:	687b      	ldr	r3, [r7, #4]
 800a236:	685d      	ldr	r5, [r3, #4]
		      _M_get_Tp_allocator());
 800a238:	687b      	ldr	r3, [r7, #4]
 800a23a:	4618      	mov	r0, r3
 800a23c:	f000 fbc9 	bl	800a9d2 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 800a240:	4603      	mov	r3, r0
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 800a242:	461a      	mov	r2, r3
 800a244:	4629      	mov	r1, r5
 800a246:	4620      	mov	r0, r4
 800a248:	f000 fbce 	bl	800a9e8 <_ZSt8_DestroyIPP16Power_expressionS1_EvT_S3_RSaIT0_E>
      }
 800a24c:	687b      	ldr	r3, [r7, #4]
 800a24e:	4618      	mov	r0, r3
 800a250:	f000 fba6 	bl	800a9a0 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EED1Ev>
 800a254:	687b      	ldr	r3, [r7, #4]
 800a256:	4618      	mov	r0, r3
 800a258:	3708      	adds	r7, #8
 800a25a:	46bd      	mov	sp, r7
 800a25c:	bdb0      	pop	{r4, r5, r7, pc}

0800a25e <_ZNSt6vectorI13mult_operatorSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
 800a25e:	b5b0      	push	{r4, r5, r7, lr}
 800a260:	b082      	sub	sp, #8
 800a262:	af00      	add	r7, sp, #0
 800a264:	6078      	str	r0, [r7, #4]
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 800a266:	687b      	ldr	r3, [r7, #4]
 800a268:	681c      	ldr	r4, [r3, #0]
 800a26a:	687b      	ldr	r3, [r7, #4]
 800a26c:	685d      	ldr	r5, [r3, #4]
		      _M_get_Tp_allocator());
 800a26e:	687b      	ldr	r3, [r7, #4]
 800a270:	4618      	mov	r0, r3
 800a272:	f000 fbeb 	bl	800aa4c <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE19_M_get_Tp_allocatorEv>
 800a276:	4603      	mov	r3, r0
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 800a278:	461a      	mov	r2, r3
 800a27a:	4629      	mov	r1, r5
 800a27c:	4620      	mov	r0, r4
 800a27e:	f000 fbf0 	bl	800aa62 <_ZSt8_DestroyIP13mult_operatorS0_EvT_S2_RSaIT0_E>
      }
 800a282:	687b      	ldr	r3, [r7, #4]
 800a284:	4618      	mov	r0, r3
 800a286:	f000 fbc9 	bl	800aa1c <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EED1Ev>
 800a28a:	687b      	ldr	r3, [r7, #4]
 800a28c:	4618      	mov	r0, r3
 800a28e:	3708      	adds	r7, #8
 800a290:	46bd      	mov	sp, r7
 800a292:	bdb0      	pop	{r4, r5, r7, pc}

0800a294 <_ZNSt6vectorIP16Power_expressionSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 800a294:	b580      	push	{r7, lr}
 800a296:	b084      	sub	sp, #16
 800a298:	af00      	add	r7, sp, #0
 800a29a:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_start); }
 800a29c:	687a      	ldr	r2, [r7, #4]
 800a29e:	f107 030c 	add.w	r3, r7, #12
 800a2a2:	4611      	mov	r1, r2
 800a2a4:	4618      	mov	r0, r3
 800a2a6:	f000 fbea 	bl	800aa7e <_ZN9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 800a2aa:	68fb      	ldr	r3, [r7, #12]
 800a2ac:	4618      	mov	r0, r3
 800a2ae:	3710      	adds	r7, #16
 800a2b0:	46bd      	mov	sp, r7
 800a2b2:	bd80      	pop	{r7, pc}

0800a2b4 <_ZNSt6vectorIP16Power_expressionSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 800a2b4:	b580      	push	{r7, lr}
 800a2b6:	b084      	sub	sp, #16
 800a2b8:	af00      	add	r7, sp, #0
 800a2ba:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_finish); }
 800a2bc:	687b      	ldr	r3, [r7, #4]
 800a2be:	1d1a      	adds	r2, r3, #4
 800a2c0:	f107 030c 	add.w	r3, r7, #12
 800a2c4:	4611      	mov	r1, r2
 800a2c6:	4618      	mov	r0, r3
 800a2c8:	f000 fbd9 	bl	800aa7e <_ZN9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 800a2cc:	68fb      	ldr	r3, [r7, #12]
 800a2ce:	4618      	mov	r0, r3
 800a2d0:	3710      	adds	r7, #16
 800a2d2:	46bd      	mov	sp, r7
 800a2d4:	bd80      	pop	{r7, pc}

0800a2d6 <_ZN9__gnu_cxxneIPP16Power_expressionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
 800a2d6:	b590      	push	{r4, r7, lr}
 800a2d8:	b083      	sub	sp, #12
 800a2da:	af00      	add	r7, sp, #0
 800a2dc:	6078      	str	r0, [r7, #4]
 800a2de:	6039      	str	r1, [r7, #0]
    { return __lhs.base() != __rhs.base(); }
 800a2e0:	6878      	ldr	r0, [r7, #4]
 800a2e2:	f000 fbdc 	bl	800aa9e <_ZNK9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 800a2e6:	4603      	mov	r3, r0
 800a2e8:	681c      	ldr	r4, [r3, #0]
 800a2ea:	6838      	ldr	r0, [r7, #0]
 800a2ec:	f000 fbd7 	bl	800aa9e <_ZNK9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 800a2f0:	4603      	mov	r3, r0
 800a2f2:	681b      	ldr	r3, [r3, #0]
 800a2f4:	429c      	cmp	r4, r3
 800a2f6:	bf14      	ite	ne
 800a2f8:	2301      	movne	r3, #1
 800a2fa:	2300      	moveq	r3, #0
 800a2fc:	b2db      	uxtb	r3, r3
 800a2fe:	4618      	mov	r0, r3
 800a300:	370c      	adds	r7, #12
 800a302:	46bd      	mov	sp, r7
 800a304:	bd90      	pop	{r4, r7, pc}

0800a306 <_ZN9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
 800a306:	b480      	push	{r7}
 800a308:	b083      	sub	sp, #12
 800a30a:	af00      	add	r7, sp, #0
 800a30c:	6078      	str	r0, [r7, #4]
	++_M_current;
 800a30e:	687b      	ldr	r3, [r7, #4]
 800a310:	681b      	ldr	r3, [r3, #0]
 800a312:	1d1a      	adds	r2, r3, #4
 800a314:	687b      	ldr	r3, [r7, #4]
 800a316:	601a      	str	r2, [r3, #0]
	return *this;
 800a318:	687b      	ldr	r3, [r7, #4]
      }
 800a31a:	4618      	mov	r0, r3
 800a31c:	370c      	adds	r7, #12
 800a31e:	46bd      	mov	sp, r7
 800a320:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a324:	4770      	bx	lr

0800a326 <_ZNK9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
 800a326:	b480      	push	{r7}
 800a328:	b083      	sub	sp, #12
 800a32a:	af00      	add	r7, sp, #0
 800a32c:	6078      	str	r0, [r7, #4]
      { return *_M_current; }
 800a32e:	687b      	ldr	r3, [r7, #4]
 800a330:	681b      	ldr	r3, [r3, #0]
 800a332:	4618      	mov	r0, r3
 800a334:	370c      	adds	r7, #12
 800a336:	46bd      	mov	sp, r7
 800a338:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a33c:	4770      	bx	lr

0800a33e <_ZNSt6vectorIP19Multiply_expressionSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
 800a33e:	b5b0      	push	{r4, r5, r7, lr}
 800a340:	b082      	sub	sp, #8
 800a342:	af00      	add	r7, sp, #0
 800a344:	6078      	str	r0, [r7, #4]
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 800a346:	687b      	ldr	r3, [r7, #4]
 800a348:	681c      	ldr	r4, [r3, #0]
 800a34a:	687b      	ldr	r3, [r7, #4]
 800a34c:	685d      	ldr	r5, [r3, #4]
		      _M_get_Tp_allocator());
 800a34e:	687b      	ldr	r3, [r7, #4]
 800a350:	4618      	mov	r0, r3
 800a352:	f000 fbd4 	bl	800aafe <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 800a356:	4603      	mov	r3, r0
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 800a358:	461a      	mov	r2, r3
 800a35a:	4629      	mov	r1, r5
 800a35c:	4620      	mov	r0, r4
 800a35e:	f000 fbd9 	bl	800ab14 <_ZSt8_DestroyIPP19Multiply_expressionS1_EvT_S3_RSaIT0_E>
      }
 800a362:	687b      	ldr	r3, [r7, #4]
 800a364:	4618      	mov	r0, r3
 800a366:	f000 fbb1 	bl	800aacc <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EED1Ev>
 800a36a:	687b      	ldr	r3, [r7, #4]
 800a36c:	4618      	mov	r0, r3
 800a36e:	3708      	adds	r7, #8
 800a370:	46bd      	mov	sp, r7
 800a372:	bdb0      	pop	{r4, r5, r7, pc}

0800a374 <_ZNSt6vectorI12sum_operatorSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
 800a374:	b5b0      	push	{r4, r5, r7, lr}
 800a376:	b082      	sub	sp, #8
 800a378:	af00      	add	r7, sp, #0
 800a37a:	6078      	str	r0, [r7, #4]
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 800a37c:	687b      	ldr	r3, [r7, #4]
 800a37e:	681c      	ldr	r4, [r3, #0]
 800a380:	687b      	ldr	r3, [r7, #4]
 800a382:	685d      	ldr	r5, [r3, #4]
		      _M_get_Tp_allocator());
 800a384:	687b      	ldr	r3, [r7, #4]
 800a386:	4618      	mov	r0, r3
 800a388:	f000 fbf6 	bl	800ab78 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE19_M_get_Tp_allocatorEv>
 800a38c:	4603      	mov	r3, r0
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 800a38e:	461a      	mov	r2, r3
 800a390:	4629      	mov	r1, r5
 800a392:	4620      	mov	r0, r4
 800a394:	f000 fbfb 	bl	800ab8e <_ZSt8_DestroyIP12sum_operatorS0_EvT_S2_RSaIT0_E>
      }
 800a398:	687b      	ldr	r3, [r7, #4]
 800a39a:	4618      	mov	r0, r3
 800a39c:	f000 fbd4 	bl	800ab48 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EED1Ev>
 800a3a0:	687b      	ldr	r3, [r7, #4]
 800a3a2:	4618      	mov	r0, r3
 800a3a4:	3708      	adds	r7, #8
 800a3a6:	46bd      	mov	sp, r7
 800a3a8:	bdb0      	pop	{r4, r5, r7, pc}

0800a3aa <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 800a3aa:	b580      	push	{r7, lr}
 800a3ac:	b084      	sub	sp, #16
 800a3ae:	af00      	add	r7, sp, #0
 800a3b0:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_start); }
 800a3b2:	687a      	ldr	r2, [r7, #4]
 800a3b4:	f107 030c 	add.w	r3, r7, #12
 800a3b8:	4611      	mov	r1, r2
 800a3ba:	4618      	mov	r0, r3
 800a3bc:	f000 fbf5 	bl	800abaa <_ZN9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 800a3c0:	68fb      	ldr	r3, [r7, #12]
 800a3c2:	4618      	mov	r0, r3
 800a3c4:	3710      	adds	r7, #16
 800a3c6:	46bd      	mov	sp, r7
 800a3c8:	bd80      	pop	{r7, pc}

0800a3ca <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 800a3ca:	b580      	push	{r7, lr}
 800a3cc:	b084      	sub	sp, #16
 800a3ce:	af00      	add	r7, sp, #0
 800a3d0:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_finish); }
 800a3d2:	687b      	ldr	r3, [r7, #4]
 800a3d4:	1d1a      	adds	r2, r3, #4
 800a3d6:	f107 030c 	add.w	r3, r7, #12
 800a3da:	4611      	mov	r1, r2
 800a3dc:	4618      	mov	r0, r3
 800a3de:	f000 fbe4 	bl	800abaa <_ZN9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 800a3e2:	68fb      	ldr	r3, [r7, #12]
 800a3e4:	4618      	mov	r0, r3
 800a3e6:	3710      	adds	r7, #16
 800a3e8:	46bd      	mov	sp, r7
 800a3ea:	bd80      	pop	{r7, pc}

0800a3ec <_ZN9__gnu_cxxneIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
 800a3ec:	b590      	push	{r4, r7, lr}
 800a3ee:	b083      	sub	sp, #12
 800a3f0:	af00      	add	r7, sp, #0
 800a3f2:	6078      	str	r0, [r7, #4]
 800a3f4:	6039      	str	r1, [r7, #0]
    { return __lhs.base() != __rhs.base(); }
 800a3f6:	6878      	ldr	r0, [r7, #4]
 800a3f8:	f000 fbe7 	bl	800abca <_ZNK9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 800a3fc:	4603      	mov	r3, r0
 800a3fe:	681c      	ldr	r4, [r3, #0]
 800a400:	6838      	ldr	r0, [r7, #0]
 800a402:	f000 fbe2 	bl	800abca <_ZNK9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 800a406:	4603      	mov	r3, r0
 800a408:	681b      	ldr	r3, [r3, #0]
 800a40a:	429c      	cmp	r4, r3
 800a40c:	bf14      	ite	ne
 800a40e:	2301      	movne	r3, #1
 800a410:	2300      	moveq	r3, #0
 800a412:	b2db      	uxtb	r3, r3
 800a414:	4618      	mov	r0, r3
 800a416:	370c      	adds	r7, #12
 800a418:	46bd      	mov	sp, r7
 800a41a:	bd90      	pop	{r4, r7, pc}

0800a41c <_ZN9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
 800a41c:	b480      	push	{r7}
 800a41e:	b083      	sub	sp, #12
 800a420:	af00      	add	r7, sp, #0
 800a422:	6078      	str	r0, [r7, #4]
	++_M_current;
 800a424:	687b      	ldr	r3, [r7, #4]
 800a426:	681b      	ldr	r3, [r3, #0]
 800a428:	1d1a      	adds	r2, r3, #4
 800a42a:	687b      	ldr	r3, [r7, #4]
 800a42c:	601a      	str	r2, [r3, #0]
	return *this;
 800a42e:	687b      	ldr	r3, [r7, #4]
      }
 800a430:	4618      	mov	r0, r3
 800a432:	370c      	adds	r7, #12
 800a434:	46bd      	mov	sp, r7
 800a436:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a43a:	4770      	bx	lr

0800a43c <_ZNK9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
 800a43c:	b480      	push	{r7}
 800a43e:	b083      	sub	sp, #12
 800a440:	af00      	add	r7, sp, #0
 800a442:	6078      	str	r0, [r7, #4]
      { return *_M_current; }
 800a444:	687b      	ldr	r3, [r7, #4]
 800a446:	681b      	ldr	r3, [r3, #0]
 800a448:	4618      	mov	r0, r3
 800a44a:	370c      	adds	r7, #12
 800a44c:	46bd      	mov	sp, r7
 800a44e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a452:	4770      	bx	lr

0800a454 <_ZNSt6vectorIP18Compare_expressionSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
 800a454:	b5b0      	push	{r4, r5, r7, lr}
 800a456:	b082      	sub	sp, #8
 800a458:	af00      	add	r7, sp, #0
 800a45a:	6078      	str	r0, [r7, #4]
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 800a45c:	687b      	ldr	r3, [r7, #4]
 800a45e:	681c      	ldr	r4, [r3, #0]
 800a460:	687b      	ldr	r3, [r7, #4]
 800a462:	685d      	ldr	r5, [r3, #4]
		      _M_get_Tp_allocator());
 800a464:	687b      	ldr	r3, [r7, #4]
 800a466:	4618      	mov	r0, r3
 800a468:	f000 fbdf 	bl	800ac2a <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 800a46c:	4603      	mov	r3, r0
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 800a46e:	461a      	mov	r2, r3
 800a470:	4629      	mov	r1, r5
 800a472:	4620      	mov	r0, r4
 800a474:	f000 fbe4 	bl	800ac40 <_ZSt8_DestroyIPP18Compare_expressionS1_EvT_S3_RSaIT0_E>
      }
 800a478:	687b      	ldr	r3, [r7, #4]
 800a47a:	4618      	mov	r0, r3
 800a47c:	f000 fbbc 	bl	800abf8 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EED1Ev>
 800a480:	687b      	ldr	r3, [r7, #4]
 800a482:	4618      	mov	r0, r3
 800a484:	3708      	adds	r7, #8
 800a486:	46bd      	mov	sp, r7
 800a488:	bdb0      	pop	{r4, r5, r7, pc}

0800a48a <_ZNSt6vectorIP18Compare_expressionSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 800a48a:	b580      	push	{r7, lr}
 800a48c:	b084      	sub	sp, #16
 800a48e:	af00      	add	r7, sp, #0
 800a490:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_start); }
 800a492:	687a      	ldr	r2, [r7, #4]
 800a494:	f107 030c 	add.w	r3, r7, #12
 800a498:	4611      	mov	r1, r2
 800a49a:	4618      	mov	r0, r3
 800a49c:	f000 fbde 	bl	800ac5c <_ZN9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 800a4a0:	68fb      	ldr	r3, [r7, #12]
 800a4a2:	4618      	mov	r0, r3
 800a4a4:	3710      	adds	r7, #16
 800a4a6:	46bd      	mov	sp, r7
 800a4a8:	bd80      	pop	{r7, pc}

0800a4aa <_ZNSt6vectorIP18Compare_expressionSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 800a4aa:	b580      	push	{r7, lr}
 800a4ac:	b084      	sub	sp, #16
 800a4ae:	af00      	add	r7, sp, #0
 800a4b0:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_finish); }
 800a4b2:	687b      	ldr	r3, [r7, #4]
 800a4b4:	1d1a      	adds	r2, r3, #4
 800a4b6:	f107 030c 	add.w	r3, r7, #12
 800a4ba:	4611      	mov	r1, r2
 800a4bc:	4618      	mov	r0, r3
 800a4be:	f000 fbcd 	bl	800ac5c <_ZN9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 800a4c2:	68fb      	ldr	r3, [r7, #12]
 800a4c4:	4618      	mov	r0, r3
 800a4c6:	3710      	adds	r7, #16
 800a4c8:	46bd      	mov	sp, r7
 800a4ca:	bd80      	pop	{r7, pc}

0800a4cc <_ZN9__gnu_cxxneIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
 800a4cc:	b590      	push	{r4, r7, lr}
 800a4ce:	b083      	sub	sp, #12
 800a4d0:	af00      	add	r7, sp, #0
 800a4d2:	6078      	str	r0, [r7, #4]
 800a4d4:	6039      	str	r1, [r7, #0]
    { return __lhs.base() != __rhs.base(); }
 800a4d6:	6878      	ldr	r0, [r7, #4]
 800a4d8:	f000 fbd0 	bl	800ac7c <_ZNK9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 800a4dc:	4603      	mov	r3, r0
 800a4de:	681c      	ldr	r4, [r3, #0]
 800a4e0:	6838      	ldr	r0, [r7, #0]
 800a4e2:	f000 fbcb 	bl	800ac7c <_ZNK9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 800a4e6:	4603      	mov	r3, r0
 800a4e8:	681b      	ldr	r3, [r3, #0]
 800a4ea:	429c      	cmp	r4, r3
 800a4ec:	bf14      	ite	ne
 800a4ee:	2301      	movne	r3, #1
 800a4f0:	2300      	moveq	r3, #0
 800a4f2:	b2db      	uxtb	r3, r3
 800a4f4:	4618      	mov	r0, r3
 800a4f6:	370c      	adds	r7, #12
 800a4f8:	46bd      	mov	sp, r7
 800a4fa:	bd90      	pop	{r4, r7, pc}

0800a4fc <_ZN9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
 800a4fc:	b480      	push	{r7}
 800a4fe:	b083      	sub	sp, #12
 800a500:	af00      	add	r7, sp, #0
 800a502:	6078      	str	r0, [r7, #4]
	++_M_current;
 800a504:	687b      	ldr	r3, [r7, #4]
 800a506:	681b      	ldr	r3, [r3, #0]
 800a508:	1d1a      	adds	r2, r3, #4
 800a50a:	687b      	ldr	r3, [r7, #4]
 800a50c:	601a      	str	r2, [r3, #0]
	return *this;
 800a50e:	687b      	ldr	r3, [r7, #4]
      }
 800a510:	4618      	mov	r0, r3
 800a512:	370c      	adds	r7, #12
 800a514:	46bd      	mov	sp, r7
 800a516:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a51a:	4770      	bx	lr

0800a51c <_ZNK9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
 800a51c:	b480      	push	{r7}
 800a51e:	b083      	sub	sp, #12
 800a520:	af00      	add	r7, sp, #0
 800a522:	6078      	str	r0, [r7, #4]
      { return *_M_current; }
 800a524:	687b      	ldr	r3, [r7, #4]
 800a526:	681b      	ldr	r3, [r3, #0]
 800a528:	4618      	mov	r0, r3
 800a52a:	370c      	adds	r7, #12
 800a52c:	46bd      	mov	sp, r7
 800a52e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a532:	4770      	bx	lr

0800a534 <_ZNSt6vectorIP14And_expressionSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
 800a534:	b5b0      	push	{r4, r5, r7, lr}
 800a536:	b082      	sub	sp, #8
 800a538:	af00      	add	r7, sp, #0
 800a53a:	6078      	str	r0, [r7, #4]
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 800a53c:	687b      	ldr	r3, [r7, #4]
 800a53e:	681c      	ldr	r4, [r3, #0]
 800a540:	687b      	ldr	r3, [r7, #4]
 800a542:	685d      	ldr	r5, [r3, #4]
		      _M_get_Tp_allocator());
 800a544:	687b      	ldr	r3, [r7, #4]
 800a546:	4618      	mov	r0, r3
 800a548:	f000 fbc8 	bl	800acdc <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 800a54c:	4603      	mov	r3, r0
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 800a54e:	461a      	mov	r2, r3
 800a550:	4629      	mov	r1, r5
 800a552:	4620      	mov	r0, r4
 800a554:	f000 fbcd 	bl	800acf2 <_ZSt8_DestroyIPP14And_expressionS1_EvT_S3_RSaIT0_E>
      }
 800a558:	687b      	ldr	r3, [r7, #4]
 800a55a:	4618      	mov	r0, r3
 800a55c:	f000 fba5 	bl	800acaa <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EED1Ev>
 800a560:	687b      	ldr	r3, [r7, #4]
 800a562:	4618      	mov	r0, r3
 800a564:	3708      	adds	r7, #8
 800a566:	46bd      	mov	sp, r7
 800a568:	bdb0      	pop	{r4, r5, r7, pc}

0800a56a <_ZNSt6vectorIP14And_expressionSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 800a56a:	b580      	push	{r7, lr}
 800a56c:	b084      	sub	sp, #16
 800a56e:	af00      	add	r7, sp, #0
 800a570:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_start); }
 800a572:	687a      	ldr	r2, [r7, #4]
 800a574:	f107 030c 	add.w	r3, r7, #12
 800a578:	4611      	mov	r1, r2
 800a57a:	4618      	mov	r0, r3
 800a57c:	f000 fbc7 	bl	800ad0e <_ZN9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 800a580:	68fb      	ldr	r3, [r7, #12]
 800a582:	4618      	mov	r0, r3
 800a584:	3710      	adds	r7, #16
 800a586:	46bd      	mov	sp, r7
 800a588:	bd80      	pop	{r7, pc}

0800a58a <_ZNSt6vectorIP14And_expressionSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 800a58a:	b580      	push	{r7, lr}
 800a58c:	b084      	sub	sp, #16
 800a58e:	af00      	add	r7, sp, #0
 800a590:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_finish); }
 800a592:	687b      	ldr	r3, [r7, #4]
 800a594:	1d1a      	adds	r2, r3, #4
 800a596:	f107 030c 	add.w	r3, r7, #12
 800a59a:	4611      	mov	r1, r2
 800a59c:	4618      	mov	r0, r3
 800a59e:	f000 fbb6 	bl	800ad0e <_ZN9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 800a5a2:	68fb      	ldr	r3, [r7, #12]
 800a5a4:	4618      	mov	r0, r3
 800a5a6:	3710      	adds	r7, #16
 800a5a8:	46bd      	mov	sp, r7
 800a5aa:	bd80      	pop	{r7, pc}

0800a5ac <_ZN9__gnu_cxxneIPP14And_expressionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
 800a5ac:	b590      	push	{r4, r7, lr}
 800a5ae:	b083      	sub	sp, #12
 800a5b0:	af00      	add	r7, sp, #0
 800a5b2:	6078      	str	r0, [r7, #4]
 800a5b4:	6039      	str	r1, [r7, #0]
    { return __lhs.base() != __rhs.base(); }
 800a5b6:	6878      	ldr	r0, [r7, #4]
 800a5b8:	f000 fbb9 	bl	800ad2e <_ZNK9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 800a5bc:	4603      	mov	r3, r0
 800a5be:	681c      	ldr	r4, [r3, #0]
 800a5c0:	6838      	ldr	r0, [r7, #0]
 800a5c2:	f000 fbb4 	bl	800ad2e <_ZNK9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 800a5c6:	4603      	mov	r3, r0
 800a5c8:	681b      	ldr	r3, [r3, #0]
 800a5ca:	429c      	cmp	r4, r3
 800a5cc:	bf14      	ite	ne
 800a5ce:	2301      	movne	r3, #1
 800a5d0:	2300      	moveq	r3, #0
 800a5d2:	b2db      	uxtb	r3, r3
 800a5d4:	4618      	mov	r0, r3
 800a5d6:	370c      	adds	r7, #12
 800a5d8:	46bd      	mov	sp, r7
 800a5da:	bd90      	pop	{r4, r7, pc}

0800a5dc <_ZN9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
 800a5dc:	b480      	push	{r7}
 800a5de:	b083      	sub	sp, #12
 800a5e0:	af00      	add	r7, sp, #0
 800a5e2:	6078      	str	r0, [r7, #4]
	++_M_current;
 800a5e4:	687b      	ldr	r3, [r7, #4]
 800a5e6:	681b      	ldr	r3, [r3, #0]
 800a5e8:	1d1a      	adds	r2, r3, #4
 800a5ea:	687b      	ldr	r3, [r7, #4]
 800a5ec:	601a      	str	r2, [r3, #0]
	return *this;
 800a5ee:	687b      	ldr	r3, [r7, #4]
      }
 800a5f0:	4618      	mov	r0, r3
 800a5f2:	370c      	adds	r7, #12
 800a5f4:	46bd      	mov	sp, r7
 800a5f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a5fa:	4770      	bx	lr

0800a5fc <_ZNK9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
 800a5fc:	b480      	push	{r7}
 800a5fe:	b083      	sub	sp, #12
 800a600:	af00      	add	r7, sp, #0
 800a602:	6078      	str	r0, [r7, #4]
      { return *_M_current; }
 800a604:	687b      	ldr	r3, [r7, #4]
 800a606:	681b      	ldr	r3, [r3, #0]
 800a608:	4618      	mov	r0, r3
 800a60a:	370c      	adds	r7, #12
 800a60c:	46bd      	mov	sp, r7
 800a60e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a612:	4770      	bx	lr

0800a614 <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE8_M_resetEv>:
      void _M_reset()
 800a614:	b580      	push	{r7, lr}
 800a616:	b082      	sub	sp, #8
 800a618:	af00      	add	r7, sp, #0
 800a61a:	6078      	str	r0, [r7, #4]
	_M_reset_impl();
 800a61c:	6878      	ldr	r0, [r7, #4]
 800a61e:	f000 fecb 	bl	800b3b8 <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEv>
	_M_index = variant_npos;
 800a622:	687b      	ldr	r3, [r7, #4]
 800a624:	22ff      	movs	r2, #255	; 0xff
 800a626:	761a      	strb	r2, [r3, #24]
      }
 800a628:	bf00      	nop
 800a62a:	3708      	adds	r7, #8
 800a62c:	46bd      	mov	sp, r7
 800a62e:	bd80      	pop	{r7, pc}

0800a630 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP8VariableP13Function_callEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 800a630:	b580      	push	{r7, lr}
 800a632:	b082      	sub	sp, #8
 800a634:	af00      	add	r7, sp, #0
 800a636:	7138      	strb	r0, [r7, #4]
 800a638:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 800a63a:	6838      	ldr	r0, [r7, #0]
 800a63c:	f000 ff05 	bl	800b44a <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP8VariableP13Function_callEEEEOT_RNSt16remove_referenceIS9_E4typeE>
 800a640:	4603      	mov	r3, r0
 800a642:	4618      	mov	r0, r3
 800a644:	f000 ff0c 	bl	800b460 <_ZNRSt8__detail9__variant14_UninitializedIP8VariableLb1EE6_M_getEv>
 800a648:	4603      	mov	r3, r0
 800a64a:	4618      	mov	r0, r3
 800a64c:	3708      	adds	r7, #8
 800a64e:	46bd      	mov	sp, r7
 800a650:	bd80      	pop	{r7, pc}

0800a652 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800a652:	b590      	push	{r4, r7, lr}
 800a654:	b083      	sub	sp, #12
 800a656:	af00      	add	r7, sp, #0
 800a658:	7138      	strb	r0, [r7, #4]
 800a65a:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800a65c:	6838      	ldr	r0, [r7, #0]
 800a65e:	f000 fee9 	bl	800b434 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800a662:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800a664:	4619      	mov	r1, r3
 800a666:	4620      	mov	r0, r4
 800a668:	f7ff ffe2 	bl	800a630 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP8VariableP13Function_callEEEEEDcSt16in_place_index_tILj0EEOT_>
 800a66c:	4603      	mov	r3, r0
    }
 800a66e:	4618      	mov	r0, r3
 800a670:	370c      	adds	r7, #12
 800a672:	46bd      	mov	sp, r7
 800a674:	bd90      	pop	{r4, r7, pc}

0800a676 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJfNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800a676:	b590      	push	{r4, r7, lr}
 800a678:	b083      	sub	sp, #12
 800a67a:	af00      	add	r7, sp, #0
 800a67c:	7138      	strb	r0, [r7, #4]
 800a67e:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800a680:	6838      	ldr	r0, [r7, #0]
 800a682:	f000 fecc 	bl	800b41e <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800a686:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800a688:	4619      	mov	r1, r3
 800a68a:	4620      	mov	r0, r4
 800a68c:	f7ff ffe1 	bl	800a652 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800a690:	4603      	mov	r3, r0
    }
 800a692:	4618      	mov	r0, r3
 800a694:	370c      	adds	r7, #12
 800a696:	46bd      	mov	sp, r7
 800a698:	bd90      	pop	{r4, r7, pc}

0800a69a <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800a69a:	b590      	push	{r4, r7, lr}
 800a69c:	b083      	sub	sp, #12
 800a69e:	af00      	add	r7, sp, #0
 800a6a0:	7138      	strb	r0, [r7, #4]
 800a6a2:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800a6a4:	6838      	ldr	r0, [r7, #0]
 800a6a6:	f000 feaf 	bl	800b408 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800a6aa:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800a6ac:	4619      	mov	r1, r3
 800a6ae:	4620      	mov	r0, r4
 800a6b0:	f7ff ffe1 	bl	800a676 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJfNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800a6b4:	4603      	mov	r3, r0
    }
 800a6b6:	4618      	mov	r0, r3
 800a6b8:	370c      	adds	r7, #12
 800a6ba:	46bd      	mov	sp, r7
 800a6bc:	bd90      	pop	{r4, r7, pc}

0800a6be <_ZNSt8__detail9__variant5__getILj4ERNS0_15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800a6be:	b590      	push	{r4, r7, lr}
 800a6c0:	b083      	sub	sp, #12
 800a6c2:	af00      	add	r7, sp, #0
 800a6c4:	7138      	strb	r0, [r7, #4]
 800a6c6:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800a6c8:	6838      	ldr	r0, [r7, #0]
 800a6ca:	f000 fe92 	bl	800b3f2 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800a6ce:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800a6d0:	4619      	mov	r1, r3
 800a6d2:	4620      	mov	r0, r4
 800a6d4:	f7ff ffe1 	bl	800a69a <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800a6d8:	4603      	mov	r3, r0
    }
 800a6da:	4618      	mov	r0, r3
 800a6dc:	370c      	adds	r7, #12
 800a6de:	46bd      	mov	sp, r7
 800a6e0:	bd90      	pop	{r4, r7, pc}

0800a6e2 <_ZNSt8__detail9__variant5__getILj4ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800a6e2:	b590      	push	{r4, r7, lr}
 800a6e4:	b083      	sub	sp, #12
 800a6e6:	af00      	add	r7, sp, #0
 800a6e8:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800a6ea:	6878      	ldr	r0, [r7, #4]
 800a6ec:	f000 fe76 	bl	800b3dc <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800a6f0:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800a6f2:	4619      	mov	r1, r3
 800a6f4:	4620      	mov	r0, r4
 800a6f6:	f7ff ffe2 	bl	800a6be <_ZNSt8__detail9__variant5__getILj4ERNS0_15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800a6fa:	4603      	mov	r3, r0
    }
 800a6fc:	4618      	mov	r0, r3
 800a6fe:	370c      	adds	r7, #12
 800a700:	46bd      	mov	sp, r7
 800a702:	bd90      	pop	{r4, r7, pc}

0800a704 <_ZSt3getILj4EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
    get(variant<_Types...>& __v)
 800a704:	b580      	push	{r7, lr}
 800a706:	b082      	sub	sp, #8
 800a708:	af00      	add	r7, sp, #0
 800a70a:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 800a70c:	6878      	ldr	r0, [r7, #4]
 800a70e:	f7ff fd02 	bl	800a116 <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 800a712:	4603      	mov	r3, r0
 800a714:	2b04      	cmp	r3, #4
 800a716:	bf14      	ite	ne
 800a718:	2301      	movne	r3, #1
 800a71a:	2300      	moveq	r3, #0
 800a71c:	b2db      	uxtb	r3, r3
 800a71e:	2b00      	cmp	r3, #0
 800a720:	d002      	beq.n	800a728 <_ZSt3getILj4EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 800a722:	4805      	ldr	r0, [pc, #20]	; (800a738 <_ZSt3getILj4EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 800a724:	f7f6 fca5 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 800a728:	6878      	ldr	r0, [r7, #4]
 800a72a:	f7ff ffda 	bl	800a6e2 <_ZNSt8__detail9__variant5__getILj4ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 800a72e:	4603      	mov	r3, r0
    }
 800a730:	4618      	mov	r0, r3
 800a732:	3708      	adds	r7, #8
 800a734:	46bd      	mov	sp, r7
 800a736:	bd80      	pop	{r7, pc}
 800a738:	08029510 	.word	0x08029510

0800a73c <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP13Function_callEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 800a73c:	b580      	push	{r7, lr}
 800a73e:	b082      	sub	sp, #8
 800a740:	af00      	add	r7, sp, #0
 800a742:	7138      	strb	r0, [r7, #4]
 800a744:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 800a746:	6838      	ldr	r0, [r7, #0]
 800a748:	f000 fe95 	bl	800b476 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP13Function_callEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 800a74c:	4603      	mov	r3, r0
 800a74e:	4618      	mov	r0, r3
 800a750:	f7fa fbc4 	bl	8004edc <_ZNRSt8__detail9__variant14_UninitializedIP13Function_callLb1EE6_M_getEv>
 800a754:	4603      	mov	r3, r0
 800a756:	4618      	mov	r0, r3
 800a758:	3708      	adds	r7, #8
 800a75a:	46bd      	mov	sp, r7
 800a75c:	bd80      	pop	{r7, pc}

0800a75e <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800a75e:	b590      	push	{r4, r7, lr}
 800a760:	b083      	sub	sp, #12
 800a762:	af00      	add	r7, sp, #0
 800a764:	7138      	strb	r0, [r7, #4]
 800a766:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800a768:	6838      	ldr	r0, [r7, #0]
 800a76a:	f000 fe6e 	bl	800b44a <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP8VariableP13Function_callEEEEOT_RNSt16remove_referenceIS9_E4typeE>
 800a76e:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800a770:	4619      	mov	r1, r3
 800a772:	4620      	mov	r0, r4
 800a774:	f7ff ffe2 	bl	800a73c <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP13Function_callEEEEEDcSt16in_place_index_tILj0EEOT_>
 800a778:	4603      	mov	r3, r0
    }
 800a77a:	4618      	mov	r0, r3
 800a77c:	370c      	adds	r7, #12
 800a77e:	46bd      	mov	sp, r7
 800a780:	bd90      	pop	{r4, r7, pc}

0800a782 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800a782:	b590      	push	{r4, r7, lr}
 800a784:	b083      	sub	sp, #12
 800a786:	af00      	add	r7, sp, #0
 800a788:	7138      	strb	r0, [r7, #4]
 800a78a:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800a78c:	6838      	ldr	r0, [r7, #0]
 800a78e:	f000 fe51 	bl	800b434 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800a792:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800a794:	4619      	mov	r1, r3
 800a796:	4620      	mov	r0, r4
 800a798:	f7ff ffe1 	bl	800a75e <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800a79c:	4603      	mov	r3, r0
    }
 800a79e:	4618      	mov	r0, r3
 800a7a0:	370c      	adds	r7, #12
 800a7a2:	46bd      	mov	sp, r7
 800a7a4:	bd90      	pop	{r4, r7, pc}

0800a7a6 <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJfNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800a7a6:	b590      	push	{r4, r7, lr}
 800a7a8:	b083      	sub	sp, #12
 800a7aa:	af00      	add	r7, sp, #0
 800a7ac:	7138      	strb	r0, [r7, #4]
 800a7ae:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800a7b0:	6838      	ldr	r0, [r7, #0]
 800a7b2:	f000 fe34 	bl	800b41e <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800a7b6:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800a7b8:	4619      	mov	r1, r3
 800a7ba:	4620      	mov	r0, r4
 800a7bc:	f7ff ffe1 	bl	800a782 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800a7c0:	4603      	mov	r3, r0
    }
 800a7c2:	4618      	mov	r0, r3
 800a7c4:	370c      	adds	r7, #12
 800a7c6:	46bd      	mov	sp, r7
 800a7c8:	bd90      	pop	{r4, r7, pc}

0800a7ca <_ZNSt8__detail9__variant5__getILj4ERNS0_15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800a7ca:	b590      	push	{r4, r7, lr}
 800a7cc:	b083      	sub	sp, #12
 800a7ce:	af00      	add	r7, sp, #0
 800a7d0:	7138      	strb	r0, [r7, #4]
 800a7d2:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800a7d4:	6838      	ldr	r0, [r7, #0]
 800a7d6:	f000 fe17 	bl	800b408 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800a7da:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800a7dc:	4619      	mov	r1, r3
 800a7de:	4620      	mov	r0, r4
 800a7e0:	f7ff ffe1 	bl	800a7a6 <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJfNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800a7e4:	4603      	mov	r3, r0
    }
 800a7e6:	4618      	mov	r0, r3
 800a7e8:	370c      	adds	r7, #12
 800a7ea:	46bd      	mov	sp, r7
 800a7ec:	bd90      	pop	{r4, r7, pc}

0800a7ee <_ZNSt8__detail9__variant5__getILj5ERNS0_15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800a7ee:	b590      	push	{r4, r7, lr}
 800a7f0:	b083      	sub	sp, #12
 800a7f2:	af00      	add	r7, sp, #0
 800a7f4:	7138      	strb	r0, [r7, #4]
 800a7f6:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800a7f8:	6838      	ldr	r0, [r7, #0]
 800a7fa:	f000 fdfa 	bl	800b3f2 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800a7fe:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800a800:	4619      	mov	r1, r3
 800a802:	4620      	mov	r0, r4
 800a804:	f7ff ffe1 	bl	800a7ca <_ZNSt8__detail9__variant5__getILj4ERNS0_15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800a808:	4603      	mov	r3, r0
    }
 800a80a:	4618      	mov	r0, r3
 800a80c:	370c      	adds	r7, #12
 800a80e:	46bd      	mov	sp, r7
 800a810:	bd90      	pop	{r4, r7, pc}

0800a812 <_ZNSt8__detail9__variant5__getILj5ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800a812:	b590      	push	{r4, r7, lr}
 800a814:	b083      	sub	sp, #12
 800a816:	af00      	add	r7, sp, #0
 800a818:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800a81a:	6878      	ldr	r0, [r7, #4]
 800a81c:	f000 fdde 	bl	800b3dc <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800a820:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800a822:	4619      	mov	r1, r3
 800a824:	4620      	mov	r0, r4
 800a826:	f7ff ffe2 	bl	800a7ee <_ZNSt8__detail9__variant5__getILj5ERNS0_15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800a82a:	4603      	mov	r3, r0
    }
 800a82c:	4618      	mov	r0, r3
 800a82e:	370c      	adds	r7, #12
 800a830:	46bd      	mov	sp, r7
 800a832:	bd90      	pop	{r4, r7, pc}

0800a834 <_ZSt3getILj5EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
    get(variant<_Types...>& __v)
 800a834:	b580      	push	{r7, lr}
 800a836:	b082      	sub	sp, #8
 800a838:	af00      	add	r7, sp, #0
 800a83a:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 800a83c:	6878      	ldr	r0, [r7, #4]
 800a83e:	f7ff fc6a 	bl	800a116 <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 800a842:	4603      	mov	r3, r0
 800a844:	2b05      	cmp	r3, #5
 800a846:	bf14      	ite	ne
 800a848:	2301      	movne	r3, #1
 800a84a:	2300      	moveq	r3, #0
 800a84c:	b2db      	uxtb	r3, r3
 800a84e:	2b00      	cmp	r3, #0
 800a850:	d002      	beq.n	800a858 <_ZSt3getILj5EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 800a852:	4805      	ldr	r0, [pc, #20]	; (800a868 <_ZSt3getILj5EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 800a854:	f7f6 fc0d 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 800a858:	6878      	ldr	r0, [r7, #4]
 800a85a:	f7ff ffda 	bl	800a812 <_ZNSt8__detail9__variant5__getILj5ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 800a85e:	4603      	mov	r3, r0
    }
 800a860:	4618      	mov	r0, r3
 800a862:	3708      	adds	r7, #8
 800a864:	46bd      	mov	sp, r7
 800a866:	bd80      	pop	{r7, pc}
 800a868:	08029510 	.word	0x08029510

0800a86c <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP10ExpressionEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 800a86c:	b580      	push	{r7, lr}
 800a86e:	b082      	sub	sp, #8
 800a870:	af00      	add	r7, sp, #0
 800a872:	7138      	strb	r0, [r7, #4]
 800a874:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 800a876:	6838      	ldr	r0, [r7, #0]
 800a878:	f000 fe1e 	bl	800b4b8 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP10ExpressionEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 800a87c:	4603      	mov	r3, r0
 800a87e:	4618      	mov	r0, r3
 800a880:	f000 fe25 	bl	800b4ce <_ZNRSt8__detail9__variant14_UninitializedIP10ExpressionLb1EE6_M_getEv>
 800a884:	4603      	mov	r3, r0
 800a886:	4618      	mov	r0, r3
 800a888:	3708      	adds	r7, #8
 800a88a:	46bd      	mov	sp, r7
 800a88c:	bd80      	pop	{r7, pc}

0800a88e <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJP17Primal_expressionP10ExpressionEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800a88e:	b590      	push	{r4, r7, lr}
 800a890:	b083      	sub	sp, #12
 800a892:	af00      	add	r7, sp, #0
 800a894:	7138      	strb	r0, [r7, #4]
 800a896:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800a898:	6838      	ldr	r0, [r7, #0]
 800a89a:	f000 fe02 	bl	800b4a2 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP17Primal_expressionP10ExpressionEEEEOT_RNSt16remove_referenceIS9_E4typeE>
 800a89e:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800a8a0:	4619      	mov	r1, r3
 800a8a2:	4620      	mov	r0, r4
 800a8a4:	f7ff ffe2 	bl	800a86c <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP10ExpressionEEEEEDcSt16in_place_index_tILj0EEOT_>
 800a8a8:	4603      	mov	r3, r0
    }
 800a8aa:	4618      	mov	r0, r3
 800a8ac:	370c      	adds	r7, #12
 800a8ae:	46bd      	mov	sp, r7
 800a8b0:	bd90      	pop	{r4, r7, pc}

0800a8b2 <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJP17Primal_expressionP10ExpressionEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800a8b2:	b590      	push	{r4, r7, lr}
 800a8b4:	b083      	sub	sp, #12
 800a8b6:	af00      	add	r7, sp, #0
 800a8b8:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800a8ba:	6878      	ldr	r0, [r7, #4]
 800a8bc:	f000 fde6 	bl	800b48c <_ZSt7forwardIRSt7variantIJP17Primal_expressionP10ExpressionEEEOT_RNSt16remove_referenceIS7_E4typeE>
 800a8c0:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800a8c2:	4619      	mov	r1, r3
 800a8c4:	4620      	mov	r0, r4
 800a8c6:	f7ff ffe2 	bl	800a88e <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJP17Primal_expressionP10ExpressionEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800a8ca:	4603      	mov	r3, r0
    }
 800a8cc:	4618      	mov	r0, r3
 800a8ce:	370c      	adds	r7, #12
 800a8d0:	46bd      	mov	sp, r7
 800a8d2:	bd90      	pop	{r4, r7, pc}

0800a8d4 <_ZSt3getILj1EJP17Primal_expressionP10ExpressionEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERS8_>:
    get(variant<_Types...>& __v)
 800a8d4:	b580      	push	{r7, lr}
 800a8d6:	b082      	sub	sp, #8
 800a8d8:	af00      	add	r7, sp, #0
 800a8da:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 800a8dc:	6878      	ldr	r0, [r7, #4]
 800a8de:	f7ff fc67 	bl	800a1b0 <_ZNKSt7variantIJP17Primal_expressionP10ExpressionEE5indexEv>
 800a8e2:	4603      	mov	r3, r0
 800a8e4:	2b01      	cmp	r3, #1
 800a8e6:	bf14      	ite	ne
 800a8e8:	2301      	movne	r3, #1
 800a8ea:	2300      	moveq	r3, #0
 800a8ec:	b2db      	uxtb	r3, r3
 800a8ee:	2b00      	cmp	r3, #0
 800a8f0:	d002      	beq.n	800a8f8 <_ZSt3getILj1EJP17Primal_expressionP10ExpressionEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERS8_+0x24>
	__throw_bad_variant_access("Unexpected index");
 800a8f2:	4805      	ldr	r0, [pc, #20]	; (800a908 <_ZSt3getILj1EJP17Primal_expressionP10ExpressionEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERS8_+0x34>)
 800a8f4:	f7f6 fbbd 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 800a8f8:	6878      	ldr	r0, [r7, #4]
 800a8fa:	f7ff ffda 	bl	800a8b2 <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJP17Primal_expressionP10ExpressionEEEEDcOT0_>
 800a8fe:	4603      	mov	r3, r0
    }
 800a900:	4618      	mov	r0, r3
 800a902:	3708      	adds	r7, #8
 800a904:	46bd      	mov	sp, r7
 800a906:	bd80      	pop	{r7, pc}
 800a908:	08029510 	.word	0x08029510

0800a90c <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP17Primal_expressionP10ExpressionEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 800a90c:	b580      	push	{r7, lr}
 800a90e:	b082      	sub	sp, #8
 800a910:	af00      	add	r7, sp, #0
 800a912:	7138      	strb	r0, [r7, #4]
 800a914:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 800a916:	6838      	ldr	r0, [r7, #0]
 800a918:	f000 fdc3 	bl	800b4a2 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP17Primal_expressionP10ExpressionEEEEOT_RNSt16remove_referenceIS9_E4typeE>
 800a91c:	4603      	mov	r3, r0
 800a91e:	4618      	mov	r0, r3
 800a920:	f000 fde0 	bl	800b4e4 <_ZNRSt8__detail9__variant14_UninitializedIP17Primal_expressionLb1EE6_M_getEv>
 800a924:	4603      	mov	r3, r0
 800a926:	4618      	mov	r0, r3
 800a928:	3708      	adds	r7, #8
 800a92a:	46bd      	mov	sp, r7
 800a92c:	bd80      	pop	{r7, pc}

0800a92e <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJP17Primal_expressionP10ExpressionEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800a92e:	b590      	push	{r4, r7, lr}
 800a930:	b083      	sub	sp, #12
 800a932:	af00      	add	r7, sp, #0
 800a934:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800a936:	6878      	ldr	r0, [r7, #4]
 800a938:	f000 fda8 	bl	800b48c <_ZSt7forwardIRSt7variantIJP17Primal_expressionP10ExpressionEEEOT_RNSt16remove_referenceIS7_E4typeE>
 800a93c:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800a93e:	4619      	mov	r1, r3
 800a940:	4620      	mov	r0, r4
 800a942:	f7ff ffe3 	bl	800a90c <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP17Primal_expressionP10ExpressionEEEEEDcSt16in_place_index_tILj0EEOT_>
 800a946:	4603      	mov	r3, r0
    }
 800a948:	4618      	mov	r0, r3
 800a94a:	370c      	adds	r7, #12
 800a94c:	46bd      	mov	sp, r7
 800a94e:	bd90      	pop	{r4, r7, pc}

0800a950 <_ZSt3getILj0EJP17Primal_expressionP10ExpressionEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERS8_>:
    get(variant<_Types...>& __v)
 800a950:	b580      	push	{r7, lr}
 800a952:	b082      	sub	sp, #8
 800a954:	af00      	add	r7, sp, #0
 800a956:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 800a958:	6878      	ldr	r0, [r7, #4]
 800a95a:	f7ff fc29 	bl	800a1b0 <_ZNKSt7variantIJP17Primal_expressionP10ExpressionEE5indexEv>
 800a95e:	4603      	mov	r3, r0
 800a960:	2b00      	cmp	r3, #0
 800a962:	bf14      	ite	ne
 800a964:	2301      	movne	r3, #1
 800a966:	2300      	moveq	r3, #0
 800a968:	b2db      	uxtb	r3, r3
 800a96a:	2b00      	cmp	r3, #0
 800a96c:	d002      	beq.n	800a974 <_ZSt3getILj0EJP17Primal_expressionP10ExpressionEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERS8_+0x24>
	__throw_bad_variant_access("Unexpected index");
 800a96e:	4805      	ldr	r0, [pc, #20]	; (800a984 <_ZSt3getILj0EJP17Primal_expressionP10ExpressionEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERS8_+0x34>)
 800a970:	f7f6 fb7f 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 800a974:	6878      	ldr	r0, [r7, #4]
 800a976:	f7ff ffda 	bl	800a92e <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJP17Primal_expressionP10ExpressionEEEEDcOT0_>
 800a97a:	4603      	mov	r3, r0
    }
 800a97c:	4618      	mov	r0, r3
 800a97e:	3708      	adds	r7, #8
 800a980:	46bd      	mov	sp, r7
 800a982:	bd80      	pop	{r7, pc}
 800a984:	08029510 	.word	0x08029510

0800a988 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
 800a988:	b580      	push	{r7, lr}
 800a98a:	b082      	sub	sp, #8
 800a98c:	af00      	add	r7, sp, #0
 800a98e:	6078      	str	r0, [r7, #4]
 800a990:	6878      	ldr	r0, [r7, #4]
 800a992:	f000 fdb2 	bl	800b4fa <_ZNSaIP16Power_expressionED1Ev>
 800a996:	687b      	ldr	r3, [r7, #4]
 800a998:	4618      	mov	r0, r3
 800a99a:	3708      	adds	r7, #8
 800a99c:	46bd      	mov	sp, r7
 800a99e:	bd80      	pop	{r7, pc}

0800a9a0 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
 800a9a0:	b580      	push	{r7, lr}
 800a9a2:	b082      	sub	sp, #8
 800a9a4:	af00      	add	r7, sp, #0
 800a9a6:	6078      	str	r0, [r7, #4]
	_M_deallocate(_M_impl._M_start,
 800a9a8:	687b      	ldr	r3, [r7, #4]
 800a9aa:	6819      	ldr	r1, [r3, #0]
		      _M_impl._M_end_of_storage - _M_impl._M_start);
 800a9ac:	687b      	ldr	r3, [r7, #4]
 800a9ae:	689a      	ldr	r2, [r3, #8]
 800a9b0:	687b      	ldr	r3, [r7, #4]
 800a9b2:	681b      	ldr	r3, [r3, #0]
 800a9b4:	1ad3      	subs	r3, r2, r3
 800a9b6:	109b      	asrs	r3, r3, #2
	_M_deallocate(_M_impl._M_start,
 800a9b8:	461a      	mov	r2, r3
 800a9ba:	6878      	ldr	r0, [r7, #4]
 800a9bc:	f000 fda9 	bl	800b512 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE13_M_deallocateEPS1_j>
      }
 800a9c0:	687b      	ldr	r3, [r7, #4]
 800a9c2:	4618      	mov	r0, r3
 800a9c4:	f7ff ffe0 	bl	800a988 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE12_Vector_implD1Ev>
 800a9c8:	687b      	ldr	r3, [r7, #4]
 800a9ca:	4618      	mov	r0, r3
 800a9cc:	3708      	adds	r7, #8
 800a9ce:	46bd      	mov	sp, r7
 800a9d0:	bd80      	pop	{r7, pc}

0800a9d2 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 800a9d2:	b480      	push	{r7}
 800a9d4:	b083      	sub	sp, #12
 800a9d6:	af00      	add	r7, sp, #0
 800a9d8:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 800a9da:	687b      	ldr	r3, [r7, #4]
 800a9dc:	4618      	mov	r0, r3
 800a9de:	370c      	adds	r7, #12
 800a9e0:	46bd      	mov	sp, r7
 800a9e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a9e6:	4770      	bx	lr

0800a9e8 <_ZSt8_DestroyIPP16Power_expressionS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 800a9e8:	b580      	push	{r7, lr}
 800a9ea:	b084      	sub	sp, #16
 800a9ec:	af00      	add	r7, sp, #0
 800a9ee:	60f8      	str	r0, [r7, #12]
 800a9f0:	60b9      	str	r1, [r7, #8]
 800a9f2:	607a      	str	r2, [r7, #4]
      _Destroy(__first, __last);
 800a9f4:	68b9      	ldr	r1, [r7, #8]
 800a9f6:	68f8      	ldr	r0, [r7, #12]
 800a9f8:	f000 fd9e 	bl	800b538 <_ZSt8_DestroyIPP16Power_expressionEvT_S3_>
    }
 800a9fc:	bf00      	nop
 800a9fe:	3710      	adds	r7, #16
 800aa00:	46bd      	mov	sp, r7
 800aa02:	bd80      	pop	{r7, pc}

0800aa04 <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
 800aa04:	b580      	push	{r7, lr}
 800aa06:	b082      	sub	sp, #8
 800aa08:	af00      	add	r7, sp, #0
 800aa0a:	6078      	str	r0, [r7, #4]
 800aa0c:	6878      	ldr	r0, [r7, #4]
 800aa0e:	f000 fda0 	bl	800b552 <_ZNSaI13mult_operatorED1Ev>
 800aa12:	687b      	ldr	r3, [r7, #4]
 800aa14:	4618      	mov	r0, r3
 800aa16:	3708      	adds	r7, #8
 800aa18:	46bd      	mov	sp, r7
 800aa1a:	bd80      	pop	{r7, pc}

0800aa1c <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
 800aa1c:	b580      	push	{r7, lr}
 800aa1e:	b082      	sub	sp, #8
 800aa20:	af00      	add	r7, sp, #0
 800aa22:	6078      	str	r0, [r7, #4]
	_M_deallocate(_M_impl._M_start,
 800aa24:	687b      	ldr	r3, [r7, #4]
 800aa26:	6819      	ldr	r1, [r3, #0]
		      _M_impl._M_end_of_storage - _M_impl._M_start);
 800aa28:	687b      	ldr	r3, [r7, #4]
 800aa2a:	689a      	ldr	r2, [r3, #8]
 800aa2c:	687b      	ldr	r3, [r7, #4]
 800aa2e:	681b      	ldr	r3, [r3, #0]
 800aa30:	1ad3      	subs	r3, r2, r3
	_M_deallocate(_M_impl._M_start,
 800aa32:	461a      	mov	r2, r3
 800aa34:	6878      	ldr	r0, [r7, #4]
 800aa36:	f000 fd98 	bl	800b56a <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE13_M_deallocateEPS0_j>
      }
 800aa3a:	687b      	ldr	r3, [r7, #4]
 800aa3c:	4618      	mov	r0, r3
 800aa3e:	f7ff ffe1 	bl	800aa04 <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE12_Vector_implD1Ev>
 800aa42:	687b      	ldr	r3, [r7, #4]
 800aa44:	4618      	mov	r0, r3
 800aa46:	3708      	adds	r7, #8
 800aa48:	46bd      	mov	sp, r7
 800aa4a:	bd80      	pop	{r7, pc}

0800aa4c <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 800aa4c:	b480      	push	{r7}
 800aa4e:	b083      	sub	sp, #12
 800aa50:	af00      	add	r7, sp, #0
 800aa52:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 800aa54:	687b      	ldr	r3, [r7, #4]
 800aa56:	4618      	mov	r0, r3
 800aa58:	370c      	adds	r7, #12
 800aa5a:	46bd      	mov	sp, r7
 800aa5c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aa60:	4770      	bx	lr

0800aa62 <_ZSt8_DestroyIP13mult_operatorS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 800aa62:	b580      	push	{r7, lr}
 800aa64:	b084      	sub	sp, #16
 800aa66:	af00      	add	r7, sp, #0
 800aa68:	60f8      	str	r0, [r7, #12]
 800aa6a:	60b9      	str	r1, [r7, #8]
 800aa6c:	607a      	str	r2, [r7, #4]
      _Destroy(__first, __last);
 800aa6e:	68b9      	ldr	r1, [r7, #8]
 800aa70:	68f8      	ldr	r0, [r7, #12]
 800aa72:	f000 fd8d 	bl	800b590 <_ZSt8_DestroyIP13mult_operatorEvT_S2_>
    }
 800aa76:	bf00      	nop
 800aa78:	3710      	adds	r7, #16
 800aa7a:	46bd      	mov	sp, r7
 800aa7c:	bd80      	pop	{r7, pc}

0800aa7e <_ZN9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 800aa7e:	b480      	push	{r7}
 800aa80:	b083      	sub	sp, #12
 800aa82:	af00      	add	r7, sp, #0
 800aa84:	6078      	str	r0, [r7, #4]
 800aa86:	6039      	str	r1, [r7, #0]
      : _M_current(__i) { }
 800aa88:	683b      	ldr	r3, [r7, #0]
 800aa8a:	681a      	ldr	r2, [r3, #0]
 800aa8c:	687b      	ldr	r3, [r7, #4]
 800aa8e:	601a      	str	r2, [r3, #0]
 800aa90:	687b      	ldr	r3, [r7, #4]
 800aa92:	4618      	mov	r0, r3
 800aa94:	370c      	adds	r7, #12
 800aa96:	46bd      	mov	sp, r7
 800aa98:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aa9c:	4770      	bx	lr

0800aa9e <_ZNK9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
 800aa9e:	b480      	push	{r7}
 800aaa0:	b083      	sub	sp, #12
 800aaa2:	af00      	add	r7, sp, #0
 800aaa4:	6078      	str	r0, [r7, #4]
      { return _M_current; }
 800aaa6:	687b      	ldr	r3, [r7, #4]
 800aaa8:	4618      	mov	r0, r3
 800aaaa:	370c      	adds	r7, #12
 800aaac:	46bd      	mov	sp, r7
 800aaae:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aab2:	4770      	bx	lr

0800aab4 <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
 800aab4:	b580      	push	{r7, lr}
 800aab6:	b082      	sub	sp, #8
 800aab8:	af00      	add	r7, sp, #0
 800aaba:	6078      	str	r0, [r7, #4]
 800aabc:	6878      	ldr	r0, [r7, #4]
 800aabe:	f000 fd74 	bl	800b5aa <_ZNSaIP19Multiply_expressionED1Ev>
 800aac2:	687b      	ldr	r3, [r7, #4]
 800aac4:	4618      	mov	r0, r3
 800aac6:	3708      	adds	r7, #8
 800aac8:	46bd      	mov	sp, r7
 800aaca:	bd80      	pop	{r7, pc}

0800aacc <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
 800aacc:	b580      	push	{r7, lr}
 800aace:	b082      	sub	sp, #8
 800aad0:	af00      	add	r7, sp, #0
 800aad2:	6078      	str	r0, [r7, #4]
	_M_deallocate(_M_impl._M_start,
 800aad4:	687b      	ldr	r3, [r7, #4]
 800aad6:	6819      	ldr	r1, [r3, #0]
		      _M_impl._M_end_of_storage - _M_impl._M_start);
 800aad8:	687b      	ldr	r3, [r7, #4]
 800aada:	689a      	ldr	r2, [r3, #8]
 800aadc:	687b      	ldr	r3, [r7, #4]
 800aade:	681b      	ldr	r3, [r3, #0]
 800aae0:	1ad3      	subs	r3, r2, r3
 800aae2:	109b      	asrs	r3, r3, #2
	_M_deallocate(_M_impl._M_start,
 800aae4:	461a      	mov	r2, r3
 800aae6:	6878      	ldr	r0, [r7, #4]
 800aae8:	f000 fd6b 	bl	800b5c2 <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE13_M_deallocateEPS1_j>
      }
 800aaec:	687b      	ldr	r3, [r7, #4]
 800aaee:	4618      	mov	r0, r3
 800aaf0:	f7ff ffe0 	bl	800aab4 <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE12_Vector_implD1Ev>
 800aaf4:	687b      	ldr	r3, [r7, #4]
 800aaf6:	4618      	mov	r0, r3
 800aaf8:	3708      	adds	r7, #8
 800aafa:	46bd      	mov	sp, r7
 800aafc:	bd80      	pop	{r7, pc}

0800aafe <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 800aafe:	b480      	push	{r7}
 800ab00:	b083      	sub	sp, #12
 800ab02:	af00      	add	r7, sp, #0
 800ab04:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 800ab06:	687b      	ldr	r3, [r7, #4]
 800ab08:	4618      	mov	r0, r3
 800ab0a:	370c      	adds	r7, #12
 800ab0c:	46bd      	mov	sp, r7
 800ab0e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ab12:	4770      	bx	lr

0800ab14 <_ZSt8_DestroyIPP19Multiply_expressionS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 800ab14:	b580      	push	{r7, lr}
 800ab16:	b084      	sub	sp, #16
 800ab18:	af00      	add	r7, sp, #0
 800ab1a:	60f8      	str	r0, [r7, #12]
 800ab1c:	60b9      	str	r1, [r7, #8]
 800ab1e:	607a      	str	r2, [r7, #4]
      _Destroy(__first, __last);
 800ab20:	68b9      	ldr	r1, [r7, #8]
 800ab22:	68f8      	ldr	r0, [r7, #12]
 800ab24:	f000 fd60 	bl	800b5e8 <_ZSt8_DestroyIPP19Multiply_expressionEvT_S3_>
    }
 800ab28:	bf00      	nop
 800ab2a:	3710      	adds	r7, #16
 800ab2c:	46bd      	mov	sp, r7
 800ab2e:	bd80      	pop	{r7, pc}

0800ab30 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
 800ab30:	b580      	push	{r7, lr}
 800ab32:	b082      	sub	sp, #8
 800ab34:	af00      	add	r7, sp, #0
 800ab36:	6078      	str	r0, [r7, #4]
 800ab38:	6878      	ldr	r0, [r7, #4]
 800ab3a:	f000 fd62 	bl	800b602 <_ZNSaI12sum_operatorED1Ev>
 800ab3e:	687b      	ldr	r3, [r7, #4]
 800ab40:	4618      	mov	r0, r3
 800ab42:	3708      	adds	r7, #8
 800ab44:	46bd      	mov	sp, r7
 800ab46:	bd80      	pop	{r7, pc}

0800ab48 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
 800ab48:	b580      	push	{r7, lr}
 800ab4a:	b082      	sub	sp, #8
 800ab4c:	af00      	add	r7, sp, #0
 800ab4e:	6078      	str	r0, [r7, #4]
	_M_deallocate(_M_impl._M_start,
 800ab50:	687b      	ldr	r3, [r7, #4]
 800ab52:	6819      	ldr	r1, [r3, #0]
		      _M_impl._M_end_of_storage - _M_impl._M_start);
 800ab54:	687b      	ldr	r3, [r7, #4]
 800ab56:	689a      	ldr	r2, [r3, #8]
 800ab58:	687b      	ldr	r3, [r7, #4]
 800ab5a:	681b      	ldr	r3, [r3, #0]
 800ab5c:	1ad3      	subs	r3, r2, r3
	_M_deallocate(_M_impl._M_start,
 800ab5e:	461a      	mov	r2, r3
 800ab60:	6878      	ldr	r0, [r7, #4]
 800ab62:	f000 fd5a 	bl	800b61a <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE13_M_deallocateEPS0_j>
      }
 800ab66:	687b      	ldr	r3, [r7, #4]
 800ab68:	4618      	mov	r0, r3
 800ab6a:	f7ff ffe1 	bl	800ab30 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE12_Vector_implD1Ev>
 800ab6e:	687b      	ldr	r3, [r7, #4]
 800ab70:	4618      	mov	r0, r3
 800ab72:	3708      	adds	r7, #8
 800ab74:	46bd      	mov	sp, r7
 800ab76:	bd80      	pop	{r7, pc}

0800ab78 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 800ab78:	b480      	push	{r7}
 800ab7a:	b083      	sub	sp, #12
 800ab7c:	af00      	add	r7, sp, #0
 800ab7e:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 800ab80:	687b      	ldr	r3, [r7, #4]
 800ab82:	4618      	mov	r0, r3
 800ab84:	370c      	adds	r7, #12
 800ab86:	46bd      	mov	sp, r7
 800ab88:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ab8c:	4770      	bx	lr

0800ab8e <_ZSt8_DestroyIP12sum_operatorS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 800ab8e:	b580      	push	{r7, lr}
 800ab90:	b084      	sub	sp, #16
 800ab92:	af00      	add	r7, sp, #0
 800ab94:	60f8      	str	r0, [r7, #12]
 800ab96:	60b9      	str	r1, [r7, #8]
 800ab98:	607a      	str	r2, [r7, #4]
      _Destroy(__first, __last);
 800ab9a:	68b9      	ldr	r1, [r7, #8]
 800ab9c:	68f8      	ldr	r0, [r7, #12]
 800ab9e:	f000 fd4f 	bl	800b640 <_ZSt8_DestroyIP12sum_operatorEvT_S2_>
    }
 800aba2:	bf00      	nop
 800aba4:	3710      	adds	r7, #16
 800aba6:	46bd      	mov	sp, r7
 800aba8:	bd80      	pop	{r7, pc}

0800abaa <_ZN9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 800abaa:	b480      	push	{r7}
 800abac:	b083      	sub	sp, #12
 800abae:	af00      	add	r7, sp, #0
 800abb0:	6078      	str	r0, [r7, #4]
 800abb2:	6039      	str	r1, [r7, #0]
      : _M_current(__i) { }
 800abb4:	683b      	ldr	r3, [r7, #0]
 800abb6:	681a      	ldr	r2, [r3, #0]
 800abb8:	687b      	ldr	r3, [r7, #4]
 800abba:	601a      	str	r2, [r3, #0]
 800abbc:	687b      	ldr	r3, [r7, #4]
 800abbe:	4618      	mov	r0, r3
 800abc0:	370c      	adds	r7, #12
 800abc2:	46bd      	mov	sp, r7
 800abc4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800abc8:	4770      	bx	lr

0800abca <_ZNK9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
 800abca:	b480      	push	{r7}
 800abcc:	b083      	sub	sp, #12
 800abce:	af00      	add	r7, sp, #0
 800abd0:	6078      	str	r0, [r7, #4]
      { return _M_current; }
 800abd2:	687b      	ldr	r3, [r7, #4]
 800abd4:	4618      	mov	r0, r3
 800abd6:	370c      	adds	r7, #12
 800abd8:	46bd      	mov	sp, r7
 800abda:	f85d 7b04 	ldr.w	r7, [sp], #4
 800abde:	4770      	bx	lr

0800abe0 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
 800abe0:	b580      	push	{r7, lr}
 800abe2:	b082      	sub	sp, #8
 800abe4:	af00      	add	r7, sp, #0
 800abe6:	6078      	str	r0, [r7, #4]
 800abe8:	6878      	ldr	r0, [r7, #4]
 800abea:	f000 fd36 	bl	800b65a <_ZNSaIP18Compare_expressionED1Ev>
 800abee:	687b      	ldr	r3, [r7, #4]
 800abf0:	4618      	mov	r0, r3
 800abf2:	3708      	adds	r7, #8
 800abf4:	46bd      	mov	sp, r7
 800abf6:	bd80      	pop	{r7, pc}

0800abf8 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
 800abf8:	b580      	push	{r7, lr}
 800abfa:	b082      	sub	sp, #8
 800abfc:	af00      	add	r7, sp, #0
 800abfe:	6078      	str	r0, [r7, #4]
	_M_deallocate(_M_impl._M_start,
 800ac00:	687b      	ldr	r3, [r7, #4]
 800ac02:	6819      	ldr	r1, [r3, #0]
		      _M_impl._M_end_of_storage - _M_impl._M_start);
 800ac04:	687b      	ldr	r3, [r7, #4]
 800ac06:	689a      	ldr	r2, [r3, #8]
 800ac08:	687b      	ldr	r3, [r7, #4]
 800ac0a:	681b      	ldr	r3, [r3, #0]
 800ac0c:	1ad3      	subs	r3, r2, r3
 800ac0e:	109b      	asrs	r3, r3, #2
	_M_deallocate(_M_impl._M_start,
 800ac10:	461a      	mov	r2, r3
 800ac12:	6878      	ldr	r0, [r7, #4]
 800ac14:	f000 fd2d 	bl	800b672 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE13_M_deallocateEPS1_j>
      }
 800ac18:	687b      	ldr	r3, [r7, #4]
 800ac1a:	4618      	mov	r0, r3
 800ac1c:	f7ff ffe0 	bl	800abe0 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE12_Vector_implD1Ev>
 800ac20:	687b      	ldr	r3, [r7, #4]
 800ac22:	4618      	mov	r0, r3
 800ac24:	3708      	adds	r7, #8
 800ac26:	46bd      	mov	sp, r7
 800ac28:	bd80      	pop	{r7, pc}

0800ac2a <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 800ac2a:	b480      	push	{r7}
 800ac2c:	b083      	sub	sp, #12
 800ac2e:	af00      	add	r7, sp, #0
 800ac30:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 800ac32:	687b      	ldr	r3, [r7, #4]
 800ac34:	4618      	mov	r0, r3
 800ac36:	370c      	adds	r7, #12
 800ac38:	46bd      	mov	sp, r7
 800ac3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ac3e:	4770      	bx	lr

0800ac40 <_ZSt8_DestroyIPP18Compare_expressionS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 800ac40:	b580      	push	{r7, lr}
 800ac42:	b084      	sub	sp, #16
 800ac44:	af00      	add	r7, sp, #0
 800ac46:	60f8      	str	r0, [r7, #12]
 800ac48:	60b9      	str	r1, [r7, #8]
 800ac4a:	607a      	str	r2, [r7, #4]
      _Destroy(__first, __last);
 800ac4c:	68b9      	ldr	r1, [r7, #8]
 800ac4e:	68f8      	ldr	r0, [r7, #12]
 800ac50:	f000 fd22 	bl	800b698 <_ZSt8_DestroyIPP18Compare_expressionEvT_S3_>
    }
 800ac54:	bf00      	nop
 800ac56:	3710      	adds	r7, #16
 800ac58:	46bd      	mov	sp, r7
 800ac5a:	bd80      	pop	{r7, pc}

0800ac5c <_ZN9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 800ac5c:	b480      	push	{r7}
 800ac5e:	b083      	sub	sp, #12
 800ac60:	af00      	add	r7, sp, #0
 800ac62:	6078      	str	r0, [r7, #4]
 800ac64:	6039      	str	r1, [r7, #0]
      : _M_current(__i) { }
 800ac66:	683b      	ldr	r3, [r7, #0]
 800ac68:	681a      	ldr	r2, [r3, #0]
 800ac6a:	687b      	ldr	r3, [r7, #4]
 800ac6c:	601a      	str	r2, [r3, #0]
 800ac6e:	687b      	ldr	r3, [r7, #4]
 800ac70:	4618      	mov	r0, r3
 800ac72:	370c      	adds	r7, #12
 800ac74:	46bd      	mov	sp, r7
 800ac76:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ac7a:	4770      	bx	lr

0800ac7c <_ZNK9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
 800ac7c:	b480      	push	{r7}
 800ac7e:	b083      	sub	sp, #12
 800ac80:	af00      	add	r7, sp, #0
 800ac82:	6078      	str	r0, [r7, #4]
      { return _M_current; }
 800ac84:	687b      	ldr	r3, [r7, #4]
 800ac86:	4618      	mov	r0, r3
 800ac88:	370c      	adds	r7, #12
 800ac8a:	46bd      	mov	sp, r7
 800ac8c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ac90:	4770      	bx	lr

0800ac92 <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
 800ac92:	b580      	push	{r7, lr}
 800ac94:	b082      	sub	sp, #8
 800ac96:	af00      	add	r7, sp, #0
 800ac98:	6078      	str	r0, [r7, #4]
 800ac9a:	6878      	ldr	r0, [r7, #4]
 800ac9c:	f000 fd09 	bl	800b6b2 <_ZNSaIP14And_expressionED1Ev>
 800aca0:	687b      	ldr	r3, [r7, #4]
 800aca2:	4618      	mov	r0, r3
 800aca4:	3708      	adds	r7, #8
 800aca6:	46bd      	mov	sp, r7
 800aca8:	bd80      	pop	{r7, pc}

0800acaa <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
 800acaa:	b580      	push	{r7, lr}
 800acac:	b082      	sub	sp, #8
 800acae:	af00      	add	r7, sp, #0
 800acb0:	6078      	str	r0, [r7, #4]
	_M_deallocate(_M_impl._M_start,
 800acb2:	687b      	ldr	r3, [r7, #4]
 800acb4:	6819      	ldr	r1, [r3, #0]
		      _M_impl._M_end_of_storage - _M_impl._M_start);
 800acb6:	687b      	ldr	r3, [r7, #4]
 800acb8:	689a      	ldr	r2, [r3, #8]
 800acba:	687b      	ldr	r3, [r7, #4]
 800acbc:	681b      	ldr	r3, [r3, #0]
 800acbe:	1ad3      	subs	r3, r2, r3
 800acc0:	109b      	asrs	r3, r3, #2
	_M_deallocate(_M_impl._M_start,
 800acc2:	461a      	mov	r2, r3
 800acc4:	6878      	ldr	r0, [r7, #4]
 800acc6:	f000 fd00 	bl	800b6ca <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE13_M_deallocateEPS1_j>
      }
 800acca:	687b      	ldr	r3, [r7, #4]
 800accc:	4618      	mov	r0, r3
 800acce:	f7ff ffe0 	bl	800ac92 <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE12_Vector_implD1Ev>
 800acd2:	687b      	ldr	r3, [r7, #4]
 800acd4:	4618      	mov	r0, r3
 800acd6:	3708      	adds	r7, #8
 800acd8:	46bd      	mov	sp, r7
 800acda:	bd80      	pop	{r7, pc}

0800acdc <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 800acdc:	b480      	push	{r7}
 800acde:	b083      	sub	sp, #12
 800ace0:	af00      	add	r7, sp, #0
 800ace2:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 800ace4:	687b      	ldr	r3, [r7, #4]
 800ace6:	4618      	mov	r0, r3
 800ace8:	370c      	adds	r7, #12
 800acea:	46bd      	mov	sp, r7
 800acec:	f85d 7b04 	ldr.w	r7, [sp], #4
 800acf0:	4770      	bx	lr

0800acf2 <_ZSt8_DestroyIPP14And_expressionS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 800acf2:	b580      	push	{r7, lr}
 800acf4:	b084      	sub	sp, #16
 800acf6:	af00      	add	r7, sp, #0
 800acf8:	60f8      	str	r0, [r7, #12]
 800acfa:	60b9      	str	r1, [r7, #8]
 800acfc:	607a      	str	r2, [r7, #4]
      _Destroy(__first, __last);
 800acfe:	68b9      	ldr	r1, [r7, #8]
 800ad00:	68f8      	ldr	r0, [r7, #12]
 800ad02:	f000 fcf5 	bl	800b6f0 <_ZSt8_DestroyIPP14And_expressionEvT_S3_>
    }
 800ad06:	bf00      	nop
 800ad08:	3710      	adds	r7, #16
 800ad0a:	46bd      	mov	sp, r7
 800ad0c:	bd80      	pop	{r7, pc}

0800ad0e <_ZN9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 800ad0e:	b480      	push	{r7}
 800ad10:	b083      	sub	sp, #12
 800ad12:	af00      	add	r7, sp, #0
 800ad14:	6078      	str	r0, [r7, #4]
 800ad16:	6039      	str	r1, [r7, #0]
      : _M_current(__i) { }
 800ad18:	683b      	ldr	r3, [r7, #0]
 800ad1a:	681a      	ldr	r2, [r3, #0]
 800ad1c:	687b      	ldr	r3, [r7, #4]
 800ad1e:	601a      	str	r2, [r3, #0]
 800ad20:	687b      	ldr	r3, [r7, #4]
 800ad22:	4618      	mov	r0, r3
 800ad24:	370c      	adds	r7, #12
 800ad26:	46bd      	mov	sp, r7
 800ad28:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ad2c:	4770      	bx	lr

0800ad2e <_ZNK9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
 800ad2e:	b480      	push	{r7}
 800ad30:	b083      	sub	sp, #12
 800ad32:	af00      	add	r7, sp, #0
 800ad34:	6078      	str	r0, [r7, #4]
      { return _M_current; }
 800ad36:	687b      	ldr	r3, [r7, #4]
 800ad38:	4618      	mov	r0, r3
 800ad3a:	370c      	adds	r7, #12
 800ad3c:	46bd      	mov	sp, r7
 800ad3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ad42:	4770      	bx	lr

0800ad44 <_ZSt14__variant_castIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callERNSt8__detail9__variant16_Variant_storageILb0EJbifS5_S7_S9_EEEEDcOT0_>:
    __variant_cast(_Tp&& __rhs)
 800ad44:	b480      	push	{r7}
 800ad46:	b083      	sub	sp, #12
 800ad48:	af00      	add	r7, sp, #0
 800ad4a:	6078      	str	r0, [r7, #4]
	    return static_cast<variant<_Types...>&>(__rhs);
 800ad4c:	687b      	ldr	r3, [r7, #4]
    }
 800ad4e:	4618      	mov	r0, r3
 800ad50:	370c      	adds	r7, #12
 800ad52:	46bd      	mov	sp, r7
 800ad54:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ad58:	4770      	bx	lr

0800ad5a <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 800ad5a:	b580      	push	{r7, lr}
 800ad5c:	b082      	sub	sp, #8
 800ad5e:	af00      	add	r7, sp, #0
 800ad60:	7138      	strb	r0, [r7, #4]
 800ad62:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 800ad64:	6838      	ldr	r0, [r7, #0]
 800ad66:	f000 fb44 	bl	800b3f2 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800ad6a:	4603      	mov	r3, r0
 800ad6c:	4618      	mov	r0, r3
 800ad6e:	f7f8 fdcf 	bl	8003910 <_ZNRSt8__detail9__variant14_UninitializedIbLb1EE6_M_getEv>
 800ad72:	4603      	mov	r3, r0
 800ad74:	4618      	mov	r0, r3
 800ad76:	3708      	adds	r7, #8
 800ad78:	46bd      	mov	sp, r7
 800ad7a:	bd80      	pop	{r7, pc}

0800ad7c <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800ad7c:	b590      	push	{r4, r7, lr}
 800ad7e:	b083      	sub	sp, #12
 800ad80:	af00      	add	r7, sp, #0
 800ad82:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800ad84:	6878      	ldr	r0, [r7, #4]
 800ad86:	f000 fb29 	bl	800b3dc <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800ad8a:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800ad8c:	4619      	mov	r1, r3
 800ad8e:	4620      	mov	r0, r4
 800ad90:	f7ff ffe3 	bl	800ad5a <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tILj0EEOT_>
 800ad94:	4603      	mov	r3, r0
    }
 800ad96:	4618      	mov	r0, r3
 800ad98:	370c      	adds	r7, #12
 800ad9a:	46bd      	mov	sp, r7
 800ad9c:	bd90      	pop	{r4, r7, pc}

0800ad9e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESM_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 800ad9e:	b580      	push	{r7, lr}
 800ada0:	b082      	sub	sp, #8
 800ada2:	af00      	add	r7, sp, #0
 800ada4:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 800ada6:	6878      	ldr	r0, [r7, #4]
 800ada8:	f000 fb18 	bl	800b3dc <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800adac:	4603      	mov	r3, r0
 800adae:	4618      	mov	r0, r3
 800adb0:	f7ff ffe4 	bl	800ad7c <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 800adb4:	4603      	mov	r3, r0
	}
 800adb6:	4618      	mov	r0, r3
 800adb8:	3708      	adds	r7, #8
 800adba:	46bd      	mov	sp, r7
 800adbc:	bd80      	pop	{r7, pc}

0800adbe <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESJ_SM_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 800adbe:	b5b0      	push	{r4, r5, r7, lr}
 800adc0:	b082      	sub	sp, #8
 800adc2:	af00      	add	r7, sp, #0
 800adc4:	6078      	str	r0, [r7, #4]
 800adc6:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 800adc8:	6878      	ldr	r0, [r7, #4]
 800adca:	f000 fc9e 	bl	800b70a <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800adce:	4604      	mov	r4, r0
 800add0:	6838      	ldr	r0, [r7, #0]
 800add2:	f000 fb03 	bl	800b3dc <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800add6:	4603      	mov	r3, r0
 800add8:	4618      	mov	r0, r3
 800adda:	f7ff ffe0 	bl	800ad9e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESM_EEDcOT0_>
 800adde:	4603      	mov	r3, r0
 800ade0:	4619      	mov	r1, r3
 800ade2:	4620      	mov	r0, r4
 800ade4:	f000 fc9c 	bl	800b720 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRbEENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>
		std::forward<_Variants>(__vars))...);
 800ade8:	462b      	mov	r3, r5
      }
 800adea:	4618      	mov	r0, r3
 800adec:	3708      	adds	r7, #8
 800adee:	46bd      	mov	sp, r7
 800adf0:	bdb0      	pop	{r4, r5, r7, pc}

0800adf2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESJ_SM_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800adf2:	b5b0      	push	{r4, r5, r7, lr}
 800adf4:	b082      	sub	sp, #8
 800adf6:	af00      	add	r7, sp, #0
 800adf8:	6078      	str	r0, [r7, #4]
 800adfa:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 800adfc:	6878      	ldr	r0, [r7, #4]
 800adfe:	f000 fc84 	bl	800b70a <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800ae02:	4604      	mov	r4, r0
 800ae04:	6838      	ldr	r0, [r7, #0]
 800ae06:	f000 fae9 	bl	800b3dc <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800ae0a:	4603      	mov	r3, r0
 800ae0c:	4619      	mov	r1, r3
 800ae0e:	4620      	mov	r0, r4
 800ae10:	f7ff ffd5 	bl	800adbe <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 800ae14:	462b      	mov	r3, r5
      }
 800ae16:	4618      	mov	r0, r3
 800ae18:	3708      	adds	r7, #8
 800ae1a:	46bd      	mov	sp, r7
 800ae1c:	bdb0      	pop	{r4, r5, r7, pc}

0800ae1e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj0EEEE14__visit_invokeESJ_SM_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800ae1e:	b5b0      	push	{r4, r5, r7, lr}
 800ae20:	b082      	sub	sp, #8
 800ae22:	af00      	add	r7, sp, #0
 800ae24:	6078      	str	r0, [r7, #4]
 800ae26:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 800ae28:	6878      	ldr	r0, [r7, #4]
 800ae2a:	f000 fc6e 	bl	800b70a <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800ae2e:	4604      	mov	r4, r0
 800ae30:	6838      	ldr	r0, [r7, #0]
 800ae32:	f000 fad3 	bl	800b3dc <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800ae36:	4603      	mov	r3, r0
 800ae38:	4619      	mov	r1, r3
 800ae3a:	4620      	mov	r0, r4
 800ae3c:	f7ff ffd9 	bl	800adf2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 800ae40:	462b      	mov	r3, r5
      }
 800ae42:	4618      	mov	r0, r3
 800ae44:	3708      	adds	r7, #8
 800ae46:	46bd      	mov	sp, r7
 800ae48:	bdb0      	pop	{r4, r5, r7, pc}

0800ae4a <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 800ae4a:	b580      	push	{r7, lr}
 800ae4c:	b082      	sub	sp, #8
 800ae4e:	af00      	add	r7, sp, #0
 800ae50:	7138      	strb	r0, [r7, #4]
 800ae52:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 800ae54:	6838      	ldr	r0, [r7, #0]
 800ae56:	f000 fad7 	bl	800b408 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800ae5a:	4603      	mov	r3, r0
 800ae5c:	4618      	mov	r0, r3
 800ae5e:	f7f8 fcef 	bl	8003840 <_ZNRSt8__detail9__variant14_UninitializedIiLb1EE6_M_getEv>
 800ae62:	4603      	mov	r3, r0
 800ae64:	4618      	mov	r0, r3
 800ae66:	3708      	adds	r7, #8
 800ae68:	46bd      	mov	sp, r7
 800ae6a:	bd80      	pop	{r7, pc}

0800ae6c <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800ae6c:	b590      	push	{r4, r7, lr}
 800ae6e:	b083      	sub	sp, #12
 800ae70:	af00      	add	r7, sp, #0
 800ae72:	7138      	strb	r0, [r7, #4]
 800ae74:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800ae76:	6838      	ldr	r0, [r7, #0]
 800ae78:	f000 fabb 	bl	800b3f2 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800ae7c:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800ae7e:	4619      	mov	r1, r3
 800ae80:	4620      	mov	r0, r4
 800ae82:	f7ff ffe2 	bl	800ae4a <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tILj0EEOT_>
 800ae86:	4603      	mov	r3, r0
    }
 800ae88:	4618      	mov	r0, r3
 800ae8a:	370c      	adds	r7, #12
 800ae8c:	46bd      	mov	sp, r7
 800ae8e:	bd90      	pop	{r4, r7, pc}

0800ae90 <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800ae90:	b590      	push	{r4, r7, lr}
 800ae92:	b083      	sub	sp, #12
 800ae94:	af00      	add	r7, sp, #0
 800ae96:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800ae98:	6878      	ldr	r0, [r7, #4]
 800ae9a:	f000 fa9f 	bl	800b3dc <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800ae9e:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800aea0:	4619      	mov	r1, r3
 800aea2:	4620      	mov	r0, r4
 800aea4:	f7ff ffe2 	bl	800ae6c <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800aea8:	4603      	mov	r3, r0
    }
 800aeaa:	4618      	mov	r0, r3
 800aeac:	370c      	adds	r7, #12
 800aeae:	46bd      	mov	sp, r7
 800aeb0:	bd90      	pop	{r4, r7, pc}

0800aeb2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESM_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 800aeb2:	b580      	push	{r7, lr}
 800aeb4:	b082      	sub	sp, #8
 800aeb6:	af00      	add	r7, sp, #0
 800aeb8:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 800aeba:	6878      	ldr	r0, [r7, #4]
 800aebc:	f000 fa8e 	bl	800b3dc <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800aec0:	4603      	mov	r3, r0
 800aec2:	4618      	mov	r0, r3
 800aec4:	f7ff ffe4 	bl	800ae90 <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 800aec8:	4603      	mov	r3, r0
	}
 800aeca:	4618      	mov	r0, r3
 800aecc:	3708      	adds	r7, #8
 800aece:	46bd      	mov	sp, r7
 800aed0:	bd80      	pop	{r7, pc}

0800aed2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESJ_SM_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 800aed2:	b5b0      	push	{r4, r5, r7, lr}
 800aed4:	b082      	sub	sp, #8
 800aed6:	af00      	add	r7, sp, #0
 800aed8:	6078      	str	r0, [r7, #4]
 800aeda:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 800aedc:	6878      	ldr	r0, [r7, #4]
 800aede:	f000 fc14 	bl	800b70a <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800aee2:	4604      	mov	r4, r0
 800aee4:	6838      	ldr	r0, [r7, #0]
 800aee6:	f000 fa79 	bl	800b3dc <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800aeea:	4603      	mov	r3, r0
 800aeec:	4618      	mov	r0, r3
 800aeee:	f7ff ffe0 	bl	800aeb2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESM_EEDcOT0_>
 800aef2:	4603      	mov	r3, r0
 800aef4:	4619      	mov	r1, r3
 800aef6:	4620      	mov	r0, r4
 800aef8:	f000 fc29 	bl	800b74e <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRiEENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>
		std::forward<_Variants>(__vars))...);
 800aefc:	462b      	mov	r3, r5
      }
 800aefe:	4618      	mov	r0, r3
 800af00:	3708      	adds	r7, #8
 800af02:	46bd      	mov	sp, r7
 800af04:	bdb0      	pop	{r4, r5, r7, pc}

0800af06 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESJ_SM_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800af06:	b5b0      	push	{r4, r5, r7, lr}
 800af08:	b082      	sub	sp, #8
 800af0a:	af00      	add	r7, sp, #0
 800af0c:	6078      	str	r0, [r7, #4]
 800af0e:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 800af10:	6878      	ldr	r0, [r7, #4]
 800af12:	f000 fbfa 	bl	800b70a <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800af16:	4604      	mov	r4, r0
 800af18:	6838      	ldr	r0, [r7, #0]
 800af1a:	f000 fa5f 	bl	800b3dc <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800af1e:	4603      	mov	r3, r0
 800af20:	4619      	mov	r1, r3
 800af22:	4620      	mov	r0, r4
 800af24:	f7ff ffd5 	bl	800aed2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 800af28:	462b      	mov	r3, r5
      }
 800af2a:	4618      	mov	r0, r3
 800af2c:	3708      	adds	r7, #8
 800af2e:	46bd      	mov	sp, r7
 800af30:	bdb0      	pop	{r4, r5, r7, pc}

0800af32 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj1EEEE14__visit_invokeESJ_SM_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800af32:	b5b0      	push	{r4, r5, r7, lr}
 800af34:	b082      	sub	sp, #8
 800af36:	af00      	add	r7, sp, #0
 800af38:	6078      	str	r0, [r7, #4]
 800af3a:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 800af3c:	6878      	ldr	r0, [r7, #4]
 800af3e:	f000 fbe4 	bl	800b70a <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800af42:	4604      	mov	r4, r0
 800af44:	6838      	ldr	r0, [r7, #0]
 800af46:	f000 fa49 	bl	800b3dc <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800af4a:	4603      	mov	r3, r0
 800af4c:	4619      	mov	r1, r3
 800af4e:	4620      	mov	r0, r4
 800af50:	f7ff ffd9 	bl	800af06 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 800af54:	462b      	mov	r3, r5
      }
 800af56:	4618      	mov	r0, r3
 800af58:	3708      	adds	r7, #8
 800af5a:	46bd      	mov	sp, r7
 800af5c:	bdb0      	pop	{r4, r5, r7, pc}

0800af5e <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJfNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 800af5e:	b580      	push	{r7, lr}
 800af60:	b082      	sub	sp, #8
 800af62:	af00      	add	r7, sp, #0
 800af64:	7138      	strb	r0, [r7, #4]
 800af66:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 800af68:	6838      	ldr	r0, [r7, #0]
 800af6a:	f000 fa58 	bl	800b41e <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800af6e:	4603      	mov	r3, r0
 800af70:	4618      	mov	r0, r3
 800af72:	f7f8 fc99 	bl	80038a8 <_ZNRSt8__detail9__variant14_UninitializedIfLb1EE6_M_getEv>
 800af76:	4603      	mov	r3, r0
 800af78:	4618      	mov	r0, r3
 800af7a:	3708      	adds	r7, #8
 800af7c:	46bd      	mov	sp, r7
 800af7e:	bd80      	pop	{r7, pc}

0800af80 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800af80:	b590      	push	{r4, r7, lr}
 800af82:	b083      	sub	sp, #12
 800af84:	af00      	add	r7, sp, #0
 800af86:	7138      	strb	r0, [r7, #4]
 800af88:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800af8a:	6838      	ldr	r0, [r7, #0]
 800af8c:	f000 fa3c 	bl	800b408 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800af90:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800af92:	4619      	mov	r1, r3
 800af94:	4620      	mov	r0, r4
 800af96:	f7ff ffe2 	bl	800af5e <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJfNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tILj0EEOT_>
 800af9a:	4603      	mov	r3, r0
    }
 800af9c:	4618      	mov	r0, r3
 800af9e:	370c      	adds	r7, #12
 800afa0:	46bd      	mov	sp, r7
 800afa2:	bd90      	pop	{r4, r7, pc}

0800afa4 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800afa4:	b590      	push	{r4, r7, lr}
 800afa6:	b083      	sub	sp, #12
 800afa8:	af00      	add	r7, sp, #0
 800afaa:	7138      	strb	r0, [r7, #4]
 800afac:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800afae:	6838      	ldr	r0, [r7, #0]
 800afb0:	f000 fa1f 	bl	800b3f2 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800afb4:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800afb6:	4619      	mov	r1, r3
 800afb8:	4620      	mov	r0, r4
 800afba:	f7ff ffe1 	bl	800af80 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800afbe:	4603      	mov	r3, r0
    }
 800afc0:	4618      	mov	r0, r3
 800afc2:	370c      	adds	r7, #12
 800afc4:	46bd      	mov	sp, r7
 800afc6:	bd90      	pop	{r4, r7, pc}

0800afc8 <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800afc8:	b590      	push	{r4, r7, lr}
 800afca:	b083      	sub	sp, #12
 800afcc:	af00      	add	r7, sp, #0
 800afce:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800afd0:	6878      	ldr	r0, [r7, #4]
 800afd2:	f000 fa03 	bl	800b3dc <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800afd6:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800afd8:	4619      	mov	r1, r3
 800afda:	4620      	mov	r0, r4
 800afdc:	f7ff ffe2 	bl	800afa4 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800afe0:	4603      	mov	r3, r0
    }
 800afe2:	4618      	mov	r0, r3
 800afe4:	370c      	adds	r7, #12
 800afe6:	46bd      	mov	sp, r7
 800afe8:	bd90      	pop	{r4, r7, pc}

0800afea <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESM_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 800afea:	b580      	push	{r7, lr}
 800afec:	b082      	sub	sp, #8
 800afee:	af00      	add	r7, sp, #0
 800aff0:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 800aff2:	6878      	ldr	r0, [r7, #4]
 800aff4:	f000 f9f2 	bl	800b3dc <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800aff8:	4603      	mov	r3, r0
 800affa:	4618      	mov	r0, r3
 800affc:	f7ff ffe4 	bl	800afc8 <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 800b000:	4603      	mov	r3, r0
	}
 800b002:	4618      	mov	r0, r3
 800b004:	3708      	adds	r7, #8
 800b006:	46bd      	mov	sp, r7
 800b008:	bd80      	pop	{r7, pc}

0800b00a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESJ_SM_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 800b00a:	b5b0      	push	{r4, r5, r7, lr}
 800b00c:	b082      	sub	sp, #8
 800b00e:	af00      	add	r7, sp, #0
 800b010:	6078      	str	r0, [r7, #4]
 800b012:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 800b014:	6878      	ldr	r0, [r7, #4]
 800b016:	f000 fb78 	bl	800b70a <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800b01a:	4604      	mov	r4, r0
 800b01c:	6838      	ldr	r0, [r7, #0]
 800b01e:	f000 f9dd 	bl	800b3dc <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800b022:	4603      	mov	r3, r0
 800b024:	4618      	mov	r0, r3
 800b026:	f7ff ffe0 	bl	800afea <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESM_EEDcOT0_>
 800b02a:	4603      	mov	r3, r0
 800b02c:	4619      	mov	r1, r3
 800b02e:	4620      	mov	r0, r4
 800b030:	f000 fba4 	bl	800b77c <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRfEENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>
		std::forward<_Variants>(__vars))...);
 800b034:	462b      	mov	r3, r5
      }
 800b036:	4618      	mov	r0, r3
 800b038:	3708      	adds	r7, #8
 800b03a:	46bd      	mov	sp, r7
 800b03c:	bdb0      	pop	{r4, r5, r7, pc}

0800b03e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESJ_SM_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800b03e:	b5b0      	push	{r4, r5, r7, lr}
 800b040:	b082      	sub	sp, #8
 800b042:	af00      	add	r7, sp, #0
 800b044:	6078      	str	r0, [r7, #4]
 800b046:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 800b048:	6878      	ldr	r0, [r7, #4]
 800b04a:	f000 fb5e 	bl	800b70a <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800b04e:	4604      	mov	r4, r0
 800b050:	6838      	ldr	r0, [r7, #0]
 800b052:	f000 f9c3 	bl	800b3dc <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800b056:	4603      	mov	r3, r0
 800b058:	4619      	mov	r1, r3
 800b05a:	4620      	mov	r0, r4
 800b05c:	f7ff ffd5 	bl	800b00a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 800b060:	462b      	mov	r3, r5
      }
 800b062:	4618      	mov	r0, r3
 800b064:	3708      	adds	r7, #8
 800b066:	46bd      	mov	sp, r7
 800b068:	bdb0      	pop	{r4, r5, r7, pc}

0800b06a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj2EEEE14__visit_invokeESJ_SM_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800b06a:	b5b0      	push	{r4, r5, r7, lr}
 800b06c:	b082      	sub	sp, #8
 800b06e:	af00      	add	r7, sp, #0
 800b070:	6078      	str	r0, [r7, #4]
 800b072:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 800b074:	6878      	ldr	r0, [r7, #4]
 800b076:	f000 fb48 	bl	800b70a <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800b07a:	4604      	mov	r4, r0
 800b07c:	6838      	ldr	r0, [r7, #0]
 800b07e:	f000 f9ad 	bl	800b3dc <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800b082:	4603      	mov	r3, r0
 800b084:	4619      	mov	r1, r3
 800b086:	4620      	mov	r0, r4
 800b088:	f7ff ffd9 	bl	800b03e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 800b08c:	462b      	mov	r3, r5
      }
 800b08e:	4618      	mov	r0, r3
 800b090:	3708      	adds	r7, #8
 800b092:	46bd      	mov	sp, r7
 800b094:	bdb0      	pop	{r4, r5, r7, pc}

0800b096 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 800b096:	b580      	push	{r7, lr}
 800b098:	b082      	sub	sp, #8
 800b09a:	af00      	add	r7, sp, #0
 800b09c:	7138      	strb	r0, [r7, #4]
 800b09e:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 800b0a0:	6838      	ldr	r0, [r7, #0]
 800b0a2:	f000 f9c7 	bl	800b434 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800b0a6:	4603      	mov	r3, r0
 800b0a8:	4618      	mov	r0, r3
 800b0aa:	f7f8 fc65 	bl	8003978 <_ZNRSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE6_M_getEv>
 800b0ae:	4603      	mov	r3, r0
 800b0b0:	4618      	mov	r0, r3
 800b0b2:	3708      	adds	r7, #8
 800b0b4:	46bd      	mov	sp, r7
 800b0b6:	bd80      	pop	{r7, pc}

0800b0b8 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJfNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800b0b8:	b590      	push	{r4, r7, lr}
 800b0ba:	b083      	sub	sp, #12
 800b0bc:	af00      	add	r7, sp, #0
 800b0be:	7138      	strb	r0, [r7, #4]
 800b0c0:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800b0c2:	6838      	ldr	r0, [r7, #0]
 800b0c4:	f000 f9ab 	bl	800b41e <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800b0c8:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800b0ca:	4619      	mov	r1, r3
 800b0cc:	4620      	mov	r0, r4
 800b0ce:	f7ff ffe2 	bl	800b096 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tILj0EEOT_>
 800b0d2:	4603      	mov	r3, r0
    }
 800b0d4:	4618      	mov	r0, r3
 800b0d6:	370c      	adds	r7, #12
 800b0d8:	46bd      	mov	sp, r7
 800b0da:	bd90      	pop	{r4, r7, pc}

0800b0dc <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800b0dc:	b590      	push	{r4, r7, lr}
 800b0de:	b083      	sub	sp, #12
 800b0e0:	af00      	add	r7, sp, #0
 800b0e2:	7138      	strb	r0, [r7, #4]
 800b0e4:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800b0e6:	6838      	ldr	r0, [r7, #0]
 800b0e8:	f000 f98e 	bl	800b408 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800b0ec:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800b0ee:	4619      	mov	r1, r3
 800b0f0:	4620      	mov	r0, r4
 800b0f2:	f7ff ffe1 	bl	800b0b8 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJfNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800b0f6:	4603      	mov	r3, r0
    }
 800b0f8:	4618      	mov	r0, r3
 800b0fa:	370c      	adds	r7, #12
 800b0fc:	46bd      	mov	sp, r7
 800b0fe:	bd90      	pop	{r4, r7, pc}

0800b100 <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800b100:	b590      	push	{r4, r7, lr}
 800b102:	b083      	sub	sp, #12
 800b104:	af00      	add	r7, sp, #0
 800b106:	7138      	strb	r0, [r7, #4]
 800b108:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800b10a:	6838      	ldr	r0, [r7, #0]
 800b10c:	f000 f971 	bl	800b3f2 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800b110:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800b112:	4619      	mov	r1, r3
 800b114:	4620      	mov	r0, r4
 800b116:	f7ff ffe1 	bl	800b0dc <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800b11a:	4603      	mov	r3, r0
    }
 800b11c:	4618      	mov	r0, r3
 800b11e:	370c      	adds	r7, #12
 800b120:	46bd      	mov	sp, r7
 800b122:	bd90      	pop	{r4, r7, pc}

0800b124 <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800b124:	b590      	push	{r4, r7, lr}
 800b126:	b083      	sub	sp, #12
 800b128:	af00      	add	r7, sp, #0
 800b12a:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800b12c:	6878      	ldr	r0, [r7, #4]
 800b12e:	f000 f955 	bl	800b3dc <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800b132:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800b134:	4619      	mov	r1, r3
 800b136:	4620      	mov	r0, r4
 800b138:	f7ff ffe2 	bl	800b100 <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800b13c:	4603      	mov	r3, r0
    }
 800b13e:	4618      	mov	r0, r3
 800b140:	370c      	adds	r7, #12
 800b142:	46bd      	mov	sp, r7
 800b144:	bd90      	pop	{r4, r7, pc}

0800b146 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESM_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 800b146:	b580      	push	{r7, lr}
 800b148:	b082      	sub	sp, #8
 800b14a:	af00      	add	r7, sp, #0
 800b14c:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 800b14e:	6878      	ldr	r0, [r7, #4]
 800b150:	f000 f944 	bl	800b3dc <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800b154:	4603      	mov	r3, r0
 800b156:	4618      	mov	r0, r3
 800b158:	f7ff ffe4 	bl	800b124 <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 800b15c:	4603      	mov	r3, r0
	}
 800b15e:	4618      	mov	r0, r3
 800b160:	3708      	adds	r7, #8
 800b162:	46bd      	mov	sp, r7
 800b164:	bd80      	pop	{r7, pc}

0800b166 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESJ_SM_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 800b166:	b5b0      	push	{r4, r5, r7, lr}
 800b168:	b082      	sub	sp, #8
 800b16a:	af00      	add	r7, sp, #0
 800b16c:	6078      	str	r0, [r7, #4]
 800b16e:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 800b170:	6878      	ldr	r0, [r7, #4]
 800b172:	f000 faca 	bl	800b70a <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800b176:	4604      	mov	r4, r0
 800b178:	6838      	ldr	r0, [r7, #0]
 800b17a:	f000 f92f 	bl	800b3dc <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800b17e:	4603      	mov	r3, r0
 800b180:	4618      	mov	r0, r3
 800b182:	f7ff ffe0 	bl	800b146 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESM_EEDcOT0_>
 800b186:	4603      	mov	r3, r0
 800b188:	4619      	mov	r1, r3
 800b18a:	4620      	mov	r0, r4
 800b18c:	f000 fb0d 	bl	800b7aa <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRS8_EENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>
		std::forward<_Variants>(__vars))...);
 800b190:	462b      	mov	r3, r5
      }
 800b192:	4618      	mov	r0, r3
 800b194:	3708      	adds	r7, #8
 800b196:	46bd      	mov	sp, r7
 800b198:	bdb0      	pop	{r4, r5, r7, pc}

0800b19a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESJ_SM_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800b19a:	b5b0      	push	{r4, r5, r7, lr}
 800b19c:	b082      	sub	sp, #8
 800b19e:	af00      	add	r7, sp, #0
 800b1a0:	6078      	str	r0, [r7, #4]
 800b1a2:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 800b1a4:	6878      	ldr	r0, [r7, #4]
 800b1a6:	f000 fab0 	bl	800b70a <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800b1aa:	4604      	mov	r4, r0
 800b1ac:	6838      	ldr	r0, [r7, #0]
 800b1ae:	f000 f915 	bl	800b3dc <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800b1b2:	4603      	mov	r3, r0
 800b1b4:	4619      	mov	r1, r3
 800b1b6:	4620      	mov	r0, r4
 800b1b8:	f7ff ffd5 	bl	800b166 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 800b1bc:	462b      	mov	r3, r5
      }
 800b1be:	4618      	mov	r0, r3
 800b1c0:	3708      	adds	r7, #8
 800b1c2:	46bd      	mov	sp, r7
 800b1c4:	bdb0      	pop	{r4, r5, r7, pc}

0800b1c6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj3EEEE14__visit_invokeESJ_SM_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800b1c6:	b5b0      	push	{r4, r5, r7, lr}
 800b1c8:	b082      	sub	sp, #8
 800b1ca:	af00      	add	r7, sp, #0
 800b1cc:	6078      	str	r0, [r7, #4]
 800b1ce:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 800b1d0:	6878      	ldr	r0, [r7, #4]
 800b1d2:	f000 fa9a 	bl	800b70a <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800b1d6:	4604      	mov	r4, r0
 800b1d8:	6838      	ldr	r0, [r7, #0]
 800b1da:	f000 f8ff 	bl	800b3dc <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800b1de:	4603      	mov	r3, r0
 800b1e0:	4619      	mov	r1, r3
 800b1e2:	4620      	mov	r0, r4
 800b1e4:	f7ff ffd9 	bl	800b19a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 800b1e8:	462b      	mov	r3, r5
      }
 800b1ea:	4618      	mov	r0, r3
 800b1ec:	3708      	adds	r7, #8
 800b1ee:	46bd      	mov	sp, r7
 800b1f0:	bdb0      	pop	{r4, r5, r7, pc}

0800b1f2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj4EEEE28__element_by_index_or_cookieILj4ESM_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 800b1f2:	b580      	push	{r7, lr}
 800b1f4:	b082      	sub	sp, #8
 800b1f6:	af00      	add	r7, sp, #0
 800b1f8:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 800b1fa:	6878      	ldr	r0, [r7, #4]
 800b1fc:	f000 f8ee 	bl	800b3dc <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800b200:	4603      	mov	r3, r0
 800b202:	4618      	mov	r0, r3
 800b204:	f7ff fa6d 	bl	800a6e2 <_ZNSt8__detail9__variant5__getILj4ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 800b208:	4603      	mov	r3, r0
	}
 800b20a:	4618      	mov	r0, r3
 800b20c:	3708      	adds	r7, #8
 800b20e:	46bd      	mov	sp, r7
 800b210:	bd80      	pop	{r7, pc}

0800b212 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj4EEEE19__visit_invoke_implESJ_SM_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 800b212:	b5b0      	push	{r4, r5, r7, lr}
 800b214:	b082      	sub	sp, #8
 800b216:	af00      	add	r7, sp, #0
 800b218:	6078      	str	r0, [r7, #4]
 800b21a:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 800b21c:	6878      	ldr	r0, [r7, #4]
 800b21e:	f000 fa74 	bl	800b70a <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800b222:	4604      	mov	r4, r0
 800b224:	6838      	ldr	r0, [r7, #0]
 800b226:	f000 f8d9 	bl	800b3dc <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800b22a:	4603      	mov	r3, r0
 800b22c:	4618      	mov	r0, r3
 800b22e:	f7ff ffe0 	bl	800b1f2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj4EEEE28__element_by_index_or_cookieILj4ESM_EEDcOT0_>
 800b232:	4603      	mov	r3, r0
 800b234:	4619      	mov	r1, r3
 800b236:	4620      	mov	r0, r4
 800b238:	f000 face 	bl	800b7d8 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRSA_EENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>
		std::forward<_Variants>(__vars))...);
 800b23c:	462b      	mov	r3, r5
      }
 800b23e:	4618      	mov	r0, r3
 800b240:	3708      	adds	r7, #8
 800b242:	46bd      	mov	sp, r7
 800b244:	bdb0      	pop	{r4, r5, r7, pc}

0800b246 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj4EEEE17__do_visit_invokeESJ_SM_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800b246:	b5b0      	push	{r4, r5, r7, lr}
 800b248:	b082      	sub	sp, #8
 800b24a:	af00      	add	r7, sp, #0
 800b24c:	6078      	str	r0, [r7, #4]
 800b24e:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 800b250:	6878      	ldr	r0, [r7, #4]
 800b252:	f000 fa5a 	bl	800b70a <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800b256:	4604      	mov	r4, r0
 800b258:	6838      	ldr	r0, [r7, #0]
 800b25a:	f000 f8bf 	bl	800b3dc <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800b25e:	4603      	mov	r3, r0
 800b260:	4619      	mov	r1, r3
 800b262:	4620      	mov	r0, r4
 800b264:	f7ff ffd5 	bl	800b212 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj4EEEE19__visit_invoke_implESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 800b268:	462b      	mov	r3, r5
      }
 800b26a:	4618      	mov	r0, r3
 800b26c:	3708      	adds	r7, #8
 800b26e:	46bd      	mov	sp, r7
 800b270:	bdb0      	pop	{r4, r5, r7, pc}

0800b272 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj4EEEE14__visit_invokeESJ_SM_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800b272:	b5b0      	push	{r4, r5, r7, lr}
 800b274:	b082      	sub	sp, #8
 800b276:	af00      	add	r7, sp, #0
 800b278:	6078      	str	r0, [r7, #4]
 800b27a:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 800b27c:	6878      	ldr	r0, [r7, #4]
 800b27e:	f000 fa44 	bl	800b70a <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800b282:	4604      	mov	r4, r0
 800b284:	6838      	ldr	r0, [r7, #0]
 800b286:	f000 f8a9 	bl	800b3dc <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800b28a:	4603      	mov	r3, r0
 800b28c:	4619      	mov	r1, r3
 800b28e:	4620      	mov	r0, r4
 800b290:	f7ff ffd9 	bl	800b246 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj4EEEE17__do_visit_invokeESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 800b294:	462b      	mov	r3, r5
      }
 800b296:	4618      	mov	r0, r3
 800b298:	3708      	adds	r7, #8
 800b29a:	46bd      	mov	sp, r7
 800b29c:	bdb0      	pop	{r4, r5, r7, pc}

0800b29e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj5EEEE28__element_by_index_or_cookieILj5ESM_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 800b29e:	b580      	push	{r7, lr}
 800b2a0:	b082      	sub	sp, #8
 800b2a2:	af00      	add	r7, sp, #0
 800b2a4:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 800b2a6:	6878      	ldr	r0, [r7, #4]
 800b2a8:	f000 f898 	bl	800b3dc <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800b2ac:	4603      	mov	r3, r0
 800b2ae:	4618      	mov	r0, r3
 800b2b0:	f7ff faaf 	bl	800a812 <_ZNSt8__detail9__variant5__getILj5ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 800b2b4:	4603      	mov	r3, r0
	}
 800b2b6:	4618      	mov	r0, r3
 800b2b8:	3708      	adds	r7, #8
 800b2ba:	46bd      	mov	sp, r7
 800b2bc:	bd80      	pop	{r7, pc}

0800b2be <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj5EEEE19__visit_invoke_implESJ_SM_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 800b2be:	b5b0      	push	{r4, r5, r7, lr}
 800b2c0:	b082      	sub	sp, #8
 800b2c2:	af00      	add	r7, sp, #0
 800b2c4:	6078      	str	r0, [r7, #4]
 800b2c6:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 800b2c8:	6878      	ldr	r0, [r7, #4]
 800b2ca:	f000 fa1e 	bl	800b70a <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800b2ce:	4604      	mov	r4, r0
 800b2d0:	6838      	ldr	r0, [r7, #0]
 800b2d2:	f000 f883 	bl	800b3dc <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800b2d6:	4603      	mov	r3, r0
 800b2d8:	4618      	mov	r0, r3
 800b2da:	f7ff ffe0 	bl	800b29e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj5EEEE28__element_by_index_or_cookieILj5ESM_EEDcOT0_>
 800b2de:	4603      	mov	r3, r0
 800b2e0:	4619      	mov	r1, r3
 800b2e2:	4620      	mov	r0, r4
 800b2e4:	f000 fa8f 	bl	800b806 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRSC_EENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>
		std::forward<_Variants>(__vars))...);
 800b2e8:	462b      	mov	r3, r5
      }
 800b2ea:	4618      	mov	r0, r3
 800b2ec:	3708      	adds	r7, #8
 800b2ee:	46bd      	mov	sp, r7
 800b2f0:	bdb0      	pop	{r4, r5, r7, pc}

0800b2f2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj5EEEE17__do_visit_invokeESJ_SM_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800b2f2:	b5b0      	push	{r4, r5, r7, lr}
 800b2f4:	b082      	sub	sp, #8
 800b2f6:	af00      	add	r7, sp, #0
 800b2f8:	6078      	str	r0, [r7, #4]
 800b2fa:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 800b2fc:	6878      	ldr	r0, [r7, #4]
 800b2fe:	f000 fa04 	bl	800b70a <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800b302:	4604      	mov	r4, r0
 800b304:	6838      	ldr	r0, [r7, #0]
 800b306:	f000 f869 	bl	800b3dc <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800b30a:	4603      	mov	r3, r0
 800b30c:	4619      	mov	r1, r3
 800b30e:	4620      	mov	r0, r4
 800b310:	f7ff ffd5 	bl	800b2be <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj5EEEE19__visit_invoke_implESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 800b314:	462b      	mov	r3, r5
      }
 800b316:	4618      	mov	r0, r3
 800b318:	3708      	adds	r7, #8
 800b31a:	46bd      	mov	sp, r7
 800b31c:	bdb0      	pop	{r4, r5, r7, pc}

0800b31e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj5EEEE14__visit_invokeESJ_SM_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800b31e:	b5b0      	push	{r4, r5, r7, lr}
 800b320:	b082      	sub	sp, #8
 800b322:	af00      	add	r7, sp, #0
 800b324:	6078      	str	r0, [r7, #4]
 800b326:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 800b328:	6878      	ldr	r0, [r7, #4]
 800b32a:	f000 f9ee 	bl	800b70a <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800b32e:	4604      	mov	r4, r0
 800b330:	6838      	ldr	r0, [r7, #0]
 800b332:	f000 f853 	bl	800b3dc <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800b336:	4603      	mov	r3, r0
 800b338:	4619      	mov	r1, r3
 800b33a:	4620      	mov	r0, r4
 800b33c:	f7ff ffd9 	bl	800b2f2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj5EEEE17__do_visit_invokeESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 800b340:	462b      	mov	r3, r5
      }
 800b342:	4618      	mov	r0, r3
 800b344:	3708      	adds	r7, #8
 800b346:	46bd      	mov	sp, r7
 800b348:	bdb0      	pop	{r4, r5, r7, pc}

0800b34a <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifS9_SB_SD_EEEJLj6EEE9_M_accessIJEEERKSN_jDpT_>:
	_M_access(size_t __first_index, _Args... __rest_indices) const
 800b34a:	b580      	push	{r7, lr}
 800b34c:	b082      	sub	sp, #8
 800b34e:	af00      	add	r7, sp, #0
 800b350:	6078      	str	r0, [r7, #4]
 800b352:	6039      	str	r1, [r7, #0]
	    ._M_access(__rest_indices...);
 800b354:	683b      	ldr	r3, [r7, #0]
 800b356:	009b      	lsls	r3, r3, #2
 800b358:	687a      	ldr	r2, [r7, #4]
 800b35a:	4413      	add	r3, r2
 800b35c:	4618      	mov	r0, r3
 800b35e:	f000 fa69 	bl	800b834 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifS9_SB_SD_EEEJEE9_M_accessEv>
 800b362:	4603      	mov	r3, r0
	}
 800b364:	4618      	mov	r0, r3
 800b366:	3708      	adds	r7, #8
 800b368:	46bd      	mov	sp, r7
 800b36a:	bd80      	pop	{r7, pc}

0800b36c <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRSt7variantIJbifS8_SA_SC_EEEEDcOT1_DpOT2_>:
    __do_visit(_Visitor&& __visitor, _Variants&&... __variants)
 800b36c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b36e:	b085      	sub	sp, #20
 800b370:	af00      	add	r7, sp, #0
 800b372:	6078      	str	r0, [r7, #4]
 800b374:	6039      	str	r1, [r7, #0]
      constexpr auto& __vtable = __detail::__variant::__gen_vtable<
 800b376:	4b0f      	ldr	r3, [pc, #60]	; (800b3b4 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRSt7variantIJbifS8_SA_SC_EEEEDcOT1_DpOT2_+0x48>)
 800b378:	60fb      	str	r3, [r7, #12]
      auto __func_ptr = __vtable._M_access(__variants.index()...);
 800b37a:	6838      	ldr	r0, [r7, #0]
 800b37c:	f7fe fecb 	bl	800a116 <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 800b380:	4603      	mov	r3, r0
 800b382:	4619      	mov	r1, r3
 800b384:	68f8      	ldr	r0, [r7, #12]
 800b386:	f7ff ffe0 	bl	800b34a <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifS9_SB_SD_EEEJLj6EEE9_M_accessIJEEERKSN_jDpT_>
 800b38a:	4603      	mov	r3, r0
 800b38c:	681b      	ldr	r3, [r3, #0]
 800b38e:	60bb      	str	r3, [r7, #8]
      return (*__func_ptr)(std::forward<_Visitor>(__visitor),
 800b390:	68bc      	ldr	r4, [r7, #8]
 800b392:	6878      	ldr	r0, [r7, #4]
 800b394:	f000 fa59 	bl	800b84a <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800b398:	4605      	mov	r5, r0
 800b39a:	6838      	ldr	r0, [r7, #0]
 800b39c:	f000 f81e 	bl	800b3dc <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800b3a0:	4603      	mov	r3, r0
 800b3a2:	4619      	mov	r1, r3
 800b3a4:	4628      	mov	r0, r5
 800b3a6:	47a0      	blx	r4
			   std::forward<_Variants>(__variants)...);
 800b3a8:	4633      	mov	r3, r6
    }
 800b3aa:	4618      	mov	r0, r3
 800b3ac:	3714      	adds	r7, #20
 800b3ae:	46bd      	mov	sp, r7
 800b3b0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b3b2:	bf00      	nop
 800b3b4:	0802a198 	.word	0x0802a198

0800b3b8 <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEv>:
      constexpr void _M_reset_impl()
 800b3b8:	b580      	push	{r7, lr}
 800b3ba:	b084      	sub	sp, #16
 800b3bc:	af00      	add	r7, sp, #0
 800b3be:	6078      	str	r0, [r7, #4]
	__do_visit([](auto&& __this_mem) mutable
 800b3c0:	6878      	ldr	r0, [r7, #4]
 800b3c2:	f7ff fcbf 	bl	800ad44 <_ZSt14__variant_castIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callERNSt8__detail9__variant16_Variant_storageILb0EJbifS5_S7_S9_EEEEDcOT0_>
 800b3c6:	4602      	mov	r2, r0
 800b3c8:	f107 030c 	add.w	r3, r7, #12
 800b3cc:	4611      	mov	r1, r2
 800b3ce:	4618      	mov	r0, r3
 800b3d0:	f7ff ffcc 	bl	800b36c <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRSt7variantIJbifS8_SA_SC_EEEEDcOT1_DpOT2_>
      }
 800b3d4:	bf00      	nop
 800b3d6:	3710      	adds	r7, #16
 800b3d8:	46bd      	mov	sp, r7
 800b3da:	bd80      	pop	{r7, pc}

0800b3dc <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800b3dc:	b480      	push	{r7}
 800b3de:	b083      	sub	sp, #12
 800b3e0:	af00      	add	r7, sp, #0
 800b3e2:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800b3e4:	687b      	ldr	r3, [r7, #4]
 800b3e6:	4618      	mov	r0, r3
 800b3e8:	370c      	adds	r7, #12
 800b3ea:	46bd      	mov	sp, r7
 800b3ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b3f0:	4770      	bx	lr

0800b3f2 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800b3f2:	b480      	push	{r7}
 800b3f4:	b083      	sub	sp, #12
 800b3f6:	af00      	add	r7, sp, #0
 800b3f8:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800b3fa:	687b      	ldr	r3, [r7, #4]
 800b3fc:	4618      	mov	r0, r3
 800b3fe:	370c      	adds	r7, #12
 800b400:	46bd      	mov	sp, r7
 800b402:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b406:	4770      	bx	lr

0800b408 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800b408:	b480      	push	{r7}
 800b40a:	b083      	sub	sp, #12
 800b40c:	af00      	add	r7, sp, #0
 800b40e:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800b410:	687b      	ldr	r3, [r7, #4]
 800b412:	4618      	mov	r0, r3
 800b414:	370c      	adds	r7, #12
 800b416:	46bd      	mov	sp, r7
 800b418:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b41c:	4770      	bx	lr

0800b41e <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800b41e:	b480      	push	{r7}
 800b420:	b083      	sub	sp, #12
 800b422:	af00      	add	r7, sp, #0
 800b424:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800b426:	687b      	ldr	r3, [r7, #4]
 800b428:	4618      	mov	r0, r3
 800b42a:	370c      	adds	r7, #12
 800b42c:	46bd      	mov	sp, r7
 800b42e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b432:	4770      	bx	lr

0800b434 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800b434:	b480      	push	{r7}
 800b436:	b083      	sub	sp, #12
 800b438:	af00      	add	r7, sp, #0
 800b43a:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800b43c:	687b      	ldr	r3, [r7, #4]
 800b43e:	4618      	mov	r0, r3
 800b440:	370c      	adds	r7, #12
 800b442:	46bd      	mov	sp, r7
 800b444:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b448:	4770      	bx	lr

0800b44a <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP8VariableP13Function_callEEEEOT_RNSt16remove_referenceIS9_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800b44a:	b480      	push	{r7}
 800b44c:	b083      	sub	sp, #12
 800b44e:	af00      	add	r7, sp, #0
 800b450:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800b452:	687b      	ldr	r3, [r7, #4]
 800b454:	4618      	mov	r0, r3
 800b456:	370c      	adds	r7, #12
 800b458:	46bd      	mov	sp, r7
 800b45a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b45e:	4770      	bx	lr

0800b460 <_ZNRSt8__detail9__variant14_UninitializedIP8VariableLb1EE6_M_getEv>:
      constexpr _Type& _M_get() & noexcept
 800b460:	b480      	push	{r7}
 800b462:	b083      	sub	sp, #12
 800b464:	af00      	add	r7, sp, #0
 800b466:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 800b468:	687b      	ldr	r3, [r7, #4]
 800b46a:	4618      	mov	r0, r3
 800b46c:	370c      	adds	r7, #12
 800b46e:	46bd      	mov	sp, r7
 800b470:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b474:	4770      	bx	lr

0800b476 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP13Function_callEEEEOT_RNSt16remove_referenceIS7_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800b476:	b480      	push	{r7}
 800b478:	b083      	sub	sp, #12
 800b47a:	af00      	add	r7, sp, #0
 800b47c:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800b47e:	687b      	ldr	r3, [r7, #4]
 800b480:	4618      	mov	r0, r3
 800b482:	370c      	adds	r7, #12
 800b484:	46bd      	mov	sp, r7
 800b486:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b48a:	4770      	bx	lr

0800b48c <_ZSt7forwardIRSt7variantIJP17Primal_expressionP10ExpressionEEEOT_RNSt16remove_referenceIS7_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800b48c:	b480      	push	{r7}
 800b48e:	b083      	sub	sp, #12
 800b490:	af00      	add	r7, sp, #0
 800b492:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800b494:	687b      	ldr	r3, [r7, #4]
 800b496:	4618      	mov	r0, r3
 800b498:	370c      	adds	r7, #12
 800b49a:	46bd      	mov	sp, r7
 800b49c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b4a0:	4770      	bx	lr

0800b4a2 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP17Primal_expressionP10ExpressionEEEEOT_RNSt16remove_referenceIS9_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800b4a2:	b480      	push	{r7}
 800b4a4:	b083      	sub	sp, #12
 800b4a6:	af00      	add	r7, sp, #0
 800b4a8:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800b4aa:	687b      	ldr	r3, [r7, #4]
 800b4ac:	4618      	mov	r0, r3
 800b4ae:	370c      	adds	r7, #12
 800b4b0:	46bd      	mov	sp, r7
 800b4b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b4b6:	4770      	bx	lr

0800b4b8 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP10ExpressionEEEEOT_RNSt16remove_referenceIS7_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800b4b8:	b480      	push	{r7}
 800b4ba:	b083      	sub	sp, #12
 800b4bc:	af00      	add	r7, sp, #0
 800b4be:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800b4c0:	687b      	ldr	r3, [r7, #4]
 800b4c2:	4618      	mov	r0, r3
 800b4c4:	370c      	adds	r7, #12
 800b4c6:	46bd      	mov	sp, r7
 800b4c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b4cc:	4770      	bx	lr

0800b4ce <_ZNRSt8__detail9__variant14_UninitializedIP10ExpressionLb1EE6_M_getEv>:
      constexpr _Type& _M_get() & noexcept
 800b4ce:	b480      	push	{r7}
 800b4d0:	b083      	sub	sp, #12
 800b4d2:	af00      	add	r7, sp, #0
 800b4d4:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 800b4d6:	687b      	ldr	r3, [r7, #4]
 800b4d8:	4618      	mov	r0, r3
 800b4da:	370c      	adds	r7, #12
 800b4dc:	46bd      	mov	sp, r7
 800b4de:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b4e2:	4770      	bx	lr

0800b4e4 <_ZNRSt8__detail9__variant14_UninitializedIP17Primal_expressionLb1EE6_M_getEv>:
      constexpr _Type& _M_get() & noexcept
 800b4e4:	b480      	push	{r7}
 800b4e6:	b083      	sub	sp, #12
 800b4e8:	af00      	add	r7, sp, #0
 800b4ea:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 800b4ec:	687b      	ldr	r3, [r7, #4]
 800b4ee:	4618      	mov	r0, r3
 800b4f0:	370c      	adds	r7, #12
 800b4f2:	46bd      	mov	sp, r7
 800b4f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b4f8:	4770      	bx	lr

0800b4fa <_ZNSaIP16Power_expressionED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
 800b4fa:	b580      	push	{r7, lr}
 800b4fc:	b082      	sub	sp, #8
 800b4fe:	af00      	add	r7, sp, #0
 800b500:	6078      	str	r0, [r7, #4]
 800b502:	6878      	ldr	r0, [r7, #4]
 800b504:	f000 f9ac 	bl	800b860 <_ZN9__gnu_cxx13new_allocatorIP16Power_expressionED1Ev>
 800b508:	687b      	ldr	r3, [r7, #4]
 800b50a:	4618      	mov	r0, r3
 800b50c:	3708      	adds	r7, #8
 800b50e:	46bd      	mov	sp, r7
 800b510:	bd80      	pop	{r7, pc}

0800b512 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE13_M_deallocateEPS1_j>:
      _M_deallocate(pointer __p, size_t __n)
 800b512:	b580      	push	{r7, lr}
 800b514:	b084      	sub	sp, #16
 800b516:	af00      	add	r7, sp, #0
 800b518:	60f8      	str	r0, [r7, #12]
 800b51a:	60b9      	str	r1, [r7, #8]
 800b51c:	607a      	str	r2, [r7, #4]
	if (__p)
 800b51e:	68bb      	ldr	r3, [r7, #8]
 800b520:	2b00      	cmp	r3, #0
 800b522:	d005      	beq.n	800b530 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE13_M_deallocateEPS1_j+0x1e>
	  _Tr::deallocate(_M_impl, __p, __n);
 800b524:	68fb      	ldr	r3, [r7, #12]
 800b526:	687a      	ldr	r2, [r7, #4]
 800b528:	68b9      	ldr	r1, [r7, #8]
 800b52a:	4618      	mov	r0, r3
 800b52c:	f000 f9a3 	bl	800b876 <_ZNSt16allocator_traitsISaIP16Power_expressionEE10deallocateERS2_PS1_j>
      }
 800b530:	bf00      	nop
 800b532:	3710      	adds	r7, #16
 800b534:	46bd      	mov	sp, r7
 800b536:	bd80      	pop	{r7, pc}

0800b538 <_ZSt8_DestroyIPP16Power_expressionEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 800b538:	b580      	push	{r7, lr}
 800b53a:	b082      	sub	sp, #8
 800b53c:	af00      	add	r7, sp, #0
 800b53e:	6078      	str	r0, [r7, #4]
 800b540:	6039      	str	r1, [r7, #0]
	__destroy(__first, __last);
 800b542:	6839      	ldr	r1, [r7, #0]
 800b544:	6878      	ldr	r0, [r7, #4]
 800b546:	f000 f9a5 	bl	800b894 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP16Power_expressionEEvT_S5_>
    }
 800b54a:	bf00      	nop
 800b54c:	3708      	adds	r7, #8
 800b54e:	46bd      	mov	sp, r7
 800b550:	bd80      	pop	{r7, pc}

0800b552 <_ZNSaI13mult_operatorED1Ev>:
 800b552:	b580      	push	{r7, lr}
 800b554:	b082      	sub	sp, #8
 800b556:	af00      	add	r7, sp, #0
 800b558:	6078      	str	r0, [r7, #4]
 800b55a:	6878      	ldr	r0, [r7, #4]
 800b55c:	f000 f9a5 	bl	800b8aa <_ZN9__gnu_cxx13new_allocatorI13mult_operatorED1Ev>
 800b560:	687b      	ldr	r3, [r7, #4]
 800b562:	4618      	mov	r0, r3
 800b564:	3708      	adds	r7, #8
 800b566:	46bd      	mov	sp, r7
 800b568:	bd80      	pop	{r7, pc}

0800b56a <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE13_M_deallocateEPS0_j>:
      _M_deallocate(pointer __p, size_t __n)
 800b56a:	b580      	push	{r7, lr}
 800b56c:	b084      	sub	sp, #16
 800b56e:	af00      	add	r7, sp, #0
 800b570:	60f8      	str	r0, [r7, #12]
 800b572:	60b9      	str	r1, [r7, #8]
 800b574:	607a      	str	r2, [r7, #4]
	if (__p)
 800b576:	68bb      	ldr	r3, [r7, #8]
 800b578:	2b00      	cmp	r3, #0
 800b57a:	d005      	beq.n	800b588 <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE13_M_deallocateEPS0_j+0x1e>
	  _Tr::deallocate(_M_impl, __p, __n);
 800b57c:	68fb      	ldr	r3, [r7, #12]
 800b57e:	687a      	ldr	r2, [r7, #4]
 800b580:	68b9      	ldr	r1, [r7, #8]
 800b582:	4618      	mov	r0, r3
 800b584:	f000 f99c 	bl	800b8c0 <_ZNSt16allocator_traitsISaI13mult_operatorEE10deallocateERS1_PS0_j>
      }
 800b588:	bf00      	nop
 800b58a:	3710      	adds	r7, #16
 800b58c:	46bd      	mov	sp, r7
 800b58e:	bd80      	pop	{r7, pc}

0800b590 <_ZSt8_DestroyIP13mult_operatorEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 800b590:	b580      	push	{r7, lr}
 800b592:	b082      	sub	sp, #8
 800b594:	af00      	add	r7, sp, #0
 800b596:	6078      	str	r0, [r7, #4]
 800b598:	6039      	str	r1, [r7, #0]
	__destroy(__first, __last);
 800b59a:	6839      	ldr	r1, [r7, #0]
 800b59c:	6878      	ldr	r0, [r7, #4]
 800b59e:	f000 f99e 	bl	800b8de <_ZNSt12_Destroy_auxILb1EE9__destroyIP13mult_operatorEEvT_S4_>
    }
 800b5a2:	bf00      	nop
 800b5a4:	3708      	adds	r7, #8
 800b5a6:	46bd      	mov	sp, r7
 800b5a8:	bd80      	pop	{r7, pc}

0800b5aa <_ZNSaIP19Multiply_expressionED1Ev>:
 800b5aa:	b580      	push	{r7, lr}
 800b5ac:	b082      	sub	sp, #8
 800b5ae:	af00      	add	r7, sp, #0
 800b5b0:	6078      	str	r0, [r7, #4]
 800b5b2:	6878      	ldr	r0, [r7, #4]
 800b5b4:	f000 f99e 	bl	800b8f4 <_ZN9__gnu_cxx13new_allocatorIP19Multiply_expressionED1Ev>
 800b5b8:	687b      	ldr	r3, [r7, #4]
 800b5ba:	4618      	mov	r0, r3
 800b5bc:	3708      	adds	r7, #8
 800b5be:	46bd      	mov	sp, r7
 800b5c0:	bd80      	pop	{r7, pc}

0800b5c2 <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE13_M_deallocateEPS1_j>:
      _M_deallocate(pointer __p, size_t __n)
 800b5c2:	b580      	push	{r7, lr}
 800b5c4:	b084      	sub	sp, #16
 800b5c6:	af00      	add	r7, sp, #0
 800b5c8:	60f8      	str	r0, [r7, #12]
 800b5ca:	60b9      	str	r1, [r7, #8]
 800b5cc:	607a      	str	r2, [r7, #4]
	if (__p)
 800b5ce:	68bb      	ldr	r3, [r7, #8]
 800b5d0:	2b00      	cmp	r3, #0
 800b5d2:	d005      	beq.n	800b5e0 <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE13_M_deallocateEPS1_j+0x1e>
	  _Tr::deallocate(_M_impl, __p, __n);
 800b5d4:	68fb      	ldr	r3, [r7, #12]
 800b5d6:	687a      	ldr	r2, [r7, #4]
 800b5d8:	68b9      	ldr	r1, [r7, #8]
 800b5da:	4618      	mov	r0, r3
 800b5dc:	f000 f995 	bl	800b90a <_ZNSt16allocator_traitsISaIP19Multiply_expressionEE10deallocateERS2_PS1_j>
      }
 800b5e0:	bf00      	nop
 800b5e2:	3710      	adds	r7, #16
 800b5e4:	46bd      	mov	sp, r7
 800b5e6:	bd80      	pop	{r7, pc}

0800b5e8 <_ZSt8_DestroyIPP19Multiply_expressionEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 800b5e8:	b580      	push	{r7, lr}
 800b5ea:	b082      	sub	sp, #8
 800b5ec:	af00      	add	r7, sp, #0
 800b5ee:	6078      	str	r0, [r7, #4]
 800b5f0:	6039      	str	r1, [r7, #0]
	__destroy(__first, __last);
 800b5f2:	6839      	ldr	r1, [r7, #0]
 800b5f4:	6878      	ldr	r0, [r7, #4]
 800b5f6:	f000 f997 	bl	800b928 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP19Multiply_expressionEEvT_S5_>
    }
 800b5fa:	bf00      	nop
 800b5fc:	3708      	adds	r7, #8
 800b5fe:	46bd      	mov	sp, r7
 800b600:	bd80      	pop	{r7, pc}

0800b602 <_ZNSaI12sum_operatorED1Ev>:
 800b602:	b580      	push	{r7, lr}
 800b604:	b082      	sub	sp, #8
 800b606:	af00      	add	r7, sp, #0
 800b608:	6078      	str	r0, [r7, #4]
 800b60a:	6878      	ldr	r0, [r7, #4]
 800b60c:	f000 f997 	bl	800b93e <_ZN9__gnu_cxx13new_allocatorI12sum_operatorED1Ev>
 800b610:	687b      	ldr	r3, [r7, #4]
 800b612:	4618      	mov	r0, r3
 800b614:	3708      	adds	r7, #8
 800b616:	46bd      	mov	sp, r7
 800b618:	bd80      	pop	{r7, pc}

0800b61a <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE13_M_deallocateEPS0_j>:
      _M_deallocate(pointer __p, size_t __n)
 800b61a:	b580      	push	{r7, lr}
 800b61c:	b084      	sub	sp, #16
 800b61e:	af00      	add	r7, sp, #0
 800b620:	60f8      	str	r0, [r7, #12]
 800b622:	60b9      	str	r1, [r7, #8]
 800b624:	607a      	str	r2, [r7, #4]
	if (__p)
 800b626:	68bb      	ldr	r3, [r7, #8]
 800b628:	2b00      	cmp	r3, #0
 800b62a:	d005      	beq.n	800b638 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE13_M_deallocateEPS0_j+0x1e>
	  _Tr::deallocate(_M_impl, __p, __n);
 800b62c:	68fb      	ldr	r3, [r7, #12]
 800b62e:	687a      	ldr	r2, [r7, #4]
 800b630:	68b9      	ldr	r1, [r7, #8]
 800b632:	4618      	mov	r0, r3
 800b634:	f000 f98e 	bl	800b954 <_ZNSt16allocator_traitsISaI12sum_operatorEE10deallocateERS1_PS0_j>
      }
 800b638:	bf00      	nop
 800b63a:	3710      	adds	r7, #16
 800b63c:	46bd      	mov	sp, r7
 800b63e:	bd80      	pop	{r7, pc}

0800b640 <_ZSt8_DestroyIP12sum_operatorEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 800b640:	b580      	push	{r7, lr}
 800b642:	b082      	sub	sp, #8
 800b644:	af00      	add	r7, sp, #0
 800b646:	6078      	str	r0, [r7, #4]
 800b648:	6039      	str	r1, [r7, #0]
	__destroy(__first, __last);
 800b64a:	6839      	ldr	r1, [r7, #0]
 800b64c:	6878      	ldr	r0, [r7, #4]
 800b64e:	f000 f990 	bl	800b972 <_ZNSt12_Destroy_auxILb1EE9__destroyIP12sum_operatorEEvT_S4_>
    }
 800b652:	bf00      	nop
 800b654:	3708      	adds	r7, #8
 800b656:	46bd      	mov	sp, r7
 800b658:	bd80      	pop	{r7, pc}

0800b65a <_ZNSaIP18Compare_expressionED1Ev>:
 800b65a:	b580      	push	{r7, lr}
 800b65c:	b082      	sub	sp, #8
 800b65e:	af00      	add	r7, sp, #0
 800b660:	6078      	str	r0, [r7, #4]
 800b662:	6878      	ldr	r0, [r7, #4]
 800b664:	f000 f990 	bl	800b988 <_ZN9__gnu_cxx13new_allocatorIP18Compare_expressionED1Ev>
 800b668:	687b      	ldr	r3, [r7, #4]
 800b66a:	4618      	mov	r0, r3
 800b66c:	3708      	adds	r7, #8
 800b66e:	46bd      	mov	sp, r7
 800b670:	bd80      	pop	{r7, pc}

0800b672 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE13_M_deallocateEPS1_j>:
      _M_deallocate(pointer __p, size_t __n)
 800b672:	b580      	push	{r7, lr}
 800b674:	b084      	sub	sp, #16
 800b676:	af00      	add	r7, sp, #0
 800b678:	60f8      	str	r0, [r7, #12]
 800b67a:	60b9      	str	r1, [r7, #8]
 800b67c:	607a      	str	r2, [r7, #4]
	if (__p)
 800b67e:	68bb      	ldr	r3, [r7, #8]
 800b680:	2b00      	cmp	r3, #0
 800b682:	d005      	beq.n	800b690 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE13_M_deallocateEPS1_j+0x1e>
	  _Tr::deallocate(_M_impl, __p, __n);
 800b684:	68fb      	ldr	r3, [r7, #12]
 800b686:	687a      	ldr	r2, [r7, #4]
 800b688:	68b9      	ldr	r1, [r7, #8]
 800b68a:	4618      	mov	r0, r3
 800b68c:	f000 f987 	bl	800b99e <_ZNSt16allocator_traitsISaIP18Compare_expressionEE10deallocateERS2_PS1_j>
      }
 800b690:	bf00      	nop
 800b692:	3710      	adds	r7, #16
 800b694:	46bd      	mov	sp, r7
 800b696:	bd80      	pop	{r7, pc}

0800b698 <_ZSt8_DestroyIPP18Compare_expressionEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 800b698:	b580      	push	{r7, lr}
 800b69a:	b082      	sub	sp, #8
 800b69c:	af00      	add	r7, sp, #0
 800b69e:	6078      	str	r0, [r7, #4]
 800b6a0:	6039      	str	r1, [r7, #0]
	__destroy(__first, __last);
 800b6a2:	6839      	ldr	r1, [r7, #0]
 800b6a4:	6878      	ldr	r0, [r7, #4]
 800b6a6:	f000 f989 	bl	800b9bc <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18Compare_expressionEEvT_S5_>
    }
 800b6aa:	bf00      	nop
 800b6ac:	3708      	adds	r7, #8
 800b6ae:	46bd      	mov	sp, r7
 800b6b0:	bd80      	pop	{r7, pc}

0800b6b2 <_ZNSaIP14And_expressionED1Ev>:
 800b6b2:	b580      	push	{r7, lr}
 800b6b4:	b082      	sub	sp, #8
 800b6b6:	af00      	add	r7, sp, #0
 800b6b8:	6078      	str	r0, [r7, #4]
 800b6ba:	6878      	ldr	r0, [r7, #4]
 800b6bc:	f000 f989 	bl	800b9d2 <_ZN9__gnu_cxx13new_allocatorIP14And_expressionED1Ev>
 800b6c0:	687b      	ldr	r3, [r7, #4]
 800b6c2:	4618      	mov	r0, r3
 800b6c4:	3708      	adds	r7, #8
 800b6c6:	46bd      	mov	sp, r7
 800b6c8:	bd80      	pop	{r7, pc}

0800b6ca <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE13_M_deallocateEPS1_j>:
      _M_deallocate(pointer __p, size_t __n)
 800b6ca:	b580      	push	{r7, lr}
 800b6cc:	b084      	sub	sp, #16
 800b6ce:	af00      	add	r7, sp, #0
 800b6d0:	60f8      	str	r0, [r7, #12]
 800b6d2:	60b9      	str	r1, [r7, #8]
 800b6d4:	607a      	str	r2, [r7, #4]
	if (__p)
 800b6d6:	68bb      	ldr	r3, [r7, #8]
 800b6d8:	2b00      	cmp	r3, #0
 800b6da:	d005      	beq.n	800b6e8 <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE13_M_deallocateEPS1_j+0x1e>
	  _Tr::deallocate(_M_impl, __p, __n);
 800b6dc:	68fb      	ldr	r3, [r7, #12]
 800b6de:	687a      	ldr	r2, [r7, #4]
 800b6e0:	68b9      	ldr	r1, [r7, #8]
 800b6e2:	4618      	mov	r0, r3
 800b6e4:	f000 f980 	bl	800b9e8 <_ZNSt16allocator_traitsISaIP14And_expressionEE10deallocateERS2_PS1_j>
      }
 800b6e8:	bf00      	nop
 800b6ea:	3710      	adds	r7, #16
 800b6ec:	46bd      	mov	sp, r7
 800b6ee:	bd80      	pop	{r7, pc}

0800b6f0 <_ZSt8_DestroyIPP14And_expressionEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 800b6f0:	b580      	push	{r7, lr}
 800b6f2:	b082      	sub	sp, #8
 800b6f4:	af00      	add	r7, sp, #0
 800b6f6:	6078      	str	r0, [r7, #4]
 800b6f8:	6039      	str	r1, [r7, #0]
	__destroy(__first, __last);
 800b6fa:	6839      	ldr	r1, [r7, #0]
 800b6fc:	6878      	ldr	r0, [r7, #4]
 800b6fe:	f000 f982 	bl	800ba06 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP14And_expressionEEvT_S5_>
    }
 800b702:	bf00      	nop
 800b704:	3708      	adds	r7, #8
 800b706:	46bd      	mov	sp, r7
 800b708:	bd80      	pop	{r7, pc}

0800b70a <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800b70a:	b480      	push	{r7}
 800b70c:	b083      	sub	sp, #12
 800b70e:	af00      	add	r7, sp, #0
 800b710:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800b712:	687b      	ldr	r3, [r7, #4]
 800b714:	4618      	mov	r0, r3
 800b716:	370c      	adds	r7, #12
 800b718:	46bd      	mov	sp, r7
 800b71a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b71e:	4770      	bx	lr

0800b720 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRbEENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 800b720:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b722:	b083      	sub	sp, #12
 800b724:	af00      	add	r7, sp, #0
 800b726:	6078      	str	r0, [r7, #4]
 800b728:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 800b72a:	6878      	ldr	r0, [r7, #4]
 800b72c:	f000 f88d 	bl	800b84a <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800b730:	4604      	mov	r4, r0
 800b732:	6838      	ldr	r0, [r7, #0]
 800b734:	f7f9 faf2 	bl	8004d1c <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
 800b738:	4603      	mov	r3, r0
 800b73a:	461a      	mov	r2, r3
 800b73c:	4621      	mov	r1, r4
 800b73e:	4628      	mov	r0, r5
 800b740:	f000 f96c 	bl	800ba1c <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRbEESF_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 800b744:	4633      	mov	r3, r6
    }
 800b746:	4618      	mov	r0, r3
 800b748:	370c      	adds	r7, #12
 800b74a:	46bd      	mov	sp, r7
 800b74c:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800b74e <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRiEENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 800b74e:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b750:	b083      	sub	sp, #12
 800b752:	af00      	add	r7, sp, #0
 800b754:	6078      	str	r0, [r7, #4]
 800b756:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 800b758:	6878      	ldr	r0, [r7, #4]
 800b75a:	f000 f876 	bl	800b84a <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800b75e:	4604      	mov	r4, r0
 800b760:	6838      	ldr	r0, [r7, #0]
 800b762:	f7f9 fa73 	bl	8004c4c <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 800b766:	4603      	mov	r3, r0
 800b768:	461a      	mov	r2, r3
 800b76a:	4621      	mov	r1, r4
 800b76c:	4628      	mov	r0, r5
 800b76e:	f000 f96c 	bl	800ba4a <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRiEESF_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 800b772:	4633      	mov	r3, r6
    }
 800b774:	4618      	mov	r0, r3
 800b776:	370c      	adds	r7, #12
 800b778:	46bd      	mov	sp, r7
 800b77a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800b77c <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRfEENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 800b77c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b77e:	b083      	sub	sp, #12
 800b780:	af00      	add	r7, sp, #0
 800b782:	6078      	str	r0, [r7, #4]
 800b784:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 800b786:	6878      	ldr	r0, [r7, #4]
 800b788:	f000 f85f 	bl	800b84a <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800b78c:	4604      	mov	r4, r0
 800b78e:	6838      	ldr	r0, [r7, #0]
 800b790:	f7f9 fa90 	bl	8004cb4 <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 800b794:	4603      	mov	r3, r0
 800b796:	461a      	mov	r2, r3
 800b798:	4621      	mov	r1, r4
 800b79a:	4628      	mov	r0, r5
 800b79c:	f000 f96c 	bl	800ba78 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRfEESF_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 800b7a0:	4633      	mov	r3, r6
    }
 800b7a2:	4618      	mov	r0, r3
 800b7a4:	370c      	adds	r7, #12
 800b7a6:	46bd      	mov	sp, r7
 800b7a8:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800b7aa <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRS8_EENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 800b7aa:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b7ac:	b083      	sub	sp, #12
 800b7ae:	af00      	add	r7, sp, #0
 800b7b0:	6078      	str	r0, [r7, #4]
 800b7b2:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 800b7b4:	6878      	ldr	r0, [r7, #4]
 800b7b6:	f000 f848 	bl	800b84a <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800b7ba:	4604      	mov	r4, r0
 800b7bc:	6838      	ldr	r0, [r7, #0]
 800b7be:	f7f9 faed 	bl	8004d9c <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 800b7c2:	4603      	mov	r3, r0
 800b7c4:	461a      	mov	r2, r3
 800b7c6:	4621      	mov	r1, r4
 800b7c8:	4628      	mov	r0, r5
 800b7ca:	f000 f96c 	bl	800baa6 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRS9_EESF_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 800b7ce:	4633      	mov	r3, r6
    }
 800b7d0:	4618      	mov	r0, r3
 800b7d2:	370c      	adds	r7, #12
 800b7d4:	46bd      	mov	sp, r7
 800b7d6:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800b7d8 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRSA_EENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 800b7d8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b7da:	b083      	sub	sp, #12
 800b7dc:	af00      	add	r7, sp, #0
 800b7de:	6078      	str	r0, [r7, #4]
 800b7e0:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 800b7e2:	6878      	ldr	r0, [r7, #4]
 800b7e4:	f000 f831 	bl	800b84a <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800b7e8:	4604      	mov	r4, r0
 800b7ea:	6838      	ldr	r0, [r7, #0]
 800b7ec:	f000 f972 	bl	800bad4 <_ZSt7forwardIRP8VariableEOT_RNSt16remove_referenceIS3_E4typeE>
 800b7f0:	4603      	mov	r3, r0
 800b7f2:	461a      	mov	r2, r3
 800b7f4:	4621      	mov	r1, r4
 800b7f6:	4628      	mov	r0, r5
 800b7f8:	f000 f977 	bl	800baea <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRSB_EESF_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 800b7fc:	4633      	mov	r3, r6
    }
 800b7fe:	4618      	mov	r0, r3
 800b800:	370c      	adds	r7, #12
 800b802:	46bd      	mov	sp, r7
 800b804:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800b806 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRSC_EENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 800b806:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b808:	b083      	sub	sp, #12
 800b80a:	af00      	add	r7, sp, #0
 800b80c:	6078      	str	r0, [r7, #4]
 800b80e:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 800b810:	6878      	ldr	r0, [r7, #4]
 800b812:	f000 f81a 	bl	800b84a <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800b816:	4604      	mov	r4, r0
 800b818:	6838      	ldr	r0, [r7, #0]
 800b81a:	f000 f97d 	bl	800bb18 <_ZSt7forwardIRP13Function_callEOT_RNSt16remove_referenceIS3_E4typeE>
 800b81e:	4603      	mov	r3, r0
 800b820:	461a      	mov	r2, r3
 800b822:	4621      	mov	r1, r4
 800b824:	4628      	mov	r0, r5
 800b826:	f000 f982 	bl	800bb2e <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRSD_EESF_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 800b82a:	4633      	mov	r3, r6
    }
 800b82c:	4618      	mov	r0, r3
 800b82e:	370c      	adds	r7, #12
 800b830:	46bd      	mov	sp, r7
 800b832:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800b834 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifS9_SB_SD_EEEJEE9_M_accessEv>:
      _M_access() const
 800b834:	b480      	push	{r7}
 800b836:	b083      	sub	sp, #12
 800b838:	af00      	add	r7, sp, #0
 800b83a:	6078      	str	r0, [r7, #4]
      { return _M_data; }
 800b83c:	687b      	ldr	r3, [r7, #4]
 800b83e:	4618      	mov	r0, r3
 800b840:	370c      	adds	r7, #12
 800b842:	46bd      	mov	sp, r7
 800b844:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b848:	4770      	bx	lr

0800b84a <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800b84a:	b480      	push	{r7}
 800b84c:	b083      	sub	sp, #12
 800b84e:	af00      	add	r7, sp, #0
 800b850:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800b852:	687b      	ldr	r3, [r7, #4]
 800b854:	4618      	mov	r0, r3
 800b856:	370c      	adds	r7, #12
 800b858:	46bd      	mov	sp, r7
 800b85a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b85e:	4770      	bx	lr

0800b860 <_ZN9__gnu_cxx13new_allocatorIP16Power_expressionED1Ev>:
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 800b860:	b480      	push	{r7}
 800b862:	b083      	sub	sp, #12
 800b864:	af00      	add	r7, sp, #0
 800b866:	6078      	str	r0, [r7, #4]
 800b868:	687b      	ldr	r3, [r7, #4]
 800b86a:	4618      	mov	r0, r3
 800b86c:	370c      	adds	r7, #12
 800b86e:	46bd      	mov	sp, r7
 800b870:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b874:	4770      	bx	lr

0800b876 <_ZNSt16allocator_traitsISaIP16Power_expressionEE10deallocateERS2_PS1_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 800b876:	b580      	push	{r7, lr}
 800b878:	b084      	sub	sp, #16
 800b87a:	af00      	add	r7, sp, #0
 800b87c:	60f8      	str	r0, [r7, #12]
 800b87e:	60b9      	str	r1, [r7, #8]
 800b880:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 800b882:	687a      	ldr	r2, [r7, #4]
 800b884:	68b9      	ldr	r1, [r7, #8]
 800b886:	68f8      	ldr	r0, [r7, #12]
 800b888:	f000 f968 	bl	800bb5c <_ZN9__gnu_cxx13new_allocatorIP16Power_expressionE10deallocateEPS2_j>
 800b88c:	bf00      	nop
 800b88e:	3710      	adds	r7, #16
 800b890:	46bd      	mov	sp, r7
 800b892:	bd80      	pop	{r7, pc}

0800b894 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP16Power_expressionEEvT_S5_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
 800b894:	b480      	push	{r7}
 800b896:	b083      	sub	sp, #12
 800b898:	af00      	add	r7, sp, #0
 800b89a:	6078      	str	r0, [r7, #4]
 800b89c:	6039      	str	r1, [r7, #0]
 800b89e:	bf00      	nop
 800b8a0:	370c      	adds	r7, #12
 800b8a2:	46bd      	mov	sp, r7
 800b8a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b8a8:	4770      	bx	lr

0800b8aa <_ZN9__gnu_cxx13new_allocatorI13mult_operatorED1Ev>:
 800b8aa:	b480      	push	{r7}
 800b8ac:	b083      	sub	sp, #12
 800b8ae:	af00      	add	r7, sp, #0
 800b8b0:	6078      	str	r0, [r7, #4]
 800b8b2:	687b      	ldr	r3, [r7, #4]
 800b8b4:	4618      	mov	r0, r3
 800b8b6:	370c      	adds	r7, #12
 800b8b8:	46bd      	mov	sp, r7
 800b8ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b8be:	4770      	bx	lr

0800b8c0 <_ZNSt16allocator_traitsISaI13mult_operatorEE10deallocateERS1_PS0_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 800b8c0:	b580      	push	{r7, lr}
 800b8c2:	b084      	sub	sp, #16
 800b8c4:	af00      	add	r7, sp, #0
 800b8c6:	60f8      	str	r0, [r7, #12]
 800b8c8:	60b9      	str	r1, [r7, #8]
 800b8ca:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 800b8cc:	687a      	ldr	r2, [r7, #4]
 800b8ce:	68b9      	ldr	r1, [r7, #8]
 800b8d0:	68f8      	ldr	r0, [r7, #12]
 800b8d2:	f000 f94f 	bl	800bb74 <_ZN9__gnu_cxx13new_allocatorI13mult_operatorE10deallocateEPS1_j>
 800b8d6:	bf00      	nop
 800b8d8:	3710      	adds	r7, #16
 800b8da:	46bd      	mov	sp, r7
 800b8dc:	bd80      	pop	{r7, pc}

0800b8de <_ZNSt12_Destroy_auxILb1EE9__destroyIP13mult_operatorEEvT_S4_>:
 800b8de:	b480      	push	{r7}
 800b8e0:	b083      	sub	sp, #12
 800b8e2:	af00      	add	r7, sp, #0
 800b8e4:	6078      	str	r0, [r7, #4]
 800b8e6:	6039      	str	r1, [r7, #0]
 800b8e8:	bf00      	nop
 800b8ea:	370c      	adds	r7, #12
 800b8ec:	46bd      	mov	sp, r7
 800b8ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b8f2:	4770      	bx	lr

0800b8f4 <_ZN9__gnu_cxx13new_allocatorIP19Multiply_expressionED1Ev>:
 800b8f4:	b480      	push	{r7}
 800b8f6:	b083      	sub	sp, #12
 800b8f8:	af00      	add	r7, sp, #0
 800b8fa:	6078      	str	r0, [r7, #4]
 800b8fc:	687b      	ldr	r3, [r7, #4]
 800b8fe:	4618      	mov	r0, r3
 800b900:	370c      	adds	r7, #12
 800b902:	46bd      	mov	sp, r7
 800b904:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b908:	4770      	bx	lr

0800b90a <_ZNSt16allocator_traitsISaIP19Multiply_expressionEE10deallocateERS2_PS1_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 800b90a:	b580      	push	{r7, lr}
 800b90c:	b084      	sub	sp, #16
 800b90e:	af00      	add	r7, sp, #0
 800b910:	60f8      	str	r0, [r7, #12]
 800b912:	60b9      	str	r1, [r7, #8]
 800b914:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 800b916:	687a      	ldr	r2, [r7, #4]
 800b918:	68b9      	ldr	r1, [r7, #8]
 800b91a:	68f8      	ldr	r0, [r7, #12]
 800b91c:	f000 f936 	bl	800bb8c <_ZN9__gnu_cxx13new_allocatorIP19Multiply_expressionE10deallocateEPS2_j>
 800b920:	bf00      	nop
 800b922:	3710      	adds	r7, #16
 800b924:	46bd      	mov	sp, r7
 800b926:	bd80      	pop	{r7, pc}

0800b928 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP19Multiply_expressionEEvT_S5_>:
 800b928:	b480      	push	{r7}
 800b92a:	b083      	sub	sp, #12
 800b92c:	af00      	add	r7, sp, #0
 800b92e:	6078      	str	r0, [r7, #4]
 800b930:	6039      	str	r1, [r7, #0]
 800b932:	bf00      	nop
 800b934:	370c      	adds	r7, #12
 800b936:	46bd      	mov	sp, r7
 800b938:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b93c:	4770      	bx	lr

0800b93e <_ZN9__gnu_cxx13new_allocatorI12sum_operatorED1Ev>:
 800b93e:	b480      	push	{r7}
 800b940:	b083      	sub	sp, #12
 800b942:	af00      	add	r7, sp, #0
 800b944:	6078      	str	r0, [r7, #4]
 800b946:	687b      	ldr	r3, [r7, #4]
 800b948:	4618      	mov	r0, r3
 800b94a:	370c      	adds	r7, #12
 800b94c:	46bd      	mov	sp, r7
 800b94e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b952:	4770      	bx	lr

0800b954 <_ZNSt16allocator_traitsISaI12sum_operatorEE10deallocateERS1_PS0_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 800b954:	b580      	push	{r7, lr}
 800b956:	b084      	sub	sp, #16
 800b958:	af00      	add	r7, sp, #0
 800b95a:	60f8      	str	r0, [r7, #12]
 800b95c:	60b9      	str	r1, [r7, #8]
 800b95e:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 800b960:	687a      	ldr	r2, [r7, #4]
 800b962:	68b9      	ldr	r1, [r7, #8]
 800b964:	68f8      	ldr	r0, [r7, #12]
 800b966:	f000 f91d 	bl	800bba4 <_ZN9__gnu_cxx13new_allocatorI12sum_operatorE10deallocateEPS1_j>
 800b96a:	bf00      	nop
 800b96c:	3710      	adds	r7, #16
 800b96e:	46bd      	mov	sp, r7
 800b970:	bd80      	pop	{r7, pc}

0800b972 <_ZNSt12_Destroy_auxILb1EE9__destroyIP12sum_operatorEEvT_S4_>:
 800b972:	b480      	push	{r7}
 800b974:	b083      	sub	sp, #12
 800b976:	af00      	add	r7, sp, #0
 800b978:	6078      	str	r0, [r7, #4]
 800b97a:	6039      	str	r1, [r7, #0]
 800b97c:	bf00      	nop
 800b97e:	370c      	adds	r7, #12
 800b980:	46bd      	mov	sp, r7
 800b982:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b986:	4770      	bx	lr

0800b988 <_ZN9__gnu_cxx13new_allocatorIP18Compare_expressionED1Ev>:
 800b988:	b480      	push	{r7}
 800b98a:	b083      	sub	sp, #12
 800b98c:	af00      	add	r7, sp, #0
 800b98e:	6078      	str	r0, [r7, #4]
 800b990:	687b      	ldr	r3, [r7, #4]
 800b992:	4618      	mov	r0, r3
 800b994:	370c      	adds	r7, #12
 800b996:	46bd      	mov	sp, r7
 800b998:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b99c:	4770      	bx	lr

0800b99e <_ZNSt16allocator_traitsISaIP18Compare_expressionEE10deallocateERS2_PS1_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 800b99e:	b580      	push	{r7, lr}
 800b9a0:	b084      	sub	sp, #16
 800b9a2:	af00      	add	r7, sp, #0
 800b9a4:	60f8      	str	r0, [r7, #12]
 800b9a6:	60b9      	str	r1, [r7, #8]
 800b9a8:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 800b9aa:	687a      	ldr	r2, [r7, #4]
 800b9ac:	68b9      	ldr	r1, [r7, #8]
 800b9ae:	68f8      	ldr	r0, [r7, #12]
 800b9b0:	f000 f904 	bl	800bbbc <_ZN9__gnu_cxx13new_allocatorIP18Compare_expressionE10deallocateEPS2_j>
 800b9b4:	bf00      	nop
 800b9b6:	3710      	adds	r7, #16
 800b9b8:	46bd      	mov	sp, r7
 800b9ba:	bd80      	pop	{r7, pc}

0800b9bc <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18Compare_expressionEEvT_S5_>:
 800b9bc:	b480      	push	{r7}
 800b9be:	b083      	sub	sp, #12
 800b9c0:	af00      	add	r7, sp, #0
 800b9c2:	6078      	str	r0, [r7, #4]
 800b9c4:	6039      	str	r1, [r7, #0]
 800b9c6:	bf00      	nop
 800b9c8:	370c      	adds	r7, #12
 800b9ca:	46bd      	mov	sp, r7
 800b9cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b9d0:	4770      	bx	lr

0800b9d2 <_ZN9__gnu_cxx13new_allocatorIP14And_expressionED1Ev>:
 800b9d2:	b480      	push	{r7}
 800b9d4:	b083      	sub	sp, #12
 800b9d6:	af00      	add	r7, sp, #0
 800b9d8:	6078      	str	r0, [r7, #4]
 800b9da:	687b      	ldr	r3, [r7, #4]
 800b9dc:	4618      	mov	r0, r3
 800b9de:	370c      	adds	r7, #12
 800b9e0:	46bd      	mov	sp, r7
 800b9e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b9e6:	4770      	bx	lr

0800b9e8 <_ZNSt16allocator_traitsISaIP14And_expressionEE10deallocateERS2_PS1_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 800b9e8:	b580      	push	{r7, lr}
 800b9ea:	b084      	sub	sp, #16
 800b9ec:	af00      	add	r7, sp, #0
 800b9ee:	60f8      	str	r0, [r7, #12]
 800b9f0:	60b9      	str	r1, [r7, #8]
 800b9f2:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 800b9f4:	687a      	ldr	r2, [r7, #4]
 800b9f6:	68b9      	ldr	r1, [r7, #8]
 800b9f8:	68f8      	ldr	r0, [r7, #12]
 800b9fa:	f000 f8eb 	bl	800bbd4 <_ZN9__gnu_cxx13new_allocatorIP14And_expressionE10deallocateEPS2_j>
 800b9fe:	bf00      	nop
 800ba00:	3710      	adds	r7, #16
 800ba02:	46bd      	mov	sp, r7
 800ba04:	bd80      	pop	{r7, pc}

0800ba06 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP14And_expressionEEvT_S5_>:
 800ba06:	b480      	push	{r7}
 800ba08:	b083      	sub	sp, #12
 800ba0a:	af00      	add	r7, sp, #0
 800ba0c:	6078      	str	r0, [r7, #4]
 800ba0e:	6039      	str	r1, [r7, #0]
 800ba10:	bf00      	nop
 800ba12:	370c      	adds	r7, #12
 800ba14:	46bd      	mov	sp, r7
 800ba16:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ba1a:	4770      	bx	lr

0800ba1c <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRbEESF_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800ba1c:	b5b0      	push	{r4, r5, r7, lr}
 800ba1e:	b084      	sub	sp, #16
 800ba20:	af00      	add	r7, sp, #0
 800ba22:	7338      	strb	r0, [r7, #12]
 800ba24:	60b9      	str	r1, [r7, #8]
 800ba26:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800ba28:	68b8      	ldr	r0, [r7, #8]
 800ba2a:	f7ff ff0e 	bl	800b84a <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800ba2e:	4604      	mov	r4, r0
 800ba30:	6878      	ldr	r0, [r7, #4]
 800ba32:	f7f9 f973 	bl	8004d1c <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
 800ba36:	4603      	mov	r3, r0
 800ba38:	4619      	mov	r1, r3
 800ba3a:	4620      	mov	r0, r4
 800ba3c:	f000 f8d6 	bl	800bbec <_ZZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvENUlOT_E_clIRbEENS0_16__variant_cookieESE_>
 800ba40:	462b      	mov	r3, r5
 800ba42:	4618      	mov	r0, r3
 800ba44:	3710      	adds	r7, #16
 800ba46:	46bd      	mov	sp, r7
 800ba48:	bdb0      	pop	{r4, r5, r7, pc}

0800ba4a <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRiEESF_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800ba4a:	b5b0      	push	{r4, r5, r7, lr}
 800ba4c:	b084      	sub	sp, #16
 800ba4e:	af00      	add	r7, sp, #0
 800ba50:	7338      	strb	r0, [r7, #12]
 800ba52:	60b9      	str	r1, [r7, #8]
 800ba54:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800ba56:	68b8      	ldr	r0, [r7, #8]
 800ba58:	f7ff fef7 	bl	800b84a <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800ba5c:	4604      	mov	r4, r0
 800ba5e:	6878      	ldr	r0, [r7, #4]
 800ba60:	f7f9 f8f4 	bl	8004c4c <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 800ba64:	4603      	mov	r3, r0
 800ba66:	4619      	mov	r1, r3
 800ba68:	4620      	mov	r0, r4
 800ba6a:	f000 f8d0 	bl	800bc0e <_ZZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvENUlOT_E_clIRiEENS0_16__variant_cookieESE_>
 800ba6e:	462b      	mov	r3, r5
 800ba70:	4618      	mov	r0, r3
 800ba72:	3710      	adds	r7, #16
 800ba74:	46bd      	mov	sp, r7
 800ba76:	bdb0      	pop	{r4, r5, r7, pc}

0800ba78 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRfEESF_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800ba78:	b5b0      	push	{r4, r5, r7, lr}
 800ba7a:	b084      	sub	sp, #16
 800ba7c:	af00      	add	r7, sp, #0
 800ba7e:	7338      	strb	r0, [r7, #12]
 800ba80:	60b9      	str	r1, [r7, #8]
 800ba82:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800ba84:	68b8      	ldr	r0, [r7, #8]
 800ba86:	f7ff fee0 	bl	800b84a <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800ba8a:	4604      	mov	r4, r0
 800ba8c:	6878      	ldr	r0, [r7, #4]
 800ba8e:	f7f9 f911 	bl	8004cb4 <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 800ba92:	4603      	mov	r3, r0
 800ba94:	4619      	mov	r1, r3
 800ba96:	4620      	mov	r0, r4
 800ba98:	f000 f8ca 	bl	800bc30 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvENUlOT_E_clIRfEENS0_16__variant_cookieESE_>
 800ba9c:	462b      	mov	r3, r5
 800ba9e:	4618      	mov	r0, r3
 800baa0:	3710      	adds	r7, #16
 800baa2:	46bd      	mov	sp, r7
 800baa4:	bdb0      	pop	{r4, r5, r7, pc}

0800baa6 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRS9_EESF_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800baa6:	b5b0      	push	{r4, r5, r7, lr}
 800baa8:	b084      	sub	sp, #16
 800baaa:	af00      	add	r7, sp, #0
 800baac:	7338      	strb	r0, [r7, #12]
 800baae:	60b9      	str	r1, [r7, #8]
 800bab0:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800bab2:	68b8      	ldr	r0, [r7, #8]
 800bab4:	f7ff fec9 	bl	800b84a <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800bab8:	4604      	mov	r4, r0
 800baba:	6878      	ldr	r0, [r7, #4]
 800babc:	f7f9 f96e 	bl	8004d9c <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 800bac0:	4603      	mov	r3, r0
 800bac2:	4619      	mov	r1, r3
 800bac4:	4620      	mov	r0, r4
 800bac6:	f000 f8c4 	bl	800bc52 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvENUlOT_E_clIRS7_EENS0_16__variant_cookieESE_>
 800baca:	462b      	mov	r3, r5
 800bacc:	4618      	mov	r0, r3
 800bace:	3710      	adds	r7, #16
 800bad0:	46bd      	mov	sp, r7
 800bad2:	bdb0      	pop	{r4, r5, r7, pc}

0800bad4 <_ZSt7forwardIRP8VariableEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800bad4:	b480      	push	{r7}
 800bad6:	b083      	sub	sp, #12
 800bad8:	af00      	add	r7, sp, #0
 800bada:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800badc:	687b      	ldr	r3, [r7, #4]
 800bade:	4618      	mov	r0, r3
 800bae0:	370c      	adds	r7, #12
 800bae2:	46bd      	mov	sp, r7
 800bae4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bae8:	4770      	bx	lr

0800baea <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRSB_EESF_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800baea:	b5b0      	push	{r4, r5, r7, lr}
 800baec:	b084      	sub	sp, #16
 800baee:	af00      	add	r7, sp, #0
 800baf0:	7338      	strb	r0, [r7, #12]
 800baf2:	60b9      	str	r1, [r7, #8]
 800baf4:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800baf6:	68b8      	ldr	r0, [r7, #8]
 800baf8:	f7ff fea7 	bl	800b84a <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800bafc:	4604      	mov	r4, r0
 800bafe:	6878      	ldr	r0, [r7, #4]
 800bb00:	f7ff ffe8 	bl	800bad4 <_ZSt7forwardIRP8VariableEOT_RNSt16remove_referenceIS3_E4typeE>
 800bb04:	4603      	mov	r3, r0
 800bb06:	4619      	mov	r1, r3
 800bb08:	4620      	mov	r0, r4
 800bb0a:	f000 f8b3 	bl	800bc74 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvENUlOT_E_clIRS9_EENS0_16__variant_cookieESE_>
 800bb0e:	462b      	mov	r3, r5
 800bb10:	4618      	mov	r0, r3
 800bb12:	3710      	adds	r7, #16
 800bb14:	46bd      	mov	sp, r7
 800bb16:	bdb0      	pop	{r4, r5, r7, pc}

0800bb18 <_ZSt7forwardIRP13Function_callEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800bb18:	b480      	push	{r7}
 800bb1a:	b083      	sub	sp, #12
 800bb1c:	af00      	add	r7, sp, #0
 800bb1e:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800bb20:	687b      	ldr	r3, [r7, #4]
 800bb22:	4618      	mov	r0, r3
 800bb24:	370c      	adds	r7, #12
 800bb26:	46bd      	mov	sp, r7
 800bb28:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bb2c:	4770      	bx	lr

0800bb2e <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRSD_EESF_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800bb2e:	b5b0      	push	{r4, r5, r7, lr}
 800bb30:	b084      	sub	sp, #16
 800bb32:	af00      	add	r7, sp, #0
 800bb34:	7338      	strb	r0, [r7, #12]
 800bb36:	60b9      	str	r1, [r7, #8]
 800bb38:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800bb3a:	68b8      	ldr	r0, [r7, #8]
 800bb3c:	f7ff fe85 	bl	800b84a <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800bb40:	4604      	mov	r4, r0
 800bb42:	6878      	ldr	r0, [r7, #4]
 800bb44:	f7ff ffe8 	bl	800bb18 <_ZSt7forwardIRP13Function_callEOT_RNSt16remove_referenceIS3_E4typeE>
 800bb48:	4603      	mov	r3, r0
 800bb4a:	4619      	mov	r1, r3
 800bb4c:	4620      	mov	r0, r4
 800bb4e:	f000 f8a2 	bl	800bc96 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvENUlOT_E_clIRSB_EENS0_16__variant_cookieESE_>
 800bb52:	462b      	mov	r3, r5
 800bb54:	4618      	mov	r0, r3
 800bb56:	3710      	adds	r7, #16
 800bb58:	46bd      	mov	sp, r7
 800bb5a:	bdb0      	pop	{r4, r5, r7, pc}

0800bb5c <_ZN9__gnu_cxx13new_allocatorIP16Power_expressionE10deallocateEPS2_j>:
      deallocate(pointer __p, size_type)
 800bb5c:	b580      	push	{r7, lr}
 800bb5e:	b084      	sub	sp, #16
 800bb60:	af00      	add	r7, sp, #0
 800bb62:	60f8      	str	r0, [r7, #12]
 800bb64:	60b9      	str	r1, [r7, #8]
 800bb66:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 800bb68:	68b8      	ldr	r0, [r7, #8]
 800bb6a:	f017 fcb1 	bl	80234d0 <_ZdlPv>
      }
 800bb6e:	3710      	adds	r7, #16
 800bb70:	46bd      	mov	sp, r7
 800bb72:	bd80      	pop	{r7, pc}

0800bb74 <_ZN9__gnu_cxx13new_allocatorI13mult_operatorE10deallocateEPS1_j>:
      deallocate(pointer __p, size_type)
 800bb74:	b580      	push	{r7, lr}
 800bb76:	b084      	sub	sp, #16
 800bb78:	af00      	add	r7, sp, #0
 800bb7a:	60f8      	str	r0, [r7, #12]
 800bb7c:	60b9      	str	r1, [r7, #8]
 800bb7e:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 800bb80:	68b8      	ldr	r0, [r7, #8]
 800bb82:	f017 fca5 	bl	80234d0 <_ZdlPv>
      }
 800bb86:	3710      	adds	r7, #16
 800bb88:	46bd      	mov	sp, r7
 800bb8a:	bd80      	pop	{r7, pc}

0800bb8c <_ZN9__gnu_cxx13new_allocatorIP19Multiply_expressionE10deallocateEPS2_j>:
      deallocate(pointer __p, size_type)
 800bb8c:	b580      	push	{r7, lr}
 800bb8e:	b084      	sub	sp, #16
 800bb90:	af00      	add	r7, sp, #0
 800bb92:	60f8      	str	r0, [r7, #12]
 800bb94:	60b9      	str	r1, [r7, #8]
 800bb96:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 800bb98:	68b8      	ldr	r0, [r7, #8]
 800bb9a:	f017 fc99 	bl	80234d0 <_ZdlPv>
      }
 800bb9e:	3710      	adds	r7, #16
 800bba0:	46bd      	mov	sp, r7
 800bba2:	bd80      	pop	{r7, pc}

0800bba4 <_ZN9__gnu_cxx13new_allocatorI12sum_operatorE10deallocateEPS1_j>:
      deallocate(pointer __p, size_type)
 800bba4:	b580      	push	{r7, lr}
 800bba6:	b084      	sub	sp, #16
 800bba8:	af00      	add	r7, sp, #0
 800bbaa:	60f8      	str	r0, [r7, #12]
 800bbac:	60b9      	str	r1, [r7, #8]
 800bbae:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 800bbb0:	68b8      	ldr	r0, [r7, #8]
 800bbb2:	f017 fc8d 	bl	80234d0 <_ZdlPv>
      }
 800bbb6:	3710      	adds	r7, #16
 800bbb8:	46bd      	mov	sp, r7
 800bbba:	bd80      	pop	{r7, pc}

0800bbbc <_ZN9__gnu_cxx13new_allocatorIP18Compare_expressionE10deallocateEPS2_j>:
      deallocate(pointer __p, size_type)
 800bbbc:	b580      	push	{r7, lr}
 800bbbe:	b084      	sub	sp, #16
 800bbc0:	af00      	add	r7, sp, #0
 800bbc2:	60f8      	str	r0, [r7, #12]
 800bbc4:	60b9      	str	r1, [r7, #8]
 800bbc6:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 800bbc8:	68b8      	ldr	r0, [r7, #8]
 800bbca:	f017 fc81 	bl	80234d0 <_ZdlPv>
      }
 800bbce:	3710      	adds	r7, #16
 800bbd0:	46bd      	mov	sp, r7
 800bbd2:	bd80      	pop	{r7, pc}

0800bbd4 <_ZN9__gnu_cxx13new_allocatorIP14And_expressionE10deallocateEPS2_j>:
      deallocate(pointer __p, size_type)
 800bbd4:	b580      	push	{r7, lr}
 800bbd6:	b084      	sub	sp, #16
 800bbd8:	af00      	add	r7, sp, #0
 800bbda:	60f8      	str	r0, [r7, #12]
 800bbdc:	60b9      	str	r1, [r7, #8]
 800bbde:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 800bbe0:	68b8      	ldr	r0, [r7, #8]
 800bbe2:	f017 fc75 	bl	80234d0 <_ZdlPv>
      }
 800bbe6:	3710      	adds	r7, #16
 800bbe8:	46bd      	mov	sp, r7
 800bbea:	bd80      	pop	{r7, pc}

0800bbec <_ZZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvENUlOT_E_clIRbEENS0_16__variant_cookieESE_>:
	__do_visit([](auto&& __this_mem) mutable
 800bbec:	b590      	push	{r4, r7, lr}
 800bbee:	b083      	sub	sp, #12
 800bbf0:	af00      	add	r7, sp, #0
 800bbf2:	6078      	str	r0, [r7, #4]
 800bbf4:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 800bbf6:	6838      	ldr	r0, [r7, #0]
 800bbf8:	f7fc fd4a 	bl	8008690 <_ZSt11__addressofIbEPT_RS0_>
 800bbfc:	4603      	mov	r3, r0
 800bbfe:	4618      	mov	r0, r3
 800bc00:	f7fc fd51 	bl	80086a6 <_ZSt8_DestroyIbEvPT_>
	    return {};
 800bc04:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 800bc06:	4618      	mov	r0, r3
 800bc08:	370c      	adds	r7, #12
 800bc0a:	46bd      	mov	sp, r7
 800bc0c:	bd90      	pop	{r4, r7, pc}

0800bc0e <_ZZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvENUlOT_E_clIRiEENS0_16__variant_cookieESE_>:
 800bc0e:	b590      	push	{r4, r7, lr}
 800bc10:	b083      	sub	sp, #12
 800bc12:	af00      	add	r7, sp, #0
 800bc14:	6078      	str	r0, [r7, #4]
 800bc16:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 800bc18:	6838      	ldr	r0, [r7, #0]
 800bc1a:	f7fc fd0f 	bl	800863c <_ZSt11__addressofIiEPT_RS0_>
 800bc1e:	4603      	mov	r3, r0
 800bc20:	4618      	mov	r0, r3
 800bc22:	f7fc fd16 	bl	8008652 <_ZSt8_DestroyIiEvPT_>
	    return {};
 800bc26:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 800bc28:	4618      	mov	r0, r3
 800bc2a:	370c      	adds	r7, #12
 800bc2c:	46bd      	mov	sp, r7
 800bc2e:	bd90      	pop	{r4, r7, pc}

0800bc30 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvENUlOT_E_clIRfEENS0_16__variant_cookieESE_>:
 800bc30:	b590      	push	{r4, r7, lr}
 800bc32:	b083      	sub	sp, #12
 800bc34:	af00      	add	r7, sp, #0
 800bc36:	6078      	str	r0, [r7, #4]
 800bc38:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 800bc3a:	6838      	ldr	r0, [r7, #0]
 800bc3c:	f7fc fd13 	bl	8008666 <_ZSt11__addressofIfEPT_RS0_>
 800bc40:	4603      	mov	r3, r0
 800bc42:	4618      	mov	r0, r3
 800bc44:	f7fc fd1a 	bl	800867c <_ZSt8_DestroyIfEvPT_>
	    return {};
 800bc48:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 800bc4a:	4618      	mov	r0, r3
 800bc4c:	370c      	adds	r7, #12
 800bc4e:	46bd      	mov	sp, r7
 800bc50:	bd90      	pop	{r4, r7, pc}

0800bc52 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvENUlOT_E_clIRS7_EENS0_16__variant_cookieESE_>:
 800bc52:	b590      	push	{r4, r7, lr}
 800bc54:	b083      	sub	sp, #12
 800bc56:	af00      	add	r7, sp, #0
 800bc58:	6078      	str	r0, [r7, #4]
 800bc5a:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 800bc5c:	6838      	ldr	r0, [r7, #0]
 800bc5e:	f7fc fd2c 	bl	80086ba <_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_>
 800bc62:	4603      	mov	r3, r0
 800bc64:	4618      	mov	r0, r3
 800bc66:	f7fc fd33 	bl	80086d0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_>
	    return {};
 800bc6a:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 800bc6c:	4618      	mov	r0, r3
 800bc6e:	370c      	adds	r7, #12
 800bc70:	46bd      	mov	sp, r7
 800bc72:	bd90      	pop	{r4, r7, pc}

0800bc74 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvENUlOT_E_clIRS9_EENS0_16__variant_cookieESE_>:
 800bc74:	b590      	push	{r4, r7, lr}
 800bc76:	b083      	sub	sp, #12
 800bc78:	af00      	add	r7, sp, #0
 800bc7a:	6078      	str	r0, [r7, #4]
 800bc7c:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 800bc7e:	6838      	ldr	r0, [r7, #0]
 800bc80:	f000 f81a 	bl	800bcb8 <_ZSt11__addressofIP8VariableEPT_RS2_>
 800bc84:	4603      	mov	r3, r0
 800bc86:	4618      	mov	r0, r3
 800bc88:	f000 f821 	bl	800bcce <_ZSt8_DestroyIP8VariableEvPT_>
	    return {};
 800bc8c:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 800bc8e:	4618      	mov	r0, r3
 800bc90:	370c      	adds	r7, #12
 800bc92:	46bd      	mov	sp, r7
 800bc94:	bd90      	pop	{r4, r7, pc}

0800bc96 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvENUlOT_E_clIRSB_EENS0_16__variant_cookieESE_>:
 800bc96:	b590      	push	{r4, r7, lr}
 800bc98:	b083      	sub	sp, #12
 800bc9a:	af00      	add	r7, sp, #0
 800bc9c:	6078      	str	r0, [r7, #4]
 800bc9e:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 800bca0:	6838      	ldr	r0, [r7, #0]
 800bca2:	f000 f81e 	bl	800bce2 <_ZSt11__addressofIP13Function_callEPT_RS2_>
 800bca6:	4603      	mov	r3, r0
 800bca8:	4618      	mov	r0, r3
 800bcaa:	f000 f825 	bl	800bcf8 <_ZSt8_DestroyIP13Function_callEvPT_>
	    return {};
 800bcae:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 800bcb0:	4618      	mov	r0, r3
 800bcb2:	370c      	adds	r7, #12
 800bcb4:	46bd      	mov	sp, r7
 800bcb6:	bd90      	pop	{r4, r7, pc}

0800bcb8 <_ZSt11__addressofIP8VariableEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 800bcb8:	b480      	push	{r7}
 800bcba:	b083      	sub	sp, #12
 800bcbc:	af00      	add	r7, sp, #0
 800bcbe:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 800bcc0:	687b      	ldr	r3, [r7, #4]
 800bcc2:	4618      	mov	r0, r3
 800bcc4:	370c      	adds	r7, #12
 800bcc6:	46bd      	mov	sp, r7
 800bcc8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bccc:	4770      	bx	lr

0800bcce <_ZSt8_DestroyIP8VariableEvPT_>:
    _Destroy(_Tp* __pointer)
 800bcce:	b480      	push	{r7}
 800bcd0:	b083      	sub	sp, #12
 800bcd2:	af00      	add	r7, sp, #0
 800bcd4:	6078      	str	r0, [r7, #4]
    { __pointer->~_Tp(); }
 800bcd6:	bf00      	nop
 800bcd8:	370c      	adds	r7, #12
 800bcda:	46bd      	mov	sp, r7
 800bcdc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bce0:	4770      	bx	lr

0800bce2 <_ZSt11__addressofIP13Function_callEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 800bce2:	b480      	push	{r7}
 800bce4:	b083      	sub	sp, #12
 800bce6:	af00      	add	r7, sp, #0
 800bce8:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 800bcea:	687b      	ldr	r3, [r7, #4]
 800bcec:	4618      	mov	r0, r3
 800bcee:	370c      	adds	r7, #12
 800bcf0:	46bd      	mov	sp, r7
 800bcf2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bcf6:	4770      	bx	lr

0800bcf8 <_ZSt8_DestroyIP13Function_callEvPT_>:
    _Destroy(_Tp* __pointer)
 800bcf8:	b480      	push	{r7}
 800bcfa:	b083      	sub	sp, #12
 800bcfc:	af00      	add	r7, sp, #0
 800bcfe:	6078      	str	r0, [r7, #4]
    { __pointer->~_Tp(); }
 800bd00:	bf00      	nop
 800bd02:	370c      	adds	r7, #12
 800bd04:	46bd      	mov	sp, r7
 800bd06:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bd0a:	4770      	bx	lr

0800bd0c <_Z41__static_initialization_and_destruction_0ii>:
 800bd0c:	b590      	push	{r4, r7, lr}
 800bd0e:	b0e7      	sub	sp, #412	; 0x19c
 800bd10:	af02      	add	r7, sp, #8
 800bd12:	1d3b      	adds	r3, r7, #4
 800bd14:	6018      	str	r0, [r3, #0]
 800bd16:	463b      	mov	r3, r7
 800bd18:	6019      	str	r1, [r3, #0]
 800bd1a:	1d3b      	adds	r3, r7, #4
 800bd1c:	681b      	ldr	r3, [r3, #0]
 800bd1e:	2b01      	cmp	r3, #1
 800bd20:	f040 819d 	bne.w	800c05e <_Z41__static_initialization_and_destruction_0ii+0x352>
 800bd24:	463b      	mov	r3, r7
 800bd26:	681b      	ldr	r3, [r3, #0]
 800bd28:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800bd2c:	4293      	cmp	r3, r2
 800bd2e:	f040 8196 	bne.w	800c05e <_Z41__static_initialization_and_destruction_0ii+0x352>
};
 800bd32:	f107 0314 	add.w	r3, r7, #20
 800bd36:	4618      	mov	r0, r3
 800bd38:	2322      	movs	r3, #34	; 0x22
 800bd3a:	461a      	mov	r2, r3
 800bd3c:	2100      	movs	r1, #0
 800bd3e:	f019 f8af 	bl	8024ea0 <memset>
 800bd42:	f107 0314 	add.w	r3, r7, #20
 800bd46:	223a      	movs	r2, #58	; 0x3a
 800bd48:	701a      	strb	r2, [r3, #0]
 800bd4a:	f107 0314 	add.w	r3, r7, #20
 800bd4e:	2201      	movs	r2, #1
 800bd50:	705a      	strb	r2, [r3, #1]
 800bd52:	f107 0314 	add.w	r3, r7, #20
 800bd56:	220a      	movs	r2, #10
 800bd58:	709a      	strb	r2, [r3, #2]
 800bd5a:	f107 0314 	add.w	r3, r7, #20
 800bd5e:	220a      	movs	r2, #10
 800bd60:	70da      	strb	r2, [r3, #3]
 800bd62:	f107 0314 	add.w	r3, r7, #20
 800bd66:	222c      	movs	r2, #44	; 0x2c
 800bd68:	711a      	strb	r2, [r3, #4]
 800bd6a:	f107 0314 	add.w	r3, r7, #20
 800bd6e:	220c      	movs	r2, #12
 800bd70:	715a      	strb	r2, [r3, #5]
 800bd72:	f107 0314 	add.w	r3, r7, #20
 800bd76:	222e      	movs	r2, #46	; 0x2e
 800bd78:	719a      	strb	r2, [r3, #6]
 800bd7a:	f107 0314 	add.w	r3, r7, #20
 800bd7e:	220b      	movs	r2, #11
 800bd80:	71da      	strb	r2, [r3, #7]
 800bd82:	f107 0314 	add.w	r3, r7, #20
 800bd86:	225b      	movs	r2, #91	; 0x5b
 800bd88:	721a      	strb	r2, [r3, #8]
 800bd8a:	f107 0314 	add.w	r3, r7, #20
 800bd8e:	220d      	movs	r2, #13
 800bd90:	725a      	strb	r2, [r3, #9]
 800bd92:	f107 0314 	add.w	r3, r7, #20
 800bd96:	225d      	movs	r2, #93	; 0x5d
 800bd98:	729a      	strb	r2, [r3, #10]
 800bd9a:	f107 0314 	add.w	r3, r7, #20
 800bd9e:	220e      	movs	r2, #14
 800bda0:	72da      	strb	r2, [r3, #11]
 800bda2:	f107 0314 	add.w	r3, r7, #20
 800bda6:	227c      	movs	r2, #124	; 0x7c
 800bda8:	731a      	strb	r2, [r3, #12]
 800bdaa:	f107 0314 	add.w	r3, r7, #20
 800bdae:	2215      	movs	r2, #21
 800bdb0:	735a      	strb	r2, [r3, #13]
 800bdb2:	f107 0314 	add.w	r3, r7, #20
 800bdb6:	2226      	movs	r2, #38	; 0x26
 800bdb8:	739a      	strb	r2, [r3, #14]
 800bdba:	f107 0314 	add.w	r3, r7, #20
 800bdbe:	2216      	movs	r2, #22
 800bdc0:	73da      	strb	r2, [r3, #15]
 800bdc2:	f107 0314 	add.w	r3, r7, #20
 800bdc6:	222b      	movs	r2, #43	; 0x2b
 800bdc8:	741a      	strb	r2, [r3, #16]
 800bdca:	f107 0314 	add.w	r3, r7, #20
 800bdce:	221f      	movs	r2, #31
 800bdd0:	745a      	strb	r2, [r3, #17]
 800bdd2:	f107 0314 	add.w	r3, r7, #20
 800bdd6:	222d      	movs	r2, #45	; 0x2d
 800bdd8:	749a      	strb	r2, [r3, #18]
 800bdda:	f107 0314 	add.w	r3, r7, #20
 800bdde:	2220      	movs	r2, #32
 800bde0:	74da      	strb	r2, [r3, #19]
 800bde2:	f107 0314 	add.w	r3, r7, #20
 800bde6:	222a      	movs	r2, #42	; 0x2a
 800bde8:	751a      	strb	r2, [r3, #20]
 800bdea:	f107 0314 	add.w	r3, r7, #20
 800bdee:	2221      	movs	r2, #33	; 0x21
 800bdf0:	755a      	strb	r2, [r3, #21]
 800bdf2:	f107 0314 	add.w	r3, r7, #20
 800bdf6:	222f      	movs	r2, #47	; 0x2f
 800bdf8:	759a      	strb	r2, [r3, #22]
 800bdfa:	f107 0314 	add.w	r3, r7, #20
 800bdfe:	2222      	movs	r2, #34	; 0x22
 800be00:	75da      	strb	r2, [r3, #23]
 800be02:	f107 0314 	add.w	r3, r7, #20
 800be06:	225e      	movs	r2, #94	; 0x5e
 800be08:	761a      	strb	r2, [r3, #24]
 800be0a:	f107 0314 	add.w	r3, r7, #20
 800be0e:	2223      	movs	r2, #35	; 0x23
 800be10:	765a      	strb	r2, [r3, #25]
 800be12:	f107 0314 	add.w	r3, r7, #20
 800be16:	2225      	movs	r2, #37	; 0x25
 800be18:	769a      	strb	r2, [r3, #26]
 800be1a:	f107 0314 	add.w	r3, r7, #20
 800be1e:	2224      	movs	r2, #36	; 0x24
 800be20:	76da      	strb	r2, [r3, #27]
 800be22:	f107 0314 	add.w	r3, r7, #20
 800be26:	2228      	movs	r2, #40	; 0x28
 800be28:	771a      	strb	r2, [r3, #28]
 800be2a:	f107 0314 	add.w	r3, r7, #20
 800be2e:	2226      	movs	r2, #38	; 0x26
 800be30:	775a      	strb	r2, [r3, #29]
 800be32:	f107 0314 	add.w	r3, r7, #20
 800be36:	2229      	movs	r2, #41	; 0x29
 800be38:	779a      	strb	r2, [r3, #30]
 800be3a:	f107 0314 	add.w	r3, r7, #20
 800be3e:	2227      	movs	r2, #39	; 0x27
 800be40:	77da      	strb	r2, [r3, #31]
 800be42:	f107 0314 	add.w	r3, r7, #20
 800be46:	2225      	movs	r2, #37	; 0x25
 800be48:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 800be4c:	f107 030c 	add.w	r3, r7, #12
 800be50:	f107 0214 	add.w	r2, r7, #20
 800be54:	601a      	str	r2, [r3, #0]
 800be56:	f107 030c 	add.w	r3, r7, #12
 800be5a:	2211      	movs	r2, #17
 800be5c:	605a      	str	r2, [r3, #4]
 800be5e:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800be62:	4618      	mov	r0, r3
 800be64:	f7f5 ff3e 	bl	8001ce4 <_ZNSaISt4pairIKc10token_typeEEC1Ev>
 800be68:	f107 0138 	add.w	r1, r7, #56	; 0x38
 800be6c:	f107 020c 	add.w	r2, r7, #12
 800be70:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800be74:	9300      	str	r3, [sp, #0]
 800be76:	460b      	mov	r3, r1
 800be78:	ca06      	ldmia	r2, {r1, r2}
 800be7a:	4885      	ldr	r0, [pc, #532]	; (800c090 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 800be7c:	f7f5 ff4a 	bl	8001d14 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 800be80:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800be84:	4618      	mov	r0, r3
 800be86:	f7f5 ff39 	bl	8001cfc <_ZNSaISt4pairIKc10token_typeEED1Ev>
	{"true", TOKEN_TRUE},
 800be8a:	2305      	movs	r3, #5
 800be8c:	f887 3162 	strb.w	r3, [r7, #354]	; 0x162
};
 800be90:	f507 72b1 	add.w	r2, r7, #354	; 0x162
 800be94:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800be98:	497e      	ldr	r1, [pc, #504]	; (800c094 <_Z41__static_initialization_and_destruction_0ii+0x388>)
 800be9a:	4618      	mov	r0, r3
 800be9c:	f7f5 f92c 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"false", TOKEN_FALSE},
 800bea0:	2306      	movs	r3, #6
 800bea2:	f887 3163 	strb.w	r3, [r7, #355]	; 0x163
};
 800bea6:	f207 1263 	addw	r2, r7, #355	; 0x163
 800beaa:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800beae:	331c      	adds	r3, #28
 800beb0:	4979      	ldr	r1, [pc, #484]	; (800c098 <_Z41__static_initialization_and_destruction_0ii+0x38c>)
 800beb2:	4618      	mov	r0, r3
 800beb4:	f7f5 f948 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"setup", TOKEN_SETUP},
 800beb8:	2307      	movs	r3, #7
 800beba:	f887 3164 	strb.w	r3, [r7, #356]	; 0x164
};
 800bebe:	f507 72b2 	add.w	r2, r7, #356	; 0x164
 800bec2:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800bec6:	3338      	adds	r3, #56	; 0x38
 800bec8:	4974      	ldr	r1, [pc, #464]	; (800c09c <_Z41__static_initialization_and_destruction_0ii+0x390>)
 800beca:	4618      	mov	r0, r3
 800becc:	f7f5 f93c 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"loop", TOKEN_LOOP},
 800bed0:	2308      	movs	r3, #8
 800bed2:	f887 3165 	strb.w	r3, [r7, #357]	; 0x165
};
 800bed6:	f207 1265 	addw	r2, r7, #357	; 0x165
 800beda:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800bede:	3354      	adds	r3, #84	; 0x54
 800bee0:	496f      	ldr	r1, [pc, #444]	; (800c0a0 <_Z41__static_initialization_and_destruction_0ii+0x394>)
 800bee2:	4618      	mov	r0, r3
 800bee4:	f7f5 f908 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"finish", TOKEN_FINISH},
 800bee8:	2309      	movs	r3, #9
 800beea:	f887 3166 	strb.w	r3, [r7, #358]	; 0x166
};
 800beee:	f507 72b3 	add.w	r2, r7, #358	; 0x166
 800bef2:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800bef6:	3370      	adds	r3, #112	; 0x70
 800bef8:	496a      	ldr	r1, [pc, #424]	; (800c0a4 <_Z41__static_initialization_and_destruction_0ii+0x398>)
 800befa:	4618      	mov	r0, r3
 800befc:	f7f5 f94c 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"if", TOKEN_IF},
 800bf00:	2310      	movs	r3, #16
 800bf02:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167
};
 800bf06:	f207 1267 	addw	r2, r7, #359	; 0x167
 800bf0a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800bf0e:	338c      	adds	r3, #140	; 0x8c
 800bf10:	4965      	ldr	r1, [pc, #404]	; (800c0a8 <_Z41__static_initialization_and_destruction_0ii+0x39c>)
 800bf12:	4618      	mov	r0, r3
 800bf14:	f7f5 f968 	bl	80011e8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>
	{"elseif", TOKEN_ELSEIF},
 800bf18:	2311      	movs	r3, #17
 800bf1a:	f887 3168 	strb.w	r3, [r7, #360]	; 0x168
};
 800bf1e:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 800bf22:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800bf26:	33a8      	adds	r3, #168	; 0xa8
 800bf28:	4960      	ldr	r1, [pc, #384]	; (800c0ac <_Z41__static_initialization_and_destruction_0ii+0x3a0>)
 800bf2a:	4618      	mov	r0, r3
 800bf2c:	f7f5 f934 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"else", TOKEN_ELSE},
 800bf30:	2312      	movs	r3, #18
 800bf32:	f887 3169 	strb.w	r3, [r7, #361]	; 0x169
};
 800bf36:	f207 1269 	addw	r2, r7, #361	; 0x169
 800bf3a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800bf3e:	33c4      	adds	r3, #196	; 0xc4
 800bf40:	495b      	ldr	r1, [pc, #364]	; (800c0b0 <_Z41__static_initialization_and_destruction_0ii+0x3a4>)
 800bf42:	4618      	mov	r0, r3
 800bf44:	f7f5 f8d8 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"while", TOKEN_WHILE},
 800bf48:	2313      	movs	r3, #19
 800bf4a:	f887 316a 	strb.w	r3, [r7, #362]	; 0x16a
};
 800bf4e:	f507 72b5 	add.w	r2, r7, #362	; 0x16a
 800bf52:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800bf56:	33e0      	adds	r3, #224	; 0xe0
 800bf58:	4956      	ldr	r1, [pc, #344]	; (800c0b4 <_Z41__static_initialization_and_destruction_0ii+0x3a8>)
 800bf5a:	4618      	mov	r0, r3
 800bf5c:	f7f5 f8f4 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"end", TOKEN_END},
 800bf60:	2314      	movs	r3, #20
 800bf62:	f887 316b 	strb.w	r3, [r7, #363]	; 0x16b
};
 800bf66:	f207 126b 	addw	r2, r7, #363	; 0x16b
 800bf6a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800bf6e:	33fc      	adds	r3, #252	; 0xfc
 800bf70:	4951      	ldr	r1, [pc, #324]	; (800c0b8 <_Z41__static_initialization_and_destruction_0ii+0x3ac>)
 800bf72:	4618      	mov	r0, r3
 800bf74:	f7f5 f960 	bl	8001238 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>
 800bf78:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800bf7c:	f107 0248 	add.w	r2, r7, #72	; 0x48
 800bf80:	601a      	str	r2, [r3, #0]
 800bf82:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800bf86:	220a      	movs	r2, #10
 800bf88:	605a      	str	r2, [r3, #4]
 800bf8a:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800bf8e:	4618      	mov	r0, r3
 800bf90:	f7f5 ff4d 	bl	8001e2e <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 800bf94:	f507 71b6 	add.w	r1, r7, #364	; 0x16c
 800bf98:	f107 0240 	add.w	r2, r7, #64	; 0x40
 800bf9c:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800bfa0:	9300      	str	r3, [sp, #0]
 800bfa2:	460b      	mov	r3, r1
 800bfa4:	ca06      	ldmia	r2, {r1, r2}
 800bfa6:	4845      	ldr	r0, [pc, #276]	; (800c0bc <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 800bfa8:	f7f5 ff59 	bl	8001e5e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>
 800bfac:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800bfb0:	4618      	mov	r0, r3
 800bfb2:	f7f5 ff48 	bl	8001e46 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 800bfb6:	f107 0448 	add.w	r4, r7, #72	; 0x48
 800bfba:	f504 748c 	add.w	r4, r4, #280	; 0x118
 800bfbe:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800bfc2:	429c      	cmp	r4, r3
 800bfc4:	d004      	beq.n	800bfd0 <_Z41__static_initialization_and_destruction_0ii+0x2c4>
 800bfc6:	3c1c      	subs	r4, #28
 800bfc8:	4620      	mov	r0, r4
 800bfca:	f7f5 f888 	bl	80010de <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 800bfce:	e7f6      	b.n	800bfbe <_Z41__static_initialization_and_destruction_0ii+0x2b2>
};
 800bfd0:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 800bfd4:	2200      	movs	r2, #0
 800bfd6:	601a      	str	r2, [r3, #0]
 800bfd8:	605a      	str	r2, [r3, #4]
 800bfda:	609a      	str	r2, [r3, #8]
 800bfdc:	233c      	movs	r3, #60	; 0x3c
 800bfde:	f887 317c 	strb.w	r3, [r7, #380]	; 0x17c
 800bfe2:	231b      	movs	r3, #27
 800bfe4:	f887 317d 	strb.w	r3, [r7, #381]	; 0x17d
 800bfe8:	231c      	movs	r3, #28
 800bfea:	f887 317e 	strb.w	r3, [r7, #382]	; 0x17e
 800bfee:	233e      	movs	r3, #62	; 0x3e
 800bff0:	f887 317f 	strb.w	r3, [r7, #383]	; 0x17f
 800bff4:	2319      	movs	r3, #25
 800bff6:	f887 3180 	strb.w	r3, [r7, #384]	; 0x180
 800bffa:	231a      	movs	r3, #26
 800bffc:	f887 3181 	strb.w	r3, [r7, #385]	; 0x181
 800c000:	233d      	movs	r3, #61	; 0x3d
 800c002:	f887 3182 	strb.w	r3, [r7, #386]	; 0x182
 800c006:	2318      	movs	r3, #24
 800c008:	f887 3183 	strb.w	r3, [r7, #387]	; 0x183
 800c00c:	231d      	movs	r3, #29
 800c00e:	f887 3184 	strb.w	r3, [r7, #388]	; 0x184
 800c012:	2321      	movs	r3, #33	; 0x21
 800c014:	f887 3185 	strb.w	r3, [r7, #389]	; 0x185
 800c018:	2317      	movs	r3, #23
 800c01a:	f887 3186 	strb.w	r3, [r7, #390]	; 0x186
 800c01e:	231e      	movs	r3, #30
 800c020:	f887 3187 	strb.w	r3, [r7, #391]	; 0x187
 800c024:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 800c028:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 800c02c:	2304      	movs	r3, #4
 800c02e:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 800c032:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 800c036:	4618      	mov	r0, r3
 800c038:	f7f5 ff41 	bl	8001ebe <_ZNSaISt4pairIKc12double_tokenEEC1Ev>
 800c03c:	f507 72c4 	add.w	r2, r7, #392	; 0x188
 800c040:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 800c044:	9300      	str	r3, [sp, #0]
 800c046:	4613      	mov	r3, r2
 800c048:	f507 72ba 	add.w	r2, r7, #372	; 0x174
 800c04c:	ca06      	ldmia	r2, {r1, r2}
 800c04e:	481c      	ldr	r0, [pc, #112]	; (800c0c0 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 800c050:	f7f5 ff4d 	bl	8001eee <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 800c054:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 800c058:	4618      	mov	r0, r3
 800c05a:	f7f5 ff3c 	bl	8001ed6 <_ZNSaISt4pairIKc12double_tokenEED1Ev>
static const std::map<char, double_token> token_double_chars
 800c05e:	1d3b      	adds	r3, r7, #4
 800c060:	681b      	ldr	r3, [r3, #0]
 800c062:	2b00      	cmp	r3, #0
 800c064:	d10e      	bne.n	800c084 <_Z41__static_initialization_and_destruction_0ii+0x378>
 800c066:	463b      	mov	r3, r7
 800c068:	681b      	ldr	r3, [r3, #0]
 800c06a:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800c06e:	4293      	cmp	r3, r2
 800c070:	d108      	bne.n	800c084 <_Z41__static_initialization_and_destruction_0ii+0x378>
 800c072:	4813      	ldr	r0, [pc, #76]	; (800c0c0 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 800c074:	f7fd fc06 	bl	8009884 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>
static const std::map<std::string, token_type> token_strings
 800c078:	4810      	ldr	r0, [pc, #64]	; (800c0bc <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 800c07a:	f7fd fc10 	bl	800989e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
static const std::map<char, token_type> token_chars
 800c07e:	4804      	ldr	r0, [pc, #16]	; (800c090 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 800c080:	f7fd fc1a 	bl	80098b8 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>
 800c084:	bf00      	nop
 800c086:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 800c08a:	46bd      	mov	sp, r7
 800c08c:	bd90      	pop	{r4, r7, pc}
 800c08e:	bf00      	nop
 800c090:	20000254 	.word	0x20000254
 800c094:	08029550 	.word	0x08029550
 800c098:	08029558 	.word	0x08029558
 800c09c:	08029560 	.word	0x08029560
 800c0a0:	08029568 	.word	0x08029568
 800c0a4:	08029570 	.word	0x08029570
 800c0a8:	08029578 	.word	0x08029578
 800c0ac:	0802957c 	.word	0x0802957c
 800c0b0:	08029584 	.word	0x08029584
 800c0b4:	0802958c 	.word	0x0802958c
 800c0b8:	08029594 	.word	0x08029594
 800c0bc:	2000026c 	.word	0x2000026c
 800c0c0:	20000284 	.word	0x20000284

0800c0c4 <_GLOBAL__sub_I__ZN17Primal_expressionD2Ev>:
 800c0c4:	b580      	push	{r7, lr}
 800c0c6:	af00      	add	r7, sp, #0
 800c0c8:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800c0cc:	2001      	movs	r0, #1
 800c0ce:	f7ff fe1d 	bl	800bd0c <_Z41__static_initialization_and_destruction_0ii>
 800c0d2:	bd80      	pop	{r7, pc}

0800c0d4 <_GLOBAL__sub_D__ZN17Primal_expressionD2Ev>:
 800c0d4:	b580      	push	{r7, lr}
 800c0d6:	af00      	add	r7, sp, #0
 800c0d8:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800c0dc:	2000      	movs	r0, #0
 800c0de:	f7ff fe15 	bl	800bd0c <_Z41__static_initialization_and_destruction_0ii>
 800c0e2:	bd80      	pop	{r7, pc}

0800c0e4 <_ZN21Expression_calculatorC1Ev>:
#include <Expression_calculator.h>

Expression_calculator::Expression_calculator()
 800c0e4:	b480      	push	{r7}
 800c0e6:	b083      	sub	sp, #12
 800c0e8:	af00      	add	r7, sp, #0
 800c0ea:	6078      	str	r0, [r7, #4]
{

}
 800c0ec:	687b      	ldr	r3, [r7, #4]
 800c0ee:	4618      	mov	r0, r3
 800c0f0:	370c      	adds	r7, #12
 800c0f2:	46bd      	mov	sp, r7
 800c0f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c0f8:	4770      	bx	lr
	...

0800c0fc <_ZN21Expression_calculator12get_instanceEv>:

Expression_calculator& Expression_calculator::get_instance()
{
 800c0fc:	b580      	push	{r7, lr}
 800c0fe:	af00      	add	r7, sp, #0
	static Expression_calculator instance;
 800c100:	4b10      	ldr	r3, [pc, #64]	; (800c144 <_ZN21Expression_calculator12get_instanceEv+0x48>)
 800c102:	781b      	ldrb	r3, [r3, #0]
 800c104:	f3bf 8f5b 	dmb	ish
 800c108:	b2db      	uxtb	r3, r3
 800c10a:	f003 0301 	and.w	r3, r3, #1
 800c10e:	2b00      	cmp	r3, #0
 800c110:	bf0c      	ite	eq
 800c112:	2301      	moveq	r3, #1
 800c114:	2300      	movne	r3, #0
 800c116:	b2db      	uxtb	r3, r3
 800c118:	2b00      	cmp	r3, #0
 800c11a:	d010      	beq.n	800c13e <_ZN21Expression_calculator12get_instanceEv+0x42>
 800c11c:	4809      	ldr	r0, [pc, #36]	; (800c144 <_ZN21Expression_calculator12get_instanceEv+0x48>)
 800c11e:	f017 f9db 	bl	80234d8 <__cxa_guard_acquire>
 800c122:	4603      	mov	r3, r0
 800c124:	2b00      	cmp	r3, #0
 800c126:	bf14      	ite	ne
 800c128:	2301      	movne	r3, #1
 800c12a:	2300      	moveq	r3, #0
 800c12c:	b2db      	uxtb	r3, r3
 800c12e:	2b00      	cmp	r3, #0
 800c130:	d005      	beq.n	800c13e <_ZN21Expression_calculator12get_instanceEv+0x42>
 800c132:	4805      	ldr	r0, [pc, #20]	; (800c148 <_ZN21Expression_calculator12get_instanceEv+0x4c>)
 800c134:	f7ff ffd6 	bl	800c0e4 <_ZN21Expression_calculatorC1Ev>
 800c138:	4802      	ldr	r0, [pc, #8]	; (800c144 <_ZN21Expression_calculator12get_instanceEv+0x48>)
 800c13a:	f017 f9d9 	bl	80234f0 <__cxa_guard_release>
	return instance;
 800c13e:	4b02      	ldr	r3, [pc, #8]	; (800c148 <_ZN21Expression_calculator12get_instanceEv+0x4c>)
}
 800c140:	4618      	mov	r0, r3
 800c142:	bd80      	pop	{r7, pc}
 800c144:	200002e8 	.word	0x200002e8
 800c148:	200002e4 	.word	0x200002e4

0800c14c <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1EOSC_>:
      _Copy_assign_base(_Copy_assign_base&&) = default;
 800c14c:	b580      	push	{r7, lr}
 800c14e:	b082      	sub	sp, #8
 800c150:	af00      	add	r7, sp, #0
 800c152:	6078      	str	r0, [r7, #4]
 800c154:	6039      	str	r1, [r7, #0]
 800c156:	687b      	ldr	r3, [r7, #4]
 800c158:	683a      	ldr	r2, [r7, #0]
 800c15a:	4611      	mov	r1, r2
 800c15c:	4618      	mov	r0, r3
 800c15e:	f000 fd7f 	bl	800cc60 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1EOSC_>
 800c162:	687b      	ldr	r3, [r7, #4]
 800c164:	4618      	mov	r0, r3
 800c166:	3708      	adds	r7, #8
 800c168:	46bd      	mov	sp, r7
 800c16a:	bd80      	pop	{r7, pc}

0800c16c <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1EOSC_>:
      _Move_assign_base(_Move_assign_base&&) = default;
 800c16c:	b580      	push	{r7, lr}
 800c16e:	b082      	sub	sp, #8
 800c170:	af00      	add	r7, sp, #0
 800c172:	6078      	str	r0, [r7, #4]
 800c174:	6039      	str	r1, [r7, #0]
 800c176:	687b      	ldr	r3, [r7, #4]
 800c178:	683a      	ldr	r2, [r7, #0]
 800c17a:	4611      	mov	r1, r2
 800c17c:	4618      	mov	r0, r3
 800c17e:	f7ff ffe5 	bl	800c14c <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1EOSC_>
 800c182:	687b      	ldr	r3, [r7, #4]
 800c184:	4618      	mov	r0, r3
 800c186:	3708      	adds	r7, #8
 800c188:	46bd      	mov	sp, r7
 800c18a:	bd80      	pop	{r7, pc}

0800c18c <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1EOSC_>:
      _Variant_base(_Variant_base&&) = default;
 800c18c:	b580      	push	{r7, lr}
 800c18e:	b082      	sub	sp, #8
 800c190:	af00      	add	r7, sp, #0
 800c192:	6078      	str	r0, [r7, #4]
 800c194:	6039      	str	r1, [r7, #0]
 800c196:	687b      	ldr	r3, [r7, #4]
 800c198:	683a      	ldr	r2, [r7, #0]
 800c19a:	4611      	mov	r1, r2
 800c19c:	4618      	mov	r0, r3
 800c19e:	f7ff ffe5 	bl	800c16c <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1EOSC_>
 800c1a2:	687b      	ldr	r3, [r7, #4]
 800c1a4:	4618      	mov	r0, r3
 800c1a6:	3708      	adds	r7, #8
 800c1a8:	46bd      	mov	sp, r7
 800c1aa:	bd80      	pop	{r7, pc}

0800c1ac <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1EOSA_>:
      variant(variant&&) = default;
 800c1ac:	b580      	push	{r7, lr}
 800c1ae:	b082      	sub	sp, #8
 800c1b0:	af00      	add	r7, sp, #0
 800c1b2:	6078      	str	r0, [r7, #4]
 800c1b4:	6039      	str	r1, [r7, #0]
 800c1b6:	687b      	ldr	r3, [r7, #4]
 800c1b8:	683a      	ldr	r2, [r7, #0]
 800c1ba:	4611      	mov	r1, r2
 800c1bc:	4618      	mov	r0, r3
 800c1be:	f7ff ffe5 	bl	800c18c <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1EOSC_>
 800c1c2:	687b      	ldr	r3, [r7, #4]
 800c1c4:	4618      	mov	r0, r3
 800c1c6:	3708      	adds	r7, #8
 800c1c8:	46bd      	mov	sp, r7
 800c1ca:	bd80      	pop	{r7, pc}

0800c1cc <_ZN6SymbolC1EOS_>:
 800c1cc:	b580      	push	{r7, lr}
 800c1ce:	b082      	sub	sp, #8
 800c1d0:	af00      	add	r7, sp, #0
 800c1d2:	6078      	str	r0, [r7, #4]
 800c1d4:	6039      	str	r1, [r7, #0]
 800c1d6:	683b      	ldr	r3, [r7, #0]
 800c1d8:	781a      	ldrb	r2, [r3, #0]
 800c1da:	687b      	ldr	r3, [r7, #4]
 800c1dc:	701a      	strb	r2, [r3, #0]
 800c1de:	687b      	ldr	r3, [r7, #4]
 800c1e0:	1d1a      	adds	r2, r3, #4
 800c1e2:	683b      	ldr	r3, [r7, #0]
 800c1e4:	3304      	adds	r3, #4
 800c1e6:	4619      	mov	r1, r3
 800c1e8:	4610      	mov	r0, r2
 800c1ea:	f7ff ffdf 	bl	800c1ac <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1EOSA_>
 800c1ee:	687b      	ldr	r3, [r7, #4]
 800c1f0:	4618      	mov	r0, r3
 800c1f2:	3708      	adds	r7, #8
 800c1f4:	46bd      	mov	sp, r7
 800c1f6:	bd80      	pop	{r7, pc}

0800c1f8 <_ZN21Expression_calculator8evaluateEP10Expression>:

Symbol Expression_calculator::evaluate(Expression *exp)
{
 800c1f8:	b580      	push	{r7, lr}
 800c1fa:	b0a0      	sub	sp, #128	; 0x80
 800c1fc:	af00      	add	r7, sp, #0
 800c1fe:	60f8      	str	r0, [r7, #12]
 800c200:	60b9      	str	r1, [r7, #8]
 800c202:	607a      	str	r2, [r7, #4]
	Position_counter::get_instance().set_line(exp->line);
 800c204:	f00a fb3c 	bl	8016880 <_ZN16Position_counter12get_instanceEv>
 800c208:	4602      	mov	r2, r0
 800c20a:	687b      	ldr	r3, [r7, #4]
 800c20c:	681b      	ldr	r3, [r3, #0]
 800c20e:	4619      	mov	r1, r3
 800c210:	4610      	mov	r0, r2
 800c212:	f00a fba8 	bl	8016966 <_ZN16Position_counter8set_lineEi>
	Position_counter::get_instance().set_position(exp->position);
 800c216:	f00a fb33 	bl	8016880 <_ZN16Position_counter12get_instanceEv>
 800c21a:	4602      	mov	r2, r0
 800c21c:	687b      	ldr	r3, [r7, #4]
 800c21e:	685b      	ldr	r3, [r3, #4]
 800c220:	4619      	mov	r1, r3
 800c222:	4610      	mov	r0, r2
 800c224:	f00a fbad 	bl	8016982 <_ZN16Position_counter12set_positionEi>

	if (exp->and_exps.size() > 1)
 800c228:	687b      	ldr	r3, [r7, #4]
 800c22a:	3308      	adds	r3, #8
 800c22c:	4618      	mov	r0, r3
 800c22e:	f000 fcfa 	bl	800cc26 <_ZNKSt6vectorIP14And_expressionSaIS1_EE4sizeEv>
 800c232:	4603      	mov	r3, r0
 800c234:	2b01      	cmp	r3, #1
 800c236:	bf8c      	ite	hi
 800c238:	2301      	movhi	r3, #1
 800c23a:	2300      	movls	r3, #0
 800c23c:	b2db      	uxtb	r3, r3
 800c23e:	2b00      	cmp	r3, #0
 800c240:	d059      	beq.n	800c2f6 <_ZN21Expression_calculator8evaluateEP10Expression+0xfe>
	{
		Symbol var = false; // potrzebna krótsza ścieżka
 800c242:	f107 0310 	add.w	r3, r7, #16
 800c246:	2100      	movs	r1, #0
 800c248:	4618      	mov	r0, r3
 800c24a:	f00a fe8b 	bl	8016f64 <_ZN6SymbolC1Eb>
		for (And_expression *and_exp : exp->and_exps)
 800c24e:	687b      	ldr	r3, [r7, #4]
 800c250:	3308      	adds	r3, #8
 800c252:	67fb      	str	r3, [r7, #124]	; 0x7c
 800c254:	6ff8      	ldr	r0, [r7, #124]	; 0x7c
 800c256:	f7fe f988 	bl	800a56a <_ZNSt6vectorIP14And_expressionSaIS1_EE5beginEv>
 800c25a:	4603      	mov	r3, r0
 800c25c:	637b      	str	r3, [r7, #52]	; 0x34
 800c25e:	6ff8      	ldr	r0, [r7, #124]	; 0x7c
 800c260:	f7fe f993 	bl	800a58a <_ZNSt6vectorIP14And_expressionSaIS1_EE3endEv>
 800c264:	4603      	mov	r3, r0
 800c266:	633b      	str	r3, [r7, #48]	; 0x30
 800c268:	f107 0230 	add.w	r2, r7, #48	; 0x30
 800c26c:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800c270:	4611      	mov	r1, r2
 800c272:	4618      	mov	r0, r3
 800c274:	f7fe f99a 	bl	800a5ac <_ZN9__gnu_cxxneIPP14And_expressionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
 800c278:	4603      	mov	r3, r0
 800c27a:	2b00      	cmp	r3, #0
 800c27c:	d02f      	beq.n	800c2de <_ZN21Expression_calculator8evaluateEP10Expression+0xe6>
 800c27e:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800c282:	4618      	mov	r0, r3
 800c284:	f7fe f9ba 	bl	800a5fc <_ZNK9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEEdeEv>
 800c288:	4603      	mov	r3, r0
 800c28a:	681b      	ldr	r3, [r3, #0]
 800c28c:	67bb      	str	r3, [r7, #120]	; 0x78
		{
			var = var || evaluate(and_exp);
 800c28e:	f107 0358 	add.w	r3, r7, #88	; 0x58
 800c292:	6fba      	ldr	r2, [r7, #120]	; 0x78
 800c294:	68b9      	ldr	r1, [r7, #8]
 800c296:	4618      	mov	r0, r3
 800c298:	f000 f83e 	bl	800c318 <_ZN21Expression_calculator8evaluateEP14And_expression>
 800c29c:	f107 0338 	add.w	r3, r7, #56	; 0x38
 800c2a0:	f107 0258 	add.w	r2, r7, #88	; 0x58
 800c2a4:	f107 0110 	add.w	r1, r7, #16
 800c2a8:	4618      	mov	r0, r3
 800c2aa:	f00b f871 	bl	8017390 <_ZN6SymbolooES_>
 800c2ae:	f107 0238 	add.w	r2, r7, #56	; 0x38
 800c2b2:	f107 0310 	add.w	r3, r7, #16
 800c2b6:	4611      	mov	r1, r2
 800c2b8:	4618      	mov	r0, r3
 800c2ba:	f7f5 f903 	bl	80014c4 <_ZN6SymbolaSEOS_>
 800c2be:	f107 0338 	add.w	r3, r7, #56	; 0x38
 800c2c2:	4618      	mov	r0, r3
 800c2c4:	f7f5 f86a 	bl	800139c <_ZN6SymbolD1Ev>
 800c2c8:	f107 0358 	add.w	r3, r7, #88	; 0x58
 800c2cc:	4618      	mov	r0, r3
 800c2ce:	f7f5 f865 	bl	800139c <_ZN6SymbolD1Ev>
		for (And_expression *and_exp : exp->and_exps)
 800c2d2:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800c2d6:	4618      	mov	r0, r3
 800c2d8:	f7fe f980 	bl	800a5dc <_ZN9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEEppEv>
 800c2dc:	e7c4      	b.n	800c268 <_ZN21Expression_calculator8evaluateEP10Expression+0x70>
		}
		return var;
 800c2de:	f107 0310 	add.w	r3, r7, #16
 800c2e2:	4619      	mov	r1, r3
 800c2e4:	68f8      	ldr	r0, [r7, #12]
 800c2e6:	f7ff ff71 	bl	800c1cc <_ZN6SymbolC1EOS_>
		Symbol var = false; // potrzebna krótsza ścieżka
 800c2ea:	f107 0310 	add.w	r3, r7, #16
 800c2ee:	4618      	mov	r0, r3
 800c2f0:	f7f5 f854 	bl	800139c <_ZN6SymbolD1Ev>
 800c2f4:	e00c      	b.n	800c310 <_ZN21Expression_calculator8evaluateEP10Expression+0x118>

	}
	else
	{
		return evaluate(exp->and_exps[0]);
 800c2f6:	687b      	ldr	r3, [r7, #4]
 800c2f8:	3308      	adds	r3, #8
 800c2fa:	2100      	movs	r1, #0
 800c2fc:	4618      	mov	r0, r3
 800c2fe:	f000 fcc5 	bl	800cc8c <_ZNSt6vectorIP14And_expressionSaIS1_EEixEj>
 800c302:	4603      	mov	r3, r0
 800c304:	681a      	ldr	r2, [r3, #0]
 800c306:	68fb      	ldr	r3, [r7, #12]
 800c308:	68b9      	ldr	r1, [r7, #8]
 800c30a:	4618      	mov	r0, r3
 800c30c:	f000 f804 	bl	800c318 <_ZN21Expression_calculator8evaluateEP14And_expression>
	}
}
 800c310:	68f8      	ldr	r0, [r7, #12]
 800c312:	3780      	adds	r7, #128	; 0x80
 800c314:	46bd      	mov	sp, r7
 800c316:	bd80      	pop	{r7, pc}

0800c318 <_ZN21Expression_calculator8evaluateEP14And_expression>:

Symbol Expression_calculator::evaluate(And_expression *and_exp)
{
 800c318:	b580      	push	{r7, lr}
 800c31a:	b0a0      	sub	sp, #128	; 0x80
 800c31c:	af00      	add	r7, sp, #0
 800c31e:	60f8      	str	r0, [r7, #12]
 800c320:	60b9      	str	r1, [r7, #8]
 800c322:	607a      	str	r2, [r7, #4]
	if (and_exp->comp_exps.size() > 1)
 800c324:	687b      	ldr	r3, [r7, #4]
 800c326:	4618      	mov	r0, r3
 800c328:	f000 fcc0 	bl	800ccac <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE4sizeEv>
 800c32c:	4603      	mov	r3, r0
 800c32e:	2b01      	cmp	r3, #1
 800c330:	bf8c      	ite	hi
 800c332:	2301      	movhi	r3, #1
 800c334:	2300      	movls	r3, #0
 800c336:	b2db      	uxtb	r3, r3
 800c338:	2b00      	cmp	r3, #0
 800c33a:	d058      	beq.n	800c3ee <_ZN21Expression_calculator8evaluateEP14And_expression+0xd6>
	{
		Symbol var = true;
 800c33c:	f107 0310 	add.w	r3, r7, #16
 800c340:	2101      	movs	r1, #1
 800c342:	4618      	mov	r0, r3
 800c344:	f00a fe0e 	bl	8016f64 <_ZN6SymbolC1Eb>
		for (Compare_expression *comp_exp : and_exp->comp_exps)
 800c348:	687b      	ldr	r3, [r7, #4]
 800c34a:	67fb      	str	r3, [r7, #124]	; 0x7c
 800c34c:	6ff8      	ldr	r0, [r7, #124]	; 0x7c
 800c34e:	f7fe f89c 	bl	800a48a <_ZNSt6vectorIP18Compare_expressionSaIS1_EE5beginEv>
 800c352:	4603      	mov	r3, r0
 800c354:	637b      	str	r3, [r7, #52]	; 0x34
 800c356:	6ff8      	ldr	r0, [r7, #124]	; 0x7c
 800c358:	f7fe f8a7 	bl	800a4aa <_ZNSt6vectorIP18Compare_expressionSaIS1_EE3endEv>
 800c35c:	4603      	mov	r3, r0
 800c35e:	633b      	str	r3, [r7, #48]	; 0x30
 800c360:	f107 0230 	add.w	r2, r7, #48	; 0x30
 800c364:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800c368:	4611      	mov	r1, r2
 800c36a:	4618      	mov	r0, r3
 800c36c:	f7fe f8ae 	bl	800a4cc <_ZN9__gnu_cxxneIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
 800c370:	4603      	mov	r3, r0
 800c372:	2b00      	cmp	r3, #0
 800c374:	d02f      	beq.n	800c3d6 <_ZN21Expression_calculator8evaluateEP14And_expression+0xbe>
 800c376:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800c37a:	4618      	mov	r0, r3
 800c37c:	f7fe f8ce 	bl	800a51c <_ZNK9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEdeEv>
 800c380:	4603      	mov	r3, r0
 800c382:	681b      	ldr	r3, [r3, #0]
 800c384:	67bb      	str	r3, [r7, #120]	; 0x78
		{
			var = var && evaluate(comp_exp);
 800c386:	f107 0358 	add.w	r3, r7, #88	; 0x58
 800c38a:	6fba      	ldr	r2, [r7, #120]	; 0x78
 800c38c:	68b9      	ldr	r1, [r7, #8]
 800c38e:	4618      	mov	r0, r3
 800c390:	f000 f83e 	bl	800c410 <_ZN21Expression_calculator8evaluateEP18Compare_expression>
 800c394:	f107 0338 	add.w	r3, r7, #56	; 0x38
 800c398:	f107 0258 	add.w	r2, r7, #88	; 0x58
 800c39c:	f107 0110 	add.w	r1, r7, #16
 800c3a0:	4618      	mov	r0, r3
 800c3a2:	f00a ffab 	bl	80172fc <_ZN6SymbolaaES_>
 800c3a6:	f107 0238 	add.w	r2, r7, #56	; 0x38
 800c3aa:	f107 0310 	add.w	r3, r7, #16
 800c3ae:	4611      	mov	r1, r2
 800c3b0:	4618      	mov	r0, r3
 800c3b2:	f7f5 f887 	bl	80014c4 <_ZN6SymbolaSEOS_>
 800c3b6:	f107 0338 	add.w	r3, r7, #56	; 0x38
 800c3ba:	4618      	mov	r0, r3
 800c3bc:	f7f4 ffee 	bl	800139c <_ZN6SymbolD1Ev>
 800c3c0:	f107 0358 	add.w	r3, r7, #88	; 0x58
 800c3c4:	4618      	mov	r0, r3
 800c3c6:	f7f4 ffe9 	bl	800139c <_ZN6SymbolD1Ev>
		for (Compare_expression *comp_exp : and_exp->comp_exps)
 800c3ca:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800c3ce:	4618      	mov	r0, r3
 800c3d0:	f7fe f894 	bl	800a4fc <_ZN9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEppEv>
 800c3d4:	e7c4      	b.n	800c360 <_ZN21Expression_calculator8evaluateEP14And_expression+0x48>
		}
		return var;
 800c3d6:	f107 0310 	add.w	r3, r7, #16
 800c3da:	4619      	mov	r1, r3
 800c3dc:	68f8      	ldr	r0, [r7, #12]
 800c3de:	f7ff fef5 	bl	800c1cc <_ZN6SymbolC1EOS_>
		Symbol var = true;
 800c3e2:	f107 0310 	add.w	r3, r7, #16
 800c3e6:	4618      	mov	r0, r3
 800c3e8:	f7f4 ffd8 	bl	800139c <_ZN6SymbolD1Ev>
 800c3ec:	e00b      	b.n	800c406 <_ZN21Expression_calculator8evaluateEP14And_expression+0xee>
	}
	else
	{
		return evaluate(and_exp->comp_exps[0]);
 800c3ee:	687b      	ldr	r3, [r7, #4]
 800c3f0:	2100      	movs	r1, #0
 800c3f2:	4618      	mov	r0, r3
 800c3f4:	f000 fc6a 	bl	800cccc <_ZNSt6vectorIP18Compare_expressionSaIS1_EEixEj>
 800c3f8:	4603      	mov	r3, r0
 800c3fa:	681a      	ldr	r2, [r3, #0]
 800c3fc:	68fb      	ldr	r3, [r7, #12]
 800c3fe:	68b9      	ldr	r1, [r7, #8]
 800c400:	4618      	mov	r0, r3
 800c402:	f000 f805 	bl	800c410 <_ZN21Expression_calculator8evaluateEP18Compare_expression>
	}
}
 800c406:	68f8      	ldr	r0, [r7, #12]
 800c408:	3780      	adds	r7, #128	; 0x80
 800c40a:	46bd      	mov	sp, r7
 800c40c:	bd80      	pop	{r7, pc}
	...

0800c410 <_ZN21Expression_calculator8evaluateEP18Compare_expression>:

Symbol Expression_calculator::evaluate(Compare_expression *comp_exp)
{
 800c410:	b580      	push	{r7, lr}
 800c412:	b0b4      	sub	sp, #208	; 0xd0
 800c414:	af00      	add	r7, sp, #0
 800c416:	60f8      	str	r0, [r7, #12]
 800c418:	60b9      	str	r1, [r7, #8]
 800c41a:	607a      	str	r2, [r7, #4]
	Symbol var = evaluate(comp_exp->left_rel_exp);
 800c41c:	687b      	ldr	r3, [r7, #4]
 800c41e:	681a      	ldr	r2, [r3, #0]
 800c420:	68fb      	ldr	r3, [r7, #12]
 800c422:	68b9      	ldr	r1, [r7, #8]
 800c424:	4618      	mov	r0, r3
 800c426:	f000 f87f 	bl	800c528 <_ZN21Expression_calculator8evaluateEP19Relation_expression>
	if (comp_exp->right_rel_exp)
 800c42a:	687b      	ldr	r3, [r7, #4]
 800c42c:	685b      	ldr	r3, [r3, #4]
 800c42e:	2b00      	cmp	r3, #0
 800c430:	d072      	beq.n	800c518 <_ZN21Expression_calculator8evaluateEP18Compare_expression+0x108>
	{
		switch (comp_exp->op)
 800c432:	687b      	ldr	r3, [r7, #4]
 800c434:	7a1b      	ldrb	r3, [r3, #8]
 800c436:	2b01      	cmp	r3, #1
 800c438:	d002      	beq.n	800c440 <_ZN21Expression_calculator8evaluateEP18Compare_expression+0x30>
 800c43a:	2b02      	cmp	r3, #2
 800c43c:	d021      	beq.n	800c482 <_ZN21Expression_calculator8evaluateEP18Compare_expression+0x72>
 800c43e:	e04e      	b.n	800c4de <_ZN21Expression_calculator8evaluateEP18Compare_expression+0xce>
		{
		case COMP_OP_EQUAL:
			var = var == evaluate(comp_exp->right_rel_exp);
 800c440:	687b      	ldr	r3, [r7, #4]
 800c442:	685a      	ldr	r2, [r3, #4]
 800c444:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800c448:	68b9      	ldr	r1, [r7, #8]
 800c44a:	4618      	mov	r0, r3
 800c44c:	f000 f86c 	bl	800c528 <_ZN21Expression_calculator8evaluateEP19Relation_expression>
 800c450:	f107 0314 	add.w	r3, r7, #20
 800c454:	f107 0234 	add.w	r2, r7, #52	; 0x34
 800c458:	68f9      	ldr	r1, [r7, #12]
 800c45a:	4618      	mov	r0, r3
 800c45c:	f00b f9dc 	bl	8017818 <_ZN6SymboleqES_>
 800c460:	f107 0314 	add.w	r3, r7, #20
 800c464:	4619      	mov	r1, r3
 800c466:	68f8      	ldr	r0, [r7, #12]
 800c468:	f7f5 f82c 	bl	80014c4 <_ZN6SymbolaSEOS_>
 800c46c:	f107 0314 	add.w	r3, r7, #20
 800c470:	4618      	mov	r0, r3
 800c472:	f7f4 ff93 	bl	800139c <_ZN6SymbolD1Ev>
 800c476:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800c47a:	4618      	mov	r0, r3
 800c47c:	f7f4 ff8e 	bl	800139c <_ZN6SymbolD1Ev>
			break;
 800c480:	e04a      	b.n	800c518 <_ZN21Expression_calculator8evaluateEP18Compare_expression+0x108>
		case COMP_OP_NOT_EQUAL:
			var = !(var == evaluate(comp_exp->right_rel_exp));
 800c482:	687b      	ldr	r3, [r7, #4]
 800c484:	685a      	ldr	r2, [r3, #4]
 800c486:	f107 0394 	add.w	r3, r7, #148	; 0x94
 800c48a:	68b9      	ldr	r1, [r7, #8]
 800c48c:	4618      	mov	r0, r3
 800c48e:	f000 f84b 	bl	800c528 <_ZN21Expression_calculator8evaluateEP19Relation_expression>
 800c492:	f107 0374 	add.w	r3, r7, #116	; 0x74
 800c496:	f107 0294 	add.w	r2, r7, #148	; 0x94
 800c49a:	68f9      	ldr	r1, [r7, #12]
 800c49c:	4618      	mov	r0, r3
 800c49e:	f00b f9bb 	bl	8017818 <_ZN6SymboleqES_>
 800c4a2:	f107 0354 	add.w	r3, r7, #84	; 0x54
 800c4a6:	f107 0274 	add.w	r2, r7, #116	; 0x74
 800c4aa:	4611      	mov	r1, r2
 800c4ac:	4618      	mov	r0, r3
 800c4ae:	f00a ffb9 	bl	8017424 <_ZN6SymbolntEv>
 800c4b2:	f107 0354 	add.w	r3, r7, #84	; 0x54
 800c4b6:	4619      	mov	r1, r3
 800c4b8:	68f8      	ldr	r0, [r7, #12]
 800c4ba:	f7f5 f803 	bl	80014c4 <_ZN6SymbolaSEOS_>
 800c4be:	f107 0354 	add.w	r3, r7, #84	; 0x54
 800c4c2:	4618      	mov	r0, r3
 800c4c4:	f7f4 ff6a 	bl	800139c <_ZN6SymbolD1Ev>
 800c4c8:	f107 0374 	add.w	r3, r7, #116	; 0x74
 800c4cc:	4618      	mov	r0, r3
 800c4ce:	f7f4 ff65 	bl	800139c <_ZN6SymbolD1Ev>
 800c4d2:	f107 0394 	add.w	r3, r7, #148	; 0x94
 800c4d6:	4618      	mov	r0, r3
 800c4d8:	f7f4 ff60 	bl	800139c <_ZN6SymbolD1Ev>
			break;
 800c4dc:	e01c      	b.n	800c518 <_ZN21Expression_calculator8evaluateEP18Compare_expression+0x108>
		default:
			Transmitter::report_error("compare operator");
 800c4de:	f107 03cc 	add.w	r3, r7, #204	; 0xcc
 800c4e2:	4618      	mov	r0, r3
 800c4e4:	f017 f818 	bl	8023518 <_ZNSaIcEC1Ev>
 800c4e8:	f107 02cc 	add.w	r2, r7, #204	; 0xcc
 800c4ec:	f107 03b4 	add.w	r3, r7, #180	; 0xb4
 800c4f0:	490c      	ldr	r1, [pc, #48]	; (800c524 <_ZN21Expression_calculator8evaluateEP18Compare_expression+0x114>)
 800c4f2:	4618      	mov	r0, r3
 800c4f4:	f7f5 fc49 	bl	8001d8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 800c4f8:	f107 03b4 	add.w	r3, r7, #180	; 0xb4
 800c4fc:	4618      	mov	r0, r3
 800c4fe:	f00c fb7f 	bl	8018c00 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 800c502:	f107 03b4 	add.w	r3, r7, #180	; 0xb4
 800c506:	4618      	mov	r0, r3
 800c508:	f017 fa97 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800c50c:	f107 03cc 	add.w	r3, r7, #204	; 0xcc
 800c510:	4618      	mov	r0, r3
 800c512:	f017 f802 	bl	802351a <_ZNSaIcED1Ev>
		}
	}

	return var;
 800c516:	e7ff      	b.n	800c518 <_ZN21Expression_calculator8evaluateEP18Compare_expression+0x108>
 800c518:	bf00      	nop
}
 800c51a:	68f8      	ldr	r0, [r7, #12]
 800c51c:	37d0      	adds	r7, #208	; 0xd0
 800c51e:	46bd      	mov	sp, r7
 800c520:	bd80      	pop	{r7, pc}
 800c522:	bf00      	nop
 800c524:	08029598 	.word	0x08029598

0800c528 <_ZN21Expression_calculator8evaluateEP19Relation_expression>:

Symbol Expression_calculator::evaluate(Relation_expression *rel_exp)
{
 800c528:	b580      	push	{r7, lr}
 800c52a:	b0b4      	sub	sp, #208	; 0xd0
 800c52c:	af00      	add	r7, sp, #0
 800c52e:	60f8      	str	r0, [r7, #12]
 800c530:	60b9      	str	r1, [r7, #8]
 800c532:	607a      	str	r2, [r7, #4]
	Symbol var = evaluate(rel_exp->left_sum_exp);
 800c534:	687b      	ldr	r3, [r7, #4]
 800c536:	681a      	ldr	r2, [r3, #0]
 800c538:	f107 0314 	add.w	r3, r7, #20
 800c53c:	68b9      	ldr	r1, [r7, #8]
 800c53e:	4618      	mov	r0, r3
 800c540:	f000 f89c 	bl	800c67c <_ZN21Expression_calculator8evaluateEP14Sum_expression>
	if (rel_exp->right_sum_exp)
 800c544:	687b      	ldr	r3, [r7, #4]
 800c546:	685b      	ldr	r3, [r3, #4]
 800c548:	2b00      	cmp	r3, #0
 800c54a:	f000 8085 	beq.w	800c658 <_ZN21Expression_calculator8evaluateEP19Relation_expression+0x130>
	{
		switch (rel_exp->op)
 800c54e:	687b      	ldr	r3, [r7, #4]
 800c550:	7a1b      	ldrb	r3, [r3, #8]
 800c552:	3b01      	subs	r3, #1
 800c554:	2b03      	cmp	r3, #3
 800c556:	d863      	bhi.n	800c620 <_ZN21Expression_calculator8evaluateEP19Relation_expression+0xf8>
 800c558:	a201      	add	r2, pc, #4	; (adr r2, 800c560 <_ZN21Expression_calculator8evaluateEP19Relation_expression+0x38>)
 800c55a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800c55e:	bf00      	nop
 800c560:	0800c5c9 	.word	0x0800c5c9
 800c564:	0800c5f5 	.word	0x0800c5f5
 800c568:	0800c571 	.word	0x0800c571
 800c56c:	0800c59d 	.word	0x0800c59d
		{
		case REL_OP_GREATER:
			return var > evaluate(rel_exp->right_sum_exp);
 800c570:	687b      	ldr	r3, [r7, #4]
 800c572:	685a      	ldr	r2, [r3, #4]
 800c574:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800c578:	68b9      	ldr	r1, [r7, #8]
 800c57a:	4618      	mov	r0, r3
 800c57c:	f000 f87e 	bl	800c67c <_ZN21Expression_calculator8evaluateEP14Sum_expression>
 800c580:	68fb      	ldr	r3, [r7, #12]
 800c582:	f107 0234 	add.w	r2, r7, #52	; 0x34
 800c586:	f107 0114 	add.w	r1, r7, #20
 800c58a:	4618      	mov	r0, r3
 800c58c:	f00a ff84 	bl	8017498 <_ZN6SymbolgtES_>
 800c590:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800c594:	4618      	mov	r0, r3
 800c596:	f7f4 ff01 	bl	800139c <_ZN6SymbolD1Ev>
 800c59a:	e063      	b.n	800c664 <_ZN21Expression_calculator8evaluateEP19Relation_expression+0x13c>
		case REL_OP_GREATER_EQUAL:
			return var >= evaluate(rel_exp->right_sum_exp);
 800c59c:	687b      	ldr	r3, [r7, #4]
 800c59e:	685a      	ldr	r2, [r3, #4]
 800c5a0:	f107 0354 	add.w	r3, r7, #84	; 0x54
 800c5a4:	68b9      	ldr	r1, [r7, #8]
 800c5a6:	4618      	mov	r0, r3
 800c5a8:	f000 f868 	bl	800c67c <_ZN21Expression_calculator8evaluateEP14Sum_expression>
 800c5ac:	68fb      	ldr	r3, [r7, #12]
 800c5ae:	f107 0254 	add.w	r2, r7, #84	; 0x54
 800c5b2:	f107 0114 	add.w	r1, r7, #20
 800c5b6:	4618      	mov	r0, r3
 800c5b8:	f00a ffde 	bl	8017578 <_ZN6SymbolgeES_>
 800c5bc:	f107 0354 	add.w	r3, r7, #84	; 0x54
 800c5c0:	4618      	mov	r0, r3
 800c5c2:	f7f4 feeb 	bl	800139c <_ZN6SymbolD1Ev>
 800c5c6:	e04d      	b.n	800c664 <_ZN21Expression_calculator8evaluateEP19Relation_expression+0x13c>
		case REL_OP_SMALLER:
			return var < evaluate(rel_exp->right_sum_exp);
 800c5c8:	687b      	ldr	r3, [r7, #4]
 800c5ca:	685a      	ldr	r2, [r3, #4]
 800c5cc:	f107 0374 	add.w	r3, r7, #116	; 0x74
 800c5d0:	68b9      	ldr	r1, [r7, #8]
 800c5d2:	4618      	mov	r0, r3
 800c5d4:	f000 f852 	bl	800c67c <_ZN21Expression_calculator8evaluateEP14Sum_expression>
 800c5d8:	68fb      	ldr	r3, [r7, #12]
 800c5da:	f107 0274 	add.w	r2, r7, #116	; 0x74
 800c5de:	f107 0114 	add.w	r1, r7, #20
 800c5e2:	4618      	mov	r0, r3
 800c5e4:	f00b f838 	bl	8017658 <_ZN6SymbolltES_>
 800c5e8:	f107 0374 	add.w	r3, r7, #116	; 0x74
 800c5ec:	4618      	mov	r0, r3
 800c5ee:	f7f4 fed5 	bl	800139c <_ZN6SymbolD1Ev>
 800c5f2:	e037      	b.n	800c664 <_ZN21Expression_calculator8evaluateEP19Relation_expression+0x13c>
		case REL_OP_SMALLER_EQUAL:
			return var <= evaluate(rel_exp->right_sum_exp);
 800c5f4:	687b      	ldr	r3, [r7, #4]
 800c5f6:	685a      	ldr	r2, [r3, #4]
 800c5f8:	f107 0394 	add.w	r3, r7, #148	; 0x94
 800c5fc:	68b9      	ldr	r1, [r7, #8]
 800c5fe:	4618      	mov	r0, r3
 800c600:	f000 f83c 	bl	800c67c <_ZN21Expression_calculator8evaluateEP14Sum_expression>
 800c604:	68fb      	ldr	r3, [r7, #12]
 800c606:	f107 0294 	add.w	r2, r7, #148	; 0x94
 800c60a:	f107 0114 	add.w	r1, r7, #20
 800c60e:	4618      	mov	r0, r3
 800c610:	f00b f892 	bl	8017738 <_ZN6SymbolleES_>
 800c614:	f107 0394 	add.w	r3, r7, #148	; 0x94
 800c618:	4618      	mov	r0, r3
 800c61a:	f7f4 febf 	bl	800139c <_ZN6SymbolD1Ev>
 800c61e:	e021      	b.n	800c664 <_ZN21Expression_calculator8evaluateEP19Relation_expression+0x13c>
		default:
			Transmitter::report_error("relation operator");
 800c620:	f107 03cc 	add.w	r3, r7, #204	; 0xcc
 800c624:	4618      	mov	r0, r3
 800c626:	f016 ff77 	bl	8023518 <_ZNSaIcEC1Ev>
 800c62a:	f107 02cc 	add.w	r2, r7, #204	; 0xcc
 800c62e:	f107 03b4 	add.w	r3, r7, #180	; 0xb4
 800c632:	4911      	ldr	r1, [pc, #68]	; (800c678 <_ZN21Expression_calculator8evaluateEP19Relation_expression+0x150>)
 800c634:	4618      	mov	r0, r3
 800c636:	f7f5 fba8 	bl	8001d8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 800c63a:	f107 03b4 	add.w	r3, r7, #180	; 0xb4
 800c63e:	4618      	mov	r0, r3
 800c640:	f00c fade 	bl	8018c00 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 800c644:	f107 03b4 	add.w	r3, r7, #180	; 0xb4
 800c648:	4618      	mov	r0, r3
 800c64a:	f017 f9f6 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800c64e:	f107 03cc 	add.w	r3, r7, #204	; 0xcc
 800c652:	4618      	mov	r0, r3
 800c654:	f016 ff61 	bl	802351a <_ZNSaIcED1Ev>
		}
	}

	return var;
 800c658:	f107 0314 	add.w	r3, r7, #20
 800c65c:	4619      	mov	r1, r3
 800c65e:	68f8      	ldr	r0, [r7, #12]
 800c660:	f7ff fdb4 	bl	800c1cc <_ZN6SymbolC1EOS_>
	Symbol var = evaluate(rel_exp->left_sum_exp);
 800c664:	f107 0314 	add.w	r3, r7, #20
 800c668:	4618      	mov	r0, r3
 800c66a:	f7f4 fe97 	bl	800139c <_ZN6SymbolD1Ev>
}
 800c66e:	68f8      	ldr	r0, [r7, #12]
 800c670:	37d0      	adds	r7, #208	; 0xd0
 800c672:	46bd      	mov	sp, r7
 800c674:	bd80      	pop	{r7, pc}
 800c676:	bf00      	nop
 800c678:	080295ac 	.word	0x080295ac

0800c67c <_ZN21Expression_calculator8evaluateEP14Sum_expression>:

Symbol Expression_calculator::evaluate(Sum_expression *sum_exp)
{
 800c67c:	b580      	push	{r7, lr}
 800c67e:	b0a6      	sub	sp, #152	; 0x98
 800c680:	af00      	add	r7, sp, #0
 800c682:	60f8      	str	r0, [r7, #12]
 800c684:	60b9      	str	r1, [r7, #8]
 800c686:	607a      	str	r2, [r7, #4]
	Symbol var = evaluate(sum_exp->mult_exps[0]);
 800c688:	687b      	ldr	r3, [r7, #4]
 800c68a:	2100      	movs	r1, #0
 800c68c:	4618      	mov	r0, r3
 800c68e:	f000 fb2d 	bl	800ccec <_ZNSt6vectorIP19Multiply_expressionSaIS1_EEixEj>
 800c692:	4603      	mov	r3, r0
 800c694:	681a      	ldr	r2, [r3, #0]
 800c696:	68fb      	ldr	r3, [r7, #12]
 800c698:	68b9      	ldr	r1, [r7, #8]
 800c69a:	4618      	mov	r0, r3
 800c69c:	f000 f87e 	bl	800c79c <_ZN21Expression_calculator8evaluateEP19Multiply_expression>
	for (unsigned int i = 0; i < sum_exp->ops.size(); ++i)
 800c6a0:	2300      	movs	r3, #0
 800c6a2:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 800c6a6:	687b      	ldr	r3, [r7, #4]
 800c6a8:	330c      	adds	r3, #12
 800c6aa:	4618      	mov	r0, r3
 800c6ac:	f000 fb2e 	bl	800cd0c <_ZNKSt6vectorI12sum_operatorSaIS0_EE4sizeEv>
 800c6b0:	4602      	mov	r2, r0
 800c6b2:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 800c6b6:	4293      	cmp	r3, r2
 800c6b8:	bf34      	ite	cc
 800c6ba:	2301      	movcc	r3, #1
 800c6bc:	2300      	movcs	r3, #0
 800c6be:	b2db      	uxtb	r3, r3
 800c6c0:	2b00      	cmp	r3, #0
 800c6c2:	d066      	beq.n	800c792 <_ZN21Expression_calculator8evaluateEP14Sum_expression+0x116>
	{
		if (sum_exp->ops[i] == SUM_OP_PLUS)
 800c6c4:	687b      	ldr	r3, [r7, #4]
 800c6c6:	330c      	adds	r3, #12
 800c6c8:	f8d7 1094 	ldr.w	r1, [r7, #148]	; 0x94
 800c6cc:	4618      	mov	r0, r3
 800c6ce:	f000 fb2c 	bl	800cd2a <_ZNSt6vectorI12sum_operatorSaIS0_EEixEj>
 800c6d2:	4603      	mov	r3, r0
 800c6d4:	781b      	ldrb	r3, [r3, #0]
 800c6d6:	2b00      	cmp	r3, #0
 800c6d8:	bf0c      	ite	eq
 800c6da:	2301      	moveq	r3, #1
 800c6dc:	2300      	movne	r3, #0
 800c6de:	b2db      	uxtb	r3, r3
 800c6e0:	2b00      	cmp	r3, #0
 800c6e2:	d028      	beq.n	800c736 <_ZN21Expression_calculator8evaluateEP14Sum_expression+0xba>
		{
			var = var + evaluate(sum_exp->mult_exps[i + 1]);
 800c6e4:	687a      	ldr	r2, [r7, #4]
 800c6e6:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 800c6ea:	3301      	adds	r3, #1
 800c6ec:	4619      	mov	r1, r3
 800c6ee:	4610      	mov	r0, r2
 800c6f0:	f000 fafc 	bl	800ccec <_ZNSt6vectorIP19Multiply_expressionSaIS1_EEixEj>
 800c6f4:	4603      	mov	r3, r0
 800c6f6:	681a      	ldr	r2, [r3, #0]
 800c6f8:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800c6fc:	68b9      	ldr	r1, [r7, #8]
 800c6fe:	4618      	mov	r0, r3
 800c700:	f000 f84c 	bl	800c79c <_ZN21Expression_calculator8evaluateEP19Multiply_expression>
 800c704:	f107 0314 	add.w	r3, r7, #20
 800c708:	f107 0234 	add.w	r2, r7, #52	; 0x34
 800c70c:	68f9      	ldr	r1, [r7, #12]
 800c70e:	4618      	mov	r0, r3
 800c710:	f00a fce8 	bl	80170e4 <_ZN6SymbolplES_>
 800c714:	f107 0314 	add.w	r3, r7, #20
 800c718:	4619      	mov	r1, r3
 800c71a:	68f8      	ldr	r0, [r7, #12]
 800c71c:	f7f4 fed2 	bl	80014c4 <_ZN6SymbolaSEOS_>
 800c720:	f107 0314 	add.w	r3, r7, #20
 800c724:	4618      	mov	r0, r3
 800c726:	f7f4 fe39 	bl	800139c <_ZN6SymbolD1Ev>
 800c72a:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800c72e:	4618      	mov	r0, r3
 800c730:	f7f4 fe34 	bl	800139c <_ZN6SymbolD1Ev>
 800c734:	e027      	b.n	800c786 <_ZN21Expression_calculator8evaluateEP14Sum_expression+0x10a>
		}
		else
		{
			var = var - evaluate(sum_exp->mult_exps[i + 1]);
 800c736:	687a      	ldr	r2, [r7, #4]
 800c738:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 800c73c:	3301      	adds	r3, #1
 800c73e:	4619      	mov	r1, r3
 800c740:	4610      	mov	r0, r2
 800c742:	f000 fad3 	bl	800ccec <_ZNSt6vectorIP19Multiply_expressionSaIS1_EEixEj>
 800c746:	4603      	mov	r3, r0
 800c748:	681a      	ldr	r2, [r3, #0]
 800c74a:	f107 0374 	add.w	r3, r7, #116	; 0x74
 800c74e:	68b9      	ldr	r1, [r7, #8]
 800c750:	4618      	mov	r0, r3
 800c752:	f000 f823 	bl	800c79c <_ZN21Expression_calculator8evaluateEP19Multiply_expression>
 800c756:	f107 0354 	add.w	r3, r7, #84	; 0x54
 800c75a:	f107 0274 	add.w	r2, r7, #116	; 0x74
 800c75e:	68f9      	ldr	r1, [r7, #12]
 800c760:	4618      	mov	r0, r3
 800c762:	f00a fd63 	bl	801722c <_ZN6SymbolmiES_>
 800c766:	f107 0354 	add.w	r3, r7, #84	; 0x54
 800c76a:	4619      	mov	r1, r3
 800c76c:	68f8      	ldr	r0, [r7, #12]
 800c76e:	f7f4 fea9 	bl	80014c4 <_ZN6SymbolaSEOS_>
 800c772:	f107 0354 	add.w	r3, r7, #84	; 0x54
 800c776:	4618      	mov	r0, r3
 800c778:	f7f4 fe10 	bl	800139c <_ZN6SymbolD1Ev>
 800c77c:	f107 0374 	add.w	r3, r7, #116	; 0x74
 800c780:	4618      	mov	r0, r3
 800c782:	f7f4 fe0b 	bl	800139c <_ZN6SymbolD1Ev>
	for (unsigned int i = 0; i < sum_exp->ops.size(); ++i)
 800c786:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 800c78a:	3301      	adds	r3, #1
 800c78c:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 800c790:	e789      	b.n	800c6a6 <_ZN21Expression_calculator8evaluateEP14Sum_expression+0x2a>
		}
	}
	return var;
 800c792:	bf00      	nop
}
 800c794:	68f8      	ldr	r0, [r7, #12]
 800c796:	3798      	adds	r7, #152	; 0x98
 800c798:	46bd      	mov	sp, r7
 800c79a:	bd80      	pop	{r7, pc}

0800c79c <_ZN21Expression_calculator8evaluateEP19Multiply_expression>:

Symbol Expression_calculator::evaluate(Multiply_expression *mult_exp)
{
 800c79c:	b580      	push	{r7, lr}
 800c79e:	b0b6      	sub	sp, #216	; 0xd8
 800c7a0:	af00      	add	r7, sp, #0
 800c7a2:	60f8      	str	r0, [r7, #12]
 800c7a4:	60b9      	str	r1, [r7, #8]
 800c7a6:	607a      	str	r2, [r7, #4]
	Symbol var = evaluate(mult_exp->pow_exps[0]);
 800c7a8:	687b      	ldr	r3, [r7, #4]
 800c7aa:	2100      	movs	r1, #0
 800c7ac:	4618      	mov	r0, r3
 800c7ae:	f000 facb 	bl	800cd48 <_ZNSt6vectorIP16Power_expressionSaIS1_EEixEj>
 800c7b2:	4603      	mov	r3, r0
 800c7b4:	681a      	ldr	r2, [r3, #0]
 800c7b6:	68fb      	ldr	r3, [r7, #12]
 800c7b8:	68b9      	ldr	r1, [r7, #8]
 800c7ba:	4618      	mov	r0, r3
 800c7bc:	f000 f8b8 	bl	800c930 <_ZN21Expression_calculator8evaluateEP16Power_expression>
	for (unsigned int i = 0; i < mult_exp->ops.size(); ++i)
 800c7c0:	2300      	movs	r3, #0
 800c7c2:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 800c7c6:	687b      	ldr	r3, [r7, #4]
 800c7c8:	330c      	adds	r3, #12
 800c7ca:	4618      	mov	r0, r3
 800c7cc:	f000 facc 	bl	800cd68 <_ZNKSt6vectorI13mult_operatorSaIS0_EE4sizeEv>
 800c7d0:	4602      	mov	r2, r0
 800c7d2:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 800c7d6:	4293      	cmp	r3, r2
 800c7d8:	bf34      	ite	cc
 800c7da:	2301      	movcc	r3, #1
 800c7dc:	2300      	movcs	r3, #0
 800c7de:	b2db      	uxtb	r3, r3
 800c7e0:	2b00      	cmp	r3, #0
 800c7e2:	f000 80a0 	beq.w	800c926 <_ZN21Expression_calculator8evaluateEP19Multiply_expression+0x18a>
	{
		if (mult_exp->ops[i] == MULT_OP_MULTIPLY)
 800c7e6:	687b      	ldr	r3, [r7, #4]
 800c7e8:	330c      	adds	r3, #12
 800c7ea:	f8d7 10d4 	ldr.w	r1, [r7, #212]	; 0xd4
 800c7ee:	4618      	mov	r0, r3
 800c7f0:	f000 fac9 	bl	800cd86 <_ZNSt6vectorI13mult_operatorSaIS0_EEixEj>
 800c7f4:	4603      	mov	r3, r0
 800c7f6:	781b      	ldrb	r3, [r3, #0]
 800c7f8:	2b01      	cmp	r3, #1
 800c7fa:	bf0c      	ite	eq
 800c7fc:	2301      	moveq	r3, #1
 800c7fe:	2300      	movne	r3, #0
 800c800:	b2db      	uxtb	r3, r3
 800c802:	2b00      	cmp	r3, #0
 800c804:	d028      	beq.n	800c858 <_ZN21Expression_calculator8evaluateEP19Multiply_expression+0xbc>
		{
			var = var * evaluate(mult_exp->pow_exps[i + 1]);
 800c806:	687a      	ldr	r2, [r7, #4]
 800c808:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 800c80c:	3301      	adds	r3, #1
 800c80e:	4619      	mov	r1, r3
 800c810:	4610      	mov	r0, r2
 800c812:	f000 fa99 	bl	800cd48 <_ZNSt6vectorIP16Power_expressionSaIS1_EEixEj>
 800c816:	4603      	mov	r3, r0
 800c818:	681a      	ldr	r2, [r3, #0]
 800c81a:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800c81e:	68b9      	ldr	r1, [r7, #8]
 800c820:	4618      	mov	r0, r3
 800c822:	f000 f885 	bl	800c930 <_ZN21Expression_calculator8evaluateEP16Power_expression>
 800c826:	f107 0314 	add.w	r3, r7, #20
 800c82a:	f107 0234 	add.w	r2, r7, #52	; 0x34
 800c82e:	68f9      	ldr	r1, [r7, #12]
 800c830:	4618      	mov	r0, r3
 800c832:	f00b f8cd 	bl	80179d0 <_ZN6SymbolmlES_>
 800c836:	f107 0314 	add.w	r3, r7, #20
 800c83a:	4619      	mov	r1, r3
 800c83c:	68f8      	ldr	r0, [r7, #12]
 800c83e:	f7f4 fe41 	bl	80014c4 <_ZN6SymbolaSEOS_>
 800c842:	f107 0314 	add.w	r3, r7, #20
 800c846:	4618      	mov	r0, r3
 800c848:	f7f4 fda8 	bl	800139c <_ZN6SymbolD1Ev>
 800c84c:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800c850:	4618      	mov	r0, r3
 800c852:	f7f4 fda3 	bl	800139c <_ZN6SymbolD1Ev>
 800c856:	e060      	b.n	800c91a <_ZN21Expression_calculator8evaluateEP19Multiply_expression+0x17e>
		}
		else if (mult_exp->ops[i] == MULT_OP_DIVIDE)
 800c858:	687b      	ldr	r3, [r7, #4]
 800c85a:	330c      	adds	r3, #12
 800c85c:	f8d7 10d4 	ldr.w	r1, [r7, #212]	; 0xd4
 800c860:	4618      	mov	r0, r3
 800c862:	f000 fa90 	bl	800cd86 <_ZNSt6vectorI13mult_operatorSaIS0_EEixEj>
 800c866:	4603      	mov	r3, r0
 800c868:	781b      	ldrb	r3, [r3, #0]
 800c86a:	2b02      	cmp	r3, #2
 800c86c:	bf0c      	ite	eq
 800c86e:	2301      	moveq	r3, #1
 800c870:	2300      	movne	r3, #0
 800c872:	b2db      	uxtb	r3, r3
 800c874:	2b00      	cmp	r3, #0
 800c876:	d028      	beq.n	800c8ca <_ZN21Expression_calculator8evaluateEP19Multiply_expression+0x12e>
		{
			var = var / evaluate(mult_exp->pow_exps[i + 1]);
 800c878:	687a      	ldr	r2, [r7, #4]
 800c87a:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 800c87e:	3301      	adds	r3, #1
 800c880:	4619      	mov	r1, r3
 800c882:	4610      	mov	r0, r2
 800c884:	f000 fa60 	bl	800cd48 <_ZNSt6vectorIP16Power_expressionSaIS1_EEixEj>
 800c888:	4603      	mov	r3, r0
 800c88a:	681a      	ldr	r2, [r3, #0]
 800c88c:	f107 0374 	add.w	r3, r7, #116	; 0x74
 800c890:	68b9      	ldr	r1, [r7, #8]
 800c892:	4618      	mov	r0, r3
 800c894:	f000 f84c 	bl	800c930 <_ZN21Expression_calculator8evaluateEP16Power_expression>
 800c898:	f107 0354 	add.w	r3, r7, #84	; 0x54
 800c89c:	f107 0274 	add.w	r2, r7, #116	; 0x74
 800c8a0:	68f9      	ldr	r1, [r7, #12]
 800c8a2:	4618      	mov	r0, r3
 800c8a4:	f00b f8fc 	bl	8017aa0 <_ZN6SymboldvES_>
 800c8a8:	f107 0354 	add.w	r3, r7, #84	; 0x54
 800c8ac:	4619      	mov	r1, r3
 800c8ae:	68f8      	ldr	r0, [r7, #12]
 800c8b0:	f7f4 fe08 	bl	80014c4 <_ZN6SymbolaSEOS_>
 800c8b4:	f107 0354 	add.w	r3, r7, #84	; 0x54
 800c8b8:	4618      	mov	r0, r3
 800c8ba:	f7f4 fd6f 	bl	800139c <_ZN6SymbolD1Ev>
 800c8be:	f107 0374 	add.w	r3, r7, #116	; 0x74
 800c8c2:	4618      	mov	r0, r3
 800c8c4:	f7f4 fd6a 	bl	800139c <_ZN6SymbolD1Ev>
 800c8c8:	e027      	b.n	800c91a <_ZN21Expression_calculator8evaluateEP19Multiply_expression+0x17e>
		}
		else
		{
			var = var % evaluate(mult_exp->pow_exps[i + 1]);
 800c8ca:	687a      	ldr	r2, [r7, #4]
 800c8cc:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 800c8d0:	3301      	adds	r3, #1
 800c8d2:	4619      	mov	r1, r3
 800c8d4:	4610      	mov	r0, r2
 800c8d6:	f000 fa37 	bl	800cd48 <_ZNSt6vectorIP16Power_expressionSaIS1_EEixEj>
 800c8da:	4603      	mov	r3, r0
 800c8dc:	681a      	ldr	r2, [r3, #0]
 800c8de:	f107 03b4 	add.w	r3, r7, #180	; 0xb4
 800c8e2:	68b9      	ldr	r1, [r7, #8]
 800c8e4:	4618      	mov	r0, r3
 800c8e6:	f000 f823 	bl	800c930 <_ZN21Expression_calculator8evaluateEP16Power_expression>
 800c8ea:	f107 0394 	add.w	r3, r7, #148	; 0x94
 800c8ee:	f107 02b4 	add.w	r2, r7, #180	; 0xb4
 800c8f2:	68f9      	ldr	r1, [r7, #12]
 800c8f4:	4618      	mov	r0, r3
 800c8f6:	f00b f93b 	bl	8017b70 <_ZN6SymbolrmES_>
 800c8fa:	f107 0394 	add.w	r3, r7, #148	; 0x94
 800c8fe:	4619      	mov	r1, r3
 800c900:	68f8      	ldr	r0, [r7, #12]
 800c902:	f7f4 fddf 	bl	80014c4 <_ZN6SymbolaSEOS_>
 800c906:	f107 0394 	add.w	r3, r7, #148	; 0x94
 800c90a:	4618      	mov	r0, r3
 800c90c:	f7f4 fd46 	bl	800139c <_ZN6SymbolD1Ev>
 800c910:	f107 03b4 	add.w	r3, r7, #180	; 0xb4
 800c914:	4618      	mov	r0, r3
 800c916:	f7f4 fd41 	bl	800139c <_ZN6SymbolD1Ev>
	for (unsigned int i = 0; i < mult_exp->ops.size(); ++i)
 800c91a:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 800c91e:	3301      	adds	r3, #1
 800c920:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 800c924:	e74f      	b.n	800c7c6 <_ZN21Expression_calculator8evaluateEP19Multiply_expression+0x2a>
		}
	}
	return var;
 800c926:	bf00      	nop
}
 800c928:	68f8      	ldr	r0, [r7, #12]
 800c92a:	37d8      	adds	r7, #216	; 0xd8
 800c92c:	46bd      	mov	sp, r7
 800c92e:	bd80      	pop	{r7, pc}

0800c930 <_ZN21Expression_calculator8evaluateEP16Power_expression>:

Symbol Expression_calculator::evaluate(Power_expression *pow_exp)
{
 800c930:	b580      	push	{r7, lr}
 800c932:	b09c      	sub	sp, #112	; 0x70
 800c934:	af00      	add	r7, sp, #0
 800c936:	60f8      	str	r0, [r7, #12]
 800c938:	60b9      	str	r1, [r7, #8]
 800c93a:	607a      	str	r2, [r7, #4]
	Symbol var = evaluate(pow_exp->left_un_exp);
 800c93c:	687b      	ldr	r3, [r7, #4]
 800c93e:	681a      	ldr	r2, [r3, #0]
 800c940:	68fb      	ldr	r3, [r7, #12]
 800c942:	68b9      	ldr	r1, [r7, #8]
 800c944:	4618      	mov	r0, r3
 800c946:	f000 f836 	bl	800c9b6 <_ZN21Expression_calculator8evaluateEP16Unary_expression>

	if (pow_exp->right_un_exp)
 800c94a:	687b      	ldr	r3, [r7, #4]
 800c94c:	685b      	ldr	r3, [r3, #4]
 800c94e:	2b00      	cmp	r3, #0
 800c950:	d02c      	beq.n	800c9ac <_ZN21Expression_calculator8evaluateEP16Power_expression+0x7c>
	{
		Symbol temp = evaluate(pow_exp->right_un_exp);
 800c952:	687b      	ldr	r3, [r7, #4]
 800c954:	685a      	ldr	r2, [r3, #4]
 800c956:	f107 0310 	add.w	r3, r7, #16
 800c95a:	68b9      	ldr	r1, [r7, #8]
 800c95c:	4618      	mov	r0, r3
 800c95e:	f000 f82a 	bl	800c9b6 <_ZN21Expression_calculator8evaluateEP16Unary_expression>
		var = var ^ temp;
 800c962:	f107 0210 	add.w	r2, r7, #16
 800c966:	f107 0350 	add.w	r3, r7, #80	; 0x50
 800c96a:	4611      	mov	r1, r2
 800c96c:	4618      	mov	r0, r3
 800c96e:	f7f4 fd73 	bl	8001458 <_ZN6SymbolC1ERKS_>
 800c972:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800c976:	f107 0250 	add.w	r2, r7, #80	; 0x50
 800c97a:	68f9      	ldr	r1, [r7, #12]
 800c97c:	4618      	mov	r0, r3
 800c97e:	f00b f94f 	bl	8017c20 <_ZN6SymboleoES_>
 800c982:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800c986:	4619      	mov	r1, r3
 800c988:	68f8      	ldr	r0, [r7, #12]
 800c98a:	f7f4 fd9b 	bl	80014c4 <_ZN6SymbolaSEOS_>
 800c98e:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800c992:	4618      	mov	r0, r3
 800c994:	f7f4 fd02 	bl	800139c <_ZN6SymbolD1Ev>
 800c998:	f107 0350 	add.w	r3, r7, #80	; 0x50
 800c99c:	4618      	mov	r0, r3
 800c99e:	f7f4 fcfd 	bl	800139c <_ZN6SymbolD1Ev>
		Symbol temp = evaluate(pow_exp->right_un_exp);
 800c9a2:	f107 0310 	add.w	r3, r7, #16
 800c9a6:	4618      	mov	r0, r3
 800c9a8:	f7f4 fcf8 	bl	800139c <_ZN6SymbolD1Ev>
	}

	return var;
 800c9ac:	bf00      	nop
}
 800c9ae:	68f8      	ldr	r0, [r7, #12]
 800c9b0:	3770      	adds	r7, #112	; 0x70
 800c9b2:	46bd      	mov	sp, r7
 800c9b4:	bd80      	pop	{r7, pc}

0800c9b6 <_ZN21Expression_calculator8evaluateEP16Unary_expression>:

Symbol Expression_calculator::evaluate(Unary_expression *un_exp)
{
 800c9b6:	b580      	push	{r7, lr}
 800c9b8:	b094      	sub	sp, #80	; 0x50
 800c9ba:	af00      	add	r7, sp, #0
 800c9bc:	60f8      	str	r0, [r7, #12]
 800c9be:	60b9      	str	r1, [r7, #8]
 800c9c0:	607a      	str	r2, [r7, #4]
	switch (un_exp->op)
 800c9c2:	687b      	ldr	r3, [r7, #4]
 800c9c4:	791b      	ldrb	r3, [r3, #4]
 800c9c6:	2b00      	cmp	r3, #0
 800c9c8:	d002      	beq.n	800c9d0 <_ZN21Expression_calculator8evaluateEP16Unary_expression+0x1a>
 800c9ca:	2b01      	cmp	r3, #1
 800c9cc:	d008      	beq.n	800c9e0 <_ZN21Expression_calculator8evaluateEP16Unary_expression+0x2a>
 800c9ce:	e01c      	b.n	800ca0a <_ZN21Expression_calculator8evaluateEP16Unary_expression+0x54>
	{
	case UN_OP_NONE:
		return evaluate(un_exp->prior_exp);
 800c9d0:	687b      	ldr	r3, [r7, #4]
 800c9d2:	681a      	ldr	r2, [r3, #0]
 800c9d4:	68fb      	ldr	r3, [r7, #12]
 800c9d6:	68b9      	ldr	r1, [r7, #8]
 800c9d8:	4618      	mov	r0, r3
 800c9da:	f000 f82e 	bl	800ca3a <_ZN21Expression_calculator8evaluateEP19Priority_expression>
 800c9de:	e028      	b.n	800ca32 <_ZN21Expression_calculator8evaluateEP16Unary_expression+0x7c>
	case UN_OP_MINUS:
		return -evaluate(un_exp->prior_exp);
 800c9e0:	687b      	ldr	r3, [r7, #4]
 800c9e2:	681a      	ldr	r2, [r3, #0]
 800c9e4:	f107 0310 	add.w	r3, r7, #16
 800c9e8:	68b9      	ldr	r1, [r7, #8]
 800c9ea:	4618      	mov	r0, r3
 800c9ec:	f000 f825 	bl	800ca3a <_ZN21Expression_calculator8evaluateEP19Priority_expression>
 800c9f0:	68fb      	ldr	r3, [r7, #12]
 800c9f2:	f107 0210 	add.w	r2, r7, #16
 800c9f6:	4611      	mov	r1, r2
 800c9f8:	4618      	mov	r0, r3
 800c9fa:	f00a ff99 	bl	8017930 <_ZN6SymbolngEv>
 800c9fe:	f107 0310 	add.w	r3, r7, #16
 800ca02:	4618      	mov	r0, r3
 800ca04:	f7f4 fcca 	bl	800139c <_ZN6SymbolD1Ev>
 800ca08:	e013      	b.n	800ca32 <_ZN21Expression_calculator8evaluateEP16Unary_expression+0x7c>
	default:
		return !evaluate(un_exp->prior_exp);
 800ca0a:	687b      	ldr	r3, [r7, #4]
 800ca0c:	681a      	ldr	r2, [r3, #0]
 800ca0e:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800ca12:	68b9      	ldr	r1, [r7, #8]
 800ca14:	4618      	mov	r0, r3
 800ca16:	f000 f810 	bl	800ca3a <_ZN21Expression_calculator8evaluateEP19Priority_expression>
 800ca1a:	68fb      	ldr	r3, [r7, #12]
 800ca1c:	f107 0230 	add.w	r2, r7, #48	; 0x30
 800ca20:	4611      	mov	r1, r2
 800ca22:	4618      	mov	r0, r3
 800ca24:	f00a fcfe 	bl	8017424 <_ZN6SymbolntEv>
 800ca28:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800ca2c:	4618      	mov	r0, r3
 800ca2e:	f7f4 fcb5 	bl	800139c <_ZN6SymbolD1Ev>
	}
}
 800ca32:	68f8      	ldr	r0, [r7, #12]
 800ca34:	3750      	adds	r7, #80	; 0x50
 800ca36:	46bd      	mov	sp, r7
 800ca38:	bd80      	pop	{r7, pc}

0800ca3a <_ZN21Expression_calculator8evaluateEP19Priority_expression>:

Symbol Expression_calculator::evaluate(Priority_expression *prior_exp)
{
 800ca3a:	b580      	push	{r7, lr}
 800ca3c:	b086      	sub	sp, #24
 800ca3e:	af00      	add	r7, sp, #0
 800ca40:	60f8      	str	r0, [r7, #12]
 800ca42:	60b9      	str	r1, [r7, #8]
 800ca44:	607a      	str	r2, [r7, #4]
	if (std::holds_alternative<Expression*>(prior_exp->exp))
 800ca46:	687b      	ldr	r3, [r7, #4]
 800ca48:	4618      	mov	r0, r3
 800ca4a:	f7fd fbc4 	bl	800a1d6 <_ZSt17holds_alternativeIP10ExpressionJP17Primal_expressionS1_EEbRKSt7variantIJDpT0_EE>
 800ca4e:	4603      	mov	r3, r0
 800ca50:	2b00      	cmp	r3, #0
 800ca52:	d00d      	beq.n	800ca70 <_ZN21Expression_calculator8evaluateEP19Priority_expression+0x36>
	{
		Expression *exp = std::get<Expression*>(prior_exp->exp);
 800ca54:	687b      	ldr	r3, [r7, #4]
 800ca56:	4618      	mov	r0, r3
 800ca58:	f7fd fbce 	bl	800a1f8 <_ZSt3getIP10ExpressionJP17Primal_expressionS1_EERT_RSt7variantIJDpT0_EE>
 800ca5c:	4603      	mov	r3, r0
 800ca5e:	681b      	ldr	r3, [r3, #0]
 800ca60:	613b      	str	r3, [r7, #16]
		return evaluate(exp);
 800ca62:	68fb      	ldr	r3, [r7, #12]
 800ca64:	693a      	ldr	r2, [r7, #16]
 800ca66:	68b9      	ldr	r1, [r7, #8]
 800ca68:	4618      	mov	r0, r3
 800ca6a:	f7ff fbc5 	bl	800c1f8 <_ZN21Expression_calculator8evaluateEP10Expression>
 800ca6e:	e00c      	b.n	800ca8a <_ZN21Expression_calculator8evaluateEP19Priority_expression+0x50>
	}
	else
	{
		Primal_expression *exp = std::get<Primal_expression*>(prior_exp->exp);
 800ca70:	687b      	ldr	r3, [r7, #4]
 800ca72:	4618      	mov	r0, r3
 800ca74:	f7fd fbcc 	bl	800a210 <_ZSt3getIP17Primal_expressionJS1_P10ExpressionEERT_RSt7variantIJDpT0_EE>
 800ca78:	4603      	mov	r3, r0
 800ca7a:	681b      	ldr	r3, [r3, #0]
 800ca7c:	617b      	str	r3, [r7, #20]
		return evaluate(exp);
 800ca7e:	68fb      	ldr	r3, [r7, #12]
 800ca80:	697a      	ldr	r2, [r7, #20]
 800ca82:	68b9      	ldr	r1, [r7, #8]
 800ca84:	4618      	mov	r0, r3
 800ca86:	f000 f805 	bl	800ca94 <_ZN21Expression_calculator8evaluateEP17Primal_expression>
	}
}
 800ca8a:	68f8      	ldr	r0, [r7, #12]
 800ca8c:	3718      	adds	r7, #24
 800ca8e:	46bd      	mov	sp, r7
 800ca90:	bd80      	pop	{r7, pc}
	...

0800ca94 <_ZN21Expression_calculator8evaluateEP17Primal_expression>:

Symbol Expression_calculator::evaluate(Primal_expression *primal_exp)
{
 800ca94:	b580      	push	{r7, lr}
 800ca96:	b08a      	sub	sp, #40	; 0x28
 800ca98:	af00      	add	r7, sp, #0
 800ca9a:	60f8      	str	r0, [r7, #12]
 800ca9c:	60b9      	str	r1, [r7, #8]
 800ca9e:	607a      	str	r2, [r7, #4]
	switch (primal_exp->type)
 800caa0:	687b      	ldr	r3, [r7, #4]
 800caa2:	781b      	ldrb	r3, [r3, #0]
 800caa4:	2b05      	cmp	r3, #5
 800caa6:	d867      	bhi.n	800cb78 <_ZN21Expression_calculator8evaluateEP17Primal_expression+0xe4>
 800caa8:	a201      	add	r2, pc, #4	; (adr r2, 800cab0 <_ZN21Expression_calculator8evaluateEP17Primal_expression+0x1c>)
 800caaa:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800caae:	bf00      	nop
 800cab0:	0800cb2d 	.word	0x0800cb2d
 800cab4:	0800cac9 	.word	0x0800cac9
 800cab8:	0800cae1 	.word	0x0800cae1
 800cabc:	0800cafd 	.word	0x0800cafd
 800cac0:	0800cb45 	.word	0x0800cb45
 800cac4:	0800cb5f 	.word	0x0800cb5f
	{
	case PRIMAL_INT:
		return std::get<int>(primal_exp->content);
 800cac8:	687b      	ldr	r3, [r7, #4]
 800caca:	3304      	adds	r3, #4
 800cacc:	4618      	mov	r0, r3
 800cace:	f000 f969 	bl	800cda4 <_ZSt3getIiJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERT_RSt7variantIJDpT0_EE>
 800cad2:	4603      	mov	r3, r0
 800cad4:	681b      	ldr	r3, [r3, #0]
 800cad6:	4619      	mov	r1, r3
 800cad8:	68f8      	ldr	r0, [r7, #12]
 800cada:	f00a f9ef 	bl	8016ebc <_ZN6SymbolC1Ei>
 800cade:	e04f      	b.n	800cb80 <_ZN21Expression_calculator8evaluateEP17Primal_expression+0xec>
	case PRIMAL_FLOAT:
		return std::get<float>(primal_exp->content);
 800cae0:	687b      	ldr	r3, [r7, #4]
 800cae2:	3304      	adds	r3, #4
 800cae4:	4618      	mov	r0, r3
 800cae6:	f000 f969 	bl	800cdbc <_ZSt3getIfJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERT_RSt7variantIJDpT0_EE>
 800caea:	4603      	mov	r3, r0
 800caec:	edd3 7a00 	vldr	s15, [r3]
 800caf0:	eeb0 0a67 	vmov.f32	s0, s15
 800caf4:	68f8      	ldr	r0, [r7, #12]
 800caf6:	f00a f9fa 	bl	8016eee <_ZN6SymbolC1Ef>
 800cafa:	e041      	b.n	800cb80 <_ZN21Expression_calculator8evaluateEP17Primal_expression+0xec>
	case PRIMAL_STRING:
		return std::get<std::string>(primal_exp->content);
 800cafc:	687b      	ldr	r3, [r7, #4]
 800cafe:	3304      	adds	r3, #4
 800cb00:	4618      	mov	r0, r3
 800cb02:	f000 f967 	bl	800cdd4 <_ZSt3getINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJbifS5_P8VariableP13Function_callEERT_RSt7variantIJDpT0_EE>
 800cb06:	4602      	mov	r2, r0
 800cb08:	f107 0310 	add.w	r3, r7, #16
 800cb0c:	4611      	mov	r1, r2
 800cb0e:	4618      	mov	r0, r3
 800cb10:	f017 f962 	bl	8023dd8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 800cb14:	f107 0310 	add.w	r3, r7, #16
 800cb18:	4619      	mov	r1, r3
 800cb1a:	68f8      	ldr	r0, [r7, #12]
 800cb1c:	f00a fa3c 	bl	8016f98 <_ZN6SymbolC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 800cb20:	f107 0310 	add.w	r3, r7, #16
 800cb24:	4618      	mov	r0, r3
 800cb26:	f016 ff88 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800cb2a:	e029      	b.n	800cb80 <_ZN21Expression_calculator8evaluateEP17Primal_expression+0xec>
	case PRIMAL_BOOL:
		return std::get<bool>(primal_exp->content);
 800cb2c:	687b      	ldr	r3, [r7, #4]
 800cb2e:	3304      	adds	r3, #4
 800cb30:	4618      	mov	r0, r3
 800cb32:	f000 f95b 	bl	800cdec <_ZSt3getIbJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERT_RSt7variantIJDpT0_EE>
 800cb36:	4603      	mov	r3, r0
 800cb38:	781b      	ldrb	r3, [r3, #0]
 800cb3a:	4619      	mov	r1, r3
 800cb3c:	68f8      	ldr	r0, [r7, #12]
 800cb3e:	f00a fa11 	bl	8016f64 <_ZN6SymbolC1Eb>
 800cb42:	e01d      	b.n	800cb80 <_ZN21Expression_calculator8evaluateEP17Primal_expression+0xec>
	case PRIMAL_VARIABLE:
		return evaluate(std::get<Variable*>(primal_exp->content));
 800cb44:	687b      	ldr	r3, [r7, #4]
 800cb46:	3304      	adds	r3, #4
 800cb48:	4618      	mov	r0, r3
 800cb4a:	f7fd fb08 	bl	800a15e <_ZSt3getIP8VariableJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES1_P13Function_callEERT_RSt7variantIJDpT0_EE>
 800cb4e:	4603      	mov	r3, r0
 800cb50:	681a      	ldr	r2, [r3, #0]
 800cb52:	68fb      	ldr	r3, [r7, #12]
 800cb54:	68b9      	ldr	r1, [r7, #8]
 800cb56:	4618      	mov	r0, r3
 800cb58:	f000 f816 	bl	800cb88 <_ZN21Expression_calculator8evaluateEP8Variable>
 800cb5c:	e010      	b.n	800cb80 <_ZN21Expression_calculator8evaluateEP17Primal_expression+0xec>
	case PRIMAL_FUNCTION_CALL:
		return Function_handler::run_function(
				std::get<Function_call*>(primal_exp->content));
 800cb5e:	687b      	ldr	r3, [r7, #4]
 800cb60:	3304      	adds	r3, #4
 800cb62:	4618      	mov	r0, r3
 800cb64:	f7fd fb18 	bl	800a198 <_ZSt3getIP13Function_callJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableS1_EERT_RSt7variantIJDpT0_EE>
 800cb68:	4603      	mov	r3, r0
 800cb6a:	681a      	ldr	r2, [r3, #0]
 800cb6c:	68fb      	ldr	r3, [r7, #12]
 800cb6e:	4611      	mov	r1, r2
 800cb70:	4618      	mov	r0, r3
 800cb72:	f001 fa43 	bl	800dffc <_ZN16Function_handler12run_functionEP13Function_call>
 800cb76:	e003      	b.n	800cb80 <_ZN21Expression_calculator8evaluateEP17Primal_expression+0xec>
	}
	return 0;
 800cb78:	2100      	movs	r1, #0
 800cb7a:	68f8      	ldr	r0, [r7, #12]
 800cb7c:	f00a f99e 	bl	8016ebc <_ZN6SymbolC1Ei>
}
 800cb80:	68f8      	ldr	r0, [r7, #12]
 800cb82:	3728      	adds	r7, #40	; 0x28
 800cb84:	46bd      	mov	sp, r7
 800cb86:	bd80      	pop	{r7, pc}

0800cb88 <_ZN21Expression_calculator8evaluateEP8Variable>:

Symbol Expression_calculator::evaluate(Variable *var)
{
 800cb88:	b590      	push	{r4, r7, lr}
 800cb8a:	b09d      	sub	sp, #116	; 0x74
 800cb8c:	af00      	add	r7, sp, #0
 800cb8e:	60f8      	str	r0, [r7, #12]
 800cb90:	60b9      	str	r1, [r7, #8]
 800cb92:	607a      	str	r2, [r7, #4]
	Symbol s = Variable_handler::get_instance().get_symbol(*var);
 800cb94:	f00c fb80 	bl	8019298 <_ZN16Variable_handler12get_instanceEv>
 800cb98:	4604      	mov	r4, r0
 800cb9a:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800cb9e:	6879      	ldr	r1, [r7, #4]
 800cba0:	4618      	mov	r0, r3
 800cba2:	f7f4 fee9 	bl	8001978 <_ZN8VariableC1ERKS_>
 800cba6:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800cbaa:	4619      	mov	r1, r3
 800cbac:	4620      	mov	r0, r4
 800cbae:	f00c fc48 	bl	8019442 <_ZN16Variable_handler10get_symbolE8Variable>
 800cbb2:	4602      	mov	r2, r0
 800cbb4:	f107 0310 	add.w	r3, r7, #16
 800cbb8:	4611      	mov	r1, r2
 800cbba:	4618      	mov	r0, r3
 800cbbc:	f7f4 fc4c 	bl	8001458 <_ZN6SymbolC1ERKS_>
 800cbc0:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800cbc4:	4618      	mov	r0, r3
 800cbc6:	f009 ff2d 	bl	8016a24 <_ZN8VariableD1Ev>

	if (var->index)
 800cbca:	687b      	ldr	r3, [r7, #4]
 800cbcc:	69db      	ldr	r3, [r3, #28]
 800cbce:	2b00      	cmp	r3, #0
 800cbd0:	d01a      	beq.n	800cc08 <_ZN21Expression_calculator8evaluateEP8Variable+0x80>
	{
		return s[evaluate(var->index)];
 800cbd2:	687b      	ldr	r3, [r7, #4]
 800cbd4:	69da      	ldr	r2, [r3, #28]
 800cbd6:	f107 0350 	add.w	r3, r7, #80	; 0x50
 800cbda:	68b9      	ldr	r1, [r7, #8]
 800cbdc:	4618      	mov	r0, r3
 800cbde:	f7ff fb0b 	bl	800c1f8 <_ZN21Expression_calculator8evaluateEP10Expression>
 800cbe2:	f107 0250 	add.w	r2, r7, #80	; 0x50
 800cbe6:	f107 0310 	add.w	r3, r7, #16
 800cbea:	4611      	mov	r1, r2
 800cbec:	4618      	mov	r0, r3
 800cbee:	f00a f9eb 	bl	8016fc8 <_ZN6SymbolixES_>
 800cbf2:	4603      	mov	r3, r0
 800cbf4:	4619      	mov	r1, r3
 800cbf6:	68f8      	ldr	r0, [r7, #12]
 800cbf8:	f7f4 fc2e 	bl	8001458 <_ZN6SymbolC1ERKS_>
 800cbfc:	f107 0350 	add.w	r3, r7, #80	; 0x50
 800cc00:	4618      	mov	r0, r3
 800cc02:	f7f4 fbcb 	bl	800139c <_ZN6SymbolD1Ev>
 800cc06:	e005      	b.n	800cc14 <_ZN21Expression_calculator8evaluateEP8Variable+0x8c>
	}

	return s;
 800cc08:	f107 0310 	add.w	r3, r7, #16
 800cc0c:	4619      	mov	r1, r3
 800cc0e:	68f8      	ldr	r0, [r7, #12]
 800cc10:	f7ff fadc 	bl	800c1cc <_ZN6SymbolC1EOS_>
	Symbol s = Variable_handler::get_instance().get_symbol(*var);
 800cc14:	f107 0310 	add.w	r3, r7, #16
 800cc18:	4618      	mov	r0, r3
 800cc1a:	f7f4 fbbf 	bl	800139c <_ZN6SymbolD1Ev>
}
 800cc1e:	68f8      	ldr	r0, [r7, #12]
 800cc20:	3774      	adds	r7, #116	; 0x74
 800cc22:	46bd      	mov	sp, r7
 800cc24:	bd90      	pop	{r4, r7, pc}

0800cc26 <_ZNKSt6vectorIP14And_expressionSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 800cc26:	b480      	push	{r7}
 800cc28:	b083      	sub	sp, #12
 800cc2a:	af00      	add	r7, sp, #0
 800cc2c:	6078      	str	r0, [r7, #4]
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 800cc2e:	687b      	ldr	r3, [r7, #4]
 800cc30:	685a      	ldr	r2, [r3, #4]
 800cc32:	687b      	ldr	r3, [r7, #4]
 800cc34:	681b      	ldr	r3, [r3, #0]
 800cc36:	1ad3      	subs	r3, r2, r3
 800cc38:	109b      	asrs	r3, r3, #2
 800cc3a:	4618      	mov	r0, r3
 800cc3c:	370c      	adds	r7, #12
 800cc3e:	46bd      	mov	sp, r7
 800cc40:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cc44:	4770      	bx	lr

0800cc46 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEEv>:
      using _Base::_Base;
 800cc46:	b580      	push	{r7, lr}
 800cc48:	b082      	sub	sp, #8
 800cc4a:	af00      	add	r7, sp, #0
 800cc4c:	6078      	str	r0, [r7, #4]
 800cc4e:	687b      	ldr	r3, [r7, #4]
 800cc50:	4618      	mov	r0, r3
 800cc52:	f7f6 fbb7 	bl	80033c4 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1Ev>
 800cc56:	687b      	ldr	r3, [r7, #4]
 800cc58:	4618      	mov	r0, r3
 800cc5a:	3708      	adds	r7, #8
 800cc5c:	46bd      	mov	sp, r7
 800cc5e:	bd80      	pop	{r7, pc}

0800cc60 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1EOSC_>:
      _Move_ctor_base(_Move_ctor_base&& __rhs)
 800cc60:	b580      	push	{r7, lr}
 800cc62:	b082      	sub	sp, #8
 800cc64:	af00      	add	r7, sp, #0
 800cc66:	6078      	str	r0, [r7, #4]
 800cc68:	6039      	str	r1, [r7, #0]
      {
 800cc6a:	687b      	ldr	r3, [r7, #4]
 800cc6c:	4618      	mov	r0, r3
 800cc6e:	f7ff ffea 	bl	800cc46 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEEv>
	__variant_construct<_Types...>(*this, std::move(__rhs));
 800cc72:	6838      	ldr	r0, [r7, #0]
 800cc74:	f000 f8c6 	bl	800ce04 <_ZSt4moveIRNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEONSt16remove_referenceIT_E4typeEOSG_>
 800cc78:	4603      	mov	r3, r0
 800cc7a:	4619      	mov	r1, r3
 800cc7c:	6878      	ldr	r0, [r7, #4]
 800cc7e:	f000 fc1b 	bl	800d4b8 <_ZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Move_ctor_baseILb0EJifbS7_SB_EEESD_EEvOT0_OT1_>
      }
 800cc82:	687b      	ldr	r3, [r7, #4]
 800cc84:	4618      	mov	r0, r3
 800cc86:	3708      	adds	r7, #8
 800cc88:	46bd      	mov	sp, r7
 800cc8a:	bd80      	pop	{r7, pc}

0800cc8c <_ZNSt6vectorIP14And_expressionSaIS1_EEixEj>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
 800cc8c:	b480      	push	{r7}
 800cc8e:	b083      	sub	sp, #12
 800cc90:	af00      	add	r7, sp, #0
 800cc92:	6078      	str	r0, [r7, #4]
 800cc94:	6039      	str	r1, [r7, #0]
	return *(this->_M_impl._M_start + __n);
 800cc96:	687b      	ldr	r3, [r7, #4]
 800cc98:	681a      	ldr	r2, [r3, #0]
 800cc9a:	683b      	ldr	r3, [r7, #0]
 800cc9c:	009b      	lsls	r3, r3, #2
 800cc9e:	4413      	add	r3, r2
      }
 800cca0:	4618      	mov	r0, r3
 800cca2:	370c      	adds	r7, #12
 800cca4:	46bd      	mov	sp, r7
 800cca6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ccaa:	4770      	bx	lr

0800ccac <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 800ccac:	b480      	push	{r7}
 800ccae:	b083      	sub	sp, #12
 800ccb0:	af00      	add	r7, sp, #0
 800ccb2:	6078      	str	r0, [r7, #4]
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 800ccb4:	687b      	ldr	r3, [r7, #4]
 800ccb6:	685a      	ldr	r2, [r3, #4]
 800ccb8:	687b      	ldr	r3, [r7, #4]
 800ccba:	681b      	ldr	r3, [r3, #0]
 800ccbc:	1ad3      	subs	r3, r2, r3
 800ccbe:	109b      	asrs	r3, r3, #2
 800ccc0:	4618      	mov	r0, r3
 800ccc2:	370c      	adds	r7, #12
 800ccc4:	46bd      	mov	sp, r7
 800ccc6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ccca:	4770      	bx	lr

0800cccc <_ZNSt6vectorIP18Compare_expressionSaIS1_EEixEj>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
 800cccc:	b480      	push	{r7}
 800ccce:	b083      	sub	sp, #12
 800ccd0:	af00      	add	r7, sp, #0
 800ccd2:	6078      	str	r0, [r7, #4]
 800ccd4:	6039      	str	r1, [r7, #0]
	return *(this->_M_impl._M_start + __n);
 800ccd6:	687b      	ldr	r3, [r7, #4]
 800ccd8:	681a      	ldr	r2, [r3, #0]
 800ccda:	683b      	ldr	r3, [r7, #0]
 800ccdc:	009b      	lsls	r3, r3, #2
 800ccde:	4413      	add	r3, r2
      }
 800cce0:	4618      	mov	r0, r3
 800cce2:	370c      	adds	r7, #12
 800cce4:	46bd      	mov	sp, r7
 800cce6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ccea:	4770      	bx	lr

0800ccec <_ZNSt6vectorIP19Multiply_expressionSaIS1_EEixEj>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
 800ccec:	b480      	push	{r7}
 800ccee:	b083      	sub	sp, #12
 800ccf0:	af00      	add	r7, sp, #0
 800ccf2:	6078      	str	r0, [r7, #4]
 800ccf4:	6039      	str	r1, [r7, #0]
	return *(this->_M_impl._M_start + __n);
 800ccf6:	687b      	ldr	r3, [r7, #4]
 800ccf8:	681a      	ldr	r2, [r3, #0]
 800ccfa:	683b      	ldr	r3, [r7, #0]
 800ccfc:	009b      	lsls	r3, r3, #2
 800ccfe:	4413      	add	r3, r2
      }
 800cd00:	4618      	mov	r0, r3
 800cd02:	370c      	adds	r7, #12
 800cd04:	46bd      	mov	sp, r7
 800cd06:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cd0a:	4770      	bx	lr

0800cd0c <_ZNKSt6vectorI12sum_operatorSaIS0_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 800cd0c:	b480      	push	{r7}
 800cd0e:	b083      	sub	sp, #12
 800cd10:	af00      	add	r7, sp, #0
 800cd12:	6078      	str	r0, [r7, #4]
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 800cd14:	687b      	ldr	r3, [r7, #4]
 800cd16:	685a      	ldr	r2, [r3, #4]
 800cd18:	687b      	ldr	r3, [r7, #4]
 800cd1a:	681b      	ldr	r3, [r3, #0]
 800cd1c:	1ad3      	subs	r3, r2, r3
 800cd1e:	4618      	mov	r0, r3
 800cd20:	370c      	adds	r7, #12
 800cd22:	46bd      	mov	sp, r7
 800cd24:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cd28:	4770      	bx	lr

0800cd2a <_ZNSt6vectorI12sum_operatorSaIS0_EEixEj>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
 800cd2a:	b480      	push	{r7}
 800cd2c:	b083      	sub	sp, #12
 800cd2e:	af00      	add	r7, sp, #0
 800cd30:	6078      	str	r0, [r7, #4]
 800cd32:	6039      	str	r1, [r7, #0]
	return *(this->_M_impl._M_start + __n);
 800cd34:	687b      	ldr	r3, [r7, #4]
 800cd36:	681a      	ldr	r2, [r3, #0]
 800cd38:	683b      	ldr	r3, [r7, #0]
 800cd3a:	4413      	add	r3, r2
      }
 800cd3c:	4618      	mov	r0, r3
 800cd3e:	370c      	adds	r7, #12
 800cd40:	46bd      	mov	sp, r7
 800cd42:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cd46:	4770      	bx	lr

0800cd48 <_ZNSt6vectorIP16Power_expressionSaIS1_EEixEj>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
 800cd48:	b480      	push	{r7}
 800cd4a:	b083      	sub	sp, #12
 800cd4c:	af00      	add	r7, sp, #0
 800cd4e:	6078      	str	r0, [r7, #4]
 800cd50:	6039      	str	r1, [r7, #0]
	return *(this->_M_impl._M_start + __n);
 800cd52:	687b      	ldr	r3, [r7, #4]
 800cd54:	681a      	ldr	r2, [r3, #0]
 800cd56:	683b      	ldr	r3, [r7, #0]
 800cd58:	009b      	lsls	r3, r3, #2
 800cd5a:	4413      	add	r3, r2
      }
 800cd5c:	4618      	mov	r0, r3
 800cd5e:	370c      	adds	r7, #12
 800cd60:	46bd      	mov	sp, r7
 800cd62:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cd66:	4770      	bx	lr

0800cd68 <_ZNKSt6vectorI13mult_operatorSaIS0_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 800cd68:	b480      	push	{r7}
 800cd6a:	b083      	sub	sp, #12
 800cd6c:	af00      	add	r7, sp, #0
 800cd6e:	6078      	str	r0, [r7, #4]
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 800cd70:	687b      	ldr	r3, [r7, #4]
 800cd72:	685a      	ldr	r2, [r3, #4]
 800cd74:	687b      	ldr	r3, [r7, #4]
 800cd76:	681b      	ldr	r3, [r3, #0]
 800cd78:	1ad3      	subs	r3, r2, r3
 800cd7a:	4618      	mov	r0, r3
 800cd7c:	370c      	adds	r7, #12
 800cd7e:	46bd      	mov	sp, r7
 800cd80:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cd84:	4770      	bx	lr

0800cd86 <_ZNSt6vectorI13mult_operatorSaIS0_EEixEj>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
 800cd86:	b480      	push	{r7}
 800cd88:	b083      	sub	sp, #12
 800cd8a:	af00      	add	r7, sp, #0
 800cd8c:	6078      	str	r0, [r7, #4]
 800cd8e:	6039      	str	r1, [r7, #0]
	return *(this->_M_impl._M_start + __n);
 800cd90:	687b      	ldr	r3, [r7, #4]
 800cd92:	681a      	ldr	r2, [r3, #0]
 800cd94:	683b      	ldr	r3, [r7, #0]
 800cd96:	4413      	add	r3, r2
      }
 800cd98:	4618      	mov	r0, r3
 800cd9a:	370c      	adds	r7, #12
 800cd9c:	46bd      	mov	sp, r7
 800cd9e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cda2:	4770      	bx	lr

0800cda4 <_ZSt3getIiJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 800cda4:	b580      	push	{r7, lr}
 800cda6:	b082      	sub	sp, #8
 800cda8:	af00      	add	r7, sp, #0
 800cdaa:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 800cdac:	6878      	ldr	r0, [r7, #4]
 800cdae:	f000 fba1 	bl	800d4f4 <_ZSt3getILj1EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 800cdb2:	4603      	mov	r3, r0
    }
 800cdb4:	4618      	mov	r0, r3
 800cdb6:	3708      	adds	r7, #8
 800cdb8:	46bd      	mov	sp, r7
 800cdba:	bd80      	pop	{r7, pc}

0800cdbc <_ZSt3getIfJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 800cdbc:	b580      	push	{r7, lr}
 800cdbe:	b082      	sub	sp, #8
 800cdc0:	af00      	add	r7, sp, #0
 800cdc2:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 800cdc4:	6878      	ldr	r0, [r7, #4]
 800cdc6:	f000 fbb1 	bl	800d52c <_ZSt3getILj2EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 800cdca:	4603      	mov	r3, r0
    }
 800cdcc:	4618      	mov	r0, r3
 800cdce:	3708      	adds	r7, #8
 800cdd0:	46bd      	mov	sp, r7
 800cdd2:	bd80      	pop	{r7, pc}

0800cdd4 <_ZSt3getINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJbifS5_P8VariableP13Function_callEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 800cdd4:	b580      	push	{r7, lr}
 800cdd6:	b082      	sub	sp, #8
 800cdd8:	af00      	add	r7, sp, #0
 800cdda:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 800cddc:	6878      	ldr	r0, [r7, #4]
 800cdde:	f000 fbc1 	bl	800d564 <_ZSt3getILj3EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 800cde2:	4603      	mov	r3, r0
    }
 800cde4:	4618      	mov	r0, r3
 800cde6:	3708      	adds	r7, #8
 800cde8:	46bd      	mov	sp, r7
 800cdea:	bd80      	pop	{r7, pc}

0800cdec <_ZSt3getIbJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 800cdec:	b580      	push	{r7, lr}
 800cdee:	b082      	sub	sp, #8
 800cdf0:	af00      	add	r7, sp, #0
 800cdf2:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 800cdf4:	6878      	ldr	r0, [r7, #4]
 800cdf6:	f000 fbd1 	bl	800d59c <_ZSt3getILj0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 800cdfa:	4603      	mov	r3, r0
    }
 800cdfc:	4618      	mov	r0, r3
 800cdfe:	3708      	adds	r7, #8
 800ce00:	46bd      	mov	sp, r7
 800ce02:	bd80      	pop	{r7, pc}

0800ce04 <_ZSt4moveIRNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEONSt16remove_referenceIT_E4typeEOSG_>:
    move(_Tp&& __t) noexcept
 800ce04:	b480      	push	{r7}
 800ce06:	b083      	sub	sp, #12
 800ce08:	af00      	add	r7, sp, #0
 800ce0a:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 800ce0c:	687b      	ldr	r3, [r7, #4]
 800ce0e:	4618      	mov	r0, r3
 800ce10:	370c      	adds	r7, #12
 800ce12:	46bd      	mov	sp, r7
 800ce14:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ce18:	4770      	bx	lr

0800ce1a <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEENSt8__detail9__variant15_Move_ctor_baseILb0EJifbS5_S9_EEEEDcOT0_>:
    __variant_cast(_Tp&& __rhs)
 800ce1a:	b480      	push	{r7}
 800ce1c:	b083      	sub	sp, #12
 800ce1e:	af00      	add	r7, sp, #0
 800ce20:	6078      	str	r0, [r7, #4]
        return static_cast<variant<_Types...>&&>(__rhs);
 800ce22:	687b      	ldr	r3, [r7, #4]
    }
 800ce24:	4618      	mov	r0, r3
 800ce26:	370c      	adds	r7, #12
 800ce28:	46bd      	mov	sp, r7
 800ce2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ce2e:	4770      	bx	lr

0800ce30 <_ZNSt8__detail9__variant5__getINS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 800ce30:	b580      	push	{r7, lr}
 800ce32:	b082      	sub	sp, #8
 800ce34:	af00      	add	r7, sp, #0
 800ce36:	7138      	strb	r0, [r7, #4]
 800ce38:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 800ce3a:	6838      	ldr	r0, [r7, #0]
 800ce3c:	f000 fbf6 	bl	800d62c <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800ce40:	4603      	mov	r3, r0
 800ce42:	4618      	mov	r0, r3
 800ce44:	f000 fbfd 	bl	800d642 <_ZNOSt8__detail9__variant14_UninitializedIiLb1EE6_M_getEv>
 800ce48:	4603      	mov	r3, r0
 800ce4a:	4618      	mov	r0, r3
 800ce4c:	3708      	adds	r7, #8
 800ce4e:	46bd      	mov	sp, r7
 800ce50:	bd80      	pop	{r7, pc}

0800ce52 <_ZNSt8__detail9__variant5__getILj0ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800ce52:	b590      	push	{r4, r7, lr}
 800ce54:	b083      	sub	sp, #12
 800ce56:	af00      	add	r7, sp, #0
 800ce58:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800ce5a:	6878      	ldr	r0, [r7, #4]
 800ce5c:	f000 fbdb 	bl	800d616 <_ZSt7forwardISt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISC_E4typeE>
 800ce60:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800ce62:	4619      	mov	r1, r3
 800ce64:	4620      	mov	r0, r4
 800ce66:	f7ff ffe3 	bl	800ce30 <_ZNSt8__detail9__variant5__getINS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 800ce6a:	4603      	mov	r3, r0
    }
 800ce6c:	4618      	mov	r0, r3
 800ce6e:	370c      	adds	r7, #12
 800ce70:	46bd      	mov	sp, r7
 800ce72:	bd90      	pop	{r4, r7, pc}

0800ce74 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESR_EEDcSJ_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 800ce74:	b580      	push	{r7, lr}
 800ce76:	b082      	sub	sp, #8
 800ce78:	af00      	add	r7, sp, #0
 800ce7a:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 800ce7c:	6878      	ldr	r0, [r7, #4]
 800ce7e:	f000 fbca 	bl	800d616 <_ZSt7forwardISt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISC_E4typeE>
 800ce82:	4603      	mov	r3, r0
 800ce84:	4618      	mov	r0, r3
 800ce86:	f7ff ffe4 	bl	800ce52 <_ZNSt8__detail9__variant5__getILj0ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 800ce8a:	4603      	mov	r3, r0
	}
 800ce8c:	4618      	mov	r0, r3
 800ce8e:	3708      	adds	r7, #8
 800ce90:	46bd      	mov	sp, r7
 800ce92:	bd80      	pop	{r7, pc}

0800ce94 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESP_SS_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 800ce94:	b5b0      	push	{r4, r5, r7, lr}
 800ce96:	b082      	sub	sp, #8
 800ce98:	af00      	add	r7, sp, #0
 800ce9a:	6078      	str	r0, [r7, #4]
 800ce9c:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 800ce9e:	6878      	ldr	r0, [r7, #4]
 800cea0:	f000 fba3 	bl	800d5ea <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800cea4:	4604      	mov	r4, r0
 800cea6:	6838      	ldr	r0, [r7, #0]
 800cea8:	f000 fbaa 	bl	800d600 <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800ceac:	4603      	mov	r3, r0
 800ceae:	4618      	mov	r0, r3
 800ceb0:	f7ff ffe0 	bl	800ce74 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESR_EEDcSJ_>
 800ceb4:	4603      	mov	r3, r0
 800ceb6:	4619      	mov	r1, r3
 800ceb8:	4620      	mov	r0, r4
 800ceba:	f000 fbcf 	bl	800d65c <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_JiEENSt15__invoke_resultISK_JDpT0_EE4typeESL_DpOSO_>
		std::forward<_Variants>(__vars))...);
 800cebe:	462b      	mov	r3, r5
      }
 800cec0:	4618      	mov	r0, r3
 800cec2:	3708      	adds	r7, #8
 800cec4:	46bd      	mov	sp, r7
 800cec6:	bdb0      	pop	{r4, r5, r7, pc}

0800cec8 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESP_SS_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800cec8:	b5b0      	push	{r4, r5, r7, lr}
 800ceca:	b082      	sub	sp, #8
 800cecc:	af00      	add	r7, sp, #0
 800cece:	6078      	str	r0, [r7, #4]
 800ced0:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 800ced2:	6878      	ldr	r0, [r7, #4]
 800ced4:	f000 fb89 	bl	800d5ea <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800ced8:	4604      	mov	r4, r0
 800ceda:	6838      	ldr	r0, [r7, #0]
 800cedc:	f000 fb90 	bl	800d600 <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800cee0:	4603      	mov	r3, r0
 800cee2:	4619      	mov	r1, r3
 800cee4:	4620      	mov	r0, r4
 800cee6:	f7ff ffd5 	bl	800ce94 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESP_SS_>
				   std::forward<_Variants>(__vars)...);
 800ceea:	462b      	mov	r3, r5
      }
 800ceec:	4618      	mov	r0, r3
 800ceee:	3708      	adds	r7, #8
 800cef0:	46bd      	mov	sp, r7
 800cef2:	bdb0      	pop	{r4, r5, r7, pc}

0800cef4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj0EEEE14__visit_invokeESP_SS_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800cef4:	b5b0      	push	{r4, r5, r7, lr}
 800cef6:	b082      	sub	sp, #8
 800cef8:	af00      	add	r7, sp, #0
 800cefa:	6078      	str	r0, [r7, #4]
 800cefc:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 800cefe:	6878      	ldr	r0, [r7, #4]
 800cf00:	f000 fb73 	bl	800d5ea <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800cf04:	4604      	mov	r4, r0
 800cf06:	6838      	ldr	r0, [r7, #0]
 800cf08:	f000 fb7a 	bl	800d600 <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800cf0c:	4603      	mov	r3, r0
 800cf0e:	4619      	mov	r1, r3
 800cf10:	4620      	mov	r0, r4
 800cf12:	f7ff ffd9 	bl	800cec8 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESP_SS_>
				   std::forward<_Variants>(__vars)...);
 800cf16:	462b      	mov	r3, r5
      }
 800cf18:	4618      	mov	r0, r3
 800cf1a:	3708      	adds	r7, #8
 800cf1c:	46bd      	mov	sp, r7
 800cf1e:	bdb0      	pop	{r4, r5, r7, pc}

0800cf20 <_ZNSt8__detail9__variant5__getINS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 800cf20:	b580      	push	{r7, lr}
 800cf22:	b082      	sub	sp, #8
 800cf24:	af00      	add	r7, sp, #0
 800cf26:	7138      	strb	r0, [r7, #4]
 800cf28:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 800cf2a:	6838      	ldr	r0, [r7, #0]
 800cf2c:	f000 fbad 	bl	800d68a <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800cf30:	4603      	mov	r3, r0
 800cf32:	4618      	mov	r0, r3
 800cf34:	f000 fbb4 	bl	800d6a0 <_ZNOSt8__detail9__variant14_UninitializedIfLb1EE6_M_getEv>
 800cf38:	4603      	mov	r3, r0
 800cf3a:	4618      	mov	r0, r3
 800cf3c:	3708      	adds	r7, #8
 800cf3e:	46bd      	mov	sp, r7
 800cf40:	bd80      	pop	{r7, pc}

0800cf42 <_ZNSt8__detail9__variant5__getILj1ENS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800cf42:	b590      	push	{r4, r7, lr}
 800cf44:	b083      	sub	sp, #12
 800cf46:	af00      	add	r7, sp, #0
 800cf48:	7138      	strb	r0, [r7, #4]
 800cf4a:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800cf4c:	6838      	ldr	r0, [r7, #0]
 800cf4e:	f000 fb6d 	bl	800d62c <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800cf52:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800cf54:	4619      	mov	r1, r3
 800cf56:	4620      	mov	r0, r4
 800cf58:	f7ff ffe2 	bl	800cf20 <_ZNSt8__detail9__variant5__getINS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 800cf5c:	4603      	mov	r3, r0
    }
 800cf5e:	4618      	mov	r0, r3
 800cf60:	370c      	adds	r7, #12
 800cf62:	46bd      	mov	sp, r7
 800cf64:	bd90      	pop	{r4, r7, pc}

0800cf66 <_ZNSt8__detail9__variant5__getILj1ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800cf66:	b590      	push	{r4, r7, lr}
 800cf68:	b083      	sub	sp, #12
 800cf6a:	af00      	add	r7, sp, #0
 800cf6c:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800cf6e:	6878      	ldr	r0, [r7, #4]
 800cf70:	f000 fb51 	bl	800d616 <_ZSt7forwardISt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISC_E4typeE>
 800cf74:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800cf76:	4619      	mov	r1, r3
 800cf78:	4620      	mov	r0, r4
 800cf7a:	f7ff ffe2 	bl	800cf42 <_ZNSt8__detail9__variant5__getILj1ENS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800cf7e:	4603      	mov	r3, r0
    }
 800cf80:	4618      	mov	r0, r3
 800cf82:	370c      	adds	r7, #12
 800cf84:	46bd      	mov	sp, r7
 800cf86:	bd90      	pop	{r4, r7, pc}

0800cf88 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESR_EEDcSJ_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 800cf88:	b580      	push	{r7, lr}
 800cf8a:	b082      	sub	sp, #8
 800cf8c:	af00      	add	r7, sp, #0
 800cf8e:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 800cf90:	6878      	ldr	r0, [r7, #4]
 800cf92:	f000 fb40 	bl	800d616 <_ZSt7forwardISt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISC_E4typeE>
 800cf96:	4603      	mov	r3, r0
 800cf98:	4618      	mov	r0, r3
 800cf9a:	f7ff ffe4 	bl	800cf66 <_ZNSt8__detail9__variant5__getILj1ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 800cf9e:	4603      	mov	r3, r0
	}
 800cfa0:	4618      	mov	r0, r3
 800cfa2:	3708      	adds	r7, #8
 800cfa4:	46bd      	mov	sp, r7
 800cfa6:	bd80      	pop	{r7, pc}

0800cfa8 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESP_SS_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 800cfa8:	b5b0      	push	{r4, r5, r7, lr}
 800cfaa:	b082      	sub	sp, #8
 800cfac:	af00      	add	r7, sp, #0
 800cfae:	6078      	str	r0, [r7, #4]
 800cfb0:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 800cfb2:	6878      	ldr	r0, [r7, #4]
 800cfb4:	f000 fb19 	bl	800d5ea <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800cfb8:	4604      	mov	r4, r0
 800cfba:	6838      	ldr	r0, [r7, #0]
 800cfbc:	f000 fb20 	bl	800d600 <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800cfc0:	4603      	mov	r3, r0
 800cfc2:	4618      	mov	r0, r3
 800cfc4:	f7ff ffe0 	bl	800cf88 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESR_EEDcSJ_>
 800cfc8:	4603      	mov	r3, r0
 800cfca:	4619      	mov	r1, r3
 800cfcc:	4620      	mov	r0, r4
 800cfce:	f000 fb74 	bl	800d6ba <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_JfEENSt15__invoke_resultISK_JDpT0_EE4typeESL_DpOSO_>
		std::forward<_Variants>(__vars))...);
 800cfd2:	462b      	mov	r3, r5
      }
 800cfd4:	4618      	mov	r0, r3
 800cfd6:	3708      	adds	r7, #8
 800cfd8:	46bd      	mov	sp, r7
 800cfda:	bdb0      	pop	{r4, r5, r7, pc}

0800cfdc <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESP_SS_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800cfdc:	b5b0      	push	{r4, r5, r7, lr}
 800cfde:	b082      	sub	sp, #8
 800cfe0:	af00      	add	r7, sp, #0
 800cfe2:	6078      	str	r0, [r7, #4]
 800cfe4:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 800cfe6:	6878      	ldr	r0, [r7, #4]
 800cfe8:	f000 faff 	bl	800d5ea <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800cfec:	4604      	mov	r4, r0
 800cfee:	6838      	ldr	r0, [r7, #0]
 800cff0:	f000 fb06 	bl	800d600 <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800cff4:	4603      	mov	r3, r0
 800cff6:	4619      	mov	r1, r3
 800cff8:	4620      	mov	r0, r4
 800cffa:	f7ff ffd5 	bl	800cfa8 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESP_SS_>
				   std::forward<_Variants>(__vars)...);
 800cffe:	462b      	mov	r3, r5
      }
 800d000:	4618      	mov	r0, r3
 800d002:	3708      	adds	r7, #8
 800d004:	46bd      	mov	sp, r7
 800d006:	bdb0      	pop	{r4, r5, r7, pc}

0800d008 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj1EEEE14__visit_invokeESP_SS_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800d008:	b5b0      	push	{r4, r5, r7, lr}
 800d00a:	b082      	sub	sp, #8
 800d00c:	af00      	add	r7, sp, #0
 800d00e:	6078      	str	r0, [r7, #4]
 800d010:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 800d012:	6878      	ldr	r0, [r7, #4]
 800d014:	f000 fae9 	bl	800d5ea <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800d018:	4604      	mov	r4, r0
 800d01a:	6838      	ldr	r0, [r7, #0]
 800d01c:	f000 faf0 	bl	800d600 <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800d020:	4603      	mov	r3, r0
 800d022:	4619      	mov	r1, r3
 800d024:	4620      	mov	r0, r4
 800d026:	f7ff ffd9 	bl	800cfdc <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESP_SS_>
				   std::forward<_Variants>(__vars)...);
 800d02a:	462b      	mov	r3, r5
      }
 800d02c:	4618      	mov	r0, r3
 800d02e:	3708      	adds	r7, #8
 800d030:	46bd      	mov	sp, r7
 800d032:	bdb0      	pop	{r4, r5, r7, pc}

0800d034 <_ZNSt8__detail9__variant5__getINS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 800d034:	b580      	push	{r7, lr}
 800d036:	b082      	sub	sp, #8
 800d038:	af00      	add	r7, sp, #0
 800d03a:	7138      	strb	r0, [r7, #4]
 800d03c:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 800d03e:	6838      	ldr	r0, [r7, #0]
 800d040:	f000 fb52 	bl	800d6e8 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800d044:	4603      	mov	r3, r0
 800d046:	4618      	mov	r0, r3
 800d048:	f000 fb59 	bl	800d6fe <_ZNOSt8__detail9__variant14_UninitializedIbLb1EE6_M_getEv>
 800d04c:	4603      	mov	r3, r0
 800d04e:	4618      	mov	r0, r3
 800d050:	3708      	adds	r7, #8
 800d052:	46bd      	mov	sp, r7
 800d054:	bd80      	pop	{r7, pc}

0800d056 <_ZNSt8__detail9__variant5__getILj1ENS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800d056:	b590      	push	{r4, r7, lr}
 800d058:	b083      	sub	sp, #12
 800d05a:	af00      	add	r7, sp, #0
 800d05c:	7138      	strb	r0, [r7, #4]
 800d05e:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800d060:	6838      	ldr	r0, [r7, #0]
 800d062:	f000 fb12 	bl	800d68a <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800d066:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800d068:	4619      	mov	r1, r3
 800d06a:	4620      	mov	r0, r4
 800d06c:	f7ff ffe2 	bl	800d034 <_ZNSt8__detail9__variant5__getINS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 800d070:	4603      	mov	r3, r0
    }
 800d072:	4618      	mov	r0, r3
 800d074:	370c      	adds	r7, #12
 800d076:	46bd      	mov	sp, r7
 800d078:	bd90      	pop	{r4, r7, pc}

0800d07a <_ZNSt8__detail9__variant5__getILj2ENS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800d07a:	b590      	push	{r4, r7, lr}
 800d07c:	b083      	sub	sp, #12
 800d07e:	af00      	add	r7, sp, #0
 800d080:	7138      	strb	r0, [r7, #4]
 800d082:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800d084:	6838      	ldr	r0, [r7, #0]
 800d086:	f000 fad1 	bl	800d62c <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800d08a:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800d08c:	4619      	mov	r1, r3
 800d08e:	4620      	mov	r0, r4
 800d090:	f7ff ffe1 	bl	800d056 <_ZNSt8__detail9__variant5__getILj1ENS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800d094:	4603      	mov	r3, r0
    }
 800d096:	4618      	mov	r0, r3
 800d098:	370c      	adds	r7, #12
 800d09a:	46bd      	mov	sp, r7
 800d09c:	bd90      	pop	{r4, r7, pc}

0800d09e <_ZNSt8__detail9__variant5__getILj2ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800d09e:	b590      	push	{r4, r7, lr}
 800d0a0:	b083      	sub	sp, #12
 800d0a2:	af00      	add	r7, sp, #0
 800d0a4:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800d0a6:	6878      	ldr	r0, [r7, #4]
 800d0a8:	f000 fab5 	bl	800d616 <_ZSt7forwardISt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISC_E4typeE>
 800d0ac:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800d0ae:	4619      	mov	r1, r3
 800d0b0:	4620      	mov	r0, r4
 800d0b2:	f7ff ffe2 	bl	800d07a <_ZNSt8__detail9__variant5__getILj2ENS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800d0b6:	4603      	mov	r3, r0
    }
 800d0b8:	4618      	mov	r0, r3
 800d0ba:	370c      	adds	r7, #12
 800d0bc:	46bd      	mov	sp, r7
 800d0be:	bd90      	pop	{r4, r7, pc}

0800d0c0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESR_EEDcSJ_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 800d0c0:	b580      	push	{r7, lr}
 800d0c2:	b082      	sub	sp, #8
 800d0c4:	af00      	add	r7, sp, #0
 800d0c6:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 800d0c8:	6878      	ldr	r0, [r7, #4]
 800d0ca:	f000 faa4 	bl	800d616 <_ZSt7forwardISt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISC_E4typeE>
 800d0ce:	4603      	mov	r3, r0
 800d0d0:	4618      	mov	r0, r3
 800d0d2:	f7ff ffe4 	bl	800d09e <_ZNSt8__detail9__variant5__getILj2ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 800d0d6:	4603      	mov	r3, r0
	}
 800d0d8:	4618      	mov	r0, r3
 800d0da:	3708      	adds	r7, #8
 800d0dc:	46bd      	mov	sp, r7
 800d0de:	bd80      	pop	{r7, pc}

0800d0e0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESP_SS_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 800d0e0:	b5b0      	push	{r4, r5, r7, lr}
 800d0e2:	b082      	sub	sp, #8
 800d0e4:	af00      	add	r7, sp, #0
 800d0e6:	6078      	str	r0, [r7, #4]
 800d0e8:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 800d0ea:	6878      	ldr	r0, [r7, #4]
 800d0ec:	f000 fa7d 	bl	800d5ea <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800d0f0:	4604      	mov	r4, r0
 800d0f2:	6838      	ldr	r0, [r7, #0]
 800d0f4:	f000 fa84 	bl	800d600 <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800d0f8:	4603      	mov	r3, r0
 800d0fa:	4618      	mov	r0, r3
 800d0fc:	f7ff ffe0 	bl	800d0c0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESR_EEDcSJ_>
 800d100:	4603      	mov	r3, r0
 800d102:	4619      	mov	r1, r3
 800d104:	4620      	mov	r0, r4
 800d106:	f000 fb07 	bl	800d718 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_JbEENSt15__invoke_resultISK_JDpT0_EE4typeESL_DpOSO_>
		std::forward<_Variants>(__vars))...);
 800d10a:	462b      	mov	r3, r5
      }
 800d10c:	4618      	mov	r0, r3
 800d10e:	3708      	adds	r7, #8
 800d110:	46bd      	mov	sp, r7
 800d112:	bdb0      	pop	{r4, r5, r7, pc}

0800d114 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESP_SS_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800d114:	b5b0      	push	{r4, r5, r7, lr}
 800d116:	b082      	sub	sp, #8
 800d118:	af00      	add	r7, sp, #0
 800d11a:	6078      	str	r0, [r7, #4]
 800d11c:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 800d11e:	6878      	ldr	r0, [r7, #4]
 800d120:	f000 fa63 	bl	800d5ea <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800d124:	4604      	mov	r4, r0
 800d126:	6838      	ldr	r0, [r7, #0]
 800d128:	f000 fa6a 	bl	800d600 <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800d12c:	4603      	mov	r3, r0
 800d12e:	4619      	mov	r1, r3
 800d130:	4620      	mov	r0, r4
 800d132:	f7ff ffd5 	bl	800d0e0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESP_SS_>
				   std::forward<_Variants>(__vars)...);
 800d136:	462b      	mov	r3, r5
      }
 800d138:	4618      	mov	r0, r3
 800d13a:	3708      	adds	r7, #8
 800d13c:	46bd      	mov	sp, r7
 800d13e:	bdb0      	pop	{r4, r5, r7, pc}

0800d140 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj2EEEE14__visit_invokeESP_SS_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800d140:	b5b0      	push	{r4, r5, r7, lr}
 800d142:	b082      	sub	sp, #8
 800d144:	af00      	add	r7, sp, #0
 800d146:	6078      	str	r0, [r7, #4]
 800d148:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 800d14a:	6878      	ldr	r0, [r7, #4]
 800d14c:	f000 fa4d 	bl	800d5ea <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800d150:	4604      	mov	r4, r0
 800d152:	6838      	ldr	r0, [r7, #0]
 800d154:	f000 fa54 	bl	800d600 <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800d158:	4603      	mov	r3, r0
 800d15a:	4619      	mov	r1, r3
 800d15c:	4620      	mov	r0, r4
 800d15e:	f7ff ffd9 	bl	800d114 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESP_SS_>
				   std::forward<_Variants>(__vars)...);
 800d162:	462b      	mov	r3, r5
      }
 800d164:	4618      	mov	r0, r3
 800d166:	3708      	adds	r7, #8
 800d168:	46bd      	mov	sp, r7
 800d16a:	bdb0      	pop	{r4, r5, r7, pc}

0800d16c <_ZNSt8__detail9__variant5__getINS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 800d16c:	b580      	push	{r7, lr}
 800d16e:	b082      	sub	sp, #8
 800d170:	af00      	add	r7, sp, #0
 800d172:	7138      	strb	r0, [r7, #4]
 800d174:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 800d176:	6838      	ldr	r0, [r7, #0]
 800d178:	f000 fae5 	bl	800d746 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800d17c:	4603      	mov	r3, r0
 800d17e:	4618      	mov	r0, r3
 800d180:	f000 faec 	bl	800d75c <_ZNOSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE6_M_getEv>
 800d184:	4603      	mov	r3, r0
 800d186:	4618      	mov	r0, r3
 800d188:	3708      	adds	r7, #8
 800d18a:	46bd      	mov	sp, r7
 800d18c:	bd80      	pop	{r7, pc}

0800d18e <_ZNSt8__detail9__variant5__getILj1ENS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800d18e:	b590      	push	{r4, r7, lr}
 800d190:	b083      	sub	sp, #12
 800d192:	af00      	add	r7, sp, #0
 800d194:	7138      	strb	r0, [r7, #4]
 800d196:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800d198:	6838      	ldr	r0, [r7, #0]
 800d19a:	f000 faa5 	bl	800d6e8 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800d19e:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800d1a0:	4619      	mov	r1, r3
 800d1a2:	4620      	mov	r0, r4
 800d1a4:	f7ff ffe2 	bl	800d16c <_ZNSt8__detail9__variant5__getINS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 800d1a8:	4603      	mov	r3, r0
    }
 800d1aa:	4618      	mov	r0, r3
 800d1ac:	370c      	adds	r7, #12
 800d1ae:	46bd      	mov	sp, r7
 800d1b0:	bd90      	pop	{r4, r7, pc}

0800d1b2 <_ZNSt8__detail9__variant5__getILj2ENS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800d1b2:	b590      	push	{r4, r7, lr}
 800d1b4:	b083      	sub	sp, #12
 800d1b6:	af00      	add	r7, sp, #0
 800d1b8:	7138      	strb	r0, [r7, #4]
 800d1ba:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800d1bc:	6838      	ldr	r0, [r7, #0]
 800d1be:	f000 fa64 	bl	800d68a <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800d1c2:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800d1c4:	4619      	mov	r1, r3
 800d1c6:	4620      	mov	r0, r4
 800d1c8:	f7ff ffe1 	bl	800d18e <_ZNSt8__detail9__variant5__getILj1ENS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800d1cc:	4603      	mov	r3, r0
    }
 800d1ce:	4618      	mov	r0, r3
 800d1d0:	370c      	adds	r7, #12
 800d1d2:	46bd      	mov	sp, r7
 800d1d4:	bd90      	pop	{r4, r7, pc}

0800d1d6 <_ZNSt8__detail9__variant5__getILj3ENS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800d1d6:	b590      	push	{r4, r7, lr}
 800d1d8:	b083      	sub	sp, #12
 800d1da:	af00      	add	r7, sp, #0
 800d1dc:	7138      	strb	r0, [r7, #4]
 800d1de:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800d1e0:	6838      	ldr	r0, [r7, #0]
 800d1e2:	f000 fa23 	bl	800d62c <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800d1e6:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800d1e8:	4619      	mov	r1, r3
 800d1ea:	4620      	mov	r0, r4
 800d1ec:	f7ff ffe1 	bl	800d1b2 <_ZNSt8__detail9__variant5__getILj2ENS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800d1f0:	4603      	mov	r3, r0
    }
 800d1f2:	4618      	mov	r0, r3
 800d1f4:	370c      	adds	r7, #12
 800d1f6:	46bd      	mov	sp, r7
 800d1f8:	bd90      	pop	{r4, r7, pc}

0800d1fa <_ZNSt8__detail9__variant5__getILj3ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800d1fa:	b590      	push	{r4, r7, lr}
 800d1fc:	b083      	sub	sp, #12
 800d1fe:	af00      	add	r7, sp, #0
 800d200:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800d202:	6878      	ldr	r0, [r7, #4]
 800d204:	f000 fa07 	bl	800d616 <_ZSt7forwardISt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISC_E4typeE>
 800d208:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800d20a:	4619      	mov	r1, r3
 800d20c:	4620      	mov	r0, r4
 800d20e:	f7ff ffe2 	bl	800d1d6 <_ZNSt8__detail9__variant5__getILj3ENS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800d212:	4603      	mov	r3, r0
    }
 800d214:	4618      	mov	r0, r3
 800d216:	370c      	adds	r7, #12
 800d218:	46bd      	mov	sp, r7
 800d21a:	bd90      	pop	{r4, r7, pc}

0800d21c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESR_EEDcSJ_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 800d21c:	b580      	push	{r7, lr}
 800d21e:	b082      	sub	sp, #8
 800d220:	af00      	add	r7, sp, #0
 800d222:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 800d224:	6878      	ldr	r0, [r7, #4]
 800d226:	f000 f9f6 	bl	800d616 <_ZSt7forwardISt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISC_E4typeE>
 800d22a:	4603      	mov	r3, r0
 800d22c:	4618      	mov	r0, r3
 800d22e:	f7ff ffe4 	bl	800d1fa <_ZNSt8__detail9__variant5__getILj3ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 800d232:	4603      	mov	r3, r0
	}
 800d234:	4618      	mov	r0, r3
 800d236:	3708      	adds	r7, #8
 800d238:	46bd      	mov	sp, r7
 800d23a:	bd80      	pop	{r7, pc}

0800d23c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESP_SS_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 800d23c:	b5b0      	push	{r4, r5, r7, lr}
 800d23e:	b082      	sub	sp, #8
 800d240:	af00      	add	r7, sp, #0
 800d242:	6078      	str	r0, [r7, #4]
 800d244:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 800d246:	6878      	ldr	r0, [r7, #4]
 800d248:	f000 f9cf 	bl	800d5ea <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800d24c:	4604      	mov	r4, r0
 800d24e:	6838      	ldr	r0, [r7, #0]
 800d250:	f000 f9d6 	bl	800d600 <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800d254:	4603      	mov	r3, r0
 800d256:	4618      	mov	r0, r3
 800d258:	f7ff ffe0 	bl	800d21c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESR_EEDcSJ_>
 800d25c:	4603      	mov	r3, r0
 800d25e:	4619      	mov	r1, r3
 800d260:	4620      	mov	r0, r4
 800d262:	f000 fa8c 	bl	800d77e <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_JS8_EENSt15__invoke_resultISK_JDpT0_EE4typeESL_DpOSO_>
		std::forward<_Variants>(__vars))...);
 800d266:	462b      	mov	r3, r5
      }
 800d268:	4618      	mov	r0, r3
 800d26a:	3708      	adds	r7, #8
 800d26c:	46bd      	mov	sp, r7
 800d26e:	bdb0      	pop	{r4, r5, r7, pc}

0800d270 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESP_SS_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800d270:	b5b0      	push	{r4, r5, r7, lr}
 800d272:	b082      	sub	sp, #8
 800d274:	af00      	add	r7, sp, #0
 800d276:	6078      	str	r0, [r7, #4]
 800d278:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 800d27a:	6878      	ldr	r0, [r7, #4]
 800d27c:	f000 f9b5 	bl	800d5ea <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800d280:	4604      	mov	r4, r0
 800d282:	6838      	ldr	r0, [r7, #0]
 800d284:	f000 f9bc 	bl	800d600 <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800d288:	4603      	mov	r3, r0
 800d28a:	4619      	mov	r1, r3
 800d28c:	4620      	mov	r0, r4
 800d28e:	f7ff ffd5 	bl	800d23c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESP_SS_>
				   std::forward<_Variants>(__vars)...);
 800d292:	462b      	mov	r3, r5
      }
 800d294:	4618      	mov	r0, r3
 800d296:	3708      	adds	r7, #8
 800d298:	46bd      	mov	sp, r7
 800d29a:	bdb0      	pop	{r4, r5, r7, pc}

0800d29c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj3EEEE14__visit_invokeESP_SS_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800d29c:	b5b0      	push	{r4, r5, r7, lr}
 800d29e:	b082      	sub	sp, #8
 800d2a0:	af00      	add	r7, sp, #0
 800d2a2:	6078      	str	r0, [r7, #4]
 800d2a4:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 800d2a6:	6878      	ldr	r0, [r7, #4]
 800d2a8:	f000 f99f 	bl	800d5ea <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800d2ac:	4604      	mov	r4, r0
 800d2ae:	6838      	ldr	r0, [r7, #0]
 800d2b0:	f000 f9a6 	bl	800d600 <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800d2b4:	4603      	mov	r3, r0
 800d2b6:	4619      	mov	r1, r3
 800d2b8:	4620      	mov	r0, r4
 800d2ba:	f7ff ffd9 	bl	800d270 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESP_SS_>
				   std::forward<_Variants>(__vars)...);
 800d2be:	462b      	mov	r3, r5
      }
 800d2c0:	4618      	mov	r0, r3
 800d2c2:	3708      	adds	r7, #8
 800d2c4:	46bd      	mov	sp, r7
 800d2c6:	bdb0      	pop	{r4, r5, r7, pc}

0800d2c8 <_ZNSt8__detail9__variant5__getINS0_15_Variadic_unionIJSt6vectorI6SymbolSaIS4_EEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 800d2c8:	b580      	push	{r7, lr}
 800d2ca:	b082      	sub	sp, #8
 800d2cc:	af00      	add	r7, sp, #0
 800d2ce:	7138      	strb	r0, [r7, #4]
 800d2d0:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 800d2d2:	6838      	ldr	r0, [r7, #0]
 800d2d4:	f000 fa6a 	bl	800d7ac <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJSt6vectorI6SymbolSaIS4_EEEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 800d2d8:	4603      	mov	r3, r0
 800d2da:	4618      	mov	r0, r3
 800d2dc:	f000 fa71 	bl	800d7c2 <_ZNOSt8__detail9__variant14_UninitializedISt6vectorI6SymbolSaIS3_EELb0EE6_M_getEv>
 800d2e0:	4603      	mov	r3, r0
 800d2e2:	4618      	mov	r0, r3
 800d2e4:	3708      	adds	r7, #8
 800d2e6:	46bd      	mov	sp, r7
 800d2e8:	bd80      	pop	{r7, pc}

0800d2ea <_ZNSt8__detail9__variant5__getILj1ENS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800d2ea:	b590      	push	{r4, r7, lr}
 800d2ec:	b083      	sub	sp, #12
 800d2ee:	af00      	add	r7, sp, #0
 800d2f0:	7138      	strb	r0, [r7, #4]
 800d2f2:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800d2f4:	6838      	ldr	r0, [r7, #0]
 800d2f6:	f000 fa26 	bl	800d746 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800d2fa:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800d2fc:	4619      	mov	r1, r3
 800d2fe:	4620      	mov	r0, r4
 800d300:	f7ff ffe2 	bl	800d2c8 <_ZNSt8__detail9__variant5__getINS0_15_Variadic_unionIJSt6vectorI6SymbolSaIS4_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 800d304:	4603      	mov	r3, r0
    }
 800d306:	4618      	mov	r0, r3
 800d308:	370c      	adds	r7, #12
 800d30a:	46bd      	mov	sp, r7
 800d30c:	bd90      	pop	{r4, r7, pc}

0800d30e <_ZNSt8__detail9__variant5__getILj2ENS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800d30e:	b590      	push	{r4, r7, lr}
 800d310:	b083      	sub	sp, #12
 800d312:	af00      	add	r7, sp, #0
 800d314:	7138      	strb	r0, [r7, #4]
 800d316:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800d318:	6838      	ldr	r0, [r7, #0]
 800d31a:	f000 f9e5 	bl	800d6e8 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800d31e:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800d320:	4619      	mov	r1, r3
 800d322:	4620      	mov	r0, r4
 800d324:	f7ff ffe1 	bl	800d2ea <_ZNSt8__detail9__variant5__getILj1ENS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800d328:	4603      	mov	r3, r0
    }
 800d32a:	4618      	mov	r0, r3
 800d32c:	370c      	adds	r7, #12
 800d32e:	46bd      	mov	sp, r7
 800d330:	bd90      	pop	{r4, r7, pc}

0800d332 <_ZNSt8__detail9__variant5__getILj3ENS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800d332:	b590      	push	{r4, r7, lr}
 800d334:	b083      	sub	sp, #12
 800d336:	af00      	add	r7, sp, #0
 800d338:	7138      	strb	r0, [r7, #4]
 800d33a:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800d33c:	6838      	ldr	r0, [r7, #0]
 800d33e:	f000 f9a4 	bl	800d68a <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800d342:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800d344:	4619      	mov	r1, r3
 800d346:	4620      	mov	r0, r4
 800d348:	f7ff ffe1 	bl	800d30e <_ZNSt8__detail9__variant5__getILj2ENS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800d34c:	4603      	mov	r3, r0
    }
 800d34e:	4618      	mov	r0, r3
 800d350:	370c      	adds	r7, #12
 800d352:	46bd      	mov	sp, r7
 800d354:	bd90      	pop	{r4, r7, pc}

0800d356 <_ZNSt8__detail9__variant5__getILj4ENS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800d356:	b590      	push	{r4, r7, lr}
 800d358:	b083      	sub	sp, #12
 800d35a:	af00      	add	r7, sp, #0
 800d35c:	7138      	strb	r0, [r7, #4]
 800d35e:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800d360:	6838      	ldr	r0, [r7, #0]
 800d362:	f000 f963 	bl	800d62c <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800d366:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800d368:	4619      	mov	r1, r3
 800d36a:	4620      	mov	r0, r4
 800d36c:	f7ff ffe1 	bl	800d332 <_ZNSt8__detail9__variant5__getILj3ENS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800d370:	4603      	mov	r3, r0
    }
 800d372:	4618      	mov	r0, r3
 800d374:	370c      	adds	r7, #12
 800d376:	46bd      	mov	sp, r7
 800d378:	bd90      	pop	{r4, r7, pc}

0800d37a <_ZNSt8__detail9__variant5__getILj4ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800d37a:	b590      	push	{r4, r7, lr}
 800d37c:	b083      	sub	sp, #12
 800d37e:	af00      	add	r7, sp, #0
 800d380:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800d382:	6878      	ldr	r0, [r7, #4]
 800d384:	f000 f947 	bl	800d616 <_ZSt7forwardISt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISC_E4typeE>
 800d388:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800d38a:	4619      	mov	r1, r3
 800d38c:	4620      	mov	r0, r4
 800d38e:	f7ff ffe2 	bl	800d356 <_ZNSt8__detail9__variant5__getILj4ENS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800d392:	4603      	mov	r3, r0
    }
 800d394:	4618      	mov	r0, r3
 800d396:	370c      	adds	r7, #12
 800d398:	46bd      	mov	sp, r7
 800d39a:	bd90      	pop	{r4, r7, pc}

0800d39c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj4EEEE28__element_by_index_or_cookieILj4ESR_EEDcSJ_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 800d39c:	b580      	push	{r7, lr}
 800d39e:	b082      	sub	sp, #8
 800d3a0:	af00      	add	r7, sp, #0
 800d3a2:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 800d3a4:	6878      	ldr	r0, [r7, #4]
 800d3a6:	f000 f936 	bl	800d616 <_ZSt7forwardISt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISC_E4typeE>
 800d3aa:	4603      	mov	r3, r0
 800d3ac:	4618      	mov	r0, r3
 800d3ae:	f7ff ffe4 	bl	800d37a <_ZNSt8__detail9__variant5__getILj4ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 800d3b2:	4603      	mov	r3, r0
	}
 800d3b4:	4618      	mov	r0, r3
 800d3b6:	3708      	adds	r7, #8
 800d3b8:	46bd      	mov	sp, r7
 800d3ba:	bd80      	pop	{r7, pc}

0800d3bc <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj4EEEE19__visit_invoke_implESP_SS_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 800d3bc:	b5b0      	push	{r4, r5, r7, lr}
 800d3be:	b082      	sub	sp, #8
 800d3c0:	af00      	add	r7, sp, #0
 800d3c2:	6078      	str	r0, [r7, #4]
 800d3c4:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 800d3c6:	6878      	ldr	r0, [r7, #4]
 800d3c8:	f000 f90f 	bl	800d5ea <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800d3cc:	4604      	mov	r4, r0
 800d3ce:	6838      	ldr	r0, [r7, #0]
 800d3d0:	f000 f916 	bl	800d600 <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800d3d4:	4603      	mov	r3, r0
 800d3d6:	4618      	mov	r0, r3
 800d3d8:	f7ff ffe0 	bl	800d39c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj4EEEE28__element_by_index_or_cookieILj4ESR_EEDcSJ_>
 800d3dc:	4603      	mov	r3, r0
 800d3de:	4619      	mov	r1, r3
 800d3e0:	4620      	mov	r0, r4
 800d3e2:	f000 f9ff 	bl	800d7e4 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_JSC_EENSt15__invoke_resultISK_JDpT0_EE4typeESL_DpOSO_>
		std::forward<_Variants>(__vars))...);
 800d3e6:	462b      	mov	r3, r5
      }
 800d3e8:	4618      	mov	r0, r3
 800d3ea:	3708      	adds	r7, #8
 800d3ec:	46bd      	mov	sp, r7
 800d3ee:	bdb0      	pop	{r4, r5, r7, pc}

0800d3f0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj4EEEE17__do_visit_invokeESP_SS_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800d3f0:	b5b0      	push	{r4, r5, r7, lr}
 800d3f2:	b082      	sub	sp, #8
 800d3f4:	af00      	add	r7, sp, #0
 800d3f6:	6078      	str	r0, [r7, #4]
 800d3f8:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 800d3fa:	6878      	ldr	r0, [r7, #4]
 800d3fc:	f000 f8f5 	bl	800d5ea <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800d400:	4604      	mov	r4, r0
 800d402:	6838      	ldr	r0, [r7, #0]
 800d404:	f000 f8fc 	bl	800d600 <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800d408:	4603      	mov	r3, r0
 800d40a:	4619      	mov	r1, r3
 800d40c:	4620      	mov	r0, r4
 800d40e:	f7ff ffd5 	bl	800d3bc <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj4EEEE19__visit_invoke_implESP_SS_>
				   std::forward<_Variants>(__vars)...);
 800d412:	462b      	mov	r3, r5
      }
 800d414:	4618      	mov	r0, r3
 800d416:	3708      	adds	r7, #8
 800d418:	46bd      	mov	sp, r7
 800d41a:	bdb0      	pop	{r4, r5, r7, pc}

0800d41c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj4EEEE14__visit_invokeESP_SS_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800d41c:	b5b0      	push	{r4, r5, r7, lr}
 800d41e:	b082      	sub	sp, #8
 800d420:	af00      	add	r7, sp, #0
 800d422:	6078      	str	r0, [r7, #4]
 800d424:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 800d426:	6878      	ldr	r0, [r7, #4]
 800d428:	f000 f8df 	bl	800d5ea <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800d42c:	4604      	mov	r4, r0
 800d42e:	6838      	ldr	r0, [r7, #0]
 800d430:	f000 f8e6 	bl	800d600 <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800d434:	4603      	mov	r3, r0
 800d436:	4619      	mov	r1, r3
 800d438:	4620      	mov	r0, r4
 800d43a:	f7ff ffd9 	bl	800d3f0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj4EEEE17__do_visit_invokeESP_SS_>
				   std::forward<_Variants>(__vars)...);
 800d43e:	462b      	mov	r3, r5
      }
 800d440:	4618      	mov	r0, r3
 800d442:	3708      	adds	r7, #8
 800d444:	46bd      	mov	sp, r7
 800d446:	bdb0      	pop	{r4, r5, r7, pc}

0800d448 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS0_15_Move_ctor_baseILb0EJifbS9_SD_EEESF_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbS9_SD_EEEJLj5EEE9_M_accessIJEEERKST_jDpT_>:
	_M_access(size_t __first_index, _Args... __rest_indices) const
 800d448:	b580      	push	{r7, lr}
 800d44a:	b082      	sub	sp, #8
 800d44c:	af00      	add	r7, sp, #0
 800d44e:	6078      	str	r0, [r7, #4]
 800d450:	6039      	str	r1, [r7, #0]
	    ._M_access(__rest_indices...);
 800d452:	683b      	ldr	r3, [r7, #0]
 800d454:	009b      	lsls	r3, r3, #2
 800d456:	687a      	ldr	r2, [r7, #4]
 800d458:	4413      	add	r3, r2
 800d45a:	4618      	mov	r0, r3
 800d45c:	f000 f9d9 	bl	800d812 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS0_15_Move_ctor_baseILb0EJifbS9_SD_EEESF_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbS9_SD_EEEJEE9_M_accessEv>
 800d460:	4603      	mov	r3, r0
	}
 800d462:	4618      	mov	r0, r3
 800d464:	3708      	adds	r7, #8
 800d466:	46bd      	mov	sp, r7
 800d468:	bd80      	pop	{r7, pc}
	...

0800d46c <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_JSt7variantIJifbS8_SC_EEEEDcSJ_DpOT2_>:
    __do_visit(_Visitor&& __visitor, _Variants&&... __variants)
 800d46c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d46e:	b085      	sub	sp, #20
 800d470:	af00      	add	r7, sp, #0
 800d472:	6078      	str	r0, [r7, #4]
 800d474:	6039      	str	r1, [r7, #0]
      constexpr auto& __vtable = __detail::__variant::__gen_vtable<
 800d476:	4b0f      	ldr	r3, [pc, #60]	; (800d4b4 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_JSt7variantIJifbS8_SC_EEEEDcSJ_DpOT2_+0x48>)
 800d478:	60fb      	str	r3, [r7, #12]
      auto __func_ptr = __vtable._M_access(__variants.index()...);
 800d47a:	6838      	ldr	r0, [r7, #0]
 800d47c:	f7f5 f8b7 	bl	80025ee <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv>
 800d480:	4603      	mov	r3, r0
 800d482:	4619      	mov	r1, r3
 800d484:	68f8      	ldr	r0, [r7, #12]
 800d486:	f7ff ffdf 	bl	800d448 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS0_15_Move_ctor_baseILb0EJifbS9_SD_EEESF_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbS9_SD_EEEJLj5EEE9_M_accessIJEEERKST_jDpT_>
 800d48a:	4603      	mov	r3, r0
 800d48c:	681b      	ldr	r3, [r3, #0]
 800d48e:	60bb      	str	r3, [r7, #8]
      return (*__func_ptr)(std::forward<_Visitor>(__visitor),
 800d490:	68bc      	ldr	r4, [r7, #8]
 800d492:	6878      	ldr	r0, [r7, #4]
 800d494:	f000 f9c8 	bl	800d828 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800d498:	4605      	mov	r5, r0
 800d49a:	6838      	ldr	r0, [r7, #0]
 800d49c:	f000 f8bb 	bl	800d616 <_ZSt7forwardISt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISC_E4typeE>
 800d4a0:	4603      	mov	r3, r0
 800d4a2:	4619      	mov	r1, r3
 800d4a4:	4628      	mov	r0, r5
 800d4a6:	47a0      	blx	r4
			   std::forward<_Variants>(__variants)...);
 800d4a8:	4633      	mov	r3, r6
    }
 800d4aa:	4618      	mov	r0, r3
 800d4ac:	3714      	adds	r7, #20
 800d4ae:	46bd      	mov	sp, r7
 800d4b0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d4b2:	bf00      	nop
 800d4b4:	0802a1b0 	.word	0x0802a1b0

0800d4b8 <_ZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Move_ctor_baseILb0EJifbS7_SB_EEESD_EEvOT0_OT1_>:
    void __variant_construct(_Tp&& __lhs, _Up&& __rhs)
 800d4b8:	b580      	push	{r7, lr}
 800d4ba:	b084      	sub	sp, #16
 800d4bc:	af00      	add	r7, sp, #0
 800d4be:	6078      	str	r0, [r7, #4]
 800d4c0:	6039      	str	r1, [r7, #0]
      __lhs._M_index = __rhs._M_index;
 800d4c2:	683b      	ldr	r3, [r7, #0]
 800d4c4:	7e1a      	ldrb	r2, [r3, #24]
 800d4c6:	687b      	ldr	r3, [r7, #4]
 800d4c8:	761a      	strb	r2, [r3, #24]
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 800d4ca:	687b      	ldr	r3, [r7, #4]
 800d4cc:	60fb      	str	r3, [r7, #12]
 800d4ce:	6838      	ldr	r0, [r7, #0]
 800d4d0:	f000 f880 	bl	800d5d4 <_ZSt7forwardINSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800d4d4:	4603      	mov	r3, r0
 800d4d6:	4618      	mov	r0, r3
 800d4d8:	f7ff fc9f 	bl	800ce1a <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEENSt8__detail9__variant15_Move_ctor_baseILb0EJifbS5_S9_EEEEDcOT0_>
 800d4dc:	4602      	mov	r2, r0
 800d4de:	f107 030c 	add.w	r3, r7, #12
 800d4e2:	4611      	mov	r1, r2
 800d4e4:	4618      	mov	r0, r3
 800d4e6:	f7ff ffc1 	bl	800d46c <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_JSt7variantIJifbS8_SC_EEEEDcSJ_DpOT2_>
    }
 800d4ea:	bf00      	nop
 800d4ec:	3710      	adds	r7, #16
 800d4ee:	46bd      	mov	sp, r7
 800d4f0:	bd80      	pop	{r7, pc}
	...

0800d4f4 <_ZSt3getILj1EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
    get(variant<_Types...>& __v)
 800d4f4:	b580      	push	{r7, lr}
 800d4f6:	b082      	sub	sp, #8
 800d4f8:	af00      	add	r7, sp, #0
 800d4fa:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 800d4fc:	6878      	ldr	r0, [r7, #4]
 800d4fe:	f7fc fe0a 	bl	800a116 <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 800d502:	4603      	mov	r3, r0
 800d504:	2b01      	cmp	r3, #1
 800d506:	bf14      	ite	ne
 800d508:	2301      	movne	r3, #1
 800d50a:	2300      	moveq	r3, #0
 800d50c:	b2db      	uxtb	r3, r3
 800d50e:	2b00      	cmp	r3, #0
 800d510:	d002      	beq.n	800d518 <_ZSt3getILj1EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 800d512:	4805      	ldr	r0, [pc, #20]	; (800d528 <_ZSt3getILj1EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 800d514:	f7f3 fdad 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 800d518:	6878      	ldr	r0, [r7, #4]
 800d51a:	f7fd fcb9 	bl	800ae90 <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 800d51e:	4603      	mov	r3, r0
    }
 800d520:	4618      	mov	r0, r3
 800d522:	3708      	adds	r7, #8
 800d524:	46bd      	mov	sp, r7
 800d526:	bd80      	pop	{r7, pc}
 800d528:	080295c0 	.word	0x080295c0

0800d52c <_ZSt3getILj2EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
    get(variant<_Types...>& __v)
 800d52c:	b580      	push	{r7, lr}
 800d52e:	b082      	sub	sp, #8
 800d530:	af00      	add	r7, sp, #0
 800d532:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 800d534:	6878      	ldr	r0, [r7, #4]
 800d536:	f7fc fdee 	bl	800a116 <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 800d53a:	4603      	mov	r3, r0
 800d53c:	2b02      	cmp	r3, #2
 800d53e:	bf14      	ite	ne
 800d540:	2301      	movne	r3, #1
 800d542:	2300      	moveq	r3, #0
 800d544:	b2db      	uxtb	r3, r3
 800d546:	2b00      	cmp	r3, #0
 800d548:	d002      	beq.n	800d550 <_ZSt3getILj2EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 800d54a:	4805      	ldr	r0, [pc, #20]	; (800d560 <_ZSt3getILj2EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 800d54c:	f7f3 fd91 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 800d550:	6878      	ldr	r0, [r7, #4]
 800d552:	f7fd fd39 	bl	800afc8 <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 800d556:	4603      	mov	r3, r0
    }
 800d558:	4618      	mov	r0, r3
 800d55a:	3708      	adds	r7, #8
 800d55c:	46bd      	mov	sp, r7
 800d55e:	bd80      	pop	{r7, pc}
 800d560:	080295c0 	.word	0x080295c0

0800d564 <_ZSt3getILj3EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
    get(variant<_Types...>& __v)
 800d564:	b580      	push	{r7, lr}
 800d566:	b082      	sub	sp, #8
 800d568:	af00      	add	r7, sp, #0
 800d56a:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 800d56c:	6878      	ldr	r0, [r7, #4]
 800d56e:	f7fc fdd2 	bl	800a116 <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 800d572:	4603      	mov	r3, r0
 800d574:	2b03      	cmp	r3, #3
 800d576:	bf14      	ite	ne
 800d578:	2301      	movne	r3, #1
 800d57a:	2300      	moveq	r3, #0
 800d57c:	b2db      	uxtb	r3, r3
 800d57e:	2b00      	cmp	r3, #0
 800d580:	d002      	beq.n	800d588 <_ZSt3getILj3EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 800d582:	4805      	ldr	r0, [pc, #20]	; (800d598 <_ZSt3getILj3EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 800d584:	f7f3 fd75 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 800d588:	6878      	ldr	r0, [r7, #4]
 800d58a:	f7fd fdcb 	bl	800b124 <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 800d58e:	4603      	mov	r3, r0
    }
 800d590:	4618      	mov	r0, r3
 800d592:	3708      	adds	r7, #8
 800d594:	46bd      	mov	sp, r7
 800d596:	bd80      	pop	{r7, pc}
 800d598:	080295c0 	.word	0x080295c0

0800d59c <_ZSt3getILj0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
    get(variant<_Types...>& __v)
 800d59c:	b580      	push	{r7, lr}
 800d59e:	b082      	sub	sp, #8
 800d5a0:	af00      	add	r7, sp, #0
 800d5a2:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 800d5a4:	6878      	ldr	r0, [r7, #4]
 800d5a6:	f7fc fdb6 	bl	800a116 <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 800d5aa:	4603      	mov	r3, r0
 800d5ac:	2b00      	cmp	r3, #0
 800d5ae:	bf14      	ite	ne
 800d5b0:	2301      	movne	r3, #1
 800d5b2:	2300      	moveq	r3, #0
 800d5b4:	b2db      	uxtb	r3, r3
 800d5b6:	2b00      	cmp	r3, #0
 800d5b8:	d002      	beq.n	800d5c0 <_ZSt3getILj0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 800d5ba:	4805      	ldr	r0, [pc, #20]	; (800d5d0 <_ZSt3getILj0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 800d5bc:	f7f3 fd59 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 800d5c0:	6878      	ldr	r0, [r7, #4]
 800d5c2:	f7fd fbdb 	bl	800ad7c <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 800d5c6:	4603      	mov	r3, r0
    }
 800d5c8:	4618      	mov	r0, r3
 800d5ca:	3708      	adds	r7, #8
 800d5cc:	46bd      	mov	sp, r7
 800d5ce:	bd80      	pop	{r7, pc}
 800d5d0:	080295c0 	.word	0x080295c0

0800d5d4 <_ZSt7forwardINSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISE_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800d5d4:	b480      	push	{r7}
 800d5d6:	b083      	sub	sp, #12
 800d5d8:	af00      	add	r7, sp, #0
 800d5da:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800d5dc:	687b      	ldr	r3, [r7, #4]
 800d5de:	4618      	mov	r0, r3
 800d5e0:	370c      	adds	r7, #12
 800d5e2:	46bd      	mov	sp, r7
 800d5e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d5e8:	4770      	bx	lr

0800d5ea <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800d5ea:	b480      	push	{r7}
 800d5ec:	b083      	sub	sp, #12
 800d5ee:	af00      	add	r7, sp, #0
 800d5f0:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800d5f2:	687b      	ldr	r3, [r7, #4]
 800d5f4:	4618      	mov	r0, r3
 800d5f6:	370c      	adds	r7, #12
 800d5f8:	46bd      	mov	sp, r7
 800d5fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d5fe:	4770      	bx	lr

0800d600 <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800d600:	b480      	push	{r7}
 800d602:	b083      	sub	sp, #12
 800d604:	af00      	add	r7, sp, #0
 800d606:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800d608:	687b      	ldr	r3, [r7, #4]
 800d60a:	4618      	mov	r0, r3
 800d60c:	370c      	adds	r7, #12
 800d60e:	46bd      	mov	sp, r7
 800d610:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d614:	4770      	bx	lr

0800d616 <_ZSt7forwardISt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISC_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800d616:	b480      	push	{r7}
 800d618:	b083      	sub	sp, #12
 800d61a:	af00      	add	r7, sp, #0
 800d61c:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800d61e:	687b      	ldr	r3, [r7, #4]
 800d620:	4618      	mov	r0, r3
 800d622:	370c      	adds	r7, #12
 800d624:	46bd      	mov	sp, r7
 800d626:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d62a:	4770      	bx	lr

0800d62c <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISE_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800d62c:	b480      	push	{r7}
 800d62e:	b083      	sub	sp, #12
 800d630:	af00      	add	r7, sp, #0
 800d632:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800d634:	687b      	ldr	r3, [r7, #4]
 800d636:	4618      	mov	r0, r3
 800d638:	370c      	adds	r7, #12
 800d63a:	46bd      	mov	sp, r7
 800d63c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d640:	4770      	bx	lr

0800d642 <_ZNOSt8__detail9__variant14_UninitializedIiLb1EE6_M_getEv>:
      constexpr _Type&& _M_get() && noexcept
 800d642:	b580      	push	{r7, lr}
 800d644:	b082      	sub	sp, #8
 800d646:	af00      	add	r7, sp, #0
 800d648:	6078      	str	r0, [r7, #4]
      { return std::move(_M_storage); }
 800d64a:	687b      	ldr	r3, [r7, #4]
 800d64c:	4618      	mov	r0, r3
 800d64e:	f7f9 fd52 	bl	80070f6 <_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_>
 800d652:	4603      	mov	r3, r0
 800d654:	4618      	mov	r0, r3
 800d656:	3708      	adds	r7, #8
 800d658:	46bd      	mov	sp, r7
 800d65a:	bd80      	pop	{r7, pc}

0800d65c <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_JiEENSt15__invoke_resultISK_JDpT0_EE4typeESL_DpOSO_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 800d65c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d65e:	b083      	sub	sp, #12
 800d660:	af00      	add	r7, sp, #0
 800d662:	6078      	str	r0, [r7, #4]
 800d664:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 800d666:	6878      	ldr	r0, [r7, #4]
 800d668:	f000 f8de 	bl	800d828 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800d66c:	4604      	mov	r4, r0
 800d66e:	6838      	ldr	r0, [r7, #0]
 800d670:	f7fa faaa 	bl	8007bc8 <_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE>
 800d674:	4603      	mov	r3, r0
 800d676:	461a      	mov	r2, r3
 800d678:	4621      	mov	r1, r4
 800d67a:	4628      	mov	r0, r5
 800d67c:	f000 f8df 	bl	800d83e <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS1_15_Move_ctor_baseILb0EJifbS9_SD_EEESF_EEvOT0_OT1_EUlOT_E_JiEESL_St14__invoke_otherSI_DpOT1_>
					std::forward<_Args>(__args)...);
 800d680:	4633      	mov	r3, r6
    }
 800d682:	4618      	mov	r0, r3
 800d684:	370c      	adds	r7, #12
 800d686:	46bd      	mov	sp, r7
 800d688:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800d68a <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISE_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800d68a:	b480      	push	{r7}
 800d68c:	b083      	sub	sp, #12
 800d68e:	af00      	add	r7, sp, #0
 800d690:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800d692:	687b      	ldr	r3, [r7, #4]
 800d694:	4618      	mov	r0, r3
 800d696:	370c      	adds	r7, #12
 800d698:	46bd      	mov	sp, r7
 800d69a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d69e:	4770      	bx	lr

0800d6a0 <_ZNOSt8__detail9__variant14_UninitializedIfLb1EE6_M_getEv>:
      constexpr _Type&& _M_get() && noexcept
 800d6a0:	b580      	push	{r7, lr}
 800d6a2:	b082      	sub	sp, #8
 800d6a4:	af00      	add	r7, sp, #0
 800d6a6:	6078      	str	r0, [r7, #4]
      { return std::move(_M_storage); }
 800d6a8:	687b      	ldr	r3, [r7, #4]
 800d6aa:	4618      	mov	r0, r3
 800d6ac:	f7f9 fd47 	bl	800713e <_ZSt4moveIRfEONSt16remove_referenceIT_E4typeEOS2_>
 800d6b0:	4603      	mov	r3, r0
 800d6b2:	4618      	mov	r0, r3
 800d6b4:	3708      	adds	r7, #8
 800d6b6:	46bd      	mov	sp, r7
 800d6b8:	bd80      	pop	{r7, pc}

0800d6ba <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_JfEENSt15__invoke_resultISK_JDpT0_EE4typeESL_DpOSO_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 800d6ba:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d6bc:	b083      	sub	sp, #12
 800d6be:	af00      	add	r7, sp, #0
 800d6c0:	6078      	str	r0, [r7, #4]
 800d6c2:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 800d6c4:	6878      	ldr	r0, [r7, #4]
 800d6c6:	f000 f8af 	bl	800d828 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800d6ca:	4604      	mov	r4, r0
 800d6cc:	6838      	ldr	r0, [r7, #0]
 800d6ce:	f7fa faa5 	bl	8007c1c <_ZSt7forwardIfEOT_RNSt16remove_referenceIS0_E4typeE>
 800d6d2:	4603      	mov	r3, r0
 800d6d4:	461a      	mov	r2, r3
 800d6d6:	4621      	mov	r1, r4
 800d6d8:	4628      	mov	r0, r5
 800d6da:	f000 f8c7 	bl	800d86c <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS1_15_Move_ctor_baseILb0EJifbS9_SD_EEESF_EEvOT0_OT1_EUlOT_E_JfEESL_St14__invoke_otherSI_DpOT1_>
					std::forward<_Args>(__args)...);
 800d6de:	4633      	mov	r3, r6
    }
 800d6e0:	4618      	mov	r0, r3
 800d6e2:	370c      	adds	r7, #12
 800d6e4:	46bd      	mov	sp, r7
 800d6e6:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800d6e8 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISE_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800d6e8:	b480      	push	{r7}
 800d6ea:	b083      	sub	sp, #12
 800d6ec:	af00      	add	r7, sp, #0
 800d6ee:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800d6f0:	687b      	ldr	r3, [r7, #4]
 800d6f2:	4618      	mov	r0, r3
 800d6f4:	370c      	adds	r7, #12
 800d6f6:	46bd      	mov	sp, r7
 800d6f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d6fc:	4770      	bx	lr

0800d6fe <_ZNOSt8__detail9__variant14_UninitializedIbLb1EE6_M_getEv>:
      constexpr _Type&& _M_get() && noexcept
 800d6fe:	b580      	push	{r7, lr}
 800d700:	b082      	sub	sp, #8
 800d702:	af00      	add	r7, sp, #0
 800d704:	6078      	str	r0, [r7, #4]
      { return std::move(_M_storage); }
 800d706:	687b      	ldr	r3, [r7, #4]
 800d708:	4618      	mov	r0, r3
 800d70a:	f7f9 fd3c 	bl	8007186 <_ZSt4moveIRbEONSt16remove_referenceIT_E4typeEOS2_>
 800d70e:	4603      	mov	r3, r0
 800d710:	4618      	mov	r0, r3
 800d712:	3708      	adds	r7, #8
 800d714:	46bd      	mov	sp, r7
 800d716:	bd80      	pop	{r7, pc}

0800d718 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_JbEENSt15__invoke_resultISK_JDpT0_EE4typeESL_DpOSO_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 800d718:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d71a:	b083      	sub	sp, #12
 800d71c:	af00      	add	r7, sp, #0
 800d71e:	6078      	str	r0, [r7, #4]
 800d720:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 800d722:	6878      	ldr	r0, [r7, #4]
 800d724:	f000 f880 	bl	800d828 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800d728:	4604      	mov	r4, r0
 800d72a:	6838      	ldr	r0, [r7, #0]
 800d72c:	f7fa fabc 	bl	8007ca8 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
 800d730:	4603      	mov	r3, r0
 800d732:	461a      	mov	r2, r3
 800d734:	4621      	mov	r1, r4
 800d736:	4628      	mov	r0, r5
 800d738:	f000 f8af 	bl	800d89a <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS1_15_Move_ctor_baseILb0EJifbS9_SD_EEESF_EEvOT0_OT1_EUlOT_E_JbEESL_St14__invoke_otherSI_DpOT1_>
					std::forward<_Args>(__args)...);
 800d73c:	4633      	mov	r3, r6
    }
 800d73e:	4618      	mov	r0, r3
 800d740:	370c      	adds	r7, #12
 800d742:	46bd      	mov	sp, r7
 800d744:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800d746 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISE_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800d746:	b480      	push	{r7}
 800d748:	b083      	sub	sp, #12
 800d74a:	af00      	add	r7, sp, #0
 800d74c:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800d74e:	687b      	ldr	r3, [r7, #4]
 800d750:	4618      	mov	r0, r3
 800d752:	370c      	adds	r7, #12
 800d754:	46bd      	mov	sp, r7
 800d756:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d75a:	4770      	bx	lr

0800d75c <_ZNOSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE6_M_getEv>:
      _Type&& _M_get() && noexcept
 800d75c:	b580      	push	{r7, lr}
 800d75e:	b082      	sub	sp, #8
 800d760:	af00      	add	r7, sp, #0
 800d762:	6078      	str	r0, [r7, #4]
      { return std::move(*_M_storage._M_ptr()); }
 800d764:	687b      	ldr	r3, [r7, #4]
 800d766:	4618      	mov	r0, r3
 800d768:	f7f7 fb0c 	bl	8004d84 <_ZN9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE6_M_ptrEv>
 800d76c:	4603      	mov	r3, r0
 800d76e:	4618      	mov	r0, r3
 800d770:	f7f9 fd2d 	bl	80071ce <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
 800d774:	4603      	mov	r3, r0
 800d776:	4618      	mov	r0, r3
 800d778:	3708      	adds	r7, #8
 800d77a:	46bd      	mov	sp, r7
 800d77c:	bd80      	pop	{r7, pc}

0800d77e <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_JS8_EENSt15__invoke_resultISK_JDpT0_EE4typeESL_DpOSO_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 800d77e:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d780:	b083      	sub	sp, #12
 800d782:	af00      	add	r7, sp, #0
 800d784:	6078      	str	r0, [r7, #4]
 800d786:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 800d788:	6878      	ldr	r0, [r7, #4]
 800d78a:	f000 f84d 	bl	800d828 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800d78e:	4604      	mov	r4, r0
 800d790:	6838      	ldr	r0, [r7, #0]
 800d792:	f7fa fad1 	bl	8007d38 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 800d796:	4603      	mov	r3, r0
 800d798:	461a      	mov	r2, r3
 800d79a:	4621      	mov	r1, r4
 800d79c:	4628      	mov	r0, r5
 800d79e:	f000 f893 	bl	800d8c8 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS1_15_Move_ctor_baseILb0EJifbS9_SD_EEESF_EEvOT0_OT1_EUlOT_E_JS9_EESL_St14__invoke_otherSI_DpOT1_>
					std::forward<_Args>(__args)...);
 800d7a2:	4633      	mov	r3, r6
    }
 800d7a4:	4618      	mov	r0, r3
 800d7a6:	370c      	adds	r7, #12
 800d7a8:	46bd      	mov	sp, r7
 800d7aa:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800d7ac <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJSt6vectorI6SymbolSaIS4_EEEEEEOT_RNSt16remove_referenceIS8_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800d7ac:	b480      	push	{r7}
 800d7ae:	b083      	sub	sp, #12
 800d7b0:	af00      	add	r7, sp, #0
 800d7b2:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800d7b4:	687b      	ldr	r3, [r7, #4]
 800d7b6:	4618      	mov	r0, r3
 800d7b8:	370c      	adds	r7, #12
 800d7ba:	46bd      	mov	sp, r7
 800d7bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d7c0:	4770      	bx	lr

0800d7c2 <_ZNOSt8__detail9__variant14_UninitializedISt6vectorI6SymbolSaIS3_EELb0EE6_M_getEv>:
      _Type&& _M_get() && noexcept
 800d7c2:	b580      	push	{r7, lr}
 800d7c4:	b082      	sub	sp, #8
 800d7c6:	af00      	add	r7, sp, #0
 800d7c8:	6078      	str	r0, [r7, #4]
      { return std::move(*_M_storage._M_ptr()); }
 800d7ca:	687b      	ldr	r3, [r7, #4]
 800d7cc:	4618      	mov	r0, r3
 800d7ce:	f7f7 fb19 	bl	8004e04 <_ZN9__gnu_cxx16__aligned_membufISt6vectorI6SymbolSaIS2_EEE6_M_ptrEv>
 800d7d2:	4603      	mov	r3, r0
 800d7d4:	4618      	mov	r0, r3
 800d7d6:	f7f9 fd1e 	bl	8007216 <_ZSt4moveIRSt6vectorI6SymbolSaIS1_EEEONSt16remove_referenceIT_E4typeEOS6_>
 800d7da:	4603      	mov	r3, r0
 800d7dc:	4618      	mov	r0, r3
 800d7de:	3708      	adds	r7, #8
 800d7e0:	46bd      	mov	sp, r7
 800d7e2:	bd80      	pop	{r7, pc}

0800d7e4 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_JSC_EENSt15__invoke_resultISK_JDpT0_EE4typeESL_DpOSO_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 800d7e4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d7e6:	b083      	sub	sp, #12
 800d7e8:	af00      	add	r7, sp, #0
 800d7ea:	6078      	str	r0, [r7, #4]
 800d7ec:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 800d7ee:	6878      	ldr	r0, [r7, #4]
 800d7f0:	f000 f81a 	bl	800d828 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800d7f4:	4604      	mov	r4, r0
 800d7f6:	6838      	ldr	r0, [r7, #0]
 800d7f8:	f7fa fb24 	bl	8007e44 <_ZSt7forwardISt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS4_E4typeE>
 800d7fc:	4603      	mov	r3, r0
 800d7fe:	461a      	mov	r2, r3
 800d800:	4621      	mov	r1, r4
 800d802:	4628      	mov	r0, r5
 800d804:	f000 f877 	bl	800d8f6 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS1_15_Move_ctor_baseILb0EJifbS9_SD_EEESF_EEvOT0_OT1_EUlOT_E_JSD_EESL_St14__invoke_otherSI_DpOT1_>
					std::forward<_Args>(__args)...);
 800d808:	4633      	mov	r3, r6
    }
 800d80a:	4618      	mov	r0, r3
 800d80c:	370c      	adds	r7, #12
 800d80e:	46bd      	mov	sp, r7
 800d810:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800d812 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS0_15_Move_ctor_baseILb0EJifbS9_SD_EEESF_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbS9_SD_EEEJEE9_M_accessEv>:
      _M_access() const
 800d812:	b480      	push	{r7}
 800d814:	b083      	sub	sp, #12
 800d816:	af00      	add	r7, sp, #0
 800d818:	6078      	str	r0, [r7, #4]
      { return _M_data; }
 800d81a:	687b      	ldr	r3, [r7, #4]
 800d81c:	4618      	mov	r0, r3
 800d81e:	370c      	adds	r7, #12
 800d820:	46bd      	mov	sp, r7
 800d822:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d826:	4770      	bx	lr

0800d828 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800d828:	b480      	push	{r7}
 800d82a:	b083      	sub	sp, #12
 800d82c:	af00      	add	r7, sp, #0
 800d82e:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800d830:	687b      	ldr	r3, [r7, #4]
 800d832:	4618      	mov	r0, r3
 800d834:	370c      	adds	r7, #12
 800d836:	46bd      	mov	sp, r7
 800d838:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d83c:	4770      	bx	lr

0800d83e <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS1_15_Move_ctor_baseILb0EJifbS9_SD_EEESF_EEvOT0_OT1_EUlOT_E_JiEESL_St14__invoke_otherSI_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800d83e:	b5b0      	push	{r4, r5, r7, lr}
 800d840:	b084      	sub	sp, #16
 800d842:	af00      	add	r7, sp, #0
 800d844:	7338      	strb	r0, [r7, #12]
 800d846:	60b9      	str	r1, [r7, #8]
 800d848:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800d84a:	68b8      	ldr	r0, [r7, #8]
 800d84c:	f7ff ffec 	bl	800d828 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800d850:	4604      	mov	r4, r0
 800d852:	6878      	ldr	r0, [r7, #4]
 800d854:	f7fa f9b8 	bl	8007bc8 <_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE>
 800d858:	4603      	mov	r3, r0
 800d85a:	4619      	mov	r1, r3
 800d85c:	4620      	mov	r0, r4
 800d85e:	f000 f861 	bl	800d924 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Move_ctor_baseILb0EJifbS7_SB_EEESD_EEvOT0_OT1_ENUlOT_E_clIiEENS0_16__variant_cookieESK_>
 800d862:	462b      	mov	r3, r5
 800d864:	4618      	mov	r0, r3
 800d866:	3710      	adds	r7, #16
 800d868:	46bd      	mov	sp, r7
 800d86a:	bdb0      	pop	{r4, r5, r7, pc}

0800d86c <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS1_15_Move_ctor_baseILb0EJifbS9_SD_EEESF_EEvOT0_OT1_EUlOT_E_JfEESL_St14__invoke_otherSI_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800d86c:	b5b0      	push	{r4, r5, r7, lr}
 800d86e:	b084      	sub	sp, #16
 800d870:	af00      	add	r7, sp, #0
 800d872:	7338      	strb	r0, [r7, #12]
 800d874:	60b9      	str	r1, [r7, #8]
 800d876:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800d878:	68b8      	ldr	r0, [r7, #8]
 800d87a:	f7ff ffd5 	bl	800d828 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800d87e:	4604      	mov	r4, r0
 800d880:	6878      	ldr	r0, [r7, #4]
 800d882:	f7fa f9cb 	bl	8007c1c <_ZSt7forwardIfEOT_RNSt16remove_referenceIS0_E4typeE>
 800d886:	4603      	mov	r3, r0
 800d888:	4619      	mov	r1, r3
 800d88a:	4620      	mov	r0, r4
 800d88c:	f000 f862 	bl	800d954 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Move_ctor_baseILb0EJifbS7_SB_EEESD_EEvOT0_OT1_ENUlOT_E_clIfEENS0_16__variant_cookieESK_>
 800d890:	462b      	mov	r3, r5
 800d892:	4618      	mov	r0, r3
 800d894:	3710      	adds	r7, #16
 800d896:	46bd      	mov	sp, r7
 800d898:	bdb0      	pop	{r4, r5, r7, pc}

0800d89a <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS1_15_Move_ctor_baseILb0EJifbS9_SD_EEESF_EEvOT0_OT1_EUlOT_E_JbEESL_St14__invoke_otherSI_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800d89a:	b5b0      	push	{r4, r5, r7, lr}
 800d89c:	b084      	sub	sp, #16
 800d89e:	af00      	add	r7, sp, #0
 800d8a0:	7338      	strb	r0, [r7, #12]
 800d8a2:	60b9      	str	r1, [r7, #8]
 800d8a4:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800d8a6:	68b8      	ldr	r0, [r7, #8]
 800d8a8:	f7ff ffbe 	bl	800d828 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800d8ac:	4604      	mov	r4, r0
 800d8ae:	6878      	ldr	r0, [r7, #4]
 800d8b0:	f7fa f9fa 	bl	8007ca8 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
 800d8b4:	4603      	mov	r3, r0
 800d8b6:	4619      	mov	r1, r3
 800d8b8:	4620      	mov	r0, r4
 800d8ba:	f000 f863 	bl	800d984 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Move_ctor_baseILb0EJifbS7_SB_EEESD_EEvOT0_OT1_ENUlOT_E_clIbEENS0_16__variant_cookieESK_>
 800d8be:	462b      	mov	r3, r5
 800d8c0:	4618      	mov	r0, r3
 800d8c2:	3710      	adds	r7, #16
 800d8c4:	46bd      	mov	sp, r7
 800d8c6:	bdb0      	pop	{r4, r5, r7, pc}

0800d8c8 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS1_15_Move_ctor_baseILb0EJifbS9_SD_EEESF_EEvOT0_OT1_EUlOT_E_JS9_EESL_St14__invoke_otherSI_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800d8c8:	b5b0      	push	{r4, r5, r7, lr}
 800d8ca:	b084      	sub	sp, #16
 800d8cc:	af00      	add	r7, sp, #0
 800d8ce:	7338      	strb	r0, [r7, #12]
 800d8d0:	60b9      	str	r1, [r7, #8]
 800d8d2:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800d8d4:	68b8      	ldr	r0, [r7, #8]
 800d8d6:	f7ff ffa7 	bl	800d828 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800d8da:	4604      	mov	r4, r0
 800d8dc:	6878      	ldr	r0, [r7, #4]
 800d8de:	f7fa fa2b 	bl	8007d38 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 800d8e2:	4603      	mov	r3, r0
 800d8e4:	4619      	mov	r1, r3
 800d8e6:	4620      	mov	r0, r4
 800d8e8:	f000 f864 	bl	800d9b4 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Move_ctor_baseILb0EJifbS7_SB_EEESD_EEvOT0_OT1_ENUlOT_E_clIS7_EENS0_16__variant_cookieESK_>
 800d8ec:	462b      	mov	r3, r5
 800d8ee:	4618      	mov	r0, r3
 800d8f0:	3710      	adds	r7, #16
 800d8f2:	46bd      	mov	sp, r7
 800d8f4:	bdb0      	pop	{r4, r5, r7, pc}

0800d8f6 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS1_15_Move_ctor_baseILb0EJifbS9_SD_EEESF_EEvOT0_OT1_EUlOT_E_JSD_EESL_St14__invoke_otherSI_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800d8f6:	b5b0      	push	{r4, r5, r7, lr}
 800d8f8:	b084      	sub	sp, #16
 800d8fa:	af00      	add	r7, sp, #0
 800d8fc:	7338      	strb	r0, [r7, #12]
 800d8fe:	60b9      	str	r1, [r7, #8]
 800d900:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800d902:	68b8      	ldr	r0, [r7, #8]
 800d904:	f7ff ff90 	bl	800d828 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800d908:	4604      	mov	r4, r0
 800d90a:	6878      	ldr	r0, [r7, #4]
 800d90c:	f7fa fa9a 	bl	8007e44 <_ZSt7forwardISt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS4_E4typeE>
 800d910:	4603      	mov	r3, r0
 800d912:	4619      	mov	r1, r3
 800d914:	4620      	mov	r0, r4
 800d916:	f000 f865 	bl	800d9e4 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Move_ctor_baseILb0EJifbS7_SB_EEESD_EEvOT0_OT1_ENUlOT_E_clISB_EENS0_16__variant_cookieESK_>
 800d91a:	462b      	mov	r3, r5
 800d91c:	4618      	mov	r0, r3
 800d91e:	3710      	adds	r7, #16
 800d920:	46bd      	mov	sp, r7
 800d922:	bdb0      	pop	{r4, r5, r7, pc}

0800d924 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Move_ctor_baseILb0EJifbS7_SB_EEESD_EEvOT0_OT1_ENUlOT_E_clIiEENS0_16__variant_cookieESK_>:
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 800d924:	b5b0      	push	{r4, r5, r7, lr}
 800d926:	b082      	sub	sp, #8
 800d928:	af00      	add	r7, sp, #0
 800d92a:	6078      	str	r0, [r7, #4]
 800d92c:	6039      	str	r1, [r7, #0]
 800d92e:	687b      	ldr	r3, [r7, #4]
 800d930:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 800d932:	4618      	mov	r0, r3
 800d934:	f000 f86e 	bl	800da14 <_ZSt7forwardIRNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800d938:	4604      	mov	r4, r0
 800d93a:	6838      	ldr	r0, [r7, #0]
 800d93c:	f000 f875 	bl	800da2a <_ZSt7forwardIOiEOT_RNSt16remove_referenceIS1_E4typeE>
 800d940:	4603      	mov	r3, r0
 800d942:	4619      	mov	r1, r3
 800d944:	4620      	mov	r0, r4
 800d946:	f000 f87b 	bl	800da40 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEiEEvOT_OT0_>
	  return {};
 800d94a:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 800d94c:	4618      	mov	r0, r3
 800d94e:	3708      	adds	r7, #8
 800d950:	46bd      	mov	sp, r7
 800d952:	bdb0      	pop	{r4, r5, r7, pc}

0800d954 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Move_ctor_baseILb0EJifbS7_SB_EEESD_EEvOT0_OT1_ENUlOT_E_clIfEENS0_16__variant_cookieESK_>:
 800d954:	b5b0      	push	{r4, r5, r7, lr}
 800d956:	b082      	sub	sp, #8
 800d958:	af00      	add	r7, sp, #0
 800d95a:	6078      	str	r0, [r7, #4]
 800d95c:	6039      	str	r1, [r7, #0]
 800d95e:	687b      	ldr	r3, [r7, #4]
 800d960:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 800d962:	4618      	mov	r0, r3
 800d964:	f000 f856 	bl	800da14 <_ZSt7forwardIRNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800d968:	4604      	mov	r4, r0
 800d96a:	6838      	ldr	r0, [r7, #0]
 800d96c:	f000 f882 	bl	800da74 <_ZSt7forwardIOfEOT_RNSt16remove_referenceIS1_E4typeE>
 800d970:	4603      	mov	r3, r0
 800d972:	4619      	mov	r1, r3
 800d974:	4620      	mov	r0, r4
 800d976:	f000 f888 	bl	800da8a <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEfEEvOT_OT0_>
	  return {};
 800d97a:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 800d97c:	4618      	mov	r0, r3
 800d97e:	3708      	adds	r7, #8
 800d980:	46bd      	mov	sp, r7
 800d982:	bdb0      	pop	{r4, r5, r7, pc}

0800d984 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Move_ctor_baseILb0EJifbS7_SB_EEESD_EEvOT0_OT1_ENUlOT_E_clIbEENS0_16__variant_cookieESK_>:
 800d984:	b5b0      	push	{r4, r5, r7, lr}
 800d986:	b082      	sub	sp, #8
 800d988:	af00      	add	r7, sp, #0
 800d98a:	6078      	str	r0, [r7, #4]
 800d98c:	6039      	str	r1, [r7, #0]
 800d98e:	687b      	ldr	r3, [r7, #4]
 800d990:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 800d992:	4618      	mov	r0, r3
 800d994:	f000 f83e 	bl	800da14 <_ZSt7forwardIRNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800d998:	4604      	mov	r4, r0
 800d99a:	6838      	ldr	r0, [r7, #0]
 800d99c:	f000 f88f 	bl	800dabe <_ZSt7forwardIObEOT_RNSt16remove_referenceIS1_E4typeE>
 800d9a0:	4603      	mov	r3, r0
 800d9a2:	4619      	mov	r1, r3
 800d9a4:	4620      	mov	r0, r4
 800d9a6:	f000 f895 	bl	800dad4 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEbEEvOT_OT0_>
	  return {};
 800d9aa:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 800d9ac:	4618      	mov	r0, r3
 800d9ae:	3708      	adds	r7, #8
 800d9b0:	46bd      	mov	sp, r7
 800d9b2:	bdb0      	pop	{r4, r5, r7, pc}

0800d9b4 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Move_ctor_baseILb0EJifbS7_SB_EEESD_EEvOT0_OT1_ENUlOT_E_clIS7_EENS0_16__variant_cookieESK_>:
 800d9b4:	b5b0      	push	{r4, r5, r7, lr}
 800d9b6:	b082      	sub	sp, #8
 800d9b8:	af00      	add	r7, sp, #0
 800d9ba:	6078      	str	r0, [r7, #4]
 800d9bc:	6039      	str	r1, [r7, #0]
 800d9be:	687b      	ldr	r3, [r7, #4]
 800d9c0:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 800d9c2:	4618      	mov	r0, r3
 800d9c4:	f000 f826 	bl	800da14 <_ZSt7forwardIRNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800d9c8:	4604      	mov	r4, r0
 800d9ca:	6838      	ldr	r0, [r7, #0]
 800d9cc:	f000 f89d 	bl	800db0a <_ZSt7forwardIONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 800d9d0:	4603      	mov	r3, r0
 800d9d2:	4619      	mov	r1, r3
 800d9d4:	4620      	mov	r0, r4
 800d9d6:	f000 f8a3 	bl	800db20 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEES8_EEvOT_OT0_>
	  return {};
 800d9da:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 800d9dc:	4618      	mov	r0, r3
 800d9de:	3708      	adds	r7, #8
 800d9e0:	46bd      	mov	sp, r7
 800d9e2:	bdb0      	pop	{r4, r5, r7, pc}

0800d9e4 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Move_ctor_baseILb0EJifbS7_SB_EEESD_EEvOT0_OT1_ENUlOT_E_clISB_EENS0_16__variant_cookieESK_>:
 800d9e4:	b5b0      	push	{r4, r5, r7, lr}
 800d9e6:	b082      	sub	sp, #8
 800d9e8:	af00      	add	r7, sp, #0
 800d9ea:	6078      	str	r0, [r7, #4]
 800d9ec:	6039      	str	r1, [r7, #0]
 800d9ee:	687b      	ldr	r3, [r7, #4]
 800d9f0:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 800d9f2:	4618      	mov	r0, r3
 800d9f4:	f000 f80e 	bl	800da14 <_ZSt7forwardIRNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800d9f8:	4604      	mov	r4, r0
 800d9fa:	6838      	ldr	r0, [r7, #0]
 800d9fc:	f000 f8ac 	bl	800db58 <_ZSt7forwardIOSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS5_E4typeE>
 800da00:	4603      	mov	r3, r0
 800da02:	4619      	mov	r1, r3
 800da04:	4620      	mov	r0, r4
 800da06:	f000 f8b2 	bl	800db6e <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEESC_EEvOT_OT0_>
	  return {};
 800da0a:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 800da0c:	4618      	mov	r0, r3
 800da0e:	3708      	adds	r7, #8
 800da10:	46bd      	mov	sp, r7
 800da12:	bdb0      	pop	{r4, r5, r7, pc}

0800da14 <_ZSt7forwardIRNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800da14:	b480      	push	{r7}
 800da16:	b083      	sub	sp, #12
 800da18:	af00      	add	r7, sp, #0
 800da1a:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800da1c:	687b      	ldr	r3, [r7, #4]
 800da1e:	4618      	mov	r0, r3
 800da20:	370c      	adds	r7, #12
 800da22:	46bd      	mov	sp, r7
 800da24:	f85d 7b04 	ldr.w	r7, [sp], #4
 800da28:	4770      	bx	lr

0800da2a <_ZSt7forwardIOiEOT_RNSt16remove_referenceIS1_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800da2a:	b480      	push	{r7}
 800da2c:	b083      	sub	sp, #12
 800da2e:	af00      	add	r7, sp, #0
 800da30:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800da32:	687b      	ldr	r3, [r7, #4]
 800da34:	4618      	mov	r0, r3
 800da36:	370c      	adds	r7, #12
 800da38:	46bd      	mov	sp, r7
 800da3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800da3e:	4770      	bx	lr

0800da40 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEiEEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 800da40:	b590      	push	{r4, r7, lr}
 800da42:	b085      	sub	sp, #20
 800da44:	af00      	add	r7, sp, #0
 800da46:	6078      	str	r0, [r7, #4]
 800da48:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 800da4a:	687b      	ldr	r3, [r7, #4]
 800da4c:	4618      	mov	r0, r3
 800da4e:	f7fa f81d 	bl	8007a8c <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEPT_RSE_>
 800da52:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 800da54:	6838      	ldr	r0, [r7, #0]
 800da56:	f7ff ffe8 	bl	800da2a <_ZSt7forwardIOiEOT_RNSt16remove_referenceIS1_E4typeE>
 800da5a:	4603      	mov	r3, r0
        ::new (__storage)
 800da5c:	681c      	ldr	r4, [r3, #0]
 800da5e:	68fb      	ldr	r3, [r7, #12]
 800da60:	4619      	mov	r1, r3
 800da62:	2004      	movs	r0, #4
 800da64:	f7f3 faf9 	bl	800105a <_ZnwjPv>
 800da68:	4603      	mov	r3, r0
 800da6a:	601c      	str	r4, [r3, #0]
    }
 800da6c:	bf00      	nop
 800da6e:	3714      	adds	r7, #20
 800da70:	46bd      	mov	sp, r7
 800da72:	bd90      	pop	{r4, r7, pc}

0800da74 <_ZSt7forwardIOfEOT_RNSt16remove_referenceIS1_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800da74:	b480      	push	{r7}
 800da76:	b083      	sub	sp, #12
 800da78:	af00      	add	r7, sp, #0
 800da7a:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800da7c:	687b      	ldr	r3, [r7, #4]
 800da7e:	4618      	mov	r0, r3
 800da80:	370c      	adds	r7, #12
 800da82:	46bd      	mov	sp, r7
 800da84:	f85d 7b04 	ldr.w	r7, [sp], #4
 800da88:	4770      	bx	lr

0800da8a <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEfEEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 800da8a:	b590      	push	{r4, r7, lr}
 800da8c:	b085      	sub	sp, #20
 800da8e:	af00      	add	r7, sp, #0
 800da90:	6078      	str	r0, [r7, #4]
 800da92:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 800da94:	687b      	ldr	r3, [r7, #4]
 800da96:	4618      	mov	r0, r3
 800da98:	f7f9 fff8 	bl	8007a8c <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEPT_RSE_>
 800da9c:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 800da9e:	6838      	ldr	r0, [r7, #0]
 800daa0:	f7ff ffe8 	bl	800da74 <_ZSt7forwardIOfEOT_RNSt16remove_referenceIS1_E4typeE>
 800daa4:	4603      	mov	r3, r0
        ::new (__storage)
 800daa6:	681c      	ldr	r4, [r3, #0]
 800daa8:	68fb      	ldr	r3, [r7, #12]
 800daaa:	4619      	mov	r1, r3
 800daac:	2004      	movs	r0, #4
 800daae:	f7f3 fad4 	bl	800105a <_ZnwjPv>
 800dab2:	4603      	mov	r3, r0
 800dab4:	601c      	str	r4, [r3, #0]
    }
 800dab6:	bf00      	nop
 800dab8:	3714      	adds	r7, #20
 800daba:	46bd      	mov	sp, r7
 800dabc:	bd90      	pop	{r4, r7, pc}

0800dabe <_ZSt7forwardIObEOT_RNSt16remove_referenceIS1_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800dabe:	b480      	push	{r7}
 800dac0:	b083      	sub	sp, #12
 800dac2:	af00      	add	r7, sp, #0
 800dac4:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800dac6:	687b      	ldr	r3, [r7, #4]
 800dac8:	4618      	mov	r0, r3
 800daca:	370c      	adds	r7, #12
 800dacc:	46bd      	mov	sp, r7
 800dace:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dad2:	4770      	bx	lr

0800dad4 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEbEEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 800dad4:	b590      	push	{r4, r7, lr}
 800dad6:	b085      	sub	sp, #20
 800dad8:	af00      	add	r7, sp, #0
 800dada:	6078      	str	r0, [r7, #4]
 800dadc:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 800dade:	687b      	ldr	r3, [r7, #4]
 800dae0:	4618      	mov	r0, r3
 800dae2:	f7f9 ffd3 	bl	8007a8c <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEPT_RSE_>
 800dae6:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 800dae8:	6838      	ldr	r0, [r7, #0]
 800daea:	f7ff ffe8 	bl	800dabe <_ZSt7forwardIObEOT_RNSt16remove_referenceIS1_E4typeE>
 800daee:	4603      	mov	r3, r0
        ::new (__storage)
 800daf0:	781c      	ldrb	r4, [r3, #0]
 800daf2:	68fb      	ldr	r3, [r7, #12]
 800daf4:	4619      	mov	r1, r3
 800daf6:	2001      	movs	r0, #1
 800daf8:	f7f3 faaf 	bl	800105a <_ZnwjPv>
 800dafc:	4603      	mov	r3, r0
 800dafe:	4622      	mov	r2, r4
 800db00:	701a      	strb	r2, [r3, #0]
    }
 800db02:	bf00      	nop
 800db04:	3714      	adds	r7, #20
 800db06:	46bd      	mov	sp, r7
 800db08:	bd90      	pop	{r4, r7, pc}

0800db0a <_ZSt7forwardIONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800db0a:	b480      	push	{r7}
 800db0c:	b083      	sub	sp, #12
 800db0e:	af00      	add	r7, sp, #0
 800db10:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800db12:	687b      	ldr	r3, [r7, #4]
 800db14:	4618      	mov	r0, r3
 800db16:	370c      	adds	r7, #12
 800db18:	46bd      	mov	sp, r7
 800db1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800db1e:	4770      	bx	lr

0800db20 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEES8_EEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 800db20:	b590      	push	{r4, r7, lr}
 800db22:	b085      	sub	sp, #20
 800db24:	af00      	add	r7, sp, #0
 800db26:	6078      	str	r0, [r7, #4]
 800db28:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 800db2a:	687b      	ldr	r3, [r7, #4]
 800db2c:	4618      	mov	r0, r3
 800db2e:	f7f9 ffad 	bl	8007a8c <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEPT_RSE_>
 800db32:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 800db34:	6838      	ldr	r0, [r7, #0]
 800db36:	f7ff ffe8 	bl	800db0a <_ZSt7forwardIONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 800db3a:	4604      	mov	r4, r0
        ::new (__storage)
 800db3c:	68fb      	ldr	r3, [r7, #12]
 800db3e:	4619      	mov	r1, r3
 800db40:	2018      	movs	r0, #24
 800db42:	f7f3 fa8a 	bl	800105a <_ZnwjPv>
 800db46:	4603      	mov	r3, r0
 800db48:	4621      	mov	r1, r4
 800db4a:	4618      	mov	r0, r3
 800db4c:	f015 ff5b 	bl	8023a06 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_>
    }
 800db50:	bf00      	nop
 800db52:	3714      	adds	r7, #20
 800db54:	46bd      	mov	sp, r7
 800db56:	bd90      	pop	{r4, r7, pc}

0800db58 <_ZSt7forwardIOSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS5_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800db58:	b480      	push	{r7}
 800db5a:	b083      	sub	sp, #12
 800db5c:	af00      	add	r7, sp, #0
 800db5e:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800db60:	687b      	ldr	r3, [r7, #4]
 800db62:	4618      	mov	r0, r3
 800db64:	370c      	adds	r7, #12
 800db66:	46bd      	mov	sp, r7
 800db68:	f85d 7b04 	ldr.w	r7, [sp], #4
 800db6c:	4770      	bx	lr

0800db6e <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEESC_EEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 800db6e:	b590      	push	{r4, r7, lr}
 800db70:	b085      	sub	sp, #20
 800db72:	af00      	add	r7, sp, #0
 800db74:	6078      	str	r0, [r7, #4]
 800db76:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 800db78:	687b      	ldr	r3, [r7, #4]
 800db7a:	4618      	mov	r0, r3
 800db7c:	f7f9 ff86 	bl	8007a8c <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEPT_RSE_>
 800db80:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 800db82:	6838      	ldr	r0, [r7, #0]
 800db84:	f7ff ffe8 	bl	800db58 <_ZSt7forwardIOSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS5_E4typeE>
 800db88:	4604      	mov	r4, r0
        ::new (__storage)
 800db8a:	68fb      	ldr	r3, [r7, #12]
 800db8c:	4619      	mov	r1, r3
 800db8e:	200c      	movs	r0, #12
 800db90:	f7f3 fa63 	bl	800105a <_ZnwjPv>
 800db94:	4603      	mov	r3, r0
 800db96:	4621      	mov	r1, r4
 800db98:	4618      	mov	r0, r3
 800db9a:	f7fa f97a 	bl	8007e92 <_ZNSt6vectorI6SymbolSaIS0_EEC1EOS2_>
    }
 800db9e:	bf00      	nop
 800dba0:	3714      	adds	r7, #20
 800dba2:	46bd      	mov	sp, r7
 800dba4:	bd90      	pop	{r4, r7, pc}
	...

0800dba8 <_Z41__static_initialization_and_destruction_0ii>:
 800dba8:	b590      	push	{r4, r7, lr}
 800dbaa:	b0e7      	sub	sp, #412	; 0x19c
 800dbac:	af02      	add	r7, sp, #8
 800dbae:	1d3b      	adds	r3, r7, #4
 800dbb0:	6018      	str	r0, [r3, #0]
 800dbb2:	463b      	mov	r3, r7
 800dbb4:	6019      	str	r1, [r3, #0]
 800dbb6:	1d3b      	adds	r3, r7, #4
 800dbb8:	681b      	ldr	r3, [r3, #0]
 800dbba:	2b01      	cmp	r3, #1
 800dbbc:	f040 819d 	bne.w	800defa <_Z41__static_initialization_and_destruction_0ii+0x352>
 800dbc0:	463b      	mov	r3, r7
 800dbc2:	681b      	ldr	r3, [r3, #0]
 800dbc4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800dbc8:	4293      	cmp	r3, r2
 800dbca:	f040 8196 	bne.w	800defa <_Z41__static_initialization_and_destruction_0ii+0x352>
};
 800dbce:	f107 0314 	add.w	r3, r7, #20
 800dbd2:	4618      	mov	r0, r3
 800dbd4:	2322      	movs	r3, #34	; 0x22
 800dbd6:	461a      	mov	r2, r3
 800dbd8:	2100      	movs	r1, #0
 800dbda:	f017 f961 	bl	8024ea0 <memset>
 800dbde:	f107 0314 	add.w	r3, r7, #20
 800dbe2:	223a      	movs	r2, #58	; 0x3a
 800dbe4:	701a      	strb	r2, [r3, #0]
 800dbe6:	f107 0314 	add.w	r3, r7, #20
 800dbea:	2201      	movs	r2, #1
 800dbec:	705a      	strb	r2, [r3, #1]
 800dbee:	f107 0314 	add.w	r3, r7, #20
 800dbf2:	220a      	movs	r2, #10
 800dbf4:	709a      	strb	r2, [r3, #2]
 800dbf6:	f107 0314 	add.w	r3, r7, #20
 800dbfa:	220a      	movs	r2, #10
 800dbfc:	70da      	strb	r2, [r3, #3]
 800dbfe:	f107 0314 	add.w	r3, r7, #20
 800dc02:	222c      	movs	r2, #44	; 0x2c
 800dc04:	711a      	strb	r2, [r3, #4]
 800dc06:	f107 0314 	add.w	r3, r7, #20
 800dc0a:	220c      	movs	r2, #12
 800dc0c:	715a      	strb	r2, [r3, #5]
 800dc0e:	f107 0314 	add.w	r3, r7, #20
 800dc12:	222e      	movs	r2, #46	; 0x2e
 800dc14:	719a      	strb	r2, [r3, #6]
 800dc16:	f107 0314 	add.w	r3, r7, #20
 800dc1a:	220b      	movs	r2, #11
 800dc1c:	71da      	strb	r2, [r3, #7]
 800dc1e:	f107 0314 	add.w	r3, r7, #20
 800dc22:	225b      	movs	r2, #91	; 0x5b
 800dc24:	721a      	strb	r2, [r3, #8]
 800dc26:	f107 0314 	add.w	r3, r7, #20
 800dc2a:	220d      	movs	r2, #13
 800dc2c:	725a      	strb	r2, [r3, #9]
 800dc2e:	f107 0314 	add.w	r3, r7, #20
 800dc32:	225d      	movs	r2, #93	; 0x5d
 800dc34:	729a      	strb	r2, [r3, #10]
 800dc36:	f107 0314 	add.w	r3, r7, #20
 800dc3a:	220e      	movs	r2, #14
 800dc3c:	72da      	strb	r2, [r3, #11]
 800dc3e:	f107 0314 	add.w	r3, r7, #20
 800dc42:	227c      	movs	r2, #124	; 0x7c
 800dc44:	731a      	strb	r2, [r3, #12]
 800dc46:	f107 0314 	add.w	r3, r7, #20
 800dc4a:	2215      	movs	r2, #21
 800dc4c:	735a      	strb	r2, [r3, #13]
 800dc4e:	f107 0314 	add.w	r3, r7, #20
 800dc52:	2226      	movs	r2, #38	; 0x26
 800dc54:	739a      	strb	r2, [r3, #14]
 800dc56:	f107 0314 	add.w	r3, r7, #20
 800dc5a:	2216      	movs	r2, #22
 800dc5c:	73da      	strb	r2, [r3, #15]
 800dc5e:	f107 0314 	add.w	r3, r7, #20
 800dc62:	222b      	movs	r2, #43	; 0x2b
 800dc64:	741a      	strb	r2, [r3, #16]
 800dc66:	f107 0314 	add.w	r3, r7, #20
 800dc6a:	221f      	movs	r2, #31
 800dc6c:	745a      	strb	r2, [r3, #17]
 800dc6e:	f107 0314 	add.w	r3, r7, #20
 800dc72:	222d      	movs	r2, #45	; 0x2d
 800dc74:	749a      	strb	r2, [r3, #18]
 800dc76:	f107 0314 	add.w	r3, r7, #20
 800dc7a:	2220      	movs	r2, #32
 800dc7c:	74da      	strb	r2, [r3, #19]
 800dc7e:	f107 0314 	add.w	r3, r7, #20
 800dc82:	222a      	movs	r2, #42	; 0x2a
 800dc84:	751a      	strb	r2, [r3, #20]
 800dc86:	f107 0314 	add.w	r3, r7, #20
 800dc8a:	2221      	movs	r2, #33	; 0x21
 800dc8c:	755a      	strb	r2, [r3, #21]
 800dc8e:	f107 0314 	add.w	r3, r7, #20
 800dc92:	222f      	movs	r2, #47	; 0x2f
 800dc94:	759a      	strb	r2, [r3, #22]
 800dc96:	f107 0314 	add.w	r3, r7, #20
 800dc9a:	2222      	movs	r2, #34	; 0x22
 800dc9c:	75da      	strb	r2, [r3, #23]
 800dc9e:	f107 0314 	add.w	r3, r7, #20
 800dca2:	225e      	movs	r2, #94	; 0x5e
 800dca4:	761a      	strb	r2, [r3, #24]
 800dca6:	f107 0314 	add.w	r3, r7, #20
 800dcaa:	2223      	movs	r2, #35	; 0x23
 800dcac:	765a      	strb	r2, [r3, #25]
 800dcae:	f107 0314 	add.w	r3, r7, #20
 800dcb2:	2225      	movs	r2, #37	; 0x25
 800dcb4:	769a      	strb	r2, [r3, #26]
 800dcb6:	f107 0314 	add.w	r3, r7, #20
 800dcba:	2224      	movs	r2, #36	; 0x24
 800dcbc:	76da      	strb	r2, [r3, #27]
 800dcbe:	f107 0314 	add.w	r3, r7, #20
 800dcc2:	2228      	movs	r2, #40	; 0x28
 800dcc4:	771a      	strb	r2, [r3, #28]
 800dcc6:	f107 0314 	add.w	r3, r7, #20
 800dcca:	2226      	movs	r2, #38	; 0x26
 800dccc:	775a      	strb	r2, [r3, #29]
 800dcce:	f107 0314 	add.w	r3, r7, #20
 800dcd2:	2229      	movs	r2, #41	; 0x29
 800dcd4:	779a      	strb	r2, [r3, #30]
 800dcd6:	f107 0314 	add.w	r3, r7, #20
 800dcda:	2227      	movs	r2, #39	; 0x27
 800dcdc:	77da      	strb	r2, [r3, #31]
 800dcde:	f107 0314 	add.w	r3, r7, #20
 800dce2:	2225      	movs	r2, #37	; 0x25
 800dce4:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 800dce8:	f107 030c 	add.w	r3, r7, #12
 800dcec:	f107 0214 	add.w	r2, r7, #20
 800dcf0:	601a      	str	r2, [r3, #0]
 800dcf2:	f107 030c 	add.w	r3, r7, #12
 800dcf6:	2211      	movs	r2, #17
 800dcf8:	605a      	str	r2, [r3, #4]
 800dcfa:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800dcfe:	4618      	mov	r0, r3
 800dd00:	f7f3 fff0 	bl	8001ce4 <_ZNSaISt4pairIKc10token_typeEEC1Ev>
 800dd04:	f107 0138 	add.w	r1, r7, #56	; 0x38
 800dd08:	f107 020c 	add.w	r2, r7, #12
 800dd0c:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800dd10:	9300      	str	r3, [sp, #0]
 800dd12:	460b      	mov	r3, r1
 800dd14:	ca06      	ldmia	r2, {r1, r2}
 800dd16:	4885      	ldr	r0, [pc, #532]	; (800df2c <_Z41__static_initialization_and_destruction_0ii+0x384>)
 800dd18:	f7f3 fffc 	bl	8001d14 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 800dd1c:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800dd20:	4618      	mov	r0, r3
 800dd22:	f7f3 ffeb 	bl	8001cfc <_ZNSaISt4pairIKc10token_typeEED1Ev>
	{"true", TOKEN_TRUE},
 800dd26:	2305      	movs	r3, #5
 800dd28:	f887 3162 	strb.w	r3, [r7, #354]	; 0x162
};
 800dd2c:	f507 72b1 	add.w	r2, r7, #354	; 0x162
 800dd30:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800dd34:	497e      	ldr	r1, [pc, #504]	; (800df30 <_Z41__static_initialization_and_destruction_0ii+0x388>)
 800dd36:	4618      	mov	r0, r3
 800dd38:	f7f3 f9de 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"false", TOKEN_FALSE},
 800dd3c:	2306      	movs	r3, #6
 800dd3e:	f887 3163 	strb.w	r3, [r7, #355]	; 0x163
};
 800dd42:	f207 1263 	addw	r2, r7, #355	; 0x163
 800dd46:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800dd4a:	331c      	adds	r3, #28
 800dd4c:	4979      	ldr	r1, [pc, #484]	; (800df34 <_Z41__static_initialization_and_destruction_0ii+0x38c>)
 800dd4e:	4618      	mov	r0, r3
 800dd50:	f7f3 f9fa 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"setup", TOKEN_SETUP},
 800dd54:	2307      	movs	r3, #7
 800dd56:	f887 3164 	strb.w	r3, [r7, #356]	; 0x164
};
 800dd5a:	f507 72b2 	add.w	r2, r7, #356	; 0x164
 800dd5e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800dd62:	3338      	adds	r3, #56	; 0x38
 800dd64:	4974      	ldr	r1, [pc, #464]	; (800df38 <_Z41__static_initialization_and_destruction_0ii+0x390>)
 800dd66:	4618      	mov	r0, r3
 800dd68:	f7f3 f9ee 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"loop", TOKEN_LOOP},
 800dd6c:	2308      	movs	r3, #8
 800dd6e:	f887 3165 	strb.w	r3, [r7, #357]	; 0x165
};
 800dd72:	f207 1265 	addw	r2, r7, #357	; 0x165
 800dd76:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800dd7a:	3354      	adds	r3, #84	; 0x54
 800dd7c:	496f      	ldr	r1, [pc, #444]	; (800df3c <_Z41__static_initialization_and_destruction_0ii+0x394>)
 800dd7e:	4618      	mov	r0, r3
 800dd80:	f7f3 f9ba 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"finish", TOKEN_FINISH},
 800dd84:	2309      	movs	r3, #9
 800dd86:	f887 3166 	strb.w	r3, [r7, #358]	; 0x166
};
 800dd8a:	f507 72b3 	add.w	r2, r7, #358	; 0x166
 800dd8e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800dd92:	3370      	adds	r3, #112	; 0x70
 800dd94:	496a      	ldr	r1, [pc, #424]	; (800df40 <_Z41__static_initialization_and_destruction_0ii+0x398>)
 800dd96:	4618      	mov	r0, r3
 800dd98:	f7f3 f9fe 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"if", TOKEN_IF},
 800dd9c:	2310      	movs	r3, #16
 800dd9e:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167
};
 800dda2:	f207 1267 	addw	r2, r7, #359	; 0x167
 800dda6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800ddaa:	338c      	adds	r3, #140	; 0x8c
 800ddac:	4965      	ldr	r1, [pc, #404]	; (800df44 <_Z41__static_initialization_and_destruction_0ii+0x39c>)
 800ddae:	4618      	mov	r0, r3
 800ddb0:	f7f3 fa1a 	bl	80011e8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>
	{"elseif", TOKEN_ELSEIF},
 800ddb4:	2311      	movs	r3, #17
 800ddb6:	f887 3168 	strb.w	r3, [r7, #360]	; 0x168
};
 800ddba:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 800ddbe:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800ddc2:	33a8      	adds	r3, #168	; 0xa8
 800ddc4:	4960      	ldr	r1, [pc, #384]	; (800df48 <_Z41__static_initialization_and_destruction_0ii+0x3a0>)
 800ddc6:	4618      	mov	r0, r3
 800ddc8:	f7f3 f9e6 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"else", TOKEN_ELSE},
 800ddcc:	2312      	movs	r3, #18
 800ddce:	f887 3169 	strb.w	r3, [r7, #361]	; 0x169
};
 800ddd2:	f207 1269 	addw	r2, r7, #361	; 0x169
 800ddd6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800ddda:	33c4      	adds	r3, #196	; 0xc4
 800dddc:	495b      	ldr	r1, [pc, #364]	; (800df4c <_Z41__static_initialization_and_destruction_0ii+0x3a4>)
 800ddde:	4618      	mov	r0, r3
 800dde0:	f7f3 f98a 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"while", TOKEN_WHILE},
 800dde4:	2313      	movs	r3, #19
 800dde6:	f887 316a 	strb.w	r3, [r7, #362]	; 0x16a
};
 800ddea:	f507 72b5 	add.w	r2, r7, #362	; 0x16a
 800ddee:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800ddf2:	33e0      	adds	r3, #224	; 0xe0
 800ddf4:	4956      	ldr	r1, [pc, #344]	; (800df50 <_Z41__static_initialization_and_destruction_0ii+0x3a8>)
 800ddf6:	4618      	mov	r0, r3
 800ddf8:	f7f3 f9a6 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"end", TOKEN_END},
 800ddfc:	2314      	movs	r3, #20
 800ddfe:	f887 316b 	strb.w	r3, [r7, #363]	; 0x16b
};
 800de02:	f207 126b 	addw	r2, r7, #363	; 0x16b
 800de06:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800de0a:	33fc      	adds	r3, #252	; 0xfc
 800de0c:	4951      	ldr	r1, [pc, #324]	; (800df54 <_Z41__static_initialization_and_destruction_0ii+0x3ac>)
 800de0e:	4618      	mov	r0, r3
 800de10:	f7f3 fa12 	bl	8001238 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>
 800de14:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800de18:	f107 0248 	add.w	r2, r7, #72	; 0x48
 800de1c:	601a      	str	r2, [r3, #0]
 800de1e:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800de22:	220a      	movs	r2, #10
 800de24:	605a      	str	r2, [r3, #4]
 800de26:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800de2a:	4618      	mov	r0, r3
 800de2c:	f7f3 ffff 	bl	8001e2e <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 800de30:	f507 71b6 	add.w	r1, r7, #364	; 0x16c
 800de34:	f107 0240 	add.w	r2, r7, #64	; 0x40
 800de38:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800de3c:	9300      	str	r3, [sp, #0]
 800de3e:	460b      	mov	r3, r1
 800de40:	ca06      	ldmia	r2, {r1, r2}
 800de42:	4845      	ldr	r0, [pc, #276]	; (800df58 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 800de44:	f7f4 f80b 	bl	8001e5e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>
 800de48:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800de4c:	4618      	mov	r0, r3
 800de4e:	f7f3 fffa 	bl	8001e46 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 800de52:	f107 0448 	add.w	r4, r7, #72	; 0x48
 800de56:	f504 748c 	add.w	r4, r4, #280	; 0x118
 800de5a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800de5e:	429c      	cmp	r4, r3
 800de60:	d004      	beq.n	800de6c <_Z41__static_initialization_and_destruction_0ii+0x2c4>
 800de62:	3c1c      	subs	r4, #28
 800de64:	4620      	mov	r0, r4
 800de66:	f7f3 f93a 	bl	80010de <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 800de6a:	e7f6      	b.n	800de5a <_Z41__static_initialization_and_destruction_0ii+0x2b2>
};
 800de6c:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 800de70:	2200      	movs	r2, #0
 800de72:	601a      	str	r2, [r3, #0]
 800de74:	605a      	str	r2, [r3, #4]
 800de76:	609a      	str	r2, [r3, #8]
 800de78:	233c      	movs	r3, #60	; 0x3c
 800de7a:	f887 317c 	strb.w	r3, [r7, #380]	; 0x17c
 800de7e:	231b      	movs	r3, #27
 800de80:	f887 317d 	strb.w	r3, [r7, #381]	; 0x17d
 800de84:	231c      	movs	r3, #28
 800de86:	f887 317e 	strb.w	r3, [r7, #382]	; 0x17e
 800de8a:	233e      	movs	r3, #62	; 0x3e
 800de8c:	f887 317f 	strb.w	r3, [r7, #383]	; 0x17f
 800de90:	2319      	movs	r3, #25
 800de92:	f887 3180 	strb.w	r3, [r7, #384]	; 0x180
 800de96:	231a      	movs	r3, #26
 800de98:	f887 3181 	strb.w	r3, [r7, #385]	; 0x181
 800de9c:	233d      	movs	r3, #61	; 0x3d
 800de9e:	f887 3182 	strb.w	r3, [r7, #386]	; 0x182
 800dea2:	2318      	movs	r3, #24
 800dea4:	f887 3183 	strb.w	r3, [r7, #387]	; 0x183
 800dea8:	231d      	movs	r3, #29
 800deaa:	f887 3184 	strb.w	r3, [r7, #388]	; 0x184
 800deae:	2321      	movs	r3, #33	; 0x21
 800deb0:	f887 3185 	strb.w	r3, [r7, #389]	; 0x185
 800deb4:	2317      	movs	r3, #23
 800deb6:	f887 3186 	strb.w	r3, [r7, #390]	; 0x186
 800deba:	231e      	movs	r3, #30
 800debc:	f887 3187 	strb.w	r3, [r7, #391]	; 0x187
 800dec0:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 800dec4:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 800dec8:	2304      	movs	r3, #4
 800deca:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 800dece:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 800ded2:	4618      	mov	r0, r3
 800ded4:	f7f3 fff3 	bl	8001ebe <_ZNSaISt4pairIKc12double_tokenEEC1Ev>
 800ded8:	f507 72c4 	add.w	r2, r7, #392	; 0x188
 800dedc:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 800dee0:	9300      	str	r3, [sp, #0]
 800dee2:	4613      	mov	r3, r2
 800dee4:	f507 72ba 	add.w	r2, r7, #372	; 0x174
 800dee8:	ca06      	ldmia	r2, {r1, r2}
 800deea:	481c      	ldr	r0, [pc, #112]	; (800df5c <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 800deec:	f7f3 ffff 	bl	8001eee <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 800def0:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 800def4:	4618      	mov	r0, r3
 800def6:	f7f3 ffee 	bl	8001ed6 <_ZNSaISt4pairIKc12double_tokenEED1Ev>
static const std::map<char, double_token> token_double_chars
 800defa:	1d3b      	adds	r3, r7, #4
 800defc:	681b      	ldr	r3, [r3, #0]
 800defe:	2b00      	cmp	r3, #0
 800df00:	d10e      	bne.n	800df20 <_Z41__static_initialization_and_destruction_0ii+0x378>
 800df02:	463b      	mov	r3, r7
 800df04:	681b      	ldr	r3, [r3, #0]
 800df06:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800df0a:	4293      	cmp	r3, r2
 800df0c:	d108      	bne.n	800df20 <_Z41__static_initialization_and_destruction_0ii+0x378>
 800df0e:	4813      	ldr	r0, [pc, #76]	; (800df5c <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 800df10:	f7fb fcb8 	bl	8009884 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>
static const std::map<std::string, token_type> token_strings
 800df14:	4810      	ldr	r0, [pc, #64]	; (800df58 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 800df16:	f7fb fcc2 	bl	800989e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
static const std::map<char, token_type> token_chars
 800df1a:	4804      	ldr	r0, [pc, #16]	; (800df2c <_Z41__static_initialization_and_destruction_0ii+0x384>)
 800df1c:	f7fb fccc 	bl	80098b8 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>
 800df20:	bf00      	nop
 800df22:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 800df26:	46bd      	mov	sp, r7
 800df28:	bd90      	pop	{r4, r7, pc}
 800df2a:	bf00      	nop
 800df2c:	2000029c 	.word	0x2000029c
 800df30:	08029600 	.word	0x08029600
 800df34:	08029608 	.word	0x08029608
 800df38:	08029610 	.word	0x08029610
 800df3c:	08029618 	.word	0x08029618
 800df40:	08029620 	.word	0x08029620
 800df44:	08029628 	.word	0x08029628
 800df48:	0802962c 	.word	0x0802962c
 800df4c:	08029634 	.word	0x08029634
 800df50:	0802963c 	.word	0x0802963c
 800df54:	08029644 	.word	0x08029644
 800df58:	200002b4 	.word	0x200002b4
 800df5c:	200002cc 	.word	0x200002cc

0800df60 <_GLOBAL__sub_I__ZN21Expression_calculatorC2Ev>:
 800df60:	b580      	push	{r7, lr}
 800df62:	af00      	add	r7, sp, #0
 800df64:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800df68:	2001      	movs	r0, #1
 800df6a:	f7ff fe1d 	bl	800dba8 <_Z41__static_initialization_and_destruction_0ii>
 800df6e:	bd80      	pop	{r7, pc}

0800df70 <_GLOBAL__sub_D__ZN21Expression_calculatorC2Ev>:
 800df70:	b580      	push	{r7, lr}
 800df72:	af00      	add	r7, sp, #0
 800df74:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800df78:	2000      	movs	r0, #0
 800df7a:	f7ff fe15 	bl	800dba8 <_Z41__static_initialization_and_destruction_0ii>
 800df7e:	bd80      	pop	{r7, pc}

0800df80 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaIS9_EEESt4lessIS5_ESaISt4pairIKS5_SD_EEED1Ev>:
 800df80:	b580      	push	{r7, lr}
 800df82:	b082      	sub	sp, #8
 800df84:	af00      	add	r7, sp, #0
 800df86:	6078      	str	r0, [r7, #4]
 800df88:	687b      	ldr	r3, [r7, #4]
 800df8a:	4618      	mov	r0, r3
 800df8c:	f000 f8ea 	bl	800e164 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EED1Ev>
 800df90:	687b      	ldr	r3, [r7, #4]
 800df92:	4618      	mov	r0, r3
 800df94:	3708      	adds	r7, #8
 800df96:	46bd      	mov	sp, r7
 800df98:	bd80      	pop	{r7, pc}

0800df9a <_ZN16Function_handlerD1Ev>:

typedef Symbol (*function_pointer)(arglist);

#define ADD_FUNCTION(x) functions.insert({#x, &x});

class Function_handler
 800df9a:	b580      	push	{r7, lr}
 800df9c:	b082      	sub	sp, #8
 800df9e:	af00      	add	r7, sp, #0
 800dfa0:	6078      	str	r0, [r7, #4]
 800dfa2:	687b      	ldr	r3, [r7, #4]
 800dfa4:	4618      	mov	r0, r3
 800dfa6:	f7ff ffeb 	bl	800df80 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaIS9_EEESt4lessIS5_ESaISt4pairIKS5_SD_EEED1Ev>
 800dfaa:	687b      	ldr	r3, [r7, #4]
 800dfac:	4618      	mov	r0, r3
 800dfae:	3708      	adds	r7, #8
 800dfb0:	46bd      	mov	sp, r7
 800dfb2:	bd80      	pop	{r7, pc}

0800dfb4 <__tcf_0>:
#include "Function_handler.h"

Symbol Function_handler::run_function(Function_call *fcall)
{
	static Function_handler instance;
 800dfb4:	b580      	push	{r7, lr}
 800dfb6:	af00      	add	r7, sp, #0
 800dfb8:	4801      	ldr	r0, [pc, #4]	; (800dfc0 <__tcf_0+0xc>)
 800dfba:	f7ff ffee 	bl	800df9a <_ZN16Function_handlerD1Ev>
 800dfbe:	bd80      	pop	{r7, pc}
 800dfc0:	20000334 	.word	0x20000334

0800dfc4 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1Ev>:
      variant() = default;
 800dfc4:	b580      	push	{r7, lr}
 800dfc6:	b082      	sub	sp, #8
 800dfc8:	af00      	add	r7, sp, #0
 800dfca:	6078      	str	r0, [r7, #4]
 800dfcc:	687b      	ldr	r3, [r7, #4]
 800dfce:	4618      	mov	r0, r3
 800dfd0:	f000 f9fa 	bl	800e3c8 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1Ev>
 800dfd4:	687b      	ldr	r3, [r7, #4]
 800dfd6:	4618      	mov	r0, r3
 800dfd8:	3708      	adds	r7, #8
 800dfda:	46bd      	mov	sp, r7
 800dfdc:	bd80      	pop	{r7, pc}

0800dfde <_ZN6SymbolC1Ev>:
{
public:
	symbol_type type;
	symbol_value value;

	Symbol() = default;
 800dfde:	b580      	push	{r7, lr}
 800dfe0:	b082      	sub	sp, #8
 800dfe2:	af00      	add	r7, sp, #0
 800dfe4:	6078      	str	r0, [r7, #4]
 800dfe6:	687b      	ldr	r3, [r7, #4]
 800dfe8:	3304      	adds	r3, #4
 800dfea:	4618      	mov	r0, r3
 800dfec:	f7ff ffea 	bl	800dfc4 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1Ev>
 800dff0:	687b      	ldr	r3, [r7, #4]
 800dff2:	4618      	mov	r0, r3
 800dff4:	3708      	adds	r7, #8
 800dff6:	46bd      	mov	sp, r7
 800dff8:	bd80      	pop	{r7, pc}
	...

0800dffc <_ZN16Function_handler12run_functionEP13Function_call>:
{
 800dffc:	b590      	push	{r4, r7, lr}
 800dffe:	b095      	sub	sp, #84	; 0x54
 800e000:	af00      	add	r7, sp, #0
 800e002:	6078      	str	r0, [r7, #4]
 800e004:	6039      	str	r1, [r7, #0]
	static Function_handler instance;
 800e006:	4b4c      	ldr	r3, [pc, #304]	; (800e138 <_ZN16Function_handler12run_functionEP13Function_call+0x13c>)
 800e008:	781b      	ldrb	r3, [r3, #0]
 800e00a:	f3bf 8f5b 	dmb	ish
 800e00e:	b2db      	uxtb	r3, r3
 800e010:	f003 0301 	and.w	r3, r3, #1
 800e014:	2b00      	cmp	r3, #0
 800e016:	bf0c      	ite	eq
 800e018:	2301      	moveq	r3, #1
 800e01a:	2300      	movne	r3, #0
 800e01c:	b2db      	uxtb	r3, r3
 800e01e:	2b00      	cmp	r3, #0
 800e020:	d013      	beq.n	800e04a <_ZN16Function_handler12run_functionEP13Function_call+0x4e>
 800e022:	4845      	ldr	r0, [pc, #276]	; (800e138 <_ZN16Function_handler12run_functionEP13Function_call+0x13c>)
 800e024:	f015 fa58 	bl	80234d8 <__cxa_guard_acquire>
 800e028:	4603      	mov	r3, r0
 800e02a:	2b00      	cmp	r3, #0
 800e02c:	bf14      	ite	ne
 800e02e:	2301      	movne	r3, #1
 800e030:	2300      	moveq	r3, #0
 800e032:	b2db      	uxtb	r3, r3
 800e034:	2b00      	cmp	r3, #0
 800e036:	d008      	beq.n	800e04a <_ZN16Function_handler12run_functionEP13Function_call+0x4e>
 800e038:	4840      	ldr	r0, [pc, #256]	; (800e13c <_ZN16Function_handler12run_functionEP13Function_call+0x140>)
 800e03a:	f011 fbaf 	bl	801f79c <_ZN16Function_handlerC1Ev>
 800e03e:	483e      	ldr	r0, [pc, #248]	; (800e138 <_ZN16Function_handler12run_functionEP13Function_call+0x13c>)
 800e040:	f015 fa56 	bl	80234f0 <__cxa_guard_release>
 800e044:	483e      	ldr	r0, [pc, #248]	; (800e140 <_ZN16Function_handler12run_functionEP13Function_call+0x144>)
 800e046:	f016 fe9c 	bl	8024d82 <atexit>

	Position_counter::get_instance().set_line(fcall->line);
 800e04a:	f008 fc19 	bl	8016880 <_ZN16Position_counter12get_instanceEv>
 800e04e:	4602      	mov	r2, r0
 800e050:	683b      	ldr	r3, [r7, #0]
 800e052:	681b      	ldr	r3, [r3, #0]
 800e054:	4619      	mov	r1, r3
 800e056:	4610      	mov	r0, r2
 800e058:	f008 fc85 	bl	8016966 <_ZN16Position_counter8set_lineEi>
	Position_counter::get_instance().set_position(fcall->position);
 800e05c:	f008 fc10 	bl	8016880 <_ZN16Position_counter12get_instanceEv>
 800e060:	4602      	mov	r2, r0
 800e062:	683b      	ldr	r3, [r7, #0]
 800e064:	685b      	ldr	r3, [r3, #4]
 800e066:	4619      	mov	r1, r3
 800e068:	4610      	mov	r0, r2
 800e06a:	f008 fc8a 	bl	8016982 <_ZN16Position_counter12set_positionEi>

	auto search = instance.functions.find(fcall->id);
 800e06e:	683b      	ldr	r3, [r7, #0]
 800e070:	3308      	adds	r3, #8
 800e072:	4619      	mov	r1, r3
 800e074:	4831      	ldr	r0, [pc, #196]	; (800e13c <_ZN16Function_handler12run_functionEP13Function_call+0x140>)
 800e076:	f000 f88a 	bl	800e18e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaIS9_EEESt4lessIS5_ESaISt4pairIKS5_SD_EEE4findERSH_>
 800e07a:	4603      	mov	r3, r0
 800e07c:	60bb      	str	r3, [r7, #8]
	if (search != instance.functions.end())
 800e07e:	482f      	ldr	r0, [pc, #188]	; (800e13c <_ZN16Function_handler12run_functionEP13Function_call+0x140>)
 800e080:	f000 f894 	bl	800e1ac <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaIS9_EEESt4lessIS5_ESaISt4pairIKS5_SD_EEE3endEv>
 800e084:	4603      	mov	r3, r0
 800e086:	60fb      	str	r3, [r7, #12]
 800e088:	f107 020c 	add.w	r2, r7, #12
 800e08c:	f107 0308 	add.w	r3, r7, #8
 800e090:	4611      	mov	r1, r2
 800e092:	4618      	mov	r0, r3
 800e094:	f000 f897 	bl	800e1c6 <_ZStneRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEESJ_>
 800e098:	4603      	mov	r3, r0
 800e09a:	2b00      	cmp	r3, #0
 800e09c:	d01d      	beq.n	800e0da <_ZN16Function_handler12run_functionEP13Function_call+0xde>
	{
		function_pointer fun = search->second;
 800e09e:	f107 0308 	add.w	r3, r7, #8
 800e0a2:	4618      	mov	r0, r3
 800e0a4:	f000 f8a3 	bl	800e1ee <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEptEv>
 800e0a8:	4603      	mov	r3, r0
 800e0aa:	699b      	ldr	r3, [r3, #24]
 800e0ac:	64fb      	str	r3, [r7, #76]	; 0x4c
		return fun(fcall->arguments);
 800e0ae:	6cfc      	ldr	r4, [r7, #76]	; 0x4c
 800e0b0:	683b      	ldr	r3, [r7, #0]
 800e0b2:	f103 0220 	add.w	r2, r3, #32
 800e0b6:	f107 0310 	add.w	r3, r7, #16
 800e0ba:	4611      	mov	r1, r2
 800e0bc:	4618      	mov	r0, r3
 800e0be:	f000 f8a4 	bl	800e20a <_ZNSt6vectorIP10ExpressionSaIS1_EEC1ERKS3_>
 800e0c2:	687b      	ldr	r3, [r7, #4]
 800e0c4:	f107 0210 	add.w	r2, r7, #16
 800e0c8:	4611      	mov	r1, r2
 800e0ca:	4618      	mov	r0, r3
 800e0cc:	47a0      	blx	r4
 800e0ce:	f107 0310 	add.w	r3, r7, #16
 800e0d2:	4618      	mov	r0, r3
 800e0d4:	f000 f8d6 	bl	800e284 <_ZNSt6vectorIP10ExpressionSaIS1_EED1Ev>
 800e0d8:	e029      	b.n	800e12e <_ZN16Function_handler12run_functionEP13Function_call+0x132>
	}
	else
	{
		Transmitter::report_error(std::string("function " + fcall->id + " not found"));
 800e0da:	683b      	ldr	r3, [r7, #0]
 800e0dc:	f103 0208 	add.w	r2, r3, #8
 800e0e0:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800e0e4:	4917      	ldr	r1, [pc, #92]	; (800e144 <_ZN16Function_handler12run_functionEP13Function_call+0x148>)
 800e0e6:	4618      	mov	r0, r3
 800e0e8:	f000 f8e7 	bl	800e2ba <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>
 800e0ec:	f107 031c 	add.w	r3, r7, #28
 800e0f0:	f107 0134 	add.w	r1, r7, #52	; 0x34
 800e0f4:	4a14      	ldr	r2, [pc, #80]	; (800e148 <_ZN16Function_handler12run_functionEP13Function_call+0x14c>)
 800e0f6:	4618      	mov	r0, r3
 800e0f8:	f000 f904 	bl	800e304 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_>
 800e0fc:	f107 031c 	add.w	r3, r7, #28
 800e100:	4618      	mov	r0, r3
 800e102:	f00a fd7d 	bl	8018c00 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 800e106:	f107 031c 	add.w	r3, r7, #28
 800e10a:	4618      	mov	r0, r3
 800e10c:	f015 fc95 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800e110:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800e114:	4618      	mov	r0, r3
 800e116:	f015 fc90 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
		return {};
 800e11a:	687b      	ldr	r3, [r7, #4]
 800e11c:	4618      	mov	r0, r3
 800e11e:	2320      	movs	r3, #32
 800e120:	461a      	mov	r2, r3
 800e122:	2100      	movs	r1, #0
 800e124:	f016 febc 	bl	8024ea0 <memset>
 800e128:	6878      	ldr	r0, [r7, #4]
 800e12a:	f7ff ff58 	bl	800dfde <_ZN6SymbolC1Ev>
	}
}
 800e12e:	6878      	ldr	r0, [r7, #4]
 800e130:	3754      	adds	r7, #84	; 0x54
 800e132:	46bd      	mov	sp, r7
 800e134:	bd90      	pop	{r4, r7, pc}
 800e136:	bf00      	nop
 800e138:	2000034c 	.word	0x2000034c
 800e13c:	20000334 	.word	0x20000334
 800e140:	0800dfb5 	.word	0x0800dfb5
 800e144:	08029648 	.word	0x08029648
 800e148:	08029654 	.word	0x08029654

0800e14c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE13_Rb_tree_implISK_Lb1EED1Ev>:
	struct _Rb_tree_impl
 800e14c:	b580      	push	{r7, lr}
 800e14e:	b082      	sub	sp, #8
 800e150:	af00      	add	r7, sp, #0
 800e152:	6078      	str	r0, [r7, #4]
 800e154:	6878      	ldr	r0, [r7, #4]
 800e156:	f000 f944 	bl	800e3e2 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEED1Ev>
 800e15a:	687b      	ldr	r3, [r7, #4]
 800e15c:	4618      	mov	r0, r3
 800e15e:	3708      	adds	r7, #8
 800e160:	46bd      	mov	sp, r7
 800e162:	bd80      	pop	{r7, pc}

0800e164 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EED1Ev>:
      ~_Rb_tree() _GLIBCXX_NOEXCEPT
 800e164:	b580      	push	{r7, lr}
 800e166:	b082      	sub	sp, #8
 800e168:	af00      	add	r7, sp, #0
 800e16a:	6078      	str	r0, [r7, #4]
      { _M_erase(_M_begin()); }
 800e16c:	6878      	ldr	r0, [r7, #4]
 800e16e:	f000 f963 	bl	800e438 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_M_beginEv>
 800e172:	4603      	mov	r3, r0
 800e174:	4619      	mov	r1, r3
 800e176:	6878      	ldr	r0, [r7, #4]
 800e178:	f000 f93f 	bl	800e3fa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_M_eraseEPSt13_Rb_tree_nodeISG_E>
 800e17c:	687b      	ldr	r3, [r7, #4]
 800e17e:	4618      	mov	r0, r3
 800e180:	f7ff ffe4 	bl	800e14c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE13_Rb_tree_implISK_Lb1EED1Ev>
 800e184:	687b      	ldr	r3, [r7, #4]
 800e186:	4618      	mov	r0, r3
 800e188:	3708      	adds	r7, #8
 800e18a:	46bd      	mov	sp, r7
 800e18c:	bd80      	pop	{r7, pc}

0800e18e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaIS9_EEESt4lessIS5_ESaISt4pairIKS5_SD_EEE4findERSH_>:
       *  pointing to the sought after %pair.  If unsuccessful it returns the
       *  past-the-end ( @c end() ) iterator.
       */

      iterator
      find(const key_type& __x)
 800e18e:	b580      	push	{r7, lr}
 800e190:	b082      	sub	sp, #8
 800e192:	af00      	add	r7, sp, #0
 800e194:	6078      	str	r0, [r7, #4]
 800e196:	6039      	str	r1, [r7, #0]
      { return _M_t.find(__x); }
 800e198:	687b      	ldr	r3, [r7, #4]
 800e19a:	6839      	ldr	r1, [r7, #0]
 800e19c:	4618      	mov	r0, r3
 800e19e:	f000 f957 	bl	800e450 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE4findERS7_>
 800e1a2:	4603      	mov	r3, r0
 800e1a4:	4618      	mov	r0, r3
 800e1a6:	3708      	adds	r7, #8
 800e1a8:	46bd      	mov	sp, r7
 800e1aa:	bd80      	pop	{r7, pc}

0800e1ac <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaIS9_EEESt4lessIS5_ESaISt4pairIKS5_SD_EEE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 800e1ac:	b580      	push	{r7, lr}
 800e1ae:	b082      	sub	sp, #8
 800e1b0:	af00      	add	r7, sp, #0
 800e1b2:	6078      	str	r0, [r7, #4]
      { return _M_t.end(); }
 800e1b4:	687b      	ldr	r3, [r7, #4]
 800e1b6:	4618      	mov	r0, r3
 800e1b8:	f000 f986 	bl	800e4c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE3endEv>
 800e1bc:	4603      	mov	r3, r0
 800e1be:	4618      	mov	r0, r3
 800e1c0:	3708      	adds	r7, #8
 800e1c2:	46bd      	mov	sp, r7
 800e1c4:	bd80      	pop	{r7, pc}

0800e1c6 <_ZStneRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEESJ_>:
      operator!=(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 800e1c6:	b480      	push	{r7}
 800e1c8:	b083      	sub	sp, #12
 800e1ca:	af00      	add	r7, sp, #0
 800e1cc:	6078      	str	r0, [r7, #4]
 800e1ce:	6039      	str	r1, [r7, #0]
      { return __x._M_node != __y._M_node; }
 800e1d0:	687b      	ldr	r3, [r7, #4]
 800e1d2:	681a      	ldr	r2, [r3, #0]
 800e1d4:	683b      	ldr	r3, [r7, #0]
 800e1d6:	681b      	ldr	r3, [r3, #0]
 800e1d8:	429a      	cmp	r2, r3
 800e1da:	bf14      	ite	ne
 800e1dc:	2301      	movne	r3, #1
 800e1de:	2300      	moveq	r3, #0
 800e1e0:	b2db      	uxtb	r3, r3
 800e1e2:	4618      	mov	r0, r3
 800e1e4:	370c      	adds	r7, #12
 800e1e6:	46bd      	mov	sp, r7
 800e1e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e1ec:	4770      	bx	lr

0800e1ee <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEptEv>:
      operator->() const _GLIBCXX_NOEXCEPT
 800e1ee:	b580      	push	{r7, lr}
 800e1f0:	b082      	sub	sp, #8
 800e1f2:	af00      	add	r7, sp, #0
 800e1f4:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type> (_M_node)->_M_valptr(); }
 800e1f6:	687b      	ldr	r3, [r7, #4]
 800e1f8:	681b      	ldr	r3, [r3, #0]
 800e1fa:	4618      	mov	r0, r3
 800e1fc:	f000 f975 	bl	800e4ea <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEE9_M_valptrEv>
 800e200:	4603      	mov	r3, r0
 800e202:	4618      	mov	r0, r3
 800e204:	3708      	adds	r7, #8
 800e206:	46bd      	mov	sp, r7
 800e208:	bd80      	pop	{r7, pc}

0800e20a <_ZNSt6vectorIP10ExpressionSaIS1_EEC1ERKS3_>:
      vector(const vector& __x)
 800e20a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e20c:	b085      	sub	sp, #20
 800e20e:	af00      	add	r7, sp, #0
 800e210:	6078      	str	r0, [r7, #4]
 800e212:	6039      	str	r1, [r7, #0]
	_Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()))
 800e214:	687c      	ldr	r4, [r7, #4]
 800e216:	6838      	ldr	r0, [r7, #0]
 800e218:	f7f4 fac9 	bl	80027ae <_ZNKSt6vectorIP10ExpressionSaIS1_EE4sizeEv>
 800e21c:	4605      	mov	r5, r0
 800e21e:	683b      	ldr	r3, [r7, #0]
 800e220:	4618      	mov	r0, r3
 800e222:	f000 f97e 	bl	800e522 <_ZNKSt12_Vector_baseIP10ExpressionSaIS1_EE19_M_get_Tp_allocatorEv>
 800e226:	4602      	mov	r2, r0
 800e228:	f107 030c 	add.w	r3, r7, #12
 800e22c:	4611      	mov	r1, r2
 800e22e:	4618      	mov	r0, r3
 800e230:	f000 f969 	bl	800e506 <_ZN9__gnu_cxx14__alloc_traitsISaIP10ExpressionES2_E17_S_select_on_copyERKS3_>
 800e234:	f107 030c 	add.w	r3, r7, #12
 800e238:	461a      	mov	r2, r3
 800e23a:	4629      	mov	r1, r5
 800e23c:	4620      	mov	r0, r4
 800e23e:	f000 f993 	bl	800e568 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EEC1EjRKS2_>
 800e242:	f107 030c 	add.w	r3, r7, #12
 800e246:	4618      	mov	r0, r3
 800e248:	f000 f976 	bl	800e538 <_ZNSaIP10ExpressionED1Ev>
	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 800e24c:	6838      	ldr	r0, [r7, #0]
 800e24e:	f000 f9b8 	bl	800e5c2 <_ZNKSt6vectorIP10ExpressionSaIS1_EE5beginEv>
 800e252:	4605      	mov	r5, r0
 800e254:	6838      	ldr	r0, [r7, #0]
 800e256:	f000 f9c8 	bl	800e5ea <_ZNKSt6vectorIP10ExpressionSaIS1_EE3endEv>
 800e25a:	4606      	mov	r6, r0
 800e25c:	687b      	ldr	r3, [r7, #4]
 800e25e:	681c      	ldr	r4, [r3, #0]
				      _M_get_Tp_allocator());
 800e260:	687b      	ldr	r3, [r7, #4]
 800e262:	4618      	mov	r0, r3
 800e264:	f000 f9d5 	bl	800e612 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE19_M_get_Tp_allocatorEv>
 800e268:	4603      	mov	r3, r0
	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 800e26a:	4622      	mov	r2, r4
 800e26c:	4631      	mov	r1, r6
 800e26e:	4628      	mov	r0, r5
 800e270:	f000 f9da 	bl	800e628 <_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E>
 800e274:	4602      	mov	r2, r0
	this->_M_impl._M_finish =
 800e276:	687b      	ldr	r3, [r7, #4]
 800e278:	605a      	str	r2, [r3, #4]
      }
 800e27a:	687b      	ldr	r3, [r7, #4]
 800e27c:	4618      	mov	r0, r3
 800e27e:	3714      	adds	r7, #20
 800e280:	46bd      	mov	sp, r7
 800e282:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800e284 <_ZNSt6vectorIP10ExpressionSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
 800e284:	b5b0      	push	{r4, r5, r7, lr}
 800e286:	b082      	sub	sp, #8
 800e288:	af00      	add	r7, sp, #0
 800e28a:	6078      	str	r0, [r7, #4]
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 800e28c:	687b      	ldr	r3, [r7, #4]
 800e28e:	681c      	ldr	r4, [r3, #0]
 800e290:	687b      	ldr	r3, [r7, #4]
 800e292:	685d      	ldr	r5, [r3, #4]
		      _M_get_Tp_allocator());
 800e294:	687b      	ldr	r3, [r7, #4]
 800e296:	4618      	mov	r0, r3
 800e298:	f000 f9bb 	bl	800e612 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE19_M_get_Tp_allocatorEv>
 800e29c:	4603      	mov	r3, r0
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 800e29e:	461a      	mov	r2, r3
 800e2a0:	4629      	mov	r1, r5
 800e2a2:	4620      	mov	r0, r4
 800e2a4:	f000 f9d1 	bl	800e64a <_ZSt8_DestroyIPP10ExpressionS1_EvT_S3_RSaIT0_E>
      }
 800e2a8:	687b      	ldr	r3, [r7, #4]
 800e2aa:	4618      	mov	r0, r3
 800e2ac:	f000 f970 	bl	800e590 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EED1Ev>
 800e2b0:	687b      	ldr	r3, [r7, #4]
 800e2b2:	4618      	mov	r0, r3
 800e2b4:	3708      	adds	r7, #8
 800e2b6:	46bd      	mov	sp, r7
 800e2b8:	bdb0      	pop	{r4, r5, r7, pc}

0800e2ba <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>:
    }
#endif  // !_GLIBCXX_USE_CXX11_ABI
   
  template<typename _CharT, typename _Traits, typename _Alloc>
    basic_string<_CharT, _Traits, _Alloc>
    operator+(const _CharT* __lhs,
 800e2ba:	b580      	push	{r7, lr}
 800e2bc:	b086      	sub	sp, #24
 800e2be:	af00      	add	r7, sp, #0
 800e2c0:	60f8      	str	r0, [r7, #12]
 800e2c2:	60b9      	str	r1, [r7, #8]
 800e2c4:	607a      	str	r2, [r7, #4]
	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
    {
      __glibcxx_requires_string(__lhs);
      typedef basic_string<_CharT, _Traits, _Alloc> __string_type;
      typedef typename __string_type::size_type	  __size_type;
      const __size_type __len = _Traits::length(__lhs);
 800e2c6:	68b8      	ldr	r0, [r7, #8]
 800e2c8:	f7f2 feb0 	bl	800102c <_ZNSt11char_traitsIcE6lengthEPKc>
 800e2cc:	6178      	str	r0, [r7, #20]
      __string_type __str;
 800e2ce:	68f8      	ldr	r0, [r7, #12]
 800e2d0:	f015 fb92 	bl	80239f8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>
      __str.reserve(__len + __rhs.size());
 800e2d4:	6878      	ldr	r0, [r7, #4]
 800e2d6:	f015 fbe4 	bl	8023aa2 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
 800e2da:	4602      	mov	r2, r0
 800e2dc:	697b      	ldr	r3, [r7, #20]
 800e2de:	4413      	add	r3, r2
 800e2e0:	4619      	mov	r1, r3
 800e2e2:	68f8      	ldr	r0, [r7, #12]
 800e2e4:	f015 fbe9 	bl	8023aba <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj>
      __str.append(__lhs, __len);
 800e2e8:	697a      	ldr	r2, [r7, #20]
 800e2ea:	68b9      	ldr	r1, [r7, #8]
 800e2ec:	68f8      	ldr	r0, [r7, #12]
 800e2ee:	f015 fd23 	bl	8023d38 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcj>
      __str.append(__rhs);
 800e2f2:	6879      	ldr	r1, [r7, #4]
 800e2f4:	68f8      	ldr	r0, [r7, #12]
 800e2f6:	f015 fd15 	bl	8023d24 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_>
      return __str;
 800e2fa:	bf00      	nop
    }
 800e2fc:	68f8      	ldr	r0, [r7, #12]
 800e2fe:	3718      	adds	r7, #24
 800e300:	46bd      	mov	sp, r7
 800e302:	bd80      	pop	{r7, pc}

0800e304 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_>:
    operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
 800e304:	b580      	push	{r7, lr}
 800e306:	b084      	sub	sp, #16
 800e308:	af00      	add	r7, sp, #0
 800e30a:	60f8      	str	r0, [r7, #12]
 800e30c:	60b9      	str	r1, [r7, #8]
 800e30e:	607a      	str	r2, [r7, #4]
    { return std::move(__lhs.append(__rhs)); }
 800e310:	6879      	ldr	r1, [r7, #4]
 800e312:	68b8      	ldr	r0, [r7, #8]
 800e314:	f015 fd20 	bl	8023d58 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc>
 800e318:	4603      	mov	r3, r0
 800e31a:	4618      	mov	r0, r3
 800e31c:	f7f8 ff57 	bl	80071ce <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
 800e320:	4603      	mov	r3, r0
 800e322:	4619      	mov	r1, r3
 800e324:	68f8      	ldr	r0, [r7, #12]
 800e326:	f015 fb6e 	bl	8023a06 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_>
 800e32a:	68f8      	ldr	r0, [r7, #12]
 800e32c:	3710      	adds	r7, #16
 800e32e:	46bd      	mov	sp, r7
 800e330:	bd80      	pop	{r7, pc}

0800e332 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 800e332:	b580      	push	{r7, lr}
 800e334:	b082      	sub	sp, #8
 800e336:	af00      	add	r7, sp, #0
 800e338:	6078      	str	r0, [r7, #4]
 800e33a:	7039      	strb	r1, [r7, #0]
 800e33c:	687b      	ldr	r3, [r7, #4]
 800e33e:	4611      	mov	r1, r2
 800e340:	4618      	mov	r0, r3
 800e342:	f000 f9ae 	bl	800e6a2 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 800e346:	687b      	ldr	r3, [r7, #4]
 800e348:	4618      	mov	r0, r3
 800e34a:	3708      	adds	r7, #8
 800e34c:	46bd      	mov	sp, r7
 800e34e:	bd80      	pop	{r7, pc}

0800e350 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 800e350:	b580      	push	{r7, lr}
 800e352:	b082      	sub	sp, #8
 800e354:	af00      	add	r7, sp, #0
 800e356:	6078      	str	r0, [r7, #4]
 800e358:	7039      	strb	r1, [r7, #0]
 800e35a:	687b      	ldr	r3, [r7, #4]
 800e35c:	4611      	mov	r1, r2
 800e35e:	4618      	mov	r0, r3
 800e360:	f7ff ffe7 	bl	800e332 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 800e364:	687b      	ldr	r3, [r7, #4]
 800e366:	4618      	mov	r0, r3
 800e368:	3708      	adds	r7, #8
 800e36a:	46bd      	mov	sp, r7
 800e36c:	bd80      	pop	{r7, pc}

0800e36e <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 800e36e:	b580      	push	{r7, lr}
 800e370:	b082      	sub	sp, #8
 800e372:	af00      	add	r7, sp, #0
 800e374:	6078      	str	r0, [r7, #4]
 800e376:	7039      	strb	r1, [r7, #0]
 800e378:	687b      	ldr	r3, [r7, #4]
 800e37a:	4611      	mov	r1, r2
 800e37c:	4618      	mov	r0, r3
 800e37e:	f7ff ffe7 	bl	800e350 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 800e382:	687b      	ldr	r3, [r7, #4]
 800e384:	4618      	mov	r0, r3
 800e386:	3708      	adds	r7, #8
 800e388:	46bd      	mov	sp, r7
 800e38a:	bd80      	pop	{r7, pc}

0800e38c <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 800e38c:	b580      	push	{r7, lr}
 800e38e:	b082      	sub	sp, #8
 800e390:	af00      	add	r7, sp, #0
 800e392:	6078      	str	r0, [r7, #4]
 800e394:	7039      	strb	r1, [r7, #0]
 800e396:	687b      	ldr	r3, [r7, #4]
 800e398:	4611      	mov	r1, r2
 800e39a:	4618      	mov	r0, r3
 800e39c:	f7ff ffe7 	bl	800e36e <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 800e3a0:	687b      	ldr	r3, [r7, #4]
 800e3a2:	4618      	mov	r0, r3
 800e3a4:	3708      	adds	r7, #8
 800e3a6:	46bd      	mov	sp, r7
 800e3a8:	bd80      	pop	{r7, pc}

0800e3aa <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
	_Variant_base(in_place_index_t<_Np> __i, _Args&&... __args)
 800e3aa:	b580      	push	{r7, lr}
 800e3ac:	b082      	sub	sp, #8
 800e3ae:	af00      	add	r7, sp, #0
 800e3b0:	6078      	str	r0, [r7, #4]
 800e3b2:	7039      	strb	r1, [r7, #0]
	: _Base(__i, std::forward<_Args>(__args)...)
 800e3b4:	687b      	ldr	r3, [r7, #4]
 800e3b6:	4611      	mov	r1, r2
 800e3b8:	4618      	mov	r0, r3
 800e3ba:	f7ff ffe7 	bl	800e38c <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 800e3be:	687b      	ldr	r3, [r7, #4]
 800e3c0:	4618      	mov	r0, r3
 800e3c2:	3708      	adds	r7, #8
 800e3c4:	46bd      	mov	sp, r7
 800e3c6:	bd80      	pop	{r7, pc}

0800e3c8 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1Ev>:
      _Variant_base()
 800e3c8:	b580      	push	{r7, lr}
 800e3ca:	b082      	sub	sp, #8
 800e3cc:	af00      	add	r7, sp, #0
 800e3ce:	6078      	str	r0, [r7, #4]
      : _Variant_base(in_place_index<0>) { }
 800e3d0:	4619      	mov	r1, r3
 800e3d2:	6878      	ldr	r0, [r7, #4]
 800e3d4:	f7ff ffe9 	bl	800e3aa <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 800e3d8:	687b      	ldr	r3, [r7, #4]
 800e3da:	4618      	mov	r0, r3
 800e3dc:	3708      	adds	r7, #8
 800e3de:	46bd      	mov	sp, r7
 800e3e0:	bd80      	pop	{r7, pc}

0800e3e2 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEED1Ev>:
 800e3e2:	b580      	push	{r7, lr}
 800e3e4:	b082      	sub	sp, #8
 800e3e6:	af00      	add	r7, sp, #0
 800e3e8:	6078      	str	r0, [r7, #4]
 800e3ea:	6878      	ldr	r0, [r7, #4]
 800e3ec:	f000 f96b 	bl	800e6c6 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISD_EEEEEED1Ev>
 800e3f0:	687b      	ldr	r3, [r7, #4]
 800e3f2:	4618      	mov	r0, r3
 800e3f4:	3708      	adds	r7, #8
 800e3f6:	46bd      	mov	sp, r7
 800e3f8:	bd80      	pop	{r7, pc}

0800e3fa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_M_eraseEPSt13_Rb_tree_nodeISG_E>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 800e3fa:	b580      	push	{r7, lr}
 800e3fc:	b084      	sub	sp, #16
 800e3fe:	af00      	add	r7, sp, #0
 800e400:	6078      	str	r0, [r7, #4]
 800e402:	6039      	str	r1, [r7, #0]
      while (__x != 0)
 800e404:	683b      	ldr	r3, [r7, #0]
 800e406:	2b00      	cmp	r3, #0
 800e408:	d012      	beq.n	800e430 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_M_eraseEPSt13_Rb_tree_nodeISG_E+0x36>
	  _M_erase(_S_right(__x));
 800e40a:	6838      	ldr	r0, [r7, #0]
 800e40c:	f000 f966 	bl	800e6dc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_S_rightEPSt18_Rb_tree_node_base>
 800e410:	4603      	mov	r3, r0
 800e412:	4619      	mov	r1, r3
 800e414:	6878      	ldr	r0, [r7, #4]
 800e416:	f7ff fff0 	bl	800e3fa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_M_eraseEPSt13_Rb_tree_nodeISG_E>
	  _Link_type __y = _S_left(__x);
 800e41a:	6838      	ldr	r0, [r7, #0]
 800e41c:	f000 f96a 	bl	800e6f4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE7_S_leftEPSt18_Rb_tree_node_base>
 800e420:	60f8      	str	r0, [r7, #12]
	  _M_drop_node(__x);
 800e422:	6839      	ldr	r1, [r7, #0]
 800e424:	6878      	ldr	r0, [r7, #4]
 800e426:	f000 f971 	bl	800e70c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE12_M_drop_nodeEPSt13_Rb_tree_nodeISG_E>
	  __x = __y;
 800e42a:	68fb      	ldr	r3, [r7, #12]
 800e42c:	603b      	str	r3, [r7, #0]
      while (__x != 0)
 800e42e:	e7e9      	b.n	800e404 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_M_eraseEPSt13_Rb_tree_nodeISG_E+0xa>
    }
 800e430:	bf00      	nop
 800e432:	3710      	adds	r7, #16
 800e434:	46bd      	mov	sp, r7
 800e436:	bd80      	pop	{r7, pc}

0800e438 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_M_beginEv>:
      _M_begin() _GLIBCXX_NOEXCEPT
 800e438:	b480      	push	{r7}
 800e43a:	b083      	sub	sp, #12
 800e43c:	af00      	add	r7, sp, #0
 800e43e:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
 800e440:	687b      	ldr	r3, [r7, #4]
 800e442:	689b      	ldr	r3, [r3, #8]
 800e444:	4618      	mov	r0, r3
 800e446:	370c      	adds	r7, #12
 800e448:	46bd      	mov	sp, r7
 800e44a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e44e:	4770      	bx	lr

0800e450 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE4findERS7_>:

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    typename _Rb_tree<_Key, _Val, _KeyOfValue,
		      _Compare, _Alloc>::iterator
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 800e450:	b590      	push	{r4, r7, lr}
 800e452:	b085      	sub	sp, #20
 800e454:	af00      	add	r7, sp, #0
 800e456:	6078      	str	r0, [r7, #4]
 800e458:	6039      	str	r1, [r7, #0]
    find(const _Key& __k)
    {
      iterator __j = _M_lower_bound(_M_begin(), _M_end(), __k);
 800e45a:	6878      	ldr	r0, [r7, #4]
 800e45c:	f7ff ffec 	bl	800e438 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_M_beginEv>
 800e460:	4604      	mov	r4, r0
 800e462:	6878      	ldr	r0, [r7, #4]
 800e464:	f000 f963 	bl	800e72e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE6_M_endEv>
 800e468:	4602      	mov	r2, r0
 800e46a:	683b      	ldr	r3, [r7, #0]
 800e46c:	4621      	mov	r1, r4
 800e46e:	6878      	ldr	r0, [r7, #4]
 800e470:	f000 f969 	bl	800e746 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE14_M_lower_boundEPSt13_Rb_tree_nodeISG_EPSt18_Rb_tree_node_baseRS7_>
 800e474:	4603      	mov	r3, r0
 800e476:	60bb      	str	r3, [r7, #8]
      return (__j == end()
 800e478:	6878      	ldr	r0, [r7, #4]
 800e47a:	f000 f825 	bl	800e4c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE3endEv>
 800e47e:	4603      	mov	r3, r0
 800e480:	60fb      	str	r3, [r7, #12]
 800e482:	f107 020c 	add.w	r2, r7, #12
 800e486:	f107 0308 	add.w	r3, r7, #8
 800e48a:	4611      	mov	r1, r2
 800e48c:	4618      	mov	r0, r3
 800e48e:	f000 f98b 	bl	800e7a8 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEESJ_>
 800e492:	4603      	mov	r3, r0
	      || _M_impl._M_key_compare(__k,
					_S_key(__j._M_node))) ? end() : __j;
 800e494:	2b00      	cmp	r3, #0
 800e496:	d10d      	bne.n	800e4b4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE4findERS7_+0x64>
	      || _M_impl._M_key_compare(__k,
 800e498:	687c      	ldr	r4, [r7, #4]
					_S_key(__j._M_node))) ? end() : __j;
 800e49a:	68bb      	ldr	r3, [r7, #8]
	      || _M_impl._M_key_compare(__k,
 800e49c:	4618      	mov	r0, r3
 800e49e:	f000 f997 	bl	800e7d0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE6_S_keyEPKSt18_Rb_tree_node_base>
 800e4a2:	4603      	mov	r3, r0
 800e4a4:	461a      	mov	r2, r3
 800e4a6:	6839      	ldr	r1, [r7, #0]
 800e4a8:	4620      	mov	r0, r4
 800e4aa:	f7f8 fb10 	bl	8006ace <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 800e4ae:	4603      	mov	r3, r0
 800e4b0:	2b00      	cmp	r3, #0
 800e4b2:	d004      	beq.n	800e4be <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE4findERS7_+0x6e>
					_S_key(__j._M_node))) ? end() : __j;
 800e4b4:	6878      	ldr	r0, [r7, #4]
 800e4b6:	f000 f807 	bl	800e4c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE3endEv>
 800e4ba:	4603      	mov	r3, r0
 800e4bc:	e000      	b.n	800e4c0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE4findERS7_+0x70>
 800e4be:	68bb      	ldr	r3, [r7, #8]
    }
 800e4c0:	4618      	mov	r0, r3
 800e4c2:	3714      	adds	r7, #20
 800e4c4:	46bd      	mov	sp, r7
 800e4c6:	bd90      	pop	{r4, r7, pc}

0800e4c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 800e4c8:	b580      	push	{r7, lr}
 800e4ca:	b084      	sub	sp, #16
 800e4cc:	af00      	add	r7, sp, #0
 800e4ce:	6078      	str	r0, [r7, #4]
      { return iterator(&this->_M_impl._M_header); }
 800e4d0:	687b      	ldr	r3, [r7, #4]
 800e4d2:	1d1a      	adds	r2, r3, #4
 800e4d4:	f107 030c 	add.w	r3, r7, #12
 800e4d8:	4611      	mov	r1, r2
 800e4da:	4618      	mov	r0, r3
 800e4dc:	f000 f984 	bl	800e7e8 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEC1EPSt18_Rb_tree_node_base>
 800e4e0:	68fb      	ldr	r3, [r7, #12]
 800e4e2:	4618      	mov	r0, r3
 800e4e4:	3710      	adds	r7, #16
 800e4e6:	46bd      	mov	sp, r7
 800e4e8:	bd80      	pop	{r7, pc}

0800e4ea <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEE9_M_valptrEv>:
      _M_valptr()
 800e4ea:	b580      	push	{r7, lr}
 800e4ec:	b082      	sub	sp, #8
 800e4ee:	af00      	add	r7, sp, #0
 800e4f0:	6078      	str	r0, [r7, #4]
      { return _M_storage._M_ptr(); }
 800e4f2:	687b      	ldr	r3, [r7, #4]
 800e4f4:	3310      	adds	r3, #16
 800e4f6:	4618      	mov	r0, r3
 800e4f8:	f000 f985 	bl	800e806 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEE6_M_ptrEv>
 800e4fc:	4603      	mov	r3, r0
 800e4fe:	4618      	mov	r0, r3
 800e500:	3708      	adds	r7, #8
 800e502:	46bd      	mov	sp, r7
 800e504:	bd80      	pop	{r7, pc}

0800e506 <_ZN9__gnu_cxx14__alloc_traitsISaIP10ExpressionES2_E17_S_select_on_copyERKS3_>:
    static _Alloc _S_select_on_copy(const _Alloc& __a)
 800e506:	b580      	push	{r7, lr}
 800e508:	b082      	sub	sp, #8
 800e50a:	af00      	add	r7, sp, #0
 800e50c:	6078      	str	r0, [r7, #4]
 800e50e:	6039      	str	r1, [r7, #0]
    { return _Base_type::select_on_container_copy_construction(__a); }
 800e510:	687b      	ldr	r3, [r7, #4]
 800e512:	6839      	ldr	r1, [r7, #0]
 800e514:	4618      	mov	r0, r3
 800e516:	f000 f982 	bl	800e81e <_ZNSt16allocator_traitsISaIP10ExpressionEE37select_on_container_copy_constructionERKS2_>
 800e51a:	6878      	ldr	r0, [r7, #4]
 800e51c:	3708      	adds	r7, #8
 800e51e:	46bd      	mov	sp, r7
 800e520:	bd80      	pop	{r7, pc}

0800e522 <_ZNKSt12_Vector_baseIP10ExpressionSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 800e522:	b480      	push	{r7}
 800e524:	b083      	sub	sp, #12
 800e526:	af00      	add	r7, sp, #0
 800e528:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 800e52a:	687b      	ldr	r3, [r7, #4]
 800e52c:	4618      	mov	r0, r3
 800e52e:	370c      	adds	r7, #12
 800e530:	46bd      	mov	sp, r7
 800e532:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e536:	4770      	bx	lr

0800e538 <_ZNSaIP10ExpressionED1Ev>:
 800e538:	b580      	push	{r7, lr}
 800e53a:	b082      	sub	sp, #8
 800e53c:	af00      	add	r7, sp, #0
 800e53e:	6078      	str	r0, [r7, #4]
 800e540:	6878      	ldr	r0, [r7, #4]
 800e542:	f000 f979 	bl	800e838 <_ZN9__gnu_cxx13new_allocatorIP10ExpressionED1Ev>
 800e546:	687b      	ldr	r3, [r7, #4]
 800e548:	4618      	mov	r0, r3
 800e54a:	3708      	adds	r7, #8
 800e54c:	46bd      	mov	sp, r7
 800e54e:	bd80      	pop	{r7, pc}

0800e550 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
 800e550:	b580      	push	{r7, lr}
 800e552:	b082      	sub	sp, #8
 800e554:	af00      	add	r7, sp, #0
 800e556:	6078      	str	r0, [r7, #4]
 800e558:	6878      	ldr	r0, [r7, #4]
 800e55a:	f7ff ffed 	bl	800e538 <_ZNSaIP10ExpressionED1Ev>
 800e55e:	687b      	ldr	r3, [r7, #4]
 800e560:	4618      	mov	r0, r3
 800e562:	3708      	adds	r7, #8
 800e564:	46bd      	mov	sp, r7
 800e566:	bd80      	pop	{r7, pc}

0800e568 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EEC1EjRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
 800e568:	b580      	push	{r7, lr}
 800e56a:	b084      	sub	sp, #16
 800e56c:	af00      	add	r7, sp, #0
 800e56e:	60f8      	str	r0, [r7, #12]
 800e570:	60b9      	str	r1, [r7, #8]
 800e572:	607a      	str	r2, [r7, #4]
      : _M_impl(__a)
 800e574:	68fb      	ldr	r3, [r7, #12]
 800e576:	6879      	ldr	r1, [r7, #4]
 800e578:	4618      	mov	r0, r3
 800e57a:	f000 f968 	bl	800e84e <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
 800e57e:	68b9      	ldr	r1, [r7, #8]
 800e580:	68f8      	ldr	r0, [r7, #12]
 800e582:	f000 f976 	bl	800e872 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE17_M_create_storageEj>
 800e586:	68fb      	ldr	r3, [r7, #12]
 800e588:	4618      	mov	r0, r3
 800e58a:	3710      	adds	r7, #16
 800e58c:	46bd      	mov	sp, r7
 800e58e:	bd80      	pop	{r7, pc}

0800e590 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
 800e590:	b580      	push	{r7, lr}
 800e592:	b082      	sub	sp, #8
 800e594:	af00      	add	r7, sp, #0
 800e596:	6078      	str	r0, [r7, #4]
	_M_deallocate(_M_impl._M_start,
 800e598:	687b      	ldr	r3, [r7, #4]
 800e59a:	6819      	ldr	r1, [r3, #0]
		      _M_impl._M_end_of_storage - _M_impl._M_start);
 800e59c:	687b      	ldr	r3, [r7, #4]
 800e59e:	689a      	ldr	r2, [r3, #8]
 800e5a0:	687b      	ldr	r3, [r7, #4]
 800e5a2:	681b      	ldr	r3, [r3, #0]
 800e5a4:	1ad3      	subs	r3, r2, r3
 800e5a6:	109b      	asrs	r3, r3, #2
	_M_deallocate(_M_impl._M_start,
 800e5a8:	461a      	mov	r2, r3
 800e5aa:	6878      	ldr	r0, [r7, #4]
 800e5ac:	f000 f97c 	bl	800e8a8 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE13_M_deallocateEPS1_j>
      }
 800e5b0:	687b      	ldr	r3, [r7, #4]
 800e5b2:	4618      	mov	r0, r3
 800e5b4:	f7ff ffcc 	bl	800e550 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE12_Vector_implD1Ev>
 800e5b8:	687b      	ldr	r3, [r7, #4]
 800e5ba:	4618      	mov	r0, r3
 800e5bc:	3708      	adds	r7, #8
 800e5be:	46bd      	mov	sp, r7
 800e5c0:	bd80      	pop	{r7, pc}

0800e5c2 <_ZNKSt6vectorIP10ExpressionSaIS1_EE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
 800e5c2:	b580      	push	{r7, lr}
 800e5c4:	b084      	sub	sp, #16
 800e5c6:	af00      	add	r7, sp, #0
 800e5c8:	6078      	str	r0, [r7, #4]
      { return const_iterator(this->_M_impl._M_start); }
 800e5ca:	687b      	ldr	r3, [r7, #4]
 800e5cc:	681b      	ldr	r3, [r3, #0]
 800e5ce:	60fb      	str	r3, [r7, #12]
 800e5d0:	f107 020c 	add.w	r2, r7, #12
 800e5d4:	f107 0308 	add.w	r3, r7, #8
 800e5d8:	4611      	mov	r1, r2
 800e5da:	4618      	mov	r0, r3
 800e5dc:	f000 f977 	bl	800e8ce <_ZN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS2_SaIS2_EEEC1ERKS4_>
 800e5e0:	68bb      	ldr	r3, [r7, #8]
 800e5e2:	4618      	mov	r0, r3
 800e5e4:	3710      	adds	r7, #16
 800e5e6:	46bd      	mov	sp, r7
 800e5e8:	bd80      	pop	{r7, pc}

0800e5ea <_ZNKSt6vectorIP10ExpressionSaIS1_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
 800e5ea:	b580      	push	{r7, lr}
 800e5ec:	b084      	sub	sp, #16
 800e5ee:	af00      	add	r7, sp, #0
 800e5f0:	6078      	str	r0, [r7, #4]
      { return const_iterator(this->_M_impl._M_finish); }
 800e5f2:	687b      	ldr	r3, [r7, #4]
 800e5f4:	685b      	ldr	r3, [r3, #4]
 800e5f6:	60fb      	str	r3, [r7, #12]
 800e5f8:	f107 020c 	add.w	r2, r7, #12
 800e5fc:	f107 0308 	add.w	r3, r7, #8
 800e600:	4611      	mov	r1, r2
 800e602:	4618      	mov	r0, r3
 800e604:	f000 f963 	bl	800e8ce <_ZN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS2_SaIS2_EEEC1ERKS4_>
 800e608:	68bb      	ldr	r3, [r7, #8]
 800e60a:	4618      	mov	r0, r3
 800e60c:	3710      	adds	r7, #16
 800e60e:	46bd      	mov	sp, r7
 800e610:	bd80      	pop	{r7, pc}

0800e612 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 800e612:	b480      	push	{r7}
 800e614:	b083      	sub	sp, #12
 800e616:	af00      	add	r7, sp, #0
 800e618:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 800e61a:	687b      	ldr	r3, [r7, #4]
 800e61c:	4618      	mov	r0, r3
 800e61e:	370c      	adds	r7, #12
 800e620:	46bd      	mov	sp, r7
 800e622:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e626:	4770      	bx	lr

0800e628 <_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
 800e628:	b580      	push	{r7, lr}
 800e62a:	b084      	sub	sp, #16
 800e62c:	af00      	add	r7, sp, #0
 800e62e:	60f8      	str	r0, [r7, #12]
 800e630:	60b9      	str	r1, [r7, #8]
 800e632:	607a      	str	r2, [r7, #4]
 800e634:	603b      	str	r3, [r7, #0]
    { return std::uninitialized_copy(__first, __last, __result); }
 800e636:	687a      	ldr	r2, [r7, #4]
 800e638:	68b9      	ldr	r1, [r7, #8]
 800e63a:	68f8      	ldr	r0, [r7, #12]
 800e63c:	f000 f957 	bl	800e8ee <_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_>
 800e640:	4603      	mov	r3, r0
 800e642:	4618      	mov	r0, r3
 800e644:	3710      	adds	r7, #16
 800e646:	46bd      	mov	sp, r7
 800e648:	bd80      	pop	{r7, pc}

0800e64a <_ZSt8_DestroyIPP10ExpressionS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 800e64a:	b580      	push	{r7, lr}
 800e64c:	b084      	sub	sp, #16
 800e64e:	af00      	add	r7, sp, #0
 800e650:	60f8      	str	r0, [r7, #12]
 800e652:	60b9      	str	r1, [r7, #8]
 800e654:	607a      	str	r2, [r7, #4]
      _Destroy(__first, __last);
 800e656:	68b9      	ldr	r1, [r7, #8]
 800e658:	68f8      	ldr	r0, [r7, #12]
 800e65a:	f000 f95a 	bl	800e912 <_ZSt8_DestroyIPP10ExpressionEvT_S3_>
    }
 800e65e:	bf00      	nop
 800e660:	3710      	adds	r7, #16
 800e662:	46bd      	mov	sp, r7
 800e664:	bd80      	pop	{r7, pc}

0800e666 <_ZNSt8__detail9__variant14_UninitializedIiLb1EEC1IJEEESt16in_place_index_tILj0EEDpOT_>:
	_Uninitialized(in_place_index_t<0>, _Args&&... __args)
 800e666:	b480      	push	{r7}
 800e668:	b083      	sub	sp, #12
 800e66a:	af00      	add	r7, sp, #0
 800e66c:	6078      	str	r0, [r7, #4]
 800e66e:	7039      	strb	r1, [r7, #0]
	: _M_storage(std::forward<_Args>(__args)...)
 800e670:	687b      	ldr	r3, [r7, #4]
 800e672:	2200      	movs	r2, #0
 800e674:	601a      	str	r2, [r3, #0]
	{ }
 800e676:	687b      	ldr	r3, [r7, #4]
 800e678:	4618      	mov	r0, r3
 800e67a:	370c      	adds	r7, #12
 800e67c:	46bd      	mov	sp, r7
 800e67e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e682:	4770      	bx	lr

0800e684 <_ZNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1IJEEESt16in_place_index_tILj0EEDpOT_>:
	constexpr _Variadic_union(in_place_index_t<0>, _Args&&... __args)
 800e684:	b580      	push	{r7, lr}
 800e686:	b082      	sub	sp, #8
 800e688:	af00      	add	r7, sp, #0
 800e68a:	6078      	str	r0, [r7, #4]
 800e68c:	7039      	strb	r1, [r7, #0]
	: _M_first(in_place_index<0>, std::forward<_Args>(__args)...)
 800e68e:	687b      	ldr	r3, [r7, #4]
 800e690:	4611      	mov	r1, r2
 800e692:	4618      	mov	r0, r3
 800e694:	f7ff ffe7 	bl	800e666 <_ZNSt8__detail9__variant14_UninitializedIiLb1EEC1IJEEESt16in_place_index_tILj0EEDpOT_>
	{ }
 800e698:	687b      	ldr	r3, [r7, #4]
 800e69a:	4618      	mov	r0, r3
 800e69c:	3708      	adds	r7, #8
 800e69e:	46bd      	mov	sp, r7
 800e6a0:	bd80      	pop	{r7, pc}

0800e6a2 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variant_storage(in_place_index_t<_Np>, _Args&&... __args)
 800e6a2:	b580      	push	{r7, lr}
 800e6a4:	b082      	sub	sp, #8
 800e6a6:	af00      	add	r7, sp, #0
 800e6a8:	6078      	str	r0, [r7, #4]
 800e6aa:	7039      	strb	r1, [r7, #0]
	_M_index(_Np)
 800e6ac:	687b      	ldr	r3, [r7, #4]
 800e6ae:	4611      	mov	r1, r2
 800e6b0:	4618      	mov	r0, r3
 800e6b2:	f7ff ffe7 	bl	800e684 <_ZNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1IJEEESt16in_place_index_tILj0EEDpOT_>
 800e6b6:	687b      	ldr	r3, [r7, #4]
 800e6b8:	2200      	movs	r2, #0
 800e6ba:	761a      	strb	r2, [r3, #24]
	{ }
 800e6bc:	687b      	ldr	r3, [r7, #4]
 800e6be:	4618      	mov	r0, r3
 800e6c0:	3708      	adds	r7, #8
 800e6c2:	46bd      	mov	sp, r7
 800e6c4:	bd80      	pop	{r7, pc}

0800e6c6 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISD_EEEEEED1Ev>:
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 800e6c6:	b480      	push	{r7}
 800e6c8:	b083      	sub	sp, #12
 800e6ca:	af00      	add	r7, sp, #0
 800e6cc:	6078      	str	r0, [r7, #4]
 800e6ce:	687b      	ldr	r3, [r7, #4]
 800e6d0:	4618      	mov	r0, r3
 800e6d2:	370c      	adds	r7, #12
 800e6d4:	46bd      	mov	sp, r7
 800e6d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e6da:	4770      	bx	lr

0800e6dc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_S_rightEPSt18_Rb_tree_node_base>:
      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 800e6dc:	b480      	push	{r7}
 800e6de:	b083      	sub	sp, #12
 800e6e0:	af00      	add	r7, sp, #0
 800e6e2:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(__x->_M_right); }
 800e6e4:	687b      	ldr	r3, [r7, #4]
 800e6e6:	68db      	ldr	r3, [r3, #12]
 800e6e8:	4618      	mov	r0, r3
 800e6ea:	370c      	adds	r7, #12
 800e6ec:	46bd      	mov	sp, r7
 800e6ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e6f2:	4770      	bx	lr

0800e6f4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE7_S_leftEPSt18_Rb_tree_node_base>:
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 800e6f4:	b480      	push	{r7}
 800e6f6:	b083      	sub	sp, #12
 800e6f8:	af00      	add	r7, sp, #0
 800e6fa:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(__x->_M_left); }
 800e6fc:	687b      	ldr	r3, [r7, #4]
 800e6fe:	689b      	ldr	r3, [r3, #8]
 800e700:	4618      	mov	r0, r3
 800e702:	370c      	adds	r7, #12
 800e704:	46bd      	mov	sp, r7
 800e706:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e70a:	4770      	bx	lr

0800e70c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE12_M_drop_nodeEPSt13_Rb_tree_nodeISG_E>:
      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 800e70c:	b580      	push	{r7, lr}
 800e70e:	b082      	sub	sp, #8
 800e710:	af00      	add	r7, sp, #0
 800e712:	6078      	str	r0, [r7, #4]
 800e714:	6039      	str	r1, [r7, #0]
	_M_destroy_node(__p);
 800e716:	6839      	ldr	r1, [r7, #0]
 800e718:	6878      	ldr	r0, [r7, #4]
 800e71a:	f000 f907 	bl	800e92c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeISG_E>
	_M_put_node(__p);
 800e71e:	6839      	ldr	r1, [r7, #0]
 800e720:	6878      	ldr	r0, [r7, #4]
 800e722:	f000 f918 	bl	800e956 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE11_M_put_nodeEPSt13_Rb_tree_nodeISG_E>
      }
 800e726:	bf00      	nop
 800e728:	3708      	adds	r7, #8
 800e72a:	46bd      	mov	sp, r7
 800e72c:	bd80      	pop	{r7, pc}

0800e72e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE6_M_endEv>:
      _M_end() _GLIBCXX_NOEXCEPT
 800e72e:	b480      	push	{r7}
 800e730:	b083      	sub	sp, #12
 800e732:	af00      	add	r7, sp, #0
 800e734:	6078      	str	r0, [r7, #4]
      { return &this->_M_impl._M_header; }
 800e736:	687b      	ldr	r3, [r7, #4]
 800e738:	3304      	adds	r3, #4
 800e73a:	4618      	mov	r0, r3
 800e73c:	370c      	adds	r7, #12
 800e73e:	46bd      	mov	sp, r7
 800e740:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e744:	4770      	bx	lr

0800e746 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE14_M_lower_boundEPSt13_Rb_tree_nodeISG_EPSt18_Rb_tree_node_baseRS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 800e746:	b590      	push	{r4, r7, lr}
 800e748:	b087      	sub	sp, #28
 800e74a:	af00      	add	r7, sp, #0
 800e74c:	60f8      	str	r0, [r7, #12]
 800e74e:	60b9      	str	r1, [r7, #8]
 800e750:	607a      	str	r2, [r7, #4]
 800e752:	603b      	str	r3, [r7, #0]
      while (__x != 0)
 800e754:	68bb      	ldr	r3, [r7, #8]
 800e756:	2b00      	cmp	r3, #0
 800e758:	d01b      	beq.n	800e792 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE14_M_lower_boundEPSt13_Rb_tree_nodeISG_EPSt18_Rb_tree_node_baseRS7_+0x4c>
	if (!_M_impl._M_key_compare(_S_key(__x), __k))
 800e75a:	68fc      	ldr	r4, [r7, #12]
 800e75c:	68b8      	ldr	r0, [r7, #8]
 800e75e:	f000 f90c 	bl	800e97a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE6_S_keyEPKSt13_Rb_tree_nodeISG_E>
 800e762:	4603      	mov	r3, r0
 800e764:	683a      	ldr	r2, [r7, #0]
 800e766:	4619      	mov	r1, r3
 800e768:	4620      	mov	r0, r4
 800e76a:	f7f8 f9b0 	bl	8006ace <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 800e76e:	4603      	mov	r3, r0
 800e770:	f083 0301 	eor.w	r3, r3, #1
 800e774:	b2db      	uxtb	r3, r3
 800e776:	2b00      	cmp	r3, #0
 800e778:	d006      	beq.n	800e788 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE14_M_lower_boundEPSt13_Rb_tree_nodeISG_EPSt18_Rb_tree_node_baseRS7_+0x42>
	  __y = __x, __x = _S_left(__x);
 800e77a:	68bb      	ldr	r3, [r7, #8]
 800e77c:	607b      	str	r3, [r7, #4]
 800e77e:	68b8      	ldr	r0, [r7, #8]
 800e780:	f7ff ffb8 	bl	800e6f4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE7_S_leftEPSt18_Rb_tree_node_base>
 800e784:	60b8      	str	r0, [r7, #8]
 800e786:	e7e5      	b.n	800e754 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE14_M_lower_boundEPSt13_Rb_tree_nodeISG_EPSt18_Rb_tree_node_baseRS7_+0xe>
	  __x = _S_right(__x);
 800e788:	68b8      	ldr	r0, [r7, #8]
 800e78a:	f7ff ffa7 	bl	800e6dc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_S_rightEPSt18_Rb_tree_node_base>
 800e78e:	60b8      	str	r0, [r7, #8]
      while (__x != 0)
 800e790:	e7e0      	b.n	800e754 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE14_M_lower_boundEPSt13_Rb_tree_nodeISG_EPSt18_Rb_tree_node_baseRS7_+0xe>
      return iterator(__y);
 800e792:	f107 0314 	add.w	r3, r7, #20
 800e796:	6879      	ldr	r1, [r7, #4]
 800e798:	4618      	mov	r0, r3
 800e79a:	f000 f825 	bl	800e7e8 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEC1EPSt18_Rb_tree_node_base>
 800e79e:	697b      	ldr	r3, [r7, #20]
    }
 800e7a0:	4618      	mov	r0, r3
 800e7a2:	371c      	adds	r7, #28
 800e7a4:	46bd      	mov	sp, r7
 800e7a6:	bd90      	pop	{r4, r7, pc}

0800e7a8 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEESJ_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 800e7a8:	b480      	push	{r7}
 800e7aa:	b083      	sub	sp, #12
 800e7ac:	af00      	add	r7, sp, #0
 800e7ae:	6078      	str	r0, [r7, #4]
 800e7b0:	6039      	str	r1, [r7, #0]
      { return __x._M_node == __y._M_node; }
 800e7b2:	687b      	ldr	r3, [r7, #4]
 800e7b4:	681a      	ldr	r2, [r3, #0]
 800e7b6:	683b      	ldr	r3, [r7, #0]
 800e7b8:	681b      	ldr	r3, [r3, #0]
 800e7ba:	429a      	cmp	r2, r3
 800e7bc:	bf0c      	ite	eq
 800e7be:	2301      	moveq	r3, #1
 800e7c0:	2300      	movne	r3, #0
 800e7c2:	b2db      	uxtb	r3, r3
 800e7c4:	4618      	mov	r0, r3
 800e7c6:	370c      	adds	r7, #12
 800e7c8:	46bd      	mov	sp, r7
 800e7ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e7ce:	4770      	bx	lr

0800e7d0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE6_S_keyEPKSt18_Rb_tree_node_base>:
      _S_key(_Const_Base_ptr __x)
 800e7d0:	b580      	push	{r7, lr}
 800e7d2:	b082      	sub	sp, #8
 800e7d4:	af00      	add	r7, sp, #0
 800e7d6:	6078      	str	r0, [r7, #4]
      { return _S_key(static_cast<_Const_Link_type>(__x)); }
 800e7d8:	6878      	ldr	r0, [r7, #4]
 800e7da:	f000 f8ce 	bl	800e97a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE6_S_keyEPKSt13_Rb_tree_nodeISG_E>
 800e7de:	4603      	mov	r3, r0
 800e7e0:	4618      	mov	r0, r3
 800e7e2:	3708      	adds	r7, #8
 800e7e4:	46bd      	mov	sp, r7
 800e7e6:	bd80      	pop	{r7, pc}

0800e7e8 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEC1EPSt18_Rb_tree_node_base>:
      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 800e7e8:	b480      	push	{r7}
 800e7ea:	b083      	sub	sp, #12
 800e7ec:	af00      	add	r7, sp, #0
 800e7ee:	6078      	str	r0, [r7, #4]
 800e7f0:	6039      	str	r1, [r7, #0]
      : _M_node(__x) { }
 800e7f2:	687b      	ldr	r3, [r7, #4]
 800e7f4:	683a      	ldr	r2, [r7, #0]
 800e7f6:	601a      	str	r2, [r3, #0]
 800e7f8:	687b      	ldr	r3, [r7, #4]
 800e7fa:	4618      	mov	r0, r3
 800e7fc:	370c      	adds	r7, #12
 800e7fe:	46bd      	mov	sp, r7
 800e800:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e804:	4770      	bx	lr

0800e806 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEE6_M_ptrEv>:
      _M_ptr() noexcept
 800e806:	b580      	push	{r7, lr}
 800e808:	b082      	sub	sp, #8
 800e80a:	af00      	add	r7, sp, #0
 800e80c:	6078      	str	r0, [r7, #4]
      { return static_cast<_Tp*>(_M_addr()); }
 800e80e:	6878      	ldr	r0, [r7, #4]
 800e810:	f000 f8c6 	bl	800e9a0 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEE7_M_addrEv>
 800e814:	4603      	mov	r3, r0
 800e816:	4618      	mov	r0, r3
 800e818:	3708      	adds	r7, #8
 800e81a:	46bd      	mov	sp, r7
 800e81c:	bd80      	pop	{r7, pc}

0800e81e <_ZNSt16allocator_traitsISaIP10ExpressionEE37select_on_container_copy_constructionERKS2_>:
      select_on_container_copy_construction(const allocator_type& __rhs)
 800e81e:	b580      	push	{r7, lr}
 800e820:	b082      	sub	sp, #8
 800e822:	af00      	add	r7, sp, #0
 800e824:	6078      	str	r0, [r7, #4]
 800e826:	6039      	str	r1, [r7, #0]
      { return __rhs; }
 800e828:	6839      	ldr	r1, [r7, #0]
 800e82a:	6878      	ldr	r0, [r7, #4]
 800e82c:	f000 f8c3 	bl	800e9b6 <_ZNSaIP10ExpressionEC1ERKS1_>
 800e830:	6878      	ldr	r0, [r7, #4]
 800e832:	3708      	adds	r7, #8
 800e834:	46bd      	mov	sp, r7
 800e836:	bd80      	pop	{r7, pc}

0800e838 <_ZN9__gnu_cxx13new_allocatorIP10ExpressionED1Ev>:
 800e838:	b480      	push	{r7}
 800e83a:	b083      	sub	sp, #12
 800e83c:	af00      	add	r7, sp, #0
 800e83e:	6078      	str	r0, [r7, #4]
 800e840:	687b      	ldr	r3, [r7, #4]
 800e842:	4618      	mov	r0, r3
 800e844:	370c      	adds	r7, #12
 800e846:	46bd      	mov	sp, r7
 800e848:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e84c:	4770      	bx	lr

0800e84e <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
 800e84e:	b580      	push	{r7, lr}
 800e850:	b082      	sub	sp, #8
 800e852:	af00      	add	r7, sp, #0
 800e854:	6078      	str	r0, [r7, #4]
 800e856:	6039      	str	r1, [r7, #0]
	: _Tp_alloc_type(__a)
 800e858:	6839      	ldr	r1, [r7, #0]
 800e85a:	6878      	ldr	r0, [r7, #4]
 800e85c:	f000 f8ab 	bl	800e9b6 <_ZNSaIP10ExpressionEC1ERKS1_>
 800e860:	687b      	ldr	r3, [r7, #4]
 800e862:	4618      	mov	r0, r3
 800e864:	f000 f8b5 	bl	800e9d2 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
 800e868:	687b      	ldr	r3, [r7, #4]
 800e86a:	4618      	mov	r0, r3
 800e86c:	3708      	adds	r7, #8
 800e86e:	46bd      	mov	sp, r7
 800e870:	bd80      	pop	{r7, pc}

0800e872 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE17_M_create_storageEj>:
      _M_create_storage(size_t __n)
 800e872:	b580      	push	{r7, lr}
 800e874:	b082      	sub	sp, #8
 800e876:	af00      	add	r7, sp, #0
 800e878:	6078      	str	r0, [r7, #4]
 800e87a:	6039      	str	r1, [r7, #0]
	this->_M_impl._M_start = this->_M_allocate(__n);
 800e87c:	6839      	ldr	r1, [r7, #0]
 800e87e:	6878      	ldr	r0, [r7, #4]
 800e880:	f000 f8bb 	bl	800e9fa <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE11_M_allocateEj>
 800e884:	4602      	mov	r2, r0
 800e886:	687b      	ldr	r3, [r7, #4]
 800e888:	601a      	str	r2, [r3, #0]
	this->_M_impl._M_finish = this->_M_impl._M_start;
 800e88a:	687b      	ldr	r3, [r7, #4]
 800e88c:	681a      	ldr	r2, [r3, #0]
 800e88e:	687b      	ldr	r3, [r7, #4]
 800e890:	605a      	str	r2, [r3, #4]
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 800e892:	687b      	ldr	r3, [r7, #4]
 800e894:	681a      	ldr	r2, [r3, #0]
 800e896:	683b      	ldr	r3, [r7, #0]
 800e898:	009b      	lsls	r3, r3, #2
 800e89a:	441a      	add	r2, r3
 800e89c:	687b      	ldr	r3, [r7, #4]
 800e89e:	609a      	str	r2, [r3, #8]
      }
 800e8a0:	bf00      	nop
 800e8a2:	3708      	adds	r7, #8
 800e8a4:	46bd      	mov	sp, r7
 800e8a6:	bd80      	pop	{r7, pc}

0800e8a8 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE13_M_deallocateEPS1_j>:
      _M_deallocate(pointer __p, size_t __n)
 800e8a8:	b580      	push	{r7, lr}
 800e8aa:	b084      	sub	sp, #16
 800e8ac:	af00      	add	r7, sp, #0
 800e8ae:	60f8      	str	r0, [r7, #12]
 800e8b0:	60b9      	str	r1, [r7, #8]
 800e8b2:	607a      	str	r2, [r7, #4]
	if (__p)
 800e8b4:	68bb      	ldr	r3, [r7, #8]
 800e8b6:	2b00      	cmp	r3, #0
 800e8b8:	d005      	beq.n	800e8c6 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE13_M_deallocateEPS1_j+0x1e>
	  _Tr::deallocate(_M_impl, __p, __n);
 800e8ba:	68fb      	ldr	r3, [r7, #12]
 800e8bc:	687a      	ldr	r2, [r7, #4]
 800e8be:	68b9      	ldr	r1, [r7, #8]
 800e8c0:	4618      	mov	r0, r3
 800e8c2:	f000 f8ae 	bl	800ea22 <_ZNSt16allocator_traitsISaIP10ExpressionEE10deallocateERS2_PS1_j>
      }
 800e8c6:	bf00      	nop
 800e8c8:	3710      	adds	r7, #16
 800e8ca:	46bd      	mov	sp, r7
 800e8cc:	bd80      	pop	{r7, pc}

0800e8ce <_ZN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS2_SaIS2_EEEC1ERKS4_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 800e8ce:	b480      	push	{r7}
 800e8d0:	b083      	sub	sp, #12
 800e8d2:	af00      	add	r7, sp, #0
 800e8d4:	6078      	str	r0, [r7, #4]
 800e8d6:	6039      	str	r1, [r7, #0]
      : _M_current(__i) { }
 800e8d8:	683b      	ldr	r3, [r7, #0]
 800e8da:	681a      	ldr	r2, [r3, #0]
 800e8dc:	687b      	ldr	r3, [r7, #4]
 800e8de:	601a      	str	r2, [r3, #0]
 800e8e0:	687b      	ldr	r3, [r7, #4]
 800e8e2:	4618      	mov	r0, r3
 800e8e4:	370c      	adds	r7, #12
 800e8e6:	46bd      	mov	sp, r7
 800e8e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e8ec:	4770      	bx	lr

0800e8ee <_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
 800e8ee:	b580      	push	{r7, lr}
 800e8f0:	b086      	sub	sp, #24
 800e8f2:	af00      	add	r7, sp, #0
 800e8f4:	60f8      	str	r0, [r7, #12]
 800e8f6:	60b9      	str	r1, [r7, #8]
 800e8f8:	607a      	str	r2, [r7, #4]
      const bool __assignable = is_assignable<_RefType2, _RefType1>::value;
 800e8fa:	2301      	movs	r3, #1
 800e8fc:	75fb      	strb	r3, [r7, #23]
	__uninit_copy(__first, __last, __result);
 800e8fe:	687a      	ldr	r2, [r7, #4]
 800e900:	68b9      	ldr	r1, [r7, #8]
 800e902:	68f8      	ldr	r0, [r7, #12]
 800e904:	f000 f89c 	bl	800ea40 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_>
 800e908:	4603      	mov	r3, r0
    }
 800e90a:	4618      	mov	r0, r3
 800e90c:	3718      	adds	r7, #24
 800e90e:	46bd      	mov	sp, r7
 800e910:	bd80      	pop	{r7, pc}

0800e912 <_ZSt8_DestroyIPP10ExpressionEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 800e912:	b580      	push	{r7, lr}
 800e914:	b082      	sub	sp, #8
 800e916:	af00      	add	r7, sp, #0
 800e918:	6078      	str	r0, [r7, #4]
 800e91a:	6039      	str	r1, [r7, #0]
	__destroy(__first, __last);
 800e91c:	6839      	ldr	r1, [r7, #0]
 800e91e:	6878      	ldr	r0, [r7, #4]
 800e920:	f000 f89e 	bl	800ea60 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP10ExpressionEEvT_S5_>
    }
 800e924:	bf00      	nop
 800e926:	3708      	adds	r7, #8
 800e928:	46bd      	mov	sp, r7
 800e92a:	bd80      	pop	{r7, pc}

0800e92c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeISG_E>:
      _M_destroy_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 800e92c:	b590      	push	{r4, r7, lr}
 800e92e:	b083      	sub	sp, #12
 800e930:	af00      	add	r7, sp, #0
 800e932:	6078      	str	r0, [r7, #4]
 800e934:	6039      	str	r1, [r7, #0]
	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
 800e936:	6878      	ldr	r0, [r7, #4]
 800e938:	f000 f89d 	bl	800ea76 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE21_M_get_Node_allocatorEv>
 800e93c:	4604      	mov	r4, r0
 800e93e:	6838      	ldr	r0, [r7, #0]
 800e940:	f7ff fdd3 	bl	800e4ea <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEE9_M_valptrEv>
 800e944:	4603      	mov	r3, r0
 800e946:	4619      	mov	r1, r3
 800e948:	4620      	mov	r0, r4
 800e94a:	f000 f89f 	bl	800ea8c <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEEEE7destroyISH_EEvRSJ_PT_>
      }
 800e94e:	bf00      	nop
 800e950:	370c      	adds	r7, #12
 800e952:	46bd      	mov	sp, r7
 800e954:	bd90      	pop	{r4, r7, pc}

0800e956 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE11_M_put_nodeEPSt13_Rb_tree_nodeISG_E>:
      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 800e956:	b580      	push	{r7, lr}
 800e958:	b082      	sub	sp, #8
 800e95a:	af00      	add	r7, sp, #0
 800e95c:	6078      	str	r0, [r7, #4]
 800e95e:	6039      	str	r1, [r7, #0]
      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
 800e960:	6878      	ldr	r0, [r7, #4]
 800e962:	f000 f888 	bl	800ea76 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE21_M_get_Node_allocatorEv>
 800e966:	4603      	mov	r3, r0
 800e968:	2201      	movs	r2, #1
 800e96a:	6839      	ldr	r1, [r7, #0]
 800e96c:	4618      	mov	r0, r3
 800e96e:	f000 f89a 	bl	800eaa6 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEEEE10deallocateERSJ_PSI_j>
 800e972:	bf00      	nop
 800e974:	3708      	adds	r7, #8
 800e976:	46bd      	mov	sp, r7
 800e978:	bd80      	pop	{r7, pc}

0800e97a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE6_S_keyEPKSt13_Rb_tree_nodeISG_E>:
      _S_key(_Const_Link_type __x)
 800e97a:	b580      	push	{r7, lr}
 800e97c:	b084      	sub	sp, #16
 800e97e:	af00      	add	r7, sp, #0
 800e980:	6078      	str	r0, [r7, #4]
	return _KeyOfValue()(*__x->_M_valptr());
 800e982:	6878      	ldr	r0, [r7, #4]
 800e984:	f000 f89e 	bl	800eac4 <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEE9_M_valptrEv>
 800e988:	4602      	mov	r2, r0
 800e98a:	f107 030c 	add.w	r3, r7, #12
 800e98e:	4611      	mov	r1, r2
 800e990:	4618      	mov	r0, r3
 800e992:	f000 f8a5 	bl	800eae0 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEclERKSG_>
 800e996:	4603      	mov	r3, r0
      }
 800e998:	4618      	mov	r0, r3
 800e99a:	3710      	adds	r7, #16
 800e99c:	46bd      	mov	sp, r7
 800e99e:	bd80      	pop	{r7, pc}

0800e9a0 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEE7_M_addrEv>:
      _M_addr() noexcept
 800e9a0:	b480      	push	{r7}
 800e9a2:	b083      	sub	sp, #12
 800e9a4:	af00      	add	r7, sp, #0
 800e9a6:	6078      	str	r0, [r7, #4]
      { return static_cast<void*>(&_M_storage); }
 800e9a8:	687b      	ldr	r3, [r7, #4]
 800e9aa:	4618      	mov	r0, r3
 800e9ac:	370c      	adds	r7, #12
 800e9ae:	46bd      	mov	sp, r7
 800e9b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e9b4:	4770      	bx	lr

0800e9b6 <_ZNSaIP10ExpressionEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
 800e9b6:	b580      	push	{r7, lr}
 800e9b8:	b082      	sub	sp, #8
 800e9ba:	af00      	add	r7, sp, #0
 800e9bc:	6078      	str	r0, [r7, #4]
 800e9be:	6039      	str	r1, [r7, #0]
      : __allocator_base<_Tp>(__a) { }
 800e9c0:	6839      	ldr	r1, [r7, #0]
 800e9c2:	6878      	ldr	r0, [r7, #4]
 800e9c4:	f000 f898 	bl	800eaf8 <_ZN9__gnu_cxx13new_allocatorIP10ExpressionEC1ERKS3_>
 800e9c8:	687b      	ldr	r3, [r7, #4]
 800e9ca:	4618      	mov	r0, r3
 800e9cc:	3708      	adds	r7, #8
 800e9ce:	46bd      	mov	sp, r7
 800e9d0:	bd80      	pop	{r7, pc}

0800e9d2 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
 800e9d2:	b480      	push	{r7}
 800e9d4:	b083      	sub	sp, #12
 800e9d6:	af00      	add	r7, sp, #0
 800e9d8:	6078      	str	r0, [r7, #4]
	: _M_start(), _M_finish(), _M_end_of_storage()
 800e9da:	687b      	ldr	r3, [r7, #4]
 800e9dc:	2200      	movs	r2, #0
 800e9de:	601a      	str	r2, [r3, #0]
 800e9e0:	687b      	ldr	r3, [r7, #4]
 800e9e2:	2200      	movs	r2, #0
 800e9e4:	605a      	str	r2, [r3, #4]
 800e9e6:	687b      	ldr	r3, [r7, #4]
 800e9e8:	2200      	movs	r2, #0
 800e9ea:	609a      	str	r2, [r3, #8]
	{ }
 800e9ec:	687b      	ldr	r3, [r7, #4]
 800e9ee:	4618      	mov	r0, r3
 800e9f0:	370c      	adds	r7, #12
 800e9f2:	46bd      	mov	sp, r7
 800e9f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e9f8:	4770      	bx	lr

0800e9fa <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE11_M_allocateEj>:
      _M_allocate(size_t __n)
 800e9fa:	b580      	push	{r7, lr}
 800e9fc:	b082      	sub	sp, #8
 800e9fe:	af00      	add	r7, sp, #0
 800ea00:	6078      	str	r0, [r7, #4]
 800ea02:	6039      	str	r1, [r7, #0]
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 800ea04:	683b      	ldr	r3, [r7, #0]
 800ea06:	2b00      	cmp	r3, #0
 800ea08:	d006      	beq.n	800ea18 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE11_M_allocateEj+0x1e>
 800ea0a:	687b      	ldr	r3, [r7, #4]
 800ea0c:	6839      	ldr	r1, [r7, #0]
 800ea0e:	4618      	mov	r0, r3
 800ea10:	f000 f87e 	bl	800eb10 <_ZNSt16allocator_traitsISaIP10ExpressionEE8allocateERS2_j>
 800ea14:	4603      	mov	r3, r0
 800ea16:	e000      	b.n	800ea1a <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE11_M_allocateEj+0x20>
 800ea18:	2300      	movs	r3, #0
      }
 800ea1a:	4618      	mov	r0, r3
 800ea1c:	3708      	adds	r7, #8
 800ea1e:	46bd      	mov	sp, r7
 800ea20:	bd80      	pop	{r7, pc}

0800ea22 <_ZNSt16allocator_traitsISaIP10ExpressionEE10deallocateERS2_PS1_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 800ea22:	b580      	push	{r7, lr}
 800ea24:	b084      	sub	sp, #16
 800ea26:	af00      	add	r7, sp, #0
 800ea28:	60f8      	str	r0, [r7, #12]
 800ea2a:	60b9      	str	r1, [r7, #8]
 800ea2c:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 800ea2e:	687a      	ldr	r2, [r7, #4]
 800ea30:	68b9      	ldr	r1, [r7, #8]
 800ea32:	68f8      	ldr	r0, [r7, #12]
 800ea34:	f000 f87b 	bl	800eb2e <_ZN9__gnu_cxx13new_allocatorIP10ExpressionE10deallocateEPS2_j>
 800ea38:	bf00      	nop
 800ea3a:	3710      	adds	r7, #16
 800ea3c:	46bd      	mov	sp, r7
 800ea3e:	bd80      	pop	{r7, pc}

0800ea40 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
 800ea40:	b580      	push	{r7, lr}
 800ea42:	b084      	sub	sp, #16
 800ea44:	af00      	add	r7, sp, #0
 800ea46:	60f8      	str	r0, [r7, #12]
 800ea48:	60b9      	str	r1, [r7, #8]
 800ea4a:	607a      	str	r2, [r7, #4]
        { return std::copy(__first, __last, __result); }
 800ea4c:	687a      	ldr	r2, [r7, #4]
 800ea4e:	68b9      	ldr	r1, [r7, #8]
 800ea50:	68f8      	ldr	r0, [r7, #12]
 800ea52:	f000 f878 	bl	800eb46 <_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_>
 800ea56:	4603      	mov	r3, r0
 800ea58:	4618      	mov	r0, r3
 800ea5a:	3710      	adds	r7, #16
 800ea5c:	46bd      	mov	sp, r7
 800ea5e:	bd80      	pop	{r7, pc}

0800ea60 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP10ExpressionEEvT_S5_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
 800ea60:	b480      	push	{r7}
 800ea62:	b083      	sub	sp, #12
 800ea64:	af00      	add	r7, sp, #0
 800ea66:	6078      	str	r0, [r7, #4]
 800ea68:	6039      	str	r1, [r7, #0]
 800ea6a:	bf00      	nop
 800ea6c:	370c      	adds	r7, #12
 800ea6e:	46bd      	mov	sp, r7
 800ea70:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ea74:	4770      	bx	lr

0800ea76 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE21_M_get_Node_allocatorEv>:
      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
 800ea76:	b480      	push	{r7}
 800ea78:	b083      	sub	sp, #12
 800ea7a:	af00      	add	r7, sp, #0
 800ea7c:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 800ea7e:	687b      	ldr	r3, [r7, #4]
 800ea80:	4618      	mov	r0, r3
 800ea82:	370c      	adds	r7, #12
 800ea84:	46bd      	mov	sp, r7
 800ea86:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ea8a:	4770      	bx	lr

0800ea8c <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEEEE7destroyISH_EEvRSJ_PT_>:
	destroy(allocator_type& __a, _Up* __p)
 800ea8c:	b580      	push	{r7, lr}
 800ea8e:	b082      	sub	sp, #8
 800ea90:	af00      	add	r7, sp, #0
 800ea92:	6078      	str	r0, [r7, #4]
 800ea94:	6039      	str	r1, [r7, #0]
	{ __a.destroy(__p); }
 800ea96:	6839      	ldr	r1, [r7, #0]
 800ea98:	6878      	ldr	r0, [r7, #4]
 800ea9a:	f000 f879 	bl	800eb90 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISD_EEEEEE7destroyISI_EEvPT_>
 800ea9e:	bf00      	nop
 800eaa0:	3708      	adds	r7, #8
 800eaa2:	46bd      	mov	sp, r7
 800eaa4:	bd80      	pop	{r7, pc}

0800eaa6 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEEEE10deallocateERSJ_PSI_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 800eaa6:	b580      	push	{r7, lr}
 800eaa8:	b084      	sub	sp, #16
 800eaaa:	af00      	add	r7, sp, #0
 800eaac:	60f8      	str	r0, [r7, #12]
 800eaae:	60b9      	str	r1, [r7, #8]
 800eab0:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 800eab2:	687a      	ldr	r2, [r7, #4]
 800eab4:	68b9      	ldr	r1, [r7, #8]
 800eab6:	68f8      	ldr	r0, [r7, #12]
 800eab8:	f000 f876 	bl	800eba8 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISD_EEEEEE10deallocateEPSJ_j>
 800eabc:	bf00      	nop
 800eabe:	3710      	adds	r7, #16
 800eac0:	46bd      	mov	sp, r7
 800eac2:	bd80      	pop	{r7, pc}

0800eac4 <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEE9_M_valptrEv>:
      _M_valptr() const
 800eac4:	b580      	push	{r7, lr}
 800eac6:	b082      	sub	sp, #8
 800eac8:	af00      	add	r7, sp, #0
 800eaca:	6078      	str	r0, [r7, #4]
      { return _M_storage._M_ptr(); }
 800eacc:	687b      	ldr	r3, [r7, #4]
 800eace:	3310      	adds	r3, #16
 800ead0:	4618      	mov	r0, r3
 800ead2:	f000 f875 	bl	800ebc0 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEE6_M_ptrEv>
 800ead6:	4603      	mov	r3, r0
 800ead8:	4618      	mov	r0, r3
 800eada:	3708      	adds	r7, #8
 800eadc:	46bd      	mov	sp, r7
 800eade:	bd80      	pop	{r7, pc}

0800eae0 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEclERKSG_>:
      operator()(const _Pair& __x) const
 800eae0:	b480      	push	{r7}
 800eae2:	b083      	sub	sp, #12
 800eae4:	af00      	add	r7, sp, #0
 800eae6:	6078      	str	r0, [r7, #4]
 800eae8:	6039      	str	r1, [r7, #0]
      { return __x.first; }
 800eaea:	683b      	ldr	r3, [r7, #0]
 800eaec:	4618      	mov	r0, r3
 800eaee:	370c      	adds	r7, #12
 800eaf0:	46bd      	mov	sp, r7
 800eaf2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800eaf6:	4770      	bx	lr

0800eaf8 <_ZN9__gnu_cxx13new_allocatorIP10ExpressionEC1ERKS3_>:
      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
 800eaf8:	b480      	push	{r7}
 800eafa:	b083      	sub	sp, #12
 800eafc:	af00      	add	r7, sp, #0
 800eafe:	6078      	str	r0, [r7, #4]
 800eb00:	6039      	str	r1, [r7, #0]
 800eb02:	687b      	ldr	r3, [r7, #4]
 800eb04:	4618      	mov	r0, r3
 800eb06:	370c      	adds	r7, #12
 800eb08:	46bd      	mov	sp, r7
 800eb0a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800eb0e:	4770      	bx	lr

0800eb10 <_ZNSt16allocator_traitsISaIP10ExpressionEE8allocateERS2_j>:
      allocate(allocator_type& __a, size_type __n)
 800eb10:	b580      	push	{r7, lr}
 800eb12:	b082      	sub	sp, #8
 800eb14:	af00      	add	r7, sp, #0
 800eb16:	6078      	str	r0, [r7, #4]
 800eb18:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 800eb1a:	2200      	movs	r2, #0
 800eb1c:	6839      	ldr	r1, [r7, #0]
 800eb1e:	6878      	ldr	r0, [r7, #4]
 800eb20:	f000 f85a 	bl	800ebd8 <_ZN9__gnu_cxx13new_allocatorIP10ExpressionE8allocateEjPKv>
 800eb24:	4603      	mov	r3, r0
 800eb26:	4618      	mov	r0, r3
 800eb28:	3708      	adds	r7, #8
 800eb2a:	46bd      	mov	sp, r7
 800eb2c:	bd80      	pop	{r7, pc}

0800eb2e <_ZN9__gnu_cxx13new_allocatorIP10ExpressionE10deallocateEPS2_j>:
      deallocate(pointer __p, size_type)
 800eb2e:	b580      	push	{r7, lr}
 800eb30:	b084      	sub	sp, #16
 800eb32:	af00      	add	r7, sp, #0
 800eb34:	60f8      	str	r0, [r7, #12]
 800eb36:	60b9      	str	r1, [r7, #8]
 800eb38:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 800eb3a:	68b8      	ldr	r0, [r7, #8]
 800eb3c:	f014 fcc8 	bl	80234d0 <_ZdlPv>
      }
 800eb40:	3710      	adds	r7, #16
 800eb42:	46bd      	mov	sp, r7
 800eb44:	bd80      	pop	{r7, pc}

0800eb46 <_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_>:
    copy(_II __first, _II __last, _OI __result)
 800eb46:	b590      	push	{r4, r7, lr}
 800eb48:	b085      	sub	sp, #20
 800eb4a:	af00      	add	r7, sp, #0
 800eb4c:	60f8      	str	r0, [r7, #12]
 800eb4e:	60b9      	str	r1, [r7, #8]
 800eb50:	607a      	str	r2, [r7, #4]
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
 800eb52:	68f8      	ldr	r0, [r7, #12]
 800eb54:	f000 f85f 	bl	800ec16 <_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS3_SaIS3_EEEEET_SA_>
 800eb58:	4604      	mov	r4, r0
 800eb5a:	68b8      	ldr	r0, [r7, #8]
 800eb5c:	f000 f85b 	bl	800ec16 <_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS3_SaIS3_EEEEET_SA_>
 800eb60:	4603      	mov	r3, r0
 800eb62:	687a      	ldr	r2, [r7, #4]
 800eb64:	4619      	mov	r1, r3
 800eb66:	4620      	mov	r0, r4
 800eb68:	f000 f860 	bl	800ec2c <_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS3_SaIS3_EEEEPS3_ET1_T0_SC_SB_>
 800eb6c:	4603      	mov	r3, r0
    }
 800eb6e:	4618      	mov	r0, r3
 800eb70:	3714      	adds	r7, #20
 800eb72:	46bd      	mov	sp, r7
 800eb74:	bd90      	pop	{r4, r7, pc}

0800eb76 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISA_EEEED1Ev>:
    struct pair
 800eb76:	b580      	push	{r7, lr}
 800eb78:	b082      	sub	sp, #8
 800eb7a:	af00      	add	r7, sp, #0
 800eb7c:	6078      	str	r0, [r7, #4]
 800eb7e:	687b      	ldr	r3, [r7, #4]
 800eb80:	4618      	mov	r0, r3
 800eb82:	f014 ff5a 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800eb86:	687b      	ldr	r3, [r7, #4]
 800eb88:	4618      	mov	r0, r3
 800eb8a:	3708      	adds	r7, #8
 800eb8c:	46bd      	mov	sp, r7
 800eb8e:	bd80      	pop	{r7, pc}

0800eb90 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISD_EEEEEE7destroyISI_EEvPT_>:
	destroy(_Up* __p)
 800eb90:	b580      	push	{r7, lr}
 800eb92:	b082      	sub	sp, #8
 800eb94:	af00      	add	r7, sp, #0
 800eb96:	6078      	str	r0, [r7, #4]
 800eb98:	6039      	str	r1, [r7, #0]
	{ __p->~_Up(); }
 800eb9a:	6838      	ldr	r0, [r7, #0]
 800eb9c:	f7ff ffeb 	bl	800eb76 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISA_EEEED1Ev>
 800eba0:	bf00      	nop
 800eba2:	3708      	adds	r7, #8
 800eba4:	46bd      	mov	sp, r7
 800eba6:	bd80      	pop	{r7, pc}

0800eba8 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISD_EEEEEE10deallocateEPSJ_j>:
      deallocate(pointer __p, size_type)
 800eba8:	b580      	push	{r7, lr}
 800ebaa:	b084      	sub	sp, #16
 800ebac:	af00      	add	r7, sp, #0
 800ebae:	60f8      	str	r0, [r7, #12]
 800ebb0:	60b9      	str	r1, [r7, #8]
 800ebb2:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 800ebb4:	68b8      	ldr	r0, [r7, #8]
 800ebb6:	f014 fc8b 	bl	80234d0 <_ZdlPv>
      }
 800ebba:	3710      	adds	r7, #16
 800ebbc:	46bd      	mov	sp, r7
 800ebbe:	bd80      	pop	{r7, pc}

0800ebc0 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEE6_M_ptrEv>:
      _M_ptr() const noexcept
 800ebc0:	b580      	push	{r7, lr}
 800ebc2:	b082      	sub	sp, #8
 800ebc4:	af00      	add	r7, sp, #0
 800ebc6:	6078      	str	r0, [r7, #4]
      { return static_cast<const _Tp*>(_M_addr()); }
 800ebc8:	6878      	ldr	r0, [r7, #4]
 800ebca:	f000 f852 	bl	800ec72 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEE7_M_addrEv>
 800ebce:	4603      	mov	r3, r0
 800ebd0:	4618      	mov	r0, r3
 800ebd2:	3708      	adds	r7, #8
 800ebd4:	46bd      	mov	sp, r7
 800ebd6:	bd80      	pop	{r7, pc}

0800ebd8 <_ZN9__gnu_cxx13new_allocatorIP10ExpressionE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 800ebd8:	b580      	push	{r7, lr}
 800ebda:	b084      	sub	sp, #16
 800ebdc:	af00      	add	r7, sp, #0
 800ebde:	60f8      	str	r0, [r7, #12]
 800ebe0:	60b9      	str	r1, [r7, #8]
 800ebe2:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 800ebe4:	68f8      	ldr	r0, [r7, #12]
 800ebe6:	f000 f84f 	bl	800ec88 <_ZNK9__gnu_cxx13new_allocatorIP10ExpressionE8max_sizeEv>
 800ebea:	4602      	mov	r2, r0
 800ebec:	68bb      	ldr	r3, [r7, #8]
 800ebee:	4293      	cmp	r3, r2
 800ebf0:	bf8c      	ite	hi
 800ebf2:	2301      	movhi	r3, #1
 800ebf4:	2300      	movls	r3, #0
 800ebf6:	b2db      	uxtb	r3, r3
 800ebf8:	2b00      	cmp	r3, #0
 800ebfa:	d001      	beq.n	800ec00 <_ZN9__gnu_cxx13new_allocatorIP10ExpressionE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 800ebfc:	f014 fd40 	bl	8023680 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 800ec00:	68bb      	ldr	r3, [r7, #8]
 800ec02:	009b      	lsls	r3, r3, #2
 800ec04:	4618      	mov	r0, r3
 800ec06:	f014 fc76 	bl	80234f6 <_Znwj>
 800ec0a:	4603      	mov	r3, r0
 800ec0c:	bf00      	nop
      }
 800ec0e:	4618      	mov	r0, r3
 800ec10:	3710      	adds	r7, #16
 800ec12:	46bd      	mov	sp, r7
 800ec14:	bd80      	pop	{r7, pc}

0800ec16 <_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS3_SaIS3_EEEEET_SA_>:
    __miter_base(_Iterator __it)
 800ec16:	b480      	push	{r7}
 800ec18:	b083      	sub	sp, #12
 800ec1a:	af00      	add	r7, sp, #0
 800ec1c:	6078      	str	r0, [r7, #4]
    { return __it; }
 800ec1e:	687b      	ldr	r3, [r7, #4]
 800ec20:	4618      	mov	r0, r3
 800ec22:	370c      	adds	r7, #12
 800ec24:	46bd      	mov	sp, r7
 800ec26:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ec2a:	4770      	bx	lr

0800ec2c <_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS3_SaIS3_EEEEPS3_ET1_T0_SC_SB_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
 800ec2c:	b5b0      	push	{r4, r5, r7, lr}
 800ec2e:	b084      	sub	sp, #16
 800ec30:	af00      	add	r7, sp, #0
 800ec32:	60f8      	str	r0, [r7, #12]
 800ec34:	60b9      	str	r1, [r7, #8]
 800ec36:	607a      	str	r2, [r7, #4]
      return std::__niter_wrap(__result,
 800ec38:	68f8      	ldr	r0, [r7, #12]
 800ec3a:	f000 f831 	bl	800eca0 <_ZSt12__niter_baseIPKP10ExpressionSt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS7_T0_EE>
 800ec3e:	4604      	mov	r4, r0
 800ec40:	68b8      	ldr	r0, [r7, #8]
 800ec42:	f000 f82d 	bl	800eca0 <_ZSt12__niter_baseIPKP10ExpressionSt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS7_T0_EE>
 800ec46:	4605      	mov	r5, r0
 800ec48:	687b      	ldr	r3, [r7, #4]
 800ec4a:	4618      	mov	r0, r3
 800ec4c:	f000 f836 	bl	800ecbc <_ZSt12__niter_baseIPP10ExpressionET_S3_>
 800ec50:	4603      	mov	r3, r0
 800ec52:	461a      	mov	r2, r3
 800ec54:	4629      	mov	r1, r5
 800ec56:	4620      	mov	r0, r4
 800ec58:	f000 f83b 	bl	800ecd2 <_ZSt13__copy_move_aILb0EPKP10ExpressionPS1_ET1_T0_S6_S5_>
 800ec5c:	4602      	mov	r2, r0
 800ec5e:	1d3b      	adds	r3, r7, #4
 800ec60:	4611      	mov	r1, r2
 800ec62:	4618      	mov	r0, r3
 800ec64:	f000 f847 	bl	800ecf6 <_ZSt12__niter_wrapIPP10ExpressionET_RKS3_S3_>
 800ec68:	4603      	mov	r3, r0
    }
 800ec6a:	4618      	mov	r0, r3
 800ec6c:	3710      	adds	r7, #16
 800ec6e:	46bd      	mov	sp, r7
 800ec70:	bdb0      	pop	{r4, r5, r7, pc}

0800ec72 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEE7_M_addrEv>:
      _M_addr() const noexcept
 800ec72:	b480      	push	{r7}
 800ec74:	b083      	sub	sp, #12
 800ec76:	af00      	add	r7, sp, #0
 800ec78:	6078      	str	r0, [r7, #4]
      { return static_cast<const void*>(&_M_storage); }
 800ec7a:	687b      	ldr	r3, [r7, #4]
 800ec7c:	4618      	mov	r0, r3
 800ec7e:	370c      	adds	r7, #12
 800ec80:	46bd      	mov	sp, r7
 800ec82:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ec86:	4770      	bx	lr

0800ec88 <_ZNK9__gnu_cxx13new_allocatorIP10ExpressionE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 800ec88:	b480      	push	{r7}
 800ec8a:	b083      	sub	sp, #12
 800ec8c:	af00      	add	r7, sp, #0
 800ec8e:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 800ec90:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
      }
 800ec94:	4618      	mov	r0, r3
 800ec96:	370c      	adds	r7, #12
 800ec98:	46bd      	mov	sp, r7
 800ec9a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ec9e:	4770      	bx	lr

0800eca0 <_ZSt12__niter_baseIPKP10ExpressionSt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS7_T0_EE>:
    __niter_base(__gnu_cxx::__normal_iterator<_Iterator, _Container> __it)
 800eca0:	b580      	push	{r7, lr}
 800eca2:	b082      	sub	sp, #8
 800eca4:	af00      	add	r7, sp, #0
 800eca6:	6078      	str	r0, [r7, #4]
    { return __it.base(); }
 800eca8:	1d3b      	adds	r3, r7, #4
 800ecaa:	4618      	mov	r0, r3
 800ecac:	f000 f82f 	bl	800ed0e <_ZNK9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS2_SaIS2_EEE4baseEv>
 800ecb0:	4603      	mov	r3, r0
 800ecb2:	681b      	ldr	r3, [r3, #0]
 800ecb4:	4618      	mov	r0, r3
 800ecb6:	3708      	adds	r7, #8
 800ecb8:	46bd      	mov	sp, r7
 800ecba:	bd80      	pop	{r7, pc}

0800ecbc <_ZSt12__niter_baseIPP10ExpressionET_S3_>:
    __niter_base(_Iterator __it)
 800ecbc:	b480      	push	{r7}
 800ecbe:	b083      	sub	sp, #12
 800ecc0:	af00      	add	r7, sp, #0
 800ecc2:	6078      	str	r0, [r7, #4]
    { return __it; }
 800ecc4:	687b      	ldr	r3, [r7, #4]
 800ecc6:	4618      	mov	r0, r3
 800ecc8:	370c      	adds	r7, #12
 800ecca:	46bd      	mov	sp, r7
 800eccc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ecd0:	4770      	bx	lr

0800ecd2 <_ZSt13__copy_move_aILb0EPKP10ExpressionPS1_ET1_T0_S6_S5_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
 800ecd2:	b580      	push	{r7, lr}
 800ecd4:	b086      	sub	sp, #24
 800ecd6:	af00      	add	r7, sp, #0
 800ecd8:	60f8      	str	r0, [r7, #12]
 800ecda:	60b9      	str	r1, [r7, #8]
 800ecdc:	607a      	str	r2, [r7, #4]
      const bool __simple = (__is_trivially_copyable(_ValueTypeI)
 800ecde:	2301      	movs	r3, #1
 800ece0:	75fb      	strb	r3, [r7, #23]
			      _Category>::__copy_m(__first, __last, __result);
 800ece2:	687a      	ldr	r2, [r7, #4]
 800ece4:	68b9      	ldr	r1, [r7, #8]
 800ece6:	68f8      	ldr	r0, [r7, #12]
 800ece8:	f000 f81c 	bl	800ed24 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP10ExpressionEEPT_PKS5_S8_S6_>
 800ecec:	4603      	mov	r3, r0
    }
 800ecee:	4618      	mov	r0, r3
 800ecf0:	3718      	adds	r7, #24
 800ecf2:	46bd      	mov	sp, r7
 800ecf4:	bd80      	pop	{r7, pc}

0800ecf6 <_ZSt12__niter_wrapIPP10ExpressionET_RKS3_S3_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
 800ecf6:	b480      	push	{r7}
 800ecf8:	b083      	sub	sp, #12
 800ecfa:	af00      	add	r7, sp, #0
 800ecfc:	6078      	str	r0, [r7, #4]
 800ecfe:	6039      	str	r1, [r7, #0]
    { return __res; }
 800ed00:	683b      	ldr	r3, [r7, #0]
 800ed02:	4618      	mov	r0, r3
 800ed04:	370c      	adds	r7, #12
 800ed06:	46bd      	mov	sp, r7
 800ed08:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ed0c:	4770      	bx	lr

0800ed0e <_ZNK9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
 800ed0e:	b480      	push	{r7}
 800ed10:	b083      	sub	sp, #12
 800ed12:	af00      	add	r7, sp, #0
 800ed14:	6078      	str	r0, [r7, #4]
      { return _M_current; }
 800ed16:	687b      	ldr	r3, [r7, #4]
 800ed18:	4618      	mov	r0, r3
 800ed1a:	370c      	adds	r7, #12
 800ed1c:	46bd      	mov	sp, r7
 800ed1e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ed22:	4770      	bx	lr

0800ed24 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP10ExpressionEEPT_PKS5_S8_S6_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
 800ed24:	b580      	push	{r7, lr}
 800ed26:	b086      	sub	sp, #24
 800ed28:	af00      	add	r7, sp, #0
 800ed2a:	60f8      	str	r0, [r7, #12]
 800ed2c:	60b9      	str	r1, [r7, #8]
 800ed2e:	607a      	str	r2, [r7, #4]
	  const ptrdiff_t _Num = __last - __first;
 800ed30:	68ba      	ldr	r2, [r7, #8]
 800ed32:	68fb      	ldr	r3, [r7, #12]
 800ed34:	1ad3      	subs	r3, r2, r3
 800ed36:	109b      	asrs	r3, r3, #2
 800ed38:	617b      	str	r3, [r7, #20]
	  if (_Num)
 800ed3a:	697b      	ldr	r3, [r7, #20]
 800ed3c:	2b00      	cmp	r3, #0
 800ed3e:	d006      	beq.n	800ed4e <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP10ExpressionEEPT_PKS5_S8_S6_+0x2a>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 800ed40:	697b      	ldr	r3, [r7, #20]
 800ed42:	009b      	lsls	r3, r3, #2
 800ed44:	461a      	mov	r2, r3
 800ed46:	68f9      	ldr	r1, [r7, #12]
 800ed48:	6878      	ldr	r0, [r7, #4]
 800ed4a:	f016 f88f 	bl	8024e6c <memmove>
	  return __result + _Num;
 800ed4e:	697b      	ldr	r3, [r7, #20]
 800ed50:	009b      	lsls	r3, r3, #2
 800ed52:	687a      	ldr	r2, [r7, #4]
 800ed54:	4413      	add	r3, r2
	}
 800ed56:	4618      	mov	r0, r3
 800ed58:	3718      	adds	r7, #24
 800ed5a:	46bd      	mov	sp, r7
 800ed5c:	bd80      	pop	{r7, pc}
	...

0800ed60 <_Z41__static_initialization_and_destruction_0ii>:
 800ed60:	b590      	push	{r4, r7, lr}
 800ed62:	b0e7      	sub	sp, #412	; 0x19c
 800ed64:	af02      	add	r7, sp, #8
 800ed66:	1d3b      	adds	r3, r7, #4
 800ed68:	6018      	str	r0, [r3, #0]
 800ed6a:	463b      	mov	r3, r7
 800ed6c:	6019      	str	r1, [r3, #0]
 800ed6e:	1d3b      	adds	r3, r7, #4
 800ed70:	681b      	ldr	r3, [r3, #0]
 800ed72:	2b01      	cmp	r3, #1
 800ed74:	f040 819d 	bne.w	800f0b2 <_Z41__static_initialization_and_destruction_0ii+0x352>
 800ed78:	463b      	mov	r3, r7
 800ed7a:	681b      	ldr	r3, [r3, #0]
 800ed7c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800ed80:	4293      	cmp	r3, r2
 800ed82:	f040 8196 	bne.w	800f0b2 <_Z41__static_initialization_and_destruction_0ii+0x352>
};
 800ed86:	f107 0314 	add.w	r3, r7, #20
 800ed8a:	4618      	mov	r0, r3
 800ed8c:	2322      	movs	r3, #34	; 0x22
 800ed8e:	461a      	mov	r2, r3
 800ed90:	2100      	movs	r1, #0
 800ed92:	f016 f885 	bl	8024ea0 <memset>
 800ed96:	f107 0314 	add.w	r3, r7, #20
 800ed9a:	223a      	movs	r2, #58	; 0x3a
 800ed9c:	701a      	strb	r2, [r3, #0]
 800ed9e:	f107 0314 	add.w	r3, r7, #20
 800eda2:	2201      	movs	r2, #1
 800eda4:	705a      	strb	r2, [r3, #1]
 800eda6:	f107 0314 	add.w	r3, r7, #20
 800edaa:	220a      	movs	r2, #10
 800edac:	709a      	strb	r2, [r3, #2]
 800edae:	f107 0314 	add.w	r3, r7, #20
 800edb2:	220a      	movs	r2, #10
 800edb4:	70da      	strb	r2, [r3, #3]
 800edb6:	f107 0314 	add.w	r3, r7, #20
 800edba:	222c      	movs	r2, #44	; 0x2c
 800edbc:	711a      	strb	r2, [r3, #4]
 800edbe:	f107 0314 	add.w	r3, r7, #20
 800edc2:	220c      	movs	r2, #12
 800edc4:	715a      	strb	r2, [r3, #5]
 800edc6:	f107 0314 	add.w	r3, r7, #20
 800edca:	222e      	movs	r2, #46	; 0x2e
 800edcc:	719a      	strb	r2, [r3, #6]
 800edce:	f107 0314 	add.w	r3, r7, #20
 800edd2:	220b      	movs	r2, #11
 800edd4:	71da      	strb	r2, [r3, #7]
 800edd6:	f107 0314 	add.w	r3, r7, #20
 800edda:	225b      	movs	r2, #91	; 0x5b
 800eddc:	721a      	strb	r2, [r3, #8]
 800edde:	f107 0314 	add.w	r3, r7, #20
 800ede2:	220d      	movs	r2, #13
 800ede4:	725a      	strb	r2, [r3, #9]
 800ede6:	f107 0314 	add.w	r3, r7, #20
 800edea:	225d      	movs	r2, #93	; 0x5d
 800edec:	729a      	strb	r2, [r3, #10]
 800edee:	f107 0314 	add.w	r3, r7, #20
 800edf2:	220e      	movs	r2, #14
 800edf4:	72da      	strb	r2, [r3, #11]
 800edf6:	f107 0314 	add.w	r3, r7, #20
 800edfa:	227c      	movs	r2, #124	; 0x7c
 800edfc:	731a      	strb	r2, [r3, #12]
 800edfe:	f107 0314 	add.w	r3, r7, #20
 800ee02:	2215      	movs	r2, #21
 800ee04:	735a      	strb	r2, [r3, #13]
 800ee06:	f107 0314 	add.w	r3, r7, #20
 800ee0a:	2226      	movs	r2, #38	; 0x26
 800ee0c:	739a      	strb	r2, [r3, #14]
 800ee0e:	f107 0314 	add.w	r3, r7, #20
 800ee12:	2216      	movs	r2, #22
 800ee14:	73da      	strb	r2, [r3, #15]
 800ee16:	f107 0314 	add.w	r3, r7, #20
 800ee1a:	222b      	movs	r2, #43	; 0x2b
 800ee1c:	741a      	strb	r2, [r3, #16]
 800ee1e:	f107 0314 	add.w	r3, r7, #20
 800ee22:	221f      	movs	r2, #31
 800ee24:	745a      	strb	r2, [r3, #17]
 800ee26:	f107 0314 	add.w	r3, r7, #20
 800ee2a:	222d      	movs	r2, #45	; 0x2d
 800ee2c:	749a      	strb	r2, [r3, #18]
 800ee2e:	f107 0314 	add.w	r3, r7, #20
 800ee32:	2220      	movs	r2, #32
 800ee34:	74da      	strb	r2, [r3, #19]
 800ee36:	f107 0314 	add.w	r3, r7, #20
 800ee3a:	222a      	movs	r2, #42	; 0x2a
 800ee3c:	751a      	strb	r2, [r3, #20]
 800ee3e:	f107 0314 	add.w	r3, r7, #20
 800ee42:	2221      	movs	r2, #33	; 0x21
 800ee44:	755a      	strb	r2, [r3, #21]
 800ee46:	f107 0314 	add.w	r3, r7, #20
 800ee4a:	222f      	movs	r2, #47	; 0x2f
 800ee4c:	759a      	strb	r2, [r3, #22]
 800ee4e:	f107 0314 	add.w	r3, r7, #20
 800ee52:	2222      	movs	r2, #34	; 0x22
 800ee54:	75da      	strb	r2, [r3, #23]
 800ee56:	f107 0314 	add.w	r3, r7, #20
 800ee5a:	225e      	movs	r2, #94	; 0x5e
 800ee5c:	761a      	strb	r2, [r3, #24]
 800ee5e:	f107 0314 	add.w	r3, r7, #20
 800ee62:	2223      	movs	r2, #35	; 0x23
 800ee64:	765a      	strb	r2, [r3, #25]
 800ee66:	f107 0314 	add.w	r3, r7, #20
 800ee6a:	2225      	movs	r2, #37	; 0x25
 800ee6c:	769a      	strb	r2, [r3, #26]
 800ee6e:	f107 0314 	add.w	r3, r7, #20
 800ee72:	2224      	movs	r2, #36	; 0x24
 800ee74:	76da      	strb	r2, [r3, #27]
 800ee76:	f107 0314 	add.w	r3, r7, #20
 800ee7a:	2228      	movs	r2, #40	; 0x28
 800ee7c:	771a      	strb	r2, [r3, #28]
 800ee7e:	f107 0314 	add.w	r3, r7, #20
 800ee82:	2226      	movs	r2, #38	; 0x26
 800ee84:	775a      	strb	r2, [r3, #29]
 800ee86:	f107 0314 	add.w	r3, r7, #20
 800ee8a:	2229      	movs	r2, #41	; 0x29
 800ee8c:	779a      	strb	r2, [r3, #30]
 800ee8e:	f107 0314 	add.w	r3, r7, #20
 800ee92:	2227      	movs	r2, #39	; 0x27
 800ee94:	77da      	strb	r2, [r3, #31]
 800ee96:	f107 0314 	add.w	r3, r7, #20
 800ee9a:	2225      	movs	r2, #37	; 0x25
 800ee9c:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 800eea0:	f107 030c 	add.w	r3, r7, #12
 800eea4:	f107 0214 	add.w	r2, r7, #20
 800eea8:	601a      	str	r2, [r3, #0]
 800eeaa:	f107 030c 	add.w	r3, r7, #12
 800eeae:	2211      	movs	r2, #17
 800eeb0:	605a      	str	r2, [r3, #4]
 800eeb2:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800eeb6:	4618      	mov	r0, r3
 800eeb8:	f7f2 ff14 	bl	8001ce4 <_ZNSaISt4pairIKc10token_typeEEC1Ev>
 800eebc:	f107 0138 	add.w	r1, r7, #56	; 0x38
 800eec0:	f107 020c 	add.w	r2, r7, #12
 800eec4:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800eec8:	9300      	str	r3, [sp, #0]
 800eeca:	460b      	mov	r3, r1
 800eecc:	ca06      	ldmia	r2, {r1, r2}
 800eece:	4885      	ldr	r0, [pc, #532]	; (800f0e4 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 800eed0:	f7f2 ff20 	bl	8001d14 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 800eed4:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800eed8:	4618      	mov	r0, r3
 800eeda:	f7f2 ff0f 	bl	8001cfc <_ZNSaISt4pairIKc10token_typeEED1Ev>
	{"true", TOKEN_TRUE},
 800eede:	2305      	movs	r3, #5
 800eee0:	f887 3162 	strb.w	r3, [r7, #354]	; 0x162
};
 800eee4:	f507 72b1 	add.w	r2, r7, #354	; 0x162
 800eee8:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800eeec:	497e      	ldr	r1, [pc, #504]	; (800f0e8 <_Z41__static_initialization_and_destruction_0ii+0x388>)
 800eeee:	4618      	mov	r0, r3
 800eef0:	f7f2 f902 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"false", TOKEN_FALSE},
 800eef4:	2306      	movs	r3, #6
 800eef6:	f887 3163 	strb.w	r3, [r7, #355]	; 0x163
};
 800eefa:	f207 1263 	addw	r2, r7, #355	; 0x163
 800eefe:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800ef02:	331c      	adds	r3, #28
 800ef04:	4979      	ldr	r1, [pc, #484]	; (800f0ec <_Z41__static_initialization_and_destruction_0ii+0x38c>)
 800ef06:	4618      	mov	r0, r3
 800ef08:	f7f2 f91e 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"setup", TOKEN_SETUP},
 800ef0c:	2307      	movs	r3, #7
 800ef0e:	f887 3164 	strb.w	r3, [r7, #356]	; 0x164
};
 800ef12:	f507 72b2 	add.w	r2, r7, #356	; 0x164
 800ef16:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800ef1a:	3338      	adds	r3, #56	; 0x38
 800ef1c:	4974      	ldr	r1, [pc, #464]	; (800f0f0 <_Z41__static_initialization_and_destruction_0ii+0x390>)
 800ef1e:	4618      	mov	r0, r3
 800ef20:	f7f2 f912 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"loop", TOKEN_LOOP},
 800ef24:	2308      	movs	r3, #8
 800ef26:	f887 3165 	strb.w	r3, [r7, #357]	; 0x165
};
 800ef2a:	f207 1265 	addw	r2, r7, #357	; 0x165
 800ef2e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800ef32:	3354      	adds	r3, #84	; 0x54
 800ef34:	496f      	ldr	r1, [pc, #444]	; (800f0f4 <_Z41__static_initialization_and_destruction_0ii+0x394>)
 800ef36:	4618      	mov	r0, r3
 800ef38:	f7f2 f8de 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"finish", TOKEN_FINISH},
 800ef3c:	2309      	movs	r3, #9
 800ef3e:	f887 3166 	strb.w	r3, [r7, #358]	; 0x166
};
 800ef42:	f507 72b3 	add.w	r2, r7, #358	; 0x166
 800ef46:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800ef4a:	3370      	adds	r3, #112	; 0x70
 800ef4c:	496a      	ldr	r1, [pc, #424]	; (800f0f8 <_Z41__static_initialization_and_destruction_0ii+0x398>)
 800ef4e:	4618      	mov	r0, r3
 800ef50:	f7f2 f922 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"if", TOKEN_IF},
 800ef54:	2310      	movs	r3, #16
 800ef56:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167
};
 800ef5a:	f207 1267 	addw	r2, r7, #359	; 0x167
 800ef5e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800ef62:	338c      	adds	r3, #140	; 0x8c
 800ef64:	4965      	ldr	r1, [pc, #404]	; (800f0fc <_Z41__static_initialization_and_destruction_0ii+0x39c>)
 800ef66:	4618      	mov	r0, r3
 800ef68:	f7f2 f93e 	bl	80011e8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>
	{"elseif", TOKEN_ELSEIF},
 800ef6c:	2311      	movs	r3, #17
 800ef6e:	f887 3168 	strb.w	r3, [r7, #360]	; 0x168
};
 800ef72:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 800ef76:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800ef7a:	33a8      	adds	r3, #168	; 0xa8
 800ef7c:	4960      	ldr	r1, [pc, #384]	; (800f100 <_Z41__static_initialization_and_destruction_0ii+0x3a0>)
 800ef7e:	4618      	mov	r0, r3
 800ef80:	f7f2 f90a 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"else", TOKEN_ELSE},
 800ef84:	2312      	movs	r3, #18
 800ef86:	f887 3169 	strb.w	r3, [r7, #361]	; 0x169
};
 800ef8a:	f207 1269 	addw	r2, r7, #361	; 0x169
 800ef8e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800ef92:	33c4      	adds	r3, #196	; 0xc4
 800ef94:	495b      	ldr	r1, [pc, #364]	; (800f104 <_Z41__static_initialization_and_destruction_0ii+0x3a4>)
 800ef96:	4618      	mov	r0, r3
 800ef98:	f7f2 f8ae 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"while", TOKEN_WHILE},
 800ef9c:	2313      	movs	r3, #19
 800ef9e:	f887 316a 	strb.w	r3, [r7, #362]	; 0x16a
};
 800efa2:	f507 72b5 	add.w	r2, r7, #362	; 0x16a
 800efa6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800efaa:	33e0      	adds	r3, #224	; 0xe0
 800efac:	4956      	ldr	r1, [pc, #344]	; (800f108 <_Z41__static_initialization_and_destruction_0ii+0x3a8>)
 800efae:	4618      	mov	r0, r3
 800efb0:	f7f2 f8ca 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"end", TOKEN_END},
 800efb4:	2314      	movs	r3, #20
 800efb6:	f887 316b 	strb.w	r3, [r7, #363]	; 0x16b
};
 800efba:	f207 126b 	addw	r2, r7, #363	; 0x16b
 800efbe:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800efc2:	33fc      	adds	r3, #252	; 0xfc
 800efc4:	4951      	ldr	r1, [pc, #324]	; (800f10c <_Z41__static_initialization_and_destruction_0ii+0x3ac>)
 800efc6:	4618      	mov	r0, r3
 800efc8:	f7f2 f936 	bl	8001238 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>
 800efcc:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800efd0:	f107 0248 	add.w	r2, r7, #72	; 0x48
 800efd4:	601a      	str	r2, [r3, #0]
 800efd6:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800efda:	220a      	movs	r2, #10
 800efdc:	605a      	str	r2, [r3, #4]
 800efde:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800efe2:	4618      	mov	r0, r3
 800efe4:	f7f2 ff23 	bl	8001e2e <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 800efe8:	f507 71b6 	add.w	r1, r7, #364	; 0x16c
 800efec:	f107 0240 	add.w	r2, r7, #64	; 0x40
 800eff0:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800eff4:	9300      	str	r3, [sp, #0]
 800eff6:	460b      	mov	r3, r1
 800eff8:	ca06      	ldmia	r2, {r1, r2}
 800effa:	4845      	ldr	r0, [pc, #276]	; (800f110 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 800effc:	f7f2 ff2f 	bl	8001e5e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>
 800f000:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800f004:	4618      	mov	r0, r3
 800f006:	f7f2 ff1e 	bl	8001e46 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 800f00a:	f107 0448 	add.w	r4, r7, #72	; 0x48
 800f00e:	f504 748c 	add.w	r4, r4, #280	; 0x118
 800f012:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800f016:	429c      	cmp	r4, r3
 800f018:	d004      	beq.n	800f024 <_Z41__static_initialization_and_destruction_0ii+0x2c4>
 800f01a:	3c1c      	subs	r4, #28
 800f01c:	4620      	mov	r0, r4
 800f01e:	f7f2 f85e 	bl	80010de <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 800f022:	e7f6      	b.n	800f012 <_Z41__static_initialization_and_destruction_0ii+0x2b2>
};
 800f024:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 800f028:	2200      	movs	r2, #0
 800f02a:	601a      	str	r2, [r3, #0]
 800f02c:	605a      	str	r2, [r3, #4]
 800f02e:	609a      	str	r2, [r3, #8]
 800f030:	233c      	movs	r3, #60	; 0x3c
 800f032:	f887 317c 	strb.w	r3, [r7, #380]	; 0x17c
 800f036:	231b      	movs	r3, #27
 800f038:	f887 317d 	strb.w	r3, [r7, #381]	; 0x17d
 800f03c:	231c      	movs	r3, #28
 800f03e:	f887 317e 	strb.w	r3, [r7, #382]	; 0x17e
 800f042:	233e      	movs	r3, #62	; 0x3e
 800f044:	f887 317f 	strb.w	r3, [r7, #383]	; 0x17f
 800f048:	2319      	movs	r3, #25
 800f04a:	f887 3180 	strb.w	r3, [r7, #384]	; 0x180
 800f04e:	231a      	movs	r3, #26
 800f050:	f887 3181 	strb.w	r3, [r7, #385]	; 0x181
 800f054:	233d      	movs	r3, #61	; 0x3d
 800f056:	f887 3182 	strb.w	r3, [r7, #386]	; 0x182
 800f05a:	2318      	movs	r3, #24
 800f05c:	f887 3183 	strb.w	r3, [r7, #387]	; 0x183
 800f060:	231d      	movs	r3, #29
 800f062:	f887 3184 	strb.w	r3, [r7, #388]	; 0x184
 800f066:	2321      	movs	r3, #33	; 0x21
 800f068:	f887 3185 	strb.w	r3, [r7, #389]	; 0x185
 800f06c:	2317      	movs	r3, #23
 800f06e:	f887 3186 	strb.w	r3, [r7, #390]	; 0x186
 800f072:	231e      	movs	r3, #30
 800f074:	f887 3187 	strb.w	r3, [r7, #391]	; 0x187
 800f078:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 800f07c:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 800f080:	2304      	movs	r3, #4
 800f082:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 800f086:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 800f08a:	4618      	mov	r0, r3
 800f08c:	f7f2 ff17 	bl	8001ebe <_ZNSaISt4pairIKc12double_tokenEEC1Ev>
 800f090:	f507 72c4 	add.w	r2, r7, #392	; 0x188
 800f094:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 800f098:	9300      	str	r3, [sp, #0]
 800f09a:	4613      	mov	r3, r2
 800f09c:	f507 72ba 	add.w	r2, r7, #372	; 0x174
 800f0a0:	ca06      	ldmia	r2, {r1, r2}
 800f0a2:	481c      	ldr	r0, [pc, #112]	; (800f114 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 800f0a4:	f7f2 ff23 	bl	8001eee <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 800f0a8:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 800f0ac:	4618      	mov	r0, r3
 800f0ae:	f7f2 ff12 	bl	8001ed6 <_ZNSaISt4pairIKc12double_tokenEED1Ev>
static const std::map<char, double_token> token_double_chars
 800f0b2:	1d3b      	adds	r3, r7, #4
 800f0b4:	681b      	ldr	r3, [r3, #0]
 800f0b6:	2b00      	cmp	r3, #0
 800f0b8:	d10e      	bne.n	800f0d8 <_Z41__static_initialization_and_destruction_0ii+0x378>
 800f0ba:	463b      	mov	r3, r7
 800f0bc:	681b      	ldr	r3, [r3, #0]
 800f0be:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800f0c2:	4293      	cmp	r3, r2
 800f0c4:	d108      	bne.n	800f0d8 <_Z41__static_initialization_and_destruction_0ii+0x378>
 800f0c6:	4813      	ldr	r0, [pc, #76]	; (800f114 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 800f0c8:	f7fa fbdc 	bl	8009884 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>
static const std::map<std::string, token_type> token_strings
 800f0cc:	4810      	ldr	r0, [pc, #64]	; (800f110 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 800f0ce:	f7fa fbe6 	bl	800989e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
static const std::map<char, token_type> token_chars
 800f0d2:	4804      	ldr	r0, [pc, #16]	; (800f0e4 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 800f0d4:	f7fa fbf0 	bl	80098b8 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>
 800f0d8:	bf00      	nop
 800f0da:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 800f0de:	46bd      	mov	sp, r7
 800f0e0:	bd90      	pop	{r4, r7, pc}
 800f0e2:	bf00      	nop
 800f0e4:	200002ec 	.word	0x200002ec
 800f0e8:	0802968c 	.word	0x0802968c
 800f0ec:	08029694 	.word	0x08029694
 800f0f0:	0802969c 	.word	0x0802969c
 800f0f4:	080296a4 	.word	0x080296a4
 800f0f8:	080296ac 	.word	0x080296ac
 800f0fc:	080296b4 	.word	0x080296b4
 800f100:	080296b8 	.word	0x080296b8
 800f104:	080296c0 	.word	0x080296c0
 800f108:	080296c8 	.word	0x080296c8
 800f10c:	080296d0 	.word	0x080296d0
 800f110:	20000304 	.word	0x20000304
 800f114:	2000031c 	.word	0x2000031c

0800f118 <_GLOBAL__sub_I__ZN16Function_handler12run_functionEP13Function_call>:
 800f118:	b580      	push	{r7, lr}
 800f11a:	af00      	add	r7, sp, #0
 800f11c:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800f120:	2001      	movs	r0, #1
 800f122:	f7ff fe1d 	bl	800ed60 <_Z41__static_initialization_and_destruction_0ii>
 800f126:	bd80      	pop	{r7, pc}

0800f128 <_GLOBAL__sub_D__ZN16Function_handler12run_functionEP13Function_call>:
 800f128:	b580      	push	{r7, lr}
 800f12a:	af00      	add	r7, sp, #0
 800f12c:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800f130:	2000      	movs	r0, #0
 800f132:	f7ff fe15 	bl	800ed60 <_Z41__static_initialization_and_destruction_0ii>
 800f136:	bd80      	pop	{r7, pc}

0800f138 <_ZNSt7__cxx114stoiERKNS_12basic_stringIcSt11char_traitsIcESaIcEEEPji>:

#if _GLIBCXX_USE_C99_STDLIB
  // 21.4 Numeric Conversions [string.conversions].
  inline int
  stoi(const string& __str, size_t* __idx = 0, int __base = 10)
  { return __gnu_cxx::__stoa<long, int>(&std::strtol, "stoi", __str.c_str(),
 800f138:	b580      	push	{r7, lr}
 800f13a:	b086      	sub	sp, #24
 800f13c:	af02      	add	r7, sp, #8
 800f13e:	60f8      	str	r0, [r7, #12]
 800f140:	60b9      	str	r1, [r7, #8]
 800f142:	607a      	str	r2, [r7, #4]
 800f144:	68f8      	ldr	r0, [r7, #12]
 800f146:	f014 fe21 	bl	8023d8c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
 800f14a:	4602      	mov	r2, r0
 800f14c:	687b      	ldr	r3, [r7, #4]
 800f14e:	9300      	str	r3, [sp, #0]
 800f150:	68bb      	ldr	r3, [r7, #8]
 800f152:	4904      	ldr	r1, [pc, #16]	; (800f164 <_ZNSt7__cxx114stoiERKNS_12basic_stringIcSt11char_traitsIcESaIcEEEPji+0x2c>)
 800f154:	4804      	ldr	r0, [pc, #16]	; (800f168 <_ZNSt7__cxx114stoiERKNS_12basic_stringIcSt11char_traitsIcESaIcEEEPji+0x30>)
 800f156:	f000 fd18 	bl	800fb8a <_ZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_>
 800f15a:	4603      	mov	r3, r0
					__idx, __base); }
 800f15c:	4618      	mov	r0, r3
 800f15e:	3710      	adds	r7, #16
 800f160:	46bd      	mov	sp, r7
 800f162:	bd80      	pop	{r7, pc}
 800f164:	080296d4 	.word	0x080296d4
 800f168:	08026789 	.word	0x08026789

0800f16c <_ZNSt7__cxx114stofERKNS_12basic_stringIcSt11char_traitsIcESaIcEEEPj>:
			     __idx, __base); }

  // NB: strtof vs strtod.
  inline float
  stof(const string& __str, size_t* __idx = 0)
  { return __gnu_cxx::__stoa(&std::strtof, "stof", __str.c_str(), __idx); }
 800f16c:	b580      	push	{r7, lr}
 800f16e:	b082      	sub	sp, #8
 800f170:	af00      	add	r7, sp, #0
 800f172:	6078      	str	r0, [r7, #4]
 800f174:	6039      	str	r1, [r7, #0]
 800f176:	6878      	ldr	r0, [r7, #4]
 800f178:	f014 fe08 	bl	8023d8c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
 800f17c:	4602      	mov	r2, r0
 800f17e:	683b      	ldr	r3, [r7, #0]
 800f180:	4905      	ldr	r1, [pc, #20]	; (800f198 <_ZNSt7__cxx114stofERKNS_12basic_stringIcSt11char_traitsIcESaIcEEEPj+0x2c>)
 800f182:	4806      	ldr	r0, [pc, #24]	; (800f19c <_ZNSt7__cxx114stofERKNS_12basic_stringIcSt11char_traitsIcESaIcEEEPj+0x30>)
 800f184:	f000 fd81 	bl	800fc8a <_ZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_>
 800f188:	eef0 7a40 	vmov.f32	s15, s0
 800f18c:	eeb0 0a67 	vmov.f32	s0, s15
 800f190:	3708      	adds	r7, #8
 800f192:	46bd      	mov	sp, r7
 800f194:	bd80      	pop	{r7, pc}
 800f196:	bf00      	nop
 800f198:	080296dc 	.word	0x080296dc
 800f19c:	080265cd 	.word	0x080265cd

0800f1a0 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>:
    struct _Copy_ctor_base : _Variant_storage_alias<_Types...>
 800f1a0:	b580      	push	{r7, lr}
 800f1a2:	b082      	sub	sp, #8
 800f1a4:	af00      	add	r7, sp, #0
 800f1a6:	6078      	str	r0, [r7, #4]
 800f1a8:	687b      	ldr	r3, [r7, #4]
 800f1aa:	4618      	mov	r0, r3
 800f1ac:	f000 fe0e 	bl	800fdcc <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>
 800f1b0:	687b      	ldr	r3, [r7, #4]
 800f1b2:	4618      	mov	r0, r3
 800f1b4:	3708      	adds	r7, #8
 800f1b6:	46bd      	mov	sp, r7
 800f1b8:	bd80      	pop	{r7, pc}

0800f1ba <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>:
    struct _Move_ctor_base : _Copy_ctor_alias<_Types...>
 800f1ba:	b580      	push	{r7, lr}
 800f1bc:	b082      	sub	sp, #8
 800f1be:	af00      	add	r7, sp, #0
 800f1c0:	6078      	str	r0, [r7, #4]
 800f1c2:	687b      	ldr	r3, [r7, #4]
 800f1c4:	4618      	mov	r0, r3
 800f1c6:	f7ff ffeb 	bl	800f1a0 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>
 800f1ca:	687b      	ldr	r3, [r7, #4]
 800f1cc:	4618      	mov	r0, r3
 800f1ce:	3708      	adds	r7, #8
 800f1d0:	46bd      	mov	sp, r7
 800f1d2:	bd80      	pop	{r7, pc}

0800f1d4 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>:
    struct _Copy_assign_base : _Move_ctor_alias<_Types...>
 800f1d4:	b580      	push	{r7, lr}
 800f1d6:	b082      	sub	sp, #8
 800f1d8:	af00      	add	r7, sp, #0
 800f1da:	6078      	str	r0, [r7, #4]
 800f1dc:	687b      	ldr	r3, [r7, #4]
 800f1de:	4618      	mov	r0, r3
 800f1e0:	f7ff ffeb 	bl	800f1ba <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>
 800f1e4:	687b      	ldr	r3, [r7, #4]
 800f1e6:	4618      	mov	r0, r3
 800f1e8:	3708      	adds	r7, #8
 800f1ea:	46bd      	mov	sp, r7
 800f1ec:	bd80      	pop	{r7, pc}

0800f1ee <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>:
    struct _Move_assign_base : _Copy_assign_alias<_Types...>
 800f1ee:	b580      	push	{r7, lr}
 800f1f0:	b082      	sub	sp, #8
 800f1f2:	af00      	add	r7, sp, #0
 800f1f4:	6078      	str	r0, [r7, #4]
 800f1f6:	687b      	ldr	r3, [r7, #4]
 800f1f8:	4618      	mov	r0, r3
 800f1fa:	f7ff ffeb 	bl	800f1d4 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>
 800f1fe:	687b      	ldr	r3, [r7, #4]
 800f200:	4618      	mov	r0, r3
 800f202:	3708      	adds	r7, #8
 800f204:	46bd      	mov	sp, r7
 800f206:	bd80      	pop	{r7, pc}

0800f208 <_ZNSt8__detail9__variant13_Variant_baseIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>:
    struct _Variant_base : _Move_assign_alias<_Types...>
 800f208:	b580      	push	{r7, lr}
 800f20a:	b082      	sub	sp, #8
 800f20c:	af00      	add	r7, sp, #0
 800f20e:	6078      	str	r0, [r7, #4]
 800f210:	687b      	ldr	r3, [r7, #4]
 800f212:	4618      	mov	r0, r3
 800f214:	f7ff ffeb 	bl	800f1ee <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>
 800f218:	687b      	ldr	r3, [r7, #4]
 800f21a:	4618      	mov	r0, r3
 800f21c:	3708      	adds	r7, #8
 800f21e:	46bd      	mov	sp, r7
 800f220:	bd80      	pop	{r7, pc}

0800f222 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1Ev>:
      variant() = default;
 800f222:	b580      	push	{r7, lr}
 800f224:	b082      	sub	sp, #8
 800f226:	af00      	add	r7, sp, #0
 800f228:	6078      	str	r0, [r7, #4]
 800f22a:	687b      	ldr	r3, [r7, #4]
 800f22c:	4618      	mov	r0, r3
 800f22e:	f000 fdc0 	bl	800fdb2 <_ZNSt8__detail9__variant13_Variant_baseIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1Ev>
 800f232:	687b      	ldr	r3, [r7, #4]
 800f234:	4618      	mov	r0, r3
 800f236:	3708      	adds	r7, #8
 800f238:	46bd      	mov	sp, r7
 800f23a:	bd80      	pop	{r7, pc}

0800f23c <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>:
      ~variant() = default;
 800f23c:	b580      	push	{r7, lr}
 800f23e:	b082      	sub	sp, #8
 800f240:	af00      	add	r7, sp, #0
 800f242:	6078      	str	r0, [r7, #4]
 800f244:	687b      	ldr	r3, [r7, #4]
 800f246:	4618      	mov	r0, r3
 800f248:	f7ff ffde 	bl	800f208 <_ZNSt8__detail9__variant13_Variant_baseIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>
 800f24c:	687b      	ldr	r3, [r7, #4]
 800f24e:	4618      	mov	r0, r3
 800f250:	3708      	adds	r7, #8
 800f252:	46bd      	mov	sp, r7
 800f254:	bd80      	pop	{r7, pc}

0800f256 <_ZN5TokenC1Ev>:
#include <string>
#include "token_types.h"

typedef std::variant<std::string, int, float, bool> token_value;

class Token
 800f256:	b580      	push	{r7, lr}
 800f258:	b082      	sub	sp, #8
 800f25a:	af00      	add	r7, sp, #0
 800f25c:	6078      	str	r0, [r7, #4]
 800f25e:	687b      	ldr	r3, [r7, #4]
 800f260:	3304      	adds	r3, #4
 800f262:	4618      	mov	r0, r3
 800f264:	f7ff ffdd 	bl	800f222 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1Ev>
 800f268:	687b      	ldr	r3, [r7, #4]
 800f26a:	4618      	mov	r0, r3
 800f26c:	3708      	adds	r7, #8
 800f26e:	46bd      	mov	sp, r7
 800f270:	bd80      	pop	{r7, pc}

0800f272 <_ZN5TokenD1Ev>:
 800f272:	b580      	push	{r7, lr}
 800f274:	b082      	sub	sp, #8
 800f276:	af00      	add	r7, sp, #0
 800f278:	6078      	str	r0, [r7, #4]
 800f27a:	687b      	ldr	r3, [r7, #4]
 800f27c:	3304      	adds	r3, #4
 800f27e:	4618      	mov	r0, r3
 800f280:	f7ff ffdc 	bl	800f23c <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>
 800f284:	687b      	ldr	r3, [r7, #4]
 800f286:	4618      	mov	r0, r3
 800f288:	3708      	adds	r7, #8
 800f28a:	46bd      	mov	sp, r7
 800f28c:	bd80      	pop	{r7, pc}

0800f28e <_ZN5LexerC1Ev>:
#include <Lexer.h>

Lexer::Lexer()
 800f28e:	b580      	push	{r7, lr}
 800f290:	b082      	sub	sp, #8
 800f292:	af00      	add	r7, sp, #0
 800f294:	6078      	str	r0, [r7, #4]
 800f296:	687b      	ldr	r3, [r7, #4]
 800f298:	3304      	adds	r3, #4
 800f29a:	4618      	mov	r0, r3
 800f29c:	f7ff ffdb 	bl	800f256 <_ZN5TokenC1Ev>
{
	// needs to start with whitespace in buffer
	char_buffer = ' ';
 800f2a0:	687b      	ldr	r3, [r7, #4]
 800f2a2:	2220      	movs	r2, #32
 800f2a4:	701a      	strb	r2, [r3, #0]
}
 800f2a6:	687b      	ldr	r3, [r7, #4]
 800f2a8:	4618      	mov	r0, r3
 800f2aa:	3708      	adds	r7, #8
 800f2ac:	46bd      	mov	sp, r7
 800f2ae:	bd80      	pop	{r7, pc}

0800f2b0 <_ZN5Lexer17match_single_charEv>:

bool Lexer::match_single_char()
{
 800f2b0:	b580      	push	{r7, lr}
 800f2b2:	b084      	sub	sp, #16
 800f2b4:	af00      	add	r7, sp, #0
 800f2b6:	6078      	str	r0, [r7, #4]
	auto result = token_chars.find(char_buffer);
 800f2b8:	687b      	ldr	r3, [r7, #4]
 800f2ba:	4619      	mov	r1, r3
 800f2bc:	4815      	ldr	r0, [pc, #84]	; (800f314 <_ZN5Lexer17match_single_charEv+0x64>)
 800f2be:	f000 fd91 	bl	800fde4 <_ZNKSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEE4findERS4_>
 800f2c2:	4603      	mov	r3, r0
 800f2c4:	60bb      	str	r3, [r7, #8]
	if (result != token_chars.end())
 800f2c6:	4813      	ldr	r0, [pc, #76]	; (800f314 <_ZN5Lexer17match_single_charEv+0x64>)
 800f2c8:	f000 fd9b 	bl	800fe02 <_ZNKSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEE3endEv>
 800f2cc:	4603      	mov	r3, r0
 800f2ce:	60fb      	str	r3, [r7, #12]
 800f2d0:	f107 020c 	add.w	r2, r7, #12
 800f2d4:	f107 0308 	add.w	r3, r7, #8
 800f2d8:	4611      	mov	r1, r2
 800f2da:	4618      	mov	r0, r3
 800f2dc:	f000 fd9e 	bl	800fe1c <_ZStneRKSt23_Rb_tree_const_iteratorISt4pairIKc10token_typeEES6_>
 800f2e0:	4603      	mov	r3, r0
 800f2e2:	2b00      	cmp	r3, #0
 800f2e4:	d010      	beq.n	800f308 <_ZN5Lexer17match_single_charEv+0x58>
	{
		product.type = result->second;
 800f2e6:	f107 0308 	add.w	r3, r7, #8
 800f2ea:	4618      	mov	r0, r3
 800f2ec:	f000 fdaa 	bl	800fe44 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKc10token_typeEEptEv>
 800f2f0:	4603      	mov	r3, r0
 800f2f2:	785a      	ldrb	r2, [r3, #1]
 800f2f4:	687b      	ldr	r3, [r7, #4]
 800f2f6:	711a      	strb	r2, [r3, #4]
		char_buffer = Transmitter::receive_code_char();
 800f2f8:	f009 fd66 	bl	8018dc8 <_ZN11Transmitter17receive_code_charEv>
 800f2fc:	4603      	mov	r3, r0
 800f2fe:	461a      	mov	r2, r3
 800f300:	687b      	ldr	r3, [r7, #4]
 800f302:	701a      	strb	r2, [r3, #0]
		return true;
 800f304:	2301      	movs	r3, #1
 800f306:	e000      	b.n	800f30a <_ZN5Lexer17match_single_charEv+0x5a>
	}
	return false;
 800f308:	2300      	movs	r3, #0
}
 800f30a:	4618      	mov	r0, r3
 800f30c:	3710      	adds	r7, #16
 800f30e:	46bd      	mov	sp, r7
 800f310:	bd80      	pop	{r7, pc}
 800f312:	bf00      	nop
 800f314:	20000350 	.word	0x20000350

0800f318 <_ZN5Lexer17match_double_charEv>:

bool Lexer::match_double_char()
{
 800f318:	b580      	push	{r7, lr}
 800f31a:	b084      	sub	sp, #16
 800f31c:	af00      	add	r7, sp, #0
 800f31e:	6078      	str	r0, [r7, #4]
	auto result = token_double_chars.find(char_buffer);
 800f320:	687b      	ldr	r3, [r7, #4]
 800f322:	4619      	mov	r1, r3
 800f324:	481f      	ldr	r0, [pc, #124]	; (800f3a4 <_ZN5Lexer17match_double_charEv+0x8c>)
 800f326:	f000 fd9b 	bl	800fe60 <_ZNKSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEE4findERS4_>
 800f32a:	4603      	mov	r3, r0
 800f32c:	60bb      	str	r3, [r7, #8]
	if (result != token_double_chars.end())
 800f32e:	481d      	ldr	r0, [pc, #116]	; (800f3a4 <_ZN5Lexer17match_double_charEv+0x8c>)
 800f330:	f000 fda5 	bl	800fe7e <_ZNKSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEE3endEv>
 800f334:	4603      	mov	r3, r0
 800f336:	60fb      	str	r3, [r7, #12]
 800f338:	f107 020c 	add.w	r2, r7, #12
 800f33c:	f107 0308 	add.w	r3, r7, #8
 800f340:	4611      	mov	r1, r2
 800f342:	4618      	mov	r0, r3
 800f344:	f000 fda8 	bl	800fe98 <_ZStneRKSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEES6_>
 800f348:	4603      	mov	r3, r0
 800f34a:	2b00      	cmp	r3, #0
 800f34c:	d024      	beq.n	800f398 <_ZN5Lexer17match_double_charEv+0x80>
	{
		char_buffer = Transmitter::receive_code_char();
 800f34e:	f009 fd3b 	bl	8018dc8 <_ZN11Transmitter17receive_code_charEv>
 800f352:	4603      	mov	r3, r0
 800f354:	461a      	mov	r2, r3
 800f356:	687b      	ldr	r3, [r7, #4]
 800f358:	701a      	strb	r2, [r3, #0]
		if (char_buffer == '=')
 800f35a:	687b      	ldr	r3, [r7, #4]
 800f35c:	781b      	ldrb	r3, [r3, #0]
 800f35e:	2b3d      	cmp	r3, #61	; 0x3d
 800f360:	d10f      	bne.n	800f382 <_ZN5Lexer17match_double_charEv+0x6a>
		{
			product.type = result->second.double_char;
 800f362:	f107 0308 	add.w	r3, r7, #8
 800f366:	4618      	mov	r0, r3
 800f368:	f000 fdaa 	bl	800fec0 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEEptEv>
 800f36c:	4603      	mov	r3, r0
 800f36e:	789a      	ldrb	r2, [r3, #2]
 800f370:	687b      	ldr	r3, [r7, #4]
 800f372:	711a      	strb	r2, [r3, #4]
			char_buffer = Transmitter::receive_code_char();
 800f374:	f009 fd28 	bl	8018dc8 <_ZN11Transmitter17receive_code_charEv>
 800f378:	4603      	mov	r3, r0
 800f37a:	461a      	mov	r2, r3
 800f37c:	687b      	ldr	r3, [r7, #4]
 800f37e:	701a      	strb	r2, [r3, #0]
 800f380:	e008      	b.n	800f394 <_ZN5Lexer17match_double_charEv+0x7c>
		}
		else
		{
			product.type = result->second.single_char;
 800f382:	f107 0308 	add.w	r3, r7, #8
 800f386:	4618      	mov	r0, r3
 800f388:	f000 fd9a 	bl	800fec0 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEEptEv>
 800f38c:	4603      	mov	r3, r0
 800f38e:	785a      	ldrb	r2, [r3, #1]
 800f390:	687b      	ldr	r3, [r7, #4]
 800f392:	711a      	strb	r2, [r3, #4]
		}
		return true;
 800f394:	2301      	movs	r3, #1
 800f396:	e000      	b.n	800f39a <_ZN5Lexer17match_double_charEv+0x82>
	}
	return false;
 800f398:	2300      	movs	r3, #0
}
 800f39a:	4618      	mov	r0, r3
 800f39c:	3710      	adds	r7, #16
 800f39e:	46bd      	mov	sp, r7
 800f3a0:	bd80      	pop	{r7, pc}
 800f3a2:	bf00      	nop
 800f3a4:	20000380 	.word	0x20000380

0800f3a8 <_ZN5Lexer10build_wordERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void Lexer::build_word(std::string &word)
{
 800f3a8:	b580      	push	{r7, lr}
 800f3aa:	b082      	sub	sp, #8
 800f3ac:	af00      	add	r7, sp, #0
 800f3ae:	6078      	str	r0, [r7, #4]
 800f3b0:	6039      	str	r1, [r7, #0]
	do
	{
		word.push_back(char_buffer);
 800f3b2:	687b      	ldr	r3, [r7, #4]
 800f3b4:	781b      	ldrb	r3, [r3, #0]
 800f3b6:	4619      	mov	r1, r3
 800f3b8:	6838      	ldr	r0, [r7, #0]
 800f3ba:	f014 fbb5 	bl	8023b28 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc>
		char_buffer = Transmitter::receive_code_char();
 800f3be:	f009 fd03 	bl	8018dc8 <_ZN11Transmitter17receive_code_charEv>
 800f3c2:	4603      	mov	r3, r0
 800f3c4:	461a      	mov	r2, r3
 800f3c6:	687b      	ldr	r3, [r7, #4]
 800f3c8:	701a      	strb	r2, [r3, #0]
	} while (isalnum(char_buffer) || char_buffer == '_');
 800f3ca:	687b      	ldr	r3, [r7, #4]
 800f3cc:	781b      	ldrb	r3, [r3, #0]
 800f3ce:	4618      	mov	r0, r3
 800f3d0:	f015 fd08 	bl	8024de4 <isalnum>
 800f3d4:	4603      	mov	r3, r0
 800f3d6:	2b00      	cmp	r3, #0
 800f3d8:	d1eb      	bne.n	800f3b2 <_ZN5Lexer10build_wordERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xa>
 800f3da:	687b      	ldr	r3, [r7, #4]
 800f3dc:	781b      	ldrb	r3, [r3, #0]
 800f3de:	2b5f      	cmp	r3, #95	; 0x5f
 800f3e0:	d100      	bne.n	800f3e4 <_ZN5Lexer10build_wordERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x3c>
	do
 800f3e2:	e7e6      	b.n	800f3b2 <_ZN5Lexer10build_wordERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xa>
}
 800f3e4:	bf00      	nop
 800f3e6:	3708      	adds	r7, #8
 800f3e8:	46bd      	mov	sp, r7
 800f3ea:	bd80      	pop	{r7, pc}

0800f3ec <_ZN5Lexer19match_keyword_or_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void Lexer::match_keyword_or_id(std::string &word)
{
 800f3ec:	b580      	push	{r7, lr}
 800f3ee:	b08a      	sub	sp, #40	; 0x28
 800f3f0:	af00      	add	r7, sp, #0
 800f3f2:	6078      	str	r0, [r7, #4]
 800f3f4:	6039      	str	r1, [r7, #0]
	auto result = token_strings.find(word);
 800f3f6:	6839      	ldr	r1, [r7, #0]
 800f3f8:	481c      	ldr	r0, [pc, #112]	; (800f46c <_ZN5Lexer19match_keyword_or_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x80>)
 800f3fa:	f000 fd6f 	bl	800fedc <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEE4findERSA_>
 800f3fe:	4603      	mov	r3, r0
 800f400:	60bb      	str	r3, [r7, #8]
	if (result != token_strings.end())
 800f402:	481a      	ldr	r0, [pc, #104]	; (800f46c <_ZN5Lexer19match_keyword_or_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x80>)
 800f404:	f000 fd79 	bl	800fefa <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEE3endEv>
 800f408:	4603      	mov	r3, r0
 800f40a:	60fb      	str	r3, [r7, #12]
 800f40c:	f107 020c 	add.w	r2, r7, #12
 800f410:	f107 0308 	add.w	r3, r7, #8
 800f414:	4611      	mov	r1, r2
 800f416:	4618      	mov	r0, r3
 800f418:	f000 fd7c 	bl	800ff14 <_ZStneRKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEESC_>
 800f41c:	4603      	mov	r3, r0
 800f41e:	2b00      	cmp	r3, #0
 800f420:	d009      	beq.n	800f436 <_ZN5Lexer19match_keyword_or_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x4a>
	{
		product.type = result->second;
 800f422:	f107 0308 	add.w	r3, r7, #8
 800f426:	4618      	mov	r0, r3
 800f428:	f000 fd88 	bl	800ff3c <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEptEv>
 800f42c:	4603      	mov	r3, r0
 800f42e:	7e1a      	ldrb	r2, [r3, #24]
 800f430:	687b      	ldr	r3, [r7, #4]
 800f432:	711a      	strb	r2, [r3, #4]
	else
	{
		product.type = TOKEN_IDENTIFIER;
		product.value = std::string(word);
	}
}
 800f434:	e015      	b.n	800f462 <_ZN5Lexer19match_keyword_or_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x76>
		product.type = TOKEN_IDENTIFIER;
 800f436:	687b      	ldr	r3, [r7, #4]
 800f438:	2202      	movs	r2, #2
 800f43a:	711a      	strb	r2, [r3, #4]
		product.value = std::string(word);
 800f43c:	f107 0310 	add.w	r3, r7, #16
 800f440:	6839      	ldr	r1, [r7, #0]
 800f442:	4618      	mov	r0, r3
 800f444:	f014 fcc8 	bl	8023dd8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 800f448:	687b      	ldr	r3, [r7, #4]
 800f44a:	3308      	adds	r3, #8
 800f44c:	f107 0210 	add.w	r2, r7, #16
 800f450:	4611      	mov	r1, r2
 800f452:	4618      	mov	r0, r3
 800f454:	f000 fd93 	bl	800ff7e <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_>
 800f458:	f107 0310 	add.w	r3, r7, #16
 800f45c:	4618      	mov	r0, r3
 800f45e:	f014 faec 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
}
 800f462:	bf00      	nop
 800f464:	3728      	adds	r7, #40	; 0x28
 800f466:	46bd      	mov	sp, r7
 800f468:	bd80      	pop	{r7, pc}
 800f46a:	bf00      	nop
 800f46c:	20000368 	.word	0x20000368

0800f470 <_ZN5Lexer19build_keyword_or_idEv>:

bool Lexer::build_keyword_or_id()
{
 800f470:	b590      	push	{r4, r7, lr}
 800f472:	b089      	sub	sp, #36	; 0x24
 800f474:	af00      	add	r7, sp, #0
 800f476:	6078      	str	r0, [r7, #4]
	if (isalpha(char_buffer))
 800f478:	687b      	ldr	r3, [r7, #4]
 800f47a:	781b      	ldrb	r3, [r3, #0]
 800f47c:	4618      	mov	r0, r3
 800f47e:	f015 fcb9 	bl	8024df4 <isalpha>
 800f482:	4603      	mov	r3, r0
 800f484:	2b00      	cmp	r3, #0
 800f486:	d017      	beq.n	800f4b8 <_ZN5Lexer19build_keyword_or_idEv+0x48>
	{
		std::string word;
 800f488:	f107 0308 	add.w	r3, r7, #8
 800f48c:	4618      	mov	r0, r3
 800f48e:	f014 fab3 	bl	80239f8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>
		build_word(word);
 800f492:	f107 0308 	add.w	r3, r7, #8
 800f496:	4619      	mov	r1, r3
 800f498:	6878      	ldr	r0, [r7, #4]
 800f49a:	f7ff ff85 	bl	800f3a8 <_ZN5Lexer10build_wordERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
		match_keyword_or_id(word);
 800f49e:	f107 0308 	add.w	r3, r7, #8
 800f4a2:	4619      	mov	r1, r3
 800f4a4:	6878      	ldr	r0, [r7, #4]
 800f4a6:	f7ff ffa1 	bl	800f3ec <_ZN5Lexer19match_keyword_or_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
		return true;
 800f4aa:	2401      	movs	r4, #1
		std::string word;
 800f4ac:	f107 0308 	add.w	r3, r7, #8
 800f4b0:	4618      	mov	r0, r3
 800f4b2:	f014 fac2 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800f4b6:	e000      	b.n	800f4ba <_ZN5Lexer19build_keyword_or_idEv+0x4a>
	}
	return false;
 800f4b8:	2400      	movs	r4, #0
 800f4ba:	4623      	mov	r3, r4
}
 800f4bc:	4618      	mov	r0, r3
 800f4be:	3724      	adds	r7, #36	; 0x24
 800f4c0:	46bd      	mov	sp, r7
 800f4c2:	bd90      	pop	{r4, r7, pc}

0800f4c4 <_ZN5Lexer9build_intERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void Lexer::build_int(std::string &word)
{
 800f4c4:	b580      	push	{r7, lr}
 800f4c6:	b082      	sub	sp, #8
 800f4c8:	af00      	add	r7, sp, #0
 800f4ca:	6078      	str	r0, [r7, #4]
 800f4cc:	6039      	str	r1, [r7, #0]
	do
	{
		word.push_back(char_buffer);
 800f4ce:	687b      	ldr	r3, [r7, #4]
 800f4d0:	781b      	ldrb	r3, [r3, #0]
 800f4d2:	4619      	mov	r1, r3
 800f4d4:	6838      	ldr	r0, [r7, #0]
 800f4d6:	f014 fb27 	bl	8023b28 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc>
		char_buffer = Transmitter::receive_code_char();
 800f4da:	f009 fc75 	bl	8018dc8 <_ZN11Transmitter17receive_code_charEv>
 800f4de:	4603      	mov	r3, r0
 800f4e0:	461a      	mov	r2, r3
 800f4e2:	687b      	ldr	r3, [r7, #4]
 800f4e4:	701a      	strb	r2, [r3, #0]
	} while (isdigit(char_buffer));
 800f4e6:	687b      	ldr	r3, [r7, #4]
 800f4e8:	781b      	ldrb	r3, [r3, #0]
 800f4ea:	3b30      	subs	r3, #48	; 0x30
 800f4ec:	2b09      	cmp	r3, #9
 800f4ee:	bf94      	ite	ls
 800f4f0:	2301      	movls	r3, #1
 800f4f2:	2300      	movhi	r3, #0
 800f4f4:	b2db      	uxtb	r3, r3
 800f4f6:	2b00      	cmp	r3, #0
 800f4f8:	d000      	beq.n	800f4fc <_ZN5Lexer9build_intERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x38>
	do
 800f4fa:	e7e8      	b.n	800f4ce <_ZN5Lexer9build_intERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xa>
}
 800f4fc:	bf00      	nop
 800f4fe:	3708      	adds	r7, #8
 800f500:	46bd      	mov	sp, r7
 800f502:	bd80      	pop	{r7, pc}

0800f504 <_ZN5Lexer18match_int_or_floatERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void Lexer::match_int_or_float(std::string &word)
{
 800f504:	b580      	push	{r7, lr}
 800f506:	b084      	sub	sp, #16
 800f508:	af00      	add	r7, sp, #0
 800f50a:	6078      	str	r0, [r7, #4]
 800f50c:	6039      	str	r1, [r7, #0]
	if (char_buffer != '.')
 800f50e:	687b      	ldr	r3, [r7, #4]
 800f510:	781b      	ldrb	r3, [r3, #0]
 800f512:	2b2e      	cmp	r3, #46	; 0x2e
 800f514:	d012      	beq.n	800f53c <_ZN5Lexer18match_int_or_floatERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x38>
	{
		product.type = TOKEN_INT;
 800f516:	687b      	ldr	r3, [r7, #4]
 800f518:	2203      	movs	r2, #3
 800f51a:	711a      	strb	r2, [r3, #4]
		product.value = std::stoi(word);
 800f51c:	220a      	movs	r2, #10
 800f51e:	2100      	movs	r1, #0
 800f520:	6838      	ldr	r0, [r7, #0]
 800f522:	f7ff fe09 	bl	800f138 <_ZNSt7__cxx114stoiERKNS_12basic_stringIcSt11char_traitsIcESaIcEEEPji>
 800f526:	4603      	mov	r3, r0
 800f528:	60bb      	str	r3, [r7, #8]
 800f52a:	687b      	ldr	r3, [r7, #4]
 800f52c:	3308      	adds	r3, #8
 800f52e:	f107 0208 	add.w	r2, r7, #8
 800f532:	4611      	mov	r1, r2
 800f534:	4618      	mov	r0, r3
 800f536:	f000 fd4e 	bl	800ffd6 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_>
	{
		build_int(word);
		product.type = TOKEN_FLOAT;
		product.value = std::stof(word);
	}
}
 800f53a:	e016      	b.n	800f56a <_ZN5Lexer18match_int_or_floatERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x66>
		build_int(word);
 800f53c:	6839      	ldr	r1, [r7, #0]
 800f53e:	6878      	ldr	r0, [r7, #4]
 800f540:	f7ff ffc0 	bl	800f4c4 <_ZN5Lexer9build_intERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
		product.type = TOKEN_FLOAT;
 800f544:	687b      	ldr	r3, [r7, #4]
 800f546:	2204      	movs	r2, #4
 800f548:	711a      	strb	r2, [r3, #4]
		product.value = std::stof(word);
 800f54a:	2100      	movs	r1, #0
 800f54c:	6838      	ldr	r0, [r7, #0]
 800f54e:	f7ff fe0d 	bl	800f16c <_ZNSt7__cxx114stofERKNS_12basic_stringIcSt11char_traitsIcESaIcEEEPj>
 800f552:	eef0 7a40 	vmov.f32	s15, s0
 800f556:	edc7 7a03 	vstr	s15, [r7, #12]
 800f55a:	687b      	ldr	r3, [r7, #4]
 800f55c:	3308      	adds	r3, #8
 800f55e:	f107 020c 	add.w	r2, r7, #12
 800f562:	4611      	mov	r1, r2
 800f564:	4618      	mov	r0, r3
 800f566:	f000 fd60 	bl	801002a <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_>
}
 800f56a:	bf00      	nop
 800f56c:	3710      	adds	r7, #16
 800f56e:	46bd      	mov	sp, r7
 800f570:	bd80      	pop	{r7, pc}

0800f572 <_ZN5Lexer18build_int_or_floatEv>:

bool Lexer::build_int_or_float()
{
 800f572:	b590      	push	{r4, r7, lr}
 800f574:	b089      	sub	sp, #36	; 0x24
 800f576:	af00      	add	r7, sp, #0
 800f578:	6078      	str	r0, [r7, #4]
	if (isdigit(char_buffer) && char_buffer != '0')
 800f57a:	687b      	ldr	r3, [r7, #4]
 800f57c:	781b      	ldrb	r3, [r3, #0]
 800f57e:	3b30      	subs	r3, #48	; 0x30
 800f580:	2b09      	cmp	r3, #9
 800f582:	bf94      	ite	ls
 800f584:	2301      	movls	r3, #1
 800f586:	2300      	movhi	r3, #0
 800f588:	b2db      	uxtb	r3, r3
 800f58a:	2b00      	cmp	r3, #0
 800f58c:	d01b      	beq.n	800f5c6 <_ZN5Lexer18build_int_or_floatEv+0x54>
 800f58e:	687b      	ldr	r3, [r7, #4]
 800f590:	781b      	ldrb	r3, [r3, #0]
 800f592:	2b30      	cmp	r3, #48	; 0x30
 800f594:	d017      	beq.n	800f5c6 <_ZN5Lexer18build_int_or_floatEv+0x54>
	{
		std::string word;
 800f596:	f107 0308 	add.w	r3, r7, #8
 800f59a:	4618      	mov	r0, r3
 800f59c:	f014 fa2c 	bl	80239f8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>
		build_int(word);
 800f5a0:	f107 0308 	add.w	r3, r7, #8
 800f5a4:	4619      	mov	r1, r3
 800f5a6:	6878      	ldr	r0, [r7, #4]
 800f5a8:	f7ff ff8c 	bl	800f4c4 <_ZN5Lexer9build_intERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
		match_int_or_float(word);
 800f5ac:	f107 0308 	add.w	r3, r7, #8
 800f5b0:	4619      	mov	r1, r3
 800f5b2:	6878      	ldr	r0, [r7, #4]
 800f5b4:	f7ff ffa6 	bl	800f504 <_ZN5Lexer18match_int_or_floatERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
		return true;
 800f5b8:	2401      	movs	r4, #1
		std::string word;
 800f5ba:	f107 0308 	add.w	r3, r7, #8
 800f5be:	4618      	mov	r0, r3
 800f5c0:	f014 fa3b 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800f5c4:	e000      	b.n	800f5c8 <_ZN5Lexer18build_int_or_floatEv+0x56>
	}
	return false;
 800f5c6:	2400      	movs	r4, #0
 800f5c8:	4623      	mov	r3, r4
}
 800f5ca:	4618      	mov	r0, r3
 800f5cc:	3724      	adds	r7, #36	; 0x24
 800f5ce:	46bd      	mov	sp, r7
 800f5d0:	bd90      	pop	{r4, r7, pc}

0800f5d2 <_ZN5Lexer20build_0_int_or_floatEv>:

bool Lexer::build_0_int_or_float()
{
 800f5d2:	b580      	push	{r7, lr}
 800f5d4:	b08a      	sub	sp, #40	; 0x28
 800f5d6:	af00      	add	r7, sp, #0
 800f5d8:	6078      	str	r0, [r7, #4]
	if (char_buffer == '0')
 800f5da:	687b      	ldr	r3, [r7, #4]
 800f5dc:	781b      	ldrb	r3, [r3, #0]
 800f5de:	2b30      	cmp	r3, #48	; 0x30
 800f5e0:	d13e      	bne.n	800f660 <_ZN5Lexer20build_0_int_or_floatEv+0x8e>
	{
		char_buffer = Transmitter::receive_code_char();
 800f5e2:	f009 fbf1 	bl	8018dc8 <_ZN11Transmitter17receive_code_charEv>
 800f5e6:	4603      	mov	r3, r0
 800f5e8:	461a      	mov	r2, r3
 800f5ea:	687b      	ldr	r3, [r7, #4]
 800f5ec:	701a      	strb	r2, [r3, #0]
		if (char_buffer == '.')
 800f5ee:	687b      	ldr	r3, [r7, #4]
 800f5f0:	781b      	ldrb	r3, [r3, #0]
 800f5f2:	2b2e      	cmp	r3, #46	; 0x2e
 800f5f4:	d125      	bne.n	800f642 <_ZN5Lexer20build_0_int_or_floatEv+0x70>
		{
			std::string word;
 800f5f6:	f107 0308 	add.w	r3, r7, #8
 800f5fa:	4618      	mov	r0, r3
 800f5fc:	f014 f9fc 	bl	80239f8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>
			build_int(word);
 800f600:	f107 0308 	add.w	r3, r7, #8
 800f604:	4619      	mov	r1, r3
 800f606:	6878      	ldr	r0, [r7, #4]
 800f608:	f7ff ff5c 	bl	800f4c4 <_ZN5Lexer9build_intERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
			product.type = TOKEN_FLOAT;
 800f60c:	687b      	ldr	r3, [r7, #4]
 800f60e:	2204      	movs	r2, #4
 800f610:	711a      	strb	r2, [r3, #4]
			product.value = std::stof(word);
 800f612:	f107 0308 	add.w	r3, r7, #8
 800f616:	2100      	movs	r1, #0
 800f618:	4618      	mov	r0, r3
 800f61a:	f7ff fda7 	bl	800f16c <_ZNSt7__cxx114stofERKNS_12basic_stringIcSt11char_traitsIcESaIcEEEPj>
 800f61e:	eef0 7a40 	vmov.f32	s15, s0
 800f622:	edc7 7a08 	vstr	s15, [r7, #32]
 800f626:	687b      	ldr	r3, [r7, #4]
 800f628:	3308      	adds	r3, #8
 800f62a:	f107 0220 	add.w	r2, r7, #32
 800f62e:	4611      	mov	r1, r2
 800f630:	4618      	mov	r0, r3
 800f632:	f000 fcfa 	bl	801002a <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_>
			std::string word;
 800f636:	f107 0308 	add.w	r3, r7, #8
 800f63a:	4618      	mov	r0, r3
 800f63c:	f014 f9fd 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800f640:	e00c      	b.n	800f65c <_ZN5Lexer20build_0_int_or_floatEv+0x8a>
		}
		else
		{
			product.type = TOKEN_INT;
 800f642:	687b      	ldr	r3, [r7, #4]
 800f644:	2203      	movs	r2, #3
 800f646:	711a      	strb	r2, [r3, #4]
			product.value = 0;
 800f648:	2300      	movs	r3, #0
 800f64a:	627b      	str	r3, [r7, #36]	; 0x24
 800f64c:	687b      	ldr	r3, [r7, #4]
 800f64e:	3308      	adds	r3, #8
 800f650:	f107 0224 	add.w	r2, r7, #36	; 0x24
 800f654:	4611      	mov	r1, r2
 800f656:	4618      	mov	r0, r3
 800f658:	f000 fcbd 	bl	800ffd6 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_>
		}
		return true;
 800f65c:	2301      	movs	r3, #1
 800f65e:	e000      	b.n	800f662 <_ZN5Lexer20build_0_int_or_floatEv+0x90>
	}
	return false;
 800f660:	2300      	movs	r3, #0
}
 800f662:	4618      	mov	r0, r3
 800f664:	3728      	adds	r7, #40	; 0x28
 800f666:	46bd      	mov	sp, r7
 800f668:	bd80      	pop	{r7, pc}
	...

0800f66c <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void Lexer::match_escape_char(std::string &word)
{
 800f66c:	b580      	push	{r7, lr}
 800f66e:	b084      	sub	sp, #16
 800f670:	af00      	add	r7, sp, #0
 800f672:	6078      	str	r0, [r7, #4]
 800f674:	6039      	str	r1, [r7, #0]
	char true_char;
	switch (char_buffer)
 800f676:	687b      	ldr	r3, [r7, #4]
 800f678:	781b      	ldrb	r3, [r3, #0]
 800f67a:	2b76      	cmp	r3, #118	; 0x76
 800f67c:	dc66      	bgt.n	800f74c <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xe0>
 800f67e:	2b5c      	cmp	r3, #92	; 0x5c
 800f680:	da04      	bge.n	800f68c <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x20>
 800f682:	2b22      	cmp	r3, #34	; 0x22
 800f684:	d047      	beq.n	800f716 <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xaa>
 800f686:	2b27      	cmp	r3, #39	; 0x27
 800f688:	d03f      	beq.n	800f70a <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x9e>
		break;
	case 'v':
		true_char = '\v';
		break;
	default:
		return;
 800f68a:	e05f      	b.n	800f74c <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xe0>
 800f68c:	3b5c      	subs	r3, #92	; 0x5c
 800f68e:	2b1a      	cmp	r3, #26
 800f690:	d85c      	bhi.n	800f74c <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xe0>
 800f692:	a201      	add	r2, pc, #4	; (adr r2, 800f698 <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2c>)
 800f694:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800f698:	0800f711 	.word	0x0800f711
 800f69c:	0800f74d 	.word	0x0800f74d
 800f6a0:	0800f74d 	.word	0x0800f74d
 800f6a4:	0800f74d 	.word	0x0800f74d
 800f6a8:	0800f74d 	.word	0x0800f74d
 800f6ac:	0800f74d 	.word	0x0800f74d
 800f6b0:	0800f729 	.word	0x0800f729
 800f6b4:	0800f74d 	.word	0x0800f74d
 800f6b8:	0800f74d 	.word	0x0800f74d
 800f6bc:	0800f74d 	.word	0x0800f74d
 800f6c0:	0800f72f 	.word	0x0800f72f
 800f6c4:	0800f74d 	.word	0x0800f74d
 800f6c8:	0800f74d 	.word	0x0800f74d
 800f6cc:	0800f74d 	.word	0x0800f74d
 800f6d0:	0800f74d 	.word	0x0800f74d
 800f6d4:	0800f74d 	.word	0x0800f74d
 800f6d8:	0800f74d 	.word	0x0800f74d
 800f6dc:	0800f74d 	.word	0x0800f74d
 800f6e0:	0800f705 	.word	0x0800f705
 800f6e4:	0800f74d 	.word	0x0800f74d
 800f6e8:	0800f74d 	.word	0x0800f74d
 800f6ec:	0800f74d 	.word	0x0800f74d
 800f6f0:	0800f71d 	.word	0x0800f71d
 800f6f4:	0800f74d 	.word	0x0800f74d
 800f6f8:	0800f723 	.word	0x0800f723
 800f6fc:	0800f74d 	.word	0x0800f74d
 800f700:	0800f735 	.word	0x0800f735
		true_char = '\n';
 800f704:	230a      	movs	r3, #10
 800f706:	73fb      	strb	r3, [r7, #15]
		break;
 800f708:	e017      	b.n	800f73a <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xce>
		true_char = '\'';
 800f70a:	2327      	movs	r3, #39	; 0x27
 800f70c:	73fb      	strb	r3, [r7, #15]
		break;
 800f70e:	e014      	b.n	800f73a <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xce>
		true_char = '\\';
 800f710:	235c      	movs	r3, #92	; 0x5c
 800f712:	73fb      	strb	r3, [r7, #15]
		break;
 800f714:	e011      	b.n	800f73a <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xce>
		true_char = '\"';
 800f716:	2322      	movs	r3, #34	; 0x22
 800f718:	73fb      	strb	r3, [r7, #15]
		break;
 800f71a:	e00e      	b.n	800f73a <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xce>
		true_char = '\r';
 800f71c:	230d      	movs	r3, #13
 800f71e:	73fb      	strb	r3, [r7, #15]
		break;
 800f720:	e00b      	b.n	800f73a <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xce>
		true_char = '\t';
 800f722:	2309      	movs	r3, #9
 800f724:	73fb      	strb	r3, [r7, #15]
		break;
 800f726:	e008      	b.n	800f73a <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xce>
		true_char = '\b';
 800f728:	2308      	movs	r3, #8
 800f72a:	73fb      	strb	r3, [r7, #15]
		break;
 800f72c:	e005      	b.n	800f73a <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xce>
		true_char = '\f';
 800f72e:	230c      	movs	r3, #12
 800f730:	73fb      	strb	r3, [r7, #15]
		break;
 800f732:	e002      	b.n	800f73a <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xce>
		true_char = '\v';
 800f734:	230b      	movs	r3, #11
 800f736:	73fb      	strb	r3, [r7, #15]
		break;
 800f738:	bf00      	nop
	}
	word.pop_back();
 800f73a:	6838      	ldr	r0, [r7, #0]
 800f73c:	f014 fa19 	bl	8023b72 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8pop_backEv>
	word.push_back(true_char);
 800f740:	7bfb      	ldrb	r3, [r7, #15]
 800f742:	4619      	mov	r1, r3
 800f744:	6838      	ldr	r0, [r7, #0]
 800f746:	f014 f9ef 	bl	8023b28 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc>
 800f74a:	e000      	b.n	800f74e <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xe2>
		return;
 800f74c:	bf00      	nop
}
 800f74e:	3710      	adds	r7, #16
 800f750:	46bd      	mov	sp, r7
 800f752:	bd80      	pop	{r7, pc}

0800f754 <_ZN5Lexer15add_string_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void Lexer::add_string_char(std::string &word)
{
 800f754:	b580      	push	{r7, lr}
 800f756:	b082      	sub	sp, #8
 800f758:	af00      	add	r7, sp, #0
 800f75a:	6078      	str	r0, [r7, #4]
 800f75c:	6039      	str	r1, [r7, #0]
	if (word.back() == '\\')
 800f75e:	6838      	ldr	r0, [r7, #0]
 800f760:	f014 f9dd 	bl	8023b1e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4backEv>
 800f764:	4603      	mov	r3, r0
 800f766:	781b      	ldrb	r3, [r3, #0]
 800f768:	2b5c      	cmp	r3, #92	; 0x5c
 800f76a:	bf0c      	ite	eq
 800f76c:	2301      	moveq	r3, #1
 800f76e:	2300      	movne	r3, #0
 800f770:	b2db      	uxtb	r3, r3
 800f772:	2b00      	cmp	r3, #0
 800f774:	d004      	beq.n	800f780 <_ZN5Lexer15add_string_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2c>
	{
		match_escape_char(word);
 800f776:	6839      	ldr	r1, [r7, #0]
 800f778:	6878      	ldr	r0, [r7, #4]
 800f77a:	f7ff ff77 	bl	800f66c <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 800f77e:	e005      	b.n	800f78c <_ZN5Lexer15add_string_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x38>
	}
	else
	{
		word.push_back(char_buffer);
 800f780:	687b      	ldr	r3, [r7, #4]
 800f782:	781b      	ldrb	r3, [r3, #0]
 800f784:	4619      	mov	r1, r3
 800f786:	6838      	ldr	r0, [r7, #0]
 800f788:	f014 f9ce 	bl	8023b28 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc>
	}
	char_buffer = Transmitter::receive_code_char();
 800f78c:	f009 fb1c 	bl	8018dc8 <_ZN11Transmitter17receive_code_charEv>
 800f790:	4603      	mov	r3, r0
 800f792:	461a      	mov	r2, r3
 800f794:	687b      	ldr	r3, [r7, #4]
 800f796:	701a      	strb	r2, [r3, #0]
}
 800f798:	bf00      	nop
 800f79a:	3708      	adds	r7, #8
 800f79c:	46bd      	mov	sp, r7
 800f79e:	bd80      	pop	{r7, pc}

0800f7a0 <_ZN5Lexer20build_string_contentERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void Lexer::build_string_content(std::string &word)
{
 800f7a0:	b580      	push	{r7, lr}
 800f7a2:	b082      	sub	sp, #8
 800f7a4:	af00      	add	r7, sp, #0
 800f7a6:	6078      	str	r0, [r7, #4]
 800f7a8:	6039      	str	r1, [r7, #0]
	char_buffer = Transmitter::receive_code_char();
 800f7aa:	f009 fb0d 	bl	8018dc8 <_ZN11Transmitter17receive_code_charEv>
 800f7ae:	4603      	mov	r3, r0
 800f7b0:	461a      	mov	r2, r3
 800f7b2:	687b      	ldr	r3, [r7, #4]
 800f7b4:	701a      	strb	r2, [r3, #0]
	while (!(char_buffer == '\"' && word.back() != '\\'))
 800f7b6:	687b      	ldr	r3, [r7, #4]
 800f7b8:	781b      	ldrb	r3, [r3, #0]
 800f7ba:	2b22      	cmp	r3, #34	; 0x22
 800f7bc:	d106      	bne.n	800f7cc <_ZN5Lexer20build_string_contentERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2c>
 800f7be:	6838      	ldr	r0, [r7, #0]
 800f7c0:	f014 f9ad 	bl	8023b1e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4backEv>
 800f7c4:	4603      	mov	r3, r0
 800f7c6:	781b      	ldrb	r3, [r3, #0]
 800f7c8:	2b5c      	cmp	r3, #92	; 0x5c
 800f7ca:	d101      	bne.n	800f7d0 <_ZN5Lexer20build_string_contentERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x30>
 800f7cc:	2301      	movs	r3, #1
 800f7ce:	e000      	b.n	800f7d2 <_ZN5Lexer20build_string_contentERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x32>
 800f7d0:	2300      	movs	r3, #0
 800f7d2:	2b00      	cmp	r3, #0
 800f7d4:	d004      	beq.n	800f7e0 <_ZN5Lexer20build_string_contentERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x40>
	{
		add_string_char(word);
 800f7d6:	6839      	ldr	r1, [r7, #0]
 800f7d8:	6878      	ldr	r0, [r7, #4]
 800f7da:	f7ff ffbb 	bl	800f754 <_ZN5Lexer15add_string_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
	while (!(char_buffer == '\"' && word.back() != '\\'))
 800f7de:	e7ea      	b.n	800f7b6 <_ZN5Lexer20build_string_contentERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x16>
	}
	char_buffer = Transmitter::receive_code_char();
 800f7e0:	f009 faf2 	bl	8018dc8 <_ZN11Transmitter17receive_code_charEv>
 800f7e4:	4603      	mov	r3, r0
 800f7e6:	461a      	mov	r2, r3
 800f7e8:	687b      	ldr	r3, [r7, #4]
 800f7ea:	701a      	strb	r2, [r3, #0]
}
 800f7ec:	bf00      	nop
 800f7ee:	3708      	adds	r7, #8
 800f7f0:	46bd      	mov	sp, r7
 800f7f2:	bd80      	pop	{r7, pc}

0800f7f4 <_ZN5Lexer12build_stringEv>:

bool Lexer::build_string()
{
 800f7f4:	b590      	push	{r4, r7, lr}
 800f7f6:	b08f      	sub	sp, #60	; 0x3c
 800f7f8:	af00      	add	r7, sp, #0
 800f7fa:	6078      	str	r0, [r7, #4]
	if (char_buffer == '\"')
 800f7fc:	687b      	ldr	r3, [r7, #4]
 800f7fe:	781b      	ldrb	r3, [r3, #0]
 800f800:	2b22      	cmp	r3, #34	; 0x22
 800f802:	d129      	bne.n	800f858 <_ZN5Lexer12build_stringEv+0x64>
	{
		std::string word;
 800f804:	f107 0308 	add.w	r3, r7, #8
 800f808:	4618      	mov	r0, r3
 800f80a:	f014 f8f5 	bl	80239f8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>
		build_string_content(word);
 800f80e:	f107 0308 	add.w	r3, r7, #8
 800f812:	4619      	mov	r1, r3
 800f814:	6878      	ldr	r0, [r7, #4]
 800f816:	f7ff ffc3 	bl	800f7a0 <_ZN5Lexer20build_string_contentERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
		product.type = TOKEN_STRING;
 800f81a:	687b      	ldr	r3, [r7, #4]
 800f81c:	220f      	movs	r2, #15
 800f81e:	711a      	strb	r2, [r3, #4]
		product.value = std::string(word);
 800f820:	f107 0208 	add.w	r2, r7, #8
 800f824:	f107 0320 	add.w	r3, r7, #32
 800f828:	4611      	mov	r1, r2
 800f82a:	4618      	mov	r0, r3
 800f82c:	f014 fad4 	bl	8023dd8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 800f830:	687b      	ldr	r3, [r7, #4]
 800f832:	3308      	adds	r3, #8
 800f834:	f107 0220 	add.w	r2, r7, #32
 800f838:	4611      	mov	r1, r2
 800f83a:	4618      	mov	r0, r3
 800f83c:	f000 fb9f 	bl	800ff7e <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_>
 800f840:	f107 0320 	add.w	r3, r7, #32
 800f844:	4618      	mov	r0, r3
 800f846:	f014 f8f8 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
		return true;
 800f84a:	2401      	movs	r4, #1
		std::string word;
 800f84c:	f107 0308 	add.w	r3, r7, #8
 800f850:	4618      	mov	r0, r3
 800f852:	f014 f8f2 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800f856:	e000      	b.n	800f85a <_ZN5Lexer12build_stringEv+0x66>
	}
	return false;
 800f858:	2400      	movs	r4, #0
 800f85a:	4623      	mov	r3, r4
}
 800f85c:	4618      	mov	r0, r3
 800f85e:	373c      	adds	r7, #60	; 0x3c
 800f860:	46bd      	mov	sp, r7
 800f862:	bd90      	pop	{r4, r7, pc}

0800f864 <_ZN5Lexer17build_token_valueEv>:

bool Lexer::build_token_value()
{
 800f864:	b580      	push	{r7, lr}
 800f866:	b082      	sub	sp, #8
 800f868:	af00      	add	r7, sp, #0
 800f86a:	6078      	str	r0, [r7, #4]
	return match_single_char() || match_double_char() || build_keyword_or_id()
 800f86c:	6878      	ldr	r0, [r7, #4]
 800f86e:	f7ff fd1f 	bl	800f2b0 <_ZN5Lexer17match_single_charEv>
 800f872:	4603      	mov	r3, r0
			|| build_int_or_float() || build_0_int_or_float() || build_string();
 800f874:	2b00      	cmp	r3, #0
 800f876:	d11d      	bne.n	800f8b4 <_ZN5Lexer17build_token_valueEv+0x50>
	return match_single_char() || match_double_char() || build_keyword_or_id()
 800f878:	6878      	ldr	r0, [r7, #4]
 800f87a:	f7ff fd4d 	bl	800f318 <_ZN5Lexer17match_double_charEv>
 800f87e:	4603      	mov	r3, r0
 800f880:	2b00      	cmp	r3, #0
 800f882:	d117      	bne.n	800f8b4 <_ZN5Lexer17build_token_valueEv+0x50>
 800f884:	6878      	ldr	r0, [r7, #4]
 800f886:	f7ff fdf3 	bl	800f470 <_ZN5Lexer19build_keyword_or_idEv>
 800f88a:	4603      	mov	r3, r0
 800f88c:	2b00      	cmp	r3, #0
 800f88e:	d111      	bne.n	800f8b4 <_ZN5Lexer17build_token_valueEv+0x50>
			|| build_int_or_float() || build_0_int_or_float() || build_string();
 800f890:	6878      	ldr	r0, [r7, #4]
 800f892:	f7ff fe6e 	bl	800f572 <_ZN5Lexer18build_int_or_floatEv>
 800f896:	4603      	mov	r3, r0
 800f898:	2b00      	cmp	r3, #0
 800f89a:	d10b      	bne.n	800f8b4 <_ZN5Lexer17build_token_valueEv+0x50>
 800f89c:	6878      	ldr	r0, [r7, #4]
 800f89e:	f7ff fe98 	bl	800f5d2 <_ZN5Lexer20build_0_int_or_floatEv>
 800f8a2:	4603      	mov	r3, r0
 800f8a4:	2b00      	cmp	r3, #0
 800f8a6:	d105      	bne.n	800f8b4 <_ZN5Lexer17build_token_valueEv+0x50>
 800f8a8:	6878      	ldr	r0, [r7, #4]
 800f8aa:	f7ff ffa3 	bl	800f7f4 <_ZN5Lexer12build_stringEv>
 800f8ae:	4603      	mov	r3, r0
 800f8b0:	2b00      	cmp	r3, #0
 800f8b2:	d001      	beq.n	800f8b8 <_ZN5Lexer17build_token_valueEv+0x54>
 800f8b4:	2301      	movs	r3, #1
 800f8b6:	e000      	b.n	800f8ba <_ZN5Lexer17build_token_valueEv+0x56>
 800f8b8:	2300      	movs	r3, #0
}
 800f8ba:	4618      	mov	r0, r3
 800f8bc:	3708      	adds	r7, #8
 800f8be:	46bd      	mov	sp, r7
 800f8c0:	bd80      	pop	{r7, pc}

0800f8c2 <_ZN5LexerD1Ev>:
#define INC_LEXER_H_

#include "Transmitter.h"
#include "Token.h"

class Lexer
 800f8c2:	b580      	push	{r7, lr}
 800f8c4:	b082      	sub	sp, #8
 800f8c6:	af00      	add	r7, sp, #0
 800f8c8:	6078      	str	r0, [r7, #4]
 800f8ca:	687b      	ldr	r3, [r7, #4]
 800f8cc:	3304      	adds	r3, #4
 800f8ce:	4618      	mov	r0, r3
 800f8d0:	f7ff fccf 	bl	800f272 <_ZN5TokenD1Ev>
 800f8d4:	687b      	ldr	r3, [r7, #4]
 800f8d6:	4618      	mov	r0, r3
 800f8d8:	3708      	adds	r7, #8
 800f8da:	46bd      	mov	sp, r7
 800f8dc:	bd80      	pop	{r7, pc}
	...

0800f8e0 <__tcf_0>:

Token Lexer::build_token()
{
	static Lexer lex;
 800f8e0:	b580      	push	{r7, lr}
 800f8e2:	af00      	add	r7, sp, #0
 800f8e4:	4801      	ldr	r0, [pc, #4]	; (800f8ec <__tcf_0+0xc>)
 800f8e6:	f7ff ffec 	bl	800f8c2 <_ZN5LexerD1Ev>
 800f8ea:	bd80      	pop	{r7, pc}
 800f8ec:	20000398 	.word	0x20000398

0800f8f0 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ERKS8_>:
      _Move_ctor_base(const _Move_ctor_base&) = default;
 800f8f0:	b580      	push	{r7, lr}
 800f8f2:	b082      	sub	sp, #8
 800f8f4:	af00      	add	r7, sp, #0
 800f8f6:	6078      	str	r0, [r7, #4]
 800f8f8:	6039      	str	r1, [r7, #0]
 800f8fa:	687b      	ldr	r3, [r7, #4]
 800f8fc:	683a      	ldr	r2, [r7, #0]
 800f8fe:	4611      	mov	r1, r2
 800f900:	4618      	mov	r0, r3
 800f902:	f000 fbbc 	bl	801007e <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ERKS8_>
 800f906:	687b      	ldr	r3, [r7, #4]
 800f908:	4618      	mov	r0, r3
 800f90a:	3708      	adds	r7, #8
 800f90c:	46bd      	mov	sp, r7
 800f90e:	bd80      	pop	{r7, pc}

0800f910 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ERKS8_>:
      _Copy_assign_base(const _Copy_assign_base&) = default;
 800f910:	b580      	push	{r7, lr}
 800f912:	b082      	sub	sp, #8
 800f914:	af00      	add	r7, sp, #0
 800f916:	6078      	str	r0, [r7, #4]
 800f918:	6039      	str	r1, [r7, #0]
 800f91a:	687b      	ldr	r3, [r7, #4]
 800f91c:	683a      	ldr	r2, [r7, #0]
 800f91e:	4611      	mov	r1, r2
 800f920:	4618      	mov	r0, r3
 800f922:	f7ff ffe5 	bl	800f8f0 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ERKS8_>
 800f926:	687b      	ldr	r3, [r7, #4]
 800f928:	4618      	mov	r0, r3
 800f92a:	3708      	adds	r7, #8
 800f92c:	46bd      	mov	sp, r7
 800f92e:	bd80      	pop	{r7, pc}

0800f930 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ERKS8_>:
      _Move_assign_base(const _Move_assign_base&) = default;
 800f930:	b580      	push	{r7, lr}
 800f932:	b082      	sub	sp, #8
 800f934:	af00      	add	r7, sp, #0
 800f936:	6078      	str	r0, [r7, #4]
 800f938:	6039      	str	r1, [r7, #0]
 800f93a:	687b      	ldr	r3, [r7, #4]
 800f93c:	683a      	ldr	r2, [r7, #0]
 800f93e:	4611      	mov	r1, r2
 800f940:	4618      	mov	r0, r3
 800f942:	f7ff ffe5 	bl	800f910 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ERKS8_>
 800f946:	687b      	ldr	r3, [r7, #4]
 800f948:	4618      	mov	r0, r3
 800f94a:	3708      	adds	r7, #8
 800f94c:	46bd      	mov	sp, r7
 800f94e:	bd80      	pop	{r7, pc}

0800f950 <_ZNSt8__detail9__variant13_Variant_baseIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ERKS8_>:
      _Variant_base(const _Variant_base&) = default;
 800f950:	b580      	push	{r7, lr}
 800f952:	b082      	sub	sp, #8
 800f954:	af00      	add	r7, sp, #0
 800f956:	6078      	str	r0, [r7, #4]
 800f958:	6039      	str	r1, [r7, #0]
 800f95a:	687b      	ldr	r3, [r7, #4]
 800f95c:	683a      	ldr	r2, [r7, #0]
 800f95e:	4611      	mov	r1, r2
 800f960:	4618      	mov	r0, r3
 800f962:	f7ff ffe5 	bl	800f930 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ERKS8_>
 800f966:	687b      	ldr	r3, [r7, #4]
 800f968:	4618      	mov	r0, r3
 800f96a:	3708      	adds	r7, #8
 800f96c:	46bd      	mov	sp, r7
 800f96e:	bd80      	pop	{r7, pc}

0800f970 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ERKS6_>:
      variant(const variant& __rhs) = default;
 800f970:	b580      	push	{r7, lr}
 800f972:	b082      	sub	sp, #8
 800f974:	af00      	add	r7, sp, #0
 800f976:	6078      	str	r0, [r7, #4]
 800f978:	6039      	str	r1, [r7, #0]
 800f97a:	687b      	ldr	r3, [r7, #4]
 800f97c:	683a      	ldr	r2, [r7, #0]
 800f97e:	4611      	mov	r1, r2
 800f980:	4618      	mov	r0, r3
 800f982:	f7ff ffe5 	bl	800f950 <_ZNSt8__detail9__variant13_Variant_baseIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ERKS8_>
 800f986:	687b      	ldr	r3, [r7, #4]
 800f988:	4618      	mov	r0, r3
 800f98a:	3708      	adds	r7, #8
 800f98c:	46bd      	mov	sp, r7
 800f98e:	bd80      	pop	{r7, pc}

0800f990 <_ZN5TokenC1ERKS_>:
 800f990:	b580      	push	{r7, lr}
 800f992:	b082      	sub	sp, #8
 800f994:	af00      	add	r7, sp, #0
 800f996:	6078      	str	r0, [r7, #4]
 800f998:	6039      	str	r1, [r7, #0]
 800f99a:	683b      	ldr	r3, [r7, #0]
 800f99c:	781a      	ldrb	r2, [r3, #0]
 800f99e:	687b      	ldr	r3, [r7, #4]
 800f9a0:	701a      	strb	r2, [r3, #0]
 800f9a2:	687b      	ldr	r3, [r7, #4]
 800f9a4:	1d1a      	adds	r2, r3, #4
 800f9a6:	683b      	ldr	r3, [r7, #0]
 800f9a8:	3304      	adds	r3, #4
 800f9aa:	4619      	mov	r1, r3
 800f9ac:	4610      	mov	r0, r2
 800f9ae:	f7ff ffdf 	bl	800f970 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ERKS6_>
 800f9b2:	687b      	ldr	r3, [r7, #4]
 800f9b4:	4618      	mov	r0, r3
 800f9b6:	3708      	adds	r7, #8
 800f9b8:	46bd      	mov	sp, r7
 800f9ba:	bd80      	pop	{r7, pc}

0800f9bc <_ZN5Lexer11build_tokenEv>:
{
 800f9bc:	b580      	push	{r7, lr}
 800f9be:	b082      	sub	sp, #8
 800f9c0:	af00      	add	r7, sp, #0
 800f9c2:	6078      	str	r0, [r7, #4]
	static Lexer lex;
 800f9c4:	4b1b      	ldr	r3, [pc, #108]	; (800fa34 <_ZN5Lexer11build_tokenEv+0x78>)
 800f9c6:	781b      	ldrb	r3, [r3, #0]
 800f9c8:	f3bf 8f5b 	dmb	ish
 800f9cc:	b2db      	uxtb	r3, r3
 800f9ce:	f003 0301 	and.w	r3, r3, #1
 800f9d2:	2b00      	cmp	r3, #0
 800f9d4:	bf0c      	ite	eq
 800f9d6:	2301      	moveq	r3, #1
 800f9d8:	2300      	movne	r3, #0
 800f9da:	b2db      	uxtb	r3, r3
 800f9dc:	2b00      	cmp	r3, #0
 800f9de:	d013      	beq.n	800fa08 <_ZN5Lexer11build_tokenEv+0x4c>
 800f9e0:	4814      	ldr	r0, [pc, #80]	; (800fa34 <_ZN5Lexer11build_tokenEv+0x78>)
 800f9e2:	f013 fd79 	bl	80234d8 <__cxa_guard_acquire>
 800f9e6:	4603      	mov	r3, r0
 800f9e8:	2b00      	cmp	r3, #0
 800f9ea:	bf14      	ite	ne
 800f9ec:	2301      	movne	r3, #1
 800f9ee:	2300      	moveq	r3, #0
 800f9f0:	b2db      	uxtb	r3, r3
 800f9f2:	2b00      	cmp	r3, #0
 800f9f4:	d008      	beq.n	800fa08 <_ZN5Lexer11build_tokenEv+0x4c>
 800f9f6:	4810      	ldr	r0, [pc, #64]	; (800fa38 <_ZN5Lexer11build_tokenEv+0x7c>)
 800f9f8:	f7ff fc49 	bl	800f28e <_ZN5LexerC1Ev>
 800f9fc:	480d      	ldr	r0, [pc, #52]	; (800fa34 <_ZN5Lexer11build_tokenEv+0x78>)
 800f9fe:	f013 fd77 	bl	80234f0 <__cxa_guard_release>
 800fa02:	480e      	ldr	r0, [pc, #56]	; (800fa3c <_ZN5Lexer11build_tokenEv+0x80>)
 800fa04:	f015 f9bd 	bl	8024d82 <atexit>
	lex.get_working_char();
 800fa08:	480b      	ldr	r0, [pc, #44]	; (800fa38 <_ZN5Lexer11build_tokenEv+0x7c>)
 800fa0a:	f000 f86f 	bl	800faec <_ZN5Lexer16get_working_charEv>

	if (lex.build_token_value())
 800fa0e:	480a      	ldr	r0, [pc, #40]	; (800fa38 <_ZN5Lexer11build_tokenEv+0x7c>)
 800fa10:	f7ff ff28 	bl	800f864 <_ZN5Lexer17build_token_valueEv>
 800fa14:	4603      	mov	r3, r0
 800fa16:	2b00      	cmp	r3, #0
 800fa18:	d004      	beq.n	800fa24 <_ZN5Lexer11build_tokenEv+0x68>
	{
		return lex.product;
 800fa1a:	4909      	ldr	r1, [pc, #36]	; (800fa40 <_ZN5Lexer11build_tokenEv+0x84>)
 800fa1c:	6878      	ldr	r0, [r7, #4]
 800fa1e:	f7ff ffb7 	bl	800f990 <_ZN5TokenC1ERKS_>
 800fa22:	e003      	b.n	800fa2c <_ZN5Lexer11build_tokenEv+0x70>
	}

	return lex.product;
 800fa24:	4906      	ldr	r1, [pc, #24]	; (800fa40 <_ZN5Lexer11build_tokenEv+0x84>)
 800fa26:	6878      	ldr	r0, [r7, #4]
 800fa28:	f7ff ffb2 	bl	800f990 <_ZN5TokenC1ERKS_>
}
 800fa2c:	6878      	ldr	r0, [r7, #4]
 800fa2e:	3708      	adds	r7, #8
 800fa30:	46bd      	mov	sp, r7
 800fa32:	bd80      	pop	{r7, pc}
 800fa34:	200003bc 	.word	0x200003bc
 800fa38:	20000398 	.word	0x20000398
 800fa3c:	0800f8e1 	.word	0x0800f8e1
 800fa40:	2000039c 	.word	0x2000039c

0800fa44 <_ZN5Lexer12skip_commentEv>:

void Lexer::skip_comment()
{
 800fa44:	b580      	push	{r7, lr}
 800fa46:	b082      	sub	sp, #8
 800fa48:	af00      	add	r7, sp, #0
 800fa4a:	6078      	str	r0, [r7, #4]
	while (char_buffer == '#')
 800fa4c:	687b      	ldr	r3, [r7, #4]
 800fa4e:	781b      	ldrb	r3, [r3, #0]
 800fa50:	2b23      	cmp	r3, #35	; 0x23
 800fa52:	d111      	bne.n	800fa78 <_ZN5Lexer12skip_commentEv+0x34>
	{
		while (char_buffer != '\n')
 800fa54:	687b      	ldr	r3, [r7, #4]
 800fa56:	781b      	ldrb	r3, [r3, #0]
 800fa58:	2b0a      	cmp	r3, #10
 800fa5a:	d006      	beq.n	800fa6a <_ZN5Lexer12skip_commentEv+0x26>
		{
			char_buffer = Transmitter::receive_code_char();
 800fa5c:	f009 f9b4 	bl	8018dc8 <_ZN11Transmitter17receive_code_charEv>
 800fa60:	4603      	mov	r3, r0
 800fa62:	461a      	mov	r2, r3
 800fa64:	687b      	ldr	r3, [r7, #4]
 800fa66:	701a      	strb	r2, [r3, #0]
		while (char_buffer != '\n')
 800fa68:	e7f4      	b.n	800fa54 <_ZN5Lexer12skip_commentEv+0x10>
		}
		char_buffer = Transmitter::receive_code_char();
 800fa6a:	f009 f9ad 	bl	8018dc8 <_ZN11Transmitter17receive_code_charEv>
 800fa6e:	4603      	mov	r3, r0
 800fa70:	461a      	mov	r2, r3
 800fa72:	687b      	ldr	r3, [r7, #4]
 800fa74:	701a      	strb	r2, [r3, #0]
	while (char_buffer == '#')
 800fa76:	e7e9      	b.n	800fa4c <_ZN5Lexer12skip_commentEv+0x8>
	}
}
 800fa78:	bf00      	nop
 800fa7a:	3708      	adds	r7, #8
 800fa7c:	46bd      	mov	sp, r7
 800fa7e:	bd80      	pop	{r7, pc}

0800fa80 <_ZN5Lexer15skip_whitespaceEv>:

void Lexer::skip_whitespace()
{
 800fa80:	b580      	push	{r7, lr}
 800fa82:	b082      	sub	sp, #8
 800fa84:	af00      	add	r7, sp, #0
 800fa86:	6078      	str	r0, [r7, #4]
	while (isspace(char_buffer) && char_buffer != '\n')
 800fa88:	687b      	ldr	r3, [r7, #4]
 800fa8a:	781b      	ldrb	r3, [r3, #0]
 800fa8c:	4618      	mov	r0, r3
 800fa8e:	f015 f9b9 	bl	8024e04 <isspace>
 800fa92:	4603      	mov	r3, r0
 800fa94:	2b00      	cmp	r3, #0
 800fa96:	d00a      	beq.n	800faae <_ZN5Lexer15skip_whitespaceEv+0x2e>
 800fa98:	687b      	ldr	r3, [r7, #4]
 800fa9a:	781b      	ldrb	r3, [r3, #0]
 800fa9c:	2b0a      	cmp	r3, #10
 800fa9e:	d006      	beq.n	800faae <_ZN5Lexer15skip_whitespaceEv+0x2e>
	{
		char_buffer = Transmitter::receive_code_char();
 800faa0:	f009 f992 	bl	8018dc8 <_ZN11Transmitter17receive_code_charEv>
 800faa4:	4603      	mov	r3, r0
 800faa6:	461a      	mov	r2, r3
 800faa8:	687b      	ldr	r3, [r7, #4]
 800faaa:	701a      	strb	r2, [r3, #0]
	while (isspace(char_buffer) && char_buffer != '\n')
 800faac:	e7ec      	b.n	800fa88 <_ZN5Lexer15skip_whitespaceEv+0x8>
	}
}
 800faae:	bf00      	nop
 800fab0:	3708      	adds	r7, #8
 800fab2:	46bd      	mov	sp, r7
 800fab4:	bd80      	pop	{r7, pc}

0800fab6 <_ZN5Lexer15is_invalid_charEv>:

bool Lexer::is_invalid_char()
{
 800fab6:	b580      	push	{r7, lr}
 800fab8:	b082      	sub	sp, #8
 800faba:	af00      	add	r7, sp, #0
 800fabc:	6078      	str	r0, [r7, #4]
	return (isspace(char_buffer) && char_buffer != '\n') || char_buffer == '#';
 800fabe:	687b      	ldr	r3, [r7, #4]
 800fac0:	781b      	ldrb	r3, [r3, #0]
 800fac2:	4618      	mov	r0, r3
 800fac4:	f015 f99e 	bl	8024e04 <isspace>
 800fac8:	4603      	mov	r3, r0
 800faca:	2b00      	cmp	r3, #0
 800facc:	d003      	beq.n	800fad6 <_ZN5Lexer15is_invalid_charEv+0x20>
 800face:	687b      	ldr	r3, [r7, #4]
 800fad0:	781b      	ldrb	r3, [r3, #0]
 800fad2:	2b0a      	cmp	r3, #10
 800fad4:	d103      	bne.n	800fade <_ZN5Lexer15is_invalid_charEv+0x28>
 800fad6:	687b      	ldr	r3, [r7, #4]
 800fad8:	781b      	ldrb	r3, [r3, #0]
 800fada:	2b23      	cmp	r3, #35	; 0x23
 800fadc:	d101      	bne.n	800fae2 <_ZN5Lexer15is_invalid_charEv+0x2c>
 800fade:	2301      	movs	r3, #1
 800fae0:	e000      	b.n	800fae4 <_ZN5Lexer15is_invalid_charEv+0x2e>
 800fae2:	2300      	movs	r3, #0
}
 800fae4:	4618      	mov	r0, r3
 800fae6:	3708      	adds	r7, #8
 800fae8:	46bd      	mov	sp, r7
 800faea:	bd80      	pop	{r7, pc}

0800faec <_ZN5Lexer16get_working_charEv>:

void Lexer::get_working_char()
{
 800faec:	b580      	push	{r7, lr}
 800faee:	b082      	sub	sp, #8
 800faf0:	af00      	add	r7, sp, #0
 800faf2:	6078      	str	r0, [r7, #4]
	while (is_invalid_char())
 800faf4:	6878      	ldr	r0, [r7, #4]
 800faf6:	f7ff ffde 	bl	800fab6 <_ZN5Lexer15is_invalid_charEv>
 800fafa:	4603      	mov	r3, r0
 800fafc:	2b00      	cmp	r3, #0
 800fafe:	d006      	beq.n	800fb0e <_ZN5Lexer16get_working_charEv+0x22>
	{
		skip_comment();
 800fb00:	6878      	ldr	r0, [r7, #4]
 800fb02:	f7ff ff9f 	bl	800fa44 <_ZN5Lexer12skip_commentEv>
		skip_whitespace();
 800fb06:	6878      	ldr	r0, [r7, #4]
 800fb08:	f7ff ffba 	bl	800fa80 <_ZN5Lexer15skip_whitespaceEv>
	while (is_invalid_char())
 800fb0c:	e7f2      	b.n	800faf4 <_ZN5Lexer16get_working_charEv+0x8>
	}
}
 800fb0e:	bf00      	nop
 800fb10:	3708      	adds	r7, #8
 800fb12:	46bd      	mov	sp, r7
 800fb14:	bd80      	pop	{r7, pc}

0800fb16 <_ZZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN11_Save_errnoC1Ev>:
      _Ret __ret;

      _CharT* __endptr;

      struct _Save_errno {
	_Save_errno() : _M_errno(errno) { errno = 0; }
 800fb16:	b580      	push	{r7, lr}
 800fb18:	b082      	sub	sp, #8
 800fb1a:	af00      	add	r7, sp, #0
 800fb1c:	6078      	str	r0, [r7, #4]
 800fb1e:	f015 f937 	bl	8024d90 <__errno>
 800fb22:	4603      	mov	r3, r0
 800fb24:	681a      	ldr	r2, [r3, #0]
 800fb26:	687b      	ldr	r3, [r7, #4]
 800fb28:	601a      	str	r2, [r3, #0]
 800fb2a:	f015 f931 	bl	8024d90 <__errno>
 800fb2e:	4603      	mov	r3, r0
 800fb30:	2200      	movs	r2, #0
 800fb32:	601a      	str	r2, [r3, #0]
 800fb34:	687b      	ldr	r3, [r7, #4]
 800fb36:	4618      	mov	r0, r3
 800fb38:	3708      	adds	r7, #8
 800fb3a:	46bd      	mov	sp, r7
 800fb3c:	bd80      	pop	{r7, pc}

0800fb3e <_ZZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN11_Save_errnoD1Ev>:
	~_Save_errno() { if (errno == 0) errno = _M_errno; }
 800fb3e:	b590      	push	{r4, r7, lr}
 800fb40:	b083      	sub	sp, #12
 800fb42:	af00      	add	r7, sp, #0
 800fb44:	6078      	str	r0, [r7, #4]
 800fb46:	f015 f923 	bl	8024d90 <__errno>
 800fb4a:	4603      	mov	r3, r0
 800fb4c:	681b      	ldr	r3, [r3, #0]
 800fb4e:	2b00      	cmp	r3, #0
 800fb50:	bf0c      	ite	eq
 800fb52:	2301      	moveq	r3, #1
 800fb54:	2300      	movne	r3, #0
 800fb56:	b2db      	uxtb	r3, r3
 800fb58:	2b00      	cmp	r3, #0
 800fb5a:	d005      	beq.n	800fb68 <_ZZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN11_Save_errnoD1Ev+0x2a>
 800fb5c:	687b      	ldr	r3, [r7, #4]
 800fb5e:	681c      	ldr	r4, [r3, #0]
 800fb60:	f015 f916 	bl	8024d90 <__errno>
 800fb64:	4603      	mov	r3, r0
 800fb66:	601c      	str	r4, [r3, #0]
 800fb68:	687b      	ldr	r3, [r7, #4]
 800fb6a:	4618      	mov	r0, r3
 800fb6c:	370c      	adds	r7, #12
 800fb6e:	46bd      	mov	sp, r7
 800fb70:	bd90      	pop	{r4, r7, pc}

0800fb72 <_ZZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN10_Range_chk6_S_chkElSt17integral_constantIbLb1EE>:
      struct _Range_chk {
	  static bool
	  _S_chk(_TRet, std::false_type) { return false; }

	  static bool
	  _S_chk(_TRet __val, std::true_type) // only called when _Ret is int
 800fb72:	b480      	push	{r7}
 800fb74:	b083      	sub	sp, #12
 800fb76:	af00      	add	r7, sp, #0
 800fb78:	6078      	str	r0, [r7, #4]
 800fb7a:	7039      	strb	r1, [r7, #0]
	  {
	    return __val < _TRet(__numeric_traits<int>::__min)
	      || __val > _TRet(__numeric_traits<int>::__max);
 800fb7c:	2300      	movs	r3, #0
	  }
 800fb7e:	4618      	mov	r0, r3
 800fb80:	370c      	adds	r7, #12
 800fb82:	46bd      	mov	sp, r7
 800fb84:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fb88:	4770      	bx	lr

0800fb8a <_ZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_>:
    __stoa(_TRet (*__convf) (const _CharT*, _CharT**, _Base...),
 800fb8a:	b590      	push	{r4, r7, lr}
 800fb8c:	b08b      	sub	sp, #44	; 0x2c
 800fb8e:	af00      	add	r7, sp, #0
 800fb90:	60f8      	str	r0, [r7, #12]
 800fb92:	60b9      	str	r1, [r7, #8]
 800fb94:	607a      	str	r2, [r7, #4]
 800fb96:	603b      	str	r3, [r7, #0]
      } const __save_errno;
 800fb98:	f107 0314 	add.w	r3, r7, #20
 800fb9c:	4618      	mov	r0, r3
 800fb9e:	f7ff ffba 	bl	800fb16 <_ZZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN11_Save_errnoC1Ev>
      };

      const _TRet __tmp = __convf(__str, &__endptr, __base...);
 800fba2:	68fb      	ldr	r3, [r7, #12]
 800fba4:	f107 0118 	add.w	r1, r7, #24
 800fba8:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800fbaa:	6878      	ldr	r0, [r7, #4]
 800fbac:	4798      	blx	r3
 800fbae:	6278      	str	r0, [r7, #36]	; 0x24

      if (__endptr == __str)
 800fbb0:	69bb      	ldr	r3, [r7, #24]
 800fbb2:	687a      	ldr	r2, [r7, #4]
 800fbb4:	429a      	cmp	r2, r3
 800fbb6:	d102      	bne.n	800fbbe <_ZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_+0x34>
	std::__throw_invalid_argument(__name);
 800fbb8:	68b8      	ldr	r0, [r7, #8]
 800fbba:	f013 fd67 	bl	802368c <_ZSt24__throw_invalid_argumentPKc>
      else if (errno == ERANGE
 800fbbe:	f015 f8e7 	bl	8024d90 <__errno>
 800fbc2:	4603      	mov	r3, r0
 800fbc4:	681b      	ldr	r3, [r3, #0]
	  || _Range_chk::_S_chk(__tmp, std::is_same<_Ret, int>{}))
 800fbc6:	2b22      	cmp	r3, #34	; 0x22
 800fbc8:	d006      	beq.n	800fbd8 <_ZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_+0x4e>
 800fbca:	4621      	mov	r1, r4
 800fbcc:	6a78      	ldr	r0, [r7, #36]	; 0x24
 800fbce:	f7ff ffd0 	bl	800fb72 <_ZZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN10_Range_chk6_S_chkElSt17integral_constantIbLb1EE>
 800fbd2:	4603      	mov	r3, r0
 800fbd4:	2b00      	cmp	r3, #0
 800fbd6:	d001      	beq.n	800fbdc <_ZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_+0x52>
 800fbd8:	2301      	movs	r3, #1
 800fbda:	e000      	b.n	800fbde <_ZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_+0x54>
 800fbdc:	2300      	movs	r3, #0
      else if (errno == ERANGE
 800fbde:	2b00      	cmp	r3, #0
 800fbe0:	d002      	beq.n	800fbe8 <_ZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_+0x5e>
	std::__throw_out_of_range(__name);
 800fbe2:	68b8      	ldr	r0, [r7, #8]
 800fbe4:	f013 fd58 	bl	8023698 <_ZSt20__throw_out_of_rangePKc>
      else
	__ret = __tmp;
 800fbe8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800fbea:	623b      	str	r3, [r7, #32]

      if (__idx)
 800fbec:	683b      	ldr	r3, [r7, #0]
 800fbee:	2b00      	cmp	r3, #0
 800fbf0:	d005      	beq.n	800fbfe <_ZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_+0x74>
	*__idx = __endptr - __str;
 800fbf2:	69ba      	ldr	r2, [r7, #24]
 800fbf4:	687b      	ldr	r3, [r7, #4]
 800fbf6:	1ad3      	subs	r3, r2, r3
 800fbf8:	461a      	mov	r2, r3
 800fbfa:	683b      	ldr	r3, [r7, #0]
 800fbfc:	601a      	str	r2, [r3, #0]

      return __ret;
 800fbfe:	6a3c      	ldr	r4, [r7, #32]
      } const __save_errno;
 800fc00:	f107 0314 	add.w	r3, r7, #20
 800fc04:	4618      	mov	r0, r3
 800fc06:	f7ff ff9a 	bl	800fb3e <_ZZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN11_Save_errnoD1Ev>
      return __ret;
 800fc0a:	4623      	mov	r3, r4
    }
 800fc0c:	4618      	mov	r0, r3
 800fc0e:	372c      	adds	r7, #44	; 0x2c
 800fc10:	46bd      	mov	sp, r7
 800fc12:	bd90      	pop	{r4, r7, pc}

0800fc14 <_ZZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN11_Save_errnoC1Ev>:
	_Save_errno() : _M_errno(errno) { errno = 0; }
 800fc14:	b580      	push	{r7, lr}
 800fc16:	b082      	sub	sp, #8
 800fc18:	af00      	add	r7, sp, #0
 800fc1a:	6078      	str	r0, [r7, #4]
 800fc1c:	f015 f8b8 	bl	8024d90 <__errno>
 800fc20:	4603      	mov	r3, r0
 800fc22:	681a      	ldr	r2, [r3, #0]
 800fc24:	687b      	ldr	r3, [r7, #4]
 800fc26:	601a      	str	r2, [r3, #0]
 800fc28:	f015 f8b2 	bl	8024d90 <__errno>
 800fc2c:	4603      	mov	r3, r0
 800fc2e:	2200      	movs	r2, #0
 800fc30:	601a      	str	r2, [r3, #0]
 800fc32:	687b      	ldr	r3, [r7, #4]
 800fc34:	4618      	mov	r0, r3
 800fc36:	3708      	adds	r7, #8
 800fc38:	46bd      	mov	sp, r7
 800fc3a:	bd80      	pop	{r7, pc}

0800fc3c <_ZZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN11_Save_errnoD1Ev>:
	~_Save_errno() { if (errno == 0) errno = _M_errno; }
 800fc3c:	b590      	push	{r4, r7, lr}
 800fc3e:	b083      	sub	sp, #12
 800fc40:	af00      	add	r7, sp, #0
 800fc42:	6078      	str	r0, [r7, #4]
 800fc44:	f015 f8a4 	bl	8024d90 <__errno>
 800fc48:	4603      	mov	r3, r0
 800fc4a:	681b      	ldr	r3, [r3, #0]
 800fc4c:	2b00      	cmp	r3, #0
 800fc4e:	bf0c      	ite	eq
 800fc50:	2301      	moveq	r3, #1
 800fc52:	2300      	movne	r3, #0
 800fc54:	b2db      	uxtb	r3, r3
 800fc56:	2b00      	cmp	r3, #0
 800fc58:	d005      	beq.n	800fc66 <_ZZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN11_Save_errnoD1Ev+0x2a>
 800fc5a:	687b      	ldr	r3, [r7, #4]
 800fc5c:	681c      	ldr	r4, [r3, #0]
 800fc5e:	f015 f897 	bl	8024d90 <__errno>
 800fc62:	4603      	mov	r3, r0
 800fc64:	601c      	str	r4, [r3, #0]
 800fc66:	687b      	ldr	r3, [r7, #4]
 800fc68:	4618      	mov	r0, r3
 800fc6a:	370c      	adds	r7, #12
 800fc6c:	46bd      	mov	sp, r7
 800fc6e:	bd90      	pop	{r4, r7, pc}

0800fc70 <_ZZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN10_Range_chk6_S_chkEfSt17integral_constantIbLb0EE>:
	  _S_chk(_TRet, std::false_type) { return false; }
 800fc70:	b480      	push	{r7}
 800fc72:	b083      	sub	sp, #12
 800fc74:	af00      	add	r7, sp, #0
 800fc76:	ed87 0a01 	vstr	s0, [r7, #4]
 800fc7a:	7038      	strb	r0, [r7, #0]
 800fc7c:	2300      	movs	r3, #0
 800fc7e:	4618      	mov	r0, r3
 800fc80:	370c      	adds	r7, #12
 800fc82:	46bd      	mov	sp, r7
 800fc84:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fc88:	4770      	bx	lr

0800fc8a <_ZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_>:
    __stoa(_TRet (*__convf) (const _CharT*, _CharT**, _Base...),
 800fc8a:	b590      	push	{r4, r7, lr}
 800fc8c:	b08b      	sub	sp, #44	; 0x2c
 800fc8e:	af00      	add	r7, sp, #0
 800fc90:	60f8      	str	r0, [r7, #12]
 800fc92:	60b9      	str	r1, [r7, #8]
 800fc94:	607a      	str	r2, [r7, #4]
 800fc96:	603b      	str	r3, [r7, #0]
      } const __save_errno;
 800fc98:	f107 0314 	add.w	r3, r7, #20
 800fc9c:	4618      	mov	r0, r3
 800fc9e:	f7ff ffb9 	bl	800fc14 <_ZZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN11_Save_errnoC1Ev>
      const _TRet __tmp = __convf(__str, &__endptr, __base...);
 800fca2:	68fb      	ldr	r3, [r7, #12]
 800fca4:	f107 0218 	add.w	r2, r7, #24
 800fca8:	4611      	mov	r1, r2
 800fcaa:	6878      	ldr	r0, [r7, #4]
 800fcac:	4798      	blx	r3
 800fcae:	ed87 0a09 	vstr	s0, [r7, #36]	; 0x24
      if (__endptr == __str)
 800fcb2:	69bb      	ldr	r3, [r7, #24]
 800fcb4:	687a      	ldr	r2, [r7, #4]
 800fcb6:	429a      	cmp	r2, r3
 800fcb8:	d102      	bne.n	800fcc0 <_ZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_+0x36>
	std::__throw_invalid_argument(__name);
 800fcba:	68b8      	ldr	r0, [r7, #8]
 800fcbc:	f013 fce6 	bl	802368c <_ZSt24__throw_invalid_argumentPKc>
      else if (errno == ERANGE
 800fcc0:	f015 f866 	bl	8024d90 <__errno>
 800fcc4:	4603      	mov	r3, r0
 800fcc6:	681b      	ldr	r3, [r3, #0]
	  || _Range_chk::_S_chk(__tmp, std::is_same<_Ret, int>{}))
 800fcc8:	2b22      	cmp	r3, #34	; 0x22
 800fcca:	d007      	beq.n	800fcdc <_ZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_+0x52>
 800fccc:	4620      	mov	r0, r4
 800fcce:	ed97 0a09 	vldr	s0, [r7, #36]	; 0x24
 800fcd2:	f7ff ffcd 	bl	800fc70 <_ZZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN10_Range_chk6_S_chkEfSt17integral_constantIbLb0EE>
 800fcd6:	4603      	mov	r3, r0
 800fcd8:	2b00      	cmp	r3, #0
 800fcda:	d001      	beq.n	800fce0 <_ZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_+0x56>
 800fcdc:	2301      	movs	r3, #1
 800fcde:	e000      	b.n	800fce2 <_ZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_+0x58>
 800fce0:	2300      	movs	r3, #0
      else if (errno == ERANGE
 800fce2:	2b00      	cmp	r3, #0
 800fce4:	d002      	beq.n	800fcec <_ZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_+0x62>
	std::__throw_out_of_range(__name);
 800fce6:	68b8      	ldr	r0, [r7, #8]
 800fce8:	f013 fcd6 	bl	8023698 <_ZSt20__throw_out_of_rangePKc>
	__ret = __tmp;
 800fcec:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800fcee:	623b      	str	r3, [r7, #32]
      if (__idx)
 800fcf0:	683b      	ldr	r3, [r7, #0]
 800fcf2:	2b00      	cmp	r3, #0
 800fcf4:	d005      	beq.n	800fd02 <_ZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_+0x78>
	*__idx = __endptr - __str;
 800fcf6:	69ba      	ldr	r2, [r7, #24]
 800fcf8:	687b      	ldr	r3, [r7, #4]
 800fcfa:	1ad3      	subs	r3, r2, r3
 800fcfc:	461a      	mov	r2, r3
 800fcfe:	683b      	ldr	r3, [r7, #0]
 800fd00:	601a      	str	r2, [r3, #0]
      return __ret;
 800fd02:	6a3c      	ldr	r4, [r7, #32]
      } const __save_errno;
 800fd04:	f107 0314 	add.w	r3, r7, #20
 800fd08:	4618      	mov	r0, r3
 800fd0a:	f7ff ff97 	bl	800fc3c <_ZZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN11_Save_errnoD1Ev>
      return __ret;
 800fd0e:	ee07 4a90 	vmov	s15, r4
    }
 800fd12:	eeb0 0a67 	vmov.f32	s0, s15
 800fd16:	372c      	adds	r7, #44	; 0x2c
 800fd18:	46bd      	mov	sp, r7
 800fd1a:	bd90      	pop	{r4, r7, pc}

0800fd1c <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEECI1NS0_16_Variant_storageILb0EJS7_ifbEEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 800fd1c:	b580      	push	{r7, lr}
 800fd1e:	b082      	sub	sp, #8
 800fd20:	af00      	add	r7, sp, #0
 800fd22:	6078      	str	r0, [r7, #4]
 800fd24:	7039      	strb	r1, [r7, #0]
 800fd26:	687b      	ldr	r3, [r7, #4]
 800fd28:	4611      	mov	r1, r2
 800fd2a:	4618      	mov	r0, r3
 800fd2c:	f000 f9df 	bl	80100ee <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 800fd30:	687b      	ldr	r3, [r7, #4]
 800fd32:	4618      	mov	r0, r3
 800fd34:	3708      	adds	r7, #8
 800fd36:	46bd      	mov	sp, r7
 800fd38:	bd80      	pop	{r7, pc}

0800fd3a <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEECI1NS0_16_Variant_storageILb0EJS7_ifbEEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 800fd3a:	b580      	push	{r7, lr}
 800fd3c:	b082      	sub	sp, #8
 800fd3e:	af00      	add	r7, sp, #0
 800fd40:	6078      	str	r0, [r7, #4]
 800fd42:	7039      	strb	r1, [r7, #0]
 800fd44:	687b      	ldr	r3, [r7, #4]
 800fd46:	4611      	mov	r1, r2
 800fd48:	4618      	mov	r0, r3
 800fd4a:	f7ff ffe7 	bl	800fd1c <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEECI1NS0_16_Variant_storageILb0EJS7_ifbEEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 800fd4e:	687b      	ldr	r3, [r7, #4]
 800fd50:	4618      	mov	r0, r3
 800fd52:	3708      	adds	r7, #8
 800fd54:	46bd      	mov	sp, r7
 800fd56:	bd80      	pop	{r7, pc}

0800fd58 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEECI1NS0_16_Variant_storageILb0EJS7_ifbEEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 800fd58:	b580      	push	{r7, lr}
 800fd5a:	b082      	sub	sp, #8
 800fd5c:	af00      	add	r7, sp, #0
 800fd5e:	6078      	str	r0, [r7, #4]
 800fd60:	7039      	strb	r1, [r7, #0]
 800fd62:	687b      	ldr	r3, [r7, #4]
 800fd64:	4611      	mov	r1, r2
 800fd66:	4618      	mov	r0, r3
 800fd68:	f7ff ffe7 	bl	800fd3a <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEECI1NS0_16_Variant_storageILb0EJS7_ifbEEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 800fd6c:	687b      	ldr	r3, [r7, #4]
 800fd6e:	4618      	mov	r0, r3
 800fd70:	3708      	adds	r7, #8
 800fd72:	46bd      	mov	sp, r7
 800fd74:	bd80      	pop	{r7, pc}

0800fd76 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEECI1NS0_16_Variant_storageILb0EJS7_ifbEEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 800fd76:	b580      	push	{r7, lr}
 800fd78:	b082      	sub	sp, #8
 800fd7a:	af00      	add	r7, sp, #0
 800fd7c:	6078      	str	r0, [r7, #4]
 800fd7e:	7039      	strb	r1, [r7, #0]
 800fd80:	687b      	ldr	r3, [r7, #4]
 800fd82:	4611      	mov	r1, r2
 800fd84:	4618      	mov	r0, r3
 800fd86:	f7ff ffe7 	bl	800fd58 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEECI1NS0_16_Variant_storageILb0EJS7_ifbEEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 800fd8a:	687b      	ldr	r3, [r7, #4]
 800fd8c:	4618      	mov	r0, r3
 800fd8e:	3708      	adds	r7, #8
 800fd90:	46bd      	mov	sp, r7
 800fd92:	bd80      	pop	{r7, pc}

0800fd94 <_ZNSt8__detail9__variant13_Variant_baseIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
	_Variant_base(in_place_index_t<_Np> __i, _Args&&... __args)
 800fd94:	b580      	push	{r7, lr}
 800fd96:	b082      	sub	sp, #8
 800fd98:	af00      	add	r7, sp, #0
 800fd9a:	6078      	str	r0, [r7, #4]
 800fd9c:	7039      	strb	r1, [r7, #0]
	: _Base(__i, std::forward<_Args>(__args)...)
 800fd9e:	687b      	ldr	r3, [r7, #4]
 800fda0:	4611      	mov	r1, r2
 800fda2:	4618      	mov	r0, r3
 800fda4:	f7ff ffe7 	bl	800fd76 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEECI1NS0_16_Variant_storageILb0EJS7_ifbEEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 800fda8:	687b      	ldr	r3, [r7, #4]
 800fdaa:	4618      	mov	r0, r3
 800fdac:	3708      	adds	r7, #8
 800fdae:	46bd      	mov	sp, r7
 800fdb0:	bd80      	pop	{r7, pc}

0800fdb2 <_ZNSt8__detail9__variant13_Variant_baseIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1Ev>:
      _Variant_base()
 800fdb2:	b580      	push	{r7, lr}
 800fdb4:	b082      	sub	sp, #8
 800fdb6:	af00      	add	r7, sp, #0
 800fdb8:	6078      	str	r0, [r7, #4]
      : _Variant_base(in_place_index<0>) { }
 800fdba:	4619      	mov	r1, r3
 800fdbc:	6878      	ldr	r0, [r7, #4]
 800fdbe:	f7ff ffe9 	bl	800fd94 <_ZNSt8__detail9__variant13_Variant_baseIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 800fdc2:	687b      	ldr	r3, [r7, #4]
 800fdc4:	4618      	mov	r0, r3
 800fdc6:	3708      	adds	r7, #8
 800fdc8:	46bd      	mov	sp, r7
 800fdca:	bd80      	pop	{r7, pc}

0800fdcc <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>:
      ~_Variant_storage()
 800fdcc:	b580      	push	{r7, lr}
 800fdce:	b082      	sub	sp, #8
 800fdd0:	af00      	add	r7, sp, #0
 800fdd2:	6078      	str	r0, [r7, #4]
      { _M_reset(); }
 800fdd4:	6878      	ldr	r0, [r7, #4]
 800fdd6:	f000 f99c 	bl	8010112 <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE8_M_resetEv>
 800fdda:	687b      	ldr	r3, [r7, #4]
 800fddc:	4618      	mov	r0, r3
 800fdde:	3708      	adds	r7, #8
 800fde0:	46bd      	mov	sp, r7
 800fde2:	bd80      	pop	{r7, pc}

0800fde4 <_ZNKSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEE4findERS4_>:
       *  iterator pointing to the sought after %pair. If unsuccessful it
       *  returns the past-the-end ( @c end() ) iterator.
       */

      const_iterator
      find(const key_type& __x) const
 800fde4:	b580      	push	{r7, lr}
 800fde6:	b082      	sub	sp, #8
 800fde8:	af00      	add	r7, sp, #0
 800fdea:	6078      	str	r0, [r7, #4]
 800fdec:	6039      	str	r1, [r7, #0]
      { return _M_t.find(__x); }
 800fdee:	687b      	ldr	r3, [r7, #4]
 800fdf0:	6839      	ldr	r1, [r7, #0]
 800fdf2:	4618      	mov	r0, r3
 800fdf4:	f000 f99b 	bl	801012e <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE4findERS1_>
 800fdf8:	4603      	mov	r3, r0
 800fdfa:	4618      	mov	r0, r3
 800fdfc:	3708      	adds	r7, #8
 800fdfe:	46bd      	mov	sp, r7
 800fe00:	bd80      	pop	{r7, pc}

0800fe02 <_ZNKSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
 800fe02:	b580      	push	{r7, lr}
 800fe04:	b082      	sub	sp, #8
 800fe06:	af00      	add	r7, sp, #0
 800fe08:	6078      	str	r0, [r7, #4]
      { return _M_t.end(); }
 800fe0a:	687b      	ldr	r3, [r7, #4]
 800fe0c:	4618      	mov	r0, r3
 800fe0e:	f000 f9ca 	bl	80101a6 <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE3endEv>
 800fe12:	4603      	mov	r3, r0
 800fe14:	4618      	mov	r0, r3
 800fe16:	3708      	adds	r7, #8
 800fe18:	46bd      	mov	sp, r7
 800fe1a:	bd80      	pop	{r7, pc}

0800fe1c <_ZStneRKSt23_Rb_tree_const_iteratorISt4pairIKc10token_typeEES6_>:
      operator!=(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 800fe1c:	b480      	push	{r7}
 800fe1e:	b083      	sub	sp, #12
 800fe20:	af00      	add	r7, sp, #0
 800fe22:	6078      	str	r0, [r7, #4]
 800fe24:	6039      	str	r1, [r7, #0]
      { return __x._M_node != __y._M_node; }
 800fe26:	687b      	ldr	r3, [r7, #4]
 800fe28:	681a      	ldr	r2, [r3, #0]
 800fe2a:	683b      	ldr	r3, [r7, #0]
 800fe2c:	681b      	ldr	r3, [r3, #0]
 800fe2e:	429a      	cmp	r2, r3
 800fe30:	bf14      	ite	ne
 800fe32:	2301      	movne	r3, #1
 800fe34:	2300      	moveq	r3, #0
 800fe36:	b2db      	uxtb	r3, r3
 800fe38:	4618      	mov	r0, r3
 800fe3a:	370c      	adds	r7, #12
 800fe3c:	46bd      	mov	sp, r7
 800fe3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fe42:	4770      	bx	lr

0800fe44 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKc10token_typeEEptEv>:
      operator->() const _GLIBCXX_NOEXCEPT
 800fe44:	b580      	push	{r7, lr}
 800fe46:	b082      	sub	sp, #8
 800fe48:	af00      	add	r7, sp, #0
 800fe4a:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(_M_node)->_M_valptr(); }
 800fe4c:	687b      	ldr	r3, [r7, #4]
 800fe4e:	681b      	ldr	r3, [r3, #0]
 800fe50:	4618      	mov	r0, r3
 800fe52:	f7f8 face 	bl	80083f2 <_ZNKSt13_Rb_tree_nodeISt4pairIKc10token_typeEE9_M_valptrEv>
 800fe56:	4603      	mov	r3, r0
 800fe58:	4618      	mov	r0, r3
 800fe5a:	3708      	adds	r7, #8
 800fe5c:	46bd      	mov	sp, r7
 800fe5e:	bd80      	pop	{r7, pc}

0800fe60 <_ZNKSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEE4findERS4_>:
      find(const key_type& __x) const
 800fe60:	b580      	push	{r7, lr}
 800fe62:	b082      	sub	sp, #8
 800fe64:	af00      	add	r7, sp, #0
 800fe66:	6078      	str	r0, [r7, #4]
 800fe68:	6039      	str	r1, [r7, #0]
      { return _M_t.find(__x); }
 800fe6a:	687b      	ldr	r3, [r7, #4]
 800fe6c:	6839      	ldr	r1, [r7, #0]
 800fe6e:	4618      	mov	r0, r3
 800fe70:	f000 f9aa 	bl	80101c8 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE4findERS1_>
 800fe74:	4603      	mov	r3, r0
 800fe76:	4618      	mov	r0, r3
 800fe78:	3708      	adds	r7, #8
 800fe7a:	46bd      	mov	sp, r7
 800fe7c:	bd80      	pop	{r7, pc}

0800fe7e <_ZNKSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
 800fe7e:	b580      	push	{r7, lr}
 800fe80:	b082      	sub	sp, #8
 800fe82:	af00      	add	r7, sp, #0
 800fe84:	6078      	str	r0, [r7, #4]
      { return _M_t.end(); }
 800fe86:	687b      	ldr	r3, [r7, #4]
 800fe88:	4618      	mov	r0, r3
 800fe8a:	f000 f9d9 	bl	8010240 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE3endEv>
 800fe8e:	4603      	mov	r3, r0
 800fe90:	4618      	mov	r0, r3
 800fe92:	3708      	adds	r7, #8
 800fe94:	46bd      	mov	sp, r7
 800fe96:	bd80      	pop	{r7, pc}

0800fe98 <_ZStneRKSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEES6_>:
      operator!=(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 800fe98:	b480      	push	{r7}
 800fe9a:	b083      	sub	sp, #12
 800fe9c:	af00      	add	r7, sp, #0
 800fe9e:	6078      	str	r0, [r7, #4]
 800fea0:	6039      	str	r1, [r7, #0]
      { return __x._M_node != __y._M_node; }
 800fea2:	687b      	ldr	r3, [r7, #4]
 800fea4:	681a      	ldr	r2, [r3, #0]
 800fea6:	683b      	ldr	r3, [r7, #0]
 800fea8:	681b      	ldr	r3, [r3, #0]
 800feaa:	429a      	cmp	r2, r3
 800feac:	bf14      	ite	ne
 800feae:	2301      	movne	r3, #1
 800feb0:	2300      	moveq	r3, #0
 800feb2:	b2db      	uxtb	r3, r3
 800feb4:	4618      	mov	r0, r3
 800feb6:	370c      	adds	r7, #12
 800feb8:	46bd      	mov	sp, r7
 800feba:	f85d 7b04 	ldr.w	r7, [sp], #4
 800febe:	4770      	bx	lr

0800fec0 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEEptEv>:
      operator->() const _GLIBCXX_NOEXCEPT
 800fec0:	b580      	push	{r7, lr}
 800fec2:	b082      	sub	sp, #8
 800fec4:	af00      	add	r7, sp, #0
 800fec6:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(_M_node)->_M_valptr(); }
 800fec8:	687b      	ldr	r3, [r7, #4]
 800feca:	681b      	ldr	r3, [r3, #0]
 800fecc:	4618      	mov	r0, r3
 800fece:	f7f8 fb6b 	bl	80085a8 <_ZNKSt13_Rb_tree_nodeISt4pairIKc12double_tokenEE9_M_valptrEv>
 800fed2:	4603      	mov	r3, r0
 800fed4:	4618      	mov	r0, r3
 800fed6:	3708      	adds	r7, #8
 800fed8:	46bd      	mov	sp, r7
 800feda:	bd80      	pop	{r7, pc}

0800fedc <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEE4findERSA_>:
      find(const key_type& __x) const
 800fedc:	b580      	push	{r7, lr}
 800fede:	b082      	sub	sp, #8
 800fee0:	af00      	add	r7, sp, #0
 800fee2:	6078      	str	r0, [r7, #4]
 800fee4:	6039      	str	r1, [r7, #0]
      { return _M_t.find(__x); }
 800fee6:	687b      	ldr	r3, [r7, #4]
 800fee8:	6839      	ldr	r1, [r7, #0]
 800feea:	4618      	mov	r0, r3
 800feec:	f000 f9b9 	bl	8010262 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE4findERS7_>
 800fef0:	4603      	mov	r3, r0
 800fef2:	4618      	mov	r0, r3
 800fef4:	3708      	adds	r7, #8
 800fef6:	46bd      	mov	sp, r7
 800fef8:	bd80      	pop	{r7, pc}

0800fefa <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
 800fefa:	b580      	push	{r7, lr}
 800fefc:	b082      	sub	sp, #8
 800fefe:	af00      	add	r7, sp, #0
 800ff00:	6078      	str	r0, [r7, #4]
      { return _M_t.end(); }
 800ff02:	687b      	ldr	r3, [r7, #4]
 800ff04:	4618      	mov	r0, r3
 800ff06:	f000 f9e8 	bl	80102da <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE3endEv>
 800ff0a:	4603      	mov	r3, r0
 800ff0c:	4618      	mov	r0, r3
 800ff0e:	3708      	adds	r7, #8
 800ff10:	46bd      	mov	sp, r7
 800ff12:	bd80      	pop	{r7, pc}

0800ff14 <_ZStneRKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEESC_>:
      operator!=(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 800ff14:	b480      	push	{r7}
 800ff16:	b083      	sub	sp, #12
 800ff18:	af00      	add	r7, sp, #0
 800ff1a:	6078      	str	r0, [r7, #4]
 800ff1c:	6039      	str	r1, [r7, #0]
      { return __x._M_node != __y._M_node; }
 800ff1e:	687b      	ldr	r3, [r7, #4]
 800ff20:	681a      	ldr	r2, [r3, #0]
 800ff22:	683b      	ldr	r3, [r7, #0]
 800ff24:	681b      	ldr	r3, [r3, #0]
 800ff26:	429a      	cmp	r2, r3
 800ff28:	bf14      	ite	ne
 800ff2a:	2301      	movne	r3, #1
 800ff2c:	2300      	moveq	r3, #0
 800ff2e:	b2db      	uxtb	r3, r3
 800ff30:	4618      	mov	r0, r3
 800ff32:	370c      	adds	r7, #12
 800ff34:	46bd      	mov	sp, r7
 800ff36:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ff3a:	4770      	bx	lr

0800ff3c <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEptEv>:
      operator->() const _GLIBCXX_NOEXCEPT
 800ff3c:	b580      	push	{r7, lr}
 800ff3e:	b082      	sub	sp, #8
 800ff40:	af00      	add	r7, sp, #0
 800ff42:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(_M_node)->_M_valptr(); }
 800ff44:	687b      	ldr	r3, [r7, #4]
 800ff46:	681b      	ldr	r3, [r3, #0]
 800ff48:	4618      	mov	r0, r3
 800ff4a:	f7f8 fac0 	bl	80084ce <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE9_M_valptrEv>
 800ff4e:	4603      	mov	r3, r0
 800ff50:	4618      	mov	r0, r3
 800ff52:	3708      	adds	r7, #8
 800ff54:	46bd      	mov	sp, r7
 800ff56:	bd80      	pop	{r7, pc}

0800ff58 <_ZNKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE5indexEv>:
      constexpr size_t index() const noexcept
 800ff58:	b480      	push	{r7}
 800ff5a:	b083      	sub	sp, #12
 800ff5c:	af00      	add	r7, sp, #0
 800ff5e:	6078      	str	r0, [r7, #4]
	if (this->_M_index ==
 800ff60:	687b      	ldr	r3, [r7, #4]
 800ff62:	7e1b      	ldrb	r3, [r3, #24]
 800ff64:	2bff      	cmp	r3, #255	; 0xff
 800ff66:	d102      	bne.n	800ff6e <_ZNKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE5indexEv+0x16>
	  return variant_npos;
 800ff68:	f04f 33ff 	mov.w	r3, #4294967295
 800ff6c:	e001      	b.n	800ff72 <_ZNKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE5indexEv+0x1a>
	return this->_M_index;
 800ff6e:	687b      	ldr	r3, [r7, #4]
 800ff70:	7e1b      	ldrb	r3, [r3, #24]
      }
 800ff72:	4618      	mov	r0, r3
 800ff74:	370c      	adds	r7, #12
 800ff76:	46bd      	mov	sp, r7
 800ff78:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ff7c:	4770      	bx	lr

0800ff7e <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_>:
	operator=(_Tp&& __rhs)
 800ff7e:	b590      	push	{r4, r7, lr}
 800ff80:	b085      	sub	sp, #20
 800ff82:	af00      	add	r7, sp, #0
 800ff84:	6078      	str	r0, [r7, #4]
 800ff86:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 800ff88:	2300      	movs	r3, #0
 800ff8a:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 800ff8c:	6878      	ldr	r0, [r7, #4]
 800ff8e:	f7ff ffe3 	bl	800ff58 <_ZNKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE5indexEv>
 800ff92:	4603      	mov	r3, r0
 800ff94:	2b00      	cmp	r3, #0
 800ff96:	bf0c      	ite	eq
 800ff98:	2301      	moveq	r3, #1
 800ff9a:	2300      	movne	r3, #0
 800ff9c:	b2db      	uxtb	r3, r3
 800ff9e:	2b00      	cmp	r3, #0
 800ffa0:	d00c      	beq.n	800ffbc <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_+0x3e>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 800ffa2:	6838      	ldr	r0, [r7, #0]
 800ffa4:	f7f7 fec8 	bl	8007d38 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 800ffa8:	4604      	mov	r4, r0
 800ffaa:	6878      	ldr	r0, [r7, #4]
 800ffac:	f000 f9c8 	bl	8010340 <_ZSt3getILj0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>
 800ffb0:	4603      	mov	r3, r0
 800ffb2:	4621      	mov	r1, r4
 800ffb4:	4618      	mov	r0, r3
 800ffb6:	f013 fd4c 	bl	8023a52 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>
 800ffba:	e007      	b.n	800ffcc <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_+0x4e>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 800ffbc:	6838      	ldr	r0, [r7, #0]
 800ffbe:	f7f7 febb 	bl	8007d38 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 800ffc2:	4603      	mov	r3, r0
 800ffc4:	4619      	mov	r1, r3
 800ffc6:	6878      	ldr	r0, [r7, #4]
 800ffc8:	f000 f9d6 	bl	8010378 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE7emplaceILj0EJS5_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES6_E4typeEDpT0_EERSB_E4typeEDpOSC_>
	  return *this;
 800ffcc:	687b      	ldr	r3, [r7, #4]
	}
 800ffce:	4618      	mov	r0, r3
 800ffd0:	3714      	adds	r7, #20
 800ffd2:	46bd      	mov	sp, r7
 800ffd4:	bd90      	pop	{r4, r7, pc}

0800ffd6 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_>:
	operator=(_Tp&& __rhs)
 800ffd6:	b590      	push	{r4, r7, lr}
 800ffd8:	b085      	sub	sp, #20
 800ffda:	af00      	add	r7, sp, #0
 800ffdc:	6078      	str	r0, [r7, #4]
 800ffde:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 800ffe0:	2301      	movs	r3, #1
 800ffe2:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 800ffe4:	6878      	ldr	r0, [r7, #4]
 800ffe6:	f7ff ffb7 	bl	800ff58 <_ZNKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE5indexEv>
 800ffea:	4603      	mov	r3, r0
 800ffec:	2b01      	cmp	r3, #1
 800ffee:	bf0c      	ite	eq
 800fff0:	2301      	moveq	r3, #1
 800fff2:	2300      	movne	r3, #0
 800fff4:	b2db      	uxtb	r3, r3
 800fff6:	2b00      	cmp	r3, #0
 800fff8:	d00a      	beq.n	8010010 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 800fffa:	6838      	ldr	r0, [r7, #0]
 800fffc:	f7f7 fde4 	bl	8007bc8 <_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE>
 8010000:	4603      	mov	r3, r0
 8010002:	681c      	ldr	r4, [r3, #0]
 8010004:	6878      	ldr	r0, [r7, #4]
 8010006:	f000 fa05 	bl	8010414 <_ZSt3getILj1EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>
 801000a:	4603      	mov	r3, r0
 801000c:	601c      	str	r4, [r3, #0]
 801000e:	e007      	b.n	8010020 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 8010010:	6838      	ldr	r0, [r7, #0]
 8010012:	f7f7 fdd9 	bl	8007bc8 <_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE>
 8010016:	4603      	mov	r3, r0
 8010018:	4619      	mov	r1, r3
 801001a:	6878      	ldr	r0, [r7, #4]
 801001c:	f000 fa16 	bl	801044c <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE7emplaceILj1EJiEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES6_E4typeEDpT0_EERSB_E4typeEDpOSC_>
	  return *this;
 8010020:	687b      	ldr	r3, [r7, #4]
	}
 8010022:	4618      	mov	r0, r3
 8010024:	3714      	adds	r7, #20
 8010026:	46bd      	mov	sp, r7
 8010028:	bd90      	pop	{r4, r7, pc}

0801002a <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_>:
	operator=(_Tp&& __rhs)
 801002a:	b590      	push	{r4, r7, lr}
 801002c:	b085      	sub	sp, #20
 801002e:	af00      	add	r7, sp, #0
 8010030:	6078      	str	r0, [r7, #4]
 8010032:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 8010034:	2302      	movs	r3, #2
 8010036:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 8010038:	6878      	ldr	r0, [r7, #4]
 801003a:	f7ff ff8d 	bl	800ff58 <_ZNKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE5indexEv>
 801003e:	4603      	mov	r3, r0
 8010040:	2b02      	cmp	r3, #2
 8010042:	bf0c      	ite	eq
 8010044:	2301      	moveq	r3, #1
 8010046:	2300      	movne	r3, #0
 8010048:	b2db      	uxtb	r3, r3
 801004a:	2b00      	cmp	r3, #0
 801004c:	d00a      	beq.n	8010064 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 801004e:	6838      	ldr	r0, [r7, #0]
 8010050:	f7f7 fde4 	bl	8007c1c <_ZSt7forwardIfEOT_RNSt16remove_referenceIS0_E4typeE>
 8010054:	4603      	mov	r3, r0
 8010056:	681c      	ldr	r4, [r3, #0]
 8010058:	6878      	ldr	r0, [r7, #4]
 801005a:	f000 fa57 	bl	801050c <_ZSt3getILj2EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>
 801005e:	4603      	mov	r3, r0
 8010060:	601c      	str	r4, [r3, #0]
 8010062:	e007      	b.n	8010074 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 8010064:	6838      	ldr	r0, [r7, #0]
 8010066:	f7f7 fdd9 	bl	8007c1c <_ZSt7forwardIfEOT_RNSt16remove_referenceIS0_E4typeE>
 801006a:	4603      	mov	r3, r0
 801006c:	4619      	mov	r1, r3
 801006e:	6878      	ldr	r0, [r7, #4]
 8010070:	f000 fa68 	bl	8010544 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE7emplaceILj2EJfEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES6_E4typeEDpT0_EERSB_E4typeEDpOSC_>
	  return *this;
 8010074:	687b      	ldr	r3, [r7, #4]
	}
 8010076:	4618      	mov	r0, r3
 8010078:	3714      	adds	r7, #20
 801007a:	46bd      	mov	sp, r7
 801007c:	bd90      	pop	{r4, r7, pc}

0801007e <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ERKS8_>:
      _Copy_ctor_base(const _Copy_ctor_base& __rhs)
 801007e:	b580      	push	{r7, lr}
 8010080:	b082      	sub	sp, #8
 8010082:	af00      	add	r7, sp, #0
 8010084:	6078      	str	r0, [r7, #4]
 8010086:	6039      	str	r1, [r7, #0]
      {
 8010088:	687b      	ldr	r3, [r7, #4]
 801008a:	4618      	mov	r0, r3
 801008c:	f000 fa80 	bl	8010590 <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1Ev>
	__variant_construct<_Types...>(*this, __rhs);
 8010090:	6839      	ldr	r1, [r7, #0]
 8010092:	6878      	ldr	r0, [r7, #4]
 8010094:	f000 fd1a 	bl	8010acc <_ZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS7_ifbEEERKS9_EEvOT0_OT1_>
      }
 8010098:	687b      	ldr	r3, [r7, #4]
 801009a:	4618      	mov	r0, r3
 801009c:	3708      	adds	r7, #8
 801009e:	46bd      	mov	sp, r7
 80100a0:	bd80      	pop	{r7, pc}

080100a2 <_ZNSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IJEEESt16in_place_index_tILj0EEDpOT_>:
	_Uninitialized(in_place_index_t<0>, _Args&&... __args)
 80100a2:	b580      	push	{r7, lr}
 80100a4:	b082      	sub	sp, #8
 80100a6:	af00      	add	r7, sp, #0
 80100a8:	6078      	str	r0, [r7, #4]
 80100aa:	7039      	strb	r1, [r7, #0]
	  ::new ((void*)std::addressof(_M_storage))
 80100ac:	687b      	ldr	r3, [r7, #4]
 80100ae:	4618      	mov	r0, r3
 80100b0:	f7f8 ffd8 	bl	8009064 <_ZSt9addressofIN9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEPT_RS9_>
 80100b4:	4603      	mov	r3, r0
 80100b6:	4619      	mov	r1, r3
 80100b8:	2018      	movs	r0, #24
 80100ba:	f7f0 ffce 	bl	800105a <_ZnwjPv>
 80100be:	4603      	mov	r3, r0
 80100c0:	4618      	mov	r0, r3
 80100c2:	f013 fc99 	bl	80239f8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>
	}
 80100c6:	687b      	ldr	r3, [r7, #4]
 80100c8:	4618      	mov	r0, r3
 80100ca:	3708      	adds	r7, #8
 80100cc:	46bd      	mov	sp, r7
 80100ce:	bd80      	pop	{r7, pc}

080100d0 <_ZNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1IJEEESt16in_place_index_tILj0EEDpOT_>:
	constexpr _Variadic_union(in_place_index_t<0>, _Args&&... __args)
 80100d0:	b580      	push	{r7, lr}
 80100d2:	b082      	sub	sp, #8
 80100d4:	af00      	add	r7, sp, #0
 80100d6:	6078      	str	r0, [r7, #4]
 80100d8:	7039      	strb	r1, [r7, #0]
	: _M_first(in_place_index<0>, std::forward<_Args>(__args)...)
 80100da:	687b      	ldr	r3, [r7, #4]
 80100dc:	4611      	mov	r1, r2
 80100de:	4618      	mov	r0, r3
 80100e0:	f7ff ffdf 	bl	80100a2 <_ZNSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IJEEESt16in_place_index_tILj0EEDpOT_>
	{ }
 80100e4:	687b      	ldr	r3, [r7, #4]
 80100e6:	4618      	mov	r0, r3
 80100e8:	3708      	adds	r7, #8
 80100ea:	46bd      	mov	sp, r7
 80100ec:	bd80      	pop	{r7, pc}

080100ee <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variant_storage(in_place_index_t<_Np>, _Args&&... __args)
 80100ee:	b580      	push	{r7, lr}
 80100f0:	b082      	sub	sp, #8
 80100f2:	af00      	add	r7, sp, #0
 80100f4:	6078      	str	r0, [r7, #4]
 80100f6:	7039      	strb	r1, [r7, #0]
	_M_index(_Np)
 80100f8:	687b      	ldr	r3, [r7, #4]
 80100fa:	4611      	mov	r1, r2
 80100fc:	4618      	mov	r0, r3
 80100fe:	f7ff ffe7 	bl	80100d0 <_ZNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1IJEEESt16in_place_index_tILj0EEDpOT_>
 8010102:	687b      	ldr	r3, [r7, #4]
 8010104:	2200      	movs	r2, #0
 8010106:	761a      	strb	r2, [r3, #24]
	{ }
 8010108:	687b      	ldr	r3, [r7, #4]
 801010a:	4618      	mov	r0, r3
 801010c:	3708      	adds	r7, #8
 801010e:	46bd      	mov	sp, r7
 8010110:	bd80      	pop	{r7, pc}

08010112 <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE8_M_resetEv>:
      void _M_reset()
 8010112:	b580      	push	{r7, lr}
 8010114:	b082      	sub	sp, #8
 8010116:	af00      	add	r7, sp, #0
 8010118:	6078      	str	r0, [r7, #4]
	_M_reset_impl();
 801011a:	6878      	ldr	r0, [r7, #4]
 801011c:	f000 fee6 	bl	8010eec <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEv>
	_M_index = variant_npos;
 8010120:	687b      	ldr	r3, [r7, #4]
 8010122:	22ff      	movs	r2, #255	; 0xff
 8010124:	761a      	strb	r2, [r3, #24]
      }
 8010126:	bf00      	nop
 8010128:	3708      	adds	r7, #8
 801012a:	46bd      	mov	sp, r7
 801012c:	bd80      	pop	{r7, pc}

0801012e <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE4findERS1_>:

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    typename _Rb_tree<_Key, _Val, _KeyOfValue,
		      _Compare, _Alloc>::const_iterator
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 801012e:	b590      	push	{r4, r7, lr}
 8010130:	b085      	sub	sp, #20
 8010132:	af00      	add	r7, sp, #0
 8010134:	6078      	str	r0, [r7, #4]
 8010136:	6039      	str	r1, [r7, #0]
    find(const _Key& __k) const
    {
      const_iterator __j = _M_lower_bound(_M_begin(), _M_end(), __k);
 8010138:	6878      	ldr	r0, [r7, #4]
 801013a:	f000 fee9 	bl	8010f10 <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_beginEv>
 801013e:	4604      	mov	r4, r0
 8010140:	6878      	ldr	r0, [r7, #4]
 8010142:	f000 fef1 	bl	8010f28 <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_M_endEv>
 8010146:	4602      	mov	r2, r0
 8010148:	683b      	ldr	r3, [r7, #0]
 801014a:	4621      	mov	r1, r4
 801014c:	6878      	ldr	r0, [r7, #4]
 801014e:	f000 fef7 	bl	8010f40 <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS3_EPKSt18_Rb_tree_node_baseRS1_>
 8010152:	4603      	mov	r3, r0
 8010154:	60bb      	str	r3, [r7, #8]
      return (__j == end()
 8010156:	6878      	ldr	r0, [r7, #4]
 8010158:	f000 f825 	bl	80101a6 <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE3endEv>
 801015c:	4603      	mov	r3, r0
 801015e:	60fb      	str	r3, [r7, #12]
 8010160:	f107 020c 	add.w	r2, r7, #12
 8010164:	f107 0308 	add.w	r3, r7, #8
 8010168:	4611      	mov	r1, r2
 801016a:	4618      	mov	r0, r3
 801016c:	f000 ff19 	bl	8010fa2 <_ZSteqRKSt23_Rb_tree_const_iteratorISt4pairIKc10token_typeEES6_>
 8010170:	4603      	mov	r3, r0
	      || _M_impl._M_key_compare(__k,
					_S_key(__j._M_node))) ? end() : __j;
 8010172:	2b00      	cmp	r3, #0
 8010174:	d10d      	bne.n	8010192 <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE4findERS1_+0x64>
	      || _M_impl._M_key_compare(__k,
 8010176:	687c      	ldr	r4, [r7, #4]
 8010178:	68bb      	ldr	r3, [r7, #8]
 801017a:	4618      	mov	r0, r3
 801017c:	f7f6 fb06 	bl	800678c <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8010180:	4603      	mov	r3, r0
 8010182:	461a      	mov	r2, r3
 8010184:	6839      	ldr	r1, [r7, #0]
 8010186:	4620      	mov	r0, r4
 8010188:	f7f6 fb0c 	bl	80067a4 <_ZNKSt4lessIcEclERKcS2_>
 801018c:	4603      	mov	r3, r0
 801018e:	2b00      	cmp	r3, #0
 8010190:	d004      	beq.n	801019c <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE4findERS1_+0x6e>
					_S_key(__j._M_node))) ? end() : __j;
 8010192:	6878      	ldr	r0, [r7, #4]
 8010194:	f000 f807 	bl	80101a6 <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE3endEv>
 8010198:	4603      	mov	r3, r0
 801019a:	e000      	b.n	801019e <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE4findERS1_+0x70>
 801019c:	68bb      	ldr	r3, [r7, #8]
    }
 801019e:	4618      	mov	r0, r3
 80101a0:	3714      	adds	r7, #20
 80101a2:	46bd      	mov	sp, r7
 80101a4:	bd90      	pop	{r4, r7, pc}

080101a6 <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
 80101a6:	b580      	push	{r7, lr}
 80101a8:	b084      	sub	sp, #16
 80101aa:	af00      	add	r7, sp, #0
 80101ac:	6078      	str	r0, [r7, #4]
      { return const_iterator(&this->_M_impl._M_header); }
 80101ae:	687b      	ldr	r3, [r7, #4]
 80101b0:	1d1a      	adds	r2, r3, #4
 80101b2:	f107 030c 	add.w	r3, r7, #12
 80101b6:	4611      	mov	r1, r2
 80101b8:	4618      	mov	r0, r3
 80101ba:	f000 ff06 	bl	8010fca <_ZNSt23_Rb_tree_const_iteratorISt4pairIKc10token_typeEEC1EPKSt18_Rb_tree_node_base>
 80101be:	68fb      	ldr	r3, [r7, #12]
 80101c0:	4618      	mov	r0, r3
 80101c2:	3710      	adds	r7, #16
 80101c4:	46bd      	mov	sp, r7
 80101c6:	bd80      	pop	{r7, pc}

080101c8 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE4findERS1_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 80101c8:	b590      	push	{r4, r7, lr}
 80101ca:	b085      	sub	sp, #20
 80101cc:	af00      	add	r7, sp, #0
 80101ce:	6078      	str	r0, [r7, #4]
 80101d0:	6039      	str	r1, [r7, #0]
      const_iterator __j = _M_lower_bound(_M_begin(), _M_end(), __k);
 80101d2:	6878      	ldr	r0, [r7, #4]
 80101d4:	f000 ff08 	bl	8010fe8 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_beginEv>
 80101d8:	4604      	mov	r4, r0
 80101da:	6878      	ldr	r0, [r7, #4]
 80101dc:	f000 ff10 	bl	8011000 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_M_endEv>
 80101e0:	4602      	mov	r2, r0
 80101e2:	683b      	ldr	r3, [r7, #0]
 80101e4:	4621      	mov	r1, r4
 80101e6:	6878      	ldr	r0, [r7, #4]
 80101e8:	f000 ff16 	bl	8011018 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS3_EPKSt18_Rb_tree_node_baseRS1_>
 80101ec:	4603      	mov	r3, r0
 80101ee:	60bb      	str	r3, [r7, #8]
      return (__j == end()
 80101f0:	6878      	ldr	r0, [r7, #4]
 80101f2:	f000 f825 	bl	8010240 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE3endEv>
 80101f6:	4603      	mov	r3, r0
 80101f8:	60fb      	str	r3, [r7, #12]
 80101fa:	f107 020c 	add.w	r2, r7, #12
 80101fe:	f107 0308 	add.w	r3, r7, #8
 8010202:	4611      	mov	r1, r2
 8010204:	4618      	mov	r0, r3
 8010206:	f000 ff38 	bl	801107a <_ZSteqRKSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEES6_>
 801020a:	4603      	mov	r3, r0
					_S_key(__j._M_node))) ? end() : __j;
 801020c:	2b00      	cmp	r3, #0
 801020e:	d10d      	bne.n	801022c <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE4findERS1_+0x64>
	      || _M_impl._M_key_compare(__k,
 8010210:	687c      	ldr	r4, [r7, #4]
 8010212:	68bb      	ldr	r3, [r7, #8]
 8010214:	4618      	mov	r0, r3
 8010216:	f7f6 fd98 	bl	8006d4a <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 801021a:	4603      	mov	r3, r0
 801021c:	461a      	mov	r2, r3
 801021e:	6839      	ldr	r1, [r7, #0]
 8010220:	4620      	mov	r0, r4
 8010222:	f7f6 fabf 	bl	80067a4 <_ZNKSt4lessIcEclERKcS2_>
 8010226:	4603      	mov	r3, r0
 8010228:	2b00      	cmp	r3, #0
 801022a:	d004      	beq.n	8010236 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE4findERS1_+0x6e>
					_S_key(__j._M_node))) ? end() : __j;
 801022c:	6878      	ldr	r0, [r7, #4]
 801022e:	f000 f807 	bl	8010240 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE3endEv>
 8010232:	4603      	mov	r3, r0
 8010234:	e000      	b.n	8010238 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE4findERS1_+0x70>
 8010236:	68bb      	ldr	r3, [r7, #8]
    }
 8010238:	4618      	mov	r0, r3
 801023a:	3714      	adds	r7, #20
 801023c:	46bd      	mov	sp, r7
 801023e:	bd90      	pop	{r4, r7, pc}

08010240 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
 8010240:	b580      	push	{r7, lr}
 8010242:	b084      	sub	sp, #16
 8010244:	af00      	add	r7, sp, #0
 8010246:	6078      	str	r0, [r7, #4]
      { return const_iterator(&this->_M_impl._M_header); }
 8010248:	687b      	ldr	r3, [r7, #4]
 801024a:	1d1a      	adds	r2, r3, #4
 801024c:	f107 030c 	add.w	r3, r7, #12
 8010250:	4611      	mov	r1, r2
 8010252:	4618      	mov	r0, r3
 8010254:	f000 ff25 	bl	80110a2 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEEC1EPKSt18_Rb_tree_node_base>
 8010258:	68fb      	ldr	r3, [r7, #12]
 801025a:	4618      	mov	r0, r3
 801025c:	3710      	adds	r7, #16
 801025e:	46bd      	mov	sp, r7
 8010260:	bd80      	pop	{r7, pc}

08010262 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE4findERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8010262:	b590      	push	{r4, r7, lr}
 8010264:	b085      	sub	sp, #20
 8010266:	af00      	add	r7, sp, #0
 8010268:	6078      	str	r0, [r7, #4]
 801026a:	6039      	str	r1, [r7, #0]
      const_iterator __j = _M_lower_bound(_M_begin(), _M_end(), __k);
 801026c:	6878      	ldr	r0, [r7, #4]
 801026e:	f000 ff27 	bl	80110c0 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_beginEv>
 8010272:	4604      	mov	r4, r0
 8010274:	6878      	ldr	r0, [r7, #4]
 8010276:	f000 ff2f 	bl	80110d8 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_M_endEv>
 801027a:	4602      	mov	r2, r0
 801027c:	683b      	ldr	r3, [r7, #0]
 801027e:	4621      	mov	r1, r4
 8010280:	6878      	ldr	r0, [r7, #4]
 8010282:	f000 ff35 	bl	80110f0 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS9_EPKSt18_Rb_tree_node_baseRS7_>
 8010286:	4603      	mov	r3, r0
 8010288:	60bb      	str	r3, [r7, #8]
      return (__j == end()
 801028a:	6878      	ldr	r0, [r7, #4]
 801028c:	f000 f825 	bl	80102da <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE3endEv>
 8010290:	4603      	mov	r3, r0
 8010292:	60fb      	str	r3, [r7, #12]
 8010294:	f107 020c 	add.w	r2, r7, #12
 8010298:	f107 0308 	add.w	r3, r7, #8
 801029c:	4611      	mov	r1, r2
 801029e:	4618      	mov	r0, r3
 80102a0:	f000 ff57 	bl	8011152 <_ZSteqRKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEESC_>
 80102a4:	4603      	mov	r3, r0
					_S_key(__j._M_node))) ? end() : __j;
 80102a6:	2b00      	cmp	r3, #0
 80102a8:	d10d      	bne.n	80102c6 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE4findERS7_+0x64>
	      || _M_impl._M_key_compare(__k,
 80102aa:	687c      	ldr	r4, [r7, #4]
 80102ac:	68bb      	ldr	r3, [r7, #8]
 80102ae:	4618      	mov	r0, r3
 80102b0:	f7f6 fc01 	bl	8006ab6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 80102b4:	4603      	mov	r3, r0
 80102b6:	461a      	mov	r2, r3
 80102b8:	6839      	ldr	r1, [r7, #0]
 80102ba:	4620      	mov	r0, r4
 80102bc:	f7f6 fc07 	bl	8006ace <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 80102c0:	4603      	mov	r3, r0
 80102c2:	2b00      	cmp	r3, #0
 80102c4:	d004      	beq.n	80102d0 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE4findERS7_+0x6e>
					_S_key(__j._M_node))) ? end() : __j;
 80102c6:	6878      	ldr	r0, [r7, #4]
 80102c8:	f000 f807 	bl	80102da <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE3endEv>
 80102cc:	4603      	mov	r3, r0
 80102ce:	e000      	b.n	80102d2 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE4findERS7_+0x70>
 80102d0:	68bb      	ldr	r3, [r7, #8]
    }
 80102d2:	4618      	mov	r0, r3
 80102d4:	3714      	adds	r7, #20
 80102d6:	46bd      	mov	sp, r7
 80102d8:	bd90      	pop	{r4, r7, pc}

080102da <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
 80102da:	b580      	push	{r7, lr}
 80102dc:	b084      	sub	sp, #16
 80102de:	af00      	add	r7, sp, #0
 80102e0:	6078      	str	r0, [r7, #4]
      { return const_iterator(&this->_M_impl._M_header); }
 80102e2:	687b      	ldr	r3, [r7, #4]
 80102e4:	1d1a      	adds	r2, r3, #4
 80102e6:	f107 030c 	add.w	r3, r7, #12
 80102ea:	4611      	mov	r1, r2
 80102ec:	4618      	mov	r0, r3
 80102ee:	f000 ff44 	bl	801117a <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1EPKSt18_Rb_tree_node_base>
 80102f2:	68fb      	ldr	r3, [r7, #12]
 80102f4:	4618      	mov	r0, r3
 80102f6:	3710      	adds	r7, #16
 80102f8:	46bd      	mov	sp, r7
 80102fa:	bd80      	pop	{r7, pc}

080102fc <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 80102fc:	b580      	push	{r7, lr}
 80102fe:	b082      	sub	sp, #8
 8010300:	af00      	add	r7, sp, #0
 8010302:	7138      	strb	r0, [r7, #4]
 8010304:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8010306:	6838      	ldr	r0, [r7, #0]
 8010308:	f000 ff51 	bl	80111ae <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>
 801030c:	4603      	mov	r3, r0
 801030e:	4618      	mov	r0, r3
 8010310:	f7f3 fb32 	bl	8003978 <_ZNRSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE6_M_getEv>
 8010314:	4603      	mov	r3, r0
 8010316:	4618      	mov	r0, r3
 8010318:	3708      	adds	r7, #8
 801031a:	46bd      	mov	sp, r7
 801031c:	bd80      	pop	{r7, pc}

0801031e <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 801031e:	b590      	push	{r4, r7, lr}
 8010320:	b083      	sub	sp, #12
 8010322:	af00      	add	r7, sp, #0
 8010324:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8010326:	6878      	ldr	r0, [r7, #4]
 8010328:	f000 ff36 	bl	8011198 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 801032c:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 801032e:	4619      	mov	r1, r3
 8010330:	4620      	mov	r0, r4
 8010332:	f7ff ffe3 	bl	80102fc <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tILj0EEOT_>
 8010336:	4603      	mov	r3, r0
    }
 8010338:	4618      	mov	r0, r3
 801033a:	370c      	adds	r7, #12
 801033c:	46bd      	mov	sp, r7
 801033e:	bd90      	pop	{r4, r7, pc}

08010340 <_ZSt3getILj0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>:
    get(variant<_Types...>& __v)
 8010340:	b580      	push	{r7, lr}
 8010342:	b082      	sub	sp, #8
 8010344:	af00      	add	r7, sp, #0
 8010346:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 8010348:	6878      	ldr	r0, [r7, #4]
 801034a:	f7ff fe05 	bl	800ff58 <_ZNKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE5indexEv>
 801034e:	4603      	mov	r3, r0
 8010350:	2b00      	cmp	r3, #0
 8010352:	bf14      	ite	ne
 8010354:	2301      	movne	r3, #1
 8010356:	2300      	moveq	r3, #0
 8010358:	b2db      	uxtb	r3, r3
 801035a:	2b00      	cmp	r3, #0
 801035c:	d002      	beq.n	8010364 <_ZSt3getILj0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_+0x24>
	__throw_bad_variant_access("Unexpected index");
 801035e:	4805      	ldr	r0, [pc, #20]	; (8010374 <_ZSt3getILj0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_+0x34>)
 8010360:	f7f0 fe87 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 8010364:	6878      	ldr	r0, [r7, #4]
 8010366:	f7ff ffda 	bl	801031e <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 801036a:	4603      	mov	r3, r0
    }
 801036c:	4618      	mov	r0, r3
 801036e:	3708      	adds	r7, #8
 8010370:	46bd      	mov	sp, r7
 8010372:	bd80      	pop	{r7, pc}
 8010374:	080296e4 	.word	0x080296e4

08010378 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE7emplaceILj0EJS5_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES6_E4typeEDpT0_EERSB_E4typeEDpOSC_>:
	emplace(_Args&&... __args)
 8010378:	b580      	push	{r7, lr}
 801037a:	b082      	sub	sp, #8
 801037c:	af00      	add	r7, sp, #0
 801037e:	6078      	str	r0, [r7, #4]
 8010380:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 8010382:	687b      	ldr	r3, [r7, #4]
 8010384:	4618      	mov	r0, r3
 8010386:	f7ff fec4 	bl	8010112 <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 801038a:	6838      	ldr	r0, [r7, #0]
 801038c:	f7f7 fcd4 	bl	8007d38 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 8010390:	4603      	mov	r3, r0
 8010392:	4619      	mov	r1, r3
 8010394:	6878      	ldr	r0, [r7, #4]
 8010396:	f000 ff15 	bl	80111c4 <_ZSt28__variant_construct_by_indexILj0ESt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEJS6_EEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 801039a:	6878      	ldr	r0, [r7, #4]
 801039c:	f7ff ffd0 	bl	8010340 <_ZSt3getILj0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>
 80103a0:	4603      	mov	r3, r0
	}
 80103a2:	4618      	mov	r0, r3
 80103a4:	3708      	adds	r7, #8
 80103a6:	46bd      	mov	sp, r7
 80103a8:	bd80      	pop	{r7, pc}

080103aa <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJifbEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 80103aa:	b580      	push	{r7, lr}
 80103ac:	b082      	sub	sp, #8
 80103ae:	af00      	add	r7, sp, #0
 80103b0:	7138      	strb	r0, [r7, #4]
 80103b2:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 80103b4:	6838      	ldr	r0, [r7, #0]
 80103b6:	f000 ff26 	bl	8011206 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifbEEEEOT_RNSt16remove_referenceIS5_E4typeE>
 80103ba:	4603      	mov	r3, r0
 80103bc:	4618      	mov	r0, r3
 80103be:	f7f3 fa3f 	bl	8003840 <_ZNRSt8__detail9__variant14_UninitializedIiLb1EE6_M_getEv>
 80103c2:	4603      	mov	r3, r0
 80103c4:	4618      	mov	r0, r3
 80103c6:	3708      	adds	r7, #8
 80103c8:	46bd      	mov	sp, r7
 80103ca:	bd80      	pop	{r7, pc}

080103cc <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 80103cc:	b590      	push	{r4, r7, lr}
 80103ce:	b083      	sub	sp, #12
 80103d0:	af00      	add	r7, sp, #0
 80103d2:	7138      	strb	r0, [r7, #4]
 80103d4:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 80103d6:	6838      	ldr	r0, [r7, #0]
 80103d8:	f000 fee9 	bl	80111ae <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>
 80103dc:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 80103de:	4619      	mov	r1, r3
 80103e0:	4620      	mov	r0, r4
 80103e2:	f7ff ffe2 	bl	80103aa <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJifbEEEEEDcSt16in_place_index_tILj0EEOT_>
 80103e6:	4603      	mov	r3, r0
    }
 80103e8:	4618      	mov	r0, r3
 80103ea:	370c      	adds	r7, #12
 80103ec:	46bd      	mov	sp, r7
 80103ee:	bd90      	pop	{r4, r7, pc}

080103f0 <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 80103f0:	b590      	push	{r4, r7, lr}
 80103f2:	b083      	sub	sp, #12
 80103f4:	af00      	add	r7, sp, #0
 80103f6:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 80103f8:	6878      	ldr	r0, [r7, #4]
 80103fa:	f000 fecd 	bl	8011198 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 80103fe:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8010400:	4619      	mov	r1, r3
 8010402:	4620      	mov	r0, r4
 8010404:	f7ff ffe2 	bl	80103cc <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8010408:	4603      	mov	r3, r0
    }
 801040a:	4618      	mov	r0, r3
 801040c:	370c      	adds	r7, #12
 801040e:	46bd      	mov	sp, r7
 8010410:	bd90      	pop	{r4, r7, pc}
	...

08010414 <_ZSt3getILj1EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>:
    get(variant<_Types...>& __v)
 8010414:	b580      	push	{r7, lr}
 8010416:	b082      	sub	sp, #8
 8010418:	af00      	add	r7, sp, #0
 801041a:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 801041c:	6878      	ldr	r0, [r7, #4]
 801041e:	f7ff fd9b 	bl	800ff58 <_ZNKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE5indexEv>
 8010422:	4603      	mov	r3, r0
 8010424:	2b01      	cmp	r3, #1
 8010426:	bf14      	ite	ne
 8010428:	2301      	movne	r3, #1
 801042a:	2300      	moveq	r3, #0
 801042c:	b2db      	uxtb	r3, r3
 801042e:	2b00      	cmp	r3, #0
 8010430:	d002      	beq.n	8010438 <_ZSt3getILj1EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_+0x24>
	__throw_bad_variant_access("Unexpected index");
 8010432:	4805      	ldr	r0, [pc, #20]	; (8010448 <_ZSt3getILj1EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_+0x34>)
 8010434:	f7f0 fe1d 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 8010438:	6878      	ldr	r0, [r7, #4]
 801043a:	f7ff ffd9 	bl	80103f0 <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 801043e:	4603      	mov	r3, r0
    }
 8010440:	4618      	mov	r0, r3
 8010442:	3708      	adds	r7, #8
 8010444:	46bd      	mov	sp, r7
 8010446:	bd80      	pop	{r7, pc}
 8010448:	080296e4 	.word	0x080296e4

0801044c <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE7emplaceILj1EJiEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES6_E4typeEDpT0_EERSB_E4typeEDpOSC_>:
	emplace(_Args&&... __args)
 801044c:	b580      	push	{r7, lr}
 801044e:	b082      	sub	sp, #8
 8010450:	af00      	add	r7, sp, #0
 8010452:	6078      	str	r0, [r7, #4]
 8010454:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 8010456:	687b      	ldr	r3, [r7, #4]
 8010458:	4618      	mov	r0, r3
 801045a:	f7ff fe5a 	bl	8010112 <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 801045e:	6838      	ldr	r0, [r7, #0]
 8010460:	f7f7 fbb2 	bl	8007bc8 <_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE>
 8010464:	4603      	mov	r3, r0
 8010466:	4619      	mov	r1, r3
 8010468:	6878      	ldr	r0, [r7, #4]
 801046a:	f000 fed7 	bl	801121c <_ZSt28__variant_construct_by_indexILj1ESt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEJiEEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 801046e:	6878      	ldr	r0, [r7, #4]
 8010470:	f7ff ffd0 	bl	8010414 <_ZSt3getILj1EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>
 8010474:	4603      	mov	r3, r0
	}
 8010476:	4618      	mov	r0, r3
 8010478:	3708      	adds	r7, #8
 801047a:	46bd      	mov	sp, r7
 801047c:	bd80      	pop	{r7, pc}

0801047e <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJfbEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 801047e:	b580      	push	{r7, lr}
 8010480:	b082      	sub	sp, #8
 8010482:	af00      	add	r7, sp, #0
 8010484:	7138      	strb	r0, [r7, #4]
 8010486:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8010488:	6838      	ldr	r0, [r7, #0]
 801048a:	f000 fee6 	bl	801125a <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfbEEEEOT_RNSt16remove_referenceIS5_E4typeE>
 801048e:	4603      	mov	r3, r0
 8010490:	4618      	mov	r0, r3
 8010492:	f7f3 fa09 	bl	80038a8 <_ZNRSt8__detail9__variant14_UninitializedIfLb1EE6_M_getEv>
 8010496:	4603      	mov	r3, r0
 8010498:	4618      	mov	r0, r3
 801049a:	3708      	adds	r7, #8
 801049c:	46bd      	mov	sp, r7
 801049e:	bd80      	pop	{r7, pc}

080104a0 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 80104a0:	b590      	push	{r4, r7, lr}
 80104a2:	b083      	sub	sp, #12
 80104a4:	af00      	add	r7, sp, #0
 80104a6:	7138      	strb	r0, [r7, #4]
 80104a8:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 80104aa:	6838      	ldr	r0, [r7, #0]
 80104ac:	f000 feab 	bl	8011206 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifbEEEEOT_RNSt16remove_referenceIS5_E4typeE>
 80104b0:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 80104b2:	4619      	mov	r1, r3
 80104b4:	4620      	mov	r0, r4
 80104b6:	f7ff ffe2 	bl	801047e <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJfbEEEEEDcSt16in_place_index_tILj0EEOT_>
 80104ba:	4603      	mov	r3, r0
    }
 80104bc:	4618      	mov	r0, r3
 80104be:	370c      	adds	r7, #12
 80104c0:	46bd      	mov	sp, r7
 80104c2:	bd90      	pop	{r4, r7, pc}

080104c4 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 80104c4:	b590      	push	{r4, r7, lr}
 80104c6:	b083      	sub	sp, #12
 80104c8:	af00      	add	r7, sp, #0
 80104ca:	7138      	strb	r0, [r7, #4]
 80104cc:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 80104ce:	6838      	ldr	r0, [r7, #0]
 80104d0:	f000 fe6d 	bl	80111ae <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>
 80104d4:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 80104d6:	4619      	mov	r1, r3
 80104d8:	4620      	mov	r0, r4
 80104da:	f7ff ffe1 	bl	80104a0 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80104de:	4603      	mov	r3, r0
    }
 80104e0:	4618      	mov	r0, r3
 80104e2:	370c      	adds	r7, #12
 80104e4:	46bd      	mov	sp, r7
 80104e6:	bd90      	pop	{r4, r7, pc}

080104e8 <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 80104e8:	b590      	push	{r4, r7, lr}
 80104ea:	b083      	sub	sp, #12
 80104ec:	af00      	add	r7, sp, #0
 80104ee:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 80104f0:	6878      	ldr	r0, [r7, #4]
 80104f2:	f000 fe51 	bl	8011198 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 80104f6:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 80104f8:	4619      	mov	r1, r3
 80104fa:	4620      	mov	r0, r4
 80104fc:	f7ff ffe2 	bl	80104c4 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8010500:	4603      	mov	r3, r0
    }
 8010502:	4618      	mov	r0, r3
 8010504:	370c      	adds	r7, #12
 8010506:	46bd      	mov	sp, r7
 8010508:	bd90      	pop	{r4, r7, pc}
	...

0801050c <_ZSt3getILj2EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>:
    get(variant<_Types...>& __v)
 801050c:	b580      	push	{r7, lr}
 801050e:	b082      	sub	sp, #8
 8010510:	af00      	add	r7, sp, #0
 8010512:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 8010514:	6878      	ldr	r0, [r7, #4]
 8010516:	f7ff fd1f 	bl	800ff58 <_ZNKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE5indexEv>
 801051a:	4603      	mov	r3, r0
 801051c:	2b02      	cmp	r3, #2
 801051e:	bf14      	ite	ne
 8010520:	2301      	movne	r3, #1
 8010522:	2300      	moveq	r3, #0
 8010524:	b2db      	uxtb	r3, r3
 8010526:	2b00      	cmp	r3, #0
 8010528:	d002      	beq.n	8010530 <_ZSt3getILj2EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_+0x24>
	__throw_bad_variant_access("Unexpected index");
 801052a:	4805      	ldr	r0, [pc, #20]	; (8010540 <_ZSt3getILj2EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_+0x34>)
 801052c:	f7f0 fda1 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 8010530:	6878      	ldr	r0, [r7, #4]
 8010532:	f7ff ffd9 	bl	80104e8 <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 8010536:	4603      	mov	r3, r0
    }
 8010538:	4618      	mov	r0, r3
 801053a:	3708      	adds	r7, #8
 801053c:	46bd      	mov	sp, r7
 801053e:	bd80      	pop	{r7, pc}
 8010540:	080296e4 	.word	0x080296e4

08010544 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE7emplaceILj2EJfEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES6_E4typeEDpT0_EERSB_E4typeEDpOSC_>:
	emplace(_Args&&... __args)
 8010544:	b580      	push	{r7, lr}
 8010546:	b082      	sub	sp, #8
 8010548:	af00      	add	r7, sp, #0
 801054a:	6078      	str	r0, [r7, #4]
 801054c:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 801054e:	687b      	ldr	r3, [r7, #4]
 8010550:	4618      	mov	r0, r3
 8010552:	f7ff fdde 	bl	8010112 <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 8010556:	6838      	ldr	r0, [r7, #0]
 8010558:	f7f7 fb60 	bl	8007c1c <_ZSt7forwardIfEOT_RNSt16remove_referenceIS0_E4typeE>
 801055c:	4603      	mov	r3, r0
 801055e:	4619      	mov	r1, r3
 8010560:	6878      	ldr	r0, [r7, #4]
 8010562:	f000 fe85 	bl	8011270 <_ZSt28__variant_construct_by_indexILj2ESt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEJfEEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 8010566:	6878      	ldr	r0, [r7, #4]
 8010568:	f7ff ffd0 	bl	801050c <_ZSt3getILj2EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>
 801056c:	4603      	mov	r3, r0
	}
 801056e:	4618      	mov	r0, r3
 8010570:	3708      	adds	r7, #8
 8010572:	46bd      	mov	sp, r7
 8010574:	bd80      	pop	{r7, pc}

08010576 <_ZNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1Ev>:
      constexpr _Variadic_union() : _M_rest() { }
 8010576:	b580      	push	{r7, lr}
 8010578:	b082      	sub	sp, #8
 801057a:	af00      	add	r7, sp, #0
 801057c:	6078      	str	r0, [r7, #4]
 801057e:	687b      	ldr	r3, [r7, #4]
 8010580:	4618      	mov	r0, r3
 8010582:	f000 fe94 	bl	80112ae <_ZNSt8__detail9__variant15_Variadic_unionIJifbEEC1Ev>
 8010586:	687b      	ldr	r3, [r7, #4]
 8010588:	4618      	mov	r0, r3
 801058a:	3708      	adds	r7, #8
 801058c:	46bd      	mov	sp, r7
 801058e:	bd80      	pop	{r7, pc}

08010590 <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1Ev>:
      constexpr _Variant_storage() : _M_index(variant_npos) { }
 8010590:	b580      	push	{r7, lr}
 8010592:	b082      	sub	sp, #8
 8010594:	af00      	add	r7, sp, #0
 8010596:	6078      	str	r0, [r7, #4]
 8010598:	687b      	ldr	r3, [r7, #4]
 801059a:	4618      	mov	r0, r3
 801059c:	f7ff ffeb 	bl	8010576 <_ZNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1Ev>
 80105a0:	687b      	ldr	r3, [r7, #4]
 80105a2:	22ff      	movs	r2, #255	; 0xff
 80105a4:	761a      	strb	r2, [r3, #24]
 80105a6:	687b      	ldr	r3, [r7, #4]
 80105a8:	4618      	mov	r0, r3
 80105aa:	3708      	adds	r7, #8
 80105ac:	46bd      	mov	sp, r7
 80105ae:	bd80      	pop	{r7, pc}

080105b0 <_ZSt14__variant_castIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERKNSt8__detail9__variant15_Copy_ctor_baseILb0EJS5_ifbEEEEDcOT0_>:
    __variant_cast(_Tp&& __rhs)
 80105b0:	b480      	push	{r7}
 80105b2:	b083      	sub	sp, #12
 80105b4:	af00      	add	r7, sp, #0
 80105b6:	6078      	str	r0, [r7, #4]
	    return static_cast<const variant<_Types...>&>(__rhs);
 80105b8:	687b      	ldr	r3, [r7, #4]
    }
 80105ba:	4618      	mov	r0, r3
 80105bc:	370c      	adds	r7, #12
 80105be:	46bd      	mov	sp, r7
 80105c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80105c4:	4770      	bx	lr

080105c6 <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 80105c6:	b580      	push	{r7, lr}
 80105c8:	b082      	sub	sp, #8
 80105ca:	af00      	add	r7, sp, #0
 80105cc:	7138      	strb	r0, [r7, #4]
 80105ce:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 80105d0:	6838      	ldr	r0, [r7, #0]
 80105d2:	f000 fe9a 	bl	801130a <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISC_E4typeE>
 80105d6:	4603      	mov	r3, r0
 80105d8:	4618      	mov	r0, r3
 80105da:	f7f3 fd50 	bl	800407e <_ZNKRSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE6_M_getEv>
 80105de:	4603      	mov	r3, r0
 80105e0:	4618      	mov	r0, r3
 80105e2:	3708      	adds	r7, #8
 80105e4:	46bd      	mov	sp, r7
 80105e6:	bd80      	pop	{r7, pc}

080105e8 <_ZNSt8__detail9__variant5__getILj0ERKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 80105e8:	b590      	push	{r4, r7, lr}
 80105ea:	b083      	sub	sp, #12
 80105ec:	af00      	add	r7, sp, #0
 80105ee:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 80105f0:	6878      	ldr	r0, [r7, #4]
 80105f2:	f000 fe7f 	bl	80112f4 <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 80105f6:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 80105f8:	4619      	mov	r1, r3
 80105fa:	4620      	mov	r0, r4
 80105fc:	f7ff ffe3 	bl	80105c6 <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tILj0EEOT_>
 8010600:	4603      	mov	r3, r0
    }
 8010602:	4618      	mov	r0, r3
 8010604:	370c      	adds	r7, #12
 8010606:	46bd      	mov	sp, r7
 8010608:	bd90      	pop	{r4, r7, pc}

0801060a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESR_EEDcSH_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 801060a:	b580      	push	{r7, lr}
 801060c:	b082      	sub	sp, #8
 801060e:	af00      	add	r7, sp, #0
 8010610:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8010612:	6878      	ldr	r0, [r7, #4]
 8010614:	f000 fe6e 	bl	80112f4 <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 8010618:	4603      	mov	r3, r0
 801061a:	4618      	mov	r0, r3
 801061c:	f7ff ffe4 	bl	80105e8 <_ZNSt8__detail9__variant5__getILj0ERKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 8010620:	4603      	mov	r3, r0
	}
 8010622:	4618      	mov	r0, r3
 8010624:	3708      	adds	r7, #8
 8010626:	46bd      	mov	sp, r7
 8010628:	bd80      	pop	{r7, pc}

0801062a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESN_SR_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 801062a:	b5b0      	push	{r4, r5, r7, lr}
 801062c:	b082      	sub	sp, #8
 801062e:	af00      	add	r7, sp, #0
 8010630:	6078      	str	r0, [r7, #4]
 8010632:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8010634:	6878      	ldr	r0, [r7, #4]
 8010636:	f000 fe52 	bl	80112de <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 801063a:	4604      	mov	r4, r0
 801063c:	6838      	ldr	r0, [r7, #0]
 801063e:	f000 fe59 	bl	80112f4 <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 8010642:	4603      	mov	r3, r0
 8010644:	4618      	mov	r0, r3
 8010646:	f7ff ffe0 	bl	801060a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESR_EEDcSH_>
 801064a:	4603      	mov	r3, r0
 801064c:	4619      	mov	r1, r3
 801064e:	4620      	mov	r0, r4
 8010650:	f000 fe66 	bl	8011320 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_JRKS8_EENSt15__invoke_resultISI_JDpT0_EE4typeESJ_DpOSO_>
		std::forward<_Variants>(__vars))...);
 8010654:	462b      	mov	r3, r5
      }
 8010656:	4618      	mov	r0, r3
 8010658:	3708      	adds	r7, #8
 801065a:	46bd      	mov	sp, r7
 801065c:	bdb0      	pop	{r4, r5, r7, pc}

0801065e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESN_SR_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 801065e:	b5b0      	push	{r4, r5, r7, lr}
 8010660:	b082      	sub	sp, #8
 8010662:	af00      	add	r7, sp, #0
 8010664:	6078      	str	r0, [r7, #4]
 8010666:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8010668:	6878      	ldr	r0, [r7, #4]
 801066a:	f000 fe38 	bl	80112de <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 801066e:	4604      	mov	r4, r0
 8010670:	6838      	ldr	r0, [r7, #0]
 8010672:	f000 fe3f 	bl	80112f4 <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 8010676:	4603      	mov	r3, r0
 8010678:	4619      	mov	r1, r3
 801067a:	4620      	mov	r0, r4
 801067c:	f7ff ffd5 	bl	801062a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESN_SR_>
				   std::forward<_Variants>(__vars)...);
 8010680:	462b      	mov	r3, r5
      }
 8010682:	4618      	mov	r0, r3
 8010684:	3708      	adds	r7, #8
 8010686:	46bd      	mov	sp, r7
 8010688:	bdb0      	pop	{r4, r5, r7, pc}

0801068a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj0EEEE14__visit_invokeESN_SR_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 801068a:	b5b0      	push	{r4, r5, r7, lr}
 801068c:	b082      	sub	sp, #8
 801068e:	af00      	add	r7, sp, #0
 8010690:	6078      	str	r0, [r7, #4]
 8010692:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8010694:	6878      	ldr	r0, [r7, #4]
 8010696:	f000 fe22 	bl	80112de <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 801069a:	4604      	mov	r4, r0
 801069c:	6838      	ldr	r0, [r7, #0]
 801069e:	f000 fe29 	bl	80112f4 <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 80106a2:	4603      	mov	r3, r0
 80106a4:	4619      	mov	r1, r3
 80106a6:	4620      	mov	r0, r4
 80106a8:	f7ff ffd9 	bl	801065e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESN_SR_>
				   std::forward<_Variants>(__vars)...);
 80106ac:	462b      	mov	r3, r5
      }
 80106ae:	4618      	mov	r0, r3
 80106b0:	3708      	adds	r7, #8
 80106b2:	46bd      	mov	sp, r7
 80106b4:	bdb0      	pop	{r4, r5, r7, pc}

080106b6 <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJifbEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 80106b6:	b580      	push	{r7, lr}
 80106b8:	b082      	sub	sp, #8
 80106ba:	af00      	add	r7, sp, #0
 80106bc:	7138      	strb	r0, [r7, #4]
 80106be:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 80106c0:	6838      	ldr	r0, [r7, #0]
 80106c2:	f000 fe44 	bl	801134e <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJifbEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 80106c6:	4603      	mov	r3, r0
 80106c8:	4618      	mov	r0, r3
 80106ca:	f7f3 fc3c 	bl	8003f46 <_ZNKRSt8__detail9__variant14_UninitializedIiLb1EE6_M_getEv>
 80106ce:	4603      	mov	r3, r0
 80106d0:	4618      	mov	r0, r3
 80106d2:	3708      	adds	r7, #8
 80106d4:	46bd      	mov	sp, r7
 80106d6:	bd80      	pop	{r7, pc}

080106d8 <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 80106d8:	b590      	push	{r4, r7, lr}
 80106da:	b083      	sub	sp, #12
 80106dc:	af00      	add	r7, sp, #0
 80106de:	7138      	strb	r0, [r7, #4]
 80106e0:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 80106e2:	6838      	ldr	r0, [r7, #0]
 80106e4:	f000 fe11 	bl	801130a <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISC_E4typeE>
 80106e8:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 80106ea:	4619      	mov	r1, r3
 80106ec:	4620      	mov	r0, r4
 80106ee:	f7ff ffe2 	bl	80106b6 <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJifbEEEEEDcSt16in_place_index_tILj0EEOT_>
 80106f2:	4603      	mov	r3, r0
    }
 80106f4:	4618      	mov	r0, r3
 80106f6:	370c      	adds	r7, #12
 80106f8:	46bd      	mov	sp, r7
 80106fa:	bd90      	pop	{r4, r7, pc}

080106fc <_ZNSt8__detail9__variant5__getILj1ERKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 80106fc:	b590      	push	{r4, r7, lr}
 80106fe:	b083      	sub	sp, #12
 8010700:	af00      	add	r7, sp, #0
 8010702:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8010704:	6878      	ldr	r0, [r7, #4]
 8010706:	f000 fdf5 	bl	80112f4 <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 801070a:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 801070c:	4619      	mov	r1, r3
 801070e:	4620      	mov	r0, r4
 8010710:	f7ff ffe2 	bl	80106d8 <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8010714:	4603      	mov	r3, r0
    }
 8010716:	4618      	mov	r0, r3
 8010718:	370c      	adds	r7, #12
 801071a:	46bd      	mov	sp, r7
 801071c:	bd90      	pop	{r4, r7, pc}

0801071e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESR_EEDcSH_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 801071e:	b580      	push	{r7, lr}
 8010720:	b082      	sub	sp, #8
 8010722:	af00      	add	r7, sp, #0
 8010724:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8010726:	6878      	ldr	r0, [r7, #4]
 8010728:	f000 fde4 	bl	80112f4 <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 801072c:	4603      	mov	r3, r0
 801072e:	4618      	mov	r0, r3
 8010730:	f7ff ffe4 	bl	80106fc <_ZNSt8__detail9__variant5__getILj1ERKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 8010734:	4603      	mov	r3, r0
	}
 8010736:	4618      	mov	r0, r3
 8010738:	3708      	adds	r7, #8
 801073a:	46bd      	mov	sp, r7
 801073c:	bd80      	pop	{r7, pc}

0801073e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESN_SR_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 801073e:	b5b0      	push	{r4, r5, r7, lr}
 8010740:	b082      	sub	sp, #8
 8010742:	af00      	add	r7, sp, #0
 8010744:	6078      	str	r0, [r7, #4]
 8010746:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8010748:	6878      	ldr	r0, [r7, #4]
 801074a:	f000 fdc8 	bl	80112de <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 801074e:	4604      	mov	r4, r0
 8010750:	6838      	ldr	r0, [r7, #0]
 8010752:	f000 fdcf 	bl	80112f4 <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 8010756:	4603      	mov	r3, r0
 8010758:	4618      	mov	r0, r3
 801075a:	f7ff ffe0 	bl	801071e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESR_EEDcSH_>
 801075e:	4603      	mov	r3, r0
 8010760:	4619      	mov	r1, r3
 8010762:	4620      	mov	r0, r4
 8010764:	f000 fdfe 	bl	8011364 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_JRKiEENSt15__invoke_resultISI_JDpT0_EE4typeESJ_DpOSO_>
		std::forward<_Variants>(__vars))...);
 8010768:	462b      	mov	r3, r5
      }
 801076a:	4618      	mov	r0, r3
 801076c:	3708      	adds	r7, #8
 801076e:	46bd      	mov	sp, r7
 8010770:	bdb0      	pop	{r4, r5, r7, pc}

08010772 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESN_SR_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8010772:	b5b0      	push	{r4, r5, r7, lr}
 8010774:	b082      	sub	sp, #8
 8010776:	af00      	add	r7, sp, #0
 8010778:	6078      	str	r0, [r7, #4]
 801077a:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 801077c:	6878      	ldr	r0, [r7, #4]
 801077e:	f000 fdae 	bl	80112de <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 8010782:	4604      	mov	r4, r0
 8010784:	6838      	ldr	r0, [r7, #0]
 8010786:	f000 fdb5 	bl	80112f4 <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 801078a:	4603      	mov	r3, r0
 801078c:	4619      	mov	r1, r3
 801078e:	4620      	mov	r0, r4
 8010790:	f7ff ffd5 	bl	801073e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESN_SR_>
				   std::forward<_Variants>(__vars)...);
 8010794:	462b      	mov	r3, r5
      }
 8010796:	4618      	mov	r0, r3
 8010798:	3708      	adds	r7, #8
 801079a:	46bd      	mov	sp, r7
 801079c:	bdb0      	pop	{r4, r5, r7, pc}

0801079e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj1EEEE14__visit_invokeESN_SR_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 801079e:	b5b0      	push	{r4, r5, r7, lr}
 80107a0:	b082      	sub	sp, #8
 80107a2:	af00      	add	r7, sp, #0
 80107a4:	6078      	str	r0, [r7, #4]
 80107a6:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 80107a8:	6878      	ldr	r0, [r7, #4]
 80107aa:	f000 fd98 	bl	80112de <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 80107ae:	4604      	mov	r4, r0
 80107b0:	6838      	ldr	r0, [r7, #0]
 80107b2:	f000 fd9f 	bl	80112f4 <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 80107b6:	4603      	mov	r3, r0
 80107b8:	4619      	mov	r1, r3
 80107ba:	4620      	mov	r0, r4
 80107bc:	f7ff ffd9 	bl	8010772 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESN_SR_>
				   std::forward<_Variants>(__vars)...);
 80107c0:	462b      	mov	r3, r5
      }
 80107c2:	4618      	mov	r0, r3
 80107c4:	3708      	adds	r7, #8
 80107c6:	46bd      	mov	sp, r7
 80107c8:	bdb0      	pop	{r4, r5, r7, pc}

080107ca <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJfbEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 80107ca:	b580      	push	{r7, lr}
 80107cc:	b082      	sub	sp, #8
 80107ce:	af00      	add	r7, sp, #0
 80107d0:	7138      	strb	r0, [r7, #4]
 80107d2:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 80107d4:	6838      	ldr	r0, [r7, #0]
 80107d6:	f000 fddc 	bl	8011392 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJfbEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 80107da:	4603      	mov	r3, r0
 80107dc:	4618      	mov	r0, r3
 80107de:	f7f3 fbe6 	bl	8003fae <_ZNKRSt8__detail9__variant14_UninitializedIfLb1EE6_M_getEv>
 80107e2:	4603      	mov	r3, r0
 80107e4:	4618      	mov	r0, r3
 80107e6:	3708      	adds	r7, #8
 80107e8:	46bd      	mov	sp, r7
 80107ea:	bd80      	pop	{r7, pc}

080107ec <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 80107ec:	b590      	push	{r4, r7, lr}
 80107ee:	b083      	sub	sp, #12
 80107f0:	af00      	add	r7, sp, #0
 80107f2:	7138      	strb	r0, [r7, #4]
 80107f4:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 80107f6:	6838      	ldr	r0, [r7, #0]
 80107f8:	f000 fda9 	bl	801134e <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJifbEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 80107fc:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 80107fe:	4619      	mov	r1, r3
 8010800:	4620      	mov	r0, r4
 8010802:	f7ff ffe2 	bl	80107ca <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJfbEEEEEDcSt16in_place_index_tILj0EEOT_>
 8010806:	4603      	mov	r3, r0
    }
 8010808:	4618      	mov	r0, r3
 801080a:	370c      	adds	r7, #12
 801080c:	46bd      	mov	sp, r7
 801080e:	bd90      	pop	{r4, r7, pc}

08010810 <_ZNSt8__detail9__variant5__getILj2ERKNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8010810:	b590      	push	{r4, r7, lr}
 8010812:	b083      	sub	sp, #12
 8010814:	af00      	add	r7, sp, #0
 8010816:	7138      	strb	r0, [r7, #4]
 8010818:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 801081a:	6838      	ldr	r0, [r7, #0]
 801081c:	f000 fd75 	bl	801130a <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISC_E4typeE>
 8010820:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8010822:	4619      	mov	r1, r3
 8010824:	4620      	mov	r0, r4
 8010826:	f7ff ffe1 	bl	80107ec <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 801082a:	4603      	mov	r3, r0
    }
 801082c:	4618      	mov	r0, r3
 801082e:	370c      	adds	r7, #12
 8010830:	46bd      	mov	sp, r7
 8010832:	bd90      	pop	{r4, r7, pc}

08010834 <_ZNSt8__detail9__variant5__getILj2ERKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8010834:	b590      	push	{r4, r7, lr}
 8010836:	b083      	sub	sp, #12
 8010838:	af00      	add	r7, sp, #0
 801083a:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 801083c:	6878      	ldr	r0, [r7, #4]
 801083e:	f000 fd59 	bl	80112f4 <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 8010842:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8010844:	4619      	mov	r1, r3
 8010846:	4620      	mov	r0, r4
 8010848:	f7ff ffe2 	bl	8010810 <_ZNSt8__detail9__variant5__getILj2ERKNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 801084c:	4603      	mov	r3, r0
    }
 801084e:	4618      	mov	r0, r3
 8010850:	370c      	adds	r7, #12
 8010852:	46bd      	mov	sp, r7
 8010854:	bd90      	pop	{r4, r7, pc}

08010856 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESR_EEDcSH_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8010856:	b580      	push	{r7, lr}
 8010858:	b082      	sub	sp, #8
 801085a:	af00      	add	r7, sp, #0
 801085c:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 801085e:	6878      	ldr	r0, [r7, #4]
 8010860:	f000 fd48 	bl	80112f4 <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 8010864:	4603      	mov	r3, r0
 8010866:	4618      	mov	r0, r3
 8010868:	f7ff ffe4 	bl	8010834 <_ZNSt8__detail9__variant5__getILj2ERKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 801086c:	4603      	mov	r3, r0
	}
 801086e:	4618      	mov	r0, r3
 8010870:	3708      	adds	r7, #8
 8010872:	46bd      	mov	sp, r7
 8010874:	bd80      	pop	{r7, pc}

08010876 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESN_SR_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8010876:	b5b0      	push	{r4, r5, r7, lr}
 8010878:	b082      	sub	sp, #8
 801087a:	af00      	add	r7, sp, #0
 801087c:	6078      	str	r0, [r7, #4]
 801087e:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8010880:	6878      	ldr	r0, [r7, #4]
 8010882:	f000 fd2c 	bl	80112de <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 8010886:	4604      	mov	r4, r0
 8010888:	6838      	ldr	r0, [r7, #0]
 801088a:	f000 fd33 	bl	80112f4 <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 801088e:	4603      	mov	r3, r0
 8010890:	4618      	mov	r0, r3
 8010892:	f7ff ffe0 	bl	8010856 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESR_EEDcSH_>
 8010896:	4603      	mov	r3, r0
 8010898:	4619      	mov	r1, r3
 801089a:	4620      	mov	r0, r4
 801089c:	f000 fd84 	bl	80113a8 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_JRKfEENSt15__invoke_resultISI_JDpT0_EE4typeESJ_DpOSO_>
		std::forward<_Variants>(__vars))...);
 80108a0:	462b      	mov	r3, r5
      }
 80108a2:	4618      	mov	r0, r3
 80108a4:	3708      	adds	r7, #8
 80108a6:	46bd      	mov	sp, r7
 80108a8:	bdb0      	pop	{r4, r5, r7, pc}

080108aa <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESN_SR_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80108aa:	b5b0      	push	{r4, r5, r7, lr}
 80108ac:	b082      	sub	sp, #8
 80108ae:	af00      	add	r7, sp, #0
 80108b0:	6078      	str	r0, [r7, #4]
 80108b2:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 80108b4:	6878      	ldr	r0, [r7, #4]
 80108b6:	f000 fd12 	bl	80112de <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 80108ba:	4604      	mov	r4, r0
 80108bc:	6838      	ldr	r0, [r7, #0]
 80108be:	f000 fd19 	bl	80112f4 <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 80108c2:	4603      	mov	r3, r0
 80108c4:	4619      	mov	r1, r3
 80108c6:	4620      	mov	r0, r4
 80108c8:	f7ff ffd5 	bl	8010876 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESN_SR_>
				   std::forward<_Variants>(__vars)...);
 80108cc:	462b      	mov	r3, r5
      }
 80108ce:	4618      	mov	r0, r3
 80108d0:	3708      	adds	r7, #8
 80108d2:	46bd      	mov	sp, r7
 80108d4:	bdb0      	pop	{r4, r5, r7, pc}

080108d6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj2EEEE14__visit_invokeESN_SR_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80108d6:	b5b0      	push	{r4, r5, r7, lr}
 80108d8:	b082      	sub	sp, #8
 80108da:	af00      	add	r7, sp, #0
 80108dc:	6078      	str	r0, [r7, #4]
 80108de:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 80108e0:	6878      	ldr	r0, [r7, #4]
 80108e2:	f000 fcfc 	bl	80112de <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 80108e6:	4604      	mov	r4, r0
 80108e8:	6838      	ldr	r0, [r7, #0]
 80108ea:	f000 fd03 	bl	80112f4 <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 80108ee:	4603      	mov	r3, r0
 80108f0:	4619      	mov	r1, r3
 80108f2:	4620      	mov	r0, r4
 80108f4:	f7ff ffd9 	bl	80108aa <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESN_SR_>
				   std::forward<_Variants>(__vars)...);
 80108f8:	462b      	mov	r3, r5
      }
 80108fa:	4618      	mov	r0, r3
 80108fc:	3708      	adds	r7, #8
 80108fe:	46bd      	mov	sp, r7
 8010900:	bdb0      	pop	{r4, r5, r7, pc}

08010902 <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJbEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8010902:	b580      	push	{r7, lr}
 8010904:	b082      	sub	sp, #8
 8010906:	af00      	add	r7, sp, #0
 8010908:	7138      	strb	r0, [r7, #4]
 801090a:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 801090c:	6838      	ldr	r0, [r7, #0]
 801090e:	f000 fd62 	bl	80113d6 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJbEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 8010912:	4603      	mov	r3, r0
 8010914:	4618      	mov	r0, r3
 8010916:	f7f3 fb7e 	bl	8004016 <_ZNKRSt8__detail9__variant14_UninitializedIbLb1EE6_M_getEv>
 801091a:	4603      	mov	r3, r0
 801091c:	4618      	mov	r0, r3
 801091e:	3708      	adds	r7, #8
 8010920:	46bd      	mov	sp, r7
 8010922:	bd80      	pop	{r7, pc}

08010924 <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJfbEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8010924:	b590      	push	{r4, r7, lr}
 8010926:	b083      	sub	sp, #12
 8010928:	af00      	add	r7, sp, #0
 801092a:	7138      	strb	r0, [r7, #4]
 801092c:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 801092e:	6838      	ldr	r0, [r7, #0]
 8010930:	f000 fd2f 	bl	8011392 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJfbEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 8010934:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8010936:	4619      	mov	r1, r3
 8010938:	4620      	mov	r0, r4
 801093a:	f7ff ffe2 	bl	8010902 <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJbEEEEEDcSt16in_place_index_tILj0EEOT_>
 801093e:	4603      	mov	r3, r0
    }
 8010940:	4618      	mov	r0, r3
 8010942:	370c      	adds	r7, #12
 8010944:	46bd      	mov	sp, r7
 8010946:	bd90      	pop	{r4, r7, pc}

08010948 <_ZNSt8__detail9__variant5__getILj2ERKNS0_15_Variadic_unionIJifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8010948:	b590      	push	{r4, r7, lr}
 801094a:	b083      	sub	sp, #12
 801094c:	af00      	add	r7, sp, #0
 801094e:	7138      	strb	r0, [r7, #4]
 8010950:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8010952:	6838      	ldr	r0, [r7, #0]
 8010954:	f000 fcfb 	bl	801134e <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJifbEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 8010958:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 801095a:	4619      	mov	r1, r3
 801095c:	4620      	mov	r0, r4
 801095e:	f7ff ffe1 	bl	8010924 <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJfbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8010962:	4603      	mov	r3, r0
    }
 8010964:	4618      	mov	r0, r3
 8010966:	370c      	adds	r7, #12
 8010968:	46bd      	mov	sp, r7
 801096a:	bd90      	pop	{r4, r7, pc}

0801096c <_ZNSt8__detail9__variant5__getILj3ERKNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 801096c:	b590      	push	{r4, r7, lr}
 801096e:	b083      	sub	sp, #12
 8010970:	af00      	add	r7, sp, #0
 8010972:	7138      	strb	r0, [r7, #4]
 8010974:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8010976:	6838      	ldr	r0, [r7, #0]
 8010978:	f000 fcc7 	bl	801130a <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISC_E4typeE>
 801097c:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 801097e:	4619      	mov	r1, r3
 8010980:	4620      	mov	r0, r4
 8010982:	f7ff ffe1 	bl	8010948 <_ZNSt8__detail9__variant5__getILj2ERKNS0_15_Variadic_unionIJifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8010986:	4603      	mov	r3, r0
    }
 8010988:	4618      	mov	r0, r3
 801098a:	370c      	adds	r7, #12
 801098c:	46bd      	mov	sp, r7
 801098e:	bd90      	pop	{r4, r7, pc}

08010990 <_ZNSt8__detail9__variant5__getILj3ERKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8010990:	b590      	push	{r4, r7, lr}
 8010992:	b083      	sub	sp, #12
 8010994:	af00      	add	r7, sp, #0
 8010996:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8010998:	6878      	ldr	r0, [r7, #4]
 801099a:	f000 fcab 	bl	80112f4 <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 801099e:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 80109a0:	4619      	mov	r1, r3
 80109a2:	4620      	mov	r0, r4
 80109a4:	f7ff ffe2 	bl	801096c <_ZNSt8__detail9__variant5__getILj3ERKNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80109a8:	4603      	mov	r3, r0
    }
 80109aa:	4618      	mov	r0, r3
 80109ac:	370c      	adds	r7, #12
 80109ae:	46bd      	mov	sp, r7
 80109b0:	bd90      	pop	{r4, r7, pc}

080109b2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESR_EEDcSH_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 80109b2:	b580      	push	{r7, lr}
 80109b4:	b082      	sub	sp, #8
 80109b6:	af00      	add	r7, sp, #0
 80109b8:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 80109ba:	6878      	ldr	r0, [r7, #4]
 80109bc:	f000 fc9a 	bl	80112f4 <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 80109c0:	4603      	mov	r3, r0
 80109c2:	4618      	mov	r0, r3
 80109c4:	f7ff ffe4 	bl	8010990 <_ZNSt8__detail9__variant5__getILj3ERKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 80109c8:	4603      	mov	r3, r0
	}
 80109ca:	4618      	mov	r0, r3
 80109cc:	3708      	adds	r7, #8
 80109ce:	46bd      	mov	sp, r7
 80109d0:	bd80      	pop	{r7, pc}

080109d2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESN_SR_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 80109d2:	b5b0      	push	{r4, r5, r7, lr}
 80109d4:	b082      	sub	sp, #8
 80109d6:	af00      	add	r7, sp, #0
 80109d8:	6078      	str	r0, [r7, #4]
 80109da:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 80109dc:	6878      	ldr	r0, [r7, #4]
 80109de:	f000 fc7e 	bl	80112de <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 80109e2:	4604      	mov	r4, r0
 80109e4:	6838      	ldr	r0, [r7, #0]
 80109e6:	f000 fc85 	bl	80112f4 <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 80109ea:	4603      	mov	r3, r0
 80109ec:	4618      	mov	r0, r3
 80109ee:	f7ff ffe0 	bl	80109b2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESR_EEDcSH_>
 80109f2:	4603      	mov	r3, r0
 80109f4:	4619      	mov	r1, r3
 80109f6:	4620      	mov	r0, r4
 80109f8:	f000 fcf8 	bl	80113ec <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_JRKbEENSt15__invoke_resultISI_JDpT0_EE4typeESJ_DpOSO_>
		std::forward<_Variants>(__vars))...);
 80109fc:	462b      	mov	r3, r5
      }
 80109fe:	4618      	mov	r0, r3
 8010a00:	3708      	adds	r7, #8
 8010a02:	46bd      	mov	sp, r7
 8010a04:	bdb0      	pop	{r4, r5, r7, pc}

08010a06 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESN_SR_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8010a06:	b5b0      	push	{r4, r5, r7, lr}
 8010a08:	b082      	sub	sp, #8
 8010a0a:	af00      	add	r7, sp, #0
 8010a0c:	6078      	str	r0, [r7, #4]
 8010a0e:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8010a10:	6878      	ldr	r0, [r7, #4]
 8010a12:	f000 fc64 	bl	80112de <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 8010a16:	4604      	mov	r4, r0
 8010a18:	6838      	ldr	r0, [r7, #0]
 8010a1a:	f000 fc6b 	bl	80112f4 <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 8010a1e:	4603      	mov	r3, r0
 8010a20:	4619      	mov	r1, r3
 8010a22:	4620      	mov	r0, r4
 8010a24:	f7ff ffd5 	bl	80109d2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESN_SR_>
				   std::forward<_Variants>(__vars)...);
 8010a28:	462b      	mov	r3, r5
      }
 8010a2a:	4618      	mov	r0, r3
 8010a2c:	3708      	adds	r7, #8
 8010a2e:	46bd      	mov	sp, r7
 8010a30:	bdb0      	pop	{r4, r5, r7, pc}

08010a32 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj3EEEE14__visit_invokeESN_SR_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8010a32:	b5b0      	push	{r4, r5, r7, lr}
 8010a34:	b082      	sub	sp, #8
 8010a36:	af00      	add	r7, sp, #0
 8010a38:	6078      	str	r0, [r7, #4]
 8010a3a:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8010a3c:	6878      	ldr	r0, [r7, #4]
 8010a3e:	f000 fc4e 	bl	80112de <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 8010a42:	4604      	mov	r4, r0
 8010a44:	6838      	ldr	r0, [r7, #0]
 8010a46:	f000 fc55 	bl	80112f4 <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 8010a4a:	4603      	mov	r3, r0
 8010a4c:	4619      	mov	r1, r3
 8010a4e:	4620      	mov	r0, r4
 8010a50:	f7ff ffd9 	bl	8010a06 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESN_SR_>
				   std::forward<_Variants>(__vars)...);
 8010a54:	462b      	mov	r3, r5
      }
 8010a56:	4618      	mov	r0, r3
 8010a58:	3708      	adds	r7, #8
 8010a5a:	46bd      	mov	sp, r7
 8010a5c:	bdb0      	pop	{r4, r5, r7, pc}

08010a5e <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS9_ifbEEERKSB_EEvOT0_OT1_EUlOT_E_RKSt7variantIJS9_ifbEEEJLj4EEE9_M_accessIJEEERKSS_jDpT_>:
	_M_access(size_t __first_index, _Args... __rest_indices) const
 8010a5e:	b580      	push	{r7, lr}
 8010a60:	b082      	sub	sp, #8
 8010a62:	af00      	add	r7, sp, #0
 8010a64:	6078      	str	r0, [r7, #4]
 8010a66:	6039      	str	r1, [r7, #0]
	    ._M_access(__rest_indices...);
 8010a68:	683b      	ldr	r3, [r7, #0]
 8010a6a:	009b      	lsls	r3, r3, #2
 8010a6c:	687a      	ldr	r2, [r7, #4]
 8010a6e:	4413      	add	r3, r2
 8010a70:	4618      	mov	r0, r3
 8010a72:	f000 fcd2 	bl	801141a <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS9_ifbEEERKSB_EEvOT0_OT1_EUlOT_E_RKSt7variantIJS9_ifbEEEJEE9_M_accessEv>
 8010a76:	4603      	mov	r3, r0
	}
 8010a78:	4618      	mov	r0, r3
 8010a7a:	3708      	adds	r7, #8
 8010a7c:	46bd      	mov	sp, r7
 8010a7e:	bd80      	pop	{r7, pc}

08010a80 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_JRKSt7variantIJS8_ifbEEEEDcSH_DpOT2_>:
    __do_visit(_Visitor&& __visitor, _Variants&&... __variants)
 8010a80:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010a82:	b085      	sub	sp, #20
 8010a84:	af00      	add	r7, sp, #0
 8010a86:	6078      	str	r0, [r7, #4]
 8010a88:	6039      	str	r1, [r7, #0]
      constexpr auto& __vtable = __detail::__variant::__gen_vtable<
 8010a8a:	4b0f      	ldr	r3, [pc, #60]	; (8010ac8 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_JRKSt7variantIJS8_ifbEEEEDcSH_DpOT2_+0x48>)
 8010a8c:	60fb      	str	r3, [r7, #12]
      auto __func_ptr = __vtable._M_access(__variants.index()...);
 8010a8e:	6838      	ldr	r0, [r7, #0]
 8010a90:	f7ff fa62 	bl	800ff58 <_ZNKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE5indexEv>
 8010a94:	4603      	mov	r3, r0
 8010a96:	4619      	mov	r1, r3
 8010a98:	68f8      	ldr	r0, [r7, #12]
 8010a9a:	f7ff ffe0 	bl	8010a5e <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS9_ifbEEERKSB_EEvOT0_OT1_EUlOT_E_RKSt7variantIJS9_ifbEEEJLj4EEE9_M_accessIJEEERKSS_jDpT_>
 8010a9e:	4603      	mov	r3, r0
 8010aa0:	681b      	ldr	r3, [r3, #0]
 8010aa2:	60bb      	str	r3, [r7, #8]
      return (*__func_ptr)(std::forward<_Visitor>(__visitor),
 8010aa4:	68bc      	ldr	r4, [r7, #8]
 8010aa6:	6878      	ldr	r0, [r7, #4]
 8010aa8:	f000 fcc2 	bl	8011430 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 8010aac:	4605      	mov	r5, r0
 8010aae:	6838      	ldr	r0, [r7, #0]
 8010ab0:	f000 fc20 	bl	80112f4 <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 8010ab4:	4603      	mov	r3, r0
 8010ab6:	4619      	mov	r1, r3
 8010ab8:	4628      	mov	r0, r5
 8010aba:	47a0      	blx	r4
			   std::forward<_Variants>(__variants)...);
 8010abc:	4633      	mov	r3, r6
    }
 8010abe:	4618      	mov	r0, r3
 8010ac0:	3714      	adds	r7, #20
 8010ac2:	46bd      	mov	sp, r7
 8010ac4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010ac6:	bf00      	nop
 8010ac8:	0802a1c4 	.word	0x0802a1c4

08010acc <_ZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS7_ifbEEERKS9_EEvOT0_OT1_>:
    void __variant_construct(_Tp&& __lhs, _Up&& __rhs)
 8010acc:	b580      	push	{r7, lr}
 8010ace:	b084      	sub	sp, #16
 8010ad0:	af00      	add	r7, sp, #0
 8010ad2:	6078      	str	r0, [r7, #4]
 8010ad4:	6039      	str	r1, [r7, #0]
      __lhs._M_index = __rhs._M_index;
 8010ad6:	683b      	ldr	r3, [r7, #0]
 8010ad8:	7e1a      	ldrb	r2, [r3, #24]
 8010ada:	687b      	ldr	r3, [r7, #4]
 8010adc:	761a      	strb	r2, [r3, #24]
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 8010ade:	687b      	ldr	r3, [r7, #4]
 8010ae0:	60fb      	str	r3, [r7, #12]
 8010ae2:	6838      	ldr	r0, [r7, #0]
 8010ae4:	f000 fbf0 	bl	80112c8 <_ZSt7forwardIRKNSt8__detail9__variant15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISC_E4typeE>
 8010ae8:	4603      	mov	r3, r0
 8010aea:	4618      	mov	r0, r3
 8010aec:	f7ff fd60 	bl	80105b0 <_ZSt14__variant_castIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERKNSt8__detail9__variant15_Copy_ctor_baseILb0EJS5_ifbEEEEDcOT0_>
 8010af0:	4602      	mov	r2, r0
 8010af2:	f107 030c 	add.w	r3, r7, #12
 8010af6:	4611      	mov	r1, r2
 8010af8:	4618      	mov	r0, r3
 8010afa:	f7ff ffc1 	bl	8010a80 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_JRKSt7variantIJS8_ifbEEEEDcSH_DpOT2_>
    }
 8010afe:	bf00      	nop
 8010b00:	3710      	adds	r7, #16
 8010b02:	46bd      	mov	sp, r7
 8010b04:	bd80      	pop	{r7, pc}

08010b06 <_ZSt14__variant_castIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNSt8__detail9__variant16_Variant_storageILb0EJS5_ifbEEEEDcOT0_>:
    __variant_cast(_Tp&& __rhs)
 8010b06:	b480      	push	{r7}
 8010b08:	b083      	sub	sp, #12
 8010b0a:	af00      	add	r7, sp, #0
 8010b0c:	6078      	str	r0, [r7, #4]
	    return static_cast<variant<_Types...>&>(__rhs);
 8010b0e:	687b      	ldr	r3, [r7, #4]
    }
 8010b10:	4618      	mov	r0, r3
 8010b12:	370c      	adds	r7, #12
 8010b14:	46bd      	mov	sp, r7
 8010b16:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010b1a:	4770      	bx	lr

08010b1c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESI_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8010b1c:	b580      	push	{r7, lr}
 8010b1e:	b082      	sub	sp, #8
 8010b20:	af00      	add	r7, sp, #0
 8010b22:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8010b24:	6878      	ldr	r0, [r7, #4]
 8010b26:	f000 fb37 	bl	8011198 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8010b2a:	4603      	mov	r3, r0
 8010b2c:	4618      	mov	r0, r3
 8010b2e:	f7ff fbf6 	bl	801031e <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 8010b32:	4603      	mov	r3, r0
	}
 8010b34:	4618      	mov	r0, r3
 8010b36:	3708      	adds	r7, #8
 8010b38:	46bd      	mov	sp, r7
 8010b3a:	bd80      	pop	{r7, pc}

08010b3c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESF_SI_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8010b3c:	b5b0      	push	{r4, r5, r7, lr}
 8010b3e:	b082      	sub	sp, #8
 8010b40:	af00      	add	r7, sp, #0
 8010b42:	6078      	str	r0, [r7, #4]
 8010b44:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8010b46:	6878      	ldr	r0, [r7, #4]
 8010b48:	f000 fc7d 	bl	8011446 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8010b4c:	4604      	mov	r4, r0
 8010b4e:	6838      	ldr	r0, [r7, #0]
 8010b50:	f000 fb22 	bl	8011198 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8010b54:	4603      	mov	r3, r0
 8010b56:	4618      	mov	r0, r3
 8010b58:	f7ff ffe0 	bl	8010b1c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESI_EEDcOT0_>
 8010b5c:	4603      	mov	r3, r0
 8010b5e:	4619      	mov	r1, r3
 8010b60:	4620      	mov	r0, r4
 8010b62:	f000 fc7b 	bl	801145c <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRS8_EENSt15__invoke_resultISA_JDpT0_EE4typeESB_DpOSF_>
		std::forward<_Variants>(__vars))...);
 8010b66:	462b      	mov	r3, r5
      }
 8010b68:	4618      	mov	r0, r3
 8010b6a:	3708      	adds	r7, #8
 8010b6c:	46bd      	mov	sp, r7
 8010b6e:	bdb0      	pop	{r4, r5, r7, pc}

08010b70 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESF_SI_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8010b70:	b5b0      	push	{r4, r5, r7, lr}
 8010b72:	b082      	sub	sp, #8
 8010b74:	af00      	add	r7, sp, #0
 8010b76:	6078      	str	r0, [r7, #4]
 8010b78:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8010b7a:	6878      	ldr	r0, [r7, #4]
 8010b7c:	f000 fc63 	bl	8011446 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8010b80:	4604      	mov	r4, r0
 8010b82:	6838      	ldr	r0, [r7, #0]
 8010b84:	f000 fb08 	bl	8011198 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8010b88:	4603      	mov	r3, r0
 8010b8a:	4619      	mov	r1, r3
 8010b8c:	4620      	mov	r0, r4
 8010b8e:	f7ff ffd5 	bl	8010b3c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESF_SI_>
				   std::forward<_Variants>(__vars)...);
 8010b92:	462b      	mov	r3, r5
      }
 8010b94:	4618      	mov	r0, r3
 8010b96:	3708      	adds	r7, #8
 8010b98:	46bd      	mov	sp, r7
 8010b9a:	bdb0      	pop	{r4, r5, r7, pc}

08010b9c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj0EEEE14__visit_invokeESF_SI_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8010b9c:	b5b0      	push	{r4, r5, r7, lr}
 8010b9e:	b082      	sub	sp, #8
 8010ba0:	af00      	add	r7, sp, #0
 8010ba2:	6078      	str	r0, [r7, #4]
 8010ba4:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8010ba6:	6878      	ldr	r0, [r7, #4]
 8010ba8:	f000 fc4d 	bl	8011446 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8010bac:	4604      	mov	r4, r0
 8010bae:	6838      	ldr	r0, [r7, #0]
 8010bb0:	f000 faf2 	bl	8011198 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8010bb4:	4603      	mov	r3, r0
 8010bb6:	4619      	mov	r1, r3
 8010bb8:	4620      	mov	r0, r4
 8010bba:	f7ff ffd9 	bl	8010b70 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESF_SI_>
				   std::forward<_Variants>(__vars)...);
 8010bbe:	462b      	mov	r3, r5
      }
 8010bc0:	4618      	mov	r0, r3
 8010bc2:	3708      	adds	r7, #8
 8010bc4:	46bd      	mov	sp, r7
 8010bc6:	bdb0      	pop	{r4, r5, r7, pc}

08010bc8 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESI_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8010bc8:	b580      	push	{r7, lr}
 8010bca:	b082      	sub	sp, #8
 8010bcc:	af00      	add	r7, sp, #0
 8010bce:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8010bd0:	6878      	ldr	r0, [r7, #4]
 8010bd2:	f000 fae1 	bl	8011198 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8010bd6:	4603      	mov	r3, r0
 8010bd8:	4618      	mov	r0, r3
 8010bda:	f7ff fc09 	bl	80103f0 <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 8010bde:	4603      	mov	r3, r0
	}
 8010be0:	4618      	mov	r0, r3
 8010be2:	3708      	adds	r7, #8
 8010be4:	46bd      	mov	sp, r7
 8010be6:	bd80      	pop	{r7, pc}

08010be8 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESF_SI_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8010be8:	b5b0      	push	{r4, r5, r7, lr}
 8010bea:	b082      	sub	sp, #8
 8010bec:	af00      	add	r7, sp, #0
 8010bee:	6078      	str	r0, [r7, #4]
 8010bf0:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8010bf2:	6878      	ldr	r0, [r7, #4]
 8010bf4:	f000 fc27 	bl	8011446 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8010bf8:	4604      	mov	r4, r0
 8010bfa:	6838      	ldr	r0, [r7, #0]
 8010bfc:	f000 facc 	bl	8011198 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8010c00:	4603      	mov	r3, r0
 8010c02:	4618      	mov	r0, r3
 8010c04:	f7ff ffe0 	bl	8010bc8 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESI_EEDcOT0_>
 8010c08:	4603      	mov	r3, r0
 8010c0a:	4619      	mov	r1, r3
 8010c0c:	4620      	mov	r0, r4
 8010c0e:	f000 fc3c 	bl	801148a <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRiEENSt15__invoke_resultISA_JDpT0_EE4typeESB_DpOSF_>
		std::forward<_Variants>(__vars))...);
 8010c12:	462b      	mov	r3, r5
      }
 8010c14:	4618      	mov	r0, r3
 8010c16:	3708      	adds	r7, #8
 8010c18:	46bd      	mov	sp, r7
 8010c1a:	bdb0      	pop	{r4, r5, r7, pc}

08010c1c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESF_SI_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8010c1c:	b5b0      	push	{r4, r5, r7, lr}
 8010c1e:	b082      	sub	sp, #8
 8010c20:	af00      	add	r7, sp, #0
 8010c22:	6078      	str	r0, [r7, #4]
 8010c24:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8010c26:	6878      	ldr	r0, [r7, #4]
 8010c28:	f000 fc0d 	bl	8011446 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8010c2c:	4604      	mov	r4, r0
 8010c2e:	6838      	ldr	r0, [r7, #0]
 8010c30:	f000 fab2 	bl	8011198 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8010c34:	4603      	mov	r3, r0
 8010c36:	4619      	mov	r1, r3
 8010c38:	4620      	mov	r0, r4
 8010c3a:	f7ff ffd5 	bl	8010be8 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESF_SI_>
				   std::forward<_Variants>(__vars)...);
 8010c3e:	462b      	mov	r3, r5
      }
 8010c40:	4618      	mov	r0, r3
 8010c42:	3708      	adds	r7, #8
 8010c44:	46bd      	mov	sp, r7
 8010c46:	bdb0      	pop	{r4, r5, r7, pc}

08010c48 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj1EEEE14__visit_invokeESF_SI_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8010c48:	b5b0      	push	{r4, r5, r7, lr}
 8010c4a:	b082      	sub	sp, #8
 8010c4c:	af00      	add	r7, sp, #0
 8010c4e:	6078      	str	r0, [r7, #4]
 8010c50:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8010c52:	6878      	ldr	r0, [r7, #4]
 8010c54:	f000 fbf7 	bl	8011446 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8010c58:	4604      	mov	r4, r0
 8010c5a:	6838      	ldr	r0, [r7, #0]
 8010c5c:	f000 fa9c 	bl	8011198 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8010c60:	4603      	mov	r3, r0
 8010c62:	4619      	mov	r1, r3
 8010c64:	4620      	mov	r0, r4
 8010c66:	f7ff ffd9 	bl	8010c1c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESF_SI_>
				   std::forward<_Variants>(__vars)...);
 8010c6a:	462b      	mov	r3, r5
      }
 8010c6c:	4618      	mov	r0, r3
 8010c6e:	3708      	adds	r7, #8
 8010c70:	46bd      	mov	sp, r7
 8010c72:	bdb0      	pop	{r4, r5, r7, pc}

08010c74 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESI_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8010c74:	b580      	push	{r7, lr}
 8010c76:	b082      	sub	sp, #8
 8010c78:	af00      	add	r7, sp, #0
 8010c7a:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8010c7c:	6878      	ldr	r0, [r7, #4]
 8010c7e:	f000 fa8b 	bl	8011198 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8010c82:	4603      	mov	r3, r0
 8010c84:	4618      	mov	r0, r3
 8010c86:	f7ff fc2f 	bl	80104e8 <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 8010c8a:	4603      	mov	r3, r0
	}
 8010c8c:	4618      	mov	r0, r3
 8010c8e:	3708      	adds	r7, #8
 8010c90:	46bd      	mov	sp, r7
 8010c92:	bd80      	pop	{r7, pc}

08010c94 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESF_SI_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8010c94:	b5b0      	push	{r4, r5, r7, lr}
 8010c96:	b082      	sub	sp, #8
 8010c98:	af00      	add	r7, sp, #0
 8010c9a:	6078      	str	r0, [r7, #4]
 8010c9c:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8010c9e:	6878      	ldr	r0, [r7, #4]
 8010ca0:	f000 fbd1 	bl	8011446 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8010ca4:	4604      	mov	r4, r0
 8010ca6:	6838      	ldr	r0, [r7, #0]
 8010ca8:	f000 fa76 	bl	8011198 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8010cac:	4603      	mov	r3, r0
 8010cae:	4618      	mov	r0, r3
 8010cb0:	f7ff ffe0 	bl	8010c74 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESI_EEDcOT0_>
 8010cb4:	4603      	mov	r3, r0
 8010cb6:	4619      	mov	r1, r3
 8010cb8:	4620      	mov	r0, r4
 8010cba:	f000 fbfd 	bl	80114b8 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRfEENSt15__invoke_resultISA_JDpT0_EE4typeESB_DpOSF_>
		std::forward<_Variants>(__vars))...);
 8010cbe:	462b      	mov	r3, r5
      }
 8010cc0:	4618      	mov	r0, r3
 8010cc2:	3708      	adds	r7, #8
 8010cc4:	46bd      	mov	sp, r7
 8010cc6:	bdb0      	pop	{r4, r5, r7, pc}

08010cc8 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESF_SI_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8010cc8:	b5b0      	push	{r4, r5, r7, lr}
 8010cca:	b082      	sub	sp, #8
 8010ccc:	af00      	add	r7, sp, #0
 8010cce:	6078      	str	r0, [r7, #4]
 8010cd0:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8010cd2:	6878      	ldr	r0, [r7, #4]
 8010cd4:	f000 fbb7 	bl	8011446 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8010cd8:	4604      	mov	r4, r0
 8010cda:	6838      	ldr	r0, [r7, #0]
 8010cdc:	f000 fa5c 	bl	8011198 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8010ce0:	4603      	mov	r3, r0
 8010ce2:	4619      	mov	r1, r3
 8010ce4:	4620      	mov	r0, r4
 8010ce6:	f7ff ffd5 	bl	8010c94 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESF_SI_>
				   std::forward<_Variants>(__vars)...);
 8010cea:	462b      	mov	r3, r5
      }
 8010cec:	4618      	mov	r0, r3
 8010cee:	3708      	adds	r7, #8
 8010cf0:	46bd      	mov	sp, r7
 8010cf2:	bdb0      	pop	{r4, r5, r7, pc}

08010cf4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj2EEEE14__visit_invokeESF_SI_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8010cf4:	b5b0      	push	{r4, r5, r7, lr}
 8010cf6:	b082      	sub	sp, #8
 8010cf8:	af00      	add	r7, sp, #0
 8010cfa:	6078      	str	r0, [r7, #4]
 8010cfc:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8010cfe:	6878      	ldr	r0, [r7, #4]
 8010d00:	f000 fba1 	bl	8011446 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8010d04:	4604      	mov	r4, r0
 8010d06:	6838      	ldr	r0, [r7, #0]
 8010d08:	f000 fa46 	bl	8011198 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8010d0c:	4603      	mov	r3, r0
 8010d0e:	4619      	mov	r1, r3
 8010d10:	4620      	mov	r0, r4
 8010d12:	f7ff ffd9 	bl	8010cc8 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESF_SI_>
				   std::forward<_Variants>(__vars)...);
 8010d16:	462b      	mov	r3, r5
      }
 8010d18:	4618      	mov	r0, r3
 8010d1a:	3708      	adds	r7, #8
 8010d1c:	46bd      	mov	sp, r7
 8010d1e:	bdb0      	pop	{r4, r5, r7, pc}

08010d20 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJbEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8010d20:	b580      	push	{r7, lr}
 8010d22:	b082      	sub	sp, #8
 8010d24:	af00      	add	r7, sp, #0
 8010d26:	7138      	strb	r0, [r7, #4]
 8010d28:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8010d2a:	6838      	ldr	r0, [r7, #0]
 8010d2c:	f000 fbdb 	bl	80114e6 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbEEEEOT_RNSt16remove_referenceIS5_E4typeE>
 8010d30:	4603      	mov	r3, r0
 8010d32:	4618      	mov	r0, r3
 8010d34:	f7f2 fdec 	bl	8003910 <_ZNRSt8__detail9__variant14_UninitializedIbLb1EE6_M_getEv>
 8010d38:	4603      	mov	r3, r0
 8010d3a:	4618      	mov	r0, r3
 8010d3c:	3708      	adds	r7, #8
 8010d3e:	46bd      	mov	sp, r7
 8010d40:	bd80      	pop	{r7, pc}

08010d42 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJfbEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8010d42:	b590      	push	{r4, r7, lr}
 8010d44:	b083      	sub	sp, #12
 8010d46:	af00      	add	r7, sp, #0
 8010d48:	7138      	strb	r0, [r7, #4]
 8010d4a:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8010d4c:	6838      	ldr	r0, [r7, #0]
 8010d4e:	f000 fa84 	bl	801125a <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfbEEEEOT_RNSt16remove_referenceIS5_E4typeE>
 8010d52:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8010d54:	4619      	mov	r1, r3
 8010d56:	4620      	mov	r0, r4
 8010d58:	f7ff ffe2 	bl	8010d20 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJbEEEEEDcSt16in_place_index_tILj0EEOT_>
 8010d5c:	4603      	mov	r3, r0
    }
 8010d5e:	4618      	mov	r0, r3
 8010d60:	370c      	adds	r7, #12
 8010d62:	46bd      	mov	sp, r7
 8010d64:	bd90      	pop	{r4, r7, pc}

08010d66 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8010d66:	b590      	push	{r4, r7, lr}
 8010d68:	b083      	sub	sp, #12
 8010d6a:	af00      	add	r7, sp, #0
 8010d6c:	7138      	strb	r0, [r7, #4]
 8010d6e:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8010d70:	6838      	ldr	r0, [r7, #0]
 8010d72:	f000 fa48 	bl	8011206 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifbEEEEOT_RNSt16remove_referenceIS5_E4typeE>
 8010d76:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8010d78:	4619      	mov	r1, r3
 8010d7a:	4620      	mov	r0, r4
 8010d7c:	f7ff ffe1 	bl	8010d42 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJfbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8010d80:	4603      	mov	r3, r0
    }
 8010d82:	4618      	mov	r0, r3
 8010d84:	370c      	adds	r7, #12
 8010d86:	46bd      	mov	sp, r7
 8010d88:	bd90      	pop	{r4, r7, pc}

08010d8a <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8010d8a:	b590      	push	{r4, r7, lr}
 8010d8c:	b083      	sub	sp, #12
 8010d8e:	af00      	add	r7, sp, #0
 8010d90:	7138      	strb	r0, [r7, #4]
 8010d92:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8010d94:	6838      	ldr	r0, [r7, #0]
 8010d96:	f000 fa0a 	bl	80111ae <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>
 8010d9a:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8010d9c:	4619      	mov	r1, r3
 8010d9e:	4620      	mov	r0, r4
 8010da0:	f7ff ffe1 	bl	8010d66 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8010da4:	4603      	mov	r3, r0
    }
 8010da6:	4618      	mov	r0, r3
 8010da8:	370c      	adds	r7, #12
 8010daa:	46bd      	mov	sp, r7
 8010dac:	bd90      	pop	{r4, r7, pc}

08010dae <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8010dae:	b590      	push	{r4, r7, lr}
 8010db0:	b083      	sub	sp, #12
 8010db2:	af00      	add	r7, sp, #0
 8010db4:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8010db6:	6878      	ldr	r0, [r7, #4]
 8010db8:	f000 f9ee 	bl	8011198 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8010dbc:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8010dbe:	4619      	mov	r1, r3
 8010dc0:	4620      	mov	r0, r4
 8010dc2:	f7ff ffe2 	bl	8010d8a <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8010dc6:	4603      	mov	r3, r0
    }
 8010dc8:	4618      	mov	r0, r3
 8010dca:	370c      	adds	r7, #12
 8010dcc:	46bd      	mov	sp, r7
 8010dce:	bd90      	pop	{r4, r7, pc}

08010dd0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESI_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8010dd0:	b580      	push	{r7, lr}
 8010dd2:	b082      	sub	sp, #8
 8010dd4:	af00      	add	r7, sp, #0
 8010dd6:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8010dd8:	6878      	ldr	r0, [r7, #4]
 8010dda:	f000 f9dd 	bl	8011198 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8010dde:	4603      	mov	r3, r0
 8010de0:	4618      	mov	r0, r3
 8010de2:	f7ff ffe4 	bl	8010dae <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 8010de6:	4603      	mov	r3, r0
	}
 8010de8:	4618      	mov	r0, r3
 8010dea:	3708      	adds	r7, #8
 8010dec:	46bd      	mov	sp, r7
 8010dee:	bd80      	pop	{r7, pc}

08010df0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESF_SI_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8010df0:	b5b0      	push	{r4, r5, r7, lr}
 8010df2:	b082      	sub	sp, #8
 8010df4:	af00      	add	r7, sp, #0
 8010df6:	6078      	str	r0, [r7, #4]
 8010df8:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8010dfa:	6878      	ldr	r0, [r7, #4]
 8010dfc:	f000 fb23 	bl	8011446 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8010e00:	4604      	mov	r4, r0
 8010e02:	6838      	ldr	r0, [r7, #0]
 8010e04:	f000 f9c8 	bl	8011198 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8010e08:	4603      	mov	r3, r0
 8010e0a:	4618      	mov	r0, r3
 8010e0c:	f7ff ffe0 	bl	8010dd0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESI_EEDcOT0_>
 8010e10:	4603      	mov	r3, r0
 8010e12:	4619      	mov	r1, r3
 8010e14:	4620      	mov	r0, r4
 8010e16:	f000 fb71 	bl	80114fc <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRbEENSt15__invoke_resultISA_JDpT0_EE4typeESB_DpOSF_>
		std::forward<_Variants>(__vars))...);
 8010e1a:	462b      	mov	r3, r5
      }
 8010e1c:	4618      	mov	r0, r3
 8010e1e:	3708      	adds	r7, #8
 8010e20:	46bd      	mov	sp, r7
 8010e22:	bdb0      	pop	{r4, r5, r7, pc}

08010e24 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESF_SI_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8010e24:	b5b0      	push	{r4, r5, r7, lr}
 8010e26:	b082      	sub	sp, #8
 8010e28:	af00      	add	r7, sp, #0
 8010e2a:	6078      	str	r0, [r7, #4]
 8010e2c:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8010e2e:	6878      	ldr	r0, [r7, #4]
 8010e30:	f000 fb09 	bl	8011446 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8010e34:	4604      	mov	r4, r0
 8010e36:	6838      	ldr	r0, [r7, #0]
 8010e38:	f000 f9ae 	bl	8011198 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8010e3c:	4603      	mov	r3, r0
 8010e3e:	4619      	mov	r1, r3
 8010e40:	4620      	mov	r0, r4
 8010e42:	f7ff ffd5 	bl	8010df0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESF_SI_>
				   std::forward<_Variants>(__vars)...);
 8010e46:	462b      	mov	r3, r5
      }
 8010e48:	4618      	mov	r0, r3
 8010e4a:	3708      	adds	r7, #8
 8010e4c:	46bd      	mov	sp, r7
 8010e4e:	bdb0      	pop	{r4, r5, r7, pc}

08010e50 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj3EEEE14__visit_invokeESF_SI_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8010e50:	b5b0      	push	{r4, r5, r7, lr}
 8010e52:	b082      	sub	sp, #8
 8010e54:	af00      	add	r7, sp, #0
 8010e56:	6078      	str	r0, [r7, #4]
 8010e58:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8010e5a:	6878      	ldr	r0, [r7, #4]
 8010e5c:	f000 faf3 	bl	8011446 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8010e60:	4604      	mov	r4, r0
 8010e62:	6838      	ldr	r0, [r7, #0]
 8010e64:	f000 f998 	bl	8011198 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8010e68:	4603      	mov	r3, r0
 8010e6a:	4619      	mov	r1, r3
 8010e6c:	4620      	mov	r0, r4
 8010e6e:	f7ff ffd9 	bl	8010e24 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESF_SI_>
				   std::forward<_Variants>(__vars)...);
 8010e72:	462b      	mov	r3, r5
      }
 8010e74:	4618      	mov	r0, r3
 8010e76:	3708      	adds	r7, #8
 8010e78:	46bd      	mov	sp, r7
 8010e7a:	bdb0      	pop	{r4, r5, r7, pc}

08010e7c <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJS9_ifbEEEJLj4EEE9_M_accessIJEEERKSJ_jDpT_>:
	_M_access(size_t __first_index, _Args... __rest_indices) const
 8010e7c:	b580      	push	{r7, lr}
 8010e7e:	b082      	sub	sp, #8
 8010e80:	af00      	add	r7, sp, #0
 8010e82:	6078      	str	r0, [r7, #4]
 8010e84:	6039      	str	r1, [r7, #0]
	    ._M_access(__rest_indices...);
 8010e86:	683b      	ldr	r3, [r7, #0]
 8010e88:	009b      	lsls	r3, r3, #2
 8010e8a:	687a      	ldr	r2, [r7, #4]
 8010e8c:	4413      	add	r3, r2
 8010e8e:	4618      	mov	r0, r3
 8010e90:	f000 fb4b 	bl	801152a <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJS9_ifbEEEJEE9_M_accessEv>
 8010e94:	4603      	mov	r3, r0
	}
 8010e96:	4618      	mov	r0, r3
 8010e98:	3708      	adds	r7, #8
 8010e9a:	46bd      	mov	sp, r7
 8010e9c:	bd80      	pop	{r7, pc}
	...

08010ea0 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRSt7variantIJS8_ifbEEEEDcOT1_DpOT2_>:
    __do_visit(_Visitor&& __visitor, _Variants&&... __variants)
 8010ea0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010ea2:	b085      	sub	sp, #20
 8010ea4:	af00      	add	r7, sp, #0
 8010ea6:	6078      	str	r0, [r7, #4]
 8010ea8:	6039      	str	r1, [r7, #0]
      constexpr auto& __vtable = __detail::__variant::__gen_vtable<
 8010eaa:	4b0f      	ldr	r3, [pc, #60]	; (8010ee8 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRSt7variantIJS8_ifbEEEEDcOT1_DpOT2_+0x48>)
 8010eac:	60fb      	str	r3, [r7, #12]
      auto __func_ptr = __vtable._M_access(__variants.index()...);
 8010eae:	6838      	ldr	r0, [r7, #0]
 8010eb0:	f7ff f852 	bl	800ff58 <_ZNKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE5indexEv>
 8010eb4:	4603      	mov	r3, r0
 8010eb6:	4619      	mov	r1, r3
 8010eb8:	68f8      	ldr	r0, [r7, #12]
 8010eba:	f7ff ffdf 	bl	8010e7c <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJS9_ifbEEEJLj4EEE9_M_accessIJEEERKSJ_jDpT_>
 8010ebe:	4603      	mov	r3, r0
 8010ec0:	681b      	ldr	r3, [r3, #0]
 8010ec2:	60bb      	str	r3, [r7, #8]
      return (*__func_ptr)(std::forward<_Visitor>(__visitor),
 8010ec4:	68bc      	ldr	r4, [r7, #8]
 8010ec6:	6878      	ldr	r0, [r7, #4]
 8010ec8:	f000 fb3a 	bl	8011540 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8010ecc:	4605      	mov	r5, r0
 8010ece:	6838      	ldr	r0, [r7, #0]
 8010ed0:	f000 f962 	bl	8011198 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8010ed4:	4603      	mov	r3, r0
 8010ed6:	4619      	mov	r1, r3
 8010ed8:	4628      	mov	r0, r5
 8010eda:	47a0      	blx	r4
			   std::forward<_Variants>(__variants)...);
 8010edc:	4633      	mov	r3, r6
    }
 8010ede:	4618      	mov	r0, r3
 8010ee0:	3714      	adds	r7, #20
 8010ee2:	46bd      	mov	sp, r7
 8010ee4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010ee6:	bf00      	nop
 8010ee8:	0802a1d4 	.word	0x0802a1d4

08010eec <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEv>:
      constexpr void _M_reset_impl()
 8010eec:	b580      	push	{r7, lr}
 8010eee:	b084      	sub	sp, #16
 8010ef0:	af00      	add	r7, sp, #0
 8010ef2:	6078      	str	r0, [r7, #4]
	__do_visit([](auto&& __this_mem) mutable
 8010ef4:	6878      	ldr	r0, [r7, #4]
 8010ef6:	f7ff fe06 	bl	8010b06 <_ZSt14__variant_castIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNSt8__detail9__variant16_Variant_storageILb0EJS5_ifbEEEEDcOT0_>
 8010efa:	4602      	mov	r2, r0
 8010efc:	f107 030c 	add.w	r3, r7, #12
 8010f00:	4611      	mov	r1, r2
 8010f02:	4618      	mov	r0, r3
 8010f04:	f7ff ffcc 	bl	8010ea0 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRSt7variantIJS8_ifbEEEEDcOT1_DpOT2_>
      }
 8010f08:	bf00      	nop
 8010f0a:	3710      	adds	r7, #16
 8010f0c:	46bd      	mov	sp, r7
 8010f0e:	bd80      	pop	{r7, pc}

08010f10 <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_beginEv>:
      _M_begin() const _GLIBCXX_NOEXCEPT
 8010f10:	b480      	push	{r7}
 8010f12:	b083      	sub	sp, #12
 8010f14:	af00      	add	r7, sp, #0
 8010f16:	6078      	str	r0, [r7, #4]
	  (this->_M_impl._M_header._M_parent);
 8010f18:	687b      	ldr	r3, [r7, #4]
 8010f1a:	689b      	ldr	r3, [r3, #8]
      }
 8010f1c:	4618      	mov	r0, r3
 8010f1e:	370c      	adds	r7, #12
 8010f20:	46bd      	mov	sp, r7
 8010f22:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010f26:	4770      	bx	lr

08010f28 <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_M_endEv>:
      _M_end() const _GLIBCXX_NOEXCEPT
 8010f28:	b480      	push	{r7}
 8010f2a:	b083      	sub	sp, #12
 8010f2c:	af00      	add	r7, sp, #0
 8010f2e:	6078      	str	r0, [r7, #4]
      { return &this->_M_impl._M_header; }
 8010f30:	687b      	ldr	r3, [r7, #4]
 8010f32:	3304      	adds	r3, #4
 8010f34:	4618      	mov	r0, r3
 8010f36:	370c      	adds	r7, #12
 8010f38:	46bd      	mov	sp, r7
 8010f3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010f3e:	4770      	bx	lr

08010f40 <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS3_EPKSt18_Rb_tree_node_baseRS1_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8010f40:	b590      	push	{r4, r7, lr}
 8010f42:	b087      	sub	sp, #28
 8010f44:	af00      	add	r7, sp, #0
 8010f46:	60f8      	str	r0, [r7, #12]
 8010f48:	60b9      	str	r1, [r7, #8]
 8010f4a:	607a      	str	r2, [r7, #4]
 8010f4c:	603b      	str	r3, [r7, #0]
      while (__x != 0)
 8010f4e:	68bb      	ldr	r3, [r7, #8]
 8010f50:	2b00      	cmp	r3, #0
 8010f52:	d01b      	beq.n	8010f8c <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS3_EPKSt18_Rb_tree_node_baseRS1_+0x4c>
	if (!_M_impl._M_key_compare(_S_key(__x), __k))
 8010f54:	68fc      	ldr	r4, [r7, #12]
 8010f56:	68b8      	ldr	r0, [r7, #8]
 8010f58:	f7f6 fb70 	bl	800763c <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt13_Rb_tree_nodeIS3_E>
 8010f5c:	4603      	mov	r3, r0
 8010f5e:	683a      	ldr	r2, [r7, #0]
 8010f60:	4619      	mov	r1, r3
 8010f62:	4620      	mov	r0, r4
 8010f64:	f7f5 fc1e 	bl	80067a4 <_ZNKSt4lessIcEclERKcS2_>
 8010f68:	4603      	mov	r3, r0
 8010f6a:	f083 0301 	eor.w	r3, r3, #1
 8010f6e:	b2db      	uxtb	r3, r3
 8010f70:	2b00      	cmp	r3, #0
 8010f72:	d006      	beq.n	8010f82 <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS3_EPKSt18_Rb_tree_node_baseRS1_+0x42>
	  __y = __x, __x = _S_left(__x);
 8010f74:	68bb      	ldr	r3, [r7, #8]
 8010f76:	607b      	str	r3, [r7, #4]
 8010f78:	68b8      	ldr	r0, [r7, #8]
 8010f7a:	f000 faec 	bl	8011556 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE7_S_leftEPKSt18_Rb_tree_node_base>
 8010f7e:	60b8      	str	r0, [r7, #8]
 8010f80:	e7e5      	b.n	8010f4e <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS3_EPKSt18_Rb_tree_node_baseRS1_+0xe>
	  __x = _S_right(__x);
 8010f82:	68b8      	ldr	r0, [r7, #8]
 8010f84:	f000 faf3 	bl	801156e <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPKSt18_Rb_tree_node_base>
 8010f88:	60b8      	str	r0, [r7, #8]
      while (__x != 0)
 8010f8a:	e7e0      	b.n	8010f4e <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS3_EPKSt18_Rb_tree_node_baseRS1_+0xe>
      return const_iterator(__y);
 8010f8c:	f107 0314 	add.w	r3, r7, #20
 8010f90:	6879      	ldr	r1, [r7, #4]
 8010f92:	4618      	mov	r0, r3
 8010f94:	f000 f819 	bl	8010fca <_ZNSt23_Rb_tree_const_iteratorISt4pairIKc10token_typeEEC1EPKSt18_Rb_tree_node_base>
 8010f98:	697b      	ldr	r3, [r7, #20]
    }
 8010f9a:	4618      	mov	r0, r3
 8010f9c:	371c      	adds	r7, #28
 8010f9e:	46bd      	mov	sp, r7
 8010fa0:	bd90      	pop	{r4, r7, pc}

08010fa2 <_ZSteqRKSt23_Rb_tree_const_iteratorISt4pairIKc10token_typeEES6_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 8010fa2:	b480      	push	{r7}
 8010fa4:	b083      	sub	sp, #12
 8010fa6:	af00      	add	r7, sp, #0
 8010fa8:	6078      	str	r0, [r7, #4]
 8010faa:	6039      	str	r1, [r7, #0]
      { return __x._M_node == __y._M_node; }
 8010fac:	687b      	ldr	r3, [r7, #4]
 8010fae:	681a      	ldr	r2, [r3, #0]
 8010fb0:	683b      	ldr	r3, [r7, #0]
 8010fb2:	681b      	ldr	r3, [r3, #0]
 8010fb4:	429a      	cmp	r2, r3
 8010fb6:	bf0c      	ite	eq
 8010fb8:	2301      	moveq	r3, #1
 8010fba:	2300      	movne	r3, #0
 8010fbc:	b2db      	uxtb	r3, r3
 8010fbe:	4618      	mov	r0, r3
 8010fc0:	370c      	adds	r7, #12
 8010fc2:	46bd      	mov	sp, r7
 8010fc4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010fc8:	4770      	bx	lr

08010fca <_ZNSt23_Rb_tree_const_iteratorISt4pairIKc10token_typeEEC1EPKSt18_Rb_tree_node_base>:
      _Rb_tree_const_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 8010fca:	b480      	push	{r7}
 8010fcc:	b083      	sub	sp, #12
 8010fce:	af00      	add	r7, sp, #0
 8010fd0:	6078      	str	r0, [r7, #4]
 8010fd2:	6039      	str	r1, [r7, #0]
      : _M_node(__x) { }
 8010fd4:	687b      	ldr	r3, [r7, #4]
 8010fd6:	683a      	ldr	r2, [r7, #0]
 8010fd8:	601a      	str	r2, [r3, #0]
 8010fda:	687b      	ldr	r3, [r7, #4]
 8010fdc:	4618      	mov	r0, r3
 8010fde:	370c      	adds	r7, #12
 8010fe0:	46bd      	mov	sp, r7
 8010fe2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010fe6:	4770      	bx	lr

08010fe8 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_beginEv>:
      _M_begin() const _GLIBCXX_NOEXCEPT
 8010fe8:	b480      	push	{r7}
 8010fea:	b083      	sub	sp, #12
 8010fec:	af00      	add	r7, sp, #0
 8010fee:	6078      	str	r0, [r7, #4]
	  (this->_M_impl._M_header._M_parent);
 8010ff0:	687b      	ldr	r3, [r7, #4]
 8010ff2:	689b      	ldr	r3, [r3, #8]
      }
 8010ff4:	4618      	mov	r0, r3
 8010ff6:	370c      	adds	r7, #12
 8010ff8:	46bd      	mov	sp, r7
 8010ffa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010ffe:	4770      	bx	lr

08011000 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_M_endEv>:
      _M_end() const _GLIBCXX_NOEXCEPT
 8011000:	b480      	push	{r7}
 8011002:	b083      	sub	sp, #12
 8011004:	af00      	add	r7, sp, #0
 8011006:	6078      	str	r0, [r7, #4]
      { return &this->_M_impl._M_header; }
 8011008:	687b      	ldr	r3, [r7, #4]
 801100a:	3304      	adds	r3, #4
 801100c:	4618      	mov	r0, r3
 801100e:	370c      	adds	r7, #12
 8011010:	46bd      	mov	sp, r7
 8011012:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011016:	4770      	bx	lr

08011018 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS3_EPKSt18_Rb_tree_node_baseRS1_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8011018:	b590      	push	{r4, r7, lr}
 801101a:	b087      	sub	sp, #28
 801101c:	af00      	add	r7, sp, #0
 801101e:	60f8      	str	r0, [r7, #12]
 8011020:	60b9      	str	r1, [r7, #8]
 8011022:	607a      	str	r2, [r7, #4]
 8011024:	603b      	str	r3, [r7, #0]
      while (__x != 0)
 8011026:	68bb      	ldr	r3, [r7, #8]
 8011028:	2b00      	cmp	r3, #0
 801102a:	d01b      	beq.n	8011064 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS3_EPKSt18_Rb_tree_node_baseRS1_+0x4c>
	if (!_M_impl._M_key_compare(_S_key(__x), __k))
 801102c:	68fc      	ldr	r4, [r7, #12]
 801102e:	68b8      	ldr	r0, [r7, #8]
 8011030:	f7f6 fc59 	bl	80078e6 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt13_Rb_tree_nodeIS3_E>
 8011034:	4603      	mov	r3, r0
 8011036:	683a      	ldr	r2, [r7, #0]
 8011038:	4619      	mov	r1, r3
 801103a:	4620      	mov	r0, r4
 801103c:	f7f5 fbb2 	bl	80067a4 <_ZNKSt4lessIcEclERKcS2_>
 8011040:	4603      	mov	r3, r0
 8011042:	f083 0301 	eor.w	r3, r3, #1
 8011046:	b2db      	uxtb	r3, r3
 8011048:	2b00      	cmp	r3, #0
 801104a:	d006      	beq.n	801105a <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS3_EPKSt18_Rb_tree_node_baseRS1_+0x42>
	  __y = __x, __x = _S_left(__x);
 801104c:	68bb      	ldr	r3, [r7, #8]
 801104e:	607b      	str	r3, [r7, #4]
 8011050:	68b8      	ldr	r0, [r7, #8]
 8011052:	f000 fa98 	bl	8011586 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE7_S_leftEPKSt18_Rb_tree_node_base>
 8011056:	60b8      	str	r0, [r7, #8]
 8011058:	e7e5      	b.n	8011026 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS3_EPKSt18_Rb_tree_node_baseRS1_+0xe>
	  __x = _S_right(__x);
 801105a:	68b8      	ldr	r0, [r7, #8]
 801105c:	f000 fa9f 	bl	801159e <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPKSt18_Rb_tree_node_base>
 8011060:	60b8      	str	r0, [r7, #8]
      while (__x != 0)
 8011062:	e7e0      	b.n	8011026 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS3_EPKSt18_Rb_tree_node_baseRS1_+0xe>
      return const_iterator(__y);
 8011064:	f107 0314 	add.w	r3, r7, #20
 8011068:	6879      	ldr	r1, [r7, #4]
 801106a:	4618      	mov	r0, r3
 801106c:	f000 f819 	bl	80110a2 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEEC1EPKSt18_Rb_tree_node_base>
 8011070:	697b      	ldr	r3, [r7, #20]
    }
 8011072:	4618      	mov	r0, r3
 8011074:	371c      	adds	r7, #28
 8011076:	46bd      	mov	sp, r7
 8011078:	bd90      	pop	{r4, r7, pc}

0801107a <_ZSteqRKSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEES6_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 801107a:	b480      	push	{r7}
 801107c:	b083      	sub	sp, #12
 801107e:	af00      	add	r7, sp, #0
 8011080:	6078      	str	r0, [r7, #4]
 8011082:	6039      	str	r1, [r7, #0]
      { return __x._M_node == __y._M_node; }
 8011084:	687b      	ldr	r3, [r7, #4]
 8011086:	681a      	ldr	r2, [r3, #0]
 8011088:	683b      	ldr	r3, [r7, #0]
 801108a:	681b      	ldr	r3, [r3, #0]
 801108c:	429a      	cmp	r2, r3
 801108e:	bf0c      	ite	eq
 8011090:	2301      	moveq	r3, #1
 8011092:	2300      	movne	r3, #0
 8011094:	b2db      	uxtb	r3, r3
 8011096:	4618      	mov	r0, r3
 8011098:	370c      	adds	r7, #12
 801109a:	46bd      	mov	sp, r7
 801109c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80110a0:	4770      	bx	lr

080110a2 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEEC1EPKSt18_Rb_tree_node_base>:
      _Rb_tree_const_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 80110a2:	b480      	push	{r7}
 80110a4:	b083      	sub	sp, #12
 80110a6:	af00      	add	r7, sp, #0
 80110a8:	6078      	str	r0, [r7, #4]
 80110aa:	6039      	str	r1, [r7, #0]
      : _M_node(__x) { }
 80110ac:	687b      	ldr	r3, [r7, #4]
 80110ae:	683a      	ldr	r2, [r7, #0]
 80110b0:	601a      	str	r2, [r3, #0]
 80110b2:	687b      	ldr	r3, [r7, #4]
 80110b4:	4618      	mov	r0, r3
 80110b6:	370c      	adds	r7, #12
 80110b8:	46bd      	mov	sp, r7
 80110ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80110be:	4770      	bx	lr

080110c0 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_beginEv>:
      _M_begin() const _GLIBCXX_NOEXCEPT
 80110c0:	b480      	push	{r7}
 80110c2:	b083      	sub	sp, #12
 80110c4:	af00      	add	r7, sp, #0
 80110c6:	6078      	str	r0, [r7, #4]
	  (this->_M_impl._M_header._M_parent);
 80110c8:	687b      	ldr	r3, [r7, #4]
 80110ca:	689b      	ldr	r3, [r3, #8]
      }
 80110cc:	4618      	mov	r0, r3
 80110ce:	370c      	adds	r7, #12
 80110d0:	46bd      	mov	sp, r7
 80110d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80110d6:	4770      	bx	lr

080110d8 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_M_endEv>:
      _M_end() const _GLIBCXX_NOEXCEPT
 80110d8:	b480      	push	{r7}
 80110da:	b083      	sub	sp, #12
 80110dc:	af00      	add	r7, sp, #0
 80110de:	6078      	str	r0, [r7, #4]
      { return &this->_M_impl._M_header; }
 80110e0:	687b      	ldr	r3, [r7, #4]
 80110e2:	3304      	adds	r3, #4
 80110e4:	4618      	mov	r0, r3
 80110e6:	370c      	adds	r7, #12
 80110e8:	46bd      	mov	sp, r7
 80110ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80110ee:	4770      	bx	lr

080110f0 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS9_EPKSt18_Rb_tree_node_baseRS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 80110f0:	b590      	push	{r4, r7, lr}
 80110f2:	b087      	sub	sp, #28
 80110f4:	af00      	add	r7, sp, #0
 80110f6:	60f8      	str	r0, [r7, #12]
 80110f8:	60b9      	str	r1, [r7, #8]
 80110fa:	607a      	str	r2, [r7, #4]
 80110fc:	603b      	str	r3, [r7, #0]
      while (__x != 0)
 80110fe:	68bb      	ldr	r3, [r7, #8]
 8011100:	2b00      	cmp	r3, #0
 8011102:	d01b      	beq.n	801113c <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS9_EPKSt18_Rb_tree_node_baseRS7_+0x4c>
	if (!_M_impl._M_key_compare(_S_key(__x), __k))
 8011104:	68fc      	ldr	r4, [r7, #12]
 8011106:	68b8      	ldr	r0, [r7, #8]
 8011108:	f7f6 fb40 	bl	800778c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt13_Rb_tree_nodeIS9_E>
 801110c:	4603      	mov	r3, r0
 801110e:	683a      	ldr	r2, [r7, #0]
 8011110:	4619      	mov	r1, r3
 8011112:	4620      	mov	r0, r4
 8011114:	f7f5 fcdb 	bl	8006ace <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8011118:	4603      	mov	r3, r0
 801111a:	f083 0301 	eor.w	r3, r3, #1
 801111e:	b2db      	uxtb	r3, r3
 8011120:	2b00      	cmp	r3, #0
 8011122:	d006      	beq.n	8011132 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS9_EPKSt18_Rb_tree_node_baseRS7_+0x42>
	  __y = __x, __x = _S_left(__x);
 8011124:	68bb      	ldr	r3, [r7, #8]
 8011126:	607b      	str	r3, [r7, #4]
 8011128:	68b8      	ldr	r0, [r7, #8]
 801112a:	f000 fa44 	bl	80115b6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE7_S_leftEPKSt18_Rb_tree_node_base>
 801112e:	60b8      	str	r0, [r7, #8]
 8011130:	e7e5      	b.n	80110fe <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS9_EPKSt18_Rb_tree_node_baseRS7_+0xe>
	  __x = _S_right(__x);
 8011132:	68b8      	ldr	r0, [r7, #8]
 8011134:	f000 fa4b 	bl	80115ce <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_S_rightEPKSt18_Rb_tree_node_base>
 8011138:	60b8      	str	r0, [r7, #8]
      while (__x != 0)
 801113a:	e7e0      	b.n	80110fe <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS9_EPKSt18_Rb_tree_node_baseRS7_+0xe>
      return const_iterator(__y);
 801113c:	f107 0314 	add.w	r3, r7, #20
 8011140:	6879      	ldr	r1, [r7, #4]
 8011142:	4618      	mov	r0, r3
 8011144:	f000 f819 	bl	801117a <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1EPKSt18_Rb_tree_node_base>
 8011148:	697b      	ldr	r3, [r7, #20]
    }
 801114a:	4618      	mov	r0, r3
 801114c:	371c      	adds	r7, #28
 801114e:	46bd      	mov	sp, r7
 8011150:	bd90      	pop	{r4, r7, pc}

08011152 <_ZSteqRKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEESC_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 8011152:	b480      	push	{r7}
 8011154:	b083      	sub	sp, #12
 8011156:	af00      	add	r7, sp, #0
 8011158:	6078      	str	r0, [r7, #4]
 801115a:	6039      	str	r1, [r7, #0]
      { return __x._M_node == __y._M_node; }
 801115c:	687b      	ldr	r3, [r7, #4]
 801115e:	681a      	ldr	r2, [r3, #0]
 8011160:	683b      	ldr	r3, [r7, #0]
 8011162:	681b      	ldr	r3, [r3, #0]
 8011164:	429a      	cmp	r2, r3
 8011166:	bf0c      	ite	eq
 8011168:	2301      	moveq	r3, #1
 801116a:	2300      	movne	r3, #0
 801116c:	b2db      	uxtb	r3, r3
 801116e:	4618      	mov	r0, r3
 8011170:	370c      	adds	r7, #12
 8011172:	46bd      	mov	sp, r7
 8011174:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011178:	4770      	bx	lr

0801117a <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1EPKSt18_Rb_tree_node_base>:
      _Rb_tree_const_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 801117a:	b480      	push	{r7}
 801117c:	b083      	sub	sp, #12
 801117e:	af00      	add	r7, sp, #0
 8011180:	6078      	str	r0, [r7, #4]
 8011182:	6039      	str	r1, [r7, #0]
      : _M_node(__x) { }
 8011184:	687b      	ldr	r3, [r7, #4]
 8011186:	683a      	ldr	r2, [r7, #0]
 8011188:	601a      	str	r2, [r3, #0]
 801118a:	687b      	ldr	r3, [r7, #4]
 801118c:	4618      	mov	r0, r3
 801118e:	370c      	adds	r7, #12
 8011190:	46bd      	mov	sp, r7
 8011192:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011196:	4770      	bx	lr

08011198 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8011198:	b480      	push	{r7}
 801119a:	b083      	sub	sp, #12
 801119c:	af00      	add	r7, sp, #0
 801119e:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80111a0:	687b      	ldr	r3, [r7, #4]
 80111a2:	4618      	mov	r0, r3
 80111a4:	370c      	adds	r7, #12
 80111a6:	46bd      	mov	sp, r7
 80111a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80111ac:	4770      	bx	lr

080111ae <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80111ae:	b480      	push	{r7}
 80111b0:	b083      	sub	sp, #12
 80111b2:	af00      	add	r7, sp, #0
 80111b4:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80111b6:	687b      	ldr	r3, [r7, #4]
 80111b8:	4618      	mov	r0, r3
 80111ba:	370c      	adds	r7, #12
 80111bc:	46bd      	mov	sp, r7
 80111be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80111c2:	4770      	bx	lr

080111c4 <_ZSt28__variant_construct_by_indexILj0ESt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEJS6_EEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 80111c4:	b590      	push	{r4, r7, lr}
 80111c6:	b085      	sub	sp, #20
 80111c8:	af00      	add	r7, sp, #0
 80111ca:	6078      	str	r0, [r7, #4]
 80111cc:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 80111ce:	687b      	ldr	r3, [r7, #4]
 80111d0:	2200      	movs	r2, #0
 80111d2:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 80111d4:	6878      	ldr	r0, [r7, #4]
 80111d6:	f7ff f8a2 	bl	801031e <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 80111da:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 80111dc:	6838      	ldr	r0, [r7, #0]
 80111de:	f7f6 fdab 	bl	8007d38 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 80111e2:	4604      	mov	r4, r0
      ::new ((void*)std::addressof(__storage))
 80111e4:	68f8      	ldr	r0, [r7, #12]
 80111e6:	f7f7 faf5 	bl	80087d4 <_ZSt9addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_>
 80111ea:	4603      	mov	r3, r0
 80111ec:	4619      	mov	r1, r3
 80111ee:	2018      	movs	r0, #24
 80111f0:	f7ef ff33 	bl	800105a <_ZnwjPv>
 80111f4:	4603      	mov	r3, r0
 80111f6:	4621      	mov	r1, r4
 80111f8:	4618      	mov	r0, r3
 80111fa:	f012 fc04 	bl	8023a06 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_>
    }
 80111fe:	bf00      	nop
 8011200:	3714      	adds	r7, #20
 8011202:	46bd      	mov	sp, r7
 8011204:	bd90      	pop	{r4, r7, pc}

08011206 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifbEEEEOT_RNSt16remove_referenceIS5_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8011206:	b480      	push	{r7}
 8011208:	b083      	sub	sp, #12
 801120a:	af00      	add	r7, sp, #0
 801120c:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801120e:	687b      	ldr	r3, [r7, #4]
 8011210:	4618      	mov	r0, r3
 8011212:	370c      	adds	r7, #12
 8011214:	46bd      	mov	sp, r7
 8011216:	f85d 7b04 	ldr.w	r7, [sp], #4
 801121a:	4770      	bx	lr

0801121c <_ZSt28__variant_construct_by_indexILj1ESt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEJiEEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 801121c:	b590      	push	{r4, r7, lr}
 801121e:	b085      	sub	sp, #20
 8011220:	af00      	add	r7, sp, #0
 8011222:	6078      	str	r0, [r7, #4]
 8011224:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 8011226:	687b      	ldr	r3, [r7, #4]
 8011228:	2201      	movs	r2, #1
 801122a:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 801122c:	6878      	ldr	r0, [r7, #4]
 801122e:	f7ff f8df 	bl	80103f0 <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 8011232:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 8011234:	6838      	ldr	r0, [r7, #0]
 8011236:	f7f6 fcc7 	bl	8007bc8 <_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE>
 801123a:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 801123c:	681c      	ldr	r4, [r3, #0]
 801123e:	68f8      	ldr	r0, [r7, #12]
 8011240:	f7f7 faa4 	bl	800878c <_ZSt9addressofIiEPT_RS0_>
 8011244:	4603      	mov	r3, r0
 8011246:	4619      	mov	r1, r3
 8011248:	2004      	movs	r0, #4
 801124a:	f7ef ff06 	bl	800105a <_ZnwjPv>
 801124e:	4603      	mov	r3, r0
 8011250:	601c      	str	r4, [r3, #0]
    }
 8011252:	bf00      	nop
 8011254:	3714      	adds	r7, #20
 8011256:	46bd      	mov	sp, r7
 8011258:	bd90      	pop	{r4, r7, pc}

0801125a <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfbEEEEOT_RNSt16remove_referenceIS5_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801125a:	b480      	push	{r7}
 801125c:	b083      	sub	sp, #12
 801125e:	af00      	add	r7, sp, #0
 8011260:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8011262:	687b      	ldr	r3, [r7, #4]
 8011264:	4618      	mov	r0, r3
 8011266:	370c      	adds	r7, #12
 8011268:	46bd      	mov	sp, r7
 801126a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801126e:	4770      	bx	lr

08011270 <_ZSt28__variant_construct_by_indexILj2ESt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEJfEEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 8011270:	b590      	push	{r4, r7, lr}
 8011272:	b085      	sub	sp, #20
 8011274:	af00      	add	r7, sp, #0
 8011276:	6078      	str	r0, [r7, #4]
 8011278:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 801127a:	687b      	ldr	r3, [r7, #4]
 801127c:	2202      	movs	r2, #2
 801127e:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 8011280:	6878      	ldr	r0, [r7, #4]
 8011282:	f7ff f931 	bl	80104e8 <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 8011286:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 8011288:	6838      	ldr	r0, [r7, #0]
 801128a:	f7f6 fcc7 	bl	8007c1c <_ZSt7forwardIfEOT_RNSt16remove_referenceIS0_E4typeE>
 801128e:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 8011290:	681c      	ldr	r4, [r3, #0]
 8011292:	68f8      	ldr	r0, [r7, #12]
 8011294:	f7f7 fa86 	bl	80087a4 <_ZSt9addressofIfEPT_RS0_>
 8011298:	4603      	mov	r3, r0
 801129a:	4619      	mov	r1, r3
 801129c:	2004      	movs	r0, #4
 801129e:	f7ef fedc 	bl	800105a <_ZnwjPv>
 80112a2:	4603      	mov	r3, r0
 80112a4:	601c      	str	r4, [r3, #0]
    }
 80112a6:	bf00      	nop
 80112a8:	3714      	adds	r7, #20
 80112aa:	46bd      	mov	sp, r7
 80112ac:	bd90      	pop	{r4, r7, pc}

080112ae <_ZNSt8__detail9__variant15_Variadic_unionIJifbEEC1Ev>:
      constexpr _Variadic_union() : _M_rest() { }
 80112ae:	b580      	push	{r7, lr}
 80112b0:	b082      	sub	sp, #8
 80112b2:	af00      	add	r7, sp, #0
 80112b4:	6078      	str	r0, [r7, #4]
 80112b6:	687b      	ldr	r3, [r7, #4]
 80112b8:	4618      	mov	r0, r3
 80112ba:	f000 f994 	bl	80115e6 <_ZNSt8__detail9__variant15_Variadic_unionIJfbEEC1Ev>
 80112be:	687b      	ldr	r3, [r7, #4]
 80112c0:	4618      	mov	r0, r3
 80112c2:	3708      	adds	r7, #8
 80112c4:	46bd      	mov	sp, r7
 80112c6:	bd80      	pop	{r7, pc}

080112c8 <_ZSt7forwardIRKNSt8__detail9__variant15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISC_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80112c8:	b480      	push	{r7}
 80112ca:	b083      	sub	sp, #12
 80112cc:	af00      	add	r7, sp, #0
 80112ce:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80112d0:	687b      	ldr	r3, [r7, #4]
 80112d2:	4618      	mov	r0, r3
 80112d4:	370c      	adds	r7, #12
 80112d6:	46bd      	mov	sp, r7
 80112d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80112dc:	4770      	bx	lr

080112de <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80112de:	b480      	push	{r7}
 80112e0:	b083      	sub	sp, #12
 80112e2:	af00      	add	r7, sp, #0
 80112e4:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80112e6:	687b      	ldr	r3, [r7, #4]
 80112e8:	4618      	mov	r0, r3
 80112ea:	370c      	adds	r7, #12
 80112ec:	46bd      	mov	sp, r7
 80112ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80112f2:	4770      	bx	lr

080112f4 <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80112f4:	b480      	push	{r7}
 80112f6:	b083      	sub	sp, #12
 80112f8:	af00      	add	r7, sp, #0
 80112fa:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80112fc:	687b      	ldr	r3, [r7, #4]
 80112fe:	4618      	mov	r0, r3
 8011300:	370c      	adds	r7, #12
 8011302:	46bd      	mov	sp, r7
 8011304:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011308:	4770      	bx	lr

0801130a <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISC_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801130a:	b480      	push	{r7}
 801130c:	b083      	sub	sp, #12
 801130e:	af00      	add	r7, sp, #0
 8011310:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8011312:	687b      	ldr	r3, [r7, #4]
 8011314:	4618      	mov	r0, r3
 8011316:	370c      	adds	r7, #12
 8011318:	46bd      	mov	sp, r7
 801131a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801131e:	4770      	bx	lr

08011320 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_JRKS8_EENSt15__invoke_resultISI_JDpT0_EE4typeESJ_DpOSO_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8011320:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011322:	b083      	sub	sp, #12
 8011324:	af00      	add	r7, sp, #0
 8011326:	6078      	str	r0, [r7, #4]
 8011328:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 801132a:	6878      	ldr	r0, [r7, #4]
 801132c:	f000 f880 	bl	8011430 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 8011330:	4604      	mov	r4, r0
 8011332:	6838      	ldr	r0, [r7, #0]
 8011334:	f7f3 feb6 	bl	80050a4 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 8011338:	4603      	mov	r3, r0
 801133a:	461a      	mov	r2, r3
 801133c:	4621      	mov	r1, r4
 801133e:	4628      	mov	r0, r5
 8011340:	f000 f95e 	bl	8011600 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS9_ifbEEERKSB_EEvOT0_OT1_EUlOT_E_JRKS9_EESJ_St14__invoke_otherSG_DpOT1_>
					std::forward<_Args>(__args)...);
 8011344:	4633      	mov	r3, r6
    }
 8011346:	4618      	mov	r0, r3
 8011348:	370c      	adds	r7, #12
 801134a:	46bd      	mov	sp, r7
 801134c:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801134e <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJifbEEEEOT_RNSt16remove_referenceIS6_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801134e:	b480      	push	{r7}
 8011350:	b083      	sub	sp, #12
 8011352:	af00      	add	r7, sp, #0
 8011354:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8011356:	687b      	ldr	r3, [r7, #4]
 8011358:	4618      	mov	r0, r3
 801135a:	370c      	adds	r7, #12
 801135c:	46bd      	mov	sp, r7
 801135e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011362:	4770      	bx	lr

08011364 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_JRKiEENSt15__invoke_resultISI_JDpT0_EE4typeESJ_DpOSO_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8011364:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011366:	b083      	sub	sp, #12
 8011368:	af00      	add	r7, sp, #0
 801136a:	6078      	str	r0, [r7, #4]
 801136c:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 801136e:	6878      	ldr	r0, [r7, #4]
 8011370:	f000 f85e 	bl	8011430 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 8011374:	4604      	mov	r4, r0
 8011376:	6838      	ldr	r0, [r7, #0]
 8011378:	f7f3 fe0d 	bl	8004f96 <_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE>
 801137c:	4603      	mov	r3, r0
 801137e:	461a      	mov	r2, r3
 8011380:	4621      	mov	r1, r4
 8011382:	4628      	mov	r0, r5
 8011384:	f000 f953 	bl	801162e <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS9_ifbEEERKSB_EEvOT0_OT1_EUlOT_E_JRKiEESJ_St14__invoke_otherSG_DpOT1_>
					std::forward<_Args>(__args)...);
 8011388:	4633      	mov	r3, r6
    }
 801138a:	4618      	mov	r0, r3
 801138c:	370c      	adds	r7, #12
 801138e:	46bd      	mov	sp, r7
 8011390:	bdf0      	pop	{r4, r5, r6, r7, pc}

08011392 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJfbEEEEOT_RNSt16remove_referenceIS6_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8011392:	b480      	push	{r7}
 8011394:	b083      	sub	sp, #12
 8011396:	af00      	add	r7, sp, #0
 8011398:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801139a:	687b      	ldr	r3, [r7, #4]
 801139c:	4618      	mov	r0, r3
 801139e:	370c      	adds	r7, #12
 80113a0:	46bd      	mov	sp, r7
 80113a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80113a6:	4770      	bx	lr

080113a8 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_JRKfEENSt15__invoke_resultISI_JDpT0_EE4typeESJ_DpOSO_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 80113a8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80113aa:	b083      	sub	sp, #12
 80113ac:	af00      	add	r7, sp, #0
 80113ae:	6078      	str	r0, [r7, #4]
 80113b0:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 80113b2:	6878      	ldr	r0, [r7, #4]
 80113b4:	f000 f83c 	bl	8011430 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 80113b8:	4604      	mov	r4, r0
 80113ba:	6838      	ldr	r0, [r7, #0]
 80113bc:	f7f3 fe14 	bl	8004fe8 <_ZSt7forwardIRKfEOT_RNSt16remove_referenceIS2_E4typeE>
 80113c0:	4603      	mov	r3, r0
 80113c2:	461a      	mov	r2, r3
 80113c4:	4621      	mov	r1, r4
 80113c6:	4628      	mov	r0, r5
 80113c8:	f000 f948 	bl	801165c <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS9_ifbEEERKSB_EEvOT0_OT1_EUlOT_E_JRKfEESJ_St14__invoke_otherSG_DpOT1_>
					std::forward<_Args>(__args)...);
 80113cc:	4633      	mov	r3, r6
    }
 80113ce:	4618      	mov	r0, r3
 80113d0:	370c      	adds	r7, #12
 80113d2:	46bd      	mov	sp, r7
 80113d4:	bdf0      	pop	{r4, r5, r6, r7, pc}

080113d6 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJbEEEEOT_RNSt16remove_referenceIS6_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80113d6:	b480      	push	{r7}
 80113d8:	b083      	sub	sp, #12
 80113da:	af00      	add	r7, sp, #0
 80113dc:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80113de:	687b      	ldr	r3, [r7, #4]
 80113e0:	4618      	mov	r0, r3
 80113e2:	370c      	adds	r7, #12
 80113e4:	46bd      	mov	sp, r7
 80113e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80113ea:	4770      	bx	lr

080113ec <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_JRKbEENSt15__invoke_resultISI_JDpT0_EE4typeESJ_DpOSO_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 80113ec:	b5f0      	push	{r4, r5, r6, r7, lr}
 80113ee:	b083      	sub	sp, #12
 80113f0:	af00      	add	r7, sp, #0
 80113f2:	6078      	str	r0, [r7, #4]
 80113f4:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 80113f6:	6878      	ldr	r0, [r7, #4]
 80113f8:	f000 f81a 	bl	8011430 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 80113fc:	4604      	mov	r4, r0
 80113fe:	6838      	ldr	r0, [r7, #0]
 8011400:	f7f3 fe1b 	bl	800503a <_ZSt7forwardIRKbEOT_RNSt16remove_referenceIS2_E4typeE>
 8011404:	4603      	mov	r3, r0
 8011406:	461a      	mov	r2, r3
 8011408:	4621      	mov	r1, r4
 801140a:	4628      	mov	r0, r5
 801140c:	f000 f93d 	bl	801168a <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS9_ifbEEERKSB_EEvOT0_OT1_EUlOT_E_JRKbEESJ_St14__invoke_otherSG_DpOT1_>
					std::forward<_Args>(__args)...);
 8011410:	4633      	mov	r3, r6
    }
 8011412:	4618      	mov	r0, r3
 8011414:	370c      	adds	r7, #12
 8011416:	46bd      	mov	sp, r7
 8011418:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801141a <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS9_ifbEEERKSB_EEvOT0_OT1_EUlOT_E_RKSt7variantIJS9_ifbEEEJEE9_M_accessEv>:
      _M_access() const
 801141a:	b480      	push	{r7}
 801141c:	b083      	sub	sp, #12
 801141e:	af00      	add	r7, sp, #0
 8011420:	6078      	str	r0, [r7, #4]
      { return _M_data; }
 8011422:	687b      	ldr	r3, [r7, #4]
 8011424:	4618      	mov	r0, r3
 8011426:	370c      	adds	r7, #12
 8011428:	46bd      	mov	sp, r7
 801142a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801142e:	4770      	bx	lr

08011430 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8011430:	b480      	push	{r7}
 8011432:	b083      	sub	sp, #12
 8011434:	af00      	add	r7, sp, #0
 8011436:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8011438:	687b      	ldr	r3, [r7, #4]
 801143a:	4618      	mov	r0, r3
 801143c:	370c      	adds	r7, #12
 801143e:	46bd      	mov	sp, r7
 8011440:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011444:	4770      	bx	lr

08011446 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8011446:	b480      	push	{r7}
 8011448:	b083      	sub	sp, #12
 801144a:	af00      	add	r7, sp, #0
 801144c:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801144e:	687b      	ldr	r3, [r7, #4]
 8011450:	4618      	mov	r0, r3
 8011452:	370c      	adds	r7, #12
 8011454:	46bd      	mov	sp, r7
 8011456:	f85d 7b04 	ldr.w	r7, [sp], #4
 801145a:	4770      	bx	lr

0801145c <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRS8_EENSt15__invoke_resultISA_JDpT0_EE4typeESB_DpOSF_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 801145c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801145e:	b083      	sub	sp, #12
 8011460:	af00      	add	r7, sp, #0
 8011462:	6078      	str	r0, [r7, #4]
 8011464:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8011466:	6878      	ldr	r0, [r7, #4]
 8011468:	f000 f86a 	bl	8011540 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 801146c:	4604      	mov	r4, r0
 801146e:	6838      	ldr	r0, [r7, #0]
 8011470:	f7f3 fc94 	bl	8004d9c <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 8011474:	4603      	mov	r3, r0
 8011476:	461a      	mov	r2, r3
 8011478:	4621      	mov	r1, r4
 801147a:	4628      	mov	r0, r5
 801147c:	f000 f91c 	bl	80116b8 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRS9_EESB_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 8011480:	4633      	mov	r3, r6
    }
 8011482:	4618      	mov	r0, r3
 8011484:	370c      	adds	r7, #12
 8011486:	46bd      	mov	sp, r7
 8011488:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801148a <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRiEENSt15__invoke_resultISA_JDpT0_EE4typeESB_DpOSF_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 801148a:	b5f0      	push	{r4, r5, r6, r7, lr}
 801148c:	b083      	sub	sp, #12
 801148e:	af00      	add	r7, sp, #0
 8011490:	6078      	str	r0, [r7, #4]
 8011492:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8011494:	6878      	ldr	r0, [r7, #4]
 8011496:	f000 f853 	bl	8011540 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 801149a:	4604      	mov	r4, r0
 801149c:	6838      	ldr	r0, [r7, #0]
 801149e:	f7f3 fbd5 	bl	8004c4c <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 80114a2:	4603      	mov	r3, r0
 80114a4:	461a      	mov	r2, r3
 80114a6:	4621      	mov	r1, r4
 80114a8:	4628      	mov	r0, r5
 80114aa:	f000 f91c 	bl	80116e6 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRiEESB_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 80114ae:	4633      	mov	r3, r6
    }
 80114b0:	4618      	mov	r0, r3
 80114b2:	370c      	adds	r7, #12
 80114b4:	46bd      	mov	sp, r7
 80114b6:	bdf0      	pop	{r4, r5, r6, r7, pc}

080114b8 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRfEENSt15__invoke_resultISA_JDpT0_EE4typeESB_DpOSF_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 80114b8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80114ba:	b083      	sub	sp, #12
 80114bc:	af00      	add	r7, sp, #0
 80114be:	6078      	str	r0, [r7, #4]
 80114c0:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 80114c2:	6878      	ldr	r0, [r7, #4]
 80114c4:	f000 f83c 	bl	8011540 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 80114c8:	4604      	mov	r4, r0
 80114ca:	6838      	ldr	r0, [r7, #0]
 80114cc:	f7f3 fbf2 	bl	8004cb4 <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 80114d0:	4603      	mov	r3, r0
 80114d2:	461a      	mov	r2, r3
 80114d4:	4621      	mov	r1, r4
 80114d6:	4628      	mov	r0, r5
 80114d8:	f000 f91c 	bl	8011714 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRfEESB_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 80114dc:	4633      	mov	r3, r6
    }
 80114de:	4618      	mov	r0, r3
 80114e0:	370c      	adds	r7, #12
 80114e2:	46bd      	mov	sp, r7
 80114e4:	bdf0      	pop	{r4, r5, r6, r7, pc}

080114e6 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbEEEEOT_RNSt16remove_referenceIS5_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80114e6:	b480      	push	{r7}
 80114e8:	b083      	sub	sp, #12
 80114ea:	af00      	add	r7, sp, #0
 80114ec:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80114ee:	687b      	ldr	r3, [r7, #4]
 80114f0:	4618      	mov	r0, r3
 80114f2:	370c      	adds	r7, #12
 80114f4:	46bd      	mov	sp, r7
 80114f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80114fa:	4770      	bx	lr

080114fc <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRbEENSt15__invoke_resultISA_JDpT0_EE4typeESB_DpOSF_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 80114fc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80114fe:	b083      	sub	sp, #12
 8011500:	af00      	add	r7, sp, #0
 8011502:	6078      	str	r0, [r7, #4]
 8011504:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8011506:	6878      	ldr	r0, [r7, #4]
 8011508:	f000 f81a 	bl	8011540 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 801150c:	4604      	mov	r4, r0
 801150e:	6838      	ldr	r0, [r7, #0]
 8011510:	f7f3 fc04 	bl	8004d1c <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
 8011514:	4603      	mov	r3, r0
 8011516:	461a      	mov	r2, r3
 8011518:	4621      	mov	r1, r4
 801151a:	4628      	mov	r0, r5
 801151c:	f000 f911 	bl	8011742 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRbEESB_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 8011520:	4633      	mov	r3, r6
    }
 8011522:	4618      	mov	r0, r3
 8011524:	370c      	adds	r7, #12
 8011526:	46bd      	mov	sp, r7
 8011528:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801152a <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJS9_ifbEEEJEE9_M_accessEv>:
      _M_access() const
 801152a:	b480      	push	{r7}
 801152c:	b083      	sub	sp, #12
 801152e:	af00      	add	r7, sp, #0
 8011530:	6078      	str	r0, [r7, #4]
      { return _M_data; }
 8011532:	687b      	ldr	r3, [r7, #4]
 8011534:	4618      	mov	r0, r3
 8011536:	370c      	adds	r7, #12
 8011538:	46bd      	mov	sp, r7
 801153a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801153e:	4770      	bx	lr

08011540 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8011540:	b480      	push	{r7}
 8011542:	b083      	sub	sp, #12
 8011544:	af00      	add	r7, sp, #0
 8011546:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8011548:	687b      	ldr	r3, [r7, #4]
 801154a:	4618      	mov	r0, r3
 801154c:	370c      	adds	r7, #12
 801154e:	46bd      	mov	sp, r7
 8011550:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011554:	4770      	bx	lr

08011556 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE7_S_leftEPKSt18_Rb_tree_node_base>:
      _S_left(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
 8011556:	b480      	push	{r7}
 8011558:	b083      	sub	sp, #12
 801155a:	af00      	add	r7, sp, #0
 801155c:	6078      	str	r0, [r7, #4]
      { return static_cast<_Const_Link_type>(__x->_M_left); }
 801155e:	687b      	ldr	r3, [r7, #4]
 8011560:	689b      	ldr	r3, [r3, #8]
 8011562:	4618      	mov	r0, r3
 8011564:	370c      	adds	r7, #12
 8011566:	46bd      	mov	sp, r7
 8011568:	f85d 7b04 	ldr.w	r7, [sp], #4
 801156c:	4770      	bx	lr

0801156e <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPKSt18_Rb_tree_node_base>:
      _S_right(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
 801156e:	b480      	push	{r7}
 8011570:	b083      	sub	sp, #12
 8011572:	af00      	add	r7, sp, #0
 8011574:	6078      	str	r0, [r7, #4]
      { return static_cast<_Const_Link_type>(__x->_M_right); }
 8011576:	687b      	ldr	r3, [r7, #4]
 8011578:	68db      	ldr	r3, [r3, #12]
 801157a:	4618      	mov	r0, r3
 801157c:	370c      	adds	r7, #12
 801157e:	46bd      	mov	sp, r7
 8011580:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011584:	4770      	bx	lr

08011586 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE7_S_leftEPKSt18_Rb_tree_node_base>:
      _S_left(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
 8011586:	b480      	push	{r7}
 8011588:	b083      	sub	sp, #12
 801158a:	af00      	add	r7, sp, #0
 801158c:	6078      	str	r0, [r7, #4]
      { return static_cast<_Const_Link_type>(__x->_M_left); }
 801158e:	687b      	ldr	r3, [r7, #4]
 8011590:	689b      	ldr	r3, [r3, #8]
 8011592:	4618      	mov	r0, r3
 8011594:	370c      	adds	r7, #12
 8011596:	46bd      	mov	sp, r7
 8011598:	f85d 7b04 	ldr.w	r7, [sp], #4
 801159c:	4770      	bx	lr

0801159e <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPKSt18_Rb_tree_node_base>:
      _S_right(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
 801159e:	b480      	push	{r7}
 80115a0:	b083      	sub	sp, #12
 80115a2:	af00      	add	r7, sp, #0
 80115a4:	6078      	str	r0, [r7, #4]
      { return static_cast<_Const_Link_type>(__x->_M_right); }
 80115a6:	687b      	ldr	r3, [r7, #4]
 80115a8:	68db      	ldr	r3, [r3, #12]
 80115aa:	4618      	mov	r0, r3
 80115ac:	370c      	adds	r7, #12
 80115ae:	46bd      	mov	sp, r7
 80115b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80115b4:	4770      	bx	lr

080115b6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE7_S_leftEPKSt18_Rb_tree_node_base>:
      _S_left(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
 80115b6:	b480      	push	{r7}
 80115b8:	b083      	sub	sp, #12
 80115ba:	af00      	add	r7, sp, #0
 80115bc:	6078      	str	r0, [r7, #4]
      { return static_cast<_Const_Link_type>(__x->_M_left); }
 80115be:	687b      	ldr	r3, [r7, #4]
 80115c0:	689b      	ldr	r3, [r3, #8]
 80115c2:	4618      	mov	r0, r3
 80115c4:	370c      	adds	r7, #12
 80115c6:	46bd      	mov	sp, r7
 80115c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80115cc:	4770      	bx	lr

080115ce <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_S_rightEPKSt18_Rb_tree_node_base>:
      _S_right(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
 80115ce:	b480      	push	{r7}
 80115d0:	b083      	sub	sp, #12
 80115d2:	af00      	add	r7, sp, #0
 80115d4:	6078      	str	r0, [r7, #4]
      { return static_cast<_Const_Link_type>(__x->_M_right); }
 80115d6:	687b      	ldr	r3, [r7, #4]
 80115d8:	68db      	ldr	r3, [r3, #12]
 80115da:	4618      	mov	r0, r3
 80115dc:	370c      	adds	r7, #12
 80115de:	46bd      	mov	sp, r7
 80115e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80115e4:	4770      	bx	lr

080115e6 <_ZNSt8__detail9__variant15_Variadic_unionIJfbEEC1Ev>:
      constexpr _Variadic_union() : _M_rest() { }
 80115e6:	b580      	push	{r7, lr}
 80115e8:	b082      	sub	sp, #8
 80115ea:	af00      	add	r7, sp, #0
 80115ec:	6078      	str	r0, [r7, #4]
 80115ee:	687b      	ldr	r3, [r7, #4]
 80115f0:	4618      	mov	r0, r3
 80115f2:	f000 f8bd 	bl	8011770 <_ZNSt8__detail9__variant15_Variadic_unionIJbEEC1Ev>
 80115f6:	687b      	ldr	r3, [r7, #4]
 80115f8:	4618      	mov	r0, r3
 80115fa:	3708      	adds	r7, #8
 80115fc:	46bd      	mov	sp, r7
 80115fe:	bd80      	pop	{r7, pc}

08011600 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS9_ifbEEERKSB_EEvOT0_OT1_EUlOT_E_JRKS9_EESJ_St14__invoke_otherSG_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8011600:	b5b0      	push	{r4, r5, r7, lr}
 8011602:	b084      	sub	sp, #16
 8011604:	af00      	add	r7, sp, #0
 8011606:	7338      	strb	r0, [r7, #12]
 8011608:	60b9      	str	r1, [r7, #8]
 801160a:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 801160c:	68b8      	ldr	r0, [r7, #8]
 801160e:	f7ff ff0f 	bl	8011430 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 8011612:	4604      	mov	r4, r0
 8011614:	6878      	ldr	r0, [r7, #4]
 8011616:	f7f3 fd45 	bl	80050a4 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 801161a:	4603      	mov	r3, r0
 801161c:	4619      	mov	r1, r3
 801161e:	4620      	mov	r0, r4
 8011620:	f000 f8b1 	bl	8011786 <_ZZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS7_ifbEEERKS9_EEvOT0_OT1_ENUlOT_E_clIRKS7_EENS0_16__variant_cookieESI_>
 8011624:	462b      	mov	r3, r5
 8011626:	4618      	mov	r0, r3
 8011628:	3710      	adds	r7, #16
 801162a:	46bd      	mov	sp, r7
 801162c:	bdb0      	pop	{r4, r5, r7, pc}

0801162e <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS9_ifbEEERKSB_EEvOT0_OT1_EUlOT_E_JRKiEESJ_St14__invoke_otherSG_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 801162e:	b5b0      	push	{r4, r5, r7, lr}
 8011630:	b084      	sub	sp, #16
 8011632:	af00      	add	r7, sp, #0
 8011634:	7338      	strb	r0, [r7, #12]
 8011636:	60b9      	str	r1, [r7, #8]
 8011638:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 801163a:	68b8      	ldr	r0, [r7, #8]
 801163c:	f7ff fef8 	bl	8011430 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 8011640:	4604      	mov	r4, r0
 8011642:	6878      	ldr	r0, [r7, #4]
 8011644:	f7f3 fca7 	bl	8004f96 <_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE>
 8011648:	4603      	mov	r3, r0
 801164a:	4619      	mov	r1, r3
 801164c:	4620      	mov	r0, r4
 801164e:	f000 f8b2 	bl	80117b6 <_ZZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS7_ifbEEERKS9_EEvOT0_OT1_ENUlOT_E_clIRKiEENS0_16__variant_cookieESI_>
 8011652:	462b      	mov	r3, r5
 8011654:	4618      	mov	r0, r3
 8011656:	3710      	adds	r7, #16
 8011658:	46bd      	mov	sp, r7
 801165a:	bdb0      	pop	{r4, r5, r7, pc}

0801165c <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS9_ifbEEERKSB_EEvOT0_OT1_EUlOT_E_JRKfEESJ_St14__invoke_otherSG_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 801165c:	b5b0      	push	{r4, r5, r7, lr}
 801165e:	b084      	sub	sp, #16
 8011660:	af00      	add	r7, sp, #0
 8011662:	7338      	strb	r0, [r7, #12]
 8011664:	60b9      	str	r1, [r7, #8]
 8011666:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8011668:	68b8      	ldr	r0, [r7, #8]
 801166a:	f7ff fee1 	bl	8011430 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 801166e:	4604      	mov	r4, r0
 8011670:	6878      	ldr	r0, [r7, #4]
 8011672:	f7f3 fcb9 	bl	8004fe8 <_ZSt7forwardIRKfEOT_RNSt16remove_referenceIS2_E4typeE>
 8011676:	4603      	mov	r3, r0
 8011678:	4619      	mov	r1, r3
 801167a:	4620      	mov	r0, r4
 801167c:	f000 f8b3 	bl	80117e6 <_ZZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS7_ifbEEERKS9_EEvOT0_OT1_ENUlOT_E_clIRKfEENS0_16__variant_cookieESI_>
 8011680:	462b      	mov	r3, r5
 8011682:	4618      	mov	r0, r3
 8011684:	3710      	adds	r7, #16
 8011686:	46bd      	mov	sp, r7
 8011688:	bdb0      	pop	{r4, r5, r7, pc}

0801168a <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS9_ifbEEERKSB_EEvOT0_OT1_EUlOT_E_JRKbEESJ_St14__invoke_otherSG_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 801168a:	b5b0      	push	{r4, r5, r7, lr}
 801168c:	b084      	sub	sp, #16
 801168e:	af00      	add	r7, sp, #0
 8011690:	7338      	strb	r0, [r7, #12]
 8011692:	60b9      	str	r1, [r7, #8]
 8011694:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8011696:	68b8      	ldr	r0, [r7, #8]
 8011698:	f7ff feca 	bl	8011430 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 801169c:	4604      	mov	r4, r0
 801169e:	6878      	ldr	r0, [r7, #4]
 80116a0:	f7f3 fccb 	bl	800503a <_ZSt7forwardIRKbEOT_RNSt16remove_referenceIS2_E4typeE>
 80116a4:	4603      	mov	r3, r0
 80116a6:	4619      	mov	r1, r3
 80116a8:	4620      	mov	r0, r4
 80116aa:	f000 f8b4 	bl	8011816 <_ZZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS7_ifbEEERKS9_EEvOT0_OT1_ENUlOT_E_clIRKbEENS0_16__variant_cookieESI_>
 80116ae:	462b      	mov	r3, r5
 80116b0:	4618      	mov	r0, r3
 80116b2:	3710      	adds	r7, #16
 80116b4:	46bd      	mov	sp, r7
 80116b6:	bdb0      	pop	{r4, r5, r7, pc}

080116b8 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRS9_EESB_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 80116b8:	b5b0      	push	{r4, r5, r7, lr}
 80116ba:	b084      	sub	sp, #16
 80116bc:	af00      	add	r7, sp, #0
 80116be:	7338      	strb	r0, [r7, #12]
 80116c0:	60b9      	str	r1, [r7, #8]
 80116c2:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 80116c4:	68b8      	ldr	r0, [r7, #8]
 80116c6:	f7ff ff3b 	bl	8011540 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 80116ca:	4604      	mov	r4, r0
 80116cc:	6878      	ldr	r0, [r7, #4]
 80116ce:	f7f3 fb65 	bl	8004d9c <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 80116d2:	4603      	mov	r3, r0
 80116d4:	4619      	mov	r1, r3
 80116d6:	4620      	mov	r0, r4
 80116d8:	f000 f8b5 	bl	8011846 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvENUlOT_E_clIRS7_EENS0_16__variant_cookieESA_>
 80116dc:	462b      	mov	r3, r5
 80116de:	4618      	mov	r0, r3
 80116e0:	3710      	adds	r7, #16
 80116e2:	46bd      	mov	sp, r7
 80116e4:	bdb0      	pop	{r4, r5, r7, pc}

080116e6 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRiEESB_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 80116e6:	b5b0      	push	{r4, r5, r7, lr}
 80116e8:	b084      	sub	sp, #16
 80116ea:	af00      	add	r7, sp, #0
 80116ec:	7338      	strb	r0, [r7, #12]
 80116ee:	60b9      	str	r1, [r7, #8]
 80116f0:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 80116f2:	68b8      	ldr	r0, [r7, #8]
 80116f4:	f7ff ff24 	bl	8011540 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 80116f8:	4604      	mov	r4, r0
 80116fa:	6878      	ldr	r0, [r7, #4]
 80116fc:	f7f3 faa6 	bl	8004c4c <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 8011700:	4603      	mov	r3, r0
 8011702:	4619      	mov	r1, r3
 8011704:	4620      	mov	r0, r4
 8011706:	f000 f8af 	bl	8011868 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvENUlOT_E_clIRiEENS0_16__variant_cookieESA_>
 801170a:	462b      	mov	r3, r5
 801170c:	4618      	mov	r0, r3
 801170e:	3710      	adds	r7, #16
 8011710:	46bd      	mov	sp, r7
 8011712:	bdb0      	pop	{r4, r5, r7, pc}

08011714 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRfEESB_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8011714:	b5b0      	push	{r4, r5, r7, lr}
 8011716:	b084      	sub	sp, #16
 8011718:	af00      	add	r7, sp, #0
 801171a:	7338      	strb	r0, [r7, #12]
 801171c:	60b9      	str	r1, [r7, #8]
 801171e:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8011720:	68b8      	ldr	r0, [r7, #8]
 8011722:	f7ff ff0d 	bl	8011540 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8011726:	4604      	mov	r4, r0
 8011728:	6878      	ldr	r0, [r7, #4]
 801172a:	f7f3 fac3 	bl	8004cb4 <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 801172e:	4603      	mov	r3, r0
 8011730:	4619      	mov	r1, r3
 8011732:	4620      	mov	r0, r4
 8011734:	f000 f8a9 	bl	801188a <_ZZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvENUlOT_E_clIRfEENS0_16__variant_cookieESA_>
 8011738:	462b      	mov	r3, r5
 801173a:	4618      	mov	r0, r3
 801173c:	3710      	adds	r7, #16
 801173e:	46bd      	mov	sp, r7
 8011740:	bdb0      	pop	{r4, r5, r7, pc}

08011742 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRbEESB_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8011742:	b5b0      	push	{r4, r5, r7, lr}
 8011744:	b084      	sub	sp, #16
 8011746:	af00      	add	r7, sp, #0
 8011748:	7338      	strb	r0, [r7, #12]
 801174a:	60b9      	str	r1, [r7, #8]
 801174c:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 801174e:	68b8      	ldr	r0, [r7, #8]
 8011750:	f7ff fef6 	bl	8011540 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8011754:	4604      	mov	r4, r0
 8011756:	6878      	ldr	r0, [r7, #4]
 8011758:	f7f3 fae0 	bl	8004d1c <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
 801175c:	4603      	mov	r3, r0
 801175e:	4619      	mov	r1, r3
 8011760:	4620      	mov	r0, r4
 8011762:	f000 f8a3 	bl	80118ac <_ZZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvENUlOT_E_clIRbEENS0_16__variant_cookieESA_>
 8011766:	462b      	mov	r3, r5
 8011768:	4618      	mov	r0, r3
 801176a:	3710      	adds	r7, #16
 801176c:	46bd      	mov	sp, r7
 801176e:	bdb0      	pop	{r4, r5, r7, pc}

08011770 <_ZNSt8__detail9__variant15_Variadic_unionIJbEEC1Ev>:
 8011770:	b480      	push	{r7}
 8011772:	b083      	sub	sp, #12
 8011774:	af00      	add	r7, sp, #0
 8011776:	6078      	str	r0, [r7, #4]
 8011778:	687b      	ldr	r3, [r7, #4]
 801177a:	4618      	mov	r0, r3
 801177c:	370c      	adds	r7, #12
 801177e:	46bd      	mov	sp, r7
 8011780:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011784:	4770      	bx	lr

08011786 <_ZZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS7_ifbEEERKS9_EEvOT0_OT1_ENUlOT_E_clIRKS7_EENS0_16__variant_cookieESI_>:
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 8011786:	b5b0      	push	{r4, r5, r7, lr}
 8011788:	b082      	sub	sp, #8
 801178a:	af00      	add	r7, sp, #0
 801178c:	6078      	str	r0, [r7, #4]
 801178e:	6039      	str	r1, [r7, #0]
 8011790:	687b      	ldr	r3, [r7, #4]
 8011792:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 8011794:	4618      	mov	r0, r3
 8011796:	f000 f89a 	bl	80118ce <_ZSt7forwardIRNSt8__detail9__variant15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>
 801179a:	4604      	mov	r4, r0
 801179c:	6838      	ldr	r0, [r7, #0]
 801179e:	f7f3 fc81 	bl	80050a4 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 80117a2:	4603      	mov	r3, r0
 80117a4:	4619      	mov	r1, r3
 80117a6:	4620      	mov	r0, r4
 80117a8:	f000 f8b3 	bl	8011912 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEERKS8_EEvOT_OT0_>
	  return {};
 80117ac:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 80117ae:	4618      	mov	r0, r3
 80117b0:	3708      	adds	r7, #8
 80117b2:	46bd      	mov	sp, r7
 80117b4:	bdb0      	pop	{r4, r5, r7, pc}

080117b6 <_ZZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS7_ifbEEERKS9_EEvOT0_OT1_ENUlOT_E_clIRKiEENS0_16__variant_cookieESI_>:
 80117b6:	b5b0      	push	{r4, r5, r7, lr}
 80117b8:	b082      	sub	sp, #8
 80117ba:	af00      	add	r7, sp, #0
 80117bc:	6078      	str	r0, [r7, #4]
 80117be:	6039      	str	r1, [r7, #0]
 80117c0:	687b      	ldr	r3, [r7, #4]
 80117c2:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 80117c4:	4618      	mov	r0, r3
 80117c6:	f000 f882 	bl	80118ce <_ZSt7forwardIRNSt8__detail9__variant15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>
 80117ca:	4604      	mov	r4, r0
 80117cc:	6838      	ldr	r0, [r7, #0]
 80117ce:	f7f3 fbe2 	bl	8004f96 <_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE>
 80117d2:	4603      	mov	r3, r0
 80117d4:	4619      	mov	r1, r3
 80117d6:	4620      	mov	r0, r4
 80117d8:	f000 f8b7 	bl	801194a <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEERKiEEvOT_OT0_>
	  return {};
 80117dc:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 80117de:	4618      	mov	r0, r3
 80117e0:	3708      	adds	r7, #8
 80117e2:	46bd      	mov	sp, r7
 80117e4:	bdb0      	pop	{r4, r5, r7, pc}

080117e6 <_ZZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS7_ifbEEERKS9_EEvOT0_OT1_ENUlOT_E_clIRKfEENS0_16__variant_cookieESI_>:
 80117e6:	b5b0      	push	{r4, r5, r7, lr}
 80117e8:	b082      	sub	sp, #8
 80117ea:	af00      	add	r7, sp, #0
 80117ec:	6078      	str	r0, [r7, #4]
 80117ee:	6039      	str	r1, [r7, #0]
 80117f0:	687b      	ldr	r3, [r7, #4]
 80117f2:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 80117f4:	4618      	mov	r0, r3
 80117f6:	f000 f86a 	bl	80118ce <_ZSt7forwardIRNSt8__detail9__variant15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>
 80117fa:	4604      	mov	r4, r0
 80117fc:	6838      	ldr	r0, [r7, #0]
 80117fe:	f7f3 fbf3 	bl	8004fe8 <_ZSt7forwardIRKfEOT_RNSt16remove_referenceIS2_E4typeE>
 8011802:	4603      	mov	r3, r0
 8011804:	4619      	mov	r1, r3
 8011806:	4620      	mov	r0, r4
 8011808:	f000 f8b9 	bl	801197e <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEERKfEEvOT_OT0_>
	  return {};
 801180c:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 801180e:	4618      	mov	r0, r3
 8011810:	3708      	adds	r7, #8
 8011812:	46bd      	mov	sp, r7
 8011814:	bdb0      	pop	{r4, r5, r7, pc}

08011816 <_ZZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS7_ifbEEERKS9_EEvOT0_OT1_ENUlOT_E_clIRKbEENS0_16__variant_cookieESI_>:
 8011816:	b5b0      	push	{r4, r5, r7, lr}
 8011818:	b082      	sub	sp, #8
 801181a:	af00      	add	r7, sp, #0
 801181c:	6078      	str	r0, [r7, #4]
 801181e:	6039      	str	r1, [r7, #0]
 8011820:	687b      	ldr	r3, [r7, #4]
 8011822:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 8011824:	4618      	mov	r0, r3
 8011826:	f000 f852 	bl	80118ce <_ZSt7forwardIRNSt8__detail9__variant15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>
 801182a:	4604      	mov	r4, r0
 801182c:	6838      	ldr	r0, [r7, #0]
 801182e:	f7f3 fc04 	bl	800503a <_ZSt7forwardIRKbEOT_RNSt16remove_referenceIS2_E4typeE>
 8011832:	4603      	mov	r3, r0
 8011834:	4619      	mov	r1, r3
 8011836:	4620      	mov	r0, r4
 8011838:	f000 f8bb 	bl	80119b2 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEERKbEEvOT_OT0_>
	  return {};
 801183c:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 801183e:	4618      	mov	r0, r3
 8011840:	3708      	adds	r7, #8
 8011842:	46bd      	mov	sp, r7
 8011844:	bdb0      	pop	{r4, r5, r7, pc}

08011846 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvENUlOT_E_clIRS7_EENS0_16__variant_cookieESA_>:
	__do_visit([](auto&& __this_mem) mutable
 8011846:	b590      	push	{r4, r7, lr}
 8011848:	b083      	sub	sp, #12
 801184a:	af00      	add	r7, sp, #0
 801184c:	6078      	str	r0, [r7, #4]
 801184e:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 8011850:	6838      	ldr	r0, [r7, #0]
 8011852:	f7f6 ff32 	bl	80086ba <_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_>
 8011856:	4603      	mov	r3, r0
 8011858:	4618      	mov	r0, r3
 801185a:	f7f6 ff39 	bl	80086d0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_>
	    return {};
 801185e:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 8011860:	4618      	mov	r0, r3
 8011862:	370c      	adds	r7, #12
 8011864:	46bd      	mov	sp, r7
 8011866:	bd90      	pop	{r4, r7, pc}

08011868 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvENUlOT_E_clIRiEENS0_16__variant_cookieESA_>:
 8011868:	b590      	push	{r4, r7, lr}
 801186a:	b083      	sub	sp, #12
 801186c:	af00      	add	r7, sp, #0
 801186e:	6078      	str	r0, [r7, #4]
 8011870:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 8011872:	6838      	ldr	r0, [r7, #0]
 8011874:	f7f6 fee2 	bl	800863c <_ZSt11__addressofIiEPT_RS0_>
 8011878:	4603      	mov	r3, r0
 801187a:	4618      	mov	r0, r3
 801187c:	f7f6 fee9 	bl	8008652 <_ZSt8_DestroyIiEvPT_>
	    return {};
 8011880:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 8011882:	4618      	mov	r0, r3
 8011884:	370c      	adds	r7, #12
 8011886:	46bd      	mov	sp, r7
 8011888:	bd90      	pop	{r4, r7, pc}

0801188a <_ZZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvENUlOT_E_clIRfEENS0_16__variant_cookieESA_>:
 801188a:	b590      	push	{r4, r7, lr}
 801188c:	b083      	sub	sp, #12
 801188e:	af00      	add	r7, sp, #0
 8011890:	6078      	str	r0, [r7, #4]
 8011892:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 8011894:	6838      	ldr	r0, [r7, #0]
 8011896:	f7f6 fee6 	bl	8008666 <_ZSt11__addressofIfEPT_RS0_>
 801189a:	4603      	mov	r3, r0
 801189c:	4618      	mov	r0, r3
 801189e:	f7f6 feed 	bl	800867c <_ZSt8_DestroyIfEvPT_>
	    return {};
 80118a2:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 80118a4:	4618      	mov	r0, r3
 80118a6:	370c      	adds	r7, #12
 80118a8:	46bd      	mov	sp, r7
 80118aa:	bd90      	pop	{r4, r7, pc}

080118ac <_ZZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvENUlOT_E_clIRbEENS0_16__variant_cookieESA_>:
 80118ac:	b590      	push	{r4, r7, lr}
 80118ae:	b083      	sub	sp, #12
 80118b0:	af00      	add	r7, sp, #0
 80118b2:	6078      	str	r0, [r7, #4]
 80118b4:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 80118b6:	6838      	ldr	r0, [r7, #0]
 80118b8:	f7f6 feea 	bl	8008690 <_ZSt11__addressofIbEPT_RS0_>
 80118bc:	4603      	mov	r3, r0
 80118be:	4618      	mov	r0, r3
 80118c0:	f7f6 fef1 	bl	80086a6 <_ZSt8_DestroyIbEvPT_>
	    return {};
 80118c4:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 80118c6:	4618      	mov	r0, r3
 80118c8:	370c      	adds	r7, #12
 80118ca:	46bd      	mov	sp, r7
 80118cc:	bd90      	pop	{r4, r7, pc}

080118ce <_ZSt7forwardIRNSt8__detail9__variant15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80118ce:	b480      	push	{r7}
 80118d0:	b083      	sub	sp, #12
 80118d2:	af00      	add	r7, sp, #0
 80118d4:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80118d6:	687b      	ldr	r3, [r7, #4]
 80118d8:	4618      	mov	r0, r3
 80118da:	370c      	adds	r7, #12
 80118dc:	46bd      	mov	sp, r7
 80118de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80118e2:	4770      	bx	lr

080118e4 <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEPT_RSA_>:
    addressof(_Tp& __r) noexcept
 80118e4:	b580      	push	{r7, lr}
 80118e6:	b082      	sub	sp, #8
 80118e8:	af00      	add	r7, sp, #0
 80118ea:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 80118ec:	6878      	ldr	r0, [r7, #4]
 80118ee:	f000 f805 	bl	80118fc <_ZSt11__addressofINSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEPT_RSA_>
 80118f2:	4603      	mov	r3, r0
 80118f4:	4618      	mov	r0, r3
 80118f6:	3708      	adds	r7, #8
 80118f8:	46bd      	mov	sp, r7
 80118fa:	bd80      	pop	{r7, pc}

080118fc <_ZSt11__addressofINSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEPT_RSA_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 80118fc:	b480      	push	{r7}
 80118fe:	b083      	sub	sp, #12
 8011900:	af00      	add	r7, sp, #0
 8011902:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 8011904:	687b      	ldr	r3, [r7, #4]
 8011906:	4618      	mov	r0, r3
 8011908:	370c      	adds	r7, #12
 801190a:	46bd      	mov	sp, r7
 801190c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011910:	4770      	bx	lr

08011912 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEERKS8_EEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 8011912:	b590      	push	{r4, r7, lr}
 8011914:	b085      	sub	sp, #20
 8011916:	af00      	add	r7, sp, #0
 8011918:	6078      	str	r0, [r7, #4]
 801191a:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 801191c:	687b      	ldr	r3, [r7, #4]
 801191e:	4618      	mov	r0, r3
 8011920:	f7ff ffe0 	bl	80118e4 <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEPT_RSA_>
 8011924:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 8011926:	6838      	ldr	r0, [r7, #0]
 8011928:	f7f3 fbbc 	bl	80050a4 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 801192c:	4604      	mov	r4, r0
        ::new (__storage)
 801192e:	68fb      	ldr	r3, [r7, #12]
 8011930:	4619      	mov	r1, r3
 8011932:	2018      	movs	r0, #24
 8011934:	f7ef fb91 	bl	800105a <_ZnwjPv>
 8011938:	4603      	mov	r3, r0
 801193a:	4621      	mov	r1, r4
 801193c:	4618      	mov	r0, r3
 801193e:	f012 fa4b 	bl	8023dd8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
    }
 8011942:	bf00      	nop
 8011944:	3714      	adds	r7, #20
 8011946:	46bd      	mov	sp, r7
 8011948:	bd90      	pop	{r4, r7, pc}

0801194a <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEERKiEEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 801194a:	b590      	push	{r4, r7, lr}
 801194c:	b085      	sub	sp, #20
 801194e:	af00      	add	r7, sp, #0
 8011950:	6078      	str	r0, [r7, #4]
 8011952:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 8011954:	687b      	ldr	r3, [r7, #4]
 8011956:	4618      	mov	r0, r3
 8011958:	f7ff ffc4 	bl	80118e4 <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEPT_RSA_>
 801195c:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 801195e:	6838      	ldr	r0, [r7, #0]
 8011960:	f7f3 fb19 	bl	8004f96 <_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE>
 8011964:	4603      	mov	r3, r0
        ::new (__storage)
 8011966:	681c      	ldr	r4, [r3, #0]
 8011968:	68fb      	ldr	r3, [r7, #12]
 801196a:	4619      	mov	r1, r3
 801196c:	2004      	movs	r0, #4
 801196e:	f7ef fb74 	bl	800105a <_ZnwjPv>
 8011972:	4603      	mov	r3, r0
 8011974:	601c      	str	r4, [r3, #0]
    }
 8011976:	bf00      	nop
 8011978:	3714      	adds	r7, #20
 801197a:	46bd      	mov	sp, r7
 801197c:	bd90      	pop	{r4, r7, pc}

0801197e <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEERKfEEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 801197e:	b590      	push	{r4, r7, lr}
 8011980:	b085      	sub	sp, #20
 8011982:	af00      	add	r7, sp, #0
 8011984:	6078      	str	r0, [r7, #4]
 8011986:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 8011988:	687b      	ldr	r3, [r7, #4]
 801198a:	4618      	mov	r0, r3
 801198c:	f7ff ffaa 	bl	80118e4 <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEPT_RSA_>
 8011990:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 8011992:	6838      	ldr	r0, [r7, #0]
 8011994:	f7f3 fb28 	bl	8004fe8 <_ZSt7forwardIRKfEOT_RNSt16remove_referenceIS2_E4typeE>
 8011998:	4603      	mov	r3, r0
        ::new (__storage)
 801199a:	681c      	ldr	r4, [r3, #0]
 801199c:	68fb      	ldr	r3, [r7, #12]
 801199e:	4619      	mov	r1, r3
 80119a0:	2004      	movs	r0, #4
 80119a2:	f7ef fb5a 	bl	800105a <_ZnwjPv>
 80119a6:	4603      	mov	r3, r0
 80119a8:	601c      	str	r4, [r3, #0]
    }
 80119aa:	bf00      	nop
 80119ac:	3714      	adds	r7, #20
 80119ae:	46bd      	mov	sp, r7
 80119b0:	bd90      	pop	{r4, r7, pc}

080119b2 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEERKbEEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 80119b2:	b590      	push	{r4, r7, lr}
 80119b4:	b085      	sub	sp, #20
 80119b6:	af00      	add	r7, sp, #0
 80119b8:	6078      	str	r0, [r7, #4]
 80119ba:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 80119bc:	687b      	ldr	r3, [r7, #4]
 80119be:	4618      	mov	r0, r3
 80119c0:	f7ff ff90 	bl	80118e4 <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEPT_RSA_>
 80119c4:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 80119c6:	6838      	ldr	r0, [r7, #0]
 80119c8:	f7f3 fb37 	bl	800503a <_ZSt7forwardIRKbEOT_RNSt16remove_referenceIS2_E4typeE>
 80119cc:	4603      	mov	r3, r0
        ::new (__storage)
 80119ce:	781c      	ldrb	r4, [r3, #0]
 80119d0:	68fb      	ldr	r3, [r7, #12]
 80119d2:	4619      	mov	r1, r3
 80119d4:	2001      	movs	r0, #1
 80119d6:	f7ef fb40 	bl	800105a <_ZnwjPv>
 80119da:	4603      	mov	r3, r0
 80119dc:	4622      	mov	r2, r4
 80119de:	701a      	strb	r2, [r3, #0]
    }
 80119e0:	bf00      	nop
 80119e2:	3714      	adds	r7, #20
 80119e4:	46bd      	mov	sp, r7
 80119e6:	bd90      	pop	{r4, r7, pc}

080119e8 <_Z41__static_initialization_and_destruction_0ii>:
 80119e8:	b590      	push	{r4, r7, lr}
 80119ea:	b0e7      	sub	sp, #412	; 0x19c
 80119ec:	af02      	add	r7, sp, #8
 80119ee:	1d3b      	adds	r3, r7, #4
 80119f0:	6018      	str	r0, [r3, #0]
 80119f2:	463b      	mov	r3, r7
 80119f4:	6019      	str	r1, [r3, #0]
 80119f6:	1d3b      	adds	r3, r7, #4
 80119f8:	681b      	ldr	r3, [r3, #0]
 80119fa:	2b01      	cmp	r3, #1
 80119fc:	f040 819d 	bne.w	8011d3a <_Z41__static_initialization_and_destruction_0ii+0x352>
 8011a00:	463b      	mov	r3, r7
 8011a02:	681b      	ldr	r3, [r3, #0]
 8011a04:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8011a08:	4293      	cmp	r3, r2
 8011a0a:	f040 8196 	bne.w	8011d3a <_Z41__static_initialization_and_destruction_0ii+0x352>
};
 8011a0e:	f107 0314 	add.w	r3, r7, #20
 8011a12:	4618      	mov	r0, r3
 8011a14:	2322      	movs	r3, #34	; 0x22
 8011a16:	461a      	mov	r2, r3
 8011a18:	2100      	movs	r1, #0
 8011a1a:	f013 fa41 	bl	8024ea0 <memset>
 8011a1e:	f107 0314 	add.w	r3, r7, #20
 8011a22:	223a      	movs	r2, #58	; 0x3a
 8011a24:	701a      	strb	r2, [r3, #0]
 8011a26:	f107 0314 	add.w	r3, r7, #20
 8011a2a:	2201      	movs	r2, #1
 8011a2c:	705a      	strb	r2, [r3, #1]
 8011a2e:	f107 0314 	add.w	r3, r7, #20
 8011a32:	220a      	movs	r2, #10
 8011a34:	709a      	strb	r2, [r3, #2]
 8011a36:	f107 0314 	add.w	r3, r7, #20
 8011a3a:	220a      	movs	r2, #10
 8011a3c:	70da      	strb	r2, [r3, #3]
 8011a3e:	f107 0314 	add.w	r3, r7, #20
 8011a42:	222c      	movs	r2, #44	; 0x2c
 8011a44:	711a      	strb	r2, [r3, #4]
 8011a46:	f107 0314 	add.w	r3, r7, #20
 8011a4a:	220c      	movs	r2, #12
 8011a4c:	715a      	strb	r2, [r3, #5]
 8011a4e:	f107 0314 	add.w	r3, r7, #20
 8011a52:	222e      	movs	r2, #46	; 0x2e
 8011a54:	719a      	strb	r2, [r3, #6]
 8011a56:	f107 0314 	add.w	r3, r7, #20
 8011a5a:	220b      	movs	r2, #11
 8011a5c:	71da      	strb	r2, [r3, #7]
 8011a5e:	f107 0314 	add.w	r3, r7, #20
 8011a62:	225b      	movs	r2, #91	; 0x5b
 8011a64:	721a      	strb	r2, [r3, #8]
 8011a66:	f107 0314 	add.w	r3, r7, #20
 8011a6a:	220d      	movs	r2, #13
 8011a6c:	725a      	strb	r2, [r3, #9]
 8011a6e:	f107 0314 	add.w	r3, r7, #20
 8011a72:	225d      	movs	r2, #93	; 0x5d
 8011a74:	729a      	strb	r2, [r3, #10]
 8011a76:	f107 0314 	add.w	r3, r7, #20
 8011a7a:	220e      	movs	r2, #14
 8011a7c:	72da      	strb	r2, [r3, #11]
 8011a7e:	f107 0314 	add.w	r3, r7, #20
 8011a82:	227c      	movs	r2, #124	; 0x7c
 8011a84:	731a      	strb	r2, [r3, #12]
 8011a86:	f107 0314 	add.w	r3, r7, #20
 8011a8a:	2215      	movs	r2, #21
 8011a8c:	735a      	strb	r2, [r3, #13]
 8011a8e:	f107 0314 	add.w	r3, r7, #20
 8011a92:	2226      	movs	r2, #38	; 0x26
 8011a94:	739a      	strb	r2, [r3, #14]
 8011a96:	f107 0314 	add.w	r3, r7, #20
 8011a9a:	2216      	movs	r2, #22
 8011a9c:	73da      	strb	r2, [r3, #15]
 8011a9e:	f107 0314 	add.w	r3, r7, #20
 8011aa2:	222b      	movs	r2, #43	; 0x2b
 8011aa4:	741a      	strb	r2, [r3, #16]
 8011aa6:	f107 0314 	add.w	r3, r7, #20
 8011aaa:	221f      	movs	r2, #31
 8011aac:	745a      	strb	r2, [r3, #17]
 8011aae:	f107 0314 	add.w	r3, r7, #20
 8011ab2:	222d      	movs	r2, #45	; 0x2d
 8011ab4:	749a      	strb	r2, [r3, #18]
 8011ab6:	f107 0314 	add.w	r3, r7, #20
 8011aba:	2220      	movs	r2, #32
 8011abc:	74da      	strb	r2, [r3, #19]
 8011abe:	f107 0314 	add.w	r3, r7, #20
 8011ac2:	222a      	movs	r2, #42	; 0x2a
 8011ac4:	751a      	strb	r2, [r3, #20]
 8011ac6:	f107 0314 	add.w	r3, r7, #20
 8011aca:	2221      	movs	r2, #33	; 0x21
 8011acc:	755a      	strb	r2, [r3, #21]
 8011ace:	f107 0314 	add.w	r3, r7, #20
 8011ad2:	222f      	movs	r2, #47	; 0x2f
 8011ad4:	759a      	strb	r2, [r3, #22]
 8011ad6:	f107 0314 	add.w	r3, r7, #20
 8011ada:	2222      	movs	r2, #34	; 0x22
 8011adc:	75da      	strb	r2, [r3, #23]
 8011ade:	f107 0314 	add.w	r3, r7, #20
 8011ae2:	225e      	movs	r2, #94	; 0x5e
 8011ae4:	761a      	strb	r2, [r3, #24]
 8011ae6:	f107 0314 	add.w	r3, r7, #20
 8011aea:	2223      	movs	r2, #35	; 0x23
 8011aec:	765a      	strb	r2, [r3, #25]
 8011aee:	f107 0314 	add.w	r3, r7, #20
 8011af2:	2225      	movs	r2, #37	; 0x25
 8011af4:	769a      	strb	r2, [r3, #26]
 8011af6:	f107 0314 	add.w	r3, r7, #20
 8011afa:	2224      	movs	r2, #36	; 0x24
 8011afc:	76da      	strb	r2, [r3, #27]
 8011afe:	f107 0314 	add.w	r3, r7, #20
 8011b02:	2228      	movs	r2, #40	; 0x28
 8011b04:	771a      	strb	r2, [r3, #28]
 8011b06:	f107 0314 	add.w	r3, r7, #20
 8011b0a:	2226      	movs	r2, #38	; 0x26
 8011b0c:	775a      	strb	r2, [r3, #29]
 8011b0e:	f107 0314 	add.w	r3, r7, #20
 8011b12:	2229      	movs	r2, #41	; 0x29
 8011b14:	779a      	strb	r2, [r3, #30]
 8011b16:	f107 0314 	add.w	r3, r7, #20
 8011b1a:	2227      	movs	r2, #39	; 0x27
 8011b1c:	77da      	strb	r2, [r3, #31]
 8011b1e:	f107 0314 	add.w	r3, r7, #20
 8011b22:	2225      	movs	r2, #37	; 0x25
 8011b24:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8011b28:	f107 030c 	add.w	r3, r7, #12
 8011b2c:	f107 0214 	add.w	r2, r7, #20
 8011b30:	601a      	str	r2, [r3, #0]
 8011b32:	f107 030c 	add.w	r3, r7, #12
 8011b36:	2211      	movs	r2, #17
 8011b38:	605a      	str	r2, [r3, #4]
 8011b3a:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8011b3e:	4618      	mov	r0, r3
 8011b40:	f7f0 f8d0 	bl	8001ce4 <_ZNSaISt4pairIKc10token_typeEEC1Ev>
 8011b44:	f107 0138 	add.w	r1, r7, #56	; 0x38
 8011b48:	f107 020c 	add.w	r2, r7, #12
 8011b4c:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8011b50:	9300      	str	r3, [sp, #0]
 8011b52:	460b      	mov	r3, r1
 8011b54:	ca06      	ldmia	r2, {r1, r2}
 8011b56:	4885      	ldr	r0, [pc, #532]	; (8011d6c <_Z41__static_initialization_and_destruction_0ii+0x384>)
 8011b58:	f7f0 f8dc 	bl	8001d14 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 8011b5c:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8011b60:	4618      	mov	r0, r3
 8011b62:	f7f0 f8cb 	bl	8001cfc <_ZNSaISt4pairIKc10token_typeEED1Ev>
	{"true", TOKEN_TRUE},
 8011b66:	2305      	movs	r3, #5
 8011b68:	f887 3162 	strb.w	r3, [r7, #354]	; 0x162
};
 8011b6c:	f507 72b1 	add.w	r2, r7, #354	; 0x162
 8011b70:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8011b74:	497e      	ldr	r1, [pc, #504]	; (8011d70 <_Z41__static_initialization_and_destruction_0ii+0x388>)
 8011b76:	4618      	mov	r0, r3
 8011b78:	f7ef fabe 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"false", TOKEN_FALSE},
 8011b7c:	2306      	movs	r3, #6
 8011b7e:	f887 3163 	strb.w	r3, [r7, #355]	; 0x163
};
 8011b82:	f207 1263 	addw	r2, r7, #355	; 0x163
 8011b86:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8011b8a:	331c      	adds	r3, #28
 8011b8c:	4979      	ldr	r1, [pc, #484]	; (8011d74 <_Z41__static_initialization_and_destruction_0ii+0x38c>)
 8011b8e:	4618      	mov	r0, r3
 8011b90:	f7ef fada 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"setup", TOKEN_SETUP},
 8011b94:	2307      	movs	r3, #7
 8011b96:	f887 3164 	strb.w	r3, [r7, #356]	; 0x164
};
 8011b9a:	f507 72b2 	add.w	r2, r7, #356	; 0x164
 8011b9e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8011ba2:	3338      	adds	r3, #56	; 0x38
 8011ba4:	4974      	ldr	r1, [pc, #464]	; (8011d78 <_Z41__static_initialization_and_destruction_0ii+0x390>)
 8011ba6:	4618      	mov	r0, r3
 8011ba8:	f7ef face 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"loop", TOKEN_LOOP},
 8011bac:	2308      	movs	r3, #8
 8011bae:	f887 3165 	strb.w	r3, [r7, #357]	; 0x165
};
 8011bb2:	f207 1265 	addw	r2, r7, #357	; 0x165
 8011bb6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8011bba:	3354      	adds	r3, #84	; 0x54
 8011bbc:	496f      	ldr	r1, [pc, #444]	; (8011d7c <_Z41__static_initialization_and_destruction_0ii+0x394>)
 8011bbe:	4618      	mov	r0, r3
 8011bc0:	f7ef fa9a 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"finish", TOKEN_FINISH},
 8011bc4:	2309      	movs	r3, #9
 8011bc6:	f887 3166 	strb.w	r3, [r7, #358]	; 0x166
};
 8011bca:	f507 72b3 	add.w	r2, r7, #358	; 0x166
 8011bce:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8011bd2:	3370      	adds	r3, #112	; 0x70
 8011bd4:	496a      	ldr	r1, [pc, #424]	; (8011d80 <_Z41__static_initialization_and_destruction_0ii+0x398>)
 8011bd6:	4618      	mov	r0, r3
 8011bd8:	f7ef fade 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"if", TOKEN_IF},
 8011bdc:	2310      	movs	r3, #16
 8011bde:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167
};
 8011be2:	f207 1267 	addw	r2, r7, #359	; 0x167
 8011be6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8011bea:	338c      	adds	r3, #140	; 0x8c
 8011bec:	4965      	ldr	r1, [pc, #404]	; (8011d84 <_Z41__static_initialization_and_destruction_0ii+0x39c>)
 8011bee:	4618      	mov	r0, r3
 8011bf0:	f7ef fafa 	bl	80011e8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>
	{"elseif", TOKEN_ELSEIF},
 8011bf4:	2311      	movs	r3, #17
 8011bf6:	f887 3168 	strb.w	r3, [r7, #360]	; 0x168
};
 8011bfa:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 8011bfe:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8011c02:	33a8      	adds	r3, #168	; 0xa8
 8011c04:	4960      	ldr	r1, [pc, #384]	; (8011d88 <_Z41__static_initialization_and_destruction_0ii+0x3a0>)
 8011c06:	4618      	mov	r0, r3
 8011c08:	f7ef fac6 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"else", TOKEN_ELSE},
 8011c0c:	2312      	movs	r3, #18
 8011c0e:	f887 3169 	strb.w	r3, [r7, #361]	; 0x169
};
 8011c12:	f207 1269 	addw	r2, r7, #361	; 0x169
 8011c16:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8011c1a:	33c4      	adds	r3, #196	; 0xc4
 8011c1c:	495b      	ldr	r1, [pc, #364]	; (8011d8c <_Z41__static_initialization_and_destruction_0ii+0x3a4>)
 8011c1e:	4618      	mov	r0, r3
 8011c20:	f7ef fa6a 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"while", TOKEN_WHILE},
 8011c24:	2313      	movs	r3, #19
 8011c26:	f887 316a 	strb.w	r3, [r7, #362]	; 0x16a
};
 8011c2a:	f507 72b5 	add.w	r2, r7, #362	; 0x16a
 8011c2e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8011c32:	33e0      	adds	r3, #224	; 0xe0
 8011c34:	4956      	ldr	r1, [pc, #344]	; (8011d90 <_Z41__static_initialization_and_destruction_0ii+0x3a8>)
 8011c36:	4618      	mov	r0, r3
 8011c38:	f7ef fa86 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"end", TOKEN_END},
 8011c3c:	2314      	movs	r3, #20
 8011c3e:	f887 316b 	strb.w	r3, [r7, #363]	; 0x16b
};
 8011c42:	f207 126b 	addw	r2, r7, #363	; 0x16b
 8011c46:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8011c4a:	33fc      	adds	r3, #252	; 0xfc
 8011c4c:	4951      	ldr	r1, [pc, #324]	; (8011d94 <_Z41__static_initialization_and_destruction_0ii+0x3ac>)
 8011c4e:	4618      	mov	r0, r3
 8011c50:	f7ef faf2 	bl	8001238 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>
 8011c54:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8011c58:	f107 0248 	add.w	r2, r7, #72	; 0x48
 8011c5c:	601a      	str	r2, [r3, #0]
 8011c5e:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8011c62:	220a      	movs	r2, #10
 8011c64:	605a      	str	r2, [r3, #4]
 8011c66:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8011c6a:	4618      	mov	r0, r3
 8011c6c:	f7f0 f8df 	bl	8001e2e <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 8011c70:	f507 71b6 	add.w	r1, r7, #364	; 0x16c
 8011c74:	f107 0240 	add.w	r2, r7, #64	; 0x40
 8011c78:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8011c7c:	9300      	str	r3, [sp, #0]
 8011c7e:	460b      	mov	r3, r1
 8011c80:	ca06      	ldmia	r2, {r1, r2}
 8011c82:	4845      	ldr	r0, [pc, #276]	; (8011d98 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 8011c84:	f7f0 f8eb 	bl	8001e5e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>
 8011c88:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8011c8c:	4618      	mov	r0, r3
 8011c8e:	f7f0 f8da 	bl	8001e46 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 8011c92:	f107 0448 	add.w	r4, r7, #72	; 0x48
 8011c96:	f504 748c 	add.w	r4, r4, #280	; 0x118
 8011c9a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8011c9e:	429c      	cmp	r4, r3
 8011ca0:	d004      	beq.n	8011cac <_Z41__static_initialization_and_destruction_0ii+0x2c4>
 8011ca2:	3c1c      	subs	r4, #28
 8011ca4:	4620      	mov	r0, r4
 8011ca6:	f7ef fa1a 	bl	80010de <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 8011caa:	e7f6      	b.n	8011c9a <_Z41__static_initialization_and_destruction_0ii+0x2b2>
};
 8011cac:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 8011cb0:	2200      	movs	r2, #0
 8011cb2:	601a      	str	r2, [r3, #0]
 8011cb4:	605a      	str	r2, [r3, #4]
 8011cb6:	609a      	str	r2, [r3, #8]
 8011cb8:	233c      	movs	r3, #60	; 0x3c
 8011cba:	f887 317c 	strb.w	r3, [r7, #380]	; 0x17c
 8011cbe:	231b      	movs	r3, #27
 8011cc0:	f887 317d 	strb.w	r3, [r7, #381]	; 0x17d
 8011cc4:	231c      	movs	r3, #28
 8011cc6:	f887 317e 	strb.w	r3, [r7, #382]	; 0x17e
 8011cca:	233e      	movs	r3, #62	; 0x3e
 8011ccc:	f887 317f 	strb.w	r3, [r7, #383]	; 0x17f
 8011cd0:	2319      	movs	r3, #25
 8011cd2:	f887 3180 	strb.w	r3, [r7, #384]	; 0x180
 8011cd6:	231a      	movs	r3, #26
 8011cd8:	f887 3181 	strb.w	r3, [r7, #385]	; 0x181
 8011cdc:	233d      	movs	r3, #61	; 0x3d
 8011cde:	f887 3182 	strb.w	r3, [r7, #386]	; 0x182
 8011ce2:	2318      	movs	r3, #24
 8011ce4:	f887 3183 	strb.w	r3, [r7, #387]	; 0x183
 8011ce8:	231d      	movs	r3, #29
 8011cea:	f887 3184 	strb.w	r3, [r7, #388]	; 0x184
 8011cee:	2321      	movs	r3, #33	; 0x21
 8011cf0:	f887 3185 	strb.w	r3, [r7, #389]	; 0x185
 8011cf4:	2317      	movs	r3, #23
 8011cf6:	f887 3186 	strb.w	r3, [r7, #390]	; 0x186
 8011cfa:	231e      	movs	r3, #30
 8011cfc:	f887 3187 	strb.w	r3, [r7, #391]	; 0x187
 8011d00:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 8011d04:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 8011d08:	2304      	movs	r3, #4
 8011d0a:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 8011d0e:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 8011d12:	4618      	mov	r0, r3
 8011d14:	f7f0 f8d3 	bl	8001ebe <_ZNSaISt4pairIKc12double_tokenEEC1Ev>
 8011d18:	f507 72c4 	add.w	r2, r7, #392	; 0x188
 8011d1c:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 8011d20:	9300      	str	r3, [sp, #0]
 8011d22:	4613      	mov	r3, r2
 8011d24:	f507 72ba 	add.w	r2, r7, #372	; 0x174
 8011d28:	ca06      	ldmia	r2, {r1, r2}
 8011d2a:	481c      	ldr	r0, [pc, #112]	; (8011d9c <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 8011d2c:	f7f0 f8df 	bl	8001eee <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 8011d30:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 8011d34:	4618      	mov	r0, r3
 8011d36:	f7f0 f8ce 	bl	8001ed6 <_ZNSaISt4pairIKc12double_tokenEED1Ev>
static const std::map<char, double_token> token_double_chars
 8011d3a:	1d3b      	adds	r3, r7, #4
 8011d3c:	681b      	ldr	r3, [r3, #0]
 8011d3e:	2b00      	cmp	r3, #0
 8011d40:	d10e      	bne.n	8011d60 <_Z41__static_initialization_and_destruction_0ii+0x378>
 8011d42:	463b      	mov	r3, r7
 8011d44:	681b      	ldr	r3, [r3, #0]
 8011d46:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8011d4a:	4293      	cmp	r3, r2
 8011d4c:	d108      	bne.n	8011d60 <_Z41__static_initialization_and_destruction_0ii+0x378>
 8011d4e:	4813      	ldr	r0, [pc, #76]	; (8011d9c <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 8011d50:	f7f7 fd98 	bl	8009884 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>
static const std::map<std::string, token_type> token_strings
 8011d54:	4810      	ldr	r0, [pc, #64]	; (8011d98 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 8011d56:	f7f7 fda2 	bl	800989e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
static const std::map<char, token_type> token_chars
 8011d5a:	4804      	ldr	r0, [pc, #16]	; (8011d6c <_Z41__static_initialization_and_destruction_0ii+0x384>)
 8011d5c:	f7f7 fdac 	bl	80098b8 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>
 8011d60:	bf00      	nop
 8011d62:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 8011d66:	46bd      	mov	sp, r7
 8011d68:	bd90      	pop	{r4, r7, pc}
 8011d6a:	bf00      	nop
 8011d6c:	20000350 	.word	0x20000350
 8011d70:	08029724 	.word	0x08029724
 8011d74:	0802972c 	.word	0x0802972c
 8011d78:	08029734 	.word	0x08029734
 8011d7c:	0802973c 	.word	0x0802973c
 8011d80:	08029744 	.word	0x08029744
 8011d84:	0802974c 	.word	0x0802974c
 8011d88:	08029750 	.word	0x08029750
 8011d8c:	08029758 	.word	0x08029758
 8011d90:	08029760 	.word	0x08029760
 8011d94:	08029768 	.word	0x08029768
 8011d98:	20000368 	.word	0x20000368
 8011d9c:	20000380 	.word	0x20000380

08011da0 <_GLOBAL__sub_I__ZN5LexerC2Ev>:
 8011da0:	b580      	push	{r7, lr}
 8011da2:	af00      	add	r7, sp, #0
 8011da4:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8011da8:	2001      	movs	r0, #1
 8011daa:	f7ff fe1d 	bl	80119e8 <_Z41__static_initialization_and_destruction_0ii>
 8011dae:	bd80      	pop	{r7, pc}

08011db0 <_GLOBAL__sub_D__ZN5LexerC2Ev>:
 8011db0:	b580      	push	{r7, lr}
 8011db2:	af00      	add	r7, sp, #0
 8011db4:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8011db8:	2000      	movs	r0, #0
 8011dba:	f7ff fe15 	bl	80119e8 <_Z41__static_initialization_and_destruction_0ii>
 8011dbe:	bd80      	pop	{r7, pc}

08011dc0 <_ZNSt7__cxx119to_stringEi>:
  // NB: (v)snprintf vs sprintf.

  // DR 1261.
  inline string
  to_string(int __val)
  { return __gnu_cxx::__to_xstring<string>(&std::vsnprintf, 4 * sizeof(int),
 8011dc0:	b580      	push	{r7, lr}
 8011dc2:	b084      	sub	sp, #16
 8011dc4:	af02      	add	r7, sp, #8
 8011dc6:	6078      	str	r0, [r7, #4]
 8011dc8:	6039      	str	r1, [r7, #0]
					   "%d", __val); }
 8011dca:	6878      	ldr	r0, [r7, #4]
 8011dcc:	683b      	ldr	r3, [r7, #0]
 8011dce:	9300      	str	r3, [sp, #0]
 8011dd0:	4b04      	ldr	r3, [pc, #16]	; (8011de4 <_ZNSt7__cxx119to_stringEi+0x24>)
 8011dd2:	2210      	movs	r2, #16
 8011dd4:	4904      	ldr	r1, [pc, #16]	; (8011de8 <_ZNSt7__cxx119to_stringEi+0x28>)
 8011dd6:	f000 fa69 	bl	80122ac <_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_jPKS8_St9__va_listEjSB_z>
 8011dda:	6878      	ldr	r0, [r7, #4]
 8011ddc:	3708      	adds	r7, #8
 8011dde:	46bd      	mov	sp, r7
 8011de0:	bd80      	pop	{r7, pc}
 8011de2:	bf00      	nop
 8011de4:	0802976c 	.word	0x0802976c
 8011de8:	080267f5 	.word	0x080267f5

08011dec <_ZNSt7__cxx119to_stringEj>:

  inline string
  to_string(unsigned __val)
  { return __gnu_cxx::__to_xstring<string>(&std::vsnprintf,
 8011dec:	b580      	push	{r7, lr}
 8011dee:	b084      	sub	sp, #16
 8011df0:	af02      	add	r7, sp, #8
 8011df2:	6078      	str	r0, [r7, #4]
 8011df4:	6039      	str	r1, [r7, #0]
					   4 * sizeof(unsigned),
					   "%u", __val); }
 8011df6:	6878      	ldr	r0, [r7, #4]
 8011df8:	683b      	ldr	r3, [r7, #0]
 8011dfa:	9300      	str	r3, [sp, #0]
 8011dfc:	4b04      	ldr	r3, [pc, #16]	; (8011e10 <_ZNSt7__cxx119to_stringEj+0x24>)
 8011dfe:	2210      	movs	r2, #16
 8011e00:	4904      	ldr	r1, [pc, #16]	; (8011e14 <_ZNSt7__cxx119to_stringEj+0x28>)
 8011e02:	f000 fa53 	bl	80122ac <_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_jPKS8_St9__va_listEjSB_z>
 8011e06:	6878      	ldr	r0, [r7, #4]
 8011e08:	3708      	adds	r7, #8
 8011e0a:	46bd      	mov	sp, r7
 8011e0c:	bd80      	pop	{r7, pc}
 8011e0e:	bf00      	nop
 8011e10:	08029770 	.word	0x08029770
 8011e14:	080267f5 	.word	0x080267f5

08011e18 <_ZN12_GLOBAL__N_116assert_argumentsEiSt6vectorIP10ExpressionSaIS2_EE>:
namespace
{

// todo dober miejsce
void assert_arguments(int expected, arglist arguments)
{
 8011e18:	b580      	push	{r7, lr}
 8011e1a:	b0a0      	sub	sp, #128	; 0x80
 8011e1c:	af00      	add	r7, sp, #0
 8011e1e:	6078      	str	r0, [r7, #4]
 8011e20:	6039      	str	r1, [r7, #0]
	if(arguments.size() != (unsigned int)expected)
 8011e22:	6838      	ldr	r0, [r7, #0]
 8011e24:	f7f0 fcc3 	bl	80027ae <_ZNKSt6vectorIP10ExpressionSaIS1_EE4sizeEv>
 8011e28:	4602      	mov	r2, r0
 8011e2a:	687b      	ldr	r3, [r7, #4]
 8011e2c:	429a      	cmp	r2, r3
 8011e2e:	bf14      	ite	ne
 8011e30:	2301      	movne	r3, #1
 8011e32:	2300      	moveq	r3, #0
 8011e34:	b2db      	uxtb	r3, r3
 8011e36:	2b00      	cmp	r3, #0
 8011e38:	d046      	beq.n	8011ec8 <_ZN12_GLOBAL__N_116assert_argumentsEiSt6vectorIP10ExpressionSaIS2_EE+0xb0>
	{
		Transmitter::report_error(std::string("expected " + std::to_string(expected) + " arguments, found " + std::to_string(arguments.size())));
 8011e3a:	f107 0350 	add.w	r3, r7, #80	; 0x50
 8011e3e:	6879      	ldr	r1, [r7, #4]
 8011e40:	4618      	mov	r0, r3
 8011e42:	f7ff ffbd 	bl	8011dc0 <_ZNSt7__cxx119to_stringEi>
 8011e46:	f107 0338 	add.w	r3, r7, #56	; 0x38
 8011e4a:	f107 0250 	add.w	r2, r7, #80	; 0x50
 8011e4e:	4920      	ldr	r1, [pc, #128]	; (8011ed0 <_ZN12_GLOBAL__N_116assert_argumentsEiSt6vectorIP10ExpressionSaIS2_EE+0xb8>)
 8011e50:	4618      	mov	r0, r3
 8011e52:	f000 fa63 	bl	801231c <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_>
 8011e56:	f107 0320 	add.w	r3, r7, #32
 8011e5a:	f107 0138 	add.w	r1, r7, #56	; 0x38
 8011e5e:	4a1d      	ldr	r2, [pc, #116]	; (8011ed4 <_ZN12_GLOBAL__N_116assert_argumentsEiSt6vectorIP10ExpressionSaIS2_EE+0xbc>)
 8011e60:	4618      	mov	r0, r3
 8011e62:	f7fc fa4f 	bl	800e304 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_>
 8011e66:	6838      	ldr	r0, [r7, #0]
 8011e68:	f7f0 fca1 	bl	80027ae <_ZNKSt6vectorIP10ExpressionSaIS1_EE4sizeEv>
 8011e6c:	4602      	mov	r2, r0
 8011e6e:	f107 0368 	add.w	r3, r7, #104	; 0x68
 8011e72:	4611      	mov	r1, r2
 8011e74:	4618      	mov	r0, r3
 8011e76:	f7ff ffb9 	bl	8011dec <_ZNSt7__cxx119to_stringEj>
 8011e7a:	f107 0308 	add.w	r3, r7, #8
 8011e7e:	f107 0268 	add.w	r2, r7, #104	; 0x68
 8011e82:	f107 0120 	add.w	r1, r7, #32
 8011e86:	4618      	mov	r0, r3
 8011e88:	f000 fa60 	bl	801234c <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_>
 8011e8c:	f107 0308 	add.w	r3, r7, #8
 8011e90:	4618      	mov	r0, r3
 8011e92:	f006 feb5 	bl	8018c00 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8011e96:	f107 0308 	add.w	r3, r7, #8
 8011e9a:	4618      	mov	r0, r3
 8011e9c:	f011 fdcd 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8011ea0:	f107 0368 	add.w	r3, r7, #104	; 0x68
 8011ea4:	4618      	mov	r0, r3
 8011ea6:	f011 fdc8 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8011eaa:	f107 0320 	add.w	r3, r7, #32
 8011eae:	4618      	mov	r0, r3
 8011eb0:	f011 fdc3 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8011eb4:	f107 0338 	add.w	r3, r7, #56	; 0x38
 8011eb8:	4618      	mov	r0, r3
 8011eba:	f011 fdbe 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8011ebe:	f107 0350 	add.w	r3, r7, #80	; 0x50
 8011ec2:	4618      	mov	r0, r3
 8011ec4:	f011 fdb9 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	}
}
 8011ec8:	bf00      	nop
 8011eca:	3780      	adds	r7, #128	; 0x80
 8011ecc:	46bd      	mov	sp, r7
 8011ece:	bd80      	pop	{r7, pc}
 8011ed0:	08029774 	.word	0x08029774
 8011ed4:	08029780 	.word	0x08029780

08011ed8 <_ZN12_GLOBAL__N_16resizeER6SymbolSt6vectorIP10ExpressionSaIS4_EE>:

void resize(Symbol& var, arglist arguments)
{
 8011ed8:	b590      	push	{r4, r7, lr}
 8011eda:	b08f      	sub	sp, #60	; 0x3c
 8011edc:	af00      	add	r7, sp, #0
 8011ede:	6078      	str	r0, [r7, #4]
 8011ee0:	6039      	str	r1, [r7, #0]
	assert_arguments(1, arguments);
 8011ee2:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8011ee6:	6839      	ldr	r1, [r7, #0]
 8011ee8:	4618      	mov	r0, r3
 8011eea:	f7fc f98e 	bl	800e20a <_ZNSt6vectorIP10ExpressionSaIS1_EEC1ERKS3_>
 8011eee:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8011ef2:	4619      	mov	r1, r3
 8011ef4:	2001      	movs	r0, #1
 8011ef6:	f7ff ff8f 	bl	8011e18 <_ZN12_GLOBAL__N_116assert_argumentsEiSt6vectorIP10ExpressionSaIS2_EE>
 8011efa:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8011efe:	4618      	mov	r0, r3
 8011f00:	f7fc f9c0 	bl	800e284 <_ZNSt6vectorIP10ExpressionSaIS1_EED1Ev>
	Symbol size_symbol = EVALUATE(arguments[0]);
 8011f04:	f7fa f8fa 	bl	800c0fc <_ZN21Expression_calculator12get_instanceEv>
 8011f08:	4604      	mov	r4, r0
 8011f0a:	2100      	movs	r1, #0
 8011f0c:	6838      	ldr	r0, [r7, #0]
 8011f0e:	f7f0 fc5e 	bl	80027ce <_ZNSt6vectorIP10ExpressionSaIS1_EEixEj>
 8011f12:	4603      	mov	r3, r0
 8011f14:	681a      	ldr	r2, [r3, #0]
 8011f16:	f107 0308 	add.w	r3, r7, #8
 8011f1a:	4621      	mov	r1, r4
 8011f1c:	4618      	mov	r0, r3
 8011f1e:	f7fa f96b 	bl	800c1f8 <_ZN21Expression_calculator8evaluateEP10Expression>
	size_symbol.assert_type(SYMBOL_INT);
 8011f22:	f107 0308 	add.w	r3, r7, #8
 8011f26:	2100      	movs	r1, #0
 8011f28:	4618      	mov	r0, r3
 8011f2a:	f006 f833 	bl	8017f94 <_ZN6Symbol11assert_typeE11symbol_type>
	int size = std::get<int>(size_symbol.value);
 8011f2e:	f107 0308 	add.w	r3, r7, #8
 8011f32:	3304      	adds	r3, #4
 8011f34:	4618      	mov	r0, r3
 8011f36:	f7f1 f803 	bl	8002f40 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8011f3a:	4603      	mov	r3, r0
 8011f3c:	681b      	ldr	r3, [r3, #0]
 8011f3e:	637b      	str	r3, [r7, #52]	; 0x34
	var.resize(size);
 8011f40:	6b79      	ldr	r1, [r7, #52]	; 0x34
 8011f42:	6878      	ldr	r0, [r7, #4]
 8011f44:	f006 f854 	bl	8017ff0 <_ZN6Symbol6resizeEi>
	Symbol size_symbol = EVALUATE(arguments[0]);
 8011f48:	f107 0308 	add.w	r3, r7, #8
 8011f4c:	4618      	mov	r0, r3
 8011f4e:	f7ef fa25 	bl	800139c <_ZN6SymbolD1Ev>
}
 8011f52:	bf00      	nop
 8011f54:	373c      	adds	r7, #60	; 0x3c
 8011f56:	46bd      	mov	sp, r7
 8011f58:	bd90      	pop	{r4, r7, pc}

08011f5a <_ZN12_GLOBAL__N_15roundER6SymbolSt6vectorIP10ExpressionSaIS4_EE>:

void round(Symbol& var, arglist arguments)
{
 8011f5a:	b580      	push	{r7, lr}
 8011f5c:	b086      	sub	sp, #24
 8011f5e:	af00      	add	r7, sp, #0
 8011f60:	6078      	str	r0, [r7, #4]
 8011f62:	6039      	str	r1, [r7, #0]
	assert_arguments(0, arguments);
 8011f64:	f107 030c 	add.w	r3, r7, #12
 8011f68:	6839      	ldr	r1, [r7, #0]
 8011f6a:	4618      	mov	r0, r3
 8011f6c:	f7fc f94d 	bl	800e20a <_ZNSt6vectorIP10ExpressionSaIS1_EEC1ERKS3_>
 8011f70:	f107 030c 	add.w	r3, r7, #12
 8011f74:	4619      	mov	r1, r3
 8011f76:	2000      	movs	r0, #0
 8011f78:	f7ff ff4e 	bl	8011e18 <_ZN12_GLOBAL__N_116assert_argumentsEiSt6vectorIP10ExpressionSaIS2_EE>
 8011f7c:	f107 030c 	add.w	r3, r7, #12
 8011f80:	4618      	mov	r0, r3
 8011f82:	f7fc f97f 	bl	800e284 <_ZNSt6vectorIP10ExpressionSaIS1_EED1Ev>
	var.round();
 8011f86:	6878      	ldr	r0, [r7, #4]
 8011f88:	f006 f862 	bl	8018050 <_ZN6Symbol5roundEv>
}
 8011f8c:	bf00      	nop
 8011f8e:	3718      	adds	r7, #24
 8011f90:	46bd      	mov	sp, r7
 8011f92:	bd80      	pop	{r7, pc}

08011f94 <_ZN12_GLOBAL__N_18floatifyER6SymbolSt6vectorIP10ExpressionSaIS4_EE>:

void floatify(Symbol& var, arglist arguments)
{
 8011f94:	b580      	push	{r7, lr}
 8011f96:	b086      	sub	sp, #24
 8011f98:	af00      	add	r7, sp, #0
 8011f9a:	6078      	str	r0, [r7, #4]
 8011f9c:	6039      	str	r1, [r7, #0]
	assert_arguments(0, arguments);
 8011f9e:	f107 030c 	add.w	r3, r7, #12
 8011fa2:	6839      	ldr	r1, [r7, #0]
 8011fa4:	4618      	mov	r0, r3
 8011fa6:	f7fc f930 	bl	800e20a <_ZNSt6vectorIP10ExpressionSaIS1_EEC1ERKS3_>
 8011faa:	f107 030c 	add.w	r3, r7, #12
 8011fae:	4619      	mov	r1, r3
 8011fb0:	2000      	movs	r0, #0
 8011fb2:	f7ff ff31 	bl	8011e18 <_ZN12_GLOBAL__N_116assert_argumentsEiSt6vectorIP10ExpressionSaIS2_EE>
 8011fb6:	f107 030c 	add.w	r3, r7, #12
 8011fba:	4618      	mov	r0, r3
 8011fbc:	f7fc f962 	bl	800e284 <_ZNSt6vectorIP10ExpressionSaIS1_EED1Ev>
	var.floatify();
 8011fc0:	6878      	ldr	r0, [r7, #4]
 8011fc2:	f006 f88f 	bl	80180e4 <_ZN6Symbol8floatifyEv>
}
 8011fc6:	bf00      	nop
 8011fc8:	3718      	adds	r7, #24
 8011fca:	46bd      	mov	sp, r7
 8011fcc:	bd80      	pop	{r7, pc}

08011fce <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE13_Rb_tree_implISL_Lb1EED1Ev>:
	struct _Rb_tree_impl
 8011fce:	b580      	push	{r7, lr}
 8011fd0:	b082      	sub	sp, #8
 8011fd2:	af00      	add	r7, sp, #0
 8011fd4:	6078      	str	r0, [r7, #4]
 8011fd6:	6878      	ldr	r0, [r7, #4]
 8011fd8:	f000 fa0e 	bl	80123f8 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEED1Ev>
 8011fdc:	687b      	ldr	r3, [r7, #4]
 8011fde:	4618      	mov	r0, r3
 8011fe0:	3708      	adds	r7, #8
 8011fe2:	46bd      	mov	sp, r7
 8011fe4:	bd80      	pop	{r7, pc}

08011fe6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EEC1Ev>:
      _Rb_tree() = default;
 8011fe6:	b580      	push	{r7, lr}
 8011fe8:	b082      	sub	sp, #8
 8011fea:	af00      	add	r7, sp, #0
 8011fec:	6078      	str	r0, [r7, #4]
 8011fee:	687b      	ldr	r3, [r7, #4]
 8011ff0:	4618      	mov	r0, r3
 8011ff2:	f000 f9ec 	bl	80123ce <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE13_Rb_tree_implISL_Lb1EEC1Ev>
 8011ff6:	687b      	ldr	r3, [r7, #4]
 8011ff8:	4618      	mov	r0, r3
 8011ffa:	3708      	adds	r7, #8
 8011ffc:	46bd      	mov	sp, r7
 8011ffe:	bd80      	pop	{r7, pc}

08012000 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISA_EEESt4lessIS5_ESaISt4pairIKS5_SE_EEEC1Ev>:
      map() = default;
 8012000:	b580      	push	{r7, lr}
 8012002:	b082      	sub	sp, #8
 8012004:	af00      	add	r7, sp, #0
 8012006:	6078      	str	r0, [r7, #4]
 8012008:	687b      	ldr	r3, [r7, #4]
 801200a:	4618      	mov	r0, r3
 801200c:	f7ff ffeb 	bl	8011fe6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EEC1Ev>
 8012010:	687b      	ldr	r3, [r7, #4]
 8012012:	4618      	mov	r0, r3
 8012014:	3708      	adds	r7, #8
 8012016:	46bd      	mov	sp, r7
 8012018:	bd80      	pop	{r7, pc}

0801201a <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISA_EEESt4lessIS5_ESaISt4pairIKS5_SE_EEED1Ev>:
      ~map() = default;
 801201a:	b580      	push	{r7, lr}
 801201c:	b082      	sub	sp, #8
 801201e:	af00      	add	r7, sp, #0
 8012020:	6078      	str	r0, [r7, #4]
 8012022:	687b      	ldr	r3, [r7, #4]
 8012024:	4618      	mov	r0, r3
 8012026:	f000 f9f3 	bl	8012410 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EED1Ev>
 801202a:	687b      	ldr	r3, [r7, #4]
 801202c:	4618      	mov	r0, r3
 801202e:	3708      	adds	r7, #8
 8012030:	46bd      	mov	sp, r7
 8012032:	bd80      	pop	{r7, pc}

08012034 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISB_EEEED1Ev>:
 8012034:	b580      	push	{r7, lr}
 8012036:	b082      	sub	sp, #8
 8012038:	af00      	add	r7, sp, #0
 801203a:	6078      	str	r0, [r7, #4]
 801203c:	687b      	ldr	r3, [r7, #4]
 801203e:	4618      	mov	r0, r3
 8012040:	f011 fcfb 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8012044:	687b      	ldr	r3, [r7, #4]
 8012046:	4618      	mov	r0, r3
 8012048:	3708      	adds	r7, #8
 801204a:	46bd      	mov	sp, r7
 801204c:	bd80      	pop	{r7, pc}
	...

08012050 <_ZN14Method_handlerC1Ev>:

}

Method_handler::Method_handler()
 8012050:	b590      	push	{r4, r7, lr}
 8012052:	b0a1      	sub	sp, #132	; 0x84
 8012054:	af00      	add	r7, sp, #0
 8012056:	6078      	str	r0, [r7, #4]
 8012058:	687b      	ldr	r3, [r7, #4]
 801205a:	4618      	mov	r0, r3
 801205c:	f7ff ffd0 	bl	8012000 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISA_EEESt4lessIS5_ESaISt4pairIKS5_SE_EEEC1Ev>
{
	ADD_METHOD(round);
 8012060:	687c      	ldr	r4, [r7, #4]
 8012062:	4b26      	ldr	r3, [pc, #152]	; (80120fc <_ZN14Method_handlerC1Ev+0xac>)
 8012064:	62fb      	str	r3, [r7, #44]	; 0x2c
 8012066:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 801206a:	f107 0310 	add.w	r3, r7, #16
 801206e:	4924      	ldr	r1, [pc, #144]	; (8012100 <_ZN14Method_handlerC1Ev+0xb0>)
 8012070:	4618      	mov	r0, r3
 8012072:	f000 f9e2 	bl	801243a <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISB_EEEEC1IRA6_KcLb1EEEOT_RKSF_>
 8012076:	f107 0308 	add.w	r3, r7, #8
 801207a:	f107 0210 	add.w	r2, r7, #16
 801207e:	4621      	mov	r1, r4
 8012080:	4618      	mov	r0, r3
 8012082:	f000 f9ff 	bl	8012484 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISA_EEESt4lessIS5_ESaISt4pairIKS5_SE_EEE6insertEOSJ_>
 8012086:	f107 0310 	add.w	r3, r7, #16
 801208a:	4618      	mov	r0, r3
 801208c:	f7ff ffd2 	bl	8012034 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISB_EEEED1Ev>
	ADD_METHOD(floatify);
 8012090:	687c      	ldr	r4, [r7, #4]
 8012092:	4b1c      	ldr	r3, [pc, #112]	; (8012104 <_ZN14Method_handlerC1Ev+0xb4>)
 8012094:	657b      	str	r3, [r7, #84]	; 0x54
 8012096:	f107 0254 	add.w	r2, r7, #84	; 0x54
 801209a:	f107 0338 	add.w	r3, r7, #56	; 0x38
 801209e:	491a      	ldr	r1, [pc, #104]	; (8012108 <_ZN14Method_handlerC1Ev+0xb8>)
 80120a0:	4618      	mov	r0, r3
 80120a2:	f000 fa03 	bl	80124ac <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISB_EEEEC1IRA9_KcSF_Lb1EEEOT_OT0_>
 80120a6:	f107 0330 	add.w	r3, r7, #48	; 0x30
 80120aa:	f107 0238 	add.w	r2, r7, #56	; 0x38
 80120ae:	4621      	mov	r1, r4
 80120b0:	4618      	mov	r0, r3
 80120b2:	f000 f9e7 	bl	8012484 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISA_EEESt4lessIS5_ESaISt4pairIKS5_SE_EEE6insertEOSJ_>
 80120b6:	f107 0338 	add.w	r3, r7, #56	; 0x38
 80120ba:	4618      	mov	r0, r3
 80120bc:	f7ff ffba 	bl	8012034 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISB_EEEED1Ev>
	ADD_METHOD(resize);
 80120c0:	687c      	ldr	r4, [r7, #4]
 80120c2:	4b12      	ldr	r3, [pc, #72]	; (801210c <_ZN14Method_handlerC1Ev+0xbc>)
 80120c4:	67fb      	str	r3, [r7, #124]	; 0x7c
 80120c6:	f107 027c 	add.w	r2, r7, #124	; 0x7c
 80120ca:	f107 0360 	add.w	r3, r7, #96	; 0x60
 80120ce:	4910      	ldr	r1, [pc, #64]	; (8012110 <_ZN14Method_handlerC1Ev+0xc0>)
 80120d0:	4618      	mov	r0, r3
 80120d2:	f000 fa13 	bl	80124fc <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISB_EEEEC1IRA7_KcSF_Lb1EEEOT_OT0_>
 80120d6:	f107 0358 	add.w	r3, r7, #88	; 0x58
 80120da:	f107 0260 	add.w	r2, r7, #96	; 0x60
 80120de:	4621      	mov	r1, r4
 80120e0:	4618      	mov	r0, r3
 80120e2:	f000 f9cf 	bl	8012484 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISA_EEESt4lessIS5_ESaISt4pairIKS5_SE_EEE6insertEOSJ_>
 80120e6:	f107 0360 	add.w	r3, r7, #96	; 0x60
 80120ea:	4618      	mov	r0, r3
 80120ec:	f7ff ffa2 	bl	8012034 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISB_EEEED1Ev>
}
 80120f0:	687b      	ldr	r3, [r7, #4]
 80120f2:	4618      	mov	r0, r3
 80120f4:	3784      	adds	r7, #132	; 0x84
 80120f6:	46bd      	mov	sp, r7
 80120f8:	bd90      	pop	{r4, r7, pc}
 80120fa:	bf00      	nop
 80120fc:	08011f5b 	.word	0x08011f5b
 8012100:	080297a8 	.word	0x080297a8
 8012104:	08011f95 	.word	0x08011f95
 8012108:	080297b0 	.word	0x080297b0
 801210c:	08011ed9 	.word	0x08011ed9
 8012110:	080297bc 	.word	0x080297bc

08012114 <_ZN14Method_handlerD1Ev>:

typedef void (*method_pointer)(Symbol&, arglist);

#define ADD_METHOD(x) methods.insert({#x, &x});

class Method_handler
 8012114:	b580      	push	{r7, lr}
 8012116:	b082      	sub	sp, #8
 8012118:	af00      	add	r7, sp, #0
 801211a:	6078      	str	r0, [r7, #4]
 801211c:	687b      	ldr	r3, [r7, #4]
 801211e:	4618      	mov	r0, r3
 8012120:	f7ff ff7b 	bl	801201a <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISA_EEESt4lessIS5_ESaISt4pairIKS5_SE_EEED1Ev>
 8012124:	687b      	ldr	r3, [r7, #4]
 8012126:	4618      	mov	r0, r3
 8012128:	3708      	adds	r7, #8
 801212a:	46bd      	mov	sp, r7
 801212c:	bd80      	pop	{r7, pc}
	...

08012130 <__tcf_0>:

void Method_handler::run_method(Method_call *mcall)
{
	static Method_handler instance;
 8012130:	b580      	push	{r7, lr}
 8012132:	af00      	add	r7, sp, #0
 8012134:	4801      	ldr	r0, [pc, #4]	; (801213c <__tcf_0+0xc>)
 8012136:	f7ff ffed 	bl	8012114 <_ZN14Method_handlerD1Ev>
 801213a:	bd80      	pop	{r7, pc}
 801213c:	20000408 	.word	0x20000408

08012140 <_ZN14Method_handler10run_methodEP11Method_call>:
{
 8012140:	b590      	push	{r4, r7, lr}
 8012142:	b09f      	sub	sp, #124	; 0x7c
 8012144:	af00      	add	r7, sp, #0
 8012146:	6078      	str	r0, [r7, #4]
	static Method_handler instance;
 8012148:	4b53      	ldr	r3, [pc, #332]	; (8012298 <_ZN14Method_handler10run_methodEP11Method_call+0x158>)
 801214a:	781b      	ldrb	r3, [r3, #0]
 801214c:	f3bf 8f5b 	dmb	ish
 8012150:	b2db      	uxtb	r3, r3
 8012152:	f003 0301 	and.w	r3, r3, #1
 8012156:	2b00      	cmp	r3, #0
 8012158:	bf0c      	ite	eq
 801215a:	2301      	moveq	r3, #1
 801215c:	2300      	movne	r3, #0
 801215e:	b2db      	uxtb	r3, r3
 8012160:	2b00      	cmp	r3, #0
 8012162:	d013      	beq.n	801218c <_ZN14Method_handler10run_methodEP11Method_call+0x4c>
 8012164:	484c      	ldr	r0, [pc, #304]	; (8012298 <_ZN14Method_handler10run_methodEP11Method_call+0x158>)
 8012166:	f011 f9b7 	bl	80234d8 <__cxa_guard_acquire>
 801216a:	4603      	mov	r3, r0
 801216c:	2b00      	cmp	r3, #0
 801216e:	bf14      	ite	ne
 8012170:	2301      	movne	r3, #1
 8012172:	2300      	moveq	r3, #0
 8012174:	b2db      	uxtb	r3, r3
 8012176:	2b00      	cmp	r3, #0
 8012178:	d008      	beq.n	801218c <_ZN14Method_handler10run_methodEP11Method_call+0x4c>
 801217a:	4848      	ldr	r0, [pc, #288]	; (801229c <_ZN14Method_handler10run_methodEP11Method_call+0x15c>)
 801217c:	f7ff ff68 	bl	8012050 <_ZN14Method_handlerC1Ev>
 8012180:	4845      	ldr	r0, [pc, #276]	; (8012298 <_ZN14Method_handler10run_methodEP11Method_call+0x158>)
 8012182:	f011 f9b5 	bl	80234f0 <__cxa_guard_release>
 8012186:	4846      	ldr	r0, [pc, #280]	; (80122a0 <_ZN14Method_handler10run_methodEP11Method_call+0x160>)
 8012188:	f012 fdfb 	bl	8024d82 <atexit>

	Position_counter::get_instance().set_line(mcall->call->line);
 801218c:	f004 fb78 	bl	8016880 <_ZN16Position_counter12get_instanceEv>
 8012190:	4602      	mov	r2, r0
 8012192:	687b      	ldr	r3, [r7, #4]
 8012194:	685b      	ldr	r3, [r3, #4]
 8012196:	681b      	ldr	r3, [r3, #0]
 8012198:	4619      	mov	r1, r3
 801219a:	4610      	mov	r0, r2
 801219c:	f004 fbe3 	bl	8016966 <_ZN16Position_counter8set_lineEi>
	Position_counter::get_instance().set_position(mcall->call->position);
 80121a0:	f004 fb6e 	bl	8016880 <_ZN16Position_counter12get_instanceEv>
 80121a4:	4602      	mov	r2, r0
 80121a6:	687b      	ldr	r3, [r7, #4]
 80121a8:	685b      	ldr	r3, [r3, #4]
 80121aa:	685b      	ldr	r3, [r3, #4]
 80121ac:	4619      	mov	r1, r3
 80121ae:	4610      	mov	r0, r2
 80121b0:	f004 fbe7 	bl	8016982 <_ZN16Position_counter12set_positionEi>

	auto search = instance.methods.find(mcall->call->id);
 80121b4:	687b      	ldr	r3, [r7, #4]
 80121b6:	685b      	ldr	r3, [r3, #4]
 80121b8:	3308      	adds	r3, #8
 80121ba:	4619      	mov	r1, r3
 80121bc:	4837      	ldr	r0, [pc, #220]	; (801229c <_ZN14Method_handler10run_methodEP11Method_call+0x15c>)
 80121be:	f000 f9c5 	bl	801254c <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISA_EEESt4lessIS5_ESaISt4pairIKS5_SE_EEE4findERSI_>
 80121c2:	4603      	mov	r3, r0
 80121c4:	60fb      	str	r3, [r7, #12]
	if (search == instance.methods.end())
 80121c6:	4835      	ldr	r0, [pc, #212]	; (801229c <_ZN14Method_handler10run_methodEP11Method_call+0x15c>)
 80121c8:	f000 f9cf 	bl	801256a <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISA_EEESt4lessIS5_ESaISt4pairIKS5_SE_EEE3endEv>
 80121cc:	4603      	mov	r3, r0
 80121ce:	613b      	str	r3, [r7, #16]
 80121d0:	f107 0210 	add.w	r2, r7, #16
 80121d4:	f107 030c 	add.w	r3, r7, #12
 80121d8:	4611      	mov	r1, r2
 80121da:	4618      	mov	r0, r3
 80121dc:	f000 f9d2 	bl	8012584 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEESK_>
 80121e0:	4603      	mov	r3, r0
 80121e2:	2b00      	cmp	r3, #0
 80121e4:	d020      	beq.n	8012228 <_ZN14Method_handler10run_methodEP11Method_call+0xe8>
	{
		Transmitter::report_error(std::string("method " + mcall->call->id + " not found"));
 80121e6:	687b      	ldr	r3, [r7, #4]
 80121e8:	685b      	ldr	r3, [r3, #4]
 80121ea:	f103 0208 	add.w	r2, r3, #8
 80121ee:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80121f2:	492c      	ldr	r1, [pc, #176]	; (80122a4 <_ZN14Method_handler10run_methodEP11Method_call+0x164>)
 80121f4:	4618      	mov	r0, r3
 80121f6:	f7fc f860 	bl	800e2ba <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>
 80121fa:	f107 0314 	add.w	r3, r7, #20
 80121fe:	f107 012c 	add.w	r1, r7, #44	; 0x2c
 8012202:	4a29      	ldr	r2, [pc, #164]	; (80122a8 <_ZN14Method_handler10run_methodEP11Method_call+0x168>)
 8012204:	4618      	mov	r0, r3
 8012206:	f7fc f87d 	bl	800e304 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_>
 801220a:	f107 0314 	add.w	r3, r7, #20
 801220e:	4618      	mov	r0, r3
 8012210:	f006 fcf6 	bl	8018c00 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8012214:	f107 0314 	add.w	r3, r7, #20
 8012218:	4618      	mov	r0, r3
 801221a:	f011 fc0e 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801221e:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8012222:	4618      	mov	r0, r3
 8012224:	f011 fc09 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	}
	method_pointer method = search->second;
 8012228:	f107 030c 	add.w	r3, r7, #12
 801222c:	4618      	mov	r0, r3
 801222e:	f000 f9bd 	bl	80125ac <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEptEv>
 8012232:	4603      	mov	r3, r0
 8012234:	699b      	ldr	r3, [r3, #24]
 8012236:	677b      	str	r3, [r7, #116]	; 0x74

	Symbol& var = Variable_handler::get_instance().get_symbol(*mcall->vector);
 8012238:	f007 f82e 	bl	8019298 <_ZN16Variable_handler12get_instanceEv>
 801223c:	4604      	mov	r4, r0
 801223e:	687b      	ldr	r3, [r7, #4]
 8012240:	681a      	ldr	r2, [r3, #0]
 8012242:	f107 0344 	add.w	r3, r7, #68	; 0x44
 8012246:	4611      	mov	r1, r2
 8012248:	4618      	mov	r0, r3
 801224a:	f7ef fb95 	bl	8001978 <_ZN8VariableC1ERKS_>
 801224e:	f107 0344 	add.w	r3, r7, #68	; 0x44
 8012252:	4619      	mov	r1, r3
 8012254:	4620      	mov	r0, r4
 8012256:	f007 f8f4 	bl	8019442 <_ZN16Variable_handler10get_symbolE8Variable>
 801225a:	6738      	str	r0, [r7, #112]	; 0x70
 801225c:	f107 0344 	add.w	r3, r7, #68	; 0x44
 8012260:	4618      	mov	r0, r3
 8012262:	f004 fbdf 	bl	8016a24 <_ZN8VariableD1Ev>

	method(var, mcall->call->arguments);
 8012266:	6f7c      	ldr	r4, [r7, #116]	; 0x74
 8012268:	687b      	ldr	r3, [r7, #4]
 801226a:	685b      	ldr	r3, [r3, #4]
 801226c:	f103 0220 	add.w	r2, r3, #32
 8012270:	f107 0364 	add.w	r3, r7, #100	; 0x64
 8012274:	4611      	mov	r1, r2
 8012276:	4618      	mov	r0, r3
 8012278:	f7fb ffc7 	bl	800e20a <_ZNSt6vectorIP10ExpressionSaIS1_EEC1ERKS3_>
 801227c:	f107 0364 	add.w	r3, r7, #100	; 0x64
 8012280:	4619      	mov	r1, r3
 8012282:	6f38      	ldr	r0, [r7, #112]	; 0x70
 8012284:	47a0      	blx	r4
 8012286:	f107 0364 	add.w	r3, r7, #100	; 0x64
 801228a:	4618      	mov	r0, r3
 801228c:	f7fb fffa 	bl	800e284 <_ZNSt6vectorIP10ExpressionSaIS1_EED1Ev>
}
 8012290:	bf00      	nop
 8012292:	377c      	adds	r7, #124	; 0x7c
 8012294:	46bd      	mov	sp, r7
 8012296:	bd90      	pop	{r4, r7, pc}
 8012298:	20000420 	.word	0x20000420
 801229c:	20000408 	.word	0x20000408
 80122a0:	08012131 	.word	0x08012131
 80122a4:	080297c4 	.word	0x080297c4
 80122a8:	080297cc 	.word	0x080297cc

080122ac <_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_jPKS8_St9__va_listEjSB_z>:

  // Helper for the to_string / to_wstring functions.
  template<typename _String, typename _CharT = typename _String::value_type>
    _String
    __to_xstring(int (*__convf) (_CharT*, std::size_t, const _CharT*,
 80122ac:	b408      	push	{r3}
 80122ae:	b590      	push	{r4, r7, lr}
 80122b0:	b088      	sub	sp, #32
 80122b2:	af00      	add	r7, sp, #0
 80122b4:	60f8      	str	r0, [r7, #12]
 80122b6:	60b9      	str	r1, [r7, #8]
 80122b8:	607a      	str	r2, [r7, #4]
				 __builtin_va_list), std::size_t __n,
		 const _CharT* __fmt, ...)
    {
      // XXX Eventually the result should be constructed in-place in
      // the __cxx11 string, likely with the help of internal hooks.
      _CharT* __s = static_cast<_CharT*>(__builtin_alloca(sizeof(_CharT)
 80122ba:	687b      	ldr	r3, [r7, #4]
 80122bc:	3307      	adds	r3, #7
 80122be:	08db      	lsrs	r3, r3, #3
 80122c0:	00db      	lsls	r3, r3, #3
 80122c2:	ebad 0d03 	sub.w	sp, sp, r3
 80122c6:	466b      	mov	r3, sp
 80122c8:	3307      	adds	r3, #7
 80122ca:	08db      	lsrs	r3, r3, #3
 80122cc:	00db      	lsls	r3, r3, #3
 80122ce:	61fb      	str	r3, [r7, #28]
							  * __n));

      __builtin_va_list __args;
      __builtin_va_start(__args, __fmt);
 80122d0:	f107 0330 	add.w	r3, r7, #48	; 0x30
 80122d4:	613b      	str	r3, [r7, #16]

      const int __len = __convf(__s, __n, __fmt, __args);
 80122d6:	68bc      	ldr	r4, [r7, #8]
 80122d8:	693b      	ldr	r3, [r7, #16]
 80122da:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 80122dc:	6879      	ldr	r1, [r7, #4]
 80122de:	69f8      	ldr	r0, [r7, #28]
 80122e0:	47a0      	blx	r4
 80122e2:	61b8      	str	r0, [r7, #24]

      __builtin_va_end(__args);

      return _String(__s, __s + __len);
 80122e4:	69bb      	ldr	r3, [r7, #24]
 80122e6:	69fa      	ldr	r2, [r7, #28]
 80122e8:	18d4      	adds	r4, r2, r3
 80122ea:	f107 0314 	add.w	r3, r7, #20
 80122ee:	4618      	mov	r0, r3
 80122f0:	f011 f912 	bl	8023518 <_ZNSaIcEC1Ev>
 80122f4:	f107 0314 	add.w	r3, r7, #20
 80122f8:	4622      	mov	r2, r4
 80122fa:	69f9      	ldr	r1, [r7, #28]
 80122fc:	68f8      	ldr	r0, [r7, #12]
 80122fe:	f000 f963 	bl	80125c8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IPcvEET_S7_RKS3_>
 8012302:	f107 0314 	add.w	r3, r7, #20
 8012306:	4618      	mov	r0, r3
 8012308:	f011 f907 	bl	802351a <_ZNSaIcED1Ev>
 801230c:	bf00      	nop
    }
 801230e:	68f8      	ldr	r0, [r7, #12]
 8012310:	3720      	adds	r7, #32
 8012312:	46bd      	mov	sp, r7
 8012314:	e8bd 4090 	ldmia.w	sp!, {r4, r7, lr}
 8012318:	b001      	add	sp, #4
 801231a:	4770      	bx	lr

0801231c <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_>:
    operator+(const _CharT* __lhs,
 801231c:	b580      	push	{r7, lr}
 801231e:	b084      	sub	sp, #16
 8012320:	af00      	add	r7, sp, #0
 8012322:	60f8      	str	r0, [r7, #12]
 8012324:	60b9      	str	r1, [r7, #8]
 8012326:	607a      	str	r2, [r7, #4]
    { return std::move(__rhs.insert(0, __lhs)); }
 8012328:	68ba      	ldr	r2, [r7, #8]
 801232a:	2100      	movs	r1, #0
 801232c:	6878      	ldr	r0, [r7, #4]
 801232e:	f011 fcc7 	bl	8023cc0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjPKc>
 8012332:	4603      	mov	r3, r0
 8012334:	4618      	mov	r0, r3
 8012336:	f7f4 ff4a 	bl	80071ce <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
 801233a:	4603      	mov	r3, r0
 801233c:	4619      	mov	r1, r3
 801233e:	68f8      	ldr	r0, [r7, #12]
 8012340:	f011 fb61 	bl	8023a06 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_>
 8012344:	68f8      	ldr	r0, [r7, #12]
 8012346:	3710      	adds	r7, #16
 8012348:	46bd      	mov	sp, r7
 801234a:	bd80      	pop	{r7, pc}

0801234c <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_>:
    operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
 801234c:	b590      	push	{r4, r7, lr}
 801234e:	b087      	sub	sp, #28
 8012350:	af00      	add	r7, sp, #0
 8012352:	60f8      	str	r0, [r7, #12]
 8012354:	60b9      	str	r1, [r7, #8]
 8012356:	607a      	str	r2, [r7, #4]
      const auto __size = __lhs.size() + __rhs.size();
 8012358:	68b8      	ldr	r0, [r7, #8]
 801235a:	f011 fba2 	bl	8023aa2 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
 801235e:	4604      	mov	r4, r0
 8012360:	6878      	ldr	r0, [r7, #4]
 8012362:	f011 fb9e 	bl	8023aa2 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
 8012366:	4603      	mov	r3, r0
 8012368:	4423      	add	r3, r4
 801236a:	617b      	str	r3, [r7, #20]
      const bool __cond = (__size > __lhs.capacity()
 801236c:	68b8      	ldr	r0, [r7, #8]
 801236e:	f011 fb9c 	bl	8023aaa <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv>
 8012372:	4602      	mov	r2, r0
			   && __size <= __rhs.capacity());
 8012374:	697b      	ldr	r3, [r7, #20]
 8012376:	4293      	cmp	r3, r2
 8012378:	d908      	bls.n	801238c <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_+0x40>
 801237a:	6878      	ldr	r0, [r7, #4]
 801237c:	f011 fb95 	bl	8023aaa <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv>
 8012380:	4602      	mov	r2, r0
 8012382:	697b      	ldr	r3, [r7, #20]
 8012384:	4293      	cmp	r3, r2
 8012386:	d801      	bhi.n	801238c <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_+0x40>
 8012388:	2301      	movs	r3, #1
 801238a:	e000      	b.n	801238e <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_+0x42>
 801238c:	2300      	movs	r3, #0
      const bool __cond = (__size > __lhs.capacity()
 801238e:	74fb      	strb	r3, [r7, #19]
	            : std::move(__lhs.append(__rhs));
 8012390:	7cfb      	ldrb	r3, [r7, #19]
 8012392:	2b00      	cmp	r3, #0
 8012394:	d00a      	beq.n	80123ac <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_+0x60>
      return __cond ? std::move(__rhs.insert(0, __lhs))
 8012396:	68ba      	ldr	r2, [r7, #8]
 8012398:	2100      	movs	r1, #0
 801239a:	6878      	ldr	r0, [r7, #4]
 801239c:	f011 fc86 	bl	8023cac <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjRKS4_>
 80123a0:	4603      	mov	r3, r0
 80123a2:	4618      	mov	r0, r3
 80123a4:	f7f4 ff13 	bl	80071ce <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
 80123a8:	4603      	mov	r3, r0
 80123aa:	e008      	b.n	80123be <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_+0x72>
	            : std::move(__lhs.append(__rhs));
 80123ac:	6879      	ldr	r1, [r7, #4]
 80123ae:	68b8      	ldr	r0, [r7, #8]
 80123b0:	f011 fcb8 	bl	8023d24 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_>
 80123b4:	4603      	mov	r3, r0
 80123b6:	4618      	mov	r0, r3
 80123b8:	f7f4 ff09 	bl	80071ce <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
 80123bc:	4603      	mov	r3, r0
 80123be:	4619      	mov	r1, r3
 80123c0:	68f8      	ldr	r0, [r7, #12]
 80123c2:	f011 fb20 	bl	8023a06 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_>
    }
 80123c6:	68f8      	ldr	r0, [r7, #12]
 80123c8:	371c      	adds	r7, #28
 80123ca:	46bd      	mov	sp, r7
 80123cc:	bd90      	pop	{r4, r7, pc}

080123ce <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE13_Rb_tree_implISL_Lb1EEC1Ev>:
	  _Rb_tree_impl()
 80123ce:	b580      	push	{r7, lr}
 80123d0:	b082      	sub	sp, #8
 80123d2:	af00      	add	r7, sp, #0
 80123d4:	6078      	str	r0, [r7, #4]
	  : _Node_allocator()
 80123d6:	6878      	ldr	r0, [r7, #4]
 80123d8:	f000 f911 	bl	80125fe <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEEC1Ev>
 80123dc:	687b      	ldr	r3, [r7, #4]
 80123de:	4618      	mov	r0, r3
 80123e0:	f000 f919 	bl	8012616 <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>
 80123e4:	687b      	ldr	r3, [r7, #4]
 80123e6:	3304      	adds	r3, #4
 80123e8:	4618      	mov	r0, r3
 80123ea:	f7ee fe48 	bl	800107e <_ZNSt15_Rb_tree_headerC1Ev>
	  { }
 80123ee:	687b      	ldr	r3, [r7, #4]
 80123f0:	4618      	mov	r0, r3
 80123f2:	3708      	adds	r7, #8
 80123f4:	46bd      	mov	sp, r7
 80123f6:	bd80      	pop	{r7, pc}

080123f8 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
 80123f8:	b580      	push	{r7, lr}
 80123fa:	b082      	sub	sp, #8
 80123fc:	af00      	add	r7, sp, #0
 80123fe:	6078      	str	r0, [r7, #4]
 8012400:	6878      	ldr	r0, [r7, #4]
 8012402:	f000 f913 	bl	801262c <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISE_EEEEEED1Ev>
 8012406:	687b      	ldr	r3, [r7, #4]
 8012408:	4618      	mov	r0, r3
 801240a:	3708      	adds	r7, #8
 801240c:	46bd      	mov	sp, r7
 801240e:	bd80      	pop	{r7, pc}

08012410 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EED1Ev>:
      ~_Rb_tree() _GLIBCXX_NOEXCEPT
 8012410:	b580      	push	{r7, lr}
 8012412:	b082      	sub	sp, #8
 8012414:	af00      	add	r7, sp, #0
 8012416:	6078      	str	r0, [r7, #4]
      { _M_erase(_M_begin()); }
 8012418:	6878      	ldr	r0, [r7, #4]
 801241a:	f000 f931 	bl	8012680 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE8_M_beginEv>
 801241e:	4603      	mov	r3, r0
 8012420:	4619      	mov	r1, r3
 8012422:	6878      	ldr	r0, [r7, #4]
 8012424:	f000 f90d 	bl	8012642 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE8_M_eraseEPSt13_Rb_tree_nodeISH_E>
 8012428:	687b      	ldr	r3, [r7, #4]
 801242a:	4618      	mov	r0, r3
 801242c:	f7ff fdcf 	bl	8011fce <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE13_Rb_tree_implISL_Lb1EED1Ev>
 8012430:	687b      	ldr	r3, [r7, #4]
 8012432:	4618      	mov	r0, r3
 8012434:	3708      	adds	r7, #8
 8012436:	46bd      	mov	sp, r7
 8012438:	bd80      	pop	{r7, pc}

0801243a <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISB_EEEEC1IRA6_KcLb1EEEOT_RKSF_>:
       constexpr pair(_U1&& __x, const _T2& __y)
 801243a:	b5b0      	push	{r4, r5, r7, lr}
 801243c:	b086      	sub	sp, #24
 801243e:	af00      	add	r7, sp, #0
 8012440:	60f8      	str	r0, [r7, #12]
 8012442:	60b9      	str	r1, [r7, #8]
 8012444:	607a      	str	r2, [r7, #4]
       : first(std::forward<_U1>(__x)), second(__y) { }
 8012446:	68fc      	ldr	r4, [r7, #12]
 8012448:	68b8      	ldr	r0, [r7, #8]
 801244a:	f7ef fcc4 	bl	8001dd6 <_ZSt7forwardIRA6_KcEOT_RNSt16remove_referenceIS3_E4typeE>
 801244e:	4605      	mov	r5, r0
 8012450:	f107 0314 	add.w	r3, r7, #20
 8012454:	4618      	mov	r0, r3
 8012456:	f011 f85f 	bl	8023518 <_ZNSaIcEC1Ev>
 801245a:	f107 0314 	add.w	r3, r7, #20
 801245e:	461a      	mov	r2, r3
 8012460:	4629      	mov	r1, r5
 8012462:	4620      	mov	r0, r4
 8012464:	f7ef fc91 	bl	8001d8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8012468:	f107 0314 	add.w	r3, r7, #20
 801246c:	4618      	mov	r0, r3
 801246e:	f011 f854 	bl	802351a <_ZNSaIcED1Ev>
 8012472:	687b      	ldr	r3, [r7, #4]
 8012474:	681a      	ldr	r2, [r3, #0]
 8012476:	68fb      	ldr	r3, [r7, #12]
 8012478:	619a      	str	r2, [r3, #24]
 801247a:	68fb      	ldr	r3, [r7, #12]
 801247c:	4618      	mov	r0, r3
 801247e:	3718      	adds	r7, #24
 8012480:	46bd      	mov	sp, r7
 8012482:	bdb0      	pop	{r4, r5, r7, pc}

08012484 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISA_EEESt4lessIS5_ESaISt4pairIKS5_SE_EEE6insertEOSJ_>:
      insert(value_type&& __x)
 8012484:	b590      	push	{r4, r7, lr}
 8012486:	b085      	sub	sp, #20
 8012488:	af00      	add	r7, sp, #0
 801248a:	60f8      	str	r0, [r7, #12]
 801248c:	60b9      	str	r1, [r7, #8]
 801248e:	607a      	str	r2, [r7, #4]
      { return _M_t._M_insert_unique(std::move(__x)); }
 8012490:	68bc      	ldr	r4, [r7, #8]
 8012492:	6878      	ldr	r0, [r7, #4]
 8012494:	f000 f900 	bl	8012698 <_ZSt4moveIRSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEONSt16remove_referenceIT_E4typeEOSK_>
 8012498:	4602      	mov	r2, r0
 801249a:	68fb      	ldr	r3, [r7, #12]
 801249c:	4621      	mov	r1, r4
 801249e:	4618      	mov	r0, r3
 80124a0:	f000 f905 	bl	80126ae <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE16_M_insert_uniqueISH_EES6_ISt17_Rb_tree_iteratorISH_EbEOT_>
 80124a4:	68f8      	ldr	r0, [r7, #12]
 80124a6:	3714      	adds	r7, #20
 80124a8:	46bd      	mov	sp, r7
 80124aa:	bd90      	pop	{r4, r7, pc}

080124ac <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISB_EEEEC1IRA9_KcSF_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 80124ac:	b5b0      	push	{r4, r5, r7, lr}
 80124ae:	b086      	sub	sp, #24
 80124b0:	af00      	add	r7, sp, #0
 80124b2:	60f8      	str	r0, [r7, #12]
 80124b4:	60b9      	str	r1, [r7, #8]
 80124b6:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 80124b8:	68fc      	ldr	r4, [r7, #12]
 80124ba:	68b8      	ldr	r0, [r7, #8]
 80124bc:	f000 f946 	bl	801274c <_ZSt7forwardIRA9_KcEOT_RNSt16remove_referenceIS3_E4typeE>
 80124c0:	4605      	mov	r5, r0
 80124c2:	f107 0314 	add.w	r3, r7, #20
 80124c6:	4618      	mov	r0, r3
 80124c8:	f011 f826 	bl	8023518 <_ZNSaIcEC1Ev>
 80124cc:	f107 0314 	add.w	r3, r7, #20
 80124d0:	461a      	mov	r2, r3
 80124d2:	4629      	mov	r1, r5
 80124d4:	4620      	mov	r0, r4
 80124d6:	f7ef fc58 	bl	8001d8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 80124da:	f107 0314 	add.w	r3, r7, #20
 80124de:	4618      	mov	r0, r3
 80124e0:	f011 f81b 	bl	802351a <_ZNSaIcED1Ev>
 80124e4:	6878      	ldr	r0, [r7, #4]
 80124e6:	f000 f93c 	bl	8012762 <_ZSt7forwardIPFvR6SymbolSt6vectorIP10ExpressionSaIS4_EEEEOT_RNSt16remove_referenceIS9_E4typeE>
 80124ea:	4603      	mov	r3, r0
 80124ec:	681a      	ldr	r2, [r3, #0]
 80124ee:	68fb      	ldr	r3, [r7, #12]
 80124f0:	619a      	str	r2, [r3, #24]
 80124f2:	68fb      	ldr	r3, [r7, #12]
 80124f4:	4618      	mov	r0, r3
 80124f6:	3718      	adds	r7, #24
 80124f8:	46bd      	mov	sp, r7
 80124fa:	bdb0      	pop	{r4, r5, r7, pc}

080124fc <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISB_EEEEC1IRA7_KcSF_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 80124fc:	b5b0      	push	{r4, r5, r7, lr}
 80124fe:	b086      	sub	sp, #24
 8012500:	af00      	add	r7, sp, #0
 8012502:	60f8      	str	r0, [r7, #12]
 8012504:	60b9      	str	r1, [r7, #8]
 8012506:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 8012508:	68fc      	ldr	r4, [r7, #12]
 801250a:	68b8      	ldr	r0, [r7, #8]
 801250c:	f7ef fc6e 	bl	8001dec <_ZSt7forwardIRA7_KcEOT_RNSt16remove_referenceIS3_E4typeE>
 8012510:	4605      	mov	r5, r0
 8012512:	f107 0314 	add.w	r3, r7, #20
 8012516:	4618      	mov	r0, r3
 8012518:	f010 fffe 	bl	8023518 <_ZNSaIcEC1Ev>
 801251c:	f107 0314 	add.w	r3, r7, #20
 8012520:	461a      	mov	r2, r3
 8012522:	4629      	mov	r1, r5
 8012524:	4620      	mov	r0, r4
 8012526:	f7ef fc30 	bl	8001d8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801252a:	f107 0314 	add.w	r3, r7, #20
 801252e:	4618      	mov	r0, r3
 8012530:	f010 fff3 	bl	802351a <_ZNSaIcED1Ev>
 8012534:	6878      	ldr	r0, [r7, #4]
 8012536:	f000 f914 	bl	8012762 <_ZSt7forwardIPFvR6SymbolSt6vectorIP10ExpressionSaIS4_EEEEOT_RNSt16remove_referenceIS9_E4typeE>
 801253a:	4603      	mov	r3, r0
 801253c:	681a      	ldr	r2, [r3, #0]
 801253e:	68fb      	ldr	r3, [r7, #12]
 8012540:	619a      	str	r2, [r3, #24]
 8012542:	68fb      	ldr	r3, [r7, #12]
 8012544:	4618      	mov	r0, r3
 8012546:	3718      	adds	r7, #24
 8012548:	46bd      	mov	sp, r7
 801254a:	bdb0      	pop	{r4, r5, r7, pc}

0801254c <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISA_EEESt4lessIS5_ESaISt4pairIKS5_SE_EEE4findERSI_>:
      find(const key_type& __x)
 801254c:	b580      	push	{r7, lr}
 801254e:	b082      	sub	sp, #8
 8012550:	af00      	add	r7, sp, #0
 8012552:	6078      	str	r0, [r7, #4]
 8012554:	6039      	str	r1, [r7, #0]
      { return _M_t.find(__x); }
 8012556:	687b      	ldr	r3, [r7, #4]
 8012558:	6839      	ldr	r1, [r7, #0]
 801255a:	4618      	mov	r0, r3
 801255c:	f000 f90c 	bl	8012778 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE4findERS7_>
 8012560:	4603      	mov	r3, r0
 8012562:	4618      	mov	r0, r3
 8012564:	3708      	adds	r7, #8
 8012566:	46bd      	mov	sp, r7
 8012568:	bd80      	pop	{r7, pc}

0801256a <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISA_EEESt4lessIS5_ESaISt4pairIKS5_SE_EEE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 801256a:	b580      	push	{r7, lr}
 801256c:	b082      	sub	sp, #8
 801256e:	af00      	add	r7, sp, #0
 8012570:	6078      	str	r0, [r7, #4]
      { return _M_t.end(); }
 8012572:	687b      	ldr	r3, [r7, #4]
 8012574:	4618      	mov	r0, r3
 8012576:	f000 f93b 	bl	80127f0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE3endEv>
 801257a:	4603      	mov	r3, r0
 801257c:	4618      	mov	r0, r3
 801257e:	3708      	adds	r7, #8
 8012580:	46bd      	mov	sp, r7
 8012582:	bd80      	pop	{r7, pc}

08012584 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEESK_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 8012584:	b480      	push	{r7}
 8012586:	b083      	sub	sp, #12
 8012588:	af00      	add	r7, sp, #0
 801258a:	6078      	str	r0, [r7, #4]
 801258c:	6039      	str	r1, [r7, #0]
      { return __x._M_node == __y._M_node; }
 801258e:	687b      	ldr	r3, [r7, #4]
 8012590:	681a      	ldr	r2, [r3, #0]
 8012592:	683b      	ldr	r3, [r7, #0]
 8012594:	681b      	ldr	r3, [r3, #0]
 8012596:	429a      	cmp	r2, r3
 8012598:	bf0c      	ite	eq
 801259a:	2301      	moveq	r3, #1
 801259c:	2300      	movne	r3, #0
 801259e:	b2db      	uxtb	r3, r3
 80125a0:	4618      	mov	r0, r3
 80125a2:	370c      	adds	r7, #12
 80125a4:	46bd      	mov	sp, r7
 80125a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80125aa:	4770      	bx	lr

080125ac <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEptEv>:
      operator->() const _GLIBCXX_NOEXCEPT
 80125ac:	b580      	push	{r7, lr}
 80125ae:	b082      	sub	sp, #8
 80125b0:	af00      	add	r7, sp, #0
 80125b2:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type> (_M_node)->_M_valptr(); }
 80125b4:	687b      	ldr	r3, [r7, #4]
 80125b6:	681b      	ldr	r3, [r3, #0]
 80125b8:	4618      	mov	r0, r3
 80125ba:	f000 f92a 	bl	8012812 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEE9_M_valptrEv>
 80125be:	4603      	mov	r3, r0
 80125c0:	4618      	mov	r0, r3
 80125c2:	3708      	adds	r7, #8
 80125c4:	46bd      	mov	sp, r7
 80125c6:	bd80      	pop	{r7, pc}

080125c8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IPcvEET_S7_RKS3_>:
        basic_string(_InputIterator __beg, _InputIterator __end,
 80125c8:	b590      	push	{r4, r7, lr}
 80125ca:	b085      	sub	sp, #20
 80125cc:	af00      	add	r7, sp, #0
 80125ce:	60f8      	str	r0, [r7, #12]
 80125d0:	60b9      	str	r1, [r7, #8]
 80125d2:	607a      	str	r2, [r7, #4]
 80125d4:	603b      	str	r3, [r7, #0]
	: _M_dataplus(_M_local_data(), __a)
 80125d6:	68fc      	ldr	r4, [r7, #12]
 80125d8:	68f8      	ldr	r0, [r7, #12]
 80125da:	f011 f91d 	bl	8023818 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv>
 80125de:	4603      	mov	r3, r0
 80125e0:	683a      	ldr	r2, [r7, #0]
 80125e2:	4619      	mov	r1, r3
 80125e4:	4620      	mov	r0, r4
 80125e6:	f011 fbf5 	bl	8023dd4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_>
	{ _M_construct(__beg, __end); }
 80125ea:	687a      	ldr	r2, [r7, #4]
 80125ec:	68b9      	ldr	r1, [r7, #8]
 80125ee:	68f8      	ldr	r0, [r7, #12]
 80125f0:	f000 f91d 	bl	801282e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_>
 80125f4:	68fb      	ldr	r3, [r7, #12]
 80125f6:	4618      	mov	r0, r3
 80125f8:	3714      	adds	r7, #20
 80125fa:	46bd      	mov	sp, r7
 80125fc:	bd90      	pop	{r4, r7, pc}

080125fe <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
 80125fe:	b580      	push	{r7, lr}
 8012600:	b082      	sub	sp, #8
 8012602:	af00      	add	r7, sp, #0
 8012604:	6078      	str	r0, [r7, #4]
 8012606:	6878      	ldr	r0, [r7, #4]
 8012608:	f000 f920 	bl	801284c <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISE_EEEEEEC1Ev>
 801260c:	687b      	ldr	r3, [r7, #4]
 801260e:	4618      	mov	r0, r3
 8012610:	3708      	adds	r7, #8
 8012612:	46bd      	mov	sp, r7
 8012614:	bd80      	pop	{r7, pc}

08012616 <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>:
      _Rb_tree_key_compare()
 8012616:	b480      	push	{r7}
 8012618:	b083      	sub	sp, #12
 801261a:	af00      	add	r7, sp, #0
 801261c:	6078      	str	r0, [r7, #4]
      { }
 801261e:	687b      	ldr	r3, [r7, #4]
 8012620:	4618      	mov	r0, r3
 8012622:	370c      	adds	r7, #12
 8012624:	46bd      	mov	sp, r7
 8012626:	f85d 7b04 	ldr.w	r7, [sp], #4
 801262a:	4770      	bx	lr

0801262c <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISE_EEEEEED1Ev>:
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 801262c:	b480      	push	{r7}
 801262e:	b083      	sub	sp, #12
 8012630:	af00      	add	r7, sp, #0
 8012632:	6078      	str	r0, [r7, #4]
 8012634:	687b      	ldr	r3, [r7, #4]
 8012636:	4618      	mov	r0, r3
 8012638:	370c      	adds	r7, #12
 801263a:	46bd      	mov	sp, r7
 801263c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012640:	4770      	bx	lr

08012642 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE8_M_eraseEPSt13_Rb_tree_nodeISH_E>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8012642:	b580      	push	{r7, lr}
 8012644:	b084      	sub	sp, #16
 8012646:	af00      	add	r7, sp, #0
 8012648:	6078      	str	r0, [r7, #4]
 801264a:	6039      	str	r1, [r7, #0]
      while (__x != 0)
 801264c:	683b      	ldr	r3, [r7, #0]
 801264e:	2b00      	cmp	r3, #0
 8012650:	d012      	beq.n	8012678 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE8_M_eraseEPSt13_Rb_tree_nodeISH_E+0x36>
	  _M_erase(_S_right(__x));
 8012652:	6838      	ldr	r0, [r7, #0]
 8012654:	f000 f905 	bl	8012862 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE8_S_rightEPSt18_Rb_tree_node_base>
 8012658:	4603      	mov	r3, r0
 801265a:	4619      	mov	r1, r3
 801265c:	6878      	ldr	r0, [r7, #4]
 801265e:	f7ff fff0 	bl	8012642 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE8_M_eraseEPSt13_Rb_tree_nodeISH_E>
	  _Link_type __y = _S_left(__x);
 8012662:	6838      	ldr	r0, [r7, #0]
 8012664:	f000 f909 	bl	801287a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE7_S_leftEPSt18_Rb_tree_node_base>
 8012668:	60f8      	str	r0, [r7, #12]
	  _M_drop_node(__x);
 801266a:	6839      	ldr	r1, [r7, #0]
 801266c:	6878      	ldr	r0, [r7, #4]
 801266e:	f000 f910 	bl	8012892 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE12_M_drop_nodeEPSt13_Rb_tree_nodeISH_E>
	  __x = __y;
 8012672:	68fb      	ldr	r3, [r7, #12]
 8012674:	603b      	str	r3, [r7, #0]
      while (__x != 0)
 8012676:	e7e9      	b.n	801264c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE8_M_eraseEPSt13_Rb_tree_nodeISH_E+0xa>
    }
 8012678:	bf00      	nop
 801267a:	3710      	adds	r7, #16
 801267c:	46bd      	mov	sp, r7
 801267e:	bd80      	pop	{r7, pc}

08012680 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE8_M_beginEv>:
      _M_begin() _GLIBCXX_NOEXCEPT
 8012680:	b480      	push	{r7}
 8012682:	b083      	sub	sp, #12
 8012684:	af00      	add	r7, sp, #0
 8012686:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
 8012688:	687b      	ldr	r3, [r7, #4]
 801268a:	689b      	ldr	r3, [r3, #8]
 801268c:	4618      	mov	r0, r3
 801268e:	370c      	adds	r7, #12
 8012690:	46bd      	mov	sp, r7
 8012692:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012696:	4770      	bx	lr

08012698 <_ZSt4moveIRSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEONSt16remove_referenceIT_E4typeEOSK_>:
    move(_Tp&& __t) noexcept
 8012698:	b480      	push	{r7}
 801269a:	b083      	sub	sp, #12
 801269c:	af00      	add	r7, sp, #0
 801269e:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 80126a0:	687b      	ldr	r3, [r7, #4]
 80126a2:	4618      	mov	r0, r3
 80126a4:	370c      	adds	r7, #12
 80126a6:	46bd      	mov	sp, r7
 80126a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80126ac:	4770      	bx	lr

080126ae <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE16_M_insert_uniqueISH_EES6_ISt17_Rb_tree_iteratorISH_EbEOT_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 80126ae:	b5b0      	push	{r4, r5, r7, lr}
 80126b0:	b08e      	sub	sp, #56	; 0x38
 80126b2:	af02      	add	r7, sp, #8
 80126b4:	60f8      	str	r0, [r7, #12]
 80126b6:	60b9      	str	r1, [r7, #8]
 80126b8:	607a      	str	r2, [r7, #4]
	= _M_get_insert_unique_pos(_KeyOfValue()(__v));
 80126ba:	f107 031c 	add.w	r3, r7, #28
 80126be:	6879      	ldr	r1, [r7, #4]
 80126c0:	4618      	mov	r0, r3
 80126c2:	f000 f97c 	bl	80129be <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEclERSH_>
 80126c6:	4602      	mov	r2, r0
      pair<_Base_ptr, _Base_ptr> __res
 80126c8:	f107 0314 	add.w	r3, r7, #20
 80126cc:	68b9      	ldr	r1, [r7, #8]
 80126ce:	4618      	mov	r0, r3
 80126d0:	f000 f8f0 	bl	80128b4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE24_M_get_insert_unique_posERS7_>
      if (__res.second)
 80126d4:	69bb      	ldr	r3, [r7, #24]
 80126d6:	2b00      	cmp	r3, #0
 80126d8:	d022      	beq.n	8012720 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE16_M_insert_uniqueISH_EES6_ISt17_Rb_tree_iteratorISH_EbEOT_+0x72>
	  _Alloc_node __an(*this);
 80126da:	f107 0310 	add.w	r3, r7, #16
 80126de:	68b9      	ldr	r1, [r7, #8]
 80126e0:	4618      	mov	r0, r3
 80126e2:	f000 f978 	bl	80129d6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE11_Alloc_nodeC1ERSN_>
	  return _Res(_M_insert_(__res.first, __res.second,
 80126e6:	697c      	ldr	r4, [r7, #20]
 80126e8:	69bd      	ldr	r5, [r7, #24]
 80126ea:	6878      	ldr	r0, [r7, #4]
 80126ec:	f000 f982 	bl	80129f4 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEOT_RNSt16remove_referenceISI_E4typeE>
 80126f0:	4602      	mov	r2, r0
 80126f2:	f107 0310 	add.w	r3, r7, #16
 80126f6:	9300      	str	r3, [sp, #0]
 80126f8:	4613      	mov	r3, r2
 80126fa:	462a      	mov	r2, r5
 80126fc:	4621      	mov	r1, r4
 80126fe:	68b8      	ldr	r0, [r7, #8]
 8012700:	f000 f983 	bl	8012a0a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE10_M_insert_ISH_NSN_11_Alloc_nodeEEESt17_Rb_tree_iteratorISH_EPSt18_Rb_tree_node_baseST_OT_RT0_>
 8012704:	4603      	mov	r3, r0
 8012706:	623b      	str	r3, [r7, #32]
		      true);
 8012708:	2301      	movs	r3, #1
 801270a:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 801270e:	f107 0227 	add.w	r2, r7, #39	; 0x27
 8012712:	f107 0320 	add.w	r3, r7, #32
 8012716:	4619      	mov	r1, r3
 8012718:	68f8      	ldr	r0, [r7, #12]
 801271a:	f000 f9bf 	bl	8012a9c <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEbEC1ISI_bLb1EEEOT_OT0_>
 801271e:	e011      	b.n	8012744 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE16_M_insert_uniqueISH_EES6_ISt17_Rb_tree_iteratorISH_EbEOT_+0x96>
      return _Res(iterator(__res.first), false);
 8012720:	697a      	ldr	r2, [r7, #20]
 8012722:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8012726:	4611      	mov	r1, r2
 8012728:	4618      	mov	r0, r3
 801272a:	f000 f9d0 	bl	8012ace <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEC1EPSt18_Rb_tree_node_base>
 801272e:	2300      	movs	r3, #0
 8012730:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
 8012734:	f107 022f 	add.w	r2, r7, #47	; 0x2f
 8012738:	f107 0328 	add.w	r3, r7, #40	; 0x28
 801273c:	4619      	mov	r1, r3
 801273e:	68f8      	ldr	r0, [r7, #12]
 8012740:	f000 f9ac 	bl	8012a9c <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEbEC1ISI_bLb1EEEOT_OT0_>
    }
 8012744:	68f8      	ldr	r0, [r7, #12]
 8012746:	3730      	adds	r7, #48	; 0x30
 8012748:	46bd      	mov	sp, r7
 801274a:	bdb0      	pop	{r4, r5, r7, pc}

0801274c <_ZSt7forwardIRA9_KcEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801274c:	b480      	push	{r7}
 801274e:	b083      	sub	sp, #12
 8012750:	af00      	add	r7, sp, #0
 8012752:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8012754:	687b      	ldr	r3, [r7, #4]
 8012756:	4618      	mov	r0, r3
 8012758:	370c      	adds	r7, #12
 801275a:	46bd      	mov	sp, r7
 801275c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012760:	4770      	bx	lr

08012762 <_ZSt7forwardIPFvR6SymbolSt6vectorIP10ExpressionSaIS4_EEEEOT_RNSt16remove_referenceIS9_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8012762:	b480      	push	{r7}
 8012764:	b083      	sub	sp, #12
 8012766:	af00      	add	r7, sp, #0
 8012768:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801276a:	687b      	ldr	r3, [r7, #4]
 801276c:	4618      	mov	r0, r3
 801276e:	370c      	adds	r7, #12
 8012770:	46bd      	mov	sp, r7
 8012772:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012776:	4770      	bx	lr

08012778 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE4findERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8012778:	b590      	push	{r4, r7, lr}
 801277a:	b085      	sub	sp, #20
 801277c:	af00      	add	r7, sp, #0
 801277e:	6078      	str	r0, [r7, #4]
 8012780:	6039      	str	r1, [r7, #0]
      iterator __j = _M_lower_bound(_M_begin(), _M_end(), __k);
 8012782:	6878      	ldr	r0, [r7, #4]
 8012784:	f7ff ff7c 	bl	8012680 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE8_M_beginEv>
 8012788:	4604      	mov	r4, r0
 801278a:	6878      	ldr	r0, [r7, #4]
 801278c:	f000 f9ae 	bl	8012aec <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE6_M_endEv>
 8012790:	4602      	mov	r2, r0
 8012792:	683b      	ldr	r3, [r7, #0]
 8012794:	4621      	mov	r1, r4
 8012796:	6878      	ldr	r0, [r7, #4]
 8012798:	f000 f9b4 	bl	8012b04 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE14_M_lower_boundEPSt13_Rb_tree_nodeISH_EPSt18_Rb_tree_node_baseRS7_>
 801279c:	4603      	mov	r3, r0
 801279e:	60bb      	str	r3, [r7, #8]
      return (__j == end()
 80127a0:	6878      	ldr	r0, [r7, #4]
 80127a2:	f000 f825 	bl	80127f0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE3endEv>
 80127a6:	4603      	mov	r3, r0
 80127a8:	60fb      	str	r3, [r7, #12]
 80127aa:	f107 020c 	add.w	r2, r7, #12
 80127ae:	f107 0308 	add.w	r3, r7, #8
 80127b2:	4611      	mov	r1, r2
 80127b4:	4618      	mov	r0, r3
 80127b6:	f7ff fee5 	bl	8012584 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEESK_>
 80127ba:	4603      	mov	r3, r0
					_S_key(__j._M_node))) ? end() : __j;
 80127bc:	2b00      	cmp	r3, #0
 80127be:	d10d      	bne.n	80127dc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE4findERS7_+0x64>
	      || _M_impl._M_key_compare(__k,
 80127c0:	687c      	ldr	r4, [r7, #4]
					_S_key(__j._M_node))) ? end() : __j;
 80127c2:	68bb      	ldr	r3, [r7, #8]
	      || _M_impl._M_key_compare(__k,
 80127c4:	4618      	mov	r0, r3
 80127c6:	f000 f9ce 	bl	8012b66 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE6_S_keyEPKSt18_Rb_tree_node_base>
 80127ca:	4603      	mov	r3, r0
 80127cc:	461a      	mov	r2, r3
 80127ce:	6839      	ldr	r1, [r7, #0]
 80127d0:	4620      	mov	r0, r4
 80127d2:	f7f4 f97c 	bl	8006ace <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 80127d6:	4603      	mov	r3, r0
 80127d8:	2b00      	cmp	r3, #0
 80127da:	d004      	beq.n	80127e6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE4findERS7_+0x6e>
					_S_key(__j._M_node))) ? end() : __j;
 80127dc:	6878      	ldr	r0, [r7, #4]
 80127de:	f000 f807 	bl	80127f0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE3endEv>
 80127e2:	4603      	mov	r3, r0
 80127e4:	e000      	b.n	80127e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE4findERS7_+0x70>
 80127e6:	68bb      	ldr	r3, [r7, #8]
    }
 80127e8:	4618      	mov	r0, r3
 80127ea:	3714      	adds	r7, #20
 80127ec:	46bd      	mov	sp, r7
 80127ee:	bd90      	pop	{r4, r7, pc}

080127f0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 80127f0:	b580      	push	{r7, lr}
 80127f2:	b084      	sub	sp, #16
 80127f4:	af00      	add	r7, sp, #0
 80127f6:	6078      	str	r0, [r7, #4]
      { return iterator(&this->_M_impl._M_header); }
 80127f8:	687b      	ldr	r3, [r7, #4]
 80127fa:	1d1a      	adds	r2, r3, #4
 80127fc:	f107 030c 	add.w	r3, r7, #12
 8012800:	4611      	mov	r1, r2
 8012802:	4618      	mov	r0, r3
 8012804:	f000 f963 	bl	8012ace <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEC1EPSt18_Rb_tree_node_base>
 8012808:	68fb      	ldr	r3, [r7, #12]
 801280a:	4618      	mov	r0, r3
 801280c:	3710      	adds	r7, #16
 801280e:	46bd      	mov	sp, r7
 8012810:	bd80      	pop	{r7, pc}

08012812 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEE9_M_valptrEv>:
      _M_valptr()
 8012812:	b580      	push	{r7, lr}
 8012814:	b082      	sub	sp, #8
 8012816:	af00      	add	r7, sp, #0
 8012818:	6078      	str	r0, [r7, #4]
      { return _M_storage._M_ptr(); }
 801281a:	687b      	ldr	r3, [r7, #4]
 801281c:	3310      	adds	r3, #16
 801281e:	4618      	mov	r0, r3
 8012820:	f000 f9ad 	bl	8012b7e <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISD_EEEEE6_M_ptrEv>
 8012824:	4603      	mov	r3, r0
 8012826:	4618      	mov	r0, r3
 8012828:	3708      	adds	r7, #8
 801282a:	46bd      	mov	sp, r7
 801282c:	bd80      	pop	{r7, pc}

0801282e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_>:
        _M_construct(_InIterator __beg, _InIterator __end)
 801282e:	b580      	push	{r7, lr}
 8012830:	b084      	sub	sp, #16
 8012832:	af00      	add	r7, sp, #0
 8012834:	60f8      	str	r0, [r7, #12]
 8012836:	60b9      	str	r1, [r7, #8]
 8012838:	607a      	str	r2, [r7, #4]
	  _M_construct_aux(__beg, __end, _Integral());
 801283a:	687a      	ldr	r2, [r7, #4]
 801283c:	68b9      	ldr	r1, [r7, #8]
 801283e:	68f8      	ldr	r0, [r7, #12]
 8012840:	f000 f9a9 	bl	8012b96 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_construct_auxIPcEEvT_S7_St12__false_type>
        }
 8012844:	bf00      	nop
 8012846:	3710      	adds	r7, #16
 8012848:	46bd      	mov	sp, r7
 801284a:	bd80      	pop	{r7, pc}

0801284c <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISE_EEEEEEC1Ev>:
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 801284c:	b480      	push	{r7}
 801284e:	b083      	sub	sp, #12
 8012850:	af00      	add	r7, sp, #0
 8012852:	6078      	str	r0, [r7, #4]
 8012854:	687b      	ldr	r3, [r7, #4]
 8012856:	4618      	mov	r0, r3
 8012858:	370c      	adds	r7, #12
 801285a:	46bd      	mov	sp, r7
 801285c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012860:	4770      	bx	lr

08012862 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE8_S_rightEPSt18_Rb_tree_node_base>:
      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 8012862:	b480      	push	{r7}
 8012864:	b083      	sub	sp, #12
 8012866:	af00      	add	r7, sp, #0
 8012868:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(__x->_M_right); }
 801286a:	687b      	ldr	r3, [r7, #4]
 801286c:	68db      	ldr	r3, [r3, #12]
 801286e:	4618      	mov	r0, r3
 8012870:	370c      	adds	r7, #12
 8012872:	46bd      	mov	sp, r7
 8012874:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012878:	4770      	bx	lr

0801287a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE7_S_leftEPSt18_Rb_tree_node_base>:
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 801287a:	b480      	push	{r7}
 801287c:	b083      	sub	sp, #12
 801287e:	af00      	add	r7, sp, #0
 8012880:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(__x->_M_left); }
 8012882:	687b      	ldr	r3, [r7, #4]
 8012884:	689b      	ldr	r3, [r3, #8]
 8012886:	4618      	mov	r0, r3
 8012888:	370c      	adds	r7, #12
 801288a:	46bd      	mov	sp, r7
 801288c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012890:	4770      	bx	lr

08012892 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE12_M_drop_nodeEPSt13_Rb_tree_nodeISH_E>:
      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 8012892:	b580      	push	{r7, lr}
 8012894:	b082      	sub	sp, #8
 8012896:	af00      	add	r7, sp, #0
 8012898:	6078      	str	r0, [r7, #4]
 801289a:	6039      	str	r1, [r7, #0]
	_M_destroy_node(__p);
 801289c:	6839      	ldr	r1, [r7, #0]
 801289e:	6878      	ldr	r0, [r7, #4]
 80128a0:	f000 f98a 	bl	8012bb8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeISH_E>
	_M_put_node(__p);
 80128a4:	6839      	ldr	r1, [r7, #0]
 80128a6:	6878      	ldr	r0, [r7, #4]
 80128a8:	f000 f99b 	bl	8012be2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE11_M_put_nodeEPSt13_Rb_tree_nodeISH_E>
      }
 80128ac:	bf00      	nop
 80128ae:	3708      	adds	r7, #8
 80128b0:	46bd      	mov	sp, r7
 80128b2:	bd80      	pop	{r7, pc}

080128b4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE24_M_get_insert_unique_posERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 80128b4:	b590      	push	{r4, r7, lr}
 80128b6:	b08b      	sub	sp, #44	; 0x2c
 80128b8:	af00      	add	r7, sp, #0
 80128ba:	60f8      	str	r0, [r7, #12]
 80128bc:	60b9      	str	r1, [r7, #8]
 80128be:	607a      	str	r2, [r7, #4]
      _Link_type __x = _M_begin();
 80128c0:	68b8      	ldr	r0, [r7, #8]
 80128c2:	f7ff fedd 	bl	8012680 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE8_M_beginEv>
 80128c6:	4603      	mov	r3, r0
 80128c8:	61bb      	str	r3, [r7, #24]
      _Base_ptr __y = _M_end();
 80128ca:	68b8      	ldr	r0, [r7, #8]
 80128cc:	f000 f90e 	bl	8012aec <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE6_M_endEv>
 80128d0:	4603      	mov	r3, r0
 80128d2:	617b      	str	r3, [r7, #20]
      bool __comp = true;
 80128d4:	2301      	movs	r3, #1
 80128d6:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
      while (__x != 0)
 80128da:	69bb      	ldr	r3, [r7, #24]
 80128dc:	2b00      	cmp	r3, #0
 80128de:	d020      	beq.n	8012922 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE24_M_get_insert_unique_posERS7_+0x6e>
	  __y = __x;
 80128e0:	69bb      	ldr	r3, [r7, #24]
 80128e2:	617b      	str	r3, [r7, #20]
	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
 80128e4:	68bc      	ldr	r4, [r7, #8]
 80128e6:	69bb      	ldr	r3, [r7, #24]
 80128e8:	4618      	mov	r0, r3
 80128ea:	f000 f98c 	bl	8012c06 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE6_S_keyEPKSt13_Rb_tree_nodeISH_E>
 80128ee:	4603      	mov	r3, r0
 80128f0:	461a      	mov	r2, r3
 80128f2:	6879      	ldr	r1, [r7, #4]
 80128f4:	4620      	mov	r0, r4
 80128f6:	f7f4 f8ea 	bl	8006ace <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 80128fa:	4603      	mov	r3, r0
 80128fc:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
	  __x = __comp ? _S_left(__x) : _S_right(__x);
 8012900:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8012904:	2b00      	cmp	r3, #0
 8012906:	d005      	beq.n	8012914 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE24_M_get_insert_unique_posERS7_+0x60>
 8012908:	69bb      	ldr	r3, [r7, #24]
 801290a:	4618      	mov	r0, r3
 801290c:	f7ff ffb5 	bl	801287a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE7_S_leftEPSt18_Rb_tree_node_base>
 8012910:	4603      	mov	r3, r0
 8012912:	e004      	b.n	801291e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE24_M_get_insert_unique_posERS7_+0x6a>
 8012914:	69bb      	ldr	r3, [r7, #24]
 8012916:	4618      	mov	r0, r3
 8012918:	f7ff ffa3 	bl	8012862 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE8_S_rightEPSt18_Rb_tree_node_base>
 801291c:	4603      	mov	r3, r0
 801291e:	61bb      	str	r3, [r7, #24]
      while (__x != 0)
 8012920:	e7db      	b.n	80128da <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE24_M_get_insert_unique_posERS7_+0x26>
      iterator __j = iterator(__y);
 8012922:	697a      	ldr	r2, [r7, #20]
 8012924:	f107 0310 	add.w	r3, r7, #16
 8012928:	4611      	mov	r1, r2
 801292a:	4618      	mov	r0, r3
 801292c:	f000 f8cf 	bl	8012ace <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEC1EPSt18_Rb_tree_node_base>
      if (__comp)
 8012930:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8012934:	2b00      	cmp	r3, #0
 8012936:	d01d      	beq.n	8012974 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE24_M_get_insert_unique_posERS7_+0xc0>
	  if (__j == begin())
 8012938:	68b8      	ldr	r0, [r7, #8]
 801293a:	f000 f977 	bl	8012c2c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE5beginEv>
 801293e:	4603      	mov	r3, r0
 8012940:	61fb      	str	r3, [r7, #28]
 8012942:	f107 021c 	add.w	r2, r7, #28
 8012946:	f107 0310 	add.w	r3, r7, #16
 801294a:	4611      	mov	r1, r2
 801294c:	4618      	mov	r0, r3
 801294e:	f7ff fe19 	bl	8012584 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEESK_>
 8012952:	4603      	mov	r3, r0
 8012954:	2b00      	cmp	r3, #0
 8012956:	d008      	beq.n	801296a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE24_M_get_insert_unique_posERS7_+0xb6>
	    return _Res(__x, __y);
 8012958:	f107 0214 	add.w	r2, r7, #20
 801295c:	f107 0318 	add.w	r3, r7, #24
 8012960:	4619      	mov	r1, r3
 8012962:	68f8      	ldr	r0, [r7, #12]
 8012964:	f000 f973 	bl	8012c4e <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISG_EEEEERS1_Lb1EEEOT_OT0_>
 8012968:	e025      	b.n	80129b6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE24_M_get_insert_unique_posERS7_+0x102>
	    --__j;
 801296a:	f107 0310 	add.w	r3, r7, #16
 801296e:	4618      	mov	r0, r3
 8012970:	f000 f986 	bl	8012c80 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEmmEv>
      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
 8012974:	68bc      	ldr	r4, [r7, #8]
 8012976:	693b      	ldr	r3, [r7, #16]
 8012978:	4618      	mov	r0, r3
 801297a:	f000 f8f4 	bl	8012b66 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE6_S_keyEPKSt18_Rb_tree_node_base>
 801297e:	4603      	mov	r3, r0
 8012980:	687a      	ldr	r2, [r7, #4]
 8012982:	4619      	mov	r1, r3
 8012984:	4620      	mov	r0, r4
 8012986:	f7f4 f8a2 	bl	8006ace <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 801298a:	4603      	mov	r3, r0
 801298c:	2b00      	cmp	r3, #0
 801298e:	d008      	beq.n	80129a2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE24_M_get_insert_unique_posERS7_+0xee>
	return _Res(__x, __y);
 8012990:	f107 0214 	add.w	r2, r7, #20
 8012994:	f107 0318 	add.w	r3, r7, #24
 8012998:	4619      	mov	r1, r3
 801299a:	68f8      	ldr	r0, [r7, #12]
 801299c:	f000 f957 	bl	8012c4e <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISG_EEEEERS1_Lb1EEEOT_OT0_>
 80129a0:	e009      	b.n	80129b6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE24_M_get_insert_unique_posERS7_+0x102>
      return _Res(__j._M_node, 0);
 80129a2:	2300      	movs	r3, #0
 80129a4:	623b      	str	r3, [r7, #32]
 80129a6:	f107 0220 	add.w	r2, r7, #32
 80129aa:	f107 0310 	add.w	r3, r7, #16
 80129ae:	4619      	mov	r1, r3
 80129b0:	68f8      	ldr	r0, [r7, #12]
 80129b2:	f7f3 ffee 	bl	8006992 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_>
    }
 80129b6:	68f8      	ldr	r0, [r7, #12]
 80129b8:	372c      	adds	r7, #44	; 0x2c
 80129ba:	46bd      	mov	sp, r7
 80129bc:	bd90      	pop	{r4, r7, pc}

080129be <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEclERSH_>:
      operator()(_Pair& __x) const
 80129be:	b480      	push	{r7}
 80129c0:	b083      	sub	sp, #12
 80129c2:	af00      	add	r7, sp, #0
 80129c4:	6078      	str	r0, [r7, #4]
 80129c6:	6039      	str	r1, [r7, #0]
      { return __x.first; }
 80129c8:	683b      	ldr	r3, [r7, #0]
 80129ca:	4618      	mov	r0, r3
 80129cc:	370c      	adds	r7, #12
 80129ce:	46bd      	mov	sp, r7
 80129d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80129d4:	4770      	bx	lr

080129d6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE11_Alloc_nodeC1ERSN_>:
	_Alloc_node(_Rb_tree& __t)
 80129d6:	b480      	push	{r7}
 80129d8:	b083      	sub	sp, #12
 80129da:	af00      	add	r7, sp, #0
 80129dc:	6078      	str	r0, [r7, #4]
 80129de:	6039      	str	r1, [r7, #0]
	: _M_t(__t) { }
 80129e0:	687b      	ldr	r3, [r7, #4]
 80129e2:	683a      	ldr	r2, [r7, #0]
 80129e4:	601a      	str	r2, [r3, #0]
 80129e6:	687b      	ldr	r3, [r7, #4]
 80129e8:	4618      	mov	r0, r3
 80129ea:	370c      	adds	r7, #12
 80129ec:	46bd      	mov	sp, r7
 80129ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80129f2:	4770      	bx	lr

080129f4 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEOT_RNSt16remove_referenceISI_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80129f4:	b480      	push	{r7}
 80129f6:	b083      	sub	sp, #12
 80129f8:	af00      	add	r7, sp, #0
 80129fa:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80129fc:	687b      	ldr	r3, [r7, #4]
 80129fe:	4618      	mov	r0, r3
 8012a00:	370c      	adds	r7, #12
 8012a02:	46bd      	mov	sp, r7
 8012a04:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012a08:	4770      	bx	lr

08012a0a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE10_M_insert_ISH_NSN_11_Alloc_nodeEEESt17_Rb_tree_iteratorISH_EPSt18_Rb_tree_node_baseST_OT_RT0_>:
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8012a0a:	b5b0      	push	{r4, r5, r7, lr}
 8012a0c:	b088      	sub	sp, #32
 8012a0e:	af00      	add	r7, sp, #0
 8012a10:	60f8      	str	r0, [r7, #12]
 8012a12:	60b9      	str	r1, [r7, #8]
 8012a14:	607a      	str	r2, [r7, #4]
 8012a16:	603b      	str	r3, [r7, #0]
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
 8012a18:	68bb      	ldr	r3, [r7, #8]
 8012a1a:	2b00      	cmp	r3, #0
 8012a1c:	d11a      	bne.n	8012a54 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE10_M_insert_ISH_NSN_11_Alloc_nodeEEESt17_Rb_tree_iteratorISH_EPSt18_Rb_tree_node_baseST_OT_RT0_+0x4a>
	bool __insert_left = (__x != 0 || __p == _M_end()
 8012a1e:	68f8      	ldr	r0, [r7, #12]
 8012a20:	f000 f864 	bl	8012aec <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE6_M_endEv>
 8012a24:	4602      	mov	r2, r0
 8012a26:	687b      	ldr	r3, [r7, #4]
 8012a28:	4293      	cmp	r3, r2
 8012a2a:	d013      	beq.n	8012a54 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE10_M_insert_ISH_NSN_11_Alloc_nodeEEESt17_Rb_tree_iteratorISH_EPSt18_Rb_tree_node_baseST_OT_RT0_+0x4a>
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
 8012a2c:	68fc      	ldr	r4, [r7, #12]
 8012a2e:	f107 0310 	add.w	r3, r7, #16
 8012a32:	6839      	ldr	r1, [r7, #0]
 8012a34:	4618      	mov	r0, r3
 8012a36:	f7ff ffc2 	bl	80129be <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEclERSH_>
 8012a3a:	4605      	mov	r5, r0
 8012a3c:	6878      	ldr	r0, [r7, #4]
 8012a3e:	f000 f892 	bl	8012b66 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8012a42:	4603      	mov	r3, r0
 8012a44:	461a      	mov	r2, r3
 8012a46:	4629      	mov	r1, r5
 8012a48:	4620      	mov	r0, r4
 8012a4a:	f7f4 f840 	bl	8006ace <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8012a4e:	4603      	mov	r3, r0
 8012a50:	2b00      	cmp	r3, #0
 8012a52:	d001      	beq.n	8012a58 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE10_M_insert_ISH_NSN_11_Alloc_nodeEEESt17_Rb_tree_iteratorISH_EPSt18_Rb_tree_node_baseST_OT_RT0_+0x4e>
 8012a54:	2301      	movs	r3, #1
 8012a56:	e000      	b.n	8012a5a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE10_M_insert_ISH_NSN_11_Alloc_nodeEEESt17_Rb_tree_iteratorISH_EPSt18_Rb_tree_node_baseST_OT_RT0_+0x50>
 8012a58:	2300      	movs	r3, #0
	bool __insert_left = (__x != 0 || __p == _M_end()
 8012a5a:	77fb      	strb	r3, [r7, #31]
	_Link_type __z = __node_gen(_GLIBCXX_FORWARD(_Arg, __v));
 8012a5c:	6838      	ldr	r0, [r7, #0]
 8012a5e:	f7ff ffc9 	bl	80129f4 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEOT_RNSt16remove_referenceISI_E4typeE>
 8012a62:	4603      	mov	r3, r0
 8012a64:	4619      	mov	r1, r3
 8012a66:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8012a68:	f000 f91b 	bl	8012ca2 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE11_Alloc_nodeclISH_EEPSt13_Rb_tree_nodeISH_EOT_>
 8012a6c:	61b8      	str	r0, [r7, #24]
				      this->_M_impl._M_header);
 8012a6e:	68fb      	ldr	r3, [r7, #12]
 8012a70:	3304      	adds	r3, #4
	_Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
 8012a72:	7ff8      	ldrb	r0, [r7, #31]
 8012a74:	687a      	ldr	r2, [r7, #4]
 8012a76:	69b9      	ldr	r1, [r7, #24]
 8012a78:	f010 fda6 	bl	80235c8 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
	++_M_impl._M_node_count;
 8012a7c:	68fb      	ldr	r3, [r7, #12]
 8012a7e:	695b      	ldr	r3, [r3, #20]
 8012a80:	1c5a      	adds	r2, r3, #1
 8012a82:	68fb      	ldr	r3, [r7, #12]
 8012a84:	615a      	str	r2, [r3, #20]
	return iterator(__z);
 8012a86:	f107 0314 	add.w	r3, r7, #20
 8012a8a:	69b9      	ldr	r1, [r7, #24]
 8012a8c:	4618      	mov	r0, r3
 8012a8e:	f000 f81e 	bl	8012ace <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEC1EPSt18_Rb_tree_node_base>
 8012a92:	697b      	ldr	r3, [r7, #20]
      }
 8012a94:	4618      	mov	r0, r3
 8012a96:	3720      	adds	r7, #32
 8012a98:	46bd      	mov	sp, r7
 8012a9a:	bdb0      	pop	{r4, r5, r7, pc}

08012a9c <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEbEC1ISI_bLb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 8012a9c:	b580      	push	{r7, lr}
 8012a9e:	b084      	sub	sp, #16
 8012aa0:	af00      	add	r7, sp, #0
 8012aa2:	60f8      	str	r0, [r7, #12]
 8012aa4:	60b9      	str	r1, [r7, #8]
 8012aa6:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 8012aa8:	68b8      	ldr	r0, [r7, #8]
 8012aaa:	f000 f90e 	bl	8012cca <_ZSt7forwardISt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISD_EEEEEEOT_RNSt16remove_referenceISK_E4typeE>
 8012aae:	4602      	mov	r2, r0
 8012ab0:	68fb      	ldr	r3, [r7, #12]
 8012ab2:	6812      	ldr	r2, [r2, #0]
 8012ab4:	601a      	str	r2, [r3, #0]
 8012ab6:	6878      	ldr	r0, [r7, #4]
 8012ab8:	f7f5 f8f6 	bl	8007ca8 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
 8012abc:	4603      	mov	r3, r0
 8012abe:	781a      	ldrb	r2, [r3, #0]
 8012ac0:	68fb      	ldr	r3, [r7, #12]
 8012ac2:	711a      	strb	r2, [r3, #4]
 8012ac4:	68fb      	ldr	r3, [r7, #12]
 8012ac6:	4618      	mov	r0, r3
 8012ac8:	3710      	adds	r7, #16
 8012aca:	46bd      	mov	sp, r7
 8012acc:	bd80      	pop	{r7, pc}

08012ace <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEC1EPSt18_Rb_tree_node_base>:
      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 8012ace:	b480      	push	{r7}
 8012ad0:	b083      	sub	sp, #12
 8012ad2:	af00      	add	r7, sp, #0
 8012ad4:	6078      	str	r0, [r7, #4]
 8012ad6:	6039      	str	r1, [r7, #0]
      : _M_node(__x) { }
 8012ad8:	687b      	ldr	r3, [r7, #4]
 8012ada:	683a      	ldr	r2, [r7, #0]
 8012adc:	601a      	str	r2, [r3, #0]
 8012ade:	687b      	ldr	r3, [r7, #4]
 8012ae0:	4618      	mov	r0, r3
 8012ae2:	370c      	adds	r7, #12
 8012ae4:	46bd      	mov	sp, r7
 8012ae6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012aea:	4770      	bx	lr

08012aec <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE6_M_endEv>:
      _M_end() _GLIBCXX_NOEXCEPT
 8012aec:	b480      	push	{r7}
 8012aee:	b083      	sub	sp, #12
 8012af0:	af00      	add	r7, sp, #0
 8012af2:	6078      	str	r0, [r7, #4]
      { return &this->_M_impl._M_header; }
 8012af4:	687b      	ldr	r3, [r7, #4]
 8012af6:	3304      	adds	r3, #4
 8012af8:	4618      	mov	r0, r3
 8012afa:	370c      	adds	r7, #12
 8012afc:	46bd      	mov	sp, r7
 8012afe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012b02:	4770      	bx	lr

08012b04 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE14_M_lower_boundEPSt13_Rb_tree_nodeISH_EPSt18_Rb_tree_node_baseRS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8012b04:	b590      	push	{r4, r7, lr}
 8012b06:	b087      	sub	sp, #28
 8012b08:	af00      	add	r7, sp, #0
 8012b0a:	60f8      	str	r0, [r7, #12]
 8012b0c:	60b9      	str	r1, [r7, #8]
 8012b0e:	607a      	str	r2, [r7, #4]
 8012b10:	603b      	str	r3, [r7, #0]
      while (__x != 0)
 8012b12:	68bb      	ldr	r3, [r7, #8]
 8012b14:	2b00      	cmp	r3, #0
 8012b16:	d01b      	beq.n	8012b50 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE14_M_lower_boundEPSt13_Rb_tree_nodeISH_EPSt18_Rb_tree_node_baseRS7_+0x4c>
	if (!_M_impl._M_key_compare(_S_key(__x), __k))
 8012b18:	68fc      	ldr	r4, [r7, #12]
 8012b1a:	68b8      	ldr	r0, [r7, #8]
 8012b1c:	f000 f873 	bl	8012c06 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE6_S_keyEPKSt13_Rb_tree_nodeISH_E>
 8012b20:	4603      	mov	r3, r0
 8012b22:	683a      	ldr	r2, [r7, #0]
 8012b24:	4619      	mov	r1, r3
 8012b26:	4620      	mov	r0, r4
 8012b28:	f7f3 ffd1 	bl	8006ace <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8012b2c:	4603      	mov	r3, r0
 8012b2e:	f083 0301 	eor.w	r3, r3, #1
 8012b32:	b2db      	uxtb	r3, r3
 8012b34:	2b00      	cmp	r3, #0
 8012b36:	d006      	beq.n	8012b46 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE14_M_lower_boundEPSt13_Rb_tree_nodeISH_EPSt18_Rb_tree_node_baseRS7_+0x42>
	  __y = __x, __x = _S_left(__x);
 8012b38:	68bb      	ldr	r3, [r7, #8]
 8012b3a:	607b      	str	r3, [r7, #4]
 8012b3c:	68b8      	ldr	r0, [r7, #8]
 8012b3e:	f7ff fe9c 	bl	801287a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE7_S_leftEPSt18_Rb_tree_node_base>
 8012b42:	60b8      	str	r0, [r7, #8]
 8012b44:	e7e5      	b.n	8012b12 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE14_M_lower_boundEPSt13_Rb_tree_nodeISH_EPSt18_Rb_tree_node_baseRS7_+0xe>
	  __x = _S_right(__x);
 8012b46:	68b8      	ldr	r0, [r7, #8]
 8012b48:	f7ff fe8b 	bl	8012862 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE8_S_rightEPSt18_Rb_tree_node_base>
 8012b4c:	60b8      	str	r0, [r7, #8]
      while (__x != 0)
 8012b4e:	e7e0      	b.n	8012b12 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE14_M_lower_boundEPSt13_Rb_tree_nodeISH_EPSt18_Rb_tree_node_baseRS7_+0xe>
      return iterator(__y);
 8012b50:	f107 0314 	add.w	r3, r7, #20
 8012b54:	6879      	ldr	r1, [r7, #4]
 8012b56:	4618      	mov	r0, r3
 8012b58:	f7ff ffb9 	bl	8012ace <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEC1EPSt18_Rb_tree_node_base>
 8012b5c:	697b      	ldr	r3, [r7, #20]
    }
 8012b5e:	4618      	mov	r0, r3
 8012b60:	371c      	adds	r7, #28
 8012b62:	46bd      	mov	sp, r7
 8012b64:	bd90      	pop	{r4, r7, pc}

08012b66 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE6_S_keyEPKSt18_Rb_tree_node_base>:
      _S_key(_Const_Base_ptr __x)
 8012b66:	b580      	push	{r7, lr}
 8012b68:	b082      	sub	sp, #8
 8012b6a:	af00      	add	r7, sp, #0
 8012b6c:	6078      	str	r0, [r7, #4]
      { return _S_key(static_cast<_Const_Link_type>(__x)); }
 8012b6e:	6878      	ldr	r0, [r7, #4]
 8012b70:	f000 f849 	bl	8012c06 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE6_S_keyEPKSt13_Rb_tree_nodeISH_E>
 8012b74:	4603      	mov	r3, r0
 8012b76:	4618      	mov	r0, r3
 8012b78:	3708      	adds	r7, #8
 8012b7a:	46bd      	mov	sp, r7
 8012b7c:	bd80      	pop	{r7, pc}

08012b7e <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISD_EEEEE6_M_ptrEv>:
      _M_ptr() noexcept
 8012b7e:	b580      	push	{r7, lr}
 8012b80:	b082      	sub	sp, #8
 8012b82:	af00      	add	r7, sp, #0
 8012b84:	6078      	str	r0, [r7, #4]
      { return static_cast<_Tp*>(_M_addr()); }
 8012b86:	6878      	ldr	r0, [r7, #4]
 8012b88:	f000 f8aa 	bl	8012ce0 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISD_EEEEE7_M_addrEv>
 8012b8c:	4603      	mov	r3, r0
 8012b8e:	4618      	mov	r0, r3
 8012b90:	3708      	adds	r7, #8
 8012b92:	46bd      	mov	sp, r7
 8012b94:	bd80      	pop	{r7, pc}

08012b96 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_construct_auxIPcEEvT_S7_St12__false_type>:
        _M_construct_aux(_InIterator __beg, _InIterator __end,
 8012b96:	b590      	push	{r4, r7, lr}
 8012b98:	b087      	sub	sp, #28
 8012b9a:	af00      	add	r7, sp, #0
 8012b9c:	60f8      	str	r0, [r7, #12]
 8012b9e:	60b9      	str	r1, [r7, #8]
 8012ba0:	607a      	str	r2, [r7, #4]
 8012ba2:	703b      	strb	r3, [r7, #0]
          _M_construct(__beg, __end, _Tag());
 8012ba4:	4623      	mov	r3, r4
 8012ba6:	687a      	ldr	r2, [r7, #4]
 8012ba8:	68b9      	ldr	r1, [r7, #8]
 8012baa:	68f8      	ldr	r0, [r7, #12]
 8012bac:	f000 f8b8 	bl	8012d20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag>
	}
 8012bb0:	bf00      	nop
 8012bb2:	371c      	adds	r7, #28
 8012bb4:	46bd      	mov	sp, r7
 8012bb6:	bd90      	pop	{r4, r7, pc}

08012bb8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeISH_E>:
      _M_destroy_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 8012bb8:	b590      	push	{r4, r7, lr}
 8012bba:	b083      	sub	sp, #12
 8012bbc:	af00      	add	r7, sp, #0
 8012bbe:	6078      	str	r0, [r7, #4]
 8012bc0:	6039      	str	r1, [r7, #0]
	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
 8012bc2:	6878      	ldr	r0, [r7, #4]
 8012bc4:	f000 f8f4 	bl	8012db0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE21_M_get_Node_allocatorEv>
 8012bc8:	4604      	mov	r4, r0
 8012bca:	6838      	ldr	r0, [r7, #0]
 8012bcc:	f7ff fe21 	bl	8012812 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEE9_M_valptrEv>
 8012bd0:	4603      	mov	r3, r0
 8012bd2:	4619      	mov	r1, r3
 8012bd4:	4620      	mov	r0, r4
 8012bd6:	f000 f8f6 	bl	8012dc6 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISD_EEEEEEE7destroyISI_EEvRSK_PT_>
      }
 8012bda:	bf00      	nop
 8012bdc:	370c      	adds	r7, #12
 8012bde:	46bd      	mov	sp, r7
 8012be0:	bd90      	pop	{r4, r7, pc}

08012be2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE11_M_put_nodeEPSt13_Rb_tree_nodeISH_E>:
      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 8012be2:	b580      	push	{r7, lr}
 8012be4:	b082      	sub	sp, #8
 8012be6:	af00      	add	r7, sp, #0
 8012be8:	6078      	str	r0, [r7, #4]
 8012bea:	6039      	str	r1, [r7, #0]
      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
 8012bec:	6878      	ldr	r0, [r7, #4]
 8012bee:	f000 f8df 	bl	8012db0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE21_M_get_Node_allocatorEv>
 8012bf2:	4603      	mov	r3, r0
 8012bf4:	2201      	movs	r2, #1
 8012bf6:	6839      	ldr	r1, [r7, #0]
 8012bf8:	4618      	mov	r0, r3
 8012bfa:	f000 f8f1 	bl	8012de0 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISD_EEEEEEE10deallocateERSK_PSJ_j>
 8012bfe:	bf00      	nop
 8012c00:	3708      	adds	r7, #8
 8012c02:	46bd      	mov	sp, r7
 8012c04:	bd80      	pop	{r7, pc}

08012c06 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE6_S_keyEPKSt13_Rb_tree_nodeISH_E>:
      _S_key(_Const_Link_type __x)
 8012c06:	b580      	push	{r7, lr}
 8012c08:	b084      	sub	sp, #16
 8012c0a:	af00      	add	r7, sp, #0
 8012c0c:	6078      	str	r0, [r7, #4]
	return _KeyOfValue()(*__x->_M_valptr());
 8012c0e:	6878      	ldr	r0, [r7, #4]
 8012c10:	f000 f8f5 	bl	8012dfe <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEE9_M_valptrEv>
 8012c14:	4602      	mov	r2, r0
 8012c16:	f107 030c 	add.w	r3, r7, #12
 8012c1a:	4611      	mov	r1, r2
 8012c1c:	4618      	mov	r0, r3
 8012c1e:	f000 f8fc 	bl	8012e1a <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEclERKSH_>
 8012c22:	4603      	mov	r3, r0
      }
 8012c24:	4618      	mov	r0, r3
 8012c26:	3710      	adds	r7, #16
 8012c28:	46bd      	mov	sp, r7
 8012c2a:	bd80      	pop	{r7, pc}

08012c2c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 8012c2c:	b580      	push	{r7, lr}
 8012c2e:	b084      	sub	sp, #16
 8012c30:	af00      	add	r7, sp, #0
 8012c32:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_header._M_left); }
 8012c34:	687b      	ldr	r3, [r7, #4]
 8012c36:	68da      	ldr	r2, [r3, #12]
 8012c38:	f107 030c 	add.w	r3, r7, #12
 8012c3c:	4611      	mov	r1, r2
 8012c3e:	4618      	mov	r0, r3
 8012c40:	f7ff ff45 	bl	8012ace <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEC1EPSt18_Rb_tree_node_base>
 8012c44:	68fb      	ldr	r3, [r7, #12]
 8012c46:	4618      	mov	r0, r3
 8012c48:	3710      	adds	r7, #16
 8012c4a:	46bd      	mov	sp, r7
 8012c4c:	bd80      	pop	{r7, pc}

08012c4e <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISG_EEEEERS1_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 8012c4e:	b580      	push	{r7, lr}
 8012c50:	b084      	sub	sp, #16
 8012c52:	af00      	add	r7, sp, #0
 8012c54:	60f8      	str	r0, [r7, #12]
 8012c56:	60b9      	str	r1, [r7, #8]
 8012c58:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 8012c5a:	68b8      	ldr	r0, [r7, #8]
 8012c5c:	f000 f8e9 	bl	8012e32 <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISD_EEEEEEOT_RNSt16remove_referenceISM_E4typeE>
 8012c60:	4603      	mov	r3, r0
 8012c62:	681a      	ldr	r2, [r3, #0]
 8012c64:	68fb      	ldr	r3, [r7, #12]
 8012c66:	601a      	str	r2, [r3, #0]
 8012c68:	6878      	ldr	r0, [r7, #4]
 8012c6a:	f7f4 fcfa 	bl	8007662 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
 8012c6e:	4603      	mov	r3, r0
 8012c70:	681a      	ldr	r2, [r3, #0]
 8012c72:	68fb      	ldr	r3, [r7, #12]
 8012c74:	605a      	str	r2, [r3, #4]
 8012c76:	68fb      	ldr	r3, [r7, #12]
 8012c78:	4618      	mov	r0, r3
 8012c7a:	3710      	adds	r7, #16
 8012c7c:	46bd      	mov	sp, r7
 8012c7e:	bd80      	pop	{r7, pc}

08012c80 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEmmEv>:
      operator--() _GLIBCXX_NOEXCEPT
 8012c80:	b580      	push	{r7, lr}
 8012c82:	b082      	sub	sp, #8
 8012c84:	af00      	add	r7, sp, #0
 8012c86:	6078      	str	r0, [r7, #4]
	_M_node = _Rb_tree_decrement(_M_node);
 8012c88:	687b      	ldr	r3, [r7, #4]
 8012c8a:	681b      	ldr	r3, [r3, #0]
 8012c8c:	4618      	mov	r0, r3
 8012c8e:	f010 fc99 	bl	80235c4 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 8012c92:	4602      	mov	r2, r0
 8012c94:	687b      	ldr	r3, [r7, #4]
 8012c96:	601a      	str	r2, [r3, #0]
	return *this;
 8012c98:	687b      	ldr	r3, [r7, #4]
      }
 8012c9a:	4618      	mov	r0, r3
 8012c9c:	3708      	adds	r7, #8
 8012c9e:	46bd      	mov	sp, r7
 8012ca0:	bd80      	pop	{r7, pc}

08012ca2 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE11_Alloc_nodeclISH_EEPSt13_Rb_tree_nodeISH_EOT_>:
	  operator()(_Arg&& __arg) const
 8012ca2:	b590      	push	{r4, r7, lr}
 8012ca4:	b083      	sub	sp, #12
 8012ca6:	af00      	add	r7, sp, #0
 8012ca8:	6078      	str	r0, [r7, #4]
 8012caa:	6039      	str	r1, [r7, #0]
	  { return _M_t._M_create_node(_GLIBCXX_FORWARD(_Arg, __arg)); }
 8012cac:	687b      	ldr	r3, [r7, #4]
 8012cae:	681c      	ldr	r4, [r3, #0]
 8012cb0:	6838      	ldr	r0, [r7, #0]
 8012cb2:	f7ff fe9f 	bl	80129f4 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEOT_RNSt16remove_referenceISI_E4typeE>
 8012cb6:	4603      	mov	r3, r0
 8012cb8:	4619      	mov	r1, r3
 8012cba:	4620      	mov	r0, r4
 8012cbc:	f000 f8c4 	bl	8012e48 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE14_M_create_nodeIJSH_EEEPSt13_Rb_tree_nodeISH_EDpOT_>
 8012cc0:	4603      	mov	r3, r0
 8012cc2:	4618      	mov	r0, r3
 8012cc4:	370c      	adds	r7, #12
 8012cc6:	46bd      	mov	sp, r7
 8012cc8:	bd90      	pop	{r4, r7, pc}

08012cca <_ZSt7forwardISt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISD_EEEEEEOT_RNSt16remove_referenceISK_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8012cca:	b480      	push	{r7}
 8012ccc:	b083      	sub	sp, #12
 8012cce:	af00      	add	r7, sp, #0
 8012cd0:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8012cd2:	687b      	ldr	r3, [r7, #4]
 8012cd4:	4618      	mov	r0, r3
 8012cd6:	370c      	adds	r7, #12
 8012cd8:	46bd      	mov	sp, r7
 8012cda:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012cde:	4770      	bx	lr

08012ce0 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISD_EEEEE7_M_addrEv>:
      _M_addr() noexcept
 8012ce0:	b480      	push	{r7}
 8012ce2:	b083      	sub	sp, #12
 8012ce4:	af00      	add	r7, sp, #0
 8012ce6:	6078      	str	r0, [r7, #4]
      { return static_cast<void*>(&_M_storage); }
 8012ce8:	687b      	ldr	r3, [r7, #4]
 8012cea:	4618      	mov	r0, r3
 8012cec:	370c      	adds	r7, #12
 8012cee:	46bd      	mov	sp, r7
 8012cf0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012cf4:	4770      	bx	lr

08012cf6 <_ZSt8distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_>:
    distance(_InputIterator __first, _InputIterator __last)
 8012cf6:	b5b0      	push	{r4, r5, r7, lr}
 8012cf8:	b082      	sub	sp, #8
 8012cfa:	af00      	add	r7, sp, #0
 8012cfc:	6078      	str	r0, [r7, #4]
 8012cfe:	6039      	str	r1, [r7, #0]
      return std::__distance(__first, __last,
 8012d00:	687c      	ldr	r4, [r7, #4]
			     std::__iterator_category(__first));
 8012d02:	1d3b      	adds	r3, r7, #4
 8012d04:	4618      	mov	r0, r3
 8012d06:	f000 f8c6 	bl	8012e96 <_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_>
      return std::__distance(__first, __last,
 8012d0a:	462a      	mov	r2, r5
 8012d0c:	6839      	ldr	r1, [r7, #0]
 8012d0e:	4620      	mov	r0, r4
 8012d10:	f000 f8cb 	bl	8012eaa <_ZSt10__distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_St26random_access_iterator_tag>
 8012d14:	4603      	mov	r3, r0
    }
 8012d16:	4618      	mov	r0, r3
 8012d18:	3708      	adds	r7, #8
 8012d1a:	46bd      	mov	sp, r7
 8012d1c:	bdb0      	pop	{r4, r5, r7, pc}
	...

08012d20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag>:
      basic_string<_CharT, _Traits, _Alloc>::
 8012d20:	b580      	push	{r7, lr}
 8012d22:	b086      	sub	sp, #24
 8012d24:	af00      	add	r7, sp, #0
 8012d26:	60f8      	str	r0, [r7, #12]
 8012d28:	60b9      	str	r1, [r7, #8]
 8012d2a:	607a      	str	r2, [r7, #4]
 8012d2c:	703b      	strb	r3, [r7, #0]
	if (__gnu_cxx::__is_null_pointer(__beg) && __beg != __end)
 8012d2e:	68b8      	ldr	r0, [r7, #8]
 8012d30:	f000 f8a1 	bl	8012e76 <_ZN9__gnu_cxx17__is_null_pointerIcEEbPT_>
 8012d34:	4603      	mov	r3, r0
 8012d36:	2b00      	cmp	r3, #0
 8012d38:	d005      	beq.n	8012d46 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x26>
 8012d3a:	68ba      	ldr	r2, [r7, #8]
 8012d3c:	687b      	ldr	r3, [r7, #4]
 8012d3e:	429a      	cmp	r2, r3
 8012d40:	d001      	beq.n	8012d46 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x26>
 8012d42:	2301      	movs	r3, #1
 8012d44:	e000      	b.n	8012d48 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x28>
 8012d46:	2300      	movs	r3, #0
 8012d48:	2b00      	cmp	r3, #0
 8012d4a:	d002      	beq.n	8012d52 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x32>
	  std::__throw_logic_error(__N("basic_string::"
 8012d4c:	4817      	ldr	r0, [pc, #92]	; (8012dac <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x8c>)
 8012d4e:	f010 fc9a 	bl	8023686 <_ZSt19__throw_logic_errorPKc>
	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
 8012d52:	6879      	ldr	r1, [r7, #4]
 8012d54:	68b8      	ldr	r0, [r7, #8]
 8012d56:	f7ff ffce 	bl	8012cf6 <_ZSt8distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_>
 8012d5a:	4603      	mov	r3, r0
 8012d5c:	617b      	str	r3, [r7, #20]
	if (__dnew > size_type(_S_local_capacity))
 8012d5e:	697b      	ldr	r3, [r7, #20]
 8012d60:	2b0f      	cmp	r3, #15
 8012d62:	d910      	bls.n	8012d86 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x66>
	    _M_data(_M_create(__dnew, size_type(0)));
 8012d64:	f107 0314 	add.w	r3, r7, #20
 8012d68:	2200      	movs	r2, #0
 8012d6a:	4619      	mov	r1, r3
 8012d6c:	68f8      	ldr	r0, [r7, #12]
 8012d6e:	f010 fd5d 	bl	802382c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>
 8012d72:	4603      	mov	r3, r0
 8012d74:	4619      	mov	r1, r3
 8012d76:	68f8      	ldr	r0, [r7, #12]
 8012d78:	f010 fd4a 	bl	8023810 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc>
	    _M_capacity(__dnew);
 8012d7c:	697b      	ldr	r3, [r7, #20]
 8012d7e:	4619      	mov	r1, r3
 8012d80:	68f8      	ldr	r0, [r7, #12]
 8012d82:	f010 fd4b 	bl	802381c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEj>
	  { this->_S_copy_chars(_M_data(), __beg, __end); }
 8012d86:	68f8      	ldr	r0, [r7, #12]
 8012d88:	f010 fd44 	bl	8023814 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
 8012d8c:	4603      	mov	r3, r0
 8012d8e:	687a      	ldr	r2, [r7, #4]
 8012d90:	68b9      	ldr	r1, [r7, #8]
 8012d92:	4618      	mov	r0, r3
 8012d94:	f010 fdaf 	bl	80238f6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcS5_S5_>
	_M_set_length(__dnew);
 8012d98:	697b      	ldr	r3, [r7, #20]
 8012d9a:	4619      	mov	r1, r3
 8012d9c:	68f8      	ldr	r0, [r7, #12]
 8012d9e:	f010 fd3f 	bl	8023820 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEj>
      }
 8012da2:	bf00      	nop
 8012da4:	3718      	adds	r7, #24
 8012da6:	46bd      	mov	sp, r7
 8012da8:	bd80      	pop	{r7, pc}
 8012daa:	bf00      	nop
 8012dac:	080297d8 	.word	0x080297d8

08012db0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE21_M_get_Node_allocatorEv>:
      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
 8012db0:	b480      	push	{r7}
 8012db2:	b083      	sub	sp, #12
 8012db4:	af00      	add	r7, sp, #0
 8012db6:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 8012db8:	687b      	ldr	r3, [r7, #4]
 8012dba:	4618      	mov	r0, r3
 8012dbc:	370c      	adds	r7, #12
 8012dbe:	46bd      	mov	sp, r7
 8012dc0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012dc4:	4770      	bx	lr

08012dc6 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISD_EEEEEEE7destroyISI_EEvRSK_PT_>:
	destroy(allocator_type& __a, _Up* __p)
 8012dc6:	b580      	push	{r7, lr}
 8012dc8:	b082      	sub	sp, #8
 8012dca:	af00      	add	r7, sp, #0
 8012dcc:	6078      	str	r0, [r7, #4]
 8012dce:	6039      	str	r1, [r7, #0]
	{ __a.destroy(__p); }
 8012dd0:	6839      	ldr	r1, [r7, #0]
 8012dd2:	6878      	ldr	r0, [r7, #4]
 8012dd4:	f000 f878 	bl	8012ec8 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISE_EEEEEE7destroyISJ_EEvPT_>
 8012dd8:	bf00      	nop
 8012dda:	3708      	adds	r7, #8
 8012ddc:	46bd      	mov	sp, r7
 8012dde:	bd80      	pop	{r7, pc}

08012de0 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISD_EEEEEEE10deallocateERSK_PSJ_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 8012de0:	b580      	push	{r7, lr}
 8012de2:	b084      	sub	sp, #16
 8012de4:	af00      	add	r7, sp, #0
 8012de6:	60f8      	str	r0, [r7, #12]
 8012de8:	60b9      	str	r1, [r7, #8]
 8012dea:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 8012dec:	687a      	ldr	r2, [r7, #4]
 8012dee:	68b9      	ldr	r1, [r7, #8]
 8012df0:	68f8      	ldr	r0, [r7, #12]
 8012df2:	f000 f875 	bl	8012ee0 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISE_EEEEEE10deallocateEPSK_j>
 8012df6:	bf00      	nop
 8012df8:	3710      	adds	r7, #16
 8012dfa:	46bd      	mov	sp, r7
 8012dfc:	bd80      	pop	{r7, pc}

08012dfe <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEE9_M_valptrEv>:
      _M_valptr() const
 8012dfe:	b580      	push	{r7, lr}
 8012e00:	b082      	sub	sp, #8
 8012e02:	af00      	add	r7, sp, #0
 8012e04:	6078      	str	r0, [r7, #4]
      { return _M_storage._M_ptr(); }
 8012e06:	687b      	ldr	r3, [r7, #4]
 8012e08:	3310      	adds	r3, #16
 8012e0a:	4618      	mov	r0, r3
 8012e0c:	f000 f874 	bl	8012ef8 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISD_EEEEE6_M_ptrEv>
 8012e10:	4603      	mov	r3, r0
 8012e12:	4618      	mov	r0, r3
 8012e14:	3708      	adds	r7, #8
 8012e16:	46bd      	mov	sp, r7
 8012e18:	bd80      	pop	{r7, pc}

08012e1a <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEclERKSH_>:
      operator()(const _Pair& __x) const
 8012e1a:	b480      	push	{r7}
 8012e1c:	b083      	sub	sp, #12
 8012e1e:	af00      	add	r7, sp, #0
 8012e20:	6078      	str	r0, [r7, #4]
 8012e22:	6039      	str	r1, [r7, #0]
      { return __x.first; }
 8012e24:	683b      	ldr	r3, [r7, #0]
 8012e26:	4618      	mov	r0, r3
 8012e28:	370c      	adds	r7, #12
 8012e2a:	46bd      	mov	sp, r7
 8012e2c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012e30:	4770      	bx	lr

08012e32 <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISD_EEEEEEOT_RNSt16remove_referenceISM_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8012e32:	b480      	push	{r7}
 8012e34:	b083      	sub	sp, #12
 8012e36:	af00      	add	r7, sp, #0
 8012e38:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8012e3a:	687b      	ldr	r3, [r7, #4]
 8012e3c:	4618      	mov	r0, r3
 8012e3e:	370c      	adds	r7, #12
 8012e40:	46bd      	mov	sp, r7
 8012e42:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012e46:	4770      	bx	lr

08012e48 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE14_M_create_nodeIJSH_EEEPSt13_Rb_tree_nodeISH_EDpOT_>:
	_M_create_node(_Args&&... __args)
 8012e48:	b580      	push	{r7, lr}
 8012e4a:	b084      	sub	sp, #16
 8012e4c:	af00      	add	r7, sp, #0
 8012e4e:	6078      	str	r0, [r7, #4]
 8012e50:	6039      	str	r1, [r7, #0]
	  _Link_type __tmp = _M_get_node();
 8012e52:	6878      	ldr	r0, [r7, #4]
 8012e54:	f000 f85c 	bl	8012f10 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE11_M_get_nodeEv>
 8012e58:	60f8      	str	r0, [r7, #12]
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
 8012e5a:	6838      	ldr	r0, [r7, #0]
 8012e5c:	f7ff fdca 	bl	80129f4 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEOT_RNSt16remove_referenceISI_E4typeE>
 8012e60:	4603      	mov	r3, r0
 8012e62:	461a      	mov	r2, r3
 8012e64:	68f9      	ldr	r1, [r7, #12]
 8012e66:	6878      	ldr	r0, [r7, #4]
 8012e68:	f000 f863 	bl	8012f32 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE17_M_construct_nodeIJSH_EEEvPSt13_Rb_tree_nodeISH_EDpOT_>
	  return __tmp;
 8012e6c:	68fb      	ldr	r3, [r7, #12]
	}
 8012e6e:	4618      	mov	r0, r3
 8012e70:	3710      	adds	r7, #16
 8012e72:	46bd      	mov	sp, r7
 8012e74:	bd80      	pop	{r7, pc}

08012e76 <_ZN9__gnu_cxx17__is_null_pointerIcEEbPT_>:
    __is_null_pointer(_Type* __ptr)
 8012e76:	b480      	push	{r7}
 8012e78:	b083      	sub	sp, #12
 8012e7a:	af00      	add	r7, sp, #0
 8012e7c:	6078      	str	r0, [r7, #4]
    { return __ptr == 0; }
 8012e7e:	687b      	ldr	r3, [r7, #4]
 8012e80:	2b00      	cmp	r3, #0
 8012e82:	bf0c      	ite	eq
 8012e84:	2301      	moveq	r3, #1
 8012e86:	2300      	movne	r3, #0
 8012e88:	b2db      	uxtb	r3, r3
 8012e8a:	4618      	mov	r0, r3
 8012e8c:	370c      	adds	r7, #12
 8012e8e:	46bd      	mov	sp, r7
 8012e90:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012e94:	4770      	bx	lr

08012e96 <_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_>:
    __iterator_category(const _Iter&)
 8012e96:	b480      	push	{r7}
 8012e98:	b083      	sub	sp, #12
 8012e9a:	af00      	add	r7, sp, #0
 8012e9c:	6078      	str	r0, [r7, #4]
    { return typename iterator_traits<_Iter>::iterator_category(); }
 8012e9e:	4618      	mov	r0, r3
 8012ea0:	370c      	adds	r7, #12
 8012ea2:	46bd      	mov	sp, r7
 8012ea4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012ea8:	4770      	bx	lr

08012eaa <_ZSt10__distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
 8012eaa:	b480      	push	{r7}
 8012eac:	b085      	sub	sp, #20
 8012eae:	af00      	add	r7, sp, #0
 8012eb0:	60f8      	str	r0, [r7, #12]
 8012eb2:	60b9      	str	r1, [r7, #8]
 8012eb4:	713a      	strb	r2, [r7, #4]
      return __last - __first;
 8012eb6:	68ba      	ldr	r2, [r7, #8]
 8012eb8:	68fb      	ldr	r3, [r7, #12]
 8012eba:	1ad3      	subs	r3, r2, r3
    }
 8012ebc:	4618      	mov	r0, r3
 8012ebe:	3714      	adds	r7, #20
 8012ec0:	46bd      	mov	sp, r7
 8012ec2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012ec6:	4770      	bx	lr

08012ec8 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISE_EEEEEE7destroyISJ_EEvPT_>:
	destroy(_Up* __p)
 8012ec8:	b580      	push	{r7, lr}
 8012eca:	b082      	sub	sp, #8
 8012ecc:	af00      	add	r7, sp, #0
 8012ece:	6078      	str	r0, [r7, #4]
 8012ed0:	6039      	str	r1, [r7, #0]
	{ __p->~_Up(); }
 8012ed2:	6838      	ldr	r0, [r7, #0]
 8012ed4:	f7ff f8ae 	bl	8012034 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISB_EEEED1Ev>
 8012ed8:	bf00      	nop
 8012eda:	3708      	adds	r7, #8
 8012edc:	46bd      	mov	sp, r7
 8012ede:	bd80      	pop	{r7, pc}

08012ee0 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISE_EEEEEE10deallocateEPSK_j>:
      deallocate(pointer __p, size_type)
 8012ee0:	b580      	push	{r7, lr}
 8012ee2:	b084      	sub	sp, #16
 8012ee4:	af00      	add	r7, sp, #0
 8012ee6:	60f8      	str	r0, [r7, #12]
 8012ee8:	60b9      	str	r1, [r7, #8]
 8012eea:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 8012eec:	68b8      	ldr	r0, [r7, #8]
 8012eee:	f010 faef 	bl	80234d0 <_ZdlPv>
      }
 8012ef2:	3710      	adds	r7, #16
 8012ef4:	46bd      	mov	sp, r7
 8012ef6:	bd80      	pop	{r7, pc}

08012ef8 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISD_EEEEE6_M_ptrEv>:
      _M_ptr() const noexcept
 8012ef8:	b580      	push	{r7, lr}
 8012efa:	b082      	sub	sp, #8
 8012efc:	af00      	add	r7, sp, #0
 8012efe:	6078      	str	r0, [r7, #4]
      { return static_cast<const _Tp*>(_M_addr()); }
 8012f00:	6878      	ldr	r0, [r7, #4]
 8012f02:	f000 f836 	bl	8012f72 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISD_EEEEE7_M_addrEv>
 8012f06:	4603      	mov	r3, r0
 8012f08:	4618      	mov	r0, r3
 8012f0a:	3708      	adds	r7, #8
 8012f0c:	46bd      	mov	sp, r7
 8012f0e:	bd80      	pop	{r7, pc}

08012f10 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE11_M_get_nodeEv>:
      _M_get_node()
 8012f10:	b580      	push	{r7, lr}
 8012f12:	b082      	sub	sp, #8
 8012f14:	af00      	add	r7, sp, #0
 8012f16:	6078      	str	r0, [r7, #4]
      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
 8012f18:	6878      	ldr	r0, [r7, #4]
 8012f1a:	f7ff ff49 	bl	8012db0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE21_M_get_Node_allocatorEv>
 8012f1e:	4603      	mov	r3, r0
 8012f20:	2101      	movs	r1, #1
 8012f22:	4618      	mov	r0, r3
 8012f24:	f000 f830 	bl	8012f88 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISD_EEEEEEE8allocateERSK_j>
 8012f28:	4603      	mov	r3, r0
 8012f2a:	4618      	mov	r0, r3
 8012f2c:	3708      	adds	r7, #8
 8012f2e:	46bd      	mov	sp, r7
 8012f30:	bd80      	pop	{r7, pc}

08012f32 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE17_M_construct_nodeIJSH_EEEvPSt13_Rb_tree_nodeISH_EDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
 8012f32:	b5b0      	push	{r4, r5, r7, lr}
 8012f34:	b084      	sub	sp, #16
 8012f36:	af00      	add	r7, sp, #0
 8012f38:	60f8      	str	r0, [r7, #12]
 8012f3a:	60b9      	str	r1, [r7, #8]
 8012f3c:	607a      	str	r2, [r7, #4]
	      ::new(__node) _Rb_tree_node<_Val>;
 8012f3e:	68bb      	ldr	r3, [r7, #8]
 8012f40:	4619      	mov	r1, r3
 8012f42:	202c      	movs	r0, #44	; 0x2c
 8012f44:	f7ee f889 	bl	800105a <_ZnwjPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
 8012f48:	68f8      	ldr	r0, [r7, #12]
 8012f4a:	f7ff ff31 	bl	8012db0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE21_M_get_Node_allocatorEv>
 8012f4e:	4604      	mov	r4, r0
 8012f50:	68b8      	ldr	r0, [r7, #8]
 8012f52:	f7ff fc5e 	bl	8012812 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEE9_M_valptrEv>
 8012f56:	4605      	mov	r5, r0
 8012f58:	6878      	ldr	r0, [r7, #4]
 8012f5a:	f7ff fd4b 	bl	80129f4 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEOT_RNSt16remove_referenceISI_E4typeE>
 8012f5e:	4603      	mov	r3, r0
 8012f60:	461a      	mov	r2, r3
 8012f62:	4629      	mov	r1, r5
 8012f64:	4620      	mov	r0, r4
 8012f66:	f000 f81e 	bl	8012fa6 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISD_EEEEEEE9constructISI_JSI_EEEvRSK_PT_DpOT0_>
	}
 8012f6a:	bf00      	nop
 8012f6c:	3710      	adds	r7, #16
 8012f6e:	46bd      	mov	sp, r7
 8012f70:	bdb0      	pop	{r4, r5, r7, pc}

08012f72 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISD_EEEEE7_M_addrEv>:
      _M_addr() const noexcept
 8012f72:	b480      	push	{r7}
 8012f74:	b083      	sub	sp, #12
 8012f76:	af00      	add	r7, sp, #0
 8012f78:	6078      	str	r0, [r7, #4]
      { return static_cast<const void*>(&_M_storage); }
 8012f7a:	687b      	ldr	r3, [r7, #4]
 8012f7c:	4618      	mov	r0, r3
 8012f7e:	370c      	adds	r7, #12
 8012f80:	46bd      	mov	sp, r7
 8012f82:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012f86:	4770      	bx	lr

08012f88 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISD_EEEEEEE8allocateERSK_j>:
      allocate(allocator_type& __a, size_type __n)
 8012f88:	b580      	push	{r7, lr}
 8012f8a:	b082      	sub	sp, #8
 8012f8c:	af00      	add	r7, sp, #0
 8012f8e:	6078      	str	r0, [r7, #4]
 8012f90:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 8012f92:	2200      	movs	r2, #0
 8012f94:	6839      	ldr	r1, [r7, #0]
 8012f96:	6878      	ldr	r0, [r7, #4]
 8012f98:	f000 f818 	bl	8012fcc <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISE_EEEEEE8allocateEjPKv>
 8012f9c:	4603      	mov	r3, r0
 8012f9e:	4618      	mov	r0, r3
 8012fa0:	3708      	adds	r7, #8
 8012fa2:	46bd      	mov	sp, r7
 8012fa4:	bd80      	pop	{r7, pc}

08012fa6 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISD_EEEEEEE9constructISI_JSI_EEEvRSK_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 8012fa6:	b580      	push	{r7, lr}
 8012fa8:	b084      	sub	sp, #16
 8012faa:	af00      	add	r7, sp, #0
 8012fac:	60f8      	str	r0, [r7, #12]
 8012fae:	60b9      	str	r1, [r7, #8]
 8012fb0:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 8012fb2:	6878      	ldr	r0, [r7, #4]
 8012fb4:	f7ff fd1e 	bl	80129f4 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEOT_RNSt16remove_referenceISI_E4typeE>
 8012fb8:	4603      	mov	r3, r0
 8012fba:	461a      	mov	r2, r3
 8012fbc:	68b9      	ldr	r1, [r7, #8]
 8012fbe:	68f8      	ldr	r0, [r7, #12]
 8012fc0:	f000 f839 	bl	8013036 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISE_EEEEEE9constructISJ_JSJ_EEEvPT_DpOT0_>
 8012fc4:	bf00      	nop
 8012fc6:	3710      	adds	r7, #16
 8012fc8:	46bd      	mov	sp, r7
 8012fca:	bd80      	pop	{r7, pc}

08012fcc <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISE_EEEEEE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 8012fcc:	b580      	push	{r7, lr}
 8012fce:	b084      	sub	sp, #16
 8012fd0:	af00      	add	r7, sp, #0
 8012fd2:	60f8      	str	r0, [r7, #12]
 8012fd4:	60b9      	str	r1, [r7, #8]
 8012fd6:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 8012fd8:	68f8      	ldr	r0, [r7, #12]
 8012fda:	f000 f845 	bl	8013068 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISE_EEEEEE8max_sizeEv>
 8012fde:	4602      	mov	r2, r0
 8012fe0:	68bb      	ldr	r3, [r7, #8]
 8012fe2:	4293      	cmp	r3, r2
 8012fe4:	bf8c      	ite	hi
 8012fe6:	2301      	movhi	r3, #1
 8012fe8:	2300      	movls	r3, #0
 8012fea:	b2db      	uxtb	r3, r3
 8012fec:	2b00      	cmp	r3, #0
 8012fee:	d001      	beq.n	8012ff4 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISE_EEEEEE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 8012ff0:	f010 fb46 	bl	8023680 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 8012ff4:	68bb      	ldr	r3, [r7, #8]
 8012ff6:	222c      	movs	r2, #44	; 0x2c
 8012ff8:	fb02 f303 	mul.w	r3, r2, r3
 8012ffc:	4618      	mov	r0, r3
 8012ffe:	f010 fa7a 	bl	80234f6 <_Znwj>
 8013002:	4603      	mov	r3, r0
 8013004:	bf00      	nop
      }
 8013006:	4618      	mov	r0, r3
 8013008:	3710      	adds	r7, #16
 801300a:	46bd      	mov	sp, r7
 801300c:	bd80      	pop	{r7, pc}

0801300e <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISB_EEEEC1EOSG_>:
      constexpr pair(pair&&) = default;
 801300e:	b580      	push	{r7, lr}
 8013010:	b082      	sub	sp, #8
 8013012:	af00      	add	r7, sp, #0
 8013014:	6078      	str	r0, [r7, #4]
 8013016:	6039      	str	r1, [r7, #0]
 8013018:	687b      	ldr	r3, [r7, #4]
 801301a:	683a      	ldr	r2, [r7, #0]
 801301c:	4611      	mov	r1, r2
 801301e:	4618      	mov	r0, r3
 8013020:	f010 feda 	bl	8023dd8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 8013024:	683b      	ldr	r3, [r7, #0]
 8013026:	699a      	ldr	r2, [r3, #24]
 8013028:	687b      	ldr	r3, [r7, #4]
 801302a:	619a      	str	r2, [r3, #24]
 801302c:	687b      	ldr	r3, [r7, #4]
 801302e:	4618      	mov	r0, r3
 8013030:	3708      	adds	r7, #8
 8013032:	46bd      	mov	sp, r7
 8013034:	bd80      	pop	{r7, pc}

08013036 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISE_EEEEEE9constructISJ_JSJ_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 8013036:	b590      	push	{r4, r7, lr}
 8013038:	b085      	sub	sp, #20
 801303a:	af00      	add	r7, sp, #0
 801303c:	60f8      	str	r0, [r7, #12]
 801303e:	60b9      	str	r1, [r7, #8]
 8013040:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 8013042:	6878      	ldr	r0, [r7, #4]
 8013044:	f7ff fcd6 	bl	80129f4 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEOT_RNSt16remove_referenceISI_E4typeE>
 8013048:	4604      	mov	r4, r0
 801304a:	68bb      	ldr	r3, [r7, #8]
 801304c:	4619      	mov	r1, r3
 801304e:	201c      	movs	r0, #28
 8013050:	f7ee f803 	bl	800105a <_ZnwjPv>
 8013054:	4603      	mov	r3, r0
 8013056:	4621      	mov	r1, r4
 8013058:	4618      	mov	r0, r3
 801305a:	f7ff ffd8 	bl	801300e <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISB_EEEEC1EOSG_>
 801305e:	bf00      	nop
 8013060:	3714      	adds	r7, #20
 8013062:	46bd      	mov	sp, r7
 8013064:	bd90      	pop	{r4, r7, pc}
	...

08013068 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISE_EEEEEE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 8013068:	b480      	push	{r7}
 801306a:	b083      	sub	sp, #12
 801306c:	af00      	add	r7, sp, #0
 801306e:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 8013070:	4b03      	ldr	r3, [pc, #12]	; (8013080 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISE_EEEEEE8max_sizeEv+0x18>)
      }
 8013072:	4618      	mov	r0, r3
 8013074:	370c      	adds	r7, #12
 8013076:	46bd      	mov	sp, r7
 8013078:	f85d 7b04 	ldr.w	r7, [sp], #4
 801307c:	4770      	bx	lr
 801307e:	bf00      	nop
 8013080:	02e8ba2e 	.word	0x02e8ba2e

08013084 <_Z41__static_initialization_and_destruction_0ii>:
 8013084:	b590      	push	{r4, r7, lr}
 8013086:	b0e7      	sub	sp, #412	; 0x19c
 8013088:	af02      	add	r7, sp, #8
 801308a:	1d3b      	adds	r3, r7, #4
 801308c:	6018      	str	r0, [r3, #0]
 801308e:	463b      	mov	r3, r7
 8013090:	6019      	str	r1, [r3, #0]
 8013092:	1d3b      	adds	r3, r7, #4
 8013094:	681b      	ldr	r3, [r3, #0]
 8013096:	2b01      	cmp	r3, #1
 8013098:	f040 819d 	bne.w	80133d6 <_Z41__static_initialization_and_destruction_0ii+0x352>
 801309c:	463b      	mov	r3, r7
 801309e:	681b      	ldr	r3, [r3, #0]
 80130a0:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80130a4:	4293      	cmp	r3, r2
 80130a6:	f040 8196 	bne.w	80133d6 <_Z41__static_initialization_and_destruction_0ii+0x352>
};
 80130aa:	f107 0314 	add.w	r3, r7, #20
 80130ae:	4618      	mov	r0, r3
 80130b0:	2322      	movs	r3, #34	; 0x22
 80130b2:	461a      	mov	r2, r3
 80130b4:	2100      	movs	r1, #0
 80130b6:	f011 fef3 	bl	8024ea0 <memset>
 80130ba:	f107 0314 	add.w	r3, r7, #20
 80130be:	223a      	movs	r2, #58	; 0x3a
 80130c0:	701a      	strb	r2, [r3, #0]
 80130c2:	f107 0314 	add.w	r3, r7, #20
 80130c6:	2201      	movs	r2, #1
 80130c8:	705a      	strb	r2, [r3, #1]
 80130ca:	f107 0314 	add.w	r3, r7, #20
 80130ce:	220a      	movs	r2, #10
 80130d0:	709a      	strb	r2, [r3, #2]
 80130d2:	f107 0314 	add.w	r3, r7, #20
 80130d6:	220a      	movs	r2, #10
 80130d8:	70da      	strb	r2, [r3, #3]
 80130da:	f107 0314 	add.w	r3, r7, #20
 80130de:	222c      	movs	r2, #44	; 0x2c
 80130e0:	711a      	strb	r2, [r3, #4]
 80130e2:	f107 0314 	add.w	r3, r7, #20
 80130e6:	220c      	movs	r2, #12
 80130e8:	715a      	strb	r2, [r3, #5]
 80130ea:	f107 0314 	add.w	r3, r7, #20
 80130ee:	222e      	movs	r2, #46	; 0x2e
 80130f0:	719a      	strb	r2, [r3, #6]
 80130f2:	f107 0314 	add.w	r3, r7, #20
 80130f6:	220b      	movs	r2, #11
 80130f8:	71da      	strb	r2, [r3, #7]
 80130fa:	f107 0314 	add.w	r3, r7, #20
 80130fe:	225b      	movs	r2, #91	; 0x5b
 8013100:	721a      	strb	r2, [r3, #8]
 8013102:	f107 0314 	add.w	r3, r7, #20
 8013106:	220d      	movs	r2, #13
 8013108:	725a      	strb	r2, [r3, #9]
 801310a:	f107 0314 	add.w	r3, r7, #20
 801310e:	225d      	movs	r2, #93	; 0x5d
 8013110:	729a      	strb	r2, [r3, #10]
 8013112:	f107 0314 	add.w	r3, r7, #20
 8013116:	220e      	movs	r2, #14
 8013118:	72da      	strb	r2, [r3, #11]
 801311a:	f107 0314 	add.w	r3, r7, #20
 801311e:	227c      	movs	r2, #124	; 0x7c
 8013120:	731a      	strb	r2, [r3, #12]
 8013122:	f107 0314 	add.w	r3, r7, #20
 8013126:	2215      	movs	r2, #21
 8013128:	735a      	strb	r2, [r3, #13]
 801312a:	f107 0314 	add.w	r3, r7, #20
 801312e:	2226      	movs	r2, #38	; 0x26
 8013130:	739a      	strb	r2, [r3, #14]
 8013132:	f107 0314 	add.w	r3, r7, #20
 8013136:	2216      	movs	r2, #22
 8013138:	73da      	strb	r2, [r3, #15]
 801313a:	f107 0314 	add.w	r3, r7, #20
 801313e:	222b      	movs	r2, #43	; 0x2b
 8013140:	741a      	strb	r2, [r3, #16]
 8013142:	f107 0314 	add.w	r3, r7, #20
 8013146:	221f      	movs	r2, #31
 8013148:	745a      	strb	r2, [r3, #17]
 801314a:	f107 0314 	add.w	r3, r7, #20
 801314e:	222d      	movs	r2, #45	; 0x2d
 8013150:	749a      	strb	r2, [r3, #18]
 8013152:	f107 0314 	add.w	r3, r7, #20
 8013156:	2220      	movs	r2, #32
 8013158:	74da      	strb	r2, [r3, #19]
 801315a:	f107 0314 	add.w	r3, r7, #20
 801315e:	222a      	movs	r2, #42	; 0x2a
 8013160:	751a      	strb	r2, [r3, #20]
 8013162:	f107 0314 	add.w	r3, r7, #20
 8013166:	2221      	movs	r2, #33	; 0x21
 8013168:	755a      	strb	r2, [r3, #21]
 801316a:	f107 0314 	add.w	r3, r7, #20
 801316e:	222f      	movs	r2, #47	; 0x2f
 8013170:	759a      	strb	r2, [r3, #22]
 8013172:	f107 0314 	add.w	r3, r7, #20
 8013176:	2222      	movs	r2, #34	; 0x22
 8013178:	75da      	strb	r2, [r3, #23]
 801317a:	f107 0314 	add.w	r3, r7, #20
 801317e:	225e      	movs	r2, #94	; 0x5e
 8013180:	761a      	strb	r2, [r3, #24]
 8013182:	f107 0314 	add.w	r3, r7, #20
 8013186:	2223      	movs	r2, #35	; 0x23
 8013188:	765a      	strb	r2, [r3, #25]
 801318a:	f107 0314 	add.w	r3, r7, #20
 801318e:	2225      	movs	r2, #37	; 0x25
 8013190:	769a      	strb	r2, [r3, #26]
 8013192:	f107 0314 	add.w	r3, r7, #20
 8013196:	2224      	movs	r2, #36	; 0x24
 8013198:	76da      	strb	r2, [r3, #27]
 801319a:	f107 0314 	add.w	r3, r7, #20
 801319e:	2228      	movs	r2, #40	; 0x28
 80131a0:	771a      	strb	r2, [r3, #28]
 80131a2:	f107 0314 	add.w	r3, r7, #20
 80131a6:	2226      	movs	r2, #38	; 0x26
 80131a8:	775a      	strb	r2, [r3, #29]
 80131aa:	f107 0314 	add.w	r3, r7, #20
 80131ae:	2229      	movs	r2, #41	; 0x29
 80131b0:	779a      	strb	r2, [r3, #30]
 80131b2:	f107 0314 	add.w	r3, r7, #20
 80131b6:	2227      	movs	r2, #39	; 0x27
 80131b8:	77da      	strb	r2, [r3, #31]
 80131ba:	f107 0314 	add.w	r3, r7, #20
 80131be:	2225      	movs	r2, #37	; 0x25
 80131c0:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 80131c4:	f107 030c 	add.w	r3, r7, #12
 80131c8:	f107 0214 	add.w	r2, r7, #20
 80131cc:	601a      	str	r2, [r3, #0]
 80131ce:	f107 030c 	add.w	r3, r7, #12
 80131d2:	2211      	movs	r2, #17
 80131d4:	605a      	str	r2, [r3, #4]
 80131d6:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 80131da:	4618      	mov	r0, r3
 80131dc:	f7ee fd82 	bl	8001ce4 <_ZNSaISt4pairIKc10token_typeEEC1Ev>
 80131e0:	f107 0138 	add.w	r1, r7, #56	; 0x38
 80131e4:	f107 020c 	add.w	r2, r7, #12
 80131e8:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 80131ec:	9300      	str	r3, [sp, #0]
 80131ee:	460b      	mov	r3, r1
 80131f0:	ca06      	ldmia	r2, {r1, r2}
 80131f2:	4885      	ldr	r0, [pc, #532]	; (8013408 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 80131f4:	f7ee fd8e 	bl	8001d14 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 80131f8:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 80131fc:	4618      	mov	r0, r3
 80131fe:	f7ee fd7d 	bl	8001cfc <_ZNSaISt4pairIKc10token_typeEED1Ev>
	{"true", TOKEN_TRUE},
 8013202:	2305      	movs	r3, #5
 8013204:	f887 3162 	strb.w	r3, [r7, #354]	; 0x162
};
 8013208:	f507 72b1 	add.w	r2, r7, #354	; 0x162
 801320c:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8013210:	497e      	ldr	r1, [pc, #504]	; (801340c <_Z41__static_initialization_and_destruction_0ii+0x388>)
 8013212:	4618      	mov	r0, r3
 8013214:	f7ed ff70 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"false", TOKEN_FALSE},
 8013218:	2306      	movs	r3, #6
 801321a:	f887 3163 	strb.w	r3, [r7, #355]	; 0x163
};
 801321e:	f207 1263 	addw	r2, r7, #355	; 0x163
 8013222:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8013226:	331c      	adds	r3, #28
 8013228:	4979      	ldr	r1, [pc, #484]	; (8013410 <_Z41__static_initialization_and_destruction_0ii+0x38c>)
 801322a:	4618      	mov	r0, r3
 801322c:	f7ed ff8c 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"setup", TOKEN_SETUP},
 8013230:	2307      	movs	r3, #7
 8013232:	f887 3164 	strb.w	r3, [r7, #356]	; 0x164
};
 8013236:	f507 72b2 	add.w	r2, r7, #356	; 0x164
 801323a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801323e:	3338      	adds	r3, #56	; 0x38
 8013240:	4974      	ldr	r1, [pc, #464]	; (8013414 <_Z41__static_initialization_and_destruction_0ii+0x390>)
 8013242:	4618      	mov	r0, r3
 8013244:	f7ed ff80 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"loop", TOKEN_LOOP},
 8013248:	2308      	movs	r3, #8
 801324a:	f887 3165 	strb.w	r3, [r7, #357]	; 0x165
};
 801324e:	f207 1265 	addw	r2, r7, #357	; 0x165
 8013252:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8013256:	3354      	adds	r3, #84	; 0x54
 8013258:	496f      	ldr	r1, [pc, #444]	; (8013418 <_Z41__static_initialization_and_destruction_0ii+0x394>)
 801325a:	4618      	mov	r0, r3
 801325c:	f7ed ff4c 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"finish", TOKEN_FINISH},
 8013260:	2309      	movs	r3, #9
 8013262:	f887 3166 	strb.w	r3, [r7, #358]	; 0x166
};
 8013266:	f507 72b3 	add.w	r2, r7, #358	; 0x166
 801326a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801326e:	3370      	adds	r3, #112	; 0x70
 8013270:	496a      	ldr	r1, [pc, #424]	; (801341c <_Z41__static_initialization_and_destruction_0ii+0x398>)
 8013272:	4618      	mov	r0, r3
 8013274:	f7ed ff90 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"if", TOKEN_IF},
 8013278:	2310      	movs	r3, #16
 801327a:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167
};
 801327e:	f207 1267 	addw	r2, r7, #359	; 0x167
 8013282:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8013286:	338c      	adds	r3, #140	; 0x8c
 8013288:	4965      	ldr	r1, [pc, #404]	; (8013420 <_Z41__static_initialization_and_destruction_0ii+0x39c>)
 801328a:	4618      	mov	r0, r3
 801328c:	f7ed ffac 	bl	80011e8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>
	{"elseif", TOKEN_ELSEIF},
 8013290:	2311      	movs	r3, #17
 8013292:	f887 3168 	strb.w	r3, [r7, #360]	; 0x168
};
 8013296:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 801329a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801329e:	33a8      	adds	r3, #168	; 0xa8
 80132a0:	4960      	ldr	r1, [pc, #384]	; (8013424 <_Z41__static_initialization_and_destruction_0ii+0x3a0>)
 80132a2:	4618      	mov	r0, r3
 80132a4:	f7ed ff78 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"else", TOKEN_ELSE},
 80132a8:	2312      	movs	r3, #18
 80132aa:	f887 3169 	strb.w	r3, [r7, #361]	; 0x169
};
 80132ae:	f207 1269 	addw	r2, r7, #361	; 0x169
 80132b2:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80132b6:	33c4      	adds	r3, #196	; 0xc4
 80132b8:	495b      	ldr	r1, [pc, #364]	; (8013428 <_Z41__static_initialization_and_destruction_0ii+0x3a4>)
 80132ba:	4618      	mov	r0, r3
 80132bc:	f7ed ff1c 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"while", TOKEN_WHILE},
 80132c0:	2313      	movs	r3, #19
 80132c2:	f887 316a 	strb.w	r3, [r7, #362]	; 0x16a
};
 80132c6:	f507 72b5 	add.w	r2, r7, #362	; 0x16a
 80132ca:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80132ce:	33e0      	adds	r3, #224	; 0xe0
 80132d0:	4956      	ldr	r1, [pc, #344]	; (801342c <_Z41__static_initialization_and_destruction_0ii+0x3a8>)
 80132d2:	4618      	mov	r0, r3
 80132d4:	f7ed ff38 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"end", TOKEN_END},
 80132d8:	2314      	movs	r3, #20
 80132da:	f887 316b 	strb.w	r3, [r7, #363]	; 0x16b
};
 80132de:	f207 126b 	addw	r2, r7, #363	; 0x16b
 80132e2:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80132e6:	33fc      	adds	r3, #252	; 0xfc
 80132e8:	4951      	ldr	r1, [pc, #324]	; (8013430 <_Z41__static_initialization_and_destruction_0ii+0x3ac>)
 80132ea:	4618      	mov	r0, r3
 80132ec:	f7ed ffa4 	bl	8001238 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>
 80132f0:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80132f4:	f107 0248 	add.w	r2, r7, #72	; 0x48
 80132f8:	601a      	str	r2, [r3, #0]
 80132fa:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80132fe:	220a      	movs	r2, #10
 8013300:	605a      	str	r2, [r3, #4]
 8013302:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8013306:	4618      	mov	r0, r3
 8013308:	f7ee fd91 	bl	8001e2e <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 801330c:	f507 71b6 	add.w	r1, r7, #364	; 0x16c
 8013310:	f107 0240 	add.w	r2, r7, #64	; 0x40
 8013314:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8013318:	9300      	str	r3, [sp, #0]
 801331a:	460b      	mov	r3, r1
 801331c:	ca06      	ldmia	r2, {r1, r2}
 801331e:	4845      	ldr	r0, [pc, #276]	; (8013434 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 8013320:	f7ee fd9d 	bl	8001e5e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>
 8013324:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8013328:	4618      	mov	r0, r3
 801332a:	f7ee fd8c 	bl	8001e46 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 801332e:	f107 0448 	add.w	r4, r7, #72	; 0x48
 8013332:	f504 748c 	add.w	r4, r4, #280	; 0x118
 8013336:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801333a:	429c      	cmp	r4, r3
 801333c:	d004      	beq.n	8013348 <_Z41__static_initialization_and_destruction_0ii+0x2c4>
 801333e:	3c1c      	subs	r4, #28
 8013340:	4620      	mov	r0, r4
 8013342:	f7ed fecc 	bl	80010de <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 8013346:	e7f6      	b.n	8013336 <_Z41__static_initialization_and_destruction_0ii+0x2b2>
};
 8013348:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 801334c:	2200      	movs	r2, #0
 801334e:	601a      	str	r2, [r3, #0]
 8013350:	605a      	str	r2, [r3, #4]
 8013352:	609a      	str	r2, [r3, #8]
 8013354:	233c      	movs	r3, #60	; 0x3c
 8013356:	f887 317c 	strb.w	r3, [r7, #380]	; 0x17c
 801335a:	231b      	movs	r3, #27
 801335c:	f887 317d 	strb.w	r3, [r7, #381]	; 0x17d
 8013360:	231c      	movs	r3, #28
 8013362:	f887 317e 	strb.w	r3, [r7, #382]	; 0x17e
 8013366:	233e      	movs	r3, #62	; 0x3e
 8013368:	f887 317f 	strb.w	r3, [r7, #383]	; 0x17f
 801336c:	2319      	movs	r3, #25
 801336e:	f887 3180 	strb.w	r3, [r7, #384]	; 0x180
 8013372:	231a      	movs	r3, #26
 8013374:	f887 3181 	strb.w	r3, [r7, #385]	; 0x181
 8013378:	233d      	movs	r3, #61	; 0x3d
 801337a:	f887 3182 	strb.w	r3, [r7, #386]	; 0x182
 801337e:	2318      	movs	r3, #24
 8013380:	f887 3183 	strb.w	r3, [r7, #387]	; 0x183
 8013384:	231d      	movs	r3, #29
 8013386:	f887 3184 	strb.w	r3, [r7, #388]	; 0x184
 801338a:	2321      	movs	r3, #33	; 0x21
 801338c:	f887 3185 	strb.w	r3, [r7, #389]	; 0x185
 8013390:	2317      	movs	r3, #23
 8013392:	f887 3186 	strb.w	r3, [r7, #390]	; 0x186
 8013396:	231e      	movs	r3, #30
 8013398:	f887 3187 	strb.w	r3, [r7, #391]	; 0x187
 801339c:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 80133a0:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 80133a4:	2304      	movs	r3, #4
 80133a6:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 80133aa:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 80133ae:	4618      	mov	r0, r3
 80133b0:	f7ee fd85 	bl	8001ebe <_ZNSaISt4pairIKc12double_tokenEEC1Ev>
 80133b4:	f507 72c4 	add.w	r2, r7, #392	; 0x188
 80133b8:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 80133bc:	9300      	str	r3, [sp, #0]
 80133be:	4613      	mov	r3, r2
 80133c0:	f507 72ba 	add.w	r2, r7, #372	; 0x174
 80133c4:	ca06      	ldmia	r2, {r1, r2}
 80133c6:	481c      	ldr	r0, [pc, #112]	; (8013438 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 80133c8:	f7ee fd91 	bl	8001eee <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 80133cc:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 80133d0:	4618      	mov	r0, r3
 80133d2:	f7ee fd80 	bl	8001ed6 <_ZNSaISt4pairIKc12double_tokenEED1Ev>
static const std::map<char, double_token> token_double_chars
 80133d6:	1d3b      	adds	r3, r7, #4
 80133d8:	681b      	ldr	r3, [r3, #0]
 80133da:	2b00      	cmp	r3, #0
 80133dc:	d10e      	bne.n	80133fc <_Z41__static_initialization_and_destruction_0ii+0x378>
 80133de:	463b      	mov	r3, r7
 80133e0:	681b      	ldr	r3, [r3, #0]
 80133e2:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80133e6:	4293      	cmp	r3, r2
 80133e8:	d108      	bne.n	80133fc <_Z41__static_initialization_and_destruction_0ii+0x378>
 80133ea:	4813      	ldr	r0, [pc, #76]	; (8013438 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 80133ec:	f7f6 fa4a 	bl	8009884 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>
static const std::map<std::string, token_type> token_strings
 80133f0:	4810      	ldr	r0, [pc, #64]	; (8013434 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 80133f2:	f7f6 fa54 	bl	800989e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
static const std::map<char, token_type> token_chars
 80133f6:	4804      	ldr	r0, [pc, #16]	; (8013408 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 80133f8:	f7f6 fa5e 	bl	80098b8 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>
 80133fc:	bf00      	nop
 80133fe:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 8013402:	46bd      	mov	sp, r7
 8013404:	bd90      	pop	{r4, r7, pc}
 8013406:	bf00      	nop
 8013408:	200003c0 	.word	0x200003c0
 801340c:	08029804 	.word	0x08029804
 8013410:	0802980c 	.word	0x0802980c
 8013414:	08029814 	.word	0x08029814
 8013418:	0802981c 	.word	0x0802981c
 801341c:	08029824 	.word	0x08029824
 8013420:	0802982c 	.word	0x0802982c
 8013424:	08029830 	.word	0x08029830
 8013428:	08029838 	.word	0x08029838
 801342c:	08029840 	.word	0x08029840
 8013430:	08029848 	.word	0x08029848
 8013434:	200003d8 	.word	0x200003d8
 8013438:	200003f0 	.word	0x200003f0

0801343c <_GLOBAL__sub_I__ZN14Method_handlerC2Ev>:
 801343c:	b580      	push	{r7, lr}
 801343e:	af00      	add	r7, sp, #0
 8013440:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8013444:	2001      	movs	r0, #1
 8013446:	f7ff fe1d 	bl	8013084 <_Z41__static_initialization_and_destruction_0ii>
 801344a:	bd80      	pop	{r7, pc}

0801344c <_GLOBAL__sub_D__ZN14Method_handlerC2Ev>:
 801344c:	b580      	push	{r7, lr}
 801344e:	af00      	add	r7, sp, #0
 8013450:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8013454:	2000      	movs	r0, #0
 8013456:	f7ff fe15 	bl	8013084 <_Z41__static_initialization_and_destruction_0ii>
 801345a:	bd80      	pop	{r7, pc}

0801345c <_ZN6ParserC1Ev>:
	delete setup;
	delete loop;
	delete finish;
}

Parser::Parser()
 801345c:	b580      	push	{r7, lr}
 801345e:	b082      	sub	sp, #8
 8013460:	af00      	add	r7, sp, #0
 8013462:	6078      	str	r0, [r7, #4]
 8013464:	687b      	ldr	r3, [r7, #4]
 8013466:	4618      	mov	r0, r3
 8013468:	f7fb fef5 	bl	800f256 <_ZN5TokenC1Ev>
{

}
 801346c:	687b      	ldr	r3, [r7, #4]
 801346e:	4618      	mov	r0, r3
 8013470:	3708      	adds	r7, #8
 8013472:	46bd      	mov	sp, r7
 8013474:	bd80      	pop	{r7, pc}
	...

08013478 <_ZN6Parser11parse_whileEv>:

While_statement* Parser::parse_while()
{
 8013478:	b580      	push	{r7, lr}
 801347a:	b092      	sub	sp, #72	; 0x48
 801347c:	af00      	add	r7, sp, #0
 801347e:	6078      	str	r0, [r7, #4]
	auto st = new While_statement();
 8013480:	2008      	movs	r0, #8
 8013482:	f010 f838 	bl	80234f6 <_Znwj>
 8013486:	4603      	mov	r3, r0
 8013488:	2200      	movs	r2, #0
 801348a:	601a      	str	r2, [r3, #0]
 801348c:	2200      	movs	r2, #0
 801348e:	605a      	str	r2, [r3, #4]
 8013490:	647b      	str	r3, [r7, #68]	; 0x44
	st->condition = parse_expression();
 8013492:	6878      	ldr	r0, [r7, #4]
 8013494:	f007 ff18 	bl	801b2c8 <_ZN6Parser16parse_expressionEv>
 8013498:	4602      	mov	r2, r0
 801349a:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 801349c:	601a      	str	r2, [r3, #0]
	assert_token(TOKEN_NEWLINE, "line break after condition expression");
 801349e:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80134a2:	4618      	mov	r0, r3
 80134a4:	f010 f838 	bl	8023518 <_ZNSaIcEC1Ev>
 80134a8:	f107 0224 	add.w	r2, r7, #36	; 0x24
 80134ac:	f107 030c 	add.w	r3, r7, #12
 80134b0:	4921      	ldr	r1, [pc, #132]	; (8013538 <_ZN6Parser11parse_whileEv+0xc0>)
 80134b2:	4618      	mov	r0, r3
 80134b4:	f7ee fc69 	bl	8001d8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 80134b8:	f107 030c 	add.w	r3, r7, #12
 80134bc:	461a      	mov	r2, r3
 80134be:	210a      	movs	r1, #10
 80134c0:	6878      	ldr	r0, [r7, #4]
 80134c2:	f000 fad5 	bl	8013a70 <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 80134c6:	f107 030c 	add.w	r3, r7, #12
 80134ca:	4618      	mov	r0, r3
 80134cc:	f010 fab5 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80134d0:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80134d4:	4618      	mov	r0, r3
 80134d6:	f010 f820 	bl	802351a <_ZNSaIcED1Ev>
	get_next_token();
 80134da:	6878      	ldr	r0, [r7, #4]
 80134dc:	f000 fde1 	bl	80140a2 <_ZN6Parser14get_next_tokenEv>
	st->while_body = parse_body();
 80134e0:	6878      	ldr	r0, [r7, #4]
 80134e2:	f000 fd7b 	bl	8013fdc <_ZN6Parser10parse_bodyEv>
 80134e6:	4602      	mov	r2, r0
 80134e8:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 80134ea:	605a      	str	r2, [r3, #4]
	assert_token(TOKEN_END, "\"end\" after if body");
 80134ec:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80134f0:	4618      	mov	r0, r3
 80134f2:	f010 f811 	bl	8023518 <_ZNSaIcEC1Ev>
 80134f6:	f107 0240 	add.w	r2, r7, #64	; 0x40
 80134fa:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80134fe:	490f      	ldr	r1, [pc, #60]	; (801353c <_ZN6Parser11parse_whileEv+0xc4>)
 8013500:	4618      	mov	r0, r3
 8013502:	f7ee fc42 	bl	8001d8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8013506:	f107 0328 	add.w	r3, r7, #40	; 0x28
 801350a:	461a      	mov	r2, r3
 801350c:	2114      	movs	r1, #20
 801350e:	6878      	ldr	r0, [r7, #4]
 8013510:	f000 faae 	bl	8013a70 <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013514:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8013518:	4618      	mov	r0, r3
 801351a:	f010 fa8e 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801351e:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8013522:	4618      	mov	r0, r3
 8013524:	f00f fff9 	bl	802351a <_ZNSaIcED1Ev>
	get_next_token();
 8013528:	6878      	ldr	r0, [r7, #4]
 801352a:	f000 fdba 	bl	80140a2 <_ZN6Parser14get_next_tokenEv>
	return st;
 801352e:	6c7b      	ldr	r3, [r7, #68]	; 0x44
}
 8013530:	4618      	mov	r0, r3
 8013532:	3748      	adds	r7, #72	; 0x48
 8013534:	46bd      	mov	sp, r7
 8013536:	bd80      	pop	{r7, pc}
 8013538:	0802984c 	.word	0x0802984c
 801353c:	08029874 	.word	0x08029874

08013540 <_ZN6Parser20parse_elseif_contentEP12If_statement>:

void Parser::parse_elseif_content(If_statement *st)
{
 8013540:	b590      	push	{r4, r7, lr}
 8013542:	b08d      	sub	sp, #52	; 0x34
 8013544:	af00      	add	r7, sp, #0
 8013546:	6078      	str	r0, [r7, #4]
 8013548:	6039      	str	r1, [r7, #0]
	get_next_token();
 801354a:	6878      	ldr	r0, [r7, #4]
 801354c:	f000 fda9 	bl	80140a2 <_ZN6Parser14get_next_tokenEv>
	st->conditions.push_back(parse_expression());
 8013550:	683c      	ldr	r4, [r7, #0]
 8013552:	6878      	ldr	r0, [r7, #4]
 8013554:	f007 feb8 	bl	801b2c8 <_ZN6Parser16parse_expressionEv>
 8013558:	4603      	mov	r3, r0
 801355a:	60fb      	str	r3, [r7, #12]
 801355c:	f107 030c 	add.w	r3, r7, #12
 8013560:	4619      	mov	r1, r3
 8013562:	4620      	mov	r0, r4
 8013564:	f000 ff56 	bl	8014414 <_ZNSt6vectorIP10ExpressionSaIS1_EE9push_backEOS1_>
	assert_token(TOKEN_NEWLINE, "line break after condition expression");
 8013568:	f107 0328 	add.w	r3, r7, #40	; 0x28
 801356c:	4618      	mov	r0, r3
 801356e:	f00f ffd3 	bl	8023518 <_ZNSaIcEC1Ev>
 8013572:	f107 0228 	add.w	r2, r7, #40	; 0x28
 8013576:	f107 0310 	add.w	r3, r7, #16
 801357a:	4915      	ldr	r1, [pc, #84]	; (80135d0 <_ZN6Parser20parse_elseif_contentEP12If_statement+0x90>)
 801357c:	4618      	mov	r0, r3
 801357e:	f7ee fc04 	bl	8001d8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8013582:	f107 0310 	add.w	r3, r7, #16
 8013586:	461a      	mov	r2, r3
 8013588:	210a      	movs	r1, #10
 801358a:	6878      	ldr	r0, [r7, #4]
 801358c:	f000 fa70 	bl	8013a70 <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013590:	f107 0310 	add.w	r3, r7, #16
 8013594:	4618      	mov	r0, r3
 8013596:	f010 fa50 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801359a:	f107 0328 	add.w	r3, r7, #40	; 0x28
 801359e:	4618      	mov	r0, r3
 80135a0:	f00f ffbb 	bl	802351a <_ZNSaIcED1Ev>
	get_next_token();
 80135a4:	6878      	ldr	r0, [r7, #4]
 80135a6:	f000 fd7c 	bl	80140a2 <_ZN6Parser14get_next_tokenEv>
	st->if_bodies.push_back(parse_body());
 80135aa:	683b      	ldr	r3, [r7, #0]
 80135ac:	f103 040c 	add.w	r4, r3, #12
 80135b0:	6878      	ldr	r0, [r7, #4]
 80135b2:	f000 fd13 	bl	8013fdc <_ZN6Parser10parse_bodyEv>
 80135b6:	4603      	mov	r3, r0
 80135b8:	62fb      	str	r3, [r7, #44]	; 0x2c
 80135ba:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80135be:	4619      	mov	r1, r3
 80135c0:	4620      	mov	r0, r4
 80135c2:	f000 ff38 	bl	8014436 <_ZNSt6vectorIP4BodySaIS1_EE9push_backEOS1_>
}
 80135c6:	bf00      	nop
 80135c8:	3734      	adds	r7, #52	; 0x34
 80135ca:	46bd      	mov	sp, r7
 80135cc:	bd90      	pop	{r4, r7, pc}
 80135ce:	bf00      	nop
 80135d0:	0802984c 	.word	0x0802984c

080135d4 <_ZN6Parser18parse_else_contentEP12If_statement>:

void Parser::parse_else_content(If_statement *st)
{
 80135d4:	b590      	push	{r4, r7, lr}
 80135d6:	b08b      	sub	sp, #44	; 0x2c
 80135d8:	af00      	add	r7, sp, #0
 80135da:	6078      	str	r0, [r7, #4]
 80135dc:	6039      	str	r1, [r7, #0]
	get_next_token();
 80135de:	6878      	ldr	r0, [r7, #4]
 80135e0:	f000 fd5f 	bl	80140a2 <_ZN6Parser14get_next_tokenEv>
	assert_token(TOKEN_NEWLINE, "line break after \"else\"");
 80135e4:	f107 0320 	add.w	r3, r7, #32
 80135e8:	4618      	mov	r0, r3
 80135ea:	f00f ff95 	bl	8023518 <_ZNSaIcEC1Ev>
 80135ee:	f107 0220 	add.w	r2, r7, #32
 80135f2:	f107 0308 	add.w	r3, r7, #8
 80135f6:	4915      	ldr	r1, [pc, #84]	; (801364c <_ZN6Parser18parse_else_contentEP12If_statement+0x78>)
 80135f8:	4618      	mov	r0, r3
 80135fa:	f7ee fbc6 	bl	8001d8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 80135fe:	f107 0308 	add.w	r3, r7, #8
 8013602:	461a      	mov	r2, r3
 8013604:	210a      	movs	r1, #10
 8013606:	6878      	ldr	r0, [r7, #4]
 8013608:	f000 fa32 	bl	8013a70 <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801360c:	f107 0308 	add.w	r3, r7, #8
 8013610:	4618      	mov	r0, r3
 8013612:	f010 fa12 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8013616:	f107 0320 	add.w	r3, r7, #32
 801361a:	4618      	mov	r0, r3
 801361c:	f00f ff7d 	bl	802351a <_ZNSaIcED1Ev>
	get_next_token();
 8013620:	6878      	ldr	r0, [r7, #4]
 8013622:	f000 fd3e 	bl	80140a2 <_ZN6Parser14get_next_tokenEv>
	st->if_bodies.push_back(parse_body());
 8013626:	683b      	ldr	r3, [r7, #0]
 8013628:	f103 040c 	add.w	r4, r3, #12
 801362c:	6878      	ldr	r0, [r7, #4]
 801362e:	f000 fcd5 	bl	8013fdc <_ZN6Parser10parse_bodyEv>
 8013632:	4603      	mov	r3, r0
 8013634:	627b      	str	r3, [r7, #36]	; 0x24
 8013636:	f107 0324 	add.w	r3, r7, #36	; 0x24
 801363a:	4619      	mov	r1, r3
 801363c:	4620      	mov	r0, r4
 801363e:	f000 fefa 	bl	8014436 <_ZNSt6vectorIP4BodySaIS1_EE9push_backEOS1_>
}
 8013642:	bf00      	nop
 8013644:	372c      	adds	r7, #44	; 0x2c
 8013646:	46bd      	mov	sp, r7
 8013648:	bd90      	pop	{r4, r7, pc}
 801364a:	bf00      	nop
 801364c:	08029888 	.word	0x08029888

08013650 <_ZN6Parser16parse_if_contentEP12If_statement>:

void Parser::parse_if_content(If_statement *st)
{
 8013650:	b590      	push	{r4, r7, lr}
 8013652:	b08d      	sub	sp, #52	; 0x34
 8013654:	af00      	add	r7, sp, #0
 8013656:	6078      	str	r0, [r7, #4]
 8013658:	6039      	str	r1, [r7, #0]
	st->conditions.push_back(parse_expression());
 801365a:	683c      	ldr	r4, [r7, #0]
 801365c:	6878      	ldr	r0, [r7, #4]
 801365e:	f007 fe33 	bl	801b2c8 <_ZN6Parser16parse_expressionEv>
 8013662:	4603      	mov	r3, r0
 8013664:	60fb      	str	r3, [r7, #12]
 8013666:	f107 030c 	add.w	r3, r7, #12
 801366a:	4619      	mov	r1, r3
 801366c:	4620      	mov	r0, r4
 801366e:	f000 fed1 	bl	8014414 <_ZNSt6vectorIP10ExpressionSaIS1_EE9push_backEOS1_>
	assert_token(TOKEN_NEWLINE, "line break after condition expression");
 8013672:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8013676:	4618      	mov	r0, r3
 8013678:	f00f ff4e 	bl	8023518 <_ZNSaIcEC1Ev>
 801367c:	f107 0228 	add.w	r2, r7, #40	; 0x28
 8013680:	f107 0310 	add.w	r3, r7, #16
 8013684:	4914      	ldr	r1, [pc, #80]	; (80136d8 <_ZN6Parser16parse_if_contentEP12If_statement+0x88>)
 8013686:	4618      	mov	r0, r3
 8013688:	f7ee fb7f 	bl	8001d8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801368c:	f107 0310 	add.w	r3, r7, #16
 8013690:	461a      	mov	r2, r3
 8013692:	210a      	movs	r1, #10
 8013694:	6878      	ldr	r0, [r7, #4]
 8013696:	f000 f9eb 	bl	8013a70 <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801369a:	f107 0310 	add.w	r3, r7, #16
 801369e:	4618      	mov	r0, r3
 80136a0:	f010 f9cb 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80136a4:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80136a8:	4618      	mov	r0, r3
 80136aa:	f00f ff36 	bl	802351a <_ZNSaIcED1Ev>
	get_next_token();
 80136ae:	6878      	ldr	r0, [r7, #4]
 80136b0:	f000 fcf7 	bl	80140a2 <_ZN6Parser14get_next_tokenEv>
	st->if_bodies.push_back(parse_body());
 80136b4:	683b      	ldr	r3, [r7, #0]
 80136b6:	f103 040c 	add.w	r4, r3, #12
 80136ba:	6878      	ldr	r0, [r7, #4]
 80136bc:	f000 fc8e 	bl	8013fdc <_ZN6Parser10parse_bodyEv>
 80136c0:	4603      	mov	r3, r0
 80136c2:	62fb      	str	r3, [r7, #44]	; 0x2c
 80136c4:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80136c8:	4619      	mov	r1, r3
 80136ca:	4620      	mov	r0, r4
 80136cc:	f000 feb3 	bl	8014436 <_ZNSt6vectorIP4BodySaIS1_EE9push_backEOS1_>
}
 80136d0:	bf00      	nop
 80136d2:	3734      	adds	r7, #52	; 0x34
 80136d4:	46bd      	mov	sp, r7
 80136d6:	bd90      	pop	{r4, r7, pc}
 80136d8:	0802984c 	.word	0x0802984c

080136dc <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EEC1Ev>:
      _Vector_base() = default;
 80136dc:	b580      	push	{r7, lr}
 80136de:	b082      	sub	sp, #8
 80136e0:	af00      	add	r7, sp, #0
 80136e2:	6078      	str	r0, [r7, #4]
 80136e4:	687b      	ldr	r3, [r7, #4]
 80136e6:	4618      	mov	r0, r3
 80136e8:	f000 feb6 	bl	8014458 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE12_Vector_implC1Ev>
 80136ec:	687b      	ldr	r3, [r7, #4]
 80136ee:	4618      	mov	r0, r3
 80136f0:	3708      	adds	r7, #8
 80136f2:	46bd      	mov	sp, r7
 80136f4:	bd80      	pop	{r7, pc}

080136f6 <_ZNSt6vectorIP10ExpressionSaIS1_EEC1Ev>:
      vector() = default;
 80136f6:	b580      	push	{r7, lr}
 80136f8:	b082      	sub	sp, #8
 80136fa:	af00      	add	r7, sp, #0
 80136fc:	6078      	str	r0, [r7, #4]
 80136fe:	687b      	ldr	r3, [r7, #4]
 8013700:	4618      	mov	r0, r3
 8013702:	f7ff ffeb 	bl	80136dc <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EEC1Ev>
 8013706:	687b      	ldr	r3, [r7, #4]
 8013708:	4618      	mov	r0, r3
 801370a:	3708      	adds	r7, #8
 801370c:	46bd      	mov	sp, r7
 801370e:	bd80      	pop	{r7, pc}

08013710 <_ZNSt12_Vector_baseIP4BodySaIS1_EEC1Ev>:
      _Vector_base() = default;
 8013710:	b580      	push	{r7, lr}
 8013712:	b082      	sub	sp, #8
 8013714:	af00      	add	r7, sp, #0
 8013716:	6078      	str	r0, [r7, #4]
 8013718:	687b      	ldr	r3, [r7, #4]
 801371a:	4618      	mov	r0, r3
 801371c:	f000 feac 	bl	8014478 <_ZNSt12_Vector_baseIP4BodySaIS1_EE12_Vector_implC1Ev>
 8013720:	687b      	ldr	r3, [r7, #4]
 8013722:	4618      	mov	r0, r3
 8013724:	3708      	adds	r7, #8
 8013726:	46bd      	mov	sp, r7
 8013728:	bd80      	pop	{r7, pc}

0801372a <_ZNSt6vectorIP4BodySaIS1_EEC1Ev>:
      vector() = default;
 801372a:	b580      	push	{r7, lr}
 801372c:	b082      	sub	sp, #8
 801372e:	af00      	add	r7, sp, #0
 8013730:	6078      	str	r0, [r7, #4]
 8013732:	687b      	ldr	r3, [r7, #4]
 8013734:	4618      	mov	r0, r3
 8013736:	f7ff ffeb 	bl	8013710 <_ZNSt12_Vector_baseIP4BodySaIS1_EEC1Ev>
 801373a:	687b      	ldr	r3, [r7, #4]
 801373c:	4618      	mov	r0, r3
 801373e:	3708      	adds	r7, #8
 8013740:	46bd      	mov	sp, r7
 8013742:	bd80      	pop	{r7, pc}

08013744 <_ZN12If_statementC1Ev>:
public:
	~Body();
	std::vector<Statement*> statements;
};

class If_statement
 8013744:	b580      	push	{r7, lr}
 8013746:	b082      	sub	sp, #8
 8013748:	af00      	add	r7, sp, #0
 801374a:	6078      	str	r0, [r7, #4]
 801374c:	687b      	ldr	r3, [r7, #4]
 801374e:	4618      	mov	r0, r3
 8013750:	f7ff ffd1 	bl	80136f6 <_ZNSt6vectorIP10ExpressionSaIS1_EEC1Ev>
 8013754:	687b      	ldr	r3, [r7, #4]
 8013756:	330c      	adds	r3, #12
 8013758:	4618      	mov	r0, r3
 801375a:	f7ff ffe6 	bl	801372a <_ZNSt6vectorIP4BodySaIS1_EEC1Ev>
 801375e:	687b      	ldr	r3, [r7, #4]
 8013760:	4618      	mov	r0, r3
 8013762:	3708      	adds	r7, #8
 8013764:	46bd      	mov	sp, r7
 8013766:	bd80      	pop	{r7, pc}

08013768 <_ZN6Parser8parse_ifEv>:

If_statement* Parser::parse_if()
{
 8013768:	b590      	push	{r4, r7, lr}
 801376a:	b08b      	sub	sp, #44	; 0x2c
 801376c:	af00      	add	r7, sp, #0
 801376e:	6078      	str	r0, [r7, #4]
	auto st = new If_statement();
 8013770:	2018      	movs	r0, #24
 8013772:	f00f fec0 	bl	80234f6 <_Znwj>
 8013776:	4603      	mov	r3, r0
 8013778:	461c      	mov	r4, r3
 801377a:	4622      	mov	r2, r4
 801377c:	2300      	movs	r3, #0
 801377e:	6013      	str	r3, [r2, #0]
 8013780:	6053      	str	r3, [r2, #4]
 8013782:	6093      	str	r3, [r2, #8]
 8013784:	60d3      	str	r3, [r2, #12]
 8013786:	6113      	str	r3, [r2, #16]
 8013788:	6153      	str	r3, [r2, #20]
 801378a:	4620      	mov	r0, r4
 801378c:	f7ff ffda 	bl	8013744 <_ZN12If_statementC1Ev>
 8013790:	627c      	str	r4, [r7, #36]	; 0x24

	parse_if_content(st);
 8013792:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8013794:	6878      	ldr	r0, [r7, #4]
 8013796:	f7ff ff5b 	bl	8013650 <_ZN6Parser16parse_if_contentEP12If_statement>
	while (token_buffer.type == TOKEN_ELSEIF)
 801379a:	687b      	ldr	r3, [r7, #4]
 801379c:	781b      	ldrb	r3, [r3, #0]
 801379e:	2b11      	cmp	r3, #17
 80137a0:	d104      	bne.n	80137ac <_ZN6Parser8parse_ifEv+0x44>
	{
		parse_elseif_content(st);
 80137a2:	6a79      	ldr	r1, [r7, #36]	; 0x24
 80137a4:	6878      	ldr	r0, [r7, #4]
 80137a6:	f7ff fecb 	bl	8013540 <_ZN6Parser20parse_elseif_contentEP12If_statement>
	while (token_buffer.type == TOKEN_ELSEIF)
 80137aa:	e7f6      	b.n	801379a <_ZN6Parser8parse_ifEv+0x32>
	}
	if (token_buffer.type == TOKEN_ELSE)
 80137ac:	687b      	ldr	r3, [r7, #4]
 80137ae:	781b      	ldrb	r3, [r3, #0]
 80137b0:	2b12      	cmp	r3, #18
 80137b2:	d103      	bne.n	80137bc <_ZN6Parser8parse_ifEv+0x54>
	{
		parse_else_content(st);
 80137b4:	6a79      	ldr	r1, [r7, #36]	; 0x24
 80137b6:	6878      	ldr	r0, [r7, #4]
 80137b8:	f7ff ff0c 	bl	80135d4 <_ZN6Parser18parse_else_contentEP12If_statement>
	}
	assert_token(TOKEN_END, "\"end\" after if body");
 80137bc:	f107 0320 	add.w	r3, r7, #32
 80137c0:	4618      	mov	r0, r3
 80137c2:	f00f fea9 	bl	8023518 <_ZNSaIcEC1Ev>
 80137c6:	f107 0220 	add.w	r2, r7, #32
 80137ca:	f107 0308 	add.w	r3, r7, #8
 80137ce:	490e      	ldr	r1, [pc, #56]	; (8013808 <_ZN6Parser8parse_ifEv+0xa0>)
 80137d0:	4618      	mov	r0, r3
 80137d2:	f7ee fada 	bl	8001d8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 80137d6:	f107 0308 	add.w	r3, r7, #8
 80137da:	461a      	mov	r2, r3
 80137dc:	2114      	movs	r1, #20
 80137de:	6878      	ldr	r0, [r7, #4]
 80137e0:	f000 f946 	bl	8013a70 <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 80137e4:	f107 0308 	add.w	r3, r7, #8
 80137e8:	4618      	mov	r0, r3
 80137ea:	f010 f926 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80137ee:	f107 0320 	add.w	r3, r7, #32
 80137f2:	4618      	mov	r0, r3
 80137f4:	f00f fe91 	bl	802351a <_ZNSaIcED1Ev>
	get_next_token();
 80137f8:	6878      	ldr	r0, [r7, #4]
 80137fa:	f000 fc52 	bl	80140a2 <_ZN6Parser14get_next_tokenEv>

	return st;
 80137fe:	6a7b      	ldr	r3, [r7, #36]	; 0x24
}
 8013800:	4618      	mov	r0, r3
 8013802:	372c      	adds	r7, #44	; 0x2c
 8013804:	46bd      	mov	sp, r7
 8013806:	bd90      	pop	{r4, r7, pc}
 8013808:	08029874 	.word	0x08029874

0801380c <_ZN6Parser20parse_variable_indexEP8Variable>:

void Parser::parse_variable_index(Variable *var)
{
 801380c:	b580      	push	{r7, lr}
 801380e:	b08a      	sub	sp, #40	; 0x28
 8013810:	af00      	add	r7, sp, #0
 8013812:	6078      	str	r0, [r7, #4]
 8013814:	6039      	str	r1, [r7, #0]
	if (token_buffer.type == TOKEN_LEFT_SQUARE)
 8013816:	687b      	ldr	r3, [r7, #4]
 8013818:	781b      	ldrb	r3, [r3, #0]
 801381a:	2b0d      	cmp	r3, #13
 801381c:	d12a      	bne.n	8013874 <_ZN6Parser20parse_variable_indexEP8Variable+0x68>
	{
		get_next_token();
 801381e:	6878      	ldr	r0, [r7, #4]
 8013820:	f000 fc3f 	bl	80140a2 <_ZN6Parser14get_next_tokenEv>
		var->index = parse_expression();
 8013824:	6878      	ldr	r0, [r7, #4]
 8013826:	f007 fd4f 	bl	801b2c8 <_ZN6Parser16parse_expressionEv>
 801382a:	4602      	mov	r2, r0
 801382c:	683b      	ldr	r3, [r7, #0]
 801382e:	61da      	str	r2, [r3, #28]
		assert_token(TOKEN_RIGHT_SQUARE, "closing square bracket");
 8013830:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8013834:	4618      	mov	r0, r3
 8013836:	f00f fe6f 	bl	8023518 <_ZNSaIcEC1Ev>
 801383a:	f107 0224 	add.w	r2, r7, #36	; 0x24
 801383e:	f107 030c 	add.w	r3, r7, #12
 8013842:	4910      	ldr	r1, [pc, #64]	; (8013884 <_ZN6Parser20parse_variable_indexEP8Variable+0x78>)
 8013844:	4618      	mov	r0, r3
 8013846:	f7ee faa0 	bl	8001d8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801384a:	f107 030c 	add.w	r3, r7, #12
 801384e:	461a      	mov	r2, r3
 8013850:	210e      	movs	r1, #14
 8013852:	6878      	ldr	r0, [r7, #4]
 8013854:	f000 f90c 	bl	8013a70 <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013858:	f107 030c 	add.w	r3, r7, #12
 801385c:	4618      	mov	r0, r3
 801385e:	f010 f8ec 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8013862:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8013866:	4618      	mov	r0, r3
 8013868:	f00f fe57 	bl	802351a <_ZNSaIcED1Ev>
		get_next_token();
 801386c:	6878      	ldr	r0, [r7, #4]
 801386e:	f000 fc18 	bl	80140a2 <_ZN6Parser14get_next_tokenEv>
	}
	else
	{
		var->index = nullptr;
	}
}
 8013872:	e002      	b.n	801387a <_ZN6Parser20parse_variable_indexEP8Variable+0x6e>
		var->index = nullptr;
 8013874:	683b      	ldr	r3, [r7, #0]
 8013876:	2200      	movs	r2, #0
 8013878:	61da      	str	r2, [r3, #28]
}
 801387a:	bf00      	nop
 801387c:	3728      	adds	r7, #40	; 0x28
 801387e:	46bd      	mov	sp, r7
 8013880:	bd80      	pop	{r7, pc}
 8013882:	bf00      	nop
 8013884:	080298a0 	.word	0x080298a0

08013888 <_ZN6Parser25parse_member_selection_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void Parser::parse_member_selection_id(std::string &id)
{
 8013888:	b580      	push	{r7, lr}
 801388a:	b096      	sub	sp, #88	; 0x58
 801388c:	af00      	add	r7, sp, #0
 801388e:	6078      	str	r0, [r7, #4]
 8013890:	6039      	str	r1, [r7, #0]
	assert_token(TOKEN_COLON, "colon operator \":\"");
 8013892:	f107 0320 	add.w	r3, r7, #32
 8013896:	4618      	mov	r0, r3
 8013898:	f00f fe3e 	bl	8023518 <_ZNSaIcEC1Ev>
 801389c:	f107 0220 	add.w	r2, r7, #32
 80138a0:	f107 0308 	add.w	r3, r7, #8
 80138a4:	4929      	ldr	r1, [pc, #164]	; (801394c <_ZN6Parser25parse_member_selection_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xc4>)
 80138a6:	4618      	mov	r0, r3
 80138a8:	f7ee fa6f 	bl	8001d8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 80138ac:	f107 0308 	add.w	r3, r7, #8
 80138b0:	461a      	mov	r2, r3
 80138b2:	2101      	movs	r1, #1
 80138b4:	6878      	ldr	r0, [r7, #4]
 80138b6:	f000 f8db 	bl	8013a70 <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 80138ba:	f107 0308 	add.w	r3, r7, #8
 80138be:	4618      	mov	r0, r3
 80138c0:	f010 f8bb 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80138c4:	f107 0320 	add.w	r3, r7, #32
 80138c8:	4618      	mov	r0, r3
 80138ca:	f00f fe26 	bl	802351a <_ZNSaIcED1Ev>
	get_next_token();
 80138ce:	6878      	ldr	r0, [r7, #4]
 80138d0:	f000 fbe7 	bl	80140a2 <_ZN6Parser14get_next_tokenEv>
	assert_token(TOKEN_IDENTIFIER, "identifier");
 80138d4:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 80138d8:	4618      	mov	r0, r3
 80138da:	f00f fe1d 	bl	8023518 <_ZNSaIcEC1Ev>
 80138de:	f107 023c 	add.w	r2, r7, #60	; 0x3c
 80138e2:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80138e6:	491a      	ldr	r1, [pc, #104]	; (8013950 <_ZN6Parser25parse_member_selection_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xc8>)
 80138e8:	4618      	mov	r0, r3
 80138ea:	f7ee fa4e 	bl	8001d8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 80138ee:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80138f2:	461a      	mov	r2, r3
 80138f4:	2102      	movs	r1, #2
 80138f6:	6878      	ldr	r0, [r7, #4]
 80138f8:	f000 f8ba 	bl	8013a70 <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 80138fc:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8013900:	4618      	mov	r0, r3
 8013902:	f010 f89a 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8013906:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801390a:	4618      	mov	r0, r3
 801390c:	f00f fe05 	bl	802351a <_ZNSaIcED1Ev>
	id = std::string(std::get<std::string>(token_buffer.value));
 8013910:	687b      	ldr	r3, [r7, #4]
 8013912:	3304      	adds	r3, #4
 8013914:	4618      	mov	r0, r3
 8013916:	f000 fdbf 	bl	8014498 <_ZSt3getINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_ifbEERT_RSt7variantIJDpT0_EE>
 801391a:	4602      	mov	r2, r0
 801391c:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8013920:	4611      	mov	r1, r2
 8013922:	4618      	mov	r0, r3
 8013924:	f010 fa58 	bl	8023dd8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 8013928:	f107 0340 	add.w	r3, r7, #64	; 0x40
 801392c:	4619      	mov	r1, r3
 801392e:	6838      	ldr	r0, [r7, #0]
 8013930:	f010 f88f 	bl	8023a52 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>
 8013934:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8013938:	4618      	mov	r0, r3
 801393a:	f010 f87e 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	get_next_token();
 801393e:	6878      	ldr	r0, [r7, #4]
 8013940:	f000 fbaf 	bl	80140a2 <_ZN6Parser14get_next_tokenEv>
}
 8013944:	bf00      	nop
 8013946:	3758      	adds	r7, #88	; 0x58
 8013948:	46bd      	mov	sp, r7
 801394a:	bd80      	pop	{r7, pc}
 801394c:	080298b8 	.word	0x080298b8
 8013950:	080298cc 	.word	0x080298cc

08013954 <_ZN6Parser17parse_variable_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8Variable>:

void Parser::parse_variable_id(std::string &id, Variable *var)
{
 8013954:	b580      	push	{r7, lr}
 8013956:	b08a      	sub	sp, #40	; 0x28
 8013958:	af00      	add	r7, sp, #0
 801395a:	60f8      	str	r0, [r7, #12]
 801395c:	60b9      	str	r1, [r7, #8]
 801395e:	607a      	str	r2, [r7, #4]
	if (id == "Arg")
 8013960:	491b      	ldr	r1, [pc, #108]	; (80139d0 <_ZN6Parser17parse_variable_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8Variable+0x7c>)
 8013962:	68b8      	ldr	r0, [r7, #8]
 8013964:	f000 fda4 	bl	80144b0 <_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_>
 8013968:	4603      	mov	r3, r0
 801396a:	2b00      	cmp	r3, #0
 801396c:	d007      	beq.n	801397e <_ZN6Parser17parse_variable_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8Variable+0x2a>
	{
		var->type = VARIABLE_ARG;
 801396e:	687b      	ldr	r3, [r7, #4]
 8013970:	2201      	movs	r2, #1
 8013972:	701a      	strb	r2, [r3, #0]
		parse_member_selection_id(id);
 8013974:	68b9      	ldr	r1, [r7, #8]
 8013976:	68f8      	ldr	r0, [r7, #12]
 8013978:	f7ff ff86 	bl	8013888 <_ZN6Parser25parse_member_selection_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801397c:	e011      	b.n	80139a2 <_ZN6Parser17parse_variable_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8Variable+0x4e>
	}
	else if (id == "Par")
 801397e:	4915      	ldr	r1, [pc, #84]	; (80139d4 <_ZN6Parser17parse_variable_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8Variable+0x80>)
 8013980:	68b8      	ldr	r0, [r7, #8]
 8013982:	f000 fd95 	bl	80144b0 <_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_>
 8013986:	4603      	mov	r3, r0
 8013988:	2b00      	cmp	r3, #0
 801398a:	d007      	beq.n	801399c <_ZN6Parser17parse_variable_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8Variable+0x48>
	{
		var->type = VARIABLE_PAR;
 801398c:	687b      	ldr	r3, [r7, #4]
 801398e:	2202      	movs	r2, #2
 8013990:	701a      	strb	r2, [r3, #0]
		parse_member_selection_id(id);
 8013992:	68b9      	ldr	r1, [r7, #8]
 8013994:	68f8      	ldr	r0, [r7, #12]
 8013996:	f7ff ff77 	bl	8013888 <_ZN6Parser25parse_member_selection_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801399a:	e002      	b.n	80139a2 <_ZN6Parser17parse_variable_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8Variable+0x4e>
	}
	else
	{
		var->type = VARIABLE_LOCAL;
 801399c:	687b      	ldr	r3, [r7, #4]
 801399e:	2200      	movs	r2, #0
 80139a0:	701a      	strb	r2, [r3, #0]
	}

	var->id = std::string(id);
 80139a2:	f107 0310 	add.w	r3, r7, #16
 80139a6:	68b9      	ldr	r1, [r7, #8]
 80139a8:	4618      	mov	r0, r3
 80139aa:	f010 fa15 	bl	8023dd8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 80139ae:	687b      	ldr	r3, [r7, #4]
 80139b0:	3304      	adds	r3, #4
 80139b2:	f107 0210 	add.w	r2, r7, #16
 80139b6:	4611      	mov	r1, r2
 80139b8:	4618      	mov	r0, r3
 80139ba:	f010 f84a 	bl	8023a52 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>
 80139be:	f107 0310 	add.w	r3, r7, #16
 80139c2:	4618      	mov	r0, r3
 80139c4:	f010 f839 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
}
 80139c8:	bf00      	nop
 80139ca:	3728      	adds	r7, #40	; 0x28
 80139cc:	46bd      	mov	sp, r7
 80139ce:	bd80      	pop	{r7, pc}
 80139d0:	080298d8 	.word	0x080298d8
 80139d4:	080298dc 	.word	0x080298dc

080139d8 <_ZN8VariableC1Ev>:
 80139d8:	b580      	push	{r7, lr}
 80139da:	b082      	sub	sp, #8
 80139dc:	af00      	add	r7, sp, #0
 80139de:	6078      	str	r0, [r7, #4]
 80139e0:	687b      	ldr	r3, [r7, #4]
 80139e2:	3304      	adds	r3, #4
 80139e4:	4618      	mov	r0, r3
 80139e6:	f010 f807 	bl	80239f8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>
 80139ea:	687b      	ldr	r3, [r7, #4]
 80139ec:	4618      	mov	r0, r3
 80139ee:	3708      	adds	r7, #8
 80139f0:	46bd      	mov	sp, r7
 80139f2:	bd80      	pop	{r7, pc}

080139f4 <_ZN6Parser14parse_variableERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

Variable* Parser::parse_variable(std::string &id)
{
 80139f4:	b590      	push	{r4, r7, lr}
 80139f6:	b085      	sub	sp, #20
 80139f8:	af00      	add	r7, sp, #0
 80139fa:	6078      	str	r0, [r7, #4]
 80139fc:	6039      	str	r1, [r7, #0]
	auto var = new Variable();
 80139fe:	2020      	movs	r0, #32
 8013a00:	f00f fd79 	bl	80234f6 <_Znwj>
 8013a04:	4603      	mov	r3, r0
 8013a06:	461c      	mov	r4, r3
 8013a08:	4620      	mov	r0, r4
 8013a0a:	2320      	movs	r3, #32
 8013a0c:	461a      	mov	r2, r3
 8013a0e:	2100      	movs	r1, #0
 8013a10:	f011 fa46 	bl	8024ea0 <memset>
 8013a14:	4620      	mov	r0, r4
 8013a16:	f7ff ffdf 	bl	80139d8 <_ZN8VariableC1Ev>
 8013a1a:	60fc      	str	r4, [r7, #12]
	parse_variable_id(id, var);
 8013a1c:	68fa      	ldr	r2, [r7, #12]
 8013a1e:	6839      	ldr	r1, [r7, #0]
 8013a20:	6878      	ldr	r0, [r7, #4]
 8013a22:	f7ff ff97 	bl	8013954 <_ZN6Parser17parse_variable_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8Variable>
	parse_variable_index(var);
 8013a26:	68f9      	ldr	r1, [r7, #12]
 8013a28:	6878      	ldr	r0, [r7, #4]
 8013a2a:	f7ff feef 	bl	801380c <_ZN6Parser20parse_variable_indexEP8Variable>
	return var;
 8013a2e:	68fb      	ldr	r3, [r7, #12]
}
 8013a30:	4618      	mov	r0, r3
 8013a32:	3714      	adds	r7, #20
 8013a34:	46bd      	mov	sp, r7
 8013a36:	bd90      	pop	{r4, r7, pc}

08013a38 <_ZN6Parser16parse_assignmentEP8Variable>:

Assignment* Parser::parse_assignment(Variable* var)
{
 8013a38:	b580      	push	{r7, lr}
 8013a3a:	b084      	sub	sp, #16
 8013a3c:	af00      	add	r7, sp, #0
 8013a3e:	6078      	str	r0, [r7, #4]
 8013a40:	6039      	str	r1, [r7, #0]
	auto st = new Assignment();
 8013a42:	2008      	movs	r0, #8
 8013a44:	f00f fd57 	bl	80234f6 <_Znwj>
 8013a48:	4603      	mov	r3, r0
 8013a4a:	2200      	movs	r2, #0
 8013a4c:	601a      	str	r2, [r3, #0]
 8013a4e:	2200      	movs	r2, #0
 8013a50:	605a      	str	r2, [r3, #4]
 8013a52:	60fb      	str	r3, [r7, #12]
	st->var = var;
 8013a54:	68fb      	ldr	r3, [r7, #12]
 8013a56:	683a      	ldr	r2, [r7, #0]
 8013a58:	601a      	str	r2, [r3, #0]
	st->value = parse_expression();
 8013a5a:	6878      	ldr	r0, [r7, #4]
 8013a5c:	f007 fc34 	bl	801b2c8 <_ZN6Parser16parse_expressionEv>
 8013a60:	4602      	mov	r2, r0
 8013a62:	68fb      	ldr	r3, [r7, #12]
 8013a64:	605a      	str	r2, [r3, #4]
	return st;
 8013a66:	68fb      	ldr	r3, [r7, #12]
}
 8013a68:	4618      	mov	r0, r3
 8013a6a:	3710      	adds	r7, #16
 8013a6c:	46bd      	mov	sp, r7
 8013a6e:	bd80      	pop	{r7, pc}

08013a70 <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void Parser::assert_token(token_type type, const std::string message)
{
 8013a70:	b580      	push	{r7, lr}
 8013a72:	b090      	sub	sp, #64	; 0x40
 8013a74:	af00      	add	r7, sp, #0
 8013a76:	60f8      	str	r0, [r7, #12]
 8013a78:	460b      	mov	r3, r1
 8013a7a:	607a      	str	r2, [r7, #4]
 8013a7c:	72fb      	strb	r3, [r7, #11]
	if (token_buffer.type != type)
 8013a7e:	68fb      	ldr	r3, [r7, #12]
 8013a80:	781b      	ldrb	r3, [r3, #0]
 8013a82:	7afa      	ldrb	r2, [r7, #11]
 8013a84:	429a      	cmp	r2, r3
 8013a86:	d01d      	beq.n	8013ac4 <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x54>
	{
		std::string msg = "expected " + message;
 8013a88:	f107 0310 	add.w	r3, r7, #16
 8013a8c:	687a      	ldr	r2, [r7, #4]
 8013a8e:	490f      	ldr	r1, [pc, #60]	; (8013acc <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x5c>)
 8013a90:	4618      	mov	r0, r3
 8013a92:	f7fa fc12 	bl	800e2ba <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>
		Transmitter::report_error(msg);
 8013a96:	f107 0210 	add.w	r2, r7, #16
 8013a9a:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8013a9e:	4611      	mov	r1, r2
 8013aa0:	4618      	mov	r0, r3
 8013aa2:	f010 f999 	bl	8023dd8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 8013aa6:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8013aaa:	4618      	mov	r0, r3
 8013aac:	f005 f8a8 	bl	8018c00 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013ab0:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8013ab4:	4618      	mov	r0, r3
 8013ab6:	f00f ffc0 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
		std::string msg = "expected " + message;
 8013aba:	f107 0310 	add.w	r3, r7, #16
 8013abe:	4618      	mov	r0, r3
 8013ac0:	f00f ffbb 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	}
}
 8013ac4:	bf00      	nop
 8013ac6:	3740      	adds	r7, #64	; 0x40
 8013ac8:	46bd      	mov	sp, r7
 8013aca:	bd80      	pop	{r7, pc}
 8013acc:	080298e0 	.word	0x080298e0

08013ad0 <_ZN6Parser24parse_function_argumentsEP13Function_call>:

void Parser::parse_function_arguments(Function_call *f)
{
 8013ad0:	b590      	push	{r4, r7, lr}
 8013ad2:	b085      	sub	sp, #20
 8013ad4:	af00      	add	r7, sp, #0
 8013ad6:	6078      	str	r0, [r7, #4]
 8013ad8:	6039      	str	r1, [r7, #0]
	if (token_buffer.type != TOKEN_RIGHT_BRACKET)
 8013ada:	687b      	ldr	r3, [r7, #4]
 8013adc:	781b      	ldrb	r3, [r3, #0]
 8013ade:	2b27      	cmp	r3, #39	; 0x27
 8013ae0:	d023      	beq.n	8013b2a <_ZN6Parser24parse_function_argumentsEP13Function_call+0x5a>
	{
		f->arguments.push_back(parse_expression());
 8013ae2:	683b      	ldr	r3, [r7, #0]
 8013ae4:	f103 0420 	add.w	r4, r3, #32
 8013ae8:	6878      	ldr	r0, [r7, #4]
 8013aea:	f007 fbed 	bl	801b2c8 <_ZN6Parser16parse_expressionEv>
 8013aee:	4603      	mov	r3, r0
 8013af0:	60bb      	str	r3, [r7, #8]
 8013af2:	f107 0308 	add.w	r3, r7, #8
 8013af6:	4619      	mov	r1, r3
 8013af8:	4620      	mov	r0, r4
 8013afa:	f000 fc8b 	bl	8014414 <_ZNSt6vectorIP10ExpressionSaIS1_EE9push_backEOS1_>
		while (token_buffer.type == TOKEN_COMA)
 8013afe:	687b      	ldr	r3, [r7, #4]
 8013b00:	781b      	ldrb	r3, [r3, #0]
 8013b02:	2b0c      	cmp	r3, #12
 8013b04:	d111      	bne.n	8013b2a <_ZN6Parser24parse_function_argumentsEP13Function_call+0x5a>
		{
			get_next_token();
 8013b06:	6878      	ldr	r0, [r7, #4]
 8013b08:	f000 facb 	bl	80140a2 <_ZN6Parser14get_next_tokenEv>
			f->arguments.push_back(parse_expression());
 8013b0c:	683b      	ldr	r3, [r7, #0]
 8013b0e:	f103 0420 	add.w	r4, r3, #32
 8013b12:	6878      	ldr	r0, [r7, #4]
 8013b14:	f007 fbd8 	bl	801b2c8 <_ZN6Parser16parse_expressionEv>
 8013b18:	4603      	mov	r3, r0
 8013b1a:	60fb      	str	r3, [r7, #12]
 8013b1c:	f107 030c 	add.w	r3, r7, #12
 8013b20:	4619      	mov	r1, r3
 8013b22:	4620      	mov	r0, r4
 8013b24:	f000 fc76 	bl	8014414 <_ZNSt6vectorIP10ExpressionSaIS1_EE9push_backEOS1_>
		while (token_buffer.type == TOKEN_COMA)
 8013b28:	e7e9      	b.n	8013afe <_ZN6Parser24parse_function_argumentsEP13Function_call+0x2e>
		}
	}
}
 8013b2a:	bf00      	nop
 8013b2c:	3714      	adds	r7, #20
 8013b2e:	46bd      	mov	sp, r7
 8013b30:	bd90      	pop	{r4, r7, pc}

08013b32 <_ZN13Function_callC1Ev>:
	variable_type type;
	std::string id;
	Expression* index;
};

class Function_call
 8013b32:	b580      	push	{r7, lr}
 8013b34:	b082      	sub	sp, #8
 8013b36:	af00      	add	r7, sp, #0
 8013b38:	6078      	str	r0, [r7, #4]
 8013b3a:	687b      	ldr	r3, [r7, #4]
 8013b3c:	3308      	adds	r3, #8
 8013b3e:	4618      	mov	r0, r3
 8013b40:	f00f ff5a 	bl	80239f8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>
 8013b44:	687b      	ldr	r3, [r7, #4]
 8013b46:	3320      	adds	r3, #32
 8013b48:	4618      	mov	r0, r3
 8013b4a:	f7ff fdd4 	bl	80136f6 <_ZNSt6vectorIP10ExpressionSaIS1_EEC1Ev>
 8013b4e:	687b      	ldr	r3, [r7, #4]
 8013b50:	4618      	mov	r0, r3
 8013b52:	3708      	adds	r7, #8
 8013b54:	46bd      	mov	sp, r7
 8013b56:	bd80      	pop	{r7, pc}

08013b58 <_ZN6Parser19parse_function_callERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

Function_call* Parser::parse_function_call(std::string &id)
{
 8013b58:	b590      	push	{r4, r7, lr}
 8013b5a:	b091      	sub	sp, #68	; 0x44
 8013b5c:	af00      	add	r7, sp, #0
 8013b5e:	6078      	str	r0, [r7, #4]
 8013b60:	6039      	str	r1, [r7, #0]
	auto f = new Function_call();
 8013b62:	202c      	movs	r0, #44	; 0x2c
 8013b64:	f00f fcc7 	bl	80234f6 <_Znwj>
 8013b68:	4603      	mov	r3, r0
 8013b6a:	461c      	mov	r4, r3
 8013b6c:	4620      	mov	r0, r4
 8013b6e:	232c      	movs	r3, #44	; 0x2c
 8013b70:	461a      	mov	r2, r3
 8013b72:	2100      	movs	r1, #0
 8013b74:	f011 f994 	bl	8024ea0 <memset>
 8013b78:	4620      	mov	r0, r4
 8013b7a:	f7ff ffda 	bl	8013b32 <_ZN13Function_callC1Ev>
 8013b7e:	63fc      	str	r4, [r7, #60]	; 0x3c
	f->id = std::string(id);
 8013b80:	f107 0308 	add.w	r3, r7, #8
 8013b84:	6839      	ldr	r1, [r7, #0]
 8013b86:	4618      	mov	r0, r3
 8013b88:	f010 f926 	bl	8023dd8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 8013b8c:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8013b8e:	3308      	adds	r3, #8
 8013b90:	f107 0208 	add.w	r2, r7, #8
 8013b94:	4611      	mov	r1, r2
 8013b96:	4618      	mov	r0, r3
 8013b98:	f00f ff5b 	bl	8023a52 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>
 8013b9c:	f107 0308 	add.w	r3, r7, #8
 8013ba0:	4618      	mov	r0, r3
 8013ba2:	f00f ff4a 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	f->line = Position_counter::get_instance().get_line();
 8013ba6:	f002 fe6b 	bl	8016880 <_ZN16Position_counter12get_instanceEv>
 8013baa:	4603      	mov	r3, r0
 8013bac:	4618      	mov	r0, r3
 8013bae:	f002 feb3 	bl	8016918 <_ZN16Position_counter8get_lineEv>
 8013bb2:	4602      	mov	r2, r0
 8013bb4:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8013bb6:	601a      	str	r2, [r3, #0]
	f->position = Position_counter::get_instance().get_position();
 8013bb8:	f002 fe62 	bl	8016880 <_ZN16Position_counter12get_instanceEv>
 8013bbc:	4603      	mov	r3, r0
 8013bbe:	4618      	mov	r0, r3
 8013bc0:	f002 febe 	bl	8016940 <_ZN16Position_counter12get_positionEv>
 8013bc4:	4602      	mov	r2, r0
 8013bc6:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8013bc8:	605a      	str	r2, [r3, #4]
	get_next_token();
 8013bca:	6878      	ldr	r0, [r7, #4]
 8013bcc:	f000 fa69 	bl	80140a2 <_ZN6Parser14get_next_tokenEv>
	parse_function_arguments(f);
 8013bd0:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 8013bd2:	6878      	ldr	r0, [r7, #4]
 8013bd4:	f7ff ff7c 	bl	8013ad0 <_ZN6Parser24parse_function_argumentsEP13Function_call>
	assert_token(TOKEN_RIGHT_BRACKET, "closing bracket");
 8013bd8:	f107 0338 	add.w	r3, r7, #56	; 0x38
 8013bdc:	4618      	mov	r0, r3
 8013bde:	f00f fc9b 	bl	8023518 <_ZNSaIcEC1Ev>
 8013be2:	f107 0238 	add.w	r2, r7, #56	; 0x38
 8013be6:	f107 0320 	add.w	r3, r7, #32
 8013bea:	490e      	ldr	r1, [pc, #56]	; (8013c24 <_ZN6Parser19parse_function_callERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xcc>)
 8013bec:	4618      	mov	r0, r3
 8013bee:	f7ee f8cc 	bl	8001d8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8013bf2:	f107 0320 	add.w	r3, r7, #32
 8013bf6:	461a      	mov	r2, r3
 8013bf8:	2127      	movs	r1, #39	; 0x27
 8013bfa:	6878      	ldr	r0, [r7, #4]
 8013bfc:	f7ff ff38 	bl	8013a70 <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013c00:	f107 0320 	add.w	r3, r7, #32
 8013c04:	4618      	mov	r0, r3
 8013c06:	f00f ff18 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8013c0a:	f107 0338 	add.w	r3, r7, #56	; 0x38
 8013c0e:	4618      	mov	r0, r3
 8013c10:	f00f fc83 	bl	802351a <_ZNSaIcED1Ev>
	get_next_token();
 8013c14:	6878      	ldr	r0, [r7, #4]
 8013c16:	f000 fa44 	bl	80140a2 <_ZN6Parser14get_next_tokenEv>
	return f;
 8013c1a:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
}
 8013c1c:	4618      	mov	r0, r3
 8013c1e:	3744      	adds	r7, #68	; 0x44
 8013c20:	46bd      	mov	sp, r7
 8013c22:	bd90      	pop	{r4, r7, pc}
 8013c24:	080298ec 	.word	0x080298ec

08013c28 <_ZN6Parser17parse_method_callEP8Variable>:

Method_call* Parser::parse_method_call(Variable* var)
{
 8013c28:	b590      	push	{r4, r7, lr}
 8013c2a:	b099      	sub	sp, #100	; 0x64
 8013c2c:	af00      	add	r7, sp, #0
 8013c2e:	6078      	str	r0, [r7, #4]
 8013c30:	6039      	str	r1, [r7, #0]
	auto m = new Method_call();
 8013c32:	2008      	movs	r0, #8
 8013c34:	f00f fc5f 	bl	80234f6 <_Znwj>
 8013c38:	4603      	mov	r3, r0
 8013c3a:	2200      	movs	r2, #0
 8013c3c:	601a      	str	r2, [r3, #0]
 8013c3e:	2200      	movs	r2, #0
 8013c40:	605a      	str	r2, [r3, #4]
 8013c42:	65fb      	str	r3, [r7, #92]	; 0x5c
	m->vector = var;
 8013c44:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8013c46:	683a      	ldr	r2, [r7, #0]
 8013c48:	601a      	str	r2, [r3, #0]
	assert_token(TOKEN_IDENTIFIER, "method identifier");
 8013c4a:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8013c4e:	4618      	mov	r0, r3
 8013c50:	f00f fc62 	bl	8023518 <_ZNSaIcEC1Ev>
 8013c54:	f107 023c 	add.w	r2, r7, #60	; 0x3c
 8013c58:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8013c5c:	492a      	ldr	r1, [pc, #168]	; (8013d08 <_ZN6Parser17parse_method_callEP8Variable+0xe0>)
 8013c5e:	4618      	mov	r0, r3
 8013c60:	f7ee f893 	bl	8001d8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8013c64:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8013c68:	461a      	mov	r2, r3
 8013c6a:	2102      	movs	r1, #2
 8013c6c:	6878      	ldr	r0, [r7, #4]
 8013c6e:	f7ff feff 	bl	8013a70 <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013c72:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8013c76:	4618      	mov	r0, r3
 8013c78:	f00f fedf 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8013c7c:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8013c80:	4618      	mov	r0, r3
 8013c82:	f00f fc4a 	bl	802351a <_ZNSaIcED1Ev>
	std::string id = std::get<std::string>(token_buffer.value);
 8013c86:	687b      	ldr	r3, [r7, #4]
 8013c88:	3304      	adds	r3, #4
 8013c8a:	4618      	mov	r0, r3
 8013c8c:	f000 fc04 	bl	8014498 <_ZSt3getINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_ifbEERT_RSt7variantIJDpT0_EE>
 8013c90:	4602      	mov	r2, r0
 8013c92:	f107 030c 	add.w	r3, r7, #12
 8013c96:	4611      	mov	r1, r2
 8013c98:	4618      	mov	r0, r3
 8013c9a:	f010 f89d 	bl	8023dd8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
	get_next_token();
 8013c9e:	6878      	ldr	r0, [r7, #4]
 8013ca0:	f000 f9ff 	bl	80140a2 <_ZN6Parser14get_next_tokenEv>
	assert_token(TOKEN_LEFT_BRACKET, "opening bracket");
 8013ca4:	f107 0358 	add.w	r3, r7, #88	; 0x58
 8013ca8:	4618      	mov	r0, r3
 8013caa:	f00f fc35 	bl	8023518 <_ZNSaIcEC1Ev>
 8013cae:	f107 0258 	add.w	r2, r7, #88	; 0x58
 8013cb2:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8013cb6:	4915      	ldr	r1, [pc, #84]	; (8013d0c <_ZN6Parser17parse_method_callEP8Variable+0xe4>)
 8013cb8:	4618      	mov	r0, r3
 8013cba:	f7ee f866 	bl	8001d8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8013cbe:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8013cc2:	461a      	mov	r2, r3
 8013cc4:	2126      	movs	r1, #38	; 0x26
 8013cc6:	6878      	ldr	r0, [r7, #4]
 8013cc8:	f7ff fed2 	bl	8013a70 <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013ccc:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8013cd0:	4618      	mov	r0, r3
 8013cd2:	f00f feb2 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8013cd6:	f107 0358 	add.w	r3, r7, #88	; 0x58
 8013cda:	4618      	mov	r0, r3
 8013cdc:	f00f fc1d 	bl	802351a <_ZNSaIcED1Ev>
	m->call = parse_function_call(id);
 8013ce0:	f107 030c 	add.w	r3, r7, #12
 8013ce4:	4619      	mov	r1, r3
 8013ce6:	6878      	ldr	r0, [r7, #4]
 8013ce8:	f7ff ff36 	bl	8013b58 <_ZN6Parser19parse_function_callERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013cec:	4602      	mov	r2, r0
 8013cee:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8013cf0:	605a      	str	r2, [r3, #4]
	return m;
 8013cf2:	6dfc      	ldr	r4, [r7, #92]	; 0x5c
	std::string id = std::get<std::string>(token_buffer.value);
 8013cf4:	f107 030c 	add.w	r3, r7, #12
 8013cf8:	4618      	mov	r0, r3
 8013cfa:	f00f fe9e 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	return m;
 8013cfe:	4623      	mov	r3, r4
}
 8013d00:	4618      	mov	r0, r3
 8013d02:	3764      	adds	r7, #100	; 0x64
 8013d04:	46bd      	mov	sp, r7
 8013d06:	bd90      	pop	{r4, r7, pc}
 8013d08:	080298fc 	.word	0x080298fc
 8013d0c:	08029910 	.word	0x08029910

08013d10 <_ZN6Parser26parse_identifier_statementEP9Statement>:

void Parser::parse_identifier_statement(Statement *s)
{
 8013d10:	b580      	push	{r7, lr}
 8013d12:	b094      	sub	sp, #80	; 0x50
 8013d14:	af00      	add	r7, sp, #0
 8013d16:	6078      	str	r0, [r7, #4]
 8013d18:	6039      	str	r1, [r7, #0]
	std::string id = std::get<std::string>(token_buffer.value);
 8013d1a:	687b      	ldr	r3, [r7, #4]
 8013d1c:	3304      	adds	r3, #4
 8013d1e:	4618      	mov	r0, r3
 8013d20:	f000 fbba 	bl	8014498 <_ZSt3getINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_ifbEERT_RSt7variantIJDpT0_EE>
 8013d24:	4602      	mov	r2, r0
 8013d26:	f107 030c 	add.w	r3, r7, #12
 8013d2a:	4611      	mov	r1, r2
 8013d2c:	4618      	mov	r0, r3
 8013d2e:	f010 f853 	bl	8023dd8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
	get_next_token();
 8013d32:	6878      	ldr	r0, [r7, #4]
 8013d34:	f000 f9b5 	bl	80140a2 <_ZN6Parser14get_next_tokenEv>
	if (token_buffer.type == TOKEN_LEFT_BRACKET)
 8013d38:	687b      	ldr	r3, [r7, #4]
 8013d3a:	781b      	ldrb	r3, [r3, #0]
 8013d3c:	2b26      	cmp	r3, #38	; 0x26
 8013d3e:	d113      	bne.n	8013d68 <_ZN6Parser26parse_identifier_statementEP9Statement+0x58>
	{
		s->type = STATEMENT_FUNCTION_CALL;
 8013d40:	683b      	ldr	r3, [r7, #0]
 8013d42:	2201      	movs	r2, #1
 8013d44:	701a      	strb	r2, [r3, #0]
		s->content = parse_function_call(id);
 8013d46:	f107 030c 	add.w	r3, r7, #12
 8013d4a:	4619      	mov	r1, r3
 8013d4c:	6878      	ldr	r0, [r7, #4]
 8013d4e:	f7ff ff03 	bl	8013b58 <_ZN6Parser19parse_function_callERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013d52:	4603      	mov	r3, r0
 8013d54:	627b      	str	r3, [r7, #36]	; 0x24
 8013d56:	683b      	ldr	r3, [r7, #0]
 8013d58:	3304      	adds	r3, #4
 8013d5a:	f107 0224 	add.w	r2, r7, #36	; 0x24
 8013d5e:	4611      	mov	r1, r2
 8013d60:	4618      	mov	r0, r3
 8013d62:	f000 fbb8 	bl	80144d6 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS3_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
 8013d66:	e051      	b.n	8013e0c <_ZN6Parser26parse_identifier_statementEP9Statement+0xfc>
	}
	else
	{
		auto var = parse_variable(id);
 8013d68:	f107 030c 	add.w	r3, r7, #12
 8013d6c:	4619      	mov	r1, r3
 8013d6e:	6878      	ldr	r0, [r7, #4]
 8013d70:	f7ff fe40 	bl	80139f4 <_ZN6Parser14parse_variableERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013d74:	64f8      	str	r0, [r7, #76]	; 0x4c
		if(token_buffer.type == TOKEN_ASSIGN)
 8013d76:	687b      	ldr	r3, [r7, #4]
 8013d78:	781b      	ldrb	r3, [r3, #0]
 8013d7a:	2b18      	cmp	r3, #24
 8013d7c:	d114      	bne.n	8013da8 <_ZN6Parser26parse_identifier_statementEP9Statement+0x98>
		{
			s->type = STATEMENT_ASSIGNMENT;
 8013d7e:	683b      	ldr	r3, [r7, #0]
 8013d80:	2200      	movs	r2, #0
 8013d82:	701a      	strb	r2, [r3, #0]
			get_next_token();
 8013d84:	6878      	ldr	r0, [r7, #4]
 8013d86:	f000 f98c 	bl	80140a2 <_ZN6Parser14get_next_tokenEv>
			s->content = parse_assignment(var);
 8013d8a:	6cf9      	ldr	r1, [r7, #76]	; 0x4c
 8013d8c:	6878      	ldr	r0, [r7, #4]
 8013d8e:	f7ff fe53 	bl	8013a38 <_ZN6Parser16parse_assignmentEP8Variable>
 8013d92:	4603      	mov	r3, r0
 8013d94:	62bb      	str	r3, [r7, #40]	; 0x28
 8013d96:	683b      	ldr	r3, [r7, #0]
 8013d98:	3304      	adds	r3, #4
 8013d9a:	f107 0228 	add.w	r2, r7, #40	; 0x28
 8013d9e:	4611      	mov	r1, r2
 8013da0:	4618      	mov	r0, r3
 8013da2:	f000 fbc2 	bl	801452a <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS1_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
 8013da6:	e031      	b.n	8013e0c <_ZN6Parser26parse_identifier_statementEP9Statement+0xfc>
		}
		else
		{
			assert_token(TOKEN_DOT, "method call or assignment");
 8013da8:	f107 0344 	add.w	r3, r7, #68	; 0x44
 8013dac:	4618      	mov	r0, r3
 8013dae:	f00f fbb3 	bl	8023518 <_ZNSaIcEC1Ev>
 8013db2:	f107 0244 	add.w	r2, r7, #68	; 0x44
 8013db6:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8013dba:	4919      	ldr	r1, [pc, #100]	; (8013e20 <_ZN6Parser26parse_identifier_statementEP9Statement+0x110>)
 8013dbc:	4618      	mov	r0, r3
 8013dbe:	f7ed ffe4 	bl	8001d8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8013dc2:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8013dc6:	461a      	mov	r2, r3
 8013dc8:	210b      	movs	r1, #11
 8013dca:	6878      	ldr	r0, [r7, #4]
 8013dcc:	f7ff fe50 	bl	8013a70 <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013dd0:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8013dd4:	4618      	mov	r0, r3
 8013dd6:	f00f fe30 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8013dda:	f107 0344 	add.w	r3, r7, #68	; 0x44
 8013dde:	4618      	mov	r0, r3
 8013de0:	f00f fb9b 	bl	802351a <_ZNSaIcED1Ev>
			s->type = STATEMENT_METHOD_CALL;
 8013de4:	683b      	ldr	r3, [r7, #0]
 8013de6:	2202      	movs	r2, #2
 8013de8:	701a      	strb	r2, [r3, #0]
			get_next_token();
 8013dea:	6878      	ldr	r0, [r7, #4]
 8013dec:	f000 f959 	bl	80140a2 <_ZN6Parser14get_next_tokenEv>
			s->content = parse_method_call(var);
 8013df0:	6cf9      	ldr	r1, [r7, #76]	; 0x4c
 8013df2:	6878      	ldr	r0, [r7, #4]
 8013df4:	f7ff ff18 	bl	8013c28 <_ZN6Parser17parse_method_callEP8Variable>
 8013df8:	4603      	mov	r3, r0
 8013dfa:	64bb      	str	r3, [r7, #72]	; 0x48
 8013dfc:	683b      	ldr	r3, [r7, #0]
 8013dfe:	3304      	adds	r3, #4
 8013e00:	f107 0248 	add.w	r2, r7, #72	; 0x48
 8013e04:	4611      	mov	r1, r2
 8013e06:	4618      	mov	r0, r3
 8013e08:	f000 fbb9 	bl	801457e <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
	std::string id = std::get<std::string>(token_buffer.value);
 8013e0c:	f107 030c 	add.w	r3, r7, #12
 8013e10:	4618      	mov	r0, r3
 8013e12:	f00f fe12 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
		}
	}
}
 8013e16:	bf00      	nop
 8013e18:	3750      	adds	r7, #80	; 0x50
 8013e1a:	46bd      	mov	sp, r7
 8013e1c:	bd80      	pop	{r7, pc}
 8013e1e:	bf00      	nop
 8013e20:	08029920 	.word	0x08029920

08013e24 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEC1Ev>:
      variant() = default;
 8013e24:	b580      	push	{r7, lr}
 8013e26:	b082      	sub	sp, #8
 8013e28:	af00      	add	r7, sp, #0
 8013e2a:	6078      	str	r0, [r7, #4]
 8013e2c:	687b      	ldr	r3, [r7, #4]
 8013e2e:	4618      	mov	r0, r3
 8013e30:	f000 fc1a 	bl	8014668 <_ZNSt8__detail9__variant13_Variant_baseIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEC1Ev>
 8013e34:	687b      	ldr	r3, [r7, #4]
 8013e36:	4618      	mov	r0, r3
 8013e38:	3708      	adds	r7, #8
 8013e3a:	46bd      	mov	sp, r7
 8013e3c:	bd80      	pop	{r7, pc}

08013e3e <_ZN9StatementC1Ev>:
	STATEMENT_IF
}statement_type;

typedef std::variant<Assignment*, Function_call*, Method_call*, While_statement*, If_statement*> statement_content;

class Statement
 8013e3e:	b580      	push	{r7, lr}
 8013e40:	b082      	sub	sp, #8
 8013e42:	af00      	add	r7, sp, #0
 8013e44:	6078      	str	r0, [r7, #4]
 8013e46:	687b      	ldr	r3, [r7, #4]
 8013e48:	3304      	adds	r3, #4
 8013e4a:	4618      	mov	r0, r3
 8013e4c:	f7ff ffea 	bl	8013e24 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEC1Ev>
 8013e50:	687b      	ldr	r3, [r7, #4]
 8013e52:	4618      	mov	r0, r3
 8013e54:	3708      	adds	r7, #8
 8013e56:	46bd      	mov	sp, r7
 8013e58:	bd80      	pop	{r7, pc}
	...

08013e5c <_ZN6Parser15parse_statementEv>:

Statement* Parser::parse_statement() //todo refactor
{
 8013e5c:	b590      	push	{r4, r7, lr}
 8013e5e:	b08d      	sub	sp, #52	; 0x34
 8013e60:	af00      	add	r7, sp, #0
 8013e62:	6078      	str	r0, [r7, #4]
	auto s = new Statement();
 8013e64:	200c      	movs	r0, #12
 8013e66:	f00f fb46 	bl	80234f6 <_Znwj>
 8013e6a:	4603      	mov	r3, r0
 8013e6c:	461c      	mov	r4, r3
 8013e6e:	2300      	movs	r3, #0
 8013e70:	7023      	strb	r3, [r4, #0]
 8013e72:	2300      	movs	r3, #0
 8013e74:	6063      	str	r3, [r4, #4]
 8013e76:	2300      	movs	r3, #0
 8013e78:	7223      	strb	r3, [r4, #8]
 8013e7a:	4620      	mov	r0, r4
 8013e7c:	f7ff ffdf 	bl	8013e3e <_ZN9StatementC1Ev>
 8013e80:	62fc      	str	r4, [r7, #44]	; 0x2c
	switch (token_buffer.type)
 8013e82:	687b      	ldr	r3, [r7, #4]
 8013e84:	781b      	ldrb	r3, [r3, #0]
 8013e86:	2b13      	cmp	r3, #19
 8013e88:	d00b      	beq.n	8013ea2 <_ZN6Parser15parse_statementEv+0x46>
 8013e8a:	2b13      	cmp	r3, #19
 8013e8c:	dc31      	bgt.n	8013ef2 <_ZN6Parser15parse_statementEv+0x96>
 8013e8e:	2b02      	cmp	r3, #2
 8013e90:	d002      	beq.n	8013e98 <_ZN6Parser15parse_statementEv+0x3c>
 8013e92:	2b10      	cmp	r3, #16
 8013e94:	d019      	beq.n	8013eca <_ZN6Parser15parse_statementEv+0x6e>
 8013e96:	e02c      	b.n	8013ef2 <_ZN6Parser15parse_statementEv+0x96>
	{
	case TOKEN_IDENTIFIER:
		parse_identifier_statement(s);
 8013e98:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8013e9a:	6878      	ldr	r0, [r7, #4]
 8013e9c:	f7ff ff38 	bl	8013d10 <_ZN6Parser26parse_identifier_statementEP9Statement>
		break;
 8013ea0:	e044      	b.n	8013f2c <_ZN6Parser15parse_statementEv+0xd0>
	case TOKEN_WHILE:
		s->type = STATEMENT_WHILE;
 8013ea2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8013ea4:	2203      	movs	r2, #3
 8013ea6:	701a      	strb	r2, [r3, #0]
		get_next_token();
 8013ea8:	6878      	ldr	r0, [r7, #4]
 8013eaa:	f000 f8fa 	bl	80140a2 <_ZN6Parser14get_next_tokenEv>
		s->content = parse_while();
 8013eae:	6878      	ldr	r0, [r7, #4]
 8013eb0:	f7ff fae2 	bl	8013478 <_ZN6Parser11parse_whileEv>
 8013eb4:	4603      	mov	r3, r0
 8013eb6:	60bb      	str	r3, [r7, #8]
 8013eb8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8013eba:	3304      	adds	r3, #4
 8013ebc:	f107 0208 	add.w	r2, r7, #8
 8013ec0:	4611      	mov	r1, r2
 8013ec2:	4618      	mov	r0, r3
 8013ec4:	f000 fbdd 	bl	8014682 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS7_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
		break;
 8013ec8:	e030      	b.n	8013f2c <_ZN6Parser15parse_statementEv+0xd0>
	case TOKEN_IF:
		s->type = STATEMENT_IF;
 8013eca:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8013ecc:	2204      	movs	r2, #4
 8013ece:	701a      	strb	r2, [r3, #0]
		get_next_token();
 8013ed0:	6878      	ldr	r0, [r7, #4]
 8013ed2:	f000 f8e6 	bl	80140a2 <_ZN6Parser14get_next_tokenEv>
		s->content = parse_if();
 8013ed6:	6878      	ldr	r0, [r7, #4]
 8013ed8:	f7ff fc46 	bl	8013768 <_ZN6Parser8parse_ifEv>
 8013edc:	4603      	mov	r3, r0
 8013ede:	60fb      	str	r3, [r7, #12]
 8013ee0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8013ee2:	3304      	adds	r3, #4
 8013ee4:	f107 020c 	add.w	r2, r7, #12
 8013ee8:	4611      	mov	r1, r2
 8013eea:	4618      	mov	r0, r3
 8013eec:	f000 fbf3 	bl	80146d6 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS9_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
		break;
 8013ef0:	e01c      	b.n	8013f2c <_ZN6Parser15parse_statementEv+0xd0>
	default:
		Transmitter::report_error("expected statement: identifier, if, while");
 8013ef2:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8013ef6:	4618      	mov	r0, r3
 8013ef8:	f00f fb0e 	bl	8023518 <_ZNSaIcEC1Ev>
 8013efc:	f107 0228 	add.w	r2, r7, #40	; 0x28
 8013f00:	f107 0310 	add.w	r3, r7, #16
 8013f04:	490c      	ldr	r1, [pc, #48]	; (8013f38 <_ZN6Parser15parse_statementEv+0xdc>)
 8013f06:	4618      	mov	r0, r3
 8013f08:	f7ed ff3f 	bl	8001d8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8013f0c:	f107 0310 	add.w	r3, r7, #16
 8013f10:	4618      	mov	r0, r3
 8013f12:	f004 fe75 	bl	8018c00 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013f16:	f107 0310 	add.w	r3, r7, #16
 8013f1a:	4618      	mov	r0, r3
 8013f1c:	f00f fd8d 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8013f20:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8013f24:	4618      	mov	r0, r3
 8013f26:	f00f faf8 	bl	802351a <_ZNSaIcED1Ev>
		break;
 8013f2a:	bf00      	nop
	}
	return s;
 8013f2c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
}
 8013f2e:	4618      	mov	r0, r3
 8013f30:	3734      	adds	r7, #52	; 0x34
 8013f32:	46bd      	mov	sp, r7
 8013f34:	bd90      	pop	{r4, r7, pc}
 8013f36:	bf00      	nop
 8013f38:	0802993c 	.word	0x0802993c

08013f3c <_ZN6Parser24is_token_statement_firstEv>:

bool Parser::is_token_statement_first()
{
 8013f3c:	b480      	push	{r7}
 8013f3e:	b083      	sub	sp, #12
 8013f40:	af00      	add	r7, sp, #0
 8013f42:	6078      	str	r0, [r7, #4]
	return token_buffer.type == TOKEN_IDENTIFIER
 8013f44:	687b      	ldr	r3, [r7, #4]
 8013f46:	781b      	ldrb	r3, [r3, #0]
			|| token_buffer.type == TOKEN_WHILE
			|| token_buffer.type == TOKEN_IF;
 8013f48:	2b02      	cmp	r3, #2
 8013f4a:	d007      	beq.n	8013f5c <_ZN6Parser24is_token_statement_firstEv+0x20>
			|| token_buffer.type == TOKEN_WHILE
 8013f4c:	687b      	ldr	r3, [r7, #4]
 8013f4e:	781b      	ldrb	r3, [r3, #0]
 8013f50:	2b13      	cmp	r3, #19
 8013f52:	d003      	beq.n	8013f5c <_ZN6Parser24is_token_statement_firstEv+0x20>
			|| token_buffer.type == TOKEN_IF;
 8013f54:	687b      	ldr	r3, [r7, #4]
 8013f56:	781b      	ldrb	r3, [r3, #0]
 8013f58:	2b10      	cmp	r3, #16
 8013f5a:	d101      	bne.n	8013f60 <_ZN6Parser24is_token_statement_firstEv+0x24>
 8013f5c:	2301      	movs	r3, #1
 8013f5e:	e000      	b.n	8013f62 <_ZN6Parser24is_token_statement_firstEv+0x26>
 8013f60:	2300      	movs	r3, #0
}
 8013f62:	4618      	mov	r0, r3
 8013f64:	370c      	adds	r7, #12
 8013f66:	46bd      	mov	sp, r7
 8013f68:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013f6c:	4770      	bx	lr

08013f6e <_ZN6Parser13skip_newlinesEv>:

void Parser::skip_newlines()
{
 8013f6e:	b580      	push	{r7, lr}
 8013f70:	b082      	sub	sp, #8
 8013f72:	af00      	add	r7, sp, #0
 8013f74:	6078      	str	r0, [r7, #4]
	while (token_buffer.type == TOKEN_NEWLINE)
 8013f76:	687b      	ldr	r3, [r7, #4]
 8013f78:	781b      	ldrb	r3, [r3, #0]
 8013f7a:	2b0a      	cmp	r3, #10
 8013f7c:	d103      	bne.n	8013f86 <_ZN6Parser13skip_newlinesEv+0x18>
	{
		get_next_token();
 8013f7e:	6878      	ldr	r0, [r7, #4]
 8013f80:	f000 f88f 	bl	80140a2 <_ZN6Parser14get_next_tokenEv>
	while (token_buffer.type == TOKEN_NEWLINE)
 8013f84:	e7f7      	b.n	8013f76 <_ZN6Parser13skip_newlinesEv+0x8>
	}
}
 8013f86:	bf00      	nop
 8013f88:	3708      	adds	r7, #8
 8013f8a:	46bd      	mov	sp, r7
 8013f8c:	bd80      	pop	{r7, pc}

08013f8e <_ZNSt12_Vector_baseIP9StatementSaIS1_EEC1Ev>:
      _Vector_base() = default;
 8013f8e:	b580      	push	{r7, lr}
 8013f90:	b082      	sub	sp, #8
 8013f92:	af00      	add	r7, sp, #0
 8013f94:	6078      	str	r0, [r7, #4]
 8013f96:	687b      	ldr	r3, [r7, #4]
 8013f98:	4618      	mov	r0, r3
 8013f9a:	f000 fbc6 	bl	801472a <_ZNSt12_Vector_baseIP9StatementSaIS1_EE12_Vector_implC1Ev>
 8013f9e:	687b      	ldr	r3, [r7, #4]
 8013fa0:	4618      	mov	r0, r3
 8013fa2:	3708      	adds	r7, #8
 8013fa4:	46bd      	mov	sp, r7
 8013fa6:	bd80      	pop	{r7, pc}

08013fa8 <_ZNSt6vectorIP9StatementSaIS1_EEC1Ev>:
      vector() = default;
 8013fa8:	b580      	push	{r7, lr}
 8013faa:	b082      	sub	sp, #8
 8013fac:	af00      	add	r7, sp, #0
 8013fae:	6078      	str	r0, [r7, #4]
 8013fb0:	687b      	ldr	r3, [r7, #4]
 8013fb2:	4618      	mov	r0, r3
 8013fb4:	f7ff ffeb 	bl	8013f8e <_ZNSt12_Vector_baseIP9StatementSaIS1_EEC1Ev>
 8013fb8:	687b      	ldr	r3, [r7, #4]
 8013fba:	4618      	mov	r0, r3
 8013fbc:	3708      	adds	r7, #8
 8013fbe:	46bd      	mov	sp, r7
 8013fc0:	bd80      	pop	{r7, pc}

08013fc2 <_ZN4BodyC1Ev>:
class Body
 8013fc2:	b580      	push	{r7, lr}
 8013fc4:	b082      	sub	sp, #8
 8013fc6:	af00      	add	r7, sp, #0
 8013fc8:	6078      	str	r0, [r7, #4]
 8013fca:	687b      	ldr	r3, [r7, #4]
 8013fcc:	4618      	mov	r0, r3
 8013fce:	f7ff ffeb 	bl	8013fa8 <_ZNSt6vectorIP9StatementSaIS1_EEC1Ev>
 8013fd2:	687b      	ldr	r3, [r7, #4]
 8013fd4:	4618      	mov	r0, r3
 8013fd6:	3708      	adds	r7, #8
 8013fd8:	46bd      	mov	sp, r7
 8013fda:	bd80      	pop	{r7, pc}

08013fdc <_ZN6Parser10parse_bodyEv>:

Body* Parser::parse_body()
{
 8013fdc:	b590      	push	{r4, r7, lr}
 8013fde:	b085      	sub	sp, #20
 8013fe0:	af00      	add	r7, sp, #0
 8013fe2:	6078      	str	r0, [r7, #4]
	auto bod = new Body();
 8013fe4:	200c      	movs	r0, #12
 8013fe6:	f00f fa86 	bl	80234f6 <_Znwj>
 8013fea:	4603      	mov	r3, r0
 8013fec:	461c      	mov	r4, r3
 8013fee:	4622      	mov	r2, r4
 8013ff0:	2300      	movs	r3, #0
 8013ff2:	6013      	str	r3, [r2, #0]
 8013ff4:	6053      	str	r3, [r2, #4]
 8013ff6:	6093      	str	r3, [r2, #8]
 8013ff8:	4620      	mov	r0, r4
 8013ffa:	f7ff ffe2 	bl	8013fc2 <_ZN4BodyC1Ev>
 8013ffe:	60fc      	str	r4, [r7, #12]
	while (is_token_statement_first())
 8014000:	6878      	ldr	r0, [r7, #4]
 8014002:	f7ff ff9b 	bl	8013f3c <_ZN6Parser24is_token_statement_firstEv>
 8014006:	4603      	mov	r3, r0
 8014008:	2b00      	cmp	r3, #0
 801400a:	d00f      	beq.n	801402c <_ZN6Parser10parse_bodyEv+0x50>
	{
		bod->statements.push_back(parse_statement());
 801400c:	68fc      	ldr	r4, [r7, #12]
 801400e:	6878      	ldr	r0, [r7, #4]
 8014010:	f7ff ff24 	bl	8013e5c <_ZN6Parser15parse_statementEv>
 8014014:	4603      	mov	r3, r0
 8014016:	60bb      	str	r3, [r7, #8]
 8014018:	f107 0308 	add.w	r3, r7, #8
 801401c:	4619      	mov	r1, r3
 801401e:	4620      	mov	r0, r4
 8014020:	f000 fb93 	bl	801474a <_ZNSt6vectorIP9StatementSaIS1_EE9push_backEOS1_>
		skip_newlines();
 8014024:	6878      	ldr	r0, [r7, #4]
 8014026:	f7ff ffa2 	bl	8013f6e <_ZN6Parser13skip_newlinesEv>
	while (is_token_statement_first())
 801402a:	e7e9      	b.n	8014000 <_ZN6Parser10parse_bodyEv+0x24>
	}
	return bod;
 801402c:	68fb      	ldr	r3, [r7, #12]
}
 801402e:	4618      	mov	r0, r3
 8014030:	3714      	adds	r7, #20
 8014032:	46bd      	mov	sp, r7
 8014034:	bd90      	pop	{r4, r7, pc}

08014036 <_ZNSt8__detail9__variant13_Variant_baseIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_>:
    struct _Variant_base : _Move_assign_alias<_Types...>
 8014036:	b580      	push	{r7, lr}
 8014038:	b082      	sub	sp, #8
 801403a:	af00      	add	r7, sp, #0
 801403c:	6078      	str	r0, [r7, #4]
 801403e:	6039      	str	r1, [r7, #0]
 8014040:	687b      	ldr	r3, [r7, #4]
 8014042:	683a      	ldr	r2, [r7, #0]
 8014044:	4611      	mov	r1, r2
 8014046:	4618      	mov	r0, r3
 8014048:	f000 fd32 	bl	8014ab0 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_>
 801404c:	687b      	ldr	r3, [r7, #4]
 801404e:	4618      	mov	r0, r3
 8014050:	3708      	adds	r7, #8
 8014052:	46bd      	mov	sp, r7
 8014054:	bd80      	pop	{r7, pc}

08014056 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS6_>:
    class variant
 8014056:	b580      	push	{r7, lr}
 8014058:	b082      	sub	sp, #8
 801405a:	af00      	add	r7, sp, #0
 801405c:	6078      	str	r0, [r7, #4]
 801405e:	6039      	str	r1, [r7, #0]
 8014060:	687b      	ldr	r3, [r7, #4]
 8014062:	683a      	ldr	r2, [r7, #0]
 8014064:	4611      	mov	r1, r2
 8014066:	4618      	mov	r0, r3
 8014068:	f7ff ffe5 	bl	8014036 <_ZNSt8__detail9__variant13_Variant_baseIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_>
 801406c:	687b      	ldr	r3, [r7, #4]
 801406e:	4618      	mov	r0, r3
 8014070:	3708      	adds	r7, #8
 8014072:	46bd      	mov	sp, r7
 8014074:	bd80      	pop	{r7, pc}

08014076 <_ZN5TokenaSEOS_>:
 8014076:	b580      	push	{r7, lr}
 8014078:	b082      	sub	sp, #8
 801407a:	af00      	add	r7, sp, #0
 801407c:	6078      	str	r0, [r7, #4]
 801407e:	6039      	str	r1, [r7, #0]
 8014080:	683b      	ldr	r3, [r7, #0]
 8014082:	781a      	ldrb	r2, [r3, #0]
 8014084:	687b      	ldr	r3, [r7, #4]
 8014086:	701a      	strb	r2, [r3, #0]
 8014088:	683b      	ldr	r3, [r7, #0]
 801408a:	1d1a      	adds	r2, r3, #4
 801408c:	687b      	ldr	r3, [r7, #4]
 801408e:	3304      	adds	r3, #4
 8014090:	4611      	mov	r1, r2
 8014092:	4618      	mov	r0, r3
 8014094:	f7ff ffdf 	bl	8014056 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS6_>
 8014098:	687b      	ldr	r3, [r7, #4]
 801409a:	4618      	mov	r0, r3
 801409c:	3708      	adds	r7, #8
 801409e:	46bd      	mov	sp, r7
 80140a0:	bd80      	pop	{r7, pc}

080140a2 <_ZN6Parser14get_next_tokenEv>:

void Parser::get_next_token()
{
 80140a2:	b580      	push	{r7, lr}
 80140a4:	b090      	sub	sp, #64	; 0x40
 80140a6:	af00      	add	r7, sp, #0
 80140a8:	6078      	str	r0, [r7, #4]
	token_buffer = Lexer::build_token();
 80140aa:	f107 0308 	add.w	r3, r7, #8
 80140ae:	4618      	mov	r0, r3
 80140b0:	f7fb fc84 	bl	800f9bc <_ZN5Lexer11build_tokenEv>
 80140b4:	687b      	ldr	r3, [r7, #4]
 80140b6:	f107 0208 	add.w	r2, r7, #8
 80140ba:	4611      	mov	r1, r2
 80140bc:	4618      	mov	r0, r3
 80140be:	f7ff ffda 	bl	8014076 <_ZN5TokenaSEOS_>
 80140c2:	f107 0308 	add.w	r3, r7, #8
 80140c6:	4618      	mov	r0, r3
 80140c8:	f7fb f8d3 	bl	800f272 <_ZN5TokenD1Ev>
	if (token_buffer.type == TOKEN_ERROR)
 80140cc:	687b      	ldr	r3, [r7, #4]
 80140ce:	781b      	ldrb	r3, [r3, #0]
 80140d0:	2b00      	cmp	r3, #0
 80140d2:	d115      	bne.n	8014100 <_ZN6Parser14get_next_tokenEv+0x5e>
	{
		Transmitter::report_error(std::get<std::string>(token_buffer.value));
 80140d4:	687b      	ldr	r3, [r7, #4]
 80140d6:	3304      	adds	r3, #4
 80140d8:	4618      	mov	r0, r3
 80140da:	f000 f9dd 	bl	8014498 <_ZSt3getINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_ifbEERT_RSt7variantIJDpT0_EE>
 80140de:	4602      	mov	r2, r0
 80140e0:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80140e4:	4611      	mov	r1, r2
 80140e6:	4618      	mov	r0, r3
 80140e8:	f00f fe76 	bl	8023dd8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 80140ec:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80140f0:	4618      	mov	r0, r3
 80140f2:	f004 fd85 	bl	8018c00 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 80140f6:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80140fa:	4618      	mov	r0, r3
 80140fc:	f00f fc9d 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	}
}
 8014100:	bf00      	nop
 8014102:	3740      	adds	r7, #64	; 0x40
 8014104:	46bd      	mov	sp, r7
 8014106:	bd80      	pop	{r7, pc}

08014108 <_ZN6Parser11parse_setupEP7Program>:

void Parser::parse_setup(Program *Prog)
{
 8014108:	b580      	push	{r7, lr}
 801410a:	b090      	sub	sp, #64	; 0x40
 801410c:	af00      	add	r7, sp, #0
 801410e:	6078      	str	r0, [r7, #4]
 8014110:	6039      	str	r1, [r7, #0]
	get_next_token();
 8014112:	6878      	ldr	r0, [r7, #4]
 8014114:	f7ff ffc5 	bl	80140a2 <_ZN6Parser14get_next_tokenEv>
	assert_token(TOKEN_SETUP, "\"setup\" keyword");
 8014118:	f107 0320 	add.w	r3, r7, #32
 801411c:	4618      	mov	r0, r3
 801411e:	f00f f9fb 	bl	8023518 <_ZNSaIcEC1Ev>
 8014122:	f107 0220 	add.w	r2, r7, #32
 8014126:	f107 0308 	add.w	r3, r7, #8
 801412a:	4923      	ldr	r1, [pc, #140]	; (80141b8 <_ZN6Parser11parse_setupEP7Program+0xb0>)
 801412c:	4618      	mov	r0, r3
 801412e:	f7ed fe2c 	bl	8001d8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8014132:	f107 0308 	add.w	r3, r7, #8
 8014136:	461a      	mov	r2, r3
 8014138:	2107      	movs	r1, #7
 801413a:	6878      	ldr	r0, [r7, #4]
 801413c:	f7ff fc98 	bl	8013a70 <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8014140:	f107 0308 	add.w	r3, r7, #8
 8014144:	4618      	mov	r0, r3
 8014146:	f00f fc78 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801414a:	f107 0320 	add.w	r3, r7, #32
 801414e:	4618      	mov	r0, r3
 8014150:	f00f f9e3 	bl	802351a <_ZNSaIcED1Ev>
	get_next_token();
 8014154:	6878      	ldr	r0, [r7, #4]
 8014156:	f7ff ffa4 	bl	80140a2 <_ZN6Parser14get_next_tokenEv>
	assert_token(TOKEN_NEWLINE, "line break after setup");
 801415a:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801415e:	4618      	mov	r0, r3
 8014160:	f00f f9da 	bl	8023518 <_ZNSaIcEC1Ev>
 8014164:	f107 023c 	add.w	r2, r7, #60	; 0x3c
 8014168:	f107 0324 	add.w	r3, r7, #36	; 0x24
 801416c:	4913      	ldr	r1, [pc, #76]	; (80141bc <_ZN6Parser11parse_setupEP7Program+0xb4>)
 801416e:	4618      	mov	r0, r3
 8014170:	f7ed fe0b 	bl	8001d8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8014174:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8014178:	461a      	mov	r2, r3
 801417a:	210a      	movs	r1, #10
 801417c:	6878      	ldr	r0, [r7, #4]
 801417e:	f7ff fc77 	bl	8013a70 <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8014182:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8014186:	4618      	mov	r0, r3
 8014188:	f00f fc57 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801418c:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8014190:	4618      	mov	r0, r3
 8014192:	f00f f9c2 	bl	802351a <_ZNSaIcED1Ev>
	get_next_token();
 8014196:	6878      	ldr	r0, [r7, #4]
 8014198:	f7ff ff83 	bl	80140a2 <_ZN6Parser14get_next_tokenEv>
	skip_newlines();
 801419c:	6878      	ldr	r0, [r7, #4]
 801419e:	f7ff fee6 	bl	8013f6e <_ZN6Parser13skip_newlinesEv>
	Prog->setup = parse_body();
 80141a2:	6878      	ldr	r0, [r7, #4]
 80141a4:	f7ff ff1a 	bl	8013fdc <_ZN6Parser10parse_bodyEv>
 80141a8:	4602      	mov	r2, r0
 80141aa:	683b      	ldr	r3, [r7, #0]
 80141ac:	601a      	str	r2, [r3, #0]
}
 80141ae:	bf00      	nop
 80141b0:	3740      	adds	r7, #64	; 0x40
 80141b2:	46bd      	mov	sp, r7
 80141b4:	bd80      	pop	{r7, pc}
 80141b6:	bf00      	nop
 80141b8:	08029968 	.word	0x08029968
 80141bc:	08029978 	.word	0x08029978

080141c0 <_ZN6Parser10parse_loopEP7Program>:

void Parser::parse_loop(Program *Prog)
{
 80141c0:	b580      	push	{r7, lr}
 80141c2:	b090      	sub	sp, #64	; 0x40
 80141c4:	af00      	add	r7, sp, #0
 80141c6:	6078      	str	r0, [r7, #4]
 80141c8:	6039      	str	r1, [r7, #0]
	assert_token(TOKEN_LOOP, "\"loop\" keyword");
 80141ca:	f107 0320 	add.w	r3, r7, #32
 80141ce:	4618      	mov	r0, r3
 80141d0:	f00f f9a2 	bl	8023518 <_ZNSaIcEC1Ev>
 80141d4:	f107 0220 	add.w	r2, r7, #32
 80141d8:	f107 0308 	add.w	r3, r7, #8
 80141dc:	4922      	ldr	r1, [pc, #136]	; (8014268 <_ZN6Parser10parse_loopEP7Program+0xa8>)
 80141de:	4618      	mov	r0, r3
 80141e0:	f7ed fdd3 	bl	8001d8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 80141e4:	f107 0308 	add.w	r3, r7, #8
 80141e8:	461a      	mov	r2, r3
 80141ea:	2108      	movs	r1, #8
 80141ec:	6878      	ldr	r0, [r7, #4]
 80141ee:	f7ff fc3f 	bl	8013a70 <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 80141f2:	f107 0308 	add.w	r3, r7, #8
 80141f6:	4618      	mov	r0, r3
 80141f8:	f00f fc1f 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80141fc:	f107 0320 	add.w	r3, r7, #32
 8014200:	4618      	mov	r0, r3
 8014202:	f00f f98a 	bl	802351a <_ZNSaIcED1Ev>
	get_next_token();
 8014206:	6878      	ldr	r0, [r7, #4]
 8014208:	f7ff ff4b 	bl	80140a2 <_ZN6Parser14get_next_tokenEv>
	assert_token(TOKEN_NEWLINE, "line break after loop");
 801420c:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8014210:	4618      	mov	r0, r3
 8014212:	f00f f981 	bl	8023518 <_ZNSaIcEC1Ev>
 8014216:	f107 023c 	add.w	r2, r7, #60	; 0x3c
 801421a:	f107 0324 	add.w	r3, r7, #36	; 0x24
 801421e:	4913      	ldr	r1, [pc, #76]	; (801426c <_ZN6Parser10parse_loopEP7Program+0xac>)
 8014220:	4618      	mov	r0, r3
 8014222:	f7ed fdb2 	bl	8001d8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8014226:	f107 0324 	add.w	r3, r7, #36	; 0x24
 801422a:	461a      	mov	r2, r3
 801422c:	210a      	movs	r1, #10
 801422e:	6878      	ldr	r0, [r7, #4]
 8014230:	f7ff fc1e 	bl	8013a70 <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8014234:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8014238:	4618      	mov	r0, r3
 801423a:	f00f fbfe 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801423e:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8014242:	4618      	mov	r0, r3
 8014244:	f00f f969 	bl	802351a <_ZNSaIcED1Ev>
	get_next_token();
 8014248:	6878      	ldr	r0, [r7, #4]
 801424a:	f7ff ff2a 	bl	80140a2 <_ZN6Parser14get_next_tokenEv>
	skip_newlines();
 801424e:	6878      	ldr	r0, [r7, #4]
 8014250:	f7ff fe8d 	bl	8013f6e <_ZN6Parser13skip_newlinesEv>
	Prog->loop = parse_body();
 8014254:	6878      	ldr	r0, [r7, #4]
 8014256:	f7ff fec1 	bl	8013fdc <_ZN6Parser10parse_bodyEv>
 801425a:	4602      	mov	r2, r0
 801425c:	683b      	ldr	r3, [r7, #0]
 801425e:	605a      	str	r2, [r3, #4]
}
 8014260:	bf00      	nop
 8014262:	3740      	adds	r7, #64	; 0x40
 8014264:	46bd      	mov	sp, r7
 8014266:	bd80      	pop	{r7, pc}
 8014268:	08029990 	.word	0x08029990
 801426c:	080299a0 	.word	0x080299a0

08014270 <_ZN6Parser12parse_finishEP7Program>:

void Parser::parse_finish(Program *Prog)
{
 8014270:	b580      	push	{r7, lr}
 8014272:	b090      	sub	sp, #64	; 0x40
 8014274:	af00      	add	r7, sp, #0
 8014276:	6078      	str	r0, [r7, #4]
 8014278:	6039      	str	r1, [r7, #0]
	assert_token(TOKEN_FINISH, "\"finish\" keyword");
 801427a:	f107 0320 	add.w	r3, r7, #32
 801427e:	4618      	mov	r0, r3
 8014280:	f00f f94a 	bl	8023518 <_ZNSaIcEC1Ev>
 8014284:	f107 0220 	add.w	r2, r7, #32
 8014288:	f107 0308 	add.w	r3, r7, #8
 801428c:	4922      	ldr	r1, [pc, #136]	; (8014318 <_ZN6Parser12parse_finishEP7Program+0xa8>)
 801428e:	4618      	mov	r0, r3
 8014290:	f7ed fd7b 	bl	8001d8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8014294:	f107 0308 	add.w	r3, r7, #8
 8014298:	461a      	mov	r2, r3
 801429a:	2109      	movs	r1, #9
 801429c:	6878      	ldr	r0, [r7, #4]
 801429e:	f7ff fbe7 	bl	8013a70 <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 80142a2:	f107 0308 	add.w	r3, r7, #8
 80142a6:	4618      	mov	r0, r3
 80142a8:	f00f fbc7 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80142ac:	f107 0320 	add.w	r3, r7, #32
 80142b0:	4618      	mov	r0, r3
 80142b2:	f00f f932 	bl	802351a <_ZNSaIcED1Ev>
	get_next_token();
 80142b6:	6878      	ldr	r0, [r7, #4]
 80142b8:	f7ff fef3 	bl	80140a2 <_ZN6Parser14get_next_tokenEv>
	assert_token(TOKEN_NEWLINE, "line break after finish");
 80142bc:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 80142c0:	4618      	mov	r0, r3
 80142c2:	f00f f929 	bl	8023518 <_ZNSaIcEC1Ev>
 80142c6:	f107 023c 	add.w	r2, r7, #60	; 0x3c
 80142ca:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80142ce:	4913      	ldr	r1, [pc, #76]	; (801431c <_ZN6Parser12parse_finishEP7Program+0xac>)
 80142d0:	4618      	mov	r0, r3
 80142d2:	f7ed fd5a 	bl	8001d8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 80142d6:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80142da:	461a      	mov	r2, r3
 80142dc:	210a      	movs	r1, #10
 80142de:	6878      	ldr	r0, [r7, #4]
 80142e0:	f7ff fbc6 	bl	8013a70 <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 80142e4:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80142e8:	4618      	mov	r0, r3
 80142ea:	f00f fba6 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80142ee:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 80142f2:	4618      	mov	r0, r3
 80142f4:	f00f f911 	bl	802351a <_ZNSaIcED1Ev>
	get_next_token();
 80142f8:	6878      	ldr	r0, [r7, #4]
 80142fa:	f7ff fed2 	bl	80140a2 <_ZN6Parser14get_next_tokenEv>
	skip_newlines();
 80142fe:	6878      	ldr	r0, [r7, #4]
 8014300:	f7ff fe35 	bl	8013f6e <_ZN6Parser13skip_newlinesEv>
	Prog->finish = parse_body();
 8014304:	6878      	ldr	r0, [r7, #4]
 8014306:	f7ff fe69 	bl	8013fdc <_ZN6Parser10parse_bodyEv>
 801430a:	4602      	mov	r2, r0
 801430c:	683b      	ldr	r3, [r7, #0]
 801430e:	609a      	str	r2, [r3, #8]
}
 8014310:	bf00      	nop
 8014312:	3740      	adds	r7, #64	; 0x40
 8014314:	46bd      	mov	sp, r7
 8014316:	bd80      	pop	{r7, pc}
 8014318:	080299b8 	.word	0x080299b8
 801431c:	080299cc 	.word	0x080299cc

08014320 <_ZN6ParserD1Ev>:
	Body *setup;
	Body *loop;
	Body *finish;
};

class Parser
 8014320:	b580      	push	{r7, lr}
 8014322:	b082      	sub	sp, #8
 8014324:	af00      	add	r7, sp, #0
 8014326:	6078      	str	r0, [r7, #4]
 8014328:	687b      	ldr	r3, [r7, #4]
 801432a:	4618      	mov	r0, r3
 801432c:	f7fa ffa1 	bl	800f272 <_ZN5TokenD1Ev>
 8014330:	687b      	ldr	r3, [r7, #4]
 8014332:	4618      	mov	r0, r3
 8014334:	3708      	adds	r7, #8
 8014336:	46bd      	mov	sp, r7
 8014338:	bd80      	pop	{r7, pc}
	...

0801433c <__tcf_0>:

Program* Parser::parse_program()
{
	static Parser Par;
 801433c:	b580      	push	{r7, lr}
 801433e:	af00      	add	r7, sp, #0
 8014340:	4801      	ldr	r0, [pc, #4]	; (8014348 <__tcf_0+0xc>)
 8014342:	f7ff ffed 	bl	8014320 <_ZN6ParserD1Ev>
 8014346:	bd80      	pop	{r7, pc}
 8014348:	2000046c 	.word	0x2000046c

0801434c <_ZN6Parser13parse_programEv>:
{
 801434c:	b580      	push	{r7, lr}
 801434e:	b088      	sub	sp, #32
 8014350:	af00      	add	r7, sp, #0
	static Parser Par;
 8014352:	4b2c      	ldr	r3, [pc, #176]	; (8014404 <_ZN6Parser13parse_programEv+0xb8>)
 8014354:	781b      	ldrb	r3, [r3, #0]
 8014356:	f3bf 8f5b 	dmb	ish
 801435a:	b2db      	uxtb	r3, r3
 801435c:	f003 0301 	and.w	r3, r3, #1
 8014360:	2b00      	cmp	r3, #0
 8014362:	bf0c      	ite	eq
 8014364:	2301      	moveq	r3, #1
 8014366:	2300      	movne	r3, #0
 8014368:	b2db      	uxtb	r3, r3
 801436a:	2b00      	cmp	r3, #0
 801436c:	d013      	beq.n	8014396 <_ZN6Parser13parse_programEv+0x4a>
 801436e:	4825      	ldr	r0, [pc, #148]	; (8014404 <_ZN6Parser13parse_programEv+0xb8>)
 8014370:	f00f f8b2 	bl	80234d8 <__cxa_guard_acquire>
 8014374:	4603      	mov	r3, r0
 8014376:	2b00      	cmp	r3, #0
 8014378:	bf14      	ite	ne
 801437a:	2301      	movne	r3, #1
 801437c:	2300      	moveq	r3, #0
 801437e:	b2db      	uxtb	r3, r3
 8014380:	2b00      	cmp	r3, #0
 8014382:	d008      	beq.n	8014396 <_ZN6Parser13parse_programEv+0x4a>
 8014384:	4820      	ldr	r0, [pc, #128]	; (8014408 <_ZN6Parser13parse_programEv+0xbc>)
 8014386:	f7ff f869 	bl	801345c <_ZN6ParserC1Ev>
 801438a:	481e      	ldr	r0, [pc, #120]	; (8014404 <_ZN6Parser13parse_programEv+0xb8>)
 801438c:	f00f f8b0 	bl	80234f0 <__cxa_guard_release>
 8014390:	481e      	ldr	r0, [pc, #120]	; (801440c <_ZN6Parser13parse_programEv+0xc0>)
 8014392:	f010 fcf6 	bl	8024d82 <atexit>
	auto Prog = new Program();
 8014396:	200c      	movs	r0, #12
 8014398:	f00f f8ad 	bl	80234f6 <_Znwj>
 801439c:	4603      	mov	r3, r0
 801439e:	2200      	movs	r2, #0
 80143a0:	601a      	str	r2, [r3, #0]
 80143a2:	2200      	movs	r2, #0
 80143a4:	605a      	str	r2, [r3, #4]
 80143a6:	2200      	movs	r2, #0
 80143a8:	609a      	str	r2, [r3, #8]
 80143aa:	61fb      	str	r3, [r7, #28]
	Par.parse_setup(Prog);
 80143ac:	69f9      	ldr	r1, [r7, #28]
 80143ae:	4816      	ldr	r0, [pc, #88]	; (8014408 <_ZN6Parser13parse_programEv+0xbc>)
 80143b0:	f7ff feaa 	bl	8014108 <_ZN6Parser11parse_setupEP7Program>
	Par.parse_loop(Prog);
 80143b4:	69f9      	ldr	r1, [r7, #28]
 80143b6:	4814      	ldr	r0, [pc, #80]	; (8014408 <_ZN6Parser13parse_programEv+0xbc>)
 80143b8:	f7ff ff02 	bl	80141c0 <_ZN6Parser10parse_loopEP7Program>
	Par.parse_finish(Prog);
 80143bc:	69f9      	ldr	r1, [r7, #28]
 80143be:	4812      	ldr	r0, [pc, #72]	; (8014408 <_ZN6Parser13parse_programEv+0xbc>)
 80143c0:	f7ff ff56 	bl	8014270 <_ZN6Parser12parse_finishEP7Program>
	Par.assert_token(TOKEN_END_OF_FILE, "end of file");
 80143c4:	f107 0318 	add.w	r3, r7, #24
 80143c8:	4618      	mov	r0, r3
 80143ca:	f00f f8a5 	bl	8023518 <_ZNSaIcEC1Ev>
 80143ce:	f107 0218 	add.w	r2, r7, #24
 80143d2:	463b      	mov	r3, r7
 80143d4:	490e      	ldr	r1, [pc, #56]	; (8014410 <_ZN6Parser13parse_programEv+0xc4>)
 80143d6:	4618      	mov	r0, r3
 80143d8:	f7ed fcd7 	bl	8001d8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 80143dc:	463b      	mov	r3, r7
 80143de:	461a      	mov	r2, r3
 80143e0:	2125      	movs	r1, #37	; 0x25
 80143e2:	4809      	ldr	r0, [pc, #36]	; (8014408 <_ZN6Parser13parse_programEv+0xbc>)
 80143e4:	f7ff fb44 	bl	8013a70 <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 80143e8:	463b      	mov	r3, r7
 80143ea:	4618      	mov	r0, r3
 80143ec:	f00f fb25 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80143f0:	f107 0318 	add.w	r3, r7, #24
 80143f4:	4618      	mov	r0, r3
 80143f6:	f00f f890 	bl	802351a <_ZNSaIcED1Ev>
	return Prog;
 80143fa:	69fb      	ldr	r3, [r7, #28]
}
 80143fc:	4618      	mov	r0, r3
 80143fe:	3720      	adds	r7, #32
 8014400:	46bd      	mov	sp, r7
 8014402:	bd80      	pop	{r7, pc}
 8014404:	2000048c 	.word	0x2000048c
 8014408:	2000046c 	.word	0x2000046c
 801440c:	0801433d 	.word	0x0801433d
 8014410:	080299e4 	.word	0x080299e4

08014414 <_ZNSt6vectorIP10ExpressionSaIS1_EE9push_backEOS1_>:
      push_back(value_type&& __x)
 8014414:	b580      	push	{r7, lr}
 8014416:	b082      	sub	sp, #8
 8014418:	af00      	add	r7, sp, #0
 801441a:	6078      	str	r0, [r7, #4]
 801441c:	6039      	str	r1, [r7, #0]
      { emplace_back(std::move(__x)); }
 801441e:	6838      	ldr	r0, [r7, #0]
 8014420:	f000 fb5c 	bl	8014adc <_ZSt4moveIRP10ExpressionEONSt16remove_referenceIT_E4typeEOS4_>
 8014424:	4603      	mov	r3, r0
 8014426:	4619      	mov	r1, r3
 8014428:	6878      	ldr	r0, [r7, #4]
 801442a:	f000 fb62 	bl	8014af2 <_ZNSt6vectorIP10ExpressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>
 801442e:	bf00      	nop
 8014430:	3708      	adds	r7, #8
 8014432:	46bd      	mov	sp, r7
 8014434:	bd80      	pop	{r7, pc}

08014436 <_ZNSt6vectorIP4BodySaIS1_EE9push_backEOS1_>:
      push_back(value_type&& __x)
 8014436:	b580      	push	{r7, lr}
 8014438:	b082      	sub	sp, #8
 801443a:	af00      	add	r7, sp, #0
 801443c:	6078      	str	r0, [r7, #4]
 801443e:	6039      	str	r1, [r7, #0]
      { emplace_back(std::move(__x)); }
 8014440:	6838      	ldr	r0, [r7, #0]
 8014442:	f000 fb88 	bl	8014b56 <_ZSt4moveIRP4BodyEONSt16remove_referenceIT_E4typeEOS4_>
 8014446:	4603      	mov	r3, r0
 8014448:	4619      	mov	r1, r3
 801444a:	6878      	ldr	r0, [r7, #4]
 801444c:	f000 fb8e 	bl	8014b6c <_ZNSt6vectorIP4BodySaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>
 8014450:	bf00      	nop
 8014452:	3708      	adds	r7, #8
 8014454:	46bd      	mov	sp, r7
 8014456:	bd80      	pop	{r7, pc}

08014458 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
 8014458:	b580      	push	{r7, lr}
 801445a:	b082      	sub	sp, #8
 801445c:	af00      	add	r7, sp, #0
 801445e:	6078      	str	r0, [r7, #4]
	: _Tp_alloc_type()
 8014460:	6878      	ldr	r0, [r7, #4]
 8014462:	f000 fbb5 	bl	8014bd0 <_ZNSaIP10ExpressionEC1Ev>
 8014466:	687b      	ldr	r3, [r7, #4]
 8014468:	4618      	mov	r0, r3
 801446a:	f7fa fab2 	bl	800e9d2 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
 801446e:	687b      	ldr	r3, [r7, #4]
 8014470:	4618      	mov	r0, r3
 8014472:	3708      	adds	r7, #8
 8014474:	46bd      	mov	sp, r7
 8014476:	bd80      	pop	{r7, pc}

08014478 <_ZNSt12_Vector_baseIP4BodySaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
 8014478:	b580      	push	{r7, lr}
 801447a:	b082      	sub	sp, #8
 801447c:	af00      	add	r7, sp, #0
 801447e:	6078      	str	r0, [r7, #4]
	: _Tp_alloc_type()
 8014480:	6878      	ldr	r0, [r7, #4]
 8014482:	f000 fbb1 	bl	8014be8 <_ZNSaIP4BodyEC1Ev>
 8014486:	687b      	ldr	r3, [r7, #4]
 8014488:	4618      	mov	r0, r3
 801448a:	f000 fbb9 	bl	8014c00 <_ZNSt12_Vector_baseIP4BodySaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
 801448e:	687b      	ldr	r3, [r7, #4]
 8014490:	4618      	mov	r0, r3
 8014492:	3708      	adds	r7, #8
 8014494:	46bd      	mov	sp, r7
 8014496:	bd80      	pop	{r7, pc}

08014498 <_ZSt3getINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_ifbEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 8014498:	b580      	push	{r7, lr}
 801449a:	b082      	sub	sp, #8
 801449c:	af00      	add	r7, sp, #0
 801449e:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 80144a0:	6878      	ldr	r0, [r7, #4]
 80144a2:	f7fb ff4d 	bl	8010340 <_ZSt3getILj0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>
 80144a6:	4603      	mov	r3, r0
    }
 80144a8:	4618      	mov	r0, r3
 80144aa:	3708      	adds	r7, #8
 80144ac:	46bd      	mov	sp, r7
 80144ae:	bd80      	pop	{r7, pc}

080144b0 <_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_>:
    operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
 80144b0:	b580      	push	{r7, lr}
 80144b2:	b082      	sub	sp, #8
 80144b4:	af00      	add	r7, sp, #0
 80144b6:	6078      	str	r0, [r7, #4]
 80144b8:	6039      	str	r1, [r7, #0]
    { return __lhs.compare(__rhs) == 0; }
 80144ba:	6839      	ldr	r1, [r7, #0]
 80144bc:	6878      	ldr	r0, [r7, #4]
 80144be:	f00f fc75 	bl	8023dac <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc>
 80144c2:	4603      	mov	r3, r0
 80144c4:	2b00      	cmp	r3, #0
 80144c6:	bf0c      	ite	eq
 80144c8:	2301      	moveq	r3, #1
 80144ca:	2300      	movne	r3, #0
 80144cc:	b2db      	uxtb	r3, r3
 80144ce:	4618      	mov	r0, r3
 80144d0:	3708      	adds	r7, #8
 80144d2:	46bd      	mov	sp, r7
 80144d4:	bd80      	pop	{r7, pc}

080144d6 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS3_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>:
	operator=(_Tp&& __rhs)
 80144d6:	b590      	push	{r4, r7, lr}
 80144d8:	b085      	sub	sp, #20
 80144da:	af00      	add	r7, sp, #0
 80144dc:	6078      	str	r0, [r7, #4]
 80144de:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 80144e0:	2301      	movs	r3, #1
 80144e2:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 80144e4:	6878      	ldr	r0, [r7, #4]
 80144e6:	f7ef fad9 	bl	8003a9c <_ZNKSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE5indexEv>
 80144ea:	4603      	mov	r3, r0
 80144ec:	2b01      	cmp	r3, #1
 80144ee:	bf0c      	ite	eq
 80144f0:	2301      	moveq	r3, #1
 80144f2:	2300      	movne	r3, #0
 80144f4:	b2db      	uxtb	r3, r3
 80144f6:	2b00      	cmp	r3, #0
 80144f8:	d00a      	beq.n	8014510 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS3_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 80144fa:	6838      	ldr	r0, [r7, #0]
 80144fc:	f000 fbb2 	bl	8014c64 <_ZSt7forwardIP13Function_callEOT_RNSt16remove_referenceIS2_E4typeE>
 8014500:	4603      	mov	r3, r0
 8014502:	681c      	ldr	r4, [r3, #0]
 8014504:	6878      	ldr	r0, [r7, #4]
 8014506:	f7ef fb4f 	bl	8003ba8 <_ZSt3getILj1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 801450a:	4603      	mov	r3, r0
 801450c:	601c      	str	r4, [r3, #0]
 801450e:	e007      	b.n	8014520 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS3_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 8014510:	6838      	ldr	r0, [r7, #0]
 8014512:	f000 fba7 	bl	8014c64 <_ZSt7forwardIP13Function_callEOT_RNSt16remove_referenceIS2_E4typeE>
 8014516:	4603      	mov	r3, r0
 8014518:	4619      	mov	r1, r3
 801451a:	6878      	ldr	r0, [r7, #4]
 801451c:	f000 fbad 	bl	8014c7a <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE7emplaceILj1EJS3_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	  return *this;
 8014520:	687b      	ldr	r3, [r7, #4]
	}
 8014522:	4618      	mov	r0, r3
 8014524:	3714      	adds	r7, #20
 8014526:	46bd      	mov	sp, r7
 8014528:	bd90      	pop	{r4, r7, pc}

0801452a <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS1_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>:
	operator=(_Tp&& __rhs)
 801452a:	b590      	push	{r4, r7, lr}
 801452c:	b085      	sub	sp, #20
 801452e:	af00      	add	r7, sp, #0
 8014530:	6078      	str	r0, [r7, #4]
 8014532:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 8014534:	2300      	movs	r3, #0
 8014536:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 8014538:	6878      	ldr	r0, [r7, #4]
 801453a:	f7ef faaf 	bl	8003a9c <_ZNKSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE5indexEv>
 801453e:	4603      	mov	r3, r0
 8014540:	2b00      	cmp	r3, #0
 8014542:	bf0c      	ite	eq
 8014544:	2301      	moveq	r3, #1
 8014546:	2300      	movne	r3, #0
 8014548:	b2db      	uxtb	r3, r3
 801454a:	2b00      	cmp	r3, #0
 801454c:	d00a      	beq.n	8014564 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS1_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 801454e:	6838      	ldr	r0, [r7, #0]
 8014550:	f000 fbac 	bl	8014cac <_ZSt7forwardIP10AssignmentEOT_RNSt16remove_referenceIS2_E4typeE>
 8014554:	4603      	mov	r3, r0
 8014556:	681c      	ldr	r4, [r3, #0]
 8014558:	6878      	ldr	r0, [r7, #4]
 801455a:	f7ef fad5 	bl	8003b08 <_ZSt3getILj0EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 801455e:	4603      	mov	r3, r0
 8014560:	601c      	str	r4, [r3, #0]
 8014562:	e007      	b.n	8014574 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS1_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 8014564:	6838      	ldr	r0, [r7, #0]
 8014566:	f000 fba1 	bl	8014cac <_ZSt7forwardIP10AssignmentEOT_RNSt16remove_referenceIS2_E4typeE>
 801456a:	4603      	mov	r3, r0
 801456c:	4619      	mov	r1, r3
 801456e:	6878      	ldr	r0, [r7, #4]
 8014570:	f000 fba7 	bl	8014cc2 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE7emplaceILj0EJS1_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	  return *this;
 8014574:	687b      	ldr	r3, [r7, #4]
	}
 8014576:	4618      	mov	r0, r3
 8014578:	3714      	adds	r7, #20
 801457a:	46bd      	mov	sp, r7
 801457c:	bd90      	pop	{r4, r7, pc}

0801457e <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>:
	operator=(_Tp&& __rhs)
 801457e:	b590      	push	{r4, r7, lr}
 8014580:	b085      	sub	sp, #20
 8014582:	af00      	add	r7, sp, #0
 8014584:	6078      	str	r0, [r7, #4]
 8014586:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 8014588:	2302      	movs	r3, #2
 801458a:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 801458c:	6878      	ldr	r0, [r7, #4]
 801458e:	f7ef fa85 	bl	8003a9c <_ZNKSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE5indexEv>
 8014592:	4603      	mov	r3, r0
 8014594:	2b02      	cmp	r3, #2
 8014596:	bf0c      	ite	eq
 8014598:	2301      	moveq	r3, #1
 801459a:	2300      	movne	r3, #0
 801459c:	b2db      	uxtb	r3, r3
 801459e:	2b00      	cmp	r3, #0
 80145a0:	d00a      	beq.n	80145b8 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 80145a2:	6838      	ldr	r0, [r7, #0]
 80145a4:	f000 fba6 	bl	8014cf4 <_ZSt7forwardIP11Method_callEOT_RNSt16remove_referenceIS2_E4typeE>
 80145a8:	4603      	mov	r3, r0
 80145aa:	681c      	ldr	r4, [r3, #0]
 80145ac:	6878      	ldr	r0, [r7, #4]
 80145ae:	f7ef fb5d 	bl	8003c6c <_ZSt3getILj2EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 80145b2:	4603      	mov	r3, r0
 80145b4:	601c      	str	r4, [r3, #0]
 80145b6:	e007      	b.n	80145c8 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 80145b8:	6838      	ldr	r0, [r7, #0]
 80145ba:	f000 fb9b 	bl	8014cf4 <_ZSt7forwardIP11Method_callEOT_RNSt16remove_referenceIS2_E4typeE>
 80145be:	4603      	mov	r3, r0
 80145c0:	4619      	mov	r1, r3
 80145c2:	6878      	ldr	r0, [r7, #4]
 80145c4:	f000 fba1 	bl	8014d0a <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE7emplaceILj2EJS5_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	  return *this;
 80145c8:	687b      	ldr	r3, [r7, #4]
	}
 80145ca:	4618      	mov	r0, r3
 80145cc:	3714      	adds	r7, #20
 80145ce:	46bd      	mov	sp, r7
 80145d0:	bd90      	pop	{r4, r7, pc}

080145d2 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEECI1NS0_16_Variant_storageILb1EJS3_S5_S7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 80145d2:	b580      	push	{r7, lr}
 80145d4:	b082      	sub	sp, #8
 80145d6:	af00      	add	r7, sp, #0
 80145d8:	6078      	str	r0, [r7, #4]
 80145da:	7039      	strb	r1, [r7, #0]
 80145dc:	687b      	ldr	r3, [r7, #4]
 80145de:	4611      	mov	r1, r2
 80145e0:	4618      	mov	r0, r3
 80145e2:	f000 fbc9 	bl	8014d78 <_ZNSt8__detail9__variant16_Variant_storageILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 80145e6:	687b      	ldr	r3, [r7, #4]
 80145e8:	4618      	mov	r0, r3
 80145ea:	3708      	adds	r7, #8
 80145ec:	46bd      	mov	sp, r7
 80145ee:	bd80      	pop	{r7, pc}

080145f0 <_ZNSt8__detail9__variant15_Move_ctor_baseILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEECI1NS0_16_Variant_storageILb1EJS3_S5_S7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 80145f0:	b580      	push	{r7, lr}
 80145f2:	b082      	sub	sp, #8
 80145f4:	af00      	add	r7, sp, #0
 80145f6:	6078      	str	r0, [r7, #4]
 80145f8:	7039      	strb	r1, [r7, #0]
 80145fa:	687b      	ldr	r3, [r7, #4]
 80145fc:	4611      	mov	r1, r2
 80145fe:	4618      	mov	r0, r3
 8014600:	f7ff ffe7 	bl	80145d2 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEECI1NS0_16_Variant_storageILb1EJS3_S5_S7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 8014604:	687b      	ldr	r3, [r7, #4]
 8014606:	4618      	mov	r0, r3
 8014608:	3708      	adds	r7, #8
 801460a:	46bd      	mov	sp, r7
 801460c:	bd80      	pop	{r7, pc}

0801460e <_ZNSt8__detail9__variant17_Copy_assign_baseILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEECI1NS0_16_Variant_storageILb1EJS3_S5_S7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 801460e:	b580      	push	{r7, lr}
 8014610:	b082      	sub	sp, #8
 8014612:	af00      	add	r7, sp, #0
 8014614:	6078      	str	r0, [r7, #4]
 8014616:	7039      	strb	r1, [r7, #0]
 8014618:	687b      	ldr	r3, [r7, #4]
 801461a:	4611      	mov	r1, r2
 801461c:	4618      	mov	r0, r3
 801461e:	f7ff ffe7 	bl	80145f0 <_ZNSt8__detail9__variant15_Move_ctor_baseILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEECI1NS0_16_Variant_storageILb1EJS3_S5_S7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 8014622:	687b      	ldr	r3, [r7, #4]
 8014624:	4618      	mov	r0, r3
 8014626:	3708      	adds	r7, #8
 8014628:	46bd      	mov	sp, r7
 801462a:	bd80      	pop	{r7, pc}

0801462c <_ZNSt8__detail9__variant17_Move_assign_baseILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEECI1NS0_16_Variant_storageILb1EJS3_S5_S7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 801462c:	b580      	push	{r7, lr}
 801462e:	b082      	sub	sp, #8
 8014630:	af00      	add	r7, sp, #0
 8014632:	6078      	str	r0, [r7, #4]
 8014634:	7039      	strb	r1, [r7, #0]
 8014636:	687b      	ldr	r3, [r7, #4]
 8014638:	4611      	mov	r1, r2
 801463a:	4618      	mov	r0, r3
 801463c:	f7ff ffe7 	bl	801460e <_ZNSt8__detail9__variant17_Copy_assign_baseILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEECI1NS0_16_Variant_storageILb1EJS3_S5_S7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 8014640:	687b      	ldr	r3, [r7, #4]
 8014642:	4618      	mov	r0, r3
 8014644:	3708      	adds	r7, #8
 8014646:	46bd      	mov	sp, r7
 8014648:	bd80      	pop	{r7, pc}

0801464a <_ZNSt8__detail9__variant13_Variant_baseIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
	_Variant_base(in_place_index_t<_Np> __i, _Args&&... __args)
 801464a:	b580      	push	{r7, lr}
 801464c:	b082      	sub	sp, #8
 801464e:	af00      	add	r7, sp, #0
 8014650:	6078      	str	r0, [r7, #4]
 8014652:	7039      	strb	r1, [r7, #0]
	: _Base(__i, std::forward<_Args>(__args)...)
 8014654:	687b      	ldr	r3, [r7, #4]
 8014656:	4611      	mov	r1, r2
 8014658:	4618      	mov	r0, r3
 801465a:	f7ff ffe7 	bl	801462c <_ZNSt8__detail9__variant17_Move_assign_baseILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEECI1NS0_16_Variant_storageILb1EJS3_S5_S7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 801465e:	687b      	ldr	r3, [r7, #4]
 8014660:	4618      	mov	r0, r3
 8014662:	3708      	adds	r7, #8
 8014664:	46bd      	mov	sp, r7
 8014666:	bd80      	pop	{r7, pc}

08014668 <_ZNSt8__detail9__variant13_Variant_baseIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEC1Ev>:
      _Variant_base()
 8014668:	b580      	push	{r7, lr}
 801466a:	b082      	sub	sp, #8
 801466c:	af00      	add	r7, sp, #0
 801466e:	6078      	str	r0, [r7, #4]
      : _Variant_base(in_place_index<0>) { }
 8014670:	4619      	mov	r1, r3
 8014672:	6878      	ldr	r0, [r7, #4]
 8014674:	f7ff ffe9 	bl	801464a <_ZNSt8__detail9__variant13_Variant_baseIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 8014678:	687b      	ldr	r3, [r7, #4]
 801467a:	4618      	mov	r0, r3
 801467c:	3708      	adds	r7, #8
 801467e:	46bd      	mov	sp, r7
 8014680:	bd80      	pop	{r7, pc}

08014682 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS7_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>:
	operator=(_Tp&& __rhs)
 8014682:	b590      	push	{r4, r7, lr}
 8014684:	b085      	sub	sp, #20
 8014686:	af00      	add	r7, sp, #0
 8014688:	6078      	str	r0, [r7, #4]
 801468a:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 801468c:	2303      	movs	r3, #3
 801468e:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 8014690:	6878      	ldr	r0, [r7, #4]
 8014692:	f7ef fa03 	bl	8003a9c <_ZNKSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE5indexEv>
 8014696:	4603      	mov	r3, r0
 8014698:	2b03      	cmp	r3, #3
 801469a:	bf0c      	ite	eq
 801469c:	2301      	moveq	r3, #1
 801469e:	2300      	movne	r3, #0
 80146a0:	b2db      	uxtb	r3, r3
 80146a2:	2b00      	cmp	r3, #0
 80146a4:	d00a      	beq.n	80146bc <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS7_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 80146a6:	6838      	ldr	r0, [r7, #0]
 80146a8:	f000 fb78 	bl	8014d9c <_ZSt7forwardIP15While_statementEOT_RNSt16remove_referenceIS2_E4typeE>
 80146ac:	4603      	mov	r3, r0
 80146ae:	681c      	ldr	r4, [r3, #0]
 80146b0:	6878      	ldr	r0, [r7, #4]
 80146b2:	f7ef fb4f 	bl	8003d54 <_ZSt3getILj3EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 80146b6:	4603      	mov	r3, r0
 80146b8:	601c      	str	r4, [r3, #0]
 80146ba:	e007      	b.n	80146cc <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS7_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 80146bc:	6838      	ldr	r0, [r7, #0]
 80146be:	f000 fb6d 	bl	8014d9c <_ZSt7forwardIP15While_statementEOT_RNSt16remove_referenceIS2_E4typeE>
 80146c2:	4603      	mov	r3, r0
 80146c4:	4619      	mov	r1, r3
 80146c6:	6878      	ldr	r0, [r7, #4]
 80146c8:	f000 fb73 	bl	8014db2 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE7emplaceILj3EJS7_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	  return *this;
 80146cc:	687b      	ldr	r3, [r7, #4]
	}
 80146ce:	4618      	mov	r0, r3
 80146d0:	3714      	adds	r7, #20
 80146d2:	46bd      	mov	sp, r7
 80146d4:	bd90      	pop	{r4, r7, pc}

080146d6 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS9_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>:
	operator=(_Tp&& __rhs)
 80146d6:	b590      	push	{r4, r7, lr}
 80146d8:	b085      	sub	sp, #20
 80146da:	af00      	add	r7, sp, #0
 80146dc:	6078      	str	r0, [r7, #4]
 80146de:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 80146e0:	2304      	movs	r3, #4
 80146e2:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 80146e4:	6878      	ldr	r0, [r7, #4]
 80146e6:	f7ef f9d9 	bl	8003a9c <_ZNKSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE5indexEv>
 80146ea:	4603      	mov	r3, r0
 80146ec:	2b04      	cmp	r3, #4
 80146ee:	bf0c      	ite	eq
 80146f0:	2301      	moveq	r3, #1
 80146f2:	2300      	movne	r3, #0
 80146f4:	b2db      	uxtb	r3, r3
 80146f6:	2b00      	cmp	r3, #0
 80146f8:	d00a      	beq.n	8014710 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS9_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 80146fa:	6838      	ldr	r0, [r7, #0]
 80146fc:	f000 fb72 	bl	8014de4 <_ZSt7forwardIP12If_statementEOT_RNSt16remove_referenceIS2_E4typeE>
 8014700:	4603      	mov	r3, r0
 8014702:	681c      	ldr	r4, [r3, #0]
 8014704:	6878      	ldr	r0, [r7, #4]
 8014706:	f7ef fbab 	bl	8003e60 <_ZSt3getILj4EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 801470a:	4603      	mov	r3, r0
 801470c:	601c      	str	r4, [r3, #0]
 801470e:	e007      	b.n	8014720 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS9_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 8014710:	6838      	ldr	r0, [r7, #0]
 8014712:	f000 fb67 	bl	8014de4 <_ZSt7forwardIP12If_statementEOT_RNSt16remove_referenceIS2_E4typeE>
 8014716:	4603      	mov	r3, r0
 8014718:	4619      	mov	r1, r3
 801471a:	6878      	ldr	r0, [r7, #4]
 801471c:	f000 fb6d 	bl	8014dfa <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE7emplaceILj4EJS9_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	  return *this;
 8014720:	687b      	ldr	r3, [r7, #4]
	}
 8014722:	4618      	mov	r0, r3
 8014724:	3714      	adds	r7, #20
 8014726:	46bd      	mov	sp, r7
 8014728:	bd90      	pop	{r4, r7, pc}

0801472a <_ZNSt12_Vector_baseIP9StatementSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
 801472a:	b580      	push	{r7, lr}
 801472c:	b082      	sub	sp, #8
 801472e:	af00      	add	r7, sp, #0
 8014730:	6078      	str	r0, [r7, #4]
	: _Tp_alloc_type()
 8014732:	6878      	ldr	r0, [r7, #4]
 8014734:	f000 fb7a 	bl	8014e2c <_ZNSaIP9StatementEC1Ev>
 8014738:	687b      	ldr	r3, [r7, #4]
 801473a:	4618      	mov	r0, r3
 801473c:	f000 fb82 	bl	8014e44 <_ZNSt12_Vector_baseIP9StatementSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
 8014740:	687b      	ldr	r3, [r7, #4]
 8014742:	4618      	mov	r0, r3
 8014744:	3708      	adds	r7, #8
 8014746:	46bd      	mov	sp, r7
 8014748:	bd80      	pop	{r7, pc}

0801474a <_ZNSt6vectorIP9StatementSaIS1_EE9push_backEOS1_>:
      push_back(value_type&& __x)
 801474a:	b580      	push	{r7, lr}
 801474c:	b082      	sub	sp, #8
 801474e:	af00      	add	r7, sp, #0
 8014750:	6078      	str	r0, [r7, #4]
 8014752:	6039      	str	r1, [r7, #0]
      { emplace_back(std::move(__x)); }
 8014754:	6838      	ldr	r0, [r7, #0]
 8014756:	f000 fba7 	bl	8014ea8 <_ZSt4moveIRP9StatementEONSt16remove_referenceIT_E4typeEOS4_>
 801475a:	4603      	mov	r3, r0
 801475c:	4619      	mov	r1, r3
 801475e:	6878      	ldr	r0, [r7, #4]
 8014760:	f000 fbad 	bl	8014ebe <_ZNSt6vectorIP9StatementSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>
 8014764:	bf00      	nop
 8014766:	3708      	adds	r7, #8
 8014768:	46bd      	mov	sp, r7
 801476a:	bd80      	pop	{r7, pc}

0801476c <_ZSt14__variant_castIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNSt8__detail9__variant17_Move_assign_baseILb0EJS5_ifbEEEEDcOT0_>:
    __variant_cast(_Tp&& __rhs)
 801476c:	b480      	push	{r7}
 801476e:	b083      	sub	sp, #12
 8014770:	af00      	add	r7, sp, #0
 8014772:	6078      	str	r0, [r7, #4]
	    return static_cast<variant<_Types...>&>(__rhs);
 8014774:	687b      	ldr	r3, [r7, #4]
    }
 8014776:	4618      	mov	r0, r3
 8014778:	370c      	adds	r7, #12
 801477a:	46bd      	mov	sp, r7
 801477c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014780:	4770      	bx	lr

08014782 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESK_EEDcOSF_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8014782:	b580      	push	{r7, lr}
 8014784:	b082      	sub	sp, #8
 8014786:	af00      	add	r7, sp, #0
 8014788:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 801478a:	6878      	ldr	r0, [r7, #4]
 801478c:	f7fc fd04 	bl	8011198 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8014790:	4603      	mov	r3, r0
 8014792:	4618      	mov	r0, r3
 8014794:	f7fb fdc3 	bl	801031e <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 8014798:	4603      	mov	r3, r0
	}
 801479a:	4618      	mov	r0, r3
 801479c:	3708      	adds	r7, #8
 801479e:	46bd      	mov	sp, r7
 80147a0:	bd80      	pop	{r7, pc}

080147a2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESH_SK_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 80147a2:	b5b0      	push	{r4, r5, r7, lr}
 80147a4:	b084      	sub	sp, #16
 80147a6:	af00      	add	r7, sp, #0
 80147a8:	6078      	str	r0, [r7, #4]
 80147aa:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 80147ac:	6878      	ldr	r0, [r7, #4]
 80147ae:	f000 fbb8 	bl	8014f22 <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 80147b2:	4604      	mov	r4, r0
 80147b4:	6838      	ldr	r0, [r7, #0]
 80147b6:	f7fc fcef 	bl	8011198 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 80147ba:	4603      	mov	r3, r0
 80147bc:	4618      	mov	r0, r3
 80147be:	f7ff ffe0 	bl	8014782 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESK_EEDcOSF_>
 80147c2:	4601      	mov	r1, r0
 80147c4:	f107 030c 	add.w	r3, r7, #12
 80147c8:	461a      	mov	r2, r3
 80147ca:	4620      	mov	r0, r4
 80147cc:	f000 fbb4 	bl	8014f38 <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_JRS8_St17integral_constantIjLj0EEEENSt15__invoke_resultISB_JDpT0_EE4typeESC_DpOSJ_>
	      integral_constant<size_t, __indices>()...);
 80147d0:	462b      	mov	r3, r5
      }
 80147d2:	4618      	mov	r0, r3
 80147d4:	3710      	adds	r7, #16
 80147d6:	46bd      	mov	sp, r7
 80147d8:	bdb0      	pop	{r4, r5, r7, pc}

080147da <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESH_SK_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80147da:	b5b0      	push	{r4, r5, r7, lr}
 80147dc:	b082      	sub	sp, #8
 80147de:	af00      	add	r7, sp, #0
 80147e0:	6078      	str	r0, [r7, #4]
 80147e2:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 80147e4:	6878      	ldr	r0, [r7, #4]
 80147e6:	f000 fb9c 	bl	8014f22 <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 80147ea:	4604      	mov	r4, r0
 80147ec:	6838      	ldr	r0, [r7, #0]
 80147ee:	f7fc fcd3 	bl	8011198 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 80147f2:	4603      	mov	r3, r0
 80147f4:	4619      	mov	r1, r3
 80147f6:	4620      	mov	r0, r4
 80147f8:	f7ff ffd3 	bl	80147a2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESH_SK_>
				   std::forward<_Variants>(__vars)...);
 80147fc:	462b      	mov	r3, r5
      }
 80147fe:	4618      	mov	r0, r3
 8014800:	3708      	adds	r7, #8
 8014802:	46bd      	mov	sp, r7
 8014804:	bdb0      	pop	{r4, r5, r7, pc}

08014806 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj0EEEE14__visit_invokeESH_SK_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8014806:	b5b0      	push	{r4, r5, r7, lr}
 8014808:	b082      	sub	sp, #8
 801480a:	af00      	add	r7, sp, #0
 801480c:	6078      	str	r0, [r7, #4]
 801480e:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8014810:	6878      	ldr	r0, [r7, #4]
 8014812:	f000 fb86 	bl	8014f22 <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 8014816:	4604      	mov	r4, r0
 8014818:	6838      	ldr	r0, [r7, #0]
 801481a:	f7fc fcbd 	bl	8011198 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 801481e:	4603      	mov	r3, r0
 8014820:	4619      	mov	r1, r3
 8014822:	4620      	mov	r0, r4
 8014824:	f7ff ffd9 	bl	80147da <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESH_SK_>
				   std::forward<_Variants>(__vars)...);
 8014828:	462b      	mov	r3, r5
      }
 801482a:	4618      	mov	r0, r3
 801482c:	3708      	adds	r7, #8
 801482e:	46bd      	mov	sp, r7
 8014830:	bdb0      	pop	{r4, r5, r7, pc}

08014832 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESK_EEDcOSF_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8014832:	b580      	push	{r7, lr}
 8014834:	b082      	sub	sp, #8
 8014836:	af00      	add	r7, sp, #0
 8014838:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 801483a:	6878      	ldr	r0, [r7, #4]
 801483c:	f7fc fcac 	bl	8011198 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8014840:	4603      	mov	r3, r0
 8014842:	4618      	mov	r0, r3
 8014844:	f7fb fdd4 	bl	80103f0 <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 8014848:	4603      	mov	r3, r0
	}
 801484a:	4618      	mov	r0, r3
 801484c:	3708      	adds	r7, #8
 801484e:	46bd      	mov	sp, r7
 8014850:	bd80      	pop	{r7, pc}

08014852 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESH_SK_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8014852:	b5b0      	push	{r4, r5, r7, lr}
 8014854:	b084      	sub	sp, #16
 8014856:	af00      	add	r7, sp, #0
 8014858:	6078      	str	r0, [r7, #4]
 801485a:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 801485c:	6878      	ldr	r0, [r7, #4]
 801485e:	f000 fb60 	bl	8014f22 <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 8014862:	4604      	mov	r4, r0
 8014864:	6838      	ldr	r0, [r7, #0]
 8014866:	f7fc fc97 	bl	8011198 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 801486a:	4603      	mov	r3, r0
 801486c:	4618      	mov	r0, r3
 801486e:	f7ff ffe0 	bl	8014832 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESK_EEDcOSF_>
 8014872:	4601      	mov	r1, r0
 8014874:	f107 030c 	add.w	r3, r7, #12
 8014878:	461a      	mov	r2, r3
 801487a:	4620      	mov	r0, r4
 801487c:	f000 fb7a 	bl	8014f74 <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_JRiSt17integral_constantIjLj1EEEENSt15__invoke_resultISB_JDpT0_EE4typeESC_DpOSJ_>
	      integral_constant<size_t, __indices>()...);
 8014880:	462b      	mov	r3, r5
      }
 8014882:	4618      	mov	r0, r3
 8014884:	3710      	adds	r7, #16
 8014886:	46bd      	mov	sp, r7
 8014888:	bdb0      	pop	{r4, r5, r7, pc}

0801488a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESH_SK_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 801488a:	b5b0      	push	{r4, r5, r7, lr}
 801488c:	b082      	sub	sp, #8
 801488e:	af00      	add	r7, sp, #0
 8014890:	6078      	str	r0, [r7, #4]
 8014892:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8014894:	6878      	ldr	r0, [r7, #4]
 8014896:	f000 fb44 	bl	8014f22 <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 801489a:	4604      	mov	r4, r0
 801489c:	6838      	ldr	r0, [r7, #0]
 801489e:	f7fc fc7b 	bl	8011198 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 80148a2:	4603      	mov	r3, r0
 80148a4:	4619      	mov	r1, r3
 80148a6:	4620      	mov	r0, r4
 80148a8:	f7ff ffd3 	bl	8014852 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESH_SK_>
				   std::forward<_Variants>(__vars)...);
 80148ac:	462b      	mov	r3, r5
      }
 80148ae:	4618      	mov	r0, r3
 80148b0:	3708      	adds	r7, #8
 80148b2:	46bd      	mov	sp, r7
 80148b4:	bdb0      	pop	{r4, r5, r7, pc}

080148b6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj1EEEE14__visit_invokeESH_SK_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80148b6:	b5b0      	push	{r4, r5, r7, lr}
 80148b8:	b082      	sub	sp, #8
 80148ba:	af00      	add	r7, sp, #0
 80148bc:	6078      	str	r0, [r7, #4]
 80148be:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 80148c0:	6878      	ldr	r0, [r7, #4]
 80148c2:	f000 fb2e 	bl	8014f22 <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 80148c6:	4604      	mov	r4, r0
 80148c8:	6838      	ldr	r0, [r7, #0]
 80148ca:	f7fc fc65 	bl	8011198 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 80148ce:	4603      	mov	r3, r0
 80148d0:	4619      	mov	r1, r3
 80148d2:	4620      	mov	r0, r4
 80148d4:	f7ff ffd9 	bl	801488a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESH_SK_>
				   std::forward<_Variants>(__vars)...);
 80148d8:	462b      	mov	r3, r5
      }
 80148da:	4618      	mov	r0, r3
 80148dc:	3708      	adds	r7, #8
 80148de:	46bd      	mov	sp, r7
 80148e0:	bdb0      	pop	{r4, r5, r7, pc}

080148e2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESK_EEDcOSF_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 80148e2:	b580      	push	{r7, lr}
 80148e4:	b082      	sub	sp, #8
 80148e6:	af00      	add	r7, sp, #0
 80148e8:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 80148ea:	6878      	ldr	r0, [r7, #4]
 80148ec:	f7fc fc54 	bl	8011198 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 80148f0:	4603      	mov	r3, r0
 80148f2:	4618      	mov	r0, r3
 80148f4:	f7fb fdf8 	bl	80104e8 <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 80148f8:	4603      	mov	r3, r0
	}
 80148fa:	4618      	mov	r0, r3
 80148fc:	3708      	adds	r7, #8
 80148fe:	46bd      	mov	sp, r7
 8014900:	bd80      	pop	{r7, pc}

08014902 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESH_SK_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8014902:	b5b0      	push	{r4, r5, r7, lr}
 8014904:	b084      	sub	sp, #16
 8014906:	af00      	add	r7, sp, #0
 8014908:	6078      	str	r0, [r7, #4]
 801490a:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 801490c:	6878      	ldr	r0, [r7, #4]
 801490e:	f000 fb08 	bl	8014f22 <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 8014912:	4604      	mov	r4, r0
 8014914:	6838      	ldr	r0, [r7, #0]
 8014916:	f7fc fc3f 	bl	8011198 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 801491a:	4603      	mov	r3, r0
 801491c:	4618      	mov	r0, r3
 801491e:	f7ff ffe0 	bl	80148e2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESK_EEDcOSF_>
 8014922:	4601      	mov	r1, r0
 8014924:	f107 030c 	add.w	r3, r7, #12
 8014928:	461a      	mov	r2, r3
 801492a:	4620      	mov	r0, r4
 801492c:	f000 fb40 	bl	8014fb0 <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_JRfSt17integral_constantIjLj2EEEENSt15__invoke_resultISB_JDpT0_EE4typeESC_DpOSJ_>
	      integral_constant<size_t, __indices>()...);
 8014930:	462b      	mov	r3, r5
      }
 8014932:	4618      	mov	r0, r3
 8014934:	3710      	adds	r7, #16
 8014936:	46bd      	mov	sp, r7
 8014938:	bdb0      	pop	{r4, r5, r7, pc}

0801493a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESH_SK_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 801493a:	b5b0      	push	{r4, r5, r7, lr}
 801493c:	b082      	sub	sp, #8
 801493e:	af00      	add	r7, sp, #0
 8014940:	6078      	str	r0, [r7, #4]
 8014942:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8014944:	6878      	ldr	r0, [r7, #4]
 8014946:	f000 faec 	bl	8014f22 <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 801494a:	4604      	mov	r4, r0
 801494c:	6838      	ldr	r0, [r7, #0]
 801494e:	f7fc fc23 	bl	8011198 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8014952:	4603      	mov	r3, r0
 8014954:	4619      	mov	r1, r3
 8014956:	4620      	mov	r0, r4
 8014958:	f7ff ffd3 	bl	8014902 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESH_SK_>
				   std::forward<_Variants>(__vars)...);
 801495c:	462b      	mov	r3, r5
      }
 801495e:	4618      	mov	r0, r3
 8014960:	3708      	adds	r7, #8
 8014962:	46bd      	mov	sp, r7
 8014964:	bdb0      	pop	{r4, r5, r7, pc}

08014966 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj2EEEE14__visit_invokeESH_SK_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8014966:	b5b0      	push	{r4, r5, r7, lr}
 8014968:	b082      	sub	sp, #8
 801496a:	af00      	add	r7, sp, #0
 801496c:	6078      	str	r0, [r7, #4]
 801496e:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8014970:	6878      	ldr	r0, [r7, #4]
 8014972:	f000 fad6 	bl	8014f22 <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 8014976:	4604      	mov	r4, r0
 8014978:	6838      	ldr	r0, [r7, #0]
 801497a:	f7fc fc0d 	bl	8011198 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 801497e:	4603      	mov	r3, r0
 8014980:	4619      	mov	r1, r3
 8014982:	4620      	mov	r0, r4
 8014984:	f7ff ffd9 	bl	801493a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESH_SK_>
				   std::forward<_Variants>(__vars)...);
 8014988:	462b      	mov	r3, r5
      }
 801498a:	4618      	mov	r0, r3
 801498c:	3708      	adds	r7, #8
 801498e:	46bd      	mov	sp, r7
 8014990:	bdb0      	pop	{r4, r5, r7, pc}

08014992 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESK_EEDcOSF_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8014992:	b580      	push	{r7, lr}
 8014994:	b082      	sub	sp, #8
 8014996:	af00      	add	r7, sp, #0
 8014998:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 801499a:	6878      	ldr	r0, [r7, #4]
 801499c:	f7fc fbfc 	bl	8011198 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 80149a0:	4603      	mov	r3, r0
 80149a2:	4618      	mov	r0, r3
 80149a4:	f7fc fa03 	bl	8010dae <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 80149a8:	4603      	mov	r3, r0
	}
 80149aa:	4618      	mov	r0, r3
 80149ac:	3708      	adds	r7, #8
 80149ae:	46bd      	mov	sp, r7
 80149b0:	bd80      	pop	{r7, pc}

080149b2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESH_SK_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 80149b2:	b5b0      	push	{r4, r5, r7, lr}
 80149b4:	b084      	sub	sp, #16
 80149b6:	af00      	add	r7, sp, #0
 80149b8:	6078      	str	r0, [r7, #4]
 80149ba:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 80149bc:	6878      	ldr	r0, [r7, #4]
 80149be:	f000 fab0 	bl	8014f22 <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 80149c2:	4604      	mov	r4, r0
 80149c4:	6838      	ldr	r0, [r7, #0]
 80149c6:	f7fc fbe7 	bl	8011198 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 80149ca:	4603      	mov	r3, r0
 80149cc:	4618      	mov	r0, r3
 80149ce:	f7ff ffe0 	bl	8014992 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESK_EEDcOSF_>
 80149d2:	4601      	mov	r1, r0
 80149d4:	f107 030c 	add.w	r3, r7, #12
 80149d8:	461a      	mov	r2, r3
 80149da:	4620      	mov	r0, r4
 80149dc:	f000 fb06 	bl	8014fec <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_JRbSt17integral_constantIjLj3EEEENSt15__invoke_resultISB_JDpT0_EE4typeESC_DpOSJ_>
	      integral_constant<size_t, __indices>()...);
 80149e0:	462b      	mov	r3, r5
      }
 80149e2:	4618      	mov	r0, r3
 80149e4:	3710      	adds	r7, #16
 80149e6:	46bd      	mov	sp, r7
 80149e8:	bdb0      	pop	{r4, r5, r7, pc}

080149ea <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESH_SK_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80149ea:	b5b0      	push	{r4, r5, r7, lr}
 80149ec:	b082      	sub	sp, #8
 80149ee:	af00      	add	r7, sp, #0
 80149f0:	6078      	str	r0, [r7, #4]
 80149f2:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 80149f4:	6878      	ldr	r0, [r7, #4]
 80149f6:	f000 fa94 	bl	8014f22 <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 80149fa:	4604      	mov	r4, r0
 80149fc:	6838      	ldr	r0, [r7, #0]
 80149fe:	f7fc fbcb 	bl	8011198 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8014a02:	4603      	mov	r3, r0
 8014a04:	4619      	mov	r1, r3
 8014a06:	4620      	mov	r0, r4
 8014a08:	f7ff ffd3 	bl	80149b2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESH_SK_>
				   std::forward<_Variants>(__vars)...);
 8014a0c:	462b      	mov	r3, r5
      }
 8014a0e:	4618      	mov	r0, r3
 8014a10:	3708      	adds	r7, #8
 8014a12:	46bd      	mov	sp, r7
 8014a14:	bdb0      	pop	{r4, r5, r7, pc}

08014a16 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj3EEEE14__visit_invokeESH_SK_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8014a16:	b5b0      	push	{r4, r5, r7, lr}
 8014a18:	b082      	sub	sp, #8
 8014a1a:	af00      	add	r7, sp, #0
 8014a1c:	6078      	str	r0, [r7, #4]
 8014a1e:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8014a20:	6878      	ldr	r0, [r7, #4]
 8014a22:	f000 fa7e 	bl	8014f22 <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 8014a26:	4604      	mov	r4, r0
 8014a28:	6838      	ldr	r0, [r7, #0]
 8014a2a:	f7fc fbb5 	bl	8011198 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8014a2e:	4603      	mov	r3, r0
 8014a30:	4619      	mov	r1, r3
 8014a32:	4620      	mov	r0, r4
 8014a34:	f7ff ffd9 	bl	80149ea <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESH_SK_>
				   std::forward<_Variants>(__vars)...);
 8014a38:	462b      	mov	r3, r5
      }
 8014a3a:	4618      	mov	r0, r3
 8014a3c:	3708      	adds	r7, #8
 8014a3e:	46bd      	mov	sp, r7
 8014a40:	bdb0      	pop	{r4, r5, r7, pc}

08014a42 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSA_EUlOT_T0_E_RSt7variantIJS9_ifbEEEJLj4EEE9_M_accessIJEEERKSL_jDpT_>:
	_M_access(size_t __first_index, _Args... __rest_indices) const
 8014a42:	b580      	push	{r7, lr}
 8014a44:	b082      	sub	sp, #8
 8014a46:	af00      	add	r7, sp, #0
 8014a48:	6078      	str	r0, [r7, #4]
 8014a4a:	6039      	str	r1, [r7, #0]
	    ._M_access(__rest_indices...);
 8014a4c:	683b      	ldr	r3, [r7, #0]
 8014a4e:	009b      	lsls	r3, r3, #2
 8014a50:	687a      	ldr	r2, [r7, #4]
 8014a52:	4413      	add	r3, r2
 8014a54:	4618      	mov	r0, r3
 8014a56:	f000 fae7 	bl	8015028 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSA_EUlOT_T0_E_RSt7variantIJS9_ifbEEEJEE9_M_accessEv>
 8014a5a:	4603      	mov	r3, r0
	}
 8014a5c:	4618      	mov	r0, r3
 8014a5e:	3708      	adds	r7, #8
 8014a60:	46bd      	mov	sp, r7
 8014a62:	bd80      	pop	{r7, pc}

08014a64 <_ZSt10__do_visitILb1ELb1EZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_JRSt7variantIJS8_ifbEEEEDcOT1_DpOT2_>:
    __do_visit(_Visitor&& __visitor, _Variants&&... __variants)
 8014a64:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014a66:	b085      	sub	sp, #20
 8014a68:	af00      	add	r7, sp, #0
 8014a6a:	6078      	str	r0, [r7, #4]
 8014a6c:	6039      	str	r1, [r7, #0]
      constexpr auto& __vtable = __detail::__variant::__gen_vtable<
 8014a6e:	4b0f      	ldr	r3, [pc, #60]	; (8014aac <_ZSt10__do_visitILb1ELb1EZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_JRSt7variantIJS8_ifbEEEEDcOT1_DpOT2_+0x48>)
 8014a70:	60fb      	str	r3, [r7, #12]
      auto __func_ptr = __vtable._M_access(__variants.index()...);
 8014a72:	6838      	ldr	r0, [r7, #0]
 8014a74:	f7fb fa70 	bl	800ff58 <_ZNKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE5indexEv>
 8014a78:	4603      	mov	r3, r0
 8014a7a:	4619      	mov	r1, r3
 8014a7c:	68f8      	ldr	r0, [r7, #12]
 8014a7e:	f7ff ffe0 	bl	8014a42 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSA_EUlOT_T0_E_RSt7variantIJS9_ifbEEEJLj4EEE9_M_accessIJEEERKSL_jDpT_>
 8014a82:	4603      	mov	r3, r0
 8014a84:	681b      	ldr	r3, [r3, #0]
 8014a86:	60bb      	str	r3, [r7, #8]
      return (*__func_ptr)(std::forward<_Visitor>(__visitor),
 8014a88:	68bc      	ldr	r4, [r7, #8]
 8014a8a:	6878      	ldr	r0, [r7, #4]
 8014a8c:	f000 fad7 	bl	801503e <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 8014a90:	4605      	mov	r5, r0
 8014a92:	6838      	ldr	r0, [r7, #0]
 8014a94:	f7fc fb80 	bl	8011198 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8014a98:	4603      	mov	r3, r0
 8014a9a:	4619      	mov	r1, r3
 8014a9c:	4628      	mov	r0, r5
 8014a9e:	47a0      	blx	r4
			   std::forward<_Variants>(__variants)...);
 8014aa0:	4633      	mov	r3, r6
    }
 8014aa2:	4618      	mov	r0, r3
 8014aa4:	3714      	adds	r7, #20
 8014aa6:	46bd      	mov	sp, r7
 8014aa8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014aaa:	bf00      	nop
 8014aac:	0802a1e4 	.word	0x0802a1e4

08014ab0 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_>:
      operator=(_Move_assign_base&& __rhs)
 8014ab0:	b580      	push	{r7, lr}
 8014ab2:	b084      	sub	sp, #16
 8014ab4:	af00      	add	r7, sp, #0
 8014ab6:	6078      	str	r0, [r7, #4]
 8014ab8:	6039      	str	r1, [r7, #0]
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8014aba:	687b      	ldr	r3, [r7, #4]
 8014abc:	60fb      	str	r3, [r7, #12]
 8014abe:	6838      	ldr	r0, [r7, #0]
 8014ac0:	f7ff fe54 	bl	801476c <_ZSt14__variant_castIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNSt8__detail9__variant17_Move_assign_baseILb0EJS5_ifbEEEEDcOT0_>
 8014ac4:	4602      	mov	r2, r0
 8014ac6:	f107 030c 	add.w	r3, r7, #12
 8014aca:	4611      	mov	r1, r2
 8014acc:	4618      	mov	r0, r3
 8014ace:	f7ff ffc9 	bl	8014a64 <_ZSt10__do_visitILb1ELb1EZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_JRSt7variantIJS8_ifbEEEEDcOT1_DpOT2_>
	return *this;
 8014ad2:	687b      	ldr	r3, [r7, #4]
      }
 8014ad4:	4618      	mov	r0, r3
 8014ad6:	3710      	adds	r7, #16
 8014ad8:	46bd      	mov	sp, r7
 8014ada:	bd80      	pop	{r7, pc}

08014adc <_ZSt4moveIRP10ExpressionEONSt16remove_referenceIT_E4typeEOS4_>:
    move(_Tp&& __t) noexcept
 8014adc:	b480      	push	{r7}
 8014ade:	b083      	sub	sp, #12
 8014ae0:	af00      	add	r7, sp, #0
 8014ae2:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 8014ae4:	687b      	ldr	r3, [r7, #4]
 8014ae6:	4618      	mov	r0, r3
 8014ae8:	370c      	adds	r7, #12
 8014aea:	46bd      	mov	sp, r7
 8014aec:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014af0:	4770      	bx	lr

08014af2 <_ZNSt6vectorIP10ExpressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>:
      vector<_Tp, _Alloc>::
 8014af2:	b5b0      	push	{r4, r5, r7, lr}
 8014af4:	b082      	sub	sp, #8
 8014af6:	af00      	add	r7, sp, #0
 8014af8:	6078      	str	r0, [r7, #4]
 8014afa:	6039      	str	r1, [r7, #0]
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 8014afc:	687b      	ldr	r3, [r7, #4]
 8014afe:	685a      	ldr	r2, [r3, #4]
 8014b00:	687b      	ldr	r3, [r7, #4]
 8014b02:	689b      	ldr	r3, [r3, #8]
 8014b04:	429a      	cmp	r2, r3
 8014b06:	d011      	beq.n	8014b2c <_ZNSt6vectorIP10ExpressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x3a>
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 8014b08:	687c      	ldr	r4, [r7, #4]
 8014b0a:	687b      	ldr	r3, [r7, #4]
 8014b0c:	685d      	ldr	r5, [r3, #4]
 8014b0e:	6838      	ldr	r0, [r7, #0]
 8014b10:	f000 faa0 	bl	8015054 <_ZSt7forwardIP10ExpressionEOT_RNSt16remove_referenceIS2_E4typeE>
 8014b14:	4603      	mov	r3, r0
 8014b16:	461a      	mov	r2, r3
 8014b18:	4629      	mov	r1, r5
 8014b1a:	4620      	mov	r0, r4
 8014b1c:	f000 faa5 	bl	801506a <_ZNSt16allocator_traitsISaIP10ExpressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	    ++this->_M_impl._M_finish;
 8014b20:	687b      	ldr	r3, [r7, #4]
 8014b22:	685b      	ldr	r3, [r3, #4]
 8014b24:	1d1a      	adds	r2, r3, #4
 8014b26:	687b      	ldr	r3, [r7, #4]
 8014b28:	605a      	str	r2, [r3, #4]
 8014b2a:	e00c      	b.n	8014b46 <_ZNSt6vectorIP10ExpressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x54>
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
 8014b2c:	6878      	ldr	r0, [r7, #4]
 8014b2e:	f000 faaf 	bl	8015090 <_ZNSt6vectorIP10ExpressionSaIS1_EE3endEv>
 8014b32:	4604      	mov	r4, r0
 8014b34:	6838      	ldr	r0, [r7, #0]
 8014b36:	f000 fa8d 	bl	8015054 <_ZSt7forwardIP10ExpressionEOT_RNSt16remove_referenceIS2_E4typeE>
 8014b3a:	4603      	mov	r3, r0
 8014b3c:	461a      	mov	r2, r3
 8014b3e:	4621      	mov	r1, r4
 8014b40:	6878      	ldr	r0, [r7, #4]
 8014b42:	f000 fab7 	bl	80150b4 <_ZNSt6vectorIP10ExpressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
	return back();
 8014b46:	6878      	ldr	r0, [r7, #4]
 8014b48:	f000 fb30 	bl	80151ac <_ZNSt6vectorIP10ExpressionSaIS1_EE4backEv>
 8014b4c:	4603      	mov	r3, r0
      }
 8014b4e:	4618      	mov	r0, r3
 8014b50:	3708      	adds	r7, #8
 8014b52:	46bd      	mov	sp, r7
 8014b54:	bdb0      	pop	{r4, r5, r7, pc}

08014b56 <_ZSt4moveIRP4BodyEONSt16remove_referenceIT_E4typeEOS4_>:
    move(_Tp&& __t) noexcept
 8014b56:	b480      	push	{r7}
 8014b58:	b083      	sub	sp, #12
 8014b5a:	af00      	add	r7, sp, #0
 8014b5c:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 8014b5e:	687b      	ldr	r3, [r7, #4]
 8014b60:	4618      	mov	r0, r3
 8014b62:	370c      	adds	r7, #12
 8014b64:	46bd      	mov	sp, r7
 8014b66:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014b6a:	4770      	bx	lr

08014b6c <_ZNSt6vectorIP4BodySaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>:
      vector<_Tp, _Alloc>::
 8014b6c:	b5b0      	push	{r4, r5, r7, lr}
 8014b6e:	b082      	sub	sp, #8
 8014b70:	af00      	add	r7, sp, #0
 8014b72:	6078      	str	r0, [r7, #4]
 8014b74:	6039      	str	r1, [r7, #0]
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 8014b76:	687b      	ldr	r3, [r7, #4]
 8014b78:	685a      	ldr	r2, [r3, #4]
 8014b7a:	687b      	ldr	r3, [r7, #4]
 8014b7c:	689b      	ldr	r3, [r3, #8]
 8014b7e:	429a      	cmp	r2, r3
 8014b80:	d011      	beq.n	8014ba6 <_ZNSt6vectorIP4BodySaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x3a>
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 8014b82:	687c      	ldr	r4, [r7, #4]
 8014b84:	687b      	ldr	r3, [r7, #4]
 8014b86:	685d      	ldr	r5, [r3, #4]
 8014b88:	6838      	ldr	r0, [r7, #0]
 8014b8a:	f000 fb2a 	bl	80151e2 <_ZSt7forwardIP4BodyEOT_RNSt16remove_referenceIS2_E4typeE>
 8014b8e:	4603      	mov	r3, r0
 8014b90:	461a      	mov	r2, r3
 8014b92:	4629      	mov	r1, r5
 8014b94:	4620      	mov	r0, r4
 8014b96:	f000 fb2f 	bl	80151f8 <_ZNSt16allocator_traitsISaIP4BodyEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	    ++this->_M_impl._M_finish;
 8014b9a:	687b      	ldr	r3, [r7, #4]
 8014b9c:	685b      	ldr	r3, [r3, #4]
 8014b9e:	1d1a      	adds	r2, r3, #4
 8014ba0:	687b      	ldr	r3, [r7, #4]
 8014ba2:	605a      	str	r2, [r3, #4]
 8014ba4:	e00c      	b.n	8014bc0 <_ZNSt6vectorIP4BodySaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x54>
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
 8014ba6:	6878      	ldr	r0, [r7, #4]
 8014ba8:	f7ef f976 	bl	8003e98 <_ZNSt6vectorIP4BodySaIS1_EE3endEv>
 8014bac:	4604      	mov	r4, r0
 8014bae:	6838      	ldr	r0, [r7, #0]
 8014bb0:	f000 fb17 	bl	80151e2 <_ZSt7forwardIP4BodyEOT_RNSt16remove_referenceIS2_E4typeE>
 8014bb4:	4603      	mov	r3, r0
 8014bb6:	461a      	mov	r2, r3
 8014bb8:	4621      	mov	r1, r4
 8014bba:	6878      	ldr	r0, [r7, #4]
 8014bbc:	f000 fb30 	bl	8015220 <_ZNSt6vectorIP4BodySaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
	return back();
 8014bc0:	6878      	ldr	r0, [r7, #4]
 8014bc2:	f7ed fe34 	bl	800282e <_ZNSt6vectorIP4BodySaIS1_EE4backEv>
 8014bc6:	4603      	mov	r3, r0
      }
 8014bc8:	4618      	mov	r0, r3
 8014bca:	3708      	adds	r7, #8
 8014bcc:	46bd      	mov	sp, r7
 8014bce:	bdb0      	pop	{r4, r5, r7, pc}

08014bd0 <_ZNSaIP10ExpressionEC1Ev>:
 8014bd0:	b580      	push	{r7, lr}
 8014bd2:	b082      	sub	sp, #8
 8014bd4:	af00      	add	r7, sp, #0
 8014bd6:	6078      	str	r0, [r7, #4]
 8014bd8:	6878      	ldr	r0, [r7, #4]
 8014bda:	f000 fb9d 	bl	8015318 <_ZN9__gnu_cxx13new_allocatorIP10ExpressionEC1Ev>
 8014bde:	687b      	ldr	r3, [r7, #4]
 8014be0:	4618      	mov	r0, r3
 8014be2:	3708      	adds	r7, #8
 8014be4:	46bd      	mov	sp, r7
 8014be6:	bd80      	pop	{r7, pc}

08014be8 <_ZNSaIP4BodyEC1Ev>:
 8014be8:	b580      	push	{r7, lr}
 8014bea:	b082      	sub	sp, #8
 8014bec:	af00      	add	r7, sp, #0
 8014bee:	6078      	str	r0, [r7, #4]
 8014bf0:	6878      	ldr	r0, [r7, #4]
 8014bf2:	f000 fb9c 	bl	801532e <_ZN9__gnu_cxx13new_allocatorIP4BodyEC1Ev>
 8014bf6:	687b      	ldr	r3, [r7, #4]
 8014bf8:	4618      	mov	r0, r3
 8014bfa:	3708      	adds	r7, #8
 8014bfc:	46bd      	mov	sp, r7
 8014bfe:	bd80      	pop	{r7, pc}

08014c00 <_ZNSt12_Vector_baseIP4BodySaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
 8014c00:	b480      	push	{r7}
 8014c02:	b083      	sub	sp, #12
 8014c04:	af00      	add	r7, sp, #0
 8014c06:	6078      	str	r0, [r7, #4]
	: _M_start(), _M_finish(), _M_end_of_storage()
 8014c08:	687b      	ldr	r3, [r7, #4]
 8014c0a:	2200      	movs	r2, #0
 8014c0c:	601a      	str	r2, [r3, #0]
 8014c0e:	687b      	ldr	r3, [r7, #4]
 8014c10:	2200      	movs	r2, #0
 8014c12:	605a      	str	r2, [r3, #4]
 8014c14:	687b      	ldr	r3, [r7, #4]
 8014c16:	2200      	movs	r2, #0
 8014c18:	609a      	str	r2, [r3, #8]
	{ }
 8014c1a:	687b      	ldr	r3, [r7, #4]
 8014c1c:	4618      	mov	r0, r3
 8014c1e:	370c      	adds	r7, #12
 8014c20:	46bd      	mov	sp, r7
 8014c22:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014c26:	4770      	bx	lr

08014c28 <_ZNSt12_Vector_baseIP4BodySaIS1_EE13_M_deallocateEPS1_j>:
      _M_deallocate(pointer __p, size_t __n)
 8014c28:	b580      	push	{r7, lr}
 8014c2a:	b084      	sub	sp, #16
 8014c2c:	af00      	add	r7, sp, #0
 8014c2e:	60f8      	str	r0, [r7, #12]
 8014c30:	60b9      	str	r1, [r7, #8]
 8014c32:	607a      	str	r2, [r7, #4]
	if (__p)
 8014c34:	68bb      	ldr	r3, [r7, #8]
 8014c36:	2b00      	cmp	r3, #0
 8014c38:	d005      	beq.n	8014c46 <_ZNSt12_Vector_baseIP4BodySaIS1_EE13_M_deallocateEPS1_j+0x1e>
	  _Tr::deallocate(_M_impl, __p, __n);
 8014c3a:	68fb      	ldr	r3, [r7, #12]
 8014c3c:	687a      	ldr	r2, [r7, #4]
 8014c3e:	68b9      	ldr	r1, [r7, #8]
 8014c40:	4618      	mov	r0, r3
 8014c42:	f000 fb7f 	bl	8015344 <_ZNSt16allocator_traitsISaIP4BodyEE10deallocateERS2_PS1_j>
      }
 8014c46:	bf00      	nop
 8014c48:	3710      	adds	r7, #16
 8014c4a:	46bd      	mov	sp, r7
 8014c4c:	bd80      	pop	{r7, pc}

08014c4e <_ZNSt12_Vector_baseIP4BodySaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 8014c4e:	b480      	push	{r7}
 8014c50:	b083      	sub	sp, #12
 8014c52:	af00      	add	r7, sp, #0
 8014c54:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 8014c56:	687b      	ldr	r3, [r7, #4]
 8014c58:	4618      	mov	r0, r3
 8014c5a:	370c      	adds	r7, #12
 8014c5c:	46bd      	mov	sp, r7
 8014c5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014c62:	4770      	bx	lr

08014c64 <_ZSt7forwardIP13Function_callEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8014c64:	b480      	push	{r7}
 8014c66:	b083      	sub	sp, #12
 8014c68:	af00      	add	r7, sp, #0
 8014c6a:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8014c6c:	687b      	ldr	r3, [r7, #4]
 8014c6e:	4618      	mov	r0, r3
 8014c70:	370c      	adds	r7, #12
 8014c72:	46bd      	mov	sp, r7
 8014c74:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014c78:	4770      	bx	lr

08014c7a <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE7emplaceILj1EJS3_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>:
	emplace(_Args&&... __args)
 8014c7a:	b580      	push	{r7, lr}
 8014c7c:	b082      	sub	sp, #8
 8014c7e:	af00      	add	r7, sp, #0
 8014c80:	6078      	str	r0, [r7, #4]
 8014c82:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 8014c84:	687b      	ldr	r3, [r7, #4]
 8014c86:	4618      	mov	r0, r3
 8014c88:	f000 fb6b 	bl	8015362 <_ZNSt8__detail9__variant16_Variant_storageILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 8014c8c:	6838      	ldr	r0, [r7, #0]
 8014c8e:	f7ff ffe9 	bl	8014c64 <_ZSt7forwardIP13Function_callEOT_RNSt16remove_referenceIS2_E4typeE>
 8014c92:	4603      	mov	r3, r0
 8014c94:	4619      	mov	r1, r3
 8014c96:	6878      	ldr	r0, [r7, #4]
 8014c98:	f000 fb70 	bl	801537c <_ZSt28__variant_construct_by_indexILj1ESt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEJS4_EEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 8014c9c:	6878      	ldr	r0, [r7, #4]
 8014c9e:	f7ee ff83 	bl	8003ba8 <_ZSt3getILj1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8014ca2:	4603      	mov	r3, r0
	}
 8014ca4:	4618      	mov	r0, r3
 8014ca6:	3708      	adds	r7, #8
 8014ca8:	46bd      	mov	sp, r7
 8014caa:	bd80      	pop	{r7, pc}

08014cac <_ZSt7forwardIP10AssignmentEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8014cac:	b480      	push	{r7}
 8014cae:	b083      	sub	sp, #12
 8014cb0:	af00      	add	r7, sp, #0
 8014cb2:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8014cb4:	687b      	ldr	r3, [r7, #4]
 8014cb6:	4618      	mov	r0, r3
 8014cb8:	370c      	adds	r7, #12
 8014cba:	46bd      	mov	sp, r7
 8014cbc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014cc0:	4770      	bx	lr

08014cc2 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE7emplaceILj0EJS1_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>:
	emplace(_Args&&... __args)
 8014cc2:	b580      	push	{r7, lr}
 8014cc4:	b082      	sub	sp, #8
 8014cc6:	af00      	add	r7, sp, #0
 8014cc8:	6078      	str	r0, [r7, #4]
 8014cca:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 8014ccc:	687b      	ldr	r3, [r7, #4]
 8014cce:	4618      	mov	r0, r3
 8014cd0:	f000 fb47 	bl	8015362 <_ZNSt8__detail9__variant16_Variant_storageILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 8014cd4:	6838      	ldr	r0, [r7, #0]
 8014cd6:	f7ff ffe9 	bl	8014cac <_ZSt7forwardIP10AssignmentEOT_RNSt16remove_referenceIS2_E4typeE>
 8014cda:	4603      	mov	r3, r0
 8014cdc:	4619      	mov	r1, r3
 8014cde:	6878      	ldr	r0, [r7, #4]
 8014ce0:	f000 fb6b 	bl	80153ba <_ZSt28__variant_construct_by_indexILj0ESt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEJS2_EEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 8014ce4:	6878      	ldr	r0, [r7, #4]
 8014ce6:	f7ee ff0f 	bl	8003b08 <_ZSt3getILj0EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8014cea:	4603      	mov	r3, r0
	}
 8014cec:	4618      	mov	r0, r3
 8014cee:	3708      	adds	r7, #8
 8014cf0:	46bd      	mov	sp, r7
 8014cf2:	bd80      	pop	{r7, pc}

08014cf4 <_ZSt7forwardIP11Method_callEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8014cf4:	b480      	push	{r7}
 8014cf6:	b083      	sub	sp, #12
 8014cf8:	af00      	add	r7, sp, #0
 8014cfa:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8014cfc:	687b      	ldr	r3, [r7, #4]
 8014cfe:	4618      	mov	r0, r3
 8014d00:	370c      	adds	r7, #12
 8014d02:	46bd      	mov	sp, r7
 8014d04:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014d08:	4770      	bx	lr

08014d0a <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE7emplaceILj2EJS5_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>:
	emplace(_Args&&... __args)
 8014d0a:	b580      	push	{r7, lr}
 8014d0c:	b082      	sub	sp, #8
 8014d0e:	af00      	add	r7, sp, #0
 8014d10:	6078      	str	r0, [r7, #4]
 8014d12:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 8014d14:	687b      	ldr	r3, [r7, #4]
 8014d16:	4618      	mov	r0, r3
 8014d18:	f000 fb23 	bl	8015362 <_ZNSt8__detail9__variant16_Variant_storageILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 8014d1c:	6838      	ldr	r0, [r7, #0]
 8014d1e:	f7ff ffe9 	bl	8014cf4 <_ZSt7forwardIP11Method_callEOT_RNSt16remove_referenceIS2_E4typeE>
 8014d22:	4603      	mov	r3, r0
 8014d24:	4619      	mov	r1, r3
 8014d26:	6878      	ldr	r0, [r7, #4]
 8014d28:	f000 fb66 	bl	80153f8 <_ZSt28__variant_construct_by_indexILj2ESt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEJS6_EEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 8014d2c:	6878      	ldr	r0, [r7, #4]
 8014d2e:	f7ee ff9d 	bl	8003c6c <_ZSt3getILj2EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8014d32:	4603      	mov	r3, r0
	}
 8014d34:	4618      	mov	r0, r3
 8014d36:	3708      	adds	r7, #8
 8014d38:	46bd      	mov	sp, r7
 8014d3a:	bd80      	pop	{r7, pc}

08014d3c <_ZNSt8__detail9__variant14_UninitializedIP10AssignmentLb1EEC1IJEEESt16in_place_index_tILj0EEDpOT_>:
	_Uninitialized(in_place_index_t<0>, _Args&&... __args)
 8014d3c:	b480      	push	{r7}
 8014d3e:	b083      	sub	sp, #12
 8014d40:	af00      	add	r7, sp, #0
 8014d42:	6078      	str	r0, [r7, #4]
 8014d44:	7039      	strb	r1, [r7, #0]
	: _M_storage(std::forward<_Args>(__args)...)
 8014d46:	687b      	ldr	r3, [r7, #4]
 8014d48:	2200      	movs	r2, #0
 8014d4a:	601a      	str	r2, [r3, #0]
	{ }
 8014d4c:	687b      	ldr	r3, [r7, #4]
 8014d4e:	4618      	mov	r0, r3
 8014d50:	370c      	adds	r7, #12
 8014d52:	46bd      	mov	sp, r7
 8014d54:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014d58:	4770      	bx	lr

08014d5a <_ZNSt8__detail9__variant15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEC1IJEEESt16in_place_index_tILj0EEDpOT_>:
	constexpr _Variadic_union(in_place_index_t<0>, _Args&&... __args)
 8014d5a:	b580      	push	{r7, lr}
 8014d5c:	b082      	sub	sp, #8
 8014d5e:	af00      	add	r7, sp, #0
 8014d60:	6078      	str	r0, [r7, #4]
 8014d62:	7039      	strb	r1, [r7, #0]
	: _M_first(in_place_index<0>, std::forward<_Args>(__args)...)
 8014d64:	687b      	ldr	r3, [r7, #4]
 8014d66:	4611      	mov	r1, r2
 8014d68:	4618      	mov	r0, r3
 8014d6a:	f7ff ffe7 	bl	8014d3c <_ZNSt8__detail9__variant14_UninitializedIP10AssignmentLb1EEC1IJEEESt16in_place_index_tILj0EEDpOT_>
	{ }
 8014d6e:	687b      	ldr	r3, [r7, #4]
 8014d70:	4618      	mov	r0, r3
 8014d72:	3708      	adds	r7, #8
 8014d74:	46bd      	mov	sp, r7
 8014d76:	bd80      	pop	{r7, pc}

08014d78 <_ZNSt8__detail9__variant16_Variant_storageILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variant_storage(in_place_index_t<_Np>, _Args&&... __args)
 8014d78:	b580      	push	{r7, lr}
 8014d7a:	b082      	sub	sp, #8
 8014d7c:	af00      	add	r7, sp, #0
 8014d7e:	6078      	str	r0, [r7, #4]
 8014d80:	7039      	strb	r1, [r7, #0]
	_M_index(_Np)
 8014d82:	687b      	ldr	r3, [r7, #4]
 8014d84:	4611      	mov	r1, r2
 8014d86:	4618      	mov	r0, r3
 8014d88:	f7ff ffe7 	bl	8014d5a <_ZNSt8__detail9__variant15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEC1IJEEESt16in_place_index_tILj0EEDpOT_>
 8014d8c:	687b      	ldr	r3, [r7, #4]
 8014d8e:	2200      	movs	r2, #0
 8014d90:	711a      	strb	r2, [r3, #4]
	{ }
 8014d92:	687b      	ldr	r3, [r7, #4]
 8014d94:	4618      	mov	r0, r3
 8014d96:	3708      	adds	r7, #8
 8014d98:	46bd      	mov	sp, r7
 8014d9a:	bd80      	pop	{r7, pc}

08014d9c <_ZSt7forwardIP15While_statementEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8014d9c:	b480      	push	{r7}
 8014d9e:	b083      	sub	sp, #12
 8014da0:	af00      	add	r7, sp, #0
 8014da2:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8014da4:	687b      	ldr	r3, [r7, #4]
 8014da6:	4618      	mov	r0, r3
 8014da8:	370c      	adds	r7, #12
 8014daa:	46bd      	mov	sp, r7
 8014dac:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014db0:	4770      	bx	lr

08014db2 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE7emplaceILj3EJS7_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>:
	emplace(_Args&&... __args)
 8014db2:	b580      	push	{r7, lr}
 8014db4:	b082      	sub	sp, #8
 8014db6:	af00      	add	r7, sp, #0
 8014db8:	6078      	str	r0, [r7, #4]
 8014dba:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 8014dbc:	687b      	ldr	r3, [r7, #4]
 8014dbe:	4618      	mov	r0, r3
 8014dc0:	f000 facf 	bl	8015362 <_ZNSt8__detail9__variant16_Variant_storageILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 8014dc4:	6838      	ldr	r0, [r7, #0]
 8014dc6:	f7ff ffe9 	bl	8014d9c <_ZSt7forwardIP15While_statementEOT_RNSt16remove_referenceIS2_E4typeE>
 8014dca:	4603      	mov	r3, r0
 8014dcc:	4619      	mov	r1, r3
 8014dce:	6878      	ldr	r0, [r7, #4]
 8014dd0:	f000 fb31 	bl	8015436 <_ZSt28__variant_construct_by_indexILj3ESt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEJS8_EEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 8014dd4:	6878      	ldr	r0, [r7, #4]
 8014dd6:	f7ee ffbd 	bl	8003d54 <_ZSt3getILj3EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8014dda:	4603      	mov	r3, r0
	}
 8014ddc:	4618      	mov	r0, r3
 8014dde:	3708      	adds	r7, #8
 8014de0:	46bd      	mov	sp, r7
 8014de2:	bd80      	pop	{r7, pc}

08014de4 <_ZSt7forwardIP12If_statementEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8014de4:	b480      	push	{r7}
 8014de6:	b083      	sub	sp, #12
 8014de8:	af00      	add	r7, sp, #0
 8014dea:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8014dec:	687b      	ldr	r3, [r7, #4]
 8014dee:	4618      	mov	r0, r3
 8014df0:	370c      	adds	r7, #12
 8014df2:	46bd      	mov	sp, r7
 8014df4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014df8:	4770      	bx	lr

08014dfa <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE7emplaceILj4EJS9_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>:
	emplace(_Args&&... __args)
 8014dfa:	b580      	push	{r7, lr}
 8014dfc:	b082      	sub	sp, #8
 8014dfe:	af00      	add	r7, sp, #0
 8014e00:	6078      	str	r0, [r7, #4]
 8014e02:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 8014e04:	687b      	ldr	r3, [r7, #4]
 8014e06:	4618      	mov	r0, r3
 8014e08:	f000 faab 	bl	8015362 <_ZNSt8__detail9__variant16_Variant_storageILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 8014e0c:	6838      	ldr	r0, [r7, #0]
 8014e0e:	f7ff ffe9 	bl	8014de4 <_ZSt7forwardIP12If_statementEOT_RNSt16remove_referenceIS2_E4typeE>
 8014e12:	4603      	mov	r3, r0
 8014e14:	4619      	mov	r1, r3
 8014e16:	6878      	ldr	r0, [r7, #4]
 8014e18:	f000 fb2c 	bl	8015474 <_ZSt28__variant_construct_by_indexILj4ESt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEJSA_EEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 8014e1c:	6878      	ldr	r0, [r7, #4]
 8014e1e:	f7ef f81f 	bl	8003e60 <_ZSt3getILj4EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8014e22:	4603      	mov	r3, r0
	}
 8014e24:	4618      	mov	r0, r3
 8014e26:	3708      	adds	r7, #8
 8014e28:	46bd      	mov	sp, r7
 8014e2a:	bd80      	pop	{r7, pc}

08014e2c <_ZNSaIP9StatementEC1Ev>:
 8014e2c:	b580      	push	{r7, lr}
 8014e2e:	b082      	sub	sp, #8
 8014e30:	af00      	add	r7, sp, #0
 8014e32:	6078      	str	r0, [r7, #4]
 8014e34:	6878      	ldr	r0, [r7, #4]
 8014e36:	f000 fb3c 	bl	80154b2 <_ZN9__gnu_cxx13new_allocatorIP9StatementEC1Ev>
 8014e3a:	687b      	ldr	r3, [r7, #4]
 8014e3c:	4618      	mov	r0, r3
 8014e3e:	3708      	adds	r7, #8
 8014e40:	46bd      	mov	sp, r7
 8014e42:	bd80      	pop	{r7, pc}

08014e44 <_ZNSt12_Vector_baseIP9StatementSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
 8014e44:	b480      	push	{r7}
 8014e46:	b083      	sub	sp, #12
 8014e48:	af00      	add	r7, sp, #0
 8014e4a:	6078      	str	r0, [r7, #4]
	: _M_start(), _M_finish(), _M_end_of_storage()
 8014e4c:	687b      	ldr	r3, [r7, #4]
 8014e4e:	2200      	movs	r2, #0
 8014e50:	601a      	str	r2, [r3, #0]
 8014e52:	687b      	ldr	r3, [r7, #4]
 8014e54:	2200      	movs	r2, #0
 8014e56:	605a      	str	r2, [r3, #4]
 8014e58:	687b      	ldr	r3, [r7, #4]
 8014e5a:	2200      	movs	r2, #0
 8014e5c:	609a      	str	r2, [r3, #8]
	{ }
 8014e5e:	687b      	ldr	r3, [r7, #4]
 8014e60:	4618      	mov	r0, r3
 8014e62:	370c      	adds	r7, #12
 8014e64:	46bd      	mov	sp, r7
 8014e66:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014e6a:	4770      	bx	lr

08014e6c <_ZNSt12_Vector_baseIP9StatementSaIS1_EE13_M_deallocateEPS1_j>:
      _M_deallocate(pointer __p, size_t __n)
 8014e6c:	b580      	push	{r7, lr}
 8014e6e:	b084      	sub	sp, #16
 8014e70:	af00      	add	r7, sp, #0
 8014e72:	60f8      	str	r0, [r7, #12]
 8014e74:	60b9      	str	r1, [r7, #8]
 8014e76:	607a      	str	r2, [r7, #4]
	if (__p)
 8014e78:	68bb      	ldr	r3, [r7, #8]
 8014e7a:	2b00      	cmp	r3, #0
 8014e7c:	d005      	beq.n	8014e8a <_ZNSt12_Vector_baseIP9StatementSaIS1_EE13_M_deallocateEPS1_j+0x1e>
	  _Tr::deallocate(_M_impl, __p, __n);
 8014e7e:	68fb      	ldr	r3, [r7, #12]
 8014e80:	687a      	ldr	r2, [r7, #4]
 8014e82:	68b9      	ldr	r1, [r7, #8]
 8014e84:	4618      	mov	r0, r3
 8014e86:	f000 fb1f 	bl	80154c8 <_ZNSt16allocator_traitsISaIP9StatementEE10deallocateERS2_PS1_j>
      }
 8014e8a:	bf00      	nop
 8014e8c:	3710      	adds	r7, #16
 8014e8e:	46bd      	mov	sp, r7
 8014e90:	bd80      	pop	{r7, pc}

08014e92 <_ZNSt12_Vector_baseIP9StatementSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 8014e92:	b480      	push	{r7}
 8014e94:	b083      	sub	sp, #12
 8014e96:	af00      	add	r7, sp, #0
 8014e98:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 8014e9a:	687b      	ldr	r3, [r7, #4]
 8014e9c:	4618      	mov	r0, r3
 8014e9e:	370c      	adds	r7, #12
 8014ea0:	46bd      	mov	sp, r7
 8014ea2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014ea6:	4770      	bx	lr

08014ea8 <_ZSt4moveIRP9StatementEONSt16remove_referenceIT_E4typeEOS4_>:
    move(_Tp&& __t) noexcept
 8014ea8:	b480      	push	{r7}
 8014eaa:	b083      	sub	sp, #12
 8014eac:	af00      	add	r7, sp, #0
 8014eae:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 8014eb0:	687b      	ldr	r3, [r7, #4]
 8014eb2:	4618      	mov	r0, r3
 8014eb4:	370c      	adds	r7, #12
 8014eb6:	46bd      	mov	sp, r7
 8014eb8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014ebc:	4770      	bx	lr

08014ebe <_ZNSt6vectorIP9StatementSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>:
      vector<_Tp, _Alloc>::
 8014ebe:	b5b0      	push	{r4, r5, r7, lr}
 8014ec0:	b082      	sub	sp, #8
 8014ec2:	af00      	add	r7, sp, #0
 8014ec4:	6078      	str	r0, [r7, #4]
 8014ec6:	6039      	str	r1, [r7, #0]
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 8014ec8:	687b      	ldr	r3, [r7, #4]
 8014eca:	685a      	ldr	r2, [r3, #4]
 8014ecc:	687b      	ldr	r3, [r7, #4]
 8014ece:	689b      	ldr	r3, [r3, #8]
 8014ed0:	429a      	cmp	r2, r3
 8014ed2:	d011      	beq.n	8014ef8 <_ZNSt6vectorIP9StatementSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x3a>
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 8014ed4:	687c      	ldr	r4, [r7, #4]
 8014ed6:	687b      	ldr	r3, [r7, #4]
 8014ed8:	685d      	ldr	r5, [r3, #4]
 8014eda:	6838      	ldr	r0, [r7, #0]
 8014edc:	f000 fb03 	bl	80154e6 <_ZSt7forwardIP9StatementEOT_RNSt16remove_referenceIS2_E4typeE>
 8014ee0:	4603      	mov	r3, r0
 8014ee2:	461a      	mov	r2, r3
 8014ee4:	4629      	mov	r1, r5
 8014ee6:	4620      	mov	r0, r4
 8014ee8:	f000 fb08 	bl	80154fc <_ZNSt16allocator_traitsISaIP9StatementEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	    ++this->_M_impl._M_finish;
 8014eec:	687b      	ldr	r3, [r7, #4]
 8014eee:	685b      	ldr	r3, [r3, #4]
 8014ef0:	1d1a      	adds	r2, r3, #4
 8014ef2:	687b      	ldr	r3, [r7, #4]
 8014ef4:	605a      	str	r2, [r3, #4]
 8014ef6:	e00c      	b.n	8014f12 <_ZNSt6vectorIP9StatementSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x54>
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
 8014ef8:	6878      	ldr	r0, [r7, #4]
 8014efa:	f7ed fbd7 	bl	80026ac <_ZNSt6vectorIP9StatementSaIS1_EE3endEv>
 8014efe:	4604      	mov	r4, r0
 8014f00:	6838      	ldr	r0, [r7, #0]
 8014f02:	f000 faf0 	bl	80154e6 <_ZSt7forwardIP9StatementEOT_RNSt16remove_referenceIS2_E4typeE>
 8014f06:	4603      	mov	r3, r0
 8014f08:	461a      	mov	r2, r3
 8014f0a:	4621      	mov	r1, r4
 8014f0c:	6878      	ldr	r0, [r7, #4]
 8014f0e:	f000 fb09 	bl	8015524 <_ZNSt6vectorIP9StatementSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
	return back();
 8014f12:	6878      	ldr	r0, [r7, #4]
 8014f14:	f000 fb82 	bl	801561c <_ZNSt6vectorIP9StatementSaIS1_EE4backEv>
 8014f18:	4603      	mov	r3, r0
      }
 8014f1a:	4618      	mov	r0, r3
 8014f1c:	3708      	adds	r7, #8
 8014f1e:	46bd      	mov	sp, r7
 8014f20:	bdb0      	pop	{r4, r5, r7, pc}

08014f22 <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8014f22:	b480      	push	{r7}
 8014f24:	b083      	sub	sp, #12
 8014f26:	af00      	add	r7, sp, #0
 8014f28:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8014f2a:	687b      	ldr	r3, [r7, #4]
 8014f2c:	4618      	mov	r0, r3
 8014f2e:	370c      	adds	r7, #12
 8014f30:	46bd      	mov	sp, r7
 8014f32:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014f36:	4770      	bx	lr

08014f38 <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_JRS8_St17integral_constantIjLj0EEEENSt15__invoke_resultISB_JDpT0_EE4typeESC_DpOSJ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8014f38:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014f3c:	b084      	sub	sp, #16
 8014f3e:	af00      	add	r7, sp, #0
 8014f40:	60f8      	str	r0, [r7, #12]
 8014f42:	60b9      	str	r1, [r7, #8]
 8014f44:	607a      	str	r2, [r7, #4]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8014f46:	68f8      	ldr	r0, [r7, #12]
 8014f48:	f000 f879 	bl	801503e <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 8014f4c:	4604      	mov	r4, r0
 8014f4e:	68b8      	ldr	r0, [r7, #8]
 8014f50:	f7ef ff24 	bl	8004d9c <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 8014f54:	4605      	mov	r5, r0
 8014f56:	6878      	ldr	r0, [r7, #4]
 8014f58:	f7ef fe83 	bl	8004c62 <_ZSt7forwardISt17integral_constantIjLj0EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8014f5c:	4603      	mov	r3, r0
 8014f5e:	462a      	mov	r2, r5
 8014f60:	4621      	mov	r1, r4
 8014f62:	4630      	mov	r0, r6
 8014f64:	f000 fb75 	bl	8015652 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSA_EUlOT_T0_E_JRS9_St17integral_constantIjLj0EEEESC_St14__invoke_otherOSE_DpOT1_>
					std::forward<_Args>(__args)...);
 8014f68:	4643      	mov	r3, r8
    }
 8014f6a:	4618      	mov	r0, r3
 8014f6c:	3710      	adds	r7, #16
 8014f6e:	46bd      	mov	sp, r7
 8014f70:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08014f74 <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_JRiSt17integral_constantIjLj1EEEENSt15__invoke_resultISB_JDpT0_EE4typeESC_DpOSJ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8014f74:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014f78:	b084      	sub	sp, #16
 8014f7a:	af00      	add	r7, sp, #0
 8014f7c:	60f8      	str	r0, [r7, #12]
 8014f7e:	60b9      	str	r1, [r7, #8]
 8014f80:	607a      	str	r2, [r7, #4]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8014f82:	68f8      	ldr	r0, [r7, #12]
 8014f84:	f000 f85b 	bl	801503e <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 8014f88:	4604      	mov	r4, r0
 8014f8a:	68b8      	ldr	r0, [r7, #8]
 8014f8c:	f7ef fe5e 	bl	8004c4c <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 8014f90:	4605      	mov	r5, r0
 8014f92:	6878      	ldr	r0, [r7, #4]
 8014f94:	f7ef fe99 	bl	8004cca <_ZSt7forwardISt17integral_constantIjLj1EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8014f98:	4603      	mov	r3, r0
 8014f9a:	462a      	mov	r2, r5
 8014f9c:	4621      	mov	r1, r4
 8014f9e:	4630      	mov	r0, r6
 8014fa0:	f000 fb75 	bl	801568e <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSA_EUlOT_T0_E_JRiSt17integral_constantIjLj1EEEESC_St14__invoke_otherOSE_DpOT1_>
					std::forward<_Args>(__args)...);
 8014fa4:	4643      	mov	r3, r8
    }
 8014fa6:	4618      	mov	r0, r3
 8014fa8:	3710      	adds	r7, #16
 8014faa:	46bd      	mov	sp, r7
 8014fac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08014fb0 <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_JRfSt17integral_constantIjLj2EEEENSt15__invoke_resultISB_JDpT0_EE4typeESC_DpOSJ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8014fb0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014fb4:	b084      	sub	sp, #16
 8014fb6:	af00      	add	r7, sp, #0
 8014fb8:	60f8      	str	r0, [r7, #12]
 8014fba:	60b9      	str	r1, [r7, #8]
 8014fbc:	607a      	str	r2, [r7, #4]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8014fbe:	68f8      	ldr	r0, [r7, #12]
 8014fc0:	f000 f83d 	bl	801503e <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 8014fc4:	4604      	mov	r4, r0
 8014fc6:	68b8      	ldr	r0, [r7, #8]
 8014fc8:	f7ef fe74 	bl	8004cb4 <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 8014fcc:	4605      	mov	r5, r0
 8014fce:	6878      	ldr	r0, [r7, #4]
 8014fd0:	f7ef feaf 	bl	8004d32 <_ZSt7forwardISt17integral_constantIjLj2EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8014fd4:	4603      	mov	r3, r0
 8014fd6:	462a      	mov	r2, r5
 8014fd8:	4621      	mov	r1, r4
 8014fda:	4630      	mov	r0, r6
 8014fdc:	f000 fb75 	bl	80156ca <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSA_EUlOT_T0_E_JRfSt17integral_constantIjLj2EEEESC_St14__invoke_otherOSE_DpOT1_>
					std::forward<_Args>(__args)...);
 8014fe0:	4643      	mov	r3, r8
    }
 8014fe2:	4618      	mov	r0, r3
 8014fe4:	3710      	adds	r7, #16
 8014fe6:	46bd      	mov	sp, r7
 8014fe8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08014fec <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_JRbSt17integral_constantIjLj3EEEENSt15__invoke_resultISB_JDpT0_EE4typeESC_DpOSJ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8014fec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014ff0:	b084      	sub	sp, #16
 8014ff2:	af00      	add	r7, sp, #0
 8014ff4:	60f8      	str	r0, [r7, #12]
 8014ff6:	60b9      	str	r1, [r7, #8]
 8014ff8:	607a      	str	r2, [r7, #4]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8014ffa:	68f8      	ldr	r0, [r7, #12]
 8014ffc:	f000 f81f 	bl	801503e <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 8015000:	4604      	mov	r4, r0
 8015002:	68b8      	ldr	r0, [r7, #8]
 8015004:	f7ef fe8a 	bl	8004d1c <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
 8015008:	4605      	mov	r5, r0
 801500a:	6878      	ldr	r0, [r7, #4]
 801500c:	f7ef fed1 	bl	8004db2 <_ZSt7forwardISt17integral_constantIjLj3EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8015010:	4603      	mov	r3, r0
 8015012:	462a      	mov	r2, r5
 8015014:	4621      	mov	r1, r4
 8015016:	4630      	mov	r0, r6
 8015018:	f000 fb75 	bl	8015706 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSA_EUlOT_T0_E_JRbSt17integral_constantIjLj3EEEESC_St14__invoke_otherOSE_DpOT1_>
					std::forward<_Args>(__args)...);
 801501c:	4643      	mov	r3, r8
    }
 801501e:	4618      	mov	r0, r3
 8015020:	3710      	adds	r7, #16
 8015022:	46bd      	mov	sp, r7
 8015024:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08015028 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSA_EUlOT_T0_E_RSt7variantIJS9_ifbEEEJEE9_M_accessEv>:
      _M_access() const
 8015028:	b480      	push	{r7}
 801502a:	b083      	sub	sp, #12
 801502c:	af00      	add	r7, sp, #0
 801502e:	6078      	str	r0, [r7, #4]
      { return _M_data; }
 8015030:	687b      	ldr	r3, [r7, #4]
 8015032:	4618      	mov	r0, r3
 8015034:	370c      	adds	r7, #12
 8015036:	46bd      	mov	sp, r7
 8015038:	f85d 7b04 	ldr.w	r7, [sp], #4
 801503c:	4770      	bx	lr

0801503e <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801503e:	b480      	push	{r7}
 8015040:	b083      	sub	sp, #12
 8015042:	af00      	add	r7, sp, #0
 8015044:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8015046:	687b      	ldr	r3, [r7, #4]
 8015048:	4618      	mov	r0, r3
 801504a:	370c      	adds	r7, #12
 801504c:	46bd      	mov	sp, r7
 801504e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015052:	4770      	bx	lr

08015054 <_ZSt7forwardIP10ExpressionEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8015054:	b480      	push	{r7}
 8015056:	b083      	sub	sp, #12
 8015058:	af00      	add	r7, sp, #0
 801505a:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801505c:	687b      	ldr	r3, [r7, #4]
 801505e:	4618      	mov	r0, r3
 8015060:	370c      	adds	r7, #12
 8015062:	46bd      	mov	sp, r7
 8015064:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015068:	4770      	bx	lr

0801506a <_ZNSt16allocator_traitsISaIP10ExpressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 801506a:	b580      	push	{r7, lr}
 801506c:	b084      	sub	sp, #16
 801506e:	af00      	add	r7, sp, #0
 8015070:	60f8      	str	r0, [r7, #12]
 8015072:	60b9      	str	r1, [r7, #8]
 8015074:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 8015076:	6878      	ldr	r0, [r7, #4]
 8015078:	f7ff ffec 	bl	8015054 <_ZSt7forwardIP10ExpressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801507c:	4603      	mov	r3, r0
 801507e:	461a      	mov	r2, r3
 8015080:	68b9      	ldr	r1, [r7, #8]
 8015082:	68f8      	ldr	r0, [r7, #12]
 8015084:	f000 fb5d 	bl	8015742 <_ZN9__gnu_cxx13new_allocatorIP10ExpressionE9constructIS2_JS2_EEEvPT_DpOT0_>
 8015088:	bf00      	nop
 801508a:	3710      	adds	r7, #16
 801508c:	46bd      	mov	sp, r7
 801508e:	bd80      	pop	{r7, pc}

08015090 <_ZNSt6vectorIP10ExpressionSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 8015090:	b580      	push	{r7, lr}
 8015092:	b084      	sub	sp, #16
 8015094:	af00      	add	r7, sp, #0
 8015096:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_finish); }
 8015098:	687b      	ldr	r3, [r7, #4]
 801509a:	1d1a      	adds	r2, r3, #4
 801509c:	f107 030c 	add.w	r3, r7, #12
 80150a0:	4611      	mov	r1, r2
 80150a2:	4618      	mov	r0, r3
 80150a4:	f000 fb63 	bl	801576e <_ZN9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 80150a8:	68fb      	ldr	r3, [r7, #12]
 80150aa:	4618      	mov	r0, r3
 80150ac:	3710      	adds	r7, #16
 80150ae:	46bd      	mov	sp, r7
 80150b0:	bd80      	pop	{r7, pc}
	...

080150b4 <_ZNSt6vectorIP10ExpressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:

#if __cplusplus >= 201103L
  template<typename _Tp, typename _Alloc>
    template<typename... _Args>
      void
      vector<_Tp, _Alloc>::
 80150b4:	b5b0      	push	{r4, r5, r7, lr}
 80150b6:	b08c      	sub	sp, #48	; 0x30
 80150b8:	af00      	add	r7, sp, #0
 80150ba:	60f8      	str	r0, [r7, #12]
 80150bc:	60b9      	str	r1, [r7, #8]
 80150be:	607a      	str	r2, [r7, #4]
    void
    vector<_Tp, _Alloc>::
    _M_realloc_insert(iterator __position, const _Tp& __x)
#endif
    {
      const size_type __len =
 80150c0:	4a39      	ldr	r2, [pc, #228]	; (80151a8 <_ZNSt6vectorIP10ExpressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xf4>)
 80150c2:	2101      	movs	r1, #1
 80150c4:	68f8      	ldr	r0, [r7, #12]
 80150c6:	f000 fb62 	bl	801578e <_ZNKSt6vectorIP10ExpressionSaIS1_EE12_M_check_lenEjPKc>
 80150ca:	62f8      	str	r0, [r7, #44]	; 0x2c
	_M_check_len(size_type(1), "vector::_M_realloc_insert");
      pointer __old_start = this->_M_impl._M_start;
 80150cc:	68fb      	ldr	r3, [r7, #12]
 80150ce:	681b      	ldr	r3, [r3, #0]
 80150d0:	62bb      	str	r3, [r7, #40]	; 0x28
      pointer __old_finish = this->_M_impl._M_finish;
 80150d2:	68fb      	ldr	r3, [r7, #12]
 80150d4:	685b      	ldr	r3, [r3, #4]
 80150d6:	627b      	str	r3, [r7, #36]	; 0x24
      const size_type __elems_before = __position - begin();
 80150d8:	68f8      	ldr	r0, [r7, #12]
 80150da:	f000 fb9f 	bl	801581c <_ZNSt6vectorIP10ExpressionSaIS1_EE5beginEv>
 80150de:	4603      	mov	r3, r0
 80150e0:	617b      	str	r3, [r7, #20]
 80150e2:	f107 0214 	add.w	r2, r7, #20
 80150e6:	f107 0308 	add.w	r3, r7, #8
 80150ea:	4611      	mov	r1, r2
 80150ec:	4618      	mov	r0, r3
 80150ee:	f000 fba5 	bl	801583c <_ZN9__gnu_cxxmiIPP10ExpressionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
 80150f2:	4603      	mov	r3, r0
 80150f4:	623b      	str	r3, [r7, #32]
      pointer __new_start(this->_M_allocate(__len));
 80150f6:	68fb      	ldr	r3, [r7, #12]
 80150f8:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 80150fa:	4618      	mov	r0, r3
 80150fc:	f7f9 fc7d 	bl	800e9fa <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE11_M_allocateEj>
 8015100:	61f8      	str	r0, [r7, #28]
      pointer __new_finish(__new_start);
 8015102:	69fb      	ldr	r3, [r7, #28]
 8015104:	61bb      	str	r3, [r7, #24]
	  // The order of the three operations is dictated by the C++11
	  // case, where the moves could alter a new element belonging
	  // to the existing vector.  This is an issue only for callers
	  // taking the element by lvalue ref (see last bullet of C++11
	  // [res.on.arguments]).
	  _Alloc_traits::construct(this->_M_impl,
 8015106:	68fc      	ldr	r4, [r7, #12]
				   __new_start + __elems_before,
 8015108:	6a3b      	ldr	r3, [r7, #32]
 801510a:	009b      	lsls	r3, r3, #2
	  _Alloc_traits::construct(this->_M_impl,
 801510c:	69fa      	ldr	r2, [r7, #28]
 801510e:	18d5      	adds	r5, r2, r3
 8015110:	6878      	ldr	r0, [r7, #4]
 8015112:	f7ff ff9f 	bl	8015054 <_ZSt7forwardIP10ExpressionEOT_RNSt16remove_referenceIS2_E4typeE>
 8015116:	4603      	mov	r3, r0
 8015118:	461a      	mov	r2, r3
 801511a:	4629      	mov	r1, r5
 801511c:	4620      	mov	r0, r4
 801511e:	f7ff ffa4 	bl	801506a <_ZNSt16allocator_traitsISaIP10ExpressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
#if __cplusplus >= 201103L
				   std::forward<_Args>(__args)...);
#else
				   __x);
#endif
	  __new_finish = pointer();
 8015122:	2300      	movs	r3, #0
 8015124:	61bb      	str	r3, [r7, #24]

#if __cplusplus >= 201103L
	  if _GLIBCXX17_CONSTEXPR (_S_use_relocate())
	    {
	      __new_finish = _S_relocate(__old_start, __position.base(),
 8015126:	f107 0308 	add.w	r3, r7, #8
 801512a:	4618      	mov	r0, r3
 801512c:	f000 fbaf 	bl	801588e <_ZNK9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEE4baseEv>
 8015130:	4603      	mov	r3, r0
 8015132:	681c      	ldr	r4, [r3, #0]
					 __new_start, _M_get_Tp_allocator());
 8015134:	68fb      	ldr	r3, [r7, #12]
 8015136:	4618      	mov	r0, r3
 8015138:	f7f9 fa6b 	bl	800e612 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE19_M_get_Tp_allocatorEv>
 801513c:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__old_start, __position.base(),
 801513e:	69fa      	ldr	r2, [r7, #28]
 8015140:	4621      	mov	r1, r4
 8015142:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8015144:	f000 fb8f 	bl	8015866 <_ZNSt6vectorIP10ExpressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 8015148:	61b8      	str	r0, [r7, #24]

	      ++__new_finish;
 801514a:	69bb      	ldr	r3, [r7, #24]
 801514c:	3304      	adds	r3, #4
 801514e:	61bb      	str	r3, [r7, #24]

	      __new_finish = _S_relocate(__position.base(), __old_finish,
 8015150:	f107 0308 	add.w	r3, r7, #8
 8015154:	4618      	mov	r0, r3
 8015156:	f000 fb9a 	bl	801588e <_ZNK9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801515a:	4603      	mov	r3, r0
 801515c:	681c      	ldr	r4, [r3, #0]
					 __new_finish, _M_get_Tp_allocator());
 801515e:	68fb      	ldr	r3, [r7, #12]
 8015160:	4618      	mov	r0, r3
 8015162:	f7f9 fa56 	bl	800e612 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE19_M_get_Tp_allocatorEv>
 8015166:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 8015168:	69ba      	ldr	r2, [r7, #24]
 801516a:	6a79      	ldr	r1, [r7, #36]	; 0x24
 801516c:	4620      	mov	r0, r4
 801516e:	f000 fb7a 	bl	8015866 <_ZNSt6vectorIP10ExpressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 8015172:	61b8      	str	r0, [r7, #24]
#if __cplusplus >= 201103L
      if _GLIBCXX17_CONSTEXPR (!_S_use_relocate())
#endif
	std::_Destroy(__old_start, __old_finish, _M_get_Tp_allocator());
      _GLIBCXX_ASAN_ANNOTATE_REINIT;
      _M_deallocate(__old_start,
 8015174:	68f8      	ldr	r0, [r7, #12]
		    this->_M_impl._M_end_of_storage - __old_start);
 8015176:	68fb      	ldr	r3, [r7, #12]
 8015178:	689a      	ldr	r2, [r3, #8]
 801517a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801517c:	1ad3      	subs	r3, r2, r3
 801517e:	109b      	asrs	r3, r3, #2
      _M_deallocate(__old_start,
 8015180:	461a      	mov	r2, r3
 8015182:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8015184:	f7f9 fb90 	bl	800e8a8 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE13_M_deallocateEPS1_j>
      this->_M_impl._M_start = __new_start;
 8015188:	68fb      	ldr	r3, [r7, #12]
 801518a:	69fa      	ldr	r2, [r7, #28]
 801518c:	601a      	str	r2, [r3, #0]
      this->_M_impl._M_finish = __new_finish;
 801518e:	68fb      	ldr	r3, [r7, #12]
 8015190:	69ba      	ldr	r2, [r7, #24]
 8015192:	605a      	str	r2, [r3, #4]
      this->_M_impl._M_end_of_storage = __new_start + __len;
 8015194:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8015196:	009b      	lsls	r3, r3, #2
 8015198:	69fa      	ldr	r2, [r7, #28]
 801519a:	441a      	add	r2, r3
 801519c:	68fb      	ldr	r3, [r7, #12]
 801519e:	609a      	str	r2, [r3, #8]
    }
 80151a0:	bf00      	nop
 80151a2:	3730      	adds	r7, #48	; 0x30
 80151a4:	46bd      	mov	sp, r7
 80151a6:	bdb0      	pop	{r4, r5, r7, pc}
 80151a8:	08029a04 	.word	0x08029a04

080151ac <_ZNSt6vectorIP10ExpressionSaIS1_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
 80151ac:	b580      	push	{r7, lr}
 80151ae:	b084      	sub	sp, #16
 80151b0:	af00      	add	r7, sp, #0
 80151b2:	6078      	str	r0, [r7, #4]
	return *(end() - 1);
 80151b4:	6878      	ldr	r0, [r7, #4]
 80151b6:	f7ff ff6b 	bl	8015090 <_ZNSt6vectorIP10ExpressionSaIS1_EE3endEv>
 80151ba:	4603      	mov	r3, r0
 80151bc:	60fb      	str	r3, [r7, #12]
 80151be:	f107 030c 	add.w	r3, r7, #12
 80151c2:	2101      	movs	r1, #1
 80151c4:	4618      	mov	r0, r3
 80151c6:	f000 fb6d 	bl	80158a4 <_ZNK9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEEmiEi>
 80151ca:	4603      	mov	r3, r0
 80151cc:	60bb      	str	r3, [r7, #8]
 80151ce:	f107 0308 	add.w	r3, r7, #8
 80151d2:	4618      	mov	r0, r3
 80151d4:	f000 fb7f 	bl	80158d6 <_ZNK9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEEdeEv>
 80151d8:	4603      	mov	r3, r0
      }
 80151da:	4618      	mov	r0, r3
 80151dc:	3710      	adds	r7, #16
 80151de:	46bd      	mov	sp, r7
 80151e0:	bd80      	pop	{r7, pc}

080151e2 <_ZSt7forwardIP4BodyEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80151e2:	b480      	push	{r7}
 80151e4:	b083      	sub	sp, #12
 80151e6:	af00      	add	r7, sp, #0
 80151e8:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80151ea:	687b      	ldr	r3, [r7, #4]
 80151ec:	4618      	mov	r0, r3
 80151ee:	370c      	adds	r7, #12
 80151f0:	46bd      	mov	sp, r7
 80151f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80151f6:	4770      	bx	lr

080151f8 <_ZNSt16allocator_traitsISaIP4BodyEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 80151f8:	b580      	push	{r7, lr}
 80151fa:	b084      	sub	sp, #16
 80151fc:	af00      	add	r7, sp, #0
 80151fe:	60f8      	str	r0, [r7, #12]
 8015200:	60b9      	str	r1, [r7, #8]
 8015202:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 8015204:	6878      	ldr	r0, [r7, #4]
 8015206:	f7ff ffec 	bl	80151e2 <_ZSt7forwardIP4BodyEOT_RNSt16remove_referenceIS2_E4typeE>
 801520a:	4603      	mov	r3, r0
 801520c:	461a      	mov	r2, r3
 801520e:	68b9      	ldr	r1, [r7, #8]
 8015210:	68f8      	ldr	r0, [r7, #12]
 8015212:	f000 fb6c 	bl	80158ee <_ZN9__gnu_cxx13new_allocatorIP4BodyE9constructIS2_JS2_EEEvPT_DpOT0_>
 8015216:	bf00      	nop
 8015218:	3710      	adds	r7, #16
 801521a:	46bd      	mov	sp, r7
 801521c:	bd80      	pop	{r7, pc}
	...

08015220 <_ZNSt6vectorIP4BodySaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
      vector<_Tp, _Alloc>::
 8015220:	b5b0      	push	{r4, r5, r7, lr}
 8015222:	b08c      	sub	sp, #48	; 0x30
 8015224:	af00      	add	r7, sp, #0
 8015226:	60f8      	str	r0, [r7, #12]
 8015228:	60b9      	str	r1, [r7, #8]
 801522a:	607a      	str	r2, [r7, #4]
      const size_type __len =
 801522c:	4a39      	ldr	r2, [pc, #228]	; (8015314 <_ZNSt6vectorIP4BodySaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xf4>)
 801522e:	2101      	movs	r1, #1
 8015230:	68f8      	ldr	r0, [r7, #12]
 8015232:	f000 fb72 	bl	801591a <_ZNKSt6vectorIP4BodySaIS1_EE12_M_check_lenEjPKc>
 8015236:	62f8      	str	r0, [r7, #44]	; 0x2c
      pointer __old_start = this->_M_impl._M_start;
 8015238:	68fb      	ldr	r3, [r7, #12]
 801523a:	681b      	ldr	r3, [r3, #0]
 801523c:	62bb      	str	r3, [r7, #40]	; 0x28
      pointer __old_finish = this->_M_impl._M_finish;
 801523e:	68fb      	ldr	r3, [r7, #12]
 8015240:	685b      	ldr	r3, [r3, #4]
 8015242:	627b      	str	r3, [r7, #36]	; 0x24
      const size_type __elems_before = __position - begin();
 8015244:	68f8      	ldr	r0, [r7, #12]
 8015246:	f000 fbaf 	bl	80159a8 <_ZNSt6vectorIP4BodySaIS1_EE5beginEv>
 801524a:	4603      	mov	r3, r0
 801524c:	617b      	str	r3, [r7, #20]
 801524e:	f107 0214 	add.w	r2, r7, #20
 8015252:	f107 0308 	add.w	r3, r7, #8
 8015256:	4611      	mov	r1, r2
 8015258:	4618      	mov	r0, r3
 801525a:	f000 fbb5 	bl	80159c8 <_ZN9__gnu_cxxmiIPP4BodySt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
 801525e:	4603      	mov	r3, r0
 8015260:	623b      	str	r3, [r7, #32]
      pointer __new_start(this->_M_allocate(__len));
 8015262:	68fb      	ldr	r3, [r7, #12]
 8015264:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8015266:	4618      	mov	r0, r3
 8015268:	f000 fbc3 	bl	80159f2 <_ZNSt12_Vector_baseIP4BodySaIS1_EE11_M_allocateEj>
 801526c:	61f8      	str	r0, [r7, #28]
      pointer __new_finish(__new_start);
 801526e:	69fb      	ldr	r3, [r7, #28]
 8015270:	61bb      	str	r3, [r7, #24]
	  _Alloc_traits::construct(this->_M_impl,
 8015272:	68fc      	ldr	r4, [r7, #12]
				   __new_start + __elems_before,
 8015274:	6a3b      	ldr	r3, [r7, #32]
 8015276:	009b      	lsls	r3, r3, #2
	  _Alloc_traits::construct(this->_M_impl,
 8015278:	69fa      	ldr	r2, [r7, #28]
 801527a:	18d5      	adds	r5, r2, r3
 801527c:	6878      	ldr	r0, [r7, #4]
 801527e:	f7ff ffb0 	bl	80151e2 <_ZSt7forwardIP4BodyEOT_RNSt16remove_referenceIS2_E4typeE>
 8015282:	4603      	mov	r3, r0
 8015284:	461a      	mov	r2, r3
 8015286:	4629      	mov	r1, r5
 8015288:	4620      	mov	r0, r4
 801528a:	f7ff ffb5 	bl	80151f8 <_ZNSt16allocator_traitsISaIP4BodyEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	  __new_finish = pointer();
 801528e:	2300      	movs	r3, #0
 8015290:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__old_start, __position.base(),
 8015292:	f107 0308 	add.w	r3, r7, #8
 8015296:	4618      	mov	r0, r3
 8015298:	f000 fbd3 	bl	8015a42 <_ZNK9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEE4baseEv>
 801529c:	4603      	mov	r3, r0
 801529e:	681c      	ldr	r4, [r3, #0]
					 __new_start, _M_get_Tp_allocator());
 80152a0:	68fb      	ldr	r3, [r7, #12]
 80152a2:	4618      	mov	r0, r3
 80152a4:	f7ff fcd3 	bl	8014c4e <_ZNSt12_Vector_baseIP4BodySaIS1_EE19_M_get_Tp_allocatorEv>
 80152a8:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__old_start, __position.base(),
 80152aa:	69fa      	ldr	r2, [r7, #28]
 80152ac:	4621      	mov	r1, r4
 80152ae:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 80152b0:	f000 fbb3 	bl	8015a1a <_ZNSt6vectorIP4BodySaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 80152b4:	61b8      	str	r0, [r7, #24]
	      ++__new_finish;
 80152b6:	69bb      	ldr	r3, [r7, #24]
 80152b8:	3304      	adds	r3, #4
 80152ba:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 80152bc:	f107 0308 	add.w	r3, r7, #8
 80152c0:	4618      	mov	r0, r3
 80152c2:	f000 fbbe 	bl	8015a42 <_ZNK9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEE4baseEv>
 80152c6:	4603      	mov	r3, r0
 80152c8:	681c      	ldr	r4, [r3, #0]
					 __new_finish, _M_get_Tp_allocator());
 80152ca:	68fb      	ldr	r3, [r7, #12]
 80152cc:	4618      	mov	r0, r3
 80152ce:	f7ff fcbe 	bl	8014c4e <_ZNSt12_Vector_baseIP4BodySaIS1_EE19_M_get_Tp_allocatorEv>
 80152d2:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 80152d4:	69ba      	ldr	r2, [r7, #24]
 80152d6:	6a79      	ldr	r1, [r7, #36]	; 0x24
 80152d8:	4620      	mov	r0, r4
 80152da:	f000 fb9e 	bl	8015a1a <_ZNSt6vectorIP4BodySaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 80152de:	61b8      	str	r0, [r7, #24]
      _M_deallocate(__old_start,
 80152e0:	68f8      	ldr	r0, [r7, #12]
		    this->_M_impl._M_end_of_storage - __old_start);
 80152e2:	68fb      	ldr	r3, [r7, #12]
 80152e4:	689a      	ldr	r2, [r3, #8]
 80152e6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80152e8:	1ad3      	subs	r3, r2, r3
 80152ea:	109b      	asrs	r3, r3, #2
      _M_deallocate(__old_start,
 80152ec:	461a      	mov	r2, r3
 80152ee:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 80152f0:	f7ff fc9a 	bl	8014c28 <_ZNSt12_Vector_baseIP4BodySaIS1_EE13_M_deallocateEPS1_j>
      this->_M_impl._M_start = __new_start;
 80152f4:	68fb      	ldr	r3, [r7, #12]
 80152f6:	69fa      	ldr	r2, [r7, #28]
 80152f8:	601a      	str	r2, [r3, #0]
      this->_M_impl._M_finish = __new_finish;
 80152fa:	68fb      	ldr	r3, [r7, #12]
 80152fc:	69ba      	ldr	r2, [r7, #24]
 80152fe:	605a      	str	r2, [r3, #4]
      this->_M_impl._M_end_of_storage = __new_start + __len;
 8015300:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8015302:	009b      	lsls	r3, r3, #2
 8015304:	69fa      	ldr	r2, [r7, #28]
 8015306:	441a      	add	r2, r3
 8015308:	68fb      	ldr	r3, [r7, #12]
 801530a:	609a      	str	r2, [r3, #8]
    }
 801530c:	bf00      	nop
 801530e:	3730      	adds	r7, #48	; 0x30
 8015310:	46bd      	mov	sp, r7
 8015312:	bdb0      	pop	{r4, r5, r7, pc}
 8015314:	08029a04 	.word	0x08029a04

08015318 <_ZN9__gnu_cxx13new_allocatorIP10ExpressionEC1Ev>:
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 8015318:	b480      	push	{r7}
 801531a:	b083      	sub	sp, #12
 801531c:	af00      	add	r7, sp, #0
 801531e:	6078      	str	r0, [r7, #4]
 8015320:	687b      	ldr	r3, [r7, #4]
 8015322:	4618      	mov	r0, r3
 8015324:	370c      	adds	r7, #12
 8015326:	46bd      	mov	sp, r7
 8015328:	f85d 7b04 	ldr.w	r7, [sp], #4
 801532c:	4770      	bx	lr

0801532e <_ZN9__gnu_cxx13new_allocatorIP4BodyEC1Ev>:
 801532e:	b480      	push	{r7}
 8015330:	b083      	sub	sp, #12
 8015332:	af00      	add	r7, sp, #0
 8015334:	6078      	str	r0, [r7, #4]
 8015336:	687b      	ldr	r3, [r7, #4]
 8015338:	4618      	mov	r0, r3
 801533a:	370c      	adds	r7, #12
 801533c:	46bd      	mov	sp, r7
 801533e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015342:	4770      	bx	lr

08015344 <_ZNSt16allocator_traitsISaIP4BodyEE10deallocateERS2_PS1_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 8015344:	b580      	push	{r7, lr}
 8015346:	b084      	sub	sp, #16
 8015348:	af00      	add	r7, sp, #0
 801534a:	60f8      	str	r0, [r7, #12]
 801534c:	60b9      	str	r1, [r7, #8]
 801534e:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 8015350:	687a      	ldr	r2, [r7, #4]
 8015352:	68b9      	ldr	r1, [r7, #8]
 8015354:	68f8      	ldr	r0, [r7, #12]
 8015356:	f000 fb7f 	bl	8015a58 <_ZN9__gnu_cxx13new_allocatorIP4BodyE10deallocateEPS2_j>
 801535a:	bf00      	nop
 801535c:	3710      	adds	r7, #16
 801535e:	46bd      	mov	sp, r7
 8015360:	bd80      	pop	{r7, pc}

08015362 <_ZNSt8__detail9__variant16_Variant_storageILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE8_M_resetEv>:
      void _M_reset()
 8015362:	b480      	push	{r7}
 8015364:	b083      	sub	sp, #12
 8015366:	af00      	add	r7, sp, #0
 8015368:	6078      	str	r0, [r7, #4]
      { _M_index = variant_npos; }
 801536a:	687b      	ldr	r3, [r7, #4]
 801536c:	22ff      	movs	r2, #255	; 0xff
 801536e:	711a      	strb	r2, [r3, #4]
 8015370:	bf00      	nop
 8015372:	370c      	adds	r7, #12
 8015374:	46bd      	mov	sp, r7
 8015376:	f85d 7b04 	ldr.w	r7, [sp], #4
 801537a:	4770      	bx	lr

0801537c <_ZSt28__variant_construct_by_indexILj1ESt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEJS4_EEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 801537c:	b590      	push	{r4, r7, lr}
 801537e:	b085      	sub	sp, #20
 8015380:	af00      	add	r7, sp, #0
 8015382:	6078      	str	r0, [r7, #4]
 8015384:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 8015386:	687b      	ldr	r3, [r7, #4]
 8015388:	2201      	movs	r2, #1
 801538a:	711a      	strb	r2, [r3, #4]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 801538c:	6878      	ldr	r0, [r7, #4]
 801538e:	f7ee fbfa 	bl	8003b86 <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>
 8015392:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 8015394:	6838      	ldr	r0, [r7, #0]
 8015396:	f7ff fc65 	bl	8014c64 <_ZSt7forwardIP13Function_callEOT_RNSt16remove_referenceIS2_E4typeE>
 801539a:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 801539c:	681c      	ldr	r4, [r3, #0]
 801539e:	68f8      	ldr	r0, [r7, #12]
 80153a0:	f000 fb66 	bl	8015a70 <_ZSt9addressofIP13Function_callEPT_RS2_>
 80153a4:	4603      	mov	r3, r0
 80153a6:	4619      	mov	r1, r3
 80153a8:	2004      	movs	r0, #4
 80153aa:	f7eb fe56 	bl	800105a <_ZnwjPv>
 80153ae:	4603      	mov	r3, r0
 80153b0:	601c      	str	r4, [r3, #0]
    }
 80153b2:	bf00      	nop
 80153b4:	3714      	adds	r7, #20
 80153b6:	46bd      	mov	sp, r7
 80153b8:	bd90      	pop	{r4, r7, pc}

080153ba <_ZSt28__variant_construct_by_indexILj0ESt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEJS2_EEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 80153ba:	b590      	push	{r4, r7, lr}
 80153bc:	b085      	sub	sp, #20
 80153be:	af00      	add	r7, sp, #0
 80153c0:	6078      	str	r0, [r7, #4]
 80153c2:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 80153c4:	687b      	ldr	r3, [r7, #4]
 80153c6:	2200      	movs	r2, #0
 80153c8:	711a      	strb	r2, [r3, #4]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 80153ca:	6878      	ldr	r0, [r7, #4]
 80153cc:	f7ee fb8a 	bl	8003ae4 <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>
 80153d0:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 80153d2:	6838      	ldr	r0, [r7, #0]
 80153d4:	f7ff fc6a 	bl	8014cac <_ZSt7forwardIP10AssignmentEOT_RNSt16remove_referenceIS2_E4typeE>
 80153d8:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 80153da:	681c      	ldr	r4, [r3, #0]
 80153dc:	68f8      	ldr	r0, [r7, #12]
 80153de:	f000 fb53 	bl	8015a88 <_ZSt9addressofIP10AssignmentEPT_RS2_>
 80153e2:	4603      	mov	r3, r0
 80153e4:	4619      	mov	r1, r3
 80153e6:	2004      	movs	r0, #4
 80153e8:	f7eb fe37 	bl	800105a <_ZnwjPv>
 80153ec:	4603      	mov	r3, r0
 80153ee:	601c      	str	r4, [r3, #0]
    }
 80153f0:	bf00      	nop
 80153f2:	3714      	adds	r7, #20
 80153f4:	46bd      	mov	sp, r7
 80153f6:	bd90      	pop	{r4, r7, pc}

080153f8 <_ZSt28__variant_construct_by_indexILj2ESt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEJS6_EEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 80153f8:	b590      	push	{r4, r7, lr}
 80153fa:	b085      	sub	sp, #20
 80153fc:	af00      	add	r7, sp, #0
 80153fe:	6078      	str	r0, [r7, #4]
 8015400:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 8015402:	687b      	ldr	r3, [r7, #4]
 8015404:	2202      	movs	r2, #2
 8015406:	711a      	strb	r2, [r3, #4]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 8015408:	6878      	ldr	r0, [r7, #4]
 801540a:	f7ee fc1e 	bl	8003c4a <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>
 801540e:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 8015410:	6838      	ldr	r0, [r7, #0]
 8015412:	f7ff fc6f 	bl	8014cf4 <_ZSt7forwardIP11Method_callEOT_RNSt16remove_referenceIS2_E4typeE>
 8015416:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 8015418:	681c      	ldr	r4, [r3, #0]
 801541a:	68f8      	ldr	r0, [r7, #12]
 801541c:	f000 fb40 	bl	8015aa0 <_ZSt9addressofIP11Method_callEPT_RS2_>
 8015420:	4603      	mov	r3, r0
 8015422:	4619      	mov	r1, r3
 8015424:	2004      	movs	r0, #4
 8015426:	f7eb fe18 	bl	800105a <_ZnwjPv>
 801542a:	4603      	mov	r3, r0
 801542c:	601c      	str	r4, [r3, #0]
    }
 801542e:	bf00      	nop
 8015430:	3714      	adds	r7, #20
 8015432:	46bd      	mov	sp, r7
 8015434:	bd90      	pop	{r4, r7, pc}

08015436 <_ZSt28__variant_construct_by_indexILj3ESt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEJS8_EEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 8015436:	b590      	push	{r4, r7, lr}
 8015438:	b085      	sub	sp, #20
 801543a:	af00      	add	r7, sp, #0
 801543c:	6078      	str	r0, [r7, #4]
 801543e:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 8015440:	687b      	ldr	r3, [r7, #4]
 8015442:	2203      	movs	r2, #3
 8015444:	711a      	strb	r2, [r3, #4]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 8015446:	6878      	ldr	r0, [r7, #4]
 8015448:	f7ee fc73 	bl	8003d32 <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>
 801544c:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 801544e:	6838      	ldr	r0, [r7, #0]
 8015450:	f7ff fca4 	bl	8014d9c <_ZSt7forwardIP15While_statementEOT_RNSt16remove_referenceIS2_E4typeE>
 8015454:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 8015456:	681c      	ldr	r4, [r3, #0]
 8015458:	68f8      	ldr	r0, [r7, #12]
 801545a:	f000 fb2d 	bl	8015ab8 <_ZSt9addressofIP15While_statementEPT_RS2_>
 801545e:	4603      	mov	r3, r0
 8015460:	4619      	mov	r1, r3
 8015462:	2004      	movs	r0, #4
 8015464:	f7eb fdf9 	bl	800105a <_ZnwjPv>
 8015468:	4603      	mov	r3, r0
 801546a:	601c      	str	r4, [r3, #0]
    }
 801546c:	bf00      	nop
 801546e:	3714      	adds	r7, #20
 8015470:	46bd      	mov	sp, r7
 8015472:	bd90      	pop	{r4, r7, pc}

08015474 <_ZSt28__variant_construct_by_indexILj4ESt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEJSA_EEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 8015474:	b590      	push	{r4, r7, lr}
 8015476:	b085      	sub	sp, #20
 8015478:	af00      	add	r7, sp, #0
 801547a:	6078      	str	r0, [r7, #4]
 801547c:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 801547e:	687b      	ldr	r3, [r7, #4]
 8015480:	2204      	movs	r2, #4
 8015482:	711a      	strb	r2, [r3, #4]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 8015484:	6878      	ldr	r0, [r7, #4]
 8015486:	f7ee fcda 	bl	8003e3e <_ZNSt8__detail9__variant5__getILj4ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>
 801548a:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 801548c:	6838      	ldr	r0, [r7, #0]
 801548e:	f7ff fca9 	bl	8014de4 <_ZSt7forwardIP12If_statementEOT_RNSt16remove_referenceIS2_E4typeE>
 8015492:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 8015494:	681c      	ldr	r4, [r3, #0]
 8015496:	68f8      	ldr	r0, [r7, #12]
 8015498:	f000 fb1a 	bl	8015ad0 <_ZSt9addressofIP12If_statementEPT_RS2_>
 801549c:	4603      	mov	r3, r0
 801549e:	4619      	mov	r1, r3
 80154a0:	2004      	movs	r0, #4
 80154a2:	f7eb fdda 	bl	800105a <_ZnwjPv>
 80154a6:	4603      	mov	r3, r0
 80154a8:	601c      	str	r4, [r3, #0]
    }
 80154aa:	bf00      	nop
 80154ac:	3714      	adds	r7, #20
 80154ae:	46bd      	mov	sp, r7
 80154b0:	bd90      	pop	{r4, r7, pc}

080154b2 <_ZN9__gnu_cxx13new_allocatorIP9StatementEC1Ev>:
 80154b2:	b480      	push	{r7}
 80154b4:	b083      	sub	sp, #12
 80154b6:	af00      	add	r7, sp, #0
 80154b8:	6078      	str	r0, [r7, #4]
 80154ba:	687b      	ldr	r3, [r7, #4]
 80154bc:	4618      	mov	r0, r3
 80154be:	370c      	adds	r7, #12
 80154c0:	46bd      	mov	sp, r7
 80154c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80154c6:	4770      	bx	lr

080154c8 <_ZNSt16allocator_traitsISaIP9StatementEE10deallocateERS2_PS1_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 80154c8:	b580      	push	{r7, lr}
 80154ca:	b084      	sub	sp, #16
 80154cc:	af00      	add	r7, sp, #0
 80154ce:	60f8      	str	r0, [r7, #12]
 80154d0:	60b9      	str	r1, [r7, #8]
 80154d2:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 80154d4:	687a      	ldr	r2, [r7, #4]
 80154d6:	68b9      	ldr	r1, [r7, #8]
 80154d8:	68f8      	ldr	r0, [r7, #12]
 80154da:	f000 fb05 	bl	8015ae8 <_ZN9__gnu_cxx13new_allocatorIP9StatementE10deallocateEPS2_j>
 80154de:	bf00      	nop
 80154e0:	3710      	adds	r7, #16
 80154e2:	46bd      	mov	sp, r7
 80154e4:	bd80      	pop	{r7, pc}

080154e6 <_ZSt7forwardIP9StatementEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80154e6:	b480      	push	{r7}
 80154e8:	b083      	sub	sp, #12
 80154ea:	af00      	add	r7, sp, #0
 80154ec:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80154ee:	687b      	ldr	r3, [r7, #4]
 80154f0:	4618      	mov	r0, r3
 80154f2:	370c      	adds	r7, #12
 80154f4:	46bd      	mov	sp, r7
 80154f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80154fa:	4770      	bx	lr

080154fc <_ZNSt16allocator_traitsISaIP9StatementEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 80154fc:	b580      	push	{r7, lr}
 80154fe:	b084      	sub	sp, #16
 8015500:	af00      	add	r7, sp, #0
 8015502:	60f8      	str	r0, [r7, #12]
 8015504:	60b9      	str	r1, [r7, #8]
 8015506:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 8015508:	6878      	ldr	r0, [r7, #4]
 801550a:	f7ff ffec 	bl	80154e6 <_ZSt7forwardIP9StatementEOT_RNSt16remove_referenceIS2_E4typeE>
 801550e:	4603      	mov	r3, r0
 8015510:	461a      	mov	r2, r3
 8015512:	68b9      	ldr	r1, [r7, #8]
 8015514:	68f8      	ldr	r0, [r7, #12]
 8015516:	f000 faf3 	bl	8015b00 <_ZN9__gnu_cxx13new_allocatorIP9StatementE9constructIS2_JS2_EEEvPT_DpOT0_>
 801551a:	bf00      	nop
 801551c:	3710      	adds	r7, #16
 801551e:	46bd      	mov	sp, r7
 8015520:	bd80      	pop	{r7, pc}
	...

08015524 <_ZNSt6vectorIP9StatementSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
      vector<_Tp, _Alloc>::
 8015524:	b5b0      	push	{r4, r5, r7, lr}
 8015526:	b08c      	sub	sp, #48	; 0x30
 8015528:	af00      	add	r7, sp, #0
 801552a:	60f8      	str	r0, [r7, #12]
 801552c:	60b9      	str	r1, [r7, #8]
 801552e:	607a      	str	r2, [r7, #4]
      const size_type __len =
 8015530:	4a39      	ldr	r2, [pc, #228]	; (8015618 <_ZNSt6vectorIP9StatementSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xf4>)
 8015532:	2101      	movs	r1, #1
 8015534:	68f8      	ldr	r0, [r7, #12]
 8015536:	f000 faf9 	bl	8015b2c <_ZNKSt6vectorIP9StatementSaIS1_EE12_M_check_lenEjPKc>
 801553a:	62f8      	str	r0, [r7, #44]	; 0x2c
      pointer __old_start = this->_M_impl._M_start;
 801553c:	68fb      	ldr	r3, [r7, #12]
 801553e:	681b      	ldr	r3, [r3, #0]
 8015540:	62bb      	str	r3, [r7, #40]	; 0x28
      pointer __old_finish = this->_M_impl._M_finish;
 8015542:	68fb      	ldr	r3, [r7, #12]
 8015544:	685b      	ldr	r3, [r3, #4]
 8015546:	627b      	str	r3, [r7, #36]	; 0x24
      const size_type __elems_before = __position - begin();
 8015548:	68f8      	ldr	r0, [r7, #12]
 801554a:	f7ed f89f 	bl	800268c <_ZNSt6vectorIP9StatementSaIS1_EE5beginEv>
 801554e:	4603      	mov	r3, r0
 8015550:	617b      	str	r3, [r7, #20]
 8015552:	f107 0214 	add.w	r2, r7, #20
 8015556:	f107 0308 	add.w	r3, r7, #8
 801555a:	4611      	mov	r1, r2
 801555c:	4618      	mov	r0, r3
 801555e:	f000 fb2c 	bl	8015bba <_ZN9__gnu_cxxmiIPP9StatementSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
 8015562:	4603      	mov	r3, r0
 8015564:	623b      	str	r3, [r7, #32]
      pointer __new_start(this->_M_allocate(__len));
 8015566:	68fb      	ldr	r3, [r7, #12]
 8015568:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 801556a:	4618      	mov	r0, r3
 801556c:	f000 fb3a 	bl	8015be4 <_ZNSt12_Vector_baseIP9StatementSaIS1_EE11_M_allocateEj>
 8015570:	61f8      	str	r0, [r7, #28]
      pointer __new_finish(__new_start);
 8015572:	69fb      	ldr	r3, [r7, #28]
 8015574:	61bb      	str	r3, [r7, #24]
	  _Alloc_traits::construct(this->_M_impl,
 8015576:	68fc      	ldr	r4, [r7, #12]
				   __new_start + __elems_before,
 8015578:	6a3b      	ldr	r3, [r7, #32]
 801557a:	009b      	lsls	r3, r3, #2
	  _Alloc_traits::construct(this->_M_impl,
 801557c:	69fa      	ldr	r2, [r7, #28]
 801557e:	18d5      	adds	r5, r2, r3
 8015580:	6878      	ldr	r0, [r7, #4]
 8015582:	f7ff ffb0 	bl	80154e6 <_ZSt7forwardIP9StatementEOT_RNSt16remove_referenceIS2_E4typeE>
 8015586:	4603      	mov	r3, r0
 8015588:	461a      	mov	r2, r3
 801558a:	4629      	mov	r1, r5
 801558c:	4620      	mov	r0, r4
 801558e:	f7ff ffb5 	bl	80154fc <_ZNSt16allocator_traitsISaIP9StatementEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	  __new_finish = pointer();
 8015592:	2300      	movs	r3, #0
 8015594:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__old_start, __position.base(),
 8015596:	f107 0308 	add.w	r3, r7, #8
 801559a:	4618      	mov	r0, r3
 801559c:	f7ee fa73 	bl	8003a86 <_ZNK9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEE4baseEv>
 80155a0:	4603      	mov	r3, r0
 80155a2:	681c      	ldr	r4, [r3, #0]
					 __new_start, _M_get_Tp_allocator());
 80155a4:	68fb      	ldr	r3, [r7, #12]
 80155a6:	4618      	mov	r0, r3
 80155a8:	f7ff fc73 	bl	8014e92 <_ZNSt12_Vector_baseIP9StatementSaIS1_EE19_M_get_Tp_allocatorEv>
 80155ac:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__old_start, __position.base(),
 80155ae:	69fa      	ldr	r2, [r7, #28]
 80155b0:	4621      	mov	r1, r4
 80155b2:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 80155b4:	f000 fb2a 	bl	8015c0c <_ZNSt6vectorIP9StatementSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 80155b8:	61b8      	str	r0, [r7, #24]
	      ++__new_finish;
 80155ba:	69bb      	ldr	r3, [r7, #24]
 80155bc:	3304      	adds	r3, #4
 80155be:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 80155c0:	f107 0308 	add.w	r3, r7, #8
 80155c4:	4618      	mov	r0, r3
 80155c6:	f7ee fa5e 	bl	8003a86 <_ZNK9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEE4baseEv>
 80155ca:	4603      	mov	r3, r0
 80155cc:	681c      	ldr	r4, [r3, #0]
					 __new_finish, _M_get_Tp_allocator());
 80155ce:	68fb      	ldr	r3, [r7, #12]
 80155d0:	4618      	mov	r0, r3
 80155d2:	f7ff fc5e 	bl	8014e92 <_ZNSt12_Vector_baseIP9StatementSaIS1_EE19_M_get_Tp_allocatorEv>
 80155d6:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 80155d8:	69ba      	ldr	r2, [r7, #24]
 80155da:	6a79      	ldr	r1, [r7, #36]	; 0x24
 80155dc:	4620      	mov	r0, r4
 80155de:	f000 fb15 	bl	8015c0c <_ZNSt6vectorIP9StatementSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 80155e2:	61b8      	str	r0, [r7, #24]
      _M_deallocate(__old_start,
 80155e4:	68f8      	ldr	r0, [r7, #12]
		    this->_M_impl._M_end_of_storage - __old_start);
 80155e6:	68fb      	ldr	r3, [r7, #12]
 80155e8:	689a      	ldr	r2, [r3, #8]
 80155ea:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80155ec:	1ad3      	subs	r3, r2, r3
 80155ee:	109b      	asrs	r3, r3, #2
      _M_deallocate(__old_start,
 80155f0:	461a      	mov	r2, r3
 80155f2:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 80155f4:	f7ff fc3a 	bl	8014e6c <_ZNSt12_Vector_baseIP9StatementSaIS1_EE13_M_deallocateEPS1_j>
      this->_M_impl._M_start = __new_start;
 80155f8:	68fb      	ldr	r3, [r7, #12]
 80155fa:	69fa      	ldr	r2, [r7, #28]
 80155fc:	601a      	str	r2, [r3, #0]
      this->_M_impl._M_finish = __new_finish;
 80155fe:	68fb      	ldr	r3, [r7, #12]
 8015600:	69ba      	ldr	r2, [r7, #24]
 8015602:	605a      	str	r2, [r3, #4]
      this->_M_impl._M_end_of_storage = __new_start + __len;
 8015604:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8015606:	009b      	lsls	r3, r3, #2
 8015608:	69fa      	ldr	r2, [r7, #28]
 801560a:	441a      	add	r2, r3
 801560c:	68fb      	ldr	r3, [r7, #12]
 801560e:	609a      	str	r2, [r3, #8]
    }
 8015610:	bf00      	nop
 8015612:	3730      	adds	r7, #48	; 0x30
 8015614:	46bd      	mov	sp, r7
 8015616:	bdb0      	pop	{r4, r5, r7, pc}
 8015618:	08029a04 	.word	0x08029a04

0801561c <_ZNSt6vectorIP9StatementSaIS1_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
 801561c:	b580      	push	{r7, lr}
 801561e:	b084      	sub	sp, #16
 8015620:	af00      	add	r7, sp, #0
 8015622:	6078      	str	r0, [r7, #4]
	return *(end() - 1);
 8015624:	6878      	ldr	r0, [r7, #4]
 8015626:	f7ed f841 	bl	80026ac <_ZNSt6vectorIP9StatementSaIS1_EE3endEv>
 801562a:	4603      	mov	r3, r0
 801562c:	60fb      	str	r3, [r7, #12]
 801562e:	f107 030c 	add.w	r3, r7, #12
 8015632:	2101      	movs	r1, #1
 8015634:	4618      	mov	r0, r3
 8015636:	f000 fafd 	bl	8015c34 <_ZNK9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEEmiEi>
 801563a:	4603      	mov	r3, r0
 801563c:	60bb      	str	r3, [r7, #8]
 801563e:	f107 0308 	add.w	r3, r7, #8
 8015642:	4618      	mov	r0, r3
 8015644:	f7ed f86b 	bl	800271e <_ZNK9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEEdeEv>
 8015648:	4603      	mov	r3, r0
      }
 801564a:	4618      	mov	r0, r3
 801564c:	3710      	adds	r7, #16
 801564e:	46bd      	mov	sp, r7
 8015650:	bd80      	pop	{r7, pc}

08015652 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSA_EUlOT_T0_E_JRS9_St17integral_constantIjLj0EEEESC_St14__invoke_otherOSE_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8015652:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015656:	b084      	sub	sp, #16
 8015658:	af00      	add	r7, sp, #0
 801565a:	7338      	strb	r0, [r7, #12]
 801565c:	60b9      	str	r1, [r7, #8]
 801565e:	607a      	str	r2, [r7, #4]
 8015660:	603b      	str	r3, [r7, #0]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8015662:	68b8      	ldr	r0, [r7, #8]
 8015664:	f7ff fceb 	bl	801503e <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 8015668:	4604      	mov	r4, r0
 801566a:	6878      	ldr	r0, [r7, #4]
 801566c:	f7ef fb96 	bl	8004d9c <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 8015670:	4605      	mov	r5, r0
 8015672:	6838      	ldr	r0, [r7, #0]
 8015674:	f7ef faf5 	bl	8004c62 <_ZSt7forwardISt17integral_constantIjLj0EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8015678:	4632      	mov	r2, r6
 801567a:	4629      	mov	r1, r5
 801567c:	4620      	mov	r0, r4
 801567e:	f000 faf2 	bl	8015c66 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRS7_St17integral_constantIjLj0EEEENS0_20__variant_idx_cookieESB_SC_>
 8015682:	4643      	mov	r3, r8
 8015684:	4618      	mov	r0, r3
 8015686:	3710      	adds	r7, #16
 8015688:	46bd      	mov	sp, r7
 801568a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801568e <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSA_EUlOT_T0_E_JRiSt17integral_constantIjLj1EEEESC_St14__invoke_otherOSE_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 801568e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015692:	b084      	sub	sp, #16
 8015694:	af00      	add	r7, sp, #0
 8015696:	7338      	strb	r0, [r7, #12]
 8015698:	60b9      	str	r1, [r7, #8]
 801569a:	607a      	str	r2, [r7, #4]
 801569c:	603b      	str	r3, [r7, #0]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 801569e:	68b8      	ldr	r0, [r7, #8]
 80156a0:	f7ff fccd 	bl	801503e <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 80156a4:	4604      	mov	r4, r0
 80156a6:	6878      	ldr	r0, [r7, #4]
 80156a8:	f7ef fad0 	bl	8004c4c <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 80156ac:	4605      	mov	r5, r0
 80156ae:	6838      	ldr	r0, [r7, #0]
 80156b0:	f7ef fb0b 	bl	8004cca <_ZSt7forwardISt17integral_constantIjLj1EEEOT_RNSt16remove_referenceIS2_E4typeE>
 80156b4:	4632      	mov	r2, r6
 80156b6:	4629      	mov	r1, r5
 80156b8:	4620      	mov	r0, r4
 80156ba:	f000 fb1d 	bl	8015cf8 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRiSt17integral_constantIjLj1EEEENS0_20__variant_idx_cookieESB_SC_>
 80156be:	4643      	mov	r3, r8
 80156c0:	4618      	mov	r0, r3
 80156c2:	3710      	adds	r7, #16
 80156c4:	46bd      	mov	sp, r7
 80156c6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080156ca <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSA_EUlOT_T0_E_JRfSt17integral_constantIjLj2EEEESC_St14__invoke_otherOSE_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 80156ca:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80156ce:	b084      	sub	sp, #16
 80156d0:	af00      	add	r7, sp, #0
 80156d2:	7338      	strb	r0, [r7, #12]
 80156d4:	60b9      	str	r1, [r7, #8]
 80156d6:	607a      	str	r2, [r7, #4]
 80156d8:	603b      	str	r3, [r7, #0]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 80156da:	68b8      	ldr	r0, [r7, #8]
 80156dc:	f7ff fcaf 	bl	801503e <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 80156e0:	4604      	mov	r4, r0
 80156e2:	6878      	ldr	r0, [r7, #4]
 80156e4:	f7ef fae6 	bl	8004cb4 <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 80156e8:	4605      	mov	r5, r0
 80156ea:	6838      	ldr	r0, [r7, #0]
 80156ec:	f7ef fb21 	bl	8004d32 <_ZSt7forwardISt17integral_constantIjLj2EEEOT_RNSt16remove_referenceIS2_E4typeE>
 80156f0:	4632      	mov	r2, r6
 80156f2:	4629      	mov	r1, r5
 80156f4:	4620      	mov	r0, r4
 80156f6:	f000 fb46 	bl	8015d86 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRfSt17integral_constantIjLj2EEEENS0_20__variant_idx_cookieESB_SC_>
 80156fa:	4643      	mov	r3, r8
 80156fc:	4618      	mov	r0, r3
 80156fe:	3710      	adds	r7, #16
 8015700:	46bd      	mov	sp, r7
 8015702:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08015706 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSA_EUlOT_T0_E_JRbSt17integral_constantIjLj3EEEESC_St14__invoke_otherOSE_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8015706:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801570a:	b084      	sub	sp, #16
 801570c:	af00      	add	r7, sp, #0
 801570e:	7338      	strb	r0, [r7, #12]
 8015710:	60b9      	str	r1, [r7, #8]
 8015712:	607a      	str	r2, [r7, #4]
 8015714:	603b      	str	r3, [r7, #0]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8015716:	68b8      	ldr	r0, [r7, #8]
 8015718:	f7ff fc91 	bl	801503e <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 801571c:	4604      	mov	r4, r0
 801571e:	6878      	ldr	r0, [r7, #4]
 8015720:	f7ef fafc 	bl	8004d1c <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
 8015724:	4605      	mov	r5, r0
 8015726:	6838      	ldr	r0, [r7, #0]
 8015728:	f7ef fb43 	bl	8004db2 <_ZSt7forwardISt17integral_constantIjLj3EEEOT_RNSt16remove_referenceIS2_E4typeE>
 801572c:	4632      	mov	r2, r6
 801572e:	4629      	mov	r1, r5
 8015730:	4620      	mov	r0, r4
 8015732:	f000 fb6f 	bl	8015e14 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRbSt17integral_constantIjLj3EEEENS0_20__variant_idx_cookieESB_SC_>
 8015736:	4643      	mov	r3, r8
 8015738:	4618      	mov	r0, r3
 801573a:	3710      	adds	r7, #16
 801573c:	46bd      	mov	sp, r7
 801573e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08015742 <_ZN9__gnu_cxx13new_allocatorIP10ExpressionE9constructIS2_JS2_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 8015742:	b590      	push	{r4, r7, lr}
 8015744:	b085      	sub	sp, #20
 8015746:	af00      	add	r7, sp, #0
 8015748:	60f8      	str	r0, [r7, #12]
 801574a:	60b9      	str	r1, [r7, #8]
 801574c:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 801574e:	6878      	ldr	r0, [r7, #4]
 8015750:	f7ff fc80 	bl	8015054 <_ZSt7forwardIP10ExpressionEOT_RNSt16remove_referenceIS2_E4typeE>
 8015754:	4603      	mov	r3, r0
 8015756:	681c      	ldr	r4, [r3, #0]
 8015758:	68bb      	ldr	r3, [r7, #8]
 801575a:	4619      	mov	r1, r3
 801575c:	2004      	movs	r0, #4
 801575e:	f7eb fc7c 	bl	800105a <_ZnwjPv>
 8015762:	4603      	mov	r3, r0
 8015764:	601c      	str	r4, [r3, #0]
 8015766:	bf00      	nop
 8015768:	3714      	adds	r7, #20
 801576a:	46bd      	mov	sp, r7
 801576c:	bd90      	pop	{r4, r7, pc}

0801576e <_ZN9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 801576e:	b480      	push	{r7}
 8015770:	b083      	sub	sp, #12
 8015772:	af00      	add	r7, sp, #0
 8015774:	6078      	str	r0, [r7, #4]
 8015776:	6039      	str	r1, [r7, #0]
      : _M_current(__i) { }
 8015778:	683b      	ldr	r3, [r7, #0]
 801577a:	681a      	ldr	r2, [r3, #0]
 801577c:	687b      	ldr	r3, [r7, #4]
 801577e:	601a      	str	r2, [r3, #0]
 8015780:	687b      	ldr	r3, [r7, #4]
 8015782:	4618      	mov	r0, r3
 8015784:	370c      	adds	r7, #12
 8015786:	46bd      	mov	sp, r7
 8015788:	f85d 7b04 	ldr.w	r7, [sp], #4
 801578c:	4770      	bx	lr

0801578e <_ZNKSt6vectorIP10ExpressionSaIS1_EE12_M_check_lenEjPKc>:
      _M_check_len(size_type __n, const char* __s) const
 801578e:	b590      	push	{r4, r7, lr}
 8015790:	b087      	sub	sp, #28
 8015792:	af00      	add	r7, sp, #0
 8015794:	60f8      	str	r0, [r7, #12]
 8015796:	60b9      	str	r1, [r7, #8]
 8015798:	607a      	str	r2, [r7, #4]
	if (max_size() - size() < __n)
 801579a:	68f8      	ldr	r0, [r7, #12]
 801579c:	f000 fb82 	bl	8015ea4 <_ZNKSt6vectorIP10ExpressionSaIS1_EE8max_sizeEv>
 80157a0:	4604      	mov	r4, r0
 80157a2:	68f8      	ldr	r0, [r7, #12]
 80157a4:	f7ed f803 	bl	80027ae <_ZNKSt6vectorIP10ExpressionSaIS1_EE4sizeEv>
 80157a8:	4603      	mov	r3, r0
 80157aa:	1ae2      	subs	r2, r4, r3
 80157ac:	68bb      	ldr	r3, [r7, #8]
 80157ae:	429a      	cmp	r2, r3
 80157b0:	bf34      	ite	cc
 80157b2:	2301      	movcc	r3, #1
 80157b4:	2300      	movcs	r3, #0
 80157b6:	b2db      	uxtb	r3, r3
 80157b8:	2b00      	cmp	r3, #0
 80157ba:	d002      	beq.n	80157c2 <_ZNKSt6vectorIP10ExpressionSaIS1_EE12_M_check_lenEjPKc+0x34>
	  __throw_length_error(__N(__s));
 80157bc:	6878      	ldr	r0, [r7, #4]
 80157be:	f00d ff68 	bl	8023692 <_ZSt20__throw_length_errorPKc>
	const size_type __len = size() + (std::max)(size(), __n);
 80157c2:	68f8      	ldr	r0, [r7, #12]
 80157c4:	f7ec fff3 	bl	80027ae <_ZNKSt6vectorIP10ExpressionSaIS1_EE4sizeEv>
 80157c8:	4604      	mov	r4, r0
 80157ca:	68f8      	ldr	r0, [r7, #12]
 80157cc:	f7ec ffef 	bl	80027ae <_ZNKSt6vectorIP10ExpressionSaIS1_EE4sizeEv>
 80157d0:	4603      	mov	r3, r0
 80157d2:	613b      	str	r3, [r7, #16]
 80157d4:	f107 0208 	add.w	r2, r7, #8
 80157d8:	f107 0310 	add.w	r3, r7, #16
 80157dc:	4611      	mov	r1, r2
 80157de:	4618      	mov	r0, r3
 80157e0:	f000 fb71 	bl	8015ec6 <_ZSt3maxIjERKT_S2_S2_>
 80157e4:	4603      	mov	r3, r0
 80157e6:	681b      	ldr	r3, [r3, #0]
 80157e8:	4423      	add	r3, r4
 80157ea:	617b      	str	r3, [r7, #20]
	return (__len < size() || __len > max_size()) ? max_size() : __len;
 80157ec:	68f8      	ldr	r0, [r7, #12]
 80157ee:	f7ec ffde 	bl	80027ae <_ZNKSt6vectorIP10ExpressionSaIS1_EE4sizeEv>
 80157f2:	4602      	mov	r2, r0
 80157f4:	697b      	ldr	r3, [r7, #20]
 80157f6:	4293      	cmp	r3, r2
 80157f8:	d306      	bcc.n	8015808 <_ZNKSt6vectorIP10ExpressionSaIS1_EE12_M_check_lenEjPKc+0x7a>
 80157fa:	68f8      	ldr	r0, [r7, #12]
 80157fc:	f000 fb52 	bl	8015ea4 <_ZNKSt6vectorIP10ExpressionSaIS1_EE8max_sizeEv>
 8015800:	4602      	mov	r2, r0
 8015802:	697b      	ldr	r3, [r7, #20]
 8015804:	4293      	cmp	r3, r2
 8015806:	d904      	bls.n	8015812 <_ZNKSt6vectorIP10ExpressionSaIS1_EE12_M_check_lenEjPKc+0x84>
 8015808:	68f8      	ldr	r0, [r7, #12]
 801580a:	f000 fb4b 	bl	8015ea4 <_ZNKSt6vectorIP10ExpressionSaIS1_EE8max_sizeEv>
 801580e:	4603      	mov	r3, r0
 8015810:	e000      	b.n	8015814 <_ZNKSt6vectorIP10ExpressionSaIS1_EE12_M_check_lenEjPKc+0x86>
 8015812:	697b      	ldr	r3, [r7, #20]
      }
 8015814:	4618      	mov	r0, r3
 8015816:	371c      	adds	r7, #28
 8015818:	46bd      	mov	sp, r7
 801581a:	bd90      	pop	{r4, r7, pc}

0801581c <_ZNSt6vectorIP10ExpressionSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 801581c:	b580      	push	{r7, lr}
 801581e:	b084      	sub	sp, #16
 8015820:	af00      	add	r7, sp, #0
 8015822:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_start); }
 8015824:	687a      	ldr	r2, [r7, #4]
 8015826:	f107 030c 	add.w	r3, r7, #12
 801582a:	4611      	mov	r1, r2
 801582c:	4618      	mov	r0, r3
 801582e:	f7ff ff9e 	bl	801576e <_ZN9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 8015832:	68fb      	ldr	r3, [r7, #12]
 8015834:	4618      	mov	r0, r3
 8015836:	3710      	adds	r7, #16
 8015838:	46bd      	mov	sp, r7
 801583a:	bd80      	pop	{r7, pc}

0801583c <_ZN9__gnu_cxxmiIPP10ExpressionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>:
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
 801583c:	b590      	push	{r4, r7, lr}
 801583e:	b083      	sub	sp, #12
 8015840:	af00      	add	r7, sp, #0
 8015842:	6078      	str	r0, [r7, #4]
 8015844:	6039      	str	r1, [r7, #0]
    { return __lhs.base() - __rhs.base(); }
 8015846:	6878      	ldr	r0, [r7, #4]
 8015848:	f000 f821 	bl	801588e <_ZNK9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801584c:	4603      	mov	r3, r0
 801584e:	681c      	ldr	r4, [r3, #0]
 8015850:	6838      	ldr	r0, [r7, #0]
 8015852:	f000 f81c 	bl	801588e <_ZNK9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEE4baseEv>
 8015856:	4603      	mov	r3, r0
 8015858:	681b      	ldr	r3, [r3, #0]
 801585a:	1ae3      	subs	r3, r4, r3
 801585c:	109b      	asrs	r3, r3, #2
 801585e:	4618      	mov	r0, r3
 8015860:	370c      	adds	r7, #12
 8015862:	46bd      	mov	sp, r7
 8015864:	bd90      	pop	{r4, r7, pc}

08015866 <_ZNSt6vectorIP10ExpressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
 8015866:	b590      	push	{r4, r7, lr}
 8015868:	b089      	sub	sp, #36	; 0x24
 801586a:	af02      	add	r7, sp, #8
 801586c:	60f8      	str	r0, [r7, #12]
 801586e:	60b9      	str	r1, [r7, #8]
 8015870:	607a      	str	r2, [r7, #4]
 8015872:	603b      	str	r3, [r7, #0]
	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
 8015874:	f88d 4000 	strb.w	r4, [sp]
 8015878:	683b      	ldr	r3, [r7, #0]
 801587a:	687a      	ldr	r2, [r7, #4]
 801587c:	68b9      	ldr	r1, [r7, #8]
 801587e:	68f8      	ldr	r0, [r7, #12]
 8015880:	f000 fb35 	bl	8015eee <_ZNSt6vectorIP10ExpressionSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>
 8015884:	4603      	mov	r3, r0
      }
 8015886:	4618      	mov	r0, r3
 8015888:	371c      	adds	r7, #28
 801588a:	46bd      	mov	sp, r7
 801588c:	bd90      	pop	{r4, r7, pc}

0801588e <_ZNK9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
 801588e:	b480      	push	{r7}
 8015890:	b083      	sub	sp, #12
 8015892:	af00      	add	r7, sp, #0
 8015894:	6078      	str	r0, [r7, #4]
      { return _M_current; }
 8015896:	687b      	ldr	r3, [r7, #4]
 8015898:	4618      	mov	r0, r3
 801589a:	370c      	adds	r7, #12
 801589c:	46bd      	mov	sp, r7
 801589e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80158a2:	4770      	bx	lr

080158a4 <_ZNK9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEEmiEi>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
 80158a4:	b580      	push	{r7, lr}
 80158a6:	b084      	sub	sp, #16
 80158a8:	af00      	add	r7, sp, #0
 80158aa:	6078      	str	r0, [r7, #4]
 80158ac:	6039      	str	r1, [r7, #0]
      { return __normal_iterator(_M_current - __n); }
 80158ae:	687b      	ldr	r3, [r7, #4]
 80158b0:	681a      	ldr	r2, [r3, #0]
 80158b2:	683b      	ldr	r3, [r7, #0]
 80158b4:	009b      	lsls	r3, r3, #2
 80158b6:	425b      	negs	r3, r3
 80158b8:	4413      	add	r3, r2
 80158ba:	60fb      	str	r3, [r7, #12]
 80158bc:	f107 020c 	add.w	r2, r7, #12
 80158c0:	f107 0308 	add.w	r3, r7, #8
 80158c4:	4611      	mov	r1, r2
 80158c6:	4618      	mov	r0, r3
 80158c8:	f7ff ff51 	bl	801576e <_ZN9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 80158cc:	68bb      	ldr	r3, [r7, #8]
 80158ce:	4618      	mov	r0, r3
 80158d0:	3710      	adds	r7, #16
 80158d2:	46bd      	mov	sp, r7
 80158d4:	bd80      	pop	{r7, pc}

080158d6 <_ZNK9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
 80158d6:	b480      	push	{r7}
 80158d8:	b083      	sub	sp, #12
 80158da:	af00      	add	r7, sp, #0
 80158dc:	6078      	str	r0, [r7, #4]
      { return *_M_current; }
 80158de:	687b      	ldr	r3, [r7, #4]
 80158e0:	681b      	ldr	r3, [r3, #0]
 80158e2:	4618      	mov	r0, r3
 80158e4:	370c      	adds	r7, #12
 80158e6:	46bd      	mov	sp, r7
 80158e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80158ec:	4770      	bx	lr

080158ee <_ZN9__gnu_cxx13new_allocatorIP4BodyE9constructIS2_JS2_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 80158ee:	b590      	push	{r4, r7, lr}
 80158f0:	b085      	sub	sp, #20
 80158f2:	af00      	add	r7, sp, #0
 80158f4:	60f8      	str	r0, [r7, #12]
 80158f6:	60b9      	str	r1, [r7, #8]
 80158f8:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 80158fa:	6878      	ldr	r0, [r7, #4]
 80158fc:	f7ff fc71 	bl	80151e2 <_ZSt7forwardIP4BodyEOT_RNSt16remove_referenceIS2_E4typeE>
 8015900:	4603      	mov	r3, r0
 8015902:	681c      	ldr	r4, [r3, #0]
 8015904:	68bb      	ldr	r3, [r7, #8]
 8015906:	4619      	mov	r1, r3
 8015908:	2004      	movs	r0, #4
 801590a:	f7eb fba6 	bl	800105a <_ZnwjPv>
 801590e:	4603      	mov	r3, r0
 8015910:	601c      	str	r4, [r3, #0]
 8015912:	bf00      	nop
 8015914:	3714      	adds	r7, #20
 8015916:	46bd      	mov	sp, r7
 8015918:	bd90      	pop	{r4, r7, pc}

0801591a <_ZNKSt6vectorIP4BodySaIS1_EE12_M_check_lenEjPKc>:
      _M_check_len(size_type __n, const char* __s) const
 801591a:	b590      	push	{r4, r7, lr}
 801591c:	b087      	sub	sp, #28
 801591e:	af00      	add	r7, sp, #0
 8015920:	60f8      	str	r0, [r7, #12]
 8015922:	60b9      	str	r1, [r7, #8]
 8015924:	607a      	str	r2, [r7, #4]
	if (max_size() - size() < __n)
 8015926:	68f8      	ldr	r0, [r7, #12]
 8015928:	f000 faf3 	bl	8015f12 <_ZNKSt6vectorIP4BodySaIS1_EE8max_sizeEv>
 801592c:	4604      	mov	r4, r0
 801592e:	68f8      	ldr	r0, [r7, #12]
 8015930:	f7ec ff6d 	bl	800280e <_ZNKSt6vectorIP4BodySaIS1_EE4sizeEv>
 8015934:	4603      	mov	r3, r0
 8015936:	1ae2      	subs	r2, r4, r3
 8015938:	68bb      	ldr	r3, [r7, #8]
 801593a:	429a      	cmp	r2, r3
 801593c:	bf34      	ite	cc
 801593e:	2301      	movcc	r3, #1
 8015940:	2300      	movcs	r3, #0
 8015942:	b2db      	uxtb	r3, r3
 8015944:	2b00      	cmp	r3, #0
 8015946:	d002      	beq.n	801594e <_ZNKSt6vectorIP4BodySaIS1_EE12_M_check_lenEjPKc+0x34>
	  __throw_length_error(__N(__s));
 8015948:	6878      	ldr	r0, [r7, #4]
 801594a:	f00d fea2 	bl	8023692 <_ZSt20__throw_length_errorPKc>
	const size_type __len = size() + (std::max)(size(), __n);
 801594e:	68f8      	ldr	r0, [r7, #12]
 8015950:	f7ec ff5d 	bl	800280e <_ZNKSt6vectorIP4BodySaIS1_EE4sizeEv>
 8015954:	4604      	mov	r4, r0
 8015956:	68f8      	ldr	r0, [r7, #12]
 8015958:	f7ec ff59 	bl	800280e <_ZNKSt6vectorIP4BodySaIS1_EE4sizeEv>
 801595c:	4603      	mov	r3, r0
 801595e:	613b      	str	r3, [r7, #16]
 8015960:	f107 0208 	add.w	r2, r7, #8
 8015964:	f107 0310 	add.w	r3, r7, #16
 8015968:	4611      	mov	r1, r2
 801596a:	4618      	mov	r0, r3
 801596c:	f000 faab 	bl	8015ec6 <_ZSt3maxIjERKT_S2_S2_>
 8015970:	4603      	mov	r3, r0
 8015972:	681b      	ldr	r3, [r3, #0]
 8015974:	4423      	add	r3, r4
 8015976:	617b      	str	r3, [r7, #20]
	return (__len < size() || __len > max_size()) ? max_size() : __len;
 8015978:	68f8      	ldr	r0, [r7, #12]
 801597a:	f7ec ff48 	bl	800280e <_ZNKSt6vectorIP4BodySaIS1_EE4sizeEv>
 801597e:	4602      	mov	r2, r0
 8015980:	697b      	ldr	r3, [r7, #20]
 8015982:	4293      	cmp	r3, r2
 8015984:	d306      	bcc.n	8015994 <_ZNKSt6vectorIP4BodySaIS1_EE12_M_check_lenEjPKc+0x7a>
 8015986:	68f8      	ldr	r0, [r7, #12]
 8015988:	f000 fac3 	bl	8015f12 <_ZNKSt6vectorIP4BodySaIS1_EE8max_sizeEv>
 801598c:	4602      	mov	r2, r0
 801598e:	697b      	ldr	r3, [r7, #20]
 8015990:	4293      	cmp	r3, r2
 8015992:	d904      	bls.n	801599e <_ZNKSt6vectorIP4BodySaIS1_EE12_M_check_lenEjPKc+0x84>
 8015994:	68f8      	ldr	r0, [r7, #12]
 8015996:	f000 fabc 	bl	8015f12 <_ZNKSt6vectorIP4BodySaIS1_EE8max_sizeEv>
 801599a:	4603      	mov	r3, r0
 801599c:	e000      	b.n	80159a0 <_ZNKSt6vectorIP4BodySaIS1_EE12_M_check_lenEjPKc+0x86>
 801599e:	697b      	ldr	r3, [r7, #20]
      }
 80159a0:	4618      	mov	r0, r3
 80159a2:	371c      	adds	r7, #28
 80159a4:	46bd      	mov	sp, r7
 80159a6:	bd90      	pop	{r4, r7, pc}

080159a8 <_ZNSt6vectorIP4BodySaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 80159a8:	b580      	push	{r7, lr}
 80159aa:	b084      	sub	sp, #16
 80159ac:	af00      	add	r7, sp, #0
 80159ae:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_start); }
 80159b0:	687a      	ldr	r2, [r7, #4]
 80159b2:	f107 030c 	add.w	r3, r7, #12
 80159b6:	4611      	mov	r1, r2
 80159b8:	4618      	mov	r0, r3
 80159ba:	f7ef fadc 	bl	8004f76 <_ZN9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEEC1ERKS3_>
 80159be:	68fb      	ldr	r3, [r7, #12]
 80159c0:	4618      	mov	r0, r3
 80159c2:	3710      	adds	r7, #16
 80159c4:	46bd      	mov	sp, r7
 80159c6:	bd80      	pop	{r7, pc}

080159c8 <_ZN9__gnu_cxxmiIPP4BodySt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>:
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
 80159c8:	b590      	push	{r4, r7, lr}
 80159ca:	b083      	sub	sp, #12
 80159cc:	af00      	add	r7, sp, #0
 80159ce:	6078      	str	r0, [r7, #4]
 80159d0:	6039      	str	r1, [r7, #0]
    { return __lhs.base() - __rhs.base(); }
 80159d2:	6878      	ldr	r0, [r7, #4]
 80159d4:	f000 f835 	bl	8015a42 <_ZNK9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEE4baseEv>
 80159d8:	4603      	mov	r3, r0
 80159da:	681c      	ldr	r4, [r3, #0]
 80159dc:	6838      	ldr	r0, [r7, #0]
 80159de:	f000 f830 	bl	8015a42 <_ZNK9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEE4baseEv>
 80159e2:	4603      	mov	r3, r0
 80159e4:	681b      	ldr	r3, [r3, #0]
 80159e6:	1ae3      	subs	r3, r4, r3
 80159e8:	109b      	asrs	r3, r3, #2
 80159ea:	4618      	mov	r0, r3
 80159ec:	370c      	adds	r7, #12
 80159ee:	46bd      	mov	sp, r7
 80159f0:	bd90      	pop	{r4, r7, pc}

080159f2 <_ZNSt12_Vector_baseIP4BodySaIS1_EE11_M_allocateEj>:
      _M_allocate(size_t __n)
 80159f2:	b580      	push	{r7, lr}
 80159f4:	b082      	sub	sp, #8
 80159f6:	af00      	add	r7, sp, #0
 80159f8:	6078      	str	r0, [r7, #4]
 80159fa:	6039      	str	r1, [r7, #0]
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 80159fc:	683b      	ldr	r3, [r7, #0]
 80159fe:	2b00      	cmp	r3, #0
 8015a00:	d006      	beq.n	8015a10 <_ZNSt12_Vector_baseIP4BodySaIS1_EE11_M_allocateEj+0x1e>
 8015a02:	687b      	ldr	r3, [r7, #4]
 8015a04:	6839      	ldr	r1, [r7, #0]
 8015a06:	4618      	mov	r0, r3
 8015a08:	f000 fa94 	bl	8015f34 <_ZNSt16allocator_traitsISaIP4BodyEE8allocateERS2_j>
 8015a0c:	4603      	mov	r3, r0
 8015a0e:	e000      	b.n	8015a12 <_ZNSt12_Vector_baseIP4BodySaIS1_EE11_M_allocateEj+0x20>
 8015a10:	2300      	movs	r3, #0
      }
 8015a12:	4618      	mov	r0, r3
 8015a14:	3708      	adds	r7, #8
 8015a16:	46bd      	mov	sp, r7
 8015a18:	bd80      	pop	{r7, pc}

08015a1a <_ZNSt6vectorIP4BodySaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
 8015a1a:	b590      	push	{r4, r7, lr}
 8015a1c:	b089      	sub	sp, #36	; 0x24
 8015a1e:	af02      	add	r7, sp, #8
 8015a20:	60f8      	str	r0, [r7, #12]
 8015a22:	60b9      	str	r1, [r7, #8]
 8015a24:	607a      	str	r2, [r7, #4]
 8015a26:	603b      	str	r3, [r7, #0]
	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
 8015a28:	f88d 4000 	strb.w	r4, [sp]
 8015a2c:	683b      	ldr	r3, [r7, #0]
 8015a2e:	687a      	ldr	r2, [r7, #4]
 8015a30:	68b9      	ldr	r1, [r7, #8]
 8015a32:	68f8      	ldr	r0, [r7, #12]
 8015a34:	f000 fa8d 	bl	8015f52 <_ZNSt6vectorIP4BodySaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>
 8015a38:	4603      	mov	r3, r0
      }
 8015a3a:	4618      	mov	r0, r3
 8015a3c:	371c      	adds	r7, #28
 8015a3e:	46bd      	mov	sp, r7
 8015a40:	bd90      	pop	{r4, r7, pc}

08015a42 <_ZNK9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
 8015a42:	b480      	push	{r7}
 8015a44:	b083      	sub	sp, #12
 8015a46:	af00      	add	r7, sp, #0
 8015a48:	6078      	str	r0, [r7, #4]
      { return _M_current; }
 8015a4a:	687b      	ldr	r3, [r7, #4]
 8015a4c:	4618      	mov	r0, r3
 8015a4e:	370c      	adds	r7, #12
 8015a50:	46bd      	mov	sp, r7
 8015a52:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015a56:	4770      	bx	lr

08015a58 <_ZN9__gnu_cxx13new_allocatorIP4BodyE10deallocateEPS2_j>:
      deallocate(pointer __p, size_type)
 8015a58:	b580      	push	{r7, lr}
 8015a5a:	b084      	sub	sp, #16
 8015a5c:	af00      	add	r7, sp, #0
 8015a5e:	60f8      	str	r0, [r7, #12]
 8015a60:	60b9      	str	r1, [r7, #8]
 8015a62:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 8015a64:	68b8      	ldr	r0, [r7, #8]
 8015a66:	f00d fd33 	bl	80234d0 <_ZdlPv>
      }
 8015a6a:	3710      	adds	r7, #16
 8015a6c:	46bd      	mov	sp, r7
 8015a6e:	bd80      	pop	{r7, pc}

08015a70 <_ZSt9addressofIP13Function_callEPT_RS2_>:
    addressof(_Tp& __r) noexcept
 8015a70:	b580      	push	{r7, lr}
 8015a72:	b082      	sub	sp, #8
 8015a74:	af00      	add	r7, sp, #0
 8015a76:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 8015a78:	6878      	ldr	r0, [r7, #4]
 8015a7a:	f7f6 f932 	bl	800bce2 <_ZSt11__addressofIP13Function_callEPT_RS2_>
 8015a7e:	4603      	mov	r3, r0
 8015a80:	4618      	mov	r0, r3
 8015a82:	3708      	adds	r7, #8
 8015a84:	46bd      	mov	sp, r7
 8015a86:	bd80      	pop	{r7, pc}

08015a88 <_ZSt9addressofIP10AssignmentEPT_RS2_>:
    addressof(_Tp& __r) noexcept
 8015a88:	b580      	push	{r7, lr}
 8015a8a:	b082      	sub	sp, #8
 8015a8c:	af00      	add	r7, sp, #0
 8015a8e:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 8015a90:	6878      	ldr	r0, [r7, #4]
 8015a92:	f000 fa70 	bl	8015f76 <_ZSt11__addressofIP10AssignmentEPT_RS2_>
 8015a96:	4603      	mov	r3, r0
 8015a98:	4618      	mov	r0, r3
 8015a9a:	3708      	adds	r7, #8
 8015a9c:	46bd      	mov	sp, r7
 8015a9e:	bd80      	pop	{r7, pc}

08015aa0 <_ZSt9addressofIP11Method_callEPT_RS2_>:
    addressof(_Tp& __r) noexcept
 8015aa0:	b580      	push	{r7, lr}
 8015aa2:	b082      	sub	sp, #8
 8015aa4:	af00      	add	r7, sp, #0
 8015aa6:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 8015aa8:	6878      	ldr	r0, [r7, #4]
 8015aaa:	f000 fa6f 	bl	8015f8c <_ZSt11__addressofIP11Method_callEPT_RS2_>
 8015aae:	4603      	mov	r3, r0
 8015ab0:	4618      	mov	r0, r3
 8015ab2:	3708      	adds	r7, #8
 8015ab4:	46bd      	mov	sp, r7
 8015ab6:	bd80      	pop	{r7, pc}

08015ab8 <_ZSt9addressofIP15While_statementEPT_RS2_>:
    addressof(_Tp& __r) noexcept
 8015ab8:	b580      	push	{r7, lr}
 8015aba:	b082      	sub	sp, #8
 8015abc:	af00      	add	r7, sp, #0
 8015abe:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 8015ac0:	6878      	ldr	r0, [r7, #4]
 8015ac2:	f000 fa6e 	bl	8015fa2 <_ZSt11__addressofIP15While_statementEPT_RS2_>
 8015ac6:	4603      	mov	r3, r0
 8015ac8:	4618      	mov	r0, r3
 8015aca:	3708      	adds	r7, #8
 8015acc:	46bd      	mov	sp, r7
 8015ace:	bd80      	pop	{r7, pc}

08015ad0 <_ZSt9addressofIP12If_statementEPT_RS2_>:
    addressof(_Tp& __r) noexcept
 8015ad0:	b580      	push	{r7, lr}
 8015ad2:	b082      	sub	sp, #8
 8015ad4:	af00      	add	r7, sp, #0
 8015ad6:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 8015ad8:	6878      	ldr	r0, [r7, #4]
 8015ada:	f000 fa6d 	bl	8015fb8 <_ZSt11__addressofIP12If_statementEPT_RS2_>
 8015ade:	4603      	mov	r3, r0
 8015ae0:	4618      	mov	r0, r3
 8015ae2:	3708      	adds	r7, #8
 8015ae4:	46bd      	mov	sp, r7
 8015ae6:	bd80      	pop	{r7, pc}

08015ae8 <_ZN9__gnu_cxx13new_allocatorIP9StatementE10deallocateEPS2_j>:
      deallocate(pointer __p, size_type)
 8015ae8:	b580      	push	{r7, lr}
 8015aea:	b084      	sub	sp, #16
 8015aec:	af00      	add	r7, sp, #0
 8015aee:	60f8      	str	r0, [r7, #12]
 8015af0:	60b9      	str	r1, [r7, #8]
 8015af2:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 8015af4:	68b8      	ldr	r0, [r7, #8]
 8015af6:	f00d fceb 	bl	80234d0 <_ZdlPv>
      }
 8015afa:	3710      	adds	r7, #16
 8015afc:	46bd      	mov	sp, r7
 8015afe:	bd80      	pop	{r7, pc}

08015b00 <_ZN9__gnu_cxx13new_allocatorIP9StatementE9constructIS2_JS2_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 8015b00:	b590      	push	{r4, r7, lr}
 8015b02:	b085      	sub	sp, #20
 8015b04:	af00      	add	r7, sp, #0
 8015b06:	60f8      	str	r0, [r7, #12]
 8015b08:	60b9      	str	r1, [r7, #8]
 8015b0a:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 8015b0c:	6878      	ldr	r0, [r7, #4]
 8015b0e:	f7ff fcea 	bl	80154e6 <_ZSt7forwardIP9StatementEOT_RNSt16remove_referenceIS2_E4typeE>
 8015b12:	4603      	mov	r3, r0
 8015b14:	681c      	ldr	r4, [r3, #0]
 8015b16:	68bb      	ldr	r3, [r7, #8]
 8015b18:	4619      	mov	r1, r3
 8015b1a:	2004      	movs	r0, #4
 8015b1c:	f7eb fa9d 	bl	800105a <_ZnwjPv>
 8015b20:	4603      	mov	r3, r0
 8015b22:	601c      	str	r4, [r3, #0]
 8015b24:	bf00      	nop
 8015b26:	3714      	adds	r7, #20
 8015b28:	46bd      	mov	sp, r7
 8015b2a:	bd90      	pop	{r4, r7, pc}

08015b2c <_ZNKSt6vectorIP9StatementSaIS1_EE12_M_check_lenEjPKc>:
      _M_check_len(size_type __n, const char* __s) const
 8015b2c:	b590      	push	{r4, r7, lr}
 8015b2e:	b087      	sub	sp, #28
 8015b30:	af00      	add	r7, sp, #0
 8015b32:	60f8      	str	r0, [r7, #12]
 8015b34:	60b9      	str	r1, [r7, #8]
 8015b36:	607a      	str	r2, [r7, #4]
	if (max_size() - size() < __n)
 8015b38:	68f8      	ldr	r0, [r7, #12]
 8015b3a:	f000 fa48 	bl	8015fce <_ZNKSt6vectorIP9StatementSaIS1_EE8max_sizeEv>
 8015b3e:	4604      	mov	r4, r0
 8015b40:	68f8      	ldr	r0, [r7, #12]
 8015b42:	f000 fa55 	bl	8015ff0 <_ZNKSt6vectorIP9StatementSaIS1_EE4sizeEv>
 8015b46:	4603      	mov	r3, r0
 8015b48:	1ae2      	subs	r2, r4, r3
 8015b4a:	68bb      	ldr	r3, [r7, #8]
 8015b4c:	429a      	cmp	r2, r3
 8015b4e:	bf34      	ite	cc
 8015b50:	2301      	movcc	r3, #1
 8015b52:	2300      	movcs	r3, #0
 8015b54:	b2db      	uxtb	r3, r3
 8015b56:	2b00      	cmp	r3, #0
 8015b58:	d002      	beq.n	8015b60 <_ZNKSt6vectorIP9StatementSaIS1_EE12_M_check_lenEjPKc+0x34>
	  __throw_length_error(__N(__s));
 8015b5a:	6878      	ldr	r0, [r7, #4]
 8015b5c:	f00d fd99 	bl	8023692 <_ZSt20__throw_length_errorPKc>
	const size_type __len = size() + (std::max)(size(), __n);
 8015b60:	68f8      	ldr	r0, [r7, #12]
 8015b62:	f000 fa45 	bl	8015ff0 <_ZNKSt6vectorIP9StatementSaIS1_EE4sizeEv>
 8015b66:	4604      	mov	r4, r0
 8015b68:	68f8      	ldr	r0, [r7, #12]
 8015b6a:	f000 fa41 	bl	8015ff0 <_ZNKSt6vectorIP9StatementSaIS1_EE4sizeEv>
 8015b6e:	4603      	mov	r3, r0
 8015b70:	613b      	str	r3, [r7, #16]
 8015b72:	f107 0208 	add.w	r2, r7, #8
 8015b76:	f107 0310 	add.w	r3, r7, #16
 8015b7a:	4611      	mov	r1, r2
 8015b7c:	4618      	mov	r0, r3
 8015b7e:	f000 f9a2 	bl	8015ec6 <_ZSt3maxIjERKT_S2_S2_>
 8015b82:	4603      	mov	r3, r0
 8015b84:	681b      	ldr	r3, [r3, #0]
 8015b86:	4423      	add	r3, r4
 8015b88:	617b      	str	r3, [r7, #20]
	return (__len < size() || __len > max_size()) ? max_size() : __len;
 8015b8a:	68f8      	ldr	r0, [r7, #12]
 8015b8c:	f000 fa30 	bl	8015ff0 <_ZNKSt6vectorIP9StatementSaIS1_EE4sizeEv>
 8015b90:	4602      	mov	r2, r0
 8015b92:	697b      	ldr	r3, [r7, #20]
 8015b94:	4293      	cmp	r3, r2
 8015b96:	d306      	bcc.n	8015ba6 <_ZNKSt6vectorIP9StatementSaIS1_EE12_M_check_lenEjPKc+0x7a>
 8015b98:	68f8      	ldr	r0, [r7, #12]
 8015b9a:	f000 fa18 	bl	8015fce <_ZNKSt6vectorIP9StatementSaIS1_EE8max_sizeEv>
 8015b9e:	4602      	mov	r2, r0
 8015ba0:	697b      	ldr	r3, [r7, #20]
 8015ba2:	4293      	cmp	r3, r2
 8015ba4:	d904      	bls.n	8015bb0 <_ZNKSt6vectorIP9StatementSaIS1_EE12_M_check_lenEjPKc+0x84>
 8015ba6:	68f8      	ldr	r0, [r7, #12]
 8015ba8:	f000 fa11 	bl	8015fce <_ZNKSt6vectorIP9StatementSaIS1_EE8max_sizeEv>
 8015bac:	4603      	mov	r3, r0
 8015bae:	e000      	b.n	8015bb2 <_ZNKSt6vectorIP9StatementSaIS1_EE12_M_check_lenEjPKc+0x86>
 8015bb0:	697b      	ldr	r3, [r7, #20]
      }
 8015bb2:	4618      	mov	r0, r3
 8015bb4:	371c      	adds	r7, #28
 8015bb6:	46bd      	mov	sp, r7
 8015bb8:	bd90      	pop	{r4, r7, pc}

08015bba <_ZN9__gnu_cxxmiIPP9StatementSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>:
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
 8015bba:	b590      	push	{r4, r7, lr}
 8015bbc:	b083      	sub	sp, #12
 8015bbe:	af00      	add	r7, sp, #0
 8015bc0:	6078      	str	r0, [r7, #4]
 8015bc2:	6039      	str	r1, [r7, #0]
    { return __lhs.base() - __rhs.base(); }
 8015bc4:	6878      	ldr	r0, [r7, #4]
 8015bc6:	f7ed ff5e 	bl	8003a86 <_ZNK9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEE4baseEv>
 8015bca:	4603      	mov	r3, r0
 8015bcc:	681c      	ldr	r4, [r3, #0]
 8015bce:	6838      	ldr	r0, [r7, #0]
 8015bd0:	f7ed ff59 	bl	8003a86 <_ZNK9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEE4baseEv>
 8015bd4:	4603      	mov	r3, r0
 8015bd6:	681b      	ldr	r3, [r3, #0]
 8015bd8:	1ae3      	subs	r3, r4, r3
 8015bda:	109b      	asrs	r3, r3, #2
 8015bdc:	4618      	mov	r0, r3
 8015bde:	370c      	adds	r7, #12
 8015be0:	46bd      	mov	sp, r7
 8015be2:	bd90      	pop	{r4, r7, pc}

08015be4 <_ZNSt12_Vector_baseIP9StatementSaIS1_EE11_M_allocateEj>:
      _M_allocate(size_t __n)
 8015be4:	b580      	push	{r7, lr}
 8015be6:	b082      	sub	sp, #8
 8015be8:	af00      	add	r7, sp, #0
 8015bea:	6078      	str	r0, [r7, #4]
 8015bec:	6039      	str	r1, [r7, #0]
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 8015bee:	683b      	ldr	r3, [r7, #0]
 8015bf0:	2b00      	cmp	r3, #0
 8015bf2:	d006      	beq.n	8015c02 <_ZNSt12_Vector_baseIP9StatementSaIS1_EE11_M_allocateEj+0x1e>
 8015bf4:	687b      	ldr	r3, [r7, #4]
 8015bf6:	6839      	ldr	r1, [r7, #0]
 8015bf8:	4618      	mov	r0, r3
 8015bfa:	f000 fa09 	bl	8016010 <_ZNSt16allocator_traitsISaIP9StatementEE8allocateERS2_j>
 8015bfe:	4603      	mov	r3, r0
 8015c00:	e000      	b.n	8015c04 <_ZNSt12_Vector_baseIP9StatementSaIS1_EE11_M_allocateEj+0x20>
 8015c02:	2300      	movs	r3, #0
      }
 8015c04:	4618      	mov	r0, r3
 8015c06:	3708      	adds	r7, #8
 8015c08:	46bd      	mov	sp, r7
 8015c0a:	bd80      	pop	{r7, pc}

08015c0c <_ZNSt6vectorIP9StatementSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
 8015c0c:	b590      	push	{r4, r7, lr}
 8015c0e:	b089      	sub	sp, #36	; 0x24
 8015c10:	af02      	add	r7, sp, #8
 8015c12:	60f8      	str	r0, [r7, #12]
 8015c14:	60b9      	str	r1, [r7, #8]
 8015c16:	607a      	str	r2, [r7, #4]
 8015c18:	603b      	str	r3, [r7, #0]
	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
 8015c1a:	f88d 4000 	strb.w	r4, [sp]
 8015c1e:	683b      	ldr	r3, [r7, #0]
 8015c20:	687a      	ldr	r2, [r7, #4]
 8015c22:	68b9      	ldr	r1, [r7, #8]
 8015c24:	68f8      	ldr	r0, [r7, #12]
 8015c26:	f000 fa02 	bl	801602e <_ZNSt6vectorIP9StatementSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>
 8015c2a:	4603      	mov	r3, r0
      }
 8015c2c:	4618      	mov	r0, r3
 8015c2e:	371c      	adds	r7, #28
 8015c30:	46bd      	mov	sp, r7
 8015c32:	bd90      	pop	{r4, r7, pc}

08015c34 <_ZNK9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEEmiEi>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
 8015c34:	b580      	push	{r7, lr}
 8015c36:	b084      	sub	sp, #16
 8015c38:	af00      	add	r7, sp, #0
 8015c3a:	6078      	str	r0, [r7, #4]
 8015c3c:	6039      	str	r1, [r7, #0]
      { return __normal_iterator(_M_current - __n); }
 8015c3e:	687b      	ldr	r3, [r7, #4]
 8015c40:	681a      	ldr	r2, [r3, #0]
 8015c42:	683b      	ldr	r3, [r7, #0]
 8015c44:	009b      	lsls	r3, r3, #2
 8015c46:	425b      	negs	r3, r3
 8015c48:	4413      	add	r3, r2
 8015c4a:	60fb      	str	r3, [r7, #12]
 8015c4c:	f107 020c 	add.w	r2, r7, #12
 8015c50:	f107 0308 	add.w	r3, r7, #8
 8015c54:	4611      	mov	r1, r2
 8015c56:	4618      	mov	r0, r3
 8015c58:	f7ed ff05 	bl	8003a66 <_ZN9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 8015c5c:	68bb      	ldr	r3, [r7, #8]
 8015c5e:	4618      	mov	r0, r3
 8015c60:	3710      	adds	r7, #16
 8015c62:	46bd      	mov	sp, r7
 8015c64:	bd80      	pop	{r7, pc}

08015c66 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRS7_St17integral_constantIjLj0EEEENS0_20__variant_idx_cookieESB_SC_>:
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8015c66:	b5b0      	push	{r4, r5, r7, lr}
 8015c68:	b084      	sub	sp, #16
 8015c6a:	af00      	add	r7, sp, #0
 8015c6c:	60f8      	str	r0, [r7, #12]
 8015c6e:	60b9      	str	r1, [r7, #8]
 8015c70:	713a      	strb	r2, [r7, #4]
 8015c72:	68fb      	ldr	r3, [r7, #12]
 8015c74:	681b      	ldr	r3, [r3, #0]
		if (this->_M_index == __rhs_index)
 8015c76:	7e1b      	ldrb	r3, [r3, #24]
 8015c78:	461c      	mov	r4, r3
 8015c7a:	1d3b      	adds	r3, r7, #4
 8015c7c:	4618      	mov	r0, r3
 8015c7e:	f7f0 f9eb 	bl	8006058 <_ZNKSt17integral_constantIjLj0EEcvjEv>
 8015c82:	4603      	mov	r3, r0
 8015c84:	429c      	cmp	r4, r3
 8015c86:	bf0c      	ite	eq
 8015c88:	2301      	moveq	r3, #1
 8015c8a:	2300      	movne	r3, #0
 8015c8c:	b2db      	uxtb	r3, r3
 8015c8e:	2b00      	cmp	r3, #0
 8015c90:	d00e      	beq.n	8015cb0 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRS7_St17integral_constantIjLj0EEEENS0_20__variant_idx_cookieESB_SC_+0x4a>
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 8015c92:	68b8      	ldr	r0, [r7, #8]
 8015c94:	f7f1 fa9b 	bl	80071ce <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
 8015c98:	4604      	mov	r4, r0
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8015c9a:	68fb      	ldr	r3, [r7, #12]
 8015c9c:	681b      	ldr	r3, [r3, #0]
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 8015c9e:	4618      	mov	r0, r3
 8015ca0:	f000 f819 	bl	8015cd6 <_ZNSt8__detail9__variant5__getILj0ERNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcOT0_>
 8015ca4:	4603      	mov	r3, r0
 8015ca6:	4621      	mov	r1, r4
 8015ca8:	4618      	mov	r0, r3
 8015caa:	f00d fed2 	bl	8023a52 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>
	    return {};
 8015cae:	e00d      	b.n	8015ccc <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRS7_St17integral_constantIjLj0EEEENS0_20__variant_idx_cookieESB_SC_+0x66>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8015cb0:	68fb      	ldr	r3, [r7, #12]
 8015cb2:	681b      	ldr	r3, [r3, #0]
		  __variant_cast<_Types...>(*this)
 8015cb4:	4618      	mov	r0, r3
 8015cb6:	f7fe fd59 	bl	801476c <_ZSt14__variant_castIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNSt8__detail9__variant17_Move_assign_baseILb0EJS5_ifbEEEEDcOT0_>
 8015cba:	4604      	mov	r4, r0
		    .template emplace<__rhs_index>(std::move(__rhs_mem));
 8015cbc:	68b8      	ldr	r0, [r7, #8]
 8015cbe:	f7f1 fa86 	bl	80071ce <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
 8015cc2:	4603      	mov	r3, r0
		  __variant_cast<_Types...>(*this)
 8015cc4:	4619      	mov	r1, r3
 8015cc6:	4620      	mov	r0, r4
 8015cc8:	f7fa fb56 	bl	8010378 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE7emplaceILj0EJS5_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES6_E4typeEDpT0_EERSB_E4typeEDpOSC_>
	    return {};
 8015ccc:	462b      	mov	r3, r5
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8015cce:	4618      	mov	r0, r3
 8015cd0:	3710      	adds	r7, #16
 8015cd2:	46bd      	mov	sp, r7
 8015cd4:	bdb0      	pop	{r4, r5, r7, pc}

08015cd6 <_ZNSt8__detail9__variant5__getILj0ERNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8015cd6:	b590      	push	{r4, r7, lr}
 8015cd8:	b083      	sub	sp, #12
 8015cda:	af00      	add	r7, sp, #0
 8015cdc:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8015cde:	6878      	ldr	r0, [r7, #4]
 8015ce0:	f000 f9b7 	bl	8016052 <_ZSt7forwardIRNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>
 8015ce4:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8015ce6:	4619      	mov	r1, r3
 8015ce8:	4620      	mov	r0, r4
 8015cea:	f7fa fb07 	bl	80102fc <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tILj0EEOT_>
 8015cee:	4603      	mov	r3, r0
    }
 8015cf0:	4618      	mov	r0, r3
 8015cf2:	370c      	adds	r7, #12
 8015cf4:	46bd      	mov	sp, r7
 8015cf6:	bd90      	pop	{r4, r7, pc}

08015cf8 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRiSt17integral_constantIjLj1EEEENS0_20__variant_idx_cookieESB_SC_>:
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8015cf8:	b5b0      	push	{r4, r5, r7, lr}
 8015cfa:	b084      	sub	sp, #16
 8015cfc:	af00      	add	r7, sp, #0
 8015cfe:	60f8      	str	r0, [r7, #12]
 8015d00:	60b9      	str	r1, [r7, #8]
 8015d02:	713a      	strb	r2, [r7, #4]
 8015d04:	68fb      	ldr	r3, [r7, #12]
 8015d06:	681b      	ldr	r3, [r3, #0]
		if (this->_M_index == __rhs_index)
 8015d08:	7e1b      	ldrb	r3, [r3, #24]
 8015d0a:	461c      	mov	r4, r3
 8015d0c:	1d3b      	adds	r3, r7, #4
 8015d0e:	4618      	mov	r0, r3
 8015d10:	f7f0 f9f4 	bl	80060fc <_ZNKSt17integral_constantIjLj1EEcvjEv>
 8015d14:	4603      	mov	r3, r0
 8015d16:	429c      	cmp	r4, r3
 8015d18:	bf0c      	ite	eq
 8015d1a:	2301      	moveq	r3, #1
 8015d1c:	2300      	movne	r3, #0
 8015d1e:	b2db      	uxtb	r3, r3
 8015d20:	2b00      	cmp	r3, #0
 8015d22:	d00c      	beq.n	8015d3e <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRiSt17integral_constantIjLj1EEEENS0_20__variant_idx_cookieESB_SC_+0x46>
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 8015d24:	68b8      	ldr	r0, [r7, #8]
 8015d26:	f7f1 f9e6 	bl	80070f6 <_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_>
 8015d2a:	4603      	mov	r3, r0
 8015d2c:	681c      	ldr	r4, [r3, #0]
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8015d2e:	68fb      	ldr	r3, [r7, #12]
 8015d30:	681b      	ldr	r3, [r3, #0]
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 8015d32:	4618      	mov	r0, r3
 8015d34:	f000 f816 	bl	8015d64 <_ZNSt8__detail9__variant5__getILj1ERNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcOT0_>
 8015d38:	4603      	mov	r3, r0
 8015d3a:	601c      	str	r4, [r3, #0]
	    return {};
 8015d3c:	e00d      	b.n	8015d5a <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRiSt17integral_constantIjLj1EEEENS0_20__variant_idx_cookieESB_SC_+0x62>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8015d3e:	68fb      	ldr	r3, [r7, #12]
 8015d40:	681b      	ldr	r3, [r3, #0]
		  __variant_cast<_Types...>(*this)
 8015d42:	4618      	mov	r0, r3
 8015d44:	f7fe fd12 	bl	801476c <_ZSt14__variant_castIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNSt8__detail9__variant17_Move_assign_baseILb0EJS5_ifbEEEEDcOT0_>
 8015d48:	4604      	mov	r4, r0
		    .template emplace<__rhs_index>(std::move(__rhs_mem));
 8015d4a:	68b8      	ldr	r0, [r7, #8]
 8015d4c:	f7f1 f9d3 	bl	80070f6 <_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_>
 8015d50:	4603      	mov	r3, r0
		  __variant_cast<_Types...>(*this)
 8015d52:	4619      	mov	r1, r3
 8015d54:	4620      	mov	r0, r4
 8015d56:	f7fa fb79 	bl	801044c <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE7emplaceILj1EJiEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES6_E4typeEDpT0_EERSB_E4typeEDpOSC_>
	    return {};
 8015d5a:	462b      	mov	r3, r5
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8015d5c:	4618      	mov	r0, r3
 8015d5e:	3710      	adds	r7, #16
 8015d60:	46bd      	mov	sp, r7
 8015d62:	bdb0      	pop	{r4, r5, r7, pc}

08015d64 <_ZNSt8__detail9__variant5__getILj1ERNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8015d64:	b590      	push	{r4, r7, lr}
 8015d66:	b083      	sub	sp, #12
 8015d68:	af00      	add	r7, sp, #0
 8015d6a:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8015d6c:	6878      	ldr	r0, [r7, #4]
 8015d6e:	f000 f970 	bl	8016052 <_ZSt7forwardIRNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>
 8015d72:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8015d74:	4619      	mov	r1, r3
 8015d76:	4620      	mov	r0, r4
 8015d78:	f7fa fb28 	bl	80103cc <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8015d7c:	4603      	mov	r3, r0
    }
 8015d7e:	4618      	mov	r0, r3
 8015d80:	370c      	adds	r7, #12
 8015d82:	46bd      	mov	sp, r7
 8015d84:	bd90      	pop	{r4, r7, pc}

08015d86 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRfSt17integral_constantIjLj2EEEENS0_20__variant_idx_cookieESB_SC_>:
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8015d86:	b5b0      	push	{r4, r5, r7, lr}
 8015d88:	b084      	sub	sp, #16
 8015d8a:	af00      	add	r7, sp, #0
 8015d8c:	60f8      	str	r0, [r7, #12]
 8015d8e:	60b9      	str	r1, [r7, #8]
 8015d90:	713a      	strb	r2, [r7, #4]
 8015d92:	68fb      	ldr	r3, [r7, #12]
 8015d94:	681b      	ldr	r3, [r3, #0]
		if (this->_M_index == __rhs_index)
 8015d96:	7e1b      	ldrb	r3, [r3, #24]
 8015d98:	461c      	mov	r4, r3
 8015d9a:	1d3b      	adds	r3, r7, #4
 8015d9c:	4618      	mov	r0, r3
 8015d9e:	f7f0 fa00 	bl	80061a2 <_ZNKSt17integral_constantIjLj2EEcvjEv>
 8015da2:	4603      	mov	r3, r0
 8015da4:	429c      	cmp	r4, r3
 8015da6:	bf0c      	ite	eq
 8015da8:	2301      	moveq	r3, #1
 8015daa:	2300      	movne	r3, #0
 8015dac:	b2db      	uxtb	r3, r3
 8015dae:	2b00      	cmp	r3, #0
 8015db0:	d00c      	beq.n	8015dcc <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRfSt17integral_constantIjLj2EEEENS0_20__variant_idx_cookieESB_SC_+0x46>
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 8015db2:	68b8      	ldr	r0, [r7, #8]
 8015db4:	f7f1 f9c3 	bl	800713e <_ZSt4moveIRfEONSt16remove_referenceIT_E4typeEOS2_>
 8015db8:	4603      	mov	r3, r0
 8015dba:	681c      	ldr	r4, [r3, #0]
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8015dbc:	68fb      	ldr	r3, [r7, #12]
 8015dbe:	681b      	ldr	r3, [r3, #0]
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 8015dc0:	4618      	mov	r0, r3
 8015dc2:	f000 f816 	bl	8015df2 <_ZNSt8__detail9__variant5__getILj2ERNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcOT0_>
 8015dc6:	4603      	mov	r3, r0
 8015dc8:	601c      	str	r4, [r3, #0]
	    return {};
 8015dca:	e00d      	b.n	8015de8 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRfSt17integral_constantIjLj2EEEENS0_20__variant_idx_cookieESB_SC_+0x62>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8015dcc:	68fb      	ldr	r3, [r7, #12]
 8015dce:	681b      	ldr	r3, [r3, #0]
		  __variant_cast<_Types...>(*this)
 8015dd0:	4618      	mov	r0, r3
 8015dd2:	f7fe fccb 	bl	801476c <_ZSt14__variant_castIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNSt8__detail9__variant17_Move_assign_baseILb0EJS5_ifbEEEEDcOT0_>
 8015dd6:	4604      	mov	r4, r0
		    .template emplace<__rhs_index>(std::move(__rhs_mem));
 8015dd8:	68b8      	ldr	r0, [r7, #8]
 8015dda:	f7f1 f9b0 	bl	800713e <_ZSt4moveIRfEONSt16remove_referenceIT_E4typeEOS2_>
 8015dde:	4603      	mov	r3, r0
		  __variant_cast<_Types...>(*this)
 8015de0:	4619      	mov	r1, r3
 8015de2:	4620      	mov	r0, r4
 8015de4:	f7fa fbae 	bl	8010544 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE7emplaceILj2EJfEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES6_E4typeEDpT0_EERSB_E4typeEDpOSC_>
	    return {};
 8015de8:	462b      	mov	r3, r5
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8015dea:	4618      	mov	r0, r3
 8015dec:	3710      	adds	r7, #16
 8015dee:	46bd      	mov	sp, r7
 8015df0:	bdb0      	pop	{r4, r5, r7, pc}

08015df2 <_ZNSt8__detail9__variant5__getILj2ERNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8015df2:	b590      	push	{r4, r7, lr}
 8015df4:	b083      	sub	sp, #12
 8015df6:	af00      	add	r7, sp, #0
 8015df8:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8015dfa:	6878      	ldr	r0, [r7, #4]
 8015dfc:	f000 f929 	bl	8016052 <_ZSt7forwardIRNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>
 8015e00:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8015e02:	4619      	mov	r1, r3
 8015e04:	4620      	mov	r0, r4
 8015e06:	f7fa fb5d 	bl	80104c4 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8015e0a:	4603      	mov	r3, r0
    }
 8015e0c:	4618      	mov	r0, r3
 8015e0e:	370c      	adds	r7, #12
 8015e10:	46bd      	mov	sp, r7
 8015e12:	bd90      	pop	{r4, r7, pc}

08015e14 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRbSt17integral_constantIjLj3EEEENS0_20__variant_idx_cookieESB_SC_>:
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8015e14:	b5b0      	push	{r4, r5, r7, lr}
 8015e16:	b084      	sub	sp, #16
 8015e18:	af00      	add	r7, sp, #0
 8015e1a:	60f8      	str	r0, [r7, #12]
 8015e1c:	60b9      	str	r1, [r7, #8]
 8015e1e:	713a      	strb	r2, [r7, #4]
 8015e20:	68fb      	ldr	r3, [r7, #12]
 8015e22:	681b      	ldr	r3, [r3, #0]
		if (this->_M_index == __rhs_index)
 8015e24:	7e1b      	ldrb	r3, [r3, #24]
 8015e26:	461c      	mov	r4, r3
 8015e28:	1d3b      	adds	r3, r7, #4
 8015e2a:	4618      	mov	r0, r3
 8015e2c:	f7f0 fa18 	bl	8006260 <_ZNKSt17integral_constantIjLj3EEcvjEv>
 8015e30:	4603      	mov	r3, r0
 8015e32:	429c      	cmp	r4, r3
 8015e34:	bf0c      	ite	eq
 8015e36:	2301      	moveq	r3, #1
 8015e38:	2300      	movne	r3, #0
 8015e3a:	b2db      	uxtb	r3, r3
 8015e3c:	2b00      	cmp	r3, #0
 8015e3e:	d00d      	beq.n	8015e5c <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRbSt17integral_constantIjLj3EEEENS0_20__variant_idx_cookieESB_SC_+0x48>
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 8015e40:	68b8      	ldr	r0, [r7, #8]
 8015e42:	f7f1 f9a0 	bl	8007186 <_ZSt4moveIRbEONSt16remove_referenceIT_E4typeEOS2_>
 8015e46:	4603      	mov	r3, r0
 8015e48:	781c      	ldrb	r4, [r3, #0]
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8015e4a:	68fb      	ldr	r3, [r7, #12]
 8015e4c:	681b      	ldr	r3, [r3, #0]
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 8015e4e:	4618      	mov	r0, r3
 8015e50:	f000 f817 	bl	8015e82 <_ZNSt8__detail9__variant5__getILj3ERNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcOT0_>
 8015e54:	4603      	mov	r3, r0
 8015e56:	4622      	mov	r2, r4
 8015e58:	701a      	strb	r2, [r3, #0]
	    return {};
 8015e5a:	e00d      	b.n	8015e78 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRbSt17integral_constantIjLj3EEEENS0_20__variant_idx_cookieESB_SC_+0x64>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8015e5c:	68fb      	ldr	r3, [r7, #12]
 8015e5e:	681b      	ldr	r3, [r3, #0]
		  __variant_cast<_Types...>(*this)
 8015e60:	4618      	mov	r0, r3
 8015e62:	f7fe fc83 	bl	801476c <_ZSt14__variant_castIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNSt8__detail9__variant17_Move_assign_baseILb0EJS5_ifbEEEEDcOT0_>
 8015e66:	4604      	mov	r4, r0
		    .template emplace<__rhs_index>(std::move(__rhs_mem));
 8015e68:	68b8      	ldr	r0, [r7, #8]
 8015e6a:	f7f1 f98c 	bl	8007186 <_ZSt4moveIRbEONSt16remove_referenceIT_E4typeEOS2_>
 8015e6e:	4603      	mov	r3, r0
		  __variant_cast<_Types...>(*this)
 8015e70:	4619      	mov	r1, r3
 8015e72:	4620      	mov	r0, r4
 8015e74:	f000 f8f8 	bl	8016068 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE7emplaceILj3EJbEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES6_E4typeEDpT0_EERSB_E4typeEDpOSC_>
	    return {};
 8015e78:	462b      	mov	r3, r5
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8015e7a:	4618      	mov	r0, r3
 8015e7c:	3710      	adds	r7, #16
 8015e7e:	46bd      	mov	sp, r7
 8015e80:	bdb0      	pop	{r4, r5, r7, pc}

08015e82 <_ZNSt8__detail9__variant5__getILj3ERNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8015e82:	b590      	push	{r4, r7, lr}
 8015e84:	b083      	sub	sp, #12
 8015e86:	af00      	add	r7, sp, #0
 8015e88:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8015e8a:	6878      	ldr	r0, [r7, #4]
 8015e8c:	f000 f8e1 	bl	8016052 <_ZSt7forwardIRNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>
 8015e90:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8015e92:	4619      	mov	r1, r3
 8015e94:	4620      	mov	r0, r4
 8015e96:	f7fa ff78 	bl	8010d8a <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8015e9a:	4603      	mov	r3, r0
    }
 8015e9c:	4618      	mov	r0, r3
 8015e9e:	370c      	adds	r7, #12
 8015ea0:	46bd      	mov	sp, r7
 8015ea2:	bd90      	pop	{r4, r7, pc}

08015ea4 <_ZNKSt6vectorIP10ExpressionSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
 8015ea4:	b580      	push	{r7, lr}
 8015ea6:	b082      	sub	sp, #8
 8015ea8:	af00      	add	r7, sp, #0
 8015eaa:	6078      	str	r0, [r7, #4]
      { return _S_max_size(_M_get_Tp_allocator()); }
 8015eac:	687b      	ldr	r3, [r7, #4]
 8015eae:	4618      	mov	r0, r3
 8015eb0:	f7f8 fb37 	bl	800e522 <_ZNKSt12_Vector_baseIP10ExpressionSaIS1_EE19_M_get_Tp_allocatorEv>
 8015eb4:	4603      	mov	r3, r0
 8015eb6:	4618      	mov	r0, r3
 8015eb8:	f000 f8ef 	bl	801609a <_ZNSt6vectorIP10ExpressionSaIS1_EE11_S_max_sizeERKS2_>
 8015ebc:	4603      	mov	r3, r0
 8015ebe:	4618      	mov	r0, r3
 8015ec0:	3708      	adds	r7, #8
 8015ec2:	46bd      	mov	sp, r7
 8015ec4:	bd80      	pop	{r7, pc}

08015ec6 <_ZSt3maxIjERKT_S2_S2_>:
    max(const _Tp& __a, const _Tp& __b)
 8015ec6:	b480      	push	{r7}
 8015ec8:	b083      	sub	sp, #12
 8015eca:	af00      	add	r7, sp, #0
 8015ecc:	6078      	str	r0, [r7, #4]
 8015ece:	6039      	str	r1, [r7, #0]
      if (__a < __b)
 8015ed0:	687b      	ldr	r3, [r7, #4]
 8015ed2:	681a      	ldr	r2, [r3, #0]
 8015ed4:	683b      	ldr	r3, [r7, #0]
 8015ed6:	681b      	ldr	r3, [r3, #0]
 8015ed8:	429a      	cmp	r2, r3
 8015eda:	d201      	bcs.n	8015ee0 <_ZSt3maxIjERKT_S2_S2_+0x1a>
	return __b;
 8015edc:	683b      	ldr	r3, [r7, #0]
 8015ede:	e000      	b.n	8015ee2 <_ZSt3maxIjERKT_S2_S2_+0x1c>
      return __a;
 8015ee0:	687b      	ldr	r3, [r7, #4]
    }
 8015ee2:	4618      	mov	r0, r3
 8015ee4:	370c      	adds	r7, #12
 8015ee6:	46bd      	mov	sp, r7
 8015ee8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015eec:	4770      	bx	lr

08015eee <_ZNSt6vectorIP10ExpressionSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>:
      _S_do_relocate(pointer __first, pointer __last, pointer __result,
 8015eee:	b580      	push	{r7, lr}
 8015ef0:	b084      	sub	sp, #16
 8015ef2:	af00      	add	r7, sp, #0
 8015ef4:	60f8      	str	r0, [r7, #12]
 8015ef6:	60b9      	str	r1, [r7, #8]
 8015ef8:	607a      	str	r2, [r7, #4]
 8015efa:	603b      	str	r3, [r7, #0]
	return std::__relocate_a(__first, __last, __result, __alloc);
 8015efc:	683b      	ldr	r3, [r7, #0]
 8015efe:	687a      	ldr	r2, [r7, #4]
 8015f00:	68b9      	ldr	r1, [r7, #8]
 8015f02:	68f8      	ldr	r0, [r7, #12]
 8015f04:	f000 f8e3 	bl	80160ce <_ZSt12__relocate_aIPP10ExpressionS2_SaIS1_EET0_T_S5_S4_RT1_>
 8015f08:	4603      	mov	r3, r0
      }
 8015f0a:	4618      	mov	r0, r3
 8015f0c:	3710      	adds	r7, #16
 8015f0e:	46bd      	mov	sp, r7
 8015f10:	bd80      	pop	{r7, pc}

08015f12 <_ZNKSt6vectorIP4BodySaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
 8015f12:	b580      	push	{r7, lr}
 8015f14:	b082      	sub	sp, #8
 8015f16:	af00      	add	r7, sp, #0
 8015f18:	6078      	str	r0, [r7, #4]
      { return _S_max_size(_M_get_Tp_allocator()); }
 8015f1a:	687b      	ldr	r3, [r7, #4]
 8015f1c:	4618      	mov	r0, r3
 8015f1e:	f000 f90d 	bl	801613c <_ZNKSt12_Vector_baseIP4BodySaIS1_EE19_M_get_Tp_allocatorEv>
 8015f22:	4603      	mov	r3, r0
 8015f24:	4618      	mov	r0, r3
 8015f26:	f000 f8ef 	bl	8016108 <_ZNSt6vectorIP4BodySaIS1_EE11_S_max_sizeERKS2_>
 8015f2a:	4603      	mov	r3, r0
 8015f2c:	4618      	mov	r0, r3
 8015f2e:	3708      	adds	r7, #8
 8015f30:	46bd      	mov	sp, r7
 8015f32:	bd80      	pop	{r7, pc}

08015f34 <_ZNSt16allocator_traitsISaIP4BodyEE8allocateERS2_j>:
      allocate(allocator_type& __a, size_type __n)
 8015f34:	b580      	push	{r7, lr}
 8015f36:	b082      	sub	sp, #8
 8015f38:	af00      	add	r7, sp, #0
 8015f3a:	6078      	str	r0, [r7, #4]
 8015f3c:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 8015f3e:	2200      	movs	r2, #0
 8015f40:	6839      	ldr	r1, [r7, #0]
 8015f42:	6878      	ldr	r0, [r7, #4]
 8015f44:	f000 f905 	bl	8016152 <_ZN9__gnu_cxx13new_allocatorIP4BodyE8allocateEjPKv>
 8015f48:	4603      	mov	r3, r0
 8015f4a:	4618      	mov	r0, r3
 8015f4c:	3708      	adds	r7, #8
 8015f4e:	46bd      	mov	sp, r7
 8015f50:	bd80      	pop	{r7, pc}

08015f52 <_ZNSt6vectorIP4BodySaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>:
      _S_do_relocate(pointer __first, pointer __last, pointer __result,
 8015f52:	b580      	push	{r7, lr}
 8015f54:	b084      	sub	sp, #16
 8015f56:	af00      	add	r7, sp, #0
 8015f58:	60f8      	str	r0, [r7, #12]
 8015f5a:	60b9      	str	r1, [r7, #8]
 8015f5c:	607a      	str	r2, [r7, #4]
 8015f5e:	603b      	str	r3, [r7, #0]
	return std::__relocate_a(__first, __last, __result, __alloc);
 8015f60:	683b      	ldr	r3, [r7, #0]
 8015f62:	687a      	ldr	r2, [r7, #4]
 8015f64:	68b9      	ldr	r1, [r7, #8]
 8015f66:	68f8      	ldr	r0, [r7, #12]
 8015f68:	f000 f912 	bl	8016190 <_ZSt12__relocate_aIPP4BodyS2_SaIS1_EET0_T_S5_S4_RT1_>
 8015f6c:	4603      	mov	r3, r0
      }
 8015f6e:	4618      	mov	r0, r3
 8015f70:	3710      	adds	r7, #16
 8015f72:	46bd      	mov	sp, r7
 8015f74:	bd80      	pop	{r7, pc}

08015f76 <_ZSt11__addressofIP10AssignmentEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 8015f76:	b480      	push	{r7}
 8015f78:	b083      	sub	sp, #12
 8015f7a:	af00      	add	r7, sp, #0
 8015f7c:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 8015f7e:	687b      	ldr	r3, [r7, #4]
 8015f80:	4618      	mov	r0, r3
 8015f82:	370c      	adds	r7, #12
 8015f84:	46bd      	mov	sp, r7
 8015f86:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015f8a:	4770      	bx	lr

08015f8c <_ZSt11__addressofIP11Method_callEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 8015f8c:	b480      	push	{r7}
 8015f8e:	b083      	sub	sp, #12
 8015f90:	af00      	add	r7, sp, #0
 8015f92:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 8015f94:	687b      	ldr	r3, [r7, #4]
 8015f96:	4618      	mov	r0, r3
 8015f98:	370c      	adds	r7, #12
 8015f9a:	46bd      	mov	sp, r7
 8015f9c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015fa0:	4770      	bx	lr

08015fa2 <_ZSt11__addressofIP15While_statementEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 8015fa2:	b480      	push	{r7}
 8015fa4:	b083      	sub	sp, #12
 8015fa6:	af00      	add	r7, sp, #0
 8015fa8:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 8015faa:	687b      	ldr	r3, [r7, #4]
 8015fac:	4618      	mov	r0, r3
 8015fae:	370c      	adds	r7, #12
 8015fb0:	46bd      	mov	sp, r7
 8015fb2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015fb6:	4770      	bx	lr

08015fb8 <_ZSt11__addressofIP12If_statementEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 8015fb8:	b480      	push	{r7}
 8015fba:	b083      	sub	sp, #12
 8015fbc:	af00      	add	r7, sp, #0
 8015fbe:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 8015fc0:	687b      	ldr	r3, [r7, #4]
 8015fc2:	4618      	mov	r0, r3
 8015fc4:	370c      	adds	r7, #12
 8015fc6:	46bd      	mov	sp, r7
 8015fc8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015fcc:	4770      	bx	lr

08015fce <_ZNKSt6vectorIP9StatementSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
 8015fce:	b580      	push	{r7, lr}
 8015fd0:	b082      	sub	sp, #8
 8015fd2:	af00      	add	r7, sp, #0
 8015fd4:	6078      	str	r0, [r7, #4]
      { return _S_max_size(_M_get_Tp_allocator()); }
 8015fd6:	687b      	ldr	r3, [r7, #4]
 8015fd8:	4618      	mov	r0, r3
 8015fda:	f000 f910 	bl	80161fe <_ZNKSt12_Vector_baseIP9StatementSaIS1_EE19_M_get_Tp_allocatorEv>
 8015fde:	4603      	mov	r3, r0
 8015fe0:	4618      	mov	r0, r3
 8015fe2:	f000 f8f2 	bl	80161ca <_ZNSt6vectorIP9StatementSaIS1_EE11_S_max_sizeERKS2_>
 8015fe6:	4603      	mov	r3, r0
 8015fe8:	4618      	mov	r0, r3
 8015fea:	3708      	adds	r7, #8
 8015fec:	46bd      	mov	sp, r7
 8015fee:	bd80      	pop	{r7, pc}

08015ff0 <_ZNKSt6vectorIP9StatementSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 8015ff0:	b480      	push	{r7}
 8015ff2:	b083      	sub	sp, #12
 8015ff4:	af00      	add	r7, sp, #0
 8015ff6:	6078      	str	r0, [r7, #4]
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 8015ff8:	687b      	ldr	r3, [r7, #4]
 8015ffa:	685a      	ldr	r2, [r3, #4]
 8015ffc:	687b      	ldr	r3, [r7, #4]
 8015ffe:	681b      	ldr	r3, [r3, #0]
 8016000:	1ad3      	subs	r3, r2, r3
 8016002:	109b      	asrs	r3, r3, #2
 8016004:	4618      	mov	r0, r3
 8016006:	370c      	adds	r7, #12
 8016008:	46bd      	mov	sp, r7
 801600a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801600e:	4770      	bx	lr

08016010 <_ZNSt16allocator_traitsISaIP9StatementEE8allocateERS2_j>:
      allocate(allocator_type& __a, size_type __n)
 8016010:	b580      	push	{r7, lr}
 8016012:	b082      	sub	sp, #8
 8016014:	af00      	add	r7, sp, #0
 8016016:	6078      	str	r0, [r7, #4]
 8016018:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 801601a:	2200      	movs	r2, #0
 801601c:	6839      	ldr	r1, [r7, #0]
 801601e:	6878      	ldr	r0, [r7, #4]
 8016020:	f000 f8f8 	bl	8016214 <_ZN9__gnu_cxx13new_allocatorIP9StatementE8allocateEjPKv>
 8016024:	4603      	mov	r3, r0
 8016026:	4618      	mov	r0, r3
 8016028:	3708      	adds	r7, #8
 801602a:	46bd      	mov	sp, r7
 801602c:	bd80      	pop	{r7, pc}

0801602e <_ZNSt6vectorIP9StatementSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>:
      _S_do_relocate(pointer __first, pointer __last, pointer __result,
 801602e:	b580      	push	{r7, lr}
 8016030:	b084      	sub	sp, #16
 8016032:	af00      	add	r7, sp, #0
 8016034:	60f8      	str	r0, [r7, #12]
 8016036:	60b9      	str	r1, [r7, #8]
 8016038:	607a      	str	r2, [r7, #4]
 801603a:	603b      	str	r3, [r7, #0]
	return std::__relocate_a(__first, __last, __result, __alloc);
 801603c:	683b      	ldr	r3, [r7, #0]
 801603e:	687a      	ldr	r2, [r7, #4]
 8016040:	68b9      	ldr	r1, [r7, #8]
 8016042:	68f8      	ldr	r0, [r7, #12]
 8016044:	f000 f905 	bl	8016252 <_ZSt12__relocate_aIPP9StatementS2_SaIS1_EET0_T_S5_S4_RT1_>
 8016048:	4603      	mov	r3, r0
      }
 801604a:	4618      	mov	r0, r3
 801604c:	3710      	adds	r7, #16
 801604e:	46bd      	mov	sp, r7
 8016050:	bd80      	pop	{r7, pc}

08016052 <_ZSt7forwardIRNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8016052:	b480      	push	{r7}
 8016054:	b083      	sub	sp, #12
 8016056:	af00      	add	r7, sp, #0
 8016058:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801605a:	687b      	ldr	r3, [r7, #4]
 801605c:	4618      	mov	r0, r3
 801605e:	370c      	adds	r7, #12
 8016060:	46bd      	mov	sp, r7
 8016062:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016066:	4770      	bx	lr

08016068 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE7emplaceILj3EJbEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES6_E4typeEDpT0_EERSB_E4typeEDpOSC_>:
	emplace(_Args&&... __args)
 8016068:	b580      	push	{r7, lr}
 801606a:	b082      	sub	sp, #8
 801606c:	af00      	add	r7, sp, #0
 801606e:	6078      	str	r0, [r7, #4]
 8016070:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 8016072:	687b      	ldr	r3, [r7, #4]
 8016074:	4618      	mov	r0, r3
 8016076:	f7fa f84c 	bl	8010112 <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 801607a:	6838      	ldr	r0, [r7, #0]
 801607c:	f7f1 fe14 	bl	8007ca8 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
 8016080:	4603      	mov	r3, r0
 8016082:	4619      	mov	r1, r3
 8016084:	6878      	ldr	r0, [r7, #4]
 8016086:	f000 f901 	bl	801628c <_ZSt28__variant_construct_by_indexILj3ESt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEJbEEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 801608a:	6878      	ldr	r0, [r7, #4]
 801608c:	f000 f91e 	bl	80162cc <_ZSt3getILj3EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>
 8016090:	4603      	mov	r3, r0
	}
 8016092:	4618      	mov	r0, r3
 8016094:	3708      	adds	r7, #8
 8016096:	46bd      	mov	sp, r7
 8016098:	bd80      	pop	{r7, pc}

0801609a <_ZNSt6vectorIP10ExpressionSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
 801609a:	b580      	push	{r7, lr}
 801609c:	b084      	sub	sp, #16
 801609e:	af00      	add	r7, sp, #0
 80160a0:	6078      	str	r0, [r7, #4]
	const size_t __diffmax
 80160a2:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
 80160a6:	60fb      	str	r3, [r7, #12]
	const size_t __allocmax = _Alloc_traits::max_size(__a);
 80160a8:	6878      	ldr	r0, [r7, #4]
 80160aa:	f000 f93f 	bl	801632c <_ZNSt16allocator_traitsISaIP10ExpressionEE8max_sizeERKS2_>
 80160ae:	4603      	mov	r3, r0
 80160b0:	60bb      	str	r3, [r7, #8]
	return (std::min)(__diffmax, __allocmax);
 80160b2:	f107 0208 	add.w	r2, r7, #8
 80160b6:	f107 030c 	add.w	r3, r7, #12
 80160ba:	4611      	mov	r1, r2
 80160bc:	4618      	mov	r0, r3
 80160be:	f000 f921 	bl	8016304 <_ZSt3minIjERKT_S2_S2_>
 80160c2:	4603      	mov	r3, r0
 80160c4:	681b      	ldr	r3, [r3, #0]
      }
 80160c6:	4618      	mov	r0, r3
 80160c8:	3710      	adds	r7, #16
 80160ca:	46bd      	mov	sp, r7
 80160cc:	bd80      	pop	{r7, pc}

080160ce <_ZSt12__relocate_aIPP10ExpressionS2_SaIS1_EET0_T_S5_S4_RT1_>:
    }

  template <typename _InputIterator, typename _ForwardIterator,
	    typename _Allocator>
    inline _ForwardIterator
    __relocate_a(_InputIterator __first, _InputIterator __last,
 80160ce:	b5b0      	push	{r4, r5, r7, lr}
 80160d0:	b084      	sub	sp, #16
 80160d2:	af00      	add	r7, sp, #0
 80160d4:	60f8      	str	r0, [r7, #12]
 80160d6:	60b9      	str	r1, [r7, #8]
 80160d8:	607a      	str	r2, [r7, #4]
 80160da:	603b      	str	r3, [r7, #0]
		 _ForwardIterator __result, _Allocator& __alloc)
    noexcept(noexcept(__relocate_a_1(std::__niter_base(__first),
				     std::__niter_base(__last),
				     std::__niter_base(__result), __alloc)))
    {
      return __relocate_a_1(std::__niter_base(__first),
 80160dc:	68f8      	ldr	r0, [r7, #12]
 80160de:	f7f8 fded 	bl	800ecbc <_ZSt12__niter_baseIPP10ExpressionET_S3_>
 80160e2:	4604      	mov	r4, r0
 80160e4:	68b8      	ldr	r0, [r7, #8]
 80160e6:	f7f8 fde9 	bl	800ecbc <_ZSt12__niter_baseIPP10ExpressionET_S3_>
 80160ea:	4605      	mov	r5, r0
 80160ec:	6878      	ldr	r0, [r7, #4]
 80160ee:	f7f8 fde5 	bl	800ecbc <_ZSt12__niter_baseIPP10ExpressionET_S3_>
 80160f2:	4602      	mov	r2, r0
 80160f4:	683b      	ldr	r3, [r7, #0]
 80160f6:	4629      	mov	r1, r5
 80160f8:	4620      	mov	r0, r4
 80160fa:	f000 f923 	bl	8016344 <_ZSt14__relocate_a_1IP10ExpressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
 80160fe:	4603      	mov	r3, r0
			    std::__niter_base(__last),
			    std::__niter_base(__result), __alloc);
    }
 8016100:	4618      	mov	r0, r3
 8016102:	3710      	adds	r7, #16
 8016104:	46bd      	mov	sp, r7
 8016106:	bdb0      	pop	{r4, r5, r7, pc}

08016108 <_ZNSt6vectorIP4BodySaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
 8016108:	b580      	push	{r7, lr}
 801610a:	b084      	sub	sp, #16
 801610c:	af00      	add	r7, sp, #0
 801610e:	6078      	str	r0, [r7, #4]
	const size_t __diffmax
 8016110:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
 8016114:	60fb      	str	r3, [r7, #12]
	const size_t __allocmax = _Alloc_traits::max_size(__a);
 8016116:	6878      	ldr	r0, [r7, #4]
 8016118:	f000 f932 	bl	8016380 <_ZNSt16allocator_traitsISaIP4BodyEE8max_sizeERKS2_>
 801611c:	4603      	mov	r3, r0
 801611e:	60bb      	str	r3, [r7, #8]
	return (std::min)(__diffmax, __allocmax);
 8016120:	f107 0208 	add.w	r2, r7, #8
 8016124:	f107 030c 	add.w	r3, r7, #12
 8016128:	4611      	mov	r1, r2
 801612a:	4618      	mov	r0, r3
 801612c:	f000 f8ea 	bl	8016304 <_ZSt3minIjERKT_S2_S2_>
 8016130:	4603      	mov	r3, r0
 8016132:	681b      	ldr	r3, [r3, #0]
      }
 8016134:	4618      	mov	r0, r3
 8016136:	3710      	adds	r7, #16
 8016138:	46bd      	mov	sp, r7
 801613a:	bd80      	pop	{r7, pc}

0801613c <_ZNKSt12_Vector_baseIP4BodySaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 801613c:	b480      	push	{r7}
 801613e:	b083      	sub	sp, #12
 8016140:	af00      	add	r7, sp, #0
 8016142:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 8016144:	687b      	ldr	r3, [r7, #4]
 8016146:	4618      	mov	r0, r3
 8016148:	370c      	adds	r7, #12
 801614a:	46bd      	mov	sp, r7
 801614c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016150:	4770      	bx	lr

08016152 <_ZN9__gnu_cxx13new_allocatorIP4BodyE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 8016152:	b580      	push	{r7, lr}
 8016154:	b084      	sub	sp, #16
 8016156:	af00      	add	r7, sp, #0
 8016158:	60f8      	str	r0, [r7, #12]
 801615a:	60b9      	str	r1, [r7, #8]
 801615c:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 801615e:	68f8      	ldr	r0, [r7, #12]
 8016160:	f000 f91a 	bl	8016398 <_ZNK9__gnu_cxx13new_allocatorIP4BodyE8max_sizeEv>
 8016164:	4602      	mov	r2, r0
 8016166:	68bb      	ldr	r3, [r7, #8]
 8016168:	4293      	cmp	r3, r2
 801616a:	bf8c      	ite	hi
 801616c:	2301      	movhi	r3, #1
 801616e:	2300      	movls	r3, #0
 8016170:	b2db      	uxtb	r3, r3
 8016172:	2b00      	cmp	r3, #0
 8016174:	d001      	beq.n	801617a <_ZN9__gnu_cxx13new_allocatorIP4BodyE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 8016176:	f00d fa83 	bl	8023680 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 801617a:	68bb      	ldr	r3, [r7, #8]
 801617c:	009b      	lsls	r3, r3, #2
 801617e:	4618      	mov	r0, r3
 8016180:	f00d f9b9 	bl	80234f6 <_Znwj>
 8016184:	4603      	mov	r3, r0
 8016186:	bf00      	nop
      }
 8016188:	4618      	mov	r0, r3
 801618a:	3710      	adds	r7, #16
 801618c:	46bd      	mov	sp, r7
 801618e:	bd80      	pop	{r7, pc}

08016190 <_ZSt12__relocate_aIPP4BodyS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
 8016190:	b5b0      	push	{r4, r5, r7, lr}
 8016192:	b084      	sub	sp, #16
 8016194:	af00      	add	r7, sp, #0
 8016196:	60f8      	str	r0, [r7, #12]
 8016198:	60b9      	str	r1, [r7, #8]
 801619a:	607a      	str	r2, [r7, #4]
 801619c:	603b      	str	r3, [r7, #0]
      return __relocate_a_1(std::__niter_base(__first),
 801619e:	68f8      	ldr	r0, [r7, #12]
 80161a0:	f000 f906 	bl	80163b0 <_ZSt12__niter_baseIPP4BodyET_S3_>
 80161a4:	4604      	mov	r4, r0
 80161a6:	68b8      	ldr	r0, [r7, #8]
 80161a8:	f000 f902 	bl	80163b0 <_ZSt12__niter_baseIPP4BodyET_S3_>
 80161ac:	4605      	mov	r5, r0
 80161ae:	6878      	ldr	r0, [r7, #4]
 80161b0:	f000 f8fe 	bl	80163b0 <_ZSt12__niter_baseIPP4BodyET_S3_>
 80161b4:	4602      	mov	r2, r0
 80161b6:	683b      	ldr	r3, [r7, #0]
 80161b8:	4629      	mov	r1, r5
 80161ba:	4620      	mov	r0, r4
 80161bc:	f000 f903 	bl	80163c6 <_ZSt14__relocate_a_1IP4BodyS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
 80161c0:	4603      	mov	r3, r0
    }
 80161c2:	4618      	mov	r0, r3
 80161c4:	3710      	adds	r7, #16
 80161c6:	46bd      	mov	sp, r7
 80161c8:	bdb0      	pop	{r4, r5, r7, pc}

080161ca <_ZNSt6vectorIP9StatementSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
 80161ca:	b580      	push	{r7, lr}
 80161cc:	b084      	sub	sp, #16
 80161ce:	af00      	add	r7, sp, #0
 80161d0:	6078      	str	r0, [r7, #4]
	const size_t __diffmax
 80161d2:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
 80161d6:	60fb      	str	r3, [r7, #12]
	const size_t __allocmax = _Alloc_traits::max_size(__a);
 80161d8:	6878      	ldr	r0, [r7, #4]
 80161da:	f000 f912 	bl	8016402 <_ZNSt16allocator_traitsISaIP9StatementEE8max_sizeERKS2_>
 80161de:	4603      	mov	r3, r0
 80161e0:	60bb      	str	r3, [r7, #8]
	return (std::min)(__diffmax, __allocmax);
 80161e2:	f107 0208 	add.w	r2, r7, #8
 80161e6:	f107 030c 	add.w	r3, r7, #12
 80161ea:	4611      	mov	r1, r2
 80161ec:	4618      	mov	r0, r3
 80161ee:	f000 f889 	bl	8016304 <_ZSt3minIjERKT_S2_S2_>
 80161f2:	4603      	mov	r3, r0
 80161f4:	681b      	ldr	r3, [r3, #0]
      }
 80161f6:	4618      	mov	r0, r3
 80161f8:	3710      	adds	r7, #16
 80161fa:	46bd      	mov	sp, r7
 80161fc:	bd80      	pop	{r7, pc}

080161fe <_ZNKSt12_Vector_baseIP9StatementSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 80161fe:	b480      	push	{r7}
 8016200:	b083      	sub	sp, #12
 8016202:	af00      	add	r7, sp, #0
 8016204:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 8016206:	687b      	ldr	r3, [r7, #4]
 8016208:	4618      	mov	r0, r3
 801620a:	370c      	adds	r7, #12
 801620c:	46bd      	mov	sp, r7
 801620e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016212:	4770      	bx	lr

08016214 <_ZN9__gnu_cxx13new_allocatorIP9StatementE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 8016214:	b580      	push	{r7, lr}
 8016216:	b084      	sub	sp, #16
 8016218:	af00      	add	r7, sp, #0
 801621a:	60f8      	str	r0, [r7, #12]
 801621c:	60b9      	str	r1, [r7, #8]
 801621e:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 8016220:	68f8      	ldr	r0, [r7, #12]
 8016222:	f000 f8fa 	bl	801641a <_ZNK9__gnu_cxx13new_allocatorIP9StatementE8max_sizeEv>
 8016226:	4602      	mov	r2, r0
 8016228:	68bb      	ldr	r3, [r7, #8]
 801622a:	4293      	cmp	r3, r2
 801622c:	bf8c      	ite	hi
 801622e:	2301      	movhi	r3, #1
 8016230:	2300      	movls	r3, #0
 8016232:	b2db      	uxtb	r3, r3
 8016234:	2b00      	cmp	r3, #0
 8016236:	d001      	beq.n	801623c <_ZN9__gnu_cxx13new_allocatorIP9StatementE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 8016238:	f00d fa22 	bl	8023680 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 801623c:	68bb      	ldr	r3, [r7, #8]
 801623e:	009b      	lsls	r3, r3, #2
 8016240:	4618      	mov	r0, r3
 8016242:	f00d f958 	bl	80234f6 <_Znwj>
 8016246:	4603      	mov	r3, r0
 8016248:	bf00      	nop
      }
 801624a:	4618      	mov	r0, r3
 801624c:	3710      	adds	r7, #16
 801624e:	46bd      	mov	sp, r7
 8016250:	bd80      	pop	{r7, pc}

08016252 <_ZSt12__relocate_aIPP9StatementS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
 8016252:	b5b0      	push	{r4, r5, r7, lr}
 8016254:	b084      	sub	sp, #16
 8016256:	af00      	add	r7, sp, #0
 8016258:	60f8      	str	r0, [r7, #12]
 801625a:	60b9      	str	r1, [r7, #8]
 801625c:	607a      	str	r2, [r7, #4]
 801625e:	603b      	str	r3, [r7, #0]
      return __relocate_a_1(std::__niter_base(__first),
 8016260:	68f8      	ldr	r0, [r7, #12]
 8016262:	f000 f8e6 	bl	8016432 <_ZSt12__niter_baseIPP9StatementET_S3_>
 8016266:	4604      	mov	r4, r0
 8016268:	68b8      	ldr	r0, [r7, #8]
 801626a:	f000 f8e2 	bl	8016432 <_ZSt12__niter_baseIPP9StatementET_S3_>
 801626e:	4605      	mov	r5, r0
 8016270:	6878      	ldr	r0, [r7, #4]
 8016272:	f000 f8de 	bl	8016432 <_ZSt12__niter_baseIPP9StatementET_S3_>
 8016276:	4602      	mov	r2, r0
 8016278:	683b      	ldr	r3, [r7, #0]
 801627a:	4629      	mov	r1, r5
 801627c:	4620      	mov	r0, r4
 801627e:	f000 f8e3 	bl	8016448 <_ZSt14__relocate_a_1IP9StatementS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
 8016282:	4603      	mov	r3, r0
    }
 8016284:	4618      	mov	r0, r3
 8016286:	3710      	adds	r7, #16
 8016288:	46bd      	mov	sp, r7
 801628a:	bdb0      	pop	{r4, r5, r7, pc}

0801628c <_ZSt28__variant_construct_by_indexILj3ESt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEJbEEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 801628c:	b590      	push	{r4, r7, lr}
 801628e:	b085      	sub	sp, #20
 8016290:	af00      	add	r7, sp, #0
 8016292:	6078      	str	r0, [r7, #4]
 8016294:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 8016296:	687b      	ldr	r3, [r7, #4]
 8016298:	2203      	movs	r2, #3
 801629a:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 801629c:	6878      	ldr	r0, [r7, #4]
 801629e:	f7fa fd86 	bl	8010dae <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 80162a2:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 80162a4:	6838      	ldr	r0, [r7, #0]
 80162a6:	f7f1 fcff 	bl	8007ca8 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
 80162aa:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 80162ac:	781c      	ldrb	r4, [r3, #0]
 80162ae:	68f8      	ldr	r0, [r7, #12]
 80162b0:	f7f2 fa84 	bl	80087bc <_ZSt9addressofIbEPT_RS0_>
 80162b4:	4603      	mov	r3, r0
 80162b6:	4619      	mov	r1, r3
 80162b8:	2001      	movs	r0, #1
 80162ba:	f7ea fece 	bl	800105a <_ZnwjPv>
 80162be:	4603      	mov	r3, r0
 80162c0:	4622      	mov	r2, r4
 80162c2:	701a      	strb	r2, [r3, #0]
    }
 80162c4:	bf00      	nop
 80162c6:	3714      	adds	r7, #20
 80162c8:	46bd      	mov	sp, r7
 80162ca:	bd90      	pop	{r4, r7, pc}

080162cc <_ZSt3getILj3EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>:
    get(variant<_Types...>& __v)
 80162cc:	b580      	push	{r7, lr}
 80162ce:	b082      	sub	sp, #8
 80162d0:	af00      	add	r7, sp, #0
 80162d2:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 80162d4:	6878      	ldr	r0, [r7, #4]
 80162d6:	f7f9 fe3f 	bl	800ff58 <_ZNKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE5indexEv>
 80162da:	4603      	mov	r3, r0
 80162dc:	2b03      	cmp	r3, #3
 80162de:	bf14      	ite	ne
 80162e0:	2301      	movne	r3, #1
 80162e2:	2300      	moveq	r3, #0
 80162e4:	b2db      	uxtb	r3, r3
 80162e6:	2b00      	cmp	r3, #0
 80162e8:	d002      	beq.n	80162f0 <_ZSt3getILj3EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_+0x24>
	__throw_bad_variant_access("Unexpected index");
 80162ea:	4805      	ldr	r0, [pc, #20]	; (8016300 <_ZSt3getILj3EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_+0x34>)
 80162ec:	f7ea fec1 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 80162f0:	6878      	ldr	r0, [r7, #4]
 80162f2:	f7fa fd5c 	bl	8010dae <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 80162f6:	4603      	mov	r3, r0
    }
 80162f8:	4618      	mov	r0, r3
 80162fa:	3708      	adds	r7, #8
 80162fc:	46bd      	mov	sp, r7
 80162fe:	bd80      	pop	{r7, pc}
 8016300:	080299f0 	.word	0x080299f0

08016304 <_ZSt3minIjERKT_S2_S2_>:
    min(const _Tp& __a, const _Tp& __b)
 8016304:	b480      	push	{r7}
 8016306:	b083      	sub	sp, #12
 8016308:	af00      	add	r7, sp, #0
 801630a:	6078      	str	r0, [r7, #4]
 801630c:	6039      	str	r1, [r7, #0]
      if (__b < __a)
 801630e:	683b      	ldr	r3, [r7, #0]
 8016310:	681a      	ldr	r2, [r3, #0]
 8016312:	687b      	ldr	r3, [r7, #4]
 8016314:	681b      	ldr	r3, [r3, #0]
 8016316:	429a      	cmp	r2, r3
 8016318:	d201      	bcs.n	801631e <_ZSt3minIjERKT_S2_S2_+0x1a>
	return __b;
 801631a:	683b      	ldr	r3, [r7, #0]
 801631c:	e000      	b.n	8016320 <_ZSt3minIjERKT_S2_S2_+0x1c>
      return __a;
 801631e:	687b      	ldr	r3, [r7, #4]
    }
 8016320:	4618      	mov	r0, r3
 8016322:	370c      	adds	r7, #12
 8016324:	46bd      	mov	sp, r7
 8016326:	f85d 7b04 	ldr.w	r7, [sp], #4
 801632a:	4770      	bx	lr

0801632c <_ZNSt16allocator_traitsISaIP10ExpressionEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a) noexcept
 801632c:	b580      	push	{r7, lr}
 801632e:	b082      	sub	sp, #8
 8016330:	af00      	add	r7, sp, #0
 8016332:	6078      	str	r0, [r7, #4]
      { return __a.max_size(); }
 8016334:	6878      	ldr	r0, [r7, #4]
 8016336:	f7f8 fca7 	bl	800ec88 <_ZNK9__gnu_cxx13new_allocatorIP10ExpressionE8max_sizeEv>
 801633a:	4603      	mov	r3, r0
 801633c:	4618      	mov	r0, r3
 801633e:	3708      	adds	r7, #8
 8016340:	46bd      	mov	sp, r7
 8016342:	bd80      	pop	{r7, pc}

08016344 <_ZSt14__relocate_a_1IP10ExpressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
 8016344:	b580      	push	{r7, lr}
 8016346:	b086      	sub	sp, #24
 8016348:	af00      	add	r7, sp, #0
 801634a:	60f8      	str	r0, [r7, #12]
 801634c:	60b9      	str	r1, [r7, #8]
 801634e:	607a      	str	r2, [r7, #4]
 8016350:	603b      	str	r3, [r7, #0]
      ptrdiff_t __count = __last - __first;
 8016352:	68ba      	ldr	r2, [r7, #8]
 8016354:	68fb      	ldr	r3, [r7, #12]
 8016356:	1ad3      	subs	r3, r2, r3
 8016358:	109b      	asrs	r3, r3, #2
 801635a:	617b      	str	r3, [r7, #20]
      if (__count > 0)
 801635c:	697b      	ldr	r3, [r7, #20]
 801635e:	2b00      	cmp	r3, #0
 8016360:	dd06      	ble.n	8016370 <_ZSt14__relocate_a_1IP10ExpressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x2c>
	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 8016362:	697b      	ldr	r3, [r7, #20]
 8016364:	009b      	lsls	r3, r3, #2
 8016366:	461a      	mov	r2, r3
 8016368:	68f9      	ldr	r1, [r7, #12]
 801636a:	6878      	ldr	r0, [r7, #4]
 801636c:	f00e fd7e 	bl	8024e6c <memmove>
      return __result + __count;
 8016370:	697b      	ldr	r3, [r7, #20]
 8016372:	009b      	lsls	r3, r3, #2
 8016374:	687a      	ldr	r2, [r7, #4]
 8016376:	4413      	add	r3, r2
    }
 8016378:	4618      	mov	r0, r3
 801637a:	3718      	adds	r7, #24
 801637c:	46bd      	mov	sp, r7
 801637e:	bd80      	pop	{r7, pc}

08016380 <_ZNSt16allocator_traitsISaIP4BodyEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a) noexcept
 8016380:	b580      	push	{r7, lr}
 8016382:	b082      	sub	sp, #8
 8016384:	af00      	add	r7, sp, #0
 8016386:	6078      	str	r0, [r7, #4]
      { return __a.max_size(); }
 8016388:	6878      	ldr	r0, [r7, #4]
 801638a:	f000 f805 	bl	8016398 <_ZNK9__gnu_cxx13new_allocatorIP4BodyE8max_sizeEv>
 801638e:	4603      	mov	r3, r0
 8016390:	4618      	mov	r0, r3
 8016392:	3708      	adds	r7, #8
 8016394:	46bd      	mov	sp, r7
 8016396:	bd80      	pop	{r7, pc}

08016398 <_ZNK9__gnu_cxx13new_allocatorIP4BodyE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 8016398:	b480      	push	{r7}
 801639a:	b083      	sub	sp, #12
 801639c:	af00      	add	r7, sp, #0
 801639e:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 80163a0:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
      }
 80163a4:	4618      	mov	r0, r3
 80163a6:	370c      	adds	r7, #12
 80163a8:	46bd      	mov	sp, r7
 80163aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80163ae:	4770      	bx	lr

080163b0 <_ZSt12__niter_baseIPP4BodyET_S3_>:
    __niter_base(_Iterator __it)
 80163b0:	b480      	push	{r7}
 80163b2:	b083      	sub	sp, #12
 80163b4:	af00      	add	r7, sp, #0
 80163b6:	6078      	str	r0, [r7, #4]
    { return __it; }
 80163b8:	687b      	ldr	r3, [r7, #4]
 80163ba:	4618      	mov	r0, r3
 80163bc:	370c      	adds	r7, #12
 80163be:	46bd      	mov	sp, r7
 80163c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80163c4:	4770      	bx	lr

080163c6 <_ZSt14__relocate_a_1IP4BodyS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
 80163c6:	b580      	push	{r7, lr}
 80163c8:	b086      	sub	sp, #24
 80163ca:	af00      	add	r7, sp, #0
 80163cc:	60f8      	str	r0, [r7, #12]
 80163ce:	60b9      	str	r1, [r7, #8]
 80163d0:	607a      	str	r2, [r7, #4]
 80163d2:	603b      	str	r3, [r7, #0]
      ptrdiff_t __count = __last - __first;
 80163d4:	68ba      	ldr	r2, [r7, #8]
 80163d6:	68fb      	ldr	r3, [r7, #12]
 80163d8:	1ad3      	subs	r3, r2, r3
 80163da:	109b      	asrs	r3, r3, #2
 80163dc:	617b      	str	r3, [r7, #20]
      if (__count > 0)
 80163de:	697b      	ldr	r3, [r7, #20]
 80163e0:	2b00      	cmp	r3, #0
 80163e2:	dd06      	ble.n	80163f2 <_ZSt14__relocate_a_1IP4BodyS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x2c>
	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 80163e4:	697b      	ldr	r3, [r7, #20]
 80163e6:	009b      	lsls	r3, r3, #2
 80163e8:	461a      	mov	r2, r3
 80163ea:	68f9      	ldr	r1, [r7, #12]
 80163ec:	6878      	ldr	r0, [r7, #4]
 80163ee:	f00e fd3d 	bl	8024e6c <memmove>
      return __result + __count;
 80163f2:	697b      	ldr	r3, [r7, #20]
 80163f4:	009b      	lsls	r3, r3, #2
 80163f6:	687a      	ldr	r2, [r7, #4]
 80163f8:	4413      	add	r3, r2
    }
 80163fa:	4618      	mov	r0, r3
 80163fc:	3718      	adds	r7, #24
 80163fe:	46bd      	mov	sp, r7
 8016400:	bd80      	pop	{r7, pc}

08016402 <_ZNSt16allocator_traitsISaIP9StatementEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a) noexcept
 8016402:	b580      	push	{r7, lr}
 8016404:	b082      	sub	sp, #8
 8016406:	af00      	add	r7, sp, #0
 8016408:	6078      	str	r0, [r7, #4]
      { return __a.max_size(); }
 801640a:	6878      	ldr	r0, [r7, #4]
 801640c:	f000 f805 	bl	801641a <_ZNK9__gnu_cxx13new_allocatorIP9StatementE8max_sizeEv>
 8016410:	4603      	mov	r3, r0
 8016412:	4618      	mov	r0, r3
 8016414:	3708      	adds	r7, #8
 8016416:	46bd      	mov	sp, r7
 8016418:	bd80      	pop	{r7, pc}

0801641a <_ZNK9__gnu_cxx13new_allocatorIP9StatementE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 801641a:	b480      	push	{r7}
 801641c:	b083      	sub	sp, #12
 801641e:	af00      	add	r7, sp, #0
 8016420:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 8016422:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
      }
 8016426:	4618      	mov	r0, r3
 8016428:	370c      	adds	r7, #12
 801642a:	46bd      	mov	sp, r7
 801642c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016430:	4770      	bx	lr

08016432 <_ZSt12__niter_baseIPP9StatementET_S3_>:
    __niter_base(_Iterator __it)
 8016432:	b480      	push	{r7}
 8016434:	b083      	sub	sp, #12
 8016436:	af00      	add	r7, sp, #0
 8016438:	6078      	str	r0, [r7, #4]
    { return __it; }
 801643a:	687b      	ldr	r3, [r7, #4]
 801643c:	4618      	mov	r0, r3
 801643e:	370c      	adds	r7, #12
 8016440:	46bd      	mov	sp, r7
 8016442:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016446:	4770      	bx	lr

08016448 <_ZSt14__relocate_a_1IP9StatementS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
 8016448:	b580      	push	{r7, lr}
 801644a:	b086      	sub	sp, #24
 801644c:	af00      	add	r7, sp, #0
 801644e:	60f8      	str	r0, [r7, #12]
 8016450:	60b9      	str	r1, [r7, #8]
 8016452:	607a      	str	r2, [r7, #4]
 8016454:	603b      	str	r3, [r7, #0]
      ptrdiff_t __count = __last - __first;
 8016456:	68ba      	ldr	r2, [r7, #8]
 8016458:	68fb      	ldr	r3, [r7, #12]
 801645a:	1ad3      	subs	r3, r2, r3
 801645c:	109b      	asrs	r3, r3, #2
 801645e:	617b      	str	r3, [r7, #20]
      if (__count > 0)
 8016460:	697b      	ldr	r3, [r7, #20]
 8016462:	2b00      	cmp	r3, #0
 8016464:	dd06      	ble.n	8016474 <_ZSt14__relocate_a_1IP9StatementS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x2c>
	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 8016466:	697b      	ldr	r3, [r7, #20]
 8016468:	009b      	lsls	r3, r3, #2
 801646a:	461a      	mov	r2, r3
 801646c:	68f9      	ldr	r1, [r7, #12]
 801646e:	6878      	ldr	r0, [r7, #4]
 8016470:	f00e fcfc 	bl	8024e6c <memmove>
      return __result + __count;
 8016474:	697b      	ldr	r3, [r7, #20]
 8016476:	009b      	lsls	r3, r3, #2
 8016478:	687a      	ldr	r2, [r7, #4]
 801647a:	4413      	add	r3, r2
    }
 801647c:	4618      	mov	r0, r3
 801647e:	3718      	adds	r7, #24
 8016480:	46bd      	mov	sp, r7
 8016482:	bd80      	pop	{r7, pc}

08016484 <_Z41__static_initialization_and_destruction_0ii>:
 8016484:	b590      	push	{r4, r7, lr}
 8016486:	b0e7      	sub	sp, #412	; 0x19c
 8016488:	af02      	add	r7, sp, #8
 801648a:	1d3b      	adds	r3, r7, #4
 801648c:	6018      	str	r0, [r3, #0]
 801648e:	463b      	mov	r3, r7
 8016490:	6019      	str	r1, [r3, #0]
 8016492:	1d3b      	adds	r3, r7, #4
 8016494:	681b      	ldr	r3, [r3, #0]
 8016496:	2b01      	cmp	r3, #1
 8016498:	f040 819d 	bne.w	80167d6 <_Z41__static_initialization_and_destruction_0ii+0x352>
 801649c:	463b      	mov	r3, r7
 801649e:	681b      	ldr	r3, [r3, #0]
 80164a0:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80164a4:	4293      	cmp	r3, r2
 80164a6:	f040 8196 	bne.w	80167d6 <_Z41__static_initialization_and_destruction_0ii+0x352>
};
 80164aa:	f107 0314 	add.w	r3, r7, #20
 80164ae:	4618      	mov	r0, r3
 80164b0:	2322      	movs	r3, #34	; 0x22
 80164b2:	461a      	mov	r2, r3
 80164b4:	2100      	movs	r1, #0
 80164b6:	f00e fcf3 	bl	8024ea0 <memset>
 80164ba:	f107 0314 	add.w	r3, r7, #20
 80164be:	223a      	movs	r2, #58	; 0x3a
 80164c0:	701a      	strb	r2, [r3, #0]
 80164c2:	f107 0314 	add.w	r3, r7, #20
 80164c6:	2201      	movs	r2, #1
 80164c8:	705a      	strb	r2, [r3, #1]
 80164ca:	f107 0314 	add.w	r3, r7, #20
 80164ce:	220a      	movs	r2, #10
 80164d0:	709a      	strb	r2, [r3, #2]
 80164d2:	f107 0314 	add.w	r3, r7, #20
 80164d6:	220a      	movs	r2, #10
 80164d8:	70da      	strb	r2, [r3, #3]
 80164da:	f107 0314 	add.w	r3, r7, #20
 80164de:	222c      	movs	r2, #44	; 0x2c
 80164e0:	711a      	strb	r2, [r3, #4]
 80164e2:	f107 0314 	add.w	r3, r7, #20
 80164e6:	220c      	movs	r2, #12
 80164e8:	715a      	strb	r2, [r3, #5]
 80164ea:	f107 0314 	add.w	r3, r7, #20
 80164ee:	222e      	movs	r2, #46	; 0x2e
 80164f0:	719a      	strb	r2, [r3, #6]
 80164f2:	f107 0314 	add.w	r3, r7, #20
 80164f6:	220b      	movs	r2, #11
 80164f8:	71da      	strb	r2, [r3, #7]
 80164fa:	f107 0314 	add.w	r3, r7, #20
 80164fe:	225b      	movs	r2, #91	; 0x5b
 8016500:	721a      	strb	r2, [r3, #8]
 8016502:	f107 0314 	add.w	r3, r7, #20
 8016506:	220d      	movs	r2, #13
 8016508:	725a      	strb	r2, [r3, #9]
 801650a:	f107 0314 	add.w	r3, r7, #20
 801650e:	225d      	movs	r2, #93	; 0x5d
 8016510:	729a      	strb	r2, [r3, #10]
 8016512:	f107 0314 	add.w	r3, r7, #20
 8016516:	220e      	movs	r2, #14
 8016518:	72da      	strb	r2, [r3, #11]
 801651a:	f107 0314 	add.w	r3, r7, #20
 801651e:	227c      	movs	r2, #124	; 0x7c
 8016520:	731a      	strb	r2, [r3, #12]
 8016522:	f107 0314 	add.w	r3, r7, #20
 8016526:	2215      	movs	r2, #21
 8016528:	735a      	strb	r2, [r3, #13]
 801652a:	f107 0314 	add.w	r3, r7, #20
 801652e:	2226      	movs	r2, #38	; 0x26
 8016530:	739a      	strb	r2, [r3, #14]
 8016532:	f107 0314 	add.w	r3, r7, #20
 8016536:	2216      	movs	r2, #22
 8016538:	73da      	strb	r2, [r3, #15]
 801653a:	f107 0314 	add.w	r3, r7, #20
 801653e:	222b      	movs	r2, #43	; 0x2b
 8016540:	741a      	strb	r2, [r3, #16]
 8016542:	f107 0314 	add.w	r3, r7, #20
 8016546:	221f      	movs	r2, #31
 8016548:	745a      	strb	r2, [r3, #17]
 801654a:	f107 0314 	add.w	r3, r7, #20
 801654e:	222d      	movs	r2, #45	; 0x2d
 8016550:	749a      	strb	r2, [r3, #18]
 8016552:	f107 0314 	add.w	r3, r7, #20
 8016556:	2220      	movs	r2, #32
 8016558:	74da      	strb	r2, [r3, #19]
 801655a:	f107 0314 	add.w	r3, r7, #20
 801655e:	222a      	movs	r2, #42	; 0x2a
 8016560:	751a      	strb	r2, [r3, #20]
 8016562:	f107 0314 	add.w	r3, r7, #20
 8016566:	2221      	movs	r2, #33	; 0x21
 8016568:	755a      	strb	r2, [r3, #21]
 801656a:	f107 0314 	add.w	r3, r7, #20
 801656e:	222f      	movs	r2, #47	; 0x2f
 8016570:	759a      	strb	r2, [r3, #22]
 8016572:	f107 0314 	add.w	r3, r7, #20
 8016576:	2222      	movs	r2, #34	; 0x22
 8016578:	75da      	strb	r2, [r3, #23]
 801657a:	f107 0314 	add.w	r3, r7, #20
 801657e:	225e      	movs	r2, #94	; 0x5e
 8016580:	761a      	strb	r2, [r3, #24]
 8016582:	f107 0314 	add.w	r3, r7, #20
 8016586:	2223      	movs	r2, #35	; 0x23
 8016588:	765a      	strb	r2, [r3, #25]
 801658a:	f107 0314 	add.w	r3, r7, #20
 801658e:	2225      	movs	r2, #37	; 0x25
 8016590:	769a      	strb	r2, [r3, #26]
 8016592:	f107 0314 	add.w	r3, r7, #20
 8016596:	2224      	movs	r2, #36	; 0x24
 8016598:	76da      	strb	r2, [r3, #27]
 801659a:	f107 0314 	add.w	r3, r7, #20
 801659e:	2228      	movs	r2, #40	; 0x28
 80165a0:	771a      	strb	r2, [r3, #28]
 80165a2:	f107 0314 	add.w	r3, r7, #20
 80165a6:	2226      	movs	r2, #38	; 0x26
 80165a8:	775a      	strb	r2, [r3, #29]
 80165aa:	f107 0314 	add.w	r3, r7, #20
 80165ae:	2229      	movs	r2, #41	; 0x29
 80165b0:	779a      	strb	r2, [r3, #30]
 80165b2:	f107 0314 	add.w	r3, r7, #20
 80165b6:	2227      	movs	r2, #39	; 0x27
 80165b8:	77da      	strb	r2, [r3, #31]
 80165ba:	f107 0314 	add.w	r3, r7, #20
 80165be:	2225      	movs	r2, #37	; 0x25
 80165c0:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 80165c4:	f107 030c 	add.w	r3, r7, #12
 80165c8:	f107 0214 	add.w	r2, r7, #20
 80165cc:	601a      	str	r2, [r3, #0]
 80165ce:	f107 030c 	add.w	r3, r7, #12
 80165d2:	2211      	movs	r2, #17
 80165d4:	605a      	str	r2, [r3, #4]
 80165d6:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 80165da:	4618      	mov	r0, r3
 80165dc:	f7eb fb82 	bl	8001ce4 <_ZNSaISt4pairIKc10token_typeEEC1Ev>
 80165e0:	f107 0138 	add.w	r1, r7, #56	; 0x38
 80165e4:	f107 020c 	add.w	r2, r7, #12
 80165e8:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 80165ec:	9300      	str	r3, [sp, #0]
 80165ee:	460b      	mov	r3, r1
 80165f0:	ca06      	ldmia	r2, {r1, r2}
 80165f2:	4885      	ldr	r0, [pc, #532]	; (8016808 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 80165f4:	f7eb fb8e 	bl	8001d14 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 80165f8:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 80165fc:	4618      	mov	r0, r3
 80165fe:	f7eb fb7d 	bl	8001cfc <_ZNSaISt4pairIKc10token_typeEED1Ev>
	{"true", TOKEN_TRUE},
 8016602:	2305      	movs	r3, #5
 8016604:	f887 3162 	strb.w	r3, [r7, #354]	; 0x162
};
 8016608:	f507 72b1 	add.w	r2, r7, #354	; 0x162
 801660c:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8016610:	497e      	ldr	r1, [pc, #504]	; (801680c <_Z41__static_initialization_and_destruction_0ii+0x388>)
 8016612:	4618      	mov	r0, r3
 8016614:	f7ea fd70 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"false", TOKEN_FALSE},
 8016618:	2306      	movs	r3, #6
 801661a:	f887 3163 	strb.w	r3, [r7, #355]	; 0x163
};
 801661e:	f207 1263 	addw	r2, r7, #355	; 0x163
 8016622:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8016626:	331c      	adds	r3, #28
 8016628:	4979      	ldr	r1, [pc, #484]	; (8016810 <_Z41__static_initialization_and_destruction_0ii+0x38c>)
 801662a:	4618      	mov	r0, r3
 801662c:	f7ea fd8c 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"setup", TOKEN_SETUP},
 8016630:	2307      	movs	r3, #7
 8016632:	f887 3164 	strb.w	r3, [r7, #356]	; 0x164
};
 8016636:	f507 72b2 	add.w	r2, r7, #356	; 0x164
 801663a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801663e:	3338      	adds	r3, #56	; 0x38
 8016640:	4974      	ldr	r1, [pc, #464]	; (8016814 <_Z41__static_initialization_and_destruction_0ii+0x390>)
 8016642:	4618      	mov	r0, r3
 8016644:	f7ea fd80 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"loop", TOKEN_LOOP},
 8016648:	2308      	movs	r3, #8
 801664a:	f887 3165 	strb.w	r3, [r7, #357]	; 0x165
};
 801664e:	f207 1265 	addw	r2, r7, #357	; 0x165
 8016652:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8016656:	3354      	adds	r3, #84	; 0x54
 8016658:	496f      	ldr	r1, [pc, #444]	; (8016818 <_Z41__static_initialization_and_destruction_0ii+0x394>)
 801665a:	4618      	mov	r0, r3
 801665c:	f7ea fd4c 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"finish", TOKEN_FINISH},
 8016660:	2309      	movs	r3, #9
 8016662:	f887 3166 	strb.w	r3, [r7, #358]	; 0x166
};
 8016666:	f507 72b3 	add.w	r2, r7, #358	; 0x166
 801666a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801666e:	3370      	adds	r3, #112	; 0x70
 8016670:	496a      	ldr	r1, [pc, #424]	; (801681c <_Z41__static_initialization_and_destruction_0ii+0x398>)
 8016672:	4618      	mov	r0, r3
 8016674:	f7ea fd90 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"if", TOKEN_IF},
 8016678:	2310      	movs	r3, #16
 801667a:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167
};
 801667e:	f207 1267 	addw	r2, r7, #359	; 0x167
 8016682:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8016686:	338c      	adds	r3, #140	; 0x8c
 8016688:	4965      	ldr	r1, [pc, #404]	; (8016820 <_Z41__static_initialization_and_destruction_0ii+0x39c>)
 801668a:	4618      	mov	r0, r3
 801668c:	f7ea fdac 	bl	80011e8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>
	{"elseif", TOKEN_ELSEIF},
 8016690:	2311      	movs	r3, #17
 8016692:	f887 3168 	strb.w	r3, [r7, #360]	; 0x168
};
 8016696:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 801669a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801669e:	33a8      	adds	r3, #168	; 0xa8
 80166a0:	4960      	ldr	r1, [pc, #384]	; (8016824 <_Z41__static_initialization_and_destruction_0ii+0x3a0>)
 80166a2:	4618      	mov	r0, r3
 80166a4:	f7ea fd78 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"else", TOKEN_ELSE},
 80166a8:	2312      	movs	r3, #18
 80166aa:	f887 3169 	strb.w	r3, [r7, #361]	; 0x169
};
 80166ae:	f207 1269 	addw	r2, r7, #361	; 0x169
 80166b2:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80166b6:	33c4      	adds	r3, #196	; 0xc4
 80166b8:	495b      	ldr	r1, [pc, #364]	; (8016828 <_Z41__static_initialization_and_destruction_0ii+0x3a4>)
 80166ba:	4618      	mov	r0, r3
 80166bc:	f7ea fd1c 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"while", TOKEN_WHILE},
 80166c0:	2313      	movs	r3, #19
 80166c2:	f887 316a 	strb.w	r3, [r7, #362]	; 0x16a
};
 80166c6:	f507 72b5 	add.w	r2, r7, #362	; 0x16a
 80166ca:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80166ce:	33e0      	adds	r3, #224	; 0xe0
 80166d0:	4956      	ldr	r1, [pc, #344]	; (801682c <_Z41__static_initialization_and_destruction_0ii+0x3a8>)
 80166d2:	4618      	mov	r0, r3
 80166d4:	f7ea fd38 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"end", TOKEN_END},
 80166d8:	2314      	movs	r3, #20
 80166da:	f887 316b 	strb.w	r3, [r7, #363]	; 0x16b
};
 80166de:	f207 126b 	addw	r2, r7, #363	; 0x16b
 80166e2:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80166e6:	33fc      	adds	r3, #252	; 0xfc
 80166e8:	4951      	ldr	r1, [pc, #324]	; (8016830 <_Z41__static_initialization_and_destruction_0ii+0x3ac>)
 80166ea:	4618      	mov	r0, r3
 80166ec:	f7ea fda4 	bl	8001238 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>
 80166f0:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80166f4:	f107 0248 	add.w	r2, r7, #72	; 0x48
 80166f8:	601a      	str	r2, [r3, #0]
 80166fa:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80166fe:	220a      	movs	r2, #10
 8016700:	605a      	str	r2, [r3, #4]
 8016702:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8016706:	4618      	mov	r0, r3
 8016708:	f7eb fb91 	bl	8001e2e <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 801670c:	f507 71b6 	add.w	r1, r7, #364	; 0x16c
 8016710:	f107 0240 	add.w	r2, r7, #64	; 0x40
 8016714:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8016718:	9300      	str	r3, [sp, #0]
 801671a:	460b      	mov	r3, r1
 801671c:	ca06      	ldmia	r2, {r1, r2}
 801671e:	4845      	ldr	r0, [pc, #276]	; (8016834 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 8016720:	f7eb fb9d 	bl	8001e5e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>
 8016724:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8016728:	4618      	mov	r0, r3
 801672a:	f7eb fb8c 	bl	8001e46 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 801672e:	f107 0448 	add.w	r4, r7, #72	; 0x48
 8016732:	f504 748c 	add.w	r4, r4, #280	; 0x118
 8016736:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801673a:	429c      	cmp	r4, r3
 801673c:	d004      	beq.n	8016748 <_Z41__static_initialization_and_destruction_0ii+0x2c4>
 801673e:	3c1c      	subs	r4, #28
 8016740:	4620      	mov	r0, r4
 8016742:	f7ea fccc 	bl	80010de <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 8016746:	e7f6      	b.n	8016736 <_Z41__static_initialization_and_destruction_0ii+0x2b2>
};
 8016748:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 801674c:	2200      	movs	r2, #0
 801674e:	601a      	str	r2, [r3, #0]
 8016750:	605a      	str	r2, [r3, #4]
 8016752:	609a      	str	r2, [r3, #8]
 8016754:	233c      	movs	r3, #60	; 0x3c
 8016756:	f887 317c 	strb.w	r3, [r7, #380]	; 0x17c
 801675a:	231b      	movs	r3, #27
 801675c:	f887 317d 	strb.w	r3, [r7, #381]	; 0x17d
 8016760:	231c      	movs	r3, #28
 8016762:	f887 317e 	strb.w	r3, [r7, #382]	; 0x17e
 8016766:	233e      	movs	r3, #62	; 0x3e
 8016768:	f887 317f 	strb.w	r3, [r7, #383]	; 0x17f
 801676c:	2319      	movs	r3, #25
 801676e:	f887 3180 	strb.w	r3, [r7, #384]	; 0x180
 8016772:	231a      	movs	r3, #26
 8016774:	f887 3181 	strb.w	r3, [r7, #385]	; 0x181
 8016778:	233d      	movs	r3, #61	; 0x3d
 801677a:	f887 3182 	strb.w	r3, [r7, #386]	; 0x182
 801677e:	2318      	movs	r3, #24
 8016780:	f887 3183 	strb.w	r3, [r7, #387]	; 0x183
 8016784:	231d      	movs	r3, #29
 8016786:	f887 3184 	strb.w	r3, [r7, #388]	; 0x184
 801678a:	2321      	movs	r3, #33	; 0x21
 801678c:	f887 3185 	strb.w	r3, [r7, #389]	; 0x185
 8016790:	2317      	movs	r3, #23
 8016792:	f887 3186 	strb.w	r3, [r7, #390]	; 0x186
 8016796:	231e      	movs	r3, #30
 8016798:	f887 3187 	strb.w	r3, [r7, #391]	; 0x187
 801679c:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 80167a0:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 80167a4:	2304      	movs	r3, #4
 80167a6:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 80167aa:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 80167ae:	4618      	mov	r0, r3
 80167b0:	f7eb fb85 	bl	8001ebe <_ZNSaISt4pairIKc12double_tokenEEC1Ev>
 80167b4:	f507 72c4 	add.w	r2, r7, #392	; 0x188
 80167b8:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 80167bc:	9300      	str	r3, [sp, #0]
 80167be:	4613      	mov	r3, r2
 80167c0:	f507 72ba 	add.w	r2, r7, #372	; 0x174
 80167c4:	ca06      	ldmia	r2, {r1, r2}
 80167c6:	481c      	ldr	r0, [pc, #112]	; (8016838 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 80167c8:	f7eb fb91 	bl	8001eee <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 80167cc:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 80167d0:	4618      	mov	r0, r3
 80167d2:	f7eb fb80 	bl	8001ed6 <_ZNSaISt4pairIKc12double_tokenEED1Ev>
static const std::map<char, double_token> token_double_chars
 80167d6:	1d3b      	adds	r3, r7, #4
 80167d8:	681b      	ldr	r3, [r3, #0]
 80167da:	2b00      	cmp	r3, #0
 80167dc:	d10e      	bne.n	80167fc <_Z41__static_initialization_and_destruction_0ii+0x378>
 80167de:	463b      	mov	r3, r7
 80167e0:	681b      	ldr	r3, [r3, #0]
 80167e2:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80167e6:	4293      	cmp	r3, r2
 80167e8:	d108      	bne.n	80167fc <_Z41__static_initialization_and_destruction_0ii+0x378>
 80167ea:	4813      	ldr	r0, [pc, #76]	; (8016838 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 80167ec:	f7f3 f84a 	bl	8009884 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>
static const std::map<std::string, token_type> token_strings
 80167f0:	4810      	ldr	r0, [pc, #64]	; (8016834 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 80167f2:	f7f3 f854 	bl	800989e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
static const std::map<char, token_type> token_chars
 80167f6:	4804      	ldr	r0, [pc, #16]	; (8016808 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 80167f8:	f7f3 f85e 	bl	80098b8 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>
 80167fc:	bf00      	nop
 80167fe:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 8016802:	46bd      	mov	sp, r7
 8016804:	bd90      	pop	{r4, r7, pc}
 8016806:	bf00      	nop
 8016808:	20000424 	.word	0x20000424
 801680c:	08029a4c 	.word	0x08029a4c
 8016810:	08029a54 	.word	0x08029a54
 8016814:	08029a5c 	.word	0x08029a5c
 8016818:	08029a64 	.word	0x08029a64
 801681c:	08029a6c 	.word	0x08029a6c
 8016820:	08029a74 	.word	0x08029a74
 8016824:	08029a78 	.word	0x08029a78
 8016828:	08029a80 	.word	0x08029a80
 801682c:	08029a88 	.word	0x08029a88
 8016830:	08029a90 	.word	0x08029a90
 8016834:	2000043c 	.word	0x2000043c
 8016838:	20000454 	.word	0x20000454

0801683c <_GLOBAL__sub_I__ZN7ProgramD2Ev>:
 801683c:	b580      	push	{r7, lr}
 801683e:	af00      	add	r7, sp, #0
 8016840:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8016844:	2001      	movs	r0, #1
 8016846:	f7ff fe1d 	bl	8016484 <_Z41__static_initialization_and_destruction_0ii>
 801684a:	bd80      	pop	{r7, pc}

0801684c <_GLOBAL__sub_D__ZN7ProgramD2Ev>:
 801684c:	b580      	push	{r7, lr}
 801684e:	af00      	add	r7, sp, #0
 8016850:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8016854:	2000      	movs	r0, #0
 8016856:	f7ff fe15 	bl	8016484 <_Z41__static_initialization_and_destruction_0ii>
 801685a:	bd80      	pop	{r7, pc}

0801685c <_ZN16Position_counterC1Ev>:
#include <Position_counter.h>

Position_counter::Position_counter()
 801685c:	b480      	push	{r7}
 801685e:	b083      	sub	sp, #12
 8016860:	af00      	add	r7, sp, #0
 8016862:	6078      	str	r0, [r7, #4]
{
	line = 1;
 8016864:	687b      	ldr	r3, [r7, #4]
 8016866:	2201      	movs	r2, #1
 8016868:	601a      	str	r2, [r3, #0]
	position = 0;
 801686a:	687b      	ldr	r3, [r7, #4]
 801686c:	2200      	movs	r2, #0
 801686e:	605a      	str	r2, [r3, #4]
}
 8016870:	687b      	ldr	r3, [r7, #4]
 8016872:	4618      	mov	r0, r3
 8016874:	370c      	adds	r7, #12
 8016876:	46bd      	mov	sp, r7
 8016878:	f85d 7b04 	ldr.w	r7, [sp], #4
 801687c:	4770      	bx	lr
	...

08016880 <_ZN16Position_counter12get_instanceEv>:

Position_counter& Position_counter::get_instance()
{
 8016880:	b580      	push	{r7, lr}
 8016882:	af00      	add	r7, sp, #0
	static Position_counter instance;
 8016884:	4b10      	ldr	r3, [pc, #64]	; (80168c8 <_ZN16Position_counter12get_instanceEv+0x48>)
 8016886:	781b      	ldrb	r3, [r3, #0]
 8016888:	f3bf 8f5b 	dmb	ish
 801688c:	b2db      	uxtb	r3, r3
 801688e:	f003 0301 	and.w	r3, r3, #1
 8016892:	2b00      	cmp	r3, #0
 8016894:	bf0c      	ite	eq
 8016896:	2301      	moveq	r3, #1
 8016898:	2300      	movne	r3, #0
 801689a:	b2db      	uxtb	r3, r3
 801689c:	2b00      	cmp	r3, #0
 801689e:	d010      	beq.n	80168c2 <_ZN16Position_counter12get_instanceEv+0x42>
 80168a0:	4809      	ldr	r0, [pc, #36]	; (80168c8 <_ZN16Position_counter12get_instanceEv+0x48>)
 80168a2:	f00c fe19 	bl	80234d8 <__cxa_guard_acquire>
 80168a6:	4603      	mov	r3, r0
 80168a8:	2b00      	cmp	r3, #0
 80168aa:	bf14      	ite	ne
 80168ac:	2301      	movne	r3, #1
 80168ae:	2300      	moveq	r3, #0
 80168b0:	b2db      	uxtb	r3, r3
 80168b2:	2b00      	cmp	r3, #0
 80168b4:	d005      	beq.n	80168c2 <_ZN16Position_counter12get_instanceEv+0x42>
 80168b6:	4805      	ldr	r0, [pc, #20]	; (80168cc <_ZN16Position_counter12get_instanceEv+0x4c>)
 80168b8:	f7ff ffd0 	bl	801685c <_ZN16Position_counterC1Ev>
 80168bc:	4802      	ldr	r0, [pc, #8]	; (80168c8 <_ZN16Position_counter12get_instanceEv+0x48>)
 80168be:	f00c fe17 	bl	80234f0 <__cxa_guard_release>
	return instance;
 80168c2:	4b02      	ldr	r3, [pc, #8]	; (80168cc <_ZN16Position_counter12get_instanceEv+0x4c>)
}
 80168c4:	4618      	mov	r0, r3
 80168c6:	bd80      	pop	{r7, pc}
 80168c8:	200004a0 	.word	0x200004a0
 80168cc:	20000490 	.word	0x20000490

080168d0 <_ZN16Position_counter15update_positionEh>:

void Position_counter::update_position(uint8_t rx_buffer)
{
 80168d0:	b480      	push	{r7}
 80168d2:	b083      	sub	sp, #12
 80168d4:	af00      	add	r7, sp, #0
 80168d6:	6078      	str	r0, [r7, #4]
 80168d8:	460b      	mov	r3, r1
 80168da:	70fb      	strb	r3, [r7, #3]
	last_char = rx_buffer;
 80168dc:	687b      	ldr	r3, [r7, #4]
 80168de:	78fa      	ldrb	r2, [r7, #3]
 80168e0:	721a      	strb	r2, [r3, #8]
	if (rx_buffer == '\n')
 80168e2:	78fb      	ldrb	r3, [r7, #3]
 80168e4:	2b0a      	cmp	r3, #10
 80168e6:	d10c      	bne.n	8016902 <_ZN16Position_counter15update_positionEh+0x32>
	{
		++line;
 80168e8:	687b      	ldr	r3, [r7, #4]
 80168ea:	681b      	ldr	r3, [r3, #0]
 80168ec:	1c5a      	adds	r2, r3, #1
 80168ee:	687b      	ldr	r3, [r7, #4]
 80168f0:	601a      	str	r2, [r3, #0]
		last_line_length = position;
 80168f2:	687b      	ldr	r3, [r7, #4]
 80168f4:	685a      	ldr	r2, [r3, #4]
 80168f6:	687b      	ldr	r3, [r7, #4]
 80168f8:	60da      	str	r2, [r3, #12]
		position = 0;
 80168fa:	687b      	ldr	r3, [r7, #4]
 80168fc:	2200      	movs	r2, #0
 80168fe:	605a      	str	r2, [r3, #4]
	}
	else
	{
		++position;
	}
}
 8016900:	e004      	b.n	801690c <_ZN16Position_counter15update_positionEh+0x3c>
		++position;
 8016902:	687b      	ldr	r3, [r7, #4]
 8016904:	685b      	ldr	r3, [r3, #4]
 8016906:	1c5a      	adds	r2, r3, #1
 8016908:	687b      	ldr	r3, [r7, #4]
 801690a:	605a      	str	r2, [r3, #4]
}
 801690c:	bf00      	nop
 801690e:	370c      	adds	r7, #12
 8016910:	46bd      	mov	sp, r7
 8016912:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016916:	4770      	bx	lr

08016918 <_ZN16Position_counter8get_lineEv>:

int Position_counter::get_line()
{
 8016918:	b480      	push	{r7}
 801691a:	b083      	sub	sp, #12
 801691c:	af00      	add	r7, sp, #0
 801691e:	6078      	str	r0, [r7, #4]
	if (last_char == '\n')
 8016920:	687b      	ldr	r3, [r7, #4]
 8016922:	7a1b      	ldrb	r3, [r3, #8]
 8016924:	2b0a      	cmp	r3, #10
 8016926:	d103      	bne.n	8016930 <_ZN16Position_counter8get_lineEv+0x18>
	{
		return line - 1;
 8016928:	687b      	ldr	r3, [r7, #4]
 801692a:	681b      	ldr	r3, [r3, #0]
 801692c:	3b01      	subs	r3, #1
 801692e:	e001      	b.n	8016934 <_ZN16Position_counter8get_lineEv+0x1c>
	}
	else
	{
		return line;
 8016930:	687b      	ldr	r3, [r7, #4]
 8016932:	681b      	ldr	r3, [r3, #0]
	}
}
 8016934:	4618      	mov	r0, r3
 8016936:	370c      	adds	r7, #12
 8016938:	46bd      	mov	sp, r7
 801693a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801693e:	4770      	bx	lr

08016940 <_ZN16Position_counter12get_positionEv>:

int Position_counter::get_position()
{
 8016940:	b480      	push	{r7}
 8016942:	b083      	sub	sp, #12
 8016944:	af00      	add	r7, sp, #0
 8016946:	6078      	str	r0, [r7, #4]
	if (last_char == '\n')
 8016948:	687b      	ldr	r3, [r7, #4]
 801694a:	7a1b      	ldrb	r3, [r3, #8]
 801694c:	2b0a      	cmp	r3, #10
 801694e:	d102      	bne.n	8016956 <_ZN16Position_counter12get_positionEv+0x16>
	{
		return last_line_length;
 8016950:	687b      	ldr	r3, [r7, #4]
 8016952:	68db      	ldr	r3, [r3, #12]
 8016954:	e001      	b.n	801695a <_ZN16Position_counter12get_positionEv+0x1a>
	}
	else
	{
		return position;
 8016956:	687b      	ldr	r3, [r7, #4]
 8016958:	685b      	ldr	r3, [r3, #4]
	}
}
 801695a:	4618      	mov	r0, r3
 801695c:	370c      	adds	r7, #12
 801695e:	46bd      	mov	sp, r7
 8016960:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016964:	4770      	bx	lr

08016966 <_ZN16Position_counter8set_lineEi>:

void Position_counter::set_line(int line)
{
 8016966:	b480      	push	{r7}
 8016968:	b083      	sub	sp, #12
 801696a:	af00      	add	r7, sp, #0
 801696c:	6078      	str	r0, [r7, #4]
 801696e:	6039      	str	r1, [r7, #0]
	this->line = line;
 8016970:	687b      	ldr	r3, [r7, #4]
 8016972:	683a      	ldr	r2, [r7, #0]
 8016974:	601a      	str	r2, [r3, #0]
}
 8016976:	bf00      	nop
 8016978:	370c      	adds	r7, #12
 801697a:	46bd      	mov	sp, r7
 801697c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016980:	4770      	bx	lr

08016982 <_ZN16Position_counter12set_positionEi>:

void Position_counter::set_position(int position)
{
 8016982:	b480      	push	{r7}
 8016984:	b083      	sub	sp, #12
 8016986:	af00      	add	r7, sp, #0
 8016988:	6078      	str	r0, [r7, #4]
 801698a:	6039      	str	r1, [r7, #0]
	this->position = position;
 801698c:	687b      	ldr	r3, [r7, #4]
 801698e:	683a      	ldr	r2, [r7, #0]
 8016990:	605a      	str	r2, [r3, #4]
}
 8016992:	bf00      	nop
 8016994:	370c      	adds	r7, #12
 8016996:	46bd      	mov	sp, r7
 8016998:	f85d 7b04 	ldr.w	r7, [sp], #4
 801699c:	4770      	bx	lr

0801699e <_ZN13Function_callD1Ev>:
	{
		delete b;
	}
}

Function_call::~Function_call()
 801699e:	b590      	push	{r4, r7, lr}
 80169a0:	b087      	sub	sp, #28
 80169a2:	af00      	add	r7, sp, #0
 80169a4:	6078      	str	r0, [r7, #4]
{
	for (Expression *e : arguments)
 80169a6:	687b      	ldr	r3, [r7, #4]
 80169a8:	3320      	adds	r3, #32
 80169aa:	617b      	str	r3, [r7, #20]
 80169ac:	6978      	ldr	r0, [r7, #20]
 80169ae:	f7fe ff35 	bl	801581c <_ZNSt6vectorIP10ExpressionSaIS1_EE5beginEv>
 80169b2:	4603      	mov	r3, r0
 80169b4:	60fb      	str	r3, [r7, #12]
 80169b6:	6978      	ldr	r0, [r7, #20]
 80169b8:	f7fe fb6a 	bl	8015090 <_ZNSt6vectorIP10ExpressionSaIS1_EE3endEv>
 80169bc:	4603      	mov	r3, r0
 80169be:	60bb      	str	r3, [r7, #8]
 80169c0:	f107 0208 	add.w	r2, r7, #8
 80169c4:	f107 030c 	add.w	r3, r7, #12
 80169c8:	4611      	mov	r1, r2
 80169ca:	4618      	mov	r0, r3
 80169cc:	f000 f843 	bl	8016a56 <_ZN9__gnu_cxxneIPP10ExpressionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
 80169d0:	4603      	mov	r3, r0
 80169d2:	2b00      	cmp	r3, #0
 80169d4:	d017      	beq.n	8016a06 <_ZN13Function_callD1Ev+0x68>
 80169d6:	f107 030c 	add.w	r3, r7, #12
 80169da:	4618      	mov	r0, r3
 80169dc:	f7fe ff7b 	bl	80158d6 <_ZNK9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEEdeEv>
 80169e0:	4603      	mov	r3, r0
 80169e2:	681b      	ldr	r3, [r3, #0]
 80169e4:	613b      	str	r3, [r7, #16]
	{
		delete e;
 80169e6:	693c      	ldr	r4, [r7, #16]
 80169e8:	2c00      	cmp	r4, #0
 80169ea:	d006      	beq.n	80169fa <_ZN13Function_callD1Ev+0x5c>
 80169ec:	4620      	mov	r0, r4
 80169ee:	f7f3 fb48 	bl	800a082 <_ZN10ExpressionD1Ev>
 80169f2:	2114      	movs	r1, #20
 80169f4:	4620      	mov	r0, r4
 80169f6:	f00c fd6d 	bl	80234d4 <_ZdlPvj>
	for (Expression *e : arguments)
 80169fa:	f107 030c 	add.w	r3, r7, #12
 80169fe:	4618      	mov	r0, r3
 8016a00:	f000 f841 	bl	8016a86 <_ZN9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEEppEv>
 8016a04:	e7dc      	b.n	80169c0 <_ZN13Function_callD1Ev+0x22>
Function_call::~Function_call()
 8016a06:	687b      	ldr	r3, [r7, #4]
 8016a08:	3320      	adds	r3, #32
 8016a0a:	4618      	mov	r0, r3
 8016a0c:	f7f7 fc3a 	bl	800e284 <_ZNSt6vectorIP10ExpressionSaIS1_EED1Ev>
 8016a10:	687b      	ldr	r3, [r7, #4]
 8016a12:	3308      	adds	r3, #8
 8016a14:	4618      	mov	r0, r3
 8016a16:	f00d f810 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	}
}
 8016a1a:	687b      	ldr	r3, [r7, #4]
 8016a1c:	4618      	mov	r0, r3
 8016a1e:	371c      	adds	r7, #28
 8016a20:	46bd      	mov	sp, r7
 8016a22:	bd90      	pop	{r4, r7, pc}

08016a24 <_ZN8VariableD1Ev>:
{
	delete value;
	delete var;
}

Variable::~Variable()
 8016a24:	b590      	push	{r4, r7, lr}
 8016a26:	b083      	sub	sp, #12
 8016a28:	af00      	add	r7, sp, #0
 8016a2a:	6078      	str	r0, [r7, #4]
{
	delete index;
 8016a2c:	687b      	ldr	r3, [r7, #4]
 8016a2e:	69dc      	ldr	r4, [r3, #28]
 8016a30:	2c00      	cmp	r4, #0
 8016a32:	d006      	beq.n	8016a42 <_ZN8VariableD1Ev+0x1e>
 8016a34:	4620      	mov	r0, r4
 8016a36:	f7f3 fb24 	bl	800a082 <_ZN10ExpressionD1Ev>
 8016a3a:	2114      	movs	r1, #20
 8016a3c:	4620      	mov	r0, r4
 8016a3e:	f00c fd49 	bl	80234d4 <_ZdlPvj>
Variable::~Variable()
 8016a42:	687b      	ldr	r3, [r7, #4]
 8016a44:	3304      	adds	r3, #4
 8016a46:	4618      	mov	r0, r3
 8016a48:	f00c fff7 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
}
 8016a4c:	687b      	ldr	r3, [r7, #4]
 8016a4e:	4618      	mov	r0, r3
 8016a50:	370c      	adds	r7, #12
 8016a52:	46bd      	mov	sp, r7
 8016a54:	bd90      	pop	{r4, r7, pc}

08016a56 <_ZN9__gnu_cxxneIPP10ExpressionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
 8016a56:	b590      	push	{r4, r7, lr}
 8016a58:	b083      	sub	sp, #12
 8016a5a:	af00      	add	r7, sp, #0
 8016a5c:	6078      	str	r0, [r7, #4]
 8016a5e:	6039      	str	r1, [r7, #0]
    { return __lhs.base() != __rhs.base(); }
 8016a60:	6878      	ldr	r0, [r7, #4]
 8016a62:	f7fe ff14 	bl	801588e <_ZNK9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEE4baseEv>
 8016a66:	4603      	mov	r3, r0
 8016a68:	681c      	ldr	r4, [r3, #0]
 8016a6a:	6838      	ldr	r0, [r7, #0]
 8016a6c:	f7fe ff0f 	bl	801588e <_ZNK9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEE4baseEv>
 8016a70:	4603      	mov	r3, r0
 8016a72:	681b      	ldr	r3, [r3, #0]
 8016a74:	429c      	cmp	r4, r3
 8016a76:	bf14      	ite	ne
 8016a78:	2301      	movne	r3, #1
 8016a7a:	2300      	moveq	r3, #0
 8016a7c:	b2db      	uxtb	r3, r3
 8016a7e:	4618      	mov	r0, r3
 8016a80:	370c      	adds	r7, #12
 8016a82:	46bd      	mov	sp, r7
 8016a84:	bd90      	pop	{r4, r7, pc}

08016a86 <_ZN9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
 8016a86:	b480      	push	{r7}
 8016a88:	b083      	sub	sp, #12
 8016a8a:	af00      	add	r7, sp, #0
 8016a8c:	6078      	str	r0, [r7, #4]
	++_M_current;
 8016a8e:	687b      	ldr	r3, [r7, #4]
 8016a90:	681b      	ldr	r3, [r3, #0]
 8016a92:	1d1a      	adds	r2, r3, #4
 8016a94:	687b      	ldr	r3, [r7, #4]
 8016a96:	601a      	str	r2, [r3, #0]
	return *this;
 8016a98:	687b      	ldr	r3, [r7, #4]
      }
 8016a9a:	4618      	mov	r0, r3
 8016a9c:	370c      	adds	r7, #12
 8016a9e:	46bd      	mov	sp, r7
 8016aa0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016aa4:	4770      	bx	lr
	...

08016aa8 <_Z41__static_initialization_and_destruction_0ii>:
 8016aa8:	b590      	push	{r4, r7, lr}
 8016aaa:	b0e7      	sub	sp, #412	; 0x19c
 8016aac:	af02      	add	r7, sp, #8
 8016aae:	1d3b      	adds	r3, r7, #4
 8016ab0:	6018      	str	r0, [r3, #0]
 8016ab2:	463b      	mov	r3, r7
 8016ab4:	6019      	str	r1, [r3, #0]
 8016ab6:	1d3b      	adds	r3, r7, #4
 8016ab8:	681b      	ldr	r3, [r3, #0]
 8016aba:	2b01      	cmp	r3, #1
 8016abc:	f040 819d 	bne.w	8016dfa <_Z41__static_initialization_and_destruction_0ii+0x352>
 8016ac0:	463b      	mov	r3, r7
 8016ac2:	681b      	ldr	r3, [r3, #0]
 8016ac4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8016ac8:	4293      	cmp	r3, r2
 8016aca:	f040 8196 	bne.w	8016dfa <_Z41__static_initialization_and_destruction_0ii+0x352>
};
 8016ace:	f107 0314 	add.w	r3, r7, #20
 8016ad2:	4618      	mov	r0, r3
 8016ad4:	2322      	movs	r3, #34	; 0x22
 8016ad6:	461a      	mov	r2, r3
 8016ad8:	2100      	movs	r1, #0
 8016ada:	f00e f9e1 	bl	8024ea0 <memset>
 8016ade:	f107 0314 	add.w	r3, r7, #20
 8016ae2:	223a      	movs	r2, #58	; 0x3a
 8016ae4:	701a      	strb	r2, [r3, #0]
 8016ae6:	f107 0314 	add.w	r3, r7, #20
 8016aea:	2201      	movs	r2, #1
 8016aec:	705a      	strb	r2, [r3, #1]
 8016aee:	f107 0314 	add.w	r3, r7, #20
 8016af2:	220a      	movs	r2, #10
 8016af4:	709a      	strb	r2, [r3, #2]
 8016af6:	f107 0314 	add.w	r3, r7, #20
 8016afa:	220a      	movs	r2, #10
 8016afc:	70da      	strb	r2, [r3, #3]
 8016afe:	f107 0314 	add.w	r3, r7, #20
 8016b02:	222c      	movs	r2, #44	; 0x2c
 8016b04:	711a      	strb	r2, [r3, #4]
 8016b06:	f107 0314 	add.w	r3, r7, #20
 8016b0a:	220c      	movs	r2, #12
 8016b0c:	715a      	strb	r2, [r3, #5]
 8016b0e:	f107 0314 	add.w	r3, r7, #20
 8016b12:	222e      	movs	r2, #46	; 0x2e
 8016b14:	719a      	strb	r2, [r3, #6]
 8016b16:	f107 0314 	add.w	r3, r7, #20
 8016b1a:	220b      	movs	r2, #11
 8016b1c:	71da      	strb	r2, [r3, #7]
 8016b1e:	f107 0314 	add.w	r3, r7, #20
 8016b22:	225b      	movs	r2, #91	; 0x5b
 8016b24:	721a      	strb	r2, [r3, #8]
 8016b26:	f107 0314 	add.w	r3, r7, #20
 8016b2a:	220d      	movs	r2, #13
 8016b2c:	725a      	strb	r2, [r3, #9]
 8016b2e:	f107 0314 	add.w	r3, r7, #20
 8016b32:	225d      	movs	r2, #93	; 0x5d
 8016b34:	729a      	strb	r2, [r3, #10]
 8016b36:	f107 0314 	add.w	r3, r7, #20
 8016b3a:	220e      	movs	r2, #14
 8016b3c:	72da      	strb	r2, [r3, #11]
 8016b3e:	f107 0314 	add.w	r3, r7, #20
 8016b42:	227c      	movs	r2, #124	; 0x7c
 8016b44:	731a      	strb	r2, [r3, #12]
 8016b46:	f107 0314 	add.w	r3, r7, #20
 8016b4a:	2215      	movs	r2, #21
 8016b4c:	735a      	strb	r2, [r3, #13]
 8016b4e:	f107 0314 	add.w	r3, r7, #20
 8016b52:	2226      	movs	r2, #38	; 0x26
 8016b54:	739a      	strb	r2, [r3, #14]
 8016b56:	f107 0314 	add.w	r3, r7, #20
 8016b5a:	2216      	movs	r2, #22
 8016b5c:	73da      	strb	r2, [r3, #15]
 8016b5e:	f107 0314 	add.w	r3, r7, #20
 8016b62:	222b      	movs	r2, #43	; 0x2b
 8016b64:	741a      	strb	r2, [r3, #16]
 8016b66:	f107 0314 	add.w	r3, r7, #20
 8016b6a:	221f      	movs	r2, #31
 8016b6c:	745a      	strb	r2, [r3, #17]
 8016b6e:	f107 0314 	add.w	r3, r7, #20
 8016b72:	222d      	movs	r2, #45	; 0x2d
 8016b74:	749a      	strb	r2, [r3, #18]
 8016b76:	f107 0314 	add.w	r3, r7, #20
 8016b7a:	2220      	movs	r2, #32
 8016b7c:	74da      	strb	r2, [r3, #19]
 8016b7e:	f107 0314 	add.w	r3, r7, #20
 8016b82:	222a      	movs	r2, #42	; 0x2a
 8016b84:	751a      	strb	r2, [r3, #20]
 8016b86:	f107 0314 	add.w	r3, r7, #20
 8016b8a:	2221      	movs	r2, #33	; 0x21
 8016b8c:	755a      	strb	r2, [r3, #21]
 8016b8e:	f107 0314 	add.w	r3, r7, #20
 8016b92:	222f      	movs	r2, #47	; 0x2f
 8016b94:	759a      	strb	r2, [r3, #22]
 8016b96:	f107 0314 	add.w	r3, r7, #20
 8016b9a:	2222      	movs	r2, #34	; 0x22
 8016b9c:	75da      	strb	r2, [r3, #23]
 8016b9e:	f107 0314 	add.w	r3, r7, #20
 8016ba2:	225e      	movs	r2, #94	; 0x5e
 8016ba4:	761a      	strb	r2, [r3, #24]
 8016ba6:	f107 0314 	add.w	r3, r7, #20
 8016baa:	2223      	movs	r2, #35	; 0x23
 8016bac:	765a      	strb	r2, [r3, #25]
 8016bae:	f107 0314 	add.w	r3, r7, #20
 8016bb2:	2225      	movs	r2, #37	; 0x25
 8016bb4:	769a      	strb	r2, [r3, #26]
 8016bb6:	f107 0314 	add.w	r3, r7, #20
 8016bba:	2224      	movs	r2, #36	; 0x24
 8016bbc:	76da      	strb	r2, [r3, #27]
 8016bbe:	f107 0314 	add.w	r3, r7, #20
 8016bc2:	2228      	movs	r2, #40	; 0x28
 8016bc4:	771a      	strb	r2, [r3, #28]
 8016bc6:	f107 0314 	add.w	r3, r7, #20
 8016bca:	2226      	movs	r2, #38	; 0x26
 8016bcc:	775a      	strb	r2, [r3, #29]
 8016bce:	f107 0314 	add.w	r3, r7, #20
 8016bd2:	2229      	movs	r2, #41	; 0x29
 8016bd4:	779a      	strb	r2, [r3, #30]
 8016bd6:	f107 0314 	add.w	r3, r7, #20
 8016bda:	2227      	movs	r2, #39	; 0x27
 8016bdc:	77da      	strb	r2, [r3, #31]
 8016bde:	f107 0314 	add.w	r3, r7, #20
 8016be2:	2225      	movs	r2, #37	; 0x25
 8016be4:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8016be8:	f107 030c 	add.w	r3, r7, #12
 8016bec:	f107 0214 	add.w	r2, r7, #20
 8016bf0:	601a      	str	r2, [r3, #0]
 8016bf2:	f107 030c 	add.w	r3, r7, #12
 8016bf6:	2211      	movs	r2, #17
 8016bf8:	605a      	str	r2, [r3, #4]
 8016bfa:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8016bfe:	4618      	mov	r0, r3
 8016c00:	f7eb f870 	bl	8001ce4 <_ZNSaISt4pairIKc10token_typeEEC1Ev>
 8016c04:	f107 0138 	add.w	r1, r7, #56	; 0x38
 8016c08:	f107 020c 	add.w	r2, r7, #12
 8016c0c:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8016c10:	9300      	str	r3, [sp, #0]
 8016c12:	460b      	mov	r3, r1
 8016c14:	ca06      	ldmia	r2, {r1, r2}
 8016c16:	4885      	ldr	r0, [pc, #532]	; (8016e2c <_Z41__static_initialization_and_destruction_0ii+0x384>)
 8016c18:	f7eb f87c 	bl	8001d14 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 8016c1c:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8016c20:	4618      	mov	r0, r3
 8016c22:	f7eb f86b 	bl	8001cfc <_ZNSaISt4pairIKc10token_typeEED1Ev>
	{"true", TOKEN_TRUE},
 8016c26:	2305      	movs	r3, #5
 8016c28:	f887 3162 	strb.w	r3, [r7, #354]	; 0x162
};
 8016c2c:	f507 72b1 	add.w	r2, r7, #354	; 0x162
 8016c30:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8016c34:	497e      	ldr	r1, [pc, #504]	; (8016e30 <_Z41__static_initialization_and_destruction_0ii+0x388>)
 8016c36:	4618      	mov	r0, r3
 8016c38:	f7ea fa5e 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"false", TOKEN_FALSE},
 8016c3c:	2306      	movs	r3, #6
 8016c3e:	f887 3163 	strb.w	r3, [r7, #355]	; 0x163
};
 8016c42:	f207 1263 	addw	r2, r7, #355	; 0x163
 8016c46:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8016c4a:	331c      	adds	r3, #28
 8016c4c:	4979      	ldr	r1, [pc, #484]	; (8016e34 <_Z41__static_initialization_and_destruction_0ii+0x38c>)
 8016c4e:	4618      	mov	r0, r3
 8016c50:	f7ea fa7a 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"setup", TOKEN_SETUP},
 8016c54:	2307      	movs	r3, #7
 8016c56:	f887 3164 	strb.w	r3, [r7, #356]	; 0x164
};
 8016c5a:	f507 72b2 	add.w	r2, r7, #356	; 0x164
 8016c5e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8016c62:	3338      	adds	r3, #56	; 0x38
 8016c64:	4974      	ldr	r1, [pc, #464]	; (8016e38 <_Z41__static_initialization_and_destruction_0ii+0x390>)
 8016c66:	4618      	mov	r0, r3
 8016c68:	f7ea fa6e 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"loop", TOKEN_LOOP},
 8016c6c:	2308      	movs	r3, #8
 8016c6e:	f887 3165 	strb.w	r3, [r7, #357]	; 0x165
};
 8016c72:	f207 1265 	addw	r2, r7, #357	; 0x165
 8016c76:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8016c7a:	3354      	adds	r3, #84	; 0x54
 8016c7c:	496f      	ldr	r1, [pc, #444]	; (8016e3c <_Z41__static_initialization_and_destruction_0ii+0x394>)
 8016c7e:	4618      	mov	r0, r3
 8016c80:	f7ea fa3a 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"finish", TOKEN_FINISH},
 8016c84:	2309      	movs	r3, #9
 8016c86:	f887 3166 	strb.w	r3, [r7, #358]	; 0x166
};
 8016c8a:	f507 72b3 	add.w	r2, r7, #358	; 0x166
 8016c8e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8016c92:	3370      	adds	r3, #112	; 0x70
 8016c94:	496a      	ldr	r1, [pc, #424]	; (8016e40 <_Z41__static_initialization_and_destruction_0ii+0x398>)
 8016c96:	4618      	mov	r0, r3
 8016c98:	f7ea fa7e 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"if", TOKEN_IF},
 8016c9c:	2310      	movs	r3, #16
 8016c9e:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167
};
 8016ca2:	f207 1267 	addw	r2, r7, #359	; 0x167
 8016ca6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8016caa:	338c      	adds	r3, #140	; 0x8c
 8016cac:	4965      	ldr	r1, [pc, #404]	; (8016e44 <_Z41__static_initialization_and_destruction_0ii+0x39c>)
 8016cae:	4618      	mov	r0, r3
 8016cb0:	f7ea fa9a 	bl	80011e8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>
	{"elseif", TOKEN_ELSEIF},
 8016cb4:	2311      	movs	r3, #17
 8016cb6:	f887 3168 	strb.w	r3, [r7, #360]	; 0x168
};
 8016cba:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 8016cbe:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8016cc2:	33a8      	adds	r3, #168	; 0xa8
 8016cc4:	4960      	ldr	r1, [pc, #384]	; (8016e48 <_Z41__static_initialization_and_destruction_0ii+0x3a0>)
 8016cc6:	4618      	mov	r0, r3
 8016cc8:	f7ea fa66 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"else", TOKEN_ELSE},
 8016ccc:	2312      	movs	r3, #18
 8016cce:	f887 3169 	strb.w	r3, [r7, #361]	; 0x169
};
 8016cd2:	f207 1269 	addw	r2, r7, #361	; 0x169
 8016cd6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8016cda:	33c4      	adds	r3, #196	; 0xc4
 8016cdc:	495b      	ldr	r1, [pc, #364]	; (8016e4c <_Z41__static_initialization_and_destruction_0ii+0x3a4>)
 8016cde:	4618      	mov	r0, r3
 8016ce0:	f7ea fa0a 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"while", TOKEN_WHILE},
 8016ce4:	2313      	movs	r3, #19
 8016ce6:	f887 316a 	strb.w	r3, [r7, #362]	; 0x16a
};
 8016cea:	f507 72b5 	add.w	r2, r7, #362	; 0x16a
 8016cee:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8016cf2:	33e0      	adds	r3, #224	; 0xe0
 8016cf4:	4956      	ldr	r1, [pc, #344]	; (8016e50 <_Z41__static_initialization_and_destruction_0ii+0x3a8>)
 8016cf6:	4618      	mov	r0, r3
 8016cf8:	f7ea fa26 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"end", TOKEN_END},
 8016cfc:	2314      	movs	r3, #20
 8016cfe:	f887 316b 	strb.w	r3, [r7, #363]	; 0x16b
};
 8016d02:	f207 126b 	addw	r2, r7, #363	; 0x16b
 8016d06:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8016d0a:	33fc      	adds	r3, #252	; 0xfc
 8016d0c:	4951      	ldr	r1, [pc, #324]	; (8016e54 <_Z41__static_initialization_and_destruction_0ii+0x3ac>)
 8016d0e:	4618      	mov	r0, r3
 8016d10:	f7ea fa92 	bl	8001238 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>
 8016d14:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8016d18:	f107 0248 	add.w	r2, r7, #72	; 0x48
 8016d1c:	601a      	str	r2, [r3, #0]
 8016d1e:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8016d22:	220a      	movs	r2, #10
 8016d24:	605a      	str	r2, [r3, #4]
 8016d26:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8016d2a:	4618      	mov	r0, r3
 8016d2c:	f7eb f87f 	bl	8001e2e <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 8016d30:	f507 71b6 	add.w	r1, r7, #364	; 0x16c
 8016d34:	f107 0240 	add.w	r2, r7, #64	; 0x40
 8016d38:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8016d3c:	9300      	str	r3, [sp, #0]
 8016d3e:	460b      	mov	r3, r1
 8016d40:	ca06      	ldmia	r2, {r1, r2}
 8016d42:	4845      	ldr	r0, [pc, #276]	; (8016e58 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 8016d44:	f7eb f88b 	bl	8001e5e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>
 8016d48:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8016d4c:	4618      	mov	r0, r3
 8016d4e:	f7eb f87a 	bl	8001e46 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 8016d52:	f107 0448 	add.w	r4, r7, #72	; 0x48
 8016d56:	f504 748c 	add.w	r4, r4, #280	; 0x118
 8016d5a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8016d5e:	429c      	cmp	r4, r3
 8016d60:	d004      	beq.n	8016d6c <_Z41__static_initialization_and_destruction_0ii+0x2c4>
 8016d62:	3c1c      	subs	r4, #28
 8016d64:	4620      	mov	r0, r4
 8016d66:	f7ea f9ba 	bl	80010de <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 8016d6a:	e7f6      	b.n	8016d5a <_Z41__static_initialization_and_destruction_0ii+0x2b2>
};
 8016d6c:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 8016d70:	2200      	movs	r2, #0
 8016d72:	601a      	str	r2, [r3, #0]
 8016d74:	605a      	str	r2, [r3, #4]
 8016d76:	609a      	str	r2, [r3, #8]
 8016d78:	233c      	movs	r3, #60	; 0x3c
 8016d7a:	f887 317c 	strb.w	r3, [r7, #380]	; 0x17c
 8016d7e:	231b      	movs	r3, #27
 8016d80:	f887 317d 	strb.w	r3, [r7, #381]	; 0x17d
 8016d84:	231c      	movs	r3, #28
 8016d86:	f887 317e 	strb.w	r3, [r7, #382]	; 0x17e
 8016d8a:	233e      	movs	r3, #62	; 0x3e
 8016d8c:	f887 317f 	strb.w	r3, [r7, #383]	; 0x17f
 8016d90:	2319      	movs	r3, #25
 8016d92:	f887 3180 	strb.w	r3, [r7, #384]	; 0x180
 8016d96:	231a      	movs	r3, #26
 8016d98:	f887 3181 	strb.w	r3, [r7, #385]	; 0x181
 8016d9c:	233d      	movs	r3, #61	; 0x3d
 8016d9e:	f887 3182 	strb.w	r3, [r7, #386]	; 0x182
 8016da2:	2318      	movs	r3, #24
 8016da4:	f887 3183 	strb.w	r3, [r7, #387]	; 0x183
 8016da8:	231d      	movs	r3, #29
 8016daa:	f887 3184 	strb.w	r3, [r7, #388]	; 0x184
 8016dae:	2321      	movs	r3, #33	; 0x21
 8016db0:	f887 3185 	strb.w	r3, [r7, #389]	; 0x185
 8016db4:	2317      	movs	r3, #23
 8016db6:	f887 3186 	strb.w	r3, [r7, #390]	; 0x186
 8016dba:	231e      	movs	r3, #30
 8016dbc:	f887 3187 	strb.w	r3, [r7, #391]	; 0x187
 8016dc0:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 8016dc4:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 8016dc8:	2304      	movs	r3, #4
 8016dca:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 8016dce:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 8016dd2:	4618      	mov	r0, r3
 8016dd4:	f7eb f873 	bl	8001ebe <_ZNSaISt4pairIKc12double_tokenEEC1Ev>
 8016dd8:	f507 72c4 	add.w	r2, r7, #392	; 0x188
 8016ddc:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 8016de0:	9300      	str	r3, [sp, #0]
 8016de2:	4613      	mov	r3, r2
 8016de4:	f507 72ba 	add.w	r2, r7, #372	; 0x174
 8016de8:	ca06      	ldmia	r2, {r1, r2}
 8016dea:	481c      	ldr	r0, [pc, #112]	; (8016e5c <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 8016dec:	f7eb f87f 	bl	8001eee <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 8016df0:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 8016df4:	4618      	mov	r0, r3
 8016df6:	f7eb f86e 	bl	8001ed6 <_ZNSaISt4pairIKc12double_tokenEED1Ev>
static const std::map<char, double_token> token_double_chars
 8016dfa:	1d3b      	adds	r3, r7, #4
 8016dfc:	681b      	ldr	r3, [r3, #0]
 8016dfe:	2b00      	cmp	r3, #0
 8016e00:	d10e      	bne.n	8016e20 <_Z41__static_initialization_and_destruction_0ii+0x378>
 8016e02:	463b      	mov	r3, r7
 8016e04:	681b      	ldr	r3, [r3, #0]
 8016e06:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8016e0a:	4293      	cmp	r3, r2
 8016e0c:	d108      	bne.n	8016e20 <_Z41__static_initialization_and_destruction_0ii+0x378>
 8016e0e:	4813      	ldr	r0, [pc, #76]	; (8016e5c <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 8016e10:	f7f2 fd38 	bl	8009884 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>
static const std::map<std::string, token_type> token_strings
 8016e14:	4810      	ldr	r0, [pc, #64]	; (8016e58 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 8016e16:	f7f2 fd42 	bl	800989e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
static const std::map<char, token_type> token_chars
 8016e1a:	4804      	ldr	r0, [pc, #16]	; (8016e2c <_Z41__static_initialization_and_destruction_0ii+0x384>)
 8016e1c:	f7f2 fd4c 	bl	80098b8 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>
 8016e20:	bf00      	nop
 8016e22:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 8016e26:	46bd      	mov	sp, r7
 8016e28:	bd90      	pop	{r4, r7, pc}
 8016e2a:	bf00      	nop
 8016e2c:	200004a4 	.word	0x200004a4
 8016e30:	08029ad4 	.word	0x08029ad4
 8016e34:	08029adc 	.word	0x08029adc
 8016e38:	08029ae4 	.word	0x08029ae4
 8016e3c:	08029aec 	.word	0x08029aec
 8016e40:	08029af4 	.word	0x08029af4
 8016e44:	08029afc 	.word	0x08029afc
 8016e48:	08029b00 	.word	0x08029b00
 8016e4c:	08029b08 	.word	0x08029b08
 8016e50:	08029b10 	.word	0x08029b10
 8016e54:	08029b18 	.word	0x08029b18
 8016e58:	200004bc 	.word	0x200004bc
 8016e5c:	200004d4 	.word	0x200004d4

08016e60 <_GLOBAL__sub_I__ZN4BodyD2Ev>:
 8016e60:	b580      	push	{r7, lr}
 8016e62:	af00      	add	r7, sp, #0
 8016e64:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8016e68:	2001      	movs	r0, #1
 8016e6a:	f7ff fe1d 	bl	8016aa8 <_Z41__static_initialization_and_destruction_0ii>
 8016e6e:	bd80      	pop	{r7, pc}

08016e70 <_GLOBAL__sub_D__ZN4BodyD2Ev>:
 8016e70:	b580      	push	{r7, lr}
 8016e72:	af00      	add	r7, sp, #0
 8016e74:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8016e78:	2000      	movs	r0, #0
 8016e7a:	f7ff fe15 	bl	8016aa8 <_Z41__static_initialization_and_destruction_0ii>
 8016e7e:	bd80      	pop	{r7, pc}

08016e80 <_ZNSt7__cxx119to_stringEf>:
					   4 * sizeof(unsigned long long),
					   "%llu", __val); }

  inline string
  to_string(float __val)
  {
 8016e80:	b580      	push	{r7, lr}
 8016e82:	b086      	sub	sp, #24
 8016e84:	af02      	add	r7, sp, #8
 8016e86:	6078      	str	r0, [r7, #4]
 8016e88:	ed87 0a00 	vstr	s0, [r7]
    const int __n =
 8016e8c:	233a      	movs	r3, #58	; 0x3a
 8016e8e:	60fb      	str	r3, [r7, #12]
      __gnu_cxx::__numeric_traits<float>::__max_exponent10 + 20;
    return __gnu_cxx::__to_xstring<string>(&std::vsnprintf, __n,
					   "%f", __val);
 8016e90:	6838      	ldr	r0, [r7, #0]
 8016e92:	f7e9 fb79 	bl	8000588 <__aeabi_f2d>
 8016e96:	4602      	mov	r2, r0
 8016e98:	460b      	mov	r3, r1
 8016e9a:	6878      	ldr	r0, [r7, #4]
 8016e9c:	e9cd 2300 	strd	r2, r3, [sp]
 8016ea0:	4b04      	ldr	r3, [pc, #16]	; (8016eb4 <_ZNSt7__cxx119to_stringEf+0x34>)
 8016ea2:	223a      	movs	r2, #58	; 0x3a
 8016ea4:	4904      	ldr	r1, [pc, #16]	; (8016eb8 <_ZNSt7__cxx119to_stringEf+0x38>)
 8016ea6:	f7fb fa01 	bl	80122ac <_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_jPKS8_St9__va_listEjSB_z>
  }
 8016eaa:	6878      	ldr	r0, [r7, #4]
 8016eac:	3710      	adds	r7, #16
 8016eae:	46bd      	mov	sp, r7
 8016eb0:	bd80      	pop	{r7, pc}
 8016eb2:	bf00      	nop
 8016eb4:	08029b20 	.word	0x08029b20
 8016eb8:	080267f5 	.word	0x080267f5

08016ebc <_ZN6SymbolC1Ei>:
#include "Symbol.h"
#include "Transmitter.h"

Symbol::Symbol(int value)
 8016ebc:	b580      	push	{r7, lr}
 8016ebe:	b082      	sub	sp, #8
 8016ec0:	af00      	add	r7, sp, #0
 8016ec2:	6078      	str	r0, [r7, #4]
 8016ec4:	6039      	str	r1, [r7, #0]
 8016ec6:	687b      	ldr	r3, [r7, #4]
 8016ec8:	3304      	adds	r3, #4
 8016eca:	4618      	mov	r0, r3
 8016ecc:	f7f7 f87a 	bl	800dfc4 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1Ev>
{
	type = SYMBOL_INT;
 8016ed0:	687b      	ldr	r3, [r7, #4]
 8016ed2:	2200      	movs	r2, #0
 8016ed4:	701a      	strb	r2, [r3, #0]
	this->value = value;
 8016ed6:	687b      	ldr	r3, [r7, #4]
 8016ed8:	3304      	adds	r3, #4
 8016eda:	463a      	mov	r2, r7
 8016edc:	4611      	mov	r1, r2
 8016ede:	4618      	mov	r0, r3
 8016ee0:	f001 f94a 	bl	8018178 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIRiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_>
}
 8016ee4:	687b      	ldr	r3, [r7, #4]
 8016ee6:	4618      	mov	r0, r3
 8016ee8:	3708      	adds	r7, #8
 8016eea:	46bd      	mov	sp, r7
 8016eec:	bd80      	pop	{r7, pc}

08016eee <_ZN6SymbolC1Ef>:

Symbol::Symbol(float value)
 8016eee:	b580      	push	{r7, lr}
 8016ef0:	b082      	sub	sp, #8
 8016ef2:	af00      	add	r7, sp, #0
 8016ef4:	6078      	str	r0, [r7, #4]
 8016ef6:	ed87 0a00 	vstr	s0, [r7]
 8016efa:	687b      	ldr	r3, [r7, #4]
 8016efc:	3304      	adds	r3, #4
 8016efe:	4618      	mov	r0, r3
 8016f00:	f7f7 f860 	bl	800dfc4 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1Ev>
{
	type = SYMBOL_FLOAT;
 8016f04:	687b      	ldr	r3, [r7, #4]
 8016f06:	2201      	movs	r2, #1
 8016f08:	701a      	strb	r2, [r3, #0]
	this->value = value;
 8016f0a:	687b      	ldr	r3, [r7, #4]
 8016f0c:	3304      	adds	r3, #4
 8016f0e:	463a      	mov	r2, r7
 8016f10:	4611      	mov	r1, r2
 8016f12:	4618      	mov	r0, r3
 8016f14:	f001 f95a 	bl	80181cc <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIRfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_>
}
 8016f18:	687b      	ldr	r3, [r7, #4]
 8016f1a:	4618      	mov	r0, r3
 8016f1c:	3708      	adds	r7, #8
 8016f1e:	46bd      	mov	sp, r7
 8016f20:	bd80      	pop	{r7, pc}

08016f22 <_ZN6SymbolC1Ed>:

Symbol::Symbol(double value)
 8016f22:	b580      	push	{r7, lr}
 8016f24:	b086      	sub	sp, #24
 8016f26:	af00      	add	r7, sp, #0
 8016f28:	60f8      	str	r0, [r7, #12]
 8016f2a:	ed87 0b00 	vstr	d0, [r7]
 8016f2e:	68fb      	ldr	r3, [r7, #12]
 8016f30:	3304      	adds	r3, #4
 8016f32:	4618      	mov	r0, r3
 8016f34:	f7f7 f846 	bl	800dfc4 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1Ev>
{
	type = SYMBOL_FLOAT;
 8016f38:	68fb      	ldr	r3, [r7, #12]
 8016f3a:	2201      	movs	r2, #1
 8016f3c:	701a      	strb	r2, [r3, #0]
	this->value = (float)value;
 8016f3e:	e9d7 0100 	ldrd	r0, r1, [r7]
 8016f42:	f7e9 fe71 	bl	8000c28 <__aeabi_d2f>
 8016f46:	4603      	mov	r3, r0
 8016f48:	617b      	str	r3, [r7, #20]
 8016f4a:	68fb      	ldr	r3, [r7, #12]
 8016f4c:	3304      	adds	r3, #4
 8016f4e:	f107 0214 	add.w	r2, r7, #20
 8016f52:	4611      	mov	r1, r2
 8016f54:	4618      	mov	r0, r3
 8016f56:	f001 f963 	bl	8018220 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
}
 8016f5a:	68fb      	ldr	r3, [r7, #12]
 8016f5c:	4618      	mov	r0, r3
 8016f5e:	3718      	adds	r7, #24
 8016f60:	46bd      	mov	sp, r7
 8016f62:	bd80      	pop	{r7, pc}

08016f64 <_ZN6SymbolC1Eb>:

Symbol::Symbol(bool value)
 8016f64:	b580      	push	{r7, lr}
 8016f66:	b082      	sub	sp, #8
 8016f68:	af00      	add	r7, sp, #0
 8016f6a:	6078      	str	r0, [r7, #4]
 8016f6c:	460b      	mov	r3, r1
 8016f6e:	70fb      	strb	r3, [r7, #3]
 8016f70:	687b      	ldr	r3, [r7, #4]
 8016f72:	3304      	adds	r3, #4
 8016f74:	4618      	mov	r0, r3
 8016f76:	f7f7 f825 	bl	800dfc4 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1Ev>
{
	type = SYMBOL_BOOL;
 8016f7a:	687b      	ldr	r3, [r7, #4]
 8016f7c:	2202      	movs	r2, #2
 8016f7e:	701a      	strb	r2, [r3, #0]
	this->value = value;
 8016f80:	687b      	ldr	r3, [r7, #4]
 8016f82:	3304      	adds	r3, #4
 8016f84:	1cfa      	adds	r2, r7, #3
 8016f86:	4611      	mov	r1, r2
 8016f88:	4618      	mov	r0, r3
 8016f8a:	f001 f973 	bl	8018274 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIRbEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_>
}
 8016f8e:	687b      	ldr	r3, [r7, #4]
 8016f90:	4618      	mov	r0, r3
 8016f92:	3708      	adds	r7, #8
 8016f94:	46bd      	mov	sp, r7
 8016f96:	bd80      	pop	{r7, pc}

08016f98 <_ZN6SymbolC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

Symbol::Symbol(std::string value)
 8016f98:	b580      	push	{r7, lr}
 8016f9a:	b082      	sub	sp, #8
 8016f9c:	af00      	add	r7, sp, #0
 8016f9e:	6078      	str	r0, [r7, #4]
 8016fa0:	6039      	str	r1, [r7, #0]
 8016fa2:	687b      	ldr	r3, [r7, #4]
 8016fa4:	3304      	adds	r3, #4
 8016fa6:	4618      	mov	r0, r3
 8016fa8:	f7f7 f80c 	bl	800dfc4 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1Ev>
{
	type = SYMBOL_STRING;
 8016fac:	687b      	ldr	r3, [r7, #4]
 8016fae:	2203      	movs	r2, #3
 8016fb0:	701a      	strb	r2, [r3, #0]
	this->value = value;
 8016fb2:	687b      	ldr	r3, [r7, #4]
 8016fb4:	3304      	adds	r3, #4
 8016fb6:	6839      	ldr	r1, [r7, #0]
 8016fb8:	4618      	mov	r0, r3
 8016fba:	f001 f986 	bl	80182ca <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIRS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_>
}
 8016fbe:	687b      	ldr	r3, [r7, #4]
 8016fc0:	4618      	mov	r0, r3
 8016fc2:	3708      	adds	r7, #8
 8016fc4:	46bd      	mov	sp, r7
 8016fc6:	bd80      	pop	{r7, pc}

08016fc8 <_ZN6SymbolixES_>:
	type = SYMBOL_CONTAINER;
	this->value = std::vector<Symbol>(value);
}

Symbol& Symbol::operator[](Symbol idx)
{
 8016fc8:	b580      	push	{r7, lr}
 8016fca:	b098      	sub	sp, #96	; 0x60
 8016fcc:	af00      	add	r7, sp, #0
 8016fce:	6078      	str	r0, [r7, #4]
 8016fd0:	6039      	str	r1, [r7, #0]
	if (idx.type != SYMBOL_INT)
 8016fd2:	683b      	ldr	r3, [r7, #0]
 8016fd4:	781b      	ldrb	r3, [r3, #0]
 8016fd6:	2b00      	cmp	r3, #0
 8016fd8:	d01b      	beq.n	8017012 <_ZN6SymbolixES_+0x4a>
	{
		Transmitter::report_error("index must be an integer");
 8016fda:	f107 0320 	add.w	r3, r7, #32
 8016fde:	4618      	mov	r0, r3
 8016fe0:	f00c fa9a 	bl	8023518 <_ZNSaIcEC1Ev>
 8016fe4:	f107 0220 	add.w	r2, r7, #32
 8016fe8:	f107 0308 	add.w	r3, r7, #8
 8016fec:	493a      	ldr	r1, [pc, #232]	; (80170d8 <_ZN6SymbolixES_+0x110>)
 8016fee:	4618      	mov	r0, r3
 8016ff0:	f7ea fecb 	bl	8001d8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8016ff4:	f107 0308 	add.w	r3, r7, #8
 8016ff8:	4618      	mov	r0, r3
 8016ffa:	f001 fe01 	bl	8018c00 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8016ffe:	f107 0308 	add.w	r3, r7, #8
 8017002:	4618      	mov	r0, r3
 8017004:	f00c fd19 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8017008:	f107 0320 	add.w	r3, r7, #32
 801700c:	4618      	mov	r0, r3
 801700e:	f00c fa84 	bl	802351a <_ZNSaIcED1Ev>
	}
	int i = std::get<int>(idx.value);
 8017012:	683b      	ldr	r3, [r7, #0]
 8017014:	3304      	adds	r3, #4
 8017016:	4618      	mov	r0, r3
 8017018:	f7eb ff92 	bl	8002f40 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 801701c:	4603      	mov	r3, r0
 801701e:	681b      	ldr	r3, [r3, #0]
 8017020:	65fb      	str	r3, [r7, #92]	; 0x5c

	if (i < 0)
 8017022:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8017024:	2b00      	cmp	r3, #0
 8017026:	da1b      	bge.n	8017060 <_ZN6SymbolixES_+0x98>
	{
		Transmitter::report_error("index must be positive");
 8017028:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801702c:	4618      	mov	r0, r3
 801702e:	f00c fa73 	bl	8023518 <_ZNSaIcEC1Ev>
 8017032:	f107 023c 	add.w	r2, r7, #60	; 0x3c
 8017036:	f107 0324 	add.w	r3, r7, #36	; 0x24
 801703a:	4928      	ldr	r1, [pc, #160]	; (80170dc <_ZN6SymbolixES_+0x114>)
 801703c:	4618      	mov	r0, r3
 801703e:	f7ea fea4 	bl	8001d8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8017042:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8017046:	4618      	mov	r0, r3
 8017048:	f001 fdda 	bl	8018c00 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801704c:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8017050:	4618      	mov	r0, r3
 8017052:	f00c fcf2 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8017056:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801705a:	4618      	mov	r0, r3
 801705c:	f00c fa5d 	bl	802351a <_ZNSaIcED1Ev>
	}

	if (type == SYMBOL_CONTAINER)
 8017060:	687b      	ldr	r3, [r7, #4]
 8017062:	781b      	ldrb	r3, [r3, #0]
 8017064:	2b04      	cmp	r3, #4
 8017066:	d10c      	bne.n	8017082 <_ZN6SymbolixES_+0xba>
	{
		return std::get<std::vector<Symbol>>(value)[i];
 8017068:	687b      	ldr	r3, [r7, #4]
 801706a:	3304      	adds	r3, #4
 801706c:	4618      	mov	r0, r3
 801706e:	f001 f965 	bl	801833c <_ZSt3getISt6vectorI6SymbolSaIS1_EEJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES3_EERT_RSt7variantIJDpT0_EE>
 8017072:	4602      	mov	r2, r0
 8017074:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8017076:	4619      	mov	r1, r3
 8017078:	4610      	mov	r0, r2
 801707a:	f001 f96b 	bl	8018354 <_ZNSt6vectorI6SymbolSaIS0_EEixEj>
 801707e:	4603      	mov	r3, r0
 8017080:	e026      	b.n	80170d0 <_ZN6SymbolixES_+0x108>
	}
	else
	{
		Transmitter::report_error(
 8017082:	f107 0358 	add.w	r3, r7, #88	; 0x58
 8017086:	4618      	mov	r0, r3
 8017088:	f00c fa46 	bl	8023518 <_ZNSaIcEC1Ev>
 801708c:	f107 0258 	add.w	r2, r7, #88	; 0x58
 8017090:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8017094:	4912      	ldr	r1, [pc, #72]	; (80170e0 <_ZN6SymbolixES_+0x118>)
 8017096:	4618      	mov	r0, r3
 8017098:	f7ea fe77 	bl	8001d8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801709c:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80170a0:	4618      	mov	r0, r3
 80170a2:	f001 fdad 	bl	8018c00 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
				"cannot perform [] operation on non container");
 80170a6:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80170aa:	4618      	mov	r0, r3
 80170ac:	f00c fcc5 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80170b0:	f107 0358 	add.w	r3, r7, #88	; 0x58
 80170b4:	4618      	mov	r0, r3
 80170b6:	f00c fa30 	bl	802351a <_ZNSaIcED1Ev>
		return std::get<std::vector<Symbol>>(value)[0];
 80170ba:	687b      	ldr	r3, [r7, #4]
 80170bc:	3304      	adds	r3, #4
 80170be:	4618      	mov	r0, r3
 80170c0:	f001 f93c 	bl	801833c <_ZSt3getISt6vectorI6SymbolSaIS1_EEJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES3_EERT_RSt7variantIJDpT0_EE>
 80170c4:	4603      	mov	r3, r0
 80170c6:	2100      	movs	r1, #0
 80170c8:	4618      	mov	r0, r3
 80170ca:	f001 f943 	bl	8018354 <_ZNSt6vectorI6SymbolSaIS0_EEixEj>
 80170ce:	4603      	mov	r3, r0
	}
}
 80170d0:	4618      	mov	r0, r3
 80170d2:	3760      	adds	r7, #96	; 0x60
 80170d4:	46bd      	mov	sp, r7
 80170d6:	bd80      	pop	{r7, pc}
 80170d8:	08029b38 	.word	0x08029b38
 80170dc:	08029b54 	.word	0x08029b54
 80170e0:	08029b6c 	.word	0x08029b6c

080170e4 <_ZN6SymbolplES_>:

Symbol Symbol::operator+(Symbol other)
{
 80170e4:	b590      	push	{r4, r7, lr}
 80170e6:	ed2d 8b02 	vpush	{d8}
 80170ea:	b093      	sub	sp, #76	; 0x4c
 80170ec:	af00      	add	r7, sp, #0
 80170ee:	60f8      	str	r0, [r7, #12]
 80170f0:	60b9      	str	r1, [r7, #8]
 80170f2:	607a      	str	r2, [r7, #4]
	align_types(other);
 80170f4:	6879      	ldr	r1, [r7, #4]
 80170f6:	68b8      	ldr	r0, [r7, #8]
 80170f8:	f000 ff06 	bl	8017f08 <_ZN6Symbol11align_typesERS_>

	switch (type)
 80170fc:	68bb      	ldr	r3, [r7, #8]
 80170fe:	781b      	ldrb	r3, [r3, #0]
 8017100:	2b03      	cmp	r3, #3
 8017102:	d86a      	bhi.n	80171da <_ZN6SymbolplES_+0xf6>
 8017104:	a201      	add	r2, pc, #4	; (adr r2, 801710c <_ZN6SymbolplES_+0x28>)
 8017106:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801710a:	bf00      	nop
 801710c:	0801711d 	.word	0x0801711d
 8017110:	08017145 	.word	0x08017145
 8017114:	08017175 	.word	0x08017175
 8017118:	0801719f 	.word	0x0801719f
	{
	case SYMBOL_INT:
		return std::get<int>(this->value) + std::get<int>(other.value);
 801711c:	68bb      	ldr	r3, [r7, #8]
 801711e:	3304      	adds	r3, #4
 8017120:	4618      	mov	r0, r3
 8017122:	f7eb ff0d 	bl	8002f40 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017126:	4603      	mov	r3, r0
 8017128:	681c      	ldr	r4, [r3, #0]
 801712a:	687b      	ldr	r3, [r7, #4]
 801712c:	3304      	adds	r3, #4
 801712e:	4618      	mov	r0, r3
 8017130:	f7eb ff06 	bl	8002f40 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017134:	4603      	mov	r3, r0
 8017136:	681b      	ldr	r3, [r3, #0]
 8017138:	4423      	add	r3, r4
 801713a:	4619      	mov	r1, r3
 801713c:	68f8      	ldr	r0, [r7, #12]
 801713e:	f7ff febd 	bl	8016ebc <_ZN6SymbolC1Ei>
 8017142:	e06a      	b.n	801721a <_ZN6SymbolplES_+0x136>
	case SYMBOL_FLOAT:
		return std::get<float>(this->value) + std::get<float>(other.value);
 8017144:	68bb      	ldr	r3, [r7, #8]
 8017146:	3304      	adds	r3, #4
 8017148:	4618      	mov	r0, r3
 801714a:	f000 fd5d 	bl	8017c08 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 801714e:	4603      	mov	r3, r0
 8017150:	ed93 8a00 	vldr	s16, [r3]
 8017154:	687b      	ldr	r3, [r7, #4]
 8017156:	3304      	adds	r3, #4
 8017158:	4618      	mov	r0, r3
 801715a:	f000 fd55 	bl	8017c08 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 801715e:	4603      	mov	r3, r0
 8017160:	edd3 7a00 	vldr	s15, [r3]
 8017164:	ee78 7a27 	vadd.f32	s15, s16, s15
 8017168:	eeb0 0a67 	vmov.f32	s0, s15
 801716c:	68f8      	ldr	r0, [r7, #12]
 801716e:	f7ff febe 	bl	8016eee <_ZN6SymbolC1Ef>
 8017172:	e052      	b.n	801721a <_ZN6SymbolplES_+0x136>
	case SYMBOL_BOOL:
		return std::get<bool>(this->value) + std::get<bool>(other.value);
 8017174:	68bb      	ldr	r3, [r7, #8]
 8017176:	3304      	adds	r3, #4
 8017178:	4618      	mov	r0, r3
 801717a:	f001 f8fb 	bl	8018374 <_ZSt3getIbJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 801717e:	4603      	mov	r3, r0
 8017180:	781b      	ldrb	r3, [r3, #0]
 8017182:	461c      	mov	r4, r3
 8017184:	687b      	ldr	r3, [r7, #4]
 8017186:	3304      	adds	r3, #4
 8017188:	4618      	mov	r0, r3
 801718a:	f001 f8f3 	bl	8018374 <_ZSt3getIbJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 801718e:	4603      	mov	r3, r0
 8017190:	781b      	ldrb	r3, [r3, #0]
 8017192:	4423      	add	r3, r4
 8017194:	4619      	mov	r1, r3
 8017196:	68f8      	ldr	r0, [r7, #12]
 8017198:	f7ff fe90 	bl	8016ebc <_ZN6SymbolC1Ei>
 801719c:	e03d      	b.n	801721a <_ZN6SymbolplES_+0x136>
	case SYMBOL_STRING:
		return std::get<std::string>(this->value) + std::get<std::string>(
 801719e:	68bb      	ldr	r3, [r7, #8]
 80171a0:	3304      	adds	r3, #4
 80171a2:	4618      	mov	r0, r3
 80171a4:	f001 f8f2 	bl	801838c <_ZSt3getINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJifbS5_St6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 80171a8:	4604      	mov	r4, r0
				other.value);
 80171aa:	687b      	ldr	r3, [r7, #4]
 80171ac:	3304      	adds	r3, #4
 80171ae:	4618      	mov	r0, r3
 80171b0:	f001 f8ec 	bl	801838c <_ZSt3getINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJifbS5_St6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 80171b4:	4602      	mov	r2, r0
		return std::get<std::string>(this->value) + std::get<std::string>(
 80171b6:	f107 0314 	add.w	r3, r7, #20
 80171ba:	4621      	mov	r1, r4
 80171bc:	4618      	mov	r0, r3
 80171be:	f001 f8f1 	bl	80183a4 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_>
				other.value);
 80171c2:	f107 0314 	add.w	r3, r7, #20
 80171c6:	4619      	mov	r1, r3
 80171c8:	68f8      	ldr	r0, [r7, #12]
 80171ca:	f7ff fee5 	bl	8016f98 <_ZN6SymbolC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 80171ce:	f107 0314 	add.w	r3, r7, #20
 80171d2:	4618      	mov	r0, r3
 80171d4:	f00c fc31 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80171d8:	e01f      	b.n	801721a <_ZN6SymbolplES_+0x136>
	default:
		Transmitter::report_error("invalid type for addidion");
 80171da:	f107 0344 	add.w	r3, r7, #68	; 0x44
 80171de:	4618      	mov	r0, r3
 80171e0:	f00c f99a 	bl	8023518 <_ZNSaIcEC1Ev>
 80171e4:	f107 0244 	add.w	r2, r7, #68	; 0x44
 80171e8:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80171ec:	490e      	ldr	r1, [pc, #56]	; (8017228 <_ZN6SymbolplES_+0x144>)
 80171ee:	4618      	mov	r0, r3
 80171f0:	f7ea fdcb 	bl	8001d8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 80171f4:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80171f8:	4618      	mov	r0, r3
 80171fa:	f001 fd01 	bl	8018c00 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 80171fe:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8017202:	4618      	mov	r0, r3
 8017204:	f00c fc19 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8017208:	f107 0344 	add.w	r3, r7, #68	; 0x44
 801720c:	4618      	mov	r0, r3
 801720e:	f00c f984 	bl	802351a <_ZNSaIcED1Ev>
	}

	return 0;
 8017212:	2100      	movs	r1, #0
 8017214:	68f8      	ldr	r0, [r7, #12]
 8017216:	f7ff fe51 	bl	8016ebc <_ZN6SymbolC1Ei>
}
 801721a:	68f8      	ldr	r0, [r7, #12]
 801721c:	374c      	adds	r7, #76	; 0x4c
 801721e:	46bd      	mov	sp, r7
 8017220:	ecbd 8b02 	vpop	{d8}
 8017224:	bd90      	pop	{r4, r7, pc}
 8017226:	bf00      	nop
 8017228:	08029b9c 	.word	0x08029b9c

0801722c <_ZN6SymbolmiES_>:

Symbol Symbol::operator-(Symbol other)
{
 801722c:	b590      	push	{r4, r7, lr}
 801722e:	ed2d 8b02 	vpush	{d8}
 8017232:	b08d      	sub	sp, #52	; 0x34
 8017234:	af00      	add	r7, sp, #0
 8017236:	60f8      	str	r0, [r7, #12]
 8017238:	60b9      	str	r1, [r7, #8]
 801723a:	607a      	str	r2, [r7, #4]
	align_types(other);
 801723c:	6879      	ldr	r1, [r7, #4]
 801723e:	68b8      	ldr	r0, [r7, #8]
 8017240:	f000 fe62 	bl	8017f08 <_ZN6Symbol11align_typesERS_>

	switch (type)
 8017244:	68bb      	ldr	r3, [r7, #8]
 8017246:	781b      	ldrb	r3, [r3, #0]
 8017248:	2b00      	cmp	r3, #0
 801724a:	d002      	beq.n	8017252 <_ZN6SymbolmiES_+0x26>
 801724c:	2b01      	cmp	r3, #1
 801724e:	d014      	beq.n	801727a <_ZN6SymbolmiES_+0x4e>
 8017250:	e02b      	b.n	80172aa <_ZN6SymbolmiES_+0x7e>
	{
	case SYMBOL_INT:
		return std::get<int>(this->value) - std::get<int>(other.value);
 8017252:	68bb      	ldr	r3, [r7, #8]
 8017254:	3304      	adds	r3, #4
 8017256:	4618      	mov	r0, r3
 8017258:	f7eb fe72 	bl	8002f40 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 801725c:	4603      	mov	r3, r0
 801725e:	681c      	ldr	r4, [r3, #0]
 8017260:	687b      	ldr	r3, [r7, #4]
 8017262:	3304      	adds	r3, #4
 8017264:	4618      	mov	r0, r3
 8017266:	f7eb fe6b 	bl	8002f40 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 801726a:	4603      	mov	r3, r0
 801726c:	681b      	ldr	r3, [r3, #0]
 801726e:	1ae3      	subs	r3, r4, r3
 8017270:	4619      	mov	r1, r3
 8017272:	68f8      	ldr	r0, [r7, #12]
 8017274:	f7ff fe22 	bl	8016ebc <_ZN6SymbolC1Ei>
 8017278:	e037      	b.n	80172ea <_ZN6SymbolmiES_+0xbe>
	case SYMBOL_FLOAT:
		return std::get<float>(this->value) - std::get<float>(other.value);
 801727a:	68bb      	ldr	r3, [r7, #8]
 801727c:	3304      	adds	r3, #4
 801727e:	4618      	mov	r0, r3
 8017280:	f000 fcc2 	bl	8017c08 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017284:	4603      	mov	r3, r0
 8017286:	ed93 8a00 	vldr	s16, [r3]
 801728a:	687b      	ldr	r3, [r7, #4]
 801728c:	3304      	adds	r3, #4
 801728e:	4618      	mov	r0, r3
 8017290:	f000 fcba 	bl	8017c08 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017294:	4603      	mov	r3, r0
 8017296:	edd3 7a00 	vldr	s15, [r3]
 801729a:	ee78 7a67 	vsub.f32	s15, s16, s15
 801729e:	eeb0 0a67 	vmov.f32	s0, s15
 80172a2:	68f8      	ldr	r0, [r7, #12]
 80172a4:	f7ff fe23 	bl	8016eee <_ZN6SymbolC1Ef>
 80172a8:	e01f      	b.n	80172ea <_ZN6SymbolmiES_+0xbe>
	default:
		Transmitter::report_error("invalid type for substraction");
 80172aa:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80172ae:	4618      	mov	r0, r3
 80172b0:	f00c f932 	bl	8023518 <_ZNSaIcEC1Ev>
 80172b4:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 80172b8:	f107 0314 	add.w	r3, r7, #20
 80172bc:	490e      	ldr	r1, [pc, #56]	; (80172f8 <_ZN6SymbolmiES_+0xcc>)
 80172be:	4618      	mov	r0, r3
 80172c0:	f7ea fd63 	bl	8001d8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 80172c4:	f107 0314 	add.w	r3, r7, #20
 80172c8:	4618      	mov	r0, r3
 80172ca:	f001 fc99 	bl	8018c00 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 80172ce:	f107 0314 	add.w	r3, r7, #20
 80172d2:	4618      	mov	r0, r3
 80172d4:	f00c fbb1 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80172d8:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80172dc:	4618      	mov	r0, r3
 80172de:	f00c f91c 	bl	802351a <_ZNSaIcED1Ev>
	}

	return 0;
 80172e2:	2100      	movs	r1, #0
 80172e4:	68f8      	ldr	r0, [r7, #12]
 80172e6:	f7ff fde9 	bl	8016ebc <_ZN6SymbolC1Ei>
}
 80172ea:	68f8      	ldr	r0, [r7, #12]
 80172ec:	3734      	adds	r7, #52	; 0x34
 80172ee:	46bd      	mov	sp, r7
 80172f0:	ecbd 8b02 	vpop	{d8}
 80172f4:	bd90      	pop	{r4, r7, pc}
 80172f6:	bf00      	nop
 80172f8:	08029bb8 	.word	0x08029bb8

080172fc <_ZN6SymbolaaES_>:

Symbol Symbol::operator&&(Symbol other)
{
 80172fc:	b580      	push	{r7, lr}
 80172fe:	b08c      	sub	sp, #48	; 0x30
 8017300:	af00      	add	r7, sp, #0
 8017302:	60f8      	str	r0, [r7, #12]
 8017304:	60b9      	str	r1, [r7, #8]
 8017306:	607a      	str	r2, [r7, #4]
	if (type != SYMBOL_BOOL || other.type != SYMBOL_BOOL)
 8017308:	68bb      	ldr	r3, [r7, #8]
 801730a:	781b      	ldrb	r3, [r3, #0]
 801730c:	2b02      	cmp	r3, #2
 801730e:	d103      	bne.n	8017318 <_ZN6SymbolaaES_+0x1c>
 8017310:	687b      	ldr	r3, [r7, #4]
 8017312:	781b      	ldrb	r3, [r3, #0]
 8017314:	2b02      	cmp	r3, #2
 8017316:	d01b      	beq.n	8017350 <_ZN6SymbolaaES_+0x54>
	{
		Transmitter::report_error("operator and needs boolean expressions");
 8017318:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 801731c:	4618      	mov	r0, r3
 801731e:	f00c f8fb 	bl	8023518 <_ZNSaIcEC1Ev>
 8017322:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 8017326:	f107 0314 	add.w	r3, r7, #20
 801732a:	4918      	ldr	r1, [pc, #96]	; (801738c <_ZN6SymbolaaES_+0x90>)
 801732c:	4618      	mov	r0, r3
 801732e:	f7ea fd2c 	bl	8001d8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8017332:	f107 0314 	add.w	r3, r7, #20
 8017336:	4618      	mov	r0, r3
 8017338:	f001 fc62 	bl	8018c00 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801733c:	f107 0314 	add.w	r3, r7, #20
 8017340:	4618      	mov	r0, r3
 8017342:	f00c fb7a 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8017346:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 801734a:	4618      	mov	r0, r3
 801734c:	f00c f8e5 	bl	802351a <_ZNSaIcED1Ev>
	}

	return std::get<bool>(this->value) && std::get<bool>(other.value);
 8017350:	68bb      	ldr	r3, [r7, #8]
 8017352:	3304      	adds	r3, #4
 8017354:	4618      	mov	r0, r3
 8017356:	f001 f80d 	bl	8018374 <_ZSt3getIbJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 801735a:	4603      	mov	r3, r0
 801735c:	781b      	ldrb	r3, [r3, #0]
 801735e:	2b00      	cmp	r3, #0
 8017360:	d00a      	beq.n	8017378 <_ZN6SymbolaaES_+0x7c>
 8017362:	687b      	ldr	r3, [r7, #4]
 8017364:	3304      	adds	r3, #4
 8017366:	4618      	mov	r0, r3
 8017368:	f001 f804 	bl	8018374 <_ZSt3getIbJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 801736c:	4603      	mov	r3, r0
 801736e:	781b      	ldrb	r3, [r3, #0]
 8017370:	2b00      	cmp	r3, #0
 8017372:	d001      	beq.n	8017378 <_ZN6SymbolaaES_+0x7c>
 8017374:	2301      	movs	r3, #1
 8017376:	e000      	b.n	801737a <_ZN6SymbolaaES_+0x7e>
 8017378:	2300      	movs	r3, #0
 801737a:	4619      	mov	r1, r3
 801737c:	68f8      	ldr	r0, [r7, #12]
 801737e:	f7ff fdf1 	bl	8016f64 <_ZN6SymbolC1Eb>
}
 8017382:	68f8      	ldr	r0, [r7, #12]
 8017384:	3730      	adds	r7, #48	; 0x30
 8017386:	46bd      	mov	sp, r7
 8017388:	bd80      	pop	{r7, pc}
 801738a:	bf00      	nop
 801738c:	08029bd8 	.word	0x08029bd8

08017390 <_ZN6SymbolooES_>:

Symbol Symbol::operator||(Symbol other)
{
 8017390:	b580      	push	{r7, lr}
 8017392:	b08c      	sub	sp, #48	; 0x30
 8017394:	af00      	add	r7, sp, #0
 8017396:	60f8      	str	r0, [r7, #12]
 8017398:	60b9      	str	r1, [r7, #8]
 801739a:	607a      	str	r2, [r7, #4]
	if (type != SYMBOL_BOOL || other.type != SYMBOL_BOOL)
 801739c:	68bb      	ldr	r3, [r7, #8]
 801739e:	781b      	ldrb	r3, [r3, #0]
 80173a0:	2b02      	cmp	r3, #2
 80173a2:	d103      	bne.n	80173ac <_ZN6SymbolooES_+0x1c>
 80173a4:	687b      	ldr	r3, [r7, #4]
 80173a6:	781b      	ldrb	r3, [r3, #0]
 80173a8:	2b02      	cmp	r3, #2
 80173aa:	d01b      	beq.n	80173e4 <_ZN6SymbolooES_+0x54>
	{
		Transmitter::report_error("operator or needs boolean expressions");
 80173ac:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80173b0:	4618      	mov	r0, r3
 80173b2:	f00c f8b1 	bl	8023518 <_ZNSaIcEC1Ev>
 80173b6:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 80173ba:	f107 0314 	add.w	r3, r7, #20
 80173be:	4918      	ldr	r1, [pc, #96]	; (8017420 <_ZN6SymbolooES_+0x90>)
 80173c0:	4618      	mov	r0, r3
 80173c2:	f7ea fce2 	bl	8001d8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 80173c6:	f107 0314 	add.w	r3, r7, #20
 80173ca:	4618      	mov	r0, r3
 80173cc:	f001 fc18 	bl	8018c00 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 80173d0:	f107 0314 	add.w	r3, r7, #20
 80173d4:	4618      	mov	r0, r3
 80173d6:	f00c fb30 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80173da:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80173de:	4618      	mov	r0, r3
 80173e0:	f00c f89b 	bl	802351a <_ZNSaIcED1Ev>
	}

	return std::get<bool>(this->value) || std::get<bool>(other.value);
 80173e4:	68bb      	ldr	r3, [r7, #8]
 80173e6:	3304      	adds	r3, #4
 80173e8:	4618      	mov	r0, r3
 80173ea:	f000 ffc3 	bl	8018374 <_ZSt3getIbJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 80173ee:	4603      	mov	r3, r0
 80173f0:	781b      	ldrb	r3, [r3, #0]
 80173f2:	2b00      	cmp	r3, #0
 80173f4:	d108      	bne.n	8017408 <_ZN6SymbolooES_+0x78>
 80173f6:	687b      	ldr	r3, [r7, #4]
 80173f8:	3304      	adds	r3, #4
 80173fa:	4618      	mov	r0, r3
 80173fc:	f000 ffba 	bl	8018374 <_ZSt3getIbJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017400:	4603      	mov	r3, r0
 8017402:	781b      	ldrb	r3, [r3, #0]
 8017404:	2b00      	cmp	r3, #0
 8017406:	d001      	beq.n	801740c <_ZN6SymbolooES_+0x7c>
 8017408:	2301      	movs	r3, #1
 801740a:	e000      	b.n	801740e <_ZN6SymbolooES_+0x7e>
 801740c:	2300      	movs	r3, #0
 801740e:	4619      	mov	r1, r3
 8017410:	68f8      	ldr	r0, [r7, #12]
 8017412:	f7ff fda7 	bl	8016f64 <_ZN6SymbolC1Eb>
}
 8017416:	68f8      	ldr	r0, [r7, #12]
 8017418:	3730      	adds	r7, #48	; 0x30
 801741a:	46bd      	mov	sp, r7
 801741c:	bd80      	pop	{r7, pc}
 801741e:	bf00      	nop
 8017420:	08029c00 	.word	0x08029c00

08017424 <_ZN6SymbolntEv>:

Symbol Symbol::operator!()
{
 8017424:	b580      	push	{r7, lr}
 8017426:	b08a      	sub	sp, #40	; 0x28
 8017428:	af00      	add	r7, sp, #0
 801742a:	6078      	str	r0, [r7, #4]
 801742c:	6039      	str	r1, [r7, #0]
	if (type != SYMBOL_BOOL)
 801742e:	683b      	ldr	r3, [r7, #0]
 8017430:	781b      	ldrb	r3, [r3, #0]
 8017432:	2b02      	cmp	r3, #2
 8017434:	d01b      	beq.n	801746e <_ZN6SymbolntEv+0x4a>
	{
		Transmitter::report_error("operator ! needs boolean expressions");
 8017436:	f107 0324 	add.w	r3, r7, #36	; 0x24
 801743a:	4618      	mov	r0, r3
 801743c:	f00c f86c 	bl	8023518 <_ZNSaIcEC1Ev>
 8017440:	f107 0224 	add.w	r2, r7, #36	; 0x24
 8017444:	f107 030c 	add.w	r3, r7, #12
 8017448:	4912      	ldr	r1, [pc, #72]	; (8017494 <_ZN6SymbolntEv+0x70>)
 801744a:	4618      	mov	r0, r3
 801744c:	f7ea fc9d 	bl	8001d8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8017450:	f107 030c 	add.w	r3, r7, #12
 8017454:	4618      	mov	r0, r3
 8017456:	f001 fbd3 	bl	8018c00 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801745a:	f107 030c 	add.w	r3, r7, #12
 801745e:	4618      	mov	r0, r3
 8017460:	f00c faeb 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8017464:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8017468:	4618      	mov	r0, r3
 801746a:	f00c f856 	bl	802351a <_ZNSaIcED1Ev>
	}

	return !(std::get<bool>(this->value));
 801746e:	683b      	ldr	r3, [r7, #0]
 8017470:	3304      	adds	r3, #4
 8017472:	4618      	mov	r0, r3
 8017474:	f000 ff7e 	bl	8018374 <_ZSt3getIbJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017478:	4603      	mov	r3, r0
 801747a:	781b      	ldrb	r3, [r3, #0]
 801747c:	f083 0301 	eor.w	r3, r3, #1
 8017480:	b2db      	uxtb	r3, r3
 8017482:	4619      	mov	r1, r3
 8017484:	6878      	ldr	r0, [r7, #4]
 8017486:	f7ff fd6d 	bl	8016f64 <_ZN6SymbolC1Eb>
}
 801748a:	6878      	ldr	r0, [r7, #4]
 801748c:	3728      	adds	r7, #40	; 0x28
 801748e:	46bd      	mov	sp, r7
 8017490:	bd80      	pop	{r7, pc}
 8017492:	bf00      	nop
 8017494:	08029c28 	.word	0x08029c28

08017498 <_ZN6SymbolgtES_>:

Symbol Symbol::operator>(Symbol other)
{
 8017498:	b590      	push	{r4, r7, lr}
 801749a:	ed2d 8b02 	vpush	{d8}
 801749e:	b08d      	sub	sp, #52	; 0x34
 80174a0:	af00      	add	r7, sp, #0
 80174a2:	60f8      	str	r0, [r7, #12]
 80174a4:	60b9      	str	r1, [r7, #8]
 80174a6:	607a      	str	r2, [r7, #4]
	align_types(other);
 80174a8:	6879      	ldr	r1, [r7, #4]
 80174aa:	68b8      	ldr	r0, [r7, #8]
 80174ac:	f000 fd2c 	bl	8017f08 <_ZN6Symbol11align_typesERS_>

	switch (type)
 80174b0:	68bb      	ldr	r3, [r7, #8]
 80174b2:	781b      	ldrb	r3, [r3, #0]
 80174b4:	2b00      	cmp	r3, #0
 80174b6:	d002      	beq.n	80174be <_ZN6SymbolgtES_+0x26>
 80174b8:	2b01      	cmp	r3, #1
 80174ba:	d018      	beq.n	80174ee <_ZN6SymbolgtES_+0x56>
 80174bc:	e034      	b.n	8017528 <_ZN6SymbolgtES_+0x90>
	{
	case SYMBOL_INT:
		return (std::get<int>(this->value) > std::get<int>(other.value));
 80174be:	68bb      	ldr	r3, [r7, #8]
 80174c0:	3304      	adds	r3, #4
 80174c2:	4618      	mov	r0, r3
 80174c4:	f7eb fd3c 	bl	8002f40 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 80174c8:	4603      	mov	r3, r0
 80174ca:	681c      	ldr	r4, [r3, #0]
 80174cc:	687b      	ldr	r3, [r7, #4]
 80174ce:	3304      	adds	r3, #4
 80174d0:	4618      	mov	r0, r3
 80174d2:	f7eb fd35 	bl	8002f40 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 80174d6:	4603      	mov	r3, r0
 80174d8:	681b      	ldr	r3, [r3, #0]
 80174da:	429c      	cmp	r4, r3
 80174dc:	bfcc      	ite	gt
 80174de:	2301      	movgt	r3, #1
 80174e0:	2300      	movle	r3, #0
 80174e2:	b2db      	uxtb	r3, r3
 80174e4:	4619      	mov	r1, r3
 80174e6:	68f8      	ldr	r0, [r7, #12]
 80174e8:	f7ff fd3c 	bl	8016f64 <_ZN6SymbolC1Eb>
 80174ec:	e03c      	b.n	8017568 <_ZN6SymbolgtES_+0xd0>
	case SYMBOL_FLOAT:
		return (std::get<float>(this->value) > std::get<float>(other.value));
 80174ee:	68bb      	ldr	r3, [r7, #8]
 80174f0:	3304      	adds	r3, #4
 80174f2:	4618      	mov	r0, r3
 80174f4:	f000 fb88 	bl	8017c08 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 80174f8:	4603      	mov	r3, r0
 80174fa:	ed93 8a00 	vldr	s16, [r3]
 80174fe:	687b      	ldr	r3, [r7, #4]
 8017500:	3304      	adds	r3, #4
 8017502:	4618      	mov	r0, r3
 8017504:	f000 fb80 	bl	8017c08 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017508:	4603      	mov	r3, r0
 801750a:	edd3 7a00 	vldr	s15, [r3]
 801750e:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8017512:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017516:	bfcc      	ite	gt
 8017518:	2301      	movgt	r3, #1
 801751a:	2300      	movle	r3, #0
 801751c:	b2db      	uxtb	r3, r3
 801751e:	4619      	mov	r1, r3
 8017520:	68f8      	ldr	r0, [r7, #12]
 8017522:	f7ff fd1f 	bl	8016f64 <_ZN6SymbolC1Eb>
 8017526:	e01f      	b.n	8017568 <_ZN6SymbolgtES_+0xd0>
	default:
		Transmitter::report_error("invalid type for comparison");
 8017528:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 801752c:	4618      	mov	r0, r3
 801752e:	f00b fff3 	bl	8023518 <_ZNSaIcEC1Ev>
 8017532:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 8017536:	f107 0314 	add.w	r3, r7, #20
 801753a:	490e      	ldr	r1, [pc, #56]	; (8017574 <_ZN6SymbolgtES_+0xdc>)
 801753c:	4618      	mov	r0, r3
 801753e:	f7ea fc24 	bl	8001d8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8017542:	f107 0314 	add.w	r3, r7, #20
 8017546:	4618      	mov	r0, r3
 8017548:	f001 fb5a 	bl	8018c00 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801754c:	f107 0314 	add.w	r3, r7, #20
 8017550:	4618      	mov	r0, r3
 8017552:	f00c fa72 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8017556:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 801755a:	4618      	mov	r0, r3
 801755c:	f00b ffdd 	bl	802351a <_ZNSaIcED1Ev>
	}

	return 0;
 8017560:	2100      	movs	r1, #0
 8017562:	68f8      	ldr	r0, [r7, #12]
 8017564:	f7ff fcaa 	bl	8016ebc <_ZN6SymbolC1Ei>
}
 8017568:	68f8      	ldr	r0, [r7, #12]
 801756a:	3734      	adds	r7, #52	; 0x34
 801756c:	46bd      	mov	sp, r7
 801756e:	ecbd 8b02 	vpop	{d8}
 8017572:	bd90      	pop	{r4, r7, pc}
 8017574:	08029c50 	.word	0x08029c50

08017578 <_ZN6SymbolgeES_>:

Symbol Symbol::operator>=(Symbol other)
{
 8017578:	b590      	push	{r4, r7, lr}
 801757a:	ed2d 8b02 	vpush	{d8}
 801757e:	b08d      	sub	sp, #52	; 0x34
 8017580:	af00      	add	r7, sp, #0
 8017582:	60f8      	str	r0, [r7, #12]
 8017584:	60b9      	str	r1, [r7, #8]
 8017586:	607a      	str	r2, [r7, #4]
	align_types(other);
 8017588:	6879      	ldr	r1, [r7, #4]
 801758a:	68b8      	ldr	r0, [r7, #8]
 801758c:	f000 fcbc 	bl	8017f08 <_ZN6Symbol11align_typesERS_>

	switch (type)
 8017590:	68bb      	ldr	r3, [r7, #8]
 8017592:	781b      	ldrb	r3, [r3, #0]
 8017594:	2b00      	cmp	r3, #0
 8017596:	d002      	beq.n	801759e <_ZN6SymbolgeES_+0x26>
 8017598:	2b01      	cmp	r3, #1
 801759a:	d018      	beq.n	80175ce <_ZN6SymbolgeES_+0x56>
 801759c:	e034      	b.n	8017608 <_ZN6SymbolgeES_+0x90>
	{
	case SYMBOL_INT:
		return (std::get<int>(this->value) >= std::get<int>(other.value));
 801759e:	68bb      	ldr	r3, [r7, #8]
 80175a0:	3304      	adds	r3, #4
 80175a2:	4618      	mov	r0, r3
 80175a4:	f7eb fccc 	bl	8002f40 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 80175a8:	4603      	mov	r3, r0
 80175aa:	681c      	ldr	r4, [r3, #0]
 80175ac:	687b      	ldr	r3, [r7, #4]
 80175ae:	3304      	adds	r3, #4
 80175b0:	4618      	mov	r0, r3
 80175b2:	f7eb fcc5 	bl	8002f40 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 80175b6:	4603      	mov	r3, r0
 80175b8:	681b      	ldr	r3, [r3, #0]
 80175ba:	429c      	cmp	r4, r3
 80175bc:	bfac      	ite	ge
 80175be:	2301      	movge	r3, #1
 80175c0:	2300      	movlt	r3, #0
 80175c2:	b2db      	uxtb	r3, r3
 80175c4:	4619      	mov	r1, r3
 80175c6:	68f8      	ldr	r0, [r7, #12]
 80175c8:	f7ff fccc 	bl	8016f64 <_ZN6SymbolC1Eb>
 80175cc:	e03c      	b.n	8017648 <_ZN6SymbolgeES_+0xd0>
	case SYMBOL_FLOAT:
		return (std::get<float>(this->value) >= std::get<float>(other.value));
 80175ce:	68bb      	ldr	r3, [r7, #8]
 80175d0:	3304      	adds	r3, #4
 80175d2:	4618      	mov	r0, r3
 80175d4:	f000 fb18 	bl	8017c08 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 80175d8:	4603      	mov	r3, r0
 80175da:	ed93 8a00 	vldr	s16, [r3]
 80175de:	687b      	ldr	r3, [r7, #4]
 80175e0:	3304      	adds	r3, #4
 80175e2:	4618      	mov	r0, r3
 80175e4:	f000 fb10 	bl	8017c08 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 80175e8:	4603      	mov	r3, r0
 80175ea:	edd3 7a00 	vldr	s15, [r3]
 80175ee:	eeb4 8ae7 	vcmpe.f32	s16, s15
 80175f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80175f6:	bfac      	ite	ge
 80175f8:	2301      	movge	r3, #1
 80175fa:	2300      	movlt	r3, #0
 80175fc:	b2db      	uxtb	r3, r3
 80175fe:	4619      	mov	r1, r3
 8017600:	68f8      	ldr	r0, [r7, #12]
 8017602:	f7ff fcaf 	bl	8016f64 <_ZN6SymbolC1Eb>
 8017606:	e01f      	b.n	8017648 <_ZN6SymbolgeES_+0xd0>
	default:
		Transmitter::report_error("invalid type for comparison");
 8017608:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 801760c:	4618      	mov	r0, r3
 801760e:	f00b ff83 	bl	8023518 <_ZNSaIcEC1Ev>
 8017612:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 8017616:	f107 0314 	add.w	r3, r7, #20
 801761a:	490e      	ldr	r1, [pc, #56]	; (8017654 <_ZN6SymbolgeES_+0xdc>)
 801761c:	4618      	mov	r0, r3
 801761e:	f7ea fbb4 	bl	8001d8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8017622:	f107 0314 	add.w	r3, r7, #20
 8017626:	4618      	mov	r0, r3
 8017628:	f001 faea 	bl	8018c00 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801762c:	f107 0314 	add.w	r3, r7, #20
 8017630:	4618      	mov	r0, r3
 8017632:	f00c fa02 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8017636:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 801763a:	4618      	mov	r0, r3
 801763c:	f00b ff6d 	bl	802351a <_ZNSaIcED1Ev>
	}

	return 0;
 8017640:	2100      	movs	r1, #0
 8017642:	68f8      	ldr	r0, [r7, #12]
 8017644:	f7ff fc3a 	bl	8016ebc <_ZN6SymbolC1Ei>
}
 8017648:	68f8      	ldr	r0, [r7, #12]
 801764a:	3734      	adds	r7, #52	; 0x34
 801764c:	46bd      	mov	sp, r7
 801764e:	ecbd 8b02 	vpop	{d8}
 8017652:	bd90      	pop	{r4, r7, pc}
 8017654:	08029c50 	.word	0x08029c50

08017658 <_ZN6SymbolltES_>:

Symbol Symbol::operator<(Symbol other)
{
 8017658:	b590      	push	{r4, r7, lr}
 801765a:	ed2d 8b02 	vpush	{d8}
 801765e:	b08d      	sub	sp, #52	; 0x34
 8017660:	af00      	add	r7, sp, #0
 8017662:	60f8      	str	r0, [r7, #12]
 8017664:	60b9      	str	r1, [r7, #8]
 8017666:	607a      	str	r2, [r7, #4]
	align_types(other);
 8017668:	6879      	ldr	r1, [r7, #4]
 801766a:	68b8      	ldr	r0, [r7, #8]
 801766c:	f000 fc4c 	bl	8017f08 <_ZN6Symbol11align_typesERS_>

	switch (type)
 8017670:	68bb      	ldr	r3, [r7, #8]
 8017672:	781b      	ldrb	r3, [r3, #0]
 8017674:	2b00      	cmp	r3, #0
 8017676:	d002      	beq.n	801767e <_ZN6SymbolltES_+0x26>
 8017678:	2b01      	cmp	r3, #1
 801767a:	d018      	beq.n	80176ae <_ZN6SymbolltES_+0x56>
 801767c:	e034      	b.n	80176e8 <_ZN6SymbolltES_+0x90>
	{
	case SYMBOL_INT:
		return (std::get<int>(this->value) < std::get<int>(other.value));
 801767e:	68bb      	ldr	r3, [r7, #8]
 8017680:	3304      	adds	r3, #4
 8017682:	4618      	mov	r0, r3
 8017684:	f7eb fc5c 	bl	8002f40 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017688:	4603      	mov	r3, r0
 801768a:	681c      	ldr	r4, [r3, #0]
 801768c:	687b      	ldr	r3, [r7, #4]
 801768e:	3304      	adds	r3, #4
 8017690:	4618      	mov	r0, r3
 8017692:	f7eb fc55 	bl	8002f40 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017696:	4603      	mov	r3, r0
 8017698:	681b      	ldr	r3, [r3, #0]
 801769a:	429c      	cmp	r4, r3
 801769c:	bfb4      	ite	lt
 801769e:	2301      	movlt	r3, #1
 80176a0:	2300      	movge	r3, #0
 80176a2:	b2db      	uxtb	r3, r3
 80176a4:	4619      	mov	r1, r3
 80176a6:	68f8      	ldr	r0, [r7, #12]
 80176a8:	f7ff fc5c 	bl	8016f64 <_ZN6SymbolC1Eb>
 80176ac:	e03c      	b.n	8017728 <_ZN6SymbolltES_+0xd0>
	case SYMBOL_FLOAT:
		return (std::get<float>(this->value) < std::get<float>(other.value));
 80176ae:	68bb      	ldr	r3, [r7, #8]
 80176b0:	3304      	adds	r3, #4
 80176b2:	4618      	mov	r0, r3
 80176b4:	f000 faa8 	bl	8017c08 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 80176b8:	4603      	mov	r3, r0
 80176ba:	ed93 8a00 	vldr	s16, [r3]
 80176be:	687b      	ldr	r3, [r7, #4]
 80176c0:	3304      	adds	r3, #4
 80176c2:	4618      	mov	r0, r3
 80176c4:	f000 faa0 	bl	8017c08 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 80176c8:	4603      	mov	r3, r0
 80176ca:	edd3 7a00 	vldr	s15, [r3]
 80176ce:	eeb4 8ae7 	vcmpe.f32	s16, s15
 80176d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80176d6:	bf4c      	ite	mi
 80176d8:	2301      	movmi	r3, #1
 80176da:	2300      	movpl	r3, #0
 80176dc:	b2db      	uxtb	r3, r3
 80176de:	4619      	mov	r1, r3
 80176e0:	68f8      	ldr	r0, [r7, #12]
 80176e2:	f7ff fc3f 	bl	8016f64 <_ZN6SymbolC1Eb>
 80176e6:	e01f      	b.n	8017728 <_ZN6SymbolltES_+0xd0>
	default:
		Transmitter::report_error("invalid type for comparison");
 80176e8:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80176ec:	4618      	mov	r0, r3
 80176ee:	f00b ff13 	bl	8023518 <_ZNSaIcEC1Ev>
 80176f2:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 80176f6:	f107 0314 	add.w	r3, r7, #20
 80176fa:	490e      	ldr	r1, [pc, #56]	; (8017734 <_ZN6SymbolltES_+0xdc>)
 80176fc:	4618      	mov	r0, r3
 80176fe:	f7ea fb44 	bl	8001d8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8017702:	f107 0314 	add.w	r3, r7, #20
 8017706:	4618      	mov	r0, r3
 8017708:	f001 fa7a 	bl	8018c00 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801770c:	f107 0314 	add.w	r3, r7, #20
 8017710:	4618      	mov	r0, r3
 8017712:	f00c f992 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8017716:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 801771a:	4618      	mov	r0, r3
 801771c:	f00b fefd 	bl	802351a <_ZNSaIcED1Ev>
	}

	return 0;
 8017720:	2100      	movs	r1, #0
 8017722:	68f8      	ldr	r0, [r7, #12]
 8017724:	f7ff fbca 	bl	8016ebc <_ZN6SymbolC1Ei>
}
 8017728:	68f8      	ldr	r0, [r7, #12]
 801772a:	3734      	adds	r7, #52	; 0x34
 801772c:	46bd      	mov	sp, r7
 801772e:	ecbd 8b02 	vpop	{d8}
 8017732:	bd90      	pop	{r4, r7, pc}
 8017734:	08029c50 	.word	0x08029c50

08017738 <_ZN6SymbolleES_>:

Symbol Symbol::operator<=(Symbol other)
{
 8017738:	b590      	push	{r4, r7, lr}
 801773a:	ed2d 8b02 	vpush	{d8}
 801773e:	b08d      	sub	sp, #52	; 0x34
 8017740:	af00      	add	r7, sp, #0
 8017742:	60f8      	str	r0, [r7, #12]
 8017744:	60b9      	str	r1, [r7, #8]
 8017746:	607a      	str	r2, [r7, #4]
	align_types(other);
 8017748:	6879      	ldr	r1, [r7, #4]
 801774a:	68b8      	ldr	r0, [r7, #8]
 801774c:	f000 fbdc 	bl	8017f08 <_ZN6Symbol11align_typesERS_>

	switch (type)
 8017750:	68bb      	ldr	r3, [r7, #8]
 8017752:	781b      	ldrb	r3, [r3, #0]
 8017754:	2b00      	cmp	r3, #0
 8017756:	d002      	beq.n	801775e <_ZN6SymbolleES_+0x26>
 8017758:	2b01      	cmp	r3, #1
 801775a:	d018      	beq.n	801778e <_ZN6SymbolleES_+0x56>
 801775c:	e034      	b.n	80177c8 <_ZN6SymbolleES_+0x90>
	{
	case SYMBOL_INT:
		return (std::get<int>(this->value) <= std::get<int>(other.value));
 801775e:	68bb      	ldr	r3, [r7, #8]
 8017760:	3304      	adds	r3, #4
 8017762:	4618      	mov	r0, r3
 8017764:	f7eb fbec 	bl	8002f40 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017768:	4603      	mov	r3, r0
 801776a:	681c      	ldr	r4, [r3, #0]
 801776c:	687b      	ldr	r3, [r7, #4]
 801776e:	3304      	adds	r3, #4
 8017770:	4618      	mov	r0, r3
 8017772:	f7eb fbe5 	bl	8002f40 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017776:	4603      	mov	r3, r0
 8017778:	681b      	ldr	r3, [r3, #0]
 801777a:	429c      	cmp	r4, r3
 801777c:	bfd4      	ite	le
 801777e:	2301      	movle	r3, #1
 8017780:	2300      	movgt	r3, #0
 8017782:	b2db      	uxtb	r3, r3
 8017784:	4619      	mov	r1, r3
 8017786:	68f8      	ldr	r0, [r7, #12]
 8017788:	f7ff fbec 	bl	8016f64 <_ZN6SymbolC1Eb>
 801778c:	e03c      	b.n	8017808 <_ZN6SymbolleES_+0xd0>
	case SYMBOL_FLOAT:
		return (std::get<float>(this->value) <= std::get<float>(other.value));
 801778e:	68bb      	ldr	r3, [r7, #8]
 8017790:	3304      	adds	r3, #4
 8017792:	4618      	mov	r0, r3
 8017794:	f000 fa38 	bl	8017c08 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017798:	4603      	mov	r3, r0
 801779a:	ed93 8a00 	vldr	s16, [r3]
 801779e:	687b      	ldr	r3, [r7, #4]
 80177a0:	3304      	adds	r3, #4
 80177a2:	4618      	mov	r0, r3
 80177a4:	f000 fa30 	bl	8017c08 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 80177a8:	4603      	mov	r3, r0
 80177aa:	edd3 7a00 	vldr	s15, [r3]
 80177ae:	eeb4 8ae7 	vcmpe.f32	s16, s15
 80177b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80177b6:	bf94      	ite	ls
 80177b8:	2301      	movls	r3, #1
 80177ba:	2300      	movhi	r3, #0
 80177bc:	b2db      	uxtb	r3, r3
 80177be:	4619      	mov	r1, r3
 80177c0:	68f8      	ldr	r0, [r7, #12]
 80177c2:	f7ff fbcf 	bl	8016f64 <_ZN6SymbolC1Eb>
 80177c6:	e01f      	b.n	8017808 <_ZN6SymbolleES_+0xd0>
	default:
		Transmitter::report_error("invalid type for comparison");
 80177c8:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80177cc:	4618      	mov	r0, r3
 80177ce:	f00b fea3 	bl	8023518 <_ZNSaIcEC1Ev>
 80177d2:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 80177d6:	f107 0314 	add.w	r3, r7, #20
 80177da:	490e      	ldr	r1, [pc, #56]	; (8017814 <_ZN6SymbolleES_+0xdc>)
 80177dc:	4618      	mov	r0, r3
 80177de:	f7ea fad4 	bl	8001d8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 80177e2:	f107 0314 	add.w	r3, r7, #20
 80177e6:	4618      	mov	r0, r3
 80177e8:	f001 fa0a 	bl	8018c00 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 80177ec:	f107 0314 	add.w	r3, r7, #20
 80177f0:	4618      	mov	r0, r3
 80177f2:	f00c f922 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80177f6:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80177fa:	4618      	mov	r0, r3
 80177fc:	f00b fe8d 	bl	802351a <_ZNSaIcED1Ev>
	}

	return 0;
 8017800:	2100      	movs	r1, #0
 8017802:	68f8      	ldr	r0, [r7, #12]
 8017804:	f7ff fb5a 	bl	8016ebc <_ZN6SymbolC1Ei>
}
 8017808:	68f8      	ldr	r0, [r7, #12]
 801780a:	3734      	adds	r7, #52	; 0x34
 801780c:	46bd      	mov	sp, r7
 801780e:	ecbd 8b02 	vpop	{d8}
 8017812:	bd90      	pop	{r4, r7, pc}
 8017814:	08029c50 	.word	0x08029c50

08017818 <_ZN6SymboleqES_>:

Symbol Symbol::operator==(Symbol other)
{
 8017818:	b590      	push	{r4, r7, lr}
 801781a:	ed2d 8b02 	vpush	{d8}
 801781e:	b08d      	sub	sp, #52	; 0x34
 8017820:	af00      	add	r7, sp, #0
 8017822:	60f8      	str	r0, [r7, #12]
 8017824:	60b9      	str	r1, [r7, #8]
 8017826:	607a      	str	r2, [r7, #4]
	align_types(other);
 8017828:	6879      	ldr	r1, [r7, #4]
 801782a:	68b8      	ldr	r0, [r7, #8]
 801782c:	f000 fb6c 	bl	8017f08 <_ZN6Symbol11align_typesERS_>

	switch (type)
 8017830:	68bb      	ldr	r3, [r7, #8]
 8017832:	781b      	ldrb	r3, [r3, #0]
 8017834:	2b02      	cmp	r3, #2
 8017836:	d03b      	beq.n	80178b0 <_ZN6SymboleqES_+0x98>
 8017838:	2b02      	cmp	r3, #2
 801783a:	dc51      	bgt.n	80178e0 <_ZN6SymboleqES_+0xc8>
 801783c:	2b00      	cmp	r3, #0
 801783e:	d002      	beq.n	8017846 <_ZN6SymboleqES_+0x2e>
 8017840:	2b01      	cmp	r3, #1
 8017842:	d018      	beq.n	8017876 <_ZN6SymboleqES_+0x5e>
 8017844:	e04c      	b.n	80178e0 <_ZN6SymboleqES_+0xc8>
	{
	case SYMBOL_INT:
		return (std::get<int>(this->value) == std::get<int>(other.value));
 8017846:	68bb      	ldr	r3, [r7, #8]
 8017848:	3304      	adds	r3, #4
 801784a:	4618      	mov	r0, r3
 801784c:	f7eb fb78 	bl	8002f40 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017850:	4603      	mov	r3, r0
 8017852:	681c      	ldr	r4, [r3, #0]
 8017854:	687b      	ldr	r3, [r7, #4]
 8017856:	3304      	adds	r3, #4
 8017858:	4618      	mov	r0, r3
 801785a:	f7eb fb71 	bl	8002f40 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 801785e:	4603      	mov	r3, r0
 8017860:	681b      	ldr	r3, [r3, #0]
 8017862:	429c      	cmp	r4, r3
 8017864:	bf0c      	ite	eq
 8017866:	2301      	moveq	r3, #1
 8017868:	2300      	movne	r3, #0
 801786a:	b2db      	uxtb	r3, r3
 801786c:	4619      	mov	r1, r3
 801786e:	68f8      	ldr	r0, [r7, #12]
 8017870:	f7ff fb78 	bl	8016f64 <_ZN6SymbolC1Eb>
 8017874:	e054      	b.n	8017920 <_ZN6SymboleqES_+0x108>
	case SYMBOL_FLOAT:
		return (std::get<float>(this->value) == std::get<float>(other.value));
 8017876:	68bb      	ldr	r3, [r7, #8]
 8017878:	3304      	adds	r3, #4
 801787a:	4618      	mov	r0, r3
 801787c:	f000 f9c4 	bl	8017c08 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017880:	4603      	mov	r3, r0
 8017882:	ed93 8a00 	vldr	s16, [r3]
 8017886:	687b      	ldr	r3, [r7, #4]
 8017888:	3304      	adds	r3, #4
 801788a:	4618      	mov	r0, r3
 801788c:	f000 f9bc 	bl	8017c08 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017890:	4603      	mov	r3, r0
 8017892:	edd3 7a00 	vldr	s15, [r3]
 8017896:	eeb4 8a67 	vcmp.f32	s16, s15
 801789a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801789e:	bf0c      	ite	eq
 80178a0:	2301      	moveq	r3, #1
 80178a2:	2300      	movne	r3, #0
 80178a4:	b2db      	uxtb	r3, r3
 80178a6:	4619      	mov	r1, r3
 80178a8:	68f8      	ldr	r0, [r7, #12]
 80178aa:	f7ff fb5b 	bl	8016f64 <_ZN6SymbolC1Eb>
 80178ae:	e037      	b.n	8017920 <_ZN6SymboleqES_+0x108>
	case SYMBOL_BOOL:
		return (std::get<bool>(this->value) == std::get<bool>(other.value));
 80178b0:	68bb      	ldr	r3, [r7, #8]
 80178b2:	3304      	adds	r3, #4
 80178b4:	4618      	mov	r0, r3
 80178b6:	f000 fd5d 	bl	8018374 <_ZSt3getIbJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 80178ba:	4603      	mov	r3, r0
 80178bc:	781c      	ldrb	r4, [r3, #0]
 80178be:	687b      	ldr	r3, [r7, #4]
 80178c0:	3304      	adds	r3, #4
 80178c2:	4618      	mov	r0, r3
 80178c4:	f000 fd56 	bl	8018374 <_ZSt3getIbJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 80178c8:	4603      	mov	r3, r0
 80178ca:	781b      	ldrb	r3, [r3, #0]
 80178cc:	429c      	cmp	r4, r3
 80178ce:	bf0c      	ite	eq
 80178d0:	2301      	moveq	r3, #1
 80178d2:	2300      	movne	r3, #0
 80178d4:	b2db      	uxtb	r3, r3
 80178d6:	4619      	mov	r1, r3
 80178d8:	68f8      	ldr	r0, [r7, #12]
 80178da:	f7ff fb43 	bl	8016f64 <_ZN6SymbolC1Eb>
 80178de:	e01f      	b.n	8017920 <_ZN6SymboleqES_+0x108>
	default:
		Transmitter::report_error("invalid type for comparison");
 80178e0:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80178e4:	4618      	mov	r0, r3
 80178e6:	f00b fe17 	bl	8023518 <_ZNSaIcEC1Ev>
 80178ea:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 80178ee:	f107 0314 	add.w	r3, r7, #20
 80178f2:	490e      	ldr	r1, [pc, #56]	; (801792c <_ZN6SymboleqES_+0x114>)
 80178f4:	4618      	mov	r0, r3
 80178f6:	f7ea fa48 	bl	8001d8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 80178fa:	f107 0314 	add.w	r3, r7, #20
 80178fe:	4618      	mov	r0, r3
 8017900:	f001 f97e 	bl	8018c00 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8017904:	f107 0314 	add.w	r3, r7, #20
 8017908:	4618      	mov	r0, r3
 801790a:	f00c f896 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801790e:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8017912:	4618      	mov	r0, r3
 8017914:	f00b fe01 	bl	802351a <_ZNSaIcED1Ev>
	}

	return 0;
 8017918:	2100      	movs	r1, #0
 801791a:	68f8      	ldr	r0, [r7, #12]
 801791c:	f7ff face 	bl	8016ebc <_ZN6SymbolC1Ei>
}
 8017920:	68f8      	ldr	r0, [r7, #12]
 8017922:	3734      	adds	r7, #52	; 0x34
 8017924:	46bd      	mov	sp, r7
 8017926:	ecbd 8b02 	vpop	{d8}
 801792a:	bd90      	pop	{r4, r7, pc}
 801792c:	08029c50 	.word	0x08029c50

08017930 <_ZN6SymbolngEv>:

	return 0;
}

Symbol Symbol::operator-()
{
 8017930:	b580      	push	{r7, lr}
 8017932:	b08a      	sub	sp, #40	; 0x28
 8017934:	af00      	add	r7, sp, #0
 8017936:	6078      	str	r0, [r7, #4]
 8017938:	6039      	str	r1, [r7, #0]
	switch (type)
 801793a:	683b      	ldr	r3, [r7, #0]
 801793c:	781b      	ldrb	r3, [r3, #0]
 801793e:	2b00      	cmp	r3, #0
 8017940:	d002      	beq.n	8017948 <_ZN6SymbolngEv+0x18>
 8017942:	2b01      	cmp	r3, #1
 8017944:	d00d      	beq.n	8017962 <_ZN6SymbolngEv+0x32>
 8017946:	e01c      	b.n	8017982 <_ZN6SymbolngEv+0x52>
	{
	case SYMBOL_INT:
		return (-std::get<int>(this->value));
 8017948:	683b      	ldr	r3, [r7, #0]
 801794a:	3304      	adds	r3, #4
 801794c:	4618      	mov	r0, r3
 801794e:	f7eb faf7 	bl	8002f40 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017952:	4603      	mov	r3, r0
 8017954:	681b      	ldr	r3, [r3, #0]
 8017956:	425b      	negs	r3, r3
 8017958:	4619      	mov	r1, r3
 801795a:	6878      	ldr	r0, [r7, #4]
 801795c:	f7ff faae 	bl	8016ebc <_ZN6SymbolC1Ei>
 8017960:	e02f      	b.n	80179c2 <_ZN6SymbolngEv+0x92>
	case SYMBOL_FLOAT:
		return (-std::get<float>(this->value));
 8017962:	683b      	ldr	r3, [r7, #0]
 8017964:	3304      	adds	r3, #4
 8017966:	4618      	mov	r0, r3
 8017968:	f000 f94e 	bl	8017c08 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 801796c:	4603      	mov	r3, r0
 801796e:	edd3 7a00 	vldr	s15, [r3]
 8017972:	eef1 7a67 	vneg.f32	s15, s15
 8017976:	eeb0 0a67 	vmov.f32	s0, s15
 801797a:	6878      	ldr	r0, [r7, #4]
 801797c:	f7ff fab7 	bl	8016eee <_ZN6SymbolC1Ef>
 8017980:	e01f      	b.n	80179c2 <_ZN6SymbolngEv+0x92>
	default:
		Transmitter::report_error("invalid type for minus unary operator");
 8017982:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8017986:	4618      	mov	r0, r3
 8017988:	f00b fdc6 	bl	8023518 <_ZNSaIcEC1Ev>
 801798c:	f107 0224 	add.w	r2, r7, #36	; 0x24
 8017990:	f107 030c 	add.w	r3, r7, #12
 8017994:	490d      	ldr	r1, [pc, #52]	; (80179cc <_ZN6SymbolngEv+0x9c>)
 8017996:	4618      	mov	r0, r3
 8017998:	f7ea f9f7 	bl	8001d8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801799c:	f107 030c 	add.w	r3, r7, #12
 80179a0:	4618      	mov	r0, r3
 80179a2:	f001 f92d 	bl	8018c00 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 80179a6:	f107 030c 	add.w	r3, r7, #12
 80179aa:	4618      	mov	r0, r3
 80179ac:	f00c f845 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80179b0:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80179b4:	4618      	mov	r0, r3
 80179b6:	f00b fdb0 	bl	802351a <_ZNSaIcED1Ev>
	}

	return 0;
 80179ba:	2100      	movs	r1, #0
 80179bc:	6878      	ldr	r0, [r7, #4]
 80179be:	f7ff fa7d 	bl	8016ebc <_ZN6SymbolC1Ei>
}
 80179c2:	6878      	ldr	r0, [r7, #4]
 80179c4:	3728      	adds	r7, #40	; 0x28
 80179c6:	46bd      	mov	sp, r7
 80179c8:	bd80      	pop	{r7, pc}
 80179ca:	bf00      	nop
 80179cc:	08029c6c 	.word	0x08029c6c

080179d0 <_ZN6SymbolmlES_>:

Symbol Symbol::operator*(Symbol other)
{
 80179d0:	b590      	push	{r4, r7, lr}
 80179d2:	ed2d 8b02 	vpush	{d8}
 80179d6:	b08d      	sub	sp, #52	; 0x34
 80179d8:	af00      	add	r7, sp, #0
 80179da:	60f8      	str	r0, [r7, #12]
 80179dc:	60b9      	str	r1, [r7, #8]
 80179de:	607a      	str	r2, [r7, #4]
	align_types(other);
 80179e0:	6879      	ldr	r1, [r7, #4]
 80179e2:	68b8      	ldr	r0, [r7, #8]
 80179e4:	f000 fa90 	bl	8017f08 <_ZN6Symbol11align_typesERS_>

	switch (type)
 80179e8:	68bb      	ldr	r3, [r7, #8]
 80179ea:	781b      	ldrb	r3, [r3, #0]
 80179ec:	2b00      	cmp	r3, #0
 80179ee:	d002      	beq.n	80179f6 <_ZN6SymbolmlES_+0x26>
 80179f0:	2b01      	cmp	r3, #1
 80179f2:	d015      	beq.n	8017a20 <_ZN6SymbolmlES_+0x50>
 80179f4:	e02c      	b.n	8017a50 <_ZN6SymbolmlES_+0x80>
	{
	case SYMBOL_INT:
		return (std::get<int>(this->value) * std::get<int>(other.value));
 80179f6:	68bb      	ldr	r3, [r7, #8]
 80179f8:	3304      	adds	r3, #4
 80179fa:	4618      	mov	r0, r3
 80179fc:	f7eb faa0 	bl	8002f40 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017a00:	4603      	mov	r3, r0
 8017a02:	681c      	ldr	r4, [r3, #0]
 8017a04:	687b      	ldr	r3, [r7, #4]
 8017a06:	3304      	adds	r3, #4
 8017a08:	4618      	mov	r0, r3
 8017a0a:	f7eb fa99 	bl	8002f40 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017a0e:	4603      	mov	r3, r0
 8017a10:	681b      	ldr	r3, [r3, #0]
 8017a12:	fb03 f304 	mul.w	r3, r3, r4
 8017a16:	4619      	mov	r1, r3
 8017a18:	68f8      	ldr	r0, [r7, #12]
 8017a1a:	f7ff fa4f 	bl	8016ebc <_ZN6SymbolC1Ei>
 8017a1e:	e037      	b.n	8017a90 <_ZN6SymbolmlES_+0xc0>
	case SYMBOL_FLOAT:
		return (std::get<float>(this->value) * std::get<float>(other.value));
 8017a20:	68bb      	ldr	r3, [r7, #8]
 8017a22:	3304      	adds	r3, #4
 8017a24:	4618      	mov	r0, r3
 8017a26:	f000 f8ef 	bl	8017c08 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017a2a:	4603      	mov	r3, r0
 8017a2c:	ed93 8a00 	vldr	s16, [r3]
 8017a30:	687b      	ldr	r3, [r7, #4]
 8017a32:	3304      	adds	r3, #4
 8017a34:	4618      	mov	r0, r3
 8017a36:	f000 f8e7 	bl	8017c08 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017a3a:	4603      	mov	r3, r0
 8017a3c:	edd3 7a00 	vldr	s15, [r3]
 8017a40:	ee68 7a27 	vmul.f32	s15, s16, s15
 8017a44:	eeb0 0a67 	vmov.f32	s0, s15
 8017a48:	68f8      	ldr	r0, [r7, #12]
 8017a4a:	f7ff fa50 	bl	8016eee <_ZN6SymbolC1Ef>
 8017a4e:	e01f      	b.n	8017a90 <_ZN6SymbolmlES_+0xc0>
	default:
		Transmitter::report_error("invalid type for multiplication");
 8017a50:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8017a54:	4618      	mov	r0, r3
 8017a56:	f00b fd5f 	bl	8023518 <_ZNSaIcEC1Ev>
 8017a5a:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 8017a5e:	f107 0314 	add.w	r3, r7, #20
 8017a62:	490e      	ldr	r1, [pc, #56]	; (8017a9c <_ZN6SymbolmlES_+0xcc>)
 8017a64:	4618      	mov	r0, r3
 8017a66:	f7ea f990 	bl	8001d8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8017a6a:	f107 0314 	add.w	r3, r7, #20
 8017a6e:	4618      	mov	r0, r3
 8017a70:	f001 f8c6 	bl	8018c00 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8017a74:	f107 0314 	add.w	r3, r7, #20
 8017a78:	4618      	mov	r0, r3
 8017a7a:	f00b ffde 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8017a7e:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8017a82:	4618      	mov	r0, r3
 8017a84:	f00b fd49 	bl	802351a <_ZNSaIcED1Ev>
	}

	return 0;
 8017a88:	2100      	movs	r1, #0
 8017a8a:	68f8      	ldr	r0, [r7, #12]
 8017a8c:	f7ff fa16 	bl	8016ebc <_ZN6SymbolC1Ei>
}
 8017a90:	68f8      	ldr	r0, [r7, #12]
 8017a92:	3734      	adds	r7, #52	; 0x34
 8017a94:	46bd      	mov	sp, r7
 8017a96:	ecbd 8b02 	vpop	{d8}
 8017a9a:	bd90      	pop	{r4, r7, pc}
 8017a9c:	08029c94 	.word	0x08029c94

08017aa0 <_ZN6SymboldvES_>:

Symbol Symbol::operator/(Symbol other)
{
 8017aa0:	b590      	push	{r4, r7, lr}
 8017aa2:	ed2d 8b02 	vpush	{d8}
 8017aa6:	b08d      	sub	sp, #52	; 0x34
 8017aa8:	af00      	add	r7, sp, #0
 8017aaa:	60f8      	str	r0, [r7, #12]
 8017aac:	60b9      	str	r1, [r7, #8]
 8017aae:	607a      	str	r2, [r7, #4]
	align_types(other);
 8017ab0:	6879      	ldr	r1, [r7, #4]
 8017ab2:	68b8      	ldr	r0, [r7, #8]
 8017ab4:	f000 fa28 	bl	8017f08 <_ZN6Symbol11align_typesERS_>

	switch (type)
 8017ab8:	68bb      	ldr	r3, [r7, #8]
 8017aba:	781b      	ldrb	r3, [r3, #0]
 8017abc:	2b00      	cmp	r3, #0
 8017abe:	d002      	beq.n	8017ac6 <_ZN6SymboldvES_+0x26>
 8017ac0:	2b01      	cmp	r3, #1
 8017ac2:	d015      	beq.n	8017af0 <_ZN6SymboldvES_+0x50>
 8017ac4:	e02c      	b.n	8017b20 <_ZN6SymboldvES_+0x80>
	{
	case SYMBOL_INT:
		return (std::get<int>(this->value) / std::get<int>(other.value));
 8017ac6:	68bb      	ldr	r3, [r7, #8]
 8017ac8:	3304      	adds	r3, #4
 8017aca:	4618      	mov	r0, r3
 8017acc:	f7eb fa38 	bl	8002f40 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017ad0:	4603      	mov	r3, r0
 8017ad2:	681c      	ldr	r4, [r3, #0]
 8017ad4:	687b      	ldr	r3, [r7, #4]
 8017ad6:	3304      	adds	r3, #4
 8017ad8:	4618      	mov	r0, r3
 8017ada:	f7eb fa31 	bl	8002f40 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017ade:	4603      	mov	r3, r0
 8017ae0:	681b      	ldr	r3, [r3, #0]
 8017ae2:	fb94 f3f3 	sdiv	r3, r4, r3
 8017ae6:	4619      	mov	r1, r3
 8017ae8:	68f8      	ldr	r0, [r7, #12]
 8017aea:	f7ff f9e7 	bl	8016ebc <_ZN6SymbolC1Ei>
 8017aee:	e037      	b.n	8017b60 <_ZN6SymboldvES_+0xc0>
	case SYMBOL_FLOAT:
		return(std::get<float>(this->value) / std::get<float>(other.value));
 8017af0:	68bb      	ldr	r3, [r7, #8]
 8017af2:	3304      	adds	r3, #4
 8017af4:	4618      	mov	r0, r3
 8017af6:	f000 f887 	bl	8017c08 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017afa:	4603      	mov	r3, r0
 8017afc:	ed93 8a00 	vldr	s16, [r3]
 8017b00:	687b      	ldr	r3, [r7, #4]
 8017b02:	3304      	adds	r3, #4
 8017b04:	4618      	mov	r0, r3
 8017b06:	f000 f87f 	bl	8017c08 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017b0a:	4603      	mov	r3, r0
 8017b0c:	edd3 7a00 	vldr	s15, [r3]
 8017b10:	ee88 7a27 	vdiv.f32	s14, s16, s15
 8017b14:	eeb0 0a47 	vmov.f32	s0, s14
 8017b18:	68f8      	ldr	r0, [r7, #12]
 8017b1a:	f7ff f9e8 	bl	8016eee <_ZN6SymbolC1Ef>
 8017b1e:	e01f      	b.n	8017b60 <_ZN6SymboldvES_+0xc0>
	default:
		Transmitter::report_error("invalid type for multiplication");
 8017b20:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8017b24:	4618      	mov	r0, r3
 8017b26:	f00b fcf7 	bl	8023518 <_ZNSaIcEC1Ev>
 8017b2a:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 8017b2e:	f107 0314 	add.w	r3, r7, #20
 8017b32:	490e      	ldr	r1, [pc, #56]	; (8017b6c <_ZN6SymboldvES_+0xcc>)
 8017b34:	4618      	mov	r0, r3
 8017b36:	f7ea f928 	bl	8001d8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8017b3a:	f107 0314 	add.w	r3, r7, #20
 8017b3e:	4618      	mov	r0, r3
 8017b40:	f001 f85e 	bl	8018c00 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8017b44:	f107 0314 	add.w	r3, r7, #20
 8017b48:	4618      	mov	r0, r3
 8017b4a:	f00b ff76 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8017b4e:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8017b52:	4618      	mov	r0, r3
 8017b54:	f00b fce1 	bl	802351a <_ZNSaIcED1Ev>
	}

	return 0;
 8017b58:	2100      	movs	r1, #0
 8017b5a:	68f8      	ldr	r0, [r7, #12]
 8017b5c:	f7ff f9ae 	bl	8016ebc <_ZN6SymbolC1Ei>
}
 8017b60:	68f8      	ldr	r0, [r7, #12]
 8017b62:	3734      	adds	r7, #52	; 0x34
 8017b64:	46bd      	mov	sp, r7
 8017b66:	ecbd 8b02 	vpop	{d8}
 8017b6a:	bd90      	pop	{r4, r7, pc}
 8017b6c:	08029c94 	.word	0x08029c94

08017b70 <_ZN6SymbolrmES_>:

Symbol Symbol::operator%(Symbol other)
{
 8017b70:	b590      	push	{r4, r7, lr}
 8017b72:	b08d      	sub	sp, #52	; 0x34
 8017b74:	af00      	add	r7, sp, #0
 8017b76:	60f8      	str	r0, [r7, #12]
 8017b78:	60b9      	str	r1, [r7, #8]
 8017b7a:	607a      	str	r2, [r7, #4]
	align_types(other);
 8017b7c:	6879      	ldr	r1, [r7, #4]
 8017b7e:	68b8      	ldr	r0, [r7, #8]
 8017b80:	f000 f9c2 	bl	8017f08 <_ZN6Symbol11align_typesERS_>

	switch (type)
 8017b84:	68bb      	ldr	r3, [r7, #8]
 8017b86:	781b      	ldrb	r3, [r3, #0]
 8017b88:	2b00      	cmp	r3, #0
 8017b8a:	d117      	bne.n	8017bbc <_ZN6SymbolrmES_+0x4c>
	{
	case SYMBOL_INT:
		return(std::get<int>(this->value) % std::get<int>(other.value));
 8017b8c:	68bb      	ldr	r3, [r7, #8]
 8017b8e:	3304      	adds	r3, #4
 8017b90:	4618      	mov	r0, r3
 8017b92:	f7eb f9d5 	bl	8002f40 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017b96:	4603      	mov	r3, r0
 8017b98:	681c      	ldr	r4, [r3, #0]
 8017b9a:	687b      	ldr	r3, [r7, #4]
 8017b9c:	3304      	adds	r3, #4
 8017b9e:	4618      	mov	r0, r3
 8017ba0:	f7eb f9ce 	bl	8002f40 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017ba4:	4603      	mov	r3, r0
 8017ba6:	681b      	ldr	r3, [r3, #0]
 8017ba8:	fb94 f2f3 	sdiv	r2, r4, r3
 8017bac:	fb03 f302 	mul.w	r3, r3, r2
 8017bb0:	1ae3      	subs	r3, r4, r3
 8017bb2:	4619      	mov	r1, r3
 8017bb4:	68f8      	ldr	r0, [r7, #12]
 8017bb6:	f7ff f981 	bl	8016ebc <_ZN6SymbolC1Ei>
 8017bba:	e01f      	b.n	8017bfc <_ZN6SymbolrmES_+0x8c>
	default:
		Transmitter::report_error("invalid type for multiplication");
 8017bbc:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8017bc0:	4618      	mov	r0, r3
 8017bc2:	f00b fca9 	bl	8023518 <_ZNSaIcEC1Ev>
 8017bc6:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 8017bca:	f107 0314 	add.w	r3, r7, #20
 8017bce:	490d      	ldr	r1, [pc, #52]	; (8017c04 <_ZN6SymbolrmES_+0x94>)
 8017bd0:	4618      	mov	r0, r3
 8017bd2:	f7ea f8da 	bl	8001d8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8017bd6:	f107 0314 	add.w	r3, r7, #20
 8017bda:	4618      	mov	r0, r3
 8017bdc:	f001 f810 	bl	8018c00 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8017be0:	f107 0314 	add.w	r3, r7, #20
 8017be4:	4618      	mov	r0, r3
 8017be6:	f00b ff28 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8017bea:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8017bee:	4618      	mov	r0, r3
 8017bf0:	f00b fc93 	bl	802351a <_ZNSaIcED1Ev>
	}

	return 0;
 8017bf4:	2100      	movs	r1, #0
 8017bf6:	68f8      	ldr	r0, [r7, #12]
 8017bf8:	f7ff f960 	bl	8016ebc <_ZN6SymbolC1Ei>
}
 8017bfc:	68f8      	ldr	r0, [r7, #12]
 8017bfe:	3734      	adds	r7, #52	; 0x34
 8017c00:	46bd      	mov	sp, r7
 8017c02:	bd90      	pop	{r4, r7, pc}
 8017c04:	08029c94 	.word	0x08029c94

08017c08 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 8017c08:	b580      	push	{r7, lr}
 8017c0a:	b082      	sub	sp, #8
 8017c0c:	af00      	add	r7, sp, #0
 8017c0e:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 8017c10:	6878      	ldr	r0, [r7, #4]
 8017c12:	f7f0 f82d 	bl	8007c70 <_ZSt3getILj1EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8017c16:	4603      	mov	r3, r0
    }
 8017c18:	4618      	mov	r0, r3
 8017c1a:	3708      	adds	r7, #8
 8017c1c:	46bd      	mov	sp, r7
 8017c1e:	bd80      	pop	{r7, pc}

08017c20 <_ZN6SymboleoES_>:

Symbol Symbol::operator^(Symbol other)
{
 8017c20:	b5b0      	push	{r4, r5, r7, lr}
 8017c22:	b08c      	sub	sp, #48	; 0x30
 8017c24:	af00      	add	r7, sp, #0
 8017c26:	60f8      	str	r0, [r7, #12]
 8017c28:	60b9      	str	r1, [r7, #8]
 8017c2a:	607a      	str	r2, [r7, #4]
	align_types(other);
 8017c2c:	6879      	ldr	r1, [r7, #4]
 8017c2e:	68b8      	ldr	r0, [r7, #8]
 8017c30:	f000 f96a 	bl	8017f08 <_ZN6Symbol11align_typesERS_>

	switch (type)
 8017c34:	68bb      	ldr	r3, [r7, #8]
 8017c36:	781b      	ldrb	r3, [r3, #0]
 8017c38:	2b00      	cmp	r3, #0
 8017c3a:	d002      	beq.n	8017c42 <_ZN6SymboleoES_+0x22>
 8017c3c:	2b01      	cmp	r3, #1
 8017c3e:	d02a      	beq.n	8017c96 <_ZN6SymboleoES_+0x76>
 8017c40:	e054      	b.n	8017cec <_ZN6SymboleoES_+0xcc>
	{
	case SYMBOL_INT:
		return (int)pow(std::get<int>(this->value), std::get<int>(other.value));
 8017c42:	68bb      	ldr	r3, [r7, #8]
 8017c44:	3304      	adds	r3, #4
 8017c46:	4618      	mov	r0, r3
 8017c48:	f7eb f97a 	bl	8002f40 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017c4c:	4603      	mov	r3, r0
 8017c4e:	681b      	ldr	r3, [r3, #0]
 8017c50:	4618      	mov	r0, r3
 8017c52:	f7e8 fc87 	bl	8000564 <__aeabi_i2d>
 8017c56:	4604      	mov	r4, r0
 8017c58:	460d      	mov	r5, r1
 8017c5a:	687b      	ldr	r3, [r7, #4]
 8017c5c:	3304      	adds	r3, #4
 8017c5e:	4618      	mov	r0, r3
 8017c60:	f7eb f96e 	bl	8002f40 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017c64:	4603      	mov	r3, r0
 8017c66:	681b      	ldr	r3, [r3, #0]
 8017c68:	4618      	mov	r0, r3
 8017c6a:	f7e8 fc7b 	bl	8000564 <__aeabi_i2d>
 8017c6e:	4602      	mov	r2, r0
 8017c70:	460b      	mov	r3, r1
 8017c72:	ec43 2b11 	vmov	d1, r2, r3
 8017c76:	ec45 4b10 	vmov	d0, r4, r5
 8017c7a:	f00c f8c5 	bl	8023e08 <pow>
 8017c7e:	ec53 2b10 	vmov	r2, r3, d0
 8017c82:	4610      	mov	r0, r2
 8017c84:	4619      	mov	r1, r3
 8017c86:	f7e8 ff87 	bl	8000b98 <__aeabi_d2iz>
 8017c8a:	4603      	mov	r3, r0
 8017c8c:	4619      	mov	r1, r3
 8017c8e:	68f8      	ldr	r0, [r7, #12]
 8017c90:	f7ff f914 	bl	8016ebc <_ZN6SymbolC1Ei>
 8017c94:	e04a      	b.n	8017d2c <_ZN6SymboleoES_+0x10c>
	case SYMBOL_FLOAT:
		return (float)pow(std::get<float>(this->value), std::get<float>(other.value));
 8017c96:	68bb      	ldr	r3, [r7, #8]
 8017c98:	3304      	adds	r3, #4
 8017c9a:	4618      	mov	r0, r3
 8017c9c:	f7ff ffb4 	bl	8017c08 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017ca0:	4603      	mov	r3, r0
 8017ca2:	681b      	ldr	r3, [r3, #0]
 8017ca4:	4618      	mov	r0, r3
 8017ca6:	f7e8 fc6f 	bl	8000588 <__aeabi_f2d>
 8017caa:	4604      	mov	r4, r0
 8017cac:	460d      	mov	r5, r1
 8017cae:	687b      	ldr	r3, [r7, #4]
 8017cb0:	3304      	adds	r3, #4
 8017cb2:	4618      	mov	r0, r3
 8017cb4:	f7ff ffa8 	bl	8017c08 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017cb8:	4603      	mov	r3, r0
 8017cba:	681b      	ldr	r3, [r3, #0]
 8017cbc:	4618      	mov	r0, r3
 8017cbe:	f7e8 fc63 	bl	8000588 <__aeabi_f2d>
 8017cc2:	4602      	mov	r2, r0
 8017cc4:	460b      	mov	r3, r1
 8017cc6:	ec43 2b11 	vmov	d1, r2, r3
 8017cca:	ec45 4b10 	vmov	d0, r4, r5
 8017cce:	f00c f89b 	bl	8023e08 <pow>
 8017cd2:	ec53 2b10 	vmov	r2, r3, d0
 8017cd6:	4610      	mov	r0, r2
 8017cd8:	4619      	mov	r1, r3
 8017cda:	f7e8 ffa5 	bl	8000c28 <__aeabi_d2f>
 8017cde:	4603      	mov	r3, r0
 8017ce0:	ee00 3a10 	vmov	s0, r3
 8017ce4:	68f8      	ldr	r0, [r7, #12]
 8017ce6:	f7ff f902 	bl	8016eee <_ZN6SymbolC1Ef>
 8017cea:	e01f      	b.n	8017d2c <_ZN6SymboleoES_+0x10c>
	default:
		Transmitter::report_error("invalid type for multiplication");
 8017cec:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8017cf0:	4618      	mov	r0, r3
 8017cf2:	f00b fc11 	bl	8023518 <_ZNSaIcEC1Ev>
 8017cf6:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 8017cfa:	f107 0314 	add.w	r3, r7, #20
 8017cfe:	490d      	ldr	r1, [pc, #52]	; (8017d34 <_ZN6SymboleoES_+0x114>)
 8017d00:	4618      	mov	r0, r3
 8017d02:	f7ea f842 	bl	8001d8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8017d06:	f107 0314 	add.w	r3, r7, #20
 8017d0a:	4618      	mov	r0, r3
 8017d0c:	f000 ff78 	bl	8018c00 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8017d10:	f107 0314 	add.w	r3, r7, #20
 8017d14:	4618      	mov	r0, r3
 8017d16:	f00b fe90 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8017d1a:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8017d1e:	4618      	mov	r0, r3
 8017d20:	f00b fbfb 	bl	802351a <_ZNSaIcED1Ev>
	}

	return 0;
 8017d24:	2100      	movs	r1, #0
 8017d26:	68f8      	ldr	r0, [r7, #12]
 8017d28:	f7ff f8c8 	bl	8016ebc <_ZN6SymbolC1Ei>
}
 8017d2c:	68f8      	ldr	r0, [r7, #12]
 8017d2e:	3730      	adds	r7, #48	; 0x30
 8017d30:	46bd      	mov	sp, r7
 8017d32:	bdb0      	pop	{r4, r5, r7, pc}
 8017d34:	08029c94 	.word	0x08029c94

08017d38 <_ZN6Symbol8get_boolEv>:


bool Symbol::get_bool()
{
 8017d38:	b580      	push	{r7, lr}
 8017d3a:	b082      	sub	sp, #8
 8017d3c:	af00      	add	r7, sp, #0
 8017d3e:	6078      	str	r0, [r7, #4]
	assert_type(SYMBOL_BOOL);
 8017d40:	2102      	movs	r1, #2
 8017d42:	6878      	ldr	r0, [r7, #4]
 8017d44:	f000 f926 	bl	8017f94 <_ZN6Symbol11assert_typeE11symbol_type>
	return std::get<bool>(value);
 8017d48:	687b      	ldr	r3, [r7, #4]
 8017d4a:	3304      	adds	r3, #4
 8017d4c:	4618      	mov	r0, r3
 8017d4e:	f000 fb11 	bl	8018374 <_ZSt3getIbJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017d52:	4603      	mov	r3, r0
 8017d54:	781b      	ldrb	r3, [r3, #0]
}
 8017d56:	4618      	mov	r0, r3
 8017d58:	3708      	adds	r7, #8
 8017d5a:	46bd      	mov	sp, r7
 8017d5c:	bd80      	pop	{r7, pc}
	...

08017d60 <_ZNK6Symbol9to_stringB5cxx11Ev>:

std::string Symbol::to_string() const
{
 8017d60:	b590      	push	{r4, r7, lr}
 8017d62:	b09d      	sub	sp, #116	; 0x74
 8017d64:	af00      	add	r7, sp, #0
 8017d66:	6078      	str	r0, [r7, #4]
 8017d68:	6039      	str	r1, [r7, #0]
    switch(type)
 8017d6a:	683b      	ldr	r3, [r7, #0]
 8017d6c:	781b      	ldrb	r3, [r3, #0]
 8017d6e:	2b03      	cmp	r3, #3
 8017d70:	d84f      	bhi.n	8017e12 <_ZNK6Symbol9to_stringB5cxx11Ev+0xb2>
 8017d72:	a201      	add	r2, pc, #4	; (adr r2, 8017d78 <_ZNK6Symbol9to_stringB5cxx11Ev+0x18>)
 8017d74:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8017d78:	08017d89 	.word	0x08017d89
 8017d7c:	08017da3 	.word	0x08017da3
 8017d80:	08017dc1 	.word	0x08017dc1
 8017d84:	08017dfd 	.word	0x08017dfd
    {
	case SYMBOL_INT:
		return std::to_string(std::get<int>(value));
 8017d88:	683b      	ldr	r3, [r7, #0]
 8017d8a:	3304      	adds	r3, #4
 8017d8c:	4618      	mov	r0, r3
 8017d8e:	f000 fb1c 	bl	80183ca <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERKT_RKSt7variantIJDpT0_EE>
 8017d92:	4603      	mov	r3, r0
 8017d94:	681a      	ldr	r2, [r3, #0]
 8017d96:	687b      	ldr	r3, [r7, #4]
 8017d98:	4611      	mov	r1, r2
 8017d9a:	4618      	mov	r0, r3
 8017d9c:	f7fa f810 	bl	8011dc0 <_ZNSt7__cxx119to_stringEi>
 8017da0:	e0a6      	b.n	8017ef0 <_ZNK6Symbol9to_stringB5cxx11Ev+0x190>
	case SYMBOL_FLOAT:
		return std::to_string(std::get<float>(value));
 8017da2:	683b      	ldr	r3, [r7, #0]
 8017da4:	3304      	adds	r3, #4
 8017da6:	4618      	mov	r0, r3
 8017da8:	f000 fb1b 	bl	80183e2 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERKT_RKSt7variantIJDpT0_EE>
 8017dac:	4603      	mov	r3, r0
 8017dae:	edd3 7a00 	vldr	s15, [r3]
 8017db2:	687b      	ldr	r3, [r7, #4]
 8017db4:	eeb0 0a67 	vmov.f32	s0, s15
 8017db8:	4618      	mov	r0, r3
 8017dba:	f7ff f861 	bl	8016e80 <_ZNSt7__cxx119to_stringEf>
 8017dbe:	e097      	b.n	8017ef0 <_ZNK6Symbol9to_stringB5cxx11Ev+0x190>
	case SYMBOL_BOOL:
		return std::get<bool>(value) ? "true" : "false";
 8017dc0:	683b      	ldr	r3, [r7, #0]
 8017dc2:	3304      	adds	r3, #4
 8017dc4:	4618      	mov	r0, r3
 8017dc6:	f000 fb18 	bl	80183fa <_ZSt3getIbJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERKT_RKSt7variantIJDpT0_EE>
 8017dca:	4603      	mov	r3, r0
 8017dcc:	781b      	ldrb	r3, [r3, #0]
 8017dce:	2b00      	cmp	r3, #0
 8017dd0:	d001      	beq.n	8017dd6 <_ZNK6Symbol9to_stringB5cxx11Ev+0x76>
 8017dd2:	4c49      	ldr	r4, [pc, #292]	; (8017ef8 <_ZNK6Symbol9to_stringB5cxx11Ev+0x198>)
 8017dd4:	e000      	b.n	8017dd8 <_ZNK6Symbol9to_stringB5cxx11Ev+0x78>
 8017dd6:	4c49      	ldr	r4, [pc, #292]	; (8017efc <_ZNK6Symbol9to_stringB5cxx11Ev+0x19c>)
 8017dd8:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 8017ddc:	4618      	mov	r0, r3
 8017dde:	f00b fb9b 	bl	8023518 <_ZNSaIcEC1Ev>
 8017de2:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 8017de6:	461a      	mov	r2, r3
 8017de8:	4621      	mov	r1, r4
 8017dea:	6878      	ldr	r0, [r7, #4]
 8017dec:	f7e9 ffcd 	bl	8001d8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8017df0:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 8017df4:	4618      	mov	r0, r3
 8017df6:	f00b fb90 	bl	802351a <_ZNSaIcED1Ev>
 8017dfa:	e079      	b.n	8017ef0 <_ZNK6Symbol9to_stringB5cxx11Ev+0x190>
	case SYMBOL_STRING:
		return std::get<std::string>(value);
 8017dfc:	683b      	ldr	r3, [r7, #0]
 8017dfe:	3304      	adds	r3, #4
 8017e00:	4618      	mov	r0, r3
 8017e02:	f000 fb06 	bl	8018412 <_ZSt3getINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJifbS5_St6vectorI6SymbolSaIS7_EEEERKT_RKSt7variantIJDpT0_EE>
 8017e06:	4603      	mov	r3, r0
 8017e08:	4619      	mov	r1, r3
 8017e0a:	6878      	ldr	r0, [r7, #4]
 8017e0c:	f00b ffe4 	bl	8023dd8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 8017e10:	e06e      	b.n	8017ef0 <_ZNK6Symbol9to_stringB5cxx11Ev+0x190>
	default:
	{
		std::string temp = "";
 8017e12:	f107 0350 	add.w	r3, r7, #80	; 0x50
 8017e16:	4618      	mov	r0, r3
 8017e18:	f00b fb7e 	bl	8023518 <_ZNSaIcEC1Ev>
 8017e1c:	f107 0250 	add.w	r2, r7, #80	; 0x50
 8017e20:	f107 0334 	add.w	r3, r7, #52	; 0x34
 8017e24:	4936      	ldr	r1, [pc, #216]	; (8017f00 <_ZNK6Symbol9to_stringB5cxx11Ev+0x1a0>)
 8017e26:	4618      	mov	r0, r3
 8017e28:	f7e9 ffaf 	bl	8001d8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8017e2c:	f107 0350 	add.w	r3, r7, #80	; 0x50
 8017e30:	4618      	mov	r0, r3
 8017e32:	f00b fb72 	bl	802351a <_ZNSaIcED1Ev>
		for(Symbol s : std::get<std::vector<Symbol>>(value))
 8017e36:	683b      	ldr	r3, [r7, #0]
 8017e38:	3304      	adds	r3, #4
 8017e3a:	4618      	mov	r0, r3
 8017e3c:	f000 faf5 	bl	801842a <_ZSt3getISt6vectorI6SymbolSaIS1_EEJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES3_EERKT_RKSt7variantIJDpT0_EE>
 8017e40:	66f8      	str	r0, [r7, #108]	; 0x6c
 8017e42:	6ef8      	ldr	r0, [r7, #108]	; 0x6c
 8017e44:	f7f0 f997 	bl	8008176 <_ZNKSt6vectorI6SymbolSaIS0_EE5beginEv>
 8017e48:	4603      	mov	r3, r0
 8017e4a:	633b      	str	r3, [r7, #48]	; 0x30
 8017e4c:	6ef8      	ldr	r0, [r7, #108]	; 0x6c
 8017e4e:	f7f0 f9a6 	bl	800819e <_ZNKSt6vectorI6SymbolSaIS0_EE3endEv>
 8017e52:	4603      	mov	r3, r0
 8017e54:	62fb      	str	r3, [r7, #44]	; 0x2c
 8017e56:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 8017e5a:	f107 0330 	add.w	r3, r7, #48	; 0x30
 8017e5e:	4611      	mov	r1, r2
 8017e60:	4618      	mov	r0, r3
 8017e62:	f7f1 fcad 	bl	80097c0 <_ZN9__gnu_cxxneIPK6SymbolSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
 8017e66:	4603      	mov	r3, r0
 8017e68:	2b00      	cmp	r3, #0
 8017e6a:	d031      	beq.n	8017ed0 <_ZNK6Symbol9to_stringB5cxx11Ev+0x170>
 8017e6c:	f107 0330 	add.w	r3, r7, #48	; 0x30
 8017e70:	4618      	mov	r0, r3
 8017e72:	f7f1 fcce 	bl	8009812 <_ZNK9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS1_SaIS1_EEEdeEv>
 8017e76:	4602      	mov	r2, r0
 8017e78:	f107 030c 	add.w	r3, r7, #12
 8017e7c:	4611      	mov	r1, r2
 8017e7e:	4618      	mov	r0, r3
 8017e80:	f7e9 faea 	bl	8001458 <_ZN6SymbolC1ERKS_>
		{
			temp += s.to_string();
 8017e84:	f107 0354 	add.w	r3, r7, #84	; 0x54
 8017e88:	f107 020c 	add.w	r2, r7, #12
 8017e8c:	4611      	mov	r1, r2
 8017e8e:	4618      	mov	r0, r3
 8017e90:	f7ff ff66 	bl	8017d60 <_ZNK6Symbol9to_stringB5cxx11Ev>
 8017e94:	f107 0254 	add.w	r2, r7, #84	; 0x54
 8017e98:	f107 0334 	add.w	r3, r7, #52	; 0x34
 8017e9c:	4611      	mov	r1, r2
 8017e9e:	4618      	mov	r0, r3
 8017ea0:	f00b ff46 	bl	8023d30 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLERKS4_>
 8017ea4:	f107 0354 	add.w	r3, r7, #84	; 0x54
 8017ea8:	4618      	mov	r0, r3
 8017eaa:	f00b fdc6 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
			temp += ",";
 8017eae:	f107 0334 	add.w	r3, r7, #52	; 0x34
 8017eb2:	4914      	ldr	r1, [pc, #80]	; (8017f04 <_ZNK6Symbol9to_stringB5cxx11Ev+0x1a4>)
 8017eb4:	4618      	mov	r0, r3
 8017eb6:	f00b ff65 	bl	8023d84 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc>
		for(Symbol s : std::get<std::vector<Symbol>>(value))
 8017eba:	f107 030c 	add.w	r3, r7, #12
 8017ebe:	4618      	mov	r0, r3
 8017ec0:	f7e9 fa6c 	bl	800139c <_ZN6SymbolD1Ev>
 8017ec4:	f107 0330 	add.w	r3, r7, #48	; 0x30
 8017ec8:	4618      	mov	r0, r3
 8017eca:	f7f1 fc91 	bl	80097f0 <_ZN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS1_SaIS1_EEEppEv>
 8017ece:	e7c2      	b.n	8017e56 <_ZNK6Symbol9to_stringB5cxx11Ev+0xf6>
		}
		temp.pop_back();
 8017ed0:	f107 0334 	add.w	r3, r7, #52	; 0x34
 8017ed4:	4618      	mov	r0, r3
 8017ed6:	f00b fe4c 	bl	8023b72 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8pop_backEv>
		return temp;
 8017eda:	f107 0334 	add.w	r3, r7, #52	; 0x34
 8017ede:	4619      	mov	r1, r3
 8017ee0:	6878      	ldr	r0, [r7, #4]
 8017ee2:	f00b fd90 	bl	8023a06 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_>
		std::string temp = "";
 8017ee6:	f107 0334 	add.w	r3, r7, #52	; 0x34
 8017eea:	4618      	mov	r0, r3
 8017eec:	f00b fda5 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	}
    }
}
 8017ef0:	6878      	ldr	r0, [r7, #4]
 8017ef2:	3774      	adds	r7, #116	; 0x74
 8017ef4:	46bd      	mov	sp, r7
 8017ef6:	bd90      	pop	{r4, r7, pc}
 8017ef8:	08029cb4 	.word	0x08029cb4
 8017efc:	08029cbc 	.word	0x08029cbc
 8017f00:	08029cc4 	.word	0x08029cc4
 8017f04:	08029cc8 	.word	0x08029cc8

08017f08 <_ZN6Symbol11align_typesERS_>:

void Symbol::align_types(Symbol &other)
{
 8017f08:	b580      	push	{r7, lr}
 8017f0a:	b08a      	sub	sp, #40	; 0x28
 8017f0c:	af00      	add	r7, sp, #0
 8017f0e:	6078      	str	r0, [r7, #4]
 8017f10:	6039      	str	r1, [r7, #0]
	if (type != other.type)
 8017f12:	687b      	ldr	r3, [r7, #4]
 8017f14:	781a      	ldrb	r2, [r3, #0]
 8017f16:	683b      	ldr	r3, [r7, #0]
 8017f18:	781b      	ldrb	r3, [r3, #0]
 8017f1a:	429a      	cmp	r2, r3
 8017f1c:	d034      	beq.n	8017f88 <_ZN6Symbol11align_typesERS_+0x80>
	{
		if(type == SYMBOL_INT && other.type == SYMBOL_FLOAT)
 8017f1e:	687b      	ldr	r3, [r7, #4]
 8017f20:	781b      	ldrb	r3, [r3, #0]
 8017f22:	2b00      	cmp	r3, #0
 8017f24:	d107      	bne.n	8017f36 <_ZN6Symbol11align_typesERS_+0x2e>
 8017f26:	683b      	ldr	r3, [r7, #0]
 8017f28:	781b      	ldrb	r3, [r3, #0]
 8017f2a:	2b01      	cmp	r3, #1
 8017f2c:	d103      	bne.n	8017f36 <_ZN6Symbol11align_typesERS_+0x2e>
		{
			floatify();
 8017f2e:	6878      	ldr	r0, [r7, #4]
 8017f30:	f000 f8d8 	bl	80180e4 <_ZN6Symbol8floatifyEv>
 8017f34:	e028      	b.n	8017f88 <_ZN6Symbol11align_typesERS_+0x80>
		}
		else if(other.type == SYMBOL_INT && type == SYMBOL_FLOAT)
 8017f36:	683b      	ldr	r3, [r7, #0]
 8017f38:	781b      	ldrb	r3, [r3, #0]
 8017f3a:	2b00      	cmp	r3, #0
 8017f3c:	d107      	bne.n	8017f4e <_ZN6Symbol11align_typesERS_+0x46>
 8017f3e:	687b      	ldr	r3, [r7, #4]
 8017f40:	781b      	ldrb	r3, [r3, #0]
 8017f42:	2b01      	cmp	r3, #1
 8017f44:	d103      	bne.n	8017f4e <_ZN6Symbol11align_typesERS_+0x46>
		{
			other.floatify();
 8017f46:	6838      	ldr	r0, [r7, #0]
 8017f48:	f000 f8cc 	bl	80180e4 <_ZN6Symbol8floatifyEv>
 8017f4c:	e01c      	b.n	8017f88 <_ZN6Symbol11align_typesERS_+0x80>
		}
		else
		{
			Transmitter::report_error("types mismatch");
 8017f4e:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8017f52:	4618      	mov	r0, r3
 8017f54:	f00b fae0 	bl	8023518 <_ZNSaIcEC1Ev>
 8017f58:	f107 0224 	add.w	r2, r7, #36	; 0x24
 8017f5c:	f107 030c 	add.w	r3, r7, #12
 8017f60:	490b      	ldr	r1, [pc, #44]	; (8017f90 <_ZN6Symbol11align_typesERS_+0x88>)
 8017f62:	4618      	mov	r0, r3
 8017f64:	f7e9 ff11 	bl	8001d8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8017f68:	f107 030c 	add.w	r3, r7, #12
 8017f6c:	4618      	mov	r0, r3
 8017f6e:	f000 fe47 	bl	8018c00 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8017f72:	f107 030c 	add.w	r3, r7, #12
 8017f76:	4618      	mov	r0, r3
 8017f78:	f00b fd5f 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8017f7c:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8017f80:	4618      	mov	r0, r3
 8017f82:	f00b faca 	bl	802351a <_ZNSaIcED1Ev>
		}
	}
}
 8017f86:	e7ff      	b.n	8017f88 <_ZN6Symbol11align_typesERS_+0x80>
 8017f88:	bf00      	nop
 8017f8a:	3728      	adds	r7, #40	; 0x28
 8017f8c:	46bd      	mov	sp, r7
 8017f8e:	bd80      	pop	{r7, pc}
 8017f90:	08029ccc 	.word	0x08029ccc

08017f94 <_ZN6Symbol11assert_typeE11symbol_type>:

void Symbol::assert_type(symbol_type type)
{
 8017f94:	b580      	push	{r7, lr}
 8017f96:	b08a      	sub	sp, #40	; 0x28
 8017f98:	af00      	add	r7, sp, #0
 8017f9a:	6078      	str	r0, [r7, #4]
 8017f9c:	460b      	mov	r3, r1
 8017f9e:	70fb      	strb	r3, [r7, #3]
	if(this->type != type)
 8017fa0:	687b      	ldr	r3, [r7, #4]
 8017fa2:	781b      	ldrb	r3, [r3, #0]
 8017fa4:	78fa      	ldrb	r2, [r7, #3]
 8017fa6:	429a      	cmp	r2, r3
 8017fa8:	d01b      	beq.n	8017fe2 <_ZN6Symbol11assert_typeE11symbol_type+0x4e>
	{
		Transmitter::report_error(std::string("invalid value for the operation"));
 8017faa:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8017fae:	4618      	mov	r0, r3
 8017fb0:	f00b fab2 	bl	8023518 <_ZNSaIcEC1Ev>
 8017fb4:	f107 0224 	add.w	r2, r7, #36	; 0x24
 8017fb8:	f107 030c 	add.w	r3, r7, #12
 8017fbc:	490b      	ldr	r1, [pc, #44]	; (8017fec <_ZN6Symbol11assert_typeE11symbol_type+0x58>)
 8017fbe:	4618      	mov	r0, r3
 8017fc0:	f7e9 fee3 	bl	8001d8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8017fc4:	f107 030c 	add.w	r3, r7, #12
 8017fc8:	4618      	mov	r0, r3
 8017fca:	f000 fe19 	bl	8018c00 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8017fce:	f107 030c 	add.w	r3, r7, #12
 8017fd2:	4618      	mov	r0, r3
 8017fd4:	f00b fd31 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8017fd8:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8017fdc:	4618      	mov	r0, r3
 8017fde:	f00b fa9c 	bl	802351a <_ZNSaIcED1Ev>
	}
}
 8017fe2:	bf00      	nop
 8017fe4:	3728      	adds	r7, #40	; 0x28
 8017fe6:	46bd      	mov	sp, r7
 8017fe8:	bd80      	pop	{r7, pc}
 8017fea:	bf00      	nop
 8017fec:	08029cdc 	.word	0x08029cdc

08017ff0 <_ZN6Symbol6resizeEi>:

void Symbol::resize(int size)
{
 8017ff0:	b580      	push	{r7, lr}
 8017ff2:	b086      	sub	sp, #24
 8017ff4:	af00      	add	r7, sp, #0
 8017ff6:	6078      	str	r0, [r7, #4]
 8017ff8:	6039      	str	r1, [r7, #0]
	std::vector<Symbol> vec = std::get<std::vector<Symbol>>(value);
 8017ffa:	687b      	ldr	r3, [r7, #4]
 8017ffc:	3304      	adds	r3, #4
 8017ffe:	4618      	mov	r0, r3
 8018000:	f000 f99c 	bl	801833c <_ZSt3getISt6vectorI6SymbolSaIS1_EEJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES3_EERT_RSt7variantIJDpT0_EE>
 8018004:	4602      	mov	r2, r0
 8018006:	f107 030c 	add.w	r3, r7, #12
 801800a:	4611      	mov	r1, r2
 801800c:	4618      	mov	r0, r3
 801800e:	f7f0 fb80 	bl	8008712 <_ZNSt6vectorI6SymbolSaIS0_EEC1ERKS2_>
	if(vec.size() < (unsigned int)size)
 8018012:	f107 030c 	add.w	r3, r7, #12
 8018016:	4618      	mov	r0, r3
 8018018:	f7f0 f88d 	bl	8008136 <_ZNKSt6vectorI6SymbolSaIS0_EE4sizeEv>
 801801c:	4602      	mov	r2, r0
 801801e:	683b      	ldr	r3, [r7, #0]
 8018020:	429a      	cmp	r2, r3
 8018022:	bf34      	ite	cc
 8018024:	2301      	movcc	r3, #1
 8018026:	2300      	movcs	r3, #0
 8018028:	b2db      	uxtb	r3, r3
 801802a:	2b00      	cmp	r3, #0
 801802c:	d006      	beq.n	801803c <_ZN6Symbol6resizeEi+0x4c>
	{
		vec.reserve(size);
 801802e:	683a      	ldr	r2, [r7, #0]
 8018030:	f107 030c 	add.w	r3, r7, #12
 8018034:	4611      	mov	r1, r2
 8018036:	4618      	mov	r0, r3
 8018038:	f000 fa04 	bl	8018444 <_ZNSt6vectorI6SymbolSaIS0_EE7reserveEj>
	std::vector<Symbol> vec = std::get<std::vector<Symbol>>(value);
 801803c:	f107 030c 	add.w	r3, r7, #12
 8018040:	4618      	mov	r0, r3
 8018042:	f7f0 fbff 	bl	8008844 <_ZNSt6vectorI6SymbolSaIS0_EED1Ev>
	}
}
 8018046:	bf00      	nop
 8018048:	3718      	adds	r7, #24
 801804a:	46bd      	mov	sp, r7
 801804c:	bd80      	pop	{r7, pc}
	...

08018050 <_ZN6Symbol5roundEv>:

void Symbol::round()
{
 8018050:	b580      	push	{r7, lr}
 8018052:	b08c      	sub	sp, #48	; 0x30
 8018054:	af00      	add	r7, sp, #0
 8018056:	6078      	str	r0, [r7, #4]
	if(type == SYMBOL_INT)
 8018058:	687b      	ldr	r3, [r7, #4]
 801805a:	781b      	ldrb	r3, [r3, #0]
 801805c:	2b00      	cmp	r3, #0
 801805e:	d03b      	beq.n	80180d8 <_ZN6Symbol5roundEv+0x88>
	{
		return;
	}
	else if(type == SYMBOL_FLOAT)
 8018060:	687b      	ldr	r3, [r7, #4]
 8018062:	781b      	ldrb	r3, [r3, #0]
 8018064:	2b01      	cmp	r3, #1
 8018066:	d11a      	bne.n	801809e <_ZN6Symbol5roundEv+0x4e>
	{
		float result = std::get<float>(value);
 8018068:	687b      	ldr	r3, [r7, #4]
 801806a:	3304      	adds	r3, #4
 801806c:	4618      	mov	r0, r3
 801806e:	f7ff fdcb 	bl	8017c08 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8018072:	4603      	mov	r3, r0
 8018074:	681b      	ldr	r3, [r3, #0]
 8018076:	62fb      	str	r3, [r7, #44]	; 0x2c
		type = SYMBOL_INT;
 8018078:	687b      	ldr	r3, [r7, #4]
 801807a:	2200      	movs	r2, #0
 801807c:	701a      	strb	r2, [r3, #0]
		value = (int)result;
 801807e:	edd7 7a0b 	vldr	s15, [r7, #44]	; 0x2c
 8018082:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8018086:	ee17 3a90 	vmov	r3, s15
 801808a:	60fb      	str	r3, [r7, #12]
 801808c:	687b      	ldr	r3, [r7, #4]
 801808e:	3304      	adds	r3, #4
 8018090:	f107 020c 	add.w	r2, r7, #12
 8018094:	4611      	mov	r1, r2
 8018096:	4618      	mov	r0, r3
 8018098:	f000 fa2e 	bl	80184f8 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
 801809c:	e01d      	b.n	80180da <_ZN6Symbol5roundEv+0x8a>
	}
	else
	{
		Transmitter::report_error(std::string("can not round a non float"));
 801809e:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80180a2:	4618      	mov	r0, r3
 80180a4:	f00b fa38 	bl	8023518 <_ZNSaIcEC1Ev>
 80180a8:	f107 0228 	add.w	r2, r7, #40	; 0x28
 80180ac:	f107 0310 	add.w	r3, r7, #16
 80180b0:	490b      	ldr	r1, [pc, #44]	; (80180e0 <_ZN6Symbol5roundEv+0x90>)
 80180b2:	4618      	mov	r0, r3
 80180b4:	f7e9 fe69 	bl	8001d8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 80180b8:	f107 0310 	add.w	r3, r7, #16
 80180bc:	4618      	mov	r0, r3
 80180be:	f000 fd9f 	bl	8018c00 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 80180c2:	f107 0310 	add.w	r3, r7, #16
 80180c6:	4618      	mov	r0, r3
 80180c8:	f00b fcb7 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80180cc:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80180d0:	4618      	mov	r0, r3
 80180d2:	f00b fa22 	bl	802351a <_ZNSaIcED1Ev>
 80180d6:	e000      	b.n	80180da <_ZN6Symbol5roundEv+0x8a>
		return;
 80180d8:	bf00      	nop
	}
}
 80180da:	3730      	adds	r7, #48	; 0x30
 80180dc:	46bd      	mov	sp, r7
 80180de:	bd80      	pop	{r7, pc}
 80180e0:	08029cfc 	.word	0x08029cfc

080180e4 <_ZN6Symbol8floatifyEv>:

void Symbol::floatify()
{
 80180e4:	b580      	push	{r7, lr}
 80180e6:	b08c      	sub	sp, #48	; 0x30
 80180e8:	af00      	add	r7, sp, #0
 80180ea:	6078      	str	r0, [r7, #4]
	if(type == SYMBOL_INT)
 80180ec:	687b      	ldr	r3, [r7, #4]
 80180ee:	781b      	ldrb	r3, [r3, #0]
 80180f0:	2b00      	cmp	r3, #0
 80180f2:	d11a      	bne.n	801812a <_ZN6Symbol8floatifyEv+0x46>
	{
		float result = std::get<int>(value);
 80180f4:	687b      	ldr	r3, [r7, #4]
 80180f6:	3304      	adds	r3, #4
 80180f8:	4618      	mov	r0, r3
 80180fa:	f7ea ff21 	bl	8002f40 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 80180fe:	4603      	mov	r3, r0
 8018100:	681b      	ldr	r3, [r3, #0]
 8018102:	ee07 3a90 	vmov	s15, r3
 8018106:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801810a:	edc7 7a0b 	vstr	s15, [r7, #44]	; 0x2c
		type = SYMBOL_FLOAT;
 801810e:	687b      	ldr	r3, [r7, #4]
 8018110:	2201      	movs	r2, #1
 8018112:	701a      	strb	r2, [r3, #0]
		value = (float)result;
 8018114:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8018116:	60fb      	str	r3, [r7, #12]
 8018118:	687b      	ldr	r3, [r7, #4]
 801811a:	3304      	adds	r3, #4
 801811c:	f107 020c 	add.w	r2, r7, #12
 8018120:	4611      	mov	r1, r2
 8018122:	4618      	mov	r0, r3
 8018124:	f000 f87c 	bl	8018220 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
 8018128:	e021      	b.n	801816e <_ZN6Symbol8floatifyEv+0x8a>
	}
	else if(type == SYMBOL_FLOAT)
 801812a:	687b      	ldr	r3, [r7, #4]
 801812c:	781b      	ldrb	r3, [r3, #0]
 801812e:	2b01      	cmp	r3, #1
 8018130:	d01c      	beq.n	801816c <_ZN6Symbol8floatifyEv+0x88>
	{
		return;
	}
	else
	{
		Transmitter::report_error(std::string("can not floatify a non int"));
 8018132:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8018136:	4618      	mov	r0, r3
 8018138:	f00b f9ee 	bl	8023518 <_ZNSaIcEC1Ev>
 801813c:	f107 0228 	add.w	r2, r7, #40	; 0x28
 8018140:	f107 0310 	add.w	r3, r7, #16
 8018144:	490b      	ldr	r1, [pc, #44]	; (8018174 <_ZN6Symbol8floatifyEv+0x90>)
 8018146:	4618      	mov	r0, r3
 8018148:	f7e9 fe1f 	bl	8001d8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801814c:	f107 0310 	add.w	r3, r7, #16
 8018150:	4618      	mov	r0, r3
 8018152:	f000 fd55 	bl	8018c00 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8018156:	f107 0310 	add.w	r3, r7, #16
 801815a:	4618      	mov	r0, r3
 801815c:	f00b fc6d 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8018160:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8018164:	4618      	mov	r0, r3
 8018166:	f00b f9d8 	bl	802351a <_ZNSaIcED1Ev>
 801816a:	e000      	b.n	801816e <_ZN6Symbol8floatifyEv+0x8a>
		return;
 801816c:	bf00      	nop
	}
}
 801816e:	3730      	adds	r7, #48	; 0x30
 8018170:	46bd      	mov	sp, r7
 8018172:	bd80      	pop	{r7, pc}
 8018174:	08029d18 	.word	0x08029d18

08018178 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIRiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_>:
	operator=(_Tp&& __rhs)
 8018178:	b590      	push	{r4, r7, lr}
 801817a:	b085      	sub	sp, #20
 801817c:	af00      	add	r7, sp, #0
 801817e:	6078      	str	r0, [r7, #4]
 8018180:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 8018182:	2300      	movs	r3, #0
 8018184:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 8018186:	6878      	ldr	r0, [r7, #4]
 8018188:	f7ea fa31 	bl	80025ee <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv>
 801818c:	4603      	mov	r3, r0
 801818e:	2b00      	cmp	r3, #0
 8018190:	bf0c      	ite	eq
 8018192:	2301      	moveq	r3, #1
 8018194:	2300      	movne	r3, #0
 8018196:	b2db      	uxtb	r3, r3
 8018198:	2b00      	cmp	r3, #0
 801819a:	d00a      	beq.n	80181b2 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIRiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 801819c:	6838      	ldr	r0, [r7, #0]
 801819e:	f7ec fd55 	bl	8004c4c <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 80181a2:	4603      	mov	r3, r0
 80181a4:	681c      	ldr	r4, [r3, #0]
 80181a6:	6878      	ldr	r0, [r7, #4]
 80181a8:	f7eb ffe0 	bl	800416c <_ZSt3getILj0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 80181ac:	4603      	mov	r3, r0
 80181ae:	601c      	str	r4, [r3, #0]
 80181b0:	e007      	b.n	80181c2 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIRiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 80181b2:	6838      	ldr	r0, [r7, #0]
 80181b4:	f7ec fd4a 	bl	8004c4c <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 80181b8:	4603      	mov	r3, r0
 80181ba:	4619      	mov	r1, r3
 80181bc:	6878      	ldr	r0, [r7, #4]
 80181be:	f000 f9c5 	bl	801854c <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE7emplaceILj0EJRiEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSG_E4typeEDpOSH_>
	  return *this;
 80181c2:	687b      	ldr	r3, [r7, #4]
	}
 80181c4:	4618      	mov	r0, r3
 80181c6:	3714      	adds	r7, #20
 80181c8:	46bd      	mov	sp, r7
 80181ca:	bd90      	pop	{r4, r7, pc}

080181cc <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIRfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_>:
	operator=(_Tp&& __rhs)
 80181cc:	b590      	push	{r4, r7, lr}
 80181ce:	b085      	sub	sp, #20
 80181d0:	af00      	add	r7, sp, #0
 80181d2:	6078      	str	r0, [r7, #4]
 80181d4:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 80181d6:	2301      	movs	r3, #1
 80181d8:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 80181da:	6878      	ldr	r0, [r7, #4]
 80181dc:	f7ea fa07 	bl	80025ee <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv>
 80181e0:	4603      	mov	r3, r0
 80181e2:	2b01      	cmp	r3, #1
 80181e4:	bf0c      	ite	eq
 80181e6:	2301      	moveq	r3, #1
 80181e8:	2300      	movne	r3, #0
 80181ea:	b2db      	uxtb	r3, r3
 80181ec:	2b00      	cmp	r3, #0
 80181ee:	d00a      	beq.n	8018206 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIRfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 80181f0:	6838      	ldr	r0, [r7, #0]
 80181f2:	f7ec fd5f 	bl	8004cb4 <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 80181f6:	4603      	mov	r3, r0
 80181f8:	681c      	ldr	r4, [r3, #0]
 80181fa:	6878      	ldr	r0, [r7, #4]
 80181fc:	f7ef fd38 	bl	8007c70 <_ZSt3getILj1EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8018200:	4603      	mov	r3, r0
 8018202:	601c      	str	r4, [r3, #0]
 8018204:	e007      	b.n	8018216 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIRfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 8018206:	6838      	ldr	r0, [r7, #0]
 8018208:	f7ec fd54 	bl	8004cb4 <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 801820c:	4603      	mov	r3, r0
 801820e:	4619      	mov	r1, r3
 8018210:	6878      	ldr	r0, [r7, #4]
 8018212:	f000 f9b4 	bl	801857e <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE7emplaceILj1EJRfEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSG_E4typeEDpOSH_>
	  return *this;
 8018216:	687b      	ldr	r3, [r7, #4]
	}
 8018218:	4618      	mov	r0, r3
 801821a:	3714      	adds	r7, #20
 801821c:	46bd      	mov	sp, r7
 801821e:	bd90      	pop	{r4, r7, pc}

08018220 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>:
	operator=(_Tp&& __rhs)
 8018220:	b590      	push	{r4, r7, lr}
 8018222:	b085      	sub	sp, #20
 8018224:	af00      	add	r7, sp, #0
 8018226:	6078      	str	r0, [r7, #4]
 8018228:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 801822a:	2301      	movs	r3, #1
 801822c:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 801822e:	6878      	ldr	r0, [r7, #4]
 8018230:	f7ea f9dd 	bl	80025ee <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv>
 8018234:	4603      	mov	r3, r0
 8018236:	2b01      	cmp	r3, #1
 8018238:	bf0c      	ite	eq
 801823a:	2301      	moveq	r3, #1
 801823c:	2300      	movne	r3, #0
 801823e:	b2db      	uxtb	r3, r3
 8018240:	2b00      	cmp	r3, #0
 8018242:	d00a      	beq.n	801825a <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 8018244:	6838      	ldr	r0, [r7, #0]
 8018246:	f7ef fce9 	bl	8007c1c <_ZSt7forwardIfEOT_RNSt16remove_referenceIS0_E4typeE>
 801824a:	4603      	mov	r3, r0
 801824c:	681c      	ldr	r4, [r3, #0]
 801824e:	6878      	ldr	r0, [r7, #4]
 8018250:	f7ef fd0e 	bl	8007c70 <_ZSt3getILj1EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8018254:	4603      	mov	r3, r0
 8018256:	601c      	str	r4, [r3, #0]
 8018258:	e007      	b.n	801826a <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 801825a:	6838      	ldr	r0, [r7, #0]
 801825c:	f7ef fcde 	bl	8007c1c <_ZSt7forwardIfEOT_RNSt16remove_referenceIS0_E4typeE>
 8018260:	4603      	mov	r3, r0
 8018262:	4619      	mov	r1, r3
 8018264:	6878      	ldr	r0, [r7, #4]
 8018266:	f7ee ff75 	bl	8007154 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE7emplaceILj1EJfEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	  return *this;
 801826a:	687b      	ldr	r3, [r7, #4]
	}
 801826c:	4618      	mov	r0, r3
 801826e:	3714      	adds	r7, #20
 8018270:	46bd      	mov	sp, r7
 8018272:	bd90      	pop	{r4, r7, pc}

08018274 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIRbEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_>:
	operator=(_Tp&& __rhs)
 8018274:	b590      	push	{r4, r7, lr}
 8018276:	b085      	sub	sp, #20
 8018278:	af00      	add	r7, sp, #0
 801827a:	6078      	str	r0, [r7, #4]
 801827c:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 801827e:	2302      	movs	r3, #2
 8018280:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 8018282:	6878      	ldr	r0, [r7, #4]
 8018284:	f7ea f9b3 	bl	80025ee <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv>
 8018288:	4603      	mov	r3, r0
 801828a:	2b02      	cmp	r3, #2
 801828c:	bf0c      	ite	eq
 801828e:	2301      	moveq	r3, #1
 8018290:	2300      	movne	r3, #0
 8018292:	b2db      	uxtb	r3, r3
 8018294:	2b00      	cmp	r3, #0
 8018296:	d00b      	beq.n	80182b0 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIRbEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_+0x3c>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 8018298:	6838      	ldr	r0, [r7, #0]
 801829a:	f7ec fd3f 	bl	8004d1c <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
 801829e:	4603      	mov	r3, r0
 80182a0:	781c      	ldrb	r4, [r3, #0]
 80182a2:	6878      	ldr	r0, [r7, #4]
 80182a4:	f7ef fd2c 	bl	8007d00 <_ZSt3getILj2EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 80182a8:	4603      	mov	r3, r0
 80182aa:	4622      	mov	r2, r4
 80182ac:	701a      	strb	r2, [r3, #0]
 80182ae:	e007      	b.n	80182c0 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIRbEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_+0x4c>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 80182b0:	6838      	ldr	r0, [r7, #0]
 80182b2:	f7ec fd33 	bl	8004d1c <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
 80182b6:	4603      	mov	r3, r0
 80182b8:	4619      	mov	r1, r3
 80182ba:	6878      	ldr	r0, [r7, #4]
 80182bc:	f000 f978 	bl	80185b0 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE7emplaceILj2EJRbEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSG_E4typeEDpOSH_>
	  return *this;
 80182c0:	687b      	ldr	r3, [r7, #4]
	}
 80182c2:	4618      	mov	r0, r3
 80182c4:	3714      	adds	r7, #20
 80182c6:	46bd      	mov	sp, r7
 80182c8:	bd90      	pop	{r4, r7, pc}

080182ca <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIRS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_>:
	operator=(_Tp&& __rhs)
 80182ca:	b590      	push	{r4, r7, lr}
 80182cc:	b08b      	sub	sp, #44	; 0x2c
 80182ce:	af00      	add	r7, sp, #0
 80182d0:	6078      	str	r0, [r7, #4]
 80182d2:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 80182d4:	2303      	movs	r3, #3
 80182d6:	627b      	str	r3, [r7, #36]	; 0x24
	  if (index() == __index)
 80182d8:	6878      	ldr	r0, [r7, #4]
 80182da:	f7ea f988 	bl	80025ee <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv>
 80182de:	4603      	mov	r3, r0
 80182e0:	2b03      	cmp	r3, #3
 80182e2:	bf0c      	ite	eq
 80182e4:	2301      	moveq	r3, #1
 80182e6:	2300      	movne	r3, #0
 80182e8:	b2db      	uxtb	r3, r3
 80182ea:	2b00      	cmp	r3, #0
 80182ec:	d00c      	beq.n	8018308 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIRS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_+0x3e>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 80182ee:	6838      	ldr	r0, [r7, #0]
 80182f0:	f7ec fd54 	bl	8004d9c <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 80182f4:	4604      	mov	r4, r0
 80182f6:	6878      	ldr	r0, [r7, #4]
 80182f8:	f7ef fd4a 	bl	8007d90 <_ZSt3getILj3EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 80182fc:	4603      	mov	r3, r0
 80182fe:	4621      	mov	r1, r4
 8018300:	4618      	mov	r0, r3
 8018302:	f00b fba0 	bl	8023a46 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_>
 8018306:	e014      	b.n	8018332 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIRS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_+0x68>
		operator=(variant(std::forward<_Tp>(__rhs)));
 8018308:	6838      	ldr	r0, [r7, #0]
 801830a:	f7ec fd47 	bl	8004d9c <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 801830e:	4602      	mov	r2, r0
 8018310:	f107 0308 	add.w	r3, r7, #8
 8018314:	4611      	mov	r1, r2
 8018316:	4618      	mov	r0, r3
 8018318:	f000 f97c 	bl	8018614 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1IRS5_vvS5_vEEOT_>
 801831c:	f107 0308 	add.w	r3, r7, #8
 8018320:	4619      	mov	r1, r3
 8018322:	6878      	ldr	r0, [r7, #4]
 8018324:	f7e9 f8be 	bl	80014a4 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSEOSA_>
 8018328:	f107 0308 	add.w	r3, r7, #8
 801832c:	4618      	mov	r0, r3
 801832e:	f7e9 f828 	bl	8001382 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEED1Ev>
	  return *this;
 8018332:	687b      	ldr	r3, [r7, #4]
	}
 8018334:	4618      	mov	r0, r3
 8018336:	372c      	adds	r7, #44	; 0x2c
 8018338:	46bd      	mov	sp, r7
 801833a:	bd90      	pop	{r4, r7, pc}

0801833c <_ZSt3getISt6vectorI6SymbolSaIS1_EEJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES3_EERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 801833c:	b580      	push	{r7, lr}
 801833e:	b082      	sub	sp, #8
 8018340:	af00      	add	r7, sp, #0
 8018342:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 8018344:	6878      	ldr	r0, [r7, #4]
 8018346:	f7ef fdd5 	bl	8007ef4 <_ZSt3getILj4EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 801834a:	4603      	mov	r3, r0
    }
 801834c:	4618      	mov	r0, r3
 801834e:	3708      	adds	r7, #8
 8018350:	46bd      	mov	sp, r7
 8018352:	bd80      	pop	{r7, pc}

08018354 <_ZNSt6vectorI6SymbolSaIS0_EEixEj>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
 8018354:	b480      	push	{r7}
 8018356:	b083      	sub	sp, #12
 8018358:	af00      	add	r7, sp, #0
 801835a:	6078      	str	r0, [r7, #4]
 801835c:	6039      	str	r1, [r7, #0]
	return *(this->_M_impl._M_start + __n);
 801835e:	687b      	ldr	r3, [r7, #4]
 8018360:	681a      	ldr	r2, [r3, #0]
 8018362:	683b      	ldr	r3, [r7, #0]
 8018364:	015b      	lsls	r3, r3, #5
 8018366:	4413      	add	r3, r2
      }
 8018368:	4618      	mov	r0, r3
 801836a:	370c      	adds	r7, #12
 801836c:	46bd      	mov	sp, r7
 801836e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8018372:	4770      	bx	lr

08018374 <_ZSt3getIbJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 8018374:	b580      	push	{r7, lr}
 8018376:	b082      	sub	sp, #8
 8018378:	af00      	add	r7, sp, #0
 801837a:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 801837c:	6878      	ldr	r0, [r7, #4]
 801837e:	f7ef fcbf 	bl	8007d00 <_ZSt3getILj2EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8018382:	4603      	mov	r3, r0
    }
 8018384:	4618      	mov	r0, r3
 8018386:	3708      	adds	r7, #8
 8018388:	46bd      	mov	sp, r7
 801838a:	bd80      	pop	{r7, pc}

0801838c <_ZSt3getINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJifbS5_St6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 801838c:	b580      	push	{r7, lr}
 801838e:	b082      	sub	sp, #8
 8018390:	af00      	add	r7, sp, #0
 8018392:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 8018394:	6878      	ldr	r0, [r7, #4]
 8018396:	f7ef fcfb 	bl	8007d90 <_ZSt3getILj3EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 801839a:	4603      	mov	r3, r0
    }
 801839c:	4618      	mov	r0, r3
 801839e:	3708      	adds	r7, #8
 80183a0:	46bd      	mov	sp, r7
 80183a2:	bd80      	pop	{r7, pc}

080183a4 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_>:
    operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
 80183a4:	b580      	push	{r7, lr}
 80183a6:	b084      	sub	sp, #16
 80183a8:	af00      	add	r7, sp, #0
 80183aa:	60f8      	str	r0, [r7, #12]
 80183ac:	60b9      	str	r1, [r7, #8]
 80183ae:	607a      	str	r2, [r7, #4]
      basic_string<_CharT, _Traits, _Alloc> __str(__lhs);
 80183b0:	68b9      	ldr	r1, [r7, #8]
 80183b2:	68f8      	ldr	r0, [r7, #12]
 80183b4:	f00b fd10 	bl	8023dd8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
      __str.append(__rhs);
 80183b8:	6879      	ldr	r1, [r7, #4]
 80183ba:	68f8      	ldr	r0, [r7, #12]
 80183bc:	f00b fcb2 	bl	8023d24 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_>
      return __str;
 80183c0:	bf00      	nop
    }
 80183c2:	68f8      	ldr	r0, [r7, #12]
 80183c4:	3710      	adds	r7, #16
 80183c6:	46bd      	mov	sp, r7
 80183c8:	bd80      	pop	{r7, pc}

080183ca <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERKT_RKSt7variantIJDpT0_EE>:
    constexpr const _Tp& get(const variant<_Types...>& __v)
 80183ca:	b580      	push	{r7, lr}
 80183cc:	b082      	sub	sp, #8
 80183ce:	af00      	add	r7, sp, #0
 80183d0:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 80183d2:	6878      	ldr	r0, [r7, #4]
 80183d4:	f000 f932 	bl	801863c <_ZSt3getILj0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERKNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERKSE_>
 80183d8:	4603      	mov	r3, r0
    }
 80183da:	4618      	mov	r0, r3
 80183dc:	3708      	adds	r7, #8
 80183de:	46bd      	mov	sp, r7
 80183e0:	bd80      	pop	{r7, pc}

080183e2 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERKT_RKSt7variantIJDpT0_EE>:
    constexpr const _Tp& get(const variant<_Types...>& __v)
 80183e2:	b580      	push	{r7, lr}
 80183e4:	b082      	sub	sp, #8
 80183e6:	af00      	add	r7, sp, #0
 80183e8:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 80183ea:	6878      	ldr	r0, [r7, #4]
 80183ec:	f000 f942 	bl	8018674 <_ZSt3getILj1EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERKNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERKSE_>
 80183f0:	4603      	mov	r3, r0
    }
 80183f2:	4618      	mov	r0, r3
 80183f4:	3708      	adds	r7, #8
 80183f6:	46bd      	mov	sp, r7
 80183f8:	bd80      	pop	{r7, pc}

080183fa <_ZSt3getIbJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERKT_RKSt7variantIJDpT0_EE>:
    constexpr const _Tp& get(const variant<_Types...>& __v)
 80183fa:	b580      	push	{r7, lr}
 80183fc:	b082      	sub	sp, #8
 80183fe:	af00      	add	r7, sp, #0
 8018400:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 8018402:	6878      	ldr	r0, [r7, #4]
 8018404:	f000 f952 	bl	80186ac <_ZSt3getILj2EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERKNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERKSE_>
 8018408:	4603      	mov	r3, r0
    }
 801840a:	4618      	mov	r0, r3
 801840c:	3708      	adds	r7, #8
 801840e:	46bd      	mov	sp, r7
 8018410:	bd80      	pop	{r7, pc}

08018412 <_ZSt3getINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJifbS5_St6vectorI6SymbolSaIS7_EEEERKT_RKSt7variantIJDpT0_EE>:
    constexpr const _Tp& get(const variant<_Types...>& __v)
 8018412:	b580      	push	{r7, lr}
 8018414:	b082      	sub	sp, #8
 8018416:	af00      	add	r7, sp, #0
 8018418:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 801841a:	6878      	ldr	r0, [r7, #4]
 801841c:	f000 f962 	bl	80186e4 <_ZSt3getILj3EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERKNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERKSE_>
 8018420:	4603      	mov	r3, r0
    }
 8018422:	4618      	mov	r0, r3
 8018424:	3708      	adds	r7, #8
 8018426:	46bd      	mov	sp, r7
 8018428:	bd80      	pop	{r7, pc}

0801842a <_ZSt3getISt6vectorI6SymbolSaIS1_EEJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES3_EERKT_RKSt7variantIJDpT0_EE>:
    constexpr const _Tp& get(const variant<_Types...>& __v)
 801842a:	b580      	push	{r7, lr}
 801842c:	b082      	sub	sp, #8
 801842e:	af00      	add	r7, sp, #0
 8018430:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 8018432:	6878      	ldr	r0, [r7, #4]
 8018434:	f000 f972 	bl	801871c <_ZSt3getILj4EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERKNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERKSE_>
 8018438:	4603      	mov	r3, r0
    }
 801843a:	4618      	mov	r0, r3
 801843c:	3708      	adds	r7, #8
 801843e:	46bd      	mov	sp, r7
 8018440:	bd80      	pop	{r7, pc}
	...

08018444 <_ZNSt6vectorI6SymbolSaIS0_EE7reserveEj>:
    vector<_Tp, _Alloc>::
 8018444:	b5b0      	push	{r4, r5, r7, lr}
 8018446:	b084      	sub	sp, #16
 8018448:	af00      	add	r7, sp, #0
 801844a:	6078      	str	r0, [r7, #4]
 801844c:	6039      	str	r1, [r7, #0]
      if (__n > this->max_size())
 801844e:	6878      	ldr	r0, [r7, #4]
 8018450:	f000 f980 	bl	8018754 <_ZNKSt6vectorI6SymbolSaIS0_EE8max_sizeEv>
 8018454:	4602      	mov	r2, r0
 8018456:	683b      	ldr	r3, [r7, #0]
 8018458:	4293      	cmp	r3, r2
 801845a:	bf8c      	ite	hi
 801845c:	2301      	movhi	r3, #1
 801845e:	2300      	movls	r3, #0
 8018460:	b2db      	uxtb	r3, r3
 8018462:	2b00      	cmp	r3, #0
 8018464:	d002      	beq.n	801846c <_ZNSt6vectorI6SymbolSaIS0_EE7reserveEj+0x28>
	__throw_length_error(__N("vector::reserve"));
 8018466:	4823      	ldr	r0, [pc, #140]	; (80184f4 <_ZNSt6vectorI6SymbolSaIS0_EE7reserveEj+0xb0>)
 8018468:	f00b f913 	bl	8023692 <_ZSt20__throw_length_errorPKc>
      if (this->capacity() < __n)
 801846c:	6878      	ldr	r0, [r7, #4]
 801846e:	f7ef fe72 	bl	8008156 <_ZNKSt6vectorI6SymbolSaIS0_EE8capacityEv>
 8018472:	4602      	mov	r2, r0
 8018474:	683b      	ldr	r3, [r7, #0]
 8018476:	4293      	cmp	r3, r2
 8018478:	bf8c      	ite	hi
 801847a:	2301      	movhi	r3, #1
 801847c:	2300      	movls	r3, #0
 801847e:	b2db      	uxtb	r3, r3
 8018480:	2b00      	cmp	r3, #0
 8018482:	d033      	beq.n	80184ec <_ZNSt6vectorI6SymbolSaIS0_EE7reserveEj+0xa8>
	  const size_type __old_size = size();
 8018484:	6878      	ldr	r0, [r7, #4]
 8018486:	f7ef fe56 	bl	8008136 <_ZNKSt6vectorI6SymbolSaIS0_EE4sizeEv>
 801848a:	60f8      	str	r0, [r7, #12]
	      __tmp = this->_M_allocate(__n);
 801848c:	687b      	ldr	r3, [r7, #4]
 801848e:	6839      	ldr	r1, [r7, #0]
 8018490:	4618      	mov	r0, r3
 8018492:	f7f0 fb33 	bl	8008afc <_ZNSt12_Vector_baseI6SymbolSaIS0_EE11_M_allocateEj>
 8018496:	60b8      	str	r0, [r7, #8]
	      _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
 8018498:	687b      	ldr	r3, [r7, #4]
 801849a:	681c      	ldr	r4, [r3, #0]
 801849c:	687b      	ldr	r3, [r7, #4]
 801849e:	685d      	ldr	r5, [r3, #4]
			  __tmp, _M_get_Tp_allocator());
 80184a0:	687b      	ldr	r3, [r7, #4]
 80184a2:	4618      	mov	r0, r3
 80184a4:	f7ef fdf6 	bl	8008094 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 80184a8:	4603      	mov	r3, r0
	      _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
 80184aa:	68ba      	ldr	r2, [r7, #8]
 80184ac:	4629      	mov	r1, r5
 80184ae:	4620      	mov	r0, r4
 80184b0:	f000 f961 	bl	8018776 <_ZNSt6vectorI6SymbolSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_>
	  _M_deallocate(this->_M_impl._M_start,
 80184b4:	6878      	ldr	r0, [r7, #4]
 80184b6:	687b      	ldr	r3, [r7, #4]
 80184b8:	6819      	ldr	r1, [r3, #0]
			this->_M_impl._M_end_of_storage
 80184ba:	687b      	ldr	r3, [r7, #4]
 80184bc:	689a      	ldr	r2, [r3, #8]
			- this->_M_impl._M_start);
 80184be:	687b      	ldr	r3, [r7, #4]
 80184c0:	681b      	ldr	r3, [r3, #0]
 80184c2:	1ad3      	subs	r3, r2, r3
 80184c4:	115b      	asrs	r3, r3, #5
	  _M_deallocate(this->_M_impl._M_start,
 80184c6:	461a      	mov	r2, r3
 80184c8:	f7ef fe14 	bl	80080f4 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE13_M_deallocateEPS0_j>
	  this->_M_impl._M_start = __tmp;
 80184cc:	687b      	ldr	r3, [r7, #4]
 80184ce:	68ba      	ldr	r2, [r7, #8]
 80184d0:	601a      	str	r2, [r3, #0]
	  this->_M_impl._M_finish = __tmp + __old_size;
 80184d2:	68fb      	ldr	r3, [r7, #12]
 80184d4:	015b      	lsls	r3, r3, #5
 80184d6:	68ba      	ldr	r2, [r7, #8]
 80184d8:	441a      	add	r2, r3
 80184da:	687b      	ldr	r3, [r7, #4]
 80184dc:	605a      	str	r2, [r3, #4]
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 80184de:	687b      	ldr	r3, [r7, #4]
 80184e0:	681a      	ldr	r2, [r3, #0]
 80184e2:	683b      	ldr	r3, [r7, #0]
 80184e4:	015b      	lsls	r3, r3, #5
 80184e6:	441a      	add	r2, r3
 80184e8:	687b      	ldr	r3, [r7, #4]
 80184ea:	609a      	str	r2, [r3, #8]
    }
 80184ec:	bf00      	nop
 80184ee:	3710      	adds	r7, #16
 80184f0:	46bd      	mov	sp, r7
 80184f2:	bdb0      	pop	{r4, r5, r7, pc}
 80184f4:	08029d34 	.word	0x08029d34

080184f8 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>:
	operator=(_Tp&& __rhs)
 80184f8:	b590      	push	{r4, r7, lr}
 80184fa:	b085      	sub	sp, #20
 80184fc:	af00      	add	r7, sp, #0
 80184fe:	6078      	str	r0, [r7, #4]
 8018500:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 8018502:	2300      	movs	r3, #0
 8018504:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 8018506:	6878      	ldr	r0, [r7, #4]
 8018508:	f7ea f871 	bl	80025ee <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv>
 801850c:	4603      	mov	r3, r0
 801850e:	2b00      	cmp	r3, #0
 8018510:	bf0c      	ite	eq
 8018512:	2301      	moveq	r3, #1
 8018514:	2300      	movne	r3, #0
 8018516:	b2db      	uxtb	r3, r3
 8018518:	2b00      	cmp	r3, #0
 801851a:	d00a      	beq.n	8018532 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 801851c:	6838      	ldr	r0, [r7, #0]
 801851e:	f7ef fb53 	bl	8007bc8 <_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE>
 8018522:	4603      	mov	r3, r0
 8018524:	681c      	ldr	r4, [r3, #0]
 8018526:	6878      	ldr	r0, [r7, #4]
 8018528:	f7eb fe20 	bl	800416c <_ZSt3getILj0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 801852c:	4603      	mov	r3, r0
 801852e:	601c      	str	r4, [r3, #0]
 8018530:	e007      	b.n	8018542 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 8018532:	6838      	ldr	r0, [r7, #0]
 8018534:	f7ef fb48 	bl	8007bc8 <_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE>
 8018538:	4603      	mov	r3, r0
 801853a:	4619      	mov	r1, r3
 801853c:	6878      	ldr	r0, [r7, #4]
 801853e:	f7ee fde5 	bl	800710c <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE7emplaceILj0EJiEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	  return *this;
 8018542:	687b      	ldr	r3, [r7, #4]
	}
 8018544:	4618      	mov	r0, r3
 8018546:	3714      	adds	r7, #20
 8018548:	46bd      	mov	sp, r7
 801854a:	bd90      	pop	{r4, r7, pc}

0801854c <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE7emplaceILj0EJRiEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSG_E4typeEDpOSH_>:
	emplace(_Args&&... __args)
 801854c:	b580      	push	{r7, lr}
 801854e:	b082      	sub	sp, #8
 8018550:	af00      	add	r7, sp, #0
 8018552:	6078      	str	r0, [r7, #4]
 8018554:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 8018556:	687b      	ldr	r3, [r7, #4]
 8018558:	4618      	mov	r0, r3
 801855a:	f7ea ff18 	bl	800338e <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 801855e:	6838      	ldr	r0, [r7, #0]
 8018560:	f7ec fb74 	bl	8004c4c <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 8018564:	4603      	mov	r3, r0
 8018566:	4619      	mov	r1, r3
 8018568:	6878      	ldr	r0, [r7, #4]
 801856a:	f000 f918 	bl	801879e <_ZSt28__variant_construct_by_indexILj0ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEJRiEEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 801856e:	6878      	ldr	r0, [r7, #4]
 8018570:	f7eb fdfc 	bl	800416c <_ZSt3getILj0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8018574:	4603      	mov	r3, r0
	}
 8018576:	4618      	mov	r0, r3
 8018578:	3708      	adds	r7, #8
 801857a:	46bd      	mov	sp, r7
 801857c:	bd80      	pop	{r7, pc}

0801857e <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE7emplaceILj1EJRfEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSG_E4typeEDpOSH_>:
	emplace(_Args&&... __args)
 801857e:	b580      	push	{r7, lr}
 8018580:	b082      	sub	sp, #8
 8018582:	af00      	add	r7, sp, #0
 8018584:	6078      	str	r0, [r7, #4]
 8018586:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 8018588:	687b      	ldr	r3, [r7, #4]
 801858a:	4618      	mov	r0, r3
 801858c:	f7ea feff 	bl	800338e <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 8018590:	6838      	ldr	r0, [r7, #0]
 8018592:	f7ec fb8f 	bl	8004cb4 <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 8018596:	4603      	mov	r3, r0
 8018598:	4619      	mov	r1, r3
 801859a:	6878      	ldr	r0, [r7, #4]
 801859c:	f000 f91e 	bl	80187dc <_ZSt28__variant_construct_by_indexILj1ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEJRfEEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 80185a0:	6878      	ldr	r0, [r7, #4]
 80185a2:	f7ef fb65 	bl	8007c70 <_ZSt3getILj1EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 80185a6:	4603      	mov	r3, r0
	}
 80185a8:	4618      	mov	r0, r3
 80185aa:	3708      	adds	r7, #8
 80185ac:	46bd      	mov	sp, r7
 80185ae:	bd80      	pop	{r7, pc}

080185b0 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE7emplaceILj2EJRbEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSG_E4typeEDpOSH_>:
	emplace(_Args&&... __args)
 80185b0:	b580      	push	{r7, lr}
 80185b2:	b082      	sub	sp, #8
 80185b4:	af00      	add	r7, sp, #0
 80185b6:	6078      	str	r0, [r7, #4]
 80185b8:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 80185ba:	687b      	ldr	r3, [r7, #4]
 80185bc:	4618      	mov	r0, r3
 80185be:	f7ea fee6 	bl	800338e <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 80185c2:	6838      	ldr	r0, [r7, #0]
 80185c4:	f7ec fbaa 	bl	8004d1c <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
 80185c8:	4603      	mov	r3, r0
 80185ca:	4619      	mov	r1, r3
 80185cc:	6878      	ldr	r0, [r7, #4]
 80185ce:	f000 f924 	bl	801881a <_ZSt28__variant_construct_by_indexILj2ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEJRbEEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 80185d2:	6878      	ldr	r0, [r7, #4]
 80185d4:	f7ef fb94 	bl	8007d00 <_ZSt3getILj2EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 80185d8:	4603      	mov	r3, r0
	}
 80185da:	4618      	mov	r0, r3
 80185dc:	3708      	adds	r7, #8
 80185de:	46bd      	mov	sp, r7
 80185e0:	bd80      	pop	{r7, pc}

080185e2 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1ILj3EJRS5_ES5_vEESt16in_place_index_tIXT_EEDpOT0_>:
	variant(in_place_index_t<_Np>, _Args&&... __args)
 80185e2:	b5f0      	push	{r4, r5, r6, r7, lr}
 80185e4:	b085      	sub	sp, #20
 80185e6:	af00      	add	r7, sp, #0
 80185e8:	60f8      	str	r0, [r7, #12]
 80185ea:	7239      	strb	r1, [r7, #8]
 80185ec:	607a      	str	r2, [r7, #4]
	_Default_ctor_enabler(_Enable_default_constructor_tag{})
 80185ee:	68fc      	ldr	r4, [r7, #12]
 80185f0:	6878      	ldr	r0, [r7, #4]
 80185f2:	f7ec fbd3 	bl	8004d9c <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 80185f6:	4603      	mov	r3, r0
 80185f8:	461a      	mov	r2, r3
 80185fa:	4631      	mov	r1, r6
 80185fc:	4620      	mov	r0, r4
 80185fe:	f000 f970 	bl	80188e2 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj3EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>
 8018602:	4629      	mov	r1, r5
 8018604:	68f8      	ldr	r0, [r7, #12]
 8018606:	f7ef fd39 	bl	800807c <_ZNSt27_Enable_default_constructorILb1ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEC1ESt31_Enable_default_constructor_tag>
	{ }
 801860a:	68fb      	ldr	r3, [r7, #12]
 801860c:	4618      	mov	r0, r3
 801860e:	3714      	adds	r7, #20
 8018610:	46bd      	mov	sp, r7
 8018612:	bdf0      	pop	{r4, r5, r6, r7, pc}

08018614 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1IRS5_vvS5_vEEOT_>:
	variant(_Tp&& __t)
 8018614:	b590      	push	{r4, r7, lr}
 8018616:	b083      	sub	sp, #12
 8018618:	af00      	add	r7, sp, #0
 801861a:	6078      	str	r0, [r7, #4]
 801861c:	6039      	str	r1, [r7, #0]
		  std::forward<_Tp>(__t))
 801861e:	6838      	ldr	r0, [r7, #0]
 8018620:	f7ec fbbc 	bl	8004d9c <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 8018624:	4603      	mov	r3, r0
 8018626:	461a      	mov	r2, r3
 8018628:	4621      	mov	r1, r4
 801862a:	6878      	ldr	r0, [r7, #4]
 801862c:	f7ff ffd9 	bl	80185e2 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1ILj3EJRS5_ES5_vEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 8018630:	687b      	ldr	r3, [r7, #4]
 8018632:	4618      	mov	r0, r3
 8018634:	370c      	adds	r7, #12
 8018636:	46bd      	mov	sp, r7
 8018638:	bd90      	pop	{r4, r7, pc}
	...

0801863c <_ZSt3getILj0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERKNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERKSE_>:
    get(const variant<_Types...>& __v)
 801863c:	b580      	push	{r7, lr}
 801863e:	b082      	sub	sp, #8
 8018640:	af00      	add	r7, sp, #0
 8018642:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 8018644:	6878      	ldr	r0, [r7, #4]
 8018646:	f7e9 ffd2 	bl	80025ee <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv>
 801864a:	4603      	mov	r3, r0
 801864c:	2b00      	cmp	r3, #0
 801864e:	bf14      	ite	ne
 8018650:	2301      	movne	r3, #1
 8018652:	2300      	moveq	r3, #0
 8018654:	b2db      	uxtb	r3, r3
 8018656:	2b00      	cmp	r3, #0
 8018658:	d002      	beq.n	8018660 <_ZSt3getILj0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERKNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERKSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 801865a:	4805      	ldr	r0, [pc, #20]	; (8018670 <_ZSt3getILj0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERKNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERKSE_+0x34>)
 801865c:	f7e8 fd09 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 8018660:	6878      	ldr	r0, [r7, #4]
 8018662:	f7ea f91b 	bl	800289c <_ZNSt8__detail9__variant5__getILj0ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8018666:	4603      	mov	r3, r0
    }
 8018668:	4618      	mov	r0, r3
 801866a:	3708      	adds	r7, #8
 801866c:	46bd      	mov	sp, r7
 801866e:	bd80      	pop	{r7, pc}
 8018670:	08029b24 	.word	0x08029b24

08018674 <_ZSt3getILj1EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERKNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERKSE_>:
    get(const variant<_Types...>& __v)
 8018674:	b580      	push	{r7, lr}
 8018676:	b082      	sub	sp, #8
 8018678:	af00      	add	r7, sp, #0
 801867a:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 801867c:	6878      	ldr	r0, [r7, #4]
 801867e:	f7e9 ffb6 	bl	80025ee <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv>
 8018682:	4603      	mov	r3, r0
 8018684:	2b01      	cmp	r3, #1
 8018686:	bf14      	ite	ne
 8018688:	2301      	movne	r3, #1
 801868a:	2300      	moveq	r3, #0
 801868c:	b2db      	uxtb	r3, r3
 801868e:	2b00      	cmp	r3, #0
 8018690:	d002      	beq.n	8018698 <_ZSt3getILj1EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERKNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERKSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 8018692:	4805      	ldr	r0, [pc, #20]	; (80186a8 <_ZSt3getILj1EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERKNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERKSE_+0x34>)
 8018694:	f7e8 fced 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 8018698:	6878      	ldr	r0, [r7, #4]
 801869a:	f7ea f98b 	bl	80029b4 <_ZNSt8__detail9__variant5__getILj1ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 801869e:	4603      	mov	r3, r0
    }
 80186a0:	4618      	mov	r0, r3
 80186a2:	3708      	adds	r7, #8
 80186a4:	46bd      	mov	sp, r7
 80186a6:	bd80      	pop	{r7, pc}
 80186a8:	08029b24 	.word	0x08029b24

080186ac <_ZSt3getILj2EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERKNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERKSE_>:
    get(const variant<_Types...>& __v)
 80186ac:	b580      	push	{r7, lr}
 80186ae:	b082      	sub	sp, #8
 80186b0:	af00      	add	r7, sp, #0
 80186b2:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 80186b4:	6878      	ldr	r0, [r7, #4]
 80186b6:	f7e9 ff9a 	bl	80025ee <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv>
 80186ba:	4603      	mov	r3, r0
 80186bc:	2b02      	cmp	r3, #2
 80186be:	bf14      	ite	ne
 80186c0:	2301      	movne	r3, #1
 80186c2:	2300      	moveq	r3, #0
 80186c4:	b2db      	uxtb	r3, r3
 80186c6:	2b00      	cmp	r3, #0
 80186c8:	d002      	beq.n	80186d0 <_ZSt3getILj2EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERKNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERKSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 80186ca:	4805      	ldr	r0, [pc, #20]	; (80186e0 <_ZSt3getILj2EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERKNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERKSE_+0x34>)
 80186cc:	f7e8 fcd1 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 80186d0:	6878      	ldr	r0, [r7, #4]
 80186d2:	f7ea fa0d 	bl	8002af0 <_ZNSt8__detail9__variant5__getILj2ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 80186d6:	4603      	mov	r3, r0
    }
 80186d8:	4618      	mov	r0, r3
 80186da:	3708      	adds	r7, #8
 80186dc:	46bd      	mov	sp, r7
 80186de:	bd80      	pop	{r7, pc}
 80186e0:	08029b24 	.word	0x08029b24

080186e4 <_ZSt3getILj3EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERKNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERKSE_>:
    get(const variant<_Types...>& __v)
 80186e4:	b580      	push	{r7, lr}
 80186e6:	b082      	sub	sp, #8
 80186e8:	af00      	add	r7, sp, #0
 80186ea:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 80186ec:	6878      	ldr	r0, [r7, #4]
 80186ee:	f7e9 ff7e 	bl	80025ee <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv>
 80186f2:	4603      	mov	r3, r0
 80186f4:	2b03      	cmp	r3, #3
 80186f6:	bf14      	ite	ne
 80186f8:	2301      	movne	r3, #1
 80186fa:	2300      	moveq	r3, #0
 80186fc:	b2db      	uxtb	r3, r3
 80186fe:	2b00      	cmp	r3, #0
 8018700:	d002      	beq.n	8018708 <_ZSt3getILj3EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERKNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERKSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 8018702:	4805      	ldr	r0, [pc, #20]	; (8018718 <_ZSt3getILj3EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERKNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERKSE_+0x34>)
 8018704:	f7e8 fcb5 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 8018708:	6878      	ldr	r0, [r7, #4]
 801870a:	f7ea faa1 	bl	8002c50 <_ZNSt8__detail9__variant5__getILj3ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 801870e:	4603      	mov	r3, r0
    }
 8018710:	4618      	mov	r0, r3
 8018712:	3708      	adds	r7, #8
 8018714:	46bd      	mov	sp, r7
 8018716:	bd80      	pop	{r7, pc}
 8018718:	08029b24 	.word	0x08029b24

0801871c <_ZSt3getILj4EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERKNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERKSE_>:
    get(const variant<_Types...>& __v)
 801871c:	b580      	push	{r7, lr}
 801871e:	b082      	sub	sp, #8
 8018720:	af00      	add	r7, sp, #0
 8018722:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 8018724:	6878      	ldr	r0, [r7, #4]
 8018726:	f7e9 ff62 	bl	80025ee <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv>
 801872a:	4603      	mov	r3, r0
 801872c:	2b04      	cmp	r3, #4
 801872e:	bf14      	ite	ne
 8018730:	2301      	movne	r3, #1
 8018732:	2300      	moveq	r3, #0
 8018734:	b2db      	uxtb	r3, r3
 8018736:	2b00      	cmp	r3, #0
 8018738:	d002      	beq.n	8018740 <_ZSt3getILj4EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERKNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERKSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 801873a:	4805      	ldr	r0, [pc, #20]	; (8018750 <_ZSt3getILj4EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERKNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERKSE_+0x34>)
 801873c:	f7e8 fc99 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 8018740:	6878      	ldr	r0, [r7, #4]
 8018742:	f7ea fb47 	bl	8002dd4 <_ZNSt8__detail9__variant5__getILj4ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8018746:	4603      	mov	r3, r0
    }
 8018748:	4618      	mov	r0, r3
 801874a:	3708      	adds	r7, #8
 801874c:	46bd      	mov	sp, r7
 801874e:	bd80      	pop	{r7, pc}
 8018750:	08029b24 	.word	0x08029b24

08018754 <_ZNKSt6vectorI6SymbolSaIS0_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
 8018754:	b580      	push	{r7, lr}
 8018756:	b082      	sub	sp, #8
 8018758:	af00      	add	r7, sp, #0
 801875a:	6078      	str	r0, [r7, #4]
      { return _S_max_size(_M_get_Tp_allocator()); }
 801875c:	687b      	ldr	r3, [r7, #4]
 801875e:	4618      	mov	r0, r3
 8018760:	f7ef fca3 	bl	80080aa <_ZNKSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 8018764:	4603      	mov	r3, r0
 8018766:	4618      	mov	r0, r3
 8018768:	f000 f8d0 	bl	801890c <_ZNSt6vectorI6SymbolSaIS0_EE11_S_max_sizeERKS1_>
 801876c:	4603      	mov	r3, r0
 801876e:	4618      	mov	r0, r3
 8018770:	3708      	adds	r7, #8
 8018772:	46bd      	mov	sp, r7
 8018774:	bd80      	pop	{r7, pc}

08018776 <_ZNSt6vectorI6SymbolSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
 8018776:	b590      	push	{r4, r7, lr}
 8018778:	b089      	sub	sp, #36	; 0x24
 801877a:	af02      	add	r7, sp, #8
 801877c:	60f8      	str	r0, [r7, #12]
 801877e:	60b9      	str	r1, [r7, #8]
 8018780:	607a      	str	r2, [r7, #4]
 8018782:	603b      	str	r3, [r7, #0]
	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
 8018784:	f88d 4000 	strb.w	r4, [sp]
 8018788:	683b      	ldr	r3, [r7, #0]
 801878a:	687a      	ldr	r2, [r7, #4]
 801878c:	68b9      	ldr	r1, [r7, #8]
 801878e:	68f8      	ldr	r0, [r7, #12]
 8018790:	f000 f8d6 	bl	8018940 <_ZNSt6vectorI6SymbolSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE>
 8018794:	4603      	mov	r3, r0
      }
 8018796:	4618      	mov	r0, r3
 8018798:	371c      	adds	r7, #28
 801879a:	46bd      	mov	sp, r7
 801879c:	bd90      	pop	{r4, r7, pc}

0801879e <_ZSt28__variant_construct_by_indexILj0ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEJRiEEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 801879e:	b590      	push	{r4, r7, lr}
 80187a0:	b085      	sub	sp, #20
 80187a2:	af00      	add	r7, sp, #0
 80187a4:	6078      	str	r0, [r7, #4]
 80187a6:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 80187a8:	687b      	ldr	r3, [r7, #4]
 80187aa:	2200      	movs	r2, #0
 80187ac:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 80187ae:	6878      	ldr	r0, [r7, #4]
 80187b0:	f7e9 fc07 	bl	8001fc2 <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 80187b4:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 80187b6:	6838      	ldr	r0, [r7, #0]
 80187b8:	f7ec fa48 	bl	8004c4c <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 80187bc:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 80187be:	681c      	ldr	r4, [r3, #0]
 80187c0:	68f8      	ldr	r0, [r7, #12]
 80187c2:	f7ef ffe3 	bl	800878c <_ZSt9addressofIiEPT_RS0_>
 80187c6:	4603      	mov	r3, r0
 80187c8:	4619      	mov	r1, r3
 80187ca:	2004      	movs	r0, #4
 80187cc:	f7e8 fc45 	bl	800105a <_ZnwjPv>
 80187d0:	4603      	mov	r3, r0
 80187d2:	601c      	str	r4, [r3, #0]
    }
 80187d4:	bf00      	nop
 80187d6:	3714      	adds	r7, #20
 80187d8:	46bd      	mov	sp, r7
 80187da:	bd90      	pop	{r4, r7, pc}

080187dc <_ZSt28__variant_construct_by_indexILj1ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEJRfEEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 80187dc:	b590      	push	{r4, r7, lr}
 80187de:	b085      	sub	sp, #20
 80187e0:	af00      	add	r7, sp, #0
 80187e2:	6078      	str	r0, [r7, #4]
 80187e4:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 80187e6:	687b      	ldr	r3, [r7, #4]
 80187e8:	2201      	movs	r2, #1
 80187ea:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 80187ec:	6878      	ldr	r0, [r7, #4]
 80187ee:	f7e9 fc74 	bl	80020da <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 80187f2:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 80187f4:	6838      	ldr	r0, [r7, #0]
 80187f6:	f7ec fa5d 	bl	8004cb4 <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 80187fa:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 80187fc:	681c      	ldr	r4, [r3, #0]
 80187fe:	68f8      	ldr	r0, [r7, #12]
 8018800:	f7ef ffd0 	bl	80087a4 <_ZSt9addressofIfEPT_RS0_>
 8018804:	4603      	mov	r3, r0
 8018806:	4619      	mov	r1, r3
 8018808:	2004      	movs	r0, #4
 801880a:	f7e8 fc26 	bl	800105a <_ZnwjPv>
 801880e:	4603      	mov	r3, r0
 8018810:	601c      	str	r4, [r3, #0]
    }
 8018812:	bf00      	nop
 8018814:	3714      	adds	r7, #20
 8018816:	46bd      	mov	sp, r7
 8018818:	bd90      	pop	{r4, r7, pc}

0801881a <_ZSt28__variant_construct_by_indexILj2ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEJRbEEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 801881a:	b590      	push	{r4, r7, lr}
 801881c:	b085      	sub	sp, #20
 801881e:	af00      	add	r7, sp, #0
 8018820:	6078      	str	r0, [r7, #4]
 8018822:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 8018824:	687b      	ldr	r3, [r7, #4]
 8018826:	2202      	movs	r2, #2
 8018828:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 801882a:	6878      	ldr	r0, [r7, #4]
 801882c:	f7e9 fcf3 	bl	8002216 <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8018830:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 8018832:	6838      	ldr	r0, [r7, #0]
 8018834:	f7ec fa72 	bl	8004d1c <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
 8018838:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 801883a:	781c      	ldrb	r4, [r3, #0]
 801883c:	68f8      	ldr	r0, [r7, #12]
 801883e:	f7ef ffbd 	bl	80087bc <_ZSt9addressofIbEPT_RS0_>
 8018842:	4603      	mov	r3, r0
 8018844:	4619      	mov	r1, r3
 8018846:	2001      	movs	r0, #1
 8018848:	f7e8 fc07 	bl	800105a <_ZnwjPv>
 801884c:	4603      	mov	r3, r0
 801884e:	4622      	mov	r2, r4
 8018850:	701a      	strb	r2, [r3, #0]
    }
 8018852:	bf00      	nop
 8018854:	3714      	adds	r7, #20
 8018856:	46bd      	mov	sp, r7
 8018858:	bd90      	pop	{r4, r7, pc}

0801885a <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj3EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 801885a:	b590      	push	{r4, r7, lr}
 801885c:	b085      	sub	sp, #20
 801885e:	af00      	add	r7, sp, #0
 8018860:	60f8      	str	r0, [r7, #12]
 8018862:	7239      	strb	r1, [r7, #8]
 8018864:	607a      	str	r2, [r7, #4]
 8018866:	68fb      	ldr	r3, [r7, #12]
 8018868:	687a      	ldr	r2, [r7, #4]
 801886a:	4621      	mov	r1, r4
 801886c:	4618      	mov	r0, r3
 801886e:	f000 f8ea 	bl	8018a46 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj3EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>
 8018872:	68fb      	ldr	r3, [r7, #12]
 8018874:	4618      	mov	r0, r3
 8018876:	3714      	adds	r7, #20
 8018878:	46bd      	mov	sp, r7
 801887a:	bd90      	pop	{r4, r7, pc}

0801887c <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj3EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 801887c:	b590      	push	{r4, r7, lr}
 801887e:	b085      	sub	sp, #20
 8018880:	af00      	add	r7, sp, #0
 8018882:	60f8      	str	r0, [r7, #12]
 8018884:	7239      	strb	r1, [r7, #8]
 8018886:	607a      	str	r2, [r7, #4]
 8018888:	68fb      	ldr	r3, [r7, #12]
 801888a:	687a      	ldr	r2, [r7, #4]
 801888c:	4621      	mov	r1, r4
 801888e:	4618      	mov	r0, r3
 8018890:	f7ff ffe3 	bl	801885a <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj3EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>
 8018894:	68fb      	ldr	r3, [r7, #12]
 8018896:	4618      	mov	r0, r3
 8018898:	3714      	adds	r7, #20
 801889a:	46bd      	mov	sp, r7
 801889c:	bd90      	pop	{r4, r7, pc}

0801889e <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj3EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 801889e:	b590      	push	{r4, r7, lr}
 80188a0:	b085      	sub	sp, #20
 80188a2:	af00      	add	r7, sp, #0
 80188a4:	60f8      	str	r0, [r7, #12]
 80188a6:	7239      	strb	r1, [r7, #8]
 80188a8:	607a      	str	r2, [r7, #4]
 80188aa:	68fb      	ldr	r3, [r7, #12]
 80188ac:	687a      	ldr	r2, [r7, #4]
 80188ae:	4621      	mov	r1, r4
 80188b0:	4618      	mov	r0, r3
 80188b2:	f7ff ffe3 	bl	801887c <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj3EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>
 80188b6:	68fb      	ldr	r3, [r7, #12]
 80188b8:	4618      	mov	r0, r3
 80188ba:	3714      	adds	r7, #20
 80188bc:	46bd      	mov	sp, r7
 80188be:	bd90      	pop	{r4, r7, pc}

080188c0 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj3EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 80188c0:	b590      	push	{r4, r7, lr}
 80188c2:	b085      	sub	sp, #20
 80188c4:	af00      	add	r7, sp, #0
 80188c6:	60f8      	str	r0, [r7, #12]
 80188c8:	7239      	strb	r1, [r7, #8]
 80188ca:	607a      	str	r2, [r7, #4]
 80188cc:	68fb      	ldr	r3, [r7, #12]
 80188ce:	687a      	ldr	r2, [r7, #4]
 80188d0:	4621      	mov	r1, r4
 80188d2:	4618      	mov	r0, r3
 80188d4:	f7ff ffe3 	bl	801889e <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj3EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>
 80188d8:	68fb      	ldr	r3, [r7, #12]
 80188da:	4618      	mov	r0, r3
 80188dc:	3714      	adds	r7, #20
 80188de:	46bd      	mov	sp, r7
 80188e0:	bd90      	pop	{r4, r7, pc}

080188e2 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj3EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
	_Variant_base(in_place_index_t<_Np> __i, _Args&&... __args)
 80188e2:	b5b0      	push	{r4, r5, r7, lr}
 80188e4:	b084      	sub	sp, #16
 80188e6:	af00      	add	r7, sp, #0
 80188e8:	60f8      	str	r0, [r7, #12]
 80188ea:	7239      	strb	r1, [r7, #8]
 80188ec:	607a      	str	r2, [r7, #4]
	: _Base(__i, std::forward<_Args>(__args)...)
 80188ee:	68fc      	ldr	r4, [r7, #12]
 80188f0:	6878      	ldr	r0, [r7, #4]
 80188f2:	f7ec fa53 	bl	8004d9c <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 80188f6:	4603      	mov	r3, r0
 80188f8:	461a      	mov	r2, r3
 80188fa:	4629      	mov	r1, r5
 80188fc:	4620      	mov	r0, r4
 80188fe:	f7ff ffdf 	bl	80188c0 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj3EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 8018902:	68fb      	ldr	r3, [r7, #12]
 8018904:	4618      	mov	r0, r3
 8018906:	3710      	adds	r7, #16
 8018908:	46bd      	mov	sp, r7
 801890a:	bdb0      	pop	{r4, r5, r7, pc}

0801890c <_ZNSt6vectorI6SymbolSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
 801890c:	b580      	push	{r7, lr}
 801890e:	b084      	sub	sp, #16
 8018910:	af00      	add	r7, sp, #0
 8018912:	6078      	str	r0, [r7, #4]
	const size_t __diffmax
 8018914:	f06f 437c 	mvn.w	r3, #4227858432	; 0xfc000000
 8018918:	60fb      	str	r3, [r7, #12]
	const size_t __allocmax = _Alloc_traits::max_size(__a);
 801891a:	6878      	ldr	r0, [r7, #4]
 801891c:	f000 f8ab 	bl	8018a76 <_ZNSt16allocator_traitsISaI6SymbolEE8max_sizeERKS1_>
 8018920:	4603      	mov	r3, r0
 8018922:	60bb      	str	r3, [r7, #8]
	return (std::min)(__diffmax, __allocmax);
 8018924:	f107 0208 	add.w	r2, r7, #8
 8018928:	f107 030c 	add.w	r3, r7, #12
 801892c:	4611      	mov	r1, r2
 801892e:	4618      	mov	r0, r3
 8018930:	f7fd fce8 	bl	8016304 <_ZSt3minIjERKT_S2_S2_>
 8018934:	4603      	mov	r3, r0
 8018936:	681b      	ldr	r3, [r3, #0]
      }
 8018938:	4618      	mov	r0, r3
 801893a:	3710      	adds	r7, #16
 801893c:	46bd      	mov	sp, r7
 801893e:	bd80      	pop	{r7, pc}

08018940 <_ZNSt6vectorI6SymbolSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE>:
      _S_do_relocate(pointer __first, pointer __last, pointer __result,
 8018940:	b580      	push	{r7, lr}
 8018942:	b084      	sub	sp, #16
 8018944:	af00      	add	r7, sp, #0
 8018946:	60f8      	str	r0, [r7, #12]
 8018948:	60b9      	str	r1, [r7, #8]
 801894a:	607a      	str	r2, [r7, #4]
 801894c:	603b      	str	r3, [r7, #0]
	return std::__relocate_a(__first, __last, __result, __alloc);
 801894e:	683b      	ldr	r3, [r7, #0]
 8018950:	687a      	ldr	r2, [r7, #4]
 8018952:	68b9      	ldr	r1, [r7, #8]
 8018954:	68f8      	ldr	r0, [r7, #12]
 8018956:	f000 f89a 	bl	8018a8e <_ZSt12__relocate_aIP6SymbolS1_SaIS0_EET0_T_S4_S3_RT1_>
 801895a:	4603      	mov	r3, r0
      }
 801895c:	4618      	mov	r0, r3
 801895e:	3710      	adds	r7, #16
 8018960:	46bd      	mov	sp, r7
 8018962:	bd80      	pop	{r7, pc}

08018964 <_ZNSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IJRS7_EEESt16in_place_index_tILj0EEDpOT_>:
	_Uninitialized(in_place_index_t<0>, _Args&&... __args)
 8018964:	b590      	push	{r4, r7, lr}
 8018966:	b085      	sub	sp, #20
 8018968:	af00      	add	r7, sp, #0
 801896a:	60f8      	str	r0, [r7, #12]
 801896c:	7239      	strb	r1, [r7, #8]
 801896e:	607a      	str	r2, [r7, #4]
	    _Type(std::forward<_Args>(__args)...);
 8018970:	6878      	ldr	r0, [r7, #4]
 8018972:	f7ec fa13 	bl	8004d9c <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 8018976:	4604      	mov	r4, r0
	  ::new ((void*)std::addressof(_M_storage))
 8018978:	68fb      	ldr	r3, [r7, #12]
 801897a:	4618      	mov	r0, r3
 801897c:	f7f0 fb72 	bl	8009064 <_ZSt9addressofIN9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEPT_RS9_>
 8018980:	4603      	mov	r3, r0
 8018982:	4619      	mov	r1, r3
 8018984:	2018      	movs	r0, #24
 8018986:	f7e8 fb68 	bl	800105a <_ZnwjPv>
 801898a:	4603      	mov	r3, r0
 801898c:	4621      	mov	r1, r4
 801898e:	4618      	mov	r0, r3
 8018990:	f00b fa22 	bl	8023dd8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
	}
 8018994:	68fb      	ldr	r3, [r7, #12]
 8018996:	4618      	mov	r0, r3
 8018998:	3714      	adds	r7, #20
 801899a:	46bd      	mov	sp, r7
 801899c:	bd90      	pop	{r4, r7, pc}

0801899e <_ZNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1IJRS7_EEESt16in_place_index_tILj0EEDpOT_>:
	constexpr _Variadic_union(in_place_index_t<0>, _Args&&... __args)
 801899e:	b5b0      	push	{r4, r5, r7, lr}
 80189a0:	b084      	sub	sp, #16
 80189a2:	af00      	add	r7, sp, #0
 80189a4:	60f8      	str	r0, [r7, #12]
 80189a6:	7239      	strb	r1, [r7, #8]
 80189a8:	607a      	str	r2, [r7, #4]
	: _M_first(in_place_index<0>, std::forward<_Args>(__args)...)
 80189aa:	68fc      	ldr	r4, [r7, #12]
 80189ac:	6878      	ldr	r0, [r7, #4]
 80189ae:	f7ec f9f5 	bl	8004d9c <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 80189b2:	4603      	mov	r3, r0
 80189b4:	461a      	mov	r2, r3
 80189b6:	4629      	mov	r1, r5
 80189b8:	4620      	mov	r0, r4
 80189ba:	f7ff ffd3 	bl	8018964 <_ZNSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IJRS7_EEESt16in_place_index_tILj0EEDpOT_>
	{ }
 80189be:	68fb      	ldr	r3, [r7, #12]
 80189c0:	4618      	mov	r0, r3
 80189c2:	3710      	adds	r7, #16
 80189c4:	46bd      	mov	sp, r7
 80189c6:	bdb0      	pop	{r4, r5, r7, pc}

080189c8 <_ZNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj1EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variadic_union(in_place_index_t<_Np>, _Args&&... __args)
 80189c8:	b5b0      	push	{r4, r5, r7, lr}
 80189ca:	b084      	sub	sp, #16
 80189cc:	af00      	add	r7, sp, #0
 80189ce:	60f8      	str	r0, [r7, #12]
 80189d0:	7239      	strb	r1, [r7, #8]
 80189d2:	607a      	str	r2, [r7, #4]
	: _M_rest(in_place_index<_Np-1>, std::forward<_Args>(__args)...)
 80189d4:	68fc      	ldr	r4, [r7, #12]
 80189d6:	6878      	ldr	r0, [r7, #4]
 80189d8:	f7ec f9e0 	bl	8004d9c <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 80189dc:	4603      	mov	r3, r0
 80189de:	461a      	mov	r2, r3
 80189e0:	4629      	mov	r1, r5
 80189e2:	4620      	mov	r0, r4
 80189e4:	f7ff ffdb 	bl	801899e <_ZNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1IJRS7_EEESt16in_place_index_tILj0EEDpOT_>
	{ }
 80189e8:	68fb      	ldr	r3, [r7, #12]
 80189ea:	4618      	mov	r0, r3
 80189ec:	3710      	adds	r7, #16
 80189ee:	46bd      	mov	sp, r7
 80189f0:	bdb0      	pop	{r4, r5, r7, pc}

080189f2 <_ZNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj2EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variadic_union(in_place_index_t<_Np>, _Args&&... __args)
 80189f2:	b5b0      	push	{r4, r5, r7, lr}
 80189f4:	b084      	sub	sp, #16
 80189f6:	af00      	add	r7, sp, #0
 80189f8:	60f8      	str	r0, [r7, #12]
 80189fa:	7239      	strb	r1, [r7, #8]
 80189fc:	607a      	str	r2, [r7, #4]
	: _M_rest(in_place_index<_Np-1>, std::forward<_Args>(__args)...)
 80189fe:	68fc      	ldr	r4, [r7, #12]
 8018a00:	6878      	ldr	r0, [r7, #4]
 8018a02:	f7ec f9cb 	bl	8004d9c <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 8018a06:	4603      	mov	r3, r0
 8018a08:	461a      	mov	r2, r3
 8018a0a:	4629      	mov	r1, r5
 8018a0c:	4620      	mov	r0, r4
 8018a0e:	f7ff ffdb 	bl	80189c8 <_ZNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj1EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 8018a12:	68fb      	ldr	r3, [r7, #12]
 8018a14:	4618      	mov	r0, r3
 8018a16:	3710      	adds	r7, #16
 8018a18:	46bd      	mov	sp, r7
 8018a1a:	bdb0      	pop	{r4, r5, r7, pc}

08018a1c <_ZNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj3EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variadic_union(in_place_index_t<_Np>, _Args&&... __args)
 8018a1c:	b5b0      	push	{r4, r5, r7, lr}
 8018a1e:	b084      	sub	sp, #16
 8018a20:	af00      	add	r7, sp, #0
 8018a22:	60f8      	str	r0, [r7, #12]
 8018a24:	7239      	strb	r1, [r7, #8]
 8018a26:	607a      	str	r2, [r7, #4]
	: _M_rest(in_place_index<_Np-1>, std::forward<_Args>(__args)...)
 8018a28:	68fc      	ldr	r4, [r7, #12]
 8018a2a:	6878      	ldr	r0, [r7, #4]
 8018a2c:	f7ec f9b6 	bl	8004d9c <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 8018a30:	4603      	mov	r3, r0
 8018a32:	461a      	mov	r2, r3
 8018a34:	4629      	mov	r1, r5
 8018a36:	4620      	mov	r0, r4
 8018a38:	f7ff ffdb 	bl	80189f2 <_ZNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj2EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 8018a3c:	68fb      	ldr	r3, [r7, #12]
 8018a3e:	4618      	mov	r0, r3
 8018a40:	3710      	adds	r7, #16
 8018a42:	46bd      	mov	sp, r7
 8018a44:	bdb0      	pop	{r4, r5, r7, pc}

08018a46 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj3EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variant_storage(in_place_index_t<_Np>, _Args&&... __args)
 8018a46:	b5b0      	push	{r4, r5, r7, lr}
 8018a48:	b084      	sub	sp, #16
 8018a4a:	af00      	add	r7, sp, #0
 8018a4c:	60f8      	str	r0, [r7, #12]
 8018a4e:	7239      	strb	r1, [r7, #8]
 8018a50:	607a      	str	r2, [r7, #4]
	_M_index(_Np)
 8018a52:	68fc      	ldr	r4, [r7, #12]
 8018a54:	6878      	ldr	r0, [r7, #4]
 8018a56:	f7ec f9a1 	bl	8004d9c <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 8018a5a:	4603      	mov	r3, r0
 8018a5c:	461a      	mov	r2, r3
 8018a5e:	4629      	mov	r1, r5
 8018a60:	4620      	mov	r0, r4
 8018a62:	f7ff ffdb 	bl	8018a1c <_ZNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj3EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>
 8018a66:	68fb      	ldr	r3, [r7, #12]
 8018a68:	2203      	movs	r2, #3
 8018a6a:	761a      	strb	r2, [r3, #24]
	{ }
 8018a6c:	68fb      	ldr	r3, [r7, #12]
 8018a6e:	4618      	mov	r0, r3
 8018a70:	3710      	adds	r7, #16
 8018a72:	46bd      	mov	sp, r7
 8018a74:	bdb0      	pop	{r4, r5, r7, pc}

08018a76 <_ZNSt16allocator_traitsISaI6SymbolEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a) noexcept
 8018a76:	b580      	push	{r7, lr}
 8018a78:	b082      	sub	sp, #8
 8018a7a:	af00      	add	r7, sp, #0
 8018a7c:	6078      	str	r0, [r7, #4]
      { return __a.max_size(); }
 8018a7e:	6878      	ldr	r0, [r7, #4]
 8018a80:	f7f0 fe92 	bl	80097a8 <_ZNK9__gnu_cxx13new_allocatorI6SymbolE8max_sizeEv>
 8018a84:	4603      	mov	r3, r0
 8018a86:	4618      	mov	r0, r3
 8018a88:	3708      	adds	r7, #8
 8018a8a:	46bd      	mov	sp, r7
 8018a8c:	bd80      	pop	{r7, pc}

08018a8e <_ZSt12__relocate_aIP6SymbolS1_SaIS0_EET0_T_S4_S3_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
 8018a8e:	b5b0      	push	{r4, r5, r7, lr}
 8018a90:	b084      	sub	sp, #16
 8018a92:	af00      	add	r7, sp, #0
 8018a94:	60f8      	str	r0, [r7, #12]
 8018a96:	60b9      	str	r1, [r7, #8]
 8018a98:	607a      	str	r2, [r7, #4]
 8018a9a:	603b      	str	r3, [r7, #0]
      return __relocate_a_1(std::__niter_base(__first),
 8018a9c:	68f8      	ldr	r0, [r7, #12]
 8018a9e:	f7f0 fb9a 	bl	80091d6 <_ZSt12__niter_baseIP6SymbolET_S2_>
 8018aa2:	4604      	mov	r4, r0
 8018aa4:	68b8      	ldr	r0, [r7, #8]
 8018aa6:	f7f0 fb96 	bl	80091d6 <_ZSt12__niter_baseIP6SymbolET_S2_>
 8018aaa:	4605      	mov	r5, r0
 8018aac:	6878      	ldr	r0, [r7, #4]
 8018aae:	f7f0 fb92 	bl	80091d6 <_ZSt12__niter_baseIP6SymbolET_S2_>
 8018ab2:	4602      	mov	r2, r0
 8018ab4:	683b      	ldr	r3, [r7, #0]
 8018ab6:	4629      	mov	r1, r5
 8018ab8:	4620      	mov	r0, r4
 8018aba:	f000 f805 	bl	8018ac8 <_ZSt14__relocate_a_1IP6SymbolS1_SaIS0_EET0_T_S4_S3_RT1_>
 8018abe:	4603      	mov	r3, r0
    }
 8018ac0:	4618      	mov	r0, r3
 8018ac2:	3710      	adds	r7, #16
 8018ac4:	46bd      	mov	sp, r7
 8018ac6:	bdb0      	pop	{r4, r5, r7, pc}

08018ac8 <_ZSt14__relocate_a_1IP6SymbolS1_SaIS0_EET0_T_S4_S3_RT1_>:
    __relocate_a_1(_InputIterator __first, _InputIterator __last,
 8018ac8:	b590      	push	{r4, r7, lr}
 8018aca:	b087      	sub	sp, #28
 8018acc:	af00      	add	r7, sp, #0
 8018ace:	60f8      	str	r0, [r7, #12]
 8018ad0:	60b9      	str	r1, [r7, #8]
 8018ad2:	607a      	str	r2, [r7, #4]
 8018ad4:	603b      	str	r3, [r7, #0]
      _ForwardIterator __cur = __result;
 8018ad6:	687b      	ldr	r3, [r7, #4]
 8018ad8:	617b      	str	r3, [r7, #20]
      for (; __first != __last; ++__first, (void)++__cur)
 8018ada:	68fa      	ldr	r2, [r7, #12]
 8018adc:	68bb      	ldr	r3, [r7, #8]
 8018ade:	429a      	cmp	r2, r3
 8018ae0:	d013      	beq.n	8018b0a <_ZSt14__relocate_a_1IP6SymbolS1_SaIS0_EET0_T_S4_S3_RT1_+0x42>
	std::__relocate_object_a(std::__addressof(*__cur),
 8018ae2:	6978      	ldr	r0, [r7, #20]
 8018ae4:	f7f0 fd59 	bl	800959a <_ZSt11__addressofI6SymbolEPT_RS1_>
 8018ae8:	4604      	mov	r4, r0
 8018aea:	68f8      	ldr	r0, [r7, #12]
 8018aec:	f7f0 fd55 	bl	800959a <_ZSt11__addressofI6SymbolEPT_RS1_>
 8018af0:	4603      	mov	r3, r0
 8018af2:	683a      	ldr	r2, [r7, #0]
 8018af4:	4619      	mov	r1, r3
 8018af6:	4620      	mov	r0, r4
 8018af8:	f000 f80c 	bl	8018b14 <_ZSt19__relocate_object_aI6SymbolS0_SaIS0_EEvPT_PT0_RT1_>
      for (; __first != __last; ++__first, (void)++__cur)
 8018afc:	68fb      	ldr	r3, [r7, #12]
 8018afe:	3320      	adds	r3, #32
 8018b00:	60fb      	str	r3, [r7, #12]
 8018b02:	697b      	ldr	r3, [r7, #20]
 8018b04:	3320      	adds	r3, #32
 8018b06:	617b      	str	r3, [r7, #20]
 8018b08:	e7e7      	b.n	8018ada <_ZSt14__relocate_a_1IP6SymbolS1_SaIS0_EET0_T_S4_S3_RT1_+0x12>
      return __cur;
 8018b0a:	697b      	ldr	r3, [r7, #20]
    }
 8018b0c:	4618      	mov	r0, r3
 8018b0e:	371c      	adds	r7, #28
 8018b10:	46bd      	mov	sp, r7
 8018b12:	bd90      	pop	{r4, r7, pc}

08018b14 <_ZSt19__relocate_object_aI6SymbolS0_SaIS0_EEvPT_PT0_RT1_>:
    __relocate_object_a(_Tp* __dest, _Up* __orig, _Allocator& __alloc)
 8018b14:	b580      	push	{r7, lr}
 8018b16:	b084      	sub	sp, #16
 8018b18:	af00      	add	r7, sp, #0
 8018b1a:	60f8      	str	r0, [r7, #12]
 8018b1c:	60b9      	str	r1, [r7, #8]
 8018b1e:	607a      	str	r2, [r7, #4]
      __traits::construct(__alloc, __dest, std::move(*__orig));
 8018b20:	68b8      	ldr	r0, [r7, #8]
 8018b22:	f000 f812 	bl	8018b4a <_ZSt4moveIR6SymbolEONSt16remove_referenceIT_E4typeEOS3_>
 8018b26:	4603      	mov	r3, r0
 8018b28:	461a      	mov	r2, r3
 8018b2a:	68f9      	ldr	r1, [r7, #12]
 8018b2c:	6878      	ldr	r0, [r7, #4]
 8018b2e:	f000 f817 	bl	8018b60 <_ZNSt16allocator_traitsISaI6SymbolEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_>
      __traits::destroy(__alloc, std::__addressof(*__orig));
 8018b32:	68b8      	ldr	r0, [r7, #8]
 8018b34:	f7f0 fd31 	bl	800959a <_ZSt11__addressofI6SymbolEPT_RS1_>
 8018b38:	4603      	mov	r3, r0
 8018b3a:	4619      	mov	r1, r3
 8018b3c:	6878      	ldr	r0, [r7, #4]
 8018b3e:	f000 f822 	bl	8018b86 <_ZNSt16allocator_traitsISaI6SymbolEE7destroyIS0_EEvRS1_PT_>
    }
 8018b42:	bf00      	nop
 8018b44:	3710      	adds	r7, #16
 8018b46:	46bd      	mov	sp, r7
 8018b48:	bd80      	pop	{r7, pc}

08018b4a <_ZSt4moveIR6SymbolEONSt16remove_referenceIT_E4typeEOS3_>:
    move(_Tp&& __t) noexcept
 8018b4a:	b480      	push	{r7}
 8018b4c:	b083      	sub	sp, #12
 8018b4e:	af00      	add	r7, sp, #0
 8018b50:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 8018b52:	687b      	ldr	r3, [r7, #4]
 8018b54:	4618      	mov	r0, r3
 8018b56:	370c      	adds	r7, #12
 8018b58:	46bd      	mov	sp, r7
 8018b5a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8018b5e:	4770      	bx	lr

08018b60 <_ZNSt16allocator_traitsISaI6SymbolEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 8018b60:	b580      	push	{r7, lr}
 8018b62:	b084      	sub	sp, #16
 8018b64:	af00      	add	r7, sp, #0
 8018b66:	60f8      	str	r0, [r7, #12]
 8018b68:	60b9      	str	r1, [r7, #8]
 8018b6a:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 8018b6c:	6878      	ldr	r0, [r7, #4]
 8018b6e:	f000 f817 	bl	8018ba0 <_ZSt7forwardI6SymbolEOT_RNSt16remove_referenceIS1_E4typeE>
 8018b72:	4603      	mov	r3, r0
 8018b74:	461a      	mov	r2, r3
 8018b76:	68b9      	ldr	r1, [r7, #8]
 8018b78:	68f8      	ldr	r0, [r7, #12]
 8018b7a:	f000 f81c 	bl	8018bb6 <_ZN9__gnu_cxx13new_allocatorI6SymbolE9constructIS1_JS1_EEEvPT_DpOT0_>
 8018b7e:	bf00      	nop
 8018b80:	3710      	adds	r7, #16
 8018b82:	46bd      	mov	sp, r7
 8018b84:	bd80      	pop	{r7, pc}

08018b86 <_ZNSt16allocator_traitsISaI6SymbolEE7destroyIS0_EEvRS1_PT_>:
	destroy(allocator_type& __a, _Up* __p)
 8018b86:	b580      	push	{r7, lr}
 8018b88:	b082      	sub	sp, #8
 8018b8a:	af00      	add	r7, sp, #0
 8018b8c:	6078      	str	r0, [r7, #4]
 8018b8e:	6039      	str	r1, [r7, #0]
	{ __a.destroy(__p); }
 8018b90:	6839      	ldr	r1, [r7, #0]
 8018b92:	6878      	ldr	r0, [r7, #4]
 8018b94:	f000 f827 	bl	8018be6 <_ZN9__gnu_cxx13new_allocatorI6SymbolE7destroyIS1_EEvPT_>
 8018b98:	bf00      	nop
 8018b9a:	3708      	adds	r7, #8
 8018b9c:	46bd      	mov	sp, r7
 8018b9e:	bd80      	pop	{r7, pc}

08018ba0 <_ZSt7forwardI6SymbolEOT_RNSt16remove_referenceIS1_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8018ba0:	b480      	push	{r7}
 8018ba2:	b083      	sub	sp, #12
 8018ba4:	af00      	add	r7, sp, #0
 8018ba6:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8018ba8:	687b      	ldr	r3, [r7, #4]
 8018baa:	4618      	mov	r0, r3
 8018bac:	370c      	adds	r7, #12
 8018bae:	46bd      	mov	sp, r7
 8018bb0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8018bb4:	4770      	bx	lr

08018bb6 <_ZN9__gnu_cxx13new_allocatorI6SymbolE9constructIS1_JS1_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 8018bb6:	b590      	push	{r4, r7, lr}
 8018bb8:	b085      	sub	sp, #20
 8018bba:	af00      	add	r7, sp, #0
 8018bbc:	60f8      	str	r0, [r7, #12]
 8018bbe:	60b9      	str	r1, [r7, #8]
 8018bc0:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 8018bc2:	6878      	ldr	r0, [r7, #4]
 8018bc4:	f7ff ffec 	bl	8018ba0 <_ZSt7forwardI6SymbolEOT_RNSt16remove_referenceIS1_E4typeE>
 8018bc8:	4604      	mov	r4, r0
 8018bca:	68bb      	ldr	r3, [r7, #8]
 8018bcc:	4619      	mov	r1, r3
 8018bce:	2020      	movs	r0, #32
 8018bd0:	f7e8 fa43 	bl	800105a <_ZnwjPv>
 8018bd4:	4603      	mov	r3, r0
 8018bd6:	4621      	mov	r1, r4
 8018bd8:	4618      	mov	r0, r3
 8018bda:	f7f3 faf7 	bl	800c1cc <_ZN6SymbolC1EOS_>
 8018bde:	bf00      	nop
 8018be0:	3714      	adds	r7, #20
 8018be2:	46bd      	mov	sp, r7
 8018be4:	bd90      	pop	{r4, r7, pc}

08018be6 <_ZN9__gnu_cxx13new_allocatorI6SymbolE7destroyIS1_EEvPT_>:
	destroy(_Up* __p)
 8018be6:	b580      	push	{r7, lr}
 8018be8:	b082      	sub	sp, #8
 8018bea:	af00      	add	r7, sp, #0
 8018bec:	6078      	str	r0, [r7, #4]
 8018bee:	6039      	str	r1, [r7, #0]
	{ __p->~_Up(); }
 8018bf0:	6838      	ldr	r0, [r7, #0]
 8018bf2:	f7e8 fbd3 	bl	800139c <_ZN6SymbolD1Ev>
 8018bf6:	bf00      	nop
 8018bf8:	3708      	adds	r7, #8
 8018bfa:	46bd      	mov	sp, r7
 8018bfc:	bd80      	pop	{r7, pc}
	...

08018c00 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
#include "Executor.h"

extern UART_HandleTypeDef huart1;

void Transmitter::report_error(std::string message)
{
 8018c00:	b590      	push	{r4, r7, lr}
 8018c02:	b0b3      	sub	sp, #204	; 0xcc
 8018c04:	af00      	add	r7, sp, #0
 8018c06:	6078      	str	r0, [r7, #4]
	std::string line = std::to_string(Position_counter::get_instance().get_line());
 8018c08:	f7fd fe3a 	bl	8016880 <_ZN16Position_counter12get_instanceEv>
 8018c0c:	4603      	mov	r3, r0
 8018c0e:	4618      	mov	r0, r3
 8018c10:	f7fd fe82 	bl	8016918 <_ZN16Position_counter8get_lineEv>
 8018c14:	4602      	mov	r2, r0
 8018c16:	f107 0338 	add.w	r3, r7, #56	; 0x38
 8018c1a:	4611      	mov	r1, r2
 8018c1c:	4618      	mov	r0, r3
 8018c1e:	f7f9 f8cf 	bl	8011dc0 <_ZNSt7__cxx119to_stringEi>
	std::string position = std::to_string(Position_counter::get_instance().get_position());
 8018c22:	f7fd fe2d 	bl	8016880 <_ZN16Position_counter12get_instanceEv>
 8018c26:	4603      	mov	r3, r0
 8018c28:	4618      	mov	r0, r3
 8018c2a:	f7fd fe89 	bl	8016940 <_ZN16Position_counter12get_positionEv>
 8018c2e:	4602      	mov	r2, r0
 8018c30:	f107 0320 	add.w	r3, r7, #32
 8018c34:	4611      	mov	r1, r2
 8018c36:	4618      	mov	r0, r3
 8018c38:	f7f9 f8c2 	bl	8011dc0 <_ZNSt7__cxx119to_stringEi>

	std::string full_message = "$" + message + " in line: " + line
 8018c3c:	f107 03b0 	add.w	r3, r7, #176	; 0xb0
 8018c40:	687a      	ldr	r2, [r7, #4]
 8018c42:	492f      	ldr	r1, [pc, #188]	; (8018d00 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x100>)
 8018c44:	4618      	mov	r0, r3
 8018c46:	f7f5 fb38 	bl	800e2ba <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>
 8018c4a:	f107 0398 	add.w	r3, r7, #152	; 0x98
 8018c4e:	f107 01b0 	add.w	r1, r7, #176	; 0xb0
 8018c52:	4a2c      	ldr	r2, [pc, #176]	; (8018d04 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x104>)
 8018c54:	4618      	mov	r0, r3
 8018c56:	f7f5 fb55 	bl	800e304 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_>
 8018c5a:	f107 0380 	add.w	r3, r7, #128	; 0x80
 8018c5e:	f107 0238 	add.w	r2, r7, #56	; 0x38
 8018c62:	f107 0198 	add.w	r1, r7, #152	; 0x98
 8018c66:	4618      	mov	r0, r3
 8018c68:	f000 f8e6 	bl	8018e38 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_>
			+ " in position: " + position + "\n";
 8018c6c:	f107 0368 	add.w	r3, r7, #104	; 0x68
 8018c70:	f107 0180 	add.w	r1, r7, #128	; 0x80
 8018c74:	4a24      	ldr	r2, [pc, #144]	; (8018d08 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x108>)
 8018c76:	4618      	mov	r0, r3
 8018c78:	f7f5 fb44 	bl	800e304 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_>
 8018c7c:	f107 0350 	add.w	r3, r7, #80	; 0x50
 8018c80:	f107 0220 	add.w	r2, r7, #32
 8018c84:	f107 0168 	add.w	r1, r7, #104	; 0x68
 8018c88:	4618      	mov	r0, r3
 8018c8a:	f000 f8d5 	bl	8018e38 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_>
 8018c8e:	f107 0308 	add.w	r3, r7, #8
 8018c92:	f107 0150 	add.w	r1, r7, #80	; 0x50
 8018c96:	4a1d      	ldr	r2, [pc, #116]	; (8018d0c <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x10c>)
 8018c98:	4618      	mov	r0, r3
 8018c9a:	f7f5 fb33 	bl	800e304 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_>
 8018c9e:	f107 0350 	add.w	r3, r7, #80	; 0x50
 8018ca2:	4618      	mov	r0, r3
 8018ca4:	f00a fec9 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8018ca8:	f107 0368 	add.w	r3, r7, #104	; 0x68
 8018cac:	4618      	mov	r0, r3
 8018cae:	f00a fec4 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	std::string full_message = "$" + message + " in line: " + line
 8018cb2:	f107 0380 	add.w	r3, r7, #128	; 0x80
 8018cb6:	4618      	mov	r0, r3
 8018cb8:	f00a febf 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8018cbc:	f107 0398 	add.w	r3, r7, #152	; 0x98
 8018cc0:	4618      	mov	r0, r3
 8018cc2:	f00a feba 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8018cc6:	f107 03b0 	add.w	r3, r7, #176	; 0xb0
 8018cca:	4618      	mov	r0, r3
 8018ccc:	f00a feb5 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>

	while (1)
	{
		HAL_UART_Transmit(&huart1, (uint8_t*) full_message.c_str(),
 8018cd0:	f107 0308 	add.w	r3, r7, #8
 8018cd4:	4618      	mov	r0, r3
 8018cd6:	f00b f859 	bl	8023d8c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
 8018cda:	4604      	mov	r4, r0
				full_message.length(), 100);
 8018cdc:	f107 0308 	add.w	r3, r7, #8
 8018ce0:	4618      	mov	r0, r3
 8018ce2:	f00a fee0 	bl	8023aa6 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
 8018ce6:	4603      	mov	r3, r0
		HAL_UART_Transmit(&huart1, (uint8_t*) full_message.c_str(),
 8018ce8:	b29a      	uxth	r2, r3
 8018cea:	2364      	movs	r3, #100	; 0x64
 8018cec:	4621      	mov	r1, r4
 8018cee:	4808      	ldr	r0, [pc, #32]	; (8018d10 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x110>)
 8018cf0:	f009 fad4 	bl	802229c <HAL_UART_Transmit>
		HAL_Delay(5000);
 8018cf4:	f241 3088 	movw	r0, #5000	; 0x1388
 8018cf8:	f007 fe54 	bl	80209a4 <HAL_Delay>
		HAL_UART_Transmit(&huart1, (uint8_t*) full_message.c_str(),
 8018cfc:	e7e8      	b.n	8018cd0 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd0>
 8018cfe:	bf00      	nop
 8018d00:	08029da8 	.word	0x08029da8
 8018d04:	08029dac 	.word	0x08029dac
 8018d08:	08029db8 	.word	0x08029db8
 8018d0c:	08029dc8 	.word	0x08029dc8
 8018d10:	20000678 	.word	0x20000678

08018d14 <__tcf_0>:
	}
}

void Transmitter::send_string(std::string message)
{
	static std::string res;
 8018d14:	b580      	push	{r7, lr}
 8018d16:	af00      	add	r7, sp, #0
 8018d18:	4801      	ldr	r0, [pc, #4]	; (8018d20 <__tcf_0+0xc>)
 8018d1a:	f00a fe8e 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8018d1e:	bd80      	pop	{r7, pc}
 8018d20:	20000534 	.word	0x20000534

08018d24 <_ZN11Transmitter11send_stringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
{
 8018d24:	b590      	push	{r4, r7, lr}
 8018d26:	b083      	sub	sp, #12
 8018d28:	af00      	add	r7, sp, #0
 8018d2a:	6078      	str	r0, [r7, #4]
	static std::string res;
 8018d2c:	4b1b      	ldr	r3, [pc, #108]	; (8018d9c <_ZN11Transmitter11send_stringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x78>)
 8018d2e:	781b      	ldrb	r3, [r3, #0]
 8018d30:	f3bf 8f5b 	dmb	ish
 8018d34:	b2db      	uxtb	r3, r3
 8018d36:	f003 0301 	and.w	r3, r3, #1
 8018d3a:	2b00      	cmp	r3, #0
 8018d3c:	bf0c      	ite	eq
 8018d3e:	2301      	moveq	r3, #1
 8018d40:	2300      	movne	r3, #0
 8018d42:	b2db      	uxtb	r3, r3
 8018d44:	2b00      	cmp	r3, #0
 8018d46:	d013      	beq.n	8018d70 <_ZN11Transmitter11send_stringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x4c>
 8018d48:	4814      	ldr	r0, [pc, #80]	; (8018d9c <_ZN11Transmitter11send_stringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x78>)
 8018d4a:	f00a fbc5 	bl	80234d8 <__cxa_guard_acquire>
 8018d4e:	4603      	mov	r3, r0
 8018d50:	2b00      	cmp	r3, #0
 8018d52:	bf14      	ite	ne
 8018d54:	2301      	movne	r3, #1
 8018d56:	2300      	moveq	r3, #0
 8018d58:	b2db      	uxtb	r3, r3
 8018d5a:	2b00      	cmp	r3, #0
 8018d5c:	d008      	beq.n	8018d70 <_ZN11Transmitter11send_stringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x4c>
 8018d5e:	4810      	ldr	r0, [pc, #64]	; (8018da0 <_ZN11Transmitter11send_stringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x7c>)
 8018d60:	f00a fe4a 	bl	80239f8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>
 8018d64:	480d      	ldr	r0, [pc, #52]	; (8018d9c <_ZN11Transmitter11send_stringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x78>)
 8018d66:	f00a fbc3 	bl	80234f0 <__cxa_guard_release>
 8018d6a:	480e      	ldr	r0, [pc, #56]	; (8018da4 <_ZN11Transmitter11send_stringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x80>)
 8018d6c:	f00c f809 	bl	8024d82 <atexit>
    res = message;
 8018d70:	6879      	ldr	r1, [r7, #4]
 8018d72:	480b      	ldr	r0, [pc, #44]	; (8018da0 <_ZN11Transmitter11send_stringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x7c>)
 8018d74:	f00a fe67 	bl	8023a46 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_>
	HAL_UART_Transmit(&huart1, (uint8_t*)res.c_str(), res.length(), 100);
 8018d78:	4809      	ldr	r0, [pc, #36]	; (8018da0 <_ZN11Transmitter11send_stringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x7c>)
 8018d7a:	f00b f807 	bl	8023d8c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
 8018d7e:	4604      	mov	r4, r0
 8018d80:	4807      	ldr	r0, [pc, #28]	; (8018da0 <_ZN11Transmitter11send_stringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x7c>)
 8018d82:	f00a fe90 	bl	8023aa6 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
 8018d86:	4603      	mov	r3, r0
 8018d88:	b29a      	uxth	r2, r3
 8018d8a:	2364      	movs	r3, #100	; 0x64
 8018d8c:	4621      	mov	r1, r4
 8018d8e:	4806      	ldr	r0, [pc, #24]	; (8018da8 <_ZN11Transmitter11send_stringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x84>)
 8018d90:	f009 fa84 	bl	802229c <HAL_UART_Transmit>
}
 8018d94:	bf00      	nop
 8018d96:	370c      	adds	r7, #12
 8018d98:	46bd      	mov	sp, r7
 8018d9a:	bd90      	pop	{r4, r7, pc}
 8018d9c:	2000054c 	.word	0x2000054c
 8018da0:	20000534 	.word	0x20000534
 8018da4:	08018d15 	.word	0x08018d15
 8018da8:	20000678 	.word	0x20000678

08018dac <_ZN11Transmitter15start_listeningEv>:

static uint8_t rx_buffer;

void Transmitter::start_listening()
{
 8018dac:	b580      	push	{r7, lr}
 8018dae:	af00      	add	r7, sp, #0
	HAL_UART_Receive_IT(&huart1, &rx_buffer, 1);
 8018db0:	2201      	movs	r2, #1
 8018db2:	4903      	ldr	r1, [pc, #12]	; (8018dc0 <_ZN11Transmitter15start_listeningEv+0x14>)
 8018db4:	4803      	ldr	r0, [pc, #12]	; (8018dc4 <_ZN11Transmitter15start_listeningEv+0x18>)
 8018db6:	f009 fbd4 	bl	8022562 <HAL_UART_Receive_IT>
}
 8018dba:	bf00      	nop
 8018dbc:	bd80      	pop	{r7, pc}
 8018dbe:	bf00      	nop
 8018dc0:	20000550 	.word	0x20000550
 8018dc4:	20000678 	.word	0x20000678

08018dc8 <_ZN11Transmitter17receive_code_charEv>:

char Transmitter::receive_code_char()
{
 8018dc8:	b580      	push	{r7, lr}
 8018dca:	af00      	add	r7, sp, #0
    static uint8_t tx_buffer = 'c';
	HAL_UART_Transmit(&huart1, &tx_buffer, 1, 100);
 8018dcc:	2364      	movs	r3, #100	; 0x64
 8018dce:	2201      	movs	r2, #1
 8018dd0:	490b      	ldr	r1, [pc, #44]	; (8018e00 <_ZN11Transmitter17receive_code_charEv+0x38>)
 8018dd2:	480c      	ldr	r0, [pc, #48]	; (8018e04 <_ZN11Transmitter17receive_code_charEv+0x3c>)
 8018dd4:	f009 fa62 	bl	802229c <HAL_UART_Transmit>
	HAL_UART_Receive(&huart1, &rx_buffer, 1, -1);
 8018dd8:	f04f 33ff 	mov.w	r3, #4294967295
 8018ddc:	2201      	movs	r2, #1
 8018dde:	490a      	ldr	r1, [pc, #40]	; (8018e08 <_ZN11Transmitter17receive_code_charEv+0x40>)
 8018de0:	4808      	ldr	r0, [pc, #32]	; (8018e04 <_ZN11Transmitter17receive_code_charEv+0x3c>)
 8018de2:	f009 faee 	bl	80223c2 <HAL_UART_Receive>

	Position_counter::get_instance().update_position(rx_buffer);
 8018de6:	f7fd fd4b 	bl	8016880 <_ZN16Position_counter12get_instanceEv>
 8018dea:	4602      	mov	r2, r0
 8018dec:	4b06      	ldr	r3, [pc, #24]	; (8018e08 <_ZN11Transmitter17receive_code_charEv+0x40>)
 8018dee:	781b      	ldrb	r3, [r3, #0]
 8018df0:	4619      	mov	r1, r3
 8018df2:	4610      	mov	r0, r2
 8018df4:	f7fd fd6c 	bl	80168d0 <_ZN16Position_counter15update_positionEh>

	return rx_buffer;
 8018df8:	4b03      	ldr	r3, [pc, #12]	; (8018e08 <_ZN11Transmitter17receive_code_charEv+0x40>)
 8018dfa:	781b      	ldrb	r3, [r3, #0]
}
 8018dfc:	4618      	mov	r0, r3
 8018dfe:	bd80      	pop	{r7, pc}
 8018e00:	20000000 	.word	0x20000000
 8018e04:	20000678 	.word	0x20000678
 8018e08:	20000550 	.word	0x20000550

08018e0c <HAL_UART_RxCpltCallback>:

void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
{
 8018e0c:	b580      	push	{r7, lr}
 8018e0e:	b082      	sub	sp, #8
 8018e10:	af00      	add	r7, sp, #0
 8018e12:	6078      	str	r0, [r7, #4]
	switch (rx_buffer)
 8018e14:	4b07      	ldr	r3, [pc, #28]	; (8018e34 <HAL_UART_RxCpltCallback+0x28>)
 8018e16:	781b      	ldrb	r3, [r3, #0]
 8018e18:	2b65      	cmp	r3, #101	; 0x65
 8018e1a:	d106      	bne.n	8018e2a <HAL_UART_RxCpltCallback+0x1e>
	{
	case 'e':
		Executor::get_instance().abort();
 8018e1c:	f7e8 fa48 	bl	80012b0 <_ZN8Executor12get_instanceEv>
 8018e20:	4603      	mov	r3, r0
 8018e22:	4618      	mov	r0, r3
 8018e24:	f7e8 feda 	bl	8001bdc <_ZN8Executor5abortEv>
		break;
 8018e28:	e000      	b.n	8018e2c <HAL_UART_RxCpltCallback+0x20>
	default:
		break;
 8018e2a:	bf00      	nop
	}
}
 8018e2c:	bf00      	nop
 8018e2e:	3708      	adds	r7, #8
 8018e30:	46bd      	mov	sp, r7
 8018e32:	bd80      	pop	{r7, pc}
 8018e34:	20000550 	.word	0x20000550

08018e38 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_>:
    operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
 8018e38:	b580      	push	{r7, lr}
 8018e3a:	b084      	sub	sp, #16
 8018e3c:	af00      	add	r7, sp, #0
 8018e3e:	60f8      	str	r0, [r7, #12]
 8018e40:	60b9      	str	r1, [r7, #8]
 8018e42:	607a      	str	r2, [r7, #4]
    { return std::move(__lhs.append(__rhs)); }
 8018e44:	6879      	ldr	r1, [r7, #4]
 8018e46:	68b8      	ldr	r0, [r7, #8]
 8018e48:	f00a ff6c 	bl	8023d24 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_>
 8018e4c:	4603      	mov	r3, r0
 8018e4e:	4618      	mov	r0, r3
 8018e50:	f7ee f9bd 	bl	80071ce <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
 8018e54:	4603      	mov	r3, r0
 8018e56:	4619      	mov	r1, r3
 8018e58:	68f8      	ldr	r0, [r7, #12]
 8018e5a:	f00a fdd4 	bl	8023a06 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_>
 8018e5e:	68f8      	ldr	r0, [r7, #12]
 8018e60:	3710      	adds	r7, #16
 8018e62:	46bd      	mov	sp, r7
 8018e64:	bd80      	pop	{r7, pc}
	...

08018e68 <_Z41__static_initialization_and_destruction_0ii>:
 8018e68:	b590      	push	{r4, r7, lr}
 8018e6a:	b0e7      	sub	sp, #412	; 0x19c
 8018e6c:	af02      	add	r7, sp, #8
 8018e6e:	1d3b      	adds	r3, r7, #4
 8018e70:	6018      	str	r0, [r3, #0]
 8018e72:	463b      	mov	r3, r7
 8018e74:	6019      	str	r1, [r3, #0]
 8018e76:	1d3b      	adds	r3, r7, #4
 8018e78:	681b      	ldr	r3, [r3, #0]
 8018e7a:	2b01      	cmp	r3, #1
 8018e7c:	f040 819d 	bne.w	80191ba <_Z41__static_initialization_and_destruction_0ii+0x352>
 8018e80:	463b      	mov	r3, r7
 8018e82:	681b      	ldr	r3, [r3, #0]
 8018e84:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8018e88:	4293      	cmp	r3, r2
 8018e8a:	f040 8196 	bne.w	80191ba <_Z41__static_initialization_and_destruction_0ii+0x352>
};
 8018e8e:	f107 0314 	add.w	r3, r7, #20
 8018e92:	4618      	mov	r0, r3
 8018e94:	2322      	movs	r3, #34	; 0x22
 8018e96:	461a      	mov	r2, r3
 8018e98:	2100      	movs	r1, #0
 8018e9a:	f00c f801 	bl	8024ea0 <memset>
 8018e9e:	f107 0314 	add.w	r3, r7, #20
 8018ea2:	223a      	movs	r2, #58	; 0x3a
 8018ea4:	701a      	strb	r2, [r3, #0]
 8018ea6:	f107 0314 	add.w	r3, r7, #20
 8018eaa:	2201      	movs	r2, #1
 8018eac:	705a      	strb	r2, [r3, #1]
 8018eae:	f107 0314 	add.w	r3, r7, #20
 8018eb2:	220a      	movs	r2, #10
 8018eb4:	709a      	strb	r2, [r3, #2]
 8018eb6:	f107 0314 	add.w	r3, r7, #20
 8018eba:	220a      	movs	r2, #10
 8018ebc:	70da      	strb	r2, [r3, #3]
 8018ebe:	f107 0314 	add.w	r3, r7, #20
 8018ec2:	222c      	movs	r2, #44	; 0x2c
 8018ec4:	711a      	strb	r2, [r3, #4]
 8018ec6:	f107 0314 	add.w	r3, r7, #20
 8018eca:	220c      	movs	r2, #12
 8018ecc:	715a      	strb	r2, [r3, #5]
 8018ece:	f107 0314 	add.w	r3, r7, #20
 8018ed2:	222e      	movs	r2, #46	; 0x2e
 8018ed4:	719a      	strb	r2, [r3, #6]
 8018ed6:	f107 0314 	add.w	r3, r7, #20
 8018eda:	220b      	movs	r2, #11
 8018edc:	71da      	strb	r2, [r3, #7]
 8018ede:	f107 0314 	add.w	r3, r7, #20
 8018ee2:	225b      	movs	r2, #91	; 0x5b
 8018ee4:	721a      	strb	r2, [r3, #8]
 8018ee6:	f107 0314 	add.w	r3, r7, #20
 8018eea:	220d      	movs	r2, #13
 8018eec:	725a      	strb	r2, [r3, #9]
 8018eee:	f107 0314 	add.w	r3, r7, #20
 8018ef2:	225d      	movs	r2, #93	; 0x5d
 8018ef4:	729a      	strb	r2, [r3, #10]
 8018ef6:	f107 0314 	add.w	r3, r7, #20
 8018efa:	220e      	movs	r2, #14
 8018efc:	72da      	strb	r2, [r3, #11]
 8018efe:	f107 0314 	add.w	r3, r7, #20
 8018f02:	227c      	movs	r2, #124	; 0x7c
 8018f04:	731a      	strb	r2, [r3, #12]
 8018f06:	f107 0314 	add.w	r3, r7, #20
 8018f0a:	2215      	movs	r2, #21
 8018f0c:	735a      	strb	r2, [r3, #13]
 8018f0e:	f107 0314 	add.w	r3, r7, #20
 8018f12:	2226      	movs	r2, #38	; 0x26
 8018f14:	739a      	strb	r2, [r3, #14]
 8018f16:	f107 0314 	add.w	r3, r7, #20
 8018f1a:	2216      	movs	r2, #22
 8018f1c:	73da      	strb	r2, [r3, #15]
 8018f1e:	f107 0314 	add.w	r3, r7, #20
 8018f22:	222b      	movs	r2, #43	; 0x2b
 8018f24:	741a      	strb	r2, [r3, #16]
 8018f26:	f107 0314 	add.w	r3, r7, #20
 8018f2a:	221f      	movs	r2, #31
 8018f2c:	745a      	strb	r2, [r3, #17]
 8018f2e:	f107 0314 	add.w	r3, r7, #20
 8018f32:	222d      	movs	r2, #45	; 0x2d
 8018f34:	749a      	strb	r2, [r3, #18]
 8018f36:	f107 0314 	add.w	r3, r7, #20
 8018f3a:	2220      	movs	r2, #32
 8018f3c:	74da      	strb	r2, [r3, #19]
 8018f3e:	f107 0314 	add.w	r3, r7, #20
 8018f42:	222a      	movs	r2, #42	; 0x2a
 8018f44:	751a      	strb	r2, [r3, #20]
 8018f46:	f107 0314 	add.w	r3, r7, #20
 8018f4a:	2221      	movs	r2, #33	; 0x21
 8018f4c:	755a      	strb	r2, [r3, #21]
 8018f4e:	f107 0314 	add.w	r3, r7, #20
 8018f52:	222f      	movs	r2, #47	; 0x2f
 8018f54:	759a      	strb	r2, [r3, #22]
 8018f56:	f107 0314 	add.w	r3, r7, #20
 8018f5a:	2222      	movs	r2, #34	; 0x22
 8018f5c:	75da      	strb	r2, [r3, #23]
 8018f5e:	f107 0314 	add.w	r3, r7, #20
 8018f62:	225e      	movs	r2, #94	; 0x5e
 8018f64:	761a      	strb	r2, [r3, #24]
 8018f66:	f107 0314 	add.w	r3, r7, #20
 8018f6a:	2223      	movs	r2, #35	; 0x23
 8018f6c:	765a      	strb	r2, [r3, #25]
 8018f6e:	f107 0314 	add.w	r3, r7, #20
 8018f72:	2225      	movs	r2, #37	; 0x25
 8018f74:	769a      	strb	r2, [r3, #26]
 8018f76:	f107 0314 	add.w	r3, r7, #20
 8018f7a:	2224      	movs	r2, #36	; 0x24
 8018f7c:	76da      	strb	r2, [r3, #27]
 8018f7e:	f107 0314 	add.w	r3, r7, #20
 8018f82:	2228      	movs	r2, #40	; 0x28
 8018f84:	771a      	strb	r2, [r3, #28]
 8018f86:	f107 0314 	add.w	r3, r7, #20
 8018f8a:	2226      	movs	r2, #38	; 0x26
 8018f8c:	775a      	strb	r2, [r3, #29]
 8018f8e:	f107 0314 	add.w	r3, r7, #20
 8018f92:	2229      	movs	r2, #41	; 0x29
 8018f94:	779a      	strb	r2, [r3, #30]
 8018f96:	f107 0314 	add.w	r3, r7, #20
 8018f9a:	2227      	movs	r2, #39	; 0x27
 8018f9c:	77da      	strb	r2, [r3, #31]
 8018f9e:	f107 0314 	add.w	r3, r7, #20
 8018fa2:	2225      	movs	r2, #37	; 0x25
 8018fa4:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8018fa8:	f107 030c 	add.w	r3, r7, #12
 8018fac:	f107 0214 	add.w	r2, r7, #20
 8018fb0:	601a      	str	r2, [r3, #0]
 8018fb2:	f107 030c 	add.w	r3, r7, #12
 8018fb6:	2211      	movs	r2, #17
 8018fb8:	605a      	str	r2, [r3, #4]
 8018fba:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8018fbe:	4618      	mov	r0, r3
 8018fc0:	f7e8 fe90 	bl	8001ce4 <_ZNSaISt4pairIKc10token_typeEEC1Ev>
 8018fc4:	f107 0138 	add.w	r1, r7, #56	; 0x38
 8018fc8:	f107 020c 	add.w	r2, r7, #12
 8018fcc:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8018fd0:	9300      	str	r3, [sp, #0]
 8018fd2:	460b      	mov	r3, r1
 8018fd4:	ca06      	ldmia	r2, {r1, r2}
 8018fd6:	4885      	ldr	r0, [pc, #532]	; (80191ec <_Z41__static_initialization_and_destruction_0ii+0x384>)
 8018fd8:	f7e8 fe9c 	bl	8001d14 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 8018fdc:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8018fe0:	4618      	mov	r0, r3
 8018fe2:	f7e8 fe8b 	bl	8001cfc <_ZNSaISt4pairIKc10token_typeEED1Ev>
	{"true", TOKEN_TRUE},
 8018fe6:	2305      	movs	r3, #5
 8018fe8:	f887 3162 	strb.w	r3, [r7, #354]	; 0x162
};
 8018fec:	f507 72b1 	add.w	r2, r7, #354	; 0x162
 8018ff0:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8018ff4:	497e      	ldr	r1, [pc, #504]	; (80191f0 <_Z41__static_initialization_and_destruction_0ii+0x388>)
 8018ff6:	4618      	mov	r0, r3
 8018ff8:	f7e8 f87e 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"false", TOKEN_FALSE},
 8018ffc:	2306      	movs	r3, #6
 8018ffe:	f887 3163 	strb.w	r3, [r7, #355]	; 0x163
};
 8019002:	f207 1263 	addw	r2, r7, #355	; 0x163
 8019006:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801900a:	331c      	adds	r3, #28
 801900c:	4979      	ldr	r1, [pc, #484]	; (80191f4 <_Z41__static_initialization_and_destruction_0ii+0x38c>)
 801900e:	4618      	mov	r0, r3
 8019010:	f7e8 f89a 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"setup", TOKEN_SETUP},
 8019014:	2307      	movs	r3, #7
 8019016:	f887 3164 	strb.w	r3, [r7, #356]	; 0x164
};
 801901a:	f507 72b2 	add.w	r2, r7, #356	; 0x164
 801901e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8019022:	3338      	adds	r3, #56	; 0x38
 8019024:	4974      	ldr	r1, [pc, #464]	; (80191f8 <_Z41__static_initialization_and_destruction_0ii+0x390>)
 8019026:	4618      	mov	r0, r3
 8019028:	f7e8 f88e 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"loop", TOKEN_LOOP},
 801902c:	2308      	movs	r3, #8
 801902e:	f887 3165 	strb.w	r3, [r7, #357]	; 0x165
};
 8019032:	f207 1265 	addw	r2, r7, #357	; 0x165
 8019036:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801903a:	3354      	adds	r3, #84	; 0x54
 801903c:	496f      	ldr	r1, [pc, #444]	; (80191fc <_Z41__static_initialization_and_destruction_0ii+0x394>)
 801903e:	4618      	mov	r0, r3
 8019040:	f7e8 f85a 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"finish", TOKEN_FINISH},
 8019044:	2309      	movs	r3, #9
 8019046:	f887 3166 	strb.w	r3, [r7, #358]	; 0x166
};
 801904a:	f507 72b3 	add.w	r2, r7, #358	; 0x166
 801904e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8019052:	3370      	adds	r3, #112	; 0x70
 8019054:	496a      	ldr	r1, [pc, #424]	; (8019200 <_Z41__static_initialization_and_destruction_0ii+0x398>)
 8019056:	4618      	mov	r0, r3
 8019058:	f7e8 f89e 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"if", TOKEN_IF},
 801905c:	2310      	movs	r3, #16
 801905e:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167
};
 8019062:	f207 1267 	addw	r2, r7, #359	; 0x167
 8019066:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801906a:	338c      	adds	r3, #140	; 0x8c
 801906c:	4965      	ldr	r1, [pc, #404]	; (8019204 <_Z41__static_initialization_and_destruction_0ii+0x39c>)
 801906e:	4618      	mov	r0, r3
 8019070:	f7e8 f8ba 	bl	80011e8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>
	{"elseif", TOKEN_ELSEIF},
 8019074:	2311      	movs	r3, #17
 8019076:	f887 3168 	strb.w	r3, [r7, #360]	; 0x168
};
 801907a:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 801907e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8019082:	33a8      	adds	r3, #168	; 0xa8
 8019084:	4960      	ldr	r1, [pc, #384]	; (8019208 <_Z41__static_initialization_and_destruction_0ii+0x3a0>)
 8019086:	4618      	mov	r0, r3
 8019088:	f7e8 f886 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"else", TOKEN_ELSE},
 801908c:	2312      	movs	r3, #18
 801908e:	f887 3169 	strb.w	r3, [r7, #361]	; 0x169
};
 8019092:	f207 1269 	addw	r2, r7, #361	; 0x169
 8019096:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801909a:	33c4      	adds	r3, #196	; 0xc4
 801909c:	495b      	ldr	r1, [pc, #364]	; (801920c <_Z41__static_initialization_and_destruction_0ii+0x3a4>)
 801909e:	4618      	mov	r0, r3
 80190a0:	f7e8 f82a 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"while", TOKEN_WHILE},
 80190a4:	2313      	movs	r3, #19
 80190a6:	f887 316a 	strb.w	r3, [r7, #362]	; 0x16a
};
 80190aa:	f507 72b5 	add.w	r2, r7, #362	; 0x16a
 80190ae:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80190b2:	33e0      	adds	r3, #224	; 0xe0
 80190b4:	4956      	ldr	r1, [pc, #344]	; (8019210 <_Z41__static_initialization_and_destruction_0ii+0x3a8>)
 80190b6:	4618      	mov	r0, r3
 80190b8:	f7e8 f846 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"end", TOKEN_END},
 80190bc:	2314      	movs	r3, #20
 80190be:	f887 316b 	strb.w	r3, [r7, #363]	; 0x16b
};
 80190c2:	f207 126b 	addw	r2, r7, #363	; 0x16b
 80190c6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80190ca:	33fc      	adds	r3, #252	; 0xfc
 80190cc:	4951      	ldr	r1, [pc, #324]	; (8019214 <_Z41__static_initialization_and_destruction_0ii+0x3ac>)
 80190ce:	4618      	mov	r0, r3
 80190d0:	f7e8 f8b2 	bl	8001238 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>
 80190d4:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80190d8:	f107 0248 	add.w	r2, r7, #72	; 0x48
 80190dc:	601a      	str	r2, [r3, #0]
 80190de:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80190e2:	220a      	movs	r2, #10
 80190e4:	605a      	str	r2, [r3, #4]
 80190e6:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 80190ea:	4618      	mov	r0, r3
 80190ec:	f7e8 fe9f 	bl	8001e2e <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 80190f0:	f507 71b6 	add.w	r1, r7, #364	; 0x16c
 80190f4:	f107 0240 	add.w	r2, r7, #64	; 0x40
 80190f8:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 80190fc:	9300      	str	r3, [sp, #0]
 80190fe:	460b      	mov	r3, r1
 8019100:	ca06      	ldmia	r2, {r1, r2}
 8019102:	4845      	ldr	r0, [pc, #276]	; (8019218 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 8019104:	f7e8 feab 	bl	8001e5e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>
 8019108:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 801910c:	4618      	mov	r0, r3
 801910e:	f7e8 fe9a 	bl	8001e46 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 8019112:	f107 0448 	add.w	r4, r7, #72	; 0x48
 8019116:	f504 748c 	add.w	r4, r4, #280	; 0x118
 801911a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801911e:	429c      	cmp	r4, r3
 8019120:	d004      	beq.n	801912c <_Z41__static_initialization_and_destruction_0ii+0x2c4>
 8019122:	3c1c      	subs	r4, #28
 8019124:	4620      	mov	r0, r4
 8019126:	f7e7 ffda 	bl	80010de <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 801912a:	e7f6      	b.n	801911a <_Z41__static_initialization_and_destruction_0ii+0x2b2>
};
 801912c:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 8019130:	2200      	movs	r2, #0
 8019132:	601a      	str	r2, [r3, #0]
 8019134:	605a      	str	r2, [r3, #4]
 8019136:	609a      	str	r2, [r3, #8]
 8019138:	233c      	movs	r3, #60	; 0x3c
 801913a:	f887 317c 	strb.w	r3, [r7, #380]	; 0x17c
 801913e:	231b      	movs	r3, #27
 8019140:	f887 317d 	strb.w	r3, [r7, #381]	; 0x17d
 8019144:	231c      	movs	r3, #28
 8019146:	f887 317e 	strb.w	r3, [r7, #382]	; 0x17e
 801914a:	233e      	movs	r3, #62	; 0x3e
 801914c:	f887 317f 	strb.w	r3, [r7, #383]	; 0x17f
 8019150:	2319      	movs	r3, #25
 8019152:	f887 3180 	strb.w	r3, [r7, #384]	; 0x180
 8019156:	231a      	movs	r3, #26
 8019158:	f887 3181 	strb.w	r3, [r7, #385]	; 0x181
 801915c:	233d      	movs	r3, #61	; 0x3d
 801915e:	f887 3182 	strb.w	r3, [r7, #386]	; 0x182
 8019162:	2318      	movs	r3, #24
 8019164:	f887 3183 	strb.w	r3, [r7, #387]	; 0x183
 8019168:	231d      	movs	r3, #29
 801916a:	f887 3184 	strb.w	r3, [r7, #388]	; 0x184
 801916e:	2321      	movs	r3, #33	; 0x21
 8019170:	f887 3185 	strb.w	r3, [r7, #389]	; 0x185
 8019174:	2317      	movs	r3, #23
 8019176:	f887 3186 	strb.w	r3, [r7, #390]	; 0x186
 801917a:	231e      	movs	r3, #30
 801917c:	f887 3187 	strb.w	r3, [r7, #391]	; 0x187
 8019180:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 8019184:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 8019188:	2304      	movs	r3, #4
 801918a:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 801918e:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 8019192:	4618      	mov	r0, r3
 8019194:	f7e8 fe93 	bl	8001ebe <_ZNSaISt4pairIKc12double_tokenEEC1Ev>
 8019198:	f507 72c4 	add.w	r2, r7, #392	; 0x188
 801919c:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 80191a0:	9300      	str	r3, [sp, #0]
 80191a2:	4613      	mov	r3, r2
 80191a4:	f507 72ba 	add.w	r2, r7, #372	; 0x174
 80191a8:	ca06      	ldmia	r2, {r1, r2}
 80191aa:	481c      	ldr	r0, [pc, #112]	; (801921c <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 80191ac:	f7e8 fe9f 	bl	8001eee <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 80191b0:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 80191b4:	4618      	mov	r0, r3
 80191b6:	f7e8 fe8e 	bl	8001ed6 <_ZNSaISt4pairIKc12double_tokenEED1Ev>
static const std::map<char, double_token> token_double_chars
 80191ba:	1d3b      	adds	r3, r7, #4
 80191bc:	681b      	ldr	r3, [r3, #0]
 80191be:	2b00      	cmp	r3, #0
 80191c0:	d10e      	bne.n	80191e0 <_Z41__static_initialization_and_destruction_0ii+0x378>
 80191c2:	463b      	mov	r3, r7
 80191c4:	681b      	ldr	r3, [r3, #0]
 80191c6:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80191ca:	4293      	cmp	r3, r2
 80191cc:	d108      	bne.n	80191e0 <_Z41__static_initialization_and_destruction_0ii+0x378>
 80191ce:	4813      	ldr	r0, [pc, #76]	; (801921c <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 80191d0:	f7f0 fb58 	bl	8009884 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>
static const std::map<std::string, token_type> token_strings
 80191d4:	4810      	ldr	r0, [pc, #64]	; (8019218 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 80191d6:	f7f0 fb62 	bl	800989e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
static const std::map<char, token_type> token_chars
 80191da:	4804      	ldr	r0, [pc, #16]	; (80191ec <_Z41__static_initialization_and_destruction_0ii+0x384>)
 80191dc:	f7f0 fb6c 	bl	80098b8 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>
 80191e0:	bf00      	nop
 80191e2:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 80191e6:	46bd      	mov	sp, r7
 80191e8:	bd90      	pop	{r4, r7, pc}
 80191ea:	bf00      	nop
 80191ec:	200004ec 	.word	0x200004ec
 80191f0:	08029df8 	.word	0x08029df8
 80191f4:	08029e00 	.word	0x08029e00
 80191f8:	08029e08 	.word	0x08029e08
 80191fc:	08029e10 	.word	0x08029e10
 8019200:	08029e18 	.word	0x08029e18
 8019204:	08029e20 	.word	0x08029e20
 8019208:	08029e24 	.word	0x08029e24
 801920c:	08029e2c 	.word	0x08029e2c
 8019210:	08029e34 	.word	0x08029e34
 8019214:	08029e3c 	.word	0x08029e3c
 8019218:	20000504 	.word	0x20000504
 801921c:	2000051c 	.word	0x2000051c

08019220 <_GLOBAL__sub_I__ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
 8019220:	b580      	push	{r7, lr}
 8019222:	af00      	add	r7, sp, #0
 8019224:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8019228:	2001      	movs	r0, #1
 801922a:	f7ff fe1d 	bl	8018e68 <_Z41__static_initialization_and_destruction_0ii>
 801922e:	bd80      	pop	{r7, pc}

08019230 <_GLOBAL__sub_D__ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
 8019230:	b580      	push	{r7, lr}
 8019232:	af00      	add	r7, sp, #0
 8019234:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8019238:	2000      	movs	r0, #0
 801923a:	f7ff fe15 	bl	8018e68 <_Z41__static_initialization_and_destruction_0ii>
 801923e:	bd80      	pop	{r7, pc}

08019240 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>:
      ~map() = default;
 8019240:	b580      	push	{r7, lr}
 8019242:	b082      	sub	sp, #8
 8019244:	af00      	add	r7, sp, #0
 8019246:	6078      	str	r0, [r7, #4]
 8019248:	687b      	ldr	r3, [r7, #4]
 801924a:	4618      	mov	r0, r3
 801924c:	f000 fa02 	bl	8019654 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EED1Ev>
 8019250:	687b      	ldr	r3, [r7, #4]
 8019252:	4618      	mov	r0, r3
 8019254:	3708      	adds	r7, #8
 8019256:	46bd      	mov	sp, r7
 8019258:	bd80      	pop	{r7, pc}

0801925a <_ZN16Variable_handlerD1Ev>:
#define ADD_ARG(x) Arg.insert({#x, {}});
#define ARG(x) Variable_handler::get_instance().get_arg(#x)
#define ADD_PAR(x) Par.insert({#x, {}});
#define PAR(x) Variable_handler::get_instance().get_par(#x)

class Variable_handler
 801925a:	b580      	push	{r7, lr}
 801925c:	b082      	sub	sp, #8
 801925e:	af00      	add	r7, sp, #0
 8019260:	6078      	str	r0, [r7, #4]
 8019262:	687b      	ldr	r3, [r7, #4]
 8019264:	3330      	adds	r3, #48	; 0x30
 8019266:	4618      	mov	r0, r3
 8019268:	f7ff ffea 	bl	8019240 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
 801926c:	687b      	ldr	r3, [r7, #4]
 801926e:	3318      	adds	r3, #24
 8019270:	4618      	mov	r0, r3
 8019272:	f7ff ffe5 	bl	8019240 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
 8019276:	687b      	ldr	r3, [r7, #4]
 8019278:	4618      	mov	r0, r3
 801927a:	f7ff ffe1 	bl	8019240 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
 801927e:	687b      	ldr	r3, [r7, #4]
 8019280:	4618      	mov	r0, r3
 8019282:	3708      	adds	r7, #8
 8019284:	46bd      	mov	sp, r7
 8019286:	bd80      	pop	{r7, pc}

08019288 <__tcf_0>:
#include <Variable_handler.h>

Variable_handler& Variable_handler::get_instance()
{
	static Variable_handler instance;
 8019288:	b580      	push	{r7, lr}
 801928a:	af00      	add	r7, sp, #0
 801928c:	4801      	ldr	r0, [pc, #4]	; (8019294 <__tcf_0+0xc>)
 801928e:	f7ff ffe4 	bl	801925a <_ZN16Variable_handlerD1Ev>
 8019292:	bd80      	pop	{r7, pc}
 8019294:	2000059c 	.word	0x2000059c

08019298 <_ZN16Variable_handler12get_instanceEv>:
{
 8019298:	b580      	push	{r7, lr}
 801929a:	af00      	add	r7, sp, #0
	static Variable_handler instance;
 801929c:	4b12      	ldr	r3, [pc, #72]	; (80192e8 <_ZN16Variable_handler12get_instanceEv+0x50>)
 801929e:	781b      	ldrb	r3, [r3, #0]
 80192a0:	f3bf 8f5b 	dmb	ish
 80192a4:	b2db      	uxtb	r3, r3
 80192a6:	f003 0301 	and.w	r3, r3, #1
 80192aa:	2b00      	cmp	r3, #0
 80192ac:	bf0c      	ite	eq
 80192ae:	2301      	moveq	r3, #1
 80192b0:	2300      	movne	r3, #0
 80192b2:	b2db      	uxtb	r3, r3
 80192b4:	2b00      	cmp	r3, #0
 80192b6:	d013      	beq.n	80192e0 <_ZN16Variable_handler12get_instanceEv+0x48>
 80192b8:	480b      	ldr	r0, [pc, #44]	; (80192e8 <_ZN16Variable_handler12get_instanceEv+0x50>)
 80192ba:	f00a f90d 	bl	80234d8 <__cxa_guard_acquire>
 80192be:	4603      	mov	r3, r0
 80192c0:	2b00      	cmp	r3, #0
 80192c2:	bf14      	ite	ne
 80192c4:	2301      	movne	r3, #1
 80192c6:	2300      	moveq	r3, #0
 80192c8:	b2db      	uxtb	r3, r3
 80192ca:	2b00      	cmp	r3, #0
 80192cc:	d008      	beq.n	80192e0 <_ZN16Variable_handler12get_instanceEv+0x48>
 80192ce:	4807      	ldr	r0, [pc, #28]	; (80192ec <_ZN16Variable_handler12get_instanceEv+0x54>)
 80192d0:	f006 faa8 	bl	801f824 <_ZN16Variable_handlerC1Ev>
 80192d4:	4804      	ldr	r0, [pc, #16]	; (80192e8 <_ZN16Variable_handler12get_instanceEv+0x50>)
 80192d6:	f00a f90b 	bl	80234f0 <__cxa_guard_release>
 80192da:	4805      	ldr	r0, [pc, #20]	; (80192f0 <_ZN16Variable_handler12get_instanceEv+0x58>)
 80192dc:	f00b fd51 	bl	8024d82 <atexit>
	return instance;
 80192e0:	4b02      	ldr	r3, [pc, #8]	; (80192ec <_ZN16Variable_handler12get_instanceEv+0x54>)
}
 80192e2:	4618      	mov	r0, r3
 80192e4:	bd80      	pop	{r7, pc}
 80192e6:	bf00      	nop
 80192e8:	200005e4 	.word	0x200005e4
 80192ec:	2000059c 	.word	0x2000059c
 80192f0:	08019289 	.word	0x08019289

080192f4 <_ZN16Variable_handler7get_argENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

Symbol& Variable_handler::get_arg(std::string name)
{
 80192f4:	b580      	push	{r7, lr}
 80192f6:	b090      	sub	sp, #64	; 0x40
 80192f8:	af00      	add	r7, sp, #0
 80192fa:	6078      	str	r0, [r7, #4]
 80192fc:	6039      	str	r1, [r7, #0]
	auto search = Arg.find(name);
 80192fe:	687b      	ldr	r3, [r7, #4]
 8019300:	3330      	adds	r3, #48	; 0x30
 8019302:	6839      	ldr	r1, [r7, #0]
 8019304:	4618      	mov	r0, r3
 8019306:	f000 f9ba 	bl	801967e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE4findERSA_>
 801930a:	4603      	mov	r3, r0
 801930c:	60bb      	str	r3, [r7, #8]
	if (search == Arg.end())
 801930e:	687b      	ldr	r3, [r7, #4]
 8019310:	3330      	adds	r3, #48	; 0x30
 8019312:	4618      	mov	r0, r3
 8019314:	f000 f9c2 	bl	801969c <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE3endEv>
 8019318:	4603      	mov	r3, r0
 801931a:	60fb      	str	r3, [r7, #12]
 801931c:	f107 020c 	add.w	r2, r7, #12
 8019320:	f107 0308 	add.w	r3, r7, #8
 8019324:	4611      	mov	r1, r2
 8019326:	4618      	mov	r0, r3
 8019328:	f000 f9c5 	bl	80196b6 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEESC_>
 801932c:	4603      	mov	r3, r0
 801932e:	2b00      	cmp	r3, #0
 8019330:	d01d      	beq.n	801936e <_ZN16Variable_handler7get_argENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x7a>
	{
		Transmitter::report_error(std::string("Arg " + name + " not found"));
 8019332:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8019336:	683a      	ldr	r2, [r7, #0]
 8019338:	4912      	ldr	r1, [pc, #72]	; (8019384 <_ZN16Variable_handler7get_argENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x90>)
 801933a:	4618      	mov	r0, r3
 801933c:	f7f4 ffbd 	bl	800e2ba <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>
 8019340:	f107 0310 	add.w	r3, r7, #16
 8019344:	f107 0128 	add.w	r1, r7, #40	; 0x28
 8019348:	4a0f      	ldr	r2, [pc, #60]	; (8019388 <_ZN16Variable_handler7get_argENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x94>)
 801934a:	4618      	mov	r0, r3
 801934c:	f7f4 ffda 	bl	800e304 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_>
 8019350:	f107 0310 	add.w	r3, r7, #16
 8019354:	4618      	mov	r0, r3
 8019356:	f7ff fc53 	bl	8018c00 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801935a:	f107 0310 	add.w	r3, r7, #16
 801935e:	4618      	mov	r0, r3
 8019360:	f00a fb6b 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8019364:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8019368:	4618      	mov	r0, r3
 801936a:	f00a fb66 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	}
	return search->second;
 801936e:	f107 0308 	add.w	r3, r7, #8
 8019372:	4618      	mov	r0, r3
 8019374:	f000 f9b3 	bl	80196de <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEptEv>
 8019378:	4603      	mov	r3, r0
 801937a:	3318      	adds	r3, #24
}
 801937c:	4618      	mov	r0, r3
 801937e:	3740      	adds	r7, #64	; 0x40
 8019380:	46bd      	mov	sp, r7
 8019382:	bd80      	pop	{r7, pc}
 8019384:	08029e40 	.word	0x08029e40
 8019388:	08029e48 	.word	0x08029e48

0801938c <_ZN16Variable_handler7get_parENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

Symbol& Variable_handler::get_par(std::string name)
{
 801938c:	b580      	push	{r7, lr}
 801938e:	b090      	sub	sp, #64	; 0x40
 8019390:	af00      	add	r7, sp, #0
 8019392:	6078      	str	r0, [r7, #4]
 8019394:	6039      	str	r1, [r7, #0]
	auto search = Par.find(name);
 8019396:	687b      	ldr	r3, [r7, #4]
 8019398:	3318      	adds	r3, #24
 801939a:	6839      	ldr	r1, [r7, #0]
 801939c:	4618      	mov	r0, r3
 801939e:	f000 f96e 	bl	801967e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE4findERSA_>
 80193a2:	4603      	mov	r3, r0
 80193a4:	60bb      	str	r3, [r7, #8]
	if (search == Par.end())
 80193a6:	687b      	ldr	r3, [r7, #4]
 80193a8:	3318      	adds	r3, #24
 80193aa:	4618      	mov	r0, r3
 80193ac:	f000 f976 	bl	801969c <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE3endEv>
 80193b0:	4603      	mov	r3, r0
 80193b2:	60fb      	str	r3, [r7, #12]
 80193b4:	f107 020c 	add.w	r2, r7, #12
 80193b8:	f107 0308 	add.w	r3, r7, #8
 80193bc:	4611      	mov	r1, r2
 80193be:	4618      	mov	r0, r3
 80193c0:	f000 f979 	bl	80196b6 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEESC_>
 80193c4:	4603      	mov	r3, r0
 80193c6:	2b00      	cmp	r3, #0
 80193c8:	d01d      	beq.n	8019406 <_ZN16Variable_handler7get_parENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x7a>
	{
		Transmitter::report_error(std::string("Par " + name + " not found"));
 80193ca:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80193ce:	683a      	ldr	r2, [r7, #0]
 80193d0:	4912      	ldr	r1, [pc, #72]	; (801941c <_ZN16Variable_handler7get_parENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x90>)
 80193d2:	4618      	mov	r0, r3
 80193d4:	f7f4 ff71 	bl	800e2ba <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>
 80193d8:	f107 0310 	add.w	r3, r7, #16
 80193dc:	f107 0128 	add.w	r1, r7, #40	; 0x28
 80193e0:	4a0f      	ldr	r2, [pc, #60]	; (8019420 <_ZN16Variable_handler7get_parENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x94>)
 80193e2:	4618      	mov	r0, r3
 80193e4:	f7f4 ff8e 	bl	800e304 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_>
 80193e8:	f107 0310 	add.w	r3, r7, #16
 80193ec:	4618      	mov	r0, r3
 80193ee:	f7ff fc07 	bl	8018c00 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 80193f2:	f107 0310 	add.w	r3, r7, #16
 80193f6:	4618      	mov	r0, r3
 80193f8:	f00a fb1f 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80193fc:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8019400:	4618      	mov	r0, r3
 8019402:	f00a fb1a 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	}
	return search->second;
 8019406:	f107 0308 	add.w	r3, r7, #8
 801940a:	4618      	mov	r0, r3
 801940c:	f000 f967 	bl	80196de <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEptEv>
 8019410:	4603      	mov	r3, r0
 8019412:	3318      	adds	r3, #24
}
 8019414:	4618      	mov	r0, r3
 8019416:	3740      	adds	r7, #64	; 0x40
 8019418:	46bd      	mov	sp, r7
 801941a:	bd80      	pop	{r7, pc}
 801941c:	08029e54 	.word	0x08029e54
 8019420:	08029e48 	.word	0x08029e48

08019424 <_ZN16Variable_handler9get_localENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

Symbol& Variable_handler::get_local(std::string name)
{
 8019424:	b580      	push	{r7, lr}
 8019426:	b082      	sub	sp, #8
 8019428:	af00      	add	r7, sp, #0
 801942a:	6078      	str	r0, [r7, #4]
 801942c:	6039      	str	r1, [r7, #0]
	return local[name];
 801942e:	687b      	ldr	r3, [r7, #4]
 8019430:	6839      	ldr	r1, [r7, #0]
 8019432:	4618      	mov	r0, r3
 8019434:	f000 f962 	bl	80196fc <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEEixERSA_>
 8019438:	4603      	mov	r3, r0
}
 801943a:	4618      	mov	r0, r3
 801943c:	3708      	adds	r7, #8
 801943e:	46bd      	mov	sp, r7
 8019440:	bd80      	pop	{r7, pc}

08019442 <_ZN16Variable_handler10get_symbolE8Variable>:

Symbol& Variable_handler::get_symbol(Variable var)
{
 8019442:	b590      	push	{r4, r7, lr}
 8019444:	b095      	sub	sp, #84	; 0x54
 8019446:	af00      	add	r7, sp, #0
 8019448:	6078      	str	r0, [r7, #4]
 801944a:	6039      	str	r1, [r7, #0]
	switch (var.type)
 801944c:	683b      	ldr	r3, [r7, #0]
 801944e:	781b      	ldrb	r3, [r3, #0]
 8019450:	2b02      	cmp	r3, #2
 8019452:	d01a      	beq.n	801948a <_ZN16Variable_handler10get_symbolE8Variable+0x48>
 8019454:	2b02      	cmp	r3, #2
 8019456:	dc2e      	bgt.n	80194b6 <_ZN16Variable_handler10get_symbolE8Variable+0x74>
 8019458:	2b00      	cmp	r3, #0
 801945a:	d02b      	beq.n	80194b4 <_ZN16Variable_handler10get_symbolE8Variable+0x72>
 801945c:	2b01      	cmp	r3, #1
 801945e:	d12a      	bne.n	80194b6 <_ZN16Variable_handler10get_symbolE8Variable+0x74>
	{
	case VARIABLE_ARG:
		return get_arg(var.id);
 8019460:	683b      	ldr	r3, [r7, #0]
 8019462:	1d1a      	adds	r2, r3, #4
 8019464:	f107 0308 	add.w	r3, r7, #8
 8019468:	4611      	mov	r1, r2
 801946a:	4618      	mov	r0, r3
 801946c:	f00a fcb4 	bl	8023dd8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 8019470:	f107 0308 	add.w	r3, r7, #8
 8019474:	4619      	mov	r1, r3
 8019476:	6878      	ldr	r0, [r7, #4]
 8019478:	f7ff ff3c 	bl	80192f4 <_ZN16Variable_handler7get_argENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801947c:	4604      	mov	r4, r0
 801947e:	f107 0308 	add.w	r3, r7, #8
 8019482:	4618      	mov	r0, r3
 8019484:	f00a fad9 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8019488:	e029      	b.n	80194de <_ZN16Variable_handler10get_symbolE8Variable+0x9c>
	case VARIABLE_PAR:
		return get_par(var.id);
 801948a:	683b      	ldr	r3, [r7, #0]
 801948c:	1d1a      	adds	r2, r3, #4
 801948e:	f107 0320 	add.w	r3, r7, #32
 8019492:	4611      	mov	r1, r2
 8019494:	4618      	mov	r0, r3
 8019496:	f00a fc9f 	bl	8023dd8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 801949a:	f107 0320 	add.w	r3, r7, #32
 801949e:	4619      	mov	r1, r3
 80194a0:	6878      	ldr	r0, [r7, #4]
 80194a2:	f7ff ff73 	bl	801938c <_ZN16Variable_handler7get_parENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 80194a6:	4604      	mov	r4, r0
 80194a8:	f107 0320 	add.w	r3, r7, #32
 80194ac:	4618      	mov	r0, r3
 80194ae:	f00a fac4 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80194b2:	e014      	b.n	80194de <_ZN16Variable_handler10get_symbolE8Variable+0x9c>
	case VARIABLE_LOCAL:
		break;
 80194b4:	bf00      	nop
	}
	return get_local(var.id);
 80194b6:	683b      	ldr	r3, [r7, #0]
 80194b8:	1d1a      	adds	r2, r3, #4
 80194ba:	f107 0338 	add.w	r3, r7, #56	; 0x38
 80194be:	4611      	mov	r1, r2
 80194c0:	4618      	mov	r0, r3
 80194c2:	f00a fc89 	bl	8023dd8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 80194c6:	f107 0338 	add.w	r3, r7, #56	; 0x38
 80194ca:	4619      	mov	r1, r3
 80194cc:	6878      	ldr	r0, [r7, #4]
 80194ce:	f7ff ffa9 	bl	8019424 <_ZN16Variable_handler9get_localENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 80194d2:	4604      	mov	r4, r0
 80194d4:	f107 0338 	add.w	r3, r7, #56	; 0x38
 80194d8:	4618      	mov	r0, r3
 80194da:	f00a faae 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80194de:	4623      	mov	r3, r4
}
 80194e0:	4618      	mov	r0, r3
 80194e2:	3754      	adds	r7, #84	; 0x54
 80194e4:	46bd      	mov	sp, r7
 80194e6:	bd90      	pop	{r4, r7, pc}

080194e8 <_ZSt3getILj0EKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolERKNSt13tuple_elementIXT_ESt4pairIT0_T1_EE4typeERKSC_>:
    get(std::pair<_Tp1, _Tp2>&& __in) noexcept
    { return __pair_get<_Int>::__move_get(std::move(__in)); }

  template<std::size_t _Int, class _Tp1, class _Tp2>
    constexpr const typename tuple_element<_Int, std::pair<_Tp1, _Tp2>>::type&
    get(const std::pair<_Tp1, _Tp2>& __in) noexcept
 80194e8:	b580      	push	{r7, lr}
 80194ea:	b082      	sub	sp, #8
 80194ec:	af00      	add	r7, sp, #0
 80194ee:	6078      	str	r0, [r7, #4]
    { return __pair_get<_Int>::__const_get(__in); }
 80194f0:	6878      	ldr	r0, [r7, #4]
 80194f2:	f000 f99f 	bl	8019834 <_ZNSt10__pair_getILj0EE11__const_getIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEERKT_RKSt4pairISA_T0_E>
 80194f6:	4603      	mov	r3, r0
 80194f8:	4618      	mov	r0, r3
 80194fa:	3708      	adds	r7, #8
 80194fc:	46bd      	mov	sp, r7
 80194fe:	bd80      	pop	{r7, pc}

08019500 <_ZSt3getILj1EKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolERKNSt13tuple_elementIXT_ESt4pairIT0_T1_EE4typeERKSC_>:
    get(const std::pair<_Tp1, _Tp2>& __in) noexcept
 8019500:	b580      	push	{r7, lr}
 8019502:	b082      	sub	sp, #8
 8019504:	af00      	add	r7, sp, #0
 8019506:	6078      	str	r0, [r7, #4]
    { return __pair_get<_Int>::__const_get(__in); }
 8019508:	6878      	ldr	r0, [r7, #4]
 801950a:	f000 f99e 	bl	801984a <_ZNSt10__pair_getILj1EE11__const_getIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEERKT0_RKSt4pairIT_SA_E>
 801950e:	4603      	mov	r3, r0
 8019510:	4618      	mov	r0, r3
 8019512:	3708      	adds	r7, #8
 8019514:	46bd      	mov	sp, r7
 8019516:	bd80      	pop	{r7, pc}

08019518 <_ZN16Variable_handler18transmit_variablesEv>:

void Variable_handler::transmit_variables()
{
 8019518:	b580      	push	{r7, lr}
 801951a:	b09c      	sub	sp, #112	; 0x70
 801951c:	af00      	add	r7, sp, #0
 801951e:	6078      	str	r0, [r7, #4]
    std::string res = "";
 8019520:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8019524:	4618      	mov	r0, r3
 8019526:	f009 fff7 	bl	8023518 <_ZNSaIcEC1Ev>
 801952a:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 801952e:	f107 0314 	add.w	r3, r7, #20
 8019532:	493f      	ldr	r1, [pc, #252]	; (8019630 <_ZN16Variable_handler18transmit_variablesEv+0x118>)
 8019534:	4618      	mov	r0, r3
 8019536:	f7e8 fc28 	bl	8001d8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801953a:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 801953e:	4618      	mov	r0, r3
 8019540:	f009 ffeb 	bl	802351a <_ZNSaIcED1Ev>
	for(auto const& [name, symbol] : Arg)
 8019544:	687b      	ldr	r3, [r7, #4]
 8019546:	3330      	adds	r3, #48	; 0x30
 8019548:	66fb      	str	r3, [r7, #108]	; 0x6c
 801954a:	6ef8      	ldr	r0, [r7, #108]	; 0x6c
 801954c:	f000 f932 	bl	80197b4 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE5beginEv>
 8019550:	4603      	mov	r3, r0
 8019552:	613b      	str	r3, [r7, #16]
 8019554:	6ef8      	ldr	r0, [r7, #108]	; 0x6c
 8019556:	f000 f8a1 	bl	801969c <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE3endEv>
 801955a:	4603      	mov	r3, r0
 801955c:	60fb      	str	r3, [r7, #12]
 801955e:	f107 020c 	add.w	r2, r7, #12
 8019562:	f107 0310 	add.w	r3, r7, #16
 8019566:	4611      	mov	r1, r2
 8019568:	4618      	mov	r0, r3
 801956a:	f000 f930 	bl	80197ce <_ZStneRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEESC_>
 801956e:	4603      	mov	r3, r0
 8019570:	2b00      	cmp	r3, #0
 8019572:	d03c      	beq.n	80195ee <_ZN16Variable_handler18transmit_variablesEv+0xd6>
 8019574:	f107 0310 	add.w	r3, r7, #16
 8019578:	4618      	mov	r0, r3
 801957a:	f000 f94d 	bl	8019818 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEdeEv>
 801957e:	66b8      	str	r0, [r7, #104]	; 0x68
 8019580:	6eb8      	ldr	r0, [r7, #104]	; 0x68
 8019582:	f7ff ffb1 	bl	80194e8 <_ZSt3getILj0EKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolERKNSt13tuple_elementIXT_ESt4pairIT0_T1_EE4typeERKSC_>
 8019586:	6678      	str	r0, [r7, #100]	; 0x64
 8019588:	6eb8      	ldr	r0, [r7, #104]	; 0x68
 801958a:	f7ff ffb9 	bl	8019500 <_ZSt3getILj1EKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolERKNSt13tuple_elementIXT_ESt4pairIT0_T1_EE4typeERKSC_>
 801958e:	6638      	str	r0, [r7, #96]	; 0x60
	{
		if(symbol.type != SYMBOL_STRING)
 8019590:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8019592:	781b      	ldrb	r3, [r3, #0]
 8019594:	2b03      	cmp	r3, #3
 8019596:	d024      	beq.n	80195e2 <_ZN16Variable_handler18transmit_variablesEv+0xca>
		{
			res += name;
 8019598:	f107 0314 	add.w	r3, r7, #20
 801959c:	6e79      	ldr	r1, [r7, #100]	; 0x64
 801959e:	4618      	mov	r0, r3
 80195a0:	f00a fbc6 	bl	8023d30 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLERKS4_>
			res += "=";
 80195a4:	f107 0314 	add.w	r3, r7, #20
 80195a8:	4922      	ldr	r1, [pc, #136]	; (8019634 <_ZN16Variable_handler18transmit_variablesEv+0x11c>)
 80195aa:	4618      	mov	r0, r3
 80195ac:	f00a fbea 	bl	8023d84 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc>
			res += symbol.to_string();
 80195b0:	f107 0330 	add.w	r3, r7, #48	; 0x30
 80195b4:	6e39      	ldr	r1, [r7, #96]	; 0x60
 80195b6:	4618      	mov	r0, r3
 80195b8:	f7fe fbd2 	bl	8017d60 <_ZNK6Symbol9to_stringB5cxx11Ev>
 80195bc:	f107 0230 	add.w	r2, r7, #48	; 0x30
 80195c0:	f107 0314 	add.w	r3, r7, #20
 80195c4:	4611      	mov	r1, r2
 80195c6:	4618      	mov	r0, r3
 80195c8:	f00a fbb2 	bl	8023d30 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLERKS4_>
 80195cc:	f107 0330 	add.w	r3, r7, #48	; 0x30
 80195d0:	4618      	mov	r0, r3
 80195d2:	f00a fa32 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
			res += ";";
 80195d6:	f107 0314 	add.w	r3, r7, #20
 80195da:	4917      	ldr	r1, [pc, #92]	; (8019638 <_ZN16Variable_handler18transmit_variablesEv+0x120>)
 80195dc:	4618      	mov	r0, r3
 80195de:	f00a fbd1 	bl	8023d84 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc>
	for(auto const& [name, symbol] : Arg)
 80195e2:	f107 0310 	add.w	r3, r7, #16
 80195e6:	4618      	mov	r0, r3
 80195e8:	f000 f905 	bl	80197f6 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEppEv>
 80195ec:	e7b7      	b.n	801955e <_ZN16Variable_handler18transmit_variablesEv+0x46>
		}
	}
	res += '\n';
 80195ee:	f107 0314 	add.w	r3, r7, #20
 80195f2:	210a      	movs	r1, #10
 80195f4:	4618      	mov	r0, r3
 80195f6:	f00a fab6 	bl	8023b66 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc>
	Transmitter::send_string(res);
 80195fa:	f107 0214 	add.w	r2, r7, #20
 80195fe:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8019602:	4611      	mov	r1, r2
 8019604:	4618      	mov	r0, r3
 8019606:	f00a fbe7 	bl	8023dd8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 801960a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801960e:	4618      	mov	r0, r3
 8019610:	f7ff fb88 	bl	8018d24 <_ZN11Transmitter11send_stringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8019614:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8019618:	4618      	mov	r0, r3
 801961a:	f00a fa0e 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
    std::string res = "";
 801961e:	f107 0314 	add.w	r3, r7, #20
 8019622:	4618      	mov	r0, r3
 8019624:	f00a fa09 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
}
 8019628:	bf00      	nop
 801962a:	3770      	adds	r7, #112	; 0x70
 801962c:	46bd      	mov	sp, r7
 801962e:	bd80      	pop	{r7, pc}
 8019630:	08029e5c 	.word	0x08029e5c
 8019634:	08029e60 	.word	0x08029e60
 8019638:	08029e64 	.word	0x08029e64

0801963c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE13_Rb_tree_implISD_Lb1EED1Ev>:
	struct _Rb_tree_impl
 801963c:	b580      	push	{r7, lr}
 801963e:	b082      	sub	sp, #8
 8019640:	af00      	add	r7, sp, #0
 8019642:	6078      	str	r0, [r7, #4]
 8019644:	6878      	ldr	r0, [r7, #4]
 8019646:	f000 f90c 	bl	8019862 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEED1Ev>
 801964a:	687b      	ldr	r3, [r7, #4]
 801964c:	4618      	mov	r0, r3
 801964e:	3708      	adds	r7, #8
 8019650:	46bd      	mov	sp, r7
 8019652:	bd80      	pop	{r7, pc}

08019654 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EED1Ev>:
      ~_Rb_tree() _GLIBCXX_NOEXCEPT
 8019654:	b580      	push	{r7, lr}
 8019656:	b082      	sub	sp, #8
 8019658:	af00      	add	r7, sp, #0
 801965a:	6078      	str	r0, [r7, #4]
      { _M_erase(_M_begin()); }
 801965c:	6878      	ldr	r0, [r7, #4]
 801965e:	f000 f92b 	bl	80198b8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_beginEv>
 8019662:	4603      	mov	r3, r0
 8019664:	4619      	mov	r1, r3
 8019666:	6878      	ldr	r0, [r7, #4]
 8019668:	f000 f907 	bl	801987a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_eraseEPSt13_Rb_tree_nodeIS9_E>
 801966c:	687b      	ldr	r3, [r7, #4]
 801966e:	4618      	mov	r0, r3
 8019670:	f7ff ffe4 	bl	801963c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE13_Rb_tree_implISD_Lb1EED1Ev>
 8019674:	687b      	ldr	r3, [r7, #4]
 8019676:	4618      	mov	r0, r3
 8019678:	3708      	adds	r7, #8
 801967a:	46bd      	mov	sp, r7
 801967c:	bd80      	pop	{r7, pc}

0801967e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE4findERSA_>:
      find(const key_type& __x)
 801967e:	b580      	push	{r7, lr}
 8019680:	b082      	sub	sp, #8
 8019682:	af00      	add	r7, sp, #0
 8019684:	6078      	str	r0, [r7, #4]
 8019686:	6039      	str	r1, [r7, #0]
      { return _M_t.find(__x); }
 8019688:	687b      	ldr	r3, [r7, #4]
 801968a:	6839      	ldr	r1, [r7, #0]
 801968c:	4618      	mov	r0, r3
 801968e:	f000 f91f 	bl	80198d0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE4findERS7_>
 8019692:	4603      	mov	r3, r0
 8019694:	4618      	mov	r0, r3
 8019696:	3708      	adds	r7, #8
 8019698:	46bd      	mov	sp, r7
 801969a:	bd80      	pop	{r7, pc}

0801969c <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 801969c:	b580      	push	{r7, lr}
 801969e:	b082      	sub	sp, #8
 80196a0:	af00      	add	r7, sp, #0
 80196a2:	6078      	str	r0, [r7, #4]
      { return _M_t.end(); }
 80196a4:	687b      	ldr	r3, [r7, #4]
 80196a6:	4618      	mov	r0, r3
 80196a8:	f000 f94e 	bl	8019948 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE3endEv>
 80196ac:	4603      	mov	r3, r0
 80196ae:	4618      	mov	r0, r3
 80196b0:	3708      	adds	r7, #8
 80196b2:	46bd      	mov	sp, r7
 80196b4:	bd80      	pop	{r7, pc}

080196b6 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEESC_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 80196b6:	b480      	push	{r7}
 80196b8:	b083      	sub	sp, #12
 80196ba:	af00      	add	r7, sp, #0
 80196bc:	6078      	str	r0, [r7, #4]
 80196be:	6039      	str	r1, [r7, #0]
      { return __x._M_node == __y._M_node; }
 80196c0:	687b      	ldr	r3, [r7, #4]
 80196c2:	681a      	ldr	r2, [r3, #0]
 80196c4:	683b      	ldr	r3, [r7, #0]
 80196c6:	681b      	ldr	r3, [r3, #0]
 80196c8:	429a      	cmp	r2, r3
 80196ca:	bf0c      	ite	eq
 80196cc:	2301      	moveq	r3, #1
 80196ce:	2300      	movne	r3, #0
 80196d0:	b2db      	uxtb	r3, r3
 80196d2:	4618      	mov	r0, r3
 80196d4:	370c      	adds	r7, #12
 80196d6:	46bd      	mov	sp, r7
 80196d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80196dc:	4770      	bx	lr

080196de <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEptEv>:
      operator->() const _GLIBCXX_NOEXCEPT
 80196de:	b580      	push	{r7, lr}
 80196e0:	b082      	sub	sp, #8
 80196e2:	af00      	add	r7, sp, #0
 80196e4:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type> (_M_node)->_M_valptr(); }
 80196e6:	687b      	ldr	r3, [r7, #4]
 80196e8:	681b      	ldr	r3, [r3, #0]
 80196ea:	4618      	mov	r0, r3
 80196ec:	f000 f93d 	bl	801996a <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE9_M_valptrEv>
 80196f0:	4603      	mov	r3, r0
 80196f2:	4618      	mov	r0, r3
 80196f4:	3708      	adds	r7, #8
 80196f6:	46bd      	mov	sp, r7
 80196f8:	bd80      	pop	{r7, pc}
	...

080196fc <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEEixERSA_>:
      operator[](const key_type& __k)
 80196fc:	b590      	push	{r4, r7, lr}
 80196fe:	b08b      	sub	sp, #44	; 0x2c
 8019700:	af02      	add	r7, sp, #8
 8019702:	6078      	str	r0, [r7, #4]
 8019704:	6039      	str	r1, [r7, #0]
	iterator __i = lower_bound(__k);
 8019706:	6839      	ldr	r1, [r7, #0]
 8019708:	6878      	ldr	r0, [r7, #4]
 801970a:	f000 f93c 	bl	8019986 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE11lower_boundERSA_>
 801970e:	4603      	mov	r3, r0
 8019710:	60bb      	str	r3, [r7, #8]
	if (__i == end() || key_comp()(__k, (*__i).first))
 8019712:	6878      	ldr	r0, [r7, #4]
 8019714:	f7ff ffc2 	bl	801969c <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE3endEv>
 8019718:	4603      	mov	r3, r0
 801971a:	60fb      	str	r3, [r7, #12]
 801971c:	f107 020c 	add.w	r2, r7, #12
 8019720:	f107 0308 	add.w	r3, r7, #8
 8019724:	4611      	mov	r1, r2
 8019726:	4618      	mov	r0, r3
 8019728:	f7ff ffc5 	bl	80196b6 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEESC_>
 801972c:	4603      	mov	r3, r0
 801972e:	2b00      	cmp	r3, #0
 8019730:	d112      	bne.n	8019758 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEEixERSA_+0x5c>
 8019732:	6878      	ldr	r0, [r7, #4]
 8019734:	f000 f936 	bl	80199a4 <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE8key_compEv>
 8019738:	f107 0308 	add.w	r3, r7, #8
 801973c:	4618      	mov	r0, r3
 801973e:	f000 f86b 	bl	8019818 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEdeEv>
 8019742:	4603      	mov	r3, r0
 8019744:	461a      	mov	r2, r3
 8019746:	f107 0310 	add.w	r3, r7, #16
 801974a:	6839      	ldr	r1, [r7, #0]
 801974c:	4618      	mov	r0, r3
 801974e:	f7ed f9be 	bl	8006ace <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8019752:	4603      	mov	r3, r0
 8019754:	2b00      	cmp	r3, #0
 8019756:	d001      	beq.n	801975c <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEEixERSA_+0x60>
 8019758:	2301      	movs	r3, #1
 801975a:	e000      	b.n	801975e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEEixERSA_+0x62>
 801975c:	2300      	movs	r3, #0
 801975e:	2b00      	cmp	r3, #0
 8019760:	d01b      	beq.n	801979a <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEEixERSA_+0x9e>
	  __i = _M_t._M_emplace_hint_unique(__i, std::piecewise_construct,
 8019762:	687c      	ldr	r4, [r7, #4]
 8019764:	f107 0208 	add.w	r2, r7, #8
 8019768:	f107 0314 	add.w	r3, r7, #20
 801976c:	4611      	mov	r1, r2
 801976e:	4618      	mov	r0, r3
 8019770:	f000 f934 	bl	80199dc <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEC1ERKSt17_Rb_tree_iteratorIS9_E>
 8019774:	f107 0318 	add.w	r3, r7, #24
 8019778:	6839      	ldr	r1, [r7, #0]
 801977a:	4618      	mov	r0, r3
 801977c:	f000 f91f 	bl	80199be <_ZNSt5tupleIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IvLb1EEES7_>
 8019780:	f107 0218 	add.w	r2, r7, #24
 8019784:	f107 031c 	add.w	r3, r7, #28
 8019788:	9300      	str	r3, [sp, #0]
 801978a:	4613      	mov	r3, r2
 801978c:	4a08      	ldr	r2, [pc, #32]	; (80197b0 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEEixERSA_+0xb4>)
 801978e:	6979      	ldr	r1, [r7, #20]
 8019790:	4620      	mov	r0, r4
 8019792:	f000 f933 	bl	80199fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESK_IJEEEEESt17_Rb_tree_iteratorIS9_ESt23_Rb_tree_const_iteratorIS9_EDpOT_>
 8019796:	4603      	mov	r3, r0
 8019798:	60bb      	str	r3, [r7, #8]
	return (*__i).second;
 801979a:	f107 0308 	add.w	r3, r7, #8
 801979e:	4618      	mov	r0, r3
 80197a0:	f000 f83a 	bl	8019818 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEdeEv>
 80197a4:	4603      	mov	r3, r0
 80197a6:	3318      	adds	r3, #24
      }
 80197a8:	4618      	mov	r0, r3
 80197aa:	3724      	adds	r7, #36	; 0x24
 80197ac:	46bd      	mov	sp, r7
 80197ae:	bd90      	pop	{r4, r7, pc}
 80197b0:	0802a1f4 	.word	0x0802a1f4

080197b4 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 80197b4:	b580      	push	{r7, lr}
 80197b6:	b082      	sub	sp, #8
 80197b8:	af00      	add	r7, sp, #0
 80197ba:	6078      	str	r0, [r7, #4]
      { return _M_t.begin(); }
 80197bc:	687b      	ldr	r3, [r7, #4]
 80197be:	4618      	mov	r0, r3
 80197c0:	f000 f95a 	bl	8019a78 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE5beginEv>
 80197c4:	4603      	mov	r3, r0
 80197c6:	4618      	mov	r0, r3
 80197c8:	3708      	adds	r7, #8
 80197ca:	46bd      	mov	sp, r7
 80197cc:	bd80      	pop	{r7, pc}

080197ce <_ZStneRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEESC_>:
      operator!=(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 80197ce:	b480      	push	{r7}
 80197d0:	b083      	sub	sp, #12
 80197d2:	af00      	add	r7, sp, #0
 80197d4:	6078      	str	r0, [r7, #4]
 80197d6:	6039      	str	r1, [r7, #0]
      { return __x._M_node != __y._M_node; }
 80197d8:	687b      	ldr	r3, [r7, #4]
 80197da:	681a      	ldr	r2, [r3, #0]
 80197dc:	683b      	ldr	r3, [r7, #0]
 80197de:	681b      	ldr	r3, [r3, #0]
 80197e0:	429a      	cmp	r2, r3
 80197e2:	bf14      	ite	ne
 80197e4:	2301      	movne	r3, #1
 80197e6:	2300      	moveq	r3, #0
 80197e8:	b2db      	uxtb	r3, r3
 80197ea:	4618      	mov	r0, r3
 80197ec:	370c      	adds	r7, #12
 80197ee:	46bd      	mov	sp, r7
 80197f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80197f4:	4770      	bx	lr

080197f6 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
 80197f6:	b580      	push	{r7, lr}
 80197f8:	b082      	sub	sp, #8
 80197fa:	af00      	add	r7, sp, #0
 80197fc:	6078      	str	r0, [r7, #4]
	_M_node = _Rb_tree_increment(_M_node);
 80197fe:	687b      	ldr	r3, [r7, #4]
 8019800:	681b      	ldr	r3, [r3, #0]
 8019802:	4618      	mov	r0, r3
 8019804:	f009 fecb 	bl	802359e <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
 8019808:	4602      	mov	r2, r0
 801980a:	687b      	ldr	r3, [r7, #4]
 801980c:	601a      	str	r2, [r3, #0]
	return *this;
 801980e:	687b      	ldr	r3, [r7, #4]
      }
 8019810:	4618      	mov	r0, r3
 8019812:	3708      	adds	r7, #8
 8019814:	46bd      	mov	sp, r7
 8019816:	bd80      	pop	{r7, pc}

08019818 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
 8019818:	b580      	push	{r7, lr}
 801981a:	b082      	sub	sp, #8
 801981c:	af00      	add	r7, sp, #0
 801981e:	6078      	str	r0, [r7, #4]
      { return *static_cast<_Link_type>(_M_node)->_M_valptr(); }
 8019820:	687b      	ldr	r3, [r7, #4]
 8019822:	681b      	ldr	r3, [r3, #0]
 8019824:	4618      	mov	r0, r3
 8019826:	f000 f8a0 	bl	801996a <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE9_M_valptrEv>
 801982a:	4603      	mov	r3, r0
 801982c:	4618      	mov	r0, r3
 801982e:	3708      	adds	r7, #8
 8019830:	46bd      	mov	sp, r7
 8019832:	bd80      	pop	{r7, pc}

08019834 <_ZNSt10__pair_getILj0EE11__const_getIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEERKT_RKSt4pairISA_T0_E>:
        __const_get(const std::pair<_Tp1, _Tp2>& __pair) noexcept
 8019834:	b480      	push	{r7}
 8019836:	b083      	sub	sp, #12
 8019838:	af00      	add	r7, sp, #0
 801983a:	6078      	str	r0, [r7, #4]
        { return __pair.first; }
 801983c:	687b      	ldr	r3, [r7, #4]
 801983e:	4618      	mov	r0, r3
 8019840:	370c      	adds	r7, #12
 8019842:	46bd      	mov	sp, r7
 8019844:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019848:	4770      	bx	lr

0801984a <_ZNSt10__pair_getILj1EE11__const_getIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEERKT0_RKSt4pairIT_SA_E>:
        __const_get(const std::pair<_Tp1, _Tp2>& __pair) noexcept
 801984a:	b480      	push	{r7}
 801984c:	b083      	sub	sp, #12
 801984e:	af00      	add	r7, sp, #0
 8019850:	6078      	str	r0, [r7, #4]
        { return __pair.second; }
 8019852:	687b      	ldr	r3, [r7, #4]
 8019854:	3318      	adds	r3, #24
 8019856:	4618      	mov	r0, r3
 8019858:	370c      	adds	r7, #12
 801985a:	46bd      	mov	sp, r7
 801985c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019860:	4770      	bx	lr

08019862 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
 8019862:	b580      	push	{r7, lr}
 8019864:	b082      	sub	sp, #8
 8019866:	af00      	add	r7, sp, #0
 8019868:	6078      	str	r0, [r7, #4]
 801986a:	6878      	ldr	r0, [r7, #4]
 801986c:	f000 f915 	bl	8019a9a <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEED1Ev>
 8019870:	687b      	ldr	r3, [r7, #4]
 8019872:	4618      	mov	r0, r3
 8019874:	3708      	adds	r7, #8
 8019876:	46bd      	mov	sp, r7
 8019878:	bd80      	pop	{r7, pc}

0801987a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_eraseEPSt13_Rb_tree_nodeIS9_E>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 801987a:	b580      	push	{r7, lr}
 801987c:	b084      	sub	sp, #16
 801987e:	af00      	add	r7, sp, #0
 8019880:	6078      	str	r0, [r7, #4]
 8019882:	6039      	str	r1, [r7, #0]
      while (__x != 0)
 8019884:	683b      	ldr	r3, [r7, #0]
 8019886:	2b00      	cmp	r3, #0
 8019888:	d012      	beq.n	80198b0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_eraseEPSt13_Rb_tree_nodeIS9_E+0x36>
	  _M_erase(_S_right(__x));
 801988a:	6838      	ldr	r0, [r7, #0]
 801988c:	f000 f910 	bl	8019ab0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_S_rightEPSt18_Rb_tree_node_base>
 8019890:	4603      	mov	r3, r0
 8019892:	4619      	mov	r1, r3
 8019894:	6878      	ldr	r0, [r7, #4]
 8019896:	f7ff fff0 	bl	801987a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_eraseEPSt13_Rb_tree_nodeIS9_E>
	  _Link_type __y = _S_left(__x);
 801989a:	6838      	ldr	r0, [r7, #0]
 801989c:	f000 f914 	bl	8019ac8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE7_S_leftEPSt18_Rb_tree_node_base>
 80198a0:	60f8      	str	r0, [r7, #12]
	  _M_drop_node(__x);
 80198a2:	6839      	ldr	r1, [r7, #0]
 80198a4:	6878      	ldr	r0, [r7, #4]
 80198a6:	f000 f91b 	bl	8019ae0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS9_E>
	  __x = __y;
 80198aa:	68fb      	ldr	r3, [r7, #12]
 80198ac:	603b      	str	r3, [r7, #0]
      while (__x != 0)
 80198ae:	e7e9      	b.n	8019884 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_eraseEPSt13_Rb_tree_nodeIS9_E+0xa>
    }
 80198b0:	bf00      	nop
 80198b2:	3710      	adds	r7, #16
 80198b4:	46bd      	mov	sp, r7
 80198b6:	bd80      	pop	{r7, pc}

080198b8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_beginEv>:
      _M_begin() _GLIBCXX_NOEXCEPT
 80198b8:	b480      	push	{r7}
 80198ba:	b083      	sub	sp, #12
 80198bc:	af00      	add	r7, sp, #0
 80198be:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
 80198c0:	687b      	ldr	r3, [r7, #4]
 80198c2:	689b      	ldr	r3, [r3, #8]
 80198c4:	4618      	mov	r0, r3
 80198c6:	370c      	adds	r7, #12
 80198c8:	46bd      	mov	sp, r7
 80198ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80198ce:	4770      	bx	lr

080198d0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE4findERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 80198d0:	b590      	push	{r4, r7, lr}
 80198d2:	b085      	sub	sp, #20
 80198d4:	af00      	add	r7, sp, #0
 80198d6:	6078      	str	r0, [r7, #4]
 80198d8:	6039      	str	r1, [r7, #0]
      iterator __j = _M_lower_bound(_M_begin(), _M_end(), __k);
 80198da:	6878      	ldr	r0, [r7, #4]
 80198dc:	f7ff ffec 	bl	80198b8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_beginEv>
 80198e0:	4604      	mov	r4, r0
 80198e2:	6878      	ldr	r0, [r7, #4]
 80198e4:	f000 f90d 	bl	8019b02 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_M_endEv>
 80198e8:	4602      	mov	r2, r0
 80198ea:	683b      	ldr	r3, [r7, #0]
 80198ec:	4621      	mov	r1, r4
 80198ee:	6878      	ldr	r0, [r7, #4]
 80198f0:	f000 f913 	bl	8019b1a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS9_EPSt18_Rb_tree_node_baseRS7_>
 80198f4:	4603      	mov	r3, r0
 80198f6:	60bb      	str	r3, [r7, #8]
      return (__j == end()
 80198f8:	6878      	ldr	r0, [r7, #4]
 80198fa:	f000 f825 	bl	8019948 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE3endEv>
 80198fe:	4603      	mov	r3, r0
 8019900:	60fb      	str	r3, [r7, #12]
 8019902:	f107 020c 	add.w	r2, r7, #12
 8019906:	f107 0308 	add.w	r3, r7, #8
 801990a:	4611      	mov	r1, r2
 801990c:	4618      	mov	r0, r3
 801990e:	f7ff fed2 	bl	80196b6 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEESC_>
 8019912:	4603      	mov	r3, r0
					_S_key(__j._M_node))) ? end() : __j;
 8019914:	2b00      	cmp	r3, #0
 8019916:	d10d      	bne.n	8019934 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE4findERS7_+0x64>
	      || _M_impl._M_key_compare(__k,
 8019918:	687c      	ldr	r4, [r7, #4]
					_S_key(__j._M_node))) ? end() : __j;
 801991a:	68bb      	ldr	r3, [r7, #8]
	      || _M_impl._M_key_compare(__k,
 801991c:	4618      	mov	r0, r3
 801991e:	f000 f92d 	bl	8019b7c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8019922:	4603      	mov	r3, r0
 8019924:	461a      	mov	r2, r3
 8019926:	6839      	ldr	r1, [r7, #0]
 8019928:	4620      	mov	r0, r4
 801992a:	f7ed f8d0 	bl	8006ace <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 801992e:	4603      	mov	r3, r0
 8019930:	2b00      	cmp	r3, #0
 8019932:	d004      	beq.n	801993e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE4findERS7_+0x6e>
					_S_key(__j._M_node))) ? end() : __j;
 8019934:	6878      	ldr	r0, [r7, #4]
 8019936:	f000 f807 	bl	8019948 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE3endEv>
 801993a:	4603      	mov	r3, r0
 801993c:	e000      	b.n	8019940 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE4findERS7_+0x70>
 801993e:	68bb      	ldr	r3, [r7, #8]
    }
 8019940:	4618      	mov	r0, r3
 8019942:	3714      	adds	r7, #20
 8019944:	46bd      	mov	sp, r7
 8019946:	bd90      	pop	{r4, r7, pc}

08019948 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 8019948:	b580      	push	{r7, lr}
 801994a:	b084      	sub	sp, #16
 801994c:	af00      	add	r7, sp, #0
 801994e:	6078      	str	r0, [r7, #4]
      { return iterator(&this->_M_impl._M_header); }
 8019950:	687b      	ldr	r3, [r7, #4]
 8019952:	1d1a      	adds	r2, r3, #4
 8019954:	f107 030c 	add.w	r3, r7, #12
 8019958:	4611      	mov	r1, r2
 801995a:	4618      	mov	r0, r3
 801995c:	f000 f91a 	bl	8019b94 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEC1EPSt18_Rb_tree_node_base>
 8019960:	68fb      	ldr	r3, [r7, #12]
 8019962:	4618      	mov	r0, r3
 8019964:	3710      	adds	r7, #16
 8019966:	46bd      	mov	sp, r7
 8019968:	bd80      	pop	{r7, pc}

0801996a <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE9_M_valptrEv>:
      _M_valptr()
 801996a:	b580      	push	{r7, lr}
 801996c:	b082      	sub	sp, #8
 801996e:	af00      	add	r7, sp, #0
 8019970:	6078      	str	r0, [r7, #4]
      { return _M_storage._M_ptr(); }
 8019972:	687b      	ldr	r3, [r7, #4]
 8019974:	3310      	adds	r3, #16
 8019976:	4618      	mov	r0, r3
 8019978:	f000 f91b 	bl	8019bb2 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE6_M_ptrEv>
 801997c:	4603      	mov	r3, r0
 801997e:	4618      	mov	r0, r3
 8019980:	3708      	adds	r7, #8
 8019982:	46bd      	mov	sp, r7
 8019984:	bd80      	pop	{r7, pc}

08019986 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE11lower_boundERSA_>:
       *  that matches the given key.  If unsuccessful it returns an iterator
       *  pointing to the first element that has a greater value than given key
       *  or end() if no such element exists.
       */
      iterator
      lower_bound(const key_type& __x)
 8019986:	b580      	push	{r7, lr}
 8019988:	b082      	sub	sp, #8
 801998a:	af00      	add	r7, sp, #0
 801998c:	6078      	str	r0, [r7, #4]
 801998e:	6039      	str	r1, [r7, #0]
      { return _M_t.lower_bound(__x); }
 8019990:	687b      	ldr	r3, [r7, #4]
 8019992:	6839      	ldr	r1, [r7, #0]
 8019994:	4618      	mov	r0, r3
 8019996:	f000 f918 	bl	8019bca <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11lower_boundERS7_>
 801999a:	4603      	mov	r3, r0
 801999c:	4618      	mov	r0, r3
 801999e:	3708      	adds	r7, #8
 80199a0:	46bd      	mov	sp, r7
 80199a2:	bd80      	pop	{r7, pc}

080199a4 <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE8key_compEv>:
      key_comp() const
 80199a4:	b590      	push	{r4, r7, lr}
 80199a6:	b083      	sub	sp, #12
 80199a8:	af00      	add	r7, sp, #0
 80199aa:	6078      	str	r0, [r7, #4]
      { return _M_t.key_comp(); }
 80199ac:	687b      	ldr	r3, [r7, #4]
 80199ae:	4618      	mov	r0, r3
 80199b0:	f000 f922 	bl	8019bf8 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8key_compEv>
 80199b4:	4623      	mov	r3, r4
 80199b6:	4618      	mov	r0, r3
 80199b8:	370c      	adds	r7, #12
 80199ba:	46bd      	mov	sp, r7
 80199bc:	bd90      	pop	{r4, r7, pc}

080199be <_ZNSt5tupleIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IvLb1EEES7_>:
                   _ConstructibleTuple<_Elements...>()
                 && _TCC<_Dummy>::template
                   _ImplicitlyConvertibleTuple<_Elements...>()
                 && (sizeof...(_Elements) >= 1),
               bool>::type=true>
        constexpr tuple(const _Elements&... __elements)
 80199be:	b580      	push	{r7, lr}
 80199c0:	b082      	sub	sp, #8
 80199c2:	af00      	add	r7, sp, #0
 80199c4:	6078      	str	r0, [r7, #4]
 80199c6:	6039      	str	r1, [r7, #0]
      : _Inherited(__elements...) { }
 80199c8:	687b      	ldr	r3, [r7, #4]
 80199ca:	6839      	ldr	r1, [r7, #0]
 80199cc:	4618      	mov	r0, r3
 80199ce:	f000 f91d 	bl	8019c0c <_ZNSt11_Tuple_implILj0EJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1ES7_>
 80199d2:	687b      	ldr	r3, [r7, #4]
 80199d4:	4618      	mov	r0, r3
 80199d6:	3708      	adds	r7, #8
 80199d8:	46bd      	mov	sp, r7
 80199da:	bd80      	pop	{r7, pc}

080199dc <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEC1ERKSt17_Rb_tree_iteratorIS9_E>:
      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
 80199dc:	b480      	push	{r7}
 80199de:	b083      	sub	sp, #12
 80199e0:	af00      	add	r7, sp, #0
 80199e2:	6078      	str	r0, [r7, #4]
 80199e4:	6039      	str	r1, [r7, #0]
      : _M_node(__it._M_node) { }
 80199e6:	683b      	ldr	r3, [r7, #0]
 80199e8:	681a      	ldr	r2, [r3, #0]
 80199ea:	687b      	ldr	r3, [r7, #4]
 80199ec:	601a      	str	r2, [r3, #0]
 80199ee:	687b      	ldr	r3, [r7, #4]
 80199f0:	4618      	mov	r0, r3
 80199f2:	370c      	adds	r7, #12
 80199f4:	46bd      	mov	sp, r7
 80199f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80199fa:	4770      	bx	lr

080199fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESK_IJEEEEESt17_Rb_tree_iteratorIS9_ESt23_Rb_tree_const_iteratorIS9_EDpOT_>:
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 80199fc:	b5b0      	push	{r4, r5, r7, lr}
 80199fe:	b088      	sub	sp, #32
 8019a00:	af00      	add	r7, sp, #0
 8019a02:	60f8      	str	r0, [r7, #12]
 8019a04:	60b9      	str	r1, [r7, #8]
 8019a06:	607a      	str	r2, [r7, #4]
 8019a08:	603b      	str	r3, [r7, #0]
	_Link_type __z = _M_create_node(std::forward<_Args>(__args)...);
 8019a0a:	6878      	ldr	r0, [r7, #4]
 8019a0c:	f000 f90d 	bl	8019c2a <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
 8019a10:	4604      	mov	r4, r0
 8019a12:	6838      	ldr	r0, [r7, #0]
 8019a14:	f000 f914 	bl	8019c40 <_ZSt7forwardISt5tupleIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceISA_E4typeE>
 8019a18:	4605      	mov	r5, r0
 8019a1a:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8019a1c:	f000 f91b 	bl	8019c56 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
 8019a20:	4603      	mov	r3, r0
 8019a22:	462a      	mov	r2, r5
 8019a24:	4621      	mov	r1, r4
 8019a26:	68f8      	ldr	r0, [r7, #12]
 8019a28:	f000 f920 	bl	8019c6c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESK_IJEEEEEPSt13_Rb_tree_nodeIS9_EDpOT_>
 8019a2c:	61f8      	str	r0, [r7, #28]
	    auto __res = _M_get_insert_hint_unique_pos(__pos, _S_key(__z));
 8019a2e:	69f8      	ldr	r0, [r7, #28]
 8019a30:	f000 fa62 	bl	8019ef8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt13_Rb_tree_nodeIS9_E>
 8019a34:	4603      	mov	r3, r0
 8019a36:	f107 0010 	add.w	r0, r7, #16
 8019a3a:	68ba      	ldr	r2, [r7, #8]
 8019a3c:	68f9      	ldr	r1, [r7, #12]
 8019a3e:	f000 f938 	bl	8019cb2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_>
	    if (__res.second)
 8019a42:	697b      	ldr	r3, [r7, #20]
 8019a44:	2b00      	cmp	r3, #0
 8019a46:	d007      	beq.n	8019a58 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESK_IJEEEEESt17_Rb_tree_iteratorIS9_ESt23_Rb_tree_const_iteratorIS9_EDpOT_+0x5c>
	      return _M_insert_node(__res.first, __res.second, __z);
 8019a48:	6939      	ldr	r1, [r7, #16]
 8019a4a:	697a      	ldr	r2, [r7, #20]
 8019a4c:	69fb      	ldr	r3, [r7, #28]
 8019a4e:	68f8      	ldr	r0, [r7, #12]
 8019a50:	f000 fa65 	bl	8019f1e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSH_PSt13_Rb_tree_nodeIS9_E>
 8019a54:	4603      	mov	r3, r0
 8019a56:	e00b      	b.n	8019a70 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESK_IJEEEEESt17_Rb_tree_iteratorIS9_ESt23_Rb_tree_const_iteratorIS9_EDpOT_+0x74>
	    _M_drop_node(__z);
 8019a58:	69f9      	ldr	r1, [r7, #28]
 8019a5a:	68f8      	ldr	r0, [r7, #12]
 8019a5c:	f000 f840 	bl	8019ae0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS9_E>
	    return iterator(__res.first);
 8019a60:	693a      	ldr	r2, [r7, #16]
 8019a62:	f107 0318 	add.w	r3, r7, #24
 8019a66:	4611      	mov	r1, r2
 8019a68:	4618      	mov	r0, r3
 8019a6a:	f000 f893 	bl	8019b94 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEC1EPSt18_Rb_tree_node_base>
 8019a6e:	69bb      	ldr	r3, [r7, #24]
      }
 8019a70:	4618      	mov	r0, r3
 8019a72:	3720      	adds	r7, #32
 8019a74:	46bd      	mov	sp, r7
 8019a76:	bdb0      	pop	{r4, r5, r7, pc}

08019a78 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 8019a78:	b580      	push	{r7, lr}
 8019a7a:	b084      	sub	sp, #16
 8019a7c:	af00      	add	r7, sp, #0
 8019a7e:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_header._M_left); }
 8019a80:	687b      	ldr	r3, [r7, #4]
 8019a82:	68da      	ldr	r2, [r3, #12]
 8019a84:	f107 030c 	add.w	r3, r7, #12
 8019a88:	4611      	mov	r1, r2
 8019a8a:	4618      	mov	r0, r3
 8019a8c:	f000 f882 	bl	8019b94 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEC1EPSt18_Rb_tree_node_base>
 8019a90:	68fb      	ldr	r3, [r7, #12]
 8019a92:	4618      	mov	r0, r3
 8019a94:	3710      	adds	r7, #16
 8019a96:	46bd      	mov	sp, r7
 8019a98:	bd80      	pop	{r7, pc}

08019a9a <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEED1Ev>:
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 8019a9a:	b480      	push	{r7}
 8019a9c:	b083      	sub	sp, #12
 8019a9e:	af00      	add	r7, sp, #0
 8019aa0:	6078      	str	r0, [r7, #4]
 8019aa2:	687b      	ldr	r3, [r7, #4]
 8019aa4:	4618      	mov	r0, r3
 8019aa6:	370c      	adds	r7, #12
 8019aa8:	46bd      	mov	sp, r7
 8019aaa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019aae:	4770      	bx	lr

08019ab0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_S_rightEPSt18_Rb_tree_node_base>:
      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 8019ab0:	b480      	push	{r7}
 8019ab2:	b083      	sub	sp, #12
 8019ab4:	af00      	add	r7, sp, #0
 8019ab6:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(__x->_M_right); }
 8019ab8:	687b      	ldr	r3, [r7, #4]
 8019aba:	68db      	ldr	r3, [r3, #12]
 8019abc:	4618      	mov	r0, r3
 8019abe:	370c      	adds	r7, #12
 8019ac0:	46bd      	mov	sp, r7
 8019ac2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019ac6:	4770      	bx	lr

08019ac8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE7_S_leftEPSt18_Rb_tree_node_base>:
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 8019ac8:	b480      	push	{r7}
 8019aca:	b083      	sub	sp, #12
 8019acc:	af00      	add	r7, sp, #0
 8019ace:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(__x->_M_left); }
 8019ad0:	687b      	ldr	r3, [r7, #4]
 8019ad2:	689b      	ldr	r3, [r3, #8]
 8019ad4:	4618      	mov	r0, r3
 8019ad6:	370c      	adds	r7, #12
 8019ad8:	46bd      	mov	sp, r7
 8019ada:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019ade:	4770      	bx	lr

08019ae0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS9_E>:
      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 8019ae0:	b580      	push	{r7, lr}
 8019ae2:	b082      	sub	sp, #8
 8019ae4:	af00      	add	r7, sp, #0
 8019ae6:	6078      	str	r0, [r7, #4]
 8019ae8:	6039      	str	r1, [r7, #0]
	_M_destroy_node(__p);
 8019aea:	6839      	ldr	r1, [r7, #0]
 8019aec:	6878      	ldr	r0, [r7, #4]
 8019aee:	f000 fa53 	bl	8019f98 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS9_E>
	_M_put_node(__p);
 8019af2:	6839      	ldr	r1, [r7, #0]
 8019af4:	6878      	ldr	r0, [r7, #4]
 8019af6:	f000 fa64 	bl	8019fc2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS9_E>
      }
 8019afa:	bf00      	nop
 8019afc:	3708      	adds	r7, #8
 8019afe:	46bd      	mov	sp, r7
 8019b00:	bd80      	pop	{r7, pc}

08019b02 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_M_endEv>:
      _M_end() _GLIBCXX_NOEXCEPT
 8019b02:	b480      	push	{r7}
 8019b04:	b083      	sub	sp, #12
 8019b06:	af00      	add	r7, sp, #0
 8019b08:	6078      	str	r0, [r7, #4]
      { return &this->_M_impl._M_header; }
 8019b0a:	687b      	ldr	r3, [r7, #4]
 8019b0c:	3304      	adds	r3, #4
 8019b0e:	4618      	mov	r0, r3
 8019b10:	370c      	adds	r7, #12
 8019b12:	46bd      	mov	sp, r7
 8019b14:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019b18:	4770      	bx	lr

08019b1a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS9_EPSt18_Rb_tree_node_baseRS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8019b1a:	b590      	push	{r4, r7, lr}
 8019b1c:	b087      	sub	sp, #28
 8019b1e:	af00      	add	r7, sp, #0
 8019b20:	60f8      	str	r0, [r7, #12]
 8019b22:	60b9      	str	r1, [r7, #8]
 8019b24:	607a      	str	r2, [r7, #4]
 8019b26:	603b      	str	r3, [r7, #0]
      while (__x != 0)
 8019b28:	68bb      	ldr	r3, [r7, #8]
 8019b2a:	2b00      	cmp	r3, #0
 8019b2c:	d01b      	beq.n	8019b66 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS9_EPSt18_Rb_tree_node_baseRS7_+0x4c>
	if (!_M_impl._M_key_compare(_S_key(__x), __k))
 8019b2e:	68fc      	ldr	r4, [r7, #12]
 8019b30:	68b8      	ldr	r0, [r7, #8]
 8019b32:	f000 f9e1 	bl	8019ef8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt13_Rb_tree_nodeIS9_E>
 8019b36:	4603      	mov	r3, r0
 8019b38:	683a      	ldr	r2, [r7, #0]
 8019b3a:	4619      	mov	r1, r3
 8019b3c:	4620      	mov	r0, r4
 8019b3e:	f7ec ffc6 	bl	8006ace <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8019b42:	4603      	mov	r3, r0
 8019b44:	f083 0301 	eor.w	r3, r3, #1
 8019b48:	b2db      	uxtb	r3, r3
 8019b4a:	2b00      	cmp	r3, #0
 8019b4c:	d006      	beq.n	8019b5c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS9_EPSt18_Rb_tree_node_baseRS7_+0x42>
	  __y = __x, __x = _S_left(__x);
 8019b4e:	68bb      	ldr	r3, [r7, #8]
 8019b50:	607b      	str	r3, [r7, #4]
 8019b52:	68b8      	ldr	r0, [r7, #8]
 8019b54:	f7ff ffb8 	bl	8019ac8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE7_S_leftEPSt18_Rb_tree_node_base>
 8019b58:	60b8      	str	r0, [r7, #8]
 8019b5a:	e7e5      	b.n	8019b28 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS9_EPSt18_Rb_tree_node_baseRS7_+0xe>
	  __x = _S_right(__x);
 8019b5c:	68b8      	ldr	r0, [r7, #8]
 8019b5e:	f7ff ffa7 	bl	8019ab0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_S_rightEPSt18_Rb_tree_node_base>
 8019b62:	60b8      	str	r0, [r7, #8]
      while (__x != 0)
 8019b64:	e7e0      	b.n	8019b28 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS9_EPSt18_Rb_tree_node_baseRS7_+0xe>
      return iterator(__y);
 8019b66:	f107 0314 	add.w	r3, r7, #20
 8019b6a:	6879      	ldr	r1, [r7, #4]
 8019b6c:	4618      	mov	r0, r3
 8019b6e:	f000 f811 	bl	8019b94 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEC1EPSt18_Rb_tree_node_base>
 8019b72:	697b      	ldr	r3, [r7, #20]
    }
 8019b74:	4618      	mov	r0, r3
 8019b76:	371c      	adds	r7, #28
 8019b78:	46bd      	mov	sp, r7
 8019b7a:	bd90      	pop	{r4, r7, pc}

08019b7c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>:
      _S_key(_Const_Base_ptr __x)
 8019b7c:	b580      	push	{r7, lr}
 8019b7e:	b082      	sub	sp, #8
 8019b80:	af00      	add	r7, sp, #0
 8019b82:	6078      	str	r0, [r7, #4]
      { return _S_key(static_cast<_Const_Link_type>(__x)); }
 8019b84:	6878      	ldr	r0, [r7, #4]
 8019b86:	f000 f9b7 	bl	8019ef8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt13_Rb_tree_nodeIS9_E>
 8019b8a:	4603      	mov	r3, r0
 8019b8c:	4618      	mov	r0, r3
 8019b8e:	3708      	adds	r7, #8
 8019b90:	46bd      	mov	sp, r7
 8019b92:	bd80      	pop	{r7, pc}

08019b94 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEC1EPSt18_Rb_tree_node_base>:
      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 8019b94:	b480      	push	{r7}
 8019b96:	b083      	sub	sp, #12
 8019b98:	af00      	add	r7, sp, #0
 8019b9a:	6078      	str	r0, [r7, #4]
 8019b9c:	6039      	str	r1, [r7, #0]
      : _M_node(__x) { }
 8019b9e:	687b      	ldr	r3, [r7, #4]
 8019ba0:	683a      	ldr	r2, [r7, #0]
 8019ba2:	601a      	str	r2, [r3, #0]
 8019ba4:	687b      	ldr	r3, [r7, #4]
 8019ba6:	4618      	mov	r0, r3
 8019ba8:	370c      	adds	r7, #12
 8019baa:	46bd      	mov	sp, r7
 8019bac:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019bb0:	4770      	bx	lr

08019bb2 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE6_M_ptrEv>:
      _M_ptr() noexcept
 8019bb2:	b580      	push	{r7, lr}
 8019bb4:	b082      	sub	sp, #8
 8019bb6:	af00      	add	r7, sp, #0
 8019bb8:	6078      	str	r0, [r7, #4]
      { return static_cast<_Tp*>(_M_addr()); }
 8019bba:	6878      	ldr	r0, [r7, #4]
 8019bbc:	f000 fa13 	bl	8019fe6 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE7_M_addrEv>
 8019bc0:	4603      	mov	r3, r0
 8019bc2:	4618      	mov	r0, r3
 8019bc4:	3708      	adds	r7, #8
 8019bc6:	46bd      	mov	sp, r7
 8019bc8:	bd80      	pop	{r7, pc}

08019bca <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11lower_boundERS7_>:
      lower_bound(const key_type& __k)
 8019bca:	b590      	push	{r4, r7, lr}
 8019bcc:	b083      	sub	sp, #12
 8019bce:	af00      	add	r7, sp, #0
 8019bd0:	6078      	str	r0, [r7, #4]
 8019bd2:	6039      	str	r1, [r7, #0]
      { return _M_lower_bound(_M_begin(), _M_end(), __k); }
 8019bd4:	6878      	ldr	r0, [r7, #4]
 8019bd6:	f7ff fe6f 	bl	80198b8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_beginEv>
 8019bda:	4604      	mov	r4, r0
 8019bdc:	6878      	ldr	r0, [r7, #4]
 8019bde:	f7ff ff90 	bl	8019b02 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_M_endEv>
 8019be2:	4602      	mov	r2, r0
 8019be4:	683b      	ldr	r3, [r7, #0]
 8019be6:	4621      	mov	r1, r4
 8019be8:	6878      	ldr	r0, [r7, #4]
 8019bea:	f7ff ff96 	bl	8019b1a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS9_EPSt18_Rb_tree_node_baseRS7_>
 8019bee:	4603      	mov	r3, r0
 8019bf0:	4618      	mov	r0, r3
 8019bf2:	370c      	adds	r7, #12
 8019bf4:	46bd      	mov	sp, r7
 8019bf6:	bd90      	pop	{r4, r7, pc}

08019bf8 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8key_compEv>:
      key_comp() const
 8019bf8:	b480      	push	{r7}
 8019bfa:	b083      	sub	sp, #12
 8019bfc:	af00      	add	r7, sp, #0
 8019bfe:	6078      	str	r0, [r7, #4]
      { return _M_impl._M_key_compare; }
 8019c00:	4618      	mov	r0, r3
 8019c02:	370c      	adds	r7, #12
 8019c04:	46bd      	mov	sp, r7
 8019c06:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019c0a:	4770      	bx	lr

08019c0c <_ZNSt11_Tuple_implILj0EJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1ES7_>:
      constexpr _Tuple_impl(const _Head& __head)
 8019c0c:	b580      	push	{r7, lr}
 8019c0e:	b082      	sub	sp, #8
 8019c10:	af00      	add	r7, sp, #0
 8019c12:	6078      	str	r0, [r7, #4]
 8019c14:	6039      	str	r1, [r7, #0]
      : _Base(__head) { }
 8019c16:	687b      	ldr	r3, [r7, #4]
 8019c18:	6839      	ldr	r1, [r7, #0]
 8019c1a:	4618      	mov	r0, r3
 8019c1c:	f000 f9ee 	bl	8019ffc <_ZNSt10_Head_baseILj0ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1ES7_>
 8019c20:	687b      	ldr	r3, [r7, #4]
 8019c22:	4618      	mov	r0, r3
 8019c24:	3708      	adds	r7, #8
 8019c26:	46bd      	mov	sp, r7
 8019c28:	bd80      	pop	{r7, pc}

08019c2a <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8019c2a:	b480      	push	{r7}
 8019c2c:	b083      	sub	sp, #12
 8019c2e:	af00      	add	r7, sp, #0
 8019c30:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8019c32:	687b      	ldr	r3, [r7, #4]
 8019c34:	4618      	mov	r0, r3
 8019c36:	370c      	adds	r7, #12
 8019c38:	46bd      	mov	sp, r7
 8019c3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019c3e:	4770      	bx	lr

08019c40 <_ZSt7forwardISt5tupleIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceISA_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8019c40:	b480      	push	{r7}
 8019c42:	b083      	sub	sp, #12
 8019c44:	af00      	add	r7, sp, #0
 8019c46:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8019c48:	687b      	ldr	r3, [r7, #4]
 8019c4a:	4618      	mov	r0, r3
 8019c4c:	370c      	adds	r7, #12
 8019c4e:	46bd      	mov	sp, r7
 8019c50:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019c54:	4770      	bx	lr

08019c56 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8019c56:	b480      	push	{r7}
 8019c58:	b083      	sub	sp, #12
 8019c5a:	af00      	add	r7, sp, #0
 8019c5c:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8019c5e:	687b      	ldr	r3, [r7, #4]
 8019c60:	4618      	mov	r0, r3
 8019c62:	370c      	adds	r7, #12
 8019c64:	46bd      	mov	sp, r7
 8019c66:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019c6a:	4770      	bx	lr

08019c6c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESK_IJEEEEEPSt13_Rb_tree_nodeIS9_EDpOT_>:
	_M_create_node(_Args&&... __args)
 8019c6c:	b5b0      	push	{r4, r5, r7, lr}
 8019c6e:	b088      	sub	sp, #32
 8019c70:	af02      	add	r7, sp, #8
 8019c72:	60f8      	str	r0, [r7, #12]
 8019c74:	60b9      	str	r1, [r7, #8]
 8019c76:	607a      	str	r2, [r7, #4]
 8019c78:	603b      	str	r3, [r7, #0]
	  _Link_type __tmp = _M_get_node();
 8019c7a:	68f8      	ldr	r0, [r7, #12]
 8019c7c:	f000 f9cd 	bl	801a01a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_get_nodeEv>
 8019c80:	6178      	str	r0, [r7, #20]
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
 8019c82:	68b8      	ldr	r0, [r7, #8]
 8019c84:	f7ff ffd1 	bl	8019c2a <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
 8019c88:	4604      	mov	r4, r0
 8019c8a:	6878      	ldr	r0, [r7, #4]
 8019c8c:	f7ff ffd8 	bl	8019c40 <_ZSt7forwardISt5tupleIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceISA_E4typeE>
 8019c90:	4605      	mov	r5, r0
 8019c92:	6838      	ldr	r0, [r7, #0]
 8019c94:	f7ff ffdf 	bl	8019c56 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
 8019c98:	4603      	mov	r3, r0
 8019c9a:	9300      	str	r3, [sp, #0]
 8019c9c:	462b      	mov	r3, r5
 8019c9e:	4622      	mov	r2, r4
 8019ca0:	6979      	ldr	r1, [r7, #20]
 8019ca2:	68f8      	ldr	r0, [r7, #12]
 8019ca4:	f000 f9ca 	bl	801a03c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESK_IJEEEEEvPSt13_Rb_tree_nodeIS9_EDpOT_>
	  return __tmp;
 8019ca8:	697b      	ldr	r3, [r7, #20]
	}
 8019caa:	4618      	mov	r0, r3
 8019cac:	3718      	adds	r7, #24
 8019cae:	46bd      	mov	sp, r7
 8019cb0:	bdb0      	pop	{r4, r5, r7, pc}

08019cb2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8019cb2:	b590      	push	{r4, r7, lr}
 8019cb4:	b08d      	sub	sp, #52	; 0x34
 8019cb6:	af00      	add	r7, sp, #0
 8019cb8:	60f8      	str	r0, [r7, #12]
 8019cba:	60b9      	str	r1, [r7, #8]
 8019cbc:	607a      	str	r2, [r7, #4]
 8019cbe:	603b      	str	r3, [r7, #0]
      iterator __pos = __position._M_const_cast();
 8019cc0:	1d3b      	adds	r3, r7, #4
 8019cc2:	4618      	mov	r0, r3
 8019cc4:	f000 f9e7 	bl	801a096 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE13_M_const_castEv>
 8019cc8:	4603      	mov	r3, r0
 8019cca:	61bb      	str	r3, [r7, #24]
      if (__pos._M_node == _M_end())
 8019ccc:	69bc      	ldr	r4, [r7, #24]
 8019cce:	68b8      	ldr	r0, [r7, #8]
 8019cd0:	f7ff ff17 	bl	8019b02 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_M_endEv>
 8019cd4:	4603      	mov	r3, r0
 8019cd6:	429c      	cmp	r4, r3
 8019cd8:	bf0c      	ite	eq
 8019cda:	2301      	moveq	r3, #1
 8019cdc:	2300      	movne	r3, #0
 8019cde:	b2db      	uxtb	r3, r3
 8019ce0:	2b00      	cmp	r3, #0
 8019ce2:	d030      	beq.n	8019d46 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x94>
	  if (size() > 0
 8019ce4:	68b8      	ldr	r0, [r7, #8]
 8019ce6:	f000 f9e7 	bl	801a0b8 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE4sizeEv>
 8019cea:	4603      	mov	r3, r0
	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
 8019cec:	2b00      	cmp	r3, #0
 8019cee:	d013      	beq.n	8019d18 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x66>
 8019cf0:	68bc      	ldr	r4, [r7, #8]
 8019cf2:	68b8      	ldr	r0, [r7, #8]
 8019cf4:	f000 f9ec 	bl	801a0d0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_rightmostEv>
 8019cf8:	4603      	mov	r3, r0
 8019cfa:	681b      	ldr	r3, [r3, #0]
 8019cfc:	4618      	mov	r0, r3
 8019cfe:	f7ff ff3d 	bl	8019b7c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8019d02:	4603      	mov	r3, r0
 8019d04:	683a      	ldr	r2, [r7, #0]
 8019d06:	4619      	mov	r1, r3
 8019d08:	4620      	mov	r0, r4
 8019d0a:	f7ec fee0 	bl	8006ace <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8019d0e:	4603      	mov	r3, r0
 8019d10:	2b00      	cmp	r3, #0
 8019d12:	d001      	beq.n	8019d18 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x66>
 8019d14:	2301      	movs	r3, #1
 8019d16:	e000      	b.n	8019d1a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x68>
 8019d18:	2300      	movs	r3, #0
	  if (size() > 0
 8019d1a:	2b00      	cmp	r3, #0
 8019d1c:	d00c      	beq.n	8019d38 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x86>
	    return _Res(0, _M_rightmost());
 8019d1e:	2300      	movs	r3, #0
 8019d20:	61fb      	str	r3, [r7, #28]
 8019d22:	68b8      	ldr	r0, [r7, #8]
 8019d24:	f000 f9d4 	bl	801a0d0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_rightmostEv>
 8019d28:	4602      	mov	r2, r0
 8019d2a:	f107 031c 	add.w	r3, r7, #28
 8019d2e:	4619      	mov	r1, r3
 8019d30:	68f8      	ldr	r0, [r7, #12]
 8019d32:	f7ec fd4c 	bl	80067ce <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 8019d36:	e0db      	b.n	8019ef0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
	    return _M_get_insert_unique_pos(__k);
 8019d38:	68fb      	ldr	r3, [r7, #12]
 8019d3a:	683a      	ldr	r2, [r7, #0]
 8019d3c:	68b9      	ldr	r1, [r7, #8]
 8019d3e:	4618      	mov	r0, r3
 8019d40:	f000 f9d2 	bl	801a0e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_>
 8019d44:	e0d4      	b.n	8019ef0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
      else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
 8019d46:	68bc      	ldr	r4, [r7, #8]
 8019d48:	69bb      	ldr	r3, [r7, #24]
 8019d4a:	4618      	mov	r0, r3
 8019d4c:	f7ff ff16 	bl	8019b7c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8019d50:	4603      	mov	r3, r0
 8019d52:	461a      	mov	r2, r3
 8019d54:	6839      	ldr	r1, [r7, #0]
 8019d56:	4620      	mov	r0, r4
 8019d58:	f7ec feb9 	bl	8006ace <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8019d5c:	4603      	mov	r3, r0
 8019d5e:	2b00      	cmp	r3, #0
 8019d60:	d057      	beq.n	8019e12 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x160>
	  iterator __before = __pos;
 8019d62:	69bb      	ldr	r3, [r7, #24]
 8019d64:	617b      	str	r3, [r7, #20]
	  if (__pos._M_node == _M_leftmost()) // begin()
 8019d66:	69bc      	ldr	r4, [r7, #24]
 8019d68:	68b8      	ldr	r0, [r7, #8]
 8019d6a:	f000 fa42 	bl	801a1f2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_leftmostEv>
 8019d6e:	4603      	mov	r3, r0
 8019d70:	681b      	ldr	r3, [r3, #0]
 8019d72:	429c      	cmp	r4, r3
 8019d74:	bf0c      	ite	eq
 8019d76:	2301      	moveq	r3, #1
 8019d78:	2300      	movne	r3, #0
 8019d7a:	b2db      	uxtb	r3, r3
 8019d7c:	2b00      	cmp	r3, #0
 8019d7e:	d00d      	beq.n	8019d9c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0xea>
	    return _Res(_M_leftmost(), _M_leftmost());
 8019d80:	68b8      	ldr	r0, [r7, #8]
 8019d82:	f000 fa36 	bl	801a1f2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_leftmostEv>
 8019d86:	4604      	mov	r4, r0
 8019d88:	68b8      	ldr	r0, [r7, #8]
 8019d8a:	f000 fa32 	bl	801a1f2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_leftmostEv>
 8019d8e:	4603      	mov	r3, r0
 8019d90:	461a      	mov	r2, r3
 8019d92:	4621      	mov	r1, r4
 8019d94:	68f8      	ldr	r0, [r7, #12]
 8019d96:	f7ec fdc1 	bl	800691c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
 8019d9a:	e0a9      	b.n	8019ef0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
 8019d9c:	68bc      	ldr	r4, [r7, #8]
 8019d9e:	f107 0314 	add.w	r3, r7, #20
 8019da2:	4618      	mov	r0, r3
 8019da4:	f000 fa31 	bl	801a20a <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEmmEv>
 8019da8:	4603      	mov	r3, r0
 8019daa:	681b      	ldr	r3, [r3, #0]
 8019dac:	4618      	mov	r0, r3
 8019dae:	f7ff fee5 	bl	8019b7c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8019db2:	4603      	mov	r3, r0
 8019db4:	683a      	ldr	r2, [r7, #0]
 8019db6:	4619      	mov	r1, r3
 8019db8:	4620      	mov	r0, r4
 8019dba:	f7ec fe88 	bl	8006ace <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8019dbe:	4603      	mov	r3, r0
 8019dc0:	2b00      	cmp	r3, #0
 8019dc2:	d01f      	beq.n	8019e04 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x152>
	      if (_S_right(__before._M_node) == 0)
 8019dc4:	697b      	ldr	r3, [r7, #20]
 8019dc6:	4618      	mov	r0, r3
 8019dc8:	f7ff fe72 	bl	8019ab0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_S_rightEPSt18_Rb_tree_node_base>
 8019dcc:	4603      	mov	r3, r0
 8019dce:	2b00      	cmp	r3, #0
 8019dd0:	bf0c      	ite	eq
 8019dd2:	2301      	moveq	r3, #1
 8019dd4:	2300      	movne	r3, #0
 8019dd6:	b2db      	uxtb	r3, r3
 8019dd8:	2b00      	cmp	r3, #0
 8019dda:	d00a      	beq.n	8019df2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x140>
		return _Res(0, __before._M_node);
 8019ddc:	2300      	movs	r3, #0
 8019dde:	623b      	str	r3, [r7, #32]
 8019de0:	f107 0214 	add.w	r2, r7, #20
 8019de4:	f107 0320 	add.w	r3, r7, #32
 8019de8:	4619      	mov	r1, r3
 8019dea:	68f8      	ldr	r0, [r7, #12]
 8019dec:	f7ec fcef 	bl	80067ce <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 8019df0:	e07e      	b.n	8019ef0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
		return _Res(__pos._M_node, __pos._M_node);
 8019df2:	f107 0218 	add.w	r2, r7, #24
 8019df6:	f107 0318 	add.w	r3, r7, #24
 8019dfa:	4619      	mov	r1, r3
 8019dfc:	68f8      	ldr	r0, [r7, #12]
 8019dfe:	f7ec fd8d 	bl	800691c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
 8019e02:	e075      	b.n	8019ef0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
	    return _M_get_insert_unique_pos(__k);
 8019e04:	68fb      	ldr	r3, [r7, #12]
 8019e06:	683a      	ldr	r2, [r7, #0]
 8019e08:	68b9      	ldr	r1, [r7, #8]
 8019e0a:	4618      	mov	r0, r3
 8019e0c:	f000 f96c 	bl	801a0e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_>
 8019e10:	e06e      	b.n	8019ef0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
      else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
 8019e12:	68bc      	ldr	r4, [r7, #8]
 8019e14:	69bb      	ldr	r3, [r7, #24]
 8019e16:	4618      	mov	r0, r3
 8019e18:	f7ff feb0 	bl	8019b7c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8019e1c:	4603      	mov	r3, r0
 8019e1e:	683a      	ldr	r2, [r7, #0]
 8019e20:	4619      	mov	r1, r3
 8019e22:	4620      	mov	r0, r4
 8019e24:	f7ec fe53 	bl	8006ace <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8019e28:	4603      	mov	r3, r0
 8019e2a:	2b00      	cmp	r3, #0
 8019e2c:	d056      	beq.n	8019edc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x22a>
	  iterator __after = __pos;
 8019e2e:	69bb      	ldr	r3, [r7, #24]
 8019e30:	613b      	str	r3, [r7, #16]
	  if (__pos._M_node == _M_rightmost())
 8019e32:	69bc      	ldr	r4, [r7, #24]
 8019e34:	68b8      	ldr	r0, [r7, #8]
 8019e36:	f000 f94b 	bl	801a0d0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_rightmostEv>
 8019e3a:	4603      	mov	r3, r0
 8019e3c:	681b      	ldr	r3, [r3, #0]
 8019e3e:	429c      	cmp	r4, r3
 8019e40:	bf0c      	ite	eq
 8019e42:	2301      	moveq	r3, #1
 8019e44:	2300      	movne	r3, #0
 8019e46:	b2db      	uxtb	r3, r3
 8019e48:	2b00      	cmp	r3, #0
 8019e4a:	d00c      	beq.n	8019e66 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x1b4>
	    return _Res(0, _M_rightmost());
 8019e4c:	2300      	movs	r3, #0
 8019e4e:	627b      	str	r3, [r7, #36]	; 0x24
 8019e50:	68b8      	ldr	r0, [r7, #8]
 8019e52:	f000 f93d 	bl	801a0d0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_rightmostEv>
 8019e56:	4602      	mov	r2, r0
 8019e58:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8019e5c:	4619      	mov	r1, r3
 8019e5e:	68f8      	ldr	r0, [r7, #12]
 8019e60:	f7ec fcb5 	bl	80067ce <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 8019e64:	e044      	b.n	8019ef0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
 8019e66:	68bc      	ldr	r4, [r7, #8]
 8019e68:	f107 0310 	add.w	r3, r7, #16
 8019e6c:	4618      	mov	r0, r3
 8019e6e:	f7ff fcc2 	bl	80197f6 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEppEv>
 8019e72:	4603      	mov	r3, r0
 8019e74:	681b      	ldr	r3, [r3, #0]
 8019e76:	4618      	mov	r0, r3
 8019e78:	f7ff fe80 	bl	8019b7c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8019e7c:	4603      	mov	r3, r0
 8019e7e:	461a      	mov	r2, r3
 8019e80:	6839      	ldr	r1, [r7, #0]
 8019e82:	4620      	mov	r0, r4
 8019e84:	f7ec fe23 	bl	8006ace <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8019e88:	4603      	mov	r3, r0
 8019e8a:	2b00      	cmp	r3, #0
 8019e8c:	d01f      	beq.n	8019ece <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x21c>
	      if (_S_right(__pos._M_node) == 0)
 8019e8e:	69bb      	ldr	r3, [r7, #24]
 8019e90:	4618      	mov	r0, r3
 8019e92:	f7ff fe0d 	bl	8019ab0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_S_rightEPSt18_Rb_tree_node_base>
 8019e96:	4603      	mov	r3, r0
 8019e98:	2b00      	cmp	r3, #0
 8019e9a:	bf0c      	ite	eq
 8019e9c:	2301      	moveq	r3, #1
 8019e9e:	2300      	movne	r3, #0
 8019ea0:	b2db      	uxtb	r3, r3
 8019ea2:	2b00      	cmp	r3, #0
 8019ea4:	d00a      	beq.n	8019ebc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x20a>
		return _Res(0, __pos._M_node);
 8019ea6:	2300      	movs	r3, #0
 8019ea8:	62bb      	str	r3, [r7, #40]	; 0x28
 8019eaa:	f107 0218 	add.w	r2, r7, #24
 8019eae:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8019eb2:	4619      	mov	r1, r3
 8019eb4:	68f8      	ldr	r0, [r7, #12]
 8019eb6:	f7ec fc8a 	bl	80067ce <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 8019eba:	e019      	b.n	8019ef0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
		return _Res(__after._M_node, __after._M_node);
 8019ebc:	f107 0210 	add.w	r2, r7, #16
 8019ec0:	f107 0310 	add.w	r3, r7, #16
 8019ec4:	4619      	mov	r1, r3
 8019ec6:	68f8      	ldr	r0, [r7, #12]
 8019ec8:	f7ec fd28 	bl	800691c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
 8019ecc:	e010      	b.n	8019ef0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
	    return _M_get_insert_unique_pos(__k);
 8019ece:	68fb      	ldr	r3, [r7, #12]
 8019ed0:	683a      	ldr	r2, [r7, #0]
 8019ed2:	68b9      	ldr	r1, [r7, #8]
 8019ed4:	4618      	mov	r0, r3
 8019ed6:	f000 f907 	bl	801a0e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_>
 8019eda:	e009      	b.n	8019ef0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
	return _Res(__pos._M_node, 0);
 8019edc:	2300      	movs	r3, #0
 8019ede:	62fb      	str	r3, [r7, #44]	; 0x2c
 8019ee0:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 8019ee4:	f107 0318 	add.w	r3, r7, #24
 8019ee8:	4619      	mov	r1, r3
 8019eea:	68f8      	ldr	r0, [r7, #12]
 8019eec:	f7ec fd51 	bl	8006992 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_>
    }
 8019ef0:	68f8      	ldr	r0, [r7, #12]
 8019ef2:	3734      	adds	r7, #52	; 0x34
 8019ef4:	46bd      	mov	sp, r7
 8019ef6:	bd90      	pop	{r4, r7, pc}

08019ef8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt13_Rb_tree_nodeIS9_E>:
      _S_key(_Const_Link_type __x)
 8019ef8:	b580      	push	{r7, lr}
 8019efa:	b084      	sub	sp, #16
 8019efc:	af00      	add	r7, sp, #0
 8019efe:	6078      	str	r0, [r7, #4]
	return _KeyOfValue()(*__x->_M_valptr());
 8019f00:	6878      	ldr	r0, [r7, #4]
 8019f02:	f000 f993 	bl	801a22c <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE9_M_valptrEv>
 8019f06:	4602      	mov	r2, r0
 8019f08:	f107 030c 	add.w	r3, r7, #12
 8019f0c:	4611      	mov	r1, r2
 8019f0e:	4618      	mov	r0, r3
 8019f10:	f000 f99a 	bl	801a248 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEclERKS9_>
 8019f14:	4603      	mov	r3, r0
      }
 8019f16:	4618      	mov	r0, r3
 8019f18:	3710      	adds	r7, #16
 8019f1a:	46bd      	mov	sp, r7
 8019f1c:	bd80      	pop	{r7, pc}

08019f1e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSH_PSt13_Rb_tree_nodeIS9_E>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8019f1e:	b5b0      	push	{r4, r5, r7, lr}
 8019f20:	b086      	sub	sp, #24
 8019f22:	af00      	add	r7, sp, #0
 8019f24:	60f8      	str	r0, [r7, #12]
 8019f26:	60b9      	str	r1, [r7, #8]
 8019f28:	607a      	str	r2, [r7, #4]
 8019f2a:	603b      	str	r3, [r7, #0]
			    || _M_impl._M_key_compare(_S_key(__z),
 8019f2c:	68bb      	ldr	r3, [r7, #8]
 8019f2e:	2b00      	cmp	r3, #0
 8019f30:	d117      	bne.n	8019f62 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSH_PSt13_Rb_tree_nodeIS9_E+0x44>
      bool __insert_left = (__x != 0 || __p == _M_end()
 8019f32:	68f8      	ldr	r0, [r7, #12]
 8019f34:	f7ff fde5 	bl	8019b02 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_M_endEv>
 8019f38:	4602      	mov	r2, r0
 8019f3a:	687b      	ldr	r3, [r7, #4]
 8019f3c:	4293      	cmp	r3, r2
 8019f3e:	d010      	beq.n	8019f62 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSH_PSt13_Rb_tree_nodeIS9_E+0x44>
			    || _M_impl._M_key_compare(_S_key(__z),
 8019f40:	68fc      	ldr	r4, [r7, #12]
 8019f42:	6838      	ldr	r0, [r7, #0]
 8019f44:	f7ff ffd8 	bl	8019ef8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt13_Rb_tree_nodeIS9_E>
 8019f48:	4605      	mov	r5, r0
 8019f4a:	6878      	ldr	r0, [r7, #4]
 8019f4c:	f7ff fe16 	bl	8019b7c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8019f50:	4603      	mov	r3, r0
 8019f52:	461a      	mov	r2, r3
 8019f54:	4629      	mov	r1, r5
 8019f56:	4620      	mov	r0, r4
 8019f58:	f7ec fdb9 	bl	8006ace <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8019f5c:	4603      	mov	r3, r0
 8019f5e:	2b00      	cmp	r3, #0
 8019f60:	d001      	beq.n	8019f66 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSH_PSt13_Rb_tree_nodeIS9_E+0x48>
 8019f62:	2301      	movs	r3, #1
 8019f64:	e000      	b.n	8019f68 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSH_PSt13_Rb_tree_nodeIS9_E+0x4a>
 8019f66:	2300      	movs	r3, #0
      bool __insert_left = (__x != 0 || __p == _M_end()
 8019f68:	75fb      	strb	r3, [r7, #23]
				    this->_M_impl._M_header);
 8019f6a:	68fb      	ldr	r3, [r7, #12]
 8019f6c:	3304      	adds	r3, #4
      _Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
 8019f6e:	7df8      	ldrb	r0, [r7, #23]
 8019f70:	687a      	ldr	r2, [r7, #4]
 8019f72:	6839      	ldr	r1, [r7, #0]
 8019f74:	f009 fb28 	bl	80235c8 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
      ++_M_impl._M_node_count;
 8019f78:	68fb      	ldr	r3, [r7, #12]
 8019f7a:	695b      	ldr	r3, [r3, #20]
 8019f7c:	1c5a      	adds	r2, r3, #1
 8019f7e:	68fb      	ldr	r3, [r7, #12]
 8019f80:	615a      	str	r2, [r3, #20]
      return iterator(__z);
 8019f82:	f107 0310 	add.w	r3, r7, #16
 8019f86:	6839      	ldr	r1, [r7, #0]
 8019f88:	4618      	mov	r0, r3
 8019f8a:	f7ff fe03 	bl	8019b94 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEC1EPSt18_Rb_tree_node_base>
 8019f8e:	693b      	ldr	r3, [r7, #16]
    }
 8019f90:	4618      	mov	r0, r3
 8019f92:	3718      	adds	r7, #24
 8019f94:	46bd      	mov	sp, r7
 8019f96:	bdb0      	pop	{r4, r5, r7, pc}

08019f98 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS9_E>:
      _M_destroy_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 8019f98:	b590      	push	{r4, r7, lr}
 8019f9a:	b083      	sub	sp, #12
 8019f9c:	af00      	add	r7, sp, #0
 8019f9e:	6078      	str	r0, [r7, #4]
 8019fa0:	6039      	str	r1, [r7, #0]
	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
 8019fa2:	6878      	ldr	r0, [r7, #4]
 8019fa4:	f000 f95c 	bl	801a260 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE21_M_get_Node_allocatorEv>
 8019fa8:	4604      	mov	r4, r0
 8019faa:	6838      	ldr	r0, [r7, #0]
 8019fac:	f7ff fcdd 	bl	801996a <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE9_M_valptrEv>
 8019fb0:	4603      	mov	r3, r0
 8019fb2:	4619      	mov	r1, r3
 8019fb4:	4620      	mov	r0, r4
 8019fb6:	f000 f95e 	bl	801a276 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEE7destroyISA_EEvRSC_PT_>
      }
 8019fba:	bf00      	nop
 8019fbc:	370c      	adds	r7, #12
 8019fbe:	46bd      	mov	sp, r7
 8019fc0:	bd90      	pop	{r4, r7, pc}

08019fc2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS9_E>:
      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 8019fc2:	b580      	push	{r7, lr}
 8019fc4:	b082      	sub	sp, #8
 8019fc6:	af00      	add	r7, sp, #0
 8019fc8:	6078      	str	r0, [r7, #4]
 8019fca:	6039      	str	r1, [r7, #0]
      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
 8019fcc:	6878      	ldr	r0, [r7, #4]
 8019fce:	f000 f947 	bl	801a260 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE21_M_get_Node_allocatorEv>
 8019fd2:	4603      	mov	r3, r0
 8019fd4:	2201      	movs	r2, #1
 8019fd6:	6839      	ldr	r1, [r7, #0]
 8019fd8:	4618      	mov	r0, r3
 8019fda:	f000 f959 	bl	801a290 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEE10deallocateERSC_PSB_j>
 8019fde:	bf00      	nop
 8019fe0:	3708      	adds	r7, #8
 8019fe2:	46bd      	mov	sp, r7
 8019fe4:	bd80      	pop	{r7, pc}

08019fe6 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE7_M_addrEv>:
      _M_addr() noexcept
 8019fe6:	b480      	push	{r7}
 8019fe8:	b083      	sub	sp, #12
 8019fea:	af00      	add	r7, sp, #0
 8019fec:	6078      	str	r0, [r7, #4]
      { return static_cast<void*>(&_M_storage); }
 8019fee:	687b      	ldr	r3, [r7, #4]
 8019ff0:	4618      	mov	r0, r3
 8019ff2:	370c      	adds	r7, #12
 8019ff4:	46bd      	mov	sp, r7
 8019ff6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019ffa:	4770      	bx	lr

08019ffc <_ZNSt10_Head_baseILj0ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1ES7_>:
      constexpr _Head_base(const _Head& __h)
 8019ffc:	b480      	push	{r7}
 8019ffe:	b083      	sub	sp, #12
 801a000:	af00      	add	r7, sp, #0
 801a002:	6078      	str	r0, [r7, #4]
 801a004:	6039      	str	r1, [r7, #0]
      : _M_head_impl(__h) { }
 801a006:	687b      	ldr	r3, [r7, #4]
 801a008:	683a      	ldr	r2, [r7, #0]
 801a00a:	601a      	str	r2, [r3, #0]
 801a00c:	687b      	ldr	r3, [r7, #4]
 801a00e:	4618      	mov	r0, r3
 801a010:	370c      	adds	r7, #12
 801a012:	46bd      	mov	sp, r7
 801a014:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a018:	4770      	bx	lr

0801a01a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_get_nodeEv>:
      _M_get_node()
 801a01a:	b580      	push	{r7, lr}
 801a01c:	b082      	sub	sp, #8
 801a01e:	af00      	add	r7, sp, #0
 801a020:	6078      	str	r0, [r7, #4]
      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
 801a022:	6878      	ldr	r0, [r7, #4]
 801a024:	f000 f91c 	bl	801a260 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE21_M_get_Node_allocatorEv>
 801a028:	4603      	mov	r3, r0
 801a02a:	2101      	movs	r1, #1
 801a02c:	4618      	mov	r0, r3
 801a02e:	f000 f93e 	bl	801a2ae <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEE8allocateERSC_j>
 801a032:	4603      	mov	r3, r0
 801a034:	4618      	mov	r0, r3
 801a036:	3708      	adds	r7, #8
 801a038:	46bd      	mov	sp, r7
 801a03a:	bd80      	pop	{r7, pc}

0801a03c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESK_IJEEEEEvPSt13_Rb_tree_nodeIS9_EDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
 801a03c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801a040:	b086      	sub	sp, #24
 801a042:	af02      	add	r7, sp, #8
 801a044:	60f8      	str	r0, [r7, #12]
 801a046:	60b9      	str	r1, [r7, #8]
 801a048:	607a      	str	r2, [r7, #4]
 801a04a:	603b      	str	r3, [r7, #0]
	      ::new(__node) _Rb_tree_node<_Val>;
 801a04c:	68bb      	ldr	r3, [r7, #8]
 801a04e:	4619      	mov	r1, r3
 801a050:	2048      	movs	r0, #72	; 0x48
 801a052:	f7e7 f802 	bl	800105a <_ZnwjPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
 801a056:	68f8      	ldr	r0, [r7, #12]
 801a058:	f000 f902 	bl	801a260 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE21_M_get_Node_allocatorEv>
 801a05c:	4604      	mov	r4, r0
 801a05e:	68b8      	ldr	r0, [r7, #8]
 801a060:	f7ff fc83 	bl	801996a <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE9_M_valptrEv>
 801a064:	4605      	mov	r5, r0
 801a066:	6878      	ldr	r0, [r7, #4]
 801a068:	f7ff fddf 	bl	8019c2a <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
 801a06c:	4606      	mov	r6, r0
 801a06e:	6838      	ldr	r0, [r7, #0]
 801a070:	f7ff fde6 	bl	8019c40 <_ZSt7forwardISt5tupleIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceISA_E4typeE>
 801a074:	4680      	mov	r8, r0
 801a076:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 801a078:	f7ff fded 	bl	8019c56 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
 801a07c:	4603      	mov	r3, r0
 801a07e:	9300      	str	r3, [sp, #0]
 801a080:	4643      	mov	r3, r8
 801a082:	4632      	mov	r2, r6
 801a084:	4629      	mov	r1, r5
 801a086:	4620      	mov	r0, r4
 801a088:	f000 f920 	bl	801a2cc <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEE9constructISA_JRKSt21piecewise_construct_tSt5tupleIJRS8_EESI_IJEEEEEvRSC_PT_DpOT0_>
	}
 801a08c:	bf00      	nop
 801a08e:	3710      	adds	r7, #16
 801a090:	46bd      	mov	sp, r7
 801a092:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801a096 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE13_M_const_castEv>:
      _M_const_cast() const _GLIBCXX_NOEXCEPT
 801a096:	b580      	push	{r7, lr}
 801a098:	b084      	sub	sp, #16
 801a09a:	af00      	add	r7, sp, #0
 801a09c:	6078      	str	r0, [r7, #4]
      { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
 801a09e:	687b      	ldr	r3, [r7, #4]
 801a0a0:	681a      	ldr	r2, [r3, #0]
 801a0a2:	f107 030c 	add.w	r3, r7, #12
 801a0a6:	4611      	mov	r1, r2
 801a0a8:	4618      	mov	r0, r3
 801a0aa:	f7ff fd73 	bl	8019b94 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEC1EPSt18_Rb_tree_node_base>
 801a0ae:	68fb      	ldr	r3, [r7, #12]
 801a0b0:	4618      	mov	r0, r3
 801a0b2:	3710      	adds	r7, #16
 801a0b4:	46bd      	mov	sp, r7
 801a0b6:	bd80      	pop	{r7, pc}

0801a0b8 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 801a0b8:	b480      	push	{r7}
 801a0ba:	b083      	sub	sp, #12
 801a0bc:	af00      	add	r7, sp, #0
 801a0be:	6078      	str	r0, [r7, #4]
      { return _M_impl._M_node_count; }
 801a0c0:	687b      	ldr	r3, [r7, #4]
 801a0c2:	695b      	ldr	r3, [r3, #20]
 801a0c4:	4618      	mov	r0, r3
 801a0c6:	370c      	adds	r7, #12
 801a0c8:	46bd      	mov	sp, r7
 801a0ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a0ce:	4770      	bx	lr

0801a0d0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_rightmostEv>:
      _M_rightmost() _GLIBCXX_NOEXCEPT
 801a0d0:	b480      	push	{r7}
 801a0d2:	b083      	sub	sp, #12
 801a0d4:	af00      	add	r7, sp, #0
 801a0d6:	6078      	str	r0, [r7, #4]
      { return this->_M_impl._M_header._M_right; }
 801a0d8:	687b      	ldr	r3, [r7, #4]
 801a0da:	3310      	adds	r3, #16
 801a0dc:	4618      	mov	r0, r3
 801a0de:	370c      	adds	r7, #12
 801a0e0:	46bd      	mov	sp, r7
 801a0e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a0e6:	4770      	bx	lr

0801a0e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 801a0e8:	b590      	push	{r4, r7, lr}
 801a0ea:	b08b      	sub	sp, #44	; 0x2c
 801a0ec:	af00      	add	r7, sp, #0
 801a0ee:	60f8      	str	r0, [r7, #12]
 801a0f0:	60b9      	str	r1, [r7, #8]
 801a0f2:	607a      	str	r2, [r7, #4]
      _Link_type __x = _M_begin();
 801a0f4:	68b8      	ldr	r0, [r7, #8]
 801a0f6:	f7ff fbdf 	bl	80198b8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_beginEv>
 801a0fa:	4603      	mov	r3, r0
 801a0fc:	61bb      	str	r3, [r7, #24]
      _Base_ptr __y = _M_end();
 801a0fe:	68b8      	ldr	r0, [r7, #8]
 801a100:	f7ff fcff 	bl	8019b02 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_M_endEv>
 801a104:	4603      	mov	r3, r0
 801a106:	617b      	str	r3, [r7, #20]
      bool __comp = true;
 801a108:	2301      	movs	r3, #1
 801a10a:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
      while (__x != 0)
 801a10e:	69bb      	ldr	r3, [r7, #24]
 801a110:	2b00      	cmp	r3, #0
 801a112:	d020      	beq.n	801a156 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0x6e>
	  __y = __x;
 801a114:	69bb      	ldr	r3, [r7, #24]
 801a116:	617b      	str	r3, [r7, #20]
	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
 801a118:	68bc      	ldr	r4, [r7, #8]
 801a11a:	69bb      	ldr	r3, [r7, #24]
 801a11c:	4618      	mov	r0, r3
 801a11e:	f7ff feeb 	bl	8019ef8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt13_Rb_tree_nodeIS9_E>
 801a122:	4603      	mov	r3, r0
 801a124:	461a      	mov	r2, r3
 801a126:	6879      	ldr	r1, [r7, #4]
 801a128:	4620      	mov	r0, r4
 801a12a:	f7ec fcd0 	bl	8006ace <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 801a12e:	4603      	mov	r3, r0
 801a130:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
	  __x = __comp ? _S_left(__x) : _S_right(__x);
 801a134:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 801a138:	2b00      	cmp	r3, #0
 801a13a:	d005      	beq.n	801a148 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0x60>
 801a13c:	69bb      	ldr	r3, [r7, #24]
 801a13e:	4618      	mov	r0, r3
 801a140:	f7ff fcc2 	bl	8019ac8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE7_S_leftEPSt18_Rb_tree_node_base>
 801a144:	4603      	mov	r3, r0
 801a146:	e004      	b.n	801a152 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0x6a>
 801a148:	69bb      	ldr	r3, [r7, #24]
 801a14a:	4618      	mov	r0, r3
 801a14c:	f7ff fcb0 	bl	8019ab0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_S_rightEPSt18_Rb_tree_node_base>
 801a150:	4603      	mov	r3, r0
 801a152:	61bb      	str	r3, [r7, #24]
      while (__x != 0)
 801a154:	e7db      	b.n	801a10e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0x26>
      iterator __j = iterator(__y);
 801a156:	697a      	ldr	r2, [r7, #20]
 801a158:	f107 0310 	add.w	r3, r7, #16
 801a15c:	4611      	mov	r1, r2
 801a15e:	4618      	mov	r0, r3
 801a160:	f7ff fd18 	bl	8019b94 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEC1EPSt18_Rb_tree_node_base>
      if (__comp)
 801a164:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 801a168:	2b00      	cmp	r3, #0
 801a16a:	d01d      	beq.n	801a1a8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0xc0>
	  if (__j == begin())
 801a16c:	68b8      	ldr	r0, [r7, #8]
 801a16e:	f7ff fc83 	bl	8019a78 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE5beginEv>
 801a172:	4603      	mov	r3, r0
 801a174:	61fb      	str	r3, [r7, #28]
 801a176:	f107 021c 	add.w	r2, r7, #28
 801a17a:	f107 0310 	add.w	r3, r7, #16
 801a17e:	4611      	mov	r1, r2
 801a180:	4618      	mov	r0, r3
 801a182:	f7ff fa98 	bl	80196b6 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEESC_>
 801a186:	4603      	mov	r3, r0
 801a188:	2b00      	cmp	r3, #0
 801a18a:	d008      	beq.n	801a19e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0xb6>
	    return _Res(__x, __y);
 801a18c:	f107 0214 	add.w	r2, r7, #20
 801a190:	f107 0318 	add.w	r3, r7, #24
 801a194:	4619      	mov	r1, r3
 801a196:	68f8      	ldr	r0, [r7, #12]
 801a198:	f000 f8b6 	bl	801a308 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEERS1_Lb1EEEOT_OT0_>
 801a19c:	e025      	b.n	801a1ea <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0x102>
	    --__j;
 801a19e:	f107 0310 	add.w	r3, r7, #16
 801a1a2:	4618      	mov	r0, r3
 801a1a4:	f000 f831 	bl	801a20a <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEmmEv>
      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
 801a1a8:	68bc      	ldr	r4, [r7, #8]
 801a1aa:	693b      	ldr	r3, [r7, #16]
 801a1ac:	4618      	mov	r0, r3
 801a1ae:	f7ff fce5 	bl	8019b7c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 801a1b2:	4603      	mov	r3, r0
 801a1b4:	687a      	ldr	r2, [r7, #4]
 801a1b6:	4619      	mov	r1, r3
 801a1b8:	4620      	mov	r0, r4
 801a1ba:	f7ec fc88 	bl	8006ace <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 801a1be:	4603      	mov	r3, r0
 801a1c0:	2b00      	cmp	r3, #0
 801a1c2:	d008      	beq.n	801a1d6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0xee>
	return _Res(__x, __y);
 801a1c4:	f107 0214 	add.w	r2, r7, #20
 801a1c8:	f107 0318 	add.w	r3, r7, #24
 801a1cc:	4619      	mov	r1, r3
 801a1ce:	68f8      	ldr	r0, [r7, #12]
 801a1d0:	f000 f89a 	bl	801a308 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEERS1_Lb1EEEOT_OT0_>
 801a1d4:	e009      	b.n	801a1ea <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0x102>
      return _Res(__j._M_node, 0);
 801a1d6:	2300      	movs	r3, #0
 801a1d8:	623b      	str	r3, [r7, #32]
 801a1da:	f107 0220 	add.w	r2, r7, #32
 801a1de:	f107 0310 	add.w	r3, r7, #16
 801a1e2:	4619      	mov	r1, r3
 801a1e4:	68f8      	ldr	r0, [r7, #12]
 801a1e6:	f7ec fbd4 	bl	8006992 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_>
    }
 801a1ea:	68f8      	ldr	r0, [r7, #12]
 801a1ec:	372c      	adds	r7, #44	; 0x2c
 801a1ee:	46bd      	mov	sp, r7
 801a1f0:	bd90      	pop	{r4, r7, pc}

0801a1f2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_leftmostEv>:
      _M_leftmost() _GLIBCXX_NOEXCEPT
 801a1f2:	b480      	push	{r7}
 801a1f4:	b083      	sub	sp, #12
 801a1f6:	af00      	add	r7, sp, #0
 801a1f8:	6078      	str	r0, [r7, #4]
      { return this->_M_impl._M_header._M_left; }
 801a1fa:	687b      	ldr	r3, [r7, #4]
 801a1fc:	330c      	adds	r3, #12
 801a1fe:	4618      	mov	r0, r3
 801a200:	370c      	adds	r7, #12
 801a202:	46bd      	mov	sp, r7
 801a204:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a208:	4770      	bx	lr

0801a20a <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEmmEv>:
      operator--() _GLIBCXX_NOEXCEPT
 801a20a:	b580      	push	{r7, lr}
 801a20c:	b082      	sub	sp, #8
 801a20e:	af00      	add	r7, sp, #0
 801a210:	6078      	str	r0, [r7, #4]
	_M_node = _Rb_tree_decrement(_M_node);
 801a212:	687b      	ldr	r3, [r7, #4]
 801a214:	681b      	ldr	r3, [r3, #0]
 801a216:	4618      	mov	r0, r3
 801a218:	f009 f9d4 	bl	80235c4 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 801a21c:	4602      	mov	r2, r0
 801a21e:	687b      	ldr	r3, [r7, #4]
 801a220:	601a      	str	r2, [r3, #0]
	return *this;
 801a222:	687b      	ldr	r3, [r7, #4]
      }
 801a224:	4618      	mov	r0, r3
 801a226:	3708      	adds	r7, #8
 801a228:	46bd      	mov	sp, r7
 801a22a:	bd80      	pop	{r7, pc}

0801a22c <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE9_M_valptrEv>:
      _M_valptr() const
 801a22c:	b580      	push	{r7, lr}
 801a22e:	b082      	sub	sp, #8
 801a230:	af00      	add	r7, sp, #0
 801a232:	6078      	str	r0, [r7, #4]
      { return _M_storage._M_ptr(); }
 801a234:	687b      	ldr	r3, [r7, #4]
 801a236:	3310      	adds	r3, #16
 801a238:	4618      	mov	r0, r3
 801a23a:	f000 f87e 	bl	801a33a <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE6_M_ptrEv>
 801a23e:	4603      	mov	r3, r0
 801a240:	4618      	mov	r0, r3
 801a242:	3708      	adds	r7, #8
 801a244:	46bd      	mov	sp, r7
 801a246:	bd80      	pop	{r7, pc}

0801a248 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEclERKS9_>:
      operator()(const _Pair& __x) const
 801a248:	b480      	push	{r7}
 801a24a:	b083      	sub	sp, #12
 801a24c:	af00      	add	r7, sp, #0
 801a24e:	6078      	str	r0, [r7, #4]
 801a250:	6039      	str	r1, [r7, #0]
      { return __x.first; }
 801a252:	683b      	ldr	r3, [r7, #0]
 801a254:	4618      	mov	r0, r3
 801a256:	370c      	adds	r7, #12
 801a258:	46bd      	mov	sp, r7
 801a25a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a25e:	4770      	bx	lr

0801a260 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE21_M_get_Node_allocatorEv>:
      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
 801a260:	b480      	push	{r7}
 801a262:	b083      	sub	sp, #12
 801a264:	af00      	add	r7, sp, #0
 801a266:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 801a268:	687b      	ldr	r3, [r7, #4]
 801a26a:	4618      	mov	r0, r3
 801a26c:	370c      	adds	r7, #12
 801a26e:	46bd      	mov	sp, r7
 801a270:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a274:	4770      	bx	lr

0801a276 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEE7destroyISA_EEvRSC_PT_>:
	destroy(allocator_type& __a, _Up* __p)
 801a276:	b580      	push	{r7, lr}
 801a278:	b082      	sub	sp, #8
 801a27a:	af00      	add	r7, sp, #0
 801a27c:	6078      	str	r0, [r7, #4]
 801a27e:	6039      	str	r1, [r7, #0]
	{ __a.destroy(__p); }
 801a280:	6839      	ldr	r1, [r7, #0]
 801a282:	6878      	ldr	r0, [r7, #4]
 801a284:	f000 f877 	bl	801a376 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE7destroyISB_EEvPT_>
 801a288:	bf00      	nop
 801a28a:	3708      	adds	r7, #8
 801a28c:	46bd      	mov	sp, r7
 801a28e:	bd80      	pop	{r7, pc}

0801a290 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEE10deallocateERSC_PSB_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 801a290:	b580      	push	{r7, lr}
 801a292:	b084      	sub	sp, #16
 801a294:	af00      	add	r7, sp, #0
 801a296:	60f8      	str	r0, [r7, #12]
 801a298:	60b9      	str	r1, [r7, #8]
 801a29a:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 801a29c:	687a      	ldr	r2, [r7, #4]
 801a29e:	68b9      	ldr	r1, [r7, #8]
 801a2a0:	68f8      	ldr	r0, [r7, #12]
 801a2a2:	f000 f874 	bl	801a38e <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE10deallocateEPSC_j>
 801a2a6:	bf00      	nop
 801a2a8:	3710      	adds	r7, #16
 801a2aa:	46bd      	mov	sp, r7
 801a2ac:	bd80      	pop	{r7, pc}

0801a2ae <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEE8allocateERSC_j>:
      allocate(allocator_type& __a, size_type __n)
 801a2ae:	b580      	push	{r7, lr}
 801a2b0:	b082      	sub	sp, #8
 801a2b2:	af00      	add	r7, sp, #0
 801a2b4:	6078      	str	r0, [r7, #4]
 801a2b6:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 801a2b8:	2200      	movs	r2, #0
 801a2ba:	6839      	ldr	r1, [r7, #0]
 801a2bc:	6878      	ldr	r0, [r7, #4]
 801a2be:	f000 f872 	bl	801a3a6 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE8allocateEjPKv>
 801a2c2:	4603      	mov	r3, r0
 801a2c4:	4618      	mov	r0, r3
 801a2c6:	3708      	adds	r7, #8
 801a2c8:	46bd      	mov	sp, r7
 801a2ca:	bd80      	pop	{r7, pc}

0801a2cc <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEE9constructISA_JRKSt21piecewise_construct_tSt5tupleIJRS8_EESI_IJEEEEEvRSC_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 801a2cc:	b5b0      	push	{r4, r5, r7, lr}
 801a2ce:	b086      	sub	sp, #24
 801a2d0:	af02      	add	r7, sp, #8
 801a2d2:	60f8      	str	r0, [r7, #12]
 801a2d4:	60b9      	str	r1, [r7, #8]
 801a2d6:	607a      	str	r2, [r7, #4]
 801a2d8:	603b      	str	r3, [r7, #0]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 801a2da:	6878      	ldr	r0, [r7, #4]
 801a2dc:	f7ff fca5 	bl	8019c2a <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
 801a2e0:	4604      	mov	r4, r0
 801a2e2:	6838      	ldr	r0, [r7, #0]
 801a2e4:	f7ff fcac 	bl	8019c40 <_ZSt7forwardISt5tupleIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceISA_E4typeE>
 801a2e8:	4605      	mov	r5, r0
 801a2ea:	6a38      	ldr	r0, [r7, #32]
 801a2ec:	f7ff fcb3 	bl	8019c56 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
 801a2f0:	4603      	mov	r3, r0
 801a2f2:	9300      	str	r3, [sp, #0]
 801a2f4:	462b      	mov	r3, r5
 801a2f6:	4622      	mov	r2, r4
 801a2f8:	68b9      	ldr	r1, [r7, #8]
 801a2fa:	68f8      	ldr	r0, [r7, #12]
 801a2fc:	f000 f885 	bl	801a40a <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE9constructISB_JRKSt21piecewise_construct_tSt5tupleIJRS9_EESI_IJEEEEEvPT_DpOT0_>
 801a300:	bf00      	nop
 801a302:	3710      	adds	r7, #16
 801a304:	46bd      	mov	sp, r7
 801a306:	bdb0      	pop	{r4, r5, r7, pc}

0801a308 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEERS1_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 801a308:	b580      	push	{r7, lr}
 801a30a:	b084      	sub	sp, #16
 801a30c:	af00      	add	r7, sp, #0
 801a30e:	60f8      	str	r0, [r7, #12]
 801a310:	60b9      	str	r1, [r7, #8]
 801a312:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 801a314:	68b8      	ldr	r0, [r7, #8]
 801a316:	f000 f89f 	bl	801a458 <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEOT_RNSt16remove_referenceISE_E4typeE>
 801a31a:	4603      	mov	r3, r0
 801a31c:	681a      	ldr	r2, [r3, #0]
 801a31e:	68fb      	ldr	r3, [r7, #12]
 801a320:	601a      	str	r2, [r3, #0]
 801a322:	6878      	ldr	r0, [r7, #4]
 801a324:	f7ed f99d 	bl	8007662 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
 801a328:	4603      	mov	r3, r0
 801a32a:	681a      	ldr	r2, [r3, #0]
 801a32c:	68fb      	ldr	r3, [r7, #12]
 801a32e:	605a      	str	r2, [r3, #4]
 801a330:	68fb      	ldr	r3, [r7, #12]
 801a332:	4618      	mov	r0, r3
 801a334:	3710      	adds	r7, #16
 801a336:	46bd      	mov	sp, r7
 801a338:	bd80      	pop	{r7, pc}

0801a33a <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE6_M_ptrEv>:
      _M_ptr() const noexcept
 801a33a:	b580      	push	{r7, lr}
 801a33c:	b082      	sub	sp, #8
 801a33e:	af00      	add	r7, sp, #0
 801a340:	6078      	str	r0, [r7, #4]
      { return static_cast<const _Tp*>(_M_addr()); }
 801a342:	6878      	ldr	r0, [r7, #4]
 801a344:	f000 f893 	bl	801a46e <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE7_M_addrEv>
 801a348:	4603      	mov	r3, r0
 801a34a:	4618      	mov	r0, r3
 801a34c:	3708      	adds	r7, #8
 801a34e:	46bd      	mov	sp, r7
 801a350:	bd80      	pop	{r7, pc}

0801a352 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolED1Ev>:
    struct pair
 801a352:	b580      	push	{r7, lr}
 801a354:	b082      	sub	sp, #8
 801a356:	af00      	add	r7, sp, #0
 801a358:	6078      	str	r0, [r7, #4]
 801a35a:	687b      	ldr	r3, [r7, #4]
 801a35c:	3318      	adds	r3, #24
 801a35e:	4618      	mov	r0, r3
 801a360:	f7e7 f81c 	bl	800139c <_ZN6SymbolD1Ev>
 801a364:	687b      	ldr	r3, [r7, #4]
 801a366:	4618      	mov	r0, r3
 801a368:	f009 fb67 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801a36c:	687b      	ldr	r3, [r7, #4]
 801a36e:	4618      	mov	r0, r3
 801a370:	3708      	adds	r7, #8
 801a372:	46bd      	mov	sp, r7
 801a374:	bd80      	pop	{r7, pc}

0801a376 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE7destroyISB_EEvPT_>:
	destroy(_Up* __p)
 801a376:	b580      	push	{r7, lr}
 801a378:	b082      	sub	sp, #8
 801a37a:	af00      	add	r7, sp, #0
 801a37c:	6078      	str	r0, [r7, #4]
 801a37e:	6039      	str	r1, [r7, #0]
	{ __p->~_Up(); }
 801a380:	6838      	ldr	r0, [r7, #0]
 801a382:	f7ff ffe6 	bl	801a352 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolED1Ev>
 801a386:	bf00      	nop
 801a388:	3708      	adds	r7, #8
 801a38a:	46bd      	mov	sp, r7
 801a38c:	bd80      	pop	{r7, pc}

0801a38e <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE10deallocateEPSC_j>:
      deallocate(pointer __p, size_type)
 801a38e:	b580      	push	{r7, lr}
 801a390:	b084      	sub	sp, #16
 801a392:	af00      	add	r7, sp, #0
 801a394:	60f8      	str	r0, [r7, #12]
 801a396:	60b9      	str	r1, [r7, #8]
 801a398:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 801a39a:	68b8      	ldr	r0, [r7, #8]
 801a39c:	f009 f898 	bl	80234d0 <_ZdlPv>
      }
 801a3a0:	3710      	adds	r7, #16
 801a3a2:	46bd      	mov	sp, r7
 801a3a4:	bd80      	pop	{r7, pc}

0801a3a6 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 801a3a6:	b580      	push	{r7, lr}
 801a3a8:	b084      	sub	sp, #16
 801a3aa:	af00      	add	r7, sp, #0
 801a3ac:	60f8      	str	r0, [r7, #12]
 801a3ae:	60b9      	str	r1, [r7, #8]
 801a3b0:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 801a3b2:	68f8      	ldr	r0, [r7, #12]
 801a3b4:	f000 f866 	bl	801a484 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE8max_sizeEv>
 801a3b8:	4602      	mov	r2, r0
 801a3ba:	68bb      	ldr	r3, [r7, #8]
 801a3bc:	4293      	cmp	r3, r2
 801a3be:	bf8c      	ite	hi
 801a3c0:	2301      	movhi	r3, #1
 801a3c2:	2300      	movls	r3, #0
 801a3c4:	b2db      	uxtb	r3, r3
 801a3c6:	2b00      	cmp	r3, #0
 801a3c8:	d001      	beq.n	801a3ce <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 801a3ca:	f009 f959 	bl	8023680 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 801a3ce:	68ba      	ldr	r2, [r7, #8]
 801a3d0:	4613      	mov	r3, r2
 801a3d2:	00db      	lsls	r3, r3, #3
 801a3d4:	4413      	add	r3, r2
 801a3d6:	00db      	lsls	r3, r3, #3
 801a3d8:	4618      	mov	r0, r3
 801a3da:	f009 f88c 	bl	80234f6 <_Znwj>
 801a3de:	4603      	mov	r3, r0
 801a3e0:	bf00      	nop
      }
 801a3e2:	4618      	mov	r0, r3
 801a3e4:	3710      	adds	r7, #16
 801a3e6:	46bd      	mov	sp, r7
 801a3e8:	bd80      	pop	{r7, pc}

0801a3ea <_ZNSt5tupleIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS8_>:
        explicit constexpr tuple(_UElements&&... __elements)
	: _Inherited(std::forward<_UElements>(__elements)...) {	}

      constexpr tuple(const tuple&) = default;

      constexpr tuple(tuple&&) = default;
 801a3ea:	b580      	push	{r7, lr}
 801a3ec:	b082      	sub	sp, #8
 801a3ee:	af00      	add	r7, sp, #0
 801a3f0:	6078      	str	r0, [r7, #4]
 801a3f2:	6039      	str	r1, [r7, #0]
 801a3f4:	687b      	ldr	r3, [r7, #4]
 801a3f6:	683a      	ldr	r2, [r7, #0]
 801a3f8:	4611      	mov	r1, r2
 801a3fa:	4618      	mov	r0, r3
 801a3fc:	f000 f850 	bl	801a4a0 <_ZNSt11_Tuple_implILj0EJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS8_>
 801a400:	687b      	ldr	r3, [r7, #4]
 801a402:	4618      	mov	r0, r3
 801a404:	3708      	adds	r7, #8
 801a406:	46bd      	mov	sp, r7
 801a408:	bd80      	pop	{r7, pc}

0801a40a <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE9constructISB_JRKSt21piecewise_construct_tSt5tupleIJRS9_EESI_IJEEEEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 801a40a:	b590      	push	{r4, r7, lr}
 801a40c:	b089      	sub	sp, #36	; 0x24
 801a40e:	af00      	add	r7, sp, #0
 801a410:	60f8      	str	r0, [r7, #12]
 801a412:	60b9      	str	r1, [r7, #8]
 801a414:	607a      	str	r2, [r7, #4]
 801a416:	603b      	str	r3, [r7, #0]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 801a418:	6878      	ldr	r0, [r7, #4]
 801a41a:	f7ff fc06 	bl	8019c2a <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
 801a41e:	6838      	ldr	r0, [r7, #0]
 801a420:	f7ff fc0e 	bl	8019c40 <_ZSt7forwardISt5tupleIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceISA_E4typeE>
 801a424:	4602      	mov	r2, r0
 801a426:	f107 0318 	add.w	r3, r7, #24
 801a42a:	4611      	mov	r1, r2
 801a42c:	4618      	mov	r0, r3
 801a42e:	f7ff ffdc 	bl	801a3ea <_ZNSt5tupleIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS8_>
 801a432:	f107 0418 	add.w	r4, r7, #24
 801a436:	6b38      	ldr	r0, [r7, #48]	; 0x30
 801a438:	f7ff fc0d 	bl	8019c56 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
 801a43c:	68bb      	ldr	r3, [r7, #8]
 801a43e:	4619      	mov	r1, r3
 801a440:	2038      	movs	r0, #56	; 0x38
 801a442:	f7e6 fe0a 	bl	800105a <_ZnwjPv>
 801a446:	7f3b      	ldrb	r3, [r7, #28]
 801a448:	4622      	mov	r2, r4
 801a44a:	7d39      	ldrb	r1, [r7, #20]
 801a44c:	f000 f83f 	bl	801a4ce <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEC1IJRS6_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESC_IJDpT0_EE>
 801a450:	bf00      	nop
 801a452:	3724      	adds	r7, #36	; 0x24
 801a454:	46bd      	mov	sp, r7
 801a456:	bd90      	pop	{r4, r7, pc}

0801a458 <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEOT_RNSt16remove_referenceISE_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801a458:	b480      	push	{r7}
 801a45a:	b083      	sub	sp, #12
 801a45c:	af00      	add	r7, sp, #0
 801a45e:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801a460:	687b      	ldr	r3, [r7, #4]
 801a462:	4618      	mov	r0, r3
 801a464:	370c      	adds	r7, #12
 801a466:	46bd      	mov	sp, r7
 801a468:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a46c:	4770      	bx	lr

0801a46e <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE7_M_addrEv>:
      _M_addr() const noexcept
 801a46e:	b480      	push	{r7}
 801a470:	b083      	sub	sp, #12
 801a472:	af00      	add	r7, sp, #0
 801a474:	6078      	str	r0, [r7, #4]
      { return static_cast<const void*>(&_M_storage); }
 801a476:	687b      	ldr	r3, [r7, #4]
 801a478:	4618      	mov	r0, r3
 801a47a:	370c      	adds	r7, #12
 801a47c:	46bd      	mov	sp, r7
 801a47e:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a482:	4770      	bx	lr

0801a484 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 801a484:	b480      	push	{r7}
 801a486:	b083      	sub	sp, #12
 801a488:	af00      	add	r7, sp, #0
 801a48a:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 801a48c:	4b03      	ldr	r3, [pc, #12]	; (801a49c <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE8max_sizeEv+0x18>)
      }
 801a48e:	4618      	mov	r0, r3
 801a490:	370c      	adds	r7, #12
 801a492:	46bd      	mov	sp, r7
 801a494:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a498:	4770      	bx	lr
 801a49a:	bf00      	nop
 801a49c:	01c71c71 	.word	0x01c71c71

0801a4a0 <_ZNSt11_Tuple_implILj0EJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS8_>:
      _Tuple_impl(_Tuple_impl&& __in)
 801a4a0:	b590      	push	{r4, r7, lr}
 801a4a2:	b083      	sub	sp, #12
 801a4a4:	af00      	add	r7, sp, #0
 801a4a6:	6078      	str	r0, [r7, #4]
 801a4a8:	6039      	str	r1, [r7, #0]
      : _Base(std::forward<_Head>(_M_head(__in))) { }
 801a4aa:	687c      	ldr	r4, [r7, #4]
 801a4ac:	6838      	ldr	r0, [r7, #0]
 801a4ae:	f000 f822 	bl	801a4f6 <_ZNSt11_Tuple_implILj0EJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7_M_headERS8_>
 801a4b2:	4603      	mov	r3, r0
 801a4b4:	4618      	mov	r0, r3
 801a4b6:	f7ea fdf5 	bl	80050a4 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 801a4ba:	4603      	mov	r3, r0
 801a4bc:	4619      	mov	r1, r3
 801a4be:	4620      	mov	r0, r4
 801a4c0:	f7ff fd9c 	bl	8019ffc <_ZNSt10_Head_baseILj0ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1ES7_>
 801a4c4:	687b      	ldr	r3, [r7, #4]
 801a4c6:	4618      	mov	r0, r3
 801a4c8:	370c      	adds	r7, #12
 801a4ca:	46bd      	mov	sp, r7
 801a4cc:	bd90      	pop	{r4, r7, pc}

0801a4ce <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEC1IJRS6_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESC_IJDpT0_EE>:

  // See stl_pair.h...
  template<class _T1, class _T2>
    template<typename... _Args1, typename... _Args2>
      inline
      pair<_T1, _T2>::
 801a4ce:	b5b0      	push	{r4, r5, r7, lr}
 801a4d0:	b086      	sub	sp, #24
 801a4d2:	af02      	add	r7, sp, #8
 801a4d4:	60f8      	str	r0, [r7, #12]
 801a4d6:	7239      	strb	r1, [r7, #8]
 801a4d8:	607a      	str	r2, [r7, #4]
 801a4da:	703b      	strb	r3, [r7, #0]
      pair(piecewise_construct_t,
	   tuple<_Args1...> __first, tuple<_Args2...> __second)
      : pair(__first, __second,
	     typename _Build_index_tuple<sizeof...(_Args1)>::__type(),
	     typename _Build_index_tuple<sizeof...(_Args2)>::__type())
 801a4dc:	463a      	mov	r2, r7
 801a4de:	f88d 4000 	strb.w	r4, [sp]
 801a4e2:	462b      	mov	r3, r5
 801a4e4:	6879      	ldr	r1, [r7, #4]
 801a4e6:	68f8      	ldr	r0, [r7, #12]
 801a4e8:	f000 f812 	bl	801a510 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEC1IJRS6_EJLj0EEJEJEEERSt5tupleIJDpT_EERSB_IJDpT1_EESt12_Index_tupleIJXspT0_EEESK_IJXspT2_EEE>
      { }
 801a4ec:	68fb      	ldr	r3, [r7, #12]
 801a4ee:	4618      	mov	r0, r3
 801a4f0:	3710      	adds	r7, #16
 801a4f2:	46bd      	mov	sp, r7
 801a4f4:	bdb0      	pop	{r4, r5, r7, pc}

0801a4f6 <_ZNSt11_Tuple_implILj0EJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7_M_headERS8_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
 801a4f6:	b580      	push	{r7, lr}
 801a4f8:	b082      	sub	sp, #8
 801a4fa:	af00      	add	r7, sp, #0
 801a4fc:	6078      	str	r0, [r7, #4]
 801a4fe:	687b      	ldr	r3, [r7, #4]
 801a500:	4618      	mov	r0, r3
 801a502:	f000 f82a 	bl	801a55a <_ZNSt10_Head_baseILj0ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE7_M_headERS8_>
 801a506:	4603      	mov	r3, r0
 801a508:	4618      	mov	r0, r3
 801a50a:	3708      	adds	r7, #8
 801a50c:	46bd      	mov	sp, r7
 801a50e:	bd80      	pop	{r7, pc}

0801a510 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEC1IJRS6_EJLj0EEJEJEEERSt5tupleIJDpT_EERSB_IJDpT1_EESt12_Index_tupleIJXspT0_EEESK_IJXspT2_EEE>:

  template<class _T1, class _T2>
    template<typename... _Args1, std::size_t... _Indexes1,
             typename... _Args2, std::size_t... _Indexes2>
      inline
      pair<_T1, _T2>::
 801a510:	b590      	push	{r4, r7, lr}
 801a512:	b085      	sub	sp, #20
 801a514:	af00      	add	r7, sp, #0
 801a516:	60f8      	str	r0, [r7, #12]
 801a518:	60b9      	str	r1, [r7, #8]
 801a51a:	607a      	str	r2, [r7, #4]
 801a51c:	703b      	strb	r3, [r7, #0]
      pair(tuple<_Args1...>& __tuple1, tuple<_Args2...>& __tuple2,
	   _Index_tuple<_Indexes1...>, _Index_tuple<_Indexes2...>)
      : first(std::forward<_Args1>(std::get<_Indexes1>(__tuple1))...),
        second(std::forward<_Args2>(std::get<_Indexes2>(__tuple2))...)
 801a51e:	68fc      	ldr	r4, [r7, #12]
      : first(std::forward<_Args1>(std::get<_Indexes1>(__tuple1))...),
 801a520:	68b8      	ldr	r0, [r7, #8]
 801a522:	f000 f826 	bl	801a572 <_ZSt3getILj0EJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSC_>
 801a526:	4603      	mov	r3, r0
        second(std::forward<_Args2>(std::get<_Indexes2>(__tuple2))...)
 801a528:	4618      	mov	r0, r3
 801a52a:	f7ea fdbb 	bl	80050a4 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 801a52e:	4603      	mov	r3, r0
 801a530:	4619      	mov	r1, r3
 801a532:	4620      	mov	r0, r4
 801a534:	f009 fc50 	bl	8023dd8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 801a538:	68fb      	ldr	r3, [r7, #12]
 801a53a:	3318      	adds	r3, #24
 801a53c:	2220      	movs	r2, #32
 801a53e:	2100      	movs	r1, #0
 801a540:	4618      	mov	r0, r3
 801a542:	f00a fcad 	bl	8024ea0 <memset>
 801a546:	68fb      	ldr	r3, [r7, #12]
 801a548:	3318      	adds	r3, #24
 801a54a:	4618      	mov	r0, r3
 801a54c:	f7f3 fd47 	bl	800dfde <_ZN6SymbolC1Ev>
      { }
 801a550:	68fb      	ldr	r3, [r7, #12]
 801a552:	4618      	mov	r0, r3
 801a554:	3714      	adds	r7, #20
 801a556:	46bd      	mov	sp, r7
 801a558:	bd90      	pop	{r4, r7, pc}

0801a55a <_ZNSt10_Head_baseILj0ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE7_M_headERS8_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
 801a55a:	b480      	push	{r7}
 801a55c:	b083      	sub	sp, #12
 801a55e:	af00      	add	r7, sp, #0
 801a560:	6078      	str	r0, [r7, #4]
 801a562:	687b      	ldr	r3, [r7, #4]
 801a564:	681b      	ldr	r3, [r3, #0]
 801a566:	4618      	mov	r0, r3
 801a568:	370c      	adds	r7, #12
 801a56a:	46bd      	mov	sp, r7
 801a56c:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a570:	4770      	bx	lr

0801a572 <_ZSt3getILj0EJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSC_>:
    get(tuple<_Elements...>& __t) noexcept
 801a572:	b580      	push	{r7, lr}
 801a574:	b082      	sub	sp, #8
 801a576:	af00      	add	r7, sp, #0
 801a578:	6078      	str	r0, [r7, #4]
    { return std::__get_helper<__i>(__t); }
 801a57a:	687b      	ldr	r3, [r7, #4]
 801a57c:	4618      	mov	r0, r3
 801a57e:	f000 f805 	bl	801a58c <_ZSt12__get_helperILj0ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJEERT0_RSt11_Tuple_implIXT_EJS8_DpT1_EE>
 801a582:	4603      	mov	r3, r0
 801a584:	4618      	mov	r0, r3
 801a586:	3708      	adds	r7, #8
 801a588:	46bd      	mov	sp, r7
 801a58a:	bd80      	pop	{r7, pc}

0801a58c <_ZSt12__get_helperILj0ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJEERT0_RSt11_Tuple_implIXT_EJS8_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
 801a58c:	b580      	push	{r7, lr}
 801a58e:	b082      	sub	sp, #8
 801a590:	af00      	add	r7, sp, #0
 801a592:	6078      	str	r0, [r7, #4]
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
 801a594:	6878      	ldr	r0, [r7, #4]
 801a596:	f7ff ffae 	bl	801a4f6 <_ZNSt11_Tuple_implILj0EJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7_M_headERS8_>
 801a59a:	4603      	mov	r3, r0
 801a59c:	4618      	mov	r0, r3
 801a59e:	3708      	adds	r7, #8
 801a5a0:	46bd      	mov	sp, r7
 801a5a2:	bd80      	pop	{r7, pc}

0801a5a4 <_Z41__static_initialization_and_destruction_0ii>:
 801a5a4:	b590      	push	{r4, r7, lr}
 801a5a6:	b0e7      	sub	sp, #412	; 0x19c
 801a5a8:	af02      	add	r7, sp, #8
 801a5aa:	1d3b      	adds	r3, r7, #4
 801a5ac:	6018      	str	r0, [r3, #0]
 801a5ae:	463b      	mov	r3, r7
 801a5b0:	6019      	str	r1, [r3, #0]
 801a5b2:	1d3b      	adds	r3, r7, #4
 801a5b4:	681b      	ldr	r3, [r3, #0]
 801a5b6:	2b01      	cmp	r3, #1
 801a5b8:	f040 819d 	bne.w	801a8f6 <_Z41__static_initialization_and_destruction_0ii+0x352>
 801a5bc:	463b      	mov	r3, r7
 801a5be:	681b      	ldr	r3, [r3, #0]
 801a5c0:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801a5c4:	4293      	cmp	r3, r2
 801a5c6:	f040 8196 	bne.w	801a8f6 <_Z41__static_initialization_and_destruction_0ii+0x352>
};
 801a5ca:	f107 0314 	add.w	r3, r7, #20
 801a5ce:	4618      	mov	r0, r3
 801a5d0:	2322      	movs	r3, #34	; 0x22
 801a5d2:	461a      	mov	r2, r3
 801a5d4:	2100      	movs	r1, #0
 801a5d6:	f00a fc63 	bl	8024ea0 <memset>
 801a5da:	f107 0314 	add.w	r3, r7, #20
 801a5de:	223a      	movs	r2, #58	; 0x3a
 801a5e0:	701a      	strb	r2, [r3, #0]
 801a5e2:	f107 0314 	add.w	r3, r7, #20
 801a5e6:	2201      	movs	r2, #1
 801a5e8:	705a      	strb	r2, [r3, #1]
 801a5ea:	f107 0314 	add.w	r3, r7, #20
 801a5ee:	220a      	movs	r2, #10
 801a5f0:	709a      	strb	r2, [r3, #2]
 801a5f2:	f107 0314 	add.w	r3, r7, #20
 801a5f6:	220a      	movs	r2, #10
 801a5f8:	70da      	strb	r2, [r3, #3]
 801a5fa:	f107 0314 	add.w	r3, r7, #20
 801a5fe:	222c      	movs	r2, #44	; 0x2c
 801a600:	711a      	strb	r2, [r3, #4]
 801a602:	f107 0314 	add.w	r3, r7, #20
 801a606:	220c      	movs	r2, #12
 801a608:	715a      	strb	r2, [r3, #5]
 801a60a:	f107 0314 	add.w	r3, r7, #20
 801a60e:	222e      	movs	r2, #46	; 0x2e
 801a610:	719a      	strb	r2, [r3, #6]
 801a612:	f107 0314 	add.w	r3, r7, #20
 801a616:	220b      	movs	r2, #11
 801a618:	71da      	strb	r2, [r3, #7]
 801a61a:	f107 0314 	add.w	r3, r7, #20
 801a61e:	225b      	movs	r2, #91	; 0x5b
 801a620:	721a      	strb	r2, [r3, #8]
 801a622:	f107 0314 	add.w	r3, r7, #20
 801a626:	220d      	movs	r2, #13
 801a628:	725a      	strb	r2, [r3, #9]
 801a62a:	f107 0314 	add.w	r3, r7, #20
 801a62e:	225d      	movs	r2, #93	; 0x5d
 801a630:	729a      	strb	r2, [r3, #10]
 801a632:	f107 0314 	add.w	r3, r7, #20
 801a636:	220e      	movs	r2, #14
 801a638:	72da      	strb	r2, [r3, #11]
 801a63a:	f107 0314 	add.w	r3, r7, #20
 801a63e:	227c      	movs	r2, #124	; 0x7c
 801a640:	731a      	strb	r2, [r3, #12]
 801a642:	f107 0314 	add.w	r3, r7, #20
 801a646:	2215      	movs	r2, #21
 801a648:	735a      	strb	r2, [r3, #13]
 801a64a:	f107 0314 	add.w	r3, r7, #20
 801a64e:	2226      	movs	r2, #38	; 0x26
 801a650:	739a      	strb	r2, [r3, #14]
 801a652:	f107 0314 	add.w	r3, r7, #20
 801a656:	2216      	movs	r2, #22
 801a658:	73da      	strb	r2, [r3, #15]
 801a65a:	f107 0314 	add.w	r3, r7, #20
 801a65e:	222b      	movs	r2, #43	; 0x2b
 801a660:	741a      	strb	r2, [r3, #16]
 801a662:	f107 0314 	add.w	r3, r7, #20
 801a666:	221f      	movs	r2, #31
 801a668:	745a      	strb	r2, [r3, #17]
 801a66a:	f107 0314 	add.w	r3, r7, #20
 801a66e:	222d      	movs	r2, #45	; 0x2d
 801a670:	749a      	strb	r2, [r3, #18]
 801a672:	f107 0314 	add.w	r3, r7, #20
 801a676:	2220      	movs	r2, #32
 801a678:	74da      	strb	r2, [r3, #19]
 801a67a:	f107 0314 	add.w	r3, r7, #20
 801a67e:	222a      	movs	r2, #42	; 0x2a
 801a680:	751a      	strb	r2, [r3, #20]
 801a682:	f107 0314 	add.w	r3, r7, #20
 801a686:	2221      	movs	r2, #33	; 0x21
 801a688:	755a      	strb	r2, [r3, #21]
 801a68a:	f107 0314 	add.w	r3, r7, #20
 801a68e:	222f      	movs	r2, #47	; 0x2f
 801a690:	759a      	strb	r2, [r3, #22]
 801a692:	f107 0314 	add.w	r3, r7, #20
 801a696:	2222      	movs	r2, #34	; 0x22
 801a698:	75da      	strb	r2, [r3, #23]
 801a69a:	f107 0314 	add.w	r3, r7, #20
 801a69e:	225e      	movs	r2, #94	; 0x5e
 801a6a0:	761a      	strb	r2, [r3, #24]
 801a6a2:	f107 0314 	add.w	r3, r7, #20
 801a6a6:	2223      	movs	r2, #35	; 0x23
 801a6a8:	765a      	strb	r2, [r3, #25]
 801a6aa:	f107 0314 	add.w	r3, r7, #20
 801a6ae:	2225      	movs	r2, #37	; 0x25
 801a6b0:	769a      	strb	r2, [r3, #26]
 801a6b2:	f107 0314 	add.w	r3, r7, #20
 801a6b6:	2224      	movs	r2, #36	; 0x24
 801a6b8:	76da      	strb	r2, [r3, #27]
 801a6ba:	f107 0314 	add.w	r3, r7, #20
 801a6be:	2228      	movs	r2, #40	; 0x28
 801a6c0:	771a      	strb	r2, [r3, #28]
 801a6c2:	f107 0314 	add.w	r3, r7, #20
 801a6c6:	2226      	movs	r2, #38	; 0x26
 801a6c8:	775a      	strb	r2, [r3, #29]
 801a6ca:	f107 0314 	add.w	r3, r7, #20
 801a6ce:	2229      	movs	r2, #41	; 0x29
 801a6d0:	779a      	strb	r2, [r3, #30]
 801a6d2:	f107 0314 	add.w	r3, r7, #20
 801a6d6:	2227      	movs	r2, #39	; 0x27
 801a6d8:	77da      	strb	r2, [r3, #31]
 801a6da:	f107 0314 	add.w	r3, r7, #20
 801a6de:	2225      	movs	r2, #37	; 0x25
 801a6e0:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 801a6e4:	f107 030c 	add.w	r3, r7, #12
 801a6e8:	f107 0214 	add.w	r2, r7, #20
 801a6ec:	601a      	str	r2, [r3, #0]
 801a6ee:	f107 030c 	add.w	r3, r7, #12
 801a6f2:	2211      	movs	r2, #17
 801a6f4:	605a      	str	r2, [r3, #4]
 801a6f6:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801a6fa:	4618      	mov	r0, r3
 801a6fc:	f7e7 faf2 	bl	8001ce4 <_ZNSaISt4pairIKc10token_typeEEC1Ev>
 801a700:	f107 0138 	add.w	r1, r7, #56	; 0x38
 801a704:	f107 020c 	add.w	r2, r7, #12
 801a708:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801a70c:	9300      	str	r3, [sp, #0]
 801a70e:	460b      	mov	r3, r1
 801a710:	ca06      	ldmia	r2, {r1, r2}
 801a712:	4885      	ldr	r0, [pc, #532]	; (801a928 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 801a714:	f7e7 fafe 	bl	8001d14 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 801a718:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801a71c:	4618      	mov	r0, r3
 801a71e:	f7e7 faed 	bl	8001cfc <_ZNSaISt4pairIKc10token_typeEED1Ev>
	{"true", TOKEN_TRUE},
 801a722:	2305      	movs	r3, #5
 801a724:	f887 3162 	strb.w	r3, [r7, #354]	; 0x162
};
 801a728:	f507 72b1 	add.w	r2, r7, #354	; 0x162
 801a72c:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801a730:	497e      	ldr	r1, [pc, #504]	; (801a92c <_Z41__static_initialization_and_destruction_0ii+0x388>)
 801a732:	4618      	mov	r0, r3
 801a734:	f7e6 fce0 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"false", TOKEN_FALSE},
 801a738:	2306      	movs	r3, #6
 801a73a:	f887 3163 	strb.w	r3, [r7, #355]	; 0x163
};
 801a73e:	f207 1263 	addw	r2, r7, #355	; 0x163
 801a742:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801a746:	331c      	adds	r3, #28
 801a748:	4979      	ldr	r1, [pc, #484]	; (801a930 <_Z41__static_initialization_and_destruction_0ii+0x38c>)
 801a74a:	4618      	mov	r0, r3
 801a74c:	f7e6 fcfc 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"setup", TOKEN_SETUP},
 801a750:	2307      	movs	r3, #7
 801a752:	f887 3164 	strb.w	r3, [r7, #356]	; 0x164
};
 801a756:	f507 72b2 	add.w	r2, r7, #356	; 0x164
 801a75a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801a75e:	3338      	adds	r3, #56	; 0x38
 801a760:	4974      	ldr	r1, [pc, #464]	; (801a934 <_Z41__static_initialization_and_destruction_0ii+0x390>)
 801a762:	4618      	mov	r0, r3
 801a764:	f7e6 fcf0 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"loop", TOKEN_LOOP},
 801a768:	2308      	movs	r3, #8
 801a76a:	f887 3165 	strb.w	r3, [r7, #357]	; 0x165
};
 801a76e:	f207 1265 	addw	r2, r7, #357	; 0x165
 801a772:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801a776:	3354      	adds	r3, #84	; 0x54
 801a778:	496f      	ldr	r1, [pc, #444]	; (801a938 <_Z41__static_initialization_and_destruction_0ii+0x394>)
 801a77a:	4618      	mov	r0, r3
 801a77c:	f7e6 fcbc 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"finish", TOKEN_FINISH},
 801a780:	2309      	movs	r3, #9
 801a782:	f887 3166 	strb.w	r3, [r7, #358]	; 0x166
};
 801a786:	f507 72b3 	add.w	r2, r7, #358	; 0x166
 801a78a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801a78e:	3370      	adds	r3, #112	; 0x70
 801a790:	496a      	ldr	r1, [pc, #424]	; (801a93c <_Z41__static_initialization_and_destruction_0ii+0x398>)
 801a792:	4618      	mov	r0, r3
 801a794:	f7e6 fd00 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"if", TOKEN_IF},
 801a798:	2310      	movs	r3, #16
 801a79a:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167
};
 801a79e:	f207 1267 	addw	r2, r7, #359	; 0x167
 801a7a2:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801a7a6:	338c      	adds	r3, #140	; 0x8c
 801a7a8:	4965      	ldr	r1, [pc, #404]	; (801a940 <_Z41__static_initialization_and_destruction_0ii+0x39c>)
 801a7aa:	4618      	mov	r0, r3
 801a7ac:	f7e6 fd1c 	bl	80011e8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>
	{"elseif", TOKEN_ELSEIF},
 801a7b0:	2311      	movs	r3, #17
 801a7b2:	f887 3168 	strb.w	r3, [r7, #360]	; 0x168
};
 801a7b6:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 801a7ba:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801a7be:	33a8      	adds	r3, #168	; 0xa8
 801a7c0:	4960      	ldr	r1, [pc, #384]	; (801a944 <_Z41__static_initialization_and_destruction_0ii+0x3a0>)
 801a7c2:	4618      	mov	r0, r3
 801a7c4:	f7e6 fce8 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"else", TOKEN_ELSE},
 801a7c8:	2312      	movs	r3, #18
 801a7ca:	f887 3169 	strb.w	r3, [r7, #361]	; 0x169
};
 801a7ce:	f207 1269 	addw	r2, r7, #361	; 0x169
 801a7d2:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801a7d6:	33c4      	adds	r3, #196	; 0xc4
 801a7d8:	495b      	ldr	r1, [pc, #364]	; (801a948 <_Z41__static_initialization_and_destruction_0ii+0x3a4>)
 801a7da:	4618      	mov	r0, r3
 801a7dc:	f7e6 fc8c 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"while", TOKEN_WHILE},
 801a7e0:	2313      	movs	r3, #19
 801a7e2:	f887 316a 	strb.w	r3, [r7, #362]	; 0x16a
};
 801a7e6:	f507 72b5 	add.w	r2, r7, #362	; 0x16a
 801a7ea:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801a7ee:	33e0      	adds	r3, #224	; 0xe0
 801a7f0:	4956      	ldr	r1, [pc, #344]	; (801a94c <_Z41__static_initialization_and_destruction_0ii+0x3a8>)
 801a7f2:	4618      	mov	r0, r3
 801a7f4:	f7e6 fca8 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"end", TOKEN_END},
 801a7f8:	2314      	movs	r3, #20
 801a7fa:	f887 316b 	strb.w	r3, [r7, #363]	; 0x16b
};
 801a7fe:	f207 126b 	addw	r2, r7, #363	; 0x16b
 801a802:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801a806:	33fc      	adds	r3, #252	; 0xfc
 801a808:	4951      	ldr	r1, [pc, #324]	; (801a950 <_Z41__static_initialization_and_destruction_0ii+0x3ac>)
 801a80a:	4618      	mov	r0, r3
 801a80c:	f7e6 fd14 	bl	8001238 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>
 801a810:	f107 0340 	add.w	r3, r7, #64	; 0x40
 801a814:	f107 0248 	add.w	r2, r7, #72	; 0x48
 801a818:	601a      	str	r2, [r3, #0]
 801a81a:	f107 0340 	add.w	r3, r7, #64	; 0x40
 801a81e:	220a      	movs	r2, #10
 801a820:	605a      	str	r2, [r3, #4]
 801a822:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 801a826:	4618      	mov	r0, r3
 801a828:	f7e7 fb01 	bl	8001e2e <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 801a82c:	f507 71b6 	add.w	r1, r7, #364	; 0x16c
 801a830:	f107 0240 	add.w	r2, r7, #64	; 0x40
 801a834:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 801a838:	9300      	str	r3, [sp, #0]
 801a83a:	460b      	mov	r3, r1
 801a83c:	ca06      	ldmia	r2, {r1, r2}
 801a83e:	4845      	ldr	r0, [pc, #276]	; (801a954 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 801a840:	f7e7 fb0d 	bl	8001e5e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>
 801a844:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 801a848:	4618      	mov	r0, r3
 801a84a:	f7e7 fafc 	bl	8001e46 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 801a84e:	f107 0448 	add.w	r4, r7, #72	; 0x48
 801a852:	f504 748c 	add.w	r4, r4, #280	; 0x118
 801a856:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801a85a:	429c      	cmp	r4, r3
 801a85c:	d004      	beq.n	801a868 <_Z41__static_initialization_and_destruction_0ii+0x2c4>
 801a85e:	3c1c      	subs	r4, #28
 801a860:	4620      	mov	r0, r4
 801a862:	f7e6 fc3c 	bl	80010de <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 801a866:	e7f6      	b.n	801a856 <_Z41__static_initialization_and_destruction_0ii+0x2b2>
};
 801a868:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 801a86c:	2200      	movs	r2, #0
 801a86e:	601a      	str	r2, [r3, #0]
 801a870:	605a      	str	r2, [r3, #4]
 801a872:	609a      	str	r2, [r3, #8]
 801a874:	233c      	movs	r3, #60	; 0x3c
 801a876:	f887 317c 	strb.w	r3, [r7, #380]	; 0x17c
 801a87a:	231b      	movs	r3, #27
 801a87c:	f887 317d 	strb.w	r3, [r7, #381]	; 0x17d
 801a880:	231c      	movs	r3, #28
 801a882:	f887 317e 	strb.w	r3, [r7, #382]	; 0x17e
 801a886:	233e      	movs	r3, #62	; 0x3e
 801a888:	f887 317f 	strb.w	r3, [r7, #383]	; 0x17f
 801a88c:	2319      	movs	r3, #25
 801a88e:	f887 3180 	strb.w	r3, [r7, #384]	; 0x180
 801a892:	231a      	movs	r3, #26
 801a894:	f887 3181 	strb.w	r3, [r7, #385]	; 0x181
 801a898:	233d      	movs	r3, #61	; 0x3d
 801a89a:	f887 3182 	strb.w	r3, [r7, #386]	; 0x182
 801a89e:	2318      	movs	r3, #24
 801a8a0:	f887 3183 	strb.w	r3, [r7, #387]	; 0x183
 801a8a4:	231d      	movs	r3, #29
 801a8a6:	f887 3184 	strb.w	r3, [r7, #388]	; 0x184
 801a8aa:	2321      	movs	r3, #33	; 0x21
 801a8ac:	f887 3185 	strb.w	r3, [r7, #389]	; 0x185
 801a8b0:	2317      	movs	r3, #23
 801a8b2:	f887 3186 	strb.w	r3, [r7, #390]	; 0x186
 801a8b6:	231e      	movs	r3, #30
 801a8b8:	f887 3187 	strb.w	r3, [r7, #391]	; 0x187
 801a8bc:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 801a8c0:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 801a8c4:	2304      	movs	r3, #4
 801a8c6:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 801a8ca:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801a8ce:	4618      	mov	r0, r3
 801a8d0:	f7e7 faf5 	bl	8001ebe <_ZNSaISt4pairIKc12double_tokenEEC1Ev>
 801a8d4:	f507 72c4 	add.w	r2, r7, #392	; 0x188
 801a8d8:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801a8dc:	9300      	str	r3, [sp, #0]
 801a8de:	4613      	mov	r3, r2
 801a8e0:	f507 72ba 	add.w	r2, r7, #372	; 0x174
 801a8e4:	ca06      	ldmia	r2, {r1, r2}
 801a8e6:	481c      	ldr	r0, [pc, #112]	; (801a958 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 801a8e8:	f7e7 fb01 	bl	8001eee <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 801a8ec:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801a8f0:	4618      	mov	r0, r3
 801a8f2:	f7e7 faf0 	bl	8001ed6 <_ZNSaISt4pairIKc12double_tokenEED1Ev>
static const std::map<char, double_token> token_double_chars
 801a8f6:	1d3b      	adds	r3, r7, #4
 801a8f8:	681b      	ldr	r3, [r3, #0]
 801a8fa:	2b00      	cmp	r3, #0
 801a8fc:	d10e      	bne.n	801a91c <_Z41__static_initialization_and_destruction_0ii+0x378>
 801a8fe:	463b      	mov	r3, r7
 801a900:	681b      	ldr	r3, [r3, #0]
 801a902:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801a906:	4293      	cmp	r3, r2
 801a908:	d108      	bne.n	801a91c <_Z41__static_initialization_and_destruction_0ii+0x378>
 801a90a:	4813      	ldr	r0, [pc, #76]	; (801a958 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 801a90c:	f7ee ffba 	bl	8009884 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>
static const std::map<std::string, token_type> token_strings
 801a910:	4810      	ldr	r0, [pc, #64]	; (801a954 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 801a912:	f7ee ffc4 	bl	800989e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
static const std::map<char, token_type> token_chars
 801a916:	4804      	ldr	r0, [pc, #16]	; (801a928 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 801a918:	f7ee ffce 	bl	80098b8 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>
 801a91c:	bf00      	nop
 801a91e:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 801a922:	46bd      	mov	sp, r7
 801a924:	bd90      	pop	{r4, r7, pc}
 801a926:	bf00      	nop
 801a928:	20000554 	.word	0x20000554
 801a92c:	08029e94 	.word	0x08029e94
 801a930:	08029e9c 	.word	0x08029e9c
 801a934:	08029ea4 	.word	0x08029ea4
 801a938:	08029eac 	.word	0x08029eac
 801a93c:	08029eb4 	.word	0x08029eb4
 801a940:	08029ebc 	.word	0x08029ebc
 801a944:	08029ec0 	.word	0x08029ec0
 801a948:	08029ec8 	.word	0x08029ec8
 801a94c:	08029ed0 	.word	0x08029ed0
 801a950:	08029ed8 	.word	0x08029ed8
 801a954:	2000056c 	.word	0x2000056c
 801a958:	20000584 	.word	0x20000584

0801a95c <_GLOBAL__sub_I__ZN16Variable_handler12get_instanceEv>:
 801a95c:	b580      	push	{r7, lr}
 801a95e:	af00      	add	r7, sp, #0
 801a960:	f64f 71ff 	movw	r1, #65535	; 0xffff
 801a964:	2001      	movs	r0, #1
 801a966:	f7ff fe1d 	bl	801a5a4 <_Z41__static_initialization_and_destruction_0ii>
 801a96a:	bd80      	pop	{r7, pc}

0801a96c <_GLOBAL__sub_D__ZN16Variable_handler12get_instanceEv>:
 801a96c:	b580      	push	{r7, lr}
 801a96e:	af00      	add	r7, sp, #0
 801a970:	f64f 71ff 	movw	r1, #65535	; 0xffff
 801a974:	2000      	movs	r0, #0
 801a976:	f7ff fe15 	bl	801a5a4 <_Z41__static_initialization_and_destruction_0ii>
 801a97a:	bd80      	pop	{r7, pc}

0801a97c <_ZN6Parser31parse_variable_or_function_callEP17Primal_expression>:
#include "Parser.h"

void Parser::parse_variable_or_function_call(Primal_expression *exp)
{
 801a97c:	b580      	push	{r7, lr}
 801a97e:	b08a      	sub	sp, #40	; 0x28
 801a980:	af00      	add	r7, sp, #0
 801a982:	6078      	str	r0, [r7, #4]
 801a984:	6039      	str	r1, [r7, #0]
	std::string id(std::get<std::string>(token_buffer.value));
 801a986:	687b      	ldr	r3, [r7, #4]
 801a988:	3304      	adds	r3, #4
 801a98a:	4618      	mov	r0, r3
 801a98c:	f7f9 fd84 	bl	8014498 <_ZSt3getINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_ifbEERT_RSt7variantIJDpT0_EE>
 801a990:	4602      	mov	r2, r0
 801a992:	f107 0308 	add.w	r3, r7, #8
 801a996:	4611      	mov	r1, r2
 801a998:	4618      	mov	r0, r3
 801a99a:	f009 fa1d 	bl	8023dd8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
	get_next_token();
 801a99e:	6878      	ldr	r0, [r7, #4]
 801a9a0:	f7f9 fb7f 	bl	80140a2 <_ZN6Parser14get_next_tokenEv>
	if (token_buffer.type == TOKEN_LEFT_BRACKET)
 801a9a4:	687b      	ldr	r3, [r7, #4]
 801a9a6:	781b      	ldrb	r3, [r3, #0]
 801a9a8:	2b26      	cmp	r3, #38	; 0x26
 801a9aa:	d113      	bne.n	801a9d4 <_ZN6Parser31parse_variable_or_function_callEP17Primal_expression+0x58>
	{
		exp->type = PRIMAL_FUNCTION_CALL;
 801a9ac:	683b      	ldr	r3, [r7, #0]
 801a9ae:	2205      	movs	r2, #5
 801a9b0:	701a      	strb	r2, [r3, #0]
		exp->content = parse_function_call(id);
 801a9b2:	f107 0308 	add.w	r3, r7, #8
 801a9b6:	4619      	mov	r1, r3
 801a9b8:	6878      	ldr	r0, [r7, #4]
 801a9ba:	f7f9 f8cd 	bl	8013b58 <_ZN6Parser19parse_function_callERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801a9be:	4603      	mov	r3, r0
 801a9c0:	623b      	str	r3, [r7, #32]
 801a9c2:	683b      	ldr	r3, [r7, #0]
 801a9c4:	3304      	adds	r3, #4
 801a9c6:	f107 0220 	add.w	r2, r7, #32
 801a9ca:	4611      	mov	r1, r2
 801a9cc:	4618      	mov	r0, r3
 801a9ce:	f000 fcca 	bl	801b366 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIS9_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
 801a9d2:	e012      	b.n	801a9fa <_ZN6Parser31parse_variable_or_function_callEP17Primal_expression+0x7e>
	}
	else
	{
		exp->type = PRIMAL_VARIABLE;
 801a9d4:	683b      	ldr	r3, [r7, #0]
 801a9d6:	2204      	movs	r2, #4
 801a9d8:	701a      	strb	r2, [r3, #0]
		exp->content = parse_variable(id);
 801a9da:	f107 0308 	add.w	r3, r7, #8
 801a9de:	4619      	mov	r1, r3
 801a9e0:	6878      	ldr	r0, [r7, #4]
 801a9e2:	f7f9 f807 	bl	80139f4 <_ZN6Parser14parse_variableERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801a9e6:	4603      	mov	r3, r0
 801a9e8:	627b      	str	r3, [r7, #36]	; 0x24
 801a9ea:	683b      	ldr	r3, [r7, #0]
 801a9ec:	3304      	adds	r3, #4
 801a9ee:	f107 0224 	add.w	r2, r7, #36	; 0x24
 801a9f2:	4611      	mov	r1, r2
 801a9f4:	4618      	mov	r0, r3
 801a9f6:	f000 fce0 	bl	801b3ba <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIS7_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
	std::string id(std::get<std::string>(token_buffer.value));
 801a9fa:	f107 0308 	add.w	r3, r7, #8
 801a9fe:	4618      	mov	r0, r3
 801aa00:	f009 f81b 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	}
}
 801aa04:	bf00      	nop
 801aa06:	3728      	adds	r7, #40	; 0x28
 801aa08:	46bd      	mov	sp, r7
 801aa0a:	bd80      	pop	{r7, pc}

0801aa0c <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEC1Ev>:
      variant() = default;
 801aa0c:	b580      	push	{r7, lr}
 801aa0e:	b082      	sub	sp, #8
 801aa10:	af00      	add	r7, sp, #0
 801aa12:	6078      	str	r0, [r7, #4]
 801aa14:	687b      	ldr	r3, [r7, #4]
 801aa16:	4618      	mov	r0, r3
 801aa18:	f000 fd44 	bl	801b4a4 <_ZNSt8__detail9__variant13_Variant_baseIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEC1Ev>
 801aa1c:	687b      	ldr	r3, [r7, #4]
 801aa1e:	4618      	mov	r0, r3
 801aa20:	3708      	adds	r7, #8
 801aa22:	46bd      	mov	sp, r7
 801aa24:	bd80      	pop	{r7, pc}

0801aa26 <_ZN17Primal_expressionC1Ev>:
	PRIMAL_STRING,
	PRIMAL_VARIABLE,
	PRIMAL_FUNCTION_CALL
}primal_type;

class Primal_expression
 801aa26:	b580      	push	{r7, lr}
 801aa28:	b082      	sub	sp, #8
 801aa2a:	af00      	add	r7, sp, #0
 801aa2c:	6078      	str	r0, [r7, #4]
 801aa2e:	687b      	ldr	r3, [r7, #4]
 801aa30:	3304      	adds	r3, #4
 801aa32:	4618      	mov	r0, r3
 801aa34:	f7ff ffea 	bl	801aa0c <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEC1Ev>
 801aa38:	687b      	ldr	r3, [r7, #4]
 801aa3a:	4618      	mov	r0, r3
 801aa3c:	3708      	adds	r7, #8
 801aa3e:	46bd      	mov	sp, r7
 801aa40:	bd80      	pop	{r7, pc}
	...

0801aa44 <_ZN6Parser23parse_primal_expressionEv>:

Primal_expression* Parser::parse_primal_expression()
{
 801aa44:	b590      	push	{r4, r7, lr}
 801aa46:	b093      	sub	sp, #76	; 0x4c
 801aa48:	af00      	add	r7, sp, #0
 801aa4a:	6078      	str	r0, [r7, #4]
	auto exp = new Primal_expression();
 801aa4c:	2020      	movs	r0, #32
 801aa4e:	f008 fd52 	bl	80234f6 <_Znwj>
 801aa52:	4603      	mov	r3, r0
 801aa54:	461c      	mov	r4, r3
 801aa56:	4620      	mov	r0, r4
 801aa58:	2320      	movs	r3, #32
 801aa5a:	461a      	mov	r2, r3
 801aa5c:	2100      	movs	r1, #0
 801aa5e:	f00a fa1f 	bl	8024ea0 <memset>
 801aa62:	4620      	mov	r0, r4
 801aa64:	f7ff ffdf 	bl	801aa26 <_ZN17Primal_expressionC1Ev>
 801aa68:	647c      	str	r4, [r7, #68]	; 0x44
	switch(token_buffer.type)
 801aa6a:	687b      	ldr	r3, [r7, #4]
 801aa6c:	781b      	ldrb	r3, [r3, #0]
 801aa6e:	3b02      	subs	r3, #2
 801aa70:	2b0d      	cmp	r3, #13
 801aa72:	f200 808b 	bhi.w	801ab8c <_ZN6Parser23parse_primal_expressionEv+0x148>
 801aa76:	a201      	add	r2, pc, #4	; (adr r2, 801aa7c <_ZN6Parser23parse_primal_expressionEv+0x38>)
 801aa78:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801aa7c:	0801ab83 	.word	0x0801ab83
 801aa80:	0801aaf7 	.word	0x0801aaf7
 801aa84:	0801ab1d 	.word	0x0801ab1d
 801aa88:	0801aab5 	.word	0x0801aab5
 801aa8c:	0801aad7 	.word	0x0801aad7
 801aa90:	0801ab8d 	.word	0x0801ab8d
 801aa94:	0801ab8d 	.word	0x0801ab8d
 801aa98:	0801ab8d 	.word	0x0801ab8d
 801aa9c:	0801ab8d 	.word	0x0801ab8d
 801aaa0:	0801ab8d 	.word	0x0801ab8d
 801aaa4:	0801ab8d 	.word	0x0801ab8d
 801aaa8:	0801ab8d 	.word	0x0801ab8d
 801aaac:	0801ab8d 	.word	0x0801ab8d
 801aab0:	0801ab43 	.word	0x0801ab43
	{
	case TOKEN_TRUE:
		exp->type = PRIMAL_BOOL;
 801aab4:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 801aab6:	2200      	movs	r2, #0
 801aab8:	701a      	strb	r2, [r3, #0]
		exp->content = true;
 801aaba:	2301      	movs	r3, #1
 801aabc:	73bb      	strb	r3, [r7, #14]
 801aabe:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 801aac0:	3304      	adds	r3, #4
 801aac2:	f107 020e 	add.w	r2, r7, #14
 801aac6:	4611      	mov	r1, r2
 801aac8:	4618      	mov	r0, r3
 801aaca:	f000 fcf8 	bl	801b4be <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIbEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
		get_next_token();
 801aace:	6878      	ldr	r0, [r7, #4]
 801aad0:	f7f9 fae7 	bl	80140a2 <_ZN6Parser14get_next_tokenEv>
		break;
 801aad4:	e077      	b.n	801abc6 <_ZN6Parser23parse_primal_expressionEv+0x182>
	case TOKEN_FALSE:
		exp->type = PRIMAL_BOOL;
 801aad6:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 801aad8:	2200      	movs	r2, #0
 801aada:	701a      	strb	r2, [r3, #0]
		exp->content = false;
 801aadc:	2300      	movs	r3, #0
 801aade:	73fb      	strb	r3, [r7, #15]
 801aae0:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 801aae2:	3304      	adds	r3, #4
 801aae4:	f107 020f 	add.w	r2, r7, #15
 801aae8:	4611      	mov	r1, r2
 801aaea:	4618      	mov	r0, r3
 801aaec:	f000 fce7 	bl	801b4be <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIbEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
		get_next_token();
 801aaf0:	6878      	ldr	r0, [r7, #4]
 801aaf2:	f7f9 fad6 	bl	80140a2 <_ZN6Parser14get_next_tokenEv>
	case TOKEN_INT:
		exp->type = PRIMAL_INT;
 801aaf6:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 801aaf8:	2201      	movs	r2, #1
 801aafa:	701a      	strb	r2, [r3, #0]
		exp->content = std::get<int>(token_buffer.value);
 801aafc:	687b      	ldr	r3, [r7, #4]
 801aafe:	3304      	adds	r3, #4
 801ab00:	4618      	mov	r0, r3
 801ab02:	f000 fd07 	bl	801b514 <_ZSt3getIiJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERT_RSt7variantIJDpT0_EE>
 801ab06:	4602      	mov	r2, r0
 801ab08:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 801ab0a:	3304      	adds	r3, #4
 801ab0c:	4611      	mov	r1, r2
 801ab0e:	4618      	mov	r0, r3
 801ab10:	f000 fd0c 	bl	801b52c <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIRiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_>
		get_next_token();
 801ab14:	6878      	ldr	r0, [r7, #4]
 801ab16:	f7f9 fac4 	bl	80140a2 <_ZN6Parser14get_next_tokenEv>
		break;
 801ab1a:	e054      	b.n	801abc6 <_ZN6Parser23parse_primal_expressionEv+0x182>
	case TOKEN_FLOAT:
		exp->type = PRIMAL_FLOAT;
 801ab1c:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 801ab1e:	2202      	movs	r2, #2
 801ab20:	701a      	strb	r2, [r3, #0]
		exp->content = std::get<float>(token_buffer.value);
 801ab22:	687b      	ldr	r3, [r7, #4]
 801ab24:	3304      	adds	r3, #4
 801ab26:	4618      	mov	r0, r3
 801ab28:	f000 fd2a 	bl	801b580 <_ZSt3getIfJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERT_RSt7variantIJDpT0_EE>
 801ab2c:	4602      	mov	r2, r0
 801ab2e:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 801ab30:	3304      	adds	r3, #4
 801ab32:	4611      	mov	r1, r2
 801ab34:	4618      	mov	r0, r3
 801ab36:	f000 fd2f 	bl	801b598 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIRfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_>
		get_next_token();
 801ab3a:	6878      	ldr	r0, [r7, #4]
 801ab3c:	f7f9 fab1 	bl	80140a2 <_ZN6Parser14get_next_tokenEv>
		break;
 801ab40:	e041      	b.n	801abc6 <_ZN6Parser23parse_primal_expressionEv+0x182>
	case TOKEN_STRING:
		exp->type = PRIMAL_STRING;
 801ab42:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 801ab44:	2203      	movs	r2, #3
 801ab46:	701a      	strb	r2, [r3, #0]
		exp->content = std::string(std::get<std::string>(token_buffer.value));
 801ab48:	687b      	ldr	r3, [r7, #4]
 801ab4a:	3304      	adds	r3, #4
 801ab4c:	4618      	mov	r0, r3
 801ab4e:	f7f9 fca3 	bl	8014498 <_ZSt3getINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_ifbEERT_RSt7variantIJDpT0_EE>
 801ab52:	4602      	mov	r2, r0
 801ab54:	f107 0310 	add.w	r3, r7, #16
 801ab58:	4611      	mov	r1, r2
 801ab5a:	4618      	mov	r0, r3
 801ab5c:	f009 f93c 	bl	8023dd8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 801ab60:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 801ab62:	3304      	adds	r3, #4
 801ab64:	f107 0210 	add.w	r2, r7, #16
 801ab68:	4611      	mov	r1, r2
 801ab6a:	4618      	mov	r0, r3
 801ab6c:	f000 fd3e 	bl	801b5ec <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
 801ab70:	f107 0310 	add.w	r3, r7, #16
 801ab74:	4618      	mov	r0, r3
 801ab76:	f008 ff60 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
		get_next_token();
 801ab7a:	6878      	ldr	r0, [r7, #4]
 801ab7c:	f7f9 fa91 	bl	80140a2 <_ZN6Parser14get_next_tokenEv>
		break;
 801ab80:	e021      	b.n	801abc6 <_ZN6Parser23parse_primal_expressionEv+0x182>
	case TOKEN_IDENTIFIER:
		parse_variable_or_function_call(exp);
 801ab82:	6c79      	ldr	r1, [r7, #68]	; 0x44
 801ab84:	6878      	ldr	r0, [r7, #4]
 801ab86:	f7ff fef9 	bl	801a97c <_ZN6Parser31parse_variable_or_function_callEP17Primal_expression>
		break;
 801ab8a:	e01c      	b.n	801abc6 <_ZN6Parser23parse_primal_expressionEv+0x182>
	default:
		Transmitter::report_error("expression");
 801ab8c:	f107 0340 	add.w	r3, r7, #64	; 0x40
 801ab90:	4618      	mov	r0, r3
 801ab92:	f008 fcc1 	bl	8023518 <_ZNSaIcEC1Ev>
 801ab96:	f107 0240 	add.w	r2, r7, #64	; 0x40
 801ab9a:	f107 0328 	add.w	r3, r7, #40	; 0x28
 801ab9e:	490c      	ldr	r1, [pc, #48]	; (801abd0 <_ZN6Parser23parse_primal_expressionEv+0x18c>)
 801aba0:	4618      	mov	r0, r3
 801aba2:	f7e7 f8f2 	bl	8001d8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801aba6:	f107 0328 	add.w	r3, r7, #40	; 0x28
 801abaa:	4618      	mov	r0, r3
 801abac:	f7fe f828 	bl	8018c00 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801abb0:	f107 0328 	add.w	r3, r7, #40	; 0x28
 801abb4:	4618      	mov	r0, r3
 801abb6:	f008 ff40 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801abba:	f107 0340 	add.w	r3, r7, #64	; 0x40
 801abbe:	4618      	mov	r0, r3
 801abc0:	f008 fcab 	bl	802351a <_ZNSaIcED1Ev>
		break;
 801abc4:	bf00      	nop
	}
	return exp;
 801abc6:	6c7b      	ldr	r3, [r7, #68]	; 0x44
}
 801abc8:	4618      	mov	r0, r3
 801abca:	374c      	adds	r7, #76	; 0x4c
 801abcc:	46bd      	mov	sp, r7
 801abce:	bd90      	pop	{r4, r7, pc}
 801abd0:	08029edc 	.word	0x08029edc

0801abd4 <_ZN6Parser23parse_nested_expressionEv>:

Expression* Parser::parse_nested_expression()
{
 801abd4:	b580      	push	{r7, lr}
 801abd6:	b08a      	sub	sp, #40	; 0x28
 801abd8:	af00      	add	r7, sp, #0
 801abda:	6078      	str	r0, [r7, #4]
	auto exp = parse_expression();
 801abdc:	6878      	ldr	r0, [r7, #4]
 801abde:	f000 fb73 	bl	801b2c8 <_ZN6Parser16parse_expressionEv>
 801abe2:	6278      	str	r0, [r7, #36]	; 0x24
	assert_token(TOKEN_RIGHT_BRACKET, "closing bracket");
 801abe4:	f107 0320 	add.w	r3, r7, #32
 801abe8:	4618      	mov	r0, r3
 801abea:	f008 fc95 	bl	8023518 <_ZNSaIcEC1Ev>
 801abee:	f107 0220 	add.w	r2, r7, #32
 801abf2:	f107 0308 	add.w	r3, r7, #8
 801abf6:	490e      	ldr	r1, [pc, #56]	; (801ac30 <_ZN6Parser23parse_nested_expressionEv+0x5c>)
 801abf8:	4618      	mov	r0, r3
 801abfa:	f7e7 f8c6 	bl	8001d8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801abfe:	f107 0308 	add.w	r3, r7, #8
 801ac02:	461a      	mov	r2, r3
 801ac04:	2127      	movs	r1, #39	; 0x27
 801ac06:	6878      	ldr	r0, [r7, #4]
 801ac08:	f7f8 ff32 	bl	8013a70 <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801ac0c:	f107 0308 	add.w	r3, r7, #8
 801ac10:	4618      	mov	r0, r3
 801ac12:	f008 ff12 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801ac16:	f107 0320 	add.w	r3, r7, #32
 801ac1a:	4618      	mov	r0, r3
 801ac1c:	f008 fc7d 	bl	802351a <_ZNSaIcED1Ev>
	get_next_token();
 801ac20:	6878      	ldr	r0, [r7, #4]
 801ac22:	f7f9 fa3e 	bl	80140a2 <_ZN6Parser14get_next_tokenEv>
	return exp;
 801ac26:	6a7b      	ldr	r3, [r7, #36]	; 0x24
}
 801ac28:	4618      	mov	r0, r3
 801ac2a:	3728      	adds	r7, #40	; 0x28
 801ac2c:	46bd      	mov	sp, r7
 801ac2e:	bd80      	pop	{r7, pc}
 801ac30:	08029ee8 	.word	0x08029ee8

0801ac34 <_ZNSt7variantIJP17Primal_expressionP10ExpressionEEC1Ev>:
 801ac34:	b580      	push	{r7, lr}
 801ac36:	b082      	sub	sp, #8
 801ac38:	af00      	add	r7, sp, #0
 801ac3a:	6078      	str	r0, [r7, #4]
 801ac3c:	687b      	ldr	r3, [r7, #4]
 801ac3e:	4618      	mov	r0, r3
 801ac40:	f000 fd4b 	bl	801b6da <_ZNSt8__detail9__variant13_Variant_baseIJP17Primal_expressionP10ExpressionEEC1Ev>
 801ac44:	687b      	ldr	r3, [r7, #4]
 801ac46:	4618      	mov	r0, r3
 801ac48:	3708      	adds	r7, #8
 801ac4a:	46bd      	mov	sp, r7
 801ac4c:	bd80      	pop	{r7, pc}

0801ac4e <_ZN19Priority_expressionC1Ev>:
	std::variant<bool, int, float, std::string, Variable*, Function_call*> content;
};

class Expression;

class Priority_expression
 801ac4e:	b580      	push	{r7, lr}
 801ac50:	b082      	sub	sp, #8
 801ac52:	af00      	add	r7, sp, #0
 801ac54:	6078      	str	r0, [r7, #4]
 801ac56:	687b      	ldr	r3, [r7, #4]
 801ac58:	4618      	mov	r0, r3
 801ac5a:	f7ff ffeb 	bl	801ac34 <_ZNSt7variantIJP17Primal_expressionP10ExpressionEEC1Ev>
 801ac5e:	687b      	ldr	r3, [r7, #4]
 801ac60:	4618      	mov	r0, r3
 801ac62:	3708      	adds	r7, #8
 801ac64:	46bd      	mov	sp, r7
 801ac66:	bd80      	pop	{r7, pc}

0801ac68 <_ZN6Parser25parse_priority_expressionEv>:

Priority_expression* Parser::parse_priority_expression()
{
 801ac68:	b590      	push	{r4, r7, lr}
 801ac6a:	b087      	sub	sp, #28
 801ac6c:	af00      	add	r7, sp, #0
 801ac6e:	6078      	str	r0, [r7, #4]
	auto exp = new Priority_expression();
 801ac70:	2008      	movs	r0, #8
 801ac72:	f008 fc40 	bl	80234f6 <_Znwj>
 801ac76:	4603      	mov	r3, r0
 801ac78:	461c      	mov	r4, r3
 801ac7a:	2300      	movs	r3, #0
 801ac7c:	6023      	str	r3, [r4, #0]
 801ac7e:	2300      	movs	r3, #0
 801ac80:	7123      	strb	r3, [r4, #4]
 801ac82:	4620      	mov	r0, r4
 801ac84:	f7ff ffe3 	bl	801ac4e <_ZN19Priority_expressionC1Ev>
 801ac88:	617c      	str	r4, [r7, #20]
	if(token_buffer.type == TOKEN_LEFT_BRACKET)
 801ac8a:	687b      	ldr	r3, [r7, #4]
 801ac8c:	781b      	ldrb	r3, [r3, #0]
 801ac8e:	2b26      	cmp	r3, #38	; 0x26
 801ac90:	d10f      	bne.n	801acb2 <_ZN6Parser25parse_priority_expressionEv+0x4a>
	{
		get_next_token();
 801ac92:	6878      	ldr	r0, [r7, #4]
 801ac94:	f7f9 fa05 	bl	80140a2 <_ZN6Parser14get_next_tokenEv>
		exp->exp = parse_nested_expression();
 801ac98:	6878      	ldr	r0, [r7, #4]
 801ac9a:	f7ff ff9b 	bl	801abd4 <_ZN6Parser23parse_nested_expressionEv>
 801ac9e:	4603      	mov	r3, r0
 801aca0:	60fb      	str	r3, [r7, #12]
 801aca2:	697b      	ldr	r3, [r7, #20]
 801aca4:	f107 020c 	add.w	r2, r7, #12
 801aca8:	4611      	mov	r1, r2
 801acaa:	4618      	mov	r0, r3
 801acac:	f000 fd22 	bl	801b6f4 <_ZNSt7variantIJP17Primal_expressionP10ExpressionEEaSIS3_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES4_E4typeEE18is_constructible_vISB_S8_E15is_assignable_vIRSB_S8_EERS4_E4typeES9_>
 801acb0:	e00b      	b.n	801acca <_ZN6Parser25parse_priority_expressionEv+0x62>
	}
	else
	{
		exp->exp = parse_primal_expression();
 801acb2:	6878      	ldr	r0, [r7, #4]
 801acb4:	f7ff fec6 	bl	801aa44 <_ZN6Parser23parse_primal_expressionEv>
 801acb8:	4603      	mov	r3, r0
 801acba:	613b      	str	r3, [r7, #16]
 801acbc:	697b      	ldr	r3, [r7, #20]
 801acbe:	f107 0210 	add.w	r2, r7, #16
 801acc2:	4611      	mov	r1, r2
 801acc4:	4618      	mov	r0, r3
 801acc6:	f000 fd3f 	bl	801b748 <_ZNSt7variantIJP17Primal_expressionP10ExpressionEEaSIS1_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES4_E4typeEE18is_constructible_vISB_S8_E15is_assignable_vIRSB_S8_EERS4_E4typeES9_>
	}
	return exp;
 801acca:	697b      	ldr	r3, [r7, #20]
}
 801accc:	4618      	mov	r0, r3
 801acce:	371c      	adds	r7, #28
 801acd0:	46bd      	mov	sp, r7
 801acd2:	bd90      	pop	{r4, r7, pc}

0801acd4 <_ZN6Parser20match_unary_operatorEP16Unary_expression>:

bool Parser::match_unary_operator(Unary_expression* exp)
{
 801acd4:	b480      	push	{r7}
 801acd6:	b083      	sub	sp, #12
 801acd8:	af00      	add	r7, sp, #0
 801acda:	6078      	str	r0, [r7, #4]
 801acdc:	6039      	str	r1, [r7, #0]
	switch(token_buffer.type)
 801acde:	687b      	ldr	r3, [r7, #4]
 801ace0:	781b      	ldrb	r3, [r3, #0]
 801ace2:	2b17      	cmp	r3, #23
 801ace4:	d005      	beq.n	801acf2 <_ZN6Parser20match_unary_operatorEP16Unary_expression+0x1e>
 801ace6:	2b20      	cmp	r3, #32
 801ace8:	d107      	bne.n	801acfa <_ZN6Parser20match_unary_operatorEP16Unary_expression+0x26>
	{
	case TOKEN_MINUS:
		exp->op = UN_OP_MINUS;
 801acea:	683b      	ldr	r3, [r7, #0]
 801acec:	2201      	movs	r2, #1
 801acee:	711a      	strb	r2, [r3, #4]
		break;
 801acf0:	e005      	b.n	801acfe <_ZN6Parser20match_unary_operatorEP16Unary_expression+0x2a>
	case TOKEN_EXCLAMATION:
		exp->op = UN_OP_EXCLAMATION;
 801acf2:	683b      	ldr	r3, [r7, #0]
 801acf4:	2202      	movs	r2, #2
 801acf6:	711a      	strb	r2, [r3, #4]
		break;
 801acf8:	e001      	b.n	801acfe <_ZN6Parser20match_unary_operatorEP16Unary_expression+0x2a>
	default:
		return false;
 801acfa:	2300      	movs	r3, #0
 801acfc:	e000      	b.n	801ad00 <_ZN6Parser20match_unary_operatorEP16Unary_expression+0x2c>
	}
	return true;
 801acfe:	2301      	movs	r3, #1
}
 801ad00:	4618      	mov	r0, r3
 801ad02:	370c      	adds	r7, #12
 801ad04:	46bd      	mov	sp, r7
 801ad06:	f85d 7b04 	ldr.w	r7, [sp], #4
 801ad0a:	4770      	bx	lr

0801ad0c <_ZN6Parser22parse_unary_expressionEv>:

Unary_expression* Parser::parse_unary_expression()
{
 801ad0c:	b580      	push	{r7, lr}
 801ad0e:	b084      	sub	sp, #16
 801ad10:	af00      	add	r7, sp, #0
 801ad12:	6078      	str	r0, [r7, #4]
	auto exp = new Unary_expression();
 801ad14:	2008      	movs	r0, #8
 801ad16:	f008 fbee 	bl	80234f6 <_Znwj>
 801ad1a:	4603      	mov	r3, r0
 801ad1c:	2200      	movs	r2, #0
 801ad1e:	601a      	str	r2, [r3, #0]
 801ad20:	2200      	movs	r2, #0
 801ad22:	711a      	strb	r2, [r3, #4]
 801ad24:	60fb      	str	r3, [r7, #12]
	if(match_unary_operator(exp))
 801ad26:	68f9      	ldr	r1, [r7, #12]
 801ad28:	6878      	ldr	r0, [r7, #4]
 801ad2a:	f7ff ffd3 	bl	801acd4 <_ZN6Parser20match_unary_operatorEP16Unary_expression>
 801ad2e:	4603      	mov	r3, r0
 801ad30:	2b00      	cmp	r3, #0
 801ad32:	d002      	beq.n	801ad3a <_ZN6Parser22parse_unary_expressionEv+0x2e>
	{
		get_next_token();
 801ad34:	6878      	ldr	r0, [r7, #4]
 801ad36:	f7f9 f9b4 	bl	80140a2 <_ZN6Parser14get_next_tokenEv>
	}
	exp->prior_exp = parse_priority_expression();
 801ad3a:	6878      	ldr	r0, [r7, #4]
 801ad3c:	f7ff ff94 	bl	801ac68 <_ZN6Parser25parse_priority_expressionEv>
 801ad40:	4602      	mov	r2, r0
 801ad42:	68fb      	ldr	r3, [r7, #12]
 801ad44:	601a      	str	r2, [r3, #0]
	return exp;
 801ad46:	68fb      	ldr	r3, [r7, #12]
}
 801ad48:	4618      	mov	r0, r3
 801ad4a:	3710      	adds	r7, #16
 801ad4c:	46bd      	mov	sp, r7
 801ad4e:	bd80      	pop	{r7, pc}

0801ad50 <_ZN6Parser22parse_power_expressionEv>:

Power_expression* Parser::parse_power_expression()
{
 801ad50:	b580      	push	{r7, lr}
 801ad52:	b084      	sub	sp, #16
 801ad54:	af00      	add	r7, sp, #0
 801ad56:	6078      	str	r0, [r7, #4]
	auto exp = new Power_expression();
 801ad58:	2008      	movs	r0, #8
 801ad5a:	f008 fbcc 	bl	80234f6 <_Znwj>
 801ad5e:	4603      	mov	r3, r0
 801ad60:	2200      	movs	r2, #0
 801ad62:	601a      	str	r2, [r3, #0]
 801ad64:	2200      	movs	r2, #0
 801ad66:	605a      	str	r2, [r3, #4]
 801ad68:	60fb      	str	r3, [r7, #12]
	exp->left_un_exp = parse_unary_expression();
 801ad6a:	6878      	ldr	r0, [r7, #4]
 801ad6c:	f7ff ffce 	bl	801ad0c <_ZN6Parser22parse_unary_expressionEv>
 801ad70:	4602      	mov	r2, r0
 801ad72:	68fb      	ldr	r3, [r7, #12]
 801ad74:	601a      	str	r2, [r3, #0]
	if(token_buffer.type == TOKEN_POWER)
 801ad76:	687b      	ldr	r3, [r7, #4]
 801ad78:	781b      	ldrb	r3, [r3, #0]
 801ad7a:	2b23      	cmp	r3, #35	; 0x23
 801ad7c:	d109      	bne.n	801ad92 <_ZN6Parser22parse_power_expressionEv+0x42>
	{
		get_next_token();
 801ad7e:	6878      	ldr	r0, [r7, #4]
 801ad80:	f7f9 f98f 	bl	80140a2 <_ZN6Parser14get_next_tokenEv>
		exp->right_un_exp = parse_unary_expression();
 801ad84:	6878      	ldr	r0, [r7, #4]
 801ad86:	f7ff ffc1 	bl	801ad0c <_ZN6Parser22parse_unary_expressionEv>
 801ad8a:	4602      	mov	r2, r0
 801ad8c:	68fb      	ldr	r3, [r7, #12]
 801ad8e:	605a      	str	r2, [r3, #4]
 801ad90:	e002      	b.n	801ad98 <_ZN6Parser22parse_power_expressionEv+0x48>
	}
	else
	{
		exp->right_un_exp = nullptr;
 801ad92:	68fb      	ldr	r3, [r7, #12]
 801ad94:	2200      	movs	r2, #0
 801ad96:	605a      	str	r2, [r3, #4]
	}
	return exp;
 801ad98:	68fb      	ldr	r3, [r7, #12]
}
 801ad9a:	4618      	mov	r0, r3
 801ad9c:	3710      	adds	r7, #16
 801ad9e:	46bd      	mov	sp, r7
 801ada0:	bd80      	pop	{r7, pc}

0801ada2 <_ZN6Parser23match_multiply_operatorEP19Multiply_expression>:

bool Parser::match_multiply_operator(Multiply_expression* exp)
{
 801ada2:	b580      	push	{r7, lr}
 801ada4:	b084      	sub	sp, #16
 801ada6:	af00      	add	r7, sp, #0
 801ada8:	6078      	str	r0, [r7, #4]
 801adaa:	6039      	str	r1, [r7, #0]
	switch(token_buffer.type)
 801adac:	687b      	ldr	r3, [r7, #4]
 801adae:	781b      	ldrb	r3, [r3, #0]
 801adb0:	2b24      	cmp	r3, #36	; 0x24
 801adb2:	d01c      	beq.n	801adee <_ZN6Parser23match_multiply_operatorEP19Multiply_expression+0x4c>
 801adb4:	2b24      	cmp	r3, #36	; 0x24
 801adb6:	dc25      	bgt.n	801ae04 <_ZN6Parser23match_multiply_operatorEP19Multiply_expression+0x62>
 801adb8:	2b21      	cmp	r3, #33	; 0x21
 801adba:	d002      	beq.n	801adc2 <_ZN6Parser23match_multiply_operatorEP19Multiply_expression+0x20>
 801adbc:	2b22      	cmp	r3, #34	; 0x22
 801adbe:	d00b      	beq.n	801add8 <_ZN6Parser23match_multiply_operatorEP19Multiply_expression+0x36>
 801adc0:	e020      	b.n	801ae04 <_ZN6Parser23match_multiply_operatorEP19Multiply_expression+0x62>
	{
	case TOKEN_MULTIPLY:
		exp->ops.push_back(MULT_OP_MULTIPLY);
 801adc2:	683b      	ldr	r3, [r7, #0]
 801adc4:	330c      	adds	r3, #12
 801adc6:	2201      	movs	r2, #1
 801adc8:	737a      	strb	r2, [r7, #13]
 801adca:	f107 020d 	add.w	r2, r7, #13
 801adce:	4611      	mov	r1, r2
 801add0:	4618      	mov	r0, r3
 801add2:	f000 fce3 	bl	801b79c <_ZNSt6vectorI13mult_operatorSaIS0_EE9push_backEOS0_>
		break;
 801add6:	e017      	b.n	801ae08 <_ZN6Parser23match_multiply_operatorEP19Multiply_expression+0x66>
	case TOKEN_DIVIDE:
		exp->ops.push_back(MULT_OP_DIVIDE);
 801add8:	683b      	ldr	r3, [r7, #0]
 801adda:	330c      	adds	r3, #12
 801addc:	2202      	movs	r2, #2
 801adde:	73ba      	strb	r2, [r7, #14]
 801ade0:	f107 020e 	add.w	r2, r7, #14
 801ade4:	4611      	mov	r1, r2
 801ade6:	4618      	mov	r0, r3
 801ade8:	f000 fcd8 	bl	801b79c <_ZNSt6vectorI13mult_operatorSaIS0_EE9push_backEOS0_>
		break;
 801adec:	e00c      	b.n	801ae08 <_ZN6Parser23match_multiply_operatorEP19Multiply_expression+0x66>
	case TOKEN_MODULO:
		exp->ops.push_back(MULT_OP_MODULO);
 801adee:	683b      	ldr	r3, [r7, #0]
 801adf0:	330c      	adds	r3, #12
 801adf2:	2203      	movs	r2, #3
 801adf4:	73fa      	strb	r2, [r7, #15]
 801adf6:	f107 020f 	add.w	r2, r7, #15
 801adfa:	4611      	mov	r1, r2
 801adfc:	4618      	mov	r0, r3
 801adfe:	f000 fccd 	bl	801b79c <_ZNSt6vectorI13mult_operatorSaIS0_EE9push_backEOS0_>
		break;
 801ae02:	e001      	b.n	801ae08 <_ZN6Parser23match_multiply_operatorEP19Multiply_expression+0x66>
	default:
		return false;
 801ae04:	2300      	movs	r3, #0
 801ae06:	e000      	b.n	801ae0a <_ZN6Parser23match_multiply_operatorEP19Multiply_expression+0x68>
	}
	return true;
 801ae08:	2301      	movs	r3, #1
}
 801ae0a:	4618      	mov	r0, r3
 801ae0c:	3710      	adds	r7, #16
 801ae0e:	46bd      	mov	sp, r7
 801ae10:	bd80      	pop	{r7, pc}

0801ae12 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EEC1Ev>:
      _Vector_base() = default;
 801ae12:	b580      	push	{r7, lr}
 801ae14:	b082      	sub	sp, #8
 801ae16:	af00      	add	r7, sp, #0
 801ae18:	6078      	str	r0, [r7, #4]
 801ae1a:	687b      	ldr	r3, [r7, #4]
 801ae1c:	4618      	mov	r0, r3
 801ae1e:	f000 fcce 	bl	801b7be <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE12_Vector_implC1Ev>
 801ae22:	687b      	ldr	r3, [r7, #4]
 801ae24:	4618      	mov	r0, r3
 801ae26:	3708      	adds	r7, #8
 801ae28:	46bd      	mov	sp, r7
 801ae2a:	bd80      	pop	{r7, pc}

0801ae2c <_ZNSt6vectorIP16Power_expressionSaIS1_EEC1Ev>:
      vector() = default;
 801ae2c:	b580      	push	{r7, lr}
 801ae2e:	b082      	sub	sp, #8
 801ae30:	af00      	add	r7, sp, #0
 801ae32:	6078      	str	r0, [r7, #4]
 801ae34:	687b      	ldr	r3, [r7, #4]
 801ae36:	4618      	mov	r0, r3
 801ae38:	f7ff ffeb 	bl	801ae12 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EEC1Ev>
 801ae3c:	687b      	ldr	r3, [r7, #4]
 801ae3e:	4618      	mov	r0, r3
 801ae40:	3708      	adds	r7, #8
 801ae42:	46bd      	mov	sp, r7
 801ae44:	bd80      	pop	{r7, pc}

0801ae46 <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EEC1Ev>:
      _Vector_base() = default;
 801ae46:	b580      	push	{r7, lr}
 801ae48:	b082      	sub	sp, #8
 801ae4a:	af00      	add	r7, sp, #0
 801ae4c:	6078      	str	r0, [r7, #4]
 801ae4e:	687b      	ldr	r3, [r7, #4]
 801ae50:	4618      	mov	r0, r3
 801ae52:	f000 fcc4 	bl	801b7de <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE12_Vector_implC1Ev>
 801ae56:	687b      	ldr	r3, [r7, #4]
 801ae58:	4618      	mov	r0, r3
 801ae5a:	3708      	adds	r7, #8
 801ae5c:	46bd      	mov	sp, r7
 801ae5e:	bd80      	pop	{r7, pc}

0801ae60 <_ZNSt6vectorI13mult_operatorSaIS0_EEC1Ev>:
      vector() = default;
 801ae60:	b580      	push	{r7, lr}
 801ae62:	b082      	sub	sp, #8
 801ae64:	af00      	add	r7, sp, #0
 801ae66:	6078      	str	r0, [r7, #4]
 801ae68:	687b      	ldr	r3, [r7, #4]
 801ae6a:	4618      	mov	r0, r3
 801ae6c:	f7ff ffeb 	bl	801ae46 <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EEC1Ev>
 801ae70:	687b      	ldr	r3, [r7, #4]
 801ae72:	4618      	mov	r0, r3
 801ae74:	3708      	adds	r7, #8
 801ae76:	46bd      	mov	sp, r7
 801ae78:	bd80      	pop	{r7, pc}

0801ae7a <_ZN19Multiply_expressionC1Ev>:
	MULT_OP_MULTIPLY,
	MULT_OP_DIVIDE,
	MULT_OP_MODULO
}mult_operator;

class Multiply_expression
 801ae7a:	b580      	push	{r7, lr}
 801ae7c:	b082      	sub	sp, #8
 801ae7e:	af00      	add	r7, sp, #0
 801ae80:	6078      	str	r0, [r7, #4]
 801ae82:	687b      	ldr	r3, [r7, #4]
 801ae84:	4618      	mov	r0, r3
 801ae86:	f7ff ffd1 	bl	801ae2c <_ZNSt6vectorIP16Power_expressionSaIS1_EEC1Ev>
 801ae8a:	687b      	ldr	r3, [r7, #4]
 801ae8c:	330c      	adds	r3, #12
 801ae8e:	4618      	mov	r0, r3
 801ae90:	f7ff ffe6 	bl	801ae60 <_ZNSt6vectorI13mult_operatorSaIS0_EEC1Ev>
 801ae94:	687b      	ldr	r3, [r7, #4]
 801ae96:	4618      	mov	r0, r3
 801ae98:	3708      	adds	r7, #8
 801ae9a:	46bd      	mov	sp, r7
 801ae9c:	bd80      	pop	{r7, pc}

0801ae9e <_ZN6Parser25parse_multiply_expressionEv>:

Multiply_expression* Parser::parse_multiply_expression()
{
 801ae9e:	b590      	push	{r4, r7, lr}
 801aea0:	b087      	sub	sp, #28
 801aea2:	af00      	add	r7, sp, #0
 801aea4:	6078      	str	r0, [r7, #4]
	auto exp = new Multiply_expression();
 801aea6:	2018      	movs	r0, #24
 801aea8:	f008 fb25 	bl	80234f6 <_Znwj>
 801aeac:	4603      	mov	r3, r0
 801aeae:	461c      	mov	r4, r3
 801aeb0:	4622      	mov	r2, r4
 801aeb2:	2300      	movs	r3, #0
 801aeb4:	6013      	str	r3, [r2, #0]
 801aeb6:	6053      	str	r3, [r2, #4]
 801aeb8:	6093      	str	r3, [r2, #8]
 801aeba:	60d3      	str	r3, [r2, #12]
 801aebc:	6113      	str	r3, [r2, #16]
 801aebe:	6153      	str	r3, [r2, #20]
 801aec0:	4620      	mov	r0, r4
 801aec2:	f7ff ffda 	bl	801ae7a <_ZN19Multiply_expressionC1Ev>
 801aec6:	617c      	str	r4, [r7, #20]
	exp->pow_exps.push_back(parse_power_expression());
 801aec8:	697c      	ldr	r4, [r7, #20]
 801aeca:	6878      	ldr	r0, [r7, #4]
 801aecc:	f7ff ff40 	bl	801ad50 <_ZN6Parser22parse_power_expressionEv>
 801aed0:	4603      	mov	r3, r0
 801aed2:	60fb      	str	r3, [r7, #12]
 801aed4:	f107 030c 	add.w	r3, r7, #12
 801aed8:	4619      	mov	r1, r3
 801aeda:	4620      	mov	r0, r4
 801aedc:	f000 fc8f 	bl	801b7fe <_ZNSt6vectorIP16Power_expressionSaIS1_EE9push_backEOS1_>
	while(match_multiply_operator(exp))
 801aee0:	6979      	ldr	r1, [r7, #20]
 801aee2:	6878      	ldr	r0, [r7, #4]
 801aee4:	f7ff ff5d 	bl	801ada2 <_ZN6Parser23match_multiply_operatorEP19Multiply_expression>
 801aee8:	4603      	mov	r3, r0
 801aeea:	2b00      	cmp	r3, #0
 801aeec:	d00f      	beq.n	801af0e <_ZN6Parser25parse_multiply_expressionEv+0x70>
	{
		get_next_token();
 801aeee:	6878      	ldr	r0, [r7, #4]
 801aef0:	f7f9 f8d7 	bl	80140a2 <_ZN6Parser14get_next_tokenEv>
		exp->pow_exps.push_back(parse_power_expression());
 801aef4:	697c      	ldr	r4, [r7, #20]
 801aef6:	6878      	ldr	r0, [r7, #4]
 801aef8:	f7ff ff2a 	bl	801ad50 <_ZN6Parser22parse_power_expressionEv>
 801aefc:	4603      	mov	r3, r0
 801aefe:	613b      	str	r3, [r7, #16]
 801af00:	f107 0310 	add.w	r3, r7, #16
 801af04:	4619      	mov	r1, r3
 801af06:	4620      	mov	r0, r4
 801af08:	f000 fc79 	bl	801b7fe <_ZNSt6vectorIP16Power_expressionSaIS1_EE9push_backEOS1_>
	while(match_multiply_operator(exp))
 801af0c:	e7e8      	b.n	801aee0 <_ZN6Parser25parse_multiply_expressionEv+0x42>
	}
	return exp;
 801af0e:	697b      	ldr	r3, [r7, #20]
}
 801af10:	4618      	mov	r0, r3
 801af12:	371c      	adds	r7, #28
 801af14:	46bd      	mov	sp, r7
 801af16:	bd90      	pop	{r4, r7, pc}

0801af18 <_ZN6Parser18match_sum_operatorEP14Sum_expression>:

bool Parser::match_sum_operator(Sum_expression* exp)
{
 801af18:	b580      	push	{r7, lr}
 801af1a:	b084      	sub	sp, #16
 801af1c:	af00      	add	r7, sp, #0
 801af1e:	6078      	str	r0, [r7, #4]
 801af20:	6039      	str	r1, [r7, #0]
	switch(token_buffer.type)
 801af22:	687b      	ldr	r3, [r7, #4]
 801af24:	781b      	ldrb	r3, [r3, #0]
 801af26:	2b1f      	cmp	r3, #31
 801af28:	d002      	beq.n	801af30 <_ZN6Parser18match_sum_operatorEP14Sum_expression+0x18>
 801af2a:	2b20      	cmp	r3, #32
 801af2c:	d00b      	beq.n	801af46 <_ZN6Parser18match_sum_operatorEP14Sum_expression+0x2e>
 801af2e:	e015      	b.n	801af5c <_ZN6Parser18match_sum_operatorEP14Sum_expression+0x44>
	{
	case TOKEN_PLUS:
		exp->ops.push_back(SUM_OP_PLUS);
 801af30:	683b      	ldr	r3, [r7, #0]
 801af32:	330c      	adds	r3, #12
 801af34:	2200      	movs	r2, #0
 801af36:	73ba      	strb	r2, [r7, #14]
 801af38:	f107 020e 	add.w	r2, r7, #14
 801af3c:	4611      	mov	r1, r2
 801af3e:	4618      	mov	r0, r3
 801af40:	f000 fc6e 	bl	801b820 <_ZNSt6vectorI12sum_operatorSaIS0_EE9push_backEOS0_>
		break;
 801af44:	e00c      	b.n	801af60 <_ZN6Parser18match_sum_operatorEP14Sum_expression+0x48>
	case TOKEN_MINUS:
		exp->ops.push_back(SUM_OP_MINUS);
 801af46:	683b      	ldr	r3, [r7, #0]
 801af48:	330c      	adds	r3, #12
 801af4a:	2201      	movs	r2, #1
 801af4c:	73fa      	strb	r2, [r7, #15]
 801af4e:	f107 020f 	add.w	r2, r7, #15
 801af52:	4611      	mov	r1, r2
 801af54:	4618      	mov	r0, r3
 801af56:	f000 fc63 	bl	801b820 <_ZNSt6vectorI12sum_operatorSaIS0_EE9push_backEOS0_>
		break;
 801af5a:	e001      	b.n	801af60 <_ZN6Parser18match_sum_operatorEP14Sum_expression+0x48>
	default:
		return false;
 801af5c:	2300      	movs	r3, #0
 801af5e:	e000      	b.n	801af62 <_ZN6Parser18match_sum_operatorEP14Sum_expression+0x4a>
	}
	return true;
 801af60:	2301      	movs	r3, #1
}
 801af62:	4618      	mov	r0, r3
 801af64:	3710      	adds	r7, #16
 801af66:	46bd      	mov	sp, r7
 801af68:	bd80      	pop	{r7, pc}

0801af6a <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EEC1Ev>:
      _Vector_base() = default;
 801af6a:	b580      	push	{r7, lr}
 801af6c:	b082      	sub	sp, #8
 801af6e:	af00      	add	r7, sp, #0
 801af70:	6078      	str	r0, [r7, #4]
 801af72:	687b      	ldr	r3, [r7, #4]
 801af74:	4618      	mov	r0, r3
 801af76:	f000 fc64 	bl	801b842 <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE12_Vector_implC1Ev>
 801af7a:	687b      	ldr	r3, [r7, #4]
 801af7c:	4618      	mov	r0, r3
 801af7e:	3708      	adds	r7, #8
 801af80:	46bd      	mov	sp, r7
 801af82:	bd80      	pop	{r7, pc}

0801af84 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EEC1Ev>:
      vector() = default;
 801af84:	b580      	push	{r7, lr}
 801af86:	b082      	sub	sp, #8
 801af88:	af00      	add	r7, sp, #0
 801af8a:	6078      	str	r0, [r7, #4]
 801af8c:	687b      	ldr	r3, [r7, #4]
 801af8e:	4618      	mov	r0, r3
 801af90:	f7ff ffeb 	bl	801af6a <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EEC1Ev>
 801af94:	687b      	ldr	r3, [r7, #4]
 801af96:	4618      	mov	r0, r3
 801af98:	3708      	adds	r7, #8
 801af9a:	46bd      	mov	sp, r7
 801af9c:	bd80      	pop	{r7, pc}

0801af9e <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EEC1Ev>:
      _Vector_base() = default;
 801af9e:	b580      	push	{r7, lr}
 801afa0:	b082      	sub	sp, #8
 801afa2:	af00      	add	r7, sp, #0
 801afa4:	6078      	str	r0, [r7, #4]
 801afa6:	687b      	ldr	r3, [r7, #4]
 801afa8:	4618      	mov	r0, r3
 801afaa:	f000 fc5a 	bl	801b862 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE12_Vector_implC1Ev>
 801afae:	687b      	ldr	r3, [r7, #4]
 801afb0:	4618      	mov	r0, r3
 801afb2:	3708      	adds	r7, #8
 801afb4:	46bd      	mov	sp, r7
 801afb6:	bd80      	pop	{r7, pc}

0801afb8 <_ZNSt6vectorI12sum_operatorSaIS0_EEC1Ev>:
      vector() = default;
 801afb8:	b580      	push	{r7, lr}
 801afba:	b082      	sub	sp, #8
 801afbc:	af00      	add	r7, sp, #0
 801afbe:	6078      	str	r0, [r7, #4]
 801afc0:	687b      	ldr	r3, [r7, #4]
 801afc2:	4618      	mov	r0, r3
 801afc4:	f7ff ffeb 	bl	801af9e <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EEC1Ev>
 801afc8:	687b      	ldr	r3, [r7, #4]
 801afca:	4618      	mov	r0, r3
 801afcc:	3708      	adds	r7, #8
 801afce:	46bd      	mov	sp, r7
 801afd0:	bd80      	pop	{r7, pc}

0801afd2 <_ZN14Sum_expressionC1Ev>:
{
	SUM_OP_PLUS,
	SUM_OP_MINUS
}sum_operator;

class Sum_expression
 801afd2:	b580      	push	{r7, lr}
 801afd4:	b082      	sub	sp, #8
 801afd6:	af00      	add	r7, sp, #0
 801afd8:	6078      	str	r0, [r7, #4]
 801afda:	687b      	ldr	r3, [r7, #4]
 801afdc:	4618      	mov	r0, r3
 801afde:	f7ff ffd1 	bl	801af84 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EEC1Ev>
 801afe2:	687b      	ldr	r3, [r7, #4]
 801afe4:	330c      	adds	r3, #12
 801afe6:	4618      	mov	r0, r3
 801afe8:	f7ff ffe6 	bl	801afb8 <_ZNSt6vectorI12sum_operatorSaIS0_EEC1Ev>
 801afec:	687b      	ldr	r3, [r7, #4]
 801afee:	4618      	mov	r0, r3
 801aff0:	3708      	adds	r7, #8
 801aff2:	46bd      	mov	sp, r7
 801aff4:	bd80      	pop	{r7, pc}

0801aff6 <_ZN6Parser20parse_sum_expressionEv>:

Sum_expression* Parser::parse_sum_expression()
{
 801aff6:	b590      	push	{r4, r7, lr}
 801aff8:	b087      	sub	sp, #28
 801affa:	af00      	add	r7, sp, #0
 801affc:	6078      	str	r0, [r7, #4]
	auto exp = new Sum_expression();
 801affe:	2018      	movs	r0, #24
 801b000:	f008 fa79 	bl	80234f6 <_Znwj>
 801b004:	4603      	mov	r3, r0
 801b006:	461c      	mov	r4, r3
 801b008:	4622      	mov	r2, r4
 801b00a:	2300      	movs	r3, #0
 801b00c:	6013      	str	r3, [r2, #0]
 801b00e:	6053      	str	r3, [r2, #4]
 801b010:	6093      	str	r3, [r2, #8]
 801b012:	60d3      	str	r3, [r2, #12]
 801b014:	6113      	str	r3, [r2, #16]
 801b016:	6153      	str	r3, [r2, #20]
 801b018:	4620      	mov	r0, r4
 801b01a:	f7ff ffda 	bl	801afd2 <_ZN14Sum_expressionC1Ev>
 801b01e:	617c      	str	r4, [r7, #20]
	exp->mult_exps.push_back(parse_multiply_expression());
 801b020:	697c      	ldr	r4, [r7, #20]
 801b022:	6878      	ldr	r0, [r7, #4]
 801b024:	f7ff ff3b 	bl	801ae9e <_ZN6Parser25parse_multiply_expressionEv>
 801b028:	4603      	mov	r3, r0
 801b02a:	60fb      	str	r3, [r7, #12]
 801b02c:	f107 030c 	add.w	r3, r7, #12
 801b030:	4619      	mov	r1, r3
 801b032:	4620      	mov	r0, r4
 801b034:	f000 fc25 	bl	801b882 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE9push_backEOS1_>
	while(match_sum_operator(exp))
 801b038:	6979      	ldr	r1, [r7, #20]
 801b03a:	6878      	ldr	r0, [r7, #4]
 801b03c:	f7ff ff6c 	bl	801af18 <_ZN6Parser18match_sum_operatorEP14Sum_expression>
 801b040:	4603      	mov	r3, r0
 801b042:	2b00      	cmp	r3, #0
 801b044:	d00f      	beq.n	801b066 <_ZN6Parser20parse_sum_expressionEv+0x70>
	{
		get_next_token();
 801b046:	6878      	ldr	r0, [r7, #4]
 801b048:	f7f9 f82b 	bl	80140a2 <_ZN6Parser14get_next_tokenEv>
		exp->mult_exps.push_back(parse_multiply_expression());
 801b04c:	697c      	ldr	r4, [r7, #20]
 801b04e:	6878      	ldr	r0, [r7, #4]
 801b050:	f7ff ff25 	bl	801ae9e <_ZN6Parser25parse_multiply_expressionEv>
 801b054:	4603      	mov	r3, r0
 801b056:	613b      	str	r3, [r7, #16]
 801b058:	f107 0310 	add.w	r3, r7, #16
 801b05c:	4619      	mov	r1, r3
 801b05e:	4620      	mov	r0, r4
 801b060:	f000 fc0f 	bl	801b882 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE9push_backEOS1_>
	while(match_sum_operator(exp))
 801b064:	e7e8      	b.n	801b038 <_ZN6Parser20parse_sum_expressionEv+0x42>
	}
	return exp;
 801b066:	697b      	ldr	r3, [r7, #20]
}
 801b068:	4618      	mov	r0, r3
 801b06a:	371c      	adds	r7, #28
 801b06c:	46bd      	mov	sp, r7
 801b06e:	bd90      	pop	{r4, r7, pc}

0801b070 <_ZN6Parser23match_relation_operatorEP19Relation_expression>:

bool Parser::match_relation_operator(Relation_expression* exp)
{
 801b070:	b480      	push	{r7}
 801b072:	b083      	sub	sp, #12
 801b074:	af00      	add	r7, sp, #0
 801b076:	6078      	str	r0, [r7, #4]
 801b078:	6039      	str	r1, [r7, #0]
	switch (token_buffer.type)
 801b07a:	687b      	ldr	r3, [r7, #4]
 801b07c:	781b      	ldrb	r3, [r3, #0]
 801b07e:	3b19      	subs	r3, #25
 801b080:	2b03      	cmp	r3, #3
 801b082:	d81b      	bhi.n	801b0bc <_ZN6Parser23match_relation_operatorEP19Relation_expression+0x4c>
 801b084:	a201      	add	r2, pc, #4	; (adr r2, 801b08c <_ZN6Parser23match_relation_operatorEP19Relation_expression+0x1c>)
 801b086:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801b08a:	bf00      	nop
 801b08c:	0801b0ad 	.word	0x0801b0ad
 801b090:	0801b0b5 	.word	0x0801b0b5
 801b094:	0801b09d 	.word	0x0801b09d
 801b098:	0801b0a5 	.word	0x0801b0a5
	{
	case TOKEN_SMALLER_THAN:
		exp->op = REL_OP_SMALLER;
 801b09c:	683b      	ldr	r3, [r7, #0]
 801b09e:	2201      	movs	r2, #1
 801b0a0:	721a      	strb	r2, [r3, #8]
		break;
 801b0a2:	e010      	b.n	801b0c6 <_ZN6Parser23match_relation_operatorEP19Relation_expression+0x56>
	case TOKEN_SMALLER_OR_EQUAL:
		exp->op = REL_OP_SMALLER_EQUAL;
 801b0a4:	683b      	ldr	r3, [r7, #0]
 801b0a6:	2202      	movs	r2, #2
 801b0a8:	721a      	strb	r2, [r3, #8]
		break;
 801b0aa:	e00c      	b.n	801b0c6 <_ZN6Parser23match_relation_operatorEP19Relation_expression+0x56>
	case TOKEN_GREATER_THAN:
		exp->op = REL_OP_GREATER;
 801b0ac:	683b      	ldr	r3, [r7, #0]
 801b0ae:	2203      	movs	r2, #3
 801b0b0:	721a      	strb	r2, [r3, #8]
		break;
 801b0b2:	e008      	b.n	801b0c6 <_ZN6Parser23match_relation_operatorEP19Relation_expression+0x56>
	case TOKEN_GREATER_OR_EQUAL:
		exp->op = REL_OP_SMALLER_EQUAL;
 801b0b4:	683b      	ldr	r3, [r7, #0]
 801b0b6:	2202      	movs	r2, #2
 801b0b8:	721a      	strb	r2, [r3, #8]
		break;
 801b0ba:	e004      	b.n	801b0c6 <_ZN6Parser23match_relation_operatorEP19Relation_expression+0x56>
	default:
		exp->right_sum_exp = nullptr;
 801b0bc:	683b      	ldr	r3, [r7, #0]
 801b0be:	2200      	movs	r2, #0
 801b0c0:	605a      	str	r2, [r3, #4]
		return false;
 801b0c2:	2300      	movs	r3, #0
 801b0c4:	e000      	b.n	801b0c8 <_ZN6Parser23match_relation_operatorEP19Relation_expression+0x58>
	}
	return true;
 801b0c6:	2301      	movs	r3, #1
}
 801b0c8:	4618      	mov	r0, r3
 801b0ca:	370c      	adds	r7, #12
 801b0cc:	46bd      	mov	sp, r7
 801b0ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b0d2:	4770      	bx	lr

0801b0d4 <_ZN6Parser25parse_relation_expressionEv>:

Relation_expression* Parser::parse_relation_expression()
{
 801b0d4:	b580      	push	{r7, lr}
 801b0d6:	b084      	sub	sp, #16
 801b0d8:	af00      	add	r7, sp, #0
 801b0da:	6078      	str	r0, [r7, #4]
	auto exp = new Relation_expression();
 801b0dc:	200c      	movs	r0, #12
 801b0de:	f008 fa0a 	bl	80234f6 <_Znwj>
 801b0e2:	4603      	mov	r3, r0
 801b0e4:	2200      	movs	r2, #0
 801b0e6:	601a      	str	r2, [r3, #0]
 801b0e8:	2200      	movs	r2, #0
 801b0ea:	605a      	str	r2, [r3, #4]
 801b0ec:	2200      	movs	r2, #0
 801b0ee:	721a      	strb	r2, [r3, #8]
 801b0f0:	60fb      	str	r3, [r7, #12]
	exp->left_sum_exp = parse_sum_expression();
 801b0f2:	6878      	ldr	r0, [r7, #4]
 801b0f4:	f7ff ff7f 	bl	801aff6 <_ZN6Parser20parse_sum_expressionEv>
 801b0f8:	4602      	mov	r2, r0
 801b0fa:	68fb      	ldr	r3, [r7, #12]
 801b0fc:	601a      	str	r2, [r3, #0]
	if(match_relation_operator(exp))
 801b0fe:	68f9      	ldr	r1, [r7, #12]
 801b100:	6878      	ldr	r0, [r7, #4]
 801b102:	f7ff ffb5 	bl	801b070 <_ZN6Parser23match_relation_operatorEP19Relation_expression>
 801b106:	4603      	mov	r3, r0
 801b108:	2b00      	cmp	r3, #0
 801b10a:	d008      	beq.n	801b11e <_ZN6Parser25parse_relation_expressionEv+0x4a>
	{
		get_next_token();
 801b10c:	6878      	ldr	r0, [r7, #4]
 801b10e:	f7f8 ffc8 	bl	80140a2 <_ZN6Parser14get_next_tokenEv>
		exp->right_sum_exp = parse_sum_expression();
 801b112:	6878      	ldr	r0, [r7, #4]
 801b114:	f7ff ff6f 	bl	801aff6 <_ZN6Parser20parse_sum_expressionEv>
 801b118:	4602      	mov	r2, r0
 801b11a:	68fb      	ldr	r3, [r7, #12]
 801b11c:	605a      	str	r2, [r3, #4]
	}
	return exp;
 801b11e:	68fb      	ldr	r3, [r7, #12]
}
 801b120:	4618      	mov	r0, r3
 801b122:	3710      	adds	r7, #16
 801b124:	46bd      	mov	sp, r7
 801b126:	bd80      	pop	{r7, pc}

0801b128 <_ZN6Parser22match_compare_operatorEP18Compare_expression>:

bool Parser::match_compare_operator(Compare_expression *exp)
{
 801b128:	b480      	push	{r7}
 801b12a:	b083      	sub	sp, #12
 801b12c:	af00      	add	r7, sp, #0
 801b12e:	6078      	str	r0, [r7, #4]
 801b130:	6039      	str	r1, [r7, #0]
	switch (token_buffer.type)
 801b132:	687b      	ldr	r3, [r7, #4]
 801b134:	781b      	ldrb	r3, [r3, #0]
 801b136:	2b1d      	cmp	r3, #29
 801b138:	d002      	beq.n	801b140 <_ZN6Parser22match_compare_operatorEP18Compare_expression+0x18>
 801b13a:	2b1e      	cmp	r3, #30
 801b13c:	d004      	beq.n	801b148 <_ZN6Parser22match_compare_operatorEP18Compare_expression+0x20>
 801b13e:	e007      	b.n	801b150 <_ZN6Parser22match_compare_operatorEP18Compare_expression+0x28>
	{
	case TOKEN_EQUALS:
		exp->op = COMP_OP_EQUAL;
 801b140:	683b      	ldr	r3, [r7, #0]
 801b142:	2201      	movs	r2, #1
 801b144:	721a      	strb	r2, [r3, #8]
		break;
 801b146:	e008      	b.n	801b15a <_ZN6Parser22match_compare_operatorEP18Compare_expression+0x32>
	case TOKEN_NOT_EQUAL:
		exp->op = COMP_OP_NOT_EQUAL;
 801b148:	683b      	ldr	r3, [r7, #0]
 801b14a:	2202      	movs	r2, #2
 801b14c:	721a      	strb	r2, [r3, #8]
		break;
 801b14e:	e004      	b.n	801b15a <_ZN6Parser22match_compare_operatorEP18Compare_expression+0x32>
	default:
		exp->right_rel_exp = nullptr;
 801b150:	683b      	ldr	r3, [r7, #0]
 801b152:	2200      	movs	r2, #0
 801b154:	605a      	str	r2, [r3, #4]
		return false;
 801b156:	2300      	movs	r3, #0
 801b158:	e000      	b.n	801b15c <_ZN6Parser22match_compare_operatorEP18Compare_expression+0x34>
	}
	return true;
 801b15a:	2301      	movs	r3, #1
}
 801b15c:	4618      	mov	r0, r3
 801b15e:	370c      	adds	r7, #12
 801b160:	46bd      	mov	sp, r7
 801b162:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b166:	4770      	bx	lr

0801b168 <_ZN6Parser24parse_compare_expressionEv>:

Compare_expression* Parser::parse_compare_expression()
{
 801b168:	b580      	push	{r7, lr}
 801b16a:	b084      	sub	sp, #16
 801b16c:	af00      	add	r7, sp, #0
 801b16e:	6078      	str	r0, [r7, #4]
	auto exp = new Compare_expression();
 801b170:	200c      	movs	r0, #12
 801b172:	f008 f9c0 	bl	80234f6 <_Znwj>
 801b176:	4603      	mov	r3, r0
 801b178:	2200      	movs	r2, #0
 801b17a:	601a      	str	r2, [r3, #0]
 801b17c:	2200      	movs	r2, #0
 801b17e:	605a      	str	r2, [r3, #4]
 801b180:	2200      	movs	r2, #0
 801b182:	721a      	strb	r2, [r3, #8]
 801b184:	60fb      	str	r3, [r7, #12]
	exp->left_rel_exp = parse_relation_expression();
 801b186:	6878      	ldr	r0, [r7, #4]
 801b188:	f7ff ffa4 	bl	801b0d4 <_ZN6Parser25parse_relation_expressionEv>
 801b18c:	4602      	mov	r2, r0
 801b18e:	68fb      	ldr	r3, [r7, #12]
 801b190:	601a      	str	r2, [r3, #0]
	if(match_compare_operator(exp))
 801b192:	68f9      	ldr	r1, [r7, #12]
 801b194:	6878      	ldr	r0, [r7, #4]
 801b196:	f7ff ffc7 	bl	801b128 <_ZN6Parser22match_compare_operatorEP18Compare_expression>
 801b19a:	4603      	mov	r3, r0
 801b19c:	2b00      	cmp	r3, #0
 801b19e:	d008      	beq.n	801b1b2 <_ZN6Parser24parse_compare_expressionEv+0x4a>
	{
		get_next_token();
 801b1a0:	6878      	ldr	r0, [r7, #4]
 801b1a2:	f7f8 ff7e 	bl	80140a2 <_ZN6Parser14get_next_tokenEv>
		exp->right_rel_exp = parse_relation_expression();
 801b1a6:	6878      	ldr	r0, [r7, #4]
 801b1a8:	f7ff ff94 	bl	801b0d4 <_ZN6Parser25parse_relation_expressionEv>
 801b1ac:	4602      	mov	r2, r0
 801b1ae:	68fb      	ldr	r3, [r7, #12]
 801b1b0:	605a      	str	r2, [r3, #4]
	}
	return exp;
 801b1b2:	68fb      	ldr	r3, [r7, #12]
}
 801b1b4:	4618      	mov	r0, r3
 801b1b6:	3710      	adds	r7, #16
 801b1b8:	46bd      	mov	sp, r7
 801b1ba:	bd80      	pop	{r7, pc}

0801b1bc <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EEC1Ev>:
      _Vector_base() = default;
 801b1bc:	b580      	push	{r7, lr}
 801b1be:	b082      	sub	sp, #8
 801b1c0:	af00      	add	r7, sp, #0
 801b1c2:	6078      	str	r0, [r7, #4]
 801b1c4:	687b      	ldr	r3, [r7, #4]
 801b1c6:	4618      	mov	r0, r3
 801b1c8:	f000 fb6c 	bl	801b8a4 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE12_Vector_implC1Ev>
 801b1cc:	687b      	ldr	r3, [r7, #4]
 801b1ce:	4618      	mov	r0, r3
 801b1d0:	3708      	adds	r7, #8
 801b1d2:	46bd      	mov	sp, r7
 801b1d4:	bd80      	pop	{r7, pc}

0801b1d6 <_ZNSt6vectorIP18Compare_expressionSaIS1_EEC1Ev>:
      vector() = default;
 801b1d6:	b580      	push	{r7, lr}
 801b1d8:	b082      	sub	sp, #8
 801b1da:	af00      	add	r7, sp, #0
 801b1dc:	6078      	str	r0, [r7, #4]
 801b1de:	687b      	ldr	r3, [r7, #4]
 801b1e0:	4618      	mov	r0, r3
 801b1e2:	f7ff ffeb 	bl	801b1bc <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EEC1Ev>
 801b1e6:	687b      	ldr	r3, [r7, #4]
 801b1e8:	4618      	mov	r0, r3
 801b1ea:	3708      	adds	r7, #8
 801b1ec:	46bd      	mov	sp, r7
 801b1ee:	bd80      	pop	{r7, pc}

0801b1f0 <_ZN14And_expressionC1Ev>:
	Relation_expression* left_rel_exp;
	Relation_expression* right_rel_exp;
	comp_operator op;
};

class And_expression
 801b1f0:	b580      	push	{r7, lr}
 801b1f2:	b082      	sub	sp, #8
 801b1f4:	af00      	add	r7, sp, #0
 801b1f6:	6078      	str	r0, [r7, #4]
 801b1f8:	687b      	ldr	r3, [r7, #4]
 801b1fa:	4618      	mov	r0, r3
 801b1fc:	f7ff ffeb 	bl	801b1d6 <_ZNSt6vectorIP18Compare_expressionSaIS1_EEC1Ev>
 801b200:	687b      	ldr	r3, [r7, #4]
 801b202:	4618      	mov	r0, r3
 801b204:	3708      	adds	r7, #8
 801b206:	46bd      	mov	sp, r7
 801b208:	bd80      	pop	{r7, pc}

0801b20a <_ZN6Parser20parse_and_expressionEv>:

And_expression* Parser::parse_and_expression()
{
 801b20a:	b590      	push	{r4, r7, lr}
 801b20c:	b087      	sub	sp, #28
 801b20e:	af00      	add	r7, sp, #0
 801b210:	6078      	str	r0, [r7, #4]
	auto exp = new And_expression();
 801b212:	200c      	movs	r0, #12
 801b214:	f008 f96f 	bl	80234f6 <_Znwj>
 801b218:	4603      	mov	r3, r0
 801b21a:	461c      	mov	r4, r3
 801b21c:	4622      	mov	r2, r4
 801b21e:	2300      	movs	r3, #0
 801b220:	6013      	str	r3, [r2, #0]
 801b222:	6053      	str	r3, [r2, #4]
 801b224:	6093      	str	r3, [r2, #8]
 801b226:	4620      	mov	r0, r4
 801b228:	f7ff ffe2 	bl	801b1f0 <_ZN14And_expressionC1Ev>
 801b22c:	617c      	str	r4, [r7, #20]
	exp->comp_exps.push_back(parse_compare_expression());
 801b22e:	697c      	ldr	r4, [r7, #20]
 801b230:	6878      	ldr	r0, [r7, #4]
 801b232:	f7ff ff99 	bl	801b168 <_ZN6Parser24parse_compare_expressionEv>
 801b236:	4603      	mov	r3, r0
 801b238:	60fb      	str	r3, [r7, #12]
 801b23a:	f107 030c 	add.w	r3, r7, #12
 801b23e:	4619      	mov	r1, r3
 801b240:	4620      	mov	r0, r4
 801b242:	f000 fb3f 	bl	801b8c4 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE9push_backEOS1_>
	while(token_buffer.type == TOKEN_AND)
 801b246:	687b      	ldr	r3, [r7, #4]
 801b248:	781b      	ldrb	r3, [r3, #0]
 801b24a:	2b16      	cmp	r3, #22
 801b24c:	d10f      	bne.n	801b26e <_ZN6Parser20parse_and_expressionEv+0x64>
	{
		get_next_token();
 801b24e:	6878      	ldr	r0, [r7, #4]
 801b250:	f7f8 ff27 	bl	80140a2 <_ZN6Parser14get_next_tokenEv>
		exp->comp_exps.push_back(parse_compare_expression());
 801b254:	697c      	ldr	r4, [r7, #20]
 801b256:	6878      	ldr	r0, [r7, #4]
 801b258:	f7ff ff86 	bl	801b168 <_ZN6Parser24parse_compare_expressionEv>
 801b25c:	4603      	mov	r3, r0
 801b25e:	613b      	str	r3, [r7, #16]
 801b260:	f107 0310 	add.w	r3, r7, #16
 801b264:	4619      	mov	r1, r3
 801b266:	4620      	mov	r0, r4
 801b268:	f000 fb2c 	bl	801b8c4 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE9push_backEOS1_>
	while(token_buffer.type == TOKEN_AND)
 801b26c:	e7eb      	b.n	801b246 <_ZN6Parser20parse_and_expressionEv+0x3c>
	}
	return exp;
 801b26e:	697b      	ldr	r3, [r7, #20]
}
 801b270:	4618      	mov	r0, r3
 801b272:	371c      	adds	r7, #28
 801b274:	46bd      	mov	sp, r7
 801b276:	bd90      	pop	{r4, r7, pc}

0801b278 <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EEC1Ev>:
      _Vector_base() = default;
 801b278:	b580      	push	{r7, lr}
 801b27a:	b082      	sub	sp, #8
 801b27c:	af00      	add	r7, sp, #0
 801b27e:	6078      	str	r0, [r7, #4]
 801b280:	687b      	ldr	r3, [r7, #4]
 801b282:	4618      	mov	r0, r3
 801b284:	f000 fb2f 	bl	801b8e6 <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE12_Vector_implC1Ev>
 801b288:	687b      	ldr	r3, [r7, #4]
 801b28a:	4618      	mov	r0, r3
 801b28c:	3708      	adds	r7, #8
 801b28e:	46bd      	mov	sp, r7
 801b290:	bd80      	pop	{r7, pc}

0801b292 <_ZNSt6vectorIP14And_expressionSaIS1_EEC1Ev>:
      vector() = default;
 801b292:	b580      	push	{r7, lr}
 801b294:	b082      	sub	sp, #8
 801b296:	af00      	add	r7, sp, #0
 801b298:	6078      	str	r0, [r7, #4]
 801b29a:	687b      	ldr	r3, [r7, #4]
 801b29c:	4618      	mov	r0, r3
 801b29e:	f7ff ffeb 	bl	801b278 <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EEC1Ev>
 801b2a2:	687b      	ldr	r3, [r7, #4]
 801b2a4:	4618      	mov	r0, r3
 801b2a6:	3708      	adds	r7, #8
 801b2a8:	46bd      	mov	sp, r7
 801b2aa:	bd80      	pop	{r7, pc}

0801b2ac <_ZN10ExpressionC1Ev>:
public:
	~And_expression();
	std::vector<Compare_expression*> comp_exps;
};

class Expression
 801b2ac:	b580      	push	{r7, lr}
 801b2ae:	b082      	sub	sp, #8
 801b2b0:	af00      	add	r7, sp, #0
 801b2b2:	6078      	str	r0, [r7, #4]
 801b2b4:	687b      	ldr	r3, [r7, #4]
 801b2b6:	3308      	adds	r3, #8
 801b2b8:	4618      	mov	r0, r3
 801b2ba:	f7ff ffea 	bl	801b292 <_ZNSt6vectorIP14And_expressionSaIS1_EEC1Ev>
 801b2be:	687b      	ldr	r3, [r7, #4]
 801b2c0:	4618      	mov	r0, r3
 801b2c2:	3708      	adds	r7, #8
 801b2c4:	46bd      	mov	sp, r7
 801b2c6:	bd80      	pop	{r7, pc}

0801b2c8 <_ZN6Parser16parse_expressionEv>:

Expression* Parser::parse_expression()
{
 801b2c8:	b590      	push	{r4, r7, lr}
 801b2ca:	b087      	sub	sp, #28
 801b2cc:	af00      	add	r7, sp, #0
 801b2ce:	6078      	str	r0, [r7, #4]
	auto exp = new Expression();
 801b2d0:	2014      	movs	r0, #20
 801b2d2:	f008 f910 	bl	80234f6 <_Znwj>
 801b2d6:	4603      	mov	r3, r0
 801b2d8:	461c      	mov	r4, r3
 801b2da:	4622      	mov	r2, r4
 801b2dc:	2300      	movs	r3, #0
 801b2de:	6013      	str	r3, [r2, #0]
 801b2e0:	6053      	str	r3, [r2, #4]
 801b2e2:	6093      	str	r3, [r2, #8]
 801b2e4:	60d3      	str	r3, [r2, #12]
 801b2e6:	6113      	str	r3, [r2, #16]
 801b2e8:	4620      	mov	r0, r4
 801b2ea:	f7ff ffdf 	bl	801b2ac <_ZN10ExpressionC1Ev>
 801b2ee:	617c      	str	r4, [r7, #20]
	exp->line = Position_counter::get_instance().get_line();
 801b2f0:	f7fb fac6 	bl	8016880 <_ZN16Position_counter12get_instanceEv>
 801b2f4:	4603      	mov	r3, r0
 801b2f6:	4618      	mov	r0, r3
 801b2f8:	f7fb fb0e 	bl	8016918 <_ZN16Position_counter8get_lineEv>
 801b2fc:	4602      	mov	r2, r0
 801b2fe:	697b      	ldr	r3, [r7, #20]
 801b300:	601a      	str	r2, [r3, #0]
	exp->position = Position_counter::get_instance().get_position();
 801b302:	f7fb fabd 	bl	8016880 <_ZN16Position_counter12get_instanceEv>
 801b306:	4603      	mov	r3, r0
 801b308:	4618      	mov	r0, r3
 801b30a:	f7fb fb19 	bl	8016940 <_ZN16Position_counter12get_positionEv>
 801b30e:	4602      	mov	r2, r0
 801b310:	697b      	ldr	r3, [r7, #20]
 801b312:	605a      	str	r2, [r3, #4]
	exp->and_exps.push_back(parse_and_expression());
 801b314:	697b      	ldr	r3, [r7, #20]
 801b316:	f103 0408 	add.w	r4, r3, #8
 801b31a:	6878      	ldr	r0, [r7, #4]
 801b31c:	f7ff ff75 	bl	801b20a <_ZN6Parser20parse_and_expressionEv>
 801b320:	4603      	mov	r3, r0
 801b322:	60fb      	str	r3, [r7, #12]
 801b324:	f107 030c 	add.w	r3, r7, #12
 801b328:	4619      	mov	r1, r3
 801b32a:	4620      	mov	r0, r4
 801b32c:	f000 faeb 	bl	801b906 <_ZNSt6vectorIP14And_expressionSaIS1_EE9push_backEOS1_>
	while(token_buffer.type == TOKEN_OR)
 801b330:	687b      	ldr	r3, [r7, #4]
 801b332:	781b      	ldrb	r3, [r3, #0]
 801b334:	2b15      	cmp	r3, #21
 801b336:	d111      	bne.n	801b35c <_ZN6Parser16parse_expressionEv+0x94>
	{
		get_next_token();
 801b338:	6878      	ldr	r0, [r7, #4]
 801b33a:	f7f8 feb2 	bl	80140a2 <_ZN6Parser14get_next_tokenEv>
		exp->and_exps.push_back(parse_and_expression());
 801b33e:	697b      	ldr	r3, [r7, #20]
 801b340:	f103 0408 	add.w	r4, r3, #8
 801b344:	6878      	ldr	r0, [r7, #4]
 801b346:	f7ff ff60 	bl	801b20a <_ZN6Parser20parse_and_expressionEv>
 801b34a:	4603      	mov	r3, r0
 801b34c:	613b      	str	r3, [r7, #16]
 801b34e:	f107 0310 	add.w	r3, r7, #16
 801b352:	4619      	mov	r1, r3
 801b354:	4620      	mov	r0, r4
 801b356:	f000 fad6 	bl	801b906 <_ZNSt6vectorIP14And_expressionSaIS1_EE9push_backEOS1_>
	while(token_buffer.type == TOKEN_OR)
 801b35a:	e7e9      	b.n	801b330 <_ZN6Parser16parse_expressionEv+0x68>
	}
	return exp;
 801b35c:	697b      	ldr	r3, [r7, #20]
}
 801b35e:	4618      	mov	r0, r3
 801b360:	371c      	adds	r7, #28
 801b362:	46bd      	mov	sp, r7
 801b364:	bd90      	pop	{r4, r7, pc}

0801b366 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIS9_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>:
	operator=(_Tp&& __rhs)
 801b366:	b590      	push	{r4, r7, lr}
 801b368:	b085      	sub	sp, #20
 801b36a:	af00      	add	r7, sp, #0
 801b36c:	6078      	str	r0, [r7, #4]
 801b36e:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 801b370:	2305      	movs	r3, #5
 801b372:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 801b374:	6878      	ldr	r0, [r7, #4]
 801b376:	f7ee fece 	bl	800a116 <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 801b37a:	4603      	mov	r3, r0
 801b37c:	2b05      	cmp	r3, #5
 801b37e:	bf0c      	ite	eq
 801b380:	2301      	moveq	r3, #1
 801b382:	2300      	movne	r3, #0
 801b384:	b2db      	uxtb	r3, r3
 801b386:	2b00      	cmp	r3, #0
 801b388:	d00a      	beq.n	801b3a0 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIS9_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 801b38a:	6838      	ldr	r0, [r7, #0]
 801b38c:	f7f9 fc6a 	bl	8014c64 <_ZSt7forwardIP13Function_callEOT_RNSt16remove_referenceIS2_E4typeE>
 801b390:	4603      	mov	r3, r0
 801b392:	681c      	ldr	r4, [r3, #0]
 801b394:	6878      	ldr	r0, [r7, #4]
 801b396:	f7ef fa4d 	bl	800a834 <_ZSt3getILj5EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 801b39a:	4603      	mov	r3, r0
 801b39c:	601c      	str	r4, [r3, #0]
 801b39e:	e007      	b.n	801b3b0 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIS9_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 801b3a0:	6838      	ldr	r0, [r7, #0]
 801b3a2:	f7f9 fc5f 	bl	8014c64 <_ZSt7forwardIP13Function_callEOT_RNSt16remove_referenceIS2_E4typeE>
 801b3a6:	4603      	mov	r3, r0
 801b3a8:	4619      	mov	r1, r3
 801b3aa:	6878      	ldr	r0, [r7, #4]
 801b3ac:	f000 fabc 	bl	801b928 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE7emplaceILj5EJS9_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	  return *this;
 801b3b0:	687b      	ldr	r3, [r7, #4]
	}
 801b3b2:	4618      	mov	r0, r3
 801b3b4:	3714      	adds	r7, #20
 801b3b6:	46bd      	mov	sp, r7
 801b3b8:	bd90      	pop	{r4, r7, pc}

0801b3ba <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIS7_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>:
	operator=(_Tp&& __rhs)
 801b3ba:	b590      	push	{r4, r7, lr}
 801b3bc:	b085      	sub	sp, #20
 801b3be:	af00      	add	r7, sp, #0
 801b3c0:	6078      	str	r0, [r7, #4]
 801b3c2:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 801b3c4:	2304      	movs	r3, #4
 801b3c6:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 801b3c8:	6878      	ldr	r0, [r7, #4]
 801b3ca:	f7ee fea4 	bl	800a116 <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 801b3ce:	4603      	mov	r3, r0
 801b3d0:	2b04      	cmp	r3, #4
 801b3d2:	bf0c      	ite	eq
 801b3d4:	2301      	moveq	r3, #1
 801b3d6:	2300      	movne	r3, #0
 801b3d8:	b2db      	uxtb	r3, r3
 801b3da:	2b00      	cmp	r3, #0
 801b3dc:	d00a      	beq.n	801b3f4 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIS7_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 801b3de:	6838      	ldr	r0, [r7, #0]
 801b3e0:	f000 fabb 	bl	801b95a <_ZSt7forwardIP8VariableEOT_RNSt16remove_referenceIS2_E4typeE>
 801b3e4:	4603      	mov	r3, r0
 801b3e6:	681c      	ldr	r4, [r3, #0]
 801b3e8:	6878      	ldr	r0, [r7, #4]
 801b3ea:	f7ef f98b 	bl	800a704 <_ZSt3getILj4EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 801b3ee:	4603      	mov	r3, r0
 801b3f0:	601c      	str	r4, [r3, #0]
 801b3f2:	e007      	b.n	801b404 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIS7_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 801b3f4:	6838      	ldr	r0, [r7, #0]
 801b3f6:	f000 fab0 	bl	801b95a <_ZSt7forwardIP8VariableEOT_RNSt16remove_referenceIS2_E4typeE>
 801b3fa:	4603      	mov	r3, r0
 801b3fc:	4619      	mov	r1, r3
 801b3fe:	6878      	ldr	r0, [r7, #4]
 801b400:	f000 fab6 	bl	801b970 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE7emplaceILj4EJS7_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	  return *this;
 801b404:	687b      	ldr	r3, [r7, #4]
	}
 801b406:	4618      	mov	r0, r3
 801b408:	3714      	adds	r7, #20
 801b40a:	46bd      	mov	sp, r7
 801b40c:	bd90      	pop	{r4, r7, pc}

0801b40e <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEECI1NS0_16_Variant_storageILb0EJbifS7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 801b40e:	b580      	push	{r7, lr}
 801b410:	b082      	sub	sp, #8
 801b412:	af00      	add	r7, sp, #0
 801b414:	6078      	str	r0, [r7, #4]
 801b416:	7039      	strb	r1, [r7, #0]
 801b418:	687b      	ldr	r3, [r7, #4]
 801b41a:	4611      	mov	r1, r2
 801b41c:	4618      	mov	r0, r3
 801b41e:	f000 fade 	bl	801b9de <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 801b422:	687b      	ldr	r3, [r7, #4]
 801b424:	4618      	mov	r0, r3
 801b426:	3708      	adds	r7, #8
 801b428:	46bd      	mov	sp, r7
 801b42a:	bd80      	pop	{r7, pc}

0801b42c <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEECI1NS0_16_Variant_storageILb0EJbifS7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 801b42c:	b580      	push	{r7, lr}
 801b42e:	b082      	sub	sp, #8
 801b430:	af00      	add	r7, sp, #0
 801b432:	6078      	str	r0, [r7, #4]
 801b434:	7039      	strb	r1, [r7, #0]
 801b436:	687b      	ldr	r3, [r7, #4]
 801b438:	4611      	mov	r1, r2
 801b43a:	4618      	mov	r0, r3
 801b43c:	f7ff ffe7 	bl	801b40e <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEECI1NS0_16_Variant_storageILb0EJbifS7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 801b440:	687b      	ldr	r3, [r7, #4]
 801b442:	4618      	mov	r0, r3
 801b444:	3708      	adds	r7, #8
 801b446:	46bd      	mov	sp, r7
 801b448:	bd80      	pop	{r7, pc}

0801b44a <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEECI1NS0_16_Variant_storageILb0EJbifS7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 801b44a:	b580      	push	{r7, lr}
 801b44c:	b082      	sub	sp, #8
 801b44e:	af00      	add	r7, sp, #0
 801b450:	6078      	str	r0, [r7, #4]
 801b452:	7039      	strb	r1, [r7, #0]
 801b454:	687b      	ldr	r3, [r7, #4]
 801b456:	4611      	mov	r1, r2
 801b458:	4618      	mov	r0, r3
 801b45a:	f7ff ffe7 	bl	801b42c <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEECI1NS0_16_Variant_storageILb0EJbifS7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 801b45e:	687b      	ldr	r3, [r7, #4]
 801b460:	4618      	mov	r0, r3
 801b462:	3708      	adds	r7, #8
 801b464:	46bd      	mov	sp, r7
 801b466:	bd80      	pop	{r7, pc}

0801b468 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEECI1NS0_16_Variant_storageILb0EJbifS7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 801b468:	b580      	push	{r7, lr}
 801b46a:	b082      	sub	sp, #8
 801b46c:	af00      	add	r7, sp, #0
 801b46e:	6078      	str	r0, [r7, #4]
 801b470:	7039      	strb	r1, [r7, #0]
 801b472:	687b      	ldr	r3, [r7, #4]
 801b474:	4611      	mov	r1, r2
 801b476:	4618      	mov	r0, r3
 801b478:	f7ff ffe7 	bl	801b44a <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEECI1NS0_16_Variant_storageILb0EJbifS7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 801b47c:	687b      	ldr	r3, [r7, #4]
 801b47e:	4618      	mov	r0, r3
 801b480:	3708      	adds	r7, #8
 801b482:	46bd      	mov	sp, r7
 801b484:	bd80      	pop	{r7, pc}

0801b486 <_ZNSt8__detail9__variant13_Variant_baseIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
	_Variant_base(in_place_index_t<_Np> __i, _Args&&... __args)
 801b486:	b580      	push	{r7, lr}
 801b488:	b082      	sub	sp, #8
 801b48a:	af00      	add	r7, sp, #0
 801b48c:	6078      	str	r0, [r7, #4]
 801b48e:	7039      	strb	r1, [r7, #0]
	: _Base(__i, std::forward<_Args>(__args)...)
 801b490:	687b      	ldr	r3, [r7, #4]
 801b492:	4611      	mov	r1, r2
 801b494:	4618      	mov	r0, r3
 801b496:	f7ff ffe7 	bl	801b468 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEECI1NS0_16_Variant_storageILb0EJbifS7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 801b49a:	687b      	ldr	r3, [r7, #4]
 801b49c:	4618      	mov	r0, r3
 801b49e:	3708      	adds	r7, #8
 801b4a0:	46bd      	mov	sp, r7
 801b4a2:	bd80      	pop	{r7, pc}

0801b4a4 <_ZNSt8__detail9__variant13_Variant_baseIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEC1Ev>:
      _Variant_base()
 801b4a4:	b580      	push	{r7, lr}
 801b4a6:	b082      	sub	sp, #8
 801b4a8:	af00      	add	r7, sp, #0
 801b4aa:	6078      	str	r0, [r7, #4]
      : _Variant_base(in_place_index<0>) { }
 801b4ac:	4619      	mov	r1, r3
 801b4ae:	6878      	ldr	r0, [r7, #4]
 801b4b0:	f7ff ffe9 	bl	801b486 <_ZNSt8__detail9__variant13_Variant_baseIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 801b4b4:	687b      	ldr	r3, [r7, #4]
 801b4b6:	4618      	mov	r0, r3
 801b4b8:	3708      	adds	r7, #8
 801b4ba:	46bd      	mov	sp, r7
 801b4bc:	bd80      	pop	{r7, pc}

0801b4be <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIbEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>:
	operator=(_Tp&& __rhs)
 801b4be:	b590      	push	{r4, r7, lr}
 801b4c0:	b085      	sub	sp, #20
 801b4c2:	af00      	add	r7, sp, #0
 801b4c4:	6078      	str	r0, [r7, #4]
 801b4c6:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 801b4c8:	2300      	movs	r3, #0
 801b4ca:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 801b4cc:	6878      	ldr	r0, [r7, #4]
 801b4ce:	f7ee fe22 	bl	800a116 <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 801b4d2:	4603      	mov	r3, r0
 801b4d4:	2b00      	cmp	r3, #0
 801b4d6:	bf0c      	ite	eq
 801b4d8:	2301      	moveq	r3, #1
 801b4da:	2300      	movne	r3, #0
 801b4dc:	b2db      	uxtb	r3, r3
 801b4de:	2b00      	cmp	r3, #0
 801b4e0:	d00b      	beq.n	801b4fa <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIbEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x3c>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 801b4e2:	6838      	ldr	r0, [r7, #0]
 801b4e4:	f7ec fbe0 	bl	8007ca8 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
 801b4e8:	4603      	mov	r3, r0
 801b4ea:	781c      	ldrb	r4, [r3, #0]
 801b4ec:	6878      	ldr	r0, [r7, #4]
 801b4ee:	f7f2 f855 	bl	800d59c <_ZSt3getILj0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 801b4f2:	4603      	mov	r3, r0
 801b4f4:	4622      	mov	r2, r4
 801b4f6:	701a      	strb	r2, [r3, #0]
 801b4f8:	e007      	b.n	801b50a <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIbEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x4c>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 801b4fa:	6838      	ldr	r0, [r7, #0]
 801b4fc:	f7ec fbd4 	bl	8007ca8 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
 801b500:	4603      	mov	r3, r0
 801b502:	4619      	mov	r1, r3
 801b504:	6878      	ldr	r0, [r7, #4]
 801b506:	f000 fa7c 	bl	801ba02 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE7emplaceILj0EJbEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	  return *this;
 801b50a:	687b      	ldr	r3, [r7, #4]
	}
 801b50c:	4618      	mov	r0, r3
 801b50e:	3714      	adds	r7, #20
 801b510:	46bd      	mov	sp, r7
 801b512:	bd90      	pop	{r4, r7, pc}

0801b514 <_ZSt3getIiJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 801b514:	b580      	push	{r7, lr}
 801b516:	b082      	sub	sp, #8
 801b518:	af00      	add	r7, sp, #0
 801b51a:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 801b51c:	6878      	ldr	r0, [r7, #4]
 801b51e:	f7f4 ff79 	bl	8010414 <_ZSt3getILj1EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>
 801b522:	4603      	mov	r3, r0
    }
 801b524:	4618      	mov	r0, r3
 801b526:	3708      	adds	r7, #8
 801b528:	46bd      	mov	sp, r7
 801b52a:	bd80      	pop	{r7, pc}

0801b52c <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIRiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_>:
	operator=(_Tp&& __rhs)
 801b52c:	b590      	push	{r4, r7, lr}
 801b52e:	b085      	sub	sp, #20
 801b530:	af00      	add	r7, sp, #0
 801b532:	6078      	str	r0, [r7, #4]
 801b534:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 801b536:	2301      	movs	r3, #1
 801b538:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 801b53a:	6878      	ldr	r0, [r7, #4]
 801b53c:	f7ee fdeb 	bl	800a116 <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 801b540:	4603      	mov	r3, r0
 801b542:	2b01      	cmp	r3, #1
 801b544:	bf0c      	ite	eq
 801b546:	2301      	moveq	r3, #1
 801b548:	2300      	movne	r3, #0
 801b54a:	b2db      	uxtb	r3, r3
 801b54c:	2b00      	cmp	r3, #0
 801b54e:	d00a      	beq.n	801b566 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIRiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 801b550:	6838      	ldr	r0, [r7, #0]
 801b552:	f7e9 fb7b 	bl	8004c4c <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 801b556:	4603      	mov	r3, r0
 801b558:	681c      	ldr	r4, [r3, #0]
 801b55a:	6878      	ldr	r0, [r7, #4]
 801b55c:	f7f1 ffca 	bl	800d4f4 <_ZSt3getILj1EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 801b560:	4603      	mov	r3, r0
 801b562:	601c      	str	r4, [r3, #0]
 801b564:	e007      	b.n	801b576 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIRiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 801b566:	6838      	ldr	r0, [r7, #0]
 801b568:	f7e9 fb70 	bl	8004c4c <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 801b56c:	4603      	mov	r3, r0
 801b56e:	4619      	mov	r1, r3
 801b570:	6878      	ldr	r0, [r7, #4]
 801b572:	f000 fa5f 	bl	801ba34 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE7emplaceILj1EJRiEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSG_E4typeEDpOSH_>
	  return *this;
 801b576:	687b      	ldr	r3, [r7, #4]
	}
 801b578:	4618      	mov	r0, r3
 801b57a:	3714      	adds	r7, #20
 801b57c:	46bd      	mov	sp, r7
 801b57e:	bd90      	pop	{r4, r7, pc}

0801b580 <_ZSt3getIfJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 801b580:	b580      	push	{r7, lr}
 801b582:	b082      	sub	sp, #8
 801b584:	af00      	add	r7, sp, #0
 801b586:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 801b588:	6878      	ldr	r0, [r7, #4]
 801b58a:	f7f4 ffbf 	bl	801050c <_ZSt3getILj2EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>
 801b58e:	4603      	mov	r3, r0
    }
 801b590:	4618      	mov	r0, r3
 801b592:	3708      	adds	r7, #8
 801b594:	46bd      	mov	sp, r7
 801b596:	bd80      	pop	{r7, pc}

0801b598 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIRfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_>:
	operator=(_Tp&& __rhs)
 801b598:	b590      	push	{r4, r7, lr}
 801b59a:	b085      	sub	sp, #20
 801b59c:	af00      	add	r7, sp, #0
 801b59e:	6078      	str	r0, [r7, #4]
 801b5a0:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 801b5a2:	2302      	movs	r3, #2
 801b5a4:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 801b5a6:	6878      	ldr	r0, [r7, #4]
 801b5a8:	f7ee fdb5 	bl	800a116 <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 801b5ac:	4603      	mov	r3, r0
 801b5ae:	2b02      	cmp	r3, #2
 801b5b0:	bf0c      	ite	eq
 801b5b2:	2301      	moveq	r3, #1
 801b5b4:	2300      	movne	r3, #0
 801b5b6:	b2db      	uxtb	r3, r3
 801b5b8:	2b00      	cmp	r3, #0
 801b5ba:	d00a      	beq.n	801b5d2 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIRfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 801b5bc:	6838      	ldr	r0, [r7, #0]
 801b5be:	f7e9 fb79 	bl	8004cb4 <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 801b5c2:	4603      	mov	r3, r0
 801b5c4:	681c      	ldr	r4, [r3, #0]
 801b5c6:	6878      	ldr	r0, [r7, #4]
 801b5c8:	f7f1 ffb0 	bl	800d52c <_ZSt3getILj2EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 801b5cc:	4603      	mov	r3, r0
 801b5ce:	601c      	str	r4, [r3, #0]
 801b5d0:	e007      	b.n	801b5e2 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIRfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 801b5d2:	6838      	ldr	r0, [r7, #0]
 801b5d4:	f7e9 fb6e 	bl	8004cb4 <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 801b5d8:	4603      	mov	r3, r0
 801b5da:	4619      	mov	r1, r3
 801b5dc:	6878      	ldr	r0, [r7, #4]
 801b5de:	f000 fa42 	bl	801ba66 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE7emplaceILj2EJRfEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSG_E4typeEDpOSH_>
	  return *this;
 801b5e2:	687b      	ldr	r3, [r7, #4]
	}
 801b5e4:	4618      	mov	r0, r3
 801b5e6:	3714      	adds	r7, #20
 801b5e8:	46bd      	mov	sp, r7
 801b5ea:	bd90      	pop	{r4, r7, pc}

0801b5ec <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>:
	operator=(_Tp&& __rhs)
 801b5ec:	b590      	push	{r4, r7, lr}
 801b5ee:	b085      	sub	sp, #20
 801b5f0:	af00      	add	r7, sp, #0
 801b5f2:	6078      	str	r0, [r7, #4]
 801b5f4:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 801b5f6:	2303      	movs	r3, #3
 801b5f8:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 801b5fa:	6878      	ldr	r0, [r7, #4]
 801b5fc:	f7ee fd8b 	bl	800a116 <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 801b600:	4603      	mov	r3, r0
 801b602:	2b03      	cmp	r3, #3
 801b604:	bf0c      	ite	eq
 801b606:	2301      	moveq	r3, #1
 801b608:	2300      	movne	r3, #0
 801b60a:	b2db      	uxtb	r3, r3
 801b60c:	2b00      	cmp	r3, #0
 801b60e:	d00c      	beq.n	801b62a <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x3e>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 801b610:	6838      	ldr	r0, [r7, #0]
 801b612:	f7ec fb91 	bl	8007d38 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 801b616:	4604      	mov	r4, r0
 801b618:	6878      	ldr	r0, [r7, #4]
 801b61a:	f7f1 ffa3 	bl	800d564 <_ZSt3getILj3EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 801b61e:	4603      	mov	r3, r0
 801b620:	4621      	mov	r1, r4
 801b622:	4618      	mov	r0, r3
 801b624:	f008 fa15 	bl	8023a52 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>
 801b628:	e007      	b.n	801b63a <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x4e>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 801b62a:	6838      	ldr	r0, [r7, #0]
 801b62c:	f7ec fb84 	bl	8007d38 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 801b630:	4603      	mov	r3, r0
 801b632:	4619      	mov	r1, r3
 801b634:	6878      	ldr	r0, [r7, #4]
 801b636:	f000 fa2f 	bl	801ba98 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE7emplaceILj3EJS5_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	  return *this;
 801b63a:	687b      	ldr	r3, [r7, #4]
	}
 801b63c:	4618      	mov	r0, r3
 801b63e:	3714      	adds	r7, #20
 801b640:	46bd      	mov	sp, r7
 801b642:	bd90      	pop	{r4, r7, pc}

0801b644 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb1EJP17Primal_expressionP10ExpressionEECI1NS0_16_Variant_storageILb1EJS3_S5_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 801b644:	b580      	push	{r7, lr}
 801b646:	b082      	sub	sp, #8
 801b648:	af00      	add	r7, sp, #0
 801b64a:	6078      	str	r0, [r7, #4]
 801b64c:	7039      	strb	r1, [r7, #0]
 801b64e:	687b      	ldr	r3, [r7, #4]
 801b650:	4611      	mov	r1, r2
 801b652:	4618      	mov	r0, r3
 801b654:	f000 fa57 	bl	801bb06 <_ZNSt8__detail9__variant16_Variant_storageILb1EJP17Primal_expressionP10ExpressionEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 801b658:	687b      	ldr	r3, [r7, #4]
 801b65a:	4618      	mov	r0, r3
 801b65c:	3708      	adds	r7, #8
 801b65e:	46bd      	mov	sp, r7
 801b660:	bd80      	pop	{r7, pc}

0801b662 <_ZNSt8__detail9__variant15_Move_ctor_baseILb1EJP17Primal_expressionP10ExpressionEECI1NS0_16_Variant_storageILb1EJS3_S5_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 801b662:	b580      	push	{r7, lr}
 801b664:	b082      	sub	sp, #8
 801b666:	af00      	add	r7, sp, #0
 801b668:	6078      	str	r0, [r7, #4]
 801b66a:	7039      	strb	r1, [r7, #0]
 801b66c:	687b      	ldr	r3, [r7, #4]
 801b66e:	4611      	mov	r1, r2
 801b670:	4618      	mov	r0, r3
 801b672:	f7ff ffe7 	bl	801b644 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb1EJP17Primal_expressionP10ExpressionEECI1NS0_16_Variant_storageILb1EJS3_S5_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 801b676:	687b      	ldr	r3, [r7, #4]
 801b678:	4618      	mov	r0, r3
 801b67a:	3708      	adds	r7, #8
 801b67c:	46bd      	mov	sp, r7
 801b67e:	bd80      	pop	{r7, pc}

0801b680 <_ZNSt8__detail9__variant17_Copy_assign_baseILb1EJP17Primal_expressionP10ExpressionEECI1NS0_16_Variant_storageILb1EJS3_S5_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 801b680:	b580      	push	{r7, lr}
 801b682:	b082      	sub	sp, #8
 801b684:	af00      	add	r7, sp, #0
 801b686:	6078      	str	r0, [r7, #4]
 801b688:	7039      	strb	r1, [r7, #0]
 801b68a:	687b      	ldr	r3, [r7, #4]
 801b68c:	4611      	mov	r1, r2
 801b68e:	4618      	mov	r0, r3
 801b690:	f7ff ffe7 	bl	801b662 <_ZNSt8__detail9__variant15_Move_ctor_baseILb1EJP17Primal_expressionP10ExpressionEECI1NS0_16_Variant_storageILb1EJS3_S5_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 801b694:	687b      	ldr	r3, [r7, #4]
 801b696:	4618      	mov	r0, r3
 801b698:	3708      	adds	r7, #8
 801b69a:	46bd      	mov	sp, r7
 801b69c:	bd80      	pop	{r7, pc}

0801b69e <_ZNSt8__detail9__variant17_Move_assign_baseILb1EJP17Primal_expressionP10ExpressionEECI1NS0_16_Variant_storageILb1EJS3_S5_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 801b69e:	b580      	push	{r7, lr}
 801b6a0:	b082      	sub	sp, #8
 801b6a2:	af00      	add	r7, sp, #0
 801b6a4:	6078      	str	r0, [r7, #4]
 801b6a6:	7039      	strb	r1, [r7, #0]
 801b6a8:	687b      	ldr	r3, [r7, #4]
 801b6aa:	4611      	mov	r1, r2
 801b6ac:	4618      	mov	r0, r3
 801b6ae:	f7ff ffe7 	bl	801b680 <_ZNSt8__detail9__variant17_Copy_assign_baseILb1EJP17Primal_expressionP10ExpressionEECI1NS0_16_Variant_storageILb1EJS3_S5_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 801b6b2:	687b      	ldr	r3, [r7, #4]
 801b6b4:	4618      	mov	r0, r3
 801b6b6:	3708      	adds	r7, #8
 801b6b8:	46bd      	mov	sp, r7
 801b6ba:	bd80      	pop	{r7, pc}

0801b6bc <_ZNSt8__detail9__variant13_Variant_baseIJP17Primal_expressionP10ExpressionEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
	_Variant_base(in_place_index_t<_Np> __i, _Args&&... __args)
 801b6bc:	b580      	push	{r7, lr}
 801b6be:	b082      	sub	sp, #8
 801b6c0:	af00      	add	r7, sp, #0
 801b6c2:	6078      	str	r0, [r7, #4]
 801b6c4:	7039      	strb	r1, [r7, #0]
	: _Base(__i, std::forward<_Args>(__args)...)
 801b6c6:	687b      	ldr	r3, [r7, #4]
 801b6c8:	4611      	mov	r1, r2
 801b6ca:	4618      	mov	r0, r3
 801b6cc:	f7ff ffe7 	bl	801b69e <_ZNSt8__detail9__variant17_Move_assign_baseILb1EJP17Primal_expressionP10ExpressionEECI1NS0_16_Variant_storageILb1EJS3_S5_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 801b6d0:	687b      	ldr	r3, [r7, #4]
 801b6d2:	4618      	mov	r0, r3
 801b6d4:	3708      	adds	r7, #8
 801b6d6:	46bd      	mov	sp, r7
 801b6d8:	bd80      	pop	{r7, pc}

0801b6da <_ZNSt8__detail9__variant13_Variant_baseIJP17Primal_expressionP10ExpressionEEC1Ev>:
      _Variant_base()
 801b6da:	b580      	push	{r7, lr}
 801b6dc:	b082      	sub	sp, #8
 801b6de:	af00      	add	r7, sp, #0
 801b6e0:	6078      	str	r0, [r7, #4]
      : _Variant_base(in_place_index<0>) { }
 801b6e2:	4619      	mov	r1, r3
 801b6e4:	6878      	ldr	r0, [r7, #4]
 801b6e6:	f7ff ffe9 	bl	801b6bc <_ZNSt8__detail9__variant13_Variant_baseIJP17Primal_expressionP10ExpressionEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 801b6ea:	687b      	ldr	r3, [r7, #4]
 801b6ec:	4618      	mov	r0, r3
 801b6ee:	3708      	adds	r7, #8
 801b6f0:	46bd      	mov	sp, r7
 801b6f2:	bd80      	pop	{r7, pc}

0801b6f4 <_ZNSt7variantIJP17Primal_expressionP10ExpressionEEaSIS3_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES4_E4typeEE18is_constructible_vISB_S8_E15is_assignable_vIRSB_S8_EERS4_E4typeES9_>:
	operator=(_Tp&& __rhs)
 801b6f4:	b590      	push	{r4, r7, lr}
 801b6f6:	b085      	sub	sp, #20
 801b6f8:	af00      	add	r7, sp, #0
 801b6fa:	6078      	str	r0, [r7, #4]
 801b6fc:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 801b6fe:	2301      	movs	r3, #1
 801b700:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 801b702:	6878      	ldr	r0, [r7, #4]
 801b704:	f7ee fd54 	bl	800a1b0 <_ZNKSt7variantIJP17Primal_expressionP10ExpressionEE5indexEv>
 801b708:	4603      	mov	r3, r0
 801b70a:	2b01      	cmp	r3, #1
 801b70c:	bf0c      	ite	eq
 801b70e:	2301      	moveq	r3, #1
 801b710:	2300      	movne	r3, #0
 801b712:	b2db      	uxtb	r3, r3
 801b714:	2b00      	cmp	r3, #0
 801b716:	d00a      	beq.n	801b72e <_ZNSt7variantIJP17Primal_expressionP10ExpressionEEaSIS3_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES4_E4typeEE18is_constructible_vISB_S8_E15is_assignable_vIRSB_S8_EERS4_E4typeES9_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 801b718:	6838      	ldr	r0, [r7, #0]
 801b71a:	f7f9 fc9b 	bl	8015054 <_ZSt7forwardIP10ExpressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801b71e:	4603      	mov	r3, r0
 801b720:	681c      	ldr	r4, [r3, #0]
 801b722:	6878      	ldr	r0, [r7, #4]
 801b724:	f7ef f8d6 	bl	800a8d4 <_ZSt3getILj1EJP17Primal_expressionP10ExpressionEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERS8_>
 801b728:	4603      	mov	r3, r0
 801b72a:	601c      	str	r4, [r3, #0]
 801b72c:	e007      	b.n	801b73e <_ZNSt7variantIJP17Primal_expressionP10ExpressionEEaSIS3_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES4_E4typeEE18is_constructible_vISB_S8_E15is_assignable_vIRSB_S8_EERS4_E4typeES9_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 801b72e:	6838      	ldr	r0, [r7, #0]
 801b730:	f7f9 fc90 	bl	8015054 <_ZSt7forwardIP10ExpressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801b734:	4603      	mov	r3, r0
 801b736:	4619      	mov	r1, r3
 801b738:	6878      	ldr	r0, [r7, #4]
 801b73a:	f000 f9f6 	bl	801bb2a <_ZNSt7variantIJP17Primal_expressionP10ExpressionEE7emplaceILj1EJS3_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES4_E4typeEDpT0_EERS9_E4typeEDpOSA_>
	  return *this;
 801b73e:	687b      	ldr	r3, [r7, #4]
	}
 801b740:	4618      	mov	r0, r3
 801b742:	3714      	adds	r7, #20
 801b744:	46bd      	mov	sp, r7
 801b746:	bd90      	pop	{r4, r7, pc}

0801b748 <_ZNSt7variantIJP17Primal_expressionP10ExpressionEEaSIS1_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES4_E4typeEE18is_constructible_vISB_S8_E15is_assignable_vIRSB_S8_EERS4_E4typeES9_>:
	operator=(_Tp&& __rhs)
 801b748:	b590      	push	{r4, r7, lr}
 801b74a:	b085      	sub	sp, #20
 801b74c:	af00      	add	r7, sp, #0
 801b74e:	6078      	str	r0, [r7, #4]
 801b750:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 801b752:	2300      	movs	r3, #0
 801b754:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 801b756:	6878      	ldr	r0, [r7, #4]
 801b758:	f7ee fd2a 	bl	800a1b0 <_ZNKSt7variantIJP17Primal_expressionP10ExpressionEE5indexEv>
 801b75c:	4603      	mov	r3, r0
 801b75e:	2b00      	cmp	r3, #0
 801b760:	bf0c      	ite	eq
 801b762:	2301      	moveq	r3, #1
 801b764:	2300      	movne	r3, #0
 801b766:	b2db      	uxtb	r3, r3
 801b768:	2b00      	cmp	r3, #0
 801b76a:	d00a      	beq.n	801b782 <_ZNSt7variantIJP17Primal_expressionP10ExpressionEEaSIS1_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES4_E4typeEE18is_constructible_vISB_S8_E15is_assignable_vIRSB_S8_EERS4_E4typeES9_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 801b76c:	6838      	ldr	r0, [r7, #0]
 801b76e:	f000 f9f5 	bl	801bb5c <_ZSt7forwardIP17Primal_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801b772:	4603      	mov	r3, r0
 801b774:	681c      	ldr	r4, [r3, #0]
 801b776:	6878      	ldr	r0, [r7, #4]
 801b778:	f7ef f8ea 	bl	800a950 <_ZSt3getILj0EJP17Primal_expressionP10ExpressionEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERS8_>
 801b77c:	4603      	mov	r3, r0
 801b77e:	601c      	str	r4, [r3, #0]
 801b780:	e007      	b.n	801b792 <_ZNSt7variantIJP17Primal_expressionP10ExpressionEEaSIS1_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES4_E4typeEE18is_constructible_vISB_S8_E15is_assignable_vIRSB_S8_EERS4_E4typeES9_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 801b782:	6838      	ldr	r0, [r7, #0]
 801b784:	f000 f9ea 	bl	801bb5c <_ZSt7forwardIP17Primal_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801b788:	4603      	mov	r3, r0
 801b78a:	4619      	mov	r1, r3
 801b78c:	6878      	ldr	r0, [r7, #4]
 801b78e:	f000 f9f0 	bl	801bb72 <_ZNSt7variantIJP17Primal_expressionP10ExpressionEE7emplaceILj0EJS1_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES4_E4typeEDpT0_EERS9_E4typeEDpOSA_>
	  return *this;
 801b792:	687b      	ldr	r3, [r7, #4]
	}
 801b794:	4618      	mov	r0, r3
 801b796:	3714      	adds	r7, #20
 801b798:	46bd      	mov	sp, r7
 801b79a:	bd90      	pop	{r4, r7, pc}

0801b79c <_ZNSt6vectorI13mult_operatorSaIS0_EE9push_backEOS0_>:
      push_back(value_type&& __x)
 801b79c:	b580      	push	{r7, lr}
 801b79e:	b082      	sub	sp, #8
 801b7a0:	af00      	add	r7, sp, #0
 801b7a2:	6078      	str	r0, [r7, #4]
 801b7a4:	6039      	str	r1, [r7, #0]
      { emplace_back(std::move(__x)); }
 801b7a6:	6838      	ldr	r0, [r7, #0]
 801b7a8:	f000 f9fc 	bl	801bba4 <_ZSt4moveIR13mult_operatorEONSt16remove_referenceIT_E4typeEOS3_>
 801b7ac:	4603      	mov	r3, r0
 801b7ae:	4619      	mov	r1, r3
 801b7b0:	6878      	ldr	r0, [r7, #4]
 801b7b2:	f000 fa02 	bl	801bbba <_ZNSt6vectorI13mult_operatorSaIS0_EE12emplace_backIJS0_EEERS0_DpOT_>
 801b7b6:	bf00      	nop
 801b7b8:	3708      	adds	r7, #8
 801b7ba:	46bd      	mov	sp, r7
 801b7bc:	bd80      	pop	{r7, pc}

0801b7be <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
 801b7be:	b580      	push	{r7, lr}
 801b7c0:	b082      	sub	sp, #8
 801b7c2:	af00      	add	r7, sp, #0
 801b7c4:	6078      	str	r0, [r7, #4]
	: _Tp_alloc_type()
 801b7c6:	6878      	ldr	r0, [r7, #4]
 801b7c8:	f000 fa29 	bl	801bc1e <_ZNSaIP16Power_expressionEC1Ev>
 801b7cc:	687b      	ldr	r3, [r7, #4]
 801b7ce:	4618      	mov	r0, r3
 801b7d0:	f000 fa31 	bl	801bc36 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
 801b7d4:	687b      	ldr	r3, [r7, #4]
 801b7d6:	4618      	mov	r0, r3
 801b7d8:	3708      	adds	r7, #8
 801b7da:	46bd      	mov	sp, r7
 801b7dc:	bd80      	pop	{r7, pc}

0801b7de <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
 801b7de:	b580      	push	{r7, lr}
 801b7e0:	b082      	sub	sp, #8
 801b7e2:	af00      	add	r7, sp, #0
 801b7e4:	6078      	str	r0, [r7, #4]
	: _Tp_alloc_type()
 801b7e6:	6878      	ldr	r0, [r7, #4]
 801b7e8:	f000 fa39 	bl	801bc5e <_ZNSaI13mult_operatorEC1Ev>
 801b7ec:	687b      	ldr	r3, [r7, #4]
 801b7ee:	4618      	mov	r0, r3
 801b7f0:	f000 fa41 	bl	801bc76 <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
 801b7f4:	687b      	ldr	r3, [r7, #4]
 801b7f6:	4618      	mov	r0, r3
 801b7f8:	3708      	adds	r7, #8
 801b7fa:	46bd      	mov	sp, r7
 801b7fc:	bd80      	pop	{r7, pc}

0801b7fe <_ZNSt6vectorIP16Power_expressionSaIS1_EE9push_backEOS1_>:
      push_back(value_type&& __x)
 801b7fe:	b580      	push	{r7, lr}
 801b800:	b082      	sub	sp, #8
 801b802:	af00      	add	r7, sp, #0
 801b804:	6078      	str	r0, [r7, #4]
 801b806:	6039      	str	r1, [r7, #0]
      { emplace_back(std::move(__x)); }
 801b808:	6838      	ldr	r0, [r7, #0]
 801b80a:	f000 fa48 	bl	801bc9e <_ZSt4moveIRP16Power_expressionEONSt16remove_referenceIT_E4typeEOS4_>
 801b80e:	4603      	mov	r3, r0
 801b810:	4619      	mov	r1, r3
 801b812:	6878      	ldr	r0, [r7, #4]
 801b814:	f000 fa4e 	bl	801bcb4 <_ZNSt6vectorIP16Power_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>
 801b818:	bf00      	nop
 801b81a:	3708      	adds	r7, #8
 801b81c:	46bd      	mov	sp, r7
 801b81e:	bd80      	pop	{r7, pc}

0801b820 <_ZNSt6vectorI12sum_operatorSaIS0_EE9push_backEOS0_>:
      push_back(value_type&& __x)
 801b820:	b580      	push	{r7, lr}
 801b822:	b082      	sub	sp, #8
 801b824:	af00      	add	r7, sp, #0
 801b826:	6078      	str	r0, [r7, #4]
 801b828:	6039      	str	r1, [r7, #0]
      { emplace_back(std::move(__x)); }
 801b82a:	6838      	ldr	r0, [r7, #0]
 801b82c:	f000 fa74 	bl	801bd18 <_ZSt4moveIR12sum_operatorEONSt16remove_referenceIT_E4typeEOS3_>
 801b830:	4603      	mov	r3, r0
 801b832:	4619      	mov	r1, r3
 801b834:	6878      	ldr	r0, [r7, #4]
 801b836:	f000 fa7a 	bl	801bd2e <_ZNSt6vectorI12sum_operatorSaIS0_EE12emplace_backIJS0_EEERS0_DpOT_>
 801b83a:	bf00      	nop
 801b83c:	3708      	adds	r7, #8
 801b83e:	46bd      	mov	sp, r7
 801b840:	bd80      	pop	{r7, pc}

0801b842 <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
 801b842:	b580      	push	{r7, lr}
 801b844:	b082      	sub	sp, #8
 801b846:	af00      	add	r7, sp, #0
 801b848:	6078      	str	r0, [r7, #4]
	: _Tp_alloc_type()
 801b84a:	6878      	ldr	r0, [r7, #4]
 801b84c:	f000 faa1 	bl	801bd92 <_ZNSaIP19Multiply_expressionEC1Ev>
 801b850:	687b      	ldr	r3, [r7, #4]
 801b852:	4618      	mov	r0, r3
 801b854:	f000 faa9 	bl	801bdaa <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
 801b858:	687b      	ldr	r3, [r7, #4]
 801b85a:	4618      	mov	r0, r3
 801b85c:	3708      	adds	r7, #8
 801b85e:	46bd      	mov	sp, r7
 801b860:	bd80      	pop	{r7, pc}

0801b862 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
 801b862:	b580      	push	{r7, lr}
 801b864:	b082      	sub	sp, #8
 801b866:	af00      	add	r7, sp, #0
 801b868:	6078      	str	r0, [r7, #4]
	: _Tp_alloc_type()
 801b86a:	6878      	ldr	r0, [r7, #4]
 801b86c:	f000 fab1 	bl	801bdd2 <_ZNSaI12sum_operatorEC1Ev>
 801b870:	687b      	ldr	r3, [r7, #4]
 801b872:	4618      	mov	r0, r3
 801b874:	f000 fab9 	bl	801bdea <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
 801b878:	687b      	ldr	r3, [r7, #4]
 801b87a:	4618      	mov	r0, r3
 801b87c:	3708      	adds	r7, #8
 801b87e:	46bd      	mov	sp, r7
 801b880:	bd80      	pop	{r7, pc}

0801b882 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE9push_backEOS1_>:
      push_back(value_type&& __x)
 801b882:	b580      	push	{r7, lr}
 801b884:	b082      	sub	sp, #8
 801b886:	af00      	add	r7, sp, #0
 801b888:	6078      	str	r0, [r7, #4]
 801b88a:	6039      	str	r1, [r7, #0]
      { emplace_back(std::move(__x)); }
 801b88c:	6838      	ldr	r0, [r7, #0]
 801b88e:	f000 fac0 	bl	801be12 <_ZSt4moveIRP19Multiply_expressionEONSt16remove_referenceIT_E4typeEOS4_>
 801b892:	4603      	mov	r3, r0
 801b894:	4619      	mov	r1, r3
 801b896:	6878      	ldr	r0, [r7, #4]
 801b898:	f000 fac6 	bl	801be28 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>
 801b89c:	bf00      	nop
 801b89e:	3708      	adds	r7, #8
 801b8a0:	46bd      	mov	sp, r7
 801b8a2:	bd80      	pop	{r7, pc}

0801b8a4 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
 801b8a4:	b580      	push	{r7, lr}
 801b8a6:	b082      	sub	sp, #8
 801b8a8:	af00      	add	r7, sp, #0
 801b8aa:	6078      	str	r0, [r7, #4]
	: _Tp_alloc_type()
 801b8ac:	6878      	ldr	r0, [r7, #4]
 801b8ae:	f000 faed 	bl	801be8c <_ZNSaIP18Compare_expressionEC1Ev>
 801b8b2:	687b      	ldr	r3, [r7, #4]
 801b8b4:	4618      	mov	r0, r3
 801b8b6:	f000 faf5 	bl	801bea4 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
 801b8ba:	687b      	ldr	r3, [r7, #4]
 801b8bc:	4618      	mov	r0, r3
 801b8be:	3708      	adds	r7, #8
 801b8c0:	46bd      	mov	sp, r7
 801b8c2:	bd80      	pop	{r7, pc}

0801b8c4 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE9push_backEOS1_>:
      push_back(value_type&& __x)
 801b8c4:	b580      	push	{r7, lr}
 801b8c6:	b082      	sub	sp, #8
 801b8c8:	af00      	add	r7, sp, #0
 801b8ca:	6078      	str	r0, [r7, #4]
 801b8cc:	6039      	str	r1, [r7, #0]
      { emplace_back(std::move(__x)); }
 801b8ce:	6838      	ldr	r0, [r7, #0]
 801b8d0:	f000 fafc 	bl	801becc <_ZSt4moveIRP18Compare_expressionEONSt16remove_referenceIT_E4typeEOS4_>
 801b8d4:	4603      	mov	r3, r0
 801b8d6:	4619      	mov	r1, r3
 801b8d8:	6878      	ldr	r0, [r7, #4]
 801b8da:	f000 fb02 	bl	801bee2 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>
 801b8de:	bf00      	nop
 801b8e0:	3708      	adds	r7, #8
 801b8e2:	46bd      	mov	sp, r7
 801b8e4:	bd80      	pop	{r7, pc}

0801b8e6 <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
 801b8e6:	b580      	push	{r7, lr}
 801b8e8:	b082      	sub	sp, #8
 801b8ea:	af00      	add	r7, sp, #0
 801b8ec:	6078      	str	r0, [r7, #4]
	: _Tp_alloc_type()
 801b8ee:	6878      	ldr	r0, [r7, #4]
 801b8f0:	f000 fb29 	bl	801bf46 <_ZNSaIP14And_expressionEC1Ev>
 801b8f4:	687b      	ldr	r3, [r7, #4]
 801b8f6:	4618      	mov	r0, r3
 801b8f8:	f000 fb31 	bl	801bf5e <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
 801b8fc:	687b      	ldr	r3, [r7, #4]
 801b8fe:	4618      	mov	r0, r3
 801b900:	3708      	adds	r7, #8
 801b902:	46bd      	mov	sp, r7
 801b904:	bd80      	pop	{r7, pc}

0801b906 <_ZNSt6vectorIP14And_expressionSaIS1_EE9push_backEOS1_>:
      push_back(value_type&& __x)
 801b906:	b580      	push	{r7, lr}
 801b908:	b082      	sub	sp, #8
 801b90a:	af00      	add	r7, sp, #0
 801b90c:	6078      	str	r0, [r7, #4]
 801b90e:	6039      	str	r1, [r7, #0]
      { emplace_back(std::move(__x)); }
 801b910:	6838      	ldr	r0, [r7, #0]
 801b912:	f000 fb38 	bl	801bf86 <_ZSt4moveIRP14And_expressionEONSt16remove_referenceIT_E4typeEOS4_>
 801b916:	4603      	mov	r3, r0
 801b918:	4619      	mov	r1, r3
 801b91a:	6878      	ldr	r0, [r7, #4]
 801b91c:	f000 fb3e 	bl	801bf9c <_ZNSt6vectorIP14And_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>
 801b920:	bf00      	nop
 801b922:	3708      	adds	r7, #8
 801b924:	46bd      	mov	sp, r7
 801b926:	bd80      	pop	{r7, pc}

0801b928 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE7emplaceILj5EJS9_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>:
	emplace(_Args&&... __args)
 801b928:	b580      	push	{r7, lr}
 801b92a:	b082      	sub	sp, #8
 801b92c:	af00      	add	r7, sp, #0
 801b92e:	6078      	str	r0, [r7, #4]
 801b930:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 801b932:	687b      	ldr	r3, [r7, #4]
 801b934:	4618      	mov	r0, r3
 801b936:	f7ee fe6d 	bl	800a614 <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 801b93a:	6838      	ldr	r0, [r7, #0]
 801b93c:	f7f9 f992 	bl	8014c64 <_ZSt7forwardIP13Function_callEOT_RNSt16remove_referenceIS2_E4typeE>
 801b940:	4603      	mov	r3, r0
 801b942:	4619      	mov	r1, r3
 801b944:	6878      	ldr	r0, [r7, #4]
 801b946:	f000 fb5b 	bl	801c000 <_ZSt28__variant_construct_by_indexILj5ESt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEJSA_EEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 801b94a:	6878      	ldr	r0, [r7, #4]
 801b94c:	f7ee ff72 	bl	800a834 <_ZSt3getILj5EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 801b950:	4603      	mov	r3, r0
	}
 801b952:	4618      	mov	r0, r3
 801b954:	3708      	adds	r7, #8
 801b956:	46bd      	mov	sp, r7
 801b958:	bd80      	pop	{r7, pc}

0801b95a <_ZSt7forwardIP8VariableEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801b95a:	b480      	push	{r7}
 801b95c:	b083      	sub	sp, #12
 801b95e:	af00      	add	r7, sp, #0
 801b960:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801b962:	687b      	ldr	r3, [r7, #4]
 801b964:	4618      	mov	r0, r3
 801b966:	370c      	adds	r7, #12
 801b968:	46bd      	mov	sp, r7
 801b96a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b96e:	4770      	bx	lr

0801b970 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE7emplaceILj4EJS7_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>:
	emplace(_Args&&... __args)
 801b970:	b580      	push	{r7, lr}
 801b972:	b082      	sub	sp, #8
 801b974:	af00      	add	r7, sp, #0
 801b976:	6078      	str	r0, [r7, #4]
 801b978:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 801b97a:	687b      	ldr	r3, [r7, #4]
 801b97c:	4618      	mov	r0, r3
 801b97e:	f7ee fe49 	bl	800a614 <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 801b982:	6838      	ldr	r0, [r7, #0]
 801b984:	f7ff ffe9 	bl	801b95a <_ZSt7forwardIP8VariableEOT_RNSt16remove_referenceIS2_E4typeE>
 801b988:	4603      	mov	r3, r0
 801b98a:	4619      	mov	r1, r3
 801b98c:	6878      	ldr	r0, [r7, #4]
 801b98e:	f000 fb56 	bl	801c03e <_ZSt28__variant_construct_by_indexILj4ESt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEJS8_EEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 801b992:	6878      	ldr	r0, [r7, #4]
 801b994:	f7ee feb6 	bl	800a704 <_ZSt3getILj4EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 801b998:	4603      	mov	r3, r0
	}
 801b99a:	4618      	mov	r0, r3
 801b99c:	3708      	adds	r7, #8
 801b99e:	46bd      	mov	sp, r7
 801b9a0:	bd80      	pop	{r7, pc}

0801b9a2 <_ZNSt8__detail9__variant14_UninitializedIbLb1EEC1IJEEESt16in_place_index_tILj0EEDpOT_>:
	_Uninitialized(in_place_index_t<0>, _Args&&... __args)
 801b9a2:	b480      	push	{r7}
 801b9a4:	b083      	sub	sp, #12
 801b9a6:	af00      	add	r7, sp, #0
 801b9a8:	6078      	str	r0, [r7, #4]
 801b9aa:	7039      	strb	r1, [r7, #0]
	: _M_storage(std::forward<_Args>(__args)...)
 801b9ac:	687b      	ldr	r3, [r7, #4]
 801b9ae:	2200      	movs	r2, #0
 801b9b0:	701a      	strb	r2, [r3, #0]
	{ }
 801b9b2:	687b      	ldr	r3, [r7, #4]
 801b9b4:	4618      	mov	r0, r3
 801b9b6:	370c      	adds	r7, #12
 801b9b8:	46bd      	mov	sp, r7
 801b9ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b9be:	4770      	bx	lr

0801b9c0 <_ZNSt8__detail9__variant15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEC1IJEEESt16in_place_index_tILj0EEDpOT_>:
	constexpr _Variadic_union(in_place_index_t<0>, _Args&&... __args)
 801b9c0:	b580      	push	{r7, lr}
 801b9c2:	b082      	sub	sp, #8
 801b9c4:	af00      	add	r7, sp, #0
 801b9c6:	6078      	str	r0, [r7, #4]
 801b9c8:	7039      	strb	r1, [r7, #0]
	: _M_first(in_place_index<0>, std::forward<_Args>(__args)...)
 801b9ca:	687b      	ldr	r3, [r7, #4]
 801b9cc:	4611      	mov	r1, r2
 801b9ce:	4618      	mov	r0, r3
 801b9d0:	f7ff ffe7 	bl	801b9a2 <_ZNSt8__detail9__variant14_UninitializedIbLb1EEC1IJEEESt16in_place_index_tILj0EEDpOT_>
	{ }
 801b9d4:	687b      	ldr	r3, [r7, #4]
 801b9d6:	4618      	mov	r0, r3
 801b9d8:	3708      	adds	r7, #8
 801b9da:	46bd      	mov	sp, r7
 801b9dc:	bd80      	pop	{r7, pc}

0801b9de <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variant_storage(in_place_index_t<_Np>, _Args&&... __args)
 801b9de:	b580      	push	{r7, lr}
 801b9e0:	b082      	sub	sp, #8
 801b9e2:	af00      	add	r7, sp, #0
 801b9e4:	6078      	str	r0, [r7, #4]
 801b9e6:	7039      	strb	r1, [r7, #0]
	_M_index(_Np)
 801b9e8:	687b      	ldr	r3, [r7, #4]
 801b9ea:	4611      	mov	r1, r2
 801b9ec:	4618      	mov	r0, r3
 801b9ee:	f7ff ffe7 	bl	801b9c0 <_ZNSt8__detail9__variant15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEC1IJEEESt16in_place_index_tILj0EEDpOT_>
 801b9f2:	687b      	ldr	r3, [r7, #4]
 801b9f4:	2200      	movs	r2, #0
 801b9f6:	761a      	strb	r2, [r3, #24]
	{ }
 801b9f8:	687b      	ldr	r3, [r7, #4]
 801b9fa:	4618      	mov	r0, r3
 801b9fc:	3708      	adds	r7, #8
 801b9fe:	46bd      	mov	sp, r7
 801ba00:	bd80      	pop	{r7, pc}

0801ba02 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE7emplaceILj0EJbEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>:
	emplace(_Args&&... __args)
 801ba02:	b580      	push	{r7, lr}
 801ba04:	b082      	sub	sp, #8
 801ba06:	af00      	add	r7, sp, #0
 801ba08:	6078      	str	r0, [r7, #4]
 801ba0a:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 801ba0c:	687b      	ldr	r3, [r7, #4]
 801ba0e:	4618      	mov	r0, r3
 801ba10:	f7ee fe00 	bl	800a614 <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 801ba14:	6838      	ldr	r0, [r7, #0]
 801ba16:	f7ec f947 	bl	8007ca8 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
 801ba1a:	4603      	mov	r3, r0
 801ba1c:	4619      	mov	r1, r3
 801ba1e:	6878      	ldr	r0, [r7, #4]
 801ba20:	f000 fb2c 	bl	801c07c <_ZSt28__variant_construct_by_indexILj0ESt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEJbEEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 801ba24:	6878      	ldr	r0, [r7, #4]
 801ba26:	f7f1 fdb9 	bl	800d59c <_ZSt3getILj0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 801ba2a:	4603      	mov	r3, r0
	}
 801ba2c:	4618      	mov	r0, r3
 801ba2e:	3708      	adds	r7, #8
 801ba30:	46bd      	mov	sp, r7
 801ba32:	bd80      	pop	{r7, pc}

0801ba34 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE7emplaceILj1EJRiEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSG_E4typeEDpOSH_>:
	emplace(_Args&&... __args)
 801ba34:	b580      	push	{r7, lr}
 801ba36:	b082      	sub	sp, #8
 801ba38:	af00      	add	r7, sp, #0
 801ba3a:	6078      	str	r0, [r7, #4]
 801ba3c:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 801ba3e:	687b      	ldr	r3, [r7, #4]
 801ba40:	4618      	mov	r0, r3
 801ba42:	f7ee fde7 	bl	800a614 <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 801ba46:	6838      	ldr	r0, [r7, #0]
 801ba48:	f7e9 f900 	bl	8004c4c <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 801ba4c:	4603      	mov	r3, r0
 801ba4e:	4619      	mov	r1, r3
 801ba50:	6878      	ldr	r0, [r7, #4]
 801ba52:	f000 fb33 	bl	801c0bc <_ZSt28__variant_construct_by_indexILj1ESt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEJRiEEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 801ba56:	6878      	ldr	r0, [r7, #4]
 801ba58:	f7f1 fd4c 	bl	800d4f4 <_ZSt3getILj1EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 801ba5c:	4603      	mov	r3, r0
	}
 801ba5e:	4618      	mov	r0, r3
 801ba60:	3708      	adds	r7, #8
 801ba62:	46bd      	mov	sp, r7
 801ba64:	bd80      	pop	{r7, pc}

0801ba66 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE7emplaceILj2EJRfEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSG_E4typeEDpOSH_>:
	emplace(_Args&&... __args)
 801ba66:	b580      	push	{r7, lr}
 801ba68:	b082      	sub	sp, #8
 801ba6a:	af00      	add	r7, sp, #0
 801ba6c:	6078      	str	r0, [r7, #4]
 801ba6e:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 801ba70:	687b      	ldr	r3, [r7, #4]
 801ba72:	4618      	mov	r0, r3
 801ba74:	f7ee fdce 	bl	800a614 <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 801ba78:	6838      	ldr	r0, [r7, #0]
 801ba7a:	f7e9 f91b 	bl	8004cb4 <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 801ba7e:	4603      	mov	r3, r0
 801ba80:	4619      	mov	r1, r3
 801ba82:	6878      	ldr	r0, [r7, #4]
 801ba84:	f000 fb39 	bl	801c0fa <_ZSt28__variant_construct_by_indexILj2ESt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEJRfEEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 801ba88:	6878      	ldr	r0, [r7, #4]
 801ba8a:	f7f1 fd4f 	bl	800d52c <_ZSt3getILj2EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 801ba8e:	4603      	mov	r3, r0
	}
 801ba90:	4618      	mov	r0, r3
 801ba92:	3708      	adds	r7, #8
 801ba94:	46bd      	mov	sp, r7
 801ba96:	bd80      	pop	{r7, pc}

0801ba98 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE7emplaceILj3EJS5_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>:
	emplace(_Args&&... __args)
 801ba98:	b580      	push	{r7, lr}
 801ba9a:	b082      	sub	sp, #8
 801ba9c:	af00      	add	r7, sp, #0
 801ba9e:	6078      	str	r0, [r7, #4]
 801baa0:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 801baa2:	687b      	ldr	r3, [r7, #4]
 801baa4:	4618      	mov	r0, r3
 801baa6:	f7ee fdb5 	bl	800a614 <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 801baaa:	6838      	ldr	r0, [r7, #0]
 801baac:	f7ec f944 	bl	8007d38 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 801bab0:	4603      	mov	r3, r0
 801bab2:	4619      	mov	r1, r3
 801bab4:	6878      	ldr	r0, [r7, #4]
 801bab6:	f000 fb3f 	bl	801c138 <_ZSt28__variant_construct_by_indexILj3ESt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEJS6_EEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 801baba:	6878      	ldr	r0, [r7, #4]
 801babc:	f7f1 fd52 	bl	800d564 <_ZSt3getILj3EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 801bac0:	4603      	mov	r3, r0
	}
 801bac2:	4618      	mov	r0, r3
 801bac4:	3708      	adds	r7, #8
 801bac6:	46bd      	mov	sp, r7
 801bac8:	bd80      	pop	{r7, pc}

0801baca <_ZNSt8__detail9__variant14_UninitializedIP17Primal_expressionLb1EEC1IJEEESt16in_place_index_tILj0EEDpOT_>:
	_Uninitialized(in_place_index_t<0>, _Args&&... __args)
 801baca:	b480      	push	{r7}
 801bacc:	b083      	sub	sp, #12
 801bace:	af00      	add	r7, sp, #0
 801bad0:	6078      	str	r0, [r7, #4]
 801bad2:	7039      	strb	r1, [r7, #0]
	: _M_storage(std::forward<_Args>(__args)...)
 801bad4:	687b      	ldr	r3, [r7, #4]
 801bad6:	2200      	movs	r2, #0
 801bad8:	601a      	str	r2, [r3, #0]
	{ }
 801bada:	687b      	ldr	r3, [r7, #4]
 801badc:	4618      	mov	r0, r3
 801bade:	370c      	adds	r7, #12
 801bae0:	46bd      	mov	sp, r7
 801bae2:	f85d 7b04 	ldr.w	r7, [sp], #4
 801bae6:	4770      	bx	lr

0801bae8 <_ZNSt8__detail9__variant15_Variadic_unionIJP17Primal_expressionP10ExpressionEEC1IJEEESt16in_place_index_tILj0EEDpOT_>:
	constexpr _Variadic_union(in_place_index_t<0>, _Args&&... __args)
 801bae8:	b580      	push	{r7, lr}
 801baea:	b082      	sub	sp, #8
 801baec:	af00      	add	r7, sp, #0
 801baee:	6078      	str	r0, [r7, #4]
 801baf0:	7039      	strb	r1, [r7, #0]
	: _M_first(in_place_index<0>, std::forward<_Args>(__args)...)
 801baf2:	687b      	ldr	r3, [r7, #4]
 801baf4:	4611      	mov	r1, r2
 801baf6:	4618      	mov	r0, r3
 801baf8:	f7ff ffe7 	bl	801baca <_ZNSt8__detail9__variant14_UninitializedIP17Primal_expressionLb1EEC1IJEEESt16in_place_index_tILj0EEDpOT_>
	{ }
 801bafc:	687b      	ldr	r3, [r7, #4]
 801bafe:	4618      	mov	r0, r3
 801bb00:	3708      	adds	r7, #8
 801bb02:	46bd      	mov	sp, r7
 801bb04:	bd80      	pop	{r7, pc}

0801bb06 <_ZNSt8__detail9__variant16_Variant_storageILb1EJP17Primal_expressionP10ExpressionEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variant_storage(in_place_index_t<_Np>, _Args&&... __args)
 801bb06:	b580      	push	{r7, lr}
 801bb08:	b082      	sub	sp, #8
 801bb0a:	af00      	add	r7, sp, #0
 801bb0c:	6078      	str	r0, [r7, #4]
 801bb0e:	7039      	strb	r1, [r7, #0]
	_M_index(_Np)
 801bb10:	687b      	ldr	r3, [r7, #4]
 801bb12:	4611      	mov	r1, r2
 801bb14:	4618      	mov	r0, r3
 801bb16:	f7ff ffe7 	bl	801bae8 <_ZNSt8__detail9__variant15_Variadic_unionIJP17Primal_expressionP10ExpressionEEC1IJEEESt16in_place_index_tILj0EEDpOT_>
 801bb1a:	687b      	ldr	r3, [r7, #4]
 801bb1c:	2200      	movs	r2, #0
 801bb1e:	711a      	strb	r2, [r3, #4]
	{ }
 801bb20:	687b      	ldr	r3, [r7, #4]
 801bb22:	4618      	mov	r0, r3
 801bb24:	3708      	adds	r7, #8
 801bb26:	46bd      	mov	sp, r7
 801bb28:	bd80      	pop	{r7, pc}

0801bb2a <_ZNSt7variantIJP17Primal_expressionP10ExpressionEE7emplaceILj1EJS3_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES4_E4typeEDpT0_EERS9_E4typeEDpOSA_>:
	emplace(_Args&&... __args)
 801bb2a:	b580      	push	{r7, lr}
 801bb2c:	b082      	sub	sp, #8
 801bb2e:	af00      	add	r7, sp, #0
 801bb30:	6078      	str	r0, [r7, #4]
 801bb32:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 801bb34:	687b      	ldr	r3, [r7, #4]
 801bb36:	4618      	mov	r0, r3
 801bb38:	f000 fb1f 	bl	801c17a <_ZNSt8__detail9__variant16_Variant_storageILb1EJP17Primal_expressionP10ExpressionEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 801bb3c:	6838      	ldr	r0, [r7, #0]
 801bb3e:	f7f9 fa89 	bl	8015054 <_ZSt7forwardIP10ExpressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801bb42:	4603      	mov	r3, r0
 801bb44:	4619      	mov	r1, r3
 801bb46:	6878      	ldr	r0, [r7, #4]
 801bb48:	f000 fb24 	bl	801c194 <_ZSt28__variant_construct_by_indexILj1ESt7variantIJP17Primal_expressionP10ExpressionEEJS4_EEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 801bb4c:	6878      	ldr	r0, [r7, #4]
 801bb4e:	f7ee fec1 	bl	800a8d4 <_ZSt3getILj1EJP17Primal_expressionP10ExpressionEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERS8_>
 801bb52:	4603      	mov	r3, r0
	}
 801bb54:	4618      	mov	r0, r3
 801bb56:	3708      	adds	r7, #8
 801bb58:	46bd      	mov	sp, r7
 801bb5a:	bd80      	pop	{r7, pc}

0801bb5c <_ZSt7forwardIP17Primal_expressionEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801bb5c:	b480      	push	{r7}
 801bb5e:	b083      	sub	sp, #12
 801bb60:	af00      	add	r7, sp, #0
 801bb62:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801bb64:	687b      	ldr	r3, [r7, #4]
 801bb66:	4618      	mov	r0, r3
 801bb68:	370c      	adds	r7, #12
 801bb6a:	46bd      	mov	sp, r7
 801bb6c:	f85d 7b04 	ldr.w	r7, [sp], #4
 801bb70:	4770      	bx	lr

0801bb72 <_ZNSt7variantIJP17Primal_expressionP10ExpressionEE7emplaceILj0EJS1_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES4_E4typeEDpT0_EERS9_E4typeEDpOSA_>:
	emplace(_Args&&... __args)
 801bb72:	b580      	push	{r7, lr}
 801bb74:	b082      	sub	sp, #8
 801bb76:	af00      	add	r7, sp, #0
 801bb78:	6078      	str	r0, [r7, #4]
 801bb7a:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 801bb7c:	687b      	ldr	r3, [r7, #4]
 801bb7e:	4618      	mov	r0, r3
 801bb80:	f000 fafb 	bl	801c17a <_ZNSt8__detail9__variant16_Variant_storageILb1EJP17Primal_expressionP10ExpressionEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 801bb84:	6838      	ldr	r0, [r7, #0]
 801bb86:	f7ff ffe9 	bl	801bb5c <_ZSt7forwardIP17Primal_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801bb8a:	4603      	mov	r3, r0
 801bb8c:	4619      	mov	r1, r3
 801bb8e:	6878      	ldr	r0, [r7, #4]
 801bb90:	f000 fb1f 	bl	801c1d2 <_ZSt28__variant_construct_by_indexILj0ESt7variantIJP17Primal_expressionP10ExpressionEEJS2_EEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 801bb94:	6878      	ldr	r0, [r7, #4]
 801bb96:	f7ee fedb 	bl	800a950 <_ZSt3getILj0EJP17Primal_expressionP10ExpressionEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERS8_>
 801bb9a:	4603      	mov	r3, r0
	}
 801bb9c:	4618      	mov	r0, r3
 801bb9e:	3708      	adds	r7, #8
 801bba0:	46bd      	mov	sp, r7
 801bba2:	bd80      	pop	{r7, pc}

0801bba4 <_ZSt4moveIR13mult_operatorEONSt16remove_referenceIT_E4typeEOS3_>:
    move(_Tp&& __t) noexcept
 801bba4:	b480      	push	{r7}
 801bba6:	b083      	sub	sp, #12
 801bba8:	af00      	add	r7, sp, #0
 801bbaa:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 801bbac:	687b      	ldr	r3, [r7, #4]
 801bbae:	4618      	mov	r0, r3
 801bbb0:	370c      	adds	r7, #12
 801bbb2:	46bd      	mov	sp, r7
 801bbb4:	f85d 7b04 	ldr.w	r7, [sp], #4
 801bbb8:	4770      	bx	lr

0801bbba <_ZNSt6vectorI13mult_operatorSaIS0_EE12emplace_backIJS0_EEERS0_DpOT_>:
      vector<_Tp, _Alloc>::
 801bbba:	b5b0      	push	{r4, r5, r7, lr}
 801bbbc:	b082      	sub	sp, #8
 801bbbe:	af00      	add	r7, sp, #0
 801bbc0:	6078      	str	r0, [r7, #4]
 801bbc2:	6039      	str	r1, [r7, #0]
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 801bbc4:	687b      	ldr	r3, [r7, #4]
 801bbc6:	685a      	ldr	r2, [r3, #4]
 801bbc8:	687b      	ldr	r3, [r7, #4]
 801bbca:	689b      	ldr	r3, [r3, #8]
 801bbcc:	429a      	cmp	r2, r3
 801bbce:	d011      	beq.n	801bbf4 <_ZNSt6vectorI13mult_operatorSaIS0_EE12emplace_backIJS0_EEERS0_DpOT_+0x3a>
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 801bbd0:	687c      	ldr	r4, [r7, #4]
 801bbd2:	687b      	ldr	r3, [r7, #4]
 801bbd4:	685d      	ldr	r5, [r3, #4]
 801bbd6:	6838      	ldr	r0, [r7, #0]
 801bbd8:	f000 fb1a 	bl	801c210 <_ZSt7forwardI13mult_operatorEOT_RNSt16remove_referenceIS1_E4typeE>
 801bbdc:	4603      	mov	r3, r0
 801bbde:	461a      	mov	r2, r3
 801bbe0:	4629      	mov	r1, r5
 801bbe2:	4620      	mov	r0, r4
 801bbe4:	f000 fb1f 	bl	801c226 <_ZNSt16allocator_traitsISaI13mult_operatorEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_>
	    ++this->_M_impl._M_finish;
 801bbe8:	687b      	ldr	r3, [r7, #4]
 801bbea:	685b      	ldr	r3, [r3, #4]
 801bbec:	1c5a      	adds	r2, r3, #1
 801bbee:	687b      	ldr	r3, [r7, #4]
 801bbf0:	605a      	str	r2, [r3, #4]
 801bbf2:	e00c      	b.n	801bc0e <_ZNSt6vectorI13mult_operatorSaIS0_EE12emplace_backIJS0_EEERS0_DpOT_+0x54>
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
 801bbf4:	6878      	ldr	r0, [r7, #4]
 801bbf6:	f000 fb29 	bl	801c24c <_ZNSt6vectorI13mult_operatorSaIS0_EE3endEv>
 801bbfa:	4604      	mov	r4, r0
 801bbfc:	6838      	ldr	r0, [r7, #0]
 801bbfe:	f000 fb07 	bl	801c210 <_ZSt7forwardI13mult_operatorEOT_RNSt16remove_referenceIS1_E4typeE>
 801bc02:	4603      	mov	r3, r0
 801bc04:	461a      	mov	r2, r3
 801bc06:	4621      	mov	r1, r4
 801bc08:	6878      	ldr	r0, [r7, #4]
 801bc0a:	f000 fb31 	bl	801c270 <_ZNSt6vectorI13mult_operatorSaIS0_EE17_M_realloc_insertIJS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_>
	return back();
 801bc0e:	6878      	ldr	r0, [r7, #4]
 801bc10:	f000 fba8 	bl	801c364 <_ZNSt6vectorI13mult_operatorSaIS0_EE4backEv>
 801bc14:	4603      	mov	r3, r0
      }
 801bc16:	4618      	mov	r0, r3
 801bc18:	3708      	adds	r7, #8
 801bc1a:	46bd      	mov	sp, r7
 801bc1c:	bdb0      	pop	{r4, r5, r7, pc}

0801bc1e <_ZNSaIP16Power_expressionEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
 801bc1e:	b580      	push	{r7, lr}
 801bc20:	b082      	sub	sp, #8
 801bc22:	af00      	add	r7, sp, #0
 801bc24:	6078      	str	r0, [r7, #4]
 801bc26:	6878      	ldr	r0, [r7, #4]
 801bc28:	f000 fbb7 	bl	801c39a <_ZN9__gnu_cxx13new_allocatorIP16Power_expressionEC1Ev>
 801bc2c:	687b      	ldr	r3, [r7, #4]
 801bc2e:	4618      	mov	r0, r3
 801bc30:	3708      	adds	r7, #8
 801bc32:	46bd      	mov	sp, r7
 801bc34:	bd80      	pop	{r7, pc}

0801bc36 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
 801bc36:	b480      	push	{r7}
 801bc38:	b083      	sub	sp, #12
 801bc3a:	af00      	add	r7, sp, #0
 801bc3c:	6078      	str	r0, [r7, #4]
	: _M_start(), _M_finish(), _M_end_of_storage()
 801bc3e:	687b      	ldr	r3, [r7, #4]
 801bc40:	2200      	movs	r2, #0
 801bc42:	601a      	str	r2, [r3, #0]
 801bc44:	687b      	ldr	r3, [r7, #4]
 801bc46:	2200      	movs	r2, #0
 801bc48:	605a      	str	r2, [r3, #4]
 801bc4a:	687b      	ldr	r3, [r7, #4]
 801bc4c:	2200      	movs	r2, #0
 801bc4e:	609a      	str	r2, [r3, #8]
	{ }
 801bc50:	687b      	ldr	r3, [r7, #4]
 801bc52:	4618      	mov	r0, r3
 801bc54:	370c      	adds	r7, #12
 801bc56:	46bd      	mov	sp, r7
 801bc58:	f85d 7b04 	ldr.w	r7, [sp], #4
 801bc5c:	4770      	bx	lr

0801bc5e <_ZNSaI13mult_operatorEC1Ev>:
 801bc5e:	b580      	push	{r7, lr}
 801bc60:	b082      	sub	sp, #8
 801bc62:	af00      	add	r7, sp, #0
 801bc64:	6078      	str	r0, [r7, #4]
 801bc66:	6878      	ldr	r0, [r7, #4]
 801bc68:	f000 fba2 	bl	801c3b0 <_ZN9__gnu_cxx13new_allocatorI13mult_operatorEC1Ev>
 801bc6c:	687b      	ldr	r3, [r7, #4]
 801bc6e:	4618      	mov	r0, r3
 801bc70:	3708      	adds	r7, #8
 801bc72:	46bd      	mov	sp, r7
 801bc74:	bd80      	pop	{r7, pc}

0801bc76 <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
 801bc76:	b480      	push	{r7}
 801bc78:	b083      	sub	sp, #12
 801bc7a:	af00      	add	r7, sp, #0
 801bc7c:	6078      	str	r0, [r7, #4]
	: _M_start(), _M_finish(), _M_end_of_storage()
 801bc7e:	687b      	ldr	r3, [r7, #4]
 801bc80:	2200      	movs	r2, #0
 801bc82:	601a      	str	r2, [r3, #0]
 801bc84:	687b      	ldr	r3, [r7, #4]
 801bc86:	2200      	movs	r2, #0
 801bc88:	605a      	str	r2, [r3, #4]
 801bc8a:	687b      	ldr	r3, [r7, #4]
 801bc8c:	2200      	movs	r2, #0
 801bc8e:	609a      	str	r2, [r3, #8]
	{ }
 801bc90:	687b      	ldr	r3, [r7, #4]
 801bc92:	4618      	mov	r0, r3
 801bc94:	370c      	adds	r7, #12
 801bc96:	46bd      	mov	sp, r7
 801bc98:	f85d 7b04 	ldr.w	r7, [sp], #4
 801bc9c:	4770      	bx	lr

0801bc9e <_ZSt4moveIRP16Power_expressionEONSt16remove_referenceIT_E4typeEOS4_>:
    move(_Tp&& __t) noexcept
 801bc9e:	b480      	push	{r7}
 801bca0:	b083      	sub	sp, #12
 801bca2:	af00      	add	r7, sp, #0
 801bca4:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 801bca6:	687b      	ldr	r3, [r7, #4]
 801bca8:	4618      	mov	r0, r3
 801bcaa:	370c      	adds	r7, #12
 801bcac:	46bd      	mov	sp, r7
 801bcae:	f85d 7b04 	ldr.w	r7, [sp], #4
 801bcb2:	4770      	bx	lr

0801bcb4 <_ZNSt6vectorIP16Power_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>:
      vector<_Tp, _Alloc>::
 801bcb4:	b5b0      	push	{r4, r5, r7, lr}
 801bcb6:	b082      	sub	sp, #8
 801bcb8:	af00      	add	r7, sp, #0
 801bcba:	6078      	str	r0, [r7, #4]
 801bcbc:	6039      	str	r1, [r7, #0]
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 801bcbe:	687b      	ldr	r3, [r7, #4]
 801bcc0:	685a      	ldr	r2, [r3, #4]
 801bcc2:	687b      	ldr	r3, [r7, #4]
 801bcc4:	689b      	ldr	r3, [r3, #8]
 801bcc6:	429a      	cmp	r2, r3
 801bcc8:	d011      	beq.n	801bcee <_ZNSt6vectorIP16Power_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x3a>
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 801bcca:	687c      	ldr	r4, [r7, #4]
 801bccc:	687b      	ldr	r3, [r7, #4]
 801bcce:	685d      	ldr	r5, [r3, #4]
 801bcd0:	6838      	ldr	r0, [r7, #0]
 801bcd2:	f000 fb78 	bl	801c3c6 <_ZSt7forwardIP16Power_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801bcd6:	4603      	mov	r3, r0
 801bcd8:	461a      	mov	r2, r3
 801bcda:	4629      	mov	r1, r5
 801bcdc:	4620      	mov	r0, r4
 801bcde:	f000 fb7d 	bl	801c3dc <_ZNSt16allocator_traitsISaIP16Power_expressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	    ++this->_M_impl._M_finish;
 801bce2:	687b      	ldr	r3, [r7, #4]
 801bce4:	685b      	ldr	r3, [r3, #4]
 801bce6:	1d1a      	adds	r2, r3, #4
 801bce8:	687b      	ldr	r3, [r7, #4]
 801bcea:	605a      	str	r2, [r3, #4]
 801bcec:	e00c      	b.n	801bd08 <_ZNSt6vectorIP16Power_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x54>
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
 801bcee:	6878      	ldr	r0, [r7, #4]
 801bcf0:	f7ee fae0 	bl	800a2b4 <_ZNSt6vectorIP16Power_expressionSaIS1_EE3endEv>
 801bcf4:	4604      	mov	r4, r0
 801bcf6:	6838      	ldr	r0, [r7, #0]
 801bcf8:	f000 fb65 	bl	801c3c6 <_ZSt7forwardIP16Power_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801bcfc:	4603      	mov	r3, r0
 801bcfe:	461a      	mov	r2, r3
 801bd00:	4621      	mov	r1, r4
 801bd02:	6878      	ldr	r0, [r7, #4]
 801bd04:	f000 fb7e 	bl	801c404 <_ZNSt6vectorIP16Power_expressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
	return back();
 801bd08:	6878      	ldr	r0, [r7, #4]
 801bd0a:	f000 fbf7 	bl	801c4fc <_ZNSt6vectorIP16Power_expressionSaIS1_EE4backEv>
 801bd0e:	4603      	mov	r3, r0
      }
 801bd10:	4618      	mov	r0, r3
 801bd12:	3708      	adds	r7, #8
 801bd14:	46bd      	mov	sp, r7
 801bd16:	bdb0      	pop	{r4, r5, r7, pc}

0801bd18 <_ZSt4moveIR12sum_operatorEONSt16remove_referenceIT_E4typeEOS3_>:
    move(_Tp&& __t) noexcept
 801bd18:	b480      	push	{r7}
 801bd1a:	b083      	sub	sp, #12
 801bd1c:	af00      	add	r7, sp, #0
 801bd1e:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 801bd20:	687b      	ldr	r3, [r7, #4]
 801bd22:	4618      	mov	r0, r3
 801bd24:	370c      	adds	r7, #12
 801bd26:	46bd      	mov	sp, r7
 801bd28:	f85d 7b04 	ldr.w	r7, [sp], #4
 801bd2c:	4770      	bx	lr

0801bd2e <_ZNSt6vectorI12sum_operatorSaIS0_EE12emplace_backIJS0_EEERS0_DpOT_>:
      vector<_Tp, _Alloc>::
 801bd2e:	b5b0      	push	{r4, r5, r7, lr}
 801bd30:	b082      	sub	sp, #8
 801bd32:	af00      	add	r7, sp, #0
 801bd34:	6078      	str	r0, [r7, #4]
 801bd36:	6039      	str	r1, [r7, #0]
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 801bd38:	687b      	ldr	r3, [r7, #4]
 801bd3a:	685a      	ldr	r2, [r3, #4]
 801bd3c:	687b      	ldr	r3, [r7, #4]
 801bd3e:	689b      	ldr	r3, [r3, #8]
 801bd40:	429a      	cmp	r2, r3
 801bd42:	d011      	beq.n	801bd68 <_ZNSt6vectorI12sum_operatorSaIS0_EE12emplace_backIJS0_EEERS0_DpOT_+0x3a>
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 801bd44:	687c      	ldr	r4, [r7, #4]
 801bd46:	687b      	ldr	r3, [r7, #4]
 801bd48:	685d      	ldr	r5, [r3, #4]
 801bd4a:	6838      	ldr	r0, [r7, #0]
 801bd4c:	f000 fbf1 	bl	801c532 <_ZSt7forwardI12sum_operatorEOT_RNSt16remove_referenceIS1_E4typeE>
 801bd50:	4603      	mov	r3, r0
 801bd52:	461a      	mov	r2, r3
 801bd54:	4629      	mov	r1, r5
 801bd56:	4620      	mov	r0, r4
 801bd58:	f000 fbf6 	bl	801c548 <_ZNSt16allocator_traitsISaI12sum_operatorEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_>
	    ++this->_M_impl._M_finish;
 801bd5c:	687b      	ldr	r3, [r7, #4]
 801bd5e:	685b      	ldr	r3, [r3, #4]
 801bd60:	1c5a      	adds	r2, r3, #1
 801bd62:	687b      	ldr	r3, [r7, #4]
 801bd64:	605a      	str	r2, [r3, #4]
 801bd66:	e00c      	b.n	801bd82 <_ZNSt6vectorI12sum_operatorSaIS0_EE12emplace_backIJS0_EEERS0_DpOT_+0x54>
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
 801bd68:	6878      	ldr	r0, [r7, #4]
 801bd6a:	f000 fc00 	bl	801c56e <_ZNSt6vectorI12sum_operatorSaIS0_EE3endEv>
 801bd6e:	4604      	mov	r4, r0
 801bd70:	6838      	ldr	r0, [r7, #0]
 801bd72:	f000 fbde 	bl	801c532 <_ZSt7forwardI12sum_operatorEOT_RNSt16remove_referenceIS1_E4typeE>
 801bd76:	4603      	mov	r3, r0
 801bd78:	461a      	mov	r2, r3
 801bd7a:	4621      	mov	r1, r4
 801bd7c:	6878      	ldr	r0, [r7, #4]
 801bd7e:	f000 fc07 	bl	801c590 <_ZNSt6vectorI12sum_operatorSaIS0_EE17_M_realloc_insertIJS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_>
	return back();
 801bd82:	6878      	ldr	r0, [r7, #4]
 801bd84:	f000 fc7e 	bl	801c684 <_ZNSt6vectorI12sum_operatorSaIS0_EE4backEv>
 801bd88:	4603      	mov	r3, r0
      }
 801bd8a:	4618      	mov	r0, r3
 801bd8c:	3708      	adds	r7, #8
 801bd8e:	46bd      	mov	sp, r7
 801bd90:	bdb0      	pop	{r4, r5, r7, pc}

0801bd92 <_ZNSaIP19Multiply_expressionEC1Ev>:
 801bd92:	b580      	push	{r7, lr}
 801bd94:	b082      	sub	sp, #8
 801bd96:	af00      	add	r7, sp, #0
 801bd98:	6078      	str	r0, [r7, #4]
 801bd9a:	6878      	ldr	r0, [r7, #4]
 801bd9c:	f000 fc8d 	bl	801c6ba <_ZN9__gnu_cxx13new_allocatorIP19Multiply_expressionEC1Ev>
 801bda0:	687b      	ldr	r3, [r7, #4]
 801bda2:	4618      	mov	r0, r3
 801bda4:	3708      	adds	r7, #8
 801bda6:	46bd      	mov	sp, r7
 801bda8:	bd80      	pop	{r7, pc}

0801bdaa <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
 801bdaa:	b480      	push	{r7}
 801bdac:	b083      	sub	sp, #12
 801bdae:	af00      	add	r7, sp, #0
 801bdb0:	6078      	str	r0, [r7, #4]
	: _M_start(), _M_finish(), _M_end_of_storage()
 801bdb2:	687b      	ldr	r3, [r7, #4]
 801bdb4:	2200      	movs	r2, #0
 801bdb6:	601a      	str	r2, [r3, #0]
 801bdb8:	687b      	ldr	r3, [r7, #4]
 801bdba:	2200      	movs	r2, #0
 801bdbc:	605a      	str	r2, [r3, #4]
 801bdbe:	687b      	ldr	r3, [r7, #4]
 801bdc0:	2200      	movs	r2, #0
 801bdc2:	609a      	str	r2, [r3, #8]
	{ }
 801bdc4:	687b      	ldr	r3, [r7, #4]
 801bdc6:	4618      	mov	r0, r3
 801bdc8:	370c      	adds	r7, #12
 801bdca:	46bd      	mov	sp, r7
 801bdcc:	f85d 7b04 	ldr.w	r7, [sp], #4
 801bdd0:	4770      	bx	lr

0801bdd2 <_ZNSaI12sum_operatorEC1Ev>:
 801bdd2:	b580      	push	{r7, lr}
 801bdd4:	b082      	sub	sp, #8
 801bdd6:	af00      	add	r7, sp, #0
 801bdd8:	6078      	str	r0, [r7, #4]
 801bdda:	6878      	ldr	r0, [r7, #4]
 801bddc:	f000 fc78 	bl	801c6d0 <_ZN9__gnu_cxx13new_allocatorI12sum_operatorEC1Ev>
 801bde0:	687b      	ldr	r3, [r7, #4]
 801bde2:	4618      	mov	r0, r3
 801bde4:	3708      	adds	r7, #8
 801bde6:	46bd      	mov	sp, r7
 801bde8:	bd80      	pop	{r7, pc}

0801bdea <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
 801bdea:	b480      	push	{r7}
 801bdec:	b083      	sub	sp, #12
 801bdee:	af00      	add	r7, sp, #0
 801bdf0:	6078      	str	r0, [r7, #4]
	: _M_start(), _M_finish(), _M_end_of_storage()
 801bdf2:	687b      	ldr	r3, [r7, #4]
 801bdf4:	2200      	movs	r2, #0
 801bdf6:	601a      	str	r2, [r3, #0]
 801bdf8:	687b      	ldr	r3, [r7, #4]
 801bdfa:	2200      	movs	r2, #0
 801bdfc:	605a      	str	r2, [r3, #4]
 801bdfe:	687b      	ldr	r3, [r7, #4]
 801be00:	2200      	movs	r2, #0
 801be02:	609a      	str	r2, [r3, #8]
	{ }
 801be04:	687b      	ldr	r3, [r7, #4]
 801be06:	4618      	mov	r0, r3
 801be08:	370c      	adds	r7, #12
 801be0a:	46bd      	mov	sp, r7
 801be0c:	f85d 7b04 	ldr.w	r7, [sp], #4
 801be10:	4770      	bx	lr

0801be12 <_ZSt4moveIRP19Multiply_expressionEONSt16remove_referenceIT_E4typeEOS4_>:
    move(_Tp&& __t) noexcept
 801be12:	b480      	push	{r7}
 801be14:	b083      	sub	sp, #12
 801be16:	af00      	add	r7, sp, #0
 801be18:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 801be1a:	687b      	ldr	r3, [r7, #4]
 801be1c:	4618      	mov	r0, r3
 801be1e:	370c      	adds	r7, #12
 801be20:	46bd      	mov	sp, r7
 801be22:	f85d 7b04 	ldr.w	r7, [sp], #4
 801be26:	4770      	bx	lr

0801be28 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>:
      vector<_Tp, _Alloc>::
 801be28:	b5b0      	push	{r4, r5, r7, lr}
 801be2a:	b082      	sub	sp, #8
 801be2c:	af00      	add	r7, sp, #0
 801be2e:	6078      	str	r0, [r7, #4]
 801be30:	6039      	str	r1, [r7, #0]
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 801be32:	687b      	ldr	r3, [r7, #4]
 801be34:	685a      	ldr	r2, [r3, #4]
 801be36:	687b      	ldr	r3, [r7, #4]
 801be38:	689b      	ldr	r3, [r3, #8]
 801be3a:	429a      	cmp	r2, r3
 801be3c:	d011      	beq.n	801be62 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x3a>
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 801be3e:	687c      	ldr	r4, [r7, #4]
 801be40:	687b      	ldr	r3, [r7, #4]
 801be42:	685d      	ldr	r5, [r3, #4]
 801be44:	6838      	ldr	r0, [r7, #0]
 801be46:	f000 fc4e 	bl	801c6e6 <_ZSt7forwardIP19Multiply_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801be4a:	4603      	mov	r3, r0
 801be4c:	461a      	mov	r2, r3
 801be4e:	4629      	mov	r1, r5
 801be50:	4620      	mov	r0, r4
 801be52:	f000 fc53 	bl	801c6fc <_ZNSt16allocator_traitsISaIP19Multiply_expressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	    ++this->_M_impl._M_finish;
 801be56:	687b      	ldr	r3, [r7, #4]
 801be58:	685b      	ldr	r3, [r3, #4]
 801be5a:	1d1a      	adds	r2, r3, #4
 801be5c:	687b      	ldr	r3, [r7, #4]
 801be5e:	605a      	str	r2, [r3, #4]
 801be60:	e00c      	b.n	801be7c <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x54>
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
 801be62:	6878      	ldr	r0, [r7, #4]
 801be64:	f7ee fab1 	bl	800a3ca <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE3endEv>
 801be68:	4604      	mov	r4, r0
 801be6a:	6838      	ldr	r0, [r7, #0]
 801be6c:	f000 fc3b 	bl	801c6e6 <_ZSt7forwardIP19Multiply_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801be70:	4603      	mov	r3, r0
 801be72:	461a      	mov	r2, r3
 801be74:	4621      	mov	r1, r4
 801be76:	6878      	ldr	r0, [r7, #4]
 801be78:	f000 fc54 	bl	801c724 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
	return back();
 801be7c:	6878      	ldr	r0, [r7, #4]
 801be7e:	f000 fccd 	bl	801c81c <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE4backEv>
 801be82:	4603      	mov	r3, r0
      }
 801be84:	4618      	mov	r0, r3
 801be86:	3708      	adds	r7, #8
 801be88:	46bd      	mov	sp, r7
 801be8a:	bdb0      	pop	{r4, r5, r7, pc}

0801be8c <_ZNSaIP18Compare_expressionEC1Ev>:
 801be8c:	b580      	push	{r7, lr}
 801be8e:	b082      	sub	sp, #8
 801be90:	af00      	add	r7, sp, #0
 801be92:	6078      	str	r0, [r7, #4]
 801be94:	6878      	ldr	r0, [r7, #4]
 801be96:	f000 fcdc 	bl	801c852 <_ZN9__gnu_cxx13new_allocatorIP18Compare_expressionEC1Ev>
 801be9a:	687b      	ldr	r3, [r7, #4]
 801be9c:	4618      	mov	r0, r3
 801be9e:	3708      	adds	r7, #8
 801bea0:	46bd      	mov	sp, r7
 801bea2:	bd80      	pop	{r7, pc}

0801bea4 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
 801bea4:	b480      	push	{r7}
 801bea6:	b083      	sub	sp, #12
 801bea8:	af00      	add	r7, sp, #0
 801beaa:	6078      	str	r0, [r7, #4]
	: _M_start(), _M_finish(), _M_end_of_storage()
 801beac:	687b      	ldr	r3, [r7, #4]
 801beae:	2200      	movs	r2, #0
 801beb0:	601a      	str	r2, [r3, #0]
 801beb2:	687b      	ldr	r3, [r7, #4]
 801beb4:	2200      	movs	r2, #0
 801beb6:	605a      	str	r2, [r3, #4]
 801beb8:	687b      	ldr	r3, [r7, #4]
 801beba:	2200      	movs	r2, #0
 801bebc:	609a      	str	r2, [r3, #8]
	{ }
 801bebe:	687b      	ldr	r3, [r7, #4]
 801bec0:	4618      	mov	r0, r3
 801bec2:	370c      	adds	r7, #12
 801bec4:	46bd      	mov	sp, r7
 801bec6:	f85d 7b04 	ldr.w	r7, [sp], #4
 801beca:	4770      	bx	lr

0801becc <_ZSt4moveIRP18Compare_expressionEONSt16remove_referenceIT_E4typeEOS4_>:
    move(_Tp&& __t) noexcept
 801becc:	b480      	push	{r7}
 801bece:	b083      	sub	sp, #12
 801bed0:	af00      	add	r7, sp, #0
 801bed2:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 801bed4:	687b      	ldr	r3, [r7, #4]
 801bed6:	4618      	mov	r0, r3
 801bed8:	370c      	adds	r7, #12
 801beda:	46bd      	mov	sp, r7
 801bedc:	f85d 7b04 	ldr.w	r7, [sp], #4
 801bee0:	4770      	bx	lr

0801bee2 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>:
      vector<_Tp, _Alloc>::
 801bee2:	b5b0      	push	{r4, r5, r7, lr}
 801bee4:	b082      	sub	sp, #8
 801bee6:	af00      	add	r7, sp, #0
 801bee8:	6078      	str	r0, [r7, #4]
 801beea:	6039      	str	r1, [r7, #0]
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 801beec:	687b      	ldr	r3, [r7, #4]
 801beee:	685a      	ldr	r2, [r3, #4]
 801bef0:	687b      	ldr	r3, [r7, #4]
 801bef2:	689b      	ldr	r3, [r3, #8]
 801bef4:	429a      	cmp	r2, r3
 801bef6:	d011      	beq.n	801bf1c <_ZNSt6vectorIP18Compare_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x3a>
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 801bef8:	687c      	ldr	r4, [r7, #4]
 801befa:	687b      	ldr	r3, [r7, #4]
 801befc:	685d      	ldr	r5, [r3, #4]
 801befe:	6838      	ldr	r0, [r7, #0]
 801bf00:	f000 fcb2 	bl	801c868 <_ZSt7forwardIP18Compare_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801bf04:	4603      	mov	r3, r0
 801bf06:	461a      	mov	r2, r3
 801bf08:	4629      	mov	r1, r5
 801bf0a:	4620      	mov	r0, r4
 801bf0c:	f000 fcb7 	bl	801c87e <_ZNSt16allocator_traitsISaIP18Compare_expressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	    ++this->_M_impl._M_finish;
 801bf10:	687b      	ldr	r3, [r7, #4]
 801bf12:	685b      	ldr	r3, [r3, #4]
 801bf14:	1d1a      	adds	r2, r3, #4
 801bf16:	687b      	ldr	r3, [r7, #4]
 801bf18:	605a      	str	r2, [r3, #4]
 801bf1a:	e00c      	b.n	801bf36 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x54>
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
 801bf1c:	6878      	ldr	r0, [r7, #4]
 801bf1e:	f7ee fac4 	bl	800a4aa <_ZNSt6vectorIP18Compare_expressionSaIS1_EE3endEv>
 801bf22:	4604      	mov	r4, r0
 801bf24:	6838      	ldr	r0, [r7, #0]
 801bf26:	f000 fc9f 	bl	801c868 <_ZSt7forwardIP18Compare_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801bf2a:	4603      	mov	r3, r0
 801bf2c:	461a      	mov	r2, r3
 801bf2e:	4621      	mov	r1, r4
 801bf30:	6878      	ldr	r0, [r7, #4]
 801bf32:	f000 fcb7 	bl	801c8a4 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
	return back();
 801bf36:	6878      	ldr	r0, [r7, #4]
 801bf38:	f000 fd30 	bl	801c99c <_ZNSt6vectorIP18Compare_expressionSaIS1_EE4backEv>
 801bf3c:	4603      	mov	r3, r0
      }
 801bf3e:	4618      	mov	r0, r3
 801bf40:	3708      	adds	r7, #8
 801bf42:	46bd      	mov	sp, r7
 801bf44:	bdb0      	pop	{r4, r5, r7, pc}

0801bf46 <_ZNSaIP14And_expressionEC1Ev>:
 801bf46:	b580      	push	{r7, lr}
 801bf48:	b082      	sub	sp, #8
 801bf4a:	af00      	add	r7, sp, #0
 801bf4c:	6078      	str	r0, [r7, #4]
 801bf4e:	6878      	ldr	r0, [r7, #4]
 801bf50:	f000 fd3f 	bl	801c9d2 <_ZN9__gnu_cxx13new_allocatorIP14And_expressionEC1Ev>
 801bf54:	687b      	ldr	r3, [r7, #4]
 801bf56:	4618      	mov	r0, r3
 801bf58:	3708      	adds	r7, #8
 801bf5a:	46bd      	mov	sp, r7
 801bf5c:	bd80      	pop	{r7, pc}

0801bf5e <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
 801bf5e:	b480      	push	{r7}
 801bf60:	b083      	sub	sp, #12
 801bf62:	af00      	add	r7, sp, #0
 801bf64:	6078      	str	r0, [r7, #4]
	: _M_start(), _M_finish(), _M_end_of_storage()
 801bf66:	687b      	ldr	r3, [r7, #4]
 801bf68:	2200      	movs	r2, #0
 801bf6a:	601a      	str	r2, [r3, #0]
 801bf6c:	687b      	ldr	r3, [r7, #4]
 801bf6e:	2200      	movs	r2, #0
 801bf70:	605a      	str	r2, [r3, #4]
 801bf72:	687b      	ldr	r3, [r7, #4]
 801bf74:	2200      	movs	r2, #0
 801bf76:	609a      	str	r2, [r3, #8]
	{ }
 801bf78:	687b      	ldr	r3, [r7, #4]
 801bf7a:	4618      	mov	r0, r3
 801bf7c:	370c      	adds	r7, #12
 801bf7e:	46bd      	mov	sp, r7
 801bf80:	f85d 7b04 	ldr.w	r7, [sp], #4
 801bf84:	4770      	bx	lr

0801bf86 <_ZSt4moveIRP14And_expressionEONSt16remove_referenceIT_E4typeEOS4_>:
    move(_Tp&& __t) noexcept
 801bf86:	b480      	push	{r7}
 801bf88:	b083      	sub	sp, #12
 801bf8a:	af00      	add	r7, sp, #0
 801bf8c:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 801bf8e:	687b      	ldr	r3, [r7, #4]
 801bf90:	4618      	mov	r0, r3
 801bf92:	370c      	adds	r7, #12
 801bf94:	46bd      	mov	sp, r7
 801bf96:	f85d 7b04 	ldr.w	r7, [sp], #4
 801bf9a:	4770      	bx	lr

0801bf9c <_ZNSt6vectorIP14And_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>:
      vector<_Tp, _Alloc>::
 801bf9c:	b5b0      	push	{r4, r5, r7, lr}
 801bf9e:	b082      	sub	sp, #8
 801bfa0:	af00      	add	r7, sp, #0
 801bfa2:	6078      	str	r0, [r7, #4]
 801bfa4:	6039      	str	r1, [r7, #0]
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 801bfa6:	687b      	ldr	r3, [r7, #4]
 801bfa8:	685a      	ldr	r2, [r3, #4]
 801bfaa:	687b      	ldr	r3, [r7, #4]
 801bfac:	689b      	ldr	r3, [r3, #8]
 801bfae:	429a      	cmp	r2, r3
 801bfb0:	d011      	beq.n	801bfd6 <_ZNSt6vectorIP14And_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x3a>
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 801bfb2:	687c      	ldr	r4, [r7, #4]
 801bfb4:	687b      	ldr	r3, [r7, #4]
 801bfb6:	685d      	ldr	r5, [r3, #4]
 801bfb8:	6838      	ldr	r0, [r7, #0]
 801bfba:	f000 fd15 	bl	801c9e8 <_ZSt7forwardIP14And_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801bfbe:	4603      	mov	r3, r0
 801bfc0:	461a      	mov	r2, r3
 801bfc2:	4629      	mov	r1, r5
 801bfc4:	4620      	mov	r0, r4
 801bfc6:	f000 fd1a 	bl	801c9fe <_ZNSt16allocator_traitsISaIP14And_expressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	    ++this->_M_impl._M_finish;
 801bfca:	687b      	ldr	r3, [r7, #4]
 801bfcc:	685b      	ldr	r3, [r3, #4]
 801bfce:	1d1a      	adds	r2, r3, #4
 801bfd0:	687b      	ldr	r3, [r7, #4]
 801bfd2:	605a      	str	r2, [r3, #4]
 801bfd4:	e00c      	b.n	801bff0 <_ZNSt6vectorIP14And_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x54>
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
 801bfd6:	6878      	ldr	r0, [r7, #4]
 801bfd8:	f7ee fad7 	bl	800a58a <_ZNSt6vectorIP14And_expressionSaIS1_EE3endEv>
 801bfdc:	4604      	mov	r4, r0
 801bfde:	6838      	ldr	r0, [r7, #0]
 801bfe0:	f000 fd02 	bl	801c9e8 <_ZSt7forwardIP14And_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801bfe4:	4603      	mov	r3, r0
 801bfe6:	461a      	mov	r2, r3
 801bfe8:	4621      	mov	r1, r4
 801bfea:	6878      	ldr	r0, [r7, #4]
 801bfec:	f000 fd1a 	bl	801ca24 <_ZNSt6vectorIP14And_expressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
	return back();
 801bff0:	6878      	ldr	r0, [r7, #4]
 801bff2:	f000 fd93 	bl	801cb1c <_ZNSt6vectorIP14And_expressionSaIS1_EE4backEv>
 801bff6:	4603      	mov	r3, r0
      }
 801bff8:	4618      	mov	r0, r3
 801bffa:	3708      	adds	r7, #8
 801bffc:	46bd      	mov	sp, r7
 801bffe:	bdb0      	pop	{r4, r5, r7, pc}

0801c000 <_ZSt28__variant_construct_by_indexILj5ESt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEJSA_EEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 801c000:	b590      	push	{r4, r7, lr}
 801c002:	b085      	sub	sp, #20
 801c004:	af00      	add	r7, sp, #0
 801c006:	6078      	str	r0, [r7, #4]
 801c008:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 801c00a:	687b      	ldr	r3, [r7, #4]
 801c00c:	2205      	movs	r2, #5
 801c00e:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 801c010:	6878      	ldr	r0, [r7, #4]
 801c012:	f7ee fbfe 	bl	800a812 <_ZNSt8__detail9__variant5__getILj5ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 801c016:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 801c018:	6838      	ldr	r0, [r7, #0]
 801c01a:	f7f8 fe23 	bl	8014c64 <_ZSt7forwardIP13Function_callEOT_RNSt16remove_referenceIS2_E4typeE>
 801c01e:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 801c020:	681c      	ldr	r4, [r3, #0]
 801c022:	68f8      	ldr	r0, [r7, #12]
 801c024:	f7f9 fd24 	bl	8015a70 <_ZSt9addressofIP13Function_callEPT_RS2_>
 801c028:	4603      	mov	r3, r0
 801c02a:	4619      	mov	r1, r3
 801c02c:	2004      	movs	r0, #4
 801c02e:	f7e5 f814 	bl	800105a <_ZnwjPv>
 801c032:	4603      	mov	r3, r0
 801c034:	601c      	str	r4, [r3, #0]
    }
 801c036:	bf00      	nop
 801c038:	3714      	adds	r7, #20
 801c03a:	46bd      	mov	sp, r7
 801c03c:	bd90      	pop	{r4, r7, pc}

0801c03e <_ZSt28__variant_construct_by_indexILj4ESt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEJS8_EEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 801c03e:	b590      	push	{r4, r7, lr}
 801c040:	b085      	sub	sp, #20
 801c042:	af00      	add	r7, sp, #0
 801c044:	6078      	str	r0, [r7, #4]
 801c046:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 801c048:	687b      	ldr	r3, [r7, #4]
 801c04a:	2204      	movs	r2, #4
 801c04c:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 801c04e:	6878      	ldr	r0, [r7, #4]
 801c050:	f7ee fb47 	bl	800a6e2 <_ZNSt8__detail9__variant5__getILj4ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 801c054:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 801c056:	6838      	ldr	r0, [r7, #0]
 801c058:	f7ff fc7f 	bl	801b95a <_ZSt7forwardIP8VariableEOT_RNSt16remove_referenceIS2_E4typeE>
 801c05c:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 801c05e:	681c      	ldr	r4, [r3, #0]
 801c060:	68f8      	ldr	r0, [r7, #12]
 801c062:	f000 fd76 	bl	801cb52 <_ZSt9addressofIP8VariableEPT_RS2_>
 801c066:	4603      	mov	r3, r0
 801c068:	4619      	mov	r1, r3
 801c06a:	2004      	movs	r0, #4
 801c06c:	f7e4 fff5 	bl	800105a <_ZnwjPv>
 801c070:	4603      	mov	r3, r0
 801c072:	601c      	str	r4, [r3, #0]
    }
 801c074:	bf00      	nop
 801c076:	3714      	adds	r7, #20
 801c078:	46bd      	mov	sp, r7
 801c07a:	bd90      	pop	{r4, r7, pc}

0801c07c <_ZSt28__variant_construct_by_indexILj0ESt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEJbEEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 801c07c:	b590      	push	{r4, r7, lr}
 801c07e:	b085      	sub	sp, #20
 801c080:	af00      	add	r7, sp, #0
 801c082:	6078      	str	r0, [r7, #4]
 801c084:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 801c086:	687b      	ldr	r3, [r7, #4]
 801c088:	2200      	movs	r2, #0
 801c08a:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 801c08c:	6878      	ldr	r0, [r7, #4]
 801c08e:	f7ee fe75 	bl	800ad7c <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 801c092:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 801c094:	6838      	ldr	r0, [r7, #0]
 801c096:	f7eb fe07 	bl	8007ca8 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
 801c09a:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 801c09c:	781c      	ldrb	r4, [r3, #0]
 801c09e:	68f8      	ldr	r0, [r7, #12]
 801c0a0:	f7ec fb8c 	bl	80087bc <_ZSt9addressofIbEPT_RS0_>
 801c0a4:	4603      	mov	r3, r0
 801c0a6:	4619      	mov	r1, r3
 801c0a8:	2001      	movs	r0, #1
 801c0aa:	f7e4 ffd6 	bl	800105a <_ZnwjPv>
 801c0ae:	4603      	mov	r3, r0
 801c0b0:	4622      	mov	r2, r4
 801c0b2:	701a      	strb	r2, [r3, #0]
    }
 801c0b4:	bf00      	nop
 801c0b6:	3714      	adds	r7, #20
 801c0b8:	46bd      	mov	sp, r7
 801c0ba:	bd90      	pop	{r4, r7, pc}

0801c0bc <_ZSt28__variant_construct_by_indexILj1ESt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEJRiEEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 801c0bc:	b590      	push	{r4, r7, lr}
 801c0be:	b085      	sub	sp, #20
 801c0c0:	af00      	add	r7, sp, #0
 801c0c2:	6078      	str	r0, [r7, #4]
 801c0c4:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 801c0c6:	687b      	ldr	r3, [r7, #4]
 801c0c8:	2201      	movs	r2, #1
 801c0ca:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 801c0cc:	6878      	ldr	r0, [r7, #4]
 801c0ce:	f7ee fedf 	bl	800ae90 <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 801c0d2:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 801c0d4:	6838      	ldr	r0, [r7, #0]
 801c0d6:	f7e8 fdb9 	bl	8004c4c <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 801c0da:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 801c0dc:	681c      	ldr	r4, [r3, #0]
 801c0de:	68f8      	ldr	r0, [r7, #12]
 801c0e0:	f7ec fb54 	bl	800878c <_ZSt9addressofIiEPT_RS0_>
 801c0e4:	4603      	mov	r3, r0
 801c0e6:	4619      	mov	r1, r3
 801c0e8:	2004      	movs	r0, #4
 801c0ea:	f7e4 ffb6 	bl	800105a <_ZnwjPv>
 801c0ee:	4603      	mov	r3, r0
 801c0f0:	601c      	str	r4, [r3, #0]
    }
 801c0f2:	bf00      	nop
 801c0f4:	3714      	adds	r7, #20
 801c0f6:	46bd      	mov	sp, r7
 801c0f8:	bd90      	pop	{r4, r7, pc}

0801c0fa <_ZSt28__variant_construct_by_indexILj2ESt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEJRfEEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 801c0fa:	b590      	push	{r4, r7, lr}
 801c0fc:	b085      	sub	sp, #20
 801c0fe:	af00      	add	r7, sp, #0
 801c100:	6078      	str	r0, [r7, #4]
 801c102:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 801c104:	687b      	ldr	r3, [r7, #4]
 801c106:	2202      	movs	r2, #2
 801c108:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 801c10a:	6878      	ldr	r0, [r7, #4]
 801c10c:	f7ee ff5c 	bl	800afc8 <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 801c110:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 801c112:	6838      	ldr	r0, [r7, #0]
 801c114:	f7e8 fdce 	bl	8004cb4 <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 801c118:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 801c11a:	681c      	ldr	r4, [r3, #0]
 801c11c:	68f8      	ldr	r0, [r7, #12]
 801c11e:	f7ec fb41 	bl	80087a4 <_ZSt9addressofIfEPT_RS0_>
 801c122:	4603      	mov	r3, r0
 801c124:	4619      	mov	r1, r3
 801c126:	2004      	movs	r0, #4
 801c128:	f7e4 ff97 	bl	800105a <_ZnwjPv>
 801c12c:	4603      	mov	r3, r0
 801c12e:	601c      	str	r4, [r3, #0]
    }
 801c130:	bf00      	nop
 801c132:	3714      	adds	r7, #20
 801c134:	46bd      	mov	sp, r7
 801c136:	bd90      	pop	{r4, r7, pc}

0801c138 <_ZSt28__variant_construct_by_indexILj3ESt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEJS6_EEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 801c138:	b590      	push	{r4, r7, lr}
 801c13a:	b085      	sub	sp, #20
 801c13c:	af00      	add	r7, sp, #0
 801c13e:	6078      	str	r0, [r7, #4]
 801c140:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 801c142:	687b      	ldr	r3, [r7, #4]
 801c144:	2203      	movs	r2, #3
 801c146:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 801c148:	6878      	ldr	r0, [r7, #4]
 801c14a:	f7ee ffeb 	bl	800b124 <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 801c14e:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 801c150:	6838      	ldr	r0, [r7, #0]
 801c152:	f7eb fdf1 	bl	8007d38 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 801c156:	4604      	mov	r4, r0
      ::new ((void*)std::addressof(__storage))
 801c158:	68f8      	ldr	r0, [r7, #12]
 801c15a:	f7ec fb3b 	bl	80087d4 <_ZSt9addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_>
 801c15e:	4603      	mov	r3, r0
 801c160:	4619      	mov	r1, r3
 801c162:	2018      	movs	r0, #24
 801c164:	f7e4 ff79 	bl	800105a <_ZnwjPv>
 801c168:	4603      	mov	r3, r0
 801c16a:	4621      	mov	r1, r4
 801c16c:	4618      	mov	r0, r3
 801c16e:	f007 fc4a 	bl	8023a06 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_>
    }
 801c172:	bf00      	nop
 801c174:	3714      	adds	r7, #20
 801c176:	46bd      	mov	sp, r7
 801c178:	bd90      	pop	{r4, r7, pc}

0801c17a <_ZNSt8__detail9__variant16_Variant_storageILb1EJP17Primal_expressionP10ExpressionEE8_M_resetEv>:
      void _M_reset()
 801c17a:	b480      	push	{r7}
 801c17c:	b083      	sub	sp, #12
 801c17e:	af00      	add	r7, sp, #0
 801c180:	6078      	str	r0, [r7, #4]
      { _M_index = variant_npos; }
 801c182:	687b      	ldr	r3, [r7, #4]
 801c184:	22ff      	movs	r2, #255	; 0xff
 801c186:	711a      	strb	r2, [r3, #4]
 801c188:	bf00      	nop
 801c18a:	370c      	adds	r7, #12
 801c18c:	46bd      	mov	sp, r7
 801c18e:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c192:	4770      	bx	lr

0801c194 <_ZSt28__variant_construct_by_indexILj1ESt7variantIJP17Primal_expressionP10ExpressionEEJS4_EEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 801c194:	b590      	push	{r4, r7, lr}
 801c196:	b085      	sub	sp, #20
 801c198:	af00      	add	r7, sp, #0
 801c19a:	6078      	str	r0, [r7, #4]
 801c19c:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 801c19e:	687b      	ldr	r3, [r7, #4]
 801c1a0:	2201      	movs	r2, #1
 801c1a2:	711a      	strb	r2, [r3, #4]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 801c1a4:	6878      	ldr	r0, [r7, #4]
 801c1a6:	f7ee fb84 	bl	800a8b2 <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJP17Primal_expressionP10ExpressionEEEEDcOT0_>
 801c1aa:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 801c1ac:	6838      	ldr	r0, [r7, #0]
 801c1ae:	f7f8 ff51 	bl	8015054 <_ZSt7forwardIP10ExpressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801c1b2:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 801c1b4:	681c      	ldr	r4, [r3, #0]
 801c1b6:	68f8      	ldr	r0, [r7, #12]
 801c1b8:	f000 fcd7 	bl	801cb6a <_ZSt9addressofIP10ExpressionEPT_RS2_>
 801c1bc:	4603      	mov	r3, r0
 801c1be:	4619      	mov	r1, r3
 801c1c0:	2004      	movs	r0, #4
 801c1c2:	f7e4 ff4a 	bl	800105a <_ZnwjPv>
 801c1c6:	4603      	mov	r3, r0
 801c1c8:	601c      	str	r4, [r3, #0]
    }
 801c1ca:	bf00      	nop
 801c1cc:	3714      	adds	r7, #20
 801c1ce:	46bd      	mov	sp, r7
 801c1d0:	bd90      	pop	{r4, r7, pc}

0801c1d2 <_ZSt28__variant_construct_by_indexILj0ESt7variantIJP17Primal_expressionP10ExpressionEEJS2_EEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 801c1d2:	b590      	push	{r4, r7, lr}
 801c1d4:	b085      	sub	sp, #20
 801c1d6:	af00      	add	r7, sp, #0
 801c1d8:	6078      	str	r0, [r7, #4]
 801c1da:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 801c1dc:	687b      	ldr	r3, [r7, #4]
 801c1de:	2200      	movs	r2, #0
 801c1e0:	711a      	strb	r2, [r3, #4]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 801c1e2:	6878      	ldr	r0, [r7, #4]
 801c1e4:	f7ee fba3 	bl	800a92e <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJP17Primal_expressionP10ExpressionEEEEDcOT0_>
 801c1e8:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 801c1ea:	6838      	ldr	r0, [r7, #0]
 801c1ec:	f7ff fcb6 	bl	801bb5c <_ZSt7forwardIP17Primal_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801c1f0:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 801c1f2:	681c      	ldr	r4, [r3, #0]
 801c1f4:	68f8      	ldr	r0, [r7, #12]
 801c1f6:	f000 fcc4 	bl	801cb82 <_ZSt9addressofIP17Primal_expressionEPT_RS2_>
 801c1fa:	4603      	mov	r3, r0
 801c1fc:	4619      	mov	r1, r3
 801c1fe:	2004      	movs	r0, #4
 801c200:	f7e4 ff2b 	bl	800105a <_ZnwjPv>
 801c204:	4603      	mov	r3, r0
 801c206:	601c      	str	r4, [r3, #0]
    }
 801c208:	bf00      	nop
 801c20a:	3714      	adds	r7, #20
 801c20c:	46bd      	mov	sp, r7
 801c20e:	bd90      	pop	{r4, r7, pc}

0801c210 <_ZSt7forwardI13mult_operatorEOT_RNSt16remove_referenceIS1_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801c210:	b480      	push	{r7}
 801c212:	b083      	sub	sp, #12
 801c214:	af00      	add	r7, sp, #0
 801c216:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801c218:	687b      	ldr	r3, [r7, #4]
 801c21a:	4618      	mov	r0, r3
 801c21c:	370c      	adds	r7, #12
 801c21e:	46bd      	mov	sp, r7
 801c220:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c224:	4770      	bx	lr

0801c226 <_ZNSt16allocator_traitsISaI13mult_operatorEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 801c226:	b580      	push	{r7, lr}
 801c228:	b084      	sub	sp, #16
 801c22a:	af00      	add	r7, sp, #0
 801c22c:	60f8      	str	r0, [r7, #12]
 801c22e:	60b9      	str	r1, [r7, #8]
 801c230:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 801c232:	6878      	ldr	r0, [r7, #4]
 801c234:	f7ff ffec 	bl	801c210 <_ZSt7forwardI13mult_operatorEOT_RNSt16remove_referenceIS1_E4typeE>
 801c238:	4603      	mov	r3, r0
 801c23a:	461a      	mov	r2, r3
 801c23c:	68b9      	ldr	r1, [r7, #8]
 801c23e:	68f8      	ldr	r0, [r7, #12]
 801c240:	f000 fcab 	bl	801cb9a <_ZN9__gnu_cxx13new_allocatorI13mult_operatorE9constructIS1_JS1_EEEvPT_DpOT0_>
 801c244:	bf00      	nop
 801c246:	3710      	adds	r7, #16
 801c248:	46bd      	mov	sp, r7
 801c24a:	bd80      	pop	{r7, pc}

0801c24c <_ZNSt6vectorI13mult_operatorSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 801c24c:	b580      	push	{r7, lr}
 801c24e:	b084      	sub	sp, #16
 801c250:	af00      	add	r7, sp, #0
 801c252:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_finish); }
 801c254:	687b      	ldr	r3, [r7, #4]
 801c256:	1d1a      	adds	r2, r3, #4
 801c258:	f107 030c 	add.w	r3, r7, #12
 801c25c:	4611      	mov	r1, r2
 801c25e:	4618      	mov	r0, r3
 801c260:	f000 fcb2 	bl	801cbc8 <_ZN9__gnu_cxx17__normal_iteratorIP13mult_operatorSt6vectorIS1_SaIS1_EEEC1ERKS2_>
 801c264:	68fb      	ldr	r3, [r7, #12]
 801c266:	4618      	mov	r0, r3
 801c268:	3710      	adds	r7, #16
 801c26a:	46bd      	mov	sp, r7
 801c26c:	bd80      	pop	{r7, pc}
	...

0801c270 <_ZNSt6vectorI13mult_operatorSaIS0_EE17_M_realloc_insertIJS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_>:
      vector<_Tp, _Alloc>::
 801c270:	b5b0      	push	{r4, r5, r7, lr}
 801c272:	b08c      	sub	sp, #48	; 0x30
 801c274:	af00      	add	r7, sp, #0
 801c276:	60f8      	str	r0, [r7, #12]
 801c278:	60b9      	str	r1, [r7, #8]
 801c27a:	607a      	str	r2, [r7, #4]
      const size_type __len =
 801c27c:	4a38      	ldr	r2, [pc, #224]	; (801c360 <_ZNSt6vectorI13mult_operatorSaIS0_EE17_M_realloc_insertIJS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_+0xf0>)
 801c27e:	2101      	movs	r1, #1
 801c280:	68f8      	ldr	r0, [r7, #12]
 801c282:	f000 fcb1 	bl	801cbe8 <_ZNKSt6vectorI13mult_operatorSaIS0_EE12_M_check_lenEjPKc>
 801c286:	62f8      	str	r0, [r7, #44]	; 0x2c
      pointer __old_start = this->_M_impl._M_start;
 801c288:	68fb      	ldr	r3, [r7, #12]
 801c28a:	681b      	ldr	r3, [r3, #0]
 801c28c:	62bb      	str	r3, [r7, #40]	; 0x28
      pointer __old_finish = this->_M_impl._M_finish;
 801c28e:	68fb      	ldr	r3, [r7, #12]
 801c290:	685b      	ldr	r3, [r3, #4]
 801c292:	627b      	str	r3, [r7, #36]	; 0x24
      const size_type __elems_before = __position - begin();
 801c294:	68f8      	ldr	r0, [r7, #12]
 801c296:	f000 fcee 	bl	801cc76 <_ZNSt6vectorI13mult_operatorSaIS0_EE5beginEv>
 801c29a:	4603      	mov	r3, r0
 801c29c:	617b      	str	r3, [r7, #20]
 801c29e:	f107 0214 	add.w	r2, r7, #20
 801c2a2:	f107 0308 	add.w	r3, r7, #8
 801c2a6:	4611      	mov	r1, r2
 801c2a8:	4618      	mov	r0, r3
 801c2aa:	f000 fcf4 	bl	801cc96 <_ZN9__gnu_cxxmiIP13mult_operatorSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_>
 801c2ae:	4603      	mov	r3, r0
 801c2b0:	623b      	str	r3, [r7, #32]
      pointer __new_start(this->_M_allocate(__len));
 801c2b2:	68fb      	ldr	r3, [r7, #12]
 801c2b4:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 801c2b6:	4618      	mov	r0, r3
 801c2b8:	f000 fd01 	bl	801ccbe <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE11_M_allocateEj>
 801c2bc:	61f8      	str	r0, [r7, #28]
      pointer __new_finish(__new_start);
 801c2be:	69fb      	ldr	r3, [r7, #28]
 801c2c0:	61bb      	str	r3, [r7, #24]
	  _Alloc_traits::construct(this->_M_impl,
 801c2c2:	68fc      	ldr	r4, [r7, #12]
 801c2c4:	69fa      	ldr	r2, [r7, #28]
 801c2c6:	6a3b      	ldr	r3, [r7, #32]
 801c2c8:	18d5      	adds	r5, r2, r3
 801c2ca:	6878      	ldr	r0, [r7, #4]
 801c2cc:	f7ff ffa0 	bl	801c210 <_ZSt7forwardI13mult_operatorEOT_RNSt16remove_referenceIS1_E4typeE>
 801c2d0:	4603      	mov	r3, r0
 801c2d2:	461a      	mov	r2, r3
 801c2d4:	4629      	mov	r1, r5
 801c2d6:	4620      	mov	r0, r4
 801c2d8:	f7ff ffa5 	bl	801c226 <_ZNSt16allocator_traitsISaI13mult_operatorEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_>
	  __new_finish = pointer();
 801c2dc:	2300      	movs	r3, #0
 801c2de:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__old_start, __position.base(),
 801c2e0:	f107 0308 	add.w	r3, r7, #8
 801c2e4:	4618      	mov	r0, r3
 801c2e6:	f000 fd12 	bl	801cd0e <_ZNK9__gnu_cxx17__normal_iteratorIP13mult_operatorSt6vectorIS1_SaIS1_EEE4baseEv>
 801c2ea:	4603      	mov	r3, r0
 801c2ec:	681c      	ldr	r4, [r3, #0]
					 __new_start, _M_get_Tp_allocator());
 801c2ee:	68fb      	ldr	r3, [r7, #12]
 801c2f0:	4618      	mov	r0, r3
 801c2f2:	f7ee fbab 	bl	800aa4c <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE19_M_get_Tp_allocatorEv>
 801c2f6:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__old_start, __position.base(),
 801c2f8:	69fa      	ldr	r2, [r7, #28]
 801c2fa:	4621      	mov	r1, r4
 801c2fc:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 801c2fe:	f000 fcf2 	bl	801cce6 <_ZNSt6vectorI13mult_operatorSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_>
 801c302:	61b8      	str	r0, [r7, #24]
	      ++__new_finish;
 801c304:	69bb      	ldr	r3, [r7, #24]
 801c306:	3301      	adds	r3, #1
 801c308:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 801c30a:	f107 0308 	add.w	r3, r7, #8
 801c30e:	4618      	mov	r0, r3
 801c310:	f000 fcfd 	bl	801cd0e <_ZNK9__gnu_cxx17__normal_iteratorIP13mult_operatorSt6vectorIS1_SaIS1_EEE4baseEv>
 801c314:	4603      	mov	r3, r0
 801c316:	681c      	ldr	r4, [r3, #0]
					 __new_finish, _M_get_Tp_allocator());
 801c318:	68fb      	ldr	r3, [r7, #12]
 801c31a:	4618      	mov	r0, r3
 801c31c:	f7ee fb96 	bl	800aa4c <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE19_M_get_Tp_allocatorEv>
 801c320:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 801c322:	69ba      	ldr	r2, [r7, #24]
 801c324:	6a79      	ldr	r1, [r7, #36]	; 0x24
 801c326:	4620      	mov	r0, r4
 801c328:	f000 fcdd 	bl	801cce6 <_ZNSt6vectorI13mult_operatorSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_>
 801c32c:	61b8      	str	r0, [r7, #24]
      _M_deallocate(__old_start,
 801c32e:	68f8      	ldr	r0, [r7, #12]
		    this->_M_impl._M_end_of_storage - __old_start);
 801c330:	68fb      	ldr	r3, [r7, #12]
 801c332:	689a      	ldr	r2, [r3, #8]
 801c334:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801c336:	1ad3      	subs	r3, r2, r3
      _M_deallocate(__old_start,
 801c338:	461a      	mov	r2, r3
 801c33a:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 801c33c:	f7ef f915 	bl	800b56a <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE13_M_deallocateEPS0_j>
      this->_M_impl._M_start = __new_start;
 801c340:	68fb      	ldr	r3, [r7, #12]
 801c342:	69fa      	ldr	r2, [r7, #28]
 801c344:	601a      	str	r2, [r3, #0]
      this->_M_impl._M_finish = __new_finish;
 801c346:	68fb      	ldr	r3, [r7, #12]
 801c348:	69ba      	ldr	r2, [r7, #24]
 801c34a:	605a      	str	r2, [r3, #4]
      this->_M_impl._M_end_of_storage = __new_start + __len;
 801c34c:	69fa      	ldr	r2, [r7, #28]
 801c34e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801c350:	441a      	add	r2, r3
 801c352:	68fb      	ldr	r3, [r7, #12]
 801c354:	609a      	str	r2, [r3, #8]
    }
 801c356:	bf00      	nop
 801c358:	3730      	adds	r7, #48	; 0x30
 801c35a:	46bd      	mov	sp, r7
 801c35c:	bdb0      	pop	{r4, r5, r7, pc}
 801c35e:	bf00      	nop
 801c360:	08029f0c 	.word	0x08029f0c

0801c364 <_ZNSt6vectorI13mult_operatorSaIS0_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
 801c364:	b580      	push	{r7, lr}
 801c366:	b084      	sub	sp, #16
 801c368:	af00      	add	r7, sp, #0
 801c36a:	6078      	str	r0, [r7, #4]
	return *(end() - 1);
 801c36c:	6878      	ldr	r0, [r7, #4]
 801c36e:	f7ff ff6d 	bl	801c24c <_ZNSt6vectorI13mult_operatorSaIS0_EE3endEv>
 801c372:	4603      	mov	r3, r0
 801c374:	60fb      	str	r3, [r7, #12]
 801c376:	f107 030c 	add.w	r3, r7, #12
 801c37a:	2101      	movs	r1, #1
 801c37c:	4618      	mov	r0, r3
 801c37e:	f000 fcd1 	bl	801cd24 <_ZNK9__gnu_cxx17__normal_iteratorIP13mult_operatorSt6vectorIS1_SaIS1_EEEmiEi>
 801c382:	4603      	mov	r3, r0
 801c384:	60bb      	str	r3, [r7, #8]
 801c386:	f107 0308 	add.w	r3, r7, #8
 801c38a:	4618      	mov	r0, r3
 801c38c:	f000 fce2 	bl	801cd54 <_ZNK9__gnu_cxx17__normal_iteratorIP13mult_operatorSt6vectorIS1_SaIS1_EEEdeEv>
 801c390:	4603      	mov	r3, r0
      }
 801c392:	4618      	mov	r0, r3
 801c394:	3710      	adds	r7, #16
 801c396:	46bd      	mov	sp, r7
 801c398:	bd80      	pop	{r7, pc}

0801c39a <_ZN9__gnu_cxx13new_allocatorIP16Power_expressionEC1Ev>:
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 801c39a:	b480      	push	{r7}
 801c39c:	b083      	sub	sp, #12
 801c39e:	af00      	add	r7, sp, #0
 801c3a0:	6078      	str	r0, [r7, #4]
 801c3a2:	687b      	ldr	r3, [r7, #4]
 801c3a4:	4618      	mov	r0, r3
 801c3a6:	370c      	adds	r7, #12
 801c3a8:	46bd      	mov	sp, r7
 801c3aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c3ae:	4770      	bx	lr

0801c3b0 <_ZN9__gnu_cxx13new_allocatorI13mult_operatorEC1Ev>:
 801c3b0:	b480      	push	{r7}
 801c3b2:	b083      	sub	sp, #12
 801c3b4:	af00      	add	r7, sp, #0
 801c3b6:	6078      	str	r0, [r7, #4]
 801c3b8:	687b      	ldr	r3, [r7, #4]
 801c3ba:	4618      	mov	r0, r3
 801c3bc:	370c      	adds	r7, #12
 801c3be:	46bd      	mov	sp, r7
 801c3c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c3c4:	4770      	bx	lr

0801c3c6 <_ZSt7forwardIP16Power_expressionEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801c3c6:	b480      	push	{r7}
 801c3c8:	b083      	sub	sp, #12
 801c3ca:	af00      	add	r7, sp, #0
 801c3cc:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801c3ce:	687b      	ldr	r3, [r7, #4]
 801c3d0:	4618      	mov	r0, r3
 801c3d2:	370c      	adds	r7, #12
 801c3d4:	46bd      	mov	sp, r7
 801c3d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c3da:	4770      	bx	lr

0801c3dc <_ZNSt16allocator_traitsISaIP16Power_expressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 801c3dc:	b580      	push	{r7, lr}
 801c3de:	b084      	sub	sp, #16
 801c3e0:	af00      	add	r7, sp, #0
 801c3e2:	60f8      	str	r0, [r7, #12]
 801c3e4:	60b9      	str	r1, [r7, #8]
 801c3e6:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 801c3e8:	6878      	ldr	r0, [r7, #4]
 801c3ea:	f7ff ffec 	bl	801c3c6 <_ZSt7forwardIP16Power_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801c3ee:	4603      	mov	r3, r0
 801c3f0:	461a      	mov	r2, r3
 801c3f2:	68b9      	ldr	r1, [r7, #8]
 801c3f4:	68f8      	ldr	r0, [r7, #12]
 801c3f6:	f000 fcb9 	bl	801cd6c <_ZN9__gnu_cxx13new_allocatorIP16Power_expressionE9constructIS2_JS2_EEEvPT_DpOT0_>
 801c3fa:	bf00      	nop
 801c3fc:	3710      	adds	r7, #16
 801c3fe:	46bd      	mov	sp, r7
 801c400:	bd80      	pop	{r7, pc}
	...

0801c404 <_ZNSt6vectorIP16Power_expressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
      vector<_Tp, _Alloc>::
 801c404:	b5b0      	push	{r4, r5, r7, lr}
 801c406:	b08c      	sub	sp, #48	; 0x30
 801c408:	af00      	add	r7, sp, #0
 801c40a:	60f8      	str	r0, [r7, #12]
 801c40c:	60b9      	str	r1, [r7, #8]
 801c40e:	607a      	str	r2, [r7, #4]
      const size_type __len =
 801c410:	4a39      	ldr	r2, [pc, #228]	; (801c4f8 <_ZNSt6vectorIP16Power_expressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xf4>)
 801c412:	2101      	movs	r1, #1
 801c414:	68f8      	ldr	r0, [r7, #12]
 801c416:	f000 fcbf 	bl	801cd98 <_ZNKSt6vectorIP16Power_expressionSaIS1_EE12_M_check_lenEjPKc>
 801c41a:	62f8      	str	r0, [r7, #44]	; 0x2c
      pointer __old_start = this->_M_impl._M_start;
 801c41c:	68fb      	ldr	r3, [r7, #12]
 801c41e:	681b      	ldr	r3, [r3, #0]
 801c420:	62bb      	str	r3, [r7, #40]	; 0x28
      pointer __old_finish = this->_M_impl._M_finish;
 801c422:	68fb      	ldr	r3, [r7, #12]
 801c424:	685b      	ldr	r3, [r3, #4]
 801c426:	627b      	str	r3, [r7, #36]	; 0x24
      const size_type __elems_before = __position - begin();
 801c428:	68f8      	ldr	r0, [r7, #12]
 801c42a:	f7ed ff33 	bl	800a294 <_ZNSt6vectorIP16Power_expressionSaIS1_EE5beginEv>
 801c42e:	4603      	mov	r3, r0
 801c430:	617b      	str	r3, [r7, #20]
 801c432:	f107 0214 	add.w	r2, r7, #20
 801c436:	f107 0308 	add.w	r3, r7, #8
 801c43a:	4611      	mov	r1, r2
 801c43c:	4618      	mov	r0, r3
 801c43e:	f000 fcf2 	bl	801ce26 <_ZN9__gnu_cxxmiIPP16Power_expressionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
 801c442:	4603      	mov	r3, r0
 801c444:	623b      	str	r3, [r7, #32]
      pointer __new_start(this->_M_allocate(__len));
 801c446:	68fb      	ldr	r3, [r7, #12]
 801c448:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 801c44a:	4618      	mov	r0, r3
 801c44c:	f000 fd00 	bl	801ce50 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE11_M_allocateEj>
 801c450:	61f8      	str	r0, [r7, #28]
      pointer __new_finish(__new_start);
 801c452:	69fb      	ldr	r3, [r7, #28]
 801c454:	61bb      	str	r3, [r7, #24]
	  _Alloc_traits::construct(this->_M_impl,
 801c456:	68fc      	ldr	r4, [r7, #12]
				   __new_start + __elems_before,
 801c458:	6a3b      	ldr	r3, [r7, #32]
 801c45a:	009b      	lsls	r3, r3, #2
	  _Alloc_traits::construct(this->_M_impl,
 801c45c:	69fa      	ldr	r2, [r7, #28]
 801c45e:	18d5      	adds	r5, r2, r3
 801c460:	6878      	ldr	r0, [r7, #4]
 801c462:	f7ff ffb0 	bl	801c3c6 <_ZSt7forwardIP16Power_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801c466:	4603      	mov	r3, r0
 801c468:	461a      	mov	r2, r3
 801c46a:	4629      	mov	r1, r5
 801c46c:	4620      	mov	r0, r4
 801c46e:	f7ff ffb5 	bl	801c3dc <_ZNSt16allocator_traitsISaIP16Power_expressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	  __new_finish = pointer();
 801c472:	2300      	movs	r3, #0
 801c474:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__old_start, __position.base(),
 801c476:	f107 0308 	add.w	r3, r7, #8
 801c47a:	4618      	mov	r0, r3
 801c47c:	f7ee fb0f 	bl	800aa9e <_ZNK9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801c480:	4603      	mov	r3, r0
 801c482:	681c      	ldr	r4, [r3, #0]
					 __new_start, _M_get_Tp_allocator());
 801c484:	68fb      	ldr	r3, [r7, #12]
 801c486:	4618      	mov	r0, r3
 801c488:	f7ee faa3 	bl	800a9d2 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 801c48c:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__old_start, __position.base(),
 801c48e:	69fa      	ldr	r2, [r7, #28]
 801c490:	4621      	mov	r1, r4
 801c492:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 801c494:	f000 fcf0 	bl	801ce78 <_ZNSt6vectorIP16Power_expressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 801c498:	61b8      	str	r0, [r7, #24]
	      ++__new_finish;
 801c49a:	69bb      	ldr	r3, [r7, #24]
 801c49c:	3304      	adds	r3, #4
 801c49e:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 801c4a0:	f107 0308 	add.w	r3, r7, #8
 801c4a4:	4618      	mov	r0, r3
 801c4a6:	f7ee fafa 	bl	800aa9e <_ZNK9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801c4aa:	4603      	mov	r3, r0
 801c4ac:	681c      	ldr	r4, [r3, #0]
					 __new_finish, _M_get_Tp_allocator());
 801c4ae:	68fb      	ldr	r3, [r7, #12]
 801c4b0:	4618      	mov	r0, r3
 801c4b2:	f7ee fa8e 	bl	800a9d2 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 801c4b6:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 801c4b8:	69ba      	ldr	r2, [r7, #24]
 801c4ba:	6a79      	ldr	r1, [r7, #36]	; 0x24
 801c4bc:	4620      	mov	r0, r4
 801c4be:	f000 fcdb 	bl	801ce78 <_ZNSt6vectorIP16Power_expressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 801c4c2:	61b8      	str	r0, [r7, #24]
      _M_deallocate(__old_start,
 801c4c4:	68f8      	ldr	r0, [r7, #12]
		    this->_M_impl._M_end_of_storage - __old_start);
 801c4c6:	68fb      	ldr	r3, [r7, #12]
 801c4c8:	689a      	ldr	r2, [r3, #8]
 801c4ca:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801c4cc:	1ad3      	subs	r3, r2, r3
 801c4ce:	109b      	asrs	r3, r3, #2
      _M_deallocate(__old_start,
 801c4d0:	461a      	mov	r2, r3
 801c4d2:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 801c4d4:	f7ef f81d 	bl	800b512 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE13_M_deallocateEPS1_j>
      this->_M_impl._M_start = __new_start;
 801c4d8:	68fb      	ldr	r3, [r7, #12]
 801c4da:	69fa      	ldr	r2, [r7, #28]
 801c4dc:	601a      	str	r2, [r3, #0]
      this->_M_impl._M_finish = __new_finish;
 801c4de:	68fb      	ldr	r3, [r7, #12]
 801c4e0:	69ba      	ldr	r2, [r7, #24]
 801c4e2:	605a      	str	r2, [r3, #4]
      this->_M_impl._M_end_of_storage = __new_start + __len;
 801c4e4:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801c4e6:	009b      	lsls	r3, r3, #2
 801c4e8:	69fa      	ldr	r2, [r7, #28]
 801c4ea:	441a      	add	r2, r3
 801c4ec:	68fb      	ldr	r3, [r7, #12]
 801c4ee:	609a      	str	r2, [r3, #8]
    }
 801c4f0:	bf00      	nop
 801c4f2:	3730      	adds	r7, #48	; 0x30
 801c4f4:	46bd      	mov	sp, r7
 801c4f6:	bdb0      	pop	{r4, r5, r7, pc}
 801c4f8:	08029f0c 	.word	0x08029f0c

0801c4fc <_ZNSt6vectorIP16Power_expressionSaIS1_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
 801c4fc:	b580      	push	{r7, lr}
 801c4fe:	b084      	sub	sp, #16
 801c500:	af00      	add	r7, sp, #0
 801c502:	6078      	str	r0, [r7, #4]
	return *(end() - 1);
 801c504:	6878      	ldr	r0, [r7, #4]
 801c506:	f7ed fed5 	bl	800a2b4 <_ZNSt6vectorIP16Power_expressionSaIS1_EE3endEv>
 801c50a:	4603      	mov	r3, r0
 801c50c:	60fb      	str	r3, [r7, #12]
 801c50e:	f107 030c 	add.w	r3, r7, #12
 801c512:	2101      	movs	r1, #1
 801c514:	4618      	mov	r0, r3
 801c516:	f000 fcc3 	bl	801cea0 <_ZNK9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEEmiEi>
 801c51a:	4603      	mov	r3, r0
 801c51c:	60bb      	str	r3, [r7, #8]
 801c51e:	f107 0308 	add.w	r3, r7, #8
 801c522:	4618      	mov	r0, r3
 801c524:	f7ed feff 	bl	800a326 <_ZNK9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEEdeEv>
 801c528:	4603      	mov	r3, r0
      }
 801c52a:	4618      	mov	r0, r3
 801c52c:	3710      	adds	r7, #16
 801c52e:	46bd      	mov	sp, r7
 801c530:	bd80      	pop	{r7, pc}

0801c532 <_ZSt7forwardI12sum_operatorEOT_RNSt16remove_referenceIS1_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801c532:	b480      	push	{r7}
 801c534:	b083      	sub	sp, #12
 801c536:	af00      	add	r7, sp, #0
 801c538:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801c53a:	687b      	ldr	r3, [r7, #4]
 801c53c:	4618      	mov	r0, r3
 801c53e:	370c      	adds	r7, #12
 801c540:	46bd      	mov	sp, r7
 801c542:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c546:	4770      	bx	lr

0801c548 <_ZNSt16allocator_traitsISaI12sum_operatorEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 801c548:	b580      	push	{r7, lr}
 801c54a:	b084      	sub	sp, #16
 801c54c:	af00      	add	r7, sp, #0
 801c54e:	60f8      	str	r0, [r7, #12]
 801c550:	60b9      	str	r1, [r7, #8]
 801c552:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 801c554:	6878      	ldr	r0, [r7, #4]
 801c556:	f7ff ffec 	bl	801c532 <_ZSt7forwardI12sum_operatorEOT_RNSt16remove_referenceIS1_E4typeE>
 801c55a:	4603      	mov	r3, r0
 801c55c:	461a      	mov	r2, r3
 801c55e:	68b9      	ldr	r1, [r7, #8]
 801c560:	68f8      	ldr	r0, [r7, #12]
 801c562:	f000 fcb6 	bl	801ced2 <_ZN9__gnu_cxx13new_allocatorI12sum_operatorE9constructIS1_JS1_EEEvPT_DpOT0_>
 801c566:	bf00      	nop
 801c568:	3710      	adds	r7, #16
 801c56a:	46bd      	mov	sp, r7
 801c56c:	bd80      	pop	{r7, pc}

0801c56e <_ZNSt6vectorI12sum_operatorSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 801c56e:	b580      	push	{r7, lr}
 801c570:	b084      	sub	sp, #16
 801c572:	af00      	add	r7, sp, #0
 801c574:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_finish); }
 801c576:	687b      	ldr	r3, [r7, #4]
 801c578:	1d1a      	adds	r2, r3, #4
 801c57a:	f107 030c 	add.w	r3, r7, #12
 801c57e:	4611      	mov	r1, r2
 801c580:	4618      	mov	r0, r3
 801c582:	f000 fcbd 	bl	801cf00 <_ZN9__gnu_cxx17__normal_iteratorIP12sum_operatorSt6vectorIS1_SaIS1_EEEC1ERKS2_>
 801c586:	68fb      	ldr	r3, [r7, #12]
 801c588:	4618      	mov	r0, r3
 801c58a:	3710      	adds	r7, #16
 801c58c:	46bd      	mov	sp, r7
 801c58e:	bd80      	pop	{r7, pc}

0801c590 <_ZNSt6vectorI12sum_operatorSaIS0_EE17_M_realloc_insertIJS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_>:
      vector<_Tp, _Alloc>::
 801c590:	b5b0      	push	{r4, r5, r7, lr}
 801c592:	b08c      	sub	sp, #48	; 0x30
 801c594:	af00      	add	r7, sp, #0
 801c596:	60f8      	str	r0, [r7, #12]
 801c598:	60b9      	str	r1, [r7, #8]
 801c59a:	607a      	str	r2, [r7, #4]
      const size_type __len =
 801c59c:	4a38      	ldr	r2, [pc, #224]	; (801c680 <_ZNSt6vectorI12sum_operatorSaIS0_EE17_M_realloc_insertIJS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_+0xf0>)
 801c59e:	2101      	movs	r1, #1
 801c5a0:	68f8      	ldr	r0, [r7, #12]
 801c5a2:	f000 fcbd 	bl	801cf20 <_ZNKSt6vectorI12sum_operatorSaIS0_EE12_M_check_lenEjPKc>
 801c5a6:	62f8      	str	r0, [r7, #44]	; 0x2c
      pointer __old_start = this->_M_impl._M_start;
 801c5a8:	68fb      	ldr	r3, [r7, #12]
 801c5aa:	681b      	ldr	r3, [r3, #0]
 801c5ac:	62bb      	str	r3, [r7, #40]	; 0x28
      pointer __old_finish = this->_M_impl._M_finish;
 801c5ae:	68fb      	ldr	r3, [r7, #12]
 801c5b0:	685b      	ldr	r3, [r3, #4]
 801c5b2:	627b      	str	r3, [r7, #36]	; 0x24
      const size_type __elems_before = __position - begin();
 801c5b4:	68f8      	ldr	r0, [r7, #12]
 801c5b6:	f000 fcfa 	bl	801cfae <_ZNSt6vectorI12sum_operatorSaIS0_EE5beginEv>
 801c5ba:	4603      	mov	r3, r0
 801c5bc:	617b      	str	r3, [r7, #20]
 801c5be:	f107 0214 	add.w	r2, r7, #20
 801c5c2:	f107 0308 	add.w	r3, r7, #8
 801c5c6:	4611      	mov	r1, r2
 801c5c8:	4618      	mov	r0, r3
 801c5ca:	f000 fd00 	bl	801cfce <_ZN9__gnu_cxxmiIP12sum_operatorSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_>
 801c5ce:	4603      	mov	r3, r0
 801c5d0:	623b      	str	r3, [r7, #32]
      pointer __new_start(this->_M_allocate(__len));
 801c5d2:	68fb      	ldr	r3, [r7, #12]
 801c5d4:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 801c5d6:	4618      	mov	r0, r3
 801c5d8:	f000 fd0d 	bl	801cff6 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE11_M_allocateEj>
 801c5dc:	61f8      	str	r0, [r7, #28]
      pointer __new_finish(__new_start);
 801c5de:	69fb      	ldr	r3, [r7, #28]
 801c5e0:	61bb      	str	r3, [r7, #24]
	  _Alloc_traits::construct(this->_M_impl,
 801c5e2:	68fc      	ldr	r4, [r7, #12]
 801c5e4:	69fa      	ldr	r2, [r7, #28]
 801c5e6:	6a3b      	ldr	r3, [r7, #32]
 801c5e8:	18d5      	adds	r5, r2, r3
 801c5ea:	6878      	ldr	r0, [r7, #4]
 801c5ec:	f7ff ffa1 	bl	801c532 <_ZSt7forwardI12sum_operatorEOT_RNSt16remove_referenceIS1_E4typeE>
 801c5f0:	4603      	mov	r3, r0
 801c5f2:	461a      	mov	r2, r3
 801c5f4:	4629      	mov	r1, r5
 801c5f6:	4620      	mov	r0, r4
 801c5f8:	f7ff ffa6 	bl	801c548 <_ZNSt16allocator_traitsISaI12sum_operatorEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_>
	  __new_finish = pointer();
 801c5fc:	2300      	movs	r3, #0
 801c5fe:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__old_start, __position.base(),
 801c600:	f107 0308 	add.w	r3, r7, #8
 801c604:	4618      	mov	r0, r3
 801c606:	f000 fd1e 	bl	801d046 <_ZNK9__gnu_cxx17__normal_iteratorIP12sum_operatorSt6vectorIS1_SaIS1_EEE4baseEv>
 801c60a:	4603      	mov	r3, r0
 801c60c:	681c      	ldr	r4, [r3, #0]
					 __new_start, _M_get_Tp_allocator());
 801c60e:	68fb      	ldr	r3, [r7, #12]
 801c610:	4618      	mov	r0, r3
 801c612:	f7ee fab1 	bl	800ab78 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE19_M_get_Tp_allocatorEv>
 801c616:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__old_start, __position.base(),
 801c618:	69fa      	ldr	r2, [r7, #28]
 801c61a:	4621      	mov	r1, r4
 801c61c:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 801c61e:	f000 fcfe 	bl	801d01e <_ZNSt6vectorI12sum_operatorSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_>
 801c622:	61b8      	str	r0, [r7, #24]
	      ++__new_finish;
 801c624:	69bb      	ldr	r3, [r7, #24]
 801c626:	3301      	adds	r3, #1
 801c628:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 801c62a:	f107 0308 	add.w	r3, r7, #8
 801c62e:	4618      	mov	r0, r3
 801c630:	f000 fd09 	bl	801d046 <_ZNK9__gnu_cxx17__normal_iteratorIP12sum_operatorSt6vectorIS1_SaIS1_EEE4baseEv>
 801c634:	4603      	mov	r3, r0
 801c636:	681c      	ldr	r4, [r3, #0]
					 __new_finish, _M_get_Tp_allocator());
 801c638:	68fb      	ldr	r3, [r7, #12]
 801c63a:	4618      	mov	r0, r3
 801c63c:	f7ee fa9c 	bl	800ab78 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE19_M_get_Tp_allocatorEv>
 801c640:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 801c642:	69ba      	ldr	r2, [r7, #24]
 801c644:	6a79      	ldr	r1, [r7, #36]	; 0x24
 801c646:	4620      	mov	r0, r4
 801c648:	f000 fce9 	bl	801d01e <_ZNSt6vectorI12sum_operatorSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_>
 801c64c:	61b8      	str	r0, [r7, #24]
      _M_deallocate(__old_start,
 801c64e:	68f8      	ldr	r0, [r7, #12]
		    this->_M_impl._M_end_of_storage - __old_start);
 801c650:	68fb      	ldr	r3, [r7, #12]
 801c652:	689a      	ldr	r2, [r3, #8]
 801c654:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801c656:	1ad3      	subs	r3, r2, r3
      _M_deallocate(__old_start,
 801c658:	461a      	mov	r2, r3
 801c65a:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 801c65c:	f7ee ffdd 	bl	800b61a <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE13_M_deallocateEPS0_j>
      this->_M_impl._M_start = __new_start;
 801c660:	68fb      	ldr	r3, [r7, #12]
 801c662:	69fa      	ldr	r2, [r7, #28]
 801c664:	601a      	str	r2, [r3, #0]
      this->_M_impl._M_finish = __new_finish;
 801c666:	68fb      	ldr	r3, [r7, #12]
 801c668:	69ba      	ldr	r2, [r7, #24]
 801c66a:	605a      	str	r2, [r3, #4]
      this->_M_impl._M_end_of_storage = __new_start + __len;
 801c66c:	69fa      	ldr	r2, [r7, #28]
 801c66e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801c670:	441a      	add	r2, r3
 801c672:	68fb      	ldr	r3, [r7, #12]
 801c674:	609a      	str	r2, [r3, #8]
    }
 801c676:	bf00      	nop
 801c678:	3730      	adds	r7, #48	; 0x30
 801c67a:	46bd      	mov	sp, r7
 801c67c:	bdb0      	pop	{r4, r5, r7, pc}
 801c67e:	bf00      	nop
 801c680:	08029f0c 	.word	0x08029f0c

0801c684 <_ZNSt6vectorI12sum_operatorSaIS0_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
 801c684:	b580      	push	{r7, lr}
 801c686:	b084      	sub	sp, #16
 801c688:	af00      	add	r7, sp, #0
 801c68a:	6078      	str	r0, [r7, #4]
	return *(end() - 1);
 801c68c:	6878      	ldr	r0, [r7, #4]
 801c68e:	f7ff ff6e 	bl	801c56e <_ZNSt6vectorI12sum_operatorSaIS0_EE3endEv>
 801c692:	4603      	mov	r3, r0
 801c694:	60fb      	str	r3, [r7, #12]
 801c696:	f107 030c 	add.w	r3, r7, #12
 801c69a:	2101      	movs	r1, #1
 801c69c:	4618      	mov	r0, r3
 801c69e:	f000 fcdd 	bl	801d05c <_ZNK9__gnu_cxx17__normal_iteratorIP12sum_operatorSt6vectorIS1_SaIS1_EEEmiEi>
 801c6a2:	4603      	mov	r3, r0
 801c6a4:	60bb      	str	r3, [r7, #8]
 801c6a6:	f107 0308 	add.w	r3, r7, #8
 801c6aa:	4618      	mov	r0, r3
 801c6ac:	f000 fcee 	bl	801d08c <_ZNK9__gnu_cxx17__normal_iteratorIP12sum_operatorSt6vectorIS1_SaIS1_EEEdeEv>
 801c6b0:	4603      	mov	r3, r0
      }
 801c6b2:	4618      	mov	r0, r3
 801c6b4:	3710      	adds	r7, #16
 801c6b6:	46bd      	mov	sp, r7
 801c6b8:	bd80      	pop	{r7, pc}

0801c6ba <_ZN9__gnu_cxx13new_allocatorIP19Multiply_expressionEC1Ev>:
 801c6ba:	b480      	push	{r7}
 801c6bc:	b083      	sub	sp, #12
 801c6be:	af00      	add	r7, sp, #0
 801c6c0:	6078      	str	r0, [r7, #4]
 801c6c2:	687b      	ldr	r3, [r7, #4]
 801c6c4:	4618      	mov	r0, r3
 801c6c6:	370c      	adds	r7, #12
 801c6c8:	46bd      	mov	sp, r7
 801c6ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c6ce:	4770      	bx	lr

0801c6d0 <_ZN9__gnu_cxx13new_allocatorI12sum_operatorEC1Ev>:
 801c6d0:	b480      	push	{r7}
 801c6d2:	b083      	sub	sp, #12
 801c6d4:	af00      	add	r7, sp, #0
 801c6d6:	6078      	str	r0, [r7, #4]
 801c6d8:	687b      	ldr	r3, [r7, #4]
 801c6da:	4618      	mov	r0, r3
 801c6dc:	370c      	adds	r7, #12
 801c6de:	46bd      	mov	sp, r7
 801c6e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c6e4:	4770      	bx	lr

0801c6e6 <_ZSt7forwardIP19Multiply_expressionEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801c6e6:	b480      	push	{r7}
 801c6e8:	b083      	sub	sp, #12
 801c6ea:	af00      	add	r7, sp, #0
 801c6ec:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801c6ee:	687b      	ldr	r3, [r7, #4]
 801c6f0:	4618      	mov	r0, r3
 801c6f2:	370c      	adds	r7, #12
 801c6f4:	46bd      	mov	sp, r7
 801c6f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c6fa:	4770      	bx	lr

0801c6fc <_ZNSt16allocator_traitsISaIP19Multiply_expressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 801c6fc:	b580      	push	{r7, lr}
 801c6fe:	b084      	sub	sp, #16
 801c700:	af00      	add	r7, sp, #0
 801c702:	60f8      	str	r0, [r7, #12]
 801c704:	60b9      	str	r1, [r7, #8]
 801c706:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 801c708:	6878      	ldr	r0, [r7, #4]
 801c70a:	f7ff ffec 	bl	801c6e6 <_ZSt7forwardIP19Multiply_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801c70e:	4603      	mov	r3, r0
 801c710:	461a      	mov	r2, r3
 801c712:	68b9      	ldr	r1, [r7, #8]
 801c714:	68f8      	ldr	r0, [r7, #12]
 801c716:	f000 fcc5 	bl	801d0a4 <_ZN9__gnu_cxx13new_allocatorIP19Multiply_expressionE9constructIS2_JS2_EEEvPT_DpOT0_>
 801c71a:	bf00      	nop
 801c71c:	3710      	adds	r7, #16
 801c71e:	46bd      	mov	sp, r7
 801c720:	bd80      	pop	{r7, pc}
	...

0801c724 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
      vector<_Tp, _Alloc>::
 801c724:	b5b0      	push	{r4, r5, r7, lr}
 801c726:	b08c      	sub	sp, #48	; 0x30
 801c728:	af00      	add	r7, sp, #0
 801c72a:	60f8      	str	r0, [r7, #12]
 801c72c:	60b9      	str	r1, [r7, #8]
 801c72e:	607a      	str	r2, [r7, #4]
      const size_type __len =
 801c730:	4a39      	ldr	r2, [pc, #228]	; (801c818 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xf4>)
 801c732:	2101      	movs	r1, #1
 801c734:	68f8      	ldr	r0, [r7, #12]
 801c736:	f000 fccb 	bl	801d0d0 <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE12_M_check_lenEjPKc>
 801c73a:	62f8      	str	r0, [r7, #44]	; 0x2c
      pointer __old_start = this->_M_impl._M_start;
 801c73c:	68fb      	ldr	r3, [r7, #12]
 801c73e:	681b      	ldr	r3, [r3, #0]
 801c740:	62bb      	str	r3, [r7, #40]	; 0x28
      pointer __old_finish = this->_M_impl._M_finish;
 801c742:	68fb      	ldr	r3, [r7, #12]
 801c744:	685b      	ldr	r3, [r3, #4]
 801c746:	627b      	str	r3, [r7, #36]	; 0x24
      const size_type __elems_before = __position - begin();
 801c748:	68f8      	ldr	r0, [r7, #12]
 801c74a:	f7ed fe2e 	bl	800a3aa <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE5beginEv>
 801c74e:	4603      	mov	r3, r0
 801c750:	617b      	str	r3, [r7, #20]
 801c752:	f107 0214 	add.w	r2, r7, #20
 801c756:	f107 0308 	add.w	r3, r7, #8
 801c75a:	4611      	mov	r1, r2
 801c75c:	4618      	mov	r0, r3
 801c75e:	f000 fcfe 	bl	801d15e <_ZN9__gnu_cxxmiIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
 801c762:	4603      	mov	r3, r0
 801c764:	623b      	str	r3, [r7, #32]
      pointer __new_start(this->_M_allocate(__len));
 801c766:	68fb      	ldr	r3, [r7, #12]
 801c768:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 801c76a:	4618      	mov	r0, r3
 801c76c:	f000 fd0c 	bl	801d188 <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE11_M_allocateEj>
 801c770:	61f8      	str	r0, [r7, #28]
      pointer __new_finish(__new_start);
 801c772:	69fb      	ldr	r3, [r7, #28]
 801c774:	61bb      	str	r3, [r7, #24]
	  _Alloc_traits::construct(this->_M_impl,
 801c776:	68fc      	ldr	r4, [r7, #12]
				   __new_start + __elems_before,
 801c778:	6a3b      	ldr	r3, [r7, #32]
 801c77a:	009b      	lsls	r3, r3, #2
	  _Alloc_traits::construct(this->_M_impl,
 801c77c:	69fa      	ldr	r2, [r7, #28]
 801c77e:	18d5      	adds	r5, r2, r3
 801c780:	6878      	ldr	r0, [r7, #4]
 801c782:	f7ff ffb0 	bl	801c6e6 <_ZSt7forwardIP19Multiply_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801c786:	4603      	mov	r3, r0
 801c788:	461a      	mov	r2, r3
 801c78a:	4629      	mov	r1, r5
 801c78c:	4620      	mov	r0, r4
 801c78e:	f7ff ffb5 	bl	801c6fc <_ZNSt16allocator_traitsISaIP19Multiply_expressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	  __new_finish = pointer();
 801c792:	2300      	movs	r3, #0
 801c794:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__old_start, __position.base(),
 801c796:	f107 0308 	add.w	r3, r7, #8
 801c79a:	4618      	mov	r0, r3
 801c79c:	f7ee fa15 	bl	800abca <_ZNK9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801c7a0:	4603      	mov	r3, r0
 801c7a2:	681c      	ldr	r4, [r3, #0]
					 __new_start, _M_get_Tp_allocator());
 801c7a4:	68fb      	ldr	r3, [r7, #12]
 801c7a6:	4618      	mov	r0, r3
 801c7a8:	f7ee f9a9 	bl	800aafe <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 801c7ac:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__old_start, __position.base(),
 801c7ae:	69fa      	ldr	r2, [r7, #28]
 801c7b0:	4621      	mov	r1, r4
 801c7b2:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 801c7b4:	f000 fcfc 	bl	801d1b0 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 801c7b8:	61b8      	str	r0, [r7, #24]
	      ++__new_finish;
 801c7ba:	69bb      	ldr	r3, [r7, #24]
 801c7bc:	3304      	adds	r3, #4
 801c7be:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 801c7c0:	f107 0308 	add.w	r3, r7, #8
 801c7c4:	4618      	mov	r0, r3
 801c7c6:	f7ee fa00 	bl	800abca <_ZNK9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801c7ca:	4603      	mov	r3, r0
 801c7cc:	681c      	ldr	r4, [r3, #0]
					 __new_finish, _M_get_Tp_allocator());
 801c7ce:	68fb      	ldr	r3, [r7, #12]
 801c7d0:	4618      	mov	r0, r3
 801c7d2:	f7ee f994 	bl	800aafe <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 801c7d6:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 801c7d8:	69ba      	ldr	r2, [r7, #24]
 801c7da:	6a79      	ldr	r1, [r7, #36]	; 0x24
 801c7dc:	4620      	mov	r0, r4
 801c7de:	f000 fce7 	bl	801d1b0 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 801c7e2:	61b8      	str	r0, [r7, #24]
      _M_deallocate(__old_start,
 801c7e4:	68f8      	ldr	r0, [r7, #12]
		    this->_M_impl._M_end_of_storage - __old_start);
 801c7e6:	68fb      	ldr	r3, [r7, #12]
 801c7e8:	689a      	ldr	r2, [r3, #8]
 801c7ea:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801c7ec:	1ad3      	subs	r3, r2, r3
 801c7ee:	109b      	asrs	r3, r3, #2
      _M_deallocate(__old_start,
 801c7f0:	461a      	mov	r2, r3
 801c7f2:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 801c7f4:	f7ee fee5 	bl	800b5c2 <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE13_M_deallocateEPS1_j>
      this->_M_impl._M_start = __new_start;
 801c7f8:	68fb      	ldr	r3, [r7, #12]
 801c7fa:	69fa      	ldr	r2, [r7, #28]
 801c7fc:	601a      	str	r2, [r3, #0]
      this->_M_impl._M_finish = __new_finish;
 801c7fe:	68fb      	ldr	r3, [r7, #12]
 801c800:	69ba      	ldr	r2, [r7, #24]
 801c802:	605a      	str	r2, [r3, #4]
      this->_M_impl._M_end_of_storage = __new_start + __len;
 801c804:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801c806:	009b      	lsls	r3, r3, #2
 801c808:	69fa      	ldr	r2, [r7, #28]
 801c80a:	441a      	add	r2, r3
 801c80c:	68fb      	ldr	r3, [r7, #12]
 801c80e:	609a      	str	r2, [r3, #8]
    }
 801c810:	bf00      	nop
 801c812:	3730      	adds	r7, #48	; 0x30
 801c814:	46bd      	mov	sp, r7
 801c816:	bdb0      	pop	{r4, r5, r7, pc}
 801c818:	08029f0c 	.word	0x08029f0c

0801c81c <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
 801c81c:	b580      	push	{r7, lr}
 801c81e:	b084      	sub	sp, #16
 801c820:	af00      	add	r7, sp, #0
 801c822:	6078      	str	r0, [r7, #4]
	return *(end() - 1);
 801c824:	6878      	ldr	r0, [r7, #4]
 801c826:	f7ed fdd0 	bl	800a3ca <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE3endEv>
 801c82a:	4603      	mov	r3, r0
 801c82c:	60fb      	str	r3, [r7, #12]
 801c82e:	f107 030c 	add.w	r3, r7, #12
 801c832:	2101      	movs	r1, #1
 801c834:	4618      	mov	r0, r3
 801c836:	f000 fccf 	bl	801d1d8 <_ZNK9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEmiEi>
 801c83a:	4603      	mov	r3, r0
 801c83c:	60bb      	str	r3, [r7, #8]
 801c83e:	f107 0308 	add.w	r3, r7, #8
 801c842:	4618      	mov	r0, r3
 801c844:	f7ed fdfa 	bl	800a43c <_ZNK9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEdeEv>
 801c848:	4603      	mov	r3, r0
      }
 801c84a:	4618      	mov	r0, r3
 801c84c:	3710      	adds	r7, #16
 801c84e:	46bd      	mov	sp, r7
 801c850:	bd80      	pop	{r7, pc}

0801c852 <_ZN9__gnu_cxx13new_allocatorIP18Compare_expressionEC1Ev>:
 801c852:	b480      	push	{r7}
 801c854:	b083      	sub	sp, #12
 801c856:	af00      	add	r7, sp, #0
 801c858:	6078      	str	r0, [r7, #4]
 801c85a:	687b      	ldr	r3, [r7, #4]
 801c85c:	4618      	mov	r0, r3
 801c85e:	370c      	adds	r7, #12
 801c860:	46bd      	mov	sp, r7
 801c862:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c866:	4770      	bx	lr

0801c868 <_ZSt7forwardIP18Compare_expressionEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801c868:	b480      	push	{r7}
 801c86a:	b083      	sub	sp, #12
 801c86c:	af00      	add	r7, sp, #0
 801c86e:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801c870:	687b      	ldr	r3, [r7, #4]
 801c872:	4618      	mov	r0, r3
 801c874:	370c      	adds	r7, #12
 801c876:	46bd      	mov	sp, r7
 801c878:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c87c:	4770      	bx	lr

0801c87e <_ZNSt16allocator_traitsISaIP18Compare_expressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 801c87e:	b580      	push	{r7, lr}
 801c880:	b084      	sub	sp, #16
 801c882:	af00      	add	r7, sp, #0
 801c884:	60f8      	str	r0, [r7, #12]
 801c886:	60b9      	str	r1, [r7, #8]
 801c888:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 801c88a:	6878      	ldr	r0, [r7, #4]
 801c88c:	f7ff ffec 	bl	801c868 <_ZSt7forwardIP18Compare_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801c890:	4603      	mov	r3, r0
 801c892:	461a      	mov	r2, r3
 801c894:	68b9      	ldr	r1, [r7, #8]
 801c896:	68f8      	ldr	r0, [r7, #12]
 801c898:	f000 fcb7 	bl	801d20a <_ZN9__gnu_cxx13new_allocatorIP18Compare_expressionE9constructIS2_JS2_EEEvPT_DpOT0_>
 801c89c:	bf00      	nop
 801c89e:	3710      	adds	r7, #16
 801c8a0:	46bd      	mov	sp, r7
 801c8a2:	bd80      	pop	{r7, pc}

0801c8a4 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
      vector<_Tp, _Alloc>::
 801c8a4:	b5b0      	push	{r4, r5, r7, lr}
 801c8a6:	b08c      	sub	sp, #48	; 0x30
 801c8a8:	af00      	add	r7, sp, #0
 801c8aa:	60f8      	str	r0, [r7, #12]
 801c8ac:	60b9      	str	r1, [r7, #8]
 801c8ae:	607a      	str	r2, [r7, #4]
      const size_type __len =
 801c8b0:	4a39      	ldr	r2, [pc, #228]	; (801c998 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xf4>)
 801c8b2:	2101      	movs	r1, #1
 801c8b4:	68f8      	ldr	r0, [r7, #12]
 801c8b6:	f000 fcbe 	bl	801d236 <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE12_M_check_lenEjPKc>
 801c8ba:	62f8      	str	r0, [r7, #44]	; 0x2c
      pointer __old_start = this->_M_impl._M_start;
 801c8bc:	68fb      	ldr	r3, [r7, #12]
 801c8be:	681b      	ldr	r3, [r3, #0]
 801c8c0:	62bb      	str	r3, [r7, #40]	; 0x28
      pointer __old_finish = this->_M_impl._M_finish;
 801c8c2:	68fb      	ldr	r3, [r7, #12]
 801c8c4:	685b      	ldr	r3, [r3, #4]
 801c8c6:	627b      	str	r3, [r7, #36]	; 0x24
      const size_type __elems_before = __position - begin();
 801c8c8:	68f8      	ldr	r0, [r7, #12]
 801c8ca:	f7ed fdde 	bl	800a48a <_ZNSt6vectorIP18Compare_expressionSaIS1_EE5beginEv>
 801c8ce:	4603      	mov	r3, r0
 801c8d0:	617b      	str	r3, [r7, #20]
 801c8d2:	f107 0214 	add.w	r2, r7, #20
 801c8d6:	f107 0308 	add.w	r3, r7, #8
 801c8da:	4611      	mov	r1, r2
 801c8dc:	4618      	mov	r0, r3
 801c8de:	f000 fcf1 	bl	801d2c4 <_ZN9__gnu_cxxmiIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
 801c8e2:	4603      	mov	r3, r0
 801c8e4:	623b      	str	r3, [r7, #32]
      pointer __new_start(this->_M_allocate(__len));
 801c8e6:	68fb      	ldr	r3, [r7, #12]
 801c8e8:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 801c8ea:	4618      	mov	r0, r3
 801c8ec:	f000 fcff 	bl	801d2ee <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE11_M_allocateEj>
 801c8f0:	61f8      	str	r0, [r7, #28]
      pointer __new_finish(__new_start);
 801c8f2:	69fb      	ldr	r3, [r7, #28]
 801c8f4:	61bb      	str	r3, [r7, #24]
	  _Alloc_traits::construct(this->_M_impl,
 801c8f6:	68fc      	ldr	r4, [r7, #12]
				   __new_start + __elems_before,
 801c8f8:	6a3b      	ldr	r3, [r7, #32]
 801c8fa:	009b      	lsls	r3, r3, #2
	  _Alloc_traits::construct(this->_M_impl,
 801c8fc:	69fa      	ldr	r2, [r7, #28]
 801c8fe:	18d5      	adds	r5, r2, r3
 801c900:	6878      	ldr	r0, [r7, #4]
 801c902:	f7ff ffb1 	bl	801c868 <_ZSt7forwardIP18Compare_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801c906:	4603      	mov	r3, r0
 801c908:	461a      	mov	r2, r3
 801c90a:	4629      	mov	r1, r5
 801c90c:	4620      	mov	r0, r4
 801c90e:	f7ff ffb6 	bl	801c87e <_ZNSt16allocator_traitsISaIP18Compare_expressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	  __new_finish = pointer();
 801c912:	2300      	movs	r3, #0
 801c914:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__old_start, __position.base(),
 801c916:	f107 0308 	add.w	r3, r7, #8
 801c91a:	4618      	mov	r0, r3
 801c91c:	f7ee f9ae 	bl	800ac7c <_ZNK9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801c920:	4603      	mov	r3, r0
 801c922:	681c      	ldr	r4, [r3, #0]
					 __new_start, _M_get_Tp_allocator());
 801c924:	68fb      	ldr	r3, [r7, #12]
 801c926:	4618      	mov	r0, r3
 801c928:	f7ee f97f 	bl	800ac2a <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 801c92c:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__old_start, __position.base(),
 801c92e:	69fa      	ldr	r2, [r7, #28]
 801c930:	4621      	mov	r1, r4
 801c932:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 801c934:	f000 fcef 	bl	801d316 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 801c938:	61b8      	str	r0, [r7, #24]
	      ++__new_finish;
 801c93a:	69bb      	ldr	r3, [r7, #24]
 801c93c:	3304      	adds	r3, #4
 801c93e:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 801c940:	f107 0308 	add.w	r3, r7, #8
 801c944:	4618      	mov	r0, r3
 801c946:	f7ee f999 	bl	800ac7c <_ZNK9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801c94a:	4603      	mov	r3, r0
 801c94c:	681c      	ldr	r4, [r3, #0]
					 __new_finish, _M_get_Tp_allocator());
 801c94e:	68fb      	ldr	r3, [r7, #12]
 801c950:	4618      	mov	r0, r3
 801c952:	f7ee f96a 	bl	800ac2a <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 801c956:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 801c958:	69ba      	ldr	r2, [r7, #24]
 801c95a:	6a79      	ldr	r1, [r7, #36]	; 0x24
 801c95c:	4620      	mov	r0, r4
 801c95e:	f000 fcda 	bl	801d316 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 801c962:	61b8      	str	r0, [r7, #24]
      _M_deallocate(__old_start,
 801c964:	68f8      	ldr	r0, [r7, #12]
		    this->_M_impl._M_end_of_storage - __old_start);
 801c966:	68fb      	ldr	r3, [r7, #12]
 801c968:	689a      	ldr	r2, [r3, #8]
 801c96a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801c96c:	1ad3      	subs	r3, r2, r3
 801c96e:	109b      	asrs	r3, r3, #2
      _M_deallocate(__old_start,
 801c970:	461a      	mov	r2, r3
 801c972:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 801c974:	f7ee fe7d 	bl	800b672 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE13_M_deallocateEPS1_j>
      this->_M_impl._M_start = __new_start;
 801c978:	68fb      	ldr	r3, [r7, #12]
 801c97a:	69fa      	ldr	r2, [r7, #28]
 801c97c:	601a      	str	r2, [r3, #0]
      this->_M_impl._M_finish = __new_finish;
 801c97e:	68fb      	ldr	r3, [r7, #12]
 801c980:	69ba      	ldr	r2, [r7, #24]
 801c982:	605a      	str	r2, [r3, #4]
      this->_M_impl._M_end_of_storage = __new_start + __len;
 801c984:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801c986:	009b      	lsls	r3, r3, #2
 801c988:	69fa      	ldr	r2, [r7, #28]
 801c98a:	441a      	add	r2, r3
 801c98c:	68fb      	ldr	r3, [r7, #12]
 801c98e:	609a      	str	r2, [r3, #8]
    }
 801c990:	bf00      	nop
 801c992:	3730      	adds	r7, #48	; 0x30
 801c994:	46bd      	mov	sp, r7
 801c996:	bdb0      	pop	{r4, r5, r7, pc}
 801c998:	08029f0c 	.word	0x08029f0c

0801c99c <_ZNSt6vectorIP18Compare_expressionSaIS1_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
 801c99c:	b580      	push	{r7, lr}
 801c99e:	b084      	sub	sp, #16
 801c9a0:	af00      	add	r7, sp, #0
 801c9a2:	6078      	str	r0, [r7, #4]
	return *(end() - 1);
 801c9a4:	6878      	ldr	r0, [r7, #4]
 801c9a6:	f7ed fd80 	bl	800a4aa <_ZNSt6vectorIP18Compare_expressionSaIS1_EE3endEv>
 801c9aa:	4603      	mov	r3, r0
 801c9ac:	60fb      	str	r3, [r7, #12]
 801c9ae:	f107 030c 	add.w	r3, r7, #12
 801c9b2:	2101      	movs	r1, #1
 801c9b4:	4618      	mov	r0, r3
 801c9b6:	f000 fcc2 	bl	801d33e <_ZNK9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEmiEi>
 801c9ba:	4603      	mov	r3, r0
 801c9bc:	60bb      	str	r3, [r7, #8]
 801c9be:	f107 0308 	add.w	r3, r7, #8
 801c9c2:	4618      	mov	r0, r3
 801c9c4:	f7ed fdaa 	bl	800a51c <_ZNK9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEdeEv>
 801c9c8:	4603      	mov	r3, r0
      }
 801c9ca:	4618      	mov	r0, r3
 801c9cc:	3710      	adds	r7, #16
 801c9ce:	46bd      	mov	sp, r7
 801c9d0:	bd80      	pop	{r7, pc}

0801c9d2 <_ZN9__gnu_cxx13new_allocatorIP14And_expressionEC1Ev>:
 801c9d2:	b480      	push	{r7}
 801c9d4:	b083      	sub	sp, #12
 801c9d6:	af00      	add	r7, sp, #0
 801c9d8:	6078      	str	r0, [r7, #4]
 801c9da:	687b      	ldr	r3, [r7, #4]
 801c9dc:	4618      	mov	r0, r3
 801c9de:	370c      	adds	r7, #12
 801c9e0:	46bd      	mov	sp, r7
 801c9e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c9e6:	4770      	bx	lr

0801c9e8 <_ZSt7forwardIP14And_expressionEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801c9e8:	b480      	push	{r7}
 801c9ea:	b083      	sub	sp, #12
 801c9ec:	af00      	add	r7, sp, #0
 801c9ee:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801c9f0:	687b      	ldr	r3, [r7, #4]
 801c9f2:	4618      	mov	r0, r3
 801c9f4:	370c      	adds	r7, #12
 801c9f6:	46bd      	mov	sp, r7
 801c9f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c9fc:	4770      	bx	lr

0801c9fe <_ZNSt16allocator_traitsISaIP14And_expressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 801c9fe:	b580      	push	{r7, lr}
 801ca00:	b084      	sub	sp, #16
 801ca02:	af00      	add	r7, sp, #0
 801ca04:	60f8      	str	r0, [r7, #12]
 801ca06:	60b9      	str	r1, [r7, #8]
 801ca08:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 801ca0a:	6878      	ldr	r0, [r7, #4]
 801ca0c:	f7ff ffec 	bl	801c9e8 <_ZSt7forwardIP14And_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801ca10:	4603      	mov	r3, r0
 801ca12:	461a      	mov	r2, r3
 801ca14:	68b9      	ldr	r1, [r7, #8]
 801ca16:	68f8      	ldr	r0, [r7, #12]
 801ca18:	f000 fcaa 	bl	801d370 <_ZN9__gnu_cxx13new_allocatorIP14And_expressionE9constructIS2_JS2_EEEvPT_DpOT0_>
 801ca1c:	bf00      	nop
 801ca1e:	3710      	adds	r7, #16
 801ca20:	46bd      	mov	sp, r7
 801ca22:	bd80      	pop	{r7, pc}

0801ca24 <_ZNSt6vectorIP14And_expressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
      vector<_Tp, _Alloc>::
 801ca24:	b5b0      	push	{r4, r5, r7, lr}
 801ca26:	b08c      	sub	sp, #48	; 0x30
 801ca28:	af00      	add	r7, sp, #0
 801ca2a:	60f8      	str	r0, [r7, #12]
 801ca2c:	60b9      	str	r1, [r7, #8]
 801ca2e:	607a      	str	r2, [r7, #4]
      const size_type __len =
 801ca30:	4a39      	ldr	r2, [pc, #228]	; (801cb18 <_ZNSt6vectorIP14And_expressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xf4>)
 801ca32:	2101      	movs	r1, #1
 801ca34:	68f8      	ldr	r0, [r7, #12]
 801ca36:	f000 fcb1 	bl	801d39c <_ZNKSt6vectorIP14And_expressionSaIS1_EE12_M_check_lenEjPKc>
 801ca3a:	62f8      	str	r0, [r7, #44]	; 0x2c
      pointer __old_start = this->_M_impl._M_start;
 801ca3c:	68fb      	ldr	r3, [r7, #12]
 801ca3e:	681b      	ldr	r3, [r3, #0]
 801ca40:	62bb      	str	r3, [r7, #40]	; 0x28
      pointer __old_finish = this->_M_impl._M_finish;
 801ca42:	68fb      	ldr	r3, [r7, #12]
 801ca44:	685b      	ldr	r3, [r3, #4]
 801ca46:	627b      	str	r3, [r7, #36]	; 0x24
      const size_type __elems_before = __position - begin();
 801ca48:	68f8      	ldr	r0, [r7, #12]
 801ca4a:	f7ed fd8e 	bl	800a56a <_ZNSt6vectorIP14And_expressionSaIS1_EE5beginEv>
 801ca4e:	4603      	mov	r3, r0
 801ca50:	617b      	str	r3, [r7, #20]
 801ca52:	f107 0214 	add.w	r2, r7, #20
 801ca56:	f107 0308 	add.w	r3, r7, #8
 801ca5a:	4611      	mov	r1, r2
 801ca5c:	4618      	mov	r0, r3
 801ca5e:	f000 fce4 	bl	801d42a <_ZN9__gnu_cxxmiIPP14And_expressionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
 801ca62:	4603      	mov	r3, r0
 801ca64:	623b      	str	r3, [r7, #32]
      pointer __new_start(this->_M_allocate(__len));
 801ca66:	68fb      	ldr	r3, [r7, #12]
 801ca68:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 801ca6a:	4618      	mov	r0, r3
 801ca6c:	f000 fcf2 	bl	801d454 <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE11_M_allocateEj>
 801ca70:	61f8      	str	r0, [r7, #28]
      pointer __new_finish(__new_start);
 801ca72:	69fb      	ldr	r3, [r7, #28]
 801ca74:	61bb      	str	r3, [r7, #24]
	  _Alloc_traits::construct(this->_M_impl,
 801ca76:	68fc      	ldr	r4, [r7, #12]
				   __new_start + __elems_before,
 801ca78:	6a3b      	ldr	r3, [r7, #32]
 801ca7a:	009b      	lsls	r3, r3, #2
	  _Alloc_traits::construct(this->_M_impl,
 801ca7c:	69fa      	ldr	r2, [r7, #28]
 801ca7e:	18d5      	adds	r5, r2, r3
 801ca80:	6878      	ldr	r0, [r7, #4]
 801ca82:	f7ff ffb1 	bl	801c9e8 <_ZSt7forwardIP14And_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801ca86:	4603      	mov	r3, r0
 801ca88:	461a      	mov	r2, r3
 801ca8a:	4629      	mov	r1, r5
 801ca8c:	4620      	mov	r0, r4
 801ca8e:	f7ff ffb6 	bl	801c9fe <_ZNSt16allocator_traitsISaIP14And_expressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	  __new_finish = pointer();
 801ca92:	2300      	movs	r3, #0
 801ca94:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__old_start, __position.base(),
 801ca96:	f107 0308 	add.w	r3, r7, #8
 801ca9a:	4618      	mov	r0, r3
 801ca9c:	f7ee f947 	bl	800ad2e <_ZNK9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801caa0:	4603      	mov	r3, r0
 801caa2:	681c      	ldr	r4, [r3, #0]
					 __new_start, _M_get_Tp_allocator());
 801caa4:	68fb      	ldr	r3, [r7, #12]
 801caa6:	4618      	mov	r0, r3
 801caa8:	f7ee f918 	bl	800acdc <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 801caac:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__old_start, __position.base(),
 801caae:	69fa      	ldr	r2, [r7, #28]
 801cab0:	4621      	mov	r1, r4
 801cab2:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 801cab4:	f000 fce2 	bl	801d47c <_ZNSt6vectorIP14And_expressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 801cab8:	61b8      	str	r0, [r7, #24]
	      ++__new_finish;
 801caba:	69bb      	ldr	r3, [r7, #24]
 801cabc:	3304      	adds	r3, #4
 801cabe:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 801cac0:	f107 0308 	add.w	r3, r7, #8
 801cac4:	4618      	mov	r0, r3
 801cac6:	f7ee f932 	bl	800ad2e <_ZNK9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801caca:	4603      	mov	r3, r0
 801cacc:	681c      	ldr	r4, [r3, #0]
					 __new_finish, _M_get_Tp_allocator());
 801cace:	68fb      	ldr	r3, [r7, #12]
 801cad0:	4618      	mov	r0, r3
 801cad2:	f7ee f903 	bl	800acdc <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 801cad6:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 801cad8:	69ba      	ldr	r2, [r7, #24]
 801cada:	6a79      	ldr	r1, [r7, #36]	; 0x24
 801cadc:	4620      	mov	r0, r4
 801cade:	f000 fccd 	bl	801d47c <_ZNSt6vectorIP14And_expressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 801cae2:	61b8      	str	r0, [r7, #24]
      _M_deallocate(__old_start,
 801cae4:	68f8      	ldr	r0, [r7, #12]
		    this->_M_impl._M_end_of_storage - __old_start);
 801cae6:	68fb      	ldr	r3, [r7, #12]
 801cae8:	689a      	ldr	r2, [r3, #8]
 801caea:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801caec:	1ad3      	subs	r3, r2, r3
 801caee:	109b      	asrs	r3, r3, #2
      _M_deallocate(__old_start,
 801caf0:	461a      	mov	r2, r3
 801caf2:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 801caf4:	f7ee fde9 	bl	800b6ca <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE13_M_deallocateEPS1_j>
      this->_M_impl._M_start = __new_start;
 801caf8:	68fb      	ldr	r3, [r7, #12]
 801cafa:	69fa      	ldr	r2, [r7, #28]
 801cafc:	601a      	str	r2, [r3, #0]
      this->_M_impl._M_finish = __new_finish;
 801cafe:	68fb      	ldr	r3, [r7, #12]
 801cb00:	69ba      	ldr	r2, [r7, #24]
 801cb02:	605a      	str	r2, [r3, #4]
      this->_M_impl._M_end_of_storage = __new_start + __len;
 801cb04:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801cb06:	009b      	lsls	r3, r3, #2
 801cb08:	69fa      	ldr	r2, [r7, #28]
 801cb0a:	441a      	add	r2, r3
 801cb0c:	68fb      	ldr	r3, [r7, #12]
 801cb0e:	609a      	str	r2, [r3, #8]
    }
 801cb10:	bf00      	nop
 801cb12:	3730      	adds	r7, #48	; 0x30
 801cb14:	46bd      	mov	sp, r7
 801cb16:	bdb0      	pop	{r4, r5, r7, pc}
 801cb18:	08029f0c 	.word	0x08029f0c

0801cb1c <_ZNSt6vectorIP14And_expressionSaIS1_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
 801cb1c:	b580      	push	{r7, lr}
 801cb1e:	b084      	sub	sp, #16
 801cb20:	af00      	add	r7, sp, #0
 801cb22:	6078      	str	r0, [r7, #4]
	return *(end() - 1);
 801cb24:	6878      	ldr	r0, [r7, #4]
 801cb26:	f7ed fd30 	bl	800a58a <_ZNSt6vectorIP14And_expressionSaIS1_EE3endEv>
 801cb2a:	4603      	mov	r3, r0
 801cb2c:	60fb      	str	r3, [r7, #12]
 801cb2e:	f107 030c 	add.w	r3, r7, #12
 801cb32:	2101      	movs	r1, #1
 801cb34:	4618      	mov	r0, r3
 801cb36:	f000 fcb5 	bl	801d4a4 <_ZNK9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEEmiEi>
 801cb3a:	4603      	mov	r3, r0
 801cb3c:	60bb      	str	r3, [r7, #8]
 801cb3e:	f107 0308 	add.w	r3, r7, #8
 801cb42:	4618      	mov	r0, r3
 801cb44:	f7ed fd5a 	bl	800a5fc <_ZNK9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEEdeEv>
 801cb48:	4603      	mov	r3, r0
      }
 801cb4a:	4618      	mov	r0, r3
 801cb4c:	3710      	adds	r7, #16
 801cb4e:	46bd      	mov	sp, r7
 801cb50:	bd80      	pop	{r7, pc}

0801cb52 <_ZSt9addressofIP8VariableEPT_RS2_>:
    addressof(_Tp& __r) noexcept
 801cb52:	b580      	push	{r7, lr}
 801cb54:	b082      	sub	sp, #8
 801cb56:	af00      	add	r7, sp, #0
 801cb58:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 801cb5a:	6878      	ldr	r0, [r7, #4]
 801cb5c:	f7ef f8ac 	bl	800bcb8 <_ZSt11__addressofIP8VariableEPT_RS2_>
 801cb60:	4603      	mov	r3, r0
 801cb62:	4618      	mov	r0, r3
 801cb64:	3708      	adds	r7, #8
 801cb66:	46bd      	mov	sp, r7
 801cb68:	bd80      	pop	{r7, pc}

0801cb6a <_ZSt9addressofIP10ExpressionEPT_RS2_>:
    addressof(_Tp& __r) noexcept
 801cb6a:	b580      	push	{r7, lr}
 801cb6c:	b082      	sub	sp, #8
 801cb6e:	af00      	add	r7, sp, #0
 801cb70:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 801cb72:	6878      	ldr	r0, [r7, #4]
 801cb74:	f000 fcaf 	bl	801d4d6 <_ZSt11__addressofIP10ExpressionEPT_RS2_>
 801cb78:	4603      	mov	r3, r0
 801cb7a:	4618      	mov	r0, r3
 801cb7c:	3708      	adds	r7, #8
 801cb7e:	46bd      	mov	sp, r7
 801cb80:	bd80      	pop	{r7, pc}

0801cb82 <_ZSt9addressofIP17Primal_expressionEPT_RS2_>:
    addressof(_Tp& __r) noexcept
 801cb82:	b580      	push	{r7, lr}
 801cb84:	b082      	sub	sp, #8
 801cb86:	af00      	add	r7, sp, #0
 801cb88:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 801cb8a:	6878      	ldr	r0, [r7, #4]
 801cb8c:	f000 fcae 	bl	801d4ec <_ZSt11__addressofIP17Primal_expressionEPT_RS2_>
 801cb90:	4603      	mov	r3, r0
 801cb92:	4618      	mov	r0, r3
 801cb94:	3708      	adds	r7, #8
 801cb96:	46bd      	mov	sp, r7
 801cb98:	bd80      	pop	{r7, pc}

0801cb9a <_ZN9__gnu_cxx13new_allocatorI13mult_operatorE9constructIS1_JS1_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 801cb9a:	b590      	push	{r4, r7, lr}
 801cb9c:	b085      	sub	sp, #20
 801cb9e:	af00      	add	r7, sp, #0
 801cba0:	60f8      	str	r0, [r7, #12]
 801cba2:	60b9      	str	r1, [r7, #8]
 801cba4:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 801cba6:	6878      	ldr	r0, [r7, #4]
 801cba8:	f7ff fb32 	bl	801c210 <_ZSt7forwardI13mult_operatorEOT_RNSt16remove_referenceIS1_E4typeE>
 801cbac:	4603      	mov	r3, r0
 801cbae:	781c      	ldrb	r4, [r3, #0]
 801cbb0:	68bb      	ldr	r3, [r7, #8]
 801cbb2:	4619      	mov	r1, r3
 801cbb4:	2001      	movs	r0, #1
 801cbb6:	f7e4 fa50 	bl	800105a <_ZnwjPv>
 801cbba:	4603      	mov	r3, r0
 801cbbc:	4622      	mov	r2, r4
 801cbbe:	701a      	strb	r2, [r3, #0]
 801cbc0:	bf00      	nop
 801cbc2:	3714      	adds	r7, #20
 801cbc4:	46bd      	mov	sp, r7
 801cbc6:	bd90      	pop	{r4, r7, pc}

0801cbc8 <_ZN9__gnu_cxx17__normal_iteratorIP13mult_operatorSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 801cbc8:	b480      	push	{r7}
 801cbca:	b083      	sub	sp, #12
 801cbcc:	af00      	add	r7, sp, #0
 801cbce:	6078      	str	r0, [r7, #4]
 801cbd0:	6039      	str	r1, [r7, #0]
      : _M_current(__i) { }
 801cbd2:	683b      	ldr	r3, [r7, #0]
 801cbd4:	681a      	ldr	r2, [r3, #0]
 801cbd6:	687b      	ldr	r3, [r7, #4]
 801cbd8:	601a      	str	r2, [r3, #0]
 801cbda:	687b      	ldr	r3, [r7, #4]
 801cbdc:	4618      	mov	r0, r3
 801cbde:	370c      	adds	r7, #12
 801cbe0:	46bd      	mov	sp, r7
 801cbe2:	f85d 7b04 	ldr.w	r7, [sp], #4
 801cbe6:	4770      	bx	lr

0801cbe8 <_ZNKSt6vectorI13mult_operatorSaIS0_EE12_M_check_lenEjPKc>:
      _M_check_len(size_type __n, const char* __s) const
 801cbe8:	b590      	push	{r4, r7, lr}
 801cbea:	b087      	sub	sp, #28
 801cbec:	af00      	add	r7, sp, #0
 801cbee:	60f8      	str	r0, [r7, #12]
 801cbf0:	60b9      	str	r1, [r7, #8]
 801cbf2:	607a      	str	r2, [r7, #4]
	if (max_size() - size() < __n)
 801cbf4:	68f8      	ldr	r0, [r7, #12]
 801cbf6:	f000 fc84 	bl	801d502 <_ZNKSt6vectorI13mult_operatorSaIS0_EE8max_sizeEv>
 801cbfa:	4604      	mov	r4, r0
 801cbfc:	68f8      	ldr	r0, [r7, #12]
 801cbfe:	f7f0 f8b3 	bl	800cd68 <_ZNKSt6vectorI13mult_operatorSaIS0_EE4sizeEv>
 801cc02:	4603      	mov	r3, r0
 801cc04:	1ae2      	subs	r2, r4, r3
 801cc06:	68bb      	ldr	r3, [r7, #8]
 801cc08:	429a      	cmp	r2, r3
 801cc0a:	bf34      	ite	cc
 801cc0c:	2301      	movcc	r3, #1
 801cc0e:	2300      	movcs	r3, #0
 801cc10:	b2db      	uxtb	r3, r3
 801cc12:	2b00      	cmp	r3, #0
 801cc14:	d002      	beq.n	801cc1c <_ZNKSt6vectorI13mult_operatorSaIS0_EE12_M_check_lenEjPKc+0x34>
	  __throw_length_error(__N(__s));
 801cc16:	6878      	ldr	r0, [r7, #4]
 801cc18:	f006 fd3b 	bl	8023692 <_ZSt20__throw_length_errorPKc>
	const size_type __len = size() + (std::max)(size(), __n);
 801cc1c:	68f8      	ldr	r0, [r7, #12]
 801cc1e:	f7f0 f8a3 	bl	800cd68 <_ZNKSt6vectorI13mult_operatorSaIS0_EE4sizeEv>
 801cc22:	4604      	mov	r4, r0
 801cc24:	68f8      	ldr	r0, [r7, #12]
 801cc26:	f7f0 f89f 	bl	800cd68 <_ZNKSt6vectorI13mult_operatorSaIS0_EE4sizeEv>
 801cc2a:	4603      	mov	r3, r0
 801cc2c:	613b      	str	r3, [r7, #16]
 801cc2e:	f107 0208 	add.w	r2, r7, #8
 801cc32:	f107 0310 	add.w	r3, r7, #16
 801cc36:	4611      	mov	r1, r2
 801cc38:	4618      	mov	r0, r3
 801cc3a:	f7f9 f944 	bl	8015ec6 <_ZSt3maxIjERKT_S2_S2_>
 801cc3e:	4603      	mov	r3, r0
 801cc40:	681b      	ldr	r3, [r3, #0]
 801cc42:	4423      	add	r3, r4
 801cc44:	617b      	str	r3, [r7, #20]
	return (__len < size() || __len > max_size()) ? max_size() : __len;
 801cc46:	68f8      	ldr	r0, [r7, #12]
 801cc48:	f7f0 f88e 	bl	800cd68 <_ZNKSt6vectorI13mult_operatorSaIS0_EE4sizeEv>
 801cc4c:	4602      	mov	r2, r0
 801cc4e:	697b      	ldr	r3, [r7, #20]
 801cc50:	4293      	cmp	r3, r2
 801cc52:	d306      	bcc.n	801cc62 <_ZNKSt6vectorI13mult_operatorSaIS0_EE12_M_check_lenEjPKc+0x7a>
 801cc54:	68f8      	ldr	r0, [r7, #12]
 801cc56:	f000 fc54 	bl	801d502 <_ZNKSt6vectorI13mult_operatorSaIS0_EE8max_sizeEv>
 801cc5a:	4602      	mov	r2, r0
 801cc5c:	697b      	ldr	r3, [r7, #20]
 801cc5e:	4293      	cmp	r3, r2
 801cc60:	d904      	bls.n	801cc6c <_ZNKSt6vectorI13mult_operatorSaIS0_EE12_M_check_lenEjPKc+0x84>
 801cc62:	68f8      	ldr	r0, [r7, #12]
 801cc64:	f000 fc4d 	bl	801d502 <_ZNKSt6vectorI13mult_operatorSaIS0_EE8max_sizeEv>
 801cc68:	4603      	mov	r3, r0
 801cc6a:	e000      	b.n	801cc6e <_ZNKSt6vectorI13mult_operatorSaIS0_EE12_M_check_lenEjPKc+0x86>
 801cc6c:	697b      	ldr	r3, [r7, #20]
      }
 801cc6e:	4618      	mov	r0, r3
 801cc70:	371c      	adds	r7, #28
 801cc72:	46bd      	mov	sp, r7
 801cc74:	bd90      	pop	{r4, r7, pc}

0801cc76 <_ZNSt6vectorI13mult_operatorSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 801cc76:	b580      	push	{r7, lr}
 801cc78:	b084      	sub	sp, #16
 801cc7a:	af00      	add	r7, sp, #0
 801cc7c:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_start); }
 801cc7e:	687a      	ldr	r2, [r7, #4]
 801cc80:	f107 030c 	add.w	r3, r7, #12
 801cc84:	4611      	mov	r1, r2
 801cc86:	4618      	mov	r0, r3
 801cc88:	f7ff ff9e 	bl	801cbc8 <_ZN9__gnu_cxx17__normal_iteratorIP13mult_operatorSt6vectorIS1_SaIS1_EEEC1ERKS2_>
 801cc8c:	68fb      	ldr	r3, [r7, #12]
 801cc8e:	4618      	mov	r0, r3
 801cc90:	3710      	adds	r7, #16
 801cc92:	46bd      	mov	sp, r7
 801cc94:	bd80      	pop	{r7, pc}

0801cc96 <_ZN9__gnu_cxxmiIP13mult_operatorSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_>:
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
 801cc96:	b590      	push	{r4, r7, lr}
 801cc98:	b083      	sub	sp, #12
 801cc9a:	af00      	add	r7, sp, #0
 801cc9c:	6078      	str	r0, [r7, #4]
 801cc9e:	6039      	str	r1, [r7, #0]
    { return __lhs.base() - __rhs.base(); }
 801cca0:	6878      	ldr	r0, [r7, #4]
 801cca2:	f000 f834 	bl	801cd0e <_ZNK9__gnu_cxx17__normal_iteratorIP13mult_operatorSt6vectorIS1_SaIS1_EEE4baseEv>
 801cca6:	4603      	mov	r3, r0
 801cca8:	681c      	ldr	r4, [r3, #0]
 801ccaa:	6838      	ldr	r0, [r7, #0]
 801ccac:	f000 f82f 	bl	801cd0e <_ZNK9__gnu_cxx17__normal_iteratorIP13mult_operatorSt6vectorIS1_SaIS1_EEE4baseEv>
 801ccb0:	4603      	mov	r3, r0
 801ccb2:	681b      	ldr	r3, [r3, #0]
 801ccb4:	1ae3      	subs	r3, r4, r3
 801ccb6:	4618      	mov	r0, r3
 801ccb8:	370c      	adds	r7, #12
 801ccba:	46bd      	mov	sp, r7
 801ccbc:	bd90      	pop	{r4, r7, pc}

0801ccbe <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE11_M_allocateEj>:
      _M_allocate(size_t __n)
 801ccbe:	b580      	push	{r7, lr}
 801ccc0:	b082      	sub	sp, #8
 801ccc2:	af00      	add	r7, sp, #0
 801ccc4:	6078      	str	r0, [r7, #4]
 801ccc6:	6039      	str	r1, [r7, #0]
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 801ccc8:	683b      	ldr	r3, [r7, #0]
 801ccca:	2b00      	cmp	r3, #0
 801cccc:	d006      	beq.n	801ccdc <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE11_M_allocateEj+0x1e>
 801ccce:	687b      	ldr	r3, [r7, #4]
 801ccd0:	6839      	ldr	r1, [r7, #0]
 801ccd2:	4618      	mov	r0, r3
 801ccd4:	f000 fc26 	bl	801d524 <_ZNSt16allocator_traitsISaI13mult_operatorEE8allocateERS1_j>
 801ccd8:	4603      	mov	r3, r0
 801ccda:	e000      	b.n	801ccde <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE11_M_allocateEj+0x20>
 801ccdc:	2300      	movs	r3, #0
      }
 801ccde:	4618      	mov	r0, r3
 801cce0:	3708      	adds	r7, #8
 801cce2:	46bd      	mov	sp, r7
 801cce4:	bd80      	pop	{r7, pc}

0801cce6 <_ZNSt6vectorI13mult_operatorSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
 801cce6:	b590      	push	{r4, r7, lr}
 801cce8:	b089      	sub	sp, #36	; 0x24
 801ccea:	af02      	add	r7, sp, #8
 801ccec:	60f8      	str	r0, [r7, #12]
 801ccee:	60b9      	str	r1, [r7, #8]
 801ccf0:	607a      	str	r2, [r7, #4]
 801ccf2:	603b      	str	r3, [r7, #0]
	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
 801ccf4:	f88d 4000 	strb.w	r4, [sp]
 801ccf8:	683b      	ldr	r3, [r7, #0]
 801ccfa:	687a      	ldr	r2, [r7, #4]
 801ccfc:	68b9      	ldr	r1, [r7, #8]
 801ccfe:	68f8      	ldr	r0, [r7, #12]
 801cd00:	f000 fc1f 	bl	801d542 <_ZNSt6vectorI13mult_operatorSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE>
 801cd04:	4603      	mov	r3, r0
      }
 801cd06:	4618      	mov	r0, r3
 801cd08:	371c      	adds	r7, #28
 801cd0a:	46bd      	mov	sp, r7
 801cd0c:	bd90      	pop	{r4, r7, pc}

0801cd0e <_ZNK9__gnu_cxx17__normal_iteratorIP13mult_operatorSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
 801cd0e:	b480      	push	{r7}
 801cd10:	b083      	sub	sp, #12
 801cd12:	af00      	add	r7, sp, #0
 801cd14:	6078      	str	r0, [r7, #4]
      { return _M_current; }
 801cd16:	687b      	ldr	r3, [r7, #4]
 801cd18:	4618      	mov	r0, r3
 801cd1a:	370c      	adds	r7, #12
 801cd1c:	46bd      	mov	sp, r7
 801cd1e:	f85d 7b04 	ldr.w	r7, [sp], #4
 801cd22:	4770      	bx	lr

0801cd24 <_ZNK9__gnu_cxx17__normal_iteratorIP13mult_operatorSt6vectorIS1_SaIS1_EEEmiEi>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
 801cd24:	b580      	push	{r7, lr}
 801cd26:	b084      	sub	sp, #16
 801cd28:	af00      	add	r7, sp, #0
 801cd2a:	6078      	str	r0, [r7, #4]
 801cd2c:	6039      	str	r1, [r7, #0]
      { return __normal_iterator(_M_current - __n); }
 801cd2e:	687b      	ldr	r3, [r7, #4]
 801cd30:	681a      	ldr	r2, [r3, #0]
 801cd32:	683b      	ldr	r3, [r7, #0]
 801cd34:	425b      	negs	r3, r3
 801cd36:	4413      	add	r3, r2
 801cd38:	60fb      	str	r3, [r7, #12]
 801cd3a:	f107 020c 	add.w	r2, r7, #12
 801cd3e:	f107 0308 	add.w	r3, r7, #8
 801cd42:	4611      	mov	r1, r2
 801cd44:	4618      	mov	r0, r3
 801cd46:	f7ff ff3f 	bl	801cbc8 <_ZN9__gnu_cxx17__normal_iteratorIP13mult_operatorSt6vectorIS1_SaIS1_EEEC1ERKS2_>
 801cd4a:	68bb      	ldr	r3, [r7, #8]
 801cd4c:	4618      	mov	r0, r3
 801cd4e:	3710      	adds	r7, #16
 801cd50:	46bd      	mov	sp, r7
 801cd52:	bd80      	pop	{r7, pc}

0801cd54 <_ZNK9__gnu_cxx17__normal_iteratorIP13mult_operatorSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
 801cd54:	b480      	push	{r7}
 801cd56:	b083      	sub	sp, #12
 801cd58:	af00      	add	r7, sp, #0
 801cd5a:	6078      	str	r0, [r7, #4]
      { return *_M_current; }
 801cd5c:	687b      	ldr	r3, [r7, #4]
 801cd5e:	681b      	ldr	r3, [r3, #0]
 801cd60:	4618      	mov	r0, r3
 801cd62:	370c      	adds	r7, #12
 801cd64:	46bd      	mov	sp, r7
 801cd66:	f85d 7b04 	ldr.w	r7, [sp], #4
 801cd6a:	4770      	bx	lr

0801cd6c <_ZN9__gnu_cxx13new_allocatorIP16Power_expressionE9constructIS2_JS2_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 801cd6c:	b590      	push	{r4, r7, lr}
 801cd6e:	b085      	sub	sp, #20
 801cd70:	af00      	add	r7, sp, #0
 801cd72:	60f8      	str	r0, [r7, #12]
 801cd74:	60b9      	str	r1, [r7, #8]
 801cd76:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 801cd78:	6878      	ldr	r0, [r7, #4]
 801cd7a:	f7ff fb24 	bl	801c3c6 <_ZSt7forwardIP16Power_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801cd7e:	4603      	mov	r3, r0
 801cd80:	681c      	ldr	r4, [r3, #0]
 801cd82:	68bb      	ldr	r3, [r7, #8]
 801cd84:	4619      	mov	r1, r3
 801cd86:	2004      	movs	r0, #4
 801cd88:	f7e4 f967 	bl	800105a <_ZnwjPv>
 801cd8c:	4603      	mov	r3, r0
 801cd8e:	601c      	str	r4, [r3, #0]
 801cd90:	bf00      	nop
 801cd92:	3714      	adds	r7, #20
 801cd94:	46bd      	mov	sp, r7
 801cd96:	bd90      	pop	{r4, r7, pc}

0801cd98 <_ZNKSt6vectorIP16Power_expressionSaIS1_EE12_M_check_lenEjPKc>:
      _M_check_len(size_type __n, const char* __s) const
 801cd98:	b590      	push	{r4, r7, lr}
 801cd9a:	b087      	sub	sp, #28
 801cd9c:	af00      	add	r7, sp, #0
 801cd9e:	60f8      	str	r0, [r7, #12]
 801cda0:	60b9      	str	r1, [r7, #8]
 801cda2:	607a      	str	r2, [r7, #4]
	if (max_size() - size() < __n)
 801cda4:	68f8      	ldr	r0, [r7, #12]
 801cda6:	f000 fbde 	bl	801d566 <_ZNKSt6vectorIP16Power_expressionSaIS1_EE8max_sizeEv>
 801cdaa:	4604      	mov	r4, r0
 801cdac:	68f8      	ldr	r0, [r7, #12]
 801cdae:	f000 fbeb 	bl	801d588 <_ZNKSt6vectorIP16Power_expressionSaIS1_EE4sizeEv>
 801cdb2:	4603      	mov	r3, r0
 801cdb4:	1ae2      	subs	r2, r4, r3
 801cdb6:	68bb      	ldr	r3, [r7, #8]
 801cdb8:	429a      	cmp	r2, r3
 801cdba:	bf34      	ite	cc
 801cdbc:	2301      	movcc	r3, #1
 801cdbe:	2300      	movcs	r3, #0
 801cdc0:	b2db      	uxtb	r3, r3
 801cdc2:	2b00      	cmp	r3, #0
 801cdc4:	d002      	beq.n	801cdcc <_ZNKSt6vectorIP16Power_expressionSaIS1_EE12_M_check_lenEjPKc+0x34>
	  __throw_length_error(__N(__s));
 801cdc6:	6878      	ldr	r0, [r7, #4]
 801cdc8:	f006 fc63 	bl	8023692 <_ZSt20__throw_length_errorPKc>
	const size_type __len = size() + (std::max)(size(), __n);
 801cdcc:	68f8      	ldr	r0, [r7, #12]
 801cdce:	f000 fbdb 	bl	801d588 <_ZNKSt6vectorIP16Power_expressionSaIS1_EE4sizeEv>
 801cdd2:	4604      	mov	r4, r0
 801cdd4:	68f8      	ldr	r0, [r7, #12]
 801cdd6:	f000 fbd7 	bl	801d588 <_ZNKSt6vectorIP16Power_expressionSaIS1_EE4sizeEv>
 801cdda:	4603      	mov	r3, r0
 801cddc:	613b      	str	r3, [r7, #16]
 801cdde:	f107 0208 	add.w	r2, r7, #8
 801cde2:	f107 0310 	add.w	r3, r7, #16
 801cde6:	4611      	mov	r1, r2
 801cde8:	4618      	mov	r0, r3
 801cdea:	f7f9 f86c 	bl	8015ec6 <_ZSt3maxIjERKT_S2_S2_>
 801cdee:	4603      	mov	r3, r0
 801cdf0:	681b      	ldr	r3, [r3, #0]
 801cdf2:	4423      	add	r3, r4
 801cdf4:	617b      	str	r3, [r7, #20]
	return (__len < size() || __len > max_size()) ? max_size() : __len;
 801cdf6:	68f8      	ldr	r0, [r7, #12]
 801cdf8:	f000 fbc6 	bl	801d588 <_ZNKSt6vectorIP16Power_expressionSaIS1_EE4sizeEv>
 801cdfc:	4602      	mov	r2, r0
 801cdfe:	697b      	ldr	r3, [r7, #20]
 801ce00:	4293      	cmp	r3, r2
 801ce02:	d306      	bcc.n	801ce12 <_ZNKSt6vectorIP16Power_expressionSaIS1_EE12_M_check_lenEjPKc+0x7a>
 801ce04:	68f8      	ldr	r0, [r7, #12]
 801ce06:	f000 fbae 	bl	801d566 <_ZNKSt6vectorIP16Power_expressionSaIS1_EE8max_sizeEv>
 801ce0a:	4602      	mov	r2, r0
 801ce0c:	697b      	ldr	r3, [r7, #20]
 801ce0e:	4293      	cmp	r3, r2
 801ce10:	d904      	bls.n	801ce1c <_ZNKSt6vectorIP16Power_expressionSaIS1_EE12_M_check_lenEjPKc+0x84>
 801ce12:	68f8      	ldr	r0, [r7, #12]
 801ce14:	f000 fba7 	bl	801d566 <_ZNKSt6vectorIP16Power_expressionSaIS1_EE8max_sizeEv>
 801ce18:	4603      	mov	r3, r0
 801ce1a:	e000      	b.n	801ce1e <_ZNKSt6vectorIP16Power_expressionSaIS1_EE12_M_check_lenEjPKc+0x86>
 801ce1c:	697b      	ldr	r3, [r7, #20]
      }
 801ce1e:	4618      	mov	r0, r3
 801ce20:	371c      	adds	r7, #28
 801ce22:	46bd      	mov	sp, r7
 801ce24:	bd90      	pop	{r4, r7, pc}

0801ce26 <_ZN9__gnu_cxxmiIPP16Power_expressionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>:
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
 801ce26:	b590      	push	{r4, r7, lr}
 801ce28:	b083      	sub	sp, #12
 801ce2a:	af00      	add	r7, sp, #0
 801ce2c:	6078      	str	r0, [r7, #4]
 801ce2e:	6039      	str	r1, [r7, #0]
    { return __lhs.base() - __rhs.base(); }
 801ce30:	6878      	ldr	r0, [r7, #4]
 801ce32:	f7ed fe34 	bl	800aa9e <_ZNK9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801ce36:	4603      	mov	r3, r0
 801ce38:	681c      	ldr	r4, [r3, #0]
 801ce3a:	6838      	ldr	r0, [r7, #0]
 801ce3c:	f7ed fe2f 	bl	800aa9e <_ZNK9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801ce40:	4603      	mov	r3, r0
 801ce42:	681b      	ldr	r3, [r3, #0]
 801ce44:	1ae3      	subs	r3, r4, r3
 801ce46:	109b      	asrs	r3, r3, #2
 801ce48:	4618      	mov	r0, r3
 801ce4a:	370c      	adds	r7, #12
 801ce4c:	46bd      	mov	sp, r7
 801ce4e:	bd90      	pop	{r4, r7, pc}

0801ce50 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE11_M_allocateEj>:
      _M_allocate(size_t __n)
 801ce50:	b580      	push	{r7, lr}
 801ce52:	b082      	sub	sp, #8
 801ce54:	af00      	add	r7, sp, #0
 801ce56:	6078      	str	r0, [r7, #4]
 801ce58:	6039      	str	r1, [r7, #0]
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 801ce5a:	683b      	ldr	r3, [r7, #0]
 801ce5c:	2b00      	cmp	r3, #0
 801ce5e:	d006      	beq.n	801ce6e <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE11_M_allocateEj+0x1e>
 801ce60:	687b      	ldr	r3, [r7, #4]
 801ce62:	6839      	ldr	r1, [r7, #0]
 801ce64:	4618      	mov	r0, r3
 801ce66:	f000 fb9f 	bl	801d5a8 <_ZNSt16allocator_traitsISaIP16Power_expressionEE8allocateERS2_j>
 801ce6a:	4603      	mov	r3, r0
 801ce6c:	e000      	b.n	801ce70 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE11_M_allocateEj+0x20>
 801ce6e:	2300      	movs	r3, #0
      }
 801ce70:	4618      	mov	r0, r3
 801ce72:	3708      	adds	r7, #8
 801ce74:	46bd      	mov	sp, r7
 801ce76:	bd80      	pop	{r7, pc}

0801ce78 <_ZNSt6vectorIP16Power_expressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
 801ce78:	b590      	push	{r4, r7, lr}
 801ce7a:	b089      	sub	sp, #36	; 0x24
 801ce7c:	af02      	add	r7, sp, #8
 801ce7e:	60f8      	str	r0, [r7, #12]
 801ce80:	60b9      	str	r1, [r7, #8]
 801ce82:	607a      	str	r2, [r7, #4]
 801ce84:	603b      	str	r3, [r7, #0]
	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
 801ce86:	f88d 4000 	strb.w	r4, [sp]
 801ce8a:	683b      	ldr	r3, [r7, #0]
 801ce8c:	687a      	ldr	r2, [r7, #4]
 801ce8e:	68b9      	ldr	r1, [r7, #8]
 801ce90:	68f8      	ldr	r0, [r7, #12]
 801ce92:	f000 fb98 	bl	801d5c6 <_ZNSt6vectorIP16Power_expressionSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>
 801ce96:	4603      	mov	r3, r0
      }
 801ce98:	4618      	mov	r0, r3
 801ce9a:	371c      	adds	r7, #28
 801ce9c:	46bd      	mov	sp, r7
 801ce9e:	bd90      	pop	{r4, r7, pc}

0801cea0 <_ZNK9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEEmiEi>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
 801cea0:	b580      	push	{r7, lr}
 801cea2:	b084      	sub	sp, #16
 801cea4:	af00      	add	r7, sp, #0
 801cea6:	6078      	str	r0, [r7, #4]
 801cea8:	6039      	str	r1, [r7, #0]
      { return __normal_iterator(_M_current - __n); }
 801ceaa:	687b      	ldr	r3, [r7, #4]
 801ceac:	681a      	ldr	r2, [r3, #0]
 801ceae:	683b      	ldr	r3, [r7, #0]
 801ceb0:	009b      	lsls	r3, r3, #2
 801ceb2:	425b      	negs	r3, r3
 801ceb4:	4413      	add	r3, r2
 801ceb6:	60fb      	str	r3, [r7, #12]
 801ceb8:	f107 020c 	add.w	r2, r7, #12
 801cebc:	f107 0308 	add.w	r3, r7, #8
 801cec0:	4611      	mov	r1, r2
 801cec2:	4618      	mov	r0, r3
 801cec4:	f7ed fddb 	bl	800aa7e <_ZN9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 801cec8:	68bb      	ldr	r3, [r7, #8]
 801ceca:	4618      	mov	r0, r3
 801cecc:	3710      	adds	r7, #16
 801cece:	46bd      	mov	sp, r7
 801ced0:	bd80      	pop	{r7, pc}

0801ced2 <_ZN9__gnu_cxx13new_allocatorI12sum_operatorE9constructIS1_JS1_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 801ced2:	b590      	push	{r4, r7, lr}
 801ced4:	b085      	sub	sp, #20
 801ced6:	af00      	add	r7, sp, #0
 801ced8:	60f8      	str	r0, [r7, #12]
 801ceda:	60b9      	str	r1, [r7, #8]
 801cedc:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 801cede:	6878      	ldr	r0, [r7, #4]
 801cee0:	f7ff fb27 	bl	801c532 <_ZSt7forwardI12sum_operatorEOT_RNSt16remove_referenceIS1_E4typeE>
 801cee4:	4603      	mov	r3, r0
 801cee6:	781c      	ldrb	r4, [r3, #0]
 801cee8:	68bb      	ldr	r3, [r7, #8]
 801ceea:	4619      	mov	r1, r3
 801ceec:	2001      	movs	r0, #1
 801ceee:	f7e4 f8b4 	bl	800105a <_ZnwjPv>
 801cef2:	4603      	mov	r3, r0
 801cef4:	4622      	mov	r2, r4
 801cef6:	701a      	strb	r2, [r3, #0]
 801cef8:	bf00      	nop
 801cefa:	3714      	adds	r7, #20
 801cefc:	46bd      	mov	sp, r7
 801cefe:	bd90      	pop	{r4, r7, pc}

0801cf00 <_ZN9__gnu_cxx17__normal_iteratorIP12sum_operatorSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 801cf00:	b480      	push	{r7}
 801cf02:	b083      	sub	sp, #12
 801cf04:	af00      	add	r7, sp, #0
 801cf06:	6078      	str	r0, [r7, #4]
 801cf08:	6039      	str	r1, [r7, #0]
      : _M_current(__i) { }
 801cf0a:	683b      	ldr	r3, [r7, #0]
 801cf0c:	681a      	ldr	r2, [r3, #0]
 801cf0e:	687b      	ldr	r3, [r7, #4]
 801cf10:	601a      	str	r2, [r3, #0]
 801cf12:	687b      	ldr	r3, [r7, #4]
 801cf14:	4618      	mov	r0, r3
 801cf16:	370c      	adds	r7, #12
 801cf18:	46bd      	mov	sp, r7
 801cf1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801cf1e:	4770      	bx	lr

0801cf20 <_ZNKSt6vectorI12sum_operatorSaIS0_EE12_M_check_lenEjPKc>:
      _M_check_len(size_type __n, const char* __s) const
 801cf20:	b590      	push	{r4, r7, lr}
 801cf22:	b087      	sub	sp, #28
 801cf24:	af00      	add	r7, sp, #0
 801cf26:	60f8      	str	r0, [r7, #12]
 801cf28:	60b9      	str	r1, [r7, #8]
 801cf2a:	607a      	str	r2, [r7, #4]
	if (max_size() - size() < __n)
 801cf2c:	68f8      	ldr	r0, [r7, #12]
 801cf2e:	f000 fb5c 	bl	801d5ea <_ZNKSt6vectorI12sum_operatorSaIS0_EE8max_sizeEv>
 801cf32:	4604      	mov	r4, r0
 801cf34:	68f8      	ldr	r0, [r7, #12]
 801cf36:	f7ef fee9 	bl	800cd0c <_ZNKSt6vectorI12sum_operatorSaIS0_EE4sizeEv>
 801cf3a:	4603      	mov	r3, r0
 801cf3c:	1ae2      	subs	r2, r4, r3
 801cf3e:	68bb      	ldr	r3, [r7, #8]
 801cf40:	429a      	cmp	r2, r3
 801cf42:	bf34      	ite	cc
 801cf44:	2301      	movcc	r3, #1
 801cf46:	2300      	movcs	r3, #0
 801cf48:	b2db      	uxtb	r3, r3
 801cf4a:	2b00      	cmp	r3, #0
 801cf4c:	d002      	beq.n	801cf54 <_ZNKSt6vectorI12sum_operatorSaIS0_EE12_M_check_lenEjPKc+0x34>
	  __throw_length_error(__N(__s));
 801cf4e:	6878      	ldr	r0, [r7, #4]
 801cf50:	f006 fb9f 	bl	8023692 <_ZSt20__throw_length_errorPKc>
	const size_type __len = size() + (std::max)(size(), __n);
 801cf54:	68f8      	ldr	r0, [r7, #12]
 801cf56:	f7ef fed9 	bl	800cd0c <_ZNKSt6vectorI12sum_operatorSaIS0_EE4sizeEv>
 801cf5a:	4604      	mov	r4, r0
 801cf5c:	68f8      	ldr	r0, [r7, #12]
 801cf5e:	f7ef fed5 	bl	800cd0c <_ZNKSt6vectorI12sum_operatorSaIS0_EE4sizeEv>
 801cf62:	4603      	mov	r3, r0
 801cf64:	613b      	str	r3, [r7, #16]
 801cf66:	f107 0208 	add.w	r2, r7, #8
 801cf6a:	f107 0310 	add.w	r3, r7, #16
 801cf6e:	4611      	mov	r1, r2
 801cf70:	4618      	mov	r0, r3
 801cf72:	f7f8 ffa8 	bl	8015ec6 <_ZSt3maxIjERKT_S2_S2_>
 801cf76:	4603      	mov	r3, r0
 801cf78:	681b      	ldr	r3, [r3, #0]
 801cf7a:	4423      	add	r3, r4
 801cf7c:	617b      	str	r3, [r7, #20]
	return (__len < size() || __len > max_size()) ? max_size() : __len;
 801cf7e:	68f8      	ldr	r0, [r7, #12]
 801cf80:	f7ef fec4 	bl	800cd0c <_ZNKSt6vectorI12sum_operatorSaIS0_EE4sizeEv>
 801cf84:	4602      	mov	r2, r0
 801cf86:	697b      	ldr	r3, [r7, #20]
 801cf88:	4293      	cmp	r3, r2
 801cf8a:	d306      	bcc.n	801cf9a <_ZNKSt6vectorI12sum_operatorSaIS0_EE12_M_check_lenEjPKc+0x7a>
 801cf8c:	68f8      	ldr	r0, [r7, #12]
 801cf8e:	f000 fb2c 	bl	801d5ea <_ZNKSt6vectorI12sum_operatorSaIS0_EE8max_sizeEv>
 801cf92:	4602      	mov	r2, r0
 801cf94:	697b      	ldr	r3, [r7, #20]
 801cf96:	4293      	cmp	r3, r2
 801cf98:	d904      	bls.n	801cfa4 <_ZNKSt6vectorI12sum_operatorSaIS0_EE12_M_check_lenEjPKc+0x84>
 801cf9a:	68f8      	ldr	r0, [r7, #12]
 801cf9c:	f000 fb25 	bl	801d5ea <_ZNKSt6vectorI12sum_operatorSaIS0_EE8max_sizeEv>
 801cfa0:	4603      	mov	r3, r0
 801cfa2:	e000      	b.n	801cfa6 <_ZNKSt6vectorI12sum_operatorSaIS0_EE12_M_check_lenEjPKc+0x86>
 801cfa4:	697b      	ldr	r3, [r7, #20]
      }
 801cfa6:	4618      	mov	r0, r3
 801cfa8:	371c      	adds	r7, #28
 801cfaa:	46bd      	mov	sp, r7
 801cfac:	bd90      	pop	{r4, r7, pc}

0801cfae <_ZNSt6vectorI12sum_operatorSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 801cfae:	b580      	push	{r7, lr}
 801cfb0:	b084      	sub	sp, #16
 801cfb2:	af00      	add	r7, sp, #0
 801cfb4:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_start); }
 801cfb6:	687a      	ldr	r2, [r7, #4]
 801cfb8:	f107 030c 	add.w	r3, r7, #12
 801cfbc:	4611      	mov	r1, r2
 801cfbe:	4618      	mov	r0, r3
 801cfc0:	f7ff ff9e 	bl	801cf00 <_ZN9__gnu_cxx17__normal_iteratorIP12sum_operatorSt6vectorIS1_SaIS1_EEEC1ERKS2_>
 801cfc4:	68fb      	ldr	r3, [r7, #12]
 801cfc6:	4618      	mov	r0, r3
 801cfc8:	3710      	adds	r7, #16
 801cfca:	46bd      	mov	sp, r7
 801cfcc:	bd80      	pop	{r7, pc}

0801cfce <_ZN9__gnu_cxxmiIP12sum_operatorSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_>:
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
 801cfce:	b590      	push	{r4, r7, lr}
 801cfd0:	b083      	sub	sp, #12
 801cfd2:	af00      	add	r7, sp, #0
 801cfd4:	6078      	str	r0, [r7, #4]
 801cfd6:	6039      	str	r1, [r7, #0]
    { return __lhs.base() - __rhs.base(); }
 801cfd8:	6878      	ldr	r0, [r7, #4]
 801cfda:	f000 f834 	bl	801d046 <_ZNK9__gnu_cxx17__normal_iteratorIP12sum_operatorSt6vectorIS1_SaIS1_EEE4baseEv>
 801cfde:	4603      	mov	r3, r0
 801cfe0:	681c      	ldr	r4, [r3, #0]
 801cfe2:	6838      	ldr	r0, [r7, #0]
 801cfe4:	f000 f82f 	bl	801d046 <_ZNK9__gnu_cxx17__normal_iteratorIP12sum_operatorSt6vectorIS1_SaIS1_EEE4baseEv>
 801cfe8:	4603      	mov	r3, r0
 801cfea:	681b      	ldr	r3, [r3, #0]
 801cfec:	1ae3      	subs	r3, r4, r3
 801cfee:	4618      	mov	r0, r3
 801cff0:	370c      	adds	r7, #12
 801cff2:	46bd      	mov	sp, r7
 801cff4:	bd90      	pop	{r4, r7, pc}

0801cff6 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE11_M_allocateEj>:
      _M_allocate(size_t __n)
 801cff6:	b580      	push	{r7, lr}
 801cff8:	b082      	sub	sp, #8
 801cffa:	af00      	add	r7, sp, #0
 801cffc:	6078      	str	r0, [r7, #4]
 801cffe:	6039      	str	r1, [r7, #0]
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 801d000:	683b      	ldr	r3, [r7, #0]
 801d002:	2b00      	cmp	r3, #0
 801d004:	d006      	beq.n	801d014 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE11_M_allocateEj+0x1e>
 801d006:	687b      	ldr	r3, [r7, #4]
 801d008:	6839      	ldr	r1, [r7, #0]
 801d00a:	4618      	mov	r0, r3
 801d00c:	f000 fafe 	bl	801d60c <_ZNSt16allocator_traitsISaI12sum_operatorEE8allocateERS1_j>
 801d010:	4603      	mov	r3, r0
 801d012:	e000      	b.n	801d016 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE11_M_allocateEj+0x20>
 801d014:	2300      	movs	r3, #0
      }
 801d016:	4618      	mov	r0, r3
 801d018:	3708      	adds	r7, #8
 801d01a:	46bd      	mov	sp, r7
 801d01c:	bd80      	pop	{r7, pc}

0801d01e <_ZNSt6vectorI12sum_operatorSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
 801d01e:	b590      	push	{r4, r7, lr}
 801d020:	b089      	sub	sp, #36	; 0x24
 801d022:	af02      	add	r7, sp, #8
 801d024:	60f8      	str	r0, [r7, #12]
 801d026:	60b9      	str	r1, [r7, #8]
 801d028:	607a      	str	r2, [r7, #4]
 801d02a:	603b      	str	r3, [r7, #0]
	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
 801d02c:	f88d 4000 	strb.w	r4, [sp]
 801d030:	683b      	ldr	r3, [r7, #0]
 801d032:	687a      	ldr	r2, [r7, #4]
 801d034:	68b9      	ldr	r1, [r7, #8]
 801d036:	68f8      	ldr	r0, [r7, #12]
 801d038:	f000 faf7 	bl	801d62a <_ZNSt6vectorI12sum_operatorSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE>
 801d03c:	4603      	mov	r3, r0
      }
 801d03e:	4618      	mov	r0, r3
 801d040:	371c      	adds	r7, #28
 801d042:	46bd      	mov	sp, r7
 801d044:	bd90      	pop	{r4, r7, pc}

0801d046 <_ZNK9__gnu_cxx17__normal_iteratorIP12sum_operatorSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
 801d046:	b480      	push	{r7}
 801d048:	b083      	sub	sp, #12
 801d04a:	af00      	add	r7, sp, #0
 801d04c:	6078      	str	r0, [r7, #4]
      { return _M_current; }
 801d04e:	687b      	ldr	r3, [r7, #4]
 801d050:	4618      	mov	r0, r3
 801d052:	370c      	adds	r7, #12
 801d054:	46bd      	mov	sp, r7
 801d056:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d05a:	4770      	bx	lr

0801d05c <_ZNK9__gnu_cxx17__normal_iteratorIP12sum_operatorSt6vectorIS1_SaIS1_EEEmiEi>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
 801d05c:	b580      	push	{r7, lr}
 801d05e:	b084      	sub	sp, #16
 801d060:	af00      	add	r7, sp, #0
 801d062:	6078      	str	r0, [r7, #4]
 801d064:	6039      	str	r1, [r7, #0]
      { return __normal_iterator(_M_current - __n); }
 801d066:	687b      	ldr	r3, [r7, #4]
 801d068:	681a      	ldr	r2, [r3, #0]
 801d06a:	683b      	ldr	r3, [r7, #0]
 801d06c:	425b      	negs	r3, r3
 801d06e:	4413      	add	r3, r2
 801d070:	60fb      	str	r3, [r7, #12]
 801d072:	f107 020c 	add.w	r2, r7, #12
 801d076:	f107 0308 	add.w	r3, r7, #8
 801d07a:	4611      	mov	r1, r2
 801d07c:	4618      	mov	r0, r3
 801d07e:	f7ff ff3f 	bl	801cf00 <_ZN9__gnu_cxx17__normal_iteratorIP12sum_operatorSt6vectorIS1_SaIS1_EEEC1ERKS2_>
 801d082:	68bb      	ldr	r3, [r7, #8]
 801d084:	4618      	mov	r0, r3
 801d086:	3710      	adds	r7, #16
 801d088:	46bd      	mov	sp, r7
 801d08a:	bd80      	pop	{r7, pc}

0801d08c <_ZNK9__gnu_cxx17__normal_iteratorIP12sum_operatorSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
 801d08c:	b480      	push	{r7}
 801d08e:	b083      	sub	sp, #12
 801d090:	af00      	add	r7, sp, #0
 801d092:	6078      	str	r0, [r7, #4]
      { return *_M_current; }
 801d094:	687b      	ldr	r3, [r7, #4]
 801d096:	681b      	ldr	r3, [r3, #0]
 801d098:	4618      	mov	r0, r3
 801d09a:	370c      	adds	r7, #12
 801d09c:	46bd      	mov	sp, r7
 801d09e:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d0a2:	4770      	bx	lr

0801d0a4 <_ZN9__gnu_cxx13new_allocatorIP19Multiply_expressionE9constructIS2_JS2_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 801d0a4:	b590      	push	{r4, r7, lr}
 801d0a6:	b085      	sub	sp, #20
 801d0a8:	af00      	add	r7, sp, #0
 801d0aa:	60f8      	str	r0, [r7, #12]
 801d0ac:	60b9      	str	r1, [r7, #8]
 801d0ae:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 801d0b0:	6878      	ldr	r0, [r7, #4]
 801d0b2:	f7ff fb18 	bl	801c6e6 <_ZSt7forwardIP19Multiply_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801d0b6:	4603      	mov	r3, r0
 801d0b8:	681c      	ldr	r4, [r3, #0]
 801d0ba:	68bb      	ldr	r3, [r7, #8]
 801d0bc:	4619      	mov	r1, r3
 801d0be:	2004      	movs	r0, #4
 801d0c0:	f7e3 ffcb 	bl	800105a <_ZnwjPv>
 801d0c4:	4603      	mov	r3, r0
 801d0c6:	601c      	str	r4, [r3, #0]
 801d0c8:	bf00      	nop
 801d0ca:	3714      	adds	r7, #20
 801d0cc:	46bd      	mov	sp, r7
 801d0ce:	bd90      	pop	{r4, r7, pc}

0801d0d0 <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE12_M_check_lenEjPKc>:
      _M_check_len(size_type __n, const char* __s) const
 801d0d0:	b590      	push	{r4, r7, lr}
 801d0d2:	b087      	sub	sp, #28
 801d0d4:	af00      	add	r7, sp, #0
 801d0d6:	60f8      	str	r0, [r7, #12]
 801d0d8:	60b9      	str	r1, [r7, #8]
 801d0da:	607a      	str	r2, [r7, #4]
	if (max_size() - size() < __n)
 801d0dc:	68f8      	ldr	r0, [r7, #12]
 801d0de:	f000 fab6 	bl	801d64e <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE8max_sizeEv>
 801d0e2:	4604      	mov	r4, r0
 801d0e4:	68f8      	ldr	r0, [r7, #12]
 801d0e6:	f000 fac3 	bl	801d670 <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE4sizeEv>
 801d0ea:	4603      	mov	r3, r0
 801d0ec:	1ae2      	subs	r2, r4, r3
 801d0ee:	68bb      	ldr	r3, [r7, #8]
 801d0f0:	429a      	cmp	r2, r3
 801d0f2:	bf34      	ite	cc
 801d0f4:	2301      	movcc	r3, #1
 801d0f6:	2300      	movcs	r3, #0
 801d0f8:	b2db      	uxtb	r3, r3
 801d0fa:	2b00      	cmp	r3, #0
 801d0fc:	d002      	beq.n	801d104 <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE12_M_check_lenEjPKc+0x34>
	  __throw_length_error(__N(__s));
 801d0fe:	6878      	ldr	r0, [r7, #4]
 801d100:	f006 fac7 	bl	8023692 <_ZSt20__throw_length_errorPKc>
	const size_type __len = size() + (std::max)(size(), __n);
 801d104:	68f8      	ldr	r0, [r7, #12]
 801d106:	f000 fab3 	bl	801d670 <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE4sizeEv>
 801d10a:	4604      	mov	r4, r0
 801d10c:	68f8      	ldr	r0, [r7, #12]
 801d10e:	f000 faaf 	bl	801d670 <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE4sizeEv>
 801d112:	4603      	mov	r3, r0
 801d114:	613b      	str	r3, [r7, #16]
 801d116:	f107 0208 	add.w	r2, r7, #8
 801d11a:	f107 0310 	add.w	r3, r7, #16
 801d11e:	4611      	mov	r1, r2
 801d120:	4618      	mov	r0, r3
 801d122:	f7f8 fed0 	bl	8015ec6 <_ZSt3maxIjERKT_S2_S2_>
 801d126:	4603      	mov	r3, r0
 801d128:	681b      	ldr	r3, [r3, #0]
 801d12a:	4423      	add	r3, r4
 801d12c:	617b      	str	r3, [r7, #20]
	return (__len < size() || __len > max_size()) ? max_size() : __len;
 801d12e:	68f8      	ldr	r0, [r7, #12]
 801d130:	f000 fa9e 	bl	801d670 <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE4sizeEv>
 801d134:	4602      	mov	r2, r0
 801d136:	697b      	ldr	r3, [r7, #20]
 801d138:	4293      	cmp	r3, r2
 801d13a:	d306      	bcc.n	801d14a <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE12_M_check_lenEjPKc+0x7a>
 801d13c:	68f8      	ldr	r0, [r7, #12]
 801d13e:	f000 fa86 	bl	801d64e <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE8max_sizeEv>
 801d142:	4602      	mov	r2, r0
 801d144:	697b      	ldr	r3, [r7, #20]
 801d146:	4293      	cmp	r3, r2
 801d148:	d904      	bls.n	801d154 <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE12_M_check_lenEjPKc+0x84>
 801d14a:	68f8      	ldr	r0, [r7, #12]
 801d14c:	f000 fa7f 	bl	801d64e <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE8max_sizeEv>
 801d150:	4603      	mov	r3, r0
 801d152:	e000      	b.n	801d156 <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE12_M_check_lenEjPKc+0x86>
 801d154:	697b      	ldr	r3, [r7, #20]
      }
 801d156:	4618      	mov	r0, r3
 801d158:	371c      	adds	r7, #28
 801d15a:	46bd      	mov	sp, r7
 801d15c:	bd90      	pop	{r4, r7, pc}

0801d15e <_ZN9__gnu_cxxmiIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>:
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
 801d15e:	b590      	push	{r4, r7, lr}
 801d160:	b083      	sub	sp, #12
 801d162:	af00      	add	r7, sp, #0
 801d164:	6078      	str	r0, [r7, #4]
 801d166:	6039      	str	r1, [r7, #0]
    { return __lhs.base() - __rhs.base(); }
 801d168:	6878      	ldr	r0, [r7, #4]
 801d16a:	f7ed fd2e 	bl	800abca <_ZNK9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801d16e:	4603      	mov	r3, r0
 801d170:	681c      	ldr	r4, [r3, #0]
 801d172:	6838      	ldr	r0, [r7, #0]
 801d174:	f7ed fd29 	bl	800abca <_ZNK9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801d178:	4603      	mov	r3, r0
 801d17a:	681b      	ldr	r3, [r3, #0]
 801d17c:	1ae3      	subs	r3, r4, r3
 801d17e:	109b      	asrs	r3, r3, #2
 801d180:	4618      	mov	r0, r3
 801d182:	370c      	adds	r7, #12
 801d184:	46bd      	mov	sp, r7
 801d186:	bd90      	pop	{r4, r7, pc}

0801d188 <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE11_M_allocateEj>:
      _M_allocate(size_t __n)
 801d188:	b580      	push	{r7, lr}
 801d18a:	b082      	sub	sp, #8
 801d18c:	af00      	add	r7, sp, #0
 801d18e:	6078      	str	r0, [r7, #4]
 801d190:	6039      	str	r1, [r7, #0]
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 801d192:	683b      	ldr	r3, [r7, #0]
 801d194:	2b00      	cmp	r3, #0
 801d196:	d006      	beq.n	801d1a6 <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE11_M_allocateEj+0x1e>
 801d198:	687b      	ldr	r3, [r7, #4]
 801d19a:	6839      	ldr	r1, [r7, #0]
 801d19c:	4618      	mov	r0, r3
 801d19e:	f000 fa77 	bl	801d690 <_ZNSt16allocator_traitsISaIP19Multiply_expressionEE8allocateERS2_j>
 801d1a2:	4603      	mov	r3, r0
 801d1a4:	e000      	b.n	801d1a8 <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE11_M_allocateEj+0x20>
 801d1a6:	2300      	movs	r3, #0
      }
 801d1a8:	4618      	mov	r0, r3
 801d1aa:	3708      	adds	r7, #8
 801d1ac:	46bd      	mov	sp, r7
 801d1ae:	bd80      	pop	{r7, pc}

0801d1b0 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
 801d1b0:	b590      	push	{r4, r7, lr}
 801d1b2:	b089      	sub	sp, #36	; 0x24
 801d1b4:	af02      	add	r7, sp, #8
 801d1b6:	60f8      	str	r0, [r7, #12]
 801d1b8:	60b9      	str	r1, [r7, #8]
 801d1ba:	607a      	str	r2, [r7, #4]
 801d1bc:	603b      	str	r3, [r7, #0]
	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
 801d1be:	f88d 4000 	strb.w	r4, [sp]
 801d1c2:	683b      	ldr	r3, [r7, #0]
 801d1c4:	687a      	ldr	r2, [r7, #4]
 801d1c6:	68b9      	ldr	r1, [r7, #8]
 801d1c8:	68f8      	ldr	r0, [r7, #12]
 801d1ca:	f000 fa70 	bl	801d6ae <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>
 801d1ce:	4603      	mov	r3, r0
      }
 801d1d0:	4618      	mov	r0, r3
 801d1d2:	371c      	adds	r7, #28
 801d1d4:	46bd      	mov	sp, r7
 801d1d6:	bd90      	pop	{r4, r7, pc}

0801d1d8 <_ZNK9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEmiEi>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
 801d1d8:	b580      	push	{r7, lr}
 801d1da:	b084      	sub	sp, #16
 801d1dc:	af00      	add	r7, sp, #0
 801d1de:	6078      	str	r0, [r7, #4]
 801d1e0:	6039      	str	r1, [r7, #0]
      { return __normal_iterator(_M_current - __n); }
 801d1e2:	687b      	ldr	r3, [r7, #4]
 801d1e4:	681a      	ldr	r2, [r3, #0]
 801d1e6:	683b      	ldr	r3, [r7, #0]
 801d1e8:	009b      	lsls	r3, r3, #2
 801d1ea:	425b      	negs	r3, r3
 801d1ec:	4413      	add	r3, r2
 801d1ee:	60fb      	str	r3, [r7, #12]
 801d1f0:	f107 020c 	add.w	r2, r7, #12
 801d1f4:	f107 0308 	add.w	r3, r7, #8
 801d1f8:	4611      	mov	r1, r2
 801d1fa:	4618      	mov	r0, r3
 801d1fc:	f7ed fcd5 	bl	800abaa <_ZN9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 801d200:	68bb      	ldr	r3, [r7, #8]
 801d202:	4618      	mov	r0, r3
 801d204:	3710      	adds	r7, #16
 801d206:	46bd      	mov	sp, r7
 801d208:	bd80      	pop	{r7, pc}

0801d20a <_ZN9__gnu_cxx13new_allocatorIP18Compare_expressionE9constructIS2_JS2_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 801d20a:	b590      	push	{r4, r7, lr}
 801d20c:	b085      	sub	sp, #20
 801d20e:	af00      	add	r7, sp, #0
 801d210:	60f8      	str	r0, [r7, #12]
 801d212:	60b9      	str	r1, [r7, #8]
 801d214:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 801d216:	6878      	ldr	r0, [r7, #4]
 801d218:	f7ff fb26 	bl	801c868 <_ZSt7forwardIP18Compare_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801d21c:	4603      	mov	r3, r0
 801d21e:	681c      	ldr	r4, [r3, #0]
 801d220:	68bb      	ldr	r3, [r7, #8]
 801d222:	4619      	mov	r1, r3
 801d224:	2004      	movs	r0, #4
 801d226:	f7e3 ff18 	bl	800105a <_ZnwjPv>
 801d22a:	4603      	mov	r3, r0
 801d22c:	601c      	str	r4, [r3, #0]
 801d22e:	bf00      	nop
 801d230:	3714      	adds	r7, #20
 801d232:	46bd      	mov	sp, r7
 801d234:	bd90      	pop	{r4, r7, pc}

0801d236 <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE12_M_check_lenEjPKc>:
      _M_check_len(size_type __n, const char* __s) const
 801d236:	b590      	push	{r4, r7, lr}
 801d238:	b087      	sub	sp, #28
 801d23a:	af00      	add	r7, sp, #0
 801d23c:	60f8      	str	r0, [r7, #12]
 801d23e:	60b9      	str	r1, [r7, #8]
 801d240:	607a      	str	r2, [r7, #4]
	if (max_size() - size() < __n)
 801d242:	68f8      	ldr	r0, [r7, #12]
 801d244:	f000 fa45 	bl	801d6d2 <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE8max_sizeEv>
 801d248:	4604      	mov	r4, r0
 801d24a:	68f8      	ldr	r0, [r7, #12]
 801d24c:	f7ef fd2e 	bl	800ccac <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE4sizeEv>
 801d250:	4603      	mov	r3, r0
 801d252:	1ae2      	subs	r2, r4, r3
 801d254:	68bb      	ldr	r3, [r7, #8]
 801d256:	429a      	cmp	r2, r3
 801d258:	bf34      	ite	cc
 801d25a:	2301      	movcc	r3, #1
 801d25c:	2300      	movcs	r3, #0
 801d25e:	b2db      	uxtb	r3, r3
 801d260:	2b00      	cmp	r3, #0
 801d262:	d002      	beq.n	801d26a <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE12_M_check_lenEjPKc+0x34>
	  __throw_length_error(__N(__s));
 801d264:	6878      	ldr	r0, [r7, #4]
 801d266:	f006 fa14 	bl	8023692 <_ZSt20__throw_length_errorPKc>
	const size_type __len = size() + (std::max)(size(), __n);
 801d26a:	68f8      	ldr	r0, [r7, #12]
 801d26c:	f7ef fd1e 	bl	800ccac <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE4sizeEv>
 801d270:	4604      	mov	r4, r0
 801d272:	68f8      	ldr	r0, [r7, #12]
 801d274:	f7ef fd1a 	bl	800ccac <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE4sizeEv>
 801d278:	4603      	mov	r3, r0
 801d27a:	613b      	str	r3, [r7, #16]
 801d27c:	f107 0208 	add.w	r2, r7, #8
 801d280:	f107 0310 	add.w	r3, r7, #16
 801d284:	4611      	mov	r1, r2
 801d286:	4618      	mov	r0, r3
 801d288:	f7f8 fe1d 	bl	8015ec6 <_ZSt3maxIjERKT_S2_S2_>
 801d28c:	4603      	mov	r3, r0
 801d28e:	681b      	ldr	r3, [r3, #0]
 801d290:	4423      	add	r3, r4
 801d292:	617b      	str	r3, [r7, #20]
	return (__len < size() || __len > max_size()) ? max_size() : __len;
 801d294:	68f8      	ldr	r0, [r7, #12]
 801d296:	f7ef fd09 	bl	800ccac <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE4sizeEv>
 801d29a:	4602      	mov	r2, r0
 801d29c:	697b      	ldr	r3, [r7, #20]
 801d29e:	4293      	cmp	r3, r2
 801d2a0:	d306      	bcc.n	801d2b0 <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE12_M_check_lenEjPKc+0x7a>
 801d2a2:	68f8      	ldr	r0, [r7, #12]
 801d2a4:	f000 fa15 	bl	801d6d2 <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE8max_sizeEv>
 801d2a8:	4602      	mov	r2, r0
 801d2aa:	697b      	ldr	r3, [r7, #20]
 801d2ac:	4293      	cmp	r3, r2
 801d2ae:	d904      	bls.n	801d2ba <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE12_M_check_lenEjPKc+0x84>
 801d2b0:	68f8      	ldr	r0, [r7, #12]
 801d2b2:	f000 fa0e 	bl	801d6d2 <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE8max_sizeEv>
 801d2b6:	4603      	mov	r3, r0
 801d2b8:	e000      	b.n	801d2bc <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE12_M_check_lenEjPKc+0x86>
 801d2ba:	697b      	ldr	r3, [r7, #20]
      }
 801d2bc:	4618      	mov	r0, r3
 801d2be:	371c      	adds	r7, #28
 801d2c0:	46bd      	mov	sp, r7
 801d2c2:	bd90      	pop	{r4, r7, pc}

0801d2c4 <_ZN9__gnu_cxxmiIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>:
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
 801d2c4:	b590      	push	{r4, r7, lr}
 801d2c6:	b083      	sub	sp, #12
 801d2c8:	af00      	add	r7, sp, #0
 801d2ca:	6078      	str	r0, [r7, #4]
 801d2cc:	6039      	str	r1, [r7, #0]
    { return __lhs.base() - __rhs.base(); }
 801d2ce:	6878      	ldr	r0, [r7, #4]
 801d2d0:	f7ed fcd4 	bl	800ac7c <_ZNK9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801d2d4:	4603      	mov	r3, r0
 801d2d6:	681c      	ldr	r4, [r3, #0]
 801d2d8:	6838      	ldr	r0, [r7, #0]
 801d2da:	f7ed fccf 	bl	800ac7c <_ZNK9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801d2de:	4603      	mov	r3, r0
 801d2e0:	681b      	ldr	r3, [r3, #0]
 801d2e2:	1ae3      	subs	r3, r4, r3
 801d2e4:	109b      	asrs	r3, r3, #2
 801d2e6:	4618      	mov	r0, r3
 801d2e8:	370c      	adds	r7, #12
 801d2ea:	46bd      	mov	sp, r7
 801d2ec:	bd90      	pop	{r4, r7, pc}

0801d2ee <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE11_M_allocateEj>:
      _M_allocate(size_t __n)
 801d2ee:	b580      	push	{r7, lr}
 801d2f0:	b082      	sub	sp, #8
 801d2f2:	af00      	add	r7, sp, #0
 801d2f4:	6078      	str	r0, [r7, #4]
 801d2f6:	6039      	str	r1, [r7, #0]
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 801d2f8:	683b      	ldr	r3, [r7, #0]
 801d2fa:	2b00      	cmp	r3, #0
 801d2fc:	d006      	beq.n	801d30c <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE11_M_allocateEj+0x1e>
 801d2fe:	687b      	ldr	r3, [r7, #4]
 801d300:	6839      	ldr	r1, [r7, #0]
 801d302:	4618      	mov	r0, r3
 801d304:	f000 f9f6 	bl	801d6f4 <_ZNSt16allocator_traitsISaIP18Compare_expressionEE8allocateERS2_j>
 801d308:	4603      	mov	r3, r0
 801d30a:	e000      	b.n	801d30e <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE11_M_allocateEj+0x20>
 801d30c:	2300      	movs	r3, #0
      }
 801d30e:	4618      	mov	r0, r3
 801d310:	3708      	adds	r7, #8
 801d312:	46bd      	mov	sp, r7
 801d314:	bd80      	pop	{r7, pc}

0801d316 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
 801d316:	b590      	push	{r4, r7, lr}
 801d318:	b089      	sub	sp, #36	; 0x24
 801d31a:	af02      	add	r7, sp, #8
 801d31c:	60f8      	str	r0, [r7, #12]
 801d31e:	60b9      	str	r1, [r7, #8]
 801d320:	607a      	str	r2, [r7, #4]
 801d322:	603b      	str	r3, [r7, #0]
	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
 801d324:	f88d 4000 	strb.w	r4, [sp]
 801d328:	683b      	ldr	r3, [r7, #0]
 801d32a:	687a      	ldr	r2, [r7, #4]
 801d32c:	68b9      	ldr	r1, [r7, #8]
 801d32e:	68f8      	ldr	r0, [r7, #12]
 801d330:	f000 f9ef 	bl	801d712 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>
 801d334:	4603      	mov	r3, r0
      }
 801d336:	4618      	mov	r0, r3
 801d338:	371c      	adds	r7, #28
 801d33a:	46bd      	mov	sp, r7
 801d33c:	bd90      	pop	{r4, r7, pc}

0801d33e <_ZNK9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEmiEi>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
 801d33e:	b580      	push	{r7, lr}
 801d340:	b084      	sub	sp, #16
 801d342:	af00      	add	r7, sp, #0
 801d344:	6078      	str	r0, [r7, #4]
 801d346:	6039      	str	r1, [r7, #0]
      { return __normal_iterator(_M_current - __n); }
 801d348:	687b      	ldr	r3, [r7, #4]
 801d34a:	681a      	ldr	r2, [r3, #0]
 801d34c:	683b      	ldr	r3, [r7, #0]
 801d34e:	009b      	lsls	r3, r3, #2
 801d350:	425b      	negs	r3, r3
 801d352:	4413      	add	r3, r2
 801d354:	60fb      	str	r3, [r7, #12]
 801d356:	f107 020c 	add.w	r2, r7, #12
 801d35a:	f107 0308 	add.w	r3, r7, #8
 801d35e:	4611      	mov	r1, r2
 801d360:	4618      	mov	r0, r3
 801d362:	f7ed fc7b 	bl	800ac5c <_ZN9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 801d366:	68bb      	ldr	r3, [r7, #8]
 801d368:	4618      	mov	r0, r3
 801d36a:	3710      	adds	r7, #16
 801d36c:	46bd      	mov	sp, r7
 801d36e:	bd80      	pop	{r7, pc}

0801d370 <_ZN9__gnu_cxx13new_allocatorIP14And_expressionE9constructIS2_JS2_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 801d370:	b590      	push	{r4, r7, lr}
 801d372:	b085      	sub	sp, #20
 801d374:	af00      	add	r7, sp, #0
 801d376:	60f8      	str	r0, [r7, #12]
 801d378:	60b9      	str	r1, [r7, #8]
 801d37a:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 801d37c:	6878      	ldr	r0, [r7, #4]
 801d37e:	f7ff fb33 	bl	801c9e8 <_ZSt7forwardIP14And_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801d382:	4603      	mov	r3, r0
 801d384:	681c      	ldr	r4, [r3, #0]
 801d386:	68bb      	ldr	r3, [r7, #8]
 801d388:	4619      	mov	r1, r3
 801d38a:	2004      	movs	r0, #4
 801d38c:	f7e3 fe65 	bl	800105a <_ZnwjPv>
 801d390:	4603      	mov	r3, r0
 801d392:	601c      	str	r4, [r3, #0]
 801d394:	bf00      	nop
 801d396:	3714      	adds	r7, #20
 801d398:	46bd      	mov	sp, r7
 801d39a:	bd90      	pop	{r4, r7, pc}

0801d39c <_ZNKSt6vectorIP14And_expressionSaIS1_EE12_M_check_lenEjPKc>:
      _M_check_len(size_type __n, const char* __s) const
 801d39c:	b590      	push	{r4, r7, lr}
 801d39e:	b087      	sub	sp, #28
 801d3a0:	af00      	add	r7, sp, #0
 801d3a2:	60f8      	str	r0, [r7, #12]
 801d3a4:	60b9      	str	r1, [r7, #8]
 801d3a6:	607a      	str	r2, [r7, #4]
	if (max_size() - size() < __n)
 801d3a8:	68f8      	ldr	r0, [r7, #12]
 801d3aa:	f000 f9c4 	bl	801d736 <_ZNKSt6vectorIP14And_expressionSaIS1_EE8max_sizeEv>
 801d3ae:	4604      	mov	r4, r0
 801d3b0:	68f8      	ldr	r0, [r7, #12]
 801d3b2:	f7ef fc38 	bl	800cc26 <_ZNKSt6vectorIP14And_expressionSaIS1_EE4sizeEv>
 801d3b6:	4603      	mov	r3, r0
 801d3b8:	1ae2      	subs	r2, r4, r3
 801d3ba:	68bb      	ldr	r3, [r7, #8]
 801d3bc:	429a      	cmp	r2, r3
 801d3be:	bf34      	ite	cc
 801d3c0:	2301      	movcc	r3, #1
 801d3c2:	2300      	movcs	r3, #0
 801d3c4:	b2db      	uxtb	r3, r3
 801d3c6:	2b00      	cmp	r3, #0
 801d3c8:	d002      	beq.n	801d3d0 <_ZNKSt6vectorIP14And_expressionSaIS1_EE12_M_check_lenEjPKc+0x34>
	  __throw_length_error(__N(__s));
 801d3ca:	6878      	ldr	r0, [r7, #4]
 801d3cc:	f006 f961 	bl	8023692 <_ZSt20__throw_length_errorPKc>
	const size_type __len = size() + (std::max)(size(), __n);
 801d3d0:	68f8      	ldr	r0, [r7, #12]
 801d3d2:	f7ef fc28 	bl	800cc26 <_ZNKSt6vectorIP14And_expressionSaIS1_EE4sizeEv>
 801d3d6:	4604      	mov	r4, r0
 801d3d8:	68f8      	ldr	r0, [r7, #12]
 801d3da:	f7ef fc24 	bl	800cc26 <_ZNKSt6vectorIP14And_expressionSaIS1_EE4sizeEv>
 801d3de:	4603      	mov	r3, r0
 801d3e0:	613b      	str	r3, [r7, #16]
 801d3e2:	f107 0208 	add.w	r2, r7, #8
 801d3e6:	f107 0310 	add.w	r3, r7, #16
 801d3ea:	4611      	mov	r1, r2
 801d3ec:	4618      	mov	r0, r3
 801d3ee:	f7f8 fd6a 	bl	8015ec6 <_ZSt3maxIjERKT_S2_S2_>
 801d3f2:	4603      	mov	r3, r0
 801d3f4:	681b      	ldr	r3, [r3, #0]
 801d3f6:	4423      	add	r3, r4
 801d3f8:	617b      	str	r3, [r7, #20]
	return (__len < size() || __len > max_size()) ? max_size() : __len;
 801d3fa:	68f8      	ldr	r0, [r7, #12]
 801d3fc:	f7ef fc13 	bl	800cc26 <_ZNKSt6vectorIP14And_expressionSaIS1_EE4sizeEv>
 801d400:	4602      	mov	r2, r0
 801d402:	697b      	ldr	r3, [r7, #20]
 801d404:	4293      	cmp	r3, r2
 801d406:	d306      	bcc.n	801d416 <_ZNKSt6vectorIP14And_expressionSaIS1_EE12_M_check_lenEjPKc+0x7a>
 801d408:	68f8      	ldr	r0, [r7, #12]
 801d40a:	f000 f994 	bl	801d736 <_ZNKSt6vectorIP14And_expressionSaIS1_EE8max_sizeEv>
 801d40e:	4602      	mov	r2, r0
 801d410:	697b      	ldr	r3, [r7, #20]
 801d412:	4293      	cmp	r3, r2
 801d414:	d904      	bls.n	801d420 <_ZNKSt6vectorIP14And_expressionSaIS1_EE12_M_check_lenEjPKc+0x84>
 801d416:	68f8      	ldr	r0, [r7, #12]
 801d418:	f000 f98d 	bl	801d736 <_ZNKSt6vectorIP14And_expressionSaIS1_EE8max_sizeEv>
 801d41c:	4603      	mov	r3, r0
 801d41e:	e000      	b.n	801d422 <_ZNKSt6vectorIP14And_expressionSaIS1_EE12_M_check_lenEjPKc+0x86>
 801d420:	697b      	ldr	r3, [r7, #20]
      }
 801d422:	4618      	mov	r0, r3
 801d424:	371c      	adds	r7, #28
 801d426:	46bd      	mov	sp, r7
 801d428:	bd90      	pop	{r4, r7, pc}

0801d42a <_ZN9__gnu_cxxmiIPP14And_expressionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>:
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
 801d42a:	b590      	push	{r4, r7, lr}
 801d42c:	b083      	sub	sp, #12
 801d42e:	af00      	add	r7, sp, #0
 801d430:	6078      	str	r0, [r7, #4]
 801d432:	6039      	str	r1, [r7, #0]
    { return __lhs.base() - __rhs.base(); }
 801d434:	6878      	ldr	r0, [r7, #4]
 801d436:	f7ed fc7a 	bl	800ad2e <_ZNK9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801d43a:	4603      	mov	r3, r0
 801d43c:	681c      	ldr	r4, [r3, #0]
 801d43e:	6838      	ldr	r0, [r7, #0]
 801d440:	f7ed fc75 	bl	800ad2e <_ZNK9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801d444:	4603      	mov	r3, r0
 801d446:	681b      	ldr	r3, [r3, #0]
 801d448:	1ae3      	subs	r3, r4, r3
 801d44a:	109b      	asrs	r3, r3, #2
 801d44c:	4618      	mov	r0, r3
 801d44e:	370c      	adds	r7, #12
 801d450:	46bd      	mov	sp, r7
 801d452:	bd90      	pop	{r4, r7, pc}

0801d454 <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE11_M_allocateEj>:
      _M_allocate(size_t __n)
 801d454:	b580      	push	{r7, lr}
 801d456:	b082      	sub	sp, #8
 801d458:	af00      	add	r7, sp, #0
 801d45a:	6078      	str	r0, [r7, #4]
 801d45c:	6039      	str	r1, [r7, #0]
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 801d45e:	683b      	ldr	r3, [r7, #0]
 801d460:	2b00      	cmp	r3, #0
 801d462:	d006      	beq.n	801d472 <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE11_M_allocateEj+0x1e>
 801d464:	687b      	ldr	r3, [r7, #4]
 801d466:	6839      	ldr	r1, [r7, #0]
 801d468:	4618      	mov	r0, r3
 801d46a:	f000 f975 	bl	801d758 <_ZNSt16allocator_traitsISaIP14And_expressionEE8allocateERS2_j>
 801d46e:	4603      	mov	r3, r0
 801d470:	e000      	b.n	801d474 <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE11_M_allocateEj+0x20>
 801d472:	2300      	movs	r3, #0
      }
 801d474:	4618      	mov	r0, r3
 801d476:	3708      	adds	r7, #8
 801d478:	46bd      	mov	sp, r7
 801d47a:	bd80      	pop	{r7, pc}

0801d47c <_ZNSt6vectorIP14And_expressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
 801d47c:	b590      	push	{r4, r7, lr}
 801d47e:	b089      	sub	sp, #36	; 0x24
 801d480:	af02      	add	r7, sp, #8
 801d482:	60f8      	str	r0, [r7, #12]
 801d484:	60b9      	str	r1, [r7, #8]
 801d486:	607a      	str	r2, [r7, #4]
 801d488:	603b      	str	r3, [r7, #0]
	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
 801d48a:	f88d 4000 	strb.w	r4, [sp]
 801d48e:	683b      	ldr	r3, [r7, #0]
 801d490:	687a      	ldr	r2, [r7, #4]
 801d492:	68b9      	ldr	r1, [r7, #8]
 801d494:	68f8      	ldr	r0, [r7, #12]
 801d496:	f000 f96e 	bl	801d776 <_ZNSt6vectorIP14And_expressionSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>
 801d49a:	4603      	mov	r3, r0
      }
 801d49c:	4618      	mov	r0, r3
 801d49e:	371c      	adds	r7, #28
 801d4a0:	46bd      	mov	sp, r7
 801d4a2:	bd90      	pop	{r4, r7, pc}

0801d4a4 <_ZNK9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEEmiEi>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
 801d4a4:	b580      	push	{r7, lr}
 801d4a6:	b084      	sub	sp, #16
 801d4a8:	af00      	add	r7, sp, #0
 801d4aa:	6078      	str	r0, [r7, #4]
 801d4ac:	6039      	str	r1, [r7, #0]
      { return __normal_iterator(_M_current - __n); }
 801d4ae:	687b      	ldr	r3, [r7, #4]
 801d4b0:	681a      	ldr	r2, [r3, #0]
 801d4b2:	683b      	ldr	r3, [r7, #0]
 801d4b4:	009b      	lsls	r3, r3, #2
 801d4b6:	425b      	negs	r3, r3
 801d4b8:	4413      	add	r3, r2
 801d4ba:	60fb      	str	r3, [r7, #12]
 801d4bc:	f107 020c 	add.w	r2, r7, #12
 801d4c0:	f107 0308 	add.w	r3, r7, #8
 801d4c4:	4611      	mov	r1, r2
 801d4c6:	4618      	mov	r0, r3
 801d4c8:	f7ed fc21 	bl	800ad0e <_ZN9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 801d4cc:	68bb      	ldr	r3, [r7, #8]
 801d4ce:	4618      	mov	r0, r3
 801d4d0:	3710      	adds	r7, #16
 801d4d2:	46bd      	mov	sp, r7
 801d4d4:	bd80      	pop	{r7, pc}

0801d4d6 <_ZSt11__addressofIP10ExpressionEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 801d4d6:	b480      	push	{r7}
 801d4d8:	b083      	sub	sp, #12
 801d4da:	af00      	add	r7, sp, #0
 801d4dc:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 801d4de:	687b      	ldr	r3, [r7, #4]
 801d4e0:	4618      	mov	r0, r3
 801d4e2:	370c      	adds	r7, #12
 801d4e4:	46bd      	mov	sp, r7
 801d4e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d4ea:	4770      	bx	lr

0801d4ec <_ZSt11__addressofIP17Primal_expressionEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 801d4ec:	b480      	push	{r7}
 801d4ee:	b083      	sub	sp, #12
 801d4f0:	af00      	add	r7, sp, #0
 801d4f2:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 801d4f4:	687b      	ldr	r3, [r7, #4]
 801d4f6:	4618      	mov	r0, r3
 801d4f8:	370c      	adds	r7, #12
 801d4fa:	46bd      	mov	sp, r7
 801d4fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d500:	4770      	bx	lr

0801d502 <_ZNKSt6vectorI13mult_operatorSaIS0_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
 801d502:	b580      	push	{r7, lr}
 801d504:	b082      	sub	sp, #8
 801d506:	af00      	add	r7, sp, #0
 801d508:	6078      	str	r0, [r7, #4]
      { return _S_max_size(_M_get_Tp_allocator()); }
 801d50a:	687b      	ldr	r3, [r7, #4]
 801d50c:	4618      	mov	r0, r3
 801d50e:	f000 f95e 	bl	801d7ce <_ZNKSt12_Vector_baseI13mult_operatorSaIS0_EE19_M_get_Tp_allocatorEv>
 801d512:	4603      	mov	r3, r0
 801d514:	4618      	mov	r0, r3
 801d516:	f000 f940 	bl	801d79a <_ZNSt6vectorI13mult_operatorSaIS0_EE11_S_max_sizeERKS1_>
 801d51a:	4603      	mov	r3, r0
 801d51c:	4618      	mov	r0, r3
 801d51e:	3708      	adds	r7, #8
 801d520:	46bd      	mov	sp, r7
 801d522:	bd80      	pop	{r7, pc}

0801d524 <_ZNSt16allocator_traitsISaI13mult_operatorEE8allocateERS1_j>:
      allocate(allocator_type& __a, size_type __n)
 801d524:	b580      	push	{r7, lr}
 801d526:	b082      	sub	sp, #8
 801d528:	af00      	add	r7, sp, #0
 801d52a:	6078      	str	r0, [r7, #4]
 801d52c:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 801d52e:	2200      	movs	r2, #0
 801d530:	6839      	ldr	r1, [r7, #0]
 801d532:	6878      	ldr	r0, [r7, #4]
 801d534:	f000 f956 	bl	801d7e4 <_ZN9__gnu_cxx13new_allocatorI13mult_operatorE8allocateEjPKv>
 801d538:	4603      	mov	r3, r0
 801d53a:	4618      	mov	r0, r3
 801d53c:	3708      	adds	r7, #8
 801d53e:	46bd      	mov	sp, r7
 801d540:	bd80      	pop	{r7, pc}

0801d542 <_ZNSt6vectorI13mult_operatorSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE>:
      _S_do_relocate(pointer __first, pointer __last, pointer __result,
 801d542:	b580      	push	{r7, lr}
 801d544:	b084      	sub	sp, #16
 801d546:	af00      	add	r7, sp, #0
 801d548:	60f8      	str	r0, [r7, #12]
 801d54a:	60b9      	str	r1, [r7, #8]
 801d54c:	607a      	str	r2, [r7, #4]
 801d54e:	603b      	str	r3, [r7, #0]
	return std::__relocate_a(__first, __last, __result, __alloc);
 801d550:	683b      	ldr	r3, [r7, #0]
 801d552:	687a      	ldr	r2, [r7, #4]
 801d554:	68b9      	ldr	r1, [r7, #8]
 801d556:	68f8      	ldr	r0, [r7, #12]
 801d558:	f000 f961 	bl	801d81e <_ZSt12__relocate_aIP13mult_operatorS1_SaIS0_EET0_T_S4_S3_RT1_>
 801d55c:	4603      	mov	r3, r0
      }
 801d55e:	4618      	mov	r0, r3
 801d560:	3710      	adds	r7, #16
 801d562:	46bd      	mov	sp, r7
 801d564:	bd80      	pop	{r7, pc}

0801d566 <_ZNKSt6vectorIP16Power_expressionSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
 801d566:	b580      	push	{r7, lr}
 801d568:	b082      	sub	sp, #8
 801d56a:	af00      	add	r7, sp, #0
 801d56c:	6078      	str	r0, [r7, #4]
      { return _S_max_size(_M_get_Tp_allocator()); }
 801d56e:	687b      	ldr	r3, [r7, #4]
 801d570:	4618      	mov	r0, r3
 801d572:	f000 f98b 	bl	801d88c <_ZNKSt12_Vector_baseIP16Power_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 801d576:	4603      	mov	r3, r0
 801d578:	4618      	mov	r0, r3
 801d57a:	f000 f96d 	bl	801d858 <_ZNSt6vectorIP16Power_expressionSaIS1_EE11_S_max_sizeERKS2_>
 801d57e:	4603      	mov	r3, r0
 801d580:	4618      	mov	r0, r3
 801d582:	3708      	adds	r7, #8
 801d584:	46bd      	mov	sp, r7
 801d586:	bd80      	pop	{r7, pc}

0801d588 <_ZNKSt6vectorIP16Power_expressionSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 801d588:	b480      	push	{r7}
 801d58a:	b083      	sub	sp, #12
 801d58c:	af00      	add	r7, sp, #0
 801d58e:	6078      	str	r0, [r7, #4]
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 801d590:	687b      	ldr	r3, [r7, #4]
 801d592:	685a      	ldr	r2, [r3, #4]
 801d594:	687b      	ldr	r3, [r7, #4]
 801d596:	681b      	ldr	r3, [r3, #0]
 801d598:	1ad3      	subs	r3, r2, r3
 801d59a:	109b      	asrs	r3, r3, #2
 801d59c:	4618      	mov	r0, r3
 801d59e:	370c      	adds	r7, #12
 801d5a0:	46bd      	mov	sp, r7
 801d5a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d5a6:	4770      	bx	lr

0801d5a8 <_ZNSt16allocator_traitsISaIP16Power_expressionEE8allocateERS2_j>:
      allocate(allocator_type& __a, size_type __n)
 801d5a8:	b580      	push	{r7, lr}
 801d5aa:	b082      	sub	sp, #8
 801d5ac:	af00      	add	r7, sp, #0
 801d5ae:	6078      	str	r0, [r7, #4]
 801d5b0:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 801d5b2:	2200      	movs	r2, #0
 801d5b4:	6839      	ldr	r1, [r7, #0]
 801d5b6:	6878      	ldr	r0, [r7, #4]
 801d5b8:	f000 f973 	bl	801d8a2 <_ZN9__gnu_cxx13new_allocatorIP16Power_expressionE8allocateEjPKv>
 801d5bc:	4603      	mov	r3, r0
 801d5be:	4618      	mov	r0, r3
 801d5c0:	3708      	adds	r7, #8
 801d5c2:	46bd      	mov	sp, r7
 801d5c4:	bd80      	pop	{r7, pc}

0801d5c6 <_ZNSt6vectorIP16Power_expressionSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>:
      _S_do_relocate(pointer __first, pointer __last, pointer __result,
 801d5c6:	b580      	push	{r7, lr}
 801d5c8:	b084      	sub	sp, #16
 801d5ca:	af00      	add	r7, sp, #0
 801d5cc:	60f8      	str	r0, [r7, #12]
 801d5ce:	60b9      	str	r1, [r7, #8]
 801d5d0:	607a      	str	r2, [r7, #4]
 801d5d2:	603b      	str	r3, [r7, #0]
	return std::__relocate_a(__first, __last, __result, __alloc);
 801d5d4:	683b      	ldr	r3, [r7, #0]
 801d5d6:	687a      	ldr	r2, [r7, #4]
 801d5d8:	68b9      	ldr	r1, [r7, #8]
 801d5da:	68f8      	ldr	r0, [r7, #12]
 801d5dc:	f000 f980 	bl	801d8e0 <_ZSt12__relocate_aIPP16Power_expressionS2_SaIS1_EET0_T_S5_S4_RT1_>
 801d5e0:	4603      	mov	r3, r0
      }
 801d5e2:	4618      	mov	r0, r3
 801d5e4:	3710      	adds	r7, #16
 801d5e6:	46bd      	mov	sp, r7
 801d5e8:	bd80      	pop	{r7, pc}

0801d5ea <_ZNKSt6vectorI12sum_operatorSaIS0_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
 801d5ea:	b580      	push	{r7, lr}
 801d5ec:	b082      	sub	sp, #8
 801d5ee:	af00      	add	r7, sp, #0
 801d5f0:	6078      	str	r0, [r7, #4]
      { return _S_max_size(_M_get_Tp_allocator()); }
 801d5f2:	687b      	ldr	r3, [r7, #4]
 801d5f4:	4618      	mov	r0, r3
 801d5f6:	f000 f9aa 	bl	801d94e <_ZNKSt12_Vector_baseI12sum_operatorSaIS0_EE19_M_get_Tp_allocatorEv>
 801d5fa:	4603      	mov	r3, r0
 801d5fc:	4618      	mov	r0, r3
 801d5fe:	f000 f98c 	bl	801d91a <_ZNSt6vectorI12sum_operatorSaIS0_EE11_S_max_sizeERKS1_>
 801d602:	4603      	mov	r3, r0
 801d604:	4618      	mov	r0, r3
 801d606:	3708      	adds	r7, #8
 801d608:	46bd      	mov	sp, r7
 801d60a:	bd80      	pop	{r7, pc}

0801d60c <_ZNSt16allocator_traitsISaI12sum_operatorEE8allocateERS1_j>:
      allocate(allocator_type& __a, size_type __n)
 801d60c:	b580      	push	{r7, lr}
 801d60e:	b082      	sub	sp, #8
 801d610:	af00      	add	r7, sp, #0
 801d612:	6078      	str	r0, [r7, #4]
 801d614:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 801d616:	2200      	movs	r2, #0
 801d618:	6839      	ldr	r1, [r7, #0]
 801d61a:	6878      	ldr	r0, [r7, #4]
 801d61c:	f000 f9a2 	bl	801d964 <_ZN9__gnu_cxx13new_allocatorI12sum_operatorE8allocateEjPKv>
 801d620:	4603      	mov	r3, r0
 801d622:	4618      	mov	r0, r3
 801d624:	3708      	adds	r7, #8
 801d626:	46bd      	mov	sp, r7
 801d628:	bd80      	pop	{r7, pc}

0801d62a <_ZNSt6vectorI12sum_operatorSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE>:
      _S_do_relocate(pointer __first, pointer __last, pointer __result,
 801d62a:	b580      	push	{r7, lr}
 801d62c:	b084      	sub	sp, #16
 801d62e:	af00      	add	r7, sp, #0
 801d630:	60f8      	str	r0, [r7, #12]
 801d632:	60b9      	str	r1, [r7, #8]
 801d634:	607a      	str	r2, [r7, #4]
 801d636:	603b      	str	r3, [r7, #0]
	return std::__relocate_a(__first, __last, __result, __alloc);
 801d638:	683b      	ldr	r3, [r7, #0]
 801d63a:	687a      	ldr	r2, [r7, #4]
 801d63c:	68b9      	ldr	r1, [r7, #8]
 801d63e:	68f8      	ldr	r0, [r7, #12]
 801d640:	f000 f9ad 	bl	801d99e <_ZSt12__relocate_aIP12sum_operatorS1_SaIS0_EET0_T_S4_S3_RT1_>
 801d644:	4603      	mov	r3, r0
      }
 801d646:	4618      	mov	r0, r3
 801d648:	3710      	adds	r7, #16
 801d64a:	46bd      	mov	sp, r7
 801d64c:	bd80      	pop	{r7, pc}

0801d64e <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
 801d64e:	b580      	push	{r7, lr}
 801d650:	b082      	sub	sp, #8
 801d652:	af00      	add	r7, sp, #0
 801d654:	6078      	str	r0, [r7, #4]
      { return _S_max_size(_M_get_Tp_allocator()); }
 801d656:	687b      	ldr	r3, [r7, #4]
 801d658:	4618      	mov	r0, r3
 801d65a:	f000 f9d7 	bl	801da0c <_ZNKSt12_Vector_baseIP19Multiply_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 801d65e:	4603      	mov	r3, r0
 801d660:	4618      	mov	r0, r3
 801d662:	f000 f9b9 	bl	801d9d8 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE11_S_max_sizeERKS2_>
 801d666:	4603      	mov	r3, r0
 801d668:	4618      	mov	r0, r3
 801d66a:	3708      	adds	r7, #8
 801d66c:	46bd      	mov	sp, r7
 801d66e:	bd80      	pop	{r7, pc}

0801d670 <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 801d670:	b480      	push	{r7}
 801d672:	b083      	sub	sp, #12
 801d674:	af00      	add	r7, sp, #0
 801d676:	6078      	str	r0, [r7, #4]
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 801d678:	687b      	ldr	r3, [r7, #4]
 801d67a:	685a      	ldr	r2, [r3, #4]
 801d67c:	687b      	ldr	r3, [r7, #4]
 801d67e:	681b      	ldr	r3, [r3, #0]
 801d680:	1ad3      	subs	r3, r2, r3
 801d682:	109b      	asrs	r3, r3, #2
 801d684:	4618      	mov	r0, r3
 801d686:	370c      	adds	r7, #12
 801d688:	46bd      	mov	sp, r7
 801d68a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d68e:	4770      	bx	lr

0801d690 <_ZNSt16allocator_traitsISaIP19Multiply_expressionEE8allocateERS2_j>:
      allocate(allocator_type& __a, size_type __n)
 801d690:	b580      	push	{r7, lr}
 801d692:	b082      	sub	sp, #8
 801d694:	af00      	add	r7, sp, #0
 801d696:	6078      	str	r0, [r7, #4]
 801d698:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 801d69a:	2200      	movs	r2, #0
 801d69c:	6839      	ldr	r1, [r7, #0]
 801d69e:	6878      	ldr	r0, [r7, #4]
 801d6a0:	f000 f9bf 	bl	801da22 <_ZN9__gnu_cxx13new_allocatorIP19Multiply_expressionE8allocateEjPKv>
 801d6a4:	4603      	mov	r3, r0
 801d6a6:	4618      	mov	r0, r3
 801d6a8:	3708      	adds	r7, #8
 801d6aa:	46bd      	mov	sp, r7
 801d6ac:	bd80      	pop	{r7, pc}

0801d6ae <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>:
      _S_do_relocate(pointer __first, pointer __last, pointer __result,
 801d6ae:	b580      	push	{r7, lr}
 801d6b0:	b084      	sub	sp, #16
 801d6b2:	af00      	add	r7, sp, #0
 801d6b4:	60f8      	str	r0, [r7, #12]
 801d6b6:	60b9      	str	r1, [r7, #8]
 801d6b8:	607a      	str	r2, [r7, #4]
 801d6ba:	603b      	str	r3, [r7, #0]
	return std::__relocate_a(__first, __last, __result, __alloc);
 801d6bc:	683b      	ldr	r3, [r7, #0]
 801d6be:	687a      	ldr	r2, [r7, #4]
 801d6c0:	68b9      	ldr	r1, [r7, #8]
 801d6c2:	68f8      	ldr	r0, [r7, #12]
 801d6c4:	f000 f9cc 	bl	801da60 <_ZSt12__relocate_aIPP19Multiply_expressionS2_SaIS1_EET0_T_S5_S4_RT1_>
 801d6c8:	4603      	mov	r3, r0
      }
 801d6ca:	4618      	mov	r0, r3
 801d6cc:	3710      	adds	r7, #16
 801d6ce:	46bd      	mov	sp, r7
 801d6d0:	bd80      	pop	{r7, pc}

0801d6d2 <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
 801d6d2:	b580      	push	{r7, lr}
 801d6d4:	b082      	sub	sp, #8
 801d6d6:	af00      	add	r7, sp, #0
 801d6d8:	6078      	str	r0, [r7, #4]
      { return _S_max_size(_M_get_Tp_allocator()); }
 801d6da:	687b      	ldr	r3, [r7, #4]
 801d6dc:	4618      	mov	r0, r3
 801d6de:	f000 f9f6 	bl	801dace <_ZNKSt12_Vector_baseIP18Compare_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 801d6e2:	4603      	mov	r3, r0
 801d6e4:	4618      	mov	r0, r3
 801d6e6:	f000 f9d8 	bl	801da9a <_ZNSt6vectorIP18Compare_expressionSaIS1_EE11_S_max_sizeERKS2_>
 801d6ea:	4603      	mov	r3, r0
 801d6ec:	4618      	mov	r0, r3
 801d6ee:	3708      	adds	r7, #8
 801d6f0:	46bd      	mov	sp, r7
 801d6f2:	bd80      	pop	{r7, pc}

0801d6f4 <_ZNSt16allocator_traitsISaIP18Compare_expressionEE8allocateERS2_j>:
      allocate(allocator_type& __a, size_type __n)
 801d6f4:	b580      	push	{r7, lr}
 801d6f6:	b082      	sub	sp, #8
 801d6f8:	af00      	add	r7, sp, #0
 801d6fa:	6078      	str	r0, [r7, #4]
 801d6fc:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 801d6fe:	2200      	movs	r2, #0
 801d700:	6839      	ldr	r1, [r7, #0]
 801d702:	6878      	ldr	r0, [r7, #4]
 801d704:	f000 f9ee 	bl	801dae4 <_ZN9__gnu_cxx13new_allocatorIP18Compare_expressionE8allocateEjPKv>
 801d708:	4603      	mov	r3, r0
 801d70a:	4618      	mov	r0, r3
 801d70c:	3708      	adds	r7, #8
 801d70e:	46bd      	mov	sp, r7
 801d710:	bd80      	pop	{r7, pc}

0801d712 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>:
      _S_do_relocate(pointer __first, pointer __last, pointer __result,
 801d712:	b580      	push	{r7, lr}
 801d714:	b084      	sub	sp, #16
 801d716:	af00      	add	r7, sp, #0
 801d718:	60f8      	str	r0, [r7, #12]
 801d71a:	60b9      	str	r1, [r7, #8]
 801d71c:	607a      	str	r2, [r7, #4]
 801d71e:	603b      	str	r3, [r7, #0]
	return std::__relocate_a(__first, __last, __result, __alloc);
 801d720:	683b      	ldr	r3, [r7, #0]
 801d722:	687a      	ldr	r2, [r7, #4]
 801d724:	68b9      	ldr	r1, [r7, #8]
 801d726:	68f8      	ldr	r0, [r7, #12]
 801d728:	f000 f9fb 	bl	801db22 <_ZSt12__relocate_aIPP18Compare_expressionS2_SaIS1_EET0_T_S5_S4_RT1_>
 801d72c:	4603      	mov	r3, r0
      }
 801d72e:	4618      	mov	r0, r3
 801d730:	3710      	adds	r7, #16
 801d732:	46bd      	mov	sp, r7
 801d734:	bd80      	pop	{r7, pc}

0801d736 <_ZNKSt6vectorIP14And_expressionSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
 801d736:	b580      	push	{r7, lr}
 801d738:	b082      	sub	sp, #8
 801d73a:	af00      	add	r7, sp, #0
 801d73c:	6078      	str	r0, [r7, #4]
      { return _S_max_size(_M_get_Tp_allocator()); }
 801d73e:	687b      	ldr	r3, [r7, #4]
 801d740:	4618      	mov	r0, r3
 801d742:	f000 fa25 	bl	801db90 <_ZNKSt12_Vector_baseIP14And_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 801d746:	4603      	mov	r3, r0
 801d748:	4618      	mov	r0, r3
 801d74a:	f000 fa07 	bl	801db5c <_ZNSt6vectorIP14And_expressionSaIS1_EE11_S_max_sizeERKS2_>
 801d74e:	4603      	mov	r3, r0
 801d750:	4618      	mov	r0, r3
 801d752:	3708      	adds	r7, #8
 801d754:	46bd      	mov	sp, r7
 801d756:	bd80      	pop	{r7, pc}

0801d758 <_ZNSt16allocator_traitsISaIP14And_expressionEE8allocateERS2_j>:
      allocate(allocator_type& __a, size_type __n)
 801d758:	b580      	push	{r7, lr}
 801d75a:	b082      	sub	sp, #8
 801d75c:	af00      	add	r7, sp, #0
 801d75e:	6078      	str	r0, [r7, #4]
 801d760:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 801d762:	2200      	movs	r2, #0
 801d764:	6839      	ldr	r1, [r7, #0]
 801d766:	6878      	ldr	r0, [r7, #4]
 801d768:	f000 fa1d 	bl	801dba6 <_ZN9__gnu_cxx13new_allocatorIP14And_expressionE8allocateEjPKv>
 801d76c:	4603      	mov	r3, r0
 801d76e:	4618      	mov	r0, r3
 801d770:	3708      	adds	r7, #8
 801d772:	46bd      	mov	sp, r7
 801d774:	bd80      	pop	{r7, pc}

0801d776 <_ZNSt6vectorIP14And_expressionSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>:
      _S_do_relocate(pointer __first, pointer __last, pointer __result,
 801d776:	b580      	push	{r7, lr}
 801d778:	b084      	sub	sp, #16
 801d77a:	af00      	add	r7, sp, #0
 801d77c:	60f8      	str	r0, [r7, #12]
 801d77e:	60b9      	str	r1, [r7, #8]
 801d780:	607a      	str	r2, [r7, #4]
 801d782:	603b      	str	r3, [r7, #0]
	return std::__relocate_a(__first, __last, __result, __alloc);
 801d784:	683b      	ldr	r3, [r7, #0]
 801d786:	687a      	ldr	r2, [r7, #4]
 801d788:	68b9      	ldr	r1, [r7, #8]
 801d78a:	68f8      	ldr	r0, [r7, #12]
 801d78c:	f000 fa2a 	bl	801dbe4 <_ZSt12__relocate_aIPP14And_expressionS2_SaIS1_EET0_T_S5_S4_RT1_>
 801d790:	4603      	mov	r3, r0
      }
 801d792:	4618      	mov	r0, r3
 801d794:	3710      	adds	r7, #16
 801d796:	46bd      	mov	sp, r7
 801d798:	bd80      	pop	{r7, pc}

0801d79a <_ZNSt6vectorI13mult_operatorSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
 801d79a:	b580      	push	{r7, lr}
 801d79c:	b084      	sub	sp, #16
 801d79e:	af00      	add	r7, sp, #0
 801d7a0:	6078      	str	r0, [r7, #4]
	const size_t __diffmax
 801d7a2:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 801d7a6:	60fb      	str	r3, [r7, #12]
	const size_t __allocmax = _Alloc_traits::max_size(__a);
 801d7a8:	6878      	ldr	r0, [r7, #4]
 801d7aa:	f000 fa38 	bl	801dc1e <_ZNSt16allocator_traitsISaI13mult_operatorEE8max_sizeERKS1_>
 801d7ae:	4603      	mov	r3, r0
 801d7b0:	60bb      	str	r3, [r7, #8]
	return (std::min)(__diffmax, __allocmax);
 801d7b2:	f107 0208 	add.w	r2, r7, #8
 801d7b6:	f107 030c 	add.w	r3, r7, #12
 801d7ba:	4611      	mov	r1, r2
 801d7bc:	4618      	mov	r0, r3
 801d7be:	f7f8 fda1 	bl	8016304 <_ZSt3minIjERKT_S2_S2_>
 801d7c2:	4603      	mov	r3, r0
 801d7c4:	681b      	ldr	r3, [r3, #0]
      }
 801d7c6:	4618      	mov	r0, r3
 801d7c8:	3710      	adds	r7, #16
 801d7ca:	46bd      	mov	sp, r7
 801d7cc:	bd80      	pop	{r7, pc}

0801d7ce <_ZNKSt12_Vector_baseI13mult_operatorSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 801d7ce:	b480      	push	{r7}
 801d7d0:	b083      	sub	sp, #12
 801d7d2:	af00      	add	r7, sp, #0
 801d7d4:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 801d7d6:	687b      	ldr	r3, [r7, #4]
 801d7d8:	4618      	mov	r0, r3
 801d7da:	370c      	adds	r7, #12
 801d7dc:	46bd      	mov	sp, r7
 801d7de:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d7e2:	4770      	bx	lr

0801d7e4 <_ZN9__gnu_cxx13new_allocatorI13mult_operatorE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 801d7e4:	b580      	push	{r7, lr}
 801d7e6:	b084      	sub	sp, #16
 801d7e8:	af00      	add	r7, sp, #0
 801d7ea:	60f8      	str	r0, [r7, #12]
 801d7ec:	60b9      	str	r1, [r7, #8]
 801d7ee:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 801d7f0:	68f8      	ldr	r0, [r7, #12]
 801d7f2:	f000 fa20 	bl	801dc36 <_ZNK9__gnu_cxx13new_allocatorI13mult_operatorE8max_sizeEv>
 801d7f6:	4602      	mov	r2, r0
 801d7f8:	68bb      	ldr	r3, [r7, #8]
 801d7fa:	4293      	cmp	r3, r2
 801d7fc:	bf8c      	ite	hi
 801d7fe:	2301      	movhi	r3, #1
 801d800:	2300      	movls	r3, #0
 801d802:	b2db      	uxtb	r3, r3
 801d804:	2b00      	cmp	r3, #0
 801d806:	d001      	beq.n	801d80c <_ZN9__gnu_cxx13new_allocatorI13mult_operatorE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 801d808:	f005 ff3a 	bl	8023680 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 801d80c:	68b8      	ldr	r0, [r7, #8]
 801d80e:	f005 fe72 	bl	80234f6 <_Znwj>
 801d812:	4603      	mov	r3, r0
 801d814:	bf00      	nop
      }
 801d816:	4618      	mov	r0, r3
 801d818:	3710      	adds	r7, #16
 801d81a:	46bd      	mov	sp, r7
 801d81c:	bd80      	pop	{r7, pc}

0801d81e <_ZSt12__relocate_aIP13mult_operatorS1_SaIS0_EET0_T_S4_S3_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
 801d81e:	b5b0      	push	{r4, r5, r7, lr}
 801d820:	b084      	sub	sp, #16
 801d822:	af00      	add	r7, sp, #0
 801d824:	60f8      	str	r0, [r7, #12]
 801d826:	60b9      	str	r1, [r7, #8]
 801d828:	607a      	str	r2, [r7, #4]
 801d82a:	603b      	str	r3, [r7, #0]
      return __relocate_a_1(std::__niter_base(__first),
 801d82c:	68f8      	ldr	r0, [r7, #12]
 801d82e:	f000 fa0e 	bl	801dc4e <_ZSt12__niter_baseIP13mult_operatorET_S2_>
 801d832:	4604      	mov	r4, r0
 801d834:	68b8      	ldr	r0, [r7, #8]
 801d836:	f000 fa0a 	bl	801dc4e <_ZSt12__niter_baseIP13mult_operatorET_S2_>
 801d83a:	4605      	mov	r5, r0
 801d83c:	6878      	ldr	r0, [r7, #4]
 801d83e:	f000 fa06 	bl	801dc4e <_ZSt12__niter_baseIP13mult_operatorET_S2_>
 801d842:	4602      	mov	r2, r0
 801d844:	683b      	ldr	r3, [r7, #0]
 801d846:	4629      	mov	r1, r5
 801d848:	4620      	mov	r0, r4
 801d84a:	f000 fa0b 	bl	801dc64 <_ZSt14__relocate_a_1I13mult_operatorS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E>
 801d84e:	4603      	mov	r3, r0
    }
 801d850:	4618      	mov	r0, r3
 801d852:	3710      	adds	r7, #16
 801d854:	46bd      	mov	sp, r7
 801d856:	bdb0      	pop	{r4, r5, r7, pc}

0801d858 <_ZNSt6vectorIP16Power_expressionSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
 801d858:	b580      	push	{r7, lr}
 801d85a:	b084      	sub	sp, #16
 801d85c:	af00      	add	r7, sp, #0
 801d85e:	6078      	str	r0, [r7, #4]
	const size_t __diffmax
 801d860:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
 801d864:	60fb      	str	r3, [r7, #12]
	const size_t __allocmax = _Alloc_traits::max_size(__a);
 801d866:	6878      	ldr	r0, [r7, #4]
 801d868:	f000 fa17 	bl	801dc9a <_ZNSt16allocator_traitsISaIP16Power_expressionEE8max_sizeERKS2_>
 801d86c:	4603      	mov	r3, r0
 801d86e:	60bb      	str	r3, [r7, #8]
	return (std::min)(__diffmax, __allocmax);
 801d870:	f107 0208 	add.w	r2, r7, #8
 801d874:	f107 030c 	add.w	r3, r7, #12
 801d878:	4611      	mov	r1, r2
 801d87a:	4618      	mov	r0, r3
 801d87c:	f7f8 fd42 	bl	8016304 <_ZSt3minIjERKT_S2_S2_>
 801d880:	4603      	mov	r3, r0
 801d882:	681b      	ldr	r3, [r3, #0]
      }
 801d884:	4618      	mov	r0, r3
 801d886:	3710      	adds	r7, #16
 801d888:	46bd      	mov	sp, r7
 801d88a:	bd80      	pop	{r7, pc}

0801d88c <_ZNKSt12_Vector_baseIP16Power_expressionSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 801d88c:	b480      	push	{r7}
 801d88e:	b083      	sub	sp, #12
 801d890:	af00      	add	r7, sp, #0
 801d892:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 801d894:	687b      	ldr	r3, [r7, #4]
 801d896:	4618      	mov	r0, r3
 801d898:	370c      	adds	r7, #12
 801d89a:	46bd      	mov	sp, r7
 801d89c:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d8a0:	4770      	bx	lr

0801d8a2 <_ZN9__gnu_cxx13new_allocatorIP16Power_expressionE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 801d8a2:	b580      	push	{r7, lr}
 801d8a4:	b084      	sub	sp, #16
 801d8a6:	af00      	add	r7, sp, #0
 801d8a8:	60f8      	str	r0, [r7, #12]
 801d8aa:	60b9      	str	r1, [r7, #8]
 801d8ac:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 801d8ae:	68f8      	ldr	r0, [r7, #12]
 801d8b0:	f000 f9ff 	bl	801dcb2 <_ZNK9__gnu_cxx13new_allocatorIP16Power_expressionE8max_sizeEv>
 801d8b4:	4602      	mov	r2, r0
 801d8b6:	68bb      	ldr	r3, [r7, #8]
 801d8b8:	4293      	cmp	r3, r2
 801d8ba:	bf8c      	ite	hi
 801d8bc:	2301      	movhi	r3, #1
 801d8be:	2300      	movls	r3, #0
 801d8c0:	b2db      	uxtb	r3, r3
 801d8c2:	2b00      	cmp	r3, #0
 801d8c4:	d001      	beq.n	801d8ca <_ZN9__gnu_cxx13new_allocatorIP16Power_expressionE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 801d8c6:	f005 fedb 	bl	8023680 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 801d8ca:	68bb      	ldr	r3, [r7, #8]
 801d8cc:	009b      	lsls	r3, r3, #2
 801d8ce:	4618      	mov	r0, r3
 801d8d0:	f005 fe11 	bl	80234f6 <_Znwj>
 801d8d4:	4603      	mov	r3, r0
 801d8d6:	bf00      	nop
      }
 801d8d8:	4618      	mov	r0, r3
 801d8da:	3710      	adds	r7, #16
 801d8dc:	46bd      	mov	sp, r7
 801d8de:	bd80      	pop	{r7, pc}

0801d8e0 <_ZSt12__relocate_aIPP16Power_expressionS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
 801d8e0:	b5b0      	push	{r4, r5, r7, lr}
 801d8e2:	b084      	sub	sp, #16
 801d8e4:	af00      	add	r7, sp, #0
 801d8e6:	60f8      	str	r0, [r7, #12]
 801d8e8:	60b9      	str	r1, [r7, #8]
 801d8ea:	607a      	str	r2, [r7, #4]
 801d8ec:	603b      	str	r3, [r7, #0]
      return __relocate_a_1(std::__niter_base(__first),
 801d8ee:	68f8      	ldr	r0, [r7, #12]
 801d8f0:	f000 f9eb 	bl	801dcca <_ZSt12__niter_baseIPP16Power_expressionET_S3_>
 801d8f4:	4604      	mov	r4, r0
 801d8f6:	68b8      	ldr	r0, [r7, #8]
 801d8f8:	f000 f9e7 	bl	801dcca <_ZSt12__niter_baseIPP16Power_expressionET_S3_>
 801d8fc:	4605      	mov	r5, r0
 801d8fe:	6878      	ldr	r0, [r7, #4]
 801d900:	f000 f9e3 	bl	801dcca <_ZSt12__niter_baseIPP16Power_expressionET_S3_>
 801d904:	4602      	mov	r2, r0
 801d906:	683b      	ldr	r3, [r7, #0]
 801d908:	4629      	mov	r1, r5
 801d90a:	4620      	mov	r0, r4
 801d90c:	f000 f9e8 	bl	801dce0 <_ZSt14__relocate_a_1IP16Power_expressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
 801d910:	4603      	mov	r3, r0
    }
 801d912:	4618      	mov	r0, r3
 801d914:	3710      	adds	r7, #16
 801d916:	46bd      	mov	sp, r7
 801d918:	bdb0      	pop	{r4, r5, r7, pc}

0801d91a <_ZNSt6vectorI12sum_operatorSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
 801d91a:	b580      	push	{r7, lr}
 801d91c:	b084      	sub	sp, #16
 801d91e:	af00      	add	r7, sp, #0
 801d920:	6078      	str	r0, [r7, #4]
	const size_t __diffmax
 801d922:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 801d926:	60fb      	str	r3, [r7, #12]
	const size_t __allocmax = _Alloc_traits::max_size(__a);
 801d928:	6878      	ldr	r0, [r7, #4]
 801d92a:	f000 f9f7 	bl	801dd1c <_ZNSt16allocator_traitsISaI12sum_operatorEE8max_sizeERKS1_>
 801d92e:	4603      	mov	r3, r0
 801d930:	60bb      	str	r3, [r7, #8]
	return (std::min)(__diffmax, __allocmax);
 801d932:	f107 0208 	add.w	r2, r7, #8
 801d936:	f107 030c 	add.w	r3, r7, #12
 801d93a:	4611      	mov	r1, r2
 801d93c:	4618      	mov	r0, r3
 801d93e:	f7f8 fce1 	bl	8016304 <_ZSt3minIjERKT_S2_S2_>
 801d942:	4603      	mov	r3, r0
 801d944:	681b      	ldr	r3, [r3, #0]
      }
 801d946:	4618      	mov	r0, r3
 801d948:	3710      	adds	r7, #16
 801d94a:	46bd      	mov	sp, r7
 801d94c:	bd80      	pop	{r7, pc}

0801d94e <_ZNKSt12_Vector_baseI12sum_operatorSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 801d94e:	b480      	push	{r7}
 801d950:	b083      	sub	sp, #12
 801d952:	af00      	add	r7, sp, #0
 801d954:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 801d956:	687b      	ldr	r3, [r7, #4]
 801d958:	4618      	mov	r0, r3
 801d95a:	370c      	adds	r7, #12
 801d95c:	46bd      	mov	sp, r7
 801d95e:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d962:	4770      	bx	lr

0801d964 <_ZN9__gnu_cxx13new_allocatorI12sum_operatorE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 801d964:	b580      	push	{r7, lr}
 801d966:	b084      	sub	sp, #16
 801d968:	af00      	add	r7, sp, #0
 801d96a:	60f8      	str	r0, [r7, #12]
 801d96c:	60b9      	str	r1, [r7, #8]
 801d96e:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 801d970:	68f8      	ldr	r0, [r7, #12]
 801d972:	f000 f9df 	bl	801dd34 <_ZNK9__gnu_cxx13new_allocatorI12sum_operatorE8max_sizeEv>
 801d976:	4602      	mov	r2, r0
 801d978:	68bb      	ldr	r3, [r7, #8]
 801d97a:	4293      	cmp	r3, r2
 801d97c:	bf8c      	ite	hi
 801d97e:	2301      	movhi	r3, #1
 801d980:	2300      	movls	r3, #0
 801d982:	b2db      	uxtb	r3, r3
 801d984:	2b00      	cmp	r3, #0
 801d986:	d001      	beq.n	801d98c <_ZN9__gnu_cxx13new_allocatorI12sum_operatorE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 801d988:	f005 fe7a 	bl	8023680 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 801d98c:	68b8      	ldr	r0, [r7, #8]
 801d98e:	f005 fdb2 	bl	80234f6 <_Znwj>
 801d992:	4603      	mov	r3, r0
 801d994:	bf00      	nop
      }
 801d996:	4618      	mov	r0, r3
 801d998:	3710      	adds	r7, #16
 801d99a:	46bd      	mov	sp, r7
 801d99c:	bd80      	pop	{r7, pc}

0801d99e <_ZSt12__relocate_aIP12sum_operatorS1_SaIS0_EET0_T_S4_S3_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
 801d99e:	b5b0      	push	{r4, r5, r7, lr}
 801d9a0:	b084      	sub	sp, #16
 801d9a2:	af00      	add	r7, sp, #0
 801d9a4:	60f8      	str	r0, [r7, #12]
 801d9a6:	60b9      	str	r1, [r7, #8]
 801d9a8:	607a      	str	r2, [r7, #4]
 801d9aa:	603b      	str	r3, [r7, #0]
      return __relocate_a_1(std::__niter_base(__first),
 801d9ac:	68f8      	ldr	r0, [r7, #12]
 801d9ae:	f000 f9cd 	bl	801dd4c <_ZSt12__niter_baseIP12sum_operatorET_S2_>
 801d9b2:	4604      	mov	r4, r0
 801d9b4:	68b8      	ldr	r0, [r7, #8]
 801d9b6:	f000 f9c9 	bl	801dd4c <_ZSt12__niter_baseIP12sum_operatorET_S2_>
 801d9ba:	4605      	mov	r5, r0
 801d9bc:	6878      	ldr	r0, [r7, #4]
 801d9be:	f000 f9c5 	bl	801dd4c <_ZSt12__niter_baseIP12sum_operatorET_S2_>
 801d9c2:	4602      	mov	r2, r0
 801d9c4:	683b      	ldr	r3, [r7, #0]
 801d9c6:	4629      	mov	r1, r5
 801d9c8:	4620      	mov	r0, r4
 801d9ca:	f000 f9ca 	bl	801dd62 <_ZSt14__relocate_a_1I12sum_operatorS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E>
 801d9ce:	4603      	mov	r3, r0
    }
 801d9d0:	4618      	mov	r0, r3
 801d9d2:	3710      	adds	r7, #16
 801d9d4:	46bd      	mov	sp, r7
 801d9d6:	bdb0      	pop	{r4, r5, r7, pc}

0801d9d8 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
 801d9d8:	b580      	push	{r7, lr}
 801d9da:	b084      	sub	sp, #16
 801d9dc:	af00      	add	r7, sp, #0
 801d9de:	6078      	str	r0, [r7, #4]
	const size_t __diffmax
 801d9e0:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
 801d9e4:	60fb      	str	r3, [r7, #12]
	const size_t __allocmax = _Alloc_traits::max_size(__a);
 801d9e6:	6878      	ldr	r0, [r7, #4]
 801d9e8:	f000 f9d6 	bl	801dd98 <_ZNSt16allocator_traitsISaIP19Multiply_expressionEE8max_sizeERKS2_>
 801d9ec:	4603      	mov	r3, r0
 801d9ee:	60bb      	str	r3, [r7, #8]
	return (std::min)(__diffmax, __allocmax);
 801d9f0:	f107 0208 	add.w	r2, r7, #8
 801d9f4:	f107 030c 	add.w	r3, r7, #12
 801d9f8:	4611      	mov	r1, r2
 801d9fa:	4618      	mov	r0, r3
 801d9fc:	f7f8 fc82 	bl	8016304 <_ZSt3minIjERKT_S2_S2_>
 801da00:	4603      	mov	r3, r0
 801da02:	681b      	ldr	r3, [r3, #0]
      }
 801da04:	4618      	mov	r0, r3
 801da06:	3710      	adds	r7, #16
 801da08:	46bd      	mov	sp, r7
 801da0a:	bd80      	pop	{r7, pc}

0801da0c <_ZNKSt12_Vector_baseIP19Multiply_expressionSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 801da0c:	b480      	push	{r7}
 801da0e:	b083      	sub	sp, #12
 801da10:	af00      	add	r7, sp, #0
 801da12:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 801da14:	687b      	ldr	r3, [r7, #4]
 801da16:	4618      	mov	r0, r3
 801da18:	370c      	adds	r7, #12
 801da1a:	46bd      	mov	sp, r7
 801da1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 801da20:	4770      	bx	lr

0801da22 <_ZN9__gnu_cxx13new_allocatorIP19Multiply_expressionE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 801da22:	b580      	push	{r7, lr}
 801da24:	b084      	sub	sp, #16
 801da26:	af00      	add	r7, sp, #0
 801da28:	60f8      	str	r0, [r7, #12]
 801da2a:	60b9      	str	r1, [r7, #8]
 801da2c:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 801da2e:	68f8      	ldr	r0, [r7, #12]
 801da30:	f000 f9be 	bl	801ddb0 <_ZNK9__gnu_cxx13new_allocatorIP19Multiply_expressionE8max_sizeEv>
 801da34:	4602      	mov	r2, r0
 801da36:	68bb      	ldr	r3, [r7, #8]
 801da38:	4293      	cmp	r3, r2
 801da3a:	bf8c      	ite	hi
 801da3c:	2301      	movhi	r3, #1
 801da3e:	2300      	movls	r3, #0
 801da40:	b2db      	uxtb	r3, r3
 801da42:	2b00      	cmp	r3, #0
 801da44:	d001      	beq.n	801da4a <_ZN9__gnu_cxx13new_allocatorIP19Multiply_expressionE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 801da46:	f005 fe1b 	bl	8023680 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 801da4a:	68bb      	ldr	r3, [r7, #8]
 801da4c:	009b      	lsls	r3, r3, #2
 801da4e:	4618      	mov	r0, r3
 801da50:	f005 fd51 	bl	80234f6 <_Znwj>
 801da54:	4603      	mov	r3, r0
 801da56:	bf00      	nop
      }
 801da58:	4618      	mov	r0, r3
 801da5a:	3710      	adds	r7, #16
 801da5c:	46bd      	mov	sp, r7
 801da5e:	bd80      	pop	{r7, pc}

0801da60 <_ZSt12__relocate_aIPP19Multiply_expressionS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
 801da60:	b5b0      	push	{r4, r5, r7, lr}
 801da62:	b084      	sub	sp, #16
 801da64:	af00      	add	r7, sp, #0
 801da66:	60f8      	str	r0, [r7, #12]
 801da68:	60b9      	str	r1, [r7, #8]
 801da6a:	607a      	str	r2, [r7, #4]
 801da6c:	603b      	str	r3, [r7, #0]
      return __relocate_a_1(std::__niter_base(__first),
 801da6e:	68f8      	ldr	r0, [r7, #12]
 801da70:	f000 f9aa 	bl	801ddc8 <_ZSt12__niter_baseIPP19Multiply_expressionET_S3_>
 801da74:	4604      	mov	r4, r0
 801da76:	68b8      	ldr	r0, [r7, #8]
 801da78:	f000 f9a6 	bl	801ddc8 <_ZSt12__niter_baseIPP19Multiply_expressionET_S3_>
 801da7c:	4605      	mov	r5, r0
 801da7e:	6878      	ldr	r0, [r7, #4]
 801da80:	f000 f9a2 	bl	801ddc8 <_ZSt12__niter_baseIPP19Multiply_expressionET_S3_>
 801da84:	4602      	mov	r2, r0
 801da86:	683b      	ldr	r3, [r7, #0]
 801da88:	4629      	mov	r1, r5
 801da8a:	4620      	mov	r0, r4
 801da8c:	f000 f9a7 	bl	801ddde <_ZSt14__relocate_a_1IP19Multiply_expressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
 801da90:	4603      	mov	r3, r0
    }
 801da92:	4618      	mov	r0, r3
 801da94:	3710      	adds	r7, #16
 801da96:	46bd      	mov	sp, r7
 801da98:	bdb0      	pop	{r4, r5, r7, pc}

0801da9a <_ZNSt6vectorIP18Compare_expressionSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
 801da9a:	b580      	push	{r7, lr}
 801da9c:	b084      	sub	sp, #16
 801da9e:	af00      	add	r7, sp, #0
 801daa0:	6078      	str	r0, [r7, #4]
	const size_t __diffmax
 801daa2:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
 801daa6:	60fb      	str	r3, [r7, #12]
	const size_t __allocmax = _Alloc_traits::max_size(__a);
 801daa8:	6878      	ldr	r0, [r7, #4]
 801daaa:	f000 f9b6 	bl	801de1a <_ZNSt16allocator_traitsISaIP18Compare_expressionEE8max_sizeERKS2_>
 801daae:	4603      	mov	r3, r0
 801dab0:	60bb      	str	r3, [r7, #8]
	return (std::min)(__diffmax, __allocmax);
 801dab2:	f107 0208 	add.w	r2, r7, #8
 801dab6:	f107 030c 	add.w	r3, r7, #12
 801daba:	4611      	mov	r1, r2
 801dabc:	4618      	mov	r0, r3
 801dabe:	f7f8 fc21 	bl	8016304 <_ZSt3minIjERKT_S2_S2_>
 801dac2:	4603      	mov	r3, r0
 801dac4:	681b      	ldr	r3, [r3, #0]
      }
 801dac6:	4618      	mov	r0, r3
 801dac8:	3710      	adds	r7, #16
 801daca:	46bd      	mov	sp, r7
 801dacc:	bd80      	pop	{r7, pc}

0801dace <_ZNKSt12_Vector_baseIP18Compare_expressionSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 801dace:	b480      	push	{r7}
 801dad0:	b083      	sub	sp, #12
 801dad2:	af00      	add	r7, sp, #0
 801dad4:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 801dad6:	687b      	ldr	r3, [r7, #4]
 801dad8:	4618      	mov	r0, r3
 801dada:	370c      	adds	r7, #12
 801dadc:	46bd      	mov	sp, r7
 801dade:	f85d 7b04 	ldr.w	r7, [sp], #4
 801dae2:	4770      	bx	lr

0801dae4 <_ZN9__gnu_cxx13new_allocatorIP18Compare_expressionE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 801dae4:	b580      	push	{r7, lr}
 801dae6:	b084      	sub	sp, #16
 801dae8:	af00      	add	r7, sp, #0
 801daea:	60f8      	str	r0, [r7, #12]
 801daec:	60b9      	str	r1, [r7, #8]
 801daee:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 801daf0:	68f8      	ldr	r0, [r7, #12]
 801daf2:	f000 f99e 	bl	801de32 <_ZNK9__gnu_cxx13new_allocatorIP18Compare_expressionE8max_sizeEv>
 801daf6:	4602      	mov	r2, r0
 801daf8:	68bb      	ldr	r3, [r7, #8]
 801dafa:	4293      	cmp	r3, r2
 801dafc:	bf8c      	ite	hi
 801dafe:	2301      	movhi	r3, #1
 801db00:	2300      	movls	r3, #0
 801db02:	b2db      	uxtb	r3, r3
 801db04:	2b00      	cmp	r3, #0
 801db06:	d001      	beq.n	801db0c <_ZN9__gnu_cxx13new_allocatorIP18Compare_expressionE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 801db08:	f005 fdba 	bl	8023680 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 801db0c:	68bb      	ldr	r3, [r7, #8]
 801db0e:	009b      	lsls	r3, r3, #2
 801db10:	4618      	mov	r0, r3
 801db12:	f005 fcf0 	bl	80234f6 <_Znwj>
 801db16:	4603      	mov	r3, r0
 801db18:	bf00      	nop
      }
 801db1a:	4618      	mov	r0, r3
 801db1c:	3710      	adds	r7, #16
 801db1e:	46bd      	mov	sp, r7
 801db20:	bd80      	pop	{r7, pc}

0801db22 <_ZSt12__relocate_aIPP18Compare_expressionS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
 801db22:	b5b0      	push	{r4, r5, r7, lr}
 801db24:	b084      	sub	sp, #16
 801db26:	af00      	add	r7, sp, #0
 801db28:	60f8      	str	r0, [r7, #12]
 801db2a:	60b9      	str	r1, [r7, #8]
 801db2c:	607a      	str	r2, [r7, #4]
 801db2e:	603b      	str	r3, [r7, #0]
      return __relocate_a_1(std::__niter_base(__first),
 801db30:	68f8      	ldr	r0, [r7, #12]
 801db32:	f000 f98a 	bl	801de4a <_ZSt12__niter_baseIPP18Compare_expressionET_S3_>
 801db36:	4604      	mov	r4, r0
 801db38:	68b8      	ldr	r0, [r7, #8]
 801db3a:	f000 f986 	bl	801de4a <_ZSt12__niter_baseIPP18Compare_expressionET_S3_>
 801db3e:	4605      	mov	r5, r0
 801db40:	6878      	ldr	r0, [r7, #4]
 801db42:	f000 f982 	bl	801de4a <_ZSt12__niter_baseIPP18Compare_expressionET_S3_>
 801db46:	4602      	mov	r2, r0
 801db48:	683b      	ldr	r3, [r7, #0]
 801db4a:	4629      	mov	r1, r5
 801db4c:	4620      	mov	r0, r4
 801db4e:	f000 f987 	bl	801de60 <_ZSt14__relocate_a_1IP18Compare_expressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
 801db52:	4603      	mov	r3, r0
    }
 801db54:	4618      	mov	r0, r3
 801db56:	3710      	adds	r7, #16
 801db58:	46bd      	mov	sp, r7
 801db5a:	bdb0      	pop	{r4, r5, r7, pc}

0801db5c <_ZNSt6vectorIP14And_expressionSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
 801db5c:	b580      	push	{r7, lr}
 801db5e:	b084      	sub	sp, #16
 801db60:	af00      	add	r7, sp, #0
 801db62:	6078      	str	r0, [r7, #4]
	const size_t __diffmax
 801db64:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
 801db68:	60fb      	str	r3, [r7, #12]
	const size_t __allocmax = _Alloc_traits::max_size(__a);
 801db6a:	6878      	ldr	r0, [r7, #4]
 801db6c:	f000 f996 	bl	801de9c <_ZNSt16allocator_traitsISaIP14And_expressionEE8max_sizeERKS2_>
 801db70:	4603      	mov	r3, r0
 801db72:	60bb      	str	r3, [r7, #8]
	return (std::min)(__diffmax, __allocmax);
 801db74:	f107 0208 	add.w	r2, r7, #8
 801db78:	f107 030c 	add.w	r3, r7, #12
 801db7c:	4611      	mov	r1, r2
 801db7e:	4618      	mov	r0, r3
 801db80:	f7f8 fbc0 	bl	8016304 <_ZSt3minIjERKT_S2_S2_>
 801db84:	4603      	mov	r3, r0
 801db86:	681b      	ldr	r3, [r3, #0]
      }
 801db88:	4618      	mov	r0, r3
 801db8a:	3710      	adds	r7, #16
 801db8c:	46bd      	mov	sp, r7
 801db8e:	bd80      	pop	{r7, pc}

0801db90 <_ZNKSt12_Vector_baseIP14And_expressionSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 801db90:	b480      	push	{r7}
 801db92:	b083      	sub	sp, #12
 801db94:	af00      	add	r7, sp, #0
 801db96:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 801db98:	687b      	ldr	r3, [r7, #4]
 801db9a:	4618      	mov	r0, r3
 801db9c:	370c      	adds	r7, #12
 801db9e:	46bd      	mov	sp, r7
 801dba0:	f85d 7b04 	ldr.w	r7, [sp], #4
 801dba4:	4770      	bx	lr

0801dba6 <_ZN9__gnu_cxx13new_allocatorIP14And_expressionE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 801dba6:	b580      	push	{r7, lr}
 801dba8:	b084      	sub	sp, #16
 801dbaa:	af00      	add	r7, sp, #0
 801dbac:	60f8      	str	r0, [r7, #12]
 801dbae:	60b9      	str	r1, [r7, #8]
 801dbb0:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 801dbb2:	68f8      	ldr	r0, [r7, #12]
 801dbb4:	f000 f97e 	bl	801deb4 <_ZNK9__gnu_cxx13new_allocatorIP14And_expressionE8max_sizeEv>
 801dbb8:	4602      	mov	r2, r0
 801dbba:	68bb      	ldr	r3, [r7, #8]
 801dbbc:	4293      	cmp	r3, r2
 801dbbe:	bf8c      	ite	hi
 801dbc0:	2301      	movhi	r3, #1
 801dbc2:	2300      	movls	r3, #0
 801dbc4:	b2db      	uxtb	r3, r3
 801dbc6:	2b00      	cmp	r3, #0
 801dbc8:	d001      	beq.n	801dbce <_ZN9__gnu_cxx13new_allocatorIP14And_expressionE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 801dbca:	f005 fd59 	bl	8023680 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 801dbce:	68bb      	ldr	r3, [r7, #8]
 801dbd0:	009b      	lsls	r3, r3, #2
 801dbd2:	4618      	mov	r0, r3
 801dbd4:	f005 fc8f 	bl	80234f6 <_Znwj>
 801dbd8:	4603      	mov	r3, r0
 801dbda:	bf00      	nop
      }
 801dbdc:	4618      	mov	r0, r3
 801dbde:	3710      	adds	r7, #16
 801dbe0:	46bd      	mov	sp, r7
 801dbe2:	bd80      	pop	{r7, pc}

0801dbe4 <_ZSt12__relocate_aIPP14And_expressionS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
 801dbe4:	b5b0      	push	{r4, r5, r7, lr}
 801dbe6:	b084      	sub	sp, #16
 801dbe8:	af00      	add	r7, sp, #0
 801dbea:	60f8      	str	r0, [r7, #12]
 801dbec:	60b9      	str	r1, [r7, #8]
 801dbee:	607a      	str	r2, [r7, #4]
 801dbf0:	603b      	str	r3, [r7, #0]
      return __relocate_a_1(std::__niter_base(__first),
 801dbf2:	68f8      	ldr	r0, [r7, #12]
 801dbf4:	f000 f96a 	bl	801decc <_ZSt12__niter_baseIPP14And_expressionET_S3_>
 801dbf8:	4604      	mov	r4, r0
 801dbfa:	68b8      	ldr	r0, [r7, #8]
 801dbfc:	f000 f966 	bl	801decc <_ZSt12__niter_baseIPP14And_expressionET_S3_>
 801dc00:	4605      	mov	r5, r0
 801dc02:	6878      	ldr	r0, [r7, #4]
 801dc04:	f000 f962 	bl	801decc <_ZSt12__niter_baseIPP14And_expressionET_S3_>
 801dc08:	4602      	mov	r2, r0
 801dc0a:	683b      	ldr	r3, [r7, #0]
 801dc0c:	4629      	mov	r1, r5
 801dc0e:	4620      	mov	r0, r4
 801dc10:	f000 f967 	bl	801dee2 <_ZSt14__relocate_a_1IP14And_expressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
 801dc14:	4603      	mov	r3, r0
    }
 801dc16:	4618      	mov	r0, r3
 801dc18:	3710      	adds	r7, #16
 801dc1a:	46bd      	mov	sp, r7
 801dc1c:	bdb0      	pop	{r4, r5, r7, pc}

0801dc1e <_ZNSt16allocator_traitsISaI13mult_operatorEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a) noexcept
 801dc1e:	b580      	push	{r7, lr}
 801dc20:	b082      	sub	sp, #8
 801dc22:	af00      	add	r7, sp, #0
 801dc24:	6078      	str	r0, [r7, #4]
      { return __a.max_size(); }
 801dc26:	6878      	ldr	r0, [r7, #4]
 801dc28:	f000 f805 	bl	801dc36 <_ZNK9__gnu_cxx13new_allocatorI13mult_operatorE8max_sizeEv>
 801dc2c:	4603      	mov	r3, r0
 801dc2e:	4618      	mov	r0, r3
 801dc30:	3708      	adds	r7, #8
 801dc32:	46bd      	mov	sp, r7
 801dc34:	bd80      	pop	{r7, pc}

0801dc36 <_ZNK9__gnu_cxx13new_allocatorI13mult_operatorE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 801dc36:	b480      	push	{r7}
 801dc38:	b083      	sub	sp, #12
 801dc3a:	af00      	add	r7, sp, #0
 801dc3c:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 801dc3e:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
      }
 801dc42:	4618      	mov	r0, r3
 801dc44:	370c      	adds	r7, #12
 801dc46:	46bd      	mov	sp, r7
 801dc48:	f85d 7b04 	ldr.w	r7, [sp], #4
 801dc4c:	4770      	bx	lr

0801dc4e <_ZSt12__niter_baseIP13mult_operatorET_S2_>:
    __niter_base(_Iterator __it)
 801dc4e:	b480      	push	{r7}
 801dc50:	b083      	sub	sp, #12
 801dc52:	af00      	add	r7, sp, #0
 801dc54:	6078      	str	r0, [r7, #4]
    { return __it; }
 801dc56:	687b      	ldr	r3, [r7, #4]
 801dc58:	4618      	mov	r0, r3
 801dc5a:	370c      	adds	r7, #12
 801dc5c:	46bd      	mov	sp, r7
 801dc5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 801dc62:	4770      	bx	lr

0801dc64 <_ZSt14__relocate_a_1I13mult_operatorS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
 801dc64:	b580      	push	{r7, lr}
 801dc66:	b086      	sub	sp, #24
 801dc68:	af00      	add	r7, sp, #0
 801dc6a:	60f8      	str	r0, [r7, #12]
 801dc6c:	60b9      	str	r1, [r7, #8]
 801dc6e:	607a      	str	r2, [r7, #4]
 801dc70:	603b      	str	r3, [r7, #0]
      ptrdiff_t __count = __last - __first;
 801dc72:	68ba      	ldr	r2, [r7, #8]
 801dc74:	68fb      	ldr	r3, [r7, #12]
 801dc76:	1ad3      	subs	r3, r2, r3
 801dc78:	617b      	str	r3, [r7, #20]
      if (__count > 0)
 801dc7a:	697b      	ldr	r3, [r7, #20]
 801dc7c:	2b00      	cmp	r3, #0
 801dc7e:	dd05      	ble.n	801dc8c <_ZSt14__relocate_a_1I13mult_operatorS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E+0x28>
	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 801dc80:	697b      	ldr	r3, [r7, #20]
 801dc82:	461a      	mov	r2, r3
 801dc84:	68f9      	ldr	r1, [r7, #12]
 801dc86:	6878      	ldr	r0, [r7, #4]
 801dc88:	f007 f8f0 	bl	8024e6c <memmove>
      return __result + __count;
 801dc8c:	697b      	ldr	r3, [r7, #20]
 801dc8e:	687a      	ldr	r2, [r7, #4]
 801dc90:	4413      	add	r3, r2
    }
 801dc92:	4618      	mov	r0, r3
 801dc94:	3718      	adds	r7, #24
 801dc96:	46bd      	mov	sp, r7
 801dc98:	bd80      	pop	{r7, pc}

0801dc9a <_ZNSt16allocator_traitsISaIP16Power_expressionEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a) noexcept
 801dc9a:	b580      	push	{r7, lr}
 801dc9c:	b082      	sub	sp, #8
 801dc9e:	af00      	add	r7, sp, #0
 801dca0:	6078      	str	r0, [r7, #4]
      { return __a.max_size(); }
 801dca2:	6878      	ldr	r0, [r7, #4]
 801dca4:	f000 f805 	bl	801dcb2 <_ZNK9__gnu_cxx13new_allocatorIP16Power_expressionE8max_sizeEv>
 801dca8:	4603      	mov	r3, r0
 801dcaa:	4618      	mov	r0, r3
 801dcac:	3708      	adds	r7, #8
 801dcae:	46bd      	mov	sp, r7
 801dcb0:	bd80      	pop	{r7, pc}

0801dcb2 <_ZNK9__gnu_cxx13new_allocatorIP16Power_expressionE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 801dcb2:	b480      	push	{r7}
 801dcb4:	b083      	sub	sp, #12
 801dcb6:	af00      	add	r7, sp, #0
 801dcb8:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 801dcba:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
      }
 801dcbe:	4618      	mov	r0, r3
 801dcc0:	370c      	adds	r7, #12
 801dcc2:	46bd      	mov	sp, r7
 801dcc4:	f85d 7b04 	ldr.w	r7, [sp], #4
 801dcc8:	4770      	bx	lr

0801dcca <_ZSt12__niter_baseIPP16Power_expressionET_S3_>:
    __niter_base(_Iterator __it)
 801dcca:	b480      	push	{r7}
 801dccc:	b083      	sub	sp, #12
 801dcce:	af00      	add	r7, sp, #0
 801dcd0:	6078      	str	r0, [r7, #4]
    { return __it; }
 801dcd2:	687b      	ldr	r3, [r7, #4]
 801dcd4:	4618      	mov	r0, r3
 801dcd6:	370c      	adds	r7, #12
 801dcd8:	46bd      	mov	sp, r7
 801dcda:	f85d 7b04 	ldr.w	r7, [sp], #4
 801dcde:	4770      	bx	lr

0801dce0 <_ZSt14__relocate_a_1IP16Power_expressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
 801dce0:	b580      	push	{r7, lr}
 801dce2:	b086      	sub	sp, #24
 801dce4:	af00      	add	r7, sp, #0
 801dce6:	60f8      	str	r0, [r7, #12]
 801dce8:	60b9      	str	r1, [r7, #8]
 801dcea:	607a      	str	r2, [r7, #4]
 801dcec:	603b      	str	r3, [r7, #0]
      ptrdiff_t __count = __last - __first;
 801dcee:	68ba      	ldr	r2, [r7, #8]
 801dcf0:	68fb      	ldr	r3, [r7, #12]
 801dcf2:	1ad3      	subs	r3, r2, r3
 801dcf4:	109b      	asrs	r3, r3, #2
 801dcf6:	617b      	str	r3, [r7, #20]
      if (__count > 0)
 801dcf8:	697b      	ldr	r3, [r7, #20]
 801dcfa:	2b00      	cmp	r3, #0
 801dcfc:	dd06      	ble.n	801dd0c <_ZSt14__relocate_a_1IP16Power_expressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x2c>
	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 801dcfe:	697b      	ldr	r3, [r7, #20]
 801dd00:	009b      	lsls	r3, r3, #2
 801dd02:	461a      	mov	r2, r3
 801dd04:	68f9      	ldr	r1, [r7, #12]
 801dd06:	6878      	ldr	r0, [r7, #4]
 801dd08:	f007 f8b0 	bl	8024e6c <memmove>
      return __result + __count;
 801dd0c:	697b      	ldr	r3, [r7, #20]
 801dd0e:	009b      	lsls	r3, r3, #2
 801dd10:	687a      	ldr	r2, [r7, #4]
 801dd12:	4413      	add	r3, r2
    }
 801dd14:	4618      	mov	r0, r3
 801dd16:	3718      	adds	r7, #24
 801dd18:	46bd      	mov	sp, r7
 801dd1a:	bd80      	pop	{r7, pc}

0801dd1c <_ZNSt16allocator_traitsISaI12sum_operatorEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a) noexcept
 801dd1c:	b580      	push	{r7, lr}
 801dd1e:	b082      	sub	sp, #8
 801dd20:	af00      	add	r7, sp, #0
 801dd22:	6078      	str	r0, [r7, #4]
      { return __a.max_size(); }
 801dd24:	6878      	ldr	r0, [r7, #4]
 801dd26:	f000 f805 	bl	801dd34 <_ZNK9__gnu_cxx13new_allocatorI12sum_operatorE8max_sizeEv>
 801dd2a:	4603      	mov	r3, r0
 801dd2c:	4618      	mov	r0, r3
 801dd2e:	3708      	adds	r7, #8
 801dd30:	46bd      	mov	sp, r7
 801dd32:	bd80      	pop	{r7, pc}

0801dd34 <_ZNK9__gnu_cxx13new_allocatorI12sum_operatorE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 801dd34:	b480      	push	{r7}
 801dd36:	b083      	sub	sp, #12
 801dd38:	af00      	add	r7, sp, #0
 801dd3a:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 801dd3c:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
      }
 801dd40:	4618      	mov	r0, r3
 801dd42:	370c      	adds	r7, #12
 801dd44:	46bd      	mov	sp, r7
 801dd46:	f85d 7b04 	ldr.w	r7, [sp], #4
 801dd4a:	4770      	bx	lr

0801dd4c <_ZSt12__niter_baseIP12sum_operatorET_S2_>:
    __niter_base(_Iterator __it)
 801dd4c:	b480      	push	{r7}
 801dd4e:	b083      	sub	sp, #12
 801dd50:	af00      	add	r7, sp, #0
 801dd52:	6078      	str	r0, [r7, #4]
    { return __it; }
 801dd54:	687b      	ldr	r3, [r7, #4]
 801dd56:	4618      	mov	r0, r3
 801dd58:	370c      	adds	r7, #12
 801dd5a:	46bd      	mov	sp, r7
 801dd5c:	f85d 7b04 	ldr.w	r7, [sp], #4
 801dd60:	4770      	bx	lr

0801dd62 <_ZSt14__relocate_a_1I12sum_operatorS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
 801dd62:	b580      	push	{r7, lr}
 801dd64:	b086      	sub	sp, #24
 801dd66:	af00      	add	r7, sp, #0
 801dd68:	60f8      	str	r0, [r7, #12]
 801dd6a:	60b9      	str	r1, [r7, #8]
 801dd6c:	607a      	str	r2, [r7, #4]
 801dd6e:	603b      	str	r3, [r7, #0]
      ptrdiff_t __count = __last - __first;
 801dd70:	68ba      	ldr	r2, [r7, #8]
 801dd72:	68fb      	ldr	r3, [r7, #12]
 801dd74:	1ad3      	subs	r3, r2, r3
 801dd76:	617b      	str	r3, [r7, #20]
      if (__count > 0)
 801dd78:	697b      	ldr	r3, [r7, #20]
 801dd7a:	2b00      	cmp	r3, #0
 801dd7c:	dd05      	ble.n	801dd8a <_ZSt14__relocate_a_1I12sum_operatorS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E+0x28>
	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 801dd7e:	697b      	ldr	r3, [r7, #20]
 801dd80:	461a      	mov	r2, r3
 801dd82:	68f9      	ldr	r1, [r7, #12]
 801dd84:	6878      	ldr	r0, [r7, #4]
 801dd86:	f007 f871 	bl	8024e6c <memmove>
      return __result + __count;
 801dd8a:	697b      	ldr	r3, [r7, #20]
 801dd8c:	687a      	ldr	r2, [r7, #4]
 801dd8e:	4413      	add	r3, r2
    }
 801dd90:	4618      	mov	r0, r3
 801dd92:	3718      	adds	r7, #24
 801dd94:	46bd      	mov	sp, r7
 801dd96:	bd80      	pop	{r7, pc}

0801dd98 <_ZNSt16allocator_traitsISaIP19Multiply_expressionEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a) noexcept
 801dd98:	b580      	push	{r7, lr}
 801dd9a:	b082      	sub	sp, #8
 801dd9c:	af00      	add	r7, sp, #0
 801dd9e:	6078      	str	r0, [r7, #4]
      { return __a.max_size(); }
 801dda0:	6878      	ldr	r0, [r7, #4]
 801dda2:	f000 f805 	bl	801ddb0 <_ZNK9__gnu_cxx13new_allocatorIP19Multiply_expressionE8max_sizeEv>
 801dda6:	4603      	mov	r3, r0
 801dda8:	4618      	mov	r0, r3
 801ddaa:	3708      	adds	r7, #8
 801ddac:	46bd      	mov	sp, r7
 801ddae:	bd80      	pop	{r7, pc}

0801ddb0 <_ZNK9__gnu_cxx13new_allocatorIP19Multiply_expressionE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 801ddb0:	b480      	push	{r7}
 801ddb2:	b083      	sub	sp, #12
 801ddb4:	af00      	add	r7, sp, #0
 801ddb6:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 801ddb8:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
      }
 801ddbc:	4618      	mov	r0, r3
 801ddbe:	370c      	adds	r7, #12
 801ddc0:	46bd      	mov	sp, r7
 801ddc2:	f85d 7b04 	ldr.w	r7, [sp], #4
 801ddc6:	4770      	bx	lr

0801ddc8 <_ZSt12__niter_baseIPP19Multiply_expressionET_S3_>:
    __niter_base(_Iterator __it)
 801ddc8:	b480      	push	{r7}
 801ddca:	b083      	sub	sp, #12
 801ddcc:	af00      	add	r7, sp, #0
 801ddce:	6078      	str	r0, [r7, #4]
    { return __it; }
 801ddd0:	687b      	ldr	r3, [r7, #4]
 801ddd2:	4618      	mov	r0, r3
 801ddd4:	370c      	adds	r7, #12
 801ddd6:	46bd      	mov	sp, r7
 801ddd8:	f85d 7b04 	ldr.w	r7, [sp], #4
 801dddc:	4770      	bx	lr

0801ddde <_ZSt14__relocate_a_1IP19Multiply_expressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
 801ddde:	b580      	push	{r7, lr}
 801dde0:	b086      	sub	sp, #24
 801dde2:	af00      	add	r7, sp, #0
 801dde4:	60f8      	str	r0, [r7, #12]
 801dde6:	60b9      	str	r1, [r7, #8]
 801dde8:	607a      	str	r2, [r7, #4]
 801ddea:	603b      	str	r3, [r7, #0]
      ptrdiff_t __count = __last - __first;
 801ddec:	68ba      	ldr	r2, [r7, #8]
 801ddee:	68fb      	ldr	r3, [r7, #12]
 801ddf0:	1ad3      	subs	r3, r2, r3
 801ddf2:	109b      	asrs	r3, r3, #2
 801ddf4:	617b      	str	r3, [r7, #20]
      if (__count > 0)
 801ddf6:	697b      	ldr	r3, [r7, #20]
 801ddf8:	2b00      	cmp	r3, #0
 801ddfa:	dd06      	ble.n	801de0a <_ZSt14__relocate_a_1IP19Multiply_expressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x2c>
	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 801ddfc:	697b      	ldr	r3, [r7, #20]
 801ddfe:	009b      	lsls	r3, r3, #2
 801de00:	461a      	mov	r2, r3
 801de02:	68f9      	ldr	r1, [r7, #12]
 801de04:	6878      	ldr	r0, [r7, #4]
 801de06:	f007 f831 	bl	8024e6c <memmove>
      return __result + __count;
 801de0a:	697b      	ldr	r3, [r7, #20]
 801de0c:	009b      	lsls	r3, r3, #2
 801de0e:	687a      	ldr	r2, [r7, #4]
 801de10:	4413      	add	r3, r2
    }
 801de12:	4618      	mov	r0, r3
 801de14:	3718      	adds	r7, #24
 801de16:	46bd      	mov	sp, r7
 801de18:	bd80      	pop	{r7, pc}

0801de1a <_ZNSt16allocator_traitsISaIP18Compare_expressionEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a) noexcept
 801de1a:	b580      	push	{r7, lr}
 801de1c:	b082      	sub	sp, #8
 801de1e:	af00      	add	r7, sp, #0
 801de20:	6078      	str	r0, [r7, #4]
      { return __a.max_size(); }
 801de22:	6878      	ldr	r0, [r7, #4]
 801de24:	f000 f805 	bl	801de32 <_ZNK9__gnu_cxx13new_allocatorIP18Compare_expressionE8max_sizeEv>
 801de28:	4603      	mov	r3, r0
 801de2a:	4618      	mov	r0, r3
 801de2c:	3708      	adds	r7, #8
 801de2e:	46bd      	mov	sp, r7
 801de30:	bd80      	pop	{r7, pc}

0801de32 <_ZNK9__gnu_cxx13new_allocatorIP18Compare_expressionE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 801de32:	b480      	push	{r7}
 801de34:	b083      	sub	sp, #12
 801de36:	af00      	add	r7, sp, #0
 801de38:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 801de3a:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
      }
 801de3e:	4618      	mov	r0, r3
 801de40:	370c      	adds	r7, #12
 801de42:	46bd      	mov	sp, r7
 801de44:	f85d 7b04 	ldr.w	r7, [sp], #4
 801de48:	4770      	bx	lr

0801de4a <_ZSt12__niter_baseIPP18Compare_expressionET_S3_>:
    __niter_base(_Iterator __it)
 801de4a:	b480      	push	{r7}
 801de4c:	b083      	sub	sp, #12
 801de4e:	af00      	add	r7, sp, #0
 801de50:	6078      	str	r0, [r7, #4]
    { return __it; }
 801de52:	687b      	ldr	r3, [r7, #4]
 801de54:	4618      	mov	r0, r3
 801de56:	370c      	adds	r7, #12
 801de58:	46bd      	mov	sp, r7
 801de5a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801de5e:	4770      	bx	lr

0801de60 <_ZSt14__relocate_a_1IP18Compare_expressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
 801de60:	b580      	push	{r7, lr}
 801de62:	b086      	sub	sp, #24
 801de64:	af00      	add	r7, sp, #0
 801de66:	60f8      	str	r0, [r7, #12]
 801de68:	60b9      	str	r1, [r7, #8]
 801de6a:	607a      	str	r2, [r7, #4]
 801de6c:	603b      	str	r3, [r7, #0]
      ptrdiff_t __count = __last - __first;
 801de6e:	68ba      	ldr	r2, [r7, #8]
 801de70:	68fb      	ldr	r3, [r7, #12]
 801de72:	1ad3      	subs	r3, r2, r3
 801de74:	109b      	asrs	r3, r3, #2
 801de76:	617b      	str	r3, [r7, #20]
      if (__count > 0)
 801de78:	697b      	ldr	r3, [r7, #20]
 801de7a:	2b00      	cmp	r3, #0
 801de7c:	dd06      	ble.n	801de8c <_ZSt14__relocate_a_1IP18Compare_expressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x2c>
	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 801de7e:	697b      	ldr	r3, [r7, #20]
 801de80:	009b      	lsls	r3, r3, #2
 801de82:	461a      	mov	r2, r3
 801de84:	68f9      	ldr	r1, [r7, #12]
 801de86:	6878      	ldr	r0, [r7, #4]
 801de88:	f006 fff0 	bl	8024e6c <memmove>
      return __result + __count;
 801de8c:	697b      	ldr	r3, [r7, #20]
 801de8e:	009b      	lsls	r3, r3, #2
 801de90:	687a      	ldr	r2, [r7, #4]
 801de92:	4413      	add	r3, r2
    }
 801de94:	4618      	mov	r0, r3
 801de96:	3718      	adds	r7, #24
 801de98:	46bd      	mov	sp, r7
 801de9a:	bd80      	pop	{r7, pc}

0801de9c <_ZNSt16allocator_traitsISaIP14And_expressionEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a) noexcept
 801de9c:	b580      	push	{r7, lr}
 801de9e:	b082      	sub	sp, #8
 801dea0:	af00      	add	r7, sp, #0
 801dea2:	6078      	str	r0, [r7, #4]
      { return __a.max_size(); }
 801dea4:	6878      	ldr	r0, [r7, #4]
 801dea6:	f000 f805 	bl	801deb4 <_ZNK9__gnu_cxx13new_allocatorIP14And_expressionE8max_sizeEv>
 801deaa:	4603      	mov	r3, r0
 801deac:	4618      	mov	r0, r3
 801deae:	3708      	adds	r7, #8
 801deb0:	46bd      	mov	sp, r7
 801deb2:	bd80      	pop	{r7, pc}

0801deb4 <_ZNK9__gnu_cxx13new_allocatorIP14And_expressionE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 801deb4:	b480      	push	{r7}
 801deb6:	b083      	sub	sp, #12
 801deb8:	af00      	add	r7, sp, #0
 801deba:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 801debc:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
      }
 801dec0:	4618      	mov	r0, r3
 801dec2:	370c      	adds	r7, #12
 801dec4:	46bd      	mov	sp, r7
 801dec6:	f85d 7b04 	ldr.w	r7, [sp], #4
 801deca:	4770      	bx	lr

0801decc <_ZSt12__niter_baseIPP14And_expressionET_S3_>:
    __niter_base(_Iterator __it)
 801decc:	b480      	push	{r7}
 801dece:	b083      	sub	sp, #12
 801ded0:	af00      	add	r7, sp, #0
 801ded2:	6078      	str	r0, [r7, #4]
    { return __it; }
 801ded4:	687b      	ldr	r3, [r7, #4]
 801ded6:	4618      	mov	r0, r3
 801ded8:	370c      	adds	r7, #12
 801deda:	46bd      	mov	sp, r7
 801dedc:	f85d 7b04 	ldr.w	r7, [sp], #4
 801dee0:	4770      	bx	lr

0801dee2 <_ZSt14__relocate_a_1IP14And_expressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
 801dee2:	b580      	push	{r7, lr}
 801dee4:	b086      	sub	sp, #24
 801dee6:	af00      	add	r7, sp, #0
 801dee8:	60f8      	str	r0, [r7, #12]
 801deea:	60b9      	str	r1, [r7, #8]
 801deec:	607a      	str	r2, [r7, #4]
 801deee:	603b      	str	r3, [r7, #0]
      ptrdiff_t __count = __last - __first;
 801def0:	68ba      	ldr	r2, [r7, #8]
 801def2:	68fb      	ldr	r3, [r7, #12]
 801def4:	1ad3      	subs	r3, r2, r3
 801def6:	109b      	asrs	r3, r3, #2
 801def8:	617b      	str	r3, [r7, #20]
      if (__count > 0)
 801defa:	697b      	ldr	r3, [r7, #20]
 801defc:	2b00      	cmp	r3, #0
 801defe:	dd06      	ble.n	801df0e <_ZSt14__relocate_a_1IP14And_expressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x2c>
	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 801df00:	697b      	ldr	r3, [r7, #20]
 801df02:	009b      	lsls	r3, r3, #2
 801df04:	461a      	mov	r2, r3
 801df06:	68f9      	ldr	r1, [r7, #12]
 801df08:	6878      	ldr	r0, [r7, #4]
 801df0a:	f006 ffaf 	bl	8024e6c <memmove>
      return __result + __count;
 801df0e:	697b      	ldr	r3, [r7, #20]
 801df10:	009b      	lsls	r3, r3, #2
 801df12:	687a      	ldr	r2, [r7, #4]
 801df14:	4413      	add	r3, r2
    }
 801df16:	4618      	mov	r0, r3
 801df18:	3718      	adds	r7, #24
 801df1a:	46bd      	mov	sp, r7
 801df1c:	bd80      	pop	{r7, pc}
	...

0801df20 <_Z41__static_initialization_and_destruction_0ii>:
 801df20:	b590      	push	{r4, r7, lr}
 801df22:	b0e7      	sub	sp, #412	; 0x19c
 801df24:	af02      	add	r7, sp, #8
 801df26:	1d3b      	adds	r3, r7, #4
 801df28:	6018      	str	r0, [r3, #0]
 801df2a:	463b      	mov	r3, r7
 801df2c:	6019      	str	r1, [r3, #0]
 801df2e:	1d3b      	adds	r3, r7, #4
 801df30:	681b      	ldr	r3, [r3, #0]
 801df32:	2b01      	cmp	r3, #1
 801df34:	f040 819d 	bne.w	801e272 <_Z41__static_initialization_and_destruction_0ii+0x352>
 801df38:	463b      	mov	r3, r7
 801df3a:	681b      	ldr	r3, [r3, #0]
 801df3c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801df40:	4293      	cmp	r3, r2
 801df42:	f040 8196 	bne.w	801e272 <_Z41__static_initialization_and_destruction_0ii+0x352>
};
 801df46:	f107 0314 	add.w	r3, r7, #20
 801df4a:	4618      	mov	r0, r3
 801df4c:	2322      	movs	r3, #34	; 0x22
 801df4e:	461a      	mov	r2, r3
 801df50:	2100      	movs	r1, #0
 801df52:	f006 ffa5 	bl	8024ea0 <memset>
 801df56:	f107 0314 	add.w	r3, r7, #20
 801df5a:	223a      	movs	r2, #58	; 0x3a
 801df5c:	701a      	strb	r2, [r3, #0]
 801df5e:	f107 0314 	add.w	r3, r7, #20
 801df62:	2201      	movs	r2, #1
 801df64:	705a      	strb	r2, [r3, #1]
 801df66:	f107 0314 	add.w	r3, r7, #20
 801df6a:	220a      	movs	r2, #10
 801df6c:	709a      	strb	r2, [r3, #2]
 801df6e:	f107 0314 	add.w	r3, r7, #20
 801df72:	220a      	movs	r2, #10
 801df74:	70da      	strb	r2, [r3, #3]
 801df76:	f107 0314 	add.w	r3, r7, #20
 801df7a:	222c      	movs	r2, #44	; 0x2c
 801df7c:	711a      	strb	r2, [r3, #4]
 801df7e:	f107 0314 	add.w	r3, r7, #20
 801df82:	220c      	movs	r2, #12
 801df84:	715a      	strb	r2, [r3, #5]
 801df86:	f107 0314 	add.w	r3, r7, #20
 801df8a:	222e      	movs	r2, #46	; 0x2e
 801df8c:	719a      	strb	r2, [r3, #6]
 801df8e:	f107 0314 	add.w	r3, r7, #20
 801df92:	220b      	movs	r2, #11
 801df94:	71da      	strb	r2, [r3, #7]
 801df96:	f107 0314 	add.w	r3, r7, #20
 801df9a:	225b      	movs	r2, #91	; 0x5b
 801df9c:	721a      	strb	r2, [r3, #8]
 801df9e:	f107 0314 	add.w	r3, r7, #20
 801dfa2:	220d      	movs	r2, #13
 801dfa4:	725a      	strb	r2, [r3, #9]
 801dfa6:	f107 0314 	add.w	r3, r7, #20
 801dfaa:	225d      	movs	r2, #93	; 0x5d
 801dfac:	729a      	strb	r2, [r3, #10]
 801dfae:	f107 0314 	add.w	r3, r7, #20
 801dfb2:	220e      	movs	r2, #14
 801dfb4:	72da      	strb	r2, [r3, #11]
 801dfb6:	f107 0314 	add.w	r3, r7, #20
 801dfba:	227c      	movs	r2, #124	; 0x7c
 801dfbc:	731a      	strb	r2, [r3, #12]
 801dfbe:	f107 0314 	add.w	r3, r7, #20
 801dfc2:	2215      	movs	r2, #21
 801dfc4:	735a      	strb	r2, [r3, #13]
 801dfc6:	f107 0314 	add.w	r3, r7, #20
 801dfca:	2226      	movs	r2, #38	; 0x26
 801dfcc:	739a      	strb	r2, [r3, #14]
 801dfce:	f107 0314 	add.w	r3, r7, #20
 801dfd2:	2216      	movs	r2, #22
 801dfd4:	73da      	strb	r2, [r3, #15]
 801dfd6:	f107 0314 	add.w	r3, r7, #20
 801dfda:	222b      	movs	r2, #43	; 0x2b
 801dfdc:	741a      	strb	r2, [r3, #16]
 801dfde:	f107 0314 	add.w	r3, r7, #20
 801dfe2:	221f      	movs	r2, #31
 801dfe4:	745a      	strb	r2, [r3, #17]
 801dfe6:	f107 0314 	add.w	r3, r7, #20
 801dfea:	222d      	movs	r2, #45	; 0x2d
 801dfec:	749a      	strb	r2, [r3, #18]
 801dfee:	f107 0314 	add.w	r3, r7, #20
 801dff2:	2220      	movs	r2, #32
 801dff4:	74da      	strb	r2, [r3, #19]
 801dff6:	f107 0314 	add.w	r3, r7, #20
 801dffa:	222a      	movs	r2, #42	; 0x2a
 801dffc:	751a      	strb	r2, [r3, #20]
 801dffe:	f107 0314 	add.w	r3, r7, #20
 801e002:	2221      	movs	r2, #33	; 0x21
 801e004:	755a      	strb	r2, [r3, #21]
 801e006:	f107 0314 	add.w	r3, r7, #20
 801e00a:	222f      	movs	r2, #47	; 0x2f
 801e00c:	759a      	strb	r2, [r3, #22]
 801e00e:	f107 0314 	add.w	r3, r7, #20
 801e012:	2222      	movs	r2, #34	; 0x22
 801e014:	75da      	strb	r2, [r3, #23]
 801e016:	f107 0314 	add.w	r3, r7, #20
 801e01a:	225e      	movs	r2, #94	; 0x5e
 801e01c:	761a      	strb	r2, [r3, #24]
 801e01e:	f107 0314 	add.w	r3, r7, #20
 801e022:	2223      	movs	r2, #35	; 0x23
 801e024:	765a      	strb	r2, [r3, #25]
 801e026:	f107 0314 	add.w	r3, r7, #20
 801e02a:	2225      	movs	r2, #37	; 0x25
 801e02c:	769a      	strb	r2, [r3, #26]
 801e02e:	f107 0314 	add.w	r3, r7, #20
 801e032:	2224      	movs	r2, #36	; 0x24
 801e034:	76da      	strb	r2, [r3, #27]
 801e036:	f107 0314 	add.w	r3, r7, #20
 801e03a:	2228      	movs	r2, #40	; 0x28
 801e03c:	771a      	strb	r2, [r3, #28]
 801e03e:	f107 0314 	add.w	r3, r7, #20
 801e042:	2226      	movs	r2, #38	; 0x26
 801e044:	775a      	strb	r2, [r3, #29]
 801e046:	f107 0314 	add.w	r3, r7, #20
 801e04a:	2229      	movs	r2, #41	; 0x29
 801e04c:	779a      	strb	r2, [r3, #30]
 801e04e:	f107 0314 	add.w	r3, r7, #20
 801e052:	2227      	movs	r2, #39	; 0x27
 801e054:	77da      	strb	r2, [r3, #31]
 801e056:	f107 0314 	add.w	r3, r7, #20
 801e05a:	2225      	movs	r2, #37	; 0x25
 801e05c:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 801e060:	f107 030c 	add.w	r3, r7, #12
 801e064:	f107 0214 	add.w	r2, r7, #20
 801e068:	601a      	str	r2, [r3, #0]
 801e06a:	f107 030c 	add.w	r3, r7, #12
 801e06e:	2211      	movs	r2, #17
 801e070:	605a      	str	r2, [r3, #4]
 801e072:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801e076:	4618      	mov	r0, r3
 801e078:	f7e3 fe34 	bl	8001ce4 <_ZNSaISt4pairIKc10token_typeEEC1Ev>
 801e07c:	f107 0138 	add.w	r1, r7, #56	; 0x38
 801e080:	f107 020c 	add.w	r2, r7, #12
 801e084:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801e088:	9300      	str	r3, [sp, #0]
 801e08a:	460b      	mov	r3, r1
 801e08c:	ca06      	ldmia	r2, {r1, r2}
 801e08e:	4885      	ldr	r0, [pc, #532]	; (801e2a4 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 801e090:	f7e3 fe40 	bl	8001d14 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 801e094:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801e098:	4618      	mov	r0, r3
 801e09a:	f7e3 fe2f 	bl	8001cfc <_ZNSaISt4pairIKc10token_typeEED1Ev>
	{"true", TOKEN_TRUE},
 801e09e:	2305      	movs	r3, #5
 801e0a0:	f887 3162 	strb.w	r3, [r7, #354]	; 0x162
};
 801e0a4:	f507 72b1 	add.w	r2, r7, #354	; 0x162
 801e0a8:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801e0ac:	497e      	ldr	r1, [pc, #504]	; (801e2a8 <_Z41__static_initialization_and_destruction_0ii+0x388>)
 801e0ae:	4618      	mov	r0, r3
 801e0b0:	f7e3 f822 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"false", TOKEN_FALSE},
 801e0b4:	2306      	movs	r3, #6
 801e0b6:	f887 3163 	strb.w	r3, [r7, #355]	; 0x163
};
 801e0ba:	f207 1263 	addw	r2, r7, #355	; 0x163
 801e0be:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801e0c2:	331c      	adds	r3, #28
 801e0c4:	4979      	ldr	r1, [pc, #484]	; (801e2ac <_Z41__static_initialization_and_destruction_0ii+0x38c>)
 801e0c6:	4618      	mov	r0, r3
 801e0c8:	f7e3 f83e 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"setup", TOKEN_SETUP},
 801e0cc:	2307      	movs	r3, #7
 801e0ce:	f887 3164 	strb.w	r3, [r7, #356]	; 0x164
};
 801e0d2:	f507 72b2 	add.w	r2, r7, #356	; 0x164
 801e0d6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801e0da:	3338      	adds	r3, #56	; 0x38
 801e0dc:	4974      	ldr	r1, [pc, #464]	; (801e2b0 <_Z41__static_initialization_and_destruction_0ii+0x390>)
 801e0de:	4618      	mov	r0, r3
 801e0e0:	f7e3 f832 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"loop", TOKEN_LOOP},
 801e0e4:	2308      	movs	r3, #8
 801e0e6:	f887 3165 	strb.w	r3, [r7, #357]	; 0x165
};
 801e0ea:	f207 1265 	addw	r2, r7, #357	; 0x165
 801e0ee:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801e0f2:	3354      	adds	r3, #84	; 0x54
 801e0f4:	496f      	ldr	r1, [pc, #444]	; (801e2b4 <_Z41__static_initialization_and_destruction_0ii+0x394>)
 801e0f6:	4618      	mov	r0, r3
 801e0f8:	f7e2 fffe 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"finish", TOKEN_FINISH},
 801e0fc:	2309      	movs	r3, #9
 801e0fe:	f887 3166 	strb.w	r3, [r7, #358]	; 0x166
};
 801e102:	f507 72b3 	add.w	r2, r7, #358	; 0x166
 801e106:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801e10a:	3370      	adds	r3, #112	; 0x70
 801e10c:	496a      	ldr	r1, [pc, #424]	; (801e2b8 <_Z41__static_initialization_and_destruction_0ii+0x398>)
 801e10e:	4618      	mov	r0, r3
 801e110:	f7e3 f842 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"if", TOKEN_IF},
 801e114:	2310      	movs	r3, #16
 801e116:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167
};
 801e11a:	f207 1267 	addw	r2, r7, #359	; 0x167
 801e11e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801e122:	338c      	adds	r3, #140	; 0x8c
 801e124:	4965      	ldr	r1, [pc, #404]	; (801e2bc <_Z41__static_initialization_and_destruction_0ii+0x39c>)
 801e126:	4618      	mov	r0, r3
 801e128:	f7e3 f85e 	bl	80011e8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>
	{"elseif", TOKEN_ELSEIF},
 801e12c:	2311      	movs	r3, #17
 801e12e:	f887 3168 	strb.w	r3, [r7, #360]	; 0x168
};
 801e132:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 801e136:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801e13a:	33a8      	adds	r3, #168	; 0xa8
 801e13c:	4960      	ldr	r1, [pc, #384]	; (801e2c0 <_Z41__static_initialization_and_destruction_0ii+0x3a0>)
 801e13e:	4618      	mov	r0, r3
 801e140:	f7e3 f82a 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"else", TOKEN_ELSE},
 801e144:	2312      	movs	r3, #18
 801e146:	f887 3169 	strb.w	r3, [r7, #361]	; 0x169
};
 801e14a:	f207 1269 	addw	r2, r7, #361	; 0x169
 801e14e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801e152:	33c4      	adds	r3, #196	; 0xc4
 801e154:	495b      	ldr	r1, [pc, #364]	; (801e2c4 <_Z41__static_initialization_and_destruction_0ii+0x3a4>)
 801e156:	4618      	mov	r0, r3
 801e158:	f7e2 ffce 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"while", TOKEN_WHILE},
 801e15c:	2313      	movs	r3, #19
 801e15e:	f887 316a 	strb.w	r3, [r7, #362]	; 0x16a
};
 801e162:	f507 72b5 	add.w	r2, r7, #362	; 0x16a
 801e166:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801e16a:	33e0      	adds	r3, #224	; 0xe0
 801e16c:	4956      	ldr	r1, [pc, #344]	; (801e2c8 <_Z41__static_initialization_and_destruction_0ii+0x3a8>)
 801e16e:	4618      	mov	r0, r3
 801e170:	f7e2 ffea 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"end", TOKEN_END},
 801e174:	2314      	movs	r3, #20
 801e176:	f887 316b 	strb.w	r3, [r7, #363]	; 0x16b
};
 801e17a:	f207 126b 	addw	r2, r7, #363	; 0x16b
 801e17e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801e182:	33fc      	adds	r3, #252	; 0xfc
 801e184:	4951      	ldr	r1, [pc, #324]	; (801e2cc <_Z41__static_initialization_and_destruction_0ii+0x3ac>)
 801e186:	4618      	mov	r0, r3
 801e188:	f7e3 f856 	bl	8001238 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>
 801e18c:	f107 0340 	add.w	r3, r7, #64	; 0x40
 801e190:	f107 0248 	add.w	r2, r7, #72	; 0x48
 801e194:	601a      	str	r2, [r3, #0]
 801e196:	f107 0340 	add.w	r3, r7, #64	; 0x40
 801e19a:	220a      	movs	r2, #10
 801e19c:	605a      	str	r2, [r3, #4]
 801e19e:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 801e1a2:	4618      	mov	r0, r3
 801e1a4:	f7e3 fe43 	bl	8001e2e <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 801e1a8:	f507 71b6 	add.w	r1, r7, #364	; 0x16c
 801e1ac:	f107 0240 	add.w	r2, r7, #64	; 0x40
 801e1b0:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 801e1b4:	9300      	str	r3, [sp, #0]
 801e1b6:	460b      	mov	r3, r1
 801e1b8:	ca06      	ldmia	r2, {r1, r2}
 801e1ba:	4845      	ldr	r0, [pc, #276]	; (801e2d0 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 801e1bc:	f7e3 fe4f 	bl	8001e5e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>
 801e1c0:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 801e1c4:	4618      	mov	r0, r3
 801e1c6:	f7e3 fe3e 	bl	8001e46 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 801e1ca:	f107 0448 	add.w	r4, r7, #72	; 0x48
 801e1ce:	f504 748c 	add.w	r4, r4, #280	; 0x118
 801e1d2:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801e1d6:	429c      	cmp	r4, r3
 801e1d8:	d004      	beq.n	801e1e4 <_Z41__static_initialization_and_destruction_0ii+0x2c4>
 801e1da:	3c1c      	subs	r4, #28
 801e1dc:	4620      	mov	r0, r4
 801e1de:	f7e2 ff7e 	bl	80010de <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 801e1e2:	e7f6      	b.n	801e1d2 <_Z41__static_initialization_and_destruction_0ii+0x2b2>
};
 801e1e4:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 801e1e8:	2200      	movs	r2, #0
 801e1ea:	601a      	str	r2, [r3, #0]
 801e1ec:	605a      	str	r2, [r3, #4]
 801e1ee:	609a      	str	r2, [r3, #8]
 801e1f0:	233c      	movs	r3, #60	; 0x3c
 801e1f2:	f887 317c 	strb.w	r3, [r7, #380]	; 0x17c
 801e1f6:	231b      	movs	r3, #27
 801e1f8:	f887 317d 	strb.w	r3, [r7, #381]	; 0x17d
 801e1fc:	231c      	movs	r3, #28
 801e1fe:	f887 317e 	strb.w	r3, [r7, #382]	; 0x17e
 801e202:	233e      	movs	r3, #62	; 0x3e
 801e204:	f887 317f 	strb.w	r3, [r7, #383]	; 0x17f
 801e208:	2319      	movs	r3, #25
 801e20a:	f887 3180 	strb.w	r3, [r7, #384]	; 0x180
 801e20e:	231a      	movs	r3, #26
 801e210:	f887 3181 	strb.w	r3, [r7, #385]	; 0x181
 801e214:	233d      	movs	r3, #61	; 0x3d
 801e216:	f887 3182 	strb.w	r3, [r7, #386]	; 0x182
 801e21a:	2318      	movs	r3, #24
 801e21c:	f887 3183 	strb.w	r3, [r7, #387]	; 0x183
 801e220:	231d      	movs	r3, #29
 801e222:	f887 3184 	strb.w	r3, [r7, #388]	; 0x184
 801e226:	2321      	movs	r3, #33	; 0x21
 801e228:	f887 3185 	strb.w	r3, [r7, #389]	; 0x185
 801e22c:	2317      	movs	r3, #23
 801e22e:	f887 3186 	strb.w	r3, [r7, #390]	; 0x186
 801e232:	231e      	movs	r3, #30
 801e234:	f887 3187 	strb.w	r3, [r7, #391]	; 0x187
 801e238:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 801e23c:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 801e240:	2304      	movs	r3, #4
 801e242:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 801e246:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801e24a:	4618      	mov	r0, r3
 801e24c:	f7e3 fe37 	bl	8001ebe <_ZNSaISt4pairIKc12double_tokenEEC1Ev>
 801e250:	f507 72c4 	add.w	r2, r7, #392	; 0x188
 801e254:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801e258:	9300      	str	r3, [sp, #0]
 801e25a:	4613      	mov	r3, r2
 801e25c:	f507 72ba 	add.w	r2, r7, #372	; 0x174
 801e260:	ca06      	ldmia	r2, {r1, r2}
 801e262:	481c      	ldr	r0, [pc, #112]	; (801e2d4 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 801e264:	f7e3 fe43 	bl	8001eee <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 801e268:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801e26c:	4618      	mov	r0, r3
 801e26e:	f7e3 fe32 	bl	8001ed6 <_ZNSaISt4pairIKc12double_tokenEED1Ev>
static const std::map<char, double_token> token_double_chars
 801e272:	1d3b      	adds	r3, r7, #4
 801e274:	681b      	ldr	r3, [r3, #0]
 801e276:	2b00      	cmp	r3, #0
 801e278:	d10e      	bne.n	801e298 <_Z41__static_initialization_and_destruction_0ii+0x378>
 801e27a:	463b      	mov	r3, r7
 801e27c:	681b      	ldr	r3, [r3, #0]
 801e27e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801e282:	4293      	cmp	r3, r2
 801e284:	d108      	bne.n	801e298 <_Z41__static_initialization_and_destruction_0ii+0x378>
 801e286:	4813      	ldr	r0, [pc, #76]	; (801e2d4 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 801e288:	f7eb fafc 	bl	8009884 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>
static const std::map<std::string, token_type> token_strings
 801e28c:	4810      	ldr	r0, [pc, #64]	; (801e2d0 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 801e28e:	f7eb fb06 	bl	800989e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
static const std::map<char, token_type> token_chars
 801e292:	4804      	ldr	r0, [pc, #16]	; (801e2a4 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 801e294:	f7eb fb10 	bl	80098b8 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>
 801e298:	bf00      	nop
 801e29a:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 801e29e:	46bd      	mov	sp, r7
 801e2a0:	bd90      	pop	{r4, r7, pc}
 801e2a2:	bf00      	nop
 801e2a4:	200005e8 	.word	0x200005e8
 801e2a8:	08029f54 	.word	0x08029f54
 801e2ac:	08029f5c 	.word	0x08029f5c
 801e2b0:	08029f64 	.word	0x08029f64
 801e2b4:	08029f6c 	.word	0x08029f6c
 801e2b8:	08029f74 	.word	0x08029f74
 801e2bc:	08029f7c 	.word	0x08029f7c
 801e2c0:	08029f80 	.word	0x08029f80
 801e2c4:	08029f88 	.word	0x08029f88
 801e2c8:	08029f90 	.word	0x08029f90
 801e2cc:	08029f98 	.word	0x08029f98
 801e2d0:	20000600 	.word	0x20000600
 801e2d4:	20000618 	.word	0x20000618

0801e2d8 <_GLOBAL__sub_I__ZN6Parser31parse_variable_or_function_callEP17Primal_expression>:
 801e2d8:	b580      	push	{r7, lr}
 801e2da:	af00      	add	r7, sp, #0
 801e2dc:	f64f 71ff 	movw	r1, #65535	; 0xffff
 801e2e0:	2001      	movs	r0, #1
 801e2e2:	f7ff fe1d 	bl	801df20 <_Z41__static_initialization_and_destruction_0ii>
 801e2e6:	bd80      	pop	{r7, pc}

0801e2e8 <_GLOBAL__sub_D__ZN6Parser31parse_variable_or_function_callEP17Primal_expression>:
 801e2e8:	b580      	push	{r7, lr}
 801e2ea:	af00      	add	r7, sp, #0
 801e2ec:	f64f 71ff 	movw	r1, #65535	; 0xffff
 801e2f0:	2000      	movs	r0, #0
 801e2f2:	f7ff fe15 	bl	801df20 <_Z41__static_initialization_and_destruction_0ii>
 801e2f6:	bd80      	pop	{r7, pc}

0801e2f8 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 801e2f8:	b580      	push	{r7, lr}
 801e2fa:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 801e2fc:	f002 faf5 	bl	80208ea <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 801e300:	f000 f808 	bl	801e314 <_Z18SystemClock_Configv>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 801e304:	f000 f8de 	bl	801e4c4 <_ZL12MX_GPIO_Initv>
  MX_USART1_UART_Init();
 801e308:	f000 f8a8 	bl	801e45c <_ZL19MX_USART1_UART_Initv>
  /* USER CODE BEGIN 2 */
  my_main_run();
 801e30c:	f000 fae4 	bl	801e8d8 <_Z11my_main_runv>

  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
 801e310:	e7fe      	b.n	801e310 <main+0x18>
	...

0801e314 <_Z18SystemClock_Configv>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 801e314:	b580      	push	{r7, lr}
 801e316:	b0b4      	sub	sp, #208	; 0xd0
 801e318:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 801e31a:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 801e31e:	2230      	movs	r2, #48	; 0x30
 801e320:	2100      	movs	r1, #0
 801e322:	4618      	mov	r0, r3
 801e324:	f006 fdbc 	bl	8024ea0 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 801e328:	f107 038c 	add.w	r3, r7, #140	; 0x8c
 801e32c:	2200      	movs	r2, #0
 801e32e:	601a      	str	r2, [r3, #0]
 801e330:	605a      	str	r2, [r3, #4]
 801e332:	609a      	str	r2, [r3, #8]
 801e334:	60da      	str	r2, [r3, #12]
 801e336:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 801e338:	f107 0308 	add.w	r3, r7, #8
 801e33c:	2284      	movs	r2, #132	; 0x84
 801e33e:	2100      	movs	r1, #0
 801e340:	4618      	mov	r0, r3
 801e342:	f006 fdad 	bl	8024ea0 <memset>

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 801e346:	4b43      	ldr	r3, [pc, #268]	; (801e454 <_Z18SystemClock_Configv+0x140>)
 801e348:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801e34a:	4a42      	ldr	r2, [pc, #264]	; (801e454 <_Z18SystemClock_Configv+0x140>)
 801e34c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 801e350:	6413      	str	r3, [r2, #64]	; 0x40
 801e352:	4b40      	ldr	r3, [pc, #256]	; (801e454 <_Z18SystemClock_Configv+0x140>)
 801e354:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801e356:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 801e35a:	607b      	str	r3, [r7, #4]
 801e35c:	687b      	ldr	r3, [r7, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 801e35e:	4b3e      	ldr	r3, [pc, #248]	; (801e458 <_Z18SystemClock_Configv+0x144>)
 801e360:	681b      	ldr	r3, [r3, #0]
 801e362:	4a3d      	ldr	r2, [pc, #244]	; (801e458 <_Z18SystemClock_Configv+0x144>)
 801e364:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 801e368:	6013      	str	r3, [r2, #0]
 801e36a:	4b3b      	ldr	r3, [pc, #236]	; (801e458 <_Z18SystemClock_Configv+0x144>)
 801e36c:	681b      	ldr	r3, [r3, #0]
 801e36e:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 801e372:	603b      	str	r3, [r7, #0]
 801e374:	683b      	ldr	r3, [r7, #0]
  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 801e376:	2302      	movs	r3, #2
 801e378:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 801e37c:	2301      	movs	r3, #1
 801e37e:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 801e382:	2310      	movs	r3, #16
 801e384:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 801e388:	2302      	movs	r3, #2
 801e38a:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 801e38e:	2300      	movs	r3, #0
 801e390:	f8c7 30bc 	str.w	r3, [r7, #188]	; 0xbc
  RCC_OscInitStruct.PLL.PLLM = 8;
 801e394:	2308      	movs	r3, #8
 801e396:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
  RCC_OscInitStruct.PLL.PLLN = 216;
 801e39a:	23d8      	movs	r3, #216	; 0xd8
 801e39c:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 801e3a0:	2302      	movs	r3, #2
 801e3a2:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
  RCC_OscInitStruct.PLL.PLLQ = 2;
 801e3a6:	2302      	movs	r3, #2
 801e3a8:	f8c7 30cc 	str.w	r3, [r7, #204]	; 0xcc
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 801e3ac:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 801e3b0:	4618      	mov	r0, r3
 801e3b2:	f002 febb 	bl	802112c <HAL_RCC_OscConfig>
 801e3b6:	4603      	mov	r3, r0
 801e3b8:	2b00      	cmp	r3, #0
 801e3ba:	bf14      	ite	ne
 801e3bc:	2301      	movne	r3, #1
 801e3be:	2300      	moveq	r3, #0
 801e3c0:	b2db      	uxtb	r3, r3
 801e3c2:	2b00      	cmp	r3, #0
 801e3c4:	d001      	beq.n	801e3ca <_Z18SystemClock_Configv+0xb6>
  {
    Error_Handler();
 801e3c6:	f000 f895 	bl	801e4f4 <Error_Handler>
  }
  /** Activate the Over-Drive mode
  */
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 801e3ca:	f002 fe5f 	bl	802108c <HAL_PWREx_EnableOverDrive>
 801e3ce:	4603      	mov	r3, r0
 801e3d0:	2b00      	cmp	r3, #0
 801e3d2:	bf14      	ite	ne
 801e3d4:	2301      	movne	r3, #1
 801e3d6:	2300      	moveq	r3, #0
 801e3d8:	b2db      	uxtb	r3, r3
 801e3da:	2b00      	cmp	r3, #0
 801e3dc:	d001      	beq.n	801e3e2 <_Z18SystemClock_Configv+0xce>
  {
    Error_Handler();
 801e3de:	f000 f889 	bl	801e4f4 <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 801e3e2:	230f      	movs	r3, #15
 801e3e4:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 801e3e8:	2302      	movs	r3, #2
 801e3ea:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 801e3ee:	2300      	movs	r3, #0
 801e3f0:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 801e3f4:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 801e3f8:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 801e3fc:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 801e400:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7) != HAL_OK)
 801e404:	f107 038c 	add.w	r3, r7, #140	; 0x8c
 801e408:	2107      	movs	r1, #7
 801e40a:	4618      	mov	r0, r3
 801e40c:	f003 f932 	bl	8021674 <HAL_RCC_ClockConfig>
 801e410:	4603      	mov	r3, r0
 801e412:	2b00      	cmp	r3, #0
 801e414:	bf14      	ite	ne
 801e416:	2301      	movne	r3, #1
 801e418:	2300      	moveq	r3, #0
 801e41a:	b2db      	uxtb	r3, r3
 801e41c:	2b00      	cmp	r3, #0
 801e41e:	d001      	beq.n	801e424 <_Z18SystemClock_Configv+0x110>
  {
    Error_Handler();
 801e420:	f000 f868 	bl	801e4f4 <Error_Handler>
  }
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_USART1;
 801e424:	2340      	movs	r3, #64	; 0x40
 801e426:	60bb      	str	r3, [r7, #8]
  PeriphClkInitStruct.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK2;
 801e428:	2300      	movs	r3, #0
 801e42a:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 801e42c:	f107 0308 	add.w	r3, r7, #8
 801e430:	4618      	mov	r0, r3
 801e432:	f003 faf5 	bl	8021a20 <HAL_RCCEx_PeriphCLKConfig>
 801e436:	4603      	mov	r3, r0
 801e438:	2b00      	cmp	r3, #0
 801e43a:	bf14      	ite	ne
 801e43c:	2301      	movne	r3, #1
 801e43e:	2300      	moveq	r3, #0
 801e440:	b2db      	uxtb	r3, r3
 801e442:	2b00      	cmp	r3, #0
 801e444:	d001      	beq.n	801e44a <_Z18SystemClock_Configv+0x136>
  {
    Error_Handler();
 801e446:	f000 f855 	bl	801e4f4 <Error_Handler>
  }
}
 801e44a:	bf00      	nop
 801e44c:	37d0      	adds	r7, #208	; 0xd0
 801e44e:	46bd      	mov	sp, r7
 801e450:	bd80      	pop	{r7, pc}
 801e452:	bf00      	nop
 801e454:	40023800 	.word	0x40023800
 801e458:	40007000 	.word	0x40007000

0801e45c <_ZL19MX_USART1_UART_Initv>:
  * @brief USART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART1_UART_Init(void)
{
 801e45c:	b580      	push	{r7, lr}
 801e45e:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 801e460:	4b16      	ldr	r3, [pc, #88]	; (801e4bc <_ZL19MX_USART1_UART_Initv+0x60>)
 801e462:	4a17      	ldr	r2, [pc, #92]	; (801e4c0 <_ZL19MX_USART1_UART_Initv+0x64>)
 801e464:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 115200;
 801e466:	4b15      	ldr	r3, [pc, #84]	; (801e4bc <_ZL19MX_USART1_UART_Initv+0x60>)
 801e468:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 801e46c:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 801e46e:	4b13      	ldr	r3, [pc, #76]	; (801e4bc <_ZL19MX_USART1_UART_Initv+0x60>)
 801e470:	2200      	movs	r2, #0
 801e472:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 801e474:	4b11      	ldr	r3, [pc, #68]	; (801e4bc <_ZL19MX_USART1_UART_Initv+0x60>)
 801e476:	2200      	movs	r2, #0
 801e478:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 801e47a:	4b10      	ldr	r3, [pc, #64]	; (801e4bc <_ZL19MX_USART1_UART_Initv+0x60>)
 801e47c:	2200      	movs	r2, #0
 801e47e:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 801e480:	4b0e      	ldr	r3, [pc, #56]	; (801e4bc <_ZL19MX_USART1_UART_Initv+0x60>)
 801e482:	220c      	movs	r2, #12
 801e484:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 801e486:	4b0d      	ldr	r3, [pc, #52]	; (801e4bc <_ZL19MX_USART1_UART_Initv+0x60>)
 801e488:	2200      	movs	r2, #0
 801e48a:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 801e48c:	4b0b      	ldr	r3, [pc, #44]	; (801e4bc <_ZL19MX_USART1_UART_Initv+0x60>)
 801e48e:	2200      	movs	r2, #0
 801e490:	61da      	str	r2, [r3, #28]
  huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 801e492:	4b0a      	ldr	r3, [pc, #40]	; (801e4bc <_ZL19MX_USART1_UART_Initv+0x60>)
 801e494:	2200      	movs	r2, #0
 801e496:	621a      	str	r2, [r3, #32]
  huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 801e498:	4b08      	ldr	r3, [pc, #32]	; (801e4bc <_ZL19MX_USART1_UART_Initv+0x60>)
 801e49a:	2200      	movs	r2, #0
 801e49c:	625a      	str	r2, [r3, #36]	; 0x24
  if (HAL_UART_Init(&huart1) != HAL_OK)
 801e49e:	4807      	ldr	r0, [pc, #28]	; (801e4bc <_ZL19MX_USART1_UART_Initv+0x60>)
 801e4a0:	f003 feae 	bl	8022200 <HAL_UART_Init>
 801e4a4:	4603      	mov	r3, r0
 801e4a6:	2b00      	cmp	r3, #0
 801e4a8:	bf14      	ite	ne
 801e4aa:	2301      	movne	r3, #1
 801e4ac:	2300      	moveq	r3, #0
 801e4ae:	b2db      	uxtb	r3, r3
 801e4b0:	2b00      	cmp	r3, #0
 801e4b2:	d001      	beq.n	801e4b8 <_ZL19MX_USART1_UART_Initv+0x5c>
  {
    Error_Handler();
 801e4b4:	f000 f81e 	bl	801e4f4 <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 801e4b8:	bf00      	nop
 801e4ba:	bd80      	pop	{r7, pc}
 801e4bc:	20000678 	.word	0x20000678
 801e4c0:	40011000 	.word	0x40011000

0801e4c4 <_ZL12MX_GPIO_Initv>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 801e4c4:	b480      	push	{r7}
 801e4c6:	b083      	sub	sp, #12
 801e4c8:	af00      	add	r7, sp, #0

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOA_CLK_ENABLE();
 801e4ca:	4b09      	ldr	r3, [pc, #36]	; (801e4f0 <_ZL12MX_GPIO_Initv+0x2c>)
 801e4cc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801e4ce:	4a08      	ldr	r2, [pc, #32]	; (801e4f0 <_ZL12MX_GPIO_Initv+0x2c>)
 801e4d0:	f043 0301 	orr.w	r3, r3, #1
 801e4d4:	6313      	str	r3, [r2, #48]	; 0x30
 801e4d6:	4b06      	ldr	r3, [pc, #24]	; (801e4f0 <_ZL12MX_GPIO_Initv+0x2c>)
 801e4d8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801e4da:	f003 0301 	and.w	r3, r3, #1
 801e4de:	607b      	str	r3, [r7, #4]
 801e4e0:	687b      	ldr	r3, [r7, #4]

}
 801e4e2:	bf00      	nop
 801e4e4:	370c      	adds	r7, #12
 801e4e6:	46bd      	mov	sp, r7
 801e4e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 801e4ec:	4770      	bx	lr
 801e4ee:	bf00      	nop
 801e4f0:	40023800 	.word	0x40023800

0801e4f4 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 801e4f4:	b480      	push	{r7}
 801e4f6:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 801e4f8:	b672      	cpsid	i
}
 801e4fa:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 801e4fc:	e7fe      	b.n	801e4fc <Error_Handler+0x8>
	...

0801e500 <_Z41__static_initialization_and_destruction_0ii>:
  {
  }
  /* USER CODE END Error_Handler_Debug */
}
 801e500:	b590      	push	{r4, r7, lr}
 801e502:	b0e7      	sub	sp, #412	; 0x19c
 801e504:	af02      	add	r7, sp, #8
 801e506:	1d3b      	adds	r3, r7, #4
 801e508:	6018      	str	r0, [r3, #0]
 801e50a:	463b      	mov	r3, r7
 801e50c:	6019      	str	r1, [r3, #0]
 801e50e:	1d3b      	adds	r3, r7, #4
 801e510:	681b      	ldr	r3, [r3, #0]
 801e512:	2b01      	cmp	r3, #1
 801e514:	f040 819d 	bne.w	801e852 <_Z41__static_initialization_and_destruction_0ii+0x352>
 801e518:	463b      	mov	r3, r7
 801e51a:	681b      	ldr	r3, [r3, #0]
 801e51c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801e520:	4293      	cmp	r3, r2
 801e522:	f040 8196 	bne.w	801e852 <_Z41__static_initialization_and_destruction_0ii+0x352>
};
 801e526:	f107 0314 	add.w	r3, r7, #20
 801e52a:	4618      	mov	r0, r3
 801e52c:	2322      	movs	r3, #34	; 0x22
 801e52e:	461a      	mov	r2, r3
 801e530:	2100      	movs	r1, #0
 801e532:	f006 fcb5 	bl	8024ea0 <memset>
 801e536:	f107 0314 	add.w	r3, r7, #20
 801e53a:	223a      	movs	r2, #58	; 0x3a
 801e53c:	701a      	strb	r2, [r3, #0]
 801e53e:	f107 0314 	add.w	r3, r7, #20
 801e542:	2201      	movs	r2, #1
 801e544:	705a      	strb	r2, [r3, #1]
 801e546:	f107 0314 	add.w	r3, r7, #20
 801e54a:	220a      	movs	r2, #10
 801e54c:	709a      	strb	r2, [r3, #2]
 801e54e:	f107 0314 	add.w	r3, r7, #20
 801e552:	220a      	movs	r2, #10
 801e554:	70da      	strb	r2, [r3, #3]
 801e556:	f107 0314 	add.w	r3, r7, #20
 801e55a:	222c      	movs	r2, #44	; 0x2c
 801e55c:	711a      	strb	r2, [r3, #4]
 801e55e:	f107 0314 	add.w	r3, r7, #20
 801e562:	220c      	movs	r2, #12
 801e564:	715a      	strb	r2, [r3, #5]
 801e566:	f107 0314 	add.w	r3, r7, #20
 801e56a:	222e      	movs	r2, #46	; 0x2e
 801e56c:	719a      	strb	r2, [r3, #6]
 801e56e:	f107 0314 	add.w	r3, r7, #20
 801e572:	220b      	movs	r2, #11
 801e574:	71da      	strb	r2, [r3, #7]
 801e576:	f107 0314 	add.w	r3, r7, #20
 801e57a:	225b      	movs	r2, #91	; 0x5b
 801e57c:	721a      	strb	r2, [r3, #8]
 801e57e:	f107 0314 	add.w	r3, r7, #20
 801e582:	220d      	movs	r2, #13
 801e584:	725a      	strb	r2, [r3, #9]
 801e586:	f107 0314 	add.w	r3, r7, #20
 801e58a:	225d      	movs	r2, #93	; 0x5d
 801e58c:	729a      	strb	r2, [r3, #10]
 801e58e:	f107 0314 	add.w	r3, r7, #20
 801e592:	220e      	movs	r2, #14
 801e594:	72da      	strb	r2, [r3, #11]
 801e596:	f107 0314 	add.w	r3, r7, #20
 801e59a:	227c      	movs	r2, #124	; 0x7c
 801e59c:	731a      	strb	r2, [r3, #12]
 801e59e:	f107 0314 	add.w	r3, r7, #20
 801e5a2:	2215      	movs	r2, #21
 801e5a4:	735a      	strb	r2, [r3, #13]
 801e5a6:	f107 0314 	add.w	r3, r7, #20
 801e5aa:	2226      	movs	r2, #38	; 0x26
 801e5ac:	739a      	strb	r2, [r3, #14]
 801e5ae:	f107 0314 	add.w	r3, r7, #20
 801e5b2:	2216      	movs	r2, #22
 801e5b4:	73da      	strb	r2, [r3, #15]
 801e5b6:	f107 0314 	add.w	r3, r7, #20
 801e5ba:	222b      	movs	r2, #43	; 0x2b
 801e5bc:	741a      	strb	r2, [r3, #16]
 801e5be:	f107 0314 	add.w	r3, r7, #20
 801e5c2:	221f      	movs	r2, #31
 801e5c4:	745a      	strb	r2, [r3, #17]
 801e5c6:	f107 0314 	add.w	r3, r7, #20
 801e5ca:	222d      	movs	r2, #45	; 0x2d
 801e5cc:	749a      	strb	r2, [r3, #18]
 801e5ce:	f107 0314 	add.w	r3, r7, #20
 801e5d2:	2220      	movs	r2, #32
 801e5d4:	74da      	strb	r2, [r3, #19]
 801e5d6:	f107 0314 	add.w	r3, r7, #20
 801e5da:	222a      	movs	r2, #42	; 0x2a
 801e5dc:	751a      	strb	r2, [r3, #20]
 801e5de:	f107 0314 	add.w	r3, r7, #20
 801e5e2:	2221      	movs	r2, #33	; 0x21
 801e5e4:	755a      	strb	r2, [r3, #21]
 801e5e6:	f107 0314 	add.w	r3, r7, #20
 801e5ea:	222f      	movs	r2, #47	; 0x2f
 801e5ec:	759a      	strb	r2, [r3, #22]
 801e5ee:	f107 0314 	add.w	r3, r7, #20
 801e5f2:	2222      	movs	r2, #34	; 0x22
 801e5f4:	75da      	strb	r2, [r3, #23]
 801e5f6:	f107 0314 	add.w	r3, r7, #20
 801e5fa:	225e      	movs	r2, #94	; 0x5e
 801e5fc:	761a      	strb	r2, [r3, #24]
 801e5fe:	f107 0314 	add.w	r3, r7, #20
 801e602:	2223      	movs	r2, #35	; 0x23
 801e604:	765a      	strb	r2, [r3, #25]
 801e606:	f107 0314 	add.w	r3, r7, #20
 801e60a:	2225      	movs	r2, #37	; 0x25
 801e60c:	769a      	strb	r2, [r3, #26]
 801e60e:	f107 0314 	add.w	r3, r7, #20
 801e612:	2224      	movs	r2, #36	; 0x24
 801e614:	76da      	strb	r2, [r3, #27]
 801e616:	f107 0314 	add.w	r3, r7, #20
 801e61a:	2228      	movs	r2, #40	; 0x28
 801e61c:	771a      	strb	r2, [r3, #28]
 801e61e:	f107 0314 	add.w	r3, r7, #20
 801e622:	2226      	movs	r2, #38	; 0x26
 801e624:	775a      	strb	r2, [r3, #29]
 801e626:	f107 0314 	add.w	r3, r7, #20
 801e62a:	2229      	movs	r2, #41	; 0x29
 801e62c:	779a      	strb	r2, [r3, #30]
 801e62e:	f107 0314 	add.w	r3, r7, #20
 801e632:	2227      	movs	r2, #39	; 0x27
 801e634:	77da      	strb	r2, [r3, #31]
 801e636:	f107 0314 	add.w	r3, r7, #20
 801e63a:	2225      	movs	r2, #37	; 0x25
 801e63c:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 801e640:	f107 030c 	add.w	r3, r7, #12
 801e644:	f107 0214 	add.w	r2, r7, #20
 801e648:	601a      	str	r2, [r3, #0]
 801e64a:	f107 030c 	add.w	r3, r7, #12
 801e64e:	2211      	movs	r2, #17
 801e650:	605a      	str	r2, [r3, #4]
 801e652:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801e656:	4618      	mov	r0, r3
 801e658:	f7e3 fb44 	bl	8001ce4 <_ZNSaISt4pairIKc10token_typeEEC1Ev>
 801e65c:	f107 0138 	add.w	r1, r7, #56	; 0x38
 801e660:	f107 020c 	add.w	r2, r7, #12
 801e664:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801e668:	9300      	str	r3, [sp, #0]
 801e66a:	460b      	mov	r3, r1
 801e66c:	ca06      	ldmia	r2, {r1, r2}
 801e66e:	4885      	ldr	r0, [pc, #532]	; (801e884 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 801e670:	f7e3 fb50 	bl	8001d14 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 801e674:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801e678:	4618      	mov	r0, r3
 801e67a:	f7e3 fb3f 	bl	8001cfc <_ZNSaISt4pairIKc10token_typeEED1Ev>
	{"true", TOKEN_TRUE},
 801e67e:	2305      	movs	r3, #5
 801e680:	f887 3162 	strb.w	r3, [r7, #354]	; 0x162
};
 801e684:	f507 72b1 	add.w	r2, r7, #354	; 0x162
 801e688:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801e68c:	497e      	ldr	r1, [pc, #504]	; (801e888 <_Z41__static_initialization_and_destruction_0ii+0x388>)
 801e68e:	4618      	mov	r0, r3
 801e690:	f7e2 fd32 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"false", TOKEN_FALSE},
 801e694:	2306      	movs	r3, #6
 801e696:	f887 3163 	strb.w	r3, [r7, #355]	; 0x163
};
 801e69a:	f207 1263 	addw	r2, r7, #355	; 0x163
 801e69e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801e6a2:	331c      	adds	r3, #28
 801e6a4:	4979      	ldr	r1, [pc, #484]	; (801e88c <_Z41__static_initialization_and_destruction_0ii+0x38c>)
 801e6a6:	4618      	mov	r0, r3
 801e6a8:	f7e2 fd4e 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"setup", TOKEN_SETUP},
 801e6ac:	2307      	movs	r3, #7
 801e6ae:	f887 3164 	strb.w	r3, [r7, #356]	; 0x164
};
 801e6b2:	f507 72b2 	add.w	r2, r7, #356	; 0x164
 801e6b6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801e6ba:	3338      	adds	r3, #56	; 0x38
 801e6bc:	4974      	ldr	r1, [pc, #464]	; (801e890 <_Z41__static_initialization_and_destruction_0ii+0x390>)
 801e6be:	4618      	mov	r0, r3
 801e6c0:	f7e2 fd42 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"loop", TOKEN_LOOP},
 801e6c4:	2308      	movs	r3, #8
 801e6c6:	f887 3165 	strb.w	r3, [r7, #357]	; 0x165
};
 801e6ca:	f207 1265 	addw	r2, r7, #357	; 0x165
 801e6ce:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801e6d2:	3354      	adds	r3, #84	; 0x54
 801e6d4:	496f      	ldr	r1, [pc, #444]	; (801e894 <_Z41__static_initialization_and_destruction_0ii+0x394>)
 801e6d6:	4618      	mov	r0, r3
 801e6d8:	f7e2 fd0e 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"finish", TOKEN_FINISH},
 801e6dc:	2309      	movs	r3, #9
 801e6de:	f887 3166 	strb.w	r3, [r7, #358]	; 0x166
};
 801e6e2:	f507 72b3 	add.w	r2, r7, #358	; 0x166
 801e6e6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801e6ea:	3370      	adds	r3, #112	; 0x70
 801e6ec:	496a      	ldr	r1, [pc, #424]	; (801e898 <_Z41__static_initialization_and_destruction_0ii+0x398>)
 801e6ee:	4618      	mov	r0, r3
 801e6f0:	f7e2 fd52 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"if", TOKEN_IF},
 801e6f4:	2310      	movs	r3, #16
 801e6f6:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167
};
 801e6fa:	f207 1267 	addw	r2, r7, #359	; 0x167
 801e6fe:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801e702:	338c      	adds	r3, #140	; 0x8c
 801e704:	4965      	ldr	r1, [pc, #404]	; (801e89c <_Z41__static_initialization_and_destruction_0ii+0x39c>)
 801e706:	4618      	mov	r0, r3
 801e708:	f7e2 fd6e 	bl	80011e8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>
	{"elseif", TOKEN_ELSEIF},
 801e70c:	2311      	movs	r3, #17
 801e70e:	f887 3168 	strb.w	r3, [r7, #360]	; 0x168
};
 801e712:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 801e716:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801e71a:	33a8      	adds	r3, #168	; 0xa8
 801e71c:	4960      	ldr	r1, [pc, #384]	; (801e8a0 <_Z41__static_initialization_and_destruction_0ii+0x3a0>)
 801e71e:	4618      	mov	r0, r3
 801e720:	f7e2 fd3a 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"else", TOKEN_ELSE},
 801e724:	2312      	movs	r3, #18
 801e726:	f887 3169 	strb.w	r3, [r7, #361]	; 0x169
};
 801e72a:	f207 1269 	addw	r2, r7, #361	; 0x169
 801e72e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801e732:	33c4      	adds	r3, #196	; 0xc4
 801e734:	495b      	ldr	r1, [pc, #364]	; (801e8a4 <_Z41__static_initialization_and_destruction_0ii+0x3a4>)
 801e736:	4618      	mov	r0, r3
 801e738:	f7e2 fcde 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"while", TOKEN_WHILE},
 801e73c:	2313      	movs	r3, #19
 801e73e:	f887 316a 	strb.w	r3, [r7, #362]	; 0x16a
};
 801e742:	f507 72b5 	add.w	r2, r7, #362	; 0x16a
 801e746:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801e74a:	33e0      	adds	r3, #224	; 0xe0
 801e74c:	4956      	ldr	r1, [pc, #344]	; (801e8a8 <_Z41__static_initialization_and_destruction_0ii+0x3a8>)
 801e74e:	4618      	mov	r0, r3
 801e750:	f7e2 fcfa 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"end", TOKEN_END},
 801e754:	2314      	movs	r3, #20
 801e756:	f887 316b 	strb.w	r3, [r7, #363]	; 0x16b
};
 801e75a:	f207 126b 	addw	r2, r7, #363	; 0x16b
 801e75e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801e762:	33fc      	adds	r3, #252	; 0xfc
 801e764:	4951      	ldr	r1, [pc, #324]	; (801e8ac <_Z41__static_initialization_and_destruction_0ii+0x3ac>)
 801e766:	4618      	mov	r0, r3
 801e768:	f7e2 fd66 	bl	8001238 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>
 801e76c:	f107 0340 	add.w	r3, r7, #64	; 0x40
 801e770:	f107 0248 	add.w	r2, r7, #72	; 0x48
 801e774:	601a      	str	r2, [r3, #0]
 801e776:	f107 0340 	add.w	r3, r7, #64	; 0x40
 801e77a:	220a      	movs	r2, #10
 801e77c:	605a      	str	r2, [r3, #4]
 801e77e:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 801e782:	4618      	mov	r0, r3
 801e784:	f7e3 fb53 	bl	8001e2e <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 801e788:	f507 71b6 	add.w	r1, r7, #364	; 0x16c
 801e78c:	f107 0240 	add.w	r2, r7, #64	; 0x40
 801e790:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 801e794:	9300      	str	r3, [sp, #0]
 801e796:	460b      	mov	r3, r1
 801e798:	ca06      	ldmia	r2, {r1, r2}
 801e79a:	4845      	ldr	r0, [pc, #276]	; (801e8b0 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 801e79c:	f7e3 fb5f 	bl	8001e5e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>
 801e7a0:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 801e7a4:	4618      	mov	r0, r3
 801e7a6:	f7e3 fb4e 	bl	8001e46 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 801e7aa:	f107 0448 	add.w	r4, r7, #72	; 0x48
 801e7ae:	f504 748c 	add.w	r4, r4, #280	; 0x118
 801e7b2:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801e7b6:	429c      	cmp	r4, r3
 801e7b8:	d004      	beq.n	801e7c4 <_Z41__static_initialization_and_destruction_0ii+0x2c4>
 801e7ba:	3c1c      	subs	r4, #28
 801e7bc:	4620      	mov	r0, r4
 801e7be:	f7e2 fc8e 	bl	80010de <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 801e7c2:	e7f6      	b.n	801e7b2 <_Z41__static_initialization_and_destruction_0ii+0x2b2>
};
 801e7c4:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 801e7c8:	2200      	movs	r2, #0
 801e7ca:	601a      	str	r2, [r3, #0]
 801e7cc:	605a      	str	r2, [r3, #4]
 801e7ce:	609a      	str	r2, [r3, #8]
 801e7d0:	233c      	movs	r3, #60	; 0x3c
 801e7d2:	f887 317c 	strb.w	r3, [r7, #380]	; 0x17c
 801e7d6:	231b      	movs	r3, #27
 801e7d8:	f887 317d 	strb.w	r3, [r7, #381]	; 0x17d
 801e7dc:	231c      	movs	r3, #28
 801e7de:	f887 317e 	strb.w	r3, [r7, #382]	; 0x17e
 801e7e2:	233e      	movs	r3, #62	; 0x3e
 801e7e4:	f887 317f 	strb.w	r3, [r7, #383]	; 0x17f
 801e7e8:	2319      	movs	r3, #25
 801e7ea:	f887 3180 	strb.w	r3, [r7, #384]	; 0x180
 801e7ee:	231a      	movs	r3, #26
 801e7f0:	f887 3181 	strb.w	r3, [r7, #385]	; 0x181
 801e7f4:	233d      	movs	r3, #61	; 0x3d
 801e7f6:	f887 3182 	strb.w	r3, [r7, #386]	; 0x182
 801e7fa:	2318      	movs	r3, #24
 801e7fc:	f887 3183 	strb.w	r3, [r7, #387]	; 0x183
 801e800:	231d      	movs	r3, #29
 801e802:	f887 3184 	strb.w	r3, [r7, #388]	; 0x184
 801e806:	2321      	movs	r3, #33	; 0x21
 801e808:	f887 3185 	strb.w	r3, [r7, #389]	; 0x185
 801e80c:	2317      	movs	r3, #23
 801e80e:	f887 3186 	strb.w	r3, [r7, #390]	; 0x186
 801e812:	231e      	movs	r3, #30
 801e814:	f887 3187 	strb.w	r3, [r7, #391]	; 0x187
 801e818:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 801e81c:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 801e820:	2304      	movs	r3, #4
 801e822:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 801e826:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801e82a:	4618      	mov	r0, r3
 801e82c:	f7e3 fb47 	bl	8001ebe <_ZNSaISt4pairIKc12double_tokenEEC1Ev>
 801e830:	f507 72c4 	add.w	r2, r7, #392	; 0x188
 801e834:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801e838:	9300      	str	r3, [sp, #0]
 801e83a:	4613      	mov	r3, r2
 801e83c:	f507 72ba 	add.w	r2, r7, #372	; 0x174
 801e840:	ca06      	ldmia	r2, {r1, r2}
 801e842:	481c      	ldr	r0, [pc, #112]	; (801e8b4 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 801e844:	f7e3 fb53 	bl	8001eee <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 801e848:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801e84c:	4618      	mov	r0, r3
 801e84e:	f7e3 fb42 	bl	8001ed6 <_ZNSaISt4pairIKc12double_tokenEED1Ev>
static const std::map<char, double_token> token_double_chars
 801e852:	1d3b      	adds	r3, r7, #4
 801e854:	681b      	ldr	r3, [r3, #0]
 801e856:	2b00      	cmp	r3, #0
 801e858:	d10e      	bne.n	801e878 <_Z41__static_initialization_and_destruction_0ii+0x378>
 801e85a:	463b      	mov	r3, r7
 801e85c:	681b      	ldr	r3, [r3, #0]
 801e85e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801e862:	4293      	cmp	r3, r2
 801e864:	d108      	bne.n	801e878 <_Z41__static_initialization_and_destruction_0ii+0x378>
 801e866:	4813      	ldr	r0, [pc, #76]	; (801e8b4 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 801e868:	f7eb f80c 	bl	8009884 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>
static const std::map<std::string, token_type> token_strings
 801e86c:	4810      	ldr	r0, [pc, #64]	; (801e8b0 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 801e86e:	f7eb f816 	bl	800989e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
static const std::map<char, token_type> token_chars
 801e872:	4804      	ldr	r0, [pc, #16]	; (801e884 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 801e874:	f7eb f820 	bl	80098b8 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>
 801e878:	bf00      	nop
 801e87a:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 801e87e:	46bd      	mov	sp, r7
 801e880:	bd90      	pop	{r4, r7, pc}
 801e882:	bf00      	nop
 801e884:	20000630 	.word	0x20000630
 801e888:	08029fc8 	.word	0x08029fc8
 801e88c:	08029fd0 	.word	0x08029fd0
 801e890:	08029fd8 	.word	0x08029fd8
 801e894:	08029fe0 	.word	0x08029fe0
 801e898:	08029fe8 	.word	0x08029fe8
 801e89c:	08029ff0 	.word	0x08029ff0
 801e8a0:	08029ff4 	.word	0x08029ff4
 801e8a4:	08029ffc 	.word	0x08029ffc
 801e8a8:	0802a004 	.word	0x0802a004
 801e8ac:	0802a00c 	.word	0x0802a00c
 801e8b0:	20000648 	.word	0x20000648
 801e8b4:	20000660 	.word	0x20000660

0801e8b8 <_GLOBAL__sub_I_huart1>:
 801e8b8:	b580      	push	{r7, lr}
 801e8ba:	af00      	add	r7, sp, #0
 801e8bc:	f64f 71ff 	movw	r1, #65535	; 0xffff
 801e8c0:	2001      	movs	r0, #1
 801e8c2:	f7ff fe1d 	bl	801e500 <_Z41__static_initialization_and_destruction_0ii>
 801e8c6:	bd80      	pop	{r7, pc}

0801e8c8 <_GLOBAL__sub_D_huart1>:
 801e8c8:	b580      	push	{r7, lr}
 801e8ca:	af00      	add	r7, sp, #0
 801e8cc:	f64f 71ff 	movw	r1, #65535	; 0xffff
 801e8d0:	2000      	movs	r0, #0
 801e8d2:	f7ff fe15 	bl	801e500 <_Z41__static_initialization_and_destruction_0ii>
 801e8d6:	bd80      	pop	{r7, pc}

0801e8d8 <_Z11my_main_runv>:
#include "my_main.h"

// main function called after setup from CUBEMX
void my_main_run()
{
 801e8d8:	b580      	push	{r7, lr}
 801e8da:	b082      	sub	sp, #8
 801e8dc:	af00      	add	r7, sp, #0
	Program *P = Parser::parse_program();
 801e8de:	f7f5 fd35 	bl	801434c <_ZN6Parser13parse_programEv>
 801e8e2:	6078      	str	r0, [r7, #4]
	Transmitter::start_listening();
 801e8e4:	f7fa fa62 	bl	8018dac <_ZN11Transmitter15start_listeningEv>
	Executor::get_instance().execute(P);
 801e8e8:	f7e2 fce2 	bl	80012b0 <_ZN8Executor12get_instanceEv>
 801e8ec:	4603      	mov	r3, r0
 801e8ee:	6879      	ldr	r1, [r7, #4]
 801e8f0:	4618      	mov	r0, r3
 801e8f2:	f7e2 fee7 	bl	80016c4 <_ZN8Executor7executeEP7Program>

	for (;;)
 801e8f6:	e7fe      	b.n	801e8f6 <_Z11my_main_runv+0x1e>

0801e8f8 <_Z41__static_initialization_and_destruction_0ii>:
	{

	}
}
 801e8f8:	b590      	push	{r4, r7, lr}
 801e8fa:	b0e7      	sub	sp, #412	; 0x19c
 801e8fc:	af02      	add	r7, sp, #8
 801e8fe:	1d3b      	adds	r3, r7, #4
 801e900:	6018      	str	r0, [r3, #0]
 801e902:	463b      	mov	r3, r7
 801e904:	6019      	str	r1, [r3, #0]
 801e906:	1d3b      	adds	r3, r7, #4
 801e908:	681b      	ldr	r3, [r3, #0]
 801e90a:	2b01      	cmp	r3, #1
 801e90c:	f040 819d 	bne.w	801ec4a <_Z41__static_initialization_and_destruction_0ii+0x352>
 801e910:	463b      	mov	r3, r7
 801e912:	681b      	ldr	r3, [r3, #0]
 801e914:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801e918:	4293      	cmp	r3, r2
 801e91a:	f040 8196 	bne.w	801ec4a <_Z41__static_initialization_and_destruction_0ii+0x352>
};
 801e91e:	f107 0314 	add.w	r3, r7, #20
 801e922:	4618      	mov	r0, r3
 801e924:	2322      	movs	r3, #34	; 0x22
 801e926:	461a      	mov	r2, r3
 801e928:	2100      	movs	r1, #0
 801e92a:	f006 fab9 	bl	8024ea0 <memset>
 801e92e:	f107 0314 	add.w	r3, r7, #20
 801e932:	223a      	movs	r2, #58	; 0x3a
 801e934:	701a      	strb	r2, [r3, #0]
 801e936:	f107 0314 	add.w	r3, r7, #20
 801e93a:	2201      	movs	r2, #1
 801e93c:	705a      	strb	r2, [r3, #1]
 801e93e:	f107 0314 	add.w	r3, r7, #20
 801e942:	220a      	movs	r2, #10
 801e944:	709a      	strb	r2, [r3, #2]
 801e946:	f107 0314 	add.w	r3, r7, #20
 801e94a:	220a      	movs	r2, #10
 801e94c:	70da      	strb	r2, [r3, #3]
 801e94e:	f107 0314 	add.w	r3, r7, #20
 801e952:	222c      	movs	r2, #44	; 0x2c
 801e954:	711a      	strb	r2, [r3, #4]
 801e956:	f107 0314 	add.w	r3, r7, #20
 801e95a:	220c      	movs	r2, #12
 801e95c:	715a      	strb	r2, [r3, #5]
 801e95e:	f107 0314 	add.w	r3, r7, #20
 801e962:	222e      	movs	r2, #46	; 0x2e
 801e964:	719a      	strb	r2, [r3, #6]
 801e966:	f107 0314 	add.w	r3, r7, #20
 801e96a:	220b      	movs	r2, #11
 801e96c:	71da      	strb	r2, [r3, #7]
 801e96e:	f107 0314 	add.w	r3, r7, #20
 801e972:	225b      	movs	r2, #91	; 0x5b
 801e974:	721a      	strb	r2, [r3, #8]
 801e976:	f107 0314 	add.w	r3, r7, #20
 801e97a:	220d      	movs	r2, #13
 801e97c:	725a      	strb	r2, [r3, #9]
 801e97e:	f107 0314 	add.w	r3, r7, #20
 801e982:	225d      	movs	r2, #93	; 0x5d
 801e984:	729a      	strb	r2, [r3, #10]
 801e986:	f107 0314 	add.w	r3, r7, #20
 801e98a:	220e      	movs	r2, #14
 801e98c:	72da      	strb	r2, [r3, #11]
 801e98e:	f107 0314 	add.w	r3, r7, #20
 801e992:	227c      	movs	r2, #124	; 0x7c
 801e994:	731a      	strb	r2, [r3, #12]
 801e996:	f107 0314 	add.w	r3, r7, #20
 801e99a:	2215      	movs	r2, #21
 801e99c:	735a      	strb	r2, [r3, #13]
 801e99e:	f107 0314 	add.w	r3, r7, #20
 801e9a2:	2226      	movs	r2, #38	; 0x26
 801e9a4:	739a      	strb	r2, [r3, #14]
 801e9a6:	f107 0314 	add.w	r3, r7, #20
 801e9aa:	2216      	movs	r2, #22
 801e9ac:	73da      	strb	r2, [r3, #15]
 801e9ae:	f107 0314 	add.w	r3, r7, #20
 801e9b2:	222b      	movs	r2, #43	; 0x2b
 801e9b4:	741a      	strb	r2, [r3, #16]
 801e9b6:	f107 0314 	add.w	r3, r7, #20
 801e9ba:	221f      	movs	r2, #31
 801e9bc:	745a      	strb	r2, [r3, #17]
 801e9be:	f107 0314 	add.w	r3, r7, #20
 801e9c2:	222d      	movs	r2, #45	; 0x2d
 801e9c4:	749a      	strb	r2, [r3, #18]
 801e9c6:	f107 0314 	add.w	r3, r7, #20
 801e9ca:	2220      	movs	r2, #32
 801e9cc:	74da      	strb	r2, [r3, #19]
 801e9ce:	f107 0314 	add.w	r3, r7, #20
 801e9d2:	222a      	movs	r2, #42	; 0x2a
 801e9d4:	751a      	strb	r2, [r3, #20]
 801e9d6:	f107 0314 	add.w	r3, r7, #20
 801e9da:	2221      	movs	r2, #33	; 0x21
 801e9dc:	755a      	strb	r2, [r3, #21]
 801e9de:	f107 0314 	add.w	r3, r7, #20
 801e9e2:	222f      	movs	r2, #47	; 0x2f
 801e9e4:	759a      	strb	r2, [r3, #22]
 801e9e6:	f107 0314 	add.w	r3, r7, #20
 801e9ea:	2222      	movs	r2, #34	; 0x22
 801e9ec:	75da      	strb	r2, [r3, #23]
 801e9ee:	f107 0314 	add.w	r3, r7, #20
 801e9f2:	225e      	movs	r2, #94	; 0x5e
 801e9f4:	761a      	strb	r2, [r3, #24]
 801e9f6:	f107 0314 	add.w	r3, r7, #20
 801e9fa:	2223      	movs	r2, #35	; 0x23
 801e9fc:	765a      	strb	r2, [r3, #25]
 801e9fe:	f107 0314 	add.w	r3, r7, #20
 801ea02:	2225      	movs	r2, #37	; 0x25
 801ea04:	769a      	strb	r2, [r3, #26]
 801ea06:	f107 0314 	add.w	r3, r7, #20
 801ea0a:	2224      	movs	r2, #36	; 0x24
 801ea0c:	76da      	strb	r2, [r3, #27]
 801ea0e:	f107 0314 	add.w	r3, r7, #20
 801ea12:	2228      	movs	r2, #40	; 0x28
 801ea14:	771a      	strb	r2, [r3, #28]
 801ea16:	f107 0314 	add.w	r3, r7, #20
 801ea1a:	2226      	movs	r2, #38	; 0x26
 801ea1c:	775a      	strb	r2, [r3, #29]
 801ea1e:	f107 0314 	add.w	r3, r7, #20
 801ea22:	2229      	movs	r2, #41	; 0x29
 801ea24:	779a      	strb	r2, [r3, #30]
 801ea26:	f107 0314 	add.w	r3, r7, #20
 801ea2a:	2227      	movs	r2, #39	; 0x27
 801ea2c:	77da      	strb	r2, [r3, #31]
 801ea2e:	f107 0314 	add.w	r3, r7, #20
 801ea32:	2225      	movs	r2, #37	; 0x25
 801ea34:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 801ea38:	f107 030c 	add.w	r3, r7, #12
 801ea3c:	f107 0214 	add.w	r2, r7, #20
 801ea40:	601a      	str	r2, [r3, #0]
 801ea42:	f107 030c 	add.w	r3, r7, #12
 801ea46:	2211      	movs	r2, #17
 801ea48:	605a      	str	r2, [r3, #4]
 801ea4a:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801ea4e:	4618      	mov	r0, r3
 801ea50:	f7e3 f948 	bl	8001ce4 <_ZNSaISt4pairIKc10token_typeEEC1Ev>
 801ea54:	f107 0138 	add.w	r1, r7, #56	; 0x38
 801ea58:	f107 020c 	add.w	r2, r7, #12
 801ea5c:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801ea60:	9300      	str	r3, [sp, #0]
 801ea62:	460b      	mov	r3, r1
 801ea64:	ca06      	ldmia	r2, {r1, r2}
 801ea66:	4885      	ldr	r0, [pc, #532]	; (801ec7c <_Z41__static_initialization_and_destruction_0ii+0x384>)
 801ea68:	f7e3 f954 	bl	8001d14 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 801ea6c:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801ea70:	4618      	mov	r0, r3
 801ea72:	f7e3 f943 	bl	8001cfc <_ZNSaISt4pairIKc10token_typeEED1Ev>
	{"true", TOKEN_TRUE},
 801ea76:	2305      	movs	r3, #5
 801ea78:	f887 3162 	strb.w	r3, [r7, #354]	; 0x162
};
 801ea7c:	f507 72b1 	add.w	r2, r7, #354	; 0x162
 801ea80:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801ea84:	497e      	ldr	r1, [pc, #504]	; (801ec80 <_Z41__static_initialization_and_destruction_0ii+0x388>)
 801ea86:	4618      	mov	r0, r3
 801ea88:	f7e2 fb36 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"false", TOKEN_FALSE},
 801ea8c:	2306      	movs	r3, #6
 801ea8e:	f887 3163 	strb.w	r3, [r7, #355]	; 0x163
};
 801ea92:	f207 1263 	addw	r2, r7, #355	; 0x163
 801ea96:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801ea9a:	331c      	adds	r3, #28
 801ea9c:	4979      	ldr	r1, [pc, #484]	; (801ec84 <_Z41__static_initialization_and_destruction_0ii+0x38c>)
 801ea9e:	4618      	mov	r0, r3
 801eaa0:	f7e2 fb52 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"setup", TOKEN_SETUP},
 801eaa4:	2307      	movs	r3, #7
 801eaa6:	f887 3164 	strb.w	r3, [r7, #356]	; 0x164
};
 801eaaa:	f507 72b2 	add.w	r2, r7, #356	; 0x164
 801eaae:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801eab2:	3338      	adds	r3, #56	; 0x38
 801eab4:	4974      	ldr	r1, [pc, #464]	; (801ec88 <_Z41__static_initialization_and_destruction_0ii+0x390>)
 801eab6:	4618      	mov	r0, r3
 801eab8:	f7e2 fb46 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"loop", TOKEN_LOOP},
 801eabc:	2308      	movs	r3, #8
 801eabe:	f887 3165 	strb.w	r3, [r7, #357]	; 0x165
};
 801eac2:	f207 1265 	addw	r2, r7, #357	; 0x165
 801eac6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801eaca:	3354      	adds	r3, #84	; 0x54
 801eacc:	496f      	ldr	r1, [pc, #444]	; (801ec8c <_Z41__static_initialization_and_destruction_0ii+0x394>)
 801eace:	4618      	mov	r0, r3
 801ead0:	f7e2 fb12 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"finish", TOKEN_FINISH},
 801ead4:	2309      	movs	r3, #9
 801ead6:	f887 3166 	strb.w	r3, [r7, #358]	; 0x166
};
 801eada:	f507 72b3 	add.w	r2, r7, #358	; 0x166
 801eade:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801eae2:	3370      	adds	r3, #112	; 0x70
 801eae4:	496a      	ldr	r1, [pc, #424]	; (801ec90 <_Z41__static_initialization_and_destruction_0ii+0x398>)
 801eae6:	4618      	mov	r0, r3
 801eae8:	f7e2 fb56 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"if", TOKEN_IF},
 801eaec:	2310      	movs	r3, #16
 801eaee:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167
};
 801eaf2:	f207 1267 	addw	r2, r7, #359	; 0x167
 801eaf6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801eafa:	338c      	adds	r3, #140	; 0x8c
 801eafc:	4965      	ldr	r1, [pc, #404]	; (801ec94 <_Z41__static_initialization_and_destruction_0ii+0x39c>)
 801eafe:	4618      	mov	r0, r3
 801eb00:	f7e2 fb72 	bl	80011e8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>
	{"elseif", TOKEN_ELSEIF},
 801eb04:	2311      	movs	r3, #17
 801eb06:	f887 3168 	strb.w	r3, [r7, #360]	; 0x168
};
 801eb0a:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 801eb0e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801eb12:	33a8      	adds	r3, #168	; 0xa8
 801eb14:	4960      	ldr	r1, [pc, #384]	; (801ec98 <_Z41__static_initialization_and_destruction_0ii+0x3a0>)
 801eb16:	4618      	mov	r0, r3
 801eb18:	f7e2 fb3e 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"else", TOKEN_ELSE},
 801eb1c:	2312      	movs	r3, #18
 801eb1e:	f887 3169 	strb.w	r3, [r7, #361]	; 0x169
};
 801eb22:	f207 1269 	addw	r2, r7, #361	; 0x169
 801eb26:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801eb2a:	33c4      	adds	r3, #196	; 0xc4
 801eb2c:	495b      	ldr	r1, [pc, #364]	; (801ec9c <_Z41__static_initialization_and_destruction_0ii+0x3a4>)
 801eb2e:	4618      	mov	r0, r3
 801eb30:	f7e2 fae2 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"while", TOKEN_WHILE},
 801eb34:	2313      	movs	r3, #19
 801eb36:	f887 316a 	strb.w	r3, [r7, #362]	; 0x16a
};
 801eb3a:	f507 72b5 	add.w	r2, r7, #362	; 0x16a
 801eb3e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801eb42:	33e0      	adds	r3, #224	; 0xe0
 801eb44:	4956      	ldr	r1, [pc, #344]	; (801eca0 <_Z41__static_initialization_and_destruction_0ii+0x3a8>)
 801eb46:	4618      	mov	r0, r3
 801eb48:	f7e2 fafe 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"end", TOKEN_END},
 801eb4c:	2314      	movs	r3, #20
 801eb4e:	f887 316b 	strb.w	r3, [r7, #363]	; 0x16b
};
 801eb52:	f207 126b 	addw	r2, r7, #363	; 0x16b
 801eb56:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801eb5a:	33fc      	adds	r3, #252	; 0xfc
 801eb5c:	4951      	ldr	r1, [pc, #324]	; (801eca4 <_Z41__static_initialization_and_destruction_0ii+0x3ac>)
 801eb5e:	4618      	mov	r0, r3
 801eb60:	f7e2 fb6a 	bl	8001238 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>
 801eb64:	f107 0340 	add.w	r3, r7, #64	; 0x40
 801eb68:	f107 0248 	add.w	r2, r7, #72	; 0x48
 801eb6c:	601a      	str	r2, [r3, #0]
 801eb6e:	f107 0340 	add.w	r3, r7, #64	; 0x40
 801eb72:	220a      	movs	r2, #10
 801eb74:	605a      	str	r2, [r3, #4]
 801eb76:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 801eb7a:	4618      	mov	r0, r3
 801eb7c:	f7e3 f957 	bl	8001e2e <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 801eb80:	f507 71b6 	add.w	r1, r7, #364	; 0x16c
 801eb84:	f107 0240 	add.w	r2, r7, #64	; 0x40
 801eb88:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 801eb8c:	9300      	str	r3, [sp, #0]
 801eb8e:	460b      	mov	r3, r1
 801eb90:	ca06      	ldmia	r2, {r1, r2}
 801eb92:	4845      	ldr	r0, [pc, #276]	; (801eca8 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 801eb94:	f7e3 f963 	bl	8001e5e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>
 801eb98:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 801eb9c:	4618      	mov	r0, r3
 801eb9e:	f7e3 f952 	bl	8001e46 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 801eba2:	f107 0448 	add.w	r4, r7, #72	; 0x48
 801eba6:	f504 748c 	add.w	r4, r4, #280	; 0x118
 801ebaa:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801ebae:	429c      	cmp	r4, r3
 801ebb0:	d004      	beq.n	801ebbc <_Z41__static_initialization_and_destruction_0ii+0x2c4>
 801ebb2:	3c1c      	subs	r4, #28
 801ebb4:	4620      	mov	r0, r4
 801ebb6:	f7e2 fa92 	bl	80010de <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 801ebba:	e7f6      	b.n	801ebaa <_Z41__static_initialization_and_destruction_0ii+0x2b2>
};
 801ebbc:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 801ebc0:	2200      	movs	r2, #0
 801ebc2:	601a      	str	r2, [r3, #0]
 801ebc4:	605a      	str	r2, [r3, #4]
 801ebc6:	609a      	str	r2, [r3, #8]
 801ebc8:	233c      	movs	r3, #60	; 0x3c
 801ebca:	f887 317c 	strb.w	r3, [r7, #380]	; 0x17c
 801ebce:	231b      	movs	r3, #27
 801ebd0:	f887 317d 	strb.w	r3, [r7, #381]	; 0x17d
 801ebd4:	231c      	movs	r3, #28
 801ebd6:	f887 317e 	strb.w	r3, [r7, #382]	; 0x17e
 801ebda:	233e      	movs	r3, #62	; 0x3e
 801ebdc:	f887 317f 	strb.w	r3, [r7, #383]	; 0x17f
 801ebe0:	2319      	movs	r3, #25
 801ebe2:	f887 3180 	strb.w	r3, [r7, #384]	; 0x180
 801ebe6:	231a      	movs	r3, #26
 801ebe8:	f887 3181 	strb.w	r3, [r7, #385]	; 0x181
 801ebec:	233d      	movs	r3, #61	; 0x3d
 801ebee:	f887 3182 	strb.w	r3, [r7, #386]	; 0x182
 801ebf2:	2318      	movs	r3, #24
 801ebf4:	f887 3183 	strb.w	r3, [r7, #387]	; 0x183
 801ebf8:	231d      	movs	r3, #29
 801ebfa:	f887 3184 	strb.w	r3, [r7, #388]	; 0x184
 801ebfe:	2321      	movs	r3, #33	; 0x21
 801ec00:	f887 3185 	strb.w	r3, [r7, #389]	; 0x185
 801ec04:	2317      	movs	r3, #23
 801ec06:	f887 3186 	strb.w	r3, [r7, #390]	; 0x186
 801ec0a:	231e      	movs	r3, #30
 801ec0c:	f887 3187 	strb.w	r3, [r7, #391]	; 0x187
 801ec10:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 801ec14:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 801ec18:	2304      	movs	r3, #4
 801ec1a:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 801ec1e:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801ec22:	4618      	mov	r0, r3
 801ec24:	f7e3 f94b 	bl	8001ebe <_ZNSaISt4pairIKc12double_tokenEEC1Ev>
 801ec28:	f507 72c4 	add.w	r2, r7, #392	; 0x188
 801ec2c:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801ec30:	9300      	str	r3, [sp, #0]
 801ec32:	4613      	mov	r3, r2
 801ec34:	f507 72ba 	add.w	r2, r7, #372	; 0x174
 801ec38:	ca06      	ldmia	r2, {r1, r2}
 801ec3a:	481c      	ldr	r0, [pc, #112]	; (801ecac <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 801ec3c:	f7e3 f957 	bl	8001eee <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 801ec40:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801ec44:	4618      	mov	r0, r3
 801ec46:	f7e3 f946 	bl	8001ed6 <_ZNSaISt4pairIKc12double_tokenEED1Ev>
static const std::map<char, double_token> token_double_chars
 801ec4a:	1d3b      	adds	r3, r7, #4
 801ec4c:	681b      	ldr	r3, [r3, #0]
 801ec4e:	2b00      	cmp	r3, #0
 801ec50:	d10e      	bne.n	801ec70 <_Z41__static_initialization_and_destruction_0ii+0x378>
 801ec52:	463b      	mov	r3, r7
 801ec54:	681b      	ldr	r3, [r3, #0]
 801ec56:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801ec5a:	4293      	cmp	r3, r2
 801ec5c:	d108      	bne.n	801ec70 <_Z41__static_initialization_and_destruction_0ii+0x378>
 801ec5e:	4813      	ldr	r0, [pc, #76]	; (801ecac <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 801ec60:	f7ea fe10 	bl	8009884 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>
static const std::map<std::string, token_type> token_strings
 801ec64:	4810      	ldr	r0, [pc, #64]	; (801eca8 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 801ec66:	f7ea fe1a 	bl	800989e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
static const std::map<char, token_type> token_chars
 801ec6a:	4804      	ldr	r0, [pc, #16]	; (801ec7c <_Z41__static_initialization_and_destruction_0ii+0x384>)
 801ec6c:	f7ea fe24 	bl	80098b8 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>
 801ec70:	bf00      	nop
 801ec72:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 801ec76:	46bd      	mov	sp, r7
 801ec78:	bd90      	pop	{r4, r7, pc}
 801ec7a:	bf00      	nop
 801ec7c:	200006fc 	.word	0x200006fc
 801ec80:	0802a03c 	.word	0x0802a03c
 801ec84:	0802a044 	.word	0x0802a044
 801ec88:	0802a04c 	.word	0x0802a04c
 801ec8c:	0802a054 	.word	0x0802a054
 801ec90:	0802a05c 	.word	0x0802a05c
 801ec94:	0802a064 	.word	0x0802a064
 801ec98:	0802a068 	.word	0x0802a068
 801ec9c:	0802a070 	.word	0x0802a070
 801eca0:	0802a078 	.word	0x0802a078
 801eca4:	0802a080 	.word	0x0802a080
 801eca8:	20000714 	.word	0x20000714
 801ecac:	2000072c 	.word	0x2000072c

0801ecb0 <_GLOBAL__sub_I__Z11my_main_runv>:
 801ecb0:	b580      	push	{r7, lr}
 801ecb2:	af00      	add	r7, sp, #0
 801ecb4:	f64f 71ff 	movw	r1, #65535	; 0xffff
 801ecb8:	2001      	movs	r0, #1
 801ecba:	f7ff fe1d 	bl	801e8f8 <_Z41__static_initialization_and_destruction_0ii>
 801ecbe:	bd80      	pop	{r7, pc}

0801ecc0 <_GLOBAL__sub_D__Z11my_main_runv>:
 801ecc0:	b580      	push	{r7, lr}
 801ecc2:	af00      	add	r7, sp, #0
 801ecc4:	f64f 71ff 	movw	r1, #65535	; 0xffff
 801ecc8:	2000      	movs	r0, #0
 801ecca:	f7ff fe15 	bl	801e8f8 <_Z41__static_initialization_and_destruction_0ii>
 801ecce:	bd80      	pop	{r7, pc}

0801ecd0 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 801ecd0:	b480      	push	{r7}
 801ecd2:	b083      	sub	sp, #12
 801ecd4:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_PWR_CLK_ENABLE();
 801ecd6:	4b0f      	ldr	r3, [pc, #60]	; (801ed14 <HAL_MspInit+0x44>)
 801ecd8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801ecda:	4a0e      	ldr	r2, [pc, #56]	; (801ed14 <HAL_MspInit+0x44>)
 801ecdc:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 801ece0:	6413      	str	r3, [r2, #64]	; 0x40
 801ece2:	4b0c      	ldr	r3, [pc, #48]	; (801ed14 <HAL_MspInit+0x44>)
 801ece4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801ece6:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 801ecea:	607b      	str	r3, [r7, #4]
 801ecec:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 801ecee:	4b09      	ldr	r3, [pc, #36]	; (801ed14 <HAL_MspInit+0x44>)
 801ecf0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801ecf2:	4a08      	ldr	r2, [pc, #32]	; (801ed14 <HAL_MspInit+0x44>)
 801ecf4:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 801ecf8:	6453      	str	r3, [r2, #68]	; 0x44
 801ecfa:	4b06      	ldr	r3, [pc, #24]	; (801ed14 <HAL_MspInit+0x44>)
 801ecfc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801ecfe:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 801ed02:	603b      	str	r3, [r7, #0]
 801ed04:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 801ed06:	bf00      	nop
 801ed08:	370c      	adds	r7, #12
 801ed0a:	46bd      	mov	sp, r7
 801ed0c:	f85d 7b04 	ldr.w	r7, [sp], #4
 801ed10:	4770      	bx	lr
 801ed12:	bf00      	nop
 801ed14:	40023800 	.word	0x40023800

0801ed18 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 801ed18:	b580      	push	{r7, lr}
 801ed1a:	b08a      	sub	sp, #40	; 0x28
 801ed1c:	af00      	add	r7, sp, #0
 801ed1e:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 801ed20:	f107 0314 	add.w	r3, r7, #20
 801ed24:	2200      	movs	r2, #0
 801ed26:	601a      	str	r2, [r3, #0]
 801ed28:	605a      	str	r2, [r3, #4]
 801ed2a:	609a      	str	r2, [r3, #8]
 801ed2c:	60da      	str	r2, [r3, #12]
 801ed2e:	611a      	str	r2, [r3, #16]
  if(huart->Instance==USART1)
 801ed30:	687b      	ldr	r3, [r7, #4]
 801ed32:	681b      	ldr	r3, [r3, #0]
 801ed34:	4a1b      	ldr	r2, [pc, #108]	; (801eda4 <HAL_UART_MspInit+0x8c>)
 801ed36:	4293      	cmp	r3, r2
 801ed38:	d130      	bne.n	801ed9c <HAL_UART_MspInit+0x84>
  {
  /* USER CODE BEGIN USART1_MspInit 0 */

  /* USER CODE END USART1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 801ed3a:	4b1b      	ldr	r3, [pc, #108]	; (801eda8 <HAL_UART_MspInit+0x90>)
 801ed3c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801ed3e:	4a1a      	ldr	r2, [pc, #104]	; (801eda8 <HAL_UART_MspInit+0x90>)
 801ed40:	f043 0310 	orr.w	r3, r3, #16
 801ed44:	6453      	str	r3, [r2, #68]	; 0x44
 801ed46:	4b18      	ldr	r3, [pc, #96]	; (801eda8 <HAL_UART_MspInit+0x90>)
 801ed48:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801ed4a:	f003 0310 	and.w	r3, r3, #16
 801ed4e:	613b      	str	r3, [r7, #16]
 801ed50:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 801ed52:	4b15      	ldr	r3, [pc, #84]	; (801eda8 <HAL_UART_MspInit+0x90>)
 801ed54:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801ed56:	4a14      	ldr	r2, [pc, #80]	; (801eda8 <HAL_UART_MspInit+0x90>)
 801ed58:	f043 0301 	orr.w	r3, r3, #1
 801ed5c:	6313      	str	r3, [r2, #48]	; 0x30
 801ed5e:	4b12      	ldr	r3, [pc, #72]	; (801eda8 <HAL_UART_MspInit+0x90>)
 801ed60:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801ed62:	f003 0301 	and.w	r3, r3, #1
 801ed66:	60fb      	str	r3, [r7, #12]
 801ed68:	68fb      	ldr	r3, [r7, #12]
    /**USART1 GPIO Configuration
    PA9     ------> USART1_TX
    PA10     ------> USART1_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
 801ed6a:	f44f 63c0 	mov.w	r3, #1536	; 0x600
 801ed6e:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 801ed70:	2302      	movs	r3, #2
 801ed72:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 801ed74:	2300      	movs	r3, #0
 801ed76:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 801ed78:	2303      	movs	r3, #3
 801ed7a:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 801ed7c:	2307      	movs	r3, #7
 801ed7e:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 801ed80:	f107 0314 	add.w	r3, r7, #20
 801ed84:	4619      	mov	r1, r3
 801ed86:	4809      	ldr	r0, [pc, #36]	; (801edac <HAL_UART_MspInit+0x94>)
 801ed88:	f001 ffd4 	bl	8020d34 <HAL_GPIO_Init>

    /* USART1 interrupt Init */
    HAL_NVIC_SetPriority(USART1_IRQn, 0, 0);
 801ed8c:	2200      	movs	r2, #0
 801ed8e:	2100      	movs	r1, #0
 801ed90:	2025      	movs	r0, #37	; 0x25
 801ed92:	f001 ff06 	bl	8020ba2 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART1_IRQn);
 801ed96:	2025      	movs	r0, #37	; 0x25
 801ed98:	f001 ff1f 	bl	8020bda <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USART1_MspInit 1 */

  /* USER CODE END USART1_MspInit 1 */
  }

}
 801ed9c:	bf00      	nop
 801ed9e:	3728      	adds	r7, #40	; 0x28
 801eda0:	46bd      	mov	sp, r7
 801eda2:	bd80      	pop	{r7, pc}
 801eda4:	40011000 	.word	0x40011000
 801eda8:	40023800 	.word	0x40023800
 801edac:	40020000 	.word	0x40020000

0801edb0 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 801edb0:	b480      	push	{r7}
 801edb2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 801edb4:	e7fe      	b.n	801edb4 <NMI_Handler+0x4>

0801edb6 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 801edb6:	b480      	push	{r7}
 801edb8:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 801edba:	e7fe      	b.n	801edba <HardFault_Handler+0x4>

0801edbc <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 801edbc:	b480      	push	{r7}
 801edbe:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 801edc0:	e7fe      	b.n	801edc0 <MemManage_Handler+0x4>

0801edc2 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 801edc2:	b480      	push	{r7}
 801edc4:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 801edc6:	e7fe      	b.n	801edc6 <BusFault_Handler+0x4>

0801edc8 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 801edc8:	b480      	push	{r7}
 801edca:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 801edcc:	e7fe      	b.n	801edcc <UsageFault_Handler+0x4>

0801edce <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 801edce:	b480      	push	{r7}
 801edd0:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 801edd2:	bf00      	nop
 801edd4:	46bd      	mov	sp, r7
 801edd6:	f85d 7b04 	ldr.w	r7, [sp], #4
 801edda:	4770      	bx	lr

0801eddc <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 801eddc:	b480      	push	{r7}
 801edde:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 801ede0:	bf00      	nop
 801ede2:	46bd      	mov	sp, r7
 801ede4:	f85d 7b04 	ldr.w	r7, [sp], #4
 801ede8:	4770      	bx	lr

0801edea <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 801edea:	b480      	push	{r7}
 801edec:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 801edee:	bf00      	nop
 801edf0:	46bd      	mov	sp, r7
 801edf2:	f85d 7b04 	ldr.w	r7, [sp], #4
 801edf6:	4770      	bx	lr

0801edf8 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 801edf8:	b580      	push	{r7, lr}
 801edfa:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 801edfc:	f001 fdb2 	bl	8020964 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 801ee00:	bf00      	nop
 801ee02:	bd80      	pop	{r7, pc}

0801ee04 <USART1_IRQHandler>:

/**
  * @brief This function handles USART1 global interrupt.
  */
void USART1_IRQHandler(void)
{
 801ee04:	b580      	push	{r7, lr}
 801ee06:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART1_IRQn 0 */

  /* USER CODE END USART1_IRQn 0 */
  HAL_UART_IRQHandler(&huart1);
 801ee08:	4802      	ldr	r0, [pc, #8]	; (801ee14 <USART1_IRQHandler+0x10>)
 801ee0a:	f003 fbe7 	bl	80225dc <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART1_IRQn 1 */

  /* USER CODE END USART1_IRQn 1 */
}
 801ee0e:	bf00      	nop
 801ee10:	bd80      	pop	{r7, pc}
 801ee12:	bf00      	nop
 801ee14:	20000678 	.word	0x20000678

0801ee18 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 801ee18:	b480      	push	{r7}
 801ee1a:	af00      	add	r7, sp, #0
	return 1;
 801ee1c:	2301      	movs	r3, #1
}
 801ee1e:	4618      	mov	r0, r3
 801ee20:	46bd      	mov	sp, r7
 801ee22:	f85d 7b04 	ldr.w	r7, [sp], #4
 801ee26:	4770      	bx	lr

0801ee28 <_kill>:

int _kill(int pid, int sig)
{
 801ee28:	b580      	push	{r7, lr}
 801ee2a:	b082      	sub	sp, #8
 801ee2c:	af00      	add	r7, sp, #0
 801ee2e:	6078      	str	r0, [r7, #4]
 801ee30:	6039      	str	r1, [r7, #0]
	errno = EINVAL;
 801ee32:	f005 ffad 	bl	8024d90 <__errno>
 801ee36:	4603      	mov	r3, r0
 801ee38:	2216      	movs	r2, #22
 801ee3a:	601a      	str	r2, [r3, #0]
	return -1;
 801ee3c:	f04f 33ff 	mov.w	r3, #4294967295
}
 801ee40:	4618      	mov	r0, r3
 801ee42:	3708      	adds	r7, #8
 801ee44:	46bd      	mov	sp, r7
 801ee46:	bd80      	pop	{r7, pc}

0801ee48 <_exit>:

void _exit (int status)
{
 801ee48:	b580      	push	{r7, lr}
 801ee4a:	b082      	sub	sp, #8
 801ee4c:	af00      	add	r7, sp, #0
 801ee4e:	6078      	str	r0, [r7, #4]
	_kill(status, -1);
 801ee50:	f04f 31ff 	mov.w	r1, #4294967295
 801ee54:	6878      	ldr	r0, [r7, #4]
 801ee56:	f7ff ffe7 	bl	801ee28 <_kill>
	while (1) {}		/* Make sure we hang here */
 801ee5a:	e7fe      	b.n	801ee5a <_exit+0x12>

0801ee5c <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 801ee5c:	b580      	push	{r7, lr}
 801ee5e:	b086      	sub	sp, #24
 801ee60:	af00      	add	r7, sp, #0
 801ee62:	60f8      	str	r0, [r7, #12]
 801ee64:	60b9      	str	r1, [r7, #8]
 801ee66:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 801ee68:	2300      	movs	r3, #0
 801ee6a:	617b      	str	r3, [r7, #20]
 801ee6c:	e00a      	b.n	801ee84 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 801ee6e:	f3af 8000 	nop.w
 801ee72:	4601      	mov	r1, r0
 801ee74:	68bb      	ldr	r3, [r7, #8]
 801ee76:	1c5a      	adds	r2, r3, #1
 801ee78:	60ba      	str	r2, [r7, #8]
 801ee7a:	b2ca      	uxtb	r2, r1
 801ee7c:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 801ee7e:	697b      	ldr	r3, [r7, #20]
 801ee80:	3301      	adds	r3, #1
 801ee82:	617b      	str	r3, [r7, #20]
 801ee84:	697a      	ldr	r2, [r7, #20]
 801ee86:	687b      	ldr	r3, [r7, #4]
 801ee88:	429a      	cmp	r2, r3
 801ee8a:	dbf0      	blt.n	801ee6e <_read+0x12>
	}

return len;
 801ee8c:	687b      	ldr	r3, [r7, #4]
}
 801ee8e:	4618      	mov	r0, r3
 801ee90:	3718      	adds	r7, #24
 801ee92:	46bd      	mov	sp, r7
 801ee94:	bd80      	pop	{r7, pc}

0801ee96 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 801ee96:	b580      	push	{r7, lr}
 801ee98:	b086      	sub	sp, #24
 801ee9a:	af00      	add	r7, sp, #0
 801ee9c:	60f8      	str	r0, [r7, #12]
 801ee9e:	60b9      	str	r1, [r7, #8]
 801eea0:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 801eea2:	2300      	movs	r3, #0
 801eea4:	617b      	str	r3, [r7, #20]
 801eea6:	e009      	b.n	801eebc <_write+0x26>
	{
		__io_putchar(*ptr++);
 801eea8:	68bb      	ldr	r3, [r7, #8]
 801eeaa:	1c5a      	adds	r2, r3, #1
 801eeac:	60ba      	str	r2, [r7, #8]
 801eeae:	781b      	ldrb	r3, [r3, #0]
 801eeb0:	4618      	mov	r0, r3
 801eeb2:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 801eeb6:	697b      	ldr	r3, [r7, #20]
 801eeb8:	3301      	adds	r3, #1
 801eeba:	617b      	str	r3, [r7, #20]
 801eebc:	697a      	ldr	r2, [r7, #20]
 801eebe:	687b      	ldr	r3, [r7, #4]
 801eec0:	429a      	cmp	r2, r3
 801eec2:	dbf1      	blt.n	801eea8 <_write+0x12>
	}
	return len;
 801eec4:	687b      	ldr	r3, [r7, #4]
}
 801eec6:	4618      	mov	r0, r3
 801eec8:	3718      	adds	r7, #24
 801eeca:	46bd      	mov	sp, r7
 801eecc:	bd80      	pop	{r7, pc}

0801eece <_close>:

int _close(int file)
{
 801eece:	b480      	push	{r7}
 801eed0:	b083      	sub	sp, #12
 801eed2:	af00      	add	r7, sp, #0
 801eed4:	6078      	str	r0, [r7, #4]
	return -1;
 801eed6:	f04f 33ff 	mov.w	r3, #4294967295
}
 801eeda:	4618      	mov	r0, r3
 801eedc:	370c      	adds	r7, #12
 801eede:	46bd      	mov	sp, r7
 801eee0:	f85d 7b04 	ldr.w	r7, [sp], #4
 801eee4:	4770      	bx	lr

0801eee6 <_fstat>:


int _fstat(int file, struct stat *st)
{
 801eee6:	b480      	push	{r7}
 801eee8:	b083      	sub	sp, #12
 801eeea:	af00      	add	r7, sp, #0
 801eeec:	6078      	str	r0, [r7, #4]
 801eeee:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 801eef0:	683b      	ldr	r3, [r7, #0]
 801eef2:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 801eef6:	605a      	str	r2, [r3, #4]
	return 0;
 801eef8:	2300      	movs	r3, #0
}
 801eefa:	4618      	mov	r0, r3
 801eefc:	370c      	adds	r7, #12
 801eefe:	46bd      	mov	sp, r7
 801ef00:	f85d 7b04 	ldr.w	r7, [sp], #4
 801ef04:	4770      	bx	lr

0801ef06 <_isatty>:

int _isatty(int file)
{
 801ef06:	b480      	push	{r7}
 801ef08:	b083      	sub	sp, #12
 801ef0a:	af00      	add	r7, sp, #0
 801ef0c:	6078      	str	r0, [r7, #4]
	return 1;
 801ef0e:	2301      	movs	r3, #1
}
 801ef10:	4618      	mov	r0, r3
 801ef12:	370c      	adds	r7, #12
 801ef14:	46bd      	mov	sp, r7
 801ef16:	f85d 7b04 	ldr.w	r7, [sp], #4
 801ef1a:	4770      	bx	lr

0801ef1c <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 801ef1c:	b480      	push	{r7}
 801ef1e:	b085      	sub	sp, #20
 801ef20:	af00      	add	r7, sp, #0
 801ef22:	60f8      	str	r0, [r7, #12]
 801ef24:	60b9      	str	r1, [r7, #8]
 801ef26:	607a      	str	r2, [r7, #4]
	return 0;
 801ef28:	2300      	movs	r3, #0
}
 801ef2a:	4618      	mov	r0, r3
 801ef2c:	3714      	adds	r7, #20
 801ef2e:	46bd      	mov	sp, r7
 801ef30:	f85d 7b04 	ldr.w	r7, [sp], #4
 801ef34:	4770      	bx	lr
	...

0801ef38 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 801ef38:	b580      	push	{r7, lr}
 801ef3a:	b086      	sub	sp, #24
 801ef3c:	af00      	add	r7, sp, #0
 801ef3e:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 801ef40:	4a14      	ldr	r2, [pc, #80]	; (801ef94 <_sbrk+0x5c>)
 801ef42:	4b15      	ldr	r3, [pc, #84]	; (801ef98 <_sbrk+0x60>)
 801ef44:	1ad3      	subs	r3, r2, r3
 801ef46:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 801ef48:	697b      	ldr	r3, [r7, #20]
 801ef4a:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 801ef4c:	4b13      	ldr	r3, [pc, #76]	; (801ef9c <_sbrk+0x64>)
 801ef4e:	681b      	ldr	r3, [r3, #0]
 801ef50:	2b00      	cmp	r3, #0
 801ef52:	d102      	bne.n	801ef5a <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 801ef54:	4b11      	ldr	r3, [pc, #68]	; (801ef9c <_sbrk+0x64>)
 801ef56:	4a12      	ldr	r2, [pc, #72]	; (801efa0 <_sbrk+0x68>)
 801ef58:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 801ef5a:	4b10      	ldr	r3, [pc, #64]	; (801ef9c <_sbrk+0x64>)
 801ef5c:	681a      	ldr	r2, [r3, #0]
 801ef5e:	687b      	ldr	r3, [r7, #4]
 801ef60:	4413      	add	r3, r2
 801ef62:	693a      	ldr	r2, [r7, #16]
 801ef64:	429a      	cmp	r2, r3
 801ef66:	d207      	bcs.n	801ef78 <_sbrk+0x40>
  {
    errno = ENOMEM;
 801ef68:	f005 ff12 	bl	8024d90 <__errno>
 801ef6c:	4603      	mov	r3, r0
 801ef6e:	220c      	movs	r2, #12
 801ef70:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 801ef72:	f04f 33ff 	mov.w	r3, #4294967295
 801ef76:	e009      	b.n	801ef8c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 801ef78:	4b08      	ldr	r3, [pc, #32]	; (801ef9c <_sbrk+0x64>)
 801ef7a:	681b      	ldr	r3, [r3, #0]
 801ef7c:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 801ef7e:	4b07      	ldr	r3, [pc, #28]	; (801ef9c <_sbrk+0x64>)
 801ef80:	681a      	ldr	r2, [r3, #0]
 801ef82:	687b      	ldr	r3, [r7, #4]
 801ef84:	4413      	add	r3, r2
 801ef86:	4a05      	ldr	r2, [pc, #20]	; (801ef9c <_sbrk+0x64>)
 801ef88:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 801ef8a:	68fb      	ldr	r3, [r7, #12]
}
 801ef8c:	4618      	mov	r0, r3
 801ef8e:	3718      	adds	r7, #24
 801ef90:	46bd      	mov	sp, r7
 801ef92:	bd80      	pop	{r7, pc}
 801ef94:	20050000 	.word	0x20050000
 801ef98:	00000400 	.word	0x00000400
 801ef9c:	20000744 	.word	0x20000744
 801efa0:	200008f8 	.word	0x200008f8

0801efa4 <SystemInit>:
  *         SystemFrequency variable.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 801efa4:	b480      	push	{r7}
 801efa6:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
#if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
  SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 801efa8:	4b06      	ldr	r3, [pc, #24]	; (801efc4 <SystemInit+0x20>)
 801efaa:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 801efae:	4a05      	ldr	r2, [pc, #20]	; (801efc4 <SystemInit+0x20>)
 801efb0:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 801efb4:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 801efb8:	bf00      	nop
 801efba:	46bd      	mov	sp, r7
 801efbc:	f85d 7b04 	ldr.w	r7, [sp], #4
 801efc0:	4770      	bx	lr
 801efc2:	bf00      	nop
 801efc4:	e000ed00 	.word	0xe000ed00

0801efc8 <__tcf_0>:
namespace
{

Symbol run_single_experiment_iteration(arglist arguments = { })
{
	static Symbol past_y = 0;
 801efc8:	b580      	push	{r7, lr}
 801efca:	af00      	add	r7, sp, #0
 801efcc:	4801      	ldr	r0, [pc, #4]	; (801efd4 <__tcf_0+0xc>)
 801efce:	f7e2 f9e5 	bl	800139c <_ZN6SymbolD1Ev>
 801efd2:	bd80      	pop	{r7, pc}
 801efd4:	20000790 	.word	0x20000790

0801efd8 <__tcf_1>:
	static Symbol past_u = 0;
 801efd8:	b580      	push	{r7, lr}
 801efda:	af00      	add	r7, sp, #0
 801efdc:	4801      	ldr	r0, [pc, #4]	; (801efe4 <__tcf_1+0xc>)
 801efde:	f7e2 f9dd 	bl	800139c <_ZN6SymbolD1Ev>
 801efe2:	bd80      	pop	{r7, pc}
 801efe4:	200007b4 	.word	0x200007b4

0801efe8 <__tcf_2>:

	static Symbol past_e = 0;
 801efe8:	b580      	push	{r7, lr}
 801efea:	af00      	add	r7, sp, #0
 801efec:	4801      	ldr	r0, [pc, #4]	; (801eff4 <__tcf_2+0xc>)
 801efee:	f7e2 f9d5 	bl	800139c <_ZN6SymbolD1Ev>
 801eff2:	bd80      	pop	{r7, pc}
 801eff4:	200007d8 	.word	0x200007d8

0801eff8 <__tcf_3>:
	static Symbol sum_e = 0;
 801eff8:	b580      	push	{r7, lr}
 801effa:	af00      	add	r7, sp, #0
 801effc:	4801      	ldr	r0, [pc, #4]	; (801f004 <__tcf_3+0xc>)
 801effe:	f7e2 f9cd 	bl	800139c <_ZN6SymbolD1Ev>
 801f002:	bd80      	pop	{r7, pc}
 801f004:	200007fc 	.word	0x200007fc

0801f008 <__tcf_4>:
	static Symbol e = 0;
 801f008:	b580      	push	{r7, lr}
 801f00a:	af00      	add	r7, sp, #0
 801f00c:	4801      	ldr	r0, [pc, #4]	; (801f014 <__tcf_4+0xc>)
 801f00e:	f7e2 f9c5 	bl	800139c <_ZN6SymbolD1Ev>
 801f012:	bd80      	pop	{r7, pc}
 801f014:	20000820 	.word	0x20000820

0801f018 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE>:
{
 801f018:	b5b0      	push	{r4, r5, r7, lr}
 801f01a:	f5ad 6d80 	sub.w	sp, sp, #1024	; 0x400
 801f01e:	af00      	add	r7, sp, #0
 801f020:	1d3b      	adds	r3, r7, #4
 801f022:	6018      	str	r0, [r3, #0]
 801f024:	463b      	mov	r3, r7
 801f026:	6019      	str	r1, [r3, #0]
	static Symbol past_y = 0;
 801f028:	4bce      	ldr	r3, [pc, #824]	; (801f364 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x34c>)
 801f02a:	781b      	ldrb	r3, [r3, #0]
 801f02c:	f3bf 8f5b 	dmb	ish
 801f030:	b2db      	uxtb	r3, r3
 801f032:	f003 0301 	and.w	r3, r3, #1
 801f036:	2b00      	cmp	r3, #0
 801f038:	bf0c      	ite	eq
 801f03a:	2301      	moveq	r3, #1
 801f03c:	2300      	movne	r3, #0
 801f03e:	b2db      	uxtb	r3, r3
 801f040:	2b00      	cmp	r3, #0
 801f042:	d014      	beq.n	801f06e <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x56>
 801f044:	48c7      	ldr	r0, [pc, #796]	; (801f364 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x34c>)
 801f046:	f004 fa47 	bl	80234d8 <__cxa_guard_acquire>
 801f04a:	4603      	mov	r3, r0
 801f04c:	2b00      	cmp	r3, #0
 801f04e:	bf14      	ite	ne
 801f050:	2301      	movne	r3, #1
 801f052:	2300      	moveq	r3, #0
 801f054:	b2db      	uxtb	r3, r3
 801f056:	2b00      	cmp	r3, #0
 801f058:	d009      	beq.n	801f06e <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x56>
 801f05a:	2100      	movs	r1, #0
 801f05c:	48c2      	ldr	r0, [pc, #776]	; (801f368 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x350>)
 801f05e:	f7f7 ff2d 	bl	8016ebc <_ZN6SymbolC1Ei>
 801f062:	48c0      	ldr	r0, [pc, #768]	; (801f364 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x34c>)
 801f064:	f004 fa44 	bl	80234f0 <__cxa_guard_release>
 801f068:	48c0      	ldr	r0, [pc, #768]	; (801f36c <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x354>)
 801f06a:	f005 fe8a 	bl	8024d82 <atexit>
	static Symbol past_u = 0;
 801f06e:	4bc0      	ldr	r3, [pc, #768]	; (801f370 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x358>)
 801f070:	781b      	ldrb	r3, [r3, #0]
 801f072:	f3bf 8f5b 	dmb	ish
 801f076:	b2db      	uxtb	r3, r3
 801f078:	f003 0301 	and.w	r3, r3, #1
 801f07c:	2b00      	cmp	r3, #0
 801f07e:	bf0c      	ite	eq
 801f080:	2301      	moveq	r3, #1
 801f082:	2300      	movne	r3, #0
 801f084:	b2db      	uxtb	r3, r3
 801f086:	2b00      	cmp	r3, #0
 801f088:	d014      	beq.n	801f0b4 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x9c>
 801f08a:	48b9      	ldr	r0, [pc, #740]	; (801f370 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x358>)
 801f08c:	f004 fa24 	bl	80234d8 <__cxa_guard_acquire>
 801f090:	4603      	mov	r3, r0
 801f092:	2b00      	cmp	r3, #0
 801f094:	bf14      	ite	ne
 801f096:	2301      	movne	r3, #1
 801f098:	2300      	moveq	r3, #0
 801f09a:	b2db      	uxtb	r3, r3
 801f09c:	2b00      	cmp	r3, #0
 801f09e:	d009      	beq.n	801f0b4 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x9c>
 801f0a0:	2100      	movs	r1, #0
 801f0a2:	48b4      	ldr	r0, [pc, #720]	; (801f374 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x35c>)
 801f0a4:	f7f7 ff0a 	bl	8016ebc <_ZN6SymbolC1Ei>
 801f0a8:	48b1      	ldr	r0, [pc, #708]	; (801f370 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x358>)
 801f0aa:	f004 fa21 	bl	80234f0 <__cxa_guard_release>
 801f0ae:	48b2      	ldr	r0, [pc, #712]	; (801f378 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x360>)
 801f0b0:	f005 fe67 	bl	8024d82 <atexit>
	static Symbol past_e = 0;
 801f0b4:	4bb1      	ldr	r3, [pc, #708]	; (801f37c <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x364>)
 801f0b6:	781b      	ldrb	r3, [r3, #0]
 801f0b8:	f3bf 8f5b 	dmb	ish
 801f0bc:	b2db      	uxtb	r3, r3
 801f0be:	f003 0301 	and.w	r3, r3, #1
 801f0c2:	2b00      	cmp	r3, #0
 801f0c4:	bf0c      	ite	eq
 801f0c6:	2301      	moveq	r3, #1
 801f0c8:	2300      	movne	r3, #0
 801f0ca:	b2db      	uxtb	r3, r3
 801f0cc:	2b00      	cmp	r3, #0
 801f0ce:	d014      	beq.n	801f0fa <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0xe2>
 801f0d0:	48aa      	ldr	r0, [pc, #680]	; (801f37c <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x364>)
 801f0d2:	f004 fa01 	bl	80234d8 <__cxa_guard_acquire>
 801f0d6:	4603      	mov	r3, r0
 801f0d8:	2b00      	cmp	r3, #0
 801f0da:	bf14      	ite	ne
 801f0dc:	2301      	movne	r3, #1
 801f0de:	2300      	moveq	r3, #0
 801f0e0:	b2db      	uxtb	r3, r3
 801f0e2:	2b00      	cmp	r3, #0
 801f0e4:	d009      	beq.n	801f0fa <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0xe2>
 801f0e6:	2100      	movs	r1, #0
 801f0e8:	48a5      	ldr	r0, [pc, #660]	; (801f380 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x368>)
 801f0ea:	f7f7 fee7 	bl	8016ebc <_ZN6SymbolC1Ei>
 801f0ee:	48a3      	ldr	r0, [pc, #652]	; (801f37c <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x364>)
 801f0f0:	f004 f9fe 	bl	80234f0 <__cxa_guard_release>
 801f0f4:	48a3      	ldr	r0, [pc, #652]	; (801f384 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x36c>)
 801f0f6:	f005 fe44 	bl	8024d82 <atexit>
	static Symbol sum_e = 0;
 801f0fa:	4ba3      	ldr	r3, [pc, #652]	; (801f388 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x370>)
 801f0fc:	781b      	ldrb	r3, [r3, #0]
 801f0fe:	f3bf 8f5b 	dmb	ish
 801f102:	b2db      	uxtb	r3, r3
 801f104:	f003 0301 	and.w	r3, r3, #1
 801f108:	2b00      	cmp	r3, #0
 801f10a:	bf0c      	ite	eq
 801f10c:	2301      	moveq	r3, #1
 801f10e:	2300      	movne	r3, #0
 801f110:	b2db      	uxtb	r3, r3
 801f112:	2b00      	cmp	r3, #0
 801f114:	d014      	beq.n	801f140 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x128>
 801f116:	489c      	ldr	r0, [pc, #624]	; (801f388 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x370>)
 801f118:	f004 f9de 	bl	80234d8 <__cxa_guard_acquire>
 801f11c:	4603      	mov	r3, r0
 801f11e:	2b00      	cmp	r3, #0
 801f120:	bf14      	ite	ne
 801f122:	2301      	movne	r3, #1
 801f124:	2300      	moveq	r3, #0
 801f126:	b2db      	uxtb	r3, r3
 801f128:	2b00      	cmp	r3, #0
 801f12a:	d009      	beq.n	801f140 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x128>
 801f12c:	2100      	movs	r1, #0
 801f12e:	4897      	ldr	r0, [pc, #604]	; (801f38c <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x374>)
 801f130:	f7f7 fec4 	bl	8016ebc <_ZN6SymbolC1Ei>
 801f134:	4894      	ldr	r0, [pc, #592]	; (801f388 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x370>)
 801f136:	f004 f9db 	bl	80234f0 <__cxa_guard_release>
 801f13a:	4895      	ldr	r0, [pc, #596]	; (801f390 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x378>)
 801f13c:	f005 fe21 	bl	8024d82 <atexit>
	static Symbol e = 0;
 801f140:	4b94      	ldr	r3, [pc, #592]	; (801f394 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x37c>)
 801f142:	781b      	ldrb	r3, [r3, #0]
 801f144:	f3bf 8f5b 	dmb	ish
 801f148:	b2db      	uxtb	r3, r3
 801f14a:	f003 0301 	and.w	r3, r3, #1
 801f14e:	2b00      	cmp	r3, #0
 801f150:	bf0c      	ite	eq
 801f152:	2301      	moveq	r3, #1
 801f154:	2300      	movne	r3, #0
 801f156:	b2db      	uxtb	r3, r3
 801f158:	2b00      	cmp	r3, #0
 801f15a:	d014      	beq.n	801f186 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x16e>
 801f15c:	488d      	ldr	r0, [pc, #564]	; (801f394 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x37c>)
 801f15e:	f004 f9bb 	bl	80234d8 <__cxa_guard_acquire>
 801f162:	4603      	mov	r3, r0
 801f164:	2b00      	cmp	r3, #0
 801f166:	bf14      	ite	ne
 801f168:	2301      	movne	r3, #1
 801f16a:	2300      	moveq	r3, #0
 801f16c:	b2db      	uxtb	r3, r3
 801f16e:	2b00      	cmp	r3, #0
 801f170:	d009      	beq.n	801f186 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x16e>
 801f172:	2100      	movs	r1, #0
 801f174:	4888      	ldr	r0, [pc, #544]	; (801f398 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x380>)
 801f176:	f7f7 fea1 	bl	8016ebc <_ZN6SymbolC1Ei>
 801f17a:	4886      	ldr	r0, [pc, #536]	; (801f394 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x37c>)
 801f17c:	f004 f9b8 	bl	80234f0 <__cxa_guard_release>
 801f180:	4886      	ldr	r0, [pc, #536]	; (801f39c <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x384>)
 801f182:	f005 fdfe 	bl	8024d82 <atexit>

	// uchyb
	e = PAR(yzad) - ARG(y);
 801f186:	f7fa f887 	bl	8019298 <_ZN16Variable_handler12get_instanceEv>
 801f18a:	4604      	mov	r4, r0
 801f18c:	f107 0344 	add.w	r3, r7, #68	; 0x44
 801f190:	4618      	mov	r0, r3
 801f192:	f004 f9c1 	bl	8023518 <_ZNSaIcEC1Ev>
 801f196:	f107 0244 	add.w	r2, r7, #68	; 0x44
 801f19a:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 801f19e:	4980      	ldr	r1, [pc, #512]	; (801f3a0 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x388>)
 801f1a0:	4618      	mov	r0, r3
 801f1a2:	f7e2 fdf2 	bl	8001d8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801f1a6:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 801f1aa:	4619      	mov	r1, r3
 801f1ac:	4620      	mov	r0, r4
 801f1ae:	f7fa f8ed 	bl	801938c <_ZN16Variable_handler7get_parENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801f1b2:	4604      	mov	r4, r0
 801f1b4:	f7fa f870 	bl	8019298 <_ZN16Variable_handler12get_instanceEv>
 801f1b8:	4605      	mov	r5, r0
 801f1ba:	f107 0380 	add.w	r3, r7, #128	; 0x80
 801f1be:	4618      	mov	r0, r3
 801f1c0:	f004 f9aa 	bl	8023518 <_ZNSaIcEC1Ev>
 801f1c4:	f107 0280 	add.w	r2, r7, #128	; 0x80
 801f1c8:	f107 0368 	add.w	r3, r7, #104	; 0x68
 801f1cc:	4975      	ldr	r1, [pc, #468]	; (801f3a4 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x38c>)
 801f1ce:	4618      	mov	r0, r3
 801f1d0:	f7e2 fddb 	bl	8001d8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801f1d4:	f107 0368 	add.w	r3, r7, #104	; 0x68
 801f1d8:	4619      	mov	r1, r3
 801f1da:	4628      	mov	r0, r5
 801f1dc:	f7fa f88a 	bl	80192f4 <_ZN16Variable_handler7get_argENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801f1e0:	4602      	mov	r2, r0
 801f1e2:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801f1e6:	4611      	mov	r1, r2
 801f1e8:	4618      	mov	r0, r3
 801f1ea:	f7e2 f935 	bl	8001458 <_ZN6SymbolC1ERKS_>
 801f1ee:	f107 030c 	add.w	r3, r7, #12
 801f1f2:	f107 0248 	add.w	r2, r7, #72	; 0x48
 801f1f6:	4621      	mov	r1, r4
 801f1f8:	4618      	mov	r0, r3
 801f1fa:	f7f8 f817 	bl	801722c <_ZN6SymbolmiES_>
 801f1fe:	f107 030c 	add.w	r3, r7, #12
 801f202:	4619      	mov	r1, r3
 801f204:	4864      	ldr	r0, [pc, #400]	; (801f398 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x380>)
 801f206:	f7e2 f95d 	bl	80014c4 <_ZN6SymbolaSEOS_>
 801f20a:	f107 030c 	add.w	r3, r7, #12
 801f20e:	4618      	mov	r0, r3
 801f210:	f7e2 f8c4 	bl	800139c <_ZN6SymbolD1Ev>
 801f214:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801f218:	4618      	mov	r0, r3
 801f21a:	f7e2 f8bf 	bl	800139c <_ZN6SymbolD1Ev>
 801f21e:	f107 0368 	add.w	r3, r7, #104	; 0x68
 801f222:	4618      	mov	r0, r3
 801f224:	f004 fc09 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801f228:	f107 0380 	add.w	r3, r7, #128	; 0x80
 801f22c:	4618      	mov	r0, r3
 801f22e:	f004 f974 	bl	802351a <_ZNSaIcED1Ev>
 801f232:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 801f236:	4618      	mov	r0, r3
 801f238:	f004 fbff 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801f23c:	f107 0344 	add.w	r3, r7, #68	; 0x44
 801f240:	4618      	mov	r0, r3
 801f242:	f004 f96a 	bl	802351a <_ZNSaIcED1Ev>
	sum_e = sum_e + e;
 801f246:	f107 03a4 	add.w	r3, r7, #164	; 0xa4
 801f24a:	4953      	ldr	r1, [pc, #332]	; (801f398 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x380>)
 801f24c:	4618      	mov	r0, r3
 801f24e:	f7e2 f903 	bl	8001458 <_ZN6SymbolC1ERKS_>
 801f252:	f107 0384 	add.w	r3, r7, #132	; 0x84
 801f256:	f107 02a4 	add.w	r2, r7, #164	; 0xa4
 801f25a:	494c      	ldr	r1, [pc, #304]	; (801f38c <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x374>)
 801f25c:	4618      	mov	r0, r3
 801f25e:	f7f7 ff41 	bl	80170e4 <_ZN6SymbolplES_>
 801f262:	f107 0384 	add.w	r3, r7, #132	; 0x84
 801f266:	4619      	mov	r1, r3
 801f268:	4848      	ldr	r0, [pc, #288]	; (801f38c <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x374>)
 801f26a:	f7e2 f92b 	bl	80014c4 <_ZN6SymbolaSEOS_>
 801f26e:	f107 0384 	add.w	r3, r7, #132	; 0x84
 801f272:	4618      	mov	r0, r3
 801f274:	f7e2 f892 	bl	800139c <_ZN6SymbolD1Ev>
 801f278:	f107 03a4 	add.w	r3, r7, #164	; 0xa4
 801f27c:	4618      	mov	r0, r3
 801f27e:	f7e2 f88d 	bl	800139c <_ZN6SymbolD1Ev>

	//regulator
	ARG(u) = PAR(P)*e + PAR(I)*sum_e + PAR(D)*(e - past_e);
 801f282:	f7fa f809 	bl	8019298 <_ZN16Variable_handler12get_instanceEv>
 801f286:	4604      	mov	r4, r0
 801f288:	f507 739e 	add.w	r3, r7, #316	; 0x13c
 801f28c:	4618      	mov	r0, r3
 801f28e:	f004 f943 	bl	8023518 <_ZNSaIcEC1Ev>
 801f292:	f507 729e 	add.w	r2, r7, #316	; 0x13c
 801f296:	f507 7392 	add.w	r3, r7, #292	; 0x124
 801f29a:	4943      	ldr	r1, [pc, #268]	; (801f3a8 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x390>)
 801f29c:	4618      	mov	r0, r3
 801f29e:	f7e2 fd74 	bl	8001d8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801f2a2:	f507 7392 	add.w	r3, r7, #292	; 0x124
 801f2a6:	4619      	mov	r1, r3
 801f2a8:	4620      	mov	r0, r4
 801f2aa:	f7fa f86f 	bl	801938c <_ZN16Variable_handler7get_parENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801f2ae:	4604      	mov	r4, r0
 801f2b0:	f507 73a0 	add.w	r3, r7, #320	; 0x140
 801f2b4:	4938      	ldr	r1, [pc, #224]	; (801f398 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x380>)
 801f2b6:	4618      	mov	r0, r3
 801f2b8:	f7e2 f8ce 	bl	8001458 <_ZN6SymbolC1ERKS_>
 801f2bc:	f507 7382 	add.w	r3, r7, #260	; 0x104
 801f2c0:	f507 72a0 	add.w	r2, r7, #320	; 0x140
 801f2c4:	4621      	mov	r1, r4
 801f2c6:	4618      	mov	r0, r3
 801f2c8:	f7f8 fb82 	bl	80179d0 <_ZN6SymbolmlES_>
 801f2cc:	f7f9 ffe4 	bl	8019298 <_ZN16Variable_handler12get_instanceEv>
 801f2d0:	4604      	mov	r4, r0
 801f2d2:	f507 73cc 	add.w	r3, r7, #408	; 0x198
 801f2d6:	4618      	mov	r0, r3
 801f2d8:	f004 f91e 	bl	8023518 <_ZNSaIcEC1Ev>
 801f2dc:	f507 72cc 	add.w	r2, r7, #408	; 0x198
 801f2e0:	f507 73c0 	add.w	r3, r7, #384	; 0x180
 801f2e4:	4931      	ldr	r1, [pc, #196]	; (801f3ac <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x394>)
 801f2e6:	4618      	mov	r0, r3
 801f2e8:	f7e2 fd4f 	bl	8001d8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801f2ec:	f507 73c0 	add.w	r3, r7, #384	; 0x180
 801f2f0:	4619      	mov	r1, r3
 801f2f2:	4620      	mov	r0, r4
 801f2f4:	f7fa f84a 	bl	801938c <_ZN16Variable_handler7get_parENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801f2f8:	4604      	mov	r4, r0
 801f2fa:	f507 73ce 	add.w	r3, r7, #412	; 0x19c
 801f2fe:	4923      	ldr	r1, [pc, #140]	; (801f38c <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x374>)
 801f300:	4618      	mov	r0, r3
 801f302:	f7e2 f8a9 	bl	8001458 <_ZN6SymbolC1ERKS_>
 801f306:	f507 73b0 	add.w	r3, r7, #352	; 0x160
 801f30a:	f507 72ce 	add.w	r2, r7, #412	; 0x19c
 801f30e:	4621      	mov	r1, r4
 801f310:	4618      	mov	r0, r3
 801f312:	f7f8 fb5d 	bl	80179d0 <_ZN6SymbolmlES_>
 801f316:	f107 03e4 	add.w	r3, r7, #228	; 0xe4
 801f31a:	f507 72b0 	add.w	r2, r7, #352	; 0x160
 801f31e:	f507 7182 	add.w	r1, r7, #260	; 0x104
 801f322:	4618      	mov	r0, r3
 801f324:	f7f7 fede 	bl	80170e4 <_ZN6SymbolplES_>
 801f328:	f7f9 ffb6 	bl	8019298 <_ZN16Variable_handler12get_instanceEv>
 801f32c:	4604      	mov	r4, r0
 801f32e:	f507 73fa 	add.w	r3, r7, #500	; 0x1f4
 801f332:	4618      	mov	r0, r3
 801f334:	f004 f8f0 	bl	8023518 <_ZNSaIcEC1Ev>
 801f338:	f507 72fa 	add.w	r2, r7, #500	; 0x1f4
 801f33c:	f507 73ee 	add.w	r3, r7, #476	; 0x1dc
 801f340:	491b      	ldr	r1, [pc, #108]	; (801f3b0 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x398>)
 801f342:	4618      	mov	r0, r3
 801f344:	f7e2 fd21 	bl	8001d8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801f348:	f507 73ee 	add.w	r3, r7, #476	; 0x1dc
 801f34c:	4619      	mov	r1, r3
 801f34e:	4620      	mov	r0, r4
 801f350:	f7fa f81c 	bl	801938c <_ZN16Variable_handler7get_parENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801f354:	4604      	mov	r4, r0
 801f356:	f507 7306 	add.w	r3, r7, #536	; 0x218
 801f35a:	4909      	ldr	r1, [pc, #36]	; (801f380 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x368>)
 801f35c:	4618      	mov	r0, r3
 801f35e:	f7e2 f87b 	bl	8001458 <_ZN6SymbolC1ERKS_>
 801f362:	e027      	b.n	801f3b4 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x39c>
 801f364:	200007b0 	.word	0x200007b0
 801f368:	20000790 	.word	0x20000790
 801f36c:	0801efc9 	.word	0x0801efc9
 801f370:	200007d4 	.word	0x200007d4
 801f374:	200007b4 	.word	0x200007b4
 801f378:	0801efd9 	.word	0x0801efd9
 801f37c:	200007f8 	.word	0x200007f8
 801f380:	200007d8 	.word	0x200007d8
 801f384:	0801efe9 	.word	0x0801efe9
 801f388:	2000081c 	.word	0x2000081c
 801f38c:	200007fc 	.word	0x200007fc
 801f390:	0801eff9 	.word	0x0801eff9
 801f394:	20000840 	.word	0x20000840
 801f398:	20000820 	.word	0x20000820
 801f39c:	0801f009 	.word	0x0801f009
 801f3a0:	0802a084 	.word	0x0802a084
 801f3a4:	0802a08c 	.word	0x0802a08c
 801f3a8:	0802a090 	.word	0x0802a090
 801f3ac:	0802a094 	.word	0x0802a094
 801f3b0:	0802a098 	.word	0x0802a098
 801f3b4:	f507 73fc 	add.w	r3, r7, #504	; 0x1f8
 801f3b8:	f507 7206 	add.w	r2, r7, #536	; 0x218
 801f3bc:	49e4      	ldr	r1, [pc, #912]	; (801f750 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x738>)
 801f3be:	4618      	mov	r0, r3
 801f3c0:	f7f7 ff34 	bl	801722c <_ZN6SymbolmiES_>
 801f3c4:	f507 73de 	add.w	r3, r7, #444	; 0x1bc
 801f3c8:	f507 72fc 	add.w	r2, r7, #504	; 0x1f8
 801f3cc:	4621      	mov	r1, r4
 801f3ce:	4618      	mov	r0, r3
 801f3d0:	f7f8 fafe 	bl	80179d0 <_ZN6SymbolmlES_>
 801f3d4:	f107 03c4 	add.w	r3, r7, #196	; 0xc4
 801f3d8:	f507 72de 	add.w	r2, r7, #444	; 0x1bc
 801f3dc:	f107 01e4 	add.w	r1, r7, #228	; 0xe4
 801f3e0:	4618      	mov	r0, r3
 801f3e2:	f7f7 fe7f 	bl	80170e4 <_ZN6SymbolplES_>
 801f3e6:	f7f9 ff57 	bl	8019298 <_ZN16Variable_handler12get_instanceEv>
 801f3ea:	4604      	mov	r4, r0
 801f3ec:	f507 7314 	add.w	r3, r7, #592	; 0x250
 801f3f0:	4618      	mov	r0, r3
 801f3f2:	f004 f891 	bl	8023518 <_ZNSaIcEC1Ev>
 801f3f6:	f507 7214 	add.w	r2, r7, #592	; 0x250
 801f3fa:	f507 730e 	add.w	r3, r7, #568	; 0x238
 801f3fe:	49d5      	ldr	r1, [pc, #852]	; (801f754 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x73c>)
 801f400:	4618      	mov	r0, r3
 801f402:	f7e2 fcc2 	bl	8001d8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801f406:	f507 730e 	add.w	r3, r7, #568	; 0x238
 801f40a:	4619      	mov	r1, r3
 801f40c:	4620      	mov	r0, r4
 801f40e:	f7f9 ff71 	bl	80192f4 <_ZN16Variable_handler7get_argENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801f412:	4602      	mov	r2, r0
 801f414:	f107 03c4 	add.w	r3, r7, #196	; 0xc4
 801f418:	4619      	mov	r1, r3
 801f41a:	4610      	mov	r0, r2
 801f41c:	f7e2 f852 	bl	80014c4 <_ZN6SymbolaSEOS_>
 801f420:	f507 730e 	add.w	r3, r7, #568	; 0x238
 801f424:	4618      	mov	r0, r3
 801f426:	f004 fb08 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801f42a:	f507 7314 	add.w	r3, r7, #592	; 0x250
 801f42e:	4618      	mov	r0, r3
 801f430:	f004 f873 	bl	802351a <_ZNSaIcED1Ev>
 801f434:	f107 03c4 	add.w	r3, r7, #196	; 0xc4
 801f438:	4618      	mov	r0, r3
 801f43a:	f7e1 ffaf 	bl	800139c <_ZN6SymbolD1Ev>
 801f43e:	f507 73de 	add.w	r3, r7, #444	; 0x1bc
 801f442:	4618      	mov	r0, r3
 801f444:	f7e1 ffaa 	bl	800139c <_ZN6SymbolD1Ev>
 801f448:	f507 73fc 	add.w	r3, r7, #504	; 0x1f8
 801f44c:	4618      	mov	r0, r3
 801f44e:	f7e1 ffa5 	bl	800139c <_ZN6SymbolD1Ev>
 801f452:	f507 7306 	add.w	r3, r7, #536	; 0x218
 801f456:	4618      	mov	r0, r3
 801f458:	f7e1 ffa0 	bl	800139c <_ZN6SymbolD1Ev>
 801f45c:	f507 73ee 	add.w	r3, r7, #476	; 0x1dc
 801f460:	4618      	mov	r0, r3
 801f462:	f004 faea 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801f466:	f507 73fa 	add.w	r3, r7, #500	; 0x1f4
 801f46a:	4618      	mov	r0, r3
 801f46c:	f004 f855 	bl	802351a <_ZNSaIcED1Ev>
 801f470:	f107 03e4 	add.w	r3, r7, #228	; 0xe4
 801f474:	4618      	mov	r0, r3
 801f476:	f7e1 ff91 	bl	800139c <_ZN6SymbolD1Ev>
 801f47a:	f507 73b0 	add.w	r3, r7, #352	; 0x160
 801f47e:	4618      	mov	r0, r3
 801f480:	f7e1 ff8c 	bl	800139c <_ZN6SymbolD1Ev>
 801f484:	f507 73ce 	add.w	r3, r7, #412	; 0x19c
 801f488:	4618      	mov	r0, r3
 801f48a:	f7e1 ff87 	bl	800139c <_ZN6SymbolD1Ev>
 801f48e:	f507 73c0 	add.w	r3, r7, #384	; 0x180
 801f492:	4618      	mov	r0, r3
 801f494:	f004 fad1 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801f498:	f507 73cc 	add.w	r3, r7, #408	; 0x198
 801f49c:	4618      	mov	r0, r3
 801f49e:	f004 f83c 	bl	802351a <_ZNSaIcED1Ev>
 801f4a2:	f507 7382 	add.w	r3, r7, #260	; 0x104
 801f4a6:	4618      	mov	r0, r3
 801f4a8:	f7e1 ff78 	bl	800139c <_ZN6SymbolD1Ev>
 801f4ac:	f507 73a0 	add.w	r3, r7, #320	; 0x140
 801f4b0:	4618      	mov	r0, r3
 801f4b2:	f7e1 ff73 	bl	800139c <_ZN6SymbolD1Ev>
 801f4b6:	f507 7392 	add.w	r3, r7, #292	; 0x124
 801f4ba:	4618      	mov	r0, r3
 801f4bc:	f004 fabd 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801f4c0:	f507 739e 	add.w	r3, r7, #316	; 0x13c
 801f4c4:	4618      	mov	r0, r3
 801f4c6:	f004 f828 	bl	802351a <_ZNSaIcED1Ev>

	//obiekt
	ARG(y) = ARG(u) - past_u*0.5 + ARG(y)*0.5 + past_y*0.25;
 801f4ca:	f7f9 fee5 	bl	8019298 <_ZN16Variable_handler12get_instanceEv>
 801f4ce:	4604      	mov	r4, r0
 801f4d0:	f507 7333 	add.w	r3, r7, #716	; 0x2cc
 801f4d4:	4618      	mov	r0, r3
 801f4d6:	f004 f81f 	bl	8023518 <_ZNSaIcEC1Ev>
 801f4da:	f507 7233 	add.w	r2, r7, #716	; 0x2cc
 801f4de:	f507 732d 	add.w	r3, r7, #692	; 0x2b4
 801f4e2:	499c      	ldr	r1, [pc, #624]	; (801f754 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x73c>)
 801f4e4:	4618      	mov	r0, r3
 801f4e6:	f7e2 fc50 	bl	8001d8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801f4ea:	f507 732d 	add.w	r3, r7, #692	; 0x2b4
 801f4ee:	4619      	mov	r1, r3
 801f4f0:	4620      	mov	r0, r4
 801f4f2:	f7f9 feff 	bl	80192f4 <_ZN16Variable_handler7get_argENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801f4f6:	4604      	mov	r4, r0
 801f4f8:	f507 733c 	add.w	r3, r7, #752	; 0x2f0
 801f4fc:	ed9f 0b90 	vldr	d0, [pc, #576]	; 801f740 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x728>
 801f500:	4618      	mov	r0, r3
 801f502:	f7f7 fd0e 	bl	8016f22 <_ZN6SymbolC1Ed>
 801f506:	f507 7334 	add.w	r3, r7, #720	; 0x2d0
 801f50a:	f507 723c 	add.w	r2, r7, #752	; 0x2f0
 801f50e:	4992      	ldr	r1, [pc, #584]	; (801f758 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x740>)
 801f510:	4618      	mov	r0, r3
 801f512:	f7f8 fa5d 	bl	80179d0 <_ZN6SymbolmlES_>
 801f516:	f507 7325 	add.w	r3, r7, #660	; 0x294
 801f51a:	f507 7234 	add.w	r2, r7, #720	; 0x2d0
 801f51e:	4621      	mov	r1, r4
 801f520:	4618      	mov	r0, r3
 801f522:	f7f7 fe83 	bl	801722c <_ZN6SymbolmiES_>
 801f526:	f7f9 feb7 	bl	8019298 <_ZN16Variable_handler12get_instanceEv>
 801f52a:	4604      	mov	r4, r0
 801f52c:	f507 7352 	add.w	r3, r7, #840	; 0x348
 801f530:	4618      	mov	r0, r3
 801f532:	f003 fff1 	bl	8023518 <_ZNSaIcEC1Ev>
 801f536:	f507 7252 	add.w	r2, r7, #840	; 0x348
 801f53a:	f507 734c 	add.w	r3, r7, #816	; 0x330
 801f53e:	4987      	ldr	r1, [pc, #540]	; (801f75c <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x744>)
 801f540:	4618      	mov	r0, r3
 801f542:	f7e2 fc22 	bl	8001d8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801f546:	f507 734c 	add.w	r3, r7, #816	; 0x330
 801f54a:	4619      	mov	r1, r3
 801f54c:	4620      	mov	r0, r4
 801f54e:	f7f9 fed1 	bl	80192f4 <_ZN16Variable_handler7get_argENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801f552:	4604      	mov	r4, r0
 801f554:	f507 7353 	add.w	r3, r7, #844	; 0x34c
 801f558:	ed9f 0b79 	vldr	d0, [pc, #484]	; 801f740 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x728>
 801f55c:	4618      	mov	r0, r3
 801f55e:	f7f7 fce0 	bl	8016f22 <_ZN6SymbolC1Ed>
 801f562:	f507 7344 	add.w	r3, r7, #784	; 0x310
 801f566:	f507 7253 	add.w	r2, r7, #844	; 0x34c
 801f56a:	4621      	mov	r1, r4
 801f56c:	4618      	mov	r0, r3
 801f56e:	f7f8 fa2f 	bl	80179d0 <_ZN6SymbolmlES_>
 801f572:	f507 731d 	add.w	r3, r7, #628	; 0x274
 801f576:	f507 7244 	add.w	r2, r7, #784	; 0x310
 801f57a:	f507 7125 	add.w	r1, r7, #660	; 0x294
 801f57e:	4618      	mov	r0, r3
 801f580:	f7f7 fdb0 	bl	80170e4 <_ZN6SymbolplES_>
 801f584:	f507 7363 	add.w	r3, r7, #908	; 0x38c
 801f588:	ed9f 0b6f 	vldr	d0, [pc, #444]	; 801f748 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x730>
 801f58c:	4618      	mov	r0, r3
 801f58e:	f7f7 fcc8 	bl	8016f22 <_ZN6SymbolC1Ed>
 801f592:	f507 735b 	add.w	r3, r7, #876	; 0x36c
 801f596:	f507 7263 	add.w	r2, r7, #908	; 0x38c
 801f59a:	4971      	ldr	r1, [pc, #452]	; (801f760 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x748>)
 801f59c:	4618      	mov	r0, r3
 801f59e:	f7f8 fa17 	bl	80179d0 <_ZN6SymbolmlES_>
 801f5a2:	f507 7315 	add.w	r3, r7, #596	; 0x254
 801f5a6:	f507 725b 	add.w	r2, r7, #876	; 0x36c
 801f5aa:	f507 711d 	add.w	r1, r7, #628	; 0x274
 801f5ae:	4618      	mov	r0, r3
 801f5b0:	f7f7 fd98 	bl	80170e4 <_ZN6SymbolplES_>
 801f5b4:	f7f9 fe70 	bl	8019298 <_ZN16Variable_handler12get_instanceEv>
 801f5b8:	4604      	mov	r4, r0
 801f5ba:	f507 7371 	add.w	r3, r7, #964	; 0x3c4
 801f5be:	4618      	mov	r0, r3
 801f5c0:	f003 ffaa 	bl	8023518 <_ZNSaIcEC1Ev>
 801f5c4:	f507 7271 	add.w	r2, r7, #964	; 0x3c4
 801f5c8:	f507 736b 	add.w	r3, r7, #940	; 0x3ac
 801f5cc:	4963      	ldr	r1, [pc, #396]	; (801f75c <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x744>)
 801f5ce:	4618      	mov	r0, r3
 801f5d0:	f7e2 fbdb 	bl	8001d8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801f5d4:	f507 736b 	add.w	r3, r7, #940	; 0x3ac
 801f5d8:	4619      	mov	r1, r3
 801f5da:	4620      	mov	r0, r4
 801f5dc:	f7f9 fe8a 	bl	80192f4 <_ZN16Variable_handler7get_argENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801f5e0:	4602      	mov	r2, r0
 801f5e2:	f507 7315 	add.w	r3, r7, #596	; 0x254
 801f5e6:	4619      	mov	r1, r3
 801f5e8:	4610      	mov	r0, r2
 801f5ea:	f7e1 ff6b 	bl	80014c4 <_ZN6SymbolaSEOS_>
 801f5ee:	f507 736b 	add.w	r3, r7, #940	; 0x3ac
 801f5f2:	4618      	mov	r0, r3
 801f5f4:	f004 fa21 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801f5f8:	f507 7371 	add.w	r3, r7, #964	; 0x3c4
 801f5fc:	4618      	mov	r0, r3
 801f5fe:	f003 ff8c 	bl	802351a <_ZNSaIcED1Ev>
 801f602:	f507 7315 	add.w	r3, r7, #596	; 0x254
 801f606:	4618      	mov	r0, r3
 801f608:	f7e1 fec8 	bl	800139c <_ZN6SymbolD1Ev>
 801f60c:	f507 735b 	add.w	r3, r7, #876	; 0x36c
 801f610:	4618      	mov	r0, r3
 801f612:	f7e1 fec3 	bl	800139c <_ZN6SymbolD1Ev>
 801f616:	f507 7363 	add.w	r3, r7, #908	; 0x38c
 801f61a:	4618      	mov	r0, r3
 801f61c:	f7e1 febe 	bl	800139c <_ZN6SymbolD1Ev>
 801f620:	f507 731d 	add.w	r3, r7, #628	; 0x274
 801f624:	4618      	mov	r0, r3
 801f626:	f7e1 feb9 	bl	800139c <_ZN6SymbolD1Ev>
 801f62a:	f507 7344 	add.w	r3, r7, #784	; 0x310
 801f62e:	4618      	mov	r0, r3
 801f630:	f7e1 feb4 	bl	800139c <_ZN6SymbolD1Ev>
 801f634:	f507 7353 	add.w	r3, r7, #844	; 0x34c
 801f638:	4618      	mov	r0, r3
 801f63a:	f7e1 feaf 	bl	800139c <_ZN6SymbolD1Ev>
 801f63e:	f507 734c 	add.w	r3, r7, #816	; 0x330
 801f642:	4618      	mov	r0, r3
 801f644:	f004 f9f9 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801f648:	f507 7352 	add.w	r3, r7, #840	; 0x348
 801f64c:	4618      	mov	r0, r3
 801f64e:	f003 ff64 	bl	802351a <_ZNSaIcED1Ev>
 801f652:	f507 7325 	add.w	r3, r7, #660	; 0x294
 801f656:	4618      	mov	r0, r3
 801f658:	f7e1 fea0 	bl	800139c <_ZN6SymbolD1Ev>
 801f65c:	f507 7334 	add.w	r3, r7, #720	; 0x2d0
 801f660:	4618      	mov	r0, r3
 801f662:	f7e1 fe9b 	bl	800139c <_ZN6SymbolD1Ev>
 801f666:	f507 733c 	add.w	r3, r7, #752	; 0x2f0
 801f66a:	4618      	mov	r0, r3
 801f66c:	f7e1 fe96 	bl	800139c <_ZN6SymbolD1Ev>
 801f670:	f507 732d 	add.w	r3, r7, #692	; 0x2b4
 801f674:	4618      	mov	r0, r3
 801f676:	f004 f9e0 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801f67a:	f507 7333 	add.w	r3, r7, #716	; 0x2cc
 801f67e:	4618      	mov	r0, r3
 801f680:	f003 ff4b 	bl	802351a <_ZNSaIcED1Ev>

	past_e = e;
 801f684:	4932      	ldr	r1, [pc, #200]	; (801f750 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x738>)
 801f686:	4837      	ldr	r0, [pc, #220]	; (801f764 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x74c>)
 801f688:	f7e2 f9c0 	bl	8001a0c <_ZN6SymbolaSERKS_>
	past_y = ARG(y);
 801f68c:	f7f9 fe04 	bl	8019298 <_ZN16Variable_handler12get_instanceEv>
 801f690:	4604      	mov	r4, r0
 801f692:	f507 7378 	add.w	r3, r7, #992	; 0x3e0
 801f696:	4618      	mov	r0, r3
 801f698:	f003 ff3e 	bl	8023518 <_ZNSaIcEC1Ev>
 801f69c:	f507 7278 	add.w	r2, r7, #992	; 0x3e0
 801f6a0:	f507 7372 	add.w	r3, r7, #968	; 0x3c8
 801f6a4:	492d      	ldr	r1, [pc, #180]	; (801f75c <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x744>)
 801f6a6:	4618      	mov	r0, r3
 801f6a8:	f7e2 fb6f 	bl	8001d8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801f6ac:	f507 7372 	add.w	r3, r7, #968	; 0x3c8
 801f6b0:	4619      	mov	r1, r3
 801f6b2:	4620      	mov	r0, r4
 801f6b4:	f7f9 fe1e 	bl	80192f4 <_ZN16Variable_handler7get_argENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801f6b8:	4603      	mov	r3, r0
 801f6ba:	4619      	mov	r1, r3
 801f6bc:	4828      	ldr	r0, [pc, #160]	; (801f760 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x748>)
 801f6be:	f7e2 f9a5 	bl	8001a0c <_ZN6SymbolaSERKS_>
 801f6c2:	f507 7372 	add.w	r3, r7, #968	; 0x3c8
 801f6c6:	4618      	mov	r0, r3
 801f6c8:	f004 f9b7 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801f6cc:	f507 7378 	add.w	r3, r7, #992	; 0x3e0
 801f6d0:	4618      	mov	r0, r3
 801f6d2:	f003 ff22 	bl	802351a <_ZNSaIcED1Ev>
	past_u = ARG(u);
 801f6d6:	f7f9 fddf 	bl	8019298 <_ZN16Variable_handler12get_instanceEv>
 801f6da:	4604      	mov	r4, r0
 801f6dc:	f507 737f 	add.w	r3, r7, #1020	; 0x3fc
 801f6e0:	4618      	mov	r0, r3
 801f6e2:	f003 ff19 	bl	8023518 <_ZNSaIcEC1Ev>
 801f6e6:	f507 727f 	add.w	r2, r7, #1020	; 0x3fc
 801f6ea:	f507 7379 	add.w	r3, r7, #996	; 0x3e4
 801f6ee:	4919      	ldr	r1, [pc, #100]	; (801f754 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x73c>)
 801f6f0:	4618      	mov	r0, r3
 801f6f2:	f7e2 fb4a 	bl	8001d8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801f6f6:	f507 7379 	add.w	r3, r7, #996	; 0x3e4
 801f6fa:	4619      	mov	r1, r3
 801f6fc:	4620      	mov	r0, r4
 801f6fe:	f7f9 fdf9 	bl	80192f4 <_ZN16Variable_handler7get_argENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801f702:	4603      	mov	r3, r0
 801f704:	4619      	mov	r1, r3
 801f706:	4814      	ldr	r0, [pc, #80]	; (801f758 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x740>)
 801f708:	f7e2 f980 	bl	8001a0c <_ZN6SymbolaSERKS_>
 801f70c:	f507 7379 	add.w	r3, r7, #996	; 0x3e4
 801f710:	4618      	mov	r0, r3
 801f712:	f004 f992 	bl	8023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801f716:	f507 737f 	add.w	r3, r7, #1020	; 0x3fc
 801f71a:	4618      	mov	r0, r3
 801f71c:	f003 fefd 	bl	802351a <_ZNSaIcED1Ev>

	return 0;
 801f720:	1d3b      	adds	r3, r7, #4
 801f722:	2100      	movs	r1, #0
 801f724:	6818      	ldr	r0, [r3, #0]
 801f726:	f7f7 fbc9 	bl	8016ebc <_ZN6SymbolC1Ei>
 801f72a:	1d3b      	adds	r3, r7, #4
 801f72c:	1d3a      	adds	r2, r7, #4
 801f72e:	6812      	ldr	r2, [r2, #0]
 801f730:	601a      	str	r2, [r3, #0]
}
 801f732:	1d3b      	adds	r3, r7, #4
 801f734:	6818      	ldr	r0, [r3, #0]
 801f736:	f507 6780 	add.w	r7, r7, #1024	; 0x400
 801f73a:	46bd      	mov	sp, r7
 801f73c:	bdb0      	pop	{r4, r5, r7, pc}
 801f73e:	bf00      	nop
 801f740:	00000000 	.word	0x00000000
 801f744:	3fe00000 	.word	0x3fe00000
 801f748:	00000000 	.word	0x00000000
 801f74c:	3fd00000 	.word	0x3fd00000
 801f750:	20000820 	.word	0x20000820
 801f754:	0802a09c 	.word	0x0802a09c
 801f758:	200007b4 	.word	0x200007b4
 801f75c:	0802a08c 	.word	0x0802a08c
 801f760:	20000790 	.word	0x20000790
 801f764:	200007d8 	.word	0x200007d8

0801f768 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EEC1Ev>:
      _Rb_tree() = default;
 801f768:	b580      	push	{r7, lr}
 801f76a:	b082      	sub	sp, #8
 801f76c:	af00      	add	r7, sp, #0
 801f76e:	6078      	str	r0, [r7, #4]
 801f770:	687b      	ldr	r3, [r7, #4]
 801f772:	4618      	mov	r0, r3
 801f774:	f000 f980 	bl	801fa78 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE13_Rb_tree_implISK_Lb1EEC1Ev>
 801f778:	687b      	ldr	r3, [r7, #4]
 801f77a:	4618      	mov	r0, r3
 801f77c:	3708      	adds	r7, #8
 801f77e:	46bd      	mov	sp, r7
 801f780:	bd80      	pop	{r7, pc}

0801f782 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaIS9_EEESt4lessIS5_ESaISt4pairIKS5_SD_EEEC1Ev>:
      map() = default;
 801f782:	b580      	push	{r7, lr}
 801f784:	b082      	sub	sp, #8
 801f786:	af00      	add	r7, sp, #0
 801f788:	6078      	str	r0, [r7, #4]
 801f78a:	687b      	ldr	r3, [r7, #4]
 801f78c:	4618      	mov	r0, r3
 801f78e:	f7ff ffeb 	bl	801f768 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EEC1Ev>
 801f792:	687b      	ldr	r3, [r7, #4]
 801f794:	4618      	mov	r0, r3
 801f796:	3708      	adds	r7, #8
 801f798:	46bd      	mov	sp, r7
 801f79a:	bd80      	pop	{r7, pc}

0801f79c <_ZN16Function_handlerC1Ev>:

}

Function_handler::Function_handler()
 801f79c:	b590      	push	{r4, r7, lr}
 801f79e:	b08d      	sub	sp, #52	; 0x34
 801f7a0:	af00      	add	r7, sp, #0
 801f7a2:	6078      	str	r0, [r7, #4]
 801f7a4:	687b      	ldr	r3, [r7, #4]
 801f7a6:	4618      	mov	r0, r3
 801f7a8:	f7ff ffeb 	bl	801f782 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaIS9_EEESt4lessIS5_ESaISt4pairIKS5_SD_EEEC1Ev>
{
	ADD_FUNCTION(run_single_experiment_iteration);
 801f7ac:	687c      	ldr	r4, [r7, #4]
 801f7ae:	4b0e      	ldr	r3, [pc, #56]	; (801f7e8 <_ZN16Function_handlerC1Ev+0x4c>)
 801f7b0:	62fb      	str	r3, [r7, #44]	; 0x2c
 801f7b2:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 801f7b6:	f107 0310 	add.w	r3, r7, #16
 801f7ba:	490c      	ldr	r1, [pc, #48]	; (801f7ec <_ZN16Function_handlerC1Ev+0x50>)
 801f7bc:	4618      	mov	r0, r3
 801f7be:	f000 f970 	bl	801faa2 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISA_EEEEC1IRA32_KcSE_Lb1EEEOT_OT0_>
 801f7c2:	f107 0308 	add.w	r3, r7, #8
 801f7c6:	f107 0210 	add.w	r2, r7, #16
 801f7ca:	4621      	mov	r1, r4
 801f7cc:	4618      	mov	r0, r3
 801f7ce:	f000 f990 	bl	801faf2 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaIS9_EEESt4lessIS5_ESaISt4pairIKS5_SD_EEE6insertEOSI_>
 801f7d2:	f107 0310 	add.w	r3, r7, #16
 801f7d6:	4618      	mov	r0, r3
 801f7d8:	f7ef f9cd 	bl	800eb76 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISA_EEEED1Ev>
}
 801f7dc:	687b      	ldr	r3, [r7, #4]
 801f7de:	4618      	mov	r0, r3
 801f7e0:	3734      	adds	r7, #52	; 0x34
 801f7e2:	46bd      	mov	sp, r7
 801f7e4:	bd90      	pop	{r4, r7, pc}
 801f7e6:	bf00      	nop
 801f7e8:	0801f019 	.word	0x0801f019
 801f7ec:	0802a0a0 	.word	0x0802a0a0

0801f7f0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EEC1Ev>:
 801f7f0:	b580      	push	{r7, lr}
 801f7f2:	b082      	sub	sp, #8
 801f7f4:	af00      	add	r7, sp, #0
 801f7f6:	6078      	str	r0, [r7, #4]
 801f7f8:	687b      	ldr	r3, [r7, #4]
 801f7fa:	4618      	mov	r0, r3
 801f7fc:	f000 f98d 	bl	801fb1a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE13_Rb_tree_implISD_Lb1EEC1Ev>
 801f800:	687b      	ldr	r3, [r7, #4]
 801f802:	4618      	mov	r0, r3
 801f804:	3708      	adds	r7, #8
 801f806:	46bd      	mov	sp, r7
 801f808:	bd80      	pop	{r7, pc}

0801f80a <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1Ev>:
 801f80a:	b580      	push	{r7, lr}
 801f80c:	b082      	sub	sp, #8
 801f80e:	af00      	add	r7, sp, #0
 801f810:	6078      	str	r0, [r7, #4]
 801f812:	687b      	ldr	r3, [r7, #4]
 801f814:	4618      	mov	r0, r3
 801f816:	f7ff ffeb 	bl	801f7f0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EEC1Ev>
 801f81a:	687b      	ldr	r3, [r7, #4]
 801f81c:	4618      	mov	r0, r3
 801f81e:	3708      	adds	r7, #8
 801f820:	46bd      	mov	sp, r7
 801f822:	bd80      	pop	{r7, pc}

0801f824 <_ZN16Variable_handlerC1Ev>:

Variable_handler::Variable_handler()
 801f824:	b590      	push	{r4, r7, lr}
 801f826:	f5ad 7d13 	sub.w	sp, sp, #588	; 0x24c
 801f82a:	af00      	add	r7, sp, #0
 801f82c:	1d3b      	adds	r3, r7, #4
 801f82e:	6018      	str	r0, [r3, #0]
 801f830:	1d3b      	adds	r3, r7, #4
 801f832:	681b      	ldr	r3, [r3, #0]
 801f834:	4618      	mov	r0, r3
 801f836:	f7ff ffe8 	bl	801f80a <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1Ev>
 801f83a:	1d3b      	adds	r3, r7, #4
 801f83c:	681b      	ldr	r3, [r3, #0]
 801f83e:	3318      	adds	r3, #24
 801f840:	4618      	mov	r0, r3
 801f842:	f7ff ffe2 	bl	801f80a <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1Ev>
 801f846:	1d3b      	adds	r3, r7, #4
 801f848:	681b      	ldr	r3, [r3, #0]
 801f84a:	3330      	adds	r3, #48	; 0x30
 801f84c:	4618      	mov	r0, r3
 801f84e:	f7ff ffdc 	bl	801f80a <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1Ev>
{
	ADD_ARG(u);
 801f852:	1d3b      	adds	r3, r7, #4
 801f854:	681b      	ldr	r3, [r3, #0]
 801f856:	f103 0430 	add.w	r4, r3, #48	; 0x30
 801f85a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801f85e:	4618      	mov	r0, r3
 801f860:	2320      	movs	r3, #32
 801f862:	461a      	mov	r2, r3
 801f864:	2100      	movs	r1, #0
 801f866:	f005 fb1b 	bl	8024ea0 <memset>
 801f86a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801f86e:	4618      	mov	r0, r3
 801f870:	f7ee fbb5 	bl	800dfde <_ZN6SymbolC1Ev>
 801f874:	f107 0248 	add.w	r2, r7, #72	; 0x48
 801f878:	f107 0310 	add.w	r3, r7, #16
 801f87c:	4978      	ldr	r1, [pc, #480]	; (801fa60 <_ZN16Variable_handlerC1Ev+0x23c>)
 801f87e:	4618      	mov	r0, r3
 801f880:	f000 f960 	bl	801fb44 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEC1IRA2_KcLb1EEEOT_RKS7_>
 801f884:	f107 0308 	add.w	r3, r7, #8
 801f888:	f107 0210 	add.w	r2, r7, #16
 801f88c:	4621      	mov	r1, r4
 801f88e:	4618      	mov	r0, r3
 801f890:	f000 f97f 	bl	801fb92 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE6insertEOSB_>
 801f894:	f107 0310 	add.w	r3, r7, #16
 801f898:	4618      	mov	r0, r3
 801f89a:	f7fa fd5a 	bl	801a352 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolED1Ev>
 801f89e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801f8a2:	4618      	mov	r0, r3
 801f8a4:	f7e1 fd7a 	bl	800139c <_ZN6SymbolD1Ev>
	ADD_ARG(y);
 801f8a8:	1d3b      	adds	r3, r7, #4
 801f8aa:	681b      	ldr	r3, [r3, #0]
 801f8ac:	f103 0430 	add.w	r4, r3, #48	; 0x30
 801f8b0:	f107 03a8 	add.w	r3, r7, #168	; 0xa8
 801f8b4:	4618      	mov	r0, r3
 801f8b6:	2320      	movs	r3, #32
 801f8b8:	461a      	mov	r2, r3
 801f8ba:	2100      	movs	r1, #0
 801f8bc:	f005 faf0 	bl	8024ea0 <memset>
 801f8c0:	f107 03a8 	add.w	r3, r7, #168	; 0xa8
 801f8c4:	4618      	mov	r0, r3
 801f8c6:	f7ee fb8a 	bl	800dfde <_ZN6SymbolC1Ev>
 801f8ca:	f107 02a8 	add.w	r2, r7, #168	; 0xa8
 801f8ce:	f107 0370 	add.w	r3, r7, #112	; 0x70
 801f8d2:	4964      	ldr	r1, [pc, #400]	; (801fa64 <_ZN16Variable_handlerC1Ev+0x240>)
 801f8d4:	4618      	mov	r0, r3
 801f8d6:	f000 f935 	bl	801fb44 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEC1IRA2_KcLb1EEEOT_RKS7_>
 801f8da:	f107 0368 	add.w	r3, r7, #104	; 0x68
 801f8de:	f107 0270 	add.w	r2, r7, #112	; 0x70
 801f8e2:	4621      	mov	r1, r4
 801f8e4:	4618      	mov	r0, r3
 801f8e6:	f000 f954 	bl	801fb92 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE6insertEOSB_>
 801f8ea:	f107 0370 	add.w	r3, r7, #112	; 0x70
 801f8ee:	4618      	mov	r0, r3
 801f8f0:	f7fa fd2f 	bl	801a352 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolED1Ev>
 801f8f4:	f107 03a8 	add.w	r3, r7, #168	; 0xa8
 801f8f8:	4618      	mov	r0, r3
 801f8fa:	f7e1 fd4f 	bl	800139c <_ZN6SymbolD1Ev>

	ADD_PAR(yzad);
 801f8fe:	1d3b      	adds	r3, r7, #4
 801f900:	681b      	ldr	r3, [r3, #0]
 801f902:	f103 0418 	add.w	r4, r3, #24
 801f906:	f507 7384 	add.w	r3, r7, #264	; 0x108
 801f90a:	4618      	mov	r0, r3
 801f90c:	2320      	movs	r3, #32
 801f90e:	461a      	mov	r2, r3
 801f910:	2100      	movs	r1, #0
 801f912:	f005 fac5 	bl	8024ea0 <memset>
 801f916:	f507 7384 	add.w	r3, r7, #264	; 0x108
 801f91a:	4618      	mov	r0, r3
 801f91c:	f7ee fb5f 	bl	800dfde <_ZN6SymbolC1Ev>
 801f920:	f507 7284 	add.w	r2, r7, #264	; 0x108
 801f924:	f107 03d0 	add.w	r3, r7, #208	; 0xd0
 801f928:	494f      	ldr	r1, [pc, #316]	; (801fa68 <_ZN16Variable_handlerC1Ev+0x244>)
 801f92a:	4618      	mov	r0, r3
 801f92c:	f000 f945 	bl	801fbba <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEC1IRA5_KcLb1EEEOT_RKS7_>
 801f930:	f107 03c8 	add.w	r3, r7, #200	; 0xc8
 801f934:	f107 02d0 	add.w	r2, r7, #208	; 0xd0
 801f938:	4621      	mov	r1, r4
 801f93a:	4618      	mov	r0, r3
 801f93c:	f000 f929 	bl	801fb92 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE6insertEOSB_>
 801f940:	f107 03d0 	add.w	r3, r7, #208	; 0xd0
 801f944:	4618      	mov	r0, r3
 801f946:	f7fa fd04 	bl	801a352 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolED1Ev>
 801f94a:	f507 7384 	add.w	r3, r7, #264	; 0x108
 801f94e:	4618      	mov	r0, r3
 801f950:	f7e1 fd24 	bl	800139c <_ZN6SymbolD1Ev>
	ADD_PAR(P);
 801f954:	1d3b      	adds	r3, r7, #4
 801f956:	681b      	ldr	r3, [r3, #0]
 801f958:	f103 0418 	add.w	r4, r3, #24
 801f95c:	f507 73b4 	add.w	r3, r7, #360	; 0x168
 801f960:	2220      	movs	r2, #32
 801f962:	2100      	movs	r1, #0
 801f964:	4618      	mov	r0, r3
 801f966:	f005 fa9b 	bl	8024ea0 <memset>
 801f96a:	f507 73b4 	add.w	r3, r7, #360	; 0x168
 801f96e:	4618      	mov	r0, r3
 801f970:	f7ee fb35 	bl	800dfde <_ZN6SymbolC1Ev>
 801f974:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 801f978:	f507 7398 	add.w	r3, r7, #304	; 0x130
 801f97c:	493b      	ldr	r1, [pc, #236]	; (801fa6c <_ZN16Variable_handlerC1Ev+0x248>)
 801f97e:	4618      	mov	r0, r3
 801f980:	f000 f8e0 	bl	801fb44 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEC1IRA2_KcLb1EEEOT_RKS7_>
 801f984:	f507 7394 	add.w	r3, r7, #296	; 0x128
 801f988:	f507 7298 	add.w	r2, r7, #304	; 0x130
 801f98c:	4621      	mov	r1, r4
 801f98e:	4618      	mov	r0, r3
 801f990:	f000 f8ff 	bl	801fb92 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE6insertEOSB_>
 801f994:	f507 7398 	add.w	r3, r7, #304	; 0x130
 801f998:	4618      	mov	r0, r3
 801f99a:	f7fa fcda 	bl	801a352 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolED1Ev>
 801f99e:	f507 73b4 	add.w	r3, r7, #360	; 0x168
 801f9a2:	4618      	mov	r0, r3
 801f9a4:	f7e1 fcfa 	bl	800139c <_ZN6SymbolD1Ev>
	ADD_PAR(I);
 801f9a8:	1d3b      	adds	r3, r7, #4
 801f9aa:	681b      	ldr	r3, [r3, #0]
 801f9ac:	f103 0418 	add.w	r4, r3, #24
 801f9b0:	f507 73e4 	add.w	r3, r7, #456	; 0x1c8
 801f9b4:	2220      	movs	r2, #32
 801f9b6:	2100      	movs	r1, #0
 801f9b8:	4618      	mov	r0, r3
 801f9ba:	f005 fa71 	bl	8024ea0 <memset>
 801f9be:	f507 73e4 	add.w	r3, r7, #456	; 0x1c8
 801f9c2:	4618      	mov	r0, r3
 801f9c4:	f7ee fb0b 	bl	800dfde <_ZN6SymbolC1Ev>
 801f9c8:	f507 72e4 	add.w	r2, r7, #456	; 0x1c8
 801f9cc:	f507 73c8 	add.w	r3, r7, #400	; 0x190
 801f9d0:	4927      	ldr	r1, [pc, #156]	; (801fa70 <_ZN16Variable_handlerC1Ev+0x24c>)
 801f9d2:	4618      	mov	r0, r3
 801f9d4:	f000 f8b6 	bl	801fb44 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEC1IRA2_KcLb1EEEOT_RKS7_>
 801f9d8:	f507 73c4 	add.w	r3, r7, #392	; 0x188
 801f9dc:	f507 72c8 	add.w	r2, r7, #400	; 0x190
 801f9e0:	4621      	mov	r1, r4
 801f9e2:	4618      	mov	r0, r3
 801f9e4:	f000 f8d5 	bl	801fb92 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE6insertEOSB_>
 801f9e8:	f507 73c8 	add.w	r3, r7, #400	; 0x190
 801f9ec:	4618      	mov	r0, r3
 801f9ee:	f7fa fcb0 	bl	801a352 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolED1Ev>
 801f9f2:	f507 73e4 	add.w	r3, r7, #456	; 0x1c8
 801f9f6:	4618      	mov	r0, r3
 801f9f8:	f7e1 fcd0 	bl	800139c <_ZN6SymbolD1Ev>
	ADD_PAR(D);
 801f9fc:	1d3b      	adds	r3, r7, #4
 801f9fe:	681b      	ldr	r3, [r3, #0]
 801fa00:	f103 0418 	add.w	r4, r3, #24
 801fa04:	f507 730a 	add.w	r3, r7, #552	; 0x228
 801fa08:	2220      	movs	r2, #32
 801fa0a:	2100      	movs	r1, #0
 801fa0c:	4618      	mov	r0, r3
 801fa0e:	f005 fa47 	bl	8024ea0 <memset>
 801fa12:	f507 730a 	add.w	r3, r7, #552	; 0x228
 801fa16:	4618      	mov	r0, r3
 801fa18:	f7ee fae1 	bl	800dfde <_ZN6SymbolC1Ev>
 801fa1c:	f507 720a 	add.w	r2, r7, #552	; 0x228
 801fa20:	f507 73f8 	add.w	r3, r7, #496	; 0x1f0
 801fa24:	4913      	ldr	r1, [pc, #76]	; (801fa74 <_ZN16Variable_handlerC1Ev+0x250>)
 801fa26:	4618      	mov	r0, r3
 801fa28:	f000 f88c 	bl	801fb44 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEC1IRA2_KcLb1EEEOT_RKS7_>
 801fa2c:	f507 73f4 	add.w	r3, r7, #488	; 0x1e8
 801fa30:	f507 72f8 	add.w	r2, r7, #496	; 0x1f0
 801fa34:	4621      	mov	r1, r4
 801fa36:	4618      	mov	r0, r3
 801fa38:	f000 f8ab 	bl	801fb92 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE6insertEOSB_>
 801fa3c:	f507 73f8 	add.w	r3, r7, #496	; 0x1f0
 801fa40:	4618      	mov	r0, r3
 801fa42:	f7fa fc86 	bl	801a352 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolED1Ev>
 801fa46:	f507 730a 	add.w	r3, r7, #552	; 0x228
 801fa4a:	4618      	mov	r0, r3
 801fa4c:	f7e1 fca6 	bl	800139c <_ZN6SymbolD1Ev>
}
 801fa50:	1d3b      	adds	r3, r7, #4
 801fa52:	681b      	ldr	r3, [r3, #0]
 801fa54:	4618      	mov	r0, r3
 801fa56:	f507 7713 	add.w	r7, r7, #588	; 0x24c
 801fa5a:	46bd      	mov	sp, r7
 801fa5c:	bd90      	pop	{r4, r7, pc}
 801fa5e:	bf00      	nop
 801fa60:	0802a09c 	.word	0x0802a09c
 801fa64:	0802a08c 	.word	0x0802a08c
 801fa68:	0802a084 	.word	0x0802a084
 801fa6c:	0802a090 	.word	0x0802a090
 801fa70:	0802a094 	.word	0x0802a094
 801fa74:	0802a098 	.word	0x0802a098

0801fa78 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE13_Rb_tree_implISK_Lb1EEC1Ev>:
	  _Rb_tree_impl()
 801fa78:	b580      	push	{r7, lr}
 801fa7a:	b082      	sub	sp, #8
 801fa7c:	af00      	add	r7, sp, #0
 801fa7e:	6078      	str	r0, [r7, #4]
	  : _Node_allocator()
 801fa80:	6878      	ldr	r0, [r7, #4]
 801fa82:	f000 f8c1 	bl	801fc08 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEEC1Ev>
 801fa86:	687b      	ldr	r3, [r7, #4]
 801fa88:	4618      	mov	r0, r3
 801fa8a:	f7f2 fdc4 	bl	8012616 <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>
 801fa8e:	687b      	ldr	r3, [r7, #4]
 801fa90:	3304      	adds	r3, #4
 801fa92:	4618      	mov	r0, r3
 801fa94:	f7e1 faf3 	bl	800107e <_ZNSt15_Rb_tree_headerC1Ev>
	  { }
 801fa98:	687b      	ldr	r3, [r7, #4]
 801fa9a:	4618      	mov	r0, r3
 801fa9c:	3708      	adds	r7, #8
 801fa9e:	46bd      	mov	sp, r7
 801faa0:	bd80      	pop	{r7, pc}

0801faa2 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISA_EEEEC1IRA32_KcSE_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 801faa2:	b5b0      	push	{r4, r5, r7, lr}
 801faa4:	b086      	sub	sp, #24
 801faa6:	af00      	add	r7, sp, #0
 801faa8:	60f8      	str	r0, [r7, #12]
 801faaa:	60b9      	str	r1, [r7, #8]
 801faac:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 801faae:	68fc      	ldr	r4, [r7, #12]
 801fab0:	68b8      	ldr	r0, [r7, #8]
 801fab2:	f000 f8b5 	bl	801fc20 <_ZSt7forwardIRA32_KcEOT_RNSt16remove_referenceIS3_E4typeE>
 801fab6:	4605      	mov	r5, r0
 801fab8:	f107 0314 	add.w	r3, r7, #20
 801fabc:	4618      	mov	r0, r3
 801fabe:	f003 fd2b 	bl	8023518 <_ZNSaIcEC1Ev>
 801fac2:	f107 0314 	add.w	r3, r7, #20
 801fac6:	461a      	mov	r2, r3
 801fac8:	4629      	mov	r1, r5
 801faca:	4620      	mov	r0, r4
 801facc:	f7e2 f95d 	bl	8001d8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801fad0:	f107 0314 	add.w	r3, r7, #20
 801fad4:	4618      	mov	r0, r3
 801fad6:	f003 fd20 	bl	802351a <_ZNSaIcED1Ev>
 801fada:	6878      	ldr	r0, [r7, #4]
 801fadc:	f000 f8ab 	bl	801fc36 <_ZSt7forwardIPF6SymbolSt6vectorIP10ExpressionSaIS3_EEEEOT_RNSt16remove_referenceIS8_E4typeE>
 801fae0:	4603      	mov	r3, r0
 801fae2:	681a      	ldr	r2, [r3, #0]
 801fae4:	68fb      	ldr	r3, [r7, #12]
 801fae6:	619a      	str	r2, [r3, #24]
 801fae8:	68fb      	ldr	r3, [r7, #12]
 801faea:	4618      	mov	r0, r3
 801faec:	3718      	adds	r7, #24
 801faee:	46bd      	mov	sp, r7
 801faf0:	bdb0      	pop	{r4, r5, r7, pc}

0801faf2 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaIS9_EEESt4lessIS5_ESaISt4pairIKS5_SD_EEE6insertEOSI_>:
      insert(value_type&& __x)
 801faf2:	b590      	push	{r4, r7, lr}
 801faf4:	b085      	sub	sp, #20
 801faf6:	af00      	add	r7, sp, #0
 801faf8:	60f8      	str	r0, [r7, #12]
 801fafa:	60b9      	str	r1, [r7, #8]
 801fafc:	607a      	str	r2, [r7, #4]
      { return _M_t._M_insert_unique(std::move(__x)); }
 801fafe:	68bc      	ldr	r4, [r7, #8]
 801fb00:	6878      	ldr	r0, [r7, #4]
 801fb02:	f000 f8a3 	bl	801fc4c <_ZSt4moveIRSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEONSt16remove_referenceIT_E4typeEOSJ_>
 801fb06:	4602      	mov	r2, r0
 801fb08:	68fb      	ldr	r3, [r7, #12]
 801fb0a:	4621      	mov	r1, r4
 801fb0c:	4618      	mov	r0, r3
 801fb0e:	f000 f8a8 	bl	801fc62 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE16_M_insert_uniqueISG_EES6_ISt17_Rb_tree_iteratorISG_EbEOT_>
 801fb12:	68f8      	ldr	r0, [r7, #12]
 801fb14:	3714      	adds	r7, #20
 801fb16:	46bd      	mov	sp, r7
 801fb18:	bd90      	pop	{r4, r7, pc}

0801fb1a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE13_Rb_tree_implISD_Lb1EEC1Ev>:
	  _Rb_tree_impl()
 801fb1a:	b580      	push	{r7, lr}
 801fb1c:	b082      	sub	sp, #8
 801fb1e:	af00      	add	r7, sp, #0
 801fb20:	6078      	str	r0, [r7, #4]
	  : _Node_allocator()
 801fb22:	6878      	ldr	r0, [r7, #4]
 801fb24:	f000 f8ec 	bl	801fd00 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEC1Ev>
 801fb28:	687b      	ldr	r3, [r7, #4]
 801fb2a:	4618      	mov	r0, r3
 801fb2c:	f7f2 fd73 	bl	8012616 <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>
 801fb30:	687b      	ldr	r3, [r7, #4]
 801fb32:	3304      	adds	r3, #4
 801fb34:	4618      	mov	r0, r3
 801fb36:	f7e1 faa2 	bl	800107e <_ZNSt15_Rb_tree_headerC1Ev>
	  { }
 801fb3a:	687b      	ldr	r3, [r7, #4]
 801fb3c:	4618      	mov	r0, r3
 801fb3e:	3708      	adds	r7, #8
 801fb40:	46bd      	mov	sp, r7
 801fb42:	bd80      	pop	{r7, pc}

0801fb44 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEC1IRA2_KcLb1EEEOT_RKS7_>:
       constexpr pair(_U1&& __x, const _T2& __y)
 801fb44:	b5b0      	push	{r4, r5, r7, lr}
 801fb46:	b086      	sub	sp, #24
 801fb48:	af00      	add	r7, sp, #0
 801fb4a:	60f8      	str	r0, [r7, #12]
 801fb4c:	60b9      	str	r1, [r7, #8]
 801fb4e:	607a      	str	r2, [r7, #4]
       : first(std::forward<_U1>(__x)), second(__y) { }
 801fb50:	68fc      	ldr	r4, [r7, #12]
 801fb52:	68b8      	ldr	r0, [r7, #8]
 801fb54:	f000 f8e0 	bl	801fd18 <_ZSt7forwardIRA2_KcEOT_RNSt16remove_referenceIS3_E4typeE>
 801fb58:	4605      	mov	r5, r0
 801fb5a:	f107 0314 	add.w	r3, r7, #20
 801fb5e:	4618      	mov	r0, r3
 801fb60:	f003 fcda 	bl	8023518 <_ZNSaIcEC1Ev>
 801fb64:	f107 0314 	add.w	r3, r7, #20
 801fb68:	461a      	mov	r2, r3
 801fb6a:	4629      	mov	r1, r5
 801fb6c:	4620      	mov	r0, r4
 801fb6e:	f7e2 f90c 	bl	8001d8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801fb72:	f107 0314 	add.w	r3, r7, #20
 801fb76:	4618      	mov	r0, r3
 801fb78:	f003 fccf 	bl	802351a <_ZNSaIcED1Ev>
 801fb7c:	68fb      	ldr	r3, [r7, #12]
 801fb7e:	3318      	adds	r3, #24
 801fb80:	6879      	ldr	r1, [r7, #4]
 801fb82:	4618      	mov	r0, r3
 801fb84:	f7e1 fc68 	bl	8001458 <_ZN6SymbolC1ERKS_>
 801fb88:	68fb      	ldr	r3, [r7, #12]
 801fb8a:	4618      	mov	r0, r3
 801fb8c:	3718      	adds	r7, #24
 801fb8e:	46bd      	mov	sp, r7
 801fb90:	bdb0      	pop	{r4, r5, r7, pc}

0801fb92 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE6insertEOSB_>:
      insert(value_type&& __x)
 801fb92:	b590      	push	{r4, r7, lr}
 801fb94:	b085      	sub	sp, #20
 801fb96:	af00      	add	r7, sp, #0
 801fb98:	60f8      	str	r0, [r7, #12]
 801fb9a:	60b9      	str	r1, [r7, #8]
 801fb9c:	607a      	str	r2, [r7, #4]
      { return _M_t._M_insert_unique(std::move(__x)); }
 801fb9e:	68bc      	ldr	r4, [r7, #8]
 801fba0:	6878      	ldr	r0, [r7, #4]
 801fba2:	f000 f8c4 	bl	801fd2e <_ZSt4moveIRSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEONSt16remove_referenceIT_E4typeEOSC_>
 801fba6:	4602      	mov	r2, r0
 801fba8:	68fb      	ldr	r3, [r7, #12]
 801fbaa:	4621      	mov	r1, r4
 801fbac:	4618      	mov	r0, r3
 801fbae:	f000 f8c9 	bl	801fd44 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE16_M_insert_uniqueIS9_EES6_ISt17_Rb_tree_iteratorIS9_EbEOT_>
 801fbb2:	68f8      	ldr	r0, [r7, #12]
 801fbb4:	3714      	adds	r7, #20
 801fbb6:	46bd      	mov	sp, r7
 801fbb8:	bd90      	pop	{r4, r7, pc}

0801fbba <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEC1IRA5_KcLb1EEEOT_RKS7_>:
       constexpr pair(_U1&& __x, const _T2& __y)
 801fbba:	b5b0      	push	{r4, r5, r7, lr}
 801fbbc:	b086      	sub	sp, #24
 801fbbe:	af00      	add	r7, sp, #0
 801fbc0:	60f8      	str	r0, [r7, #12]
 801fbc2:	60b9      	str	r1, [r7, #8]
 801fbc4:	607a      	str	r2, [r7, #4]
       : first(std::forward<_U1>(__x)), second(__y) { }
 801fbc6:	68fc      	ldr	r4, [r7, #12]
 801fbc8:	68b8      	ldr	r0, [r7, #8]
 801fbca:	f7e2 f8d3 	bl	8001d74 <_ZSt7forwardIRA5_KcEOT_RNSt16remove_referenceIS3_E4typeE>
 801fbce:	4605      	mov	r5, r0
 801fbd0:	f107 0314 	add.w	r3, r7, #20
 801fbd4:	4618      	mov	r0, r3
 801fbd6:	f003 fc9f 	bl	8023518 <_ZNSaIcEC1Ev>
 801fbda:	f107 0314 	add.w	r3, r7, #20
 801fbde:	461a      	mov	r2, r3
 801fbe0:	4629      	mov	r1, r5
 801fbe2:	4620      	mov	r0, r4
 801fbe4:	f7e2 f8d1 	bl	8001d8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801fbe8:	f107 0314 	add.w	r3, r7, #20
 801fbec:	4618      	mov	r0, r3
 801fbee:	f003 fc94 	bl	802351a <_ZNSaIcED1Ev>
 801fbf2:	68fb      	ldr	r3, [r7, #12]
 801fbf4:	3318      	adds	r3, #24
 801fbf6:	6879      	ldr	r1, [r7, #4]
 801fbf8:	4618      	mov	r0, r3
 801fbfa:	f7e1 fc2d 	bl	8001458 <_ZN6SymbolC1ERKS_>
 801fbfe:	68fb      	ldr	r3, [r7, #12]
 801fc00:	4618      	mov	r0, r3
 801fc02:	3718      	adds	r7, #24
 801fc04:	46bd      	mov	sp, r7
 801fc06:	bdb0      	pop	{r4, r5, r7, pc}

0801fc08 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEEC1Ev>:
 801fc08:	b580      	push	{r7, lr}
 801fc0a:	b082      	sub	sp, #8
 801fc0c:	af00      	add	r7, sp, #0
 801fc0e:	6078      	str	r0, [r7, #4]
 801fc10:	6878      	ldr	r0, [r7, #4]
 801fc12:	f000 f8e6 	bl	801fde2 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISD_EEEEEEC1Ev>
 801fc16:	687b      	ldr	r3, [r7, #4]
 801fc18:	4618      	mov	r0, r3
 801fc1a:	3708      	adds	r7, #8
 801fc1c:	46bd      	mov	sp, r7
 801fc1e:	bd80      	pop	{r7, pc}

0801fc20 <_ZSt7forwardIRA32_KcEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801fc20:	b480      	push	{r7}
 801fc22:	b083      	sub	sp, #12
 801fc24:	af00      	add	r7, sp, #0
 801fc26:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801fc28:	687b      	ldr	r3, [r7, #4]
 801fc2a:	4618      	mov	r0, r3
 801fc2c:	370c      	adds	r7, #12
 801fc2e:	46bd      	mov	sp, r7
 801fc30:	f85d 7b04 	ldr.w	r7, [sp], #4
 801fc34:	4770      	bx	lr

0801fc36 <_ZSt7forwardIPF6SymbolSt6vectorIP10ExpressionSaIS3_EEEEOT_RNSt16remove_referenceIS8_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801fc36:	b480      	push	{r7}
 801fc38:	b083      	sub	sp, #12
 801fc3a:	af00      	add	r7, sp, #0
 801fc3c:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801fc3e:	687b      	ldr	r3, [r7, #4]
 801fc40:	4618      	mov	r0, r3
 801fc42:	370c      	adds	r7, #12
 801fc44:	46bd      	mov	sp, r7
 801fc46:	f85d 7b04 	ldr.w	r7, [sp], #4
 801fc4a:	4770      	bx	lr

0801fc4c <_ZSt4moveIRSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEONSt16remove_referenceIT_E4typeEOSJ_>:
    move(_Tp&& __t) noexcept
 801fc4c:	b480      	push	{r7}
 801fc4e:	b083      	sub	sp, #12
 801fc50:	af00      	add	r7, sp, #0
 801fc52:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 801fc54:	687b      	ldr	r3, [r7, #4]
 801fc56:	4618      	mov	r0, r3
 801fc58:	370c      	adds	r7, #12
 801fc5a:	46bd      	mov	sp, r7
 801fc5c:	f85d 7b04 	ldr.w	r7, [sp], #4
 801fc60:	4770      	bx	lr

0801fc62 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE16_M_insert_uniqueISG_EES6_ISt17_Rb_tree_iteratorISG_EbEOT_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 801fc62:	b5b0      	push	{r4, r5, r7, lr}
 801fc64:	b08e      	sub	sp, #56	; 0x38
 801fc66:	af02      	add	r7, sp, #8
 801fc68:	60f8      	str	r0, [r7, #12]
 801fc6a:	60b9      	str	r1, [r7, #8]
 801fc6c:	607a      	str	r2, [r7, #4]
	= _M_get_insert_unique_pos(_KeyOfValue()(__v));
 801fc6e:	f107 031c 	add.w	r3, r7, #28
 801fc72:	6879      	ldr	r1, [r7, #4]
 801fc74:	4618      	mov	r0, r3
 801fc76:	f000 f944 	bl	801ff02 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEclERSG_>
 801fc7a:	4602      	mov	r2, r0
      pair<_Base_ptr, _Base_ptr> __res
 801fc7c:	f107 0314 	add.w	r3, r7, #20
 801fc80:	68b9      	ldr	r1, [r7, #8]
 801fc82:	4618      	mov	r0, r3
 801fc84:	f000 f8b8 	bl	801fdf8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_>
      if (__res.second)
 801fc88:	69bb      	ldr	r3, [r7, #24]
 801fc8a:	2b00      	cmp	r3, #0
 801fc8c:	d022      	beq.n	801fcd4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE16_M_insert_uniqueISG_EES6_ISt17_Rb_tree_iteratorISG_EbEOT_+0x72>
	  _Alloc_node __an(*this);
 801fc8e:	f107 0310 	add.w	r3, r7, #16
 801fc92:	68b9      	ldr	r1, [r7, #8]
 801fc94:	4618      	mov	r0, r3
 801fc96:	f000 f940 	bl	801ff1a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE11_Alloc_nodeC1ERSM_>
	  return _Res(_M_insert_(__res.first, __res.second,
 801fc9a:	697c      	ldr	r4, [r7, #20]
 801fc9c:	69bd      	ldr	r5, [r7, #24]
 801fc9e:	6878      	ldr	r0, [r7, #4]
 801fca0:	f000 f94a 	bl	801ff38 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEOT_RNSt16remove_referenceISH_E4typeE>
 801fca4:	4602      	mov	r2, r0
 801fca6:	f107 0310 	add.w	r3, r7, #16
 801fcaa:	9300      	str	r3, [sp, #0]
 801fcac:	4613      	mov	r3, r2
 801fcae:	462a      	mov	r2, r5
 801fcb0:	4621      	mov	r1, r4
 801fcb2:	68b8      	ldr	r0, [r7, #8]
 801fcb4:	f000 f94b 	bl	801ff4e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE10_M_insert_ISG_NSM_11_Alloc_nodeEEESt17_Rb_tree_iteratorISG_EPSt18_Rb_tree_node_baseSS_OT_RT0_>
 801fcb8:	4603      	mov	r3, r0
 801fcba:	623b      	str	r3, [r7, #32]
		      true);
 801fcbc:	2301      	movs	r3, #1
 801fcbe:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 801fcc2:	f107 0227 	add.w	r2, r7, #39	; 0x27
 801fcc6:	f107 0320 	add.w	r3, r7, #32
 801fcca:	4619      	mov	r1, r3
 801fccc:	68f8      	ldr	r0, [r7, #12]
 801fcce:	f000 f987 	bl	801ffe0 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEbEC1ISH_bLb1EEEOT_OT0_>
 801fcd2:	e011      	b.n	801fcf8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE16_M_insert_uniqueISG_EES6_ISt17_Rb_tree_iteratorISG_EbEOT_+0x96>
      return _Res(iterator(__res.first), false);
 801fcd4:	697a      	ldr	r2, [r7, #20]
 801fcd6:	f107 0328 	add.w	r3, r7, #40	; 0x28
 801fcda:	4611      	mov	r1, r2
 801fcdc:	4618      	mov	r0, r3
 801fcde:	f7ee fd83 	bl	800e7e8 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEC1EPSt18_Rb_tree_node_base>
 801fce2:	2300      	movs	r3, #0
 801fce4:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
 801fce8:	f107 022f 	add.w	r2, r7, #47	; 0x2f
 801fcec:	f107 0328 	add.w	r3, r7, #40	; 0x28
 801fcf0:	4619      	mov	r1, r3
 801fcf2:	68f8      	ldr	r0, [r7, #12]
 801fcf4:	f000 f974 	bl	801ffe0 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEbEC1ISH_bLb1EEEOT_OT0_>
    }
 801fcf8:	68f8      	ldr	r0, [r7, #12]
 801fcfa:	3730      	adds	r7, #48	; 0x30
 801fcfc:	46bd      	mov	sp, r7
 801fcfe:	bdb0      	pop	{r4, r5, r7, pc}

0801fd00 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEC1Ev>:
 801fd00:	b580      	push	{r7, lr}
 801fd02:	b082      	sub	sp, #8
 801fd04:	af00      	add	r7, sp, #0
 801fd06:	6078      	str	r0, [r7, #4]
 801fd08:	6878      	ldr	r0, [r7, #4]
 801fd0a:	f000 f982 	bl	8020012 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEC1Ev>
 801fd0e:	687b      	ldr	r3, [r7, #4]
 801fd10:	4618      	mov	r0, r3
 801fd12:	3708      	adds	r7, #8
 801fd14:	46bd      	mov	sp, r7
 801fd16:	bd80      	pop	{r7, pc}

0801fd18 <_ZSt7forwardIRA2_KcEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801fd18:	b480      	push	{r7}
 801fd1a:	b083      	sub	sp, #12
 801fd1c:	af00      	add	r7, sp, #0
 801fd1e:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801fd20:	687b      	ldr	r3, [r7, #4]
 801fd22:	4618      	mov	r0, r3
 801fd24:	370c      	adds	r7, #12
 801fd26:	46bd      	mov	sp, r7
 801fd28:	f85d 7b04 	ldr.w	r7, [sp], #4
 801fd2c:	4770      	bx	lr

0801fd2e <_ZSt4moveIRSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEONSt16remove_referenceIT_E4typeEOSC_>:
    move(_Tp&& __t) noexcept
 801fd2e:	b480      	push	{r7}
 801fd30:	b083      	sub	sp, #12
 801fd32:	af00      	add	r7, sp, #0
 801fd34:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 801fd36:	687b      	ldr	r3, [r7, #4]
 801fd38:	4618      	mov	r0, r3
 801fd3a:	370c      	adds	r7, #12
 801fd3c:	46bd      	mov	sp, r7
 801fd3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 801fd42:	4770      	bx	lr

0801fd44 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE16_M_insert_uniqueIS9_EES6_ISt17_Rb_tree_iteratorIS9_EbEOT_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 801fd44:	b5b0      	push	{r4, r5, r7, lr}
 801fd46:	b08e      	sub	sp, #56	; 0x38
 801fd48:	af02      	add	r7, sp, #8
 801fd4a:	60f8      	str	r0, [r7, #12]
 801fd4c:	60b9      	str	r1, [r7, #8]
 801fd4e:	607a      	str	r2, [r7, #4]
	= _M_get_insert_unique_pos(_KeyOfValue()(__v));
 801fd50:	f107 031c 	add.w	r3, r7, #28
 801fd54:	6879      	ldr	r1, [r7, #4]
 801fd56:	4618      	mov	r0, r3
 801fd58:	f000 f966 	bl	8020028 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEclERS9_>
 801fd5c:	4602      	mov	r2, r0
      pair<_Base_ptr, _Base_ptr> __res
 801fd5e:	f107 0314 	add.w	r3, r7, #20
 801fd62:	68b9      	ldr	r1, [r7, #8]
 801fd64:	4618      	mov	r0, r3
 801fd66:	f7fa f9bf 	bl	801a0e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_>
      if (__res.second)
 801fd6a:	69bb      	ldr	r3, [r7, #24]
 801fd6c:	2b00      	cmp	r3, #0
 801fd6e:	d022      	beq.n	801fdb6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE16_M_insert_uniqueIS9_EES6_ISt17_Rb_tree_iteratorIS9_EbEOT_+0x72>
	  _Alloc_node __an(*this);
 801fd70:	f107 0310 	add.w	r3, r7, #16
 801fd74:	68b9      	ldr	r1, [r7, #8]
 801fd76:	4618      	mov	r0, r3
 801fd78:	f000 f962 	bl	8020040 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_Alloc_nodeC1ERSF_>
	  return _Res(_M_insert_(__res.first, __res.second,
 801fd7c:	697c      	ldr	r4, [r7, #20]
 801fd7e:	69bd      	ldr	r5, [r7, #24]
 801fd80:	6878      	ldr	r0, [r7, #4]
 801fd82:	f000 f96c 	bl	802005e <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEOT_RNSt16remove_referenceISA_E4typeE>
 801fd86:	4602      	mov	r2, r0
 801fd88:	f107 0310 	add.w	r3, r7, #16
 801fd8c:	9300      	str	r3, [sp, #0]
 801fd8e:	4613      	mov	r3, r2
 801fd90:	462a      	mov	r2, r5
 801fd92:	4621      	mov	r1, r4
 801fd94:	68b8      	ldr	r0, [r7, #8]
 801fd96:	f000 f96d 	bl	8020074 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE10_M_insert_IS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_EPSt18_Rb_tree_node_baseSL_OT_RT0_>
 801fd9a:	4603      	mov	r3, r0
 801fd9c:	623b      	str	r3, [r7, #32]
		      true);
 801fd9e:	2301      	movs	r3, #1
 801fda0:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 801fda4:	f107 0227 	add.w	r2, r7, #39	; 0x27
 801fda8:	f107 0320 	add.w	r3, r7, #32
 801fdac:	4619      	mov	r1, r3
 801fdae:	68f8      	ldr	r0, [r7, #12]
 801fdb0:	f000 f9a9 	bl	8020106 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEbEC1ISA_bLb1EEEOT_OT0_>
 801fdb4:	e011      	b.n	801fdda <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE16_M_insert_uniqueIS9_EES6_ISt17_Rb_tree_iteratorIS9_EbEOT_+0x96>
      return _Res(iterator(__res.first), false);
 801fdb6:	697a      	ldr	r2, [r7, #20]
 801fdb8:	f107 0328 	add.w	r3, r7, #40	; 0x28
 801fdbc:	4611      	mov	r1, r2
 801fdbe:	4618      	mov	r0, r3
 801fdc0:	f7f9 fee8 	bl	8019b94 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEC1EPSt18_Rb_tree_node_base>
 801fdc4:	2300      	movs	r3, #0
 801fdc6:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
 801fdca:	f107 022f 	add.w	r2, r7, #47	; 0x2f
 801fdce:	f107 0328 	add.w	r3, r7, #40	; 0x28
 801fdd2:	4619      	mov	r1, r3
 801fdd4:	68f8      	ldr	r0, [r7, #12]
 801fdd6:	f000 f996 	bl	8020106 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEbEC1ISA_bLb1EEEOT_OT0_>
    }
 801fdda:	68f8      	ldr	r0, [r7, #12]
 801fddc:	3730      	adds	r7, #48	; 0x30
 801fdde:	46bd      	mov	sp, r7
 801fde0:	bdb0      	pop	{r4, r5, r7, pc}

0801fde2 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISD_EEEEEEC1Ev>:
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 801fde2:	b480      	push	{r7}
 801fde4:	b083      	sub	sp, #12
 801fde6:	af00      	add	r7, sp, #0
 801fde8:	6078      	str	r0, [r7, #4]
 801fdea:	687b      	ldr	r3, [r7, #4]
 801fdec:	4618      	mov	r0, r3
 801fdee:	370c      	adds	r7, #12
 801fdf0:	46bd      	mov	sp, r7
 801fdf2:	f85d 7b04 	ldr.w	r7, [sp], #4
 801fdf6:	4770      	bx	lr

0801fdf8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 801fdf8:	b590      	push	{r4, r7, lr}
 801fdfa:	b08b      	sub	sp, #44	; 0x2c
 801fdfc:	af00      	add	r7, sp, #0
 801fdfe:	60f8      	str	r0, [r7, #12]
 801fe00:	60b9      	str	r1, [r7, #8]
 801fe02:	607a      	str	r2, [r7, #4]
      _Link_type __x = _M_begin();
 801fe04:	68b8      	ldr	r0, [r7, #8]
 801fe06:	f7ee fb17 	bl	800e438 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_M_beginEv>
 801fe0a:	4603      	mov	r3, r0
 801fe0c:	61bb      	str	r3, [r7, #24]
      _Base_ptr __y = _M_end();
 801fe0e:	68b8      	ldr	r0, [r7, #8]
 801fe10:	f7ee fc8d 	bl	800e72e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE6_M_endEv>
 801fe14:	4603      	mov	r3, r0
 801fe16:	617b      	str	r3, [r7, #20]
      bool __comp = true;
 801fe18:	2301      	movs	r3, #1
 801fe1a:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
      while (__x != 0)
 801fe1e:	69bb      	ldr	r3, [r7, #24]
 801fe20:	2b00      	cmp	r3, #0
 801fe22:	d020      	beq.n	801fe66 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0x6e>
	  __y = __x;
 801fe24:	69bb      	ldr	r3, [r7, #24]
 801fe26:	617b      	str	r3, [r7, #20]
	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
 801fe28:	68bc      	ldr	r4, [r7, #8]
 801fe2a:	69bb      	ldr	r3, [r7, #24]
 801fe2c:	4618      	mov	r0, r3
 801fe2e:	f7ee fda4 	bl	800e97a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE6_S_keyEPKSt13_Rb_tree_nodeISG_E>
 801fe32:	4603      	mov	r3, r0
 801fe34:	461a      	mov	r2, r3
 801fe36:	6879      	ldr	r1, [r7, #4]
 801fe38:	4620      	mov	r0, r4
 801fe3a:	f7e6 fe48 	bl	8006ace <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 801fe3e:	4603      	mov	r3, r0
 801fe40:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
	  __x = __comp ? _S_left(__x) : _S_right(__x);
 801fe44:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 801fe48:	2b00      	cmp	r3, #0
 801fe4a:	d005      	beq.n	801fe58 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0x60>
 801fe4c:	69bb      	ldr	r3, [r7, #24]
 801fe4e:	4618      	mov	r0, r3
 801fe50:	f7ee fc50 	bl	800e6f4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE7_S_leftEPSt18_Rb_tree_node_base>
 801fe54:	4603      	mov	r3, r0
 801fe56:	e004      	b.n	801fe62 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0x6a>
 801fe58:	69bb      	ldr	r3, [r7, #24]
 801fe5a:	4618      	mov	r0, r3
 801fe5c:	f7ee fc3e 	bl	800e6dc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_S_rightEPSt18_Rb_tree_node_base>
 801fe60:	4603      	mov	r3, r0
 801fe62:	61bb      	str	r3, [r7, #24]
      while (__x != 0)
 801fe64:	e7db      	b.n	801fe1e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0x26>
      iterator __j = iterator(__y);
 801fe66:	697a      	ldr	r2, [r7, #20]
 801fe68:	f107 0310 	add.w	r3, r7, #16
 801fe6c:	4611      	mov	r1, r2
 801fe6e:	4618      	mov	r0, r3
 801fe70:	f7ee fcba 	bl	800e7e8 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEC1EPSt18_Rb_tree_node_base>
      if (__comp)
 801fe74:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 801fe78:	2b00      	cmp	r3, #0
 801fe7a:	d01d      	beq.n	801feb8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0xc0>
	  if (__j == begin())
 801fe7c:	68b8      	ldr	r0, [r7, #8]
 801fe7e:	f000 f95b 	bl	8020138 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE5beginEv>
 801fe82:	4603      	mov	r3, r0
 801fe84:	61fb      	str	r3, [r7, #28]
 801fe86:	f107 021c 	add.w	r2, r7, #28
 801fe8a:	f107 0310 	add.w	r3, r7, #16
 801fe8e:	4611      	mov	r1, r2
 801fe90:	4618      	mov	r0, r3
 801fe92:	f7ee fc89 	bl	800e7a8 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEESJ_>
 801fe96:	4603      	mov	r3, r0
 801fe98:	2b00      	cmp	r3, #0
 801fe9a:	d008      	beq.n	801feae <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0xb6>
	    return _Res(__x, __y);
 801fe9c:	f107 0214 	add.w	r2, r7, #20
 801fea0:	f107 0318 	add.w	r3, r7, #24
 801fea4:	4619      	mov	r1, r3
 801fea6:	68f8      	ldr	r0, [r7, #12]
 801fea8:	f000 f957 	bl	802015a <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISF_EEEEERS1_Lb1EEEOT_OT0_>
 801feac:	e025      	b.n	801fefa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0x102>
	    --__j;
 801feae:	f107 0310 	add.w	r3, r7, #16
 801feb2:	4618      	mov	r0, r3
 801feb4:	f000 f96a 	bl	802018c <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEmmEv>
      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
 801feb8:	68bc      	ldr	r4, [r7, #8]
 801feba:	693b      	ldr	r3, [r7, #16]
 801febc:	4618      	mov	r0, r3
 801febe:	f7ee fc87 	bl	800e7d0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE6_S_keyEPKSt18_Rb_tree_node_base>
 801fec2:	4603      	mov	r3, r0
 801fec4:	687a      	ldr	r2, [r7, #4]
 801fec6:	4619      	mov	r1, r3
 801fec8:	4620      	mov	r0, r4
 801feca:	f7e6 fe00 	bl	8006ace <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 801fece:	4603      	mov	r3, r0
 801fed0:	2b00      	cmp	r3, #0
 801fed2:	d008      	beq.n	801fee6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0xee>
	return _Res(__x, __y);
 801fed4:	f107 0214 	add.w	r2, r7, #20
 801fed8:	f107 0318 	add.w	r3, r7, #24
 801fedc:	4619      	mov	r1, r3
 801fede:	68f8      	ldr	r0, [r7, #12]
 801fee0:	f000 f93b 	bl	802015a <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISF_EEEEERS1_Lb1EEEOT_OT0_>
 801fee4:	e009      	b.n	801fefa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0x102>
      return _Res(__j._M_node, 0);
 801fee6:	2300      	movs	r3, #0
 801fee8:	623b      	str	r3, [r7, #32]
 801feea:	f107 0220 	add.w	r2, r7, #32
 801feee:	f107 0310 	add.w	r3, r7, #16
 801fef2:	4619      	mov	r1, r3
 801fef4:	68f8      	ldr	r0, [r7, #12]
 801fef6:	f7e6 fd4c 	bl	8006992 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_>
    }
 801fefa:	68f8      	ldr	r0, [r7, #12]
 801fefc:	372c      	adds	r7, #44	; 0x2c
 801fefe:	46bd      	mov	sp, r7
 801ff00:	bd90      	pop	{r4, r7, pc}

0801ff02 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEclERSG_>:
      operator()(_Pair& __x) const
 801ff02:	b480      	push	{r7}
 801ff04:	b083      	sub	sp, #12
 801ff06:	af00      	add	r7, sp, #0
 801ff08:	6078      	str	r0, [r7, #4]
 801ff0a:	6039      	str	r1, [r7, #0]
      { return __x.first; }
 801ff0c:	683b      	ldr	r3, [r7, #0]
 801ff0e:	4618      	mov	r0, r3
 801ff10:	370c      	adds	r7, #12
 801ff12:	46bd      	mov	sp, r7
 801ff14:	f85d 7b04 	ldr.w	r7, [sp], #4
 801ff18:	4770      	bx	lr

0801ff1a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE11_Alloc_nodeC1ERSM_>:
	_Alloc_node(_Rb_tree& __t)
 801ff1a:	b480      	push	{r7}
 801ff1c:	b083      	sub	sp, #12
 801ff1e:	af00      	add	r7, sp, #0
 801ff20:	6078      	str	r0, [r7, #4]
 801ff22:	6039      	str	r1, [r7, #0]
	: _M_t(__t) { }
 801ff24:	687b      	ldr	r3, [r7, #4]
 801ff26:	683a      	ldr	r2, [r7, #0]
 801ff28:	601a      	str	r2, [r3, #0]
 801ff2a:	687b      	ldr	r3, [r7, #4]
 801ff2c:	4618      	mov	r0, r3
 801ff2e:	370c      	adds	r7, #12
 801ff30:	46bd      	mov	sp, r7
 801ff32:	f85d 7b04 	ldr.w	r7, [sp], #4
 801ff36:	4770      	bx	lr

0801ff38 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEOT_RNSt16remove_referenceISH_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801ff38:	b480      	push	{r7}
 801ff3a:	b083      	sub	sp, #12
 801ff3c:	af00      	add	r7, sp, #0
 801ff3e:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801ff40:	687b      	ldr	r3, [r7, #4]
 801ff42:	4618      	mov	r0, r3
 801ff44:	370c      	adds	r7, #12
 801ff46:	46bd      	mov	sp, r7
 801ff48:	f85d 7b04 	ldr.w	r7, [sp], #4
 801ff4c:	4770      	bx	lr

0801ff4e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE10_M_insert_ISG_NSM_11_Alloc_nodeEEESt17_Rb_tree_iteratorISG_EPSt18_Rb_tree_node_baseSS_OT_RT0_>:
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 801ff4e:	b5b0      	push	{r4, r5, r7, lr}
 801ff50:	b088      	sub	sp, #32
 801ff52:	af00      	add	r7, sp, #0
 801ff54:	60f8      	str	r0, [r7, #12]
 801ff56:	60b9      	str	r1, [r7, #8]
 801ff58:	607a      	str	r2, [r7, #4]
 801ff5a:	603b      	str	r3, [r7, #0]
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
 801ff5c:	68bb      	ldr	r3, [r7, #8]
 801ff5e:	2b00      	cmp	r3, #0
 801ff60:	d11a      	bne.n	801ff98 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE10_M_insert_ISG_NSM_11_Alloc_nodeEEESt17_Rb_tree_iteratorISG_EPSt18_Rb_tree_node_baseSS_OT_RT0_+0x4a>
	bool __insert_left = (__x != 0 || __p == _M_end()
 801ff62:	68f8      	ldr	r0, [r7, #12]
 801ff64:	f7ee fbe3 	bl	800e72e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE6_M_endEv>
 801ff68:	4602      	mov	r2, r0
 801ff6a:	687b      	ldr	r3, [r7, #4]
 801ff6c:	4293      	cmp	r3, r2
 801ff6e:	d013      	beq.n	801ff98 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE10_M_insert_ISG_NSM_11_Alloc_nodeEEESt17_Rb_tree_iteratorISG_EPSt18_Rb_tree_node_baseSS_OT_RT0_+0x4a>
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
 801ff70:	68fc      	ldr	r4, [r7, #12]
 801ff72:	f107 0310 	add.w	r3, r7, #16
 801ff76:	6839      	ldr	r1, [r7, #0]
 801ff78:	4618      	mov	r0, r3
 801ff7a:	f7ff ffc2 	bl	801ff02 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEclERSG_>
 801ff7e:	4605      	mov	r5, r0
 801ff80:	6878      	ldr	r0, [r7, #4]
 801ff82:	f7ee fc25 	bl	800e7d0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE6_S_keyEPKSt18_Rb_tree_node_base>
 801ff86:	4603      	mov	r3, r0
 801ff88:	461a      	mov	r2, r3
 801ff8a:	4629      	mov	r1, r5
 801ff8c:	4620      	mov	r0, r4
 801ff8e:	f7e6 fd9e 	bl	8006ace <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 801ff92:	4603      	mov	r3, r0
 801ff94:	2b00      	cmp	r3, #0
 801ff96:	d001      	beq.n	801ff9c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE10_M_insert_ISG_NSM_11_Alloc_nodeEEESt17_Rb_tree_iteratorISG_EPSt18_Rb_tree_node_baseSS_OT_RT0_+0x4e>
 801ff98:	2301      	movs	r3, #1
 801ff9a:	e000      	b.n	801ff9e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE10_M_insert_ISG_NSM_11_Alloc_nodeEEESt17_Rb_tree_iteratorISG_EPSt18_Rb_tree_node_baseSS_OT_RT0_+0x50>
 801ff9c:	2300      	movs	r3, #0
	bool __insert_left = (__x != 0 || __p == _M_end()
 801ff9e:	77fb      	strb	r3, [r7, #31]
	_Link_type __z = __node_gen(_GLIBCXX_FORWARD(_Arg, __v));
 801ffa0:	6838      	ldr	r0, [r7, #0]
 801ffa2:	f7ff ffc9 	bl	801ff38 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEOT_RNSt16remove_referenceISH_E4typeE>
 801ffa6:	4603      	mov	r3, r0
 801ffa8:	4619      	mov	r1, r3
 801ffaa:	6b38      	ldr	r0, [r7, #48]	; 0x30
 801ffac:	f000 f8ff 	bl	80201ae <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE11_Alloc_nodeclISG_EEPSt13_Rb_tree_nodeISG_EOT_>
 801ffb0:	61b8      	str	r0, [r7, #24]
				      this->_M_impl._M_header);
 801ffb2:	68fb      	ldr	r3, [r7, #12]
 801ffb4:	3304      	adds	r3, #4
	_Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
 801ffb6:	7ff8      	ldrb	r0, [r7, #31]
 801ffb8:	687a      	ldr	r2, [r7, #4]
 801ffba:	69b9      	ldr	r1, [r7, #24]
 801ffbc:	f003 fb04 	bl	80235c8 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
	++_M_impl._M_node_count;
 801ffc0:	68fb      	ldr	r3, [r7, #12]
 801ffc2:	695b      	ldr	r3, [r3, #20]
 801ffc4:	1c5a      	adds	r2, r3, #1
 801ffc6:	68fb      	ldr	r3, [r7, #12]
 801ffc8:	615a      	str	r2, [r3, #20]
	return iterator(__z);
 801ffca:	f107 0314 	add.w	r3, r7, #20
 801ffce:	69b9      	ldr	r1, [r7, #24]
 801ffd0:	4618      	mov	r0, r3
 801ffd2:	f7ee fc09 	bl	800e7e8 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEC1EPSt18_Rb_tree_node_base>
 801ffd6:	697b      	ldr	r3, [r7, #20]
      }
 801ffd8:	4618      	mov	r0, r3
 801ffda:	3720      	adds	r7, #32
 801ffdc:	46bd      	mov	sp, r7
 801ffde:	bdb0      	pop	{r4, r5, r7, pc}

0801ffe0 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEbEC1ISH_bLb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 801ffe0:	b580      	push	{r7, lr}
 801ffe2:	b084      	sub	sp, #16
 801ffe4:	af00      	add	r7, sp, #0
 801ffe6:	60f8      	str	r0, [r7, #12]
 801ffe8:	60b9      	str	r1, [r7, #8]
 801ffea:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 801ffec:	68b8      	ldr	r0, [r7, #8]
 801ffee:	f000 f8f2 	bl	80201d6 <_ZSt7forwardISt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEEEOT_RNSt16remove_referenceISJ_E4typeE>
 801fff2:	4602      	mov	r2, r0
 801fff4:	68fb      	ldr	r3, [r7, #12]
 801fff6:	6812      	ldr	r2, [r2, #0]
 801fff8:	601a      	str	r2, [r3, #0]
 801fffa:	6878      	ldr	r0, [r7, #4]
 801fffc:	f7e7 fe54 	bl	8007ca8 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
 8020000:	4603      	mov	r3, r0
 8020002:	781a      	ldrb	r2, [r3, #0]
 8020004:	68fb      	ldr	r3, [r7, #12]
 8020006:	711a      	strb	r2, [r3, #4]
 8020008:	68fb      	ldr	r3, [r7, #12]
 802000a:	4618      	mov	r0, r3
 802000c:	3710      	adds	r7, #16
 802000e:	46bd      	mov	sp, r7
 8020010:	bd80      	pop	{r7, pc}

08020012 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEC1Ev>:
 8020012:	b480      	push	{r7}
 8020014:	b083      	sub	sp, #12
 8020016:	af00      	add	r7, sp, #0
 8020018:	6078      	str	r0, [r7, #4]
 802001a:	687b      	ldr	r3, [r7, #4]
 802001c:	4618      	mov	r0, r3
 802001e:	370c      	adds	r7, #12
 8020020:	46bd      	mov	sp, r7
 8020022:	f85d 7b04 	ldr.w	r7, [sp], #4
 8020026:	4770      	bx	lr

08020028 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEclERS9_>:
      operator()(_Pair& __x) const
 8020028:	b480      	push	{r7}
 802002a:	b083      	sub	sp, #12
 802002c:	af00      	add	r7, sp, #0
 802002e:	6078      	str	r0, [r7, #4]
 8020030:	6039      	str	r1, [r7, #0]
      { return __x.first; }
 8020032:	683b      	ldr	r3, [r7, #0]
 8020034:	4618      	mov	r0, r3
 8020036:	370c      	adds	r7, #12
 8020038:	46bd      	mov	sp, r7
 802003a:	f85d 7b04 	ldr.w	r7, [sp], #4
 802003e:	4770      	bx	lr

08020040 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_Alloc_nodeC1ERSF_>:
	_Alloc_node(_Rb_tree& __t)
 8020040:	b480      	push	{r7}
 8020042:	b083      	sub	sp, #12
 8020044:	af00      	add	r7, sp, #0
 8020046:	6078      	str	r0, [r7, #4]
 8020048:	6039      	str	r1, [r7, #0]
	: _M_t(__t) { }
 802004a:	687b      	ldr	r3, [r7, #4]
 802004c:	683a      	ldr	r2, [r7, #0]
 802004e:	601a      	str	r2, [r3, #0]
 8020050:	687b      	ldr	r3, [r7, #4]
 8020052:	4618      	mov	r0, r3
 8020054:	370c      	adds	r7, #12
 8020056:	46bd      	mov	sp, r7
 8020058:	f85d 7b04 	ldr.w	r7, [sp], #4
 802005c:	4770      	bx	lr

0802005e <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEOT_RNSt16remove_referenceISA_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 802005e:	b480      	push	{r7}
 8020060:	b083      	sub	sp, #12
 8020062:	af00      	add	r7, sp, #0
 8020064:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8020066:	687b      	ldr	r3, [r7, #4]
 8020068:	4618      	mov	r0, r3
 802006a:	370c      	adds	r7, #12
 802006c:	46bd      	mov	sp, r7
 802006e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8020072:	4770      	bx	lr

08020074 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE10_M_insert_IS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_EPSt18_Rb_tree_node_baseSL_OT_RT0_>:
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8020074:	b5b0      	push	{r4, r5, r7, lr}
 8020076:	b088      	sub	sp, #32
 8020078:	af00      	add	r7, sp, #0
 802007a:	60f8      	str	r0, [r7, #12]
 802007c:	60b9      	str	r1, [r7, #8]
 802007e:	607a      	str	r2, [r7, #4]
 8020080:	603b      	str	r3, [r7, #0]
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
 8020082:	68bb      	ldr	r3, [r7, #8]
 8020084:	2b00      	cmp	r3, #0
 8020086:	d11a      	bne.n	80200be <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE10_M_insert_IS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_EPSt18_Rb_tree_node_baseSL_OT_RT0_+0x4a>
	bool __insert_left = (__x != 0 || __p == _M_end()
 8020088:	68f8      	ldr	r0, [r7, #12]
 802008a:	f7f9 fd3a 	bl	8019b02 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_M_endEv>
 802008e:	4602      	mov	r2, r0
 8020090:	687b      	ldr	r3, [r7, #4]
 8020092:	4293      	cmp	r3, r2
 8020094:	d013      	beq.n	80200be <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE10_M_insert_IS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_EPSt18_Rb_tree_node_baseSL_OT_RT0_+0x4a>
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
 8020096:	68fc      	ldr	r4, [r7, #12]
 8020098:	f107 0310 	add.w	r3, r7, #16
 802009c:	6839      	ldr	r1, [r7, #0]
 802009e:	4618      	mov	r0, r3
 80200a0:	f7ff ffc2 	bl	8020028 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEclERS9_>
 80200a4:	4605      	mov	r5, r0
 80200a6:	6878      	ldr	r0, [r7, #4]
 80200a8:	f7f9 fd68 	bl	8019b7c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 80200ac:	4603      	mov	r3, r0
 80200ae:	461a      	mov	r2, r3
 80200b0:	4629      	mov	r1, r5
 80200b2:	4620      	mov	r0, r4
 80200b4:	f7e6 fd0b 	bl	8006ace <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 80200b8:	4603      	mov	r3, r0
 80200ba:	2b00      	cmp	r3, #0
 80200bc:	d001      	beq.n	80200c2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE10_M_insert_IS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_EPSt18_Rb_tree_node_baseSL_OT_RT0_+0x4e>
 80200be:	2301      	movs	r3, #1
 80200c0:	e000      	b.n	80200c4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE10_M_insert_IS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_EPSt18_Rb_tree_node_baseSL_OT_RT0_+0x50>
 80200c2:	2300      	movs	r3, #0
	bool __insert_left = (__x != 0 || __p == _M_end()
 80200c4:	77fb      	strb	r3, [r7, #31]
	_Link_type __z = __node_gen(_GLIBCXX_FORWARD(_Arg, __v));
 80200c6:	6838      	ldr	r0, [r7, #0]
 80200c8:	f7ff ffc9 	bl	802005e <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEOT_RNSt16remove_referenceISA_E4typeE>
 80200cc:	4603      	mov	r3, r0
 80200ce:	4619      	mov	r1, r3
 80200d0:	6b38      	ldr	r0, [r7, #48]	; 0x30
 80200d2:	f000 f88b 	bl	80201ec <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_Alloc_nodeclIS9_EEPSt13_Rb_tree_nodeIS9_EOT_>
 80200d6:	61b8      	str	r0, [r7, #24]
				      this->_M_impl._M_header);
 80200d8:	68fb      	ldr	r3, [r7, #12]
 80200da:	3304      	adds	r3, #4
	_Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
 80200dc:	7ff8      	ldrb	r0, [r7, #31]
 80200de:	687a      	ldr	r2, [r7, #4]
 80200e0:	69b9      	ldr	r1, [r7, #24]
 80200e2:	f003 fa71 	bl	80235c8 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
	++_M_impl._M_node_count;
 80200e6:	68fb      	ldr	r3, [r7, #12]
 80200e8:	695b      	ldr	r3, [r3, #20]
 80200ea:	1c5a      	adds	r2, r3, #1
 80200ec:	68fb      	ldr	r3, [r7, #12]
 80200ee:	615a      	str	r2, [r3, #20]
	return iterator(__z);
 80200f0:	f107 0314 	add.w	r3, r7, #20
 80200f4:	69b9      	ldr	r1, [r7, #24]
 80200f6:	4618      	mov	r0, r3
 80200f8:	f7f9 fd4c 	bl	8019b94 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEC1EPSt18_Rb_tree_node_base>
 80200fc:	697b      	ldr	r3, [r7, #20]
      }
 80200fe:	4618      	mov	r0, r3
 8020100:	3720      	adds	r7, #32
 8020102:	46bd      	mov	sp, r7
 8020104:	bdb0      	pop	{r4, r5, r7, pc}

08020106 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEbEC1ISA_bLb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 8020106:	b580      	push	{r7, lr}
 8020108:	b084      	sub	sp, #16
 802010a:	af00      	add	r7, sp, #0
 802010c:	60f8      	str	r0, [r7, #12]
 802010e:	60b9      	str	r1, [r7, #8]
 8020110:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 8020112:	68b8      	ldr	r0, [r7, #8]
 8020114:	f000 f87e 	bl	8020214 <_ZSt7forwardISt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEOT_RNSt16remove_referenceISC_E4typeE>
 8020118:	4602      	mov	r2, r0
 802011a:	68fb      	ldr	r3, [r7, #12]
 802011c:	6812      	ldr	r2, [r2, #0]
 802011e:	601a      	str	r2, [r3, #0]
 8020120:	6878      	ldr	r0, [r7, #4]
 8020122:	f7e7 fdc1 	bl	8007ca8 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
 8020126:	4603      	mov	r3, r0
 8020128:	781a      	ldrb	r2, [r3, #0]
 802012a:	68fb      	ldr	r3, [r7, #12]
 802012c:	711a      	strb	r2, [r3, #4]
 802012e:	68fb      	ldr	r3, [r7, #12]
 8020130:	4618      	mov	r0, r3
 8020132:	3710      	adds	r7, #16
 8020134:	46bd      	mov	sp, r7
 8020136:	bd80      	pop	{r7, pc}

08020138 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 8020138:	b580      	push	{r7, lr}
 802013a:	b084      	sub	sp, #16
 802013c:	af00      	add	r7, sp, #0
 802013e:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_header._M_left); }
 8020140:	687b      	ldr	r3, [r7, #4]
 8020142:	68da      	ldr	r2, [r3, #12]
 8020144:	f107 030c 	add.w	r3, r7, #12
 8020148:	4611      	mov	r1, r2
 802014a:	4618      	mov	r0, r3
 802014c:	f7ee fb4c 	bl	800e7e8 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEC1EPSt18_Rb_tree_node_base>
 8020150:	68fb      	ldr	r3, [r7, #12]
 8020152:	4618      	mov	r0, r3
 8020154:	3710      	adds	r7, #16
 8020156:	46bd      	mov	sp, r7
 8020158:	bd80      	pop	{r7, pc}

0802015a <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISF_EEEEERS1_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 802015a:	b580      	push	{r7, lr}
 802015c:	b084      	sub	sp, #16
 802015e:	af00      	add	r7, sp, #0
 8020160:	60f8      	str	r0, [r7, #12]
 8020162:	60b9      	str	r1, [r7, #8]
 8020164:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 8020166:	68b8      	ldr	r0, [r7, #8]
 8020168:	f000 f85f 	bl	802022a <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEEEOT_RNSt16remove_referenceISL_E4typeE>
 802016c:	4603      	mov	r3, r0
 802016e:	681a      	ldr	r2, [r3, #0]
 8020170:	68fb      	ldr	r3, [r7, #12]
 8020172:	601a      	str	r2, [r3, #0]
 8020174:	6878      	ldr	r0, [r7, #4]
 8020176:	f7e7 fa74 	bl	8007662 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
 802017a:	4603      	mov	r3, r0
 802017c:	681a      	ldr	r2, [r3, #0]
 802017e:	68fb      	ldr	r3, [r7, #12]
 8020180:	605a      	str	r2, [r3, #4]
 8020182:	68fb      	ldr	r3, [r7, #12]
 8020184:	4618      	mov	r0, r3
 8020186:	3710      	adds	r7, #16
 8020188:	46bd      	mov	sp, r7
 802018a:	bd80      	pop	{r7, pc}

0802018c <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEmmEv>:
      operator--() _GLIBCXX_NOEXCEPT
 802018c:	b580      	push	{r7, lr}
 802018e:	b082      	sub	sp, #8
 8020190:	af00      	add	r7, sp, #0
 8020192:	6078      	str	r0, [r7, #4]
	_M_node = _Rb_tree_decrement(_M_node);
 8020194:	687b      	ldr	r3, [r7, #4]
 8020196:	681b      	ldr	r3, [r3, #0]
 8020198:	4618      	mov	r0, r3
 802019a:	f003 fa13 	bl	80235c4 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 802019e:	4602      	mov	r2, r0
 80201a0:	687b      	ldr	r3, [r7, #4]
 80201a2:	601a      	str	r2, [r3, #0]
	return *this;
 80201a4:	687b      	ldr	r3, [r7, #4]
      }
 80201a6:	4618      	mov	r0, r3
 80201a8:	3708      	adds	r7, #8
 80201aa:	46bd      	mov	sp, r7
 80201ac:	bd80      	pop	{r7, pc}

080201ae <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE11_Alloc_nodeclISG_EEPSt13_Rb_tree_nodeISG_EOT_>:
	  operator()(_Arg&& __arg) const
 80201ae:	b590      	push	{r4, r7, lr}
 80201b0:	b083      	sub	sp, #12
 80201b2:	af00      	add	r7, sp, #0
 80201b4:	6078      	str	r0, [r7, #4]
 80201b6:	6039      	str	r1, [r7, #0]
	  { return _M_t._M_create_node(_GLIBCXX_FORWARD(_Arg, __arg)); }
 80201b8:	687b      	ldr	r3, [r7, #4]
 80201ba:	681c      	ldr	r4, [r3, #0]
 80201bc:	6838      	ldr	r0, [r7, #0]
 80201be:	f7ff febb 	bl	801ff38 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEOT_RNSt16remove_referenceISH_E4typeE>
 80201c2:	4603      	mov	r3, r0
 80201c4:	4619      	mov	r1, r3
 80201c6:	4620      	mov	r0, r4
 80201c8:	f000 f83a 	bl	8020240 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE14_M_create_nodeIJSG_EEEPSt13_Rb_tree_nodeISG_EDpOT_>
 80201cc:	4603      	mov	r3, r0
 80201ce:	4618      	mov	r0, r3
 80201d0:	370c      	adds	r7, #12
 80201d2:	46bd      	mov	sp, r7
 80201d4:	bd90      	pop	{r4, r7, pc}

080201d6 <_ZSt7forwardISt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEEEOT_RNSt16remove_referenceISJ_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80201d6:	b480      	push	{r7}
 80201d8:	b083      	sub	sp, #12
 80201da:	af00      	add	r7, sp, #0
 80201dc:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80201de:	687b      	ldr	r3, [r7, #4]
 80201e0:	4618      	mov	r0, r3
 80201e2:	370c      	adds	r7, #12
 80201e4:	46bd      	mov	sp, r7
 80201e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80201ea:	4770      	bx	lr

080201ec <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_Alloc_nodeclIS9_EEPSt13_Rb_tree_nodeIS9_EOT_>:
	  operator()(_Arg&& __arg) const
 80201ec:	b590      	push	{r4, r7, lr}
 80201ee:	b083      	sub	sp, #12
 80201f0:	af00      	add	r7, sp, #0
 80201f2:	6078      	str	r0, [r7, #4]
 80201f4:	6039      	str	r1, [r7, #0]
	  { return _M_t._M_create_node(_GLIBCXX_FORWARD(_Arg, __arg)); }
 80201f6:	687b      	ldr	r3, [r7, #4]
 80201f8:	681c      	ldr	r4, [r3, #0]
 80201fa:	6838      	ldr	r0, [r7, #0]
 80201fc:	f7ff ff2f 	bl	802005e <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEOT_RNSt16remove_referenceISA_E4typeE>
 8020200:	4603      	mov	r3, r0
 8020202:	4619      	mov	r1, r3
 8020204:	4620      	mov	r0, r4
 8020206:	f000 f832 	bl	802026e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_create_nodeIJS9_EEEPSt13_Rb_tree_nodeIS9_EDpOT_>
 802020a:	4603      	mov	r3, r0
 802020c:	4618      	mov	r0, r3
 802020e:	370c      	adds	r7, #12
 8020210:	46bd      	mov	sp, r7
 8020212:	bd90      	pop	{r4, r7, pc}

08020214 <_ZSt7forwardISt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEOT_RNSt16remove_referenceISC_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8020214:	b480      	push	{r7}
 8020216:	b083      	sub	sp, #12
 8020218:	af00      	add	r7, sp, #0
 802021a:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 802021c:	687b      	ldr	r3, [r7, #4]
 802021e:	4618      	mov	r0, r3
 8020220:	370c      	adds	r7, #12
 8020222:	46bd      	mov	sp, r7
 8020224:	f85d 7b04 	ldr.w	r7, [sp], #4
 8020228:	4770      	bx	lr

0802022a <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEEEOT_RNSt16remove_referenceISL_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 802022a:	b480      	push	{r7}
 802022c:	b083      	sub	sp, #12
 802022e:	af00      	add	r7, sp, #0
 8020230:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8020232:	687b      	ldr	r3, [r7, #4]
 8020234:	4618      	mov	r0, r3
 8020236:	370c      	adds	r7, #12
 8020238:	46bd      	mov	sp, r7
 802023a:	f85d 7b04 	ldr.w	r7, [sp], #4
 802023e:	4770      	bx	lr

08020240 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE14_M_create_nodeIJSG_EEEPSt13_Rb_tree_nodeISG_EDpOT_>:
	_M_create_node(_Args&&... __args)
 8020240:	b580      	push	{r7, lr}
 8020242:	b084      	sub	sp, #16
 8020244:	af00      	add	r7, sp, #0
 8020246:	6078      	str	r0, [r7, #4]
 8020248:	6039      	str	r1, [r7, #0]
	  _Link_type __tmp = _M_get_node();
 802024a:	6878      	ldr	r0, [r7, #4]
 802024c:	f000 f826 	bl	802029c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE11_M_get_nodeEv>
 8020250:	60f8      	str	r0, [r7, #12]
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
 8020252:	6838      	ldr	r0, [r7, #0]
 8020254:	f7ff fe70 	bl	801ff38 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEOT_RNSt16remove_referenceISH_E4typeE>
 8020258:	4603      	mov	r3, r0
 802025a:	461a      	mov	r2, r3
 802025c:	68f9      	ldr	r1, [r7, #12]
 802025e:	6878      	ldr	r0, [r7, #4]
 8020260:	f000 f82d 	bl	80202be <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE17_M_construct_nodeIJSG_EEEvPSt13_Rb_tree_nodeISG_EDpOT_>
	  return __tmp;
 8020264:	68fb      	ldr	r3, [r7, #12]
	}
 8020266:	4618      	mov	r0, r3
 8020268:	3710      	adds	r7, #16
 802026a:	46bd      	mov	sp, r7
 802026c:	bd80      	pop	{r7, pc}

0802026e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_create_nodeIJS9_EEEPSt13_Rb_tree_nodeIS9_EDpOT_>:
	_M_create_node(_Args&&... __args)
 802026e:	b580      	push	{r7, lr}
 8020270:	b084      	sub	sp, #16
 8020272:	af00      	add	r7, sp, #0
 8020274:	6078      	str	r0, [r7, #4]
 8020276:	6039      	str	r1, [r7, #0]
	  _Link_type __tmp = _M_get_node();
 8020278:	6878      	ldr	r0, [r7, #4]
 802027a:	f7f9 fece 	bl	801a01a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_get_nodeEv>
 802027e:	60f8      	str	r0, [r7, #12]
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
 8020280:	6838      	ldr	r0, [r7, #0]
 8020282:	f7ff feec 	bl	802005e <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEOT_RNSt16remove_referenceISA_E4typeE>
 8020286:	4603      	mov	r3, r0
 8020288:	461a      	mov	r2, r3
 802028a:	68f9      	ldr	r1, [r7, #12]
 802028c:	6878      	ldr	r0, [r7, #4]
 802028e:	f000 f836 	bl	80202fe <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE17_M_construct_nodeIJS9_EEEvPSt13_Rb_tree_nodeIS9_EDpOT_>
	  return __tmp;
 8020292:	68fb      	ldr	r3, [r7, #12]
	}
 8020294:	4618      	mov	r0, r3
 8020296:	3710      	adds	r7, #16
 8020298:	46bd      	mov	sp, r7
 802029a:	bd80      	pop	{r7, pc}

0802029c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE11_M_get_nodeEv>:
      _M_get_node()
 802029c:	b580      	push	{r7, lr}
 802029e:	b082      	sub	sp, #8
 80202a0:	af00      	add	r7, sp, #0
 80202a2:	6078      	str	r0, [r7, #4]
      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
 80202a4:	6878      	ldr	r0, [r7, #4]
 80202a6:	f7ee fbe6 	bl	800ea76 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE21_M_get_Node_allocatorEv>
 80202aa:	4603      	mov	r3, r0
 80202ac:	2101      	movs	r1, #1
 80202ae:	4618      	mov	r0, r3
 80202b0:	f000 f845 	bl	802033e <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEEEE8allocateERSJ_j>
 80202b4:	4603      	mov	r3, r0
 80202b6:	4618      	mov	r0, r3
 80202b8:	3708      	adds	r7, #8
 80202ba:	46bd      	mov	sp, r7
 80202bc:	bd80      	pop	{r7, pc}

080202be <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE17_M_construct_nodeIJSG_EEEvPSt13_Rb_tree_nodeISG_EDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
 80202be:	b5b0      	push	{r4, r5, r7, lr}
 80202c0:	b084      	sub	sp, #16
 80202c2:	af00      	add	r7, sp, #0
 80202c4:	60f8      	str	r0, [r7, #12]
 80202c6:	60b9      	str	r1, [r7, #8]
 80202c8:	607a      	str	r2, [r7, #4]
	      ::new(__node) _Rb_tree_node<_Val>;
 80202ca:	68bb      	ldr	r3, [r7, #8]
 80202cc:	4619      	mov	r1, r3
 80202ce:	202c      	movs	r0, #44	; 0x2c
 80202d0:	f7e0 fec3 	bl	800105a <_ZnwjPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
 80202d4:	68f8      	ldr	r0, [r7, #12]
 80202d6:	f7ee fbce 	bl	800ea76 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE21_M_get_Node_allocatorEv>
 80202da:	4604      	mov	r4, r0
 80202dc:	68b8      	ldr	r0, [r7, #8]
 80202de:	f7ee f904 	bl	800e4ea <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEE9_M_valptrEv>
 80202e2:	4605      	mov	r5, r0
 80202e4:	6878      	ldr	r0, [r7, #4]
 80202e6:	f7ff fe27 	bl	801ff38 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEOT_RNSt16remove_referenceISH_E4typeE>
 80202ea:	4603      	mov	r3, r0
 80202ec:	461a      	mov	r2, r3
 80202ee:	4629      	mov	r1, r5
 80202f0:	4620      	mov	r0, r4
 80202f2:	f000 f833 	bl	802035c <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEEEE9constructISH_JSH_EEEvRSJ_PT_DpOT0_>
	}
 80202f6:	bf00      	nop
 80202f8:	3710      	adds	r7, #16
 80202fa:	46bd      	mov	sp, r7
 80202fc:	bdb0      	pop	{r4, r5, r7, pc}

080202fe <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE17_M_construct_nodeIJS9_EEEvPSt13_Rb_tree_nodeIS9_EDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
 80202fe:	b5b0      	push	{r4, r5, r7, lr}
 8020300:	b084      	sub	sp, #16
 8020302:	af00      	add	r7, sp, #0
 8020304:	60f8      	str	r0, [r7, #12]
 8020306:	60b9      	str	r1, [r7, #8]
 8020308:	607a      	str	r2, [r7, #4]
	      ::new(__node) _Rb_tree_node<_Val>;
 802030a:	68bb      	ldr	r3, [r7, #8]
 802030c:	4619      	mov	r1, r3
 802030e:	2048      	movs	r0, #72	; 0x48
 8020310:	f7e0 fea3 	bl	800105a <_ZnwjPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
 8020314:	68f8      	ldr	r0, [r7, #12]
 8020316:	f7f9 ffa3 	bl	801a260 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE21_M_get_Node_allocatorEv>
 802031a:	4604      	mov	r4, r0
 802031c:	68b8      	ldr	r0, [r7, #8]
 802031e:	f7f9 fb24 	bl	801996a <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE9_M_valptrEv>
 8020322:	4605      	mov	r5, r0
 8020324:	6878      	ldr	r0, [r7, #4]
 8020326:	f7ff fe9a 	bl	802005e <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEOT_RNSt16remove_referenceISA_E4typeE>
 802032a:	4603      	mov	r3, r0
 802032c:	461a      	mov	r2, r3
 802032e:	4629      	mov	r1, r5
 8020330:	4620      	mov	r0, r4
 8020332:	f000 f826 	bl	8020382 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEE9constructISA_JSA_EEEvRSC_PT_DpOT0_>
	}
 8020336:	bf00      	nop
 8020338:	3710      	adds	r7, #16
 802033a:	46bd      	mov	sp, r7
 802033c:	bdb0      	pop	{r4, r5, r7, pc}

0802033e <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEEEE8allocateERSJ_j>:
      allocate(allocator_type& __a, size_type __n)
 802033e:	b580      	push	{r7, lr}
 8020340:	b082      	sub	sp, #8
 8020342:	af00      	add	r7, sp, #0
 8020344:	6078      	str	r0, [r7, #4]
 8020346:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 8020348:	2200      	movs	r2, #0
 802034a:	6839      	ldr	r1, [r7, #0]
 802034c:	6878      	ldr	r0, [r7, #4]
 802034e:	f000 f82b 	bl	80203a8 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISD_EEEEEE8allocateEjPKv>
 8020352:	4603      	mov	r3, r0
 8020354:	4618      	mov	r0, r3
 8020356:	3708      	adds	r7, #8
 8020358:	46bd      	mov	sp, r7
 802035a:	bd80      	pop	{r7, pc}

0802035c <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEEEE9constructISH_JSH_EEEvRSJ_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 802035c:	b580      	push	{r7, lr}
 802035e:	b084      	sub	sp, #16
 8020360:	af00      	add	r7, sp, #0
 8020362:	60f8      	str	r0, [r7, #12]
 8020364:	60b9      	str	r1, [r7, #8]
 8020366:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 8020368:	6878      	ldr	r0, [r7, #4]
 802036a:	f7ff fde5 	bl	801ff38 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEOT_RNSt16remove_referenceISH_E4typeE>
 802036e:	4603      	mov	r3, r0
 8020370:	461a      	mov	r2, r3
 8020372:	68b9      	ldr	r1, [r7, #8]
 8020374:	68f8      	ldr	r0, [r7, #12]
 8020376:	f000 f84c 	bl	8020412 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISD_EEEEEE9constructISI_JSI_EEEvPT_DpOT0_>
 802037a:	bf00      	nop
 802037c:	3710      	adds	r7, #16
 802037e:	46bd      	mov	sp, r7
 8020380:	bd80      	pop	{r7, pc}

08020382 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEE9constructISA_JSA_EEEvRSC_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 8020382:	b580      	push	{r7, lr}
 8020384:	b084      	sub	sp, #16
 8020386:	af00      	add	r7, sp, #0
 8020388:	60f8      	str	r0, [r7, #12]
 802038a:	60b9      	str	r1, [r7, #8]
 802038c:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 802038e:	6878      	ldr	r0, [r7, #4]
 8020390:	f7ff fe65 	bl	802005e <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEOT_RNSt16remove_referenceISA_E4typeE>
 8020394:	4603      	mov	r3, r0
 8020396:	461a      	mov	r2, r3
 8020398:	68b9      	ldr	r1, [r7, #8]
 802039a:	68f8      	ldr	r0, [r7, #12]
 802039c:	f000 f86a 	bl	8020474 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE9constructISB_JSB_EEEvPT_DpOT0_>
 80203a0:	bf00      	nop
 80203a2:	3710      	adds	r7, #16
 80203a4:	46bd      	mov	sp, r7
 80203a6:	bd80      	pop	{r7, pc}

080203a8 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISD_EEEEEE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 80203a8:	b580      	push	{r7, lr}
 80203aa:	b084      	sub	sp, #16
 80203ac:	af00      	add	r7, sp, #0
 80203ae:	60f8      	str	r0, [r7, #12]
 80203b0:	60b9      	str	r1, [r7, #8]
 80203b2:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 80203b4:	68f8      	ldr	r0, [r7, #12]
 80203b6:	f000 f875 	bl	80204a4 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISD_EEEEEE8max_sizeEv>
 80203ba:	4602      	mov	r2, r0
 80203bc:	68bb      	ldr	r3, [r7, #8]
 80203be:	4293      	cmp	r3, r2
 80203c0:	bf8c      	ite	hi
 80203c2:	2301      	movhi	r3, #1
 80203c4:	2300      	movls	r3, #0
 80203c6:	b2db      	uxtb	r3, r3
 80203c8:	2b00      	cmp	r3, #0
 80203ca:	d001      	beq.n	80203d0 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISD_EEEEEE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 80203cc:	f003 f958 	bl	8023680 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 80203d0:	68bb      	ldr	r3, [r7, #8]
 80203d2:	222c      	movs	r2, #44	; 0x2c
 80203d4:	fb02 f303 	mul.w	r3, r2, r3
 80203d8:	4618      	mov	r0, r3
 80203da:	f003 f88c 	bl	80234f6 <_Znwj>
 80203de:	4603      	mov	r3, r0
 80203e0:	bf00      	nop
      }
 80203e2:	4618      	mov	r0, r3
 80203e4:	3710      	adds	r7, #16
 80203e6:	46bd      	mov	sp, r7
 80203e8:	bd80      	pop	{r7, pc}

080203ea <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISA_EEEEC1EOSF_>:
      constexpr pair(pair&&) = default;
 80203ea:	b580      	push	{r7, lr}
 80203ec:	b082      	sub	sp, #8
 80203ee:	af00      	add	r7, sp, #0
 80203f0:	6078      	str	r0, [r7, #4]
 80203f2:	6039      	str	r1, [r7, #0]
 80203f4:	687b      	ldr	r3, [r7, #4]
 80203f6:	683a      	ldr	r2, [r7, #0]
 80203f8:	4611      	mov	r1, r2
 80203fa:	4618      	mov	r0, r3
 80203fc:	f003 fcec 	bl	8023dd8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 8020400:	683b      	ldr	r3, [r7, #0]
 8020402:	699a      	ldr	r2, [r3, #24]
 8020404:	687b      	ldr	r3, [r7, #4]
 8020406:	619a      	str	r2, [r3, #24]
 8020408:	687b      	ldr	r3, [r7, #4]
 802040a:	4618      	mov	r0, r3
 802040c:	3708      	adds	r7, #8
 802040e:	46bd      	mov	sp, r7
 8020410:	bd80      	pop	{r7, pc}

08020412 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISD_EEEEEE9constructISI_JSI_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 8020412:	b590      	push	{r4, r7, lr}
 8020414:	b085      	sub	sp, #20
 8020416:	af00      	add	r7, sp, #0
 8020418:	60f8      	str	r0, [r7, #12]
 802041a:	60b9      	str	r1, [r7, #8]
 802041c:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 802041e:	6878      	ldr	r0, [r7, #4]
 8020420:	f7ff fd8a 	bl	801ff38 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEOT_RNSt16remove_referenceISH_E4typeE>
 8020424:	4604      	mov	r4, r0
 8020426:	68bb      	ldr	r3, [r7, #8]
 8020428:	4619      	mov	r1, r3
 802042a:	201c      	movs	r0, #28
 802042c:	f7e0 fe15 	bl	800105a <_ZnwjPv>
 8020430:	4603      	mov	r3, r0
 8020432:	4621      	mov	r1, r4
 8020434:	4618      	mov	r0, r3
 8020436:	f7ff ffd8 	bl	80203ea <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISA_EEEEC1EOSF_>
 802043a:	bf00      	nop
 802043c:	3714      	adds	r7, #20
 802043e:	46bd      	mov	sp, r7
 8020440:	bd90      	pop	{r4, r7, pc}

08020442 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEC1EOS8_>:
 8020442:	b580      	push	{r7, lr}
 8020444:	b082      	sub	sp, #8
 8020446:	af00      	add	r7, sp, #0
 8020448:	6078      	str	r0, [r7, #4]
 802044a:	6039      	str	r1, [r7, #0]
 802044c:	687b      	ldr	r3, [r7, #4]
 802044e:	683a      	ldr	r2, [r7, #0]
 8020450:	4611      	mov	r1, r2
 8020452:	4618      	mov	r0, r3
 8020454:	f003 fcc0 	bl	8023dd8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 8020458:	687b      	ldr	r3, [r7, #4]
 802045a:	f103 0218 	add.w	r2, r3, #24
 802045e:	683b      	ldr	r3, [r7, #0]
 8020460:	3318      	adds	r3, #24
 8020462:	4619      	mov	r1, r3
 8020464:	4610      	mov	r0, r2
 8020466:	f7eb feb1 	bl	800c1cc <_ZN6SymbolC1EOS_>
 802046a:	687b      	ldr	r3, [r7, #4]
 802046c:	4618      	mov	r0, r3
 802046e:	3708      	adds	r7, #8
 8020470:	46bd      	mov	sp, r7
 8020472:	bd80      	pop	{r7, pc}

08020474 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE9constructISB_JSB_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 8020474:	b590      	push	{r4, r7, lr}
 8020476:	b085      	sub	sp, #20
 8020478:	af00      	add	r7, sp, #0
 802047a:	60f8      	str	r0, [r7, #12]
 802047c:	60b9      	str	r1, [r7, #8]
 802047e:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 8020480:	6878      	ldr	r0, [r7, #4]
 8020482:	f7ff fdec 	bl	802005e <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEOT_RNSt16remove_referenceISA_E4typeE>
 8020486:	4604      	mov	r4, r0
 8020488:	68bb      	ldr	r3, [r7, #8]
 802048a:	4619      	mov	r1, r3
 802048c:	2038      	movs	r0, #56	; 0x38
 802048e:	f7e0 fde4 	bl	800105a <_ZnwjPv>
 8020492:	4603      	mov	r3, r0
 8020494:	4621      	mov	r1, r4
 8020496:	4618      	mov	r0, r3
 8020498:	f7ff ffd3 	bl	8020442 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEC1EOS8_>
 802049c:	bf00      	nop
 802049e:	3714      	adds	r7, #20
 80204a0:	46bd      	mov	sp, r7
 80204a2:	bd90      	pop	{r4, r7, pc}

080204a4 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISD_EEEEEE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 80204a4:	b480      	push	{r7}
 80204a6:	b083      	sub	sp, #12
 80204a8:	af00      	add	r7, sp, #0
 80204aa:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 80204ac:	4b03      	ldr	r3, [pc, #12]	; (80204bc <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISD_EEEEEE8max_sizeEv+0x18>)
      }
 80204ae:	4618      	mov	r0, r3
 80204b0:	370c      	adds	r7, #12
 80204b2:	46bd      	mov	sp, r7
 80204b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80204b8:	4770      	bx	lr
 80204ba:	bf00      	nop
 80204bc:	02e8ba2e 	.word	0x02e8ba2e

080204c0 <_Z41__static_initialization_and_destruction_0ii>:
 80204c0:	b590      	push	{r4, r7, lr}
 80204c2:	b0e7      	sub	sp, #412	; 0x19c
 80204c4:	af02      	add	r7, sp, #8
 80204c6:	1d3b      	adds	r3, r7, #4
 80204c8:	6018      	str	r0, [r3, #0]
 80204ca:	463b      	mov	r3, r7
 80204cc:	6019      	str	r1, [r3, #0]
 80204ce:	1d3b      	adds	r3, r7, #4
 80204d0:	681b      	ldr	r3, [r3, #0]
 80204d2:	2b01      	cmp	r3, #1
 80204d4:	f040 819d 	bne.w	8020812 <_Z41__static_initialization_and_destruction_0ii+0x352>
 80204d8:	463b      	mov	r3, r7
 80204da:	681b      	ldr	r3, [r3, #0]
 80204dc:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80204e0:	4293      	cmp	r3, r2
 80204e2:	f040 8196 	bne.w	8020812 <_Z41__static_initialization_and_destruction_0ii+0x352>
};
 80204e6:	f107 0314 	add.w	r3, r7, #20
 80204ea:	4618      	mov	r0, r3
 80204ec:	2322      	movs	r3, #34	; 0x22
 80204ee:	461a      	mov	r2, r3
 80204f0:	2100      	movs	r1, #0
 80204f2:	f004 fcd5 	bl	8024ea0 <memset>
 80204f6:	f107 0314 	add.w	r3, r7, #20
 80204fa:	223a      	movs	r2, #58	; 0x3a
 80204fc:	701a      	strb	r2, [r3, #0]
 80204fe:	f107 0314 	add.w	r3, r7, #20
 8020502:	2201      	movs	r2, #1
 8020504:	705a      	strb	r2, [r3, #1]
 8020506:	f107 0314 	add.w	r3, r7, #20
 802050a:	220a      	movs	r2, #10
 802050c:	709a      	strb	r2, [r3, #2]
 802050e:	f107 0314 	add.w	r3, r7, #20
 8020512:	220a      	movs	r2, #10
 8020514:	70da      	strb	r2, [r3, #3]
 8020516:	f107 0314 	add.w	r3, r7, #20
 802051a:	222c      	movs	r2, #44	; 0x2c
 802051c:	711a      	strb	r2, [r3, #4]
 802051e:	f107 0314 	add.w	r3, r7, #20
 8020522:	220c      	movs	r2, #12
 8020524:	715a      	strb	r2, [r3, #5]
 8020526:	f107 0314 	add.w	r3, r7, #20
 802052a:	222e      	movs	r2, #46	; 0x2e
 802052c:	719a      	strb	r2, [r3, #6]
 802052e:	f107 0314 	add.w	r3, r7, #20
 8020532:	220b      	movs	r2, #11
 8020534:	71da      	strb	r2, [r3, #7]
 8020536:	f107 0314 	add.w	r3, r7, #20
 802053a:	225b      	movs	r2, #91	; 0x5b
 802053c:	721a      	strb	r2, [r3, #8]
 802053e:	f107 0314 	add.w	r3, r7, #20
 8020542:	220d      	movs	r2, #13
 8020544:	725a      	strb	r2, [r3, #9]
 8020546:	f107 0314 	add.w	r3, r7, #20
 802054a:	225d      	movs	r2, #93	; 0x5d
 802054c:	729a      	strb	r2, [r3, #10]
 802054e:	f107 0314 	add.w	r3, r7, #20
 8020552:	220e      	movs	r2, #14
 8020554:	72da      	strb	r2, [r3, #11]
 8020556:	f107 0314 	add.w	r3, r7, #20
 802055a:	227c      	movs	r2, #124	; 0x7c
 802055c:	731a      	strb	r2, [r3, #12]
 802055e:	f107 0314 	add.w	r3, r7, #20
 8020562:	2215      	movs	r2, #21
 8020564:	735a      	strb	r2, [r3, #13]
 8020566:	f107 0314 	add.w	r3, r7, #20
 802056a:	2226      	movs	r2, #38	; 0x26
 802056c:	739a      	strb	r2, [r3, #14]
 802056e:	f107 0314 	add.w	r3, r7, #20
 8020572:	2216      	movs	r2, #22
 8020574:	73da      	strb	r2, [r3, #15]
 8020576:	f107 0314 	add.w	r3, r7, #20
 802057a:	222b      	movs	r2, #43	; 0x2b
 802057c:	741a      	strb	r2, [r3, #16]
 802057e:	f107 0314 	add.w	r3, r7, #20
 8020582:	221f      	movs	r2, #31
 8020584:	745a      	strb	r2, [r3, #17]
 8020586:	f107 0314 	add.w	r3, r7, #20
 802058a:	222d      	movs	r2, #45	; 0x2d
 802058c:	749a      	strb	r2, [r3, #18]
 802058e:	f107 0314 	add.w	r3, r7, #20
 8020592:	2220      	movs	r2, #32
 8020594:	74da      	strb	r2, [r3, #19]
 8020596:	f107 0314 	add.w	r3, r7, #20
 802059a:	222a      	movs	r2, #42	; 0x2a
 802059c:	751a      	strb	r2, [r3, #20]
 802059e:	f107 0314 	add.w	r3, r7, #20
 80205a2:	2221      	movs	r2, #33	; 0x21
 80205a4:	755a      	strb	r2, [r3, #21]
 80205a6:	f107 0314 	add.w	r3, r7, #20
 80205aa:	222f      	movs	r2, #47	; 0x2f
 80205ac:	759a      	strb	r2, [r3, #22]
 80205ae:	f107 0314 	add.w	r3, r7, #20
 80205b2:	2222      	movs	r2, #34	; 0x22
 80205b4:	75da      	strb	r2, [r3, #23]
 80205b6:	f107 0314 	add.w	r3, r7, #20
 80205ba:	225e      	movs	r2, #94	; 0x5e
 80205bc:	761a      	strb	r2, [r3, #24]
 80205be:	f107 0314 	add.w	r3, r7, #20
 80205c2:	2223      	movs	r2, #35	; 0x23
 80205c4:	765a      	strb	r2, [r3, #25]
 80205c6:	f107 0314 	add.w	r3, r7, #20
 80205ca:	2225      	movs	r2, #37	; 0x25
 80205cc:	769a      	strb	r2, [r3, #26]
 80205ce:	f107 0314 	add.w	r3, r7, #20
 80205d2:	2224      	movs	r2, #36	; 0x24
 80205d4:	76da      	strb	r2, [r3, #27]
 80205d6:	f107 0314 	add.w	r3, r7, #20
 80205da:	2228      	movs	r2, #40	; 0x28
 80205dc:	771a      	strb	r2, [r3, #28]
 80205de:	f107 0314 	add.w	r3, r7, #20
 80205e2:	2226      	movs	r2, #38	; 0x26
 80205e4:	775a      	strb	r2, [r3, #29]
 80205e6:	f107 0314 	add.w	r3, r7, #20
 80205ea:	2229      	movs	r2, #41	; 0x29
 80205ec:	779a      	strb	r2, [r3, #30]
 80205ee:	f107 0314 	add.w	r3, r7, #20
 80205f2:	2227      	movs	r2, #39	; 0x27
 80205f4:	77da      	strb	r2, [r3, #31]
 80205f6:	f107 0314 	add.w	r3, r7, #20
 80205fa:	2225      	movs	r2, #37	; 0x25
 80205fc:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8020600:	f107 030c 	add.w	r3, r7, #12
 8020604:	f107 0214 	add.w	r2, r7, #20
 8020608:	601a      	str	r2, [r3, #0]
 802060a:	f107 030c 	add.w	r3, r7, #12
 802060e:	2211      	movs	r2, #17
 8020610:	605a      	str	r2, [r3, #4]
 8020612:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8020616:	4618      	mov	r0, r3
 8020618:	f7e1 fb64 	bl	8001ce4 <_ZNSaISt4pairIKc10token_typeEEC1Ev>
 802061c:	f107 0138 	add.w	r1, r7, #56	; 0x38
 8020620:	f107 020c 	add.w	r2, r7, #12
 8020624:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8020628:	9300      	str	r3, [sp, #0]
 802062a:	460b      	mov	r3, r1
 802062c:	ca06      	ldmia	r2, {r1, r2}
 802062e:	4885      	ldr	r0, [pc, #532]	; (8020844 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 8020630:	f7e1 fb70 	bl	8001d14 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 8020634:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8020638:	4618      	mov	r0, r3
 802063a:	f7e1 fb5f 	bl	8001cfc <_ZNSaISt4pairIKc10token_typeEED1Ev>
	{"true", TOKEN_TRUE},
 802063e:	2305      	movs	r3, #5
 8020640:	f887 3162 	strb.w	r3, [r7, #354]	; 0x162
};
 8020644:	f507 72b1 	add.w	r2, r7, #354	; 0x162
 8020648:	f107 0348 	add.w	r3, r7, #72	; 0x48
 802064c:	497e      	ldr	r1, [pc, #504]	; (8020848 <_Z41__static_initialization_and_destruction_0ii+0x388>)
 802064e:	4618      	mov	r0, r3
 8020650:	f7e0 fd52 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"false", TOKEN_FALSE},
 8020654:	2306      	movs	r3, #6
 8020656:	f887 3163 	strb.w	r3, [r7, #355]	; 0x163
};
 802065a:	f207 1263 	addw	r2, r7, #355	; 0x163
 802065e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8020662:	331c      	adds	r3, #28
 8020664:	4979      	ldr	r1, [pc, #484]	; (802084c <_Z41__static_initialization_and_destruction_0ii+0x38c>)
 8020666:	4618      	mov	r0, r3
 8020668:	f7e0 fd6e 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"setup", TOKEN_SETUP},
 802066c:	2307      	movs	r3, #7
 802066e:	f887 3164 	strb.w	r3, [r7, #356]	; 0x164
};
 8020672:	f507 72b2 	add.w	r2, r7, #356	; 0x164
 8020676:	f107 0348 	add.w	r3, r7, #72	; 0x48
 802067a:	3338      	adds	r3, #56	; 0x38
 802067c:	4974      	ldr	r1, [pc, #464]	; (8020850 <_Z41__static_initialization_and_destruction_0ii+0x390>)
 802067e:	4618      	mov	r0, r3
 8020680:	f7e0 fd62 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"loop", TOKEN_LOOP},
 8020684:	2308      	movs	r3, #8
 8020686:	f887 3165 	strb.w	r3, [r7, #357]	; 0x165
};
 802068a:	f207 1265 	addw	r2, r7, #357	; 0x165
 802068e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8020692:	3354      	adds	r3, #84	; 0x54
 8020694:	496f      	ldr	r1, [pc, #444]	; (8020854 <_Z41__static_initialization_and_destruction_0ii+0x394>)
 8020696:	4618      	mov	r0, r3
 8020698:	f7e0 fd2e 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"finish", TOKEN_FINISH},
 802069c:	2309      	movs	r3, #9
 802069e:	f887 3166 	strb.w	r3, [r7, #358]	; 0x166
};
 80206a2:	f507 72b3 	add.w	r2, r7, #358	; 0x166
 80206a6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80206aa:	3370      	adds	r3, #112	; 0x70
 80206ac:	496a      	ldr	r1, [pc, #424]	; (8020858 <_Z41__static_initialization_and_destruction_0ii+0x398>)
 80206ae:	4618      	mov	r0, r3
 80206b0:	f7e0 fd72 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"if", TOKEN_IF},
 80206b4:	2310      	movs	r3, #16
 80206b6:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167
};
 80206ba:	f207 1267 	addw	r2, r7, #359	; 0x167
 80206be:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80206c2:	338c      	adds	r3, #140	; 0x8c
 80206c4:	4965      	ldr	r1, [pc, #404]	; (802085c <_Z41__static_initialization_and_destruction_0ii+0x39c>)
 80206c6:	4618      	mov	r0, r3
 80206c8:	f7e0 fd8e 	bl	80011e8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>
	{"elseif", TOKEN_ELSEIF},
 80206cc:	2311      	movs	r3, #17
 80206ce:	f887 3168 	strb.w	r3, [r7, #360]	; 0x168
};
 80206d2:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 80206d6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80206da:	33a8      	adds	r3, #168	; 0xa8
 80206dc:	4960      	ldr	r1, [pc, #384]	; (8020860 <_Z41__static_initialization_and_destruction_0ii+0x3a0>)
 80206de:	4618      	mov	r0, r3
 80206e0:	f7e0 fd5a 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"else", TOKEN_ELSE},
 80206e4:	2312      	movs	r3, #18
 80206e6:	f887 3169 	strb.w	r3, [r7, #361]	; 0x169
};
 80206ea:	f207 1269 	addw	r2, r7, #361	; 0x169
 80206ee:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80206f2:	33c4      	adds	r3, #196	; 0xc4
 80206f4:	495b      	ldr	r1, [pc, #364]	; (8020864 <_Z41__static_initialization_and_destruction_0ii+0x3a4>)
 80206f6:	4618      	mov	r0, r3
 80206f8:	f7e0 fcfe 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"while", TOKEN_WHILE},
 80206fc:	2313      	movs	r3, #19
 80206fe:	f887 316a 	strb.w	r3, [r7, #362]	; 0x16a
};
 8020702:	f507 72b5 	add.w	r2, r7, #362	; 0x16a
 8020706:	f107 0348 	add.w	r3, r7, #72	; 0x48
 802070a:	33e0      	adds	r3, #224	; 0xe0
 802070c:	4956      	ldr	r1, [pc, #344]	; (8020868 <_Z41__static_initialization_and_destruction_0ii+0x3a8>)
 802070e:	4618      	mov	r0, r3
 8020710:	f7e0 fd1a 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"end", TOKEN_END},
 8020714:	2314      	movs	r3, #20
 8020716:	f887 316b 	strb.w	r3, [r7, #363]	; 0x16b
};
 802071a:	f207 126b 	addw	r2, r7, #363	; 0x16b
 802071e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8020722:	33fc      	adds	r3, #252	; 0xfc
 8020724:	4951      	ldr	r1, [pc, #324]	; (802086c <_Z41__static_initialization_and_destruction_0ii+0x3ac>)
 8020726:	4618      	mov	r0, r3
 8020728:	f7e0 fd86 	bl	8001238 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>
 802072c:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8020730:	f107 0248 	add.w	r2, r7, #72	; 0x48
 8020734:	601a      	str	r2, [r3, #0]
 8020736:	f107 0340 	add.w	r3, r7, #64	; 0x40
 802073a:	220a      	movs	r2, #10
 802073c:	605a      	str	r2, [r3, #4]
 802073e:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8020742:	4618      	mov	r0, r3
 8020744:	f7e1 fb73 	bl	8001e2e <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 8020748:	f507 71b6 	add.w	r1, r7, #364	; 0x16c
 802074c:	f107 0240 	add.w	r2, r7, #64	; 0x40
 8020750:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8020754:	9300      	str	r3, [sp, #0]
 8020756:	460b      	mov	r3, r1
 8020758:	ca06      	ldmia	r2, {r1, r2}
 802075a:	4845      	ldr	r0, [pc, #276]	; (8020870 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 802075c:	f7e1 fb7f 	bl	8001e5e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>
 8020760:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8020764:	4618      	mov	r0, r3
 8020766:	f7e1 fb6e 	bl	8001e46 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 802076a:	f107 0448 	add.w	r4, r7, #72	; 0x48
 802076e:	f504 748c 	add.w	r4, r4, #280	; 0x118
 8020772:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8020776:	429c      	cmp	r4, r3
 8020778:	d004      	beq.n	8020784 <_Z41__static_initialization_and_destruction_0ii+0x2c4>
 802077a:	3c1c      	subs	r4, #28
 802077c:	4620      	mov	r0, r4
 802077e:	f7e0 fcae 	bl	80010de <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 8020782:	e7f6      	b.n	8020772 <_Z41__static_initialization_and_destruction_0ii+0x2b2>
};
 8020784:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 8020788:	2200      	movs	r2, #0
 802078a:	601a      	str	r2, [r3, #0]
 802078c:	605a      	str	r2, [r3, #4]
 802078e:	609a      	str	r2, [r3, #8]
 8020790:	233c      	movs	r3, #60	; 0x3c
 8020792:	f887 317c 	strb.w	r3, [r7, #380]	; 0x17c
 8020796:	231b      	movs	r3, #27
 8020798:	f887 317d 	strb.w	r3, [r7, #381]	; 0x17d
 802079c:	231c      	movs	r3, #28
 802079e:	f887 317e 	strb.w	r3, [r7, #382]	; 0x17e
 80207a2:	233e      	movs	r3, #62	; 0x3e
 80207a4:	f887 317f 	strb.w	r3, [r7, #383]	; 0x17f
 80207a8:	2319      	movs	r3, #25
 80207aa:	f887 3180 	strb.w	r3, [r7, #384]	; 0x180
 80207ae:	231a      	movs	r3, #26
 80207b0:	f887 3181 	strb.w	r3, [r7, #385]	; 0x181
 80207b4:	233d      	movs	r3, #61	; 0x3d
 80207b6:	f887 3182 	strb.w	r3, [r7, #386]	; 0x182
 80207ba:	2318      	movs	r3, #24
 80207bc:	f887 3183 	strb.w	r3, [r7, #387]	; 0x183
 80207c0:	231d      	movs	r3, #29
 80207c2:	f887 3184 	strb.w	r3, [r7, #388]	; 0x184
 80207c6:	2321      	movs	r3, #33	; 0x21
 80207c8:	f887 3185 	strb.w	r3, [r7, #389]	; 0x185
 80207cc:	2317      	movs	r3, #23
 80207ce:	f887 3186 	strb.w	r3, [r7, #390]	; 0x186
 80207d2:	231e      	movs	r3, #30
 80207d4:	f887 3187 	strb.w	r3, [r7, #391]	; 0x187
 80207d8:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 80207dc:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 80207e0:	2304      	movs	r3, #4
 80207e2:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 80207e6:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 80207ea:	4618      	mov	r0, r3
 80207ec:	f7e1 fb67 	bl	8001ebe <_ZNSaISt4pairIKc12double_tokenEEC1Ev>
 80207f0:	f507 72c4 	add.w	r2, r7, #392	; 0x188
 80207f4:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 80207f8:	9300      	str	r3, [sp, #0]
 80207fa:	4613      	mov	r3, r2
 80207fc:	f507 72ba 	add.w	r2, r7, #372	; 0x174
 8020800:	ca06      	ldmia	r2, {r1, r2}
 8020802:	481c      	ldr	r0, [pc, #112]	; (8020874 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 8020804:	f7e1 fb73 	bl	8001eee <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 8020808:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 802080c:	4618      	mov	r0, r3
 802080e:	f7e1 fb62 	bl	8001ed6 <_ZNSaISt4pairIKc12double_tokenEED1Ev>
static const std::map<char, double_token> token_double_chars
 8020812:	1d3b      	adds	r3, r7, #4
 8020814:	681b      	ldr	r3, [r3, #0]
 8020816:	2b00      	cmp	r3, #0
 8020818:	d10e      	bne.n	8020838 <_Z41__static_initialization_and_destruction_0ii+0x378>
 802081a:	463b      	mov	r3, r7
 802081c:	681b      	ldr	r3, [r3, #0]
 802081e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8020822:	4293      	cmp	r3, r2
 8020824:	d108      	bne.n	8020838 <_Z41__static_initialization_and_destruction_0ii+0x378>
 8020826:	4813      	ldr	r0, [pc, #76]	; (8020874 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 8020828:	f7e9 f82c 	bl	8009884 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>
static const std::map<std::string, token_type> token_strings
 802082c:	4810      	ldr	r0, [pc, #64]	; (8020870 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 802082e:	f7e9 f836 	bl	800989e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
static const std::map<char, token_type> token_chars
 8020832:	4804      	ldr	r0, [pc, #16]	; (8020844 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 8020834:	f7e9 f840 	bl	80098b8 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>
 8020838:	bf00      	nop
 802083a:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 802083e:	46bd      	mov	sp, r7
 8020840:	bd90      	pop	{r4, r7, pc}
 8020842:	bf00      	nop
 8020844:	20000748 	.word	0x20000748
 8020848:	0802a100 	.word	0x0802a100
 802084c:	0802a108 	.word	0x0802a108
 8020850:	0802a110 	.word	0x0802a110
 8020854:	0802a118 	.word	0x0802a118
 8020858:	0802a120 	.word	0x0802a120
 802085c:	0802a128 	.word	0x0802a128
 8020860:	0802a12c 	.word	0x0802a12c
 8020864:	0802a134 	.word	0x0802a134
 8020868:	0802a13c 	.word	0x0802a13c
 802086c:	0802a144 	.word	0x0802a144
 8020870:	20000760 	.word	0x20000760
 8020874:	20000778 	.word	0x20000778

08020878 <_GLOBAL__sub_I__ZN16Function_handlerC2Ev>:
 8020878:	b580      	push	{r7, lr}
 802087a:	af00      	add	r7, sp, #0
 802087c:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8020880:	2001      	movs	r0, #1
 8020882:	f7ff fe1d 	bl	80204c0 <_Z41__static_initialization_and_destruction_0ii>
 8020886:	bd80      	pop	{r7, pc}

08020888 <_GLOBAL__sub_D__ZN16Function_handlerC2Ev>:
 8020888:	b580      	push	{r7, lr}
 802088a:	af00      	add	r7, sp, #0
 802088c:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8020890:	2000      	movs	r0, #0
 8020892:	f7ff fe15 	bl	80204c0 <_Z41__static_initialization_and_destruction_0ii>
 8020896:	bd80      	pop	{r7, pc}

08020898 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
 8020898:	f8df d034 	ldr.w	sp, [pc, #52]	; 80208d0 <LoopFillZerobss+0x12>

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 802089c:	480d      	ldr	r0, [pc, #52]	; (80208d4 <LoopFillZerobss+0x16>)
  ldr r1, =_edata
 802089e:	490e      	ldr	r1, [pc, #56]	; (80208d8 <LoopFillZerobss+0x1a>)
  ldr r2, =_sidata
 80208a0:	4a0e      	ldr	r2, [pc, #56]	; (80208dc <LoopFillZerobss+0x1e>)
  movs r3, #0
 80208a2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80208a4:	e002      	b.n	80208ac <LoopCopyDataInit>

080208a6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80208a6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80208a8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80208aa:	3304      	adds	r3, #4

080208ac <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80208ac:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80208ae:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80208b0:	d3f9      	bcc.n	80208a6 <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80208b2:	4a0b      	ldr	r2, [pc, #44]	; (80208e0 <LoopFillZerobss+0x22>)
  ldr r4, =_ebss
 80208b4:	4c0b      	ldr	r4, [pc, #44]	; (80208e4 <LoopFillZerobss+0x26>)
  movs r3, #0
 80208b6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80208b8:	e001      	b.n	80208be <LoopFillZerobss>

080208ba <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80208ba:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80208bc:	3204      	adds	r2, #4

080208be <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80208be:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80208c0:	d3fb      	bcc.n	80208ba <FillZerobss>

/* Call the clock system initialization function.*/
  bl  SystemInit   
 80208c2:	f7fe fb6f 	bl	801efa4 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80208c6:	f004 fa69 	bl	8024d9c <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80208ca:	f7fd fd15 	bl	801e2f8 <main>
  bx  lr    
 80208ce:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
 80208d0:	20050000 	.word	0x20050000
  ldr r0, =_sdata
 80208d4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80208d8:	200001e8 	.word	0x200001e8
  ldr r2, =_sidata
 80208dc:	0802a884 	.word	0x0802a884
  ldr r2, =_sbss
 80208e0:	200001e8 	.word	0x200001e8
  ldr r4, =_ebss
 80208e4:	200008f4 	.word	0x200008f4

080208e8 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80208e8:	e7fe      	b.n	80208e8 <ADC_IRQHandler>

080208ea <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 80208ea:	b580      	push	{r7, lr}
 80208ec:	af00      	add	r7, sp, #0
#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 80208ee:	2003      	movs	r0, #3
 80208f0:	f000 f94c 	bl	8020b8c <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 80208f4:	200f      	movs	r0, #15
 80208f6:	f000 f805 	bl	8020904 <HAL_InitTick>
  
  /* Init the low level hardware */
  HAL_MspInit();
 80208fa:	f7fe f9e9 	bl	801ecd0 <HAL_MspInit>
  
  /* Return function status */
  return HAL_OK;
 80208fe:	2300      	movs	r3, #0
}
 8020900:	4618      	mov	r0, r3
 8020902:	bd80      	pop	{r7, pc}

08020904 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8020904:	b580      	push	{r7, lr}
 8020906:	b082      	sub	sp, #8
 8020908:	af00      	add	r7, sp, #0
 802090a:	6078      	str	r0, [r7, #4]
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 802090c:	4b12      	ldr	r3, [pc, #72]	; (8020958 <HAL_InitTick+0x54>)
 802090e:	681a      	ldr	r2, [r3, #0]
 8020910:	4b12      	ldr	r3, [pc, #72]	; (802095c <HAL_InitTick+0x58>)
 8020912:	781b      	ldrb	r3, [r3, #0]
 8020914:	4619      	mov	r1, r3
 8020916:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 802091a:	fbb3 f3f1 	udiv	r3, r3, r1
 802091e:	fbb2 f3f3 	udiv	r3, r2, r3
 8020922:	4618      	mov	r0, r3
 8020924:	f000 f967 	bl	8020bf6 <HAL_SYSTICK_Config>
 8020928:	4603      	mov	r3, r0
 802092a:	2b00      	cmp	r3, #0
 802092c:	d001      	beq.n	8020932 <HAL_InitTick+0x2e>
  {
    return HAL_ERROR;
 802092e:	2301      	movs	r3, #1
 8020930:	e00e      	b.n	8020950 <HAL_InitTick+0x4c>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8020932:	687b      	ldr	r3, [r7, #4]
 8020934:	2b0f      	cmp	r3, #15
 8020936:	d80a      	bhi.n	802094e <HAL_InitTick+0x4a>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 8020938:	2200      	movs	r2, #0
 802093a:	6879      	ldr	r1, [r7, #4]
 802093c:	f04f 30ff 	mov.w	r0, #4294967295
 8020940:	f000 f92f 	bl	8020ba2 <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 8020944:	4a06      	ldr	r2, [pc, #24]	; (8020960 <HAL_InitTick+0x5c>)
 8020946:	687b      	ldr	r3, [r7, #4]
 8020948:	6013      	str	r3, [r2, #0]
  {
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
 802094a:	2300      	movs	r3, #0
 802094c:	e000      	b.n	8020950 <HAL_InitTick+0x4c>
    return HAL_ERROR;
 802094e:	2301      	movs	r3, #1
}
 8020950:	4618      	mov	r0, r3
 8020952:	3708      	adds	r7, #8
 8020954:	46bd      	mov	sp, r7
 8020956:	bd80      	pop	{r7, pc}
 8020958:	20000004 	.word	0x20000004
 802095c:	2000000c 	.word	0x2000000c
 8020960:	20000008 	.word	0x20000008

08020964 <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other 
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 8020964:	b480      	push	{r7}
 8020966:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 8020968:	4b06      	ldr	r3, [pc, #24]	; (8020984 <HAL_IncTick+0x20>)
 802096a:	781b      	ldrb	r3, [r3, #0]
 802096c:	461a      	mov	r2, r3
 802096e:	4b06      	ldr	r3, [pc, #24]	; (8020988 <HAL_IncTick+0x24>)
 8020970:	681b      	ldr	r3, [r3, #0]
 8020972:	4413      	add	r3, r2
 8020974:	4a04      	ldr	r2, [pc, #16]	; (8020988 <HAL_IncTick+0x24>)
 8020976:	6013      	str	r3, [r2, #0]
}
 8020978:	bf00      	nop
 802097a:	46bd      	mov	sp, r7
 802097c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8020980:	4770      	bx	lr
 8020982:	bf00      	nop
 8020984:	2000000c 	.word	0x2000000c
 8020988:	200008e0 	.word	0x200008e0

0802098c <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other 
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 802098c:	b480      	push	{r7}
 802098e:	af00      	add	r7, sp, #0
  return uwTick;
 8020990:	4b03      	ldr	r3, [pc, #12]	; (80209a0 <HAL_GetTick+0x14>)
 8020992:	681b      	ldr	r3, [r3, #0]
}
 8020994:	4618      	mov	r0, r3
 8020996:	46bd      	mov	sp, r7
 8020998:	f85d 7b04 	ldr.w	r7, [sp], #4
 802099c:	4770      	bx	lr
 802099e:	bf00      	nop
 80209a0:	200008e0 	.word	0x200008e0

080209a4 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay  specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 80209a4:	b580      	push	{r7, lr}
 80209a6:	b084      	sub	sp, #16
 80209a8:	af00      	add	r7, sp, #0
 80209aa:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = HAL_GetTick();
 80209ac:	f7ff ffee 	bl	802098c <HAL_GetTick>
 80209b0:	60b8      	str	r0, [r7, #8]
  uint32_t wait = Delay;
 80209b2:	687b      	ldr	r3, [r7, #4]
 80209b4:	60fb      	str	r3, [r7, #12]

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 80209b6:	68fb      	ldr	r3, [r7, #12]
 80209b8:	f1b3 3fff 	cmp.w	r3, #4294967295
 80209bc:	d005      	beq.n	80209ca <HAL_Delay+0x26>
  {
    wait += (uint32_t)(uwTickFreq);
 80209be:	4b0a      	ldr	r3, [pc, #40]	; (80209e8 <HAL_Delay+0x44>)
 80209c0:	781b      	ldrb	r3, [r3, #0]
 80209c2:	461a      	mov	r2, r3
 80209c4:	68fb      	ldr	r3, [r7, #12]
 80209c6:	4413      	add	r3, r2
 80209c8:	60fb      	str	r3, [r7, #12]
  }

  while ((HAL_GetTick() - tickstart) < wait)
 80209ca:	bf00      	nop
 80209cc:	f7ff ffde 	bl	802098c <HAL_GetTick>
 80209d0:	4602      	mov	r2, r0
 80209d2:	68bb      	ldr	r3, [r7, #8]
 80209d4:	1ad3      	subs	r3, r2, r3
 80209d6:	68fa      	ldr	r2, [r7, #12]
 80209d8:	429a      	cmp	r2, r3
 80209da:	d8f7      	bhi.n	80209cc <HAL_Delay+0x28>
  {
  }
}
 80209dc:	bf00      	nop
 80209de:	bf00      	nop
 80209e0:	3710      	adds	r7, #16
 80209e2:	46bd      	mov	sp, r7
 80209e4:	bd80      	pop	{r7, pc}
 80209e6:	bf00      	nop
 80209e8:	2000000c 	.word	0x2000000c

080209ec <__NVIC_SetPriorityGrouping>:
           In case of a conflict between priority grouping and available
           priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
  \param [in]      PriorityGroup  Priority grouping field.
 */
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 80209ec:	b480      	push	{r7}
 80209ee:	b085      	sub	sp, #20
 80209f0:	af00      	add	r7, sp, #0
 80209f2:	6078      	str	r0, [r7, #4]
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 80209f4:	687b      	ldr	r3, [r7, #4]
 80209f6:	f003 0307 	and.w	r3, r3, #7
 80209fa:	60fb      	str	r3, [r7, #12]

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80209fc:	4b0b      	ldr	r3, [pc, #44]	; (8020a2c <__NVIC_SetPriorityGrouping+0x40>)
 80209fe:	68db      	ldr	r3, [r3, #12]
 8020a00:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8020a02:	68ba      	ldr	r2, [r7, #8]
 8020a04:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8020a08:	4013      	ands	r3, r2
 8020a0a:	60bb      	str	r3, [r7, #8]
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8020a0c:	68fb      	ldr	r3, [r7, #12]
 8020a0e:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8020a10:	68bb      	ldr	r3, [r7, #8]
 8020a12:	431a      	orrs	r2, r3
  reg_value  =  (reg_value                                   |
 8020a14:	4b06      	ldr	r3, [pc, #24]	; (8020a30 <__NVIC_SetPriorityGrouping+0x44>)
 8020a16:	4313      	orrs	r3, r2
 8020a18:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 8020a1a:	4a04      	ldr	r2, [pc, #16]	; (8020a2c <__NVIC_SetPriorityGrouping+0x40>)
 8020a1c:	68bb      	ldr	r3, [r7, #8]
 8020a1e:	60d3      	str	r3, [r2, #12]
}
 8020a20:	bf00      	nop
 8020a22:	3714      	adds	r7, #20
 8020a24:	46bd      	mov	sp, r7
 8020a26:	f85d 7b04 	ldr.w	r7, [sp], #4
 8020a2a:	4770      	bx	lr
 8020a2c:	e000ed00 	.word	0xe000ed00
 8020a30:	05fa0000 	.word	0x05fa0000

08020a34 <__NVIC_GetPriorityGrouping>:
  \brief   Get Priority Grouping
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
 8020a34:	b480      	push	{r7}
 8020a36:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8020a38:	4b04      	ldr	r3, [pc, #16]	; (8020a4c <__NVIC_GetPriorityGrouping+0x18>)
 8020a3a:	68db      	ldr	r3, [r3, #12]
 8020a3c:	0a1b      	lsrs	r3, r3, #8
 8020a3e:	f003 0307 	and.w	r3, r3, #7
}
 8020a42:	4618      	mov	r0, r3
 8020a44:	46bd      	mov	sp, r7
 8020a46:	f85d 7b04 	ldr.w	r7, [sp], #4
 8020a4a:	4770      	bx	lr
 8020a4c:	e000ed00 	.word	0xe000ed00

08020a50 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8020a50:	b480      	push	{r7}
 8020a52:	b083      	sub	sp, #12
 8020a54:	af00      	add	r7, sp, #0
 8020a56:	4603      	mov	r3, r0
 8020a58:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8020a5a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8020a5e:	2b00      	cmp	r3, #0
 8020a60:	db0b      	blt.n	8020a7a <__NVIC_EnableIRQ+0x2a>
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8020a62:	79fb      	ldrb	r3, [r7, #7]
 8020a64:	f003 021f 	and.w	r2, r3, #31
 8020a68:	4907      	ldr	r1, [pc, #28]	; (8020a88 <__NVIC_EnableIRQ+0x38>)
 8020a6a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8020a6e:	095b      	lsrs	r3, r3, #5
 8020a70:	2001      	movs	r0, #1
 8020a72:	fa00 f202 	lsl.w	r2, r0, r2
 8020a76:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
 8020a7a:	bf00      	nop
 8020a7c:	370c      	adds	r7, #12
 8020a7e:	46bd      	mov	sp, r7
 8020a80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8020a84:	4770      	bx	lr
 8020a86:	bf00      	nop
 8020a88:	e000e100 	.word	0xe000e100

08020a8c <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8020a8c:	b480      	push	{r7}
 8020a8e:	b083      	sub	sp, #12
 8020a90:	af00      	add	r7, sp, #0
 8020a92:	4603      	mov	r3, r0
 8020a94:	6039      	str	r1, [r7, #0]
 8020a96:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8020a98:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8020a9c:	2b00      	cmp	r3, #0
 8020a9e:	db0a      	blt.n	8020ab6 <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8020aa0:	683b      	ldr	r3, [r7, #0]
 8020aa2:	b2da      	uxtb	r2, r3
 8020aa4:	490c      	ldr	r1, [pc, #48]	; (8020ad8 <__NVIC_SetPriority+0x4c>)
 8020aa6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8020aaa:	0112      	lsls	r2, r2, #4
 8020aac:	b2d2      	uxtb	r2, r2
 8020aae:	440b      	add	r3, r1
 8020ab0:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 8020ab4:	e00a      	b.n	8020acc <__NVIC_SetPriority+0x40>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8020ab6:	683b      	ldr	r3, [r7, #0]
 8020ab8:	b2da      	uxtb	r2, r3
 8020aba:	4908      	ldr	r1, [pc, #32]	; (8020adc <__NVIC_SetPriority+0x50>)
 8020abc:	79fb      	ldrb	r3, [r7, #7]
 8020abe:	f003 030f 	and.w	r3, r3, #15
 8020ac2:	3b04      	subs	r3, #4
 8020ac4:	0112      	lsls	r2, r2, #4
 8020ac6:	b2d2      	uxtb	r2, r2
 8020ac8:	440b      	add	r3, r1
 8020aca:	761a      	strb	r2, [r3, #24]
}
 8020acc:	bf00      	nop
 8020ace:	370c      	adds	r7, #12
 8020ad0:	46bd      	mov	sp, r7
 8020ad2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8020ad6:	4770      	bx	lr
 8020ad8:	e000e100 	.word	0xe000e100
 8020adc:	e000ed00 	.word	0xe000ed00

08020ae0 <NVIC_EncodePriority>:
  \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
 8020ae0:	b480      	push	{r7}
 8020ae2:	b089      	sub	sp, #36	; 0x24
 8020ae4:	af00      	add	r7, sp, #0
 8020ae6:	60f8      	str	r0, [r7, #12]
 8020ae8:	60b9      	str	r1, [r7, #8]
 8020aea:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 8020aec:	68fb      	ldr	r3, [r7, #12]
 8020aee:	f003 0307 	and.w	r3, r3, #7
 8020af2:	61fb      	str	r3, [r7, #28]
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8020af4:	69fb      	ldr	r3, [r7, #28]
 8020af6:	f1c3 0307 	rsb	r3, r3, #7
 8020afa:	2b04      	cmp	r3, #4
 8020afc:	bf28      	it	cs
 8020afe:	2304      	movcs	r3, #4
 8020b00:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8020b02:	69fb      	ldr	r3, [r7, #28]
 8020b04:	3304      	adds	r3, #4
 8020b06:	2b06      	cmp	r3, #6
 8020b08:	d902      	bls.n	8020b10 <NVIC_EncodePriority+0x30>
 8020b0a:	69fb      	ldr	r3, [r7, #28]
 8020b0c:	3b03      	subs	r3, #3
 8020b0e:	e000      	b.n	8020b12 <NVIC_EncodePriority+0x32>
 8020b10:	2300      	movs	r3, #0
 8020b12:	617b      	str	r3, [r7, #20]

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8020b14:	f04f 32ff 	mov.w	r2, #4294967295
 8020b18:	69bb      	ldr	r3, [r7, #24]
 8020b1a:	fa02 f303 	lsl.w	r3, r2, r3
 8020b1e:	43da      	mvns	r2, r3
 8020b20:	68bb      	ldr	r3, [r7, #8]
 8020b22:	401a      	ands	r2, r3
 8020b24:	697b      	ldr	r3, [r7, #20]
 8020b26:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8020b28:	f04f 31ff 	mov.w	r1, #4294967295
 8020b2c:	697b      	ldr	r3, [r7, #20]
 8020b2e:	fa01 f303 	lsl.w	r3, r1, r3
 8020b32:	43d9      	mvns	r1, r3
 8020b34:	687b      	ldr	r3, [r7, #4]
 8020b36:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8020b38:	4313      	orrs	r3, r2
         );
}
 8020b3a:	4618      	mov	r0, r3
 8020b3c:	3724      	adds	r7, #36	; 0x24
 8020b3e:	46bd      	mov	sp, r7
 8020b40:	f85d 7b04 	ldr.w	r7, [sp], #4
 8020b44:	4770      	bx	lr
	...

08020b48 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 8020b48:	b580      	push	{r7, lr}
 8020b4a:	b082      	sub	sp, #8
 8020b4c:	af00      	add	r7, sp, #0
 8020b4e:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8020b50:	687b      	ldr	r3, [r7, #4]
 8020b52:	3b01      	subs	r3, #1
 8020b54:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8020b58:	d301      	bcc.n	8020b5e <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 8020b5a:	2301      	movs	r3, #1
 8020b5c:	e00f      	b.n	8020b7e <SysTick_Config+0x36>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8020b5e:	4a0a      	ldr	r2, [pc, #40]	; (8020b88 <SysTick_Config+0x40>)
 8020b60:	687b      	ldr	r3, [r7, #4]
 8020b62:	3b01      	subs	r3, #1
 8020b64:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 8020b66:	210f      	movs	r1, #15
 8020b68:	f04f 30ff 	mov.w	r0, #4294967295
 8020b6c:	f7ff ff8e 	bl	8020a8c <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8020b70:	4b05      	ldr	r3, [pc, #20]	; (8020b88 <SysTick_Config+0x40>)
 8020b72:	2200      	movs	r2, #0
 8020b74:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8020b76:	4b04      	ldr	r3, [pc, #16]	; (8020b88 <SysTick_Config+0x40>)
 8020b78:	2207      	movs	r2, #7
 8020b7a:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 8020b7c:	2300      	movs	r3, #0
}
 8020b7e:	4618      	mov	r0, r3
 8020b80:	3708      	adds	r7, #8
 8020b82:	46bd      	mov	sp, r7
 8020b84:	bd80      	pop	{r7, pc}
 8020b86:	bf00      	nop
 8020b88:	e000e010 	.word	0xe000e010

08020b8c <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
  *         The pending IRQ priority will be managed only by the subpriority. 
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8020b8c:	b580      	push	{r7, lr}
 8020b8e:	b082      	sub	sp, #8
 8020b90:	af00      	add	r7, sp, #0
 8020b92:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 8020b94:	6878      	ldr	r0, [r7, #4]
 8020b96:	f7ff ff29 	bl	80209ec <__NVIC_SetPriorityGrouping>
}
 8020b9a:	bf00      	nop
 8020b9c:	3708      	adds	r7, #8
 8020b9e:	46bd      	mov	sp, r7
 8020ba0:	bd80      	pop	{r7, pc}

08020ba2 <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8020ba2:	b580      	push	{r7, lr}
 8020ba4:	b086      	sub	sp, #24
 8020ba6:	af00      	add	r7, sp, #0
 8020ba8:	4603      	mov	r3, r0
 8020baa:	60b9      	str	r1, [r7, #8]
 8020bac:	607a      	str	r2, [r7, #4]
 8020bae:	73fb      	strb	r3, [r7, #15]
  uint32_t prioritygroup = 0x00;
 8020bb0:	2300      	movs	r3, #0
 8020bb2:	617b      	str	r3, [r7, #20]
  
  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
 8020bb4:	f7ff ff3e 	bl	8020a34 <__NVIC_GetPriorityGrouping>
 8020bb8:	6178      	str	r0, [r7, #20]
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 8020bba:	687a      	ldr	r2, [r7, #4]
 8020bbc:	68b9      	ldr	r1, [r7, #8]
 8020bbe:	6978      	ldr	r0, [r7, #20]
 8020bc0:	f7ff ff8e 	bl	8020ae0 <NVIC_EncodePriority>
 8020bc4:	4602      	mov	r2, r0
 8020bc6:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8020bca:	4611      	mov	r1, r2
 8020bcc:	4618      	mov	r0, r3
 8020bce:	f7ff ff5d 	bl	8020a8c <__NVIC_SetPriority>
}
 8020bd2:	bf00      	nop
 8020bd4:	3718      	adds	r7, #24
 8020bd6:	46bd      	mov	sp, r7
 8020bd8:	bd80      	pop	{r7, pc}

08020bda <HAL_NVIC_EnableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32f7xxxx.h))
  * @retval None
  */
void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8020bda:	b580      	push	{r7, lr}
 8020bdc:	b082      	sub	sp, #8
 8020bde:	af00      	add	r7, sp, #0
 8020be0:	4603      	mov	r3, r0
 8020be2:	71fb      	strb	r3, [r7, #7]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
 8020be4:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8020be8:	4618      	mov	r0, r3
 8020bea:	f7ff ff31 	bl	8020a50 <__NVIC_EnableIRQ>
}
 8020bee:	bf00      	nop
 8020bf0:	3708      	adds	r7, #8
 8020bf2:	46bd      	mov	sp, r7
 8020bf4:	bd80      	pop	{r7, pc}

08020bf6 <HAL_SYSTICK_Config>:
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 8020bf6:	b580      	push	{r7, lr}
 8020bf8:	b082      	sub	sp, #8
 8020bfa:	af00      	add	r7, sp, #0
 8020bfc:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 8020bfe:	6878      	ldr	r0, [r7, #4]
 8020c00:	f7ff ffa2 	bl	8020b48 <SysTick_Config>
 8020c04:	4603      	mov	r3, r0
}
 8020c06:	4618      	mov	r0, r3
 8020c08:	3708      	adds	r7, #8
 8020c0a:	46bd      	mov	sp, r7
 8020c0c:	bd80      	pop	{r7, pc}

08020c0e <HAL_DMA_Abort>:
  *        and the Stream will be effectively disabled only after the transfer of
  *        this single data is finished.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort(DMA_HandleTypeDef *hdma)
{
 8020c0e:	b580      	push	{r7, lr}
 8020c10:	b084      	sub	sp, #16
 8020c12:	af00      	add	r7, sp, #0
 8020c14:	6078      	str	r0, [r7, #4]
  /* calculate DMA base and stream number */
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 8020c16:	687b      	ldr	r3, [r7, #4]
 8020c18:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8020c1a:	60fb      	str	r3, [r7, #12]
  
  uint32_t tickstart = HAL_GetTick();
 8020c1c:	f7ff feb6 	bl	802098c <HAL_GetTick>
 8020c20:	60b8      	str	r0, [r7, #8]
  
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8020c22:	687b      	ldr	r3, [r7, #4]
 8020c24:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8020c28:	b2db      	uxtb	r3, r3
 8020c2a:	2b02      	cmp	r3, #2
 8020c2c:	d008      	beq.n	8020c40 <HAL_DMA_Abort+0x32>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8020c2e:	687b      	ldr	r3, [r7, #4]
 8020c30:	2280      	movs	r2, #128	; 0x80
 8020c32:	655a      	str	r2, [r3, #84]	; 0x54
    
    /* Process Unlocked */
    __HAL_UNLOCK(hdma);
 8020c34:	687b      	ldr	r3, [r7, #4]
 8020c36:	2200      	movs	r2, #0
 8020c38:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
    
    return HAL_ERROR;
 8020c3c:	2301      	movs	r3, #1
 8020c3e:	e052      	b.n	8020ce6 <HAL_DMA_Abort+0xd8>
  }
  else
  {
    /* Disable all the transfer interrupts */
    hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 8020c40:	687b      	ldr	r3, [r7, #4]
 8020c42:	681b      	ldr	r3, [r3, #0]
 8020c44:	681a      	ldr	r2, [r3, #0]
 8020c46:	687b      	ldr	r3, [r7, #4]
 8020c48:	681b      	ldr	r3, [r3, #0]
 8020c4a:	f022 0216 	bic.w	r2, r2, #22
 8020c4e:	601a      	str	r2, [r3, #0]
    hdma->Instance->FCR &= ~(DMA_IT_FE);
 8020c50:	687b      	ldr	r3, [r7, #4]
 8020c52:	681b      	ldr	r3, [r3, #0]
 8020c54:	695a      	ldr	r2, [r3, #20]
 8020c56:	687b      	ldr	r3, [r7, #4]
 8020c58:	681b      	ldr	r3, [r3, #0]
 8020c5a:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8020c5e:	615a      	str	r2, [r3, #20]
    
    if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 8020c60:	687b      	ldr	r3, [r7, #4]
 8020c62:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8020c64:	2b00      	cmp	r3, #0
 8020c66:	d103      	bne.n	8020c70 <HAL_DMA_Abort+0x62>
 8020c68:	687b      	ldr	r3, [r7, #4]
 8020c6a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8020c6c:	2b00      	cmp	r3, #0
 8020c6e:	d007      	beq.n	8020c80 <HAL_DMA_Abort+0x72>
    {
      hdma->Instance->CR  &= ~(DMA_IT_HT);
 8020c70:	687b      	ldr	r3, [r7, #4]
 8020c72:	681b      	ldr	r3, [r3, #0]
 8020c74:	681a      	ldr	r2, [r3, #0]
 8020c76:	687b      	ldr	r3, [r7, #4]
 8020c78:	681b      	ldr	r3, [r3, #0]
 8020c7a:	f022 0208 	bic.w	r2, r2, #8
 8020c7e:	601a      	str	r2, [r3, #0]
    }
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 8020c80:	687b      	ldr	r3, [r7, #4]
 8020c82:	681b      	ldr	r3, [r3, #0]
 8020c84:	681a      	ldr	r2, [r3, #0]
 8020c86:	687b      	ldr	r3, [r7, #4]
 8020c88:	681b      	ldr	r3, [r3, #0]
 8020c8a:	f022 0201 	bic.w	r2, r2, #1
 8020c8e:	601a      	str	r2, [r3, #0]
    
    /* Check if the DMA Stream is effectively disabled */
    while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 8020c90:	e013      	b.n	8020cba <HAL_DMA_Abort+0xac>
    {
      /* Check for the Timeout */
      if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 8020c92:	f7ff fe7b 	bl	802098c <HAL_GetTick>
 8020c96:	4602      	mov	r2, r0
 8020c98:	68bb      	ldr	r3, [r7, #8]
 8020c9a:	1ad3      	subs	r3, r2, r3
 8020c9c:	2b05      	cmp	r3, #5
 8020c9e:	d90c      	bls.n	8020cba <HAL_DMA_Abort+0xac>
      {
        /* Update error code */
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 8020ca0:	687b      	ldr	r3, [r7, #4]
 8020ca2:	2220      	movs	r2, #32
 8020ca4:	655a      	str	r2, [r3, #84]	; 0x54
        
        /* Process Unlocked */
        __HAL_UNLOCK(hdma);
 8020ca6:	687b      	ldr	r3, [r7, #4]
 8020ca8:	2200      	movs	r2, #0
 8020caa:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
        
        /* Change the DMA state */
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 8020cae:	687b      	ldr	r3, [r7, #4]
 8020cb0:	2203      	movs	r2, #3
 8020cb2:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
        
        return HAL_TIMEOUT;
 8020cb6:	2303      	movs	r3, #3
 8020cb8:	e015      	b.n	8020ce6 <HAL_DMA_Abort+0xd8>
    while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 8020cba:	687b      	ldr	r3, [r7, #4]
 8020cbc:	681b      	ldr	r3, [r3, #0]
 8020cbe:	681b      	ldr	r3, [r3, #0]
 8020cc0:	f003 0301 	and.w	r3, r3, #1
 8020cc4:	2b00      	cmp	r3, #0
 8020cc6:	d1e4      	bne.n	8020c92 <HAL_DMA_Abort+0x84>
      }
    }
    
    /* Clear all interrupt flags at correct offset within the register */
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 8020cc8:	687b      	ldr	r3, [r7, #4]
 8020cca:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8020ccc:	223f      	movs	r2, #63	; 0x3f
 8020cce:	409a      	lsls	r2, r3
 8020cd0:	68fb      	ldr	r3, [r7, #12]
 8020cd2:	609a      	str	r2, [r3, #8]
    
    /* Process Unlocked */
    __HAL_UNLOCK(hdma);
 8020cd4:	687b      	ldr	r3, [r7, #4]
 8020cd6:	2200      	movs	r2, #0
 8020cd8:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
    
    /* Change the DMA state*/
    hdma->State = HAL_DMA_STATE_READY;
 8020cdc:	687b      	ldr	r3, [r7, #4]
 8020cde:	2201      	movs	r2, #1
 8020ce0:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
  }
  return HAL_OK;
 8020ce4:	2300      	movs	r3, #0
}
 8020ce6:	4618      	mov	r0, r3
 8020ce8:	3710      	adds	r7, #16
 8020cea:	46bd      	mov	sp, r7
 8020cec:	bd80      	pop	{r7, pc}

08020cee <HAL_DMA_Abort_IT>:
  * @param  hdma   pointer to a DMA_HandleTypeDef structure that contains
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
 8020cee:	b480      	push	{r7}
 8020cf0:	b083      	sub	sp, #12
 8020cf2:	af00      	add	r7, sp, #0
 8020cf4:	6078      	str	r0, [r7, #4]
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8020cf6:	687b      	ldr	r3, [r7, #4]
 8020cf8:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8020cfc:	b2db      	uxtb	r3, r3
 8020cfe:	2b02      	cmp	r3, #2
 8020d00:	d004      	beq.n	8020d0c <HAL_DMA_Abort_IT+0x1e>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8020d02:	687b      	ldr	r3, [r7, #4]
 8020d04:	2280      	movs	r2, #128	; 0x80
 8020d06:	655a      	str	r2, [r3, #84]	; 0x54
    return HAL_ERROR;
 8020d08:	2301      	movs	r3, #1
 8020d0a:	e00c      	b.n	8020d26 <HAL_DMA_Abort_IT+0x38>
  }
  else
  {
    /* Set Abort State  */
    hdma->State = HAL_DMA_STATE_ABORT;
 8020d0c:	687b      	ldr	r3, [r7, #4]
 8020d0e:	2205      	movs	r2, #5
 8020d10:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 8020d14:	687b      	ldr	r3, [r7, #4]
 8020d16:	681b      	ldr	r3, [r3, #0]
 8020d18:	681a      	ldr	r2, [r3, #0]
 8020d1a:	687b      	ldr	r3, [r7, #4]
 8020d1c:	681b      	ldr	r3, [r3, #0]
 8020d1e:	f022 0201 	bic.w	r2, r2, #1
 8020d22:	601a      	str	r2, [r3, #0]
  }

  return HAL_OK;
 8020d24:	2300      	movs	r3, #0
}
 8020d26:	4618      	mov	r0, r3
 8020d28:	370c      	adds	r7, #12
 8020d2a:	46bd      	mov	sp, r7
 8020d2c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8020d30:	4770      	bx	lr
	...

08020d34 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8020d34:	b480      	push	{r7}
 8020d36:	b089      	sub	sp, #36	; 0x24
 8020d38:	af00      	add	r7, sp, #0
 8020d3a:	6078      	str	r0, [r7, #4]
 8020d3c:	6039      	str	r1, [r7, #0]
  uint32_t position = 0x00;
 8020d3e:	2300      	movs	r3, #0
 8020d40:	61fb      	str	r3, [r7, #28]
  uint32_t ioposition = 0x00;
 8020d42:	2300      	movs	r3, #0
 8020d44:	617b      	str	r3, [r7, #20]
  uint32_t iocurrent = 0x00;
 8020d46:	2300      	movs	r3, #0
 8020d48:	613b      	str	r3, [r7, #16]
  uint32_t temp = 0x00;
 8020d4a:	2300      	movs	r3, #0
 8020d4c:	61bb      	str	r3, [r7, #24]
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
  assert_param(IS_GPIO_PULL(GPIO_Init->Pull));

  /* Configure the port pins */
  for(position = 0; position < GPIO_NUMBER; position++)
 8020d4e:	2300      	movs	r3, #0
 8020d50:	61fb      	str	r3, [r7, #28]
 8020d52:	e175      	b.n	8021040 <HAL_GPIO_Init+0x30c>
  {
    /* Get the IO position */
    ioposition = ((uint32_t)0x01) << position;
 8020d54:	2201      	movs	r2, #1
 8020d56:	69fb      	ldr	r3, [r7, #28]
 8020d58:	fa02 f303 	lsl.w	r3, r2, r3
 8020d5c:	617b      	str	r3, [r7, #20]
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8020d5e:	683b      	ldr	r3, [r7, #0]
 8020d60:	681b      	ldr	r3, [r3, #0]
 8020d62:	697a      	ldr	r2, [r7, #20]
 8020d64:	4013      	ands	r3, r2
 8020d66:	613b      	str	r3, [r7, #16]

    if(iocurrent == ioposition)
 8020d68:	693a      	ldr	r2, [r7, #16]
 8020d6a:	697b      	ldr	r3, [r7, #20]
 8020d6c:	429a      	cmp	r2, r3
 8020d6e:	f040 8164 	bne.w	802103a <HAL_GPIO_Init+0x306>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8020d72:	683b      	ldr	r3, [r7, #0]
 8020d74:	685b      	ldr	r3, [r3, #4]
 8020d76:	2b01      	cmp	r3, #1
 8020d78:	d00b      	beq.n	8020d92 <HAL_GPIO_Init+0x5e>
 8020d7a:	683b      	ldr	r3, [r7, #0]
 8020d7c:	685b      	ldr	r3, [r3, #4]
 8020d7e:	2b02      	cmp	r3, #2
 8020d80:	d007      	beq.n	8020d92 <HAL_GPIO_Init+0x5e>
         (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8020d82:	683b      	ldr	r3, [r7, #0]
 8020d84:	685b      	ldr	r3, [r3, #4]
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8020d86:	2b11      	cmp	r3, #17
 8020d88:	d003      	beq.n	8020d92 <HAL_GPIO_Init+0x5e>
         (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8020d8a:	683b      	ldr	r3, [r7, #0]
 8020d8c:	685b      	ldr	r3, [r3, #4]
 8020d8e:	2b12      	cmp	r3, #18
 8020d90:	d130      	bne.n	8020df4 <HAL_GPIO_Init+0xc0>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR; 
 8020d92:	687b      	ldr	r3, [r7, #4]
 8020d94:	689b      	ldr	r3, [r3, #8]
 8020d96:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2));
 8020d98:	69fb      	ldr	r3, [r7, #28]
 8020d9a:	005b      	lsls	r3, r3, #1
 8020d9c:	2203      	movs	r2, #3
 8020d9e:	fa02 f303 	lsl.w	r3, r2, r3
 8020da2:	43db      	mvns	r3, r3
 8020da4:	69ba      	ldr	r2, [r7, #24]
 8020da6:	4013      	ands	r3, r2
 8020da8:	61bb      	str	r3, [r7, #24]
        temp |= (GPIO_Init->Speed << (position * 2));
 8020daa:	683b      	ldr	r3, [r7, #0]
 8020dac:	68da      	ldr	r2, [r3, #12]
 8020dae:	69fb      	ldr	r3, [r7, #28]
 8020db0:	005b      	lsls	r3, r3, #1
 8020db2:	fa02 f303 	lsl.w	r3, r2, r3
 8020db6:	69ba      	ldr	r2, [r7, #24]
 8020db8:	4313      	orrs	r3, r2
 8020dba:	61bb      	str	r3, [r7, #24]
        GPIOx->OSPEEDR = temp;
 8020dbc:	687b      	ldr	r3, [r7, #4]
 8020dbe:	69ba      	ldr	r2, [r7, #24]
 8020dc0:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 8020dc2:	687b      	ldr	r3, [r7, #4]
 8020dc4:	685b      	ldr	r3, [r3, #4]
 8020dc6:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8020dc8:	2201      	movs	r2, #1
 8020dca:	69fb      	ldr	r3, [r7, #28]
 8020dcc:	fa02 f303 	lsl.w	r3, r2, r3
 8020dd0:	43db      	mvns	r3, r3
 8020dd2:	69ba      	ldr	r2, [r7, #24]
 8020dd4:	4013      	ands	r3, r2
 8020dd6:	61bb      	str	r3, [r7, #24]
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4) << position);
 8020dd8:	683b      	ldr	r3, [r7, #0]
 8020dda:	685b      	ldr	r3, [r3, #4]
 8020ddc:	091b      	lsrs	r3, r3, #4
 8020dde:	f003 0201 	and.w	r2, r3, #1
 8020de2:	69fb      	ldr	r3, [r7, #28]
 8020de4:	fa02 f303 	lsl.w	r3, r2, r3
 8020de8:	69ba      	ldr	r2, [r7, #24]
 8020dea:	4313      	orrs	r3, r2
 8020dec:	61bb      	str	r3, [r7, #24]
        GPIOx->OTYPER = temp;
 8020dee:	687b      	ldr	r3, [r7, #4]
 8020df0:	69ba      	ldr	r2, [r7, #24]
 8020df2:	605a      	str	r2, [r3, #4]
      }

      /* Activate the Pull-up or Pull down resistor for the current IO */
      temp = GPIOx->PUPDR;
 8020df4:	687b      	ldr	r3, [r7, #4]
 8020df6:	68db      	ldr	r3, [r3, #12]
 8020df8:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2));
 8020dfa:	69fb      	ldr	r3, [r7, #28]
 8020dfc:	005b      	lsls	r3, r3, #1
 8020dfe:	2203      	movs	r2, #3
 8020e00:	fa02 f303 	lsl.w	r3, r2, r3
 8020e04:	43db      	mvns	r3, r3
 8020e06:	69ba      	ldr	r2, [r7, #24]
 8020e08:	4013      	ands	r3, r2
 8020e0a:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Pull) << (position * 2));
 8020e0c:	683b      	ldr	r3, [r7, #0]
 8020e0e:	689a      	ldr	r2, [r3, #8]
 8020e10:	69fb      	ldr	r3, [r7, #28]
 8020e12:	005b      	lsls	r3, r3, #1
 8020e14:	fa02 f303 	lsl.w	r3, r2, r3
 8020e18:	69ba      	ldr	r2, [r7, #24]
 8020e1a:	4313      	orrs	r3, r2
 8020e1c:	61bb      	str	r3, [r7, #24]
      GPIOx->PUPDR = temp;
 8020e1e:	687b      	ldr	r3, [r7, #4]
 8020e20:	69ba      	ldr	r2, [r7, #24]
 8020e22:	60da      	str	r2, [r3, #12]

      /* In case of Alternate function mode selection */
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8020e24:	683b      	ldr	r3, [r7, #0]
 8020e26:	685b      	ldr	r3, [r3, #4]
 8020e28:	2b02      	cmp	r3, #2
 8020e2a:	d003      	beq.n	8020e34 <HAL_GPIO_Init+0x100>
 8020e2c:	683b      	ldr	r3, [r7, #0]
 8020e2e:	685b      	ldr	r3, [r3, #4]
 8020e30:	2b12      	cmp	r3, #18
 8020e32:	d123      	bne.n	8020e7c <HAL_GPIO_Init+0x148>
      {
        /* Check the Alternate function parameter */
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));

        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3];
 8020e34:	69fb      	ldr	r3, [r7, #28]
 8020e36:	08da      	lsrs	r2, r3, #3
 8020e38:	687b      	ldr	r3, [r7, #4]
 8020e3a:	3208      	adds	r2, #8
 8020e3c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8020e40:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)0xF << ((uint32_t)(position & (uint32_t)0x07) * 4)) ;
 8020e42:	69fb      	ldr	r3, [r7, #28]
 8020e44:	f003 0307 	and.w	r3, r3, #7
 8020e48:	009b      	lsls	r3, r3, #2
 8020e4a:	220f      	movs	r2, #15
 8020e4c:	fa02 f303 	lsl.w	r3, r2, r3
 8020e50:	43db      	mvns	r3, r3
 8020e52:	69ba      	ldr	r2, [r7, #24]
 8020e54:	4013      	ands	r3, r2
 8020e56:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & (uint32_t)0x07) * 4));
 8020e58:	683b      	ldr	r3, [r7, #0]
 8020e5a:	691a      	ldr	r2, [r3, #16]
 8020e5c:	69fb      	ldr	r3, [r7, #28]
 8020e5e:	f003 0307 	and.w	r3, r3, #7
 8020e62:	009b      	lsls	r3, r3, #2
 8020e64:	fa02 f303 	lsl.w	r3, r2, r3
 8020e68:	69ba      	ldr	r2, [r7, #24]
 8020e6a:	4313      	orrs	r3, r2
 8020e6c:	61bb      	str	r3, [r7, #24]
        GPIOx->AFR[position >> 3] = temp;
 8020e6e:	69fb      	ldr	r3, [r7, #28]
 8020e70:	08da      	lsrs	r2, r3, #3
 8020e72:	687b      	ldr	r3, [r7, #4]
 8020e74:	3208      	adds	r2, #8
 8020e76:	69b9      	ldr	r1, [r7, #24]
 8020e78:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
      }
      
      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 8020e7c:	687b      	ldr	r3, [r7, #4]
 8020e7e:	681b      	ldr	r3, [r3, #0]
 8020e80:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2));
 8020e82:	69fb      	ldr	r3, [r7, #28]
 8020e84:	005b      	lsls	r3, r3, #1
 8020e86:	2203      	movs	r2, #3
 8020e88:	fa02 f303 	lsl.w	r3, r2, r3
 8020e8c:	43db      	mvns	r3, r3
 8020e8e:	69ba      	ldr	r2, [r7, #24]
 8020e90:	4013      	ands	r3, r2
 8020e92:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2));
 8020e94:	683b      	ldr	r3, [r7, #0]
 8020e96:	685b      	ldr	r3, [r3, #4]
 8020e98:	f003 0203 	and.w	r2, r3, #3
 8020e9c:	69fb      	ldr	r3, [r7, #28]
 8020e9e:	005b      	lsls	r3, r3, #1
 8020ea0:	fa02 f303 	lsl.w	r3, r2, r3
 8020ea4:	69ba      	ldr	r2, [r7, #24]
 8020ea6:	4313      	orrs	r3, r2
 8020ea8:	61bb      	str	r3, [r7, #24]
      GPIOx->MODER = temp;
 8020eaa:	687b      	ldr	r3, [r7, #4]
 8020eac:	69ba      	ldr	r2, [r7, #24]
 8020eae:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 8020eb0:	683b      	ldr	r3, [r7, #0]
 8020eb2:	685b      	ldr	r3, [r3, #4]
 8020eb4:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8020eb8:	2b00      	cmp	r3, #0
 8020eba:	f000 80be 	beq.w	802103a <HAL_GPIO_Init+0x306>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8020ebe:	4b66      	ldr	r3, [pc, #408]	; (8021058 <HAL_GPIO_Init+0x324>)
 8020ec0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8020ec2:	4a65      	ldr	r2, [pc, #404]	; (8021058 <HAL_GPIO_Init+0x324>)
 8020ec4:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8020ec8:	6453      	str	r3, [r2, #68]	; 0x44
 8020eca:	4b63      	ldr	r3, [pc, #396]	; (8021058 <HAL_GPIO_Init+0x324>)
 8020ecc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8020ece:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8020ed2:	60fb      	str	r3, [r7, #12]
 8020ed4:	68fb      	ldr	r3, [r7, #12]

        temp = SYSCFG->EXTICR[position >> 2];
 8020ed6:	4a61      	ldr	r2, [pc, #388]	; (802105c <HAL_GPIO_Init+0x328>)
 8020ed8:	69fb      	ldr	r3, [r7, #28]
 8020eda:	089b      	lsrs	r3, r3, #2
 8020edc:	3302      	adds	r3, #2
 8020ede:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8020ee2:	61bb      	str	r3, [r7, #24]
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
 8020ee4:	69fb      	ldr	r3, [r7, #28]
 8020ee6:	f003 0303 	and.w	r3, r3, #3
 8020eea:	009b      	lsls	r3, r3, #2
 8020eec:	220f      	movs	r2, #15
 8020eee:	fa02 f303 	lsl.w	r3, r2, r3
 8020ef2:	43db      	mvns	r3, r3
 8020ef4:	69ba      	ldr	r2, [r7, #24]
 8020ef6:	4013      	ands	r3, r2
 8020ef8:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03)));
 8020efa:	687b      	ldr	r3, [r7, #4]
 8020efc:	4a58      	ldr	r2, [pc, #352]	; (8021060 <HAL_GPIO_Init+0x32c>)
 8020efe:	4293      	cmp	r3, r2
 8020f00:	d037      	beq.n	8020f72 <HAL_GPIO_Init+0x23e>
 8020f02:	687b      	ldr	r3, [r7, #4]
 8020f04:	4a57      	ldr	r2, [pc, #348]	; (8021064 <HAL_GPIO_Init+0x330>)
 8020f06:	4293      	cmp	r3, r2
 8020f08:	d031      	beq.n	8020f6e <HAL_GPIO_Init+0x23a>
 8020f0a:	687b      	ldr	r3, [r7, #4]
 8020f0c:	4a56      	ldr	r2, [pc, #344]	; (8021068 <HAL_GPIO_Init+0x334>)
 8020f0e:	4293      	cmp	r3, r2
 8020f10:	d02b      	beq.n	8020f6a <HAL_GPIO_Init+0x236>
 8020f12:	687b      	ldr	r3, [r7, #4]
 8020f14:	4a55      	ldr	r2, [pc, #340]	; (802106c <HAL_GPIO_Init+0x338>)
 8020f16:	4293      	cmp	r3, r2
 8020f18:	d025      	beq.n	8020f66 <HAL_GPIO_Init+0x232>
 8020f1a:	687b      	ldr	r3, [r7, #4]
 8020f1c:	4a54      	ldr	r2, [pc, #336]	; (8021070 <HAL_GPIO_Init+0x33c>)
 8020f1e:	4293      	cmp	r3, r2
 8020f20:	d01f      	beq.n	8020f62 <HAL_GPIO_Init+0x22e>
 8020f22:	687b      	ldr	r3, [r7, #4]
 8020f24:	4a53      	ldr	r2, [pc, #332]	; (8021074 <HAL_GPIO_Init+0x340>)
 8020f26:	4293      	cmp	r3, r2
 8020f28:	d019      	beq.n	8020f5e <HAL_GPIO_Init+0x22a>
 8020f2a:	687b      	ldr	r3, [r7, #4]
 8020f2c:	4a52      	ldr	r2, [pc, #328]	; (8021078 <HAL_GPIO_Init+0x344>)
 8020f2e:	4293      	cmp	r3, r2
 8020f30:	d013      	beq.n	8020f5a <HAL_GPIO_Init+0x226>
 8020f32:	687b      	ldr	r3, [r7, #4]
 8020f34:	4a51      	ldr	r2, [pc, #324]	; (802107c <HAL_GPIO_Init+0x348>)
 8020f36:	4293      	cmp	r3, r2
 8020f38:	d00d      	beq.n	8020f56 <HAL_GPIO_Init+0x222>
 8020f3a:	687b      	ldr	r3, [r7, #4]
 8020f3c:	4a50      	ldr	r2, [pc, #320]	; (8021080 <HAL_GPIO_Init+0x34c>)
 8020f3e:	4293      	cmp	r3, r2
 8020f40:	d007      	beq.n	8020f52 <HAL_GPIO_Init+0x21e>
 8020f42:	687b      	ldr	r3, [r7, #4]
 8020f44:	4a4f      	ldr	r2, [pc, #316]	; (8021084 <HAL_GPIO_Init+0x350>)
 8020f46:	4293      	cmp	r3, r2
 8020f48:	d101      	bne.n	8020f4e <HAL_GPIO_Init+0x21a>
 8020f4a:	2309      	movs	r3, #9
 8020f4c:	e012      	b.n	8020f74 <HAL_GPIO_Init+0x240>
 8020f4e:	230a      	movs	r3, #10
 8020f50:	e010      	b.n	8020f74 <HAL_GPIO_Init+0x240>
 8020f52:	2308      	movs	r3, #8
 8020f54:	e00e      	b.n	8020f74 <HAL_GPIO_Init+0x240>
 8020f56:	2307      	movs	r3, #7
 8020f58:	e00c      	b.n	8020f74 <HAL_GPIO_Init+0x240>
 8020f5a:	2306      	movs	r3, #6
 8020f5c:	e00a      	b.n	8020f74 <HAL_GPIO_Init+0x240>
 8020f5e:	2305      	movs	r3, #5
 8020f60:	e008      	b.n	8020f74 <HAL_GPIO_Init+0x240>
 8020f62:	2304      	movs	r3, #4
 8020f64:	e006      	b.n	8020f74 <HAL_GPIO_Init+0x240>
 8020f66:	2303      	movs	r3, #3
 8020f68:	e004      	b.n	8020f74 <HAL_GPIO_Init+0x240>
 8020f6a:	2302      	movs	r3, #2
 8020f6c:	e002      	b.n	8020f74 <HAL_GPIO_Init+0x240>
 8020f6e:	2301      	movs	r3, #1
 8020f70:	e000      	b.n	8020f74 <HAL_GPIO_Init+0x240>
 8020f72:	2300      	movs	r3, #0
 8020f74:	69fa      	ldr	r2, [r7, #28]
 8020f76:	f002 0203 	and.w	r2, r2, #3
 8020f7a:	0092      	lsls	r2, r2, #2
 8020f7c:	4093      	lsls	r3, r2
 8020f7e:	69ba      	ldr	r2, [r7, #24]
 8020f80:	4313      	orrs	r3, r2
 8020f82:	61bb      	str	r3, [r7, #24]
        SYSCFG->EXTICR[position >> 2] = temp;
 8020f84:	4935      	ldr	r1, [pc, #212]	; (802105c <HAL_GPIO_Init+0x328>)
 8020f86:	69fb      	ldr	r3, [r7, #28]
 8020f88:	089b      	lsrs	r3, r3, #2
 8020f8a:	3302      	adds	r3, #2
 8020f8c:	69ba      	ldr	r2, [r7, #24]
 8020f8e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8020f92:	4b3d      	ldr	r3, [pc, #244]	; (8021088 <HAL_GPIO_Init+0x354>)
 8020f94:	681b      	ldr	r3, [r3, #0]
 8020f96:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8020f98:	693b      	ldr	r3, [r7, #16]
 8020f9a:	43db      	mvns	r3, r3
 8020f9c:	69ba      	ldr	r2, [r7, #24]
 8020f9e:	4013      	ands	r3, r2
 8020fa0:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 8020fa2:	683b      	ldr	r3, [r7, #0]
 8020fa4:	685b      	ldr	r3, [r3, #4]
 8020fa6:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8020faa:	2b00      	cmp	r3, #0
 8020fac:	d003      	beq.n	8020fb6 <HAL_GPIO_Init+0x282>
        {
          temp |= iocurrent;
 8020fae:	69ba      	ldr	r2, [r7, #24]
 8020fb0:	693b      	ldr	r3, [r7, #16]
 8020fb2:	4313      	orrs	r3, r2
 8020fb4:	61bb      	str	r3, [r7, #24]
        }
        EXTI->IMR = temp;
 8020fb6:	4a34      	ldr	r2, [pc, #208]	; (8021088 <HAL_GPIO_Init+0x354>)
 8020fb8:	69bb      	ldr	r3, [r7, #24]
 8020fba:	6013      	str	r3, [r2, #0]

        temp = EXTI->EMR;
 8020fbc:	4b32      	ldr	r3, [pc, #200]	; (8021088 <HAL_GPIO_Init+0x354>)
 8020fbe:	685b      	ldr	r3, [r3, #4]
 8020fc0:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8020fc2:	693b      	ldr	r3, [r7, #16]
 8020fc4:	43db      	mvns	r3, r3
 8020fc6:	69ba      	ldr	r2, [r7, #24]
 8020fc8:	4013      	ands	r3, r2
 8020fca:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 8020fcc:	683b      	ldr	r3, [r7, #0]
 8020fce:	685b      	ldr	r3, [r3, #4]
 8020fd0:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8020fd4:	2b00      	cmp	r3, #0
 8020fd6:	d003      	beq.n	8020fe0 <HAL_GPIO_Init+0x2ac>
        {
          temp |= iocurrent;
 8020fd8:	69ba      	ldr	r2, [r7, #24]
 8020fda:	693b      	ldr	r3, [r7, #16]
 8020fdc:	4313      	orrs	r3, r2
 8020fde:	61bb      	str	r3, [r7, #24]
        }
        EXTI->EMR = temp;
 8020fe0:	4a29      	ldr	r2, [pc, #164]	; (8021088 <HAL_GPIO_Init+0x354>)
 8020fe2:	69bb      	ldr	r3, [r7, #24]
 8020fe4:	6053      	str	r3, [r2, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8020fe6:	4b28      	ldr	r3, [pc, #160]	; (8021088 <HAL_GPIO_Init+0x354>)
 8020fe8:	689b      	ldr	r3, [r3, #8]
 8020fea:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8020fec:	693b      	ldr	r3, [r7, #16]
 8020fee:	43db      	mvns	r3, r3
 8020ff0:	69ba      	ldr	r2, [r7, #24]
 8020ff2:	4013      	ands	r3, r2
 8020ff4:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 8020ff6:	683b      	ldr	r3, [r7, #0]
 8020ff8:	685b      	ldr	r3, [r3, #4]
 8020ffa:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8020ffe:	2b00      	cmp	r3, #0
 8021000:	d003      	beq.n	802100a <HAL_GPIO_Init+0x2d6>
        {
          temp |= iocurrent;
 8021002:	69ba      	ldr	r2, [r7, #24]
 8021004:	693b      	ldr	r3, [r7, #16]
 8021006:	4313      	orrs	r3, r2
 8021008:	61bb      	str	r3, [r7, #24]
        }
        EXTI->RTSR = temp;
 802100a:	4a1f      	ldr	r2, [pc, #124]	; (8021088 <HAL_GPIO_Init+0x354>)
 802100c:	69bb      	ldr	r3, [r7, #24]
 802100e:	6093      	str	r3, [r2, #8]

        temp = EXTI->FTSR;
 8021010:	4b1d      	ldr	r3, [pc, #116]	; (8021088 <HAL_GPIO_Init+0x354>)
 8021012:	68db      	ldr	r3, [r3, #12]
 8021014:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8021016:	693b      	ldr	r3, [r7, #16]
 8021018:	43db      	mvns	r3, r3
 802101a:	69ba      	ldr	r2, [r7, #24]
 802101c:	4013      	ands	r3, r2
 802101e:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 8021020:	683b      	ldr	r3, [r7, #0]
 8021022:	685b      	ldr	r3, [r3, #4]
 8021024:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8021028:	2b00      	cmp	r3, #0
 802102a:	d003      	beq.n	8021034 <HAL_GPIO_Init+0x300>
        {
          temp |= iocurrent;
 802102c:	69ba      	ldr	r2, [r7, #24]
 802102e:	693b      	ldr	r3, [r7, #16]
 8021030:	4313      	orrs	r3, r2
 8021032:	61bb      	str	r3, [r7, #24]
        }
        EXTI->FTSR = temp;
 8021034:	4a14      	ldr	r2, [pc, #80]	; (8021088 <HAL_GPIO_Init+0x354>)
 8021036:	69bb      	ldr	r3, [r7, #24]
 8021038:	60d3      	str	r3, [r2, #12]
  for(position = 0; position < GPIO_NUMBER; position++)
 802103a:	69fb      	ldr	r3, [r7, #28]
 802103c:	3301      	adds	r3, #1
 802103e:	61fb      	str	r3, [r7, #28]
 8021040:	69fb      	ldr	r3, [r7, #28]
 8021042:	2b0f      	cmp	r3, #15
 8021044:	f67f ae86 	bls.w	8020d54 <HAL_GPIO_Init+0x20>
      }
    }
  }
}
 8021048:	bf00      	nop
 802104a:	bf00      	nop
 802104c:	3724      	adds	r7, #36	; 0x24
 802104e:	46bd      	mov	sp, r7
 8021050:	f85d 7b04 	ldr.w	r7, [sp], #4
 8021054:	4770      	bx	lr
 8021056:	bf00      	nop
 8021058:	40023800 	.word	0x40023800
 802105c:	40013800 	.word	0x40013800
 8021060:	40020000 	.word	0x40020000
 8021064:	40020400 	.word	0x40020400
 8021068:	40020800 	.word	0x40020800
 802106c:	40020c00 	.word	0x40020c00
 8021070:	40021000 	.word	0x40021000
 8021074:	40021400 	.word	0x40021400
 8021078:	40021800 	.word	0x40021800
 802107c:	40021c00 	.word	0x40021c00
 8021080:	40022000 	.word	0x40022000
 8021084:	40022400 	.word	0x40022400
 8021088:	40013c00 	.word	0x40013c00

0802108c <HAL_PWREx_EnableOverDrive>:
  *         During the Over-drive switch activation, no peripheral clocks should be enabled.   
  *         The peripheral clocks must be enabled once the Over-drive mode is activated.   
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
 802108c:	b580      	push	{r7, lr}
 802108e:	b082      	sub	sp, #8
 8021090:	af00      	add	r7, sp, #0
  uint32_t tickstart = 0;
 8021092:	2300      	movs	r3, #0
 8021094:	607b      	str	r3, [r7, #4]

  __HAL_RCC_PWR_CLK_ENABLE();
 8021096:	4b23      	ldr	r3, [pc, #140]	; (8021124 <HAL_PWREx_EnableOverDrive+0x98>)
 8021098:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 802109a:	4a22      	ldr	r2, [pc, #136]	; (8021124 <HAL_PWREx_EnableOverDrive+0x98>)
 802109c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80210a0:	6413      	str	r3, [r2, #64]	; 0x40
 80210a2:	4b20      	ldr	r3, [pc, #128]	; (8021124 <HAL_PWREx_EnableOverDrive+0x98>)
 80210a4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80210a6:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80210aa:	603b      	str	r3, [r7, #0]
 80210ac:	683b      	ldr	r3, [r7, #0]
  
  /* Enable the Over-drive to extend the clock frequency to 216 MHz */
  __HAL_PWR_OVERDRIVE_ENABLE();
 80210ae:	4b1e      	ldr	r3, [pc, #120]	; (8021128 <HAL_PWREx_EnableOverDrive+0x9c>)
 80210b0:	681b      	ldr	r3, [r3, #0]
 80210b2:	4a1d      	ldr	r2, [pc, #116]	; (8021128 <HAL_PWREx_EnableOverDrive+0x9c>)
 80210b4:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80210b8:	6013      	str	r3, [r2, #0]

  /* Get tick */
  tickstart = HAL_GetTick();
 80210ba:	f7ff fc67 	bl	802098c <HAL_GetTick>
 80210be:	6078      	str	r0, [r7, #4]

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 80210c0:	e009      	b.n	80210d6 <HAL_PWREx_EnableOverDrive+0x4a>
  {
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 80210c2:	f7ff fc63 	bl	802098c <HAL_GetTick>
 80210c6:	4602      	mov	r2, r0
 80210c8:	687b      	ldr	r3, [r7, #4]
 80210ca:	1ad3      	subs	r3, r2, r3
 80210cc:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 80210d0:	d901      	bls.n	80210d6 <HAL_PWREx_EnableOverDrive+0x4a>
    {
      return HAL_TIMEOUT;
 80210d2:	2303      	movs	r3, #3
 80210d4:	e022      	b.n	802111c <HAL_PWREx_EnableOverDrive+0x90>
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 80210d6:	4b14      	ldr	r3, [pc, #80]	; (8021128 <HAL_PWREx_EnableOverDrive+0x9c>)
 80210d8:	685b      	ldr	r3, [r3, #4]
 80210da:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80210de:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80210e2:	d1ee      	bne.n	80210c2 <HAL_PWREx_EnableOverDrive+0x36>
    }
  }
  
  /* Enable the Over-drive switch */
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 80210e4:	4b10      	ldr	r3, [pc, #64]	; (8021128 <HAL_PWREx_EnableOverDrive+0x9c>)
 80210e6:	681b      	ldr	r3, [r3, #0]
 80210e8:	4a0f      	ldr	r2, [pc, #60]	; (8021128 <HAL_PWREx_EnableOverDrive+0x9c>)
 80210ea:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80210ee:	6013      	str	r3, [r2, #0]

  /* Get tick */
  tickstart = HAL_GetTick();
 80210f0:	f7ff fc4c 	bl	802098c <HAL_GetTick>
 80210f4:	6078      	str	r0, [r7, #4]

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 80210f6:	e009      	b.n	802110c <HAL_PWREx_EnableOverDrive+0x80>
  {
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 80210f8:	f7ff fc48 	bl	802098c <HAL_GetTick>
 80210fc:	4602      	mov	r2, r0
 80210fe:	687b      	ldr	r3, [r7, #4]
 8021100:	1ad3      	subs	r3, r2, r3
 8021102:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8021106:	d901      	bls.n	802110c <HAL_PWREx_EnableOverDrive+0x80>
    {
      return HAL_TIMEOUT;
 8021108:	2303      	movs	r3, #3
 802110a:	e007      	b.n	802111c <HAL_PWREx_EnableOverDrive+0x90>
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 802110c:	4b06      	ldr	r3, [pc, #24]	; (8021128 <HAL_PWREx_EnableOverDrive+0x9c>)
 802110e:	685b      	ldr	r3, [r3, #4]
 8021110:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8021114:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8021118:	d1ee      	bne.n	80210f8 <HAL_PWREx_EnableOverDrive+0x6c>
    }
  } 
  return HAL_OK;
 802111a:	2300      	movs	r3, #0
}
 802111c:	4618      	mov	r0, r3
 802111e:	3708      	adds	r7, #8
 8021120:	46bd      	mov	sp, r7
 8021122:	bd80      	pop	{r7, pc}
 8021124:	40023800 	.word	0x40023800
 8021128:	40007000 	.word	0x40007000

0802112c <HAL_RCC_OscConfig>:
  *         supported by this function. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 802112c:	b580      	push	{r7, lr}
 802112e:	b086      	sub	sp, #24
 8021130:	af00      	add	r7, sp, #0
 8021132:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;
  uint32_t pll_config;
  FlagStatus pwrclkchanged = RESET;
 8021134:	2300      	movs	r3, #0
 8021136:	75fb      	strb	r3, [r7, #23]

  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
 8021138:	687b      	ldr	r3, [r7, #4]
 802113a:	2b00      	cmp	r3, #0
 802113c:	d101      	bne.n	8021142 <HAL_RCC_OscConfig+0x16>
  {
    return HAL_ERROR;
 802113e:	2301      	movs	r3, #1
 8021140:	e291      	b.n	8021666 <HAL_RCC_OscConfig+0x53a>

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));

  /*------------------------------- HSE Configuration ------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8021142:	687b      	ldr	r3, [r7, #4]
 8021144:	681b      	ldr	r3, [r3, #0]
 8021146:	f003 0301 	and.w	r3, r3, #1
 802114a:	2b00      	cmp	r3, #0
 802114c:	f000 8087 	beq.w	802125e <HAL_RCC_OscConfig+0x132>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL, It can not be disabled */
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE)
 8021150:	4b96      	ldr	r3, [pc, #600]	; (80213ac <HAL_RCC_OscConfig+0x280>)
 8021152:	689b      	ldr	r3, [r3, #8]
 8021154:	f003 030c 	and.w	r3, r3, #12
 8021158:	2b04      	cmp	r3, #4
 802115a:	d00c      	beq.n	8021176 <HAL_RCC_OscConfig+0x4a>
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 802115c:	4b93      	ldr	r3, [pc, #588]	; (80213ac <HAL_RCC_OscConfig+0x280>)
 802115e:	689b      	ldr	r3, [r3, #8]
 8021160:	f003 030c 	and.w	r3, r3, #12
 8021164:	2b08      	cmp	r3, #8
 8021166:	d112      	bne.n	802118e <HAL_RCC_OscConfig+0x62>
 8021168:	4b90      	ldr	r3, [pc, #576]	; (80213ac <HAL_RCC_OscConfig+0x280>)
 802116a:	685b      	ldr	r3, [r3, #4]
 802116c:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8021170:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8021174:	d10b      	bne.n	802118e <HAL_RCC_OscConfig+0x62>
    {
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8021176:	4b8d      	ldr	r3, [pc, #564]	; (80213ac <HAL_RCC_OscConfig+0x280>)
 8021178:	681b      	ldr	r3, [r3, #0]
 802117a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 802117e:	2b00      	cmp	r3, #0
 8021180:	d06c      	beq.n	802125c <HAL_RCC_OscConfig+0x130>
 8021182:	687b      	ldr	r3, [r7, #4]
 8021184:	685b      	ldr	r3, [r3, #4]
 8021186:	2b00      	cmp	r3, #0
 8021188:	d168      	bne.n	802125c <HAL_RCC_OscConfig+0x130>
      {
        return HAL_ERROR;
 802118a:	2301      	movs	r3, #1
 802118c:	e26b      	b.n	8021666 <HAL_RCC_OscConfig+0x53a>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 802118e:	687b      	ldr	r3, [r7, #4]
 8021190:	685b      	ldr	r3, [r3, #4]
 8021192:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8021196:	d106      	bne.n	80211a6 <HAL_RCC_OscConfig+0x7a>
 8021198:	4b84      	ldr	r3, [pc, #528]	; (80213ac <HAL_RCC_OscConfig+0x280>)
 802119a:	681b      	ldr	r3, [r3, #0]
 802119c:	4a83      	ldr	r2, [pc, #524]	; (80213ac <HAL_RCC_OscConfig+0x280>)
 802119e:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80211a2:	6013      	str	r3, [r2, #0]
 80211a4:	e02e      	b.n	8021204 <HAL_RCC_OscConfig+0xd8>
 80211a6:	687b      	ldr	r3, [r7, #4]
 80211a8:	685b      	ldr	r3, [r3, #4]
 80211aa:	2b00      	cmp	r3, #0
 80211ac:	d10c      	bne.n	80211c8 <HAL_RCC_OscConfig+0x9c>
 80211ae:	4b7f      	ldr	r3, [pc, #508]	; (80213ac <HAL_RCC_OscConfig+0x280>)
 80211b0:	681b      	ldr	r3, [r3, #0]
 80211b2:	4a7e      	ldr	r2, [pc, #504]	; (80213ac <HAL_RCC_OscConfig+0x280>)
 80211b4:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80211b8:	6013      	str	r3, [r2, #0]
 80211ba:	4b7c      	ldr	r3, [pc, #496]	; (80213ac <HAL_RCC_OscConfig+0x280>)
 80211bc:	681b      	ldr	r3, [r3, #0]
 80211be:	4a7b      	ldr	r2, [pc, #492]	; (80213ac <HAL_RCC_OscConfig+0x280>)
 80211c0:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80211c4:	6013      	str	r3, [r2, #0]
 80211c6:	e01d      	b.n	8021204 <HAL_RCC_OscConfig+0xd8>
 80211c8:	687b      	ldr	r3, [r7, #4]
 80211ca:	685b      	ldr	r3, [r3, #4]
 80211cc:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 80211d0:	d10c      	bne.n	80211ec <HAL_RCC_OscConfig+0xc0>
 80211d2:	4b76      	ldr	r3, [pc, #472]	; (80213ac <HAL_RCC_OscConfig+0x280>)
 80211d4:	681b      	ldr	r3, [r3, #0]
 80211d6:	4a75      	ldr	r2, [pc, #468]	; (80213ac <HAL_RCC_OscConfig+0x280>)
 80211d8:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80211dc:	6013      	str	r3, [r2, #0]
 80211de:	4b73      	ldr	r3, [pc, #460]	; (80213ac <HAL_RCC_OscConfig+0x280>)
 80211e0:	681b      	ldr	r3, [r3, #0]
 80211e2:	4a72      	ldr	r2, [pc, #456]	; (80213ac <HAL_RCC_OscConfig+0x280>)
 80211e4:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80211e8:	6013      	str	r3, [r2, #0]
 80211ea:	e00b      	b.n	8021204 <HAL_RCC_OscConfig+0xd8>
 80211ec:	4b6f      	ldr	r3, [pc, #444]	; (80213ac <HAL_RCC_OscConfig+0x280>)
 80211ee:	681b      	ldr	r3, [r3, #0]
 80211f0:	4a6e      	ldr	r2, [pc, #440]	; (80213ac <HAL_RCC_OscConfig+0x280>)
 80211f2:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80211f6:	6013      	str	r3, [r2, #0]
 80211f8:	4b6c      	ldr	r3, [pc, #432]	; (80213ac <HAL_RCC_OscConfig+0x280>)
 80211fa:	681b      	ldr	r3, [r3, #0]
 80211fc:	4a6b      	ldr	r2, [pc, #428]	; (80213ac <HAL_RCC_OscConfig+0x280>)
 80211fe:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8021202:	6013      	str	r3, [r2, #0]

      /* Check the HSE State */
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 8021204:	687b      	ldr	r3, [r7, #4]
 8021206:	685b      	ldr	r3, [r3, #4]
 8021208:	2b00      	cmp	r3, #0
 802120a:	d013      	beq.n	8021234 <HAL_RCC_OscConfig+0x108>
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 802120c:	f7ff fbbe 	bl	802098c <HAL_GetTick>
 8021210:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8021212:	e008      	b.n	8021226 <HAL_RCC_OscConfig+0xfa>
        {
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8021214:	f7ff fbba 	bl	802098c <HAL_GetTick>
 8021218:	4602      	mov	r2, r0
 802121a:	693b      	ldr	r3, [r7, #16]
 802121c:	1ad3      	subs	r3, r2, r3
 802121e:	2b64      	cmp	r3, #100	; 0x64
 8021220:	d901      	bls.n	8021226 <HAL_RCC_OscConfig+0xfa>
          {
            return HAL_TIMEOUT;
 8021222:	2303      	movs	r3, #3
 8021224:	e21f      	b.n	8021666 <HAL_RCC_OscConfig+0x53a>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8021226:	4b61      	ldr	r3, [pc, #388]	; (80213ac <HAL_RCC_OscConfig+0x280>)
 8021228:	681b      	ldr	r3, [r3, #0]
 802122a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 802122e:	2b00      	cmp	r3, #0
 8021230:	d0f0      	beq.n	8021214 <HAL_RCC_OscConfig+0xe8>
 8021232:	e014      	b.n	802125e <HAL_RCC_OscConfig+0x132>
        }
      }
      else
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8021234:	f7ff fbaa 	bl	802098c <HAL_GetTick>
 8021238:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is bypassed or disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 802123a:	e008      	b.n	802124e <HAL_RCC_OscConfig+0x122>
        {
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 802123c:	f7ff fba6 	bl	802098c <HAL_GetTick>
 8021240:	4602      	mov	r2, r0
 8021242:	693b      	ldr	r3, [r7, #16]
 8021244:	1ad3      	subs	r3, r2, r3
 8021246:	2b64      	cmp	r3, #100	; 0x64
 8021248:	d901      	bls.n	802124e <HAL_RCC_OscConfig+0x122>
          {
            return HAL_TIMEOUT;
 802124a:	2303      	movs	r3, #3
 802124c:	e20b      	b.n	8021666 <HAL_RCC_OscConfig+0x53a>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 802124e:	4b57      	ldr	r3, [pc, #348]	; (80213ac <HAL_RCC_OscConfig+0x280>)
 8021250:	681b      	ldr	r3, [r3, #0]
 8021252:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8021256:	2b00      	cmp	r3, #0
 8021258:	d1f0      	bne.n	802123c <HAL_RCC_OscConfig+0x110>
 802125a:	e000      	b.n	802125e <HAL_RCC_OscConfig+0x132>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 802125c:	bf00      	nop
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 802125e:	687b      	ldr	r3, [r7, #4]
 8021260:	681b      	ldr	r3, [r3, #0]
 8021262:	f003 0302 	and.w	r3, r3, #2
 8021266:	2b00      	cmp	r3, #0
 8021268:	d069      	beq.n	802133e <HAL_RCC_OscConfig+0x212>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI)
 802126a:	4b50      	ldr	r3, [pc, #320]	; (80213ac <HAL_RCC_OscConfig+0x280>)
 802126c:	689b      	ldr	r3, [r3, #8]
 802126e:	f003 030c 	and.w	r3, r3, #12
 8021272:	2b00      	cmp	r3, #0
 8021274:	d00b      	beq.n	802128e <HAL_RCC_OscConfig+0x162>
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8021276:	4b4d      	ldr	r3, [pc, #308]	; (80213ac <HAL_RCC_OscConfig+0x280>)
 8021278:	689b      	ldr	r3, [r3, #8]
 802127a:	f003 030c 	and.w	r3, r3, #12
 802127e:	2b08      	cmp	r3, #8
 8021280:	d11c      	bne.n	80212bc <HAL_RCC_OscConfig+0x190>
 8021282:	4b4a      	ldr	r3, [pc, #296]	; (80213ac <HAL_RCC_OscConfig+0x280>)
 8021284:	685b      	ldr	r3, [r3, #4]
 8021286:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 802128a:	2b00      	cmp	r3, #0
 802128c:	d116      	bne.n	80212bc <HAL_RCC_OscConfig+0x190>
    {
      /* When HSI is used as system clock it will not disabled */
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 802128e:	4b47      	ldr	r3, [pc, #284]	; (80213ac <HAL_RCC_OscConfig+0x280>)
 8021290:	681b      	ldr	r3, [r3, #0]
 8021292:	f003 0302 	and.w	r3, r3, #2
 8021296:	2b00      	cmp	r3, #0
 8021298:	d005      	beq.n	80212a6 <HAL_RCC_OscConfig+0x17a>
 802129a:	687b      	ldr	r3, [r7, #4]
 802129c:	68db      	ldr	r3, [r3, #12]
 802129e:	2b01      	cmp	r3, #1
 80212a0:	d001      	beq.n	80212a6 <HAL_RCC_OscConfig+0x17a>
      {
        return HAL_ERROR;
 80212a2:	2301      	movs	r3, #1
 80212a4:	e1df      	b.n	8021666 <HAL_RCC_OscConfig+0x53a>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80212a6:	4b41      	ldr	r3, [pc, #260]	; (80213ac <HAL_RCC_OscConfig+0x280>)
 80212a8:	681b      	ldr	r3, [r3, #0]
 80212aa:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80212ae:	687b      	ldr	r3, [r7, #4]
 80212b0:	691b      	ldr	r3, [r3, #16]
 80212b2:	00db      	lsls	r3, r3, #3
 80212b4:	493d      	ldr	r1, [pc, #244]	; (80213ac <HAL_RCC_OscConfig+0x280>)
 80212b6:	4313      	orrs	r3, r2
 80212b8:	600b      	str	r3, [r1, #0]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 80212ba:	e040      	b.n	802133e <HAL_RCC_OscConfig+0x212>
      }
    }
    else
    {
      /* Check the HSI State */
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
 80212bc:	687b      	ldr	r3, [r7, #4]
 80212be:	68db      	ldr	r3, [r3, #12]
 80212c0:	2b00      	cmp	r3, #0
 80212c2:	d023      	beq.n	802130c <HAL_RCC_OscConfig+0x1e0>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 80212c4:	4b39      	ldr	r3, [pc, #228]	; (80213ac <HAL_RCC_OscConfig+0x280>)
 80212c6:	681b      	ldr	r3, [r3, #0]
 80212c8:	4a38      	ldr	r2, [pc, #224]	; (80213ac <HAL_RCC_OscConfig+0x280>)
 80212ca:	f043 0301 	orr.w	r3, r3, #1
 80212ce:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 80212d0:	f7ff fb5c 	bl	802098c <HAL_GetTick>
 80212d4:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80212d6:	e008      	b.n	80212ea <HAL_RCC_OscConfig+0x1be>
        {
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 80212d8:	f7ff fb58 	bl	802098c <HAL_GetTick>
 80212dc:	4602      	mov	r2, r0
 80212de:	693b      	ldr	r3, [r7, #16]
 80212e0:	1ad3      	subs	r3, r2, r3
 80212e2:	2b02      	cmp	r3, #2
 80212e4:	d901      	bls.n	80212ea <HAL_RCC_OscConfig+0x1be>
          {
            return HAL_TIMEOUT;
 80212e6:	2303      	movs	r3, #3
 80212e8:	e1bd      	b.n	8021666 <HAL_RCC_OscConfig+0x53a>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80212ea:	4b30      	ldr	r3, [pc, #192]	; (80213ac <HAL_RCC_OscConfig+0x280>)
 80212ec:	681b      	ldr	r3, [r3, #0]
 80212ee:	f003 0302 	and.w	r3, r3, #2
 80212f2:	2b00      	cmp	r3, #0
 80212f4:	d0f0      	beq.n	80212d8 <HAL_RCC_OscConfig+0x1ac>
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80212f6:	4b2d      	ldr	r3, [pc, #180]	; (80213ac <HAL_RCC_OscConfig+0x280>)
 80212f8:	681b      	ldr	r3, [r3, #0]
 80212fa:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80212fe:	687b      	ldr	r3, [r7, #4]
 8021300:	691b      	ldr	r3, [r3, #16]
 8021302:	00db      	lsls	r3, r3, #3
 8021304:	4929      	ldr	r1, [pc, #164]	; (80213ac <HAL_RCC_OscConfig+0x280>)
 8021306:	4313      	orrs	r3, r2
 8021308:	600b      	str	r3, [r1, #0]
 802130a:	e018      	b.n	802133e <HAL_RCC_OscConfig+0x212>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 802130c:	4b27      	ldr	r3, [pc, #156]	; (80213ac <HAL_RCC_OscConfig+0x280>)
 802130e:	681b      	ldr	r3, [r3, #0]
 8021310:	4a26      	ldr	r2, [pc, #152]	; (80213ac <HAL_RCC_OscConfig+0x280>)
 8021312:	f023 0301 	bic.w	r3, r3, #1
 8021316:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8021318:	f7ff fb38 	bl	802098c <HAL_GetTick>
 802131c:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 802131e:	e008      	b.n	8021332 <HAL_RCC_OscConfig+0x206>
        {
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8021320:	f7ff fb34 	bl	802098c <HAL_GetTick>
 8021324:	4602      	mov	r2, r0
 8021326:	693b      	ldr	r3, [r7, #16]
 8021328:	1ad3      	subs	r3, r2, r3
 802132a:	2b02      	cmp	r3, #2
 802132c:	d901      	bls.n	8021332 <HAL_RCC_OscConfig+0x206>
          {
            return HAL_TIMEOUT;
 802132e:	2303      	movs	r3, #3
 8021330:	e199      	b.n	8021666 <HAL_RCC_OscConfig+0x53a>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8021332:	4b1e      	ldr	r3, [pc, #120]	; (80213ac <HAL_RCC_OscConfig+0x280>)
 8021334:	681b      	ldr	r3, [r3, #0]
 8021336:	f003 0302 	and.w	r3, r3, #2
 802133a:	2b00      	cmp	r3, #0
 802133c:	d1f0      	bne.n	8021320 <HAL_RCC_OscConfig+0x1f4>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 802133e:	687b      	ldr	r3, [r7, #4]
 8021340:	681b      	ldr	r3, [r3, #0]
 8021342:	f003 0308 	and.w	r3, r3, #8
 8021346:	2b00      	cmp	r3, #0
 8021348:	d038      	beq.n	80213bc <HAL_RCC_OscConfig+0x290>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
 802134a:	687b      	ldr	r3, [r7, #4]
 802134c:	695b      	ldr	r3, [r3, #20]
 802134e:	2b00      	cmp	r3, #0
 8021350:	d019      	beq.n	8021386 <HAL_RCC_OscConfig+0x25a>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 8021352:	4b16      	ldr	r3, [pc, #88]	; (80213ac <HAL_RCC_OscConfig+0x280>)
 8021354:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8021356:	4a15      	ldr	r2, [pc, #84]	; (80213ac <HAL_RCC_OscConfig+0x280>)
 8021358:	f043 0301 	orr.w	r3, r3, #1
 802135c:	6753      	str	r3, [r2, #116]	; 0x74

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 802135e:	f7ff fb15 	bl	802098c <HAL_GetTick>
 8021362:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8021364:	e008      	b.n	8021378 <HAL_RCC_OscConfig+0x24c>
      {
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8021366:	f7ff fb11 	bl	802098c <HAL_GetTick>
 802136a:	4602      	mov	r2, r0
 802136c:	693b      	ldr	r3, [r7, #16]
 802136e:	1ad3      	subs	r3, r2, r3
 8021370:	2b02      	cmp	r3, #2
 8021372:	d901      	bls.n	8021378 <HAL_RCC_OscConfig+0x24c>
        {
          return HAL_TIMEOUT;
 8021374:	2303      	movs	r3, #3
 8021376:	e176      	b.n	8021666 <HAL_RCC_OscConfig+0x53a>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8021378:	4b0c      	ldr	r3, [pc, #48]	; (80213ac <HAL_RCC_OscConfig+0x280>)
 802137a:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 802137c:	f003 0302 	and.w	r3, r3, #2
 8021380:	2b00      	cmp	r3, #0
 8021382:	d0f0      	beq.n	8021366 <HAL_RCC_OscConfig+0x23a>
 8021384:	e01a      	b.n	80213bc <HAL_RCC_OscConfig+0x290>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 8021386:	4b09      	ldr	r3, [pc, #36]	; (80213ac <HAL_RCC_OscConfig+0x280>)
 8021388:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 802138a:	4a08      	ldr	r2, [pc, #32]	; (80213ac <HAL_RCC_OscConfig+0x280>)
 802138c:	f023 0301 	bic.w	r3, r3, #1
 8021390:	6753      	str	r3, [r2, #116]	; 0x74

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8021392:	f7ff fafb 	bl	802098c <HAL_GetTick>
 8021396:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8021398:	e00a      	b.n	80213b0 <HAL_RCC_OscConfig+0x284>
      {
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 802139a:	f7ff faf7 	bl	802098c <HAL_GetTick>
 802139e:	4602      	mov	r2, r0
 80213a0:	693b      	ldr	r3, [r7, #16]
 80213a2:	1ad3      	subs	r3, r2, r3
 80213a4:	2b02      	cmp	r3, #2
 80213a6:	d903      	bls.n	80213b0 <HAL_RCC_OscConfig+0x284>
        {
          return HAL_TIMEOUT;
 80213a8:	2303      	movs	r3, #3
 80213aa:	e15c      	b.n	8021666 <HAL_RCC_OscConfig+0x53a>
 80213ac:	40023800 	.word	0x40023800
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80213b0:	4b91      	ldr	r3, [pc, #580]	; (80215f8 <HAL_RCC_OscConfig+0x4cc>)
 80213b2:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80213b4:	f003 0302 	and.w	r3, r3, #2
 80213b8:	2b00      	cmp	r3, #0
 80213ba:	d1ee      	bne.n	802139a <HAL_RCC_OscConfig+0x26e>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 80213bc:	687b      	ldr	r3, [r7, #4]
 80213be:	681b      	ldr	r3, [r3, #0]
 80213c0:	f003 0304 	and.w	r3, r3, #4
 80213c4:	2b00      	cmp	r3, #0
 80213c6:	f000 80a4 	beq.w	8021512 <HAL_RCC_OscConfig+0x3e6>
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 80213ca:	4b8b      	ldr	r3, [pc, #556]	; (80215f8 <HAL_RCC_OscConfig+0x4cc>)
 80213cc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80213ce:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80213d2:	2b00      	cmp	r3, #0
 80213d4:	d10d      	bne.n	80213f2 <HAL_RCC_OscConfig+0x2c6>
    {
      /* Enable Power Clock*/
      __HAL_RCC_PWR_CLK_ENABLE();
 80213d6:	4b88      	ldr	r3, [pc, #544]	; (80215f8 <HAL_RCC_OscConfig+0x4cc>)
 80213d8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80213da:	4a87      	ldr	r2, [pc, #540]	; (80215f8 <HAL_RCC_OscConfig+0x4cc>)
 80213dc:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80213e0:	6413      	str	r3, [r2, #64]	; 0x40
 80213e2:	4b85      	ldr	r3, [pc, #532]	; (80215f8 <HAL_RCC_OscConfig+0x4cc>)
 80213e4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80213e6:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80213ea:	60bb      	str	r3, [r7, #8]
 80213ec:	68bb      	ldr	r3, [r7, #8]
      pwrclkchanged = SET;
 80213ee:	2301      	movs	r3, #1
 80213f0:	75fb      	strb	r3, [r7, #23]
    }

    if (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 80213f2:	4b82      	ldr	r3, [pc, #520]	; (80215fc <HAL_RCC_OscConfig+0x4d0>)
 80213f4:	681b      	ldr	r3, [r3, #0]
 80213f6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80213fa:	2b00      	cmp	r3, #0
 80213fc:	d118      	bne.n	8021430 <HAL_RCC_OscConfig+0x304>
    {
      /* Enable write access to Backup domain */
      PWR->CR1 |= PWR_CR1_DBP;
 80213fe:	4b7f      	ldr	r3, [pc, #508]	; (80215fc <HAL_RCC_OscConfig+0x4d0>)
 8021400:	681b      	ldr	r3, [r3, #0]
 8021402:	4a7e      	ldr	r2, [pc, #504]	; (80215fc <HAL_RCC_OscConfig+0x4d0>)
 8021404:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8021408:	6013      	str	r3, [r2, #0]

      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 802140a:	f7ff fabf 	bl	802098c <HAL_GetTick>
 802140e:	6138      	str	r0, [r7, #16]

      while (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 8021410:	e008      	b.n	8021424 <HAL_RCC_OscConfig+0x2f8>
      {
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8021412:	f7ff fabb 	bl	802098c <HAL_GetTick>
 8021416:	4602      	mov	r2, r0
 8021418:	693b      	ldr	r3, [r7, #16]
 802141a:	1ad3      	subs	r3, r2, r3
 802141c:	2b64      	cmp	r3, #100	; 0x64
 802141e:	d901      	bls.n	8021424 <HAL_RCC_OscConfig+0x2f8>
        {
          return HAL_TIMEOUT;
 8021420:	2303      	movs	r3, #3
 8021422:	e120      	b.n	8021666 <HAL_RCC_OscConfig+0x53a>
      while (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 8021424:	4b75      	ldr	r3, [pc, #468]	; (80215fc <HAL_RCC_OscConfig+0x4d0>)
 8021426:	681b      	ldr	r3, [r3, #0]
 8021428:	f403 7380 	and.w	r3, r3, #256	; 0x100
 802142c:	2b00      	cmp	r3, #0
 802142e:	d0f0      	beq.n	8021412 <HAL_RCC_OscConfig+0x2e6>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8021430:	687b      	ldr	r3, [r7, #4]
 8021432:	689b      	ldr	r3, [r3, #8]
 8021434:	2b01      	cmp	r3, #1
 8021436:	d106      	bne.n	8021446 <HAL_RCC_OscConfig+0x31a>
 8021438:	4b6f      	ldr	r3, [pc, #444]	; (80215f8 <HAL_RCC_OscConfig+0x4cc>)
 802143a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 802143c:	4a6e      	ldr	r2, [pc, #440]	; (80215f8 <HAL_RCC_OscConfig+0x4cc>)
 802143e:	f043 0301 	orr.w	r3, r3, #1
 8021442:	6713      	str	r3, [r2, #112]	; 0x70
 8021444:	e02d      	b.n	80214a2 <HAL_RCC_OscConfig+0x376>
 8021446:	687b      	ldr	r3, [r7, #4]
 8021448:	689b      	ldr	r3, [r3, #8]
 802144a:	2b00      	cmp	r3, #0
 802144c:	d10c      	bne.n	8021468 <HAL_RCC_OscConfig+0x33c>
 802144e:	4b6a      	ldr	r3, [pc, #424]	; (80215f8 <HAL_RCC_OscConfig+0x4cc>)
 8021450:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8021452:	4a69      	ldr	r2, [pc, #420]	; (80215f8 <HAL_RCC_OscConfig+0x4cc>)
 8021454:	f023 0301 	bic.w	r3, r3, #1
 8021458:	6713      	str	r3, [r2, #112]	; 0x70
 802145a:	4b67      	ldr	r3, [pc, #412]	; (80215f8 <HAL_RCC_OscConfig+0x4cc>)
 802145c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 802145e:	4a66      	ldr	r2, [pc, #408]	; (80215f8 <HAL_RCC_OscConfig+0x4cc>)
 8021460:	f023 0304 	bic.w	r3, r3, #4
 8021464:	6713      	str	r3, [r2, #112]	; 0x70
 8021466:	e01c      	b.n	80214a2 <HAL_RCC_OscConfig+0x376>
 8021468:	687b      	ldr	r3, [r7, #4]
 802146a:	689b      	ldr	r3, [r3, #8]
 802146c:	2b05      	cmp	r3, #5
 802146e:	d10c      	bne.n	802148a <HAL_RCC_OscConfig+0x35e>
 8021470:	4b61      	ldr	r3, [pc, #388]	; (80215f8 <HAL_RCC_OscConfig+0x4cc>)
 8021472:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8021474:	4a60      	ldr	r2, [pc, #384]	; (80215f8 <HAL_RCC_OscConfig+0x4cc>)
 8021476:	f043 0304 	orr.w	r3, r3, #4
 802147a:	6713      	str	r3, [r2, #112]	; 0x70
 802147c:	4b5e      	ldr	r3, [pc, #376]	; (80215f8 <HAL_RCC_OscConfig+0x4cc>)
 802147e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8021480:	4a5d      	ldr	r2, [pc, #372]	; (80215f8 <HAL_RCC_OscConfig+0x4cc>)
 8021482:	f043 0301 	orr.w	r3, r3, #1
 8021486:	6713      	str	r3, [r2, #112]	; 0x70
 8021488:	e00b      	b.n	80214a2 <HAL_RCC_OscConfig+0x376>
 802148a:	4b5b      	ldr	r3, [pc, #364]	; (80215f8 <HAL_RCC_OscConfig+0x4cc>)
 802148c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 802148e:	4a5a      	ldr	r2, [pc, #360]	; (80215f8 <HAL_RCC_OscConfig+0x4cc>)
 8021490:	f023 0301 	bic.w	r3, r3, #1
 8021494:	6713      	str	r3, [r2, #112]	; 0x70
 8021496:	4b58      	ldr	r3, [pc, #352]	; (80215f8 <HAL_RCC_OscConfig+0x4cc>)
 8021498:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 802149a:	4a57      	ldr	r2, [pc, #348]	; (80215f8 <HAL_RCC_OscConfig+0x4cc>)
 802149c:	f023 0304 	bic.w	r3, r3, #4
 80214a0:	6713      	str	r3, [r2, #112]	; 0x70
    /* Check the LSE State */
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 80214a2:	687b      	ldr	r3, [r7, #4]
 80214a4:	689b      	ldr	r3, [r3, #8]
 80214a6:	2b00      	cmp	r3, #0
 80214a8:	d015      	beq.n	80214d6 <HAL_RCC_OscConfig+0x3aa>
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 80214aa:	f7ff fa6f 	bl	802098c <HAL_GetTick>
 80214ae:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80214b0:	e00a      	b.n	80214c8 <HAL_RCC_OscConfig+0x39c>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80214b2:	f7ff fa6b 	bl	802098c <HAL_GetTick>
 80214b6:	4602      	mov	r2, r0
 80214b8:	693b      	ldr	r3, [r7, #16]
 80214ba:	1ad3      	subs	r3, r2, r3
 80214bc:	f241 3288 	movw	r2, #5000	; 0x1388
 80214c0:	4293      	cmp	r3, r2
 80214c2:	d901      	bls.n	80214c8 <HAL_RCC_OscConfig+0x39c>
        {
          return HAL_TIMEOUT;
 80214c4:	2303      	movs	r3, #3
 80214c6:	e0ce      	b.n	8021666 <HAL_RCC_OscConfig+0x53a>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80214c8:	4b4b      	ldr	r3, [pc, #300]	; (80215f8 <HAL_RCC_OscConfig+0x4cc>)
 80214ca:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80214cc:	f003 0302 	and.w	r3, r3, #2
 80214d0:	2b00      	cmp	r3, #0
 80214d2:	d0ee      	beq.n	80214b2 <HAL_RCC_OscConfig+0x386>
 80214d4:	e014      	b.n	8021500 <HAL_RCC_OscConfig+0x3d4>
      }
    }
    else
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 80214d6:	f7ff fa59 	bl	802098c <HAL_GetTick>
 80214da:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 80214dc:	e00a      	b.n	80214f4 <HAL_RCC_OscConfig+0x3c8>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80214de:	f7ff fa55 	bl	802098c <HAL_GetTick>
 80214e2:	4602      	mov	r2, r0
 80214e4:	693b      	ldr	r3, [r7, #16]
 80214e6:	1ad3      	subs	r3, r2, r3
 80214e8:	f241 3288 	movw	r2, #5000	; 0x1388
 80214ec:	4293      	cmp	r3, r2
 80214ee:	d901      	bls.n	80214f4 <HAL_RCC_OscConfig+0x3c8>
        {
          return HAL_TIMEOUT;
 80214f0:	2303      	movs	r3, #3
 80214f2:	e0b8      	b.n	8021666 <HAL_RCC_OscConfig+0x53a>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 80214f4:	4b40      	ldr	r3, [pc, #256]	; (80215f8 <HAL_RCC_OscConfig+0x4cc>)
 80214f6:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80214f8:	f003 0302 	and.w	r3, r3, #2
 80214fc:	2b00      	cmp	r3, #0
 80214fe:	d1ee      	bne.n	80214de <HAL_RCC_OscConfig+0x3b2>
        }
      }
    }

    /* Restore clock configuration if changed */
    if (pwrclkchanged == SET)
 8021500:	7dfb      	ldrb	r3, [r7, #23]
 8021502:	2b01      	cmp	r3, #1
 8021504:	d105      	bne.n	8021512 <HAL_RCC_OscConfig+0x3e6>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 8021506:	4b3c      	ldr	r3, [pc, #240]	; (80215f8 <HAL_RCC_OscConfig+0x4cc>)
 8021508:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 802150a:	4a3b      	ldr	r2, [pc, #236]	; (80215f8 <HAL_RCC_OscConfig+0x4cc>)
 802150c:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8021510:	6413      	str	r3, [r2, #64]	; 0x40
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8021512:	687b      	ldr	r3, [r7, #4]
 8021514:	699b      	ldr	r3, [r3, #24]
 8021516:	2b00      	cmp	r3, #0
 8021518:	f000 80a4 	beq.w	8021664 <HAL_RCC_OscConfig+0x538>
  {
    /* Check if the PLL is used as system clock or not */
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 802151c:	4b36      	ldr	r3, [pc, #216]	; (80215f8 <HAL_RCC_OscConfig+0x4cc>)
 802151e:	689b      	ldr	r3, [r3, #8]
 8021520:	f003 030c 	and.w	r3, r3, #12
 8021524:	2b08      	cmp	r3, #8
 8021526:	d06b      	beq.n	8021600 <HAL_RCC_OscConfig+0x4d4>
    {
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8021528:	687b      	ldr	r3, [r7, #4]
 802152a:	699b      	ldr	r3, [r3, #24]
 802152c:	2b02      	cmp	r3, #2
 802152e:	d149      	bne.n	80215c4 <HAL_RCC_OscConfig+0x498>
#if defined (RCC_PLLCFGR_PLLR)
        assert_param(IS_RCC_PLLR_VALUE(RCC_OscInitStruct->PLL.PLLR));
#endif

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8021530:	4b31      	ldr	r3, [pc, #196]	; (80215f8 <HAL_RCC_OscConfig+0x4cc>)
 8021532:	681b      	ldr	r3, [r3, #0]
 8021534:	4a30      	ldr	r2, [pc, #192]	; (80215f8 <HAL_RCC_OscConfig+0x4cc>)
 8021536:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 802153a:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 802153c:	f7ff fa26 	bl	802098c <HAL_GetTick>
 8021540:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8021542:	e008      	b.n	8021556 <HAL_RCC_OscConfig+0x42a>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8021544:	f7ff fa22 	bl	802098c <HAL_GetTick>
 8021548:	4602      	mov	r2, r0
 802154a:	693b      	ldr	r3, [r7, #16]
 802154c:	1ad3      	subs	r3, r2, r3
 802154e:	2b02      	cmp	r3, #2
 8021550:	d901      	bls.n	8021556 <HAL_RCC_OscConfig+0x42a>
          {
            return HAL_TIMEOUT;
 8021552:	2303      	movs	r3, #3
 8021554:	e087      	b.n	8021666 <HAL_RCC_OscConfig+0x53a>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8021556:	4b28      	ldr	r3, [pc, #160]	; (80215f8 <HAL_RCC_OscConfig+0x4cc>)
 8021558:	681b      	ldr	r3, [r3, #0]
 802155a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 802155e:	2b00      	cmp	r3, #0
 8021560:	d1f0      	bne.n	8021544 <HAL_RCC_OscConfig+0x418>
                             RCC_OscInitStruct->PLL.PLLN,
                             RCC_OscInitStruct->PLL.PLLP,
                             RCC_OscInitStruct->PLL.PLLQ,
                             RCC_OscInitStruct->PLL.PLLR);
#else
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8021562:	687b      	ldr	r3, [r7, #4]
 8021564:	69da      	ldr	r2, [r3, #28]
 8021566:	687b      	ldr	r3, [r7, #4]
 8021568:	6a1b      	ldr	r3, [r3, #32]
 802156a:	431a      	orrs	r2, r3
 802156c:	687b      	ldr	r3, [r7, #4]
 802156e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8021570:	019b      	lsls	r3, r3, #6
 8021572:	431a      	orrs	r2, r3
 8021574:	687b      	ldr	r3, [r7, #4]
 8021576:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8021578:	085b      	lsrs	r3, r3, #1
 802157a:	3b01      	subs	r3, #1
 802157c:	041b      	lsls	r3, r3, #16
 802157e:	431a      	orrs	r2, r3
 8021580:	687b      	ldr	r3, [r7, #4]
 8021582:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8021584:	061b      	lsls	r3, r3, #24
 8021586:	4313      	orrs	r3, r2
 8021588:	4a1b      	ldr	r2, [pc, #108]	; (80215f8 <HAL_RCC_OscConfig+0x4cc>)
 802158a:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 802158e:	6053      	str	r3, [r2, #4]
                             RCC_OscInitStruct->PLL.PLLP,
                             RCC_OscInitStruct->PLL.PLLQ);
#endif

        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 8021590:	4b19      	ldr	r3, [pc, #100]	; (80215f8 <HAL_RCC_OscConfig+0x4cc>)
 8021592:	681b      	ldr	r3, [r3, #0]
 8021594:	4a18      	ldr	r2, [pc, #96]	; (80215f8 <HAL_RCC_OscConfig+0x4cc>)
 8021596:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 802159a:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 802159c:	f7ff f9f6 	bl	802098c <HAL_GetTick>
 80215a0:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80215a2:	e008      	b.n	80215b6 <HAL_RCC_OscConfig+0x48a>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 80215a4:	f7ff f9f2 	bl	802098c <HAL_GetTick>
 80215a8:	4602      	mov	r2, r0
 80215aa:	693b      	ldr	r3, [r7, #16]
 80215ac:	1ad3      	subs	r3, r2, r3
 80215ae:	2b02      	cmp	r3, #2
 80215b0:	d901      	bls.n	80215b6 <HAL_RCC_OscConfig+0x48a>
          {
            return HAL_TIMEOUT;
 80215b2:	2303      	movs	r3, #3
 80215b4:	e057      	b.n	8021666 <HAL_RCC_OscConfig+0x53a>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80215b6:	4b10      	ldr	r3, [pc, #64]	; (80215f8 <HAL_RCC_OscConfig+0x4cc>)
 80215b8:	681b      	ldr	r3, [r3, #0]
 80215ba:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80215be:	2b00      	cmp	r3, #0
 80215c0:	d0f0      	beq.n	80215a4 <HAL_RCC_OscConfig+0x478>
 80215c2:	e04f      	b.n	8021664 <HAL_RCC_OscConfig+0x538>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 80215c4:	4b0c      	ldr	r3, [pc, #48]	; (80215f8 <HAL_RCC_OscConfig+0x4cc>)
 80215c6:	681b      	ldr	r3, [r3, #0]
 80215c8:	4a0b      	ldr	r2, [pc, #44]	; (80215f8 <HAL_RCC_OscConfig+0x4cc>)
 80215ca:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 80215ce:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 80215d0:	f7ff f9dc 	bl	802098c <HAL_GetTick>
 80215d4:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80215d6:	e008      	b.n	80215ea <HAL_RCC_OscConfig+0x4be>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 80215d8:	f7ff f9d8 	bl	802098c <HAL_GetTick>
 80215dc:	4602      	mov	r2, r0
 80215de:	693b      	ldr	r3, [r7, #16]
 80215e0:	1ad3      	subs	r3, r2, r3
 80215e2:	2b02      	cmp	r3, #2
 80215e4:	d901      	bls.n	80215ea <HAL_RCC_OscConfig+0x4be>
          {
            return HAL_TIMEOUT;
 80215e6:	2303      	movs	r3, #3
 80215e8:	e03d      	b.n	8021666 <HAL_RCC_OscConfig+0x53a>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80215ea:	4b03      	ldr	r3, [pc, #12]	; (80215f8 <HAL_RCC_OscConfig+0x4cc>)
 80215ec:	681b      	ldr	r3, [r3, #0]
 80215ee:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80215f2:	2b00      	cmp	r3, #0
 80215f4:	d1f0      	bne.n	80215d8 <HAL_RCC_OscConfig+0x4ac>
 80215f6:	e035      	b.n	8021664 <HAL_RCC_OscConfig+0x538>
 80215f8:	40023800 	.word	0x40023800
 80215fc:	40007000 	.word	0x40007000
      }
    }
    else
    {
      /* Do not return HAL_ERROR if request repeats the current configuration */
      pll_config = RCC->PLLCFGR;
 8021600:	4b1b      	ldr	r3, [pc, #108]	; (8021670 <HAL_RCC_OscConfig+0x544>)
 8021602:	685b      	ldr	r3, [r3, #4]
 8021604:	60fb      	str	r3, [r7, #12]
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != ((((RCC_OscInitStruct->PLL.PLLP) >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos)) ||
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLR) != (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_PLLR_Pos)))
#else
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8021606:	687b      	ldr	r3, [r7, #4]
 8021608:	699b      	ldr	r3, [r3, #24]
 802160a:	2b01      	cmp	r3, #1
 802160c:	d028      	beq.n	8021660 <HAL_RCC_OscConfig+0x534>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 802160e:	68fb      	ldr	r3, [r7, #12]
 8021610:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 8021614:	687b      	ldr	r3, [r7, #4]
 8021616:	69db      	ldr	r3, [r3, #28]
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8021618:	429a      	cmp	r2, r3
 802161a:	d121      	bne.n	8021660 <HAL_RCC_OscConfig+0x534>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 802161c:	68fb      	ldr	r3, [r7, #12]
 802161e:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 8021622:	687b      	ldr	r3, [r7, #4]
 8021624:	6a1b      	ldr	r3, [r3, #32]
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8021626:	429a      	cmp	r2, r3
 8021628:	d11a      	bne.n	8021660 <HAL_RCC_OscConfig+0x534>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
 802162a:	68fa      	ldr	r2, [r7, #12]
 802162c:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 8021630:	4013      	ands	r3, r2
 8021632:	687a      	ldr	r2, [r7, #4]
 8021634:	6a52      	ldr	r2, [r2, #36]	; 0x24
 8021636:	0192      	lsls	r2, r2, #6
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8021638:	4293      	cmp	r3, r2
 802163a:	d111      	bne.n	8021660 <HAL_RCC_OscConfig+0x534>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != ((((RCC_OscInitStruct->PLL.PLLP) >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos)) ||
 802163c:	68fb      	ldr	r3, [r7, #12]
 802163e:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 8021642:	687b      	ldr	r3, [r7, #4]
 8021644:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8021646:	085b      	lsrs	r3, r3, #1
 8021648:	3b01      	subs	r3, #1
 802164a:	041b      	lsls	r3, r3, #16
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
 802164c:	429a      	cmp	r2, r3
 802164e:	d107      	bne.n	8021660 <HAL_RCC_OscConfig+0x534>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 8021650:	68fb      	ldr	r3, [r7, #12]
 8021652:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 8021656:	687b      	ldr	r3, [r7, #4]
 8021658:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802165a:	061b      	lsls	r3, r3, #24
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != ((((RCC_OscInitStruct->PLL.PLLP) >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos)) ||
 802165c:	429a      	cmp	r2, r3
 802165e:	d001      	beq.n	8021664 <HAL_RCC_OscConfig+0x538>
#endif
      {
        return HAL_ERROR;
 8021660:	2301      	movs	r3, #1
 8021662:	e000      	b.n	8021666 <HAL_RCC_OscConfig+0x53a>
      }
    }
  }
  return HAL_OK;
 8021664:	2300      	movs	r3, #0
}
 8021666:	4618      	mov	r0, r3
 8021668:	3718      	adds	r7, #24
 802166a:	46bd      	mov	sp, r7
 802166c:	bd80      	pop	{r7, pc}
 802166e:	bf00      	nop
 8021670:	40023800 	.word	0x40023800

08021674 <HAL_RCC_ClockConfig>:
  *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
  *         (for more details refer to section above "Initialization/de-initialization functions")
  * @retval None
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 8021674:	b580      	push	{r7, lr}
 8021676:	b084      	sub	sp, #16
 8021678:	af00      	add	r7, sp, #0
 802167a:	6078      	str	r0, [r7, #4]
 802167c:	6039      	str	r1, [r7, #0]
  uint32_t tickstart = 0;
 802167e:	2300      	movs	r3, #0
 8021680:	60fb      	str	r3, [r7, #12]

  /* Check Null pointer */
  if (RCC_ClkInitStruct == NULL)
 8021682:	687b      	ldr	r3, [r7, #4]
 8021684:	2b00      	cmp	r3, #0
 8021686:	d101      	bne.n	802168c <HAL_RCC_ClockConfig+0x18>
  {
    return HAL_ERROR;
 8021688:	2301      	movs	r3, #1
 802168a:	e0d0      	b.n	802182e <HAL_RCC_ClockConfig+0x1ba>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
     must be correctly programmed according to the frequency of the CPU clock
     (HCLK) and the supply voltage of the device. */

  /* Increasing the CPU frequency */
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 802168c:	4b6a      	ldr	r3, [pc, #424]	; (8021838 <HAL_RCC_ClockConfig+0x1c4>)
 802168e:	681b      	ldr	r3, [r3, #0]
 8021690:	f003 030f 	and.w	r3, r3, #15
 8021694:	683a      	ldr	r2, [r7, #0]
 8021696:	429a      	cmp	r2, r3
 8021698:	d910      	bls.n	80216bc <HAL_RCC_ClockConfig+0x48>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 802169a:	4b67      	ldr	r3, [pc, #412]	; (8021838 <HAL_RCC_ClockConfig+0x1c4>)
 802169c:	681b      	ldr	r3, [r3, #0]
 802169e:	f023 020f 	bic.w	r2, r3, #15
 80216a2:	4965      	ldr	r1, [pc, #404]	; (8021838 <HAL_RCC_ClockConfig+0x1c4>)
 80216a4:	683b      	ldr	r3, [r7, #0]
 80216a6:	4313      	orrs	r3, r2
 80216a8:	600b      	str	r3, [r1, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 80216aa:	4b63      	ldr	r3, [pc, #396]	; (8021838 <HAL_RCC_ClockConfig+0x1c4>)
 80216ac:	681b      	ldr	r3, [r3, #0]
 80216ae:	f003 030f 	and.w	r3, r3, #15
 80216b2:	683a      	ldr	r2, [r7, #0]
 80216b4:	429a      	cmp	r2, r3
 80216b6:	d001      	beq.n	80216bc <HAL_RCC_ClockConfig+0x48>
    {
      return HAL_ERROR;
 80216b8:	2301      	movs	r3, #1
 80216ba:	e0b8      	b.n	802182e <HAL_RCC_ClockConfig+0x1ba>
    }
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 80216bc:	687b      	ldr	r3, [r7, #4]
 80216be:	681b      	ldr	r3, [r3, #0]
 80216c0:	f003 0302 	and.w	r3, r3, #2
 80216c4:	2b00      	cmp	r3, #0
 80216c6:	d020      	beq.n	802170a <HAL_RCC_ClockConfig+0x96>
  {
    /* Set the highest APBx dividers in order to ensure that we do not go through
       a non-spec phase whatever we decrease or increase HCLK. */
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80216c8:	687b      	ldr	r3, [r7, #4]
 80216ca:	681b      	ldr	r3, [r3, #0]
 80216cc:	f003 0304 	and.w	r3, r3, #4
 80216d0:	2b00      	cmp	r3, #0
 80216d2:	d005      	beq.n	80216e0 <HAL_RCC_ClockConfig+0x6c>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 80216d4:	4b59      	ldr	r3, [pc, #356]	; (802183c <HAL_RCC_ClockConfig+0x1c8>)
 80216d6:	689b      	ldr	r3, [r3, #8]
 80216d8:	4a58      	ldr	r2, [pc, #352]	; (802183c <HAL_RCC_ClockConfig+0x1c8>)
 80216da:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 80216de:	6093      	str	r3, [r2, #8]
    }

    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80216e0:	687b      	ldr	r3, [r7, #4]
 80216e2:	681b      	ldr	r3, [r3, #0]
 80216e4:	f003 0308 	and.w	r3, r3, #8
 80216e8:	2b00      	cmp	r3, #0
 80216ea:	d005      	beq.n	80216f8 <HAL_RCC_ClockConfig+0x84>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 80216ec:	4b53      	ldr	r3, [pc, #332]	; (802183c <HAL_RCC_ClockConfig+0x1c8>)
 80216ee:	689b      	ldr	r3, [r3, #8]
 80216f0:	4a52      	ldr	r2, [pc, #328]	; (802183c <HAL_RCC_ClockConfig+0x1c8>)
 80216f2:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 80216f6:	6093      	str	r3, [r2, #8]
    }

    /* Set the new HCLK clock divider */
    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 80216f8:	4b50      	ldr	r3, [pc, #320]	; (802183c <HAL_RCC_ClockConfig+0x1c8>)
 80216fa:	689b      	ldr	r3, [r3, #8]
 80216fc:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8021700:	687b      	ldr	r3, [r7, #4]
 8021702:	689b      	ldr	r3, [r3, #8]
 8021704:	494d      	ldr	r1, [pc, #308]	; (802183c <HAL_RCC_ClockConfig+0x1c8>)
 8021706:	4313      	orrs	r3, r2
 8021708:	608b      	str	r3, [r1, #8]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 802170a:	687b      	ldr	r3, [r7, #4]
 802170c:	681b      	ldr	r3, [r3, #0]
 802170e:	f003 0301 	and.w	r3, r3, #1
 8021712:	2b00      	cmp	r3, #0
 8021714:	d040      	beq.n	8021798 <HAL_RCC_ClockConfig+0x124>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));

    /* HSE is selected as System Clock Source */
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8021716:	687b      	ldr	r3, [r7, #4]
 8021718:	685b      	ldr	r3, [r3, #4]
 802171a:	2b01      	cmp	r3, #1
 802171c:	d107      	bne.n	802172e <HAL_RCC_ClockConfig+0xba>
    {
      /* Check the HSE ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 802171e:	4b47      	ldr	r3, [pc, #284]	; (802183c <HAL_RCC_ClockConfig+0x1c8>)
 8021720:	681b      	ldr	r3, [r3, #0]
 8021722:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8021726:	2b00      	cmp	r3, #0
 8021728:	d115      	bne.n	8021756 <HAL_RCC_ClockConfig+0xe2>
      {
        return HAL_ERROR;
 802172a:	2301      	movs	r3, #1
 802172c:	e07f      	b.n	802182e <HAL_RCC_ClockConfig+0x1ba>
      }
    }
    /* PLL is selected as System Clock Source */
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 802172e:	687b      	ldr	r3, [r7, #4]
 8021730:	685b      	ldr	r3, [r3, #4]
 8021732:	2b02      	cmp	r3, #2
 8021734:	d107      	bne.n	8021746 <HAL_RCC_ClockConfig+0xd2>
    {
      /* Check the PLL ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8021736:	4b41      	ldr	r3, [pc, #260]	; (802183c <HAL_RCC_ClockConfig+0x1c8>)
 8021738:	681b      	ldr	r3, [r3, #0]
 802173a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 802173e:	2b00      	cmp	r3, #0
 8021740:	d109      	bne.n	8021756 <HAL_RCC_ClockConfig+0xe2>
      {
        return HAL_ERROR;
 8021742:	2301      	movs	r3, #1
 8021744:	e073      	b.n	802182e <HAL_RCC_ClockConfig+0x1ba>
    }
    /* HSI is selected as System Clock Source */
    else
    {
      /* Check the HSI ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8021746:	4b3d      	ldr	r3, [pc, #244]	; (802183c <HAL_RCC_ClockConfig+0x1c8>)
 8021748:	681b      	ldr	r3, [r3, #0]
 802174a:	f003 0302 	and.w	r3, r3, #2
 802174e:	2b00      	cmp	r3, #0
 8021750:	d101      	bne.n	8021756 <HAL_RCC_ClockConfig+0xe2>
      {
        return HAL_ERROR;
 8021752:	2301      	movs	r3, #1
 8021754:	e06b      	b.n	802182e <HAL_RCC_ClockConfig+0x1ba>
      }
    }

    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8021756:	4b39      	ldr	r3, [pc, #228]	; (802183c <HAL_RCC_ClockConfig+0x1c8>)
 8021758:	689b      	ldr	r3, [r3, #8]
 802175a:	f023 0203 	bic.w	r2, r3, #3
 802175e:	687b      	ldr	r3, [r7, #4]
 8021760:	685b      	ldr	r3, [r3, #4]
 8021762:	4936      	ldr	r1, [pc, #216]	; (802183c <HAL_RCC_ClockConfig+0x1c8>)
 8021764:	4313      	orrs	r3, r2
 8021766:	608b      	str	r3, [r1, #8]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8021768:	f7ff f910 	bl	802098c <HAL_GetTick>
 802176c:	60f8      	str	r0, [r7, #12]

    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 802176e:	e00a      	b.n	8021786 <HAL_RCC_ClockConfig+0x112>
    {
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8021770:	f7ff f90c 	bl	802098c <HAL_GetTick>
 8021774:	4602      	mov	r2, r0
 8021776:	68fb      	ldr	r3, [r7, #12]
 8021778:	1ad3      	subs	r3, r2, r3
 802177a:	f241 3288 	movw	r2, #5000	; 0x1388
 802177e:	4293      	cmp	r3, r2
 8021780:	d901      	bls.n	8021786 <HAL_RCC_ClockConfig+0x112>
      {
        return HAL_TIMEOUT;
 8021782:	2303      	movs	r3, #3
 8021784:	e053      	b.n	802182e <HAL_RCC_ClockConfig+0x1ba>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8021786:	4b2d      	ldr	r3, [pc, #180]	; (802183c <HAL_RCC_ClockConfig+0x1c8>)
 8021788:	689b      	ldr	r3, [r3, #8]
 802178a:	f003 020c 	and.w	r2, r3, #12
 802178e:	687b      	ldr	r3, [r7, #4]
 8021790:	685b      	ldr	r3, [r3, #4]
 8021792:	009b      	lsls	r3, r3, #2
 8021794:	429a      	cmp	r2, r3
 8021796:	d1eb      	bne.n	8021770 <HAL_RCC_ClockConfig+0xfc>
      }
    }
  }

  /* Decreasing the number of wait states because of lower CPU frequency */
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 8021798:	4b27      	ldr	r3, [pc, #156]	; (8021838 <HAL_RCC_ClockConfig+0x1c4>)
 802179a:	681b      	ldr	r3, [r3, #0]
 802179c:	f003 030f 	and.w	r3, r3, #15
 80217a0:	683a      	ldr	r2, [r7, #0]
 80217a2:	429a      	cmp	r2, r3
 80217a4:	d210      	bcs.n	80217c8 <HAL_RCC_ClockConfig+0x154>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 80217a6:	4b24      	ldr	r3, [pc, #144]	; (8021838 <HAL_RCC_ClockConfig+0x1c4>)
 80217a8:	681b      	ldr	r3, [r3, #0]
 80217aa:	f023 020f 	bic.w	r2, r3, #15
 80217ae:	4922      	ldr	r1, [pc, #136]	; (8021838 <HAL_RCC_ClockConfig+0x1c4>)
 80217b0:	683b      	ldr	r3, [r7, #0]
 80217b2:	4313      	orrs	r3, r2
 80217b4:	600b      	str	r3, [r1, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 80217b6:	4b20      	ldr	r3, [pc, #128]	; (8021838 <HAL_RCC_ClockConfig+0x1c4>)
 80217b8:	681b      	ldr	r3, [r3, #0]
 80217ba:	f003 030f 	and.w	r3, r3, #15
 80217be:	683a      	ldr	r2, [r7, #0]
 80217c0:	429a      	cmp	r2, r3
 80217c2:	d001      	beq.n	80217c8 <HAL_RCC_ClockConfig+0x154>
    {
      return HAL_ERROR;
 80217c4:	2301      	movs	r3, #1
 80217c6:	e032      	b.n	802182e <HAL_RCC_ClockConfig+0x1ba>
    }
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80217c8:	687b      	ldr	r3, [r7, #4]
 80217ca:	681b      	ldr	r3, [r3, #0]
 80217cc:	f003 0304 	and.w	r3, r3, #4
 80217d0:	2b00      	cmp	r3, #0
 80217d2:	d008      	beq.n	80217e6 <HAL_RCC_ClockConfig+0x172>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 80217d4:	4b19      	ldr	r3, [pc, #100]	; (802183c <HAL_RCC_ClockConfig+0x1c8>)
 80217d6:	689b      	ldr	r3, [r3, #8]
 80217d8:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 80217dc:	687b      	ldr	r3, [r7, #4]
 80217de:	68db      	ldr	r3, [r3, #12]
 80217e0:	4916      	ldr	r1, [pc, #88]	; (802183c <HAL_RCC_ClockConfig+0x1c8>)
 80217e2:	4313      	orrs	r3, r2
 80217e4:	608b      	str	r3, [r1, #8]
  }

  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80217e6:	687b      	ldr	r3, [r7, #4]
 80217e8:	681b      	ldr	r3, [r3, #0]
 80217ea:	f003 0308 	and.w	r3, r3, #8
 80217ee:	2b00      	cmp	r3, #0
 80217f0:	d009      	beq.n	8021806 <HAL_RCC_ClockConfig+0x192>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3));
 80217f2:	4b12      	ldr	r3, [pc, #72]	; (802183c <HAL_RCC_ClockConfig+0x1c8>)
 80217f4:	689b      	ldr	r3, [r3, #8]
 80217f6:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 80217fa:	687b      	ldr	r3, [r7, #4]
 80217fc:	691b      	ldr	r3, [r3, #16]
 80217fe:	00db      	lsls	r3, r3, #3
 8021800:	490e      	ldr	r1, [pc, #56]	; (802183c <HAL_RCC_ClockConfig+0x1c8>)
 8021802:	4313      	orrs	r3, r2
 8021804:	608b      	str	r3, [r1, #8]
  }

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos];
 8021806:	f000 f821 	bl	802184c <HAL_RCC_GetSysClockFreq>
 802180a:	4602      	mov	r2, r0
 802180c:	4b0b      	ldr	r3, [pc, #44]	; (802183c <HAL_RCC_ClockConfig+0x1c8>)
 802180e:	689b      	ldr	r3, [r3, #8]
 8021810:	091b      	lsrs	r3, r3, #4
 8021812:	f003 030f 	and.w	r3, r3, #15
 8021816:	490a      	ldr	r1, [pc, #40]	; (8021840 <HAL_RCC_ClockConfig+0x1cc>)
 8021818:	5ccb      	ldrb	r3, [r1, r3]
 802181a:	fa22 f303 	lsr.w	r3, r2, r3
 802181e:	4a09      	ldr	r2, [pc, #36]	; (8021844 <HAL_RCC_ClockConfig+0x1d0>)
 8021820:	6013      	str	r3, [r2, #0]

  /* Configure the source of time base considering new system clocks settings*/
  HAL_InitTick(uwTickPrio);
 8021822:	4b09      	ldr	r3, [pc, #36]	; (8021848 <HAL_RCC_ClockConfig+0x1d4>)
 8021824:	681b      	ldr	r3, [r3, #0]
 8021826:	4618      	mov	r0, r3
 8021828:	f7ff f86c 	bl	8020904 <HAL_InitTick>

  return HAL_OK;
 802182c:	2300      	movs	r3, #0
}
 802182e:	4618      	mov	r0, r3
 8021830:	3710      	adds	r7, #16
 8021832:	46bd      	mov	sp, r7
 8021834:	bd80      	pop	{r7, pc}
 8021836:	bf00      	nop
 8021838:	40023c00 	.word	0x40023c00
 802183c:	40023800 	.word	0x40023800
 8021840:	0802a1f8 	.word	0x0802a1f8
 8021844:	20000004 	.word	0x20000004
 8021848:	20000008 	.word	0x20000008

0802184c <HAL_RCC_GetSysClockFreq>:
  *
  *
  * @retval SYSCLK frequency
  */
uint32_t HAL_RCC_GetSysClockFreq(void)
{
 802184c:	b5b0      	push	{r4, r5, r7, lr}
 802184e:	b084      	sub	sp, #16
 8021850:	af00      	add	r7, sp, #0
  uint32_t pllm = 0, pllvco = 0, pllp = 0;
 8021852:	2100      	movs	r1, #0
 8021854:	6079      	str	r1, [r7, #4]
 8021856:	2100      	movs	r1, #0
 8021858:	60f9      	str	r1, [r7, #12]
 802185a:	2100      	movs	r1, #0
 802185c:	6039      	str	r1, [r7, #0]
  uint32_t sysclockfreq = 0;
 802185e:	2100      	movs	r1, #0
 8021860:	60b9      	str	r1, [r7, #8]

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8021862:	4952      	ldr	r1, [pc, #328]	; (80219ac <HAL_RCC_GetSysClockFreq+0x160>)
 8021864:	6889      	ldr	r1, [r1, #8]
 8021866:	f001 010c 	and.w	r1, r1, #12
 802186a:	2908      	cmp	r1, #8
 802186c:	d00d      	beq.n	802188a <HAL_RCC_GetSysClockFreq+0x3e>
 802186e:	2908      	cmp	r1, #8
 8021870:	f200 8094 	bhi.w	802199c <HAL_RCC_GetSysClockFreq+0x150>
 8021874:	2900      	cmp	r1, #0
 8021876:	d002      	beq.n	802187e <HAL_RCC_GetSysClockFreq+0x32>
 8021878:	2904      	cmp	r1, #4
 802187a:	d003      	beq.n	8021884 <HAL_RCC_GetSysClockFreq+0x38>
 802187c:	e08e      	b.n	802199c <HAL_RCC_GetSysClockFreq+0x150>
  {
    case RCC_SYSCLKSOURCE_STATUS_HSI:  /* HSI used as system clock source */
    {
      sysclockfreq = HSI_VALUE;
 802187e:	4b4c      	ldr	r3, [pc, #304]	; (80219b0 <HAL_RCC_GetSysClockFreq+0x164>)
 8021880:	60bb      	str	r3, [r7, #8]
      break;
 8021882:	e08e      	b.n	80219a2 <HAL_RCC_GetSysClockFreq+0x156>
    }
    case RCC_SYSCLKSOURCE_STATUS_HSE:  /* HSE used as system clock  source */
    {
      sysclockfreq = HSE_VALUE;
 8021884:	4b4b      	ldr	r3, [pc, #300]	; (80219b4 <HAL_RCC_GetSysClockFreq+0x168>)
 8021886:	60bb      	str	r3, [r7, #8]
      break;
 8021888:	e08b      	b.n	80219a2 <HAL_RCC_GetSysClockFreq+0x156>
    }
    case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 802188a:	4948      	ldr	r1, [pc, #288]	; (80219ac <HAL_RCC_GetSysClockFreq+0x160>)
 802188c:	6849      	ldr	r1, [r1, #4]
 802188e:	f001 013f 	and.w	r1, r1, #63	; 0x3f
 8021892:	6079      	str	r1, [r7, #4]
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLCFGR_PLLSRC_HSI)
 8021894:	4945      	ldr	r1, [pc, #276]	; (80219ac <HAL_RCC_GetSysClockFreq+0x160>)
 8021896:	6849      	ldr	r1, [r1, #4]
 8021898:	f401 0180 	and.w	r1, r1, #4194304	; 0x400000
 802189c:	2900      	cmp	r1, #0
 802189e:	d024      	beq.n	80218ea <HAL_RCC_GetSysClockFreq+0x9e>
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80218a0:	4942      	ldr	r1, [pc, #264]	; (80219ac <HAL_RCC_GetSysClockFreq+0x160>)
 80218a2:	6849      	ldr	r1, [r1, #4]
 80218a4:	0989      	lsrs	r1, r1, #6
 80218a6:	4608      	mov	r0, r1
 80218a8:	f04f 0100 	mov.w	r1, #0
 80218ac:	f240 14ff 	movw	r4, #511	; 0x1ff
 80218b0:	f04f 0500 	mov.w	r5, #0
 80218b4:	ea00 0204 	and.w	r2, r0, r4
 80218b8:	ea01 0305 	and.w	r3, r1, r5
 80218bc:	493d      	ldr	r1, [pc, #244]	; (80219b4 <HAL_RCC_GetSysClockFreq+0x168>)
 80218be:	fb01 f003 	mul.w	r0, r1, r3
 80218c2:	2100      	movs	r1, #0
 80218c4:	fb01 f102 	mul.w	r1, r1, r2
 80218c8:	1844      	adds	r4, r0, r1
 80218ca:	493a      	ldr	r1, [pc, #232]	; (80219b4 <HAL_RCC_GetSysClockFreq+0x168>)
 80218cc:	fba2 0101 	umull	r0, r1, r2, r1
 80218d0:	1863      	adds	r3, r4, r1
 80218d2:	4619      	mov	r1, r3
 80218d4:	687b      	ldr	r3, [r7, #4]
 80218d6:	461a      	mov	r2, r3
 80218d8:	f04f 0300 	mov.w	r3, #0
 80218dc:	f7df f9f4 	bl	8000cc8 <__aeabi_uldivmod>
 80218e0:	4602      	mov	r2, r0
 80218e2:	460b      	mov	r3, r1
 80218e4:	4613      	mov	r3, r2
 80218e6:	60fb      	str	r3, [r7, #12]
 80218e8:	e04a      	b.n	8021980 <HAL_RCC_GetSysClockFreq+0x134>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80218ea:	4b30      	ldr	r3, [pc, #192]	; (80219ac <HAL_RCC_GetSysClockFreq+0x160>)
 80218ec:	685b      	ldr	r3, [r3, #4]
 80218ee:	099b      	lsrs	r3, r3, #6
 80218f0:	461a      	mov	r2, r3
 80218f2:	f04f 0300 	mov.w	r3, #0
 80218f6:	f240 10ff 	movw	r0, #511	; 0x1ff
 80218fa:	f04f 0100 	mov.w	r1, #0
 80218fe:	ea02 0400 	and.w	r4, r2, r0
 8021902:	ea03 0501 	and.w	r5, r3, r1
 8021906:	4620      	mov	r0, r4
 8021908:	4629      	mov	r1, r5
 802190a:	f04f 0200 	mov.w	r2, #0
 802190e:	f04f 0300 	mov.w	r3, #0
 8021912:	014b      	lsls	r3, r1, #5
 8021914:	ea43 63d0 	orr.w	r3, r3, r0, lsr #27
 8021918:	0142      	lsls	r2, r0, #5
 802191a:	4610      	mov	r0, r2
 802191c:	4619      	mov	r1, r3
 802191e:	1b00      	subs	r0, r0, r4
 8021920:	eb61 0105 	sbc.w	r1, r1, r5
 8021924:	f04f 0200 	mov.w	r2, #0
 8021928:	f04f 0300 	mov.w	r3, #0
 802192c:	018b      	lsls	r3, r1, #6
 802192e:	ea43 6390 	orr.w	r3, r3, r0, lsr #26
 8021932:	0182      	lsls	r2, r0, #6
 8021934:	1a12      	subs	r2, r2, r0
 8021936:	eb63 0301 	sbc.w	r3, r3, r1
 802193a:	f04f 0000 	mov.w	r0, #0
 802193e:	f04f 0100 	mov.w	r1, #0
 8021942:	00d9      	lsls	r1, r3, #3
 8021944:	ea41 7152 	orr.w	r1, r1, r2, lsr #29
 8021948:	00d0      	lsls	r0, r2, #3
 802194a:	4602      	mov	r2, r0
 802194c:	460b      	mov	r3, r1
 802194e:	1912      	adds	r2, r2, r4
 8021950:	eb45 0303 	adc.w	r3, r5, r3
 8021954:	f04f 0000 	mov.w	r0, #0
 8021958:	f04f 0100 	mov.w	r1, #0
 802195c:	0299      	lsls	r1, r3, #10
 802195e:	ea41 5192 	orr.w	r1, r1, r2, lsr #22
 8021962:	0290      	lsls	r0, r2, #10
 8021964:	4602      	mov	r2, r0
 8021966:	460b      	mov	r3, r1
 8021968:	4610      	mov	r0, r2
 802196a:	4619      	mov	r1, r3
 802196c:	687b      	ldr	r3, [r7, #4]
 802196e:	461a      	mov	r2, r3
 8021970:	f04f 0300 	mov.w	r3, #0
 8021974:	f7df f9a8 	bl	8000cc8 <__aeabi_uldivmod>
 8021978:	4602      	mov	r2, r0
 802197a:	460b      	mov	r3, r1
 802197c:	4613      	mov	r3, r2
 802197e:	60fb      	str	r3, [r7, #12]
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1) * 2);
 8021980:	4b0a      	ldr	r3, [pc, #40]	; (80219ac <HAL_RCC_GetSysClockFreq+0x160>)
 8021982:	685b      	ldr	r3, [r3, #4]
 8021984:	0c1b      	lsrs	r3, r3, #16
 8021986:	f003 0303 	and.w	r3, r3, #3
 802198a:	3301      	adds	r3, #1
 802198c:	005b      	lsls	r3, r3, #1
 802198e:	603b      	str	r3, [r7, #0]

      sysclockfreq = pllvco / pllp;
 8021990:	68fa      	ldr	r2, [r7, #12]
 8021992:	683b      	ldr	r3, [r7, #0]
 8021994:	fbb2 f3f3 	udiv	r3, r2, r3
 8021998:	60bb      	str	r3, [r7, #8]
      break;
 802199a:	e002      	b.n	80219a2 <HAL_RCC_GetSysClockFreq+0x156>
    }
    default:
    {
      sysclockfreq = HSI_VALUE;
 802199c:	4b04      	ldr	r3, [pc, #16]	; (80219b0 <HAL_RCC_GetSysClockFreq+0x164>)
 802199e:	60bb      	str	r3, [r7, #8]
      break;
 80219a0:	bf00      	nop
    }
  }
  return sysclockfreq;
 80219a2:	68bb      	ldr	r3, [r7, #8]
}
 80219a4:	4618      	mov	r0, r3
 80219a6:	3710      	adds	r7, #16
 80219a8:	46bd      	mov	sp, r7
 80219aa:	bdb0      	pop	{r4, r5, r7, pc}
 80219ac:	40023800 	.word	0x40023800
 80219b0:	00f42400 	.word	0x00f42400
 80219b4:	017d7840 	.word	0x017d7840

080219b8 <HAL_RCC_GetHCLKFreq>:
  *         right HCLK value. Otherwise, any configuration based on this function will be incorrect.
  * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency.
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
 80219b8:	b480      	push	{r7}
 80219ba:	af00      	add	r7, sp, #0
  return SystemCoreClock;
 80219bc:	4b03      	ldr	r3, [pc, #12]	; (80219cc <HAL_RCC_GetHCLKFreq+0x14>)
 80219be:	681b      	ldr	r3, [r3, #0]
}
 80219c0:	4618      	mov	r0, r3
 80219c2:	46bd      	mov	sp, r7
 80219c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80219c8:	4770      	bx	lr
 80219ca:	bf00      	nop
 80219cc:	20000004 	.word	0x20000004

080219d0 <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
 80219d0:	b580      	push	{r7, lr}
 80219d2:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos]);
 80219d4:	f7ff fff0 	bl	80219b8 <HAL_RCC_GetHCLKFreq>
 80219d8:	4602      	mov	r2, r0
 80219da:	4b05      	ldr	r3, [pc, #20]	; (80219f0 <HAL_RCC_GetPCLK1Freq+0x20>)
 80219dc:	689b      	ldr	r3, [r3, #8]
 80219de:	0a9b      	lsrs	r3, r3, #10
 80219e0:	f003 0307 	and.w	r3, r3, #7
 80219e4:	4903      	ldr	r1, [pc, #12]	; (80219f4 <HAL_RCC_GetPCLK1Freq+0x24>)
 80219e6:	5ccb      	ldrb	r3, [r1, r3]
 80219e8:	fa22 f303 	lsr.w	r3, r2, r3
}
 80219ec:	4618      	mov	r0, r3
 80219ee:	bd80      	pop	{r7, pc}
 80219f0:	40023800 	.word	0x40023800
 80219f4:	0802a208 	.word	0x0802a208

080219f8 <HAL_RCC_GetPCLK2Freq>:
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
 80219f8:	b580      	push	{r7, lr}
 80219fa:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2) >> RCC_CFGR_PPRE2_Pos]);
 80219fc:	f7ff ffdc 	bl	80219b8 <HAL_RCC_GetHCLKFreq>
 8021a00:	4602      	mov	r2, r0
 8021a02:	4b05      	ldr	r3, [pc, #20]	; (8021a18 <HAL_RCC_GetPCLK2Freq+0x20>)
 8021a04:	689b      	ldr	r3, [r3, #8]
 8021a06:	0b5b      	lsrs	r3, r3, #13
 8021a08:	f003 0307 	and.w	r3, r3, #7
 8021a0c:	4903      	ldr	r1, [pc, #12]	; (8021a1c <HAL_RCC_GetPCLK2Freq+0x24>)
 8021a0e:	5ccb      	ldrb	r3, [r1, r3]
 8021a10:	fa22 f303 	lsr.w	r3, r2, r3
}
 8021a14:	4618      	mov	r0, r3
 8021a16:	bd80      	pop	{r7, pc}
 8021a18:	40023800 	.word	0x40023800
 8021a1c:	0802a208 	.word	0x0802a208

08021a20 <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 8021a20:	b580      	push	{r7, lr}
 8021a22:	b088      	sub	sp, #32
 8021a24:	af00      	add	r7, sp, #0
 8021a26:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = 0;
 8021a28:	2300      	movs	r3, #0
 8021a2a:	617b      	str	r3, [r7, #20]
  uint32_t tmpreg0 = 0;
 8021a2c:	2300      	movs	r3, #0
 8021a2e:	613b      	str	r3, [r7, #16]
  uint32_t tmpreg1 = 0;
 8021a30:	2300      	movs	r3, #0
 8021a32:	60fb      	str	r3, [r7, #12]
  uint32_t plli2sused = 0;
 8021a34:	2300      	movs	r3, #0
 8021a36:	61fb      	str	r3, [r7, #28]
  uint32_t pllsaiused = 0;
 8021a38:	2300      	movs	r3, #0
 8021a3a:	61bb      	str	r3, [r7, #24]

  /* Check the parameters */
  assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));

  /*----------------------------------- I2S configuration ----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 8021a3c:	687b      	ldr	r3, [r7, #4]
 8021a3e:	681b      	ldr	r3, [r3, #0]
 8021a40:	f003 0301 	and.w	r3, r3, #1
 8021a44:	2b00      	cmp	r3, #0
 8021a46:	d012      	beq.n	8021a6e <HAL_RCCEx_PeriphCLKConfig+0x4e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2SCLKSOURCE(PeriphClkInit->I2sClockSelection));

    /* Configure I2S Clock source */
    __HAL_RCC_I2S_CONFIG(PeriphClkInit->I2sClockSelection);
 8021a48:	4b69      	ldr	r3, [pc, #420]	; (8021bf0 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8021a4a:	689b      	ldr	r3, [r3, #8]
 8021a4c:	4a68      	ldr	r2, [pc, #416]	; (8021bf0 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8021a4e:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8021a52:	6093      	str	r3, [r2, #8]
 8021a54:	4b66      	ldr	r3, [pc, #408]	; (8021bf0 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8021a56:	689a      	ldr	r2, [r3, #8]
 8021a58:	687b      	ldr	r3, [r7, #4]
 8021a5a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8021a5c:	4964      	ldr	r1, [pc, #400]	; (8021bf0 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8021a5e:	4313      	orrs	r3, r2
 8021a60:	608b      	str	r3, [r1, #8]

    /* Enable the PLLI2S when it's used as clock source for I2S */
    if(PeriphClkInit->I2sClockSelection == RCC_I2SCLKSOURCE_PLLI2S)
 8021a62:	687b      	ldr	r3, [r7, #4]
 8021a64:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8021a66:	2b00      	cmp	r3, #0
 8021a68:	d101      	bne.n	8021a6e <HAL_RCCEx_PeriphCLKConfig+0x4e>
    {
      plli2sused = 1;
 8021a6a:	2301      	movs	r3, #1
 8021a6c:	61fb      	str	r3, [r7, #28]
    }
  }

  /*------------------------------------ SAI1 configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == (RCC_PERIPHCLK_SAI1))
 8021a6e:	687b      	ldr	r3, [r7, #4]
 8021a70:	681b      	ldr	r3, [r3, #0]
 8021a72:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8021a76:	2b00      	cmp	r3, #0
 8021a78:	d017      	beq.n	8021aaa <HAL_RCCEx_PeriphCLKConfig+0x8a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SAI1CLKSOURCE(PeriphClkInit->Sai1ClockSelection));

    /* Configure SAI1 Clock source */
    __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
 8021a7a:	4b5d      	ldr	r3, [pc, #372]	; (8021bf0 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8021a7c:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8021a80:	f423 1240 	bic.w	r2, r3, #3145728	; 0x300000
 8021a84:	687b      	ldr	r3, [r7, #4]
 8021a86:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8021a88:	4959      	ldr	r1, [pc, #356]	; (8021bf0 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8021a8a:	4313      	orrs	r3, r2
 8021a8c:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
    /* Enable the PLLI2S when it's used as clock source for SAI */
    if(PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLI2S)
 8021a90:	687b      	ldr	r3, [r7, #4]
 8021a92:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8021a94:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8021a98:	d101      	bne.n	8021a9e <HAL_RCCEx_PeriphCLKConfig+0x7e>
    {
      plli2sused = 1;
 8021a9a:	2301      	movs	r3, #1
 8021a9c:	61fb      	str	r3, [r7, #28]
    }
    /* Enable the PLLSAI when it's used as clock source for SAI */
    if(PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLSAI)
 8021a9e:	687b      	ldr	r3, [r7, #4]
 8021aa0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8021aa2:	2b00      	cmp	r3, #0
 8021aa4:	d101      	bne.n	8021aaa <HAL_RCCEx_PeriphCLKConfig+0x8a>
    {
      pllsaiused = 1;
 8021aa6:	2301      	movs	r3, #1
 8021aa8:	61bb      	str	r3, [r7, #24]
    }
  }

  /*------------------------------------ SAI2 configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == (RCC_PERIPHCLK_SAI2))
 8021aaa:	687b      	ldr	r3, [r7, #4]
 8021aac:	681b      	ldr	r3, [r3, #0]
 8021aae:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8021ab2:	2b00      	cmp	r3, #0
 8021ab4:	d017      	beq.n	8021ae6 <HAL_RCCEx_PeriphCLKConfig+0xc6>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SAI2CLKSOURCE(PeriphClkInit->Sai2ClockSelection));

    /* Configure SAI2 Clock source */
    __HAL_RCC_SAI2_CONFIG(PeriphClkInit->Sai2ClockSelection);
 8021ab6:	4b4e      	ldr	r3, [pc, #312]	; (8021bf0 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8021ab8:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8021abc:	f423 0240 	bic.w	r2, r3, #12582912	; 0xc00000
 8021ac0:	687b      	ldr	r3, [r7, #4]
 8021ac2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8021ac4:	494a      	ldr	r1, [pc, #296]	; (8021bf0 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8021ac6:	4313      	orrs	r3, r2
 8021ac8:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c

    /* Enable the PLLI2S when it's used as clock source for SAI */
    if(PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLI2S)
 8021acc:	687b      	ldr	r3, [r7, #4]
 8021ace:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8021ad0:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8021ad4:	d101      	bne.n	8021ada <HAL_RCCEx_PeriphCLKConfig+0xba>
    {
      plli2sused = 1;
 8021ad6:	2301      	movs	r3, #1
 8021ad8:	61fb      	str	r3, [r7, #28]
    }
    /* Enable the PLLSAI when it's used as clock source for SAI */
    if(PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLSAI)
 8021ada:	687b      	ldr	r3, [r7, #4]
 8021adc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8021ade:	2b00      	cmp	r3, #0
 8021ae0:	d101      	bne.n	8021ae6 <HAL_RCCEx_PeriphCLKConfig+0xc6>
    {
      pllsaiused = 1;
 8021ae2:	2301      	movs	r3, #1
 8021ae4:	61bb      	str	r3, [r7, #24]
    }
  }

  /*-------------------------------------- SPDIF-RX Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
 8021ae6:	687b      	ldr	r3, [r7, #4]
 8021ae8:	681b      	ldr	r3, [r3, #0]
 8021aea:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8021aee:	2b00      	cmp	r3, #0
 8021af0:	d001      	beq.n	8021af6 <HAL_RCCEx_PeriphCLKConfig+0xd6>
  {
      plli2sused = 1;
 8021af2:	2301      	movs	r3, #1
 8021af4:	61fb      	str	r3, [r7, #28]
  }

  /*------------------------------------ RTC configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 8021af6:	687b      	ldr	r3, [r7, #4]
 8021af8:	681b      	ldr	r3, [r3, #0]
 8021afa:	f003 0320 	and.w	r3, r3, #32
 8021afe:	2b00      	cmp	r3, #0
 8021b00:	f000 808b 	beq.w	8021c1a <HAL_RCCEx_PeriphCLKConfig+0x1fa>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 8021b04:	4b3a      	ldr	r3, [pc, #232]	; (8021bf0 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8021b06:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8021b08:	4a39      	ldr	r2, [pc, #228]	; (8021bf0 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8021b0a:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8021b0e:	6413      	str	r3, [r2, #64]	; 0x40
 8021b10:	4b37      	ldr	r3, [pc, #220]	; (8021bf0 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8021b12:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8021b14:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8021b18:	60bb      	str	r3, [r7, #8]
 8021b1a:	68bb      	ldr	r3, [r7, #8]

    /* Enable write access to Backup domain */
    PWR->CR1 |= PWR_CR1_DBP;
 8021b1c:	4b35      	ldr	r3, [pc, #212]	; (8021bf4 <HAL_RCCEx_PeriphCLKConfig+0x1d4>)
 8021b1e:	681b      	ldr	r3, [r3, #0]
 8021b20:	4a34      	ldr	r2, [pc, #208]	; (8021bf4 <HAL_RCCEx_PeriphCLKConfig+0x1d4>)
 8021b22:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8021b26:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8021b28:	f7fe ff30 	bl	802098c <HAL_GetTick>
 8021b2c:	6178      	str	r0, [r7, #20]

    /* Wait for Backup domain Write protection disable */
    while((PWR->CR1 & PWR_CR1_DBP) == RESET)
 8021b2e:	e008      	b.n	8021b42 <HAL_RCCEx_PeriphCLKConfig+0x122>
    {
      if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8021b30:	f7fe ff2c 	bl	802098c <HAL_GetTick>
 8021b34:	4602      	mov	r2, r0
 8021b36:	697b      	ldr	r3, [r7, #20]
 8021b38:	1ad3      	subs	r3, r2, r3
 8021b3a:	2b64      	cmp	r3, #100	; 0x64
 8021b3c:	d901      	bls.n	8021b42 <HAL_RCCEx_PeriphCLKConfig+0x122>
      {
        return HAL_TIMEOUT;
 8021b3e:	2303      	movs	r3, #3
 8021b40:	e357      	b.n	80221f2 <HAL_RCCEx_PeriphCLKConfig+0x7d2>
    while((PWR->CR1 & PWR_CR1_DBP) == RESET)
 8021b42:	4b2c      	ldr	r3, [pc, #176]	; (8021bf4 <HAL_RCCEx_PeriphCLKConfig+0x1d4>)
 8021b44:	681b      	ldr	r3, [r3, #0]
 8021b46:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8021b4a:	2b00      	cmp	r3, #0
 8021b4c:	d0f0      	beq.n	8021b30 <HAL_RCCEx_PeriphCLKConfig+0x110>
      }
    }

    /* Reset the Backup domain only if the RTC Clock source selection is modified */
    tmpreg0 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8021b4e:	4b28      	ldr	r3, [pc, #160]	; (8021bf0 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8021b50:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8021b52:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8021b56:	613b      	str	r3, [r7, #16]

    if((tmpreg0 != 0x00000000U) && (tmpreg0 != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8021b58:	693b      	ldr	r3, [r7, #16]
 8021b5a:	2b00      	cmp	r3, #0
 8021b5c:	d035      	beq.n	8021bca <HAL_RCCEx_PeriphCLKConfig+0x1aa>
 8021b5e:	687b      	ldr	r3, [r7, #4]
 8021b60:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8021b62:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8021b66:	693a      	ldr	r2, [r7, #16]
 8021b68:	429a      	cmp	r2, r3
 8021b6a:	d02e      	beq.n	8021bca <HAL_RCCEx_PeriphCLKConfig+0x1aa>
    {
      /* Store the content of BDCR register before the reset of Backup Domain */
      tmpreg0 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8021b6c:	4b20      	ldr	r3, [pc, #128]	; (8021bf0 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8021b6e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8021b70:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8021b74:	613b      	str	r3, [r7, #16]

      /* RTC Clock selection can be changed only if the Backup Domain is reset */
      __HAL_RCC_BACKUPRESET_FORCE();
 8021b76:	4b1e      	ldr	r3, [pc, #120]	; (8021bf0 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8021b78:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8021b7a:	4a1d      	ldr	r2, [pc, #116]	; (8021bf0 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8021b7c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8021b80:	6713      	str	r3, [r2, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_RELEASE();
 8021b82:	4b1b      	ldr	r3, [pc, #108]	; (8021bf0 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8021b84:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8021b86:	4a1a      	ldr	r2, [pc, #104]	; (8021bf0 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8021b88:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8021b8c:	6713      	str	r3, [r2, #112]	; 0x70

      /* Restore the Content of BDCR register */
      RCC->BDCR = tmpreg0;
 8021b8e:	4a18      	ldr	r2, [pc, #96]	; (8021bf0 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8021b90:	693b      	ldr	r3, [r7, #16]
 8021b92:	6713      	str	r3, [r2, #112]	; 0x70

      /* Wait for LSE reactivation if LSE was enable prior to Backup Domain reset */
      if (HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 8021b94:	4b16      	ldr	r3, [pc, #88]	; (8021bf0 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8021b96:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8021b98:	f003 0301 	and.w	r3, r3, #1
 8021b9c:	2b01      	cmp	r3, #1
 8021b9e:	d114      	bne.n	8021bca <HAL_RCCEx_PeriphCLKConfig+0x1aa>
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8021ba0:	f7fe fef4 	bl	802098c <HAL_GetTick>
 8021ba4:	6178      	str	r0, [r7, #20]

        /* Wait till LSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8021ba6:	e00a      	b.n	8021bbe <HAL_RCCEx_PeriphCLKConfig+0x19e>
        {
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8021ba8:	f7fe fef0 	bl	802098c <HAL_GetTick>
 8021bac:	4602      	mov	r2, r0
 8021bae:	697b      	ldr	r3, [r7, #20]
 8021bb0:	1ad3      	subs	r3, r2, r3
 8021bb2:	f241 3288 	movw	r2, #5000	; 0x1388
 8021bb6:	4293      	cmp	r3, r2
 8021bb8:	d901      	bls.n	8021bbe <HAL_RCCEx_PeriphCLKConfig+0x19e>
          {
            return HAL_TIMEOUT;
 8021bba:	2303      	movs	r3, #3
 8021bbc:	e319      	b.n	80221f2 <HAL_RCCEx_PeriphCLKConfig+0x7d2>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8021bbe:	4b0c      	ldr	r3, [pc, #48]	; (8021bf0 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8021bc0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8021bc2:	f003 0302 	and.w	r3, r3, #2
 8021bc6:	2b00      	cmp	r3, #0
 8021bc8:	d0ee      	beq.n	8021ba8 <HAL_RCCEx_PeriphCLKConfig+0x188>
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8021bca:	687b      	ldr	r3, [r7, #4]
 8021bcc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8021bce:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8021bd2:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8021bd6:	d111      	bne.n	8021bfc <HAL_RCCEx_PeriphCLKConfig+0x1dc>
 8021bd8:	4b05      	ldr	r3, [pc, #20]	; (8021bf0 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8021bda:	689b      	ldr	r3, [r3, #8]
 8021bdc:	f423 12f8 	bic.w	r2, r3, #2031616	; 0x1f0000
 8021be0:	687b      	ldr	r3, [r7, #4]
 8021be2:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8021be4:	4b04      	ldr	r3, [pc, #16]	; (8021bf8 <HAL_RCCEx_PeriphCLKConfig+0x1d8>)
 8021be6:	400b      	ands	r3, r1
 8021be8:	4901      	ldr	r1, [pc, #4]	; (8021bf0 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8021bea:	4313      	orrs	r3, r2
 8021bec:	608b      	str	r3, [r1, #8]
 8021bee:	e00b      	b.n	8021c08 <HAL_RCCEx_PeriphCLKConfig+0x1e8>
 8021bf0:	40023800 	.word	0x40023800
 8021bf4:	40007000 	.word	0x40007000
 8021bf8:	0ffffcff 	.word	0x0ffffcff
 8021bfc:	4bb1      	ldr	r3, [pc, #708]	; (8021ec4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021bfe:	689b      	ldr	r3, [r3, #8]
 8021c00:	4ab0      	ldr	r2, [pc, #704]	; (8021ec4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021c02:	f423 13f8 	bic.w	r3, r3, #2031616	; 0x1f0000
 8021c06:	6093      	str	r3, [r2, #8]
 8021c08:	4bae      	ldr	r3, [pc, #696]	; (8021ec4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021c0a:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 8021c0c:	687b      	ldr	r3, [r7, #4]
 8021c0e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8021c10:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8021c14:	49ab      	ldr	r1, [pc, #684]	; (8021ec4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021c16:	4313      	orrs	r3, r2
 8021c18:	670b      	str	r3, [r1, #112]	; 0x70
  }

  /*------------------------------------ TIM configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 8021c1a:	687b      	ldr	r3, [r7, #4]
 8021c1c:	681b      	ldr	r3, [r3, #0]
 8021c1e:	f003 0310 	and.w	r3, r3, #16
 8021c22:	2b00      	cmp	r3, #0
 8021c24:	d010      	beq.n	8021c48 <HAL_RCCEx_PeriphCLKConfig+0x228>
  {
    /* Check the parameters */
    assert_param(IS_RCC_TIMPRES(PeriphClkInit->TIMPresSelection));

    /* Configure Timer Prescaler */
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 8021c26:	4ba7      	ldr	r3, [pc, #668]	; (8021ec4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021c28:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8021c2c:	4aa5      	ldr	r2, [pc, #660]	; (8021ec4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021c2e:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8021c32:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
 8021c36:	4ba3      	ldr	r3, [pc, #652]	; (8021ec4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021c38:	f8d3 208c 	ldr.w	r2, [r3, #140]	; 0x8c
 8021c3c:	687b      	ldr	r3, [r7, #4]
 8021c3e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8021c40:	49a0      	ldr	r1, [pc, #640]	; (8021ec4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021c42:	4313      	orrs	r3, r2
 8021c44:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
  }

  /*-------------------------------------- I2C1 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C1) == RCC_PERIPHCLK_I2C1)
 8021c48:	687b      	ldr	r3, [r7, #4]
 8021c4a:	681b      	ldr	r3, [r3, #0]
 8021c4c:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8021c50:	2b00      	cmp	r3, #0
 8021c52:	d00a      	beq.n	8021c6a <HAL_RCCEx_PeriphCLKConfig+0x24a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C1CLKSOURCE(PeriphClkInit->I2c1ClockSelection));

    /* Configure the I2C1 clock source */
    __HAL_RCC_I2C1_CONFIG(PeriphClkInit->I2c1ClockSelection);
 8021c54:	4b9b      	ldr	r3, [pc, #620]	; (8021ec4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021c56:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8021c5a:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 8021c5e:	687b      	ldr	r3, [r7, #4]
 8021c60:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8021c62:	4998      	ldr	r1, [pc, #608]	; (8021ec4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021c64:	4313      	orrs	r3, r2
 8021c66:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- I2C2 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C2) == RCC_PERIPHCLK_I2C2)
 8021c6a:	687b      	ldr	r3, [r7, #4]
 8021c6c:	681b      	ldr	r3, [r3, #0]
 8021c6e:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8021c72:	2b00      	cmp	r3, #0
 8021c74:	d00a      	beq.n	8021c8c <HAL_RCCEx_PeriphCLKConfig+0x26c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C2CLKSOURCE(PeriphClkInit->I2c2ClockSelection));

    /* Configure the I2C2 clock source */
    __HAL_RCC_I2C2_CONFIG(PeriphClkInit->I2c2ClockSelection);
 8021c76:	4b93      	ldr	r3, [pc, #588]	; (8021ec4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021c78:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8021c7c:	f423 2240 	bic.w	r2, r3, #786432	; 0xc0000
 8021c80:	687b      	ldr	r3, [r7, #4]
 8021c82:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8021c84:	498f      	ldr	r1, [pc, #572]	; (8021ec4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021c86:	4313      	orrs	r3, r2
 8021c88:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- I2C3 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C3) == RCC_PERIPHCLK_I2C3)
 8021c8c:	687b      	ldr	r3, [r7, #4]
 8021c8e:	681b      	ldr	r3, [r3, #0]
 8021c90:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8021c94:	2b00      	cmp	r3, #0
 8021c96:	d00a      	beq.n	8021cae <HAL_RCCEx_PeriphCLKConfig+0x28e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C3CLKSOURCE(PeriphClkInit->I2c3ClockSelection));

    /* Configure the I2C3 clock source */
    __HAL_RCC_I2C3_CONFIG(PeriphClkInit->I2c3ClockSelection);
 8021c98:	4b8a      	ldr	r3, [pc, #552]	; (8021ec4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021c9a:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8021c9e:	f423 1240 	bic.w	r2, r3, #3145728	; 0x300000
 8021ca2:	687b      	ldr	r3, [r7, #4]
 8021ca4:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8021ca6:	4987      	ldr	r1, [pc, #540]	; (8021ec4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021ca8:	4313      	orrs	r3, r2
 8021caa:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- I2C4 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
 8021cae:	687b      	ldr	r3, [r7, #4]
 8021cb0:	681b      	ldr	r3, [r3, #0]
 8021cb2:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8021cb6:	2b00      	cmp	r3, #0
 8021cb8:	d00a      	beq.n	8021cd0 <HAL_RCCEx_PeriphCLKConfig+0x2b0>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C4CLKSOURCE(PeriphClkInit->I2c4ClockSelection));

    /* Configure the I2C4 clock source */
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
 8021cba:	4b82      	ldr	r3, [pc, #520]	; (8021ec4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021cbc:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8021cc0:	f423 0240 	bic.w	r2, r3, #12582912	; 0xc00000
 8021cc4:	687b      	ldr	r3, [r7, #4]
 8021cc6:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8021cc8:	497e      	ldr	r1, [pc, #504]	; (8021ec4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021cca:	4313      	orrs	r3, r2
 8021ccc:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- USART1 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART1) == RCC_PERIPHCLK_USART1)
 8021cd0:	687b      	ldr	r3, [r7, #4]
 8021cd2:	681b      	ldr	r3, [r3, #0]
 8021cd4:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8021cd8:	2b00      	cmp	r3, #0
 8021cda:	d00a      	beq.n	8021cf2 <HAL_RCCEx_PeriphCLKConfig+0x2d2>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART1CLKSOURCE(PeriphClkInit->Usart1ClockSelection));

    /* Configure the USART1 clock source */
    __HAL_RCC_USART1_CONFIG(PeriphClkInit->Usart1ClockSelection);
 8021cdc:	4b79      	ldr	r3, [pc, #484]	; (8021ec4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021cde:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8021ce2:	f023 0203 	bic.w	r2, r3, #3
 8021ce6:	687b      	ldr	r3, [r7, #4]
 8021ce8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8021cea:	4976      	ldr	r1, [pc, #472]	; (8021ec4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021cec:	4313      	orrs	r3, r2
 8021cee:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- USART2 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART2) == RCC_PERIPHCLK_USART2)
 8021cf2:	687b      	ldr	r3, [r7, #4]
 8021cf4:	681b      	ldr	r3, [r3, #0]
 8021cf6:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8021cfa:	2b00      	cmp	r3, #0
 8021cfc:	d00a      	beq.n	8021d14 <HAL_RCCEx_PeriphCLKConfig+0x2f4>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART2CLKSOURCE(PeriphClkInit->Usart2ClockSelection));

    /* Configure the USART2 clock source */
    __HAL_RCC_USART2_CONFIG(PeriphClkInit->Usart2ClockSelection);
 8021cfe:	4b71      	ldr	r3, [pc, #452]	; (8021ec4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021d00:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8021d04:	f023 020c 	bic.w	r2, r3, #12
 8021d08:	687b      	ldr	r3, [r7, #4]
 8021d0a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8021d0c:	496d      	ldr	r1, [pc, #436]	; (8021ec4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021d0e:	4313      	orrs	r3, r2
 8021d10:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- USART3 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART3) == RCC_PERIPHCLK_USART3)
 8021d14:	687b      	ldr	r3, [r7, #4]
 8021d16:	681b      	ldr	r3, [r3, #0]
 8021d18:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8021d1c:	2b00      	cmp	r3, #0
 8021d1e:	d00a      	beq.n	8021d36 <HAL_RCCEx_PeriphCLKConfig+0x316>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART3CLKSOURCE(PeriphClkInit->Usart3ClockSelection));

    /* Configure the USART3 clock source */
    __HAL_RCC_USART3_CONFIG(PeriphClkInit->Usart3ClockSelection);
 8021d20:	4b68      	ldr	r3, [pc, #416]	; (8021ec4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021d22:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8021d26:	f023 0230 	bic.w	r2, r3, #48	; 0x30
 8021d2a:	687b      	ldr	r3, [r7, #4]
 8021d2c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8021d2e:	4965      	ldr	r1, [pc, #404]	; (8021ec4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021d30:	4313      	orrs	r3, r2
 8021d32:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- UART4 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART4) == RCC_PERIPHCLK_UART4)
 8021d36:	687b      	ldr	r3, [r7, #4]
 8021d38:	681b      	ldr	r3, [r3, #0]
 8021d3a:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8021d3e:	2b00      	cmp	r3, #0
 8021d40:	d00a      	beq.n	8021d58 <HAL_RCCEx_PeriphCLKConfig+0x338>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART4CLKSOURCE(PeriphClkInit->Uart4ClockSelection));

    /* Configure the UART4 clock source */
    __HAL_RCC_UART4_CONFIG(PeriphClkInit->Uart4ClockSelection);
 8021d42:	4b60      	ldr	r3, [pc, #384]	; (8021ec4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021d44:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8021d48:	f023 02c0 	bic.w	r2, r3, #192	; 0xc0
 8021d4c:	687b      	ldr	r3, [r7, #4]
 8021d4e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8021d50:	495c      	ldr	r1, [pc, #368]	; (8021ec4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021d52:	4313      	orrs	r3, r2
 8021d54:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- UART5 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART5) == RCC_PERIPHCLK_UART5)
 8021d58:	687b      	ldr	r3, [r7, #4]
 8021d5a:	681b      	ldr	r3, [r3, #0]
 8021d5c:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8021d60:	2b00      	cmp	r3, #0
 8021d62:	d00a      	beq.n	8021d7a <HAL_RCCEx_PeriphCLKConfig+0x35a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART5CLKSOURCE(PeriphClkInit->Uart5ClockSelection));

    /* Configure the UART5 clock source */
    __HAL_RCC_UART5_CONFIG(PeriphClkInit->Uart5ClockSelection);
 8021d64:	4b57      	ldr	r3, [pc, #348]	; (8021ec4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021d66:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8021d6a:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 8021d6e:	687b      	ldr	r3, [r7, #4]
 8021d70:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8021d72:	4954      	ldr	r1, [pc, #336]	; (8021ec4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021d74:	4313      	orrs	r3, r2
 8021d76:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- USART6 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART6) == RCC_PERIPHCLK_USART6)
 8021d7a:	687b      	ldr	r3, [r7, #4]
 8021d7c:	681b      	ldr	r3, [r3, #0]
 8021d7e:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8021d82:	2b00      	cmp	r3, #0
 8021d84:	d00a      	beq.n	8021d9c <HAL_RCCEx_PeriphCLKConfig+0x37c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART6CLKSOURCE(PeriphClkInit->Usart6ClockSelection));

    /* Configure the USART6 clock source */
    __HAL_RCC_USART6_CONFIG(PeriphClkInit->Usart6ClockSelection);
 8021d86:	4b4f      	ldr	r3, [pc, #316]	; (8021ec4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021d88:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8021d8c:	f423 6240 	bic.w	r2, r3, #3072	; 0xc00
 8021d90:	687b      	ldr	r3, [r7, #4]
 8021d92:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8021d94:	494b      	ldr	r1, [pc, #300]	; (8021ec4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021d96:	4313      	orrs	r3, r2
 8021d98:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- UART7 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART7) == RCC_PERIPHCLK_UART7)
 8021d9c:	687b      	ldr	r3, [r7, #4]
 8021d9e:	681b      	ldr	r3, [r3, #0]
 8021da0:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8021da4:	2b00      	cmp	r3, #0
 8021da6:	d00a      	beq.n	8021dbe <HAL_RCCEx_PeriphCLKConfig+0x39e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART7CLKSOURCE(PeriphClkInit->Uart7ClockSelection));

    /* Configure the UART7 clock source */
    __HAL_RCC_UART7_CONFIG(PeriphClkInit->Uart7ClockSelection);
 8021da8:	4b46      	ldr	r3, [pc, #280]	; (8021ec4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021daa:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8021dae:	f423 5240 	bic.w	r2, r3, #12288	; 0x3000
 8021db2:	687b      	ldr	r3, [r7, #4]
 8021db4:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8021db6:	4943      	ldr	r1, [pc, #268]	; (8021ec4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021db8:	4313      	orrs	r3, r2
 8021dba:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- UART8 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART8) == RCC_PERIPHCLK_UART8)
 8021dbe:	687b      	ldr	r3, [r7, #4]
 8021dc0:	681b      	ldr	r3, [r3, #0]
 8021dc2:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8021dc6:	2b00      	cmp	r3, #0
 8021dc8:	d00a      	beq.n	8021de0 <HAL_RCCEx_PeriphCLKConfig+0x3c0>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART8CLKSOURCE(PeriphClkInit->Uart8ClockSelection));

    /* Configure the UART8 clock source */
    __HAL_RCC_UART8_CONFIG(PeriphClkInit->Uart8ClockSelection);
 8021dca:	4b3e      	ldr	r3, [pc, #248]	; (8021ec4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021dcc:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8021dd0:	f423 4240 	bic.w	r2, r3, #49152	; 0xc000
 8021dd4:	687b      	ldr	r3, [r7, #4]
 8021dd6:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8021dd8:	493a      	ldr	r1, [pc, #232]	; (8021ec4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021dda:	4313      	orrs	r3, r2
 8021ddc:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*--------------------------------------- CEC Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
 8021de0:	687b      	ldr	r3, [r7, #4]
 8021de2:	681b      	ldr	r3, [r3, #0]
 8021de4:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8021de8:	2b00      	cmp	r3, #0
 8021dea:	d00a      	beq.n	8021e02 <HAL_RCCEx_PeriphCLKConfig+0x3e2>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CECCLKSOURCE(PeriphClkInit->CecClockSelection));

    /* Configure the CEC clock source */
    __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
 8021dec:	4b35      	ldr	r3, [pc, #212]	; (8021ec4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021dee:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8021df2:	f023 6280 	bic.w	r2, r3, #67108864	; 0x4000000
 8021df6:	687b      	ldr	r3, [r7, #4]
 8021df8:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8021dfa:	4932      	ldr	r1, [pc, #200]	; (8021ec4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021dfc:	4313      	orrs	r3, r2
 8021dfe:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- CK48 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
 8021e02:	687b      	ldr	r3, [r7, #4]
 8021e04:	681b      	ldr	r3, [r3, #0]
 8021e06:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8021e0a:	2b00      	cmp	r3, #0
 8021e0c:	d011      	beq.n	8021e32 <HAL_RCCEx_PeriphCLKConfig+0x412>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CLK48SOURCE(PeriphClkInit->Clk48ClockSelection));

    /* Configure the CLK48 source */
    __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
 8021e0e:	4b2d      	ldr	r3, [pc, #180]	; (8021ec4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021e10:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8021e14:	f023 6200 	bic.w	r2, r3, #134217728	; 0x8000000
 8021e18:	687b      	ldr	r3, [r7, #4]
 8021e1a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8021e1c:	4929      	ldr	r1, [pc, #164]	; (8021ec4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021e1e:	4313      	orrs	r3, r2
 8021e20:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90

    /* Enable the PLLSAI when it's used as clock source for CK48 */
    if(PeriphClkInit->Clk48ClockSelection == RCC_CLK48SOURCE_PLLSAIP)
 8021e24:	687b      	ldr	r3, [r7, #4]
 8021e26:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8021e28:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8021e2c:	d101      	bne.n	8021e32 <HAL_RCCEx_PeriphCLKConfig+0x412>
    {
      pllsaiused = 1;
 8021e2e:	2301      	movs	r3, #1
 8021e30:	61bb      	str	r3, [r7, #24]
    }
  }

  /*-------------------------------------- LTDC Configuration -----------------------------------*/
#if defined(STM32F746xx) || defined(STM32F756xx) || defined (STM32F767xx) || defined (STM32F769xx) || defined (STM32F777xx) || defined (STM32F779xx) || defined (STM32F750xx)
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
 8021e32:	687b      	ldr	r3, [r7, #4]
 8021e34:	681b      	ldr	r3, [r3, #0]
 8021e36:	f003 0308 	and.w	r3, r3, #8
 8021e3a:	2b00      	cmp	r3, #0
 8021e3c:	d001      	beq.n	8021e42 <HAL_RCCEx_PeriphCLKConfig+0x422>
  {
    pllsaiused = 1;
 8021e3e:	2301      	movs	r3, #1
 8021e40:	61bb      	str	r3, [r7, #24]
  }
#endif /* STM32F746xx || STM32F756xx || STM32F767xx || STM32F769xx || STM32F777xx || STM32F779xx || STM32F750xx */

  /*-------------------------------------- LPTIM1 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
 8021e42:	687b      	ldr	r3, [r7, #4]
 8021e44:	681b      	ldr	r3, [r3, #0]
 8021e46:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8021e4a:	2b00      	cmp	r3, #0
 8021e4c:	d00a      	beq.n	8021e64 <HAL_RCCEx_PeriphCLKConfig+0x444>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LPTIM1CLK(PeriphClkInit->Lptim1ClockSelection));

    /* Configure the LTPIM1 clock source */
    __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
 8021e4e:	4b1d      	ldr	r3, [pc, #116]	; (8021ec4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021e50:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8021e54:	f023 7240 	bic.w	r2, r3, #50331648	; 0x3000000
 8021e58:	687b      	ldr	r3, [r7, #4]
 8021e5a:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8021e5c:	4919      	ldr	r1, [pc, #100]	; (8021ec4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021e5e:	4313      	orrs	r3, r2
 8021e60:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
   }

  /*------------------------------------- SDMMC1 Configuration ------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC1) == RCC_PERIPHCLK_SDMMC1)
 8021e64:	687b      	ldr	r3, [r7, #4]
 8021e66:	681b      	ldr	r3, [r3, #0]
 8021e68:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8021e6c:	2b00      	cmp	r3, #0
 8021e6e:	d00b      	beq.n	8021e88 <HAL_RCCEx_PeriphCLKConfig+0x468>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SDMMC1CLKSOURCE(PeriphClkInit->Sdmmc1ClockSelection));

    /* Configure the SDMMC1 clock source */
    __HAL_RCC_SDMMC1_CONFIG(PeriphClkInit->Sdmmc1ClockSelection);
 8021e70:	4b14      	ldr	r3, [pc, #80]	; (8021ec4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021e72:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8021e76:	f023 5280 	bic.w	r2, r3, #268435456	; 0x10000000
 8021e7a:	687b      	ldr	r3, [r7, #4]
 8021e7c:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8021e80:	4910      	ldr	r1, [pc, #64]	; (8021ec4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021e82:	4313      	orrs	r3, r2
 8021e84:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }
#endif /* STM32F767xx || STM32F769xx || STM32F777xx || STM32F779xx */

  /*-------------------------------------- PLLI2S Configuration ---------------------------------*/
  /* PLLI2S is configured when a peripheral will use it as source clock : SAI1, SAI2, I2S or SPDIF-RX */
  if((plli2sused == 1) || ((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S))
 8021e88:	69fb      	ldr	r3, [r7, #28]
 8021e8a:	2b01      	cmp	r3, #1
 8021e8c:	d006      	beq.n	8021e9c <HAL_RCCEx_PeriphCLKConfig+0x47c>
 8021e8e:	687b      	ldr	r3, [r7, #4]
 8021e90:	681b      	ldr	r3, [r3, #0]
 8021e92:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8021e96:	2b00      	cmp	r3, #0
 8021e98:	f000 80d9 	beq.w	802204e <HAL_RCCEx_PeriphCLKConfig+0x62e>
  {
    /* Disable the PLLI2S */
    __HAL_RCC_PLLI2S_DISABLE();
 8021e9c:	4b09      	ldr	r3, [pc, #36]	; (8021ec4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021e9e:	681b      	ldr	r3, [r3, #0]
 8021ea0:	4a08      	ldr	r2, [pc, #32]	; (8021ec4 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021ea2:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 8021ea6:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8021ea8:	f7fe fd70 	bl	802098c <HAL_GetTick>
 8021eac:	6178      	str	r0, [r7, #20]

    /* Wait till PLLI2S is disabled */
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8021eae:	e00b      	b.n	8021ec8 <HAL_RCCEx_PeriphCLKConfig+0x4a8>
    {
      if((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 8021eb0:	f7fe fd6c 	bl	802098c <HAL_GetTick>
 8021eb4:	4602      	mov	r2, r0
 8021eb6:	697b      	ldr	r3, [r7, #20]
 8021eb8:	1ad3      	subs	r3, r2, r3
 8021eba:	2b64      	cmp	r3, #100	; 0x64
 8021ebc:	d904      	bls.n	8021ec8 <HAL_RCCEx_PeriphCLKConfig+0x4a8>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 8021ebe:	2303      	movs	r3, #3
 8021ec0:	e197      	b.n	80221f2 <HAL_RCCEx_PeriphCLKConfig+0x7d2>
 8021ec2:	bf00      	nop
 8021ec4:	40023800 	.word	0x40023800
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8021ec8:	4b6c      	ldr	r3, [pc, #432]	; (802207c <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8021eca:	681b      	ldr	r3, [r3, #0]
 8021ecc:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8021ed0:	2b00      	cmp	r3, #0
 8021ed2:	d1ed      	bne.n	8021eb0 <HAL_RCCEx_PeriphCLKConfig+0x490>

    /* check for common PLLI2S Parameters */
    assert_param(IS_RCC_PLLI2SN_VALUE(PeriphClkInit->PLLI2S.PLLI2SN));

    /*----------------- In Case of PLLI2S is selected as source clock for I2S -------------------*/
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) && (PeriphClkInit->I2sClockSelection == RCC_I2SCLKSOURCE_PLLI2S)))
 8021ed4:	687b      	ldr	r3, [r7, #4]
 8021ed6:	681b      	ldr	r3, [r3, #0]
 8021ed8:	f003 0301 	and.w	r3, r3, #1
 8021edc:	2b00      	cmp	r3, #0
 8021ede:	d021      	beq.n	8021f24 <HAL_RCCEx_PeriphCLKConfig+0x504>
 8021ee0:	687b      	ldr	r3, [r7, #4]
 8021ee2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8021ee4:	2b00      	cmp	r3, #0
 8021ee6:	d11d      	bne.n	8021f24 <HAL_RCCEx_PeriphCLKConfig+0x504>
    {
      /* check for Parameters */
      assert_param(IS_RCC_PLLI2SR_VALUE(PeriphClkInit->PLLI2S.PLLI2SR));

      /* Read PLLI2SP and PLLI2SQ value from PLLI2SCFGR register (this value is not needed for I2S configuration) */
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SP) >> RCC_PLLI2SCFGR_PLLI2SP_Pos);
 8021ee8:	4b64      	ldr	r3, [pc, #400]	; (802207c <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8021eea:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8021eee:	0c1b      	lsrs	r3, r3, #16
 8021ef0:	f003 0303 	and.w	r3, r3, #3
 8021ef4:	613b      	str	r3, [r7, #16]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SQ) >> RCC_PLLI2SCFGR_PLLI2SQ_Pos);
 8021ef6:	4b61      	ldr	r3, [pc, #388]	; (802207c <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8021ef8:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8021efc:	0e1b      	lsrs	r3, r3, #24
 8021efe:	f003 030f 	and.w	r3, r3, #15
 8021f02:	60fb      	str	r3, [r7, #12]
      /* Configure the PLLI2S division factors */
      /* PLLI2S_VCO = f(VCO clock) = f(PLLI2S clock input) x (PLLI2SN/PLLM) */
      /* I2SCLK = f(PLLI2S clock output) = f(VCO clock) / PLLI2SR */
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , tmpreg0, tmpreg1, PeriphClkInit->PLLI2S.PLLI2SR);
 8021f04:	687b      	ldr	r3, [r7, #4]
 8021f06:	685b      	ldr	r3, [r3, #4]
 8021f08:	019a      	lsls	r2, r3, #6
 8021f0a:	693b      	ldr	r3, [r7, #16]
 8021f0c:	041b      	lsls	r3, r3, #16
 8021f0e:	431a      	orrs	r2, r3
 8021f10:	68fb      	ldr	r3, [r7, #12]
 8021f12:	061b      	lsls	r3, r3, #24
 8021f14:	431a      	orrs	r2, r3
 8021f16:	687b      	ldr	r3, [r7, #4]
 8021f18:	689b      	ldr	r3, [r3, #8]
 8021f1a:	071b      	lsls	r3, r3, #28
 8021f1c:	4957      	ldr	r1, [pc, #348]	; (802207c <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8021f1e:	4313      	orrs	r3, r2
 8021f20:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
    }

    /*----------------- In Case of PLLI2S is selected as source clock for SAI -------------------*/
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1) && (PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLI2S)) ||
 8021f24:	687b      	ldr	r3, [r7, #4]
 8021f26:	681b      	ldr	r3, [r3, #0]
 8021f28:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8021f2c:	2b00      	cmp	r3, #0
 8021f2e:	d004      	beq.n	8021f3a <HAL_RCCEx_PeriphCLKConfig+0x51a>
 8021f30:	687b      	ldr	r3, [r7, #4]
 8021f32:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8021f34:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8021f38:	d00a      	beq.n	8021f50 <HAL_RCCEx_PeriphCLKConfig+0x530>
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2) && (PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLI2S)))
 8021f3a:	687b      	ldr	r3, [r7, #4]
 8021f3c:	681b      	ldr	r3, [r3, #0]
 8021f3e:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1) && (PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLI2S)) ||
 8021f42:	2b00      	cmp	r3, #0
 8021f44:	d02e      	beq.n	8021fa4 <HAL_RCCEx_PeriphCLKConfig+0x584>
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2) && (PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLI2S)))
 8021f46:	687b      	ldr	r3, [r7, #4]
 8021f48:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8021f4a:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8021f4e:	d129      	bne.n	8021fa4 <HAL_RCCEx_PeriphCLKConfig+0x584>
      assert_param(IS_RCC_PLLI2SQ_VALUE(PeriphClkInit->PLLI2S.PLLI2SQ));
      /* Check for PLLI2S/DIVQ parameters */
      assert_param(IS_RCC_PLLI2S_DIVQ_VALUE(PeriphClkInit->PLLI2SDivQ));

      /* Read PLLI2SP and PLLI2SR values from PLLI2SCFGR register (this value is not needed for SAI configuration) */
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SP) >> RCC_PLLI2SCFGR_PLLI2SP_Pos);
 8021f50:	4b4a      	ldr	r3, [pc, #296]	; (802207c <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8021f52:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8021f56:	0c1b      	lsrs	r3, r3, #16
 8021f58:	f003 0303 	and.w	r3, r3, #3
 8021f5c:	613b      	str	r3, [r7, #16]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8021f5e:	4b47      	ldr	r3, [pc, #284]	; (802207c <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8021f60:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8021f64:	0f1b      	lsrs	r3, r3, #28
 8021f66:	f003 0307 	and.w	r3, r3, #7
 8021f6a:	60fb      	str	r3, [r7, #12]
      /* Configure the PLLI2S division factors */
      /* PLLI2S_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLI2S_VCO Output = PLLI2S_VCO Input * PLLI2SN */
      /* SAI_CLK(first level) = PLLI2S_VCO Output/PLLI2SQ */
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, tmpreg0, PeriphClkInit->PLLI2S.PLLI2SQ, tmpreg1);
 8021f6c:	687b      	ldr	r3, [r7, #4]
 8021f6e:	685b      	ldr	r3, [r3, #4]
 8021f70:	019a      	lsls	r2, r3, #6
 8021f72:	693b      	ldr	r3, [r7, #16]
 8021f74:	041b      	lsls	r3, r3, #16
 8021f76:	431a      	orrs	r2, r3
 8021f78:	687b      	ldr	r3, [r7, #4]
 8021f7a:	68db      	ldr	r3, [r3, #12]
 8021f7c:	061b      	lsls	r3, r3, #24
 8021f7e:	431a      	orrs	r2, r3
 8021f80:	68fb      	ldr	r3, [r7, #12]
 8021f82:	071b      	lsls	r3, r3, #28
 8021f84:	493d      	ldr	r1, [pc, #244]	; (802207c <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8021f86:	4313      	orrs	r3, r2
 8021f88:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84

      /* SAI_CLK_x = SAI_CLK(first level)/PLLI2SDIVQ */
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 8021f8c:	4b3b      	ldr	r3, [pc, #236]	; (802207c <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8021f8e:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8021f92:	f023 021f 	bic.w	r2, r3, #31
 8021f96:	687b      	ldr	r3, [r7, #4]
 8021f98:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8021f9a:	3b01      	subs	r3, #1
 8021f9c:	4937      	ldr	r1, [pc, #220]	; (802207c <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8021f9e:	4313      	orrs	r3, r2
 8021fa0:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
    }

    /*----------------- In Case of PLLI2S is selected as source clock for SPDIF-RX -------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
 8021fa4:	687b      	ldr	r3, [r7, #4]
 8021fa6:	681b      	ldr	r3, [r3, #0]
 8021fa8:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8021fac:	2b00      	cmp	r3, #0
 8021fae:	d01d      	beq.n	8021fec <HAL_RCCEx_PeriphCLKConfig+0x5cc>
    {
      /* check for Parameters */
      assert_param(IS_RCC_PLLI2SP_VALUE(PeriphClkInit->PLLI2S.PLLI2SP));

     /* Read PLLI2SR value from PLLI2SCFGR register (this value is not needed for SPDIF-RX configuration) */
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SQ) >> RCC_PLLI2SCFGR_PLLI2SQ_Pos);
 8021fb0:	4b32      	ldr	r3, [pc, #200]	; (802207c <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8021fb2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8021fb6:	0e1b      	lsrs	r3, r3, #24
 8021fb8:	f003 030f 	and.w	r3, r3, #15
 8021fbc:	613b      	str	r3, [r7, #16]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8021fbe:	4b2f      	ldr	r3, [pc, #188]	; (802207c <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8021fc0:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8021fc4:	0f1b      	lsrs	r3, r3, #28
 8021fc6:	f003 0307 	and.w	r3, r3, #7
 8021fca:	60fb      	str	r3, [r7, #12]
      /* Configure the PLLI2S division factors */
      /* PLLI2S_VCO = f(VCO clock) = f(PLLI2S clock input) x (PLLI2SN/PLLM) */
      /* SPDIFCLK = f(PLLI2S clock output) = f(VCO clock) / PLLI2SP */
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SP, tmpreg0, tmpreg1);
 8021fcc:	687b      	ldr	r3, [r7, #4]
 8021fce:	685b      	ldr	r3, [r3, #4]
 8021fd0:	019a      	lsls	r2, r3, #6
 8021fd2:	687b      	ldr	r3, [r7, #4]
 8021fd4:	691b      	ldr	r3, [r3, #16]
 8021fd6:	041b      	lsls	r3, r3, #16
 8021fd8:	431a      	orrs	r2, r3
 8021fda:	693b      	ldr	r3, [r7, #16]
 8021fdc:	061b      	lsls	r3, r3, #24
 8021fde:	431a      	orrs	r2, r3
 8021fe0:	68fb      	ldr	r3, [r7, #12]
 8021fe2:	071b      	lsls	r3, r3, #28
 8021fe4:	4925      	ldr	r1, [pc, #148]	; (802207c <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8021fe6:	4313      	orrs	r3, r2
 8021fe8:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
    }

    /*----------------- In Case of PLLI2S is just selected  -----------------*/
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 8021fec:	687b      	ldr	r3, [r7, #4]
 8021fee:	681b      	ldr	r3, [r3, #0]
 8021ff0:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8021ff4:	2b00      	cmp	r3, #0
 8021ff6:	d011      	beq.n	802201c <HAL_RCCEx_PeriphCLKConfig+0x5fc>
      assert_param(IS_RCC_PLLI2SQ_VALUE(PeriphClkInit->PLLI2S.PLLI2SQ));

      /* Configure the PLLI2S division factors */
      /* PLLI2S_VCO = f(VCO clock) = f(PLLI2S clock input) x (PLLI2SN/PLLI2SM) */
      /* SPDIFRXCLK = f(PLLI2S clock output) = f(VCO clock) / PLLI2SP */
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SP, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 8021ff8:	687b      	ldr	r3, [r7, #4]
 8021ffa:	685b      	ldr	r3, [r3, #4]
 8021ffc:	019a      	lsls	r2, r3, #6
 8021ffe:	687b      	ldr	r3, [r7, #4]
 8022000:	691b      	ldr	r3, [r3, #16]
 8022002:	041b      	lsls	r3, r3, #16
 8022004:	431a      	orrs	r2, r3
 8022006:	687b      	ldr	r3, [r7, #4]
 8022008:	68db      	ldr	r3, [r3, #12]
 802200a:	061b      	lsls	r3, r3, #24
 802200c:	431a      	orrs	r2, r3
 802200e:	687b      	ldr	r3, [r7, #4]
 8022010:	689b      	ldr	r3, [r3, #8]
 8022012:	071b      	lsls	r3, r3, #28
 8022014:	4919      	ldr	r1, [pc, #100]	; (802207c <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8022016:	4313      	orrs	r3, r2
 8022018:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
    }

    /* Enable the PLLI2S */
    __HAL_RCC_PLLI2S_ENABLE();
 802201c:	4b17      	ldr	r3, [pc, #92]	; (802207c <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 802201e:	681b      	ldr	r3, [r3, #0]
 8022020:	4a16      	ldr	r2, [pc, #88]	; (802207c <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8022022:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8022026:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8022028:	f7fe fcb0 	bl	802098c <HAL_GetTick>
 802202c:	6178      	str	r0, [r7, #20]

    /* Wait till PLLI2S is ready */
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 802202e:	e008      	b.n	8022042 <HAL_RCCEx_PeriphCLKConfig+0x622>
    {
      if((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 8022030:	f7fe fcac 	bl	802098c <HAL_GetTick>
 8022034:	4602      	mov	r2, r0
 8022036:	697b      	ldr	r3, [r7, #20]
 8022038:	1ad3      	subs	r3, r2, r3
 802203a:	2b64      	cmp	r3, #100	; 0x64
 802203c:	d901      	bls.n	8022042 <HAL_RCCEx_PeriphCLKConfig+0x622>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 802203e:	2303      	movs	r3, #3
 8022040:	e0d7      	b.n	80221f2 <HAL_RCCEx_PeriphCLKConfig+0x7d2>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8022042:	4b0e      	ldr	r3, [pc, #56]	; (802207c <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8022044:	681b      	ldr	r3, [r3, #0]
 8022046:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 802204a:	2b00      	cmp	r3, #0
 802204c:	d0f0      	beq.n	8022030 <HAL_RCCEx_PeriphCLKConfig+0x610>
    }
  }

  /*-------------------------------------- PLLSAI Configuration ---------------------------------*/
  /* PLLSAI is configured when a peripheral will use it as source clock : SAI1, SAI2, LTDC or CK48 */
  if(pllsaiused == 1)
 802204e:	69bb      	ldr	r3, [r7, #24]
 8022050:	2b01      	cmp	r3, #1
 8022052:	f040 80cd 	bne.w	80221f0 <HAL_RCCEx_PeriphCLKConfig+0x7d0>
  {
    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 8022056:	4b09      	ldr	r3, [pc, #36]	; (802207c <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8022058:	681b      	ldr	r3, [r3, #0]
 802205a:	4a08      	ldr	r2, [pc, #32]	; (802207c <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 802205c:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8022060:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8022062:	f7fe fc93 	bl	802098c <HAL_GetTick>
 8022066:	6178      	str	r0, [r7, #20]

    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8022068:	e00a      	b.n	8022080 <HAL_RCCEx_PeriphCLKConfig+0x660>
    {
      if((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 802206a:	f7fe fc8f 	bl	802098c <HAL_GetTick>
 802206e:	4602      	mov	r2, r0
 8022070:	697b      	ldr	r3, [r7, #20]
 8022072:	1ad3      	subs	r3, r2, r3
 8022074:	2b64      	cmp	r3, #100	; 0x64
 8022076:	d903      	bls.n	8022080 <HAL_RCCEx_PeriphCLKConfig+0x660>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 8022078:	2303      	movs	r3, #3
 802207a:	e0ba      	b.n	80221f2 <HAL_RCCEx_PeriphCLKConfig+0x7d2>
 802207c:	40023800 	.word	0x40023800
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8022080:	4b5e      	ldr	r3, [pc, #376]	; (80221fc <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8022082:	681b      	ldr	r3, [r3, #0]
 8022084:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8022088:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 802208c:	d0ed      	beq.n	802206a <HAL_RCCEx_PeriphCLKConfig+0x64a>

    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /*----------------- In Case of PLLSAI is selected as source clock for SAI -------------------*/
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1) && (PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLSAI)) ||\
 802208e:	687b      	ldr	r3, [r7, #4]
 8022090:	681b      	ldr	r3, [r3, #0]
 8022092:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8022096:	2b00      	cmp	r3, #0
 8022098:	d003      	beq.n	80220a2 <HAL_RCCEx_PeriphCLKConfig+0x682>
 802209a:	687b      	ldr	r3, [r7, #4]
 802209c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 802209e:	2b00      	cmp	r3, #0
 80220a0:	d009      	beq.n	80220b6 <HAL_RCCEx_PeriphCLKConfig+0x696>
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2) && (PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLSAI)))
 80220a2:	687b      	ldr	r3, [r7, #4]
 80220a4:	681b      	ldr	r3, [r3, #0]
 80220a6:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1) && (PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLSAI)) ||\
 80220aa:	2b00      	cmp	r3, #0
 80220ac:	d02e      	beq.n	802210c <HAL_RCCEx_PeriphCLKConfig+0x6ec>
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2) && (PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLSAI)))
 80220ae:	687b      	ldr	r3, [r7, #4]
 80220b0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80220b2:	2b00      	cmp	r3, #0
 80220b4:	d12a      	bne.n	802210c <HAL_RCCEx_PeriphCLKConfig+0x6ec>
      assert_param(IS_RCC_PLLSAIQ_VALUE(PeriphClkInit->PLLSAI.PLLSAIQ));
      /* check for PLLSAI/DIVQ Parameter */
      assert_param(IS_RCC_PLLSAI_DIVQ_VALUE(PeriphClkInit->PLLSAIDivQ));

      /* Read PLLSAIP value from PLLSAICFGR register (this value is not needed for SAI configuration) */
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos);
 80220b6:	4b51      	ldr	r3, [pc, #324]	; (80221fc <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 80220b8:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80220bc:	0c1b      	lsrs	r3, r3, #16
 80220be:	f003 0303 	and.w	r3, r3, #3
 80220c2:	613b      	str	r3, [r7, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 80220c4:	4b4d      	ldr	r3, [pc, #308]	; (80221fc <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 80220c6:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80220ca:	0f1b      	lsrs	r3, r3, #28
 80220cc:	f003 0307 	and.w	r3, r3, #7
 80220d0:	60fb      	str	r3, [r7, #12]
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg0, PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 80220d2:	687b      	ldr	r3, [r7, #4]
 80220d4:	695b      	ldr	r3, [r3, #20]
 80220d6:	019a      	lsls	r2, r3, #6
 80220d8:	693b      	ldr	r3, [r7, #16]
 80220da:	041b      	lsls	r3, r3, #16
 80220dc:	431a      	orrs	r2, r3
 80220de:	687b      	ldr	r3, [r7, #4]
 80220e0:	699b      	ldr	r3, [r3, #24]
 80220e2:	061b      	lsls	r3, r3, #24
 80220e4:	431a      	orrs	r2, r3
 80220e6:	68fb      	ldr	r3, [r7, #12]
 80220e8:	071b      	lsls	r3, r3, #28
 80220ea:	4944      	ldr	r1, [pc, #272]	; (80221fc <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 80220ec:	4313      	orrs	r3, r2
 80220ee:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88

      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 80220f2:	4b42      	ldr	r3, [pc, #264]	; (80221fc <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 80220f4:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 80220f8:	f423 52f8 	bic.w	r2, r3, #7936	; 0x1f00
 80220fc:	687b      	ldr	r3, [r7, #4]
 80220fe:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8022100:	3b01      	subs	r3, #1
 8022102:	021b      	lsls	r3, r3, #8
 8022104:	493d      	ldr	r1, [pc, #244]	; (80221fc <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8022106:	4313      	orrs	r3, r2
 8022108:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
    }

    /*----------------- In Case of PLLSAI is selected as source clock for CLK48 -------------------*/
    /* In Case of PLLI2S is selected as source clock for CK48 */
    if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48) && (PeriphClkInit->Clk48ClockSelection == RCC_CLK48SOURCE_PLLSAIP))
 802210c:	687b      	ldr	r3, [r7, #4]
 802210e:	681b      	ldr	r3, [r3, #0]
 8022110:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8022114:	2b00      	cmp	r3, #0
 8022116:	d022      	beq.n	802215e <HAL_RCCEx_PeriphCLKConfig+0x73e>
 8022118:	687b      	ldr	r3, [r7, #4]
 802211a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 802211c:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8022120:	d11d      	bne.n	802215e <HAL_RCCEx_PeriphCLKConfig+0x73e>
    {
      /* check for Parameters */
      assert_param(IS_RCC_PLLSAIP_VALUE(PeriphClkInit->PLLSAI.PLLSAIP));
      /* Read PLLSAIQ and PLLSAIR value from PLLSAICFGR register (this value is not needed for CK48 configuration) */
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8022122:	4b36      	ldr	r3, [pc, #216]	; (80221fc <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8022124:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8022128:	0e1b      	lsrs	r3, r3, #24
 802212a:	f003 030f 	and.w	r3, r3, #15
 802212e:	613b      	str	r3, [r7, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8022130:	4b32      	ldr	r3, [pc, #200]	; (80221fc <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8022132:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8022136:	0f1b      	lsrs	r3, r3, #28
 8022138:	f003 0307 	and.w	r3, r3, #7
 802213c:	60fb      	str	r3, [r7, #12]

      /* Configure the PLLSAI division factors */
      /* PLLSAI_VCO = f(VCO clock) = f(PLLSAI clock input) x (PLLI2SN/PLLM) */
      /* 48CLK = f(PLLSAI clock output) = f(VCO clock) / PLLSAIP */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIP, tmpreg0, tmpreg1);
 802213e:	687b      	ldr	r3, [r7, #4]
 8022140:	695b      	ldr	r3, [r3, #20]
 8022142:	019a      	lsls	r2, r3, #6
 8022144:	687b      	ldr	r3, [r7, #4]
 8022146:	6a1b      	ldr	r3, [r3, #32]
 8022148:	041b      	lsls	r3, r3, #16
 802214a:	431a      	orrs	r2, r3
 802214c:	693b      	ldr	r3, [r7, #16]
 802214e:	061b      	lsls	r3, r3, #24
 8022150:	431a      	orrs	r2, r3
 8022152:	68fb      	ldr	r3, [r7, #12]
 8022154:	071b      	lsls	r3, r3, #28
 8022156:	4929      	ldr	r1, [pc, #164]	; (80221fc <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8022158:	4313      	orrs	r3, r2
 802215a:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
    }

#if defined(STM32F746xx) || defined(STM32F756xx) || defined (STM32F767xx) || defined (STM32F769xx) || defined (STM32F777xx) || defined (STM32F779xx) || defined (STM32F750xx)
    /*---------------------------- LTDC configuration -------------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 802215e:	687b      	ldr	r3, [r7, #4]
 8022160:	681b      	ldr	r3, [r3, #0]
 8022162:	f003 0308 	and.w	r3, r3, #8
 8022166:	2b00      	cmp	r3, #0
 8022168:	d028      	beq.n	80221bc <HAL_RCCEx_PeriphCLKConfig+0x79c>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIP and PLLSAIQ value from PLLSAICFGR register (these value are not needed for LTDC configuration) */
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 802216a:	4b24      	ldr	r3, [pc, #144]	; (80221fc <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 802216c:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8022170:	0e1b      	lsrs	r3, r3, #24
 8022172:	f003 030f 	and.w	r3, r3, #15
 8022176:	613b      	str	r3, [r7, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos);
 8022178:	4b20      	ldr	r3, [pc, #128]	; (80221fc <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 802217a:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 802217e:	0c1b      	lsrs	r3, r3, #16
 8022180:	f003 0303 	and.w	r3, r3, #3
 8022184:	60fb      	str	r3, [r7, #12]

      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, tmpreg0, PeriphClkInit->PLLSAI.PLLSAIR);
 8022186:	687b      	ldr	r3, [r7, #4]
 8022188:	695b      	ldr	r3, [r3, #20]
 802218a:	019a      	lsls	r2, r3, #6
 802218c:	68fb      	ldr	r3, [r7, #12]
 802218e:	041b      	lsls	r3, r3, #16
 8022190:	431a      	orrs	r2, r3
 8022192:	693b      	ldr	r3, [r7, #16]
 8022194:	061b      	lsls	r3, r3, #24
 8022196:	431a      	orrs	r2, r3
 8022198:	687b      	ldr	r3, [r7, #4]
 802219a:	69db      	ldr	r3, [r3, #28]
 802219c:	071b      	lsls	r3, r3, #28
 802219e:	4917      	ldr	r1, [pc, #92]	; (80221fc <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 80221a0:	4313      	orrs	r3, r2
 80221a2:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88

      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 80221a6:	4b15      	ldr	r3, [pc, #84]	; (80221fc <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 80221a8:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 80221ac:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 80221b0:	687b      	ldr	r3, [r7, #4]
 80221b2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80221b4:	4911      	ldr	r1, [pc, #68]	; (80221fc <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 80221b6:	4313      	orrs	r3, r2
 80221b8:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
    }
#endif /* STM32F746xx || STM32F756xx || STM32F767xx || STM32F769xx || STM32F777xx || STM32F779xx || STM32F750xx  */

    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 80221bc:	4b0f      	ldr	r3, [pc, #60]	; (80221fc <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 80221be:	681b      	ldr	r3, [r3, #0]
 80221c0:	4a0e      	ldr	r2, [pc, #56]	; (80221fc <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 80221c2:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80221c6:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 80221c8:	f7fe fbe0 	bl	802098c <HAL_GetTick>
 80221cc:	6178      	str	r0, [r7, #20]

    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 80221ce:	e008      	b.n	80221e2 <HAL_RCCEx_PeriphCLKConfig+0x7c2>
    {
      if((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 80221d0:	f7fe fbdc 	bl	802098c <HAL_GetTick>
 80221d4:	4602      	mov	r2, r0
 80221d6:	697b      	ldr	r3, [r7, #20]
 80221d8:	1ad3      	subs	r3, r2, r3
 80221da:	2b64      	cmp	r3, #100	; 0x64
 80221dc:	d901      	bls.n	80221e2 <HAL_RCCEx_PeriphCLKConfig+0x7c2>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 80221de:	2303      	movs	r3, #3
 80221e0:	e007      	b.n	80221f2 <HAL_RCCEx_PeriphCLKConfig+0x7d2>
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 80221e2:	4b06      	ldr	r3, [pc, #24]	; (80221fc <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 80221e4:	681b      	ldr	r3, [r3, #0]
 80221e6:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 80221ea:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 80221ee:	d1ef      	bne.n	80221d0 <HAL_RCCEx_PeriphCLKConfig+0x7b0>
      }
    }
  }
  return HAL_OK;
 80221f0:	2300      	movs	r3, #0
}
 80221f2:	4618      	mov	r0, r3
 80221f4:	3720      	adds	r7, #32
 80221f6:	46bd      	mov	sp, r7
 80221f8:	bd80      	pop	{r7, pc}
 80221fa:	bf00      	nop
 80221fc:	40023800 	.word	0x40023800

08022200 <HAL_UART_Init>:
  *        parameters in the UART_InitTypeDef and initialize the associated handle.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
{
 8022200:	b580      	push	{r7, lr}
 8022202:	b082      	sub	sp, #8
 8022204:	af00      	add	r7, sp, #0
 8022206:	6078      	str	r0, [r7, #4]
  /* Check the UART handle allocation */
  if (huart == NULL)
 8022208:	687b      	ldr	r3, [r7, #4]
 802220a:	2b00      	cmp	r3, #0
 802220c:	d101      	bne.n	8022212 <HAL_UART_Init+0x12>
  {
    return HAL_ERROR;
 802220e:	2301      	movs	r3, #1
 8022210:	e040      	b.n	8022294 <HAL_UART_Init+0x94>
  {
    /* Check the parameters */
    assert_param(IS_UART_INSTANCE(huart->Instance));
  }

  if (huart->gState == HAL_UART_STATE_RESET)
 8022212:	687b      	ldr	r3, [r7, #4]
 8022214:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8022216:	2b00      	cmp	r3, #0
 8022218:	d106      	bne.n	8022228 <HAL_UART_Init+0x28>
  {
    /* Allocate lock resource and initialize it */
    huart->Lock = HAL_UNLOCKED;
 802221a:	687b      	ldr	r3, [r7, #4]
 802221c:	2200      	movs	r2, #0
 802221e:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

    /* Init the low level hardware */
    huart->MspInitCallback(huart);
#else
    /* Init the low level hardware : GPIO, CLOCK */
    HAL_UART_MspInit(huart);
 8022222:	6878      	ldr	r0, [r7, #4]
 8022224:	f7fc fd78 	bl	801ed18 <HAL_UART_MspInit>
#endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
  }

  huart->gState = HAL_UART_STATE_BUSY;
 8022228:	687b      	ldr	r3, [r7, #4]
 802222a:	2224      	movs	r2, #36	; 0x24
 802222c:	679a      	str	r2, [r3, #120]	; 0x78

  __HAL_UART_DISABLE(huart);
 802222e:	687b      	ldr	r3, [r7, #4]
 8022230:	681b      	ldr	r3, [r3, #0]
 8022232:	681a      	ldr	r2, [r3, #0]
 8022234:	687b      	ldr	r3, [r7, #4]
 8022236:	681b      	ldr	r3, [r3, #0]
 8022238:	f022 0201 	bic.w	r2, r2, #1
 802223c:	601a      	str	r2, [r3, #0]

  /* Set the UART Communication parameters */
  if (UART_SetConfig(huart) == HAL_ERROR)
 802223e:	6878      	ldr	r0, [r7, #4]
 8022240:	f000 fbd8 	bl	80229f4 <UART_SetConfig>
 8022244:	4603      	mov	r3, r0
 8022246:	2b01      	cmp	r3, #1
 8022248:	d101      	bne.n	802224e <HAL_UART_Init+0x4e>
  {
    return HAL_ERROR;
 802224a:	2301      	movs	r3, #1
 802224c:	e022      	b.n	8022294 <HAL_UART_Init+0x94>
  }

  if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 802224e:	687b      	ldr	r3, [r7, #4]
 8022250:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8022252:	2b00      	cmp	r3, #0
 8022254:	d002      	beq.n	802225c <HAL_UART_Init+0x5c>
  {
    UART_AdvFeatureConfig(huart);
 8022256:	6878      	ldr	r0, [r7, #4]
 8022258:	f000 fe2e 	bl	8022eb8 <UART_AdvFeatureConfig>
  }

  /* In asynchronous mode, the following bits must be kept cleared:
  - LINEN and CLKEN bits in the USART_CR2 register,
  - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 802225c:	687b      	ldr	r3, [r7, #4]
 802225e:	681b      	ldr	r3, [r3, #0]
 8022260:	685a      	ldr	r2, [r3, #4]
 8022262:	687b      	ldr	r3, [r7, #4]
 8022264:	681b      	ldr	r3, [r3, #0]
 8022266:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 802226a:	605a      	str	r2, [r3, #4]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 802226c:	687b      	ldr	r3, [r7, #4]
 802226e:	681b      	ldr	r3, [r3, #0]
 8022270:	689a      	ldr	r2, [r3, #8]
 8022272:	687b      	ldr	r3, [r7, #4]
 8022274:	681b      	ldr	r3, [r3, #0]
 8022276:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 802227a:	609a      	str	r2, [r3, #8]

  __HAL_UART_ENABLE(huart);
 802227c:	687b      	ldr	r3, [r7, #4]
 802227e:	681b      	ldr	r3, [r3, #0]
 8022280:	681a      	ldr	r2, [r3, #0]
 8022282:	687b      	ldr	r3, [r7, #4]
 8022284:	681b      	ldr	r3, [r3, #0]
 8022286:	f042 0201 	orr.w	r2, r2, #1
 802228a:	601a      	str	r2, [r3, #0]

  /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
  return (UART_CheckIdleState(huart));
 802228c:	6878      	ldr	r0, [r7, #4]
 802228e:	f000 feb5 	bl	8022ffc <UART_CheckIdleState>
 8022292:	4603      	mov	r3, r0
}
 8022294:	4618      	mov	r0, r3
 8022296:	3708      	adds	r7, #8
 8022298:	46bd      	mov	sp, r7
 802229a:	bd80      	pop	{r7, pc}

0802229c <HAL_UART_Transmit>:
  * @param Size    Amount of data elements (u8 or u16) to be sent.
  * @param Timeout Timeout duration.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 802229c:	b580      	push	{r7, lr}
 802229e:	b08a      	sub	sp, #40	; 0x28
 80222a0:	af02      	add	r7, sp, #8
 80222a2:	60f8      	str	r0, [r7, #12]
 80222a4:	60b9      	str	r1, [r7, #8]
 80222a6:	603b      	str	r3, [r7, #0]
 80222a8:	4613      	mov	r3, r2
 80222aa:	80fb      	strh	r3, [r7, #6]
  uint8_t  *pdata8bits;
  uint16_t *pdata16bits;
  uint32_t tickstart;

  /* Check that a Tx process is not already ongoing */
  if (huart->gState == HAL_UART_STATE_READY)
 80222ac:	68fb      	ldr	r3, [r7, #12]
 80222ae:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80222b0:	2b20      	cmp	r3, #32
 80222b2:	f040 8081 	bne.w	80223b8 <HAL_UART_Transmit+0x11c>
  {
    if ((pData == NULL) || (Size == 0U))
 80222b6:	68bb      	ldr	r3, [r7, #8]
 80222b8:	2b00      	cmp	r3, #0
 80222ba:	d002      	beq.n	80222c2 <HAL_UART_Transmit+0x26>
 80222bc:	88fb      	ldrh	r3, [r7, #6]
 80222be:	2b00      	cmp	r3, #0
 80222c0:	d101      	bne.n	80222c6 <HAL_UART_Transmit+0x2a>
    {
      return  HAL_ERROR;
 80222c2:	2301      	movs	r3, #1
 80222c4:	e079      	b.n	80223ba <HAL_UART_Transmit+0x11e>
    }

    __HAL_LOCK(huart);
 80222c6:	68fb      	ldr	r3, [r7, #12]
 80222c8:	f893 3074 	ldrb.w	r3, [r3, #116]	; 0x74
 80222cc:	2b01      	cmp	r3, #1
 80222ce:	d101      	bne.n	80222d4 <HAL_UART_Transmit+0x38>
 80222d0:	2302      	movs	r3, #2
 80222d2:	e072      	b.n	80223ba <HAL_UART_Transmit+0x11e>
 80222d4:	68fb      	ldr	r3, [r7, #12]
 80222d6:	2201      	movs	r2, #1
 80222d8:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

    huart->ErrorCode = HAL_UART_ERROR_NONE;
 80222dc:	68fb      	ldr	r3, [r7, #12]
 80222de:	2200      	movs	r2, #0
 80222e0:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
    huart->gState = HAL_UART_STATE_BUSY_TX;
 80222e4:	68fb      	ldr	r3, [r7, #12]
 80222e6:	2221      	movs	r2, #33	; 0x21
 80222e8:	679a      	str	r2, [r3, #120]	; 0x78

    /* Init tickstart for timeout management */
    tickstart = HAL_GetTick();
 80222ea:	f7fe fb4f 	bl	802098c <HAL_GetTick>
 80222ee:	6178      	str	r0, [r7, #20]

    huart->TxXferSize  = Size;
 80222f0:	68fb      	ldr	r3, [r7, #12]
 80222f2:	88fa      	ldrh	r2, [r7, #6]
 80222f4:	f8a3 2050 	strh.w	r2, [r3, #80]	; 0x50
    huart->TxXferCount = Size;
 80222f8:	68fb      	ldr	r3, [r7, #12]
 80222fa:	88fa      	ldrh	r2, [r7, #6]
 80222fc:	f8a3 2052 	strh.w	r2, [r3, #82]	; 0x52

    /* In case of 9bits/No Parity transfer, pData needs to be handled as a uint16_t pointer */
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8022300:	68fb      	ldr	r3, [r7, #12]
 8022302:	689b      	ldr	r3, [r3, #8]
 8022304:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8022308:	d108      	bne.n	802231c <HAL_UART_Transmit+0x80>
 802230a:	68fb      	ldr	r3, [r7, #12]
 802230c:	691b      	ldr	r3, [r3, #16]
 802230e:	2b00      	cmp	r3, #0
 8022310:	d104      	bne.n	802231c <HAL_UART_Transmit+0x80>
    {
      pdata8bits  = NULL;
 8022312:	2300      	movs	r3, #0
 8022314:	61fb      	str	r3, [r7, #28]
      pdata16bits = (uint16_t *) pData;
 8022316:	68bb      	ldr	r3, [r7, #8]
 8022318:	61bb      	str	r3, [r7, #24]
 802231a:	e003      	b.n	8022324 <HAL_UART_Transmit+0x88>
    }
    else
    {
      pdata8bits  = pData;
 802231c:	68bb      	ldr	r3, [r7, #8]
 802231e:	61fb      	str	r3, [r7, #28]
      pdata16bits = NULL;
 8022320:	2300      	movs	r3, #0
 8022322:	61bb      	str	r3, [r7, #24]
    }

    __HAL_UNLOCK(huart);
 8022324:	68fb      	ldr	r3, [r7, #12]
 8022326:	2200      	movs	r2, #0
 8022328:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

    while (huart->TxXferCount > 0U)
 802232c:	e02c      	b.n	8022388 <HAL_UART_Transmit+0xec>
    {
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 802232e:	683b      	ldr	r3, [r7, #0]
 8022330:	9300      	str	r3, [sp, #0]
 8022332:	697b      	ldr	r3, [r7, #20]
 8022334:	2200      	movs	r2, #0
 8022336:	2180      	movs	r1, #128	; 0x80
 8022338:	68f8      	ldr	r0, [r7, #12]
 802233a:	f000 fe92 	bl	8023062 <UART_WaitOnFlagUntilTimeout>
 802233e:	4603      	mov	r3, r0
 8022340:	2b00      	cmp	r3, #0
 8022342:	d001      	beq.n	8022348 <HAL_UART_Transmit+0xac>
      {
        return HAL_TIMEOUT;
 8022344:	2303      	movs	r3, #3
 8022346:	e038      	b.n	80223ba <HAL_UART_Transmit+0x11e>
      }
      if (pdata8bits == NULL)
 8022348:	69fb      	ldr	r3, [r7, #28]
 802234a:	2b00      	cmp	r3, #0
 802234c:	d10b      	bne.n	8022366 <HAL_UART_Transmit+0xca>
      {
        huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
 802234e:	69bb      	ldr	r3, [r7, #24]
 8022350:	881b      	ldrh	r3, [r3, #0]
 8022352:	461a      	mov	r2, r3
 8022354:	68fb      	ldr	r3, [r7, #12]
 8022356:	681b      	ldr	r3, [r3, #0]
 8022358:	f3c2 0208 	ubfx	r2, r2, #0, #9
 802235c:	629a      	str	r2, [r3, #40]	; 0x28
        pdata16bits++;
 802235e:	69bb      	ldr	r3, [r7, #24]
 8022360:	3302      	adds	r3, #2
 8022362:	61bb      	str	r3, [r7, #24]
 8022364:	e007      	b.n	8022376 <HAL_UART_Transmit+0xda>
      }
      else
      {
        huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
 8022366:	69fb      	ldr	r3, [r7, #28]
 8022368:	781a      	ldrb	r2, [r3, #0]
 802236a:	68fb      	ldr	r3, [r7, #12]
 802236c:	681b      	ldr	r3, [r3, #0]
 802236e:	629a      	str	r2, [r3, #40]	; 0x28
        pdata8bits++;
 8022370:	69fb      	ldr	r3, [r7, #28]
 8022372:	3301      	adds	r3, #1
 8022374:	61fb      	str	r3, [r7, #28]
      }
      huart->TxXferCount--;
 8022376:	68fb      	ldr	r3, [r7, #12]
 8022378:	f8b3 3052 	ldrh.w	r3, [r3, #82]	; 0x52
 802237c:	b29b      	uxth	r3, r3
 802237e:	3b01      	subs	r3, #1
 8022380:	b29a      	uxth	r2, r3
 8022382:	68fb      	ldr	r3, [r7, #12]
 8022384:	f8a3 2052 	strh.w	r2, [r3, #82]	; 0x52
    while (huart->TxXferCount > 0U)
 8022388:	68fb      	ldr	r3, [r7, #12]
 802238a:	f8b3 3052 	ldrh.w	r3, [r3, #82]	; 0x52
 802238e:	b29b      	uxth	r3, r3
 8022390:	2b00      	cmp	r3, #0
 8022392:	d1cc      	bne.n	802232e <HAL_UART_Transmit+0x92>
    }

    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 8022394:	683b      	ldr	r3, [r7, #0]
 8022396:	9300      	str	r3, [sp, #0]
 8022398:	697b      	ldr	r3, [r7, #20]
 802239a:	2200      	movs	r2, #0
 802239c:	2140      	movs	r1, #64	; 0x40
 802239e:	68f8      	ldr	r0, [r7, #12]
 80223a0:	f000 fe5f 	bl	8023062 <UART_WaitOnFlagUntilTimeout>
 80223a4:	4603      	mov	r3, r0
 80223a6:	2b00      	cmp	r3, #0
 80223a8:	d001      	beq.n	80223ae <HAL_UART_Transmit+0x112>
    {
      return HAL_TIMEOUT;
 80223aa:	2303      	movs	r3, #3
 80223ac:	e005      	b.n	80223ba <HAL_UART_Transmit+0x11e>
    }

    /* At end of Tx process, restore huart->gState to Ready */
    huart->gState = HAL_UART_STATE_READY;
 80223ae:	68fb      	ldr	r3, [r7, #12]
 80223b0:	2220      	movs	r2, #32
 80223b2:	679a      	str	r2, [r3, #120]	; 0x78

    return HAL_OK;
 80223b4:	2300      	movs	r3, #0
 80223b6:	e000      	b.n	80223ba <HAL_UART_Transmit+0x11e>
  }
  else
  {
    return HAL_BUSY;
 80223b8:	2302      	movs	r3, #2
  }
}
 80223ba:	4618      	mov	r0, r3
 80223bc:	3720      	adds	r7, #32
 80223be:	46bd      	mov	sp, r7
 80223c0:	bd80      	pop	{r7, pc}

080223c2 <HAL_UART_Receive>:
  * @param Size    Amount of data elements (u8 or u16) to be received.
  * @param Timeout Timeout duration.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 80223c2:	b580      	push	{r7, lr}
 80223c4:	b08a      	sub	sp, #40	; 0x28
 80223c6:	af02      	add	r7, sp, #8
 80223c8:	60f8      	str	r0, [r7, #12]
 80223ca:	60b9      	str	r1, [r7, #8]
 80223cc:	603b      	str	r3, [r7, #0]
 80223ce:	4613      	mov	r3, r2
 80223d0:	80fb      	strh	r3, [r7, #6]
  uint16_t *pdata16bits;
  uint16_t uhMask;
  uint32_t tickstart;

  /* Check that a Rx process is not already ongoing */
  if (huart->RxState == HAL_UART_STATE_READY)
 80223d2:	68fb      	ldr	r3, [r7, #12]
 80223d4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80223d6:	2b20      	cmp	r3, #32
 80223d8:	f040 80be 	bne.w	8022558 <HAL_UART_Receive+0x196>
  {
    if ((pData == NULL) || (Size == 0U))
 80223dc:	68bb      	ldr	r3, [r7, #8]
 80223de:	2b00      	cmp	r3, #0
 80223e0:	d002      	beq.n	80223e8 <HAL_UART_Receive+0x26>
 80223e2:	88fb      	ldrh	r3, [r7, #6]
 80223e4:	2b00      	cmp	r3, #0
 80223e6:	d101      	bne.n	80223ec <HAL_UART_Receive+0x2a>
    {
      return  HAL_ERROR;
 80223e8:	2301      	movs	r3, #1
 80223ea:	e0b6      	b.n	802255a <HAL_UART_Receive+0x198>
    }

    __HAL_LOCK(huart);
 80223ec:	68fb      	ldr	r3, [r7, #12]
 80223ee:	f893 3074 	ldrb.w	r3, [r3, #116]	; 0x74
 80223f2:	2b01      	cmp	r3, #1
 80223f4:	d101      	bne.n	80223fa <HAL_UART_Receive+0x38>
 80223f6:	2302      	movs	r3, #2
 80223f8:	e0af      	b.n	802255a <HAL_UART_Receive+0x198>
 80223fa:	68fb      	ldr	r3, [r7, #12]
 80223fc:	2201      	movs	r2, #1
 80223fe:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

    huart->ErrorCode = HAL_UART_ERROR_NONE;
 8022402:	68fb      	ldr	r3, [r7, #12]
 8022404:	2200      	movs	r2, #0
 8022406:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
    huart->RxState = HAL_UART_STATE_BUSY_RX;
 802240a:	68fb      	ldr	r3, [r7, #12]
 802240c:	2222      	movs	r2, #34	; 0x22
 802240e:	67da      	str	r2, [r3, #124]	; 0x7c
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8022410:	68fb      	ldr	r3, [r7, #12]
 8022412:	2200      	movs	r2, #0
 8022414:	661a      	str	r2, [r3, #96]	; 0x60

    /* Init tickstart for timeout management */
    tickstart = HAL_GetTick();
 8022416:	f7fe fab9 	bl	802098c <HAL_GetTick>
 802241a:	6178      	str	r0, [r7, #20]

    huart->RxXferSize  = Size;
 802241c:	68fb      	ldr	r3, [r7, #12]
 802241e:	88fa      	ldrh	r2, [r7, #6]
 8022420:	f8a3 2058 	strh.w	r2, [r3, #88]	; 0x58
    huart->RxXferCount = Size;
 8022424:	68fb      	ldr	r3, [r7, #12]
 8022426:	88fa      	ldrh	r2, [r7, #6]
 8022428:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a

    /* Computation of UART mask to apply to RDR register */
    UART_MASK_COMPUTATION(huart);
 802242c:	68fb      	ldr	r3, [r7, #12]
 802242e:	689b      	ldr	r3, [r3, #8]
 8022430:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8022434:	d10e      	bne.n	8022454 <HAL_UART_Receive+0x92>
 8022436:	68fb      	ldr	r3, [r7, #12]
 8022438:	691b      	ldr	r3, [r3, #16]
 802243a:	2b00      	cmp	r3, #0
 802243c:	d105      	bne.n	802244a <HAL_UART_Receive+0x88>
 802243e:	68fb      	ldr	r3, [r7, #12]
 8022440:	f240 12ff 	movw	r2, #511	; 0x1ff
 8022444:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 8022448:	e02d      	b.n	80224a6 <HAL_UART_Receive+0xe4>
 802244a:	68fb      	ldr	r3, [r7, #12]
 802244c:	22ff      	movs	r2, #255	; 0xff
 802244e:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 8022452:	e028      	b.n	80224a6 <HAL_UART_Receive+0xe4>
 8022454:	68fb      	ldr	r3, [r7, #12]
 8022456:	689b      	ldr	r3, [r3, #8]
 8022458:	2b00      	cmp	r3, #0
 802245a:	d10d      	bne.n	8022478 <HAL_UART_Receive+0xb6>
 802245c:	68fb      	ldr	r3, [r7, #12]
 802245e:	691b      	ldr	r3, [r3, #16]
 8022460:	2b00      	cmp	r3, #0
 8022462:	d104      	bne.n	802246e <HAL_UART_Receive+0xac>
 8022464:	68fb      	ldr	r3, [r7, #12]
 8022466:	22ff      	movs	r2, #255	; 0xff
 8022468:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 802246c:	e01b      	b.n	80224a6 <HAL_UART_Receive+0xe4>
 802246e:	68fb      	ldr	r3, [r7, #12]
 8022470:	227f      	movs	r2, #127	; 0x7f
 8022472:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 8022476:	e016      	b.n	80224a6 <HAL_UART_Receive+0xe4>
 8022478:	68fb      	ldr	r3, [r7, #12]
 802247a:	689b      	ldr	r3, [r3, #8]
 802247c:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8022480:	d10d      	bne.n	802249e <HAL_UART_Receive+0xdc>
 8022482:	68fb      	ldr	r3, [r7, #12]
 8022484:	691b      	ldr	r3, [r3, #16]
 8022486:	2b00      	cmp	r3, #0
 8022488:	d104      	bne.n	8022494 <HAL_UART_Receive+0xd2>
 802248a:	68fb      	ldr	r3, [r7, #12]
 802248c:	227f      	movs	r2, #127	; 0x7f
 802248e:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 8022492:	e008      	b.n	80224a6 <HAL_UART_Receive+0xe4>
 8022494:	68fb      	ldr	r3, [r7, #12]
 8022496:	223f      	movs	r2, #63	; 0x3f
 8022498:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 802249c:	e003      	b.n	80224a6 <HAL_UART_Receive+0xe4>
 802249e:	68fb      	ldr	r3, [r7, #12]
 80224a0:	2200      	movs	r2, #0
 80224a2:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
    uhMask = huart->Mask;
 80224a6:	68fb      	ldr	r3, [r7, #12]
 80224a8:	f8b3 305c 	ldrh.w	r3, [r3, #92]	; 0x5c
 80224ac:	827b      	strh	r3, [r7, #18]

    /* In case of 9bits/No Parity transfer, pRxData needs to be handled as a uint16_t pointer */
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 80224ae:	68fb      	ldr	r3, [r7, #12]
 80224b0:	689b      	ldr	r3, [r3, #8]
 80224b2:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80224b6:	d108      	bne.n	80224ca <HAL_UART_Receive+0x108>
 80224b8:	68fb      	ldr	r3, [r7, #12]
 80224ba:	691b      	ldr	r3, [r3, #16]
 80224bc:	2b00      	cmp	r3, #0
 80224be:	d104      	bne.n	80224ca <HAL_UART_Receive+0x108>
    {
      pdata8bits  = NULL;
 80224c0:	2300      	movs	r3, #0
 80224c2:	61fb      	str	r3, [r7, #28]
      pdata16bits = (uint16_t *) pData;
 80224c4:	68bb      	ldr	r3, [r7, #8]
 80224c6:	61bb      	str	r3, [r7, #24]
 80224c8:	e003      	b.n	80224d2 <HAL_UART_Receive+0x110>
    }
    else
    {
      pdata8bits  = pData;
 80224ca:	68bb      	ldr	r3, [r7, #8]
 80224cc:	61fb      	str	r3, [r7, #28]
      pdata16bits = NULL;
 80224ce:	2300      	movs	r3, #0
 80224d0:	61bb      	str	r3, [r7, #24]
    }

    __HAL_UNLOCK(huart);
 80224d2:	68fb      	ldr	r3, [r7, #12]
 80224d4:	2200      	movs	r2, #0
 80224d6:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

    /* as long as data have to be received */
    while (huart->RxXferCount > 0U)
 80224da:	e032      	b.n	8022542 <HAL_UART_Receive+0x180>
    {
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 80224dc:	683b      	ldr	r3, [r7, #0]
 80224de:	9300      	str	r3, [sp, #0]
 80224e0:	697b      	ldr	r3, [r7, #20]
 80224e2:	2200      	movs	r2, #0
 80224e4:	2120      	movs	r1, #32
 80224e6:	68f8      	ldr	r0, [r7, #12]
 80224e8:	f000 fdbb 	bl	8023062 <UART_WaitOnFlagUntilTimeout>
 80224ec:	4603      	mov	r3, r0
 80224ee:	2b00      	cmp	r3, #0
 80224f0:	d001      	beq.n	80224f6 <HAL_UART_Receive+0x134>
      {
        return HAL_TIMEOUT;
 80224f2:	2303      	movs	r3, #3
 80224f4:	e031      	b.n	802255a <HAL_UART_Receive+0x198>
      }
      if (pdata8bits == NULL)
 80224f6:	69fb      	ldr	r3, [r7, #28]
 80224f8:	2b00      	cmp	r3, #0
 80224fa:	d10c      	bne.n	8022516 <HAL_UART_Receive+0x154>
      {
        *pdata16bits = (uint16_t)(huart->Instance->RDR & uhMask);
 80224fc:	68fb      	ldr	r3, [r7, #12]
 80224fe:	681b      	ldr	r3, [r3, #0]
 8022500:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8022502:	b29a      	uxth	r2, r3
 8022504:	8a7b      	ldrh	r3, [r7, #18]
 8022506:	4013      	ands	r3, r2
 8022508:	b29a      	uxth	r2, r3
 802250a:	69bb      	ldr	r3, [r7, #24]
 802250c:	801a      	strh	r2, [r3, #0]
        pdata16bits++;
 802250e:	69bb      	ldr	r3, [r7, #24]
 8022510:	3302      	adds	r3, #2
 8022512:	61bb      	str	r3, [r7, #24]
 8022514:	e00c      	b.n	8022530 <HAL_UART_Receive+0x16e>
      }
      else
      {
        *pdata8bits = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
 8022516:	68fb      	ldr	r3, [r7, #12]
 8022518:	681b      	ldr	r3, [r3, #0]
 802251a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 802251c:	b2da      	uxtb	r2, r3
 802251e:	8a7b      	ldrh	r3, [r7, #18]
 8022520:	b2db      	uxtb	r3, r3
 8022522:	4013      	ands	r3, r2
 8022524:	b2da      	uxtb	r2, r3
 8022526:	69fb      	ldr	r3, [r7, #28]
 8022528:	701a      	strb	r2, [r3, #0]
        pdata8bits++;
 802252a:	69fb      	ldr	r3, [r7, #28]
 802252c:	3301      	adds	r3, #1
 802252e:	61fb      	str	r3, [r7, #28]
      }
      huart->RxXferCount--;
 8022530:	68fb      	ldr	r3, [r7, #12]
 8022532:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 8022536:	b29b      	uxth	r3, r3
 8022538:	3b01      	subs	r3, #1
 802253a:	b29a      	uxth	r2, r3
 802253c:	68fb      	ldr	r3, [r7, #12]
 802253e:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a
    while (huart->RxXferCount > 0U)
 8022542:	68fb      	ldr	r3, [r7, #12]
 8022544:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 8022548:	b29b      	uxth	r3, r3
 802254a:	2b00      	cmp	r3, #0
 802254c:	d1c6      	bne.n	80224dc <HAL_UART_Receive+0x11a>
    }

    /* At end of Rx process, restore huart->RxState to Ready */
    huart->RxState = HAL_UART_STATE_READY;
 802254e:	68fb      	ldr	r3, [r7, #12]
 8022550:	2220      	movs	r2, #32
 8022552:	67da      	str	r2, [r3, #124]	; 0x7c

    return HAL_OK;
 8022554:	2300      	movs	r3, #0
 8022556:	e000      	b.n	802255a <HAL_UART_Receive+0x198>
  }
  else
  {
    return HAL_BUSY;
 8022558:	2302      	movs	r3, #2
  }
}
 802255a:	4618      	mov	r0, r3
 802255c:	3720      	adds	r7, #32
 802255e:	46bd      	mov	sp, r7
 8022560:	bd80      	pop	{r7, pc}

08022562 <HAL_UART_Receive_IT>:
  * @param pData Pointer to data buffer (u8 or u16 data elements).
  * @param Size  Amount of data elements (u8 or u16) to be received.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
{
 8022562:	b580      	push	{r7, lr}
 8022564:	b084      	sub	sp, #16
 8022566:	af00      	add	r7, sp, #0
 8022568:	60f8      	str	r0, [r7, #12]
 802256a:	60b9      	str	r1, [r7, #8]
 802256c:	4613      	mov	r3, r2
 802256e:	80fb      	strh	r3, [r7, #6]
  /* Check that a Rx process is not already ongoing */
  if (huart->RxState == HAL_UART_STATE_READY)
 8022570:	68fb      	ldr	r3, [r7, #12]
 8022572:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8022574:	2b20      	cmp	r3, #32
 8022576:	d12c      	bne.n	80225d2 <HAL_UART_Receive_IT+0x70>
  {
    if ((pData == NULL) || (Size == 0U))
 8022578:	68bb      	ldr	r3, [r7, #8]
 802257a:	2b00      	cmp	r3, #0
 802257c:	d002      	beq.n	8022584 <HAL_UART_Receive_IT+0x22>
 802257e:	88fb      	ldrh	r3, [r7, #6]
 8022580:	2b00      	cmp	r3, #0
 8022582:	d101      	bne.n	8022588 <HAL_UART_Receive_IT+0x26>
    {
      return HAL_ERROR;
 8022584:	2301      	movs	r3, #1
 8022586:	e025      	b.n	80225d4 <HAL_UART_Receive_IT+0x72>
    }

    __HAL_LOCK(huart);
 8022588:	68fb      	ldr	r3, [r7, #12]
 802258a:	f893 3074 	ldrb.w	r3, [r3, #116]	; 0x74
 802258e:	2b01      	cmp	r3, #1
 8022590:	d101      	bne.n	8022596 <HAL_UART_Receive_IT+0x34>
 8022592:	2302      	movs	r3, #2
 8022594:	e01e      	b.n	80225d4 <HAL_UART_Receive_IT+0x72>
 8022596:	68fb      	ldr	r3, [r7, #12]
 8022598:	2201      	movs	r2, #1
 802259a:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

    /* Set Reception type to Standard reception */
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 802259e:	68fb      	ldr	r3, [r7, #12]
 80225a0:	2200      	movs	r2, #0
 80225a2:	661a      	str	r2, [r3, #96]	; 0x60

    /* Check that USART RTOEN bit is set */
    if (READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
 80225a4:	68fb      	ldr	r3, [r7, #12]
 80225a6:	681b      	ldr	r3, [r3, #0]
 80225a8:	685b      	ldr	r3, [r3, #4]
 80225aa:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 80225ae:	2b00      	cmp	r3, #0
 80225b0:	d007      	beq.n	80225c2 <HAL_UART_Receive_IT+0x60>
    {
      /* Enable the UART Receiver Timeout Interrupt */
      SET_BIT(huart->Instance->CR1, USART_CR1_RTOIE);
 80225b2:	68fb      	ldr	r3, [r7, #12]
 80225b4:	681b      	ldr	r3, [r3, #0]
 80225b6:	681a      	ldr	r2, [r3, #0]
 80225b8:	68fb      	ldr	r3, [r7, #12]
 80225ba:	681b      	ldr	r3, [r3, #0]
 80225bc:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 80225c0:	601a      	str	r2, [r3, #0]
    }

    return (UART_Start_Receive_IT(huart, pData, Size));
 80225c2:	88fb      	ldrh	r3, [r7, #6]
 80225c4:	461a      	mov	r2, r3
 80225c6:	68b9      	ldr	r1, [r7, #8]
 80225c8:	68f8      	ldr	r0, [r7, #12]
 80225ca:	f000 fdc7 	bl	802315c <UART_Start_Receive_IT>
 80225ce:	4603      	mov	r3, r0
 80225d0:	e000      	b.n	80225d4 <HAL_UART_Receive_IT+0x72>
  }
  else
  {
    return HAL_BUSY;
 80225d2:	2302      	movs	r3, #2
  }
}
 80225d4:	4618      	mov	r0, r3
 80225d6:	3710      	adds	r7, #16
 80225d8:	46bd      	mov	sp, r7
 80225da:	bd80      	pop	{r7, pc}

080225dc <HAL_UART_IRQHandler>:
  * @brief Handle UART interrupt request.
  * @param huart UART handle.
  * @retval None
  */
void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
{
 80225dc:	b580      	push	{r7, lr}
 80225de:	b088      	sub	sp, #32
 80225e0:	af00      	add	r7, sp, #0
 80225e2:	6078      	str	r0, [r7, #4]
  uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 80225e4:	687b      	ldr	r3, [r7, #4]
 80225e6:	681b      	ldr	r3, [r3, #0]
 80225e8:	69db      	ldr	r3, [r3, #28]
 80225ea:	61fb      	str	r3, [r7, #28]
  uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 80225ec:	687b      	ldr	r3, [r7, #4]
 80225ee:	681b      	ldr	r3, [r3, #0]
 80225f0:	681b      	ldr	r3, [r3, #0]
 80225f2:	61bb      	str	r3, [r7, #24]
  uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 80225f4:	687b      	ldr	r3, [r7, #4]
 80225f6:	681b      	ldr	r3, [r3, #0]
 80225f8:	689b      	ldr	r3, [r3, #8]
 80225fa:	617b      	str	r3, [r7, #20]

  uint32_t errorflags;
  uint32_t errorcode;

  /* If no error occurs */
  errorflags = (isrflags & (uint32_t)(USART_ISR_PE | USART_ISR_FE | USART_ISR_ORE | USART_ISR_NE | USART_ISR_RTOF));
 80225fc:	69fa      	ldr	r2, [r7, #28]
 80225fe:	f640 030f 	movw	r3, #2063	; 0x80f
 8022602:	4013      	ands	r3, r2
 8022604:	613b      	str	r3, [r7, #16]
  if (errorflags == 0U)
 8022606:	693b      	ldr	r3, [r7, #16]
 8022608:	2b00      	cmp	r3, #0
 802260a:	d113      	bne.n	8022634 <HAL_UART_IRQHandler+0x58>
  {
    /* UART in mode Receiver ---------------------------------------------------*/
    if (((isrflags & USART_ISR_RXNE) != 0U)
 802260c:	69fb      	ldr	r3, [r7, #28]
 802260e:	f003 0320 	and.w	r3, r3, #32
 8022612:	2b00      	cmp	r3, #0
 8022614:	d00e      	beq.n	8022634 <HAL_UART_IRQHandler+0x58>
        && ((cr1its & USART_CR1_RXNEIE) != 0U))
 8022616:	69bb      	ldr	r3, [r7, #24]
 8022618:	f003 0320 	and.w	r3, r3, #32
 802261c:	2b00      	cmp	r3, #0
 802261e:	d009      	beq.n	8022634 <HAL_UART_IRQHandler+0x58>
    {
      if (huart->RxISR != NULL)
 8022620:	687b      	ldr	r3, [r7, #4]
 8022622:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8022624:	2b00      	cmp	r3, #0
 8022626:	f000 81b9 	beq.w	802299c <HAL_UART_IRQHandler+0x3c0>
      {
        huart->RxISR(huart);
 802262a:	687b      	ldr	r3, [r7, #4]
 802262c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 802262e:	6878      	ldr	r0, [r7, #4]
 8022630:	4798      	blx	r3
      }
      return;
 8022632:	e1b3      	b.n	802299c <HAL_UART_IRQHandler+0x3c0>
    }
  }

  /* If some errors occur */
  if ((errorflags != 0U)
 8022634:	693b      	ldr	r3, [r7, #16]
 8022636:	2b00      	cmp	r3, #0
 8022638:	f000 80e3 	beq.w	8022802 <HAL_UART_IRQHandler+0x226>
      && (((cr3its & USART_CR3_EIE) != 0U)
 802263c:	697b      	ldr	r3, [r7, #20]
 802263e:	f003 0301 	and.w	r3, r3, #1
 8022642:	2b00      	cmp	r3, #0
 8022644:	d105      	bne.n	8022652 <HAL_UART_IRQHandler+0x76>
          || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_RTOIE)) != 0U)))
 8022646:	69ba      	ldr	r2, [r7, #24]
 8022648:	4ba5      	ldr	r3, [pc, #660]	; (80228e0 <HAL_UART_IRQHandler+0x304>)
 802264a:	4013      	ands	r3, r2
 802264c:	2b00      	cmp	r3, #0
 802264e:	f000 80d8 	beq.w	8022802 <HAL_UART_IRQHandler+0x226>
  {
    /* UART parity error interrupt occurred -------------------------------------*/
    if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
 8022652:	69fb      	ldr	r3, [r7, #28]
 8022654:	f003 0301 	and.w	r3, r3, #1
 8022658:	2b00      	cmp	r3, #0
 802265a:	d010      	beq.n	802267e <HAL_UART_IRQHandler+0xa2>
 802265c:	69bb      	ldr	r3, [r7, #24]
 802265e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8022662:	2b00      	cmp	r3, #0
 8022664:	d00b      	beq.n	802267e <HAL_UART_IRQHandler+0xa2>
    {
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
 8022666:	687b      	ldr	r3, [r7, #4]
 8022668:	681b      	ldr	r3, [r3, #0]
 802266a:	2201      	movs	r2, #1
 802266c:	621a      	str	r2, [r3, #32]

      huart->ErrorCode |= HAL_UART_ERROR_PE;
 802266e:	687b      	ldr	r3, [r7, #4]
 8022670:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8022674:	f043 0201 	orr.w	r2, r3, #1
 8022678:	687b      	ldr	r3, [r7, #4]
 802267a:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
    }

    /* UART frame error interrupt occurred --------------------------------------*/
    if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 802267e:	69fb      	ldr	r3, [r7, #28]
 8022680:	f003 0302 	and.w	r3, r3, #2
 8022684:	2b00      	cmp	r3, #0
 8022686:	d010      	beq.n	80226aa <HAL_UART_IRQHandler+0xce>
 8022688:	697b      	ldr	r3, [r7, #20]
 802268a:	f003 0301 	and.w	r3, r3, #1
 802268e:	2b00      	cmp	r3, #0
 8022690:	d00b      	beq.n	80226aa <HAL_UART_IRQHandler+0xce>
    {
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
 8022692:	687b      	ldr	r3, [r7, #4]
 8022694:	681b      	ldr	r3, [r3, #0]
 8022696:	2202      	movs	r2, #2
 8022698:	621a      	str	r2, [r3, #32]

      huart->ErrorCode |= HAL_UART_ERROR_FE;
 802269a:	687b      	ldr	r3, [r7, #4]
 802269c:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80226a0:	f043 0204 	orr.w	r2, r3, #4
 80226a4:	687b      	ldr	r3, [r7, #4]
 80226a6:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
    }

    /* UART noise error interrupt occurred --------------------------------------*/
    if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 80226aa:	69fb      	ldr	r3, [r7, #28]
 80226ac:	f003 0304 	and.w	r3, r3, #4
 80226b0:	2b00      	cmp	r3, #0
 80226b2:	d010      	beq.n	80226d6 <HAL_UART_IRQHandler+0xfa>
 80226b4:	697b      	ldr	r3, [r7, #20]
 80226b6:	f003 0301 	and.w	r3, r3, #1
 80226ba:	2b00      	cmp	r3, #0
 80226bc:	d00b      	beq.n	80226d6 <HAL_UART_IRQHandler+0xfa>
    {
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
 80226be:	687b      	ldr	r3, [r7, #4]
 80226c0:	681b      	ldr	r3, [r3, #0]
 80226c2:	2204      	movs	r2, #4
 80226c4:	621a      	str	r2, [r3, #32]

      huart->ErrorCode |= HAL_UART_ERROR_NE;
 80226c6:	687b      	ldr	r3, [r7, #4]
 80226c8:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80226cc:	f043 0202 	orr.w	r2, r3, #2
 80226d0:	687b      	ldr	r3, [r7, #4]
 80226d2:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
    }

    /* UART Over-Run interrupt occurred -----------------------------------------*/
    if (((isrflags & USART_ISR_ORE) != 0U)
 80226d6:	69fb      	ldr	r3, [r7, #28]
 80226d8:	f003 0308 	and.w	r3, r3, #8
 80226dc:	2b00      	cmp	r3, #0
 80226de:	d015      	beq.n	802270c <HAL_UART_IRQHandler+0x130>
        && (((cr1its & USART_CR1_RXNEIE) != 0U) ||
 80226e0:	69bb      	ldr	r3, [r7, #24]
 80226e2:	f003 0320 	and.w	r3, r3, #32
 80226e6:	2b00      	cmp	r3, #0
 80226e8:	d104      	bne.n	80226f4 <HAL_UART_IRQHandler+0x118>
            ((cr3its & USART_CR3_EIE) != 0U)))
 80226ea:	697b      	ldr	r3, [r7, #20]
 80226ec:	f003 0301 	and.w	r3, r3, #1
        && (((cr1its & USART_CR1_RXNEIE) != 0U) ||
 80226f0:	2b00      	cmp	r3, #0
 80226f2:	d00b      	beq.n	802270c <HAL_UART_IRQHandler+0x130>
    {
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
 80226f4:	687b      	ldr	r3, [r7, #4]
 80226f6:	681b      	ldr	r3, [r3, #0]
 80226f8:	2208      	movs	r2, #8
 80226fa:	621a      	str	r2, [r3, #32]

      huart->ErrorCode |= HAL_UART_ERROR_ORE;
 80226fc:	687b      	ldr	r3, [r7, #4]
 80226fe:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8022702:	f043 0208 	orr.w	r2, r3, #8
 8022706:	687b      	ldr	r3, [r7, #4]
 8022708:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
    }

    /* UART Receiver Timeout interrupt occurred ---------------------------------*/
    if (((isrflags & USART_ISR_RTOF) != 0U) && ((cr1its & USART_CR1_RTOIE) != 0U))
 802270c:	69fb      	ldr	r3, [r7, #28]
 802270e:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8022712:	2b00      	cmp	r3, #0
 8022714:	d011      	beq.n	802273a <HAL_UART_IRQHandler+0x15e>
 8022716:	69bb      	ldr	r3, [r7, #24]
 8022718:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 802271c:	2b00      	cmp	r3, #0
 802271e:	d00c      	beq.n	802273a <HAL_UART_IRQHandler+0x15e>
    {
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 8022720:	687b      	ldr	r3, [r7, #4]
 8022722:	681b      	ldr	r3, [r3, #0]
 8022724:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8022728:	621a      	str	r2, [r3, #32]

      huart->ErrorCode |= HAL_UART_ERROR_RTO;
 802272a:	687b      	ldr	r3, [r7, #4]
 802272c:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8022730:	f043 0220 	orr.w	r2, r3, #32
 8022734:	687b      	ldr	r3, [r7, #4]
 8022736:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
    }

    /* Call UART Error Call back function if need be ----------------------------*/
    if (huart->ErrorCode != HAL_UART_ERROR_NONE)
 802273a:	687b      	ldr	r3, [r7, #4]
 802273c:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8022740:	2b00      	cmp	r3, #0
 8022742:	f000 812d 	beq.w	80229a0 <HAL_UART_IRQHandler+0x3c4>
    {
      /* UART in mode Receiver --------------------------------------------------*/
      if (((isrflags & USART_ISR_RXNE) != 0U)
 8022746:	69fb      	ldr	r3, [r7, #28]
 8022748:	f003 0320 	and.w	r3, r3, #32
 802274c:	2b00      	cmp	r3, #0
 802274e:	d00c      	beq.n	802276a <HAL_UART_IRQHandler+0x18e>
          && ((cr1its & USART_CR1_RXNEIE) != 0U))
 8022750:	69bb      	ldr	r3, [r7, #24]
 8022752:	f003 0320 	and.w	r3, r3, #32
 8022756:	2b00      	cmp	r3, #0
 8022758:	d007      	beq.n	802276a <HAL_UART_IRQHandler+0x18e>
      {
        if (huart->RxISR != NULL)
 802275a:	687b      	ldr	r3, [r7, #4]
 802275c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 802275e:	2b00      	cmp	r3, #0
 8022760:	d003      	beq.n	802276a <HAL_UART_IRQHandler+0x18e>
        {
          huart->RxISR(huart);
 8022762:	687b      	ldr	r3, [r7, #4]
 8022764:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8022766:	6878      	ldr	r0, [r7, #4]
 8022768:	4798      	blx	r3
      /* If Error is to be considered as blocking :
          - Receiver Timeout error in Reception
          - Overrun error in Reception
          - any error occurs in DMA mode reception
      */
      errorcode = huart->ErrorCode;
 802276a:	687b      	ldr	r3, [r7, #4]
 802276c:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8022770:	60fb      	str	r3, [r7, #12]
      if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 8022772:	687b      	ldr	r3, [r7, #4]
 8022774:	681b      	ldr	r3, [r3, #0]
 8022776:	689b      	ldr	r3, [r3, #8]
 8022778:	f003 0340 	and.w	r3, r3, #64	; 0x40
 802277c:	2b40      	cmp	r3, #64	; 0x40
 802277e:	d004      	beq.n	802278a <HAL_UART_IRQHandler+0x1ae>
          ((errorcode & (HAL_UART_ERROR_RTO | HAL_UART_ERROR_ORE)) != 0U))
 8022780:	68fb      	ldr	r3, [r7, #12]
 8022782:	f003 0328 	and.w	r3, r3, #40	; 0x28
      if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 8022786:	2b00      	cmp	r3, #0
 8022788:	d031      	beq.n	80227ee <HAL_UART_IRQHandler+0x212>
      {
        /* Blocking error : transfer is aborted
           Set the UART state ready to be able to start again the process,
           Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
        UART_EndRxTransfer(huart);
 802278a:	6878      	ldr	r0, [r7, #4]
 802278c:	f000 fd6e 	bl	802326c <UART_EndRxTransfer>

        /* Disable the UART DMA Rx request if enabled */
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8022790:	687b      	ldr	r3, [r7, #4]
 8022792:	681b      	ldr	r3, [r3, #0]
 8022794:	689b      	ldr	r3, [r3, #8]
 8022796:	f003 0340 	and.w	r3, r3, #64	; 0x40
 802279a:	2b40      	cmp	r3, #64	; 0x40
 802279c:	d123      	bne.n	80227e6 <HAL_UART_IRQHandler+0x20a>
        {
          CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 802279e:	687b      	ldr	r3, [r7, #4]
 80227a0:	681b      	ldr	r3, [r3, #0]
 80227a2:	689a      	ldr	r2, [r3, #8]
 80227a4:	687b      	ldr	r3, [r7, #4]
 80227a6:	681b      	ldr	r3, [r3, #0]
 80227a8:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80227ac:	609a      	str	r2, [r3, #8]

          /* Abort the UART DMA Rx channel */
          if (huart->hdmarx != NULL)
 80227ae:	687b      	ldr	r3, [r7, #4]
 80227b0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80227b2:	2b00      	cmp	r3, #0
 80227b4:	d013      	beq.n	80227de <HAL_UART_IRQHandler+0x202>
          {
            /* Set the UART DMA Abort callback :
               will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
            huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
 80227b6:	687b      	ldr	r3, [r7, #4]
 80227b8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80227ba:	4a4a      	ldr	r2, [pc, #296]	; (80228e4 <HAL_UART_IRQHandler+0x308>)
 80227bc:	651a      	str	r2, [r3, #80]	; 0x50

            /* Abort DMA RX */
            if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 80227be:	687b      	ldr	r3, [r7, #4]
 80227c0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80227c2:	4618      	mov	r0, r3
 80227c4:	f7fe fa93 	bl	8020cee <HAL_DMA_Abort_IT>
 80227c8:	4603      	mov	r3, r0
 80227ca:	2b00      	cmp	r3, #0
 80227cc:	d017      	beq.n	80227fe <HAL_UART_IRQHandler+0x222>
            {
              /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
              huart->hdmarx->XferAbortCallback(huart->hdmarx);
 80227ce:	687b      	ldr	r3, [r7, #4]
 80227d0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80227d2:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80227d4:	687a      	ldr	r2, [r7, #4]
 80227d6:	6f12      	ldr	r2, [r2, #112]	; 0x70
 80227d8:	4610      	mov	r0, r2
 80227da:	4798      	blx	r3
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 80227dc:	e00f      	b.n	80227fe <HAL_UART_IRQHandler+0x222>
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
            /*Call registered error callback*/
            huart->ErrorCallback(huart);
#else
            /*Call legacy weak error callback*/
            HAL_UART_ErrorCallback(huart);
 80227de:	6878      	ldr	r0, [r7, #4]
 80227e0:	f000 f8f2 	bl	80229c8 <HAL_UART_ErrorCallback>
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 80227e4:	e00b      	b.n	80227fe <HAL_UART_IRQHandler+0x222>
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
          /*Call registered error callback*/
          huart->ErrorCallback(huart);
#else
          /*Call legacy weak error callback*/
          HAL_UART_ErrorCallback(huart);
 80227e6:	6878      	ldr	r0, [r7, #4]
 80227e8:	f000 f8ee 	bl	80229c8 <HAL_UART_ErrorCallback>
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 80227ec:	e007      	b.n	80227fe <HAL_UART_IRQHandler+0x222>
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered error callback*/
        huart->ErrorCallback(huart);
#else
        /*Call legacy weak error callback*/
        HAL_UART_ErrorCallback(huart);
 80227ee:	6878      	ldr	r0, [r7, #4]
 80227f0:	f000 f8ea 	bl	80229c8 <HAL_UART_ErrorCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
        huart->ErrorCode = HAL_UART_ERROR_NONE;
 80227f4:	687b      	ldr	r3, [r7, #4]
 80227f6:	2200      	movs	r2, #0
 80227f8:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
      }
    }
    return;
 80227fc:	e0d0      	b.n	80229a0 <HAL_UART_IRQHandler+0x3c4>
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 80227fe:	bf00      	nop
    return;
 8022800:	e0ce      	b.n	80229a0 <HAL_UART_IRQHandler+0x3c4>

  } /* End if some error occurs */

  /* Check current reception Mode :
     If Reception till IDLE event has been selected : */
  if ((huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 8022802:	687b      	ldr	r3, [r7, #4]
 8022804:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8022806:	2b01      	cmp	r3, #1
 8022808:	f040 80a7 	bne.w	802295a <HAL_UART_IRQHandler+0x37e>
      && ((isrflags & USART_ISR_IDLE) != 0U)
 802280c:	69fb      	ldr	r3, [r7, #28]
 802280e:	f003 0310 	and.w	r3, r3, #16
 8022812:	2b00      	cmp	r3, #0
 8022814:	f000 80a1 	beq.w	802295a <HAL_UART_IRQHandler+0x37e>
      && ((cr1its & USART_ISR_IDLE) != 0U))
 8022818:	69bb      	ldr	r3, [r7, #24]
 802281a:	f003 0310 	and.w	r3, r3, #16
 802281e:	2b00      	cmp	r3, #0
 8022820:	f000 809b 	beq.w	802295a <HAL_UART_IRQHandler+0x37e>
  {
    __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 8022824:	687b      	ldr	r3, [r7, #4]
 8022826:	681b      	ldr	r3, [r3, #0]
 8022828:	2210      	movs	r2, #16
 802282a:	621a      	str	r2, [r3, #32]

    /* Check if DMA mode is enabled in UART */
    if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 802282c:	687b      	ldr	r3, [r7, #4]
 802282e:	681b      	ldr	r3, [r3, #0]
 8022830:	689b      	ldr	r3, [r3, #8]
 8022832:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8022836:	2b40      	cmp	r3, #64	; 0x40
 8022838:	d156      	bne.n	80228e8 <HAL_UART_IRQHandler+0x30c>
    {
      /* DMA mode enabled */
      /* Check received length : If all expected data are received, do nothing,
         (DMA cplt callback will be called).
         Otherwise, if at least one data has already been received, IDLE event is to be notified to user */
      uint16_t nb_remaining_rx_data = (uint16_t) __HAL_DMA_GET_COUNTER(huart->hdmarx);
 802283a:	687b      	ldr	r3, [r7, #4]
 802283c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 802283e:	681b      	ldr	r3, [r3, #0]
 8022840:	685b      	ldr	r3, [r3, #4]
 8022842:	813b      	strh	r3, [r7, #8]
      if ((nb_remaining_rx_data > 0U)
 8022844:	893b      	ldrh	r3, [r7, #8]
 8022846:	2b00      	cmp	r3, #0
 8022848:	f000 80ac 	beq.w	80229a4 <HAL_UART_IRQHandler+0x3c8>
          && (nb_remaining_rx_data < huart->RxXferSize))
 802284c:	687b      	ldr	r3, [r7, #4]
 802284e:	f8b3 3058 	ldrh.w	r3, [r3, #88]	; 0x58
 8022852:	893a      	ldrh	r2, [r7, #8]
 8022854:	429a      	cmp	r2, r3
 8022856:	f080 80a5 	bcs.w	80229a4 <HAL_UART_IRQHandler+0x3c8>
      {
        /* Reception is not complete */
        huart->RxXferCount = nb_remaining_rx_data;
 802285a:	687b      	ldr	r3, [r7, #4]
 802285c:	893a      	ldrh	r2, [r7, #8]
 802285e:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a

        /* In Normal mode, end DMA xfer and HAL UART Rx process*/
        if (huart->hdmarx->Init.Mode != DMA_CIRCULAR)
 8022862:	687b      	ldr	r3, [r7, #4]
 8022864:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8022866:	69db      	ldr	r3, [r3, #28]
 8022868:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 802286c:	d02a      	beq.n	80228c4 <HAL_UART_IRQHandler+0x2e8>
        {
          /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
          CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 802286e:	687b      	ldr	r3, [r7, #4]
 8022870:	681b      	ldr	r3, [r3, #0]
 8022872:	681a      	ldr	r2, [r3, #0]
 8022874:	687b      	ldr	r3, [r7, #4]
 8022876:	681b      	ldr	r3, [r3, #0]
 8022878:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 802287c:	601a      	str	r2, [r3, #0]
          CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 802287e:	687b      	ldr	r3, [r7, #4]
 8022880:	681b      	ldr	r3, [r3, #0]
 8022882:	689a      	ldr	r2, [r3, #8]
 8022884:	687b      	ldr	r3, [r7, #4]
 8022886:	681b      	ldr	r3, [r3, #0]
 8022888:	f022 0201 	bic.w	r2, r2, #1
 802288c:	609a      	str	r2, [r3, #8]

          /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
             in the UART CR3 register */
          CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 802288e:	687b      	ldr	r3, [r7, #4]
 8022890:	681b      	ldr	r3, [r3, #0]
 8022892:	689a      	ldr	r2, [r3, #8]
 8022894:	687b      	ldr	r3, [r7, #4]
 8022896:	681b      	ldr	r3, [r3, #0]
 8022898:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 802289c:	609a      	str	r2, [r3, #8]

          /* At end of Rx process, restore huart->RxState to Ready */
          huart->RxState = HAL_UART_STATE_READY;
 802289e:	687b      	ldr	r3, [r7, #4]
 80228a0:	2220      	movs	r2, #32
 80228a2:	67da      	str	r2, [r3, #124]	; 0x7c
          huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 80228a4:	687b      	ldr	r3, [r7, #4]
 80228a6:	2200      	movs	r2, #0
 80228a8:	661a      	str	r2, [r3, #96]	; 0x60

          CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 80228aa:	687b      	ldr	r3, [r7, #4]
 80228ac:	681b      	ldr	r3, [r3, #0]
 80228ae:	681a      	ldr	r2, [r3, #0]
 80228b0:	687b      	ldr	r3, [r7, #4]
 80228b2:	681b      	ldr	r3, [r3, #0]
 80228b4:	f022 0210 	bic.w	r2, r2, #16
 80228b8:	601a      	str	r2, [r3, #0]

          /* Last bytes received, so no need as the abort is immediate */
          (void)HAL_DMA_Abort(huart->hdmarx);
 80228ba:	687b      	ldr	r3, [r7, #4]
 80228bc:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80228be:	4618      	mov	r0, r3
 80228c0:	f7fe f9a5 	bl	8020c0e <HAL_DMA_Abort>
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered Rx Event callback*/
        huart->RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
#else
        /*Call legacy weak Rx Event callback*/
        HAL_UARTEx_RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
 80228c4:	687b      	ldr	r3, [r7, #4]
 80228c6:	f8b3 2058 	ldrh.w	r2, [r3, #88]	; 0x58
 80228ca:	687b      	ldr	r3, [r7, #4]
 80228cc:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 80228d0:	b29b      	uxth	r3, r3
 80228d2:	1ad3      	subs	r3, r2, r3
 80228d4:	b29b      	uxth	r3, r3
 80228d6:	4619      	mov	r1, r3
 80228d8:	6878      	ldr	r0, [r7, #4]
 80228da:	f000 f87f 	bl	80229dc <HAL_UARTEx_RxEventCallback>
#endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
      }
      return;
 80228de:	e061      	b.n	80229a4 <HAL_UART_IRQHandler+0x3c8>
 80228e0:	04000120 	.word	0x04000120
 80228e4:	080232cb 	.word	0x080232cb
    else
    {
      /* DMA mode not enabled */
      /* Check received length : If all expected data are received, do nothing.
         Otherwise, if at least one data has already been received, IDLE event is to be notified to user */
      uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
 80228e8:	687b      	ldr	r3, [r7, #4]
 80228ea:	f8b3 2058 	ldrh.w	r2, [r3, #88]	; 0x58
 80228ee:	687b      	ldr	r3, [r7, #4]
 80228f0:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 80228f4:	b29b      	uxth	r3, r3
 80228f6:	1ad3      	subs	r3, r2, r3
 80228f8:	817b      	strh	r3, [r7, #10]
      if ((huart->RxXferCount > 0U)
 80228fa:	687b      	ldr	r3, [r7, #4]
 80228fc:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 8022900:	b29b      	uxth	r3, r3
 8022902:	2b00      	cmp	r3, #0
 8022904:	d050      	beq.n	80229a8 <HAL_UART_IRQHandler+0x3cc>
          && (nb_rx_data > 0U))
 8022906:	897b      	ldrh	r3, [r7, #10]
 8022908:	2b00      	cmp	r3, #0
 802290a:	d04d      	beq.n	80229a8 <HAL_UART_IRQHandler+0x3cc>
      {
        /* Disable the UART Parity Error Interrupt and RXNE interrupts */
        CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 802290c:	687b      	ldr	r3, [r7, #4]
 802290e:	681b      	ldr	r3, [r3, #0]
 8022910:	681a      	ldr	r2, [r3, #0]
 8022912:	687b      	ldr	r3, [r7, #4]
 8022914:	681b      	ldr	r3, [r3, #0]
 8022916:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 802291a:	601a      	str	r2, [r3, #0]

        /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
        CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 802291c:	687b      	ldr	r3, [r7, #4]
 802291e:	681b      	ldr	r3, [r3, #0]
 8022920:	689a      	ldr	r2, [r3, #8]
 8022922:	687b      	ldr	r3, [r7, #4]
 8022924:	681b      	ldr	r3, [r3, #0]
 8022926:	f022 0201 	bic.w	r2, r2, #1
 802292a:	609a      	str	r2, [r3, #8]

        /* Rx process is completed, restore huart->RxState to Ready */
        huart->RxState = HAL_UART_STATE_READY;
 802292c:	687b      	ldr	r3, [r7, #4]
 802292e:	2220      	movs	r2, #32
 8022930:	67da      	str	r2, [r3, #124]	; 0x7c
        huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8022932:	687b      	ldr	r3, [r7, #4]
 8022934:	2200      	movs	r2, #0
 8022936:	661a      	str	r2, [r3, #96]	; 0x60

        /* Clear RxISR function pointer */
        huart->RxISR = NULL;
 8022938:	687b      	ldr	r3, [r7, #4]
 802293a:	2200      	movs	r2, #0
 802293c:	665a      	str	r2, [r3, #100]	; 0x64

        CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 802293e:	687b      	ldr	r3, [r7, #4]
 8022940:	681b      	ldr	r3, [r3, #0]
 8022942:	681a      	ldr	r2, [r3, #0]
 8022944:	687b      	ldr	r3, [r7, #4]
 8022946:	681b      	ldr	r3, [r3, #0]
 8022948:	f022 0210 	bic.w	r2, r2, #16
 802294c:	601a      	str	r2, [r3, #0]
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered Rx complete callback*/
        huart->RxEventCallback(huart, nb_rx_data);
#else
        /*Call legacy weak Rx Event callback*/
        HAL_UARTEx_RxEventCallback(huart, nb_rx_data);
 802294e:	897b      	ldrh	r3, [r7, #10]
 8022950:	4619      	mov	r1, r3
 8022952:	6878      	ldr	r0, [r7, #4]
 8022954:	f000 f842 	bl	80229dc <HAL_UARTEx_RxEventCallback>
#endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
      }
      return;
 8022958:	e026      	b.n	80229a8 <HAL_UART_IRQHandler+0x3cc>
  }
#endif /* USART_CR3_WUFIE */
#endif /* USART_CR1_UESM */

  /* UART in mode Transmitter ------------------------------------------------*/
  if (((isrflags & USART_ISR_TXE) != 0U)
 802295a:	69fb      	ldr	r3, [r7, #28]
 802295c:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8022960:	2b00      	cmp	r3, #0
 8022962:	d00d      	beq.n	8022980 <HAL_UART_IRQHandler+0x3a4>
      && ((cr1its & USART_CR1_TXEIE) != 0U))
 8022964:	69bb      	ldr	r3, [r7, #24]
 8022966:	f003 0380 	and.w	r3, r3, #128	; 0x80
 802296a:	2b00      	cmp	r3, #0
 802296c:	d008      	beq.n	8022980 <HAL_UART_IRQHandler+0x3a4>
  {
    if (huart->TxISR != NULL)
 802296e:	687b      	ldr	r3, [r7, #4]
 8022970:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8022972:	2b00      	cmp	r3, #0
 8022974:	d01a      	beq.n	80229ac <HAL_UART_IRQHandler+0x3d0>
    {
      huart->TxISR(huart);
 8022976:	687b      	ldr	r3, [r7, #4]
 8022978:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 802297a:	6878      	ldr	r0, [r7, #4]
 802297c:	4798      	blx	r3
    }
    return;
 802297e:	e015      	b.n	80229ac <HAL_UART_IRQHandler+0x3d0>
  }

  /* UART in mode Transmitter (transmission end) -----------------------------*/
  if (((isrflags & USART_ISR_TC) != 0U) && ((cr1its & USART_CR1_TCIE) != 0U))
 8022980:	69fb      	ldr	r3, [r7, #28]
 8022982:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8022986:	2b00      	cmp	r3, #0
 8022988:	d011      	beq.n	80229ae <HAL_UART_IRQHandler+0x3d2>
 802298a:	69bb      	ldr	r3, [r7, #24]
 802298c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8022990:	2b00      	cmp	r3, #0
 8022992:	d00c      	beq.n	80229ae <HAL_UART_IRQHandler+0x3d2>
  {
    UART_EndTransmit_IT(huart);
 8022994:	6878      	ldr	r0, [r7, #4]
 8022996:	f000 fcae 	bl	80232f6 <UART_EndTransmit_IT>
    return;
 802299a:	e008      	b.n	80229ae <HAL_UART_IRQHandler+0x3d2>
      return;
 802299c:	bf00      	nop
 802299e:	e006      	b.n	80229ae <HAL_UART_IRQHandler+0x3d2>
    return;
 80229a0:	bf00      	nop
 80229a2:	e004      	b.n	80229ae <HAL_UART_IRQHandler+0x3d2>
      return;
 80229a4:	bf00      	nop
 80229a6:	e002      	b.n	80229ae <HAL_UART_IRQHandler+0x3d2>
      return;
 80229a8:	bf00      	nop
 80229aa:	e000      	b.n	80229ae <HAL_UART_IRQHandler+0x3d2>
    return;
 80229ac:	bf00      	nop
  }

}
 80229ae:	3720      	adds	r7, #32
 80229b0:	46bd      	mov	sp, r7
 80229b2:	bd80      	pop	{r7, pc}

080229b4 <HAL_UART_TxCpltCallback>:
  * @brief Tx Transfer completed callback.
  * @param huart UART handle.
  * @retval None
  */
__weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
{
 80229b4:	b480      	push	{r7}
 80229b6:	b083      	sub	sp, #12
 80229b8:	af00      	add	r7, sp, #0
 80229ba:	6078      	str	r0, [r7, #4]
  UNUSED(huart);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_UART_TxCpltCallback can be implemented in the user file.
   */
}
 80229bc:	bf00      	nop
 80229be:	370c      	adds	r7, #12
 80229c0:	46bd      	mov	sp, r7
 80229c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80229c6:	4770      	bx	lr

080229c8 <HAL_UART_ErrorCallback>:
  * @brief  UART error callback.
  * @param  huart UART handle.
  * @retval None
  */
__weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
{
 80229c8:	b480      	push	{r7}
 80229ca:	b083      	sub	sp, #12
 80229cc:	af00      	add	r7, sp, #0
 80229ce:	6078      	str	r0, [r7, #4]
  UNUSED(huart);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_UART_ErrorCallback can be implemented in the user file.
   */
}
 80229d0:	bf00      	nop
 80229d2:	370c      	adds	r7, #12
 80229d4:	46bd      	mov	sp, r7
 80229d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80229da:	4770      	bx	lr

080229dc <HAL_UARTEx_RxEventCallback>:
  * @param  Size  Number of data available in application reception buffer (indicates a position in
  *               reception buffer until which, data are available)
  * @retval None
  */
__weak void HAL_UARTEx_RxEventCallback(UART_HandleTypeDef *huart, uint16_t Size)
{
 80229dc:	b480      	push	{r7}
 80229de:	b083      	sub	sp, #12
 80229e0:	af00      	add	r7, sp, #0
 80229e2:	6078      	str	r0, [r7, #4]
 80229e4:	460b      	mov	r3, r1
 80229e6:	807b      	strh	r3, [r7, #2]
  UNUSED(Size);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_UARTEx_RxEventCallback can be implemented in the user file.
   */
}
 80229e8:	bf00      	nop
 80229ea:	370c      	adds	r7, #12
 80229ec:	46bd      	mov	sp, r7
 80229ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80229f2:	4770      	bx	lr

080229f4 <UART_SetConfig>:
  * @brief Configure the UART peripheral.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
{
 80229f4:	b580      	push	{r7, lr}
 80229f6:	b088      	sub	sp, #32
 80229f8:	af00      	add	r7, sp, #0
 80229fa:	6078      	str	r0, [r7, #4]
  uint32_t tmpreg;
  uint16_t brrtemp;
  UART_ClockSourceTypeDef clocksource;
  uint32_t usartdiv;
  HAL_StatusTypeDef ret               = HAL_OK;
 80229fc:	2300      	movs	r3, #0
 80229fe:	77bb      	strb	r3, [r7, #30]
  *  the UART Word Length, Parity, Mode and oversampling:
  *  set the M bits according to huart->Init.WordLength value
  *  set PCE and PS bits according to huart->Init.Parity value
  *  set TE and RE bits according to huart->Init.Mode value
  *  set OVER8 bit according to huart->Init.OverSampling value */
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 8022a00:	687b      	ldr	r3, [r7, #4]
 8022a02:	689a      	ldr	r2, [r3, #8]
 8022a04:	687b      	ldr	r3, [r7, #4]
 8022a06:	691b      	ldr	r3, [r3, #16]
 8022a08:	431a      	orrs	r2, r3
 8022a0a:	687b      	ldr	r3, [r7, #4]
 8022a0c:	695b      	ldr	r3, [r3, #20]
 8022a0e:	431a      	orrs	r2, r3
 8022a10:	687b      	ldr	r3, [r7, #4]
 8022a12:	69db      	ldr	r3, [r3, #28]
 8022a14:	4313      	orrs	r3, r2
 8022a16:	617b      	str	r3, [r7, #20]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 8022a18:	687b      	ldr	r3, [r7, #4]
 8022a1a:	681b      	ldr	r3, [r3, #0]
 8022a1c:	681a      	ldr	r2, [r3, #0]
 8022a1e:	4ba7      	ldr	r3, [pc, #668]	; (8022cbc <UART_SetConfig+0x2c8>)
 8022a20:	4013      	ands	r3, r2
 8022a22:	687a      	ldr	r2, [r7, #4]
 8022a24:	6812      	ldr	r2, [r2, #0]
 8022a26:	6979      	ldr	r1, [r7, #20]
 8022a28:	430b      	orrs	r3, r1
 8022a2a:	6013      	str	r3, [r2, #0]

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits according
  * to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 8022a2c:	687b      	ldr	r3, [r7, #4]
 8022a2e:	681b      	ldr	r3, [r3, #0]
 8022a30:	685b      	ldr	r3, [r3, #4]
 8022a32:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 8022a36:	687b      	ldr	r3, [r7, #4]
 8022a38:	68da      	ldr	r2, [r3, #12]
 8022a3a:	687b      	ldr	r3, [r7, #4]
 8022a3c:	681b      	ldr	r3, [r3, #0]
 8022a3e:	430a      	orrs	r2, r1
 8022a40:	605a      	str	r2, [r3, #4]
  /* Configure
  * - UART HardWare Flow Control: set CTSE and RTSE bits according
  *   to huart->Init.HwFlowCtl value
  * - one-bit sampling method versus three samples' majority rule according
  *   to huart->Init.OneBitSampling (not applicable to LPUART) */
  tmpreg = (uint32_t)huart->Init.HwFlowCtl;
 8022a42:	687b      	ldr	r3, [r7, #4]
 8022a44:	699b      	ldr	r3, [r3, #24]
 8022a46:	617b      	str	r3, [r7, #20]

  tmpreg |= huart->Init.OneBitSampling;
 8022a48:	687b      	ldr	r3, [r7, #4]
 8022a4a:	6a1b      	ldr	r3, [r3, #32]
 8022a4c:	697a      	ldr	r2, [r7, #20]
 8022a4e:	4313      	orrs	r3, r2
 8022a50:	617b      	str	r3, [r7, #20]
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 8022a52:	687b      	ldr	r3, [r7, #4]
 8022a54:	681b      	ldr	r3, [r3, #0]
 8022a56:	689b      	ldr	r3, [r3, #8]
 8022a58:	f423 6130 	bic.w	r1, r3, #2816	; 0xb00
 8022a5c:	687b      	ldr	r3, [r7, #4]
 8022a5e:	681b      	ldr	r3, [r3, #0]
 8022a60:	697a      	ldr	r2, [r7, #20]
 8022a62:	430a      	orrs	r2, r1
 8022a64:	609a      	str	r2, [r3, #8]


  /*-------------------------- USART BRR Configuration -----------------------*/
  UART_GETCLOCKSOURCE(huart, clocksource);
 8022a66:	687b      	ldr	r3, [r7, #4]
 8022a68:	681b      	ldr	r3, [r3, #0]
 8022a6a:	4a95      	ldr	r2, [pc, #596]	; (8022cc0 <UART_SetConfig+0x2cc>)
 8022a6c:	4293      	cmp	r3, r2
 8022a6e:	d120      	bne.n	8022ab2 <UART_SetConfig+0xbe>
 8022a70:	4b94      	ldr	r3, [pc, #592]	; (8022cc4 <UART_SetConfig+0x2d0>)
 8022a72:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8022a76:	f003 0303 	and.w	r3, r3, #3
 8022a7a:	2b03      	cmp	r3, #3
 8022a7c:	d816      	bhi.n	8022aac <UART_SetConfig+0xb8>
 8022a7e:	a201      	add	r2, pc, #4	; (adr r2, 8022a84 <UART_SetConfig+0x90>)
 8022a80:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8022a84:	08022a95 	.word	0x08022a95
 8022a88:	08022aa1 	.word	0x08022aa1
 8022a8c:	08022a9b 	.word	0x08022a9b
 8022a90:	08022aa7 	.word	0x08022aa7
 8022a94:	2301      	movs	r3, #1
 8022a96:	77fb      	strb	r3, [r7, #31]
 8022a98:	e14f      	b.n	8022d3a <UART_SetConfig+0x346>
 8022a9a:	2302      	movs	r3, #2
 8022a9c:	77fb      	strb	r3, [r7, #31]
 8022a9e:	e14c      	b.n	8022d3a <UART_SetConfig+0x346>
 8022aa0:	2304      	movs	r3, #4
 8022aa2:	77fb      	strb	r3, [r7, #31]
 8022aa4:	e149      	b.n	8022d3a <UART_SetConfig+0x346>
 8022aa6:	2308      	movs	r3, #8
 8022aa8:	77fb      	strb	r3, [r7, #31]
 8022aaa:	e146      	b.n	8022d3a <UART_SetConfig+0x346>
 8022aac:	2310      	movs	r3, #16
 8022aae:	77fb      	strb	r3, [r7, #31]
 8022ab0:	e143      	b.n	8022d3a <UART_SetConfig+0x346>
 8022ab2:	687b      	ldr	r3, [r7, #4]
 8022ab4:	681b      	ldr	r3, [r3, #0]
 8022ab6:	4a84      	ldr	r2, [pc, #528]	; (8022cc8 <UART_SetConfig+0x2d4>)
 8022ab8:	4293      	cmp	r3, r2
 8022aba:	d132      	bne.n	8022b22 <UART_SetConfig+0x12e>
 8022abc:	4b81      	ldr	r3, [pc, #516]	; (8022cc4 <UART_SetConfig+0x2d0>)
 8022abe:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8022ac2:	f003 030c 	and.w	r3, r3, #12
 8022ac6:	2b0c      	cmp	r3, #12
 8022ac8:	d828      	bhi.n	8022b1c <UART_SetConfig+0x128>
 8022aca:	a201      	add	r2, pc, #4	; (adr r2, 8022ad0 <UART_SetConfig+0xdc>)
 8022acc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8022ad0:	08022b05 	.word	0x08022b05
 8022ad4:	08022b1d 	.word	0x08022b1d
 8022ad8:	08022b1d 	.word	0x08022b1d
 8022adc:	08022b1d 	.word	0x08022b1d
 8022ae0:	08022b11 	.word	0x08022b11
 8022ae4:	08022b1d 	.word	0x08022b1d
 8022ae8:	08022b1d 	.word	0x08022b1d
 8022aec:	08022b1d 	.word	0x08022b1d
 8022af0:	08022b0b 	.word	0x08022b0b
 8022af4:	08022b1d 	.word	0x08022b1d
 8022af8:	08022b1d 	.word	0x08022b1d
 8022afc:	08022b1d 	.word	0x08022b1d
 8022b00:	08022b17 	.word	0x08022b17
 8022b04:	2300      	movs	r3, #0
 8022b06:	77fb      	strb	r3, [r7, #31]
 8022b08:	e117      	b.n	8022d3a <UART_SetConfig+0x346>
 8022b0a:	2302      	movs	r3, #2
 8022b0c:	77fb      	strb	r3, [r7, #31]
 8022b0e:	e114      	b.n	8022d3a <UART_SetConfig+0x346>
 8022b10:	2304      	movs	r3, #4
 8022b12:	77fb      	strb	r3, [r7, #31]
 8022b14:	e111      	b.n	8022d3a <UART_SetConfig+0x346>
 8022b16:	2308      	movs	r3, #8
 8022b18:	77fb      	strb	r3, [r7, #31]
 8022b1a:	e10e      	b.n	8022d3a <UART_SetConfig+0x346>
 8022b1c:	2310      	movs	r3, #16
 8022b1e:	77fb      	strb	r3, [r7, #31]
 8022b20:	e10b      	b.n	8022d3a <UART_SetConfig+0x346>
 8022b22:	687b      	ldr	r3, [r7, #4]
 8022b24:	681b      	ldr	r3, [r3, #0]
 8022b26:	4a69      	ldr	r2, [pc, #420]	; (8022ccc <UART_SetConfig+0x2d8>)
 8022b28:	4293      	cmp	r3, r2
 8022b2a:	d120      	bne.n	8022b6e <UART_SetConfig+0x17a>
 8022b2c:	4b65      	ldr	r3, [pc, #404]	; (8022cc4 <UART_SetConfig+0x2d0>)
 8022b2e:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8022b32:	f003 0330 	and.w	r3, r3, #48	; 0x30
 8022b36:	2b30      	cmp	r3, #48	; 0x30
 8022b38:	d013      	beq.n	8022b62 <UART_SetConfig+0x16e>
 8022b3a:	2b30      	cmp	r3, #48	; 0x30
 8022b3c:	d814      	bhi.n	8022b68 <UART_SetConfig+0x174>
 8022b3e:	2b20      	cmp	r3, #32
 8022b40:	d009      	beq.n	8022b56 <UART_SetConfig+0x162>
 8022b42:	2b20      	cmp	r3, #32
 8022b44:	d810      	bhi.n	8022b68 <UART_SetConfig+0x174>
 8022b46:	2b00      	cmp	r3, #0
 8022b48:	d002      	beq.n	8022b50 <UART_SetConfig+0x15c>
 8022b4a:	2b10      	cmp	r3, #16
 8022b4c:	d006      	beq.n	8022b5c <UART_SetConfig+0x168>
 8022b4e:	e00b      	b.n	8022b68 <UART_SetConfig+0x174>
 8022b50:	2300      	movs	r3, #0
 8022b52:	77fb      	strb	r3, [r7, #31]
 8022b54:	e0f1      	b.n	8022d3a <UART_SetConfig+0x346>
 8022b56:	2302      	movs	r3, #2
 8022b58:	77fb      	strb	r3, [r7, #31]
 8022b5a:	e0ee      	b.n	8022d3a <UART_SetConfig+0x346>
 8022b5c:	2304      	movs	r3, #4
 8022b5e:	77fb      	strb	r3, [r7, #31]
 8022b60:	e0eb      	b.n	8022d3a <UART_SetConfig+0x346>
 8022b62:	2308      	movs	r3, #8
 8022b64:	77fb      	strb	r3, [r7, #31]
 8022b66:	e0e8      	b.n	8022d3a <UART_SetConfig+0x346>
 8022b68:	2310      	movs	r3, #16
 8022b6a:	77fb      	strb	r3, [r7, #31]
 8022b6c:	e0e5      	b.n	8022d3a <UART_SetConfig+0x346>
 8022b6e:	687b      	ldr	r3, [r7, #4]
 8022b70:	681b      	ldr	r3, [r3, #0]
 8022b72:	4a57      	ldr	r2, [pc, #348]	; (8022cd0 <UART_SetConfig+0x2dc>)
 8022b74:	4293      	cmp	r3, r2
 8022b76:	d120      	bne.n	8022bba <UART_SetConfig+0x1c6>
 8022b78:	4b52      	ldr	r3, [pc, #328]	; (8022cc4 <UART_SetConfig+0x2d0>)
 8022b7a:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8022b7e:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
 8022b82:	2bc0      	cmp	r3, #192	; 0xc0
 8022b84:	d013      	beq.n	8022bae <UART_SetConfig+0x1ba>
 8022b86:	2bc0      	cmp	r3, #192	; 0xc0
 8022b88:	d814      	bhi.n	8022bb4 <UART_SetConfig+0x1c0>
 8022b8a:	2b80      	cmp	r3, #128	; 0x80
 8022b8c:	d009      	beq.n	8022ba2 <UART_SetConfig+0x1ae>
 8022b8e:	2b80      	cmp	r3, #128	; 0x80
 8022b90:	d810      	bhi.n	8022bb4 <UART_SetConfig+0x1c0>
 8022b92:	2b00      	cmp	r3, #0
 8022b94:	d002      	beq.n	8022b9c <UART_SetConfig+0x1a8>
 8022b96:	2b40      	cmp	r3, #64	; 0x40
 8022b98:	d006      	beq.n	8022ba8 <UART_SetConfig+0x1b4>
 8022b9a:	e00b      	b.n	8022bb4 <UART_SetConfig+0x1c0>
 8022b9c:	2300      	movs	r3, #0
 8022b9e:	77fb      	strb	r3, [r7, #31]
 8022ba0:	e0cb      	b.n	8022d3a <UART_SetConfig+0x346>
 8022ba2:	2302      	movs	r3, #2
 8022ba4:	77fb      	strb	r3, [r7, #31]
 8022ba6:	e0c8      	b.n	8022d3a <UART_SetConfig+0x346>
 8022ba8:	2304      	movs	r3, #4
 8022baa:	77fb      	strb	r3, [r7, #31]
 8022bac:	e0c5      	b.n	8022d3a <UART_SetConfig+0x346>
 8022bae:	2308      	movs	r3, #8
 8022bb0:	77fb      	strb	r3, [r7, #31]
 8022bb2:	e0c2      	b.n	8022d3a <UART_SetConfig+0x346>
 8022bb4:	2310      	movs	r3, #16
 8022bb6:	77fb      	strb	r3, [r7, #31]
 8022bb8:	e0bf      	b.n	8022d3a <UART_SetConfig+0x346>
 8022bba:	687b      	ldr	r3, [r7, #4]
 8022bbc:	681b      	ldr	r3, [r3, #0]
 8022bbe:	4a45      	ldr	r2, [pc, #276]	; (8022cd4 <UART_SetConfig+0x2e0>)
 8022bc0:	4293      	cmp	r3, r2
 8022bc2:	d125      	bne.n	8022c10 <UART_SetConfig+0x21c>
 8022bc4:	4b3f      	ldr	r3, [pc, #252]	; (8022cc4 <UART_SetConfig+0x2d0>)
 8022bc6:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8022bca:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8022bce:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8022bd2:	d017      	beq.n	8022c04 <UART_SetConfig+0x210>
 8022bd4:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8022bd8:	d817      	bhi.n	8022c0a <UART_SetConfig+0x216>
 8022bda:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8022bde:	d00b      	beq.n	8022bf8 <UART_SetConfig+0x204>
 8022be0:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8022be4:	d811      	bhi.n	8022c0a <UART_SetConfig+0x216>
 8022be6:	2b00      	cmp	r3, #0
 8022be8:	d003      	beq.n	8022bf2 <UART_SetConfig+0x1fe>
 8022bea:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8022bee:	d006      	beq.n	8022bfe <UART_SetConfig+0x20a>
 8022bf0:	e00b      	b.n	8022c0a <UART_SetConfig+0x216>
 8022bf2:	2300      	movs	r3, #0
 8022bf4:	77fb      	strb	r3, [r7, #31]
 8022bf6:	e0a0      	b.n	8022d3a <UART_SetConfig+0x346>
 8022bf8:	2302      	movs	r3, #2
 8022bfa:	77fb      	strb	r3, [r7, #31]
 8022bfc:	e09d      	b.n	8022d3a <UART_SetConfig+0x346>
 8022bfe:	2304      	movs	r3, #4
 8022c00:	77fb      	strb	r3, [r7, #31]
 8022c02:	e09a      	b.n	8022d3a <UART_SetConfig+0x346>
 8022c04:	2308      	movs	r3, #8
 8022c06:	77fb      	strb	r3, [r7, #31]
 8022c08:	e097      	b.n	8022d3a <UART_SetConfig+0x346>
 8022c0a:	2310      	movs	r3, #16
 8022c0c:	77fb      	strb	r3, [r7, #31]
 8022c0e:	e094      	b.n	8022d3a <UART_SetConfig+0x346>
 8022c10:	687b      	ldr	r3, [r7, #4]
 8022c12:	681b      	ldr	r3, [r3, #0]
 8022c14:	4a30      	ldr	r2, [pc, #192]	; (8022cd8 <UART_SetConfig+0x2e4>)
 8022c16:	4293      	cmp	r3, r2
 8022c18:	d125      	bne.n	8022c66 <UART_SetConfig+0x272>
 8022c1a:	4b2a      	ldr	r3, [pc, #168]	; (8022cc4 <UART_SetConfig+0x2d0>)
 8022c1c:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8022c20:	f403 6340 	and.w	r3, r3, #3072	; 0xc00
 8022c24:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 8022c28:	d017      	beq.n	8022c5a <UART_SetConfig+0x266>
 8022c2a:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 8022c2e:	d817      	bhi.n	8022c60 <UART_SetConfig+0x26c>
 8022c30:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8022c34:	d00b      	beq.n	8022c4e <UART_SetConfig+0x25a>
 8022c36:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8022c3a:	d811      	bhi.n	8022c60 <UART_SetConfig+0x26c>
 8022c3c:	2b00      	cmp	r3, #0
 8022c3e:	d003      	beq.n	8022c48 <UART_SetConfig+0x254>
 8022c40:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8022c44:	d006      	beq.n	8022c54 <UART_SetConfig+0x260>
 8022c46:	e00b      	b.n	8022c60 <UART_SetConfig+0x26c>
 8022c48:	2301      	movs	r3, #1
 8022c4a:	77fb      	strb	r3, [r7, #31]
 8022c4c:	e075      	b.n	8022d3a <UART_SetConfig+0x346>
 8022c4e:	2302      	movs	r3, #2
 8022c50:	77fb      	strb	r3, [r7, #31]
 8022c52:	e072      	b.n	8022d3a <UART_SetConfig+0x346>
 8022c54:	2304      	movs	r3, #4
 8022c56:	77fb      	strb	r3, [r7, #31]
 8022c58:	e06f      	b.n	8022d3a <UART_SetConfig+0x346>
 8022c5a:	2308      	movs	r3, #8
 8022c5c:	77fb      	strb	r3, [r7, #31]
 8022c5e:	e06c      	b.n	8022d3a <UART_SetConfig+0x346>
 8022c60:	2310      	movs	r3, #16
 8022c62:	77fb      	strb	r3, [r7, #31]
 8022c64:	e069      	b.n	8022d3a <UART_SetConfig+0x346>
 8022c66:	687b      	ldr	r3, [r7, #4]
 8022c68:	681b      	ldr	r3, [r3, #0]
 8022c6a:	4a1c      	ldr	r2, [pc, #112]	; (8022cdc <UART_SetConfig+0x2e8>)
 8022c6c:	4293      	cmp	r3, r2
 8022c6e:	d137      	bne.n	8022ce0 <UART_SetConfig+0x2ec>
 8022c70:	4b14      	ldr	r3, [pc, #80]	; (8022cc4 <UART_SetConfig+0x2d0>)
 8022c72:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8022c76:	f403 5340 	and.w	r3, r3, #12288	; 0x3000
 8022c7a:	f5b3 5f40 	cmp.w	r3, #12288	; 0x3000
 8022c7e:	d017      	beq.n	8022cb0 <UART_SetConfig+0x2bc>
 8022c80:	f5b3 5f40 	cmp.w	r3, #12288	; 0x3000
 8022c84:	d817      	bhi.n	8022cb6 <UART_SetConfig+0x2c2>
 8022c86:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8022c8a:	d00b      	beq.n	8022ca4 <UART_SetConfig+0x2b0>
 8022c8c:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8022c90:	d811      	bhi.n	8022cb6 <UART_SetConfig+0x2c2>
 8022c92:	2b00      	cmp	r3, #0
 8022c94:	d003      	beq.n	8022c9e <UART_SetConfig+0x2aa>
 8022c96:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8022c9a:	d006      	beq.n	8022caa <UART_SetConfig+0x2b6>
 8022c9c:	e00b      	b.n	8022cb6 <UART_SetConfig+0x2c2>
 8022c9e:	2300      	movs	r3, #0
 8022ca0:	77fb      	strb	r3, [r7, #31]
 8022ca2:	e04a      	b.n	8022d3a <UART_SetConfig+0x346>
 8022ca4:	2302      	movs	r3, #2
 8022ca6:	77fb      	strb	r3, [r7, #31]
 8022ca8:	e047      	b.n	8022d3a <UART_SetConfig+0x346>
 8022caa:	2304      	movs	r3, #4
 8022cac:	77fb      	strb	r3, [r7, #31]
 8022cae:	e044      	b.n	8022d3a <UART_SetConfig+0x346>
 8022cb0:	2308      	movs	r3, #8
 8022cb2:	77fb      	strb	r3, [r7, #31]
 8022cb4:	e041      	b.n	8022d3a <UART_SetConfig+0x346>
 8022cb6:	2310      	movs	r3, #16
 8022cb8:	77fb      	strb	r3, [r7, #31]
 8022cba:	e03e      	b.n	8022d3a <UART_SetConfig+0x346>
 8022cbc:	efff69f3 	.word	0xefff69f3
 8022cc0:	40011000 	.word	0x40011000
 8022cc4:	40023800 	.word	0x40023800
 8022cc8:	40004400 	.word	0x40004400
 8022ccc:	40004800 	.word	0x40004800
 8022cd0:	40004c00 	.word	0x40004c00
 8022cd4:	40005000 	.word	0x40005000
 8022cd8:	40011400 	.word	0x40011400
 8022cdc:	40007800 	.word	0x40007800
 8022ce0:	687b      	ldr	r3, [r7, #4]
 8022ce2:	681b      	ldr	r3, [r3, #0]
 8022ce4:	4a71      	ldr	r2, [pc, #452]	; (8022eac <UART_SetConfig+0x4b8>)
 8022ce6:	4293      	cmp	r3, r2
 8022ce8:	d125      	bne.n	8022d36 <UART_SetConfig+0x342>
 8022cea:	4b71      	ldr	r3, [pc, #452]	; (8022eb0 <UART_SetConfig+0x4bc>)
 8022cec:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8022cf0:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8022cf4:	f5b3 4f40 	cmp.w	r3, #49152	; 0xc000
 8022cf8:	d017      	beq.n	8022d2a <UART_SetConfig+0x336>
 8022cfa:	f5b3 4f40 	cmp.w	r3, #49152	; 0xc000
 8022cfe:	d817      	bhi.n	8022d30 <UART_SetConfig+0x33c>
 8022d00:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8022d04:	d00b      	beq.n	8022d1e <UART_SetConfig+0x32a>
 8022d06:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8022d0a:	d811      	bhi.n	8022d30 <UART_SetConfig+0x33c>
 8022d0c:	2b00      	cmp	r3, #0
 8022d0e:	d003      	beq.n	8022d18 <UART_SetConfig+0x324>
 8022d10:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8022d14:	d006      	beq.n	8022d24 <UART_SetConfig+0x330>
 8022d16:	e00b      	b.n	8022d30 <UART_SetConfig+0x33c>
 8022d18:	2300      	movs	r3, #0
 8022d1a:	77fb      	strb	r3, [r7, #31]
 8022d1c:	e00d      	b.n	8022d3a <UART_SetConfig+0x346>
 8022d1e:	2302      	movs	r3, #2
 8022d20:	77fb      	strb	r3, [r7, #31]
 8022d22:	e00a      	b.n	8022d3a <UART_SetConfig+0x346>
 8022d24:	2304      	movs	r3, #4
 8022d26:	77fb      	strb	r3, [r7, #31]
 8022d28:	e007      	b.n	8022d3a <UART_SetConfig+0x346>
 8022d2a:	2308      	movs	r3, #8
 8022d2c:	77fb      	strb	r3, [r7, #31]
 8022d2e:	e004      	b.n	8022d3a <UART_SetConfig+0x346>
 8022d30:	2310      	movs	r3, #16
 8022d32:	77fb      	strb	r3, [r7, #31]
 8022d34:	e001      	b.n	8022d3a <UART_SetConfig+0x346>
 8022d36:	2310      	movs	r3, #16
 8022d38:	77fb      	strb	r3, [r7, #31]

  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8022d3a:	687b      	ldr	r3, [r7, #4]
 8022d3c:	69db      	ldr	r3, [r3, #28]
 8022d3e:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8022d42:	d15b      	bne.n	8022dfc <UART_SetConfig+0x408>
  {
    switch (clocksource)
 8022d44:	7ffb      	ldrb	r3, [r7, #31]
 8022d46:	2b08      	cmp	r3, #8
 8022d48:	d827      	bhi.n	8022d9a <UART_SetConfig+0x3a6>
 8022d4a:	a201      	add	r2, pc, #4	; (adr r2, 8022d50 <UART_SetConfig+0x35c>)
 8022d4c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8022d50:	08022d75 	.word	0x08022d75
 8022d54:	08022d7d 	.word	0x08022d7d
 8022d58:	08022d85 	.word	0x08022d85
 8022d5c:	08022d9b 	.word	0x08022d9b
 8022d60:	08022d8b 	.word	0x08022d8b
 8022d64:	08022d9b 	.word	0x08022d9b
 8022d68:	08022d9b 	.word	0x08022d9b
 8022d6c:	08022d9b 	.word	0x08022d9b
 8022d70:	08022d93 	.word	0x08022d93
    {
      case UART_CLOCKSOURCE_PCLK1:
        pclk = HAL_RCC_GetPCLK1Freq();
 8022d74:	f7fe fe2c 	bl	80219d0 <HAL_RCC_GetPCLK1Freq>
 8022d78:	61b8      	str	r0, [r7, #24]
        break;
 8022d7a:	e013      	b.n	8022da4 <UART_SetConfig+0x3b0>
      case UART_CLOCKSOURCE_PCLK2:
        pclk = HAL_RCC_GetPCLK2Freq();
 8022d7c:	f7fe fe3c 	bl	80219f8 <HAL_RCC_GetPCLK2Freq>
 8022d80:	61b8      	str	r0, [r7, #24]
        break;
 8022d82:	e00f      	b.n	8022da4 <UART_SetConfig+0x3b0>
      case UART_CLOCKSOURCE_HSI:
        pclk = (uint32_t) HSI_VALUE;
 8022d84:	4b4b      	ldr	r3, [pc, #300]	; (8022eb4 <UART_SetConfig+0x4c0>)
 8022d86:	61bb      	str	r3, [r7, #24]
        break;
 8022d88:	e00c      	b.n	8022da4 <UART_SetConfig+0x3b0>
      case UART_CLOCKSOURCE_SYSCLK:
        pclk = HAL_RCC_GetSysClockFreq();
 8022d8a:	f7fe fd5f 	bl	802184c <HAL_RCC_GetSysClockFreq>
 8022d8e:	61b8      	str	r0, [r7, #24]
        break;
 8022d90:	e008      	b.n	8022da4 <UART_SetConfig+0x3b0>
      case UART_CLOCKSOURCE_LSE:
        pclk = (uint32_t) LSE_VALUE;
 8022d92:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8022d96:	61bb      	str	r3, [r7, #24]
        break;
 8022d98:	e004      	b.n	8022da4 <UART_SetConfig+0x3b0>
      default:
        pclk = 0U;
 8022d9a:	2300      	movs	r3, #0
 8022d9c:	61bb      	str	r3, [r7, #24]
        ret = HAL_ERROR;
 8022d9e:	2301      	movs	r3, #1
 8022da0:	77bb      	strb	r3, [r7, #30]
        break;
 8022da2:	bf00      	nop
    }

    /* USARTDIV must be greater than or equal to 0d16 */
    if (pclk != 0U)
 8022da4:	69bb      	ldr	r3, [r7, #24]
 8022da6:	2b00      	cmp	r3, #0
 8022da8:	d074      	beq.n	8022e94 <UART_SetConfig+0x4a0>
    {
      usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate));
 8022daa:	69bb      	ldr	r3, [r7, #24]
 8022dac:	005a      	lsls	r2, r3, #1
 8022dae:	687b      	ldr	r3, [r7, #4]
 8022db0:	685b      	ldr	r3, [r3, #4]
 8022db2:	085b      	lsrs	r3, r3, #1
 8022db4:	441a      	add	r2, r3
 8022db6:	687b      	ldr	r3, [r7, #4]
 8022db8:	685b      	ldr	r3, [r3, #4]
 8022dba:	fbb2 f3f3 	udiv	r3, r2, r3
 8022dbe:	b29b      	uxth	r3, r3
 8022dc0:	613b      	str	r3, [r7, #16]
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 8022dc2:	693b      	ldr	r3, [r7, #16]
 8022dc4:	2b0f      	cmp	r3, #15
 8022dc6:	d916      	bls.n	8022df6 <UART_SetConfig+0x402>
 8022dc8:	693b      	ldr	r3, [r7, #16]
 8022dca:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8022dce:	d212      	bcs.n	8022df6 <UART_SetConfig+0x402>
      {
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 8022dd0:	693b      	ldr	r3, [r7, #16]
 8022dd2:	b29b      	uxth	r3, r3
 8022dd4:	f023 030f 	bic.w	r3, r3, #15
 8022dd8:	81fb      	strh	r3, [r7, #14]
        brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 8022dda:	693b      	ldr	r3, [r7, #16]
 8022ddc:	085b      	lsrs	r3, r3, #1
 8022dde:	b29b      	uxth	r3, r3
 8022de0:	f003 0307 	and.w	r3, r3, #7
 8022de4:	b29a      	uxth	r2, r3
 8022de6:	89fb      	ldrh	r3, [r7, #14]
 8022de8:	4313      	orrs	r3, r2
 8022dea:	81fb      	strh	r3, [r7, #14]
        huart->Instance->BRR = brrtemp;
 8022dec:	687b      	ldr	r3, [r7, #4]
 8022dee:	681b      	ldr	r3, [r3, #0]
 8022df0:	89fa      	ldrh	r2, [r7, #14]
 8022df2:	60da      	str	r2, [r3, #12]
 8022df4:	e04e      	b.n	8022e94 <UART_SetConfig+0x4a0>
      }
      else
      {
        ret = HAL_ERROR;
 8022df6:	2301      	movs	r3, #1
 8022df8:	77bb      	strb	r3, [r7, #30]
 8022dfa:	e04b      	b.n	8022e94 <UART_SetConfig+0x4a0>
      }
    }
  }
  else
  {
    switch (clocksource)
 8022dfc:	7ffb      	ldrb	r3, [r7, #31]
 8022dfe:	2b08      	cmp	r3, #8
 8022e00:	d827      	bhi.n	8022e52 <UART_SetConfig+0x45e>
 8022e02:	a201      	add	r2, pc, #4	; (adr r2, 8022e08 <UART_SetConfig+0x414>)
 8022e04:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8022e08:	08022e2d 	.word	0x08022e2d
 8022e0c:	08022e35 	.word	0x08022e35
 8022e10:	08022e3d 	.word	0x08022e3d
 8022e14:	08022e53 	.word	0x08022e53
 8022e18:	08022e43 	.word	0x08022e43
 8022e1c:	08022e53 	.word	0x08022e53
 8022e20:	08022e53 	.word	0x08022e53
 8022e24:	08022e53 	.word	0x08022e53
 8022e28:	08022e4b 	.word	0x08022e4b
    {
      case UART_CLOCKSOURCE_PCLK1:
        pclk = HAL_RCC_GetPCLK1Freq();
 8022e2c:	f7fe fdd0 	bl	80219d0 <HAL_RCC_GetPCLK1Freq>
 8022e30:	61b8      	str	r0, [r7, #24]
        break;
 8022e32:	e013      	b.n	8022e5c <UART_SetConfig+0x468>
      case UART_CLOCKSOURCE_PCLK2:
        pclk = HAL_RCC_GetPCLK2Freq();
 8022e34:	f7fe fde0 	bl	80219f8 <HAL_RCC_GetPCLK2Freq>
 8022e38:	61b8      	str	r0, [r7, #24]
        break;
 8022e3a:	e00f      	b.n	8022e5c <UART_SetConfig+0x468>
      case UART_CLOCKSOURCE_HSI:
        pclk = (uint32_t) HSI_VALUE;
 8022e3c:	4b1d      	ldr	r3, [pc, #116]	; (8022eb4 <UART_SetConfig+0x4c0>)
 8022e3e:	61bb      	str	r3, [r7, #24]
        break;
 8022e40:	e00c      	b.n	8022e5c <UART_SetConfig+0x468>
      case UART_CLOCKSOURCE_SYSCLK:
        pclk = HAL_RCC_GetSysClockFreq();
 8022e42:	f7fe fd03 	bl	802184c <HAL_RCC_GetSysClockFreq>
 8022e46:	61b8      	str	r0, [r7, #24]
        break;
 8022e48:	e008      	b.n	8022e5c <UART_SetConfig+0x468>
      case UART_CLOCKSOURCE_LSE:
        pclk = (uint32_t) LSE_VALUE;
 8022e4a:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8022e4e:	61bb      	str	r3, [r7, #24]
        break;
 8022e50:	e004      	b.n	8022e5c <UART_SetConfig+0x468>
      default:
        pclk = 0U;
 8022e52:	2300      	movs	r3, #0
 8022e54:	61bb      	str	r3, [r7, #24]
        ret = HAL_ERROR;
 8022e56:	2301      	movs	r3, #1
 8022e58:	77bb      	strb	r3, [r7, #30]
        break;
 8022e5a:	bf00      	nop
    }

    if (pclk != 0U)
 8022e5c:	69bb      	ldr	r3, [r7, #24]
 8022e5e:	2b00      	cmp	r3, #0
 8022e60:	d018      	beq.n	8022e94 <UART_SetConfig+0x4a0>
    {
      /* USARTDIV must be greater than or equal to 0d16 */
      usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate));
 8022e62:	687b      	ldr	r3, [r7, #4]
 8022e64:	685b      	ldr	r3, [r3, #4]
 8022e66:	085a      	lsrs	r2, r3, #1
 8022e68:	69bb      	ldr	r3, [r7, #24]
 8022e6a:	441a      	add	r2, r3
 8022e6c:	687b      	ldr	r3, [r7, #4]
 8022e6e:	685b      	ldr	r3, [r3, #4]
 8022e70:	fbb2 f3f3 	udiv	r3, r2, r3
 8022e74:	b29b      	uxth	r3, r3
 8022e76:	613b      	str	r3, [r7, #16]
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 8022e78:	693b      	ldr	r3, [r7, #16]
 8022e7a:	2b0f      	cmp	r3, #15
 8022e7c:	d908      	bls.n	8022e90 <UART_SetConfig+0x49c>
 8022e7e:	693b      	ldr	r3, [r7, #16]
 8022e80:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8022e84:	d204      	bcs.n	8022e90 <UART_SetConfig+0x49c>
      {
        huart->Instance->BRR = usartdiv;
 8022e86:	687b      	ldr	r3, [r7, #4]
 8022e88:	681b      	ldr	r3, [r3, #0]
 8022e8a:	693a      	ldr	r2, [r7, #16]
 8022e8c:	60da      	str	r2, [r3, #12]
 8022e8e:	e001      	b.n	8022e94 <UART_SetConfig+0x4a0>
      }
      else
      {
        ret = HAL_ERROR;
 8022e90:	2301      	movs	r3, #1
 8022e92:	77bb      	strb	r3, [r7, #30]
    }
  }


  /* Clear ISR function pointers */
  huart->RxISR = NULL;
 8022e94:	687b      	ldr	r3, [r7, #4]
 8022e96:	2200      	movs	r2, #0
 8022e98:	665a      	str	r2, [r3, #100]	; 0x64
  huart->TxISR = NULL;
 8022e9a:	687b      	ldr	r3, [r7, #4]
 8022e9c:	2200      	movs	r2, #0
 8022e9e:	669a      	str	r2, [r3, #104]	; 0x68

  return ret;
 8022ea0:	7fbb      	ldrb	r3, [r7, #30]
}
 8022ea2:	4618      	mov	r0, r3
 8022ea4:	3720      	adds	r7, #32
 8022ea6:	46bd      	mov	sp, r7
 8022ea8:	bd80      	pop	{r7, pc}
 8022eaa:	bf00      	nop
 8022eac:	40007c00 	.word	0x40007c00
 8022eb0:	40023800 	.word	0x40023800
 8022eb4:	00f42400 	.word	0x00f42400

08022eb8 <UART_AdvFeatureConfig>:
  * @brief Configure the UART peripheral advanced features.
  * @param huart UART handle.
  * @retval None
  */
void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
{
 8022eb8:	b480      	push	{r7}
 8022eba:	b083      	sub	sp, #12
 8022ebc:	af00      	add	r7, sp, #0
 8022ebe:	6078      	str	r0, [r7, #4]
  /* Check whether the set of advanced features to configure is properly set */
  assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));

  /* if required, configure TX pin active level inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 8022ec0:	687b      	ldr	r3, [r7, #4]
 8022ec2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8022ec4:	f003 0301 	and.w	r3, r3, #1
 8022ec8:	2b00      	cmp	r3, #0
 8022eca:	d00a      	beq.n	8022ee2 <UART_AdvFeatureConfig+0x2a>
  {
    assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 8022ecc:	687b      	ldr	r3, [r7, #4]
 8022ece:	681b      	ldr	r3, [r3, #0]
 8022ed0:	685b      	ldr	r3, [r3, #4]
 8022ed2:	f423 3100 	bic.w	r1, r3, #131072	; 0x20000
 8022ed6:	687b      	ldr	r3, [r7, #4]
 8022ed8:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8022eda:	687b      	ldr	r3, [r7, #4]
 8022edc:	681b      	ldr	r3, [r3, #0]
 8022ede:	430a      	orrs	r2, r1
 8022ee0:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure RX pin active level inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
 8022ee2:	687b      	ldr	r3, [r7, #4]
 8022ee4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8022ee6:	f003 0302 	and.w	r3, r3, #2
 8022eea:	2b00      	cmp	r3, #0
 8022eec:	d00a      	beq.n	8022f04 <UART_AdvFeatureConfig+0x4c>
  {
    assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 8022eee:	687b      	ldr	r3, [r7, #4]
 8022ef0:	681b      	ldr	r3, [r3, #0]
 8022ef2:	685b      	ldr	r3, [r3, #4]
 8022ef4:	f423 3180 	bic.w	r1, r3, #65536	; 0x10000
 8022ef8:	687b      	ldr	r3, [r7, #4]
 8022efa:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8022efc:	687b      	ldr	r3, [r7, #4]
 8022efe:	681b      	ldr	r3, [r3, #0]
 8022f00:	430a      	orrs	r2, r1
 8022f02:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure data inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
 8022f04:	687b      	ldr	r3, [r7, #4]
 8022f06:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8022f08:	f003 0304 	and.w	r3, r3, #4
 8022f0c:	2b00      	cmp	r3, #0
 8022f0e:	d00a      	beq.n	8022f26 <UART_AdvFeatureConfig+0x6e>
  {
    assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 8022f10:	687b      	ldr	r3, [r7, #4]
 8022f12:	681b      	ldr	r3, [r3, #0]
 8022f14:	685b      	ldr	r3, [r3, #4]
 8022f16:	f423 2180 	bic.w	r1, r3, #262144	; 0x40000
 8022f1a:	687b      	ldr	r3, [r7, #4]
 8022f1c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8022f1e:	687b      	ldr	r3, [r7, #4]
 8022f20:	681b      	ldr	r3, [r3, #0]
 8022f22:	430a      	orrs	r2, r1
 8022f24:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure RX/TX pins swap */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
 8022f26:	687b      	ldr	r3, [r7, #4]
 8022f28:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8022f2a:	f003 0308 	and.w	r3, r3, #8
 8022f2e:	2b00      	cmp	r3, #0
 8022f30:	d00a      	beq.n	8022f48 <UART_AdvFeatureConfig+0x90>
  {
    assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 8022f32:	687b      	ldr	r3, [r7, #4]
 8022f34:	681b      	ldr	r3, [r3, #0]
 8022f36:	685b      	ldr	r3, [r3, #4]
 8022f38:	f423 4100 	bic.w	r1, r3, #32768	; 0x8000
 8022f3c:	687b      	ldr	r3, [r7, #4]
 8022f3e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8022f40:	687b      	ldr	r3, [r7, #4]
 8022f42:	681b      	ldr	r3, [r3, #0]
 8022f44:	430a      	orrs	r2, r1
 8022f46:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure RX overrun detection disabling */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
 8022f48:	687b      	ldr	r3, [r7, #4]
 8022f4a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8022f4c:	f003 0310 	and.w	r3, r3, #16
 8022f50:	2b00      	cmp	r3, #0
 8022f52:	d00a      	beq.n	8022f6a <UART_AdvFeatureConfig+0xb2>
  {
    assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
    MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 8022f54:	687b      	ldr	r3, [r7, #4]
 8022f56:	681b      	ldr	r3, [r3, #0]
 8022f58:	689b      	ldr	r3, [r3, #8]
 8022f5a:	f423 5180 	bic.w	r1, r3, #4096	; 0x1000
 8022f5e:	687b      	ldr	r3, [r7, #4]
 8022f60:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8022f62:	687b      	ldr	r3, [r7, #4]
 8022f64:	681b      	ldr	r3, [r3, #0]
 8022f66:	430a      	orrs	r2, r1
 8022f68:	609a      	str	r2, [r3, #8]
  }

  /* if required, configure DMA disabling on reception error */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
 8022f6a:	687b      	ldr	r3, [r7, #4]
 8022f6c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8022f6e:	f003 0320 	and.w	r3, r3, #32
 8022f72:	2b00      	cmp	r3, #0
 8022f74:	d00a      	beq.n	8022f8c <UART_AdvFeatureConfig+0xd4>
  {
    assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
    MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 8022f76:	687b      	ldr	r3, [r7, #4]
 8022f78:	681b      	ldr	r3, [r3, #0]
 8022f7a:	689b      	ldr	r3, [r3, #8]
 8022f7c:	f423 5100 	bic.w	r1, r3, #8192	; 0x2000
 8022f80:	687b      	ldr	r3, [r7, #4]
 8022f82:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8022f84:	687b      	ldr	r3, [r7, #4]
 8022f86:	681b      	ldr	r3, [r3, #0]
 8022f88:	430a      	orrs	r2, r1
 8022f8a:	609a      	str	r2, [r3, #8]
  }

  /* if required, configure auto Baud rate detection scheme */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
 8022f8c:	687b      	ldr	r3, [r7, #4]
 8022f8e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8022f90:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8022f94:	2b00      	cmp	r3, #0
 8022f96:	d01a      	beq.n	8022fce <UART_AdvFeatureConfig+0x116>
  {
    assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
    assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 8022f98:	687b      	ldr	r3, [r7, #4]
 8022f9a:	681b      	ldr	r3, [r3, #0]
 8022f9c:	685b      	ldr	r3, [r3, #4]
 8022f9e:	f423 1180 	bic.w	r1, r3, #1048576	; 0x100000
 8022fa2:	687b      	ldr	r3, [r7, #4]
 8022fa4:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8022fa6:	687b      	ldr	r3, [r7, #4]
 8022fa8:	681b      	ldr	r3, [r3, #0]
 8022faa:	430a      	orrs	r2, r1
 8022fac:	605a      	str	r2, [r3, #4]
    /* set auto Baudrate detection parameters if detection is enabled */
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 8022fae:	687b      	ldr	r3, [r7, #4]
 8022fb0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8022fb2:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8022fb6:	d10a      	bne.n	8022fce <UART_AdvFeatureConfig+0x116>
    {
      assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
      MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 8022fb8:	687b      	ldr	r3, [r7, #4]
 8022fba:	681b      	ldr	r3, [r3, #0]
 8022fbc:	685b      	ldr	r3, [r3, #4]
 8022fbe:	f423 01c0 	bic.w	r1, r3, #6291456	; 0x600000
 8022fc2:	687b      	ldr	r3, [r7, #4]
 8022fc4:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8022fc6:	687b      	ldr	r3, [r7, #4]
 8022fc8:	681b      	ldr	r3, [r3, #0]
 8022fca:	430a      	orrs	r2, r1
 8022fcc:	605a      	str	r2, [r3, #4]
    }
  }

  /* if required, configure MSB first on communication line */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
 8022fce:	687b      	ldr	r3, [r7, #4]
 8022fd0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8022fd2:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8022fd6:	2b00      	cmp	r3, #0
 8022fd8:	d00a      	beq.n	8022ff0 <UART_AdvFeatureConfig+0x138>
  {
    assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 8022fda:	687b      	ldr	r3, [r7, #4]
 8022fdc:	681b      	ldr	r3, [r3, #0]
 8022fde:	685b      	ldr	r3, [r3, #4]
 8022fe0:	f423 2100 	bic.w	r1, r3, #524288	; 0x80000
 8022fe4:	687b      	ldr	r3, [r7, #4]
 8022fe6:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 8022fe8:	687b      	ldr	r3, [r7, #4]
 8022fea:	681b      	ldr	r3, [r3, #0]
 8022fec:	430a      	orrs	r2, r1
 8022fee:	605a      	str	r2, [r3, #4]
  }
}
 8022ff0:	bf00      	nop
 8022ff2:	370c      	adds	r7, #12
 8022ff4:	46bd      	mov	sp, r7
 8022ff6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8022ffa:	4770      	bx	lr

08022ffc <UART_CheckIdleState>:
  * @brief Check the UART Idle State.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
{
 8022ffc:	b580      	push	{r7, lr}
 8022ffe:	b086      	sub	sp, #24
 8023000:	af02      	add	r7, sp, #8
 8023002:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;

  /* Initialize the UART ErrorCode */
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8023004:	687b      	ldr	r3, [r7, #4]
 8023006:	2200      	movs	r2, #0
 8023008:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80

  /* Init tickstart for timeout management */
  tickstart = HAL_GetTick();
 802300c:	f7fd fcbe 	bl	802098c <HAL_GetTick>
 8023010:	60f8      	str	r0, [r7, #12]

  /* Check if the Transmitter is enabled */
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 8023012:	687b      	ldr	r3, [r7, #4]
 8023014:	681b      	ldr	r3, [r3, #0]
 8023016:	681b      	ldr	r3, [r3, #0]
 8023018:	f003 0308 	and.w	r3, r3, #8
 802301c:	2b08      	cmp	r3, #8
 802301e:	d10e      	bne.n	802303e <UART_CheckIdleState+0x42>
  {
    /* Wait until TEACK flag is set */
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
 8023020:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 8023024:	9300      	str	r3, [sp, #0]
 8023026:	68fb      	ldr	r3, [r7, #12]
 8023028:	2200      	movs	r2, #0
 802302a:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
 802302e:	6878      	ldr	r0, [r7, #4]
 8023030:	f000 f817 	bl	8023062 <UART_WaitOnFlagUntilTimeout>
 8023034:	4603      	mov	r3, r0
 8023036:	2b00      	cmp	r3, #0
 8023038:	d001      	beq.n	802303e <UART_CheckIdleState+0x42>
    {
      /* Timeout occurred */
      return HAL_TIMEOUT;
 802303a:	2303      	movs	r3, #3
 802303c:	e00d      	b.n	802305a <UART_CheckIdleState+0x5e>
    }
  }
#endif

  /* Initialize the UART State */
  huart->gState = HAL_UART_STATE_READY;
 802303e:	687b      	ldr	r3, [r7, #4]
 8023040:	2220      	movs	r2, #32
 8023042:	679a      	str	r2, [r3, #120]	; 0x78
  huart->RxState = HAL_UART_STATE_READY;
 8023044:	687b      	ldr	r3, [r7, #4]
 8023046:	2220      	movs	r2, #32
 8023048:	67da      	str	r2, [r3, #124]	; 0x7c
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 802304a:	687b      	ldr	r3, [r7, #4]
 802304c:	2200      	movs	r2, #0
 802304e:	661a      	str	r2, [r3, #96]	; 0x60

  __HAL_UNLOCK(huart);
 8023050:	687b      	ldr	r3, [r7, #4]
 8023052:	2200      	movs	r2, #0
 8023054:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

  return HAL_OK;
 8023058:	2300      	movs	r3, #0
}
 802305a:	4618      	mov	r0, r3
 802305c:	3710      	adds	r7, #16
 802305e:	46bd      	mov	sp, r7
 8023060:	bd80      	pop	{r7, pc}

08023062 <UART_WaitOnFlagUntilTimeout>:
  * @param Timeout   Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus Status,
                                              uint32_t Tickstart, uint32_t Timeout)
{
 8023062:	b580      	push	{r7, lr}
 8023064:	b084      	sub	sp, #16
 8023066:	af00      	add	r7, sp, #0
 8023068:	60f8      	str	r0, [r7, #12]
 802306a:	60b9      	str	r1, [r7, #8]
 802306c:	603b      	str	r3, [r7, #0]
 802306e:	4613      	mov	r3, r2
 8023070:	71fb      	strb	r3, [r7, #7]
  /* Wait until flag is set */
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 8023072:	e05e      	b.n	8023132 <UART_WaitOnFlagUntilTimeout+0xd0>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8023074:	69bb      	ldr	r3, [r7, #24]
 8023076:	f1b3 3fff 	cmp.w	r3, #4294967295
 802307a:	d05a      	beq.n	8023132 <UART_WaitOnFlagUntilTimeout+0xd0>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 802307c:	f7fd fc86 	bl	802098c <HAL_GetTick>
 8023080:	4602      	mov	r2, r0
 8023082:	683b      	ldr	r3, [r7, #0]
 8023084:	1ad3      	subs	r3, r2, r3
 8023086:	69ba      	ldr	r2, [r7, #24]
 8023088:	429a      	cmp	r2, r3
 802308a:	d302      	bcc.n	8023092 <UART_WaitOnFlagUntilTimeout+0x30>
 802308c:	69bb      	ldr	r3, [r7, #24]
 802308e:	2b00      	cmp	r3, #0
 8023090:	d11b      	bne.n	80230ca <UART_WaitOnFlagUntilTimeout+0x68>
      {
        /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error)
           interrupts for the interrupt process */
        CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 8023092:	68fb      	ldr	r3, [r7, #12]
 8023094:	681b      	ldr	r3, [r3, #0]
 8023096:	681a      	ldr	r2, [r3, #0]
 8023098:	68fb      	ldr	r3, [r7, #12]
 802309a:	681b      	ldr	r3, [r3, #0]
 802309c:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 80230a0:	601a      	str	r2, [r3, #0]
        CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 80230a2:	68fb      	ldr	r3, [r7, #12]
 80230a4:	681b      	ldr	r3, [r3, #0]
 80230a6:	689a      	ldr	r2, [r3, #8]
 80230a8:	68fb      	ldr	r3, [r7, #12]
 80230aa:	681b      	ldr	r3, [r3, #0]
 80230ac:	f022 0201 	bic.w	r2, r2, #1
 80230b0:	609a      	str	r2, [r3, #8]

        huart->gState = HAL_UART_STATE_READY;
 80230b2:	68fb      	ldr	r3, [r7, #12]
 80230b4:	2220      	movs	r2, #32
 80230b6:	679a      	str	r2, [r3, #120]	; 0x78
        huart->RxState = HAL_UART_STATE_READY;
 80230b8:	68fb      	ldr	r3, [r7, #12]
 80230ba:	2220      	movs	r2, #32
 80230bc:	67da      	str	r2, [r3, #124]	; 0x7c

        __HAL_UNLOCK(huart);
 80230be:	68fb      	ldr	r3, [r7, #12]
 80230c0:	2200      	movs	r2, #0
 80230c2:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

        return HAL_TIMEOUT;
 80230c6:	2303      	movs	r3, #3
 80230c8:	e043      	b.n	8023152 <UART_WaitOnFlagUntilTimeout+0xf0>
      }

      if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
 80230ca:	68fb      	ldr	r3, [r7, #12]
 80230cc:	681b      	ldr	r3, [r3, #0]
 80230ce:	681b      	ldr	r3, [r3, #0]
 80230d0:	f003 0304 	and.w	r3, r3, #4
 80230d4:	2b00      	cmp	r3, #0
 80230d6:	d02c      	beq.n	8023132 <UART_WaitOnFlagUntilTimeout+0xd0>
      {
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
 80230d8:	68fb      	ldr	r3, [r7, #12]
 80230da:	681b      	ldr	r3, [r3, #0]
 80230dc:	69db      	ldr	r3, [r3, #28]
 80230de:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 80230e2:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 80230e6:	d124      	bne.n	8023132 <UART_WaitOnFlagUntilTimeout+0xd0>
        {
          /* Clear Receiver Timeout flag*/
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 80230e8:	68fb      	ldr	r3, [r7, #12]
 80230ea:	681b      	ldr	r3, [r3, #0]
 80230ec:	f44f 6200 	mov.w	r2, #2048	; 0x800
 80230f0:	621a      	str	r2, [r3, #32]

          /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error)
             interrupts for the interrupt process */
          CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 80230f2:	68fb      	ldr	r3, [r7, #12]
 80230f4:	681b      	ldr	r3, [r3, #0]
 80230f6:	681a      	ldr	r2, [r3, #0]
 80230f8:	68fb      	ldr	r3, [r7, #12]
 80230fa:	681b      	ldr	r3, [r3, #0]
 80230fc:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 8023100:	601a      	str	r2, [r3, #0]
          CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8023102:	68fb      	ldr	r3, [r7, #12]
 8023104:	681b      	ldr	r3, [r3, #0]
 8023106:	689a      	ldr	r2, [r3, #8]
 8023108:	68fb      	ldr	r3, [r7, #12]
 802310a:	681b      	ldr	r3, [r3, #0]
 802310c:	f022 0201 	bic.w	r2, r2, #1
 8023110:	609a      	str	r2, [r3, #8]

          huart->gState = HAL_UART_STATE_READY;
 8023112:	68fb      	ldr	r3, [r7, #12]
 8023114:	2220      	movs	r2, #32
 8023116:	679a      	str	r2, [r3, #120]	; 0x78
          huart->RxState = HAL_UART_STATE_READY;
 8023118:	68fb      	ldr	r3, [r7, #12]
 802311a:	2220      	movs	r2, #32
 802311c:	67da      	str	r2, [r3, #124]	; 0x7c
          huart->ErrorCode = HAL_UART_ERROR_RTO;
 802311e:	68fb      	ldr	r3, [r7, #12]
 8023120:	2220      	movs	r2, #32
 8023122:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80

          /* Process Unlocked */
          __HAL_UNLOCK(huart);
 8023126:	68fb      	ldr	r3, [r7, #12]
 8023128:	2200      	movs	r2, #0
 802312a:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

          return HAL_TIMEOUT;
 802312e:	2303      	movs	r3, #3
 8023130:	e00f      	b.n	8023152 <UART_WaitOnFlagUntilTimeout+0xf0>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 8023132:	68fb      	ldr	r3, [r7, #12]
 8023134:	681b      	ldr	r3, [r3, #0]
 8023136:	69da      	ldr	r2, [r3, #28]
 8023138:	68bb      	ldr	r3, [r7, #8]
 802313a:	4013      	ands	r3, r2
 802313c:	68ba      	ldr	r2, [r7, #8]
 802313e:	429a      	cmp	r2, r3
 8023140:	bf0c      	ite	eq
 8023142:	2301      	moveq	r3, #1
 8023144:	2300      	movne	r3, #0
 8023146:	b2db      	uxtb	r3, r3
 8023148:	461a      	mov	r2, r3
 802314a:	79fb      	ldrb	r3, [r7, #7]
 802314c:	429a      	cmp	r2, r3
 802314e:	d091      	beq.n	8023074 <UART_WaitOnFlagUntilTimeout+0x12>
        }
      }
    }
  }
  return HAL_OK;
 8023150:	2300      	movs	r3, #0
}
 8023152:	4618      	mov	r0, r3
 8023154:	3710      	adds	r7, #16
 8023156:	46bd      	mov	sp, r7
 8023158:	bd80      	pop	{r7, pc}
	...

0802315c <UART_Start_Receive_IT>:
  * @param  pData Pointer to data buffer (u8 or u16 data elements).
  * @param  Size  Amount of data elements (u8 or u16) to be received.
  * @retval HAL status
  */
HAL_StatusTypeDef UART_Start_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
{
 802315c:	b480      	push	{r7}
 802315e:	b085      	sub	sp, #20
 8023160:	af00      	add	r7, sp, #0
 8023162:	60f8      	str	r0, [r7, #12]
 8023164:	60b9      	str	r1, [r7, #8]
 8023166:	4613      	mov	r3, r2
 8023168:	80fb      	strh	r3, [r7, #6]
  huart->pRxBuffPtr  = pData;
 802316a:	68fb      	ldr	r3, [r7, #12]
 802316c:	68ba      	ldr	r2, [r7, #8]
 802316e:	655a      	str	r2, [r3, #84]	; 0x54
  huart->RxXferSize  = Size;
 8023170:	68fb      	ldr	r3, [r7, #12]
 8023172:	88fa      	ldrh	r2, [r7, #6]
 8023174:	f8a3 2058 	strh.w	r2, [r3, #88]	; 0x58
  huart->RxXferCount = Size;
 8023178:	68fb      	ldr	r3, [r7, #12]
 802317a:	88fa      	ldrh	r2, [r7, #6]
 802317c:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a
  huart->RxISR       = NULL;
 8023180:	68fb      	ldr	r3, [r7, #12]
 8023182:	2200      	movs	r2, #0
 8023184:	665a      	str	r2, [r3, #100]	; 0x64

  /* Computation of UART mask to apply to RDR register */
  UART_MASK_COMPUTATION(huart);
 8023186:	68fb      	ldr	r3, [r7, #12]
 8023188:	689b      	ldr	r3, [r3, #8]
 802318a:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 802318e:	d10e      	bne.n	80231ae <UART_Start_Receive_IT+0x52>
 8023190:	68fb      	ldr	r3, [r7, #12]
 8023192:	691b      	ldr	r3, [r3, #16]
 8023194:	2b00      	cmp	r3, #0
 8023196:	d105      	bne.n	80231a4 <UART_Start_Receive_IT+0x48>
 8023198:	68fb      	ldr	r3, [r7, #12]
 802319a:	f240 12ff 	movw	r2, #511	; 0x1ff
 802319e:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 80231a2:	e02d      	b.n	8023200 <UART_Start_Receive_IT+0xa4>
 80231a4:	68fb      	ldr	r3, [r7, #12]
 80231a6:	22ff      	movs	r2, #255	; 0xff
 80231a8:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 80231ac:	e028      	b.n	8023200 <UART_Start_Receive_IT+0xa4>
 80231ae:	68fb      	ldr	r3, [r7, #12]
 80231b0:	689b      	ldr	r3, [r3, #8]
 80231b2:	2b00      	cmp	r3, #0
 80231b4:	d10d      	bne.n	80231d2 <UART_Start_Receive_IT+0x76>
 80231b6:	68fb      	ldr	r3, [r7, #12]
 80231b8:	691b      	ldr	r3, [r3, #16]
 80231ba:	2b00      	cmp	r3, #0
 80231bc:	d104      	bne.n	80231c8 <UART_Start_Receive_IT+0x6c>
 80231be:	68fb      	ldr	r3, [r7, #12]
 80231c0:	22ff      	movs	r2, #255	; 0xff
 80231c2:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 80231c6:	e01b      	b.n	8023200 <UART_Start_Receive_IT+0xa4>
 80231c8:	68fb      	ldr	r3, [r7, #12]
 80231ca:	227f      	movs	r2, #127	; 0x7f
 80231cc:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 80231d0:	e016      	b.n	8023200 <UART_Start_Receive_IT+0xa4>
 80231d2:	68fb      	ldr	r3, [r7, #12]
 80231d4:	689b      	ldr	r3, [r3, #8]
 80231d6:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 80231da:	d10d      	bne.n	80231f8 <UART_Start_Receive_IT+0x9c>
 80231dc:	68fb      	ldr	r3, [r7, #12]
 80231de:	691b      	ldr	r3, [r3, #16]
 80231e0:	2b00      	cmp	r3, #0
 80231e2:	d104      	bne.n	80231ee <UART_Start_Receive_IT+0x92>
 80231e4:	68fb      	ldr	r3, [r7, #12]
 80231e6:	227f      	movs	r2, #127	; 0x7f
 80231e8:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 80231ec:	e008      	b.n	8023200 <UART_Start_Receive_IT+0xa4>
 80231ee:	68fb      	ldr	r3, [r7, #12]
 80231f0:	223f      	movs	r2, #63	; 0x3f
 80231f2:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 80231f6:	e003      	b.n	8023200 <UART_Start_Receive_IT+0xa4>
 80231f8:	68fb      	ldr	r3, [r7, #12]
 80231fa:	2200      	movs	r2, #0
 80231fc:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c

  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8023200:	68fb      	ldr	r3, [r7, #12]
 8023202:	2200      	movs	r2, #0
 8023204:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
  huart->RxState = HAL_UART_STATE_BUSY_RX;
 8023208:	68fb      	ldr	r3, [r7, #12]
 802320a:	2222      	movs	r2, #34	; 0x22
 802320c:	67da      	str	r2, [r3, #124]	; 0x7c

  /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
  SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 802320e:	68fb      	ldr	r3, [r7, #12]
 8023210:	681b      	ldr	r3, [r3, #0]
 8023212:	689a      	ldr	r2, [r3, #8]
 8023214:	68fb      	ldr	r3, [r7, #12]
 8023216:	681b      	ldr	r3, [r3, #0]
 8023218:	f042 0201 	orr.w	r2, r2, #1
 802321c:	609a      	str	r2, [r3, #8]

  /* Set the Rx ISR function pointer according to the data word length */
  if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 802321e:	68fb      	ldr	r3, [r7, #12]
 8023220:	689b      	ldr	r3, [r3, #8]
 8023222:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8023226:	d107      	bne.n	8023238 <UART_Start_Receive_IT+0xdc>
 8023228:	68fb      	ldr	r3, [r7, #12]
 802322a:	691b      	ldr	r3, [r3, #16]
 802322c:	2b00      	cmp	r3, #0
 802322e:	d103      	bne.n	8023238 <UART_Start_Receive_IT+0xdc>
  {
    huart->RxISR = UART_RxISR_16BIT;
 8023230:	68fb      	ldr	r3, [r7, #12]
 8023232:	4a0c      	ldr	r2, [pc, #48]	; (8023264 <UART_Start_Receive_IT+0x108>)
 8023234:	665a      	str	r2, [r3, #100]	; 0x64
 8023236:	e002      	b.n	802323e <UART_Start_Receive_IT+0xe2>
  }
  else
  {
    huart->RxISR = UART_RxISR_8BIT;
 8023238:	68fb      	ldr	r3, [r7, #12]
 802323a:	4a0b      	ldr	r2, [pc, #44]	; (8023268 <UART_Start_Receive_IT+0x10c>)
 802323c:	665a      	str	r2, [r3, #100]	; 0x64
  }

  __HAL_UNLOCK(huart);
 802323e:	68fb      	ldr	r3, [r7, #12]
 8023240:	2200      	movs	r2, #0
 8023242:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

  /* Enable the UART Parity Error interrupt and Data Register Not Empty interrupt */
  SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE);
 8023246:	68fb      	ldr	r3, [r7, #12]
 8023248:	681b      	ldr	r3, [r3, #0]
 802324a:	681a      	ldr	r2, [r3, #0]
 802324c:	68fb      	ldr	r3, [r7, #12]
 802324e:	681b      	ldr	r3, [r3, #0]
 8023250:	f442 7290 	orr.w	r2, r2, #288	; 0x120
 8023254:	601a      	str	r2, [r3, #0]
  return HAL_OK;
 8023256:	2300      	movs	r3, #0
}
 8023258:	4618      	mov	r0, r3
 802325a:	3714      	adds	r7, #20
 802325c:	46bd      	mov	sp, r7
 802325e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8023262:	4770      	bx	lr
 8023264:	080233fd 	.word	0x080233fd
 8023268:	08023329 	.word	0x08023329

0802326c <UART_EndRxTransfer>:
  * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception completion).
  * @param  huart UART handle.
  * @retval None
  */
static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
{
 802326c:	b480      	push	{r7}
 802326e:	b083      	sub	sp, #12
 8023270:	af00      	add	r7, sp, #0
 8023272:	6078      	str	r0, [r7, #4]
  /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
  CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 8023274:	687b      	ldr	r3, [r7, #4]
 8023276:	681b      	ldr	r3, [r3, #0]
 8023278:	681a      	ldr	r2, [r3, #0]
 802327a:	687b      	ldr	r3, [r7, #4]
 802327c:	681b      	ldr	r3, [r3, #0]
 802327e:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 8023282:	601a      	str	r2, [r3, #0]
  CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8023284:	687b      	ldr	r3, [r7, #4]
 8023286:	681b      	ldr	r3, [r3, #0]
 8023288:	689a      	ldr	r2, [r3, #8]
 802328a:	687b      	ldr	r3, [r7, #4]
 802328c:	681b      	ldr	r3, [r3, #0]
 802328e:	f022 0201 	bic.w	r2, r2, #1
 8023292:	609a      	str	r2, [r3, #8]

  /* In case of reception waiting for IDLE event, disable also the IDLE IE interrupt source */
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 8023294:	687b      	ldr	r3, [r7, #4]
 8023296:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8023298:	2b01      	cmp	r3, #1
 802329a:	d107      	bne.n	80232ac <UART_EndRxTransfer+0x40>
  {
    CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 802329c:	687b      	ldr	r3, [r7, #4]
 802329e:	681b      	ldr	r3, [r3, #0]
 80232a0:	681a      	ldr	r2, [r3, #0]
 80232a2:	687b      	ldr	r3, [r7, #4]
 80232a4:	681b      	ldr	r3, [r3, #0]
 80232a6:	f022 0210 	bic.w	r2, r2, #16
 80232aa:	601a      	str	r2, [r3, #0]
  }

  /* At end of Rx process, restore huart->RxState to Ready */
  huart->RxState = HAL_UART_STATE_READY;
 80232ac:	687b      	ldr	r3, [r7, #4]
 80232ae:	2220      	movs	r2, #32
 80232b0:	67da      	str	r2, [r3, #124]	; 0x7c
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 80232b2:	687b      	ldr	r3, [r7, #4]
 80232b4:	2200      	movs	r2, #0
 80232b6:	661a      	str	r2, [r3, #96]	; 0x60

  /* Reset RxIsr function pointer */
  huart->RxISR = NULL;
 80232b8:	687b      	ldr	r3, [r7, #4]
 80232ba:	2200      	movs	r2, #0
 80232bc:	665a      	str	r2, [r3, #100]	; 0x64
}
 80232be:	bf00      	nop
 80232c0:	370c      	adds	r7, #12
 80232c2:	46bd      	mov	sp, r7
 80232c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80232c8:	4770      	bx	lr

080232ca <UART_DMAAbortOnError>:
  *         (To be called at end of DMA Abort procedure following error occurrence).
  * @param  hdma DMA handle.
  * @retval None
  */
static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
{
 80232ca:	b580      	push	{r7, lr}
 80232cc:	b084      	sub	sp, #16
 80232ce:	af00      	add	r7, sp, #0
 80232d0:	6078      	str	r0, [r7, #4]
  UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 80232d2:	687b      	ldr	r3, [r7, #4]
 80232d4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80232d6:	60fb      	str	r3, [r7, #12]
  huart->RxXferCount = 0U;
 80232d8:	68fb      	ldr	r3, [r7, #12]
 80232da:	2200      	movs	r2, #0
 80232dc:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a
  huart->TxXferCount = 0U;
 80232e0:	68fb      	ldr	r3, [r7, #12]
 80232e2:	2200      	movs	r2, #0
 80232e4:	f8a3 2052 	strh.w	r2, [r3, #82]	; 0x52
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
  /*Call registered error callback*/
  huart->ErrorCallback(huart);
#else
  /*Call legacy weak error callback*/
  HAL_UART_ErrorCallback(huart);
 80232e8:	68f8      	ldr	r0, [r7, #12]
 80232ea:	f7ff fb6d 	bl	80229c8 <HAL_UART_ErrorCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
}
 80232ee:	bf00      	nop
 80232f0:	3710      	adds	r7, #16
 80232f2:	46bd      	mov	sp, r7
 80232f4:	bd80      	pop	{r7, pc}

080232f6 <UART_EndTransmit_IT>:
  * @param  huart pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval None
  */
static void UART_EndTransmit_IT(UART_HandleTypeDef *huart)
{
 80232f6:	b580      	push	{r7, lr}
 80232f8:	b082      	sub	sp, #8
 80232fa:	af00      	add	r7, sp, #0
 80232fc:	6078      	str	r0, [r7, #4]
  /* Disable the UART Transmit Complete Interrupt */
  CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 80232fe:	687b      	ldr	r3, [r7, #4]
 8023300:	681b      	ldr	r3, [r3, #0]
 8023302:	681a      	ldr	r2, [r3, #0]
 8023304:	687b      	ldr	r3, [r7, #4]
 8023306:	681b      	ldr	r3, [r3, #0]
 8023308:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 802330c:	601a      	str	r2, [r3, #0]

  /* Tx process is ended, restore huart->gState to Ready */
  huart->gState = HAL_UART_STATE_READY;
 802330e:	687b      	ldr	r3, [r7, #4]
 8023310:	2220      	movs	r2, #32
 8023312:	679a      	str	r2, [r3, #120]	; 0x78

  /* Cleat TxISR function pointer */
  huart->TxISR = NULL;
 8023314:	687b      	ldr	r3, [r7, #4]
 8023316:	2200      	movs	r2, #0
 8023318:	669a      	str	r2, [r3, #104]	; 0x68
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
  /*Call registered Tx complete callback*/
  huart->TxCpltCallback(huart);
#else
  /*Call legacy weak Tx complete callback*/
  HAL_UART_TxCpltCallback(huart);
 802331a:	6878      	ldr	r0, [r7, #4]
 802331c:	f7ff fb4a 	bl	80229b4 <HAL_UART_TxCpltCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
}
 8023320:	bf00      	nop
 8023322:	3708      	adds	r7, #8
 8023324:	46bd      	mov	sp, r7
 8023326:	bd80      	pop	{r7, pc}

08023328 <UART_RxISR_8BIT>:
  * @brief RX interrupt handler for 7 or 8 bits data word length .
  * @param huart UART handle.
  * @retval None
  */
static void UART_RxISR_8BIT(UART_HandleTypeDef *huart)
{
 8023328:	b580      	push	{r7, lr}
 802332a:	b084      	sub	sp, #16
 802332c:	af00      	add	r7, sp, #0
 802332e:	6078      	str	r0, [r7, #4]
  uint16_t uhMask = huart->Mask;
 8023330:	687b      	ldr	r3, [r7, #4]
 8023332:	f8b3 305c 	ldrh.w	r3, [r3, #92]	; 0x5c
 8023336:	81fb      	strh	r3, [r7, #14]
  uint16_t  uhdata;

  /* Check that a Rx process is ongoing */
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 8023338:	687b      	ldr	r3, [r7, #4]
 802333a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 802333c:	2b22      	cmp	r3, #34	; 0x22
 802333e:	d151      	bne.n	80233e4 <UART_RxISR_8BIT+0xbc>
  {
    uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 8023340:	687b      	ldr	r3, [r7, #4]
 8023342:	681b      	ldr	r3, [r3, #0]
 8023344:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8023346:	81bb      	strh	r3, [r7, #12]
    *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
 8023348:	89bb      	ldrh	r3, [r7, #12]
 802334a:	b2d9      	uxtb	r1, r3
 802334c:	89fb      	ldrh	r3, [r7, #14]
 802334e:	b2da      	uxtb	r2, r3
 8023350:	687b      	ldr	r3, [r7, #4]
 8023352:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8023354:	400a      	ands	r2, r1
 8023356:	b2d2      	uxtb	r2, r2
 8023358:	701a      	strb	r2, [r3, #0]
    huart->pRxBuffPtr++;
 802335a:	687b      	ldr	r3, [r7, #4]
 802335c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 802335e:	1c5a      	adds	r2, r3, #1
 8023360:	687b      	ldr	r3, [r7, #4]
 8023362:	655a      	str	r2, [r3, #84]	; 0x54
    huart->RxXferCount--;
 8023364:	687b      	ldr	r3, [r7, #4]
 8023366:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 802336a:	b29b      	uxth	r3, r3
 802336c:	3b01      	subs	r3, #1
 802336e:	b29a      	uxth	r2, r3
 8023370:	687b      	ldr	r3, [r7, #4]
 8023372:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a

    if (huart->RxXferCount == 0U)
 8023376:	687b      	ldr	r3, [r7, #4]
 8023378:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 802337c:	b29b      	uxth	r3, r3
 802337e:	2b00      	cmp	r3, #0
 8023380:	d138      	bne.n	80233f4 <UART_RxISR_8BIT+0xcc>
    {
      /* Disable the UART Parity Error Interrupt and RXNE interrupts */
      CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 8023382:	687b      	ldr	r3, [r7, #4]
 8023384:	681b      	ldr	r3, [r3, #0]
 8023386:	681a      	ldr	r2, [r3, #0]
 8023388:	687b      	ldr	r3, [r7, #4]
 802338a:	681b      	ldr	r3, [r3, #0]
 802338c:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 8023390:	601a      	str	r2, [r3, #0]

      /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
      CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8023392:	687b      	ldr	r3, [r7, #4]
 8023394:	681b      	ldr	r3, [r3, #0]
 8023396:	689a      	ldr	r2, [r3, #8]
 8023398:	687b      	ldr	r3, [r7, #4]
 802339a:	681b      	ldr	r3, [r3, #0]
 802339c:	f022 0201 	bic.w	r2, r2, #1
 80233a0:	609a      	str	r2, [r3, #8]

      /* Rx process is completed, restore huart->RxState to Ready */
      huart->RxState = HAL_UART_STATE_READY;
 80233a2:	687b      	ldr	r3, [r7, #4]
 80233a4:	2220      	movs	r2, #32
 80233a6:	67da      	str	r2, [r3, #124]	; 0x7c

      /* Clear RxISR function pointer */
      huart->RxISR = NULL;
 80233a8:	687b      	ldr	r3, [r7, #4]
 80233aa:	2200      	movs	r2, #0
 80233ac:	665a      	str	r2, [r3, #100]	; 0x64

      /* Check current reception Mode :
         If Reception till IDLE event has been selected : */
      if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 80233ae:	687b      	ldr	r3, [r7, #4]
 80233b0:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80233b2:	2b01      	cmp	r3, #1
 80233b4:	d10f      	bne.n	80233d6 <UART_RxISR_8BIT+0xae>
      {
        /* Disable IDLE interrupt */
        CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 80233b6:	687b      	ldr	r3, [r7, #4]
 80233b8:	681b      	ldr	r3, [r3, #0]
 80233ba:	681a      	ldr	r2, [r3, #0]
 80233bc:	687b      	ldr	r3, [r7, #4]
 80233be:	681b      	ldr	r3, [r3, #0]
 80233c0:	f022 0210 	bic.w	r2, r2, #16
 80233c4:	601a      	str	r2, [r3, #0]
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered Rx Event callback*/
        huart->RxEventCallback(huart, huart->RxXferSize);
#else
        /*Call legacy weak Rx Event callback*/
        HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 80233c6:	687b      	ldr	r3, [r7, #4]
 80233c8:	f8b3 3058 	ldrh.w	r3, [r3, #88]	; 0x58
 80233cc:	4619      	mov	r1, r3
 80233ce:	6878      	ldr	r0, [r7, #4]
 80233d0:	f7ff fb04 	bl	80229dc <HAL_UARTEx_RxEventCallback>
 80233d4:	e002      	b.n	80233dc <UART_RxISR_8BIT+0xb4>
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered Rx complete callback*/
        huart->RxCpltCallback(huart);
#else
        /*Call legacy weak Rx complete callback*/
        HAL_UART_RxCpltCallback(huart);
 80233d6:	6878      	ldr	r0, [r7, #4]
 80233d8:	f7f5 fd18 	bl	8018e0c <HAL_UART_RxCpltCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
      }
      huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 80233dc:	687b      	ldr	r3, [r7, #4]
 80233de:	2200      	movs	r2, #0
 80233e0:	661a      	str	r2, [r3, #96]	; 0x60
  else
  {
    /* Clear RXNE interrupt flag */
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
  }
}
 80233e2:	e007      	b.n	80233f4 <UART_RxISR_8BIT+0xcc>
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 80233e4:	687b      	ldr	r3, [r7, #4]
 80233e6:	681b      	ldr	r3, [r3, #0]
 80233e8:	699a      	ldr	r2, [r3, #24]
 80233ea:	687b      	ldr	r3, [r7, #4]
 80233ec:	681b      	ldr	r3, [r3, #0]
 80233ee:	f042 0208 	orr.w	r2, r2, #8
 80233f2:	619a      	str	r2, [r3, #24]
}
 80233f4:	bf00      	nop
 80233f6:	3710      	adds	r7, #16
 80233f8:	46bd      	mov	sp, r7
 80233fa:	bd80      	pop	{r7, pc}

080233fc <UART_RxISR_16BIT>:
  *         interruptions have been enabled by HAL_UART_Receive_IT()
  * @param huart UART handle.
  * @retval None
  */
static void UART_RxISR_16BIT(UART_HandleTypeDef *huart)
{
 80233fc:	b580      	push	{r7, lr}
 80233fe:	b084      	sub	sp, #16
 8023400:	af00      	add	r7, sp, #0
 8023402:	6078      	str	r0, [r7, #4]
  uint16_t *tmp;
  uint16_t uhMask = huart->Mask;
 8023404:	687b      	ldr	r3, [r7, #4]
 8023406:	f8b3 305c 	ldrh.w	r3, [r3, #92]	; 0x5c
 802340a:	81fb      	strh	r3, [r7, #14]
  uint16_t  uhdata;

  /* Check that a Rx process is ongoing */
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 802340c:	687b      	ldr	r3, [r7, #4]
 802340e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8023410:	2b22      	cmp	r3, #34	; 0x22
 8023412:	d151      	bne.n	80234b8 <UART_RxISR_16BIT+0xbc>
  {
    uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 8023414:	687b      	ldr	r3, [r7, #4]
 8023416:	681b      	ldr	r3, [r3, #0]
 8023418:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 802341a:	81bb      	strh	r3, [r7, #12]
    tmp = (uint16_t *) huart->pRxBuffPtr ;
 802341c:	687b      	ldr	r3, [r7, #4]
 802341e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8023420:	60bb      	str	r3, [r7, #8]
    *tmp = (uint16_t)(uhdata & uhMask);
 8023422:	89ba      	ldrh	r2, [r7, #12]
 8023424:	89fb      	ldrh	r3, [r7, #14]
 8023426:	4013      	ands	r3, r2
 8023428:	b29a      	uxth	r2, r3
 802342a:	68bb      	ldr	r3, [r7, #8]
 802342c:	801a      	strh	r2, [r3, #0]
    huart->pRxBuffPtr += 2U;
 802342e:	687b      	ldr	r3, [r7, #4]
 8023430:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8023432:	1c9a      	adds	r2, r3, #2
 8023434:	687b      	ldr	r3, [r7, #4]
 8023436:	655a      	str	r2, [r3, #84]	; 0x54
    huart->RxXferCount--;
 8023438:	687b      	ldr	r3, [r7, #4]
 802343a:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 802343e:	b29b      	uxth	r3, r3
 8023440:	3b01      	subs	r3, #1
 8023442:	b29a      	uxth	r2, r3
 8023444:	687b      	ldr	r3, [r7, #4]
 8023446:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a

    if (huart->RxXferCount == 0U)
 802344a:	687b      	ldr	r3, [r7, #4]
 802344c:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 8023450:	b29b      	uxth	r3, r3
 8023452:	2b00      	cmp	r3, #0
 8023454:	d138      	bne.n	80234c8 <UART_RxISR_16BIT+0xcc>
    {
      /* Disable the UART Parity Error Interrupt and RXNE interrupt*/
      CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 8023456:	687b      	ldr	r3, [r7, #4]
 8023458:	681b      	ldr	r3, [r3, #0]
 802345a:	681a      	ldr	r2, [r3, #0]
 802345c:	687b      	ldr	r3, [r7, #4]
 802345e:	681b      	ldr	r3, [r3, #0]
 8023460:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 8023464:	601a      	str	r2, [r3, #0]

      /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
      CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8023466:	687b      	ldr	r3, [r7, #4]
 8023468:	681b      	ldr	r3, [r3, #0]
 802346a:	689a      	ldr	r2, [r3, #8]
 802346c:	687b      	ldr	r3, [r7, #4]
 802346e:	681b      	ldr	r3, [r3, #0]
 8023470:	f022 0201 	bic.w	r2, r2, #1
 8023474:	609a      	str	r2, [r3, #8]

      /* Rx process is completed, restore huart->RxState to Ready */
      huart->RxState = HAL_UART_STATE_READY;
 8023476:	687b      	ldr	r3, [r7, #4]
 8023478:	2220      	movs	r2, #32
 802347a:	67da      	str	r2, [r3, #124]	; 0x7c

      /* Clear RxISR function pointer */
      huart->RxISR = NULL;
 802347c:	687b      	ldr	r3, [r7, #4]
 802347e:	2200      	movs	r2, #0
 8023480:	665a      	str	r2, [r3, #100]	; 0x64

      /* Check current reception Mode :
         If Reception till IDLE event has been selected : */
      if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 8023482:	687b      	ldr	r3, [r7, #4]
 8023484:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8023486:	2b01      	cmp	r3, #1
 8023488:	d10f      	bne.n	80234aa <UART_RxISR_16BIT+0xae>
      {
        /* Disable IDLE interrupt */
        CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 802348a:	687b      	ldr	r3, [r7, #4]
 802348c:	681b      	ldr	r3, [r3, #0]
 802348e:	681a      	ldr	r2, [r3, #0]
 8023490:	687b      	ldr	r3, [r7, #4]
 8023492:	681b      	ldr	r3, [r3, #0]
 8023494:	f022 0210 	bic.w	r2, r2, #16
 8023498:	601a      	str	r2, [r3, #0]
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered Rx Event callback*/
        huart->RxEventCallback(huart, huart->RxXferSize);
#else
        /*Call legacy weak Rx Event callback*/
        HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 802349a:	687b      	ldr	r3, [r7, #4]
 802349c:	f8b3 3058 	ldrh.w	r3, [r3, #88]	; 0x58
 80234a0:	4619      	mov	r1, r3
 80234a2:	6878      	ldr	r0, [r7, #4]
 80234a4:	f7ff fa9a 	bl	80229dc <HAL_UARTEx_RxEventCallback>
 80234a8:	e002      	b.n	80234b0 <UART_RxISR_16BIT+0xb4>
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered Rx complete callback*/
        huart->RxCpltCallback(huart);
#else
        /*Call legacy weak Rx complete callback*/
        HAL_UART_RxCpltCallback(huart);
 80234aa:	6878      	ldr	r0, [r7, #4]
 80234ac:	f7f5 fcae 	bl	8018e0c <HAL_UART_RxCpltCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
      }
      huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 80234b0:	687b      	ldr	r3, [r7, #4]
 80234b2:	2200      	movs	r2, #0
 80234b4:	661a      	str	r2, [r3, #96]	; 0x60
  else
  {
    /* Clear RXNE interrupt flag */
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
  }
}
 80234b6:	e007      	b.n	80234c8 <UART_RxISR_16BIT+0xcc>
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 80234b8:	687b      	ldr	r3, [r7, #4]
 80234ba:	681b      	ldr	r3, [r3, #0]
 80234bc:	699a      	ldr	r2, [r3, #24]
 80234be:	687b      	ldr	r3, [r7, #4]
 80234c0:	681b      	ldr	r3, [r3, #0]
 80234c2:	f042 0208 	orr.w	r2, r2, #8
 80234c6:	619a      	str	r2, [r3, #24]
}
 80234c8:	bf00      	nop
 80234ca:	3710      	adds	r7, #16
 80234cc:	46bd      	mov	sp, r7
 80234ce:	bd80      	pop	{r7, pc}

080234d0 <_ZdlPv>:
 80234d0:	f001 bca8 	b.w	8024e24 <free>

080234d4 <_ZdlPvj>:
 80234d4:	f7ff bffc 	b.w	80234d0 <_ZdlPv>

080234d8 <__cxa_guard_acquire>:
 80234d8:	6803      	ldr	r3, [r0, #0]
 80234da:	07db      	lsls	r3, r3, #31
 80234dc:	d406      	bmi.n	80234ec <__cxa_guard_acquire+0x14>
 80234de:	7843      	ldrb	r3, [r0, #1]
 80234e0:	b103      	cbz	r3, 80234e4 <__cxa_guard_acquire+0xc>
 80234e2:	deff      	udf	#255	; 0xff
 80234e4:	2301      	movs	r3, #1
 80234e6:	7043      	strb	r3, [r0, #1]
 80234e8:	4618      	mov	r0, r3
 80234ea:	4770      	bx	lr
 80234ec:	2000      	movs	r0, #0
 80234ee:	4770      	bx	lr

080234f0 <__cxa_guard_release>:
 80234f0:	2301      	movs	r3, #1
 80234f2:	6003      	str	r3, [r0, #0]
 80234f4:	4770      	bx	lr

080234f6 <_Znwj>:
 80234f6:	2801      	cmp	r0, #1
 80234f8:	bf38      	it	cc
 80234fa:	2001      	movcc	r0, #1
 80234fc:	b510      	push	{r4, lr}
 80234fe:	4604      	mov	r4, r0
 8023500:	4620      	mov	r0, r4
 8023502:	f001 fc87 	bl	8024e14 <malloc>
 8023506:	b930      	cbnz	r0, 8023516 <_Znwj+0x20>
 8023508:	f000 fc76 	bl	8023df8 <_ZSt15get_new_handlerv>
 802350c:	b908      	cbnz	r0, 8023512 <_Znwj+0x1c>
 802350e:	f001 fc31 	bl	8024d74 <abort>
 8023512:	4780      	blx	r0
 8023514:	e7f4      	b.n	8023500 <_Znwj+0xa>
 8023516:	bd10      	pop	{r4, pc}

08023518 <_ZNSaIcEC1Ev>:
 8023518:	4770      	bx	lr

0802351a <_ZNSaIcED1Ev>:
 802351a:	4770      	bx	lr

0802351c <_ZStL25local_Rb_tree_rotate_leftPSt18_Rb_tree_node_baseRS0_>:
 802351c:	68c3      	ldr	r3, [r0, #12]
 802351e:	689a      	ldr	r2, [r3, #8]
 8023520:	60c2      	str	r2, [r0, #12]
 8023522:	b510      	push	{r4, lr}
 8023524:	b102      	cbz	r2, 8023528 <_ZStL25local_Rb_tree_rotate_leftPSt18_Rb_tree_node_baseRS0_+0xc>
 8023526:	6050      	str	r0, [r2, #4]
 8023528:	6842      	ldr	r2, [r0, #4]
 802352a:	605a      	str	r2, [r3, #4]
 802352c:	680c      	ldr	r4, [r1, #0]
 802352e:	4284      	cmp	r4, r0
 8023530:	d103      	bne.n	802353a <_ZStL25local_Rb_tree_rotate_leftPSt18_Rb_tree_node_baseRS0_+0x1e>
 8023532:	600b      	str	r3, [r1, #0]
 8023534:	6098      	str	r0, [r3, #8]
 8023536:	6043      	str	r3, [r0, #4]
 8023538:	bd10      	pop	{r4, pc}
 802353a:	6891      	ldr	r1, [r2, #8]
 802353c:	4281      	cmp	r1, r0
 802353e:	bf0c      	ite	eq
 8023540:	6093      	streq	r3, [r2, #8]
 8023542:	60d3      	strne	r3, [r2, #12]
 8023544:	e7f6      	b.n	8023534 <_ZStL25local_Rb_tree_rotate_leftPSt18_Rb_tree_node_baseRS0_+0x18>

08023546 <_ZStL26local_Rb_tree_rotate_rightPSt18_Rb_tree_node_baseRS0_>:
 8023546:	6883      	ldr	r3, [r0, #8]
 8023548:	68da      	ldr	r2, [r3, #12]
 802354a:	6082      	str	r2, [r0, #8]
 802354c:	b510      	push	{r4, lr}
 802354e:	b102      	cbz	r2, 8023552 <_ZStL26local_Rb_tree_rotate_rightPSt18_Rb_tree_node_baseRS0_+0xc>
 8023550:	6050      	str	r0, [r2, #4]
 8023552:	6842      	ldr	r2, [r0, #4]
 8023554:	605a      	str	r2, [r3, #4]
 8023556:	680c      	ldr	r4, [r1, #0]
 8023558:	4284      	cmp	r4, r0
 802355a:	d103      	bne.n	8023564 <_ZStL26local_Rb_tree_rotate_rightPSt18_Rb_tree_node_baseRS0_+0x1e>
 802355c:	600b      	str	r3, [r1, #0]
 802355e:	60d8      	str	r0, [r3, #12]
 8023560:	6043      	str	r3, [r0, #4]
 8023562:	bd10      	pop	{r4, pc}
 8023564:	68d1      	ldr	r1, [r2, #12]
 8023566:	4281      	cmp	r1, r0
 8023568:	bf0c      	ite	eq
 802356a:	60d3      	streq	r3, [r2, #12]
 802356c:	6093      	strne	r3, [r2, #8]
 802356e:	e7f6      	b.n	802355e <_ZStL26local_Rb_tree_rotate_rightPSt18_Rb_tree_node_baseRS0_+0x18>

08023570 <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base>:
 8023570:	7803      	ldrb	r3, [r0, #0]
 8023572:	b933      	cbnz	r3, 8023582 <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base+0x12>
 8023574:	6843      	ldr	r3, [r0, #4]
 8023576:	685b      	ldr	r3, [r3, #4]
 8023578:	4283      	cmp	r3, r0
 802357a:	d102      	bne.n	8023582 <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base+0x12>
 802357c:	68db      	ldr	r3, [r3, #12]
 802357e:	4618      	mov	r0, r3
 8023580:	4770      	bx	lr
 8023582:	6882      	ldr	r2, [r0, #8]
 8023584:	b122      	cbz	r2, 8023590 <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base+0x20>
 8023586:	4613      	mov	r3, r2
 8023588:	68d2      	ldr	r2, [r2, #12]
 802358a:	2a00      	cmp	r2, #0
 802358c:	d1fb      	bne.n	8023586 <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base+0x16>
 802358e:	e7f6      	b.n	802357e <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base+0xe>
 8023590:	6843      	ldr	r3, [r0, #4]
 8023592:	689a      	ldr	r2, [r3, #8]
 8023594:	4282      	cmp	r2, r0
 8023596:	d1f2      	bne.n	802357e <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base+0xe>
 8023598:	4618      	mov	r0, r3
 802359a:	685b      	ldr	r3, [r3, #4]
 802359c:	e7f9      	b.n	8023592 <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base+0x22>

0802359e <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>:
 802359e:	68c3      	ldr	r3, [r0, #12]
 80235a0:	b123      	cbz	r3, 80235ac <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base+0xe>
 80235a2:	4618      	mov	r0, r3
 80235a4:	689b      	ldr	r3, [r3, #8]
 80235a6:	2b00      	cmp	r3, #0
 80235a8:	d1fb      	bne.n	80235a2 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base+0x4>
 80235aa:	4770      	bx	lr
 80235ac:	6843      	ldr	r3, [r0, #4]
 80235ae:	68da      	ldr	r2, [r3, #12]
 80235b0:	4282      	cmp	r2, r0
 80235b2:	d102      	bne.n	80235ba <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base+0x1c>
 80235b4:	4618      	mov	r0, r3
 80235b6:	685b      	ldr	r3, [r3, #4]
 80235b8:	e7f9      	b.n	80235ae <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base+0x10>
 80235ba:	68c2      	ldr	r2, [r0, #12]
 80235bc:	4293      	cmp	r3, r2
 80235be:	bf18      	it	ne
 80235c0:	4618      	movne	r0, r3
 80235c2:	4770      	bx	lr

080235c4 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>:
 80235c4:	f7ff bfd4 	b.w	8023570 <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base>

080235c8 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>:
 80235c8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80235cc:	461e      	mov	r6, r3
 80235ce:	f103 0804 	add.w	r8, r3, #4
 80235d2:	2300      	movs	r3, #0
 80235d4:	e9c1 3302 	strd	r3, r3, [r1, #8]
 80235d8:	460c      	mov	r4, r1
 80235da:	604a      	str	r2, [r1, #4]
 80235dc:	700b      	strb	r3, [r1, #0]
 80235de:	b300      	cbz	r0, 8023622 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x5a>
 80235e0:	4296      	cmp	r6, r2
 80235e2:	6091      	str	r1, [r2, #8]
 80235e4:	d118      	bne.n	8023618 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x50>
 80235e6:	6071      	str	r1, [r6, #4]
 80235e8:	60f4      	str	r4, [r6, #12]
 80235ea:	2701      	movs	r7, #1
 80235ec:	f04f 0900 	mov.w	r9, #0
 80235f0:	6873      	ldr	r3, [r6, #4]
 80235f2:	42a3      	cmp	r3, r4
 80235f4:	d03f      	beq.n	8023676 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0xae>
 80235f6:	6860      	ldr	r0, [r4, #4]
 80235f8:	7802      	ldrb	r2, [r0, #0]
 80235fa:	2a00      	cmp	r2, #0
 80235fc:	d13c      	bne.n	8023678 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0xb0>
 80235fe:	6845      	ldr	r5, [r0, #4]
 8023600:	68ab      	ldr	r3, [r5, #8]
 8023602:	4298      	cmp	r0, r3
 8023604:	d123      	bne.n	802364e <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x86>
 8023606:	68eb      	ldr	r3, [r5, #12]
 8023608:	b183      	cbz	r3, 802362c <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x64>
 802360a:	781a      	ldrb	r2, [r3, #0]
 802360c:	b972      	cbnz	r2, 802362c <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x64>
 802360e:	7007      	strb	r7, [r0, #0]
 8023610:	701f      	strb	r7, [r3, #0]
 8023612:	702a      	strb	r2, [r5, #0]
 8023614:	462c      	mov	r4, r5
 8023616:	e7eb      	b.n	80235f0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x28>
 8023618:	68b3      	ldr	r3, [r6, #8]
 802361a:	4293      	cmp	r3, r2
 802361c:	d1e5      	bne.n	80235ea <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x22>
 802361e:	60b1      	str	r1, [r6, #8]
 8023620:	e7e3      	b.n	80235ea <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x22>
 8023622:	60d1      	str	r1, [r2, #12]
 8023624:	68f3      	ldr	r3, [r6, #12]
 8023626:	4293      	cmp	r3, r2
 8023628:	d1df      	bne.n	80235ea <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x22>
 802362a:	e7dd      	b.n	80235e8 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x20>
 802362c:	68c3      	ldr	r3, [r0, #12]
 802362e:	42a3      	cmp	r3, r4
 8023630:	d103      	bne.n	802363a <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x72>
 8023632:	4641      	mov	r1, r8
 8023634:	f7ff ff72 	bl	802351c <_ZStL25local_Rb_tree_rotate_leftPSt18_Rb_tree_node_baseRS0_>
 8023638:	4604      	mov	r4, r0
 802363a:	6863      	ldr	r3, [r4, #4]
 802363c:	4641      	mov	r1, r8
 802363e:	701f      	strb	r7, [r3, #0]
 8023640:	4628      	mov	r0, r5
 8023642:	f885 9000 	strb.w	r9, [r5]
 8023646:	f7ff ff7e 	bl	8023546 <_ZStL26local_Rb_tree_rotate_rightPSt18_Rb_tree_node_baseRS0_>
 802364a:	4625      	mov	r5, r4
 802364c:	e7e2      	b.n	8023614 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x4c>
 802364e:	b113      	cbz	r3, 8023656 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x8e>
 8023650:	781a      	ldrb	r2, [r3, #0]
 8023652:	2a00      	cmp	r2, #0
 8023654:	d0db      	beq.n	802360e <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x46>
 8023656:	6883      	ldr	r3, [r0, #8]
 8023658:	42a3      	cmp	r3, r4
 802365a:	d103      	bne.n	8023664 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x9c>
 802365c:	4641      	mov	r1, r8
 802365e:	f7ff ff72 	bl	8023546 <_ZStL26local_Rb_tree_rotate_rightPSt18_Rb_tree_node_baseRS0_>
 8023662:	4604      	mov	r4, r0
 8023664:	6863      	ldr	r3, [r4, #4]
 8023666:	4641      	mov	r1, r8
 8023668:	701f      	strb	r7, [r3, #0]
 802366a:	4628      	mov	r0, r5
 802366c:	f885 9000 	strb.w	r9, [r5]
 8023670:	f7ff ff54 	bl	802351c <_ZStL25local_Rb_tree_rotate_leftPSt18_Rb_tree_node_baseRS0_>
 8023674:	e7e9      	b.n	802364a <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x82>
 8023676:	4623      	mov	r3, r4
 8023678:	2201      	movs	r2, #1
 802367a:	701a      	strb	r2, [r3, #0]
 802367c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

08023680 <_ZSt17__throw_bad_allocv>:
 8023680:	b508      	push	{r3, lr}
 8023682:	f001 fb77 	bl	8024d74 <abort>

08023686 <_ZSt19__throw_logic_errorPKc>:
 8023686:	b508      	push	{r3, lr}
 8023688:	f001 fb74 	bl	8024d74 <abort>

0802368c <_ZSt24__throw_invalid_argumentPKc>:
 802368c:	b508      	push	{r3, lr}
 802368e:	f001 fb71 	bl	8024d74 <abort>

08023692 <_ZSt20__throw_length_errorPKc>:
 8023692:	b508      	push	{r3, lr}
 8023694:	f001 fb6e 	bl	8024d74 <abort>

08023698 <_ZSt20__throw_out_of_rangePKc>:
 8023698:	b508      	push	{r3, lr}
 802369a:	f001 fb6b 	bl	8024d74 <abort>

0802369e <_ZSt24__throw_out_of_range_fmtPKcz>:
 802369e:	b40f      	push	{r0, r1, r2, r3}
 80236a0:	b580      	push	{r7, lr}
 80236a2:	b084      	sub	sp, #16
 80236a4:	af00      	add	r7, sp, #0
 80236a6:	f107 0418 	add.w	r4, r7, #24
 80236aa:	f854 2b04 	ldr.w	r2, [r4], #4
 80236ae:	607a      	str	r2, [r7, #4]
 80236b0:	4610      	mov	r0, r2
 80236b2:	f7dc fdfd 	bl	80002b0 <strlen>
 80236b6:	f200 2307 	addw	r3, r0, #519	; 0x207
 80236ba:	f023 0307 	bic.w	r3, r3, #7
 80236be:	ebad 0d03 	sub.w	sp, sp, r3
 80236c2:	f500 7100 	add.w	r1, r0, #512	; 0x200
 80236c6:	687a      	ldr	r2, [r7, #4]
 80236c8:	60fc      	str	r4, [r7, #12]
 80236ca:	4623      	mov	r3, r4
 80236cc:	4668      	mov	r0, sp
 80236ce:	f000 f855 	bl	802377c <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list>
 80236d2:	f001 fb4f 	bl	8024d74 <abort>
	...

080236d8 <_ZN9__gnu_cxx26__throw_insufficient_spaceEPKcS1_>:
 80236d8:	b580      	push	{r7, lr}
 80236da:	b09c      	sub	sp, #112	; 0x70
 80236dc:	4606      	mov	r6, r0
 80236de:	af00      	add	r7, sp, #0
 80236e0:	460c      	mov	r4, r1
 80236e2:	1ba4      	subs	r4, r4, r6
 80236e4:	490e      	ldr	r1, [pc, #56]	; (8023720 <_ZN9__gnu_cxx26__throw_insufficient_spaceEPKcS1_+0x48>)
 80236e6:	2269      	movs	r2, #105	; 0x69
 80236e8:	1d38      	adds	r0, r7, #4
 80236ea:	f001 fbb1 	bl	8024e50 <memcpy>
 80236ee:	f104 0370 	add.w	r3, r4, #112	; 0x70
 80236f2:	f023 0307 	bic.w	r3, r3, #7
 80236f6:	ebad 0d03 	sub.w	sp, sp, r3
 80236fa:	466d      	mov	r5, sp
 80236fc:	2268      	movs	r2, #104	; 0x68
 80236fe:	1d39      	adds	r1, r7, #4
 8023700:	4628      	mov	r0, r5
 8023702:	f001 fba5 	bl	8024e50 <memcpy>
 8023706:	4622      	mov	r2, r4
 8023708:	4631      	mov	r1, r6
 802370a:	f105 0068 	add.w	r0, r5, #104	; 0x68
 802370e:	442c      	add	r4, r5
 8023710:	f001 fb9e 	bl	8024e50 <memcpy>
 8023714:	2300      	movs	r3, #0
 8023716:	f884 3068 	strb.w	r3, [r4, #104]	; 0x68
 802371a:	4628      	mov	r0, r5
 802371c:	f7ff ffb3 	bl	8023686 <_ZSt19__throw_logic_errorPKc>
 8023720:	0802a210 	.word	0x0802a210

08023724 <_ZN9__gnu_cxx15__concat_size_tEPcjj>:
 8023724:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8023728:	af00      	add	r7, sp, #0
 802372a:	b084      	sub	sp, #16
 802372c:	466d      	mov	r5, sp
 802372e:	f105 040c 	add.w	r4, r5, #12
 8023732:	f8df 8044 	ldr.w	r8, [pc, #68]	; 8023778 <_ZN9__gnu_cxx15__concat_size_tEPcjj+0x54>
 8023736:	4623      	mov	r3, r4
 8023738:	f04f 0c0a 	mov.w	ip, #10
 802373c:	fbb2 f6fc 	udiv	r6, r2, ip
 8023740:	fb0c 2e16 	mls	lr, ip, r6, r2
 8023744:	f818 e00e 	ldrb.w	lr, [r8, lr]
 8023748:	f803 ed01 	strb.w	lr, [r3, #-1]!
 802374c:	4696      	mov	lr, r2
 802374e:	f1be 0f09 	cmp.w	lr, #9
 8023752:	4632      	mov	r2, r6
 8023754:	d8f2      	bhi.n	802373c <_ZN9__gnu_cxx15__concat_size_tEPcjj+0x18>
 8023756:	1ae4      	subs	r4, r4, r3
 8023758:	428c      	cmp	r4, r1
 802375a:	d809      	bhi.n	8023770 <_ZN9__gnu_cxx15__concat_size_tEPcjj+0x4c>
 802375c:	f1c4 010c 	rsb	r1, r4, #12
 8023760:	4622      	mov	r2, r4
 8023762:	4429      	add	r1, r5
 8023764:	f001 fb74 	bl	8024e50 <memcpy>
 8023768:	4620      	mov	r0, r4
 802376a:	46bd      	mov	sp, r7
 802376c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8023770:	f04f 34ff 	mov.w	r4, #4294967295
 8023774:	e7f8      	b.n	8023768 <_ZN9__gnu_cxx15__concat_size_tEPcjj+0x44>
 8023776:	bf00      	nop
 8023778:	0802a279 	.word	0x0802a279

0802377c <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list>:
 802377c:	3901      	subs	r1, #1
 802377e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8023782:	4607      	mov	r7, r0
 8023784:	4615      	mov	r5, r2
 8023786:	eb00 0801 	add.w	r8, r0, r1
 802378a:	4604      	mov	r4, r0
 802378c:	782a      	ldrb	r2, [r5, #0]
 802378e:	b362      	cbz	r2, 80237ea <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x6e>
 8023790:	4544      	cmp	r4, r8
 8023792:	d22e      	bcs.n	80237f2 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x76>
 8023794:	2a25      	cmp	r2, #37	; 0x25
 8023796:	d107      	bne.n	80237a8 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x2c>
 8023798:	786a      	ldrb	r2, [r5, #1]
 802379a:	2a73      	cmp	r2, #115	; 0x73
 802379c:	d009      	beq.n	80237b2 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x36>
 802379e:	2a7a      	cmp	r2, #122	; 0x7a
 80237a0:	d012      	beq.n	80237c8 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x4c>
 80237a2:	2a25      	cmp	r2, #37	; 0x25
 80237a4:	d100      	bne.n	80237a8 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x2c>
 80237a6:	3501      	adds	r5, #1
 80237a8:	f815 2b01 	ldrb.w	r2, [r5], #1
 80237ac:	f804 2b01 	strb.w	r2, [r4], #1
 80237b0:	e7ec      	b.n	802378c <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x10>
 80237b2:	f853 2b04 	ldr.w	r2, [r3], #4
 80237b6:	3a01      	subs	r2, #1
 80237b8:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 80237bc:	b1e9      	cbz	r1, 80237fa <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x7e>
 80237be:	4544      	cmp	r4, r8
 80237c0:	d017      	beq.n	80237f2 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x76>
 80237c2:	f804 1b01 	strb.w	r1, [r4], #1
 80237c6:	e7f7      	b.n	80237b8 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x3c>
 80237c8:	78aa      	ldrb	r2, [r5, #2]
 80237ca:	2a75      	cmp	r2, #117	; 0x75
 80237cc:	d1ec      	bne.n	80237a8 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x2c>
 80237ce:	461e      	mov	r6, r3
 80237d0:	eba8 0104 	sub.w	r1, r8, r4
 80237d4:	f856 2b04 	ldr.w	r2, [r6], #4
 80237d8:	4620      	mov	r0, r4
 80237da:	f7ff ffa3 	bl	8023724 <_ZN9__gnu_cxx15__concat_size_tEPcjj>
 80237de:	2800      	cmp	r0, #0
 80237e0:	dd07      	ble.n	80237f2 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x76>
 80237e2:	4404      	add	r4, r0
 80237e4:	3503      	adds	r5, #3
 80237e6:	4633      	mov	r3, r6
 80237e8:	e7d0      	b.n	802378c <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x10>
 80237ea:	7022      	strb	r2, [r4, #0]
 80237ec:	1be0      	subs	r0, r4, r7
 80237ee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80237f2:	4621      	mov	r1, r4
 80237f4:	4638      	mov	r0, r7
 80237f6:	f7ff ff6f 	bl	80236d8 <_ZN9__gnu_cxx26__throw_insufficient_spaceEPKcS1_>
 80237fa:	3502      	adds	r5, #2
 80237fc:	e7c6      	b.n	802378c <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x10>

080237fe <_ZNSt11char_traitsIcE7compareEPKcS2_j>:
 80237fe:	b10a      	cbz	r2, 8023804 <_ZNSt11char_traitsIcE7compareEPKcS2_j+0x6>
 8023800:	f001 bb18 	b.w	8024e34 <memcmp>
 8023804:	4610      	mov	r0, r2
 8023806:	4770      	bx	lr

08023808 <_ZNSt11char_traitsIcE4copyEPcPKcj>:
 8023808:	b10a      	cbz	r2, 802380e <_ZNSt11char_traitsIcE4copyEPcPKcj+0x6>
 802380a:	f001 bb21 	b.w	8024e50 <memcpy>
 802380e:	4770      	bx	lr

08023810 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc>:
 8023810:	6001      	str	r1, [r0, #0]
 8023812:	4770      	bx	lr

08023814 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>:
 8023814:	6800      	ldr	r0, [r0, #0]
 8023816:	4770      	bx	lr

08023818 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv>:
 8023818:	3008      	adds	r0, #8
 802381a:	4770      	bx	lr

0802381c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEj>:
 802381c:	6081      	str	r1, [r0, #8]
 802381e:	4770      	bx	lr

08023820 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEj>:
 8023820:	6803      	ldr	r3, [r0, #0]
 8023822:	6041      	str	r1, [r0, #4]
 8023824:	2200      	movs	r2, #0
 8023826:	545a      	strb	r2, [r3, r1]
 8023828:	4770      	bx	lr
	...

0802382c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>:
 802382c:	b508      	push	{r3, lr}
 802382e:	680b      	ldr	r3, [r1, #0]
 8023830:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8023834:	d302      	bcc.n	802383c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj+0x10>
 8023836:	480d      	ldr	r0, [pc, #52]	; (802386c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj+0x40>)
 8023838:	f7ff ff2b 	bl	8023692 <_ZSt20__throw_length_errorPKc>
 802383c:	4293      	cmp	r3, r2
 802383e:	d90b      	bls.n	8023858 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj+0x2c>
 8023840:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 8023844:	ea4f 0042 	mov.w	r0, r2, lsl #1
 8023848:	d206      	bcs.n	8023858 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj+0x2c>
 802384a:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 802384e:	bf2a      	itet	cs
 8023850:	f06f 4340 	mvncs.w	r3, #3221225472	; 0xc0000000
 8023854:	6008      	strcc	r0, [r1, #0]
 8023856:	600b      	strcs	r3, [r1, #0]
 8023858:	6808      	ldr	r0, [r1, #0]
 802385a:	3001      	adds	r0, #1
 802385c:	d501      	bpl.n	8023862 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj+0x36>
 802385e:	f7ff ff0f 	bl	8023680 <_ZSt17__throw_bad_allocv>
 8023862:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8023866:	f7ff be46 	b.w	80234f6 <_Znwj>
 802386a:	bf00      	nop
 802386c:	0802a284 	.word	0x0802a284

08023870 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>:
 8023870:	f850 3b08 	ldr.w	r3, [r0], #8
 8023874:	4283      	cmp	r3, r0
 8023876:	d002      	beq.n	802387e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv+0xe>
 8023878:	4618      	mov	r0, r3
 802387a:	f7ff be29 	b.w	80234d0 <_ZdlPv>
 802387e:	4770      	bx	lr

08023880 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_checkEjPKc>:
 8023880:	b508      	push	{r3, lr}
 8023882:	4603      	mov	r3, r0
 8023884:	4608      	mov	r0, r1
 8023886:	685b      	ldr	r3, [r3, #4]
 8023888:	4298      	cmp	r0, r3
 802388a:	4611      	mov	r1, r2
 802388c:	d903      	bls.n	8023896 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_checkEjPKc+0x16>
 802388e:	4602      	mov	r2, r0
 8023890:	4801      	ldr	r0, [pc, #4]	; (8023898 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_checkEjPKc+0x18>)
 8023892:	f7ff ff04 	bl	802369e <_ZSt24__throw_out_of_range_fmtPKcz>
 8023896:	bd08      	pop	{r3, pc}
 8023898:	0802a29c 	.word	0x0802a29c

0802389c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEjjPKc>:
 802389c:	6840      	ldr	r0, [r0, #4]
 802389e:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 80238a2:	3901      	subs	r1, #1
 80238a4:	1a09      	subs	r1, r1, r0
 80238a6:	4291      	cmp	r1, r2
 80238a8:	b508      	push	{r3, lr}
 80238aa:	d202      	bcs.n	80238b2 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEjjPKc+0x16>
 80238ac:	4618      	mov	r0, r3
 80238ae:	f7ff fef0 	bl	8023692 <_ZSt20__throw_length_errorPKc>
 80238b2:	bd08      	pop	{r3, pc}

080238b4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_disjunctEPKc>:
 80238b4:	6803      	ldr	r3, [r0, #0]
 80238b6:	428b      	cmp	r3, r1
 80238b8:	d806      	bhi.n	80238c8 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_disjunctEPKc+0x14>
 80238ba:	6840      	ldr	r0, [r0, #4]
 80238bc:	4418      	add	r0, r3
 80238be:	4281      	cmp	r1, r0
 80238c0:	bf94      	ite	ls
 80238c2:	2000      	movls	r0, #0
 80238c4:	2001      	movhi	r0, #1
 80238c6:	4770      	bx	lr
 80238c8:	2001      	movs	r0, #1
 80238ca:	4770      	bx	lr

080238cc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>:
 80238cc:	2a01      	cmp	r2, #1
 80238ce:	b510      	push	{r4, lr}
 80238d0:	d102      	bne.n	80238d8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj+0xc>
 80238d2:	780a      	ldrb	r2, [r1, #0]
 80238d4:	7002      	strb	r2, [r0, #0]
 80238d6:	bd10      	pop	{r4, pc}
 80238d8:	f7ff ff96 	bl	8023808 <_ZNSt11char_traitsIcE4copyEPcPKcj>
 80238dc:	e7fb      	b.n	80238d6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj+0xa>

080238de <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj>:
 80238de:	2a01      	cmp	r2, #1
 80238e0:	b430      	push	{r4, r5}
 80238e2:	d103      	bne.n	80238ec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj+0xe>
 80238e4:	780b      	ldrb	r3, [r1, #0]
 80238e6:	7003      	strb	r3, [r0, #0]
 80238e8:	bc30      	pop	{r4, r5}
 80238ea:	4770      	bx	lr
 80238ec:	2a00      	cmp	r2, #0
 80238ee:	d0fb      	beq.n	80238e8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj+0xa>
 80238f0:	bc30      	pop	{r4, r5}
 80238f2:	f001 babb 	b.w	8024e6c <memmove>

080238f6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcS5_S5_>:
 80238f6:	b508      	push	{r3, lr}
 80238f8:	1a52      	subs	r2, r2, r1
 80238fa:	f7ff ffe7 	bl	80238cc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 80238fe:	bd08      	pop	{r3, pc}

08023900 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_>:
 8023900:	b508      	push	{r3, lr}
 8023902:	1a52      	subs	r2, r2, r1
 8023904:	f7ff ffe2 	bl	80238cc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 8023908:	bd08      	pop	{r3, pc}

0802390a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>:
 802390a:	4288      	cmp	r0, r1
 802390c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 802390e:	4604      	mov	r4, r0
 8023910:	460e      	mov	r6, r1
 8023912:	d01e      	beq.n	8023952 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_+0x48>
 8023914:	4603      	mov	r3, r0
 8023916:	684d      	ldr	r5, [r1, #4]
 8023918:	f853 2b08 	ldr.w	r2, [r3], #8
 802391c:	429a      	cmp	r2, r3
 802391e:	bf14      	ite	ne
 8023920:	6882      	ldrne	r2, [r0, #8]
 8023922:	220f      	moveq	r2, #15
 8023924:	42aa      	cmp	r2, r5
 8023926:	d20a      	bcs.n	802393e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_+0x34>
 8023928:	a901      	add	r1, sp, #4
 802392a:	9501      	str	r5, [sp, #4]
 802392c:	f7ff ff7e 	bl	802382c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>
 8023930:	4607      	mov	r7, r0
 8023932:	4620      	mov	r0, r4
 8023934:	f7ff ff9c 	bl	8023870 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
 8023938:	9b01      	ldr	r3, [sp, #4]
 802393a:	6027      	str	r7, [r4, #0]
 802393c:	60a3      	str	r3, [r4, #8]
 802393e:	b125      	cbz	r5, 802394a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_+0x40>
 8023940:	6831      	ldr	r1, [r6, #0]
 8023942:	6820      	ldr	r0, [r4, #0]
 8023944:	462a      	mov	r2, r5
 8023946:	f7ff ffc1 	bl	80238cc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 802394a:	6823      	ldr	r3, [r4, #0]
 802394c:	6065      	str	r5, [r4, #4]
 802394e:	2200      	movs	r2, #0
 8023950:	555a      	strb	r2, [r3, r5]
 8023952:	b003      	add	sp, #12
 8023954:	bdf0      	pop	{r4, r5, r6, r7, pc}

08023956 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj>:
 8023956:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 802395a:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 802395c:	461f      	mov	r7, r3
 802395e:	6843      	ldr	r3, [r0, #4]
 8023960:	eb01 0802 	add.w	r8, r1, r2
 8023964:	1ab2      	subs	r2, r6, r2
 8023966:	441a      	add	r2, r3
 8023968:	eba3 0908 	sub.w	r9, r3, r8
 802396c:	4603      	mov	r3, r0
 802396e:	9201      	str	r2, [sp, #4]
 8023970:	f853 2b08 	ldr.w	r2, [r3], #8
 8023974:	429a      	cmp	r2, r3
 8023976:	bf18      	it	ne
 8023978:	6882      	ldrne	r2, [r0, #8]
 802397a:	460d      	mov	r5, r1
 802397c:	bf08      	it	eq
 802397e:	220f      	moveq	r2, #15
 8023980:	a901      	add	r1, sp, #4
 8023982:	4604      	mov	r4, r0
 8023984:	f7ff ff52 	bl	802382c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>
 8023988:	4682      	mov	sl, r0
 802398a:	b11d      	cbz	r5, 8023994 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj+0x3e>
 802398c:	6821      	ldr	r1, [r4, #0]
 802398e:	462a      	mov	r2, r5
 8023990:	f7ff ff9c 	bl	80238cc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 8023994:	b137      	cbz	r7, 80239a4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj+0x4e>
 8023996:	b12e      	cbz	r6, 80239a4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj+0x4e>
 8023998:	4632      	mov	r2, r6
 802399a:	4639      	mov	r1, r7
 802399c:	eb0a 0005 	add.w	r0, sl, r5
 80239a0:	f7ff ff94 	bl	80238cc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 80239a4:	f1b9 0f00 	cmp.w	r9, #0
 80239a8:	d007      	beq.n	80239ba <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj+0x64>
 80239aa:	6821      	ldr	r1, [r4, #0]
 80239ac:	4435      	add	r5, r6
 80239ae:	464a      	mov	r2, r9
 80239b0:	4441      	add	r1, r8
 80239b2:	eb0a 0005 	add.w	r0, sl, r5
 80239b6:	f7ff ff89 	bl	80238cc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 80239ba:	4620      	mov	r0, r4
 80239bc:	f7ff ff58 	bl	8023870 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
 80239c0:	9b01      	ldr	r3, [sp, #4]
 80239c2:	f8c4 a000 	str.w	sl, [r4]
 80239c6:	60a3      	str	r3, [r4, #8]
 80239c8:	b002      	add	sp, #8
 80239ca:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

080239ce <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEjj>:
 80239ce:	b538      	push	{r3, r4, r5, lr}
 80239d0:	4604      	mov	r4, r0
 80239d2:	4615      	mov	r5, r2
 80239d4:	4608      	mov	r0, r1
 80239d6:	4411      	add	r1, r2
 80239d8:	6862      	ldr	r2, [r4, #4]
 80239da:	1a52      	subs	r2, r2, r1
 80239dc:	d005      	beq.n	80239ea <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEjj+0x1c>
 80239de:	b125      	cbz	r5, 80239ea <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEjj+0x1c>
 80239e0:	6823      	ldr	r3, [r4, #0]
 80239e2:	4419      	add	r1, r3
 80239e4:	4418      	add	r0, r3
 80239e6:	f7ff ff7a 	bl	80238de <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj>
 80239ea:	6862      	ldr	r2, [r4, #4]
 80239ec:	6823      	ldr	r3, [r4, #0]
 80239ee:	1b55      	subs	r5, r2, r5
 80239f0:	2200      	movs	r2, #0
 80239f2:	6065      	str	r5, [r4, #4]
 80239f4:	555a      	strb	r2, [r3, r5]
 80239f6:	bd38      	pop	{r3, r4, r5, pc}

080239f8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>:
 80239f8:	f100 0208 	add.w	r2, r0, #8
 80239fc:	6002      	str	r2, [r0, #0]
 80239fe:	2200      	movs	r2, #0
 8023a00:	6042      	str	r2, [r0, #4]
 8023a02:	7202      	strb	r2, [r0, #8]
 8023a04:	4770      	bx	lr

08023a06 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_>:
 8023a06:	b570      	push	{r4, r5, r6, lr}
 8023a08:	4604      	mov	r4, r0
 8023a0a:	460e      	mov	r6, r1
 8023a0c:	3008      	adds	r0, #8
 8023a0e:	6020      	str	r0, [r4, #0]
 8023a10:	f856 3b08 	ldr.w	r3, [r6], #8
 8023a14:	429e      	cmp	r6, r3
 8023a16:	460d      	mov	r5, r1
 8023a18:	d10b      	bne.n	8023a32 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_+0x2c>
 8023a1a:	2210      	movs	r2, #16
 8023a1c:	4631      	mov	r1, r6
 8023a1e:	f7ff fef3 	bl	8023808 <_ZNSt11char_traitsIcE4copyEPcPKcj>
 8023a22:	686b      	ldr	r3, [r5, #4]
 8023a24:	6063      	str	r3, [r4, #4]
 8023a26:	2300      	movs	r3, #0
 8023a28:	602e      	str	r6, [r5, #0]
 8023a2a:	606b      	str	r3, [r5, #4]
 8023a2c:	722b      	strb	r3, [r5, #8]
 8023a2e:	4620      	mov	r0, r4
 8023a30:	bd70      	pop	{r4, r5, r6, pc}
 8023a32:	6023      	str	r3, [r4, #0]
 8023a34:	688b      	ldr	r3, [r1, #8]
 8023a36:	60a3      	str	r3, [r4, #8]
 8023a38:	e7f3      	b.n	8023a22 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_+0x1c>

08023a3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>:
 8023a3a:	b510      	push	{r4, lr}
 8023a3c:	4604      	mov	r4, r0
 8023a3e:	f7ff ff17 	bl	8023870 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
 8023a42:	4620      	mov	r0, r4
 8023a44:	bd10      	pop	{r4, pc}

08023a46 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_>:
 8023a46:	b510      	push	{r4, lr}
 8023a48:	4604      	mov	r4, r0
 8023a4a:	f7ff ff5e 	bl	802390a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
 8023a4e:	4620      	mov	r0, r4
 8023a50:	bd10      	pop	{r4, pc}

08023a52 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>:
 8023a52:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8023a54:	460d      	mov	r5, r1
 8023a56:	f851 3b08 	ldr.w	r3, [r1], #8
 8023a5a:	686a      	ldr	r2, [r5, #4]
 8023a5c:	4299      	cmp	r1, r3
 8023a5e:	4604      	mov	r4, r0
 8023a60:	6800      	ldr	r0, [r0, #0]
 8023a62:	d10d      	bne.n	8023a80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x2e>
 8023a64:	b10a      	cbz	r2, 8023a6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x18>
 8023a66:	f7ff ff31 	bl	80238cc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 8023a6a:	686b      	ldr	r3, [r5, #4]
 8023a6c:	6822      	ldr	r2, [r4, #0]
 8023a6e:	6063      	str	r3, [r4, #4]
 8023a70:	2100      	movs	r1, #0
 8023a72:	54d1      	strb	r1, [r2, r3]
 8023a74:	682a      	ldr	r2, [r5, #0]
 8023a76:	2300      	movs	r3, #0
 8023a78:	606b      	str	r3, [r5, #4]
 8023a7a:	7013      	strb	r3, [r2, #0]
 8023a7c:	4620      	mov	r0, r4
 8023a7e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8023a80:	e9c4 3200 	strd	r3, r2, [r4]
 8023a84:	f104 0708 	add.w	r7, r4, #8
 8023a88:	42b8      	cmp	r0, r7
 8023a8a:	68ab      	ldr	r3, [r5, #8]
 8023a8c:	bf18      	it	ne
 8023a8e:	68a6      	ldrne	r6, [r4, #8]
 8023a90:	60a3      	str	r3, [r4, #8]
 8023a92:	bf08      	it	eq
 8023a94:	2000      	moveq	r0, #0
 8023a96:	b110      	cbz	r0, 8023a9e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x4c>
 8023a98:	6028      	str	r0, [r5, #0]
 8023a9a:	60ae      	str	r6, [r5, #8]
 8023a9c:	e7ea      	b.n	8023a74 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x22>
 8023a9e:	6029      	str	r1, [r5, #0]
 8023aa0:	e7e8      	b.n	8023a74 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x22>

08023aa2 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>:
 8023aa2:	6840      	ldr	r0, [r0, #4]
 8023aa4:	4770      	bx	lr

08023aa6 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>:
 8023aa6:	6840      	ldr	r0, [r0, #4]
 8023aa8:	4770      	bx	lr

08023aaa <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv>:
 8023aaa:	4603      	mov	r3, r0
 8023aac:	f853 2b08 	ldr.w	r2, [r3], #8
 8023ab0:	429a      	cmp	r2, r3
 8023ab2:	bf14      	ite	ne
 8023ab4:	6880      	ldrne	r0, [r0, #8]
 8023ab6:	200f      	moveq	r0, #15
 8023ab8:	4770      	bx	lr

08023aba <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj>:
 8023aba:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8023abc:	4605      	mov	r5, r0
 8023abe:	6843      	ldr	r3, [r0, #4]
 8023ac0:	4299      	cmp	r1, r3
 8023ac2:	bf2c      	ite	cs
 8023ac4:	9101      	strcs	r1, [sp, #4]
 8023ac6:	9301      	strcc	r3, [sp, #4]
 8023ac8:	f855 1b08 	ldr.w	r1, [r5], #8
 8023acc:	428d      	cmp	r5, r1
 8023ace:	bf18      	it	ne
 8023ad0:	6882      	ldrne	r2, [r0, #8]
 8023ad2:	4604      	mov	r4, r0
 8023ad4:	9801      	ldr	r0, [sp, #4]
 8023ad6:	bf08      	it	eq
 8023ad8:	220f      	moveq	r2, #15
 8023ada:	4290      	cmp	r0, r2
 8023adc:	d012      	beq.n	8023b04 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0x4a>
 8023ade:	d801      	bhi.n	8023ae4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0x2a>
 8023ae0:	280f      	cmp	r0, #15
 8023ae2:	d911      	bls.n	8023b08 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0x4e>
 8023ae4:	a901      	add	r1, sp, #4
 8023ae6:	4620      	mov	r0, r4
 8023ae8:	f7ff fea0 	bl	802382c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>
 8023aec:	6862      	ldr	r2, [r4, #4]
 8023aee:	6821      	ldr	r1, [r4, #0]
 8023af0:	3201      	adds	r2, #1
 8023af2:	4605      	mov	r5, r0
 8023af4:	f7ff feea 	bl	80238cc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 8023af8:	4620      	mov	r0, r4
 8023afa:	f7ff feb9 	bl	8023870 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
 8023afe:	9b01      	ldr	r3, [sp, #4]
 8023b00:	6025      	str	r5, [r4, #0]
 8023b02:	60a3      	str	r3, [r4, #8]
 8023b04:	b003      	add	sp, #12
 8023b06:	bd30      	pop	{r4, r5, pc}
 8023b08:	428d      	cmp	r5, r1
 8023b0a:	d0fb      	beq.n	8023b04 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0x4a>
 8023b0c:	1c5a      	adds	r2, r3, #1
 8023b0e:	4628      	mov	r0, r5
 8023b10:	f7ff fedc 	bl	80238cc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 8023b14:	6820      	ldr	r0, [r4, #0]
 8023b16:	f7ff fcdb 	bl	80234d0 <_ZdlPv>
 8023b1a:	6025      	str	r5, [r4, #0]
 8023b1c:	e7f2      	b.n	8023b04 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0x4a>

08023b1e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4backEv>:
 8023b1e:	6843      	ldr	r3, [r0, #4]
 8023b20:	6800      	ldr	r0, [r0, #0]
 8023b22:	3b01      	subs	r3, #1
 8023b24:	4418      	add	r0, r3
 8023b26:	4770      	bx	lr

08023b28 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc>:
 8023b28:	4603      	mov	r3, r0
 8023b2a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8023b2c:	f853 2b08 	ldr.w	r2, [r3], #8
 8023b30:	6846      	ldr	r6, [r0, #4]
 8023b32:	429a      	cmp	r2, r3
 8023b34:	bf18      	it	ne
 8023b36:	6883      	ldrne	r3, [r0, #8]
 8023b38:	f106 0501 	add.w	r5, r6, #1
 8023b3c:	bf08      	it	eq
 8023b3e:	230f      	moveq	r3, #15
 8023b40:	429d      	cmp	r5, r3
 8023b42:	4604      	mov	r4, r0
 8023b44:	460f      	mov	r7, r1
 8023b46:	d906      	bls.n	8023b56 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc+0x2e>
 8023b48:	2301      	movs	r3, #1
 8023b4a:	9300      	str	r3, [sp, #0]
 8023b4c:	2300      	movs	r3, #0
 8023b4e:	461a      	mov	r2, r3
 8023b50:	4631      	mov	r1, r6
 8023b52:	f7ff ff00 	bl	8023956 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj>
 8023b56:	6823      	ldr	r3, [r4, #0]
 8023b58:	559f      	strb	r7, [r3, r6]
 8023b5a:	6823      	ldr	r3, [r4, #0]
 8023b5c:	6065      	str	r5, [r4, #4]
 8023b5e:	2200      	movs	r2, #0
 8023b60:	555a      	strb	r2, [r3, r5]
 8023b62:	b003      	add	sp, #12
 8023b64:	bdf0      	pop	{r4, r5, r6, r7, pc}

08023b66 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc>:
 8023b66:	b510      	push	{r4, lr}
 8023b68:	4604      	mov	r4, r0
 8023b6a:	f7ff ffdd 	bl	8023b28 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc>
 8023b6e:	4620      	mov	r0, r4
 8023b70:	bd10      	pop	{r4, pc}

08023b72 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8pop_backEv>:
 8023b72:	b508      	push	{r3, lr}
 8023b74:	6841      	ldr	r1, [r0, #4]
 8023b76:	2201      	movs	r2, #1
 8023b78:	3901      	subs	r1, #1
 8023b7a:	f7ff ff28 	bl	80239ce <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEjj>
 8023b7e:	bd08      	pop	{r3, pc}

08023b80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>:
 8023b80:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023b84:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023b86:	4614      	mov	r4, r2
 8023b88:	4680      	mov	r8, r0
 8023b8a:	462a      	mov	r2, r5
 8023b8c:	4689      	mov	r9, r1
 8023b8e:	461f      	mov	r7, r3
 8023b90:	4621      	mov	r1, r4
 8023b92:	4b39      	ldr	r3, [pc, #228]	; (8023c78 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xf8>)
 8023b94:	f7ff fe82 	bl	802389c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEjjPKc>
 8023b98:	4642      	mov	r2, r8
 8023b9a:	f8d8 3004 	ldr.w	r3, [r8, #4]
 8023b9e:	f852 6b08 	ldr.w	r6, [r2], #8
 8023ba2:	4296      	cmp	r6, r2
 8023ba4:	bf18      	it	ne
 8023ba6:	f8d8 2008 	ldrne.w	r2, [r8, #8]
 8023baa:	eba5 0b04 	sub.w	fp, r5, r4
 8023bae:	eb03 0a0b 	add.w	sl, r3, fp
 8023bb2:	bf08      	it	eq
 8023bb4:	220f      	moveq	r2, #15
 8023bb6:	4552      	cmp	r2, sl
 8023bb8:	d351      	bcc.n	8023c5e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xde>
 8023bba:	444e      	add	r6, r9
 8023bbc:	4639      	mov	r1, r7
 8023bbe:	44a1      	add	r9, r4
 8023bc0:	4640      	mov	r0, r8
 8023bc2:	eba3 0909 	sub.w	r9, r3, r9
 8023bc6:	f7ff fe75 	bl	80238b4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_disjunctEPKc>
 8023bca:	b180      	cbz	r0, 8023bee <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x6e>
 8023bcc:	f1b9 0f00 	cmp.w	r9, #0
 8023bd0:	d006      	beq.n	8023be0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x60>
 8023bd2:	42ac      	cmp	r4, r5
 8023bd4:	d004      	beq.n	8023be0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x60>
 8023bd6:	464a      	mov	r2, r9
 8023bd8:	1931      	adds	r1, r6, r4
 8023bda:	1970      	adds	r0, r6, r5
 8023bdc:	f7ff fe7f 	bl	80238de <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj>
 8023be0:	b315      	cbz	r5, 8023c28 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xa8>
 8023be2:	462a      	mov	r2, r5
 8023be4:	4639      	mov	r1, r7
 8023be6:	4630      	mov	r0, r6
 8023be8:	f7ff fe70 	bl	80238cc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 8023bec:	e01c      	b.n	8023c28 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xa8>
 8023bee:	b135      	cbz	r5, 8023bfe <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x7e>
 8023bf0:	42ac      	cmp	r4, r5
 8023bf2:	d33c      	bcc.n	8023c6e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xee>
 8023bf4:	462a      	mov	r2, r5
 8023bf6:	4639      	mov	r1, r7
 8023bf8:	4630      	mov	r0, r6
 8023bfa:	f7ff fe70 	bl	80238de <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj>
 8023bfe:	f1b9 0f00 	cmp.w	r9, #0
 8023c02:	d011      	beq.n	8023c28 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xa8>
 8023c04:	42ac      	cmp	r4, r5
 8023c06:	d00f      	beq.n	8023c28 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xa8>
 8023c08:	464a      	mov	r2, r9
 8023c0a:	1931      	adds	r1, r6, r4
 8023c0c:	1970      	adds	r0, r6, r5
 8023c0e:	f7ff fe66 	bl	80238de <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj>
 8023c12:	42ac      	cmp	r4, r5
 8023c14:	d208      	bcs.n	8023c28 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xa8>
 8023c16:	4434      	add	r4, r6
 8023c18:	197b      	adds	r3, r7, r5
 8023c1a:	429c      	cmp	r4, r3
 8023c1c:	d30f      	bcc.n	8023c3e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xbe>
 8023c1e:	462a      	mov	r2, r5
 8023c20:	4639      	mov	r1, r7
 8023c22:	4630      	mov	r0, r6
 8023c24:	f7ff fe5b 	bl	80238de <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj>
 8023c28:	f8d8 3000 	ldr.w	r3, [r8]
 8023c2c:	f8c8 a004 	str.w	sl, [r8, #4]
 8023c30:	2200      	movs	r2, #0
 8023c32:	4640      	mov	r0, r8
 8023c34:	f803 200a 	strb.w	r2, [r3, sl]
 8023c38:	b003      	add	sp, #12
 8023c3a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023c3e:	42bc      	cmp	r4, r7
 8023c40:	d803      	bhi.n	8023c4a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xca>
 8023c42:	462a      	mov	r2, r5
 8023c44:	eb07 010b 	add.w	r1, r7, fp
 8023c48:	e7cd      	b.n	8023be6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x66>
 8023c4a:	1be4      	subs	r4, r4, r7
 8023c4c:	4622      	mov	r2, r4
 8023c4e:	4639      	mov	r1, r7
 8023c50:	4630      	mov	r0, r6
 8023c52:	f7ff fe44 	bl	80238de <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj>
 8023c56:	1b2a      	subs	r2, r5, r4
 8023c58:	1971      	adds	r1, r6, r5
 8023c5a:	1930      	adds	r0, r6, r4
 8023c5c:	e7c4      	b.n	8023be8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x68>
 8023c5e:	9500      	str	r5, [sp, #0]
 8023c60:	463b      	mov	r3, r7
 8023c62:	4622      	mov	r2, r4
 8023c64:	4649      	mov	r1, r9
 8023c66:	4640      	mov	r0, r8
 8023c68:	f7ff fe75 	bl	8023956 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj>
 8023c6c:	e7dc      	b.n	8023c28 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xa8>
 8023c6e:	f1b9 0f00 	cmp.w	r9, #0
 8023c72:	d0d0      	beq.n	8023c16 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x96>
 8023c74:	e7c8      	b.n	8023c08 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x88>
 8023c76:	bf00      	nop
 8023c78:	0802a2e9 	.word	0x0802a2e9

08023c7c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjPKcj>:
 8023c7c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8023c7e:	4604      	mov	r4, r0
 8023c80:	4615      	mov	r5, r2
 8023c82:	4a09      	ldr	r2, [pc, #36]	; (8023ca8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjPKcj+0x2c>)
 8023c84:	9303      	str	r3, [sp, #12]
 8023c86:	460e      	mov	r6, r1
 8023c88:	f7ff fdfa 	bl	8023880 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_checkEjPKc>
 8023c8c:	6862      	ldr	r2, [r4, #4]
 8023c8e:	9b03      	ldr	r3, [sp, #12]
 8023c90:	1b92      	subs	r2, r2, r6
 8023c92:	4601      	mov	r1, r0
 8023c94:	42aa      	cmp	r2, r5
 8023c96:	9808      	ldr	r0, [sp, #32]
 8023c98:	9000      	str	r0, [sp, #0]
 8023c9a:	bf28      	it	cs
 8023c9c:	462a      	movcs	r2, r5
 8023c9e:	4620      	mov	r0, r4
 8023ca0:	f7ff ff6e 	bl	8023b80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>
 8023ca4:	b004      	add	sp, #16
 8023ca6:	bd70      	pop	{r4, r5, r6, pc}
 8023ca8:	0802a2d3 	.word	0x0802a2d3

08023cac <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjRKS4_>:
 8023cac:	b507      	push	{r0, r1, r2, lr}
 8023cae:	6853      	ldr	r3, [r2, #4]
 8023cb0:	9300      	str	r3, [sp, #0]
 8023cb2:	6813      	ldr	r3, [r2, #0]
 8023cb4:	2200      	movs	r2, #0
 8023cb6:	f7ff ffe1 	bl	8023c7c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjPKcj>
 8023cba:	b003      	add	sp, #12
 8023cbc:	f85d fb04 	ldr.w	pc, [sp], #4

08023cc0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjPKc>:
 8023cc0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8023cc2:	4604      	mov	r4, r0
 8023cc4:	4610      	mov	r0, r2
 8023cc6:	9103      	str	r1, [sp, #12]
 8023cc8:	9202      	str	r2, [sp, #8]
 8023cca:	f7dc faf1 	bl	80002b0 <strlen>
 8023cce:	9b02      	ldr	r3, [sp, #8]
 8023cd0:	9000      	str	r0, [sp, #0]
 8023cd2:	9903      	ldr	r1, [sp, #12]
 8023cd4:	2200      	movs	r2, #0
 8023cd6:	4620      	mov	r0, r4
 8023cd8:	f7ff ffd0 	bl	8023c7c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjPKcj>
 8023cdc:	b004      	add	sp, #16
 8023cde:	bd10      	pop	{r4, pc}

08023ce0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj>:
 8023ce0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8023ce2:	4604      	mov	r4, r0
 8023ce4:	4623      	mov	r3, r4
 8023ce6:	6840      	ldr	r0, [r0, #4]
 8023ce8:	f853 6b08 	ldr.w	r6, [r3], #8
 8023cec:	429e      	cmp	r6, r3
 8023cee:	bf18      	it	ne
 8023cf0:	68a3      	ldrne	r3, [r4, #8]
 8023cf2:	eb00 0502 	add.w	r5, r0, r2
 8023cf6:	bf08      	it	eq
 8023cf8:	230f      	moveq	r3, #15
 8023cfa:	429d      	cmp	r5, r3
 8023cfc:	d80a      	bhi.n	8023d14 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj+0x34>
 8023cfe:	b112      	cbz	r2, 8023d06 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj+0x26>
 8023d00:	4430      	add	r0, r6
 8023d02:	f7ff fde3 	bl	80238cc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 8023d06:	6823      	ldr	r3, [r4, #0]
 8023d08:	6065      	str	r5, [r4, #4]
 8023d0a:	2200      	movs	r2, #0
 8023d0c:	4620      	mov	r0, r4
 8023d0e:	555a      	strb	r2, [r3, r5]
 8023d10:	b002      	add	sp, #8
 8023d12:	bd70      	pop	{r4, r5, r6, pc}
 8023d14:	9200      	str	r2, [sp, #0]
 8023d16:	460b      	mov	r3, r1
 8023d18:	2200      	movs	r2, #0
 8023d1a:	4601      	mov	r1, r0
 8023d1c:	4620      	mov	r0, r4
 8023d1e:	f7ff fe1a 	bl	8023956 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj>
 8023d22:	e7f0      	b.n	8023d06 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj+0x26>

08023d24 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_>:
 8023d24:	b508      	push	{r3, lr}
 8023d26:	e9d1 1200 	ldrd	r1, r2, [r1]
 8023d2a:	f7ff ffd9 	bl	8023ce0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj>
 8023d2e:	bd08      	pop	{r3, pc}

08023d30 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLERKS4_>:
 8023d30:	b508      	push	{r3, lr}
 8023d32:	f7ff fff7 	bl	8023d24 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_>
 8023d36:	bd08      	pop	{r3, pc}

08023d38 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcj>:
 8023d38:	b570      	push	{r4, r5, r6, lr}
 8023d3a:	4b06      	ldr	r3, [pc, #24]	; (8023d54 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcj+0x1c>)
 8023d3c:	4604      	mov	r4, r0
 8023d3e:	460d      	mov	r5, r1
 8023d40:	4616      	mov	r6, r2
 8023d42:	2100      	movs	r1, #0
 8023d44:	f7ff fdaa 	bl	802389c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEjjPKc>
 8023d48:	4632      	mov	r2, r6
 8023d4a:	4629      	mov	r1, r5
 8023d4c:	4620      	mov	r0, r4
 8023d4e:	f7ff ffc7 	bl	8023ce0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj>
 8023d52:	bd70      	pop	{r4, r5, r6, pc}
 8023d54:	0802a302 	.word	0x0802a302

08023d58 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc>:
 8023d58:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8023d5a:	4604      	mov	r4, r0
 8023d5c:	4608      	mov	r0, r1
 8023d5e:	460d      	mov	r5, r1
 8023d60:	f7dc faa6 	bl	80002b0 <strlen>
 8023d64:	4b06      	ldr	r3, [pc, #24]	; (8023d80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc+0x28>)
 8023d66:	9001      	str	r0, [sp, #4]
 8023d68:	4602      	mov	r2, r0
 8023d6a:	2100      	movs	r1, #0
 8023d6c:	4620      	mov	r0, r4
 8023d6e:	f7ff fd95 	bl	802389c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEjjPKc>
 8023d72:	9a01      	ldr	r2, [sp, #4]
 8023d74:	4629      	mov	r1, r5
 8023d76:	4620      	mov	r0, r4
 8023d78:	f7ff ffb2 	bl	8023ce0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj>
 8023d7c:	b003      	add	sp, #12
 8023d7e:	bd30      	pop	{r4, r5, pc}
 8023d80:	0802a302 	.word	0x0802a302

08023d84 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc>:
 8023d84:	b508      	push	{r3, lr}
 8023d86:	f7ff ffe7 	bl	8023d58 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc>
 8023d8a:	bd08      	pop	{r3, pc}

08023d8c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>:
 8023d8c:	6800      	ldr	r0, [r0, #0]
 8023d8e:	4770      	bx	lr

08023d90 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_>:
 8023d90:	b538      	push	{r3, r4, r5, lr}
 8023d92:	6845      	ldr	r5, [r0, #4]
 8023d94:	684c      	ldr	r4, [r1, #4]
 8023d96:	6800      	ldr	r0, [r0, #0]
 8023d98:	6809      	ldr	r1, [r1, #0]
 8023d9a:	42a5      	cmp	r5, r4
 8023d9c:	462a      	mov	r2, r5
 8023d9e:	bf28      	it	cs
 8023da0:	4622      	movcs	r2, r4
 8023da2:	f7ff fd2c 	bl	80237fe <_ZNSt11char_traitsIcE7compareEPKcS2_j>
 8023da6:	b900      	cbnz	r0, 8023daa <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_+0x1a>
 8023da8:	1b28      	subs	r0, r5, r4
 8023daa:	bd38      	pop	{r3, r4, r5, pc}

08023dac <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc>:
 8023dac:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8023dae:	6846      	ldr	r6, [r0, #4]
 8023db0:	9101      	str	r1, [sp, #4]
 8023db2:	4605      	mov	r5, r0
 8023db4:	4608      	mov	r0, r1
 8023db6:	f7dc fa7b 	bl	80002b0 <strlen>
 8023dba:	4286      	cmp	r6, r0
 8023dbc:	4604      	mov	r4, r0
 8023dbe:	4632      	mov	r2, r6
 8023dc0:	9901      	ldr	r1, [sp, #4]
 8023dc2:	bf28      	it	cs
 8023dc4:	4602      	movcs	r2, r0
 8023dc6:	6828      	ldr	r0, [r5, #0]
 8023dc8:	f7ff fd19 	bl	80237fe <_ZNSt11char_traitsIcE7compareEPKcS2_j>
 8023dcc:	b900      	cbnz	r0, 8023dd0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc+0x24>
 8023dce:	1b30      	subs	r0, r6, r4
 8023dd0:	b002      	add	sp, #8
 8023dd2:	bd70      	pop	{r4, r5, r6, pc}

08023dd4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_>:
 8023dd4:	6001      	str	r1, [r0, #0]
 8023dd6:	4770      	bx	lr

08023dd8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>:
 8023dd8:	b538      	push	{r3, r4, r5, lr}
 8023dda:	f100 0308 	add.w	r3, r0, #8
 8023dde:	6003      	str	r3, [r0, #0]
 8023de0:	e9d1 5200 	ldrd	r5, r2, [r1]
 8023de4:	4604      	mov	r4, r0
 8023de6:	f04f 0300 	mov.w	r3, #0
 8023dea:	442a      	add	r2, r5
 8023dec:	4629      	mov	r1, r5
 8023dee:	f7ee ff97 	bl	8012d20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag>
 8023df2:	4620      	mov	r0, r4
 8023df4:	bd38      	pop	{r3, r4, r5, pc}
	...

08023df8 <_ZSt15get_new_handlerv>:
 8023df8:	4b02      	ldr	r3, [pc, #8]	; (8023e04 <_ZSt15get_new_handlerv+0xc>)
 8023dfa:	6818      	ldr	r0, [r3, #0]
 8023dfc:	f3bf 8f5b 	dmb	ish
 8023e00:	4770      	bx	lr
 8023e02:	bf00      	nop
 8023e04:	20000844 	.word	0x20000844

08023e08 <pow>:
 8023e08:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8023e0c:	ec59 8b10 	vmov	r8, r9, d0
 8023e10:	ec57 6b11 	vmov	r6, r7, d1
 8023e14:	f000 f8a8 	bl	8023f68 <__ieee754_pow>
 8023e18:	4b4e      	ldr	r3, [pc, #312]	; (8023f54 <pow+0x14c>)
 8023e1a:	f993 3000 	ldrsb.w	r3, [r3]
 8023e1e:	3301      	adds	r3, #1
 8023e20:	ec55 4b10 	vmov	r4, r5, d0
 8023e24:	d015      	beq.n	8023e52 <pow+0x4a>
 8023e26:	4632      	mov	r2, r6
 8023e28:	463b      	mov	r3, r7
 8023e2a:	4630      	mov	r0, r6
 8023e2c:	4639      	mov	r1, r7
 8023e2e:	f7dc fe9d 	bl	8000b6c <__aeabi_dcmpun>
 8023e32:	b970      	cbnz	r0, 8023e52 <pow+0x4a>
 8023e34:	4642      	mov	r2, r8
 8023e36:	464b      	mov	r3, r9
 8023e38:	4640      	mov	r0, r8
 8023e3a:	4649      	mov	r1, r9
 8023e3c:	f7dc fe96 	bl	8000b6c <__aeabi_dcmpun>
 8023e40:	2200      	movs	r2, #0
 8023e42:	2300      	movs	r3, #0
 8023e44:	b148      	cbz	r0, 8023e5a <pow+0x52>
 8023e46:	4630      	mov	r0, r6
 8023e48:	4639      	mov	r1, r7
 8023e4a:	f7dc fe5d 	bl	8000b08 <__aeabi_dcmpeq>
 8023e4e:	2800      	cmp	r0, #0
 8023e50:	d17d      	bne.n	8023f4e <pow+0x146>
 8023e52:	ec45 4b10 	vmov	d0, r4, r5
 8023e56:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8023e5a:	4640      	mov	r0, r8
 8023e5c:	4649      	mov	r1, r9
 8023e5e:	f7dc fe53 	bl	8000b08 <__aeabi_dcmpeq>
 8023e62:	b1e0      	cbz	r0, 8023e9e <pow+0x96>
 8023e64:	2200      	movs	r2, #0
 8023e66:	2300      	movs	r3, #0
 8023e68:	4630      	mov	r0, r6
 8023e6a:	4639      	mov	r1, r7
 8023e6c:	f7dc fe4c 	bl	8000b08 <__aeabi_dcmpeq>
 8023e70:	2800      	cmp	r0, #0
 8023e72:	d16c      	bne.n	8023f4e <pow+0x146>
 8023e74:	ec47 6b10 	vmov	d0, r6, r7
 8023e78:	f000 fe55 	bl	8024b26 <finite>
 8023e7c:	2800      	cmp	r0, #0
 8023e7e:	d0e8      	beq.n	8023e52 <pow+0x4a>
 8023e80:	2200      	movs	r2, #0
 8023e82:	2300      	movs	r3, #0
 8023e84:	4630      	mov	r0, r6
 8023e86:	4639      	mov	r1, r7
 8023e88:	f7dc fe48 	bl	8000b1c <__aeabi_dcmplt>
 8023e8c:	2800      	cmp	r0, #0
 8023e8e:	d0e0      	beq.n	8023e52 <pow+0x4a>
 8023e90:	f000 ff7e 	bl	8024d90 <__errno>
 8023e94:	2321      	movs	r3, #33	; 0x21
 8023e96:	6003      	str	r3, [r0, #0]
 8023e98:	2400      	movs	r4, #0
 8023e9a:	4d2f      	ldr	r5, [pc, #188]	; (8023f58 <pow+0x150>)
 8023e9c:	e7d9      	b.n	8023e52 <pow+0x4a>
 8023e9e:	ec45 4b10 	vmov	d0, r4, r5
 8023ea2:	f000 fe40 	bl	8024b26 <finite>
 8023ea6:	bbb8      	cbnz	r0, 8023f18 <pow+0x110>
 8023ea8:	ec49 8b10 	vmov	d0, r8, r9
 8023eac:	f000 fe3b 	bl	8024b26 <finite>
 8023eb0:	b390      	cbz	r0, 8023f18 <pow+0x110>
 8023eb2:	ec47 6b10 	vmov	d0, r6, r7
 8023eb6:	f000 fe36 	bl	8024b26 <finite>
 8023eba:	b368      	cbz	r0, 8023f18 <pow+0x110>
 8023ebc:	4622      	mov	r2, r4
 8023ebe:	462b      	mov	r3, r5
 8023ec0:	4620      	mov	r0, r4
 8023ec2:	4629      	mov	r1, r5
 8023ec4:	f7dc fe52 	bl	8000b6c <__aeabi_dcmpun>
 8023ec8:	b160      	cbz	r0, 8023ee4 <pow+0xdc>
 8023eca:	f000 ff61 	bl	8024d90 <__errno>
 8023ece:	2321      	movs	r3, #33	; 0x21
 8023ed0:	6003      	str	r3, [r0, #0]
 8023ed2:	2200      	movs	r2, #0
 8023ed4:	2300      	movs	r3, #0
 8023ed6:	4610      	mov	r0, r2
 8023ed8:	4619      	mov	r1, r3
 8023eda:	f7dc fcd7 	bl	800088c <__aeabi_ddiv>
 8023ede:	4604      	mov	r4, r0
 8023ee0:	460d      	mov	r5, r1
 8023ee2:	e7b6      	b.n	8023e52 <pow+0x4a>
 8023ee4:	f000 ff54 	bl	8024d90 <__errno>
 8023ee8:	2322      	movs	r3, #34	; 0x22
 8023eea:	6003      	str	r3, [r0, #0]
 8023eec:	2200      	movs	r2, #0
 8023eee:	2300      	movs	r3, #0
 8023ef0:	4640      	mov	r0, r8
 8023ef2:	4649      	mov	r1, r9
 8023ef4:	f7dc fe12 	bl	8000b1c <__aeabi_dcmplt>
 8023ef8:	2400      	movs	r4, #0
 8023efa:	b158      	cbz	r0, 8023f14 <pow+0x10c>
 8023efc:	ec47 6b10 	vmov	d0, r6, r7
 8023f00:	f000 fe26 	bl	8024b50 <rint>
 8023f04:	4632      	mov	r2, r6
 8023f06:	ec51 0b10 	vmov	r0, r1, d0
 8023f0a:	463b      	mov	r3, r7
 8023f0c:	f7dc fdfc 	bl	8000b08 <__aeabi_dcmpeq>
 8023f10:	2800      	cmp	r0, #0
 8023f12:	d0c2      	beq.n	8023e9a <pow+0x92>
 8023f14:	4d11      	ldr	r5, [pc, #68]	; (8023f5c <pow+0x154>)
 8023f16:	e79c      	b.n	8023e52 <pow+0x4a>
 8023f18:	2200      	movs	r2, #0
 8023f1a:	2300      	movs	r3, #0
 8023f1c:	4620      	mov	r0, r4
 8023f1e:	4629      	mov	r1, r5
 8023f20:	f7dc fdf2 	bl	8000b08 <__aeabi_dcmpeq>
 8023f24:	2800      	cmp	r0, #0
 8023f26:	d094      	beq.n	8023e52 <pow+0x4a>
 8023f28:	ec49 8b10 	vmov	d0, r8, r9
 8023f2c:	f000 fdfb 	bl	8024b26 <finite>
 8023f30:	2800      	cmp	r0, #0
 8023f32:	d08e      	beq.n	8023e52 <pow+0x4a>
 8023f34:	ec47 6b10 	vmov	d0, r6, r7
 8023f38:	f000 fdf5 	bl	8024b26 <finite>
 8023f3c:	2800      	cmp	r0, #0
 8023f3e:	d088      	beq.n	8023e52 <pow+0x4a>
 8023f40:	f000 ff26 	bl	8024d90 <__errno>
 8023f44:	2322      	movs	r3, #34	; 0x22
 8023f46:	6003      	str	r3, [r0, #0]
 8023f48:	2400      	movs	r4, #0
 8023f4a:	2500      	movs	r5, #0
 8023f4c:	e781      	b.n	8023e52 <pow+0x4a>
 8023f4e:	4d04      	ldr	r5, [pc, #16]	; (8023f60 <pow+0x158>)
 8023f50:	2400      	movs	r4, #0
 8023f52:	e77e      	b.n	8023e52 <pow+0x4a>
 8023f54:	2000000d 	.word	0x2000000d
 8023f58:	fff00000 	.word	0xfff00000
 8023f5c:	7ff00000 	.word	0x7ff00000
 8023f60:	3ff00000 	.word	0x3ff00000
 8023f64:	00000000 	.word	0x00000000

08023f68 <__ieee754_pow>:
 8023f68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023f6c:	ed2d 8b06 	vpush	{d8-d10}
 8023f70:	b08d      	sub	sp, #52	; 0x34
 8023f72:	ed8d 1b02 	vstr	d1, [sp, #8]
 8023f76:	e9dd 0702 	ldrd	r0, r7, [sp, #8]
 8023f7a:	f027 4600 	bic.w	r6, r7, #2147483648	; 0x80000000
 8023f7e:	ea56 0100 	orrs.w	r1, r6, r0
 8023f82:	ec53 2b10 	vmov	r2, r3, d0
 8023f86:	f000 84d1 	beq.w	802492c <__ieee754_pow+0x9c4>
 8023f8a:	497f      	ldr	r1, [pc, #508]	; (8024188 <__ieee754_pow+0x220>)
 8023f8c:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
 8023f90:	428c      	cmp	r4, r1
 8023f92:	ee10 8a10 	vmov	r8, s0
 8023f96:	4699      	mov	r9, r3
 8023f98:	dc09      	bgt.n	8023fae <__ieee754_pow+0x46>
 8023f9a:	d103      	bne.n	8023fa4 <__ieee754_pow+0x3c>
 8023f9c:	b97a      	cbnz	r2, 8023fbe <__ieee754_pow+0x56>
 8023f9e:	42a6      	cmp	r6, r4
 8023fa0:	dd02      	ble.n	8023fa8 <__ieee754_pow+0x40>
 8023fa2:	e00c      	b.n	8023fbe <__ieee754_pow+0x56>
 8023fa4:	428e      	cmp	r6, r1
 8023fa6:	dc02      	bgt.n	8023fae <__ieee754_pow+0x46>
 8023fa8:	428e      	cmp	r6, r1
 8023faa:	d110      	bne.n	8023fce <__ieee754_pow+0x66>
 8023fac:	b178      	cbz	r0, 8023fce <__ieee754_pow+0x66>
 8023fae:	f104 4440 	add.w	r4, r4, #3221225472	; 0xc0000000
 8023fb2:	f504 1480 	add.w	r4, r4, #1048576	; 0x100000
 8023fb6:	ea54 0308 	orrs.w	r3, r4, r8
 8023fba:	f000 84b7 	beq.w	802492c <__ieee754_pow+0x9c4>
 8023fbe:	4873      	ldr	r0, [pc, #460]	; (802418c <__ieee754_pow+0x224>)
 8023fc0:	b00d      	add	sp, #52	; 0x34
 8023fc2:	ecbd 8b06 	vpop	{d8-d10}
 8023fc6:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023fca:	f000 bdb9 	b.w	8024b40 <nan>
 8023fce:	f1b9 0f00 	cmp.w	r9, #0
 8023fd2:	da36      	bge.n	8024042 <__ieee754_pow+0xda>
 8023fd4:	496e      	ldr	r1, [pc, #440]	; (8024190 <__ieee754_pow+0x228>)
 8023fd6:	428e      	cmp	r6, r1
 8023fd8:	dc51      	bgt.n	802407e <__ieee754_pow+0x116>
 8023fda:	f1a1 7154 	sub.w	r1, r1, #55574528	; 0x3500000
 8023fde:	428e      	cmp	r6, r1
 8023fe0:	f340 84af 	ble.w	8024942 <__ieee754_pow+0x9da>
 8023fe4:	1531      	asrs	r1, r6, #20
 8023fe6:	f2a1 31ff 	subw	r1, r1, #1023	; 0x3ff
 8023fea:	2914      	cmp	r1, #20
 8023fec:	dd0f      	ble.n	802400e <__ieee754_pow+0xa6>
 8023fee:	f1c1 0134 	rsb	r1, r1, #52	; 0x34
 8023ff2:	fa20 fc01 	lsr.w	ip, r0, r1
 8023ff6:	fa0c f101 	lsl.w	r1, ip, r1
 8023ffa:	4281      	cmp	r1, r0
 8023ffc:	f040 84a1 	bne.w	8024942 <__ieee754_pow+0x9da>
 8024000:	f00c 0c01 	and.w	ip, ip, #1
 8024004:	f1cc 0102 	rsb	r1, ip, #2
 8024008:	9100      	str	r1, [sp, #0]
 802400a:	b180      	cbz	r0, 802402e <__ieee754_pow+0xc6>
 802400c:	e059      	b.n	80240c2 <__ieee754_pow+0x15a>
 802400e:	2800      	cmp	r0, #0
 8024010:	d155      	bne.n	80240be <__ieee754_pow+0x156>
 8024012:	f1c1 0114 	rsb	r1, r1, #20
 8024016:	fa46 fc01 	asr.w	ip, r6, r1
 802401a:	fa0c f101 	lsl.w	r1, ip, r1
 802401e:	42b1      	cmp	r1, r6
 8024020:	f040 848c 	bne.w	802493c <__ieee754_pow+0x9d4>
 8024024:	f00c 0c01 	and.w	ip, ip, #1
 8024028:	f1cc 0102 	rsb	r1, ip, #2
 802402c:	9100      	str	r1, [sp, #0]
 802402e:	4959      	ldr	r1, [pc, #356]	; (8024194 <__ieee754_pow+0x22c>)
 8024030:	428e      	cmp	r6, r1
 8024032:	d12d      	bne.n	8024090 <__ieee754_pow+0x128>
 8024034:	2f00      	cmp	r7, #0
 8024036:	da79      	bge.n	802412c <__ieee754_pow+0x1c4>
 8024038:	4956      	ldr	r1, [pc, #344]	; (8024194 <__ieee754_pow+0x22c>)
 802403a:	2000      	movs	r0, #0
 802403c:	f7dc fc26 	bl	800088c <__aeabi_ddiv>
 8024040:	e016      	b.n	8024070 <__ieee754_pow+0x108>
 8024042:	2100      	movs	r1, #0
 8024044:	9100      	str	r1, [sp, #0]
 8024046:	2800      	cmp	r0, #0
 8024048:	d13b      	bne.n	80240c2 <__ieee754_pow+0x15a>
 802404a:	494f      	ldr	r1, [pc, #316]	; (8024188 <__ieee754_pow+0x220>)
 802404c:	428e      	cmp	r6, r1
 802404e:	d1ee      	bne.n	802402e <__ieee754_pow+0xc6>
 8024050:	f104 4340 	add.w	r3, r4, #3221225472	; 0xc0000000
 8024054:	f503 1380 	add.w	r3, r3, #1048576	; 0x100000
 8024058:	ea53 0308 	orrs.w	r3, r3, r8
 802405c:	f000 8466 	beq.w	802492c <__ieee754_pow+0x9c4>
 8024060:	4b4d      	ldr	r3, [pc, #308]	; (8024198 <__ieee754_pow+0x230>)
 8024062:	429c      	cmp	r4, r3
 8024064:	dd0d      	ble.n	8024082 <__ieee754_pow+0x11a>
 8024066:	2f00      	cmp	r7, #0
 8024068:	f280 8464 	bge.w	8024934 <__ieee754_pow+0x9cc>
 802406c:	2000      	movs	r0, #0
 802406e:	2100      	movs	r1, #0
 8024070:	ec41 0b10 	vmov	d0, r0, r1
 8024074:	b00d      	add	sp, #52	; 0x34
 8024076:	ecbd 8b06 	vpop	{d8-d10}
 802407a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802407e:	2102      	movs	r1, #2
 8024080:	e7e0      	b.n	8024044 <__ieee754_pow+0xdc>
 8024082:	2f00      	cmp	r7, #0
 8024084:	daf2      	bge.n	802406c <__ieee754_pow+0x104>
 8024086:	e9dd 0302 	ldrd	r0, r3, [sp, #8]
 802408a:	f103 4100 	add.w	r1, r3, #2147483648	; 0x80000000
 802408e:	e7ef      	b.n	8024070 <__ieee754_pow+0x108>
 8024090:	f1b7 4f80 	cmp.w	r7, #1073741824	; 0x40000000
 8024094:	d104      	bne.n	80240a0 <__ieee754_pow+0x138>
 8024096:	4610      	mov	r0, r2
 8024098:	4619      	mov	r1, r3
 802409a:	f7dc facd 	bl	8000638 <__aeabi_dmul>
 802409e:	e7e7      	b.n	8024070 <__ieee754_pow+0x108>
 80240a0:	493e      	ldr	r1, [pc, #248]	; (802419c <__ieee754_pow+0x234>)
 80240a2:	428f      	cmp	r7, r1
 80240a4:	d10d      	bne.n	80240c2 <__ieee754_pow+0x15a>
 80240a6:	f1b9 0f00 	cmp.w	r9, #0
 80240aa:	db0a      	blt.n	80240c2 <__ieee754_pow+0x15a>
 80240ac:	ec43 2b10 	vmov	d0, r2, r3
 80240b0:	b00d      	add	sp, #52	; 0x34
 80240b2:	ecbd 8b06 	vpop	{d8-d10}
 80240b6:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80240ba:	f000 bc77 	b.w	80249ac <__ieee754_sqrt>
 80240be:	2100      	movs	r1, #0
 80240c0:	9100      	str	r1, [sp, #0]
 80240c2:	ec43 2b10 	vmov	d0, r2, r3
 80240c6:	e9cd 2304 	strd	r2, r3, [sp, #16]
 80240ca:	f000 fd23 	bl	8024b14 <fabs>
 80240ce:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80240d2:	ec51 0b10 	vmov	r0, r1, d0
 80240d6:	f1b8 0f00 	cmp.w	r8, #0
 80240da:	d12a      	bne.n	8024132 <__ieee754_pow+0x1ca>
 80240dc:	b12c      	cbz	r4, 80240ea <__ieee754_pow+0x182>
 80240de:	f8df c0b4 	ldr.w	ip, [pc, #180]	; 8024194 <__ieee754_pow+0x22c>
 80240e2:	f029 4e40 	bic.w	lr, r9, #3221225472	; 0xc0000000
 80240e6:	45e6      	cmp	lr, ip
 80240e8:	d123      	bne.n	8024132 <__ieee754_pow+0x1ca>
 80240ea:	2f00      	cmp	r7, #0
 80240ec:	da05      	bge.n	80240fa <__ieee754_pow+0x192>
 80240ee:	4602      	mov	r2, r0
 80240f0:	460b      	mov	r3, r1
 80240f2:	2000      	movs	r0, #0
 80240f4:	4927      	ldr	r1, [pc, #156]	; (8024194 <__ieee754_pow+0x22c>)
 80240f6:	f7dc fbc9 	bl	800088c <__aeabi_ddiv>
 80240fa:	f1b9 0f00 	cmp.w	r9, #0
 80240fe:	dab7      	bge.n	8024070 <__ieee754_pow+0x108>
 8024100:	9b00      	ldr	r3, [sp, #0]
 8024102:	f104 4440 	add.w	r4, r4, #3221225472	; 0xc0000000
 8024106:	f504 1480 	add.w	r4, r4, #1048576	; 0x100000
 802410a:	4323      	orrs	r3, r4
 802410c:	d108      	bne.n	8024120 <__ieee754_pow+0x1b8>
 802410e:	4602      	mov	r2, r0
 8024110:	460b      	mov	r3, r1
 8024112:	4610      	mov	r0, r2
 8024114:	4619      	mov	r1, r3
 8024116:	f7dc f8d7 	bl	80002c8 <__aeabi_dsub>
 802411a:	4602      	mov	r2, r0
 802411c:	460b      	mov	r3, r1
 802411e:	e78d      	b.n	802403c <__ieee754_pow+0xd4>
 8024120:	9b00      	ldr	r3, [sp, #0]
 8024122:	2b01      	cmp	r3, #1
 8024124:	d1a4      	bne.n	8024070 <__ieee754_pow+0x108>
 8024126:	4602      	mov	r2, r0
 8024128:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 802412c:	4610      	mov	r0, r2
 802412e:	4619      	mov	r1, r3
 8024130:	e79e      	b.n	8024070 <__ieee754_pow+0x108>
 8024132:	ea4f 7cd9 	mov.w	ip, r9, lsr #31
 8024136:	f10c 35ff 	add.w	r5, ip, #4294967295
 802413a:	950a      	str	r5, [sp, #40]	; 0x28
 802413c:	9d00      	ldr	r5, [sp, #0]
 802413e:	46ac      	mov	ip, r5
 8024140:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8024142:	ea5c 0505 	orrs.w	r5, ip, r5
 8024146:	d0e4      	beq.n	8024112 <__ieee754_pow+0x1aa>
 8024148:	4b15      	ldr	r3, [pc, #84]	; (80241a0 <__ieee754_pow+0x238>)
 802414a:	429e      	cmp	r6, r3
 802414c:	f340 80fc 	ble.w	8024348 <__ieee754_pow+0x3e0>
 8024150:	f103 7304 	add.w	r3, r3, #34603008	; 0x2100000
 8024154:	429e      	cmp	r6, r3
 8024156:	4b10      	ldr	r3, [pc, #64]	; (8024198 <__ieee754_pow+0x230>)
 8024158:	dd07      	ble.n	802416a <__ieee754_pow+0x202>
 802415a:	429c      	cmp	r4, r3
 802415c:	dc0a      	bgt.n	8024174 <__ieee754_pow+0x20c>
 802415e:	2f00      	cmp	r7, #0
 8024160:	da84      	bge.n	802406c <__ieee754_pow+0x104>
 8024162:	a307      	add	r3, pc, #28	; (adr r3, 8024180 <__ieee754_pow+0x218>)
 8024164:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024168:	e795      	b.n	8024096 <__ieee754_pow+0x12e>
 802416a:	429c      	cmp	r4, r3
 802416c:	dbf7      	blt.n	802415e <__ieee754_pow+0x1f6>
 802416e:	4b09      	ldr	r3, [pc, #36]	; (8024194 <__ieee754_pow+0x22c>)
 8024170:	429c      	cmp	r4, r3
 8024172:	dd17      	ble.n	80241a4 <__ieee754_pow+0x23c>
 8024174:	2f00      	cmp	r7, #0
 8024176:	dcf4      	bgt.n	8024162 <__ieee754_pow+0x1fa>
 8024178:	e778      	b.n	802406c <__ieee754_pow+0x104>
 802417a:	bf00      	nop
 802417c:	f3af 8000 	nop.w
 8024180:	8800759c 	.word	0x8800759c
 8024184:	7e37e43c 	.word	0x7e37e43c
 8024188:	7ff00000 	.word	0x7ff00000
 802418c:	0802a7a0 	.word	0x0802a7a0
 8024190:	433fffff 	.word	0x433fffff
 8024194:	3ff00000 	.word	0x3ff00000
 8024198:	3fefffff 	.word	0x3fefffff
 802419c:	3fe00000 	.word	0x3fe00000
 80241a0:	41e00000 	.word	0x41e00000
 80241a4:	4b64      	ldr	r3, [pc, #400]	; (8024338 <__ieee754_pow+0x3d0>)
 80241a6:	2200      	movs	r2, #0
 80241a8:	f7dc f88e 	bl	80002c8 <__aeabi_dsub>
 80241ac:	a356      	add	r3, pc, #344	; (adr r3, 8024308 <__ieee754_pow+0x3a0>)
 80241ae:	e9d3 2300 	ldrd	r2, r3, [r3]
 80241b2:	4604      	mov	r4, r0
 80241b4:	460d      	mov	r5, r1
 80241b6:	f7dc fa3f 	bl	8000638 <__aeabi_dmul>
 80241ba:	a355      	add	r3, pc, #340	; (adr r3, 8024310 <__ieee754_pow+0x3a8>)
 80241bc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80241c0:	4606      	mov	r6, r0
 80241c2:	460f      	mov	r7, r1
 80241c4:	4620      	mov	r0, r4
 80241c6:	4629      	mov	r1, r5
 80241c8:	f7dc fa36 	bl	8000638 <__aeabi_dmul>
 80241cc:	4b5b      	ldr	r3, [pc, #364]	; (802433c <__ieee754_pow+0x3d4>)
 80241ce:	4682      	mov	sl, r0
 80241d0:	468b      	mov	fp, r1
 80241d2:	2200      	movs	r2, #0
 80241d4:	4620      	mov	r0, r4
 80241d6:	4629      	mov	r1, r5
 80241d8:	f7dc fa2e 	bl	8000638 <__aeabi_dmul>
 80241dc:	4602      	mov	r2, r0
 80241de:	460b      	mov	r3, r1
 80241e0:	a14d      	add	r1, pc, #308	; (adr r1, 8024318 <__ieee754_pow+0x3b0>)
 80241e2:	e9d1 0100 	ldrd	r0, r1, [r1]
 80241e6:	f7dc f86f 	bl	80002c8 <__aeabi_dsub>
 80241ea:	4622      	mov	r2, r4
 80241ec:	462b      	mov	r3, r5
 80241ee:	f7dc fa23 	bl	8000638 <__aeabi_dmul>
 80241f2:	4602      	mov	r2, r0
 80241f4:	460b      	mov	r3, r1
 80241f6:	2000      	movs	r0, #0
 80241f8:	4951      	ldr	r1, [pc, #324]	; (8024340 <__ieee754_pow+0x3d8>)
 80241fa:	f7dc f865 	bl	80002c8 <__aeabi_dsub>
 80241fe:	4622      	mov	r2, r4
 8024200:	4680      	mov	r8, r0
 8024202:	4689      	mov	r9, r1
 8024204:	462b      	mov	r3, r5
 8024206:	4620      	mov	r0, r4
 8024208:	4629      	mov	r1, r5
 802420a:	f7dc fa15 	bl	8000638 <__aeabi_dmul>
 802420e:	4602      	mov	r2, r0
 8024210:	460b      	mov	r3, r1
 8024212:	4640      	mov	r0, r8
 8024214:	4649      	mov	r1, r9
 8024216:	f7dc fa0f 	bl	8000638 <__aeabi_dmul>
 802421a:	a341      	add	r3, pc, #260	; (adr r3, 8024320 <__ieee754_pow+0x3b8>)
 802421c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024220:	f7dc fa0a 	bl	8000638 <__aeabi_dmul>
 8024224:	4602      	mov	r2, r0
 8024226:	460b      	mov	r3, r1
 8024228:	4650      	mov	r0, sl
 802422a:	4659      	mov	r1, fp
 802422c:	f7dc f84c 	bl	80002c8 <__aeabi_dsub>
 8024230:	4602      	mov	r2, r0
 8024232:	460b      	mov	r3, r1
 8024234:	4680      	mov	r8, r0
 8024236:	4689      	mov	r9, r1
 8024238:	4630      	mov	r0, r6
 802423a:	4639      	mov	r1, r7
 802423c:	f7dc f846 	bl	80002cc <__adddf3>
 8024240:	2400      	movs	r4, #0
 8024242:	4632      	mov	r2, r6
 8024244:	463b      	mov	r3, r7
 8024246:	4620      	mov	r0, r4
 8024248:	460d      	mov	r5, r1
 802424a:	f7dc f83d 	bl	80002c8 <__aeabi_dsub>
 802424e:	4602      	mov	r2, r0
 8024250:	460b      	mov	r3, r1
 8024252:	4640      	mov	r0, r8
 8024254:	4649      	mov	r1, r9
 8024256:	f7dc f837 	bl	80002c8 <__aeabi_dsub>
 802425a:	9b00      	ldr	r3, [sp, #0]
 802425c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802425e:	3b01      	subs	r3, #1
 8024260:	4313      	orrs	r3, r2
 8024262:	4682      	mov	sl, r0
 8024264:	468b      	mov	fp, r1
 8024266:	f040 81f1 	bne.w	802464c <__ieee754_pow+0x6e4>
 802426a:	ed9f 7b2f 	vldr	d7, [pc, #188]	; 8024328 <__ieee754_pow+0x3c0>
 802426e:	eeb0 8a47 	vmov.f32	s16, s14
 8024272:	eef0 8a67 	vmov.f32	s17, s15
 8024276:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 802427a:	2600      	movs	r6, #0
 802427c:	4632      	mov	r2, r6
 802427e:	463b      	mov	r3, r7
 8024280:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8024284:	f7dc f820 	bl	80002c8 <__aeabi_dsub>
 8024288:	4622      	mov	r2, r4
 802428a:	462b      	mov	r3, r5
 802428c:	f7dc f9d4 	bl	8000638 <__aeabi_dmul>
 8024290:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8024294:	4680      	mov	r8, r0
 8024296:	4689      	mov	r9, r1
 8024298:	4650      	mov	r0, sl
 802429a:	4659      	mov	r1, fp
 802429c:	f7dc f9cc 	bl	8000638 <__aeabi_dmul>
 80242a0:	4602      	mov	r2, r0
 80242a2:	460b      	mov	r3, r1
 80242a4:	4640      	mov	r0, r8
 80242a6:	4649      	mov	r1, r9
 80242a8:	f7dc f810 	bl	80002cc <__adddf3>
 80242ac:	4632      	mov	r2, r6
 80242ae:	463b      	mov	r3, r7
 80242b0:	4680      	mov	r8, r0
 80242b2:	4689      	mov	r9, r1
 80242b4:	4620      	mov	r0, r4
 80242b6:	4629      	mov	r1, r5
 80242b8:	f7dc f9be 	bl	8000638 <__aeabi_dmul>
 80242bc:	460b      	mov	r3, r1
 80242be:	4604      	mov	r4, r0
 80242c0:	460d      	mov	r5, r1
 80242c2:	4602      	mov	r2, r0
 80242c4:	4649      	mov	r1, r9
 80242c6:	4640      	mov	r0, r8
 80242c8:	f7dc f800 	bl	80002cc <__adddf3>
 80242cc:	4b1d      	ldr	r3, [pc, #116]	; (8024344 <__ieee754_pow+0x3dc>)
 80242ce:	4299      	cmp	r1, r3
 80242d0:	ec45 4b19 	vmov	d9, r4, r5
 80242d4:	4606      	mov	r6, r0
 80242d6:	460f      	mov	r7, r1
 80242d8:	468b      	mov	fp, r1
 80242da:	f340 82fe 	ble.w	80248da <__ieee754_pow+0x972>
 80242de:	f101 433f 	add.w	r3, r1, #3204448256	; 0xbf000000
 80242e2:	f503 03e0 	add.w	r3, r3, #7340032	; 0x700000
 80242e6:	4303      	orrs	r3, r0
 80242e8:	f000 81f0 	beq.w	80246cc <__ieee754_pow+0x764>
 80242ec:	a310      	add	r3, pc, #64	; (adr r3, 8024330 <__ieee754_pow+0x3c8>)
 80242ee:	e9d3 2300 	ldrd	r2, r3, [r3]
 80242f2:	ec51 0b18 	vmov	r0, r1, d8
 80242f6:	f7dc f99f 	bl	8000638 <__aeabi_dmul>
 80242fa:	a30d      	add	r3, pc, #52	; (adr r3, 8024330 <__ieee754_pow+0x3c8>)
 80242fc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024300:	e6cb      	b.n	802409a <__ieee754_pow+0x132>
 8024302:	bf00      	nop
 8024304:	f3af 8000 	nop.w
 8024308:	60000000 	.word	0x60000000
 802430c:	3ff71547 	.word	0x3ff71547
 8024310:	f85ddf44 	.word	0xf85ddf44
 8024314:	3e54ae0b 	.word	0x3e54ae0b
 8024318:	55555555 	.word	0x55555555
 802431c:	3fd55555 	.word	0x3fd55555
 8024320:	652b82fe 	.word	0x652b82fe
 8024324:	3ff71547 	.word	0x3ff71547
 8024328:	00000000 	.word	0x00000000
 802432c:	bff00000 	.word	0xbff00000
 8024330:	8800759c 	.word	0x8800759c
 8024334:	7e37e43c 	.word	0x7e37e43c
 8024338:	3ff00000 	.word	0x3ff00000
 802433c:	3fd00000 	.word	0x3fd00000
 8024340:	3fe00000 	.word	0x3fe00000
 8024344:	408fffff 	.word	0x408fffff
 8024348:	4bd7      	ldr	r3, [pc, #860]	; (80246a8 <__ieee754_pow+0x740>)
 802434a:	ea03 0309 	and.w	r3, r3, r9
 802434e:	2200      	movs	r2, #0
 8024350:	b92b      	cbnz	r3, 802435e <__ieee754_pow+0x3f6>
 8024352:	4bd6      	ldr	r3, [pc, #856]	; (80246ac <__ieee754_pow+0x744>)
 8024354:	f7dc f970 	bl	8000638 <__aeabi_dmul>
 8024358:	f06f 0234 	mvn.w	r2, #52	; 0x34
 802435c:	460c      	mov	r4, r1
 802435e:	1523      	asrs	r3, r4, #20
 8024360:	f2a3 33ff 	subw	r3, r3, #1023	; 0x3ff
 8024364:	4413      	add	r3, r2
 8024366:	9309      	str	r3, [sp, #36]	; 0x24
 8024368:	4bd1      	ldr	r3, [pc, #836]	; (80246b0 <__ieee754_pow+0x748>)
 802436a:	f3c4 0413 	ubfx	r4, r4, #0, #20
 802436e:	f044 557f 	orr.w	r5, r4, #1069547520	; 0x3fc00000
 8024372:	429c      	cmp	r4, r3
 8024374:	f445 1540 	orr.w	r5, r5, #3145728	; 0x300000
 8024378:	dd08      	ble.n	802438c <__ieee754_pow+0x424>
 802437a:	4bce      	ldr	r3, [pc, #824]	; (80246b4 <__ieee754_pow+0x74c>)
 802437c:	429c      	cmp	r4, r3
 802437e:	f340 8163 	ble.w	8024648 <__ieee754_pow+0x6e0>
 8024382:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024384:	3301      	adds	r3, #1
 8024386:	9309      	str	r3, [sp, #36]	; 0x24
 8024388:	f5a5 1580 	sub.w	r5, r5, #1048576	; 0x100000
 802438c:	2400      	movs	r4, #0
 802438e:	00e3      	lsls	r3, r4, #3
 8024390:	930b      	str	r3, [sp, #44]	; 0x2c
 8024392:	4bc9      	ldr	r3, [pc, #804]	; (80246b8 <__ieee754_pow+0x750>)
 8024394:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8024398:	ed93 7b00 	vldr	d7, [r3]
 802439c:	4629      	mov	r1, r5
 802439e:	ec53 2b17 	vmov	r2, r3, d7
 80243a2:	eeb0 8a47 	vmov.f32	s16, s14
 80243a6:	eef0 8a67 	vmov.f32	s17, s15
 80243aa:	4682      	mov	sl, r0
 80243ac:	f7db ff8c 	bl	80002c8 <__aeabi_dsub>
 80243b0:	4652      	mov	r2, sl
 80243b2:	4606      	mov	r6, r0
 80243b4:	460f      	mov	r7, r1
 80243b6:	462b      	mov	r3, r5
 80243b8:	ec51 0b18 	vmov	r0, r1, d8
 80243bc:	f7db ff86 	bl	80002cc <__adddf3>
 80243c0:	4602      	mov	r2, r0
 80243c2:	460b      	mov	r3, r1
 80243c4:	2000      	movs	r0, #0
 80243c6:	49bd      	ldr	r1, [pc, #756]	; (80246bc <__ieee754_pow+0x754>)
 80243c8:	f7dc fa60 	bl	800088c <__aeabi_ddiv>
 80243cc:	ec41 0b19 	vmov	d9, r0, r1
 80243d0:	4602      	mov	r2, r0
 80243d2:	460b      	mov	r3, r1
 80243d4:	4630      	mov	r0, r6
 80243d6:	4639      	mov	r1, r7
 80243d8:	f7dc f92e 	bl	8000638 <__aeabi_dmul>
 80243dc:	e9cd 0106 	strd	r0, r1, [sp, #24]
 80243e0:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80243e4:	e9cd 2304 	strd	r2, r3, [sp, #16]
 80243e8:	2300      	movs	r3, #0
 80243ea:	9304      	str	r3, [sp, #16]
 80243ec:	e9dd 8904 	ldrd	r8, r9, [sp, #16]
 80243f0:	46ab      	mov	fp, r5
 80243f2:	106d      	asrs	r5, r5, #1
 80243f4:	f045 5500 	orr.w	r5, r5, #536870912	; 0x20000000
 80243f8:	f505 2500 	add.w	r5, r5, #524288	; 0x80000
 80243fc:	eb05 4384 	add.w	r3, r5, r4, lsl #18
 8024400:	2200      	movs	r2, #0
 8024402:	4640      	mov	r0, r8
 8024404:	4649      	mov	r1, r9
 8024406:	4614      	mov	r4, r2
 8024408:	461d      	mov	r5, r3
 802440a:	f7dc f915 	bl	8000638 <__aeabi_dmul>
 802440e:	4602      	mov	r2, r0
 8024410:	460b      	mov	r3, r1
 8024412:	4630      	mov	r0, r6
 8024414:	4639      	mov	r1, r7
 8024416:	f7db ff57 	bl	80002c8 <__aeabi_dsub>
 802441a:	ec53 2b18 	vmov	r2, r3, d8
 802441e:	4606      	mov	r6, r0
 8024420:	460f      	mov	r7, r1
 8024422:	4620      	mov	r0, r4
 8024424:	4629      	mov	r1, r5
 8024426:	f7db ff4f 	bl	80002c8 <__aeabi_dsub>
 802442a:	4602      	mov	r2, r0
 802442c:	460b      	mov	r3, r1
 802442e:	4650      	mov	r0, sl
 8024430:	4659      	mov	r1, fp
 8024432:	f7db ff49 	bl	80002c8 <__aeabi_dsub>
 8024436:	4642      	mov	r2, r8
 8024438:	464b      	mov	r3, r9
 802443a:	f7dc f8fd 	bl	8000638 <__aeabi_dmul>
 802443e:	4602      	mov	r2, r0
 8024440:	460b      	mov	r3, r1
 8024442:	4630      	mov	r0, r6
 8024444:	4639      	mov	r1, r7
 8024446:	f7db ff3f 	bl	80002c8 <__aeabi_dsub>
 802444a:	ec53 2b19 	vmov	r2, r3, d9
 802444e:	f7dc f8f3 	bl	8000638 <__aeabi_dmul>
 8024452:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8024456:	ec41 0b18 	vmov	d8, r0, r1
 802445a:	4610      	mov	r0, r2
 802445c:	4619      	mov	r1, r3
 802445e:	f7dc f8eb 	bl	8000638 <__aeabi_dmul>
 8024462:	a37d      	add	r3, pc, #500	; (adr r3, 8024658 <__ieee754_pow+0x6f0>)
 8024464:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024468:	4604      	mov	r4, r0
 802446a:	460d      	mov	r5, r1
 802446c:	f7dc f8e4 	bl	8000638 <__aeabi_dmul>
 8024470:	a37b      	add	r3, pc, #492	; (adr r3, 8024660 <__ieee754_pow+0x6f8>)
 8024472:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024476:	f7db ff29 	bl	80002cc <__adddf3>
 802447a:	4622      	mov	r2, r4
 802447c:	462b      	mov	r3, r5
 802447e:	f7dc f8db 	bl	8000638 <__aeabi_dmul>
 8024482:	a379      	add	r3, pc, #484	; (adr r3, 8024668 <__ieee754_pow+0x700>)
 8024484:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024488:	f7db ff20 	bl	80002cc <__adddf3>
 802448c:	4622      	mov	r2, r4
 802448e:	462b      	mov	r3, r5
 8024490:	f7dc f8d2 	bl	8000638 <__aeabi_dmul>
 8024494:	a376      	add	r3, pc, #472	; (adr r3, 8024670 <__ieee754_pow+0x708>)
 8024496:	e9d3 2300 	ldrd	r2, r3, [r3]
 802449a:	f7db ff17 	bl	80002cc <__adddf3>
 802449e:	4622      	mov	r2, r4
 80244a0:	462b      	mov	r3, r5
 80244a2:	f7dc f8c9 	bl	8000638 <__aeabi_dmul>
 80244a6:	a374      	add	r3, pc, #464	; (adr r3, 8024678 <__ieee754_pow+0x710>)
 80244a8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80244ac:	f7db ff0e 	bl	80002cc <__adddf3>
 80244b0:	4622      	mov	r2, r4
 80244b2:	462b      	mov	r3, r5
 80244b4:	f7dc f8c0 	bl	8000638 <__aeabi_dmul>
 80244b8:	a371      	add	r3, pc, #452	; (adr r3, 8024680 <__ieee754_pow+0x718>)
 80244ba:	e9d3 2300 	ldrd	r2, r3, [r3]
 80244be:	f7db ff05 	bl	80002cc <__adddf3>
 80244c2:	4622      	mov	r2, r4
 80244c4:	4606      	mov	r6, r0
 80244c6:	460f      	mov	r7, r1
 80244c8:	462b      	mov	r3, r5
 80244ca:	4620      	mov	r0, r4
 80244cc:	4629      	mov	r1, r5
 80244ce:	f7dc f8b3 	bl	8000638 <__aeabi_dmul>
 80244d2:	4602      	mov	r2, r0
 80244d4:	460b      	mov	r3, r1
 80244d6:	4630      	mov	r0, r6
 80244d8:	4639      	mov	r1, r7
 80244da:	f7dc f8ad 	bl	8000638 <__aeabi_dmul>
 80244de:	4642      	mov	r2, r8
 80244e0:	4604      	mov	r4, r0
 80244e2:	460d      	mov	r5, r1
 80244e4:	464b      	mov	r3, r9
 80244e6:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80244ea:	f7db feef 	bl	80002cc <__adddf3>
 80244ee:	ec53 2b18 	vmov	r2, r3, d8
 80244f2:	f7dc f8a1 	bl	8000638 <__aeabi_dmul>
 80244f6:	4622      	mov	r2, r4
 80244f8:	462b      	mov	r3, r5
 80244fa:	f7db fee7 	bl	80002cc <__adddf3>
 80244fe:	4642      	mov	r2, r8
 8024500:	4682      	mov	sl, r0
 8024502:	468b      	mov	fp, r1
 8024504:	464b      	mov	r3, r9
 8024506:	4640      	mov	r0, r8
 8024508:	4649      	mov	r1, r9
 802450a:	f7dc f895 	bl	8000638 <__aeabi_dmul>
 802450e:	4b6c      	ldr	r3, [pc, #432]	; (80246c0 <__ieee754_pow+0x758>)
 8024510:	2200      	movs	r2, #0
 8024512:	4606      	mov	r6, r0
 8024514:	460f      	mov	r7, r1
 8024516:	f7db fed9 	bl	80002cc <__adddf3>
 802451a:	4652      	mov	r2, sl
 802451c:	465b      	mov	r3, fp
 802451e:	f7db fed5 	bl	80002cc <__adddf3>
 8024522:	9c04      	ldr	r4, [sp, #16]
 8024524:	460d      	mov	r5, r1
 8024526:	4622      	mov	r2, r4
 8024528:	460b      	mov	r3, r1
 802452a:	4640      	mov	r0, r8
 802452c:	4649      	mov	r1, r9
 802452e:	f7dc f883 	bl	8000638 <__aeabi_dmul>
 8024532:	4b63      	ldr	r3, [pc, #396]	; (80246c0 <__ieee754_pow+0x758>)
 8024534:	4680      	mov	r8, r0
 8024536:	4689      	mov	r9, r1
 8024538:	2200      	movs	r2, #0
 802453a:	4620      	mov	r0, r4
 802453c:	4629      	mov	r1, r5
 802453e:	f7db fec3 	bl	80002c8 <__aeabi_dsub>
 8024542:	4632      	mov	r2, r6
 8024544:	463b      	mov	r3, r7
 8024546:	f7db febf 	bl	80002c8 <__aeabi_dsub>
 802454a:	4602      	mov	r2, r0
 802454c:	460b      	mov	r3, r1
 802454e:	4650      	mov	r0, sl
 8024550:	4659      	mov	r1, fp
 8024552:	f7db feb9 	bl	80002c8 <__aeabi_dsub>
 8024556:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 802455a:	f7dc f86d 	bl	8000638 <__aeabi_dmul>
 802455e:	4622      	mov	r2, r4
 8024560:	4606      	mov	r6, r0
 8024562:	460f      	mov	r7, r1
 8024564:	462b      	mov	r3, r5
 8024566:	ec51 0b18 	vmov	r0, r1, d8
 802456a:	f7dc f865 	bl	8000638 <__aeabi_dmul>
 802456e:	4602      	mov	r2, r0
 8024570:	460b      	mov	r3, r1
 8024572:	4630      	mov	r0, r6
 8024574:	4639      	mov	r1, r7
 8024576:	f7db fea9 	bl	80002cc <__adddf3>
 802457a:	4606      	mov	r6, r0
 802457c:	460f      	mov	r7, r1
 802457e:	4602      	mov	r2, r0
 8024580:	460b      	mov	r3, r1
 8024582:	4640      	mov	r0, r8
 8024584:	4649      	mov	r1, r9
 8024586:	f7db fea1 	bl	80002cc <__adddf3>
 802458a:	9c04      	ldr	r4, [sp, #16]
 802458c:	a33e      	add	r3, pc, #248	; (adr r3, 8024688 <__ieee754_pow+0x720>)
 802458e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024592:	4620      	mov	r0, r4
 8024594:	460d      	mov	r5, r1
 8024596:	f7dc f84f 	bl	8000638 <__aeabi_dmul>
 802459a:	4642      	mov	r2, r8
 802459c:	ec41 0b18 	vmov	d8, r0, r1
 80245a0:	464b      	mov	r3, r9
 80245a2:	4620      	mov	r0, r4
 80245a4:	4629      	mov	r1, r5
 80245a6:	f7db fe8f 	bl	80002c8 <__aeabi_dsub>
 80245aa:	4602      	mov	r2, r0
 80245ac:	460b      	mov	r3, r1
 80245ae:	4630      	mov	r0, r6
 80245b0:	4639      	mov	r1, r7
 80245b2:	f7db fe89 	bl	80002c8 <__aeabi_dsub>
 80245b6:	a336      	add	r3, pc, #216	; (adr r3, 8024690 <__ieee754_pow+0x728>)
 80245b8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80245bc:	f7dc f83c 	bl	8000638 <__aeabi_dmul>
 80245c0:	a335      	add	r3, pc, #212	; (adr r3, 8024698 <__ieee754_pow+0x730>)
 80245c2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80245c6:	4606      	mov	r6, r0
 80245c8:	460f      	mov	r7, r1
 80245ca:	4620      	mov	r0, r4
 80245cc:	4629      	mov	r1, r5
 80245ce:	f7dc f833 	bl	8000638 <__aeabi_dmul>
 80245d2:	4602      	mov	r2, r0
 80245d4:	460b      	mov	r3, r1
 80245d6:	4630      	mov	r0, r6
 80245d8:	4639      	mov	r1, r7
 80245da:	f7db fe77 	bl	80002cc <__adddf3>
 80245de:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80245e0:	4b38      	ldr	r3, [pc, #224]	; (80246c4 <__ieee754_pow+0x75c>)
 80245e2:	4413      	add	r3, r2
 80245e4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80245e8:	f7db fe70 	bl	80002cc <__adddf3>
 80245ec:	4682      	mov	sl, r0
 80245ee:	9809      	ldr	r0, [sp, #36]	; 0x24
 80245f0:	468b      	mov	fp, r1
 80245f2:	f7db ffb7 	bl	8000564 <__aeabi_i2d>
 80245f6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80245f8:	4b33      	ldr	r3, [pc, #204]	; (80246c8 <__ieee754_pow+0x760>)
 80245fa:	4413      	add	r3, r2
 80245fc:	e9d3 8900 	ldrd	r8, r9, [r3]
 8024600:	4606      	mov	r6, r0
 8024602:	460f      	mov	r7, r1
 8024604:	4652      	mov	r2, sl
 8024606:	465b      	mov	r3, fp
 8024608:	ec51 0b18 	vmov	r0, r1, d8
 802460c:	f7db fe5e 	bl	80002cc <__adddf3>
 8024610:	4642      	mov	r2, r8
 8024612:	464b      	mov	r3, r9
 8024614:	f7db fe5a 	bl	80002cc <__adddf3>
 8024618:	4632      	mov	r2, r6
 802461a:	463b      	mov	r3, r7
 802461c:	f7db fe56 	bl	80002cc <__adddf3>
 8024620:	9c04      	ldr	r4, [sp, #16]
 8024622:	4632      	mov	r2, r6
 8024624:	463b      	mov	r3, r7
 8024626:	4620      	mov	r0, r4
 8024628:	460d      	mov	r5, r1
 802462a:	f7db fe4d 	bl	80002c8 <__aeabi_dsub>
 802462e:	4642      	mov	r2, r8
 8024630:	464b      	mov	r3, r9
 8024632:	f7db fe49 	bl	80002c8 <__aeabi_dsub>
 8024636:	ec53 2b18 	vmov	r2, r3, d8
 802463a:	f7db fe45 	bl	80002c8 <__aeabi_dsub>
 802463e:	4602      	mov	r2, r0
 8024640:	460b      	mov	r3, r1
 8024642:	4650      	mov	r0, sl
 8024644:	4659      	mov	r1, fp
 8024646:	e606      	b.n	8024256 <__ieee754_pow+0x2ee>
 8024648:	2401      	movs	r4, #1
 802464a:	e6a0      	b.n	802438e <__ieee754_pow+0x426>
 802464c:	ed9f 7b14 	vldr	d7, [pc, #80]	; 80246a0 <__ieee754_pow+0x738>
 8024650:	e60d      	b.n	802426e <__ieee754_pow+0x306>
 8024652:	bf00      	nop
 8024654:	f3af 8000 	nop.w
 8024658:	4a454eef 	.word	0x4a454eef
 802465c:	3fca7e28 	.word	0x3fca7e28
 8024660:	93c9db65 	.word	0x93c9db65
 8024664:	3fcd864a 	.word	0x3fcd864a
 8024668:	a91d4101 	.word	0xa91d4101
 802466c:	3fd17460 	.word	0x3fd17460
 8024670:	518f264d 	.word	0x518f264d
 8024674:	3fd55555 	.word	0x3fd55555
 8024678:	db6fabff 	.word	0xdb6fabff
 802467c:	3fdb6db6 	.word	0x3fdb6db6
 8024680:	33333303 	.word	0x33333303
 8024684:	3fe33333 	.word	0x3fe33333
 8024688:	e0000000 	.word	0xe0000000
 802468c:	3feec709 	.word	0x3feec709
 8024690:	dc3a03fd 	.word	0xdc3a03fd
 8024694:	3feec709 	.word	0x3feec709
 8024698:	145b01f5 	.word	0x145b01f5
 802469c:	be3e2fe0 	.word	0xbe3e2fe0
 80246a0:	00000000 	.word	0x00000000
 80246a4:	3ff00000 	.word	0x3ff00000
 80246a8:	7ff00000 	.word	0x7ff00000
 80246ac:	43400000 	.word	0x43400000
 80246b0:	0003988e 	.word	0x0003988e
 80246b4:	000bb679 	.word	0x000bb679
 80246b8:	0802a318 	.word	0x0802a318
 80246bc:	3ff00000 	.word	0x3ff00000
 80246c0:	40080000 	.word	0x40080000
 80246c4:	0802a338 	.word	0x0802a338
 80246c8:	0802a328 	.word	0x0802a328
 80246cc:	a3b5      	add	r3, pc, #724	; (adr r3, 80249a4 <__ieee754_pow+0xa3c>)
 80246ce:	e9d3 2300 	ldrd	r2, r3, [r3]
 80246d2:	4640      	mov	r0, r8
 80246d4:	4649      	mov	r1, r9
 80246d6:	f7db fdf9 	bl	80002cc <__adddf3>
 80246da:	4622      	mov	r2, r4
 80246dc:	ec41 0b1a 	vmov	d10, r0, r1
 80246e0:	462b      	mov	r3, r5
 80246e2:	4630      	mov	r0, r6
 80246e4:	4639      	mov	r1, r7
 80246e6:	f7db fdef 	bl	80002c8 <__aeabi_dsub>
 80246ea:	4602      	mov	r2, r0
 80246ec:	460b      	mov	r3, r1
 80246ee:	ec51 0b1a 	vmov	r0, r1, d10
 80246f2:	f7dc fa31 	bl	8000b58 <__aeabi_dcmpgt>
 80246f6:	2800      	cmp	r0, #0
 80246f8:	f47f adf8 	bne.w	80242ec <__ieee754_pow+0x384>
 80246fc:	4aa4      	ldr	r2, [pc, #656]	; (8024990 <__ieee754_pow+0xa28>)
 80246fe:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 8024702:	4293      	cmp	r3, r2
 8024704:	f340 810b 	ble.w	802491e <__ieee754_pow+0x9b6>
 8024708:	151b      	asrs	r3, r3, #20
 802470a:	f44f 1a80 	mov.w	sl, #1048576	; 0x100000
 802470e:	f2a3 33fe 	subw	r3, r3, #1022	; 0x3fe
 8024712:	fa4a f303 	asr.w	r3, sl, r3
 8024716:	445b      	add	r3, fp
 8024718:	f3c3 520a 	ubfx	r2, r3, #20, #11
 802471c:	4e9d      	ldr	r6, [pc, #628]	; (8024994 <__ieee754_pow+0xa2c>)
 802471e:	f2a2 32ff 	subw	r2, r2, #1023	; 0x3ff
 8024722:	4116      	asrs	r6, r2
 8024724:	f3c3 0a13 	ubfx	sl, r3, #0, #20
 8024728:	2000      	movs	r0, #0
 802472a:	ea23 0106 	bic.w	r1, r3, r6
 802472e:	f1c2 0214 	rsb	r2, r2, #20
 8024732:	f44a 1a80 	orr.w	sl, sl, #1048576	; 0x100000
 8024736:	fa4a fa02 	asr.w	sl, sl, r2
 802473a:	f1bb 0f00 	cmp.w	fp, #0
 802473e:	4602      	mov	r2, r0
 8024740:	460b      	mov	r3, r1
 8024742:	4620      	mov	r0, r4
 8024744:	4629      	mov	r1, r5
 8024746:	bfb8      	it	lt
 8024748:	f1ca 0a00 	rsblt	sl, sl, #0
 802474c:	f7db fdbc 	bl	80002c8 <__aeabi_dsub>
 8024750:	ec41 0b19 	vmov	d9, r0, r1
 8024754:	4642      	mov	r2, r8
 8024756:	464b      	mov	r3, r9
 8024758:	ec51 0b19 	vmov	r0, r1, d9
 802475c:	f7db fdb6 	bl	80002cc <__adddf3>
 8024760:	2400      	movs	r4, #0
 8024762:	a379      	add	r3, pc, #484	; (adr r3, 8024948 <__ieee754_pow+0x9e0>)
 8024764:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024768:	4620      	mov	r0, r4
 802476a:	460d      	mov	r5, r1
 802476c:	f7db ff64 	bl	8000638 <__aeabi_dmul>
 8024770:	ec53 2b19 	vmov	r2, r3, d9
 8024774:	4606      	mov	r6, r0
 8024776:	460f      	mov	r7, r1
 8024778:	4620      	mov	r0, r4
 802477a:	4629      	mov	r1, r5
 802477c:	f7db fda4 	bl	80002c8 <__aeabi_dsub>
 8024780:	4602      	mov	r2, r0
 8024782:	460b      	mov	r3, r1
 8024784:	4640      	mov	r0, r8
 8024786:	4649      	mov	r1, r9
 8024788:	f7db fd9e 	bl	80002c8 <__aeabi_dsub>
 802478c:	a370      	add	r3, pc, #448	; (adr r3, 8024950 <__ieee754_pow+0x9e8>)
 802478e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024792:	f7db ff51 	bl	8000638 <__aeabi_dmul>
 8024796:	a370      	add	r3, pc, #448	; (adr r3, 8024958 <__ieee754_pow+0x9f0>)
 8024798:	e9d3 2300 	ldrd	r2, r3, [r3]
 802479c:	4680      	mov	r8, r0
 802479e:	4689      	mov	r9, r1
 80247a0:	4620      	mov	r0, r4
 80247a2:	4629      	mov	r1, r5
 80247a4:	f7db ff48 	bl	8000638 <__aeabi_dmul>
 80247a8:	4602      	mov	r2, r0
 80247aa:	460b      	mov	r3, r1
 80247ac:	4640      	mov	r0, r8
 80247ae:	4649      	mov	r1, r9
 80247b0:	f7db fd8c 	bl	80002cc <__adddf3>
 80247b4:	4604      	mov	r4, r0
 80247b6:	460d      	mov	r5, r1
 80247b8:	4602      	mov	r2, r0
 80247ba:	460b      	mov	r3, r1
 80247bc:	4630      	mov	r0, r6
 80247be:	4639      	mov	r1, r7
 80247c0:	f7db fd84 	bl	80002cc <__adddf3>
 80247c4:	4632      	mov	r2, r6
 80247c6:	463b      	mov	r3, r7
 80247c8:	4680      	mov	r8, r0
 80247ca:	4689      	mov	r9, r1
 80247cc:	f7db fd7c 	bl	80002c8 <__aeabi_dsub>
 80247d0:	4602      	mov	r2, r0
 80247d2:	460b      	mov	r3, r1
 80247d4:	4620      	mov	r0, r4
 80247d6:	4629      	mov	r1, r5
 80247d8:	f7db fd76 	bl	80002c8 <__aeabi_dsub>
 80247dc:	4642      	mov	r2, r8
 80247de:	4606      	mov	r6, r0
 80247e0:	460f      	mov	r7, r1
 80247e2:	464b      	mov	r3, r9
 80247e4:	4640      	mov	r0, r8
 80247e6:	4649      	mov	r1, r9
 80247e8:	f7db ff26 	bl	8000638 <__aeabi_dmul>
 80247ec:	a35c      	add	r3, pc, #368	; (adr r3, 8024960 <__ieee754_pow+0x9f8>)
 80247ee:	e9d3 2300 	ldrd	r2, r3, [r3]
 80247f2:	4604      	mov	r4, r0
 80247f4:	460d      	mov	r5, r1
 80247f6:	f7db ff1f 	bl	8000638 <__aeabi_dmul>
 80247fa:	a35b      	add	r3, pc, #364	; (adr r3, 8024968 <__ieee754_pow+0xa00>)
 80247fc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024800:	f7db fd62 	bl	80002c8 <__aeabi_dsub>
 8024804:	4622      	mov	r2, r4
 8024806:	462b      	mov	r3, r5
 8024808:	f7db ff16 	bl	8000638 <__aeabi_dmul>
 802480c:	a358      	add	r3, pc, #352	; (adr r3, 8024970 <__ieee754_pow+0xa08>)
 802480e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024812:	f7db fd5b 	bl	80002cc <__adddf3>
 8024816:	4622      	mov	r2, r4
 8024818:	462b      	mov	r3, r5
 802481a:	f7db ff0d 	bl	8000638 <__aeabi_dmul>
 802481e:	a356      	add	r3, pc, #344	; (adr r3, 8024978 <__ieee754_pow+0xa10>)
 8024820:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024824:	f7db fd50 	bl	80002c8 <__aeabi_dsub>
 8024828:	4622      	mov	r2, r4
 802482a:	462b      	mov	r3, r5
 802482c:	f7db ff04 	bl	8000638 <__aeabi_dmul>
 8024830:	a353      	add	r3, pc, #332	; (adr r3, 8024980 <__ieee754_pow+0xa18>)
 8024832:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024836:	f7db fd49 	bl	80002cc <__adddf3>
 802483a:	4622      	mov	r2, r4
 802483c:	462b      	mov	r3, r5
 802483e:	f7db fefb 	bl	8000638 <__aeabi_dmul>
 8024842:	4602      	mov	r2, r0
 8024844:	460b      	mov	r3, r1
 8024846:	4640      	mov	r0, r8
 8024848:	4649      	mov	r1, r9
 802484a:	f7db fd3d 	bl	80002c8 <__aeabi_dsub>
 802484e:	4604      	mov	r4, r0
 8024850:	460d      	mov	r5, r1
 8024852:	4602      	mov	r2, r0
 8024854:	460b      	mov	r3, r1
 8024856:	4640      	mov	r0, r8
 8024858:	4649      	mov	r1, r9
 802485a:	f7db feed 	bl	8000638 <__aeabi_dmul>
 802485e:	2200      	movs	r2, #0
 8024860:	ec41 0b19 	vmov	d9, r0, r1
 8024864:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8024868:	4620      	mov	r0, r4
 802486a:	4629      	mov	r1, r5
 802486c:	f7db fd2c 	bl	80002c8 <__aeabi_dsub>
 8024870:	4602      	mov	r2, r0
 8024872:	460b      	mov	r3, r1
 8024874:	ec51 0b19 	vmov	r0, r1, d9
 8024878:	f7dc f808 	bl	800088c <__aeabi_ddiv>
 802487c:	4632      	mov	r2, r6
 802487e:	4604      	mov	r4, r0
 8024880:	460d      	mov	r5, r1
 8024882:	463b      	mov	r3, r7
 8024884:	4640      	mov	r0, r8
 8024886:	4649      	mov	r1, r9
 8024888:	f7db fed6 	bl	8000638 <__aeabi_dmul>
 802488c:	4632      	mov	r2, r6
 802488e:	463b      	mov	r3, r7
 8024890:	f7db fd1c 	bl	80002cc <__adddf3>
 8024894:	4602      	mov	r2, r0
 8024896:	460b      	mov	r3, r1
 8024898:	4620      	mov	r0, r4
 802489a:	4629      	mov	r1, r5
 802489c:	f7db fd14 	bl	80002c8 <__aeabi_dsub>
 80248a0:	4642      	mov	r2, r8
 80248a2:	464b      	mov	r3, r9
 80248a4:	f7db fd10 	bl	80002c8 <__aeabi_dsub>
 80248a8:	460b      	mov	r3, r1
 80248aa:	4602      	mov	r2, r0
 80248ac:	493a      	ldr	r1, [pc, #232]	; (8024998 <__ieee754_pow+0xa30>)
 80248ae:	2000      	movs	r0, #0
 80248b0:	f7db fd0a 	bl	80002c8 <__aeabi_dsub>
 80248b4:	e9cd 0100 	strd	r0, r1, [sp]
 80248b8:	9b01      	ldr	r3, [sp, #4]
 80248ba:	eb03 530a 	add.w	r3, r3, sl, lsl #20
 80248be:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 80248c2:	da2f      	bge.n	8024924 <__ieee754_pow+0x9bc>
 80248c4:	4650      	mov	r0, sl
 80248c6:	ed9d 0b00 	vldr	d0, [sp]
 80248ca:	f000 f9cd 	bl	8024c68 <scalbn>
 80248ce:	ec51 0b10 	vmov	r0, r1, d0
 80248d2:	ec53 2b18 	vmov	r2, r3, d8
 80248d6:	f7ff bbe0 	b.w	802409a <__ieee754_pow+0x132>
 80248da:	4b30      	ldr	r3, [pc, #192]	; (802499c <__ieee754_pow+0xa34>)
 80248dc:	f021 4600 	bic.w	r6, r1, #2147483648	; 0x80000000
 80248e0:	429e      	cmp	r6, r3
 80248e2:	f77f af0b 	ble.w	80246fc <__ieee754_pow+0x794>
 80248e6:	4b2e      	ldr	r3, [pc, #184]	; (80249a0 <__ieee754_pow+0xa38>)
 80248e8:	440b      	add	r3, r1
 80248ea:	4303      	orrs	r3, r0
 80248ec:	d00b      	beq.n	8024906 <__ieee754_pow+0x99e>
 80248ee:	a326      	add	r3, pc, #152	; (adr r3, 8024988 <__ieee754_pow+0xa20>)
 80248f0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80248f4:	ec51 0b18 	vmov	r0, r1, d8
 80248f8:	f7db fe9e 	bl	8000638 <__aeabi_dmul>
 80248fc:	a322      	add	r3, pc, #136	; (adr r3, 8024988 <__ieee754_pow+0xa20>)
 80248fe:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024902:	f7ff bbca 	b.w	802409a <__ieee754_pow+0x132>
 8024906:	4622      	mov	r2, r4
 8024908:	462b      	mov	r3, r5
 802490a:	f7db fcdd 	bl	80002c8 <__aeabi_dsub>
 802490e:	4642      	mov	r2, r8
 8024910:	464b      	mov	r3, r9
 8024912:	f7dc f917 	bl	8000b44 <__aeabi_dcmpge>
 8024916:	2800      	cmp	r0, #0
 8024918:	f43f aef0 	beq.w	80246fc <__ieee754_pow+0x794>
 802491c:	e7e7      	b.n	80248ee <__ieee754_pow+0x986>
 802491e:	f04f 0a00 	mov.w	sl, #0
 8024922:	e717      	b.n	8024754 <__ieee754_pow+0x7ec>
 8024924:	e9dd 0100 	ldrd	r0, r1, [sp]
 8024928:	4619      	mov	r1, r3
 802492a:	e7d2      	b.n	80248d2 <__ieee754_pow+0x96a>
 802492c:	491a      	ldr	r1, [pc, #104]	; (8024998 <__ieee754_pow+0xa30>)
 802492e:	2000      	movs	r0, #0
 8024930:	f7ff bb9e 	b.w	8024070 <__ieee754_pow+0x108>
 8024934:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8024938:	f7ff bb9a 	b.w	8024070 <__ieee754_pow+0x108>
 802493c:	9000      	str	r0, [sp, #0]
 802493e:	f7ff bb76 	b.w	802402e <__ieee754_pow+0xc6>
 8024942:	2100      	movs	r1, #0
 8024944:	f7ff bb60 	b.w	8024008 <__ieee754_pow+0xa0>
 8024948:	00000000 	.word	0x00000000
 802494c:	3fe62e43 	.word	0x3fe62e43
 8024950:	fefa39ef 	.word	0xfefa39ef
 8024954:	3fe62e42 	.word	0x3fe62e42
 8024958:	0ca86c39 	.word	0x0ca86c39
 802495c:	be205c61 	.word	0xbe205c61
 8024960:	72bea4d0 	.word	0x72bea4d0
 8024964:	3e663769 	.word	0x3e663769
 8024968:	c5d26bf1 	.word	0xc5d26bf1
 802496c:	3ebbbd41 	.word	0x3ebbbd41
 8024970:	af25de2c 	.word	0xaf25de2c
 8024974:	3f11566a 	.word	0x3f11566a
 8024978:	16bebd93 	.word	0x16bebd93
 802497c:	3f66c16c 	.word	0x3f66c16c
 8024980:	5555553e 	.word	0x5555553e
 8024984:	3fc55555 	.word	0x3fc55555
 8024988:	c2f8f359 	.word	0xc2f8f359
 802498c:	01a56e1f 	.word	0x01a56e1f
 8024990:	3fe00000 	.word	0x3fe00000
 8024994:	000fffff 	.word	0x000fffff
 8024998:	3ff00000 	.word	0x3ff00000
 802499c:	4090cbff 	.word	0x4090cbff
 80249a0:	3f6f3400 	.word	0x3f6f3400
 80249a4:	652b82fe 	.word	0x652b82fe
 80249a8:	3c971547 	.word	0x3c971547

080249ac <__ieee754_sqrt>:
 80249ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80249b0:	ec55 4b10 	vmov	r4, r5, d0
 80249b4:	4e56      	ldr	r6, [pc, #344]	; (8024b10 <__ieee754_sqrt+0x164>)
 80249b6:	43ae      	bics	r6, r5
 80249b8:	ee10 0a10 	vmov	r0, s0
 80249bc:	ee10 3a10 	vmov	r3, s0
 80249c0:	4629      	mov	r1, r5
 80249c2:	462a      	mov	r2, r5
 80249c4:	d110      	bne.n	80249e8 <__ieee754_sqrt+0x3c>
 80249c6:	ee10 2a10 	vmov	r2, s0
 80249ca:	462b      	mov	r3, r5
 80249cc:	f7db fe34 	bl	8000638 <__aeabi_dmul>
 80249d0:	4602      	mov	r2, r0
 80249d2:	460b      	mov	r3, r1
 80249d4:	4620      	mov	r0, r4
 80249d6:	4629      	mov	r1, r5
 80249d8:	f7db fc78 	bl	80002cc <__adddf3>
 80249dc:	4604      	mov	r4, r0
 80249de:	460d      	mov	r5, r1
 80249e0:	ec45 4b10 	vmov	d0, r4, r5
 80249e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80249e8:	2d00      	cmp	r5, #0
 80249ea:	dc10      	bgt.n	8024a0e <__ieee754_sqrt+0x62>
 80249ec:	f025 4600 	bic.w	r6, r5, #2147483648	; 0x80000000
 80249f0:	4330      	orrs	r0, r6
 80249f2:	d0f5      	beq.n	80249e0 <__ieee754_sqrt+0x34>
 80249f4:	b15d      	cbz	r5, 8024a0e <__ieee754_sqrt+0x62>
 80249f6:	ee10 2a10 	vmov	r2, s0
 80249fa:	462b      	mov	r3, r5
 80249fc:	ee10 0a10 	vmov	r0, s0
 8024a00:	f7db fc62 	bl	80002c8 <__aeabi_dsub>
 8024a04:	4602      	mov	r2, r0
 8024a06:	460b      	mov	r3, r1
 8024a08:	f7db ff40 	bl	800088c <__aeabi_ddiv>
 8024a0c:	e7e6      	b.n	80249dc <__ieee754_sqrt+0x30>
 8024a0e:	1509      	asrs	r1, r1, #20
 8024a10:	d076      	beq.n	8024b00 <__ieee754_sqrt+0x154>
 8024a12:	f3c2 0213 	ubfx	r2, r2, #0, #20
 8024a16:	07ce      	lsls	r6, r1, #31
 8024a18:	f442 1080 	orr.w	r0, r2, #1048576	; 0x100000
 8024a1c:	bf5e      	ittt	pl
 8024a1e:	0fda      	lsrpl	r2, r3, #31
 8024a20:	005b      	lslpl	r3, r3, #1
 8024a22:	eb02 0040 	addpl.w	r0, r2, r0, lsl #1
 8024a26:	0fda      	lsrs	r2, r3, #31
 8024a28:	f2a1 35ff 	subw	r5, r1, #1023	; 0x3ff
 8024a2c:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8024a30:	2000      	movs	r0, #0
 8024a32:	106d      	asrs	r5, r5, #1
 8024a34:	005b      	lsls	r3, r3, #1
 8024a36:	f04f 0e16 	mov.w	lr, #22
 8024a3a:	4684      	mov	ip, r0
 8024a3c:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
 8024a40:	eb0c 0401 	add.w	r4, ip, r1
 8024a44:	4294      	cmp	r4, r2
 8024a46:	bfde      	ittt	le
 8024a48:	1b12      	suble	r2, r2, r4
 8024a4a:	eb04 0c01 	addle.w	ip, r4, r1
 8024a4e:	1840      	addle	r0, r0, r1
 8024a50:	0052      	lsls	r2, r2, #1
 8024a52:	f1be 0e01 	subs.w	lr, lr, #1
 8024a56:	eb02 72d3 	add.w	r2, r2, r3, lsr #31
 8024a5a:	ea4f 0151 	mov.w	r1, r1, lsr #1
 8024a5e:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8024a62:	d1ed      	bne.n	8024a40 <__ieee754_sqrt+0x94>
 8024a64:	4671      	mov	r1, lr
 8024a66:	2720      	movs	r7, #32
 8024a68:	f04f 4400 	mov.w	r4, #2147483648	; 0x80000000
 8024a6c:	4562      	cmp	r2, ip
 8024a6e:	eb04 060e 	add.w	r6, r4, lr
 8024a72:	dc02      	bgt.n	8024a7a <__ieee754_sqrt+0xce>
 8024a74:	d113      	bne.n	8024a9e <__ieee754_sqrt+0xf2>
 8024a76:	429e      	cmp	r6, r3
 8024a78:	d811      	bhi.n	8024a9e <__ieee754_sqrt+0xf2>
 8024a7a:	2e00      	cmp	r6, #0
 8024a7c:	eb06 0e04 	add.w	lr, r6, r4
 8024a80:	da43      	bge.n	8024b0a <__ieee754_sqrt+0x15e>
 8024a82:	f1be 0f00 	cmp.w	lr, #0
 8024a86:	db40      	blt.n	8024b0a <__ieee754_sqrt+0x15e>
 8024a88:	f10c 0801 	add.w	r8, ip, #1
 8024a8c:	eba2 020c 	sub.w	r2, r2, ip
 8024a90:	429e      	cmp	r6, r3
 8024a92:	bf88      	it	hi
 8024a94:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8024a98:	1b9b      	subs	r3, r3, r6
 8024a9a:	4421      	add	r1, r4
 8024a9c:	46c4      	mov	ip, r8
 8024a9e:	0052      	lsls	r2, r2, #1
 8024aa0:	3f01      	subs	r7, #1
 8024aa2:	eb02 72d3 	add.w	r2, r2, r3, lsr #31
 8024aa6:	ea4f 0454 	mov.w	r4, r4, lsr #1
 8024aaa:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8024aae:	d1dd      	bne.n	8024a6c <__ieee754_sqrt+0xc0>
 8024ab0:	4313      	orrs	r3, r2
 8024ab2:	d006      	beq.n	8024ac2 <__ieee754_sqrt+0x116>
 8024ab4:	1c4c      	adds	r4, r1, #1
 8024ab6:	bf13      	iteet	ne
 8024ab8:	3101      	addne	r1, #1
 8024aba:	3001      	addeq	r0, #1
 8024abc:	4639      	moveq	r1, r7
 8024abe:	f021 0101 	bicne.w	r1, r1, #1
 8024ac2:	1043      	asrs	r3, r0, #1
 8024ac4:	f103 537f 	add.w	r3, r3, #1069547520	; 0x3fc00000
 8024ac8:	0849      	lsrs	r1, r1, #1
 8024aca:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
 8024ace:	07c2      	lsls	r2, r0, #31
 8024ad0:	bf48      	it	mi
 8024ad2:	f041 4100 	orrmi.w	r1, r1, #2147483648	; 0x80000000
 8024ad6:	eb03 5705 	add.w	r7, r3, r5, lsl #20
 8024ada:	460c      	mov	r4, r1
 8024adc:	463d      	mov	r5, r7
 8024ade:	e77f      	b.n	80249e0 <__ieee754_sqrt+0x34>
 8024ae0:	0ada      	lsrs	r2, r3, #11
 8024ae2:	3815      	subs	r0, #21
 8024ae4:	055b      	lsls	r3, r3, #21
 8024ae6:	2a00      	cmp	r2, #0
 8024ae8:	d0fa      	beq.n	8024ae0 <__ieee754_sqrt+0x134>
 8024aea:	02d7      	lsls	r7, r2, #11
 8024aec:	d50a      	bpl.n	8024b04 <__ieee754_sqrt+0x158>
 8024aee:	f1c1 0420 	rsb	r4, r1, #32
 8024af2:	fa23 f404 	lsr.w	r4, r3, r4
 8024af6:	1e4d      	subs	r5, r1, #1
 8024af8:	408b      	lsls	r3, r1
 8024afa:	4322      	orrs	r2, r4
 8024afc:	1b41      	subs	r1, r0, r5
 8024afe:	e788      	b.n	8024a12 <__ieee754_sqrt+0x66>
 8024b00:	4608      	mov	r0, r1
 8024b02:	e7f0      	b.n	8024ae6 <__ieee754_sqrt+0x13a>
 8024b04:	0052      	lsls	r2, r2, #1
 8024b06:	3101      	adds	r1, #1
 8024b08:	e7ef      	b.n	8024aea <__ieee754_sqrt+0x13e>
 8024b0a:	46e0      	mov	r8, ip
 8024b0c:	e7be      	b.n	8024a8c <__ieee754_sqrt+0xe0>
 8024b0e:	bf00      	nop
 8024b10:	7ff00000 	.word	0x7ff00000

08024b14 <fabs>:
 8024b14:	ec51 0b10 	vmov	r0, r1, d0
 8024b18:	ee10 2a10 	vmov	r2, s0
 8024b1c:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 8024b20:	ec43 2b10 	vmov	d0, r2, r3
 8024b24:	4770      	bx	lr

08024b26 <finite>:
 8024b26:	b082      	sub	sp, #8
 8024b28:	ed8d 0b00 	vstr	d0, [sp]
 8024b2c:	9801      	ldr	r0, [sp, #4]
 8024b2e:	f040 4000 	orr.w	r0, r0, #2147483648	; 0x80000000
 8024b32:	f500 1080 	add.w	r0, r0, #1048576	; 0x100000
 8024b36:	0fc0      	lsrs	r0, r0, #31
 8024b38:	b002      	add	sp, #8
 8024b3a:	4770      	bx	lr
 8024b3c:	0000      	movs	r0, r0
	...

08024b40 <nan>:
 8024b40:	ed9f 0b01 	vldr	d0, [pc, #4]	; 8024b48 <nan+0x8>
 8024b44:	4770      	bx	lr
 8024b46:	bf00      	nop
 8024b48:	00000000 	.word	0x00000000
 8024b4c:	7ff80000 	.word	0x7ff80000

08024b50 <rint>:
 8024b50:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8024b52:	ec51 0b10 	vmov	r0, r1, d0
 8024b56:	f3c1 520a 	ubfx	r2, r1, #20, #11
 8024b5a:	f2a2 36ff 	subw	r6, r2, #1023	; 0x3ff
 8024b5e:	2e13      	cmp	r6, #19
 8024b60:	ee10 4a10 	vmov	r4, s0
 8024b64:	460b      	mov	r3, r1
 8024b66:	ea4f 75d1 	mov.w	r5, r1, lsr #31
 8024b6a:	dc58      	bgt.n	8024c1e <rint+0xce>
 8024b6c:	2e00      	cmp	r6, #0
 8024b6e:	da2b      	bge.n	8024bc8 <rint+0x78>
 8024b70:	f021 4200 	bic.w	r2, r1, #2147483648	; 0x80000000
 8024b74:	4302      	orrs	r2, r0
 8024b76:	d023      	beq.n	8024bc0 <rint+0x70>
 8024b78:	f3c1 0213 	ubfx	r2, r1, #0, #20
 8024b7c:	4302      	orrs	r2, r0
 8024b7e:	4254      	negs	r4, r2
 8024b80:	4314      	orrs	r4, r2
 8024b82:	0c4b      	lsrs	r3, r1, #17
 8024b84:	0b24      	lsrs	r4, r4, #12
 8024b86:	045b      	lsls	r3, r3, #17
 8024b88:	f404 2400 	and.w	r4, r4, #524288	; 0x80000
 8024b8c:	ea44 0103 	orr.w	r1, r4, r3
 8024b90:	4b32      	ldr	r3, [pc, #200]	; (8024c5c <rint+0x10c>)
 8024b92:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8024b96:	e9d3 6700 	ldrd	r6, r7, [r3]
 8024b9a:	4602      	mov	r2, r0
 8024b9c:	460b      	mov	r3, r1
 8024b9e:	4630      	mov	r0, r6
 8024ba0:	4639      	mov	r1, r7
 8024ba2:	f7db fb93 	bl	80002cc <__adddf3>
 8024ba6:	e9cd 0100 	strd	r0, r1, [sp]
 8024baa:	463b      	mov	r3, r7
 8024bac:	e9dd 0100 	ldrd	r0, r1, [sp]
 8024bb0:	4632      	mov	r2, r6
 8024bb2:	f7db fb89 	bl	80002c8 <__aeabi_dsub>
 8024bb6:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 8024bba:	ea43 77c5 	orr.w	r7, r3, r5, lsl #31
 8024bbe:	4639      	mov	r1, r7
 8024bc0:	ec41 0b10 	vmov	d0, r0, r1
 8024bc4:	b003      	add	sp, #12
 8024bc6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8024bc8:	4a25      	ldr	r2, [pc, #148]	; (8024c60 <rint+0x110>)
 8024bca:	4132      	asrs	r2, r6
 8024bcc:	ea01 0702 	and.w	r7, r1, r2
 8024bd0:	4307      	orrs	r7, r0
 8024bd2:	d0f5      	beq.n	8024bc0 <rint+0x70>
 8024bd4:	0851      	lsrs	r1, r2, #1
 8024bd6:	ea03 0252 	and.w	r2, r3, r2, lsr #1
 8024bda:	4314      	orrs	r4, r2
 8024bdc:	d00c      	beq.n	8024bf8 <rint+0xa8>
 8024bde:	ea23 0201 	bic.w	r2, r3, r1
 8024be2:	f44f 2380 	mov.w	r3, #262144	; 0x40000
 8024be6:	2e13      	cmp	r6, #19
 8024be8:	fa43 f606 	asr.w	r6, r3, r6
 8024bec:	bf0c      	ite	eq
 8024bee:	f04f 4400 	moveq.w	r4, #2147483648	; 0x80000000
 8024bf2:	2400      	movne	r4, #0
 8024bf4:	ea42 0306 	orr.w	r3, r2, r6
 8024bf8:	4918      	ldr	r1, [pc, #96]	; (8024c5c <rint+0x10c>)
 8024bfa:	eb01 05c5 	add.w	r5, r1, r5, lsl #3
 8024bfe:	4622      	mov	r2, r4
 8024c00:	e9d5 4500 	ldrd	r4, r5, [r5]
 8024c04:	4620      	mov	r0, r4
 8024c06:	4629      	mov	r1, r5
 8024c08:	f7db fb60 	bl	80002cc <__adddf3>
 8024c0c:	e9cd 0100 	strd	r0, r1, [sp]
 8024c10:	e9dd 0100 	ldrd	r0, r1, [sp]
 8024c14:	4622      	mov	r2, r4
 8024c16:	462b      	mov	r3, r5
 8024c18:	f7db fb56 	bl	80002c8 <__aeabi_dsub>
 8024c1c:	e7d0      	b.n	8024bc0 <rint+0x70>
 8024c1e:	2e33      	cmp	r6, #51	; 0x33
 8024c20:	dd07      	ble.n	8024c32 <rint+0xe2>
 8024c22:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 8024c26:	d1cb      	bne.n	8024bc0 <rint+0x70>
 8024c28:	ee10 2a10 	vmov	r2, s0
 8024c2c:	f7db fb4e 	bl	80002cc <__adddf3>
 8024c30:	e7c6      	b.n	8024bc0 <rint+0x70>
 8024c32:	f2a2 4213 	subw	r2, r2, #1043	; 0x413
 8024c36:	f04f 36ff 	mov.w	r6, #4294967295
 8024c3a:	40d6      	lsrs	r6, r2
 8024c3c:	4230      	tst	r0, r6
 8024c3e:	d0bf      	beq.n	8024bc0 <rint+0x70>
 8024c40:	ea14 0056 	ands.w	r0, r4, r6, lsr #1
 8024c44:	ea4f 0156 	mov.w	r1, r6, lsr #1
 8024c48:	bf1f      	itttt	ne
 8024c4a:	ea24 0101 	bicne.w	r1, r4, r1
 8024c4e:	f04f 4480 	movne.w	r4, #1073741824	; 0x40000000
 8024c52:	fa44 f202 	asrne.w	r2, r4, r2
 8024c56:	ea41 0402 	orrne.w	r4, r1, r2
 8024c5a:	e7cd      	b.n	8024bf8 <rint+0xa8>
 8024c5c:	0802a348 	.word	0x0802a348
 8024c60:	000fffff 	.word	0x000fffff
 8024c64:	00000000 	.word	0x00000000

08024c68 <scalbn>:
 8024c68:	b570      	push	{r4, r5, r6, lr}
 8024c6a:	ec55 4b10 	vmov	r4, r5, d0
 8024c6e:	f3c5 520a 	ubfx	r2, r5, #20, #11
 8024c72:	4606      	mov	r6, r0
 8024c74:	462b      	mov	r3, r5
 8024c76:	b99a      	cbnz	r2, 8024ca0 <scalbn+0x38>
 8024c78:	f025 4300 	bic.w	r3, r5, #2147483648	; 0x80000000
 8024c7c:	4323      	orrs	r3, r4
 8024c7e:	d036      	beq.n	8024cee <scalbn+0x86>
 8024c80:	4b39      	ldr	r3, [pc, #228]	; (8024d68 <scalbn+0x100>)
 8024c82:	4629      	mov	r1, r5
 8024c84:	ee10 0a10 	vmov	r0, s0
 8024c88:	2200      	movs	r2, #0
 8024c8a:	f7db fcd5 	bl	8000638 <__aeabi_dmul>
 8024c8e:	4b37      	ldr	r3, [pc, #220]	; (8024d6c <scalbn+0x104>)
 8024c90:	429e      	cmp	r6, r3
 8024c92:	4604      	mov	r4, r0
 8024c94:	460d      	mov	r5, r1
 8024c96:	da10      	bge.n	8024cba <scalbn+0x52>
 8024c98:	a32b      	add	r3, pc, #172	; (adr r3, 8024d48 <scalbn+0xe0>)
 8024c9a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024c9e:	e03a      	b.n	8024d16 <scalbn+0xae>
 8024ca0:	f240 71ff 	movw	r1, #2047	; 0x7ff
 8024ca4:	428a      	cmp	r2, r1
 8024ca6:	d10c      	bne.n	8024cc2 <scalbn+0x5a>
 8024ca8:	ee10 2a10 	vmov	r2, s0
 8024cac:	4620      	mov	r0, r4
 8024cae:	4629      	mov	r1, r5
 8024cb0:	f7db fb0c 	bl	80002cc <__adddf3>
 8024cb4:	4604      	mov	r4, r0
 8024cb6:	460d      	mov	r5, r1
 8024cb8:	e019      	b.n	8024cee <scalbn+0x86>
 8024cba:	f3c1 520a 	ubfx	r2, r1, #20, #11
 8024cbe:	460b      	mov	r3, r1
 8024cc0:	3a36      	subs	r2, #54	; 0x36
 8024cc2:	4432      	add	r2, r6
 8024cc4:	f240 71fe 	movw	r1, #2046	; 0x7fe
 8024cc8:	428a      	cmp	r2, r1
 8024cca:	dd08      	ble.n	8024cde <scalbn+0x76>
 8024ccc:	2d00      	cmp	r5, #0
 8024cce:	a120      	add	r1, pc, #128	; (adr r1, 8024d50 <scalbn+0xe8>)
 8024cd0:	e9d1 0100 	ldrd	r0, r1, [r1]
 8024cd4:	da1c      	bge.n	8024d10 <scalbn+0xa8>
 8024cd6:	a120      	add	r1, pc, #128	; (adr r1, 8024d58 <scalbn+0xf0>)
 8024cd8:	e9d1 0100 	ldrd	r0, r1, [r1]
 8024cdc:	e018      	b.n	8024d10 <scalbn+0xa8>
 8024cde:	2a00      	cmp	r2, #0
 8024ce0:	dd08      	ble.n	8024cf4 <scalbn+0x8c>
 8024ce2:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8024ce6:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 8024cea:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
 8024cee:	ec45 4b10 	vmov	d0, r4, r5
 8024cf2:	bd70      	pop	{r4, r5, r6, pc}
 8024cf4:	f112 0f35 	cmn.w	r2, #53	; 0x35
 8024cf8:	da19      	bge.n	8024d2e <scalbn+0xc6>
 8024cfa:	f24c 3350 	movw	r3, #50000	; 0xc350
 8024cfe:	429e      	cmp	r6, r3
 8024d00:	f005 4300 	and.w	r3, r5, #2147483648	; 0x80000000
 8024d04:	dd0a      	ble.n	8024d1c <scalbn+0xb4>
 8024d06:	a112      	add	r1, pc, #72	; (adr r1, 8024d50 <scalbn+0xe8>)
 8024d08:	e9d1 0100 	ldrd	r0, r1, [r1]
 8024d0c:	2b00      	cmp	r3, #0
 8024d0e:	d1e2      	bne.n	8024cd6 <scalbn+0x6e>
 8024d10:	a30f      	add	r3, pc, #60	; (adr r3, 8024d50 <scalbn+0xe8>)
 8024d12:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024d16:	f7db fc8f 	bl	8000638 <__aeabi_dmul>
 8024d1a:	e7cb      	b.n	8024cb4 <scalbn+0x4c>
 8024d1c:	a10a      	add	r1, pc, #40	; (adr r1, 8024d48 <scalbn+0xe0>)
 8024d1e:	e9d1 0100 	ldrd	r0, r1, [r1]
 8024d22:	2b00      	cmp	r3, #0
 8024d24:	d0b8      	beq.n	8024c98 <scalbn+0x30>
 8024d26:	a10e      	add	r1, pc, #56	; (adr r1, 8024d60 <scalbn+0xf8>)
 8024d28:	e9d1 0100 	ldrd	r0, r1, [r1]
 8024d2c:	e7b4      	b.n	8024c98 <scalbn+0x30>
 8024d2e:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8024d32:	3236      	adds	r2, #54	; 0x36
 8024d34:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 8024d38:	ea43 5102 	orr.w	r1, r3, r2, lsl #20
 8024d3c:	4620      	mov	r0, r4
 8024d3e:	4b0c      	ldr	r3, [pc, #48]	; (8024d70 <scalbn+0x108>)
 8024d40:	2200      	movs	r2, #0
 8024d42:	e7e8      	b.n	8024d16 <scalbn+0xae>
 8024d44:	f3af 8000 	nop.w
 8024d48:	c2f8f359 	.word	0xc2f8f359
 8024d4c:	01a56e1f 	.word	0x01a56e1f
 8024d50:	8800759c 	.word	0x8800759c
 8024d54:	7e37e43c 	.word	0x7e37e43c
 8024d58:	8800759c 	.word	0x8800759c
 8024d5c:	fe37e43c 	.word	0xfe37e43c
 8024d60:	c2f8f359 	.word	0xc2f8f359
 8024d64:	81a56e1f 	.word	0x81a56e1f
 8024d68:	43500000 	.word	0x43500000
 8024d6c:	ffff3cb0 	.word	0xffff3cb0
 8024d70:	3c900000 	.word	0x3c900000

08024d74 <abort>:
 8024d74:	b508      	push	{r3, lr}
 8024d76:	2006      	movs	r0, #6
 8024d78:	f000 fde6 	bl	8025948 <raise>
 8024d7c:	2001      	movs	r0, #1
 8024d7e:	f7fa f863 	bl	801ee48 <_exit>

08024d82 <atexit>:
 8024d82:	2300      	movs	r3, #0
 8024d84:	4601      	mov	r1, r0
 8024d86:	461a      	mov	r2, r3
 8024d88:	4618      	mov	r0, r3
 8024d8a:	f001 bd41 	b.w	8026810 <__register_exitproc>
	...

08024d90 <__errno>:
 8024d90:	4b01      	ldr	r3, [pc, #4]	; (8024d98 <__errno+0x8>)
 8024d92:	6818      	ldr	r0, [r3, #0]
 8024d94:	4770      	bx	lr
 8024d96:	bf00      	nop
 8024d98:	20000010 	.word	0x20000010

08024d9c <__libc_init_array>:
 8024d9c:	b570      	push	{r4, r5, r6, lr}
 8024d9e:	4d0d      	ldr	r5, [pc, #52]	; (8024dd4 <__libc_init_array+0x38>)
 8024da0:	4c0d      	ldr	r4, [pc, #52]	; (8024dd8 <__libc_init_array+0x3c>)
 8024da2:	1b64      	subs	r4, r4, r5
 8024da4:	10a4      	asrs	r4, r4, #2
 8024da6:	2600      	movs	r6, #0
 8024da8:	42a6      	cmp	r6, r4
 8024daa:	d109      	bne.n	8024dc0 <__libc_init_array+0x24>
 8024dac:	4d0b      	ldr	r5, [pc, #44]	; (8024ddc <__libc_init_array+0x40>)
 8024dae:	4c0c      	ldr	r4, [pc, #48]	; (8024de0 <__libc_init_array+0x44>)
 8024db0:	f004 fb2c 	bl	802940c <_init>
 8024db4:	1b64      	subs	r4, r4, r5
 8024db6:	10a4      	asrs	r4, r4, #2
 8024db8:	2600      	movs	r6, #0
 8024dba:	42a6      	cmp	r6, r4
 8024dbc:	d105      	bne.n	8024dca <__libc_init_array+0x2e>
 8024dbe:	bd70      	pop	{r4, r5, r6, pc}
 8024dc0:	f855 3b04 	ldr.w	r3, [r5], #4
 8024dc4:	4798      	blx	r3
 8024dc6:	3601      	adds	r6, #1
 8024dc8:	e7ee      	b.n	8024da8 <__libc_init_array+0xc>
 8024dca:	f855 3b04 	ldr.w	r3, [r5], #4
 8024dce:	4798      	blx	r3
 8024dd0:	3601      	adds	r6, #1
 8024dd2:	e7f2      	b.n	8024dba <__libc_init_array+0x1e>
 8024dd4:	0802a80c 	.word	0x0802a80c
 8024dd8:	0802a80c 	.word	0x0802a80c
 8024ddc:	0802a80c 	.word	0x0802a80c
 8024de0:	0802a848 	.word	0x0802a848

08024de4 <isalnum>:
 8024de4:	4b02      	ldr	r3, [pc, #8]	; (8024df0 <isalnum+0xc>)
 8024de6:	4418      	add	r0, r3
 8024de8:	7840      	ldrb	r0, [r0, #1]
 8024dea:	f000 0007 	and.w	r0, r0, #7
 8024dee:	4770      	bx	lr
 8024df0:	0802a3e0 	.word	0x0802a3e0

08024df4 <isalpha>:
 8024df4:	4b02      	ldr	r3, [pc, #8]	; (8024e00 <isalpha+0xc>)
 8024df6:	4418      	add	r0, r3
 8024df8:	7840      	ldrb	r0, [r0, #1]
 8024dfa:	f000 0003 	and.w	r0, r0, #3
 8024dfe:	4770      	bx	lr
 8024e00:	0802a3e0 	.word	0x0802a3e0

08024e04 <isspace>:
 8024e04:	4b02      	ldr	r3, [pc, #8]	; (8024e10 <isspace+0xc>)
 8024e06:	4418      	add	r0, r3
 8024e08:	7840      	ldrb	r0, [r0, #1]
 8024e0a:	f000 0008 	and.w	r0, r0, #8
 8024e0e:	4770      	bx	lr
 8024e10:	0802a3e0 	.word	0x0802a3e0

08024e14 <malloc>:
 8024e14:	4b02      	ldr	r3, [pc, #8]	; (8024e20 <malloc+0xc>)
 8024e16:	4601      	mov	r1, r0
 8024e18:	6818      	ldr	r0, [r3, #0]
 8024e1a:	f000 b899 	b.w	8024f50 <_malloc_r>
 8024e1e:	bf00      	nop
 8024e20:	20000010 	.word	0x20000010

08024e24 <free>:
 8024e24:	4b02      	ldr	r3, [pc, #8]	; (8024e30 <free+0xc>)
 8024e26:	4601      	mov	r1, r0
 8024e28:	6818      	ldr	r0, [r3, #0]
 8024e2a:	f000 b841 	b.w	8024eb0 <_free_r>
 8024e2e:	bf00      	nop
 8024e30:	20000010 	.word	0x20000010

08024e34 <memcmp>:
 8024e34:	b530      	push	{r4, r5, lr}
 8024e36:	3901      	subs	r1, #1
 8024e38:	2400      	movs	r4, #0
 8024e3a:	42a2      	cmp	r2, r4
 8024e3c:	d101      	bne.n	8024e42 <memcmp+0xe>
 8024e3e:	2000      	movs	r0, #0
 8024e40:	e005      	b.n	8024e4e <memcmp+0x1a>
 8024e42:	5d03      	ldrb	r3, [r0, r4]
 8024e44:	3401      	adds	r4, #1
 8024e46:	5d0d      	ldrb	r5, [r1, r4]
 8024e48:	42ab      	cmp	r3, r5
 8024e4a:	d0f6      	beq.n	8024e3a <memcmp+0x6>
 8024e4c:	1b58      	subs	r0, r3, r5
 8024e4e:	bd30      	pop	{r4, r5, pc}

08024e50 <memcpy>:
 8024e50:	440a      	add	r2, r1
 8024e52:	4291      	cmp	r1, r2
 8024e54:	f100 33ff 	add.w	r3, r0, #4294967295
 8024e58:	d100      	bne.n	8024e5c <memcpy+0xc>
 8024e5a:	4770      	bx	lr
 8024e5c:	b510      	push	{r4, lr}
 8024e5e:	f811 4b01 	ldrb.w	r4, [r1], #1
 8024e62:	f803 4f01 	strb.w	r4, [r3, #1]!
 8024e66:	4291      	cmp	r1, r2
 8024e68:	d1f9      	bne.n	8024e5e <memcpy+0xe>
 8024e6a:	bd10      	pop	{r4, pc}

08024e6c <memmove>:
 8024e6c:	4288      	cmp	r0, r1
 8024e6e:	b510      	push	{r4, lr}
 8024e70:	eb01 0402 	add.w	r4, r1, r2
 8024e74:	d902      	bls.n	8024e7c <memmove+0x10>
 8024e76:	4284      	cmp	r4, r0
 8024e78:	4623      	mov	r3, r4
 8024e7a:	d807      	bhi.n	8024e8c <memmove+0x20>
 8024e7c:	1e43      	subs	r3, r0, #1
 8024e7e:	42a1      	cmp	r1, r4
 8024e80:	d008      	beq.n	8024e94 <memmove+0x28>
 8024e82:	f811 2b01 	ldrb.w	r2, [r1], #1
 8024e86:	f803 2f01 	strb.w	r2, [r3, #1]!
 8024e8a:	e7f8      	b.n	8024e7e <memmove+0x12>
 8024e8c:	4402      	add	r2, r0
 8024e8e:	4601      	mov	r1, r0
 8024e90:	428a      	cmp	r2, r1
 8024e92:	d100      	bne.n	8024e96 <memmove+0x2a>
 8024e94:	bd10      	pop	{r4, pc}
 8024e96:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8024e9a:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8024e9e:	e7f7      	b.n	8024e90 <memmove+0x24>

08024ea0 <memset>:
 8024ea0:	4402      	add	r2, r0
 8024ea2:	4603      	mov	r3, r0
 8024ea4:	4293      	cmp	r3, r2
 8024ea6:	d100      	bne.n	8024eaa <memset+0xa>
 8024ea8:	4770      	bx	lr
 8024eaa:	f803 1b01 	strb.w	r1, [r3], #1
 8024eae:	e7f9      	b.n	8024ea4 <memset+0x4>

08024eb0 <_free_r>:
 8024eb0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8024eb2:	2900      	cmp	r1, #0
 8024eb4:	d048      	beq.n	8024f48 <_free_r+0x98>
 8024eb6:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8024eba:	9001      	str	r0, [sp, #4]
 8024ebc:	2b00      	cmp	r3, #0
 8024ebe:	f1a1 0404 	sub.w	r4, r1, #4
 8024ec2:	bfb8      	it	lt
 8024ec4:	18e4      	addlt	r4, r4, r3
 8024ec6:	f002 ff09 	bl	8027cdc <__malloc_lock>
 8024eca:	4a20      	ldr	r2, [pc, #128]	; (8024f4c <_free_r+0x9c>)
 8024ecc:	9801      	ldr	r0, [sp, #4]
 8024ece:	6813      	ldr	r3, [r2, #0]
 8024ed0:	4615      	mov	r5, r2
 8024ed2:	b933      	cbnz	r3, 8024ee2 <_free_r+0x32>
 8024ed4:	6063      	str	r3, [r4, #4]
 8024ed6:	6014      	str	r4, [r2, #0]
 8024ed8:	b003      	add	sp, #12
 8024eda:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8024ede:	f002 bf03 	b.w	8027ce8 <__malloc_unlock>
 8024ee2:	42a3      	cmp	r3, r4
 8024ee4:	d90b      	bls.n	8024efe <_free_r+0x4e>
 8024ee6:	6821      	ldr	r1, [r4, #0]
 8024ee8:	1862      	adds	r2, r4, r1
 8024eea:	4293      	cmp	r3, r2
 8024eec:	bf04      	itt	eq
 8024eee:	681a      	ldreq	r2, [r3, #0]
 8024ef0:	685b      	ldreq	r3, [r3, #4]
 8024ef2:	6063      	str	r3, [r4, #4]
 8024ef4:	bf04      	itt	eq
 8024ef6:	1852      	addeq	r2, r2, r1
 8024ef8:	6022      	streq	r2, [r4, #0]
 8024efa:	602c      	str	r4, [r5, #0]
 8024efc:	e7ec      	b.n	8024ed8 <_free_r+0x28>
 8024efe:	461a      	mov	r2, r3
 8024f00:	685b      	ldr	r3, [r3, #4]
 8024f02:	b10b      	cbz	r3, 8024f08 <_free_r+0x58>
 8024f04:	42a3      	cmp	r3, r4
 8024f06:	d9fa      	bls.n	8024efe <_free_r+0x4e>
 8024f08:	6811      	ldr	r1, [r2, #0]
 8024f0a:	1855      	adds	r5, r2, r1
 8024f0c:	42a5      	cmp	r5, r4
 8024f0e:	d10b      	bne.n	8024f28 <_free_r+0x78>
 8024f10:	6824      	ldr	r4, [r4, #0]
 8024f12:	4421      	add	r1, r4
 8024f14:	1854      	adds	r4, r2, r1
 8024f16:	42a3      	cmp	r3, r4
 8024f18:	6011      	str	r1, [r2, #0]
 8024f1a:	d1dd      	bne.n	8024ed8 <_free_r+0x28>
 8024f1c:	681c      	ldr	r4, [r3, #0]
 8024f1e:	685b      	ldr	r3, [r3, #4]
 8024f20:	6053      	str	r3, [r2, #4]
 8024f22:	4421      	add	r1, r4
 8024f24:	6011      	str	r1, [r2, #0]
 8024f26:	e7d7      	b.n	8024ed8 <_free_r+0x28>
 8024f28:	d902      	bls.n	8024f30 <_free_r+0x80>
 8024f2a:	230c      	movs	r3, #12
 8024f2c:	6003      	str	r3, [r0, #0]
 8024f2e:	e7d3      	b.n	8024ed8 <_free_r+0x28>
 8024f30:	6825      	ldr	r5, [r4, #0]
 8024f32:	1961      	adds	r1, r4, r5
 8024f34:	428b      	cmp	r3, r1
 8024f36:	bf04      	itt	eq
 8024f38:	6819      	ldreq	r1, [r3, #0]
 8024f3a:	685b      	ldreq	r3, [r3, #4]
 8024f3c:	6063      	str	r3, [r4, #4]
 8024f3e:	bf04      	itt	eq
 8024f40:	1949      	addeq	r1, r1, r5
 8024f42:	6021      	streq	r1, [r4, #0]
 8024f44:	6054      	str	r4, [r2, #4]
 8024f46:	e7c7      	b.n	8024ed8 <_free_r+0x28>
 8024f48:	b003      	add	sp, #12
 8024f4a:	bd30      	pop	{r4, r5, pc}
 8024f4c:	20000848 	.word	0x20000848

08024f50 <_malloc_r>:
 8024f50:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8024f52:	1ccd      	adds	r5, r1, #3
 8024f54:	f025 0503 	bic.w	r5, r5, #3
 8024f58:	3508      	adds	r5, #8
 8024f5a:	2d0c      	cmp	r5, #12
 8024f5c:	bf38      	it	cc
 8024f5e:	250c      	movcc	r5, #12
 8024f60:	2d00      	cmp	r5, #0
 8024f62:	4606      	mov	r6, r0
 8024f64:	db01      	blt.n	8024f6a <_malloc_r+0x1a>
 8024f66:	42a9      	cmp	r1, r5
 8024f68:	d903      	bls.n	8024f72 <_malloc_r+0x22>
 8024f6a:	230c      	movs	r3, #12
 8024f6c:	6033      	str	r3, [r6, #0]
 8024f6e:	2000      	movs	r0, #0
 8024f70:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8024f72:	f002 feb3 	bl	8027cdc <__malloc_lock>
 8024f76:	4921      	ldr	r1, [pc, #132]	; (8024ffc <_malloc_r+0xac>)
 8024f78:	680a      	ldr	r2, [r1, #0]
 8024f7a:	4614      	mov	r4, r2
 8024f7c:	b99c      	cbnz	r4, 8024fa6 <_malloc_r+0x56>
 8024f7e:	4f20      	ldr	r7, [pc, #128]	; (8025000 <_malloc_r+0xb0>)
 8024f80:	683b      	ldr	r3, [r7, #0]
 8024f82:	b923      	cbnz	r3, 8024f8e <_malloc_r+0x3e>
 8024f84:	4621      	mov	r1, r4
 8024f86:	4630      	mov	r0, r6
 8024f88:	f000 fca6 	bl	80258d8 <_sbrk_r>
 8024f8c:	6038      	str	r0, [r7, #0]
 8024f8e:	4629      	mov	r1, r5
 8024f90:	4630      	mov	r0, r6
 8024f92:	f000 fca1 	bl	80258d8 <_sbrk_r>
 8024f96:	1c43      	adds	r3, r0, #1
 8024f98:	d123      	bne.n	8024fe2 <_malloc_r+0x92>
 8024f9a:	230c      	movs	r3, #12
 8024f9c:	6033      	str	r3, [r6, #0]
 8024f9e:	4630      	mov	r0, r6
 8024fa0:	f002 fea2 	bl	8027ce8 <__malloc_unlock>
 8024fa4:	e7e3      	b.n	8024f6e <_malloc_r+0x1e>
 8024fa6:	6823      	ldr	r3, [r4, #0]
 8024fa8:	1b5b      	subs	r3, r3, r5
 8024faa:	d417      	bmi.n	8024fdc <_malloc_r+0x8c>
 8024fac:	2b0b      	cmp	r3, #11
 8024fae:	d903      	bls.n	8024fb8 <_malloc_r+0x68>
 8024fb0:	6023      	str	r3, [r4, #0]
 8024fb2:	441c      	add	r4, r3
 8024fb4:	6025      	str	r5, [r4, #0]
 8024fb6:	e004      	b.n	8024fc2 <_malloc_r+0x72>
 8024fb8:	6863      	ldr	r3, [r4, #4]
 8024fba:	42a2      	cmp	r2, r4
 8024fbc:	bf0c      	ite	eq
 8024fbe:	600b      	streq	r3, [r1, #0]
 8024fc0:	6053      	strne	r3, [r2, #4]
 8024fc2:	4630      	mov	r0, r6
 8024fc4:	f002 fe90 	bl	8027ce8 <__malloc_unlock>
 8024fc8:	f104 000b 	add.w	r0, r4, #11
 8024fcc:	1d23      	adds	r3, r4, #4
 8024fce:	f020 0007 	bic.w	r0, r0, #7
 8024fd2:	1ac2      	subs	r2, r0, r3
 8024fd4:	d0cc      	beq.n	8024f70 <_malloc_r+0x20>
 8024fd6:	1a1b      	subs	r3, r3, r0
 8024fd8:	50a3      	str	r3, [r4, r2]
 8024fda:	e7c9      	b.n	8024f70 <_malloc_r+0x20>
 8024fdc:	4622      	mov	r2, r4
 8024fde:	6864      	ldr	r4, [r4, #4]
 8024fe0:	e7cc      	b.n	8024f7c <_malloc_r+0x2c>
 8024fe2:	1cc4      	adds	r4, r0, #3
 8024fe4:	f024 0403 	bic.w	r4, r4, #3
 8024fe8:	42a0      	cmp	r0, r4
 8024fea:	d0e3      	beq.n	8024fb4 <_malloc_r+0x64>
 8024fec:	1a21      	subs	r1, r4, r0
 8024fee:	4630      	mov	r0, r6
 8024ff0:	f000 fc72 	bl	80258d8 <_sbrk_r>
 8024ff4:	3001      	adds	r0, #1
 8024ff6:	d1dd      	bne.n	8024fb4 <_malloc_r+0x64>
 8024ff8:	e7cf      	b.n	8024f9a <_malloc_r+0x4a>
 8024ffa:	bf00      	nop
 8024ffc:	20000848 	.word	0x20000848
 8025000:	2000084c 	.word	0x2000084c

08025004 <__cvt>:
 8025004:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8025008:	ec55 4b10 	vmov	r4, r5, d0
 802500c:	2d00      	cmp	r5, #0
 802500e:	460e      	mov	r6, r1
 8025010:	4619      	mov	r1, r3
 8025012:	462b      	mov	r3, r5
 8025014:	bfbb      	ittet	lt
 8025016:	f105 4300 	addlt.w	r3, r5, #2147483648	; 0x80000000
 802501a:	461d      	movlt	r5, r3
 802501c:	2300      	movge	r3, #0
 802501e:	232d      	movlt	r3, #45	; 0x2d
 8025020:	700b      	strb	r3, [r1, #0]
 8025022:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8025024:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 8025028:	4691      	mov	r9, r2
 802502a:	f023 0820 	bic.w	r8, r3, #32
 802502e:	bfbc      	itt	lt
 8025030:	4622      	movlt	r2, r4
 8025032:	4614      	movlt	r4, r2
 8025034:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 8025038:	d005      	beq.n	8025046 <__cvt+0x42>
 802503a:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 802503e:	d100      	bne.n	8025042 <__cvt+0x3e>
 8025040:	3601      	adds	r6, #1
 8025042:	2102      	movs	r1, #2
 8025044:	e000      	b.n	8025048 <__cvt+0x44>
 8025046:	2103      	movs	r1, #3
 8025048:	ab03      	add	r3, sp, #12
 802504a:	9301      	str	r3, [sp, #4]
 802504c:	ab02      	add	r3, sp, #8
 802504e:	9300      	str	r3, [sp, #0]
 8025050:	ec45 4b10 	vmov	d0, r4, r5
 8025054:	4653      	mov	r3, sl
 8025056:	4632      	mov	r2, r6
 8025058:	f001 fcca 	bl	80269f0 <_dtoa_r>
 802505c:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 8025060:	4607      	mov	r7, r0
 8025062:	d102      	bne.n	802506a <__cvt+0x66>
 8025064:	f019 0f01 	tst.w	r9, #1
 8025068:	d022      	beq.n	80250b0 <__cvt+0xac>
 802506a:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 802506e:	eb07 0906 	add.w	r9, r7, r6
 8025072:	d110      	bne.n	8025096 <__cvt+0x92>
 8025074:	783b      	ldrb	r3, [r7, #0]
 8025076:	2b30      	cmp	r3, #48	; 0x30
 8025078:	d10a      	bne.n	8025090 <__cvt+0x8c>
 802507a:	2200      	movs	r2, #0
 802507c:	2300      	movs	r3, #0
 802507e:	4620      	mov	r0, r4
 8025080:	4629      	mov	r1, r5
 8025082:	f7db fd41 	bl	8000b08 <__aeabi_dcmpeq>
 8025086:	b918      	cbnz	r0, 8025090 <__cvt+0x8c>
 8025088:	f1c6 0601 	rsb	r6, r6, #1
 802508c:	f8ca 6000 	str.w	r6, [sl]
 8025090:	f8da 3000 	ldr.w	r3, [sl]
 8025094:	4499      	add	r9, r3
 8025096:	2200      	movs	r2, #0
 8025098:	2300      	movs	r3, #0
 802509a:	4620      	mov	r0, r4
 802509c:	4629      	mov	r1, r5
 802509e:	f7db fd33 	bl	8000b08 <__aeabi_dcmpeq>
 80250a2:	b108      	cbz	r0, 80250a8 <__cvt+0xa4>
 80250a4:	f8cd 900c 	str.w	r9, [sp, #12]
 80250a8:	2230      	movs	r2, #48	; 0x30
 80250aa:	9b03      	ldr	r3, [sp, #12]
 80250ac:	454b      	cmp	r3, r9
 80250ae:	d307      	bcc.n	80250c0 <__cvt+0xbc>
 80250b0:	9b03      	ldr	r3, [sp, #12]
 80250b2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80250b4:	1bdb      	subs	r3, r3, r7
 80250b6:	4638      	mov	r0, r7
 80250b8:	6013      	str	r3, [r2, #0]
 80250ba:	b004      	add	sp, #16
 80250bc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80250c0:	1c59      	adds	r1, r3, #1
 80250c2:	9103      	str	r1, [sp, #12]
 80250c4:	701a      	strb	r2, [r3, #0]
 80250c6:	e7f0      	b.n	80250aa <__cvt+0xa6>

080250c8 <__exponent>:
 80250c8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80250ca:	4603      	mov	r3, r0
 80250cc:	2900      	cmp	r1, #0
 80250ce:	bfb8      	it	lt
 80250d0:	4249      	neglt	r1, r1
 80250d2:	f803 2b02 	strb.w	r2, [r3], #2
 80250d6:	bfb4      	ite	lt
 80250d8:	222d      	movlt	r2, #45	; 0x2d
 80250da:	222b      	movge	r2, #43	; 0x2b
 80250dc:	2909      	cmp	r1, #9
 80250de:	7042      	strb	r2, [r0, #1]
 80250e0:	dd2a      	ble.n	8025138 <__exponent+0x70>
 80250e2:	f10d 0407 	add.w	r4, sp, #7
 80250e6:	46a4      	mov	ip, r4
 80250e8:	270a      	movs	r7, #10
 80250ea:	46a6      	mov	lr, r4
 80250ec:	460a      	mov	r2, r1
 80250ee:	fb91 f6f7 	sdiv	r6, r1, r7
 80250f2:	fb07 1516 	mls	r5, r7, r6, r1
 80250f6:	3530      	adds	r5, #48	; 0x30
 80250f8:	2a63      	cmp	r2, #99	; 0x63
 80250fa:	f104 34ff 	add.w	r4, r4, #4294967295
 80250fe:	f80e 5c01 	strb.w	r5, [lr, #-1]
 8025102:	4631      	mov	r1, r6
 8025104:	dcf1      	bgt.n	80250ea <__exponent+0x22>
 8025106:	3130      	adds	r1, #48	; 0x30
 8025108:	f1ae 0502 	sub.w	r5, lr, #2
 802510c:	f804 1c01 	strb.w	r1, [r4, #-1]
 8025110:	1c44      	adds	r4, r0, #1
 8025112:	4629      	mov	r1, r5
 8025114:	4561      	cmp	r1, ip
 8025116:	d30a      	bcc.n	802512e <__exponent+0x66>
 8025118:	f10d 0209 	add.w	r2, sp, #9
 802511c:	eba2 020e 	sub.w	r2, r2, lr
 8025120:	4565      	cmp	r5, ip
 8025122:	bf88      	it	hi
 8025124:	2200      	movhi	r2, #0
 8025126:	4413      	add	r3, r2
 8025128:	1a18      	subs	r0, r3, r0
 802512a:	b003      	add	sp, #12
 802512c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802512e:	f811 2b01 	ldrb.w	r2, [r1], #1
 8025132:	f804 2f01 	strb.w	r2, [r4, #1]!
 8025136:	e7ed      	b.n	8025114 <__exponent+0x4c>
 8025138:	2330      	movs	r3, #48	; 0x30
 802513a:	3130      	adds	r1, #48	; 0x30
 802513c:	7083      	strb	r3, [r0, #2]
 802513e:	70c1      	strb	r1, [r0, #3]
 8025140:	1d03      	adds	r3, r0, #4
 8025142:	e7f1      	b.n	8025128 <__exponent+0x60>

08025144 <_printf_float>:
 8025144:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025148:	ed2d 8b02 	vpush	{d8}
 802514c:	b08d      	sub	sp, #52	; 0x34
 802514e:	460c      	mov	r4, r1
 8025150:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 8025154:	4616      	mov	r6, r2
 8025156:	461f      	mov	r7, r3
 8025158:	4605      	mov	r5, r0
 802515a:	f002 fda5 	bl	8027ca8 <_localeconv_r>
 802515e:	f8d0 a000 	ldr.w	sl, [r0]
 8025162:	4650      	mov	r0, sl
 8025164:	f7db f8a4 	bl	80002b0 <strlen>
 8025168:	2300      	movs	r3, #0
 802516a:	930a      	str	r3, [sp, #40]	; 0x28
 802516c:	6823      	ldr	r3, [r4, #0]
 802516e:	9305      	str	r3, [sp, #20]
 8025170:	f8d8 3000 	ldr.w	r3, [r8]
 8025174:	f894 b018 	ldrb.w	fp, [r4, #24]
 8025178:	3307      	adds	r3, #7
 802517a:	f023 0307 	bic.w	r3, r3, #7
 802517e:	f103 0208 	add.w	r2, r3, #8
 8025182:	f8c8 2000 	str.w	r2, [r8]
 8025186:	e9d3 2300 	ldrd	r2, r3, [r3]
 802518a:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 802518e:	e9d4 8912 	ldrd	r8, r9, [r4, #72]	; 0x48
 8025192:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 8025196:	9307      	str	r3, [sp, #28]
 8025198:	f8cd 8018 	str.w	r8, [sp, #24]
 802519c:	ee08 0a10 	vmov	s16, r0
 80251a0:	4b9f      	ldr	r3, [pc, #636]	; (8025420 <_printf_float+0x2dc>)
 80251a2:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80251a6:	f04f 32ff 	mov.w	r2, #4294967295
 80251aa:	f7db fcdf 	bl	8000b6c <__aeabi_dcmpun>
 80251ae:	bb88      	cbnz	r0, 8025214 <_printf_float+0xd0>
 80251b0:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80251b4:	4b9a      	ldr	r3, [pc, #616]	; (8025420 <_printf_float+0x2dc>)
 80251b6:	f04f 32ff 	mov.w	r2, #4294967295
 80251ba:	f7db fcb9 	bl	8000b30 <__aeabi_dcmple>
 80251be:	bb48      	cbnz	r0, 8025214 <_printf_float+0xd0>
 80251c0:	2200      	movs	r2, #0
 80251c2:	2300      	movs	r3, #0
 80251c4:	4640      	mov	r0, r8
 80251c6:	4649      	mov	r1, r9
 80251c8:	f7db fca8 	bl	8000b1c <__aeabi_dcmplt>
 80251cc:	b110      	cbz	r0, 80251d4 <_printf_float+0x90>
 80251ce:	232d      	movs	r3, #45	; 0x2d
 80251d0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80251d4:	4b93      	ldr	r3, [pc, #588]	; (8025424 <_printf_float+0x2e0>)
 80251d6:	4894      	ldr	r0, [pc, #592]	; (8025428 <_printf_float+0x2e4>)
 80251d8:	f1bb 0f47 	cmp.w	fp, #71	; 0x47
 80251dc:	bf94      	ite	ls
 80251de:	4698      	movls	r8, r3
 80251e0:	4680      	movhi	r8, r0
 80251e2:	2303      	movs	r3, #3
 80251e4:	6123      	str	r3, [r4, #16]
 80251e6:	9b05      	ldr	r3, [sp, #20]
 80251e8:	f023 0204 	bic.w	r2, r3, #4
 80251ec:	6022      	str	r2, [r4, #0]
 80251ee:	f04f 0900 	mov.w	r9, #0
 80251f2:	9700      	str	r7, [sp, #0]
 80251f4:	4633      	mov	r3, r6
 80251f6:	aa0b      	add	r2, sp, #44	; 0x2c
 80251f8:	4621      	mov	r1, r4
 80251fa:	4628      	mov	r0, r5
 80251fc:	f000 f9d8 	bl	80255b0 <_printf_common>
 8025200:	3001      	adds	r0, #1
 8025202:	f040 8090 	bne.w	8025326 <_printf_float+0x1e2>
 8025206:	f04f 30ff 	mov.w	r0, #4294967295
 802520a:	b00d      	add	sp, #52	; 0x34
 802520c:	ecbd 8b02 	vpop	{d8}
 8025210:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025214:	4642      	mov	r2, r8
 8025216:	464b      	mov	r3, r9
 8025218:	4640      	mov	r0, r8
 802521a:	4649      	mov	r1, r9
 802521c:	f7db fca6 	bl	8000b6c <__aeabi_dcmpun>
 8025220:	b140      	cbz	r0, 8025234 <_printf_float+0xf0>
 8025222:	464b      	mov	r3, r9
 8025224:	2b00      	cmp	r3, #0
 8025226:	bfbc      	itt	lt
 8025228:	232d      	movlt	r3, #45	; 0x2d
 802522a:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 802522e:	487f      	ldr	r0, [pc, #508]	; (802542c <_printf_float+0x2e8>)
 8025230:	4b7f      	ldr	r3, [pc, #508]	; (8025430 <_printf_float+0x2ec>)
 8025232:	e7d1      	b.n	80251d8 <_printf_float+0x94>
 8025234:	6863      	ldr	r3, [r4, #4]
 8025236:	f00b 02df 	and.w	r2, fp, #223	; 0xdf
 802523a:	9206      	str	r2, [sp, #24]
 802523c:	1c5a      	adds	r2, r3, #1
 802523e:	d13f      	bne.n	80252c0 <_printf_float+0x17c>
 8025240:	2306      	movs	r3, #6
 8025242:	6063      	str	r3, [r4, #4]
 8025244:	9b05      	ldr	r3, [sp, #20]
 8025246:	6861      	ldr	r1, [r4, #4]
 8025248:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
 802524c:	2300      	movs	r3, #0
 802524e:	9303      	str	r3, [sp, #12]
 8025250:	ab0a      	add	r3, sp, #40	; 0x28
 8025252:	e9cd b301 	strd	fp, r3, [sp, #4]
 8025256:	ab09      	add	r3, sp, #36	; 0x24
 8025258:	ec49 8b10 	vmov	d0, r8, r9
 802525c:	9300      	str	r3, [sp, #0]
 802525e:	6022      	str	r2, [r4, #0]
 8025260:	f10d 0323 	add.w	r3, sp, #35	; 0x23
 8025264:	4628      	mov	r0, r5
 8025266:	f7ff fecd 	bl	8025004 <__cvt>
 802526a:	9b06      	ldr	r3, [sp, #24]
 802526c:	9909      	ldr	r1, [sp, #36]	; 0x24
 802526e:	2b47      	cmp	r3, #71	; 0x47
 8025270:	4680      	mov	r8, r0
 8025272:	d108      	bne.n	8025286 <_printf_float+0x142>
 8025274:	1cc8      	adds	r0, r1, #3
 8025276:	db02      	blt.n	802527e <_printf_float+0x13a>
 8025278:	6863      	ldr	r3, [r4, #4]
 802527a:	4299      	cmp	r1, r3
 802527c:	dd41      	ble.n	8025302 <_printf_float+0x1be>
 802527e:	f1ab 0b02 	sub.w	fp, fp, #2
 8025282:	fa5f fb8b 	uxtb.w	fp, fp
 8025286:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 802528a:	d820      	bhi.n	80252ce <_printf_float+0x18a>
 802528c:	3901      	subs	r1, #1
 802528e:	465a      	mov	r2, fp
 8025290:	f104 0050 	add.w	r0, r4, #80	; 0x50
 8025294:	9109      	str	r1, [sp, #36]	; 0x24
 8025296:	f7ff ff17 	bl	80250c8 <__exponent>
 802529a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802529c:	1813      	adds	r3, r2, r0
 802529e:	2a01      	cmp	r2, #1
 80252a0:	4681      	mov	r9, r0
 80252a2:	6123      	str	r3, [r4, #16]
 80252a4:	dc02      	bgt.n	80252ac <_printf_float+0x168>
 80252a6:	6822      	ldr	r2, [r4, #0]
 80252a8:	07d2      	lsls	r2, r2, #31
 80252aa:	d501      	bpl.n	80252b0 <_printf_float+0x16c>
 80252ac:	3301      	adds	r3, #1
 80252ae:	6123      	str	r3, [r4, #16]
 80252b0:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
 80252b4:	2b00      	cmp	r3, #0
 80252b6:	d09c      	beq.n	80251f2 <_printf_float+0xae>
 80252b8:	232d      	movs	r3, #45	; 0x2d
 80252ba:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80252be:	e798      	b.n	80251f2 <_printf_float+0xae>
 80252c0:	9a06      	ldr	r2, [sp, #24]
 80252c2:	2a47      	cmp	r2, #71	; 0x47
 80252c4:	d1be      	bne.n	8025244 <_printf_float+0x100>
 80252c6:	2b00      	cmp	r3, #0
 80252c8:	d1bc      	bne.n	8025244 <_printf_float+0x100>
 80252ca:	2301      	movs	r3, #1
 80252cc:	e7b9      	b.n	8025242 <_printf_float+0xfe>
 80252ce:	f1bb 0f66 	cmp.w	fp, #102	; 0x66
 80252d2:	d118      	bne.n	8025306 <_printf_float+0x1c2>
 80252d4:	2900      	cmp	r1, #0
 80252d6:	6863      	ldr	r3, [r4, #4]
 80252d8:	dd0b      	ble.n	80252f2 <_printf_float+0x1ae>
 80252da:	6121      	str	r1, [r4, #16]
 80252dc:	b913      	cbnz	r3, 80252e4 <_printf_float+0x1a0>
 80252de:	6822      	ldr	r2, [r4, #0]
 80252e0:	07d0      	lsls	r0, r2, #31
 80252e2:	d502      	bpl.n	80252ea <_printf_float+0x1a6>
 80252e4:	3301      	adds	r3, #1
 80252e6:	440b      	add	r3, r1
 80252e8:	6123      	str	r3, [r4, #16]
 80252ea:	65a1      	str	r1, [r4, #88]	; 0x58
 80252ec:	f04f 0900 	mov.w	r9, #0
 80252f0:	e7de      	b.n	80252b0 <_printf_float+0x16c>
 80252f2:	b913      	cbnz	r3, 80252fa <_printf_float+0x1b6>
 80252f4:	6822      	ldr	r2, [r4, #0]
 80252f6:	07d2      	lsls	r2, r2, #31
 80252f8:	d501      	bpl.n	80252fe <_printf_float+0x1ba>
 80252fa:	3302      	adds	r3, #2
 80252fc:	e7f4      	b.n	80252e8 <_printf_float+0x1a4>
 80252fe:	2301      	movs	r3, #1
 8025300:	e7f2      	b.n	80252e8 <_printf_float+0x1a4>
 8025302:	f04f 0b67 	mov.w	fp, #103	; 0x67
 8025306:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8025308:	4299      	cmp	r1, r3
 802530a:	db05      	blt.n	8025318 <_printf_float+0x1d4>
 802530c:	6823      	ldr	r3, [r4, #0]
 802530e:	6121      	str	r1, [r4, #16]
 8025310:	07d8      	lsls	r0, r3, #31
 8025312:	d5ea      	bpl.n	80252ea <_printf_float+0x1a6>
 8025314:	1c4b      	adds	r3, r1, #1
 8025316:	e7e7      	b.n	80252e8 <_printf_float+0x1a4>
 8025318:	2900      	cmp	r1, #0
 802531a:	bfd4      	ite	le
 802531c:	f1c1 0202 	rsble	r2, r1, #2
 8025320:	2201      	movgt	r2, #1
 8025322:	4413      	add	r3, r2
 8025324:	e7e0      	b.n	80252e8 <_printf_float+0x1a4>
 8025326:	6823      	ldr	r3, [r4, #0]
 8025328:	055a      	lsls	r2, r3, #21
 802532a:	d407      	bmi.n	802533c <_printf_float+0x1f8>
 802532c:	6923      	ldr	r3, [r4, #16]
 802532e:	4642      	mov	r2, r8
 8025330:	4631      	mov	r1, r6
 8025332:	4628      	mov	r0, r5
 8025334:	47b8      	blx	r7
 8025336:	3001      	adds	r0, #1
 8025338:	d12c      	bne.n	8025394 <_printf_float+0x250>
 802533a:	e764      	b.n	8025206 <_printf_float+0xc2>
 802533c:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 8025340:	f240 80e0 	bls.w	8025504 <_printf_float+0x3c0>
 8025344:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8025348:	2200      	movs	r2, #0
 802534a:	2300      	movs	r3, #0
 802534c:	f7db fbdc 	bl	8000b08 <__aeabi_dcmpeq>
 8025350:	2800      	cmp	r0, #0
 8025352:	d034      	beq.n	80253be <_printf_float+0x27a>
 8025354:	4a37      	ldr	r2, [pc, #220]	; (8025434 <_printf_float+0x2f0>)
 8025356:	2301      	movs	r3, #1
 8025358:	4631      	mov	r1, r6
 802535a:	4628      	mov	r0, r5
 802535c:	47b8      	blx	r7
 802535e:	3001      	adds	r0, #1
 8025360:	f43f af51 	beq.w	8025206 <_printf_float+0xc2>
 8025364:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8025368:	429a      	cmp	r2, r3
 802536a:	db02      	blt.n	8025372 <_printf_float+0x22e>
 802536c:	6823      	ldr	r3, [r4, #0]
 802536e:	07d8      	lsls	r0, r3, #31
 8025370:	d510      	bpl.n	8025394 <_printf_float+0x250>
 8025372:	ee18 3a10 	vmov	r3, s16
 8025376:	4652      	mov	r2, sl
 8025378:	4631      	mov	r1, r6
 802537a:	4628      	mov	r0, r5
 802537c:	47b8      	blx	r7
 802537e:	3001      	adds	r0, #1
 8025380:	f43f af41 	beq.w	8025206 <_printf_float+0xc2>
 8025384:	f04f 0800 	mov.w	r8, #0
 8025388:	f104 091a 	add.w	r9, r4, #26
 802538c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802538e:	3b01      	subs	r3, #1
 8025390:	4543      	cmp	r3, r8
 8025392:	dc09      	bgt.n	80253a8 <_printf_float+0x264>
 8025394:	6823      	ldr	r3, [r4, #0]
 8025396:	079b      	lsls	r3, r3, #30
 8025398:	f100 8105 	bmi.w	80255a6 <_printf_float+0x462>
 802539c:	68e0      	ldr	r0, [r4, #12]
 802539e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80253a0:	4298      	cmp	r0, r3
 80253a2:	bfb8      	it	lt
 80253a4:	4618      	movlt	r0, r3
 80253a6:	e730      	b.n	802520a <_printf_float+0xc6>
 80253a8:	2301      	movs	r3, #1
 80253aa:	464a      	mov	r2, r9
 80253ac:	4631      	mov	r1, r6
 80253ae:	4628      	mov	r0, r5
 80253b0:	47b8      	blx	r7
 80253b2:	3001      	adds	r0, #1
 80253b4:	f43f af27 	beq.w	8025206 <_printf_float+0xc2>
 80253b8:	f108 0801 	add.w	r8, r8, #1
 80253bc:	e7e6      	b.n	802538c <_printf_float+0x248>
 80253be:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80253c0:	2b00      	cmp	r3, #0
 80253c2:	dc39      	bgt.n	8025438 <_printf_float+0x2f4>
 80253c4:	4a1b      	ldr	r2, [pc, #108]	; (8025434 <_printf_float+0x2f0>)
 80253c6:	2301      	movs	r3, #1
 80253c8:	4631      	mov	r1, r6
 80253ca:	4628      	mov	r0, r5
 80253cc:	47b8      	blx	r7
 80253ce:	3001      	adds	r0, #1
 80253d0:	f43f af19 	beq.w	8025206 <_printf_float+0xc2>
 80253d4:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80253d8:	4313      	orrs	r3, r2
 80253da:	d102      	bne.n	80253e2 <_printf_float+0x29e>
 80253dc:	6823      	ldr	r3, [r4, #0]
 80253de:	07d9      	lsls	r1, r3, #31
 80253e0:	d5d8      	bpl.n	8025394 <_printf_float+0x250>
 80253e2:	ee18 3a10 	vmov	r3, s16
 80253e6:	4652      	mov	r2, sl
 80253e8:	4631      	mov	r1, r6
 80253ea:	4628      	mov	r0, r5
 80253ec:	47b8      	blx	r7
 80253ee:	3001      	adds	r0, #1
 80253f0:	f43f af09 	beq.w	8025206 <_printf_float+0xc2>
 80253f4:	f04f 0900 	mov.w	r9, #0
 80253f8:	f104 0a1a 	add.w	sl, r4, #26
 80253fc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80253fe:	425b      	negs	r3, r3
 8025400:	454b      	cmp	r3, r9
 8025402:	dc01      	bgt.n	8025408 <_printf_float+0x2c4>
 8025404:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8025406:	e792      	b.n	802532e <_printf_float+0x1ea>
 8025408:	2301      	movs	r3, #1
 802540a:	4652      	mov	r2, sl
 802540c:	4631      	mov	r1, r6
 802540e:	4628      	mov	r0, r5
 8025410:	47b8      	blx	r7
 8025412:	3001      	adds	r0, #1
 8025414:	f43f aef7 	beq.w	8025206 <_printf_float+0xc2>
 8025418:	f109 0901 	add.w	r9, r9, #1
 802541c:	e7ee      	b.n	80253fc <_printf_float+0x2b8>
 802541e:	bf00      	nop
 8025420:	7fefffff 	.word	0x7fefffff
 8025424:	0802a35c 	.word	0x0802a35c
 8025428:	0802a360 	.word	0x0802a360
 802542c:	0802a368 	.word	0x0802a368
 8025430:	0802a364 	.word	0x0802a364
 8025434:	0802a36c 	.word	0x0802a36c
 8025438:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802543a:	6da3      	ldr	r3, [r4, #88]	; 0x58
 802543c:	429a      	cmp	r2, r3
 802543e:	bfa8      	it	ge
 8025440:	461a      	movge	r2, r3
 8025442:	2a00      	cmp	r2, #0
 8025444:	4691      	mov	r9, r2
 8025446:	dc37      	bgt.n	80254b8 <_printf_float+0x374>
 8025448:	f04f 0b00 	mov.w	fp, #0
 802544c:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8025450:	f104 021a 	add.w	r2, r4, #26
 8025454:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8025456:	9305      	str	r3, [sp, #20]
 8025458:	eba3 0309 	sub.w	r3, r3, r9
 802545c:	455b      	cmp	r3, fp
 802545e:	dc33      	bgt.n	80254c8 <_printf_float+0x384>
 8025460:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8025464:	429a      	cmp	r2, r3
 8025466:	db3b      	blt.n	80254e0 <_printf_float+0x39c>
 8025468:	6823      	ldr	r3, [r4, #0]
 802546a:	07da      	lsls	r2, r3, #31
 802546c:	d438      	bmi.n	80254e0 <_printf_float+0x39c>
 802546e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8025470:	9b05      	ldr	r3, [sp, #20]
 8025472:	9909      	ldr	r1, [sp, #36]	; 0x24
 8025474:	1ad3      	subs	r3, r2, r3
 8025476:	eba2 0901 	sub.w	r9, r2, r1
 802547a:	4599      	cmp	r9, r3
 802547c:	bfa8      	it	ge
 802547e:	4699      	movge	r9, r3
 8025480:	f1b9 0f00 	cmp.w	r9, #0
 8025484:	dc35      	bgt.n	80254f2 <_printf_float+0x3ae>
 8025486:	f04f 0800 	mov.w	r8, #0
 802548a:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 802548e:	f104 0a1a 	add.w	sl, r4, #26
 8025492:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8025496:	1a9b      	subs	r3, r3, r2
 8025498:	eba3 0309 	sub.w	r3, r3, r9
 802549c:	4543      	cmp	r3, r8
 802549e:	f77f af79 	ble.w	8025394 <_printf_float+0x250>
 80254a2:	2301      	movs	r3, #1
 80254a4:	4652      	mov	r2, sl
 80254a6:	4631      	mov	r1, r6
 80254a8:	4628      	mov	r0, r5
 80254aa:	47b8      	blx	r7
 80254ac:	3001      	adds	r0, #1
 80254ae:	f43f aeaa 	beq.w	8025206 <_printf_float+0xc2>
 80254b2:	f108 0801 	add.w	r8, r8, #1
 80254b6:	e7ec      	b.n	8025492 <_printf_float+0x34e>
 80254b8:	4613      	mov	r3, r2
 80254ba:	4631      	mov	r1, r6
 80254bc:	4642      	mov	r2, r8
 80254be:	4628      	mov	r0, r5
 80254c0:	47b8      	blx	r7
 80254c2:	3001      	adds	r0, #1
 80254c4:	d1c0      	bne.n	8025448 <_printf_float+0x304>
 80254c6:	e69e      	b.n	8025206 <_printf_float+0xc2>
 80254c8:	2301      	movs	r3, #1
 80254ca:	4631      	mov	r1, r6
 80254cc:	4628      	mov	r0, r5
 80254ce:	9205      	str	r2, [sp, #20]
 80254d0:	47b8      	blx	r7
 80254d2:	3001      	adds	r0, #1
 80254d4:	f43f ae97 	beq.w	8025206 <_printf_float+0xc2>
 80254d8:	9a05      	ldr	r2, [sp, #20]
 80254da:	f10b 0b01 	add.w	fp, fp, #1
 80254de:	e7b9      	b.n	8025454 <_printf_float+0x310>
 80254e0:	ee18 3a10 	vmov	r3, s16
 80254e4:	4652      	mov	r2, sl
 80254e6:	4631      	mov	r1, r6
 80254e8:	4628      	mov	r0, r5
 80254ea:	47b8      	blx	r7
 80254ec:	3001      	adds	r0, #1
 80254ee:	d1be      	bne.n	802546e <_printf_float+0x32a>
 80254f0:	e689      	b.n	8025206 <_printf_float+0xc2>
 80254f2:	9a05      	ldr	r2, [sp, #20]
 80254f4:	464b      	mov	r3, r9
 80254f6:	4442      	add	r2, r8
 80254f8:	4631      	mov	r1, r6
 80254fa:	4628      	mov	r0, r5
 80254fc:	47b8      	blx	r7
 80254fe:	3001      	adds	r0, #1
 8025500:	d1c1      	bne.n	8025486 <_printf_float+0x342>
 8025502:	e680      	b.n	8025206 <_printf_float+0xc2>
 8025504:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8025506:	2a01      	cmp	r2, #1
 8025508:	dc01      	bgt.n	802550e <_printf_float+0x3ca>
 802550a:	07db      	lsls	r3, r3, #31
 802550c:	d538      	bpl.n	8025580 <_printf_float+0x43c>
 802550e:	2301      	movs	r3, #1
 8025510:	4642      	mov	r2, r8
 8025512:	4631      	mov	r1, r6
 8025514:	4628      	mov	r0, r5
 8025516:	47b8      	blx	r7
 8025518:	3001      	adds	r0, #1
 802551a:	f43f ae74 	beq.w	8025206 <_printf_float+0xc2>
 802551e:	ee18 3a10 	vmov	r3, s16
 8025522:	4652      	mov	r2, sl
 8025524:	4631      	mov	r1, r6
 8025526:	4628      	mov	r0, r5
 8025528:	47b8      	blx	r7
 802552a:	3001      	adds	r0, #1
 802552c:	f43f ae6b 	beq.w	8025206 <_printf_float+0xc2>
 8025530:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8025534:	2200      	movs	r2, #0
 8025536:	2300      	movs	r3, #0
 8025538:	f7db fae6 	bl	8000b08 <__aeabi_dcmpeq>
 802553c:	b9d8      	cbnz	r0, 8025576 <_printf_float+0x432>
 802553e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8025540:	f108 0201 	add.w	r2, r8, #1
 8025544:	3b01      	subs	r3, #1
 8025546:	4631      	mov	r1, r6
 8025548:	4628      	mov	r0, r5
 802554a:	47b8      	blx	r7
 802554c:	3001      	adds	r0, #1
 802554e:	d10e      	bne.n	802556e <_printf_float+0x42a>
 8025550:	e659      	b.n	8025206 <_printf_float+0xc2>
 8025552:	2301      	movs	r3, #1
 8025554:	4652      	mov	r2, sl
 8025556:	4631      	mov	r1, r6
 8025558:	4628      	mov	r0, r5
 802555a:	47b8      	blx	r7
 802555c:	3001      	adds	r0, #1
 802555e:	f43f ae52 	beq.w	8025206 <_printf_float+0xc2>
 8025562:	f108 0801 	add.w	r8, r8, #1
 8025566:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8025568:	3b01      	subs	r3, #1
 802556a:	4543      	cmp	r3, r8
 802556c:	dcf1      	bgt.n	8025552 <_printf_float+0x40e>
 802556e:	464b      	mov	r3, r9
 8025570:	f104 0250 	add.w	r2, r4, #80	; 0x50
 8025574:	e6dc      	b.n	8025330 <_printf_float+0x1ec>
 8025576:	f04f 0800 	mov.w	r8, #0
 802557a:	f104 0a1a 	add.w	sl, r4, #26
 802557e:	e7f2      	b.n	8025566 <_printf_float+0x422>
 8025580:	2301      	movs	r3, #1
 8025582:	4642      	mov	r2, r8
 8025584:	e7df      	b.n	8025546 <_printf_float+0x402>
 8025586:	2301      	movs	r3, #1
 8025588:	464a      	mov	r2, r9
 802558a:	4631      	mov	r1, r6
 802558c:	4628      	mov	r0, r5
 802558e:	47b8      	blx	r7
 8025590:	3001      	adds	r0, #1
 8025592:	f43f ae38 	beq.w	8025206 <_printf_float+0xc2>
 8025596:	f108 0801 	add.w	r8, r8, #1
 802559a:	68e3      	ldr	r3, [r4, #12]
 802559c:	990b      	ldr	r1, [sp, #44]	; 0x2c
 802559e:	1a5b      	subs	r3, r3, r1
 80255a0:	4543      	cmp	r3, r8
 80255a2:	dcf0      	bgt.n	8025586 <_printf_float+0x442>
 80255a4:	e6fa      	b.n	802539c <_printf_float+0x258>
 80255a6:	f04f 0800 	mov.w	r8, #0
 80255aa:	f104 0919 	add.w	r9, r4, #25
 80255ae:	e7f4      	b.n	802559a <_printf_float+0x456>

080255b0 <_printf_common>:
 80255b0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80255b4:	4616      	mov	r6, r2
 80255b6:	4699      	mov	r9, r3
 80255b8:	688a      	ldr	r2, [r1, #8]
 80255ba:	690b      	ldr	r3, [r1, #16]
 80255bc:	f8dd 8020 	ldr.w	r8, [sp, #32]
 80255c0:	4293      	cmp	r3, r2
 80255c2:	bfb8      	it	lt
 80255c4:	4613      	movlt	r3, r2
 80255c6:	6033      	str	r3, [r6, #0]
 80255c8:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 80255cc:	4607      	mov	r7, r0
 80255ce:	460c      	mov	r4, r1
 80255d0:	b10a      	cbz	r2, 80255d6 <_printf_common+0x26>
 80255d2:	3301      	adds	r3, #1
 80255d4:	6033      	str	r3, [r6, #0]
 80255d6:	6823      	ldr	r3, [r4, #0]
 80255d8:	0699      	lsls	r1, r3, #26
 80255da:	bf42      	ittt	mi
 80255dc:	6833      	ldrmi	r3, [r6, #0]
 80255de:	3302      	addmi	r3, #2
 80255e0:	6033      	strmi	r3, [r6, #0]
 80255e2:	6825      	ldr	r5, [r4, #0]
 80255e4:	f015 0506 	ands.w	r5, r5, #6
 80255e8:	d106      	bne.n	80255f8 <_printf_common+0x48>
 80255ea:	f104 0a19 	add.w	sl, r4, #25
 80255ee:	68e3      	ldr	r3, [r4, #12]
 80255f0:	6832      	ldr	r2, [r6, #0]
 80255f2:	1a9b      	subs	r3, r3, r2
 80255f4:	42ab      	cmp	r3, r5
 80255f6:	dc26      	bgt.n	8025646 <_printf_common+0x96>
 80255f8:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 80255fc:	1e13      	subs	r3, r2, #0
 80255fe:	6822      	ldr	r2, [r4, #0]
 8025600:	bf18      	it	ne
 8025602:	2301      	movne	r3, #1
 8025604:	0692      	lsls	r2, r2, #26
 8025606:	d42b      	bmi.n	8025660 <_printf_common+0xb0>
 8025608:	f104 0243 	add.w	r2, r4, #67	; 0x43
 802560c:	4649      	mov	r1, r9
 802560e:	4638      	mov	r0, r7
 8025610:	47c0      	blx	r8
 8025612:	3001      	adds	r0, #1
 8025614:	d01e      	beq.n	8025654 <_printf_common+0xa4>
 8025616:	6823      	ldr	r3, [r4, #0]
 8025618:	68e5      	ldr	r5, [r4, #12]
 802561a:	6832      	ldr	r2, [r6, #0]
 802561c:	f003 0306 	and.w	r3, r3, #6
 8025620:	2b04      	cmp	r3, #4
 8025622:	bf08      	it	eq
 8025624:	1aad      	subeq	r5, r5, r2
 8025626:	68a3      	ldr	r3, [r4, #8]
 8025628:	6922      	ldr	r2, [r4, #16]
 802562a:	bf0c      	ite	eq
 802562c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8025630:	2500      	movne	r5, #0
 8025632:	4293      	cmp	r3, r2
 8025634:	bfc4      	itt	gt
 8025636:	1a9b      	subgt	r3, r3, r2
 8025638:	18ed      	addgt	r5, r5, r3
 802563a:	2600      	movs	r6, #0
 802563c:	341a      	adds	r4, #26
 802563e:	42b5      	cmp	r5, r6
 8025640:	d11a      	bne.n	8025678 <_printf_common+0xc8>
 8025642:	2000      	movs	r0, #0
 8025644:	e008      	b.n	8025658 <_printf_common+0xa8>
 8025646:	2301      	movs	r3, #1
 8025648:	4652      	mov	r2, sl
 802564a:	4649      	mov	r1, r9
 802564c:	4638      	mov	r0, r7
 802564e:	47c0      	blx	r8
 8025650:	3001      	adds	r0, #1
 8025652:	d103      	bne.n	802565c <_printf_common+0xac>
 8025654:	f04f 30ff 	mov.w	r0, #4294967295
 8025658:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802565c:	3501      	adds	r5, #1
 802565e:	e7c6      	b.n	80255ee <_printf_common+0x3e>
 8025660:	18e1      	adds	r1, r4, r3
 8025662:	1c5a      	adds	r2, r3, #1
 8025664:	2030      	movs	r0, #48	; 0x30
 8025666:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 802566a:	4422      	add	r2, r4
 802566c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8025670:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8025674:	3302      	adds	r3, #2
 8025676:	e7c7      	b.n	8025608 <_printf_common+0x58>
 8025678:	2301      	movs	r3, #1
 802567a:	4622      	mov	r2, r4
 802567c:	4649      	mov	r1, r9
 802567e:	4638      	mov	r0, r7
 8025680:	47c0      	blx	r8
 8025682:	3001      	adds	r0, #1
 8025684:	d0e6      	beq.n	8025654 <_printf_common+0xa4>
 8025686:	3601      	adds	r6, #1
 8025688:	e7d9      	b.n	802563e <_printf_common+0x8e>
	...

0802568c <_printf_i>:
 802568c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8025690:	460c      	mov	r4, r1
 8025692:	4691      	mov	r9, r2
 8025694:	7e27      	ldrb	r7, [r4, #24]
 8025696:	990c      	ldr	r1, [sp, #48]	; 0x30
 8025698:	2f78      	cmp	r7, #120	; 0x78
 802569a:	4680      	mov	r8, r0
 802569c:	469a      	mov	sl, r3
 802569e:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80256a2:	d807      	bhi.n	80256b4 <_printf_i+0x28>
 80256a4:	2f62      	cmp	r7, #98	; 0x62
 80256a6:	d80a      	bhi.n	80256be <_printf_i+0x32>
 80256a8:	2f00      	cmp	r7, #0
 80256aa:	f000 80d8 	beq.w	802585e <_printf_i+0x1d2>
 80256ae:	2f58      	cmp	r7, #88	; 0x58
 80256b0:	f000 80a3 	beq.w	80257fa <_printf_i+0x16e>
 80256b4:	f104 0642 	add.w	r6, r4, #66	; 0x42
 80256b8:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 80256bc:	e03a      	b.n	8025734 <_printf_i+0xa8>
 80256be:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 80256c2:	2b15      	cmp	r3, #21
 80256c4:	d8f6      	bhi.n	80256b4 <_printf_i+0x28>
 80256c6:	a001      	add	r0, pc, #4	; (adr r0, 80256cc <_printf_i+0x40>)
 80256c8:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 80256cc:	08025725 	.word	0x08025725
 80256d0:	08025739 	.word	0x08025739
 80256d4:	080256b5 	.word	0x080256b5
 80256d8:	080256b5 	.word	0x080256b5
 80256dc:	080256b5 	.word	0x080256b5
 80256e0:	080256b5 	.word	0x080256b5
 80256e4:	08025739 	.word	0x08025739
 80256e8:	080256b5 	.word	0x080256b5
 80256ec:	080256b5 	.word	0x080256b5
 80256f0:	080256b5 	.word	0x080256b5
 80256f4:	080256b5 	.word	0x080256b5
 80256f8:	08025845 	.word	0x08025845
 80256fc:	08025769 	.word	0x08025769
 8025700:	08025827 	.word	0x08025827
 8025704:	080256b5 	.word	0x080256b5
 8025708:	080256b5 	.word	0x080256b5
 802570c:	08025867 	.word	0x08025867
 8025710:	080256b5 	.word	0x080256b5
 8025714:	08025769 	.word	0x08025769
 8025718:	080256b5 	.word	0x080256b5
 802571c:	080256b5 	.word	0x080256b5
 8025720:	0802582f 	.word	0x0802582f
 8025724:	680b      	ldr	r3, [r1, #0]
 8025726:	1d1a      	adds	r2, r3, #4
 8025728:	681b      	ldr	r3, [r3, #0]
 802572a:	600a      	str	r2, [r1, #0]
 802572c:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8025730:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8025734:	2301      	movs	r3, #1
 8025736:	e0a3      	b.n	8025880 <_printf_i+0x1f4>
 8025738:	6825      	ldr	r5, [r4, #0]
 802573a:	6808      	ldr	r0, [r1, #0]
 802573c:	062e      	lsls	r6, r5, #24
 802573e:	f100 0304 	add.w	r3, r0, #4
 8025742:	d50a      	bpl.n	802575a <_printf_i+0xce>
 8025744:	6805      	ldr	r5, [r0, #0]
 8025746:	600b      	str	r3, [r1, #0]
 8025748:	2d00      	cmp	r5, #0
 802574a:	da03      	bge.n	8025754 <_printf_i+0xc8>
 802574c:	232d      	movs	r3, #45	; 0x2d
 802574e:	426d      	negs	r5, r5
 8025750:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8025754:	485e      	ldr	r0, [pc, #376]	; (80258d0 <_printf_i+0x244>)
 8025756:	230a      	movs	r3, #10
 8025758:	e019      	b.n	802578e <_printf_i+0x102>
 802575a:	f015 0f40 	tst.w	r5, #64	; 0x40
 802575e:	6805      	ldr	r5, [r0, #0]
 8025760:	600b      	str	r3, [r1, #0]
 8025762:	bf18      	it	ne
 8025764:	b22d      	sxthne	r5, r5
 8025766:	e7ef      	b.n	8025748 <_printf_i+0xbc>
 8025768:	680b      	ldr	r3, [r1, #0]
 802576a:	6825      	ldr	r5, [r4, #0]
 802576c:	1d18      	adds	r0, r3, #4
 802576e:	6008      	str	r0, [r1, #0]
 8025770:	0628      	lsls	r0, r5, #24
 8025772:	d501      	bpl.n	8025778 <_printf_i+0xec>
 8025774:	681d      	ldr	r5, [r3, #0]
 8025776:	e002      	b.n	802577e <_printf_i+0xf2>
 8025778:	0669      	lsls	r1, r5, #25
 802577a:	d5fb      	bpl.n	8025774 <_printf_i+0xe8>
 802577c:	881d      	ldrh	r5, [r3, #0]
 802577e:	4854      	ldr	r0, [pc, #336]	; (80258d0 <_printf_i+0x244>)
 8025780:	2f6f      	cmp	r7, #111	; 0x6f
 8025782:	bf0c      	ite	eq
 8025784:	2308      	moveq	r3, #8
 8025786:	230a      	movne	r3, #10
 8025788:	2100      	movs	r1, #0
 802578a:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 802578e:	6866      	ldr	r6, [r4, #4]
 8025790:	60a6      	str	r6, [r4, #8]
 8025792:	2e00      	cmp	r6, #0
 8025794:	bfa2      	ittt	ge
 8025796:	6821      	ldrge	r1, [r4, #0]
 8025798:	f021 0104 	bicge.w	r1, r1, #4
 802579c:	6021      	strge	r1, [r4, #0]
 802579e:	b90d      	cbnz	r5, 80257a4 <_printf_i+0x118>
 80257a0:	2e00      	cmp	r6, #0
 80257a2:	d04d      	beq.n	8025840 <_printf_i+0x1b4>
 80257a4:	4616      	mov	r6, r2
 80257a6:	fbb5 f1f3 	udiv	r1, r5, r3
 80257aa:	fb03 5711 	mls	r7, r3, r1, r5
 80257ae:	5dc7      	ldrb	r7, [r0, r7]
 80257b0:	f806 7d01 	strb.w	r7, [r6, #-1]!
 80257b4:	462f      	mov	r7, r5
 80257b6:	42bb      	cmp	r3, r7
 80257b8:	460d      	mov	r5, r1
 80257ba:	d9f4      	bls.n	80257a6 <_printf_i+0x11a>
 80257bc:	2b08      	cmp	r3, #8
 80257be:	d10b      	bne.n	80257d8 <_printf_i+0x14c>
 80257c0:	6823      	ldr	r3, [r4, #0]
 80257c2:	07df      	lsls	r7, r3, #31
 80257c4:	d508      	bpl.n	80257d8 <_printf_i+0x14c>
 80257c6:	6923      	ldr	r3, [r4, #16]
 80257c8:	6861      	ldr	r1, [r4, #4]
 80257ca:	4299      	cmp	r1, r3
 80257cc:	bfde      	ittt	le
 80257ce:	2330      	movle	r3, #48	; 0x30
 80257d0:	f806 3c01 	strble.w	r3, [r6, #-1]
 80257d4:	f106 36ff 	addle.w	r6, r6, #4294967295
 80257d8:	1b92      	subs	r2, r2, r6
 80257da:	6122      	str	r2, [r4, #16]
 80257dc:	f8cd a000 	str.w	sl, [sp]
 80257e0:	464b      	mov	r3, r9
 80257e2:	aa03      	add	r2, sp, #12
 80257e4:	4621      	mov	r1, r4
 80257e6:	4640      	mov	r0, r8
 80257e8:	f7ff fee2 	bl	80255b0 <_printf_common>
 80257ec:	3001      	adds	r0, #1
 80257ee:	d14c      	bne.n	802588a <_printf_i+0x1fe>
 80257f0:	f04f 30ff 	mov.w	r0, #4294967295
 80257f4:	b004      	add	sp, #16
 80257f6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80257fa:	4835      	ldr	r0, [pc, #212]	; (80258d0 <_printf_i+0x244>)
 80257fc:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8025800:	6823      	ldr	r3, [r4, #0]
 8025802:	680e      	ldr	r6, [r1, #0]
 8025804:	061f      	lsls	r7, r3, #24
 8025806:	f856 5b04 	ldr.w	r5, [r6], #4
 802580a:	600e      	str	r6, [r1, #0]
 802580c:	d514      	bpl.n	8025838 <_printf_i+0x1ac>
 802580e:	07d9      	lsls	r1, r3, #31
 8025810:	bf44      	itt	mi
 8025812:	f043 0320 	orrmi.w	r3, r3, #32
 8025816:	6023      	strmi	r3, [r4, #0]
 8025818:	b91d      	cbnz	r5, 8025822 <_printf_i+0x196>
 802581a:	6823      	ldr	r3, [r4, #0]
 802581c:	f023 0320 	bic.w	r3, r3, #32
 8025820:	6023      	str	r3, [r4, #0]
 8025822:	2310      	movs	r3, #16
 8025824:	e7b0      	b.n	8025788 <_printf_i+0xfc>
 8025826:	6823      	ldr	r3, [r4, #0]
 8025828:	f043 0320 	orr.w	r3, r3, #32
 802582c:	6023      	str	r3, [r4, #0]
 802582e:	2378      	movs	r3, #120	; 0x78
 8025830:	4828      	ldr	r0, [pc, #160]	; (80258d4 <_printf_i+0x248>)
 8025832:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8025836:	e7e3      	b.n	8025800 <_printf_i+0x174>
 8025838:	065e      	lsls	r6, r3, #25
 802583a:	bf48      	it	mi
 802583c:	b2ad      	uxthmi	r5, r5
 802583e:	e7e6      	b.n	802580e <_printf_i+0x182>
 8025840:	4616      	mov	r6, r2
 8025842:	e7bb      	b.n	80257bc <_printf_i+0x130>
 8025844:	680b      	ldr	r3, [r1, #0]
 8025846:	6826      	ldr	r6, [r4, #0]
 8025848:	6960      	ldr	r0, [r4, #20]
 802584a:	1d1d      	adds	r5, r3, #4
 802584c:	600d      	str	r5, [r1, #0]
 802584e:	0635      	lsls	r5, r6, #24
 8025850:	681b      	ldr	r3, [r3, #0]
 8025852:	d501      	bpl.n	8025858 <_printf_i+0x1cc>
 8025854:	6018      	str	r0, [r3, #0]
 8025856:	e002      	b.n	802585e <_printf_i+0x1d2>
 8025858:	0671      	lsls	r1, r6, #25
 802585a:	d5fb      	bpl.n	8025854 <_printf_i+0x1c8>
 802585c:	8018      	strh	r0, [r3, #0]
 802585e:	2300      	movs	r3, #0
 8025860:	6123      	str	r3, [r4, #16]
 8025862:	4616      	mov	r6, r2
 8025864:	e7ba      	b.n	80257dc <_printf_i+0x150>
 8025866:	680b      	ldr	r3, [r1, #0]
 8025868:	1d1a      	adds	r2, r3, #4
 802586a:	600a      	str	r2, [r1, #0]
 802586c:	681e      	ldr	r6, [r3, #0]
 802586e:	6862      	ldr	r2, [r4, #4]
 8025870:	2100      	movs	r1, #0
 8025872:	4630      	mov	r0, r6
 8025874:	f7da fccc 	bl	8000210 <memchr>
 8025878:	b108      	cbz	r0, 802587e <_printf_i+0x1f2>
 802587a:	1b80      	subs	r0, r0, r6
 802587c:	6060      	str	r0, [r4, #4]
 802587e:	6863      	ldr	r3, [r4, #4]
 8025880:	6123      	str	r3, [r4, #16]
 8025882:	2300      	movs	r3, #0
 8025884:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8025888:	e7a8      	b.n	80257dc <_printf_i+0x150>
 802588a:	6923      	ldr	r3, [r4, #16]
 802588c:	4632      	mov	r2, r6
 802588e:	4649      	mov	r1, r9
 8025890:	4640      	mov	r0, r8
 8025892:	47d0      	blx	sl
 8025894:	3001      	adds	r0, #1
 8025896:	d0ab      	beq.n	80257f0 <_printf_i+0x164>
 8025898:	6823      	ldr	r3, [r4, #0]
 802589a:	079b      	lsls	r3, r3, #30
 802589c:	d413      	bmi.n	80258c6 <_printf_i+0x23a>
 802589e:	68e0      	ldr	r0, [r4, #12]
 80258a0:	9b03      	ldr	r3, [sp, #12]
 80258a2:	4298      	cmp	r0, r3
 80258a4:	bfb8      	it	lt
 80258a6:	4618      	movlt	r0, r3
 80258a8:	e7a4      	b.n	80257f4 <_printf_i+0x168>
 80258aa:	2301      	movs	r3, #1
 80258ac:	4632      	mov	r2, r6
 80258ae:	4649      	mov	r1, r9
 80258b0:	4640      	mov	r0, r8
 80258b2:	47d0      	blx	sl
 80258b4:	3001      	adds	r0, #1
 80258b6:	d09b      	beq.n	80257f0 <_printf_i+0x164>
 80258b8:	3501      	adds	r5, #1
 80258ba:	68e3      	ldr	r3, [r4, #12]
 80258bc:	9903      	ldr	r1, [sp, #12]
 80258be:	1a5b      	subs	r3, r3, r1
 80258c0:	42ab      	cmp	r3, r5
 80258c2:	dcf2      	bgt.n	80258aa <_printf_i+0x21e>
 80258c4:	e7eb      	b.n	802589e <_printf_i+0x212>
 80258c6:	2500      	movs	r5, #0
 80258c8:	f104 0619 	add.w	r6, r4, #25
 80258cc:	e7f5      	b.n	80258ba <_printf_i+0x22e>
 80258ce:	bf00      	nop
 80258d0:	0802a36e 	.word	0x0802a36e
 80258d4:	0802a37f 	.word	0x0802a37f

080258d8 <_sbrk_r>:
 80258d8:	b538      	push	{r3, r4, r5, lr}
 80258da:	4d06      	ldr	r5, [pc, #24]	; (80258f4 <_sbrk_r+0x1c>)
 80258dc:	2300      	movs	r3, #0
 80258de:	4604      	mov	r4, r0
 80258e0:	4608      	mov	r0, r1
 80258e2:	602b      	str	r3, [r5, #0]
 80258e4:	f7f9 fb28 	bl	801ef38 <_sbrk>
 80258e8:	1c43      	adds	r3, r0, #1
 80258ea:	d102      	bne.n	80258f2 <_sbrk_r+0x1a>
 80258ec:	682b      	ldr	r3, [r5, #0]
 80258ee:	b103      	cbz	r3, 80258f2 <_sbrk_r+0x1a>
 80258f0:	6023      	str	r3, [r4, #0]
 80258f2:	bd38      	pop	{r3, r4, r5, pc}
 80258f4:	200008f0 	.word	0x200008f0

080258f8 <_raise_r>:
 80258f8:	291f      	cmp	r1, #31
 80258fa:	b538      	push	{r3, r4, r5, lr}
 80258fc:	4604      	mov	r4, r0
 80258fe:	460d      	mov	r5, r1
 8025900:	d904      	bls.n	802590c <_raise_r+0x14>
 8025902:	2316      	movs	r3, #22
 8025904:	6003      	str	r3, [r0, #0]
 8025906:	f04f 30ff 	mov.w	r0, #4294967295
 802590a:	bd38      	pop	{r3, r4, r5, pc}
 802590c:	6c42      	ldr	r2, [r0, #68]	; 0x44
 802590e:	b112      	cbz	r2, 8025916 <_raise_r+0x1e>
 8025910:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8025914:	b94b      	cbnz	r3, 802592a <_raise_r+0x32>
 8025916:	4620      	mov	r0, r4
 8025918:	f000 f830 	bl	802597c <_getpid_r>
 802591c:	462a      	mov	r2, r5
 802591e:	4601      	mov	r1, r0
 8025920:	4620      	mov	r0, r4
 8025922:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8025926:	f000 b817 	b.w	8025958 <_kill_r>
 802592a:	2b01      	cmp	r3, #1
 802592c:	d00a      	beq.n	8025944 <_raise_r+0x4c>
 802592e:	1c59      	adds	r1, r3, #1
 8025930:	d103      	bne.n	802593a <_raise_r+0x42>
 8025932:	2316      	movs	r3, #22
 8025934:	6003      	str	r3, [r0, #0]
 8025936:	2001      	movs	r0, #1
 8025938:	e7e7      	b.n	802590a <_raise_r+0x12>
 802593a:	2400      	movs	r4, #0
 802593c:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8025940:	4628      	mov	r0, r5
 8025942:	4798      	blx	r3
 8025944:	2000      	movs	r0, #0
 8025946:	e7e0      	b.n	802590a <_raise_r+0x12>

08025948 <raise>:
 8025948:	4b02      	ldr	r3, [pc, #8]	; (8025954 <raise+0xc>)
 802594a:	4601      	mov	r1, r0
 802594c:	6818      	ldr	r0, [r3, #0]
 802594e:	f7ff bfd3 	b.w	80258f8 <_raise_r>
 8025952:	bf00      	nop
 8025954:	20000010 	.word	0x20000010

08025958 <_kill_r>:
 8025958:	b538      	push	{r3, r4, r5, lr}
 802595a:	4d07      	ldr	r5, [pc, #28]	; (8025978 <_kill_r+0x20>)
 802595c:	2300      	movs	r3, #0
 802595e:	4604      	mov	r4, r0
 8025960:	4608      	mov	r0, r1
 8025962:	4611      	mov	r1, r2
 8025964:	602b      	str	r3, [r5, #0]
 8025966:	f7f9 fa5f 	bl	801ee28 <_kill>
 802596a:	1c43      	adds	r3, r0, #1
 802596c:	d102      	bne.n	8025974 <_kill_r+0x1c>
 802596e:	682b      	ldr	r3, [r5, #0]
 8025970:	b103      	cbz	r3, 8025974 <_kill_r+0x1c>
 8025972:	6023      	str	r3, [r4, #0]
 8025974:	bd38      	pop	{r3, r4, r5, pc}
 8025976:	bf00      	nop
 8025978:	200008f0 	.word	0x200008f0

0802597c <_getpid_r>:
 802597c:	f7f9 ba4c 	b.w	801ee18 <_getpid>

08025980 <sulp>:
 8025980:	b570      	push	{r4, r5, r6, lr}
 8025982:	4604      	mov	r4, r0
 8025984:	460d      	mov	r5, r1
 8025986:	ec45 4b10 	vmov	d0, r4, r5
 802598a:	4616      	mov	r6, r2
 802598c:	f002 fd1e 	bl	80283cc <__ulp>
 8025990:	ec51 0b10 	vmov	r0, r1, d0
 8025994:	b17e      	cbz	r6, 80259b6 <sulp+0x36>
 8025996:	f3c5 530a 	ubfx	r3, r5, #20, #11
 802599a:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 802599e:	2b00      	cmp	r3, #0
 80259a0:	dd09      	ble.n	80259b6 <sulp+0x36>
 80259a2:	051b      	lsls	r3, r3, #20
 80259a4:	f103 557f 	add.w	r5, r3, #1069547520	; 0x3fc00000
 80259a8:	2400      	movs	r4, #0
 80259aa:	f505 1540 	add.w	r5, r5, #3145728	; 0x300000
 80259ae:	4622      	mov	r2, r4
 80259b0:	462b      	mov	r3, r5
 80259b2:	f7da fe41 	bl	8000638 <__aeabi_dmul>
 80259b6:	bd70      	pop	{r4, r5, r6, pc}

080259b8 <_strtod_l>:
 80259b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80259bc:	b0a3      	sub	sp, #140	; 0x8c
 80259be:	461f      	mov	r7, r3
 80259c0:	2300      	movs	r3, #0
 80259c2:	931e      	str	r3, [sp, #120]	; 0x78
 80259c4:	4ba4      	ldr	r3, [pc, #656]	; (8025c58 <_strtod_l+0x2a0>)
 80259c6:	9219      	str	r2, [sp, #100]	; 0x64
 80259c8:	681b      	ldr	r3, [r3, #0]
 80259ca:	9307      	str	r3, [sp, #28]
 80259cc:	4604      	mov	r4, r0
 80259ce:	4618      	mov	r0, r3
 80259d0:	4688      	mov	r8, r1
 80259d2:	f7da fc6d 	bl	80002b0 <strlen>
 80259d6:	f04f 0a00 	mov.w	sl, #0
 80259da:	4605      	mov	r5, r0
 80259dc:	f04f 0b00 	mov.w	fp, #0
 80259e0:	f8cd 8074 	str.w	r8, [sp, #116]	; 0x74
 80259e4:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80259e6:	781a      	ldrb	r2, [r3, #0]
 80259e8:	2a2b      	cmp	r2, #43	; 0x2b
 80259ea:	d04c      	beq.n	8025a86 <_strtod_l+0xce>
 80259ec:	d839      	bhi.n	8025a62 <_strtod_l+0xaa>
 80259ee:	2a0d      	cmp	r2, #13
 80259f0:	d832      	bhi.n	8025a58 <_strtod_l+0xa0>
 80259f2:	2a08      	cmp	r2, #8
 80259f4:	d832      	bhi.n	8025a5c <_strtod_l+0xa4>
 80259f6:	2a00      	cmp	r2, #0
 80259f8:	d03c      	beq.n	8025a74 <_strtod_l+0xbc>
 80259fa:	2300      	movs	r3, #0
 80259fc:	930e      	str	r3, [sp, #56]	; 0x38
 80259fe:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 8025a00:	7833      	ldrb	r3, [r6, #0]
 8025a02:	2b30      	cmp	r3, #48	; 0x30
 8025a04:	f040 80b4 	bne.w	8025b70 <_strtod_l+0x1b8>
 8025a08:	7873      	ldrb	r3, [r6, #1]
 8025a0a:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 8025a0e:	2b58      	cmp	r3, #88	; 0x58
 8025a10:	d16c      	bne.n	8025aec <_strtod_l+0x134>
 8025a12:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8025a14:	9301      	str	r3, [sp, #4]
 8025a16:	ab1e      	add	r3, sp, #120	; 0x78
 8025a18:	9702      	str	r7, [sp, #8]
 8025a1a:	9300      	str	r3, [sp, #0]
 8025a1c:	4a8f      	ldr	r2, [pc, #572]	; (8025c5c <_strtod_l+0x2a4>)
 8025a1e:	ab1f      	add	r3, sp, #124	; 0x7c
 8025a20:	a91d      	add	r1, sp, #116	; 0x74
 8025a22:	4620      	mov	r0, r4
 8025a24:	f001 fe38 	bl	8027698 <__gethex>
 8025a28:	f010 0707 	ands.w	r7, r0, #7
 8025a2c:	4605      	mov	r5, r0
 8025a2e:	d005      	beq.n	8025a3c <_strtod_l+0x84>
 8025a30:	2f06      	cmp	r7, #6
 8025a32:	d12a      	bne.n	8025a8a <_strtod_l+0xd2>
 8025a34:	3601      	adds	r6, #1
 8025a36:	2300      	movs	r3, #0
 8025a38:	961d      	str	r6, [sp, #116]	; 0x74
 8025a3a:	930e      	str	r3, [sp, #56]	; 0x38
 8025a3c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8025a3e:	2b00      	cmp	r3, #0
 8025a40:	f040 8596 	bne.w	8026570 <_strtod_l+0xbb8>
 8025a44:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8025a46:	b1db      	cbz	r3, 8025a80 <_strtod_l+0xc8>
 8025a48:	4652      	mov	r2, sl
 8025a4a:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
 8025a4e:	ec43 2b10 	vmov	d0, r2, r3
 8025a52:	b023      	add	sp, #140	; 0x8c
 8025a54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025a58:	2a20      	cmp	r2, #32
 8025a5a:	d1ce      	bne.n	80259fa <_strtod_l+0x42>
 8025a5c:	3301      	adds	r3, #1
 8025a5e:	931d      	str	r3, [sp, #116]	; 0x74
 8025a60:	e7c0      	b.n	80259e4 <_strtod_l+0x2c>
 8025a62:	2a2d      	cmp	r2, #45	; 0x2d
 8025a64:	d1c9      	bne.n	80259fa <_strtod_l+0x42>
 8025a66:	2201      	movs	r2, #1
 8025a68:	920e      	str	r2, [sp, #56]	; 0x38
 8025a6a:	1c5a      	adds	r2, r3, #1
 8025a6c:	921d      	str	r2, [sp, #116]	; 0x74
 8025a6e:	785b      	ldrb	r3, [r3, #1]
 8025a70:	2b00      	cmp	r3, #0
 8025a72:	d1c4      	bne.n	80259fe <_strtod_l+0x46>
 8025a74:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8025a76:	f8cd 8074 	str.w	r8, [sp, #116]	; 0x74
 8025a7a:	2b00      	cmp	r3, #0
 8025a7c:	f040 8576 	bne.w	802656c <_strtod_l+0xbb4>
 8025a80:	4652      	mov	r2, sl
 8025a82:	465b      	mov	r3, fp
 8025a84:	e7e3      	b.n	8025a4e <_strtod_l+0x96>
 8025a86:	2200      	movs	r2, #0
 8025a88:	e7ee      	b.n	8025a68 <_strtod_l+0xb0>
 8025a8a:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8025a8c:	b13a      	cbz	r2, 8025a9e <_strtod_l+0xe6>
 8025a8e:	2135      	movs	r1, #53	; 0x35
 8025a90:	a820      	add	r0, sp, #128	; 0x80
 8025a92:	f002 fda6 	bl	80285e2 <__copybits>
 8025a96:	991e      	ldr	r1, [sp, #120]	; 0x78
 8025a98:	4620      	mov	r0, r4
 8025a9a:	f002 f96b 	bl	8027d74 <_Bfree>
 8025a9e:	3f01      	subs	r7, #1
 8025aa0:	2f05      	cmp	r7, #5
 8025aa2:	d807      	bhi.n	8025ab4 <_strtod_l+0xfc>
 8025aa4:	e8df f007 	tbb	[pc, r7]
 8025aa8:	1d180b0e 	.word	0x1d180b0e
 8025aac:	030e      	.short	0x030e
 8025aae:	f04f 0b00 	mov.w	fp, #0
 8025ab2:	46da      	mov	sl, fp
 8025ab4:	0728      	lsls	r0, r5, #28
 8025ab6:	d5c1      	bpl.n	8025a3c <_strtod_l+0x84>
 8025ab8:	f04b 4b00 	orr.w	fp, fp, #2147483648	; 0x80000000
 8025abc:	e7be      	b.n	8025a3c <_strtod_l+0x84>
 8025abe:	e9dd ab20 	ldrd	sl, fp, [sp, #128]	; 0x80
 8025ac2:	e7f7      	b.n	8025ab4 <_strtod_l+0xfc>
 8025ac4:	e9dd a320 	ldrd	sl, r3, [sp, #128]	; 0x80
 8025ac8:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8025aca:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 8025ace:	f202 4233 	addw	r2, r2, #1075	; 0x433
 8025ad2:	ea43 5b02 	orr.w	fp, r3, r2, lsl #20
 8025ad6:	e7ed      	b.n	8025ab4 <_strtod_l+0xfc>
 8025ad8:	f8df b184 	ldr.w	fp, [pc, #388]	; 8025c60 <_strtod_l+0x2a8>
 8025adc:	f04f 0a00 	mov.w	sl, #0
 8025ae0:	e7e8      	b.n	8025ab4 <_strtod_l+0xfc>
 8025ae2:	f06f 4b00 	mvn.w	fp, #2147483648	; 0x80000000
 8025ae6:	f04f 3aff 	mov.w	sl, #4294967295
 8025aea:	e7e3      	b.n	8025ab4 <_strtod_l+0xfc>
 8025aec:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8025aee:	1c5a      	adds	r2, r3, #1
 8025af0:	921d      	str	r2, [sp, #116]	; 0x74
 8025af2:	785b      	ldrb	r3, [r3, #1]
 8025af4:	2b30      	cmp	r3, #48	; 0x30
 8025af6:	d0f9      	beq.n	8025aec <_strtod_l+0x134>
 8025af8:	2b00      	cmp	r3, #0
 8025afa:	d09f      	beq.n	8025a3c <_strtod_l+0x84>
 8025afc:	2301      	movs	r3, #1
 8025afe:	f04f 0900 	mov.w	r9, #0
 8025b02:	9304      	str	r3, [sp, #16]
 8025b04:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8025b06:	930a      	str	r3, [sp, #40]	; 0x28
 8025b08:	f8cd 9024 	str.w	r9, [sp, #36]	; 0x24
 8025b0c:	464f      	mov	r7, r9
 8025b0e:	220a      	movs	r2, #10
 8025b10:	981d      	ldr	r0, [sp, #116]	; 0x74
 8025b12:	7806      	ldrb	r6, [r0, #0]
 8025b14:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
 8025b18:	b2d9      	uxtb	r1, r3
 8025b1a:	2909      	cmp	r1, #9
 8025b1c:	d92a      	bls.n	8025b74 <_strtod_l+0x1bc>
 8025b1e:	9907      	ldr	r1, [sp, #28]
 8025b20:	462a      	mov	r2, r5
 8025b22:	f002 ff13 	bl	802894c <strncmp>
 8025b26:	b398      	cbz	r0, 8025b90 <_strtod_l+0x1d8>
 8025b28:	2000      	movs	r0, #0
 8025b2a:	4633      	mov	r3, r6
 8025b2c:	463d      	mov	r5, r7
 8025b2e:	9007      	str	r0, [sp, #28]
 8025b30:	4602      	mov	r2, r0
 8025b32:	2b65      	cmp	r3, #101	; 0x65
 8025b34:	d001      	beq.n	8025b3a <_strtod_l+0x182>
 8025b36:	2b45      	cmp	r3, #69	; 0x45
 8025b38:	d118      	bne.n	8025b6c <_strtod_l+0x1b4>
 8025b3a:	b91d      	cbnz	r5, 8025b44 <_strtod_l+0x18c>
 8025b3c:	9b04      	ldr	r3, [sp, #16]
 8025b3e:	4303      	orrs	r3, r0
 8025b40:	d098      	beq.n	8025a74 <_strtod_l+0xbc>
 8025b42:	2500      	movs	r5, #0
 8025b44:	f8dd 8074 	ldr.w	r8, [sp, #116]	; 0x74
 8025b48:	f108 0301 	add.w	r3, r8, #1
 8025b4c:	931d      	str	r3, [sp, #116]	; 0x74
 8025b4e:	f898 3001 	ldrb.w	r3, [r8, #1]
 8025b52:	2b2b      	cmp	r3, #43	; 0x2b
 8025b54:	d075      	beq.n	8025c42 <_strtod_l+0x28a>
 8025b56:	2b2d      	cmp	r3, #45	; 0x2d
 8025b58:	d07b      	beq.n	8025c52 <_strtod_l+0x29a>
 8025b5a:	f04f 0c00 	mov.w	ip, #0
 8025b5e:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 8025b62:	2909      	cmp	r1, #9
 8025b64:	f240 8082 	bls.w	8025c6c <_strtod_l+0x2b4>
 8025b68:	f8cd 8074 	str.w	r8, [sp, #116]	; 0x74
 8025b6c:	2600      	movs	r6, #0
 8025b6e:	e09d      	b.n	8025cac <_strtod_l+0x2f4>
 8025b70:	2300      	movs	r3, #0
 8025b72:	e7c4      	b.n	8025afe <_strtod_l+0x146>
 8025b74:	2f08      	cmp	r7, #8
 8025b76:	bfd8      	it	le
 8025b78:	9909      	ldrle	r1, [sp, #36]	; 0x24
 8025b7a:	f100 0001 	add.w	r0, r0, #1
 8025b7e:	bfda      	itte	le
 8025b80:	fb02 3301 	mlale	r3, r2, r1, r3
 8025b84:	9309      	strle	r3, [sp, #36]	; 0x24
 8025b86:	fb02 3909 	mlagt	r9, r2, r9, r3
 8025b8a:	3701      	adds	r7, #1
 8025b8c:	901d      	str	r0, [sp, #116]	; 0x74
 8025b8e:	e7bf      	b.n	8025b10 <_strtod_l+0x158>
 8025b90:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8025b92:	195a      	adds	r2, r3, r5
 8025b94:	921d      	str	r2, [sp, #116]	; 0x74
 8025b96:	5d5b      	ldrb	r3, [r3, r5]
 8025b98:	2f00      	cmp	r7, #0
 8025b9a:	d037      	beq.n	8025c0c <_strtod_l+0x254>
 8025b9c:	9007      	str	r0, [sp, #28]
 8025b9e:	463d      	mov	r5, r7
 8025ba0:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
 8025ba4:	2a09      	cmp	r2, #9
 8025ba6:	d912      	bls.n	8025bce <_strtod_l+0x216>
 8025ba8:	2201      	movs	r2, #1
 8025baa:	e7c2      	b.n	8025b32 <_strtod_l+0x17a>
 8025bac:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8025bae:	1c5a      	adds	r2, r3, #1
 8025bb0:	921d      	str	r2, [sp, #116]	; 0x74
 8025bb2:	785b      	ldrb	r3, [r3, #1]
 8025bb4:	3001      	adds	r0, #1
 8025bb6:	2b30      	cmp	r3, #48	; 0x30
 8025bb8:	d0f8      	beq.n	8025bac <_strtod_l+0x1f4>
 8025bba:	f1a3 0231 	sub.w	r2, r3, #49	; 0x31
 8025bbe:	2a08      	cmp	r2, #8
 8025bc0:	f200 84db 	bhi.w	802657a <_strtod_l+0xbc2>
 8025bc4:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8025bc6:	9007      	str	r0, [sp, #28]
 8025bc8:	2000      	movs	r0, #0
 8025bca:	920a      	str	r2, [sp, #40]	; 0x28
 8025bcc:	4605      	mov	r5, r0
 8025bce:	3b30      	subs	r3, #48	; 0x30
 8025bd0:	f100 0201 	add.w	r2, r0, #1
 8025bd4:	d014      	beq.n	8025c00 <_strtod_l+0x248>
 8025bd6:	9907      	ldr	r1, [sp, #28]
 8025bd8:	4411      	add	r1, r2
 8025bda:	9107      	str	r1, [sp, #28]
 8025bdc:	462a      	mov	r2, r5
 8025bde:	eb00 0e05 	add.w	lr, r0, r5
 8025be2:	210a      	movs	r1, #10
 8025be4:	4572      	cmp	r2, lr
 8025be6:	d113      	bne.n	8025c10 <_strtod_l+0x258>
 8025be8:	182a      	adds	r2, r5, r0
 8025bea:	2a08      	cmp	r2, #8
 8025bec:	f105 0501 	add.w	r5, r5, #1
 8025bf0:	4405      	add	r5, r0
 8025bf2:	dc1c      	bgt.n	8025c2e <_strtod_l+0x276>
 8025bf4:	9909      	ldr	r1, [sp, #36]	; 0x24
 8025bf6:	220a      	movs	r2, #10
 8025bf8:	fb02 3301 	mla	r3, r2, r1, r3
 8025bfc:	9309      	str	r3, [sp, #36]	; 0x24
 8025bfe:	2200      	movs	r2, #0
 8025c00:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8025c02:	1c59      	adds	r1, r3, #1
 8025c04:	911d      	str	r1, [sp, #116]	; 0x74
 8025c06:	785b      	ldrb	r3, [r3, #1]
 8025c08:	4610      	mov	r0, r2
 8025c0a:	e7c9      	b.n	8025ba0 <_strtod_l+0x1e8>
 8025c0c:	4638      	mov	r0, r7
 8025c0e:	e7d2      	b.n	8025bb6 <_strtod_l+0x1fe>
 8025c10:	2a08      	cmp	r2, #8
 8025c12:	dc04      	bgt.n	8025c1e <_strtod_l+0x266>
 8025c14:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8025c16:	434e      	muls	r6, r1
 8025c18:	9609      	str	r6, [sp, #36]	; 0x24
 8025c1a:	3201      	adds	r2, #1
 8025c1c:	e7e2      	b.n	8025be4 <_strtod_l+0x22c>
 8025c1e:	f102 0c01 	add.w	ip, r2, #1
 8025c22:	f1bc 0f10 	cmp.w	ip, #16
 8025c26:	bfd8      	it	le
 8025c28:	fb01 f909 	mulle.w	r9, r1, r9
 8025c2c:	e7f5      	b.n	8025c1a <_strtod_l+0x262>
 8025c2e:	2d10      	cmp	r5, #16
 8025c30:	bfdc      	itt	le
 8025c32:	220a      	movle	r2, #10
 8025c34:	fb02 3909 	mlale	r9, r2, r9, r3
 8025c38:	e7e1      	b.n	8025bfe <_strtod_l+0x246>
 8025c3a:	2300      	movs	r3, #0
 8025c3c:	9307      	str	r3, [sp, #28]
 8025c3e:	2201      	movs	r2, #1
 8025c40:	e77c      	b.n	8025b3c <_strtod_l+0x184>
 8025c42:	f04f 0c00 	mov.w	ip, #0
 8025c46:	f108 0302 	add.w	r3, r8, #2
 8025c4a:	931d      	str	r3, [sp, #116]	; 0x74
 8025c4c:	f898 3002 	ldrb.w	r3, [r8, #2]
 8025c50:	e785      	b.n	8025b5e <_strtod_l+0x1a6>
 8025c52:	f04f 0c01 	mov.w	ip, #1
 8025c56:	e7f6      	b.n	8025c46 <_strtod_l+0x28e>
 8025c58:	0802a5e0 	.word	0x0802a5e0
 8025c5c:	0802a390 	.word	0x0802a390
 8025c60:	7ff00000 	.word	0x7ff00000
 8025c64:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8025c66:	1c59      	adds	r1, r3, #1
 8025c68:	911d      	str	r1, [sp, #116]	; 0x74
 8025c6a:	785b      	ldrb	r3, [r3, #1]
 8025c6c:	2b30      	cmp	r3, #48	; 0x30
 8025c6e:	d0f9      	beq.n	8025c64 <_strtod_l+0x2ac>
 8025c70:	f1a3 0131 	sub.w	r1, r3, #49	; 0x31
 8025c74:	2908      	cmp	r1, #8
 8025c76:	f63f af79 	bhi.w	8025b6c <_strtod_l+0x1b4>
 8025c7a:	f1a3 0e30 	sub.w	lr, r3, #48	; 0x30
 8025c7e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8025c80:	9308      	str	r3, [sp, #32]
 8025c82:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8025c84:	1c59      	adds	r1, r3, #1
 8025c86:	911d      	str	r1, [sp, #116]	; 0x74
 8025c88:	785b      	ldrb	r3, [r3, #1]
 8025c8a:	f1a3 0630 	sub.w	r6, r3, #48	; 0x30
 8025c8e:	2e09      	cmp	r6, #9
 8025c90:	d937      	bls.n	8025d02 <_strtod_l+0x34a>
 8025c92:	9e08      	ldr	r6, [sp, #32]
 8025c94:	1b89      	subs	r1, r1, r6
 8025c96:	2908      	cmp	r1, #8
 8025c98:	f644 661f 	movw	r6, #19999	; 0x4e1f
 8025c9c:	dc02      	bgt.n	8025ca4 <_strtod_l+0x2ec>
 8025c9e:	4576      	cmp	r6, lr
 8025ca0:	bfa8      	it	ge
 8025ca2:	4676      	movge	r6, lr
 8025ca4:	f1bc 0f00 	cmp.w	ip, #0
 8025ca8:	d000      	beq.n	8025cac <_strtod_l+0x2f4>
 8025caa:	4276      	negs	r6, r6
 8025cac:	2d00      	cmp	r5, #0
 8025cae:	d14f      	bne.n	8025d50 <_strtod_l+0x398>
 8025cb0:	9904      	ldr	r1, [sp, #16]
 8025cb2:	4301      	orrs	r1, r0
 8025cb4:	f47f aec2 	bne.w	8025a3c <_strtod_l+0x84>
 8025cb8:	2a00      	cmp	r2, #0
 8025cba:	f47f aedb 	bne.w	8025a74 <_strtod_l+0xbc>
 8025cbe:	2b69      	cmp	r3, #105	; 0x69
 8025cc0:	d027      	beq.n	8025d12 <_strtod_l+0x35a>
 8025cc2:	dc24      	bgt.n	8025d0e <_strtod_l+0x356>
 8025cc4:	2b49      	cmp	r3, #73	; 0x49
 8025cc6:	d024      	beq.n	8025d12 <_strtod_l+0x35a>
 8025cc8:	2b4e      	cmp	r3, #78	; 0x4e
 8025cca:	f47f aed3 	bne.w	8025a74 <_strtod_l+0xbc>
 8025cce:	499e      	ldr	r1, [pc, #632]	; (8025f48 <_strtod_l+0x590>)
 8025cd0:	a81d      	add	r0, sp, #116	; 0x74
 8025cd2:	f001 ff39 	bl	8027b48 <__match>
 8025cd6:	2800      	cmp	r0, #0
 8025cd8:	f43f aecc 	beq.w	8025a74 <_strtod_l+0xbc>
 8025cdc:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8025cde:	781b      	ldrb	r3, [r3, #0]
 8025ce0:	2b28      	cmp	r3, #40	; 0x28
 8025ce2:	d12d      	bne.n	8025d40 <_strtod_l+0x388>
 8025ce4:	4999      	ldr	r1, [pc, #612]	; (8025f4c <_strtod_l+0x594>)
 8025ce6:	aa20      	add	r2, sp, #128	; 0x80
 8025ce8:	a81d      	add	r0, sp, #116	; 0x74
 8025cea:	f001 ff41 	bl	8027b70 <__hexnan>
 8025cee:	2805      	cmp	r0, #5
 8025cf0:	d126      	bne.n	8025d40 <_strtod_l+0x388>
 8025cf2:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8025cf4:	f8dd a080 	ldr.w	sl, [sp, #128]	; 0x80
 8025cf8:	f043 4bff 	orr.w	fp, r3, #2139095040	; 0x7f800000
 8025cfc:	f44b 0be0 	orr.w	fp, fp, #7340032	; 0x700000
 8025d00:	e69c      	b.n	8025a3c <_strtod_l+0x84>
 8025d02:	210a      	movs	r1, #10
 8025d04:	fb01 3e0e 	mla	lr, r1, lr, r3
 8025d08:	f1ae 0e30 	sub.w	lr, lr, #48	; 0x30
 8025d0c:	e7b9      	b.n	8025c82 <_strtod_l+0x2ca>
 8025d0e:	2b6e      	cmp	r3, #110	; 0x6e
 8025d10:	e7db      	b.n	8025cca <_strtod_l+0x312>
 8025d12:	498f      	ldr	r1, [pc, #572]	; (8025f50 <_strtod_l+0x598>)
 8025d14:	a81d      	add	r0, sp, #116	; 0x74
 8025d16:	f001 ff17 	bl	8027b48 <__match>
 8025d1a:	2800      	cmp	r0, #0
 8025d1c:	f43f aeaa 	beq.w	8025a74 <_strtod_l+0xbc>
 8025d20:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8025d22:	498c      	ldr	r1, [pc, #560]	; (8025f54 <_strtod_l+0x59c>)
 8025d24:	3b01      	subs	r3, #1
 8025d26:	a81d      	add	r0, sp, #116	; 0x74
 8025d28:	931d      	str	r3, [sp, #116]	; 0x74
 8025d2a:	f001 ff0d 	bl	8027b48 <__match>
 8025d2e:	b910      	cbnz	r0, 8025d36 <_strtod_l+0x37e>
 8025d30:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8025d32:	3301      	adds	r3, #1
 8025d34:	931d      	str	r3, [sp, #116]	; 0x74
 8025d36:	f8df b22c 	ldr.w	fp, [pc, #556]	; 8025f64 <_strtod_l+0x5ac>
 8025d3a:	f04f 0a00 	mov.w	sl, #0
 8025d3e:	e67d      	b.n	8025a3c <_strtod_l+0x84>
 8025d40:	4885      	ldr	r0, [pc, #532]	; (8025f58 <_strtod_l+0x5a0>)
 8025d42:	f7fe fefd 	bl	8024b40 <nan>
 8025d46:	ed8d 0b04 	vstr	d0, [sp, #16]
 8025d4a:	e9dd ab04 	ldrd	sl, fp, [sp, #16]
 8025d4e:	e675      	b.n	8025a3c <_strtod_l+0x84>
 8025d50:	9b07      	ldr	r3, [sp, #28]
 8025d52:	9809      	ldr	r0, [sp, #36]	; 0x24
 8025d54:	1af3      	subs	r3, r6, r3
 8025d56:	2f00      	cmp	r7, #0
 8025d58:	bf08      	it	eq
 8025d5a:	462f      	moveq	r7, r5
 8025d5c:	2d10      	cmp	r5, #16
 8025d5e:	9308      	str	r3, [sp, #32]
 8025d60:	46a8      	mov	r8, r5
 8025d62:	bfa8      	it	ge
 8025d64:	f04f 0810 	movge.w	r8, #16
 8025d68:	f7da fbec 	bl	8000544 <__aeabi_ui2d>
 8025d6c:	2d09      	cmp	r5, #9
 8025d6e:	4682      	mov	sl, r0
 8025d70:	468b      	mov	fp, r1
 8025d72:	dd13      	ble.n	8025d9c <_strtod_l+0x3e4>
 8025d74:	4b79      	ldr	r3, [pc, #484]	; (8025f5c <_strtod_l+0x5a4>)
 8025d76:	eb03 03c8 	add.w	r3, r3, r8, lsl #3
 8025d7a:	e953 2312 	ldrd	r2, r3, [r3, #-72]	; 0x48
 8025d7e:	f7da fc5b 	bl	8000638 <__aeabi_dmul>
 8025d82:	4682      	mov	sl, r0
 8025d84:	4648      	mov	r0, r9
 8025d86:	468b      	mov	fp, r1
 8025d88:	f7da fbdc 	bl	8000544 <__aeabi_ui2d>
 8025d8c:	4602      	mov	r2, r0
 8025d8e:	460b      	mov	r3, r1
 8025d90:	4650      	mov	r0, sl
 8025d92:	4659      	mov	r1, fp
 8025d94:	f7da fa9a 	bl	80002cc <__adddf3>
 8025d98:	4682      	mov	sl, r0
 8025d9a:	468b      	mov	fp, r1
 8025d9c:	2d0f      	cmp	r5, #15
 8025d9e:	dc38      	bgt.n	8025e12 <_strtod_l+0x45a>
 8025da0:	9b08      	ldr	r3, [sp, #32]
 8025da2:	2b00      	cmp	r3, #0
 8025da4:	f43f ae4a 	beq.w	8025a3c <_strtod_l+0x84>
 8025da8:	dd24      	ble.n	8025df4 <_strtod_l+0x43c>
 8025daa:	2b16      	cmp	r3, #22
 8025dac:	dc0b      	bgt.n	8025dc6 <_strtod_l+0x40e>
 8025dae:	4d6b      	ldr	r5, [pc, #428]	; (8025f5c <_strtod_l+0x5a4>)
 8025db0:	eb05 05c3 	add.w	r5, r5, r3, lsl #3
 8025db4:	e9d5 0100 	ldrd	r0, r1, [r5]
 8025db8:	4652      	mov	r2, sl
 8025dba:	465b      	mov	r3, fp
 8025dbc:	f7da fc3c 	bl	8000638 <__aeabi_dmul>
 8025dc0:	4682      	mov	sl, r0
 8025dc2:	468b      	mov	fp, r1
 8025dc4:	e63a      	b.n	8025a3c <_strtod_l+0x84>
 8025dc6:	9a08      	ldr	r2, [sp, #32]
 8025dc8:	f1c5 0325 	rsb	r3, r5, #37	; 0x25
 8025dcc:	4293      	cmp	r3, r2
 8025dce:	db20      	blt.n	8025e12 <_strtod_l+0x45a>
 8025dd0:	4c62      	ldr	r4, [pc, #392]	; (8025f5c <_strtod_l+0x5a4>)
 8025dd2:	f1c5 050f 	rsb	r5, r5, #15
 8025dd6:	eb04 01c5 	add.w	r1, r4, r5, lsl #3
 8025dda:	4652      	mov	r2, sl
 8025ddc:	465b      	mov	r3, fp
 8025dde:	e9d1 0100 	ldrd	r0, r1, [r1]
 8025de2:	f7da fc29 	bl	8000638 <__aeabi_dmul>
 8025de6:	9b08      	ldr	r3, [sp, #32]
 8025de8:	1b5d      	subs	r5, r3, r5
 8025dea:	eb04 04c5 	add.w	r4, r4, r5, lsl #3
 8025dee:	e9d4 2300 	ldrd	r2, r3, [r4]
 8025df2:	e7e3      	b.n	8025dbc <_strtod_l+0x404>
 8025df4:	9b08      	ldr	r3, [sp, #32]
 8025df6:	3316      	adds	r3, #22
 8025df8:	db0b      	blt.n	8025e12 <_strtod_l+0x45a>
 8025dfa:	9b07      	ldr	r3, [sp, #28]
 8025dfc:	4a57      	ldr	r2, [pc, #348]	; (8025f5c <_strtod_l+0x5a4>)
 8025dfe:	1b9e      	subs	r6, r3, r6
 8025e00:	eb02 06c6 	add.w	r6, r2, r6, lsl #3
 8025e04:	e9d6 2300 	ldrd	r2, r3, [r6]
 8025e08:	4650      	mov	r0, sl
 8025e0a:	4659      	mov	r1, fp
 8025e0c:	f7da fd3e 	bl	800088c <__aeabi_ddiv>
 8025e10:	e7d6      	b.n	8025dc0 <_strtod_l+0x408>
 8025e12:	9b08      	ldr	r3, [sp, #32]
 8025e14:	eba5 0808 	sub.w	r8, r5, r8
 8025e18:	4498      	add	r8, r3
 8025e1a:	f1b8 0f00 	cmp.w	r8, #0
 8025e1e:	dd71      	ble.n	8025f04 <_strtod_l+0x54c>
 8025e20:	f018 030f 	ands.w	r3, r8, #15
 8025e24:	d00a      	beq.n	8025e3c <_strtod_l+0x484>
 8025e26:	494d      	ldr	r1, [pc, #308]	; (8025f5c <_strtod_l+0x5a4>)
 8025e28:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 8025e2c:	4652      	mov	r2, sl
 8025e2e:	465b      	mov	r3, fp
 8025e30:	e9d1 0100 	ldrd	r0, r1, [r1]
 8025e34:	f7da fc00 	bl	8000638 <__aeabi_dmul>
 8025e38:	4682      	mov	sl, r0
 8025e3a:	468b      	mov	fp, r1
 8025e3c:	f038 080f 	bics.w	r8, r8, #15
 8025e40:	d04d      	beq.n	8025ede <_strtod_l+0x526>
 8025e42:	f5b8 7f9a 	cmp.w	r8, #308	; 0x134
 8025e46:	dd22      	ble.n	8025e8e <_strtod_l+0x4d6>
 8025e48:	2500      	movs	r5, #0
 8025e4a:	462e      	mov	r6, r5
 8025e4c:	9509      	str	r5, [sp, #36]	; 0x24
 8025e4e:	9507      	str	r5, [sp, #28]
 8025e50:	2322      	movs	r3, #34	; 0x22
 8025e52:	f8df b110 	ldr.w	fp, [pc, #272]	; 8025f64 <_strtod_l+0x5ac>
 8025e56:	6023      	str	r3, [r4, #0]
 8025e58:	f04f 0a00 	mov.w	sl, #0
 8025e5c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025e5e:	2b00      	cmp	r3, #0
 8025e60:	f43f adec 	beq.w	8025a3c <_strtod_l+0x84>
 8025e64:	991e      	ldr	r1, [sp, #120]	; 0x78
 8025e66:	4620      	mov	r0, r4
 8025e68:	f001 ff84 	bl	8027d74 <_Bfree>
 8025e6c:	9907      	ldr	r1, [sp, #28]
 8025e6e:	4620      	mov	r0, r4
 8025e70:	f001 ff80 	bl	8027d74 <_Bfree>
 8025e74:	4631      	mov	r1, r6
 8025e76:	4620      	mov	r0, r4
 8025e78:	f001 ff7c 	bl	8027d74 <_Bfree>
 8025e7c:	9909      	ldr	r1, [sp, #36]	; 0x24
 8025e7e:	4620      	mov	r0, r4
 8025e80:	f001 ff78 	bl	8027d74 <_Bfree>
 8025e84:	4629      	mov	r1, r5
 8025e86:	4620      	mov	r0, r4
 8025e88:	f001 ff74 	bl	8027d74 <_Bfree>
 8025e8c:	e5d6      	b.n	8025a3c <_strtod_l+0x84>
 8025e8e:	2300      	movs	r3, #0
 8025e90:	ea4f 1828 	mov.w	r8, r8, asr #4
 8025e94:	4650      	mov	r0, sl
 8025e96:	4659      	mov	r1, fp
 8025e98:	4699      	mov	r9, r3
 8025e9a:	f1b8 0f01 	cmp.w	r8, #1
 8025e9e:	dc21      	bgt.n	8025ee4 <_strtod_l+0x52c>
 8025ea0:	b10b      	cbz	r3, 8025ea6 <_strtod_l+0x4ee>
 8025ea2:	4682      	mov	sl, r0
 8025ea4:	468b      	mov	fp, r1
 8025ea6:	4b2e      	ldr	r3, [pc, #184]	; (8025f60 <_strtod_l+0x5a8>)
 8025ea8:	f1ab 7b54 	sub.w	fp, fp, #55574528	; 0x3500000
 8025eac:	eb03 09c9 	add.w	r9, r3, r9, lsl #3
 8025eb0:	4652      	mov	r2, sl
 8025eb2:	465b      	mov	r3, fp
 8025eb4:	e9d9 0100 	ldrd	r0, r1, [r9]
 8025eb8:	f7da fbbe 	bl	8000638 <__aeabi_dmul>
 8025ebc:	4b29      	ldr	r3, [pc, #164]	; (8025f64 <_strtod_l+0x5ac>)
 8025ebe:	460a      	mov	r2, r1
 8025ec0:	400b      	ands	r3, r1
 8025ec2:	4929      	ldr	r1, [pc, #164]	; (8025f68 <_strtod_l+0x5b0>)
 8025ec4:	428b      	cmp	r3, r1
 8025ec6:	4682      	mov	sl, r0
 8025ec8:	d8be      	bhi.n	8025e48 <_strtod_l+0x490>
 8025eca:	f5a1 1180 	sub.w	r1, r1, #1048576	; 0x100000
 8025ece:	428b      	cmp	r3, r1
 8025ed0:	bf86      	itte	hi
 8025ed2:	f8df b098 	ldrhi.w	fp, [pc, #152]	; 8025f6c <_strtod_l+0x5b4>
 8025ed6:	f04f 3aff 	movhi.w	sl, #4294967295
 8025eda:	f102 7b54 	addls.w	fp, r2, #55574528	; 0x3500000
 8025ede:	2300      	movs	r3, #0
 8025ee0:	9304      	str	r3, [sp, #16]
 8025ee2:	e081      	b.n	8025fe8 <_strtod_l+0x630>
 8025ee4:	f018 0f01 	tst.w	r8, #1
 8025ee8:	d007      	beq.n	8025efa <_strtod_l+0x542>
 8025eea:	4b1d      	ldr	r3, [pc, #116]	; (8025f60 <_strtod_l+0x5a8>)
 8025eec:	eb03 03c9 	add.w	r3, r3, r9, lsl #3
 8025ef0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8025ef4:	f7da fba0 	bl	8000638 <__aeabi_dmul>
 8025ef8:	2301      	movs	r3, #1
 8025efa:	f109 0901 	add.w	r9, r9, #1
 8025efe:	ea4f 0868 	mov.w	r8, r8, asr #1
 8025f02:	e7ca      	b.n	8025e9a <_strtod_l+0x4e2>
 8025f04:	d0eb      	beq.n	8025ede <_strtod_l+0x526>
 8025f06:	f1c8 0800 	rsb	r8, r8, #0
 8025f0a:	f018 020f 	ands.w	r2, r8, #15
 8025f0e:	d00a      	beq.n	8025f26 <_strtod_l+0x56e>
 8025f10:	4b12      	ldr	r3, [pc, #72]	; (8025f5c <_strtod_l+0x5a4>)
 8025f12:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8025f16:	4650      	mov	r0, sl
 8025f18:	4659      	mov	r1, fp
 8025f1a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8025f1e:	f7da fcb5 	bl	800088c <__aeabi_ddiv>
 8025f22:	4682      	mov	sl, r0
 8025f24:	468b      	mov	fp, r1
 8025f26:	ea5f 1828 	movs.w	r8, r8, asr #4
 8025f2a:	d0d8      	beq.n	8025ede <_strtod_l+0x526>
 8025f2c:	f1b8 0f1f 	cmp.w	r8, #31
 8025f30:	dd1e      	ble.n	8025f70 <_strtod_l+0x5b8>
 8025f32:	2500      	movs	r5, #0
 8025f34:	462e      	mov	r6, r5
 8025f36:	9509      	str	r5, [sp, #36]	; 0x24
 8025f38:	9507      	str	r5, [sp, #28]
 8025f3a:	2322      	movs	r3, #34	; 0x22
 8025f3c:	f04f 0a00 	mov.w	sl, #0
 8025f40:	f04f 0b00 	mov.w	fp, #0
 8025f44:	6023      	str	r3, [r4, #0]
 8025f46:	e789      	b.n	8025e5c <_strtod_l+0x4a4>
 8025f48:	0802a369 	.word	0x0802a369
 8025f4c:	0802a3a4 	.word	0x0802a3a4
 8025f50:	0802a361 	.word	0x0802a361
 8025f54:	0802a4e4 	.word	0x0802a4e4
 8025f58:	0802a7a0 	.word	0x0802a7a0
 8025f5c:	0802a680 	.word	0x0802a680
 8025f60:	0802a658 	.word	0x0802a658
 8025f64:	7ff00000 	.word	0x7ff00000
 8025f68:	7ca00000 	.word	0x7ca00000
 8025f6c:	7fefffff 	.word	0x7fefffff
 8025f70:	f018 0310 	ands.w	r3, r8, #16
 8025f74:	bf18      	it	ne
 8025f76:	236a      	movne	r3, #106	; 0x6a
 8025f78:	f8df 93b4 	ldr.w	r9, [pc, #948]	; 8026330 <_strtod_l+0x978>
 8025f7c:	9304      	str	r3, [sp, #16]
 8025f7e:	4650      	mov	r0, sl
 8025f80:	4659      	mov	r1, fp
 8025f82:	2300      	movs	r3, #0
 8025f84:	f018 0f01 	tst.w	r8, #1
 8025f88:	d004      	beq.n	8025f94 <_strtod_l+0x5dc>
 8025f8a:	e9d9 2300 	ldrd	r2, r3, [r9]
 8025f8e:	f7da fb53 	bl	8000638 <__aeabi_dmul>
 8025f92:	2301      	movs	r3, #1
 8025f94:	ea5f 0868 	movs.w	r8, r8, asr #1
 8025f98:	f109 0908 	add.w	r9, r9, #8
 8025f9c:	d1f2      	bne.n	8025f84 <_strtod_l+0x5cc>
 8025f9e:	b10b      	cbz	r3, 8025fa4 <_strtod_l+0x5ec>
 8025fa0:	4682      	mov	sl, r0
 8025fa2:	468b      	mov	fp, r1
 8025fa4:	9b04      	ldr	r3, [sp, #16]
 8025fa6:	b1bb      	cbz	r3, 8025fd8 <_strtod_l+0x620>
 8025fa8:	f3cb 530a 	ubfx	r3, fp, #20, #11
 8025fac:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 8025fb0:	2b00      	cmp	r3, #0
 8025fb2:	4659      	mov	r1, fp
 8025fb4:	dd10      	ble.n	8025fd8 <_strtod_l+0x620>
 8025fb6:	2b1f      	cmp	r3, #31
 8025fb8:	f340 8128 	ble.w	802620c <_strtod_l+0x854>
 8025fbc:	2b34      	cmp	r3, #52	; 0x34
 8025fbe:	bfde      	ittt	le
 8025fc0:	3b20      	suble	r3, #32
 8025fc2:	f04f 32ff 	movle.w	r2, #4294967295
 8025fc6:	fa02 f303 	lslle.w	r3, r2, r3
 8025fca:	f04f 0a00 	mov.w	sl, #0
 8025fce:	bfcc      	ite	gt
 8025fd0:	f04f 7b5c 	movgt.w	fp, #57671680	; 0x3700000
 8025fd4:	ea03 0b01 	andle.w	fp, r3, r1
 8025fd8:	2200      	movs	r2, #0
 8025fda:	2300      	movs	r3, #0
 8025fdc:	4650      	mov	r0, sl
 8025fde:	4659      	mov	r1, fp
 8025fe0:	f7da fd92 	bl	8000b08 <__aeabi_dcmpeq>
 8025fe4:	2800      	cmp	r0, #0
 8025fe6:	d1a4      	bne.n	8025f32 <_strtod_l+0x57a>
 8025fe8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025fea:	9300      	str	r3, [sp, #0]
 8025fec:	990a      	ldr	r1, [sp, #40]	; 0x28
 8025fee:	462b      	mov	r3, r5
 8025ff0:	463a      	mov	r2, r7
 8025ff2:	4620      	mov	r0, r4
 8025ff4:	f001 ff2a 	bl	8027e4c <__s2b>
 8025ff8:	9009      	str	r0, [sp, #36]	; 0x24
 8025ffa:	2800      	cmp	r0, #0
 8025ffc:	f43f af24 	beq.w	8025e48 <_strtod_l+0x490>
 8026000:	9b07      	ldr	r3, [sp, #28]
 8026002:	1b9e      	subs	r6, r3, r6
 8026004:	9b08      	ldr	r3, [sp, #32]
 8026006:	2b00      	cmp	r3, #0
 8026008:	bfb4      	ite	lt
 802600a:	4633      	movlt	r3, r6
 802600c:	2300      	movge	r3, #0
 802600e:	9310      	str	r3, [sp, #64]	; 0x40
 8026010:	9b08      	ldr	r3, [sp, #32]
 8026012:	2500      	movs	r5, #0
 8026014:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8026018:	9318      	str	r3, [sp, #96]	; 0x60
 802601a:	462e      	mov	r6, r5
 802601c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802601e:	4620      	mov	r0, r4
 8026020:	6859      	ldr	r1, [r3, #4]
 8026022:	f001 fe67 	bl	8027cf4 <_Balloc>
 8026026:	9007      	str	r0, [sp, #28]
 8026028:	2800      	cmp	r0, #0
 802602a:	f43f af11 	beq.w	8025e50 <_strtod_l+0x498>
 802602e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026030:	691a      	ldr	r2, [r3, #16]
 8026032:	3202      	adds	r2, #2
 8026034:	f103 010c 	add.w	r1, r3, #12
 8026038:	0092      	lsls	r2, r2, #2
 802603a:	300c      	adds	r0, #12
 802603c:	f7fe ff08 	bl	8024e50 <memcpy>
 8026040:	ec4b ab10 	vmov	d0, sl, fp
 8026044:	aa20      	add	r2, sp, #128	; 0x80
 8026046:	a91f      	add	r1, sp, #124	; 0x7c
 8026048:	4620      	mov	r0, r4
 802604a:	e9cd ab0a 	strd	sl, fp, [sp, #40]	; 0x28
 802604e:	f002 fa39 	bl	80284c4 <__d2b>
 8026052:	901e      	str	r0, [sp, #120]	; 0x78
 8026054:	2800      	cmp	r0, #0
 8026056:	f43f aefb 	beq.w	8025e50 <_strtod_l+0x498>
 802605a:	2101      	movs	r1, #1
 802605c:	4620      	mov	r0, r4
 802605e:	f001 ff8f 	bl	8027f80 <__i2b>
 8026062:	4606      	mov	r6, r0
 8026064:	2800      	cmp	r0, #0
 8026066:	f43f aef3 	beq.w	8025e50 <_strtod_l+0x498>
 802606a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802606c:	9904      	ldr	r1, [sp, #16]
 802606e:	2b00      	cmp	r3, #0
 8026070:	bfab      	itete	ge
 8026072:	9a10      	ldrge	r2, [sp, #64]	; 0x40
 8026074:	9a18      	ldrlt	r2, [sp, #96]	; 0x60
 8026076:	9f18      	ldrge	r7, [sp, #96]	; 0x60
 8026078:	f8dd 9040 	ldrlt.w	r9, [sp, #64]	; 0x40
 802607c:	bfac      	ite	ge
 802607e:	eb03 0902 	addge.w	r9, r3, r2
 8026082:	1ad7      	sublt	r7, r2, r3
 8026084:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8026086:	eba3 0801 	sub.w	r8, r3, r1
 802608a:	4490      	add	r8, r2
 802608c:	4ba3      	ldr	r3, [pc, #652]	; (802631c <_strtod_l+0x964>)
 802608e:	f108 38ff 	add.w	r8, r8, #4294967295
 8026092:	4598      	cmp	r8, r3
 8026094:	f1c2 0236 	rsb	r2, r2, #54	; 0x36
 8026098:	f280 80cc 	bge.w	8026234 <_strtod_l+0x87c>
 802609c:	eba3 0308 	sub.w	r3, r3, r8
 80260a0:	2b1f      	cmp	r3, #31
 80260a2:	eba2 0203 	sub.w	r2, r2, r3
 80260a6:	f04f 0101 	mov.w	r1, #1
 80260aa:	f300 80b6 	bgt.w	802621a <_strtod_l+0x862>
 80260ae:	fa01 f303 	lsl.w	r3, r1, r3
 80260b2:	9311      	str	r3, [sp, #68]	; 0x44
 80260b4:	2300      	movs	r3, #0
 80260b6:	930c      	str	r3, [sp, #48]	; 0x30
 80260b8:	eb09 0802 	add.w	r8, r9, r2
 80260bc:	9b04      	ldr	r3, [sp, #16]
 80260be:	45c1      	cmp	r9, r8
 80260c0:	4417      	add	r7, r2
 80260c2:	441f      	add	r7, r3
 80260c4:	464b      	mov	r3, r9
 80260c6:	bfa8      	it	ge
 80260c8:	4643      	movge	r3, r8
 80260ca:	42bb      	cmp	r3, r7
 80260cc:	bfa8      	it	ge
 80260ce:	463b      	movge	r3, r7
 80260d0:	2b00      	cmp	r3, #0
 80260d2:	bfc2      	ittt	gt
 80260d4:	eba8 0803 	subgt.w	r8, r8, r3
 80260d8:	1aff      	subgt	r7, r7, r3
 80260da:	eba9 0903 	subgt.w	r9, r9, r3
 80260de:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80260e0:	2b00      	cmp	r3, #0
 80260e2:	dd17      	ble.n	8026114 <_strtod_l+0x75c>
 80260e4:	4631      	mov	r1, r6
 80260e6:	461a      	mov	r2, r3
 80260e8:	4620      	mov	r0, r4
 80260ea:	f002 f805 	bl	80280f8 <__pow5mult>
 80260ee:	4606      	mov	r6, r0
 80260f0:	2800      	cmp	r0, #0
 80260f2:	f43f aead 	beq.w	8025e50 <_strtod_l+0x498>
 80260f6:	4601      	mov	r1, r0
 80260f8:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 80260fa:	4620      	mov	r0, r4
 80260fc:	f001 ff56 	bl	8027fac <__multiply>
 8026100:	900f      	str	r0, [sp, #60]	; 0x3c
 8026102:	2800      	cmp	r0, #0
 8026104:	f43f aea4 	beq.w	8025e50 <_strtod_l+0x498>
 8026108:	991e      	ldr	r1, [sp, #120]	; 0x78
 802610a:	4620      	mov	r0, r4
 802610c:	f001 fe32 	bl	8027d74 <_Bfree>
 8026110:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8026112:	931e      	str	r3, [sp, #120]	; 0x78
 8026114:	f1b8 0f00 	cmp.w	r8, #0
 8026118:	f300 8091 	bgt.w	802623e <_strtod_l+0x886>
 802611c:	9b08      	ldr	r3, [sp, #32]
 802611e:	2b00      	cmp	r3, #0
 8026120:	dd08      	ble.n	8026134 <_strtod_l+0x77c>
 8026122:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8026124:	9907      	ldr	r1, [sp, #28]
 8026126:	4620      	mov	r0, r4
 8026128:	f001 ffe6 	bl	80280f8 <__pow5mult>
 802612c:	9007      	str	r0, [sp, #28]
 802612e:	2800      	cmp	r0, #0
 8026130:	f43f ae8e 	beq.w	8025e50 <_strtod_l+0x498>
 8026134:	2f00      	cmp	r7, #0
 8026136:	dd08      	ble.n	802614a <_strtod_l+0x792>
 8026138:	9907      	ldr	r1, [sp, #28]
 802613a:	463a      	mov	r2, r7
 802613c:	4620      	mov	r0, r4
 802613e:	f002 f835 	bl	80281ac <__lshift>
 8026142:	9007      	str	r0, [sp, #28]
 8026144:	2800      	cmp	r0, #0
 8026146:	f43f ae83 	beq.w	8025e50 <_strtod_l+0x498>
 802614a:	f1b9 0f00 	cmp.w	r9, #0
 802614e:	dd08      	ble.n	8026162 <_strtod_l+0x7aa>
 8026150:	4631      	mov	r1, r6
 8026152:	464a      	mov	r2, r9
 8026154:	4620      	mov	r0, r4
 8026156:	f002 f829 	bl	80281ac <__lshift>
 802615a:	4606      	mov	r6, r0
 802615c:	2800      	cmp	r0, #0
 802615e:	f43f ae77 	beq.w	8025e50 <_strtod_l+0x498>
 8026162:	9a07      	ldr	r2, [sp, #28]
 8026164:	991e      	ldr	r1, [sp, #120]	; 0x78
 8026166:	4620      	mov	r0, r4
 8026168:	f002 f8a8 	bl	80282bc <__mdiff>
 802616c:	4605      	mov	r5, r0
 802616e:	2800      	cmp	r0, #0
 8026170:	f43f ae6e 	beq.w	8025e50 <_strtod_l+0x498>
 8026174:	68c3      	ldr	r3, [r0, #12]
 8026176:	930f      	str	r3, [sp, #60]	; 0x3c
 8026178:	2300      	movs	r3, #0
 802617a:	60c3      	str	r3, [r0, #12]
 802617c:	4631      	mov	r1, r6
 802617e:	f002 f881 	bl	8028284 <__mcmp>
 8026182:	2800      	cmp	r0, #0
 8026184:	da65      	bge.n	8026252 <_strtod_l+0x89a>
 8026186:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8026188:	ea53 030a 	orrs.w	r3, r3, sl
 802618c:	f040 8087 	bne.w	802629e <_strtod_l+0x8e6>
 8026190:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8026194:	2b00      	cmp	r3, #0
 8026196:	f040 8082 	bne.w	802629e <_strtod_l+0x8e6>
 802619a:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 802619e:	0d1b      	lsrs	r3, r3, #20
 80261a0:	051b      	lsls	r3, r3, #20
 80261a2:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
 80261a6:	d97a      	bls.n	802629e <_strtod_l+0x8e6>
 80261a8:	696b      	ldr	r3, [r5, #20]
 80261aa:	b913      	cbnz	r3, 80261b2 <_strtod_l+0x7fa>
 80261ac:	692b      	ldr	r3, [r5, #16]
 80261ae:	2b01      	cmp	r3, #1
 80261b0:	dd75      	ble.n	802629e <_strtod_l+0x8e6>
 80261b2:	4629      	mov	r1, r5
 80261b4:	2201      	movs	r2, #1
 80261b6:	4620      	mov	r0, r4
 80261b8:	f001 fff8 	bl	80281ac <__lshift>
 80261bc:	4631      	mov	r1, r6
 80261be:	4605      	mov	r5, r0
 80261c0:	f002 f860 	bl	8028284 <__mcmp>
 80261c4:	2800      	cmp	r0, #0
 80261c6:	dd6a      	ble.n	802629e <_strtod_l+0x8e6>
 80261c8:	9904      	ldr	r1, [sp, #16]
 80261ca:	4a55      	ldr	r2, [pc, #340]	; (8026320 <_strtod_l+0x968>)
 80261cc:	465b      	mov	r3, fp
 80261ce:	2900      	cmp	r1, #0
 80261d0:	f000 8085 	beq.w	80262de <_strtod_l+0x926>
 80261d4:	ea02 010b 	and.w	r1, r2, fp
 80261d8:	f1b1 6fd6 	cmp.w	r1, #112197632	; 0x6b00000
 80261dc:	dc7f      	bgt.n	80262de <_strtod_l+0x926>
 80261de:	f1b1 7f5c 	cmp.w	r1, #57671680	; 0x3700000
 80261e2:	f77f aeaa 	ble.w	8025f3a <_strtod_l+0x582>
 80261e6:	4a4f      	ldr	r2, [pc, #316]	; (8026324 <_strtod_l+0x96c>)
 80261e8:	2300      	movs	r3, #0
 80261ea:	e9cd 3216 	strd	r3, r2, [sp, #88]	; 0x58
 80261ee:	4650      	mov	r0, sl
 80261f0:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
 80261f4:	4659      	mov	r1, fp
 80261f6:	f7da fa1f 	bl	8000638 <__aeabi_dmul>
 80261fa:	460b      	mov	r3, r1
 80261fc:	4303      	orrs	r3, r0
 80261fe:	bf08      	it	eq
 8026200:	2322      	moveq	r3, #34	; 0x22
 8026202:	4682      	mov	sl, r0
 8026204:	468b      	mov	fp, r1
 8026206:	bf08      	it	eq
 8026208:	6023      	streq	r3, [r4, #0]
 802620a:	e62b      	b.n	8025e64 <_strtod_l+0x4ac>
 802620c:	f04f 32ff 	mov.w	r2, #4294967295
 8026210:	fa02 f303 	lsl.w	r3, r2, r3
 8026214:	ea03 0a0a 	and.w	sl, r3, sl
 8026218:	e6de      	b.n	8025fd8 <_strtod_l+0x620>
 802621a:	f1c8 487f 	rsb	r8, r8, #4278190080	; 0xff000000
 802621e:	f508 087f 	add.w	r8, r8, #16711680	; 0xff0000
 8026222:	f508 487b 	add.w	r8, r8, #64256	; 0xfb00
 8026226:	f108 08e2 	add.w	r8, r8, #226	; 0xe2
 802622a:	fa01 f308 	lsl.w	r3, r1, r8
 802622e:	930c      	str	r3, [sp, #48]	; 0x30
 8026230:	9111      	str	r1, [sp, #68]	; 0x44
 8026232:	e741      	b.n	80260b8 <_strtod_l+0x700>
 8026234:	2300      	movs	r3, #0
 8026236:	930c      	str	r3, [sp, #48]	; 0x30
 8026238:	2301      	movs	r3, #1
 802623a:	9311      	str	r3, [sp, #68]	; 0x44
 802623c:	e73c      	b.n	80260b8 <_strtod_l+0x700>
 802623e:	991e      	ldr	r1, [sp, #120]	; 0x78
 8026240:	4642      	mov	r2, r8
 8026242:	4620      	mov	r0, r4
 8026244:	f001 ffb2 	bl	80281ac <__lshift>
 8026248:	901e      	str	r0, [sp, #120]	; 0x78
 802624a:	2800      	cmp	r0, #0
 802624c:	f47f af66 	bne.w	802611c <_strtod_l+0x764>
 8026250:	e5fe      	b.n	8025e50 <_strtod_l+0x498>
 8026252:	465f      	mov	r7, fp
 8026254:	d16e      	bne.n	8026334 <_strtod_l+0x97c>
 8026256:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8026258:	f3cb 0313 	ubfx	r3, fp, #0, #20
 802625c:	b342      	cbz	r2, 80262b0 <_strtod_l+0x8f8>
 802625e:	4a32      	ldr	r2, [pc, #200]	; (8026328 <_strtod_l+0x970>)
 8026260:	4293      	cmp	r3, r2
 8026262:	d128      	bne.n	80262b6 <_strtod_l+0x8fe>
 8026264:	9b04      	ldr	r3, [sp, #16]
 8026266:	4650      	mov	r0, sl
 8026268:	b1eb      	cbz	r3, 80262a6 <_strtod_l+0x8ee>
 802626a:	4a2d      	ldr	r2, [pc, #180]	; (8026320 <_strtod_l+0x968>)
 802626c:	403a      	ands	r2, r7
 802626e:	f1b2 6fd4 	cmp.w	r2, #111149056	; 0x6a00000
 8026272:	f04f 31ff 	mov.w	r1, #4294967295
 8026276:	d819      	bhi.n	80262ac <_strtod_l+0x8f4>
 8026278:	0d12      	lsrs	r2, r2, #20
 802627a:	f1c2 036b 	rsb	r3, r2, #107	; 0x6b
 802627e:	fa01 f303 	lsl.w	r3, r1, r3
 8026282:	4298      	cmp	r0, r3
 8026284:	d117      	bne.n	80262b6 <_strtod_l+0x8fe>
 8026286:	4b29      	ldr	r3, [pc, #164]	; (802632c <_strtod_l+0x974>)
 8026288:	429f      	cmp	r7, r3
 802628a:	d102      	bne.n	8026292 <_strtod_l+0x8da>
 802628c:	3001      	adds	r0, #1
 802628e:	f43f addf 	beq.w	8025e50 <_strtod_l+0x498>
 8026292:	4b23      	ldr	r3, [pc, #140]	; (8026320 <_strtod_l+0x968>)
 8026294:	403b      	ands	r3, r7
 8026296:	f503 1b80 	add.w	fp, r3, #1048576	; 0x100000
 802629a:	f04f 0a00 	mov.w	sl, #0
 802629e:	9b04      	ldr	r3, [sp, #16]
 80262a0:	2b00      	cmp	r3, #0
 80262a2:	d1a0      	bne.n	80261e6 <_strtod_l+0x82e>
 80262a4:	e5de      	b.n	8025e64 <_strtod_l+0x4ac>
 80262a6:	f04f 33ff 	mov.w	r3, #4294967295
 80262aa:	e7ea      	b.n	8026282 <_strtod_l+0x8ca>
 80262ac:	460b      	mov	r3, r1
 80262ae:	e7e8      	b.n	8026282 <_strtod_l+0x8ca>
 80262b0:	ea53 030a 	orrs.w	r3, r3, sl
 80262b4:	d088      	beq.n	80261c8 <_strtod_l+0x810>
 80262b6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80262b8:	b1db      	cbz	r3, 80262f2 <_strtod_l+0x93a>
 80262ba:	423b      	tst	r3, r7
 80262bc:	d0ef      	beq.n	802629e <_strtod_l+0x8e6>
 80262be:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80262c0:	9a04      	ldr	r2, [sp, #16]
 80262c2:	4650      	mov	r0, sl
 80262c4:	4659      	mov	r1, fp
 80262c6:	b1c3      	cbz	r3, 80262fa <_strtod_l+0x942>
 80262c8:	f7ff fb5a 	bl	8025980 <sulp>
 80262cc:	4602      	mov	r2, r0
 80262ce:	460b      	mov	r3, r1
 80262d0:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 80262d4:	f7d9 fffa 	bl	80002cc <__adddf3>
 80262d8:	4682      	mov	sl, r0
 80262da:	468b      	mov	fp, r1
 80262dc:	e7df      	b.n	802629e <_strtod_l+0x8e6>
 80262de:	4013      	ands	r3, r2
 80262e0:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
 80262e4:	ea6f 5b13 	mvn.w	fp, r3, lsr #20
 80262e8:	ea6f 5b0b 	mvn.w	fp, fp, lsl #20
 80262ec:	f04f 3aff 	mov.w	sl, #4294967295
 80262f0:	e7d5      	b.n	802629e <_strtod_l+0x8e6>
 80262f2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80262f4:	ea13 0f0a 	tst.w	r3, sl
 80262f8:	e7e0      	b.n	80262bc <_strtod_l+0x904>
 80262fa:	f7ff fb41 	bl	8025980 <sulp>
 80262fe:	4602      	mov	r2, r0
 8026300:	460b      	mov	r3, r1
 8026302:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8026306:	f7d9 ffdf 	bl	80002c8 <__aeabi_dsub>
 802630a:	2200      	movs	r2, #0
 802630c:	2300      	movs	r3, #0
 802630e:	4682      	mov	sl, r0
 8026310:	468b      	mov	fp, r1
 8026312:	f7da fbf9 	bl	8000b08 <__aeabi_dcmpeq>
 8026316:	2800      	cmp	r0, #0
 8026318:	d0c1      	beq.n	802629e <_strtod_l+0x8e6>
 802631a:	e60e      	b.n	8025f3a <_strtod_l+0x582>
 802631c:	fffffc02 	.word	0xfffffc02
 8026320:	7ff00000 	.word	0x7ff00000
 8026324:	39500000 	.word	0x39500000
 8026328:	000fffff 	.word	0x000fffff
 802632c:	7fefffff 	.word	0x7fefffff
 8026330:	0802a3b8 	.word	0x0802a3b8
 8026334:	4631      	mov	r1, r6
 8026336:	4628      	mov	r0, r5
 8026338:	f002 f920 	bl	802857c <__ratio>
 802633c:	ec59 8b10 	vmov	r8, r9, d0
 8026340:	ee10 0a10 	vmov	r0, s0
 8026344:	2200      	movs	r2, #0
 8026346:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 802634a:	4649      	mov	r1, r9
 802634c:	f7da fbf0 	bl	8000b30 <__aeabi_dcmple>
 8026350:	2800      	cmp	r0, #0
 8026352:	d07c      	beq.n	802644e <_strtod_l+0xa96>
 8026354:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8026356:	2b00      	cmp	r3, #0
 8026358:	d04c      	beq.n	80263f4 <_strtod_l+0xa3c>
 802635a:	4b95      	ldr	r3, [pc, #596]	; (80265b0 <_strtod_l+0xbf8>)
 802635c:	2200      	movs	r2, #0
 802635e:	e9cd 230c 	strd	r2, r3, [sp, #48]	; 0x30
 8026362:	f8df 924c 	ldr.w	r9, [pc, #588]	; 80265b0 <_strtod_l+0xbf8>
 8026366:	f04f 0800 	mov.w	r8, #0
 802636a:	4b92      	ldr	r3, [pc, #584]	; (80265b4 <_strtod_l+0xbfc>)
 802636c:	403b      	ands	r3, r7
 802636e:	9311      	str	r3, [sp, #68]	; 0x44
 8026370:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8026372:	4b91      	ldr	r3, [pc, #580]	; (80265b8 <_strtod_l+0xc00>)
 8026374:	429a      	cmp	r2, r3
 8026376:	f040 80b2 	bne.w	80264de <_strtod_l+0xb26>
 802637a:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 802637e:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8026382:	f1a7 7b54 	sub.w	fp, r7, #55574528	; 0x3500000
 8026386:	ec4b ab10 	vmov	d0, sl, fp
 802638a:	e9cd 2316 	strd	r2, r3, [sp, #88]	; 0x58
 802638e:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
 8026392:	f002 f81b 	bl	80283cc <__ulp>
 8026396:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 802639a:	ec53 2b10 	vmov	r2, r3, d0
 802639e:	f7da f94b 	bl	8000638 <__aeabi_dmul>
 80263a2:	4652      	mov	r2, sl
 80263a4:	465b      	mov	r3, fp
 80263a6:	f7d9 ff91 	bl	80002cc <__adddf3>
 80263aa:	460b      	mov	r3, r1
 80263ac:	4981      	ldr	r1, [pc, #516]	; (80265b4 <_strtod_l+0xbfc>)
 80263ae:	4a83      	ldr	r2, [pc, #524]	; (80265bc <_strtod_l+0xc04>)
 80263b0:	4019      	ands	r1, r3
 80263b2:	4291      	cmp	r1, r2
 80263b4:	4682      	mov	sl, r0
 80263b6:	d95e      	bls.n	8026476 <_strtod_l+0xabe>
 80263b8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80263ba:	f102 7254 	add.w	r2, r2, #55574528	; 0x3500000
 80263be:	4293      	cmp	r3, r2
 80263c0:	d103      	bne.n	80263ca <_strtod_l+0xa12>
 80263c2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80263c4:	3301      	adds	r3, #1
 80263c6:	f43f ad43 	beq.w	8025e50 <_strtod_l+0x498>
 80263ca:	f8df b1fc 	ldr.w	fp, [pc, #508]	; 80265c8 <_strtod_l+0xc10>
 80263ce:	f04f 3aff 	mov.w	sl, #4294967295
 80263d2:	991e      	ldr	r1, [sp, #120]	; 0x78
 80263d4:	4620      	mov	r0, r4
 80263d6:	f001 fccd 	bl	8027d74 <_Bfree>
 80263da:	9907      	ldr	r1, [sp, #28]
 80263dc:	4620      	mov	r0, r4
 80263de:	f001 fcc9 	bl	8027d74 <_Bfree>
 80263e2:	4631      	mov	r1, r6
 80263e4:	4620      	mov	r0, r4
 80263e6:	f001 fcc5 	bl	8027d74 <_Bfree>
 80263ea:	4629      	mov	r1, r5
 80263ec:	4620      	mov	r0, r4
 80263ee:	f001 fcc1 	bl	8027d74 <_Bfree>
 80263f2:	e613      	b.n	802601c <_strtod_l+0x664>
 80263f4:	f1ba 0f00 	cmp.w	sl, #0
 80263f8:	d11b      	bne.n	8026432 <_strtod_l+0xa7a>
 80263fa:	f3cb 0313 	ubfx	r3, fp, #0, #20
 80263fe:	b9f3      	cbnz	r3, 802643e <_strtod_l+0xa86>
 8026400:	4b6b      	ldr	r3, [pc, #428]	; (80265b0 <_strtod_l+0xbf8>)
 8026402:	2200      	movs	r2, #0
 8026404:	4640      	mov	r0, r8
 8026406:	4649      	mov	r1, r9
 8026408:	f7da fb88 	bl	8000b1c <__aeabi_dcmplt>
 802640c:	b9d0      	cbnz	r0, 8026444 <_strtod_l+0xa8c>
 802640e:	4640      	mov	r0, r8
 8026410:	4649      	mov	r1, r9
 8026412:	4b6b      	ldr	r3, [pc, #428]	; (80265c0 <_strtod_l+0xc08>)
 8026414:	2200      	movs	r2, #0
 8026416:	f7da f90f 	bl	8000638 <__aeabi_dmul>
 802641a:	4680      	mov	r8, r0
 802641c:	4689      	mov	r9, r1
 802641e:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 8026422:	f8cd 8068 	str.w	r8, [sp, #104]	; 0x68
 8026426:	931b      	str	r3, [sp, #108]	; 0x6c
 8026428:	e9dd 231a 	ldrd	r2, r3, [sp, #104]	; 0x68
 802642c:	e9cd 230c 	strd	r2, r3, [sp, #48]	; 0x30
 8026430:	e79b      	b.n	802636a <_strtod_l+0x9b2>
 8026432:	f1ba 0f01 	cmp.w	sl, #1
 8026436:	d102      	bne.n	802643e <_strtod_l+0xa86>
 8026438:	2f00      	cmp	r7, #0
 802643a:	f43f ad7e 	beq.w	8025f3a <_strtod_l+0x582>
 802643e:	4b61      	ldr	r3, [pc, #388]	; (80265c4 <_strtod_l+0xc0c>)
 8026440:	2200      	movs	r2, #0
 8026442:	e78c      	b.n	802635e <_strtod_l+0x9a6>
 8026444:	f8df 9178 	ldr.w	r9, [pc, #376]	; 80265c0 <_strtod_l+0xc08>
 8026448:	f04f 0800 	mov.w	r8, #0
 802644c:	e7e7      	b.n	802641e <_strtod_l+0xa66>
 802644e:	4b5c      	ldr	r3, [pc, #368]	; (80265c0 <_strtod_l+0xc08>)
 8026450:	4640      	mov	r0, r8
 8026452:	4649      	mov	r1, r9
 8026454:	2200      	movs	r2, #0
 8026456:	f7da f8ef 	bl	8000638 <__aeabi_dmul>
 802645a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 802645c:	4680      	mov	r8, r0
 802645e:	4689      	mov	r9, r1
 8026460:	b933      	cbnz	r3, 8026470 <_strtod_l+0xab8>
 8026462:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8026466:	9012      	str	r0, [sp, #72]	; 0x48
 8026468:	9313      	str	r3, [sp, #76]	; 0x4c
 802646a:	e9dd 2312 	ldrd	r2, r3, [sp, #72]	; 0x48
 802646e:	e7dd      	b.n	802642c <_strtod_l+0xa74>
 8026470:	e9cd 8912 	strd	r8, r9, [sp, #72]	; 0x48
 8026474:	e7f9      	b.n	802646a <_strtod_l+0xab2>
 8026476:	f103 7b54 	add.w	fp, r3, #55574528	; 0x3500000
 802647a:	9b04      	ldr	r3, [sp, #16]
 802647c:	2b00      	cmp	r3, #0
 802647e:	d1a8      	bne.n	80263d2 <_strtod_l+0xa1a>
 8026480:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 8026484:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8026486:	0d1b      	lsrs	r3, r3, #20
 8026488:	051b      	lsls	r3, r3, #20
 802648a:	429a      	cmp	r2, r3
 802648c:	d1a1      	bne.n	80263d2 <_strtod_l+0xa1a>
 802648e:	4640      	mov	r0, r8
 8026490:	4649      	mov	r1, r9
 8026492:	f7da fc31 	bl	8000cf8 <__aeabi_d2lz>
 8026496:	f7da f8a1 	bl	80005dc <__aeabi_l2d>
 802649a:	4602      	mov	r2, r0
 802649c:	460b      	mov	r3, r1
 802649e:	4640      	mov	r0, r8
 80264a0:	4649      	mov	r1, r9
 80264a2:	f7d9 ff11 	bl	80002c8 <__aeabi_dsub>
 80264a6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80264a8:	f3cb 0313 	ubfx	r3, fp, #0, #20
 80264ac:	ea43 030a 	orr.w	r3, r3, sl
 80264b0:	4313      	orrs	r3, r2
 80264b2:	4680      	mov	r8, r0
 80264b4:	4689      	mov	r9, r1
 80264b6:	d053      	beq.n	8026560 <_strtod_l+0xba8>
 80264b8:	a335      	add	r3, pc, #212	; (adr r3, 8026590 <_strtod_l+0xbd8>)
 80264ba:	e9d3 2300 	ldrd	r2, r3, [r3]
 80264be:	f7da fb2d 	bl	8000b1c <__aeabi_dcmplt>
 80264c2:	2800      	cmp	r0, #0
 80264c4:	f47f acce 	bne.w	8025e64 <_strtod_l+0x4ac>
 80264c8:	a333      	add	r3, pc, #204	; (adr r3, 8026598 <_strtod_l+0xbe0>)
 80264ca:	e9d3 2300 	ldrd	r2, r3, [r3]
 80264ce:	4640      	mov	r0, r8
 80264d0:	4649      	mov	r1, r9
 80264d2:	f7da fb41 	bl	8000b58 <__aeabi_dcmpgt>
 80264d6:	2800      	cmp	r0, #0
 80264d8:	f43f af7b 	beq.w	80263d2 <_strtod_l+0xa1a>
 80264dc:	e4c2      	b.n	8025e64 <_strtod_l+0x4ac>
 80264de:	9b04      	ldr	r3, [sp, #16]
 80264e0:	b333      	cbz	r3, 8026530 <_strtod_l+0xb78>
 80264e2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80264e4:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 80264e8:	d822      	bhi.n	8026530 <_strtod_l+0xb78>
 80264ea:	a32d      	add	r3, pc, #180	; (adr r3, 80265a0 <_strtod_l+0xbe8>)
 80264ec:	e9d3 2300 	ldrd	r2, r3, [r3]
 80264f0:	4640      	mov	r0, r8
 80264f2:	4649      	mov	r1, r9
 80264f4:	f7da fb1c 	bl	8000b30 <__aeabi_dcmple>
 80264f8:	b1a0      	cbz	r0, 8026524 <_strtod_l+0xb6c>
 80264fa:	4649      	mov	r1, r9
 80264fc:	4640      	mov	r0, r8
 80264fe:	f7da fb73 	bl	8000be8 <__aeabi_d2uiz>
 8026502:	2801      	cmp	r0, #1
 8026504:	bf38      	it	cc
 8026506:	2001      	movcc	r0, #1
 8026508:	f7da f81c 	bl	8000544 <__aeabi_ui2d>
 802650c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 802650e:	4680      	mov	r8, r0
 8026510:	4689      	mov	r9, r1
 8026512:	bb13      	cbnz	r3, 802655a <_strtod_l+0xba2>
 8026514:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8026518:	9014      	str	r0, [sp, #80]	; 0x50
 802651a:	9315      	str	r3, [sp, #84]	; 0x54
 802651c:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	; 0x50
 8026520:	e9cd 230c 	strd	r2, r3, [sp, #48]	; 0x30
 8026524:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8026526:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8026528:	f103 63d6 	add.w	r3, r3, #112197632	; 0x6b00000
 802652c:	1a9b      	subs	r3, r3, r2
 802652e:	930d      	str	r3, [sp, #52]	; 0x34
 8026530:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8026534:	ed9d 0b0a 	vldr	d0, [sp, #40]	; 0x28
 8026538:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
 802653c:	f001 ff46 	bl	80283cc <__ulp>
 8026540:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8026544:	ec53 2b10 	vmov	r2, r3, d0
 8026548:	f7da f876 	bl	8000638 <__aeabi_dmul>
 802654c:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8026550:	f7d9 febc 	bl	80002cc <__adddf3>
 8026554:	4682      	mov	sl, r0
 8026556:	468b      	mov	fp, r1
 8026558:	e78f      	b.n	802647a <_strtod_l+0xac2>
 802655a:	e9cd 8914 	strd	r8, r9, [sp, #80]	; 0x50
 802655e:	e7dd      	b.n	802651c <_strtod_l+0xb64>
 8026560:	a311      	add	r3, pc, #68	; (adr r3, 80265a8 <_strtod_l+0xbf0>)
 8026562:	e9d3 2300 	ldrd	r2, r3, [r3]
 8026566:	f7da fad9 	bl	8000b1c <__aeabi_dcmplt>
 802656a:	e7b4      	b.n	80264d6 <_strtod_l+0xb1e>
 802656c:	2300      	movs	r3, #0
 802656e:	930e      	str	r3, [sp, #56]	; 0x38
 8026570:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8026572:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8026574:	6013      	str	r3, [r2, #0]
 8026576:	f7ff ba65 	b.w	8025a44 <_strtod_l+0x8c>
 802657a:	2b65      	cmp	r3, #101	; 0x65
 802657c:	f43f ab5d 	beq.w	8025c3a <_strtod_l+0x282>
 8026580:	2b45      	cmp	r3, #69	; 0x45
 8026582:	f43f ab5a 	beq.w	8025c3a <_strtod_l+0x282>
 8026586:	2201      	movs	r2, #1
 8026588:	f7ff bb92 	b.w	8025cb0 <_strtod_l+0x2f8>
 802658c:	f3af 8000 	nop.w
 8026590:	94a03595 	.word	0x94a03595
 8026594:	3fdfffff 	.word	0x3fdfffff
 8026598:	35afe535 	.word	0x35afe535
 802659c:	3fe00000 	.word	0x3fe00000
 80265a0:	ffc00000 	.word	0xffc00000
 80265a4:	41dfffff 	.word	0x41dfffff
 80265a8:	94a03595 	.word	0x94a03595
 80265ac:	3fcfffff 	.word	0x3fcfffff
 80265b0:	3ff00000 	.word	0x3ff00000
 80265b4:	7ff00000 	.word	0x7ff00000
 80265b8:	7fe00000 	.word	0x7fe00000
 80265bc:	7c9fffff 	.word	0x7c9fffff
 80265c0:	3fe00000 	.word	0x3fe00000
 80265c4:	bff00000 	.word	0xbff00000
 80265c8:	7fefffff 	.word	0x7fefffff

080265cc <strtof>:
 80265cc:	e92d 4370 	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
 80265d0:	4e26      	ldr	r6, [pc, #152]	; (802666c <strtof+0xa0>)
 80265d2:	4b27      	ldr	r3, [pc, #156]	; (8026670 <strtof+0xa4>)
 80265d4:	460a      	mov	r2, r1
 80265d6:	ed2d 8b02 	vpush	{d8}
 80265da:	4601      	mov	r1, r0
 80265dc:	6830      	ldr	r0, [r6, #0]
 80265de:	f7ff f9eb 	bl	80259b8 <_strtod_l>
 80265e2:	ec55 4b10 	vmov	r4, r5, d0
 80265e6:	ee10 2a10 	vmov	r2, s0
 80265ea:	ee10 0a10 	vmov	r0, s0
 80265ee:	462b      	mov	r3, r5
 80265f0:	4629      	mov	r1, r5
 80265f2:	f7da fabb 	bl	8000b6c <__aeabi_dcmpun>
 80265f6:	b190      	cbz	r0, 802661e <strtof+0x52>
 80265f8:	2d00      	cmp	r5, #0
 80265fa:	481e      	ldr	r0, [pc, #120]	; (8026674 <strtof+0xa8>)
 80265fc:	da09      	bge.n	8026612 <strtof+0x46>
 80265fe:	f002 f99f 	bl	8028940 <nanf>
 8026602:	eeb1 8a40 	vneg.f32	s16, s0
 8026606:	eeb0 0a48 	vmov.f32	s0, s16
 802660a:	ecbd 8b02 	vpop	{d8}
 802660e:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
 8026612:	ecbd 8b02 	vpop	{d8}
 8026616:	e8bd 4370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, lr}
 802661a:	f002 b991 	b.w	8028940 <nanf>
 802661e:	4620      	mov	r0, r4
 8026620:	4629      	mov	r1, r5
 8026622:	f7da fb01 	bl	8000c28 <__aeabi_d2f>
 8026626:	ee08 0a10 	vmov	s16, r0
 802662a:	eddf 7a13 	vldr	s15, [pc, #76]	; 8026678 <strtof+0xac>
 802662e:	eeb0 7ac8 	vabs.f32	s14, s16
 8026632:	eeb4 7a67 	vcmp.f32	s14, s15
 8026636:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802663a:	dde4      	ble.n	8026606 <strtof+0x3a>
 802663c:	f025 4900 	bic.w	r9, r5, #2147483648	; 0x80000000
 8026640:	4b0e      	ldr	r3, [pc, #56]	; (802667c <strtof+0xb0>)
 8026642:	f04f 32ff 	mov.w	r2, #4294967295
 8026646:	4620      	mov	r0, r4
 8026648:	4649      	mov	r1, r9
 802664a:	f7da fa8f 	bl	8000b6c <__aeabi_dcmpun>
 802664e:	b940      	cbnz	r0, 8026662 <strtof+0x96>
 8026650:	4b0a      	ldr	r3, [pc, #40]	; (802667c <strtof+0xb0>)
 8026652:	f04f 32ff 	mov.w	r2, #4294967295
 8026656:	4620      	mov	r0, r4
 8026658:	4649      	mov	r1, r9
 802665a:	f7da fa69 	bl	8000b30 <__aeabi_dcmple>
 802665e:	2800      	cmp	r0, #0
 8026660:	d0d1      	beq.n	8026606 <strtof+0x3a>
 8026662:	6833      	ldr	r3, [r6, #0]
 8026664:	2222      	movs	r2, #34	; 0x22
 8026666:	601a      	str	r2, [r3, #0]
 8026668:	e7cd      	b.n	8026606 <strtof+0x3a>
 802666a:	bf00      	nop
 802666c:	20000010 	.word	0x20000010
 8026670:	2000007c 	.word	0x2000007c
 8026674:	0802a7a0 	.word	0x0802a7a0
 8026678:	7f7fffff 	.word	0x7f7fffff
 802667c:	7fefffff 	.word	0x7fefffff

08026680 <_strtol_l.isra.0>:
 8026680:	2b01      	cmp	r3, #1
 8026682:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8026686:	d001      	beq.n	802668c <_strtol_l.isra.0+0xc>
 8026688:	2b24      	cmp	r3, #36	; 0x24
 802668a:	d906      	bls.n	802669a <_strtol_l.isra.0+0x1a>
 802668c:	f7fe fb80 	bl	8024d90 <__errno>
 8026690:	2316      	movs	r3, #22
 8026692:	6003      	str	r3, [r0, #0]
 8026694:	2000      	movs	r0, #0
 8026696:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802669a:	4f3a      	ldr	r7, [pc, #232]	; (8026784 <_strtol_l.isra.0+0x104>)
 802669c:	468e      	mov	lr, r1
 802669e:	4676      	mov	r6, lr
 80266a0:	f81e 4b01 	ldrb.w	r4, [lr], #1
 80266a4:	5de5      	ldrb	r5, [r4, r7]
 80266a6:	f015 0508 	ands.w	r5, r5, #8
 80266aa:	d1f8      	bne.n	802669e <_strtol_l.isra.0+0x1e>
 80266ac:	2c2d      	cmp	r4, #45	; 0x2d
 80266ae:	d134      	bne.n	802671a <_strtol_l.isra.0+0x9a>
 80266b0:	f89e 4000 	ldrb.w	r4, [lr]
 80266b4:	f04f 0801 	mov.w	r8, #1
 80266b8:	f106 0e02 	add.w	lr, r6, #2
 80266bc:	2b00      	cmp	r3, #0
 80266be:	d05c      	beq.n	802677a <_strtol_l.isra.0+0xfa>
 80266c0:	2b10      	cmp	r3, #16
 80266c2:	d10c      	bne.n	80266de <_strtol_l.isra.0+0x5e>
 80266c4:	2c30      	cmp	r4, #48	; 0x30
 80266c6:	d10a      	bne.n	80266de <_strtol_l.isra.0+0x5e>
 80266c8:	f89e 4000 	ldrb.w	r4, [lr]
 80266cc:	f004 04df 	and.w	r4, r4, #223	; 0xdf
 80266d0:	2c58      	cmp	r4, #88	; 0x58
 80266d2:	d14d      	bne.n	8026770 <_strtol_l.isra.0+0xf0>
 80266d4:	f89e 4001 	ldrb.w	r4, [lr, #1]
 80266d8:	2310      	movs	r3, #16
 80266da:	f10e 0e02 	add.w	lr, lr, #2
 80266de:	f108 4c00 	add.w	ip, r8, #2147483648	; 0x80000000
 80266e2:	f10c 3cff 	add.w	ip, ip, #4294967295
 80266e6:	2600      	movs	r6, #0
 80266e8:	fbbc f9f3 	udiv	r9, ip, r3
 80266ec:	4635      	mov	r5, r6
 80266ee:	fb03 ca19 	mls	sl, r3, r9, ip
 80266f2:	f1a4 0730 	sub.w	r7, r4, #48	; 0x30
 80266f6:	2f09      	cmp	r7, #9
 80266f8:	d818      	bhi.n	802672c <_strtol_l.isra.0+0xac>
 80266fa:	463c      	mov	r4, r7
 80266fc:	42a3      	cmp	r3, r4
 80266fe:	dd24      	ble.n	802674a <_strtol_l.isra.0+0xca>
 8026700:	2e00      	cmp	r6, #0
 8026702:	db1f      	blt.n	8026744 <_strtol_l.isra.0+0xc4>
 8026704:	45a9      	cmp	r9, r5
 8026706:	d31d      	bcc.n	8026744 <_strtol_l.isra.0+0xc4>
 8026708:	d101      	bne.n	802670e <_strtol_l.isra.0+0x8e>
 802670a:	45a2      	cmp	sl, r4
 802670c:	db1a      	blt.n	8026744 <_strtol_l.isra.0+0xc4>
 802670e:	fb05 4503 	mla	r5, r5, r3, r4
 8026712:	2601      	movs	r6, #1
 8026714:	f81e 4b01 	ldrb.w	r4, [lr], #1
 8026718:	e7eb      	b.n	80266f2 <_strtol_l.isra.0+0x72>
 802671a:	2c2b      	cmp	r4, #43	; 0x2b
 802671c:	bf08      	it	eq
 802671e:	f89e 4000 	ldrbeq.w	r4, [lr]
 8026722:	46a8      	mov	r8, r5
 8026724:	bf08      	it	eq
 8026726:	f106 0e02 	addeq.w	lr, r6, #2
 802672a:	e7c7      	b.n	80266bc <_strtol_l.isra.0+0x3c>
 802672c:	f1a4 0741 	sub.w	r7, r4, #65	; 0x41
 8026730:	2f19      	cmp	r7, #25
 8026732:	d801      	bhi.n	8026738 <_strtol_l.isra.0+0xb8>
 8026734:	3c37      	subs	r4, #55	; 0x37
 8026736:	e7e1      	b.n	80266fc <_strtol_l.isra.0+0x7c>
 8026738:	f1a4 0761 	sub.w	r7, r4, #97	; 0x61
 802673c:	2f19      	cmp	r7, #25
 802673e:	d804      	bhi.n	802674a <_strtol_l.isra.0+0xca>
 8026740:	3c57      	subs	r4, #87	; 0x57
 8026742:	e7db      	b.n	80266fc <_strtol_l.isra.0+0x7c>
 8026744:	f04f 36ff 	mov.w	r6, #4294967295
 8026748:	e7e4      	b.n	8026714 <_strtol_l.isra.0+0x94>
 802674a:	2e00      	cmp	r6, #0
 802674c:	da05      	bge.n	802675a <_strtol_l.isra.0+0xda>
 802674e:	2322      	movs	r3, #34	; 0x22
 8026750:	6003      	str	r3, [r0, #0]
 8026752:	4665      	mov	r5, ip
 8026754:	b942      	cbnz	r2, 8026768 <_strtol_l.isra.0+0xe8>
 8026756:	4628      	mov	r0, r5
 8026758:	e79d      	b.n	8026696 <_strtol_l.isra.0+0x16>
 802675a:	f1b8 0f00 	cmp.w	r8, #0
 802675e:	d000      	beq.n	8026762 <_strtol_l.isra.0+0xe2>
 8026760:	426d      	negs	r5, r5
 8026762:	2a00      	cmp	r2, #0
 8026764:	d0f7      	beq.n	8026756 <_strtol_l.isra.0+0xd6>
 8026766:	b10e      	cbz	r6, 802676c <_strtol_l.isra.0+0xec>
 8026768:	f10e 31ff 	add.w	r1, lr, #4294967295
 802676c:	6011      	str	r1, [r2, #0]
 802676e:	e7f2      	b.n	8026756 <_strtol_l.isra.0+0xd6>
 8026770:	2430      	movs	r4, #48	; 0x30
 8026772:	2b00      	cmp	r3, #0
 8026774:	d1b3      	bne.n	80266de <_strtol_l.isra.0+0x5e>
 8026776:	2308      	movs	r3, #8
 8026778:	e7b1      	b.n	80266de <_strtol_l.isra.0+0x5e>
 802677a:	2c30      	cmp	r4, #48	; 0x30
 802677c:	d0a4      	beq.n	80266c8 <_strtol_l.isra.0+0x48>
 802677e:	230a      	movs	r3, #10
 8026780:	e7ad      	b.n	80266de <_strtol_l.isra.0+0x5e>
 8026782:	bf00      	nop
 8026784:	0802a3e1 	.word	0x0802a3e1

08026788 <strtol>:
 8026788:	4613      	mov	r3, r2
 802678a:	460a      	mov	r2, r1
 802678c:	4601      	mov	r1, r0
 802678e:	4802      	ldr	r0, [pc, #8]	; (8026798 <strtol+0x10>)
 8026790:	6800      	ldr	r0, [r0, #0]
 8026792:	f7ff bf75 	b.w	8026680 <_strtol_l.isra.0>
 8026796:	bf00      	nop
 8026798:	20000010 	.word	0x20000010

0802679c <_vsniprintf_r>:
 802679c:	b530      	push	{r4, r5, lr}
 802679e:	1e14      	subs	r4, r2, #0
 80267a0:	4605      	mov	r5, r0
 80267a2:	b09b      	sub	sp, #108	; 0x6c
 80267a4:	4618      	mov	r0, r3
 80267a6:	da05      	bge.n	80267b4 <_vsniprintf_r+0x18>
 80267a8:	238b      	movs	r3, #139	; 0x8b
 80267aa:	602b      	str	r3, [r5, #0]
 80267ac:	f04f 30ff 	mov.w	r0, #4294967295
 80267b0:	b01b      	add	sp, #108	; 0x6c
 80267b2:	bd30      	pop	{r4, r5, pc}
 80267b4:	f44f 7302 	mov.w	r3, #520	; 0x208
 80267b8:	f8ad 300c 	strh.w	r3, [sp, #12]
 80267bc:	bf14      	ite	ne
 80267be:	f104 33ff 	addne.w	r3, r4, #4294967295
 80267c2:	4623      	moveq	r3, r4
 80267c4:	9302      	str	r3, [sp, #8]
 80267c6:	9305      	str	r3, [sp, #20]
 80267c8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80267cc:	9100      	str	r1, [sp, #0]
 80267ce:	9104      	str	r1, [sp, #16]
 80267d0:	f8ad 300e 	strh.w	r3, [sp, #14]
 80267d4:	4602      	mov	r2, r0
 80267d6:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80267d8:	4669      	mov	r1, sp
 80267da:	4628      	mov	r0, r5
 80267dc:	f001 ffb0 	bl	8028740 <_svfiprintf_r>
 80267e0:	1c43      	adds	r3, r0, #1
 80267e2:	bfbc      	itt	lt
 80267e4:	238b      	movlt	r3, #139	; 0x8b
 80267e6:	602b      	strlt	r3, [r5, #0]
 80267e8:	2c00      	cmp	r4, #0
 80267ea:	d0e1      	beq.n	80267b0 <_vsniprintf_r+0x14>
 80267ec:	9b00      	ldr	r3, [sp, #0]
 80267ee:	2200      	movs	r2, #0
 80267f0:	701a      	strb	r2, [r3, #0]
 80267f2:	e7dd      	b.n	80267b0 <_vsniprintf_r+0x14>

080267f4 <vsniprintf>:
 80267f4:	b507      	push	{r0, r1, r2, lr}
 80267f6:	9300      	str	r3, [sp, #0]
 80267f8:	4613      	mov	r3, r2
 80267fa:	460a      	mov	r2, r1
 80267fc:	4601      	mov	r1, r0
 80267fe:	4803      	ldr	r0, [pc, #12]	; (802680c <vsniprintf+0x18>)
 8026800:	6800      	ldr	r0, [r0, #0]
 8026802:	f7ff ffcb 	bl	802679c <_vsniprintf_r>
 8026806:	b003      	add	sp, #12
 8026808:	f85d fb04 	ldr.w	pc, [sp], #4
 802680c:	20000010 	.word	0x20000010

08026810 <__register_exitproc>:
 8026810:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8026814:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 80268d0 <__register_exitproc+0xc0>
 8026818:	4606      	mov	r6, r0
 802681a:	f8d8 0000 	ldr.w	r0, [r8]
 802681e:	461f      	mov	r7, r3
 8026820:	460d      	mov	r5, r1
 8026822:	4691      	mov	r9, r2
 8026824:	f001 fa45 	bl	8027cb2 <__retarget_lock_acquire_recursive>
 8026828:	4b25      	ldr	r3, [pc, #148]	; (80268c0 <__register_exitproc+0xb0>)
 802682a:	681c      	ldr	r4, [r3, #0]
 802682c:	b934      	cbnz	r4, 802683c <__register_exitproc+0x2c>
 802682e:	4c25      	ldr	r4, [pc, #148]	; (80268c4 <__register_exitproc+0xb4>)
 8026830:	601c      	str	r4, [r3, #0]
 8026832:	4b25      	ldr	r3, [pc, #148]	; (80268c8 <__register_exitproc+0xb8>)
 8026834:	b113      	cbz	r3, 802683c <__register_exitproc+0x2c>
 8026836:	681b      	ldr	r3, [r3, #0]
 8026838:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 802683c:	6863      	ldr	r3, [r4, #4]
 802683e:	2b1f      	cmp	r3, #31
 8026840:	dd07      	ble.n	8026852 <__register_exitproc+0x42>
 8026842:	f8d8 0000 	ldr.w	r0, [r8]
 8026846:	f001 fa36 	bl	8027cb6 <__retarget_lock_release_recursive>
 802684a:	f04f 30ff 	mov.w	r0, #4294967295
 802684e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8026852:	b34e      	cbz	r6, 80268a8 <__register_exitproc+0x98>
 8026854:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 8026858:	b988      	cbnz	r0, 802687e <__register_exitproc+0x6e>
 802685a:	4b1c      	ldr	r3, [pc, #112]	; (80268cc <__register_exitproc+0xbc>)
 802685c:	b923      	cbnz	r3, 8026868 <__register_exitproc+0x58>
 802685e:	f8d8 0000 	ldr.w	r0, [r8]
 8026862:	f001 fa27 	bl	8027cb4 <__retarget_lock_release>
 8026866:	e7f0      	b.n	802684a <__register_exitproc+0x3a>
 8026868:	f44f 7084 	mov.w	r0, #264	; 0x108
 802686c:	f7fe fad2 	bl	8024e14 <malloc>
 8026870:	2800      	cmp	r0, #0
 8026872:	d0f4      	beq.n	802685e <__register_exitproc+0x4e>
 8026874:	2300      	movs	r3, #0
 8026876:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 802687a:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 802687e:	6863      	ldr	r3, [r4, #4]
 8026880:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 8026884:	2201      	movs	r2, #1
 8026886:	409a      	lsls	r2, r3
 8026888:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 802688c:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 8026890:	4313      	orrs	r3, r2
 8026892:	2e02      	cmp	r6, #2
 8026894:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 8026898:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 802689c:	bf02      	ittt	eq
 802689e:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 80268a2:	431a      	orreq	r2, r3
 80268a4:	f8c0 2104 	streq.w	r2, [r0, #260]	; 0x104
 80268a8:	6863      	ldr	r3, [r4, #4]
 80268aa:	f8d8 0000 	ldr.w	r0, [r8]
 80268ae:	1c5a      	adds	r2, r3, #1
 80268b0:	3302      	adds	r3, #2
 80268b2:	6062      	str	r2, [r4, #4]
 80268b4:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 80268b8:	f001 f9fd 	bl	8027cb6 <__retarget_lock_release_recursive>
 80268bc:	2000      	movs	r0, #0
 80268be:	e7c6      	b.n	802684e <__register_exitproc+0x3e>
 80268c0:	200008dc 	.word	0x200008dc
 80268c4:	20000850 	.word	0x20000850
 80268c8:	00000000 	.word	0x00000000
 80268cc:	08024e15 	.word	0x08024e15
 80268d0:	20000074 	.word	0x20000074

080268d4 <quorem>:
 80268d4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80268d8:	6903      	ldr	r3, [r0, #16]
 80268da:	690c      	ldr	r4, [r1, #16]
 80268dc:	42a3      	cmp	r3, r4
 80268de:	4607      	mov	r7, r0
 80268e0:	f2c0 8081 	blt.w	80269e6 <quorem+0x112>
 80268e4:	3c01      	subs	r4, #1
 80268e6:	f101 0814 	add.w	r8, r1, #20
 80268ea:	f100 0514 	add.w	r5, r0, #20
 80268ee:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 80268f2:	9301      	str	r3, [sp, #4]
 80268f4:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 80268f8:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 80268fc:	3301      	adds	r3, #1
 80268fe:	429a      	cmp	r2, r3
 8026900:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 8026904:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 8026908:	fbb2 f6f3 	udiv	r6, r2, r3
 802690c:	d331      	bcc.n	8026972 <quorem+0x9e>
 802690e:	f04f 0e00 	mov.w	lr, #0
 8026912:	4640      	mov	r0, r8
 8026914:	46ac      	mov	ip, r5
 8026916:	46f2      	mov	sl, lr
 8026918:	f850 2b04 	ldr.w	r2, [r0], #4
 802691c:	b293      	uxth	r3, r2
 802691e:	fb06 e303 	mla	r3, r6, r3, lr
 8026922:	ea4f 4e13 	mov.w	lr, r3, lsr #16
 8026926:	b29b      	uxth	r3, r3
 8026928:	ebaa 0303 	sub.w	r3, sl, r3
 802692c:	0c12      	lsrs	r2, r2, #16
 802692e:	f8dc a000 	ldr.w	sl, [ip]
 8026932:	fb06 e202 	mla	r2, r6, r2, lr
 8026936:	fa13 f38a 	uxtah	r3, r3, sl
 802693a:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 802693e:	fa1f fa82 	uxth.w	sl, r2
 8026942:	f8dc 2000 	ldr.w	r2, [ip]
 8026946:	ebca 4212 	rsb	r2, sl, r2, lsr #16
 802694a:	eb02 4223 	add.w	r2, r2, r3, asr #16
 802694e:	b29b      	uxth	r3, r3
 8026950:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8026954:	4581      	cmp	r9, r0
 8026956:	f84c 3b04 	str.w	r3, [ip], #4
 802695a:	ea4f 4a22 	mov.w	sl, r2, asr #16
 802695e:	d2db      	bcs.n	8026918 <quorem+0x44>
 8026960:	f855 300b 	ldr.w	r3, [r5, fp]
 8026964:	b92b      	cbnz	r3, 8026972 <quorem+0x9e>
 8026966:	9b01      	ldr	r3, [sp, #4]
 8026968:	3b04      	subs	r3, #4
 802696a:	429d      	cmp	r5, r3
 802696c:	461a      	mov	r2, r3
 802696e:	d32e      	bcc.n	80269ce <quorem+0xfa>
 8026970:	613c      	str	r4, [r7, #16]
 8026972:	4638      	mov	r0, r7
 8026974:	f001 fc86 	bl	8028284 <__mcmp>
 8026978:	2800      	cmp	r0, #0
 802697a:	db24      	blt.n	80269c6 <quorem+0xf2>
 802697c:	3601      	adds	r6, #1
 802697e:	4628      	mov	r0, r5
 8026980:	f04f 0c00 	mov.w	ip, #0
 8026984:	f858 2b04 	ldr.w	r2, [r8], #4
 8026988:	f8d0 e000 	ldr.w	lr, [r0]
 802698c:	b293      	uxth	r3, r2
 802698e:	ebac 0303 	sub.w	r3, ip, r3
 8026992:	0c12      	lsrs	r2, r2, #16
 8026994:	fa13 f38e 	uxtah	r3, r3, lr
 8026998:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 802699c:	eb02 4223 	add.w	r2, r2, r3, asr #16
 80269a0:	b29b      	uxth	r3, r3
 80269a2:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80269a6:	45c1      	cmp	r9, r8
 80269a8:	f840 3b04 	str.w	r3, [r0], #4
 80269ac:	ea4f 4c22 	mov.w	ip, r2, asr #16
 80269b0:	d2e8      	bcs.n	8026984 <quorem+0xb0>
 80269b2:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 80269b6:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 80269ba:	b922      	cbnz	r2, 80269c6 <quorem+0xf2>
 80269bc:	3b04      	subs	r3, #4
 80269be:	429d      	cmp	r5, r3
 80269c0:	461a      	mov	r2, r3
 80269c2:	d30a      	bcc.n	80269da <quorem+0x106>
 80269c4:	613c      	str	r4, [r7, #16]
 80269c6:	4630      	mov	r0, r6
 80269c8:	b003      	add	sp, #12
 80269ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80269ce:	6812      	ldr	r2, [r2, #0]
 80269d0:	3b04      	subs	r3, #4
 80269d2:	2a00      	cmp	r2, #0
 80269d4:	d1cc      	bne.n	8026970 <quorem+0x9c>
 80269d6:	3c01      	subs	r4, #1
 80269d8:	e7c7      	b.n	802696a <quorem+0x96>
 80269da:	6812      	ldr	r2, [r2, #0]
 80269dc:	3b04      	subs	r3, #4
 80269de:	2a00      	cmp	r2, #0
 80269e0:	d1f0      	bne.n	80269c4 <quorem+0xf0>
 80269e2:	3c01      	subs	r4, #1
 80269e4:	e7eb      	b.n	80269be <quorem+0xea>
 80269e6:	2000      	movs	r0, #0
 80269e8:	e7ee      	b.n	80269c8 <quorem+0xf4>
 80269ea:	0000      	movs	r0, r0
 80269ec:	0000      	movs	r0, r0
	...

080269f0 <_dtoa_r>:
 80269f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80269f4:	ed2d 8b02 	vpush	{d8}
 80269f8:	ec57 6b10 	vmov	r6, r7, d0
 80269fc:	b095      	sub	sp, #84	; 0x54
 80269fe:	6a45      	ldr	r5, [r0, #36]	; 0x24
 8026a00:	f8dd 8080 	ldr.w	r8, [sp, #128]	; 0x80
 8026a04:	9105      	str	r1, [sp, #20]
 8026a06:	e9cd 6702 	strd	r6, r7, [sp, #8]
 8026a0a:	4604      	mov	r4, r0
 8026a0c:	9209      	str	r2, [sp, #36]	; 0x24
 8026a0e:	930f      	str	r3, [sp, #60]	; 0x3c
 8026a10:	b975      	cbnz	r5, 8026a30 <_dtoa_r+0x40>
 8026a12:	2010      	movs	r0, #16
 8026a14:	f7fe f9fe 	bl	8024e14 <malloc>
 8026a18:	4602      	mov	r2, r0
 8026a1a:	6260      	str	r0, [r4, #36]	; 0x24
 8026a1c:	b920      	cbnz	r0, 8026a28 <_dtoa_r+0x38>
 8026a1e:	4bb2      	ldr	r3, [pc, #712]	; (8026ce8 <_dtoa_r+0x2f8>)
 8026a20:	21ea      	movs	r1, #234	; 0xea
 8026a22:	48b2      	ldr	r0, [pc, #712]	; (8026cec <_dtoa_r+0x2fc>)
 8026a24:	f001 ffb2 	bl	802898c <__assert_func>
 8026a28:	e9c0 5501 	strd	r5, r5, [r0, #4]
 8026a2c:	6005      	str	r5, [r0, #0]
 8026a2e:	60c5      	str	r5, [r0, #12]
 8026a30:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8026a32:	6819      	ldr	r1, [r3, #0]
 8026a34:	b151      	cbz	r1, 8026a4c <_dtoa_r+0x5c>
 8026a36:	685a      	ldr	r2, [r3, #4]
 8026a38:	604a      	str	r2, [r1, #4]
 8026a3a:	2301      	movs	r3, #1
 8026a3c:	4093      	lsls	r3, r2
 8026a3e:	608b      	str	r3, [r1, #8]
 8026a40:	4620      	mov	r0, r4
 8026a42:	f001 f997 	bl	8027d74 <_Bfree>
 8026a46:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8026a48:	2200      	movs	r2, #0
 8026a4a:	601a      	str	r2, [r3, #0]
 8026a4c:	1e3b      	subs	r3, r7, #0
 8026a4e:	bfb9      	ittee	lt
 8026a50:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 8026a54:	9303      	strlt	r3, [sp, #12]
 8026a56:	2300      	movge	r3, #0
 8026a58:	f8c8 3000 	strge.w	r3, [r8]
 8026a5c:	f8dd 900c 	ldr.w	r9, [sp, #12]
 8026a60:	4ba3      	ldr	r3, [pc, #652]	; (8026cf0 <_dtoa_r+0x300>)
 8026a62:	bfbc      	itt	lt
 8026a64:	2201      	movlt	r2, #1
 8026a66:	f8c8 2000 	strlt.w	r2, [r8]
 8026a6a:	ea33 0309 	bics.w	r3, r3, r9
 8026a6e:	d11b      	bne.n	8026aa8 <_dtoa_r+0xb8>
 8026a70:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8026a72:	f242 730f 	movw	r3, #9999	; 0x270f
 8026a76:	6013      	str	r3, [r2, #0]
 8026a78:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8026a7c:	4333      	orrs	r3, r6
 8026a7e:	f000 857a 	beq.w	8027576 <_dtoa_r+0xb86>
 8026a82:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8026a84:	b963      	cbnz	r3, 8026aa0 <_dtoa_r+0xb0>
 8026a86:	4b9b      	ldr	r3, [pc, #620]	; (8026cf4 <_dtoa_r+0x304>)
 8026a88:	e024      	b.n	8026ad4 <_dtoa_r+0xe4>
 8026a8a:	4b9b      	ldr	r3, [pc, #620]	; (8026cf8 <_dtoa_r+0x308>)
 8026a8c:	9300      	str	r3, [sp, #0]
 8026a8e:	3308      	adds	r3, #8
 8026a90:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8026a92:	6013      	str	r3, [r2, #0]
 8026a94:	9800      	ldr	r0, [sp, #0]
 8026a96:	b015      	add	sp, #84	; 0x54
 8026a98:	ecbd 8b02 	vpop	{d8}
 8026a9c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026aa0:	4b94      	ldr	r3, [pc, #592]	; (8026cf4 <_dtoa_r+0x304>)
 8026aa2:	9300      	str	r3, [sp, #0]
 8026aa4:	3303      	adds	r3, #3
 8026aa6:	e7f3      	b.n	8026a90 <_dtoa_r+0xa0>
 8026aa8:	ed9d 7b02 	vldr	d7, [sp, #8]
 8026aac:	2200      	movs	r2, #0
 8026aae:	ec51 0b17 	vmov	r0, r1, d7
 8026ab2:	2300      	movs	r3, #0
 8026ab4:	ed8d 7b0a 	vstr	d7, [sp, #40]	; 0x28
 8026ab8:	f7da f826 	bl	8000b08 <__aeabi_dcmpeq>
 8026abc:	4680      	mov	r8, r0
 8026abe:	b158      	cbz	r0, 8026ad8 <_dtoa_r+0xe8>
 8026ac0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8026ac2:	2301      	movs	r3, #1
 8026ac4:	6013      	str	r3, [r2, #0]
 8026ac6:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8026ac8:	2b00      	cmp	r3, #0
 8026aca:	f000 8551 	beq.w	8027570 <_dtoa_r+0xb80>
 8026ace:	488b      	ldr	r0, [pc, #556]	; (8026cfc <_dtoa_r+0x30c>)
 8026ad0:	6018      	str	r0, [r3, #0]
 8026ad2:	1e43      	subs	r3, r0, #1
 8026ad4:	9300      	str	r3, [sp, #0]
 8026ad6:	e7dd      	b.n	8026a94 <_dtoa_r+0xa4>
 8026ad8:	ed9d 0b0a 	vldr	d0, [sp, #40]	; 0x28
 8026adc:	aa12      	add	r2, sp, #72	; 0x48
 8026ade:	a913      	add	r1, sp, #76	; 0x4c
 8026ae0:	4620      	mov	r0, r4
 8026ae2:	f001 fcef 	bl	80284c4 <__d2b>
 8026ae6:	f3c9 550a 	ubfx	r5, r9, #20, #11
 8026aea:	4683      	mov	fp, r0
 8026aec:	2d00      	cmp	r5, #0
 8026aee:	d07c      	beq.n	8026bea <_dtoa_r+0x1fa>
 8026af0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8026af2:	f8cd 8040 	str.w	r8, [sp, #64]	; 0x40
 8026af6:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8026afa:	e9dd 670a 	ldrd	r6, r7, [sp, #40]	; 0x28
 8026afe:	f043 577f 	orr.w	r7, r3, #1069547520	; 0x3fc00000
 8026b02:	f447 1740 	orr.w	r7, r7, #3145728	; 0x300000
 8026b06:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 8026b0a:	4b7d      	ldr	r3, [pc, #500]	; (8026d00 <_dtoa_r+0x310>)
 8026b0c:	2200      	movs	r2, #0
 8026b0e:	4630      	mov	r0, r6
 8026b10:	4639      	mov	r1, r7
 8026b12:	f7d9 fbd9 	bl	80002c8 <__aeabi_dsub>
 8026b16:	a36e      	add	r3, pc, #440	; (adr r3, 8026cd0 <_dtoa_r+0x2e0>)
 8026b18:	e9d3 2300 	ldrd	r2, r3, [r3]
 8026b1c:	f7d9 fd8c 	bl	8000638 <__aeabi_dmul>
 8026b20:	a36d      	add	r3, pc, #436	; (adr r3, 8026cd8 <_dtoa_r+0x2e8>)
 8026b22:	e9d3 2300 	ldrd	r2, r3, [r3]
 8026b26:	f7d9 fbd1 	bl	80002cc <__adddf3>
 8026b2a:	4606      	mov	r6, r0
 8026b2c:	4628      	mov	r0, r5
 8026b2e:	460f      	mov	r7, r1
 8026b30:	f7d9 fd18 	bl	8000564 <__aeabi_i2d>
 8026b34:	a36a      	add	r3, pc, #424	; (adr r3, 8026ce0 <_dtoa_r+0x2f0>)
 8026b36:	e9d3 2300 	ldrd	r2, r3, [r3]
 8026b3a:	f7d9 fd7d 	bl	8000638 <__aeabi_dmul>
 8026b3e:	4602      	mov	r2, r0
 8026b40:	460b      	mov	r3, r1
 8026b42:	4630      	mov	r0, r6
 8026b44:	4639      	mov	r1, r7
 8026b46:	f7d9 fbc1 	bl	80002cc <__adddf3>
 8026b4a:	4606      	mov	r6, r0
 8026b4c:	460f      	mov	r7, r1
 8026b4e:	f7da f823 	bl	8000b98 <__aeabi_d2iz>
 8026b52:	2200      	movs	r2, #0
 8026b54:	4682      	mov	sl, r0
 8026b56:	2300      	movs	r3, #0
 8026b58:	4630      	mov	r0, r6
 8026b5a:	4639      	mov	r1, r7
 8026b5c:	f7d9 ffde 	bl	8000b1c <__aeabi_dcmplt>
 8026b60:	b148      	cbz	r0, 8026b76 <_dtoa_r+0x186>
 8026b62:	4650      	mov	r0, sl
 8026b64:	f7d9 fcfe 	bl	8000564 <__aeabi_i2d>
 8026b68:	4632      	mov	r2, r6
 8026b6a:	463b      	mov	r3, r7
 8026b6c:	f7d9 ffcc 	bl	8000b08 <__aeabi_dcmpeq>
 8026b70:	b908      	cbnz	r0, 8026b76 <_dtoa_r+0x186>
 8026b72:	f10a 3aff 	add.w	sl, sl, #4294967295
 8026b76:	f1ba 0f16 	cmp.w	sl, #22
 8026b7a:	d854      	bhi.n	8026c26 <_dtoa_r+0x236>
 8026b7c:	4b61      	ldr	r3, [pc, #388]	; (8026d04 <_dtoa_r+0x314>)
 8026b7e:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
 8026b82:	e9d3 2300 	ldrd	r2, r3, [r3]
 8026b86:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8026b8a:	f7d9 ffc7 	bl	8000b1c <__aeabi_dcmplt>
 8026b8e:	2800      	cmp	r0, #0
 8026b90:	d04b      	beq.n	8026c2a <_dtoa_r+0x23a>
 8026b92:	f10a 3aff 	add.w	sl, sl, #4294967295
 8026b96:	2300      	movs	r3, #0
 8026b98:	930e      	str	r3, [sp, #56]	; 0x38
 8026b9a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8026b9c:	1b5d      	subs	r5, r3, r5
 8026b9e:	1e6b      	subs	r3, r5, #1
 8026ba0:	9304      	str	r3, [sp, #16]
 8026ba2:	bf43      	ittte	mi
 8026ba4:	2300      	movmi	r3, #0
 8026ba6:	f1c5 0801 	rsbmi	r8, r5, #1
 8026baa:	9304      	strmi	r3, [sp, #16]
 8026bac:	f04f 0800 	movpl.w	r8, #0
 8026bb0:	f1ba 0f00 	cmp.w	sl, #0
 8026bb4:	db3b      	blt.n	8026c2e <_dtoa_r+0x23e>
 8026bb6:	9b04      	ldr	r3, [sp, #16]
 8026bb8:	f8cd a034 	str.w	sl, [sp, #52]	; 0x34
 8026bbc:	4453      	add	r3, sl
 8026bbe:	9304      	str	r3, [sp, #16]
 8026bc0:	2300      	movs	r3, #0
 8026bc2:	9306      	str	r3, [sp, #24]
 8026bc4:	9b05      	ldr	r3, [sp, #20]
 8026bc6:	2b09      	cmp	r3, #9
 8026bc8:	d869      	bhi.n	8026c9e <_dtoa_r+0x2ae>
 8026bca:	2b05      	cmp	r3, #5
 8026bcc:	bfc4      	itt	gt
 8026bce:	3b04      	subgt	r3, #4
 8026bd0:	9305      	strgt	r3, [sp, #20]
 8026bd2:	9b05      	ldr	r3, [sp, #20]
 8026bd4:	f1a3 0302 	sub.w	r3, r3, #2
 8026bd8:	bfcc      	ite	gt
 8026bda:	2500      	movgt	r5, #0
 8026bdc:	2501      	movle	r5, #1
 8026bde:	2b03      	cmp	r3, #3
 8026be0:	d869      	bhi.n	8026cb6 <_dtoa_r+0x2c6>
 8026be2:	e8df f003 	tbb	[pc, r3]
 8026be6:	4e2c      	.short	0x4e2c
 8026be8:	5a4c      	.short	0x5a4c
 8026bea:	e9dd 5312 	ldrd	r5, r3, [sp, #72]	; 0x48
 8026bee:	441d      	add	r5, r3
 8026bf0:	f205 4332 	addw	r3, r5, #1074	; 0x432
 8026bf4:	2b20      	cmp	r3, #32
 8026bf6:	bfc1      	itttt	gt
 8026bf8:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 8026bfc:	f205 4012 	addwgt	r0, r5, #1042	; 0x412
 8026c00:	fa09 f303 	lslgt.w	r3, r9, r3
 8026c04:	fa26 f000 	lsrgt.w	r0, r6, r0
 8026c08:	bfda      	itte	le
 8026c0a:	f1c3 0320 	rsble	r3, r3, #32
 8026c0e:	fa06 f003 	lslle.w	r0, r6, r3
 8026c12:	4318      	orrgt	r0, r3
 8026c14:	f7d9 fc96 	bl	8000544 <__aeabi_ui2d>
 8026c18:	2301      	movs	r3, #1
 8026c1a:	4606      	mov	r6, r0
 8026c1c:	f1a1 77f8 	sub.w	r7, r1, #32505856	; 0x1f00000
 8026c20:	3d01      	subs	r5, #1
 8026c22:	9310      	str	r3, [sp, #64]	; 0x40
 8026c24:	e771      	b.n	8026b0a <_dtoa_r+0x11a>
 8026c26:	2301      	movs	r3, #1
 8026c28:	e7b6      	b.n	8026b98 <_dtoa_r+0x1a8>
 8026c2a:	900e      	str	r0, [sp, #56]	; 0x38
 8026c2c:	e7b5      	b.n	8026b9a <_dtoa_r+0x1aa>
 8026c2e:	f1ca 0300 	rsb	r3, sl, #0
 8026c32:	9306      	str	r3, [sp, #24]
 8026c34:	2300      	movs	r3, #0
 8026c36:	eba8 080a 	sub.w	r8, r8, sl
 8026c3a:	930d      	str	r3, [sp, #52]	; 0x34
 8026c3c:	e7c2      	b.n	8026bc4 <_dtoa_r+0x1d4>
 8026c3e:	2300      	movs	r3, #0
 8026c40:	9308      	str	r3, [sp, #32]
 8026c42:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026c44:	2b00      	cmp	r3, #0
 8026c46:	dc39      	bgt.n	8026cbc <_dtoa_r+0x2cc>
 8026c48:	f04f 0901 	mov.w	r9, #1
 8026c4c:	f8cd 9004 	str.w	r9, [sp, #4]
 8026c50:	464b      	mov	r3, r9
 8026c52:	f8cd 9024 	str.w	r9, [sp, #36]	; 0x24
 8026c56:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8026c58:	2200      	movs	r2, #0
 8026c5a:	6042      	str	r2, [r0, #4]
 8026c5c:	2204      	movs	r2, #4
 8026c5e:	f102 0614 	add.w	r6, r2, #20
 8026c62:	429e      	cmp	r6, r3
 8026c64:	6841      	ldr	r1, [r0, #4]
 8026c66:	d92f      	bls.n	8026cc8 <_dtoa_r+0x2d8>
 8026c68:	4620      	mov	r0, r4
 8026c6a:	f001 f843 	bl	8027cf4 <_Balloc>
 8026c6e:	9000      	str	r0, [sp, #0]
 8026c70:	2800      	cmp	r0, #0
 8026c72:	d14b      	bne.n	8026d0c <_dtoa_r+0x31c>
 8026c74:	4b24      	ldr	r3, [pc, #144]	; (8026d08 <_dtoa_r+0x318>)
 8026c76:	4602      	mov	r2, r0
 8026c78:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
 8026c7c:	e6d1      	b.n	8026a22 <_dtoa_r+0x32>
 8026c7e:	2301      	movs	r3, #1
 8026c80:	e7de      	b.n	8026c40 <_dtoa_r+0x250>
 8026c82:	2300      	movs	r3, #0
 8026c84:	9308      	str	r3, [sp, #32]
 8026c86:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026c88:	eb0a 0903 	add.w	r9, sl, r3
 8026c8c:	f109 0301 	add.w	r3, r9, #1
 8026c90:	2b01      	cmp	r3, #1
 8026c92:	9301      	str	r3, [sp, #4]
 8026c94:	bfb8      	it	lt
 8026c96:	2301      	movlt	r3, #1
 8026c98:	e7dd      	b.n	8026c56 <_dtoa_r+0x266>
 8026c9a:	2301      	movs	r3, #1
 8026c9c:	e7f2      	b.n	8026c84 <_dtoa_r+0x294>
 8026c9e:	2501      	movs	r5, #1
 8026ca0:	2300      	movs	r3, #0
 8026ca2:	9305      	str	r3, [sp, #20]
 8026ca4:	9508      	str	r5, [sp, #32]
 8026ca6:	f04f 39ff 	mov.w	r9, #4294967295
 8026caa:	2200      	movs	r2, #0
 8026cac:	f8cd 9004 	str.w	r9, [sp, #4]
 8026cb0:	2312      	movs	r3, #18
 8026cb2:	9209      	str	r2, [sp, #36]	; 0x24
 8026cb4:	e7cf      	b.n	8026c56 <_dtoa_r+0x266>
 8026cb6:	2301      	movs	r3, #1
 8026cb8:	9308      	str	r3, [sp, #32]
 8026cba:	e7f4      	b.n	8026ca6 <_dtoa_r+0x2b6>
 8026cbc:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 8026cc0:	f8cd 9004 	str.w	r9, [sp, #4]
 8026cc4:	464b      	mov	r3, r9
 8026cc6:	e7c6      	b.n	8026c56 <_dtoa_r+0x266>
 8026cc8:	3101      	adds	r1, #1
 8026cca:	6041      	str	r1, [r0, #4]
 8026ccc:	0052      	lsls	r2, r2, #1
 8026cce:	e7c6      	b.n	8026c5e <_dtoa_r+0x26e>
 8026cd0:	636f4361 	.word	0x636f4361
 8026cd4:	3fd287a7 	.word	0x3fd287a7
 8026cd8:	8b60c8b3 	.word	0x8b60c8b3
 8026cdc:	3fc68a28 	.word	0x3fc68a28
 8026ce0:	509f79fb 	.word	0x509f79fb
 8026ce4:	3fd34413 	.word	0x3fd34413
 8026ce8:	0802a4ee 	.word	0x0802a4ee
 8026cec:	0802a505 	.word	0x0802a505
 8026cf0:	7ff00000 	.word	0x7ff00000
 8026cf4:	0802a4ea 	.word	0x0802a4ea
 8026cf8:	0802a4e1 	.word	0x0802a4e1
 8026cfc:	0802a36d 	.word	0x0802a36d
 8026d00:	3ff80000 	.word	0x3ff80000
 8026d04:	0802a680 	.word	0x0802a680
 8026d08:	0802a564 	.word	0x0802a564
 8026d0c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8026d0e:	9a00      	ldr	r2, [sp, #0]
 8026d10:	601a      	str	r2, [r3, #0]
 8026d12:	9b01      	ldr	r3, [sp, #4]
 8026d14:	2b0e      	cmp	r3, #14
 8026d16:	f200 80ad 	bhi.w	8026e74 <_dtoa_r+0x484>
 8026d1a:	2d00      	cmp	r5, #0
 8026d1c:	f000 80aa 	beq.w	8026e74 <_dtoa_r+0x484>
 8026d20:	f1ba 0f00 	cmp.w	sl, #0
 8026d24:	dd36      	ble.n	8026d94 <_dtoa_r+0x3a4>
 8026d26:	4ac3      	ldr	r2, [pc, #780]	; (8027034 <_dtoa_r+0x644>)
 8026d28:	f00a 030f 	and.w	r3, sl, #15
 8026d2c:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 8026d30:	ed93 7b00 	vldr	d7, [r3]
 8026d34:	f41a 7f80 	tst.w	sl, #256	; 0x100
 8026d38:	ea4f 172a 	mov.w	r7, sl, asr #4
 8026d3c:	eeb0 8a47 	vmov.f32	s16, s14
 8026d40:	eef0 8a67 	vmov.f32	s17, s15
 8026d44:	d016      	beq.n	8026d74 <_dtoa_r+0x384>
 8026d46:	4bbc      	ldr	r3, [pc, #752]	; (8027038 <_dtoa_r+0x648>)
 8026d48:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8026d4c:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8026d50:	f7d9 fd9c 	bl	800088c <__aeabi_ddiv>
 8026d54:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8026d58:	f007 070f 	and.w	r7, r7, #15
 8026d5c:	2503      	movs	r5, #3
 8026d5e:	4eb6      	ldr	r6, [pc, #728]	; (8027038 <_dtoa_r+0x648>)
 8026d60:	b957      	cbnz	r7, 8026d78 <_dtoa_r+0x388>
 8026d62:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8026d66:	ec53 2b18 	vmov	r2, r3, d8
 8026d6a:	f7d9 fd8f 	bl	800088c <__aeabi_ddiv>
 8026d6e:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8026d72:	e029      	b.n	8026dc8 <_dtoa_r+0x3d8>
 8026d74:	2502      	movs	r5, #2
 8026d76:	e7f2      	b.n	8026d5e <_dtoa_r+0x36e>
 8026d78:	07f9      	lsls	r1, r7, #31
 8026d7a:	d508      	bpl.n	8026d8e <_dtoa_r+0x39e>
 8026d7c:	ec51 0b18 	vmov	r0, r1, d8
 8026d80:	e9d6 2300 	ldrd	r2, r3, [r6]
 8026d84:	f7d9 fc58 	bl	8000638 <__aeabi_dmul>
 8026d88:	ec41 0b18 	vmov	d8, r0, r1
 8026d8c:	3501      	adds	r5, #1
 8026d8e:	107f      	asrs	r7, r7, #1
 8026d90:	3608      	adds	r6, #8
 8026d92:	e7e5      	b.n	8026d60 <_dtoa_r+0x370>
 8026d94:	f000 80a6 	beq.w	8026ee4 <_dtoa_r+0x4f4>
 8026d98:	f1ca 0600 	rsb	r6, sl, #0
 8026d9c:	4ba5      	ldr	r3, [pc, #660]	; (8027034 <_dtoa_r+0x644>)
 8026d9e:	4fa6      	ldr	r7, [pc, #664]	; (8027038 <_dtoa_r+0x648>)
 8026da0:	f006 020f 	and.w	r2, r6, #15
 8026da4:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8026da8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8026dac:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8026db0:	f7d9 fc42 	bl	8000638 <__aeabi_dmul>
 8026db4:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8026db8:	1136      	asrs	r6, r6, #4
 8026dba:	2300      	movs	r3, #0
 8026dbc:	2502      	movs	r5, #2
 8026dbe:	2e00      	cmp	r6, #0
 8026dc0:	f040 8085 	bne.w	8026ece <_dtoa_r+0x4de>
 8026dc4:	2b00      	cmp	r3, #0
 8026dc6:	d1d2      	bne.n	8026d6e <_dtoa_r+0x37e>
 8026dc8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8026dca:	2b00      	cmp	r3, #0
 8026dcc:	f000 808c 	beq.w	8026ee8 <_dtoa_r+0x4f8>
 8026dd0:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 8026dd4:	4b99      	ldr	r3, [pc, #612]	; (802703c <_dtoa_r+0x64c>)
 8026dd6:	2200      	movs	r2, #0
 8026dd8:	4630      	mov	r0, r6
 8026dda:	4639      	mov	r1, r7
 8026ddc:	f7d9 fe9e 	bl	8000b1c <__aeabi_dcmplt>
 8026de0:	2800      	cmp	r0, #0
 8026de2:	f000 8081 	beq.w	8026ee8 <_dtoa_r+0x4f8>
 8026de6:	9b01      	ldr	r3, [sp, #4]
 8026de8:	2b00      	cmp	r3, #0
 8026dea:	d07d      	beq.n	8026ee8 <_dtoa_r+0x4f8>
 8026dec:	f1b9 0f00 	cmp.w	r9, #0
 8026df0:	dd3c      	ble.n	8026e6c <_dtoa_r+0x47c>
 8026df2:	f10a 33ff 	add.w	r3, sl, #4294967295
 8026df6:	9307      	str	r3, [sp, #28]
 8026df8:	2200      	movs	r2, #0
 8026dfa:	4b91      	ldr	r3, [pc, #580]	; (8027040 <_dtoa_r+0x650>)
 8026dfc:	4630      	mov	r0, r6
 8026dfe:	4639      	mov	r1, r7
 8026e00:	f7d9 fc1a 	bl	8000638 <__aeabi_dmul>
 8026e04:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8026e08:	3501      	adds	r5, #1
 8026e0a:	f8cd 9030 	str.w	r9, [sp, #48]	; 0x30
 8026e0e:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 8026e12:	4628      	mov	r0, r5
 8026e14:	f7d9 fba6 	bl	8000564 <__aeabi_i2d>
 8026e18:	4632      	mov	r2, r6
 8026e1a:	463b      	mov	r3, r7
 8026e1c:	f7d9 fc0c 	bl	8000638 <__aeabi_dmul>
 8026e20:	4b88      	ldr	r3, [pc, #544]	; (8027044 <_dtoa_r+0x654>)
 8026e22:	2200      	movs	r2, #0
 8026e24:	f7d9 fa52 	bl	80002cc <__adddf3>
 8026e28:	f1a1 7350 	sub.w	r3, r1, #54525952	; 0x3400000
 8026e2c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8026e30:	9303      	str	r3, [sp, #12]
 8026e32:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8026e34:	2b00      	cmp	r3, #0
 8026e36:	d15c      	bne.n	8026ef2 <_dtoa_r+0x502>
 8026e38:	4b83      	ldr	r3, [pc, #524]	; (8027048 <_dtoa_r+0x658>)
 8026e3a:	2200      	movs	r2, #0
 8026e3c:	4630      	mov	r0, r6
 8026e3e:	4639      	mov	r1, r7
 8026e40:	f7d9 fa42 	bl	80002c8 <__aeabi_dsub>
 8026e44:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8026e48:	4606      	mov	r6, r0
 8026e4a:	460f      	mov	r7, r1
 8026e4c:	f7d9 fe84 	bl	8000b58 <__aeabi_dcmpgt>
 8026e50:	2800      	cmp	r0, #0
 8026e52:	f040 8296 	bne.w	8027382 <_dtoa_r+0x992>
 8026e56:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 8026e5a:	4630      	mov	r0, r6
 8026e5c:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8026e60:	4639      	mov	r1, r7
 8026e62:	f7d9 fe5b 	bl	8000b1c <__aeabi_dcmplt>
 8026e66:	2800      	cmp	r0, #0
 8026e68:	f040 8288 	bne.w	802737c <_dtoa_r+0x98c>
 8026e6c:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8026e70:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8026e74:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8026e76:	2b00      	cmp	r3, #0
 8026e78:	f2c0 8158 	blt.w	802712c <_dtoa_r+0x73c>
 8026e7c:	f1ba 0f0e 	cmp.w	sl, #14
 8026e80:	f300 8154 	bgt.w	802712c <_dtoa_r+0x73c>
 8026e84:	4b6b      	ldr	r3, [pc, #428]	; (8027034 <_dtoa_r+0x644>)
 8026e86:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
 8026e8a:	e9d3 8900 	ldrd	r8, r9, [r3]
 8026e8e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026e90:	2b00      	cmp	r3, #0
 8026e92:	f280 80e3 	bge.w	802705c <_dtoa_r+0x66c>
 8026e96:	9b01      	ldr	r3, [sp, #4]
 8026e98:	2b00      	cmp	r3, #0
 8026e9a:	f300 80df 	bgt.w	802705c <_dtoa_r+0x66c>
 8026e9e:	f040 826d 	bne.w	802737c <_dtoa_r+0x98c>
 8026ea2:	4b69      	ldr	r3, [pc, #420]	; (8027048 <_dtoa_r+0x658>)
 8026ea4:	2200      	movs	r2, #0
 8026ea6:	4640      	mov	r0, r8
 8026ea8:	4649      	mov	r1, r9
 8026eaa:	f7d9 fbc5 	bl	8000638 <__aeabi_dmul>
 8026eae:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8026eb2:	f7d9 fe47 	bl	8000b44 <__aeabi_dcmpge>
 8026eb6:	9e01      	ldr	r6, [sp, #4]
 8026eb8:	4637      	mov	r7, r6
 8026eba:	2800      	cmp	r0, #0
 8026ebc:	f040 8243 	bne.w	8027346 <_dtoa_r+0x956>
 8026ec0:	9d00      	ldr	r5, [sp, #0]
 8026ec2:	2331      	movs	r3, #49	; 0x31
 8026ec4:	f805 3b01 	strb.w	r3, [r5], #1
 8026ec8:	f10a 0a01 	add.w	sl, sl, #1
 8026ecc:	e23f      	b.n	802734e <_dtoa_r+0x95e>
 8026ece:	07f2      	lsls	r2, r6, #31
 8026ed0:	d505      	bpl.n	8026ede <_dtoa_r+0x4ee>
 8026ed2:	e9d7 2300 	ldrd	r2, r3, [r7]
 8026ed6:	f7d9 fbaf 	bl	8000638 <__aeabi_dmul>
 8026eda:	3501      	adds	r5, #1
 8026edc:	2301      	movs	r3, #1
 8026ede:	1076      	asrs	r6, r6, #1
 8026ee0:	3708      	adds	r7, #8
 8026ee2:	e76c      	b.n	8026dbe <_dtoa_r+0x3ce>
 8026ee4:	2502      	movs	r5, #2
 8026ee6:	e76f      	b.n	8026dc8 <_dtoa_r+0x3d8>
 8026ee8:	9b01      	ldr	r3, [sp, #4]
 8026eea:	f8cd a01c 	str.w	sl, [sp, #28]
 8026eee:	930c      	str	r3, [sp, #48]	; 0x30
 8026ef0:	e78d      	b.n	8026e0e <_dtoa_r+0x41e>
 8026ef2:	9900      	ldr	r1, [sp, #0]
 8026ef4:	980c      	ldr	r0, [sp, #48]	; 0x30
 8026ef6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8026ef8:	4b4e      	ldr	r3, [pc, #312]	; (8027034 <_dtoa_r+0x644>)
 8026efa:	ed9d 7b02 	vldr	d7, [sp, #8]
 8026efe:	4401      	add	r1, r0
 8026f00:	9102      	str	r1, [sp, #8]
 8026f02:	9908      	ldr	r1, [sp, #32]
 8026f04:	eeb0 8a47 	vmov.f32	s16, s14
 8026f08:	eef0 8a67 	vmov.f32	s17, s15
 8026f0c:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8026f10:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8026f14:	2900      	cmp	r1, #0
 8026f16:	d045      	beq.n	8026fa4 <_dtoa_r+0x5b4>
 8026f18:	494c      	ldr	r1, [pc, #304]	; (802704c <_dtoa_r+0x65c>)
 8026f1a:	2000      	movs	r0, #0
 8026f1c:	f7d9 fcb6 	bl	800088c <__aeabi_ddiv>
 8026f20:	ec53 2b18 	vmov	r2, r3, d8
 8026f24:	f7d9 f9d0 	bl	80002c8 <__aeabi_dsub>
 8026f28:	9d00      	ldr	r5, [sp, #0]
 8026f2a:	ec41 0b18 	vmov	d8, r0, r1
 8026f2e:	4639      	mov	r1, r7
 8026f30:	4630      	mov	r0, r6
 8026f32:	f7d9 fe31 	bl	8000b98 <__aeabi_d2iz>
 8026f36:	900c      	str	r0, [sp, #48]	; 0x30
 8026f38:	f7d9 fb14 	bl	8000564 <__aeabi_i2d>
 8026f3c:	4602      	mov	r2, r0
 8026f3e:	460b      	mov	r3, r1
 8026f40:	4630      	mov	r0, r6
 8026f42:	4639      	mov	r1, r7
 8026f44:	f7d9 f9c0 	bl	80002c8 <__aeabi_dsub>
 8026f48:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8026f4a:	3330      	adds	r3, #48	; 0x30
 8026f4c:	f805 3b01 	strb.w	r3, [r5], #1
 8026f50:	ec53 2b18 	vmov	r2, r3, d8
 8026f54:	4606      	mov	r6, r0
 8026f56:	460f      	mov	r7, r1
 8026f58:	f7d9 fde0 	bl	8000b1c <__aeabi_dcmplt>
 8026f5c:	2800      	cmp	r0, #0
 8026f5e:	d165      	bne.n	802702c <_dtoa_r+0x63c>
 8026f60:	4632      	mov	r2, r6
 8026f62:	463b      	mov	r3, r7
 8026f64:	4935      	ldr	r1, [pc, #212]	; (802703c <_dtoa_r+0x64c>)
 8026f66:	2000      	movs	r0, #0
 8026f68:	f7d9 f9ae 	bl	80002c8 <__aeabi_dsub>
 8026f6c:	ec53 2b18 	vmov	r2, r3, d8
 8026f70:	f7d9 fdd4 	bl	8000b1c <__aeabi_dcmplt>
 8026f74:	2800      	cmp	r0, #0
 8026f76:	f040 80b9 	bne.w	80270ec <_dtoa_r+0x6fc>
 8026f7a:	9b02      	ldr	r3, [sp, #8]
 8026f7c:	429d      	cmp	r5, r3
 8026f7e:	f43f af75 	beq.w	8026e6c <_dtoa_r+0x47c>
 8026f82:	4b2f      	ldr	r3, [pc, #188]	; (8027040 <_dtoa_r+0x650>)
 8026f84:	ec51 0b18 	vmov	r0, r1, d8
 8026f88:	2200      	movs	r2, #0
 8026f8a:	f7d9 fb55 	bl	8000638 <__aeabi_dmul>
 8026f8e:	4b2c      	ldr	r3, [pc, #176]	; (8027040 <_dtoa_r+0x650>)
 8026f90:	ec41 0b18 	vmov	d8, r0, r1
 8026f94:	2200      	movs	r2, #0
 8026f96:	4630      	mov	r0, r6
 8026f98:	4639      	mov	r1, r7
 8026f9a:	f7d9 fb4d 	bl	8000638 <__aeabi_dmul>
 8026f9e:	4606      	mov	r6, r0
 8026fa0:	460f      	mov	r7, r1
 8026fa2:	e7c4      	b.n	8026f2e <_dtoa_r+0x53e>
 8026fa4:	ec51 0b17 	vmov	r0, r1, d7
 8026fa8:	f7d9 fb46 	bl	8000638 <__aeabi_dmul>
 8026fac:	9b02      	ldr	r3, [sp, #8]
 8026fae:	9d00      	ldr	r5, [sp, #0]
 8026fb0:	930c      	str	r3, [sp, #48]	; 0x30
 8026fb2:	ec41 0b18 	vmov	d8, r0, r1
 8026fb6:	4639      	mov	r1, r7
 8026fb8:	4630      	mov	r0, r6
 8026fba:	f7d9 fded 	bl	8000b98 <__aeabi_d2iz>
 8026fbe:	9011      	str	r0, [sp, #68]	; 0x44
 8026fc0:	f7d9 fad0 	bl	8000564 <__aeabi_i2d>
 8026fc4:	4602      	mov	r2, r0
 8026fc6:	460b      	mov	r3, r1
 8026fc8:	4630      	mov	r0, r6
 8026fca:	4639      	mov	r1, r7
 8026fcc:	f7d9 f97c 	bl	80002c8 <__aeabi_dsub>
 8026fd0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8026fd2:	3330      	adds	r3, #48	; 0x30
 8026fd4:	f805 3b01 	strb.w	r3, [r5], #1
 8026fd8:	9b02      	ldr	r3, [sp, #8]
 8026fda:	429d      	cmp	r5, r3
 8026fdc:	4606      	mov	r6, r0
 8026fde:	460f      	mov	r7, r1
 8026fe0:	f04f 0200 	mov.w	r2, #0
 8026fe4:	d134      	bne.n	8027050 <_dtoa_r+0x660>
 8026fe6:	4b19      	ldr	r3, [pc, #100]	; (802704c <_dtoa_r+0x65c>)
 8026fe8:	ec51 0b18 	vmov	r0, r1, d8
 8026fec:	f7d9 f96e 	bl	80002cc <__adddf3>
 8026ff0:	4602      	mov	r2, r0
 8026ff2:	460b      	mov	r3, r1
 8026ff4:	4630      	mov	r0, r6
 8026ff6:	4639      	mov	r1, r7
 8026ff8:	f7d9 fdae 	bl	8000b58 <__aeabi_dcmpgt>
 8026ffc:	2800      	cmp	r0, #0
 8026ffe:	d175      	bne.n	80270ec <_dtoa_r+0x6fc>
 8027000:	ec53 2b18 	vmov	r2, r3, d8
 8027004:	4911      	ldr	r1, [pc, #68]	; (802704c <_dtoa_r+0x65c>)
 8027006:	2000      	movs	r0, #0
 8027008:	f7d9 f95e 	bl	80002c8 <__aeabi_dsub>
 802700c:	4602      	mov	r2, r0
 802700e:	460b      	mov	r3, r1
 8027010:	4630      	mov	r0, r6
 8027012:	4639      	mov	r1, r7
 8027014:	f7d9 fd82 	bl	8000b1c <__aeabi_dcmplt>
 8027018:	2800      	cmp	r0, #0
 802701a:	f43f af27 	beq.w	8026e6c <_dtoa_r+0x47c>
 802701e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8027020:	1e6b      	subs	r3, r5, #1
 8027022:	930c      	str	r3, [sp, #48]	; 0x30
 8027024:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8027028:	2b30      	cmp	r3, #48	; 0x30
 802702a:	d0f8      	beq.n	802701e <_dtoa_r+0x62e>
 802702c:	f8dd a01c 	ldr.w	sl, [sp, #28]
 8027030:	e04a      	b.n	80270c8 <_dtoa_r+0x6d8>
 8027032:	bf00      	nop
 8027034:	0802a680 	.word	0x0802a680
 8027038:	0802a658 	.word	0x0802a658
 802703c:	3ff00000 	.word	0x3ff00000
 8027040:	40240000 	.word	0x40240000
 8027044:	401c0000 	.word	0x401c0000
 8027048:	40140000 	.word	0x40140000
 802704c:	3fe00000 	.word	0x3fe00000
 8027050:	4baf      	ldr	r3, [pc, #700]	; (8027310 <_dtoa_r+0x920>)
 8027052:	f7d9 faf1 	bl	8000638 <__aeabi_dmul>
 8027056:	4606      	mov	r6, r0
 8027058:	460f      	mov	r7, r1
 802705a:	e7ac      	b.n	8026fb6 <_dtoa_r+0x5c6>
 802705c:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 8027060:	9d00      	ldr	r5, [sp, #0]
 8027062:	4642      	mov	r2, r8
 8027064:	464b      	mov	r3, r9
 8027066:	4630      	mov	r0, r6
 8027068:	4639      	mov	r1, r7
 802706a:	f7d9 fc0f 	bl	800088c <__aeabi_ddiv>
 802706e:	f7d9 fd93 	bl	8000b98 <__aeabi_d2iz>
 8027072:	9002      	str	r0, [sp, #8]
 8027074:	f7d9 fa76 	bl	8000564 <__aeabi_i2d>
 8027078:	4642      	mov	r2, r8
 802707a:	464b      	mov	r3, r9
 802707c:	f7d9 fadc 	bl	8000638 <__aeabi_dmul>
 8027080:	4602      	mov	r2, r0
 8027082:	460b      	mov	r3, r1
 8027084:	4630      	mov	r0, r6
 8027086:	4639      	mov	r1, r7
 8027088:	f7d9 f91e 	bl	80002c8 <__aeabi_dsub>
 802708c:	9e02      	ldr	r6, [sp, #8]
 802708e:	9f01      	ldr	r7, [sp, #4]
 8027090:	3630      	adds	r6, #48	; 0x30
 8027092:	f805 6b01 	strb.w	r6, [r5], #1
 8027096:	9e00      	ldr	r6, [sp, #0]
 8027098:	1bae      	subs	r6, r5, r6
 802709a:	42b7      	cmp	r7, r6
 802709c:	4602      	mov	r2, r0
 802709e:	460b      	mov	r3, r1
 80270a0:	d137      	bne.n	8027112 <_dtoa_r+0x722>
 80270a2:	f7d9 f913 	bl	80002cc <__adddf3>
 80270a6:	4642      	mov	r2, r8
 80270a8:	464b      	mov	r3, r9
 80270aa:	4606      	mov	r6, r0
 80270ac:	460f      	mov	r7, r1
 80270ae:	f7d9 fd53 	bl	8000b58 <__aeabi_dcmpgt>
 80270b2:	b9c8      	cbnz	r0, 80270e8 <_dtoa_r+0x6f8>
 80270b4:	4642      	mov	r2, r8
 80270b6:	464b      	mov	r3, r9
 80270b8:	4630      	mov	r0, r6
 80270ba:	4639      	mov	r1, r7
 80270bc:	f7d9 fd24 	bl	8000b08 <__aeabi_dcmpeq>
 80270c0:	b110      	cbz	r0, 80270c8 <_dtoa_r+0x6d8>
 80270c2:	9b02      	ldr	r3, [sp, #8]
 80270c4:	07d9      	lsls	r1, r3, #31
 80270c6:	d40f      	bmi.n	80270e8 <_dtoa_r+0x6f8>
 80270c8:	4620      	mov	r0, r4
 80270ca:	4659      	mov	r1, fp
 80270cc:	f000 fe52 	bl	8027d74 <_Bfree>
 80270d0:	2300      	movs	r3, #0
 80270d2:	702b      	strb	r3, [r5, #0]
 80270d4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80270d6:	f10a 0001 	add.w	r0, sl, #1
 80270da:	6018      	str	r0, [r3, #0]
 80270dc:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80270de:	2b00      	cmp	r3, #0
 80270e0:	f43f acd8 	beq.w	8026a94 <_dtoa_r+0xa4>
 80270e4:	601d      	str	r5, [r3, #0]
 80270e6:	e4d5      	b.n	8026a94 <_dtoa_r+0xa4>
 80270e8:	f8cd a01c 	str.w	sl, [sp, #28]
 80270ec:	462b      	mov	r3, r5
 80270ee:	461d      	mov	r5, r3
 80270f0:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 80270f4:	2a39      	cmp	r2, #57	; 0x39
 80270f6:	d108      	bne.n	802710a <_dtoa_r+0x71a>
 80270f8:	9a00      	ldr	r2, [sp, #0]
 80270fa:	429a      	cmp	r2, r3
 80270fc:	d1f7      	bne.n	80270ee <_dtoa_r+0x6fe>
 80270fe:	9a07      	ldr	r2, [sp, #28]
 8027100:	9900      	ldr	r1, [sp, #0]
 8027102:	3201      	adds	r2, #1
 8027104:	9207      	str	r2, [sp, #28]
 8027106:	2230      	movs	r2, #48	; 0x30
 8027108:	700a      	strb	r2, [r1, #0]
 802710a:	781a      	ldrb	r2, [r3, #0]
 802710c:	3201      	adds	r2, #1
 802710e:	701a      	strb	r2, [r3, #0]
 8027110:	e78c      	b.n	802702c <_dtoa_r+0x63c>
 8027112:	4b7f      	ldr	r3, [pc, #508]	; (8027310 <_dtoa_r+0x920>)
 8027114:	2200      	movs	r2, #0
 8027116:	f7d9 fa8f 	bl	8000638 <__aeabi_dmul>
 802711a:	2200      	movs	r2, #0
 802711c:	2300      	movs	r3, #0
 802711e:	4606      	mov	r6, r0
 8027120:	460f      	mov	r7, r1
 8027122:	f7d9 fcf1 	bl	8000b08 <__aeabi_dcmpeq>
 8027126:	2800      	cmp	r0, #0
 8027128:	d09b      	beq.n	8027062 <_dtoa_r+0x672>
 802712a:	e7cd      	b.n	80270c8 <_dtoa_r+0x6d8>
 802712c:	9a08      	ldr	r2, [sp, #32]
 802712e:	2a00      	cmp	r2, #0
 8027130:	f000 80c4 	beq.w	80272bc <_dtoa_r+0x8cc>
 8027134:	9a05      	ldr	r2, [sp, #20]
 8027136:	2a01      	cmp	r2, #1
 8027138:	f300 80a8 	bgt.w	802728c <_dtoa_r+0x89c>
 802713c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 802713e:	2a00      	cmp	r2, #0
 8027140:	f000 80a0 	beq.w	8027284 <_dtoa_r+0x894>
 8027144:	f203 4333 	addw	r3, r3, #1075	; 0x433
 8027148:	9e06      	ldr	r6, [sp, #24]
 802714a:	4645      	mov	r5, r8
 802714c:	9a04      	ldr	r2, [sp, #16]
 802714e:	2101      	movs	r1, #1
 8027150:	441a      	add	r2, r3
 8027152:	4620      	mov	r0, r4
 8027154:	4498      	add	r8, r3
 8027156:	9204      	str	r2, [sp, #16]
 8027158:	f000 ff12 	bl	8027f80 <__i2b>
 802715c:	4607      	mov	r7, r0
 802715e:	2d00      	cmp	r5, #0
 8027160:	dd0b      	ble.n	802717a <_dtoa_r+0x78a>
 8027162:	9b04      	ldr	r3, [sp, #16]
 8027164:	2b00      	cmp	r3, #0
 8027166:	dd08      	ble.n	802717a <_dtoa_r+0x78a>
 8027168:	42ab      	cmp	r3, r5
 802716a:	9a04      	ldr	r2, [sp, #16]
 802716c:	bfa8      	it	ge
 802716e:	462b      	movge	r3, r5
 8027170:	eba8 0803 	sub.w	r8, r8, r3
 8027174:	1aed      	subs	r5, r5, r3
 8027176:	1ad3      	subs	r3, r2, r3
 8027178:	9304      	str	r3, [sp, #16]
 802717a:	9b06      	ldr	r3, [sp, #24]
 802717c:	b1fb      	cbz	r3, 80271be <_dtoa_r+0x7ce>
 802717e:	9b08      	ldr	r3, [sp, #32]
 8027180:	2b00      	cmp	r3, #0
 8027182:	f000 809f 	beq.w	80272c4 <_dtoa_r+0x8d4>
 8027186:	2e00      	cmp	r6, #0
 8027188:	dd11      	ble.n	80271ae <_dtoa_r+0x7be>
 802718a:	4639      	mov	r1, r7
 802718c:	4632      	mov	r2, r6
 802718e:	4620      	mov	r0, r4
 8027190:	f000 ffb2 	bl	80280f8 <__pow5mult>
 8027194:	465a      	mov	r2, fp
 8027196:	4601      	mov	r1, r0
 8027198:	4607      	mov	r7, r0
 802719a:	4620      	mov	r0, r4
 802719c:	f000 ff06 	bl	8027fac <__multiply>
 80271a0:	4659      	mov	r1, fp
 80271a2:	9007      	str	r0, [sp, #28]
 80271a4:	4620      	mov	r0, r4
 80271a6:	f000 fde5 	bl	8027d74 <_Bfree>
 80271aa:	9b07      	ldr	r3, [sp, #28]
 80271ac:	469b      	mov	fp, r3
 80271ae:	9b06      	ldr	r3, [sp, #24]
 80271b0:	1b9a      	subs	r2, r3, r6
 80271b2:	d004      	beq.n	80271be <_dtoa_r+0x7ce>
 80271b4:	4659      	mov	r1, fp
 80271b6:	4620      	mov	r0, r4
 80271b8:	f000 ff9e 	bl	80280f8 <__pow5mult>
 80271bc:	4683      	mov	fp, r0
 80271be:	2101      	movs	r1, #1
 80271c0:	4620      	mov	r0, r4
 80271c2:	f000 fedd 	bl	8027f80 <__i2b>
 80271c6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80271c8:	2b00      	cmp	r3, #0
 80271ca:	4606      	mov	r6, r0
 80271cc:	dd7c      	ble.n	80272c8 <_dtoa_r+0x8d8>
 80271ce:	461a      	mov	r2, r3
 80271d0:	4601      	mov	r1, r0
 80271d2:	4620      	mov	r0, r4
 80271d4:	f000 ff90 	bl	80280f8 <__pow5mult>
 80271d8:	9b05      	ldr	r3, [sp, #20]
 80271da:	2b01      	cmp	r3, #1
 80271dc:	4606      	mov	r6, r0
 80271de:	dd76      	ble.n	80272ce <_dtoa_r+0x8de>
 80271e0:	2300      	movs	r3, #0
 80271e2:	9306      	str	r3, [sp, #24]
 80271e4:	6933      	ldr	r3, [r6, #16]
 80271e6:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 80271ea:	6918      	ldr	r0, [r3, #16]
 80271ec:	f000 fe78 	bl	8027ee0 <__hi0bits>
 80271f0:	f1c0 0020 	rsb	r0, r0, #32
 80271f4:	9b04      	ldr	r3, [sp, #16]
 80271f6:	4418      	add	r0, r3
 80271f8:	f010 001f 	ands.w	r0, r0, #31
 80271fc:	f000 8086 	beq.w	802730c <_dtoa_r+0x91c>
 8027200:	f1c0 0320 	rsb	r3, r0, #32
 8027204:	2b04      	cmp	r3, #4
 8027206:	dd7f      	ble.n	8027308 <_dtoa_r+0x918>
 8027208:	f1c0 001c 	rsb	r0, r0, #28
 802720c:	9b04      	ldr	r3, [sp, #16]
 802720e:	4403      	add	r3, r0
 8027210:	4480      	add	r8, r0
 8027212:	4405      	add	r5, r0
 8027214:	9304      	str	r3, [sp, #16]
 8027216:	f1b8 0f00 	cmp.w	r8, #0
 802721a:	dd05      	ble.n	8027228 <_dtoa_r+0x838>
 802721c:	4659      	mov	r1, fp
 802721e:	4642      	mov	r2, r8
 8027220:	4620      	mov	r0, r4
 8027222:	f000 ffc3 	bl	80281ac <__lshift>
 8027226:	4683      	mov	fp, r0
 8027228:	9b04      	ldr	r3, [sp, #16]
 802722a:	2b00      	cmp	r3, #0
 802722c:	dd05      	ble.n	802723a <_dtoa_r+0x84a>
 802722e:	4631      	mov	r1, r6
 8027230:	461a      	mov	r2, r3
 8027232:	4620      	mov	r0, r4
 8027234:	f000 ffba 	bl	80281ac <__lshift>
 8027238:	4606      	mov	r6, r0
 802723a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802723c:	2b00      	cmp	r3, #0
 802723e:	d069      	beq.n	8027314 <_dtoa_r+0x924>
 8027240:	4631      	mov	r1, r6
 8027242:	4658      	mov	r0, fp
 8027244:	f001 f81e 	bl	8028284 <__mcmp>
 8027248:	2800      	cmp	r0, #0
 802724a:	da63      	bge.n	8027314 <_dtoa_r+0x924>
 802724c:	2300      	movs	r3, #0
 802724e:	4659      	mov	r1, fp
 8027250:	220a      	movs	r2, #10
 8027252:	4620      	mov	r0, r4
 8027254:	f000 fdb0 	bl	8027db8 <__multadd>
 8027258:	9b08      	ldr	r3, [sp, #32]
 802725a:	f10a 3aff 	add.w	sl, sl, #4294967295
 802725e:	4683      	mov	fp, r0
 8027260:	2b00      	cmp	r3, #0
 8027262:	f000 818f 	beq.w	8027584 <_dtoa_r+0xb94>
 8027266:	4639      	mov	r1, r7
 8027268:	2300      	movs	r3, #0
 802726a:	220a      	movs	r2, #10
 802726c:	4620      	mov	r0, r4
 802726e:	f000 fda3 	bl	8027db8 <__multadd>
 8027272:	f1b9 0f00 	cmp.w	r9, #0
 8027276:	4607      	mov	r7, r0
 8027278:	f300 808e 	bgt.w	8027398 <_dtoa_r+0x9a8>
 802727c:	9b05      	ldr	r3, [sp, #20]
 802727e:	2b02      	cmp	r3, #2
 8027280:	dc50      	bgt.n	8027324 <_dtoa_r+0x934>
 8027282:	e089      	b.n	8027398 <_dtoa_r+0x9a8>
 8027284:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8027286:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 802728a:	e75d      	b.n	8027148 <_dtoa_r+0x758>
 802728c:	9b01      	ldr	r3, [sp, #4]
 802728e:	1e5e      	subs	r6, r3, #1
 8027290:	9b06      	ldr	r3, [sp, #24]
 8027292:	42b3      	cmp	r3, r6
 8027294:	bfbf      	itttt	lt
 8027296:	9b06      	ldrlt	r3, [sp, #24]
 8027298:	9606      	strlt	r6, [sp, #24]
 802729a:	1af2      	sublt	r2, r6, r3
 802729c:	9b0d      	ldrlt	r3, [sp, #52]	; 0x34
 802729e:	bfb6      	itet	lt
 80272a0:	189b      	addlt	r3, r3, r2
 80272a2:	1b9e      	subge	r6, r3, r6
 80272a4:	930d      	strlt	r3, [sp, #52]	; 0x34
 80272a6:	9b01      	ldr	r3, [sp, #4]
 80272a8:	bfb8      	it	lt
 80272aa:	2600      	movlt	r6, #0
 80272ac:	2b00      	cmp	r3, #0
 80272ae:	bfb5      	itete	lt
 80272b0:	eba8 0503 	sublt.w	r5, r8, r3
 80272b4:	9b01      	ldrge	r3, [sp, #4]
 80272b6:	2300      	movlt	r3, #0
 80272b8:	4645      	movge	r5, r8
 80272ba:	e747      	b.n	802714c <_dtoa_r+0x75c>
 80272bc:	9e06      	ldr	r6, [sp, #24]
 80272be:	9f08      	ldr	r7, [sp, #32]
 80272c0:	4645      	mov	r5, r8
 80272c2:	e74c      	b.n	802715e <_dtoa_r+0x76e>
 80272c4:	9a06      	ldr	r2, [sp, #24]
 80272c6:	e775      	b.n	80271b4 <_dtoa_r+0x7c4>
 80272c8:	9b05      	ldr	r3, [sp, #20]
 80272ca:	2b01      	cmp	r3, #1
 80272cc:	dc18      	bgt.n	8027300 <_dtoa_r+0x910>
 80272ce:	9b02      	ldr	r3, [sp, #8]
 80272d0:	b9b3      	cbnz	r3, 8027300 <_dtoa_r+0x910>
 80272d2:	9b03      	ldr	r3, [sp, #12]
 80272d4:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80272d8:	b9a3      	cbnz	r3, 8027304 <_dtoa_r+0x914>
 80272da:	9b03      	ldr	r3, [sp, #12]
 80272dc:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80272e0:	0d1b      	lsrs	r3, r3, #20
 80272e2:	051b      	lsls	r3, r3, #20
 80272e4:	b12b      	cbz	r3, 80272f2 <_dtoa_r+0x902>
 80272e6:	9b04      	ldr	r3, [sp, #16]
 80272e8:	3301      	adds	r3, #1
 80272ea:	9304      	str	r3, [sp, #16]
 80272ec:	f108 0801 	add.w	r8, r8, #1
 80272f0:	2301      	movs	r3, #1
 80272f2:	9306      	str	r3, [sp, #24]
 80272f4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80272f6:	2b00      	cmp	r3, #0
 80272f8:	f47f af74 	bne.w	80271e4 <_dtoa_r+0x7f4>
 80272fc:	2001      	movs	r0, #1
 80272fe:	e779      	b.n	80271f4 <_dtoa_r+0x804>
 8027300:	2300      	movs	r3, #0
 8027302:	e7f6      	b.n	80272f2 <_dtoa_r+0x902>
 8027304:	9b02      	ldr	r3, [sp, #8]
 8027306:	e7f4      	b.n	80272f2 <_dtoa_r+0x902>
 8027308:	d085      	beq.n	8027216 <_dtoa_r+0x826>
 802730a:	4618      	mov	r0, r3
 802730c:	301c      	adds	r0, #28
 802730e:	e77d      	b.n	802720c <_dtoa_r+0x81c>
 8027310:	40240000 	.word	0x40240000
 8027314:	9b01      	ldr	r3, [sp, #4]
 8027316:	2b00      	cmp	r3, #0
 8027318:	dc38      	bgt.n	802738c <_dtoa_r+0x99c>
 802731a:	9b05      	ldr	r3, [sp, #20]
 802731c:	2b02      	cmp	r3, #2
 802731e:	dd35      	ble.n	802738c <_dtoa_r+0x99c>
 8027320:	f8dd 9004 	ldr.w	r9, [sp, #4]
 8027324:	f1b9 0f00 	cmp.w	r9, #0
 8027328:	d10d      	bne.n	8027346 <_dtoa_r+0x956>
 802732a:	4631      	mov	r1, r6
 802732c:	464b      	mov	r3, r9
 802732e:	2205      	movs	r2, #5
 8027330:	4620      	mov	r0, r4
 8027332:	f000 fd41 	bl	8027db8 <__multadd>
 8027336:	4601      	mov	r1, r0
 8027338:	4606      	mov	r6, r0
 802733a:	4658      	mov	r0, fp
 802733c:	f000 ffa2 	bl	8028284 <__mcmp>
 8027340:	2800      	cmp	r0, #0
 8027342:	f73f adbd 	bgt.w	8026ec0 <_dtoa_r+0x4d0>
 8027346:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8027348:	9d00      	ldr	r5, [sp, #0]
 802734a:	ea6f 0a03 	mvn.w	sl, r3
 802734e:	f04f 0800 	mov.w	r8, #0
 8027352:	4631      	mov	r1, r6
 8027354:	4620      	mov	r0, r4
 8027356:	f000 fd0d 	bl	8027d74 <_Bfree>
 802735a:	2f00      	cmp	r7, #0
 802735c:	f43f aeb4 	beq.w	80270c8 <_dtoa_r+0x6d8>
 8027360:	f1b8 0f00 	cmp.w	r8, #0
 8027364:	d005      	beq.n	8027372 <_dtoa_r+0x982>
 8027366:	45b8      	cmp	r8, r7
 8027368:	d003      	beq.n	8027372 <_dtoa_r+0x982>
 802736a:	4641      	mov	r1, r8
 802736c:	4620      	mov	r0, r4
 802736e:	f000 fd01 	bl	8027d74 <_Bfree>
 8027372:	4639      	mov	r1, r7
 8027374:	4620      	mov	r0, r4
 8027376:	f000 fcfd 	bl	8027d74 <_Bfree>
 802737a:	e6a5      	b.n	80270c8 <_dtoa_r+0x6d8>
 802737c:	2600      	movs	r6, #0
 802737e:	4637      	mov	r7, r6
 8027380:	e7e1      	b.n	8027346 <_dtoa_r+0x956>
 8027382:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8027384:	f8dd a01c 	ldr.w	sl, [sp, #28]
 8027388:	4637      	mov	r7, r6
 802738a:	e599      	b.n	8026ec0 <_dtoa_r+0x4d0>
 802738c:	9b08      	ldr	r3, [sp, #32]
 802738e:	f8dd 9004 	ldr.w	r9, [sp, #4]
 8027392:	2b00      	cmp	r3, #0
 8027394:	f000 80fd 	beq.w	8027592 <_dtoa_r+0xba2>
 8027398:	2d00      	cmp	r5, #0
 802739a:	dd05      	ble.n	80273a8 <_dtoa_r+0x9b8>
 802739c:	4639      	mov	r1, r7
 802739e:	462a      	mov	r2, r5
 80273a0:	4620      	mov	r0, r4
 80273a2:	f000 ff03 	bl	80281ac <__lshift>
 80273a6:	4607      	mov	r7, r0
 80273a8:	9b06      	ldr	r3, [sp, #24]
 80273aa:	2b00      	cmp	r3, #0
 80273ac:	d05c      	beq.n	8027468 <_dtoa_r+0xa78>
 80273ae:	6879      	ldr	r1, [r7, #4]
 80273b0:	4620      	mov	r0, r4
 80273b2:	f000 fc9f 	bl	8027cf4 <_Balloc>
 80273b6:	4605      	mov	r5, r0
 80273b8:	b928      	cbnz	r0, 80273c6 <_dtoa_r+0x9d6>
 80273ba:	4b80      	ldr	r3, [pc, #512]	; (80275bc <_dtoa_r+0xbcc>)
 80273bc:	4602      	mov	r2, r0
 80273be:	f240 21ea 	movw	r1, #746	; 0x2ea
 80273c2:	f7ff bb2e 	b.w	8026a22 <_dtoa_r+0x32>
 80273c6:	693a      	ldr	r2, [r7, #16]
 80273c8:	3202      	adds	r2, #2
 80273ca:	0092      	lsls	r2, r2, #2
 80273cc:	f107 010c 	add.w	r1, r7, #12
 80273d0:	300c      	adds	r0, #12
 80273d2:	f7fd fd3d 	bl	8024e50 <memcpy>
 80273d6:	2201      	movs	r2, #1
 80273d8:	4629      	mov	r1, r5
 80273da:	4620      	mov	r0, r4
 80273dc:	f000 fee6 	bl	80281ac <__lshift>
 80273e0:	9b00      	ldr	r3, [sp, #0]
 80273e2:	3301      	adds	r3, #1
 80273e4:	9301      	str	r3, [sp, #4]
 80273e6:	9b00      	ldr	r3, [sp, #0]
 80273e8:	444b      	add	r3, r9
 80273ea:	9307      	str	r3, [sp, #28]
 80273ec:	9b02      	ldr	r3, [sp, #8]
 80273ee:	f003 0301 	and.w	r3, r3, #1
 80273f2:	46b8      	mov	r8, r7
 80273f4:	9306      	str	r3, [sp, #24]
 80273f6:	4607      	mov	r7, r0
 80273f8:	9b01      	ldr	r3, [sp, #4]
 80273fa:	4631      	mov	r1, r6
 80273fc:	3b01      	subs	r3, #1
 80273fe:	4658      	mov	r0, fp
 8027400:	9302      	str	r3, [sp, #8]
 8027402:	f7ff fa67 	bl	80268d4 <quorem>
 8027406:	4603      	mov	r3, r0
 8027408:	3330      	adds	r3, #48	; 0x30
 802740a:	9004      	str	r0, [sp, #16]
 802740c:	4641      	mov	r1, r8
 802740e:	4658      	mov	r0, fp
 8027410:	9308      	str	r3, [sp, #32]
 8027412:	f000 ff37 	bl	8028284 <__mcmp>
 8027416:	463a      	mov	r2, r7
 8027418:	4681      	mov	r9, r0
 802741a:	4631      	mov	r1, r6
 802741c:	4620      	mov	r0, r4
 802741e:	f000 ff4d 	bl	80282bc <__mdiff>
 8027422:	68c2      	ldr	r2, [r0, #12]
 8027424:	9b08      	ldr	r3, [sp, #32]
 8027426:	4605      	mov	r5, r0
 8027428:	bb02      	cbnz	r2, 802746c <_dtoa_r+0xa7c>
 802742a:	4601      	mov	r1, r0
 802742c:	4658      	mov	r0, fp
 802742e:	f000 ff29 	bl	8028284 <__mcmp>
 8027432:	9b08      	ldr	r3, [sp, #32]
 8027434:	4602      	mov	r2, r0
 8027436:	4629      	mov	r1, r5
 8027438:	4620      	mov	r0, r4
 802743a:	e9cd 3208 	strd	r3, r2, [sp, #32]
 802743e:	f000 fc99 	bl	8027d74 <_Bfree>
 8027442:	9b05      	ldr	r3, [sp, #20]
 8027444:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8027446:	9d01      	ldr	r5, [sp, #4]
 8027448:	ea43 0102 	orr.w	r1, r3, r2
 802744c:	9b06      	ldr	r3, [sp, #24]
 802744e:	430b      	orrs	r3, r1
 8027450:	9b08      	ldr	r3, [sp, #32]
 8027452:	d10d      	bne.n	8027470 <_dtoa_r+0xa80>
 8027454:	2b39      	cmp	r3, #57	; 0x39
 8027456:	d029      	beq.n	80274ac <_dtoa_r+0xabc>
 8027458:	f1b9 0f00 	cmp.w	r9, #0
 802745c:	dd01      	ble.n	8027462 <_dtoa_r+0xa72>
 802745e:	9b04      	ldr	r3, [sp, #16]
 8027460:	3331      	adds	r3, #49	; 0x31
 8027462:	9a02      	ldr	r2, [sp, #8]
 8027464:	7013      	strb	r3, [r2, #0]
 8027466:	e774      	b.n	8027352 <_dtoa_r+0x962>
 8027468:	4638      	mov	r0, r7
 802746a:	e7b9      	b.n	80273e0 <_dtoa_r+0x9f0>
 802746c:	2201      	movs	r2, #1
 802746e:	e7e2      	b.n	8027436 <_dtoa_r+0xa46>
 8027470:	f1b9 0f00 	cmp.w	r9, #0
 8027474:	db06      	blt.n	8027484 <_dtoa_r+0xa94>
 8027476:	9905      	ldr	r1, [sp, #20]
 8027478:	ea41 0909 	orr.w	r9, r1, r9
 802747c:	9906      	ldr	r1, [sp, #24]
 802747e:	ea59 0101 	orrs.w	r1, r9, r1
 8027482:	d120      	bne.n	80274c6 <_dtoa_r+0xad6>
 8027484:	2a00      	cmp	r2, #0
 8027486:	ddec      	ble.n	8027462 <_dtoa_r+0xa72>
 8027488:	4659      	mov	r1, fp
 802748a:	2201      	movs	r2, #1
 802748c:	4620      	mov	r0, r4
 802748e:	9301      	str	r3, [sp, #4]
 8027490:	f000 fe8c 	bl	80281ac <__lshift>
 8027494:	4631      	mov	r1, r6
 8027496:	4683      	mov	fp, r0
 8027498:	f000 fef4 	bl	8028284 <__mcmp>
 802749c:	2800      	cmp	r0, #0
 802749e:	9b01      	ldr	r3, [sp, #4]
 80274a0:	dc02      	bgt.n	80274a8 <_dtoa_r+0xab8>
 80274a2:	d1de      	bne.n	8027462 <_dtoa_r+0xa72>
 80274a4:	07da      	lsls	r2, r3, #31
 80274a6:	d5dc      	bpl.n	8027462 <_dtoa_r+0xa72>
 80274a8:	2b39      	cmp	r3, #57	; 0x39
 80274aa:	d1d8      	bne.n	802745e <_dtoa_r+0xa6e>
 80274ac:	9a02      	ldr	r2, [sp, #8]
 80274ae:	2339      	movs	r3, #57	; 0x39
 80274b0:	7013      	strb	r3, [r2, #0]
 80274b2:	462b      	mov	r3, r5
 80274b4:	461d      	mov	r5, r3
 80274b6:	3b01      	subs	r3, #1
 80274b8:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 80274bc:	2a39      	cmp	r2, #57	; 0x39
 80274be:	d050      	beq.n	8027562 <_dtoa_r+0xb72>
 80274c0:	3201      	adds	r2, #1
 80274c2:	701a      	strb	r2, [r3, #0]
 80274c4:	e745      	b.n	8027352 <_dtoa_r+0x962>
 80274c6:	2a00      	cmp	r2, #0
 80274c8:	dd03      	ble.n	80274d2 <_dtoa_r+0xae2>
 80274ca:	2b39      	cmp	r3, #57	; 0x39
 80274cc:	d0ee      	beq.n	80274ac <_dtoa_r+0xabc>
 80274ce:	3301      	adds	r3, #1
 80274d0:	e7c7      	b.n	8027462 <_dtoa_r+0xa72>
 80274d2:	9a01      	ldr	r2, [sp, #4]
 80274d4:	9907      	ldr	r1, [sp, #28]
 80274d6:	f802 3c01 	strb.w	r3, [r2, #-1]
 80274da:	428a      	cmp	r2, r1
 80274dc:	d02a      	beq.n	8027534 <_dtoa_r+0xb44>
 80274de:	4659      	mov	r1, fp
 80274e0:	2300      	movs	r3, #0
 80274e2:	220a      	movs	r2, #10
 80274e4:	4620      	mov	r0, r4
 80274e6:	f000 fc67 	bl	8027db8 <__multadd>
 80274ea:	45b8      	cmp	r8, r7
 80274ec:	4683      	mov	fp, r0
 80274ee:	f04f 0300 	mov.w	r3, #0
 80274f2:	f04f 020a 	mov.w	r2, #10
 80274f6:	4641      	mov	r1, r8
 80274f8:	4620      	mov	r0, r4
 80274fa:	d107      	bne.n	802750c <_dtoa_r+0xb1c>
 80274fc:	f000 fc5c 	bl	8027db8 <__multadd>
 8027500:	4680      	mov	r8, r0
 8027502:	4607      	mov	r7, r0
 8027504:	9b01      	ldr	r3, [sp, #4]
 8027506:	3301      	adds	r3, #1
 8027508:	9301      	str	r3, [sp, #4]
 802750a:	e775      	b.n	80273f8 <_dtoa_r+0xa08>
 802750c:	f000 fc54 	bl	8027db8 <__multadd>
 8027510:	4639      	mov	r1, r7
 8027512:	4680      	mov	r8, r0
 8027514:	2300      	movs	r3, #0
 8027516:	220a      	movs	r2, #10
 8027518:	4620      	mov	r0, r4
 802751a:	f000 fc4d 	bl	8027db8 <__multadd>
 802751e:	4607      	mov	r7, r0
 8027520:	e7f0      	b.n	8027504 <_dtoa_r+0xb14>
 8027522:	f1b9 0f00 	cmp.w	r9, #0
 8027526:	9a00      	ldr	r2, [sp, #0]
 8027528:	bfcc      	ite	gt
 802752a:	464d      	movgt	r5, r9
 802752c:	2501      	movle	r5, #1
 802752e:	4415      	add	r5, r2
 8027530:	f04f 0800 	mov.w	r8, #0
 8027534:	4659      	mov	r1, fp
 8027536:	2201      	movs	r2, #1
 8027538:	4620      	mov	r0, r4
 802753a:	9301      	str	r3, [sp, #4]
 802753c:	f000 fe36 	bl	80281ac <__lshift>
 8027540:	4631      	mov	r1, r6
 8027542:	4683      	mov	fp, r0
 8027544:	f000 fe9e 	bl	8028284 <__mcmp>
 8027548:	2800      	cmp	r0, #0
 802754a:	dcb2      	bgt.n	80274b2 <_dtoa_r+0xac2>
 802754c:	d102      	bne.n	8027554 <_dtoa_r+0xb64>
 802754e:	9b01      	ldr	r3, [sp, #4]
 8027550:	07db      	lsls	r3, r3, #31
 8027552:	d4ae      	bmi.n	80274b2 <_dtoa_r+0xac2>
 8027554:	462b      	mov	r3, r5
 8027556:	461d      	mov	r5, r3
 8027558:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 802755c:	2a30      	cmp	r2, #48	; 0x30
 802755e:	d0fa      	beq.n	8027556 <_dtoa_r+0xb66>
 8027560:	e6f7      	b.n	8027352 <_dtoa_r+0x962>
 8027562:	9a00      	ldr	r2, [sp, #0]
 8027564:	429a      	cmp	r2, r3
 8027566:	d1a5      	bne.n	80274b4 <_dtoa_r+0xac4>
 8027568:	f10a 0a01 	add.w	sl, sl, #1
 802756c:	2331      	movs	r3, #49	; 0x31
 802756e:	e779      	b.n	8027464 <_dtoa_r+0xa74>
 8027570:	4b13      	ldr	r3, [pc, #76]	; (80275c0 <_dtoa_r+0xbd0>)
 8027572:	f7ff baaf 	b.w	8026ad4 <_dtoa_r+0xe4>
 8027576:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8027578:	2b00      	cmp	r3, #0
 802757a:	f47f aa86 	bne.w	8026a8a <_dtoa_r+0x9a>
 802757e:	4b11      	ldr	r3, [pc, #68]	; (80275c4 <_dtoa_r+0xbd4>)
 8027580:	f7ff baa8 	b.w	8026ad4 <_dtoa_r+0xe4>
 8027584:	f1b9 0f00 	cmp.w	r9, #0
 8027588:	dc03      	bgt.n	8027592 <_dtoa_r+0xba2>
 802758a:	9b05      	ldr	r3, [sp, #20]
 802758c:	2b02      	cmp	r3, #2
 802758e:	f73f aec9 	bgt.w	8027324 <_dtoa_r+0x934>
 8027592:	9d00      	ldr	r5, [sp, #0]
 8027594:	4631      	mov	r1, r6
 8027596:	4658      	mov	r0, fp
 8027598:	f7ff f99c 	bl	80268d4 <quorem>
 802759c:	f100 0330 	add.w	r3, r0, #48	; 0x30
 80275a0:	f805 3b01 	strb.w	r3, [r5], #1
 80275a4:	9a00      	ldr	r2, [sp, #0]
 80275a6:	1aaa      	subs	r2, r5, r2
 80275a8:	4591      	cmp	r9, r2
 80275aa:	ddba      	ble.n	8027522 <_dtoa_r+0xb32>
 80275ac:	4659      	mov	r1, fp
 80275ae:	2300      	movs	r3, #0
 80275b0:	220a      	movs	r2, #10
 80275b2:	4620      	mov	r0, r4
 80275b4:	f000 fc00 	bl	8027db8 <__multadd>
 80275b8:	4683      	mov	fp, r0
 80275ba:	e7eb      	b.n	8027594 <_dtoa_r+0xba4>
 80275bc:	0802a564 	.word	0x0802a564
 80275c0:	0802a36c 	.word	0x0802a36c
 80275c4:	0802a4e1 	.word	0x0802a4e1

080275c8 <rshift>:
 80275c8:	6903      	ldr	r3, [r0, #16]
 80275ca:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 80275ce:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80275d2:	ea4f 1261 	mov.w	r2, r1, asr #5
 80275d6:	f100 0414 	add.w	r4, r0, #20
 80275da:	dd45      	ble.n	8027668 <rshift+0xa0>
 80275dc:	f011 011f 	ands.w	r1, r1, #31
 80275e0:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 80275e4:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 80275e8:	d10c      	bne.n	8027604 <rshift+0x3c>
 80275ea:	f100 0710 	add.w	r7, r0, #16
 80275ee:	4629      	mov	r1, r5
 80275f0:	42b1      	cmp	r1, r6
 80275f2:	d334      	bcc.n	802765e <rshift+0x96>
 80275f4:	1a9b      	subs	r3, r3, r2
 80275f6:	009b      	lsls	r3, r3, #2
 80275f8:	1eea      	subs	r2, r5, #3
 80275fa:	4296      	cmp	r6, r2
 80275fc:	bf38      	it	cc
 80275fe:	2300      	movcc	r3, #0
 8027600:	4423      	add	r3, r4
 8027602:	e015      	b.n	8027630 <rshift+0x68>
 8027604:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 8027608:	f1c1 0820 	rsb	r8, r1, #32
 802760c:	40cf      	lsrs	r7, r1
 802760e:	f105 0e04 	add.w	lr, r5, #4
 8027612:	46a1      	mov	r9, r4
 8027614:	4576      	cmp	r6, lr
 8027616:	46f4      	mov	ip, lr
 8027618:	d815      	bhi.n	8027646 <rshift+0x7e>
 802761a:	1a9b      	subs	r3, r3, r2
 802761c:	009a      	lsls	r2, r3, #2
 802761e:	3a04      	subs	r2, #4
 8027620:	3501      	adds	r5, #1
 8027622:	42ae      	cmp	r6, r5
 8027624:	bf38      	it	cc
 8027626:	2200      	movcc	r2, #0
 8027628:	18a3      	adds	r3, r4, r2
 802762a:	50a7      	str	r7, [r4, r2]
 802762c:	b107      	cbz	r7, 8027630 <rshift+0x68>
 802762e:	3304      	adds	r3, #4
 8027630:	1b1a      	subs	r2, r3, r4
 8027632:	42a3      	cmp	r3, r4
 8027634:	ea4f 02a2 	mov.w	r2, r2, asr #2
 8027638:	bf08      	it	eq
 802763a:	2300      	moveq	r3, #0
 802763c:	6102      	str	r2, [r0, #16]
 802763e:	bf08      	it	eq
 8027640:	6143      	streq	r3, [r0, #20]
 8027642:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8027646:	f8dc c000 	ldr.w	ip, [ip]
 802764a:	fa0c fc08 	lsl.w	ip, ip, r8
 802764e:	ea4c 0707 	orr.w	r7, ip, r7
 8027652:	f849 7b04 	str.w	r7, [r9], #4
 8027656:	f85e 7b04 	ldr.w	r7, [lr], #4
 802765a:	40cf      	lsrs	r7, r1
 802765c:	e7da      	b.n	8027614 <rshift+0x4c>
 802765e:	f851 cb04 	ldr.w	ip, [r1], #4
 8027662:	f847 cf04 	str.w	ip, [r7, #4]!
 8027666:	e7c3      	b.n	80275f0 <rshift+0x28>
 8027668:	4623      	mov	r3, r4
 802766a:	e7e1      	b.n	8027630 <rshift+0x68>

0802766c <__hexdig_fun>:
 802766c:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
 8027670:	2b09      	cmp	r3, #9
 8027672:	d802      	bhi.n	802767a <__hexdig_fun+0xe>
 8027674:	3820      	subs	r0, #32
 8027676:	b2c0      	uxtb	r0, r0
 8027678:	4770      	bx	lr
 802767a:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
 802767e:	2b05      	cmp	r3, #5
 8027680:	d801      	bhi.n	8027686 <__hexdig_fun+0x1a>
 8027682:	3847      	subs	r0, #71	; 0x47
 8027684:	e7f7      	b.n	8027676 <__hexdig_fun+0xa>
 8027686:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 802768a:	2b05      	cmp	r3, #5
 802768c:	d801      	bhi.n	8027692 <__hexdig_fun+0x26>
 802768e:	3827      	subs	r0, #39	; 0x27
 8027690:	e7f1      	b.n	8027676 <__hexdig_fun+0xa>
 8027692:	2000      	movs	r0, #0
 8027694:	4770      	bx	lr
	...

08027698 <__gethex>:
 8027698:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802769c:	ed2d 8b02 	vpush	{d8}
 80276a0:	b089      	sub	sp, #36	; 0x24
 80276a2:	ee08 0a10 	vmov	s16, r0
 80276a6:	9304      	str	r3, [sp, #16]
 80276a8:	4bbc      	ldr	r3, [pc, #752]	; (802799c <__gethex+0x304>)
 80276aa:	681b      	ldr	r3, [r3, #0]
 80276ac:	9301      	str	r3, [sp, #4]
 80276ae:	4618      	mov	r0, r3
 80276b0:	468b      	mov	fp, r1
 80276b2:	4690      	mov	r8, r2
 80276b4:	f7d8 fdfc 	bl	80002b0 <strlen>
 80276b8:	9b01      	ldr	r3, [sp, #4]
 80276ba:	f8db 2000 	ldr.w	r2, [fp]
 80276be:	4403      	add	r3, r0
 80276c0:	4682      	mov	sl, r0
 80276c2:	f813 3c01 	ldrb.w	r3, [r3, #-1]
 80276c6:	9305      	str	r3, [sp, #20]
 80276c8:	1c93      	adds	r3, r2, #2
 80276ca:	f1c2 22ff 	rsb	r2, r2, #4278255360	; 0xff00ff00
 80276ce:	f502 027f 	add.w	r2, r2, #16711680	; 0xff0000
 80276d2:	32fe      	adds	r2, #254	; 0xfe
 80276d4:	18d1      	adds	r1, r2, r3
 80276d6:	461f      	mov	r7, r3
 80276d8:	f813 0b01 	ldrb.w	r0, [r3], #1
 80276dc:	9100      	str	r1, [sp, #0]
 80276de:	2830      	cmp	r0, #48	; 0x30
 80276e0:	d0f8      	beq.n	80276d4 <__gethex+0x3c>
 80276e2:	f7ff ffc3 	bl	802766c <__hexdig_fun>
 80276e6:	4604      	mov	r4, r0
 80276e8:	2800      	cmp	r0, #0
 80276ea:	d13a      	bne.n	8027762 <__gethex+0xca>
 80276ec:	9901      	ldr	r1, [sp, #4]
 80276ee:	4652      	mov	r2, sl
 80276f0:	4638      	mov	r0, r7
 80276f2:	f001 f92b 	bl	802894c <strncmp>
 80276f6:	4605      	mov	r5, r0
 80276f8:	2800      	cmp	r0, #0
 80276fa:	d168      	bne.n	80277ce <__gethex+0x136>
 80276fc:	f817 000a 	ldrb.w	r0, [r7, sl]
 8027700:	eb07 060a 	add.w	r6, r7, sl
 8027704:	f7ff ffb2 	bl	802766c <__hexdig_fun>
 8027708:	2800      	cmp	r0, #0
 802770a:	d062      	beq.n	80277d2 <__gethex+0x13a>
 802770c:	4633      	mov	r3, r6
 802770e:	7818      	ldrb	r0, [r3, #0]
 8027710:	2830      	cmp	r0, #48	; 0x30
 8027712:	461f      	mov	r7, r3
 8027714:	f103 0301 	add.w	r3, r3, #1
 8027718:	d0f9      	beq.n	802770e <__gethex+0x76>
 802771a:	f7ff ffa7 	bl	802766c <__hexdig_fun>
 802771e:	2301      	movs	r3, #1
 8027720:	fab0 f480 	clz	r4, r0
 8027724:	0964      	lsrs	r4, r4, #5
 8027726:	4635      	mov	r5, r6
 8027728:	9300      	str	r3, [sp, #0]
 802772a:	463a      	mov	r2, r7
 802772c:	4616      	mov	r6, r2
 802772e:	3201      	adds	r2, #1
 8027730:	7830      	ldrb	r0, [r6, #0]
 8027732:	f7ff ff9b 	bl	802766c <__hexdig_fun>
 8027736:	2800      	cmp	r0, #0
 8027738:	d1f8      	bne.n	802772c <__gethex+0x94>
 802773a:	9901      	ldr	r1, [sp, #4]
 802773c:	4652      	mov	r2, sl
 802773e:	4630      	mov	r0, r6
 8027740:	f001 f904 	bl	802894c <strncmp>
 8027744:	b980      	cbnz	r0, 8027768 <__gethex+0xd0>
 8027746:	b94d      	cbnz	r5, 802775c <__gethex+0xc4>
 8027748:	eb06 050a 	add.w	r5, r6, sl
 802774c:	462a      	mov	r2, r5
 802774e:	4616      	mov	r6, r2
 8027750:	3201      	adds	r2, #1
 8027752:	7830      	ldrb	r0, [r6, #0]
 8027754:	f7ff ff8a 	bl	802766c <__hexdig_fun>
 8027758:	2800      	cmp	r0, #0
 802775a:	d1f8      	bne.n	802774e <__gethex+0xb6>
 802775c:	1bad      	subs	r5, r5, r6
 802775e:	00ad      	lsls	r5, r5, #2
 8027760:	e004      	b.n	802776c <__gethex+0xd4>
 8027762:	2400      	movs	r4, #0
 8027764:	4625      	mov	r5, r4
 8027766:	e7e0      	b.n	802772a <__gethex+0x92>
 8027768:	2d00      	cmp	r5, #0
 802776a:	d1f7      	bne.n	802775c <__gethex+0xc4>
 802776c:	7833      	ldrb	r3, [r6, #0]
 802776e:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 8027772:	2b50      	cmp	r3, #80	; 0x50
 8027774:	d13b      	bne.n	80277ee <__gethex+0x156>
 8027776:	7873      	ldrb	r3, [r6, #1]
 8027778:	2b2b      	cmp	r3, #43	; 0x2b
 802777a:	d02c      	beq.n	80277d6 <__gethex+0x13e>
 802777c:	2b2d      	cmp	r3, #45	; 0x2d
 802777e:	d02e      	beq.n	80277de <__gethex+0x146>
 8027780:	1c71      	adds	r1, r6, #1
 8027782:	f04f 0900 	mov.w	r9, #0
 8027786:	7808      	ldrb	r0, [r1, #0]
 8027788:	f7ff ff70 	bl	802766c <__hexdig_fun>
 802778c:	1e43      	subs	r3, r0, #1
 802778e:	b2db      	uxtb	r3, r3
 8027790:	2b18      	cmp	r3, #24
 8027792:	d82c      	bhi.n	80277ee <__gethex+0x156>
 8027794:	f1a0 0210 	sub.w	r2, r0, #16
 8027798:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 802779c:	f7ff ff66 	bl	802766c <__hexdig_fun>
 80277a0:	1e43      	subs	r3, r0, #1
 80277a2:	b2db      	uxtb	r3, r3
 80277a4:	2b18      	cmp	r3, #24
 80277a6:	d91d      	bls.n	80277e4 <__gethex+0x14c>
 80277a8:	f1b9 0f00 	cmp.w	r9, #0
 80277ac:	d000      	beq.n	80277b0 <__gethex+0x118>
 80277ae:	4252      	negs	r2, r2
 80277b0:	4415      	add	r5, r2
 80277b2:	f8cb 1000 	str.w	r1, [fp]
 80277b6:	b1e4      	cbz	r4, 80277f2 <__gethex+0x15a>
 80277b8:	9b00      	ldr	r3, [sp, #0]
 80277ba:	2b00      	cmp	r3, #0
 80277bc:	bf14      	ite	ne
 80277be:	2700      	movne	r7, #0
 80277c0:	2706      	moveq	r7, #6
 80277c2:	4638      	mov	r0, r7
 80277c4:	b009      	add	sp, #36	; 0x24
 80277c6:	ecbd 8b02 	vpop	{d8}
 80277ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80277ce:	463e      	mov	r6, r7
 80277d0:	4625      	mov	r5, r4
 80277d2:	2401      	movs	r4, #1
 80277d4:	e7ca      	b.n	802776c <__gethex+0xd4>
 80277d6:	f04f 0900 	mov.w	r9, #0
 80277da:	1cb1      	adds	r1, r6, #2
 80277dc:	e7d3      	b.n	8027786 <__gethex+0xee>
 80277de:	f04f 0901 	mov.w	r9, #1
 80277e2:	e7fa      	b.n	80277da <__gethex+0x142>
 80277e4:	230a      	movs	r3, #10
 80277e6:	fb03 0202 	mla	r2, r3, r2, r0
 80277ea:	3a10      	subs	r2, #16
 80277ec:	e7d4      	b.n	8027798 <__gethex+0x100>
 80277ee:	4631      	mov	r1, r6
 80277f0:	e7df      	b.n	80277b2 <__gethex+0x11a>
 80277f2:	1bf3      	subs	r3, r6, r7
 80277f4:	3b01      	subs	r3, #1
 80277f6:	4621      	mov	r1, r4
 80277f8:	2b07      	cmp	r3, #7
 80277fa:	dc0b      	bgt.n	8027814 <__gethex+0x17c>
 80277fc:	ee18 0a10 	vmov	r0, s16
 8027800:	f000 fa78 	bl	8027cf4 <_Balloc>
 8027804:	4604      	mov	r4, r0
 8027806:	b940      	cbnz	r0, 802781a <__gethex+0x182>
 8027808:	4b65      	ldr	r3, [pc, #404]	; (80279a0 <__gethex+0x308>)
 802780a:	4602      	mov	r2, r0
 802780c:	21de      	movs	r1, #222	; 0xde
 802780e:	4865      	ldr	r0, [pc, #404]	; (80279a4 <__gethex+0x30c>)
 8027810:	f001 f8bc 	bl	802898c <__assert_func>
 8027814:	3101      	adds	r1, #1
 8027816:	105b      	asrs	r3, r3, #1
 8027818:	e7ee      	b.n	80277f8 <__gethex+0x160>
 802781a:	f100 0914 	add.w	r9, r0, #20
 802781e:	f04f 0b00 	mov.w	fp, #0
 8027822:	f1ca 0301 	rsb	r3, sl, #1
 8027826:	f8cd 9008 	str.w	r9, [sp, #8]
 802782a:	f8cd b000 	str.w	fp, [sp]
 802782e:	9306      	str	r3, [sp, #24]
 8027830:	42b7      	cmp	r7, r6
 8027832:	d340      	bcc.n	80278b6 <__gethex+0x21e>
 8027834:	9802      	ldr	r0, [sp, #8]
 8027836:	9b00      	ldr	r3, [sp, #0]
 8027838:	f840 3b04 	str.w	r3, [r0], #4
 802783c:	eba0 0009 	sub.w	r0, r0, r9
 8027840:	1080      	asrs	r0, r0, #2
 8027842:	0146      	lsls	r6, r0, #5
 8027844:	6120      	str	r0, [r4, #16]
 8027846:	4618      	mov	r0, r3
 8027848:	f000 fb4a 	bl	8027ee0 <__hi0bits>
 802784c:	1a30      	subs	r0, r6, r0
 802784e:	f8d8 6000 	ldr.w	r6, [r8]
 8027852:	42b0      	cmp	r0, r6
 8027854:	dd63      	ble.n	802791e <__gethex+0x286>
 8027856:	1b87      	subs	r7, r0, r6
 8027858:	4639      	mov	r1, r7
 802785a:	4620      	mov	r0, r4
 802785c:	f000 fee4 	bl	8028628 <__any_on>
 8027860:	4682      	mov	sl, r0
 8027862:	b1a8      	cbz	r0, 8027890 <__gethex+0x1f8>
 8027864:	1e7b      	subs	r3, r7, #1
 8027866:	1159      	asrs	r1, r3, #5
 8027868:	f003 021f 	and.w	r2, r3, #31
 802786c:	f859 1021 	ldr.w	r1, [r9, r1, lsl #2]
 8027870:	f04f 0a01 	mov.w	sl, #1
 8027874:	fa0a f202 	lsl.w	r2, sl, r2
 8027878:	420a      	tst	r2, r1
 802787a:	d009      	beq.n	8027890 <__gethex+0x1f8>
 802787c:	4553      	cmp	r3, sl
 802787e:	dd05      	ble.n	802788c <__gethex+0x1f4>
 8027880:	1eb9      	subs	r1, r7, #2
 8027882:	4620      	mov	r0, r4
 8027884:	f000 fed0 	bl	8028628 <__any_on>
 8027888:	2800      	cmp	r0, #0
 802788a:	d145      	bne.n	8027918 <__gethex+0x280>
 802788c:	f04f 0a02 	mov.w	sl, #2
 8027890:	4639      	mov	r1, r7
 8027892:	4620      	mov	r0, r4
 8027894:	f7ff fe98 	bl	80275c8 <rshift>
 8027898:	443d      	add	r5, r7
 802789a:	f8d8 3008 	ldr.w	r3, [r8, #8]
 802789e:	42ab      	cmp	r3, r5
 80278a0:	da4c      	bge.n	802793c <__gethex+0x2a4>
 80278a2:	ee18 0a10 	vmov	r0, s16
 80278a6:	4621      	mov	r1, r4
 80278a8:	f000 fa64 	bl	8027d74 <_Bfree>
 80278ac:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80278ae:	2300      	movs	r3, #0
 80278b0:	6013      	str	r3, [r2, #0]
 80278b2:	27a3      	movs	r7, #163	; 0xa3
 80278b4:	e785      	b.n	80277c2 <__gethex+0x12a>
 80278b6:	1e73      	subs	r3, r6, #1
 80278b8:	9a05      	ldr	r2, [sp, #20]
 80278ba:	9303      	str	r3, [sp, #12]
 80278bc:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 80278c0:	4293      	cmp	r3, r2
 80278c2:	d019      	beq.n	80278f8 <__gethex+0x260>
 80278c4:	f1bb 0f20 	cmp.w	fp, #32
 80278c8:	d107      	bne.n	80278da <__gethex+0x242>
 80278ca:	9b02      	ldr	r3, [sp, #8]
 80278cc:	9a00      	ldr	r2, [sp, #0]
 80278ce:	f843 2b04 	str.w	r2, [r3], #4
 80278d2:	9302      	str	r3, [sp, #8]
 80278d4:	2300      	movs	r3, #0
 80278d6:	9300      	str	r3, [sp, #0]
 80278d8:	469b      	mov	fp, r3
 80278da:	f816 0c01 	ldrb.w	r0, [r6, #-1]
 80278de:	f7ff fec5 	bl	802766c <__hexdig_fun>
 80278e2:	9b00      	ldr	r3, [sp, #0]
 80278e4:	f000 000f 	and.w	r0, r0, #15
 80278e8:	fa00 f00b 	lsl.w	r0, r0, fp
 80278ec:	4303      	orrs	r3, r0
 80278ee:	9300      	str	r3, [sp, #0]
 80278f0:	f10b 0b04 	add.w	fp, fp, #4
 80278f4:	9b03      	ldr	r3, [sp, #12]
 80278f6:	e00d      	b.n	8027914 <__gethex+0x27c>
 80278f8:	9b03      	ldr	r3, [sp, #12]
 80278fa:	9a06      	ldr	r2, [sp, #24]
 80278fc:	4413      	add	r3, r2
 80278fe:	42bb      	cmp	r3, r7
 8027900:	d3e0      	bcc.n	80278c4 <__gethex+0x22c>
 8027902:	4618      	mov	r0, r3
 8027904:	9901      	ldr	r1, [sp, #4]
 8027906:	9307      	str	r3, [sp, #28]
 8027908:	4652      	mov	r2, sl
 802790a:	f001 f81f 	bl	802894c <strncmp>
 802790e:	9b07      	ldr	r3, [sp, #28]
 8027910:	2800      	cmp	r0, #0
 8027912:	d1d7      	bne.n	80278c4 <__gethex+0x22c>
 8027914:	461e      	mov	r6, r3
 8027916:	e78b      	b.n	8027830 <__gethex+0x198>
 8027918:	f04f 0a03 	mov.w	sl, #3
 802791c:	e7b8      	b.n	8027890 <__gethex+0x1f8>
 802791e:	da0a      	bge.n	8027936 <__gethex+0x29e>
 8027920:	1a37      	subs	r7, r6, r0
 8027922:	4621      	mov	r1, r4
 8027924:	ee18 0a10 	vmov	r0, s16
 8027928:	463a      	mov	r2, r7
 802792a:	f000 fc3f 	bl	80281ac <__lshift>
 802792e:	1bed      	subs	r5, r5, r7
 8027930:	4604      	mov	r4, r0
 8027932:	f100 0914 	add.w	r9, r0, #20
 8027936:	f04f 0a00 	mov.w	sl, #0
 802793a:	e7ae      	b.n	802789a <__gethex+0x202>
 802793c:	f8d8 0004 	ldr.w	r0, [r8, #4]
 8027940:	42a8      	cmp	r0, r5
 8027942:	dd72      	ble.n	8027a2a <__gethex+0x392>
 8027944:	1b45      	subs	r5, r0, r5
 8027946:	42ae      	cmp	r6, r5
 8027948:	dc36      	bgt.n	80279b8 <__gethex+0x320>
 802794a:	f8d8 300c 	ldr.w	r3, [r8, #12]
 802794e:	2b02      	cmp	r3, #2
 8027950:	d02a      	beq.n	80279a8 <__gethex+0x310>
 8027952:	2b03      	cmp	r3, #3
 8027954:	d02c      	beq.n	80279b0 <__gethex+0x318>
 8027956:	2b01      	cmp	r3, #1
 8027958:	d115      	bne.n	8027986 <__gethex+0x2ee>
 802795a:	42ae      	cmp	r6, r5
 802795c:	d113      	bne.n	8027986 <__gethex+0x2ee>
 802795e:	2e01      	cmp	r6, #1
 8027960:	d10b      	bne.n	802797a <__gethex+0x2e2>
 8027962:	9a04      	ldr	r2, [sp, #16]
 8027964:	f8d8 3004 	ldr.w	r3, [r8, #4]
 8027968:	6013      	str	r3, [r2, #0]
 802796a:	2301      	movs	r3, #1
 802796c:	6123      	str	r3, [r4, #16]
 802796e:	f8c9 3000 	str.w	r3, [r9]
 8027972:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8027974:	2762      	movs	r7, #98	; 0x62
 8027976:	601c      	str	r4, [r3, #0]
 8027978:	e723      	b.n	80277c2 <__gethex+0x12a>
 802797a:	1e71      	subs	r1, r6, #1
 802797c:	4620      	mov	r0, r4
 802797e:	f000 fe53 	bl	8028628 <__any_on>
 8027982:	2800      	cmp	r0, #0
 8027984:	d1ed      	bne.n	8027962 <__gethex+0x2ca>
 8027986:	ee18 0a10 	vmov	r0, s16
 802798a:	4621      	mov	r1, r4
 802798c:	f000 f9f2 	bl	8027d74 <_Bfree>
 8027990:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8027992:	2300      	movs	r3, #0
 8027994:	6013      	str	r3, [r2, #0]
 8027996:	2750      	movs	r7, #80	; 0x50
 8027998:	e713      	b.n	80277c2 <__gethex+0x12a>
 802799a:	bf00      	nop
 802799c:	0802a5e0 	.word	0x0802a5e0
 80279a0:	0802a564 	.word	0x0802a564
 80279a4:	0802a575 	.word	0x0802a575
 80279a8:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80279aa:	2b00      	cmp	r3, #0
 80279ac:	d1eb      	bne.n	8027986 <__gethex+0x2ee>
 80279ae:	e7d8      	b.n	8027962 <__gethex+0x2ca>
 80279b0:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80279b2:	2b00      	cmp	r3, #0
 80279b4:	d1d5      	bne.n	8027962 <__gethex+0x2ca>
 80279b6:	e7e6      	b.n	8027986 <__gethex+0x2ee>
 80279b8:	1e6f      	subs	r7, r5, #1
 80279ba:	f1ba 0f00 	cmp.w	sl, #0
 80279be:	d131      	bne.n	8027a24 <__gethex+0x38c>
 80279c0:	b127      	cbz	r7, 80279cc <__gethex+0x334>
 80279c2:	4639      	mov	r1, r7
 80279c4:	4620      	mov	r0, r4
 80279c6:	f000 fe2f 	bl	8028628 <__any_on>
 80279ca:	4682      	mov	sl, r0
 80279cc:	117b      	asrs	r3, r7, #5
 80279ce:	2101      	movs	r1, #1
 80279d0:	f859 3023 	ldr.w	r3, [r9, r3, lsl #2]
 80279d4:	f007 071f 	and.w	r7, r7, #31
 80279d8:	fa01 f707 	lsl.w	r7, r1, r7
 80279dc:	421f      	tst	r7, r3
 80279de:	4629      	mov	r1, r5
 80279e0:	4620      	mov	r0, r4
 80279e2:	bf18      	it	ne
 80279e4:	f04a 0a02 	orrne.w	sl, sl, #2
 80279e8:	1b76      	subs	r6, r6, r5
 80279ea:	f7ff fded 	bl	80275c8 <rshift>
 80279ee:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80279f2:	2702      	movs	r7, #2
 80279f4:	f1ba 0f00 	cmp.w	sl, #0
 80279f8:	d048      	beq.n	8027a8c <__gethex+0x3f4>
 80279fa:	f8d8 300c 	ldr.w	r3, [r8, #12]
 80279fe:	2b02      	cmp	r3, #2
 8027a00:	d015      	beq.n	8027a2e <__gethex+0x396>
 8027a02:	2b03      	cmp	r3, #3
 8027a04:	d017      	beq.n	8027a36 <__gethex+0x39e>
 8027a06:	2b01      	cmp	r3, #1
 8027a08:	d109      	bne.n	8027a1e <__gethex+0x386>
 8027a0a:	f01a 0f02 	tst.w	sl, #2
 8027a0e:	d006      	beq.n	8027a1e <__gethex+0x386>
 8027a10:	f8d9 0000 	ldr.w	r0, [r9]
 8027a14:	ea4a 0a00 	orr.w	sl, sl, r0
 8027a18:	f01a 0f01 	tst.w	sl, #1
 8027a1c:	d10e      	bne.n	8027a3c <__gethex+0x3a4>
 8027a1e:	f047 0710 	orr.w	r7, r7, #16
 8027a22:	e033      	b.n	8027a8c <__gethex+0x3f4>
 8027a24:	f04f 0a01 	mov.w	sl, #1
 8027a28:	e7d0      	b.n	80279cc <__gethex+0x334>
 8027a2a:	2701      	movs	r7, #1
 8027a2c:	e7e2      	b.n	80279f4 <__gethex+0x35c>
 8027a2e:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8027a30:	f1c3 0301 	rsb	r3, r3, #1
 8027a34:	9315      	str	r3, [sp, #84]	; 0x54
 8027a36:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8027a38:	2b00      	cmp	r3, #0
 8027a3a:	d0f0      	beq.n	8027a1e <__gethex+0x386>
 8027a3c:	f8d4 b010 	ldr.w	fp, [r4, #16]
 8027a40:	f104 0314 	add.w	r3, r4, #20
 8027a44:	ea4f 0a8b 	mov.w	sl, fp, lsl #2
 8027a48:	eb03 018b 	add.w	r1, r3, fp, lsl #2
 8027a4c:	f04f 0c00 	mov.w	ip, #0
 8027a50:	4618      	mov	r0, r3
 8027a52:	f853 2b04 	ldr.w	r2, [r3], #4
 8027a56:	f1b2 3fff 	cmp.w	r2, #4294967295
 8027a5a:	d01c      	beq.n	8027a96 <__gethex+0x3fe>
 8027a5c:	3201      	adds	r2, #1
 8027a5e:	6002      	str	r2, [r0, #0]
 8027a60:	2f02      	cmp	r7, #2
 8027a62:	f104 0314 	add.w	r3, r4, #20
 8027a66:	d13f      	bne.n	8027ae8 <__gethex+0x450>
 8027a68:	f8d8 2000 	ldr.w	r2, [r8]
 8027a6c:	3a01      	subs	r2, #1
 8027a6e:	42b2      	cmp	r2, r6
 8027a70:	d10a      	bne.n	8027a88 <__gethex+0x3f0>
 8027a72:	1171      	asrs	r1, r6, #5
 8027a74:	2201      	movs	r2, #1
 8027a76:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 8027a7a:	f006 061f 	and.w	r6, r6, #31
 8027a7e:	fa02 f606 	lsl.w	r6, r2, r6
 8027a82:	421e      	tst	r6, r3
 8027a84:	bf18      	it	ne
 8027a86:	4617      	movne	r7, r2
 8027a88:	f047 0720 	orr.w	r7, r7, #32
 8027a8c:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8027a8e:	601c      	str	r4, [r3, #0]
 8027a90:	9b04      	ldr	r3, [sp, #16]
 8027a92:	601d      	str	r5, [r3, #0]
 8027a94:	e695      	b.n	80277c2 <__gethex+0x12a>
 8027a96:	4299      	cmp	r1, r3
 8027a98:	f843 cc04 	str.w	ip, [r3, #-4]
 8027a9c:	d8d8      	bhi.n	8027a50 <__gethex+0x3b8>
 8027a9e:	68a3      	ldr	r3, [r4, #8]
 8027aa0:	459b      	cmp	fp, r3
 8027aa2:	db19      	blt.n	8027ad8 <__gethex+0x440>
 8027aa4:	6861      	ldr	r1, [r4, #4]
 8027aa6:	ee18 0a10 	vmov	r0, s16
 8027aaa:	3101      	adds	r1, #1
 8027aac:	f000 f922 	bl	8027cf4 <_Balloc>
 8027ab0:	4681      	mov	r9, r0
 8027ab2:	b918      	cbnz	r0, 8027abc <__gethex+0x424>
 8027ab4:	4b1a      	ldr	r3, [pc, #104]	; (8027b20 <__gethex+0x488>)
 8027ab6:	4602      	mov	r2, r0
 8027ab8:	2184      	movs	r1, #132	; 0x84
 8027aba:	e6a8      	b.n	802780e <__gethex+0x176>
 8027abc:	6922      	ldr	r2, [r4, #16]
 8027abe:	3202      	adds	r2, #2
 8027ac0:	f104 010c 	add.w	r1, r4, #12
 8027ac4:	0092      	lsls	r2, r2, #2
 8027ac6:	300c      	adds	r0, #12
 8027ac8:	f7fd f9c2 	bl	8024e50 <memcpy>
 8027acc:	4621      	mov	r1, r4
 8027ace:	ee18 0a10 	vmov	r0, s16
 8027ad2:	f000 f94f 	bl	8027d74 <_Bfree>
 8027ad6:	464c      	mov	r4, r9
 8027ad8:	6923      	ldr	r3, [r4, #16]
 8027ada:	1c5a      	adds	r2, r3, #1
 8027adc:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8027ae0:	6122      	str	r2, [r4, #16]
 8027ae2:	2201      	movs	r2, #1
 8027ae4:	615a      	str	r2, [r3, #20]
 8027ae6:	e7bb      	b.n	8027a60 <__gethex+0x3c8>
 8027ae8:	6922      	ldr	r2, [r4, #16]
 8027aea:	455a      	cmp	r2, fp
 8027aec:	dd0b      	ble.n	8027b06 <__gethex+0x46e>
 8027aee:	2101      	movs	r1, #1
 8027af0:	4620      	mov	r0, r4
 8027af2:	f7ff fd69 	bl	80275c8 <rshift>
 8027af6:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8027afa:	3501      	adds	r5, #1
 8027afc:	42ab      	cmp	r3, r5
 8027afe:	f6ff aed0 	blt.w	80278a2 <__gethex+0x20a>
 8027b02:	2701      	movs	r7, #1
 8027b04:	e7c0      	b.n	8027a88 <__gethex+0x3f0>
 8027b06:	f016 061f 	ands.w	r6, r6, #31
 8027b0a:	d0fa      	beq.n	8027b02 <__gethex+0x46a>
 8027b0c:	449a      	add	sl, r3
 8027b0e:	f1c6 0620 	rsb	r6, r6, #32
 8027b12:	f85a 0c04 	ldr.w	r0, [sl, #-4]
 8027b16:	f000 f9e3 	bl	8027ee0 <__hi0bits>
 8027b1a:	42b0      	cmp	r0, r6
 8027b1c:	dbe7      	blt.n	8027aee <__gethex+0x456>
 8027b1e:	e7f0      	b.n	8027b02 <__gethex+0x46a>
 8027b20:	0802a564 	.word	0x0802a564

08027b24 <L_shift>:
 8027b24:	f1c2 0208 	rsb	r2, r2, #8
 8027b28:	0092      	lsls	r2, r2, #2
 8027b2a:	b570      	push	{r4, r5, r6, lr}
 8027b2c:	f1c2 0620 	rsb	r6, r2, #32
 8027b30:	6843      	ldr	r3, [r0, #4]
 8027b32:	6804      	ldr	r4, [r0, #0]
 8027b34:	fa03 f506 	lsl.w	r5, r3, r6
 8027b38:	432c      	orrs	r4, r5
 8027b3a:	40d3      	lsrs	r3, r2
 8027b3c:	6004      	str	r4, [r0, #0]
 8027b3e:	f840 3f04 	str.w	r3, [r0, #4]!
 8027b42:	4288      	cmp	r0, r1
 8027b44:	d3f4      	bcc.n	8027b30 <L_shift+0xc>
 8027b46:	bd70      	pop	{r4, r5, r6, pc}

08027b48 <__match>:
 8027b48:	b530      	push	{r4, r5, lr}
 8027b4a:	6803      	ldr	r3, [r0, #0]
 8027b4c:	3301      	adds	r3, #1
 8027b4e:	f811 4b01 	ldrb.w	r4, [r1], #1
 8027b52:	b914      	cbnz	r4, 8027b5a <__match+0x12>
 8027b54:	6003      	str	r3, [r0, #0]
 8027b56:	2001      	movs	r0, #1
 8027b58:	bd30      	pop	{r4, r5, pc}
 8027b5a:	f813 2b01 	ldrb.w	r2, [r3], #1
 8027b5e:	f1a2 0541 	sub.w	r5, r2, #65	; 0x41
 8027b62:	2d19      	cmp	r5, #25
 8027b64:	bf98      	it	ls
 8027b66:	3220      	addls	r2, #32
 8027b68:	42a2      	cmp	r2, r4
 8027b6a:	d0f0      	beq.n	8027b4e <__match+0x6>
 8027b6c:	2000      	movs	r0, #0
 8027b6e:	e7f3      	b.n	8027b58 <__match+0x10>

08027b70 <__hexnan>:
 8027b70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027b74:	680b      	ldr	r3, [r1, #0]
 8027b76:	6801      	ldr	r1, [r0, #0]
 8027b78:	115e      	asrs	r6, r3, #5
 8027b7a:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 8027b7e:	f013 031f 	ands.w	r3, r3, #31
 8027b82:	b087      	sub	sp, #28
 8027b84:	bf18      	it	ne
 8027b86:	3604      	addne	r6, #4
 8027b88:	2500      	movs	r5, #0
 8027b8a:	1f37      	subs	r7, r6, #4
 8027b8c:	4682      	mov	sl, r0
 8027b8e:	4690      	mov	r8, r2
 8027b90:	9301      	str	r3, [sp, #4]
 8027b92:	f846 5c04 	str.w	r5, [r6, #-4]
 8027b96:	46b9      	mov	r9, r7
 8027b98:	463c      	mov	r4, r7
 8027b9a:	9502      	str	r5, [sp, #8]
 8027b9c:	46ab      	mov	fp, r5
 8027b9e:	784a      	ldrb	r2, [r1, #1]
 8027ba0:	1c4b      	adds	r3, r1, #1
 8027ba2:	9303      	str	r3, [sp, #12]
 8027ba4:	b342      	cbz	r2, 8027bf8 <__hexnan+0x88>
 8027ba6:	4610      	mov	r0, r2
 8027ba8:	9105      	str	r1, [sp, #20]
 8027baa:	9204      	str	r2, [sp, #16]
 8027bac:	f7ff fd5e 	bl	802766c <__hexdig_fun>
 8027bb0:	2800      	cmp	r0, #0
 8027bb2:	d14f      	bne.n	8027c54 <__hexnan+0xe4>
 8027bb4:	9a04      	ldr	r2, [sp, #16]
 8027bb6:	9905      	ldr	r1, [sp, #20]
 8027bb8:	2a20      	cmp	r2, #32
 8027bba:	d818      	bhi.n	8027bee <__hexnan+0x7e>
 8027bbc:	9b02      	ldr	r3, [sp, #8]
 8027bbe:	459b      	cmp	fp, r3
 8027bc0:	dd13      	ble.n	8027bea <__hexnan+0x7a>
 8027bc2:	454c      	cmp	r4, r9
 8027bc4:	d206      	bcs.n	8027bd4 <__hexnan+0x64>
 8027bc6:	2d07      	cmp	r5, #7
 8027bc8:	dc04      	bgt.n	8027bd4 <__hexnan+0x64>
 8027bca:	462a      	mov	r2, r5
 8027bcc:	4649      	mov	r1, r9
 8027bce:	4620      	mov	r0, r4
 8027bd0:	f7ff ffa8 	bl	8027b24 <L_shift>
 8027bd4:	4544      	cmp	r4, r8
 8027bd6:	d950      	bls.n	8027c7a <__hexnan+0x10a>
 8027bd8:	2300      	movs	r3, #0
 8027bda:	f1a4 0904 	sub.w	r9, r4, #4
 8027bde:	f844 3c04 	str.w	r3, [r4, #-4]
 8027be2:	f8cd b008 	str.w	fp, [sp, #8]
 8027be6:	464c      	mov	r4, r9
 8027be8:	461d      	mov	r5, r3
 8027bea:	9903      	ldr	r1, [sp, #12]
 8027bec:	e7d7      	b.n	8027b9e <__hexnan+0x2e>
 8027bee:	2a29      	cmp	r2, #41	; 0x29
 8027bf0:	d156      	bne.n	8027ca0 <__hexnan+0x130>
 8027bf2:	3102      	adds	r1, #2
 8027bf4:	f8ca 1000 	str.w	r1, [sl]
 8027bf8:	f1bb 0f00 	cmp.w	fp, #0
 8027bfc:	d050      	beq.n	8027ca0 <__hexnan+0x130>
 8027bfe:	454c      	cmp	r4, r9
 8027c00:	d206      	bcs.n	8027c10 <__hexnan+0xa0>
 8027c02:	2d07      	cmp	r5, #7
 8027c04:	dc04      	bgt.n	8027c10 <__hexnan+0xa0>
 8027c06:	462a      	mov	r2, r5
 8027c08:	4649      	mov	r1, r9
 8027c0a:	4620      	mov	r0, r4
 8027c0c:	f7ff ff8a 	bl	8027b24 <L_shift>
 8027c10:	4544      	cmp	r4, r8
 8027c12:	d934      	bls.n	8027c7e <__hexnan+0x10e>
 8027c14:	f1a8 0204 	sub.w	r2, r8, #4
 8027c18:	4623      	mov	r3, r4
 8027c1a:	f853 1b04 	ldr.w	r1, [r3], #4
 8027c1e:	f842 1f04 	str.w	r1, [r2, #4]!
 8027c22:	429f      	cmp	r7, r3
 8027c24:	d2f9      	bcs.n	8027c1a <__hexnan+0xaa>
 8027c26:	1b3b      	subs	r3, r7, r4
 8027c28:	f023 0303 	bic.w	r3, r3, #3
 8027c2c:	3304      	adds	r3, #4
 8027c2e:	3401      	adds	r4, #1
 8027c30:	3e03      	subs	r6, #3
 8027c32:	42b4      	cmp	r4, r6
 8027c34:	bf88      	it	hi
 8027c36:	2304      	movhi	r3, #4
 8027c38:	4443      	add	r3, r8
 8027c3a:	2200      	movs	r2, #0
 8027c3c:	f843 2b04 	str.w	r2, [r3], #4
 8027c40:	429f      	cmp	r7, r3
 8027c42:	d2fb      	bcs.n	8027c3c <__hexnan+0xcc>
 8027c44:	683b      	ldr	r3, [r7, #0]
 8027c46:	b91b      	cbnz	r3, 8027c50 <__hexnan+0xe0>
 8027c48:	4547      	cmp	r7, r8
 8027c4a:	d127      	bne.n	8027c9c <__hexnan+0x12c>
 8027c4c:	2301      	movs	r3, #1
 8027c4e:	603b      	str	r3, [r7, #0]
 8027c50:	2005      	movs	r0, #5
 8027c52:	e026      	b.n	8027ca2 <__hexnan+0x132>
 8027c54:	3501      	adds	r5, #1
 8027c56:	2d08      	cmp	r5, #8
 8027c58:	f10b 0b01 	add.w	fp, fp, #1
 8027c5c:	dd06      	ble.n	8027c6c <__hexnan+0xfc>
 8027c5e:	4544      	cmp	r4, r8
 8027c60:	d9c3      	bls.n	8027bea <__hexnan+0x7a>
 8027c62:	2300      	movs	r3, #0
 8027c64:	f844 3c04 	str.w	r3, [r4, #-4]
 8027c68:	2501      	movs	r5, #1
 8027c6a:	3c04      	subs	r4, #4
 8027c6c:	6822      	ldr	r2, [r4, #0]
 8027c6e:	f000 000f 	and.w	r0, r0, #15
 8027c72:	ea40 1202 	orr.w	r2, r0, r2, lsl #4
 8027c76:	6022      	str	r2, [r4, #0]
 8027c78:	e7b7      	b.n	8027bea <__hexnan+0x7a>
 8027c7a:	2508      	movs	r5, #8
 8027c7c:	e7b5      	b.n	8027bea <__hexnan+0x7a>
 8027c7e:	9b01      	ldr	r3, [sp, #4]
 8027c80:	2b00      	cmp	r3, #0
 8027c82:	d0df      	beq.n	8027c44 <__hexnan+0xd4>
 8027c84:	f04f 32ff 	mov.w	r2, #4294967295
 8027c88:	f1c3 0320 	rsb	r3, r3, #32
 8027c8c:	fa22 f303 	lsr.w	r3, r2, r3
 8027c90:	f856 2c04 	ldr.w	r2, [r6, #-4]
 8027c94:	401a      	ands	r2, r3
 8027c96:	f846 2c04 	str.w	r2, [r6, #-4]
 8027c9a:	e7d3      	b.n	8027c44 <__hexnan+0xd4>
 8027c9c:	3f04      	subs	r7, #4
 8027c9e:	e7d1      	b.n	8027c44 <__hexnan+0xd4>
 8027ca0:	2004      	movs	r0, #4
 8027ca2:	b007      	add	sp, #28
 8027ca4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08027ca8 <_localeconv_r>:
 8027ca8:	4800      	ldr	r0, [pc, #0]	; (8027cac <_localeconv_r+0x4>)
 8027caa:	4770      	bx	lr
 8027cac:	2000016c 	.word	0x2000016c

08027cb0 <__retarget_lock_init_recursive>:
 8027cb0:	4770      	bx	lr

08027cb2 <__retarget_lock_acquire_recursive>:
 8027cb2:	4770      	bx	lr

08027cb4 <__retarget_lock_release>:
 8027cb4:	4770      	bx	lr

08027cb6 <__retarget_lock_release_recursive>:
 8027cb6:	4770      	bx	lr

08027cb8 <__ascii_mbtowc>:
 8027cb8:	b082      	sub	sp, #8
 8027cba:	b901      	cbnz	r1, 8027cbe <__ascii_mbtowc+0x6>
 8027cbc:	a901      	add	r1, sp, #4
 8027cbe:	b142      	cbz	r2, 8027cd2 <__ascii_mbtowc+0x1a>
 8027cc0:	b14b      	cbz	r3, 8027cd6 <__ascii_mbtowc+0x1e>
 8027cc2:	7813      	ldrb	r3, [r2, #0]
 8027cc4:	600b      	str	r3, [r1, #0]
 8027cc6:	7812      	ldrb	r2, [r2, #0]
 8027cc8:	1e10      	subs	r0, r2, #0
 8027cca:	bf18      	it	ne
 8027ccc:	2001      	movne	r0, #1
 8027cce:	b002      	add	sp, #8
 8027cd0:	4770      	bx	lr
 8027cd2:	4610      	mov	r0, r2
 8027cd4:	e7fb      	b.n	8027cce <__ascii_mbtowc+0x16>
 8027cd6:	f06f 0001 	mvn.w	r0, #1
 8027cda:	e7f8      	b.n	8027cce <__ascii_mbtowc+0x16>

08027cdc <__malloc_lock>:
 8027cdc:	4801      	ldr	r0, [pc, #4]	; (8027ce4 <__malloc_lock+0x8>)
 8027cde:	f7ff bfe8 	b.w	8027cb2 <__retarget_lock_acquire_recursive>
 8027ce2:	bf00      	nop
 8027ce4:	200008e4 	.word	0x200008e4

08027ce8 <__malloc_unlock>:
 8027ce8:	4801      	ldr	r0, [pc, #4]	; (8027cf0 <__malloc_unlock+0x8>)
 8027cea:	f7ff bfe4 	b.w	8027cb6 <__retarget_lock_release_recursive>
 8027cee:	bf00      	nop
 8027cf0:	200008e4 	.word	0x200008e4

08027cf4 <_Balloc>:
 8027cf4:	b570      	push	{r4, r5, r6, lr}
 8027cf6:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8027cf8:	4604      	mov	r4, r0
 8027cfa:	460d      	mov	r5, r1
 8027cfc:	b976      	cbnz	r6, 8027d1c <_Balloc+0x28>
 8027cfe:	2010      	movs	r0, #16
 8027d00:	f7fd f888 	bl	8024e14 <malloc>
 8027d04:	4602      	mov	r2, r0
 8027d06:	6260      	str	r0, [r4, #36]	; 0x24
 8027d08:	b920      	cbnz	r0, 8027d14 <_Balloc+0x20>
 8027d0a:	4b18      	ldr	r3, [pc, #96]	; (8027d6c <_Balloc+0x78>)
 8027d0c:	4818      	ldr	r0, [pc, #96]	; (8027d70 <_Balloc+0x7c>)
 8027d0e:	2166      	movs	r1, #102	; 0x66
 8027d10:	f000 fe3c 	bl	802898c <__assert_func>
 8027d14:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8027d18:	6006      	str	r6, [r0, #0]
 8027d1a:	60c6      	str	r6, [r0, #12]
 8027d1c:	6a66      	ldr	r6, [r4, #36]	; 0x24
 8027d1e:	68f3      	ldr	r3, [r6, #12]
 8027d20:	b183      	cbz	r3, 8027d44 <_Balloc+0x50>
 8027d22:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8027d24:	68db      	ldr	r3, [r3, #12]
 8027d26:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8027d2a:	b9b8      	cbnz	r0, 8027d5c <_Balloc+0x68>
 8027d2c:	2101      	movs	r1, #1
 8027d2e:	fa01 f605 	lsl.w	r6, r1, r5
 8027d32:	1d72      	adds	r2, r6, #5
 8027d34:	0092      	lsls	r2, r2, #2
 8027d36:	4620      	mov	r0, r4
 8027d38:	f000 fc97 	bl	802866a <_calloc_r>
 8027d3c:	b160      	cbz	r0, 8027d58 <_Balloc+0x64>
 8027d3e:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8027d42:	e00e      	b.n	8027d62 <_Balloc+0x6e>
 8027d44:	2221      	movs	r2, #33	; 0x21
 8027d46:	2104      	movs	r1, #4
 8027d48:	4620      	mov	r0, r4
 8027d4a:	f000 fc8e 	bl	802866a <_calloc_r>
 8027d4e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8027d50:	60f0      	str	r0, [r6, #12]
 8027d52:	68db      	ldr	r3, [r3, #12]
 8027d54:	2b00      	cmp	r3, #0
 8027d56:	d1e4      	bne.n	8027d22 <_Balloc+0x2e>
 8027d58:	2000      	movs	r0, #0
 8027d5a:	bd70      	pop	{r4, r5, r6, pc}
 8027d5c:	6802      	ldr	r2, [r0, #0]
 8027d5e:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8027d62:	2300      	movs	r3, #0
 8027d64:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8027d68:	e7f7      	b.n	8027d5a <_Balloc+0x66>
 8027d6a:	bf00      	nop
 8027d6c:	0802a4ee 	.word	0x0802a4ee
 8027d70:	0802a5f4 	.word	0x0802a5f4

08027d74 <_Bfree>:
 8027d74:	b570      	push	{r4, r5, r6, lr}
 8027d76:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8027d78:	4605      	mov	r5, r0
 8027d7a:	460c      	mov	r4, r1
 8027d7c:	b976      	cbnz	r6, 8027d9c <_Bfree+0x28>
 8027d7e:	2010      	movs	r0, #16
 8027d80:	f7fd f848 	bl	8024e14 <malloc>
 8027d84:	4602      	mov	r2, r0
 8027d86:	6268      	str	r0, [r5, #36]	; 0x24
 8027d88:	b920      	cbnz	r0, 8027d94 <_Bfree+0x20>
 8027d8a:	4b09      	ldr	r3, [pc, #36]	; (8027db0 <_Bfree+0x3c>)
 8027d8c:	4809      	ldr	r0, [pc, #36]	; (8027db4 <_Bfree+0x40>)
 8027d8e:	218a      	movs	r1, #138	; 0x8a
 8027d90:	f000 fdfc 	bl	802898c <__assert_func>
 8027d94:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8027d98:	6006      	str	r6, [r0, #0]
 8027d9a:	60c6      	str	r6, [r0, #12]
 8027d9c:	b13c      	cbz	r4, 8027dae <_Bfree+0x3a>
 8027d9e:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8027da0:	6862      	ldr	r2, [r4, #4]
 8027da2:	68db      	ldr	r3, [r3, #12]
 8027da4:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8027da8:	6021      	str	r1, [r4, #0]
 8027daa:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8027dae:	bd70      	pop	{r4, r5, r6, pc}
 8027db0:	0802a4ee 	.word	0x0802a4ee
 8027db4:	0802a5f4 	.word	0x0802a5f4

08027db8 <__multadd>:
 8027db8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8027dbc:	690e      	ldr	r6, [r1, #16]
 8027dbe:	4607      	mov	r7, r0
 8027dc0:	4698      	mov	r8, r3
 8027dc2:	460c      	mov	r4, r1
 8027dc4:	f101 0014 	add.w	r0, r1, #20
 8027dc8:	2300      	movs	r3, #0
 8027dca:	6805      	ldr	r5, [r0, #0]
 8027dcc:	b2a9      	uxth	r1, r5
 8027dce:	fb02 8101 	mla	r1, r2, r1, r8
 8027dd2:	ea4f 4c11 	mov.w	ip, r1, lsr #16
 8027dd6:	0c2d      	lsrs	r5, r5, #16
 8027dd8:	fb02 c505 	mla	r5, r2, r5, ip
 8027ddc:	b289      	uxth	r1, r1
 8027dde:	3301      	adds	r3, #1
 8027de0:	eb01 4105 	add.w	r1, r1, r5, lsl #16
 8027de4:	429e      	cmp	r6, r3
 8027de6:	f840 1b04 	str.w	r1, [r0], #4
 8027dea:	ea4f 4815 	mov.w	r8, r5, lsr #16
 8027dee:	dcec      	bgt.n	8027dca <__multadd+0x12>
 8027df0:	f1b8 0f00 	cmp.w	r8, #0
 8027df4:	d022      	beq.n	8027e3c <__multadd+0x84>
 8027df6:	68a3      	ldr	r3, [r4, #8]
 8027df8:	42b3      	cmp	r3, r6
 8027dfa:	dc19      	bgt.n	8027e30 <__multadd+0x78>
 8027dfc:	6861      	ldr	r1, [r4, #4]
 8027dfe:	4638      	mov	r0, r7
 8027e00:	3101      	adds	r1, #1
 8027e02:	f7ff ff77 	bl	8027cf4 <_Balloc>
 8027e06:	4605      	mov	r5, r0
 8027e08:	b928      	cbnz	r0, 8027e16 <__multadd+0x5e>
 8027e0a:	4602      	mov	r2, r0
 8027e0c:	4b0d      	ldr	r3, [pc, #52]	; (8027e44 <__multadd+0x8c>)
 8027e0e:	480e      	ldr	r0, [pc, #56]	; (8027e48 <__multadd+0x90>)
 8027e10:	21b5      	movs	r1, #181	; 0xb5
 8027e12:	f000 fdbb 	bl	802898c <__assert_func>
 8027e16:	6922      	ldr	r2, [r4, #16]
 8027e18:	3202      	adds	r2, #2
 8027e1a:	f104 010c 	add.w	r1, r4, #12
 8027e1e:	0092      	lsls	r2, r2, #2
 8027e20:	300c      	adds	r0, #12
 8027e22:	f7fd f815 	bl	8024e50 <memcpy>
 8027e26:	4621      	mov	r1, r4
 8027e28:	4638      	mov	r0, r7
 8027e2a:	f7ff ffa3 	bl	8027d74 <_Bfree>
 8027e2e:	462c      	mov	r4, r5
 8027e30:	eb04 0386 	add.w	r3, r4, r6, lsl #2
 8027e34:	3601      	adds	r6, #1
 8027e36:	f8c3 8014 	str.w	r8, [r3, #20]
 8027e3a:	6126      	str	r6, [r4, #16]
 8027e3c:	4620      	mov	r0, r4
 8027e3e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8027e42:	bf00      	nop
 8027e44:	0802a564 	.word	0x0802a564
 8027e48:	0802a5f4 	.word	0x0802a5f4

08027e4c <__s2b>:
 8027e4c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8027e50:	460c      	mov	r4, r1
 8027e52:	4615      	mov	r5, r2
 8027e54:	461f      	mov	r7, r3
 8027e56:	2209      	movs	r2, #9
 8027e58:	3308      	adds	r3, #8
 8027e5a:	4606      	mov	r6, r0
 8027e5c:	fb93 f3f2 	sdiv	r3, r3, r2
 8027e60:	2100      	movs	r1, #0
 8027e62:	2201      	movs	r2, #1
 8027e64:	429a      	cmp	r2, r3
 8027e66:	db09      	blt.n	8027e7c <__s2b+0x30>
 8027e68:	4630      	mov	r0, r6
 8027e6a:	f7ff ff43 	bl	8027cf4 <_Balloc>
 8027e6e:	b940      	cbnz	r0, 8027e82 <__s2b+0x36>
 8027e70:	4602      	mov	r2, r0
 8027e72:	4b19      	ldr	r3, [pc, #100]	; (8027ed8 <__s2b+0x8c>)
 8027e74:	4819      	ldr	r0, [pc, #100]	; (8027edc <__s2b+0x90>)
 8027e76:	21ce      	movs	r1, #206	; 0xce
 8027e78:	f000 fd88 	bl	802898c <__assert_func>
 8027e7c:	0052      	lsls	r2, r2, #1
 8027e7e:	3101      	adds	r1, #1
 8027e80:	e7f0      	b.n	8027e64 <__s2b+0x18>
 8027e82:	9b08      	ldr	r3, [sp, #32]
 8027e84:	6143      	str	r3, [r0, #20]
 8027e86:	2d09      	cmp	r5, #9
 8027e88:	f04f 0301 	mov.w	r3, #1
 8027e8c:	6103      	str	r3, [r0, #16]
 8027e8e:	dd16      	ble.n	8027ebe <__s2b+0x72>
 8027e90:	f104 0909 	add.w	r9, r4, #9
 8027e94:	46c8      	mov	r8, r9
 8027e96:	442c      	add	r4, r5
 8027e98:	f818 3b01 	ldrb.w	r3, [r8], #1
 8027e9c:	4601      	mov	r1, r0
 8027e9e:	3b30      	subs	r3, #48	; 0x30
 8027ea0:	220a      	movs	r2, #10
 8027ea2:	4630      	mov	r0, r6
 8027ea4:	f7ff ff88 	bl	8027db8 <__multadd>
 8027ea8:	45a0      	cmp	r8, r4
 8027eaa:	d1f5      	bne.n	8027e98 <__s2b+0x4c>
 8027eac:	f1a5 0408 	sub.w	r4, r5, #8
 8027eb0:	444c      	add	r4, r9
 8027eb2:	1b2d      	subs	r5, r5, r4
 8027eb4:	1963      	adds	r3, r4, r5
 8027eb6:	42bb      	cmp	r3, r7
 8027eb8:	db04      	blt.n	8027ec4 <__s2b+0x78>
 8027eba:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8027ebe:	340a      	adds	r4, #10
 8027ec0:	2509      	movs	r5, #9
 8027ec2:	e7f6      	b.n	8027eb2 <__s2b+0x66>
 8027ec4:	f814 3b01 	ldrb.w	r3, [r4], #1
 8027ec8:	4601      	mov	r1, r0
 8027eca:	3b30      	subs	r3, #48	; 0x30
 8027ecc:	220a      	movs	r2, #10
 8027ece:	4630      	mov	r0, r6
 8027ed0:	f7ff ff72 	bl	8027db8 <__multadd>
 8027ed4:	e7ee      	b.n	8027eb4 <__s2b+0x68>
 8027ed6:	bf00      	nop
 8027ed8:	0802a564 	.word	0x0802a564
 8027edc:	0802a5f4 	.word	0x0802a5f4

08027ee0 <__hi0bits>:
 8027ee0:	0c03      	lsrs	r3, r0, #16
 8027ee2:	041b      	lsls	r3, r3, #16
 8027ee4:	b9d3      	cbnz	r3, 8027f1c <__hi0bits+0x3c>
 8027ee6:	0400      	lsls	r0, r0, #16
 8027ee8:	2310      	movs	r3, #16
 8027eea:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 8027eee:	bf04      	itt	eq
 8027ef0:	0200      	lsleq	r0, r0, #8
 8027ef2:	3308      	addeq	r3, #8
 8027ef4:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
 8027ef8:	bf04      	itt	eq
 8027efa:	0100      	lsleq	r0, r0, #4
 8027efc:	3304      	addeq	r3, #4
 8027efe:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
 8027f02:	bf04      	itt	eq
 8027f04:	0080      	lsleq	r0, r0, #2
 8027f06:	3302      	addeq	r3, #2
 8027f08:	2800      	cmp	r0, #0
 8027f0a:	db05      	blt.n	8027f18 <__hi0bits+0x38>
 8027f0c:	f010 4f80 	tst.w	r0, #1073741824	; 0x40000000
 8027f10:	f103 0301 	add.w	r3, r3, #1
 8027f14:	bf08      	it	eq
 8027f16:	2320      	moveq	r3, #32
 8027f18:	4618      	mov	r0, r3
 8027f1a:	4770      	bx	lr
 8027f1c:	2300      	movs	r3, #0
 8027f1e:	e7e4      	b.n	8027eea <__hi0bits+0xa>

08027f20 <__lo0bits>:
 8027f20:	6803      	ldr	r3, [r0, #0]
 8027f22:	f013 0207 	ands.w	r2, r3, #7
 8027f26:	4601      	mov	r1, r0
 8027f28:	d00b      	beq.n	8027f42 <__lo0bits+0x22>
 8027f2a:	07da      	lsls	r2, r3, #31
 8027f2c:	d424      	bmi.n	8027f78 <__lo0bits+0x58>
 8027f2e:	0798      	lsls	r0, r3, #30
 8027f30:	bf49      	itett	mi
 8027f32:	085b      	lsrmi	r3, r3, #1
 8027f34:	089b      	lsrpl	r3, r3, #2
 8027f36:	2001      	movmi	r0, #1
 8027f38:	600b      	strmi	r3, [r1, #0]
 8027f3a:	bf5c      	itt	pl
 8027f3c:	600b      	strpl	r3, [r1, #0]
 8027f3e:	2002      	movpl	r0, #2
 8027f40:	4770      	bx	lr
 8027f42:	b298      	uxth	r0, r3
 8027f44:	b9b0      	cbnz	r0, 8027f74 <__lo0bits+0x54>
 8027f46:	0c1b      	lsrs	r3, r3, #16
 8027f48:	2010      	movs	r0, #16
 8027f4a:	f013 0fff 	tst.w	r3, #255	; 0xff
 8027f4e:	bf04      	itt	eq
 8027f50:	0a1b      	lsreq	r3, r3, #8
 8027f52:	3008      	addeq	r0, #8
 8027f54:	071a      	lsls	r2, r3, #28
 8027f56:	bf04      	itt	eq
 8027f58:	091b      	lsreq	r3, r3, #4
 8027f5a:	3004      	addeq	r0, #4
 8027f5c:	079a      	lsls	r2, r3, #30
 8027f5e:	bf04      	itt	eq
 8027f60:	089b      	lsreq	r3, r3, #2
 8027f62:	3002      	addeq	r0, #2
 8027f64:	07da      	lsls	r2, r3, #31
 8027f66:	d403      	bmi.n	8027f70 <__lo0bits+0x50>
 8027f68:	085b      	lsrs	r3, r3, #1
 8027f6a:	f100 0001 	add.w	r0, r0, #1
 8027f6e:	d005      	beq.n	8027f7c <__lo0bits+0x5c>
 8027f70:	600b      	str	r3, [r1, #0]
 8027f72:	4770      	bx	lr
 8027f74:	4610      	mov	r0, r2
 8027f76:	e7e8      	b.n	8027f4a <__lo0bits+0x2a>
 8027f78:	2000      	movs	r0, #0
 8027f7a:	4770      	bx	lr
 8027f7c:	2020      	movs	r0, #32
 8027f7e:	4770      	bx	lr

08027f80 <__i2b>:
 8027f80:	b510      	push	{r4, lr}
 8027f82:	460c      	mov	r4, r1
 8027f84:	2101      	movs	r1, #1
 8027f86:	f7ff feb5 	bl	8027cf4 <_Balloc>
 8027f8a:	4602      	mov	r2, r0
 8027f8c:	b928      	cbnz	r0, 8027f9a <__i2b+0x1a>
 8027f8e:	4b05      	ldr	r3, [pc, #20]	; (8027fa4 <__i2b+0x24>)
 8027f90:	4805      	ldr	r0, [pc, #20]	; (8027fa8 <__i2b+0x28>)
 8027f92:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8027f96:	f000 fcf9 	bl	802898c <__assert_func>
 8027f9a:	2301      	movs	r3, #1
 8027f9c:	6144      	str	r4, [r0, #20]
 8027f9e:	6103      	str	r3, [r0, #16]
 8027fa0:	bd10      	pop	{r4, pc}
 8027fa2:	bf00      	nop
 8027fa4:	0802a564 	.word	0x0802a564
 8027fa8:	0802a5f4 	.word	0x0802a5f4

08027fac <__multiply>:
 8027fac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027fb0:	4614      	mov	r4, r2
 8027fb2:	690a      	ldr	r2, [r1, #16]
 8027fb4:	6923      	ldr	r3, [r4, #16]
 8027fb6:	429a      	cmp	r2, r3
 8027fb8:	bfb8      	it	lt
 8027fba:	460b      	movlt	r3, r1
 8027fbc:	460d      	mov	r5, r1
 8027fbe:	bfbc      	itt	lt
 8027fc0:	4625      	movlt	r5, r4
 8027fc2:	461c      	movlt	r4, r3
 8027fc4:	f8d5 a010 	ldr.w	sl, [r5, #16]
 8027fc8:	f8d4 9010 	ldr.w	r9, [r4, #16]
 8027fcc:	68ab      	ldr	r3, [r5, #8]
 8027fce:	6869      	ldr	r1, [r5, #4]
 8027fd0:	eb0a 0709 	add.w	r7, sl, r9
 8027fd4:	42bb      	cmp	r3, r7
 8027fd6:	b085      	sub	sp, #20
 8027fd8:	bfb8      	it	lt
 8027fda:	3101      	addlt	r1, #1
 8027fdc:	f7ff fe8a 	bl	8027cf4 <_Balloc>
 8027fe0:	b930      	cbnz	r0, 8027ff0 <__multiply+0x44>
 8027fe2:	4602      	mov	r2, r0
 8027fe4:	4b42      	ldr	r3, [pc, #264]	; (80280f0 <__multiply+0x144>)
 8027fe6:	4843      	ldr	r0, [pc, #268]	; (80280f4 <__multiply+0x148>)
 8027fe8:	f240 115d 	movw	r1, #349	; 0x15d
 8027fec:	f000 fcce 	bl	802898c <__assert_func>
 8027ff0:	f100 0614 	add.w	r6, r0, #20
 8027ff4:	eb06 0887 	add.w	r8, r6, r7, lsl #2
 8027ff8:	4633      	mov	r3, r6
 8027ffa:	2200      	movs	r2, #0
 8027ffc:	4543      	cmp	r3, r8
 8027ffe:	d31e      	bcc.n	802803e <__multiply+0x92>
 8028000:	f105 0c14 	add.w	ip, r5, #20
 8028004:	f104 0314 	add.w	r3, r4, #20
 8028008:	eb0c 0c8a 	add.w	ip, ip, sl, lsl #2
 802800c:	eb03 0289 	add.w	r2, r3, r9, lsl #2
 8028010:	9202      	str	r2, [sp, #8]
 8028012:	ebac 0205 	sub.w	r2, ip, r5
 8028016:	3a15      	subs	r2, #21
 8028018:	f022 0203 	bic.w	r2, r2, #3
 802801c:	3204      	adds	r2, #4
 802801e:	f105 0115 	add.w	r1, r5, #21
 8028022:	458c      	cmp	ip, r1
 8028024:	bf38      	it	cc
 8028026:	2204      	movcc	r2, #4
 8028028:	9201      	str	r2, [sp, #4]
 802802a:	9a02      	ldr	r2, [sp, #8]
 802802c:	9303      	str	r3, [sp, #12]
 802802e:	429a      	cmp	r2, r3
 8028030:	d808      	bhi.n	8028044 <__multiply+0x98>
 8028032:	2f00      	cmp	r7, #0
 8028034:	dc55      	bgt.n	80280e2 <__multiply+0x136>
 8028036:	6107      	str	r7, [r0, #16]
 8028038:	b005      	add	sp, #20
 802803a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802803e:	f843 2b04 	str.w	r2, [r3], #4
 8028042:	e7db      	b.n	8027ffc <__multiply+0x50>
 8028044:	f8b3 a000 	ldrh.w	sl, [r3]
 8028048:	f1ba 0f00 	cmp.w	sl, #0
 802804c:	d020      	beq.n	8028090 <__multiply+0xe4>
 802804e:	f105 0e14 	add.w	lr, r5, #20
 8028052:	46b1      	mov	r9, r6
 8028054:	2200      	movs	r2, #0
 8028056:	f85e 4b04 	ldr.w	r4, [lr], #4
 802805a:	f8d9 b000 	ldr.w	fp, [r9]
 802805e:	b2a1      	uxth	r1, r4
 8028060:	fa1f fb8b 	uxth.w	fp, fp
 8028064:	fb0a b101 	mla	r1, sl, r1, fp
 8028068:	4411      	add	r1, r2
 802806a:	f8d9 2000 	ldr.w	r2, [r9]
 802806e:	0c24      	lsrs	r4, r4, #16
 8028070:	0c12      	lsrs	r2, r2, #16
 8028072:	fb0a 2404 	mla	r4, sl, r4, r2
 8028076:	eb04 4411 	add.w	r4, r4, r1, lsr #16
 802807a:	b289      	uxth	r1, r1
 802807c:	ea41 4104 	orr.w	r1, r1, r4, lsl #16
 8028080:	45f4      	cmp	ip, lr
 8028082:	f849 1b04 	str.w	r1, [r9], #4
 8028086:	ea4f 4214 	mov.w	r2, r4, lsr #16
 802808a:	d8e4      	bhi.n	8028056 <__multiply+0xaa>
 802808c:	9901      	ldr	r1, [sp, #4]
 802808e:	5072      	str	r2, [r6, r1]
 8028090:	9a03      	ldr	r2, [sp, #12]
 8028092:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 8028096:	3304      	adds	r3, #4
 8028098:	f1b9 0f00 	cmp.w	r9, #0
 802809c:	d01f      	beq.n	80280de <__multiply+0x132>
 802809e:	6834      	ldr	r4, [r6, #0]
 80280a0:	f105 0114 	add.w	r1, r5, #20
 80280a4:	46b6      	mov	lr, r6
 80280a6:	f04f 0a00 	mov.w	sl, #0
 80280aa:	880a      	ldrh	r2, [r1, #0]
 80280ac:	f8be b002 	ldrh.w	fp, [lr, #2]
 80280b0:	fb09 b202 	mla	r2, r9, r2, fp
 80280b4:	4492      	add	sl, r2
 80280b6:	b2a4      	uxth	r4, r4
 80280b8:	ea44 440a 	orr.w	r4, r4, sl, lsl #16
 80280bc:	f84e 4b04 	str.w	r4, [lr], #4
 80280c0:	f851 4b04 	ldr.w	r4, [r1], #4
 80280c4:	f8be 2000 	ldrh.w	r2, [lr]
 80280c8:	0c24      	lsrs	r4, r4, #16
 80280ca:	fb09 2404 	mla	r4, r9, r4, r2
 80280ce:	eb04 441a 	add.w	r4, r4, sl, lsr #16
 80280d2:	458c      	cmp	ip, r1
 80280d4:	ea4f 4a14 	mov.w	sl, r4, lsr #16
 80280d8:	d8e7      	bhi.n	80280aa <__multiply+0xfe>
 80280da:	9a01      	ldr	r2, [sp, #4]
 80280dc:	50b4      	str	r4, [r6, r2]
 80280de:	3604      	adds	r6, #4
 80280e0:	e7a3      	b.n	802802a <__multiply+0x7e>
 80280e2:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 80280e6:	2b00      	cmp	r3, #0
 80280e8:	d1a5      	bne.n	8028036 <__multiply+0x8a>
 80280ea:	3f01      	subs	r7, #1
 80280ec:	e7a1      	b.n	8028032 <__multiply+0x86>
 80280ee:	bf00      	nop
 80280f0:	0802a564 	.word	0x0802a564
 80280f4:	0802a5f4 	.word	0x0802a5f4

080280f8 <__pow5mult>:
 80280f8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80280fc:	4615      	mov	r5, r2
 80280fe:	f012 0203 	ands.w	r2, r2, #3
 8028102:	4606      	mov	r6, r0
 8028104:	460f      	mov	r7, r1
 8028106:	d007      	beq.n	8028118 <__pow5mult+0x20>
 8028108:	4c25      	ldr	r4, [pc, #148]	; (80281a0 <__pow5mult+0xa8>)
 802810a:	3a01      	subs	r2, #1
 802810c:	2300      	movs	r3, #0
 802810e:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8028112:	f7ff fe51 	bl	8027db8 <__multadd>
 8028116:	4607      	mov	r7, r0
 8028118:	10ad      	asrs	r5, r5, #2
 802811a:	d03d      	beq.n	8028198 <__pow5mult+0xa0>
 802811c:	6a74      	ldr	r4, [r6, #36]	; 0x24
 802811e:	b97c      	cbnz	r4, 8028140 <__pow5mult+0x48>
 8028120:	2010      	movs	r0, #16
 8028122:	f7fc fe77 	bl	8024e14 <malloc>
 8028126:	4602      	mov	r2, r0
 8028128:	6270      	str	r0, [r6, #36]	; 0x24
 802812a:	b928      	cbnz	r0, 8028138 <__pow5mult+0x40>
 802812c:	4b1d      	ldr	r3, [pc, #116]	; (80281a4 <__pow5mult+0xac>)
 802812e:	481e      	ldr	r0, [pc, #120]	; (80281a8 <__pow5mult+0xb0>)
 8028130:	f44f 71d7 	mov.w	r1, #430	; 0x1ae
 8028134:	f000 fc2a 	bl	802898c <__assert_func>
 8028138:	e9c0 4401 	strd	r4, r4, [r0, #4]
 802813c:	6004      	str	r4, [r0, #0]
 802813e:	60c4      	str	r4, [r0, #12]
 8028140:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 8028144:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8028148:	b94c      	cbnz	r4, 802815e <__pow5mult+0x66>
 802814a:	f240 2171 	movw	r1, #625	; 0x271
 802814e:	4630      	mov	r0, r6
 8028150:	f7ff ff16 	bl	8027f80 <__i2b>
 8028154:	2300      	movs	r3, #0
 8028156:	f8c8 0008 	str.w	r0, [r8, #8]
 802815a:	4604      	mov	r4, r0
 802815c:	6003      	str	r3, [r0, #0]
 802815e:	f04f 0900 	mov.w	r9, #0
 8028162:	07eb      	lsls	r3, r5, #31
 8028164:	d50a      	bpl.n	802817c <__pow5mult+0x84>
 8028166:	4639      	mov	r1, r7
 8028168:	4622      	mov	r2, r4
 802816a:	4630      	mov	r0, r6
 802816c:	f7ff ff1e 	bl	8027fac <__multiply>
 8028170:	4639      	mov	r1, r7
 8028172:	4680      	mov	r8, r0
 8028174:	4630      	mov	r0, r6
 8028176:	f7ff fdfd 	bl	8027d74 <_Bfree>
 802817a:	4647      	mov	r7, r8
 802817c:	106d      	asrs	r5, r5, #1
 802817e:	d00b      	beq.n	8028198 <__pow5mult+0xa0>
 8028180:	6820      	ldr	r0, [r4, #0]
 8028182:	b938      	cbnz	r0, 8028194 <__pow5mult+0x9c>
 8028184:	4622      	mov	r2, r4
 8028186:	4621      	mov	r1, r4
 8028188:	4630      	mov	r0, r6
 802818a:	f7ff ff0f 	bl	8027fac <__multiply>
 802818e:	6020      	str	r0, [r4, #0]
 8028190:	f8c0 9000 	str.w	r9, [r0]
 8028194:	4604      	mov	r4, r0
 8028196:	e7e4      	b.n	8028162 <__pow5mult+0x6a>
 8028198:	4638      	mov	r0, r7
 802819a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802819e:	bf00      	nop
 80281a0:	0802a748 	.word	0x0802a748
 80281a4:	0802a4ee 	.word	0x0802a4ee
 80281a8:	0802a5f4 	.word	0x0802a5f4

080281ac <__lshift>:
 80281ac:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80281b0:	460c      	mov	r4, r1
 80281b2:	6849      	ldr	r1, [r1, #4]
 80281b4:	6923      	ldr	r3, [r4, #16]
 80281b6:	eb03 1862 	add.w	r8, r3, r2, asr #5
 80281ba:	68a3      	ldr	r3, [r4, #8]
 80281bc:	4607      	mov	r7, r0
 80281be:	4691      	mov	r9, r2
 80281c0:	ea4f 1a62 	mov.w	sl, r2, asr #5
 80281c4:	f108 0601 	add.w	r6, r8, #1
 80281c8:	42b3      	cmp	r3, r6
 80281ca:	db0b      	blt.n	80281e4 <__lshift+0x38>
 80281cc:	4638      	mov	r0, r7
 80281ce:	f7ff fd91 	bl	8027cf4 <_Balloc>
 80281d2:	4605      	mov	r5, r0
 80281d4:	b948      	cbnz	r0, 80281ea <__lshift+0x3e>
 80281d6:	4602      	mov	r2, r0
 80281d8:	4b28      	ldr	r3, [pc, #160]	; (802827c <__lshift+0xd0>)
 80281da:	4829      	ldr	r0, [pc, #164]	; (8028280 <__lshift+0xd4>)
 80281dc:	f240 11d9 	movw	r1, #473	; 0x1d9
 80281e0:	f000 fbd4 	bl	802898c <__assert_func>
 80281e4:	3101      	adds	r1, #1
 80281e6:	005b      	lsls	r3, r3, #1
 80281e8:	e7ee      	b.n	80281c8 <__lshift+0x1c>
 80281ea:	2300      	movs	r3, #0
 80281ec:	f100 0114 	add.w	r1, r0, #20
 80281f0:	f100 0210 	add.w	r2, r0, #16
 80281f4:	4618      	mov	r0, r3
 80281f6:	4553      	cmp	r3, sl
 80281f8:	db33      	blt.n	8028262 <__lshift+0xb6>
 80281fa:	6920      	ldr	r0, [r4, #16]
 80281fc:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8028200:	f104 0314 	add.w	r3, r4, #20
 8028204:	f019 091f 	ands.w	r9, r9, #31
 8028208:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 802820c:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8028210:	d02b      	beq.n	802826a <__lshift+0xbe>
 8028212:	f1c9 0e20 	rsb	lr, r9, #32
 8028216:	468a      	mov	sl, r1
 8028218:	2200      	movs	r2, #0
 802821a:	6818      	ldr	r0, [r3, #0]
 802821c:	fa00 f009 	lsl.w	r0, r0, r9
 8028220:	4302      	orrs	r2, r0
 8028222:	f84a 2b04 	str.w	r2, [sl], #4
 8028226:	f853 2b04 	ldr.w	r2, [r3], #4
 802822a:	459c      	cmp	ip, r3
 802822c:	fa22 f20e 	lsr.w	r2, r2, lr
 8028230:	d8f3      	bhi.n	802821a <__lshift+0x6e>
 8028232:	ebac 0304 	sub.w	r3, ip, r4
 8028236:	3b15      	subs	r3, #21
 8028238:	f023 0303 	bic.w	r3, r3, #3
 802823c:	3304      	adds	r3, #4
 802823e:	f104 0015 	add.w	r0, r4, #21
 8028242:	4584      	cmp	ip, r0
 8028244:	bf38      	it	cc
 8028246:	2304      	movcc	r3, #4
 8028248:	50ca      	str	r2, [r1, r3]
 802824a:	b10a      	cbz	r2, 8028250 <__lshift+0xa4>
 802824c:	f108 0602 	add.w	r6, r8, #2
 8028250:	3e01      	subs	r6, #1
 8028252:	4638      	mov	r0, r7
 8028254:	612e      	str	r6, [r5, #16]
 8028256:	4621      	mov	r1, r4
 8028258:	f7ff fd8c 	bl	8027d74 <_Bfree>
 802825c:	4628      	mov	r0, r5
 802825e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8028262:	f842 0f04 	str.w	r0, [r2, #4]!
 8028266:	3301      	adds	r3, #1
 8028268:	e7c5      	b.n	80281f6 <__lshift+0x4a>
 802826a:	3904      	subs	r1, #4
 802826c:	f853 2b04 	ldr.w	r2, [r3], #4
 8028270:	f841 2f04 	str.w	r2, [r1, #4]!
 8028274:	459c      	cmp	ip, r3
 8028276:	d8f9      	bhi.n	802826c <__lshift+0xc0>
 8028278:	e7ea      	b.n	8028250 <__lshift+0xa4>
 802827a:	bf00      	nop
 802827c:	0802a564 	.word	0x0802a564
 8028280:	0802a5f4 	.word	0x0802a5f4

08028284 <__mcmp>:
 8028284:	b530      	push	{r4, r5, lr}
 8028286:	6902      	ldr	r2, [r0, #16]
 8028288:	690c      	ldr	r4, [r1, #16]
 802828a:	1b12      	subs	r2, r2, r4
 802828c:	d10e      	bne.n	80282ac <__mcmp+0x28>
 802828e:	f100 0314 	add.w	r3, r0, #20
 8028292:	3114      	adds	r1, #20
 8028294:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 8028298:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 802829c:	f850 5d04 	ldr.w	r5, [r0, #-4]!
 80282a0:	f851 4d04 	ldr.w	r4, [r1, #-4]!
 80282a4:	42a5      	cmp	r5, r4
 80282a6:	d003      	beq.n	80282b0 <__mcmp+0x2c>
 80282a8:	d305      	bcc.n	80282b6 <__mcmp+0x32>
 80282aa:	2201      	movs	r2, #1
 80282ac:	4610      	mov	r0, r2
 80282ae:	bd30      	pop	{r4, r5, pc}
 80282b0:	4283      	cmp	r3, r0
 80282b2:	d3f3      	bcc.n	802829c <__mcmp+0x18>
 80282b4:	e7fa      	b.n	80282ac <__mcmp+0x28>
 80282b6:	f04f 32ff 	mov.w	r2, #4294967295
 80282ba:	e7f7      	b.n	80282ac <__mcmp+0x28>

080282bc <__mdiff>:
 80282bc:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80282c0:	460c      	mov	r4, r1
 80282c2:	4606      	mov	r6, r0
 80282c4:	4611      	mov	r1, r2
 80282c6:	4620      	mov	r0, r4
 80282c8:	4617      	mov	r7, r2
 80282ca:	f7ff ffdb 	bl	8028284 <__mcmp>
 80282ce:	1e05      	subs	r5, r0, #0
 80282d0:	d110      	bne.n	80282f4 <__mdiff+0x38>
 80282d2:	4629      	mov	r1, r5
 80282d4:	4630      	mov	r0, r6
 80282d6:	f7ff fd0d 	bl	8027cf4 <_Balloc>
 80282da:	b930      	cbnz	r0, 80282ea <__mdiff+0x2e>
 80282dc:	4b39      	ldr	r3, [pc, #228]	; (80283c4 <__mdiff+0x108>)
 80282de:	4602      	mov	r2, r0
 80282e0:	f240 2132 	movw	r1, #562	; 0x232
 80282e4:	4838      	ldr	r0, [pc, #224]	; (80283c8 <__mdiff+0x10c>)
 80282e6:	f000 fb51 	bl	802898c <__assert_func>
 80282ea:	2301      	movs	r3, #1
 80282ec:	e9c0 3504 	strd	r3, r5, [r0, #16]
 80282f0:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80282f4:	bfa4      	itt	ge
 80282f6:	463b      	movge	r3, r7
 80282f8:	4627      	movge	r7, r4
 80282fa:	4630      	mov	r0, r6
 80282fc:	6879      	ldr	r1, [r7, #4]
 80282fe:	bfa6      	itte	ge
 8028300:	461c      	movge	r4, r3
 8028302:	2500      	movge	r5, #0
 8028304:	2501      	movlt	r5, #1
 8028306:	f7ff fcf5 	bl	8027cf4 <_Balloc>
 802830a:	b920      	cbnz	r0, 8028316 <__mdiff+0x5a>
 802830c:	4b2d      	ldr	r3, [pc, #180]	; (80283c4 <__mdiff+0x108>)
 802830e:	4602      	mov	r2, r0
 8028310:	f44f 7110 	mov.w	r1, #576	; 0x240
 8028314:	e7e6      	b.n	80282e4 <__mdiff+0x28>
 8028316:	693e      	ldr	r6, [r7, #16]
 8028318:	60c5      	str	r5, [r0, #12]
 802831a:	6925      	ldr	r5, [r4, #16]
 802831c:	f107 0114 	add.w	r1, r7, #20
 8028320:	f104 0914 	add.w	r9, r4, #20
 8028324:	f100 0e14 	add.w	lr, r0, #20
 8028328:	f107 0210 	add.w	r2, r7, #16
 802832c:	eb01 0c86 	add.w	ip, r1, r6, lsl #2
 8028330:	eb09 0585 	add.w	r5, r9, r5, lsl #2
 8028334:	46f2      	mov	sl, lr
 8028336:	2700      	movs	r7, #0
 8028338:	f859 3b04 	ldr.w	r3, [r9], #4
 802833c:	f852 bf04 	ldr.w	fp, [r2, #4]!
 8028340:	fa1f f883 	uxth.w	r8, r3
 8028344:	fa17 f78b 	uxtah	r7, r7, fp
 8028348:	0c1b      	lsrs	r3, r3, #16
 802834a:	eba7 0808 	sub.w	r8, r7, r8
 802834e:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 8028352:	eb03 4328 	add.w	r3, r3, r8, asr #16
 8028356:	fa1f f888 	uxth.w	r8, r8
 802835a:	141f      	asrs	r7, r3, #16
 802835c:	454d      	cmp	r5, r9
 802835e:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 8028362:	f84a 3b04 	str.w	r3, [sl], #4
 8028366:	d8e7      	bhi.n	8028338 <__mdiff+0x7c>
 8028368:	1b2b      	subs	r3, r5, r4
 802836a:	3b15      	subs	r3, #21
 802836c:	f023 0303 	bic.w	r3, r3, #3
 8028370:	3304      	adds	r3, #4
 8028372:	3415      	adds	r4, #21
 8028374:	42a5      	cmp	r5, r4
 8028376:	bf38      	it	cc
 8028378:	2304      	movcc	r3, #4
 802837a:	4419      	add	r1, r3
 802837c:	4473      	add	r3, lr
 802837e:	469e      	mov	lr, r3
 8028380:	460d      	mov	r5, r1
 8028382:	4565      	cmp	r5, ip
 8028384:	d30e      	bcc.n	80283a4 <__mdiff+0xe8>
 8028386:	f10c 0203 	add.w	r2, ip, #3
 802838a:	1a52      	subs	r2, r2, r1
 802838c:	f022 0203 	bic.w	r2, r2, #3
 8028390:	3903      	subs	r1, #3
 8028392:	458c      	cmp	ip, r1
 8028394:	bf38      	it	cc
 8028396:	2200      	movcc	r2, #0
 8028398:	441a      	add	r2, r3
 802839a:	f852 3d04 	ldr.w	r3, [r2, #-4]!
 802839e:	b17b      	cbz	r3, 80283c0 <__mdiff+0x104>
 80283a0:	6106      	str	r6, [r0, #16]
 80283a2:	e7a5      	b.n	80282f0 <__mdiff+0x34>
 80283a4:	f855 8b04 	ldr.w	r8, [r5], #4
 80283a8:	fa17 f488 	uxtah	r4, r7, r8
 80283ac:	1422      	asrs	r2, r4, #16
 80283ae:	eb02 4218 	add.w	r2, r2, r8, lsr #16
 80283b2:	b2a4      	uxth	r4, r4
 80283b4:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 80283b8:	f84e 4b04 	str.w	r4, [lr], #4
 80283bc:	1417      	asrs	r7, r2, #16
 80283be:	e7e0      	b.n	8028382 <__mdiff+0xc6>
 80283c0:	3e01      	subs	r6, #1
 80283c2:	e7ea      	b.n	802839a <__mdiff+0xde>
 80283c4:	0802a564 	.word	0x0802a564
 80283c8:	0802a5f4 	.word	0x0802a5f4

080283cc <__ulp>:
 80283cc:	b082      	sub	sp, #8
 80283ce:	ed8d 0b00 	vstr	d0, [sp]
 80283d2:	9b01      	ldr	r3, [sp, #4]
 80283d4:	4912      	ldr	r1, [pc, #72]	; (8028420 <__ulp+0x54>)
 80283d6:	4019      	ands	r1, r3
 80283d8:	f1a1 7150 	sub.w	r1, r1, #54525952	; 0x3400000
 80283dc:	2900      	cmp	r1, #0
 80283de:	dd05      	ble.n	80283ec <__ulp+0x20>
 80283e0:	2200      	movs	r2, #0
 80283e2:	460b      	mov	r3, r1
 80283e4:	ec43 2b10 	vmov	d0, r2, r3
 80283e8:	b002      	add	sp, #8
 80283ea:	4770      	bx	lr
 80283ec:	4249      	negs	r1, r1
 80283ee:	f1b1 7fa0 	cmp.w	r1, #20971520	; 0x1400000
 80283f2:	ea4f 5021 	mov.w	r0, r1, asr #20
 80283f6:	f04f 0200 	mov.w	r2, #0
 80283fa:	f04f 0300 	mov.w	r3, #0
 80283fe:	da04      	bge.n	802840a <__ulp+0x3e>
 8028400:	f44f 2100 	mov.w	r1, #524288	; 0x80000
 8028404:	fa41 f300 	asr.w	r3, r1, r0
 8028408:	e7ec      	b.n	80283e4 <__ulp+0x18>
 802840a:	f1a0 0114 	sub.w	r1, r0, #20
 802840e:	291e      	cmp	r1, #30
 8028410:	bfda      	itte	le
 8028412:	f04f 4000 	movle.w	r0, #2147483648	; 0x80000000
 8028416:	fa20 f101 	lsrle.w	r1, r0, r1
 802841a:	2101      	movgt	r1, #1
 802841c:	460a      	mov	r2, r1
 802841e:	e7e1      	b.n	80283e4 <__ulp+0x18>
 8028420:	7ff00000 	.word	0x7ff00000

08028424 <__b2d>:
 8028424:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8028426:	6905      	ldr	r5, [r0, #16]
 8028428:	f100 0714 	add.w	r7, r0, #20
 802842c:	eb07 0585 	add.w	r5, r7, r5, lsl #2
 8028430:	1f2e      	subs	r6, r5, #4
 8028432:	f855 4c04 	ldr.w	r4, [r5, #-4]
 8028436:	4620      	mov	r0, r4
 8028438:	f7ff fd52 	bl	8027ee0 <__hi0bits>
 802843c:	f1c0 0320 	rsb	r3, r0, #32
 8028440:	280a      	cmp	r0, #10
 8028442:	f8df c07c 	ldr.w	ip, [pc, #124]	; 80284c0 <__b2d+0x9c>
 8028446:	600b      	str	r3, [r1, #0]
 8028448:	dc14      	bgt.n	8028474 <__b2d+0x50>
 802844a:	f1c0 0e0b 	rsb	lr, r0, #11
 802844e:	fa24 f10e 	lsr.w	r1, r4, lr
 8028452:	42b7      	cmp	r7, r6
 8028454:	ea41 030c 	orr.w	r3, r1, ip
 8028458:	bf34      	ite	cc
 802845a:	f855 1c08 	ldrcc.w	r1, [r5, #-8]
 802845e:	2100      	movcs	r1, #0
 8028460:	3015      	adds	r0, #21
 8028462:	fa04 f000 	lsl.w	r0, r4, r0
 8028466:	fa21 f10e 	lsr.w	r1, r1, lr
 802846a:	ea40 0201 	orr.w	r2, r0, r1
 802846e:	ec43 2b10 	vmov	d0, r2, r3
 8028472:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8028474:	42b7      	cmp	r7, r6
 8028476:	bf3a      	itte	cc
 8028478:	f855 1c08 	ldrcc.w	r1, [r5, #-8]
 802847c:	f1a5 0608 	subcc.w	r6, r5, #8
 8028480:	2100      	movcs	r1, #0
 8028482:	380b      	subs	r0, #11
 8028484:	d017      	beq.n	80284b6 <__b2d+0x92>
 8028486:	f1c0 0c20 	rsb	ip, r0, #32
 802848a:	fa04 f500 	lsl.w	r5, r4, r0
 802848e:	42be      	cmp	r6, r7
 8028490:	fa21 f40c 	lsr.w	r4, r1, ip
 8028494:	ea45 0504 	orr.w	r5, r5, r4
 8028498:	bf8c      	ite	hi
 802849a:	f856 4c04 	ldrhi.w	r4, [r6, #-4]
 802849e:	2400      	movls	r4, #0
 80284a0:	f045 537f 	orr.w	r3, r5, #1069547520	; 0x3fc00000
 80284a4:	fa01 f000 	lsl.w	r0, r1, r0
 80284a8:	fa24 f40c 	lsr.w	r4, r4, ip
 80284ac:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
 80284b0:	ea40 0204 	orr.w	r2, r0, r4
 80284b4:	e7db      	b.n	802846e <__b2d+0x4a>
 80284b6:	ea44 030c 	orr.w	r3, r4, ip
 80284ba:	460a      	mov	r2, r1
 80284bc:	e7d7      	b.n	802846e <__b2d+0x4a>
 80284be:	bf00      	nop
 80284c0:	3ff00000 	.word	0x3ff00000

080284c4 <__d2b>:
 80284c4:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80284c8:	4689      	mov	r9, r1
 80284ca:	2101      	movs	r1, #1
 80284cc:	ec57 6b10 	vmov	r6, r7, d0
 80284d0:	4690      	mov	r8, r2
 80284d2:	f7ff fc0f 	bl	8027cf4 <_Balloc>
 80284d6:	4604      	mov	r4, r0
 80284d8:	b930      	cbnz	r0, 80284e8 <__d2b+0x24>
 80284da:	4602      	mov	r2, r0
 80284dc:	4b25      	ldr	r3, [pc, #148]	; (8028574 <__d2b+0xb0>)
 80284de:	4826      	ldr	r0, [pc, #152]	; (8028578 <__d2b+0xb4>)
 80284e0:	f240 310a 	movw	r1, #778	; 0x30a
 80284e4:	f000 fa52 	bl	802898c <__assert_func>
 80284e8:	f3c7 550a 	ubfx	r5, r7, #20, #11
 80284ec:	f3c7 0313 	ubfx	r3, r7, #0, #20
 80284f0:	bb35      	cbnz	r5, 8028540 <__d2b+0x7c>
 80284f2:	2e00      	cmp	r6, #0
 80284f4:	9301      	str	r3, [sp, #4]
 80284f6:	d028      	beq.n	802854a <__d2b+0x86>
 80284f8:	4668      	mov	r0, sp
 80284fa:	9600      	str	r6, [sp, #0]
 80284fc:	f7ff fd10 	bl	8027f20 <__lo0bits>
 8028500:	9900      	ldr	r1, [sp, #0]
 8028502:	b300      	cbz	r0, 8028546 <__d2b+0x82>
 8028504:	9a01      	ldr	r2, [sp, #4]
 8028506:	f1c0 0320 	rsb	r3, r0, #32
 802850a:	fa02 f303 	lsl.w	r3, r2, r3
 802850e:	430b      	orrs	r3, r1
 8028510:	40c2      	lsrs	r2, r0
 8028512:	6163      	str	r3, [r4, #20]
 8028514:	9201      	str	r2, [sp, #4]
 8028516:	9b01      	ldr	r3, [sp, #4]
 8028518:	61a3      	str	r3, [r4, #24]
 802851a:	2b00      	cmp	r3, #0
 802851c:	bf14      	ite	ne
 802851e:	2202      	movne	r2, #2
 8028520:	2201      	moveq	r2, #1
 8028522:	6122      	str	r2, [r4, #16]
 8028524:	b1d5      	cbz	r5, 802855c <__d2b+0x98>
 8028526:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 802852a:	4405      	add	r5, r0
 802852c:	f8c9 5000 	str.w	r5, [r9]
 8028530:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 8028534:	f8c8 0000 	str.w	r0, [r8]
 8028538:	4620      	mov	r0, r4
 802853a:	b003      	add	sp, #12
 802853c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8028540:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8028544:	e7d5      	b.n	80284f2 <__d2b+0x2e>
 8028546:	6161      	str	r1, [r4, #20]
 8028548:	e7e5      	b.n	8028516 <__d2b+0x52>
 802854a:	a801      	add	r0, sp, #4
 802854c:	f7ff fce8 	bl	8027f20 <__lo0bits>
 8028550:	9b01      	ldr	r3, [sp, #4]
 8028552:	6163      	str	r3, [r4, #20]
 8028554:	2201      	movs	r2, #1
 8028556:	6122      	str	r2, [r4, #16]
 8028558:	3020      	adds	r0, #32
 802855a:	e7e3      	b.n	8028524 <__d2b+0x60>
 802855c:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8028560:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 8028564:	f8c9 0000 	str.w	r0, [r9]
 8028568:	6918      	ldr	r0, [r3, #16]
 802856a:	f7ff fcb9 	bl	8027ee0 <__hi0bits>
 802856e:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 8028572:	e7df      	b.n	8028534 <__d2b+0x70>
 8028574:	0802a564 	.word	0x0802a564
 8028578:	0802a5f4 	.word	0x0802a5f4

0802857c <__ratio>:
 802857c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028580:	4688      	mov	r8, r1
 8028582:	4669      	mov	r1, sp
 8028584:	4681      	mov	r9, r0
 8028586:	f7ff ff4d 	bl	8028424 <__b2d>
 802858a:	a901      	add	r1, sp, #4
 802858c:	4640      	mov	r0, r8
 802858e:	ec55 4b10 	vmov	r4, r5, d0
 8028592:	f7ff ff47 	bl	8028424 <__b2d>
 8028596:	f8d9 3010 	ldr.w	r3, [r9, #16]
 802859a:	f8d8 2010 	ldr.w	r2, [r8, #16]
 802859e:	eba3 0c02 	sub.w	ip, r3, r2
 80285a2:	e9dd 3200 	ldrd	r3, r2, [sp]
 80285a6:	1a9b      	subs	r3, r3, r2
 80285a8:	eb03 134c 	add.w	r3, r3, ip, lsl #5
 80285ac:	ec51 0b10 	vmov	r0, r1, d0
 80285b0:	2b00      	cmp	r3, #0
 80285b2:	bfd6      	itet	le
 80285b4:	460a      	movle	r2, r1
 80285b6:	462a      	movgt	r2, r5
 80285b8:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 80285bc:	468b      	mov	fp, r1
 80285be:	462f      	mov	r7, r5
 80285c0:	bfd4      	ite	le
 80285c2:	eb02 5b03 	addle.w	fp, r2, r3, lsl #20
 80285c6:	eb02 5703 	addgt.w	r7, r2, r3, lsl #20
 80285ca:	4620      	mov	r0, r4
 80285cc:	ee10 2a10 	vmov	r2, s0
 80285d0:	465b      	mov	r3, fp
 80285d2:	4639      	mov	r1, r7
 80285d4:	f7d8 f95a 	bl	800088c <__aeabi_ddiv>
 80285d8:	ec41 0b10 	vmov	d0, r0, r1
 80285dc:	b003      	add	sp, #12
 80285de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080285e2 <__copybits>:
 80285e2:	3901      	subs	r1, #1
 80285e4:	b570      	push	{r4, r5, r6, lr}
 80285e6:	1149      	asrs	r1, r1, #5
 80285e8:	6914      	ldr	r4, [r2, #16]
 80285ea:	3101      	adds	r1, #1
 80285ec:	f102 0314 	add.w	r3, r2, #20
 80285f0:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 80285f4:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 80285f8:	1f05      	subs	r5, r0, #4
 80285fa:	42a3      	cmp	r3, r4
 80285fc:	d30c      	bcc.n	8028618 <__copybits+0x36>
 80285fe:	1aa3      	subs	r3, r4, r2
 8028600:	3b11      	subs	r3, #17
 8028602:	f023 0303 	bic.w	r3, r3, #3
 8028606:	3211      	adds	r2, #17
 8028608:	42a2      	cmp	r2, r4
 802860a:	bf88      	it	hi
 802860c:	2300      	movhi	r3, #0
 802860e:	4418      	add	r0, r3
 8028610:	2300      	movs	r3, #0
 8028612:	4288      	cmp	r0, r1
 8028614:	d305      	bcc.n	8028622 <__copybits+0x40>
 8028616:	bd70      	pop	{r4, r5, r6, pc}
 8028618:	f853 6b04 	ldr.w	r6, [r3], #4
 802861c:	f845 6f04 	str.w	r6, [r5, #4]!
 8028620:	e7eb      	b.n	80285fa <__copybits+0x18>
 8028622:	f840 3b04 	str.w	r3, [r0], #4
 8028626:	e7f4      	b.n	8028612 <__copybits+0x30>

08028628 <__any_on>:
 8028628:	f100 0214 	add.w	r2, r0, #20
 802862c:	6900      	ldr	r0, [r0, #16]
 802862e:	114b      	asrs	r3, r1, #5
 8028630:	4298      	cmp	r0, r3
 8028632:	b510      	push	{r4, lr}
 8028634:	db11      	blt.n	802865a <__any_on+0x32>
 8028636:	dd0a      	ble.n	802864e <__any_on+0x26>
 8028638:	f011 011f 	ands.w	r1, r1, #31
 802863c:	d007      	beq.n	802864e <__any_on+0x26>
 802863e:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 8028642:	fa24 f001 	lsr.w	r0, r4, r1
 8028646:	fa00 f101 	lsl.w	r1, r0, r1
 802864a:	428c      	cmp	r4, r1
 802864c:	d10b      	bne.n	8028666 <__any_on+0x3e>
 802864e:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8028652:	4293      	cmp	r3, r2
 8028654:	d803      	bhi.n	802865e <__any_on+0x36>
 8028656:	2000      	movs	r0, #0
 8028658:	bd10      	pop	{r4, pc}
 802865a:	4603      	mov	r3, r0
 802865c:	e7f7      	b.n	802864e <__any_on+0x26>
 802865e:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8028662:	2900      	cmp	r1, #0
 8028664:	d0f5      	beq.n	8028652 <__any_on+0x2a>
 8028666:	2001      	movs	r0, #1
 8028668:	e7f6      	b.n	8028658 <__any_on+0x30>

0802866a <_calloc_r>:
 802866a:	b513      	push	{r0, r1, r4, lr}
 802866c:	434a      	muls	r2, r1
 802866e:	4611      	mov	r1, r2
 8028670:	9201      	str	r2, [sp, #4]
 8028672:	f7fc fc6d 	bl	8024f50 <_malloc_r>
 8028676:	4604      	mov	r4, r0
 8028678:	b118      	cbz	r0, 8028682 <_calloc_r+0x18>
 802867a:	9a01      	ldr	r2, [sp, #4]
 802867c:	2100      	movs	r1, #0
 802867e:	f7fc fc0f 	bl	8024ea0 <memset>
 8028682:	4620      	mov	r0, r4
 8028684:	b002      	add	sp, #8
 8028686:	bd10      	pop	{r4, pc}

08028688 <__ssputs_r>:
 8028688:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802868c:	688e      	ldr	r6, [r1, #8]
 802868e:	429e      	cmp	r6, r3
 8028690:	4682      	mov	sl, r0
 8028692:	460c      	mov	r4, r1
 8028694:	4690      	mov	r8, r2
 8028696:	461f      	mov	r7, r3
 8028698:	d838      	bhi.n	802870c <__ssputs_r+0x84>
 802869a:	898a      	ldrh	r2, [r1, #12]
 802869c:	f412 6f90 	tst.w	r2, #1152	; 0x480
 80286a0:	d032      	beq.n	8028708 <__ssputs_r+0x80>
 80286a2:	6825      	ldr	r5, [r4, #0]
 80286a4:	6909      	ldr	r1, [r1, #16]
 80286a6:	eba5 0901 	sub.w	r9, r5, r1
 80286aa:	6965      	ldr	r5, [r4, #20]
 80286ac:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80286b0:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 80286b4:	3301      	adds	r3, #1
 80286b6:	444b      	add	r3, r9
 80286b8:	106d      	asrs	r5, r5, #1
 80286ba:	429d      	cmp	r5, r3
 80286bc:	bf38      	it	cc
 80286be:	461d      	movcc	r5, r3
 80286c0:	0553      	lsls	r3, r2, #21
 80286c2:	d531      	bpl.n	8028728 <__ssputs_r+0xa0>
 80286c4:	4629      	mov	r1, r5
 80286c6:	f7fc fc43 	bl	8024f50 <_malloc_r>
 80286ca:	4606      	mov	r6, r0
 80286cc:	b950      	cbnz	r0, 80286e4 <__ssputs_r+0x5c>
 80286ce:	230c      	movs	r3, #12
 80286d0:	f8ca 3000 	str.w	r3, [sl]
 80286d4:	89a3      	ldrh	r3, [r4, #12]
 80286d6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80286da:	81a3      	strh	r3, [r4, #12]
 80286dc:	f04f 30ff 	mov.w	r0, #4294967295
 80286e0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80286e4:	6921      	ldr	r1, [r4, #16]
 80286e6:	464a      	mov	r2, r9
 80286e8:	f7fc fbb2 	bl	8024e50 <memcpy>
 80286ec:	89a3      	ldrh	r3, [r4, #12]
 80286ee:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 80286f2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80286f6:	81a3      	strh	r3, [r4, #12]
 80286f8:	6126      	str	r6, [r4, #16]
 80286fa:	6165      	str	r5, [r4, #20]
 80286fc:	444e      	add	r6, r9
 80286fe:	eba5 0509 	sub.w	r5, r5, r9
 8028702:	6026      	str	r6, [r4, #0]
 8028704:	60a5      	str	r5, [r4, #8]
 8028706:	463e      	mov	r6, r7
 8028708:	42be      	cmp	r6, r7
 802870a:	d900      	bls.n	802870e <__ssputs_r+0x86>
 802870c:	463e      	mov	r6, r7
 802870e:	4632      	mov	r2, r6
 8028710:	6820      	ldr	r0, [r4, #0]
 8028712:	4641      	mov	r1, r8
 8028714:	f7fc fbaa 	bl	8024e6c <memmove>
 8028718:	68a3      	ldr	r3, [r4, #8]
 802871a:	6822      	ldr	r2, [r4, #0]
 802871c:	1b9b      	subs	r3, r3, r6
 802871e:	4432      	add	r2, r6
 8028720:	60a3      	str	r3, [r4, #8]
 8028722:	6022      	str	r2, [r4, #0]
 8028724:	2000      	movs	r0, #0
 8028726:	e7db      	b.n	80286e0 <__ssputs_r+0x58>
 8028728:	462a      	mov	r2, r5
 802872a:	f000 f95f 	bl	80289ec <_realloc_r>
 802872e:	4606      	mov	r6, r0
 8028730:	2800      	cmp	r0, #0
 8028732:	d1e1      	bne.n	80286f8 <__ssputs_r+0x70>
 8028734:	6921      	ldr	r1, [r4, #16]
 8028736:	4650      	mov	r0, sl
 8028738:	f7fc fbba 	bl	8024eb0 <_free_r>
 802873c:	e7c7      	b.n	80286ce <__ssputs_r+0x46>
	...

08028740 <_svfiprintf_r>:
 8028740:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028744:	4698      	mov	r8, r3
 8028746:	898b      	ldrh	r3, [r1, #12]
 8028748:	061b      	lsls	r3, r3, #24
 802874a:	b09d      	sub	sp, #116	; 0x74
 802874c:	4607      	mov	r7, r0
 802874e:	460d      	mov	r5, r1
 8028750:	4614      	mov	r4, r2
 8028752:	d50e      	bpl.n	8028772 <_svfiprintf_r+0x32>
 8028754:	690b      	ldr	r3, [r1, #16]
 8028756:	b963      	cbnz	r3, 8028772 <_svfiprintf_r+0x32>
 8028758:	2140      	movs	r1, #64	; 0x40
 802875a:	f7fc fbf9 	bl	8024f50 <_malloc_r>
 802875e:	6028      	str	r0, [r5, #0]
 8028760:	6128      	str	r0, [r5, #16]
 8028762:	b920      	cbnz	r0, 802876e <_svfiprintf_r+0x2e>
 8028764:	230c      	movs	r3, #12
 8028766:	603b      	str	r3, [r7, #0]
 8028768:	f04f 30ff 	mov.w	r0, #4294967295
 802876c:	e0d1      	b.n	8028912 <_svfiprintf_r+0x1d2>
 802876e:	2340      	movs	r3, #64	; 0x40
 8028770:	616b      	str	r3, [r5, #20]
 8028772:	2300      	movs	r3, #0
 8028774:	9309      	str	r3, [sp, #36]	; 0x24
 8028776:	2320      	movs	r3, #32
 8028778:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 802877c:	f8cd 800c 	str.w	r8, [sp, #12]
 8028780:	2330      	movs	r3, #48	; 0x30
 8028782:	f8df 81a8 	ldr.w	r8, [pc, #424]	; 802892c <_svfiprintf_r+0x1ec>
 8028786:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 802878a:	f04f 0901 	mov.w	r9, #1
 802878e:	4623      	mov	r3, r4
 8028790:	469a      	mov	sl, r3
 8028792:	f813 2b01 	ldrb.w	r2, [r3], #1
 8028796:	b10a      	cbz	r2, 802879c <_svfiprintf_r+0x5c>
 8028798:	2a25      	cmp	r2, #37	; 0x25
 802879a:	d1f9      	bne.n	8028790 <_svfiprintf_r+0x50>
 802879c:	ebba 0b04 	subs.w	fp, sl, r4
 80287a0:	d00b      	beq.n	80287ba <_svfiprintf_r+0x7a>
 80287a2:	465b      	mov	r3, fp
 80287a4:	4622      	mov	r2, r4
 80287a6:	4629      	mov	r1, r5
 80287a8:	4638      	mov	r0, r7
 80287aa:	f7ff ff6d 	bl	8028688 <__ssputs_r>
 80287ae:	3001      	adds	r0, #1
 80287b0:	f000 80aa 	beq.w	8028908 <_svfiprintf_r+0x1c8>
 80287b4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80287b6:	445a      	add	r2, fp
 80287b8:	9209      	str	r2, [sp, #36]	; 0x24
 80287ba:	f89a 3000 	ldrb.w	r3, [sl]
 80287be:	2b00      	cmp	r3, #0
 80287c0:	f000 80a2 	beq.w	8028908 <_svfiprintf_r+0x1c8>
 80287c4:	2300      	movs	r3, #0
 80287c6:	f04f 32ff 	mov.w	r2, #4294967295
 80287ca:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80287ce:	f10a 0a01 	add.w	sl, sl, #1
 80287d2:	9304      	str	r3, [sp, #16]
 80287d4:	9307      	str	r3, [sp, #28]
 80287d6:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80287da:	931a      	str	r3, [sp, #104]	; 0x68
 80287dc:	4654      	mov	r4, sl
 80287de:	2205      	movs	r2, #5
 80287e0:	f814 1b01 	ldrb.w	r1, [r4], #1
 80287e4:	4851      	ldr	r0, [pc, #324]	; (802892c <_svfiprintf_r+0x1ec>)
 80287e6:	f7d7 fd13 	bl	8000210 <memchr>
 80287ea:	9a04      	ldr	r2, [sp, #16]
 80287ec:	b9d8      	cbnz	r0, 8028826 <_svfiprintf_r+0xe6>
 80287ee:	06d0      	lsls	r0, r2, #27
 80287f0:	bf44      	itt	mi
 80287f2:	2320      	movmi	r3, #32
 80287f4:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80287f8:	0711      	lsls	r1, r2, #28
 80287fa:	bf44      	itt	mi
 80287fc:	232b      	movmi	r3, #43	; 0x2b
 80287fe:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8028802:	f89a 3000 	ldrb.w	r3, [sl]
 8028806:	2b2a      	cmp	r3, #42	; 0x2a
 8028808:	d015      	beq.n	8028836 <_svfiprintf_r+0xf6>
 802880a:	9a07      	ldr	r2, [sp, #28]
 802880c:	4654      	mov	r4, sl
 802880e:	2000      	movs	r0, #0
 8028810:	f04f 0c0a 	mov.w	ip, #10
 8028814:	4621      	mov	r1, r4
 8028816:	f811 3b01 	ldrb.w	r3, [r1], #1
 802881a:	3b30      	subs	r3, #48	; 0x30
 802881c:	2b09      	cmp	r3, #9
 802881e:	d94e      	bls.n	80288be <_svfiprintf_r+0x17e>
 8028820:	b1b0      	cbz	r0, 8028850 <_svfiprintf_r+0x110>
 8028822:	9207      	str	r2, [sp, #28]
 8028824:	e014      	b.n	8028850 <_svfiprintf_r+0x110>
 8028826:	eba0 0308 	sub.w	r3, r0, r8
 802882a:	fa09 f303 	lsl.w	r3, r9, r3
 802882e:	4313      	orrs	r3, r2
 8028830:	9304      	str	r3, [sp, #16]
 8028832:	46a2      	mov	sl, r4
 8028834:	e7d2      	b.n	80287dc <_svfiprintf_r+0x9c>
 8028836:	9b03      	ldr	r3, [sp, #12]
 8028838:	1d19      	adds	r1, r3, #4
 802883a:	681b      	ldr	r3, [r3, #0]
 802883c:	9103      	str	r1, [sp, #12]
 802883e:	2b00      	cmp	r3, #0
 8028840:	bfbb      	ittet	lt
 8028842:	425b      	neglt	r3, r3
 8028844:	f042 0202 	orrlt.w	r2, r2, #2
 8028848:	9307      	strge	r3, [sp, #28]
 802884a:	9307      	strlt	r3, [sp, #28]
 802884c:	bfb8      	it	lt
 802884e:	9204      	strlt	r2, [sp, #16]
 8028850:	7823      	ldrb	r3, [r4, #0]
 8028852:	2b2e      	cmp	r3, #46	; 0x2e
 8028854:	d10c      	bne.n	8028870 <_svfiprintf_r+0x130>
 8028856:	7863      	ldrb	r3, [r4, #1]
 8028858:	2b2a      	cmp	r3, #42	; 0x2a
 802885a:	d135      	bne.n	80288c8 <_svfiprintf_r+0x188>
 802885c:	9b03      	ldr	r3, [sp, #12]
 802885e:	1d1a      	adds	r2, r3, #4
 8028860:	681b      	ldr	r3, [r3, #0]
 8028862:	9203      	str	r2, [sp, #12]
 8028864:	2b00      	cmp	r3, #0
 8028866:	bfb8      	it	lt
 8028868:	f04f 33ff 	movlt.w	r3, #4294967295
 802886c:	3402      	adds	r4, #2
 802886e:	9305      	str	r3, [sp, #20]
 8028870:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 802893c <_svfiprintf_r+0x1fc>
 8028874:	7821      	ldrb	r1, [r4, #0]
 8028876:	2203      	movs	r2, #3
 8028878:	4650      	mov	r0, sl
 802887a:	f7d7 fcc9 	bl	8000210 <memchr>
 802887e:	b140      	cbz	r0, 8028892 <_svfiprintf_r+0x152>
 8028880:	2340      	movs	r3, #64	; 0x40
 8028882:	eba0 000a 	sub.w	r0, r0, sl
 8028886:	fa03 f000 	lsl.w	r0, r3, r0
 802888a:	9b04      	ldr	r3, [sp, #16]
 802888c:	4303      	orrs	r3, r0
 802888e:	3401      	adds	r4, #1
 8028890:	9304      	str	r3, [sp, #16]
 8028892:	f814 1b01 	ldrb.w	r1, [r4], #1
 8028896:	4826      	ldr	r0, [pc, #152]	; (8028930 <_svfiprintf_r+0x1f0>)
 8028898:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 802889c:	2206      	movs	r2, #6
 802889e:	f7d7 fcb7 	bl	8000210 <memchr>
 80288a2:	2800      	cmp	r0, #0
 80288a4:	d038      	beq.n	8028918 <_svfiprintf_r+0x1d8>
 80288a6:	4b23      	ldr	r3, [pc, #140]	; (8028934 <_svfiprintf_r+0x1f4>)
 80288a8:	bb1b      	cbnz	r3, 80288f2 <_svfiprintf_r+0x1b2>
 80288aa:	9b03      	ldr	r3, [sp, #12]
 80288ac:	3307      	adds	r3, #7
 80288ae:	f023 0307 	bic.w	r3, r3, #7
 80288b2:	3308      	adds	r3, #8
 80288b4:	9303      	str	r3, [sp, #12]
 80288b6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80288b8:	4433      	add	r3, r6
 80288ba:	9309      	str	r3, [sp, #36]	; 0x24
 80288bc:	e767      	b.n	802878e <_svfiprintf_r+0x4e>
 80288be:	fb0c 3202 	mla	r2, ip, r2, r3
 80288c2:	460c      	mov	r4, r1
 80288c4:	2001      	movs	r0, #1
 80288c6:	e7a5      	b.n	8028814 <_svfiprintf_r+0xd4>
 80288c8:	2300      	movs	r3, #0
 80288ca:	3401      	adds	r4, #1
 80288cc:	9305      	str	r3, [sp, #20]
 80288ce:	4619      	mov	r1, r3
 80288d0:	f04f 0c0a 	mov.w	ip, #10
 80288d4:	4620      	mov	r0, r4
 80288d6:	f810 2b01 	ldrb.w	r2, [r0], #1
 80288da:	3a30      	subs	r2, #48	; 0x30
 80288dc:	2a09      	cmp	r2, #9
 80288de:	d903      	bls.n	80288e8 <_svfiprintf_r+0x1a8>
 80288e0:	2b00      	cmp	r3, #0
 80288e2:	d0c5      	beq.n	8028870 <_svfiprintf_r+0x130>
 80288e4:	9105      	str	r1, [sp, #20]
 80288e6:	e7c3      	b.n	8028870 <_svfiprintf_r+0x130>
 80288e8:	fb0c 2101 	mla	r1, ip, r1, r2
 80288ec:	4604      	mov	r4, r0
 80288ee:	2301      	movs	r3, #1
 80288f0:	e7f0      	b.n	80288d4 <_svfiprintf_r+0x194>
 80288f2:	ab03      	add	r3, sp, #12
 80288f4:	9300      	str	r3, [sp, #0]
 80288f6:	462a      	mov	r2, r5
 80288f8:	4b0f      	ldr	r3, [pc, #60]	; (8028938 <_svfiprintf_r+0x1f8>)
 80288fa:	a904      	add	r1, sp, #16
 80288fc:	4638      	mov	r0, r7
 80288fe:	f7fc fc21 	bl	8025144 <_printf_float>
 8028902:	1c42      	adds	r2, r0, #1
 8028904:	4606      	mov	r6, r0
 8028906:	d1d6      	bne.n	80288b6 <_svfiprintf_r+0x176>
 8028908:	89ab      	ldrh	r3, [r5, #12]
 802890a:	065b      	lsls	r3, r3, #25
 802890c:	f53f af2c 	bmi.w	8028768 <_svfiprintf_r+0x28>
 8028910:	9809      	ldr	r0, [sp, #36]	; 0x24
 8028912:	b01d      	add	sp, #116	; 0x74
 8028914:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8028918:	ab03      	add	r3, sp, #12
 802891a:	9300      	str	r3, [sp, #0]
 802891c:	462a      	mov	r2, r5
 802891e:	4b06      	ldr	r3, [pc, #24]	; (8028938 <_svfiprintf_r+0x1f8>)
 8028920:	a904      	add	r1, sp, #16
 8028922:	4638      	mov	r0, r7
 8028924:	f7fc feb2 	bl	802568c <_printf_i>
 8028928:	e7eb      	b.n	8028902 <_svfiprintf_r+0x1c2>
 802892a:	bf00      	nop
 802892c:	0802a754 	.word	0x0802a754
 8028930:	0802a75e 	.word	0x0802a75e
 8028934:	08025145 	.word	0x08025145
 8028938:	08028689 	.word	0x08028689
 802893c:	0802a75a 	.word	0x0802a75a

08028940 <nanf>:
 8028940:	ed9f 0a01 	vldr	s0, [pc, #4]	; 8028948 <nanf+0x8>
 8028944:	4770      	bx	lr
 8028946:	bf00      	nop
 8028948:	7fc00000 	.word	0x7fc00000

0802894c <strncmp>:
 802894c:	b510      	push	{r4, lr}
 802894e:	b16a      	cbz	r2, 802896c <strncmp+0x20>
 8028950:	3901      	subs	r1, #1
 8028952:	1884      	adds	r4, r0, r2
 8028954:	f810 3b01 	ldrb.w	r3, [r0], #1
 8028958:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 802895c:	4293      	cmp	r3, r2
 802895e:	d103      	bne.n	8028968 <strncmp+0x1c>
 8028960:	42a0      	cmp	r0, r4
 8028962:	d001      	beq.n	8028968 <strncmp+0x1c>
 8028964:	2b00      	cmp	r3, #0
 8028966:	d1f5      	bne.n	8028954 <strncmp+0x8>
 8028968:	1a98      	subs	r0, r3, r2
 802896a:	bd10      	pop	{r4, pc}
 802896c:	4610      	mov	r0, r2
 802896e:	e7fc      	b.n	802896a <strncmp+0x1e>

08028970 <__ascii_wctomb>:
 8028970:	b149      	cbz	r1, 8028986 <__ascii_wctomb+0x16>
 8028972:	2aff      	cmp	r2, #255	; 0xff
 8028974:	bf85      	ittet	hi
 8028976:	238a      	movhi	r3, #138	; 0x8a
 8028978:	6003      	strhi	r3, [r0, #0]
 802897a:	700a      	strbls	r2, [r1, #0]
 802897c:	f04f 30ff 	movhi.w	r0, #4294967295
 8028980:	bf98      	it	ls
 8028982:	2001      	movls	r0, #1
 8028984:	4770      	bx	lr
 8028986:	4608      	mov	r0, r1
 8028988:	4770      	bx	lr
	...

0802898c <__assert_func>:
 802898c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 802898e:	4614      	mov	r4, r2
 8028990:	461a      	mov	r2, r3
 8028992:	4b09      	ldr	r3, [pc, #36]	; (80289b8 <__assert_func+0x2c>)
 8028994:	681b      	ldr	r3, [r3, #0]
 8028996:	4605      	mov	r5, r0
 8028998:	68d8      	ldr	r0, [r3, #12]
 802899a:	b14c      	cbz	r4, 80289b0 <__assert_func+0x24>
 802899c:	4b07      	ldr	r3, [pc, #28]	; (80289bc <__assert_func+0x30>)
 802899e:	9100      	str	r1, [sp, #0]
 80289a0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80289a4:	4906      	ldr	r1, [pc, #24]	; (80289c0 <__assert_func+0x34>)
 80289a6:	462b      	mov	r3, r5
 80289a8:	f000 f80e 	bl	80289c8 <fiprintf>
 80289ac:	f7fc f9e2 	bl	8024d74 <abort>
 80289b0:	4b04      	ldr	r3, [pc, #16]	; (80289c4 <__assert_func+0x38>)
 80289b2:	461c      	mov	r4, r3
 80289b4:	e7f3      	b.n	802899e <__assert_func+0x12>
 80289b6:	bf00      	nop
 80289b8:	20000010 	.word	0x20000010
 80289bc:	0802a765 	.word	0x0802a765
 80289c0:	0802a772 	.word	0x0802a772
 80289c4:	0802a7a0 	.word	0x0802a7a0

080289c8 <fiprintf>:
 80289c8:	b40e      	push	{r1, r2, r3}
 80289ca:	b503      	push	{r0, r1, lr}
 80289cc:	4601      	mov	r1, r0
 80289ce:	ab03      	add	r3, sp, #12
 80289d0:	4805      	ldr	r0, [pc, #20]	; (80289e8 <fiprintf+0x20>)
 80289d2:	f853 2b04 	ldr.w	r2, [r3], #4
 80289d6:	6800      	ldr	r0, [r0, #0]
 80289d8:	9301      	str	r3, [sp, #4]
 80289da:	f000 f857 	bl	8028a8c <_vfiprintf_r>
 80289de:	b002      	add	sp, #8
 80289e0:	f85d eb04 	ldr.w	lr, [sp], #4
 80289e4:	b003      	add	sp, #12
 80289e6:	4770      	bx	lr
 80289e8:	20000010 	.word	0x20000010

080289ec <_realloc_r>:
 80289ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80289ee:	4607      	mov	r7, r0
 80289f0:	4614      	mov	r4, r2
 80289f2:	460e      	mov	r6, r1
 80289f4:	b921      	cbnz	r1, 8028a00 <_realloc_r+0x14>
 80289f6:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 80289fa:	4611      	mov	r1, r2
 80289fc:	f7fc baa8 	b.w	8024f50 <_malloc_r>
 8028a00:	b922      	cbnz	r2, 8028a0c <_realloc_r+0x20>
 8028a02:	f7fc fa55 	bl	8024eb0 <_free_r>
 8028a06:	4625      	mov	r5, r4
 8028a08:	4628      	mov	r0, r5
 8028a0a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8028a0c:	f000 fc4a 	bl	80292a4 <_malloc_usable_size_r>
 8028a10:	42a0      	cmp	r0, r4
 8028a12:	d20f      	bcs.n	8028a34 <_realloc_r+0x48>
 8028a14:	4621      	mov	r1, r4
 8028a16:	4638      	mov	r0, r7
 8028a18:	f7fc fa9a 	bl	8024f50 <_malloc_r>
 8028a1c:	4605      	mov	r5, r0
 8028a1e:	2800      	cmp	r0, #0
 8028a20:	d0f2      	beq.n	8028a08 <_realloc_r+0x1c>
 8028a22:	4631      	mov	r1, r6
 8028a24:	4622      	mov	r2, r4
 8028a26:	f7fc fa13 	bl	8024e50 <memcpy>
 8028a2a:	4631      	mov	r1, r6
 8028a2c:	4638      	mov	r0, r7
 8028a2e:	f7fc fa3f 	bl	8024eb0 <_free_r>
 8028a32:	e7e9      	b.n	8028a08 <_realloc_r+0x1c>
 8028a34:	4635      	mov	r5, r6
 8028a36:	e7e7      	b.n	8028a08 <_realloc_r+0x1c>

08028a38 <__sfputc_r>:
 8028a38:	6893      	ldr	r3, [r2, #8]
 8028a3a:	3b01      	subs	r3, #1
 8028a3c:	2b00      	cmp	r3, #0
 8028a3e:	b410      	push	{r4}
 8028a40:	6093      	str	r3, [r2, #8]
 8028a42:	da08      	bge.n	8028a56 <__sfputc_r+0x1e>
 8028a44:	6994      	ldr	r4, [r2, #24]
 8028a46:	42a3      	cmp	r3, r4
 8028a48:	db01      	blt.n	8028a4e <__sfputc_r+0x16>
 8028a4a:	290a      	cmp	r1, #10
 8028a4c:	d103      	bne.n	8028a56 <__sfputc_r+0x1e>
 8028a4e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8028a52:	f000 b94b 	b.w	8028cec <__swbuf_r>
 8028a56:	6813      	ldr	r3, [r2, #0]
 8028a58:	1c58      	adds	r0, r3, #1
 8028a5a:	6010      	str	r0, [r2, #0]
 8028a5c:	7019      	strb	r1, [r3, #0]
 8028a5e:	4608      	mov	r0, r1
 8028a60:	f85d 4b04 	ldr.w	r4, [sp], #4
 8028a64:	4770      	bx	lr

08028a66 <__sfputs_r>:
 8028a66:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8028a68:	4606      	mov	r6, r0
 8028a6a:	460f      	mov	r7, r1
 8028a6c:	4614      	mov	r4, r2
 8028a6e:	18d5      	adds	r5, r2, r3
 8028a70:	42ac      	cmp	r4, r5
 8028a72:	d101      	bne.n	8028a78 <__sfputs_r+0x12>
 8028a74:	2000      	movs	r0, #0
 8028a76:	e007      	b.n	8028a88 <__sfputs_r+0x22>
 8028a78:	f814 1b01 	ldrb.w	r1, [r4], #1
 8028a7c:	463a      	mov	r2, r7
 8028a7e:	4630      	mov	r0, r6
 8028a80:	f7ff ffda 	bl	8028a38 <__sfputc_r>
 8028a84:	1c43      	adds	r3, r0, #1
 8028a86:	d1f3      	bne.n	8028a70 <__sfputs_r+0xa>
 8028a88:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08028a8c <_vfiprintf_r>:
 8028a8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028a90:	460d      	mov	r5, r1
 8028a92:	b09d      	sub	sp, #116	; 0x74
 8028a94:	4614      	mov	r4, r2
 8028a96:	4698      	mov	r8, r3
 8028a98:	4606      	mov	r6, r0
 8028a9a:	b118      	cbz	r0, 8028aa4 <_vfiprintf_r+0x18>
 8028a9c:	6983      	ldr	r3, [r0, #24]
 8028a9e:	b90b      	cbnz	r3, 8028aa4 <_vfiprintf_r+0x18>
 8028aa0:	f000 fafe 	bl	80290a0 <__sinit>
 8028aa4:	4b89      	ldr	r3, [pc, #548]	; (8028ccc <_vfiprintf_r+0x240>)
 8028aa6:	429d      	cmp	r5, r3
 8028aa8:	d11b      	bne.n	8028ae2 <_vfiprintf_r+0x56>
 8028aaa:	6875      	ldr	r5, [r6, #4]
 8028aac:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8028aae:	07d9      	lsls	r1, r3, #31
 8028ab0:	d405      	bmi.n	8028abe <_vfiprintf_r+0x32>
 8028ab2:	89ab      	ldrh	r3, [r5, #12]
 8028ab4:	059a      	lsls	r2, r3, #22
 8028ab6:	d402      	bmi.n	8028abe <_vfiprintf_r+0x32>
 8028ab8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8028aba:	f7ff f8fa 	bl	8027cb2 <__retarget_lock_acquire_recursive>
 8028abe:	89ab      	ldrh	r3, [r5, #12]
 8028ac0:	071b      	lsls	r3, r3, #28
 8028ac2:	d501      	bpl.n	8028ac8 <_vfiprintf_r+0x3c>
 8028ac4:	692b      	ldr	r3, [r5, #16]
 8028ac6:	b9eb      	cbnz	r3, 8028b04 <_vfiprintf_r+0x78>
 8028ac8:	4629      	mov	r1, r5
 8028aca:	4630      	mov	r0, r6
 8028acc:	f000 f960 	bl	8028d90 <__swsetup_r>
 8028ad0:	b1c0      	cbz	r0, 8028b04 <_vfiprintf_r+0x78>
 8028ad2:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8028ad4:	07dc      	lsls	r4, r3, #31
 8028ad6:	d50e      	bpl.n	8028af6 <_vfiprintf_r+0x6a>
 8028ad8:	f04f 30ff 	mov.w	r0, #4294967295
 8028adc:	b01d      	add	sp, #116	; 0x74
 8028ade:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8028ae2:	4b7b      	ldr	r3, [pc, #492]	; (8028cd0 <_vfiprintf_r+0x244>)
 8028ae4:	429d      	cmp	r5, r3
 8028ae6:	d101      	bne.n	8028aec <_vfiprintf_r+0x60>
 8028ae8:	68b5      	ldr	r5, [r6, #8]
 8028aea:	e7df      	b.n	8028aac <_vfiprintf_r+0x20>
 8028aec:	4b79      	ldr	r3, [pc, #484]	; (8028cd4 <_vfiprintf_r+0x248>)
 8028aee:	429d      	cmp	r5, r3
 8028af0:	bf08      	it	eq
 8028af2:	68f5      	ldreq	r5, [r6, #12]
 8028af4:	e7da      	b.n	8028aac <_vfiprintf_r+0x20>
 8028af6:	89ab      	ldrh	r3, [r5, #12]
 8028af8:	0598      	lsls	r0, r3, #22
 8028afa:	d4ed      	bmi.n	8028ad8 <_vfiprintf_r+0x4c>
 8028afc:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8028afe:	f7ff f8da 	bl	8027cb6 <__retarget_lock_release_recursive>
 8028b02:	e7e9      	b.n	8028ad8 <_vfiprintf_r+0x4c>
 8028b04:	2300      	movs	r3, #0
 8028b06:	9309      	str	r3, [sp, #36]	; 0x24
 8028b08:	2320      	movs	r3, #32
 8028b0a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8028b0e:	f8cd 800c 	str.w	r8, [sp, #12]
 8028b12:	2330      	movs	r3, #48	; 0x30
 8028b14:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8028cd8 <_vfiprintf_r+0x24c>
 8028b18:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8028b1c:	f04f 0901 	mov.w	r9, #1
 8028b20:	4623      	mov	r3, r4
 8028b22:	469a      	mov	sl, r3
 8028b24:	f813 2b01 	ldrb.w	r2, [r3], #1
 8028b28:	b10a      	cbz	r2, 8028b2e <_vfiprintf_r+0xa2>
 8028b2a:	2a25      	cmp	r2, #37	; 0x25
 8028b2c:	d1f9      	bne.n	8028b22 <_vfiprintf_r+0x96>
 8028b2e:	ebba 0b04 	subs.w	fp, sl, r4
 8028b32:	d00b      	beq.n	8028b4c <_vfiprintf_r+0xc0>
 8028b34:	465b      	mov	r3, fp
 8028b36:	4622      	mov	r2, r4
 8028b38:	4629      	mov	r1, r5
 8028b3a:	4630      	mov	r0, r6
 8028b3c:	f7ff ff93 	bl	8028a66 <__sfputs_r>
 8028b40:	3001      	adds	r0, #1
 8028b42:	f000 80aa 	beq.w	8028c9a <_vfiprintf_r+0x20e>
 8028b46:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8028b48:	445a      	add	r2, fp
 8028b4a:	9209      	str	r2, [sp, #36]	; 0x24
 8028b4c:	f89a 3000 	ldrb.w	r3, [sl]
 8028b50:	2b00      	cmp	r3, #0
 8028b52:	f000 80a2 	beq.w	8028c9a <_vfiprintf_r+0x20e>
 8028b56:	2300      	movs	r3, #0
 8028b58:	f04f 32ff 	mov.w	r2, #4294967295
 8028b5c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8028b60:	f10a 0a01 	add.w	sl, sl, #1
 8028b64:	9304      	str	r3, [sp, #16]
 8028b66:	9307      	str	r3, [sp, #28]
 8028b68:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8028b6c:	931a      	str	r3, [sp, #104]	; 0x68
 8028b6e:	4654      	mov	r4, sl
 8028b70:	2205      	movs	r2, #5
 8028b72:	f814 1b01 	ldrb.w	r1, [r4], #1
 8028b76:	4858      	ldr	r0, [pc, #352]	; (8028cd8 <_vfiprintf_r+0x24c>)
 8028b78:	f7d7 fb4a 	bl	8000210 <memchr>
 8028b7c:	9a04      	ldr	r2, [sp, #16]
 8028b7e:	b9d8      	cbnz	r0, 8028bb8 <_vfiprintf_r+0x12c>
 8028b80:	06d1      	lsls	r1, r2, #27
 8028b82:	bf44      	itt	mi
 8028b84:	2320      	movmi	r3, #32
 8028b86:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8028b8a:	0713      	lsls	r3, r2, #28
 8028b8c:	bf44      	itt	mi
 8028b8e:	232b      	movmi	r3, #43	; 0x2b
 8028b90:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8028b94:	f89a 3000 	ldrb.w	r3, [sl]
 8028b98:	2b2a      	cmp	r3, #42	; 0x2a
 8028b9a:	d015      	beq.n	8028bc8 <_vfiprintf_r+0x13c>
 8028b9c:	9a07      	ldr	r2, [sp, #28]
 8028b9e:	4654      	mov	r4, sl
 8028ba0:	2000      	movs	r0, #0
 8028ba2:	f04f 0c0a 	mov.w	ip, #10
 8028ba6:	4621      	mov	r1, r4
 8028ba8:	f811 3b01 	ldrb.w	r3, [r1], #1
 8028bac:	3b30      	subs	r3, #48	; 0x30
 8028bae:	2b09      	cmp	r3, #9
 8028bb0:	d94e      	bls.n	8028c50 <_vfiprintf_r+0x1c4>
 8028bb2:	b1b0      	cbz	r0, 8028be2 <_vfiprintf_r+0x156>
 8028bb4:	9207      	str	r2, [sp, #28]
 8028bb6:	e014      	b.n	8028be2 <_vfiprintf_r+0x156>
 8028bb8:	eba0 0308 	sub.w	r3, r0, r8
 8028bbc:	fa09 f303 	lsl.w	r3, r9, r3
 8028bc0:	4313      	orrs	r3, r2
 8028bc2:	9304      	str	r3, [sp, #16]
 8028bc4:	46a2      	mov	sl, r4
 8028bc6:	e7d2      	b.n	8028b6e <_vfiprintf_r+0xe2>
 8028bc8:	9b03      	ldr	r3, [sp, #12]
 8028bca:	1d19      	adds	r1, r3, #4
 8028bcc:	681b      	ldr	r3, [r3, #0]
 8028bce:	9103      	str	r1, [sp, #12]
 8028bd0:	2b00      	cmp	r3, #0
 8028bd2:	bfbb      	ittet	lt
 8028bd4:	425b      	neglt	r3, r3
 8028bd6:	f042 0202 	orrlt.w	r2, r2, #2
 8028bda:	9307      	strge	r3, [sp, #28]
 8028bdc:	9307      	strlt	r3, [sp, #28]
 8028bde:	bfb8      	it	lt
 8028be0:	9204      	strlt	r2, [sp, #16]
 8028be2:	7823      	ldrb	r3, [r4, #0]
 8028be4:	2b2e      	cmp	r3, #46	; 0x2e
 8028be6:	d10c      	bne.n	8028c02 <_vfiprintf_r+0x176>
 8028be8:	7863      	ldrb	r3, [r4, #1]
 8028bea:	2b2a      	cmp	r3, #42	; 0x2a
 8028bec:	d135      	bne.n	8028c5a <_vfiprintf_r+0x1ce>
 8028bee:	9b03      	ldr	r3, [sp, #12]
 8028bf0:	1d1a      	adds	r2, r3, #4
 8028bf2:	681b      	ldr	r3, [r3, #0]
 8028bf4:	9203      	str	r2, [sp, #12]
 8028bf6:	2b00      	cmp	r3, #0
 8028bf8:	bfb8      	it	lt
 8028bfa:	f04f 33ff 	movlt.w	r3, #4294967295
 8028bfe:	3402      	adds	r4, #2
 8028c00:	9305      	str	r3, [sp, #20]
 8028c02:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8028ce8 <_vfiprintf_r+0x25c>
 8028c06:	7821      	ldrb	r1, [r4, #0]
 8028c08:	2203      	movs	r2, #3
 8028c0a:	4650      	mov	r0, sl
 8028c0c:	f7d7 fb00 	bl	8000210 <memchr>
 8028c10:	b140      	cbz	r0, 8028c24 <_vfiprintf_r+0x198>
 8028c12:	2340      	movs	r3, #64	; 0x40
 8028c14:	eba0 000a 	sub.w	r0, r0, sl
 8028c18:	fa03 f000 	lsl.w	r0, r3, r0
 8028c1c:	9b04      	ldr	r3, [sp, #16]
 8028c1e:	4303      	orrs	r3, r0
 8028c20:	3401      	adds	r4, #1
 8028c22:	9304      	str	r3, [sp, #16]
 8028c24:	f814 1b01 	ldrb.w	r1, [r4], #1
 8028c28:	482c      	ldr	r0, [pc, #176]	; (8028cdc <_vfiprintf_r+0x250>)
 8028c2a:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8028c2e:	2206      	movs	r2, #6
 8028c30:	f7d7 faee 	bl	8000210 <memchr>
 8028c34:	2800      	cmp	r0, #0
 8028c36:	d03f      	beq.n	8028cb8 <_vfiprintf_r+0x22c>
 8028c38:	4b29      	ldr	r3, [pc, #164]	; (8028ce0 <_vfiprintf_r+0x254>)
 8028c3a:	bb1b      	cbnz	r3, 8028c84 <_vfiprintf_r+0x1f8>
 8028c3c:	9b03      	ldr	r3, [sp, #12]
 8028c3e:	3307      	adds	r3, #7
 8028c40:	f023 0307 	bic.w	r3, r3, #7
 8028c44:	3308      	adds	r3, #8
 8028c46:	9303      	str	r3, [sp, #12]
 8028c48:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8028c4a:	443b      	add	r3, r7
 8028c4c:	9309      	str	r3, [sp, #36]	; 0x24
 8028c4e:	e767      	b.n	8028b20 <_vfiprintf_r+0x94>
 8028c50:	fb0c 3202 	mla	r2, ip, r2, r3
 8028c54:	460c      	mov	r4, r1
 8028c56:	2001      	movs	r0, #1
 8028c58:	e7a5      	b.n	8028ba6 <_vfiprintf_r+0x11a>
 8028c5a:	2300      	movs	r3, #0
 8028c5c:	3401      	adds	r4, #1
 8028c5e:	9305      	str	r3, [sp, #20]
 8028c60:	4619      	mov	r1, r3
 8028c62:	f04f 0c0a 	mov.w	ip, #10
 8028c66:	4620      	mov	r0, r4
 8028c68:	f810 2b01 	ldrb.w	r2, [r0], #1
 8028c6c:	3a30      	subs	r2, #48	; 0x30
 8028c6e:	2a09      	cmp	r2, #9
 8028c70:	d903      	bls.n	8028c7a <_vfiprintf_r+0x1ee>
 8028c72:	2b00      	cmp	r3, #0
 8028c74:	d0c5      	beq.n	8028c02 <_vfiprintf_r+0x176>
 8028c76:	9105      	str	r1, [sp, #20]
 8028c78:	e7c3      	b.n	8028c02 <_vfiprintf_r+0x176>
 8028c7a:	fb0c 2101 	mla	r1, ip, r1, r2
 8028c7e:	4604      	mov	r4, r0
 8028c80:	2301      	movs	r3, #1
 8028c82:	e7f0      	b.n	8028c66 <_vfiprintf_r+0x1da>
 8028c84:	ab03      	add	r3, sp, #12
 8028c86:	9300      	str	r3, [sp, #0]
 8028c88:	462a      	mov	r2, r5
 8028c8a:	4b16      	ldr	r3, [pc, #88]	; (8028ce4 <_vfiprintf_r+0x258>)
 8028c8c:	a904      	add	r1, sp, #16
 8028c8e:	4630      	mov	r0, r6
 8028c90:	f7fc fa58 	bl	8025144 <_printf_float>
 8028c94:	4607      	mov	r7, r0
 8028c96:	1c78      	adds	r0, r7, #1
 8028c98:	d1d6      	bne.n	8028c48 <_vfiprintf_r+0x1bc>
 8028c9a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8028c9c:	07d9      	lsls	r1, r3, #31
 8028c9e:	d405      	bmi.n	8028cac <_vfiprintf_r+0x220>
 8028ca0:	89ab      	ldrh	r3, [r5, #12]
 8028ca2:	059a      	lsls	r2, r3, #22
 8028ca4:	d402      	bmi.n	8028cac <_vfiprintf_r+0x220>
 8028ca6:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8028ca8:	f7ff f805 	bl	8027cb6 <__retarget_lock_release_recursive>
 8028cac:	89ab      	ldrh	r3, [r5, #12]
 8028cae:	065b      	lsls	r3, r3, #25
 8028cb0:	f53f af12 	bmi.w	8028ad8 <_vfiprintf_r+0x4c>
 8028cb4:	9809      	ldr	r0, [sp, #36]	; 0x24
 8028cb6:	e711      	b.n	8028adc <_vfiprintf_r+0x50>
 8028cb8:	ab03      	add	r3, sp, #12
 8028cba:	9300      	str	r3, [sp, #0]
 8028cbc:	462a      	mov	r2, r5
 8028cbe:	4b09      	ldr	r3, [pc, #36]	; (8028ce4 <_vfiprintf_r+0x258>)
 8028cc0:	a904      	add	r1, sp, #16
 8028cc2:	4630      	mov	r0, r6
 8028cc4:	f7fc fce2 	bl	802568c <_printf_i>
 8028cc8:	e7e4      	b.n	8028c94 <_vfiprintf_r+0x208>
 8028cca:	bf00      	nop
 8028ccc:	0802a7c4 	.word	0x0802a7c4
 8028cd0:	0802a7e4 	.word	0x0802a7e4
 8028cd4:	0802a7a4 	.word	0x0802a7a4
 8028cd8:	0802a754 	.word	0x0802a754
 8028cdc:	0802a75e 	.word	0x0802a75e
 8028ce0:	08025145 	.word	0x08025145
 8028ce4:	08028a67 	.word	0x08028a67
 8028ce8:	0802a75a 	.word	0x0802a75a

08028cec <__swbuf_r>:
 8028cec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8028cee:	460e      	mov	r6, r1
 8028cf0:	4614      	mov	r4, r2
 8028cf2:	4605      	mov	r5, r0
 8028cf4:	b118      	cbz	r0, 8028cfe <__swbuf_r+0x12>
 8028cf6:	6983      	ldr	r3, [r0, #24]
 8028cf8:	b90b      	cbnz	r3, 8028cfe <__swbuf_r+0x12>
 8028cfa:	f000 f9d1 	bl	80290a0 <__sinit>
 8028cfe:	4b21      	ldr	r3, [pc, #132]	; (8028d84 <__swbuf_r+0x98>)
 8028d00:	429c      	cmp	r4, r3
 8028d02:	d12b      	bne.n	8028d5c <__swbuf_r+0x70>
 8028d04:	686c      	ldr	r4, [r5, #4]
 8028d06:	69a3      	ldr	r3, [r4, #24]
 8028d08:	60a3      	str	r3, [r4, #8]
 8028d0a:	89a3      	ldrh	r3, [r4, #12]
 8028d0c:	071a      	lsls	r2, r3, #28
 8028d0e:	d52f      	bpl.n	8028d70 <__swbuf_r+0x84>
 8028d10:	6923      	ldr	r3, [r4, #16]
 8028d12:	b36b      	cbz	r3, 8028d70 <__swbuf_r+0x84>
 8028d14:	6923      	ldr	r3, [r4, #16]
 8028d16:	6820      	ldr	r0, [r4, #0]
 8028d18:	1ac0      	subs	r0, r0, r3
 8028d1a:	6963      	ldr	r3, [r4, #20]
 8028d1c:	b2f6      	uxtb	r6, r6
 8028d1e:	4283      	cmp	r3, r0
 8028d20:	4637      	mov	r7, r6
 8028d22:	dc04      	bgt.n	8028d2e <__swbuf_r+0x42>
 8028d24:	4621      	mov	r1, r4
 8028d26:	4628      	mov	r0, r5
 8028d28:	f000 f926 	bl	8028f78 <_fflush_r>
 8028d2c:	bb30      	cbnz	r0, 8028d7c <__swbuf_r+0x90>
 8028d2e:	68a3      	ldr	r3, [r4, #8]
 8028d30:	3b01      	subs	r3, #1
 8028d32:	60a3      	str	r3, [r4, #8]
 8028d34:	6823      	ldr	r3, [r4, #0]
 8028d36:	1c5a      	adds	r2, r3, #1
 8028d38:	6022      	str	r2, [r4, #0]
 8028d3a:	701e      	strb	r6, [r3, #0]
 8028d3c:	6963      	ldr	r3, [r4, #20]
 8028d3e:	3001      	adds	r0, #1
 8028d40:	4283      	cmp	r3, r0
 8028d42:	d004      	beq.n	8028d4e <__swbuf_r+0x62>
 8028d44:	89a3      	ldrh	r3, [r4, #12]
 8028d46:	07db      	lsls	r3, r3, #31
 8028d48:	d506      	bpl.n	8028d58 <__swbuf_r+0x6c>
 8028d4a:	2e0a      	cmp	r6, #10
 8028d4c:	d104      	bne.n	8028d58 <__swbuf_r+0x6c>
 8028d4e:	4621      	mov	r1, r4
 8028d50:	4628      	mov	r0, r5
 8028d52:	f000 f911 	bl	8028f78 <_fflush_r>
 8028d56:	b988      	cbnz	r0, 8028d7c <__swbuf_r+0x90>
 8028d58:	4638      	mov	r0, r7
 8028d5a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8028d5c:	4b0a      	ldr	r3, [pc, #40]	; (8028d88 <__swbuf_r+0x9c>)
 8028d5e:	429c      	cmp	r4, r3
 8028d60:	d101      	bne.n	8028d66 <__swbuf_r+0x7a>
 8028d62:	68ac      	ldr	r4, [r5, #8]
 8028d64:	e7cf      	b.n	8028d06 <__swbuf_r+0x1a>
 8028d66:	4b09      	ldr	r3, [pc, #36]	; (8028d8c <__swbuf_r+0xa0>)
 8028d68:	429c      	cmp	r4, r3
 8028d6a:	bf08      	it	eq
 8028d6c:	68ec      	ldreq	r4, [r5, #12]
 8028d6e:	e7ca      	b.n	8028d06 <__swbuf_r+0x1a>
 8028d70:	4621      	mov	r1, r4
 8028d72:	4628      	mov	r0, r5
 8028d74:	f000 f80c 	bl	8028d90 <__swsetup_r>
 8028d78:	2800      	cmp	r0, #0
 8028d7a:	d0cb      	beq.n	8028d14 <__swbuf_r+0x28>
 8028d7c:	f04f 37ff 	mov.w	r7, #4294967295
 8028d80:	e7ea      	b.n	8028d58 <__swbuf_r+0x6c>
 8028d82:	bf00      	nop
 8028d84:	0802a7c4 	.word	0x0802a7c4
 8028d88:	0802a7e4 	.word	0x0802a7e4
 8028d8c:	0802a7a4 	.word	0x0802a7a4

08028d90 <__swsetup_r>:
 8028d90:	4b32      	ldr	r3, [pc, #200]	; (8028e5c <__swsetup_r+0xcc>)
 8028d92:	b570      	push	{r4, r5, r6, lr}
 8028d94:	681d      	ldr	r5, [r3, #0]
 8028d96:	4606      	mov	r6, r0
 8028d98:	460c      	mov	r4, r1
 8028d9a:	b125      	cbz	r5, 8028da6 <__swsetup_r+0x16>
 8028d9c:	69ab      	ldr	r3, [r5, #24]
 8028d9e:	b913      	cbnz	r3, 8028da6 <__swsetup_r+0x16>
 8028da0:	4628      	mov	r0, r5
 8028da2:	f000 f97d 	bl	80290a0 <__sinit>
 8028da6:	4b2e      	ldr	r3, [pc, #184]	; (8028e60 <__swsetup_r+0xd0>)
 8028da8:	429c      	cmp	r4, r3
 8028daa:	d10f      	bne.n	8028dcc <__swsetup_r+0x3c>
 8028dac:	686c      	ldr	r4, [r5, #4]
 8028dae:	89a3      	ldrh	r3, [r4, #12]
 8028db0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8028db4:	0719      	lsls	r1, r3, #28
 8028db6:	d42c      	bmi.n	8028e12 <__swsetup_r+0x82>
 8028db8:	06dd      	lsls	r5, r3, #27
 8028dba:	d411      	bmi.n	8028de0 <__swsetup_r+0x50>
 8028dbc:	2309      	movs	r3, #9
 8028dbe:	6033      	str	r3, [r6, #0]
 8028dc0:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8028dc4:	81a3      	strh	r3, [r4, #12]
 8028dc6:	f04f 30ff 	mov.w	r0, #4294967295
 8028dca:	e03e      	b.n	8028e4a <__swsetup_r+0xba>
 8028dcc:	4b25      	ldr	r3, [pc, #148]	; (8028e64 <__swsetup_r+0xd4>)
 8028dce:	429c      	cmp	r4, r3
 8028dd0:	d101      	bne.n	8028dd6 <__swsetup_r+0x46>
 8028dd2:	68ac      	ldr	r4, [r5, #8]
 8028dd4:	e7eb      	b.n	8028dae <__swsetup_r+0x1e>
 8028dd6:	4b24      	ldr	r3, [pc, #144]	; (8028e68 <__swsetup_r+0xd8>)
 8028dd8:	429c      	cmp	r4, r3
 8028dda:	bf08      	it	eq
 8028ddc:	68ec      	ldreq	r4, [r5, #12]
 8028dde:	e7e6      	b.n	8028dae <__swsetup_r+0x1e>
 8028de0:	0758      	lsls	r0, r3, #29
 8028de2:	d512      	bpl.n	8028e0a <__swsetup_r+0x7a>
 8028de4:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8028de6:	b141      	cbz	r1, 8028dfa <__swsetup_r+0x6a>
 8028de8:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8028dec:	4299      	cmp	r1, r3
 8028dee:	d002      	beq.n	8028df6 <__swsetup_r+0x66>
 8028df0:	4630      	mov	r0, r6
 8028df2:	f7fc f85d 	bl	8024eb0 <_free_r>
 8028df6:	2300      	movs	r3, #0
 8028df8:	6363      	str	r3, [r4, #52]	; 0x34
 8028dfa:	89a3      	ldrh	r3, [r4, #12]
 8028dfc:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8028e00:	81a3      	strh	r3, [r4, #12]
 8028e02:	2300      	movs	r3, #0
 8028e04:	6063      	str	r3, [r4, #4]
 8028e06:	6923      	ldr	r3, [r4, #16]
 8028e08:	6023      	str	r3, [r4, #0]
 8028e0a:	89a3      	ldrh	r3, [r4, #12]
 8028e0c:	f043 0308 	orr.w	r3, r3, #8
 8028e10:	81a3      	strh	r3, [r4, #12]
 8028e12:	6923      	ldr	r3, [r4, #16]
 8028e14:	b94b      	cbnz	r3, 8028e2a <__swsetup_r+0x9a>
 8028e16:	89a3      	ldrh	r3, [r4, #12]
 8028e18:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8028e1c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8028e20:	d003      	beq.n	8028e2a <__swsetup_r+0x9a>
 8028e22:	4621      	mov	r1, r4
 8028e24:	4630      	mov	r0, r6
 8028e26:	f000 f9fd 	bl	8029224 <__smakebuf_r>
 8028e2a:	89a0      	ldrh	r0, [r4, #12]
 8028e2c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8028e30:	f010 0301 	ands.w	r3, r0, #1
 8028e34:	d00a      	beq.n	8028e4c <__swsetup_r+0xbc>
 8028e36:	2300      	movs	r3, #0
 8028e38:	60a3      	str	r3, [r4, #8]
 8028e3a:	6963      	ldr	r3, [r4, #20]
 8028e3c:	425b      	negs	r3, r3
 8028e3e:	61a3      	str	r3, [r4, #24]
 8028e40:	6923      	ldr	r3, [r4, #16]
 8028e42:	b943      	cbnz	r3, 8028e56 <__swsetup_r+0xc6>
 8028e44:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8028e48:	d1ba      	bne.n	8028dc0 <__swsetup_r+0x30>
 8028e4a:	bd70      	pop	{r4, r5, r6, pc}
 8028e4c:	0781      	lsls	r1, r0, #30
 8028e4e:	bf58      	it	pl
 8028e50:	6963      	ldrpl	r3, [r4, #20]
 8028e52:	60a3      	str	r3, [r4, #8]
 8028e54:	e7f4      	b.n	8028e40 <__swsetup_r+0xb0>
 8028e56:	2000      	movs	r0, #0
 8028e58:	e7f7      	b.n	8028e4a <__swsetup_r+0xba>
 8028e5a:	bf00      	nop
 8028e5c:	20000010 	.word	0x20000010
 8028e60:	0802a7c4 	.word	0x0802a7c4
 8028e64:	0802a7e4 	.word	0x0802a7e4
 8028e68:	0802a7a4 	.word	0x0802a7a4

08028e6c <__sflush_r>:
 8028e6c:	898a      	ldrh	r2, [r1, #12]
 8028e6e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028e72:	4605      	mov	r5, r0
 8028e74:	0710      	lsls	r0, r2, #28
 8028e76:	460c      	mov	r4, r1
 8028e78:	d458      	bmi.n	8028f2c <__sflush_r+0xc0>
 8028e7a:	684b      	ldr	r3, [r1, #4]
 8028e7c:	2b00      	cmp	r3, #0
 8028e7e:	dc05      	bgt.n	8028e8c <__sflush_r+0x20>
 8028e80:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8028e82:	2b00      	cmp	r3, #0
 8028e84:	dc02      	bgt.n	8028e8c <__sflush_r+0x20>
 8028e86:	2000      	movs	r0, #0
 8028e88:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8028e8c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8028e8e:	2e00      	cmp	r6, #0
 8028e90:	d0f9      	beq.n	8028e86 <__sflush_r+0x1a>
 8028e92:	2300      	movs	r3, #0
 8028e94:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8028e98:	682f      	ldr	r7, [r5, #0]
 8028e9a:	602b      	str	r3, [r5, #0]
 8028e9c:	d032      	beq.n	8028f04 <__sflush_r+0x98>
 8028e9e:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8028ea0:	89a3      	ldrh	r3, [r4, #12]
 8028ea2:	075a      	lsls	r2, r3, #29
 8028ea4:	d505      	bpl.n	8028eb2 <__sflush_r+0x46>
 8028ea6:	6863      	ldr	r3, [r4, #4]
 8028ea8:	1ac0      	subs	r0, r0, r3
 8028eaa:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8028eac:	b10b      	cbz	r3, 8028eb2 <__sflush_r+0x46>
 8028eae:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8028eb0:	1ac0      	subs	r0, r0, r3
 8028eb2:	2300      	movs	r3, #0
 8028eb4:	4602      	mov	r2, r0
 8028eb6:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8028eb8:	6a21      	ldr	r1, [r4, #32]
 8028eba:	4628      	mov	r0, r5
 8028ebc:	47b0      	blx	r6
 8028ebe:	1c43      	adds	r3, r0, #1
 8028ec0:	89a3      	ldrh	r3, [r4, #12]
 8028ec2:	d106      	bne.n	8028ed2 <__sflush_r+0x66>
 8028ec4:	6829      	ldr	r1, [r5, #0]
 8028ec6:	291d      	cmp	r1, #29
 8028ec8:	d82c      	bhi.n	8028f24 <__sflush_r+0xb8>
 8028eca:	4a2a      	ldr	r2, [pc, #168]	; (8028f74 <__sflush_r+0x108>)
 8028ecc:	40ca      	lsrs	r2, r1
 8028ece:	07d6      	lsls	r6, r2, #31
 8028ed0:	d528      	bpl.n	8028f24 <__sflush_r+0xb8>
 8028ed2:	2200      	movs	r2, #0
 8028ed4:	6062      	str	r2, [r4, #4]
 8028ed6:	04d9      	lsls	r1, r3, #19
 8028ed8:	6922      	ldr	r2, [r4, #16]
 8028eda:	6022      	str	r2, [r4, #0]
 8028edc:	d504      	bpl.n	8028ee8 <__sflush_r+0x7c>
 8028ede:	1c42      	adds	r2, r0, #1
 8028ee0:	d101      	bne.n	8028ee6 <__sflush_r+0x7a>
 8028ee2:	682b      	ldr	r3, [r5, #0]
 8028ee4:	b903      	cbnz	r3, 8028ee8 <__sflush_r+0x7c>
 8028ee6:	6560      	str	r0, [r4, #84]	; 0x54
 8028ee8:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8028eea:	602f      	str	r7, [r5, #0]
 8028eec:	2900      	cmp	r1, #0
 8028eee:	d0ca      	beq.n	8028e86 <__sflush_r+0x1a>
 8028ef0:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8028ef4:	4299      	cmp	r1, r3
 8028ef6:	d002      	beq.n	8028efe <__sflush_r+0x92>
 8028ef8:	4628      	mov	r0, r5
 8028efa:	f7fb ffd9 	bl	8024eb0 <_free_r>
 8028efe:	2000      	movs	r0, #0
 8028f00:	6360      	str	r0, [r4, #52]	; 0x34
 8028f02:	e7c1      	b.n	8028e88 <__sflush_r+0x1c>
 8028f04:	6a21      	ldr	r1, [r4, #32]
 8028f06:	2301      	movs	r3, #1
 8028f08:	4628      	mov	r0, r5
 8028f0a:	47b0      	blx	r6
 8028f0c:	1c41      	adds	r1, r0, #1
 8028f0e:	d1c7      	bne.n	8028ea0 <__sflush_r+0x34>
 8028f10:	682b      	ldr	r3, [r5, #0]
 8028f12:	2b00      	cmp	r3, #0
 8028f14:	d0c4      	beq.n	8028ea0 <__sflush_r+0x34>
 8028f16:	2b1d      	cmp	r3, #29
 8028f18:	d001      	beq.n	8028f1e <__sflush_r+0xb2>
 8028f1a:	2b16      	cmp	r3, #22
 8028f1c:	d101      	bne.n	8028f22 <__sflush_r+0xb6>
 8028f1e:	602f      	str	r7, [r5, #0]
 8028f20:	e7b1      	b.n	8028e86 <__sflush_r+0x1a>
 8028f22:	89a3      	ldrh	r3, [r4, #12]
 8028f24:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8028f28:	81a3      	strh	r3, [r4, #12]
 8028f2a:	e7ad      	b.n	8028e88 <__sflush_r+0x1c>
 8028f2c:	690f      	ldr	r7, [r1, #16]
 8028f2e:	2f00      	cmp	r7, #0
 8028f30:	d0a9      	beq.n	8028e86 <__sflush_r+0x1a>
 8028f32:	0793      	lsls	r3, r2, #30
 8028f34:	680e      	ldr	r6, [r1, #0]
 8028f36:	bf08      	it	eq
 8028f38:	694b      	ldreq	r3, [r1, #20]
 8028f3a:	600f      	str	r7, [r1, #0]
 8028f3c:	bf18      	it	ne
 8028f3e:	2300      	movne	r3, #0
 8028f40:	eba6 0807 	sub.w	r8, r6, r7
 8028f44:	608b      	str	r3, [r1, #8]
 8028f46:	f1b8 0f00 	cmp.w	r8, #0
 8028f4a:	dd9c      	ble.n	8028e86 <__sflush_r+0x1a>
 8028f4c:	6a21      	ldr	r1, [r4, #32]
 8028f4e:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8028f50:	4643      	mov	r3, r8
 8028f52:	463a      	mov	r2, r7
 8028f54:	4628      	mov	r0, r5
 8028f56:	47b0      	blx	r6
 8028f58:	2800      	cmp	r0, #0
 8028f5a:	dc06      	bgt.n	8028f6a <__sflush_r+0xfe>
 8028f5c:	89a3      	ldrh	r3, [r4, #12]
 8028f5e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8028f62:	81a3      	strh	r3, [r4, #12]
 8028f64:	f04f 30ff 	mov.w	r0, #4294967295
 8028f68:	e78e      	b.n	8028e88 <__sflush_r+0x1c>
 8028f6a:	4407      	add	r7, r0
 8028f6c:	eba8 0800 	sub.w	r8, r8, r0
 8028f70:	e7e9      	b.n	8028f46 <__sflush_r+0xda>
 8028f72:	bf00      	nop
 8028f74:	20400001 	.word	0x20400001

08028f78 <_fflush_r>:
 8028f78:	b538      	push	{r3, r4, r5, lr}
 8028f7a:	690b      	ldr	r3, [r1, #16]
 8028f7c:	4605      	mov	r5, r0
 8028f7e:	460c      	mov	r4, r1
 8028f80:	b913      	cbnz	r3, 8028f88 <_fflush_r+0x10>
 8028f82:	2500      	movs	r5, #0
 8028f84:	4628      	mov	r0, r5
 8028f86:	bd38      	pop	{r3, r4, r5, pc}
 8028f88:	b118      	cbz	r0, 8028f92 <_fflush_r+0x1a>
 8028f8a:	6983      	ldr	r3, [r0, #24]
 8028f8c:	b90b      	cbnz	r3, 8028f92 <_fflush_r+0x1a>
 8028f8e:	f000 f887 	bl	80290a0 <__sinit>
 8028f92:	4b14      	ldr	r3, [pc, #80]	; (8028fe4 <_fflush_r+0x6c>)
 8028f94:	429c      	cmp	r4, r3
 8028f96:	d11b      	bne.n	8028fd0 <_fflush_r+0x58>
 8028f98:	686c      	ldr	r4, [r5, #4]
 8028f9a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8028f9e:	2b00      	cmp	r3, #0
 8028fa0:	d0ef      	beq.n	8028f82 <_fflush_r+0xa>
 8028fa2:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8028fa4:	07d0      	lsls	r0, r2, #31
 8028fa6:	d404      	bmi.n	8028fb2 <_fflush_r+0x3a>
 8028fa8:	0599      	lsls	r1, r3, #22
 8028faa:	d402      	bmi.n	8028fb2 <_fflush_r+0x3a>
 8028fac:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8028fae:	f7fe fe80 	bl	8027cb2 <__retarget_lock_acquire_recursive>
 8028fb2:	4628      	mov	r0, r5
 8028fb4:	4621      	mov	r1, r4
 8028fb6:	f7ff ff59 	bl	8028e6c <__sflush_r>
 8028fba:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8028fbc:	07da      	lsls	r2, r3, #31
 8028fbe:	4605      	mov	r5, r0
 8028fc0:	d4e0      	bmi.n	8028f84 <_fflush_r+0xc>
 8028fc2:	89a3      	ldrh	r3, [r4, #12]
 8028fc4:	059b      	lsls	r3, r3, #22
 8028fc6:	d4dd      	bmi.n	8028f84 <_fflush_r+0xc>
 8028fc8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8028fca:	f7fe fe74 	bl	8027cb6 <__retarget_lock_release_recursive>
 8028fce:	e7d9      	b.n	8028f84 <_fflush_r+0xc>
 8028fd0:	4b05      	ldr	r3, [pc, #20]	; (8028fe8 <_fflush_r+0x70>)
 8028fd2:	429c      	cmp	r4, r3
 8028fd4:	d101      	bne.n	8028fda <_fflush_r+0x62>
 8028fd6:	68ac      	ldr	r4, [r5, #8]
 8028fd8:	e7df      	b.n	8028f9a <_fflush_r+0x22>
 8028fda:	4b04      	ldr	r3, [pc, #16]	; (8028fec <_fflush_r+0x74>)
 8028fdc:	429c      	cmp	r4, r3
 8028fde:	bf08      	it	eq
 8028fe0:	68ec      	ldreq	r4, [r5, #12]
 8028fe2:	e7da      	b.n	8028f9a <_fflush_r+0x22>
 8028fe4:	0802a7c4 	.word	0x0802a7c4
 8028fe8:	0802a7e4 	.word	0x0802a7e4
 8028fec:	0802a7a4 	.word	0x0802a7a4

08028ff0 <std>:
 8028ff0:	2300      	movs	r3, #0
 8028ff2:	b510      	push	{r4, lr}
 8028ff4:	4604      	mov	r4, r0
 8028ff6:	e9c0 3300 	strd	r3, r3, [r0]
 8028ffa:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8028ffe:	6083      	str	r3, [r0, #8]
 8029000:	8181      	strh	r1, [r0, #12]
 8029002:	6643      	str	r3, [r0, #100]	; 0x64
 8029004:	81c2      	strh	r2, [r0, #14]
 8029006:	6183      	str	r3, [r0, #24]
 8029008:	4619      	mov	r1, r3
 802900a:	2208      	movs	r2, #8
 802900c:	305c      	adds	r0, #92	; 0x5c
 802900e:	f7fb ff47 	bl	8024ea0 <memset>
 8029012:	4b05      	ldr	r3, [pc, #20]	; (8029028 <std+0x38>)
 8029014:	6263      	str	r3, [r4, #36]	; 0x24
 8029016:	4b05      	ldr	r3, [pc, #20]	; (802902c <std+0x3c>)
 8029018:	62a3      	str	r3, [r4, #40]	; 0x28
 802901a:	4b05      	ldr	r3, [pc, #20]	; (8029030 <std+0x40>)
 802901c:	62e3      	str	r3, [r4, #44]	; 0x2c
 802901e:	4b05      	ldr	r3, [pc, #20]	; (8029034 <std+0x44>)
 8029020:	6224      	str	r4, [r4, #32]
 8029022:	6323      	str	r3, [r4, #48]	; 0x30
 8029024:	bd10      	pop	{r4, pc}
 8029026:	bf00      	nop
 8029028:	080292b5 	.word	0x080292b5
 802902c:	080292d7 	.word	0x080292d7
 8029030:	0802930f 	.word	0x0802930f
 8029034:	08029333 	.word	0x08029333

08029038 <_cleanup_r>:
 8029038:	4901      	ldr	r1, [pc, #4]	; (8029040 <_cleanup_r+0x8>)
 802903a:	f000 b8af 	b.w	802919c <_fwalk_reent>
 802903e:	bf00      	nop
 8029040:	08028f79 	.word	0x08028f79

08029044 <__sfmoreglue>:
 8029044:	b570      	push	{r4, r5, r6, lr}
 8029046:	1e4a      	subs	r2, r1, #1
 8029048:	2568      	movs	r5, #104	; 0x68
 802904a:	4355      	muls	r5, r2
 802904c:	460e      	mov	r6, r1
 802904e:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8029052:	f7fb ff7d 	bl	8024f50 <_malloc_r>
 8029056:	4604      	mov	r4, r0
 8029058:	b140      	cbz	r0, 802906c <__sfmoreglue+0x28>
 802905a:	2100      	movs	r1, #0
 802905c:	e9c0 1600 	strd	r1, r6, [r0]
 8029060:	300c      	adds	r0, #12
 8029062:	60a0      	str	r0, [r4, #8]
 8029064:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8029068:	f7fb ff1a 	bl	8024ea0 <memset>
 802906c:	4620      	mov	r0, r4
 802906e:	bd70      	pop	{r4, r5, r6, pc}

08029070 <__sfp_lock_acquire>:
 8029070:	4801      	ldr	r0, [pc, #4]	; (8029078 <__sfp_lock_acquire+0x8>)
 8029072:	f7fe be1e 	b.w	8027cb2 <__retarget_lock_acquire_recursive>
 8029076:	bf00      	nop
 8029078:	200008e8 	.word	0x200008e8

0802907c <__sfp_lock_release>:
 802907c:	4801      	ldr	r0, [pc, #4]	; (8029084 <__sfp_lock_release+0x8>)
 802907e:	f7fe be1a 	b.w	8027cb6 <__retarget_lock_release_recursive>
 8029082:	bf00      	nop
 8029084:	200008e8 	.word	0x200008e8

08029088 <__sinit_lock_acquire>:
 8029088:	4801      	ldr	r0, [pc, #4]	; (8029090 <__sinit_lock_acquire+0x8>)
 802908a:	f7fe be12 	b.w	8027cb2 <__retarget_lock_acquire_recursive>
 802908e:	bf00      	nop
 8029090:	200008e7 	.word	0x200008e7

08029094 <__sinit_lock_release>:
 8029094:	4801      	ldr	r0, [pc, #4]	; (802909c <__sinit_lock_release+0x8>)
 8029096:	f7fe be0e 	b.w	8027cb6 <__retarget_lock_release_recursive>
 802909a:	bf00      	nop
 802909c:	200008e7 	.word	0x200008e7

080290a0 <__sinit>:
 80290a0:	b510      	push	{r4, lr}
 80290a2:	4604      	mov	r4, r0
 80290a4:	f7ff fff0 	bl	8029088 <__sinit_lock_acquire>
 80290a8:	69a3      	ldr	r3, [r4, #24]
 80290aa:	b11b      	cbz	r3, 80290b4 <__sinit+0x14>
 80290ac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80290b0:	f7ff bff0 	b.w	8029094 <__sinit_lock_release>
 80290b4:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 80290b8:	6523      	str	r3, [r4, #80]	; 0x50
 80290ba:	4b13      	ldr	r3, [pc, #76]	; (8029108 <__sinit+0x68>)
 80290bc:	4a13      	ldr	r2, [pc, #76]	; (802910c <__sinit+0x6c>)
 80290be:	681b      	ldr	r3, [r3, #0]
 80290c0:	62a2      	str	r2, [r4, #40]	; 0x28
 80290c2:	42a3      	cmp	r3, r4
 80290c4:	bf04      	itt	eq
 80290c6:	2301      	moveq	r3, #1
 80290c8:	61a3      	streq	r3, [r4, #24]
 80290ca:	4620      	mov	r0, r4
 80290cc:	f000 f820 	bl	8029110 <__sfp>
 80290d0:	6060      	str	r0, [r4, #4]
 80290d2:	4620      	mov	r0, r4
 80290d4:	f000 f81c 	bl	8029110 <__sfp>
 80290d8:	60a0      	str	r0, [r4, #8]
 80290da:	4620      	mov	r0, r4
 80290dc:	f000 f818 	bl	8029110 <__sfp>
 80290e0:	2200      	movs	r2, #0
 80290e2:	60e0      	str	r0, [r4, #12]
 80290e4:	2104      	movs	r1, #4
 80290e6:	6860      	ldr	r0, [r4, #4]
 80290e8:	f7ff ff82 	bl	8028ff0 <std>
 80290ec:	68a0      	ldr	r0, [r4, #8]
 80290ee:	2201      	movs	r2, #1
 80290f0:	2109      	movs	r1, #9
 80290f2:	f7ff ff7d 	bl	8028ff0 <std>
 80290f6:	68e0      	ldr	r0, [r4, #12]
 80290f8:	2202      	movs	r2, #2
 80290fa:	2112      	movs	r1, #18
 80290fc:	f7ff ff78 	bl	8028ff0 <std>
 8029100:	2301      	movs	r3, #1
 8029102:	61a3      	str	r3, [r4, #24]
 8029104:	e7d2      	b.n	80290ac <__sinit+0xc>
 8029106:	bf00      	nop
 8029108:	0802a358 	.word	0x0802a358
 802910c:	08029039 	.word	0x08029039

08029110 <__sfp>:
 8029110:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8029112:	4607      	mov	r7, r0
 8029114:	f7ff ffac 	bl	8029070 <__sfp_lock_acquire>
 8029118:	4b1e      	ldr	r3, [pc, #120]	; (8029194 <__sfp+0x84>)
 802911a:	681e      	ldr	r6, [r3, #0]
 802911c:	69b3      	ldr	r3, [r6, #24]
 802911e:	b913      	cbnz	r3, 8029126 <__sfp+0x16>
 8029120:	4630      	mov	r0, r6
 8029122:	f7ff ffbd 	bl	80290a0 <__sinit>
 8029126:	3648      	adds	r6, #72	; 0x48
 8029128:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 802912c:	3b01      	subs	r3, #1
 802912e:	d503      	bpl.n	8029138 <__sfp+0x28>
 8029130:	6833      	ldr	r3, [r6, #0]
 8029132:	b30b      	cbz	r3, 8029178 <__sfp+0x68>
 8029134:	6836      	ldr	r6, [r6, #0]
 8029136:	e7f7      	b.n	8029128 <__sfp+0x18>
 8029138:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 802913c:	b9d5      	cbnz	r5, 8029174 <__sfp+0x64>
 802913e:	4b16      	ldr	r3, [pc, #88]	; (8029198 <__sfp+0x88>)
 8029140:	60e3      	str	r3, [r4, #12]
 8029142:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8029146:	6665      	str	r5, [r4, #100]	; 0x64
 8029148:	f7fe fdb2 	bl	8027cb0 <__retarget_lock_init_recursive>
 802914c:	f7ff ff96 	bl	802907c <__sfp_lock_release>
 8029150:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8029154:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8029158:	6025      	str	r5, [r4, #0]
 802915a:	61a5      	str	r5, [r4, #24]
 802915c:	2208      	movs	r2, #8
 802915e:	4629      	mov	r1, r5
 8029160:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8029164:	f7fb fe9c 	bl	8024ea0 <memset>
 8029168:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 802916c:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8029170:	4620      	mov	r0, r4
 8029172:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8029174:	3468      	adds	r4, #104	; 0x68
 8029176:	e7d9      	b.n	802912c <__sfp+0x1c>
 8029178:	2104      	movs	r1, #4
 802917a:	4638      	mov	r0, r7
 802917c:	f7ff ff62 	bl	8029044 <__sfmoreglue>
 8029180:	4604      	mov	r4, r0
 8029182:	6030      	str	r0, [r6, #0]
 8029184:	2800      	cmp	r0, #0
 8029186:	d1d5      	bne.n	8029134 <__sfp+0x24>
 8029188:	f7ff ff78 	bl	802907c <__sfp_lock_release>
 802918c:	230c      	movs	r3, #12
 802918e:	603b      	str	r3, [r7, #0]
 8029190:	e7ee      	b.n	8029170 <__sfp+0x60>
 8029192:	bf00      	nop
 8029194:	0802a358 	.word	0x0802a358
 8029198:	ffff0001 	.word	0xffff0001

0802919c <_fwalk_reent>:
 802919c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80291a0:	4606      	mov	r6, r0
 80291a2:	4688      	mov	r8, r1
 80291a4:	f100 0448 	add.w	r4, r0, #72	; 0x48
 80291a8:	2700      	movs	r7, #0
 80291aa:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80291ae:	f1b9 0901 	subs.w	r9, r9, #1
 80291b2:	d505      	bpl.n	80291c0 <_fwalk_reent+0x24>
 80291b4:	6824      	ldr	r4, [r4, #0]
 80291b6:	2c00      	cmp	r4, #0
 80291b8:	d1f7      	bne.n	80291aa <_fwalk_reent+0xe>
 80291ba:	4638      	mov	r0, r7
 80291bc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80291c0:	89ab      	ldrh	r3, [r5, #12]
 80291c2:	2b01      	cmp	r3, #1
 80291c4:	d907      	bls.n	80291d6 <_fwalk_reent+0x3a>
 80291c6:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80291ca:	3301      	adds	r3, #1
 80291cc:	d003      	beq.n	80291d6 <_fwalk_reent+0x3a>
 80291ce:	4629      	mov	r1, r5
 80291d0:	4630      	mov	r0, r6
 80291d2:	47c0      	blx	r8
 80291d4:	4307      	orrs	r7, r0
 80291d6:	3568      	adds	r5, #104	; 0x68
 80291d8:	e7e9      	b.n	80291ae <_fwalk_reent+0x12>

080291da <__swhatbuf_r>:
 80291da:	b570      	push	{r4, r5, r6, lr}
 80291dc:	460e      	mov	r6, r1
 80291de:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80291e2:	2900      	cmp	r1, #0
 80291e4:	b096      	sub	sp, #88	; 0x58
 80291e6:	4614      	mov	r4, r2
 80291e8:	461d      	mov	r5, r3
 80291ea:	da07      	bge.n	80291fc <__swhatbuf_r+0x22>
 80291ec:	2300      	movs	r3, #0
 80291ee:	602b      	str	r3, [r5, #0]
 80291f0:	89b3      	ldrh	r3, [r6, #12]
 80291f2:	061a      	lsls	r2, r3, #24
 80291f4:	d410      	bmi.n	8029218 <__swhatbuf_r+0x3e>
 80291f6:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80291fa:	e00e      	b.n	802921a <__swhatbuf_r+0x40>
 80291fc:	466a      	mov	r2, sp
 80291fe:	f000 f8bf 	bl	8029380 <_fstat_r>
 8029202:	2800      	cmp	r0, #0
 8029204:	dbf2      	blt.n	80291ec <__swhatbuf_r+0x12>
 8029206:	9a01      	ldr	r2, [sp, #4]
 8029208:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 802920c:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8029210:	425a      	negs	r2, r3
 8029212:	415a      	adcs	r2, r3
 8029214:	602a      	str	r2, [r5, #0]
 8029216:	e7ee      	b.n	80291f6 <__swhatbuf_r+0x1c>
 8029218:	2340      	movs	r3, #64	; 0x40
 802921a:	2000      	movs	r0, #0
 802921c:	6023      	str	r3, [r4, #0]
 802921e:	b016      	add	sp, #88	; 0x58
 8029220:	bd70      	pop	{r4, r5, r6, pc}
	...

08029224 <__smakebuf_r>:
 8029224:	898b      	ldrh	r3, [r1, #12]
 8029226:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8029228:	079d      	lsls	r5, r3, #30
 802922a:	4606      	mov	r6, r0
 802922c:	460c      	mov	r4, r1
 802922e:	d507      	bpl.n	8029240 <__smakebuf_r+0x1c>
 8029230:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8029234:	6023      	str	r3, [r4, #0]
 8029236:	6123      	str	r3, [r4, #16]
 8029238:	2301      	movs	r3, #1
 802923a:	6163      	str	r3, [r4, #20]
 802923c:	b002      	add	sp, #8
 802923e:	bd70      	pop	{r4, r5, r6, pc}
 8029240:	ab01      	add	r3, sp, #4
 8029242:	466a      	mov	r2, sp
 8029244:	f7ff ffc9 	bl	80291da <__swhatbuf_r>
 8029248:	9900      	ldr	r1, [sp, #0]
 802924a:	4605      	mov	r5, r0
 802924c:	4630      	mov	r0, r6
 802924e:	f7fb fe7f 	bl	8024f50 <_malloc_r>
 8029252:	b948      	cbnz	r0, 8029268 <__smakebuf_r+0x44>
 8029254:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8029258:	059a      	lsls	r2, r3, #22
 802925a:	d4ef      	bmi.n	802923c <__smakebuf_r+0x18>
 802925c:	f023 0303 	bic.w	r3, r3, #3
 8029260:	f043 0302 	orr.w	r3, r3, #2
 8029264:	81a3      	strh	r3, [r4, #12]
 8029266:	e7e3      	b.n	8029230 <__smakebuf_r+0xc>
 8029268:	4b0d      	ldr	r3, [pc, #52]	; (80292a0 <__smakebuf_r+0x7c>)
 802926a:	62b3      	str	r3, [r6, #40]	; 0x28
 802926c:	89a3      	ldrh	r3, [r4, #12]
 802926e:	6020      	str	r0, [r4, #0]
 8029270:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8029274:	81a3      	strh	r3, [r4, #12]
 8029276:	9b00      	ldr	r3, [sp, #0]
 8029278:	6163      	str	r3, [r4, #20]
 802927a:	9b01      	ldr	r3, [sp, #4]
 802927c:	6120      	str	r0, [r4, #16]
 802927e:	b15b      	cbz	r3, 8029298 <__smakebuf_r+0x74>
 8029280:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8029284:	4630      	mov	r0, r6
 8029286:	f000 f88d 	bl	80293a4 <_isatty_r>
 802928a:	b128      	cbz	r0, 8029298 <__smakebuf_r+0x74>
 802928c:	89a3      	ldrh	r3, [r4, #12]
 802928e:	f023 0303 	bic.w	r3, r3, #3
 8029292:	f043 0301 	orr.w	r3, r3, #1
 8029296:	81a3      	strh	r3, [r4, #12]
 8029298:	89a0      	ldrh	r0, [r4, #12]
 802929a:	4305      	orrs	r5, r0
 802929c:	81a5      	strh	r5, [r4, #12]
 802929e:	e7cd      	b.n	802923c <__smakebuf_r+0x18>
 80292a0:	08029039 	.word	0x08029039

080292a4 <_malloc_usable_size_r>:
 80292a4:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80292a8:	1f18      	subs	r0, r3, #4
 80292aa:	2b00      	cmp	r3, #0
 80292ac:	bfbc      	itt	lt
 80292ae:	580b      	ldrlt	r3, [r1, r0]
 80292b0:	18c0      	addlt	r0, r0, r3
 80292b2:	4770      	bx	lr

080292b4 <__sread>:
 80292b4:	b510      	push	{r4, lr}
 80292b6:	460c      	mov	r4, r1
 80292b8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80292bc:	f000 f894 	bl	80293e8 <_read_r>
 80292c0:	2800      	cmp	r0, #0
 80292c2:	bfab      	itete	ge
 80292c4:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80292c6:	89a3      	ldrhlt	r3, [r4, #12]
 80292c8:	181b      	addge	r3, r3, r0
 80292ca:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80292ce:	bfac      	ite	ge
 80292d0:	6563      	strge	r3, [r4, #84]	; 0x54
 80292d2:	81a3      	strhlt	r3, [r4, #12]
 80292d4:	bd10      	pop	{r4, pc}

080292d6 <__swrite>:
 80292d6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80292da:	461f      	mov	r7, r3
 80292dc:	898b      	ldrh	r3, [r1, #12]
 80292de:	05db      	lsls	r3, r3, #23
 80292e0:	4605      	mov	r5, r0
 80292e2:	460c      	mov	r4, r1
 80292e4:	4616      	mov	r6, r2
 80292e6:	d505      	bpl.n	80292f4 <__swrite+0x1e>
 80292e8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80292ec:	2302      	movs	r3, #2
 80292ee:	2200      	movs	r2, #0
 80292f0:	f000 f868 	bl	80293c4 <_lseek_r>
 80292f4:	89a3      	ldrh	r3, [r4, #12]
 80292f6:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80292fa:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80292fe:	81a3      	strh	r3, [r4, #12]
 8029300:	4632      	mov	r2, r6
 8029302:	463b      	mov	r3, r7
 8029304:	4628      	mov	r0, r5
 8029306:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802930a:	f000 b817 	b.w	802933c <_write_r>

0802930e <__sseek>:
 802930e:	b510      	push	{r4, lr}
 8029310:	460c      	mov	r4, r1
 8029312:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8029316:	f000 f855 	bl	80293c4 <_lseek_r>
 802931a:	1c43      	adds	r3, r0, #1
 802931c:	89a3      	ldrh	r3, [r4, #12]
 802931e:	bf15      	itete	ne
 8029320:	6560      	strne	r0, [r4, #84]	; 0x54
 8029322:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8029326:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 802932a:	81a3      	strheq	r3, [r4, #12]
 802932c:	bf18      	it	ne
 802932e:	81a3      	strhne	r3, [r4, #12]
 8029330:	bd10      	pop	{r4, pc}

08029332 <__sclose>:
 8029332:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8029336:	f000 b813 	b.w	8029360 <_close_r>
	...

0802933c <_write_r>:
 802933c:	b538      	push	{r3, r4, r5, lr}
 802933e:	4d07      	ldr	r5, [pc, #28]	; (802935c <_write_r+0x20>)
 8029340:	4604      	mov	r4, r0
 8029342:	4608      	mov	r0, r1
 8029344:	4611      	mov	r1, r2
 8029346:	2200      	movs	r2, #0
 8029348:	602a      	str	r2, [r5, #0]
 802934a:	461a      	mov	r2, r3
 802934c:	f7f5 fda3 	bl	801ee96 <_write>
 8029350:	1c43      	adds	r3, r0, #1
 8029352:	d102      	bne.n	802935a <_write_r+0x1e>
 8029354:	682b      	ldr	r3, [r5, #0]
 8029356:	b103      	cbz	r3, 802935a <_write_r+0x1e>
 8029358:	6023      	str	r3, [r4, #0]
 802935a:	bd38      	pop	{r3, r4, r5, pc}
 802935c:	200008f0 	.word	0x200008f0

08029360 <_close_r>:
 8029360:	b538      	push	{r3, r4, r5, lr}
 8029362:	4d06      	ldr	r5, [pc, #24]	; (802937c <_close_r+0x1c>)
 8029364:	2300      	movs	r3, #0
 8029366:	4604      	mov	r4, r0
 8029368:	4608      	mov	r0, r1
 802936a:	602b      	str	r3, [r5, #0]
 802936c:	f7f5 fdaf 	bl	801eece <_close>
 8029370:	1c43      	adds	r3, r0, #1
 8029372:	d102      	bne.n	802937a <_close_r+0x1a>
 8029374:	682b      	ldr	r3, [r5, #0]
 8029376:	b103      	cbz	r3, 802937a <_close_r+0x1a>
 8029378:	6023      	str	r3, [r4, #0]
 802937a:	bd38      	pop	{r3, r4, r5, pc}
 802937c:	200008f0 	.word	0x200008f0

08029380 <_fstat_r>:
 8029380:	b538      	push	{r3, r4, r5, lr}
 8029382:	4d07      	ldr	r5, [pc, #28]	; (80293a0 <_fstat_r+0x20>)
 8029384:	2300      	movs	r3, #0
 8029386:	4604      	mov	r4, r0
 8029388:	4608      	mov	r0, r1
 802938a:	4611      	mov	r1, r2
 802938c:	602b      	str	r3, [r5, #0]
 802938e:	f7f5 fdaa 	bl	801eee6 <_fstat>
 8029392:	1c43      	adds	r3, r0, #1
 8029394:	d102      	bne.n	802939c <_fstat_r+0x1c>
 8029396:	682b      	ldr	r3, [r5, #0]
 8029398:	b103      	cbz	r3, 802939c <_fstat_r+0x1c>
 802939a:	6023      	str	r3, [r4, #0]
 802939c:	bd38      	pop	{r3, r4, r5, pc}
 802939e:	bf00      	nop
 80293a0:	200008f0 	.word	0x200008f0

080293a4 <_isatty_r>:
 80293a4:	b538      	push	{r3, r4, r5, lr}
 80293a6:	4d06      	ldr	r5, [pc, #24]	; (80293c0 <_isatty_r+0x1c>)
 80293a8:	2300      	movs	r3, #0
 80293aa:	4604      	mov	r4, r0
 80293ac:	4608      	mov	r0, r1
 80293ae:	602b      	str	r3, [r5, #0]
 80293b0:	f7f5 fda9 	bl	801ef06 <_isatty>
 80293b4:	1c43      	adds	r3, r0, #1
 80293b6:	d102      	bne.n	80293be <_isatty_r+0x1a>
 80293b8:	682b      	ldr	r3, [r5, #0]
 80293ba:	b103      	cbz	r3, 80293be <_isatty_r+0x1a>
 80293bc:	6023      	str	r3, [r4, #0]
 80293be:	bd38      	pop	{r3, r4, r5, pc}
 80293c0:	200008f0 	.word	0x200008f0

080293c4 <_lseek_r>:
 80293c4:	b538      	push	{r3, r4, r5, lr}
 80293c6:	4d07      	ldr	r5, [pc, #28]	; (80293e4 <_lseek_r+0x20>)
 80293c8:	4604      	mov	r4, r0
 80293ca:	4608      	mov	r0, r1
 80293cc:	4611      	mov	r1, r2
 80293ce:	2200      	movs	r2, #0
 80293d0:	602a      	str	r2, [r5, #0]
 80293d2:	461a      	mov	r2, r3
 80293d4:	f7f5 fda2 	bl	801ef1c <_lseek>
 80293d8:	1c43      	adds	r3, r0, #1
 80293da:	d102      	bne.n	80293e2 <_lseek_r+0x1e>
 80293dc:	682b      	ldr	r3, [r5, #0]
 80293de:	b103      	cbz	r3, 80293e2 <_lseek_r+0x1e>
 80293e0:	6023      	str	r3, [r4, #0]
 80293e2:	bd38      	pop	{r3, r4, r5, pc}
 80293e4:	200008f0 	.word	0x200008f0

080293e8 <_read_r>:
 80293e8:	b538      	push	{r3, r4, r5, lr}
 80293ea:	4d07      	ldr	r5, [pc, #28]	; (8029408 <_read_r+0x20>)
 80293ec:	4604      	mov	r4, r0
 80293ee:	4608      	mov	r0, r1
 80293f0:	4611      	mov	r1, r2
 80293f2:	2200      	movs	r2, #0
 80293f4:	602a      	str	r2, [r5, #0]
 80293f6:	461a      	mov	r2, r3
 80293f8:	f7f5 fd30 	bl	801ee5c <_read>
 80293fc:	1c43      	adds	r3, r0, #1
 80293fe:	d102      	bne.n	8029406 <_read_r+0x1e>
 8029400:	682b      	ldr	r3, [r5, #0]
 8029402:	b103      	cbz	r3, 8029406 <_read_r+0x1e>
 8029404:	6023      	str	r3, [r4, #0]
 8029406:	bd38      	pop	{r3, r4, r5, pc}
 8029408:	200008f0 	.word	0x200008f0

0802940c <_init>:
 802940c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802940e:	bf00      	nop
 8029410:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8029412:	bc08      	pop	{r3}
 8029414:	469e      	mov	lr, r3
 8029416:	4770      	bx	lr

08029418 <_fini>:
 8029418:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802941a:	bf00      	nop
 802941c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802941e:	bc08      	pop	{r3}
 8029420:	469e      	mov	lr, r3
 8029422:	4770      	bx	lr
